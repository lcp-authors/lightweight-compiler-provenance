
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000064d8 <.init>:
    64d8:	stp	x29, x30, [sp, #-16]!
    64dc:	mov	x29, sp
    64e0:	bl	6b60 <PyFloat_FromString@plt+0x10>
    64e4:	ldp	x29, x30, [sp], #16
    64e8:	ret

Disassembly of section .plt:

00000000000064f0 <memcpy@plt-0x20>:
    64f0:	stp	x16, x30, [sp, #-16]!
    64f4:	adrp	x16, 60000 <PyInit__decimal@@Base+0x48328>
    64f8:	ldr	x17, [x16, #4088]
    64fc:	add	x16, x16, #0xff8
    6500:	br	x17
    6504:	nop
    6508:	nop
    650c:	nop

0000000000006510 <memcpy@plt>:
    6510:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16]
    6518:	add	x16, x16, #0x0
    651c:	br	x17

0000000000006520 <PyUnicode_FromFormat@plt>:
    6520:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #8]
    6528:	add	x16, x16, #0x8
    652c:	br	x17

0000000000006530 <memmove@plt>:
    6530:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #16]
    6538:	add	x16, x16, #0x10
    653c:	br	x17

0000000000006540 <PyList_New@plt>:
    6540:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #24]
    6548:	add	x16, x16, #0x18
    654c:	br	x17

0000000000006550 <_PyUnicode_Ready@plt>:
    6550:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #32]
    6558:	add	x16, x16, #0x20
    655c:	br	x17

0000000000006560 <PyDict_SetItemString@plt>:
    6560:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #40]
    6568:	add	x16, x16, #0x28
    656c:	br	x17

0000000000006570 <strlen@plt>:
    6570:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #48]
    6578:	add	x16, x16, #0x30
    657c:	br	x17

0000000000006580 <PyDict_Size@plt>:
    6580:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #56]
    6588:	add	x16, x16, #0x38
    658c:	br	x17

0000000000006590 <copysign@plt>:
    6590:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #64]
    6598:	add	x16, x16, #0x40
    659c:	br	x17

00000000000065a0 <mbstowcs@plt>:
    65a0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #72]
    65a8:	add	x16, x16, #0x48
    65ac:	br	x17

00000000000065b0 <PyModule_AddIntConstant@plt>:
    65b0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #80]
    65b8:	add	x16, x16, #0x50
    65bc:	br	x17

00000000000065c0 <raise@plt>:
    65c0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #88]
    65c8:	add	x16, x16, #0x58
    65cc:	br	x17

00000000000065d0 <PyArg_ParseTupleAndKeywords@plt>:
    65d0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #96]
    65d8:	add	x16, x16, #0x60
    65dc:	br	x17

00000000000065e0 <PyList_AsTuple@plt>:
    65e0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #104]
    65e8:	add	x16, x16, #0x68
    65ec:	br	x17

00000000000065f0 <strtoll@plt>:
    65f0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #112]
    65f8:	add	x16, x16, #0x70
    65fc:	br	x17

0000000000006600 <PyObject_CallMethod@plt>:
    6600:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #120]
    6608:	add	x16, x16, #0x78
    660c:	br	x17

0000000000006610 <PyMem_Free@plt>:
    6610:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #128]
    6618:	add	x16, x16, #0x80
    661c:	br	x17

0000000000006620 <PyUnicode_FromWideChar@plt>:
    6620:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #136]
    6628:	add	x16, x16, #0x88
    662c:	br	x17

0000000000006630 <PyObject_GetAttrString@plt>:
    6630:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #144]
    6638:	add	x16, x16, #0x90
    663c:	br	x17

0000000000006640 <__cxa_finalize@plt>:
    6640:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #152]
    6648:	add	x16, x16, #0x98
    664c:	br	x17

0000000000006650 <_PyLong_New@plt>:
    6650:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #160]
    6658:	add	x16, x16, #0xa0
    665c:	br	x17

0000000000006660 <fputc@plt>:
    6660:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #168]
    6668:	add	x16, x16, #0xa8
    666c:	br	x17

0000000000006670 <PyUnicode_AsUTF8String@plt>:
    6670:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #176]
    6678:	add	x16, x16, #0xb0
    667c:	br	x17

0000000000006680 <_Py_Dealloc@plt>:
    6680:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #184]
    6688:	add	x16, x16, #0xb8
    668c:	br	x17

0000000000006690 <PyErr_NoMemory@plt>:
    6690:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #192]
    6698:	add	x16, x16, #0xc0
    669c:	br	x17

00000000000066a0 <PyErr_SetObject@plt>:
    66a0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #200]
    66a8:	add	x16, x16, #0xc8
    66ac:	br	x17

00000000000066b0 <snprintf@plt>:
    66b0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #208]
    66b8:	add	x16, x16, #0xd0
    66bc:	br	x17

00000000000066c0 <log10@plt>:
    66c0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #216]
    66c8:	add	x16, x16, #0xd8
    66cc:	br	x17

00000000000066d0 <localeconv@plt>:
    66d0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #224]
    66d8:	add	x16, x16, #0xe0
    66dc:	br	x17

00000000000066e0 <malloc@plt>:
    66e0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #232]
    66e8:	add	x16, x16, #0xe8
    66ec:	br	x17

00000000000066f0 <PyErr_SetString@plt>:
    66f0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #240]
    66f8:	add	x16, x16, #0xf0
    66fc:	br	x17

0000000000006700 <PyObject_IsInstance@plt>:
    6700:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #248]
    6708:	add	x16, x16, #0xf8
    670c:	br	x17

0000000000006710 <memset@plt>:
    6710:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #256]
    6718:	add	x16, x16, #0x100
    671c:	br	x17

0000000000006720 <PyContextVar_Set@plt>:
    6720:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #264]
    6728:	add	x16, x16, #0x108
    672c:	br	x17

0000000000006730 <PyObject_Free@plt>:
    6730:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #272]
    6738:	add	x16, x16, #0x110
    673c:	br	x17

0000000000006740 <PyLong_FromSsize_t@plt>:
    6740:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #280]
    6748:	add	x16, x16, #0x118
    674c:	br	x17

0000000000006750 <PyFloat_FromDouble@plt>:
    6750:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #288]
    6758:	add	x16, x16, #0x120
    675c:	br	x17

0000000000006760 <PyType_Ready@plt>:
    6760:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #296]
    6768:	add	x16, x16, #0x128
    676c:	br	x17

0000000000006770 <calloc@plt>:
    6770:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #304]
    6778:	add	x16, x16, #0x130
    677c:	br	x17

0000000000006780 <PyLong_FromLong@plt>:
    6780:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #312]
    6788:	add	x16, x16, #0x138
    678c:	br	x17

0000000000006790 <PyLong_AsSsize_t@plt>:
    6790:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #320]
    6798:	add	x16, x16, #0x140
    679c:	br	x17

00000000000067a0 <_PyLong_GCD@plt>:
    67a0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #328]
    67a8:	add	x16, x16, #0x148
    67ac:	br	x17

00000000000067b0 <PyErr_NewException@plt>:
    67b0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #336]
    67b8:	add	x16, x16, #0x150
    67bc:	br	x17

00000000000067c0 <realloc@plt>:
    67c0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #344]
    67c8:	add	x16, x16, #0x158
    67cc:	br	x17

00000000000067d0 <PyErr_Clear@plt>:
    67d0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #352]
    67d8:	add	x16, x16, #0x160
    67dc:	br	x17

00000000000067e0 <PyContextVar_Get@plt>:
    67e0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #360]
    67e8:	add	x16, x16, #0x168
    67ec:	br	x17

00000000000067f0 <PyBool_FromLong@plt>:
    67f0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #368]
    67f8:	add	x16, x16, #0x170
    67fc:	br	x17

0000000000006800 <PyContextVar_New@plt>:
    6800:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #376]
    6808:	add	x16, x16, #0x178
    680c:	br	x17

0000000000006810 <PyList_Append@plt>:
    6810:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #384]
    6818:	add	x16, x16, #0x180
    681c:	br	x17

0000000000006820 <__gmon_start__@plt>:
    6820:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #392]
    6828:	add	x16, x16, #0x188
    682c:	br	x17

0000000000006830 <PyObject_CallFunction@plt>:
    6830:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #400]
    6838:	add	x16, x16, #0x190
    683c:	br	x17

0000000000006840 <PyTuple_New@plt>:
    6840:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #408]
    6848:	add	x16, x16, #0x198
    684c:	br	x17

0000000000006850 <PyObject_GenericGetAttr@plt>:
    6850:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #416]
    6858:	add	x16, x16, #0x1a0
    685c:	br	x17

0000000000006860 <abort@plt>:
    6860:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #424]
    6868:	add	x16, x16, #0x1a8
    686c:	br	x17

0000000000006870 <Py_BuildValue@plt>:
    6870:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #432]
    6878:	add	x16, x16, #0x1b0
    687c:	br	x17

0000000000006880 <PyErr_Occurred@plt>:
    6880:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #440]
    6888:	add	x16, x16, #0x1b8
    688c:	br	x17

0000000000006890 <PyModule_Create2@plt>:
    6890:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #448]
    6898:	add	x16, x16, #0x1c0
    689c:	br	x17

00000000000068a0 <_PyUnicode_IsWhitespace@plt>:
    68a0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #456]
    68a8:	add	x16, x16, #0x1c8
    68ac:	br	x17

00000000000068b0 <puts@plt>:
    68b0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #464]
    68b8:	add	x16, x16, #0x1d0
    68bc:	br	x17

00000000000068c0 <PyLong_AsLong@plt>:
    68c0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #472]
    68c8:	add	x16, x16, #0x1d8
    68cc:	br	x17

00000000000068d0 <PyImport_ImportModule@plt>:
    68d0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #480]
    68d8:	add	x16, x16, #0x1e0
    68dc:	br	x17

00000000000068e0 <PyObject_CallObject@plt>:
    68e0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #488]
    68e8:	add	x16, x16, #0x1e8
    68ec:	br	x17

00000000000068f0 <PyObject_CallFunctionObjArgs@plt>:
    68f0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #496]
    68f8:	add	x16, x16, #0x1f0
    68fc:	br	x17

0000000000006900 <strcmp@plt>:
    6900:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #504]
    6908:	add	x16, x16, #0x1f8
    690c:	br	x17

0000000000006910 <PyDict_GetItemString@plt>:
    6910:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #512]
    6918:	add	x16, x16, #0x200
    691c:	br	x17

0000000000006920 <__ctype_b_loc@plt>:
    6920:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #520]
    6928:	add	x16, x16, #0x208
    692c:	br	x17

0000000000006930 <PyUnicode_CompareWithASCIIString@plt>:
    6930:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #528]
    6938:	add	x16, x16, #0x210
    693c:	br	x17

0000000000006940 <PyUnicode_DecodeUTF8@plt>:
    6940:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #536]
    6948:	add	x16, x16, #0x218
    694c:	br	x17

0000000000006950 <_PyUnicode_ToDecimalDigit@plt>:
    6950:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #544]
    6958:	add	x16, x16, #0x220
    695c:	br	x17

0000000000006960 <PyFloat_AsDouble@plt>:
    6960:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #552]
    6968:	add	x16, x16, #0x228
    696c:	br	x17

0000000000006970 <PyObject_IsTrue@plt>:
    6970:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #560]
    6978:	add	x16, x16, #0x230
    697c:	br	x17

0000000000006980 <PyArg_ParseTuple@plt>:
    6980:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #568]
    6988:	add	x16, x16, #0x238
    698c:	br	x17

0000000000006990 <free@plt>:
    6990:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #576]
    6998:	add	x16, x16, #0x240
    699c:	br	x17

00000000000069a0 <PyUnicode_Compare@plt>:
    69a0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #584]
    69a8:	add	x16, x16, #0x248
    69ac:	br	x17

00000000000069b0 <PyList_Size@plt>:
    69b0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #592]
    69b8:	add	x16, x16, #0x250
    69bc:	br	x17

00000000000069c0 <PyDict_New@plt>:
    69c0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #600]
    69c8:	add	x16, x16, #0x258
    69cc:	br	x17

00000000000069d0 <fwrite@plt>:
    69d0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #608]
    69d8:	add	x16, x16, #0x260
    69dc:	br	x17

00000000000069e0 <PyLong_FromUnsignedLong@plt>:
    69e0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #616]
    69e8:	add	x16, x16, #0x268
    69ec:	br	x17

00000000000069f0 <ceil@plt>:
    69f0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #624]
    69f8:	add	x16, x16, #0x270
    69fc:	br	x17

0000000000006a00 <_PyObject_New@plt>:
    6a00:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #632]
    6a08:	add	x16, x16, #0x278
    6a0c:	br	x17

0000000000006a10 <PyUnicode_FromString@plt>:
    6a10:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #640]
    6a18:	add	x16, x16, #0x280
    6a1c:	br	x17

0000000000006a20 <PyModule_AddStringConstant@plt>:
    6a20:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #648]
    6a28:	add	x16, x16, #0x288
    6a2c:	br	x17

0000000000006a30 <PyUnicode_InternFromString@plt>:
    6a30:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #656]
    6a38:	add	x16, x16, #0x290
    6a3c:	br	x17

0000000000006a40 <PyModule_AddObject@plt>:
    6a40:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #664]
    6a48:	add	x16, x16, #0x298
    6a4c:	br	x17

0000000000006a50 <PyDict_SetItem@plt>:
    6a50:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #672]
    6a58:	add	x16, x16, #0x2a0
    6a5c:	br	x17

0000000000006a60 <PyObject_GenericSetAttr@plt>:
    6a60:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #680]
    6a68:	add	x16, x16, #0x2a8
    6a6c:	br	x17

0000000000006a70 <PyType_IsSubtype@plt>:
    6a70:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #688]
    6a78:	add	x16, x16, #0x2b0
    6a7c:	br	x17

0000000000006a80 <PyUnicode_AsUTF8AndSize@plt>:
    6a80:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #696]
    6a88:	add	x16, x16, #0x2b8
    6a8c:	br	x17

0000000000006a90 <PyTuple_Size@plt>:
    6a90:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6a94:	ldr	x17, [x16, #704]
    6a98:	add	x16, x16, #0x2c0
    6a9c:	br	x17

0000000000006aa0 <PyComplex_AsCComplex@plt>:
    6aa0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6aa4:	ldr	x17, [x16, #712]
    6aa8:	add	x16, x16, #0x2c8
    6aac:	br	x17

0000000000006ab0 <PyComplex_FromDoubles@plt>:
    6ab0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6ab4:	ldr	x17, [x16, #720]
    6ab8:	add	x16, x16, #0x2d0
    6abc:	br	x17

0000000000006ac0 <PyErr_Format@plt>:
    6ac0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6ac4:	ldr	x17, [x16, #728]
    6ac8:	add	x16, x16, #0x2d8
    6acc:	br	x17

0000000000006ad0 <__errno_location@plt>:
    6ad0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6ad4:	ldr	x17, [x16, #736]
    6ad8:	add	x16, x16, #0x2e0
    6adc:	br	x17

0000000000006ae0 <tolower@plt>:
    6ae0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6ae4:	ldr	x17, [x16, #744]
    6ae8:	add	x16, x16, #0x2e8
    6aec:	br	x17

0000000000006af0 <PyList_GetItem@plt>:
    6af0:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6af4:	ldr	x17, [x16, #752]
    6af8:	add	x16, x16, #0x2f0
    6afc:	br	x17

0000000000006b00 <PyMem_Malloc@plt>:
    6b00:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b04:	ldr	x17, [x16, #760]
    6b08:	add	x16, x16, #0x2f8
    6b0c:	br	x17

0000000000006b10 <PyUnicode_New@plt>:
    6b10:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b14:	ldr	x17, [x16, #768]
    6b18:	add	x16, x16, #0x300
    6b1c:	br	x17

0000000000006b20 <PyTuple_Pack@plt>:
    6b20:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b24:	ldr	x17, [x16, #776]
    6b28:	add	x16, x16, #0x308
    6b2c:	br	x17

0000000000006b30 <fprintf@plt>:
    6b30:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b34:	ldr	x17, [x16, #784]
    6b38:	add	x16, x16, #0x310
    6b3c:	br	x17

0000000000006b40 <PyDict_GetItemWithError@plt>:
    6b40:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b44:	ldr	x17, [x16, #792]
    6b48:	add	x16, x16, #0x318
    6b4c:	br	x17

0000000000006b50 <PyFloat_FromString@plt>:
    6b50:	adrp	x16, 61000 <memcpy@GLIBC_2.17>
    6b54:	ldr	x17, [x16, #800]
    6b58:	add	x16, x16, #0x320
    6b5c:	br	x17

Disassembly of section .text:

0000000000006b60 <PyInit__decimal@@Base-0x11178>:
    6b60:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6b64:	ldr	x0, [x0, #3984]
    6b68:	cbz	x0, 6b70 <PyFloat_FromString@plt+0x20>
    6b6c:	b	6820 <__gmon_start__@plt>
    6b70:	ret
    6b74:	stp	x29, x30, [sp, #-32]!
    6b78:	mov	x29, sp
    6b7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6b80:	add	x0, x0, #0x708
    6b84:	str	x0, [sp, #24]
    6b88:	ldr	x0, [sp, #24]
    6b8c:	str	x0, [sp, #24]
    6b90:	ldr	x1, [sp, #24]
    6b94:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6b98:	add	x0, x0, #0x708
    6b9c:	cmp	x1, x0
    6ba0:	b.eq	6bd8 <PyFloat_FromString@plt+0x88>  // b.none
    6ba4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6ba8:	ldr	x0, [x0, #3856]
    6bac:	str	x0, [sp, #16]
    6bb0:	ldr	x0, [sp, #16]
    6bb4:	str	x0, [sp, #16]
    6bb8:	ldr	x0, [sp, #16]
    6bbc:	cmp	x0, #0x0
    6bc0:	b.eq	6bdc <PyFloat_FromString@plt+0x8c>  // b.none
    6bc4:	ldr	x1, [sp, #16]
    6bc8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6bcc:	add	x0, x0, #0x708
    6bd0:	blr	x1
    6bd4:	b	6bdc <PyFloat_FromString@plt+0x8c>
    6bd8:	nop
    6bdc:	ldp	x29, x30, [sp], #32
    6be0:	ret
    6be4:	stp	x29, x30, [sp, #-48]!
    6be8:	mov	x29, sp
    6bec:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6bf0:	add	x0, x0, #0x708
    6bf4:	str	x0, [sp, #40]
    6bf8:	ldr	x0, [sp, #40]
    6bfc:	str	x0, [sp, #40]
    6c00:	ldr	x1, [sp, #40]
    6c04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6c08:	add	x0, x0, #0x708
    6c0c:	sub	x0, x1, x0
    6c10:	asr	x0, x0, #3
    6c14:	lsr	x1, x0, #63
    6c18:	add	x0, x1, x0
    6c1c:	asr	x0, x0, #1
    6c20:	str	x0, [sp, #32]
    6c24:	ldr	x0, [sp, #32]
    6c28:	cmp	x0, #0x0
    6c2c:	b.eq	6c68 <PyFloat_FromString@plt+0x118>  // b.none
    6c30:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6c34:	ldr	x0, [x0, #4056]
    6c38:	str	x0, [sp, #24]
    6c3c:	ldr	x0, [sp, #24]
    6c40:	str	x0, [sp, #24]
    6c44:	ldr	x0, [sp, #24]
    6c48:	cmp	x0, #0x0
    6c4c:	b.eq	6c6c <PyFloat_FromString@plt+0x11c>  // b.none
    6c50:	ldr	x2, [sp, #24]
    6c54:	ldr	x1, [sp, #32]
    6c58:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6c5c:	add	x0, x0, #0x708
    6c60:	blr	x2
    6c64:	b	6c6c <PyFloat_FromString@plt+0x11c>
    6c68:	nop
    6c6c:	ldp	x29, x30, [sp], #48
    6c70:	ret
    6c74:	stp	x29, x30, [sp, #-16]!
    6c78:	mov	x29, sp
    6c7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6c80:	add	x0, x0, #0x708
    6c84:	ldrb	w0, [x0]
    6c88:	and	x0, x0, #0xff
    6c8c:	cmp	x0, #0x0
    6c90:	b.ne	6ccc <PyFloat_FromString@plt+0x17c>  // b.any
    6c94:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6c98:	ldr	x0, [x0, #3896]
    6c9c:	cmp	x0, #0x0
    6ca0:	b.eq	6cb4 <PyFloat_FromString@plt+0x164>  // b.none
    6ca4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    6ca8:	add	x0, x0, #0x328
    6cac:	ldr	x0, [x0]
    6cb0:	bl	6640 <__cxa_finalize@plt>
    6cb4:	bl	6b74 <PyFloat_FromString@plt+0x24>
    6cb8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    6cbc:	add	x0, x0, #0x708
    6cc0:	mov	w1, #0x1                   	// #1
    6cc4:	strb	w1, [x0]
    6cc8:	b	6cd0 <PyFloat_FromString@plt+0x180>
    6ccc:	nop
    6cd0:	ldp	x29, x30, [sp], #16
    6cd4:	ret
    6cd8:	stp	x29, x30, [sp, #-16]!
    6cdc:	mov	x29, sp
    6ce0:	bl	6be4 <PyFloat_FromString@plt+0x94>
    6ce4:	nop
    6ce8:	ldp	x29, x30, [sp], #16
    6cec:	ret
    6cf0:	sub	sp, sp, #0x10
    6cf4:	str	x0, [sp, #8]
    6cf8:	ldr	x0, [sp, #8]
    6cfc:	ldr	x0, [x0]
    6d00:	add	x1, x0, #0x1
    6d04:	ldr	x0, [sp, #8]
    6d08:	str	x1, [x0]
    6d0c:	nop
    6d10:	add	sp, sp, #0x10
    6d14:	ret
    6d18:	stp	x29, x30, [sp, #-48]!
    6d1c:	mov	x29, sp
    6d20:	str	x0, [sp, #40]
    6d24:	str	w1, [sp, #36]
    6d28:	str	x2, [sp, #24]
    6d2c:	ldr	x0, [sp, #24]
    6d30:	ldr	x0, [x0]
    6d34:	sub	x1, x0, #0x1
    6d38:	ldr	x0, [sp, #24]
    6d3c:	str	x1, [x0]
    6d40:	ldr	x0, [sp, #24]
    6d44:	ldr	x0, [x0]
    6d48:	cmp	x0, #0x0
    6d4c:	b.ne	6d58 <PyFloat_FromString@plt+0x208>  // b.any
    6d50:	ldr	x0, [sp, #24]
    6d54:	bl	6680 <_Py_Dealloc@plt>
    6d58:	nop
    6d5c:	ldp	x29, x30, [sp], #48
    6d60:	ret
    6d64:	stp	x29, x30, [sp, #-32]!
    6d68:	mov	x29, sp
    6d6c:	str	x0, [sp, #24]
    6d70:	ldr	x0, [sp, #24]
    6d74:	cmp	x0, #0x0
    6d78:	b.eq	6d90 <PyFloat_FromString@plt+0x240>  // b.none
    6d7c:	ldr	x2, [sp, #24]
    6d80:	mov	w1, #0x21d                 	// #541
    6d84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x2a328>
    6d88:	add	x0, x0, #0x98
    6d8c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    6d90:	nop
    6d94:	ldp	x29, x30, [sp], #32
    6d98:	ret
    6d9c:	stp	x29, x30, [sp, #-16]!
    6da0:	mov	x29, sp
    6da4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6da8:	ldr	x0, [x0, #4024]
    6dac:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    6db0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6db4:	ldr	x0, [x0, #4024]
    6db8:	ldp	x29, x30, [sp], #16
    6dbc:	ret
    6dc0:	stp	x29, x30, [sp, #-16]!
    6dc4:	mov	x29, sp
    6dc8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6dcc:	ldr	x0, [x0, #3976]
    6dd0:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    6dd4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6dd8:	ldr	x0, [x0, #3976]
    6ddc:	ldp	x29, x30, [sp], #16
    6de0:	ret
    6de4:	stp	x29, x30, [sp, #-32]!
    6de8:	mov	x29, sp
    6dec:	str	x0, [sp, #24]
    6df0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6df4:	ldr	x0, [x0, #3928]
    6df8:	ldr	x0, [x0]
    6dfc:	ldr	x1, [sp, #24]
    6e00:	bl	66f0 <PyErr_SetString@plt>
    6e04:	mov	w0, #0xffffffff            	// #-1
    6e08:	ldp	x29, x30, [sp], #32
    6e0c:	ret
    6e10:	stp	x29, x30, [sp, #-32]!
    6e14:	mov	x29, sp
    6e18:	str	x0, [sp, #24]
    6e1c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6e20:	ldr	x0, [x0, #3936]
    6e24:	ldr	x0, [x0]
    6e28:	ldr	x1, [sp, #24]
    6e2c:	bl	66f0 <PyErr_SetString@plt>
    6e30:	mov	w0, #0xffffffff            	// #-1
    6e34:	ldp	x29, x30, [sp], #32
    6e38:	ret
    6e3c:	stp	x29, x30, [sp, #-32]!
    6e40:	mov	x29, sp
    6e44:	str	x0, [sp, #24]
    6e48:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6e4c:	ldr	x0, [x0, #3920]
    6e50:	ldr	x0, [x0]
    6e54:	ldr	x1, [sp, #24]
    6e58:	bl	66f0 <PyErr_SetString@plt>
    6e5c:	mov	w0, #0xffffffff            	// #-1
    6e60:	ldp	x29, x30, [sp], #32
    6e64:	ret
    6e68:	stp	x29, x30, [sp, #-32]!
    6e6c:	mov	x29, sp
    6e70:	str	x0, [sp, #24]
    6e74:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6e78:	ldr	x0, [x0, #3920]
    6e7c:	ldr	x0, [x0]
    6e80:	ldr	x1, [sp, #24]
    6e84:	bl	66f0 <PyErr_SetString@plt>
    6e88:	mov	x0, #0x0                   	// #0
    6e8c:	ldp	x29, x30, [sp], #32
    6e90:	ret
    6e94:	sub	sp, sp, #0x10
    6e98:	str	x0, [sp, #8]
    6e9c:	nop
    6ea0:	add	sp, sp, #0x10
    6ea4:	ret
    6ea8:	stp	x29, x30, [sp, #-48]!
    6eac:	mov	x29, sp
    6eb0:	str	w0, [sp, #28]
    6eb4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    6eb8:	add	x0, x0, #0x9e0
    6ebc:	str	x0, [sp, #40]
    6ec0:	b	6ef4 <PyFloat_FromString@plt+0x3a4>
    6ec4:	ldr	x0, [sp, #40]
    6ec8:	ldr	w1, [x0, #16]
    6ecc:	ldr	w0, [sp, #28]
    6ed0:	and	w0, w1, w0
    6ed4:	cmp	w0, #0x0
    6ed8:	b.eq	6ee8 <PyFloat_FromString@plt+0x398>  // b.none
    6edc:	ldr	x0, [sp, #40]
    6ee0:	ldr	x0, [x0, #24]
    6ee4:	b	6f10 <PyFloat_FromString@plt+0x3c0>
    6ee8:	ldr	x0, [sp, #40]
    6eec:	add	x0, x0, #0x20
    6ef0:	str	x0, [sp, #40]
    6ef4:	ldr	x0, [sp, #40]
    6ef8:	ldr	x0, [x0]
    6efc:	cmp	x0, #0x0
    6f00:	b.ne	6ec4 <PyFloat_FromString@plt+0x374>  // b.any
    6f04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    6f08:	add	x0, x0, #0x998
    6f0c:	bl	6e68 <PyFloat_FromString@plt+0x318>
    6f10:	ldp	x29, x30, [sp], #48
    6f14:	ret
    6f18:	stp	x29, x30, [sp, #-48]!
    6f1c:	mov	x29, sp
    6f20:	str	x0, [sp, #24]
    6f24:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    6f28:	add	x0, x0, #0x9e0
    6f2c:	str	x0, [sp, #40]
    6f30:	b	6f60 <PyFloat_FromString@plt+0x410>
    6f34:	ldr	x0, [sp, #40]
    6f38:	ldr	x0, [x0, #24]
    6f3c:	ldr	x1, [sp, #24]
    6f40:	cmp	x1, x0
    6f44:	b.ne	6f54 <PyFloat_FromString@plt+0x404>  // b.any
    6f48:	ldr	x0, [sp, #40]
    6f4c:	ldr	w0, [x0, #16]
    6f50:	b	6f98 <PyFloat_FromString@plt+0x448>
    6f54:	ldr	x0, [sp, #40]
    6f58:	add	x0, x0, #0x20
    6f5c:	str	x0, [sp, #40]
    6f60:	ldr	x0, [sp, #40]
    6f64:	ldr	x0, [x0]
    6f68:	cmp	x0, #0x0
    6f6c:	b.ne	6f34 <PyFloat_FromString@plt+0x3e4>  // b.any
    6f70:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    6f74:	ldr	x0, [x0, #3968]
    6f78:	ldr	x2, [x0]
    6f7c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    6f80:	add	x0, x0, #0xc60
    6f84:	ldr	x0, [x0]
    6f88:	mov	x1, x0
    6f8c:	mov	x0, x2
    6f90:	bl	66f0 <PyErr_SetString@plt>
    6f94:	mov	w0, #0x8000                	// #32768
    6f98:	ldp	x29, x30, [sp], #48
    6f9c:	ret
    6fa0:	stp	x29, x30, [sp, #-48]!
    6fa4:	mov	x29, sp
    6fa8:	str	w0, [sp, #28]
    6fac:	mov	x0, #0x0                   	// #0
    6fb0:	bl	6540 <PyList_New@plt>
    6fb4:	str	x0, [sp, #32]
    6fb8:	ldr	x0, [sp, #32]
    6fbc:	cmp	x0, #0x0
    6fc0:	b.ne	6fcc <PyFloat_FromString@plt+0x47c>  // b.any
    6fc4:	mov	x0, #0x0                   	// #0
    6fc8:	b	70b8 <PyFloat_FromString@plt+0x568>
    6fcc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    6fd0:	add	x0, x0, #0xb20
    6fd4:	str	x0, [sp, #40]
    6fd8:	b	701c <PyFloat_FromString@plt+0x4cc>
    6fdc:	ldr	x0, [sp, #40]
    6fe0:	ldr	w1, [x0, #16]
    6fe4:	ldr	w0, [sp, #28]
    6fe8:	and	w0, w1, w0
    6fec:	cmp	w0, #0x0
    6ff0:	b.eq	7010 <PyFloat_FromString@plt+0x4c0>  // b.none
    6ff4:	ldr	x0, [sp, #40]
    6ff8:	ldr	x0, [x0, #24]
    6ffc:	mov	x1, x0
    7000:	ldr	x0, [sp, #32]
    7004:	bl	6810 <PyList_Append@plt>
    7008:	cmp	w0, #0x0
    700c:	b.lt	7094 <PyFloat_FromString@plt+0x544>  // b.tstop
    7010:	ldr	x0, [sp, #40]
    7014:	add	x0, x0, #0x20
    7018:	str	x0, [sp, #40]
    701c:	ldr	x0, [sp, #40]
    7020:	ldr	x0, [x0]
    7024:	cmp	x0, #0x0
    7028:	b.ne	6fdc <PyFloat_FromString@plt+0x48c>  // b.any
    702c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    7030:	add	x0, x0, #0xa00
    7034:	str	x0, [sp, #40]
    7038:	b	707c <PyFloat_FromString@plt+0x52c>
    703c:	ldr	x0, [sp, #40]
    7040:	ldr	w1, [x0, #16]
    7044:	ldr	w0, [sp, #28]
    7048:	and	w0, w1, w0
    704c:	cmp	w0, #0x0
    7050:	b.eq	7070 <PyFloat_FromString@plt+0x520>  // b.none
    7054:	ldr	x0, [sp, #40]
    7058:	ldr	x0, [x0, #24]
    705c:	mov	x1, x0
    7060:	ldr	x0, [sp, #32]
    7064:	bl	6810 <PyList_Append@plt>
    7068:	cmp	w0, #0x0
    706c:	b.lt	709c <PyFloat_FromString@plt+0x54c>  // b.tstop
    7070:	ldr	x0, [sp, #40]
    7074:	add	x0, x0, #0x20
    7078:	str	x0, [sp, #40]
    707c:	ldr	x0, [sp, #40]
    7080:	ldr	x0, [x0]
    7084:	cmp	x0, #0x0
    7088:	b.ne	703c <PyFloat_FromString@plt+0x4ec>  // b.any
    708c:	ldr	x0, [sp, #32]
    7090:	b	70b8 <PyFloat_FromString@plt+0x568>
    7094:	nop
    7098:	b	70a0 <PyFloat_FromString@plt+0x550>
    709c:	nop
    70a0:	ldr	x2, [sp, #32]
    70a4:	mov	w1, #0x14f                 	// #335
    70a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    70ac:	add	x0, x0, #0x9c0
    70b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    70b4:	mov	x0, #0x0                   	// #0
    70b8:	ldp	x29, x30, [sp], #48
    70bc:	ret
    70c0:	stp	x29, x30, [sp, #-48]!
    70c4:	mov	x29, sp
    70c8:	str	w0, [sp, #28]
    70cc:	mov	x0, #0x0                   	// #0
    70d0:	bl	6540 <PyList_New@plt>
    70d4:	str	x0, [sp, #32]
    70d8:	ldr	x0, [sp, #32]
    70dc:	cmp	x0, #0x0
    70e0:	b.ne	70ec <PyFloat_FromString@plt+0x59c>  // b.any
    70e4:	mov	x0, #0x0                   	// #0
    70e8:	b	716c <PyFloat_FromString@plt+0x61c>
    70ec:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    70f0:	add	x0, x0, #0x9e0
    70f4:	str	x0, [sp, #40]
    70f8:	b	7158 <PyFloat_FromString@plt+0x608>
    70fc:	ldr	x0, [sp, #40]
    7100:	ldr	w1, [x0, #16]
    7104:	ldr	w0, [sp, #28]
    7108:	and	w0, w1, w0
    710c:	cmp	w0, #0x0
    7110:	b.eq	714c <PyFloat_FromString@plt+0x5fc>  // b.none
    7114:	ldr	x0, [sp, #40]
    7118:	ldr	x0, [x0, #24]
    711c:	mov	x1, x0
    7120:	ldr	x0, [sp, #32]
    7124:	bl	6810 <PyList_Append@plt>
    7128:	cmp	w0, #0x0
    712c:	b.ge	714c <PyFloat_FromString@plt+0x5fc>  // b.tcont
    7130:	ldr	x2, [sp, #32]
    7134:	mov	w1, #0x161                 	// #353
    7138:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    713c:	add	x0, x0, #0x9c0
    7140:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    7144:	mov	x0, #0x0                   	// #0
    7148:	b	716c <PyFloat_FromString@plt+0x61c>
    714c:	ldr	x0, [sp, #40]
    7150:	add	x0, x0, #0x20
    7154:	str	x0, [sp, #40]
    7158:	ldr	x0, [sp, #40]
    715c:	ldr	x0, [x0]
    7160:	cmp	x0, #0x0
    7164:	b.ne	70fc <PyFloat_FromString@plt+0x5ac>  // b.any
    7168:	ldr	x0, [sp, #32]
    716c:	ldp	x29, x30, [sp], #48
    7170:	ret
    7174:	stp	x29, x30, [sp, #-80]!
    7178:	mov	x29, sp
    717c:	str	x0, [sp, #24]
    7180:	ldr	x0, [sp, #24]
    7184:	bl	69b0 <PyList_Size@plt>
    7188:	str	x0, [sp, #56]
    718c:	str	wzr, [sp, #76]
    7190:	str	xzr, [sp, #64]
    7194:	b	71e8 <PyFloat_FromString@plt+0x698>
    7198:	ldr	x1, [sp, #64]
    719c:	ldr	x0, [sp, #24]
    71a0:	bl	6af0 <PyList_GetItem@plt>
    71a4:	str	x0, [sp, #48]
    71a8:	ldr	x0, [sp, #48]
    71ac:	bl	6f18 <PyFloat_FromString@plt+0x3c8>
    71b0:	str	w0, [sp, #44]
    71b4:	ldr	w0, [sp, #44]
    71b8:	and	w0, w0, #0x18000
    71bc:	cmp	w0, #0x0
    71c0:	b.eq	71cc <PyFloat_FromString@plt+0x67c>  // b.none
    71c4:	ldr	w0, [sp, #44]
    71c8:	b	71fc <PyFloat_FromString@plt+0x6ac>
    71cc:	ldr	w1, [sp, #76]
    71d0:	ldr	w0, [sp, #44]
    71d4:	orr	w0, w1, w0
    71d8:	str	w0, [sp, #76]
    71dc:	ldr	x0, [sp, #64]
    71e0:	add	x0, x0, #0x1
    71e4:	str	x0, [sp, #64]
    71e8:	ldr	x1, [sp, #64]
    71ec:	ldr	x0, [sp, #56]
    71f0:	cmp	x1, x0
    71f4:	b.lt	7198 <PyFloat_FromString@plt+0x648>  // b.tstop
    71f8:	ldr	w0, [sp, #76]
    71fc:	ldp	x29, x30, [sp], #80
    7200:	ret
    7204:	stp	x29, x30, [sp, #-64]!
    7208:	mov	x29, sp
    720c:	str	w0, [sp, #28]
    7210:	bl	69c0 <PyDict_New@plt>
    7214:	str	x0, [sp, #48]
    7218:	ldr	x0, [sp, #48]
    721c:	cmp	x0, #0x0
    7220:	b.ne	722c <PyFloat_FromString@plt+0x6dc>  // b.any
    7224:	mov	x0, #0x0                   	// #0
    7228:	b	72c8 <PyFloat_FromString@plt+0x778>
    722c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    7230:	add	x0, x0, #0x9e0
    7234:	str	x0, [sp, #56]
    7238:	b	72b4 <PyFloat_FromString@plt+0x764>
    723c:	ldr	x0, [sp, #56]
    7240:	ldr	w1, [x0, #16]
    7244:	ldr	w0, [sp, #28]
    7248:	and	w0, w1, w0
    724c:	cmp	w0, #0x0
    7250:	b.eq	7260 <PyFloat_FromString@plt+0x710>  // b.none
    7254:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7258:	ldr	x0, [x0, #4024]
    725c:	b	7268 <PyFloat_FromString@plt+0x718>
    7260:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7264:	ldr	x0, [x0, #3976]
    7268:	str	x0, [sp, #40]
    726c:	ldr	x0, [sp, #56]
    7270:	ldr	x0, [x0, #24]
    7274:	ldr	x2, [sp, #40]
    7278:	mov	x1, x0
    727c:	ldr	x0, [sp, #48]
    7280:	bl	6a50 <PyDict_SetItem@plt>
    7284:	cmp	w0, #0x0
    7288:	b.ge	72a8 <PyFloat_FromString@plt+0x758>  // b.tcont
    728c:	ldr	x2, [sp, #48]
    7290:	mov	w1, #0x18f                 	// #399
    7294:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7298:	add	x0, x0, #0x9c0
    729c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    72a0:	mov	x0, #0x0                   	// #0
    72a4:	b	72c8 <PyFloat_FromString@plt+0x778>
    72a8:	ldr	x0, [sp, #56]
    72ac:	add	x0, x0, #0x20
    72b0:	str	x0, [sp, #56]
    72b4:	ldr	x0, [sp, #56]
    72b8:	ldr	x0, [x0]
    72bc:	cmp	x0, #0x0
    72c0:	b.ne	723c <PyFloat_FromString@plt+0x6ec>  // b.any
    72c4:	ldr	x0, [sp, #48]
    72c8:	ldp	x29, x30, [sp], #64
    72cc:	ret
    72d0:	stp	x29, x30, [sp, #-64]!
    72d4:	mov	x29, sp
    72d8:	str	x0, [sp, #24]
    72dc:	str	wzr, [sp, #52]
    72e0:	ldr	x0, [sp, #24]
    72e4:	ldr	x0, [x0, #8]
    72e8:	ldr	x0, [x0, #168]
    72ec:	and	x0, x0, #0x20000000
    72f0:	cmp	x0, #0x0
    72f4:	b.ne	731c <PyFloat_FromString@plt+0x7cc>  // b.any
    72f8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    72fc:	ldr	x0, [x0, #3936]
    7300:	ldr	x2, [x0]
    7304:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7308:	add	x1, x0, #0x9f8
    730c:	mov	x0, x2
    7310:	bl	66f0 <PyErr_SetString@plt>
    7314:	mov	w0, #0x8000                	// #32768
    7318:	b	741c <PyFloat_FromString@plt+0x8cc>
    731c:	ldr	x0, [sp, #24]
    7320:	bl	6580 <PyDict_Size@plt>
    7324:	cmp	x0, #0x9
    7328:	b.eq	7350 <PyFloat_FromString@plt+0x800>  // b.none
    732c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7330:	ldr	x0, [x0, #3968]
    7334:	ldr	x2, [x0]
    7338:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    733c:	add	x1, x0, #0xa18
    7340:	mov	x0, x2
    7344:	bl	66f0 <PyErr_SetString@plt>
    7348:	mov	w0, #0x8000                	// #32768
    734c:	b	741c <PyFloat_FromString@plt+0x8cc>
    7350:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    7354:	add	x0, x0, #0x9e0
    7358:	str	x0, [sp, #56]
    735c:	b	7408 <PyFloat_FromString@plt+0x8b8>
    7360:	ldr	x0, [sp, #56]
    7364:	ldr	x0, [x0, #24]
    7368:	mov	x1, x0
    736c:	ldr	x0, [sp, #24]
    7370:	bl	6b40 <PyDict_GetItemWithError@plt>
    7374:	str	x0, [sp, #40]
    7378:	ldr	x0, [sp, #40]
    737c:	cmp	x0, #0x0
    7380:	b.ne	73bc <PyFloat_FromString@plt+0x86c>  // b.any
    7384:	bl	6880 <PyErr_Occurred@plt>
    7388:	cmp	x0, #0x0
    738c:	b.eq	7398 <PyFloat_FromString@plt+0x848>  // b.none
    7390:	mov	w0, #0x10000               	// #65536
    7394:	b	741c <PyFloat_FromString@plt+0x8cc>
    7398:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    739c:	ldr	x0, [x0, #3968]
    73a0:	ldr	x2, [x0]
    73a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    73a8:	add	x1, x0, #0xa18
    73ac:	mov	x0, x2
    73b0:	bl	66f0 <PyErr_SetString@plt>
    73b4:	mov	w0, #0x8000                	// #32768
    73b8:	b	741c <PyFloat_FromString@plt+0x8cc>
    73bc:	ldr	x0, [sp, #40]
    73c0:	bl	6970 <PyObject_IsTrue@plt>
    73c4:	str	w0, [sp, #36]
    73c8:	ldr	w0, [sp, #36]
    73cc:	cmp	w0, #0x0
    73d0:	b.ge	73dc <PyFloat_FromString@plt+0x88c>  // b.tcont
    73d4:	mov	w0, #0x10000               	// #65536
    73d8:	b	741c <PyFloat_FromString@plt+0x8cc>
    73dc:	ldr	w0, [sp, #36]
    73e0:	cmp	w0, #0x1
    73e4:	b.ne	73fc <PyFloat_FromString@plt+0x8ac>  // b.any
    73e8:	ldr	x0, [sp, #56]
    73ec:	ldr	w0, [x0, #16]
    73f0:	ldr	w1, [sp, #52]
    73f4:	orr	w0, w1, w0
    73f8:	str	w0, [sp, #52]
    73fc:	ldr	x0, [sp, #56]
    7400:	add	x0, x0, #0x20
    7404:	str	x0, [sp, #56]
    7408:	ldr	x0, [sp, #56]
    740c:	ldr	x0, [x0]
    7410:	cmp	x0, #0x0
    7414:	b.ne	7360 <PyFloat_FromString@plt+0x810>  // b.any
    7418:	ldr	w0, [sp, #52]
    741c:	ldp	x29, x30, [sp], #64
    7420:	ret
    7424:	stp	x29, x30, [sp, #-64]!
    7428:	mov	x29, sp
    742c:	str	x0, [sp, #24]
    7430:	str	w1, [sp, #20]
    7434:	ldr	x0, [sp, #24]
    7438:	add	x0, x0, #0x10
    743c:	str	x0, [sp, #56]
    7440:	ldr	x0, [sp, #56]
    7444:	ldr	w1, [x0, #28]
    7448:	ldr	w0, [sp, #20]
    744c:	orr	w1, w1, w0
    7450:	ldr	x0, [sp, #56]
    7454:	str	w1, [x0, #28]
    7458:	ldr	x0, [sp, #56]
    745c:	ldr	w0, [x0, #24]
    7460:	orr	w1, w0, #0x200
    7464:	ldr	w0, [sp, #20]
    7468:	and	w0, w1, w0
    746c:	cmp	w0, #0x0
    7470:	b.eq	7510 <PyFloat_FromString@plt+0x9c0>  // b.none
    7474:	ldr	w0, [sp, #20]
    7478:	and	w0, w0, #0x200
    747c:	cmp	w0, #0x0
    7480:	b.eq	7490 <PyFloat_FromString@plt+0x940>  // b.none
    7484:	bl	6690 <PyErr_NoMemory@plt>
    7488:	mov	w0, #0x1                   	// #1
    748c:	b	7514 <PyFloat_FromString@plt+0x9c4>
    7490:	ldr	x0, [sp, #56]
    7494:	ldr	w1, [x0, #24]
    7498:	ldr	w0, [sp, #20]
    749c:	and	w0, w1, w0
    74a0:	bl	6ea8 <PyFloat_FromString@plt+0x358>
    74a4:	str	x0, [sp, #48]
    74a8:	ldr	x0, [sp, #48]
    74ac:	cmp	x0, #0x0
    74b0:	b.ne	74bc <PyFloat_FromString@plt+0x96c>  // b.any
    74b4:	mov	w0, #0x1                   	// #1
    74b8:	b	7514 <PyFloat_FromString@plt+0x9c4>
    74bc:	ldr	x0, [sp, #56]
    74c0:	ldr	w1, [x0, #24]
    74c4:	ldr	w0, [sp, #20]
    74c8:	and	w0, w1, w0
    74cc:	bl	6fa0 <PyFloat_FromString@plt+0x450>
    74d0:	str	x0, [sp, #40]
    74d4:	ldr	x0, [sp, #40]
    74d8:	cmp	x0, #0x0
    74dc:	b.ne	74e8 <PyFloat_FromString@plt+0x998>  // b.any
    74e0:	mov	w0, #0x1                   	// #1
    74e4:	b	7514 <PyFloat_FromString@plt+0x9c4>
    74e8:	ldr	x1, [sp, #40]
    74ec:	ldr	x0, [sp, #48]
    74f0:	bl	66a0 <PyErr_SetObject@plt>
    74f4:	ldr	x2, [sp, #40]
    74f8:	mov	w1, #0x1ed                 	// #493
    74fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7500:	add	x0, x0, #0x9c0
    7504:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    7508:	mov	w0, #0x1                   	// #1
    750c:	b	7514 <PyFloat_FromString@plt+0x9c4>
    7510:	mov	w0, #0x0                   	// #0
    7514:	ldp	x29, x30, [sp], #64
    7518:	ret
    751c:	stp	x29, x30, [sp, #-48]!
    7520:	mov	x29, sp
    7524:	str	x0, [sp, #24]
    7528:	ldr	x0, [sp, #24]
    752c:	ldr	x0, [x0, #8]
    7530:	ldr	x0, [x0, #168]
    7534:	and	x0, x0, #0x10000000
    7538:	cmp	x0, #0x0
    753c:	b.eq	75d0 <PyFloat_FromString@plt+0xa80>  // b.none
    7540:	str	wzr, [sp, #44]
    7544:	b	7578 <PyFloat_FromString@plt+0xa28>
    7548:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    754c:	add	x0, x0, #0x740
    7550:	ldrsw	x1, [sp, #44]
    7554:	ldr	x0, [x0, x1, lsl #3]
    7558:	ldr	x1, [sp, #24]
    755c:	cmp	x1, x0
    7560:	b.ne	756c <PyFloat_FromString@plt+0xa1c>  // b.any
    7564:	ldr	w0, [sp, #44]
    7568:	b	75e0 <PyFloat_FromString@plt+0xa90>
    756c:	ldr	w0, [sp, #44]
    7570:	add	w0, w0, #0x1
    7574:	str	w0, [sp, #44]
    7578:	ldr	w0, [sp, #44]
    757c:	cmp	w0, #0x7
    7580:	b.le	7548 <PyFloat_FromString@plt+0x9f8>
    7584:	str	wzr, [sp, #44]
    7588:	b	75c4 <PyFloat_FromString@plt+0xa74>
    758c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7590:	add	x0, x0, #0x740
    7594:	ldrsw	x1, [sp, #44]
    7598:	ldr	x0, [x0, x1, lsl #3]
    759c:	mov	x1, x0
    75a0:	ldr	x0, [sp, #24]
    75a4:	bl	69a0 <PyUnicode_Compare@plt>
    75a8:	cmp	w0, #0x0
    75ac:	b.ne	75b8 <PyFloat_FromString@plt+0xa68>  // b.any
    75b0:	ldr	w0, [sp, #44]
    75b4:	b	75e0 <PyFloat_FromString@plt+0xa90>
    75b8:	ldr	w0, [sp, #44]
    75bc:	add	w0, w0, #0x1
    75c0:	str	w0, [sp, #44]
    75c4:	ldr	w0, [sp, #44]
    75c8:	cmp	w0, #0x7
    75cc:	b.le	758c <PyFloat_FromString@plt+0xa3c>
    75d0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    75d4:	add	x0, x0, #0xc58
    75d8:	ldr	x0, [x0]
    75dc:	bl	6e10 <PyFloat_FromString@plt+0x2c0>
    75e0:	ldp	x29, x30, [sp], #48
    75e4:	ret
    75e8:	sub	sp, sp, #0x20
    75ec:	str	x0, [sp, #24]
    75f0:	str	x1, [sp, #16]
    75f4:	str	x2, [sp, #8]
    75f8:	ldr	x0, [sp, #24]
    75fc:	str	xzr, [x0, #16]
    7600:	mov	w0, #0x0                   	// #0
    7604:	add	sp, sp, #0x20
    7608:	ret
    760c:	sub	sp, sp, #0x10
    7610:	str	x0, [sp, #8]
    7614:	mov	x0, #0x9                   	// #9
    7618:	add	sp, sp, #0x10
    761c:	ret
    7620:	stp	x29, x30, [sp, #-32]!
    7624:	mov	x29, sp
    7628:	str	x0, [sp, #24]
    762c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7630:	ldr	x0, [x0, #3872]
    7634:	ldr	x1, [x0, #216]
    7638:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    763c:	add	x0, x0, #0x780
    7640:	ldr	x0, [x0]
    7644:	blr	x1
    7648:	ldp	x29, x30, [sp], #32
    764c:	ret
    7650:	stp	x29, x30, [sp, #-48]!
    7654:	mov	x29, sp
    7658:	str	x0, [sp, #24]
    765c:	str	x1, [sp, #16]
    7660:	ldr	x0, [sp, #16]
    7664:	bl	6f18 <PyFloat_FromString@plt+0x3c8>
    7668:	str	w0, [sp, #44]
    766c:	ldr	w0, [sp, #44]
    7670:	and	w0, w0, #0x18000
    7674:	cmp	w0, #0x0
    7678:	b.eq	7684 <PyFloat_FromString@plt+0xb34>  // b.none
    767c:	mov	x0, #0x0                   	// #0
    7680:	b	76b0 <PyFloat_FromString@plt+0xb60>
    7684:	ldr	x0, [sp, #24]
    7688:	ldr	x0, [x0, #16]
    768c:	ldr	w1, [x0]
    7690:	ldr	w0, [sp, #44]
    7694:	and	w0, w1, w0
    7698:	cmp	w0, #0x0
    769c:	b.eq	76a8 <PyFloat_FromString@plt+0xb58>  // b.none
    76a0:	bl	6d9c <PyFloat_FromString@plt+0x24c>
    76a4:	b	76ac <PyFloat_FromString@plt+0xb5c>
    76a8:	bl	6dc0 <PyFloat_FromString@plt+0x270>
    76ac:	nop
    76b0:	ldp	x29, x30, [sp], #48
    76b4:	ret
    76b8:	stp	x29, x30, [sp, #-64]!
    76bc:	mov	x29, sp
    76c0:	str	x0, [sp, #40]
    76c4:	str	x1, [sp, #32]
    76c8:	str	x2, [sp, #24]
    76cc:	ldr	x0, [sp, #24]
    76d0:	cmp	x0, #0x0
    76d4:	b.ne	76e8 <PyFloat_FromString@plt+0xb98>  // b.any
    76d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    76dc:	add	x0, x0, #0xa30
    76e0:	bl	6de4 <PyFloat_FromString@plt+0x294>
    76e4:	b	7784 <PyFloat_FromString@plt+0xc34>
    76e8:	ldr	x0, [sp, #32]
    76ec:	bl	6f18 <PyFloat_FromString@plt+0x3c8>
    76f0:	str	w0, [sp, #60]
    76f4:	ldr	w0, [sp, #60]
    76f8:	and	w0, w0, #0x18000
    76fc:	cmp	w0, #0x0
    7700:	b.eq	770c <PyFloat_FromString@plt+0xbbc>  // b.none
    7704:	mov	w0, #0xffffffff            	// #-1
    7708:	b	7784 <PyFloat_FromString@plt+0xc34>
    770c:	ldr	x0, [sp, #24]
    7710:	bl	6970 <PyObject_IsTrue@plt>
    7714:	str	w0, [sp, #56]
    7718:	ldr	w0, [sp, #56]
    771c:	cmp	w0, #0x0
    7720:	b.ge	772c <PyFloat_FromString@plt+0xbdc>  // b.tcont
    7724:	mov	w0, #0xffffffff            	// #-1
    7728:	b	7784 <PyFloat_FromString@plt+0xc34>
    772c:	ldr	w0, [sp, #56]
    7730:	cmp	w0, #0x1
    7734:	b.ne	775c <PyFloat_FromString@plt+0xc0c>  // b.any
    7738:	ldr	x0, [sp, #40]
    773c:	ldr	x0, [x0, #16]
    7740:	ldr	w2, [x0]
    7744:	ldr	x0, [sp, #40]
    7748:	ldr	x0, [x0, #16]
    774c:	ldr	w1, [sp, #60]
    7750:	orr	w1, w2, w1
    7754:	str	w1, [x0]
    7758:	b	7780 <PyFloat_FromString@plt+0xc30>
    775c:	ldr	x0, [sp, #40]
    7760:	ldr	x0, [x0, #16]
    7764:	ldr	w2, [x0]
    7768:	ldr	w0, [sp, #60]
    776c:	mvn	w1, w0
    7770:	ldr	x0, [sp, #40]
    7774:	ldr	x0, [x0, #16]
    7778:	and	w1, w2, w1
    777c:	str	w1, [x0]
    7780:	mov	w0, #0x0                   	// #0
    7784:	ldp	x29, x30, [sp], #64
    7788:	ret
    778c:	sub	sp, sp, #0x120
    7790:	stp	x29, x30, [sp, #96]
    7794:	add	x29, sp, #0x60
    7798:	str	x0, [sp, #120]
    779c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    77a0:	add	x0, x0, #0x9e0
    77a4:	str	x0, [sp, #280]
    77a8:	str	wzr, [sp, #276]
    77ac:	b	7824 <PyFloat_FromString@plt+0xcd4>
    77b0:	ldr	x0, [sp, #280]
    77b4:	ldr	x2, [x0, #8]
    77b8:	ldrsw	x0, [sp, #276]
    77bc:	lsl	x0, x0, #3
    77c0:	add	x1, sp, #0xc8
    77c4:	str	x2, [x1, x0]
    77c8:	ldr	x0, [sp, #120]
    77cc:	ldr	x0, [x0, #16]
    77d0:	ldr	w1, [x0]
    77d4:	ldr	x0, [sp, #280]
    77d8:	ldr	w0, [x0, #16]
    77dc:	and	w0, w1, w0
    77e0:	cmp	w0, #0x0
    77e4:	b.eq	77f4 <PyFloat_FromString@plt+0xca4>  // b.none
    77e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    77ec:	add	x0, x0, #0xa50
    77f0:	b	77fc <PyFloat_FromString@plt+0xcac>
    77f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    77f8:	add	x0, x0, #0xa58
    77fc:	ldrsw	x1, [sp, #276]
    7800:	lsl	x1, x1, #3
    7804:	add	x2, sp, #0x80
    7808:	str	x0, [x2, x1]
    780c:	ldr	x0, [sp, #280]
    7810:	add	x0, x0, #0x20
    7814:	str	x0, [sp, #280]
    7818:	ldr	w0, [sp, #276]
    781c:	add	w0, w0, #0x1
    7820:	str	w0, [sp, #276]
    7824:	ldr	x0, [sp, #280]
    7828:	ldr	x0, [x0]
    782c:	cmp	x0, #0x0
    7830:	b.ne	77b0 <PyFloat_FromString@plt+0xc60>  // b.any
    7834:	ldr	x11, [sp, #200]
    7838:	ldr	x12, [sp, #128]
    783c:	ldr	x13, [sp, #208]
    7840:	ldr	x14, [sp, #136]
    7844:	ldr	x15, [sp, #216]
    7848:	ldr	x16, [sp, #144]
    784c:	ldr	x17, [sp, #224]
    7850:	ldr	x0, [sp, #152]
    7854:	ldr	x1, [sp, #232]
    7858:	ldr	x2, [sp, #160]
    785c:	ldr	x3, [sp, #240]
    7860:	ldr	x4, [sp, #168]
    7864:	ldr	x5, [sp, #248]
    7868:	ldr	x6, [sp, #176]
    786c:	ldr	x7, [sp, #256]
    7870:	ldr	x8, [sp, #184]
    7874:	ldr	x9, [sp, #264]
    7878:	ldr	x10, [sp, #192]
    787c:	str	x10, [sp, #80]
    7880:	str	x9, [sp, #72]
    7884:	str	x8, [sp, #64]
    7888:	str	x7, [sp, #56]
    788c:	str	x6, [sp, #48]
    7890:	str	x5, [sp, #40]
    7894:	str	x4, [sp, #32]
    7898:	str	x3, [sp, #24]
    789c:	str	x2, [sp, #16]
    78a0:	str	x1, [sp, #8]
    78a4:	str	x0, [sp]
    78a8:	mov	x7, x17
    78ac:	mov	x6, x16
    78b0:	mov	x5, x15
    78b4:	mov	x4, x14
    78b8:	mov	x3, x13
    78bc:	mov	x2, x12
    78c0:	mov	x1, x11
    78c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    78c8:	add	x0, x0, #0xa60
    78cc:	bl	6520 <PyUnicode_FromFormat@plt>
    78d0:	ldp	x29, x30, [sp, #96]
    78d4:	add	sp, sp, #0x120
    78d8:	ret
    78dc:	stp	x29, x30, [sp, #-64]!
    78e0:	mov	x29, sp
    78e4:	str	x0, [sp, #40]
    78e8:	str	x1, [sp, #32]
    78ec:	str	w2, [sp, #28]
    78f0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    78f4:	ldr	x0, [x0, #3912]
    78f8:	str	x0, [sp, #56]
    78fc:	ldr	w0, [sp, #28]
    7900:	cmp	w0, #0x2
    7904:	b.eq	7914 <PyFloat_FromString@plt+0xdc4>  // b.none
    7908:	ldr	w0, [sp, #28]
    790c:	cmp	w0, #0x3
    7910:	b.ne	7a38 <PyFloat_FromString@plt+0xee8>  // b.any
    7914:	ldr	x0, [sp, #32]
    7918:	ldr	x1, [x0, #8]
    791c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7920:	add	x0, x0, #0x710
    7924:	ldr	x0, [x0]
    7928:	cmp	x1, x0
    792c:	b.ne	7990 <PyFloat_FromString@plt+0xe40>  // b.any
    7930:	ldr	x0, [sp, #40]
    7934:	ldr	x0, [x0, #16]
    7938:	ldr	w1, [x0]
    793c:	ldr	x0, [sp, #32]
    7940:	ldr	x0, [x0, #16]
    7944:	ldr	w0, [x0]
    7948:	cmp	w1, w0
    794c:	cset	w0, eq  // eq = none
    7950:	and	w1, w0, #0xff
    7954:	ldr	w0, [sp, #28]
    7958:	cmp	w0, #0x3
    795c:	cset	w0, eq  // eq = none
    7960:	and	w0, w0, #0xff
    7964:	eor	w0, w1, w0
    7968:	and	w0, w0, #0xff
    796c:	cmp	w0, #0x0
    7970:	b.eq	7980 <PyFloat_FromString@plt+0xe30>  // b.none
    7974:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7978:	ldr	x0, [x0, #4024]
    797c:	b	7988 <PyFloat_FromString@plt+0xe38>
    7980:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7984:	ldr	x0, [x0, #3976]
    7988:	str	x0, [sp, #56]
    798c:	b	7a38 <PyFloat_FromString@plt+0xee8>
    7990:	ldr	x0, [sp, #32]
    7994:	ldr	x0, [x0, #8]
    7998:	ldr	x0, [x0, #168]
    799c:	and	x0, x0, #0x20000000
    79a0:	cmp	x0, #0x0
    79a4:	b.eq	7a38 <PyFloat_FromString@plt+0xee8>  // b.none
    79a8:	ldr	x0, [sp, #32]
    79ac:	bl	72d0 <PyFloat_FromString@plt+0x780>
    79b0:	str	w0, [sp, #52]
    79b4:	ldr	w0, [sp, #52]
    79b8:	and	w0, w0, #0x18000
    79bc:	cmp	w0, #0x0
    79c0:	b.eq	79e4 <PyFloat_FromString@plt+0xe94>  // b.none
    79c4:	ldr	w0, [sp, #52]
    79c8:	and	w0, w0, #0x8000
    79cc:	cmp	w0, #0x0
    79d0:	b.eq	79dc <PyFloat_FromString@plt+0xe8c>  // b.none
    79d4:	bl	67d0 <PyErr_Clear@plt>
    79d8:	b	7a38 <PyFloat_FromString@plt+0xee8>
    79dc:	mov	x0, #0x0                   	// #0
    79e0:	b	7a44 <PyFloat_FromString@plt+0xef4>
    79e4:	ldr	x0, [sp, #40]
    79e8:	ldr	x0, [x0, #16]
    79ec:	ldr	w0, [x0]
    79f0:	ldr	w1, [sp, #52]
    79f4:	cmp	w1, w0
    79f8:	cset	w0, eq  // eq = none
    79fc:	and	w1, w0, #0xff
    7a00:	ldr	w0, [sp, #28]
    7a04:	cmp	w0, #0x3
    7a08:	cset	w0, eq  // eq = none
    7a0c:	and	w0, w0, #0xff
    7a10:	eor	w0, w1, w0
    7a14:	and	w0, w0, #0xff
    7a18:	cmp	w0, #0x0
    7a1c:	b.eq	7a2c <PyFloat_FromString@plt+0xedc>  // b.none
    7a20:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7a24:	ldr	x0, [x0, #4024]
    7a28:	b	7a34 <PyFloat_FromString@plt+0xee4>
    7a2c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    7a30:	ldr	x0, [x0, #3976]
    7a34:	str	x0, [sp, #56]
    7a38:	ldr	x0, [sp, #56]
    7a3c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    7a40:	ldr	x0, [sp, #56]
    7a44:	ldp	x29, x30, [sp], #64
    7a48:	ret
    7a4c:	stp	x29, x30, [sp, #-32]!
    7a50:	mov	x29, sp
    7a54:	str	x0, [sp, #24]
    7a58:	str	x1, [sp, #16]
    7a5c:	ldr	x0, [sp, #24]
    7a60:	ldr	x0, [x0, #16]
    7a64:	ldr	w0, [x0]
    7a68:	bl	7204 <PyFloat_FromString@plt+0x6b4>
    7a6c:	ldp	x29, x30, [sp], #32
    7a70:	ret
    7a74:	stp	x29, x30, [sp, #-32]!
    7a78:	mov	x29, sp
    7a7c:	str	x0, [sp, #24]
    7a80:	str	x1, [sp, #16]
    7a84:	ldr	x0, [sp, #24]
    7a88:	add	x0, x0, #0x10
    7a8c:	bl	1b8f0 <PyInit__decimal@@Base+0x3c18>
    7a90:	bl	6740 <PyLong_FromSsize_t@plt>
    7a94:	ldp	x29, x30, [sp], #32
    7a98:	ret
    7a9c:	stp	x29, x30, [sp, #-32]!
    7aa0:	mov	x29, sp
    7aa4:	str	x0, [sp, #24]
    7aa8:	str	x1, [sp, #16]
    7aac:	ldr	x0, [sp, #24]
    7ab0:	add	x0, x0, #0x10
    7ab4:	bl	1b908 <PyInit__decimal@@Base+0x3c30>
    7ab8:	bl	6740 <PyLong_FromSsize_t@plt>
    7abc:	ldp	x29, x30, [sp], #32
    7ac0:	ret
    7ac4:	stp	x29, x30, [sp, #-32]!
    7ac8:	mov	x29, sp
    7acc:	str	x0, [sp, #24]
    7ad0:	str	x1, [sp, #16]
    7ad4:	ldr	x0, [sp, #24]
    7ad8:	add	x0, x0, #0x10
    7adc:	bl	1b920 <PyInit__decimal@@Base+0x3c48>
    7ae0:	bl	6740 <PyLong_FromSsize_t@plt>
    7ae4:	ldp	x29, x30, [sp], #32
    7ae8:	ret
    7aec:	stp	x29, x30, [sp, #-32]!
    7af0:	mov	x29, sp
    7af4:	str	x0, [sp, #24]
    7af8:	str	x1, [sp, #16]
    7afc:	ldr	x0, [sp, #24]
    7b00:	add	x0, x0, #0x10
    7b04:	bl	1b980 <PyInit__decimal@@Base+0x3ca8>
    7b08:	sxtw	x0, w0
    7b0c:	bl	6740 <PyLong_FromSsize_t@plt>
    7b10:	ldp	x29, x30, [sp], #32
    7b14:	ret
    7b18:	stp	x29, x30, [sp, #-48]!
    7b1c:	mov	x29, sp
    7b20:	str	x0, [sp, #24]
    7b24:	str	x1, [sp, #16]
    7b28:	ldr	x0, [sp, #24]
    7b2c:	add	x0, x0, #0x10
    7b30:	bl	1b938 <PyInit__decimal@@Base+0x3c60>
    7b34:	str	w0, [sp, #44]
    7b38:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7b3c:	add	x0, x0, #0x740
    7b40:	ldrsw	x1, [sp, #44]
    7b44:	ldr	x0, [x0, x1, lsl #3]
    7b48:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    7b4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7b50:	add	x0, x0, #0x740
    7b54:	ldrsw	x1, [sp, #44]
    7b58:	ldr	x0, [x0, x1, lsl #3]
    7b5c:	ldp	x29, x30, [sp], #48
    7b60:	ret
    7b64:	stp	x29, x30, [sp, #-32]!
    7b68:	mov	x29, sp
    7b6c:	str	x0, [sp, #24]
    7b70:	str	x1, [sp, #16]
    7b74:	ldr	x0, [sp, #24]
    7b78:	ldr	w0, [x0, #80]
    7b7c:	sxtw	x0, w0
    7b80:	bl	6780 <PyLong_FromLong@plt>
    7b84:	ldp	x29, x30, [sp], #32
    7b88:	ret
    7b8c:	stp	x29, x30, [sp, #-32]!
    7b90:	mov	x29, sp
    7b94:	str	x0, [sp, #24]
    7b98:	str	x1, [sp, #16]
    7b9c:	ldr	x0, [sp, #24]
    7ba0:	add	x0, x0, #0x10
    7ba4:	bl	24d00 <PyInit__decimal@@Base+0xd028>
    7ba8:	bl	6740 <PyLong_FromSsize_t@plt>
    7bac:	ldp	x29, x30, [sp], #32
    7bb0:	ret
    7bb4:	stp	x29, x30, [sp, #-32]!
    7bb8:	mov	x29, sp
    7bbc:	str	x0, [sp, #24]
    7bc0:	str	x1, [sp, #16]
    7bc4:	ldr	x0, [sp, #24]
    7bc8:	add	x0, x0, #0x10
    7bcc:	bl	24d28 <PyInit__decimal@@Base+0xd050>
    7bd0:	bl	6740 <PyLong_FromSsize_t@plt>
    7bd4:	ldp	x29, x30, [sp], #32
    7bd8:	ret
    7bdc:	stp	x29, x30, [sp, #-64]!
    7be0:	mov	x29, sp
    7be4:	str	x0, [sp, #40]
    7be8:	str	x1, [sp, #32]
    7bec:	str	x2, [sp, #24]
    7bf0:	ldr	x0, [sp, #32]
    7bf4:	bl	6790 <PyLong_AsSsize_t@plt>
    7bf8:	str	x0, [sp, #56]
    7bfc:	ldr	x0, [sp, #56]
    7c00:	cmn	x0, #0x1
    7c04:	b.ne	7c1c <PyFloat_FromString@plt+0x10cc>  // b.any
    7c08:	bl	6880 <PyErr_Occurred@plt>
    7c0c:	cmp	x0, #0x0
    7c10:	b.eq	7c1c <PyFloat_FromString@plt+0x10cc>  // b.none
    7c14:	mov	w0, #0xffffffff            	// #-1
    7c18:	b	7c50 <PyFloat_FromString@plt+0x1100>
    7c1c:	ldr	x0, [sp, #40]
    7c20:	add	x0, x0, #0x10
    7c24:	str	x0, [sp, #48]
    7c28:	ldr	x1, [sp, #56]
    7c2c:	ldr	x0, [sp, #48]
    7c30:	bl	1b9b0 <PyInit__decimal@@Base+0x3cd8>
    7c34:	cmp	w0, #0x0
    7c38:	b.ne	7c4c <PyFloat_FromString@plt+0x10fc>  // b.any
    7c3c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7c40:	add	x0, x0, #0xb20
    7c44:	bl	6de4 <PyFloat_FromString@plt+0x294>
    7c48:	b	7c50 <PyFloat_FromString@plt+0x1100>
    7c4c:	mov	w0, #0x0                   	// #0
    7c50:	ldp	x29, x30, [sp], #64
    7c54:	ret
    7c58:	stp	x29, x30, [sp, #-64]!
    7c5c:	mov	x29, sp
    7c60:	str	x0, [sp, #40]
    7c64:	str	x1, [sp, #32]
    7c68:	str	x2, [sp, #24]
    7c6c:	ldr	x0, [sp, #32]
    7c70:	bl	6790 <PyLong_AsSsize_t@plt>
    7c74:	str	x0, [sp, #56]
    7c78:	ldr	x0, [sp, #56]
    7c7c:	cmn	x0, #0x1
    7c80:	b.ne	7c98 <PyFloat_FromString@plt+0x1148>  // b.any
    7c84:	bl	6880 <PyErr_Occurred@plt>
    7c88:	cmp	x0, #0x0
    7c8c:	b.eq	7c98 <PyFloat_FromString@plt+0x1148>  // b.none
    7c90:	mov	w0, #0xffffffff            	// #-1
    7c94:	b	7ccc <PyFloat_FromString@plt+0x117c>
    7c98:	ldr	x0, [sp, #40]
    7c9c:	add	x0, x0, #0x10
    7ca0:	str	x0, [sp, #48]
    7ca4:	ldr	x1, [sp, #56]
    7ca8:	ldr	x0, [sp, #48]
    7cac:	bl	1ba50 <PyInit__decimal@@Base+0x3d78>
    7cb0:	cmp	w0, #0x0
    7cb4:	b.ne	7cc8 <PyFloat_FromString@plt+0x1178>  // b.any
    7cb8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7cbc:	add	x0, x0, #0xb48
    7cc0:	bl	6de4 <PyFloat_FromString@plt+0x294>
    7cc4:	b	7ccc <PyFloat_FromString@plt+0x117c>
    7cc8:	mov	w0, #0x0                   	// #0
    7ccc:	ldp	x29, x30, [sp], #64
    7cd0:	ret
    7cd4:	stp	x29, x30, [sp, #-64]!
    7cd8:	mov	x29, sp
    7cdc:	str	x0, [sp, #40]
    7ce0:	str	x1, [sp, #32]
    7ce4:	str	x2, [sp, #24]
    7ce8:	ldr	x0, [sp, #32]
    7cec:	bl	6790 <PyLong_AsSsize_t@plt>
    7cf0:	str	x0, [sp, #56]
    7cf4:	ldr	x0, [sp, #56]
    7cf8:	cmn	x0, #0x1
    7cfc:	b.ne	7d14 <PyFloat_FromString@plt+0x11c4>  // b.any
    7d00:	bl	6880 <PyErr_Occurred@plt>
    7d04:	cmp	x0, #0x0
    7d08:	b.eq	7d14 <PyFloat_FromString@plt+0x11c4>  // b.none
    7d0c:	mov	w0, #0xffffffff            	// #-1
    7d10:	b	7d48 <PyFloat_FromString@plt+0x11f8>
    7d14:	ldr	x0, [sp, #40]
    7d18:	add	x0, x0, #0x10
    7d1c:	str	x0, [sp, #48]
    7d20:	ldr	x1, [sp, #56]
    7d24:	ldr	x0, [sp, #48]
    7d28:	bl	1ba00 <PyInit__decimal@@Base+0x3d28>
    7d2c:	cmp	w0, #0x0
    7d30:	b.ne	7d44 <PyFloat_FromString@plt+0x11f4>  // b.any
    7d34:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7d38:	add	x0, x0, #0xb70
    7d3c:	bl	6de4 <PyFloat_FromString@plt+0x294>
    7d40:	b	7d48 <PyFloat_FromString@plt+0x11f8>
    7d44:	mov	w0, #0x0                   	// #0
    7d48:	ldp	x29, x30, [sp], #64
    7d4c:	ret
    7d50:	stp	x29, x30, [sp, #-64]!
    7d54:	mov	x29, sp
    7d58:	str	x0, [sp, #40]
    7d5c:	str	x1, [sp, #32]
    7d60:	str	x2, [sp, #24]
    7d64:	ldr	x0, [sp, #32]
    7d68:	bl	751c <PyFloat_FromString@plt+0x9cc>
    7d6c:	str	w0, [sp, #60]
    7d70:	ldr	w0, [sp, #60]
    7d74:	cmn	w0, #0x1
    7d78:	b.ne	7d84 <PyFloat_FromString@plt+0x1234>  // b.any
    7d7c:	mov	w0, #0xffffffff            	// #-1
    7d80:	b	7db8 <PyFloat_FromString@plt+0x1268>
    7d84:	ldr	x0, [sp, #40]
    7d88:	add	x0, x0, #0x10
    7d8c:	str	x0, [sp, #48]
    7d90:	ldr	w1, [sp, #60]
    7d94:	ldr	x0, [sp, #48]
    7d98:	bl	1baa0 <PyInit__decimal@@Base+0x3dc8>
    7d9c:	cmp	w0, #0x0
    7da0:	b.ne	7db4 <PyFloat_FromString@plt+0x1264>  // b.any
    7da4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7da8:	add	x0, x0, #0xb98
    7dac:	bl	6e3c <PyFloat_FromString@plt+0x2ec>
    7db0:	b	7db8 <PyFloat_FromString@plt+0x1268>
    7db4:	mov	w0, #0x0                   	// #0
    7db8:	ldp	x29, x30, [sp], #64
    7dbc:	ret
    7dc0:	stp	x29, x30, [sp, #-64]!
    7dc4:	mov	x29, sp
    7dc8:	str	x0, [sp, #40]
    7dcc:	str	x1, [sp, #32]
    7dd0:	str	x2, [sp, #24]
    7dd4:	ldr	x0, [sp, #32]
    7dd8:	bl	6790 <PyLong_AsSsize_t@plt>
    7ddc:	str	x0, [sp, #56]
    7de0:	ldr	x0, [sp, #56]
    7de4:	cmn	x0, #0x1
    7de8:	b.ne	7e00 <PyFloat_FromString@plt+0x12b0>  // b.any
    7dec:	bl	6880 <PyErr_Occurred@plt>
    7df0:	cmp	x0, #0x0
    7df4:	b.eq	7e00 <PyFloat_FromString@plt+0x12b0>  // b.none
    7df8:	mov	w0, #0xffffffff            	// #-1
    7dfc:	b	7e3c <PyFloat_FromString@plt+0x12ec>
    7e00:	ldr	x0, [sp, #56]
    7e04:	cmp	x0, #0x0
    7e08:	b.eq	7e28 <PyFloat_FromString@plt+0x12d8>  // b.none
    7e0c:	ldr	x0, [sp, #56]
    7e10:	cmp	x0, #0x1
    7e14:	b.eq	7e28 <PyFloat_FromString@plt+0x12d8>  // b.none
    7e18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7e1c:	add	x0, x0, #0xbc0
    7e20:	bl	6de4 <PyFloat_FromString@plt+0x294>
    7e24:	b	7e3c <PyFloat_FromString@plt+0x12ec>
    7e28:	ldr	x0, [sp, #56]
    7e2c:	mov	w1, w0
    7e30:	ldr	x0, [sp, #40]
    7e34:	str	w1, [x0, #80]
    7e38:	mov	w0, #0x0                   	// #0
    7e3c:	ldp	x29, x30, [sp], #64
    7e40:	ret
    7e44:	stp	x29, x30, [sp, #-48]!
    7e48:	mov	x29, sp
    7e4c:	str	x0, [sp, #24]
    7e50:	str	x1, [sp, #16]
    7e54:	ldr	x0, [sp, #16]
    7e58:	bl	7174 <PyFloat_FromString@plt+0x624>
    7e5c:	str	w0, [sp, #44]
    7e60:	ldr	w0, [sp, #44]
    7e64:	and	w0, w0, #0x18000
    7e68:	cmp	w0, #0x0
    7e6c:	b.eq	7e78 <PyFloat_FromString@plt+0x1328>  // b.none
    7e70:	mov	w0, #0xffffffff            	// #-1
    7e74:	b	7eac <PyFloat_FromString@plt+0x135c>
    7e78:	ldr	x0, [sp, #24]
    7e7c:	add	x0, x0, #0x10
    7e80:	str	x0, [sp, #32]
    7e84:	ldr	w1, [sp, #44]
    7e88:	ldr	x0, [sp, #32]
    7e8c:	bl	1bae4 <PyInit__decimal@@Base+0x3e0c>
    7e90:	cmp	w0, #0x0
    7e94:	b.ne	7ea8 <PyFloat_FromString@plt+0x1358>  // b.any
    7e98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7e9c:	add	x0, x0, #0xbe8
    7ea0:	bl	6e3c <PyFloat_FromString@plt+0x2ec>
    7ea4:	b	7eac <PyFloat_FromString@plt+0x135c>
    7ea8:	mov	w0, #0x0                   	// #0
    7eac:	ldp	x29, x30, [sp], #48
    7eb0:	ret
    7eb4:	stp	x29, x30, [sp, #-48]!
    7eb8:	mov	x29, sp
    7ebc:	str	x0, [sp, #24]
    7ec0:	str	x1, [sp, #16]
    7ec4:	ldr	x0, [sp, #16]
    7ec8:	ldr	x1, [x0, #8]
    7ecc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7ed0:	add	x0, x0, #0x710
    7ed4:	ldr	x0, [x0]
    7ed8:	cmp	x1, x0
    7edc:	b.ne	7ef4 <PyFloat_FromString@plt+0x13a4>  // b.any
    7ee0:	ldr	x0, [sp, #16]
    7ee4:	ldr	x0, [x0, #16]
    7ee8:	ldr	w0, [x0]
    7eec:	str	w0, [sp, #44]
    7ef0:	b	7f18 <PyFloat_FromString@plt+0x13c8>
    7ef4:	ldr	x0, [sp, #16]
    7ef8:	bl	72d0 <PyFloat_FromString@plt+0x780>
    7efc:	str	w0, [sp, #44]
    7f00:	ldr	w0, [sp, #44]
    7f04:	and	w0, w0, #0x18000
    7f08:	cmp	w0, #0x0
    7f0c:	b.eq	7f18 <PyFloat_FromString@plt+0x13c8>  // b.none
    7f10:	mov	w0, #0xffffffff            	// #-1
    7f14:	b	7f4c <PyFloat_FromString@plt+0x13fc>
    7f18:	ldr	x0, [sp, #24]
    7f1c:	add	x0, x0, #0x10
    7f20:	str	x0, [sp, #32]
    7f24:	ldr	w1, [sp, #44]
    7f28:	ldr	x0, [sp, #32]
    7f2c:	bl	1bae4 <PyInit__decimal@@Base+0x3e0c>
    7f30:	cmp	w0, #0x0
    7f34:	b.ne	7f48 <PyFloat_FromString@plt+0x13f8>  // b.any
    7f38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7f3c:	add	x0, x0, #0xc10
    7f40:	bl	6e3c <PyFloat_FromString@plt+0x2ec>
    7f44:	b	7f4c <PyFloat_FromString@plt+0x13fc>
    7f48:	mov	w0, #0x0                   	// #0
    7f4c:	ldp	x29, x30, [sp], #48
    7f50:	ret
    7f54:	stp	x29, x30, [sp, #-48]!
    7f58:	mov	x29, sp
    7f5c:	str	x0, [sp, #24]
    7f60:	str	x1, [sp, #16]
    7f64:	ldr	x0, [sp, #16]
    7f68:	bl	7174 <PyFloat_FromString@plt+0x624>
    7f6c:	str	w0, [sp, #44]
    7f70:	ldr	w0, [sp, #44]
    7f74:	and	w0, w0, #0x18000
    7f78:	cmp	w0, #0x0
    7f7c:	b.eq	7f88 <PyFloat_FromString@plt+0x1438>  // b.none
    7f80:	mov	w0, #0xffffffff            	// #-1
    7f84:	b	7fbc <PyFloat_FromString@plt+0x146c>
    7f88:	ldr	x0, [sp, #24]
    7f8c:	add	x0, x0, #0x10
    7f90:	str	x0, [sp, #32]
    7f94:	ldr	w1, [sp, #44]
    7f98:	ldr	x0, [sp, #32]
    7f9c:	bl	1bb20 <PyInit__decimal@@Base+0x3e48>
    7fa0:	cmp	w0, #0x0
    7fa4:	b.ne	7fb8 <PyFloat_FromString@plt+0x1468>  // b.any
    7fa8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    7fac:	add	x0, x0, #0xc38
    7fb0:	bl	6e3c <PyFloat_FromString@plt+0x2ec>
    7fb4:	b	7fbc <PyFloat_FromString@plt+0x146c>
    7fb8:	mov	w0, #0x0                   	// #0
    7fbc:	ldp	x29, x30, [sp], #48
    7fc0:	ret
    7fc4:	stp	x29, x30, [sp, #-48]!
    7fc8:	mov	x29, sp
    7fcc:	str	x0, [sp, #24]
    7fd0:	str	x1, [sp, #16]
    7fd4:	ldr	x0, [sp, #16]
    7fd8:	ldr	x1, [x0, #8]
    7fdc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    7fe0:	add	x0, x0, #0x710
    7fe4:	ldr	x0, [x0]
    7fe8:	cmp	x1, x0
    7fec:	b.ne	8004 <PyFloat_FromString@plt+0x14b4>  // b.any
    7ff0:	ldr	x0, [sp, #16]
    7ff4:	ldr	x0, [x0, #16]
    7ff8:	ldr	w0, [x0]
    7ffc:	str	w0, [sp, #44]
    8000:	b	8028 <PyFloat_FromString@plt+0x14d8>
    8004:	ldr	x0, [sp, #16]
    8008:	bl	72d0 <PyFloat_FromString@plt+0x780>
    800c:	str	w0, [sp, #44]
    8010:	ldr	w0, [sp, #44]
    8014:	and	w0, w0, #0x18000
    8018:	cmp	w0, #0x0
    801c:	b.eq	8028 <PyFloat_FromString@plt+0x14d8>  // b.none
    8020:	mov	w0, #0xffffffff            	// #-1
    8024:	b	805c <PyFloat_FromString@plt+0x150c>
    8028:	ldr	x0, [sp, #24]
    802c:	add	x0, x0, #0x10
    8030:	str	x0, [sp, #32]
    8034:	ldr	w1, [sp, #44]
    8038:	ldr	x0, [sp, #32]
    803c:	bl	1bb20 <PyInit__decimal@@Base+0x3e48>
    8040:	cmp	w0, #0x0
    8044:	b.ne	8058 <PyFloat_FromString@plt+0x1508>  // b.any
    8048:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    804c:	add	x0, x0, #0xc68
    8050:	bl	6e3c <PyFloat_FromString@plt+0x2ec>
    8054:	b	805c <PyFloat_FromString@plt+0x150c>
    8058:	mov	w0, #0x0                   	// #0
    805c:	ldp	x29, x30, [sp], #48
    8060:	ret
    8064:	stp	x29, x30, [sp, #-64]!
    8068:	mov	x29, sp
    806c:	str	x0, [sp, #40]
    8070:	str	x1, [sp, #32]
    8074:	str	x2, [sp, #24]
    8078:	ldr	x0, [sp, #32]
    807c:	bl	6790 <PyLong_AsSsize_t@plt>
    8080:	str	x0, [sp, #56]
    8084:	ldr	x0, [sp, #56]
    8088:	cmn	x0, #0x1
    808c:	b.ne	80a4 <PyFloat_FromString@plt+0x1554>  // b.any
    8090:	bl	6880 <PyErr_Occurred@plt>
    8094:	cmp	x0, #0x0
    8098:	b.eq	80a4 <PyFloat_FromString@plt+0x1554>  // b.none
    809c:	mov	w0, #0xffffffff            	// #-1
    80a0:	b	810c <PyFloat_FromString@plt+0x15bc>
    80a4:	ldr	x1, [sp, #56]
    80a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
    80ac:	cmp	x1, x0
    80b0:	b.lt	80cc <PyFloat_FromString@plt+0x157c>  // b.tstop
    80b4:	ldr	x1, [sp, #56]
    80b8:	mov	x0, #0x7fffffff            	// #2147483647
    80bc:	cmp	x1, x0
    80c0:	b.gt	80cc <PyFloat_FromString@plt+0x157c>
    80c4:	ldr	x0, [sp, #56]
    80c8:	b	80d0 <PyFloat_FromString@plt+0x1580>
    80cc:	mov	x0, #0x7fffffff            	// #2147483647
    80d0:	str	x0, [sp, #56]
    80d4:	ldr	x0, [sp, #40]
    80d8:	add	x0, x0, #0x10
    80dc:	str	x0, [sp, #48]
    80e0:	ldr	x0, [sp, #56]
    80e4:	mov	w1, w0
    80e8:	ldr	x0, [sp, #48]
    80ec:	bl	1bb5c <PyInit__decimal@@Base+0x3e84>
    80f0:	cmp	w0, #0x0
    80f4:	b.ne	8108 <PyFloat_FromString@plt+0x15b8>  // b.any
    80f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    80fc:	add	x0, x0, #0xc98
    8100:	bl	6de4 <PyFloat_FromString@plt+0x294>
    8104:	b	810c <PyFloat_FromString@plt+0x15bc>
    8108:	mov	w0, #0x0                   	// #0
    810c:	ldp	x29, x30, [sp], #64
    8110:	ret
    8114:	stp	x29, x30, [sp, #-48]!
    8118:	mov	x29, sp
    811c:	str	x0, [sp, #24]
    8120:	str	x1, [sp, #16]
    8124:	ldr	x0, [sp, #16]
    8128:	ldr	x0, [x0, #8]
    812c:	ldr	x0, [x0, #168]
    8130:	and	x0, x0, #0x10000000
    8134:	cmp	x0, #0x0
    8138:	b.eq	81a4 <PyFloat_FromString@plt+0x1654>  // b.none
    813c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8140:	add	x1, x0, #0xcc0
    8144:	ldr	x0, [sp, #16]
    8148:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    814c:	cmp	w0, #0x0
    8150:	b.ne	8170 <PyFloat_FromString@plt+0x1620>  // b.any
    8154:	ldr	x0, [sp, #24]
    8158:	ldr	x0, [x0, #64]
    815c:	str	x0, [sp, #40]
    8160:	ldr	x0, [sp, #40]
    8164:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    8168:	ldr	x0, [sp, #40]
    816c:	b	81b0 <PyFloat_FromString@plt+0x1660>
    8170:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8174:	add	x1, x0, #0xcc8
    8178:	ldr	x0, [sp, #16]
    817c:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    8180:	cmp	w0, #0x0
    8184:	b.ne	81a4 <PyFloat_FromString@plt+0x1654>  // b.any
    8188:	ldr	x0, [sp, #24]
    818c:	ldr	x0, [x0, #72]
    8190:	str	x0, [sp, #40]
    8194:	ldr	x0, [sp, #40]
    8198:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    819c:	ldr	x0, [sp, #40]
    81a0:	b	81b0 <PyFloat_FromString@plt+0x1660>
    81a4:	ldr	x1, [sp, #16]
    81a8:	ldr	x0, [sp, #24]
    81ac:	bl	6850 <PyObject_GenericGetAttr@plt>
    81b0:	ldp	x29, x30, [sp], #48
    81b4:	ret
    81b8:	stp	x29, x30, [sp, #-48]!
    81bc:	mov	x29, sp
    81c0:	str	x0, [sp, #40]
    81c4:	str	x1, [sp, #32]
    81c8:	str	x2, [sp, #24]
    81cc:	ldr	x0, [sp, #24]
    81d0:	cmp	x0, #0x0
    81d4:	b.ne	81fc <PyFloat_FromString@plt+0x16ac>  // b.any
    81d8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    81dc:	ldr	x0, [x0, #4048]
    81e0:	ldr	x2, [x0]
    81e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    81e8:	add	x1, x0, #0xcd0
    81ec:	mov	x0, x2
    81f0:	bl	66f0 <PyErr_SetString@plt>
    81f4:	mov	w0, #0xffffffff            	// #-1
    81f8:	b	8274 <PyFloat_FromString@plt+0x1724>
    81fc:	ldr	x0, [sp, #32]
    8200:	ldr	x0, [x0, #8]
    8204:	ldr	x0, [x0, #168]
    8208:	and	x0, x0, #0x10000000
    820c:	cmp	x0, #0x0
    8210:	b.eq	8264 <PyFloat_FromString@plt+0x1714>  // b.none
    8214:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8218:	add	x1, x0, #0xcc0
    821c:	ldr	x0, [sp, #32]
    8220:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    8224:	cmp	w0, #0x0
    8228:	b.ne	823c <PyFloat_FromString@plt+0x16ec>  // b.any
    822c:	ldr	x1, [sp, #24]
    8230:	ldr	x0, [sp, #40]
    8234:	bl	7eb4 <PyFloat_FromString@plt+0x1364>
    8238:	b	8274 <PyFloat_FromString@plt+0x1724>
    823c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8240:	add	x1, x0, #0xcc8
    8244:	ldr	x0, [sp, #32]
    8248:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    824c:	cmp	w0, #0x0
    8250:	b.ne	8264 <PyFloat_FromString@plt+0x1714>  // b.any
    8254:	ldr	x1, [sp, #24]
    8258:	ldr	x0, [sp, #40]
    825c:	bl	7fc4 <PyFloat_FromString@plt+0x1474>
    8260:	b	8274 <PyFloat_FromString@plt+0x1724>
    8264:	ldr	x2, [sp, #24]
    8268:	ldr	x1, [sp, #32]
    826c:	ldr	x0, [sp, #40]
    8270:	bl	6a60 <PyObject_GenericSetAttr@plt>
    8274:	ldp	x29, x30, [sp], #48
    8278:	ret
    827c:	stp	x29, x30, [sp, #-32]!
    8280:	mov	x29, sp
    8284:	str	x0, [sp, #24]
    8288:	str	x1, [sp, #16]
    828c:	ldr	x0, [sp, #24]
    8290:	str	wzr, [x0, #40]
    8294:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8298:	ldr	x0, [x0, #4008]
    829c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    82a0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    82a4:	ldr	x0, [x0, #4008]
    82a8:	ldp	x29, x30, [sp], #32
    82ac:	ret
    82b0:	stp	x29, x30, [sp, #-32]!
    82b4:	mov	x29, sp
    82b8:	str	x0, [sp, #24]
    82bc:	str	x1, [sp, #16]
    82c0:	ldr	x0, [sp, #24]
    82c4:	str	wzr, [x0, #44]
    82c8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    82cc:	ldr	x0, [x0, #4008]
    82d0:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    82d4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    82d8:	ldr	x0, [x0, #4008]
    82dc:	ldp	x29, x30, [sp], #32
    82e0:	ret
    82e4:	stp	x29, x30, [sp, #-64]!
    82e8:	mov	x29, sp
    82ec:	str	x0, [sp, #40]
    82f0:	str	x1, [sp, #32]
    82f4:	str	x2, [sp, #24]
    82f8:	str	xzr, [sp, #56]
    82fc:	ldr	x1, [sp, #40]
    8300:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8304:	add	x0, x0, #0x500
    8308:	cmp	x1, x0
    830c:	b.ne	8324 <PyFloat_FromString@plt+0x17d4>  // b.any
    8310:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8314:	add	x0, x0, #0x500
    8318:	bl	6a00 <_PyObject_New@plt>
    831c:	str	x0, [sp, #56]
    8320:	b	833c <PyFloat_FromString@plt+0x17ec>
    8324:	ldr	x0, [sp, #40]
    8328:	ldr	x2, [x0, #304]
    832c:	mov	x1, #0x0                   	// #0
    8330:	ldr	x0, [sp, #40]
    8334:	blr	x2
    8338:	str	x0, [sp, #56]
    833c:	ldr	x0, [sp, #56]
    8340:	cmp	x0, #0x0
    8344:	b.ne	8350 <PyFloat_FromString@plt+0x1800>  // b.any
    8348:	mov	x0, #0x0                   	// #0
    834c:	b	84ac <PyFloat_FromString@plt+0x195c>
    8350:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8354:	add	x0, x0, #0x710
    8358:	ldr	x0, [x0]
    835c:	mov	x1, #0x0                   	// #0
    8360:	bl	68e0 <PyObject_CallObject@plt>
    8364:	mov	x1, x0
    8368:	ldr	x0, [sp, #56]
    836c:	str	x1, [x0, #64]
    8370:	ldr	x0, [sp, #56]
    8374:	ldr	x0, [x0, #64]
    8378:	cmp	x0, #0x0
    837c:	b.ne	83a4 <PyFloat_FromString@plt+0x1854>  // b.any
    8380:	ldr	x0, [sp, #56]
    8384:	str	xzr, [x0, #72]
    8388:	ldr	x2, [sp, #56]
    838c:	mov	w1, #0x4a6                 	// #1190
    8390:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8394:	add	x0, x0, #0x9c0
    8398:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    839c:	mov	x0, #0x0                   	// #0
    83a0:	b	84ac <PyFloat_FromString@plt+0x195c>
    83a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    83a8:	add	x0, x0, #0x710
    83ac:	ldr	x0, [x0]
    83b0:	mov	x1, #0x0                   	// #0
    83b4:	bl	68e0 <PyObject_CallObject@plt>
    83b8:	mov	x1, x0
    83bc:	ldr	x0, [sp, #56]
    83c0:	str	x1, [x0, #72]
    83c4:	ldr	x0, [sp, #56]
    83c8:	ldr	x0, [x0, #72]
    83cc:	cmp	x0, #0x0
    83d0:	b.ne	83f0 <PyFloat_FromString@plt+0x18a0>  // b.any
    83d4:	ldr	x2, [sp, #56]
    83d8:	mov	w1, #0x4ab                 	// #1195
    83dc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    83e0:	add	x0, x0, #0x9c0
    83e4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    83e8:	mov	x0, #0x0                   	// #0
    83ec:	b	84ac <PyFloat_FromString@plt+0x195c>
    83f0:	ldr	x0, [sp, #56]
    83f4:	add	x0, x0, #0x10
    83f8:	str	x0, [sp, #48]
    83fc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8400:	add	x0, x0, #0x720
    8404:	ldr	x0, [x0]
    8408:	cmp	x0, #0x0
    840c:	b.eq	8444 <PyFloat_FromString@plt+0x18f4>  // b.none
    8410:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8414:	add	x0, x0, #0x720
    8418:	ldr	x0, [x0]
    841c:	ldr	x2, [sp, #48]
    8420:	add	x1, x0, #0x10
    8424:	mov	x0, x2
    8428:	ldp	x2, x3, [x1]
    842c:	stp	x2, x3, [x0]
    8430:	ldp	x2, x3, [x1, #16]
    8434:	stp	x2, x3, [x0, #16]
    8438:	ldp	x2, x3, [x1, #32]
    843c:	stp	x2, x3, [x0, #32]
    8440:	b	846c <PyFloat_FromString@plt+0x191c>
    8444:	ldr	x2, [sp, #48]
    8448:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    844c:	add	x1, x0, #0x330
    8450:	mov	x0, x2
    8454:	ldp	x2, x3, [x1]
    8458:	stp	x2, x3, [x0]
    845c:	ldp	x2, x3, [x1, #16]
    8460:	stp	x2, x3, [x0, #16]
    8464:	ldp	x2, x3, [x1, #32]
    8468:	stp	x2, x3, [x0, #32]
    846c:	ldr	x0, [sp, #56]
    8470:	ldr	x0, [x0, #64]
    8474:	ldr	x1, [sp, #48]
    8478:	add	x1, x1, #0x18
    847c:	str	x1, [x0, #16]
    8480:	ldr	x0, [sp, #56]
    8484:	ldr	x0, [x0, #72]
    8488:	ldr	x1, [sp, #48]
    848c:	add	x1, x1, #0x1c
    8490:	str	x1, [x0, #16]
    8494:	ldr	x0, [sp, #56]
    8498:	mov	w1, #0x1                   	// #1
    849c:	str	w1, [x0, #80]
    84a0:	ldr	x0, [sp, #56]
    84a4:	str	xzr, [x0, #88]
    84a8:	ldr	x0, [sp, #56]
    84ac:	ldp	x29, x30, [sp], #64
    84b0:	ret
    84b4:	stp	x29, x30, [sp, #-32]!
    84b8:	mov	x29, sp
    84bc:	str	x0, [sp, #24]
    84c0:	ldr	x0, [sp, #24]
    84c4:	ldr	x0, [x0, #64]
    84c8:	bl	6d64 <PyFloat_FromString@plt+0x214>
    84cc:	ldr	x0, [sp, #24]
    84d0:	ldr	x0, [x0, #72]
    84d4:	bl	6d64 <PyFloat_FromString@plt+0x214>
    84d8:	ldr	x0, [sp, #24]
    84dc:	ldr	x0, [x0, #8]
    84e0:	ldr	x1, [x0, #320]
    84e4:	ldr	x0, [sp, #24]
    84e8:	blr	x1
    84ec:	nop
    84f0:	ldp	x29, x30, [sp], #32
    84f4:	ret
    84f8:	sub	sp, sp, #0xa0
    84fc:	stp	x29, x30, [sp, #32]
    8500:	add	x29, sp, #0x20
    8504:	str	x0, [sp, #72]
    8508:	str	x1, [sp, #64]
    850c:	str	x2, [sp, #56]
    8510:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8514:	ldr	x0, [x0, #4008]
    8518:	str	x0, [sp, #144]
    851c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8520:	ldr	x0, [x0, #4008]
    8524:	str	x0, [sp, #136]
    8528:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    852c:	ldr	x0, [x0, #4008]
    8530:	str	x0, [sp, #128]
    8534:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8538:	ldr	x0, [x0, #4008]
    853c:	str	x0, [sp, #120]
    8540:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8544:	ldr	x0, [x0, #4008]
    8548:	str	x0, [sp, #112]
    854c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8550:	ldr	x0, [x0, #4008]
    8554:	str	x0, [sp, #104]
    8558:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    855c:	ldr	x0, [x0, #4008]
    8560:	str	x0, [sp, #96]
    8564:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8568:	ldr	x0, [x0, #4008]
    856c:	str	x0, [sp, #88]
    8570:	add	x4, sp, #0x78
    8574:	add	x3, sp, #0x80
    8578:	add	x2, sp, #0x88
    857c:	add	x1, sp, #0x90
    8580:	add	x0, sp, #0x58
    8584:	str	x0, [sp, #24]
    8588:	add	x0, sp, #0x60
    858c:	str	x0, [sp, #16]
    8590:	add	x0, sp, #0x68
    8594:	str	x0, [sp, #8]
    8598:	add	x0, sp, #0x70
    859c:	str	x0, [sp]
    85a0:	mov	x7, x4
    85a4:	mov	x6, x3
    85a8:	mov	x5, x2
    85ac:	mov	x4, x1
    85b0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    85b4:	add	x3, x0, #0x208
    85b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    85bc:	add	x2, x0, #0xcf8
    85c0:	ldr	x1, [sp, #56]
    85c4:	ldr	x0, [sp, #64]
    85c8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    85cc:	cmp	w0, #0x0
    85d0:	b.ne	85dc <PyFloat_FromString@plt+0x1a8c>  // b.any
    85d4:	mov	w0, #0xffffffff            	// #-1
    85d8:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    85dc:	ldr	x1, [sp, #144]
    85e0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    85e4:	ldr	x0, [x0, #4008]
    85e8:	cmp	x1, x0
    85ec:	b.eq	8614 <PyFloat_FromString@plt+0x1ac4>  // b.none
    85f0:	ldr	x0, [sp, #144]
    85f4:	mov	x2, #0x0                   	// #0
    85f8:	mov	x1, x0
    85fc:	ldr	x0, [sp, #72]
    8600:	bl	7bdc <PyFloat_FromString@plt+0x108c>
    8604:	cmp	w0, #0x0
    8608:	b.ge	8614 <PyFloat_FromString@plt+0x1ac4>  // b.tcont
    860c:	mov	w0, #0xffffffff            	// #-1
    8610:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    8614:	ldr	x1, [sp, #136]
    8618:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    861c:	ldr	x0, [x0, #4008]
    8620:	cmp	x1, x0
    8624:	b.eq	864c <PyFloat_FromString@plt+0x1afc>  // b.none
    8628:	ldr	x0, [sp, #136]
    862c:	mov	x2, #0x0                   	// #0
    8630:	mov	x1, x0
    8634:	ldr	x0, [sp, #72]
    8638:	bl	7d50 <PyFloat_FromString@plt+0x1200>
    863c:	cmp	w0, #0x0
    8640:	b.ge	864c <PyFloat_FromString@plt+0x1afc>  // b.tcont
    8644:	mov	w0, #0xffffffff            	// #-1
    8648:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    864c:	ldr	x1, [sp, #128]
    8650:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8654:	ldr	x0, [x0, #4008]
    8658:	cmp	x1, x0
    865c:	b.eq	8684 <PyFloat_FromString@plt+0x1b34>  // b.none
    8660:	ldr	x0, [sp, #128]
    8664:	mov	x2, #0x0                   	// #0
    8668:	mov	x1, x0
    866c:	ldr	x0, [sp, #72]
    8670:	bl	7c58 <PyFloat_FromString@plt+0x1108>
    8674:	cmp	w0, #0x0
    8678:	b.ge	8684 <PyFloat_FromString@plt+0x1b34>  // b.tcont
    867c:	mov	w0, #0xffffffff            	// #-1
    8680:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    8684:	ldr	x1, [sp, #120]
    8688:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    868c:	ldr	x0, [x0, #4008]
    8690:	cmp	x1, x0
    8694:	b.eq	86bc <PyFloat_FromString@plt+0x1b6c>  // b.none
    8698:	ldr	x0, [sp, #120]
    869c:	mov	x2, #0x0                   	// #0
    86a0:	mov	x1, x0
    86a4:	ldr	x0, [sp, #72]
    86a8:	bl	7cd4 <PyFloat_FromString@plt+0x1184>
    86ac:	cmp	w0, #0x0
    86b0:	b.ge	86bc <PyFloat_FromString@plt+0x1b6c>  // b.tcont
    86b4:	mov	w0, #0xffffffff            	// #-1
    86b8:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    86bc:	ldr	x1, [sp, #112]
    86c0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    86c4:	ldr	x0, [x0, #4008]
    86c8:	cmp	x1, x0
    86cc:	b.eq	86f4 <PyFloat_FromString@plt+0x1ba4>  // b.none
    86d0:	ldr	x0, [sp, #112]
    86d4:	mov	x2, #0x0                   	// #0
    86d8:	mov	x1, x0
    86dc:	ldr	x0, [sp, #72]
    86e0:	bl	7dc0 <PyFloat_FromString@plt+0x1270>
    86e4:	cmp	w0, #0x0
    86e8:	b.ge	86f4 <PyFloat_FromString@plt+0x1ba4>  // b.tcont
    86ec:	mov	w0, #0xffffffff            	// #-1
    86f0:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    86f4:	ldr	x1, [sp, #104]
    86f8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    86fc:	ldr	x0, [x0, #4008]
    8700:	cmp	x1, x0
    8704:	b.eq	872c <PyFloat_FromString@plt+0x1bdc>  // b.none
    8708:	ldr	x0, [sp, #104]
    870c:	mov	x2, #0x0                   	// #0
    8710:	mov	x1, x0
    8714:	ldr	x0, [sp, #72]
    8718:	bl	8064 <PyFloat_FromString@plt+0x1514>
    871c:	cmp	w0, #0x0
    8720:	b.ge	872c <PyFloat_FromString@plt+0x1bdc>  // b.tcont
    8724:	mov	w0, #0xffffffff            	// #-1
    8728:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    872c:	ldr	x1, [sp, #88]
    8730:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8734:	ldr	x0, [x0, #4008]
    8738:	cmp	x1, x0
    873c:	b.eq	8798 <PyFloat_FromString@plt+0x1c48>  // b.none
    8740:	ldr	x0, [sp, #88]
    8744:	ldr	x0, [x0, #8]
    8748:	ldr	x0, [x0, #168]
    874c:	and	x0, x0, #0x2000000
    8750:	cmp	x0, #0x0
    8754:	b.eq	8770 <PyFloat_FromString@plt+0x1c20>  // b.none
    8758:	ldr	x0, [sp, #88]
    875c:	mov	x1, x0
    8760:	ldr	x0, [sp, #72]
    8764:	bl	7e44 <PyFloat_FromString@plt+0x12f4>
    8768:	str	w0, [sp, #156]
    876c:	b	8784 <PyFloat_FromString@plt+0x1c34>
    8770:	ldr	x0, [sp, #88]
    8774:	mov	x1, x0
    8778:	ldr	x0, [sp, #72]
    877c:	bl	7eb4 <PyFloat_FromString@plt+0x1364>
    8780:	str	w0, [sp, #156]
    8784:	ldr	w0, [sp, #156]
    8788:	cmp	w0, #0x0
    878c:	b.ge	8798 <PyFloat_FromString@plt+0x1c48>  // b.tcont
    8790:	ldr	w0, [sp, #156]
    8794:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    8798:	ldr	x1, [sp, #96]
    879c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    87a0:	ldr	x0, [x0, #4008]
    87a4:	cmp	x1, x0
    87a8:	b.eq	8804 <PyFloat_FromString@plt+0x1cb4>  // b.none
    87ac:	ldr	x0, [sp, #96]
    87b0:	ldr	x0, [x0, #8]
    87b4:	ldr	x0, [x0, #168]
    87b8:	and	x0, x0, #0x2000000
    87bc:	cmp	x0, #0x0
    87c0:	b.eq	87dc <PyFloat_FromString@plt+0x1c8c>  // b.none
    87c4:	ldr	x0, [sp, #96]
    87c8:	mov	x1, x0
    87cc:	ldr	x0, [sp, #72]
    87d0:	bl	7f54 <PyFloat_FromString@plt+0x1404>
    87d4:	str	w0, [sp, #156]
    87d8:	b	87f0 <PyFloat_FromString@plt+0x1ca0>
    87dc:	ldr	x0, [sp, #96]
    87e0:	mov	x1, x0
    87e4:	ldr	x0, [sp, #72]
    87e8:	bl	7fc4 <PyFloat_FromString@plt+0x1474>
    87ec:	str	w0, [sp, #156]
    87f0:	ldr	w0, [sp, #156]
    87f4:	cmp	w0, #0x0
    87f8:	b.ge	8804 <PyFloat_FromString@plt+0x1cb4>  // b.tcont
    87fc:	ldr	w0, [sp, #156]
    8800:	b	8808 <PyFloat_FromString@plt+0x1cb8>
    8804:	mov	w0, #0x0                   	// #0
    8808:	ldp	x29, x30, [sp, #32]
    880c:	add	sp, sp, #0xa0
    8810:	ret
    8814:	sub	sp, sp, #0x140
    8818:	stp	x29, x30, [sp, #16]
    881c:	add	x29, sp, #0x10
    8820:	str	x0, [sp, #40]
    8824:	ldr	x0, [sp, #40]
    8828:	add	x0, x0, #0x10
    882c:	str	x0, [sp, #312]
    8830:	mov	w0, #0x79                  	// #121
    8834:	str	w0, [sp, #308]
    8838:	ldr	x0, [sp, #312]
    883c:	ldr	w1, [x0, #28]
    8840:	add	x4, sp, #0xb0
    8844:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8848:	add	x3, x0, #0xbe0
    884c:	mov	w2, w1
    8850:	ldr	w1, [sp, #308]
    8854:	mov	x0, x4
    8858:	bl	2307c <PyInit__decimal@@Base+0xb3a4>
    885c:	str	w0, [sp, #304]
    8860:	ldr	w0, [sp, #304]
    8864:	cmp	w0, #0x0
    8868:	b.lt	887c <PyFloat_FromString@plt+0x1d2c>  // b.tstop
    886c:	ldr	w1, [sp, #304]
    8870:	ldr	w0, [sp, #308]
    8874:	cmp	w1, w0
    8878:	b.lt	888c <PyFloat_FromString@plt+0x1d3c>  // b.tstop
    887c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8880:	add	x0, x0, #0xd08
    8884:	bl	6e68 <PyFloat_FromString@plt+0x318>
    8888:	b	8954 <PyFloat_FromString@plt+0x1e04>
    888c:	ldr	x0, [sp, #312]
    8890:	ldr	w1, [x0, #24]
    8894:	add	x4, sp, #0x30
    8898:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    889c:	add	x3, x0, #0xbe0
    88a0:	mov	w2, w1
    88a4:	ldr	w1, [sp, #308]
    88a8:	mov	x0, x4
    88ac:	bl	2307c <PyInit__decimal@@Base+0xb3a4>
    88b0:	str	w0, [sp, #304]
    88b4:	ldr	w0, [sp, #304]
    88b8:	cmp	w0, #0x0
    88bc:	b.lt	88d0 <PyFloat_FromString@plt+0x1d80>  // b.tstop
    88c0:	ldr	w1, [sp, #304]
    88c4:	ldr	w0, [sp, #308]
    88c8:	cmp	w1, w0
    88cc:	b.lt	88e0 <PyFloat_FromString@plt+0x1d90>  // b.tstop
    88d0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    88d4:	add	x0, x0, #0xd08
    88d8:	bl	6e68 <PyFloat_FromString@plt+0x318>
    88dc:	b	8954 <PyFloat_FromString@plt+0x1e04>
    88e0:	ldr	x0, [sp, #312]
    88e4:	ldr	x8, [x0]
    88e8:	ldr	x0, [sp, #312]
    88ec:	ldr	w1, [x0, #36]
    88f0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    88f4:	add	x0, x0, #0x588
    88f8:	sxtw	x1, w1
    88fc:	ldr	x1, [x0, x1, lsl #3]
    8900:	ldr	x0, [sp, #312]
    8904:	ldr	x2, [x0, #16]
    8908:	ldr	x0, [sp, #312]
    890c:	ldr	x3, [x0, #8]
    8910:	ldr	x0, [sp, #40]
    8914:	ldr	w4, [x0, #80]
    8918:	ldr	x0, [sp, #312]
    891c:	ldr	w5, [x0, #40]
    8920:	add	x6, sp, #0xb0
    8924:	add	x0, sp, #0x30
    8928:	str	x0, [sp]
    892c:	mov	x7, x6
    8930:	mov	w6, w5
    8934:	mov	w5, w4
    8938:	mov	x4, x3
    893c:	mov	x3, x2
    8940:	mov	x2, x1
    8944:	mov	x1, x8
    8948:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    894c:	add	x0, x0, #0xd28
    8950:	bl	6520 <PyUnicode_FromFormat@plt>
    8954:	ldp	x29, x30, [sp, #16]
    8958:	add	sp, sp, #0x140
    895c:	ret
    8960:	sub	sp, sp, #0x40
    8964:	str	x0, [sp, #8]
    8968:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    896c:	add	x1, x0, #0x330
    8970:	add	x0, sp, #0x10
    8974:	ldp	x2, x3, [x1]
    8978:	stp	x2, x3, [x0]
    897c:	ldp	x2, x3, [x1, #16]
    8980:	stp	x2, x3, [x0, #16]
    8984:	ldp	x2, x3, [x1, #32]
    8988:	stp	x2, x3, [x0, #32]
    898c:	mov	x0, #0x9                   	// #9
    8990:	str	x0, [sp, #16]
    8994:	ldr	w1, [sp, #40]
    8998:	mov	w0, #0x4001                	// #16385
    899c:	orr	w0, w1, w0
    89a0:	str	w0, [sp, #40]
    89a4:	mov	w0, #0x4                   	// #4
    89a8:	str	w0, [sp, #52]
    89ac:	ldr	x0, [sp, #8]
    89b0:	add	x0, x0, #0x10
    89b4:	mov	x1, x0
    89b8:	add	x0, sp, #0x10
    89bc:	ldp	x2, x3, [x0]
    89c0:	stp	x2, x3, [x1]
    89c4:	ldp	x2, x3, [x0, #16]
    89c8:	stp	x2, x3, [x1, #16]
    89cc:	ldp	x2, x3, [x0, #32]
    89d0:	stp	x2, x3, [x1, #32]
    89d4:	ldr	x0, [sp, #8]
    89d8:	mov	w1, #0x1                   	// #1
    89dc:	str	w1, [x0, #80]
    89e0:	nop
    89e4:	add	sp, sp, #0x40
    89e8:	ret
    89ec:	sub	sp, sp, #0x40
    89f0:	str	x0, [sp, #8]
    89f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    89f8:	add	x1, x0, #0x330
    89fc:	add	x0, sp, #0x10
    8a00:	ldp	x2, x3, [x1]
    8a04:	stp	x2, x3, [x0]
    8a08:	ldp	x2, x3, [x1, #16]
    8a0c:	stp	x2, x3, [x0, #16]
    8a10:	ldp	x2, x3, [x1, #32]
    8a14:	stp	x2, x3, [x0, #32]
    8a18:	mov	x0, #0x9                   	// #9
    8a1c:	str	x0, [sp, #16]
    8a20:	str	wzr, [sp, #40]
    8a24:	ldr	x0, [sp, #8]
    8a28:	add	x0, x0, #0x10
    8a2c:	mov	x1, x0
    8a30:	add	x0, sp, #0x10
    8a34:	ldp	x2, x3, [x0]
    8a38:	stp	x2, x3, [x1]
    8a3c:	ldp	x2, x3, [x0, #16]
    8a40:	stp	x2, x3, [x1, #16]
    8a44:	ldp	x2, x3, [x0, #32]
    8a48:	stp	x2, x3, [x1, #32]
    8a4c:	ldr	x0, [sp, #8]
    8a50:	mov	w1, #0x1                   	// #1
    8a54:	str	w1, [x0, #80]
    8a58:	nop
    8a5c:	add	sp, sp, #0x40
    8a60:	ret
    8a64:	stp	x29, x30, [sp, #-48]!
    8a68:	mov	x29, sp
    8a6c:	str	x0, [sp, #24]
    8a70:	str	x1, [sp, #16]
    8a74:	mov	x1, #0x0                   	// #0
    8a78:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8a7c:	add	x0, x0, #0x500
    8a80:	bl	68e0 <PyObject_CallObject@plt>
    8a84:	str	x0, [sp, #40]
    8a88:	ldr	x0, [sp, #40]
    8a8c:	cmp	x0, #0x0
    8a90:	b.ne	8a9c <PyFloat_FromString@plt+0x1f4c>  // b.any
    8a94:	mov	x0, #0x0                   	// #0
    8a98:	b	8ae4 <PyFloat_FromString@plt+0x1f94>
    8a9c:	ldr	x0, [sp, #40]
    8aa0:	add	x2, x0, #0x10
    8aa4:	ldr	x0, [sp, #24]
    8aa8:	add	x1, x0, #0x10
    8aac:	mov	x0, x2
    8ab0:	ldp	x2, x3, [x1]
    8ab4:	stp	x2, x3, [x0]
    8ab8:	ldp	x2, x3, [x1, #16]
    8abc:	stp	x2, x3, [x0, #16]
    8ac0:	ldp	x2, x3, [x1, #32]
    8ac4:	stp	x2, x3, [x0, #32]
    8ac8:	ldr	x0, [sp, #40]
    8acc:	str	wzr, [x0, #48]
    8ad0:	ldr	x0, [sp, #24]
    8ad4:	ldr	w1, [x0, #80]
    8ad8:	ldr	x0, [sp, #40]
    8adc:	str	w1, [x0, #80]
    8ae0:	ldr	x0, [sp, #40]
    8ae4:	ldp	x29, x30, [sp], #48
    8ae8:	ret
    8aec:	sub	sp, sp, #0x50
    8af0:	stp	x29, x30, [sp, #16]
    8af4:	add	x29, sp, #0x10
    8af8:	str	x0, [sp, #40]
    8afc:	str	x1, [sp, #32]
    8b00:	ldr	x0, [sp, #40]
    8b04:	add	x0, x0, #0x10
    8b08:	str	x0, [sp, #72]
    8b0c:	ldr	x0, [sp, #72]
    8b10:	ldr	w0, [x0, #28]
    8b14:	bl	70c0 <PyFloat_FromString@plt+0x570>
    8b18:	str	x0, [sp, #64]
    8b1c:	ldr	x0, [sp, #64]
    8b20:	cmp	x0, #0x0
    8b24:	b.ne	8b30 <PyFloat_FromString@plt+0x1fe0>  // b.any
    8b28:	mov	x0, #0x0                   	// #0
    8b2c:	b	8c14 <PyFloat_FromString@plt+0x20c4>
    8b30:	ldr	x0, [sp, #72]
    8b34:	ldr	w0, [x0, #24]
    8b38:	bl	70c0 <PyFloat_FromString@plt+0x570>
    8b3c:	str	x0, [sp, #56]
    8b40:	ldr	x0, [sp, #56]
    8b44:	cmp	x0, #0x0
    8b48:	b.ne	8b68 <PyFloat_FromString@plt+0x2018>  // b.any
    8b4c:	ldr	x2, [sp, #64]
    8b50:	mov	w1, #0x597                 	// #1431
    8b54:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8b58:	add	x0, x0, #0x9c0
    8b5c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8b60:	mov	x0, #0x0                   	// #0
    8b64:	b	8c14 <PyFloat_FromString@plt+0x20c4>
    8b68:	ldr	x0, [sp, #40]
    8b6c:	ldr	x8, [x0, #8]
    8b70:	ldr	x0, [sp, #72]
    8b74:	ldr	x2, [x0]
    8b78:	ldr	x0, [sp, #72]
    8b7c:	ldr	w1, [x0, #36]
    8b80:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8b84:	add	x0, x0, #0x588
    8b88:	sxtw	x1, w1
    8b8c:	ldr	x1, [x0, x1, lsl #3]
    8b90:	ldr	x0, [sp, #72]
    8b94:	ldr	x3, [x0, #16]
    8b98:	ldr	x0, [sp, #72]
    8b9c:	ldr	x4, [x0, #8]
    8ba0:	ldr	x0, [sp, #40]
    8ba4:	ldr	w5, [x0, #80]
    8ba8:	ldr	x0, [sp, #72]
    8bac:	ldr	w6, [x0, #40]
    8bb0:	ldr	x0, [sp, #56]
    8bb4:	str	x0, [sp, #8]
    8bb8:	ldr	x0, [sp, #64]
    8bbc:	str	x0, [sp]
    8bc0:	mov	w7, w6
    8bc4:	mov	w6, w5
    8bc8:	mov	x5, x4
    8bcc:	mov	x4, x3
    8bd0:	mov	x3, x1
    8bd4:	mov	x1, x8
    8bd8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8bdc:	add	x0, x0, #0xd88
    8be0:	bl	6870 <Py_BuildValue@plt>
    8be4:	str	x0, [sp, #48]
    8be8:	ldr	x2, [sp, #64]
    8bec:	mov	w1, #0x5a2                 	// #1442
    8bf0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8bf4:	add	x0, x0, #0x9c0
    8bf8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8bfc:	ldr	x2, [sp, #56]
    8c00:	mov	w1, #0x5a3                 	// #1443
    8c04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8c08:	add	x0, x0, #0x9c0
    8c0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8c10:	ldr	x0, [sp, #48]
    8c14:	ldp	x29, x30, [sp, #16]
    8c18:	add	sp, sp, #0x50
    8c1c:	ret
    8c20:	stp	x29, x30, [sp, #-32]!
    8c24:	mov	x29, sp
    8c28:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8c2c:	add	x0, x0, #0x720
    8c30:	ldr	x0, [x0]
    8c34:	mov	x1, #0x0                   	// #0
    8c38:	bl	8a64 <PyFloat_FromString@plt+0x1f14>
    8c3c:	str	x0, [sp, #24]
    8c40:	ldr	x0, [sp, #24]
    8c44:	cmp	x0, #0x0
    8c48:	b.ne	8c54 <PyFloat_FromString@plt+0x2104>  // b.any
    8c4c:	mov	x0, #0x0                   	// #0
    8c50:	b	8cb4 <PyFloat_FromString@plt+0x2164>
    8c54:	ldr	x0, [sp, #24]
    8c58:	str	wzr, [x0, #44]
    8c5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8c60:	add	x0, x0, #0x718
    8c64:	ldr	x0, [x0]
    8c68:	ldr	x1, [sp, #24]
    8c6c:	bl	6720 <PyContextVar_Set@plt>
    8c70:	str	x0, [sp, #16]
    8c74:	ldr	x0, [sp, #16]
    8c78:	cmp	x0, #0x0
    8c7c:	b.ne	8c9c <PyFloat_FromString@plt+0x214c>  // b.any
    8c80:	ldr	x2, [sp, #24]
    8c84:	mov	w1, #0x5e1                 	// #1505
    8c88:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8c8c:	add	x0, x0, #0x9c0
    8c90:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8c94:	mov	x0, #0x0                   	// #0
    8c98:	b	8cb4 <PyFloat_FromString@plt+0x2164>
    8c9c:	ldr	x2, [sp, #16]
    8ca0:	mov	w1, #0x5e4                 	// #1508
    8ca4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8ca8:	add	x0, x0, #0x9c0
    8cac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8cb0:	ldr	x0, [sp, #24]
    8cb4:	ldp	x29, x30, [sp], #32
    8cb8:	ret
    8cbc:	stp	x29, x30, [sp, #-32]!
    8cc0:	mov	x29, sp
    8cc4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8cc8:	add	x0, x0, #0x718
    8ccc:	ldr	x0, [x0]
    8cd0:	add	x1, sp, #0x18
    8cd4:	mov	x2, x1
    8cd8:	mov	x1, #0x0                   	// #0
    8cdc:	bl	67e0 <PyContextVar_Get@plt>
    8ce0:	cmp	w0, #0x0
    8ce4:	b.ge	8cf0 <PyFloat_FromString@plt+0x21a0>  // b.tcont
    8ce8:	mov	x0, #0x0                   	// #0
    8cec:	b	8d08 <PyFloat_FromString@plt+0x21b8>
    8cf0:	ldr	x0, [sp, #24]
    8cf4:	cmp	x0, #0x0
    8cf8:	b.eq	8d04 <PyFloat_FromString@plt+0x21b4>  // b.none
    8cfc:	ldr	x0, [sp, #24]
    8d00:	b	8d08 <PyFloat_FromString@plt+0x21b8>
    8d04:	bl	8c20 <PyFloat_FromString@plt+0x20d0>
    8d08:	ldp	x29, x30, [sp], #32
    8d0c:	ret
    8d10:	stp	x29, x30, [sp, #-32]!
    8d14:	mov	x29, sp
    8d18:	str	x0, [sp, #24]
    8d1c:	str	x1, [sp, #16]
    8d20:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    8d24:	ldp	x29, x30, [sp], #32
    8d28:	ret
    8d2c:	stp	x29, x30, [sp, #-48]!
    8d30:	mov	x29, sp
    8d34:	str	x0, [sp, #24]
    8d38:	str	x1, [sp, #16]
    8d3c:	ldr	x0, [sp, #16]
    8d40:	ldr	x1, [x0, #8]
    8d44:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8d48:	add	x0, x0, #0x500
    8d4c:	cmp	x1, x0
    8d50:	b.eq	8d98 <PyFloat_FromString@plt+0x2248>  // b.none
    8d54:	ldr	x0, [sp, #16]
    8d58:	ldr	x2, [x0, #8]
    8d5c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8d60:	add	x1, x0, #0x500
    8d64:	mov	x0, x2
    8d68:	bl	6a70 <PyType_IsSubtype@plt>
    8d6c:	cmp	w0, #0x0
    8d70:	b.ne	8d98 <PyFloat_FromString@plt+0x2248>  // b.any
    8d74:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8d78:	ldr	x0, [x0, #3936]
    8d7c:	ldr	x2, [x0]
    8d80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8d84:	add	x1, x0, #0xdd8
    8d88:	mov	x0, x2
    8d8c:	bl	66f0 <PyErr_SetString@plt>
    8d90:	mov	x0, #0x0                   	// #0
    8d94:	b	8e80 <PyFloat_FromString@plt+0x2330>
    8d98:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8d9c:	add	x0, x0, #0x720
    8da0:	ldr	x0, [x0]
    8da4:	ldr	x1, [sp, #16]
    8da8:	cmp	x1, x0
    8dac:	b.eq	8de0 <PyFloat_FromString@plt+0x2290>  // b.none
    8db0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8db4:	add	x0, x0, #0x728
    8db8:	ldr	x0, [x0]
    8dbc:	ldr	x1, [sp, #16]
    8dc0:	cmp	x1, x0
    8dc4:	b.eq	8de0 <PyFloat_FromString@plt+0x2290>  // b.none
    8dc8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8dcc:	add	x0, x0, #0x730
    8dd0:	ldr	x0, [x0]
    8dd4:	ldr	x1, [sp, #16]
    8dd8:	cmp	x1, x0
    8ddc:	b.ne	8e10 <PyFloat_FromString@plt+0x22c0>  // b.any
    8de0:	mov	x1, #0x0                   	// #0
    8de4:	ldr	x0, [sp, #16]
    8de8:	bl	8a64 <PyFloat_FromString@plt+0x1f14>
    8dec:	str	x0, [sp, #16]
    8df0:	ldr	x0, [sp, #16]
    8df4:	cmp	x0, #0x0
    8df8:	b.ne	8e04 <PyFloat_FromString@plt+0x22b4>  // b.any
    8dfc:	mov	x0, #0x0                   	// #0
    8e00:	b	8e80 <PyFloat_FromString@plt+0x2330>
    8e04:	ldr	x0, [sp, #16]
    8e08:	str	wzr, [x0, #44]
    8e0c:	b	8e18 <PyFloat_FromString@plt+0x22c8>
    8e10:	ldr	x0, [sp, #16]
    8e14:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    8e18:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8e1c:	add	x0, x0, #0x718
    8e20:	ldr	x0, [x0]
    8e24:	ldr	x1, [sp, #16]
    8e28:	bl	6720 <PyContextVar_Set@plt>
    8e2c:	str	x0, [sp, #40]
    8e30:	ldr	x2, [sp, #16]
    8e34:	mov	w1, #0x61d                 	// #1565
    8e38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8e3c:	add	x0, x0, #0x9c0
    8e40:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8e44:	ldr	x0, [sp, #40]
    8e48:	cmp	x0, #0x0
    8e4c:	b.ne	8e58 <PyFloat_FromString@plt+0x2308>  // b.any
    8e50:	mov	x0, #0x0                   	// #0
    8e54:	b	8e80 <PyFloat_FromString@plt+0x2330>
    8e58:	ldr	x2, [sp, #40]
    8e5c:	mov	w1, #0x621                 	// #1569
    8e60:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8e64:	add	x0, x0, #0x9c0
    8e68:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8e6c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8e70:	ldr	x0, [x0, #4008]
    8e74:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    8e78:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8e7c:	ldr	x0, [x0, #4008]
    8e80:	ldp	x29, x30, [sp], #48
    8e84:	ret
    8e88:	stp	x29, x30, [sp, #-80]!
    8e8c:	mov	x29, sp
    8e90:	str	x0, [sp, #40]
    8e94:	str	x1, [sp, #32]
    8e98:	str	x2, [sp, #24]
    8e9c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8ea0:	ldr	x0, [x0, #4008]
    8ea4:	str	x0, [sp, #56]
    8ea8:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    8eac:	str	x0, [sp, #72]
    8eb0:	ldr	x0, [sp, #72]
    8eb4:	cmp	x0, #0x0
    8eb8:	b.ne	8ec4 <PyFloat_FromString@plt+0x2374>  // b.any
    8ebc:	mov	x0, #0x0                   	// #0
    8ec0:	b	9014 <PyFloat_FromString@plt+0x24c4>
    8ec4:	ldr	x2, [sp, #72]
    8ec8:	mov	w1, #0x631                 	// #1585
    8ecc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8ed0:	add	x0, x0, #0x9c0
    8ed4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8ed8:	add	x0, sp, #0x38
    8edc:	mov	x4, x0
    8ee0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    8ee4:	add	x3, x0, #0x250
    8ee8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8eec:	add	x2, x0, #0xdf8
    8ef0:	ldr	x1, [sp, #24]
    8ef4:	ldr	x0, [sp, #32]
    8ef8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    8efc:	cmp	w0, #0x0
    8f00:	b.ne	8f0c <PyFloat_FromString@plt+0x23bc>  // b.any
    8f04:	mov	x0, #0x0                   	// #0
    8f08:	b	9014 <PyFloat_FromString@plt+0x24c4>
    8f0c:	ldr	x1, [sp, #56]
    8f10:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8f14:	ldr	x0, [x0, #4008]
    8f18:	cmp	x1, x0
    8f1c:	b.ne	8f2c <PyFloat_FromString@plt+0x23dc>  // b.any
    8f20:	ldr	x0, [sp, #72]
    8f24:	str	x0, [sp, #56]
    8f28:	b	8f88 <PyFloat_FromString@plt+0x2438>
    8f2c:	ldr	x0, [sp, #56]
    8f30:	ldr	x1, [x0, #8]
    8f34:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8f38:	add	x0, x0, #0x500
    8f3c:	cmp	x1, x0
    8f40:	b.eq	8f88 <PyFloat_FromString@plt+0x2438>  // b.none
    8f44:	ldr	x0, [sp, #56]
    8f48:	ldr	x2, [x0, #8]
    8f4c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8f50:	add	x1, x0, #0x500
    8f54:	mov	x0, x2
    8f58:	bl	6a70 <PyType_IsSubtype@plt>
    8f5c:	cmp	w0, #0x0
    8f60:	b.ne	8f88 <PyFloat_FromString@plt+0x2438>  // b.any
    8f64:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    8f68:	ldr	x0, [x0, #3936]
    8f6c:	ldr	x2, [x0]
    8f70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8f74:	add	x1, x0, #0xe00
    8f78:	mov	x0, x2
    8f7c:	bl	66f0 <PyErr_SetString@plt>
    8f80:	mov	x0, #0x0                   	// #0
    8f84:	b	9014 <PyFloat_FromString@plt+0x24c4>
    8f88:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    8f8c:	add	x0, x0, #0x6a0
    8f90:	bl	6a00 <_PyObject_New@plt>
    8f94:	str	x0, [sp, #64]
    8f98:	ldr	x0, [sp, #64]
    8f9c:	cmp	x0, #0x0
    8fa0:	b.ne	8fac <PyFloat_FromString@plt+0x245c>  // b.any
    8fa4:	mov	x0, #0x0                   	// #0
    8fa8:	b	9014 <PyFloat_FromString@plt+0x24c4>
    8fac:	ldr	x0, [sp, #56]
    8fb0:	mov	x1, #0x0                   	// #0
    8fb4:	bl	8a64 <PyFloat_FromString@plt+0x1f14>
    8fb8:	mov	x1, x0
    8fbc:	ldr	x0, [sp, #64]
    8fc0:	str	x1, [x0, #16]
    8fc4:	ldr	x0, [sp, #64]
    8fc8:	ldr	x0, [x0, #16]
    8fcc:	cmp	x0, #0x0
    8fd0:	b.ne	8ff8 <PyFloat_FromString@plt+0x24a8>  // b.any
    8fd4:	ldr	x0, [sp, #64]
    8fd8:	str	xzr, [x0, #24]
    8fdc:	ldr	x2, [sp, #64]
    8fe0:	mov	w1, #0x647                 	// #1607
    8fe4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    8fe8:	add	x0, x0, #0x9c0
    8fec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    8ff0:	mov	x0, #0x0                   	// #0
    8ff4:	b	9014 <PyFloat_FromString@plt+0x24c4>
    8ff8:	ldr	x0, [sp, #64]
    8ffc:	ldr	x1, [sp, #72]
    9000:	str	x1, [x0, #24]
    9004:	ldr	x0, [sp, #64]
    9008:	ldr	x0, [x0, #24]
    900c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    9010:	ldr	x0, [sp, #64]
    9014:	ldp	x29, x30, [sp], #80
    9018:	ret
    901c:	stp	x29, x30, [sp, #-32]!
    9020:	mov	x29, sp
    9024:	str	x0, [sp, #24]
    9028:	ldr	x0, [sp, #24]
    902c:	ldr	x0, [x0, #16]
    9030:	bl	6d64 <PyFloat_FromString@plt+0x214>
    9034:	ldr	x0, [sp, #24]
    9038:	ldr	x0, [x0, #24]
    903c:	bl	6d64 <PyFloat_FromString@plt+0x214>
    9040:	ldr	x0, [sp, #24]
    9044:	bl	6730 <PyObject_Free@plt>
    9048:	nop
    904c:	ldp	x29, x30, [sp], #32
    9050:	ret
    9054:	stp	x29, x30, [sp, #-48]!
    9058:	mov	x29, sp
    905c:	str	x0, [sp, #24]
    9060:	str	x1, [sp, #16]
    9064:	ldr	x0, [sp, #24]
    9068:	ldr	x0, [x0, #16]
    906c:	mov	x1, x0
    9070:	mov	x0, #0x0                   	// #0
    9074:	bl	8d2c <PyFloat_FromString@plt+0x21dc>
    9078:	str	x0, [sp, #40]
    907c:	ldr	x0, [sp, #40]
    9080:	cmp	x0, #0x0
    9084:	b.ne	9090 <PyFloat_FromString@plt+0x2540>  // b.any
    9088:	mov	x0, #0x0                   	// #0
    908c:	b	90b8 <PyFloat_FromString@plt+0x2568>
    9090:	ldr	x2, [sp, #40]
    9094:	mov	w1, #0x661                 	// #1633
    9098:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    909c:	add	x0, x0, #0x9c0
    90a0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    90a4:	ldr	x0, [sp, #24]
    90a8:	ldr	x0, [x0, #16]
    90ac:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    90b0:	ldr	x0, [sp, #24]
    90b4:	ldr	x0, [x0, #16]
    90b8:	ldp	x29, x30, [sp], #48
    90bc:	ret
    90c0:	stp	x29, x30, [sp, #-48]!
    90c4:	mov	x29, sp
    90c8:	str	x0, [sp, #24]
    90cc:	str	x1, [sp, #16]
    90d0:	ldr	x0, [sp, #24]
    90d4:	ldr	x0, [x0, #24]
    90d8:	mov	x1, x0
    90dc:	mov	x0, #0x0                   	// #0
    90e0:	bl	8d2c <PyFloat_FromString@plt+0x21dc>
    90e4:	str	x0, [sp, #40]
    90e8:	ldr	x0, [sp, #40]
    90ec:	cmp	x0, #0x0
    90f0:	b.ne	90fc <PyFloat_FromString@plt+0x25ac>  // b.any
    90f4:	mov	x0, #0x0                   	// #0
    90f8:	b	9124 <PyFloat_FromString@plt+0x25d4>
    90fc:	ldr	x2, [sp, #40]
    9100:	mov	w1, #0x671                 	// #1649
    9104:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9108:	add	x0, x0, #0x9c0
    910c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9110:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9114:	ldr	x0, [x0, #4008]
    9118:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    911c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9120:	ldr	x0, [x0, #4008]
    9124:	ldp	x29, x30, [sp], #48
    9128:	ret
    912c:	stp	x29, x30, [sp, #-48]!
    9130:	mov	x29, sp
    9134:	str	x0, [sp, #24]
    9138:	ldr	x1, [sp, #24]
    913c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    9140:	add	x0, x0, #0x360
    9144:	cmp	x1, x0
    9148:	b.ne	9160 <PyFloat_FromString@plt+0x2610>  // b.any
    914c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    9150:	add	x0, x0, #0x360
    9154:	bl	6a00 <_PyObject_New@plt>
    9158:	str	x0, [sp, #40]
    915c:	b	9178 <PyFloat_FromString@plt+0x2628>
    9160:	ldr	x0, [sp, #24]
    9164:	ldr	x2, [x0, #304]
    9168:	mov	x1, #0x0                   	// #0
    916c:	ldr	x0, [sp, #24]
    9170:	blr	x2
    9174:	str	x0, [sp, #40]
    9178:	ldr	x0, [sp, #40]
    917c:	cmp	x0, #0x0
    9180:	b.ne	918c <PyFloat_FromString@plt+0x263c>  // b.any
    9184:	mov	x0, #0x0                   	// #0
    9188:	b	91dc <PyFloat_FromString@plt+0x268c>
    918c:	ldr	x0, [sp, #40]
    9190:	mov	x1, #0xffffffffffffffff    	// #-1
    9194:	str	x1, [x0, #16]
    9198:	ldr	x0, [sp, #40]
    919c:	mov	w1, #0x30                  	// #48
    91a0:	strb	w1, [x0, #24]
    91a4:	ldr	x0, [sp, #40]
    91a8:	str	xzr, [x0, #32]
    91ac:	ldr	x0, [sp, #40]
    91b0:	str	xzr, [x0, #40]
    91b4:	ldr	x0, [sp, #40]
    91b8:	str	xzr, [x0, #48]
    91bc:	ldr	x0, [sp, #40]
    91c0:	mov	x1, #0x4                   	// #4
    91c4:	str	x1, [x0, #56]
    91c8:	ldr	x0, [sp, #40]
    91cc:	add	x1, x0, #0x48
    91d0:	ldr	x0, [sp, #40]
    91d4:	str	x1, [x0, #64]
    91d8:	ldr	x0, [sp, #40]
    91dc:	ldp	x29, x30, [sp], #48
    91e0:	ret
    91e4:	stp	x29, x30, [sp, #-32]!
    91e8:	mov	x29, sp
    91ec:	str	x0, [sp, #24]
    91f0:	ldr	x0, [sp, #24]
    91f4:	add	x0, x0, #0x18
    91f8:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    91fc:	ldr	x0, [sp, #24]
    9200:	ldr	x0, [x0, #8]
    9204:	ldr	x1, [x0, #320]
    9208:	ldr	x0, [sp, #24]
    920c:	blr	x1
    9210:	nop
    9214:	ldp	x29, x30, [sp], #32
    9218:	ret
    921c:	stp	x29, x30, [sp, #-64]!
    9220:	mov	x29, sp
    9224:	str	w0, [sp, #44]
    9228:	str	x1, [sp, #32]
    922c:	str	x2, [sp, #24]
    9230:	ldr	w0, [sp, #44]
    9234:	cmp	w0, #0x1
    9238:	b.ne	9250 <PyFloat_FromString@plt+0x2700>  // b.any
    923c:	ldr	x0, [sp, #24]
    9240:	ldr	x1, [sp, #32]
    9244:	add	x0, x1, x0
    9248:	ldrb	w0, [x0]
    924c:	b	9288 <PyFloat_FromString@plt+0x2738>
    9250:	ldr	w0, [sp, #44]
    9254:	cmp	w0, #0x2
    9258:	b.ne	9274 <PyFloat_FromString@plt+0x2724>  // b.any
    925c:	ldr	x0, [sp, #24]
    9260:	lsl	x0, x0, #1
    9264:	ldr	x1, [sp, #32]
    9268:	add	x0, x1, x0
    926c:	ldrh	w0, [x0]
    9270:	b	9288 <PyFloat_FromString@plt+0x2738>
    9274:	ldr	x0, [sp, #24]
    9278:	lsl	x0, x0, #2
    927c:	ldr	x1, [sp, #32]
    9280:	add	x0, x1, x0
    9284:	ldr	w0, [x0]
    9288:	str	w0, [sp, #60]
    928c:	ldr	w0, [sp, #60]
    9290:	cmp	w0, #0x7f
    9294:	b.hi	92ac <PyFloat_FromString@plt+0x275c>  // b.pmore
    9298:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    929c:	ldr	x1, [x0, #3880]
    92a0:	ldr	w0, [sp, #60]
    92a4:	ldrb	w0, [x1, x0]
    92a8:	b	92b4 <PyFloat_FromString@plt+0x2764>
    92ac:	ldr	w0, [sp, #60]
    92b0:	bl	68a0 <_PyUnicode_IsWhitespace@plt>
    92b4:	ldp	x29, x30, [sp], #64
    92b8:	ret
    92bc:	stp	x29, x30, [sp, #-96]!
    92c0:	mov	x29, sp
    92c4:	str	x0, [sp, #24]
    92c8:	str	w1, [sp, #20]
    92cc:	str	w2, [sp, #16]
    92d0:	ldr	x0, [sp, #24]
    92d4:	ldrb	w0, [x0, #32]
    92d8:	and	w0, w0, #0xffffff80
    92dc:	and	w0, w0, #0xff
    92e0:	cmp	w0, #0x0
    92e4:	b.ne	9300 <PyFloat_FromString@plt+0x27b0>  // b.any
    92e8:	ldr	x0, [sp, #24]
    92ec:	bl	6550 <_PyUnicode_Ready@plt>
    92f0:	cmn	w0, #0x1
    92f4:	b.ne	9300 <PyFloat_FromString@plt+0x27b0>  // b.any
    92f8:	mov	x0, #0x0                   	// #0
    92fc:	b	95b0 <PyFloat_FromString@plt+0x2a60>
    9300:	ldr	x0, [sp, #24]
    9304:	ldrb	w0, [x0, #32]
    9308:	ubfx	x0, x0, #2, #3
    930c:	and	w0, w0, #0xff
    9310:	str	w0, [sp, #68]
    9314:	ldr	x0, [sp, #24]
    9318:	ldrb	w0, [x0, #32]
    931c:	and	w0, w0, #0x20
    9320:	and	w0, w0, #0xff
    9324:	cmp	w0, #0x0
    9328:	b.eq	935c <PyFloat_FromString@plt+0x280c>  // b.none
    932c:	ldr	x0, [sp, #24]
    9330:	ldrb	w0, [x0, #32]
    9334:	and	w0, w0, #0x40
    9338:	and	w0, w0, #0xff
    933c:	cmp	w0, #0x0
    9340:	b.eq	9350 <PyFloat_FromString@plt+0x2800>  // b.none
    9344:	ldr	x0, [sp, #24]
    9348:	add	x0, x0, #0x30
    934c:	b	9364 <PyFloat_FromString@plt+0x2814>
    9350:	ldr	x0, [sp, #24]
    9354:	add	x0, x0, #0x48
    9358:	b	9364 <PyFloat_FromString@plt+0x2814>
    935c:	ldr	x0, [sp, #24]
    9360:	ldr	x0, [x0, #72]
    9364:	str	x0, [sp, #56]
    9368:	ldr	x0, [sp, #24]
    936c:	ldr	x0, [x0, #16]
    9370:	str	x0, [sp, #72]
    9374:	ldr	x0, [sp, #72]
    9378:	add	x0, x0, #0x1
    937c:	bl	6b00 <PyMem_Malloc@plt>
    9380:	str	x0, [sp, #48]
    9384:	ldr	x0, [sp, #48]
    9388:	str	x0, [sp, #88]
    938c:	ldr	x0, [sp, #48]
    9390:	cmp	x0, #0x0
    9394:	b.ne	93a4 <PyFloat_FromString@plt+0x2854>  // b.any
    9398:	bl	6690 <PyErr_NoMemory@plt>
    939c:	mov	x0, #0x0                   	// #0
    93a0:	b	95b0 <PyFloat_FromString@plt+0x2a60>
    93a4:	str	xzr, [sp, #80]
    93a8:	ldr	w0, [sp, #20]
    93ac:	cmp	w0, #0x0
    93b0:	b.eq	9594 <PyFloat_FromString@plt+0x2a44>  // b.none
    93b4:	b	93c4 <PyFloat_FromString@plt+0x2874>
    93b8:	ldr	x0, [sp, #72]
    93bc:	sub	x0, x0, #0x1
    93c0:	str	x0, [sp, #72]
    93c4:	ldr	x0, [sp, #72]
    93c8:	cmp	x0, #0x0
    93cc:	b.le	9400 <PyFloat_FromString@plt+0x28b0>
    93d0:	ldr	x0, [sp, #72]
    93d4:	sub	x0, x0, #0x1
    93d8:	mov	x2, x0
    93dc:	ldr	x1, [sp, #56]
    93e0:	ldr	w0, [sp, #68]
    93e4:	bl	921c <PyFloat_FromString@plt+0x26cc>
    93e8:	cmp	w0, #0x0
    93ec:	b.ne	93b8 <PyFloat_FromString@plt+0x2868>  // b.any
    93f0:	b	9400 <PyFloat_FromString@plt+0x28b0>
    93f4:	ldr	x0, [sp, #80]
    93f8:	add	x0, x0, #0x1
    93fc:	str	x0, [sp, #80]
    9400:	ldr	x1, [sp, #80]
    9404:	ldr	x0, [sp, #72]
    9408:	cmp	x1, x0
    940c:	b.ge	9594 <PyFloat_FromString@plt+0x2a44>  // b.tcont
    9410:	ldr	x2, [sp, #80]
    9414:	ldr	x1, [sp, #56]
    9418:	ldr	w0, [sp, #68]
    941c:	bl	921c <PyFloat_FromString@plt+0x26cc>
    9420:	cmp	w0, #0x0
    9424:	b.ne	93f4 <PyFloat_FromString@plt+0x28a4>  // b.any
    9428:	b	9594 <PyFloat_FromString@plt+0x2a44>
    942c:	ldr	w0, [sp, #68]
    9430:	cmp	w0, #0x1
    9434:	b.ne	944c <PyFloat_FromString@plt+0x28fc>  // b.any
    9438:	ldr	x0, [sp, #80]
    943c:	ldr	x1, [sp, #56]
    9440:	add	x0, x1, x0
    9444:	ldrb	w0, [x0]
    9448:	b	9484 <PyFloat_FromString@plt+0x2934>
    944c:	ldr	w0, [sp, #68]
    9450:	cmp	w0, #0x2
    9454:	b.ne	9470 <PyFloat_FromString@plt+0x2920>  // b.any
    9458:	ldr	x0, [sp, #80]
    945c:	lsl	x0, x0, #1
    9460:	ldr	x1, [sp, #56]
    9464:	add	x0, x1, x0
    9468:	ldrh	w0, [x0]
    946c:	b	9484 <PyFloat_FromString@plt+0x2934>
    9470:	ldr	x0, [sp, #80]
    9474:	lsl	x0, x0, #2
    9478:	ldr	x1, [sp, #56]
    947c:	add	x0, x1, x0
    9480:	ldr	w0, [x0]
    9484:	str	w0, [sp, #44]
    9488:	ldr	w0, [sp, #16]
    948c:	cmp	w0, #0x0
    9490:	b.eq	94a0 <PyFloat_FromString@plt+0x2950>  // b.none
    9494:	ldr	w0, [sp, #44]
    9498:	cmp	w0, #0x5f
    949c:	b.eq	9584 <PyFloat_FromString@plt+0x2a34>  // b.none
    94a0:	ldr	w0, [sp, #44]
    94a4:	cmp	w0, #0x0
    94a8:	b.eq	94d4 <PyFloat_FromString@plt+0x2984>  // b.none
    94ac:	ldr	w0, [sp, #44]
    94b0:	cmp	w0, #0x7f
    94b4:	b.hi	94d4 <PyFloat_FromString@plt+0x2984>  // b.pmore
    94b8:	ldr	x0, [sp, #88]
    94bc:	add	x1, x0, #0x1
    94c0:	str	x1, [sp, #88]
    94c4:	ldr	w1, [sp, #44]
    94c8:	and	w1, w1, #0xff
    94cc:	strb	w1, [x0]
    94d0:	b	9588 <PyFloat_FromString@plt+0x2a38>
    94d4:	ldr	w0, [sp, #44]
    94d8:	cmp	w0, #0x7f
    94dc:	b.hi	9500 <PyFloat_FromString@plt+0x29b0>  // b.pmore
    94e0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    94e4:	ldr	x1, [x0, #3880]
    94e8:	ldr	w0, [sp, #44]
    94ec:	ldrb	w0, [x1, x0]
    94f0:	cmp	w0, #0x0
    94f4:	cset	w0, ne  // ne = any
    94f8:	and	w0, w0, #0xff
    94fc:	b	9514 <PyFloat_FromString@plt+0x29c4>
    9500:	ldr	w0, [sp, #44]
    9504:	bl	68a0 <_PyUnicode_IsWhitespace@plt>
    9508:	cmp	w0, #0x0
    950c:	cset	w0, ne  // ne = any
    9510:	and	w0, w0, #0xff
    9514:	cmp	w0, #0x0
    9518:	b.eq	9534 <PyFloat_FromString@plt+0x29e4>  // b.none
    951c:	ldr	x0, [sp, #88]
    9520:	add	x1, x0, #0x1
    9524:	str	x1, [sp, #88]
    9528:	mov	w1, #0x20                  	// #32
    952c:	strb	w1, [x0]
    9530:	b	9588 <PyFloat_FromString@plt+0x2a38>
    9534:	ldr	w0, [sp, #44]
    9538:	bl	6950 <_PyUnicode_ToDecimalDigit@plt>
    953c:	str	w0, [sp, #40]
    9540:	ldr	w0, [sp, #40]
    9544:	cmp	w0, #0x0
    9548:	b.ge	955c <PyFloat_FromString@plt+0x2a0c>  // b.tcont
    954c:	ldr	x0, [sp, #48]
    9550:	strb	wzr, [x0]
    9554:	ldr	x0, [sp, #48]
    9558:	b	95b0 <PyFloat_FromString@plt+0x2a60>
    955c:	ldr	w0, [sp, #40]
    9560:	sxtb	w0, w0
    9564:	add	w0, w0, #0x30
    9568:	sxtb	w2, w0
    956c:	ldr	x0, [sp, #88]
    9570:	add	x1, x0, #0x1
    9574:	str	x1, [sp, #88]
    9578:	and	w1, w2, #0xff
    957c:	strb	w1, [x0]
    9580:	b	9588 <PyFloat_FromString@plt+0x2a38>
    9584:	nop
    9588:	ldr	x0, [sp, #80]
    958c:	add	x0, x0, #0x1
    9590:	str	x0, [sp, #80]
    9594:	ldr	x1, [sp, #80]
    9598:	ldr	x0, [sp, #72]
    959c:	cmp	x1, x0
    95a0:	b.lt	942c <PyFloat_FromString@plt+0x28dc>  // b.tstop
    95a4:	ldr	x0, [sp, #88]
    95a8:	strb	wzr, [x0]
    95ac:	ldr	x0, [sp, #48]
    95b0:	ldp	x29, x30, [sp], #96
    95b4:	ret
    95b8:	stp	x29, x30, [sp, #-64]!
    95bc:	mov	x29, sp
    95c0:	str	x0, [sp, #40]
    95c4:	str	x1, [sp, #32]
    95c8:	str	x2, [sp, #24]
    95cc:	str	wzr, [sp, #52]
    95d0:	ldr	x0, [sp, #40]
    95d4:	bl	912c <PyFloat_FromString@plt+0x25dc>
    95d8:	str	x0, [sp, #56]
    95dc:	ldr	x0, [sp, #56]
    95e0:	cmp	x0, #0x0
    95e4:	b.ne	95f0 <PyFloat_FromString@plt+0x2aa0>  // b.any
    95e8:	mov	x0, #0x0                   	// #0
    95ec:	b	9650 <PyFloat_FromString@plt+0x2b00>
    95f0:	ldr	x0, [sp, #56]
    95f4:	add	x4, x0, #0x18
    95f8:	ldr	x0, [sp, #24]
    95fc:	add	x0, x0, #0x10
    9600:	add	x1, sp, #0x34
    9604:	mov	x3, x1
    9608:	mov	x2, x0
    960c:	ldr	x1, [sp, #32]
    9610:	mov	x0, x4
    9614:	bl	1fa74 <PyInit__decimal@@Base+0x7d9c>
    9618:	ldr	w0, [sp, #52]
    961c:	mov	w1, w0
    9620:	ldr	x0, [sp, #24]
    9624:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    9628:	cmp	w0, #0x0
    962c:	b.eq	964c <PyFloat_FromString@plt+0x2afc>  // b.none
    9630:	ldr	x2, [sp, #56]
    9634:	mov	w1, #0x724                 	// #1828
    9638:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    963c:	add	x0, x0, #0x9c0
    9640:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9644:	mov	x0, #0x0                   	// #0
    9648:	b	9650 <PyFloat_FromString@plt+0x2b00>
    964c:	ldr	x0, [sp, #56]
    9650:	ldp	x29, x30, [sp], #64
    9654:	ret
    9658:	stp	x29, x30, [sp, #-112]!
    965c:	mov	x29, sp
    9660:	str	x0, [sp, #40]
    9664:	str	x1, [sp, #32]
    9668:	str	x2, [sp, #24]
    966c:	str	wzr, [sp, #100]
    9670:	ldr	x0, [sp, #40]
    9674:	bl	912c <PyFloat_FromString@plt+0x25dc>
    9678:	str	x0, [sp, #104]
    967c:	ldr	x0, [sp, #104]
    9680:	cmp	x0, #0x0
    9684:	b.ne	9690 <PyFloat_FromString@plt+0x2b40>  // b.any
    9688:	mov	x0, #0x0                   	// #0
    968c:	b	972c <PyFloat_FromString@plt+0x2bdc>
    9690:	add	x0, sp, #0x30
    9694:	bl	1b658 <PyInit__decimal@@Base+0x3980>
    9698:	ldr	x0, [sp, #104]
    969c:	add	x0, x0, #0x18
    96a0:	add	x2, sp, #0x64
    96a4:	add	x1, sp, #0x30
    96a8:	mov	x3, x2
    96ac:	mov	x2, x1
    96b0:	ldr	x1, [sp, #32]
    96b4:	bl	1fa74 <PyInit__decimal@@Base+0x7d9c>
    96b8:	ldr	w1, [sp, #100]
    96bc:	mov	w0, #0x1041                	// #4161
    96c0:	and	w0, w1, w0
    96c4:	cmp	w0, #0x0
    96c8:	b.eq	96e4 <PyFloat_FromString@plt+0x2b94>  // b.none
    96cc:	ldr	x0, [sp, #104]
    96d0:	add	x0, x0, #0x18
    96d4:	add	x1, sp, #0x64
    96d8:	mov	x2, x1
    96dc:	mov	w1, #0x100                 	// #256
    96e0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
    96e4:	ldr	w1, [sp, #100]
    96e8:	mov	w0, #0x3be                 	// #958
    96ec:	and	w0, w1, w0
    96f0:	str	w0, [sp, #100]
    96f4:	ldr	w0, [sp, #100]
    96f8:	mov	w1, w0
    96fc:	ldr	x0, [sp, #24]
    9700:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    9704:	cmp	w0, #0x0
    9708:	b.eq	9728 <PyFloat_FromString@plt+0x2bd8>  // b.none
    970c:	ldr	x2, [sp, #104]
    9710:	mov	w1, #0x743                 	// #1859
    9714:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9718:	add	x0, x0, #0x9c0
    971c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9720:	mov	x0, #0x0                   	// #0
    9724:	b	972c <PyFloat_FromString@plt+0x2bdc>
    9728:	ldr	x0, [sp, #104]
    972c:	ldp	x29, x30, [sp], #112
    9730:	ret
    9734:	stp	x29, x30, [sp, #-64]!
    9738:	mov	x29, sp
    973c:	str	x0, [sp, #40]
    9740:	str	x1, [sp, #32]
    9744:	str	x2, [sp, #24]
    9748:	mov	w2, #0x0                   	// #0
    974c:	mov	w1, #0x0                   	// #0
    9750:	ldr	x0, [sp, #32]
    9754:	bl	92bc <PyFloat_FromString@plt+0x276c>
    9758:	str	x0, [sp, #56]
    975c:	ldr	x0, [sp, #56]
    9760:	cmp	x0, #0x0
    9764:	b.ne	9770 <PyFloat_FromString@plt+0x2c20>  // b.any
    9768:	mov	x0, #0x0                   	// #0
    976c:	b	9790 <PyFloat_FromString@plt+0x2c40>
    9770:	ldr	x2, [sp, #24]
    9774:	ldr	x1, [sp, #56]
    9778:	ldr	x0, [sp, #40]
    977c:	bl	95b8 <PyFloat_FromString@plt+0x2a68>
    9780:	str	x0, [sp, #48]
    9784:	ldr	x0, [sp, #56]
    9788:	bl	6610 <PyMem_Free@plt>
    978c:	ldr	x0, [sp, #48]
    9790:	ldp	x29, x30, [sp], #64
    9794:	ret
    9798:	stp	x29, x30, [sp, #-64]!
    979c:	mov	x29, sp
    97a0:	str	x0, [sp, #40]
    97a4:	str	x1, [sp, #32]
    97a8:	str	x2, [sp, #24]
    97ac:	mov	w2, #0x1                   	// #1
    97b0:	mov	w1, #0x1                   	// #1
    97b4:	ldr	x0, [sp, #32]
    97b8:	bl	92bc <PyFloat_FromString@plt+0x276c>
    97bc:	str	x0, [sp, #56]
    97c0:	ldr	x0, [sp, #56]
    97c4:	cmp	x0, #0x0
    97c8:	b.ne	97d4 <PyFloat_FromString@plt+0x2c84>  // b.any
    97cc:	mov	x0, #0x0                   	// #0
    97d0:	b	97f4 <PyFloat_FromString@plt+0x2ca4>
    97d4:	ldr	x2, [sp, #24]
    97d8:	ldr	x1, [sp, #56]
    97dc:	ldr	x0, [sp, #40]
    97e0:	bl	9658 <PyFloat_FromString@plt+0x2b08>
    97e4:	str	x0, [sp, #48]
    97e8:	ldr	x0, [sp, #56]
    97ec:	bl	6610 <PyMem_Free@plt>
    97f0:	ldr	x0, [sp, #48]
    97f4:	ldp	x29, x30, [sp], #64
    97f8:	ret
    97fc:	stp	x29, x30, [sp, #-48]!
    9800:	mov	x29, sp
    9804:	str	x0, [sp, #40]
    9808:	strb	w1, [sp, #39]
    980c:	str	w2, [sp, #32]
    9810:	str	x3, [sp, #24]
    9814:	ldr	x0, [sp, #40]
    9818:	ldr	x0, [x0, #64]
    981c:	ldr	w1, [sp, #32]
    9820:	str	x1, [x0]
    9824:	ldr	x0, [sp, #40]
    9828:	mov	x1, #0x1                   	// #1
    982c:	str	x1, [x0, #48]
    9830:	ldr	x0, [sp, #40]
    9834:	add	x0, x0, #0x18
    9838:	ldrb	w1, [sp, #39]
    983c:	bl	2637c <PyInit__decimal@@Base+0xe6a4>
    9840:	ldr	x0, [sp, #40]
    9844:	ldr	x1, [sp, #24]
    9848:	str	x1, [x0, #32]
    984c:	ldr	x0, [sp, #40]
    9850:	add	x0, x0, #0x18
    9854:	bl	25d58 <PyInit__decimal@@Base+0xe080>
    9858:	nop
    985c:	ldp	x29, x30, [sp], #48
    9860:	ret
    9864:	stp	x29, x30, [sp, #-64]!
    9868:	mov	x29, sp
    986c:	str	x0, [sp, #40]
    9870:	str	x1, [sp, #32]
    9874:	str	x2, [sp, #24]
    9878:	str	wzr, [sp, #52]
    987c:	ldr	x0, [sp, #40]
    9880:	bl	912c <PyFloat_FromString@plt+0x25dc>
    9884:	str	x0, [sp, #56]
    9888:	ldr	x0, [sp, #56]
    988c:	cmp	x0, #0x0
    9890:	b.ne	989c <PyFloat_FromString@plt+0x2d4c>  // b.any
    9894:	mov	x0, #0x0                   	// #0
    9898:	b	98fc <PyFloat_FromString@plt+0x2dac>
    989c:	ldr	x0, [sp, #56]
    98a0:	add	x4, x0, #0x18
    98a4:	ldr	x0, [sp, #24]
    98a8:	add	x0, x0, #0x10
    98ac:	add	x1, sp, #0x34
    98b0:	mov	x3, x1
    98b4:	mov	x2, x0
    98b8:	ldr	x1, [sp, #32]
    98bc:	mov	x0, x4
    98c0:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
    98c4:	ldr	w0, [sp, #52]
    98c8:	mov	w1, w0
    98cc:	ldr	x0, [sp, #24]
    98d0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    98d4:	cmp	w0, #0x0
    98d8:	b.eq	98f8 <PyFloat_FromString@plt+0x2da8>  // b.none
    98dc:	ldr	x2, [sp, #56]
    98e0:	mov	w1, #0x793                 	// #1939
    98e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    98e8:	add	x0, x0, #0x9c0
    98ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    98f0:	mov	x0, #0x0                   	// #0
    98f4:	b	98fc <PyFloat_FromString@plt+0x2dac>
    98f8:	ldr	x0, [sp, #56]
    98fc:	ldp	x29, x30, [sp], #64
    9900:	ret
    9904:	stp	x29, x30, [sp, #-112]!
    9908:	mov	x29, sp
    990c:	str	x0, [sp, #40]
    9910:	str	x1, [sp, #32]
    9914:	str	x2, [sp, #24]
    9918:	str	wzr, [sp, #100]
    991c:	ldr	x0, [sp, #40]
    9920:	bl	912c <PyFloat_FromString@plt+0x25dc>
    9924:	str	x0, [sp, #104]
    9928:	ldr	x0, [sp, #104]
    992c:	cmp	x0, #0x0
    9930:	b.ne	993c <PyFloat_FromString@plt+0x2dec>  // b.any
    9934:	mov	x0, #0x0                   	// #0
    9938:	b	999c <PyFloat_FromString@plt+0x2e4c>
    993c:	add	x0, sp, #0x30
    9940:	bl	1b658 <PyInit__decimal@@Base+0x3980>
    9944:	ldr	x0, [sp, #104]
    9948:	add	x0, x0, #0x18
    994c:	add	x2, sp, #0x64
    9950:	add	x1, sp, #0x30
    9954:	mov	x3, x2
    9958:	mov	x2, x1
    995c:	ldr	x1, [sp, #32]
    9960:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
    9964:	ldr	w0, [sp, #100]
    9968:	mov	w1, w0
    996c:	ldr	x0, [sp, #24]
    9970:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    9974:	cmp	w0, #0x0
    9978:	b.eq	9998 <PyFloat_FromString@plt+0x2e48>  // b.none
    997c:	ldr	x2, [sp, #104]
    9980:	mov	w1, #0x7aa                 	// #1962
    9984:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9988:	add	x0, x0, #0x9c0
    998c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9990:	mov	x0, #0x0                   	// #0
    9994:	b	999c <PyFloat_FromString@plt+0x2e4c>
    9998:	ldr	x0, [sp, #104]
    999c:	ldp	x29, x30, [sp], #112
    99a0:	ret
    99a4:	stp	x29, x30, [sp, #-96]!
    99a8:	mov	x29, sp
    99ac:	str	x0, [sp, #40]
    99b0:	str	x1, [sp, #32]
    99b4:	str	x2, [sp, #24]
    99b8:	str	x3, [sp, #16]
    99bc:	ldr	x0, [sp, #32]
    99c0:	str	x0, [sp, #72]
    99c4:	ldr	x0, [sp, #40]
    99c8:	bl	912c <PyFloat_FromString@plt+0x25dc>
    99cc:	str	x0, [sp, #64]
    99d0:	ldr	x0, [sp, #64]
    99d4:	cmp	x0, #0x0
    99d8:	b.ne	99e4 <PyFloat_FromString@plt+0x2e94>  // b.any
    99dc:	mov	x0, #0x0                   	// #0
    99e0:	b	9ac0 <PyFloat_FromString@plt+0x2f70>
    99e4:	ldr	x0, [sp, #72]
    99e8:	ldr	x0, [x0, #16]
    99ec:	str	x0, [sp, #56]
    99f0:	ldr	x0, [sp, #56]
    99f4:	cmp	x0, #0x0
    99f8:	b.ne	9a18 <PyFloat_FromString@plt+0x2ec8>  // b.any
    99fc:	mov	x3, #0x0                   	// #0
    9a00:	mov	w2, #0x0                   	// #0
    9a04:	mov	w1, #0x0                   	// #0
    9a08:	ldr	x0, [sp, #64]
    9a0c:	bl	97fc <PyFloat_FromString@plt+0x2cac>
    9a10:	ldr	x0, [sp, #64]
    9a14:	b	9ac0 <PyFloat_FromString@plt+0x2f70>
    9a18:	ldr	x0, [sp, #56]
    9a1c:	cmp	x0, #0x0
    9a20:	b.ge	9a3c <PyFloat_FromString@plt+0x2eec>  // b.tcont
    9a24:	ldr	x0, [sp, #56]
    9a28:	neg	x0, x0
    9a2c:	str	x0, [sp, #88]
    9a30:	mov	w0, #0x1                   	// #1
    9a34:	strb	w0, [sp, #87]
    9a38:	b	9a48 <PyFloat_FromString@plt+0x2ef8>
    9a3c:	ldr	x0, [sp, #56]
    9a40:	str	x0, [sp, #88]
    9a44:	strb	wzr, [sp, #87]
    9a48:	ldr	x0, [sp, #88]
    9a4c:	cmp	x0, #0x1
    9a50:	b.ne	9a8c <PyFloat_FromString@plt+0x2f3c>  // b.any
    9a54:	ldr	x0, [sp, #72]
    9a58:	ldr	w0, [x0, #24]
    9a5c:	mov	x3, #0x0                   	// #0
    9a60:	mov	w2, w0
    9a64:	ldrb	w1, [sp, #87]
    9a68:	ldr	x0, [sp, #64]
    9a6c:	bl	97fc <PyFloat_FromString@plt+0x2cac>
    9a70:	ldr	x0, [sp, #64]
    9a74:	add	x0, x0, #0x18
    9a78:	ldr	x2, [sp, #16]
    9a7c:	ldr	x1, [sp, #24]
    9a80:	bl	29700 <PyInit__decimal@@Base+0x11a28>
    9a84:	ldr	x0, [sp, #64]
    9a88:	b	9ac0 <PyFloat_FromString@plt+0x2f70>
    9a8c:	ldr	x0, [sp, #64]
    9a90:	add	x7, x0, #0x18
    9a94:	ldr	x0, [sp, #72]
    9a98:	add	x0, x0, #0x18
    9a9c:	ldr	x6, [sp, #16]
    9aa0:	ldr	x5, [sp, #24]
    9aa4:	mov	w4, #0x40000000            	// #1073741824
    9aa8:	ldrb	w3, [sp, #87]
    9aac:	ldr	x2, [sp, #88]
    9ab0:	mov	x1, x0
    9ab4:	mov	x0, x7
    9ab8:	bl	3ea90 <PyInit__decimal@@Base+0x26db8>
    9abc:	ldr	x0, [sp, #64]
    9ac0:	ldp	x29, x30, [sp], #96
    9ac4:	ret
    9ac8:	stp	x29, x30, [sp, #-64]!
    9acc:	mov	x29, sp
    9ad0:	str	x0, [sp, #40]
    9ad4:	str	x1, [sp, #32]
    9ad8:	str	x2, [sp, #24]
    9adc:	str	wzr, [sp, #52]
    9ae0:	ldr	x0, [sp, #32]
    9ae4:	ldr	x0, [x0, #8]
    9ae8:	ldr	x0, [x0, #168]
    9aec:	and	x0, x0, #0x1000000
    9af0:	cmp	x0, #0x0
    9af4:	b.ne	9b1c <PyFloat_FromString@plt+0x2fcc>  // b.any
    9af8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9afc:	ldr	x0, [x0, #3936]
    9b00:	ldr	x2, [x0]
    9b04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9b08:	add	x1, x0, #0xe48
    9b0c:	mov	x0, x2
    9b10:	bl	66f0 <PyErr_SetString@plt>
    9b14:	mov	x0, #0x0                   	// #0
    9b18:	b	9b8c <PyFloat_FromString@plt+0x303c>
    9b1c:	ldr	x0, [sp, #24]
    9b20:	add	x0, x0, #0x10
    9b24:	add	x1, sp, #0x34
    9b28:	mov	x3, x1
    9b2c:	mov	x2, x0
    9b30:	ldr	x1, [sp, #32]
    9b34:	ldr	x0, [sp, #40]
    9b38:	bl	99a4 <PyFloat_FromString@plt+0x2e54>
    9b3c:	str	x0, [sp, #56]
    9b40:	ldr	x0, [sp, #56]
    9b44:	cmp	x0, #0x0
    9b48:	b.ne	9b54 <PyFloat_FromString@plt+0x3004>  // b.any
    9b4c:	mov	x0, #0x0                   	// #0
    9b50:	b	9b8c <PyFloat_FromString@plt+0x303c>
    9b54:	ldr	w0, [sp, #52]
    9b58:	mov	w1, w0
    9b5c:	ldr	x0, [sp, #24]
    9b60:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    9b64:	cmp	w0, #0x0
    9b68:	b.eq	9b88 <PyFloat_FromString@plt+0x3038>  // b.none
    9b6c:	ldr	x2, [sp, #56]
    9b70:	mov	w1, #0x7f6                 	// #2038
    9b74:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9b78:	add	x0, x0, #0x9c0
    9b7c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9b80:	mov	x0, #0x0                   	// #0
    9b84:	b	9b8c <PyFloat_FromString@plt+0x303c>
    9b88:	ldr	x0, [sp, #56]
    9b8c:	ldp	x29, x30, [sp], #64
    9b90:	ret
    9b94:	stp	x29, x30, [sp, #-112]!
    9b98:	mov	x29, sp
    9b9c:	str	x0, [sp, #40]
    9ba0:	str	x1, [sp, #32]
    9ba4:	str	x2, [sp, #24]
    9ba8:	str	wzr, [sp, #100]
    9bac:	ldr	x0, [sp, #32]
    9bb0:	ldr	x0, [x0, #8]
    9bb4:	ldr	x0, [x0, #168]
    9bb8:	and	x0, x0, #0x1000000
    9bbc:	cmp	x0, #0x0
    9bc0:	b.ne	9be8 <PyFloat_FromString@plt+0x3098>  // b.any
    9bc4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9bc8:	ldr	x0, [x0, #3936]
    9bcc:	ldr	x2, [x0]
    9bd0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9bd4:	add	x1, x0, #0xe48
    9bd8:	mov	x0, x2
    9bdc:	bl	66f0 <PyErr_SetString@plt>
    9be0:	mov	x0, #0x0                   	// #0
    9be4:	b	9c98 <PyFloat_FromString@plt+0x3148>
    9be8:	add	x0, sp, #0x30
    9bec:	bl	1b658 <PyInit__decimal@@Base+0x3980>
    9bf0:	add	x1, sp, #0x64
    9bf4:	add	x0, sp, #0x30
    9bf8:	mov	x3, x1
    9bfc:	mov	x2, x0
    9c00:	ldr	x1, [sp, #32]
    9c04:	ldr	x0, [sp, #40]
    9c08:	bl	99a4 <PyFloat_FromString@plt+0x2e54>
    9c0c:	str	x0, [sp, #104]
    9c10:	ldr	x0, [sp, #104]
    9c14:	cmp	x0, #0x0
    9c18:	b.ne	9c24 <PyFloat_FromString@plt+0x30d4>  // b.any
    9c1c:	mov	x0, #0x0                   	// #0
    9c20:	b	9c98 <PyFloat_FromString@plt+0x3148>
    9c24:	ldr	w1, [sp, #100]
    9c28:	mov	w0, #0x1041                	// #4161
    9c2c:	and	w0, w1, w0
    9c30:	cmp	w0, #0x0
    9c34:	b.eq	9c50 <PyFloat_FromString@plt+0x3100>  // b.none
    9c38:	ldr	x0, [sp, #104]
    9c3c:	add	x0, x0, #0x18
    9c40:	add	x1, sp, #0x64
    9c44:	mov	x2, x1
    9c48:	mov	w1, #0x100                 	// #256
    9c4c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
    9c50:	ldr	w1, [sp, #100]
    9c54:	mov	w0, #0x3be                 	// #958
    9c58:	and	w0, w1, w0
    9c5c:	str	w0, [sp, #100]
    9c60:	ldr	w0, [sp, #100]
    9c64:	mov	w1, w0
    9c68:	ldr	x0, [sp, #24]
    9c6c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    9c70:	cmp	w0, #0x0
    9c74:	b.eq	9c94 <PyFloat_FromString@plt+0x3144>  // b.none
    9c78:	ldr	x2, [sp, #104]
    9c7c:	mov	w1, #0x818                 	// #2072
    9c80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9c84:	add	x0, x0, #0x9c0
    9c88:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9c8c:	mov	x0, #0x0                   	// #0
    9c90:	b	9c98 <PyFloat_FromString@plt+0x3148>
    9c94:	ldr	x0, [sp, #104]
    9c98:	ldp	x29, x30, [sp], #112
    9c9c:	ret
    9ca0:	stp	x29, x30, [sp, #-192]!
    9ca4:	mov	x29, sp
    9ca8:	str	x0, [sp, #40]
    9cac:	str	x1, [sp, #32]
    9cb0:	str	x2, [sp, #24]
    9cb4:	str	wzr, [sp, #108]
    9cb8:	ldr	x0, [sp, #32]
    9cbc:	ldr	x0, [x0, #8]
    9cc0:	ldr	x0, [x0, #168]
    9cc4:	and	x0, x0, #0x1000000
    9cc8:	cmp	x0, #0x0
    9ccc:	b.eq	9ce4 <PyFloat_FromString@plt+0x3194>  // b.none
    9cd0:	ldr	x2, [sp, #24]
    9cd4:	ldr	x1, [sp, #32]
    9cd8:	ldr	x0, [sp, #40]
    9cdc:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    9ce0:	b	a150 <PyFloat_FromString@plt+0x3600>
    9ce4:	ldr	x0, [sp, #32]
    9ce8:	ldr	x1, [x0, #8]
    9cec:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9cf0:	ldr	x0, [x0, #3864]
    9cf4:	cmp	x1, x0
    9cf8:	b.eq	9d40 <PyFloat_FromString@plt+0x31f0>  // b.none
    9cfc:	ldr	x0, [sp, #32]
    9d00:	ldr	x2, [x0, #8]
    9d04:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9d08:	ldr	x1, [x0, #3864]
    9d0c:	mov	x0, x2
    9d10:	bl	6a70 <PyType_IsSubtype@plt>
    9d14:	cmp	w0, #0x0
    9d18:	b.ne	9d40 <PyFloat_FromString@plt+0x31f0>  // b.any
    9d1c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    9d20:	ldr	x0, [x0, #3936]
    9d24:	ldr	x2, [x0]
    9d28:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9d2c:	add	x1, x0, #0xe68
    9d30:	mov	x0, x2
    9d34:	bl	66f0 <PyErr_SetString@plt>
    9d38:	mov	x0, #0x0                   	// #0
    9d3c:	b	a150 <PyFloat_FromString@plt+0x3600>
    9d40:	ldr	x0, [sp, #32]
    9d44:	bl	6960 <PyFloat_AsDouble@plt>
    9d48:	str	d0, [sp, #184]
    9d4c:	ldr	d1, [sp, #184]
    9d50:	fmov	d0, #-1.000000000000000000e+00
    9d54:	fcmp	d1, d0
    9d58:	b.ne	9d70 <PyFloat_FromString@plt+0x3220>  // b.any
    9d5c:	bl	6880 <PyErr_Occurred@plt>
    9d60:	cmp	x0, #0x0
    9d64:	b.eq	9d70 <PyFloat_FromString@plt+0x3220>  // b.none
    9d68:	mov	x0, #0x0                   	// #0
    9d6c:	b	a150 <PyFloat_FromString@plt+0x3600>
    9d70:	ldr	d1, [sp, #184]
    9d74:	fmov	d0, #1.000000000000000000e+00
    9d78:	bl	6590 <copysign@plt>
    9d7c:	fmov	d1, d0
    9d80:	fmov	d0, #1.000000000000000000e+00
    9d84:	fcmp	d1, d0
    9d88:	cset	w0, ne  // ne = any
    9d8c:	and	w0, w0, #0xff
    9d90:	str	w0, [sp, #180]
    9d94:	ldr	d1, [sp, #184]
    9d98:	ldr	d0, [sp, #184]
    9d9c:	fcmp	d1, d0
    9da0:	b.vs	9dd0 <PyFloat_FromString@plt+0x3280>
    9da4:	ldr	d0, [sp, #184]
    9da8:	fabs	d0, d0
    9dac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9db0:	fmov	d1, x0
    9db4:	fcmp	d0, d1
    9db8:	cset	w0, le
    9dbc:	and	w0, w0, #0xff
    9dc0:	eor	w0, w0, #0x1
    9dc4:	and	w0, w0, #0xff
    9dc8:	cmp	w0, #0x0
    9dcc:	b.eq	9e38 <PyFloat_FromString@plt+0x32e8>  // b.none
    9dd0:	ldr	x0, [sp, #40]
    9dd4:	bl	912c <PyFloat_FromString@plt+0x25dc>
    9dd8:	str	x0, [sp, #128]
    9ddc:	ldr	x0, [sp, #128]
    9de0:	cmp	x0, #0x0
    9de4:	b.ne	9df0 <PyFloat_FromString@plt+0x32a0>  // b.any
    9de8:	mov	x0, #0x0                   	// #0
    9dec:	b	a150 <PyFloat_FromString@plt+0x3600>
    9df0:	ldr	d1, [sp, #184]
    9df4:	ldr	d0, [sp, #184]
    9df8:	fcmp	d1, d0
    9dfc:	b.vc	9e18 <PyFloat_FromString@plt+0x32c8>
    9e00:	ldr	x0, [sp, #128]
    9e04:	add	x0, x0, #0x18
    9e08:	mov	w2, #0x4                   	// #4
    9e0c:	mov	w1, #0x0                   	// #0
    9e10:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
    9e14:	b	9e30 <PyFloat_FromString@plt+0x32e0>
    9e18:	ldr	x0, [sp, #128]
    9e1c:	add	x0, x0, #0x18
    9e20:	ldr	w1, [sp, #180]
    9e24:	and	w1, w1, #0xff
    9e28:	mov	w2, #0x2                   	// #2
    9e2c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
    9e30:	ldr	x0, [sp, #128]
    9e34:	b	a150 <PyFloat_FromString@plt+0x3600>
    9e38:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    9e3c:	add	x0, x0, #0x7a0
    9e40:	ldr	x1, [x0]
    9e44:	ldr	x0, [sp, #32]
    9e48:	blr	x1
    9e4c:	str	x0, [sp, #168]
    9e50:	ldr	x0, [sp, #168]
    9e54:	cmp	x0, #0x0
    9e58:	b.ne	9e64 <PyFloat_FromString@plt+0x3314>  // b.any
    9e5c:	mov	x0, #0x0                   	// #0
    9e60:	b	a150 <PyFloat_FromString@plt+0x3600>
    9e64:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    9e68:	add	x0, x0, #0x7b0
    9e6c:	ldr	x2, [x0]
    9e70:	mov	x1, #0x0                   	// #0
    9e74:	ldr	x0, [sp, #168]
    9e78:	blr	x2
    9e7c:	str	x0, [sp, #160]
    9e80:	ldr	x2, [sp, #168]
    9e84:	mov	w1, #0x860                 	// #2144
    9e88:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9e8c:	add	x0, x0, #0x9c0
    9e90:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9e94:	ldr	x0, [sp, #160]
    9e98:	cmp	x0, #0x0
    9e9c:	b.ne	9ea8 <PyFloat_FromString@plt+0x3358>  // b.any
    9ea0:	mov	x0, #0x0                   	// #0
    9ea4:	b	a150 <PyFloat_FromString@plt+0x3600>
    9ea8:	ldr	x0, [sp, #160]
    9eac:	ldr	x0, [x0, #24]
    9eb0:	str	x0, [sp, #152]
    9eb4:	ldr	x0, [sp, #160]
    9eb8:	ldr	x0, [x0, #32]
    9ebc:	str	x0, [sp, #144]
    9ec0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    9ec4:	add	x0, x0, #0x7a8
    9ec8:	ldr	x2, [x0]
    9ecc:	mov	x1, #0x0                   	// #0
    9ed0:	ldr	x0, [sp, #144]
    9ed4:	blr	x2
    9ed8:	str	x0, [sp, #168]
    9edc:	ldr	x0, [sp, #168]
    9ee0:	cmp	x0, #0x0
    9ee4:	b.ne	9f04 <PyFloat_FromString@plt+0x33b4>  // b.any
    9ee8:	ldr	x2, [sp, #160]
    9eec:	mov	w1, #0x869                 	// #2153
    9ef0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9ef4:	add	x0, x0, #0x9c0
    9ef8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9efc:	mov	x0, #0x0                   	// #0
    9f00:	b	a150 <PyFloat_FromString@plt+0x3600>
    9f04:	ldr	x0, [sp, #168]
    9f08:	bl	6790 <PyLong_AsSsize_t@plt>
    9f0c:	str	x0, [sp, #136]
    9f10:	ldr	x2, [sp, #168]
    9f14:	mov	w1, #0x86d                 	// #2157
    9f18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9f1c:	add	x0, x0, #0x9c0
    9f20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9f24:	ldr	x0, [sp, #136]
    9f28:	cmn	x0, #0x1
    9f2c:	b.ne	9f58 <PyFloat_FromString@plt+0x3408>  // b.any
    9f30:	bl	6880 <PyErr_Occurred@plt>
    9f34:	cmp	x0, #0x0
    9f38:	b.eq	9f58 <PyFloat_FromString@plt+0x3408>  // b.none
    9f3c:	ldr	x2, [sp, #160]
    9f40:	mov	w1, #0x86f                 	// #2159
    9f44:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9f48:	add	x0, x0, #0x9c0
    9f4c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9f50:	mov	x0, #0x0                   	// #0
    9f54:	b	a150 <PyFloat_FromString@plt+0x3600>
    9f58:	ldr	x0, [sp, #136]
    9f5c:	sub	x0, x0, #0x1
    9f60:	str	x0, [sp, #136]
    9f64:	ldr	x2, [sp, #24]
    9f68:	ldr	x1, [sp, #152]
    9f6c:	ldr	x0, [sp, #40]
    9f70:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    9f74:	str	x0, [sp, #128]
    9f78:	ldr	x2, [sp, #160]
    9f7c:	mov	w1, #0x875                 	// #2165
    9f80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9f84:	add	x0, x0, #0x9c0
    9f88:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9f8c:	ldr	x0, [sp, #128]
    9f90:	cmp	x0, #0x0
    9f94:	b.ne	9fa0 <PyFloat_FromString@plt+0x3450>  // b.any
    9f98:	mov	x0, #0x0                   	// #0
    9f9c:	b	a150 <PyFloat_FromString@plt+0x3600>
    9fa0:	bl	23730 <PyInit__decimal@@Base+0xba58>
    9fa4:	str	x0, [sp, #120]
    9fa8:	ldr	x0, [sp, #120]
    9fac:	cmp	x0, #0x0
    9fb0:	b.ne	9fd4 <PyFloat_FromString@plt+0x3484>  // b.any
    9fb4:	ldr	x2, [sp, #128]
    9fb8:	mov	w1, #0x87c                 	// #2172
    9fbc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9fc0:	add	x0, x0, #0x9c0
    9fc4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    9fc8:	bl	6690 <PyErr_NoMemory@plt>
    9fcc:	mov	x0, #0x0                   	// #0
    9fd0:	b	a150 <PyFloat_FromString@plt+0x3600>
    9fd4:	bl	23730 <PyInit__decimal@@Base+0xba58>
    9fd8:	str	x0, [sp, #112]
    9fdc:	ldr	x0, [sp, #112]
    9fe0:	cmp	x0, #0x0
    9fe4:	b.ne	a010 <PyFloat_FromString@plt+0x34c0>  // b.any
    9fe8:	ldr	x0, [sp, #120]
    9fec:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    9ff0:	ldr	x2, [sp, #128]
    9ff4:	mov	w1, #0x883                 	// #2179
    9ff8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    9ffc:	add	x0, x0, #0x9c0
    a000:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a004:	bl	6690 <PyErr_NoMemory@plt>
    a008:	mov	x0, #0x0                   	// #0
    a00c:	b	a150 <PyFloat_FromString@plt+0x3600>
    a010:	add	x0, sp, #0x38
    a014:	bl	1b658 <PyInit__decimal@@Base+0x3980>
    a018:	add	x1, sp, #0x6c
    a01c:	add	x0, sp, #0x38
    a020:	mov	x3, x1
    a024:	mov	x2, x0
    a028:	mov	x1, #0x5                   	// #5
    a02c:	ldr	x0, [sp, #120]
    a030:	bl	27f64 <PyInit__decimal@@Base+0x1028c>
    a034:	add	x1, sp, #0x6c
    a038:	add	x0, sp, #0x38
    a03c:	mov	x3, x1
    a040:	mov	x2, x0
    a044:	ldr	x1, [sp, #136]
    a048:	ldr	x0, [sp, #112]
    a04c:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
    a050:	add	x1, sp, #0x6c
    a054:	add	x0, sp, #0x38
    a058:	mov	x4, x1
    a05c:	mov	x3, x0
    a060:	ldr	x2, [sp, #112]
    a064:	ldr	x1, [sp, #120]
    a068:	ldr	x0, [sp, #120]
    a06c:	bl	38bc0 <PyInit__decimal@@Base+0x20ee8>
    a070:	ldr	w0, [sp, #108]
    a074:	mov	w1, w0
    a078:	ldr	x0, [sp, #24]
    a07c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    a080:	cmp	w0, #0x0
    a084:	b.eq	a0b4 <PyFloat_FromString@plt+0x3564>  // b.none
    a088:	ldr	x0, [sp, #120]
    a08c:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    a090:	ldr	x0, [sp, #112]
    a094:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    a098:	ldr	x2, [sp, #128]
    a09c:	mov	w1, #0x88f                 	// #2191
    a0a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a0a4:	add	x0, x0, #0x9c0
    a0a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a0ac:	mov	x0, #0x0                   	// #0
    a0b0:	b	a150 <PyFloat_FromString@plt+0x3600>
    a0b4:	ldr	x0, [sp, #128]
    a0b8:	add	x5, x0, #0x18
    a0bc:	ldr	x0, [sp, #128]
    a0c0:	add	x0, x0, #0x18
    a0c4:	add	x2, sp, #0x6c
    a0c8:	add	x1, sp, #0x38
    a0cc:	mov	x4, x2
    a0d0:	mov	x3, x1
    a0d4:	ldr	x2, [sp, #120]
    a0d8:	mov	x1, x0
    a0dc:	mov	x0, x5
    a0e0:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
    a0e4:	ldr	x0, [sp, #120]
    a0e8:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    a0ec:	ldr	x0, [sp, #112]
    a0f0:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    a0f4:	ldr	w0, [sp, #108]
    a0f8:	mov	w1, w0
    a0fc:	ldr	x0, [sp, #24]
    a100:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    a104:	cmp	w0, #0x0
    a108:	b.eq	a128 <PyFloat_FromString@plt+0x35d8>  // b.none
    a10c:	ldr	x2, [sp, #128]
    a110:	mov	w1, #0x898                 	// #2200
    a114:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a118:	add	x0, x0, #0x9c0
    a11c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a120:	mov	x0, #0x0                   	// #0
    a124:	b	a150 <PyFloat_FromString@plt+0x3600>
    a128:	ldr	x0, [sp, #128]
    a12c:	add	x0, x0, #0x18
    a130:	ldr	w1, [sp, #180]
    a134:	and	w1, w1, #0xff
    a138:	bl	26034 <PyInit__decimal@@Base+0xe35c>
    a13c:	ldr	x0, [sp, #136]
    a140:	neg	x1, x0
    a144:	ldr	x0, [sp, #128]
    a148:	str	x1, [x0, #32]
    a14c:	ldr	x0, [sp, #128]
    a150:	ldp	x29, x30, [sp], #192
    a154:	ret
    a158:	stp	x29, x30, [sp, #-64]!
    a15c:	mov	x29, sp
    a160:	str	x0, [sp, #40]
    a164:	str	x1, [sp, #32]
    a168:	str	x2, [sp, #24]
    a16c:	str	wzr, [sp, #52]
    a170:	ldr	x2, [sp, #24]
    a174:	ldr	x1, [sp, #32]
    a178:	ldr	x0, [sp, #40]
    a17c:	bl	9ca0 <PyFloat_FromString@plt+0x3150>
    a180:	str	x0, [sp, #56]
    a184:	ldr	x0, [sp, #56]
    a188:	cmp	x0, #0x0
    a18c:	b.ne	a198 <PyFloat_FromString@plt+0x3648>  // b.any
    a190:	mov	x0, #0x0                   	// #0
    a194:	b	a1f4 <PyFloat_FromString@plt+0x36a4>
    a198:	ldr	x0, [sp, #56]
    a19c:	add	x3, x0, #0x18
    a1a0:	ldr	x0, [sp, #24]
    a1a4:	add	x0, x0, #0x10
    a1a8:	add	x1, sp, #0x34
    a1ac:	mov	x2, x1
    a1b0:	mov	x1, x0
    a1b4:	mov	x0, x3
    a1b8:	bl	29700 <PyInit__decimal@@Base+0x11a28>
    a1bc:	ldr	w0, [sp, #52]
    a1c0:	mov	w1, w0
    a1c4:	ldr	x0, [sp, #24]
    a1c8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    a1cc:	cmp	w0, #0x0
    a1d0:	b.eq	a1f0 <PyFloat_FromString@plt+0x36a0>  // b.none
    a1d4:	ldr	x2, [sp, #56]
    a1d8:	mov	w1, #0x8b0                 	// #2224
    a1dc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a1e0:	add	x0, x0, #0x9c0
    a1e4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a1e8:	mov	x0, #0x0                   	// #0
    a1ec:	b	a1f4 <PyFloat_FromString@plt+0x36a4>
    a1f0:	ldr	x0, [sp, #56]
    a1f4:	ldp	x29, x30, [sp], #64
    a1f8:	ret
    a1fc:	stp	x29, x30, [sp, #-64]!
    a200:	mov	x29, sp
    a204:	str	x0, [sp, #40]
    a208:	str	x1, [sp, #32]
    a20c:	str	x2, [sp, #24]
    a210:	str	wzr, [sp, #52]
    a214:	ldr	x1, [sp, #40]
    a218:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    a21c:	add	x0, x0, #0x360
    a220:	cmp	x1, x0
    a224:	b.ne	a250 <PyFloat_FromString@plt+0x3700>  // b.any
    a228:	ldr	x0, [sp, #32]
    a22c:	ldr	x1, [x0, #8]
    a230:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    a234:	add	x0, x0, #0x360
    a238:	cmp	x1, x0
    a23c:	b.ne	a250 <PyFloat_FromString@plt+0x3700>  // b.any
    a240:	ldr	x0, [sp, #32]
    a244:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    a248:	ldr	x0, [sp, #32]
    a24c:	b	a2cc <PyFloat_FromString@plt+0x377c>
    a250:	ldr	x0, [sp, #40]
    a254:	bl	912c <PyFloat_FromString@plt+0x25dc>
    a258:	str	x0, [sp, #56]
    a25c:	ldr	x0, [sp, #56]
    a260:	cmp	x0, #0x0
    a264:	b.ne	a270 <PyFloat_FromString@plt+0x3720>  // b.any
    a268:	mov	x0, #0x0                   	// #0
    a26c:	b	a2cc <PyFloat_FromString@plt+0x377c>
    a270:	ldr	x0, [sp, #56]
    a274:	add	x3, x0, #0x18
    a278:	ldr	x0, [sp, #32]
    a27c:	add	x0, x0, #0x18
    a280:	add	x1, sp, #0x34
    a284:	mov	x2, x1
    a288:	mov	x1, x0
    a28c:	mov	x0, x3
    a290:	bl	29840 <PyInit__decimal@@Base+0x11b68>
    a294:	ldr	w0, [sp, #52]
    a298:	mov	w1, w0
    a29c:	ldr	x0, [sp, #24]
    a2a0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    a2a4:	cmp	w0, #0x0
    a2a8:	b.eq	a2c8 <PyFloat_FromString@plt+0x3778>  // b.none
    a2ac:	ldr	x2, [sp, #56]
    a2b0:	mov	w1, #0x8ca                 	// #2250
    a2b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a2b8:	add	x0, x0, #0x9c0
    a2bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a2c0:	mov	x0, #0x0                   	// #0
    a2c4:	b	a2cc <PyFloat_FromString@plt+0x377c>
    a2c8:	ldr	x0, [sp, #56]
    a2cc:	ldp	x29, x30, [sp], #64
    a2d0:	ret
    a2d4:	stp	x29, x30, [sp, #-48]!
    a2d8:	mov	x29, sp
    a2dc:	str	x0, [sp, #40]
    a2e0:	str	x1, [sp, #32]
    a2e4:	str	x2, [sp, #24]
    a2e8:	ldr	x0, [sp, #40]
    a2ec:	ldr	x0, [x0, #8]
    a2f0:	ldr	x0, [x0, #168]
    a2f4:	and	x0, x0, #0x4000000
    a2f8:	cmp	x0, #0x0
    a2fc:	b.eq	a310 <PyFloat_FromString@plt+0x37c0>  // b.none
    a300:	ldr	x0, [sp, #40]
    a304:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    a308:	ldr	x0, [sp, #40]
    a30c:	b	a344 <PyFloat_FromString@plt+0x37f4>
    a310:	ldr	x0, [sp, #40]
    a314:	ldr	x0, [x0, #8]
    a318:	ldr	x0, [x0, #168]
    a31c:	and	x0, x0, #0x2000000
    a320:	cmp	x0, #0x0
    a324:	b.eq	a334 <PyFloat_FromString@plt+0x37e4>  // b.none
    a328:	ldr	x0, [sp, #40]
    a32c:	bl	65e0 <PyList_AsTuple@plt>
    a330:	b	a344 <PyFloat_FromString@plt+0x37f4>
    a334:	ldr	x1, [sp, #24]
    a338:	ldr	x0, [sp, #32]
    a33c:	bl	66f0 <PyErr_SetString@plt>
    a340:	mov	x0, #0x0                   	// #0
    a344:	ldp	x29, x30, [sp], #48
    a348:	ret
    a34c:	stp	x29, x30, [sp, #-144]!
    a350:	mov	x29, sp
    a354:	str	x0, [sp, #24]
    a358:	str	xzr, [sp, #136]
    a35c:	str	xzr, [sp, #128]
    a360:	str	xzr, [sp, #112]
    a364:	str	wzr, [sp, #100]
    a368:	ldr	x0, [sp, #24]
    a36c:	bl	6a90 <PyTuple_Size@plt>
    a370:	cmp	x0, #0x3
    a374:	b.eq	a398 <PyFloat_FromString@plt+0x3848>  // b.none
    a378:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a37c:	ldr	x0, [x0, #3928]
    a380:	ldr	x2, [x0]
    a384:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a388:	add	x1, x0, #0xe88
    a38c:	mov	x0, x2
    a390:	bl	66f0 <PyErr_SetString@plt>
    a394:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a398:	ldr	x0, [sp, #24]
    a39c:	ldr	x0, [x0, #24]
    a3a0:	str	x0, [sp, #88]
    a3a4:	ldr	x0, [sp, #88]
    a3a8:	ldr	x0, [x0, #8]
    a3ac:	ldr	x0, [x0, #168]
    a3b0:	and	x0, x0, #0x1000000
    a3b4:	cmp	x0, #0x0
    a3b8:	b.ne	a3dc <PyFloat_FromString@plt+0x388c>  // b.any
    a3bc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a3c0:	ldr	x0, [x0, #3928]
    a3c4:	ldr	x2, [x0]
    a3c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a3cc:	add	x1, x0, #0xeb0
    a3d0:	mov	x0, x2
    a3d4:	bl	66f0 <PyErr_SetString@plt>
    a3d8:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a3dc:	ldr	x0, [sp, #88]
    a3e0:	bl	68c0 <PyLong_AsLong@plt>
    a3e4:	str	x0, [sp, #80]
    a3e8:	ldr	x0, [sp, #80]
    a3ec:	cmn	x0, #0x1
    a3f0:	b.ne	a400 <PyFloat_FromString@plt+0x38b0>  // b.any
    a3f4:	bl	6880 <PyErr_Occurred@plt>
    a3f8:	cmp	x0, #0x0
    a3fc:	b.ne	a868 <PyFloat_FromString@plt+0x3d18>  // b.any
    a400:	ldr	x0, [sp, #80]
    a404:	cmp	x0, #0x0
    a408:	b.eq	a438 <PyFloat_FromString@plt+0x38e8>  // b.none
    a40c:	ldr	x0, [sp, #80]
    a410:	cmp	x0, #0x1
    a414:	b.eq	a438 <PyFloat_FromString@plt+0x38e8>  // b.none
    a418:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a41c:	ldr	x0, [x0, #3928]
    a420:	ldr	x2, [x0]
    a424:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a428:	add	x1, x0, #0xeb0
    a42c:	mov	x0, x2
    a430:	bl	66f0 <PyErr_SetString@plt>
    a434:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a438:	ldr	x0, [sp, #80]
    a43c:	cmp	x0, #0x0
    a440:	b.eq	a44c <PyFloat_FromString@plt+0x38fc>  // b.none
    a444:	mov	w0, #0x2d                  	// #45
    a448:	b	a450 <PyFloat_FromString@plt+0x3900>
    a44c:	mov	w0, #0x2b                  	// #43
    a450:	strb	w0, [sp, #40]
    a454:	strb	wzr, [sp, #41]
    a458:	ldr	x0, [sp, #24]
    a45c:	ldr	x0, [x0, #40]
    a460:	str	x0, [sp, #88]
    a464:	ldr	x0, [sp, #88]
    a468:	ldr	x0, [x0, #8]
    a46c:	ldr	x0, [x0, #168]
    a470:	and	x0, x0, #0x10000000
    a474:	cmp	x0, #0x0
    a478:	b.eq	a568 <PyFloat_FromString@plt+0x3a18>  // b.none
    a47c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a480:	add	x1, x0, #0xee0
    a484:	ldr	x0, [sp, #88]
    a488:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    a48c:	cmp	w0, #0x0
    a490:	b.ne	a4c0 <PyFloat_FromString@plt+0x3970>  // b.any
    a494:	add	x0, sp, #0x28
    a498:	bl	6570 <strlen@plt>
    a49c:	mov	x1, x0
    a4a0:	add	x0, sp, #0x28
    a4a4:	add	x0, x0, x1
    a4a8:	mov	w1, #0x6e49                	// #28233
    a4ac:	movk	w1, #0x66, lsl #16
    a4b0:	str	w1, [x0]
    a4b4:	mov	w0, #0x1                   	// #1
    a4b8:	str	w0, [sp, #100]
    a4bc:	b	a5c4 <PyFloat_FromString@plt+0x3a74>
    a4c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a4c4:	add	x1, x0, #0xee8
    a4c8:	ldr	x0, [sp, #88]
    a4cc:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    a4d0:	cmp	w0, #0x0
    a4d4:	b.ne	a4fc <PyFloat_FromString@plt+0x39ac>  // b.any
    a4d8:	add	x0, sp, #0x28
    a4dc:	bl	6570 <strlen@plt>
    a4e0:	mov	x1, x0
    a4e4:	add	x0, sp, #0x28
    a4e8:	add	x0, x0, x1
    a4ec:	mov	w1, #0x614e                	// #24910
    a4f0:	movk	w1, #0x4e, lsl #16
    a4f4:	str	w1, [x0]
    a4f8:	b	a5c4 <PyFloat_FromString@plt+0x3a74>
    a4fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a500:	add	x1, x0, #0xef0
    a504:	ldr	x0, [sp, #88]
    a508:	bl	6930 <PyUnicode_CompareWithASCIIString@plt>
    a50c:	cmp	w0, #0x0
    a510:	b.ne	a548 <PyFloat_FromString@plt+0x39f8>  // b.any
    a514:	add	x0, sp, #0x28
    a518:	bl	6570 <strlen@plt>
    a51c:	mov	x1, x0
    a520:	add	x0, sp, #0x28
    a524:	add	x2, x0, x1
    a528:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a52c:	add	x1, x0, #0xef8
    a530:	mov	x0, x2
    a534:	ldr	w2, [x1]
    a538:	str	w2, [x0]
    a53c:	ldrb	w1, [x1, #4]
    a540:	strb	w1, [x0, #4]
    a544:	b	a5c4 <PyFloat_FromString@plt+0x3a74>
    a548:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a54c:	ldr	x0, [x0, #3928]
    a550:	ldr	x2, [x0]
    a554:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a558:	add	x1, x0, #0xf00
    a55c:	mov	x0, x2
    a560:	bl	66f0 <PyErr_SetString@plt>
    a564:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a568:	ldr	x0, [sp, #88]
    a56c:	ldr	x0, [x0, #8]
    a570:	ldr	x0, [x0, #168]
    a574:	and	x0, x0, #0x1000000
    a578:	cmp	x0, #0x0
    a57c:	b.ne	a5a0 <PyFloat_FromString@plt+0x3a50>  // b.any
    a580:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a584:	ldr	x0, [x0, #3928]
    a588:	ldr	x2, [x0]
    a58c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a590:	add	x1, x0, #0xf40
    a594:	mov	x0, x2
    a598:	bl	66f0 <PyErr_SetString@plt>
    a59c:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a5a0:	ldr	x0, [sp, #88]
    a5a4:	bl	6790 <PyLong_AsSsize_t@plt>
    a5a8:	str	x0, [sp, #112]
    a5ac:	ldr	x0, [sp, #112]
    a5b0:	cmn	x0, #0x1
    a5b4:	b.ne	a5c4 <PyFloat_FromString@plt+0x3a74>  // b.any
    a5b8:	bl	6880 <PyErr_Occurred@plt>
    a5bc:	cmp	x0, #0x0
    a5c0:	b.ne	a870 <PyFloat_FromString@plt+0x3d20>  // b.any
    a5c4:	ldr	x0, [sp, #24]
    a5c8:	ldr	x3, [x0, #32]
    a5cc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a5d0:	ldr	x0, [x0, #3928]
    a5d4:	ldr	x1, [x0]
    a5d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a5dc:	add	x2, x0, #0xf60
    a5e0:	mov	x0, x3
    a5e4:	bl	a2d4 <PyFloat_FromString@plt+0x3784>
    a5e8:	str	x0, [sp, #136]
    a5ec:	ldr	x0, [sp, #136]
    a5f0:	cmp	x0, #0x0
    a5f4:	b.eq	a878 <PyFloat_FromString@plt+0x3d28>  // b.none
    a5f8:	ldr	x0, [sp, #136]
    a5fc:	bl	6a90 <PyTuple_Size@plt>
    a600:	str	x0, [sp, #72]
    a604:	ldr	x0, [sp, #72]
    a608:	add	x0, x0, #0x19
    a60c:	str	x0, [sp, #64]
    a610:	ldr	x0, [sp, #64]
    a614:	bl	6b00 <PyMem_Malloc@plt>
    a618:	str	x0, [sp, #128]
    a61c:	ldr	x0, [sp, #128]
    a620:	str	x0, [sp, #120]
    a624:	ldr	x0, [sp, #128]
    a628:	cmp	x0, #0x0
    a62c:	b.ne	a638 <PyFloat_FromString@plt+0x3ae8>  // b.any
    a630:	bl	6690 <PyErr_NoMemory@plt>
    a634:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a638:	ldr	x1, [sp, #64]
    a63c:	add	x0, sp, #0x28
    a640:	mov	x3, x0
    a644:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a648:	add	x2, x0, #0xf88
    a64c:	ldr	x0, [sp, #120]
    a650:	bl	66b0 <snprintf@plt>
    a654:	str	w0, [sp, #60]
    a658:	ldr	w0, [sp, #60]
    a65c:	cmp	w0, #0x0
    a660:	b.lt	a674 <PyFloat_FromString@plt+0x3b24>  // b.tstop
    a664:	ldrsw	x0, [sp, #60]
    a668:	ldr	x1, [sp, #64]
    a66c:	cmp	x1, x0
    a670:	b.gt	a694 <PyFloat_FromString@plt+0x3b44>
    a674:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a678:	ldr	x0, [x0, #3920]
    a67c:	ldr	x2, [x0]
    a680:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a684:	add	x1, x0, #0xf90
    a688:	mov	x0, x2
    a68c:	bl	66f0 <PyErr_SetString@plt>
    a690:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a694:	ldrsw	x0, [sp, #60]
    a698:	ldr	x1, [sp, #120]
    a69c:	add	x0, x1, x0
    a6a0:	str	x0, [sp, #120]
    a6a4:	ldr	x0, [sp, #72]
    a6a8:	cmp	x0, #0x0
    a6ac:	b.ne	a6d0 <PyFloat_FromString@plt+0x3b80>  // b.any
    a6b0:	ldrb	w0, [sp, #41]
    a6b4:	cmp	w0, #0x0
    a6b8:	b.ne	a6d0 <PyFloat_FromString@plt+0x3b80>  // b.any
    a6bc:	ldr	x0, [sp, #120]
    a6c0:	add	x1, x0, #0x1
    a6c4:	str	x1, [sp, #120]
    a6c8:	mov	w1, #0x30                  	// #48
    a6cc:	strb	w1, [x0]
    a6d0:	str	xzr, [sp, #104]
    a6d4:	b	a7cc <PyFloat_FromString@plt+0x3c7c>
    a6d8:	ldr	x1, [sp, #136]
    a6dc:	ldr	x0, [sp, #104]
    a6e0:	add	x0, x0, #0x2
    a6e4:	lsl	x0, x0, #3
    a6e8:	add	x0, x1, x0
    a6ec:	ldr	x0, [x0, #8]
    a6f0:	str	x0, [sp, #88]
    a6f4:	ldr	x0, [sp, #88]
    a6f8:	ldr	x0, [x0, #8]
    a6fc:	ldr	x0, [x0, #168]
    a700:	and	x0, x0, #0x1000000
    a704:	cmp	x0, #0x0
    a708:	b.ne	a72c <PyFloat_FromString@plt+0x3bdc>  // b.any
    a70c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a710:	ldr	x0, [x0, #3928]
    a714:	ldr	x2, [x0]
    a718:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a71c:	add	x1, x0, #0xf60
    a720:	mov	x0, x2
    a724:	bl	66f0 <PyErr_SetString@plt>
    a728:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a72c:	ldr	x0, [sp, #88]
    a730:	bl	68c0 <PyLong_AsLong@plt>
    a734:	str	x0, [sp, #48]
    a738:	ldr	x0, [sp, #48]
    a73c:	cmn	x0, #0x1
    a740:	b.ne	a750 <PyFloat_FromString@plt+0x3c00>  // b.any
    a744:	bl	6880 <PyErr_Occurred@plt>
    a748:	cmp	x0, #0x0
    a74c:	b.ne	a880 <PyFloat_FromString@plt+0x3d30>  // b.any
    a750:	ldr	x0, [sp, #48]
    a754:	cmp	x0, #0x0
    a758:	b.lt	a768 <PyFloat_FromString@plt+0x3c18>  // b.tstop
    a75c:	ldr	x0, [sp, #48]
    a760:	cmp	x0, #0x9
    a764:	b.le	a788 <PyFloat_FromString@plt+0x3c38>
    a768:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a76c:	ldr	x0, [x0, #3928]
    a770:	ldr	x2, [x0]
    a774:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a778:	add	x1, x0, #0xf60
    a77c:	mov	x0, x2
    a780:	bl	66f0 <PyErr_SetString@plt>
    a784:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a788:	ldr	w0, [sp, #100]
    a78c:	cmp	w0, #0x0
    a790:	b.ne	a7bc <PyFloat_FromString@plt+0x3c6c>  // b.any
    a794:	ldr	x0, [sp, #48]
    a798:	sxtb	w0, w0
    a79c:	add	w0, w0, #0x30
    a7a0:	sxtb	w2, w0
    a7a4:	ldr	x0, [sp, #120]
    a7a8:	add	x1, x0, #0x1
    a7ac:	str	x1, [sp, #120]
    a7b0:	and	w1, w2, #0xff
    a7b4:	strb	w1, [x0]
    a7b8:	b	a7c0 <PyFloat_FromString@plt+0x3c70>
    a7bc:	nop
    a7c0:	ldr	x0, [sp, #104]
    a7c4:	add	x0, x0, #0x1
    a7c8:	str	x0, [sp, #104]
    a7cc:	ldr	x1, [sp, #104]
    a7d0:	ldr	x0, [sp, #72]
    a7d4:	cmp	x1, x0
    a7d8:	b.lt	a6d8 <PyFloat_FromString@plt+0x3b88>  // b.tstop
    a7dc:	ldr	x0, [sp, #120]
    a7e0:	strb	wzr, [x0]
    a7e4:	ldrb	w0, [sp, #41]
    a7e8:	cmp	w0, #0x0
    a7ec:	b.ne	a858 <PyFloat_FromString@plt+0x3d08>  // b.any
    a7f0:	ldr	x0, [sp, #120]
    a7f4:	add	x1, x0, #0x1
    a7f8:	str	x1, [sp, #120]
    a7fc:	mov	w1, #0x45                  	// #69
    a800:	strb	w1, [x0]
    a804:	ldr	x3, [sp, #112]
    a808:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a80c:	add	x2, x0, #0xfb8
    a810:	mov	x1, #0x15                  	// #21
    a814:	ldr	x0, [sp, #120]
    a818:	bl	66b0 <snprintf@plt>
    a81c:	str	w0, [sp, #60]
    a820:	ldr	w0, [sp, #60]
    a824:	cmp	w0, #0x0
    a828:	b.lt	a838 <PyFloat_FromString@plt+0x3ce8>  // b.tstop
    a82c:	ldr	w0, [sp, #60]
    a830:	cmp	w0, #0x14
    a834:	b.le	a858 <PyFloat_FromString@plt+0x3d08>
    a838:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a83c:	ldr	x0, [x0, #3920]
    a840:	ldr	x2, [x0]
    a844:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a848:	add	x1, x0, #0xf90
    a84c:	mov	x0, x2
    a850:	bl	66f0 <PyErr_SetString@plt>
    a854:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a858:	ldr	x0, [sp, #136]
    a85c:	bl	6d64 <PyFloat_FromString@plt+0x214>
    a860:	ldr	x0, [sp, #128]
    a864:	b	a8a4 <PyFloat_FromString@plt+0x3d54>
    a868:	nop
    a86c:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a870:	nop
    a874:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a878:	nop
    a87c:	b	a884 <PyFloat_FromString@plt+0x3d34>
    a880:	nop
    a884:	ldr	x0, [sp, #136]
    a888:	bl	6d64 <PyFloat_FromString@plt+0x214>
    a88c:	ldr	x0, [sp, #128]
    a890:	cmp	x0, #0x0
    a894:	b.eq	a8a0 <PyFloat_FromString@plt+0x3d50>  // b.none
    a898:	ldr	x0, [sp, #128]
    a89c:	bl	6610 <PyMem_Free@plt>
    a8a0:	mov	x0, #0x0                   	// #0
    a8a4:	ldp	x29, x30, [sp], #144
    a8a8:	ret
    a8ac:	stp	x29, x30, [sp, #-80]!
    a8b0:	mov	x29, sp
    a8b4:	str	x0, [sp, #40]
    a8b8:	str	x1, [sp, #32]
    a8bc:	str	x2, [sp, #24]
    a8c0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a8c4:	ldr	x0, [x0, #3936]
    a8c8:	ldr	x1, [x0]
    a8cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a8d0:	add	x2, x0, #0xfc0
    a8d4:	ldr	x0, [sp, #32]
    a8d8:	bl	a2d4 <PyFloat_FromString@plt+0x3784>
    a8dc:	str	x0, [sp, #72]
    a8e0:	ldr	x0, [sp, #72]
    a8e4:	cmp	x0, #0x0
    a8e8:	b.ne	a8f4 <PyFloat_FromString@plt+0x3da4>  // b.any
    a8ec:	mov	x0, #0x0                   	// #0
    a8f0:	b	a948 <PyFloat_FromString@plt+0x3df8>
    a8f4:	ldr	x0, [sp, #72]
    a8f8:	bl	a34c <PyFloat_FromString@plt+0x37fc>
    a8fc:	str	x0, [sp, #64]
    a900:	ldr	x2, [sp, #72]
    a904:	mov	w1, #0x985                 	// #2437
    a908:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a90c:	add	x0, x0, #0x9c0
    a910:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a914:	ldr	x0, [sp, #64]
    a918:	cmp	x0, #0x0
    a91c:	b.ne	a928 <PyFloat_FromString@plt+0x3dd8>  // b.any
    a920:	mov	x0, #0x0                   	// #0
    a924:	b	a948 <PyFloat_FromString@plt+0x3df8>
    a928:	ldr	x2, [sp, #24]
    a92c:	ldr	x1, [sp, #64]
    a930:	ldr	x0, [sp, #40]
    a934:	bl	95b8 <PyFloat_FromString@plt+0x2a68>
    a938:	str	x0, [sp, #56]
    a93c:	ldr	x0, [sp, #64]
    a940:	bl	6610 <PyMem_Free@plt>
    a944:	ldr	x0, [sp, #56]
    a948:	ldp	x29, x30, [sp], #80
    a94c:	ret
    a950:	stp	x29, x30, [sp, #-80]!
    a954:	mov	x29, sp
    a958:	str	x0, [sp, #40]
    a95c:	str	x1, [sp, #32]
    a960:	str	x2, [sp, #24]
    a964:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    a968:	ldr	x0, [x0, #3936]
    a96c:	ldr	x1, [x0]
    a970:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a974:	add	x2, x0, #0xfc0
    a978:	ldr	x0, [sp, #32]
    a97c:	bl	a2d4 <PyFloat_FromString@plt+0x3784>
    a980:	str	x0, [sp, #72]
    a984:	ldr	x0, [sp, #72]
    a988:	cmp	x0, #0x0
    a98c:	b.ne	a998 <PyFloat_FromString@plt+0x3e48>  // b.any
    a990:	mov	x0, #0x0                   	// #0
    a994:	b	a9ec <PyFloat_FromString@plt+0x3e9c>
    a998:	ldr	x0, [sp, #72]
    a99c:	bl	a34c <PyFloat_FromString@plt+0x37fc>
    a9a0:	str	x0, [sp, #64]
    a9a4:	ldr	x2, [sp, #72]
    a9a8:	mov	w1, #0x9a0                 	// #2464
    a9ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    a9b0:	add	x0, x0, #0x9c0
    a9b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    a9b8:	ldr	x0, [sp, #64]
    a9bc:	cmp	x0, #0x0
    a9c0:	b.ne	a9cc <PyFloat_FromString@plt+0x3e7c>  // b.any
    a9c4:	mov	x0, #0x0                   	// #0
    a9c8:	b	a9ec <PyFloat_FromString@plt+0x3e9c>
    a9cc:	ldr	x2, [sp, #24]
    a9d0:	ldr	x1, [sp, #64]
    a9d4:	ldr	x0, [sp, #40]
    a9d8:	bl	9658 <PyFloat_FromString@plt+0x2b08>
    a9dc:	str	x0, [sp, #56]
    a9e0:	ldr	x0, [sp, #64]
    a9e4:	bl	6610 <PyMem_Free@plt>
    a9e8:	ldr	x0, [sp, #56]
    a9ec:	ldp	x29, x30, [sp], #80
    a9f0:	ret
    a9f4:	stp	x29, x30, [sp, #-64]!
    a9f8:	mov	x29, sp
    a9fc:	str	x0, [sp, #24]
    aa00:	str	x1, [sp, #16]
    aa04:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    aa08:	str	x0, [sp, #48]
    aa0c:	ldr	x0, [sp, #48]
    aa10:	cmp	x0, #0x0
    aa14:	b.ne	aa20 <PyFloat_FromString@plt+0x3ed0>  // b.any
    aa18:	mov	x0, #0x0                   	// #0
    aa1c:	b	aaa0 <PyFloat_FromString@plt+0x3f50>
    aa20:	ldr	x2, [sp, #48]
    aa24:	mov	w1, #0x9d2                 	// #2514
    aa28:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    aa2c:	add	x0, x0, #0x9c0
    aa30:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    aa34:	ldr	x2, [sp, #48]
    aa38:	ldr	x1, [sp, #16]
    aa3c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aa40:	add	x0, x0, #0x360
    aa44:	bl	9ca0 <PyFloat_FromString@plt+0x3150>
    aa48:	str	x0, [sp, #56]
    aa4c:	ldr	x1, [sp, #24]
    aa50:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aa54:	add	x0, x0, #0x360
    aa58:	cmp	x1, x0
    aa5c:	b.eq	aa9c <PyFloat_FromString@plt+0x3f4c>  // b.none
    aa60:	ldr	x0, [sp, #56]
    aa64:	cmp	x0, #0x0
    aa68:	b.eq	aa9c <PyFloat_FromString@plt+0x3f4c>  // b.none
    aa6c:	ldr	x0, [sp, #56]
    aa70:	str	x0, [sp, #40]
    aa74:	mov	x2, #0x0                   	// #0
    aa78:	ldr	x1, [sp, #56]
    aa7c:	ldr	x0, [sp, #24]
    aa80:	bl	68f0 <PyObject_CallFunctionObjArgs@plt>
    aa84:	str	x0, [sp, #56]
    aa88:	ldr	x2, [sp, #40]
    aa8c:	mov	w1, #0x9d5                 	// #2517
    aa90:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    aa94:	add	x0, x0, #0x9c0
    aa98:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    aa9c:	ldr	x0, [sp, #56]
    aaa0:	ldp	x29, x30, [sp], #64
    aaa4:	ret
    aaa8:	stp	x29, x30, [sp, #-32]!
    aaac:	mov	x29, sp
    aab0:	str	x0, [sp, #24]
    aab4:	str	x1, [sp, #16]
    aab8:	ldr	x2, [sp, #24]
    aabc:	ldr	x1, [sp, #16]
    aac0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aac4:	add	x0, x0, #0x360
    aac8:	bl	a158 <PyFloat_FromString@plt+0x3608>
    aacc:	ldp	x29, x30, [sp], #32
    aad0:	ret
    aad4:	stp	x29, x30, [sp, #-48]!
    aad8:	mov	x29, sp
    aadc:	str	x0, [sp, #24]
    aae0:	str	x1, [sp, #16]
    aae4:	str	wzr, [sp, #36]
    aae8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aaec:	add	x0, x0, #0x360
    aaf0:	bl	912c <PyFloat_FromString@plt+0x25dc>
    aaf4:	str	x0, [sp, #40]
    aaf8:	ldr	x0, [sp, #40]
    aafc:	cmp	x0, #0x0
    ab00:	b.ne	ab0c <PyFloat_FromString@plt+0x3fbc>  // b.any
    ab04:	mov	x0, #0x0                   	// #0
    ab08:	b	abc0 <PyFloat_FromString@plt+0x4070>
    ab0c:	ldr	x0, [sp, #40]
    ab10:	add	x3, x0, #0x18
    ab14:	ldr	x0, [sp, #24]
    ab18:	add	x0, x0, #0x18
    ab1c:	add	x1, sp, #0x24
    ab20:	mov	x2, x1
    ab24:	mov	x1, x0
    ab28:	mov	x0, x3
    ab2c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
    ab30:	ldr	w0, [sp, #36]
    ab34:	mov	w1, w0
    ab38:	ldr	x0, [sp, #16]
    ab3c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ab40:	cmp	w0, #0x0
    ab44:	b.eq	ab64 <PyFloat_FromString@plt+0x4014>  // b.none
    ab48:	ldr	x2, [sp, #40]
    ab4c:	mov	w1, #0x9f0                 	// #2544
    ab50:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ab54:	add	x0, x0, #0x9c0
    ab58:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ab5c:	mov	x0, #0x0                   	// #0
    ab60:	b	abc0 <PyFloat_FromString@plt+0x4070>
    ab64:	ldr	x0, [sp, #40]
    ab68:	add	x3, x0, #0x18
    ab6c:	ldr	x0, [sp, #16]
    ab70:	add	x0, x0, #0x10
    ab74:	add	x1, sp, #0x24
    ab78:	mov	x2, x1
    ab7c:	mov	x1, x0
    ab80:	mov	x0, x3
    ab84:	bl	29700 <PyInit__decimal@@Base+0x11a28>
    ab88:	ldr	w0, [sp, #36]
    ab8c:	mov	w1, w0
    ab90:	ldr	x0, [sp, #16]
    ab94:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ab98:	cmp	w0, #0x0
    ab9c:	b.eq	abbc <PyFloat_FromString@plt+0x406c>  // b.none
    aba0:	ldr	x2, [sp, #40]
    aba4:	mov	w1, #0x9f6                 	// #2550
    aba8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    abac:	add	x0, x0, #0x9c0
    abb0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    abb4:	mov	x0, #0x0                   	// #0
    abb8:	b	abc0 <PyFloat_FromString@plt+0x4070>
    abbc:	ldr	x0, [sp, #40]
    abc0:	ldp	x29, x30, [sp], #48
    abc4:	ret
    abc8:	stp	x29, x30, [sp, #-48]!
    abcc:	mov	x29, sp
    abd0:	str	x0, [sp, #40]
    abd4:	str	x1, [sp, #32]
    abd8:	str	x2, [sp, #24]
    abdc:	ldr	x0, [sp, #32]
    abe0:	cmp	x0, #0x0
    abe4:	b.ne	abfc <PyFloat_FromString@plt+0x40ac>  // b.any
    abe8:	ldr	x2, [sp, #24]
    abec:	mov	x1, #0x0                   	// #0
    abf0:	ldr	x0, [sp, #40]
    abf4:	bl	9904 <PyFloat_FromString@plt+0x2db4>
    abf8:	b	ad7c <PyFloat_FromString@plt+0x422c>
    abfc:	ldr	x0, [sp, #32]
    ac00:	ldr	x1, [x0, #8]
    ac04:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ac08:	add	x0, x0, #0x360
    ac0c:	cmp	x1, x0
    ac10:	b.eq	ac34 <PyFloat_FromString@plt+0x40e4>  // b.none
    ac14:	ldr	x0, [sp, #32]
    ac18:	ldr	x2, [x0, #8]
    ac1c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ac20:	add	x1, x0, #0x360
    ac24:	mov	x0, x2
    ac28:	bl	6a70 <PyType_IsSubtype@plt>
    ac2c:	cmp	w0, #0x0
    ac30:	b.eq	ac48 <PyFloat_FromString@plt+0x40f8>  // b.none
    ac34:	ldr	x2, [sp, #24]
    ac38:	ldr	x1, [sp, #32]
    ac3c:	ldr	x0, [sp, #40]
    ac40:	bl	a1fc <PyFloat_FromString@plt+0x36ac>
    ac44:	b	ad7c <PyFloat_FromString@plt+0x422c>
    ac48:	ldr	x0, [sp, #32]
    ac4c:	ldr	x0, [x0, #8]
    ac50:	ldr	x0, [x0, #168]
    ac54:	and	x0, x0, #0x10000000
    ac58:	cmp	x0, #0x0
    ac5c:	b.eq	ac74 <PyFloat_FromString@plt+0x4124>  // b.none
    ac60:	ldr	x2, [sp, #24]
    ac64:	ldr	x1, [sp, #32]
    ac68:	ldr	x0, [sp, #40]
    ac6c:	bl	9798 <PyFloat_FromString@plt+0x2c48>
    ac70:	b	ad7c <PyFloat_FromString@plt+0x422c>
    ac74:	ldr	x0, [sp, #32]
    ac78:	ldr	x0, [x0, #8]
    ac7c:	ldr	x0, [x0, #168]
    ac80:	and	x0, x0, #0x1000000
    ac84:	cmp	x0, #0x0
    ac88:	b.eq	aca0 <PyFloat_FromString@plt+0x4150>  // b.none
    ac8c:	ldr	x2, [sp, #24]
    ac90:	ldr	x1, [sp, #32]
    ac94:	ldr	x0, [sp, #40]
    ac98:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    ac9c:	b	ad7c <PyFloat_FromString@plt+0x422c>
    aca0:	ldr	x0, [sp, #32]
    aca4:	ldr	x0, [x0, #8]
    aca8:	ldr	x0, [x0, #168]
    acac:	and	x0, x0, #0x4000000
    acb0:	cmp	x0, #0x0
    acb4:	b.ne	acd0 <PyFloat_FromString@plt+0x4180>  // b.any
    acb8:	ldr	x0, [sp, #32]
    acbc:	ldr	x0, [x0, #8]
    acc0:	ldr	x0, [x0, #168]
    acc4:	and	x0, x0, #0x2000000
    acc8:	cmp	x0, #0x0
    accc:	b.eq	ace4 <PyFloat_FromString@plt+0x4194>  // b.none
    acd0:	ldr	x2, [sp, #24]
    acd4:	ldr	x1, [sp, #32]
    acd8:	ldr	x0, [sp, #40]
    acdc:	bl	a950 <PyFloat_FromString@plt+0x3e00>
    ace0:	b	ad7c <PyFloat_FromString@plt+0x422c>
    ace4:	ldr	x0, [sp, #32]
    ace8:	ldr	x1, [x0, #8]
    acec:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    acf0:	ldr	x0, [x0, #3864]
    acf4:	cmp	x1, x0
    acf8:	b.eq	ad1c <PyFloat_FromString@plt+0x41cc>  // b.none
    acfc:	ldr	x0, [sp, #32]
    ad00:	ldr	x2, [x0, #8]
    ad04:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ad08:	ldr	x1, [x0, #3864]
    ad0c:	mov	x0, x2
    ad10:	bl	6a70 <PyType_IsSubtype@plt>
    ad14:	cmp	w0, #0x0
    ad18:	b.eq	ad4c <PyFloat_FromString@plt+0x41fc>  // b.none
    ad1c:	mov	w1, #0x400                 	// #1024
    ad20:	ldr	x0, [sp, #24]
    ad24:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ad28:	cmp	w0, #0x0
    ad2c:	b.eq	ad38 <PyFloat_FromString@plt+0x41e8>  // b.none
    ad30:	mov	x0, #0x0                   	// #0
    ad34:	b	ad7c <PyFloat_FromString@plt+0x422c>
    ad38:	ldr	x2, [sp, #24]
    ad3c:	ldr	x1, [sp, #32]
    ad40:	ldr	x0, [sp, #40]
    ad44:	bl	9ca0 <PyFloat_FromString@plt+0x3150>
    ad48:	b	ad7c <PyFloat_FromString@plt+0x422c>
    ad4c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ad50:	ldr	x0, [x0, #3936]
    ad54:	ldr	x3, [x0]
    ad58:	ldr	x0, [sp, #32]
    ad5c:	ldr	x0, [x0, #8]
    ad60:	ldr	x0, [x0, #24]
    ad64:	mov	x2, x0
    ad68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ad6c:	add	x1, x0, #0xfe8
    ad70:	mov	x0, x3
    ad74:	bl	6ac0 <PyErr_Format@plt>
    ad78:	mov	x0, #0x0                   	// #0
    ad7c:	ldp	x29, x30, [sp], #48
    ad80:	ret
    ad84:	stp	x29, x30, [sp, #-48]!
    ad88:	mov	x29, sp
    ad8c:	str	x0, [sp, #24]
    ad90:	str	x1, [sp, #16]
    ad94:	ldr	x0, [sp, #24]
    ad98:	cmp	x0, #0x0
    ad9c:	b.ne	adb8 <PyFloat_FromString@plt+0x4268>  // b.any
    ada0:	ldr	x2, [sp, #16]
    ada4:	mov	x1, #0x0                   	// #0
    ada8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    adac:	add	x0, x0, #0x360
    adb0:	bl	9864 <PyFloat_FromString@plt+0x2d14>
    adb4:	b	afe8 <PyFloat_FromString@plt+0x4498>
    adb8:	ldr	x0, [sp, #24]
    adbc:	ldr	x1, [x0, #8]
    adc0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    adc4:	add	x0, x0, #0x360
    adc8:	cmp	x1, x0
    adcc:	b.eq	adf0 <PyFloat_FromString@plt+0x42a0>  // b.none
    add0:	ldr	x0, [sp, #24]
    add4:	ldr	x2, [x0, #8]
    add8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    addc:	add	x1, x0, #0x360
    ade0:	mov	x0, x2
    ade4:	bl	6a70 <PyType_IsSubtype@plt>
    ade8:	cmp	w0, #0x0
    adec:	b.eq	aea4 <PyFloat_FromString@plt+0x4354>  // b.none
    adf0:	ldr	x0, [sp, #16]
    adf4:	add	x0, x0, #0x10
    adf8:	str	x0, [sp, #40]
    adfc:	ldr	x0, [sp, #24]
    ae00:	add	x0, x0, #0x18
    ae04:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
    ae08:	cmp	w0, #0x0
    ae0c:	b.eq	ae94 <PyFloat_FromString@plt+0x4344>  // b.none
    ae10:	ldr	x0, [sp, #24]
    ae14:	ldr	x1, [x0, #40]
    ae18:	ldr	x0, [sp, #40]
    ae1c:	ldr	x2, [x0]
    ae20:	ldr	x0, [sp, #40]
    ae24:	ldr	w0, [x0, #40]
    ae28:	sxtw	x0, w0
    ae2c:	sub	x0, x2, x0
    ae30:	cmp	x1, x0
    ae34:	b.le	ae94 <PyFloat_FromString@plt+0x4344>
    ae38:	mov	w1, #0x2                   	// #2
    ae3c:	ldr	x0, [sp, #16]
    ae40:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ae44:	cmp	w0, #0x0
    ae48:	b.eq	ae54 <PyFloat_FromString@plt+0x4304>  // b.none
    ae4c:	mov	x0, #0x0                   	// #0
    ae50:	b	afe8 <PyFloat_FromString@plt+0x4498>
    ae54:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ae58:	add	x0, x0, #0x360
    ae5c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    ae60:	str	x0, [sp, #32]
    ae64:	ldr	x0, [sp, #32]
    ae68:	cmp	x0, #0x0
    ae6c:	b.ne	ae78 <PyFloat_FromString@plt+0x4328>  // b.any
    ae70:	mov	x0, #0x0                   	// #0
    ae74:	b	afe8 <PyFloat_FromString@plt+0x4498>
    ae78:	ldr	x0, [sp, #32]
    ae7c:	add	x0, x0, #0x18
    ae80:	mov	w2, #0x4                   	// #4
    ae84:	mov	w1, #0x0                   	// #0
    ae88:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
    ae8c:	ldr	x0, [sp, #32]
    ae90:	b	afe8 <PyFloat_FromString@plt+0x4498>
    ae94:	ldr	x1, [sp, #16]
    ae98:	ldr	x0, [sp, #24]
    ae9c:	bl	aad4 <PyFloat_FromString@plt+0x3f84>
    aea0:	b	afe8 <PyFloat_FromString@plt+0x4498>
    aea4:	ldr	x0, [sp, #24]
    aea8:	ldr	x0, [x0, #8]
    aeac:	ldr	x0, [x0, #168]
    aeb0:	and	x0, x0, #0x10000000
    aeb4:	cmp	x0, #0x0
    aeb8:	b.eq	aed4 <PyFloat_FromString@plt+0x4384>  // b.none
    aebc:	ldr	x2, [sp, #16]
    aec0:	ldr	x1, [sp, #24]
    aec4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aec8:	add	x0, x0, #0x360
    aecc:	bl	9734 <PyFloat_FromString@plt+0x2be4>
    aed0:	b	afe8 <PyFloat_FromString@plt+0x4498>
    aed4:	ldr	x0, [sp, #24]
    aed8:	ldr	x0, [x0, #8]
    aedc:	ldr	x0, [x0, #168]
    aee0:	and	x0, x0, #0x1000000
    aee4:	cmp	x0, #0x0
    aee8:	b.eq	af04 <PyFloat_FromString@plt+0x43b4>  // b.none
    aeec:	ldr	x2, [sp, #16]
    aef0:	ldr	x1, [sp, #24]
    aef4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    aef8:	add	x0, x0, #0x360
    aefc:	bl	9ac8 <PyFloat_FromString@plt+0x2f78>
    af00:	b	afe8 <PyFloat_FromString@plt+0x4498>
    af04:	ldr	x0, [sp, #24]
    af08:	ldr	x0, [x0, #8]
    af0c:	ldr	x0, [x0, #168]
    af10:	and	x0, x0, #0x4000000
    af14:	cmp	x0, #0x0
    af18:	b.ne	af34 <PyFloat_FromString@plt+0x43e4>  // b.any
    af1c:	ldr	x0, [sp, #24]
    af20:	ldr	x0, [x0, #8]
    af24:	ldr	x0, [x0, #168]
    af28:	and	x0, x0, #0x2000000
    af2c:	cmp	x0, #0x0
    af30:	b.eq	af4c <PyFloat_FromString@plt+0x43fc>  // b.none
    af34:	ldr	x2, [sp, #16]
    af38:	ldr	x1, [sp, #24]
    af3c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    af40:	add	x0, x0, #0x360
    af44:	bl	a8ac <PyFloat_FromString@plt+0x3d5c>
    af48:	b	afe8 <PyFloat_FromString@plt+0x4498>
    af4c:	ldr	x0, [sp, #24]
    af50:	ldr	x1, [x0, #8]
    af54:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    af58:	ldr	x0, [x0, #3864]
    af5c:	cmp	x1, x0
    af60:	b.eq	af84 <PyFloat_FromString@plt+0x4434>  // b.none
    af64:	ldr	x0, [sp, #24]
    af68:	ldr	x2, [x0, #8]
    af6c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    af70:	ldr	x1, [x0, #3864]
    af74:	mov	x0, x2
    af78:	bl	6a70 <PyType_IsSubtype@plt>
    af7c:	cmp	w0, #0x0
    af80:	b.eq	afb8 <PyFloat_FromString@plt+0x4468>  // b.none
    af84:	mov	w1, #0x400                 	// #1024
    af88:	ldr	x0, [sp, #16]
    af8c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    af90:	cmp	w0, #0x0
    af94:	b.eq	afa0 <PyFloat_FromString@plt+0x4450>  // b.none
    af98:	mov	x0, #0x0                   	// #0
    af9c:	b	afe8 <PyFloat_FromString@plt+0x4498>
    afa0:	ldr	x2, [sp, #16]
    afa4:	ldr	x1, [sp, #24]
    afa8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    afac:	add	x0, x0, #0x360
    afb0:	bl	a158 <PyFloat_FromString@plt+0x3608>
    afb4:	b	afe8 <PyFloat_FromString@plt+0x4498>
    afb8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    afbc:	ldr	x0, [x0, #3936]
    afc0:	ldr	x3, [x0]
    afc4:	ldr	x0, [sp, #24]
    afc8:	ldr	x0, [x0, #8]
    afcc:	ldr	x0, [x0, #24]
    afd0:	mov	x2, x0
    afd4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    afd8:	add	x1, x0, #0xfe8
    afdc:	mov	x0, x3
    afe0:	bl	6ac0 <PyErr_Format@plt>
    afe4:	mov	x0, #0x0                   	// #0
    afe8:	ldp	x29, x30, [sp], #48
    afec:	ret
    aff0:	stp	x29, x30, [sp, #-64]!
    aff4:	mov	x29, sp
    aff8:	str	x0, [sp, #40]
    affc:	str	x1, [sp, #32]
    b000:	str	x2, [sp, #24]
    b004:	str	xzr, [sp, #56]
    b008:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b00c:	ldr	x0, [x0, #4008]
    b010:	str	x0, [sp, #48]
    b014:	add	x1, sp, #0x30
    b018:	add	x0, sp, #0x38
    b01c:	mov	x5, x1
    b020:	mov	x4, x0
    b024:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    b028:	add	x3, x0, #0x260
    b02c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    b030:	add	x2, x0, #0x18
    b034:	ldr	x1, [sp, #24]
    b038:	ldr	x0, [sp, #32]
    b03c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    b040:	cmp	w0, #0x0
    b044:	b.ne	b050 <PyFloat_FromString@plt+0x4500>  // b.any
    b048:	mov	x0, #0x0                   	// #0
    b04c:	b	b110 <PyFloat_FromString@plt+0x45c0>
    b050:	ldr	x1, [sp, #48]
    b054:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b058:	ldr	x0, [x0, #4008]
    b05c:	cmp	x1, x0
    b060:	b.ne	b09c <PyFloat_FromString@plt+0x454c>  // b.any
    b064:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    b068:	str	x0, [sp, #48]
    b06c:	ldr	x0, [sp, #48]
    b070:	cmp	x0, #0x0
    b074:	b.ne	b080 <PyFloat_FromString@plt+0x4530>  // b.any
    b078:	mov	x0, #0x0                   	// #0
    b07c:	b	b110 <PyFloat_FromString@plt+0x45c0>
    b080:	ldr	x0, [sp, #48]
    b084:	mov	x2, x0
    b088:	mov	w1, #0xa5c                 	// #2652
    b08c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b090:	add	x0, x0, #0x9c0
    b094:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b098:	b	b0f8 <PyFloat_FromString@plt+0x45a8>
    b09c:	ldr	x0, [sp, #48]
    b0a0:	ldr	x1, [x0, #8]
    b0a4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b0a8:	add	x0, x0, #0x500
    b0ac:	cmp	x1, x0
    b0b0:	b.eq	b0f8 <PyFloat_FromString@plt+0x45a8>  // b.none
    b0b4:	ldr	x0, [sp, #48]
    b0b8:	ldr	x2, [x0, #8]
    b0bc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b0c0:	add	x1, x0, #0x500
    b0c4:	mov	x0, x2
    b0c8:	bl	6a70 <PyType_IsSubtype@plt>
    b0cc:	cmp	w0, #0x0
    b0d0:	b.ne	b0f8 <PyFloat_FromString@plt+0x45a8>  // b.any
    b0d4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b0d8:	ldr	x0, [x0, #3936]
    b0dc:	ldr	x2, [x0]
    b0e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b0e4:	add	x1, x0, #0xe00
    b0e8:	mov	x0, x2
    b0ec:	bl	66f0 <PyErr_SetString@plt>
    b0f0:	mov	x0, #0x0                   	// #0
    b0f4:	b	b110 <PyFloat_FromString@plt+0x45c0>
    b0f8:	ldr	x0, [sp, #56]
    b0fc:	ldr	x1, [sp, #48]
    b100:	mov	x2, x1
    b104:	mov	x1, x0
    b108:	ldr	x0, [sp, #40]
    b10c:	bl	abc8 <PyFloat_FromString@plt+0x4078>
    b110:	ldp	x29, x30, [sp], #64
    b114:	ret
    b118:	stp	x29, x30, [sp, #-48]!
    b11c:	mov	x29, sp
    b120:	str	x0, [sp, #24]
    b124:	str	x1, [sp, #16]
    b128:	str	xzr, [sp, #40]
    b12c:	add	x0, sp, #0x28
    b130:	mov	x2, x0
    b134:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b138:	add	x1, x0, #0xdf8
    b13c:	ldr	x0, [sp, #16]
    b140:	bl	6980 <PyArg_ParseTuple@plt>
    b144:	cmp	w0, #0x0
    b148:	b.ne	b154 <PyFloat_FromString@plt+0x4604>  // b.any
    b14c:	mov	x0, #0x0                   	// #0
    b150:	b	b160 <PyFloat_FromString@plt+0x4610>
    b154:	ldr	x0, [sp, #40]
    b158:	ldr	x1, [sp, #24]
    b15c:	bl	ad84 <PyFloat_FromString@plt+0x4234>
    b160:	ldp	x29, x30, [sp], #48
    b164:	ret
    b168:	stp	x29, x30, [sp, #-48]!
    b16c:	mov	x29, sp
    b170:	str	w0, [sp, #44]
    b174:	str	x1, [sp, #32]
    b178:	str	x2, [sp, #24]
    b17c:	str	x3, [sp, #16]
    b180:	ldr	x0, [sp, #24]
    b184:	ldr	x1, [x0, #8]
    b188:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b18c:	add	x0, x0, #0x360
    b190:	cmp	x1, x0
    b194:	b.eq	b1b8 <PyFloat_FromString@plt+0x4668>  // b.none
    b198:	ldr	x0, [sp, #24]
    b19c:	ldr	x2, [x0, #8]
    b1a0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b1a4:	add	x1, x0, #0x360
    b1a8:	mov	x0, x2
    b1ac:	bl	6a70 <PyType_IsSubtype@plt>
    b1b0:	cmp	w0, #0x0
    b1b4:	b.eq	b1d4 <PyFloat_FromString@plt+0x4684>  // b.none
    b1b8:	ldr	x0, [sp, #32]
    b1bc:	ldr	x1, [sp, #24]
    b1c0:	str	x1, [x0]
    b1c4:	ldr	x0, [sp, #24]
    b1c8:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b1cc:	mov	w0, #0x1                   	// #1
    b1d0:	b	b288 <PyFloat_FromString@plt+0x4738>
    b1d4:	ldr	x0, [sp, #24]
    b1d8:	ldr	x0, [x0, #8]
    b1dc:	ldr	x0, [x0, #168]
    b1e0:	and	x0, x0, #0x1000000
    b1e4:	cmp	x0, #0x0
    b1e8:	b.eq	b22c <PyFloat_FromString@plt+0x46dc>  // b.none
    b1ec:	ldr	x2, [sp, #16]
    b1f0:	ldr	x1, [sp, #24]
    b1f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b1f8:	add	x0, x0, #0x360
    b1fc:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    b200:	mov	x1, x0
    b204:	ldr	x0, [sp, #32]
    b208:	str	x1, [x0]
    b20c:	ldr	x0, [sp, #32]
    b210:	ldr	x0, [x0]
    b214:	cmp	x0, #0x0
    b218:	b.ne	b224 <PyFloat_FromString@plt+0x46d4>  // b.any
    b21c:	mov	w0, #0x0                   	// #0
    b220:	b	b288 <PyFloat_FromString@plt+0x4738>
    b224:	mov	w0, #0x1                   	// #1
    b228:	b	b288 <PyFloat_FromString@plt+0x4738>
    b22c:	ldr	w0, [sp, #44]
    b230:	cmp	w0, #0x0
    b234:	b.eq	b268 <PyFloat_FromString@plt+0x4718>  // b.none
    b238:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b23c:	ldr	x0, [x0, #3936]
    b240:	ldr	x3, [x0]
    b244:	ldr	x0, [sp, #24]
    b248:	ldr	x0, [x0, #8]
    b24c:	ldr	x0, [x0, #24]
    b250:	mov	x2, x0
    b254:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b258:	add	x1, x0, #0xfe8
    b25c:	mov	x0, x3
    b260:	bl	6ac0 <PyErr_Format@plt>
    b264:	b	b284 <PyFloat_FromString@plt+0x4734>
    b268:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b26c:	ldr	x0, [x0, #3912]
    b270:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b274:	ldr	x0, [sp, #32]
    b278:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
    b27c:	ldr	x1, [x1, #3912]
    b280:	str	x1, [x0]
    b284:	mov	w0, #0x0                   	// #0
    b288:	ldp	x29, x30, [sp], #48
    b28c:	ret
    b290:	stp	x29, x30, [sp, #-144]!
    b294:	mov	x29, sp
    b298:	str	x0, [sp, #40]
    b29c:	str	x1, [sp, #32]
    b2a0:	str	x2, [sp, #24]
    b2a4:	str	xzr, [sp, #136]
    b2a8:	str	xzr, [sp, #128]
    b2ac:	str	wzr, [sp, #100]
    b2b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    b2b4:	add	x1, x0, #0x20
    b2b8:	ldr	x0, [sp, #32]
    b2bc:	bl	6630 <PyObject_GetAttrString@plt>
    b2c0:	str	x0, [sp, #136]
    b2c4:	ldr	x0, [sp, #136]
    b2c8:	cmp	x0, #0x0
    b2cc:	b.ne	b2d8 <PyFloat_FromString@plt+0x4788>  // b.any
    b2d0:	mov	x0, #0x0                   	// #0
    b2d4:	b	b450 <PyFloat_FromString@plt+0x4900>
    b2d8:	ldr	x2, [sp, #24]
    b2dc:	ldr	x1, [sp, #136]
    b2e0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b2e4:	add	x0, x0, #0x360
    b2e8:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    b2ec:	str	x0, [sp, #128]
    b2f0:	ldr	x2, [sp, #136]
    b2f4:	mov	w1, #0xae6                 	// #2790
    b2f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b2fc:	add	x0, x0, #0x9c0
    b300:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b304:	ldr	x0, [sp, #128]
    b308:	cmp	x0, #0x0
    b30c:	b.ne	b318 <PyFloat_FromString@plt+0x47c8>  // b.any
    b310:	mov	x0, #0x0                   	// #0
    b314:	b	b450 <PyFloat_FromString@plt+0x4900>
    b318:	ldr	x0, [sp, #40]
    b31c:	add	x0, x0, #0x18
    b320:	bl	29ae4 <PyInit__decimal@@Base+0x11e0c>
    b324:	str	x0, [sp, #120]
    b328:	ldr	x0, [sp, #120]
    b32c:	cmp	x0, #0x0
    b330:	b.ne	b354 <PyFloat_FromString@plt+0x4804>  // b.any
    b334:	ldr	x2, [sp, #128]
    b338:	mov	w1, #0xaed                 	// #2797
    b33c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b340:	add	x0, x0, #0x9c0
    b344:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b348:	bl	6690 <PyErr_NoMemory@plt>
    b34c:	mov	x0, #0x0                   	// #0
    b350:	b	b450 <PyFloat_FromString@plt+0x4900>
    b354:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b358:	add	x0, x0, #0x360
    b35c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    b360:	str	x0, [sp, #112]
    b364:	ldr	x0, [sp, #112]
    b368:	cmp	x0, #0x0
    b36c:	b.ne	b394 <PyFloat_FromString@plt+0x4844>  // b.any
    b370:	ldr	x2, [sp, #128]
    b374:	mov	w1, #0xaf3                 	// #2803
    b378:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b37c:	add	x0, x0, #0x9c0
    b380:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b384:	ldr	x0, [sp, #120]
    b388:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    b38c:	mov	x0, #0x0                   	// #0
    b390:	b	b450 <PyFloat_FromString@plt+0x4900>
    b394:	add	x0, sp, #0x30
    b398:	bl	1b658 <PyInit__decimal@@Base+0x3980>
    b39c:	ldr	x0, [sp, #120]
    b3a0:	ldr	x0, [x0, #8]
    b3a4:	str	x0, [sp, #104]
    b3a8:	ldr	x0, [sp, #120]
    b3ac:	str	xzr, [x0, #8]
    b3b0:	ldr	x0, [sp, #112]
    b3b4:	add	x5, x0, #0x18
    b3b8:	ldr	x0, [sp, #128]
    b3bc:	add	x0, x0, #0x18
    b3c0:	add	x2, sp, #0x64
    b3c4:	add	x1, sp, #0x30
    b3c8:	mov	x4, x2
    b3cc:	mov	x3, x1
    b3d0:	mov	x2, x0
    b3d4:	ldr	x1, [sp, #120]
    b3d8:	mov	x0, x5
    b3dc:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
    b3e0:	ldr	x0, [sp, #112]
    b3e4:	ldr	x1, [sp, #104]
    b3e8:	str	x1, [x0, #32]
    b3ec:	ldr	x2, [sp, #128]
    b3f0:	mov	w1, #0xb02                 	// #2818
    b3f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b3f8:	add	x0, x0, #0x9c0
    b3fc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b400:	ldr	x0, [sp, #120]
    b404:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    b408:	ldr	w0, [sp, #100]
    b40c:	cmp	w0, #0x0
    b410:	b.eq	b44c <PyFloat_FromString@plt+0x48fc>  // b.none
    b414:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b418:	ldr	x0, [x0, #3928]
    b41c:	ldr	x2, [x0]
    b420:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    b424:	add	x1, x0, #0x30
    b428:	mov	x0, x2
    b42c:	bl	66f0 <PyErr_SetString@plt>
    b430:	ldr	x2, [sp, #112]
    b434:	mov	w1, #0xb0a                 	// #2826
    b438:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b43c:	add	x0, x0, #0x9c0
    b440:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b444:	mov	x0, #0x0                   	// #0
    b448:	b	b450 <PyFloat_FromString@plt+0x4900>
    b44c:	ldr	x0, [sp, #112]
    b450:	ldp	x29, x30, [sp], #144
    b454:	ret
    b458:	stp	x29, x30, [sp, #-48]!
    b45c:	mov	x29, sp
    b460:	str	x0, [sp, #24]
    b464:	str	x1, [sp, #16]
    b468:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    b46c:	add	x1, x0, #0x58
    b470:	ldr	x0, [sp, #24]
    b474:	bl	6630 <PyObject_GetAttrString@plt>
    b478:	str	x0, [sp, #40]
    b47c:	ldr	x0, [sp, #40]
    b480:	cmp	x0, #0x0
    b484:	b.ne	b490 <PyFloat_FromString@plt+0x4940>  // b.any
    b488:	mov	x0, #0x0                   	// #0
    b48c:	b	b4c0 <PyFloat_FromString@plt+0x4970>
    b490:	ldr	x2, [sp, #16]
    b494:	ldr	x1, [sp, #40]
    b498:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b49c:	add	x0, x0, #0x360
    b4a0:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    b4a4:	str	x0, [sp, #32]
    b4a8:	ldr	x2, [sp, #40]
    b4ac:	mov	w1, #0xb1c                 	// #2844
    b4b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b4b4:	add	x0, x0, #0x9c0
    b4b8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b4bc:	ldr	x0, [sp, #32]
    b4c0:	ldp	x29, x30, [sp], #48
    b4c4:	ret
    b4c8:	stp	x29, x30, [sp, #-112]!
    b4cc:	mov	x29, sp
    b4d0:	str	x0, [sp, #56]
    b4d4:	str	x1, [sp, #48]
    b4d8:	str	x2, [sp, #40]
    b4dc:	str	x3, [sp, #32]
    b4e0:	str	w4, [sp, #28]
    b4e4:	str	x5, [sp, #16]
    b4e8:	ldr	x0, [sp, #16]
    b4ec:	add	x0, x0, #0x10
    b4f0:	str	x0, [sp, #104]
    b4f4:	ldr	x0, [sp, #56]
    b4f8:	ldr	x1, [sp, #40]
    b4fc:	str	x1, [x0]
    b500:	ldr	x0, [sp, #32]
    b504:	ldr	x1, [x0, #8]
    b508:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b50c:	add	x0, x0, #0x360
    b510:	cmp	x1, x0
    b514:	b.eq	b538 <PyFloat_FromString@plt+0x49e8>  // b.none
    b518:	ldr	x0, [sp, #32]
    b51c:	ldr	x2, [x0, #8]
    b520:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b524:	add	x1, x0, #0x360
    b528:	mov	x0, x2
    b52c:	bl	6a70 <PyType_IsSubtype@plt>
    b530:	cmp	w0, #0x0
    b534:	b.eq	b550 <PyFloat_FromString@plt+0x4a00>  // b.none
    b538:	ldr	x0, [sp, #32]
    b53c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b540:	ldr	x0, [sp, #48]
    b544:	ldr	x1, [sp, #32]
    b548:	str	x1, [x0]
    b54c:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b550:	ldr	x0, [sp, #32]
    b554:	ldr	x0, [x0, #8]
    b558:	ldr	x0, [x0, #168]
    b55c:	and	x0, x0, #0x1000000
    b560:	cmp	x0, #0x0
    b564:	b.eq	b58c <PyFloat_FromString@plt+0x4a3c>  // b.none
    b568:	ldr	x2, [sp, #16]
    b56c:	ldr	x1, [sp, #32]
    b570:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b574:	add	x0, x0, #0x360
    b578:	bl	9b94 <PyFloat_FromString@plt+0x3044>
    b57c:	mov	x1, x0
    b580:	ldr	x0, [sp, #48]
    b584:	str	x1, [x0]
    b588:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b58c:	ldr	x0, [sp, #32]
    b590:	ldr	x1, [x0, #8]
    b594:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b598:	ldr	x0, [x0, #3864]
    b59c:	cmp	x1, x0
    b5a0:	b.eq	b5c4 <PyFloat_FromString@plt+0x4a74>  // b.none
    b5a4:	ldr	x0, [sp, #32]
    b5a8:	ldr	x2, [x0, #8]
    b5ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b5b0:	ldr	x1, [x0, #3864]
    b5b4:	mov	x0, x2
    b5b8:	bl	6a70 <PyType_IsSubtype@plt>
    b5bc:	cmp	w0, #0x0
    b5c0:	b.eq	b634 <PyFloat_FromString@plt+0x4ae4>  // b.none
    b5c4:	ldr	w0, [sp, #28]
    b5c8:	cmp	w0, #0x2
    b5cc:	b.eq	b5fc <PyFloat_FromString@plt+0x4aac>  // b.none
    b5d0:	ldr	w0, [sp, #28]
    b5d4:	cmp	w0, #0x3
    b5d8:	b.eq	b5fc <PyFloat_FromString@plt+0x4aac>  // b.none
    b5dc:	mov	w1, #0x400                 	// #1024
    b5e0:	ldr	x0, [sp, #16]
    b5e4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    b5e8:	cmp	w0, #0x0
    b5ec:	b.eq	b5fc <PyFloat_FromString@plt+0x4aac>  // b.none
    b5f0:	ldr	x0, [sp, #48]
    b5f4:	str	xzr, [x0]
    b5f8:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b5fc:	ldr	x0, [sp, #104]
    b600:	ldr	w0, [x0, #28]
    b604:	orr	w1, w0, #0x400
    b608:	ldr	x0, [sp, #104]
    b60c:	str	w1, [x0, #28]
    b610:	ldr	x2, [sp, #16]
    b614:	ldr	x1, [sp, #32]
    b618:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b61c:	add	x0, x0, #0x360
    b620:	bl	9ca0 <PyFloat_FromString@plt+0x3150>
    b624:	mov	x1, x0
    b628:	ldr	x0, [sp, #48]
    b62c:	str	x1, [x0]
    b630:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b634:	ldr	x0, [sp, #32]
    b638:	ldr	x1, [x0, #8]
    b63c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b640:	ldr	x0, [x0, #3952]
    b644:	cmp	x1, x0
    b648:	b.eq	b66c <PyFloat_FromString@plt+0x4b1c>  // b.none
    b64c:	ldr	x0, [sp, #32]
    b650:	ldr	x2, [x0, #8]
    b654:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b658:	ldr	x1, [x0, #3952]
    b65c:	mov	x0, x2
    b660:	bl	6a70 <PyType_IsSubtype@plt>
    b664:	cmp	w0, #0x0
    b668:	b.eq	b760 <PyFloat_FromString@plt+0x4c10>  // b.none
    b66c:	ldr	w0, [sp, #28]
    b670:	cmp	w0, #0x2
    b674:	b.eq	b684 <PyFloat_FromString@plt+0x4b34>  // b.none
    b678:	ldr	w0, [sp, #28]
    b67c:	cmp	w0, #0x3
    b680:	b.ne	b760 <PyFloat_FromString@plt+0x4c10>  // b.any
    b684:	ldr	x0, [sp, #32]
    b688:	bl	6aa0 <PyComplex_AsCComplex@plt>
    b68c:	fmov	d2, d0
    b690:	fmov	d0, d1
    b694:	str	d2, [sp, #64]
    b698:	str	d0, [sp, #72]
    b69c:	ldr	d1, [sp, #64]
    b6a0:	fmov	d0, #-1.000000000000000000e+00
    b6a4:	fcmp	d1, d0
    b6a8:	b.ne	b6c4 <PyFloat_FromString@plt+0x4b74>  // b.any
    b6ac:	bl	6880 <PyErr_Occurred@plt>
    b6b0:	cmp	x0, #0x0
    b6b4:	b.eq	b6c4 <PyFloat_FromString@plt+0x4b74>  // b.none
    b6b8:	ldr	x0, [sp, #48]
    b6bc:	str	xzr, [x0]
    b6c0:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b6c4:	ldr	d0, [sp, #72]
    b6c8:	fcmp	d0, #0.0
    b6cc:	b.ne	b740 <PyFloat_FromString@plt+0x4bf0>  // b.any
    b6d0:	ldr	d0, [sp, #64]
    b6d4:	bl	6750 <PyFloat_FromDouble@plt>
    b6d8:	str	x0, [sp, #96]
    b6dc:	ldr	x0, [sp, #96]
    b6e0:	cmp	x0, #0x0
    b6e4:	b.ne	b6f4 <PyFloat_FromString@plt+0x4ba4>  // b.any
    b6e8:	ldr	x0, [sp, #48]
    b6ec:	str	xzr, [x0]
    b6f0:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b6f4:	ldr	x0, [sp, #104]
    b6f8:	ldr	w0, [x0, #28]
    b6fc:	orr	w1, w0, #0x400
    b700:	ldr	x0, [sp, #104]
    b704:	str	w1, [x0, #28]
    b708:	ldr	x2, [sp, #16]
    b70c:	ldr	x1, [sp, #96]
    b710:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    b714:	add	x0, x0, #0x360
    b718:	bl	9ca0 <PyFloat_FromString@plt+0x3150>
    b71c:	mov	x1, x0
    b720:	ldr	x0, [sp, #48]
    b724:	str	x1, [x0]
    b728:	ldr	x2, [sp, #96]
    b72c:	mov	w1, #0xb4b                 	// #2891
    b730:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b734:	add	x0, x0, #0x9c0
    b738:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b73c:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b740:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b744:	ldr	x0, [x0, #3912]
    b748:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b74c:	ldr	x0, [sp, #48]
    b750:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
    b754:	ldr	x1, [x1, #3912]
    b758:	str	x1, [x0]
    b75c:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b760:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    b764:	add	x0, x0, #0x7b8
    b768:	ldr	x0, [x0]
    b76c:	mov	x1, x0
    b770:	ldr	x0, [sp, #32]
    b774:	bl	6700 <PyObject_IsInstance@plt>
    b778:	str	w0, [sp, #92]
    b77c:	ldr	w0, [sp, #92]
    b780:	cmp	w0, #0x0
    b784:	b.ge	b794 <PyFloat_FromString@plt+0x4c44>  // b.tcont
    b788:	ldr	x0, [sp, #48]
    b78c:	str	xzr, [x0]
    b790:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b794:	ldr	w0, [sp, #92]
    b798:	cmp	w0, #0x0
    b79c:	b.le	b840 <PyFloat_FromString@plt+0x4cf0>
    b7a0:	ldr	x1, [sp, #16]
    b7a4:	ldr	x0, [sp, #32]
    b7a8:	bl	b458 <PyFloat_FromString@plt+0x4908>
    b7ac:	mov	x1, x0
    b7b0:	ldr	x0, [sp, #48]
    b7b4:	str	x1, [x0]
    b7b8:	ldr	x0, [sp, #48]
    b7bc:	ldr	x0, [x0]
    b7c0:	cmp	x0, #0x0
    b7c4:	b.eq	b85c <PyFloat_FromString@plt+0x4d0c>  // b.none
    b7c8:	ldr	x0, [sp, #40]
    b7cc:	add	x0, x0, #0x18
    b7d0:	bl	25438 <PyInit__decimal@@Base+0xd760>
    b7d4:	cmp	w0, #0x0
    b7d8:	b.ne	b85c <PyFloat_FromString@plt+0x4d0c>  // b.any
    b7dc:	ldr	x2, [sp, #16]
    b7e0:	ldr	x1, [sp, #32]
    b7e4:	ldr	x0, [sp, #40]
    b7e8:	bl	b290 <PyFloat_FromString@plt+0x4740>
    b7ec:	mov	x1, x0
    b7f0:	ldr	x0, [sp, #56]
    b7f4:	str	x1, [x0]
    b7f8:	ldr	x0, [sp, #56]
    b7fc:	ldr	x0, [x0]
    b800:	cmp	x0, #0x0
    b804:	b.ne	b85c <PyFloat_FromString@plt+0x4d0c>  // b.any
    b808:	ldr	x0, [sp, #48]
    b80c:	ldr	x0, [x0]
    b810:	str	x0, [sp, #80]
    b814:	ldr	x0, [sp, #80]
    b818:	cmp	x0, #0x0
    b81c:	b.eq	b85c <PyFloat_FromString@plt+0x4d0c>  // b.none
    b820:	ldr	x0, [sp, #48]
    b824:	str	xzr, [x0]
    b828:	ldr	x2, [sp, #80]
    b82c:	mov	w1, #0xb5d                 	// #2909
    b830:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b834:	add	x0, x0, #0x9c0
    b838:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b83c:	b	b85c <PyFloat_FromString@plt+0x4d0c>
    b840:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b844:	ldr	x0, [x0, #3912]
    b848:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b84c:	ldr	x0, [sp, #48]
    b850:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
    b854:	ldr	x1, [x1, #3912]
    b858:	str	x1, [x0]
    b85c:	ldr	x0, [sp, #48]
    b860:	ldr	x0, [x0]
    b864:	cmp	x0, #0x0
    b868:	b.eq	b884 <PyFloat_FromString@plt+0x4d34>  // b.none
    b86c:	ldr	x0, [sp, #48]
    b870:	ldr	x1, [x0]
    b874:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    b878:	ldr	x0, [x0, #3912]
    b87c:	cmp	x1, x0
    b880:	b.ne	b88c <PyFloat_FromString@plt+0x4d3c>  // b.any
    b884:	mov	w0, #0x0                   	// #0
    b888:	b	b8ac <PyFloat_FromString@plt+0x4d5c>
    b88c:	ldr	x0, [sp, #56]
    b890:	ldr	x0, [x0]
    b894:	ldr	x1, [sp, #40]
    b898:	cmp	x1, x0
    b89c:	b.ne	b8a8 <PyFloat_FromString@plt+0x4d58>  // b.any
    b8a0:	ldr	x0, [sp, #40]
    b8a4:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
    b8a8:	mov	w0, #0x1                   	// #1
    b8ac:	ldp	x29, x30, [sp], #112
    b8b0:	ret
    b8b4:	stp	x29, x30, [sp, #-48]!
    b8b8:	mov	x29, sp
    b8bc:	str	x0, [sp, #24]
    b8c0:	str	x1, [sp, #16]
    b8c4:	mov	w1, #0x7f                  	// #127
    b8c8:	ldr	x0, [sp, #16]
    b8cc:	bl	6b10 <PyUnicode_New@plt>
    b8d0:	str	x0, [sp, #40]
    b8d4:	ldr	x0, [sp, #40]
    b8d8:	cmp	x0, #0x0
    b8dc:	b.ne	b8e8 <PyFloat_FromString@plt+0x4d98>  // b.any
    b8e0:	mov	x0, #0x0                   	// #0
    b8e4:	b	b94c <PyFloat_FromString@plt+0x4dfc>
    b8e8:	ldr	x0, [sp, #40]
    b8ec:	ldrb	w0, [x0, #32]
    b8f0:	and	w0, w0, #0x20
    b8f4:	and	w0, w0, #0xff
    b8f8:	cmp	w0, #0x0
    b8fc:	b.eq	b930 <PyFloat_FromString@plt+0x4de0>  // b.none
    b900:	ldr	x0, [sp, #40]
    b904:	ldrb	w0, [x0, #32]
    b908:	and	w0, w0, #0x40
    b90c:	and	w0, w0, #0xff
    b910:	cmp	w0, #0x0
    b914:	b.eq	b924 <PyFloat_FromString@plt+0x4dd4>  // b.none
    b918:	ldr	x0, [sp, #40]
    b91c:	add	x0, x0, #0x30
    b920:	b	b938 <PyFloat_FromString@plt+0x4de8>
    b924:	ldr	x0, [sp, #40]
    b928:	add	x0, x0, #0x48
    b92c:	b	b938 <PyFloat_FromString@plt+0x4de8>
    b930:	ldr	x0, [sp, #40]
    b934:	ldr	x0, [x0, #72]
    b938:	ldr	x1, [sp, #16]
    b93c:	mov	x2, x1
    b940:	ldr	x1, [sp, #24]
    b944:	bl	6510 <memcpy@plt>
    b948:	ldr	x0, [sp, #40]
    b94c:	ldp	x29, x30, [sp], #48
    b950:	ret
    b954:	stp	x29, x30, [sp, #-64]!
    b958:	mov	x29, sp
    b95c:	str	x0, [sp, #24]
    b960:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    b964:	str	x0, [sp, #56]
    b968:	ldr	x0, [sp, #56]
    b96c:	cmp	x0, #0x0
    b970:	b.ne	b97c <PyFloat_FromString@plt+0x4e2c>  // b.any
    b974:	mov	x0, #0x0                   	// #0
    b978:	b	b9ec <PyFloat_FromString@plt+0x4e9c>
    b97c:	ldr	x2, [sp, #56]
    b980:	mov	w1, #0xb91                 	// #2961
    b984:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    b988:	add	x0, x0, #0x9c0
    b98c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    b990:	ldr	x0, [sp, #24]
    b994:	add	x1, x0, #0x18
    b998:	ldr	x0, [sp, #56]
    b99c:	ldr	w2, [x0, #80]
    b9a0:	add	x0, sp, #0x20
    b9a4:	bl	21380 <PyInit__decimal@@Base+0x96a8>
    b9a8:	str	x0, [sp, #48]
    b9ac:	ldr	x0, [sp, #48]
    b9b0:	cmp	x0, #0x0
    b9b4:	b.ge	b9c4 <PyFloat_FromString@plt+0x4e74>  // b.tcont
    b9b8:	bl	6690 <PyErr_NoMemory@plt>
    b9bc:	mov	x0, #0x0                   	// #0
    b9c0:	b	b9ec <PyFloat_FromString@plt+0x4e9c>
    b9c4:	ldr	x0, [sp, #32]
    b9c8:	ldr	x1, [sp, #48]
    b9cc:	bl	b8b4 <PyFloat_FromString@plt+0x4d64>
    b9d0:	str	x0, [sp, #40]
    b9d4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    b9d8:	add	x0, x0, #0x6f8
    b9dc:	ldr	x1, [x0]
    b9e0:	ldr	x0, [sp, #32]
    b9e4:	blr	x1
    b9e8:	ldr	x0, [sp, #40]
    b9ec:	ldp	x29, x30, [sp], #64
    b9f0:	ret
    b9f4:	stp	x29, x30, [sp, #-64]!
    b9f8:	mov	x29, sp
    b9fc:	str	x0, [sp, #24]
    ba00:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    ba04:	str	x0, [sp, #56]
    ba08:	ldr	x0, [sp, #56]
    ba0c:	cmp	x0, #0x0
    ba10:	b.ne	ba1c <PyFloat_FromString@plt+0x4ecc>  // b.any
    ba14:	mov	x0, #0x0                   	// #0
    ba18:	b	ba94 <PyFloat_FromString@plt+0x4f44>
    ba1c:	ldr	x2, [sp, #56]
    ba20:	mov	w1, #0xba4                 	// #2980
    ba24:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ba28:	add	x0, x0, #0x9c0
    ba2c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ba30:	ldr	x0, [sp, #24]
    ba34:	add	x2, x0, #0x18
    ba38:	ldr	x0, [sp, #56]
    ba3c:	ldr	w0, [x0, #80]
    ba40:	mov	w1, w0
    ba44:	mov	x0, x2
    ba48:	bl	212d0 <PyInit__decimal@@Base+0x95f8>
    ba4c:	str	x0, [sp, #48]
    ba50:	ldr	x0, [sp, #48]
    ba54:	cmp	x0, #0x0
    ba58:	b.ne	ba68 <PyFloat_FromString@plt+0x4f18>  // b.any
    ba5c:	bl	6690 <PyErr_NoMemory@plt>
    ba60:	mov	x0, #0x0                   	// #0
    ba64:	b	ba94 <PyFloat_FromString@plt+0x4f44>
    ba68:	ldr	x1, [sp, #48]
    ba6c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    ba70:	add	x0, x0, #0x68
    ba74:	bl	6520 <PyUnicode_FromFormat@plt>
    ba78:	str	x0, [sp, #40]
    ba7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    ba80:	add	x0, x0, #0x6f8
    ba84:	ldr	x1, [x0]
    ba88:	ldr	x0, [sp, #48]
    ba8c:	blr	x1
    ba90:	ldr	x0, [sp, #40]
    ba94:	ldp	x29, x30, [sp], #64
    ba98:	ret
    ba9c:	stp	x29, x30, [sp, #-48]!
    baa0:	mov	x29, sp
    baa4:	str	x0, [sp, #24]
    baa8:	str	x1, [sp, #16]
    baac:	ldr	x0, [sp, #16]
    bab0:	add	x0, x0, #0x1
    bab4:	bl	6b00 <PyMem_Malloc@plt>
    bab8:	str	x0, [sp, #40]
    babc:	ldr	x0, [sp, #40]
    bac0:	cmp	x0, #0x0
    bac4:	b.ne	bad4 <PyFloat_FromString@plt+0x4f84>  // b.any
    bac8:	bl	6690 <PyErr_NoMemory@plt>
    bacc:	mov	x0, #0x0                   	// #0
    bad0:	b	bafc <PyFloat_FromString@plt+0x4fac>
    bad4:	ldr	x0, [sp, #16]
    bad8:	mov	x2, x0
    badc:	ldr	x1, [sp, #24]
    bae0:	ldr	x0, [sp, #40]
    bae4:	bl	6510 <memcpy@plt>
    bae8:	ldr	x0, [sp, #16]
    baec:	ldr	x1, [sp, #40]
    baf0:	add	x0, x1, x0
    baf4:	strb	wzr, [x0]
    baf8:	ldr	x0, [sp, #40]
    bafc:	ldp	x29, x30, [sp], #48
    bb00:	ret
    bb04:	sub	sp, sp, #0x10
    bb08:	str	x0, [sp, #8]
    bb0c:	b	bb34 <PyFloat_FromString@plt+0x4fe4>
    bb10:	ldr	x0, [sp, #8]
    bb14:	ldrb	w0, [x0]
    bb18:	cmp	w0, #0xff
    bb1c:	b.ne	bb28 <PyFloat_FromString@plt+0x4fd8>  // b.any
    bb20:	ldr	x0, [sp, #8]
    bb24:	strb	wzr, [x0]
    bb28:	ldr	x0, [sp, #8]
    bb2c:	add	x0, x0, #0x1
    bb30:	str	x0, [sp, #8]
    bb34:	ldr	x0, [sp, #8]
    bb38:	ldrb	w0, [x0]
    bb3c:	cmp	w0, #0x0
    bb40:	b.ne	bb10 <PyFloat_FromString@plt+0x4fc0>  // b.any
    bb44:	nop
    bb48:	nop
    bb4c:	add	sp, sp, #0x10
    bb50:	ret
    bb54:	stp	x29, x30, [sp, #-64]!
    bb58:	mov	x29, sp
    bb5c:	str	x0, [sp, #24]
    bb60:	add	x0, sp, #0x20
    bb64:	mov	x2, #0x2                   	// #2
    bb68:	ldr	x1, [sp, #24]
    bb6c:	bl	65a0 <mbstowcs@plt>
    bb70:	str	x0, [sp, #56]
    bb74:	ldr	x0, [sp, #56]
    bb78:	cmp	x0, #0x1
    bb7c:	b.eq	bba4 <PyFloat_FromString@plt+0x5054>  // b.none
    bb80:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bb84:	ldr	x0, [x0, #3928]
    bb88:	ldr	x2, [x0]
    bb8c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bb90:	add	x1, x0, #0x78
    bb94:	mov	x0, x2
    bb98:	bl	66f0 <PyErr_SetString@plt>
    bb9c:	mov	x0, #0x0                   	// #0
    bba0:	b	bbec <PyFloat_FromString@plt+0x509c>
    bba4:	ldr	x1, [sp, #56]
    bba8:	add	x0, sp, #0x20
    bbac:	bl	6620 <PyUnicode_FromWideChar@plt>
    bbb0:	str	x0, [sp, #48]
    bbb4:	ldr	x0, [sp, #48]
    bbb8:	cmp	x0, #0x0
    bbbc:	b.ne	bbc8 <PyFloat_FromString@plt+0x5078>  // b.any
    bbc0:	mov	x0, #0x0                   	// #0
    bbc4:	b	bbec <PyFloat_FromString@plt+0x509c>
    bbc8:	ldr	x0, [sp, #48]
    bbcc:	bl	6670 <PyUnicode_AsUTF8String@plt>
    bbd0:	str	x0, [sp, #40]
    bbd4:	ldr	x2, [sp, #48]
    bbd8:	mov	w1, #0xbde                 	// #3038
    bbdc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    bbe0:	add	x0, x0, #0x9c0
    bbe4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    bbe8:	ldr	x0, [sp, #40]
    bbec:	ldp	x29, x30, [sp], #64
    bbf0:	ret
    bbf4:	stp	x29, x30, [sp, #-192]!
    bbf8:	mov	x29, sp
    bbfc:	str	x0, [sp, #24]
    bc00:	str	x1, [sp, #16]
    bc04:	str	xzr, [sp, #184]
    bc08:	str	xzr, [sp, #112]
    bc0c:	str	xzr, [sp, #176]
    bc10:	str	xzr, [sp, #168]
    bc14:	str	xzr, [sp, #160]
    bc18:	str	xzr, [sp, #144]
    bc1c:	str	wzr, [sp, #52]
    bc20:	str	wzr, [sp, #140]
    bc24:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    bc28:	str	x0, [sp, #128]
    bc2c:	ldr	x0, [sp, #128]
    bc30:	cmp	x0, #0x0
    bc34:	b.ne	bc40 <PyFloat_FromString@plt+0x50f0>  // b.any
    bc38:	mov	x0, #0x0                   	// #0
    bc3c:	b	c0c0 <PyFloat_FromString@plt+0x5570>
    bc40:	ldr	x2, [sp, #128]
    bc44:	mov	w1, #0xbf5                 	// #3061
    bc48:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    bc4c:	add	x0, x0, #0x9c0
    bc50:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    bc54:	add	x1, sp, #0x70
    bc58:	add	x0, sp, #0x68
    bc5c:	mov	x3, x1
    bc60:	mov	x2, x0
    bc64:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bc68:	add	x1, x0, #0xc8
    bc6c:	ldr	x0, [sp, #16]
    bc70:	bl	6980 <PyArg_ParseTuple@plt>
    bc74:	cmp	w0, #0x0
    bc78:	b.ne	bc84 <PyFloat_FromString@plt+0x5134>  // b.any
    bc7c:	mov	x0, #0x0                   	// #0
    bc80:	b	c0c0 <PyFloat_FromString@plt+0x5570>
    bc84:	ldr	x0, [sp, #104]
    bc88:	ldr	x0, [x0, #8]
    bc8c:	ldr	x0, [x0, #168]
    bc90:	and	x0, x0, #0x10000000
    bc94:	cmp	x0, #0x0
    bc98:	b.eq	bd1c <PyFloat_FromString@plt+0x51cc>  // b.none
    bc9c:	ldr	x0, [sp, #104]
    bca0:	add	x1, sp, #0x28
    bca4:	bl	6a80 <PyUnicode_AsUTF8AndSize@plt>
    bca8:	str	x0, [sp, #152]
    bcac:	ldr	x0, [sp, #152]
    bcb0:	cmp	x0, #0x0
    bcb4:	b.ne	bcc0 <PyFloat_FromString@plt+0x5170>  // b.any
    bcb8:	mov	x0, #0x0                   	// #0
    bcbc:	b	c0c0 <PyFloat_FromString@plt+0x5570>
    bcc0:	ldr	x0, [sp, #40]
    bcc4:	cmp	x0, #0x0
    bcc8:	b.le	bd40 <PyFloat_FromString@plt+0x51f0>
    bccc:	ldr	x0, [sp, #152]
    bcd0:	ldrb	w0, [x0]
    bcd4:	cmp	w0, #0x0
    bcd8:	b.ne	bd40 <PyFloat_FromString@plt+0x51f0>  // b.any
    bcdc:	mov	w0, #0x1                   	// #1
    bce0:	str	w0, [sp, #140]
    bce4:	ldr	x0, [sp, #40]
    bce8:	mov	x1, x0
    bcec:	ldr	x0, [sp, #152]
    bcf0:	bl	ba9c <PyFloat_FromString@plt+0x4f4c>
    bcf4:	str	x0, [sp, #152]
    bcf8:	ldr	x0, [sp, #152]
    bcfc:	cmp	x0, #0x0
    bd00:	b.ne	bd0c <PyFloat_FromString@plt+0x51bc>  // b.any
    bd04:	mov	x0, #0x0                   	// #0
    bd08:	b	c0c0 <PyFloat_FromString@plt+0x5570>
    bd0c:	ldr	x0, [sp, #152]
    bd10:	mov	w1, #0x5f                  	// #95
    bd14:	strb	w1, [x0]
    bd18:	b	bd40 <PyFloat_FromString@plt+0x51f0>
    bd1c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bd20:	ldr	x0, [x0, #3936]
    bd24:	ldr	x2, [x0]
    bd28:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bd2c:	add	x1, x0, #0xd0
    bd30:	mov	x0, x2
    bd34:	bl	66f0 <PyErr_SetString@plt>
    bd38:	mov	x0, #0x0                   	// #0
    bd3c:	b	c0c0 <PyFloat_FromString@plt+0x5570>
    bd40:	ldr	x0, [sp, #128]
    bd44:	ldr	w1, [x0, #80]
    bd48:	add	x0, sp, #0x38
    bd4c:	mov	w2, w1
    bd50:	ldr	x1, [sp, #152]
    bd54:	bl	21774 <PyInit__decimal@@Base+0x9a9c>
    bd58:	cmp	w0, #0x0
    bd5c:	b.ne	bd80 <PyFloat_FromString@plt+0x5230>  // b.any
    bd60:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bd64:	ldr	x0, [x0, #3928]
    bd68:	ldr	x2, [x0]
    bd6c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bd70:	add	x1, x0, #0xe8
    bd74:	mov	x0, x2
    bd78:	bl	66f0 <PyErr_SetString@plt>
    bd7c:	b	c070 <PyFloat_FromString@plt+0x5520>
    bd80:	ldr	w0, [sp, #140]
    bd84:	cmp	w0, #0x0
    bd88:	b.eq	bd98 <PyFloat_FromString@plt+0x5248>  // b.none
    bd8c:	mov	w0, #0xffffffff            	// #-1
    bd90:	strb	w0, [sp, #75]
    bd94:	strb	wzr, [sp, #76]
    bd98:	ldr	x0, [sp, #112]
    bd9c:	cmp	x0, #0x0
    bda0:	b.eq	bee4 <PyFloat_FromString@plt+0x5394>  // b.none
    bda4:	ldr	x0, [sp, #112]
    bda8:	ldr	x0, [x0, #8]
    bdac:	ldr	x0, [x0, #168]
    bdb0:	and	x0, x0, #0x20000000
    bdb4:	cmp	x0, #0x0
    bdb8:	b.ne	bddc <PyFloat_FromString@plt+0x528c>  // b.any
    bdbc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bdc0:	ldr	x0, [x0, #3936]
    bdc4:	ldr	x2, [x0]
    bdc8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bdcc:	add	x1, x0, #0x100
    bdd0:	mov	x0, x2
    bdd4:	bl	66f0 <PyErr_SetString@plt>
    bdd8:	b	c070 <PyFloat_FromString@plt+0x5520>
    bddc:	ldr	x2, [sp, #112]
    bde0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bde4:	add	x1, x0, #0x128
    bde8:	mov	x0, x2
    bdec:	bl	6910 <PyDict_GetItemString@plt>
    bdf0:	str	x0, [sp, #176]
    bdf4:	ldr	x0, [sp, #176]
    bdf8:	cmp	x0, #0x0
    bdfc:	b.eq	be24 <PyFloat_FromString@plt+0x52d4>  // b.none
    be00:	ldr	x0, [sp, #176]
    be04:	bl	6670 <PyUnicode_AsUTF8String@plt>
    be08:	str	x0, [sp, #176]
    be0c:	ldr	x0, [sp, #176]
    be10:	cmp	x0, #0x0
    be14:	b.eq	c04c <PyFloat_FromString@plt+0x54fc>  // b.none
    be18:	ldr	x0, [sp, #176]
    be1c:	add	x0, x0, #0x20
    be20:	str	x0, [sp, #80]
    be24:	ldr	x2, [sp, #112]
    be28:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    be2c:	add	x1, x0, #0x138
    be30:	mov	x0, x2
    be34:	bl	6910 <PyDict_GetItemString@plt>
    be38:	str	x0, [sp, #168]
    be3c:	ldr	x0, [sp, #168]
    be40:	cmp	x0, #0x0
    be44:	b.eq	be6c <PyFloat_FromString@plt+0x531c>  // b.none
    be48:	ldr	x0, [sp, #168]
    be4c:	bl	6670 <PyUnicode_AsUTF8String@plt>
    be50:	str	x0, [sp, #168]
    be54:	ldr	x0, [sp, #168]
    be58:	cmp	x0, #0x0
    be5c:	b.eq	c054 <PyFloat_FromString@plt+0x5504>  // b.none
    be60:	ldr	x0, [sp, #168]
    be64:	add	x0, x0, #0x20
    be68:	str	x0, [sp, #88]
    be6c:	ldr	x2, [sp, #112]
    be70:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    be74:	add	x1, x0, #0x148
    be78:	mov	x0, x2
    be7c:	bl	6910 <PyDict_GetItemString@plt>
    be80:	str	x0, [sp, #160]
    be84:	ldr	x0, [sp, #160]
    be88:	cmp	x0, #0x0
    be8c:	b.eq	beb4 <PyFloat_FromString@plt+0x5364>  // b.none
    be90:	ldr	x0, [sp, #160]
    be94:	bl	6670 <PyUnicode_AsUTF8String@plt>
    be98:	str	x0, [sp, #160]
    be9c:	ldr	x0, [sp, #160]
    bea0:	cmp	x0, #0x0
    bea4:	b.eq	c05c <PyFloat_FromString@plt+0x550c>  // b.none
    bea8:	ldr	x0, [sp, #160]
    beac:	add	x0, x0, #0x20
    beb0:	str	x0, [sp, #96]
    beb4:	add	x0, sp, #0x38
    beb8:	bl	21710 <PyInit__decimal@@Base+0x9a38>
    bebc:	cmp	w0, #0x0
    bec0:	b.ge	bf9c <PyFloat_FromString@plt+0x544c>  // b.tcont
    bec4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bec8:	ldr	x0, [x0, #3928]
    becc:	ldr	x2, [x0]
    bed0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    bed4:	add	x1, x0, #0x158
    bed8:	mov	x0, x2
    bedc:	bl	66f0 <PyErr_SetString@plt>
    bee0:	b	c070 <PyFloat_FromString@plt+0x5520>
    bee4:	ldr	x0, [sp, #80]
    bee8:	bl	6570 <strlen@plt>
    beec:	str	x0, [sp, #120]
    bef0:	ldr	x0, [sp, #120]
    bef4:	cmp	x0, #0x1
    bef8:	b.hi	bf1c <PyFloat_FromString@plt+0x53cc>  // b.pmore
    befc:	ldr	x0, [sp, #120]
    bf00:	cmp	x0, #0x1
    bf04:	b.ne	bf40 <PyFloat_FromString@plt+0x53f0>  // b.any
    bf08:	ldr	x0, [sp, #80]
    bf0c:	ldrb	w0, [x0]
    bf10:	and	w0, w0, #0xffffff80
    bf14:	cmp	w0, #0x0
    bf18:	b.eq	bf40 <PyFloat_FromString@plt+0x53f0>  // b.none
    bf1c:	ldr	x0, [sp, #80]
    bf20:	bl	bb54 <PyFloat_FromString@plt+0x5004>
    bf24:	str	x0, [sp, #176]
    bf28:	ldr	x0, [sp, #176]
    bf2c:	cmp	x0, #0x0
    bf30:	b.eq	c064 <PyFloat_FromString@plt+0x5514>  // b.none
    bf34:	ldr	x0, [sp, #176]
    bf38:	add	x0, x0, #0x20
    bf3c:	str	x0, [sp, #80]
    bf40:	ldr	x0, [sp, #88]
    bf44:	bl	6570 <strlen@plt>
    bf48:	str	x0, [sp, #120]
    bf4c:	ldr	x0, [sp, #120]
    bf50:	cmp	x0, #0x1
    bf54:	b.hi	bf78 <PyFloat_FromString@plt+0x5428>  // b.pmore
    bf58:	ldr	x0, [sp, #120]
    bf5c:	cmp	x0, #0x1
    bf60:	b.ne	bf9c <PyFloat_FromString@plt+0x544c>  // b.any
    bf64:	ldr	x0, [sp, #88]
    bf68:	ldrb	w0, [x0]
    bf6c:	and	w0, w0, #0xffffff80
    bf70:	cmp	w0, #0x0
    bf74:	b.eq	bf9c <PyFloat_FromString@plt+0x544c>  // b.none
    bf78:	ldr	x0, [sp, #88]
    bf7c:	bl	bb54 <PyFloat_FromString@plt+0x5004>
    bf80:	str	x0, [sp, #168]
    bf84:	ldr	x0, [sp, #168]
    bf88:	cmp	x0, #0x0
    bf8c:	b.eq	c06c <PyFloat_FromString@plt+0x551c>  // b.none
    bf90:	ldr	x0, [sp, #168]
    bf94:	add	x0, x0, #0x20
    bf98:	str	x0, [sp, #88]
    bf9c:	ldr	x0, [sp, #24]
    bfa0:	add	x4, x0, #0x18
    bfa4:	ldr	x0, [sp, #128]
    bfa8:	add	x1, x0, #0x10
    bfac:	add	x2, sp, #0x34
    bfb0:	add	x0, sp, #0x38
    bfb4:	mov	x3, x2
    bfb8:	mov	x2, x1
    bfbc:	mov	x1, x0
    bfc0:	mov	x0, x4
    bfc4:	bl	22850 <PyInit__decimal@@Base+0xab78>
    bfc8:	str	x0, [sp, #144]
    bfcc:	ldr	x0, [sp, #144]
    bfd0:	cmp	x0, #0x0
    bfd4:	b.ne	c010 <PyFloat_FromString@plt+0x54c0>  // b.any
    bfd8:	ldr	w0, [sp, #52]
    bfdc:	and	w0, w0, #0x200
    bfe0:	cmp	w0, #0x0
    bfe4:	b.eq	bff0 <PyFloat_FromString@plt+0x54a0>  // b.none
    bfe8:	bl	6690 <PyErr_NoMemory@plt>
    bfec:	b	c070 <PyFloat_FromString@plt+0x5520>
    bff0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    bff4:	ldr	x0, [x0, #3928]
    bff8:	ldr	x2, [x0]
    bffc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c000:	add	x1, x0, #0x170
    c004:	mov	x0, x2
    c008:	bl	66f0 <PyErr_SetString@plt>
    c00c:	b	c070 <PyFloat_FromString@plt+0x5520>
    c010:	ldr	x0, [sp, #144]
    c014:	bl	6570 <strlen@plt>
    c018:	str	x0, [sp, #40]
    c01c:	ldr	w0, [sp, #140]
    c020:	cmp	w0, #0x0
    c024:	b.eq	c030 <PyFloat_FromString@plt+0x54e0>  // b.none
    c028:	ldr	x0, [sp, #144]
    c02c:	bl	bb04 <PyFloat_FromString@plt+0x4fb4>
    c030:	ldr	x0, [sp, #40]
    c034:	mov	x2, #0x0                   	// #0
    c038:	mov	x1, x0
    c03c:	ldr	x0, [sp, #144]
    c040:	bl	6940 <PyUnicode_DecodeUTF8@plt>
    c044:	str	x0, [sp, #184]
    c048:	b	c070 <PyFloat_FromString@plt+0x5520>
    c04c:	nop
    c050:	b	c070 <PyFloat_FromString@plt+0x5520>
    c054:	nop
    c058:	b	c070 <PyFloat_FromString@plt+0x5520>
    c05c:	nop
    c060:	b	c070 <PyFloat_FromString@plt+0x5520>
    c064:	nop
    c068:	b	c070 <PyFloat_FromString@plt+0x5520>
    c06c:	nop
    c070:	ldr	x0, [sp, #160]
    c074:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c078:	ldr	x0, [sp, #168]
    c07c:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c080:	ldr	x0, [sp, #176]
    c084:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c088:	ldr	w0, [sp, #140]
    c08c:	cmp	w0, #0x0
    c090:	b.eq	c09c <PyFloat_FromString@plt+0x554c>  // b.none
    c094:	ldr	x0, [sp, #152]
    c098:	bl	6610 <PyMem_Free@plt>
    c09c:	ldr	x0, [sp, #144]
    c0a0:	cmp	x0, #0x0
    c0a4:	b.eq	c0bc <PyFloat_FromString@plt+0x556c>  // b.none
    c0a8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c0ac:	add	x0, x0, #0x6f8
    c0b0:	ldr	x1, [x0]
    c0b4:	ldr	x0, [sp, #144]
    c0b8:	blr	x1
    c0bc:	ldr	x0, [sp, #184]
    c0c0:	ldp	x29, x30, [sp], #192
    c0c4:	ret
    c0c8:	stp	x29, x30, [sp, #-144]!
    c0cc:	mov	x29, sp
    c0d0:	str	x0, [sp, #40]
    c0d4:	str	x1, [sp, #32]
    c0d8:	str	w2, [sp, #28]
    c0dc:	str	wzr, [sp, #52]
    c0e0:	ldr	x0, [sp, #40]
    c0e4:	add	x0, x0, #0x18
    c0e8:	bl	25438 <PyInit__decimal@@Base+0xd760>
    c0ec:	cmp	w0, #0x0
    c0f0:	b.eq	c14c <PyFloat_FromString@plt+0x55fc>  // b.none
    c0f4:	ldr	x0, [sp, #40]
    c0f8:	add	x0, x0, #0x18
    c0fc:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
    c100:	cmp	w0, #0x0
    c104:	b.eq	c128 <PyFloat_FromString@plt+0x55d8>  // b.none
    c108:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c10c:	ldr	x0, [x0, #3928]
    c110:	ldr	x2, [x0]
    c114:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c118:	add	x1, x0, #0x1b0
    c11c:	mov	x0, x2
    c120:	bl	66f0 <PyErr_SetString@plt>
    c124:	b	c144 <PyFloat_FromString@plt+0x55f4>
    c128:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c12c:	ldr	x0, [x0, #3992]
    c130:	ldr	x2, [x0]
    c134:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c138:	add	x1, x0, #0x1d0
    c13c:	mov	x0, x2
    c140:	bl	66f0 <PyErr_SetString@plt>
    c144:	mov	x0, #0x0                   	// #0
    c148:	b	c32c <PyFloat_FromString@plt+0x57dc>
    c14c:	bl	23730 <PyInit__decimal@@Base+0xba58>
    c150:	str	x0, [sp, #128]
    c154:	ldr	x0, [sp, #128]
    c158:	cmp	x0, #0x0
    c15c:	b.ne	c16c <PyFloat_FromString@plt+0x561c>  // b.any
    c160:	bl	6690 <PyErr_NoMemory@plt>
    c164:	mov	x0, #0x0                   	// #0
    c168:	b	c32c <PyFloat_FromString@plt+0x57dc>
    c16c:	ldr	x0, [sp, #32]
    c170:	add	x1, x0, #0x10
    c174:	add	x0, sp, #0x38
    c178:	ldp	x2, x3, [x1]
    c17c:	stp	x2, x3, [x0]
    c180:	ldp	x2, x3, [x1, #16]
    c184:	stp	x2, x3, [x0, #16]
    c188:	ldp	x2, x3, [x1, #32]
    c18c:	stp	x2, x3, [x0, #32]
    c190:	ldr	w0, [sp, #28]
    c194:	str	w0, [sp, #92]
    c198:	ldr	x0, [sp, #40]
    c19c:	add	x0, x0, #0x18
    c1a0:	add	x2, sp, #0x34
    c1a4:	add	x1, sp, #0x38
    c1a8:	mov	x3, x2
    c1ac:	mov	x2, x1
    c1b0:	mov	x1, x0
    c1b4:	ldr	x0, [sp, #128]
    c1b8:	bl	3b094 <PyInit__decimal@@Base+0x233bc>
    c1bc:	ldr	w0, [sp, #52]
    c1c0:	mov	w1, w0
    c1c4:	ldr	x0, [sp, #32]
    c1c8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    c1cc:	cmp	w0, #0x0
    c1d0:	b.eq	c1e4 <PyFloat_FromString@plt+0x5694>  // b.none
    c1d4:	ldr	x0, [sp, #128]
    c1d8:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    c1dc:	mov	x0, #0x0                   	// #0
    c1e0:	b	c32c <PyFloat_FromString@plt+0x57dc>
    c1e4:	str	wzr, [sp, #52]
    c1e8:	str	xzr, [sp, #104]
    c1ec:	add	x1, sp, #0x34
    c1f0:	add	x0, sp, #0x68
    c1f4:	mov	x4, x1
    c1f8:	ldr	x3, [sp, #128]
    c1fc:	mov	w2, #0x40000000            	// #1073741824
    c200:	mov	x1, #0x0                   	// #0
    c204:	bl	3e460 <PyInit__decimal@@Base+0x26788>
    c208:	str	x0, [sp, #120]
    c20c:	ldr	x0, [sp, #120]
    c210:	cmn	x0, #0x1
    c214:	b.ne	c22c <PyFloat_FromString@plt+0x56dc>  // b.any
    c218:	bl	6690 <PyErr_NoMemory@plt>
    c21c:	ldr	x0, [sp, #128]
    c220:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    c224:	mov	x0, #0x0                   	// #0
    c228:	b	c32c <PyFloat_FromString@plt+0x57dc>
    c22c:	ldr	x0, [sp, #120]
    c230:	bl	6650 <_PyLong_New@plt>
    c234:	str	x0, [sp, #112]
    c238:	ldr	x0, [sp, #112]
    c23c:	cmp	x0, #0x0
    c240:	b.ne	c268 <PyFloat_FromString@plt+0x5718>  // b.any
    c244:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c248:	add	x0, x0, #0x6f8
    c24c:	ldr	x1, [x0]
    c250:	ldr	x0, [sp, #104]
    c254:	blr	x1
    c258:	ldr	x0, [sp, #128]
    c25c:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    c260:	mov	x0, #0x0                   	// #0
    c264:	b	c32c <PyFloat_FromString@plt+0x57dc>
    c268:	ldr	x0, [sp, #112]
    c26c:	add	x3, x0, #0x18
    c270:	ldr	x1, [sp, #104]
    c274:	ldr	x0, [sp, #120]
    c278:	lsl	x0, x0, #2
    c27c:	mov	x2, x0
    c280:	mov	x0, x3
    c284:	bl	6510 <memcpy@plt>
    c288:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c28c:	add	x0, x0, #0x6f8
    c290:	ldr	x1, [x0]
    c294:	ldr	x0, [sp, #104]
    c298:	blr	x1
    c29c:	ldr	x0, [sp, #120]
    c2a0:	str	x0, [sp, #136]
    c2a4:	b	c2b4 <PyFloat_FromString@plt+0x5764>
    c2a8:	ldr	x0, [sp, #136]
    c2ac:	sub	x0, x0, #0x1
    c2b0:	str	x0, [sp, #136]
    c2b4:	ldr	x0, [sp, #136]
    c2b8:	cmp	x0, #0x0
    c2bc:	b.le	c2e4 <PyFloat_FromString@plt+0x5794>
    c2c0:	ldr	x0, [sp, #136]
    c2c4:	sub	x0, x0, #0x1
    c2c8:	ldr	x1, [sp, #112]
    c2cc:	add	x0, x0, #0x4
    c2d0:	lsl	x0, x0, #2
    c2d4:	add	x0, x1, x0
    c2d8:	ldr	w0, [x0, #8]
    c2dc:	cmp	w0, #0x0
    c2e0:	b.eq	c2a8 <PyFloat_FromString@plt+0x5758>  // b.none
    c2e4:	ldr	x0, [sp, #112]
    c2e8:	ldr	x1, [sp, #136]
    c2ec:	str	x1, [x0, #16]
    c2f0:	ldr	x0, [sp, #128]
    c2f4:	bl	253a0 <PyInit__decimal@@Base+0xd6c8>
    c2f8:	cmp	w0, #0x0
    c2fc:	b.eq	c320 <PyFloat_FromString@plt+0x57d0>  // b.none
    c300:	ldr	x0, [sp, #128]
    c304:	bl	25454 <PyInit__decimal@@Base+0xd77c>
    c308:	cmp	w0, #0x0
    c30c:	b.ne	c320 <PyFloat_FromString@plt+0x57d0>  // b.any
    c310:	ldr	x0, [sp, #136]
    c314:	neg	x1, x0
    c318:	ldr	x0, [sp, #112]
    c31c:	str	x1, [x0, #16]
    c320:	ldr	x0, [sp, #128]
    c324:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    c328:	ldr	x0, [sp, #112]
    c32c:	ldp	x29, x30, [sp], #144
    c330:	ret
    c334:	stp	x29, x30, [sp, #-128]!
    c338:	mov	x29, sp
    c33c:	str	x0, [sp, #24]
    c340:	str	x1, [sp, #16]
    c344:	str	xzr, [sp, #120]
    c348:	str	xzr, [sp, #112]
    c34c:	str	xzr, [sp, #104]
    c350:	str	xzr, [sp, #96]
    c354:	str	wzr, [sp, #36]
    c358:	ldr	x0, [sp, #24]
    c35c:	add	x0, x0, #0x18
    c360:	bl	25438 <PyInit__decimal@@Base+0xd760>
    c364:	cmp	w0, #0x0
    c368:	b.eq	c3c4 <PyFloat_FromString@plt+0x5874>  // b.none
    c36c:	ldr	x0, [sp, #24]
    c370:	add	x0, x0, #0x18
    c374:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
    c378:	cmp	w0, #0x0
    c37c:	b.eq	c3a0 <PyFloat_FromString@plt+0x5850>  // b.none
    c380:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c384:	ldr	x0, [x0, #3928]
    c388:	ldr	x2, [x0]
    c38c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c390:	add	x1, x0, #0x1f8
    c394:	mov	x0, x2
    c398:	bl	66f0 <PyErr_SetString@plt>
    c39c:	b	c3bc <PyFloat_FromString@plt+0x586c>
    c3a0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c3a4:	ldr	x0, [x0, #3992]
    c3a8:	ldr	x2, [x0]
    c3ac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c3b0:	add	x1, x0, #0x220
    c3b4:	mov	x0, x2
    c3b8:	bl	66f0 <PyErr_SetString@plt>
    c3bc:	mov	x0, #0x0                   	// #0
    c3c0:	b	c6f8 <PyFloat_FromString@plt+0x5ba8>
    c3c4:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    c3c8:	str	x0, [sp, #88]
    c3cc:	ldr	x0, [sp, #88]
    c3d0:	cmp	x0, #0x0
    c3d4:	b.ne	c3e0 <PyFloat_FromString@plt+0x5890>  // b.any
    c3d8:	mov	x0, #0x0                   	// #0
    c3dc:	b	c6f8 <PyFloat_FromString@plt+0x5ba8>
    c3e0:	ldr	x2, [sp, #88]
    c3e4:	mov	w1, #0xcda                 	// #3290
    c3e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c3ec:	add	x0, x0, #0x9c0
    c3f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c3f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c3f8:	add	x0, x0, #0x360
    c3fc:	bl	912c <PyFloat_FromString@plt+0x25dc>
    c400:	str	x0, [sp, #80]
    c404:	ldr	x0, [sp, #80]
    c408:	cmp	x0, #0x0
    c40c:	b.ne	c418 <PyFloat_FromString@plt+0x58c8>  // b.any
    c410:	mov	x0, #0x0                   	// #0
    c414:	b	c6f8 <PyFloat_FromString@plt+0x5ba8>
    c418:	ldr	x0, [sp, #80]
    c41c:	add	x3, x0, #0x18
    c420:	ldr	x0, [sp, #24]
    c424:	add	x0, x0, #0x18
    c428:	add	x1, sp, #0x24
    c42c:	mov	x2, x1
    c430:	mov	x1, x0
    c434:	mov	x0, x3
    c438:	bl	29840 <PyInit__decimal@@Base+0x11b68>
    c43c:	cmp	w0, #0x0
    c440:	b.ne	c464 <PyFloat_FromString@plt+0x5914>  // b.any
    c444:	ldr	x2, [sp, #80]
    c448:	mov	w1, #0xce2                 	// #3298
    c44c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c450:	add	x0, x0, #0x9c0
    c454:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c458:	bl	6690 <PyErr_NoMemory@plt>
    c45c:	mov	x0, #0x0                   	// #0
    c460:	b	c6f8 <PyFloat_FromString@plt+0x5ba8>
    c464:	ldr	x0, [sp, #80]
    c468:	add	x0, x0, #0x18
    c46c:	bl	25454 <PyInit__decimal@@Base+0xd77c>
    c470:	cmp	w0, #0x0
    c474:	b.ne	c484 <PyFloat_FromString@plt+0x5934>  // b.any
    c478:	ldr	x0, [sp, #80]
    c47c:	ldr	x0, [x0, #32]
    c480:	b	c488 <PyFloat_FromString@plt+0x5938>
    c484:	mov	x0, #0x0                   	// #0
    c488:	str	x0, [sp, #72]
    c48c:	ldr	x0, [sp, #80]
    c490:	str	xzr, [x0, #32]
    c494:	mov	w2, #0x3                   	// #3
    c498:	ldr	x1, [sp, #88]
    c49c:	ldr	x0, [sp, #80]
    c4a0:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
    c4a4:	str	x0, [sp, #120]
    c4a8:	ldr	x2, [sp, #80]
    c4ac:	mov	w1, #0xcec                 	// #3308
    c4b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c4b4:	add	x0, x0, #0x9c0
    c4b8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c4bc:	ldr	x0, [sp, #120]
    c4c0:	cmp	x0, #0x0
    c4c4:	b.eq	c6a8 <PyFloat_FromString@plt+0x5b58>  // b.none
    c4c8:	ldr	x0, [sp, #72]
    c4cc:	cmp	x0, #0x0
    c4d0:	cneg	x0, x0, lt  // lt = tstop
    c4d4:	bl	6740 <PyLong_FromSsize_t@plt>
    c4d8:	str	x0, [sp, #104]
    c4dc:	ldr	x0, [sp, #104]
    c4e0:	cmp	x0, #0x0
    c4e4:	b.eq	c6b0 <PyFloat_FromString@plt+0x5b60>  // b.none
    c4e8:	mov	x0, #0xa                   	// #10
    c4ec:	bl	6780 <PyLong_FromLong@plt>
    c4f0:	str	x0, [sp, #80]
    c4f4:	ldr	x0, [sp, #80]
    c4f8:	cmp	x0, #0x0
    c4fc:	b.eq	c6b8 <PyFloat_FromString@plt+0x5b68>  // b.none
    c500:	ldr	x0, [sp, #104]
    c504:	str	x0, [sp, #64]
    c508:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c50c:	add	x0, x0, #0x798
    c510:	ldr	x3, [x0]
    c514:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c518:	ldr	x2, [x0, #4008]
    c51c:	ldr	x1, [sp, #104]
    c520:	ldr	x0, [sp, #80]
    c524:	blr	x3
    c528:	str	x0, [sp, #104]
    c52c:	ldr	x2, [sp, #64]
    c530:	mov	w1, #0xcfb                 	// #3323
    c534:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c538:	add	x0, x0, #0x9c0
    c53c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c540:	ldr	x2, [sp, #80]
    c544:	mov	w1, #0xcfc                 	// #3324
    c548:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c54c:	add	x0, x0, #0x9c0
    c550:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c554:	ldr	x0, [sp, #104]
    c558:	cmp	x0, #0x0
    c55c:	b.eq	c6c0 <PyFloat_FromString@plt+0x5b70>  // b.none
    c560:	ldr	x0, [sp, #72]
    c564:	cmp	x0, #0x0
    c568:	b.lt	c5cc <PyFloat_FromString@plt+0x5a7c>  // b.tstop
    c56c:	ldr	x0, [sp, #120]
    c570:	str	x0, [sp, #40]
    c574:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c578:	add	x0, x0, #0x788
    c57c:	ldr	x2, [x0]
    c580:	ldr	x1, [sp, #104]
    c584:	ldr	x0, [sp, #120]
    c588:	blr	x2
    c58c:	str	x0, [sp, #120]
    c590:	ldr	x2, [sp, #40]
    c594:	mov	w1, #0xd02                 	// #3330
    c598:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c59c:	add	x0, x0, #0x9c0
    c5a0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c5a4:	ldr	x0, [sp, #120]
    c5a8:	cmp	x0, #0x0
    c5ac:	b.eq	c6c8 <PyFloat_FromString@plt+0x5b78>  // b.none
    c5b0:	mov	x0, #0x1                   	// #1
    c5b4:	bl	6780 <PyLong_FromLong@plt>
    c5b8:	str	x0, [sp, #112]
    c5bc:	ldr	x0, [sp, #112]
    c5c0:	cmp	x0, #0x0
    c5c4:	b.ne	c690 <PyFloat_FromString@plt+0x5b40>  // b.any
    c5c8:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c5cc:	ldr	x0, [sp, #104]
    c5d0:	str	x0, [sp, #112]
    c5d4:	str	xzr, [sp, #104]
    c5d8:	ldr	x1, [sp, #112]
    c5dc:	ldr	x0, [sp, #120]
    c5e0:	bl	67a0 <_PyLong_GCD@plt>
    c5e4:	str	x0, [sp, #80]
    c5e8:	ldr	x0, [sp, #80]
    c5ec:	cmp	x0, #0x0
    c5f0:	b.eq	c6d0 <PyFloat_FromString@plt+0x5b80>  // b.none
    c5f4:	ldr	x0, [sp, #120]
    c5f8:	str	x0, [sp, #56]
    c5fc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c600:	add	x0, x0, #0x790
    c604:	ldr	x2, [x0]
    c608:	ldr	x1, [sp, #80]
    c60c:	ldr	x0, [sp, #120]
    c610:	blr	x2
    c614:	str	x0, [sp, #120]
    c618:	ldr	x2, [sp, #56]
    c61c:	mov	w1, #0xd12                 	// #3346
    c620:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c624:	add	x0, x0, #0x9c0
    c628:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c62c:	ldr	x0, [sp, #112]
    c630:	str	x0, [sp, #48]
    c634:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c638:	add	x0, x0, #0x790
    c63c:	ldr	x2, [x0]
    c640:	ldr	x1, [sp, #80]
    c644:	ldr	x0, [sp, #112]
    c648:	blr	x2
    c64c:	str	x0, [sp, #112]
    c650:	ldr	x2, [sp, #48]
    c654:	mov	w1, #0xd13                 	// #3347
    c658:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c65c:	add	x0, x0, #0x9c0
    c660:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c664:	ldr	x2, [sp, #80]
    c668:	mov	w1, #0xd14                 	// #3348
    c66c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c670:	add	x0, x0, #0x9c0
    c674:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c678:	ldr	x0, [sp, #120]
    c67c:	cmp	x0, #0x0
    c680:	b.eq	c6d8 <PyFloat_FromString@plt+0x5b88>  // b.none
    c684:	ldr	x0, [sp, #112]
    c688:	cmp	x0, #0x0
    c68c:	b.eq	c6d8 <PyFloat_FromString@plt+0x5b88>  // b.none
    c690:	ldr	x2, [sp, #112]
    c694:	ldr	x1, [sp, #120]
    c698:	mov	x0, #0x2                   	// #2
    c69c:	bl	6b20 <PyTuple_Pack@plt>
    c6a0:	str	x0, [sp, #96]
    c6a4:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6a8:	nop
    c6ac:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6b0:	nop
    c6b4:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6b8:	nop
    c6bc:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6c0:	nop
    c6c4:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6c8:	nop
    c6cc:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6d0:	nop
    c6d4:	b	c6dc <PyFloat_FromString@plt+0x5b8c>
    c6d8:	nop
    c6dc:	ldr	x0, [sp, #104]
    c6e0:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c6e4:	ldr	x0, [sp, #112]
    c6e8:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c6ec:	ldr	x0, [sp, #120]
    c6f0:	bl	6d64 <PyFloat_FromString@plt+0x214>
    c6f4:	ldr	x0, [sp, #96]
    c6f8:	ldp	x29, x30, [sp], #128
    c6fc:	ret
    c700:	stp	x29, x30, [sp, #-144]!
    c704:	mov	x29, sp
    c708:	str	x0, [sp, #40]
    c70c:	str	x1, [sp, #32]
    c710:	str	x2, [sp, #24]
    c714:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c718:	ldr	x0, [x0, #4008]
    c71c:	str	x0, [sp, #120]
    c720:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c724:	ldr	x0, [x0, #4008]
    c728:	str	x0, [sp, #112]
    c72c:	str	wzr, [sp, #108]
    c730:	add	x1, sp, #0x70
    c734:	add	x0, sp, #0x78
    c738:	mov	x5, x1
    c73c:	mov	x4, x0
    c740:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c744:	add	x3, x0, #0x278
    c748:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c74c:	add	x2, x0, #0x18
    c750:	ldr	x1, [sp, #24]
    c754:	ldr	x0, [sp, #32]
    c758:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    c75c:	cmp	w0, #0x0
    c760:	b.ne	c76c <PyFloat_FromString@plt+0x5c1c>  // b.any
    c764:	mov	x0, #0x0                   	// #0
    c768:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c76c:	ldr	x1, [sp, #112]
    c770:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c774:	ldr	x0, [x0, #4008]
    c778:	cmp	x1, x0
    c77c:	b.ne	c7b8 <PyFloat_FromString@plt+0x5c68>  // b.any
    c780:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    c784:	str	x0, [sp, #112]
    c788:	ldr	x0, [sp, #112]
    c78c:	cmp	x0, #0x0
    c790:	b.ne	c79c <PyFloat_FromString@plt+0x5c4c>  // b.any
    c794:	mov	x0, #0x0                   	// #0
    c798:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c79c:	ldr	x0, [sp, #112]
    c7a0:	mov	x2, x0
    c7a4:	mov	w1, #0xd32                 	// #3378
    c7a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c7ac:	add	x0, x0, #0x9c0
    c7b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c7b4:	b	c814 <PyFloat_FromString@plt+0x5cc4>
    c7b8:	ldr	x0, [sp, #112]
    c7bc:	ldr	x1, [x0, #8]
    c7c0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c7c4:	add	x0, x0, #0x500
    c7c8:	cmp	x1, x0
    c7cc:	b.eq	c814 <PyFloat_FromString@plt+0x5cc4>  // b.none
    c7d0:	ldr	x0, [sp, #112]
    c7d4:	ldr	x2, [x0, #8]
    c7d8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c7dc:	add	x1, x0, #0x500
    c7e0:	mov	x0, x2
    c7e4:	bl	6a70 <PyType_IsSubtype@plt>
    c7e8:	cmp	w0, #0x0
    c7ec:	b.ne	c814 <PyFloat_FromString@plt+0x5cc4>  // b.any
    c7f0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c7f4:	ldr	x0, [x0, #3936]
    c7f8:	ldr	x2, [x0]
    c7fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c800:	add	x1, x0, #0xe00
    c804:	mov	x0, x2
    c808:	bl	66f0 <PyErr_SetString@plt>
    c80c:	mov	x0, #0x0                   	// #0
    c810:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c814:	ldr	x0, [sp, #112]
    c818:	add	x1, x0, #0x10
    c81c:	add	x0, sp, #0x38
    c820:	ldp	x2, x3, [x1]
    c824:	stp	x2, x3, [x0]
    c828:	ldp	x2, x3, [x1, #16]
    c82c:	stp	x2, x3, [x0, #16]
    c830:	ldp	x2, x3, [x1, #32]
    c834:	stp	x2, x3, [x0, #32]
    c838:	ldr	x1, [sp, #120]
    c83c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c840:	ldr	x0, [x0, #4008]
    c844:	cmp	x1, x0
    c848:	b.eq	c890 <PyFloat_FromString@plt+0x5d40>  // b.none
    c84c:	ldr	x0, [sp, #120]
    c850:	bl	751c <PyFloat_FromString@plt+0x9cc>
    c854:	str	w0, [sp, #140]
    c858:	ldr	w0, [sp, #140]
    c85c:	cmp	w0, #0x0
    c860:	b.ge	c86c <PyFloat_FromString@plt+0x5d1c>  // b.tcont
    c864:	mov	x0, #0x0                   	// #0
    c868:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c86c:	add	x0, sp, #0x38
    c870:	ldr	w1, [sp, #140]
    c874:	bl	1baa0 <PyInit__decimal@@Base+0x3dc8>
    c878:	cmp	w0, #0x0
    c87c:	b.ne	c890 <PyFloat_FromString@plt+0x5d40>  // b.any
    c880:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c884:	add	x0, x0, #0x250
    c888:	bl	6e68 <PyFloat_FromString@plt+0x318>
    c88c:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c890:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c894:	add	x0, x0, #0x360
    c898:	bl	912c <PyFloat_FromString@plt+0x25dc>
    c89c:	str	x0, [sp, #128]
    c8a0:	ldr	x0, [sp, #128]
    c8a4:	cmp	x0, #0x0
    c8a8:	b.ne	c8b4 <PyFloat_FromString@plt+0x5d64>  // b.any
    c8ac:	mov	x0, #0x0                   	// #0
    c8b0:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c8b4:	ldr	x0, [sp, #128]
    c8b8:	add	x4, x0, #0x18
    c8bc:	ldr	x0, [sp, #40]
    c8c0:	add	x0, x0, #0x18
    c8c4:	add	x2, sp, #0x6c
    c8c8:	add	x1, sp, #0x38
    c8cc:	mov	x3, x2
    c8d0:	mov	x2, x1
    c8d4:	mov	x1, x0
    c8d8:	mov	x0, x4
    c8dc:	bl	3b094 <PyInit__decimal@@Base+0x233bc>
    c8e0:	ldr	x0, [sp, #112]
    c8e4:	ldr	w1, [sp, #108]
    c8e8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    c8ec:	cmp	w0, #0x0
    c8f0:	b.eq	c910 <PyFloat_FromString@plt+0x5dc0>  // b.none
    c8f4:	ldr	x2, [sp, #128]
    c8f8:	mov	w1, #0xd46                 	// #3398
    c8fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c900:	add	x0, x0, #0x9c0
    c904:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c908:	mov	x0, #0x0                   	// #0
    c90c:	b	c914 <PyFloat_FromString@plt+0x5dc4>
    c910:	ldr	x0, [sp, #128]
    c914:	ldp	x29, x30, [sp], #144
    c918:	ret
    c91c:	stp	x29, x30, [sp, #-144]!
    c920:	mov	x29, sp
    c924:	str	x0, [sp, #40]
    c928:	str	x1, [sp, #32]
    c92c:	str	x2, [sp, #24]
    c930:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c934:	ldr	x0, [x0, #4008]
    c938:	str	x0, [sp, #120]
    c93c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c940:	ldr	x0, [x0, #4008]
    c944:	str	x0, [sp, #112]
    c948:	str	wzr, [sp, #108]
    c94c:	add	x1, sp, #0x70
    c950:	add	x0, sp, #0x78
    c954:	mov	x5, x1
    c958:	mov	x4, x0
    c95c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    c960:	add	x3, x0, #0x290
    c964:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    c968:	add	x2, x0, #0x18
    c96c:	ldr	x1, [sp, #24]
    c970:	ldr	x0, [sp, #32]
    c974:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    c978:	cmp	w0, #0x0
    c97c:	b.ne	c988 <PyFloat_FromString@plt+0x5e38>  // b.any
    c980:	mov	x0, #0x0                   	// #0
    c984:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    c988:	ldr	x1, [sp, #112]
    c98c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    c990:	ldr	x0, [x0, #4008]
    c994:	cmp	x1, x0
    c998:	b.ne	c9d4 <PyFloat_FromString@plt+0x5e84>  // b.any
    c99c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    c9a0:	str	x0, [sp, #112]
    c9a4:	ldr	x0, [sp, #112]
    c9a8:	cmp	x0, #0x0
    c9ac:	b.ne	c9b8 <PyFloat_FromString@plt+0x5e68>  // b.any
    c9b0:	mov	x0, #0x0                   	// #0
    c9b4:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    c9b8:	ldr	x0, [sp, #112]
    c9bc:	mov	x2, x0
    c9c0:	mov	w1, #0xd5b                 	// #3419
    c9c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    c9c8:	add	x0, x0, #0x9c0
    c9cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    c9d0:	b	ca30 <PyFloat_FromString@plt+0x5ee0>
    c9d4:	ldr	x0, [sp, #112]
    c9d8:	ldr	x1, [x0, #8]
    c9dc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c9e0:	add	x0, x0, #0x500
    c9e4:	cmp	x1, x0
    c9e8:	b.eq	ca30 <PyFloat_FromString@plt+0x5ee0>  // b.none
    c9ec:	ldr	x0, [sp, #112]
    c9f0:	ldr	x2, [x0, #8]
    c9f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    c9f8:	add	x1, x0, #0x500
    c9fc:	mov	x0, x2
    ca00:	bl	6a70 <PyType_IsSubtype@plt>
    ca04:	cmp	w0, #0x0
    ca08:	b.ne	ca30 <PyFloat_FromString@plt+0x5ee0>  // b.any
    ca0c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ca10:	ldr	x0, [x0, #3936]
    ca14:	ldr	x2, [x0]
    ca18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ca1c:	add	x1, x0, #0xe00
    ca20:	mov	x0, x2
    ca24:	bl	66f0 <PyErr_SetString@plt>
    ca28:	mov	x0, #0x0                   	// #0
    ca2c:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    ca30:	ldr	x0, [sp, #112]
    ca34:	add	x1, x0, #0x10
    ca38:	add	x0, sp, #0x38
    ca3c:	ldp	x2, x3, [x1]
    ca40:	stp	x2, x3, [x0]
    ca44:	ldp	x2, x3, [x1, #16]
    ca48:	stp	x2, x3, [x0, #16]
    ca4c:	ldp	x2, x3, [x1, #32]
    ca50:	stp	x2, x3, [x0, #32]
    ca54:	ldr	x1, [sp, #120]
    ca58:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ca5c:	ldr	x0, [x0, #4008]
    ca60:	cmp	x1, x0
    ca64:	b.eq	caac <PyFloat_FromString@plt+0x5f5c>  // b.none
    ca68:	ldr	x0, [sp, #120]
    ca6c:	bl	751c <PyFloat_FromString@plt+0x9cc>
    ca70:	str	w0, [sp, #140]
    ca74:	ldr	w0, [sp, #140]
    ca78:	cmp	w0, #0x0
    ca7c:	b.ge	ca88 <PyFloat_FromString@plt+0x5f38>  // b.tcont
    ca80:	mov	x0, #0x0                   	// #0
    ca84:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    ca88:	add	x0, sp, #0x38
    ca8c:	ldr	w1, [sp, #140]
    ca90:	bl	1baa0 <PyInit__decimal@@Base+0x3dc8>
    ca94:	cmp	w0, #0x0
    ca98:	b.ne	caac <PyFloat_FromString@plt+0x5f5c>  // b.any
    ca9c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    caa0:	add	x0, x0, #0x278
    caa4:	bl	6e68 <PyFloat_FromString@plt+0x318>
    caa8:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    caac:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    cab0:	add	x0, x0, #0x360
    cab4:	bl	912c <PyFloat_FromString@plt+0x25dc>
    cab8:	str	x0, [sp, #128]
    cabc:	ldr	x0, [sp, #128]
    cac0:	cmp	x0, #0x0
    cac4:	b.ne	cad0 <PyFloat_FromString@plt+0x5f80>  // b.any
    cac8:	mov	x0, #0x0                   	// #0
    cacc:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    cad0:	ldr	x0, [sp, #128]
    cad4:	add	x4, x0, #0x18
    cad8:	ldr	x0, [sp, #40]
    cadc:	add	x0, x0, #0x18
    cae0:	add	x2, sp, #0x6c
    cae4:	add	x1, sp, #0x38
    cae8:	mov	x3, x2
    caec:	mov	x2, x1
    caf0:	mov	x1, x0
    caf4:	mov	x0, x4
    caf8:	bl	3b058 <PyInit__decimal@@Base+0x23380>
    cafc:	ldr	x0, [sp, #112]
    cb00:	ldr	w1, [sp, #108]
    cb04:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    cb08:	cmp	w0, #0x0
    cb0c:	b.eq	cb2c <PyFloat_FromString@plt+0x5fdc>  // b.none
    cb10:	ldr	x2, [sp, #128]
    cb14:	mov	w1, #0xd6f                 	// #3439
    cb18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cb1c:	add	x0, x0, #0x9c0
    cb20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    cb24:	mov	x0, #0x0                   	// #0
    cb28:	b	cb30 <PyFloat_FromString@plt+0x5fe0>
    cb2c:	ldr	x0, [sp, #128]
    cb30:	ldp	x29, x30, [sp], #144
    cb34:	ret
    cb38:	stp	x29, x30, [sp, #-48]!
    cb3c:	mov	x29, sp
    cb40:	str	x0, [sp, #24]
    cb44:	ldr	x0, [sp, #24]
    cb48:	add	x0, x0, #0x18
    cb4c:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
    cb50:	cmp	w0, #0x0
    cb54:	b.eq	cbcc <PyFloat_FromString@plt+0x607c>  // b.none
    cb58:	ldr	x0, [sp, #24]
    cb5c:	add	x0, x0, #0x18
    cb60:	bl	2541c <PyInit__decimal@@Base+0xd744>
    cb64:	cmp	w0, #0x0
    cb68:	b.eq	cb90 <PyFloat_FromString@plt+0x6040>  // b.none
    cb6c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    cb70:	ldr	x0, [x0, #3928]
    cb74:	ldr	x2, [x0]
    cb78:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    cb7c:	add	x1, x0, #0x2a0
    cb80:	mov	x0, x2
    cb84:	bl	66f0 <PyErr_SetString@plt>
    cb88:	mov	x0, #0x0                   	// #0
    cb8c:	b	cc10 <PyFloat_FromString@plt+0x60c0>
    cb90:	ldr	x0, [sp, #24]
    cb94:	add	x0, x0, #0x18
    cb98:	bl	253a0 <PyInit__decimal@@Base+0xd6c8>
    cb9c:	cmp	w0, #0x0
    cba0:	b.eq	cbb8 <PyFloat_FromString@plt+0x6068>  // b.none
    cba4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    cba8:	add	x0, x0, #0x2c8
    cbac:	bl	6a10 <PyUnicode_FromString@plt>
    cbb0:	str	x0, [sp, #40]
    cbb4:	b	cbd8 <PyFloat_FromString@plt+0x6088>
    cbb8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    cbbc:	add	x0, x0, #0x2d0
    cbc0:	bl	6a10 <PyUnicode_FromString@plt>
    cbc4:	str	x0, [sp, #40]
    cbc8:	b	cbd8 <PyFloat_FromString@plt+0x6088>
    cbcc:	ldr	x0, [sp, #24]
    cbd0:	bl	b954 <PyFloat_FromString@plt+0x4e04>
    cbd4:	str	x0, [sp, #40]
    cbd8:	ldr	x0, [sp, #40]
    cbdc:	cmp	x0, #0x0
    cbe0:	b.ne	cbec <PyFloat_FromString@plt+0x609c>  // b.any
    cbe4:	mov	x0, #0x0                   	// #0
    cbe8:	b	cc10 <PyFloat_FromString@plt+0x60c0>
    cbec:	ldr	x0, [sp, #40]
    cbf0:	bl	6b50 <PyFloat_FromString@plt>
    cbf4:	str	x0, [sp, #32]
    cbf8:	ldr	x2, [sp, #40]
    cbfc:	mov	w1, #0xd91                 	// #3473
    cc00:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cc04:	add	x0, x0, #0x9c0
    cc08:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    cc0c:	ldr	x0, [sp, #32]
    cc10:	ldp	x29, x30, [sp], #48
    cc14:	ret
    cc18:	stp	x29, x30, [sp, #-128]!
    cc1c:	mov	x29, sp
    cc20:	str	x0, [sp, #24]
    cc24:	str	x1, [sp, #16]
    cc28:	str	xzr, [sp, #96]
    cc2c:	str	wzr, [sp, #92]
    cc30:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    cc34:	str	x0, [sp, #120]
    cc38:	ldr	x0, [sp, #120]
    cc3c:	cmp	x0, #0x0
    cc40:	b.ne	cc4c <PyFloat_FromString@plt+0x60fc>  // b.any
    cc44:	mov	x0, #0x0                   	// #0
    cc48:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cc4c:	ldr	x2, [sp, #120]
    cc50:	mov	w1, #0xd9f                 	// #3487
    cc54:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cc58:	add	x0, x0, #0x9c0
    cc5c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    cc60:	add	x0, sp, #0x60
    cc64:	mov	x2, x0
    cc68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cc6c:	add	x1, x0, #0xdf8
    cc70:	ldr	x0, [sp, #16]
    cc74:	bl	6980 <PyArg_ParseTuple@plt>
    cc78:	cmp	w0, #0x0
    cc7c:	b.ne	cc88 <PyFloat_FromString@plt+0x6138>  // b.any
    cc80:	mov	x0, #0x0                   	// #0
    cc84:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cc88:	ldr	x0, [sp, #96]
    cc8c:	cmp	x0, #0x0
    cc90:	b.eq	cde8 <PyFloat_FromString@plt+0x6298>  // b.none
    cc94:	mov	x0, #0x1                   	// #1
    cc98:	str	x0, [sp, #80]
    cc9c:	mov	w0, #0xffffff90            	// #-112
    cca0:	strb	w0, [sp, #32]
    cca4:	str	xzr, [sp, #40]
    cca8:	mov	x0, #0x1                   	// #1
    ccac:	str	x0, [sp, #48]
    ccb0:	mov	x0, #0x1                   	// #1
    ccb4:	str	x0, [sp, #56]
    ccb8:	mov	x0, #0x1                   	// #1
    ccbc:	str	x0, [sp, #64]
    ccc0:	add	x0, sp, #0x50
    ccc4:	str	x0, [sp, #72]
    ccc8:	ldr	x0, [sp, #96]
    cccc:	ldr	x0, [x0, #8]
    ccd0:	ldr	x0, [x0, #168]
    ccd4:	and	x0, x0, #0x1000000
    ccd8:	cmp	x0, #0x0
    ccdc:	b.ne	cd04 <PyFloat_FromString@plt+0x61b4>  // b.any
    cce0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    cce4:	ldr	x0, [x0, #3936]
    cce8:	ldr	x2, [x0]
    ccec:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    ccf0:	add	x1, x0, #0x2d8
    ccf4:	mov	x0, x2
    ccf8:	bl	66f0 <PyErr_SetString@plt>
    ccfc:	mov	x0, #0x0                   	// #0
    cd00:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cd04:	ldr	x0, [sp, #96]
    cd08:	bl	6790 <PyLong_AsSsize_t@plt>
    cd0c:	str	x0, [sp, #112]
    cd10:	ldr	x0, [sp, #112]
    cd14:	cmn	x0, #0x1
    cd18:	b.ne	cd30 <PyFloat_FromString@plt+0x61e0>  // b.any
    cd1c:	bl	6880 <PyErr_Occurred@plt>
    cd20:	cmp	x0, #0x0
    cd24:	b.eq	cd30 <PyFloat_FromString@plt+0x61e0>  // b.none
    cd28:	mov	x0, #0x0                   	// #0
    cd2c:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cd30:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    cd34:	add	x0, x0, #0x360
    cd38:	bl	912c <PyFloat_FromString@plt+0x25dc>
    cd3c:	str	x0, [sp, #104]
    cd40:	ldr	x0, [sp, #104]
    cd44:	cmp	x0, #0x0
    cd48:	b.ne	cd54 <PyFloat_FromString@plt+0x6204>  // b.any
    cd4c:	mov	x0, #0x0                   	// #0
    cd50:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cd54:	ldr	x1, [sp, #112]
    cd58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    cd5c:	cmp	x1, x0
    cd60:	b.eq	cd70 <PyFloat_FromString@plt+0x6220>  // b.none
    cd64:	ldr	x0, [sp, #112]
    cd68:	neg	x0, x0
    cd6c:	b	cd74 <PyFloat_FromString@plt+0x6224>
    cd70:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    cd74:	str	x0, [sp, #40]
    cd78:	ldr	x0, [sp, #104]
    cd7c:	add	x5, x0, #0x18
    cd80:	ldr	x0, [sp, #24]
    cd84:	add	x1, x0, #0x18
    cd88:	ldr	x0, [sp, #120]
    cd8c:	add	x2, x0, #0x10
    cd90:	add	x3, sp, #0x5c
    cd94:	add	x0, sp, #0x20
    cd98:	mov	x4, x3
    cd9c:	mov	x3, x2
    cda0:	mov	x2, x0
    cda4:	mov	x0, x5
    cda8:	bl	39d40 <PyInit__decimal@@Base+0x22068>
    cdac:	ldr	w0, [sp, #92]
    cdb0:	mov	w1, w0
    cdb4:	ldr	x0, [sp, #120]
    cdb8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    cdbc:	cmp	w0, #0x0
    cdc0:	b.eq	cde0 <PyFloat_FromString@plt+0x6290>  // b.none
    cdc4:	ldr	x2, [sp, #104]
    cdc8:	mov	w1, #0xdbb                 	// #3515
    cdcc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cdd0:	add	x0, x0, #0x9c0
    cdd4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    cdd8:	mov	x0, #0x0                   	// #0
    cddc:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cde0:	ldr	x0, [sp, #104]
    cde4:	b	cdf8 <PyFloat_FromString@plt+0x62a8>
    cde8:	mov	w2, #0x6                   	// #6
    cdec:	ldr	x1, [sp, #120]
    cdf0:	ldr	x0, [sp, #24]
    cdf4:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
    cdf8:	ldp	x29, x30, [sp], #128
    cdfc:	ret
    ce00:	stp	x29, x30, [sp, #-112]!
    ce04:	mov	x29, sp
    ce08:	str	x0, [sp, #24]
    ce0c:	str	x1, [sp, #16]
    ce10:	str	xzr, [sp, #104]
    ce14:	str	xzr, [sp, #96]
    ce18:	str	xzr, [sp, #88]
    ce1c:	str	xzr, [sp, #80]
    ce20:	str	xzr, [sp, #56]
    ce24:	str	xzr, [sp, #48]
    ce28:	str	xzr, [sp, #72]
    ce2c:	ldr	x0, [sp, #24]
    ce30:	add	x0, x0, #0x18
    ce34:	bl	29ae4 <PyInit__decimal@@Base+0x11e0c>
    ce38:	str	x0, [sp, #48]
    ce3c:	ldr	x0, [sp, #48]
    ce40:	cmp	x0, #0x0
    ce44:	b.ne	ce50 <PyFloat_FromString@plt+0x6300>  // b.any
    ce48:	bl	6690 <PyErr_NoMemory@plt>
    ce4c:	b	d068 <PyFloat_FromString@plt+0x6518>
    ce50:	ldr	x0, [sp, #24]
    ce54:	add	x0, x0, #0x18
    ce58:	bl	256b0 <PyInit__decimal@@Base+0xd9d8>
    ce5c:	and	w0, w0, #0xff
    ce60:	and	x0, x0, #0xff
    ce64:	bl	69e0 <PyLong_FromUnsignedLong@plt>
    ce68:	str	x0, [sp, #96]
    ce6c:	ldr	x0, [sp, #96]
    ce70:	cmp	x0, #0x0
    ce74:	b.eq	d03c <PyFloat_FromString@plt+0x64ec>  // b.none
    ce78:	ldr	x0, [sp, #48]
    ce7c:	bl	25368 <PyInit__decimal@@Base+0xd690>
    ce80:	cmp	w0, #0x0
    ce84:	b.eq	cec8 <PyFloat_FromString@plt+0x6378>  // b.none
    ce88:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ce8c:	add	x0, x0, #0xee0
    ce90:	bl	6a10 <PyUnicode_FromString@plt>
    ce94:	str	x0, [sp, #80]
    ce98:	ldr	x0, [sp, #80]
    ce9c:	cmp	x0, #0x0
    cea0:	b.eq	d044 <PyFloat_FromString@plt+0x64f4>  // b.none
    cea4:	mov	w1, #0x0                   	// #0
    cea8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    ceac:	add	x0, x0, #0x2f8
    ceb0:	bl	6870 <Py_BuildValue@plt>
    ceb4:	str	x0, [sp, #88]
    ceb8:	ldr	x0, [sp, #88]
    cebc:	cmp	x0, #0x0
    cec0:	b.ne	d014 <PyFloat_FromString@plt+0x64c4>  // b.any
    cec4:	b	d068 <PyFloat_FromString@plt+0x6518>
    cec8:	ldr	x0, [sp, #48]
    cecc:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
    ced0:	cmp	w0, #0x0
    ced4:	b.eq	cf08 <PyFloat_FromString@plt+0x63b8>  // b.none
    ced8:	ldr	x0, [sp, #48]
    cedc:	bl	253e4 <PyInit__decimal@@Base+0xd70c>
    cee0:	cmp	w0, #0x0
    cee4:	b.eq	cef4 <PyFloat_FromString@plt+0x63a4>  // b.none
    cee8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ceec:	add	x0, x0, #0xee8
    cef0:	b	cefc <PyFloat_FromString@plt+0x63ac>
    cef4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    cef8:	add	x0, x0, #0xef0
    cefc:	bl	6a10 <PyUnicode_FromString@plt>
    cf00:	str	x0, [sp, #80]
    cf04:	b	cf18 <PyFloat_FromString@plt+0x63c8>
    cf08:	ldr	x0, [sp, #24]
    cf0c:	ldr	x0, [x0, #32]
    cf10:	bl	6740 <PyLong_FromSsize_t@plt>
    cf14:	str	x0, [sp, #80]
    cf18:	ldr	x0, [sp, #80]
    cf1c:	cmp	x0, #0x0
    cf20:	b.eq	d04c <PyFloat_FromString@plt+0x64fc>  // b.none
    cf24:	ldr	x0, [sp, #48]
    cf28:	ldr	x0, [x0, #24]
    cf2c:	cmp	x0, #0x0
    cf30:	b.le	cffc <PyFloat_FromString@plt+0x64ac>
    cf34:	ldr	x0, [sp, #48]
    cf38:	str	xzr, [x0, #8]
    cf3c:	ldr	x0, [sp, #48]
    cf40:	bl	26350 <PyInit__decimal@@Base+0xe678>
    cf44:	mov	w1, #0x1                   	// #1
    cf48:	ldr	x0, [sp, #48]
    cf4c:	bl	212d0 <PyInit__decimal@@Base+0x95f8>
    cf50:	str	x0, [sp, #72]
    cf54:	ldr	x0, [sp, #72]
    cf58:	cmp	x0, #0x0
    cf5c:	b.ne	cf68 <PyFloat_FromString@plt+0x6418>  // b.any
    cf60:	bl	6690 <PyErr_NoMemory@plt>
    cf64:	b	d068 <PyFloat_FromString@plt+0x6518>
    cf68:	ldr	x0, [sp, #72]
    cf6c:	bl	6570 <strlen@plt>
    cf70:	str	x0, [sp, #40]
    cf74:	ldr	x0, [sp, #40]
    cf78:	bl	6840 <PyTuple_New@plt>
    cf7c:	str	x0, [sp, #88]
    cf80:	ldr	x0, [sp, #88]
    cf84:	cmp	x0, #0x0
    cf88:	b.eq	d054 <PyFloat_FromString@plt+0x6504>  // b.none
    cf8c:	str	xzr, [sp, #64]
    cf90:	b	cfe8 <PyFloat_FromString@plt+0x6498>
    cf94:	ldr	x0, [sp, #64]
    cf98:	ldr	x1, [sp, #72]
    cf9c:	add	x0, x1, x0
    cfa0:	ldrb	w0, [x0]
    cfa4:	sub	w0, w0, #0x30
    cfa8:	sxtw	x0, w0
    cfac:	bl	6780 <PyLong_FromLong@plt>
    cfb0:	str	x0, [sp, #56]
    cfb4:	ldr	x0, [sp, #56]
    cfb8:	cmp	x0, #0x0
    cfbc:	b.eq	d05c <PyFloat_FromString@plt+0x650c>  // b.none
    cfc0:	ldr	x1, [sp, #88]
    cfc4:	ldr	x0, [sp, #64]
    cfc8:	add	x0, x0, #0x2
    cfcc:	lsl	x0, x0, #3
    cfd0:	add	x0, x1, x0
    cfd4:	ldr	x1, [sp, #56]
    cfd8:	str	x1, [x0, #8]
    cfdc:	ldr	x0, [sp, #64]
    cfe0:	add	x0, x0, #0x1
    cfe4:	str	x0, [sp, #64]
    cfe8:	ldr	x1, [sp, #64]
    cfec:	ldr	x0, [sp, #40]
    cff0:	cmp	x1, x0
    cff4:	b.lt	cf94 <PyFloat_FromString@plt+0x6444>  // b.tstop
    cff8:	b	d014 <PyFloat_FromString@plt+0x64c4>
    cffc:	mov	x0, #0x0                   	// #0
    d000:	bl	6840 <PyTuple_New@plt>
    d004:	str	x0, [sp, #88]
    d008:	ldr	x0, [sp, #88]
    d00c:	cmp	x0, #0x0
    d010:	b.eq	d064 <PyFloat_FromString@plt+0x6514>  // b.none
    d014:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    d018:	add	x0, x0, #0x7c0
    d01c:	ldr	x0, [x0]
    d020:	mov	x4, #0x0                   	// #0
    d024:	ldr	x3, [sp, #80]
    d028:	ldr	x2, [sp, #88]
    d02c:	ldr	x1, [sp, #96]
    d030:	bl	68f0 <PyObject_CallFunctionObjArgs@plt>
    d034:	str	x0, [sp, #104]
    d038:	b	d068 <PyFloat_FromString@plt+0x6518>
    d03c:	nop
    d040:	b	d068 <PyFloat_FromString@plt+0x6518>
    d044:	nop
    d048:	b	d068 <PyFloat_FromString@plt+0x6518>
    d04c:	nop
    d050:	b	d068 <PyFloat_FromString@plt+0x6518>
    d054:	nop
    d058:	b	d068 <PyFloat_FromString@plt+0x6518>
    d05c:	nop
    d060:	b	d068 <PyFloat_FromString@plt+0x6518>
    d064:	nop
    d068:	ldr	x0, [sp, #48]
    d06c:	cmp	x0, #0x0
    d070:	b.eq	d07c <PyFloat_FromString@plt+0x652c>  // b.none
    d074:	ldr	x0, [sp, #48]
    d078:	bl	25820 <PyInit__decimal@@Base+0xdb48>
    d07c:	ldr	x0, [sp, #72]
    d080:	cmp	x0, #0x0
    d084:	b.eq	d09c <PyFloat_FromString@plt+0x654c>  // b.none
    d088:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    d08c:	add	x0, x0, #0x6f8
    d090:	ldr	x1, [x0]
    d094:	ldr	x0, [sp, #72]
    d098:	blr	x1
    d09c:	ldr	x0, [sp, #96]
    d0a0:	bl	6d64 <PyFloat_FromString@plt+0x214>
    d0a4:	ldr	x0, [sp, #88]
    d0a8:	bl	6d64 <PyFloat_FromString@plt+0x214>
    d0ac:	ldr	x0, [sp, #80]
    d0b0:	bl	6d64 <PyFloat_FromString@plt+0x214>
    d0b4:	ldr	x0, [sp, #104]
    d0b8:	ldp	x29, x30, [sp], #112
    d0bc:	ret
    d0c0:	stp	x29, x30, [sp, #-64]!
    d0c4:	mov	x29, sp
    d0c8:	str	x0, [sp, #24]
    d0cc:	str	wzr, [sp, #44]
    d0d0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d0d4:	str	x0, [sp, #56]
    d0d8:	ldr	x0, [sp, #56]
    d0dc:	cmp	x0, #0x0
    d0e0:	b.ne	d0ec <PyFloat_FromString@plt+0x659c>  // b.any
    d0e4:	mov	x0, #0x0                   	// #0
    d0e8:	b	d188 <PyFloat_FromString@plt+0x6638>
    d0ec:	ldr	x2, [sp, #56]
    d0f0:	mov	w1, #0xf05                 	// #3845
    d0f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d0f8:	add	x0, x0, #0x9c0
    d0fc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d100:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d104:	add	x0, x0, #0x360
    d108:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d10c:	str	x0, [sp, #48]
    d110:	ldr	x0, [sp, #48]
    d114:	cmp	x0, #0x0
    d118:	b.ne	d124 <PyFloat_FromString@plt+0x65d4>  // b.any
    d11c:	mov	x0, #0x0                   	// #0
    d120:	b	d188 <PyFloat_FromString@plt+0x6638>
    d124:	ldr	x0, [sp, #48]
    d128:	add	x4, x0, #0x18
    d12c:	ldr	x0, [sp, #24]
    d130:	add	x1, x0, #0x18
    d134:	ldr	x0, [sp, #56]
    d138:	add	x0, x0, #0x10
    d13c:	add	x2, sp, #0x2c
    d140:	mov	x3, x2
    d144:	mov	x2, x0
    d148:	mov	x0, x4
    d14c:	bl	371dc <PyInit__decimal@@Base+0x1f504>
    d150:	ldr	w0, [sp, #44]
    d154:	mov	w1, w0
    d158:	ldr	x0, [sp, #56]
    d15c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d160:	cmp	w0, #0x0
    d164:	b.eq	d184 <PyFloat_FromString@plt+0x6634>  // b.none
    d168:	ldr	x2, [sp, #48]
    d16c:	mov	w1, #0xf05                 	// #3845
    d170:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d174:	add	x0, x0, #0x9c0
    d178:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d17c:	mov	x0, #0x0                   	// #0
    d180:	b	d188 <PyFloat_FromString@plt+0x6638>
    d184:	ldr	x0, [sp, #48]
    d188:	ldp	x29, x30, [sp], #64
    d18c:	ret
    d190:	stp	x29, x30, [sp, #-64]!
    d194:	mov	x29, sp
    d198:	str	x0, [sp, #24]
    d19c:	str	wzr, [sp, #44]
    d1a0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d1a4:	str	x0, [sp, #56]
    d1a8:	ldr	x0, [sp, #56]
    d1ac:	cmp	x0, #0x0
    d1b0:	b.ne	d1bc <PyFloat_FromString@plt+0x666c>  // b.any
    d1b4:	mov	x0, #0x0                   	// #0
    d1b8:	b	d258 <PyFloat_FromString@plt+0x6708>
    d1bc:	ldr	x2, [sp, #56]
    d1c0:	mov	w1, #0xf06                 	// #3846
    d1c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d1c8:	add	x0, x0, #0x9c0
    d1cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d1d0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d1d4:	add	x0, x0, #0x360
    d1d8:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d1dc:	str	x0, [sp, #48]
    d1e0:	ldr	x0, [sp, #48]
    d1e4:	cmp	x0, #0x0
    d1e8:	b.ne	d1f4 <PyFloat_FromString@plt+0x66a4>  // b.any
    d1ec:	mov	x0, #0x0                   	// #0
    d1f0:	b	d258 <PyFloat_FromString@plt+0x6708>
    d1f4:	ldr	x0, [sp, #48]
    d1f8:	add	x4, x0, #0x18
    d1fc:	ldr	x0, [sp, #24]
    d200:	add	x1, x0, #0x18
    d204:	ldr	x0, [sp, #56]
    d208:	add	x0, x0, #0x10
    d20c:	add	x2, sp, #0x2c
    d210:	mov	x3, x2
    d214:	mov	x2, x0
    d218:	mov	x0, x4
    d21c:	bl	372e8 <PyInit__decimal@@Base+0x1f610>
    d220:	ldr	w0, [sp, #44]
    d224:	mov	w1, w0
    d228:	ldr	x0, [sp, #56]
    d22c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d230:	cmp	w0, #0x0
    d234:	b.eq	d254 <PyFloat_FromString@plt+0x6704>  // b.none
    d238:	ldr	x2, [sp, #48]
    d23c:	mov	w1, #0xf06                 	// #3846
    d240:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d244:	add	x0, x0, #0x9c0
    d248:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d24c:	mov	x0, #0x0                   	// #0
    d250:	b	d258 <PyFloat_FromString@plt+0x6708>
    d254:	ldr	x0, [sp, #48]
    d258:	ldp	x29, x30, [sp], #64
    d25c:	ret
    d260:	stp	x29, x30, [sp, #-64]!
    d264:	mov	x29, sp
    d268:	str	x0, [sp, #24]
    d26c:	str	wzr, [sp, #44]
    d270:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d274:	str	x0, [sp, #56]
    d278:	ldr	x0, [sp, #56]
    d27c:	cmp	x0, #0x0
    d280:	b.ne	d28c <PyFloat_FromString@plt+0x673c>  // b.any
    d284:	mov	x0, #0x0                   	// #0
    d288:	b	d328 <PyFloat_FromString@plt+0x67d8>
    d28c:	ldr	x2, [sp, #56]
    d290:	mov	w1, #0xf07                 	// #3847
    d294:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d298:	add	x0, x0, #0x9c0
    d29c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d2a0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d2a4:	add	x0, x0, #0x360
    d2a8:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d2ac:	str	x0, [sp, #48]
    d2b0:	ldr	x0, [sp, #48]
    d2b4:	cmp	x0, #0x0
    d2b8:	b.ne	d2c4 <PyFloat_FromString@plt+0x6774>  // b.any
    d2bc:	mov	x0, #0x0                   	// #0
    d2c0:	b	d328 <PyFloat_FromString@plt+0x67d8>
    d2c4:	ldr	x0, [sp, #48]
    d2c8:	add	x4, x0, #0x18
    d2cc:	ldr	x0, [sp, #24]
    d2d0:	add	x1, x0, #0x18
    d2d4:	ldr	x0, [sp, #56]
    d2d8:	add	x0, x0, #0x10
    d2dc:	add	x2, sp, #0x2c
    d2e0:	mov	x3, x2
    d2e4:	mov	x2, x0
    d2e8:	mov	x0, x4
    d2ec:	bl	2e9f0 <PyInit__decimal@@Base+0x16d18>
    d2f0:	ldr	w0, [sp, #44]
    d2f4:	mov	w1, w0
    d2f8:	ldr	x0, [sp, #56]
    d2fc:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d300:	cmp	w0, #0x0
    d304:	b.eq	d324 <PyFloat_FromString@plt+0x67d4>  // b.none
    d308:	ldr	x2, [sp, #48]
    d30c:	mov	w1, #0xf07                 	// #3847
    d310:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d314:	add	x0, x0, #0x9c0
    d318:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d31c:	mov	x0, #0x0                   	// #0
    d320:	b	d328 <PyFloat_FromString@plt+0x67d8>
    d324:	ldr	x0, [sp, #48]
    d328:	ldp	x29, x30, [sp], #64
    d32c:	ret
    d330:	stp	x29, x30, [sp, #-80]!
    d334:	mov	x29, sp
    d338:	str	x0, [sp, #24]
    d33c:	str	x1, [sp, #16]
    d340:	str	wzr, [sp, #44]
    d344:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d348:	str	x0, [sp, #72]
    d34c:	ldr	x0, [sp, #72]
    d350:	cmp	x0, #0x0
    d354:	b.ne	d360 <PyFloat_FromString@plt+0x6810>  // b.any
    d358:	mov	x0, #0x0                   	// #0
    d35c:	b	d4cc <PyFloat_FromString@plt+0x697c>
    d360:	ldr	x2, [sp, #72]
    d364:	mov	w1, #0xf09                 	// #3849
    d368:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d36c:	add	x0, x0, #0x9c0
    d370:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d374:	add	x0, sp, #0x38
    d378:	ldr	x3, [sp, #72]
    d37c:	ldr	x2, [sp, #24]
    d380:	mov	x1, x0
    d384:	mov	w0, #0x0                   	// #0
    d388:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d38c:	cmp	w0, #0x0
    d390:	b.ne	d39c <PyFloat_FromString@plt+0x684c>  // b.any
    d394:	ldr	x0, [sp, #56]
    d398:	b	d4cc <PyFloat_FromString@plt+0x697c>
    d39c:	add	x0, sp, #0x30
    d3a0:	ldr	x3, [sp, #72]
    d3a4:	ldr	x2, [sp, #16]
    d3a8:	mov	x1, x0
    d3ac:	mov	w0, #0x0                   	// #0
    d3b0:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d3b4:	cmp	w0, #0x0
    d3b8:	b.ne	d3dc <PyFloat_FromString@plt+0x688c>  // b.any
    d3bc:	ldr	x0, [sp, #56]
    d3c0:	mov	x2, x0
    d3c4:	mov	w1, #0xf09                 	// #3849
    d3c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d3cc:	add	x0, x0, #0x9c0
    d3d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d3d4:	ldr	x0, [sp, #48]
    d3d8:	b	d4cc <PyFloat_FromString@plt+0x697c>
    d3dc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d3e0:	add	x0, x0, #0x360
    d3e4:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d3e8:	str	x0, [sp, #64]
    d3ec:	ldr	x0, [sp, #64]
    d3f0:	cmp	x0, #0x0
    d3f4:	b.ne	d430 <PyFloat_FromString@plt+0x68e0>  // b.any
    d3f8:	ldr	x0, [sp, #56]
    d3fc:	mov	x2, x0
    d400:	mov	w1, #0xf09                 	// #3849
    d404:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d408:	add	x0, x0, #0x9c0
    d40c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d410:	ldr	x0, [sp, #48]
    d414:	mov	x2, x0
    d418:	mov	w1, #0xf09                 	// #3849
    d41c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d420:	add	x0, x0, #0x9c0
    d424:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d428:	mov	x0, #0x0                   	// #0
    d42c:	b	d4cc <PyFloat_FromString@plt+0x697c>
    d430:	ldr	x0, [sp, #64]
    d434:	add	x5, x0, #0x18
    d438:	ldr	x0, [sp, #56]
    d43c:	add	x1, x0, #0x18
    d440:	ldr	x0, [sp, #48]
    d444:	add	x2, x0, #0x18
    d448:	ldr	x0, [sp, #72]
    d44c:	add	x0, x0, #0x10
    d450:	add	x3, sp, #0x2c
    d454:	mov	x4, x3
    d458:	mov	x3, x0
    d45c:	mov	x0, x5
    d460:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
    d464:	ldr	x0, [sp, #56]
    d468:	mov	x2, x0
    d46c:	mov	w1, #0xf09                 	// #3849
    d470:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d474:	add	x0, x0, #0x9c0
    d478:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d47c:	ldr	x0, [sp, #48]
    d480:	mov	x2, x0
    d484:	mov	w1, #0xf09                 	// #3849
    d488:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d48c:	add	x0, x0, #0x9c0
    d490:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d494:	ldr	w0, [sp, #44]
    d498:	mov	w1, w0
    d49c:	ldr	x0, [sp, #72]
    d4a0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d4a4:	cmp	w0, #0x0
    d4a8:	b.eq	d4c8 <PyFloat_FromString@plt+0x6978>  // b.none
    d4ac:	ldr	x2, [sp, #64]
    d4b0:	mov	w1, #0xf09                 	// #3849
    d4b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d4b8:	add	x0, x0, #0x9c0
    d4bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d4c0:	mov	x0, #0x0                   	// #0
    d4c4:	b	d4cc <PyFloat_FromString@plt+0x697c>
    d4c8:	ldr	x0, [sp, #64]
    d4cc:	ldp	x29, x30, [sp], #80
    d4d0:	ret
    d4d4:	stp	x29, x30, [sp, #-80]!
    d4d8:	mov	x29, sp
    d4dc:	str	x0, [sp, #24]
    d4e0:	str	x1, [sp, #16]
    d4e4:	str	wzr, [sp, #44]
    d4e8:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d4ec:	str	x0, [sp, #72]
    d4f0:	ldr	x0, [sp, #72]
    d4f4:	cmp	x0, #0x0
    d4f8:	b.ne	d504 <PyFloat_FromString@plt+0x69b4>  // b.any
    d4fc:	mov	x0, #0x0                   	// #0
    d500:	b	d670 <PyFloat_FromString@plt+0x6b20>
    d504:	ldr	x2, [sp, #72]
    d508:	mov	w1, #0xf0a                 	// #3850
    d50c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d510:	add	x0, x0, #0x9c0
    d514:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d518:	add	x0, sp, #0x38
    d51c:	ldr	x3, [sp, #72]
    d520:	ldr	x2, [sp, #24]
    d524:	mov	x1, x0
    d528:	mov	w0, #0x0                   	// #0
    d52c:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d530:	cmp	w0, #0x0
    d534:	b.ne	d540 <PyFloat_FromString@plt+0x69f0>  // b.any
    d538:	ldr	x0, [sp, #56]
    d53c:	b	d670 <PyFloat_FromString@plt+0x6b20>
    d540:	add	x0, sp, #0x30
    d544:	ldr	x3, [sp, #72]
    d548:	ldr	x2, [sp, #16]
    d54c:	mov	x1, x0
    d550:	mov	w0, #0x0                   	// #0
    d554:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d558:	cmp	w0, #0x0
    d55c:	b.ne	d580 <PyFloat_FromString@plt+0x6a30>  // b.any
    d560:	ldr	x0, [sp, #56]
    d564:	mov	x2, x0
    d568:	mov	w1, #0xf0a                 	// #3850
    d56c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d570:	add	x0, x0, #0x9c0
    d574:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d578:	ldr	x0, [sp, #48]
    d57c:	b	d670 <PyFloat_FromString@plt+0x6b20>
    d580:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d584:	add	x0, x0, #0x360
    d588:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d58c:	str	x0, [sp, #64]
    d590:	ldr	x0, [sp, #64]
    d594:	cmp	x0, #0x0
    d598:	b.ne	d5d4 <PyFloat_FromString@plt+0x6a84>  // b.any
    d59c:	ldr	x0, [sp, #56]
    d5a0:	mov	x2, x0
    d5a4:	mov	w1, #0xf0a                 	// #3850
    d5a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d5ac:	add	x0, x0, #0x9c0
    d5b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d5b4:	ldr	x0, [sp, #48]
    d5b8:	mov	x2, x0
    d5bc:	mov	w1, #0xf0a                 	// #3850
    d5c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d5c4:	add	x0, x0, #0x9c0
    d5c8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d5cc:	mov	x0, #0x0                   	// #0
    d5d0:	b	d670 <PyFloat_FromString@plt+0x6b20>
    d5d4:	ldr	x0, [sp, #64]
    d5d8:	add	x5, x0, #0x18
    d5dc:	ldr	x0, [sp, #56]
    d5e0:	add	x1, x0, #0x18
    d5e4:	ldr	x0, [sp, #48]
    d5e8:	add	x2, x0, #0x18
    d5ec:	ldr	x0, [sp, #72]
    d5f0:	add	x0, x0, #0x10
    d5f4:	add	x3, sp, #0x2c
    d5f8:	mov	x4, x3
    d5fc:	mov	x3, x0
    d600:	mov	x0, x5
    d604:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
    d608:	ldr	x0, [sp, #56]
    d60c:	mov	x2, x0
    d610:	mov	w1, #0xf0a                 	// #3850
    d614:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d618:	add	x0, x0, #0x9c0
    d61c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d620:	ldr	x0, [sp, #48]
    d624:	mov	x2, x0
    d628:	mov	w1, #0xf0a                 	// #3850
    d62c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d630:	add	x0, x0, #0x9c0
    d634:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d638:	ldr	w0, [sp, #44]
    d63c:	mov	w1, w0
    d640:	ldr	x0, [sp, #72]
    d644:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d648:	cmp	w0, #0x0
    d64c:	b.eq	d66c <PyFloat_FromString@plt+0x6b1c>  // b.none
    d650:	ldr	x2, [sp, #64]
    d654:	mov	w1, #0xf0a                 	// #3850
    d658:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d65c:	add	x0, x0, #0x9c0
    d660:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d664:	mov	x0, #0x0                   	// #0
    d668:	b	d670 <PyFloat_FromString@plt+0x6b20>
    d66c:	ldr	x0, [sp, #64]
    d670:	ldp	x29, x30, [sp], #80
    d674:	ret
    d678:	stp	x29, x30, [sp, #-80]!
    d67c:	mov	x29, sp
    d680:	str	x0, [sp, #24]
    d684:	str	x1, [sp, #16]
    d688:	str	wzr, [sp, #44]
    d68c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d690:	str	x0, [sp, #72]
    d694:	ldr	x0, [sp, #72]
    d698:	cmp	x0, #0x0
    d69c:	b.ne	d6a8 <PyFloat_FromString@plt+0x6b58>  // b.any
    d6a0:	mov	x0, #0x0                   	// #0
    d6a4:	b	d814 <PyFloat_FromString@plt+0x6cc4>
    d6a8:	ldr	x2, [sp, #72]
    d6ac:	mov	w1, #0xf0b                 	// #3851
    d6b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d6b4:	add	x0, x0, #0x9c0
    d6b8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d6bc:	add	x0, sp, #0x38
    d6c0:	ldr	x3, [sp, #72]
    d6c4:	ldr	x2, [sp, #24]
    d6c8:	mov	x1, x0
    d6cc:	mov	w0, #0x0                   	// #0
    d6d0:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d6d4:	cmp	w0, #0x0
    d6d8:	b.ne	d6e4 <PyFloat_FromString@plt+0x6b94>  // b.any
    d6dc:	ldr	x0, [sp, #56]
    d6e0:	b	d814 <PyFloat_FromString@plt+0x6cc4>
    d6e4:	add	x0, sp, #0x30
    d6e8:	ldr	x3, [sp, #72]
    d6ec:	ldr	x2, [sp, #16]
    d6f0:	mov	x1, x0
    d6f4:	mov	w0, #0x0                   	// #0
    d6f8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d6fc:	cmp	w0, #0x0
    d700:	b.ne	d724 <PyFloat_FromString@plt+0x6bd4>  // b.any
    d704:	ldr	x0, [sp, #56]
    d708:	mov	x2, x0
    d70c:	mov	w1, #0xf0b                 	// #3851
    d710:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d714:	add	x0, x0, #0x9c0
    d718:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d71c:	ldr	x0, [sp, #48]
    d720:	b	d814 <PyFloat_FromString@plt+0x6cc4>
    d724:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d728:	add	x0, x0, #0x360
    d72c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d730:	str	x0, [sp, #64]
    d734:	ldr	x0, [sp, #64]
    d738:	cmp	x0, #0x0
    d73c:	b.ne	d778 <PyFloat_FromString@plt+0x6c28>  // b.any
    d740:	ldr	x0, [sp, #56]
    d744:	mov	x2, x0
    d748:	mov	w1, #0xf0b                 	// #3851
    d74c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d750:	add	x0, x0, #0x9c0
    d754:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d758:	ldr	x0, [sp, #48]
    d75c:	mov	x2, x0
    d760:	mov	w1, #0xf0b                 	// #3851
    d764:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d768:	add	x0, x0, #0x9c0
    d76c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d770:	mov	x0, #0x0                   	// #0
    d774:	b	d814 <PyFloat_FromString@plt+0x6cc4>
    d778:	ldr	x0, [sp, #64]
    d77c:	add	x5, x0, #0x18
    d780:	ldr	x0, [sp, #56]
    d784:	add	x1, x0, #0x18
    d788:	ldr	x0, [sp, #48]
    d78c:	add	x2, x0, #0x18
    d790:	ldr	x0, [sp, #72]
    d794:	add	x0, x0, #0x10
    d798:	add	x3, sp, #0x2c
    d79c:	mov	x4, x3
    d7a0:	mov	x3, x0
    d7a4:	mov	x0, x5
    d7a8:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
    d7ac:	ldr	x0, [sp, #56]
    d7b0:	mov	x2, x0
    d7b4:	mov	w1, #0xf0b                 	// #3851
    d7b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d7bc:	add	x0, x0, #0x9c0
    d7c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d7c4:	ldr	x0, [sp, #48]
    d7c8:	mov	x2, x0
    d7cc:	mov	w1, #0xf0b                 	// #3851
    d7d0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d7d4:	add	x0, x0, #0x9c0
    d7d8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d7dc:	ldr	w0, [sp, #44]
    d7e0:	mov	w1, w0
    d7e4:	ldr	x0, [sp, #72]
    d7e8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d7ec:	cmp	w0, #0x0
    d7f0:	b.eq	d810 <PyFloat_FromString@plt+0x6cc0>  // b.none
    d7f4:	ldr	x2, [sp, #64]
    d7f8:	mov	w1, #0xf0b                 	// #3851
    d7fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d800:	add	x0, x0, #0x9c0
    d804:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d808:	mov	x0, #0x0                   	// #0
    d80c:	b	d814 <PyFloat_FromString@plt+0x6cc4>
    d810:	ldr	x0, [sp, #64]
    d814:	ldp	x29, x30, [sp], #80
    d818:	ret
    d81c:	stp	x29, x30, [sp, #-80]!
    d820:	mov	x29, sp
    d824:	str	x0, [sp, #24]
    d828:	str	x1, [sp, #16]
    d82c:	str	wzr, [sp, #44]
    d830:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d834:	str	x0, [sp, #72]
    d838:	ldr	x0, [sp, #72]
    d83c:	cmp	x0, #0x0
    d840:	b.ne	d84c <PyFloat_FromString@plt+0x6cfc>  // b.any
    d844:	mov	x0, #0x0                   	// #0
    d848:	b	d9b8 <PyFloat_FromString@plt+0x6e68>
    d84c:	ldr	x2, [sp, #72]
    d850:	mov	w1, #0xf0c                 	// #3852
    d854:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d858:	add	x0, x0, #0x9c0
    d85c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d860:	add	x0, sp, #0x38
    d864:	ldr	x3, [sp, #72]
    d868:	ldr	x2, [sp, #24]
    d86c:	mov	x1, x0
    d870:	mov	w0, #0x0                   	// #0
    d874:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d878:	cmp	w0, #0x0
    d87c:	b.ne	d888 <PyFloat_FromString@plt+0x6d38>  // b.any
    d880:	ldr	x0, [sp, #56]
    d884:	b	d9b8 <PyFloat_FromString@plt+0x6e68>
    d888:	add	x0, sp, #0x30
    d88c:	ldr	x3, [sp, #72]
    d890:	ldr	x2, [sp, #16]
    d894:	mov	x1, x0
    d898:	mov	w0, #0x0                   	// #0
    d89c:	bl	b168 <PyFloat_FromString@plt+0x4618>
    d8a0:	cmp	w0, #0x0
    d8a4:	b.ne	d8c8 <PyFloat_FromString@plt+0x6d78>  // b.any
    d8a8:	ldr	x0, [sp, #56]
    d8ac:	mov	x2, x0
    d8b0:	mov	w1, #0xf0c                 	// #3852
    d8b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d8b8:	add	x0, x0, #0x9c0
    d8bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d8c0:	ldr	x0, [sp, #48]
    d8c4:	b	d9b8 <PyFloat_FromString@plt+0x6e68>
    d8c8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    d8cc:	add	x0, x0, #0x360
    d8d0:	bl	912c <PyFloat_FromString@plt+0x25dc>
    d8d4:	str	x0, [sp, #64]
    d8d8:	ldr	x0, [sp, #64]
    d8dc:	cmp	x0, #0x0
    d8e0:	b.ne	d91c <PyFloat_FromString@plt+0x6dcc>  // b.any
    d8e4:	ldr	x0, [sp, #56]
    d8e8:	mov	x2, x0
    d8ec:	mov	w1, #0xf0c                 	// #3852
    d8f0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d8f4:	add	x0, x0, #0x9c0
    d8f8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d8fc:	ldr	x0, [sp, #48]
    d900:	mov	x2, x0
    d904:	mov	w1, #0xf0c                 	// #3852
    d908:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d90c:	add	x0, x0, #0x9c0
    d910:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d914:	mov	x0, #0x0                   	// #0
    d918:	b	d9b8 <PyFloat_FromString@plt+0x6e68>
    d91c:	ldr	x0, [sp, #64]
    d920:	add	x5, x0, #0x18
    d924:	ldr	x0, [sp, #56]
    d928:	add	x1, x0, #0x18
    d92c:	ldr	x0, [sp, #48]
    d930:	add	x2, x0, #0x18
    d934:	ldr	x0, [sp, #72]
    d938:	add	x0, x0, #0x10
    d93c:	add	x3, sp, #0x2c
    d940:	mov	x4, x3
    d944:	mov	x3, x0
    d948:	mov	x0, x5
    d94c:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
    d950:	ldr	x0, [sp, #56]
    d954:	mov	x2, x0
    d958:	mov	w1, #0xf0c                 	// #3852
    d95c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d960:	add	x0, x0, #0x9c0
    d964:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d968:	ldr	x0, [sp, #48]
    d96c:	mov	x2, x0
    d970:	mov	w1, #0xf0c                 	// #3852
    d974:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d978:	add	x0, x0, #0x9c0
    d97c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d980:	ldr	w0, [sp, #44]
    d984:	mov	w1, w0
    d988:	ldr	x0, [sp, #72]
    d98c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    d990:	cmp	w0, #0x0
    d994:	b.eq	d9b4 <PyFloat_FromString@plt+0x6e64>  // b.none
    d998:	ldr	x2, [sp, #64]
    d99c:	mov	w1, #0xf0c                 	// #3852
    d9a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d9a4:	add	x0, x0, #0x9c0
    d9a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    d9ac:	mov	x0, #0x0                   	// #0
    d9b0:	b	d9b8 <PyFloat_FromString@plt+0x6e68>
    d9b4:	ldr	x0, [sp, #64]
    d9b8:	ldp	x29, x30, [sp], #80
    d9bc:	ret
    d9c0:	stp	x29, x30, [sp, #-80]!
    d9c4:	mov	x29, sp
    d9c8:	str	x0, [sp, #24]
    d9cc:	str	x1, [sp, #16]
    d9d0:	str	wzr, [sp, #44]
    d9d4:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    d9d8:	str	x0, [sp, #72]
    d9dc:	ldr	x0, [sp, #72]
    d9e0:	cmp	x0, #0x0
    d9e4:	b.ne	d9f0 <PyFloat_FromString@plt+0x6ea0>  // b.any
    d9e8:	mov	x0, #0x0                   	// #0
    d9ec:	b	db5c <PyFloat_FromString@plt+0x700c>
    d9f0:	ldr	x2, [sp, #72]
    d9f4:	mov	w1, #0xf0d                 	// #3853
    d9f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    d9fc:	add	x0, x0, #0x9c0
    da00:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    da04:	add	x0, sp, #0x38
    da08:	ldr	x3, [sp, #72]
    da0c:	ldr	x2, [sp, #24]
    da10:	mov	x1, x0
    da14:	mov	w0, #0x0                   	// #0
    da18:	bl	b168 <PyFloat_FromString@plt+0x4618>
    da1c:	cmp	w0, #0x0
    da20:	b.ne	da2c <PyFloat_FromString@plt+0x6edc>  // b.any
    da24:	ldr	x0, [sp, #56]
    da28:	b	db5c <PyFloat_FromString@plt+0x700c>
    da2c:	add	x0, sp, #0x30
    da30:	ldr	x3, [sp, #72]
    da34:	ldr	x2, [sp, #16]
    da38:	mov	x1, x0
    da3c:	mov	w0, #0x0                   	// #0
    da40:	bl	b168 <PyFloat_FromString@plt+0x4618>
    da44:	cmp	w0, #0x0
    da48:	b.ne	da6c <PyFloat_FromString@plt+0x6f1c>  // b.any
    da4c:	ldr	x0, [sp, #56]
    da50:	mov	x2, x0
    da54:	mov	w1, #0xf0d                 	// #3853
    da58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    da5c:	add	x0, x0, #0x9c0
    da60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    da64:	ldr	x0, [sp, #48]
    da68:	b	db5c <PyFloat_FromString@plt+0x700c>
    da6c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    da70:	add	x0, x0, #0x360
    da74:	bl	912c <PyFloat_FromString@plt+0x25dc>
    da78:	str	x0, [sp, #64]
    da7c:	ldr	x0, [sp, #64]
    da80:	cmp	x0, #0x0
    da84:	b.ne	dac0 <PyFloat_FromString@plt+0x6f70>  // b.any
    da88:	ldr	x0, [sp, #56]
    da8c:	mov	x2, x0
    da90:	mov	w1, #0xf0d                 	// #3853
    da94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    da98:	add	x0, x0, #0x9c0
    da9c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    daa0:	ldr	x0, [sp, #48]
    daa4:	mov	x2, x0
    daa8:	mov	w1, #0xf0d                 	// #3853
    daac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dab0:	add	x0, x0, #0x9c0
    dab4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dab8:	mov	x0, #0x0                   	// #0
    dabc:	b	db5c <PyFloat_FromString@plt+0x700c>
    dac0:	ldr	x0, [sp, #64]
    dac4:	add	x5, x0, #0x18
    dac8:	ldr	x0, [sp, #56]
    dacc:	add	x1, x0, #0x18
    dad0:	ldr	x0, [sp, #48]
    dad4:	add	x2, x0, #0x18
    dad8:	ldr	x0, [sp, #72]
    dadc:	add	x0, x0, #0x10
    dae0:	add	x3, sp, #0x2c
    dae4:	mov	x4, x3
    dae8:	mov	x3, x0
    daec:	mov	x0, x5
    daf0:	bl	3a310 <PyInit__decimal@@Base+0x22638>
    daf4:	ldr	x0, [sp, #56]
    daf8:	mov	x2, x0
    dafc:	mov	w1, #0xf0d                 	// #3853
    db00:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    db04:	add	x0, x0, #0x9c0
    db08:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    db0c:	ldr	x0, [sp, #48]
    db10:	mov	x2, x0
    db14:	mov	w1, #0xf0d                 	// #3853
    db18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    db1c:	add	x0, x0, #0x9c0
    db20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    db24:	ldr	w0, [sp, #44]
    db28:	mov	w1, w0
    db2c:	ldr	x0, [sp, #72]
    db30:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    db34:	cmp	w0, #0x0
    db38:	b.eq	db58 <PyFloat_FromString@plt+0x7008>  // b.none
    db3c:	ldr	x2, [sp, #64]
    db40:	mov	w1, #0xf0d                 	// #3853
    db44:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    db48:	add	x0, x0, #0x9c0
    db4c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    db50:	mov	x0, #0x0                   	// #0
    db54:	b	db5c <PyFloat_FromString@plt+0x700c>
    db58:	ldr	x0, [sp, #64]
    db5c:	ldp	x29, x30, [sp], #80
    db60:	ret
    db64:	stp	x29, x30, [sp, #-80]!
    db68:	mov	x29, sp
    db6c:	str	x0, [sp, #24]
    db70:	str	x1, [sp, #16]
    db74:	str	wzr, [sp, #44]
    db78:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    db7c:	str	x0, [sp, #72]
    db80:	ldr	x0, [sp, #72]
    db84:	cmp	x0, #0x0
    db88:	b.ne	db94 <PyFloat_FromString@plt+0x7044>  // b.any
    db8c:	mov	x0, #0x0                   	// #0
    db90:	b	dd00 <PyFloat_FromString@plt+0x71b0>
    db94:	ldr	x2, [sp, #72]
    db98:	mov	w1, #0xf0e                 	// #3854
    db9c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dba0:	add	x0, x0, #0x9c0
    dba4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dba8:	add	x0, sp, #0x38
    dbac:	ldr	x3, [sp, #72]
    dbb0:	ldr	x2, [sp, #24]
    dbb4:	mov	x1, x0
    dbb8:	mov	w0, #0x0                   	// #0
    dbbc:	bl	b168 <PyFloat_FromString@plt+0x4618>
    dbc0:	cmp	w0, #0x0
    dbc4:	b.ne	dbd0 <PyFloat_FromString@plt+0x7080>  // b.any
    dbc8:	ldr	x0, [sp, #56]
    dbcc:	b	dd00 <PyFloat_FromString@plt+0x71b0>
    dbd0:	add	x0, sp, #0x30
    dbd4:	ldr	x3, [sp, #72]
    dbd8:	ldr	x2, [sp, #16]
    dbdc:	mov	x1, x0
    dbe0:	mov	w0, #0x0                   	// #0
    dbe4:	bl	b168 <PyFloat_FromString@plt+0x4618>
    dbe8:	cmp	w0, #0x0
    dbec:	b.ne	dc10 <PyFloat_FromString@plt+0x70c0>  // b.any
    dbf0:	ldr	x0, [sp, #56]
    dbf4:	mov	x2, x0
    dbf8:	mov	w1, #0xf0e                 	// #3854
    dbfc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dc00:	add	x0, x0, #0x9c0
    dc04:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dc08:	ldr	x0, [sp, #48]
    dc0c:	b	dd00 <PyFloat_FromString@plt+0x71b0>
    dc10:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    dc14:	add	x0, x0, #0x360
    dc18:	bl	912c <PyFloat_FromString@plt+0x25dc>
    dc1c:	str	x0, [sp, #64]
    dc20:	ldr	x0, [sp, #64]
    dc24:	cmp	x0, #0x0
    dc28:	b.ne	dc64 <PyFloat_FromString@plt+0x7114>  // b.any
    dc2c:	ldr	x0, [sp, #56]
    dc30:	mov	x2, x0
    dc34:	mov	w1, #0xf0e                 	// #3854
    dc38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dc3c:	add	x0, x0, #0x9c0
    dc40:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dc44:	ldr	x0, [sp, #48]
    dc48:	mov	x2, x0
    dc4c:	mov	w1, #0xf0e                 	// #3854
    dc50:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dc54:	add	x0, x0, #0x9c0
    dc58:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dc5c:	mov	x0, #0x0                   	// #0
    dc60:	b	dd00 <PyFloat_FromString@plt+0x71b0>
    dc64:	ldr	x0, [sp, #64]
    dc68:	add	x5, x0, #0x18
    dc6c:	ldr	x0, [sp, #56]
    dc70:	add	x1, x0, #0x18
    dc74:	ldr	x0, [sp, #48]
    dc78:	add	x2, x0, #0x18
    dc7c:	ldr	x0, [sp, #72]
    dc80:	add	x0, x0, #0x10
    dc84:	add	x3, sp, #0x2c
    dc88:	mov	x4, x3
    dc8c:	mov	x3, x0
    dc90:	mov	x0, x5
    dc94:	bl	31784 <PyInit__decimal@@Base+0x19aac>
    dc98:	ldr	x0, [sp, #56]
    dc9c:	mov	x2, x0
    dca0:	mov	w1, #0xf0e                 	// #3854
    dca4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dca8:	add	x0, x0, #0x9c0
    dcac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dcb0:	ldr	x0, [sp, #48]
    dcb4:	mov	x2, x0
    dcb8:	mov	w1, #0xf0e                 	// #3854
    dcbc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dcc0:	add	x0, x0, #0x9c0
    dcc4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dcc8:	ldr	w0, [sp, #44]
    dccc:	mov	w1, w0
    dcd0:	ldr	x0, [sp, #72]
    dcd4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    dcd8:	cmp	w0, #0x0
    dcdc:	b.eq	dcfc <PyFloat_FromString@plt+0x71ac>  // b.none
    dce0:	ldr	x2, [sp, #64]
    dce4:	mov	w1, #0xf0e                 	// #3854
    dce8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dcec:	add	x0, x0, #0x9c0
    dcf0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dcf4:	mov	x0, #0x0                   	// #0
    dcf8:	b	dd00 <PyFloat_FromString@plt+0x71b0>
    dcfc:	ldr	x0, [sp, #64]
    dd00:	ldp	x29, x30, [sp], #80
    dd04:	ret
    dd08:	stp	x29, x30, [sp, #-48]!
    dd0c:	mov	x29, sp
    dd10:	str	x0, [sp, #24]
    dd14:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    dd18:	str	x0, [sp, #40]
    dd1c:	ldr	x0, [sp, #40]
    dd20:	cmp	x0, #0x0
    dd24:	b.ne	dd30 <PyFloat_FromString@plt+0x71e0>  // b.any
    dd28:	mov	x0, #0x0                   	// #0
    dd2c:	b	dd54 <PyFloat_FromString@plt+0x7204>
    dd30:	ldr	x2, [sp, #40]
    dd34:	mov	w1, #0xf15                 	// #3861
    dd38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dd3c:	add	x0, x0, #0x9c0
    dd40:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dd44:	mov	w2, #0x1                   	// #1
    dd48:	ldr	x1, [sp, #40]
    dd4c:	ldr	x0, [sp, #24]
    dd50:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
    dd54:	ldp	x29, x30, [sp], #48
    dd58:	ret
    dd5c:	stp	x29, x30, [sp, #-32]!
    dd60:	mov	x29, sp
    dd64:	str	x0, [sp, #24]
    dd68:	ldr	x0, [sp, #24]
    dd6c:	add	x0, x0, #0x18
    dd70:	bl	25454 <PyInit__decimal@@Base+0xd77c>
    dd74:	cmp	w0, #0x0
    dd78:	cset	w0, eq  // eq = none
    dd7c:	and	w0, w0, #0xff
    dd80:	ldp	x29, x30, [sp], #32
    dd84:	ret
    dd88:	stp	x29, x30, [sp, #-96]!
    dd8c:	mov	x29, sp
    dd90:	str	x0, [sp, #24]
    dd94:	str	x1, [sp, #16]
    dd98:	str	wzr, [sp, #44]
    dd9c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    dda0:	str	x0, [sp, #88]
    dda4:	ldr	x0, [sp, #88]
    dda8:	cmp	x0, #0x0
    ddac:	b.ne	ddb8 <PyFloat_FromString@plt+0x7268>  // b.any
    ddb0:	mov	x0, #0x0                   	// #0
    ddb4:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    ddb8:	ldr	x2, [sp, #88]
    ddbc:	mov	w1, #0xf28                 	// #3880
    ddc0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ddc4:	add	x0, x0, #0x9c0
    ddc8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ddcc:	add	x0, sp, #0x38
    ddd0:	ldr	x3, [sp, #88]
    ddd4:	ldr	x2, [sp, #24]
    ddd8:	mov	x1, x0
    dddc:	mov	w0, #0x0                   	// #0
    dde0:	bl	b168 <PyFloat_FromString@plt+0x4618>
    dde4:	cmp	w0, #0x0
    dde8:	b.ne	ddf4 <PyFloat_FromString@plt+0x72a4>  // b.any
    ddec:	ldr	x0, [sp, #56]
    ddf0:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    ddf4:	add	x0, sp, #0x30
    ddf8:	ldr	x3, [sp, #88]
    ddfc:	ldr	x2, [sp, #16]
    de00:	mov	x1, x0
    de04:	mov	w0, #0x0                   	// #0
    de08:	bl	b168 <PyFloat_FromString@plt+0x4618>
    de0c:	cmp	w0, #0x0
    de10:	b.ne	de34 <PyFloat_FromString@plt+0x72e4>  // b.any
    de14:	ldr	x0, [sp, #56]
    de18:	mov	x2, x0
    de1c:	mov	w1, #0xf29                 	// #3881
    de20:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    de24:	add	x0, x0, #0x9c0
    de28:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    de2c:	ldr	x0, [sp, #48]
    de30:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    de34:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    de38:	add	x0, x0, #0x360
    de3c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    de40:	str	x0, [sp, #80]
    de44:	ldr	x0, [sp, #80]
    de48:	cmp	x0, #0x0
    de4c:	b.ne	de88 <PyFloat_FromString@plt+0x7338>  // b.any
    de50:	ldr	x0, [sp, #56]
    de54:	mov	x2, x0
    de58:	mov	w1, #0xf2d                 	// #3885
    de5c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    de60:	add	x0, x0, #0x9c0
    de64:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    de68:	ldr	x0, [sp, #48]
    de6c:	mov	x2, x0
    de70:	mov	w1, #0xf2e                 	// #3886
    de74:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    de78:	add	x0, x0, #0x9c0
    de7c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    de80:	mov	x0, #0x0                   	// #0
    de84:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    de88:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    de8c:	add	x0, x0, #0x360
    de90:	bl	912c <PyFloat_FromString@plt+0x25dc>
    de94:	str	x0, [sp, #72]
    de98:	ldr	x0, [sp, #72]
    de9c:	cmp	x0, #0x0
    dea0:	b.ne	def0 <PyFloat_FromString@plt+0x73a0>  // b.any
    dea4:	ldr	x0, [sp, #56]
    dea8:	mov	x2, x0
    deac:	mov	w1, #0xf33                 	// #3891
    deb0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    deb4:	add	x0, x0, #0x9c0
    deb8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    debc:	ldr	x0, [sp, #48]
    dec0:	mov	x2, x0
    dec4:	mov	w1, #0xf34                 	// #3892
    dec8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    decc:	add	x0, x0, #0x9c0
    ded0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ded4:	ldr	x2, [sp, #80]
    ded8:	mov	w1, #0xf35                 	// #3893
    dedc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dee0:	add	x0, x0, #0x9c0
    dee4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dee8:	mov	x0, #0x0                   	// #0
    deec:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    def0:	ldr	x0, [sp, #80]
    def4:	add	x6, x0, #0x18
    def8:	ldr	x0, [sp, #72]
    defc:	add	x1, x0, #0x18
    df00:	ldr	x0, [sp, #56]
    df04:	add	x2, x0, #0x18
    df08:	ldr	x0, [sp, #48]
    df0c:	add	x3, x0, #0x18
    df10:	ldr	x0, [sp, #88]
    df14:	add	x0, x0, #0x10
    df18:	add	x4, sp, #0x2c
    df1c:	mov	x5, x4
    df20:	mov	x4, x0
    df24:	mov	x0, x6
    df28:	bl	31488 <PyInit__decimal@@Base+0x197b0>
    df2c:	ldr	x0, [sp, #56]
    df30:	mov	x2, x0
    df34:	mov	w1, #0xf3a                 	// #3898
    df38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    df3c:	add	x0, x0, #0x9c0
    df40:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    df44:	ldr	x0, [sp, #48]
    df48:	mov	x2, x0
    df4c:	mov	w1, #0xf3b                 	// #3899
    df50:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    df54:	add	x0, x0, #0x9c0
    df58:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    df5c:	ldr	w0, [sp, #44]
    df60:	mov	w1, w0
    df64:	ldr	x0, [sp, #88]
    df68:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    df6c:	cmp	w0, #0x0
    df70:	b.eq	dfa4 <PyFloat_FromString@plt+0x7454>  // b.none
    df74:	ldr	x2, [sp, #72]
    df78:	mov	w1, #0xf3d                 	// #3901
    df7c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    df80:	add	x0, x0, #0x9c0
    df84:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    df88:	ldr	x2, [sp, #80]
    df8c:	mov	w1, #0xf3e                 	// #3902
    df90:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    df94:	add	x0, x0, #0x9c0
    df98:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    df9c:	mov	x0, #0x0                   	// #0
    dfa0:	b	dfe8 <PyFloat_FromString@plt+0x7498>
    dfa4:	ldr	x2, [sp, #72]
    dfa8:	ldr	x1, [sp, #80]
    dfac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    dfb0:	add	x0, x0, #0x300
    dfb4:	bl	6870 <Py_BuildValue@plt>
    dfb8:	str	x0, [sp, #64]
    dfbc:	ldr	x2, [sp, #72]
    dfc0:	mov	w1, #0xf43                 	// #3907
    dfc4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dfc8:	add	x0, x0, #0x9c0
    dfcc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dfd0:	ldr	x2, [sp, #80]
    dfd4:	mov	w1, #0xf44                 	// #3908
    dfd8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    dfdc:	add	x0, x0, #0x9c0
    dfe0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    dfe4:	ldr	x0, [sp, #64]
    dfe8:	ldp	x29, x30, [sp], #96
    dfec:	ret
    dff0:	stp	x29, x30, [sp, #-96]!
    dff4:	mov	x29, sp
    dff8:	str	x0, [sp, #40]
    dffc:	str	x1, [sp, #32]
    e000:	str	x2, [sp, #24]
    e004:	str	xzr, [sp, #56]
    e008:	str	wzr, [sp, #52]
    e00c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e010:	str	x0, [sp, #88]
    e014:	ldr	x0, [sp, #88]
    e018:	cmp	x0, #0x0
    e01c:	b.ne	e028 <PyFloat_FromString@plt+0x74d8>  // b.any
    e020:	mov	x0, #0x0                   	// #0
    e024:	b	e26c <PyFloat_FromString@plt+0x771c>
    e028:	ldr	x2, [sp, #88]
    e02c:	mov	w1, #0xf50                 	// #3920
    e030:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e034:	add	x0, x0, #0x9c0
    e038:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e03c:	add	x0, sp, #0x48
    e040:	ldr	x3, [sp, #88]
    e044:	ldr	x2, [sp, #40]
    e048:	mov	x1, x0
    e04c:	mov	w0, #0x0                   	// #0
    e050:	bl	b168 <PyFloat_FromString@plt+0x4618>
    e054:	cmp	w0, #0x0
    e058:	b.ne	e064 <PyFloat_FromString@plt+0x7514>  // b.any
    e05c:	ldr	x0, [sp, #72]
    e060:	b	e26c <PyFloat_FromString@plt+0x771c>
    e064:	add	x0, sp, #0x40
    e068:	ldr	x3, [sp, #88]
    e06c:	ldr	x2, [sp, #32]
    e070:	mov	x1, x0
    e074:	mov	w0, #0x0                   	// #0
    e078:	bl	b168 <PyFloat_FromString@plt+0x4618>
    e07c:	cmp	w0, #0x0
    e080:	b.ne	e0a4 <PyFloat_FromString@plt+0x7554>  // b.any
    e084:	ldr	x0, [sp, #72]
    e088:	mov	x2, x0
    e08c:	mov	w1, #0xf51                 	// #3921
    e090:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e094:	add	x0, x0, #0x9c0
    e098:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e09c:	ldr	x0, [sp, #64]
    e0a0:	b	e26c <PyFloat_FromString@plt+0x771c>
    e0a4:	ldr	x1, [sp, #24]
    e0a8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e0ac:	ldr	x0, [x0, #4008]
    e0b0:	cmp	x1, x0
    e0b4:	b.eq	e110 <PyFloat_FromString@plt+0x75c0>  // b.none
    e0b8:	add	x0, sp, #0x38
    e0bc:	ldr	x3, [sp, #88]
    e0c0:	ldr	x2, [sp, #24]
    e0c4:	mov	x1, x0
    e0c8:	mov	w0, #0x0                   	// #0
    e0cc:	bl	b168 <PyFloat_FromString@plt+0x4618>
    e0d0:	cmp	w0, #0x0
    e0d4:	b.ne	e110 <PyFloat_FromString@plt+0x75c0>  // b.any
    e0d8:	ldr	x0, [sp, #72]
    e0dc:	mov	x2, x0
    e0e0:	mov	w1, #0xf55                 	// #3925
    e0e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e0e8:	add	x0, x0, #0x9c0
    e0ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e0f0:	ldr	x0, [sp, #64]
    e0f4:	mov	x2, x0
    e0f8:	mov	w1, #0xf56                 	// #3926
    e0fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e100:	add	x0, x0, #0x9c0
    e104:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e108:	ldr	x0, [sp, #56]
    e10c:	b	e26c <PyFloat_FromString@plt+0x771c>
    e110:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e114:	add	x0, x0, #0x360
    e118:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e11c:	str	x0, [sp, #80]
    e120:	ldr	x0, [sp, #80]
    e124:	cmp	x0, #0x0
    e128:	b.ne	e16c <PyFloat_FromString@plt+0x761c>  // b.any
    e12c:	ldr	x0, [sp, #72]
    e130:	mov	x2, x0
    e134:	mov	w1, #0xf5d                 	// #3933
    e138:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e13c:	add	x0, x0, #0x9c0
    e140:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e144:	ldr	x0, [sp, #64]
    e148:	mov	x2, x0
    e14c:	mov	w1, #0xf5e                 	// #3934
    e150:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e154:	add	x0, x0, #0x9c0
    e158:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e15c:	ldr	x0, [sp, #56]
    e160:	bl	6d64 <PyFloat_FromString@plt+0x214>
    e164:	mov	x0, #0x0                   	// #0
    e168:	b	e26c <PyFloat_FromString@plt+0x771c>
    e16c:	ldr	x0, [sp, #56]
    e170:	cmp	x0, #0x0
    e174:	b.ne	e1b0 <PyFloat_FromString@plt+0x7660>  // b.any
    e178:	ldr	x0, [sp, #80]
    e17c:	add	x5, x0, #0x18
    e180:	ldr	x0, [sp, #72]
    e184:	add	x1, x0, #0x18
    e188:	ldr	x0, [sp, #64]
    e18c:	add	x2, x0, #0x18
    e190:	ldr	x0, [sp, #88]
    e194:	add	x0, x0, #0x10
    e198:	add	x3, sp, #0x34
    e19c:	mov	x4, x3
    e1a0:	mov	x3, x0
    e1a4:	mov	x0, x5
    e1a8:	bl	38bc0 <PyInit__decimal@@Base+0x20ee8>
    e1ac:	b	e204 <PyFloat_FromString@plt+0x76b4>
    e1b0:	ldr	x0, [sp, #80]
    e1b4:	add	x6, x0, #0x18
    e1b8:	ldr	x0, [sp, #72]
    e1bc:	add	x1, x0, #0x18
    e1c0:	ldr	x0, [sp, #64]
    e1c4:	add	x2, x0, #0x18
    e1c8:	ldr	x0, [sp, #56]
    e1cc:	add	x3, x0, #0x18
    e1d0:	ldr	x0, [sp, #88]
    e1d4:	add	x0, x0, #0x10
    e1d8:	add	x4, sp, #0x34
    e1dc:	mov	x5, x4
    e1e0:	mov	x4, x0
    e1e4:	mov	x0, x6
    e1e8:	bl	3927c <PyInit__decimal@@Base+0x215a4>
    e1ec:	ldr	x0, [sp, #56]
    e1f0:	mov	x2, x0
    e1f4:	mov	w1, #0xf6a                 	// #3946
    e1f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e1fc:	add	x0, x0, #0x9c0
    e200:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e204:	ldr	x0, [sp, #72]
    e208:	mov	x2, x0
    e20c:	mov	w1, #0xf6c                 	// #3948
    e210:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e214:	add	x0, x0, #0x9c0
    e218:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e21c:	ldr	x0, [sp, #64]
    e220:	mov	x2, x0
    e224:	mov	w1, #0xf6d                 	// #3949
    e228:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e22c:	add	x0, x0, #0x9c0
    e230:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e234:	ldr	w0, [sp, #52]
    e238:	mov	w1, w0
    e23c:	ldr	x0, [sp, #88]
    e240:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    e244:	cmp	w0, #0x0
    e248:	b.eq	e268 <PyFloat_FromString@plt+0x7718>  // b.none
    e24c:	ldr	x2, [sp, #80]
    e250:	mov	w1, #0xf6f                 	// #3951
    e254:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e258:	add	x0, x0, #0x9c0
    e25c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e260:	mov	x0, #0x0                   	// #0
    e264:	b	e26c <PyFloat_FromString@plt+0x771c>
    e268:	ldr	x0, [sp, #80]
    e26c:	ldp	x29, x30, [sp], #96
    e270:	ret
    e274:	stp	x29, x30, [sp, #-80]!
    e278:	mov	x29, sp
    e27c:	str	x0, [sp, #40]
    e280:	str	x1, [sp, #32]
    e284:	str	x2, [sp, #24]
    e288:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e28c:	ldr	x0, [x0, #4008]
    e290:	str	x0, [sp, #64]
    e294:	str	wzr, [sp, #60]
    e298:	add	x0, sp, #0x40
    e29c:	mov	x4, x0
    e2a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    e2a4:	add	x3, x0, #0x2a8
    e2a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e2ac:	add	x2, x0, #0xdf8
    e2b0:	ldr	x1, [sp, #24]
    e2b4:	ldr	x0, [sp, #32]
    e2b8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    e2bc:	cmp	w0, #0x0
    e2c0:	b.ne	e2cc <PyFloat_FromString@plt+0x777c>  // b.any
    e2c4:	mov	x0, #0x0                   	// #0
    e2c8:	b	e3f8 <PyFloat_FromString@plt+0x78a8>
    e2cc:	ldr	x1, [sp, #64]
    e2d0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e2d4:	ldr	x0, [x0, #4008]
    e2d8:	cmp	x1, x0
    e2dc:	b.ne	e318 <PyFloat_FromString@plt+0x77c8>  // b.any
    e2e0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e2e4:	str	x0, [sp, #64]
    e2e8:	ldr	x0, [sp, #64]
    e2ec:	cmp	x0, #0x0
    e2f0:	b.ne	e2fc <PyFloat_FromString@plt+0x77ac>  // b.any
    e2f4:	mov	x0, #0x0                   	// #0
    e2f8:	b	e3f8 <PyFloat_FromString@plt+0x78a8>
    e2fc:	ldr	x0, [sp, #64]
    e300:	mov	x2, x0
    e304:	mov	w1, #0xf7c                 	// #3964
    e308:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e30c:	add	x0, x0, #0x9c0
    e310:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e314:	b	e374 <PyFloat_FromString@plt+0x7824>
    e318:	ldr	x0, [sp, #64]
    e31c:	ldr	x1, [x0, #8]
    e320:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e324:	add	x0, x0, #0x500
    e328:	cmp	x1, x0
    e32c:	b.eq	e374 <PyFloat_FromString@plt+0x7824>  // b.none
    e330:	ldr	x0, [sp, #64]
    e334:	ldr	x2, [x0, #8]
    e338:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e33c:	add	x1, x0, #0x500
    e340:	mov	x0, x2
    e344:	bl	6a70 <PyType_IsSubtype@plt>
    e348:	cmp	w0, #0x0
    e34c:	b.ne	e374 <PyFloat_FromString@plt+0x7824>  // b.any
    e350:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e354:	ldr	x0, [x0, #3936]
    e358:	ldr	x2, [x0]
    e35c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e360:	add	x1, x0, #0xe00
    e364:	mov	x0, x2
    e368:	bl	66f0 <PyErr_SetString@plt>
    e36c:	mov	x0, #0x0                   	// #0
    e370:	b	e3f8 <PyFloat_FromString@plt+0x78a8>
    e374:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e378:	add	x0, x0, #0x360
    e37c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e380:	str	x0, [sp, #72]
    e384:	ldr	x0, [sp, #72]
    e388:	cmp	x0, #0x0
    e38c:	b.ne	e398 <PyFloat_FromString@plt+0x7848>  // b.any
    e390:	mov	x0, #0x0                   	// #0
    e394:	b	e3f8 <PyFloat_FromString@plt+0x78a8>
    e398:	ldr	x0, [sp, #72]
    e39c:	add	x4, x0, #0x18
    e3a0:	ldr	x0, [sp, #40]
    e3a4:	add	x1, x0, #0x18
    e3a8:	ldr	x0, [sp, #64]
    e3ac:	add	x0, x0, #0x10
    e3b0:	add	x2, sp, #0x3c
    e3b4:	mov	x3, x2
    e3b8:	mov	x2, x0
    e3bc:	mov	x0, x4
    e3c0:	bl	327f8 <PyInit__decimal@@Base+0x1ab20>
    e3c4:	ldr	x0, [sp, #64]
    e3c8:	ldr	w1, [sp, #60]
    e3cc:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    e3d0:	cmp	w0, #0x0
    e3d4:	b.eq	e3f4 <PyFloat_FromString@plt+0x78a4>  // b.none
    e3d8:	ldr	x2, [sp, #72]
    e3dc:	mov	w1, #0xf7c                 	// #3964
    e3e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e3e4:	add	x0, x0, #0x9c0
    e3e8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e3ec:	mov	x0, #0x0                   	// #0
    e3f0:	b	e3f8 <PyFloat_FromString@plt+0x78a8>
    e3f4:	ldr	x0, [sp, #72]
    e3f8:	ldp	x29, x30, [sp], #80
    e3fc:	ret
    e400:	stp	x29, x30, [sp, #-80]!
    e404:	mov	x29, sp
    e408:	str	x0, [sp, #40]
    e40c:	str	x1, [sp, #32]
    e410:	str	x2, [sp, #24]
    e414:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e418:	ldr	x0, [x0, #4008]
    e41c:	str	x0, [sp, #64]
    e420:	str	wzr, [sp, #60]
    e424:	add	x0, sp, #0x40
    e428:	mov	x4, x0
    e42c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    e430:	add	x3, x0, #0x2b8
    e434:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e438:	add	x2, x0, #0xdf8
    e43c:	ldr	x1, [sp, #24]
    e440:	ldr	x0, [sp, #32]
    e444:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    e448:	cmp	w0, #0x0
    e44c:	b.ne	e458 <PyFloat_FromString@plt+0x7908>  // b.any
    e450:	mov	x0, #0x0                   	// #0
    e454:	b	e584 <PyFloat_FromString@plt+0x7a34>
    e458:	ldr	x1, [sp, #64]
    e45c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e460:	ldr	x0, [x0, #4008]
    e464:	cmp	x1, x0
    e468:	b.ne	e4a4 <PyFloat_FromString@plt+0x7954>  // b.any
    e46c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e470:	str	x0, [sp, #64]
    e474:	ldr	x0, [sp, #64]
    e478:	cmp	x0, #0x0
    e47c:	b.ne	e488 <PyFloat_FromString@plt+0x7938>  // b.any
    e480:	mov	x0, #0x0                   	// #0
    e484:	b	e584 <PyFloat_FromString@plt+0x7a34>
    e488:	ldr	x0, [sp, #64]
    e48c:	mov	x2, x0
    e490:	mov	w1, #0xf7d                 	// #3965
    e494:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e498:	add	x0, x0, #0x9c0
    e49c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e4a0:	b	e500 <PyFloat_FromString@plt+0x79b0>
    e4a4:	ldr	x0, [sp, #64]
    e4a8:	ldr	x1, [x0, #8]
    e4ac:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e4b0:	add	x0, x0, #0x500
    e4b4:	cmp	x1, x0
    e4b8:	b.eq	e500 <PyFloat_FromString@plt+0x79b0>  // b.none
    e4bc:	ldr	x0, [sp, #64]
    e4c0:	ldr	x2, [x0, #8]
    e4c4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e4c8:	add	x1, x0, #0x500
    e4cc:	mov	x0, x2
    e4d0:	bl	6a70 <PyType_IsSubtype@plt>
    e4d4:	cmp	w0, #0x0
    e4d8:	b.ne	e500 <PyFloat_FromString@plt+0x79b0>  // b.any
    e4dc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e4e0:	ldr	x0, [x0, #3936]
    e4e4:	ldr	x2, [x0]
    e4e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e4ec:	add	x1, x0, #0xe00
    e4f0:	mov	x0, x2
    e4f4:	bl	66f0 <PyErr_SetString@plt>
    e4f8:	mov	x0, #0x0                   	// #0
    e4fc:	b	e584 <PyFloat_FromString@plt+0x7a34>
    e500:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e504:	add	x0, x0, #0x360
    e508:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e50c:	str	x0, [sp, #72]
    e510:	ldr	x0, [sp, #72]
    e514:	cmp	x0, #0x0
    e518:	b.ne	e524 <PyFloat_FromString@plt+0x79d4>  // b.any
    e51c:	mov	x0, #0x0                   	// #0
    e520:	b	e584 <PyFloat_FromString@plt+0x7a34>
    e524:	ldr	x0, [sp, #72]
    e528:	add	x4, x0, #0x18
    e52c:	ldr	x0, [sp, #40]
    e530:	add	x1, x0, #0x18
    e534:	ldr	x0, [sp, #64]
    e538:	add	x0, x0, #0x10
    e53c:	add	x2, sp, #0x3c
    e540:	mov	x3, x2
    e544:	mov	x2, x0
    e548:	mov	x0, x4
    e54c:	bl	33b74 <PyInit__decimal@@Base+0x1be9c>
    e550:	ldr	x0, [sp, #64]
    e554:	ldr	w1, [sp, #60]
    e558:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    e55c:	cmp	w0, #0x0
    e560:	b.eq	e580 <PyFloat_FromString@plt+0x7a30>  // b.none
    e564:	ldr	x2, [sp, #72]
    e568:	mov	w1, #0xf7d                 	// #3965
    e56c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e570:	add	x0, x0, #0x9c0
    e574:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e578:	mov	x0, #0x0                   	// #0
    e57c:	b	e584 <PyFloat_FromString@plt+0x7a34>
    e580:	ldr	x0, [sp, #72]
    e584:	ldp	x29, x30, [sp], #80
    e588:	ret
    e58c:	stp	x29, x30, [sp, #-80]!
    e590:	mov	x29, sp
    e594:	str	x0, [sp, #40]
    e598:	str	x1, [sp, #32]
    e59c:	str	x2, [sp, #24]
    e5a0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e5a4:	ldr	x0, [x0, #4008]
    e5a8:	str	x0, [sp, #64]
    e5ac:	str	wzr, [sp, #60]
    e5b0:	add	x0, sp, #0x40
    e5b4:	mov	x4, x0
    e5b8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    e5bc:	add	x3, x0, #0x2c8
    e5c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e5c4:	add	x2, x0, #0xdf8
    e5c8:	ldr	x1, [sp, #24]
    e5cc:	ldr	x0, [sp, #32]
    e5d0:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    e5d4:	cmp	w0, #0x0
    e5d8:	b.ne	e5e4 <PyFloat_FromString@plt+0x7a94>  // b.any
    e5dc:	mov	x0, #0x0                   	// #0
    e5e0:	b	e710 <PyFloat_FromString@plt+0x7bc0>
    e5e4:	ldr	x1, [sp, #64]
    e5e8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e5ec:	ldr	x0, [x0, #4008]
    e5f0:	cmp	x1, x0
    e5f4:	b.ne	e630 <PyFloat_FromString@plt+0x7ae0>  // b.any
    e5f8:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e5fc:	str	x0, [sp, #64]
    e600:	ldr	x0, [sp, #64]
    e604:	cmp	x0, #0x0
    e608:	b.ne	e614 <PyFloat_FromString@plt+0x7ac4>  // b.any
    e60c:	mov	x0, #0x0                   	// #0
    e610:	b	e710 <PyFloat_FromString@plt+0x7bc0>
    e614:	ldr	x0, [sp, #64]
    e618:	mov	x2, x0
    e61c:	mov	w1, #0xf7e                 	// #3966
    e620:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e624:	add	x0, x0, #0x9c0
    e628:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e62c:	b	e68c <PyFloat_FromString@plt+0x7b3c>
    e630:	ldr	x0, [sp, #64]
    e634:	ldr	x1, [x0, #8]
    e638:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e63c:	add	x0, x0, #0x500
    e640:	cmp	x1, x0
    e644:	b.eq	e68c <PyFloat_FromString@plt+0x7b3c>  // b.none
    e648:	ldr	x0, [sp, #64]
    e64c:	ldr	x2, [x0, #8]
    e650:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e654:	add	x1, x0, #0x500
    e658:	mov	x0, x2
    e65c:	bl	6a70 <PyType_IsSubtype@plt>
    e660:	cmp	w0, #0x0
    e664:	b.ne	e68c <PyFloat_FromString@plt+0x7b3c>  // b.any
    e668:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e66c:	ldr	x0, [x0, #3936]
    e670:	ldr	x2, [x0]
    e674:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e678:	add	x1, x0, #0xe00
    e67c:	mov	x0, x2
    e680:	bl	66f0 <PyErr_SetString@plt>
    e684:	mov	x0, #0x0                   	// #0
    e688:	b	e710 <PyFloat_FromString@plt+0x7bc0>
    e68c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e690:	add	x0, x0, #0x360
    e694:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e698:	str	x0, [sp, #72]
    e69c:	ldr	x0, [sp, #72]
    e6a0:	cmp	x0, #0x0
    e6a4:	b.ne	e6b0 <PyFloat_FromString@plt+0x7b60>  // b.any
    e6a8:	mov	x0, #0x0                   	// #0
    e6ac:	b	e710 <PyFloat_FromString@plt+0x7bc0>
    e6b0:	ldr	x0, [sp, #72]
    e6b4:	add	x4, x0, #0x18
    e6b8:	ldr	x0, [sp, #40]
    e6bc:	add	x1, x0, #0x18
    e6c0:	ldr	x0, [sp, #64]
    e6c4:	add	x0, x0, #0x10
    e6c8:	add	x2, sp, #0x3c
    e6cc:	mov	x3, x2
    e6d0:	mov	x2, x0
    e6d4:	mov	x0, x4
    e6d8:	bl	343ec <PyInit__decimal@@Base+0x1c714>
    e6dc:	ldr	x0, [sp, #64]
    e6e0:	ldr	w1, [sp, #60]
    e6e4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    e6e8:	cmp	w0, #0x0
    e6ec:	b.eq	e70c <PyFloat_FromString@plt+0x7bbc>  // b.none
    e6f0:	ldr	x2, [sp, #72]
    e6f4:	mov	w1, #0xf7e                 	// #3966
    e6f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e6fc:	add	x0, x0, #0x9c0
    e700:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e704:	mov	x0, #0x0                   	// #0
    e708:	b	e710 <PyFloat_FromString@plt+0x7bc0>
    e70c:	ldr	x0, [sp, #72]
    e710:	ldp	x29, x30, [sp], #80
    e714:	ret
    e718:	stp	x29, x30, [sp, #-80]!
    e71c:	mov	x29, sp
    e720:	str	x0, [sp, #40]
    e724:	str	x1, [sp, #32]
    e728:	str	x2, [sp, #24]
    e72c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e730:	ldr	x0, [x0, #4008]
    e734:	str	x0, [sp, #64]
    e738:	str	wzr, [sp, #60]
    e73c:	add	x0, sp, #0x40
    e740:	mov	x4, x0
    e744:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    e748:	add	x3, x0, #0x2d8
    e74c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e750:	add	x2, x0, #0xdf8
    e754:	ldr	x1, [sp, #24]
    e758:	ldr	x0, [sp, #32]
    e75c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    e760:	cmp	w0, #0x0
    e764:	b.ne	e770 <PyFloat_FromString@plt+0x7c20>  // b.any
    e768:	mov	x0, #0x0                   	// #0
    e76c:	b	e89c <PyFloat_FromString@plt+0x7d4c>
    e770:	ldr	x1, [sp, #64]
    e774:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e778:	ldr	x0, [x0, #4008]
    e77c:	cmp	x1, x0
    e780:	b.ne	e7bc <PyFloat_FromString@plt+0x7c6c>  // b.any
    e784:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e788:	str	x0, [sp, #64]
    e78c:	ldr	x0, [sp, #64]
    e790:	cmp	x0, #0x0
    e794:	b.ne	e7a0 <PyFloat_FromString@plt+0x7c50>  // b.any
    e798:	mov	x0, #0x0                   	// #0
    e79c:	b	e89c <PyFloat_FromString@plt+0x7d4c>
    e7a0:	ldr	x0, [sp, #64]
    e7a4:	mov	x2, x0
    e7a8:	mov	w1, #0xf7f                 	// #3967
    e7ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e7b0:	add	x0, x0, #0x9c0
    e7b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e7b8:	b	e818 <PyFloat_FromString@plt+0x7cc8>
    e7bc:	ldr	x0, [sp, #64]
    e7c0:	ldr	x1, [x0, #8]
    e7c4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e7c8:	add	x0, x0, #0x500
    e7cc:	cmp	x1, x0
    e7d0:	b.eq	e818 <PyFloat_FromString@plt+0x7cc8>  // b.none
    e7d4:	ldr	x0, [sp, #64]
    e7d8:	ldr	x2, [x0, #8]
    e7dc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e7e0:	add	x1, x0, #0x500
    e7e4:	mov	x0, x2
    e7e8:	bl	6a70 <PyType_IsSubtype@plt>
    e7ec:	cmp	w0, #0x0
    e7f0:	b.ne	e818 <PyFloat_FromString@plt+0x7cc8>  // b.any
    e7f4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e7f8:	ldr	x0, [x0, #3936]
    e7fc:	ldr	x2, [x0]
    e800:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e804:	add	x1, x0, #0xe00
    e808:	mov	x0, x2
    e80c:	bl	66f0 <PyErr_SetString@plt>
    e810:	mov	x0, #0x0                   	// #0
    e814:	b	e89c <PyFloat_FromString@plt+0x7d4c>
    e818:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e81c:	add	x0, x0, #0x360
    e820:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e824:	str	x0, [sp, #72]
    e828:	ldr	x0, [sp, #72]
    e82c:	cmp	x0, #0x0
    e830:	b.ne	e83c <PyFloat_FromString@plt+0x7cec>  // b.any
    e834:	mov	x0, #0x0                   	// #0
    e838:	b	e89c <PyFloat_FromString@plt+0x7d4c>
    e83c:	ldr	x0, [sp, #72]
    e840:	add	x4, x0, #0x18
    e844:	ldr	x0, [sp, #40]
    e848:	add	x1, x0, #0x18
    e84c:	ldr	x0, [sp, #64]
    e850:	add	x0, x0, #0x10
    e854:	add	x2, sp, #0x3c
    e858:	mov	x3, x2
    e85c:	mov	x2, x0
    e860:	mov	x0, x4
    e864:	bl	373f4 <PyInit__decimal@@Base+0x1f71c>
    e868:	ldr	x0, [sp, #64]
    e86c:	ldr	w1, [sp, #60]
    e870:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    e874:	cmp	w0, #0x0
    e878:	b.eq	e898 <PyFloat_FromString@plt+0x7d48>  // b.none
    e87c:	ldr	x2, [sp, #72]
    e880:	mov	w1, #0xf7f                 	// #3967
    e884:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e888:	add	x0, x0, #0x9c0
    e88c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e890:	mov	x0, #0x0                   	// #0
    e894:	b	e89c <PyFloat_FromString@plt+0x7d4c>
    e898:	ldr	x0, [sp, #72]
    e89c:	ldp	x29, x30, [sp], #80
    e8a0:	ret
    e8a4:	stp	x29, x30, [sp, #-80]!
    e8a8:	mov	x29, sp
    e8ac:	str	x0, [sp, #40]
    e8b0:	str	x1, [sp, #32]
    e8b4:	str	x2, [sp, #24]
    e8b8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e8bc:	ldr	x0, [x0, #4008]
    e8c0:	str	x0, [sp, #64]
    e8c4:	str	wzr, [sp, #60]
    e8c8:	add	x0, sp, #0x40
    e8cc:	mov	x4, x0
    e8d0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    e8d4:	add	x3, x0, #0x2e8
    e8d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e8dc:	add	x2, x0, #0xdf8
    e8e0:	ldr	x1, [sp, #24]
    e8e4:	ldr	x0, [sp, #32]
    e8e8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    e8ec:	cmp	w0, #0x0
    e8f0:	b.ne	e8fc <PyFloat_FromString@plt+0x7dac>  // b.any
    e8f4:	mov	x0, #0x0                   	// #0
    e8f8:	b	ea28 <PyFloat_FromString@plt+0x7ed8>
    e8fc:	ldr	x1, [sp, #64]
    e900:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e904:	ldr	x0, [x0, #4008]
    e908:	cmp	x1, x0
    e90c:	b.ne	e948 <PyFloat_FromString@plt+0x7df8>  // b.any
    e910:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    e914:	str	x0, [sp, #64]
    e918:	ldr	x0, [sp, #64]
    e91c:	cmp	x0, #0x0
    e920:	b.ne	e92c <PyFloat_FromString@plt+0x7ddc>  // b.any
    e924:	mov	x0, #0x0                   	// #0
    e928:	b	ea28 <PyFloat_FromString@plt+0x7ed8>
    e92c:	ldr	x0, [sp, #64]
    e930:	mov	x2, x0
    e934:	mov	w1, #0xf80                 	// #3968
    e938:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e93c:	add	x0, x0, #0x9c0
    e940:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    e944:	b	e9a4 <PyFloat_FromString@plt+0x7e54>
    e948:	ldr	x0, [sp, #64]
    e94c:	ldr	x1, [x0, #8]
    e950:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e954:	add	x0, x0, #0x500
    e958:	cmp	x1, x0
    e95c:	b.eq	e9a4 <PyFloat_FromString@plt+0x7e54>  // b.none
    e960:	ldr	x0, [sp, #64]
    e964:	ldr	x2, [x0, #8]
    e968:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e96c:	add	x1, x0, #0x500
    e970:	mov	x0, x2
    e974:	bl	6a70 <PyType_IsSubtype@plt>
    e978:	cmp	w0, #0x0
    e97c:	b.ne	e9a4 <PyFloat_FromString@plt+0x7e54>  // b.any
    e980:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    e984:	ldr	x0, [x0, #3936]
    e988:	ldr	x2, [x0]
    e98c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    e990:	add	x1, x0, #0xe00
    e994:	mov	x0, x2
    e998:	bl	66f0 <PyErr_SetString@plt>
    e99c:	mov	x0, #0x0                   	// #0
    e9a0:	b	ea28 <PyFloat_FromString@plt+0x7ed8>
    e9a4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    e9a8:	add	x0, x0, #0x360
    e9ac:	bl	912c <PyFloat_FromString@plt+0x25dc>
    e9b0:	str	x0, [sp, #72]
    e9b4:	ldr	x0, [sp, #72]
    e9b8:	cmp	x0, #0x0
    e9bc:	b.ne	e9c8 <PyFloat_FromString@plt+0x7e78>  // b.any
    e9c0:	mov	x0, #0x0                   	// #0
    e9c4:	b	ea28 <PyFloat_FromString@plt+0x7ed8>
    e9c8:	ldr	x0, [sp, #72]
    e9cc:	add	x4, x0, #0x18
    e9d0:	ldr	x0, [sp, #40]
    e9d4:	add	x1, x0, #0x18
    e9d8:	ldr	x0, [sp, #64]
    e9dc:	add	x0, x0, #0x10
    e9e0:	add	x2, sp, #0x3c
    e9e4:	mov	x3, x2
    e9e8:	mov	x2, x0
    e9ec:	mov	x0, x4
    e9f0:	bl	37630 <PyInit__decimal@@Base+0x1f958>
    e9f4:	ldr	x0, [sp, #64]
    e9f8:	ldr	w1, [sp, #60]
    e9fc:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ea00:	cmp	w0, #0x0
    ea04:	b.eq	ea24 <PyFloat_FromString@plt+0x7ed4>  // b.none
    ea08:	ldr	x2, [sp, #72]
    ea0c:	mov	w1, #0xf80                 	// #3968
    ea10:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ea14:	add	x0, x0, #0x9c0
    ea18:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ea1c:	mov	x0, #0x0                   	// #0
    ea20:	b	ea28 <PyFloat_FromString@plt+0x7ed8>
    ea24:	ldr	x0, [sp, #72]
    ea28:	ldp	x29, x30, [sp], #80
    ea2c:	ret
    ea30:	stp	x29, x30, [sp, #-80]!
    ea34:	mov	x29, sp
    ea38:	str	x0, [sp, #40]
    ea3c:	str	x1, [sp, #32]
    ea40:	str	x2, [sp, #24]
    ea44:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ea48:	ldr	x0, [x0, #4008]
    ea4c:	str	x0, [sp, #64]
    ea50:	str	wzr, [sp, #60]
    ea54:	add	x0, sp, #0x40
    ea58:	mov	x4, x0
    ea5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    ea60:	add	x3, x0, #0x2f8
    ea64:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ea68:	add	x2, x0, #0xdf8
    ea6c:	ldr	x1, [sp, #24]
    ea70:	ldr	x0, [sp, #32]
    ea74:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    ea78:	cmp	w0, #0x0
    ea7c:	b.ne	ea88 <PyFloat_FromString@plt+0x7f38>  // b.any
    ea80:	mov	x0, #0x0                   	// #0
    ea84:	b	ebb4 <PyFloat_FromString@plt+0x8064>
    ea88:	ldr	x1, [sp, #64]
    ea8c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ea90:	ldr	x0, [x0, #4008]
    ea94:	cmp	x1, x0
    ea98:	b.ne	ead4 <PyFloat_FromString@plt+0x7f84>  // b.any
    ea9c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    eaa0:	str	x0, [sp, #64]
    eaa4:	ldr	x0, [sp, #64]
    eaa8:	cmp	x0, #0x0
    eaac:	b.ne	eab8 <PyFloat_FromString@plt+0x7f68>  // b.any
    eab0:	mov	x0, #0x0                   	// #0
    eab4:	b	ebb4 <PyFloat_FromString@plt+0x8064>
    eab8:	ldr	x0, [sp, #64]
    eabc:	mov	x2, x0
    eac0:	mov	w1, #0xf81                 	// #3969
    eac4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eac8:	add	x0, x0, #0x9c0
    eacc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ead0:	b	eb30 <PyFloat_FromString@plt+0x7fe0>
    ead4:	ldr	x0, [sp, #64]
    ead8:	ldr	x1, [x0, #8]
    eadc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    eae0:	add	x0, x0, #0x500
    eae4:	cmp	x1, x0
    eae8:	b.eq	eb30 <PyFloat_FromString@plt+0x7fe0>  // b.none
    eaec:	ldr	x0, [sp, #64]
    eaf0:	ldr	x2, [x0, #8]
    eaf4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    eaf8:	add	x1, x0, #0x500
    eafc:	mov	x0, x2
    eb00:	bl	6a70 <PyType_IsSubtype@plt>
    eb04:	cmp	w0, #0x0
    eb08:	b.ne	eb30 <PyFloat_FromString@plt+0x7fe0>  // b.any
    eb0c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    eb10:	ldr	x0, [x0, #3936]
    eb14:	ldr	x2, [x0]
    eb18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eb1c:	add	x1, x0, #0xe00
    eb20:	mov	x0, x2
    eb24:	bl	66f0 <PyErr_SetString@plt>
    eb28:	mov	x0, #0x0                   	// #0
    eb2c:	b	ebb4 <PyFloat_FromString@plt+0x8064>
    eb30:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    eb34:	add	x0, x0, #0x360
    eb38:	bl	912c <PyFloat_FromString@plt+0x25dc>
    eb3c:	str	x0, [sp, #72]
    eb40:	ldr	x0, [sp, #72]
    eb44:	cmp	x0, #0x0
    eb48:	b.ne	eb54 <PyFloat_FromString@plt+0x8004>  // b.any
    eb4c:	mov	x0, #0x0                   	// #0
    eb50:	b	ebb4 <PyFloat_FromString@plt+0x8064>
    eb54:	ldr	x0, [sp, #72]
    eb58:	add	x4, x0, #0x18
    eb5c:	ldr	x0, [sp, #40]
    eb60:	add	x1, x0, #0x18
    eb64:	ldr	x0, [sp, #64]
    eb68:	add	x0, x0, #0x10
    eb6c:	add	x2, sp, #0x3c
    eb70:	mov	x3, x2
    eb74:	mov	x2, x0
    eb78:	mov	x0, x4
    eb7c:	bl	3a110 <PyInit__decimal@@Base+0x22438>
    eb80:	ldr	x0, [sp, #64]
    eb84:	ldr	w1, [sp, #60]
    eb88:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    eb8c:	cmp	w0, #0x0
    eb90:	b.eq	ebb0 <PyFloat_FromString@plt+0x8060>  // b.none
    eb94:	ldr	x2, [sp, #72]
    eb98:	mov	w1, #0xf81                 	// #3969
    eb9c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eba0:	add	x0, x0, #0x9c0
    eba4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    eba8:	mov	x0, #0x0                   	// #0
    ebac:	b	ebb4 <PyFloat_FromString@plt+0x8064>
    ebb0:	ldr	x0, [sp, #72]
    ebb4:	ldp	x29, x30, [sp], #80
    ebb8:	ret
    ebbc:	stp	x29, x30, [sp, #-80]!
    ebc0:	mov	x29, sp
    ebc4:	str	x0, [sp, #40]
    ebc8:	str	x1, [sp, #32]
    ebcc:	str	x2, [sp, #24]
    ebd0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ebd4:	ldr	x0, [x0, #4008]
    ebd8:	str	x0, [sp, #64]
    ebdc:	str	wzr, [sp, #60]
    ebe0:	add	x0, sp, #0x40
    ebe4:	mov	x4, x0
    ebe8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    ebec:	add	x3, x0, #0x308
    ebf0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ebf4:	add	x2, x0, #0xdf8
    ebf8:	ldr	x1, [sp, #24]
    ebfc:	ldr	x0, [sp, #32]
    ec00:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    ec04:	cmp	w0, #0x0
    ec08:	b.ne	ec14 <PyFloat_FromString@plt+0x80c4>  // b.any
    ec0c:	mov	x0, #0x0                   	// #0
    ec10:	b	ed40 <PyFloat_FromString@plt+0x81f0>
    ec14:	ldr	x1, [sp, #64]
    ec18:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ec1c:	ldr	x0, [x0, #4008]
    ec20:	cmp	x1, x0
    ec24:	b.ne	ec60 <PyFloat_FromString@plt+0x8110>  // b.any
    ec28:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    ec2c:	str	x0, [sp, #64]
    ec30:	ldr	x0, [sp, #64]
    ec34:	cmp	x0, #0x0
    ec38:	b.ne	ec44 <PyFloat_FromString@plt+0x80f4>  // b.any
    ec3c:	mov	x0, #0x0                   	// #0
    ec40:	b	ed40 <PyFloat_FromString@plt+0x81f0>
    ec44:	ldr	x0, [sp, #64]
    ec48:	mov	x2, x0
    ec4c:	mov	w1, #0xf82                 	// #3970
    ec50:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ec54:	add	x0, x0, #0x9c0
    ec58:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ec5c:	b	ecbc <PyFloat_FromString@plt+0x816c>
    ec60:	ldr	x0, [sp, #64]
    ec64:	ldr	x1, [x0, #8]
    ec68:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ec6c:	add	x0, x0, #0x500
    ec70:	cmp	x1, x0
    ec74:	b.eq	ecbc <PyFloat_FromString@plt+0x816c>  // b.none
    ec78:	ldr	x0, [sp, #64]
    ec7c:	ldr	x2, [x0, #8]
    ec80:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ec84:	add	x1, x0, #0x500
    ec88:	mov	x0, x2
    ec8c:	bl	6a70 <PyType_IsSubtype@plt>
    ec90:	cmp	w0, #0x0
    ec94:	b.ne	ecbc <PyFloat_FromString@plt+0x816c>  // b.any
    ec98:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ec9c:	ldr	x0, [x0, #3936]
    eca0:	ldr	x2, [x0]
    eca4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eca8:	add	x1, x0, #0xe00
    ecac:	mov	x0, x2
    ecb0:	bl	66f0 <PyErr_SetString@plt>
    ecb4:	mov	x0, #0x0                   	// #0
    ecb8:	b	ed40 <PyFloat_FromString@plt+0x81f0>
    ecbc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ecc0:	add	x0, x0, #0x360
    ecc4:	bl	912c <PyFloat_FromString@plt+0x25dc>
    ecc8:	str	x0, [sp, #72]
    eccc:	ldr	x0, [sp, #72]
    ecd0:	cmp	x0, #0x0
    ecd4:	b.ne	ece0 <PyFloat_FromString@plt+0x8190>  // b.any
    ecd8:	mov	x0, #0x0                   	// #0
    ecdc:	b	ed40 <PyFloat_FromString@plt+0x81f0>
    ece0:	ldr	x0, [sp, #72]
    ece4:	add	x4, x0, #0x18
    ece8:	ldr	x0, [sp, #40]
    ecec:	add	x1, x0, #0x18
    ecf0:	ldr	x0, [sp, #64]
    ecf4:	add	x0, x0, #0x10
    ecf8:	add	x2, sp, #0x3c
    ecfc:	mov	x3, x2
    ed00:	mov	x2, x0
    ed04:	mov	x0, x4
    ed08:	bl	3cef8 <PyInit__decimal@@Base+0x25220>
    ed0c:	ldr	x0, [sp, #64]
    ed10:	ldr	w1, [sp, #60]
    ed14:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ed18:	cmp	w0, #0x0
    ed1c:	b.eq	ed3c <PyFloat_FromString@plt+0x81ec>  // b.none
    ed20:	ldr	x2, [sp, #72]
    ed24:	mov	w1, #0xf82                 	// #3970
    ed28:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ed2c:	add	x0, x0, #0x9c0
    ed30:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ed34:	mov	x0, #0x0                   	// #0
    ed38:	b	ed40 <PyFloat_FromString@plt+0x81f0>
    ed3c:	ldr	x0, [sp, #72]
    ed40:	ldp	x29, x30, [sp], #80
    ed44:	ret
    ed48:	stp	x29, x30, [sp, #-96]!
    ed4c:	mov	x29, sp
    ed50:	str	x0, [sp, #40]
    ed54:	str	x1, [sp, #32]
    ed58:	str	x2, [sp, #24]
    ed5c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ed60:	ldr	x0, [x0, #4008]
    ed64:	str	x0, [sp, #56]
    ed68:	str	wzr, [sp, #52]
    ed6c:	add	x1, sp, #0x38
    ed70:	add	x0, sp, #0x50
    ed74:	mov	x5, x1
    ed78:	mov	x4, x0
    ed7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    ed80:	add	x3, x0, #0x318
    ed84:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    ed88:	add	x2, x0, #0xc8
    ed8c:	ldr	x1, [sp, #24]
    ed90:	ldr	x0, [sp, #32]
    ed94:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    ed98:	cmp	w0, #0x0
    ed9c:	b.ne	eda8 <PyFloat_FromString@plt+0x8258>  // b.any
    eda0:	mov	x0, #0x0                   	// #0
    eda4:	b	efb0 <PyFloat_FromString@plt+0x8460>
    eda8:	ldr	x1, [sp, #56]
    edac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    edb0:	ldr	x0, [x0, #4008]
    edb4:	cmp	x1, x0
    edb8:	b.ne	edf4 <PyFloat_FromString@plt+0x82a4>  // b.any
    edbc:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    edc0:	str	x0, [sp, #56]
    edc4:	ldr	x0, [sp, #56]
    edc8:	cmp	x0, #0x0
    edcc:	b.ne	edd8 <PyFloat_FromString@plt+0x8288>  // b.any
    edd0:	mov	x0, #0x0                   	// #0
    edd4:	b	efb0 <PyFloat_FromString@plt+0x8460>
    edd8:	ldr	x0, [sp, #56]
    eddc:	mov	x2, x0
    ede0:	mov	w1, #0xf85                 	// #3973
    ede4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ede8:	add	x0, x0, #0x9c0
    edec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    edf0:	b	ee50 <PyFloat_FromString@plt+0x8300>
    edf4:	ldr	x0, [sp, #56]
    edf8:	ldr	x1, [x0, #8]
    edfc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ee00:	add	x0, x0, #0x500
    ee04:	cmp	x1, x0
    ee08:	b.eq	ee50 <PyFloat_FromString@plt+0x8300>  // b.none
    ee0c:	ldr	x0, [sp, #56]
    ee10:	ldr	x2, [x0, #8]
    ee14:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ee18:	add	x1, x0, #0x500
    ee1c:	mov	x0, x2
    ee20:	bl	6a70 <PyType_IsSubtype@plt>
    ee24:	cmp	w0, #0x0
    ee28:	b.ne	ee50 <PyFloat_FromString@plt+0x8300>  // b.any
    ee2c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ee30:	ldr	x0, [x0, #3936]
    ee34:	ldr	x2, [x0]
    ee38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ee3c:	add	x1, x0, #0xe00
    ee40:	mov	x0, x2
    ee44:	bl	66f0 <PyErr_SetString@plt>
    ee48:	mov	x0, #0x0                   	// #0
    ee4c:	b	efb0 <PyFloat_FromString@plt+0x8460>
    ee50:	ldr	x1, [sp, #56]
    ee54:	add	x0, sp, #0x48
    ee58:	mov	x3, x1
    ee5c:	ldr	x2, [sp, #40]
    ee60:	mov	x1, x0
    ee64:	mov	w0, #0x1                   	// #1
    ee68:	bl	b168 <PyFloat_FromString@plt+0x4618>
    ee6c:	cmp	w0, #0x0
    ee70:	b.ne	ee7c <PyFloat_FromString@plt+0x832c>  // b.any
    ee74:	mov	x0, #0x0                   	// #0
    ee78:	b	efb0 <PyFloat_FromString@plt+0x8460>
    ee7c:	ldr	x1, [sp, #80]
    ee80:	ldr	x2, [sp, #56]
    ee84:	add	x0, sp, #0x40
    ee88:	mov	x3, x2
    ee8c:	mov	x2, x1
    ee90:	mov	x1, x0
    ee94:	mov	w0, #0x1                   	// #1
    ee98:	bl	b168 <PyFloat_FromString@plt+0x4618>
    ee9c:	cmp	w0, #0x0
    eea0:	b.ne	eec4 <PyFloat_FromString@plt+0x8374>  // b.any
    eea4:	ldr	x0, [sp, #72]
    eea8:	mov	x2, x0
    eeac:	mov	w1, #0xf85                 	// #3973
    eeb0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eeb4:	add	x0, x0, #0x9c0
    eeb8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    eebc:	mov	x0, #0x0                   	// #0
    eec0:	b	efb0 <PyFloat_FromString@plt+0x8460>
    eec4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    eec8:	add	x0, x0, #0x360
    eecc:	bl	912c <PyFloat_FromString@plt+0x25dc>
    eed0:	str	x0, [sp, #88]
    eed4:	ldr	x0, [sp, #88]
    eed8:	cmp	x0, #0x0
    eedc:	b.ne	ef18 <PyFloat_FromString@plt+0x83c8>  // b.any
    eee0:	ldr	x0, [sp, #72]
    eee4:	mov	x2, x0
    eee8:	mov	w1, #0xf85                 	// #3973
    eeec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    eef0:	add	x0, x0, #0x9c0
    eef4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    eef8:	ldr	x0, [sp, #64]
    eefc:	mov	x2, x0
    ef00:	mov	w1, #0xf85                 	// #3973
    ef04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ef08:	add	x0, x0, #0x9c0
    ef0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ef10:	mov	x0, #0x0                   	// #0
    ef14:	b	efb0 <PyFloat_FromString@plt+0x8460>
    ef18:	ldr	x0, [sp, #88]
    ef1c:	add	x5, x0, #0x18
    ef20:	ldr	x0, [sp, #72]
    ef24:	add	x1, x0, #0x18
    ef28:	ldr	x0, [sp, #64]
    ef2c:	add	x2, x0, #0x18
    ef30:	ldr	x0, [sp, #56]
    ef34:	add	x0, x0, #0x10
    ef38:	add	x3, sp, #0x34
    ef3c:	mov	x4, x3
    ef40:	mov	x3, x0
    ef44:	mov	x0, x5
    ef48:	bl	2a838 <PyInit__decimal@@Base+0x12b60>
    ef4c:	ldr	x0, [sp, #72]
    ef50:	mov	x2, x0
    ef54:	mov	w1, #0xf85                 	// #3973
    ef58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ef5c:	add	x0, x0, #0x9c0
    ef60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ef64:	ldr	x0, [sp, #64]
    ef68:	mov	x2, x0
    ef6c:	mov	w1, #0xf85                 	// #3973
    ef70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ef74:	add	x0, x0, #0x9c0
    ef78:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ef7c:	ldr	x0, [sp, #56]
    ef80:	ldr	w1, [sp, #52]
    ef84:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    ef88:	cmp	w0, #0x0
    ef8c:	b.eq	efac <PyFloat_FromString@plt+0x845c>  // b.none
    ef90:	ldr	x2, [sp, #88]
    ef94:	mov	w1, #0xf85                 	// #3973
    ef98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ef9c:	add	x0, x0, #0x9c0
    efa0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    efa4:	mov	x0, #0x0                   	// #0
    efa8:	b	efb0 <PyFloat_FromString@plt+0x8460>
    efac:	ldr	x0, [sp, #88]
    efb0:	ldp	x29, x30, [sp], #96
    efb4:	ret
    efb8:	stp	x29, x30, [sp, #-96]!
    efbc:	mov	x29, sp
    efc0:	str	x0, [sp, #40]
    efc4:	str	x1, [sp, #32]
    efc8:	str	x2, [sp, #24]
    efcc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    efd0:	ldr	x0, [x0, #4008]
    efd4:	str	x0, [sp, #56]
    efd8:	str	wzr, [sp, #52]
    efdc:	add	x1, sp, #0x38
    efe0:	add	x0, sp, #0x50
    efe4:	mov	x5, x1
    efe8:	mov	x4, x0
    efec:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    eff0:	add	x3, x0, #0x330
    eff4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    eff8:	add	x2, x0, #0xc8
    effc:	ldr	x1, [sp, #24]
    f000:	ldr	x0, [sp, #32]
    f004:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    f008:	cmp	w0, #0x0
    f00c:	b.ne	f018 <PyFloat_FromString@plt+0x84c8>  // b.any
    f010:	mov	x0, #0x0                   	// #0
    f014:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f018:	ldr	x1, [sp, #56]
    f01c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f020:	ldr	x0, [x0, #4008]
    f024:	cmp	x1, x0
    f028:	b.ne	f064 <PyFloat_FromString@plt+0x8514>  // b.any
    f02c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    f030:	str	x0, [sp, #56]
    f034:	ldr	x0, [sp, #56]
    f038:	cmp	x0, #0x0
    f03c:	b.ne	f048 <PyFloat_FromString@plt+0x84f8>  // b.any
    f040:	mov	x0, #0x0                   	// #0
    f044:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f048:	ldr	x0, [sp, #56]
    f04c:	mov	x2, x0
    f050:	mov	w1, #0xf86                 	// #3974
    f054:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f058:	add	x0, x0, #0x9c0
    f05c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f060:	b	f0c0 <PyFloat_FromString@plt+0x8570>
    f064:	ldr	x0, [sp, #56]
    f068:	ldr	x1, [x0, #8]
    f06c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f070:	add	x0, x0, #0x500
    f074:	cmp	x1, x0
    f078:	b.eq	f0c0 <PyFloat_FromString@plt+0x8570>  // b.none
    f07c:	ldr	x0, [sp, #56]
    f080:	ldr	x2, [x0, #8]
    f084:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f088:	add	x1, x0, #0x500
    f08c:	mov	x0, x2
    f090:	bl	6a70 <PyType_IsSubtype@plt>
    f094:	cmp	w0, #0x0
    f098:	b.ne	f0c0 <PyFloat_FromString@plt+0x8570>  // b.any
    f09c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f0a0:	ldr	x0, [x0, #3936]
    f0a4:	ldr	x2, [x0]
    f0a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f0ac:	add	x1, x0, #0xe00
    f0b0:	mov	x0, x2
    f0b4:	bl	66f0 <PyErr_SetString@plt>
    f0b8:	mov	x0, #0x0                   	// #0
    f0bc:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f0c0:	ldr	x1, [sp, #56]
    f0c4:	add	x0, sp, #0x48
    f0c8:	mov	x3, x1
    f0cc:	ldr	x2, [sp, #40]
    f0d0:	mov	x1, x0
    f0d4:	mov	w0, #0x1                   	// #1
    f0d8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f0dc:	cmp	w0, #0x0
    f0e0:	b.ne	f0ec <PyFloat_FromString@plt+0x859c>  // b.any
    f0e4:	mov	x0, #0x0                   	// #0
    f0e8:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f0ec:	ldr	x1, [sp, #80]
    f0f0:	ldr	x2, [sp, #56]
    f0f4:	add	x0, sp, #0x40
    f0f8:	mov	x3, x2
    f0fc:	mov	x2, x1
    f100:	mov	x1, x0
    f104:	mov	w0, #0x1                   	// #1
    f108:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f10c:	cmp	w0, #0x0
    f110:	b.ne	f134 <PyFloat_FromString@plt+0x85e4>  // b.any
    f114:	ldr	x0, [sp, #72]
    f118:	mov	x2, x0
    f11c:	mov	w1, #0xf86                 	// #3974
    f120:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f124:	add	x0, x0, #0x9c0
    f128:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f12c:	mov	x0, #0x0                   	// #0
    f130:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f134:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f138:	add	x0, x0, #0x360
    f13c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    f140:	str	x0, [sp, #88]
    f144:	ldr	x0, [sp, #88]
    f148:	cmp	x0, #0x0
    f14c:	b.ne	f188 <PyFloat_FromString@plt+0x8638>  // b.any
    f150:	ldr	x0, [sp, #72]
    f154:	mov	x2, x0
    f158:	mov	w1, #0xf86                 	// #3974
    f15c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f160:	add	x0, x0, #0x9c0
    f164:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f168:	ldr	x0, [sp, #64]
    f16c:	mov	x2, x0
    f170:	mov	w1, #0xf86                 	// #3974
    f174:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f178:	add	x0, x0, #0x9c0
    f17c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f180:	mov	x0, #0x0                   	// #0
    f184:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f188:	ldr	x0, [sp, #88]
    f18c:	add	x5, x0, #0x18
    f190:	ldr	x0, [sp, #72]
    f194:	add	x1, x0, #0x18
    f198:	ldr	x0, [sp, #64]
    f19c:	add	x2, x0, #0x18
    f1a0:	ldr	x0, [sp, #56]
    f1a4:	add	x0, x0, #0x10
    f1a8:	add	x3, sp, #0x34
    f1ac:	mov	x4, x3
    f1b0:	mov	x3, x0
    f1b4:	mov	x0, x5
    f1b8:	bl	2a904 <PyInit__decimal@@Base+0x12c2c>
    f1bc:	ldr	x0, [sp, #72]
    f1c0:	mov	x2, x0
    f1c4:	mov	w1, #0xf86                 	// #3974
    f1c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f1cc:	add	x0, x0, #0x9c0
    f1d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f1d4:	ldr	x0, [sp, #64]
    f1d8:	mov	x2, x0
    f1dc:	mov	w1, #0xf86                 	// #3974
    f1e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f1e4:	add	x0, x0, #0x9c0
    f1e8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f1ec:	ldr	x0, [sp, #56]
    f1f0:	ldr	w1, [sp, #52]
    f1f4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    f1f8:	cmp	w0, #0x0
    f1fc:	b.eq	f21c <PyFloat_FromString@plt+0x86cc>  // b.none
    f200:	ldr	x2, [sp, #88]
    f204:	mov	w1, #0xf86                 	// #3974
    f208:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f20c:	add	x0, x0, #0x9c0
    f210:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f214:	mov	x0, #0x0                   	// #0
    f218:	b	f220 <PyFloat_FromString@plt+0x86d0>
    f21c:	ldr	x0, [sp, #88]
    f220:	ldp	x29, x30, [sp], #96
    f224:	ret
    f228:	stp	x29, x30, [sp, #-96]!
    f22c:	mov	x29, sp
    f230:	str	x0, [sp, #40]
    f234:	str	x1, [sp, #32]
    f238:	str	x2, [sp, #24]
    f23c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f240:	ldr	x0, [x0, #4008]
    f244:	str	x0, [sp, #56]
    f248:	str	wzr, [sp, #52]
    f24c:	add	x1, sp, #0x38
    f250:	add	x0, sp, #0x50
    f254:	mov	x5, x1
    f258:	mov	x4, x0
    f25c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    f260:	add	x3, x0, #0x348
    f264:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    f268:	add	x2, x0, #0xc8
    f26c:	ldr	x1, [sp, #24]
    f270:	ldr	x0, [sp, #32]
    f274:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    f278:	cmp	w0, #0x0
    f27c:	b.ne	f288 <PyFloat_FromString@plt+0x8738>  // b.any
    f280:	mov	x0, #0x0                   	// #0
    f284:	b	f490 <PyFloat_FromString@plt+0x8940>
    f288:	ldr	x1, [sp, #56]
    f28c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f290:	ldr	x0, [x0, #4008]
    f294:	cmp	x1, x0
    f298:	b.ne	f2d4 <PyFloat_FromString@plt+0x8784>  // b.any
    f29c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    f2a0:	str	x0, [sp, #56]
    f2a4:	ldr	x0, [sp, #56]
    f2a8:	cmp	x0, #0x0
    f2ac:	b.ne	f2b8 <PyFloat_FromString@plt+0x8768>  // b.any
    f2b0:	mov	x0, #0x0                   	// #0
    f2b4:	b	f490 <PyFloat_FromString@plt+0x8940>
    f2b8:	ldr	x0, [sp, #56]
    f2bc:	mov	x2, x0
    f2c0:	mov	w1, #0xf87                 	// #3975
    f2c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f2c8:	add	x0, x0, #0x9c0
    f2cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f2d0:	b	f330 <PyFloat_FromString@plt+0x87e0>
    f2d4:	ldr	x0, [sp, #56]
    f2d8:	ldr	x1, [x0, #8]
    f2dc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f2e0:	add	x0, x0, #0x500
    f2e4:	cmp	x1, x0
    f2e8:	b.eq	f330 <PyFloat_FromString@plt+0x87e0>  // b.none
    f2ec:	ldr	x0, [sp, #56]
    f2f0:	ldr	x2, [x0, #8]
    f2f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f2f8:	add	x1, x0, #0x500
    f2fc:	mov	x0, x2
    f300:	bl	6a70 <PyType_IsSubtype@plt>
    f304:	cmp	w0, #0x0
    f308:	b.ne	f330 <PyFloat_FromString@plt+0x87e0>  // b.any
    f30c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f310:	ldr	x0, [x0, #3936]
    f314:	ldr	x2, [x0]
    f318:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f31c:	add	x1, x0, #0xe00
    f320:	mov	x0, x2
    f324:	bl	66f0 <PyErr_SetString@plt>
    f328:	mov	x0, #0x0                   	// #0
    f32c:	b	f490 <PyFloat_FromString@plt+0x8940>
    f330:	ldr	x1, [sp, #56]
    f334:	add	x0, sp, #0x48
    f338:	mov	x3, x1
    f33c:	ldr	x2, [sp, #40]
    f340:	mov	x1, x0
    f344:	mov	w0, #0x1                   	// #1
    f348:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f34c:	cmp	w0, #0x0
    f350:	b.ne	f35c <PyFloat_FromString@plt+0x880c>  // b.any
    f354:	mov	x0, #0x0                   	// #0
    f358:	b	f490 <PyFloat_FromString@plt+0x8940>
    f35c:	ldr	x1, [sp, #80]
    f360:	ldr	x2, [sp, #56]
    f364:	add	x0, sp, #0x40
    f368:	mov	x3, x2
    f36c:	mov	x2, x1
    f370:	mov	x1, x0
    f374:	mov	w0, #0x1                   	// #1
    f378:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f37c:	cmp	w0, #0x0
    f380:	b.ne	f3a4 <PyFloat_FromString@plt+0x8854>  // b.any
    f384:	ldr	x0, [sp, #72]
    f388:	mov	x2, x0
    f38c:	mov	w1, #0xf87                 	// #3975
    f390:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f394:	add	x0, x0, #0x9c0
    f398:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f39c:	mov	x0, #0x0                   	// #0
    f3a0:	b	f490 <PyFloat_FromString@plt+0x8940>
    f3a4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f3a8:	add	x0, x0, #0x360
    f3ac:	bl	912c <PyFloat_FromString@plt+0x25dc>
    f3b0:	str	x0, [sp, #88]
    f3b4:	ldr	x0, [sp, #88]
    f3b8:	cmp	x0, #0x0
    f3bc:	b.ne	f3f8 <PyFloat_FromString@plt+0x88a8>  // b.any
    f3c0:	ldr	x0, [sp, #72]
    f3c4:	mov	x2, x0
    f3c8:	mov	w1, #0xf87                 	// #3975
    f3cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f3d0:	add	x0, x0, #0x9c0
    f3d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f3d8:	ldr	x0, [sp, #64]
    f3dc:	mov	x2, x0
    f3e0:	mov	w1, #0xf87                 	// #3975
    f3e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f3e8:	add	x0, x0, #0x9c0
    f3ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f3f0:	mov	x0, #0x0                   	// #0
    f3f4:	b	f490 <PyFloat_FromString@plt+0x8940>
    f3f8:	ldr	x0, [sp, #88]
    f3fc:	add	x5, x0, #0x18
    f400:	ldr	x0, [sp, #72]
    f404:	add	x1, x0, #0x18
    f408:	ldr	x0, [sp, #64]
    f40c:	add	x2, x0, #0x18
    f410:	ldr	x0, [sp, #56]
    f414:	add	x0, x0, #0x10
    f418:	add	x3, sp, #0x34
    f41c:	mov	x4, x3
    f420:	mov	x3, x0
    f424:	mov	x0, x5
    f428:	bl	34b30 <PyInit__decimal@@Base+0x1ce58>
    f42c:	ldr	x0, [sp, #72]
    f430:	mov	x2, x0
    f434:	mov	w1, #0xf87                 	// #3975
    f438:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f43c:	add	x0, x0, #0x9c0
    f440:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f444:	ldr	x0, [sp, #64]
    f448:	mov	x2, x0
    f44c:	mov	w1, #0xf87                 	// #3975
    f450:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f454:	add	x0, x0, #0x9c0
    f458:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f45c:	ldr	x0, [sp, #56]
    f460:	ldr	w1, [sp, #52]
    f464:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    f468:	cmp	w0, #0x0
    f46c:	b.eq	f48c <PyFloat_FromString@plt+0x893c>  // b.none
    f470:	ldr	x2, [sp, #88]
    f474:	mov	w1, #0xf87                 	// #3975
    f478:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f47c:	add	x0, x0, #0x9c0
    f480:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f484:	mov	x0, #0x0                   	// #0
    f488:	b	f490 <PyFloat_FromString@plt+0x8940>
    f48c:	ldr	x0, [sp, #88]
    f490:	ldp	x29, x30, [sp], #96
    f494:	ret
    f498:	stp	x29, x30, [sp, #-96]!
    f49c:	mov	x29, sp
    f4a0:	str	x0, [sp, #40]
    f4a4:	str	x1, [sp, #32]
    f4a8:	str	x2, [sp, #24]
    f4ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f4b0:	ldr	x0, [x0, #4008]
    f4b4:	str	x0, [sp, #56]
    f4b8:	str	wzr, [sp, #52]
    f4bc:	add	x1, sp, #0x38
    f4c0:	add	x0, sp, #0x50
    f4c4:	mov	x5, x1
    f4c8:	mov	x4, x0
    f4cc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    f4d0:	add	x3, x0, #0x360
    f4d4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    f4d8:	add	x2, x0, #0xc8
    f4dc:	ldr	x1, [sp, #24]
    f4e0:	ldr	x0, [sp, #32]
    f4e4:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    f4e8:	cmp	w0, #0x0
    f4ec:	b.ne	f4f8 <PyFloat_FromString@plt+0x89a8>  // b.any
    f4f0:	mov	x0, #0x0                   	// #0
    f4f4:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f4f8:	ldr	x1, [sp, #56]
    f4fc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f500:	ldr	x0, [x0, #4008]
    f504:	cmp	x1, x0
    f508:	b.ne	f544 <PyFloat_FromString@plt+0x89f4>  // b.any
    f50c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    f510:	str	x0, [sp, #56]
    f514:	ldr	x0, [sp, #56]
    f518:	cmp	x0, #0x0
    f51c:	b.ne	f528 <PyFloat_FromString@plt+0x89d8>  // b.any
    f520:	mov	x0, #0x0                   	// #0
    f524:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f528:	ldr	x0, [sp, #56]
    f52c:	mov	x2, x0
    f530:	mov	w1, #0xf88                 	// #3976
    f534:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f538:	add	x0, x0, #0x9c0
    f53c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f540:	b	f5a0 <PyFloat_FromString@plt+0x8a50>
    f544:	ldr	x0, [sp, #56]
    f548:	ldr	x1, [x0, #8]
    f54c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f550:	add	x0, x0, #0x500
    f554:	cmp	x1, x0
    f558:	b.eq	f5a0 <PyFloat_FromString@plt+0x8a50>  // b.none
    f55c:	ldr	x0, [sp, #56]
    f560:	ldr	x2, [x0, #8]
    f564:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f568:	add	x1, x0, #0x500
    f56c:	mov	x0, x2
    f570:	bl	6a70 <PyType_IsSubtype@plt>
    f574:	cmp	w0, #0x0
    f578:	b.ne	f5a0 <PyFloat_FromString@plt+0x8a50>  // b.any
    f57c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f580:	ldr	x0, [x0, #3936]
    f584:	ldr	x2, [x0]
    f588:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f58c:	add	x1, x0, #0xe00
    f590:	mov	x0, x2
    f594:	bl	66f0 <PyErr_SetString@plt>
    f598:	mov	x0, #0x0                   	// #0
    f59c:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f5a0:	ldr	x1, [sp, #56]
    f5a4:	add	x0, sp, #0x48
    f5a8:	mov	x3, x1
    f5ac:	ldr	x2, [sp, #40]
    f5b0:	mov	x1, x0
    f5b4:	mov	w0, #0x1                   	// #1
    f5b8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f5bc:	cmp	w0, #0x0
    f5c0:	b.ne	f5cc <PyFloat_FromString@plt+0x8a7c>  // b.any
    f5c4:	mov	x0, #0x0                   	// #0
    f5c8:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f5cc:	ldr	x1, [sp, #80]
    f5d0:	ldr	x2, [sp, #56]
    f5d4:	add	x0, sp, #0x40
    f5d8:	mov	x3, x2
    f5dc:	mov	x2, x1
    f5e0:	mov	x1, x0
    f5e4:	mov	w0, #0x1                   	// #1
    f5e8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f5ec:	cmp	w0, #0x0
    f5f0:	b.ne	f614 <PyFloat_FromString@plt+0x8ac4>  // b.any
    f5f4:	ldr	x0, [sp, #72]
    f5f8:	mov	x2, x0
    f5fc:	mov	w1, #0xf88                 	// #3976
    f600:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f604:	add	x0, x0, #0x9c0
    f608:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f60c:	mov	x0, #0x0                   	// #0
    f610:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f614:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f618:	add	x0, x0, #0x360
    f61c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    f620:	str	x0, [sp, #88]
    f624:	ldr	x0, [sp, #88]
    f628:	cmp	x0, #0x0
    f62c:	b.ne	f668 <PyFloat_FromString@plt+0x8b18>  // b.any
    f630:	ldr	x0, [sp, #72]
    f634:	mov	x2, x0
    f638:	mov	w1, #0xf88                 	// #3976
    f63c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f640:	add	x0, x0, #0x9c0
    f644:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f648:	ldr	x0, [sp, #64]
    f64c:	mov	x2, x0
    f650:	mov	w1, #0xf88                 	// #3976
    f654:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f658:	add	x0, x0, #0x9c0
    f65c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f660:	mov	x0, #0x0                   	// #0
    f664:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f668:	ldr	x0, [sp, #88]
    f66c:	add	x5, x0, #0x18
    f670:	ldr	x0, [sp, #72]
    f674:	add	x1, x0, #0x18
    f678:	ldr	x0, [sp, #64]
    f67c:	add	x2, x0, #0x18
    f680:	ldr	x0, [sp, #56]
    f684:	add	x0, x0, #0x10
    f688:	add	x3, sp, #0x34
    f68c:	mov	x4, x3
    f690:	mov	x3, x0
    f694:	mov	x0, x5
    f698:	bl	34c80 <PyInit__decimal@@Base+0x1cfa8>
    f69c:	ldr	x0, [sp, #72]
    f6a0:	mov	x2, x0
    f6a4:	mov	w1, #0xf88                 	// #3976
    f6a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f6ac:	add	x0, x0, #0x9c0
    f6b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f6b4:	ldr	x0, [sp, #64]
    f6b8:	mov	x2, x0
    f6bc:	mov	w1, #0xf88                 	// #3976
    f6c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f6c4:	add	x0, x0, #0x9c0
    f6c8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f6cc:	ldr	x0, [sp, #56]
    f6d0:	ldr	w1, [sp, #52]
    f6d4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    f6d8:	cmp	w0, #0x0
    f6dc:	b.eq	f6fc <PyFloat_FromString@plt+0x8bac>  // b.none
    f6e0:	ldr	x2, [sp, #88]
    f6e4:	mov	w1, #0xf88                 	// #3976
    f6e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f6ec:	add	x0, x0, #0x9c0
    f6f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f6f4:	mov	x0, #0x0                   	// #0
    f6f8:	b	f700 <PyFloat_FromString@plt+0x8bb0>
    f6fc:	ldr	x0, [sp, #88]
    f700:	ldp	x29, x30, [sp], #96
    f704:	ret
    f708:	stp	x29, x30, [sp, #-96]!
    f70c:	mov	x29, sp
    f710:	str	x0, [sp, #40]
    f714:	str	x1, [sp, #32]
    f718:	str	x2, [sp, #24]
    f71c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f720:	ldr	x0, [x0, #4008]
    f724:	str	x0, [sp, #56]
    f728:	str	wzr, [sp, #52]
    f72c:	add	x1, sp, #0x38
    f730:	add	x0, sp, #0x50
    f734:	mov	x5, x1
    f738:	mov	x4, x0
    f73c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    f740:	add	x3, x0, #0x378
    f744:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    f748:	add	x2, x0, #0xc8
    f74c:	ldr	x1, [sp, #24]
    f750:	ldr	x0, [sp, #32]
    f754:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    f758:	cmp	w0, #0x0
    f75c:	b.ne	f768 <PyFloat_FromString@plt+0x8c18>  // b.any
    f760:	mov	x0, #0x0                   	// #0
    f764:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f768:	ldr	x1, [sp, #56]
    f76c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f770:	ldr	x0, [x0, #4008]
    f774:	cmp	x1, x0
    f778:	b.ne	f7b4 <PyFloat_FromString@plt+0x8c64>  // b.any
    f77c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    f780:	str	x0, [sp, #56]
    f784:	ldr	x0, [sp, #56]
    f788:	cmp	x0, #0x0
    f78c:	b.ne	f798 <PyFloat_FromString@plt+0x8c48>  // b.any
    f790:	mov	x0, #0x0                   	// #0
    f794:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f798:	ldr	x0, [sp, #56]
    f79c:	mov	x2, x0
    f7a0:	mov	w1, #0xf89                 	// #3977
    f7a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f7a8:	add	x0, x0, #0x9c0
    f7ac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f7b0:	b	f810 <PyFloat_FromString@plt+0x8cc0>
    f7b4:	ldr	x0, [sp, #56]
    f7b8:	ldr	x1, [x0, #8]
    f7bc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f7c0:	add	x0, x0, #0x500
    f7c4:	cmp	x1, x0
    f7c8:	b.eq	f810 <PyFloat_FromString@plt+0x8cc0>  // b.none
    f7cc:	ldr	x0, [sp, #56]
    f7d0:	ldr	x2, [x0, #8]
    f7d4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f7d8:	add	x1, x0, #0x500
    f7dc:	mov	x0, x2
    f7e0:	bl	6a70 <PyType_IsSubtype@plt>
    f7e4:	cmp	w0, #0x0
    f7e8:	b.ne	f810 <PyFloat_FromString@plt+0x8cc0>  // b.any
    f7ec:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f7f0:	ldr	x0, [x0, #3936]
    f7f4:	ldr	x2, [x0]
    f7f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f7fc:	add	x1, x0, #0xe00
    f800:	mov	x0, x2
    f804:	bl	66f0 <PyErr_SetString@plt>
    f808:	mov	x0, #0x0                   	// #0
    f80c:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f810:	ldr	x1, [sp, #56]
    f814:	add	x0, sp, #0x48
    f818:	mov	x3, x1
    f81c:	ldr	x2, [sp, #40]
    f820:	mov	x1, x0
    f824:	mov	w0, #0x1                   	// #1
    f828:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f82c:	cmp	w0, #0x0
    f830:	b.ne	f83c <PyFloat_FromString@plt+0x8cec>  // b.any
    f834:	mov	x0, #0x0                   	// #0
    f838:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f83c:	ldr	x1, [sp, #80]
    f840:	ldr	x2, [sp, #56]
    f844:	add	x0, sp, #0x40
    f848:	mov	x3, x2
    f84c:	mov	x2, x1
    f850:	mov	x1, x0
    f854:	mov	w0, #0x1                   	// #1
    f858:	bl	b168 <PyFloat_FromString@plt+0x4618>
    f85c:	cmp	w0, #0x0
    f860:	b.ne	f884 <PyFloat_FromString@plt+0x8d34>  // b.any
    f864:	ldr	x0, [sp, #72]
    f868:	mov	x2, x0
    f86c:	mov	w1, #0xf89                 	// #3977
    f870:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f874:	add	x0, x0, #0x9c0
    f878:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f87c:	mov	x0, #0x0                   	// #0
    f880:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f884:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    f888:	add	x0, x0, #0x360
    f88c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    f890:	str	x0, [sp, #88]
    f894:	ldr	x0, [sp, #88]
    f898:	cmp	x0, #0x0
    f89c:	b.ne	f8d8 <PyFloat_FromString@plt+0x8d88>  // b.any
    f8a0:	ldr	x0, [sp, #72]
    f8a4:	mov	x2, x0
    f8a8:	mov	w1, #0xf89                 	// #3977
    f8ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f8b0:	add	x0, x0, #0x9c0
    f8b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f8b8:	ldr	x0, [sp, #64]
    f8bc:	mov	x2, x0
    f8c0:	mov	w1, #0xf89                 	// #3977
    f8c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f8c8:	add	x0, x0, #0x9c0
    f8cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f8d0:	mov	x0, #0x0                   	// #0
    f8d4:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f8d8:	ldr	x0, [sp, #88]
    f8dc:	add	x5, x0, #0x18
    f8e0:	ldr	x0, [sp, #72]
    f8e4:	add	x1, x0, #0x18
    f8e8:	ldr	x0, [sp, #64]
    f8ec:	add	x2, x0, #0x18
    f8f0:	ldr	x0, [sp, #56]
    f8f4:	add	x0, x0, #0x10
    f8f8:	add	x3, sp, #0x34
    f8fc:	mov	x4, x3
    f900:	mov	x3, x0
    f904:	mov	x0, x5
    f908:	bl	34dd0 <PyInit__decimal@@Base+0x1d0f8>
    f90c:	ldr	x0, [sp, #72]
    f910:	mov	x2, x0
    f914:	mov	w1, #0xf89                 	// #3977
    f918:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f91c:	add	x0, x0, #0x9c0
    f920:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f924:	ldr	x0, [sp, #64]
    f928:	mov	x2, x0
    f92c:	mov	w1, #0xf89                 	// #3977
    f930:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f934:	add	x0, x0, #0x9c0
    f938:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f93c:	ldr	x0, [sp, #56]
    f940:	ldr	w1, [sp, #52]
    f944:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    f948:	cmp	w0, #0x0
    f94c:	b.eq	f96c <PyFloat_FromString@plt+0x8e1c>  // b.none
    f950:	ldr	x2, [sp, #88]
    f954:	mov	w1, #0xf89                 	// #3977
    f958:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    f95c:	add	x0, x0, #0x9c0
    f960:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    f964:	mov	x0, #0x0                   	// #0
    f968:	b	f970 <PyFloat_FromString@plt+0x8e20>
    f96c:	ldr	x0, [sp, #88]
    f970:	ldp	x29, x30, [sp], #96
    f974:	ret
    f978:	stp	x29, x30, [sp, #-96]!
    f97c:	mov	x29, sp
    f980:	str	x0, [sp, #40]
    f984:	str	x1, [sp, #32]
    f988:	str	x2, [sp, #24]
    f98c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f990:	ldr	x0, [x0, #4008]
    f994:	str	x0, [sp, #56]
    f998:	str	wzr, [sp, #52]
    f99c:	add	x1, sp, #0x38
    f9a0:	add	x0, sp, #0x50
    f9a4:	mov	x5, x1
    f9a8:	mov	x4, x0
    f9ac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    f9b0:	add	x3, x0, #0x390
    f9b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    f9b8:	add	x2, x0, #0xc8
    f9bc:	ldr	x1, [sp, #24]
    f9c0:	ldr	x0, [sp, #32]
    f9c4:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    f9c8:	cmp	w0, #0x0
    f9cc:	b.ne	f9d8 <PyFloat_FromString@plt+0x8e88>  // b.any
    f9d0:	mov	x0, #0x0                   	// #0
    f9d4:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    f9d8:	ldr	x1, [sp, #56]
    f9dc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    f9e0:	ldr	x0, [x0, #4008]
    f9e4:	cmp	x1, x0
    f9e8:	b.ne	fa24 <PyFloat_FromString@plt+0x8ed4>  // b.any
    f9ec:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    f9f0:	str	x0, [sp, #56]
    f9f4:	ldr	x0, [sp, #56]
    f9f8:	cmp	x0, #0x0
    f9fc:	b.ne	fa08 <PyFloat_FromString@plt+0x8eb8>  // b.any
    fa00:	mov	x0, #0x0                   	// #0
    fa04:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    fa08:	ldr	x0, [sp, #56]
    fa0c:	mov	x2, x0
    fa10:	mov	w1, #0xf8a                 	// #3978
    fa14:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fa18:	add	x0, x0, #0x9c0
    fa1c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fa20:	b	fa80 <PyFloat_FromString@plt+0x8f30>
    fa24:	ldr	x0, [sp, #56]
    fa28:	ldr	x1, [x0, #8]
    fa2c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    fa30:	add	x0, x0, #0x500
    fa34:	cmp	x1, x0
    fa38:	b.eq	fa80 <PyFloat_FromString@plt+0x8f30>  // b.none
    fa3c:	ldr	x0, [sp, #56]
    fa40:	ldr	x2, [x0, #8]
    fa44:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    fa48:	add	x1, x0, #0x500
    fa4c:	mov	x0, x2
    fa50:	bl	6a70 <PyType_IsSubtype@plt>
    fa54:	cmp	w0, #0x0
    fa58:	b.ne	fa80 <PyFloat_FromString@plt+0x8f30>  // b.any
    fa5c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fa60:	ldr	x0, [x0, #3936]
    fa64:	ldr	x2, [x0]
    fa68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fa6c:	add	x1, x0, #0xe00
    fa70:	mov	x0, x2
    fa74:	bl	66f0 <PyErr_SetString@plt>
    fa78:	mov	x0, #0x0                   	// #0
    fa7c:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    fa80:	ldr	x1, [sp, #56]
    fa84:	add	x0, sp, #0x48
    fa88:	mov	x3, x1
    fa8c:	ldr	x2, [sp, #40]
    fa90:	mov	x1, x0
    fa94:	mov	w0, #0x1                   	// #1
    fa98:	bl	b168 <PyFloat_FromString@plt+0x4618>
    fa9c:	cmp	w0, #0x0
    faa0:	b.ne	faac <PyFloat_FromString@plt+0x8f5c>  // b.any
    faa4:	mov	x0, #0x0                   	// #0
    faa8:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    faac:	ldr	x1, [sp, #80]
    fab0:	ldr	x2, [sp, #56]
    fab4:	add	x0, sp, #0x40
    fab8:	mov	x3, x2
    fabc:	mov	x2, x1
    fac0:	mov	x1, x0
    fac4:	mov	w0, #0x1                   	// #1
    fac8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    facc:	cmp	w0, #0x0
    fad0:	b.ne	faf4 <PyFloat_FromString@plt+0x8fa4>  // b.any
    fad4:	ldr	x0, [sp, #72]
    fad8:	mov	x2, x0
    fadc:	mov	w1, #0xf8a                 	// #3978
    fae0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fae4:	add	x0, x0, #0x9c0
    fae8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    faec:	mov	x0, #0x0                   	// #0
    faf0:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    faf4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    faf8:	add	x0, x0, #0x360
    fafc:	bl	912c <PyFloat_FromString@plt+0x25dc>
    fb00:	str	x0, [sp, #88]
    fb04:	ldr	x0, [sp, #88]
    fb08:	cmp	x0, #0x0
    fb0c:	b.ne	fb48 <PyFloat_FromString@plt+0x8ff8>  // b.any
    fb10:	ldr	x0, [sp, #72]
    fb14:	mov	x2, x0
    fb18:	mov	w1, #0xf8a                 	// #3978
    fb1c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fb20:	add	x0, x0, #0x9c0
    fb24:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fb28:	ldr	x0, [sp, #64]
    fb2c:	mov	x2, x0
    fb30:	mov	w1, #0xf8a                 	// #3978
    fb34:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fb38:	add	x0, x0, #0x9c0
    fb3c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fb40:	mov	x0, #0x0                   	// #0
    fb44:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    fb48:	ldr	x0, [sp, #88]
    fb4c:	add	x5, x0, #0x18
    fb50:	ldr	x0, [sp, #72]
    fb54:	add	x1, x0, #0x18
    fb58:	ldr	x0, [sp, #64]
    fb5c:	add	x2, x0, #0x18
    fb60:	ldr	x0, [sp, #56]
    fb64:	add	x0, x0, #0x10
    fb68:	add	x3, sp, #0x34
    fb6c:	mov	x4, x3
    fb70:	mov	x3, x0
    fb74:	mov	x0, x5
    fb78:	bl	34f20 <PyInit__decimal@@Base+0x1d248>
    fb7c:	ldr	x0, [sp, #72]
    fb80:	mov	x2, x0
    fb84:	mov	w1, #0xf8a                 	// #3978
    fb88:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fb8c:	add	x0, x0, #0x9c0
    fb90:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fb94:	ldr	x0, [sp, #64]
    fb98:	mov	x2, x0
    fb9c:	mov	w1, #0xf8a                 	// #3978
    fba0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fba4:	add	x0, x0, #0x9c0
    fba8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fbac:	ldr	x0, [sp, #56]
    fbb0:	ldr	w1, [sp, #52]
    fbb4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    fbb8:	cmp	w0, #0x0
    fbbc:	b.eq	fbdc <PyFloat_FromString@plt+0x908c>  // b.none
    fbc0:	ldr	x2, [sp, #88]
    fbc4:	mov	w1, #0xf8a                 	// #3978
    fbc8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fbcc:	add	x0, x0, #0x9c0
    fbd0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fbd4:	mov	x0, #0x0                   	// #0
    fbd8:	b	fbe0 <PyFloat_FromString@plt+0x9090>
    fbdc:	ldr	x0, [sp, #88]
    fbe0:	ldp	x29, x30, [sp], #96
    fbe4:	ret
    fbe8:	stp	x29, x30, [sp, #-96]!
    fbec:	mov	x29, sp
    fbf0:	str	x0, [sp, #40]
    fbf4:	str	x1, [sp, #32]
    fbf8:	str	x2, [sp, #24]
    fbfc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fc00:	ldr	x0, [x0, #4008]
    fc04:	str	x0, [sp, #56]
    fc08:	str	wzr, [sp, #52]
    fc0c:	add	x1, sp, #0x38
    fc10:	add	x0, sp, #0x50
    fc14:	mov	x5, x1
    fc18:	mov	x4, x0
    fc1c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    fc20:	add	x3, x0, #0x3a8
    fc24:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    fc28:	add	x2, x0, #0xc8
    fc2c:	ldr	x1, [sp, #24]
    fc30:	ldr	x0, [sp, #32]
    fc34:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    fc38:	cmp	w0, #0x0
    fc3c:	b.ne	fc48 <PyFloat_FromString@plt+0x90f8>  // b.any
    fc40:	mov	x0, #0x0                   	// #0
    fc44:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fc48:	ldr	x1, [sp, #56]
    fc4c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fc50:	ldr	x0, [x0, #4008]
    fc54:	cmp	x1, x0
    fc58:	b.ne	fc94 <PyFloat_FromString@plt+0x9144>  // b.any
    fc5c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    fc60:	str	x0, [sp, #56]
    fc64:	ldr	x0, [sp, #56]
    fc68:	cmp	x0, #0x0
    fc6c:	b.ne	fc78 <PyFloat_FromString@plt+0x9128>  // b.any
    fc70:	mov	x0, #0x0                   	// #0
    fc74:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fc78:	ldr	x0, [sp, #56]
    fc7c:	mov	x2, x0
    fc80:	mov	w1, #0xf8b                 	// #3979
    fc84:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fc88:	add	x0, x0, #0x9c0
    fc8c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fc90:	b	fcf0 <PyFloat_FromString@plt+0x91a0>
    fc94:	ldr	x0, [sp, #56]
    fc98:	ldr	x1, [x0, #8]
    fc9c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    fca0:	add	x0, x0, #0x500
    fca4:	cmp	x1, x0
    fca8:	b.eq	fcf0 <PyFloat_FromString@plt+0x91a0>  // b.none
    fcac:	ldr	x0, [sp, #56]
    fcb0:	ldr	x2, [x0, #8]
    fcb4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    fcb8:	add	x1, x0, #0x500
    fcbc:	mov	x0, x2
    fcc0:	bl	6a70 <PyType_IsSubtype@plt>
    fcc4:	cmp	w0, #0x0
    fcc8:	b.ne	fcf0 <PyFloat_FromString@plt+0x91a0>  // b.any
    fccc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fcd0:	ldr	x0, [x0, #3936]
    fcd4:	ldr	x2, [x0]
    fcd8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fcdc:	add	x1, x0, #0xe00
    fce0:	mov	x0, x2
    fce4:	bl	66f0 <PyErr_SetString@plt>
    fce8:	mov	x0, #0x0                   	// #0
    fcec:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fcf0:	ldr	x1, [sp, #56]
    fcf4:	add	x0, sp, #0x48
    fcf8:	mov	x3, x1
    fcfc:	ldr	x2, [sp, #40]
    fd00:	mov	x1, x0
    fd04:	mov	w0, #0x1                   	// #1
    fd08:	bl	b168 <PyFloat_FromString@plt+0x4618>
    fd0c:	cmp	w0, #0x0
    fd10:	b.ne	fd1c <PyFloat_FromString@plt+0x91cc>  // b.any
    fd14:	mov	x0, #0x0                   	// #0
    fd18:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fd1c:	ldr	x1, [sp, #80]
    fd20:	ldr	x2, [sp, #56]
    fd24:	add	x0, sp, #0x40
    fd28:	mov	x3, x2
    fd2c:	mov	x2, x1
    fd30:	mov	x1, x0
    fd34:	mov	w0, #0x1                   	// #1
    fd38:	bl	b168 <PyFloat_FromString@plt+0x4618>
    fd3c:	cmp	w0, #0x0
    fd40:	b.ne	fd64 <PyFloat_FromString@plt+0x9214>  // b.any
    fd44:	ldr	x0, [sp, #72]
    fd48:	mov	x2, x0
    fd4c:	mov	w1, #0xf8b                 	// #3979
    fd50:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fd54:	add	x0, x0, #0x9c0
    fd58:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fd5c:	mov	x0, #0x0                   	// #0
    fd60:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fd64:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    fd68:	add	x0, x0, #0x360
    fd6c:	bl	912c <PyFloat_FromString@plt+0x25dc>
    fd70:	str	x0, [sp, #88]
    fd74:	ldr	x0, [sp, #88]
    fd78:	cmp	x0, #0x0
    fd7c:	b.ne	fdb8 <PyFloat_FromString@plt+0x9268>  // b.any
    fd80:	ldr	x0, [sp, #72]
    fd84:	mov	x2, x0
    fd88:	mov	w1, #0xf8b                 	// #3979
    fd8c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fd90:	add	x0, x0, #0x9c0
    fd94:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fd98:	ldr	x0, [sp, #64]
    fd9c:	mov	x2, x0
    fda0:	mov	w1, #0xf8b                 	// #3979
    fda4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fda8:	add	x0, x0, #0x9c0
    fdac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fdb0:	mov	x0, #0x0                   	// #0
    fdb4:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fdb8:	ldr	x0, [sp, #88]
    fdbc:	add	x5, x0, #0x18
    fdc0:	ldr	x0, [sp, #72]
    fdc4:	add	x1, x0, #0x18
    fdc8:	ldr	x0, [sp, #64]
    fdcc:	add	x2, x0, #0x18
    fdd0:	ldr	x0, [sp, #56]
    fdd4:	add	x0, x0, #0x10
    fdd8:	add	x3, sp, #0x34
    fddc:	mov	x4, x3
    fde0:	mov	x3, x0
    fde4:	mov	x0, x5
    fde8:	bl	378c0 <PyInit__decimal@@Base+0x1fbe8>
    fdec:	ldr	x0, [sp, #72]
    fdf0:	mov	x2, x0
    fdf4:	mov	w1, #0xf8b                 	// #3979
    fdf8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fdfc:	add	x0, x0, #0x9c0
    fe00:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fe04:	ldr	x0, [sp, #64]
    fe08:	mov	x2, x0
    fe0c:	mov	w1, #0xf8b                 	// #3979
    fe10:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fe14:	add	x0, x0, #0x9c0
    fe18:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fe1c:	ldr	x0, [sp, #56]
    fe20:	ldr	w1, [sp, #52]
    fe24:	bl	7424 <PyFloat_FromString@plt+0x8d4>
    fe28:	cmp	w0, #0x0
    fe2c:	b.eq	fe4c <PyFloat_FromString@plt+0x92fc>  // b.none
    fe30:	ldr	x2, [sp, #88]
    fe34:	mov	w1, #0xf8b                 	// #3979
    fe38:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fe3c:	add	x0, x0, #0x9c0
    fe40:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    fe44:	mov	x0, #0x0                   	// #0
    fe48:	b	fe50 <PyFloat_FromString@plt+0x9300>
    fe4c:	ldr	x0, [sp, #88]
    fe50:	ldp	x29, x30, [sp], #96
    fe54:	ret
    fe58:	stp	x29, x30, [sp, #-96]!
    fe5c:	mov	x29, sp
    fe60:	str	x0, [sp, #40]
    fe64:	str	x1, [sp, #32]
    fe68:	str	x2, [sp, #24]
    fe6c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fe70:	ldr	x0, [x0, #4008]
    fe74:	str	x0, [sp, #56]
    fe78:	str	wzr, [sp, #52]
    fe7c:	add	x1, sp, #0x38
    fe80:	add	x0, sp, #0x50
    fe84:	mov	x5, x1
    fe88:	mov	x4, x0
    fe8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
    fe90:	add	x3, x0, #0x3c0
    fe94:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
    fe98:	add	x2, x0, #0xc8
    fe9c:	ldr	x1, [sp, #24]
    fea0:	ldr	x0, [sp, #32]
    fea4:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
    fea8:	cmp	w0, #0x0
    feac:	b.ne	feb8 <PyFloat_FromString@plt+0x9368>  // b.any
    feb0:	mov	x0, #0x0                   	// #0
    feb4:	b	100c0 <PyFloat_FromString@plt+0x9570>
    feb8:	ldr	x1, [sp, #56]
    febc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    fec0:	ldr	x0, [x0, #4008]
    fec4:	cmp	x1, x0
    fec8:	b.ne	ff04 <PyFloat_FromString@plt+0x93b4>  // b.any
    fecc:	bl	8cbc <PyFloat_FromString@plt+0x216c>
    fed0:	str	x0, [sp, #56]
    fed4:	ldr	x0, [sp, #56]
    fed8:	cmp	x0, #0x0
    fedc:	b.ne	fee8 <PyFloat_FromString@plt+0x9398>  // b.any
    fee0:	mov	x0, #0x0                   	// #0
    fee4:	b	100c0 <PyFloat_FromString@plt+0x9570>
    fee8:	ldr	x0, [sp, #56]
    feec:	mov	x2, x0
    fef0:	mov	w1, #0xf8c                 	// #3980
    fef4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    fef8:	add	x0, x0, #0x9c0
    fefc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ff00:	b	ff60 <PyFloat_FromString@plt+0x9410>
    ff04:	ldr	x0, [sp, #56]
    ff08:	ldr	x1, [x0, #8]
    ff0c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ff10:	add	x0, x0, #0x500
    ff14:	cmp	x1, x0
    ff18:	b.eq	ff60 <PyFloat_FromString@plt+0x9410>  // b.none
    ff1c:	ldr	x0, [sp, #56]
    ff20:	ldr	x2, [x0, #8]
    ff24:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ff28:	add	x1, x0, #0x500
    ff2c:	mov	x0, x2
    ff30:	bl	6a70 <PyType_IsSubtype@plt>
    ff34:	cmp	w0, #0x0
    ff38:	b.ne	ff60 <PyFloat_FromString@plt+0x9410>  // b.any
    ff3c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
    ff40:	ldr	x0, [x0, #3936]
    ff44:	ldr	x2, [x0]
    ff48:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ff4c:	add	x1, x0, #0xe00
    ff50:	mov	x0, x2
    ff54:	bl	66f0 <PyErr_SetString@plt>
    ff58:	mov	x0, #0x0                   	// #0
    ff5c:	b	100c0 <PyFloat_FromString@plt+0x9570>
    ff60:	ldr	x1, [sp, #56]
    ff64:	add	x0, sp, #0x48
    ff68:	mov	x3, x1
    ff6c:	ldr	x2, [sp, #40]
    ff70:	mov	x1, x0
    ff74:	mov	w0, #0x1                   	// #1
    ff78:	bl	b168 <PyFloat_FromString@plt+0x4618>
    ff7c:	cmp	w0, #0x0
    ff80:	b.ne	ff8c <PyFloat_FromString@plt+0x943c>  // b.any
    ff84:	mov	x0, #0x0                   	// #0
    ff88:	b	100c0 <PyFloat_FromString@plt+0x9570>
    ff8c:	ldr	x1, [sp, #80]
    ff90:	ldr	x2, [sp, #56]
    ff94:	add	x0, sp, #0x40
    ff98:	mov	x3, x2
    ff9c:	mov	x2, x1
    ffa0:	mov	x1, x0
    ffa4:	mov	w0, #0x1                   	// #1
    ffa8:	bl	b168 <PyFloat_FromString@plt+0x4618>
    ffac:	cmp	w0, #0x0
    ffb0:	b.ne	ffd4 <PyFloat_FromString@plt+0x9484>  // b.any
    ffb4:	ldr	x0, [sp, #72]
    ffb8:	mov	x2, x0
    ffbc:	mov	w1, #0xf8c                 	// #3980
    ffc0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
    ffc4:	add	x0, x0, #0x9c0
    ffc8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
    ffcc:	mov	x0, #0x0                   	// #0
    ffd0:	b	100c0 <PyFloat_FromString@plt+0x9570>
    ffd4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
    ffd8:	add	x0, x0, #0x360
    ffdc:	bl	912c <PyFloat_FromString@plt+0x25dc>
    ffe0:	str	x0, [sp, #88]
    ffe4:	ldr	x0, [sp, #88]
    ffe8:	cmp	x0, #0x0
    ffec:	b.ne	10028 <PyFloat_FromString@plt+0x94d8>  // b.any
    fff0:	ldr	x0, [sp, #72]
    fff4:	mov	x2, x0
    fff8:	mov	w1, #0xf8c                 	// #3980
    fffc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10000:	add	x0, x0, #0x9c0
   10004:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10008:	ldr	x0, [sp, #64]
   1000c:	mov	x2, x0
   10010:	mov	w1, #0xf8c                 	// #3980
   10014:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10018:	add	x0, x0, #0x9c0
   1001c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10020:	mov	x0, #0x0                   	// #0
   10024:	b	100c0 <PyFloat_FromString@plt+0x9570>
   10028:	ldr	x0, [sp, #88]
   1002c:	add	x5, x0, #0x18
   10030:	ldr	x0, [sp, #72]
   10034:	add	x1, x0, #0x18
   10038:	ldr	x0, [sp, #64]
   1003c:	add	x2, x0, #0x18
   10040:	ldr	x0, [sp, #56]
   10044:	add	x0, x0, #0x10
   10048:	add	x3, sp, #0x34
   1004c:	mov	x4, x3
   10050:	mov	x3, x0
   10054:	mov	x0, x5
   10058:	bl	3a598 <PyInit__decimal@@Base+0x228c0>
   1005c:	ldr	x0, [sp, #72]
   10060:	mov	x2, x0
   10064:	mov	w1, #0xf8c                 	// #3980
   10068:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1006c:	add	x0, x0, #0x9c0
   10070:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10074:	ldr	x0, [sp, #64]
   10078:	mov	x2, x0
   1007c:	mov	w1, #0xf8c                 	// #3980
   10080:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10084:	add	x0, x0, #0x9c0
   10088:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1008c:	ldr	x0, [sp, #56]
   10090:	ldr	w1, [sp, #52]
   10094:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   10098:	cmp	w0, #0x0
   1009c:	b.eq	100bc <PyFloat_FromString@plt+0x956c>  // b.none
   100a0:	ldr	x2, [sp, #88]
   100a4:	mov	w1, #0xf8c                 	// #3980
   100a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   100ac:	add	x0, x0, #0x9c0
   100b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   100b4:	mov	x0, #0x0                   	// #0
   100b8:	b	100c0 <PyFloat_FromString@plt+0x9570>
   100bc:	ldr	x0, [sp, #88]
   100c0:	ldp	x29, x30, [sp], #96
   100c4:	ret
   100c8:	stp	x29, x30, [sp, #-112]!
   100cc:	mov	x29, sp
   100d0:	str	x0, [sp, #40]
   100d4:	str	x1, [sp, #32]
   100d8:	str	x2, [sp, #24]
   100dc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   100e0:	ldr	x0, [x0, #4008]
   100e4:	str	x0, [sp, #56]
   100e8:	str	wzr, [sp, #52]
   100ec:	add	x2, sp, #0x38
   100f0:	add	x1, sp, #0x58
   100f4:	add	x0, sp, #0x60
   100f8:	mov	x6, x2
   100fc:	mov	x5, x1
   10100:	mov	x4, x0
   10104:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10108:	add	x3, x0, #0x3d8
   1010c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   10110:	add	x2, x0, #0x308
   10114:	ldr	x1, [sp, #24]
   10118:	ldr	x0, [sp, #32]
   1011c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10120:	cmp	w0, #0x0
   10124:	b.ne	10130 <PyFloat_FromString@plt+0x95e0>  // b.any
   10128:	mov	x0, #0x0                   	// #0
   1012c:	b	103d0 <PyFloat_FromString@plt+0x9880>
   10130:	ldr	x1, [sp, #56]
   10134:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10138:	ldr	x0, [x0, #4008]
   1013c:	cmp	x1, x0
   10140:	b.ne	1017c <PyFloat_FromString@plt+0x962c>  // b.any
   10144:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10148:	str	x0, [sp, #56]
   1014c:	ldr	x0, [sp, #56]
   10150:	cmp	x0, #0x0
   10154:	b.ne	10160 <PyFloat_FromString@plt+0x9610>  // b.any
   10158:	mov	x0, #0x0                   	// #0
   1015c:	b	103d0 <PyFloat_FromString@plt+0x9880>
   10160:	ldr	x0, [sp, #56]
   10164:	mov	x2, x0
   10168:	mov	w1, #0xf8f                 	// #3983
   1016c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10170:	add	x0, x0, #0x9c0
   10174:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10178:	b	101d8 <PyFloat_FromString@plt+0x9688>
   1017c:	ldr	x0, [sp, #56]
   10180:	ldr	x1, [x0, #8]
   10184:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10188:	add	x0, x0, #0x500
   1018c:	cmp	x1, x0
   10190:	b.eq	101d8 <PyFloat_FromString@plt+0x9688>  // b.none
   10194:	ldr	x0, [sp, #56]
   10198:	ldr	x2, [x0, #8]
   1019c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   101a0:	add	x1, x0, #0x500
   101a4:	mov	x0, x2
   101a8:	bl	6a70 <PyType_IsSubtype@plt>
   101ac:	cmp	w0, #0x0
   101b0:	b.ne	101d8 <PyFloat_FromString@plt+0x9688>  // b.any
   101b4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   101b8:	ldr	x0, [x0, #3936]
   101bc:	ldr	x2, [x0]
   101c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   101c4:	add	x1, x0, #0xe00
   101c8:	mov	x0, x2
   101cc:	bl	66f0 <PyErr_SetString@plt>
   101d0:	mov	x0, #0x0                   	// #0
   101d4:	b	103d0 <PyFloat_FromString@plt+0x9880>
   101d8:	ldr	x1, [sp, #56]
   101dc:	add	x0, sp, #0x50
   101e0:	mov	x3, x1
   101e4:	ldr	x2, [sp, #40]
   101e8:	mov	x1, x0
   101ec:	mov	w0, #0x1                   	// #1
   101f0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   101f4:	cmp	w0, #0x0
   101f8:	b.ne	10204 <PyFloat_FromString@plt+0x96b4>  // b.any
   101fc:	mov	x0, #0x0                   	// #0
   10200:	b	103d0 <PyFloat_FromString@plt+0x9880>
   10204:	ldr	x1, [sp, #96]
   10208:	ldr	x2, [sp, #56]
   1020c:	add	x0, sp, #0x48
   10210:	mov	x3, x2
   10214:	mov	x2, x1
   10218:	mov	x1, x0
   1021c:	mov	w0, #0x1                   	// #1
   10220:	bl	b168 <PyFloat_FromString@plt+0x4618>
   10224:	cmp	w0, #0x0
   10228:	b.ne	1024c <PyFloat_FromString@plt+0x96fc>  // b.any
   1022c:	ldr	x0, [sp, #80]
   10230:	mov	x2, x0
   10234:	mov	w1, #0xf8f                 	// #3983
   10238:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1023c:	add	x0, x0, #0x9c0
   10240:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10244:	mov	x0, #0x0                   	// #0
   10248:	b	103d0 <PyFloat_FromString@plt+0x9880>
   1024c:	ldr	x1, [sp, #88]
   10250:	ldr	x2, [sp, #56]
   10254:	add	x0, sp, #0x40
   10258:	mov	x3, x2
   1025c:	mov	x2, x1
   10260:	mov	x1, x0
   10264:	mov	w0, #0x1                   	// #1
   10268:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1026c:	cmp	w0, #0x0
   10270:	b.ne	102ac <PyFloat_FromString@plt+0x975c>  // b.any
   10274:	ldr	x0, [sp, #80]
   10278:	mov	x2, x0
   1027c:	mov	w1, #0xf8f                 	// #3983
   10280:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10284:	add	x0, x0, #0x9c0
   10288:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1028c:	ldr	x0, [sp, #72]
   10290:	mov	x2, x0
   10294:	mov	w1, #0xf8f                 	// #3983
   10298:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1029c:	add	x0, x0, #0x9c0
   102a0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   102a4:	mov	x0, #0x0                   	// #0
   102a8:	b	103d0 <PyFloat_FromString@plt+0x9880>
   102ac:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   102b0:	add	x0, x0, #0x360
   102b4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   102b8:	str	x0, [sp, #104]
   102bc:	ldr	x0, [sp, #104]
   102c0:	cmp	x0, #0x0
   102c4:	b.ne	10318 <PyFloat_FromString@plt+0x97c8>  // b.any
   102c8:	ldr	x0, [sp, #80]
   102cc:	mov	x2, x0
   102d0:	mov	w1, #0xf8f                 	// #3983
   102d4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   102d8:	add	x0, x0, #0x9c0
   102dc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   102e0:	ldr	x0, [sp, #72]
   102e4:	mov	x2, x0
   102e8:	mov	w1, #0xf8f                 	// #3983
   102ec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   102f0:	add	x0, x0, #0x9c0
   102f4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   102f8:	ldr	x0, [sp, #64]
   102fc:	mov	x2, x0
   10300:	mov	w1, #0xf8f                 	// #3983
   10304:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10308:	add	x0, x0, #0x9c0
   1030c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10310:	mov	x0, #0x0                   	// #0
   10314:	b	103d0 <PyFloat_FromString@plt+0x9880>
   10318:	ldr	x0, [sp, #104]
   1031c:	add	x6, x0, #0x18
   10320:	ldr	x0, [sp, #80]
   10324:	add	x1, x0, #0x18
   10328:	ldr	x0, [sp, #72]
   1032c:	add	x2, x0, #0x18
   10330:	ldr	x0, [sp, #64]
   10334:	add	x3, x0, #0x18
   10338:	ldr	x0, [sp, #56]
   1033c:	add	x0, x0, #0x10
   10340:	add	x4, sp, #0x34
   10344:	mov	x5, x4
   10348:	mov	x4, x0
   1034c:	mov	x0, x6
   10350:	bl	32e64 <PyInit__decimal@@Base+0x1b18c>
   10354:	ldr	x0, [sp, #80]
   10358:	mov	x2, x0
   1035c:	mov	w1, #0xf8f                 	// #3983
   10360:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10364:	add	x0, x0, #0x9c0
   10368:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1036c:	ldr	x0, [sp, #72]
   10370:	mov	x2, x0
   10374:	mov	w1, #0xf8f                 	// #3983
   10378:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1037c:	add	x0, x0, #0x9c0
   10380:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10384:	ldr	x0, [sp, #64]
   10388:	mov	x2, x0
   1038c:	mov	w1, #0xf8f                 	// #3983
   10390:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10394:	add	x0, x0, #0x9c0
   10398:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1039c:	ldr	x0, [sp, #56]
   103a0:	ldr	w1, [sp, #52]
   103a4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   103a8:	cmp	w0, #0x0
   103ac:	b.eq	103cc <PyFloat_FromString@plt+0x987c>  // b.none
   103b0:	ldr	x2, [sp, #104]
   103b4:	mov	w1, #0xf8f                 	// #3983
   103b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   103bc:	add	x0, x0, #0x9c0
   103c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   103c4:	mov	x0, #0x0                   	// #0
   103c8:	b	103d0 <PyFloat_FromString@plt+0x9880>
   103cc:	ldr	x0, [sp, #104]
   103d0:	ldp	x29, x30, [sp], #112
   103d4:	ret
   103d8:	stp	x29, x30, [sp, #-32]!
   103dc:	mov	x29, sp
   103e0:	str	x0, [sp, #24]
   103e4:	str	x1, [sp, #16]
   103e8:	ldr	x0, [sp, #24]
   103ec:	add	x0, x0, #0x18
   103f0:	bl	2532c <PyInit__decimal@@Base+0xd654>
   103f4:	cmp	w0, #0x0
   103f8:	b.eq	10404 <PyFloat_FromString@plt+0x98b4>  // b.none
   103fc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10400:	b	10408 <PyFloat_FromString@plt+0x98b8>
   10404:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10408:	ldp	x29, x30, [sp], #32
   1040c:	ret
   10410:	stp	x29, x30, [sp, #-32]!
   10414:	mov	x29, sp
   10418:	str	x0, [sp, #24]
   1041c:	str	x1, [sp, #16]
   10420:	ldr	x0, [sp, #24]
   10424:	add	x0, x0, #0x18
   10428:	bl	25340 <PyInit__decimal@@Base+0xd668>
   1042c:	cmp	w0, #0x0
   10430:	b.eq	1043c <PyFloat_FromString@plt+0x98ec>  // b.none
   10434:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10438:	b	10440 <PyFloat_FromString@plt+0x98f0>
   1043c:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10440:	ldp	x29, x30, [sp], #32
   10444:	ret
   10448:	stp	x29, x30, [sp, #-32]!
   1044c:	mov	x29, sp
   10450:	str	x0, [sp, #24]
   10454:	str	x1, [sp, #16]
   10458:	ldr	x0, [sp, #24]
   1045c:	add	x0, x0, #0x18
   10460:	bl	25368 <PyInit__decimal@@Base+0xd690>
   10464:	cmp	w0, #0x0
   10468:	b.eq	10474 <PyFloat_FromString@plt+0x9924>  // b.none
   1046c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10470:	b	10478 <PyFloat_FromString@plt+0x9928>
   10474:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10478:	ldp	x29, x30, [sp], #32
   1047c:	ret
   10480:	stp	x29, x30, [sp, #-32]!
   10484:	mov	x29, sp
   10488:	str	x0, [sp, #24]
   1048c:	str	x1, [sp, #16]
   10490:	ldr	x0, [sp, #24]
   10494:	add	x0, x0, #0x18
   10498:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
   1049c:	cmp	w0, #0x0
   104a0:	b.eq	104ac <PyFloat_FromString@plt+0x995c>  // b.none
   104a4:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   104a8:	b	104b0 <PyFloat_FromString@plt+0x9960>
   104ac:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   104b0:	ldp	x29, x30, [sp], #32
   104b4:	ret
   104b8:	stp	x29, x30, [sp, #-32]!
   104bc:	mov	x29, sp
   104c0:	str	x0, [sp, #24]
   104c4:	str	x1, [sp, #16]
   104c8:	ldr	x0, [sp, #24]
   104cc:	add	x0, x0, #0x18
   104d0:	bl	253e4 <PyInit__decimal@@Base+0xd70c>
   104d4:	cmp	w0, #0x0
   104d8:	b.eq	104e4 <PyFloat_FromString@plt+0x9994>  // b.none
   104dc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   104e0:	b	104e8 <PyFloat_FromString@plt+0x9998>
   104e4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   104e8:	ldp	x29, x30, [sp], #32
   104ec:	ret
   104f0:	stp	x29, x30, [sp, #-32]!
   104f4:	mov	x29, sp
   104f8:	str	x0, [sp, #24]
   104fc:	str	x1, [sp, #16]
   10500:	ldr	x0, [sp, #24]
   10504:	add	x0, x0, #0x18
   10508:	bl	2541c <PyInit__decimal@@Base+0xd744>
   1050c:	cmp	w0, #0x0
   10510:	b.eq	1051c <PyFloat_FromString@plt+0x99cc>  // b.none
   10514:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10518:	b	10520 <PyFloat_FromString@plt+0x99d0>
   1051c:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10520:	ldp	x29, x30, [sp], #32
   10524:	ret
   10528:	stp	x29, x30, [sp, #-32]!
   1052c:	mov	x29, sp
   10530:	str	x0, [sp, #24]
   10534:	str	x1, [sp, #16]
   10538:	ldr	x0, [sp, #24]
   1053c:	add	x0, x0, #0x18
   10540:	bl	25400 <PyInit__decimal@@Base+0xd728>
   10544:	cmp	w0, #0x0
   10548:	b.eq	10554 <PyFloat_FromString@plt+0x9a04>  // b.none
   1054c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10550:	b	10558 <PyFloat_FromString@plt+0x9a08>
   10554:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10558:	ldp	x29, x30, [sp], #32
   1055c:	ret
   10560:	stp	x29, x30, [sp, #-32]!
   10564:	mov	x29, sp
   10568:	str	x0, [sp, #24]
   1056c:	str	x1, [sp, #16]
   10570:	ldr	x0, [sp, #24]
   10574:	add	x0, x0, #0x18
   10578:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   1057c:	cmp	w0, #0x0
   10580:	b.eq	1058c <PyFloat_FromString@plt+0x9a3c>  // b.none
   10584:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   10588:	b	10590 <PyFloat_FromString@plt+0x9a40>
   1058c:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   10590:	ldp	x29, x30, [sp], #32
   10594:	ret
   10598:	stp	x29, x30, [sp, #-64]!
   1059c:	mov	x29, sp
   105a0:	str	x0, [sp, #40]
   105a4:	str	x1, [sp, #32]
   105a8:	str	x2, [sp, #24]
   105ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   105b0:	ldr	x0, [x0, #4008]
   105b4:	str	x0, [sp, #56]
   105b8:	add	x0, sp, #0x38
   105bc:	mov	x4, x0
   105c0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   105c4:	add	x3, x0, #0x3f8
   105c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   105cc:	add	x2, x0, #0xdf8
   105d0:	ldr	x1, [sp, #24]
   105d4:	ldr	x0, [sp, #32]
   105d8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   105dc:	cmp	w0, #0x0
   105e0:	b.ne	105ec <PyFloat_FromString@plt+0x9a9c>  // b.any
   105e4:	mov	x0, #0x0                   	// #0
   105e8:	b	106c8 <PyFloat_FromString@plt+0x9b78>
   105ec:	ldr	x1, [sp, #56]
   105f0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   105f4:	ldr	x0, [x0, #4008]
   105f8:	cmp	x1, x0
   105fc:	b.ne	10638 <PyFloat_FromString@plt+0x9ae8>  // b.any
   10600:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10604:	str	x0, [sp, #56]
   10608:	ldr	x0, [sp, #56]
   1060c:	cmp	x0, #0x0
   10610:	b.ne	1061c <PyFloat_FromString@plt+0x9acc>  // b.any
   10614:	mov	x0, #0x0                   	// #0
   10618:	b	106c8 <PyFloat_FromString@plt+0x9b78>
   1061c:	ldr	x0, [sp, #56]
   10620:	mov	x2, x0
   10624:	mov	w1, #0xf9c                 	// #3996
   10628:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1062c:	add	x0, x0, #0x9c0
   10630:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10634:	b	10694 <PyFloat_FromString@plt+0x9b44>
   10638:	ldr	x0, [sp, #56]
   1063c:	ldr	x1, [x0, #8]
   10640:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10644:	add	x0, x0, #0x500
   10648:	cmp	x1, x0
   1064c:	b.eq	10694 <PyFloat_FromString@plt+0x9b44>  // b.none
   10650:	ldr	x0, [sp, #56]
   10654:	ldr	x2, [x0, #8]
   10658:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1065c:	add	x1, x0, #0x500
   10660:	mov	x0, x2
   10664:	bl	6a70 <PyType_IsSubtype@plt>
   10668:	cmp	w0, #0x0
   1066c:	b.ne	10694 <PyFloat_FromString@plt+0x9b44>  // b.any
   10670:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10674:	ldr	x0, [x0, #3936]
   10678:	ldr	x2, [x0]
   1067c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10680:	add	x1, x0, #0xe00
   10684:	mov	x0, x2
   10688:	bl	66f0 <PyErr_SetString@plt>
   1068c:	mov	x0, #0x0                   	// #0
   10690:	b	106c8 <PyFloat_FromString@plt+0x9b78>
   10694:	ldr	x0, [sp, #40]
   10698:	add	x2, x0, #0x18
   1069c:	ldr	x0, [sp, #56]
   106a0:	add	x0, x0, #0x10
   106a4:	mov	x1, x0
   106a8:	mov	x0, x2
   106ac:	bl	25500 <PyInit__decimal@@Base+0xd828>
   106b0:	cmp	w0, #0x0
   106b4:	b.eq	106c0 <PyFloat_FromString@plt+0x9b70>  // b.none
   106b8:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   106bc:	b	106c4 <PyFloat_FromString@plt+0x9b74>
   106c0:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   106c4:	nop
   106c8:	ldp	x29, x30, [sp], #64
   106cc:	ret
   106d0:	stp	x29, x30, [sp, #-64]!
   106d4:	mov	x29, sp
   106d8:	str	x0, [sp, #40]
   106dc:	str	x1, [sp, #32]
   106e0:	str	x2, [sp, #24]
   106e4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   106e8:	ldr	x0, [x0, #4008]
   106ec:	str	x0, [sp, #56]
   106f0:	add	x0, sp, #0x38
   106f4:	mov	x4, x0
   106f8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   106fc:	add	x3, x0, #0x408
   10700:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10704:	add	x2, x0, #0xdf8
   10708:	ldr	x1, [sp, #24]
   1070c:	ldr	x0, [sp, #32]
   10710:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10714:	cmp	w0, #0x0
   10718:	b.ne	10724 <PyFloat_FromString@plt+0x9bd4>  // b.any
   1071c:	mov	x0, #0x0                   	// #0
   10720:	b	10800 <PyFloat_FromString@plt+0x9cb0>
   10724:	ldr	x1, [sp, #56]
   10728:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1072c:	ldr	x0, [x0, #4008]
   10730:	cmp	x1, x0
   10734:	b.ne	10770 <PyFloat_FromString@plt+0x9c20>  // b.any
   10738:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   1073c:	str	x0, [sp, #56]
   10740:	ldr	x0, [sp, #56]
   10744:	cmp	x0, #0x0
   10748:	b.ne	10754 <PyFloat_FromString@plt+0x9c04>  // b.any
   1074c:	mov	x0, #0x0                   	// #0
   10750:	b	10800 <PyFloat_FromString@plt+0x9cb0>
   10754:	ldr	x0, [sp, #56]
   10758:	mov	x2, x0
   1075c:	mov	w1, #0xf9d                 	// #3997
   10760:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10764:	add	x0, x0, #0x9c0
   10768:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1076c:	b	107cc <PyFloat_FromString@plt+0x9c7c>
   10770:	ldr	x0, [sp, #56]
   10774:	ldr	x1, [x0, #8]
   10778:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1077c:	add	x0, x0, #0x500
   10780:	cmp	x1, x0
   10784:	b.eq	107cc <PyFloat_FromString@plt+0x9c7c>  // b.none
   10788:	ldr	x0, [sp, #56]
   1078c:	ldr	x2, [x0, #8]
   10790:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10794:	add	x1, x0, #0x500
   10798:	mov	x0, x2
   1079c:	bl	6a70 <PyType_IsSubtype@plt>
   107a0:	cmp	w0, #0x0
   107a4:	b.ne	107cc <PyFloat_FromString@plt+0x9c7c>  // b.any
   107a8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   107ac:	ldr	x0, [x0, #3936]
   107b0:	ldr	x2, [x0]
   107b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   107b8:	add	x1, x0, #0xe00
   107bc:	mov	x0, x2
   107c0:	bl	66f0 <PyErr_SetString@plt>
   107c4:	mov	x0, #0x0                   	// #0
   107c8:	b	10800 <PyFloat_FromString@plt+0x9cb0>
   107cc:	ldr	x0, [sp, #40]
   107d0:	add	x2, x0, #0x18
   107d4:	ldr	x0, [sp, #56]
   107d8:	add	x0, x0, #0x10
   107dc:	mov	x1, x0
   107e0:	mov	x0, x2
   107e4:	bl	255b8 <PyInit__decimal@@Base+0xd8e0>
   107e8:	cmp	w0, #0x0
   107ec:	b.eq	107f8 <PyFloat_FromString@plt+0x9ca8>  // b.none
   107f0:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   107f4:	b	107fc <PyFloat_FromString@plt+0x9cac>
   107f8:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   107fc:	nop
   10800:	ldp	x29, x30, [sp], #64
   10804:	ret
   10808:	stp	x29, x30, [sp, #-48]!
   1080c:	mov	x29, sp
   10810:	str	x0, [sp, #24]
   10814:	str	x1, [sp, #16]
   10818:	ldr	x0, [sp, #24]
   1081c:	add	x0, x0, #0x18
   10820:	bl	25438 <PyInit__decimal@@Base+0xd760>
   10824:	cmp	w0, #0x0
   10828:	b.eq	10834 <PyFloat_FromString@plt+0x9ce4>  // b.none
   1082c:	str	xzr, [sp, #40]
   10830:	b	10844 <PyFloat_FromString@plt+0x9cf4>
   10834:	ldr	x0, [sp, #24]
   10838:	add	x0, x0, #0x18
   1083c:	bl	24cd8 <PyInit__decimal@@Base+0xd000>
   10840:	str	x0, [sp, #40]
   10844:	ldr	x0, [sp, #40]
   10848:	bl	6740 <PyLong_FromSsize_t@plt>
   1084c:	ldp	x29, x30, [sp], #48
   10850:	ret
   10854:	stp	x29, x30, [sp, #-32]!
   10858:	mov	x29, sp
   1085c:	str	x0, [sp, #24]
   10860:	str	x1, [sp, #16]
   10864:	ldr	x0, [sp, #24]
   10868:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   1086c:	ldr	x0, [sp, #24]
   10870:	ldp	x29, x30, [sp], #32
   10874:	ret
   10878:	stp	x29, x30, [sp, #-32]!
   1087c:	mov	x29, sp
   10880:	str	x0, [sp, #24]
   10884:	str	x1, [sp, #16]
   10888:	ldr	x0, [sp, #24]
   1088c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   10890:	ldr	x0, [sp, #24]
   10894:	ldp	x29, x30, [sp], #32
   10898:	ret
   1089c:	stp	x29, x30, [sp, #-48]!
   108a0:	mov	x29, sp
   108a4:	str	x0, [sp, #24]
   108a8:	str	x1, [sp, #16]
   108ac:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   108b0:	add	x0, x0, #0x360
   108b4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   108b8:	str	x0, [sp, #40]
   108bc:	ldr	x0, [sp, #40]
   108c0:	cmp	x0, #0x0
   108c4:	b.ne	108d0 <PyFloat_FromString@plt+0x9d80>  // b.any
   108c8:	mov	x0, #0x0                   	// #0
   108cc:	b	108e8 <PyFloat_FromString@plt+0x9d98>
   108d0:	mov	x3, #0x0                   	// #0
   108d4:	mov	w2, #0xa                   	// #10
   108d8:	mov	w1, #0x0                   	// #0
   108dc:	ldr	x0, [sp, #40]
   108e0:	bl	97fc <PyFloat_FromString@plt+0x2cac>
   108e4:	ldr	x0, [sp, #40]
   108e8:	ldp	x29, x30, [sp], #48
   108ec:	ret
   108f0:	stp	x29, x30, [sp, #-48]!
   108f4:	mov	x29, sp
   108f8:	str	x0, [sp, #24]
   108fc:	str	x1, [sp, #16]
   10900:	str	wzr, [sp, #36]
   10904:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10908:	add	x0, x0, #0x360
   1090c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   10910:	str	x0, [sp, #40]
   10914:	ldr	x0, [sp, #40]
   10918:	cmp	x0, #0x0
   1091c:	b.ne	10928 <PyFloat_FromString@plt+0x9dd8>  // b.any
   10920:	mov	x0, #0x0                   	// #0
   10924:	b	10980 <PyFloat_FromString@plt+0x9e30>
   10928:	ldr	x0, [sp, #40]
   1092c:	add	x3, x0, #0x18
   10930:	ldr	x0, [sp, #24]
   10934:	add	x0, x0, #0x18
   10938:	add	x1, sp, #0x24
   1093c:	mov	x2, x1
   10940:	mov	x1, x0
   10944:	mov	x0, x3
   10948:	bl	29bdc <PyInit__decimal@@Base+0x11f04>
   1094c:	ldr	w0, [sp, #36]
   10950:	and	w0, w0, #0x200
   10954:	cmp	w0, #0x0
   10958:	b.eq	1097c <PyFloat_FromString@plt+0x9e2c>  // b.none
   1095c:	ldr	x2, [sp, #40]
   10960:	mov	w1, #0xfd7                 	// #4055
   10964:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10968:	add	x0, x0, #0x9c0
   1096c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10970:	bl	6690 <PyErr_NoMemory@plt>
   10974:	mov	x0, #0x0                   	// #0
   10978:	b	10980 <PyFloat_FromString@plt+0x9e30>
   1097c:	ldr	x0, [sp, #40]
   10980:	ldp	x29, x30, [sp], #48
   10984:	ret
   10988:	stp	x29, x30, [sp, #-48]!
   1098c:	mov	x29, sp
   10990:	str	x0, [sp, #24]
   10994:	str	x1, [sp, #16]
   10998:	str	wzr, [sp, #36]
   1099c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   109a0:	add	x0, x0, #0x360
   109a4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   109a8:	str	x0, [sp, #40]
   109ac:	ldr	x0, [sp, #40]
   109b0:	cmp	x0, #0x0
   109b4:	b.ne	109c0 <PyFloat_FromString@plt+0x9e70>  // b.any
   109b8:	mov	x0, #0x0                   	// #0
   109bc:	b	10a18 <PyFloat_FromString@plt+0x9ec8>
   109c0:	ldr	x0, [sp, #40]
   109c4:	add	x3, x0, #0x18
   109c8:	ldr	x0, [sp, #24]
   109cc:	add	x0, x0, #0x18
   109d0:	add	x1, sp, #0x24
   109d4:	mov	x2, x1
   109d8:	mov	x1, x0
   109dc:	mov	x0, x3
   109e0:	bl	29c40 <PyInit__decimal@@Base+0x11f68>
   109e4:	ldr	w0, [sp, #36]
   109e8:	and	w0, w0, #0x200
   109ec:	cmp	w0, #0x0
   109f0:	b.eq	10a14 <PyFloat_FromString@plt+0x9ec4>  // b.none
   109f4:	ldr	x2, [sp, #40]
   109f8:	mov	w1, #0xfeb                 	// #4075
   109fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10a00:	add	x0, x0, #0x9c0
   10a04:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10a08:	bl	6690 <PyErr_NoMemory@plt>
   10a0c:	mov	x0, #0x0                   	// #0
   10a10:	b	10a18 <PyFloat_FromString@plt+0x9ec8>
   10a14:	ldr	x0, [sp, #40]
   10a18:	ldp	x29, x30, [sp], #48
   10a1c:	ret
   10a20:	stp	x29, x30, [sp, #-80]!
   10a24:	mov	x29, sp
   10a28:	str	x0, [sp, #40]
   10a2c:	str	x1, [sp, #32]
   10a30:	str	x2, [sp, #24]
   10a34:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10a38:	ldr	x0, [x0, #4008]
   10a3c:	str	x0, [sp, #64]
   10a40:	str	wzr, [sp, #60]
   10a44:	add	x0, sp, #0x40
   10a48:	mov	x4, x0
   10a4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10a50:	add	x3, x0, #0x418
   10a54:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10a58:	add	x2, x0, #0xdf8
   10a5c:	ldr	x1, [sp, #24]
   10a60:	ldr	x0, [sp, #32]
   10a64:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10a68:	cmp	w0, #0x0
   10a6c:	b.ne	10a78 <PyFloat_FromString@plt+0x9f28>  // b.any
   10a70:	mov	x0, #0x0                   	// #0
   10a74:	b	10ba4 <PyFloat_FromString@plt+0xa054>
   10a78:	ldr	x1, [sp, #64]
   10a7c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10a80:	ldr	x0, [x0, #4008]
   10a84:	cmp	x1, x0
   10a88:	b.ne	10ac4 <PyFloat_FromString@plt+0x9f74>  // b.any
   10a8c:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10a90:	str	x0, [sp, #64]
   10a94:	ldr	x0, [sp, #64]
   10a98:	cmp	x0, #0x0
   10a9c:	b.ne	10aa8 <PyFloat_FromString@plt+0x9f58>  // b.any
   10aa0:	mov	x0, #0x0                   	// #0
   10aa4:	b	10ba4 <PyFloat_FromString@plt+0xa054>
   10aa8:	ldr	x0, [sp, #64]
   10aac:	mov	x2, x0
   10ab0:	mov	w1, #0xff4                 	// #4084
   10ab4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10ab8:	add	x0, x0, #0x9c0
   10abc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10ac0:	b	10b20 <PyFloat_FromString@plt+0x9fd0>
   10ac4:	ldr	x0, [sp, #64]
   10ac8:	ldr	x1, [x0, #8]
   10acc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10ad0:	add	x0, x0, #0x500
   10ad4:	cmp	x1, x0
   10ad8:	b.eq	10b20 <PyFloat_FromString@plt+0x9fd0>  // b.none
   10adc:	ldr	x0, [sp, #64]
   10ae0:	ldr	x2, [x0, #8]
   10ae4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10ae8:	add	x1, x0, #0x500
   10aec:	mov	x0, x2
   10af0:	bl	6a70 <PyType_IsSubtype@plt>
   10af4:	cmp	w0, #0x0
   10af8:	b.ne	10b20 <PyFloat_FromString@plt+0x9fd0>  // b.any
   10afc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10b00:	ldr	x0, [x0, #3936]
   10b04:	ldr	x2, [x0]
   10b08:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10b0c:	add	x1, x0, #0xe00
   10b10:	mov	x0, x2
   10b14:	bl	66f0 <PyErr_SetString@plt>
   10b18:	mov	x0, #0x0                   	// #0
   10b1c:	b	10ba4 <PyFloat_FromString@plt+0xa054>
   10b20:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10b24:	add	x0, x0, #0x360
   10b28:	bl	912c <PyFloat_FromString@plt+0x25dc>
   10b2c:	str	x0, [sp, #72]
   10b30:	ldr	x0, [sp, #72]
   10b34:	cmp	x0, #0x0
   10b38:	b.ne	10b44 <PyFloat_FromString@plt+0x9ff4>  // b.any
   10b3c:	mov	x0, #0x0                   	// #0
   10b40:	b	10ba4 <PyFloat_FromString@plt+0xa054>
   10b44:	ldr	x0, [sp, #72]
   10b48:	add	x4, x0, #0x18
   10b4c:	ldr	x0, [sp, #40]
   10b50:	add	x1, x0, #0x18
   10b54:	ldr	x0, [sp, #64]
   10b58:	add	x0, x0, #0x10
   10b5c:	add	x2, sp, #0x3c
   10b60:	mov	x3, x2
   10b64:	mov	x2, x0
   10b68:	mov	x0, x4
   10b6c:	bl	2c790 <PyInit__decimal@@Base+0x14ab8>
   10b70:	ldr	x0, [sp, #64]
   10b74:	ldr	w1, [sp, #60]
   10b78:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   10b7c:	cmp	w0, #0x0
   10b80:	b.eq	10ba0 <PyFloat_FromString@plt+0xa050>  // b.none
   10b84:	ldr	x2, [sp, #72]
   10b88:	mov	w1, #0xff4                 	// #4084
   10b8c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10b90:	add	x0, x0, #0x9c0
   10b94:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10b98:	mov	x0, #0x0                   	// #0
   10b9c:	b	10ba4 <PyFloat_FromString@plt+0xa054>
   10ba0:	ldr	x0, [sp, #72]
   10ba4:	ldp	x29, x30, [sp], #80
   10ba8:	ret
   10bac:	stp	x29, x30, [sp, #-80]!
   10bb0:	mov	x29, sp
   10bb4:	str	x0, [sp, #40]
   10bb8:	str	x1, [sp, #32]
   10bbc:	str	x2, [sp, #24]
   10bc0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10bc4:	ldr	x0, [x0, #4008]
   10bc8:	str	x0, [sp, #64]
   10bcc:	str	wzr, [sp, #60]
   10bd0:	add	x0, sp, #0x40
   10bd4:	mov	x4, x0
   10bd8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10bdc:	add	x3, x0, #0x428
   10be0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10be4:	add	x2, x0, #0xdf8
   10be8:	ldr	x1, [sp, #24]
   10bec:	ldr	x0, [sp, #32]
   10bf0:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10bf4:	cmp	w0, #0x0
   10bf8:	b.ne	10c04 <PyFloat_FromString@plt+0xa0b4>  // b.any
   10bfc:	mov	x0, #0x0                   	// #0
   10c00:	b	10d30 <PyFloat_FromString@plt+0xa1e0>
   10c04:	ldr	x1, [sp, #64]
   10c08:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10c0c:	ldr	x0, [x0, #4008]
   10c10:	cmp	x1, x0
   10c14:	b.ne	10c50 <PyFloat_FromString@plt+0xa100>  // b.any
   10c18:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10c1c:	str	x0, [sp, #64]
   10c20:	ldr	x0, [sp, #64]
   10c24:	cmp	x0, #0x0
   10c28:	b.ne	10c34 <PyFloat_FromString@plt+0xa0e4>  // b.any
   10c2c:	mov	x0, #0x0                   	// #0
   10c30:	b	10d30 <PyFloat_FromString@plt+0xa1e0>
   10c34:	ldr	x0, [sp, #64]
   10c38:	mov	x2, x0
   10c3c:	mov	w1, #0xff5                 	// #4085
   10c40:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10c44:	add	x0, x0, #0x9c0
   10c48:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10c4c:	b	10cac <PyFloat_FromString@plt+0xa15c>
   10c50:	ldr	x0, [sp, #64]
   10c54:	ldr	x1, [x0, #8]
   10c58:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10c5c:	add	x0, x0, #0x500
   10c60:	cmp	x1, x0
   10c64:	b.eq	10cac <PyFloat_FromString@plt+0xa15c>  // b.none
   10c68:	ldr	x0, [sp, #64]
   10c6c:	ldr	x2, [x0, #8]
   10c70:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10c74:	add	x1, x0, #0x500
   10c78:	mov	x0, x2
   10c7c:	bl	6a70 <PyType_IsSubtype@plt>
   10c80:	cmp	w0, #0x0
   10c84:	b.ne	10cac <PyFloat_FromString@plt+0xa15c>  // b.any
   10c88:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10c8c:	ldr	x0, [x0, #3936]
   10c90:	ldr	x2, [x0]
   10c94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10c98:	add	x1, x0, #0xe00
   10c9c:	mov	x0, x2
   10ca0:	bl	66f0 <PyErr_SetString@plt>
   10ca4:	mov	x0, #0x0                   	// #0
   10ca8:	b	10d30 <PyFloat_FromString@plt+0xa1e0>
   10cac:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10cb0:	add	x0, x0, #0x360
   10cb4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   10cb8:	str	x0, [sp, #72]
   10cbc:	ldr	x0, [sp, #72]
   10cc0:	cmp	x0, #0x0
   10cc4:	b.ne	10cd0 <PyFloat_FromString@plt+0xa180>  // b.any
   10cc8:	mov	x0, #0x0                   	// #0
   10ccc:	b	10d30 <PyFloat_FromString@plt+0xa1e0>
   10cd0:	ldr	x0, [sp, #72]
   10cd4:	add	x4, x0, #0x18
   10cd8:	ldr	x0, [sp, #40]
   10cdc:	add	x1, x0, #0x18
   10ce0:	ldr	x0, [sp, #64]
   10ce4:	add	x0, x0, #0x10
   10ce8:	add	x2, sp, #0x3c
   10cec:	mov	x3, x2
   10cf0:	mov	x2, x0
   10cf4:	mov	x0, x4
   10cf8:	bl	2cb60 <PyInit__decimal@@Base+0x14e88>
   10cfc:	ldr	x0, [sp, #64]
   10d00:	ldr	w1, [sp, #60]
   10d04:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   10d08:	cmp	w0, #0x0
   10d0c:	b.eq	10d2c <PyFloat_FromString@plt+0xa1dc>  // b.none
   10d10:	ldr	x2, [sp, #72]
   10d14:	mov	w1, #0xff5                 	// #4085
   10d18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10d1c:	add	x0, x0, #0x9c0
   10d20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10d24:	mov	x0, #0x0                   	// #0
   10d28:	b	10d30 <PyFloat_FromString@plt+0xa1e0>
   10d2c:	ldr	x0, [sp, #72]
   10d30:	ldp	x29, x30, [sp], #80
   10d34:	ret
   10d38:	stp	x29, x30, [sp, #-64]!
   10d3c:	mov	x29, sp
   10d40:	str	x0, [sp, #40]
   10d44:	str	x1, [sp, #32]
   10d48:	str	x2, [sp, #24]
   10d4c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10d50:	ldr	x0, [x0, #4008]
   10d54:	str	x0, [sp, #48]
   10d58:	add	x0, sp, #0x30
   10d5c:	mov	x4, x0
   10d60:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10d64:	add	x3, x0, #0x438
   10d68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10d6c:	add	x2, x0, #0xdf8
   10d70:	ldr	x1, [sp, #24]
   10d74:	ldr	x0, [sp, #32]
   10d78:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10d7c:	cmp	w0, #0x0
   10d80:	b.ne	10d8c <PyFloat_FromString@plt+0xa23c>  // b.any
   10d84:	mov	x0, #0x0                   	// #0
   10d88:	b	10e5c <PyFloat_FromString@plt+0xa30c>
   10d8c:	ldr	x1, [sp, #48]
   10d90:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10d94:	ldr	x0, [x0, #4008]
   10d98:	cmp	x1, x0
   10d9c:	b.ne	10dd8 <PyFloat_FromString@plt+0xa288>  // b.any
   10da0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10da4:	str	x0, [sp, #48]
   10da8:	ldr	x0, [sp, #48]
   10dac:	cmp	x0, #0x0
   10db0:	b.ne	10dbc <PyFloat_FromString@plt+0xa26c>  // b.any
   10db4:	mov	x0, #0x0                   	// #0
   10db8:	b	10e5c <PyFloat_FromString@plt+0xa30c>
   10dbc:	ldr	x0, [sp, #48]
   10dc0:	mov	x2, x0
   10dc4:	mov	w1, #0x1002                	// #4098
   10dc8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10dcc:	add	x0, x0, #0x9c0
   10dd0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10dd4:	b	10e34 <PyFloat_FromString@plt+0xa2e4>
   10dd8:	ldr	x0, [sp, #48]
   10ddc:	ldr	x1, [x0, #8]
   10de0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10de4:	add	x0, x0, #0x500
   10de8:	cmp	x1, x0
   10dec:	b.eq	10e34 <PyFloat_FromString@plt+0xa2e4>  // b.none
   10df0:	ldr	x0, [sp, #48]
   10df4:	ldr	x2, [x0, #8]
   10df8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10dfc:	add	x1, x0, #0x500
   10e00:	mov	x0, x2
   10e04:	bl	6a70 <PyType_IsSubtype@plt>
   10e08:	cmp	w0, #0x0
   10e0c:	b.ne	10e34 <PyFloat_FromString@plt+0xa2e4>  // b.any
   10e10:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10e14:	ldr	x0, [x0, #3936]
   10e18:	ldr	x2, [x0]
   10e1c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10e20:	add	x1, x0, #0xe00
   10e24:	mov	x0, x2
   10e28:	bl	66f0 <PyErr_SetString@plt>
   10e2c:	mov	x0, #0x0                   	// #0
   10e30:	b	10e5c <PyFloat_FromString@plt+0xa30c>
   10e34:	ldr	x0, [sp, #40]
   10e38:	add	x2, x0, #0x18
   10e3c:	ldr	x0, [sp, #48]
   10e40:	add	x0, x0, #0x10
   10e44:	mov	x1, x0
   10e48:	mov	x0, x2
   10e4c:	bl	2c574 <PyInit__decimal@@Base+0x1489c>
   10e50:	str	x0, [sp, #56]
   10e54:	ldr	x0, [sp, #56]
   10e58:	bl	6a10 <PyUnicode_FromString@plt>
   10e5c:	ldp	x29, x30, [sp], #64
   10e60:	ret
   10e64:	stp	x29, x30, [sp, #-80]!
   10e68:	mov	x29, sp
   10e6c:	str	x0, [sp, #40]
   10e70:	str	x1, [sp, #32]
   10e74:	str	x2, [sp, #24]
   10e78:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10e7c:	ldr	x0, [x0, #4008]
   10e80:	str	x0, [sp, #56]
   10e84:	add	x0, sp, #0x38
   10e88:	mov	x4, x0
   10e8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10e90:	add	x3, x0, #0x448
   10e94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10e98:	add	x2, x0, #0xdf8
   10e9c:	ldr	x1, [sp, #24]
   10ea0:	ldr	x0, [sp, #32]
   10ea4:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   10ea8:	cmp	w0, #0x0
   10eac:	b.ne	10eb8 <PyFloat_FromString@plt+0xa368>  // b.any
   10eb0:	mov	x0, #0x0                   	// #0
   10eb4:	b	10fbc <PyFloat_FromString@plt+0xa46c>
   10eb8:	ldr	x1, [sp, #56]
   10ebc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10ec0:	ldr	x0, [x0, #4008]
   10ec4:	cmp	x1, x0
   10ec8:	b.ne	10f04 <PyFloat_FromString@plt+0xa3b4>  // b.any
   10ecc:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   10ed0:	str	x0, [sp, #56]
   10ed4:	ldr	x0, [sp, #56]
   10ed8:	cmp	x0, #0x0
   10edc:	b.ne	10ee8 <PyFloat_FromString@plt+0xa398>  // b.any
   10ee0:	mov	x0, #0x0                   	// #0
   10ee4:	b	10fbc <PyFloat_FromString@plt+0xa46c>
   10ee8:	ldr	x0, [sp, #56]
   10eec:	mov	x2, x0
   10ef0:	mov	w1, #0x1015                	// #4117
   10ef4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10ef8:	add	x0, x0, #0x9c0
   10efc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   10f00:	b	10f60 <PyFloat_FromString@plt+0xa410>
   10f04:	ldr	x0, [sp, #56]
   10f08:	ldr	x1, [x0, #8]
   10f0c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10f10:	add	x0, x0, #0x500
   10f14:	cmp	x1, x0
   10f18:	b.eq	10f60 <PyFloat_FromString@plt+0xa410>  // b.none
   10f1c:	ldr	x0, [sp, #56]
   10f20:	ldr	x2, [x0, #8]
   10f24:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   10f28:	add	x1, x0, #0x500
   10f2c:	mov	x0, x2
   10f30:	bl	6a70 <PyType_IsSubtype@plt>
   10f34:	cmp	w0, #0x0
   10f38:	b.ne	10f60 <PyFloat_FromString@plt+0xa410>  // b.any
   10f3c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10f40:	ldr	x0, [x0, #3936]
   10f44:	ldr	x2, [x0]
   10f48:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   10f4c:	add	x1, x0, #0xe00
   10f50:	mov	x0, x2
   10f54:	bl	66f0 <PyErr_SetString@plt>
   10f58:	mov	x0, #0x0                   	// #0
   10f5c:	b	10fbc <PyFloat_FromString@plt+0xa46c>
   10f60:	ldr	x0, [sp, #40]
   10f64:	add	x1, x0, #0x18
   10f68:	ldr	x0, [sp, #56]
   10f6c:	ldr	w2, [x0, #80]
   10f70:	add	x0, sp, #0x30
   10f74:	bl	213d8 <PyInit__decimal@@Base+0x9700>
   10f78:	str	x0, [sp, #72]
   10f7c:	ldr	x0, [sp, #72]
   10f80:	cmp	x0, #0x0
   10f84:	b.ge	10f94 <PyFloat_FromString@plt+0xa444>  // b.tcont
   10f88:	bl	6690 <PyErr_NoMemory@plt>
   10f8c:	mov	x0, #0x0                   	// #0
   10f90:	b	10fbc <PyFloat_FromString@plt+0xa46c>
   10f94:	ldr	x0, [sp, #48]
   10f98:	ldr	x1, [sp, #72]
   10f9c:	bl	b8b4 <PyFloat_FromString@plt+0x4d64>
   10fa0:	str	x0, [sp, #64]
   10fa4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10fa8:	add	x0, x0, #0x6f8
   10fac:	ldr	x1, [x0]
   10fb0:	ldr	x0, [sp, #48]
   10fb4:	blr	x1
   10fb8:	ldr	x0, [sp, #64]
   10fbc:	ldp	x29, x30, [sp], #80
   10fc0:	ret
   10fc4:	stp	x29, x30, [sp, #-96]!
   10fc8:	mov	x29, sp
   10fcc:	str	x0, [sp, #40]
   10fd0:	str	x1, [sp, #32]
   10fd4:	str	x2, [sp, #24]
   10fd8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   10fdc:	ldr	x0, [x0, #4008]
   10fe0:	str	x0, [sp, #80]
   10fe4:	add	x1, sp, #0x50
   10fe8:	add	x0, sp, #0x48
   10fec:	mov	x5, x1
   10ff0:	mov	x4, x0
   10ff4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   10ff8:	add	x3, x0, #0x458
   10ffc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   11000:	add	x2, x0, #0xc8
   11004:	ldr	x1, [sp, #24]
   11008:	ldr	x0, [sp, #32]
   1100c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   11010:	cmp	w0, #0x0
   11014:	b.ne	11020 <PyFloat_FromString@plt+0xa4d0>  // b.any
   11018:	mov	x0, #0x0                   	// #0
   1101c:	b	111e8 <PyFloat_FromString@plt+0xa698>
   11020:	ldr	x1, [sp, #80]
   11024:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11028:	ldr	x0, [x0, #4008]
   1102c:	cmp	x1, x0
   11030:	b.ne	1106c <PyFloat_FromString@plt+0xa51c>  // b.any
   11034:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   11038:	str	x0, [sp, #80]
   1103c:	ldr	x0, [sp, #80]
   11040:	cmp	x0, #0x0
   11044:	b.ne	11050 <PyFloat_FromString@plt+0xa500>  // b.any
   11048:	mov	x0, #0x0                   	// #0
   1104c:	b	111e8 <PyFloat_FromString@plt+0xa698>
   11050:	ldr	x0, [sp, #80]
   11054:	mov	x2, x0
   11058:	mov	w1, #0x1024                	// #4132
   1105c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11060:	add	x0, x0, #0x9c0
   11064:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11068:	b	110c8 <PyFloat_FromString@plt+0xa578>
   1106c:	ldr	x0, [sp, #80]
   11070:	ldr	x1, [x0, #8]
   11074:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11078:	add	x0, x0, #0x500
   1107c:	cmp	x1, x0
   11080:	b.eq	110c8 <PyFloat_FromString@plt+0xa578>  // b.none
   11084:	ldr	x0, [sp, #80]
   11088:	ldr	x2, [x0, #8]
   1108c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11090:	add	x1, x0, #0x500
   11094:	mov	x0, x2
   11098:	bl	6a70 <PyType_IsSubtype@plt>
   1109c:	cmp	w0, #0x0
   110a0:	b.ne	110c8 <PyFloat_FromString@plt+0xa578>  // b.any
   110a4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   110a8:	ldr	x0, [x0, #3936]
   110ac:	ldr	x2, [x0]
   110b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   110b4:	add	x1, x0, #0xe00
   110b8:	mov	x0, x2
   110bc:	bl	66f0 <PyErr_SetString@plt>
   110c0:	mov	x0, #0x0                   	// #0
   110c4:	b	111e8 <PyFloat_FromString@plt+0xa698>
   110c8:	ldr	x1, [sp, #80]
   110cc:	add	x0, sp, #0x40
   110d0:	mov	x3, x1
   110d4:	ldr	x2, [sp, #40]
   110d8:	mov	x1, x0
   110dc:	mov	w0, #0x1                   	// #1
   110e0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   110e4:	cmp	w0, #0x0
   110e8:	b.ne	110f4 <PyFloat_FromString@plt+0xa5a4>  // b.any
   110ec:	mov	x0, #0x0                   	// #0
   110f0:	b	111e8 <PyFloat_FromString@plt+0xa698>
   110f4:	ldr	x1, [sp, #72]
   110f8:	ldr	x2, [sp, #80]
   110fc:	add	x0, sp, #0x38
   11100:	mov	x3, x2
   11104:	mov	x2, x1
   11108:	mov	x1, x0
   1110c:	mov	w0, #0x1                   	// #1
   11110:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11114:	cmp	w0, #0x0
   11118:	b.ne	1113c <PyFloat_FromString@plt+0xa5ec>  // b.any
   1111c:	ldr	x0, [sp, #64]
   11120:	mov	x2, x0
   11124:	mov	w1, #0x1024                	// #4132
   11128:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1112c:	add	x0, x0, #0x9c0
   11130:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11134:	mov	x0, #0x0                   	// #0
   11138:	b	111e8 <PyFloat_FromString@plt+0xa698>
   1113c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11140:	add	x0, x0, #0x360
   11144:	bl	912c <PyFloat_FromString@plt+0x25dc>
   11148:	str	x0, [sp, #88]
   1114c:	ldr	x0, [sp, #88]
   11150:	cmp	x0, #0x0
   11154:	b.ne	11190 <PyFloat_FromString@plt+0xa640>  // b.any
   11158:	ldr	x0, [sp, #64]
   1115c:	mov	x2, x0
   11160:	mov	w1, #0x1024                	// #4132
   11164:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11168:	add	x0, x0, #0x9c0
   1116c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11170:	ldr	x0, [sp, #56]
   11174:	mov	x2, x0
   11178:	mov	w1, #0x1024                	// #4132
   1117c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11180:	add	x0, x0, #0x9c0
   11184:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11188:	mov	x0, #0x0                   	// #0
   1118c:	b	111e8 <PyFloat_FromString@plt+0xa698>
   11190:	ldr	x0, [sp, #88]
   11194:	add	x3, x0, #0x18
   11198:	ldr	x0, [sp, #64]
   1119c:	add	x1, x0, #0x18
   111a0:	ldr	x0, [sp, #56]
   111a4:	add	x0, x0, #0x18
   111a8:	mov	x2, x0
   111ac:	mov	x0, x3
   111b0:	bl	2ac64 <PyInit__decimal@@Base+0x12f8c>
   111b4:	ldr	x0, [sp, #64]
   111b8:	mov	x2, x0
   111bc:	mov	w1, #0x1024                	// #4132
   111c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   111c4:	add	x0, x0, #0x9c0
   111c8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   111cc:	ldr	x0, [sp, #56]
   111d0:	mov	x2, x0
   111d4:	mov	w1, #0x1024                	// #4132
   111d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   111dc:	add	x0, x0, #0x9c0
   111e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   111e4:	ldr	x0, [sp, #88]
   111e8:	ldp	x29, x30, [sp], #96
   111ec:	ret
   111f0:	stp	x29, x30, [sp, #-96]!
   111f4:	mov	x29, sp
   111f8:	str	x0, [sp, #40]
   111fc:	str	x1, [sp, #32]
   11200:	str	x2, [sp, #24]
   11204:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11208:	ldr	x0, [x0, #4008]
   1120c:	str	x0, [sp, #80]
   11210:	add	x1, sp, #0x50
   11214:	add	x0, sp, #0x48
   11218:	mov	x5, x1
   1121c:	mov	x4, x0
   11220:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   11224:	add	x3, x0, #0x470
   11228:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1122c:	add	x2, x0, #0xc8
   11230:	ldr	x1, [sp, #24]
   11234:	ldr	x0, [sp, #32]
   11238:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   1123c:	cmp	w0, #0x0
   11240:	b.ne	1124c <PyFloat_FromString@plt+0xa6fc>  // b.any
   11244:	mov	x0, #0x0                   	// #0
   11248:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   1124c:	ldr	x1, [sp, #80]
   11250:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11254:	ldr	x0, [x0, #4008]
   11258:	cmp	x1, x0
   1125c:	b.ne	11298 <PyFloat_FromString@plt+0xa748>  // b.any
   11260:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   11264:	str	x0, [sp, #80]
   11268:	ldr	x0, [sp, #80]
   1126c:	cmp	x0, #0x0
   11270:	b.ne	1127c <PyFloat_FromString@plt+0xa72c>  // b.any
   11274:	mov	x0, #0x0                   	// #0
   11278:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   1127c:	ldr	x0, [sp, #80]
   11280:	mov	x2, x0
   11284:	mov	w1, #0x1025                	// #4133
   11288:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1128c:	add	x0, x0, #0x9c0
   11290:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11294:	b	112f4 <PyFloat_FromString@plt+0xa7a4>
   11298:	ldr	x0, [sp, #80]
   1129c:	ldr	x1, [x0, #8]
   112a0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   112a4:	add	x0, x0, #0x500
   112a8:	cmp	x1, x0
   112ac:	b.eq	112f4 <PyFloat_FromString@plt+0xa7a4>  // b.none
   112b0:	ldr	x0, [sp, #80]
   112b4:	ldr	x2, [x0, #8]
   112b8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   112bc:	add	x1, x0, #0x500
   112c0:	mov	x0, x2
   112c4:	bl	6a70 <PyType_IsSubtype@plt>
   112c8:	cmp	w0, #0x0
   112cc:	b.ne	112f4 <PyFloat_FromString@plt+0xa7a4>  // b.any
   112d0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   112d4:	ldr	x0, [x0, #3936]
   112d8:	ldr	x2, [x0]
   112dc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   112e0:	add	x1, x0, #0xe00
   112e4:	mov	x0, x2
   112e8:	bl	66f0 <PyErr_SetString@plt>
   112ec:	mov	x0, #0x0                   	// #0
   112f0:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   112f4:	ldr	x1, [sp, #80]
   112f8:	add	x0, sp, #0x40
   112fc:	mov	x3, x1
   11300:	ldr	x2, [sp, #40]
   11304:	mov	x1, x0
   11308:	mov	w0, #0x1                   	// #1
   1130c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11310:	cmp	w0, #0x0
   11314:	b.ne	11320 <PyFloat_FromString@plt+0xa7d0>  // b.any
   11318:	mov	x0, #0x0                   	// #0
   1131c:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   11320:	ldr	x1, [sp, #72]
   11324:	ldr	x2, [sp, #80]
   11328:	add	x0, sp, #0x38
   1132c:	mov	x3, x2
   11330:	mov	x2, x1
   11334:	mov	x1, x0
   11338:	mov	w0, #0x1                   	// #1
   1133c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11340:	cmp	w0, #0x0
   11344:	b.ne	11368 <PyFloat_FromString@plt+0xa818>  // b.any
   11348:	ldr	x0, [sp, #64]
   1134c:	mov	x2, x0
   11350:	mov	w1, #0x1025                	// #4133
   11354:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11358:	add	x0, x0, #0x9c0
   1135c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11360:	mov	x0, #0x0                   	// #0
   11364:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   11368:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1136c:	add	x0, x0, #0x360
   11370:	bl	912c <PyFloat_FromString@plt+0x25dc>
   11374:	str	x0, [sp, #88]
   11378:	ldr	x0, [sp, #88]
   1137c:	cmp	x0, #0x0
   11380:	b.ne	113bc <PyFloat_FromString@plt+0xa86c>  // b.any
   11384:	ldr	x0, [sp, #64]
   11388:	mov	x2, x0
   1138c:	mov	w1, #0x1025                	// #4133
   11390:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11394:	add	x0, x0, #0x9c0
   11398:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1139c:	ldr	x0, [sp, #56]
   113a0:	mov	x2, x0
   113a4:	mov	w1, #0x1025                	// #4133
   113a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   113ac:	add	x0, x0, #0x9c0
   113b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   113b4:	mov	x0, #0x0                   	// #0
   113b8:	b	11414 <PyFloat_FromString@plt+0xa8c4>
   113bc:	ldr	x0, [sp, #88]
   113c0:	add	x3, x0, #0x18
   113c4:	ldr	x0, [sp, #64]
   113c8:	add	x1, x0, #0x18
   113cc:	ldr	x0, [sp, #56]
   113d0:	add	x0, x0, #0x18
   113d4:	mov	x2, x0
   113d8:	mov	x0, x3
   113dc:	bl	2ad4c <PyInit__decimal@@Base+0x13074>
   113e0:	ldr	x0, [sp, #64]
   113e4:	mov	x2, x0
   113e8:	mov	w1, #0x1025                	// #4133
   113ec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   113f0:	add	x0, x0, #0x9c0
   113f4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   113f8:	ldr	x0, [sp, #56]
   113fc:	mov	x2, x0
   11400:	mov	w1, #0x1025                	// #4133
   11404:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11408:	add	x0, x0, #0x9c0
   1140c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11410:	ldr	x0, [sp, #88]
   11414:	ldp	x29, x30, [sp], #96
   11418:	ret
   1141c:	stp	x29, x30, [sp, #-96]!
   11420:	mov	x29, sp
   11424:	str	x0, [sp, #40]
   11428:	str	x1, [sp, #32]
   1142c:	str	x2, [sp, #24]
   11430:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11434:	ldr	x0, [x0, #4008]
   11438:	str	x0, [sp, #56]
   1143c:	str	wzr, [sp, #52]
   11440:	add	x1, sp, #0x38
   11444:	add	x0, sp, #0x50
   11448:	mov	x5, x1
   1144c:	mov	x4, x0
   11450:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   11454:	add	x3, x0, #0x488
   11458:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1145c:	add	x2, x0, #0xc8
   11460:	ldr	x1, [sp, #24]
   11464:	ldr	x0, [sp, #32]
   11468:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   1146c:	cmp	w0, #0x0
   11470:	b.ne	1147c <PyFloat_FromString@plt+0xa92c>  // b.any
   11474:	mov	x0, #0x0                   	// #0
   11478:	b	1167c <PyFloat_FromString@plt+0xab2c>
   1147c:	ldr	x1, [sp, #56]
   11480:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11484:	ldr	x0, [x0, #4008]
   11488:	cmp	x1, x0
   1148c:	b.ne	114c8 <PyFloat_FromString@plt+0xa978>  // b.any
   11490:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   11494:	str	x0, [sp, #56]
   11498:	ldr	x0, [sp, #56]
   1149c:	cmp	x0, #0x0
   114a0:	b.ne	114ac <PyFloat_FromString@plt+0xa95c>  // b.any
   114a4:	mov	x0, #0x0                   	// #0
   114a8:	b	1167c <PyFloat_FromString@plt+0xab2c>
   114ac:	ldr	x0, [sp, #56]
   114b0:	mov	x2, x0
   114b4:	mov	w1, #0x1035                	// #4149
   114b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   114bc:	add	x0, x0, #0x9c0
   114c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   114c4:	b	11524 <PyFloat_FromString@plt+0xa9d4>
   114c8:	ldr	x0, [sp, #56]
   114cc:	ldr	x1, [x0, #8]
   114d0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   114d4:	add	x0, x0, #0x500
   114d8:	cmp	x1, x0
   114dc:	b.eq	11524 <PyFloat_FromString@plt+0xa9d4>  // b.none
   114e0:	ldr	x0, [sp, #56]
   114e4:	ldr	x2, [x0, #8]
   114e8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   114ec:	add	x1, x0, #0x500
   114f0:	mov	x0, x2
   114f4:	bl	6a70 <PyType_IsSubtype@plt>
   114f8:	cmp	w0, #0x0
   114fc:	b.ne	11524 <PyFloat_FromString@plt+0xa9d4>  // b.any
   11500:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11504:	ldr	x0, [x0, #3936]
   11508:	ldr	x2, [x0]
   1150c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11510:	add	x1, x0, #0xe00
   11514:	mov	x0, x2
   11518:	bl	66f0 <PyErr_SetString@plt>
   1151c:	mov	x0, #0x0                   	// #0
   11520:	b	1167c <PyFloat_FromString@plt+0xab2c>
   11524:	ldr	x1, [sp, #56]
   11528:	add	x0, sp, #0x48
   1152c:	mov	x3, x1
   11530:	ldr	x2, [sp, #40]
   11534:	mov	x1, x0
   11538:	mov	w0, #0x1                   	// #1
   1153c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11540:	cmp	w0, #0x0
   11544:	b.ne	11550 <PyFloat_FromString@plt+0xaa00>  // b.any
   11548:	mov	x0, #0x0                   	// #0
   1154c:	b	1167c <PyFloat_FromString@plt+0xab2c>
   11550:	ldr	x1, [sp, #80]
   11554:	ldr	x2, [sp, #56]
   11558:	add	x0, sp, #0x40
   1155c:	mov	x3, x2
   11560:	mov	x2, x1
   11564:	mov	x1, x0
   11568:	mov	w0, #0x1                   	// #1
   1156c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11570:	cmp	w0, #0x0
   11574:	b.ne	11598 <PyFloat_FromString@plt+0xaa48>  // b.any
   11578:	ldr	x0, [sp, #72]
   1157c:	mov	x2, x0
   11580:	mov	w1, #0x1036                	// #4150
   11584:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11588:	add	x0, x0, #0x9c0
   1158c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11590:	mov	x0, #0x0                   	// #0
   11594:	b	1167c <PyFloat_FromString@plt+0xab2c>
   11598:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1159c:	add	x0, x0, #0x360
   115a0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   115a4:	str	x0, [sp, #88]
   115a8:	ldr	x0, [sp, #88]
   115ac:	cmp	x0, #0x0
   115b0:	b.ne	115ec <PyFloat_FromString@plt+0xaa9c>  // b.any
   115b4:	ldr	x0, [sp, #72]
   115b8:	mov	x2, x0
   115bc:	mov	w1, #0x103a                	// #4154
   115c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   115c4:	add	x0, x0, #0x9c0
   115c8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   115cc:	ldr	x0, [sp, #64]
   115d0:	mov	x2, x0
   115d4:	mov	w1, #0x103b                	// #4155
   115d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   115dc:	add	x0, x0, #0x9c0
   115e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   115e4:	mov	x0, #0x0                   	// #0
   115e8:	b	1167c <PyFloat_FromString@plt+0xab2c>
   115ec:	ldr	x0, [sp, #88]
   115f0:	add	x4, x0, #0x18
   115f4:	ldr	x0, [sp, #72]
   115f8:	add	x1, x0, #0x18
   115fc:	ldr	x0, [sp, #64]
   11600:	add	x0, x0, #0x18
   11604:	add	x2, sp, #0x34
   11608:	mov	x3, x2
   1160c:	mov	x2, x0
   11610:	mov	x0, x4
   11614:	bl	29c88 <PyInit__decimal@@Base+0x11fb0>
   11618:	ldr	x0, [sp, #72]
   1161c:	mov	x2, x0
   11620:	mov	w1, #0x1040                	// #4160
   11624:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11628:	add	x0, x0, #0x9c0
   1162c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11630:	ldr	x0, [sp, #64]
   11634:	mov	x2, x0
   11638:	mov	w1, #0x1041                	// #4161
   1163c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11640:	add	x0, x0, #0x9c0
   11644:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11648:	ldr	x0, [sp, #56]
   1164c:	ldr	w1, [sp, #52]
   11650:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   11654:	cmp	w0, #0x0
   11658:	b.eq	11678 <PyFloat_FromString@plt+0xab28>  // b.none
   1165c:	ldr	x2, [sp, #88]
   11660:	mov	w1, #0x1043                	// #4163
   11664:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11668:	add	x0, x0, #0x9c0
   1166c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11670:	mov	x0, #0x0                   	// #0
   11674:	b	1167c <PyFloat_FromString@plt+0xab2c>
   11678:	ldr	x0, [sp, #88]
   1167c:	ldp	x29, x30, [sp], #96
   11680:	ret
   11684:	stp	x29, x30, [sp, #-96]!
   11688:	mov	x29, sp
   1168c:	str	x0, [sp, #40]
   11690:	str	x1, [sp, #32]
   11694:	str	x2, [sp, #24]
   11698:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1169c:	ldr	x0, [x0, #4008]
   116a0:	str	x0, [sp, #56]
   116a4:	add	x1, sp, #0x38
   116a8:	add	x0, sp, #0x50
   116ac:	mov	x5, x1
   116b0:	mov	x4, x0
   116b4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   116b8:	add	x3, x0, #0x4a0
   116bc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   116c0:	add	x2, x0, #0xc8
   116c4:	ldr	x1, [sp, #24]
   116c8:	ldr	x0, [sp, #32]
   116cc:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   116d0:	cmp	w0, #0x0
   116d4:	b.ne	116e0 <PyFloat_FromString@plt+0xab90>  // b.any
   116d8:	mov	x0, #0x0                   	// #0
   116dc:	b	11864 <PyFloat_FromString@plt+0xad14>
   116e0:	ldr	x1, [sp, #56]
   116e4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   116e8:	ldr	x0, [x0, #4008]
   116ec:	cmp	x1, x0
   116f0:	b.ne	1172c <PyFloat_FromString@plt+0xabdc>  // b.any
   116f4:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   116f8:	str	x0, [sp, #56]
   116fc:	ldr	x0, [sp, #56]
   11700:	cmp	x0, #0x0
   11704:	b.ne	11710 <PyFloat_FromString@plt+0xabc0>  // b.any
   11708:	mov	x0, #0x0                   	// #0
   1170c:	b	11864 <PyFloat_FromString@plt+0xad14>
   11710:	ldr	x0, [sp, #56]
   11714:	mov	x2, x0
   11718:	mov	w1, #0x1057                	// #4183
   1171c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11720:	add	x0, x0, #0x9c0
   11724:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11728:	b	11788 <PyFloat_FromString@plt+0xac38>
   1172c:	ldr	x0, [sp, #56]
   11730:	ldr	x1, [x0, #8]
   11734:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11738:	add	x0, x0, #0x500
   1173c:	cmp	x1, x0
   11740:	b.eq	11788 <PyFloat_FromString@plt+0xac38>  // b.none
   11744:	ldr	x0, [sp, #56]
   11748:	ldr	x2, [x0, #8]
   1174c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11750:	add	x1, x0, #0x500
   11754:	mov	x0, x2
   11758:	bl	6a70 <PyType_IsSubtype@plt>
   1175c:	cmp	w0, #0x0
   11760:	b.ne	11788 <PyFloat_FromString@plt+0xac38>  // b.any
   11764:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11768:	ldr	x0, [x0, #3936]
   1176c:	ldr	x2, [x0]
   11770:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11774:	add	x1, x0, #0xe00
   11778:	mov	x0, x2
   1177c:	bl	66f0 <PyErr_SetString@plt>
   11780:	mov	x0, #0x0                   	// #0
   11784:	b	11864 <PyFloat_FromString@plt+0xad14>
   11788:	ldr	x1, [sp, #56]
   1178c:	add	x0, sp, #0x48
   11790:	mov	x3, x1
   11794:	ldr	x2, [sp, #40]
   11798:	mov	x1, x0
   1179c:	mov	w0, #0x1                   	// #1
   117a0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   117a4:	cmp	w0, #0x0
   117a8:	b.ne	117b4 <PyFloat_FromString@plt+0xac64>  // b.any
   117ac:	mov	x0, #0x0                   	// #0
   117b0:	b	11864 <PyFloat_FromString@plt+0xad14>
   117b4:	ldr	x1, [sp, #80]
   117b8:	ldr	x2, [sp, #56]
   117bc:	add	x0, sp, #0x40
   117c0:	mov	x3, x2
   117c4:	mov	x2, x1
   117c8:	mov	x1, x0
   117cc:	mov	w0, #0x1                   	// #1
   117d0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   117d4:	cmp	w0, #0x0
   117d8:	b.ne	117fc <PyFloat_FromString@plt+0xacac>  // b.any
   117dc:	ldr	x0, [sp, #72]
   117e0:	mov	x2, x0
   117e4:	mov	w1, #0x1058                	// #4184
   117e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   117ec:	add	x0, x0, #0x9c0
   117f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   117f4:	mov	x0, #0x0                   	// #0
   117f8:	b	11864 <PyFloat_FromString@plt+0xad14>
   117fc:	ldr	x0, [sp, #72]
   11800:	add	x2, x0, #0x18
   11804:	ldr	x0, [sp, #64]
   11808:	add	x0, x0, #0x18
   1180c:	mov	x1, x0
   11810:	mov	x0, x2
   11814:	bl	3b1dc <PyInit__decimal@@Base+0x23504>
   11818:	cmp	w0, #0x0
   1181c:	b.eq	11828 <PyFloat_FromString@plt+0xacd8>  // b.none
   11820:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   11824:	b	1182c <PyFloat_FromString@plt+0xacdc>
   11828:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   1182c:	str	x0, [sp, #88]
   11830:	ldr	x0, [sp, #72]
   11834:	mov	x2, x0
   11838:	mov	w1, #0x105b                	// #4187
   1183c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11840:	add	x0, x0, #0x9c0
   11844:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11848:	ldr	x0, [sp, #64]
   1184c:	mov	x2, x0
   11850:	mov	w1, #0x105c                	// #4188
   11854:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11858:	add	x0, x0, #0x9c0
   1185c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11860:	ldr	x0, [sp, #88]
   11864:	ldp	x29, x30, [sp], #96
   11868:	ret
   1186c:	stp	x29, x30, [sp, #-96]!
   11870:	mov	x29, sp
   11874:	str	x0, [sp, #40]
   11878:	str	x1, [sp, #32]
   1187c:	str	x2, [sp, #24]
   11880:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11884:	ldr	x0, [x0, #4008]
   11888:	str	x0, [sp, #56]
   1188c:	str	wzr, [sp, #52]
   11890:	add	x1, sp, #0x38
   11894:	add	x0, sp, #0x50
   11898:	mov	x5, x1
   1189c:	mov	x4, x0
   118a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   118a4:	add	x3, x0, #0x4b8
   118a8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   118ac:	add	x2, x0, #0xc8
   118b0:	ldr	x1, [sp, #24]
   118b4:	ldr	x0, [sp, #32]
   118b8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   118bc:	cmp	w0, #0x0
   118c0:	b.ne	118cc <PyFloat_FromString@plt+0xad7c>  // b.any
   118c4:	mov	x0, #0x0                   	// #0
   118c8:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   118cc:	ldr	x1, [sp, #56]
   118d0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   118d4:	ldr	x0, [x0, #4008]
   118d8:	cmp	x1, x0
   118dc:	b.ne	11918 <PyFloat_FromString@plt+0xadc8>  // b.any
   118e0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   118e4:	str	x0, [sp, #56]
   118e8:	ldr	x0, [sp, #56]
   118ec:	cmp	x0, #0x0
   118f0:	b.ne	118fc <PyFloat_FromString@plt+0xadac>  // b.any
   118f4:	mov	x0, #0x0                   	// #0
   118f8:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   118fc:	ldr	x0, [sp, #56]
   11900:	mov	x2, x0
   11904:	mov	w1, #0x1062                	// #4194
   11908:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1190c:	add	x0, x0, #0x9c0
   11910:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11914:	b	11974 <PyFloat_FromString@plt+0xae24>
   11918:	ldr	x0, [sp, #56]
   1191c:	ldr	x1, [x0, #8]
   11920:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11924:	add	x0, x0, #0x500
   11928:	cmp	x1, x0
   1192c:	b.eq	11974 <PyFloat_FromString@plt+0xae24>  // b.none
   11930:	ldr	x0, [sp, #56]
   11934:	ldr	x2, [x0, #8]
   11938:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1193c:	add	x1, x0, #0x500
   11940:	mov	x0, x2
   11944:	bl	6a70 <PyType_IsSubtype@plt>
   11948:	cmp	w0, #0x0
   1194c:	b.ne	11974 <PyFloat_FromString@plt+0xae24>  // b.any
   11950:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11954:	ldr	x0, [x0, #3936]
   11958:	ldr	x2, [x0]
   1195c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11960:	add	x1, x0, #0xe00
   11964:	mov	x0, x2
   11968:	bl	66f0 <PyErr_SetString@plt>
   1196c:	mov	x0, #0x0                   	// #0
   11970:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   11974:	ldr	x1, [sp, #56]
   11978:	add	x0, sp, #0x48
   1197c:	mov	x3, x1
   11980:	ldr	x2, [sp, #40]
   11984:	mov	x1, x0
   11988:	mov	w0, #0x1                   	// #1
   1198c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11990:	cmp	w0, #0x0
   11994:	b.ne	119a0 <PyFloat_FromString@plt+0xae50>  // b.any
   11998:	mov	x0, #0x0                   	// #0
   1199c:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   119a0:	ldr	x1, [sp, #80]
   119a4:	ldr	x2, [sp, #56]
   119a8:	add	x0, sp, #0x40
   119ac:	mov	x3, x2
   119b0:	mov	x2, x1
   119b4:	mov	x1, x0
   119b8:	mov	w0, #0x1                   	// #1
   119bc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   119c0:	cmp	w0, #0x0
   119c4:	b.ne	119e8 <PyFloat_FromString@plt+0xae98>  // b.any
   119c8:	ldr	x0, [sp, #72]
   119cc:	mov	x2, x0
   119d0:	mov	w1, #0x1062                	// #4194
   119d4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   119d8:	add	x0, x0, #0x9c0
   119dc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   119e0:	mov	x0, #0x0                   	// #0
   119e4:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   119e8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   119ec:	add	x0, x0, #0x360
   119f0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   119f4:	str	x0, [sp, #88]
   119f8:	ldr	x0, [sp, #88]
   119fc:	cmp	x0, #0x0
   11a00:	b.ne	11a3c <PyFloat_FromString@plt+0xaeec>  // b.any
   11a04:	ldr	x0, [sp, #72]
   11a08:	mov	x2, x0
   11a0c:	mov	w1, #0x1062                	// #4194
   11a10:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11a14:	add	x0, x0, #0x9c0
   11a18:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11a1c:	ldr	x0, [sp, #64]
   11a20:	mov	x2, x0
   11a24:	mov	w1, #0x1062                	// #4194
   11a28:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11a2c:	add	x0, x0, #0x9c0
   11a30:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11a34:	mov	x0, #0x0                   	// #0
   11a38:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   11a3c:	ldr	x0, [sp, #88]
   11a40:	add	x5, x0, #0x18
   11a44:	ldr	x0, [sp, #72]
   11a48:	add	x1, x0, #0x18
   11a4c:	ldr	x0, [sp, #64]
   11a50:	add	x2, x0, #0x18
   11a54:	ldr	x0, [sp, #56]
   11a58:	add	x0, x0, #0x10
   11a5c:	add	x3, sp, #0x34
   11a60:	mov	x4, x3
   11a64:	mov	x3, x0
   11a68:	mov	x0, x5
   11a6c:	bl	2bc00 <PyInit__decimal@@Base+0x13f28>
   11a70:	ldr	x0, [sp, #72]
   11a74:	mov	x2, x0
   11a78:	mov	w1, #0x1062                	// #4194
   11a7c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11a80:	add	x0, x0, #0x9c0
   11a84:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11a88:	ldr	x0, [sp, #64]
   11a8c:	mov	x2, x0
   11a90:	mov	w1, #0x1062                	// #4194
   11a94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11a98:	add	x0, x0, #0x9c0
   11a9c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11aa0:	ldr	x0, [sp, #56]
   11aa4:	ldr	w1, [sp, #52]
   11aa8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   11aac:	cmp	w0, #0x0
   11ab0:	b.eq	11ad0 <PyFloat_FromString@plt+0xaf80>  // b.none
   11ab4:	ldr	x2, [sp, #88]
   11ab8:	mov	w1, #0x1062                	// #4194
   11abc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11ac0:	add	x0, x0, #0x9c0
   11ac4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11ac8:	mov	x0, #0x0                   	// #0
   11acc:	b	11ad4 <PyFloat_FromString@plt+0xaf84>
   11ad0:	ldr	x0, [sp, #88]
   11ad4:	ldp	x29, x30, [sp], #96
   11ad8:	ret
   11adc:	stp	x29, x30, [sp, #-96]!
   11ae0:	mov	x29, sp
   11ae4:	str	x0, [sp, #40]
   11ae8:	str	x1, [sp, #32]
   11aec:	str	x2, [sp, #24]
   11af0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11af4:	ldr	x0, [x0, #4008]
   11af8:	str	x0, [sp, #56]
   11afc:	str	wzr, [sp, #52]
   11b00:	add	x1, sp, #0x38
   11b04:	add	x0, sp, #0x50
   11b08:	mov	x5, x1
   11b0c:	mov	x4, x0
   11b10:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   11b14:	add	x3, x0, #0x4d0
   11b18:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   11b1c:	add	x2, x0, #0xc8
   11b20:	ldr	x1, [sp, #24]
   11b24:	ldr	x0, [sp, #32]
   11b28:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   11b2c:	cmp	w0, #0x0
   11b30:	b.ne	11b3c <PyFloat_FromString@plt+0xafec>  // b.any
   11b34:	mov	x0, #0x0                   	// #0
   11b38:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11b3c:	ldr	x1, [sp, #56]
   11b40:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11b44:	ldr	x0, [x0, #4008]
   11b48:	cmp	x1, x0
   11b4c:	b.ne	11b88 <PyFloat_FromString@plt+0xb038>  // b.any
   11b50:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   11b54:	str	x0, [sp, #56]
   11b58:	ldr	x0, [sp, #56]
   11b5c:	cmp	x0, #0x0
   11b60:	b.ne	11b6c <PyFloat_FromString@plt+0xb01c>  // b.any
   11b64:	mov	x0, #0x0                   	// #0
   11b68:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11b6c:	ldr	x0, [sp, #56]
   11b70:	mov	x2, x0
   11b74:	mov	w1, #0x1063                	// #4195
   11b78:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11b7c:	add	x0, x0, #0x9c0
   11b80:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11b84:	b	11be4 <PyFloat_FromString@plt+0xb094>
   11b88:	ldr	x0, [sp, #56]
   11b8c:	ldr	x1, [x0, #8]
   11b90:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11b94:	add	x0, x0, #0x500
   11b98:	cmp	x1, x0
   11b9c:	b.eq	11be4 <PyFloat_FromString@plt+0xb094>  // b.none
   11ba0:	ldr	x0, [sp, #56]
   11ba4:	ldr	x2, [x0, #8]
   11ba8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11bac:	add	x1, x0, #0x500
   11bb0:	mov	x0, x2
   11bb4:	bl	6a70 <PyType_IsSubtype@plt>
   11bb8:	cmp	w0, #0x0
   11bbc:	b.ne	11be4 <PyFloat_FromString@plt+0xb094>  // b.any
   11bc0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11bc4:	ldr	x0, [x0, #3936]
   11bc8:	ldr	x2, [x0]
   11bcc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11bd0:	add	x1, x0, #0xe00
   11bd4:	mov	x0, x2
   11bd8:	bl	66f0 <PyErr_SetString@plt>
   11bdc:	mov	x0, #0x0                   	// #0
   11be0:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11be4:	ldr	x1, [sp, #56]
   11be8:	add	x0, sp, #0x48
   11bec:	mov	x3, x1
   11bf0:	ldr	x2, [sp, #40]
   11bf4:	mov	x1, x0
   11bf8:	mov	w0, #0x1                   	// #1
   11bfc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11c00:	cmp	w0, #0x0
   11c04:	b.ne	11c10 <PyFloat_FromString@plt+0xb0c0>  // b.any
   11c08:	mov	x0, #0x0                   	// #0
   11c0c:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11c10:	ldr	x1, [sp, #80]
   11c14:	ldr	x2, [sp, #56]
   11c18:	add	x0, sp, #0x40
   11c1c:	mov	x3, x2
   11c20:	mov	x2, x1
   11c24:	mov	x1, x0
   11c28:	mov	w0, #0x1                   	// #1
   11c2c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11c30:	cmp	w0, #0x0
   11c34:	b.ne	11c58 <PyFloat_FromString@plt+0xb108>  // b.any
   11c38:	ldr	x0, [sp, #72]
   11c3c:	mov	x2, x0
   11c40:	mov	w1, #0x1063                	// #4195
   11c44:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11c48:	add	x0, x0, #0x9c0
   11c4c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11c50:	mov	x0, #0x0                   	// #0
   11c54:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11c58:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11c5c:	add	x0, x0, #0x360
   11c60:	bl	912c <PyFloat_FromString@plt+0x25dc>
   11c64:	str	x0, [sp, #88]
   11c68:	ldr	x0, [sp, #88]
   11c6c:	cmp	x0, #0x0
   11c70:	b.ne	11cac <PyFloat_FromString@plt+0xb15c>  // b.any
   11c74:	ldr	x0, [sp, #72]
   11c78:	mov	x2, x0
   11c7c:	mov	w1, #0x1063                	// #4195
   11c80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11c84:	add	x0, x0, #0x9c0
   11c88:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11c8c:	ldr	x0, [sp, #64]
   11c90:	mov	x2, x0
   11c94:	mov	w1, #0x1063                	// #4195
   11c98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11c9c:	add	x0, x0, #0x9c0
   11ca0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11ca4:	mov	x0, #0x0                   	// #0
   11ca8:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11cac:	ldr	x0, [sp, #88]
   11cb0:	add	x5, x0, #0x18
   11cb4:	ldr	x0, [sp, #72]
   11cb8:	add	x1, x0, #0x18
   11cbc:	ldr	x0, [sp, #64]
   11cc0:	add	x2, x0, #0x18
   11cc4:	ldr	x0, [sp, #56]
   11cc8:	add	x0, x0, #0x10
   11ccc:	add	x3, sp, #0x34
   11cd0:	mov	x4, x3
   11cd4:	mov	x3, x0
   11cd8:	mov	x0, x5
   11cdc:	bl	2cc74 <PyInit__decimal@@Base+0x14f9c>
   11ce0:	ldr	x0, [sp, #72]
   11ce4:	mov	x2, x0
   11ce8:	mov	w1, #0x1063                	// #4195
   11cec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11cf0:	add	x0, x0, #0x9c0
   11cf4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11cf8:	ldr	x0, [sp, #64]
   11cfc:	mov	x2, x0
   11d00:	mov	w1, #0x1063                	// #4195
   11d04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11d08:	add	x0, x0, #0x9c0
   11d0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11d10:	ldr	x0, [sp, #56]
   11d14:	ldr	w1, [sp, #52]
   11d18:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   11d1c:	cmp	w0, #0x0
   11d20:	b.eq	11d40 <PyFloat_FromString@plt+0xb1f0>  // b.none
   11d24:	ldr	x2, [sp, #88]
   11d28:	mov	w1, #0x1063                	// #4195
   11d2c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11d30:	add	x0, x0, #0x9c0
   11d34:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11d38:	mov	x0, #0x0                   	// #0
   11d3c:	b	11d44 <PyFloat_FromString@plt+0xb1f4>
   11d40:	ldr	x0, [sp, #88]
   11d44:	ldp	x29, x30, [sp], #96
   11d48:	ret
   11d4c:	stp	x29, x30, [sp, #-96]!
   11d50:	mov	x29, sp
   11d54:	str	x0, [sp, #40]
   11d58:	str	x1, [sp, #32]
   11d5c:	str	x2, [sp, #24]
   11d60:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11d64:	ldr	x0, [x0, #4008]
   11d68:	str	x0, [sp, #56]
   11d6c:	str	wzr, [sp, #52]
   11d70:	add	x1, sp, #0x38
   11d74:	add	x0, sp, #0x50
   11d78:	mov	x5, x1
   11d7c:	mov	x4, x0
   11d80:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   11d84:	add	x3, x0, #0x4e8
   11d88:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   11d8c:	add	x2, x0, #0xc8
   11d90:	ldr	x1, [sp, #24]
   11d94:	ldr	x0, [sp, #32]
   11d98:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   11d9c:	cmp	w0, #0x0
   11da0:	b.ne	11dac <PyFloat_FromString@plt+0xb25c>  // b.any
   11da4:	mov	x0, #0x0                   	// #0
   11da8:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11dac:	ldr	x1, [sp, #56]
   11db0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11db4:	ldr	x0, [x0, #4008]
   11db8:	cmp	x1, x0
   11dbc:	b.ne	11df8 <PyFloat_FromString@plt+0xb2a8>  // b.any
   11dc0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   11dc4:	str	x0, [sp, #56]
   11dc8:	ldr	x0, [sp, #56]
   11dcc:	cmp	x0, #0x0
   11dd0:	b.ne	11ddc <PyFloat_FromString@plt+0xb28c>  // b.any
   11dd4:	mov	x0, #0x0                   	// #0
   11dd8:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11ddc:	ldr	x0, [sp, #56]
   11de0:	mov	x2, x0
   11de4:	mov	w1, #0x1064                	// #4196
   11de8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11dec:	add	x0, x0, #0x9c0
   11df0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11df4:	b	11e54 <PyFloat_FromString@plt+0xb304>
   11df8:	ldr	x0, [sp, #56]
   11dfc:	ldr	x1, [x0, #8]
   11e00:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11e04:	add	x0, x0, #0x500
   11e08:	cmp	x1, x0
   11e0c:	b.eq	11e54 <PyFloat_FromString@plt+0xb304>  // b.none
   11e10:	ldr	x0, [sp, #56]
   11e14:	ldr	x2, [x0, #8]
   11e18:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11e1c:	add	x1, x0, #0x500
   11e20:	mov	x0, x2
   11e24:	bl	6a70 <PyType_IsSubtype@plt>
   11e28:	cmp	w0, #0x0
   11e2c:	b.ne	11e54 <PyFloat_FromString@plt+0xb304>  // b.any
   11e30:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11e34:	ldr	x0, [x0, #3936]
   11e38:	ldr	x2, [x0]
   11e3c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11e40:	add	x1, x0, #0xe00
   11e44:	mov	x0, x2
   11e48:	bl	66f0 <PyErr_SetString@plt>
   11e4c:	mov	x0, #0x0                   	// #0
   11e50:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11e54:	ldr	x1, [sp, #56]
   11e58:	add	x0, sp, #0x48
   11e5c:	mov	x3, x1
   11e60:	ldr	x2, [sp, #40]
   11e64:	mov	x1, x0
   11e68:	mov	w0, #0x1                   	// #1
   11e6c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11e70:	cmp	w0, #0x0
   11e74:	b.ne	11e80 <PyFloat_FromString@plt+0xb330>  // b.any
   11e78:	mov	x0, #0x0                   	// #0
   11e7c:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11e80:	ldr	x1, [sp, #80]
   11e84:	ldr	x2, [sp, #56]
   11e88:	add	x0, sp, #0x40
   11e8c:	mov	x3, x2
   11e90:	mov	x2, x1
   11e94:	mov	x1, x0
   11e98:	mov	w0, #0x1                   	// #1
   11e9c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   11ea0:	cmp	w0, #0x0
   11ea4:	b.ne	11ec8 <PyFloat_FromString@plt+0xb378>  // b.any
   11ea8:	ldr	x0, [sp, #72]
   11eac:	mov	x2, x0
   11eb0:	mov	w1, #0x1064                	// #4196
   11eb4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11eb8:	add	x0, x0, #0x9c0
   11ebc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11ec0:	mov	x0, #0x0                   	// #0
   11ec4:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11ec8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   11ecc:	add	x0, x0, #0x360
   11ed0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   11ed4:	str	x0, [sp, #88]
   11ed8:	ldr	x0, [sp, #88]
   11edc:	cmp	x0, #0x0
   11ee0:	b.ne	11f1c <PyFloat_FromString@plt+0xb3cc>  // b.any
   11ee4:	ldr	x0, [sp, #72]
   11ee8:	mov	x2, x0
   11eec:	mov	w1, #0x1064                	// #4196
   11ef0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11ef4:	add	x0, x0, #0x9c0
   11ef8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11efc:	ldr	x0, [sp, #64]
   11f00:	mov	x2, x0
   11f04:	mov	w1, #0x1064                	// #4196
   11f08:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11f0c:	add	x0, x0, #0x9c0
   11f10:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11f14:	mov	x0, #0x0                   	// #0
   11f18:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11f1c:	ldr	x0, [sp, #88]
   11f20:	add	x5, x0, #0x18
   11f24:	ldr	x0, [sp, #72]
   11f28:	add	x1, x0, #0x18
   11f2c:	ldr	x0, [sp, #64]
   11f30:	add	x2, x0, #0x18
   11f34:	ldr	x0, [sp, #56]
   11f38:	add	x0, x0, #0x10
   11f3c:	add	x3, sp, #0x34
   11f40:	mov	x4, x3
   11f44:	mov	x3, x0
   11f48:	mov	x0, x5
   11f4c:	bl	2e030 <PyInit__decimal@@Base+0x16358>
   11f50:	ldr	x0, [sp, #72]
   11f54:	mov	x2, x0
   11f58:	mov	w1, #0x1064                	// #4196
   11f5c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11f60:	add	x0, x0, #0x9c0
   11f64:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11f68:	ldr	x0, [sp, #64]
   11f6c:	mov	x2, x0
   11f70:	mov	w1, #0x1064                	// #4196
   11f74:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11f78:	add	x0, x0, #0x9c0
   11f7c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11f80:	ldr	x0, [sp, #56]
   11f84:	ldr	w1, [sp, #52]
   11f88:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   11f8c:	cmp	w0, #0x0
   11f90:	b.eq	11fb0 <PyFloat_FromString@plt+0xb460>  // b.none
   11f94:	ldr	x2, [sp, #88]
   11f98:	mov	w1, #0x1064                	// #4196
   11f9c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   11fa0:	add	x0, x0, #0x9c0
   11fa4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   11fa8:	mov	x0, #0x0                   	// #0
   11fac:	b	11fb4 <PyFloat_FromString@plt+0xb464>
   11fb0:	ldr	x0, [sp, #88]
   11fb4:	ldp	x29, x30, [sp], #96
   11fb8:	ret
   11fbc:	stp	x29, x30, [sp, #-96]!
   11fc0:	mov	x29, sp
   11fc4:	str	x0, [sp, #40]
   11fc8:	str	x1, [sp, #32]
   11fcc:	str	x2, [sp, #24]
   11fd0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   11fd4:	ldr	x0, [x0, #4008]
   11fd8:	str	x0, [sp, #56]
   11fdc:	str	wzr, [sp, #52]
   11fe0:	add	x1, sp, #0x38
   11fe4:	add	x0, sp, #0x50
   11fe8:	mov	x5, x1
   11fec:	mov	x4, x0
   11ff0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   11ff4:	add	x3, x0, #0x500
   11ff8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   11ffc:	add	x2, x0, #0xc8
   12000:	ldr	x1, [sp, #24]
   12004:	ldr	x0, [sp, #32]
   12008:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   1200c:	cmp	w0, #0x0
   12010:	b.ne	1201c <PyFloat_FromString@plt+0xb4cc>  // b.any
   12014:	mov	x0, #0x0                   	// #0
   12018:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   1201c:	ldr	x1, [sp, #56]
   12020:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12024:	ldr	x0, [x0, #4008]
   12028:	cmp	x1, x0
   1202c:	b.ne	12068 <PyFloat_FromString@plt+0xb518>  // b.any
   12030:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12034:	str	x0, [sp, #56]
   12038:	ldr	x0, [sp, #56]
   1203c:	cmp	x0, #0x0
   12040:	b.ne	1204c <PyFloat_FromString@plt+0xb4fc>  // b.any
   12044:	mov	x0, #0x0                   	// #0
   12048:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   1204c:	ldr	x0, [sp, #56]
   12050:	mov	x2, x0
   12054:	mov	w1, #0x1066                	// #4198
   12058:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1205c:	add	x0, x0, #0x9c0
   12060:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12064:	b	120c4 <PyFloat_FromString@plt+0xb574>
   12068:	ldr	x0, [sp, #56]
   1206c:	ldr	x1, [x0, #8]
   12070:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   12074:	add	x0, x0, #0x500
   12078:	cmp	x1, x0
   1207c:	b.eq	120c4 <PyFloat_FromString@plt+0xb574>  // b.none
   12080:	ldr	x0, [sp, #56]
   12084:	ldr	x2, [x0, #8]
   12088:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1208c:	add	x1, x0, #0x500
   12090:	mov	x0, x2
   12094:	bl	6a70 <PyType_IsSubtype@plt>
   12098:	cmp	w0, #0x0
   1209c:	b.ne	120c4 <PyFloat_FromString@plt+0xb574>  // b.any
   120a0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   120a4:	ldr	x0, [x0, #3936]
   120a8:	ldr	x2, [x0]
   120ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   120b0:	add	x1, x0, #0xe00
   120b4:	mov	x0, x2
   120b8:	bl	66f0 <PyErr_SetString@plt>
   120bc:	mov	x0, #0x0                   	// #0
   120c0:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   120c4:	ldr	x1, [sp, #56]
   120c8:	add	x0, sp, #0x48
   120cc:	mov	x3, x1
   120d0:	ldr	x2, [sp, #40]
   120d4:	mov	x1, x0
   120d8:	mov	w0, #0x1                   	// #1
   120dc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   120e0:	cmp	w0, #0x0
   120e4:	b.ne	120f0 <PyFloat_FromString@plt+0xb5a0>  // b.any
   120e8:	mov	x0, #0x0                   	// #0
   120ec:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   120f0:	ldr	x1, [sp, #80]
   120f4:	ldr	x2, [sp, #56]
   120f8:	add	x0, sp, #0x40
   120fc:	mov	x3, x2
   12100:	mov	x2, x1
   12104:	mov	x1, x0
   12108:	mov	w0, #0x1                   	// #1
   1210c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   12110:	cmp	w0, #0x0
   12114:	b.ne	12138 <PyFloat_FromString@plt+0xb5e8>  // b.any
   12118:	ldr	x0, [sp, #72]
   1211c:	mov	x2, x0
   12120:	mov	w1, #0x1066                	// #4198
   12124:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12128:	add	x0, x0, #0x9c0
   1212c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12130:	mov	x0, #0x0                   	// #0
   12134:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   12138:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1213c:	add	x0, x0, #0x360
   12140:	bl	912c <PyFloat_FromString@plt+0x25dc>
   12144:	str	x0, [sp, #88]
   12148:	ldr	x0, [sp, #88]
   1214c:	cmp	x0, #0x0
   12150:	b.ne	1218c <PyFloat_FromString@plt+0xb63c>  // b.any
   12154:	ldr	x0, [sp, #72]
   12158:	mov	x2, x0
   1215c:	mov	w1, #0x1066                	// #4198
   12160:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12164:	add	x0, x0, #0x9c0
   12168:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1216c:	ldr	x0, [sp, #64]
   12170:	mov	x2, x0
   12174:	mov	w1, #0x1066                	// #4198
   12178:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1217c:	add	x0, x0, #0x9c0
   12180:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12184:	mov	x0, #0x0                   	// #0
   12188:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   1218c:	ldr	x0, [sp, #88]
   12190:	add	x5, x0, #0x18
   12194:	ldr	x0, [sp, #72]
   12198:	add	x1, x0, #0x18
   1219c:	ldr	x0, [sp, #64]
   121a0:	add	x2, x0, #0x18
   121a4:	ldr	x0, [sp, #56]
   121a8:	add	x0, x0, #0x10
   121ac:	add	x3, sp, #0x34
   121b0:	mov	x4, x3
   121b4:	mov	x3, x0
   121b8:	mov	x0, x5
   121bc:	bl	2d63c <PyInit__decimal@@Base+0x15964>
   121c0:	ldr	x0, [sp, #72]
   121c4:	mov	x2, x0
   121c8:	mov	w1, #0x1066                	// #4198
   121cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   121d0:	add	x0, x0, #0x9c0
   121d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   121d8:	ldr	x0, [sp, #64]
   121dc:	mov	x2, x0
   121e0:	mov	w1, #0x1066                	// #4198
   121e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   121e8:	add	x0, x0, #0x9c0
   121ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   121f0:	ldr	x0, [sp, #56]
   121f4:	ldr	w1, [sp, #52]
   121f8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   121fc:	cmp	w0, #0x0
   12200:	b.eq	12220 <PyFloat_FromString@plt+0xb6d0>  // b.none
   12204:	ldr	x2, [sp, #88]
   12208:	mov	w1, #0x1066                	// #4198
   1220c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12210:	add	x0, x0, #0x9c0
   12214:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12218:	mov	x0, #0x0                   	// #0
   1221c:	b	12224 <PyFloat_FromString@plt+0xb6d4>
   12220:	ldr	x0, [sp, #88]
   12224:	ldp	x29, x30, [sp], #96
   12228:	ret
   1222c:	stp	x29, x30, [sp, #-96]!
   12230:	mov	x29, sp
   12234:	str	x0, [sp, #40]
   12238:	str	x1, [sp, #32]
   1223c:	str	x2, [sp, #24]
   12240:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12244:	ldr	x0, [x0, #4008]
   12248:	str	x0, [sp, #56]
   1224c:	str	wzr, [sp, #52]
   12250:	add	x1, sp, #0x38
   12254:	add	x0, sp, #0x50
   12258:	mov	x5, x1
   1225c:	mov	x4, x0
   12260:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   12264:	add	x3, x0, #0x518
   12268:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1226c:	add	x2, x0, #0xc8
   12270:	ldr	x1, [sp, #24]
   12274:	ldr	x0, [sp, #32]
   12278:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   1227c:	cmp	w0, #0x0
   12280:	b.ne	1228c <PyFloat_FromString@plt+0xb73c>  // b.any
   12284:	mov	x0, #0x0                   	// #0
   12288:	b	12494 <PyFloat_FromString@plt+0xb944>
   1228c:	ldr	x1, [sp, #56]
   12290:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12294:	ldr	x0, [x0, #4008]
   12298:	cmp	x1, x0
   1229c:	b.ne	122d8 <PyFloat_FromString@plt+0xb788>  // b.any
   122a0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   122a4:	str	x0, [sp, #56]
   122a8:	ldr	x0, [sp, #56]
   122ac:	cmp	x0, #0x0
   122b0:	b.ne	122bc <PyFloat_FromString@plt+0xb76c>  // b.any
   122b4:	mov	x0, #0x0                   	// #0
   122b8:	b	12494 <PyFloat_FromString@plt+0xb944>
   122bc:	ldr	x0, [sp, #56]
   122c0:	mov	x2, x0
   122c4:	mov	w1, #0x1067                	// #4199
   122c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   122cc:	add	x0, x0, #0x9c0
   122d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   122d4:	b	12334 <PyFloat_FromString@plt+0xb7e4>
   122d8:	ldr	x0, [sp, #56]
   122dc:	ldr	x1, [x0, #8]
   122e0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   122e4:	add	x0, x0, #0x500
   122e8:	cmp	x1, x0
   122ec:	b.eq	12334 <PyFloat_FromString@plt+0xb7e4>  // b.none
   122f0:	ldr	x0, [sp, #56]
   122f4:	ldr	x2, [x0, #8]
   122f8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   122fc:	add	x1, x0, #0x500
   12300:	mov	x0, x2
   12304:	bl	6a70 <PyType_IsSubtype@plt>
   12308:	cmp	w0, #0x0
   1230c:	b.ne	12334 <PyFloat_FromString@plt+0xb7e4>  // b.any
   12310:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12314:	ldr	x0, [x0, #3936]
   12318:	ldr	x2, [x0]
   1231c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12320:	add	x1, x0, #0xe00
   12324:	mov	x0, x2
   12328:	bl	66f0 <PyErr_SetString@plt>
   1232c:	mov	x0, #0x0                   	// #0
   12330:	b	12494 <PyFloat_FromString@plt+0xb944>
   12334:	ldr	x1, [sp, #56]
   12338:	add	x0, sp, #0x48
   1233c:	mov	x3, x1
   12340:	ldr	x2, [sp, #40]
   12344:	mov	x1, x0
   12348:	mov	w0, #0x1                   	// #1
   1234c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   12350:	cmp	w0, #0x0
   12354:	b.ne	12360 <PyFloat_FromString@plt+0xb810>  // b.any
   12358:	mov	x0, #0x0                   	// #0
   1235c:	b	12494 <PyFloat_FromString@plt+0xb944>
   12360:	ldr	x1, [sp, #80]
   12364:	ldr	x2, [sp, #56]
   12368:	add	x0, sp, #0x40
   1236c:	mov	x3, x2
   12370:	mov	x2, x1
   12374:	mov	x1, x0
   12378:	mov	w0, #0x1                   	// #1
   1237c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   12380:	cmp	w0, #0x0
   12384:	b.ne	123a8 <PyFloat_FromString@plt+0xb858>  // b.any
   12388:	ldr	x0, [sp, #72]
   1238c:	mov	x2, x0
   12390:	mov	w1, #0x1067                	// #4199
   12394:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12398:	add	x0, x0, #0x9c0
   1239c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   123a0:	mov	x0, #0x0                   	// #0
   123a4:	b	12494 <PyFloat_FromString@plt+0xb944>
   123a8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   123ac:	add	x0, x0, #0x360
   123b0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   123b4:	str	x0, [sp, #88]
   123b8:	ldr	x0, [sp, #88]
   123bc:	cmp	x0, #0x0
   123c0:	b.ne	123fc <PyFloat_FromString@plt+0xb8ac>  // b.any
   123c4:	ldr	x0, [sp, #72]
   123c8:	mov	x2, x0
   123cc:	mov	w1, #0x1067                	// #4199
   123d0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   123d4:	add	x0, x0, #0x9c0
   123d8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   123dc:	ldr	x0, [sp, #64]
   123e0:	mov	x2, x0
   123e4:	mov	w1, #0x1067                	// #4199
   123e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   123ec:	add	x0, x0, #0x9c0
   123f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   123f4:	mov	x0, #0x0                   	// #0
   123f8:	b	12494 <PyFloat_FromString@plt+0xb944>
   123fc:	ldr	x0, [sp, #88]
   12400:	add	x5, x0, #0x18
   12404:	ldr	x0, [sp, #72]
   12408:	add	x1, x0, #0x18
   1240c:	ldr	x0, [sp, #64]
   12410:	add	x2, x0, #0x18
   12414:	ldr	x0, [sp, #56]
   12418:	add	x0, x0, #0x10
   1241c:	add	x3, sp, #0x34
   12420:	mov	x4, x3
   12424:	mov	x3, x0
   12428:	mov	x0, x5
   1242c:	bl	2daec <PyInit__decimal@@Base+0x15e14>
   12430:	ldr	x0, [sp, #72]
   12434:	mov	x2, x0
   12438:	mov	w1, #0x1067                	// #4199
   1243c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12440:	add	x0, x0, #0x9c0
   12444:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12448:	ldr	x0, [sp, #64]
   1244c:	mov	x2, x0
   12450:	mov	w1, #0x1067                	// #4199
   12454:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12458:	add	x0, x0, #0x9c0
   1245c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12460:	ldr	x0, [sp, #56]
   12464:	ldr	w1, [sp, #52]
   12468:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1246c:	cmp	w0, #0x0
   12470:	b.eq	12490 <PyFloat_FromString@plt+0xb940>  // b.none
   12474:	ldr	x2, [sp, #88]
   12478:	mov	w1, #0x1067                	// #4199
   1247c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12480:	add	x0, x0, #0x9c0
   12484:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12488:	mov	x0, #0x0                   	// #0
   1248c:	b	12494 <PyFloat_FromString@plt+0xb944>
   12490:	ldr	x0, [sp, #88]
   12494:	ldp	x29, x30, [sp], #96
   12498:	ret
   1249c:	stp	x29, x30, [sp, #-96]!
   124a0:	mov	x29, sp
   124a4:	str	x0, [sp, #40]
   124a8:	str	x1, [sp, #32]
   124ac:	str	x2, [sp, #24]
   124b0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   124b4:	ldr	x0, [x0, #4008]
   124b8:	str	x0, [sp, #56]
   124bc:	str	wzr, [sp, #52]
   124c0:	add	x1, sp, #0x38
   124c4:	add	x0, sp, #0x50
   124c8:	mov	x5, x1
   124cc:	mov	x4, x0
   124d0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   124d4:	add	x3, x0, #0x530
   124d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   124dc:	add	x2, x0, #0xc8
   124e0:	ldr	x1, [sp, #24]
   124e4:	ldr	x0, [sp, #32]
   124e8:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   124ec:	cmp	w0, #0x0
   124f0:	b.ne	124fc <PyFloat_FromString@plt+0xb9ac>  // b.any
   124f4:	mov	x0, #0x0                   	// #0
   124f8:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   124fc:	ldr	x1, [sp, #56]
   12500:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12504:	ldr	x0, [x0, #4008]
   12508:	cmp	x1, x0
   1250c:	b.ne	12548 <PyFloat_FromString@plt+0xb9f8>  // b.any
   12510:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12514:	str	x0, [sp, #56]
   12518:	ldr	x0, [sp, #56]
   1251c:	cmp	x0, #0x0
   12520:	b.ne	1252c <PyFloat_FromString@plt+0xb9dc>  // b.any
   12524:	mov	x0, #0x0                   	// #0
   12528:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   1252c:	ldr	x0, [sp, #56]
   12530:	mov	x2, x0
   12534:	mov	w1, #0x1068                	// #4200
   12538:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1253c:	add	x0, x0, #0x9c0
   12540:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12544:	b	125a4 <PyFloat_FromString@plt+0xba54>
   12548:	ldr	x0, [sp, #56]
   1254c:	ldr	x1, [x0, #8]
   12550:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   12554:	add	x0, x0, #0x500
   12558:	cmp	x1, x0
   1255c:	b.eq	125a4 <PyFloat_FromString@plt+0xba54>  // b.none
   12560:	ldr	x0, [sp, #56]
   12564:	ldr	x2, [x0, #8]
   12568:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1256c:	add	x1, x0, #0x500
   12570:	mov	x0, x2
   12574:	bl	6a70 <PyType_IsSubtype@plt>
   12578:	cmp	w0, #0x0
   1257c:	b.ne	125a4 <PyFloat_FromString@plt+0xba54>  // b.any
   12580:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12584:	ldr	x0, [x0, #3936]
   12588:	ldr	x2, [x0]
   1258c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12590:	add	x1, x0, #0xe00
   12594:	mov	x0, x2
   12598:	bl	66f0 <PyErr_SetString@plt>
   1259c:	mov	x0, #0x0                   	// #0
   125a0:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   125a4:	ldr	x1, [sp, #56]
   125a8:	add	x0, sp, #0x48
   125ac:	mov	x3, x1
   125b0:	ldr	x2, [sp, #40]
   125b4:	mov	x1, x0
   125b8:	mov	w0, #0x1                   	// #1
   125bc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   125c0:	cmp	w0, #0x0
   125c4:	b.ne	125d0 <PyFloat_FromString@plt+0xba80>  // b.any
   125c8:	mov	x0, #0x0                   	// #0
   125cc:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   125d0:	ldr	x1, [sp, #80]
   125d4:	ldr	x2, [sp, #56]
   125d8:	add	x0, sp, #0x40
   125dc:	mov	x3, x2
   125e0:	mov	x2, x1
   125e4:	mov	x1, x0
   125e8:	mov	w0, #0x1                   	// #1
   125ec:	bl	b168 <PyFloat_FromString@plt+0x4618>
   125f0:	cmp	w0, #0x0
   125f4:	b.ne	12618 <PyFloat_FromString@plt+0xbac8>  // b.any
   125f8:	ldr	x0, [sp, #72]
   125fc:	mov	x2, x0
   12600:	mov	w1, #0x1068                	// #4200
   12604:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12608:	add	x0, x0, #0x9c0
   1260c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12610:	mov	x0, #0x0                   	// #0
   12614:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   12618:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1261c:	add	x0, x0, #0x360
   12620:	bl	912c <PyFloat_FromString@plt+0x25dc>
   12624:	str	x0, [sp, #88]
   12628:	ldr	x0, [sp, #88]
   1262c:	cmp	x0, #0x0
   12630:	b.ne	1266c <PyFloat_FromString@plt+0xbb1c>  // b.any
   12634:	ldr	x0, [sp, #72]
   12638:	mov	x2, x0
   1263c:	mov	w1, #0x1068                	// #4200
   12640:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12644:	add	x0, x0, #0x9c0
   12648:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1264c:	ldr	x0, [sp, #64]
   12650:	mov	x2, x0
   12654:	mov	w1, #0x1068                	// #4200
   12658:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1265c:	add	x0, x0, #0x9c0
   12660:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12664:	mov	x0, #0x0                   	// #0
   12668:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   1266c:	ldr	x0, [sp, #88]
   12670:	add	x5, x0, #0x18
   12674:	ldr	x0, [sp, #72]
   12678:	add	x1, x0, #0x18
   1267c:	ldr	x0, [sp, #64]
   12680:	add	x2, x0, #0x18
   12684:	ldr	x0, [sp, #56]
   12688:	add	x0, x0, #0x10
   1268c:	add	x3, sp, #0x34
   12690:	mov	x4, x3
   12694:	mov	x3, x0
   12698:	mov	x0, x5
   1269c:	bl	2de50 <PyInit__decimal@@Base+0x16178>
   126a0:	ldr	x0, [sp, #72]
   126a4:	mov	x2, x0
   126a8:	mov	w1, #0x1068                	// #4200
   126ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   126b0:	add	x0, x0, #0x9c0
   126b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   126b8:	ldr	x0, [sp, #64]
   126bc:	mov	x2, x0
   126c0:	mov	w1, #0x1068                	// #4200
   126c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   126c8:	add	x0, x0, #0x9c0
   126cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   126d0:	ldr	x0, [sp, #56]
   126d4:	ldr	w1, [sp, #52]
   126d8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   126dc:	cmp	w0, #0x0
   126e0:	b.eq	12700 <PyFloat_FromString@plt+0xbbb0>  // b.none
   126e4:	ldr	x2, [sp, #88]
   126e8:	mov	w1, #0x1068                	// #4200
   126ec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   126f0:	add	x0, x0, #0x9c0
   126f4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   126f8:	mov	x0, #0x0                   	// #0
   126fc:	b	12704 <PyFloat_FromString@plt+0xbbb4>
   12700:	ldr	x0, [sp, #88]
   12704:	ldp	x29, x30, [sp], #96
   12708:	ret
   1270c:	stp	x29, x30, [sp, #-160]!
   12710:	mov	x29, sp
   12714:	str	x0, [sp, #40]
   12718:	str	x1, [sp, #32]
   1271c:	str	x2, [sp, #24]
   12720:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12724:	ldr	x0, [x0, #4008]
   12728:	str	x0, [sp, #136]
   1272c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12730:	ldr	x0, [x0, #4008]
   12734:	str	x0, [sp, #128]
   12738:	str	wzr, [sp, #100]
   1273c:	add	x2, sp, #0x80
   12740:	add	x1, sp, #0x88
   12744:	add	x0, sp, #0x78
   12748:	mov	x6, x2
   1274c:	mov	x5, x1
   12750:	mov	x4, x0
   12754:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   12758:	add	x3, x0, #0x548
   1275c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   12760:	add	x2, x0, #0x310
   12764:	ldr	x1, [sp, #24]
   12768:	ldr	x0, [sp, #32]
   1276c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   12770:	cmp	w0, #0x0
   12774:	b.ne	12780 <PyFloat_FromString@plt+0xbc30>  // b.any
   12778:	mov	x0, #0x0                   	// #0
   1277c:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   12780:	ldr	x1, [sp, #128]
   12784:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12788:	ldr	x0, [x0, #4008]
   1278c:	cmp	x1, x0
   12790:	b.ne	127cc <PyFloat_FromString@plt+0xbc7c>  // b.any
   12794:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12798:	str	x0, [sp, #128]
   1279c:	ldr	x0, [sp, #128]
   127a0:	cmp	x0, #0x0
   127a4:	b.ne	127b0 <PyFloat_FromString@plt+0xbc60>  // b.any
   127a8:	mov	x0, #0x0                   	// #0
   127ac:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   127b0:	ldr	x0, [sp, #128]
   127b4:	mov	x2, x0
   127b8:	mov	w1, #0x1079                	// #4217
   127bc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   127c0:	add	x0, x0, #0x9c0
   127c4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   127c8:	b	12828 <PyFloat_FromString@plt+0xbcd8>
   127cc:	ldr	x0, [sp, #128]
   127d0:	ldr	x1, [x0, #8]
   127d4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   127d8:	add	x0, x0, #0x500
   127dc:	cmp	x1, x0
   127e0:	b.eq	12828 <PyFloat_FromString@plt+0xbcd8>  // b.none
   127e4:	ldr	x0, [sp, #128]
   127e8:	ldr	x2, [x0, #8]
   127ec:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   127f0:	add	x1, x0, #0x500
   127f4:	mov	x0, x2
   127f8:	bl	6a70 <PyType_IsSubtype@plt>
   127fc:	cmp	w0, #0x0
   12800:	b.ne	12828 <PyFloat_FromString@plt+0xbcd8>  // b.any
   12804:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12808:	ldr	x0, [x0, #3936]
   1280c:	ldr	x2, [x0]
   12810:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12814:	add	x1, x0, #0xe00
   12818:	mov	x0, x2
   1281c:	bl	66f0 <PyErr_SetString@plt>
   12820:	mov	x0, #0x0                   	// #0
   12824:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   12828:	ldr	x0, [sp, #128]
   1282c:	add	x1, x0, #0x10
   12830:	add	x0, sp, #0x30
   12834:	ldp	x2, x3, [x1]
   12838:	stp	x2, x3, [x0]
   1283c:	ldp	x2, x3, [x1, #16]
   12840:	stp	x2, x3, [x0, #16]
   12844:	ldp	x2, x3, [x1, #32]
   12848:	stp	x2, x3, [x0, #32]
   1284c:	ldr	x1, [sp, #136]
   12850:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12854:	ldr	x0, [x0, #4008]
   12858:	cmp	x1, x0
   1285c:	b.eq	128a4 <PyFloat_FromString@plt+0xbd54>  // b.none
   12860:	ldr	x0, [sp, #136]
   12864:	bl	751c <PyFloat_FromString@plt+0x9cc>
   12868:	str	w0, [sp, #156]
   1286c:	ldr	w0, [sp, #156]
   12870:	cmp	w0, #0x0
   12874:	b.ge	12880 <PyFloat_FromString@plt+0xbd30>  // b.tcont
   12878:	mov	x0, #0x0                   	// #0
   1287c:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   12880:	add	x0, sp, #0x30
   12884:	ldr	w1, [sp, #156]
   12888:	bl	1baa0 <PyInit__decimal@@Base+0x3dc8>
   1288c:	cmp	w0, #0x0
   12890:	b.ne	128a4 <PyFloat_FromString@plt+0xbd54>  // b.any
   12894:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   12898:	add	x0, x0, #0x318
   1289c:	bl	6e68 <PyFloat_FromString@plt+0x318>
   128a0:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   128a4:	ldr	x1, [sp, #128]
   128a8:	add	x0, sp, #0x70
   128ac:	mov	x3, x1
   128b0:	ldr	x2, [sp, #40]
   128b4:	mov	x1, x0
   128b8:	mov	w0, #0x1                   	// #1
   128bc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   128c0:	cmp	w0, #0x0
   128c4:	b.ne	128d0 <PyFloat_FromString@plt+0xbd80>  // b.any
   128c8:	mov	x0, #0x0                   	// #0
   128cc:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   128d0:	ldr	x1, [sp, #120]
   128d4:	ldr	x2, [sp, #128]
   128d8:	add	x0, sp, #0x68
   128dc:	mov	x3, x2
   128e0:	mov	x2, x1
   128e4:	mov	x1, x0
   128e8:	mov	w0, #0x1                   	// #1
   128ec:	bl	b168 <PyFloat_FromString@plt+0x4618>
   128f0:	cmp	w0, #0x0
   128f4:	b.ne	12918 <PyFloat_FromString@plt+0xbdc8>  // b.any
   128f8:	ldr	x0, [sp, #112]
   128fc:	mov	x2, x0
   12900:	mov	w1, #0x1086                	// #4230
   12904:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12908:	add	x0, x0, #0x9c0
   1290c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12910:	mov	x0, #0x0                   	// #0
   12914:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   12918:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1291c:	add	x0, x0, #0x360
   12920:	bl	912c <PyFloat_FromString@plt+0x25dc>
   12924:	str	x0, [sp, #144]
   12928:	ldr	x0, [sp, #144]
   1292c:	cmp	x0, #0x0
   12930:	b.ne	1296c <PyFloat_FromString@plt+0xbe1c>  // b.any
   12934:	ldr	x0, [sp, #112]
   12938:	mov	x2, x0
   1293c:	mov	w1, #0x108a                	// #4234
   12940:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12944:	add	x0, x0, #0x9c0
   12948:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1294c:	ldr	x0, [sp, #104]
   12950:	mov	x2, x0
   12954:	mov	w1, #0x108b                	// #4235
   12958:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1295c:	add	x0, x0, #0x9c0
   12960:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12964:	mov	x0, #0x0                   	// #0
   12968:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   1296c:	ldr	x0, [sp, #144]
   12970:	add	x5, x0, #0x18
   12974:	ldr	x0, [sp, #112]
   12978:	add	x1, x0, #0x18
   1297c:	ldr	x0, [sp, #104]
   12980:	add	x0, x0, #0x18
   12984:	add	x3, sp, #0x64
   12988:	add	x2, sp, #0x30
   1298c:	mov	x4, x3
   12990:	mov	x3, x2
   12994:	mov	x2, x0
   12998:	mov	x0, x5
   1299c:	bl	39d40 <PyInit__decimal@@Base+0x22068>
   129a0:	ldr	x0, [sp, #112]
   129a4:	mov	x2, x0
   129a8:	mov	w1, #0x1090                	// #4240
   129ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   129b0:	add	x0, x0, #0x9c0
   129b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   129b8:	ldr	x0, [sp, #104]
   129bc:	mov	x2, x0
   129c0:	mov	w1, #0x1091                	// #4241
   129c4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   129c8:	add	x0, x0, #0x9c0
   129cc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   129d0:	ldr	x0, [sp, #128]
   129d4:	ldr	w1, [sp, #100]
   129d8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   129dc:	cmp	w0, #0x0
   129e0:	b.eq	12a00 <PyFloat_FromString@plt+0xbeb0>  // b.none
   129e4:	ldr	x2, [sp, #144]
   129e8:	mov	w1, #0x1093                	// #4243
   129ec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   129f0:	add	x0, x0, #0x9c0
   129f4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   129f8:	mov	x0, #0x0                   	// #0
   129fc:	b	12a04 <PyFloat_FromString@plt+0xbeb4>
   12a00:	ldr	x0, [sp, #144]
   12a04:	ldp	x29, x30, [sp], #160
   12a08:	ret
   12a0c:	stp	x29, x30, [sp, #-96]!
   12a10:	mov	x29, sp
   12a14:	str	x0, [sp, #40]
   12a18:	str	x1, [sp, #32]
   12a1c:	str	w2, [sp, #28]
   12a20:	str	wzr, [sp, #52]
   12a24:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12a28:	str	x0, [sp, #80]
   12a2c:	ldr	x0, [sp, #80]
   12a30:	cmp	x0, #0x0
   12a34:	b.ne	12a40 <PyFloat_FromString@plt+0xbef0>  // b.any
   12a38:	mov	x0, #0x0                   	// #0
   12a3c:	b	12c88 <PyFloat_FromString@plt+0xc138>
   12a40:	ldr	x2, [sp, #80]
   12a44:	mov	w1, #0x10a7                	// #4263
   12a48:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12a4c:	add	x0, x0, #0x9c0
   12a50:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12a54:	add	x1, sp, #0x38
   12a58:	add	x0, sp, #0x40
   12a5c:	ldr	x5, [sp, #80]
   12a60:	ldr	w4, [sp, #28]
   12a64:	ldr	x3, [sp, #32]
   12a68:	ldr	x2, [sp, #40]
   12a6c:	bl	b4c8 <PyFloat_FromString@plt+0x4978>
   12a70:	cmp	w0, #0x0
   12a74:	b.ne	12a80 <PyFloat_FromString@plt+0xbf30>  // b.any
   12a78:	ldr	x0, [sp, #56]
   12a7c:	b	12c88 <PyFloat_FromString@plt+0xc138>
   12a80:	ldr	x0, [sp, #64]
   12a84:	add	x0, x0, #0x18
   12a88:	bl	2541c <PyInit__decimal@@Base+0xd744>
   12a8c:	str	w0, [sp, #76]
   12a90:	ldr	x0, [sp, #56]
   12a94:	add	x0, x0, #0x18
   12a98:	bl	2541c <PyInit__decimal@@Base+0xd744>
   12a9c:	str	w0, [sp, #72]
   12aa0:	ldr	x0, [sp, #64]
   12aa4:	add	x3, x0, #0x18
   12aa8:	ldr	x0, [sp, #56]
   12aac:	add	x0, x0, #0x18
   12ab0:	add	x1, sp, #0x34
   12ab4:	mov	x2, x1
   12ab8:	mov	x1, x0
   12abc:	mov	x0, x3
   12ac0:	bl	2a784 <PyInit__decimal@@Base+0x12aac>
   12ac4:	str	w0, [sp, #92]
   12ac8:	ldr	x0, [sp, #64]
   12acc:	mov	x2, x0
   12ad0:	mov	w1, #0x10ae                	// #4270
   12ad4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12ad8:	add	x0, x0, #0x9c0
   12adc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12ae0:	ldr	x0, [sp, #56]
   12ae4:	mov	x2, x0
   12ae8:	mov	w1, #0x10af                	// #4271
   12aec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12af0:	add	x0, x0, #0x9c0
   12af4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12af8:	ldr	w1, [sp, #92]
   12afc:	mov	w0, #0x7fffffff            	// #2147483647
   12b00:	cmp	w1, w0
   12b04:	b.ne	12b74 <PyFloat_FromString@plt+0xc024>  // b.any
   12b08:	ldr	w0, [sp, #76]
   12b0c:	cmp	w0, #0x0
   12b10:	b.ne	12b38 <PyFloat_FromString@plt+0xbfe8>  // b.any
   12b14:	ldr	w0, [sp, #72]
   12b18:	cmp	w0, #0x0
   12b1c:	b.ne	12b38 <PyFloat_FromString@plt+0xbfe8>  // b.any
   12b20:	ldr	w0, [sp, #28]
   12b24:	cmp	w0, #0x2
   12b28:	b.eq	12b58 <PyFloat_FromString@plt+0xc008>  // b.none
   12b2c:	ldr	w0, [sp, #28]
   12b30:	cmp	w0, #0x3
   12b34:	b.eq	12b58 <PyFloat_FromString@plt+0xc008>  // b.none
   12b38:	ldr	w0, [sp, #52]
   12b3c:	mov	w1, w0
   12b40:	ldr	x0, [sp, #80]
   12b44:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   12b48:	cmp	w0, #0x0
   12b4c:	b.eq	12b58 <PyFloat_FromString@plt+0xc008>  // b.none
   12b50:	mov	x0, #0x0                   	// #0
   12b54:	b	12c88 <PyFloat_FromString@plt+0xc138>
   12b58:	ldr	w0, [sp, #28]
   12b5c:	cmp	w0, #0x3
   12b60:	b.ne	12b6c <PyFloat_FromString@plt+0xc01c>  // b.any
   12b64:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   12b68:	b	12c88 <PyFloat_FromString@plt+0xc138>
   12b6c:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   12b70:	b	12c88 <PyFloat_FromString@plt+0xc138>
   12b74:	ldr	w0, [sp, #28]
   12b78:	cmp	w0, #0x5
   12b7c:	b.eq	12c38 <PyFloat_FromString@plt+0xc0e8>  // b.none
   12b80:	ldr	w0, [sp, #28]
   12b84:	cmp	w0, #0x5
   12b88:	b.gt	12c80 <PyFloat_FromString@plt+0xc130>
   12b8c:	ldr	w0, [sp, #28]
   12b90:	cmp	w0, #0x4
   12b94:	b.eq	12c68 <PyFloat_FromString@plt+0xc118>  // b.none
   12b98:	ldr	w0, [sp, #28]
   12b9c:	cmp	w0, #0x4
   12ba0:	b.gt	12c80 <PyFloat_FromString@plt+0xc130>
   12ba4:	ldr	w0, [sp, #28]
   12ba8:	cmp	w0, #0x3
   12bac:	b.eq	12c08 <PyFloat_FromString@plt+0xc0b8>  // b.none
   12bb0:	ldr	w0, [sp, #28]
   12bb4:	cmp	w0, #0x3
   12bb8:	b.gt	12c80 <PyFloat_FromString@plt+0xc130>
   12bbc:	ldr	w0, [sp, #28]
   12bc0:	cmp	w0, #0x2
   12bc4:	b.eq	12bf0 <PyFloat_FromString@plt+0xc0a0>  // b.none
   12bc8:	ldr	w0, [sp, #28]
   12bcc:	cmp	w0, #0x2
   12bd0:	b.gt	12c80 <PyFloat_FromString@plt+0xc130>
   12bd4:	ldr	w0, [sp, #28]
   12bd8:	cmp	w0, #0x0
   12bdc:	b.eq	12c50 <PyFloat_FromString@plt+0xc100>  // b.none
   12be0:	ldr	w0, [sp, #28]
   12be4:	cmp	w0, #0x1
   12be8:	b.eq	12c20 <PyFloat_FromString@plt+0xc0d0>  // b.none
   12bec:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12bf0:	ldr	w0, [sp, #92]
   12bf4:	cmp	w0, #0x0
   12bf8:	cset	w0, eq  // eq = none
   12bfc:	and	w0, w0, #0xff
   12c00:	str	w0, [sp, #92]
   12c04:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12c08:	ldr	w0, [sp, #92]
   12c0c:	cmp	w0, #0x0
   12c10:	cset	w0, ne  // ne = any
   12c14:	and	w0, w0, #0xff
   12c18:	str	w0, [sp, #92]
   12c1c:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12c20:	ldr	w0, [sp, #92]
   12c24:	cmp	w0, #0x0
   12c28:	cset	w0, le
   12c2c:	and	w0, w0, #0xff
   12c30:	str	w0, [sp, #92]
   12c34:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12c38:	ldr	w0, [sp, #92]
   12c3c:	mvn	w0, w0
   12c40:	lsr	w0, w0, #31
   12c44:	and	w0, w0, #0xff
   12c48:	str	w0, [sp, #92]
   12c4c:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12c50:	ldr	w0, [sp, #92]
   12c54:	cmn	w0, #0x1
   12c58:	cset	w0, eq  // eq = none
   12c5c:	and	w0, w0, #0xff
   12c60:	str	w0, [sp, #92]
   12c64:	b	12c80 <PyFloat_FromString@plt+0xc130>
   12c68:	ldr	w0, [sp, #92]
   12c6c:	cmp	w0, #0x1
   12c70:	cset	w0, eq  // eq = none
   12c74:	and	w0, w0, #0xff
   12c78:	str	w0, [sp, #92]
   12c7c:	nop
   12c80:	ldrsw	x0, [sp, #92]
   12c84:	bl	67f0 <PyBool_FromLong@plt>
   12c88:	ldp	x29, x30, [sp], #96
   12c8c:	ret
   12c90:	stp	x29, x30, [sp, #-48]!
   12c94:	mov	x29, sp
   12c98:	str	x0, [sp, #24]
   12c9c:	str	x1, [sp, #16]
   12ca0:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12ca4:	str	x0, [sp, #40]
   12ca8:	ldr	x0, [sp, #40]
   12cac:	cmp	x0, #0x0
   12cb0:	b.ne	12cbc <PyFloat_FromString@plt+0xc16c>  // b.any
   12cb4:	mov	x0, #0x0                   	// #0
   12cb8:	b	12ce0 <PyFloat_FromString@plt+0xc190>
   12cbc:	ldr	x2, [sp, #40]
   12cc0:	mov	w1, #0x10da                	// #4314
   12cc4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12cc8:	add	x0, x0, #0x9c0
   12ccc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12cd0:	mov	w2, #0x2                   	// #2
   12cd4:	ldr	x1, [sp, #40]
   12cd8:	ldr	x0, [sp, #24]
   12cdc:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
   12ce0:	ldp	x29, x30, [sp], #48
   12ce4:	ret
   12ce8:	stp	x29, x30, [sp, #-48]!
   12cec:	mov	x29, sp
   12cf0:	str	x0, [sp, #24]
   12cf4:	str	x1, [sp, #16]
   12cf8:	ldr	x0, [sp, #24]
   12cfc:	bl	cb38 <PyFloat_FromString@plt+0x5fe8>
   12d00:	str	x0, [sp, #40]
   12d04:	ldr	x0, [sp, #40]
   12d08:	cmp	x0, #0x0
   12d0c:	b.ne	12d18 <PyFloat_FromString@plt+0xc1c8>  // b.any
   12d10:	mov	x0, #0x0                   	// #0
   12d14:	b	12d68 <PyFloat_FromString@plt+0xc218>
   12d18:	ldr	x0, [sp, #40]
   12d1c:	bl	6960 <PyFloat_AsDouble@plt>
   12d20:	str	d0, [sp, #32]
   12d24:	ldr	x2, [sp, #40]
   12d28:	mov	w1, #0x10eb                	// #4331
   12d2c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12d30:	add	x0, x0, #0x9c0
   12d34:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12d38:	ldr	d1, [sp, #32]
   12d3c:	fmov	d0, #-1.000000000000000000e+00
   12d40:	fcmp	d1, d0
   12d44:	b.ne	12d5c <PyFloat_FromString@plt+0xc20c>  // b.any
   12d48:	bl	6880 <PyErr_Occurred@plt>
   12d4c:	cmp	x0, #0x0
   12d50:	b.eq	12d5c <PyFloat_FromString@plt+0xc20c>  // b.none
   12d54:	mov	x0, #0x0                   	// #0
   12d58:	b	12d68 <PyFloat_FromString@plt+0xc218>
   12d5c:	movi	d1, #0x0
   12d60:	ldr	d0, [sp, #32]
   12d64:	bl	6ab0 <PyComplex_FromDoubles@plt>
   12d68:	ldp	x29, x30, [sp], #48
   12d6c:	ret
   12d70:	stp	x29, x30, [sp, #-32]!
   12d74:	mov	x29, sp
   12d78:	str	x0, [sp, #24]
   12d7c:	str	x1, [sp, #16]
   12d80:	ldr	x0, [sp, #24]
   12d84:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   12d88:	ldr	x0, [sp, #24]
   12d8c:	ldp	x29, x30, [sp], #32
   12d90:	ret
   12d94:	stp	x29, x30, [sp, #-48]!
   12d98:	mov	x29, sp
   12d9c:	str	x0, [sp, #24]
   12da0:	str	x1, [sp, #16]
   12da4:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12da8:	str	x0, [sp, #40]
   12dac:	ldr	x0, [sp, #40]
   12db0:	cmp	x0, #0x0
   12db4:	b.ne	12dc0 <PyFloat_FromString@plt+0xc270>  // b.any
   12db8:	mov	x0, #0x0                   	// #0
   12dbc:	b	12de4 <PyFloat_FromString@plt+0xc294>
   12dc0:	ldr	x2, [sp, #40]
   12dc4:	mov	w1, #0x1101                	// #4353
   12dc8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12dcc:	add	x0, x0, #0x9c0
   12dd0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12dd4:	mov	w2, #0x3                   	// #3
   12dd8:	ldr	x1, [sp, #40]
   12ddc:	ldr	x0, [sp, #24]
   12de0:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
   12de4:	ldp	x29, x30, [sp], #48
   12de8:	ret
   12dec:	stp	x29, x30, [sp, #-320]!
   12df0:	mov	x29, sp
   12df4:	str	x0, [sp, #24]
   12df8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   12dfc:	str	x0, [sp, #256]
   12e00:	mov	w0, #0xffffff90            	// #-112
   12e04:	strb	w0, [sp, #208]
   12e08:	str	xzr, [sp, #216]
   12e0c:	mov	x0, #0x13                  	// #19
   12e10:	str	x0, [sp, #224]
   12e14:	mov	x0, #0x1                   	// #1
   12e18:	str	x0, [sp, #232]
   12e1c:	mov	x0, #0x1                   	// #1
   12e20:	str	x0, [sp, #240]
   12e24:	add	x0, sp, #0x100
   12e28:	str	x0, [sp, #248]
   12e2c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   12e30:	movk	x0, #0x1ccc, lsl #48
   12e34:	str	x0, [sp, #200]
   12e38:	mov	w0, #0xffffff90            	// #-112
   12e3c:	strb	w0, [sp, #152]
   12e40:	str	xzr, [sp, #160]
   12e44:	mov	x0, #0x13                  	// #19
   12e48:	str	x0, [sp, #168]
   12e4c:	mov	x0, #0x1                   	// #1
   12e50:	str	x0, [sp, #176]
   12e54:	mov	x0, #0x1                   	// #1
   12e58:	str	x0, [sp, #184]
   12e5c:	add	x0, sp, #0xc8
   12e60:	str	x0, [sp, #192]
   12e64:	mov	x0, #0xcb2f                	// #52015
   12e68:	movk	x0, #0x4, lsl #16
   12e6c:	str	x0, [sp, #296]
   12e70:	str	xzr, [sp, #288]
   12e74:	mov	x0, #0xa                   	// #10
   12e78:	str	x0, [sp, #144]
   12e7c:	mov	w0, #0xffffff90            	// #-112
   12e80:	strb	w0, [sp, #96]
   12e84:	str	xzr, [sp, #104]
   12e88:	mov	x0, #0x2                   	// #2
   12e8c:	str	x0, [sp, #112]
   12e90:	mov	x0, #0x1                   	// #1
   12e94:	str	x0, [sp, #120]
   12e98:	mov	x0, #0x1                   	// #1
   12e9c:	str	x0, [sp, #128]
   12ea0:	add	x0, sp, #0x90
   12ea4:	str	x0, [sp, #136]
   12ea8:	str	xzr, [sp, #280]
   12eac:	str	xzr, [sp, #304]
   12eb0:	str	wzr, [sp, #92]
   12eb4:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   12eb8:	str	x0, [sp, #272]
   12ebc:	ldr	x0, [sp, #272]
   12ec0:	cmp	x0, #0x0
   12ec4:	b.ne	12ed0 <PyFloat_FromString@plt+0xc380>  // b.any
   12ec8:	mov	x0, #0xffffffffffffffff    	// #-1
   12ecc:	b	131fc <PyFloat_FromString@plt+0xc6ac>
   12ed0:	ldr	x2, [sp, #272]
   12ed4:	mov	w1, #0x112e                	// #4398
   12ed8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   12edc:	add	x0, x0, #0x9c0
   12ee0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   12ee4:	ldr	x0, [sp, #24]
   12ee8:	add	x0, x0, #0x18
   12eec:	bl	25438 <PyInit__decimal@@Base+0xd760>
   12ef0:	cmp	w0, #0x0
   12ef4:	b.eq	12f68 <PyFloat_FromString@plt+0xc418>  // b.none
   12ef8:	ldr	x0, [sp, #24]
   12efc:	add	x0, x0, #0x18
   12f00:	bl	2541c <PyInit__decimal@@Base+0xd744>
   12f04:	cmp	w0, #0x0
   12f08:	b.eq	12f30 <PyFloat_FromString@plt+0xc3e0>  // b.none
   12f0c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   12f10:	ldr	x0, [x0, #3936]
   12f14:	ldr	x2, [x0]
   12f18:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   12f1c:	add	x1, x0, #0x340
   12f20:	mov	x0, x2
   12f24:	bl	66f0 <PyErr_SetString@plt>
   12f28:	mov	x0, #0xffffffffffffffff    	// #-1
   12f2c:	b	131fc <PyFloat_FromString@plt+0xc6ac>
   12f30:	ldr	x0, [sp, #24]
   12f34:	add	x0, x0, #0x18
   12f38:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
   12f3c:	cmp	w0, #0x0
   12f40:	b.eq	12f4c <PyFloat_FromString@plt+0xc3fc>  // b.none
   12f44:	ldr	x0, [sp, #288]
   12f48:	b	131fc <PyFloat_FromString@plt+0xc6ac>
   12f4c:	ldr	x0, [sp, #24]
   12f50:	add	x0, x0, #0x18
   12f54:	bl	256d0 <PyInit__decimal@@Base+0xd9f8>
   12f58:	sxtw	x1, w0
   12f5c:	ldr	x0, [sp, #296]
   12f60:	mul	x0, x1, x0
   12f64:	b	131fc <PyFloat_FromString@plt+0xc6ac>
   12f68:	add	x0, sp, #0x28
   12f6c:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   12f70:	bl	23730 <PyInit__decimal@@Base+0xba58>
   12f74:	str	x0, [sp, #280]
   12f78:	ldr	x0, [sp, #280]
   12f7c:	cmp	x0, #0x0
   12f80:	b.eq	131d0 <PyFloat_FromString@plt+0xc680>  // b.none
   12f84:	bl	23730 <PyInit__decimal@@Base+0xba58>
   12f88:	str	x0, [sp, #304]
   12f8c:	ldr	x0, [sp, #304]
   12f90:	cmp	x0, #0x0
   12f94:	b.eq	131d8 <PyFloat_FromString@plt+0xc688>  // b.none
   12f98:	ldr	x0, [sp, #24]
   12f9c:	ldr	x0, [x0, #32]
   12fa0:	str	x0, [sp, #264]
   12fa4:	ldr	x0, [sp, #264]
   12fa8:	cmp	x0, #0x0
   12fac:	b.lt	12ffc <PyFloat_FromString@plt+0xc4ac>  // b.tstop
   12fb0:	add	x1, sp, #0x5c
   12fb4:	add	x0, sp, #0x28
   12fb8:	mov	x3, x1
   12fbc:	mov	x2, x0
   12fc0:	ldr	x1, [sp, #264]
   12fc4:	ldr	x0, [sp, #304]
   12fc8:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   12fcc:	add	x3, sp, #0x5c
   12fd0:	add	x2, sp, #0x28
   12fd4:	add	x1, sp, #0xd0
   12fd8:	add	x0, sp, #0x60
   12fdc:	mov	x5, x3
   12fe0:	mov	x4, x2
   12fe4:	mov	x3, x1
   12fe8:	ldr	x2, [sp, #304]
   12fec:	mov	x1, x0
   12ff0:	ldr	x0, [sp, #280]
   12ff4:	bl	3927c <PyInit__decimal@@Base+0x215a4>
   12ff8:	b	1304c <PyFloat_FromString@plt+0xc4fc>
   12ffc:	ldr	x0, [sp, #264]
   13000:	neg	x0, x0
   13004:	add	x2, sp, #0x5c
   13008:	add	x1, sp, #0x28
   1300c:	mov	x3, x2
   13010:	mov	x2, x1
   13014:	mov	x1, x0
   13018:	ldr	x0, [sp, #304]
   1301c:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   13020:	add	x3, sp, #0x5c
   13024:	add	x2, sp, #0x28
   13028:	add	x1, sp, #0xd0
   1302c:	add	x0, sp, #0x98
   13030:	mov	x5, x3
   13034:	mov	x4, x2
   13038:	mov	x3, x1
   1303c:	ldr	x2, [sp, #304]
   13040:	mov	x1, x0
   13044:	ldr	x0, [sp, #280]
   13048:	bl	3927c <PyInit__decimal@@Base+0x215a4>
   1304c:	ldr	x0, [sp, #24]
   13050:	add	x0, x0, #0x18
   13054:	add	x1, sp, #0x5c
   13058:	mov	x2, x1
   1305c:	mov	x1, x0
   13060:	ldr	x0, [sp, #304]
   13064:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   13068:	cmp	w0, #0x0
   1306c:	b.eq	131e0 <PyFloat_FromString@plt+0xc690>  // b.none
   13070:	ldr	x0, [sp, #304]
   13074:	str	xzr, [x0, #8]
   13078:	ldr	x0, [sp, #304]
   1307c:	bl	261d4 <PyInit__decimal@@Base+0xe4fc>
   13080:	mov	x0, #0x14                  	// #20
   13084:	movk	x0, #0xa764, lsl #16
   13088:	movk	x0, #0xb6b3, lsl #32
   1308c:	movk	x0, #0xde0, lsl #48
   13090:	str	x0, [sp, #40]
   13094:	mov	x0, #0x14                  	// #20
   13098:	movk	x0, #0xa764, lsl #16
   1309c:	movk	x0, #0xb6b3, lsl #32
   130a0:	movk	x0, #0xde0, lsl #48
   130a4:	str	x0, [sp, #48]
   130a8:	mov	x0, #0xffec                	// #65516
   130ac:	movk	x0, #0x589b, lsl #16
   130b0:	movk	x0, #0x494c, lsl #32
   130b4:	movk	x0, #0xf21f, lsl #48
   130b8:	str	x0, [sp, #56]
   130bc:	add	x1, sp, #0x5c
   130c0:	add	x0, sp, #0x28
   130c4:	mov	x4, x1
   130c8:	mov	x3, x0
   130cc:	ldr	x2, [sp, #280]
   130d0:	ldr	x1, [sp, #304]
   130d4:	ldr	x0, [sp, #304]
   130d8:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   130dc:	add	x2, sp, #0x5c
   130e0:	add	x1, sp, #0x28
   130e4:	add	x0, sp, #0xd0
   130e8:	mov	x4, x2
   130ec:	mov	x3, x1
   130f0:	mov	x2, x0
   130f4:	ldr	x1, [sp, #304]
   130f8:	ldr	x0, [sp, #304]
   130fc:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   13100:	add	x0, sp, #0x5c
   13104:	mov	x1, x0
   13108:	ldr	x0, [sp, #304]
   1310c:	bl	2833c <PyInit__decimal@@Base+0x10664>
   13110:	str	x0, [sp, #312]
   13114:	ldr	x0, [sp, #24]
   13118:	add	x0, x0, #0x18
   1311c:	bl	253bc <PyInit__decimal@@Base+0xd6e4>
   13120:	cmp	w0, #0x0
   13124:	b.ne	13134 <PyFloat_FromString@plt+0xc5e4>  // b.any
   13128:	ldr	x0, [sp, #312]
   1312c:	neg	x0, x0
   13130:	b	13138 <PyFloat_FromString@plt+0xc5e8>
   13134:	ldr	x0, [sp, #312]
   13138:	str	x0, [sp, #312]
   1313c:	ldr	x0, [sp, #312]
   13140:	cmn	x0, #0x1
   13144:	b.eq	13150 <PyFloat_FromString@plt+0xc600>  // b.none
   13148:	ldr	x0, [sp, #312]
   1314c:	b	13154 <PyFloat_FromString@plt+0xc604>
   13150:	mov	x0, #0xfffffffffffffffe    	// #-2
   13154:	str	x0, [sp, #312]
   13158:	ldr	w0, [sp, #92]
   1315c:	cmp	w0, #0x0
   13160:	b.eq	1319c <PyFloat_FromString@plt+0xc64c>  // b.none
   13164:	ldr	w0, [sp, #92]
   13168:	and	w0, w0, #0x200
   1316c:	cmp	w0, #0x0
   13170:	b.ne	131e8 <PyFloat_FromString@plt+0xc698>  // b.any
   13174:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   13178:	ldr	x0, [x0, #3920]
   1317c:	ldr	x2, [x0]
   13180:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   13184:	add	x1, x0, #0x368
   13188:	mov	x0, x2
   1318c:	bl	66f0 <PyErr_SetString@plt>
   13190:	mov	x0, #0xffffffffffffffff    	// #-1
   13194:	str	x0, [sp, #312]
   13198:	b	131a0 <PyFloat_FromString@plt+0xc650>
   1319c:	nop
   131a0:	ldr	x0, [sp, #280]
   131a4:	cmp	x0, #0x0
   131a8:	b.eq	131b4 <PyFloat_FromString@plt+0xc664>  // b.none
   131ac:	ldr	x0, [sp, #280]
   131b0:	bl	25820 <PyInit__decimal@@Base+0xdb48>
   131b4:	ldr	x0, [sp, #304]
   131b8:	cmp	x0, #0x0
   131bc:	b.eq	131c8 <PyFloat_FromString@plt+0xc678>  // b.none
   131c0:	ldr	x0, [sp, #304]
   131c4:	bl	25820 <PyInit__decimal@@Base+0xdb48>
   131c8:	ldr	x0, [sp, #312]
   131cc:	b	131fc <PyFloat_FromString@plt+0xc6ac>
   131d0:	nop
   131d4:	b	131ec <PyFloat_FromString@plt+0xc69c>
   131d8:	nop
   131dc:	b	131ec <PyFloat_FromString@plt+0xc69c>
   131e0:	nop
   131e4:	b	131ec <PyFloat_FromString@plt+0xc69c>
   131e8:	nop
   131ec:	bl	6690 <PyErr_NoMemory@plt>
   131f0:	mov	x0, #0xffffffffffffffff    	// #-1
   131f4:	str	x0, [sp, #312]
   131f8:	b	131a0 <PyFloat_FromString@plt+0xc650>
   131fc:	ldp	x29, x30, [sp], #320
   13200:	ret
   13204:	stp	x29, x30, [sp, #-32]!
   13208:	mov	x29, sp
   1320c:	str	x0, [sp, #24]
   13210:	ldr	x0, [sp, #24]
   13214:	ldr	x0, [x0, #16]
   13218:	cmn	x0, #0x1
   1321c:	b.ne	13234 <PyFloat_FromString@plt+0xc6e4>  // b.any
   13220:	ldr	x0, [sp, #24]
   13224:	bl	12dec <PyFloat_FromString@plt+0xc29c>
   13228:	mov	x1, x0
   1322c:	ldr	x0, [sp, #24]
   13230:	str	x1, [x0, #16]
   13234:	ldr	x0, [sp, #24]
   13238:	ldr	x0, [x0, #16]
   1323c:	ldp	x29, x30, [sp], #32
   13240:	ret
   13244:	stp	x29, x30, [sp, #-48]!
   13248:	mov	x29, sp
   1324c:	str	x0, [sp, #24]
   13250:	str	x1, [sp, #16]
   13254:	ldr	x0, [sp, #24]
   13258:	bl	b954 <PyFloat_FromString@plt+0x4e04>
   1325c:	str	x0, [sp, #40]
   13260:	ldr	x0, [sp, #40]
   13264:	cmp	x0, #0x0
   13268:	b.ne	13274 <PyFloat_FromString@plt+0xc724>  // b.any
   1326c:	mov	x0, #0x0                   	// #0
   13270:	b	132ac <PyFloat_FromString@plt+0xc75c>
   13274:	ldr	x0, [sp, #24]
   13278:	ldr	x0, [x0, #8]
   1327c:	ldr	x2, [sp, #40]
   13280:	mov	x1, x0
   13284:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   13288:	add	x0, x0, #0x390
   1328c:	bl	6870 <Py_BuildValue@plt>
   13290:	str	x0, [sp, #32]
   13294:	ldr	x2, [sp, #40]
   13298:	mov	w1, #0x1197                	// #4503
   1329c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   132a0:	add	x0, x0, #0x9c0
   132a4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   132a8:	ldr	x0, [sp, #32]
   132ac:	ldp	x29, x30, [sp], #48
   132b0:	ret
   132b4:	stp	x29, x30, [sp, #-48]!
   132b8:	mov	x29, sp
   132bc:	str	x0, [sp, #24]
   132c0:	str	x1, [sp, #16]
   132c4:	ldr	x0, [sp, #24]
   132c8:	ldr	x0, [x0, #8]
   132cc:	ldr	x0, [x0, #32]
   132d0:	str	x0, [sp, #40]
   132d4:	ldr	x0, [sp, #24]
   132d8:	add	x0, x0, #0x18
   132dc:	bl	25750 <PyInit__decimal@@Base+0xda78>
   132e0:	cmp	w0, #0x0
   132e4:	b.eq	13300 <PyFloat_FromString@plt+0xc7b0>  // b.none
   132e8:	ldr	x0, [sp, #24]
   132ec:	ldr	x0, [x0, #56]
   132f0:	lsl	x1, x0, #3
   132f4:	ldr	x0, [sp, #40]
   132f8:	add	x0, x1, x0
   132fc:	str	x0, [sp, #40]
   13300:	ldr	x0, [sp, #40]
   13304:	bl	6740 <PyLong_FromSsize_t@plt>
   13308:	ldp	x29, x30, [sp], #48
   1330c:	ret
   13310:	stp	x29, x30, [sp, #-48]!
   13314:	mov	x29, sp
   13318:	str	x0, [sp, #24]
   1331c:	str	x1, [sp, #16]
   13320:	bl	8cbc <PyFloat_FromString@plt+0x216c>
   13324:	str	x0, [sp, #40]
   13328:	ldr	x0, [sp, #40]
   1332c:	cmp	x0, #0x0
   13330:	b.ne	1333c <PyFloat_FromString@plt+0xc7ec>  // b.any
   13334:	mov	x0, #0x0                   	// #0
   13338:	b	13360 <PyFloat_FromString@plt+0xc810>
   1333c:	ldr	x2, [sp, #40]
   13340:	mov	w1, #0x11af                	// #4527
   13344:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13348:	add	x0, x0, #0x9c0
   1334c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13350:	mov	w2, #0x1                   	// #1
   13354:	ldr	x1, [sp, #40]
   13358:	ldr	x0, [sp, #24]
   1335c:	bl	c0c8 <PyFloat_FromString@plt+0x5578>
   13360:	ldp	x29, x30, [sp], #48
   13364:	ret
   13368:	stp	x29, x30, [sp, #-32]!
   1336c:	mov	x29, sp
   13370:	str	x0, [sp, #24]
   13374:	str	x1, [sp, #16]
   13378:	ldr	x0, [sp, #24]
   1337c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   13380:	ldr	x0, [sp, #24]
   13384:	ldp	x29, x30, [sp], #32
   13388:	ret
   1338c:	stp	x29, x30, [sp, #-48]!
   13390:	mov	x29, sp
   13394:	str	x0, [sp, #24]
   13398:	str	x1, [sp, #16]
   1339c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   133a0:	add	x0, x0, #0x360
   133a4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   133a8:	str	x0, [sp, #40]
   133ac:	ldr	x0, [sp, #40]
   133b0:	cmp	x0, #0x0
   133b4:	b.ne	133c0 <PyFloat_FromString@plt+0xc870>  // b.any
   133b8:	mov	x0, #0x0                   	// #0
   133bc:	b	133d8 <PyFloat_FromString@plt+0xc888>
   133c0:	mov	x3, #0x0                   	// #0
   133c4:	mov	w2, #0x0                   	// #0
   133c8:	mov	w1, #0x0                   	// #0
   133cc:	ldr	x0, [sp, #40]
   133d0:	bl	97fc <PyFloat_FromString@plt+0x2cac>
   133d4:	ldr	x0, [sp, #40]
   133d8:	ldp	x29, x30, [sp], #48
   133dc:	ret
   133e0:	stp	x29, x30, [sp, #-64]!
   133e4:	mov	x29, sp
   133e8:	str	x0, [sp, #24]
   133ec:	str	x1, [sp, #16]
   133f0:	str	wzr, [sp, #44]
   133f4:	add	x0, sp, #0x30
   133f8:	ldr	x3, [sp, #24]
   133fc:	ldr	x2, [sp, #16]
   13400:	mov	x1, x0
   13404:	mov	w0, #0x1                   	// #1
   13408:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1340c:	cmp	w0, #0x0
   13410:	b.ne	1341c <PyFloat_FromString@plt+0xc8cc>  // b.any
   13414:	mov	x0, #0x0                   	// #0
   13418:	b	134d4 <PyFloat_FromString@plt+0xc984>
   1341c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13420:	add	x0, x0, #0x360
   13424:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13428:	str	x0, [sp, #56]
   1342c:	ldr	x0, [sp, #56]
   13430:	cmp	x0, #0x0
   13434:	b.ne	13458 <PyFloat_FromString@plt+0xc908>  // b.any
   13438:	ldr	x0, [sp, #48]
   1343c:	mov	x2, x0
   13440:	mov	w1, #0x1324                	// #4900
   13444:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13448:	add	x0, x0, #0x9c0
   1344c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13450:	mov	x0, #0x0                   	// #0
   13454:	b	134d4 <PyFloat_FromString@plt+0xc984>
   13458:	ldr	x0, [sp, #56]
   1345c:	add	x4, x0, #0x18
   13460:	ldr	x0, [sp, #48]
   13464:	add	x1, x0, #0x18
   13468:	ldr	x0, [sp, #24]
   1346c:	add	x0, x0, #0x10
   13470:	add	x2, sp, #0x2c
   13474:	mov	x3, x2
   13478:	mov	x2, x0
   1347c:	mov	x0, x4
   13480:	bl	2e9f0 <PyInit__decimal@@Base+0x16d18>
   13484:	ldr	x0, [sp, #48]
   13488:	mov	x2, x0
   1348c:	mov	w1, #0x1324                	// #4900
   13490:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13494:	add	x0, x0, #0x9c0
   13498:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1349c:	ldr	w0, [sp, #44]
   134a0:	mov	w1, w0
   134a4:	ldr	x0, [sp, #24]
   134a8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   134ac:	cmp	w0, #0x0
   134b0:	b.eq	134d0 <PyFloat_FromString@plt+0xc980>  // b.none
   134b4:	ldr	x2, [sp, #56]
   134b8:	mov	w1, #0x1324                	// #4900
   134bc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   134c0:	add	x0, x0, #0x9c0
   134c4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   134c8:	mov	x0, #0x0                   	// #0
   134cc:	b	134d4 <PyFloat_FromString@plt+0xc984>
   134d0:	ldr	x0, [sp, #56]
   134d4:	ldp	x29, x30, [sp], #64
   134d8:	ret
   134dc:	stp	x29, x30, [sp, #-64]!
   134e0:	mov	x29, sp
   134e4:	str	x0, [sp, #24]
   134e8:	str	x1, [sp, #16]
   134ec:	str	wzr, [sp, #44]
   134f0:	add	x0, sp, #0x30
   134f4:	ldr	x3, [sp, #24]
   134f8:	ldr	x2, [sp, #16]
   134fc:	mov	x1, x0
   13500:	mov	w0, #0x1                   	// #1
   13504:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13508:	cmp	w0, #0x0
   1350c:	b.ne	13518 <PyFloat_FromString@plt+0xc9c8>  // b.any
   13510:	mov	x0, #0x0                   	// #0
   13514:	b	135d0 <PyFloat_FromString@plt+0xca80>
   13518:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1351c:	add	x0, x0, #0x360
   13520:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13524:	str	x0, [sp, #56]
   13528:	ldr	x0, [sp, #56]
   1352c:	cmp	x0, #0x0
   13530:	b.ne	13554 <PyFloat_FromString@plt+0xca04>  // b.any
   13534:	ldr	x0, [sp, #48]
   13538:	mov	x2, x0
   1353c:	mov	w1, #0x1325                	// #4901
   13540:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13544:	add	x0, x0, #0x9c0
   13548:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1354c:	mov	x0, #0x0                   	// #0
   13550:	b	135d0 <PyFloat_FromString@plt+0xca80>
   13554:	ldr	x0, [sp, #56]
   13558:	add	x4, x0, #0x18
   1355c:	ldr	x0, [sp, #48]
   13560:	add	x1, x0, #0x18
   13564:	ldr	x0, [sp, #24]
   13568:	add	x0, x0, #0x10
   1356c:	add	x2, sp, #0x2c
   13570:	mov	x3, x2
   13574:	mov	x2, x0
   13578:	mov	x0, x4
   1357c:	bl	327f8 <PyInit__decimal@@Base+0x1ab20>
   13580:	ldr	x0, [sp, #48]
   13584:	mov	x2, x0
   13588:	mov	w1, #0x1325                	// #4901
   1358c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13590:	add	x0, x0, #0x9c0
   13594:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13598:	ldr	w0, [sp, #44]
   1359c:	mov	w1, w0
   135a0:	ldr	x0, [sp, #24]
   135a4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   135a8:	cmp	w0, #0x0
   135ac:	b.eq	135cc <PyFloat_FromString@plt+0xca7c>  // b.none
   135b0:	ldr	x2, [sp, #56]
   135b4:	mov	w1, #0x1325                	// #4901
   135b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   135bc:	add	x0, x0, #0x9c0
   135c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   135c4:	mov	x0, #0x0                   	// #0
   135c8:	b	135d0 <PyFloat_FromString@plt+0xca80>
   135cc:	ldr	x0, [sp, #56]
   135d0:	ldp	x29, x30, [sp], #64
   135d4:	ret
   135d8:	stp	x29, x30, [sp, #-64]!
   135dc:	mov	x29, sp
   135e0:	str	x0, [sp, #24]
   135e4:	str	x1, [sp, #16]
   135e8:	str	wzr, [sp, #44]
   135ec:	add	x0, sp, #0x30
   135f0:	ldr	x3, [sp, #24]
   135f4:	ldr	x2, [sp, #16]
   135f8:	mov	x1, x0
   135fc:	mov	w0, #0x1                   	// #1
   13600:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13604:	cmp	w0, #0x0
   13608:	b.ne	13614 <PyFloat_FromString@plt+0xcac4>  // b.any
   1360c:	mov	x0, #0x0                   	// #0
   13610:	b	136cc <PyFloat_FromString@plt+0xcb7c>
   13614:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13618:	add	x0, x0, #0x360
   1361c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13620:	str	x0, [sp, #56]
   13624:	ldr	x0, [sp, #56]
   13628:	cmp	x0, #0x0
   1362c:	b.ne	13650 <PyFloat_FromString@plt+0xcb00>  // b.any
   13630:	ldr	x0, [sp, #48]
   13634:	mov	x2, x0
   13638:	mov	w1, #0x1326                	// #4902
   1363c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13640:	add	x0, x0, #0x9c0
   13644:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13648:	mov	x0, #0x0                   	// #0
   1364c:	b	136cc <PyFloat_FromString@plt+0xcb7c>
   13650:	ldr	x0, [sp, #56]
   13654:	add	x4, x0, #0x18
   13658:	ldr	x0, [sp, #48]
   1365c:	add	x1, x0, #0x18
   13660:	ldr	x0, [sp, #24]
   13664:	add	x0, x0, #0x10
   13668:	add	x2, sp, #0x2c
   1366c:	mov	x3, x2
   13670:	mov	x2, x0
   13674:	mov	x0, x4
   13678:	bl	33b74 <PyInit__decimal@@Base+0x1be9c>
   1367c:	ldr	x0, [sp, #48]
   13680:	mov	x2, x0
   13684:	mov	w1, #0x1326                	// #4902
   13688:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1368c:	add	x0, x0, #0x9c0
   13690:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13694:	ldr	w0, [sp, #44]
   13698:	mov	w1, w0
   1369c:	ldr	x0, [sp, #24]
   136a0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   136a4:	cmp	w0, #0x0
   136a8:	b.eq	136c8 <PyFloat_FromString@plt+0xcb78>  // b.none
   136ac:	ldr	x2, [sp, #56]
   136b0:	mov	w1, #0x1326                	// #4902
   136b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   136b8:	add	x0, x0, #0x9c0
   136bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   136c0:	mov	x0, #0x0                   	// #0
   136c4:	b	136cc <PyFloat_FromString@plt+0xcb7c>
   136c8:	ldr	x0, [sp, #56]
   136cc:	ldp	x29, x30, [sp], #64
   136d0:	ret
   136d4:	stp	x29, x30, [sp, #-64]!
   136d8:	mov	x29, sp
   136dc:	str	x0, [sp, #24]
   136e0:	str	x1, [sp, #16]
   136e4:	str	wzr, [sp, #44]
   136e8:	add	x0, sp, #0x30
   136ec:	ldr	x3, [sp, #24]
   136f0:	ldr	x2, [sp, #16]
   136f4:	mov	x1, x0
   136f8:	mov	w0, #0x1                   	// #1
   136fc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13700:	cmp	w0, #0x0
   13704:	b.ne	13710 <PyFloat_FromString@plt+0xcbc0>  // b.any
   13708:	mov	x0, #0x0                   	// #0
   1370c:	b	137c8 <PyFloat_FromString@plt+0xcc78>
   13710:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13714:	add	x0, x0, #0x360
   13718:	bl	912c <PyFloat_FromString@plt+0x25dc>
   1371c:	str	x0, [sp, #56]
   13720:	ldr	x0, [sp, #56]
   13724:	cmp	x0, #0x0
   13728:	b.ne	1374c <PyFloat_FromString@plt+0xcbfc>  // b.any
   1372c:	ldr	x0, [sp, #48]
   13730:	mov	x2, x0
   13734:	mov	w1, #0x1327                	// #4903
   13738:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1373c:	add	x0, x0, #0x9c0
   13740:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13744:	mov	x0, #0x0                   	// #0
   13748:	b	137c8 <PyFloat_FromString@plt+0xcc78>
   1374c:	ldr	x0, [sp, #56]
   13750:	add	x4, x0, #0x18
   13754:	ldr	x0, [sp, #48]
   13758:	add	x1, x0, #0x18
   1375c:	ldr	x0, [sp, #24]
   13760:	add	x0, x0, #0x10
   13764:	add	x2, sp, #0x2c
   13768:	mov	x3, x2
   1376c:	mov	x2, x0
   13770:	mov	x0, x4
   13774:	bl	343ec <PyInit__decimal@@Base+0x1c714>
   13778:	ldr	x0, [sp, #48]
   1377c:	mov	x2, x0
   13780:	mov	w1, #0x1327                	// #4903
   13784:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13788:	add	x0, x0, #0x9c0
   1378c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13790:	ldr	w0, [sp, #44]
   13794:	mov	w1, w0
   13798:	ldr	x0, [sp, #24]
   1379c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   137a0:	cmp	w0, #0x0
   137a4:	b.eq	137c4 <PyFloat_FromString@plt+0xcc74>  // b.none
   137a8:	ldr	x2, [sp, #56]
   137ac:	mov	w1, #0x1327                	// #4903
   137b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   137b4:	add	x0, x0, #0x9c0
   137b8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   137bc:	mov	x0, #0x0                   	// #0
   137c0:	b	137c8 <PyFloat_FromString@plt+0xcc78>
   137c4:	ldr	x0, [sp, #56]
   137c8:	ldp	x29, x30, [sp], #64
   137cc:	ret
   137d0:	stp	x29, x30, [sp, #-64]!
   137d4:	mov	x29, sp
   137d8:	str	x0, [sp, #24]
   137dc:	str	x1, [sp, #16]
   137e0:	str	wzr, [sp, #44]
   137e4:	add	x0, sp, #0x30
   137e8:	ldr	x3, [sp, #24]
   137ec:	ldr	x2, [sp, #16]
   137f0:	mov	x1, x0
   137f4:	mov	w0, #0x1                   	// #1
   137f8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   137fc:	cmp	w0, #0x0
   13800:	b.ne	1380c <PyFloat_FromString@plt+0xccbc>  // b.any
   13804:	mov	x0, #0x0                   	// #0
   13808:	b	138c4 <PyFloat_FromString@plt+0xcd74>
   1380c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13810:	add	x0, x0, #0x360
   13814:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13818:	str	x0, [sp, #56]
   1381c:	ldr	x0, [sp, #56]
   13820:	cmp	x0, #0x0
   13824:	b.ne	13848 <PyFloat_FromString@plt+0xccf8>  // b.any
   13828:	ldr	x0, [sp, #48]
   1382c:	mov	x2, x0
   13830:	mov	w1, #0x1328                	// #4904
   13834:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13838:	add	x0, x0, #0x9c0
   1383c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13840:	mov	x0, #0x0                   	// #0
   13844:	b	138c4 <PyFloat_FromString@plt+0xcd74>
   13848:	ldr	x0, [sp, #56]
   1384c:	add	x4, x0, #0x18
   13850:	ldr	x0, [sp, #48]
   13854:	add	x1, x0, #0x18
   13858:	ldr	x0, [sp, #24]
   1385c:	add	x0, x0, #0x10
   13860:	add	x2, sp, #0x2c
   13864:	mov	x3, x2
   13868:	mov	x2, x0
   1386c:	mov	x0, x4
   13870:	bl	371dc <PyInit__decimal@@Base+0x1f504>
   13874:	ldr	x0, [sp, #48]
   13878:	mov	x2, x0
   1387c:	mov	w1, #0x1328                	// #4904
   13880:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13884:	add	x0, x0, #0x9c0
   13888:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1388c:	ldr	w0, [sp, #44]
   13890:	mov	w1, w0
   13894:	ldr	x0, [sp, #24]
   13898:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1389c:	cmp	w0, #0x0
   138a0:	b.eq	138c0 <PyFloat_FromString@plt+0xcd70>  // b.none
   138a4:	ldr	x2, [sp, #56]
   138a8:	mov	w1, #0x1328                	// #4904
   138ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   138b0:	add	x0, x0, #0x9c0
   138b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   138b8:	mov	x0, #0x0                   	// #0
   138bc:	b	138c4 <PyFloat_FromString@plt+0xcd74>
   138c0:	ldr	x0, [sp, #56]
   138c4:	ldp	x29, x30, [sp], #64
   138c8:	ret
   138cc:	stp	x29, x30, [sp, #-64]!
   138d0:	mov	x29, sp
   138d4:	str	x0, [sp, #24]
   138d8:	str	x1, [sp, #16]
   138dc:	str	wzr, [sp, #44]
   138e0:	add	x0, sp, #0x30
   138e4:	ldr	x3, [sp, #24]
   138e8:	ldr	x2, [sp, #16]
   138ec:	mov	x1, x0
   138f0:	mov	w0, #0x1                   	// #1
   138f4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   138f8:	cmp	w0, #0x0
   138fc:	b.ne	13908 <PyFloat_FromString@plt+0xcdb8>  // b.any
   13900:	mov	x0, #0x0                   	// #0
   13904:	b	139c0 <PyFloat_FromString@plt+0xce70>
   13908:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1390c:	add	x0, x0, #0x360
   13910:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13914:	str	x0, [sp, #56]
   13918:	ldr	x0, [sp, #56]
   1391c:	cmp	x0, #0x0
   13920:	b.ne	13944 <PyFloat_FromString@plt+0xcdf4>  // b.any
   13924:	ldr	x0, [sp, #48]
   13928:	mov	x2, x0
   1392c:	mov	w1, #0x1329                	// #4905
   13930:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13934:	add	x0, x0, #0x9c0
   13938:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1393c:	mov	x0, #0x0                   	// #0
   13940:	b	139c0 <PyFloat_FromString@plt+0xce70>
   13944:	ldr	x0, [sp, #56]
   13948:	add	x4, x0, #0x18
   1394c:	ldr	x0, [sp, #48]
   13950:	add	x1, x0, #0x18
   13954:	ldr	x0, [sp, #24]
   13958:	add	x0, x0, #0x10
   1395c:	add	x2, sp, #0x2c
   13960:	mov	x3, x2
   13964:	mov	x2, x0
   13968:	mov	x0, x4
   1396c:	bl	373f4 <PyInit__decimal@@Base+0x1f71c>
   13970:	ldr	x0, [sp, #48]
   13974:	mov	x2, x0
   13978:	mov	w1, #0x1329                	// #4905
   1397c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13980:	add	x0, x0, #0x9c0
   13984:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13988:	ldr	w0, [sp, #44]
   1398c:	mov	w1, w0
   13990:	ldr	x0, [sp, #24]
   13994:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13998:	cmp	w0, #0x0
   1399c:	b.eq	139bc <PyFloat_FromString@plt+0xce6c>  // b.none
   139a0:	ldr	x2, [sp, #56]
   139a4:	mov	w1, #0x1329                	// #4905
   139a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   139ac:	add	x0, x0, #0x9c0
   139b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   139b4:	mov	x0, #0x0                   	// #0
   139b8:	b	139c0 <PyFloat_FromString@plt+0xce70>
   139bc:	ldr	x0, [sp, #56]
   139c0:	ldp	x29, x30, [sp], #64
   139c4:	ret
   139c8:	stp	x29, x30, [sp, #-64]!
   139cc:	mov	x29, sp
   139d0:	str	x0, [sp, #24]
   139d4:	str	x1, [sp, #16]
   139d8:	str	wzr, [sp, #44]
   139dc:	add	x0, sp, #0x30
   139e0:	ldr	x3, [sp, #24]
   139e4:	ldr	x2, [sp, #16]
   139e8:	mov	x1, x0
   139ec:	mov	w0, #0x1                   	// #1
   139f0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   139f4:	cmp	w0, #0x0
   139f8:	b.ne	13a04 <PyFloat_FromString@plt+0xceb4>  // b.any
   139fc:	mov	x0, #0x0                   	// #0
   13a00:	b	13abc <PyFloat_FromString@plt+0xcf6c>
   13a04:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13a08:	add	x0, x0, #0x360
   13a0c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13a10:	str	x0, [sp, #56]
   13a14:	ldr	x0, [sp, #56]
   13a18:	cmp	x0, #0x0
   13a1c:	b.ne	13a40 <PyFloat_FromString@plt+0xcef0>  // b.any
   13a20:	ldr	x0, [sp, #48]
   13a24:	mov	x2, x0
   13a28:	mov	w1, #0x132a                	// #4906
   13a2c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13a30:	add	x0, x0, #0x9c0
   13a34:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13a38:	mov	x0, #0x0                   	// #0
   13a3c:	b	13abc <PyFloat_FromString@plt+0xcf6c>
   13a40:	ldr	x0, [sp, #56]
   13a44:	add	x4, x0, #0x18
   13a48:	ldr	x0, [sp, #48]
   13a4c:	add	x1, x0, #0x18
   13a50:	ldr	x0, [sp, #24]
   13a54:	add	x0, x0, #0x10
   13a58:	add	x2, sp, #0x2c
   13a5c:	mov	x3, x2
   13a60:	mov	x2, x0
   13a64:	mov	x0, x4
   13a68:	bl	37630 <PyInit__decimal@@Base+0x1f958>
   13a6c:	ldr	x0, [sp, #48]
   13a70:	mov	x2, x0
   13a74:	mov	w1, #0x132a                	// #4906
   13a78:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13a7c:	add	x0, x0, #0x9c0
   13a80:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13a84:	ldr	w0, [sp, #44]
   13a88:	mov	w1, w0
   13a8c:	ldr	x0, [sp, #24]
   13a90:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13a94:	cmp	w0, #0x0
   13a98:	b.eq	13ab8 <PyFloat_FromString@plt+0xcf68>  // b.none
   13a9c:	ldr	x2, [sp, #56]
   13aa0:	mov	w1, #0x132a                	// #4906
   13aa4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13aa8:	add	x0, x0, #0x9c0
   13aac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13ab0:	mov	x0, #0x0                   	// #0
   13ab4:	b	13abc <PyFloat_FromString@plt+0xcf6c>
   13ab8:	ldr	x0, [sp, #56]
   13abc:	ldp	x29, x30, [sp], #64
   13ac0:	ret
   13ac4:	stp	x29, x30, [sp, #-64]!
   13ac8:	mov	x29, sp
   13acc:	str	x0, [sp, #24]
   13ad0:	str	x1, [sp, #16]
   13ad4:	str	wzr, [sp, #44]
   13ad8:	add	x0, sp, #0x30
   13adc:	ldr	x3, [sp, #24]
   13ae0:	ldr	x2, [sp, #16]
   13ae4:	mov	x1, x0
   13ae8:	mov	w0, #0x1                   	// #1
   13aec:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13af0:	cmp	w0, #0x0
   13af4:	b.ne	13b00 <PyFloat_FromString@plt+0xcfb0>  // b.any
   13af8:	mov	x0, #0x0                   	// #0
   13afc:	b	13bb8 <PyFloat_FromString@plt+0xd068>
   13b00:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13b04:	add	x0, x0, #0x360
   13b08:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13b0c:	str	x0, [sp, #56]
   13b10:	ldr	x0, [sp, #56]
   13b14:	cmp	x0, #0x0
   13b18:	b.ne	13b3c <PyFloat_FromString@plt+0xcfec>  // b.any
   13b1c:	ldr	x0, [sp, #48]
   13b20:	mov	x2, x0
   13b24:	mov	w1, #0x132b                	// #4907
   13b28:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13b2c:	add	x0, x0, #0x9c0
   13b30:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13b34:	mov	x0, #0x0                   	// #0
   13b38:	b	13bb8 <PyFloat_FromString@plt+0xd068>
   13b3c:	ldr	x0, [sp, #56]
   13b40:	add	x4, x0, #0x18
   13b44:	ldr	x0, [sp, #48]
   13b48:	add	x1, x0, #0x18
   13b4c:	ldr	x0, [sp, #24]
   13b50:	add	x0, x0, #0x10
   13b54:	add	x2, sp, #0x2c
   13b58:	mov	x3, x2
   13b5c:	mov	x2, x0
   13b60:	mov	x0, x4
   13b64:	bl	372e8 <PyInit__decimal@@Base+0x1f610>
   13b68:	ldr	x0, [sp, #48]
   13b6c:	mov	x2, x0
   13b70:	mov	w1, #0x132b                	// #4907
   13b74:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13b78:	add	x0, x0, #0x9c0
   13b7c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13b80:	ldr	w0, [sp, #44]
   13b84:	mov	w1, w0
   13b88:	ldr	x0, [sp, #24]
   13b8c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13b90:	cmp	w0, #0x0
   13b94:	b.eq	13bb4 <PyFloat_FromString@plt+0xd064>  // b.none
   13b98:	ldr	x2, [sp, #56]
   13b9c:	mov	w1, #0x132b                	// #4907
   13ba0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13ba4:	add	x0, x0, #0x9c0
   13ba8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13bac:	mov	x0, #0x0                   	// #0
   13bb0:	b	13bb8 <PyFloat_FromString@plt+0xd068>
   13bb4:	ldr	x0, [sp, #56]
   13bb8:	ldp	x29, x30, [sp], #64
   13bbc:	ret
   13bc0:	stp	x29, x30, [sp, #-64]!
   13bc4:	mov	x29, sp
   13bc8:	str	x0, [sp, #24]
   13bcc:	str	x1, [sp, #16]
   13bd0:	str	wzr, [sp, #44]
   13bd4:	add	x0, sp, #0x30
   13bd8:	ldr	x3, [sp, #24]
   13bdc:	ldr	x2, [sp, #16]
   13be0:	mov	x1, x0
   13be4:	mov	w0, #0x1                   	// #1
   13be8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13bec:	cmp	w0, #0x0
   13bf0:	b.ne	13bfc <PyFloat_FromString@plt+0xd0ac>  // b.any
   13bf4:	mov	x0, #0x0                   	// #0
   13bf8:	b	13cb4 <PyFloat_FromString@plt+0xd164>
   13bfc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13c00:	add	x0, x0, #0x360
   13c04:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13c08:	str	x0, [sp, #56]
   13c0c:	ldr	x0, [sp, #56]
   13c10:	cmp	x0, #0x0
   13c14:	b.ne	13c38 <PyFloat_FromString@plt+0xd0e8>  // b.any
   13c18:	ldr	x0, [sp, #48]
   13c1c:	mov	x2, x0
   13c20:	mov	w1, #0x132c                	// #4908
   13c24:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13c28:	add	x0, x0, #0x9c0
   13c2c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13c30:	mov	x0, #0x0                   	// #0
   13c34:	b	13cb4 <PyFloat_FromString@plt+0xd164>
   13c38:	ldr	x0, [sp, #56]
   13c3c:	add	x4, x0, #0x18
   13c40:	ldr	x0, [sp, #48]
   13c44:	add	x1, x0, #0x18
   13c48:	ldr	x0, [sp, #24]
   13c4c:	add	x0, x0, #0x10
   13c50:	add	x2, sp, #0x2c
   13c54:	mov	x3, x2
   13c58:	mov	x2, x0
   13c5c:	mov	x0, x4
   13c60:	bl	3a110 <PyInit__decimal@@Base+0x22438>
   13c64:	ldr	x0, [sp, #48]
   13c68:	mov	x2, x0
   13c6c:	mov	w1, #0x132c                	// #4908
   13c70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13c74:	add	x0, x0, #0x9c0
   13c78:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13c7c:	ldr	w0, [sp, #44]
   13c80:	mov	w1, w0
   13c84:	ldr	x0, [sp, #24]
   13c88:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13c8c:	cmp	w0, #0x0
   13c90:	b.eq	13cb0 <PyFloat_FromString@plt+0xd160>  // b.none
   13c94:	ldr	x2, [sp, #56]
   13c98:	mov	w1, #0x132c                	// #4908
   13c9c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13ca0:	add	x0, x0, #0x9c0
   13ca4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13ca8:	mov	x0, #0x0                   	// #0
   13cac:	b	13cb4 <PyFloat_FromString@plt+0xd164>
   13cb0:	ldr	x0, [sp, #56]
   13cb4:	ldp	x29, x30, [sp], #64
   13cb8:	ret
   13cbc:	stp	x29, x30, [sp, #-64]!
   13cc0:	mov	x29, sp
   13cc4:	str	x0, [sp, #24]
   13cc8:	str	x1, [sp, #16]
   13ccc:	str	wzr, [sp, #44]
   13cd0:	add	x0, sp, #0x30
   13cd4:	ldr	x3, [sp, #24]
   13cd8:	ldr	x2, [sp, #16]
   13cdc:	mov	x1, x0
   13ce0:	mov	w0, #0x1                   	// #1
   13ce4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13ce8:	cmp	w0, #0x0
   13cec:	b.ne	13cf8 <PyFloat_FromString@plt+0xd1a8>  // b.any
   13cf0:	mov	x0, #0x0                   	// #0
   13cf4:	b	13db0 <PyFloat_FromString@plt+0xd260>
   13cf8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13cfc:	add	x0, x0, #0x360
   13d00:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13d04:	str	x0, [sp, #56]
   13d08:	ldr	x0, [sp, #56]
   13d0c:	cmp	x0, #0x0
   13d10:	b.ne	13d34 <PyFloat_FromString@plt+0xd1e4>  // b.any
   13d14:	ldr	x0, [sp, #48]
   13d18:	mov	x2, x0
   13d1c:	mov	w1, #0x132d                	// #4909
   13d20:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13d24:	add	x0, x0, #0x9c0
   13d28:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13d2c:	mov	x0, #0x0                   	// #0
   13d30:	b	13db0 <PyFloat_FromString@plt+0xd260>
   13d34:	ldr	x0, [sp, #56]
   13d38:	add	x4, x0, #0x18
   13d3c:	ldr	x0, [sp, #48]
   13d40:	add	x1, x0, #0x18
   13d44:	ldr	x0, [sp, #24]
   13d48:	add	x0, x0, #0x10
   13d4c:	add	x2, sp, #0x2c
   13d50:	mov	x3, x2
   13d54:	mov	x2, x0
   13d58:	mov	x0, x4
   13d5c:	bl	3b094 <PyInit__decimal@@Base+0x233bc>
   13d60:	ldr	x0, [sp, #48]
   13d64:	mov	x2, x0
   13d68:	mov	w1, #0x132d                	// #4909
   13d6c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13d70:	add	x0, x0, #0x9c0
   13d74:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13d78:	ldr	w0, [sp, #44]
   13d7c:	mov	w1, w0
   13d80:	ldr	x0, [sp, #24]
   13d84:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13d88:	cmp	w0, #0x0
   13d8c:	b.eq	13dac <PyFloat_FromString@plt+0xd25c>  // b.none
   13d90:	ldr	x2, [sp, #56]
   13d94:	mov	w1, #0x132d                	// #4909
   13d98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13d9c:	add	x0, x0, #0x9c0
   13da0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13da4:	mov	x0, #0x0                   	// #0
   13da8:	b	13db0 <PyFloat_FromString@plt+0xd260>
   13dac:	ldr	x0, [sp, #56]
   13db0:	ldp	x29, x30, [sp], #64
   13db4:	ret
   13db8:	stp	x29, x30, [sp, #-64]!
   13dbc:	mov	x29, sp
   13dc0:	str	x0, [sp, #24]
   13dc4:	str	x1, [sp, #16]
   13dc8:	str	wzr, [sp, #44]
   13dcc:	add	x0, sp, #0x30
   13dd0:	ldr	x3, [sp, #24]
   13dd4:	ldr	x2, [sp, #16]
   13dd8:	mov	x1, x0
   13ddc:	mov	w0, #0x1                   	// #1
   13de0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13de4:	cmp	w0, #0x0
   13de8:	b.ne	13df4 <PyFloat_FromString@plt+0xd2a4>  // b.any
   13dec:	mov	x0, #0x0                   	// #0
   13df0:	b	13eac <PyFloat_FromString@plt+0xd35c>
   13df4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13df8:	add	x0, x0, #0x360
   13dfc:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13e00:	str	x0, [sp, #56]
   13e04:	ldr	x0, [sp, #56]
   13e08:	cmp	x0, #0x0
   13e0c:	b.ne	13e30 <PyFloat_FromString@plt+0xd2e0>  // b.any
   13e10:	ldr	x0, [sp, #48]
   13e14:	mov	x2, x0
   13e18:	mov	w1, #0x132e                	// #4910
   13e1c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13e20:	add	x0, x0, #0x9c0
   13e24:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13e28:	mov	x0, #0x0                   	// #0
   13e2c:	b	13eac <PyFloat_FromString@plt+0xd35c>
   13e30:	ldr	x0, [sp, #56]
   13e34:	add	x4, x0, #0x18
   13e38:	ldr	x0, [sp, #48]
   13e3c:	add	x1, x0, #0x18
   13e40:	ldr	x0, [sp, #24]
   13e44:	add	x0, x0, #0x10
   13e48:	add	x2, sp, #0x2c
   13e4c:	mov	x3, x2
   13e50:	mov	x2, x0
   13e54:	mov	x0, x4
   13e58:	bl	3b058 <PyInit__decimal@@Base+0x23380>
   13e5c:	ldr	x0, [sp, #48]
   13e60:	mov	x2, x0
   13e64:	mov	w1, #0x132e                	// #4910
   13e68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13e6c:	add	x0, x0, #0x9c0
   13e70:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13e74:	ldr	w0, [sp, #44]
   13e78:	mov	w1, w0
   13e7c:	ldr	x0, [sp, #24]
   13e80:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13e84:	cmp	w0, #0x0
   13e88:	b.eq	13ea8 <PyFloat_FromString@plt+0xd358>  // b.none
   13e8c:	ldr	x2, [sp, #56]
   13e90:	mov	w1, #0x132e                	// #4910
   13e94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13e98:	add	x0, x0, #0x9c0
   13e9c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13ea0:	mov	x0, #0x0                   	// #0
   13ea4:	b	13eac <PyFloat_FromString@plt+0xd35c>
   13ea8:	ldr	x0, [sp, #56]
   13eac:	ldp	x29, x30, [sp], #64
   13eb0:	ret
   13eb4:	stp	x29, x30, [sp, #-64]!
   13eb8:	mov	x29, sp
   13ebc:	str	x0, [sp, #24]
   13ec0:	str	x1, [sp, #16]
   13ec4:	str	wzr, [sp, #44]
   13ec8:	add	x0, sp, #0x30
   13ecc:	ldr	x3, [sp, #24]
   13ed0:	ldr	x2, [sp, #16]
   13ed4:	mov	x1, x0
   13ed8:	mov	w0, #0x1                   	// #1
   13edc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   13ee0:	cmp	w0, #0x0
   13ee4:	b.ne	13ef0 <PyFloat_FromString@plt+0xd3a0>  // b.any
   13ee8:	mov	x0, #0x0                   	// #0
   13eec:	b	13fa8 <PyFloat_FromString@plt+0xd458>
   13ef0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   13ef4:	add	x0, x0, #0x360
   13ef8:	bl	912c <PyFloat_FromString@plt+0x25dc>
   13efc:	str	x0, [sp, #56]
   13f00:	ldr	x0, [sp, #56]
   13f04:	cmp	x0, #0x0
   13f08:	b.ne	13f2c <PyFloat_FromString@plt+0xd3dc>  // b.any
   13f0c:	ldr	x0, [sp, #48]
   13f10:	mov	x2, x0
   13f14:	mov	w1, #0x132f                	// #4911
   13f18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13f1c:	add	x0, x0, #0x9c0
   13f20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13f24:	mov	x0, #0x0                   	// #0
   13f28:	b	13fa8 <PyFloat_FromString@plt+0xd458>
   13f2c:	ldr	x0, [sp, #56]
   13f30:	add	x4, x0, #0x18
   13f34:	ldr	x0, [sp, #48]
   13f38:	add	x1, x0, #0x18
   13f3c:	ldr	x0, [sp, #24]
   13f40:	add	x0, x0, #0x10
   13f44:	add	x2, sp, #0x2c
   13f48:	mov	x3, x2
   13f4c:	mov	x2, x0
   13f50:	mov	x0, x4
   13f54:	bl	3cef8 <PyInit__decimal@@Base+0x25220>
   13f58:	ldr	x0, [sp, #48]
   13f5c:	mov	x2, x0
   13f60:	mov	w1, #0x132f                	// #4911
   13f64:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13f68:	add	x0, x0, #0x9c0
   13f6c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13f70:	ldr	w0, [sp, #44]
   13f74:	mov	w1, w0
   13f78:	ldr	x0, [sp, #24]
   13f7c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   13f80:	cmp	w0, #0x0
   13f84:	b.eq	13fa4 <PyFloat_FromString@plt+0xd454>  // b.none
   13f88:	ldr	x2, [sp, #56]
   13f8c:	mov	w1, #0x132f                	// #4911
   13f90:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   13f94:	add	x0, x0, #0x9c0
   13f98:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   13f9c:	mov	x0, #0x0                   	// #0
   13fa0:	b	13fa8 <PyFloat_FromString@plt+0xd458>
   13fa4:	ldr	x0, [sp, #56]
   13fa8:	ldp	x29, x30, [sp], #64
   13fac:	ret
   13fb0:	stp	x29, x30, [sp, #-80]!
   13fb4:	mov	x29, sp
   13fb8:	str	x0, [sp, #24]
   13fbc:	str	x1, [sp, #16]
   13fc0:	str	wzr, [sp, #36]
   13fc4:	add	x1, sp, #0x38
   13fc8:	add	x0, sp, #0x40
   13fcc:	mov	x3, x1
   13fd0:	mov	x2, x0
   13fd4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   13fd8:	add	x1, x0, #0x720
   13fdc:	ldr	x0, [sp, #16]
   13fe0:	bl	6980 <PyArg_ParseTuple@plt>
   13fe4:	cmp	w0, #0x0
   13fe8:	b.ne	13ff4 <PyFloat_FromString@plt+0xd4a4>  // b.any
   13fec:	mov	x0, #0x0                   	// #0
   13ff0:	b	14154 <PyFloat_FromString@plt+0xd604>
   13ff4:	ldr	x1, [sp, #64]
   13ff8:	add	x0, sp, #0x30
   13ffc:	ldr	x3, [sp, #24]
   14000:	mov	x2, x1
   14004:	mov	x1, x0
   14008:	mov	w0, #0x1                   	// #1
   1400c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14010:	cmp	w0, #0x0
   14014:	b.ne	14020 <PyFloat_FromString@plt+0xd4d0>  // b.any
   14018:	mov	x0, #0x0                   	// #0
   1401c:	b	14154 <PyFloat_FromString@plt+0xd604>
   14020:	ldr	x1, [sp, #56]
   14024:	add	x0, sp, #0x28
   14028:	ldr	x3, [sp, #24]
   1402c:	mov	x2, x1
   14030:	mov	x1, x0
   14034:	mov	w0, #0x1                   	// #1
   14038:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1403c:	cmp	w0, #0x0
   14040:	b.ne	14064 <PyFloat_FromString@plt+0xd514>  // b.any
   14044:	ldr	x0, [sp, #48]
   14048:	mov	x2, x0
   1404c:	mov	w1, #0x1332                	// #4914
   14050:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14054:	add	x0, x0, #0x9c0
   14058:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1405c:	mov	x0, #0x0                   	// #0
   14060:	b	14154 <PyFloat_FromString@plt+0xd604>
   14064:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14068:	add	x0, x0, #0x360
   1406c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14070:	str	x0, [sp, #72]
   14074:	ldr	x0, [sp, #72]
   14078:	cmp	x0, #0x0
   1407c:	b.ne	140b8 <PyFloat_FromString@plt+0xd568>  // b.any
   14080:	ldr	x0, [sp, #48]
   14084:	mov	x2, x0
   14088:	mov	w1, #0x1332                	// #4914
   1408c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14090:	add	x0, x0, #0x9c0
   14094:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14098:	ldr	x0, [sp, #40]
   1409c:	mov	x2, x0
   140a0:	mov	w1, #0x1332                	// #4914
   140a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   140a8:	add	x0, x0, #0x9c0
   140ac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   140b0:	mov	x0, #0x0                   	// #0
   140b4:	b	14154 <PyFloat_FromString@plt+0xd604>
   140b8:	ldr	x0, [sp, #72]
   140bc:	add	x5, x0, #0x18
   140c0:	ldr	x0, [sp, #48]
   140c4:	add	x1, x0, #0x18
   140c8:	ldr	x0, [sp, #40]
   140cc:	add	x2, x0, #0x18
   140d0:	ldr	x0, [sp, #24]
   140d4:	add	x0, x0, #0x10
   140d8:	add	x3, sp, #0x24
   140dc:	mov	x4, x3
   140e0:	mov	x3, x0
   140e4:	mov	x0, x5
   140e8:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   140ec:	ldr	x0, [sp, #48]
   140f0:	mov	x2, x0
   140f4:	mov	w1, #0x1332                	// #4914
   140f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   140fc:	add	x0, x0, #0x9c0
   14100:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14104:	ldr	x0, [sp, #40]
   14108:	mov	x2, x0
   1410c:	mov	w1, #0x1332                	// #4914
   14110:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14114:	add	x0, x0, #0x9c0
   14118:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1411c:	ldr	w0, [sp, #36]
   14120:	mov	w1, w0
   14124:	ldr	x0, [sp, #24]
   14128:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1412c:	cmp	w0, #0x0
   14130:	b.eq	14150 <PyFloat_FromString@plt+0xd600>  // b.none
   14134:	ldr	x2, [sp, #72]
   14138:	mov	w1, #0x1332                	// #4914
   1413c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14140:	add	x0, x0, #0x9c0
   14144:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14148:	mov	x0, #0x0                   	// #0
   1414c:	b	14154 <PyFloat_FromString@plt+0xd604>
   14150:	ldr	x0, [sp, #72]
   14154:	ldp	x29, x30, [sp], #80
   14158:	ret
   1415c:	stp	x29, x30, [sp, #-80]!
   14160:	mov	x29, sp
   14164:	str	x0, [sp, #24]
   14168:	str	x1, [sp, #16]
   1416c:	str	wzr, [sp, #36]
   14170:	add	x1, sp, #0x38
   14174:	add	x0, sp, #0x40
   14178:	mov	x3, x1
   1417c:	mov	x2, x0
   14180:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14184:	add	x1, x0, #0x720
   14188:	ldr	x0, [sp, #16]
   1418c:	bl	6980 <PyArg_ParseTuple@plt>
   14190:	cmp	w0, #0x0
   14194:	b.ne	141a0 <PyFloat_FromString@plt+0xd650>  // b.any
   14198:	mov	x0, #0x0                   	// #0
   1419c:	b	14300 <PyFloat_FromString@plt+0xd7b0>
   141a0:	ldr	x1, [sp, #64]
   141a4:	add	x0, sp, #0x30
   141a8:	ldr	x3, [sp, #24]
   141ac:	mov	x2, x1
   141b0:	mov	x1, x0
   141b4:	mov	w0, #0x1                   	// #1
   141b8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   141bc:	cmp	w0, #0x0
   141c0:	b.ne	141cc <PyFloat_FromString@plt+0xd67c>  // b.any
   141c4:	mov	x0, #0x0                   	// #0
   141c8:	b	14300 <PyFloat_FromString@plt+0xd7b0>
   141cc:	ldr	x1, [sp, #56]
   141d0:	add	x0, sp, #0x28
   141d4:	ldr	x3, [sp, #24]
   141d8:	mov	x2, x1
   141dc:	mov	x1, x0
   141e0:	mov	w0, #0x1                   	// #1
   141e4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   141e8:	cmp	w0, #0x0
   141ec:	b.ne	14210 <PyFloat_FromString@plt+0xd6c0>  // b.any
   141f0:	ldr	x0, [sp, #48]
   141f4:	mov	x2, x0
   141f8:	mov	w1, #0x1333                	// #4915
   141fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14200:	add	x0, x0, #0x9c0
   14204:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14208:	mov	x0, #0x0                   	// #0
   1420c:	b	14300 <PyFloat_FromString@plt+0xd7b0>
   14210:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14214:	add	x0, x0, #0x360
   14218:	bl	912c <PyFloat_FromString@plt+0x25dc>
   1421c:	str	x0, [sp, #72]
   14220:	ldr	x0, [sp, #72]
   14224:	cmp	x0, #0x0
   14228:	b.ne	14264 <PyFloat_FromString@plt+0xd714>  // b.any
   1422c:	ldr	x0, [sp, #48]
   14230:	mov	x2, x0
   14234:	mov	w1, #0x1333                	// #4915
   14238:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1423c:	add	x0, x0, #0x9c0
   14240:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14244:	ldr	x0, [sp, #40]
   14248:	mov	x2, x0
   1424c:	mov	w1, #0x1333                	// #4915
   14250:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14254:	add	x0, x0, #0x9c0
   14258:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1425c:	mov	x0, #0x0                   	// #0
   14260:	b	14300 <PyFloat_FromString@plt+0xd7b0>
   14264:	ldr	x0, [sp, #72]
   14268:	add	x5, x0, #0x18
   1426c:	ldr	x0, [sp, #48]
   14270:	add	x1, x0, #0x18
   14274:	ldr	x0, [sp, #40]
   14278:	add	x2, x0, #0x18
   1427c:	ldr	x0, [sp, #24]
   14280:	add	x0, x0, #0x10
   14284:	add	x3, sp, #0x24
   14288:	mov	x4, x3
   1428c:	mov	x3, x0
   14290:	mov	x0, x5
   14294:	bl	2a838 <PyInit__decimal@@Base+0x12b60>
   14298:	ldr	x0, [sp, #48]
   1429c:	mov	x2, x0
   142a0:	mov	w1, #0x1333                	// #4915
   142a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   142a8:	add	x0, x0, #0x9c0
   142ac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   142b0:	ldr	x0, [sp, #40]
   142b4:	mov	x2, x0
   142b8:	mov	w1, #0x1333                	// #4915
   142bc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   142c0:	add	x0, x0, #0x9c0
   142c4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   142c8:	ldr	w0, [sp, #36]
   142cc:	mov	w1, w0
   142d0:	ldr	x0, [sp, #24]
   142d4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   142d8:	cmp	w0, #0x0
   142dc:	b.eq	142fc <PyFloat_FromString@plt+0xd7ac>  // b.none
   142e0:	ldr	x2, [sp, #72]
   142e4:	mov	w1, #0x1333                	// #4915
   142e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   142ec:	add	x0, x0, #0x9c0
   142f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   142f4:	mov	x0, #0x0                   	// #0
   142f8:	b	14300 <PyFloat_FromString@plt+0xd7b0>
   142fc:	ldr	x0, [sp, #72]
   14300:	ldp	x29, x30, [sp], #80
   14304:	ret
   14308:	stp	x29, x30, [sp, #-80]!
   1430c:	mov	x29, sp
   14310:	str	x0, [sp, #24]
   14314:	str	x1, [sp, #16]
   14318:	str	wzr, [sp, #36]
   1431c:	add	x1, sp, #0x38
   14320:	add	x0, sp, #0x40
   14324:	mov	x3, x1
   14328:	mov	x2, x0
   1432c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14330:	add	x1, x0, #0x720
   14334:	ldr	x0, [sp, #16]
   14338:	bl	6980 <PyArg_ParseTuple@plt>
   1433c:	cmp	w0, #0x0
   14340:	b.ne	1434c <PyFloat_FromString@plt+0xd7fc>  // b.any
   14344:	mov	x0, #0x0                   	// #0
   14348:	b	144ac <PyFloat_FromString@plt+0xd95c>
   1434c:	ldr	x1, [sp, #64]
   14350:	add	x0, sp, #0x30
   14354:	ldr	x3, [sp, #24]
   14358:	mov	x2, x1
   1435c:	mov	x1, x0
   14360:	mov	w0, #0x1                   	// #1
   14364:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14368:	cmp	w0, #0x0
   1436c:	b.ne	14378 <PyFloat_FromString@plt+0xd828>  // b.any
   14370:	mov	x0, #0x0                   	// #0
   14374:	b	144ac <PyFloat_FromString@plt+0xd95c>
   14378:	ldr	x1, [sp, #56]
   1437c:	add	x0, sp, #0x28
   14380:	ldr	x3, [sp, #24]
   14384:	mov	x2, x1
   14388:	mov	x1, x0
   1438c:	mov	w0, #0x1                   	// #1
   14390:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14394:	cmp	w0, #0x0
   14398:	b.ne	143bc <PyFloat_FromString@plt+0xd86c>  // b.any
   1439c:	ldr	x0, [sp, #48]
   143a0:	mov	x2, x0
   143a4:	mov	w1, #0x1334                	// #4916
   143a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   143ac:	add	x0, x0, #0x9c0
   143b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   143b4:	mov	x0, #0x0                   	// #0
   143b8:	b	144ac <PyFloat_FromString@plt+0xd95c>
   143bc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   143c0:	add	x0, x0, #0x360
   143c4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   143c8:	str	x0, [sp, #72]
   143cc:	ldr	x0, [sp, #72]
   143d0:	cmp	x0, #0x0
   143d4:	b.ne	14410 <PyFloat_FromString@plt+0xd8c0>  // b.any
   143d8:	ldr	x0, [sp, #48]
   143dc:	mov	x2, x0
   143e0:	mov	w1, #0x1334                	// #4916
   143e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   143e8:	add	x0, x0, #0x9c0
   143ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   143f0:	ldr	x0, [sp, #40]
   143f4:	mov	x2, x0
   143f8:	mov	w1, #0x1334                	// #4916
   143fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14400:	add	x0, x0, #0x9c0
   14404:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14408:	mov	x0, #0x0                   	// #0
   1440c:	b	144ac <PyFloat_FromString@plt+0xd95c>
   14410:	ldr	x0, [sp, #72]
   14414:	add	x5, x0, #0x18
   14418:	ldr	x0, [sp, #48]
   1441c:	add	x1, x0, #0x18
   14420:	ldr	x0, [sp, #40]
   14424:	add	x2, x0, #0x18
   14428:	ldr	x0, [sp, #24]
   1442c:	add	x0, x0, #0x10
   14430:	add	x3, sp, #0x24
   14434:	mov	x4, x3
   14438:	mov	x3, x0
   1443c:	mov	x0, x5
   14440:	bl	2a904 <PyInit__decimal@@Base+0x12c2c>
   14444:	ldr	x0, [sp, #48]
   14448:	mov	x2, x0
   1444c:	mov	w1, #0x1334                	// #4916
   14450:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14454:	add	x0, x0, #0x9c0
   14458:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1445c:	ldr	x0, [sp, #40]
   14460:	mov	x2, x0
   14464:	mov	w1, #0x1334                	// #4916
   14468:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1446c:	add	x0, x0, #0x9c0
   14470:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14474:	ldr	w0, [sp, #36]
   14478:	mov	w1, w0
   1447c:	ldr	x0, [sp, #24]
   14480:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14484:	cmp	w0, #0x0
   14488:	b.eq	144a8 <PyFloat_FromString@plt+0xd958>  // b.none
   1448c:	ldr	x2, [sp, #72]
   14490:	mov	w1, #0x1334                	// #4916
   14494:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14498:	add	x0, x0, #0x9c0
   1449c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   144a0:	mov	x0, #0x0                   	// #0
   144a4:	b	144ac <PyFloat_FromString@plt+0xd95c>
   144a8:	ldr	x0, [sp, #72]
   144ac:	ldp	x29, x30, [sp], #80
   144b0:	ret
   144b4:	stp	x29, x30, [sp, #-80]!
   144b8:	mov	x29, sp
   144bc:	str	x0, [sp, #24]
   144c0:	str	x1, [sp, #16]
   144c4:	str	wzr, [sp, #36]
   144c8:	add	x1, sp, #0x38
   144cc:	add	x0, sp, #0x40
   144d0:	mov	x3, x1
   144d4:	mov	x2, x0
   144d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   144dc:	add	x1, x0, #0x720
   144e0:	ldr	x0, [sp, #16]
   144e4:	bl	6980 <PyArg_ParseTuple@plt>
   144e8:	cmp	w0, #0x0
   144ec:	b.ne	144f8 <PyFloat_FromString@plt+0xd9a8>  // b.any
   144f0:	mov	x0, #0x0                   	// #0
   144f4:	b	14658 <PyFloat_FromString@plt+0xdb08>
   144f8:	ldr	x1, [sp, #64]
   144fc:	add	x0, sp, #0x30
   14500:	ldr	x3, [sp, #24]
   14504:	mov	x2, x1
   14508:	mov	x1, x0
   1450c:	mov	w0, #0x1                   	// #1
   14510:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14514:	cmp	w0, #0x0
   14518:	b.ne	14524 <PyFloat_FromString@plt+0xd9d4>  // b.any
   1451c:	mov	x0, #0x0                   	// #0
   14520:	b	14658 <PyFloat_FromString@plt+0xdb08>
   14524:	ldr	x1, [sp, #56]
   14528:	add	x0, sp, #0x28
   1452c:	ldr	x3, [sp, #24]
   14530:	mov	x2, x1
   14534:	mov	x1, x0
   14538:	mov	w0, #0x1                   	// #1
   1453c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14540:	cmp	w0, #0x0
   14544:	b.ne	14568 <PyFloat_FromString@plt+0xda18>  // b.any
   14548:	ldr	x0, [sp, #48]
   1454c:	mov	x2, x0
   14550:	mov	w1, #0x1335                	// #4917
   14554:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14558:	add	x0, x0, #0x9c0
   1455c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14560:	mov	x0, #0x0                   	// #0
   14564:	b	14658 <PyFloat_FromString@plt+0xdb08>
   14568:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1456c:	add	x0, x0, #0x360
   14570:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14574:	str	x0, [sp, #72]
   14578:	ldr	x0, [sp, #72]
   1457c:	cmp	x0, #0x0
   14580:	b.ne	145bc <PyFloat_FromString@plt+0xda6c>  // b.any
   14584:	ldr	x0, [sp, #48]
   14588:	mov	x2, x0
   1458c:	mov	w1, #0x1335                	// #4917
   14590:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14594:	add	x0, x0, #0x9c0
   14598:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1459c:	ldr	x0, [sp, #40]
   145a0:	mov	x2, x0
   145a4:	mov	w1, #0x1335                	// #4917
   145a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   145ac:	add	x0, x0, #0x9c0
   145b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   145b4:	mov	x0, #0x0                   	// #0
   145b8:	b	14658 <PyFloat_FromString@plt+0xdb08>
   145bc:	ldr	x0, [sp, #72]
   145c0:	add	x5, x0, #0x18
   145c4:	ldr	x0, [sp, #48]
   145c8:	add	x1, x0, #0x18
   145cc:	ldr	x0, [sp, #40]
   145d0:	add	x2, x0, #0x18
   145d4:	ldr	x0, [sp, #24]
   145d8:	add	x0, x0, #0x10
   145dc:	add	x3, sp, #0x24
   145e0:	mov	x4, x3
   145e4:	mov	x3, x0
   145e8:	mov	x0, x5
   145ec:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
   145f0:	ldr	x0, [sp, #48]
   145f4:	mov	x2, x0
   145f8:	mov	w1, #0x1335                	// #4917
   145fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14600:	add	x0, x0, #0x9c0
   14604:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14608:	ldr	x0, [sp, #40]
   1460c:	mov	x2, x0
   14610:	mov	w1, #0x1335                	// #4917
   14614:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14618:	add	x0, x0, #0x9c0
   1461c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14620:	ldr	w0, [sp, #36]
   14624:	mov	w1, w0
   14628:	ldr	x0, [sp, #24]
   1462c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14630:	cmp	w0, #0x0
   14634:	b.eq	14654 <PyFloat_FromString@plt+0xdb04>  // b.none
   14638:	ldr	x2, [sp, #72]
   1463c:	mov	w1, #0x1335                	// #4917
   14640:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14644:	add	x0, x0, #0x9c0
   14648:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1464c:	mov	x0, #0x0                   	// #0
   14650:	b	14658 <PyFloat_FromString@plt+0xdb08>
   14654:	ldr	x0, [sp, #72]
   14658:	ldp	x29, x30, [sp], #80
   1465c:	ret
   14660:	stp	x29, x30, [sp, #-80]!
   14664:	mov	x29, sp
   14668:	str	x0, [sp, #24]
   1466c:	str	x1, [sp, #16]
   14670:	str	wzr, [sp, #36]
   14674:	add	x1, sp, #0x38
   14678:	add	x0, sp, #0x40
   1467c:	mov	x3, x1
   14680:	mov	x2, x0
   14684:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14688:	add	x1, x0, #0x720
   1468c:	ldr	x0, [sp, #16]
   14690:	bl	6980 <PyArg_ParseTuple@plt>
   14694:	cmp	w0, #0x0
   14698:	b.ne	146a4 <PyFloat_FromString@plt+0xdb54>  // b.any
   1469c:	mov	x0, #0x0                   	// #0
   146a0:	b	14804 <PyFloat_FromString@plt+0xdcb4>
   146a4:	ldr	x1, [sp, #64]
   146a8:	add	x0, sp, #0x30
   146ac:	ldr	x3, [sp, #24]
   146b0:	mov	x2, x1
   146b4:	mov	x1, x0
   146b8:	mov	w0, #0x1                   	// #1
   146bc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   146c0:	cmp	w0, #0x0
   146c4:	b.ne	146d0 <PyFloat_FromString@plt+0xdb80>  // b.any
   146c8:	mov	x0, #0x0                   	// #0
   146cc:	b	14804 <PyFloat_FromString@plt+0xdcb4>
   146d0:	ldr	x1, [sp, #56]
   146d4:	add	x0, sp, #0x28
   146d8:	ldr	x3, [sp, #24]
   146dc:	mov	x2, x1
   146e0:	mov	x1, x0
   146e4:	mov	w0, #0x1                   	// #1
   146e8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   146ec:	cmp	w0, #0x0
   146f0:	b.ne	14714 <PyFloat_FromString@plt+0xdbc4>  // b.any
   146f4:	ldr	x0, [sp, #48]
   146f8:	mov	x2, x0
   146fc:	mov	w1, #0x1336                	// #4918
   14700:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14704:	add	x0, x0, #0x9c0
   14708:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1470c:	mov	x0, #0x0                   	// #0
   14710:	b	14804 <PyFloat_FromString@plt+0xdcb4>
   14714:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14718:	add	x0, x0, #0x360
   1471c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14720:	str	x0, [sp, #72]
   14724:	ldr	x0, [sp, #72]
   14728:	cmp	x0, #0x0
   1472c:	b.ne	14768 <PyFloat_FromString@plt+0xdc18>  // b.any
   14730:	ldr	x0, [sp, #48]
   14734:	mov	x2, x0
   14738:	mov	w1, #0x1336                	// #4918
   1473c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14740:	add	x0, x0, #0x9c0
   14744:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14748:	ldr	x0, [sp, #40]
   1474c:	mov	x2, x0
   14750:	mov	w1, #0x1336                	// #4918
   14754:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14758:	add	x0, x0, #0x9c0
   1475c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14760:	mov	x0, #0x0                   	// #0
   14764:	b	14804 <PyFloat_FromString@plt+0xdcb4>
   14768:	ldr	x0, [sp, #72]
   1476c:	add	x5, x0, #0x18
   14770:	ldr	x0, [sp, #48]
   14774:	add	x1, x0, #0x18
   14778:	ldr	x0, [sp, #40]
   1477c:	add	x2, x0, #0x18
   14780:	ldr	x0, [sp, #24]
   14784:	add	x0, x0, #0x10
   14788:	add	x3, sp, #0x24
   1478c:	mov	x4, x3
   14790:	mov	x3, x0
   14794:	mov	x0, x5
   14798:	bl	31784 <PyInit__decimal@@Base+0x19aac>
   1479c:	ldr	x0, [sp, #48]
   147a0:	mov	x2, x0
   147a4:	mov	w1, #0x1336                	// #4918
   147a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   147ac:	add	x0, x0, #0x9c0
   147b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   147b4:	ldr	x0, [sp, #40]
   147b8:	mov	x2, x0
   147bc:	mov	w1, #0x1336                	// #4918
   147c0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   147c4:	add	x0, x0, #0x9c0
   147c8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   147cc:	ldr	w0, [sp, #36]
   147d0:	mov	w1, w0
   147d4:	ldr	x0, [sp, #24]
   147d8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   147dc:	cmp	w0, #0x0
   147e0:	b.eq	14800 <PyFloat_FromString@plt+0xdcb0>  // b.none
   147e4:	ldr	x2, [sp, #72]
   147e8:	mov	w1, #0x1336                	// #4918
   147ec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   147f0:	add	x0, x0, #0x9c0
   147f4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   147f8:	mov	x0, #0x0                   	// #0
   147fc:	b	14804 <PyFloat_FromString@plt+0xdcb4>
   14800:	ldr	x0, [sp, #72]
   14804:	ldp	x29, x30, [sp], #80
   14808:	ret
   1480c:	stp	x29, x30, [sp, #-80]!
   14810:	mov	x29, sp
   14814:	str	x0, [sp, #24]
   14818:	str	x1, [sp, #16]
   1481c:	str	wzr, [sp, #36]
   14820:	add	x1, sp, #0x38
   14824:	add	x0, sp, #0x40
   14828:	mov	x3, x1
   1482c:	mov	x2, x0
   14830:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14834:	add	x1, x0, #0x720
   14838:	ldr	x0, [sp, #16]
   1483c:	bl	6980 <PyArg_ParseTuple@plt>
   14840:	cmp	w0, #0x0
   14844:	b.ne	14850 <PyFloat_FromString@plt+0xdd00>  // b.any
   14848:	mov	x0, #0x0                   	// #0
   1484c:	b	149b0 <PyFloat_FromString@plt+0xde60>
   14850:	ldr	x1, [sp, #64]
   14854:	add	x0, sp, #0x30
   14858:	ldr	x3, [sp, #24]
   1485c:	mov	x2, x1
   14860:	mov	x1, x0
   14864:	mov	w0, #0x1                   	// #1
   14868:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1486c:	cmp	w0, #0x0
   14870:	b.ne	1487c <PyFloat_FromString@plt+0xdd2c>  // b.any
   14874:	mov	x0, #0x0                   	// #0
   14878:	b	149b0 <PyFloat_FromString@plt+0xde60>
   1487c:	ldr	x1, [sp, #56]
   14880:	add	x0, sp, #0x28
   14884:	ldr	x3, [sp, #24]
   14888:	mov	x2, x1
   1488c:	mov	x1, x0
   14890:	mov	w0, #0x1                   	// #1
   14894:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14898:	cmp	w0, #0x0
   1489c:	b.ne	148c0 <PyFloat_FromString@plt+0xdd70>  // b.any
   148a0:	ldr	x0, [sp, #48]
   148a4:	mov	x2, x0
   148a8:	mov	w1, #0x1337                	// #4919
   148ac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   148b0:	add	x0, x0, #0x9c0
   148b4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   148b8:	mov	x0, #0x0                   	// #0
   148bc:	b	149b0 <PyFloat_FromString@plt+0xde60>
   148c0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   148c4:	add	x0, x0, #0x360
   148c8:	bl	912c <PyFloat_FromString@plt+0x25dc>
   148cc:	str	x0, [sp, #72]
   148d0:	ldr	x0, [sp, #72]
   148d4:	cmp	x0, #0x0
   148d8:	b.ne	14914 <PyFloat_FromString@plt+0xddc4>  // b.any
   148dc:	ldr	x0, [sp, #48]
   148e0:	mov	x2, x0
   148e4:	mov	w1, #0x1337                	// #4919
   148e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   148ec:	add	x0, x0, #0x9c0
   148f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   148f4:	ldr	x0, [sp, #40]
   148f8:	mov	x2, x0
   148fc:	mov	w1, #0x1337                	// #4919
   14900:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14904:	add	x0, x0, #0x9c0
   14908:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1490c:	mov	x0, #0x0                   	// #0
   14910:	b	149b0 <PyFloat_FromString@plt+0xde60>
   14914:	ldr	x0, [sp, #72]
   14918:	add	x5, x0, #0x18
   1491c:	ldr	x0, [sp, #48]
   14920:	add	x1, x0, #0x18
   14924:	ldr	x0, [sp, #40]
   14928:	add	x2, x0, #0x18
   1492c:	ldr	x0, [sp, #24]
   14930:	add	x0, x0, #0x10
   14934:	add	x3, sp, #0x24
   14938:	mov	x4, x3
   1493c:	mov	x3, x0
   14940:	mov	x0, x5
   14944:	bl	34b30 <PyInit__decimal@@Base+0x1ce58>
   14948:	ldr	x0, [sp, #48]
   1494c:	mov	x2, x0
   14950:	mov	w1, #0x1337                	// #4919
   14954:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14958:	add	x0, x0, #0x9c0
   1495c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14960:	ldr	x0, [sp, #40]
   14964:	mov	x2, x0
   14968:	mov	w1, #0x1337                	// #4919
   1496c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14970:	add	x0, x0, #0x9c0
   14974:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14978:	ldr	w0, [sp, #36]
   1497c:	mov	w1, w0
   14980:	ldr	x0, [sp, #24]
   14984:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14988:	cmp	w0, #0x0
   1498c:	b.eq	149ac <PyFloat_FromString@plt+0xde5c>  // b.none
   14990:	ldr	x2, [sp, #72]
   14994:	mov	w1, #0x1337                	// #4919
   14998:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1499c:	add	x0, x0, #0x9c0
   149a0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   149a4:	mov	x0, #0x0                   	// #0
   149a8:	b	149b0 <PyFloat_FromString@plt+0xde60>
   149ac:	ldr	x0, [sp, #72]
   149b0:	ldp	x29, x30, [sp], #80
   149b4:	ret
   149b8:	stp	x29, x30, [sp, #-80]!
   149bc:	mov	x29, sp
   149c0:	str	x0, [sp, #24]
   149c4:	str	x1, [sp, #16]
   149c8:	str	wzr, [sp, #36]
   149cc:	add	x1, sp, #0x38
   149d0:	add	x0, sp, #0x40
   149d4:	mov	x3, x1
   149d8:	mov	x2, x0
   149dc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   149e0:	add	x1, x0, #0x720
   149e4:	ldr	x0, [sp, #16]
   149e8:	bl	6980 <PyArg_ParseTuple@plt>
   149ec:	cmp	w0, #0x0
   149f0:	b.ne	149fc <PyFloat_FromString@plt+0xdeac>  // b.any
   149f4:	mov	x0, #0x0                   	// #0
   149f8:	b	14b5c <PyFloat_FromString@plt+0xe00c>
   149fc:	ldr	x1, [sp, #64]
   14a00:	add	x0, sp, #0x30
   14a04:	ldr	x3, [sp, #24]
   14a08:	mov	x2, x1
   14a0c:	mov	x1, x0
   14a10:	mov	w0, #0x1                   	// #1
   14a14:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14a18:	cmp	w0, #0x0
   14a1c:	b.ne	14a28 <PyFloat_FromString@plt+0xded8>  // b.any
   14a20:	mov	x0, #0x0                   	// #0
   14a24:	b	14b5c <PyFloat_FromString@plt+0xe00c>
   14a28:	ldr	x1, [sp, #56]
   14a2c:	add	x0, sp, #0x28
   14a30:	ldr	x3, [sp, #24]
   14a34:	mov	x2, x1
   14a38:	mov	x1, x0
   14a3c:	mov	w0, #0x1                   	// #1
   14a40:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14a44:	cmp	w0, #0x0
   14a48:	b.ne	14a6c <PyFloat_FromString@plt+0xdf1c>  // b.any
   14a4c:	ldr	x0, [sp, #48]
   14a50:	mov	x2, x0
   14a54:	mov	w1, #0x1338                	// #4920
   14a58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14a5c:	add	x0, x0, #0x9c0
   14a60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14a64:	mov	x0, #0x0                   	// #0
   14a68:	b	14b5c <PyFloat_FromString@plt+0xe00c>
   14a6c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14a70:	add	x0, x0, #0x360
   14a74:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14a78:	str	x0, [sp, #72]
   14a7c:	ldr	x0, [sp, #72]
   14a80:	cmp	x0, #0x0
   14a84:	b.ne	14ac0 <PyFloat_FromString@plt+0xdf70>  // b.any
   14a88:	ldr	x0, [sp, #48]
   14a8c:	mov	x2, x0
   14a90:	mov	w1, #0x1338                	// #4920
   14a94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14a98:	add	x0, x0, #0x9c0
   14a9c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14aa0:	ldr	x0, [sp, #40]
   14aa4:	mov	x2, x0
   14aa8:	mov	w1, #0x1338                	// #4920
   14aac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14ab0:	add	x0, x0, #0x9c0
   14ab4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14ab8:	mov	x0, #0x0                   	// #0
   14abc:	b	14b5c <PyFloat_FromString@plt+0xe00c>
   14ac0:	ldr	x0, [sp, #72]
   14ac4:	add	x5, x0, #0x18
   14ac8:	ldr	x0, [sp, #48]
   14acc:	add	x1, x0, #0x18
   14ad0:	ldr	x0, [sp, #40]
   14ad4:	add	x2, x0, #0x18
   14ad8:	ldr	x0, [sp, #24]
   14adc:	add	x0, x0, #0x10
   14ae0:	add	x3, sp, #0x24
   14ae4:	mov	x4, x3
   14ae8:	mov	x3, x0
   14aec:	mov	x0, x5
   14af0:	bl	34c80 <PyInit__decimal@@Base+0x1cfa8>
   14af4:	ldr	x0, [sp, #48]
   14af8:	mov	x2, x0
   14afc:	mov	w1, #0x1338                	// #4920
   14b00:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14b04:	add	x0, x0, #0x9c0
   14b08:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14b0c:	ldr	x0, [sp, #40]
   14b10:	mov	x2, x0
   14b14:	mov	w1, #0x1338                	// #4920
   14b18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14b1c:	add	x0, x0, #0x9c0
   14b20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14b24:	ldr	w0, [sp, #36]
   14b28:	mov	w1, w0
   14b2c:	ldr	x0, [sp, #24]
   14b30:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14b34:	cmp	w0, #0x0
   14b38:	b.eq	14b58 <PyFloat_FromString@plt+0xe008>  // b.none
   14b3c:	ldr	x2, [sp, #72]
   14b40:	mov	w1, #0x1338                	// #4920
   14b44:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14b48:	add	x0, x0, #0x9c0
   14b4c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14b50:	mov	x0, #0x0                   	// #0
   14b54:	b	14b5c <PyFloat_FromString@plt+0xe00c>
   14b58:	ldr	x0, [sp, #72]
   14b5c:	ldp	x29, x30, [sp], #80
   14b60:	ret
   14b64:	stp	x29, x30, [sp, #-80]!
   14b68:	mov	x29, sp
   14b6c:	str	x0, [sp, #24]
   14b70:	str	x1, [sp, #16]
   14b74:	str	wzr, [sp, #36]
   14b78:	add	x1, sp, #0x38
   14b7c:	add	x0, sp, #0x40
   14b80:	mov	x3, x1
   14b84:	mov	x2, x0
   14b88:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14b8c:	add	x1, x0, #0x720
   14b90:	ldr	x0, [sp, #16]
   14b94:	bl	6980 <PyArg_ParseTuple@plt>
   14b98:	cmp	w0, #0x0
   14b9c:	b.ne	14ba8 <PyFloat_FromString@plt+0xe058>  // b.any
   14ba0:	mov	x0, #0x0                   	// #0
   14ba4:	b	14d08 <PyFloat_FromString@plt+0xe1b8>
   14ba8:	ldr	x1, [sp, #64]
   14bac:	add	x0, sp, #0x30
   14bb0:	ldr	x3, [sp, #24]
   14bb4:	mov	x2, x1
   14bb8:	mov	x1, x0
   14bbc:	mov	w0, #0x1                   	// #1
   14bc0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14bc4:	cmp	w0, #0x0
   14bc8:	b.ne	14bd4 <PyFloat_FromString@plt+0xe084>  // b.any
   14bcc:	mov	x0, #0x0                   	// #0
   14bd0:	b	14d08 <PyFloat_FromString@plt+0xe1b8>
   14bd4:	ldr	x1, [sp, #56]
   14bd8:	add	x0, sp, #0x28
   14bdc:	ldr	x3, [sp, #24]
   14be0:	mov	x2, x1
   14be4:	mov	x1, x0
   14be8:	mov	w0, #0x1                   	// #1
   14bec:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14bf0:	cmp	w0, #0x0
   14bf4:	b.ne	14c18 <PyFloat_FromString@plt+0xe0c8>  // b.any
   14bf8:	ldr	x0, [sp, #48]
   14bfc:	mov	x2, x0
   14c00:	mov	w1, #0x1339                	// #4921
   14c04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14c08:	add	x0, x0, #0x9c0
   14c0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14c10:	mov	x0, #0x0                   	// #0
   14c14:	b	14d08 <PyFloat_FromString@plt+0xe1b8>
   14c18:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14c1c:	add	x0, x0, #0x360
   14c20:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14c24:	str	x0, [sp, #72]
   14c28:	ldr	x0, [sp, #72]
   14c2c:	cmp	x0, #0x0
   14c30:	b.ne	14c6c <PyFloat_FromString@plt+0xe11c>  // b.any
   14c34:	ldr	x0, [sp, #48]
   14c38:	mov	x2, x0
   14c3c:	mov	w1, #0x1339                	// #4921
   14c40:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14c44:	add	x0, x0, #0x9c0
   14c48:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14c4c:	ldr	x0, [sp, #40]
   14c50:	mov	x2, x0
   14c54:	mov	w1, #0x1339                	// #4921
   14c58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14c5c:	add	x0, x0, #0x9c0
   14c60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14c64:	mov	x0, #0x0                   	// #0
   14c68:	b	14d08 <PyFloat_FromString@plt+0xe1b8>
   14c6c:	ldr	x0, [sp, #72]
   14c70:	add	x5, x0, #0x18
   14c74:	ldr	x0, [sp, #48]
   14c78:	add	x1, x0, #0x18
   14c7c:	ldr	x0, [sp, #40]
   14c80:	add	x2, x0, #0x18
   14c84:	ldr	x0, [sp, #24]
   14c88:	add	x0, x0, #0x10
   14c8c:	add	x3, sp, #0x24
   14c90:	mov	x4, x3
   14c94:	mov	x3, x0
   14c98:	mov	x0, x5
   14c9c:	bl	34dd0 <PyInit__decimal@@Base+0x1d0f8>
   14ca0:	ldr	x0, [sp, #48]
   14ca4:	mov	x2, x0
   14ca8:	mov	w1, #0x1339                	// #4921
   14cac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14cb0:	add	x0, x0, #0x9c0
   14cb4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14cb8:	ldr	x0, [sp, #40]
   14cbc:	mov	x2, x0
   14cc0:	mov	w1, #0x1339                	// #4921
   14cc4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14cc8:	add	x0, x0, #0x9c0
   14ccc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14cd0:	ldr	w0, [sp, #36]
   14cd4:	mov	w1, w0
   14cd8:	ldr	x0, [sp, #24]
   14cdc:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14ce0:	cmp	w0, #0x0
   14ce4:	b.eq	14d04 <PyFloat_FromString@plt+0xe1b4>  // b.none
   14ce8:	ldr	x2, [sp, #72]
   14cec:	mov	w1, #0x1339                	// #4921
   14cf0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14cf4:	add	x0, x0, #0x9c0
   14cf8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14cfc:	mov	x0, #0x0                   	// #0
   14d00:	b	14d08 <PyFloat_FromString@plt+0xe1b8>
   14d04:	ldr	x0, [sp, #72]
   14d08:	ldp	x29, x30, [sp], #80
   14d0c:	ret
   14d10:	stp	x29, x30, [sp, #-80]!
   14d14:	mov	x29, sp
   14d18:	str	x0, [sp, #24]
   14d1c:	str	x1, [sp, #16]
   14d20:	str	wzr, [sp, #36]
   14d24:	add	x1, sp, #0x38
   14d28:	add	x0, sp, #0x40
   14d2c:	mov	x3, x1
   14d30:	mov	x2, x0
   14d34:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14d38:	add	x1, x0, #0x720
   14d3c:	ldr	x0, [sp, #16]
   14d40:	bl	6980 <PyArg_ParseTuple@plt>
   14d44:	cmp	w0, #0x0
   14d48:	b.ne	14d54 <PyFloat_FromString@plt+0xe204>  // b.any
   14d4c:	mov	x0, #0x0                   	// #0
   14d50:	b	14eb4 <PyFloat_FromString@plt+0xe364>
   14d54:	ldr	x1, [sp, #64]
   14d58:	add	x0, sp, #0x30
   14d5c:	ldr	x3, [sp, #24]
   14d60:	mov	x2, x1
   14d64:	mov	x1, x0
   14d68:	mov	w0, #0x1                   	// #1
   14d6c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14d70:	cmp	w0, #0x0
   14d74:	b.ne	14d80 <PyFloat_FromString@plt+0xe230>  // b.any
   14d78:	mov	x0, #0x0                   	// #0
   14d7c:	b	14eb4 <PyFloat_FromString@plt+0xe364>
   14d80:	ldr	x1, [sp, #56]
   14d84:	add	x0, sp, #0x28
   14d88:	ldr	x3, [sp, #24]
   14d8c:	mov	x2, x1
   14d90:	mov	x1, x0
   14d94:	mov	w0, #0x1                   	// #1
   14d98:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14d9c:	cmp	w0, #0x0
   14da0:	b.ne	14dc4 <PyFloat_FromString@plt+0xe274>  // b.any
   14da4:	ldr	x0, [sp, #48]
   14da8:	mov	x2, x0
   14dac:	mov	w1, #0x133a                	// #4922
   14db0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14db4:	add	x0, x0, #0x9c0
   14db8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14dbc:	mov	x0, #0x0                   	// #0
   14dc0:	b	14eb4 <PyFloat_FromString@plt+0xe364>
   14dc4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14dc8:	add	x0, x0, #0x360
   14dcc:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14dd0:	str	x0, [sp, #72]
   14dd4:	ldr	x0, [sp, #72]
   14dd8:	cmp	x0, #0x0
   14ddc:	b.ne	14e18 <PyFloat_FromString@plt+0xe2c8>  // b.any
   14de0:	ldr	x0, [sp, #48]
   14de4:	mov	x2, x0
   14de8:	mov	w1, #0x133a                	// #4922
   14dec:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14df0:	add	x0, x0, #0x9c0
   14df4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14df8:	ldr	x0, [sp, #40]
   14dfc:	mov	x2, x0
   14e00:	mov	w1, #0x133a                	// #4922
   14e04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14e08:	add	x0, x0, #0x9c0
   14e0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14e10:	mov	x0, #0x0                   	// #0
   14e14:	b	14eb4 <PyFloat_FromString@plt+0xe364>
   14e18:	ldr	x0, [sp, #72]
   14e1c:	add	x5, x0, #0x18
   14e20:	ldr	x0, [sp, #48]
   14e24:	add	x1, x0, #0x18
   14e28:	ldr	x0, [sp, #40]
   14e2c:	add	x2, x0, #0x18
   14e30:	ldr	x0, [sp, #24]
   14e34:	add	x0, x0, #0x10
   14e38:	add	x3, sp, #0x24
   14e3c:	mov	x4, x3
   14e40:	mov	x3, x0
   14e44:	mov	x0, x5
   14e48:	bl	34f20 <PyInit__decimal@@Base+0x1d248>
   14e4c:	ldr	x0, [sp, #48]
   14e50:	mov	x2, x0
   14e54:	mov	w1, #0x133a                	// #4922
   14e58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14e5c:	add	x0, x0, #0x9c0
   14e60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14e64:	ldr	x0, [sp, #40]
   14e68:	mov	x2, x0
   14e6c:	mov	w1, #0x133a                	// #4922
   14e70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14e74:	add	x0, x0, #0x9c0
   14e78:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14e7c:	ldr	w0, [sp, #36]
   14e80:	mov	w1, w0
   14e84:	ldr	x0, [sp, #24]
   14e88:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   14e8c:	cmp	w0, #0x0
   14e90:	b.eq	14eb0 <PyFloat_FromString@plt+0xe360>  // b.none
   14e94:	ldr	x2, [sp, #72]
   14e98:	mov	w1, #0x133a                	// #4922
   14e9c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14ea0:	add	x0, x0, #0x9c0
   14ea4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14ea8:	mov	x0, #0x0                   	// #0
   14eac:	b	14eb4 <PyFloat_FromString@plt+0xe364>
   14eb0:	ldr	x0, [sp, #72]
   14eb4:	ldp	x29, x30, [sp], #80
   14eb8:	ret
   14ebc:	stp	x29, x30, [sp, #-80]!
   14ec0:	mov	x29, sp
   14ec4:	str	x0, [sp, #24]
   14ec8:	str	x1, [sp, #16]
   14ecc:	str	wzr, [sp, #36]
   14ed0:	add	x1, sp, #0x38
   14ed4:	add	x0, sp, #0x40
   14ed8:	mov	x3, x1
   14edc:	mov	x2, x0
   14ee0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   14ee4:	add	x1, x0, #0x720
   14ee8:	ldr	x0, [sp, #16]
   14eec:	bl	6980 <PyArg_ParseTuple@plt>
   14ef0:	cmp	w0, #0x0
   14ef4:	b.ne	14f00 <PyFloat_FromString@plt+0xe3b0>  // b.any
   14ef8:	mov	x0, #0x0                   	// #0
   14efc:	b	15060 <PyFloat_FromString@plt+0xe510>
   14f00:	ldr	x1, [sp, #64]
   14f04:	add	x0, sp, #0x30
   14f08:	ldr	x3, [sp, #24]
   14f0c:	mov	x2, x1
   14f10:	mov	x1, x0
   14f14:	mov	w0, #0x1                   	// #1
   14f18:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14f1c:	cmp	w0, #0x0
   14f20:	b.ne	14f2c <PyFloat_FromString@plt+0xe3dc>  // b.any
   14f24:	mov	x0, #0x0                   	// #0
   14f28:	b	15060 <PyFloat_FromString@plt+0xe510>
   14f2c:	ldr	x1, [sp, #56]
   14f30:	add	x0, sp, #0x28
   14f34:	ldr	x3, [sp, #24]
   14f38:	mov	x2, x1
   14f3c:	mov	x1, x0
   14f40:	mov	w0, #0x1                   	// #1
   14f44:	bl	b168 <PyFloat_FromString@plt+0x4618>
   14f48:	cmp	w0, #0x0
   14f4c:	b.ne	14f70 <PyFloat_FromString@plt+0xe420>  // b.any
   14f50:	ldr	x0, [sp, #48]
   14f54:	mov	x2, x0
   14f58:	mov	w1, #0x133b                	// #4923
   14f5c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14f60:	add	x0, x0, #0x9c0
   14f64:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14f68:	mov	x0, #0x0                   	// #0
   14f6c:	b	15060 <PyFloat_FromString@plt+0xe510>
   14f70:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   14f74:	add	x0, x0, #0x360
   14f78:	bl	912c <PyFloat_FromString@plt+0x25dc>
   14f7c:	str	x0, [sp, #72]
   14f80:	ldr	x0, [sp, #72]
   14f84:	cmp	x0, #0x0
   14f88:	b.ne	14fc4 <PyFloat_FromString@plt+0xe474>  // b.any
   14f8c:	ldr	x0, [sp, #48]
   14f90:	mov	x2, x0
   14f94:	mov	w1, #0x133b                	// #4923
   14f98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14f9c:	add	x0, x0, #0x9c0
   14fa0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14fa4:	ldr	x0, [sp, #40]
   14fa8:	mov	x2, x0
   14fac:	mov	w1, #0x133b                	// #4923
   14fb0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   14fb4:	add	x0, x0, #0x9c0
   14fb8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   14fbc:	mov	x0, #0x0                   	// #0
   14fc0:	b	15060 <PyFloat_FromString@plt+0xe510>
   14fc4:	ldr	x0, [sp, #72]
   14fc8:	add	x5, x0, #0x18
   14fcc:	ldr	x0, [sp, #48]
   14fd0:	add	x1, x0, #0x18
   14fd4:	ldr	x0, [sp, #40]
   14fd8:	add	x2, x0, #0x18
   14fdc:	ldr	x0, [sp, #24]
   14fe0:	add	x0, x0, #0x10
   14fe4:	add	x3, sp, #0x24
   14fe8:	mov	x4, x3
   14fec:	mov	x3, x0
   14ff0:	mov	x0, x5
   14ff4:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   14ff8:	ldr	x0, [sp, #48]
   14ffc:	mov	x2, x0
   15000:	mov	w1, #0x133b                	// #4923
   15004:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15008:	add	x0, x0, #0x9c0
   1500c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15010:	ldr	x0, [sp, #40]
   15014:	mov	x2, x0
   15018:	mov	w1, #0x133b                	// #4923
   1501c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15020:	add	x0, x0, #0x9c0
   15024:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15028:	ldr	w0, [sp, #36]
   1502c:	mov	w1, w0
   15030:	ldr	x0, [sp, #24]
   15034:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15038:	cmp	w0, #0x0
   1503c:	b.eq	1505c <PyFloat_FromString@plt+0xe50c>  // b.none
   15040:	ldr	x2, [sp, #72]
   15044:	mov	w1, #0x133b                	// #4923
   15048:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1504c:	add	x0, x0, #0x9c0
   15050:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15054:	mov	x0, #0x0                   	// #0
   15058:	b	15060 <PyFloat_FromString@plt+0xe510>
   1505c:	ldr	x0, [sp, #72]
   15060:	ldp	x29, x30, [sp], #80
   15064:	ret
   15068:	stp	x29, x30, [sp, #-80]!
   1506c:	mov	x29, sp
   15070:	str	x0, [sp, #24]
   15074:	str	x1, [sp, #16]
   15078:	str	wzr, [sp, #36]
   1507c:	add	x1, sp, #0x38
   15080:	add	x0, sp, #0x40
   15084:	mov	x3, x1
   15088:	mov	x2, x0
   1508c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15090:	add	x1, x0, #0x720
   15094:	ldr	x0, [sp, #16]
   15098:	bl	6980 <PyArg_ParseTuple@plt>
   1509c:	cmp	w0, #0x0
   150a0:	b.ne	150ac <PyFloat_FromString@plt+0xe55c>  // b.any
   150a4:	mov	x0, #0x0                   	// #0
   150a8:	b	1520c <PyFloat_FromString@plt+0xe6bc>
   150ac:	ldr	x1, [sp, #64]
   150b0:	add	x0, sp, #0x30
   150b4:	ldr	x3, [sp, #24]
   150b8:	mov	x2, x1
   150bc:	mov	x1, x0
   150c0:	mov	w0, #0x1                   	// #1
   150c4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   150c8:	cmp	w0, #0x0
   150cc:	b.ne	150d8 <PyFloat_FromString@plt+0xe588>  // b.any
   150d0:	mov	x0, #0x0                   	// #0
   150d4:	b	1520c <PyFloat_FromString@plt+0xe6bc>
   150d8:	ldr	x1, [sp, #56]
   150dc:	add	x0, sp, #0x28
   150e0:	ldr	x3, [sp, #24]
   150e4:	mov	x2, x1
   150e8:	mov	x1, x0
   150ec:	mov	w0, #0x1                   	// #1
   150f0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   150f4:	cmp	w0, #0x0
   150f8:	b.ne	1511c <PyFloat_FromString@plt+0xe5cc>  // b.any
   150fc:	ldr	x0, [sp, #48]
   15100:	mov	x2, x0
   15104:	mov	w1, #0x133c                	// #4924
   15108:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1510c:	add	x0, x0, #0x9c0
   15110:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15114:	mov	x0, #0x0                   	// #0
   15118:	b	1520c <PyFloat_FromString@plt+0xe6bc>
   1511c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   15120:	add	x0, x0, #0x360
   15124:	bl	912c <PyFloat_FromString@plt+0x25dc>
   15128:	str	x0, [sp, #72]
   1512c:	ldr	x0, [sp, #72]
   15130:	cmp	x0, #0x0
   15134:	b.ne	15170 <PyFloat_FromString@plt+0xe620>  // b.any
   15138:	ldr	x0, [sp, #48]
   1513c:	mov	x2, x0
   15140:	mov	w1, #0x133c                	// #4924
   15144:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15148:	add	x0, x0, #0x9c0
   1514c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15150:	ldr	x0, [sp, #40]
   15154:	mov	x2, x0
   15158:	mov	w1, #0x133c                	// #4924
   1515c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15160:	add	x0, x0, #0x9c0
   15164:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15168:	mov	x0, #0x0                   	// #0
   1516c:	b	1520c <PyFloat_FromString@plt+0xe6bc>
   15170:	ldr	x0, [sp, #72]
   15174:	add	x5, x0, #0x18
   15178:	ldr	x0, [sp, #48]
   1517c:	add	x1, x0, #0x18
   15180:	ldr	x0, [sp, #40]
   15184:	add	x2, x0, #0x18
   15188:	ldr	x0, [sp, #24]
   1518c:	add	x0, x0, #0x10
   15190:	add	x3, sp, #0x24
   15194:	mov	x4, x3
   15198:	mov	x3, x0
   1519c:	mov	x0, x5
   151a0:	bl	378c0 <PyInit__decimal@@Base+0x1fbe8>
   151a4:	ldr	x0, [sp, #48]
   151a8:	mov	x2, x0
   151ac:	mov	w1, #0x133c                	// #4924
   151b0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   151b4:	add	x0, x0, #0x9c0
   151b8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   151bc:	ldr	x0, [sp, #40]
   151c0:	mov	x2, x0
   151c4:	mov	w1, #0x133c                	// #4924
   151c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   151cc:	add	x0, x0, #0x9c0
   151d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   151d4:	ldr	w0, [sp, #36]
   151d8:	mov	w1, w0
   151dc:	ldr	x0, [sp, #24]
   151e0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   151e4:	cmp	w0, #0x0
   151e8:	b.eq	15208 <PyFloat_FromString@plt+0xe6b8>  // b.none
   151ec:	ldr	x2, [sp, #72]
   151f0:	mov	w1, #0x133c                	// #4924
   151f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   151f8:	add	x0, x0, #0x9c0
   151fc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15200:	mov	x0, #0x0                   	// #0
   15204:	b	1520c <PyFloat_FromString@plt+0xe6bc>
   15208:	ldr	x0, [sp, #72]
   1520c:	ldp	x29, x30, [sp], #80
   15210:	ret
   15214:	stp	x29, x30, [sp, #-80]!
   15218:	mov	x29, sp
   1521c:	str	x0, [sp, #24]
   15220:	str	x1, [sp, #16]
   15224:	str	wzr, [sp, #36]
   15228:	add	x1, sp, #0x38
   1522c:	add	x0, sp, #0x40
   15230:	mov	x3, x1
   15234:	mov	x2, x0
   15238:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1523c:	add	x1, x0, #0x720
   15240:	ldr	x0, [sp, #16]
   15244:	bl	6980 <PyArg_ParseTuple@plt>
   15248:	cmp	w0, #0x0
   1524c:	b.ne	15258 <PyFloat_FromString@plt+0xe708>  // b.any
   15250:	mov	x0, #0x0                   	// #0
   15254:	b	153b8 <PyFloat_FromString@plt+0xe868>
   15258:	ldr	x1, [sp, #64]
   1525c:	add	x0, sp, #0x30
   15260:	ldr	x3, [sp, #24]
   15264:	mov	x2, x1
   15268:	mov	x1, x0
   1526c:	mov	w0, #0x1                   	// #1
   15270:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15274:	cmp	w0, #0x0
   15278:	b.ne	15284 <PyFloat_FromString@plt+0xe734>  // b.any
   1527c:	mov	x0, #0x0                   	// #0
   15280:	b	153b8 <PyFloat_FromString@plt+0xe868>
   15284:	ldr	x1, [sp, #56]
   15288:	add	x0, sp, #0x28
   1528c:	ldr	x3, [sp, #24]
   15290:	mov	x2, x1
   15294:	mov	x1, x0
   15298:	mov	w0, #0x1                   	// #1
   1529c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   152a0:	cmp	w0, #0x0
   152a4:	b.ne	152c8 <PyFloat_FromString@plt+0xe778>  // b.any
   152a8:	ldr	x0, [sp, #48]
   152ac:	mov	x2, x0
   152b0:	mov	w1, #0x133d                	// #4925
   152b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   152b8:	add	x0, x0, #0x9c0
   152bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   152c0:	mov	x0, #0x0                   	// #0
   152c4:	b	153b8 <PyFloat_FromString@plt+0xe868>
   152c8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   152cc:	add	x0, x0, #0x360
   152d0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   152d4:	str	x0, [sp, #72]
   152d8:	ldr	x0, [sp, #72]
   152dc:	cmp	x0, #0x0
   152e0:	b.ne	1531c <PyFloat_FromString@plt+0xe7cc>  // b.any
   152e4:	ldr	x0, [sp, #48]
   152e8:	mov	x2, x0
   152ec:	mov	w1, #0x133d                	// #4925
   152f0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   152f4:	add	x0, x0, #0x9c0
   152f8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   152fc:	ldr	x0, [sp, #40]
   15300:	mov	x2, x0
   15304:	mov	w1, #0x133d                	// #4925
   15308:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1530c:	add	x0, x0, #0x9c0
   15310:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15314:	mov	x0, #0x0                   	// #0
   15318:	b	153b8 <PyFloat_FromString@plt+0xe868>
   1531c:	ldr	x0, [sp, #72]
   15320:	add	x5, x0, #0x18
   15324:	ldr	x0, [sp, #48]
   15328:	add	x1, x0, #0x18
   1532c:	ldr	x0, [sp, #40]
   15330:	add	x2, x0, #0x18
   15334:	ldr	x0, [sp, #24]
   15338:	add	x0, x0, #0x10
   1533c:	add	x3, sp, #0x24
   15340:	mov	x4, x3
   15344:	mov	x3, x0
   15348:	mov	x0, x5
   1534c:	bl	39d40 <PyInit__decimal@@Base+0x22068>
   15350:	ldr	x0, [sp, #48]
   15354:	mov	x2, x0
   15358:	mov	w1, #0x133d                	// #4925
   1535c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15360:	add	x0, x0, #0x9c0
   15364:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15368:	ldr	x0, [sp, #40]
   1536c:	mov	x2, x0
   15370:	mov	w1, #0x133d                	// #4925
   15374:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15378:	add	x0, x0, #0x9c0
   1537c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15380:	ldr	w0, [sp, #36]
   15384:	mov	w1, w0
   15388:	ldr	x0, [sp, #24]
   1538c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15390:	cmp	w0, #0x0
   15394:	b.eq	153b4 <PyFloat_FromString@plt+0xe864>  // b.none
   15398:	ldr	x2, [sp, #72]
   1539c:	mov	w1, #0x133d                	// #4925
   153a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   153a4:	add	x0, x0, #0x9c0
   153a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   153ac:	mov	x0, #0x0                   	// #0
   153b0:	b	153b8 <PyFloat_FromString@plt+0xe868>
   153b4:	ldr	x0, [sp, #72]
   153b8:	ldp	x29, x30, [sp], #80
   153bc:	ret
   153c0:	stp	x29, x30, [sp, #-80]!
   153c4:	mov	x29, sp
   153c8:	str	x0, [sp, #24]
   153cc:	str	x1, [sp, #16]
   153d0:	str	wzr, [sp, #36]
   153d4:	add	x1, sp, #0x38
   153d8:	add	x0, sp, #0x40
   153dc:	mov	x3, x1
   153e0:	mov	x2, x0
   153e4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   153e8:	add	x1, x0, #0x720
   153ec:	ldr	x0, [sp, #16]
   153f0:	bl	6980 <PyArg_ParseTuple@plt>
   153f4:	cmp	w0, #0x0
   153f8:	b.ne	15404 <PyFloat_FromString@plt+0xe8b4>  // b.any
   153fc:	mov	x0, #0x0                   	// #0
   15400:	b	15564 <PyFloat_FromString@plt+0xea14>
   15404:	ldr	x1, [sp, #64]
   15408:	add	x0, sp, #0x30
   1540c:	ldr	x3, [sp, #24]
   15410:	mov	x2, x1
   15414:	mov	x1, x0
   15418:	mov	w0, #0x1                   	// #1
   1541c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15420:	cmp	w0, #0x0
   15424:	b.ne	15430 <PyFloat_FromString@plt+0xe8e0>  // b.any
   15428:	mov	x0, #0x0                   	// #0
   1542c:	b	15564 <PyFloat_FromString@plt+0xea14>
   15430:	ldr	x1, [sp, #56]
   15434:	add	x0, sp, #0x28
   15438:	ldr	x3, [sp, #24]
   1543c:	mov	x2, x1
   15440:	mov	x1, x0
   15444:	mov	w0, #0x1                   	// #1
   15448:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1544c:	cmp	w0, #0x0
   15450:	b.ne	15474 <PyFloat_FromString@plt+0xe924>  // b.any
   15454:	ldr	x0, [sp, #48]
   15458:	mov	x2, x0
   1545c:	mov	w1, #0x133e                	// #4926
   15460:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15464:	add	x0, x0, #0x9c0
   15468:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1546c:	mov	x0, #0x0                   	// #0
   15470:	b	15564 <PyFloat_FromString@plt+0xea14>
   15474:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   15478:	add	x0, x0, #0x360
   1547c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   15480:	str	x0, [sp, #72]
   15484:	ldr	x0, [sp, #72]
   15488:	cmp	x0, #0x0
   1548c:	b.ne	154c8 <PyFloat_FromString@plt+0xe978>  // b.any
   15490:	ldr	x0, [sp, #48]
   15494:	mov	x2, x0
   15498:	mov	w1, #0x133e                	// #4926
   1549c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   154a0:	add	x0, x0, #0x9c0
   154a4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   154a8:	ldr	x0, [sp, #40]
   154ac:	mov	x2, x0
   154b0:	mov	w1, #0x133e                	// #4926
   154b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   154b8:	add	x0, x0, #0x9c0
   154bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   154c0:	mov	x0, #0x0                   	// #0
   154c4:	b	15564 <PyFloat_FromString@plt+0xea14>
   154c8:	ldr	x0, [sp, #72]
   154cc:	add	x5, x0, #0x18
   154d0:	ldr	x0, [sp, #48]
   154d4:	add	x1, x0, #0x18
   154d8:	ldr	x0, [sp, #40]
   154dc:	add	x2, x0, #0x18
   154e0:	ldr	x0, [sp, #24]
   154e4:	add	x0, x0, #0x10
   154e8:	add	x3, sp, #0x24
   154ec:	mov	x4, x3
   154f0:	mov	x3, x0
   154f4:	mov	x0, x5
   154f8:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   154fc:	ldr	x0, [sp, #48]
   15500:	mov	x2, x0
   15504:	mov	w1, #0x133e                	// #4926
   15508:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1550c:	add	x0, x0, #0x9c0
   15510:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15514:	ldr	x0, [sp, #40]
   15518:	mov	x2, x0
   1551c:	mov	w1, #0x133e                	// #4926
   15520:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15524:	add	x0, x0, #0x9c0
   15528:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1552c:	ldr	w0, [sp, #36]
   15530:	mov	w1, w0
   15534:	ldr	x0, [sp, #24]
   15538:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1553c:	cmp	w0, #0x0
   15540:	b.eq	15560 <PyFloat_FromString@plt+0xea10>  // b.none
   15544:	ldr	x2, [sp, #72]
   15548:	mov	w1, #0x133e                	// #4926
   1554c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15550:	add	x0, x0, #0x9c0
   15554:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15558:	mov	x0, #0x0                   	// #0
   1555c:	b	15564 <PyFloat_FromString@plt+0xea14>
   15560:	ldr	x0, [sp, #72]
   15564:	ldp	x29, x30, [sp], #80
   15568:	ret
   1556c:	stp	x29, x30, [sp, #-80]!
   15570:	mov	x29, sp
   15574:	str	x0, [sp, #24]
   15578:	str	x1, [sp, #16]
   1557c:	str	wzr, [sp, #36]
   15580:	add	x1, sp, #0x38
   15584:	add	x0, sp, #0x40
   15588:	mov	x3, x1
   1558c:	mov	x2, x0
   15590:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15594:	add	x1, x0, #0x720
   15598:	ldr	x0, [sp, #16]
   1559c:	bl	6980 <PyArg_ParseTuple@plt>
   155a0:	cmp	w0, #0x0
   155a4:	b.ne	155b0 <PyFloat_FromString@plt+0xea60>  // b.any
   155a8:	mov	x0, #0x0                   	// #0
   155ac:	b	15710 <PyFloat_FromString@plt+0xebc0>
   155b0:	ldr	x1, [sp, #64]
   155b4:	add	x0, sp, #0x30
   155b8:	ldr	x3, [sp, #24]
   155bc:	mov	x2, x1
   155c0:	mov	x1, x0
   155c4:	mov	w0, #0x1                   	// #1
   155c8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   155cc:	cmp	w0, #0x0
   155d0:	b.ne	155dc <PyFloat_FromString@plt+0xea8c>  // b.any
   155d4:	mov	x0, #0x0                   	// #0
   155d8:	b	15710 <PyFloat_FromString@plt+0xebc0>
   155dc:	ldr	x1, [sp, #56]
   155e0:	add	x0, sp, #0x28
   155e4:	ldr	x3, [sp, #24]
   155e8:	mov	x2, x1
   155ec:	mov	x1, x0
   155f0:	mov	w0, #0x1                   	// #1
   155f4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   155f8:	cmp	w0, #0x0
   155fc:	b.ne	15620 <PyFloat_FromString@plt+0xead0>  // b.any
   15600:	ldr	x0, [sp, #48]
   15604:	mov	x2, x0
   15608:	mov	w1, #0x133f                	// #4927
   1560c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15610:	add	x0, x0, #0x9c0
   15614:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15618:	mov	x0, #0x0                   	// #0
   1561c:	b	15710 <PyFloat_FromString@plt+0xebc0>
   15620:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   15624:	add	x0, x0, #0x360
   15628:	bl	912c <PyFloat_FromString@plt+0x25dc>
   1562c:	str	x0, [sp, #72]
   15630:	ldr	x0, [sp, #72]
   15634:	cmp	x0, #0x0
   15638:	b.ne	15674 <PyFloat_FromString@plt+0xeb24>  // b.any
   1563c:	ldr	x0, [sp, #48]
   15640:	mov	x2, x0
   15644:	mov	w1, #0x133f                	// #4927
   15648:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1564c:	add	x0, x0, #0x9c0
   15650:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15654:	ldr	x0, [sp, #40]
   15658:	mov	x2, x0
   1565c:	mov	w1, #0x133f                	// #4927
   15660:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15664:	add	x0, x0, #0x9c0
   15668:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1566c:	mov	x0, #0x0                   	// #0
   15670:	b	15710 <PyFloat_FromString@plt+0xebc0>
   15674:	ldr	x0, [sp, #72]
   15678:	add	x5, x0, #0x18
   1567c:	ldr	x0, [sp, #48]
   15680:	add	x1, x0, #0x18
   15684:	ldr	x0, [sp, #40]
   15688:	add	x2, x0, #0x18
   1568c:	ldr	x0, [sp, #24]
   15690:	add	x0, x0, #0x10
   15694:	add	x3, sp, #0x24
   15698:	mov	x4, x3
   1569c:	mov	x3, x0
   156a0:	mov	x0, x5
   156a4:	bl	3a598 <PyInit__decimal@@Base+0x228c0>
   156a8:	ldr	x0, [sp, #48]
   156ac:	mov	x2, x0
   156b0:	mov	w1, #0x133f                	// #4927
   156b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   156b8:	add	x0, x0, #0x9c0
   156bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   156c0:	ldr	x0, [sp, #40]
   156c4:	mov	x2, x0
   156c8:	mov	w1, #0x133f                	// #4927
   156cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   156d0:	add	x0, x0, #0x9c0
   156d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   156d8:	ldr	w0, [sp, #36]
   156dc:	mov	w1, w0
   156e0:	ldr	x0, [sp, #24]
   156e4:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   156e8:	cmp	w0, #0x0
   156ec:	b.eq	1570c <PyFloat_FromString@plt+0xebbc>  // b.none
   156f0:	ldr	x2, [sp, #72]
   156f4:	mov	w1, #0x133f                	// #4927
   156f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   156fc:	add	x0, x0, #0x9c0
   15700:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15704:	mov	x0, #0x0                   	// #0
   15708:	b	15710 <PyFloat_FromString@plt+0xebc0>
   1570c:	ldr	x0, [sp, #72]
   15710:	ldp	x29, x30, [sp], #80
   15714:	ret
   15718:	stp	x29, x30, [sp, #-80]!
   1571c:	mov	x29, sp
   15720:	str	x0, [sp, #24]
   15724:	str	x1, [sp, #16]
   15728:	str	wzr, [sp, #36]
   1572c:	add	x1, sp, #0x38
   15730:	add	x0, sp, #0x40
   15734:	mov	x3, x1
   15738:	mov	x2, x0
   1573c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15740:	add	x1, x0, #0x720
   15744:	ldr	x0, [sp, #16]
   15748:	bl	6980 <PyArg_ParseTuple@plt>
   1574c:	cmp	w0, #0x0
   15750:	b.ne	1575c <PyFloat_FromString@plt+0xec0c>  // b.any
   15754:	mov	x0, #0x0                   	// #0
   15758:	b	158bc <PyFloat_FromString@plt+0xed6c>
   1575c:	ldr	x1, [sp, #64]
   15760:	add	x0, sp, #0x30
   15764:	ldr	x3, [sp, #24]
   15768:	mov	x2, x1
   1576c:	mov	x1, x0
   15770:	mov	w0, #0x1                   	// #1
   15774:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15778:	cmp	w0, #0x0
   1577c:	b.ne	15788 <PyFloat_FromString@plt+0xec38>  // b.any
   15780:	mov	x0, #0x0                   	// #0
   15784:	b	158bc <PyFloat_FromString@plt+0xed6c>
   15788:	ldr	x1, [sp, #56]
   1578c:	add	x0, sp, #0x28
   15790:	ldr	x3, [sp, #24]
   15794:	mov	x2, x1
   15798:	mov	x1, x0
   1579c:	mov	w0, #0x1                   	// #1
   157a0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   157a4:	cmp	w0, #0x0
   157a8:	b.ne	157cc <PyFloat_FromString@plt+0xec7c>  // b.any
   157ac:	ldr	x0, [sp, #48]
   157b0:	mov	x2, x0
   157b4:	mov	w1, #0x1340                	// #4928
   157b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   157bc:	add	x0, x0, #0x9c0
   157c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   157c4:	mov	x0, #0x0                   	// #0
   157c8:	b	158bc <PyFloat_FromString@plt+0xed6c>
   157cc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   157d0:	add	x0, x0, #0x360
   157d4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   157d8:	str	x0, [sp, #72]
   157dc:	ldr	x0, [sp, #72]
   157e0:	cmp	x0, #0x0
   157e4:	b.ne	15820 <PyFloat_FromString@plt+0xecd0>  // b.any
   157e8:	ldr	x0, [sp, #48]
   157ec:	mov	x2, x0
   157f0:	mov	w1, #0x1340                	// #4928
   157f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   157f8:	add	x0, x0, #0x9c0
   157fc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15800:	ldr	x0, [sp, #40]
   15804:	mov	x2, x0
   15808:	mov	w1, #0x1340                	// #4928
   1580c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15810:	add	x0, x0, #0x9c0
   15814:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15818:	mov	x0, #0x0                   	// #0
   1581c:	b	158bc <PyFloat_FromString@plt+0xed6c>
   15820:	ldr	x0, [sp, #72]
   15824:	add	x5, x0, #0x18
   15828:	ldr	x0, [sp, #48]
   1582c:	add	x1, x0, #0x18
   15830:	ldr	x0, [sp, #40]
   15834:	add	x2, x0, #0x18
   15838:	ldr	x0, [sp, #24]
   1583c:	add	x0, x0, #0x10
   15840:	add	x3, sp, #0x24
   15844:	mov	x4, x3
   15848:	mov	x3, x0
   1584c:	mov	x0, x5
   15850:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   15854:	ldr	x0, [sp, #48]
   15858:	mov	x2, x0
   1585c:	mov	w1, #0x1340                	// #4928
   15860:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15864:	add	x0, x0, #0x9c0
   15868:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1586c:	ldr	x0, [sp, #40]
   15870:	mov	x2, x0
   15874:	mov	w1, #0x1340                	// #4928
   15878:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1587c:	add	x0, x0, #0x9c0
   15880:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15884:	ldr	w0, [sp, #36]
   15888:	mov	w1, w0
   1588c:	ldr	x0, [sp, #24]
   15890:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15894:	cmp	w0, #0x0
   15898:	b.eq	158b8 <PyFloat_FromString@plt+0xed68>  // b.none
   1589c:	ldr	x2, [sp, #72]
   158a0:	mov	w1, #0x1340                	// #4928
   158a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   158a8:	add	x0, x0, #0x9c0
   158ac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   158b0:	mov	x0, #0x0                   	// #0
   158b4:	b	158bc <PyFloat_FromString@plt+0xed6c>
   158b8:	ldr	x0, [sp, #72]
   158bc:	ldp	x29, x30, [sp], #80
   158c0:	ret
   158c4:	stp	x29, x30, [sp, #-96]!
   158c8:	mov	x29, sp
   158cc:	str	x0, [sp, #24]
   158d0:	str	x1, [sp, #16]
   158d4:	str	wzr, [sp, #36]
   158d8:	add	x1, sp, #0x38
   158dc:	add	x0, sp, #0x40
   158e0:	mov	x3, x1
   158e4:	mov	x2, x0
   158e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   158ec:	add	x1, x0, #0x720
   158f0:	ldr	x0, [sp, #16]
   158f4:	bl	6980 <PyArg_ParseTuple@plt>
   158f8:	cmp	w0, #0x0
   158fc:	b.ne	15908 <PyFloat_FromString@plt+0xedb8>  // b.any
   15900:	mov	x0, #0x0                   	// #0
   15904:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   15908:	ldr	x1, [sp, #64]
   1590c:	add	x0, sp, #0x30
   15910:	ldr	x3, [sp, #24]
   15914:	mov	x2, x1
   15918:	mov	x1, x0
   1591c:	mov	w0, #0x1                   	// #1
   15920:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15924:	cmp	w0, #0x0
   15928:	b.ne	15934 <PyFloat_FromString@plt+0xede4>  // b.any
   1592c:	mov	x0, #0x0                   	// #0
   15930:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   15934:	ldr	x1, [sp, #56]
   15938:	add	x0, sp, #0x28
   1593c:	ldr	x3, [sp, #24]
   15940:	mov	x2, x1
   15944:	mov	x1, x0
   15948:	mov	w0, #0x1                   	// #1
   1594c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15950:	cmp	w0, #0x0
   15954:	b.ne	15978 <PyFloat_FromString@plt+0xee28>  // b.any
   15958:	ldr	x0, [sp, #48]
   1595c:	mov	x2, x0
   15960:	mov	w1, #0x134f                	// #4943
   15964:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15968:	add	x0, x0, #0x9c0
   1596c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15970:	mov	x0, #0x0                   	// #0
   15974:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   15978:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1597c:	add	x0, x0, #0x360
   15980:	bl	912c <PyFloat_FromString@plt+0x25dc>
   15984:	str	x0, [sp, #88]
   15988:	ldr	x0, [sp, #88]
   1598c:	cmp	x0, #0x0
   15990:	b.ne	159cc <PyFloat_FromString@plt+0xee7c>  // b.any
   15994:	ldr	x0, [sp, #48]
   15998:	mov	x2, x0
   1599c:	mov	w1, #0x1353                	// #4947
   159a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   159a4:	add	x0, x0, #0x9c0
   159a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   159ac:	ldr	x0, [sp, #40]
   159b0:	mov	x2, x0
   159b4:	mov	w1, #0x1354                	// #4948
   159b8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   159bc:	add	x0, x0, #0x9c0
   159c0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   159c4:	mov	x0, #0x0                   	// #0
   159c8:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   159cc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   159d0:	add	x0, x0, #0x360
   159d4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   159d8:	str	x0, [sp, #80]
   159dc:	ldr	x0, [sp, #80]
   159e0:	cmp	x0, #0x0
   159e4:	b.ne	15a34 <PyFloat_FromString@plt+0xeee4>  // b.any
   159e8:	ldr	x0, [sp, #48]
   159ec:	mov	x2, x0
   159f0:	mov	w1, #0x1359                	// #4953
   159f4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   159f8:	add	x0, x0, #0x9c0
   159fc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15a00:	ldr	x0, [sp, #40]
   15a04:	mov	x2, x0
   15a08:	mov	w1, #0x135a                	// #4954
   15a0c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15a10:	add	x0, x0, #0x9c0
   15a14:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15a18:	ldr	x2, [sp, #88]
   15a1c:	mov	w1, #0x135b                	// #4955
   15a20:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15a24:	add	x0, x0, #0x9c0
   15a28:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15a2c:	mov	x0, #0x0                   	// #0
   15a30:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   15a34:	ldr	x0, [sp, #88]
   15a38:	add	x6, x0, #0x18
   15a3c:	ldr	x0, [sp, #80]
   15a40:	add	x1, x0, #0x18
   15a44:	ldr	x0, [sp, #48]
   15a48:	add	x2, x0, #0x18
   15a4c:	ldr	x0, [sp, #40]
   15a50:	add	x3, x0, #0x18
   15a54:	ldr	x0, [sp, #24]
   15a58:	add	x0, x0, #0x10
   15a5c:	add	x4, sp, #0x24
   15a60:	mov	x5, x4
   15a64:	mov	x4, x0
   15a68:	mov	x0, x6
   15a6c:	bl	31488 <PyInit__decimal@@Base+0x197b0>
   15a70:	ldr	x0, [sp, #48]
   15a74:	mov	x2, x0
   15a78:	mov	w1, #0x1360                	// #4960
   15a7c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15a80:	add	x0, x0, #0x9c0
   15a84:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15a88:	ldr	x0, [sp, #40]
   15a8c:	mov	x2, x0
   15a90:	mov	w1, #0x1361                	// #4961
   15a94:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15a98:	add	x0, x0, #0x9c0
   15a9c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15aa0:	ldr	w0, [sp, #36]
   15aa4:	mov	w1, w0
   15aa8:	ldr	x0, [sp, #24]
   15aac:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15ab0:	cmp	w0, #0x0
   15ab4:	b.eq	15ae8 <PyFloat_FromString@plt+0xef98>  // b.none
   15ab8:	ldr	x2, [sp, #80]
   15abc:	mov	w1, #0x1363                	// #4963
   15ac0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15ac4:	add	x0, x0, #0x9c0
   15ac8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15acc:	ldr	x2, [sp, #88]
   15ad0:	mov	w1, #0x1364                	// #4964
   15ad4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15ad8:	add	x0, x0, #0x9c0
   15adc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15ae0:	mov	x0, #0x0                   	// #0
   15ae4:	b	15b2c <PyFloat_FromString@plt+0xefdc>
   15ae8:	ldr	x2, [sp, #80]
   15aec:	ldr	x1, [sp, #88]
   15af0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15af4:	add	x0, x0, #0x300
   15af8:	bl	6870 <Py_BuildValue@plt>
   15afc:	str	x0, [sp, #72]
   15b00:	ldr	x2, [sp, #80]
   15b04:	mov	w1, #0x1369                	// #4969
   15b08:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15b0c:	add	x0, x0, #0x9c0
   15b10:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15b14:	ldr	x2, [sp, #88]
   15b18:	mov	w1, #0x136a                	// #4970
   15b1c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15b20:	add	x0, x0, #0x9c0
   15b24:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15b28:	ldr	x0, [sp, #72]
   15b2c:	ldp	x29, x30, [sp], #96
   15b30:	ret
   15b34:	stp	x29, x30, [sp, #-112]!
   15b38:	mov	x29, sp
   15b3c:	str	x0, [sp, #40]
   15b40:	str	x1, [sp, #32]
   15b44:	str	x2, [sp, #24]
   15b48:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   15b4c:	ldr	x0, [x0, #4008]
   15b50:	str	x0, [sp, #80]
   15b54:	str	xzr, [sp, #56]
   15b58:	str	wzr, [sp, #52]
   15b5c:	add	x2, sp, #0x50
   15b60:	add	x1, sp, #0x58
   15b64:	add	x0, sp, #0x60
   15b68:	mov	x6, x2
   15b6c:	mov	x5, x1
   15b70:	mov	x4, x0
   15b74:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   15b78:	add	x3, x0, #0x568
   15b7c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15b80:	add	x2, x0, #0x308
   15b84:	ldr	x1, [sp, #24]
   15b88:	ldr	x0, [sp, #32]
   15b8c:	bl	65d0 <PyArg_ParseTupleAndKeywords@plt>
   15b90:	cmp	w0, #0x0
   15b94:	b.ne	15ba0 <PyFloat_FromString@plt+0xf050>  // b.any
   15b98:	mov	x0, #0x0                   	// #0
   15b9c:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15ba0:	ldr	x1, [sp, #96]
   15ba4:	add	x0, sp, #0x48
   15ba8:	ldr	x3, [sp, #40]
   15bac:	mov	x2, x1
   15bb0:	mov	x1, x0
   15bb4:	mov	w0, #0x1                   	// #1
   15bb8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15bbc:	cmp	w0, #0x0
   15bc0:	b.ne	15bcc <PyFloat_FromString@plt+0xf07c>  // b.any
   15bc4:	mov	x0, #0x0                   	// #0
   15bc8:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15bcc:	ldr	x1, [sp, #88]
   15bd0:	add	x0, sp, #0x40
   15bd4:	ldr	x3, [sp, #40]
   15bd8:	mov	x2, x1
   15bdc:	mov	x1, x0
   15be0:	mov	w0, #0x1                   	// #1
   15be4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15be8:	cmp	w0, #0x0
   15bec:	b.ne	15c10 <PyFloat_FromString@plt+0xf0c0>  // b.any
   15bf0:	ldr	x0, [sp, #72]
   15bf4:	mov	x2, x0
   15bf8:	mov	w1, #0x137d                	// #4989
   15bfc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15c00:	add	x0, x0, #0x9c0
   15c04:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15c08:	mov	x0, #0x0                   	// #0
   15c0c:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15c10:	ldr	x1, [sp, #80]
   15c14:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   15c18:	ldr	x0, [x0, #4008]
   15c1c:	cmp	x1, x0
   15c20:	b.eq	15c80 <PyFloat_FromString@plt+0xf130>  // b.none
   15c24:	ldr	x1, [sp, #80]
   15c28:	add	x0, sp, #0x38
   15c2c:	ldr	x3, [sp, #40]
   15c30:	mov	x2, x1
   15c34:	mov	x1, x0
   15c38:	mov	w0, #0x1                   	// #1
   15c3c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15c40:	cmp	w0, #0x0
   15c44:	b.ne	15c80 <PyFloat_FromString@plt+0xf130>  // b.any
   15c48:	ldr	x0, [sp, #72]
   15c4c:	mov	x2, x0
   15c50:	mov	w1, #0x1381                	// #4993
   15c54:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15c58:	add	x0, x0, #0x9c0
   15c5c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15c60:	ldr	x0, [sp, #64]
   15c64:	mov	x2, x0
   15c68:	mov	w1, #0x1382                	// #4994
   15c6c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15c70:	add	x0, x0, #0x9c0
   15c74:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15c78:	ldr	x0, [sp, #56]
   15c7c:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15c80:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   15c84:	add	x0, x0, #0x360
   15c88:	bl	912c <PyFloat_FromString@plt+0x25dc>
   15c8c:	str	x0, [sp, #104]
   15c90:	ldr	x0, [sp, #104]
   15c94:	cmp	x0, #0x0
   15c98:	b.ne	15cdc <PyFloat_FromString@plt+0xf18c>  // b.any
   15c9c:	ldr	x0, [sp, #72]
   15ca0:	mov	x2, x0
   15ca4:	mov	w1, #0x1389                	// #5001
   15ca8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15cac:	add	x0, x0, #0x9c0
   15cb0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15cb4:	ldr	x0, [sp, #64]
   15cb8:	mov	x2, x0
   15cbc:	mov	w1, #0x138a                	// #5002
   15cc0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15cc4:	add	x0, x0, #0x9c0
   15cc8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15ccc:	ldr	x0, [sp, #56]
   15cd0:	bl	6d64 <PyFloat_FromString@plt+0x214>
   15cd4:	mov	x0, #0x0                   	// #0
   15cd8:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15cdc:	ldr	x0, [sp, #56]
   15ce0:	cmp	x0, #0x0
   15ce4:	b.ne	15d20 <PyFloat_FromString@plt+0xf1d0>  // b.any
   15ce8:	ldr	x0, [sp, #104]
   15cec:	add	x5, x0, #0x18
   15cf0:	ldr	x0, [sp, #72]
   15cf4:	add	x1, x0, #0x18
   15cf8:	ldr	x0, [sp, #64]
   15cfc:	add	x2, x0, #0x18
   15d00:	ldr	x0, [sp, #40]
   15d04:	add	x0, x0, #0x10
   15d08:	add	x3, sp, #0x34
   15d0c:	mov	x4, x3
   15d10:	mov	x3, x0
   15d14:	mov	x0, x5
   15d18:	bl	38bc0 <PyInit__decimal@@Base+0x20ee8>
   15d1c:	b	15d74 <PyFloat_FromString@plt+0xf224>
   15d20:	ldr	x0, [sp, #104]
   15d24:	add	x6, x0, #0x18
   15d28:	ldr	x0, [sp, #72]
   15d2c:	add	x1, x0, #0x18
   15d30:	ldr	x0, [sp, #64]
   15d34:	add	x2, x0, #0x18
   15d38:	ldr	x0, [sp, #56]
   15d3c:	add	x3, x0, #0x18
   15d40:	ldr	x0, [sp, #40]
   15d44:	add	x0, x0, #0x10
   15d48:	add	x4, sp, #0x34
   15d4c:	mov	x5, x4
   15d50:	mov	x4, x0
   15d54:	mov	x0, x6
   15d58:	bl	3927c <PyInit__decimal@@Base+0x215a4>
   15d5c:	ldr	x0, [sp, #56]
   15d60:	mov	x2, x0
   15d64:	mov	w1, #0x1396                	// #5014
   15d68:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15d6c:	add	x0, x0, #0x9c0
   15d70:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15d74:	ldr	x0, [sp, #72]
   15d78:	mov	x2, x0
   15d7c:	mov	w1, #0x1398                	// #5016
   15d80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15d84:	add	x0, x0, #0x9c0
   15d88:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15d8c:	ldr	x0, [sp, #64]
   15d90:	mov	x2, x0
   15d94:	mov	w1, #0x1399                	// #5017
   15d98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15d9c:	add	x0, x0, #0x9c0
   15da0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15da4:	ldr	w0, [sp, #52]
   15da8:	mov	w1, w0
   15dac:	ldr	x0, [sp, #40]
   15db0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15db4:	cmp	w0, #0x0
   15db8:	b.eq	15dd8 <PyFloat_FromString@plt+0xf288>  // b.none
   15dbc:	ldr	x2, [sp, #104]
   15dc0:	mov	w1, #0x139b                	// #5019
   15dc4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15dc8:	add	x0, x0, #0x9c0
   15dcc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15dd0:	mov	x0, #0x0                   	// #0
   15dd4:	b	15ddc <PyFloat_FromString@plt+0xf28c>
   15dd8:	ldr	x0, [sp, #104]
   15ddc:	ldp	x29, x30, [sp], #112
   15de0:	ret
   15de4:	stp	x29, x30, [sp, #-96]!
   15de8:	mov	x29, sp
   15dec:	str	x0, [sp, #24]
   15df0:	str	x1, [sp, #16]
   15df4:	str	wzr, [sp, #36]
   15df8:	add	x2, sp, #0x40
   15dfc:	add	x1, sp, #0x48
   15e00:	add	x0, sp, #0x50
   15e04:	mov	x4, x2
   15e08:	mov	x3, x1
   15e0c:	mov	x2, x0
   15e10:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   15e14:	add	x1, x0, #0x728
   15e18:	ldr	x0, [sp, #16]
   15e1c:	bl	6980 <PyArg_ParseTuple@plt>
   15e20:	cmp	w0, #0x0
   15e24:	b.ne	15e30 <PyFloat_FromString@plt+0xf2e0>  // b.any
   15e28:	mov	x0, #0x0                   	// #0
   15e2c:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   15e30:	ldr	x1, [sp, #80]
   15e34:	add	x0, sp, #0x38
   15e38:	ldr	x3, [sp, #24]
   15e3c:	mov	x2, x1
   15e40:	mov	x1, x0
   15e44:	mov	w0, #0x1                   	// #1
   15e48:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15e4c:	cmp	w0, #0x0
   15e50:	b.ne	15e5c <PyFloat_FromString@plt+0xf30c>  // b.any
   15e54:	mov	x0, #0x0                   	// #0
   15e58:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   15e5c:	ldr	x1, [sp, #72]
   15e60:	add	x0, sp, #0x30
   15e64:	ldr	x3, [sp, #24]
   15e68:	mov	x2, x1
   15e6c:	mov	x1, x0
   15e70:	mov	w0, #0x1                   	// #1
   15e74:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15e78:	cmp	w0, #0x0
   15e7c:	b.ne	15ea0 <PyFloat_FromString@plt+0xf350>  // b.any
   15e80:	ldr	x0, [sp, #56]
   15e84:	mov	x2, x0
   15e88:	mov	w1, #0x13a3                	// #5027
   15e8c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15e90:	add	x0, x0, #0x9c0
   15e94:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15e98:	mov	x0, #0x0                   	// #0
   15e9c:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   15ea0:	ldr	x1, [sp, #64]
   15ea4:	add	x0, sp, #0x28
   15ea8:	ldr	x3, [sp, #24]
   15eac:	mov	x2, x1
   15eb0:	mov	x1, x0
   15eb4:	mov	w0, #0x1                   	// #1
   15eb8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   15ebc:	cmp	w0, #0x0
   15ec0:	b.ne	15efc <PyFloat_FromString@plt+0xf3ac>  // b.any
   15ec4:	ldr	x0, [sp, #56]
   15ec8:	mov	x2, x0
   15ecc:	mov	w1, #0x13a3                	// #5027
   15ed0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15ed4:	add	x0, x0, #0x9c0
   15ed8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15edc:	ldr	x0, [sp, #48]
   15ee0:	mov	x2, x0
   15ee4:	mov	w1, #0x13a3                	// #5027
   15ee8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15eec:	add	x0, x0, #0x9c0
   15ef0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15ef4:	mov	x0, #0x0                   	// #0
   15ef8:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   15efc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   15f00:	add	x0, x0, #0x360
   15f04:	bl	912c <PyFloat_FromString@plt+0x25dc>
   15f08:	str	x0, [sp, #88]
   15f0c:	ldr	x0, [sp, #88]
   15f10:	cmp	x0, #0x0
   15f14:	b.ne	15f68 <PyFloat_FromString@plt+0xf418>  // b.any
   15f18:	ldr	x0, [sp, #56]
   15f1c:	mov	x2, x0
   15f20:	mov	w1, #0x13a3                	// #5027
   15f24:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15f28:	add	x0, x0, #0x9c0
   15f2c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15f30:	ldr	x0, [sp, #48]
   15f34:	mov	x2, x0
   15f38:	mov	w1, #0x13a3                	// #5027
   15f3c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15f40:	add	x0, x0, #0x9c0
   15f44:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15f48:	ldr	x0, [sp, #40]
   15f4c:	mov	x2, x0
   15f50:	mov	w1, #0x13a3                	// #5027
   15f54:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15f58:	add	x0, x0, #0x9c0
   15f5c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15f60:	mov	x0, #0x0                   	// #0
   15f64:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   15f68:	ldr	x0, [sp, #88]
   15f6c:	add	x6, x0, #0x18
   15f70:	ldr	x0, [sp, #56]
   15f74:	add	x1, x0, #0x18
   15f78:	ldr	x0, [sp, #48]
   15f7c:	add	x2, x0, #0x18
   15f80:	ldr	x0, [sp, #40]
   15f84:	add	x3, x0, #0x18
   15f88:	ldr	x0, [sp, #24]
   15f8c:	add	x0, x0, #0x10
   15f90:	add	x4, sp, #0x24
   15f94:	mov	x5, x4
   15f98:	mov	x4, x0
   15f9c:	mov	x0, x6
   15fa0:	bl	32e64 <PyInit__decimal@@Base+0x1b18c>
   15fa4:	ldr	x0, [sp, #56]
   15fa8:	mov	x2, x0
   15fac:	mov	w1, #0x13a3                	// #5027
   15fb0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15fb4:	add	x0, x0, #0x9c0
   15fb8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15fbc:	ldr	x0, [sp, #48]
   15fc0:	mov	x2, x0
   15fc4:	mov	w1, #0x13a3                	// #5027
   15fc8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15fcc:	add	x0, x0, #0x9c0
   15fd0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15fd4:	ldr	x0, [sp, #40]
   15fd8:	mov	x2, x0
   15fdc:	mov	w1, #0x13a3                	// #5027
   15fe0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   15fe4:	add	x0, x0, #0x9c0
   15fe8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   15fec:	ldr	w0, [sp, #36]
   15ff0:	mov	w1, w0
   15ff4:	ldr	x0, [sp, #24]
   15ff8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   15ffc:	cmp	w0, #0x0
   16000:	b.eq	16020 <PyFloat_FromString@plt+0xf4d0>  // b.none
   16004:	ldr	x2, [sp, #88]
   16008:	mov	w1, #0x13a3                	// #5027
   1600c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16010:	add	x0, x0, #0x9c0
   16014:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16018:	mov	x0, #0x0                   	// #0
   1601c:	b	16024 <PyFloat_FromString@plt+0xf4d4>
   16020:	ldr	x0, [sp, #88]
   16024:	ldp	x29, x30, [sp], #96
   16028:	ret
   1602c:	stp	x29, x30, [sp, #-32]!
   16030:	mov	x29, sp
   16034:	str	x0, [sp, #24]
   16038:	str	x1, [sp, #16]
   1603c:	ldr	x1, [sp, #16]
   16040:	ldr	x0, [sp, #24]
   16044:	bl	1089c <PyFloat_FromString@plt+0x9d4c>
   16048:	ldp	x29, x30, [sp], #32
   1604c:	ret
   16050:	stp	x29, x30, [sp, #-48]!
   16054:	mov	x29, sp
   16058:	str	x0, [sp, #24]
   1605c:	str	x1, [sp, #16]
   16060:	add	x0, sp, #0x20
   16064:	ldr	x3, [sp, #24]
   16068:	ldr	x2, [sp, #16]
   1606c:	mov	x1, x0
   16070:	mov	w0, #0x1                   	// #1
   16074:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16078:	cmp	w0, #0x0
   1607c:	b.ne	16088 <PyFloat_FromString@plt+0xf538>  // b.any
   16080:	mov	x0, #0x0                   	// #0
   16084:	b	160d8 <PyFloat_FromString@plt+0xf588>
   16088:	ldr	x0, [sp, #32]
   1608c:	add	x2, x0, #0x18
   16090:	ldr	x0, [sp, #24]
   16094:	add	x0, x0, #0x10
   16098:	mov	x1, x0
   1609c:	mov	x0, x2
   160a0:	bl	25500 <PyInit__decimal@@Base+0xd828>
   160a4:	cmp	w0, #0x0
   160a8:	b.eq	160b4 <PyFloat_FromString@plt+0xf564>  // b.none
   160ac:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   160b0:	b	160b8 <PyFloat_FromString@plt+0xf568>
   160b4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   160b8:	str	x0, [sp, #40]
   160bc:	ldr	x0, [sp, #32]
   160c0:	mov	x2, x0
   160c4:	mov	w1, #0x13ad                	// #5037
   160c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   160cc:	add	x0, x0, #0x9c0
   160d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   160d4:	ldr	x0, [sp, #40]
   160d8:	ldp	x29, x30, [sp], #48
   160dc:	ret
   160e0:	stp	x29, x30, [sp, #-48]!
   160e4:	mov	x29, sp
   160e8:	str	x0, [sp, #24]
   160ec:	str	x1, [sp, #16]
   160f0:	add	x0, sp, #0x20
   160f4:	ldr	x3, [sp, #24]
   160f8:	ldr	x2, [sp, #16]
   160fc:	mov	x1, x0
   16100:	mov	w0, #0x1                   	// #1
   16104:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16108:	cmp	w0, #0x0
   1610c:	b.ne	16118 <PyFloat_FromString@plt+0xf5c8>  // b.any
   16110:	mov	x0, #0x0                   	// #0
   16114:	b	16168 <PyFloat_FromString@plt+0xf618>
   16118:	ldr	x0, [sp, #32]
   1611c:	add	x2, x0, #0x18
   16120:	ldr	x0, [sp, #24]
   16124:	add	x0, x0, #0x10
   16128:	mov	x1, x0
   1612c:	mov	x0, x2
   16130:	bl	255b8 <PyInit__decimal@@Base+0xd8e0>
   16134:	cmp	w0, #0x0
   16138:	b.eq	16144 <PyFloat_FromString@plt+0xf5f4>  // b.none
   1613c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   16140:	b	16148 <PyFloat_FromString@plt+0xf5f8>
   16144:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   16148:	str	x0, [sp, #40]
   1614c:	ldr	x0, [sp, #32]
   16150:	mov	x2, x0
   16154:	mov	w1, #0x13ae                	// #5038
   16158:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1615c:	add	x0, x0, #0x9c0
   16160:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16164:	ldr	x0, [sp, #40]
   16168:	ldp	x29, x30, [sp], #48
   1616c:	ret
   16170:	stp	x29, x30, [sp, #-48]!
   16174:	mov	x29, sp
   16178:	str	x0, [sp, #24]
   1617c:	str	x1, [sp, #16]
   16180:	add	x0, sp, #0x20
   16184:	ldr	x3, [sp, #24]
   16188:	ldr	x2, [sp, #16]
   1618c:	mov	x1, x0
   16190:	mov	w0, #0x1                   	// #1
   16194:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16198:	cmp	w0, #0x0
   1619c:	b.ne	161a8 <PyFloat_FromString@plt+0xf658>  // b.any
   161a0:	mov	x0, #0x0                   	// #0
   161a4:	b	161e8 <PyFloat_FromString@plt+0xf698>
   161a8:	ldr	x0, [sp, #32]
   161ac:	add	x0, x0, #0x18
   161b0:	bl	25340 <PyInit__decimal@@Base+0xd668>
   161b4:	cmp	w0, #0x0
   161b8:	b.eq	161c4 <PyFloat_FromString@plt+0xf674>  // b.none
   161bc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   161c0:	b	161c8 <PyFloat_FromString@plt+0xf678>
   161c4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   161c8:	str	x0, [sp, #40]
   161cc:	ldr	x0, [sp, #32]
   161d0:	mov	x2, x0
   161d4:	mov	w1, #0x13af                	// #5039
   161d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   161dc:	add	x0, x0, #0x9c0
   161e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   161e4:	ldr	x0, [sp, #40]
   161e8:	ldp	x29, x30, [sp], #48
   161ec:	ret
   161f0:	stp	x29, x30, [sp, #-48]!
   161f4:	mov	x29, sp
   161f8:	str	x0, [sp, #24]
   161fc:	str	x1, [sp, #16]
   16200:	add	x0, sp, #0x20
   16204:	ldr	x3, [sp, #24]
   16208:	ldr	x2, [sp, #16]
   1620c:	mov	x1, x0
   16210:	mov	w0, #0x1                   	// #1
   16214:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16218:	cmp	w0, #0x0
   1621c:	b.ne	16228 <PyFloat_FromString@plt+0xf6d8>  // b.any
   16220:	mov	x0, #0x0                   	// #0
   16224:	b	16268 <PyFloat_FromString@plt+0xf718>
   16228:	ldr	x0, [sp, #32]
   1622c:	add	x0, x0, #0x18
   16230:	bl	25368 <PyInit__decimal@@Base+0xd690>
   16234:	cmp	w0, #0x0
   16238:	b.eq	16244 <PyFloat_FromString@plt+0xf6f4>  // b.none
   1623c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   16240:	b	16248 <PyFloat_FromString@plt+0xf6f8>
   16244:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   16248:	str	x0, [sp, #40]
   1624c:	ldr	x0, [sp, #32]
   16250:	mov	x2, x0
   16254:	mov	w1, #0x13b0                	// #5040
   16258:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1625c:	add	x0, x0, #0x9c0
   16260:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16264:	ldr	x0, [sp, #40]
   16268:	ldp	x29, x30, [sp], #48
   1626c:	ret
   16270:	stp	x29, x30, [sp, #-48]!
   16274:	mov	x29, sp
   16278:	str	x0, [sp, #24]
   1627c:	str	x1, [sp, #16]
   16280:	add	x0, sp, #0x20
   16284:	ldr	x3, [sp, #24]
   16288:	ldr	x2, [sp, #16]
   1628c:	mov	x1, x0
   16290:	mov	w0, #0x1                   	// #1
   16294:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16298:	cmp	w0, #0x0
   1629c:	b.ne	162a8 <PyFloat_FromString@plt+0xf758>  // b.any
   162a0:	mov	x0, #0x0                   	// #0
   162a4:	b	162e8 <PyFloat_FromString@plt+0xf798>
   162a8:	ldr	x0, [sp, #32]
   162ac:	add	x0, x0, #0x18
   162b0:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
   162b4:	cmp	w0, #0x0
   162b8:	b.eq	162c4 <PyFloat_FromString@plt+0xf774>  // b.none
   162bc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   162c0:	b	162c8 <PyFloat_FromString@plt+0xf778>
   162c4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   162c8:	str	x0, [sp, #40]
   162cc:	ldr	x0, [sp, #32]
   162d0:	mov	x2, x0
   162d4:	mov	w1, #0x13b1                	// #5041
   162d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   162dc:	add	x0, x0, #0x9c0
   162e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   162e4:	ldr	x0, [sp, #40]
   162e8:	ldp	x29, x30, [sp], #48
   162ec:	ret
   162f0:	stp	x29, x30, [sp, #-48]!
   162f4:	mov	x29, sp
   162f8:	str	x0, [sp, #24]
   162fc:	str	x1, [sp, #16]
   16300:	add	x0, sp, #0x20
   16304:	ldr	x3, [sp, #24]
   16308:	ldr	x2, [sp, #16]
   1630c:	mov	x1, x0
   16310:	mov	w0, #0x1                   	// #1
   16314:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16318:	cmp	w0, #0x0
   1631c:	b.ne	16328 <PyFloat_FromString@plt+0xf7d8>  // b.any
   16320:	mov	x0, #0x0                   	// #0
   16324:	b	16368 <PyFloat_FromString@plt+0xf818>
   16328:	ldr	x0, [sp, #32]
   1632c:	add	x0, x0, #0x18
   16330:	bl	253e4 <PyInit__decimal@@Base+0xd70c>
   16334:	cmp	w0, #0x0
   16338:	b.eq	16344 <PyFloat_FromString@plt+0xf7f4>  // b.none
   1633c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   16340:	b	16348 <PyFloat_FromString@plt+0xf7f8>
   16344:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   16348:	str	x0, [sp, #40]
   1634c:	ldr	x0, [sp, #32]
   16350:	mov	x2, x0
   16354:	mov	w1, #0x13b2                	// #5042
   16358:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1635c:	add	x0, x0, #0x9c0
   16360:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16364:	ldr	x0, [sp, #40]
   16368:	ldp	x29, x30, [sp], #48
   1636c:	ret
   16370:	stp	x29, x30, [sp, #-48]!
   16374:	mov	x29, sp
   16378:	str	x0, [sp, #24]
   1637c:	str	x1, [sp, #16]
   16380:	add	x0, sp, #0x20
   16384:	ldr	x3, [sp, #24]
   16388:	ldr	x2, [sp, #16]
   1638c:	mov	x1, x0
   16390:	mov	w0, #0x1                   	// #1
   16394:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16398:	cmp	w0, #0x0
   1639c:	b.ne	163a8 <PyFloat_FromString@plt+0xf858>  // b.any
   163a0:	mov	x0, #0x0                   	// #0
   163a4:	b	163e8 <PyFloat_FromString@plt+0xf898>
   163a8:	ldr	x0, [sp, #32]
   163ac:	add	x0, x0, #0x18
   163b0:	bl	25400 <PyInit__decimal@@Base+0xd728>
   163b4:	cmp	w0, #0x0
   163b8:	b.eq	163c4 <PyFloat_FromString@plt+0xf874>  // b.none
   163bc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   163c0:	b	163c8 <PyFloat_FromString@plt+0xf878>
   163c4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   163c8:	str	x0, [sp, #40]
   163cc:	ldr	x0, [sp, #32]
   163d0:	mov	x2, x0
   163d4:	mov	w1, #0x13b3                	// #5043
   163d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   163dc:	add	x0, x0, #0x9c0
   163e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   163e4:	ldr	x0, [sp, #40]
   163e8:	ldp	x29, x30, [sp], #48
   163ec:	ret
   163f0:	stp	x29, x30, [sp, #-48]!
   163f4:	mov	x29, sp
   163f8:	str	x0, [sp, #24]
   163fc:	str	x1, [sp, #16]
   16400:	add	x0, sp, #0x20
   16404:	ldr	x3, [sp, #24]
   16408:	ldr	x2, [sp, #16]
   1640c:	mov	x1, x0
   16410:	mov	w0, #0x1                   	// #1
   16414:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16418:	cmp	w0, #0x0
   1641c:	b.ne	16428 <PyFloat_FromString@plt+0xf8d8>  // b.any
   16420:	mov	x0, #0x0                   	// #0
   16424:	b	16468 <PyFloat_FromString@plt+0xf918>
   16428:	ldr	x0, [sp, #32]
   1642c:	add	x0, x0, #0x18
   16430:	bl	2541c <PyInit__decimal@@Base+0xd744>
   16434:	cmp	w0, #0x0
   16438:	b.eq	16444 <PyFloat_FromString@plt+0xf8f4>  // b.none
   1643c:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   16440:	b	16448 <PyFloat_FromString@plt+0xf8f8>
   16444:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   16448:	str	x0, [sp, #40]
   1644c:	ldr	x0, [sp, #32]
   16450:	mov	x2, x0
   16454:	mov	w1, #0x13b4                	// #5044
   16458:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1645c:	add	x0, x0, #0x9c0
   16460:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16464:	ldr	x0, [sp, #40]
   16468:	ldp	x29, x30, [sp], #48
   1646c:	ret
   16470:	stp	x29, x30, [sp, #-48]!
   16474:	mov	x29, sp
   16478:	str	x0, [sp, #24]
   1647c:	str	x1, [sp, #16]
   16480:	add	x0, sp, #0x20
   16484:	ldr	x3, [sp, #24]
   16488:	ldr	x2, [sp, #16]
   1648c:	mov	x1, x0
   16490:	mov	w0, #0x1                   	// #1
   16494:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16498:	cmp	w0, #0x0
   1649c:	b.ne	164a8 <PyFloat_FromString@plt+0xf958>  // b.any
   164a0:	mov	x0, #0x0                   	// #0
   164a4:	b	164e8 <PyFloat_FromString@plt+0xf998>
   164a8:	ldr	x0, [sp, #32]
   164ac:	add	x0, x0, #0x18
   164b0:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   164b4:	cmp	w0, #0x0
   164b8:	b.eq	164c4 <PyFloat_FromString@plt+0xf974>  // b.none
   164bc:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   164c0:	b	164c8 <PyFloat_FromString@plt+0xf978>
   164c4:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   164c8:	str	x0, [sp, #40]
   164cc:	ldr	x0, [sp, #32]
   164d0:	mov	x2, x0
   164d4:	mov	w1, #0x13b5                	// #5045
   164d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   164dc:	add	x0, x0, #0x9c0
   164e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   164e4:	ldr	x0, [sp, #40]
   164e8:	ldp	x29, x30, [sp], #48
   164ec:	ret
   164f0:	stp	x29, x30, [sp, #-32]!
   164f4:	mov	x29, sp
   164f8:	str	x0, [sp, #24]
   164fc:	str	x1, [sp, #16]
   16500:	ldr	x0, [sp, #16]
   16504:	ldr	x1, [x0, #8]
   16508:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1650c:	add	x0, x0, #0x360
   16510:	cmp	x1, x0
   16514:	b.eq	1655c <PyFloat_FromString@plt+0xfa0c>  // b.none
   16518:	ldr	x0, [sp, #16]
   1651c:	ldr	x2, [x0, #8]
   16520:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   16524:	add	x1, x0, #0x360
   16528:	mov	x0, x2
   1652c:	bl	6a70 <PyType_IsSubtype@plt>
   16530:	cmp	w0, #0x0
   16534:	b.ne	1655c <PyFloat_FromString@plt+0xfa0c>  // b.any
   16538:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1653c:	ldr	x0, [x0, #3936]
   16540:	ldr	x2, [x0]
   16544:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   16548:	add	x1, x0, #0x730
   1654c:	mov	x0, x2
   16550:	bl	66f0 <PyErr_SetString@plt>
   16554:	mov	x0, #0x0                   	// #0
   16558:	b	16580 <PyFloat_FromString@plt+0xfa30>
   1655c:	ldr	x0, [sp, #16]
   16560:	add	x0, x0, #0x18
   16564:	bl	2532c <PyInit__decimal@@Base+0xd654>
   16568:	cmp	w0, #0x0
   1656c:	b.eq	16578 <PyFloat_FromString@plt+0xfa28>  // b.none
   16570:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   16574:	b	1657c <PyFloat_FromString@plt+0xfa2c>
   16578:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   1657c:	nop
   16580:	ldp	x29, x30, [sp], #32
   16584:	ret
   16588:	stp	x29, x30, [sp, #-48]!
   1658c:	mov	x29, sp
   16590:	str	x0, [sp, #24]
   16594:	str	x1, [sp, #16]
   16598:	add	x0, sp, #0x20
   1659c:	ldr	x3, [sp, #24]
   165a0:	ldr	x2, [sp, #16]
   165a4:	mov	x1, x0
   165a8:	mov	w0, #0x1                   	// #1
   165ac:	bl	b168 <PyFloat_FromString@plt+0x4618>
   165b0:	cmp	w0, #0x0
   165b4:	b.ne	165c0 <PyFloat_FromString@plt+0xfa70>  // b.any
   165b8:	mov	x0, #0x0                   	// #0
   165bc:	b	165ec <PyFloat_FromString@plt+0xfa9c>
   165c0:	ldr	x0, [sp, #32]
   165c4:	ldr	x1, [sp, #24]
   165c8:	bl	aad4 <PyFloat_FromString@plt+0x3f84>
   165cc:	str	x0, [sp, #40]
   165d0:	ldr	x0, [sp, #32]
   165d4:	mov	x2, x0
   165d8:	mov	w1, #0x13cc                	// #5068
   165dc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   165e0:	add	x0, x0, #0x9c0
   165e4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   165e8:	ldr	x0, [sp, #40]
   165ec:	ldp	x29, x30, [sp], #48
   165f0:	ret
   165f4:	stp	x29, x30, [sp, #-32]!
   165f8:	mov	x29, sp
   165fc:	str	x0, [sp, #24]
   16600:	str	x1, [sp, #16]
   16604:	ldr	x0, [sp, #16]
   16608:	ldr	x1, [x0, #8]
   1660c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   16610:	add	x0, x0, #0x360
   16614:	cmp	x1, x0
   16618:	b.eq	16660 <PyFloat_FromString@plt+0xfb10>  // b.none
   1661c:	ldr	x0, [sp, #16]
   16620:	ldr	x2, [x0, #8]
   16624:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   16628:	add	x1, x0, #0x360
   1662c:	mov	x0, x2
   16630:	bl	6a70 <PyType_IsSubtype@plt>
   16634:	cmp	w0, #0x0
   16638:	b.ne	16660 <PyFloat_FromString@plt+0xfb10>  // b.any
   1663c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   16640:	ldr	x0, [x0, #3936]
   16644:	ldr	x2, [x0]
   16648:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1664c:	add	x1, x0, #0x730
   16650:	mov	x0, x2
   16654:	bl	66f0 <PyErr_SetString@plt>
   16658:	mov	x0, #0x0                   	// #0
   1665c:	b	1666c <PyFloat_FromString@plt+0xfb1c>
   16660:	ldr	x0, [sp, #16]
   16664:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   16668:	ldr	x0, [sp, #16]
   1666c:	ldp	x29, x30, [sp], #32
   16670:	ret
   16674:	stp	x29, x30, [sp, #-64]!
   16678:	mov	x29, sp
   1667c:	str	x0, [sp, #24]
   16680:	str	x1, [sp, #16]
   16684:	str	wzr, [sp, #44]
   16688:	add	x0, sp, #0x30
   1668c:	ldr	x3, [sp, #24]
   16690:	ldr	x2, [sp, #16]
   16694:	mov	x1, x0
   16698:	mov	w0, #0x1                   	// #1
   1669c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   166a0:	cmp	w0, #0x0
   166a4:	b.ne	166b0 <PyFloat_FromString@plt+0xfb60>  // b.any
   166a8:	mov	x0, #0x0                   	// #0
   166ac:	b	16760 <PyFloat_FromString@plt+0xfc10>
   166b0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   166b4:	add	x0, x0, #0x360
   166b8:	bl	912c <PyFloat_FromString@plt+0x25dc>
   166bc:	str	x0, [sp, #56]
   166c0:	ldr	x0, [sp, #56]
   166c4:	cmp	x0, #0x0
   166c8:	b.ne	166ec <PyFloat_FromString@plt+0xfb9c>  // b.any
   166cc:	ldr	x0, [sp, #48]
   166d0:	mov	x2, x0
   166d4:	mov	w1, #0x13e7                	// #5095
   166d8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   166dc:	add	x0, x0, #0x9c0
   166e0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   166e4:	mov	x0, #0x0                   	// #0
   166e8:	b	16760 <PyFloat_FromString@plt+0xfc10>
   166ec:	ldr	x0, [sp, #56]
   166f0:	add	x3, x0, #0x18
   166f4:	ldr	x0, [sp, #48]
   166f8:	add	x0, x0, #0x18
   166fc:	add	x1, sp, #0x2c
   16700:	mov	x2, x1
   16704:	mov	x1, x0
   16708:	mov	x0, x3
   1670c:	bl	29bdc <PyInit__decimal@@Base+0x11f04>
   16710:	ldr	x0, [sp, #48]
   16714:	mov	x2, x0
   16718:	mov	w1, #0x13ec                	// #5100
   1671c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16720:	add	x0, x0, #0x9c0
   16724:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16728:	ldr	w0, [sp, #44]
   1672c:	mov	w1, w0
   16730:	ldr	x0, [sp, #24]
   16734:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   16738:	cmp	w0, #0x0
   1673c:	b.eq	1675c <PyFloat_FromString@plt+0xfc0c>  // b.none
   16740:	ldr	x2, [sp, #56]
   16744:	mov	w1, #0x13ee                	// #5102
   16748:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1674c:	add	x0, x0, #0x9c0
   16750:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16754:	mov	x0, #0x0                   	// #0
   16758:	b	16760 <PyFloat_FromString@plt+0xfc10>
   1675c:	ldr	x0, [sp, #56]
   16760:	ldp	x29, x30, [sp], #64
   16764:	ret
   16768:	stp	x29, x30, [sp, #-48]!
   1676c:	mov	x29, sp
   16770:	str	x0, [sp, #24]
   16774:	str	x1, [sp, #16]
   16778:	add	x0, sp, #0x28
   1677c:	ldr	x3, [sp, #24]
   16780:	ldr	x2, [sp, #16]
   16784:	mov	x1, x0
   16788:	mov	w0, #0x1                   	// #1
   1678c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16790:	cmp	w0, #0x0
   16794:	b.ne	167a0 <PyFloat_FromString@plt+0xfc50>  // b.any
   16798:	mov	x0, #0x0                   	// #0
   1679c:	b	167a4 <PyFloat_FromString@plt+0xfc54>
   167a0:	ldr	x0, [sp, #40]
   167a4:	ldp	x29, x30, [sp], #48
   167a8:	ret
   167ac:	stp	x29, x30, [sp, #-64]!
   167b0:	mov	x29, sp
   167b4:	str	x0, [sp, #24]
   167b8:	str	x1, [sp, #16]
   167bc:	str	wzr, [sp, #44]
   167c0:	add	x0, sp, #0x30
   167c4:	ldr	x3, [sp, #24]
   167c8:	ldr	x2, [sp, #16]
   167cc:	mov	x1, x0
   167d0:	mov	w0, #0x1                   	// #1
   167d4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   167d8:	cmp	w0, #0x0
   167dc:	b.ne	167e8 <PyFloat_FromString@plt+0xfc98>  // b.any
   167e0:	mov	x0, #0x0                   	// #0
   167e4:	b	16898 <PyFloat_FromString@plt+0xfd48>
   167e8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   167ec:	add	x0, x0, #0x360
   167f0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   167f4:	str	x0, [sp, #56]
   167f8:	ldr	x0, [sp, #56]
   167fc:	cmp	x0, #0x0
   16800:	b.ne	16824 <PyFloat_FromString@plt+0xfcd4>  // b.any
   16804:	ldr	x0, [sp, #48]
   16808:	mov	x2, x0
   1680c:	mov	w1, #0x1408                	// #5128
   16810:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16814:	add	x0, x0, #0x9c0
   16818:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1681c:	mov	x0, #0x0                   	// #0
   16820:	b	16898 <PyFloat_FromString@plt+0xfd48>
   16824:	ldr	x0, [sp, #56]
   16828:	add	x3, x0, #0x18
   1682c:	ldr	x0, [sp, #48]
   16830:	add	x0, x0, #0x18
   16834:	add	x1, sp, #0x2c
   16838:	mov	x2, x1
   1683c:	mov	x1, x0
   16840:	mov	x0, x3
   16844:	bl	29c40 <PyInit__decimal@@Base+0x11f68>
   16848:	ldr	x0, [sp, #48]
   1684c:	mov	x2, x0
   16850:	mov	w1, #0x140d                	// #5133
   16854:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16858:	add	x0, x0, #0x9c0
   1685c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16860:	ldr	w0, [sp, #44]
   16864:	mov	w1, w0
   16868:	ldr	x0, [sp, #24]
   1686c:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   16870:	cmp	w0, #0x0
   16874:	b.eq	16894 <PyFloat_FromString@plt+0xfd44>  // b.none
   16878:	ldr	x2, [sp, #56]
   1687c:	mov	w1, #0x140f                	// #5135
   16880:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16884:	add	x0, x0, #0x9c0
   16888:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1688c:	mov	x0, #0x0                   	// #0
   16890:	b	16898 <PyFloat_FromString@plt+0xfd48>
   16894:	ldr	x0, [sp, #56]
   16898:	ldp	x29, x30, [sp], #64
   1689c:	ret
   168a0:	stp	x29, x30, [sp, #-64]!
   168a4:	mov	x29, sp
   168a8:	str	x0, [sp, #24]
   168ac:	str	x1, [sp, #16]
   168b0:	str	wzr, [sp, #44]
   168b4:	add	x0, sp, #0x30
   168b8:	ldr	x3, [sp, #24]
   168bc:	ldr	x2, [sp, #16]
   168c0:	mov	x1, x0
   168c4:	mov	w0, #0x1                   	// #1
   168c8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   168cc:	cmp	w0, #0x0
   168d0:	b.ne	168dc <PyFloat_FromString@plt+0xfd8c>  // b.any
   168d4:	mov	x0, #0x0                   	// #0
   168d8:	b	16994 <PyFloat_FromString@plt+0xfe44>
   168dc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   168e0:	add	x0, x0, #0x360
   168e4:	bl	912c <PyFloat_FromString@plt+0x25dc>
   168e8:	str	x0, [sp, #56]
   168ec:	ldr	x0, [sp, #56]
   168f0:	cmp	x0, #0x0
   168f4:	b.ne	16918 <PyFloat_FromString@plt+0xfdc8>  // b.any
   168f8:	ldr	x0, [sp, #48]
   168fc:	mov	x2, x0
   16900:	mov	w1, #0x1416                	// #5142
   16904:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16908:	add	x0, x0, #0x9c0
   1690c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16910:	mov	x0, #0x0                   	// #0
   16914:	b	16994 <PyFloat_FromString@plt+0xfe44>
   16918:	ldr	x0, [sp, #56]
   1691c:	add	x4, x0, #0x18
   16920:	ldr	x0, [sp, #48]
   16924:	add	x1, x0, #0x18
   16928:	ldr	x0, [sp, #24]
   1692c:	add	x0, x0, #0x10
   16930:	add	x2, sp, #0x2c
   16934:	mov	x3, x2
   16938:	mov	x2, x0
   1693c:	mov	x0, x4
   16940:	bl	2cb60 <PyInit__decimal@@Base+0x14e88>
   16944:	ldr	x0, [sp, #48]
   16948:	mov	x2, x0
   1694c:	mov	w1, #0x1416                	// #5142
   16950:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16954:	add	x0, x0, #0x9c0
   16958:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1695c:	ldr	w0, [sp, #44]
   16960:	mov	w1, w0
   16964:	ldr	x0, [sp, #24]
   16968:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1696c:	cmp	w0, #0x0
   16970:	b.eq	16990 <PyFloat_FromString@plt+0xfe40>  // b.none
   16974:	ldr	x2, [sp, #56]
   16978:	mov	w1, #0x1416                	// #5142
   1697c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16980:	add	x0, x0, #0x9c0
   16984:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16988:	mov	x0, #0x0                   	// #0
   1698c:	b	16994 <PyFloat_FromString@plt+0xfe44>
   16990:	ldr	x0, [sp, #56]
   16994:	ldp	x29, x30, [sp], #64
   16998:	ret
   1699c:	stp	x29, x30, [sp, #-64]!
   169a0:	mov	x29, sp
   169a4:	str	x0, [sp, #24]
   169a8:	str	x1, [sp, #16]
   169ac:	str	wzr, [sp, #44]
   169b0:	add	x0, sp, #0x30
   169b4:	ldr	x3, [sp, #24]
   169b8:	ldr	x2, [sp, #16]
   169bc:	mov	x1, x0
   169c0:	mov	w0, #0x1                   	// #1
   169c4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   169c8:	cmp	w0, #0x0
   169cc:	b.ne	169d8 <PyFloat_FromString@plt+0xfe88>  // b.any
   169d0:	mov	x0, #0x0                   	// #0
   169d4:	b	16a90 <PyFloat_FromString@plt+0xff40>
   169d8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   169dc:	add	x0, x0, #0x360
   169e0:	bl	912c <PyFloat_FromString@plt+0x25dc>
   169e4:	str	x0, [sp, #56]
   169e8:	ldr	x0, [sp, #56]
   169ec:	cmp	x0, #0x0
   169f0:	b.ne	16a14 <PyFloat_FromString@plt+0xfec4>  // b.any
   169f4:	ldr	x0, [sp, #48]
   169f8:	mov	x2, x0
   169fc:	mov	w1, #0x1417                	// #5143
   16a00:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16a04:	add	x0, x0, #0x9c0
   16a08:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16a0c:	mov	x0, #0x0                   	// #0
   16a10:	b	16a90 <PyFloat_FromString@plt+0xff40>
   16a14:	ldr	x0, [sp, #56]
   16a18:	add	x4, x0, #0x18
   16a1c:	ldr	x0, [sp, #48]
   16a20:	add	x1, x0, #0x18
   16a24:	ldr	x0, [sp, #24]
   16a28:	add	x0, x0, #0x10
   16a2c:	add	x2, sp, #0x2c
   16a30:	mov	x3, x2
   16a34:	mov	x2, x0
   16a38:	mov	x0, x4
   16a3c:	bl	2c790 <PyInit__decimal@@Base+0x14ab8>
   16a40:	ldr	x0, [sp, #48]
   16a44:	mov	x2, x0
   16a48:	mov	w1, #0x1417                	// #5143
   16a4c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16a50:	add	x0, x0, #0x9c0
   16a54:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16a58:	ldr	w0, [sp, #44]
   16a5c:	mov	w1, w0
   16a60:	ldr	x0, [sp, #24]
   16a64:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   16a68:	cmp	w0, #0x0
   16a6c:	b.eq	16a8c <PyFloat_FromString@plt+0xff3c>  // b.none
   16a70:	ldr	x2, [sp, #56]
   16a74:	mov	w1, #0x1417                	// #5143
   16a78:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16a7c:	add	x0, x0, #0x9c0
   16a80:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16a84:	mov	x0, #0x0                   	// #0
   16a88:	b	16a90 <PyFloat_FromString@plt+0xff40>
   16a8c:	ldr	x0, [sp, #56]
   16a90:	ldp	x29, x30, [sp], #64
   16a94:	ret
   16a98:	stp	x29, x30, [sp, #-48]!
   16a9c:	mov	x29, sp
   16aa0:	str	x0, [sp, #24]
   16aa4:	str	x1, [sp, #16]
   16aa8:	add	x0, sp, #0x20
   16aac:	ldr	x3, [sp, #24]
   16ab0:	ldr	x2, [sp, #16]
   16ab4:	mov	x1, x0
   16ab8:	mov	w0, #0x1                   	// #1
   16abc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16ac0:	cmp	w0, #0x0
   16ac4:	b.ne	16ad0 <PyFloat_FromString@plt+0xff80>  // b.any
   16ac8:	mov	x0, #0x0                   	// #0
   16acc:	b	16b10 <PyFloat_FromString@plt+0xffc0>
   16ad0:	ldr	x0, [sp, #32]
   16ad4:	add	x2, x0, #0x18
   16ad8:	ldr	x0, [sp, #24]
   16adc:	add	x0, x0, #0x10
   16ae0:	mov	x1, x0
   16ae4:	mov	x0, x2
   16ae8:	bl	2c574 <PyInit__decimal@@Base+0x1489c>
   16aec:	str	x0, [sp, #40]
   16af0:	ldr	x0, [sp, #32]
   16af4:	mov	x2, x0
   16af8:	mov	w1, #0x1422                	// #5154
   16afc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16b00:	add	x0, x0, #0x9c0
   16b04:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16b08:	ldr	x0, [sp, #40]
   16b0c:	bl	6a10 <PyUnicode_FromString@plt>
   16b10:	ldp	x29, x30, [sp], #48
   16b14:	ret
   16b18:	stp	x29, x30, [sp, #-64]!
   16b1c:	mov	x29, sp
   16b20:	str	x0, [sp, #24]
   16b24:	str	x1, [sp, #16]
   16b28:	add	x0, sp, #0x28
   16b2c:	ldr	x3, [sp, #24]
   16b30:	ldr	x2, [sp, #16]
   16b34:	mov	x1, x0
   16b38:	mov	w0, #0x1                   	// #1
   16b3c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16b40:	cmp	w0, #0x0
   16b44:	b.ne	16b50 <PyFloat_FromString@plt+0x10000>  // b.any
   16b48:	mov	x0, #0x0                   	// #0
   16b4c:	b	16bc4 <PyFloat_FromString@plt+0x10074>
   16b50:	ldr	x0, [sp, #40]
   16b54:	add	x1, x0, #0x18
   16b58:	ldr	x0, [sp, #24]
   16b5c:	ldr	w2, [x0, #80]
   16b60:	add	x0, sp, #0x20
   16b64:	bl	21380 <PyInit__decimal@@Base+0x96a8>
   16b68:	str	x0, [sp, #56]
   16b6c:	ldr	x0, [sp, #40]
   16b70:	mov	x2, x0
   16b74:	mov	w1, #0x1432                	// #5170
   16b78:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16b7c:	add	x0, x0, #0x9c0
   16b80:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16b84:	ldr	x0, [sp, #56]
   16b88:	cmp	x0, #0x0
   16b8c:	b.ge	16b9c <PyFloat_FromString@plt+0x1004c>  // b.tcont
   16b90:	bl	6690 <PyErr_NoMemory@plt>
   16b94:	mov	x0, #0x0                   	// #0
   16b98:	b	16bc4 <PyFloat_FromString@plt+0x10074>
   16b9c:	ldr	x0, [sp, #32]
   16ba0:	ldr	x1, [sp, #56]
   16ba4:	bl	b8b4 <PyFloat_FromString@plt+0x4d64>
   16ba8:	str	x0, [sp, #48]
   16bac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   16bb0:	add	x0, x0, #0x6f8
   16bb4:	ldr	x1, [x0]
   16bb8:	ldr	x0, [sp, #32]
   16bbc:	blr	x1
   16bc0:	ldr	x0, [sp, #48]
   16bc4:	ldp	x29, x30, [sp], #64
   16bc8:	ret
   16bcc:	stp	x29, x30, [sp, #-64]!
   16bd0:	mov	x29, sp
   16bd4:	str	x0, [sp, #24]
   16bd8:	str	x1, [sp, #16]
   16bdc:	add	x0, sp, #0x28
   16be0:	ldr	x3, [sp, #24]
   16be4:	ldr	x2, [sp, #16]
   16be8:	mov	x1, x0
   16bec:	mov	w0, #0x1                   	// #1
   16bf0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16bf4:	cmp	w0, #0x0
   16bf8:	b.ne	16c04 <PyFloat_FromString@plt+0x100b4>  // b.any
   16bfc:	mov	x0, #0x0                   	// #0
   16c00:	b	16c78 <PyFloat_FromString@plt+0x10128>
   16c04:	ldr	x0, [sp, #40]
   16c08:	add	x1, x0, #0x18
   16c0c:	ldr	x0, [sp, #24]
   16c10:	ldr	w2, [x0, #80]
   16c14:	add	x0, sp, #0x20
   16c18:	bl	213d8 <PyInit__decimal@@Base+0x9700>
   16c1c:	str	x0, [sp, #56]
   16c20:	ldr	x0, [sp, #40]
   16c24:	mov	x2, x0
   16c28:	mov	w1, #0x1449                	// #5193
   16c2c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16c30:	add	x0, x0, #0x9c0
   16c34:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16c38:	ldr	x0, [sp, #56]
   16c3c:	cmp	x0, #0x0
   16c40:	b.ge	16c50 <PyFloat_FromString@plt+0x10100>  // b.tcont
   16c44:	bl	6690 <PyErr_NoMemory@plt>
   16c48:	mov	x0, #0x0                   	// #0
   16c4c:	b	16c78 <PyFloat_FromString@plt+0x10128>
   16c50:	ldr	x0, [sp, #32]
   16c54:	ldr	x1, [sp, #56]
   16c58:	bl	b8b4 <PyFloat_FromString@plt+0x4d64>
   16c5c:	str	x0, [sp, #48]
   16c60:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   16c64:	add	x0, x0, #0x6f8
   16c68:	ldr	x1, [x0]
   16c6c:	ldr	x0, [sp, #32]
   16c70:	blr	x1
   16c74:	ldr	x0, [sp, #48]
   16c78:	ldp	x29, x30, [sp], #64
   16c7c:	ret
   16c80:	stp	x29, x30, [sp, #-80]!
   16c84:	mov	x29, sp
   16c88:	str	x0, [sp, #24]
   16c8c:	str	x1, [sp, #16]
   16c90:	add	x1, sp, #0x38
   16c94:	add	x0, sp, #0x40
   16c98:	mov	x3, x1
   16c9c:	mov	x2, x0
   16ca0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   16ca4:	add	x1, x0, #0x720
   16ca8:	ldr	x0, [sp, #16]
   16cac:	bl	6980 <PyArg_ParseTuple@plt>
   16cb0:	cmp	w0, #0x0
   16cb4:	b.ne	16cc0 <PyFloat_FromString@plt+0x10170>  // b.any
   16cb8:	mov	x0, #0x0                   	// #0
   16cbc:	b	16ddc <PyFloat_FromString@plt+0x1028c>
   16cc0:	ldr	x1, [sp, #64]
   16cc4:	add	x0, sp, #0x30
   16cc8:	ldr	x3, [sp, #24]
   16ccc:	mov	x2, x1
   16cd0:	mov	x1, x0
   16cd4:	mov	w0, #0x1                   	// #1
   16cd8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16cdc:	cmp	w0, #0x0
   16ce0:	b.ne	16cec <PyFloat_FromString@plt+0x1019c>  // b.any
   16ce4:	mov	x0, #0x0                   	// #0
   16ce8:	b	16ddc <PyFloat_FromString@plt+0x1028c>
   16cec:	ldr	x1, [sp, #56]
   16cf0:	add	x0, sp, #0x28
   16cf4:	ldr	x3, [sp, #24]
   16cf8:	mov	x2, x1
   16cfc:	mov	x1, x0
   16d00:	mov	w0, #0x1                   	// #1
   16d04:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16d08:	cmp	w0, #0x0
   16d0c:	b.ne	16d30 <PyFloat_FromString@plt+0x101e0>  // b.any
   16d10:	ldr	x0, [sp, #48]
   16d14:	mov	x2, x0
   16d18:	mov	w1, #0x1456                	// #5206
   16d1c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16d20:	add	x0, x0, #0x9c0
   16d24:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16d28:	mov	x0, #0x0                   	// #0
   16d2c:	b	16ddc <PyFloat_FromString@plt+0x1028c>
   16d30:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   16d34:	add	x0, x0, #0x360
   16d38:	bl	912c <PyFloat_FromString@plt+0x25dc>
   16d3c:	str	x0, [sp, #72]
   16d40:	ldr	x0, [sp, #72]
   16d44:	cmp	x0, #0x0
   16d48:	b.ne	16d84 <PyFloat_FromString@plt+0x10234>  // b.any
   16d4c:	ldr	x0, [sp, #48]
   16d50:	mov	x2, x0
   16d54:	mov	w1, #0x1456                	// #5206
   16d58:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16d5c:	add	x0, x0, #0x9c0
   16d60:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16d64:	ldr	x0, [sp, #40]
   16d68:	mov	x2, x0
   16d6c:	mov	w1, #0x1456                	// #5206
   16d70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16d74:	add	x0, x0, #0x9c0
   16d78:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16d7c:	mov	x0, #0x0                   	// #0
   16d80:	b	16ddc <PyFloat_FromString@plt+0x1028c>
   16d84:	ldr	x0, [sp, #72]
   16d88:	add	x3, x0, #0x18
   16d8c:	ldr	x0, [sp, #48]
   16d90:	add	x1, x0, #0x18
   16d94:	ldr	x0, [sp, #40]
   16d98:	add	x0, x0, #0x18
   16d9c:	mov	x2, x0
   16da0:	mov	x0, x3
   16da4:	bl	2ac64 <PyInit__decimal@@Base+0x12f8c>
   16da8:	ldr	x0, [sp, #48]
   16dac:	mov	x2, x0
   16db0:	mov	w1, #0x1456                	// #5206
   16db4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16db8:	add	x0, x0, #0x9c0
   16dbc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16dc0:	ldr	x0, [sp, #40]
   16dc4:	mov	x2, x0
   16dc8:	mov	w1, #0x1456                	// #5206
   16dcc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16dd0:	add	x0, x0, #0x9c0
   16dd4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16dd8:	ldr	x0, [sp, #72]
   16ddc:	ldp	x29, x30, [sp], #80
   16de0:	ret
   16de4:	stp	x29, x30, [sp, #-80]!
   16de8:	mov	x29, sp
   16dec:	str	x0, [sp, #24]
   16df0:	str	x1, [sp, #16]
   16df4:	add	x1, sp, #0x38
   16df8:	add	x0, sp, #0x40
   16dfc:	mov	x3, x1
   16e00:	mov	x2, x0
   16e04:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   16e08:	add	x1, x0, #0x720
   16e0c:	ldr	x0, [sp, #16]
   16e10:	bl	6980 <PyArg_ParseTuple@plt>
   16e14:	cmp	w0, #0x0
   16e18:	b.ne	16e24 <PyFloat_FromString@plt+0x102d4>  // b.any
   16e1c:	mov	x0, #0x0                   	// #0
   16e20:	b	16f40 <PyFloat_FromString@plt+0x103f0>
   16e24:	ldr	x1, [sp, #64]
   16e28:	add	x0, sp, #0x30
   16e2c:	ldr	x3, [sp, #24]
   16e30:	mov	x2, x1
   16e34:	mov	x1, x0
   16e38:	mov	w0, #0x1                   	// #1
   16e3c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16e40:	cmp	w0, #0x0
   16e44:	b.ne	16e50 <PyFloat_FromString@plt+0x10300>  // b.any
   16e48:	mov	x0, #0x0                   	// #0
   16e4c:	b	16f40 <PyFloat_FromString@plt+0x103f0>
   16e50:	ldr	x1, [sp, #56]
   16e54:	add	x0, sp, #0x28
   16e58:	ldr	x3, [sp, #24]
   16e5c:	mov	x2, x1
   16e60:	mov	x1, x0
   16e64:	mov	w0, #0x1                   	// #1
   16e68:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16e6c:	cmp	w0, #0x0
   16e70:	b.ne	16e94 <PyFloat_FromString@plt+0x10344>  // b.any
   16e74:	ldr	x0, [sp, #48]
   16e78:	mov	x2, x0
   16e7c:	mov	w1, #0x1457                	// #5207
   16e80:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16e84:	add	x0, x0, #0x9c0
   16e88:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16e8c:	mov	x0, #0x0                   	// #0
   16e90:	b	16f40 <PyFloat_FromString@plt+0x103f0>
   16e94:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   16e98:	add	x0, x0, #0x360
   16e9c:	bl	912c <PyFloat_FromString@plt+0x25dc>
   16ea0:	str	x0, [sp, #72]
   16ea4:	ldr	x0, [sp, #72]
   16ea8:	cmp	x0, #0x0
   16eac:	b.ne	16ee8 <PyFloat_FromString@plt+0x10398>  // b.any
   16eb0:	ldr	x0, [sp, #48]
   16eb4:	mov	x2, x0
   16eb8:	mov	w1, #0x1457                	// #5207
   16ebc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16ec0:	add	x0, x0, #0x9c0
   16ec4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16ec8:	ldr	x0, [sp, #40]
   16ecc:	mov	x2, x0
   16ed0:	mov	w1, #0x1457                	// #5207
   16ed4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16ed8:	add	x0, x0, #0x9c0
   16edc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16ee0:	mov	x0, #0x0                   	// #0
   16ee4:	b	16f40 <PyFloat_FromString@plt+0x103f0>
   16ee8:	ldr	x0, [sp, #72]
   16eec:	add	x3, x0, #0x18
   16ef0:	ldr	x0, [sp, #48]
   16ef4:	add	x1, x0, #0x18
   16ef8:	ldr	x0, [sp, #40]
   16efc:	add	x0, x0, #0x18
   16f00:	mov	x2, x0
   16f04:	mov	x0, x3
   16f08:	bl	2ad4c <PyInit__decimal@@Base+0x13074>
   16f0c:	ldr	x0, [sp, #48]
   16f10:	mov	x2, x0
   16f14:	mov	w1, #0x1457                	// #5207
   16f18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16f1c:	add	x0, x0, #0x9c0
   16f20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16f24:	ldr	x0, [sp, #40]
   16f28:	mov	x2, x0
   16f2c:	mov	w1, #0x1457                	// #5207
   16f30:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16f34:	add	x0, x0, #0x9c0
   16f38:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16f3c:	ldr	x0, [sp, #72]
   16f40:	ldp	x29, x30, [sp], #80
   16f44:	ret
   16f48:	stp	x29, x30, [sp, #-80]!
   16f4c:	mov	x29, sp
   16f50:	str	x0, [sp, #24]
   16f54:	str	x1, [sp, #16]
   16f58:	str	wzr, [sp, #36]
   16f5c:	add	x1, sp, #0x38
   16f60:	add	x0, sp, #0x40
   16f64:	mov	x3, x1
   16f68:	mov	x2, x0
   16f6c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   16f70:	add	x1, x0, #0x720
   16f74:	ldr	x0, [sp, #16]
   16f78:	bl	6980 <PyArg_ParseTuple@plt>
   16f7c:	cmp	w0, #0x0
   16f80:	b.ne	16f8c <PyFloat_FromString@plt+0x1043c>  // b.any
   16f84:	mov	x0, #0x0                   	// #0
   16f88:	b	170e4 <PyFloat_FromString@plt+0x10594>
   16f8c:	ldr	x1, [sp, #64]
   16f90:	add	x0, sp, #0x30
   16f94:	ldr	x3, [sp, #24]
   16f98:	mov	x2, x1
   16f9c:	mov	x1, x0
   16fa0:	mov	w0, #0x1                   	// #1
   16fa4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16fa8:	cmp	w0, #0x0
   16fac:	b.ne	16fb8 <PyFloat_FromString@plt+0x10468>  // b.any
   16fb0:	mov	x0, #0x0                   	// #0
   16fb4:	b	170e4 <PyFloat_FromString@plt+0x10594>
   16fb8:	ldr	x1, [sp, #56]
   16fbc:	add	x0, sp, #0x28
   16fc0:	ldr	x3, [sp, #24]
   16fc4:	mov	x2, x1
   16fc8:	mov	x1, x0
   16fcc:	mov	w0, #0x1                   	// #1
   16fd0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   16fd4:	cmp	w0, #0x0
   16fd8:	b.ne	16ffc <PyFloat_FromString@plt+0x104ac>  // b.any
   16fdc:	ldr	x0, [sp, #48]
   16fe0:	mov	x2, x0
   16fe4:	mov	w1, #0x1465                	// #5221
   16fe8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   16fec:	add	x0, x0, #0x9c0
   16ff0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   16ff4:	mov	x0, #0x0                   	// #0
   16ff8:	b	170e4 <PyFloat_FromString@plt+0x10594>
   16ffc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17000:	add	x0, x0, #0x360
   17004:	bl	912c <PyFloat_FromString@plt+0x25dc>
   17008:	str	x0, [sp, #72]
   1700c:	ldr	x0, [sp, #72]
   17010:	cmp	x0, #0x0
   17014:	b.ne	17050 <PyFloat_FromString@plt+0x10500>  // b.any
   17018:	ldr	x0, [sp, #48]
   1701c:	mov	x2, x0
   17020:	mov	w1, #0x1469                	// #5225
   17024:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17028:	add	x0, x0, #0x9c0
   1702c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17030:	ldr	x0, [sp, #40]
   17034:	mov	x2, x0
   17038:	mov	w1, #0x146a                	// #5226
   1703c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17040:	add	x0, x0, #0x9c0
   17044:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17048:	mov	x0, #0x0                   	// #0
   1704c:	b	170e4 <PyFloat_FromString@plt+0x10594>
   17050:	ldr	x0, [sp, #72]
   17054:	add	x4, x0, #0x18
   17058:	ldr	x0, [sp, #48]
   1705c:	add	x1, x0, #0x18
   17060:	ldr	x0, [sp, #40]
   17064:	add	x0, x0, #0x18
   17068:	add	x2, sp, #0x24
   1706c:	mov	x3, x2
   17070:	mov	x2, x0
   17074:	mov	x0, x4
   17078:	bl	29c88 <PyInit__decimal@@Base+0x11fb0>
   1707c:	ldr	x0, [sp, #48]
   17080:	mov	x2, x0
   17084:	mov	w1, #0x146f                	// #5231
   17088:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1708c:	add	x0, x0, #0x9c0
   17090:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17094:	ldr	x0, [sp, #40]
   17098:	mov	x2, x0
   1709c:	mov	w1, #0x1470                	// #5232
   170a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   170a4:	add	x0, x0, #0x9c0
   170a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   170ac:	ldr	w0, [sp, #36]
   170b0:	mov	w1, w0
   170b4:	ldr	x0, [sp, #24]
   170b8:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   170bc:	cmp	w0, #0x0
   170c0:	b.eq	170e0 <PyFloat_FromString@plt+0x10590>  // b.none
   170c4:	ldr	x2, [sp, #72]
   170c8:	mov	w1, #0x1472                	// #5234
   170cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   170d0:	add	x0, x0, #0x9c0
   170d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   170d8:	mov	x0, #0x0                   	// #0
   170dc:	b	170e4 <PyFloat_FromString@plt+0x10594>
   170e0:	ldr	x0, [sp, #72]
   170e4:	ldp	x29, x30, [sp], #80
   170e8:	ret
   170ec:	stp	x29, x30, [sp, #-80]!
   170f0:	mov	x29, sp
   170f4:	str	x0, [sp, #24]
   170f8:	str	x1, [sp, #16]
   170fc:	str	wzr, [sp, #36]
   17100:	add	x1, sp, #0x38
   17104:	add	x0, sp, #0x40
   17108:	mov	x3, x1
   1710c:	mov	x2, x0
   17110:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17114:	add	x1, x0, #0x720
   17118:	ldr	x0, [sp, #16]
   1711c:	bl	6980 <PyArg_ParseTuple@plt>
   17120:	cmp	w0, #0x0
   17124:	b.ne	17130 <PyFloat_FromString@plt+0x105e0>  // b.any
   17128:	mov	x0, #0x0                   	// #0
   1712c:	b	17290 <PyFloat_FromString@plt+0x10740>
   17130:	ldr	x1, [sp, #64]
   17134:	add	x0, sp, #0x30
   17138:	ldr	x3, [sp, #24]
   1713c:	mov	x2, x1
   17140:	mov	x1, x0
   17144:	mov	w0, #0x1                   	// #1
   17148:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1714c:	cmp	w0, #0x0
   17150:	b.ne	1715c <PyFloat_FromString@plt+0x1060c>  // b.any
   17154:	mov	x0, #0x0                   	// #0
   17158:	b	17290 <PyFloat_FromString@plt+0x10740>
   1715c:	ldr	x1, [sp, #56]
   17160:	add	x0, sp, #0x28
   17164:	ldr	x3, [sp, #24]
   17168:	mov	x2, x1
   1716c:	mov	x1, x0
   17170:	mov	w0, #0x1                   	// #1
   17174:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17178:	cmp	w0, #0x0
   1717c:	b.ne	171a0 <PyFloat_FromString@plt+0x10650>  // b.any
   17180:	ldr	x0, [sp, #48]
   17184:	mov	x2, x0
   17188:	mov	w1, #0x1479                	// #5241
   1718c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17190:	add	x0, x0, #0x9c0
   17194:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17198:	mov	x0, #0x0                   	// #0
   1719c:	b	17290 <PyFloat_FromString@plt+0x10740>
   171a0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   171a4:	add	x0, x0, #0x360
   171a8:	bl	912c <PyFloat_FromString@plt+0x25dc>
   171ac:	str	x0, [sp, #72]
   171b0:	ldr	x0, [sp, #72]
   171b4:	cmp	x0, #0x0
   171b8:	b.ne	171f4 <PyFloat_FromString@plt+0x106a4>  // b.any
   171bc:	ldr	x0, [sp, #48]
   171c0:	mov	x2, x0
   171c4:	mov	w1, #0x1479                	// #5241
   171c8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   171cc:	add	x0, x0, #0x9c0
   171d0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   171d4:	ldr	x0, [sp, #40]
   171d8:	mov	x2, x0
   171dc:	mov	w1, #0x1479                	// #5241
   171e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   171e4:	add	x0, x0, #0x9c0
   171e8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   171ec:	mov	x0, #0x0                   	// #0
   171f0:	b	17290 <PyFloat_FromString@plt+0x10740>
   171f4:	ldr	x0, [sp, #72]
   171f8:	add	x5, x0, #0x18
   171fc:	ldr	x0, [sp, #48]
   17200:	add	x1, x0, #0x18
   17204:	ldr	x0, [sp, #40]
   17208:	add	x2, x0, #0x18
   1720c:	ldr	x0, [sp, #24]
   17210:	add	x0, x0, #0x10
   17214:	add	x3, sp, #0x24
   17218:	mov	x4, x3
   1721c:	mov	x3, x0
   17220:	mov	x0, x5
   17224:	bl	2bc00 <PyInit__decimal@@Base+0x13f28>
   17228:	ldr	x0, [sp, #48]
   1722c:	mov	x2, x0
   17230:	mov	w1, #0x1479                	// #5241
   17234:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17238:	add	x0, x0, #0x9c0
   1723c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17240:	ldr	x0, [sp, #40]
   17244:	mov	x2, x0
   17248:	mov	w1, #0x1479                	// #5241
   1724c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17250:	add	x0, x0, #0x9c0
   17254:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17258:	ldr	w0, [sp, #36]
   1725c:	mov	w1, w0
   17260:	ldr	x0, [sp, #24]
   17264:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   17268:	cmp	w0, #0x0
   1726c:	b.eq	1728c <PyFloat_FromString@plt+0x1073c>  // b.none
   17270:	ldr	x2, [sp, #72]
   17274:	mov	w1, #0x1479                	// #5241
   17278:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1727c:	add	x0, x0, #0x9c0
   17280:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17284:	mov	x0, #0x0                   	// #0
   17288:	b	17290 <PyFloat_FromString@plt+0x10740>
   1728c:	ldr	x0, [sp, #72]
   17290:	ldp	x29, x30, [sp], #80
   17294:	ret
   17298:	stp	x29, x30, [sp, #-80]!
   1729c:	mov	x29, sp
   172a0:	str	x0, [sp, #24]
   172a4:	str	x1, [sp, #16]
   172a8:	str	wzr, [sp, #36]
   172ac:	add	x1, sp, #0x38
   172b0:	add	x0, sp, #0x40
   172b4:	mov	x3, x1
   172b8:	mov	x2, x0
   172bc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   172c0:	add	x1, x0, #0x720
   172c4:	ldr	x0, [sp, #16]
   172c8:	bl	6980 <PyArg_ParseTuple@plt>
   172cc:	cmp	w0, #0x0
   172d0:	b.ne	172dc <PyFloat_FromString@plt+0x1078c>  // b.any
   172d4:	mov	x0, #0x0                   	// #0
   172d8:	b	1743c <PyFloat_FromString@plt+0x108ec>
   172dc:	ldr	x1, [sp, #64]
   172e0:	add	x0, sp, #0x30
   172e4:	ldr	x3, [sp, #24]
   172e8:	mov	x2, x1
   172ec:	mov	x1, x0
   172f0:	mov	w0, #0x1                   	// #1
   172f4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   172f8:	cmp	w0, #0x0
   172fc:	b.ne	17308 <PyFloat_FromString@plt+0x107b8>  // b.any
   17300:	mov	x0, #0x0                   	// #0
   17304:	b	1743c <PyFloat_FromString@plt+0x108ec>
   17308:	ldr	x1, [sp, #56]
   1730c:	add	x0, sp, #0x28
   17310:	ldr	x3, [sp, #24]
   17314:	mov	x2, x1
   17318:	mov	x1, x0
   1731c:	mov	w0, #0x1                   	// #1
   17320:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17324:	cmp	w0, #0x0
   17328:	b.ne	1734c <PyFloat_FromString@plt+0x107fc>  // b.any
   1732c:	ldr	x0, [sp, #48]
   17330:	mov	x2, x0
   17334:	mov	w1, #0x147a                	// #5242
   17338:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1733c:	add	x0, x0, #0x9c0
   17340:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17344:	mov	x0, #0x0                   	// #0
   17348:	b	1743c <PyFloat_FromString@plt+0x108ec>
   1734c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17350:	add	x0, x0, #0x360
   17354:	bl	912c <PyFloat_FromString@plt+0x25dc>
   17358:	str	x0, [sp, #72]
   1735c:	ldr	x0, [sp, #72]
   17360:	cmp	x0, #0x0
   17364:	b.ne	173a0 <PyFloat_FromString@plt+0x10850>  // b.any
   17368:	ldr	x0, [sp, #48]
   1736c:	mov	x2, x0
   17370:	mov	w1, #0x147a                	// #5242
   17374:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17378:	add	x0, x0, #0x9c0
   1737c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17380:	ldr	x0, [sp, #40]
   17384:	mov	x2, x0
   17388:	mov	w1, #0x147a                	// #5242
   1738c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17390:	add	x0, x0, #0x9c0
   17394:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17398:	mov	x0, #0x0                   	// #0
   1739c:	b	1743c <PyFloat_FromString@plt+0x108ec>
   173a0:	ldr	x0, [sp, #72]
   173a4:	add	x5, x0, #0x18
   173a8:	ldr	x0, [sp, #48]
   173ac:	add	x1, x0, #0x18
   173b0:	ldr	x0, [sp, #40]
   173b4:	add	x2, x0, #0x18
   173b8:	ldr	x0, [sp, #24]
   173bc:	add	x0, x0, #0x10
   173c0:	add	x3, sp, #0x24
   173c4:	mov	x4, x3
   173c8:	mov	x3, x0
   173cc:	mov	x0, x5
   173d0:	bl	2cc74 <PyInit__decimal@@Base+0x14f9c>
   173d4:	ldr	x0, [sp, #48]
   173d8:	mov	x2, x0
   173dc:	mov	w1, #0x147a                	// #5242
   173e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   173e4:	add	x0, x0, #0x9c0
   173e8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   173ec:	ldr	x0, [sp, #40]
   173f0:	mov	x2, x0
   173f4:	mov	w1, #0x147a                	// #5242
   173f8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   173fc:	add	x0, x0, #0x9c0
   17400:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17404:	ldr	w0, [sp, #36]
   17408:	mov	w1, w0
   1740c:	ldr	x0, [sp, #24]
   17410:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   17414:	cmp	w0, #0x0
   17418:	b.eq	17438 <PyFloat_FromString@plt+0x108e8>  // b.none
   1741c:	ldr	x2, [sp, #72]
   17420:	mov	w1, #0x147a                	// #5242
   17424:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17428:	add	x0, x0, #0x9c0
   1742c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17430:	mov	x0, #0x0                   	// #0
   17434:	b	1743c <PyFloat_FromString@plt+0x108ec>
   17438:	ldr	x0, [sp, #72]
   1743c:	ldp	x29, x30, [sp], #80
   17440:	ret
   17444:	stp	x29, x30, [sp, #-80]!
   17448:	mov	x29, sp
   1744c:	str	x0, [sp, #24]
   17450:	str	x1, [sp, #16]
   17454:	str	wzr, [sp, #36]
   17458:	add	x1, sp, #0x38
   1745c:	add	x0, sp, #0x40
   17460:	mov	x3, x1
   17464:	mov	x2, x0
   17468:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1746c:	add	x1, x0, #0x720
   17470:	ldr	x0, [sp, #16]
   17474:	bl	6980 <PyArg_ParseTuple@plt>
   17478:	cmp	w0, #0x0
   1747c:	b.ne	17488 <PyFloat_FromString@plt+0x10938>  // b.any
   17480:	mov	x0, #0x0                   	// #0
   17484:	b	175e8 <PyFloat_FromString@plt+0x10a98>
   17488:	ldr	x1, [sp, #64]
   1748c:	add	x0, sp, #0x30
   17490:	ldr	x3, [sp, #24]
   17494:	mov	x2, x1
   17498:	mov	x1, x0
   1749c:	mov	w0, #0x1                   	// #1
   174a0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   174a4:	cmp	w0, #0x0
   174a8:	b.ne	174b4 <PyFloat_FromString@plt+0x10964>  // b.any
   174ac:	mov	x0, #0x0                   	// #0
   174b0:	b	175e8 <PyFloat_FromString@plt+0x10a98>
   174b4:	ldr	x1, [sp, #56]
   174b8:	add	x0, sp, #0x28
   174bc:	ldr	x3, [sp, #24]
   174c0:	mov	x2, x1
   174c4:	mov	x1, x0
   174c8:	mov	w0, #0x1                   	// #1
   174cc:	bl	b168 <PyFloat_FromString@plt+0x4618>
   174d0:	cmp	w0, #0x0
   174d4:	b.ne	174f8 <PyFloat_FromString@plt+0x109a8>  // b.any
   174d8:	ldr	x0, [sp, #48]
   174dc:	mov	x2, x0
   174e0:	mov	w1, #0x147b                	// #5243
   174e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   174e8:	add	x0, x0, #0x9c0
   174ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   174f0:	mov	x0, #0x0                   	// #0
   174f4:	b	175e8 <PyFloat_FromString@plt+0x10a98>
   174f8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   174fc:	add	x0, x0, #0x360
   17500:	bl	912c <PyFloat_FromString@plt+0x25dc>
   17504:	str	x0, [sp, #72]
   17508:	ldr	x0, [sp, #72]
   1750c:	cmp	x0, #0x0
   17510:	b.ne	1754c <PyFloat_FromString@plt+0x109fc>  // b.any
   17514:	ldr	x0, [sp, #48]
   17518:	mov	x2, x0
   1751c:	mov	w1, #0x147b                	// #5243
   17520:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17524:	add	x0, x0, #0x9c0
   17528:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1752c:	ldr	x0, [sp, #40]
   17530:	mov	x2, x0
   17534:	mov	w1, #0x147b                	// #5243
   17538:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1753c:	add	x0, x0, #0x9c0
   17540:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17544:	mov	x0, #0x0                   	// #0
   17548:	b	175e8 <PyFloat_FromString@plt+0x10a98>
   1754c:	ldr	x0, [sp, #72]
   17550:	add	x5, x0, #0x18
   17554:	ldr	x0, [sp, #48]
   17558:	add	x1, x0, #0x18
   1755c:	ldr	x0, [sp, #40]
   17560:	add	x2, x0, #0x18
   17564:	ldr	x0, [sp, #24]
   17568:	add	x0, x0, #0x10
   1756c:	add	x3, sp, #0x24
   17570:	mov	x4, x3
   17574:	mov	x3, x0
   17578:	mov	x0, x5
   1757c:	bl	2e030 <PyInit__decimal@@Base+0x16358>
   17580:	ldr	x0, [sp, #48]
   17584:	mov	x2, x0
   17588:	mov	w1, #0x147b                	// #5243
   1758c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17590:	add	x0, x0, #0x9c0
   17594:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17598:	ldr	x0, [sp, #40]
   1759c:	mov	x2, x0
   175a0:	mov	w1, #0x147b                	// #5243
   175a4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   175a8:	add	x0, x0, #0x9c0
   175ac:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   175b0:	ldr	w0, [sp, #36]
   175b4:	mov	w1, w0
   175b8:	ldr	x0, [sp, #24]
   175bc:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   175c0:	cmp	w0, #0x0
   175c4:	b.eq	175e4 <PyFloat_FromString@plt+0x10a94>  // b.none
   175c8:	ldr	x2, [sp, #72]
   175cc:	mov	w1, #0x147b                	// #5243
   175d0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   175d4:	add	x0, x0, #0x9c0
   175d8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   175dc:	mov	x0, #0x0                   	// #0
   175e0:	b	175e8 <PyFloat_FromString@plt+0x10a98>
   175e4:	ldr	x0, [sp, #72]
   175e8:	ldp	x29, x30, [sp], #80
   175ec:	ret
   175f0:	stp	x29, x30, [sp, #-80]!
   175f4:	mov	x29, sp
   175f8:	str	x0, [sp, #24]
   175fc:	str	x1, [sp, #16]
   17600:	str	wzr, [sp, #36]
   17604:	add	x1, sp, #0x38
   17608:	add	x0, sp, #0x40
   1760c:	mov	x3, x1
   17610:	mov	x2, x0
   17614:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17618:	add	x1, x0, #0x720
   1761c:	ldr	x0, [sp, #16]
   17620:	bl	6980 <PyArg_ParseTuple@plt>
   17624:	cmp	w0, #0x0
   17628:	b.ne	17634 <PyFloat_FromString@plt+0x10ae4>  // b.any
   1762c:	mov	x0, #0x0                   	// #0
   17630:	b	17794 <PyFloat_FromString@plt+0x10c44>
   17634:	ldr	x1, [sp, #64]
   17638:	add	x0, sp, #0x30
   1763c:	ldr	x3, [sp, #24]
   17640:	mov	x2, x1
   17644:	mov	x1, x0
   17648:	mov	w0, #0x1                   	// #1
   1764c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17650:	cmp	w0, #0x0
   17654:	b.ne	17660 <PyFloat_FromString@plt+0x10b10>  // b.any
   17658:	mov	x0, #0x0                   	// #0
   1765c:	b	17794 <PyFloat_FromString@plt+0x10c44>
   17660:	ldr	x1, [sp, #56]
   17664:	add	x0, sp, #0x28
   17668:	ldr	x3, [sp, #24]
   1766c:	mov	x2, x1
   17670:	mov	x1, x0
   17674:	mov	w0, #0x1                   	// #1
   17678:	bl	b168 <PyFloat_FromString@plt+0x4618>
   1767c:	cmp	w0, #0x0
   17680:	b.ne	176a4 <PyFloat_FromString@plt+0x10b54>  // b.any
   17684:	ldr	x0, [sp, #48]
   17688:	mov	x2, x0
   1768c:	mov	w1, #0x147d                	// #5245
   17690:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17694:	add	x0, x0, #0x9c0
   17698:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1769c:	mov	x0, #0x0                   	// #0
   176a0:	b	17794 <PyFloat_FromString@plt+0x10c44>
   176a4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   176a8:	add	x0, x0, #0x360
   176ac:	bl	912c <PyFloat_FromString@plt+0x25dc>
   176b0:	str	x0, [sp, #72]
   176b4:	ldr	x0, [sp, #72]
   176b8:	cmp	x0, #0x0
   176bc:	b.ne	176f8 <PyFloat_FromString@plt+0x10ba8>  // b.any
   176c0:	ldr	x0, [sp, #48]
   176c4:	mov	x2, x0
   176c8:	mov	w1, #0x147d                	// #5245
   176cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   176d0:	add	x0, x0, #0x9c0
   176d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   176d8:	ldr	x0, [sp, #40]
   176dc:	mov	x2, x0
   176e0:	mov	w1, #0x147d                	// #5245
   176e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   176e8:	add	x0, x0, #0x9c0
   176ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   176f0:	mov	x0, #0x0                   	// #0
   176f4:	b	17794 <PyFloat_FromString@plt+0x10c44>
   176f8:	ldr	x0, [sp, #72]
   176fc:	add	x5, x0, #0x18
   17700:	ldr	x0, [sp, #48]
   17704:	add	x1, x0, #0x18
   17708:	ldr	x0, [sp, #40]
   1770c:	add	x2, x0, #0x18
   17710:	ldr	x0, [sp, #24]
   17714:	add	x0, x0, #0x10
   17718:	add	x3, sp, #0x24
   1771c:	mov	x4, x3
   17720:	mov	x3, x0
   17724:	mov	x0, x5
   17728:	bl	2d63c <PyInit__decimal@@Base+0x15964>
   1772c:	ldr	x0, [sp, #48]
   17730:	mov	x2, x0
   17734:	mov	w1, #0x147d                	// #5245
   17738:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1773c:	add	x0, x0, #0x9c0
   17740:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17744:	ldr	x0, [sp, #40]
   17748:	mov	x2, x0
   1774c:	mov	w1, #0x147d                	// #5245
   17750:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17754:	add	x0, x0, #0x9c0
   17758:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1775c:	ldr	w0, [sp, #36]
   17760:	mov	w1, w0
   17764:	ldr	x0, [sp, #24]
   17768:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   1776c:	cmp	w0, #0x0
   17770:	b.eq	17790 <PyFloat_FromString@plt+0x10c40>  // b.none
   17774:	ldr	x2, [sp, #72]
   17778:	mov	w1, #0x147d                	// #5245
   1777c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17780:	add	x0, x0, #0x9c0
   17784:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17788:	mov	x0, #0x0                   	// #0
   1778c:	b	17794 <PyFloat_FromString@plt+0x10c44>
   17790:	ldr	x0, [sp, #72]
   17794:	ldp	x29, x30, [sp], #80
   17798:	ret
   1779c:	stp	x29, x30, [sp, #-80]!
   177a0:	mov	x29, sp
   177a4:	str	x0, [sp, #24]
   177a8:	str	x1, [sp, #16]
   177ac:	str	wzr, [sp, #36]
   177b0:	add	x1, sp, #0x38
   177b4:	add	x0, sp, #0x40
   177b8:	mov	x3, x1
   177bc:	mov	x2, x0
   177c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   177c4:	add	x1, x0, #0x720
   177c8:	ldr	x0, [sp, #16]
   177cc:	bl	6980 <PyArg_ParseTuple@plt>
   177d0:	cmp	w0, #0x0
   177d4:	b.ne	177e0 <PyFloat_FromString@plt+0x10c90>  // b.any
   177d8:	mov	x0, #0x0                   	// #0
   177dc:	b	17940 <PyFloat_FromString@plt+0x10df0>
   177e0:	ldr	x1, [sp, #64]
   177e4:	add	x0, sp, #0x30
   177e8:	ldr	x3, [sp, #24]
   177ec:	mov	x2, x1
   177f0:	mov	x1, x0
   177f4:	mov	w0, #0x1                   	// #1
   177f8:	bl	b168 <PyFloat_FromString@plt+0x4618>
   177fc:	cmp	w0, #0x0
   17800:	b.ne	1780c <PyFloat_FromString@plt+0x10cbc>  // b.any
   17804:	mov	x0, #0x0                   	// #0
   17808:	b	17940 <PyFloat_FromString@plt+0x10df0>
   1780c:	ldr	x1, [sp, #56]
   17810:	add	x0, sp, #0x28
   17814:	ldr	x3, [sp, #24]
   17818:	mov	x2, x1
   1781c:	mov	x1, x0
   17820:	mov	w0, #0x1                   	// #1
   17824:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17828:	cmp	w0, #0x0
   1782c:	b.ne	17850 <PyFloat_FromString@plt+0x10d00>  // b.any
   17830:	ldr	x0, [sp, #48]
   17834:	mov	x2, x0
   17838:	mov	w1, #0x147e                	// #5246
   1783c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17840:	add	x0, x0, #0x9c0
   17844:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17848:	mov	x0, #0x0                   	// #0
   1784c:	b	17940 <PyFloat_FromString@plt+0x10df0>
   17850:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17854:	add	x0, x0, #0x360
   17858:	bl	912c <PyFloat_FromString@plt+0x25dc>
   1785c:	str	x0, [sp, #72]
   17860:	ldr	x0, [sp, #72]
   17864:	cmp	x0, #0x0
   17868:	b.ne	178a4 <PyFloat_FromString@plt+0x10d54>  // b.any
   1786c:	ldr	x0, [sp, #48]
   17870:	mov	x2, x0
   17874:	mov	w1, #0x147e                	// #5246
   17878:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1787c:	add	x0, x0, #0x9c0
   17880:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17884:	ldr	x0, [sp, #40]
   17888:	mov	x2, x0
   1788c:	mov	w1, #0x147e                	// #5246
   17890:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17894:	add	x0, x0, #0x9c0
   17898:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1789c:	mov	x0, #0x0                   	// #0
   178a0:	b	17940 <PyFloat_FromString@plt+0x10df0>
   178a4:	ldr	x0, [sp, #72]
   178a8:	add	x5, x0, #0x18
   178ac:	ldr	x0, [sp, #48]
   178b0:	add	x1, x0, #0x18
   178b4:	ldr	x0, [sp, #40]
   178b8:	add	x2, x0, #0x18
   178bc:	ldr	x0, [sp, #24]
   178c0:	add	x0, x0, #0x10
   178c4:	add	x3, sp, #0x24
   178c8:	mov	x4, x3
   178cc:	mov	x3, x0
   178d0:	mov	x0, x5
   178d4:	bl	2daec <PyInit__decimal@@Base+0x15e14>
   178d8:	ldr	x0, [sp, #48]
   178dc:	mov	x2, x0
   178e0:	mov	w1, #0x147e                	// #5246
   178e4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   178e8:	add	x0, x0, #0x9c0
   178ec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   178f0:	ldr	x0, [sp, #40]
   178f4:	mov	x2, x0
   178f8:	mov	w1, #0x147e                	// #5246
   178fc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17900:	add	x0, x0, #0x9c0
   17904:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17908:	ldr	w0, [sp, #36]
   1790c:	mov	w1, w0
   17910:	ldr	x0, [sp, #24]
   17914:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   17918:	cmp	w0, #0x0
   1791c:	b.eq	1793c <PyFloat_FromString@plt+0x10dec>  // b.none
   17920:	ldr	x2, [sp, #72]
   17924:	mov	w1, #0x147e                	// #5246
   17928:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1792c:	add	x0, x0, #0x9c0
   17930:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17934:	mov	x0, #0x0                   	// #0
   17938:	b	17940 <PyFloat_FromString@plt+0x10df0>
   1793c:	ldr	x0, [sp, #72]
   17940:	ldp	x29, x30, [sp], #80
   17944:	ret
   17948:	stp	x29, x30, [sp, #-80]!
   1794c:	mov	x29, sp
   17950:	str	x0, [sp, #24]
   17954:	str	x1, [sp, #16]
   17958:	str	wzr, [sp, #36]
   1795c:	add	x1, sp, #0x38
   17960:	add	x0, sp, #0x40
   17964:	mov	x3, x1
   17968:	mov	x2, x0
   1796c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17970:	add	x1, x0, #0x720
   17974:	ldr	x0, [sp, #16]
   17978:	bl	6980 <PyArg_ParseTuple@plt>
   1797c:	cmp	w0, #0x0
   17980:	b.ne	1798c <PyFloat_FromString@plt+0x10e3c>  // b.any
   17984:	mov	x0, #0x0                   	// #0
   17988:	b	17aec <PyFloat_FromString@plt+0x10f9c>
   1798c:	ldr	x1, [sp, #64]
   17990:	add	x0, sp, #0x30
   17994:	ldr	x3, [sp, #24]
   17998:	mov	x2, x1
   1799c:	mov	x1, x0
   179a0:	mov	w0, #0x1                   	// #1
   179a4:	bl	b168 <PyFloat_FromString@plt+0x4618>
   179a8:	cmp	w0, #0x0
   179ac:	b.ne	179b8 <PyFloat_FromString@plt+0x10e68>  // b.any
   179b0:	mov	x0, #0x0                   	// #0
   179b4:	b	17aec <PyFloat_FromString@plt+0x10f9c>
   179b8:	ldr	x1, [sp, #56]
   179bc:	add	x0, sp, #0x28
   179c0:	ldr	x3, [sp, #24]
   179c4:	mov	x2, x1
   179c8:	mov	x1, x0
   179cc:	mov	w0, #0x1                   	// #1
   179d0:	bl	b168 <PyFloat_FromString@plt+0x4618>
   179d4:	cmp	w0, #0x0
   179d8:	b.ne	179fc <PyFloat_FromString@plt+0x10eac>  // b.any
   179dc:	ldr	x0, [sp, #48]
   179e0:	mov	x2, x0
   179e4:	mov	w1, #0x147f                	// #5247
   179e8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   179ec:	add	x0, x0, #0x9c0
   179f0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   179f4:	mov	x0, #0x0                   	// #0
   179f8:	b	17aec <PyFloat_FromString@plt+0x10f9c>
   179fc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17a00:	add	x0, x0, #0x360
   17a04:	bl	912c <PyFloat_FromString@plt+0x25dc>
   17a08:	str	x0, [sp, #72]
   17a0c:	ldr	x0, [sp, #72]
   17a10:	cmp	x0, #0x0
   17a14:	b.ne	17a50 <PyFloat_FromString@plt+0x10f00>  // b.any
   17a18:	ldr	x0, [sp, #48]
   17a1c:	mov	x2, x0
   17a20:	mov	w1, #0x147f                	// #5247
   17a24:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17a28:	add	x0, x0, #0x9c0
   17a2c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17a30:	ldr	x0, [sp, #40]
   17a34:	mov	x2, x0
   17a38:	mov	w1, #0x147f                	// #5247
   17a3c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17a40:	add	x0, x0, #0x9c0
   17a44:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17a48:	mov	x0, #0x0                   	// #0
   17a4c:	b	17aec <PyFloat_FromString@plt+0x10f9c>
   17a50:	ldr	x0, [sp, #72]
   17a54:	add	x5, x0, #0x18
   17a58:	ldr	x0, [sp, #48]
   17a5c:	add	x1, x0, #0x18
   17a60:	ldr	x0, [sp, #40]
   17a64:	add	x2, x0, #0x18
   17a68:	ldr	x0, [sp, #24]
   17a6c:	add	x0, x0, #0x10
   17a70:	add	x3, sp, #0x24
   17a74:	mov	x4, x3
   17a78:	mov	x3, x0
   17a7c:	mov	x0, x5
   17a80:	bl	2de50 <PyInit__decimal@@Base+0x16178>
   17a84:	ldr	x0, [sp, #48]
   17a88:	mov	x2, x0
   17a8c:	mov	w1, #0x147f                	// #5247
   17a90:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17a94:	add	x0, x0, #0x9c0
   17a98:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17a9c:	ldr	x0, [sp, #40]
   17aa0:	mov	x2, x0
   17aa4:	mov	w1, #0x147f                	// #5247
   17aa8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17aac:	add	x0, x0, #0x9c0
   17ab0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17ab4:	ldr	w0, [sp, #36]
   17ab8:	mov	w1, w0
   17abc:	ldr	x0, [sp, #24]
   17ac0:	bl	7424 <PyFloat_FromString@plt+0x8d4>
   17ac4:	cmp	w0, #0x0
   17ac8:	b.eq	17ae8 <PyFloat_FromString@plt+0x10f98>  // b.none
   17acc:	ldr	x2, [sp, #72]
   17ad0:	mov	w1, #0x147f                	// #5247
   17ad4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17ad8:	add	x0, x0, #0x9c0
   17adc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17ae0:	mov	x0, #0x0                   	// #0
   17ae4:	b	17aec <PyFloat_FromString@plt+0x10f9c>
   17ae8:	ldr	x0, [sp, #72]
   17aec:	ldp	x29, x30, [sp], #80
   17af0:	ret
   17af4:	stp	x29, x30, [sp, #-80]!
   17af8:	mov	x29, sp
   17afc:	str	x0, [sp, #24]
   17b00:	str	x1, [sp, #16]
   17b04:	add	x1, sp, #0x38
   17b08:	add	x0, sp, #0x40
   17b0c:	mov	x3, x1
   17b10:	mov	x2, x0
   17b14:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17b18:	add	x1, x0, #0x720
   17b1c:	ldr	x0, [sp, #16]
   17b20:	bl	6980 <PyArg_ParseTuple@plt>
   17b24:	cmp	w0, #0x0
   17b28:	b.ne	17b34 <PyFloat_FromString@plt+0x10fe4>  // b.any
   17b2c:	mov	x0, #0x0                   	// #0
   17b30:	b	17c0c <PyFloat_FromString@plt+0x110bc>
   17b34:	ldr	x1, [sp, #64]
   17b38:	add	x0, sp, #0x30
   17b3c:	ldr	x3, [sp, #24]
   17b40:	mov	x2, x1
   17b44:	mov	x1, x0
   17b48:	mov	w0, #0x1                   	// #1
   17b4c:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17b50:	cmp	w0, #0x0
   17b54:	b.ne	17b60 <PyFloat_FromString@plt+0x11010>  // b.any
   17b58:	mov	x0, #0x0                   	// #0
   17b5c:	b	17c0c <PyFloat_FromString@plt+0x110bc>
   17b60:	ldr	x1, [sp, #56]
   17b64:	add	x0, sp, #0x28
   17b68:	ldr	x3, [sp, #24]
   17b6c:	mov	x2, x1
   17b70:	mov	x1, x0
   17b74:	mov	w0, #0x1                   	// #1
   17b78:	bl	b168 <PyFloat_FromString@plt+0x4618>
   17b7c:	cmp	w0, #0x0
   17b80:	b.ne	17ba4 <PyFloat_FromString@plt+0x11054>  // b.any
   17b84:	ldr	x0, [sp, #48]
   17b88:	mov	x2, x0
   17b8c:	mov	w1, #0x148c                	// #5260
   17b90:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17b94:	add	x0, x0, #0x9c0
   17b98:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17b9c:	mov	x0, #0x0                   	// #0
   17ba0:	b	17c0c <PyFloat_FromString@plt+0x110bc>
   17ba4:	ldr	x0, [sp, #48]
   17ba8:	add	x2, x0, #0x18
   17bac:	ldr	x0, [sp, #40]
   17bb0:	add	x0, x0, #0x18
   17bb4:	mov	x1, x0
   17bb8:	mov	x0, x2
   17bbc:	bl	3b1dc <PyInit__decimal@@Base+0x23504>
   17bc0:	cmp	w0, #0x0
   17bc4:	b.eq	17bd0 <PyFloat_FromString@plt+0x11080>  // b.none
   17bc8:	bl	6d9c <PyFloat_FromString@plt+0x24c>
   17bcc:	b	17bd4 <PyFloat_FromString@plt+0x11084>
   17bd0:	bl	6dc0 <PyFloat_FromString@plt+0x270>
   17bd4:	str	x0, [sp, #72]
   17bd8:	ldr	x0, [sp, #48]
   17bdc:	mov	x2, x0
   17be0:	mov	w1, #0x148f                	// #5263
   17be4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17be8:	add	x0, x0, #0x9c0
   17bec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17bf0:	ldr	x0, [sp, #40]
   17bf4:	mov	x2, x0
   17bf8:	mov	w1, #0x1490                	// #5264
   17bfc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17c00:	add	x0, x0, #0x9c0
   17c04:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17c08:	ldr	x0, [sp, #72]
   17c0c:	ldp	x29, x30, [sp], #80
   17c10:	ret
   17c14:	stp	x29, x30, [sp, #-48]!
   17c18:	mov	x29, sp
   17c1c:	str	x0, [sp, #24]
   17c20:	str	x1, [sp, #16]
   17c24:	ldr	x0, [sp, #24]
   17c28:	ldr	x0, [x0, #232]
   17c2c:	cmp	x0, #0x0
   17c30:	b.eq	17ca0 <PyFloat_FromString@plt+0x11150>  // b.none
   17c34:	ldr	x0, [sp, #24]
   17c38:	ldr	x0, [x0, #232]
   17c3c:	str	x0, [sp, #40]
   17c40:	b	17c8c <PyFloat_FromString@plt+0x1113c>
   17c44:	ldr	x0, [sp, #40]
   17c48:	ldr	x0, [x0]
   17c4c:	mov	x1, x0
   17c50:	ldr	x0, [sp, #16]
   17c54:	bl	6900 <strcmp@plt>
   17c58:	cmp	w0, #0x0
   17c5c:	b.ne	17c80 <PyFloat_FromString@plt+0x11130>  // b.any
   17c60:	ldr	x0, [sp, #40]
   17c64:	ldr	w0, [x0, #16]
   17c68:	and	w0, w0, #0x4
   17c6c:	cmp	w0, #0x0
   17c70:	b.eq	17ca8 <PyFloat_FromString@plt+0x11158>  // b.none
   17c74:	ldr	x0, [sp, #40]
   17c78:	ldr	x0, [x0, #8]
   17c7c:	b	17cd0 <PyFloat_FromString@plt+0x11180>
   17c80:	ldr	x0, [sp, #40]
   17c84:	add	x0, x0, #0x20
   17c88:	str	x0, [sp, #40]
   17c8c:	ldr	x0, [sp, #40]
   17c90:	ldr	x0, [x0]
   17c94:	cmp	x0, #0x0
   17c98:	b.ne	17c44 <PyFloat_FromString@plt+0x110f4>  // b.any
   17c9c:	b	17cac <PyFloat_FromString@plt+0x1115c>
   17ca0:	nop
   17ca4:	b	17cac <PyFloat_FromString@plt+0x1115c>
   17ca8:	nop
   17cac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17cb0:	ldr	x0, [x0, #3920]
   17cb4:	ldr	x3, [x0]
   17cb8:	ldr	x2, [sp, #16]
   17cbc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17cc0:	add	x1, x0, #0x8c8
   17cc4:	mov	x0, x3
   17cc8:	bl	6ac0 <PyErr_Format@plt>
   17ccc:	mov	x0, #0x0                   	// #0
   17cd0:	ldp	x29, x30, [sp], #48
   17cd4:	ret

0000000000017cd8 <PyInit__decimal@@Base>:
   17cd8:	stp	x29, x30, [sp, #-304]!
   17cdc:	mov	x29, sp
   17ce0:	str	xzr, [sp, #296]
   17ce4:	str	xzr, [sp, #288]
   17ce8:	str	xzr, [sp, #280]
   17cec:	str	xzr, [sp, #272]
   17cf0:	str	xzr, [sp, #264]
   17cf4:	str	xzr, [sp, #256]
   17cf8:	str	xzr, [sp, #248]
   17cfc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d00:	add	x0, x0, #0x5e0
   17d04:	adrp	x1, 6000 <memcpy@plt-0x510>
   17d08:	add	x1, x1, #0xe94
   17d0c:	str	x1, [x0]
   17d10:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d14:	add	x0, x0, #0x6e0
   17d18:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17d1c:	ldr	x1, [x1, #4064]
   17d20:	str	x1, [x0]
   17d24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d28:	add	x0, x0, #0x6e8
   17d2c:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17d30:	ldr	x1, [x1, #3944]
   17d34:	str	x1, [x0]
   17d38:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d3c:	add	x0, x0, #0x6f0
   17d40:	adrp	x1, 23000 <PyInit__decimal@@Base+0xb328>
   17d44:	add	x1, x1, #0x410
   17d48:	str	x1, [x0]
   17d4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d50:	add	x0, x0, #0x6f8
   17d54:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17d58:	ldr	x1, [x1, #3888]
   17d5c:	str	x1, [x0]
   17d60:	mov	x0, #0x4                   	// #4
   17d64:	bl	1b488 <PyInit__decimal@@Base+0x37b0>
   17d68:	mov	x1, #0x0                   	// #0
   17d6c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17d70:	add	x0, x0, #0x8f8
   17d74:	bl	6800 <PyContextVar_New@plt>
   17d78:	mov	x1, x0
   17d7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d80:	add	x0, x0, #0x718
   17d84:	str	x1, [x0]
   17d88:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17d8c:	add	x0, x0, #0x718
   17d90:	ldr	x0, [x0]
   17d94:	cmp	x0, #0x0
   17d98:	b.eq	18a7c <PyInit__decimal@@Base+0xda4>  // b.none
   17d9c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17da0:	ldr	x0, [x0, #4040]
   17da4:	ldr	x0, [x0, #96]
   17da8:	ldr	x1, [x0, #16]
   17dac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17db0:	add	x0, x0, #0x788
   17db4:	str	x1, [x0]
   17db8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17dbc:	ldr	x0, [x0, #4040]
   17dc0:	ldr	x0, [x0, #96]
   17dc4:	ldr	x1, [x0, #232]
   17dc8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17dcc:	add	x0, x0, #0x790
   17dd0:	str	x1, [x0]
   17dd4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17dd8:	ldr	x0, [x0, #4040]
   17ddc:	ldr	x0, [x0, #96]
   17de0:	ldr	x1, [x0, #40]
   17de4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17de8:	add	x0, x0, #0x798
   17dec:	str	x1, [x0]
   17df0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17df4:	ldr	x0, [x0, #3864]
   17df8:	ldr	x0, [x0, #96]
   17dfc:	ldr	x1, [x0, #64]
   17e00:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17e04:	add	x0, x0, #0x7a0
   17e08:	str	x1, [x0]
   17e0c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17e10:	add	x1, x0, #0x668
   17e14:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17e18:	ldr	x0, [x0, #3864]
   17e1c:	bl	17c14 <PyFloat_FromString@plt+0x110c4>
   17e20:	mov	x1, x0
   17e24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17e28:	add	x0, x0, #0x7b0
   17e2c:	str	x1, [x0]
   17e30:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17e34:	add	x0, x0, #0x7b0
   17e38:	ldr	x0, [x0]
   17e3c:	cmp	x0, #0x0
   17e40:	b.eq	18a84 <PyInit__decimal@@Base+0xdac>  // b.none
   17e44:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17e48:	add	x1, x0, #0x908
   17e4c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   17e50:	ldr	x0, [x0, #4040]
   17e54:	bl	17c14 <PyFloat_FromString@plt+0x110c4>
   17e58:	mov	x1, x0
   17e5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17e60:	add	x0, x0, #0x7a8
   17e64:	str	x1, [x0]
   17e68:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   17e6c:	add	x0, x0, #0x7a8
   17e70:	ldr	x0, [x0]
   17e74:	cmp	x0, #0x0
   17e78:	b.eq	18a8c <PyInit__decimal@@Base+0xdb4>  // b.none
   17e7c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17e80:	add	x0, x0, #0x360
   17e84:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17e88:	ldr	x1, [x1, #4032]
   17e8c:	str	x1, [x0, #256]
   17e90:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17e94:	add	x0, x0, #0x500
   17e98:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17e9c:	ldr	x1, [x1, #4032]
   17ea0:	str	x1, [x0, #256]
   17ea4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ea8:	add	x0, x0, #0x6a0
   17eac:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17eb0:	ldr	x1, [x1, #4032]
   17eb4:	str	x1, [x0, #256]
   17eb8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ebc:	add	x0, x0, #0x840
   17ec0:	adrp	x1, 60000 <PyInit__decimal@@Base+0x48328>
   17ec4:	ldr	x1, [x1, #4032]
   17ec8:	str	x1, [x0, #256]
   17ecc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ed0:	add	x0, x0, #0x360
   17ed4:	bl	6760 <PyType_Ready@plt>
   17ed8:	cmp	w0, #0x0
   17edc:	b.lt	18a94 <PyInit__decimal@@Base+0xdbc>  // b.tstop
   17ee0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ee4:	add	x0, x0, #0x500
   17ee8:	bl	6760 <PyType_Ready@plt>
   17eec:	cmp	w0, #0x0
   17ef0:	b.lt	18a9c <PyInit__decimal@@Base+0xdc4>  // b.tstop
   17ef4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ef8:	add	x0, x0, #0x840
   17efc:	bl	6760 <PyType_Ready@plt>
   17f00:	cmp	w0, #0x0
   17f04:	b.lt	18aa4 <PyInit__decimal@@Base+0xdcc>  // b.tstop
   17f08:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17f0c:	add	x0, x0, #0x6a0
   17f10:	bl	6760 <PyType_Ready@plt>
   17f14:	cmp	w0, #0x0
   17f18:	b.lt	18aac <PyInit__decimal@@Base+0xdd4>  // b.tstop
   17f1c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17f20:	add	x0, x0, #0x880
   17f24:	bl	6a10 <PyUnicode_FromString@plt>
   17f28:	str	x0, [sp, #248]
   17f2c:	ldr	x0, [sp, #248]
   17f30:	cmp	x0, #0x0
   17f34:	b.eq	18ab4 <PyInit__decimal@@Base+0xddc>  // b.none
   17f38:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17f3c:	add	x0, x0, #0x360
   17f40:	ldr	x3, [x0, #264]
   17f44:	ldr	x2, [sp, #248]
   17f48:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17f4c:	add	x1, x0, #0x918
   17f50:	mov	x0, x3
   17f54:	bl	6560 <PyDict_SetItemString@plt>
   17f58:	cmp	w0, #0x0
   17f5c:	b.lt	18abc <PyInit__decimal@@Base+0xde4>  // b.tstop
   17f60:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17f64:	add	x0, x0, #0x500
   17f68:	ldr	x3, [x0, #264]
   17f6c:	ldr	x2, [sp, #248]
   17f70:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17f74:	add	x1, x0, #0x918
   17f78:	mov	x0, x3
   17f7c:	bl	6560 <PyDict_SetItemString@plt>
   17f80:	cmp	w0, #0x0
   17f84:	b.lt	18ac4 <PyInit__decimal@@Base+0xdec>  // b.tstop
   17f88:	ldr	x0, [sp, #248]
   17f8c:	str	x0, [sp, #192]
   17f90:	ldr	x0, [sp, #192]
   17f94:	cmp	x0, #0x0
   17f98:	b.eq	17fb4 <PyInit__decimal@@Base+0x2dc>  // b.none
   17f9c:	str	xzr, [sp, #248]
   17fa0:	ldr	x2, [sp, #192]
   17fa4:	mov	w1, #0x15c4                	// #5572
   17fa8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   17fac:	add	x0, x0, #0x9c0
   17fb0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   17fb4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17fb8:	add	x0, x0, #0x928
   17fbc:	bl	68d0 <PyImport_ImportModule@plt>
   17fc0:	str	x0, [sp, #288]
   17fc4:	ldr	x0, [sp, #288]
   17fc8:	cmp	x0, #0x0
   17fcc:	b.eq	18acc <PyInit__decimal@@Base+0xdf4>  // b.none
   17fd0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17fd4:	add	x1, x0, #0x930
   17fd8:	ldr	x0, [sp, #288]
   17fdc:	bl	6630 <PyObject_GetAttrString@plt>
   17fe0:	str	x0, [sp, #280]
   17fe4:	ldr	x0, [sp, #280]
   17fe8:	cmp	x0, #0x0
   17fec:	b.eq	18ad4 <PyInit__decimal@@Base+0xdfc>  // b.none
   17ff0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   17ff4:	add	x3, x0, #0x360
   17ff8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   17ffc:	add	x2, x0, #0x938
   18000:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18004:	add	x1, x0, #0x940
   18008:	ldr	x0, [sp, #280]
   1800c:	bl	6600 <PyObject_CallMethod@plt>
   18010:	str	x0, [sp, #248]
   18014:	ldr	x0, [sp, #248]
   18018:	cmp	x0, #0x0
   1801c:	b.eq	18adc <PyInit__decimal@@Base+0xe04>  // b.none
   18020:	ldr	x0, [sp, #248]
   18024:	str	x0, [sp, #184]
   18028:	ldr	x0, [sp, #184]
   1802c:	cmp	x0, #0x0
   18030:	b.eq	1804c <PyInit__decimal@@Base+0x374>  // b.none
   18034:	str	xzr, [sp, #248]
   18038:	ldr	x2, [sp, #184]
   1803c:	mov	w1, #0x15cd                	// #5581
   18040:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18044:	add	x0, x0, #0x9c0
   18048:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   1804c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18050:	add	x1, x0, #0x950
   18054:	ldr	x0, [sp, #288]
   18058:	bl	6630 <PyObject_GetAttrString@plt>
   1805c:	mov	x1, x0
   18060:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18064:	add	x0, x0, #0x7b8
   18068:	str	x1, [x0]
   1806c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18070:	add	x0, x0, #0x7b8
   18074:	ldr	x0, [x0]
   18078:	cmp	x0, #0x0
   1807c:	b.eq	18ae4 <PyInit__decimal@@Base+0xe0c>  // b.none
   18080:	ldr	x0, [sp, #288]
   18084:	str	x0, [sp, #176]
   18088:	ldr	x0, [sp, #176]
   1808c:	cmp	x0, #0x0
   18090:	b.eq	180ac <PyInit__decimal@@Base+0x3d4>  // b.none
   18094:	str	xzr, [sp, #288]
   18098:	ldr	x2, [sp, #176]
   1809c:	mov	w1, #0x15d1                	// #5585
   180a0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   180a4:	add	x0, x0, #0x9c0
   180a8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   180ac:	ldr	x0, [sp, #280]
   180b0:	str	x0, [sp, #168]
   180b4:	ldr	x0, [sp, #168]
   180b8:	cmp	x0, #0x0
   180bc:	b.eq	180d8 <PyInit__decimal@@Base+0x400>  // b.none
   180c0:	str	xzr, [sp, #280]
   180c4:	ldr	x2, [sp, #168]
   180c8:	mov	w1, #0x15d2                	// #5586
   180cc:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   180d0:	add	x0, x0, #0x9c0
   180d4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   180d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   180dc:	add	x0, x0, #0x960
   180e0:	bl	68d0 <PyImport_ImportModule@plt>
   180e4:	str	x0, [sp, #272]
   180e8:	ldr	x0, [sp, #272]
   180ec:	cmp	x0, #0x0
   180f0:	b.eq	18aec <PyInit__decimal@@Base+0xe14>  // b.none
   180f4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   180f8:	add	x4, x0, #0x970
   180fc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18100:	add	x3, x0, #0x988
   18104:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18108:	add	x2, x0, #0x998
   1810c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18110:	add	x1, x0, #0x9a0
   18114:	ldr	x0, [sp, #272]
   18118:	bl	6600 <PyObject_CallMethod@plt>
   1811c:	mov	x1, x0
   18120:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18124:	add	x0, x0, #0x7c0
   18128:	str	x1, [x0]
   1812c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18130:	add	x0, x0, #0x7c0
   18134:	ldr	x0, [x0]
   18138:	cmp	x0, #0x0
   1813c:	b.eq	18af4 <PyInit__decimal@@Base+0xe1c>  // b.none
   18140:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18144:	add	x0, x0, #0x880
   18148:	bl	6a10 <PyUnicode_FromString@plt>
   1814c:	str	x0, [sp, #248]
   18150:	ldr	x0, [sp, #248]
   18154:	cmp	x0, #0x0
   18158:	b.eq	18afc <PyInit__decimal@@Base+0xe24>  // b.none
   1815c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18160:	add	x0, x0, #0x7c0
   18164:	ldr	x0, [x0]
   18168:	ldr	x3, [x0, #264]
   1816c:	ldr	x2, [sp, #248]
   18170:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18174:	add	x1, x0, #0x918
   18178:	mov	x0, x3
   1817c:	bl	6560 <PyDict_SetItemString@plt>
   18180:	cmp	w0, #0x0
   18184:	b.lt	18b04 <PyInit__decimal@@Base+0xe2c>  // b.tstop
   18188:	ldr	x0, [sp, #248]
   1818c:	str	x0, [sp, #160]
   18190:	ldr	x0, [sp, #160]
   18194:	cmp	x0, #0x0
   18198:	b.eq	181b4 <PyInit__decimal@@Base+0x4dc>  // b.none
   1819c:	str	xzr, [sp, #248]
   181a0:	ldr	x2, [sp, #160]
   181a4:	mov	w1, #0x15dc                	// #5596
   181a8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   181ac:	add	x0, x0, #0x9c0
   181b0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   181b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   181b8:	add	x0, x0, #0x9b0
   181bc:	bl	68d0 <PyImport_ImportModule@plt>
   181c0:	str	x0, [sp, #264]
   181c4:	ldr	x0, [sp, #264]
   181c8:	cmp	x0, #0x0
   181cc:	b.eq	18b0c <PyInit__decimal@@Base+0xe34>  // b.none
   181d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   181d4:	add	x1, x0, #0x9c0
   181d8:	ldr	x0, [sp, #264]
   181dc:	bl	6630 <PyObject_GetAttrString@plt>
   181e0:	str	x0, [sp, #256]
   181e4:	ldr	x0, [sp, #256]
   181e8:	cmp	x0, #0x0
   181ec:	b.eq	18b14 <PyInit__decimal@@Base+0xe3c>  // b.none
   181f0:	ldr	x4, [sp, #256]
   181f4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   181f8:	add	x3, x0, #0x840
   181fc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18200:	add	x2, x0, #0x9d0
   18204:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18208:	add	x1, x0, #0x9e0
   1820c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   18210:	ldr	x0, [x0, #4000]
   18214:	bl	6830 <PyObject_CallFunction@plt>
   18218:	mov	x1, x0
   1821c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18220:	add	x0, x0, #0x710
   18224:	str	x1, [x0]
   18228:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1822c:	add	x0, x0, #0x710
   18230:	ldr	x0, [x0]
   18234:	cmp	x0, #0x0
   18238:	b.eq	18b1c <PyInit__decimal@@Base+0xe44>  // b.none
   1823c:	ldr	x0, [sp, #272]
   18240:	str	x0, [sp, #152]
   18244:	ldr	x0, [sp, #152]
   18248:	cmp	x0, #0x0
   1824c:	b.eq	18268 <PyInit__decimal@@Base+0x590>  // b.none
   18250:	str	xzr, [sp, #272]
   18254:	ldr	x2, [sp, #152]
   18258:	mov	w1, #0x15ea                	// #5610
   1825c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18260:	add	x0, x0, #0x9c0
   18264:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18268:	ldr	x0, [sp, #264]
   1826c:	str	x0, [sp, #144]
   18270:	ldr	x0, [sp, #144]
   18274:	cmp	x0, #0x0
   18278:	b.eq	18294 <PyInit__decimal@@Base+0x5bc>  // b.none
   1827c:	str	xzr, [sp, #264]
   18280:	ldr	x2, [sp, #144]
   18284:	mov	w1, #0x15eb                	// #5611
   18288:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   1828c:	add	x0, x0, #0x9c0
   18290:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18294:	ldr	x0, [sp, #256]
   18298:	str	x0, [sp, #136]
   1829c:	ldr	x0, [sp, #136]
   182a0:	cmp	x0, #0x0
   182a4:	b.eq	182c0 <PyInit__decimal@@Base+0x5e8>  // b.none
   182a8:	str	xzr, [sp, #256]
   182ac:	ldr	x2, [sp, #136]
   182b0:	mov	w1, #0x15ec                	// #5612
   182b4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   182b8:	add	x0, x0, #0x9c0
   182bc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   182c0:	mov	w1, #0x3f5                 	// #1013
   182c4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   182c8:	add	x0, x0, #0x150
   182cc:	bl	6890 <PyModule_Create2@plt>
   182d0:	str	x0, [sp, #296]
   182d4:	ldr	x0, [sp, #296]
   182d8:	cmp	x0, #0x0
   182dc:	b.eq	18b24 <PyInit__decimal@@Base+0xe4c>  // b.none
   182e0:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   182e4:	add	x0, x0, #0x360
   182e8:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   182ec:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   182f0:	add	x2, x0, #0x360
   182f4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   182f8:	add	x1, x0, #0x9e8
   182fc:	ldr	x0, [sp, #296]
   18300:	bl	6a40 <PyModule_AddObject@plt>
   18304:	cmp	w0, #0x0
   18308:	b.lt	18b2c <PyInit__decimal@@Base+0xe54>  // b.tstop
   1830c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18310:	add	x0, x0, #0x500
   18314:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   18318:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1831c:	add	x2, x0, #0x500
   18320:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18324:	add	x1, x0, #0x9f0
   18328:	ldr	x0, [sp, #296]
   1832c:	bl	6a40 <PyModule_AddObject@plt>
   18330:	cmp	w0, #0x0
   18334:	b.lt	18b34 <PyInit__decimal@@Base+0xe5c>  // b.tstop
   18338:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1833c:	add	x0, x0, #0x7c0
   18340:	ldr	x0, [x0]
   18344:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   18348:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1834c:	add	x0, x0, #0x7c0
   18350:	ldr	x0, [x0]
   18354:	mov	x2, x0
   18358:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1835c:	add	x1, x0, #0x988
   18360:	ldr	x0, [sp, #296]
   18364:	bl	6a40 <PyModule_AddObject@plt>
   18368:	cmp	w0, #0x0
   1836c:	b.lt	18b3c <PyInit__decimal@@Base+0xe64>  // b.tstop
   18370:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   18374:	ldr	x0, [x0, #3960]
   18378:	ldr	x0, [x0]
   1837c:	mov	x2, #0x0                   	// #0
   18380:	mov	x1, x0
   18384:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18388:	add	x0, x0, #0x9f8
   1838c:	bl	67b0 <PyErr_NewException@plt>
   18390:	mov	x1, x0
   18394:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18398:	add	x0, x0, #0x738
   1839c:	str	x1, [x0]
   183a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   183a4:	add	x0, x0, #0x738
   183a8:	ldr	x0, [x0]
   183ac:	cmp	x0, #0x0
   183b0:	b.eq	18b44 <PyInit__decimal@@Base+0xe6c>  // b.none
   183b4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   183b8:	add	x0, x0, #0x738
   183bc:	ldr	x0, [x0]
   183c0:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   183c4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   183c8:	add	x0, x0, #0x738
   183cc:	ldr	x0, [x0]
   183d0:	mov	x2, x0
   183d4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   183d8:	add	x1, x0, #0xa18
   183dc:	ldr	x0, [sp, #296]
   183e0:	bl	6a40 <PyModule_AddObject@plt>
   183e4:	cmp	w0, #0x0
   183e8:	b.lt	18b4c <PyInit__decimal@@Base+0xe74>  // b.tstop
   183ec:	mov	x0, #0x9                   	// #9
   183f0:	bl	6840 <PyTuple_New@plt>
   183f4:	mov	x1, x0
   183f8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   183fc:	add	x0, x0, #0x780
   18400:	str	x1, [x0]
   18404:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18408:	add	x0, x0, #0x780
   1840c:	ldr	x0, [x0]
   18410:	cmp	x0, #0x0
   18414:	b.eq	18b54 <PyInit__decimal@@Base+0xe7c>  // b.none
   18418:	mov	w0, #0x8                   	// #8
   1841c:	str	w0, [sp, #220]
   18420:	b	18610 <PyInit__decimal@@Base+0x938>
   18424:	ldrsw	x0, [sp, #220]
   18428:	lsl	x1, x0, #5
   1842c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18430:	add	x0, x0, #0x9e0
   18434:	add	x0, x1, x0
   18438:	str	x0, [sp, #240]
   1843c:	ldr	x0, [sp, #240]
   18440:	ldr	w0, [x0, #16]
   18444:	cmp	w0, #0x4, lsl #12
   18448:	b.eq	184f8 <PyInit__decimal@@Base+0x820>  // b.none
   1844c:	cmp	w0, #0x4, lsl #12
   18450:	b.hi	18530 <PyInit__decimal@@Base+0x858>  // b.pmore
   18454:	cmp	w0, #0x800
   18458:	b.eq	184cc <PyInit__decimal@@Base+0x7f4>  // b.none
   1845c:	cmp	w0, #0x800
   18460:	b.hi	18530 <PyInit__decimal@@Base+0x858>  // b.pmore
   18464:	cmp	w0, #0x4
   18468:	b.eq	184a0 <PyInit__decimal@@Base+0x7c8>  // b.none
   1846c:	cmp	w0, #0x400
   18470:	b.ne	18530 <PyInit__decimal@@Base+0x858>  // b.any
   18474:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18478:	add	x0, x0, #0x738
   1847c:	ldr	x1, [x0]
   18480:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   18484:	ldr	x0, [x0, #3936]
   18488:	ldr	x0, [x0]
   1848c:	mov	x2, x0
   18490:	mov	x0, #0x2                   	// #2
   18494:	bl	6b20 <PyTuple_Pack@plt>
   18498:	str	x0, [sp, #208]
   1849c:	b	18550 <PyInit__decimal@@Base+0x878>
   184a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   184a4:	add	x0, x0, #0x738
   184a8:	ldr	x1, [x0]
   184ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   184b0:	ldr	x0, [x0, #4016]
   184b4:	ldr	x0, [x0]
   184b8:	mov	x2, x0
   184bc:	mov	x0, #0x2                   	// #2
   184c0:	bl	6b20 <PyTuple_Pack@plt>
   184c4:	str	x0, [sp, #208]
   184c8:	b	18550 <PyInit__decimal@@Base+0x878>
   184cc:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   184d0:	add	x0, x0, #0x9e0
   184d4:	ldr	x1, [x0, #216]
   184d8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   184dc:	add	x0, x0, #0x9e0
   184e0:	ldr	x0, [x0, #248]
   184e4:	mov	x2, x0
   184e8:	mov	x0, #0x2                   	// #2
   184ec:	bl	6b20 <PyTuple_Pack@plt>
   184f0:	str	x0, [sp, #208]
   184f4:	b	18550 <PyInit__decimal@@Base+0x878>
   184f8:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   184fc:	add	x0, x0, #0x9e0
   18500:	ldr	x1, [x0, #216]
   18504:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18508:	add	x0, x0, #0x9e0
   1850c:	ldr	x2, [x0, #248]
   18510:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18514:	add	x0, x0, #0x9e0
   18518:	ldr	x0, [x0, #184]
   1851c:	mov	x3, x0
   18520:	mov	x0, #0x3                   	// #3
   18524:	bl	6b20 <PyTuple_Pack@plt>
   18528:	str	x0, [sp, #208]
   1852c:	b	18550 <PyInit__decimal@@Base+0x878>
   18530:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18534:	add	x0, x0, #0x738
   18538:	ldr	x0, [x0]
   1853c:	mov	x1, x0
   18540:	mov	x0, #0x1                   	// #1
   18544:	bl	6b20 <PyTuple_Pack@plt>
   18548:	str	x0, [sp, #208]
   1854c:	nop
   18550:	ldr	x0, [sp, #208]
   18554:	cmp	x0, #0x0
   18558:	b.eq	18b5c <PyInit__decimal@@Base+0xe84>  // b.none
   1855c:	ldr	x0, [sp, #240]
   18560:	ldr	x0, [x0, #8]
   18564:	mov	x2, #0x0                   	// #0
   18568:	ldr	x1, [sp, #208]
   1856c:	bl	67b0 <PyErr_NewException@plt>
   18570:	mov	x1, x0
   18574:	ldr	x0, [sp, #240]
   18578:	str	x1, [x0, #24]
   1857c:	ldr	x0, [sp, #240]
   18580:	ldr	x0, [x0, #24]
   18584:	cmp	x0, #0x0
   18588:	b.eq	18b64 <PyInit__decimal@@Base+0xe8c>  // b.none
   1858c:	ldr	x2, [sp, #208]
   18590:	mov	w1, #0x1627                	// #5671
   18594:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18598:	add	x0, x0, #0x9c0
   1859c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   185a0:	ldr	x0, [sp, #240]
   185a4:	ldr	x0, [x0, #24]
   185a8:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   185ac:	ldr	x0, [sp, #240]
   185b0:	ldr	x1, [x0]
   185b4:	ldr	x0, [sp, #240]
   185b8:	ldr	x0, [x0, #24]
   185bc:	mov	x2, x0
   185c0:	ldr	x0, [sp, #296]
   185c4:	bl	6a40 <PyModule_AddObject@plt>
   185c8:	cmp	w0, #0x0
   185cc:	b.lt	18b6c <PyInit__decimal@@Base+0xe94>  // b.tstop
   185d0:	ldr	x0, [sp, #240]
   185d4:	ldr	x0, [x0, #24]
   185d8:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   185dc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   185e0:	add	x0, x0, #0x780
   185e4:	ldr	x2, [x0]
   185e8:	ldr	x0, [sp, #240]
   185ec:	ldr	x1, [x0, #24]
   185f0:	ldrsw	x0, [sp, #220]
   185f4:	add	x0, x0, #0x2
   185f8:	lsl	x0, x0, #3
   185fc:	add	x0, x2, x0
   18600:	str	x1, [x0, #8]
   18604:	ldr	w0, [sp, #220]
   18608:	sub	w0, w0, #0x1
   1860c:	str	w0, [sp, #220]
   18610:	ldr	w0, [sp, #220]
   18614:	cmp	w0, #0x0
   18618:	b.ge	18424 <PyInit__decimal@@Base+0x74c>  // b.tcont
   1861c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18620:	add	x0, x0, #0x9e0
   18624:	ldr	x1, [x0, #24]
   18628:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   1862c:	add	x0, x0, #0xb20
   18630:	str	x1, [x0, #24]
   18634:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18638:	add	x0, x0, #0xb40
   1863c:	str	x0, [sp, #240]
   18640:	b	18728 <PyInit__decimal@@Base+0xa50>
   18644:	ldr	x0, [sp, #240]
   18648:	ldr	w0, [x0, #16]
   1864c:	cmp	w0, #0x10
   18650:	b.ne	18680 <PyInit__decimal@@Base+0x9a8>  // b.any
   18654:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18658:	add	x0, x0, #0x9e0
   1865c:	ldr	x1, [x0, #24]
   18660:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   18664:	ldr	x0, [x0, #4016]
   18668:	ldr	x0, [x0]
   1866c:	mov	x2, x0
   18670:	mov	x0, #0x2                   	// #2
   18674:	bl	6b20 <PyTuple_Pack@plt>
   18678:	str	x0, [sp, #200]
   1867c:	b	1869c <PyInit__decimal@@Base+0x9c4>
   18680:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18684:	add	x0, x0, #0x9e0
   18688:	ldr	x0, [x0, #24]
   1868c:	mov	x1, x0
   18690:	mov	x0, #0x1                   	// #1
   18694:	bl	6b20 <PyTuple_Pack@plt>
   18698:	str	x0, [sp, #200]
   1869c:	ldr	x0, [sp, #200]
   186a0:	cmp	x0, #0x0
   186a4:	b.eq	18b74 <PyInit__decimal@@Base+0xe9c>  // b.none
   186a8:	ldr	x0, [sp, #240]
   186ac:	ldr	x0, [x0, #8]
   186b0:	mov	x2, #0x0                   	// #0
   186b4:	ldr	x1, [sp, #200]
   186b8:	bl	67b0 <PyErr_NewException@plt>
   186bc:	mov	x1, x0
   186c0:	ldr	x0, [sp, #240]
   186c4:	str	x1, [x0, #24]
   186c8:	ldr	x0, [sp, #240]
   186cc:	ldr	x0, [x0, #24]
   186d0:	cmp	x0, #0x0
   186d4:	b.eq	18b7c <PyInit__decimal@@Base+0xea4>  // b.none
   186d8:	ldr	x2, [sp, #200]
   186dc:	mov	w1, #0x1647                	// #5703
   186e0:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   186e4:	add	x0, x0, #0x9c0
   186e8:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   186ec:	ldr	x0, [sp, #240]
   186f0:	ldr	x0, [x0, #24]
   186f4:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   186f8:	ldr	x0, [sp, #240]
   186fc:	ldr	x1, [x0]
   18700:	ldr	x0, [sp, #240]
   18704:	ldr	x0, [x0, #24]
   18708:	mov	x2, x0
   1870c:	ldr	x0, [sp, #296]
   18710:	bl	6a40 <PyModule_AddObject@plt>
   18714:	cmp	w0, #0x0
   18718:	b.lt	18b84 <PyInit__decimal@@Base+0xeac>  // b.tstop
   1871c:	ldr	x0, [sp, #240]
   18720:	add	x0, x0, #0x20
   18724:	str	x0, [sp, #240]
   18728:	ldr	x0, [sp, #240]
   1872c:	ldr	x0, [x0]
   18730:	cmp	x0, #0x0
   18734:	b.ne	18644 <PyInit__decimal@@Base+0x96c>  // b.any
   18738:	mov	x1, #0x0                   	// #0
   1873c:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18740:	add	x0, x0, #0x500
   18744:	bl	68e0 <PyObject_CallObject@plt>
   18748:	mov	x1, x0
   1874c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18750:	add	x0, x0, #0x720
   18754:	str	x1, [x0]
   18758:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1875c:	add	x0, x0, #0x720
   18760:	ldr	x0, [x0]
   18764:	cmp	x0, #0x0
   18768:	b.eq	18b8c <PyInit__decimal@@Base+0xeb4>  // b.none
   1876c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18770:	add	x0, x0, #0x720
   18774:	ldr	x0, [x0]
   18778:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   1877c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18780:	add	x0, x0, #0x720
   18784:	ldr	x0, [x0]
   18788:	mov	x2, x0
   1878c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18790:	add	x1, x0, #0xa30
   18794:	ldr	x0, [sp, #296]
   18798:	bl	6a40 <PyModule_AddObject@plt>
   1879c:	cmp	w0, #0x0
   187a0:	b.lt	18b94 <PyInit__decimal@@Base+0xebc>  // b.tstop
   187a4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   187a8:	ldr	x0, [x0, #4024]
   187ac:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   187b0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   187b4:	ldr	x2, [x0, #4024]
   187b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   187bc:	add	x1, x0, #0xa40
   187c0:	ldr	x0, [sp, #296]
   187c4:	bl	6a40 <PyModule_AddObject@plt>
   187c8:	cmp	w0, #0x0
   187cc:	b.lt	18b9c <PyInit__decimal@@Base+0xec4>  // b.tstop
   187d0:	mov	x1, #0x0                   	// #0
   187d4:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   187d8:	add	x0, x0, #0x500
   187dc:	bl	68e0 <PyObject_CallObject@plt>
   187e0:	mov	x1, x0
   187e4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   187e8:	add	x0, x0, #0x728
   187ec:	str	x1, [x0]
   187f0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   187f4:	add	x0, x0, #0x728
   187f8:	ldr	x0, [x0]
   187fc:	cmp	x0, #0x0
   18800:	b.eq	18ba4 <PyInit__decimal@@Base+0xecc>  // b.none
   18804:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18808:	add	x0, x0, #0x728
   1880c:	ldr	x0, [x0]
   18810:	bl	8960 <PyFloat_FromString@plt+0x1e10>
   18814:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18818:	add	x0, x0, #0x728
   1881c:	ldr	x0, [x0]
   18820:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   18824:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18828:	add	x0, x0, #0x728
   1882c:	ldr	x0, [x0]
   18830:	mov	x2, x0
   18834:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18838:	add	x1, x0, #0xa50
   1883c:	ldr	x0, [sp, #296]
   18840:	bl	6a40 <PyModule_AddObject@plt>
   18844:	cmp	w0, #0x0
   18848:	b.lt	18bac <PyInit__decimal@@Base+0xed4>  // b.tstop
   1884c:	mov	x1, #0x0                   	// #0
   18850:	adrp	x0, 61000 <PyInit__decimal@@Base+0x49328>
   18854:	add	x0, x0, #0x500
   18858:	bl	68e0 <PyObject_CallObject@plt>
   1885c:	mov	x1, x0
   18860:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18864:	add	x0, x0, #0x730
   18868:	str	x1, [x0]
   1886c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18870:	add	x0, x0, #0x730
   18874:	ldr	x0, [x0]
   18878:	cmp	x0, #0x0
   1887c:	b.eq	18bb4 <PyInit__decimal@@Base+0xedc>  // b.none
   18880:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18884:	add	x0, x0, #0x730
   18888:	ldr	x0, [x0]
   1888c:	bl	89ec <PyFloat_FromString@plt+0x1e9c>
   18890:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18894:	add	x0, x0, #0x730
   18898:	ldr	x0, [x0]
   1889c:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   188a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   188a4:	add	x0, x0, #0x730
   188a8:	ldr	x0, [x0]
   188ac:	mov	x2, x0
   188b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   188b4:	add	x1, x0, #0xa60
   188b8:	ldr	x0, [sp, #296]
   188bc:	bl	6a40 <PyModule_AddObject@plt>
   188c0:	cmp	w0, #0x0
   188c4:	b.lt	18bbc <PyInit__decimal@@Base+0xee4>  // b.tstop
   188c8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   188cc:	add	x0, x0, #0x1b8
   188d0:	str	x0, [sp, #232]
   188d4:	b	18924 <PyInit__decimal@@Base+0xc4c>
   188d8:	ldr	x0, [sp, #232]
   188dc:	ldr	x0, [x0, #8]
   188e0:	bl	6740 <PyLong_FromSsize_t@plt>
   188e4:	str	x0, [sp, #248]
   188e8:	ldr	x0, [sp, #248]
   188ec:	cmp	x0, #0x0
   188f0:	b.eq	18bc4 <PyInit__decimal@@Base+0xeec>  // b.none
   188f4:	ldr	x0, [sp, #232]
   188f8:	ldr	x0, [x0]
   188fc:	ldr	x2, [sp, #248]
   18900:	mov	x1, x0
   18904:	ldr	x0, [sp, #296]
   18908:	bl	6a40 <PyModule_AddObject@plt>
   1890c:	cmp	w0, #0x0
   18910:	b.lt	18bcc <PyInit__decimal@@Base+0xef4>  // b.tstop
   18914:	str	xzr, [sp, #248]
   18918:	ldr	x0, [sp, #232]
   1891c:	add	x0, x0, #0x10
   18920:	str	x0, [sp, #232]
   18924:	ldr	x0, [sp, #232]
   18928:	ldr	x0, [x0]
   1892c:	cmp	x0, #0x0
   18930:	b.ne	188d8 <PyInit__decimal@@Base+0xc00>  // b.any
   18934:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18938:	add	x0, x0, #0x7c8
   1893c:	str	x0, [sp, #224]
   18940:	b	18978 <PyInit__decimal@@Base+0xca0>
   18944:	ldr	x0, [sp, #224]
   18948:	ldr	x1, [x0]
   1894c:	ldr	x0, [sp, #224]
   18950:	ldr	w0, [x0, #8]
   18954:	sxtw	x0, w0
   18958:	mov	x2, x0
   1895c:	ldr	x0, [sp, #296]
   18960:	bl	65b0 <PyModule_AddIntConstant@plt>
   18964:	cmp	w0, #0x0
   18968:	b.lt	18bd4 <PyInit__decimal@@Base+0xefc>  // b.tstop
   1896c:	ldr	x0, [sp, #224]
   18970:	add	x0, x0, #0x10
   18974:	str	x0, [sp, #224]
   18978:	ldr	x0, [sp, #224]
   1897c:	ldr	x0, [x0]
   18980:	cmp	x0, #0x0
   18984:	b.ne	18944 <PyInit__decimal@@Base+0xc6c>  // b.any
   18988:	str	wzr, [sp, #220]
   1898c:	b	18a28 <PyInit__decimal@@Base+0xd50>
   18990:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18994:	add	x0, x0, #0x588
   18998:	ldrsw	x1, [sp, #220]
   1899c:	ldr	x0, [x0, x1, lsl #3]
   189a0:	bl	6a30 <PyUnicode_InternFromString@plt>
   189a4:	mov	x2, x0
   189a8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   189ac:	add	x0, x0, #0x740
   189b0:	ldrsw	x1, [sp, #220]
   189b4:	str	x2, [x0, x1, lsl #3]
   189b8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   189bc:	add	x0, x0, #0x740
   189c0:	ldrsw	x1, [sp, #220]
   189c4:	ldr	x0, [x0, x1, lsl #3]
   189c8:	cmp	x0, #0x0
   189cc:	b.eq	18bdc <PyInit__decimal@@Base+0xf04>  // b.none
   189d0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   189d4:	add	x0, x0, #0x740
   189d8:	ldrsw	x1, [sp, #220]
   189dc:	ldr	x0, [x0, x1, lsl #3]
   189e0:	bl	6cf0 <PyFloat_FromString@plt+0x1a0>
   189e4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   189e8:	add	x0, x0, #0x588
   189ec:	ldrsw	x1, [sp, #220]
   189f0:	ldr	x3, [x0, x1, lsl #3]
   189f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   189f8:	add	x0, x0, #0x740
   189fc:	ldrsw	x1, [sp, #220]
   18a00:	ldr	x0, [x0, x1, lsl #3]
   18a04:	mov	x2, x0
   18a08:	mov	x1, x3
   18a0c:	ldr	x0, [sp, #296]
   18a10:	bl	6a40 <PyModule_AddObject@plt>
   18a14:	cmp	w0, #0x0
   18a18:	b.lt	18be4 <PyInit__decimal@@Base+0xf0c>  // b.tstop
   18a1c:	ldr	w0, [sp, #220]
   18a20:	add	w0, w0, #0x1
   18a24:	str	w0, [sp, #220]
   18a28:	ldr	w0, [sp, #220]
   18a2c:	cmp	w0, #0x7
   18a30:	b.le	18990 <PyInit__decimal@@Base+0xcb8>
   18a34:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18a38:	add	x2, x0, #0xa70
   18a3c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18a40:	add	x1, x0, #0xa78
   18a44:	ldr	x0, [sp, #296]
   18a48:	bl	6a20 <PyModule_AddStringConstant@plt>
   18a4c:	cmp	w0, #0x0
   18a50:	b.lt	18bec <PyInit__decimal@@Base+0xf14>  // b.tstop
   18a54:	bl	24a58 <PyInit__decimal@@Base+0xcd80>
   18a58:	mov	x2, x0
   18a5c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   18a60:	add	x1, x0, #0xa88
   18a64:	ldr	x0, [sp, #296]
   18a68:	bl	6a20 <PyModule_AddStringConstant@plt>
   18a6c:	cmp	w0, #0x0
   18a70:	b.lt	18bf4 <PyInit__decimal@@Base+0xf1c>  // b.tstop
   18a74:	ldr	x0, [sp, #296]
   18a78:	b	18ed4 <PyInit__decimal@@Base+0x11fc>
   18a7c:	nop
   18a80:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18a84:	nop
   18a88:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18a8c:	nop
   18a90:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18a94:	nop
   18a98:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18a9c:	nop
   18aa0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18aa4:	nop
   18aa8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18aac:	nop
   18ab0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18ab4:	nop
   18ab8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18abc:	nop
   18ac0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18ac4:	nop
   18ac8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18acc:	nop
   18ad0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18ad4:	nop
   18ad8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18adc:	nop
   18ae0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18ae4:	nop
   18ae8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18aec:	nop
   18af0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18af4:	nop
   18af8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18afc:	nop
   18b00:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b04:	nop
   18b08:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b0c:	nop
   18b10:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b14:	nop
   18b18:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b1c:	nop
   18b20:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b24:	nop
   18b28:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b2c:	nop
   18b30:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b34:	nop
   18b38:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b3c:	nop
   18b40:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b44:	nop
   18b48:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b4c:	nop
   18b50:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b54:	nop
   18b58:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b5c:	nop
   18b60:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b64:	nop
   18b68:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b6c:	nop
   18b70:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b74:	nop
   18b78:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b7c:	nop
   18b80:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b84:	nop
   18b88:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b8c:	nop
   18b90:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b94:	nop
   18b98:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18b9c:	nop
   18ba0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18ba4:	nop
   18ba8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bac:	nop
   18bb0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bb4:	nop
   18bb8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bbc:	nop
   18bc0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bc4:	nop
   18bc8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bcc:	nop
   18bd0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bd4:	nop
   18bd8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bdc:	nop
   18be0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18be4:	nop
   18be8:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bec:	nop
   18bf0:	b	18bf8 <PyInit__decimal@@Base+0xf20>
   18bf4:	nop
   18bf8:	ldr	x0, [sp, #248]
   18bfc:	str	x0, [sp, #128]
   18c00:	ldr	x0, [sp, #128]
   18c04:	cmp	x0, #0x0
   18c08:	b.eq	18c24 <PyInit__decimal@@Base+0xf4c>  // b.none
   18c0c:	str	xzr, [sp, #248]
   18c10:	ldr	x2, [sp, #128]
   18c14:	mov	w1, #0x1686                	// #5766
   18c18:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18c1c:	add	x0, x0, #0x9c0
   18c20:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18c24:	ldr	x0, [sp, #288]
   18c28:	str	x0, [sp, #120]
   18c2c:	ldr	x0, [sp, #120]
   18c30:	cmp	x0, #0x0
   18c34:	b.eq	18c50 <PyInit__decimal@@Base+0xf78>  // b.none
   18c38:	str	xzr, [sp, #288]
   18c3c:	ldr	x2, [sp, #120]
   18c40:	mov	w1, #0x1687                	// #5767
   18c44:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18c48:	add	x0, x0, #0x9c0
   18c4c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18c50:	ldr	x0, [sp, #280]
   18c54:	str	x0, [sp, #112]
   18c58:	ldr	x0, [sp, #112]
   18c5c:	cmp	x0, #0x0
   18c60:	b.eq	18c7c <PyInit__decimal@@Base+0xfa4>  // b.none
   18c64:	str	xzr, [sp, #280]
   18c68:	ldr	x2, [sp, #112]
   18c6c:	mov	w1, #0x1688                	// #5768
   18c70:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18c74:	add	x0, x0, #0x9c0
   18c78:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18c7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18c80:	add	x0, x0, #0x7b8
   18c84:	ldr	x0, [x0]
   18c88:	str	x0, [sp, #104]
   18c8c:	ldr	x0, [sp, #104]
   18c90:	cmp	x0, #0x0
   18c94:	b.eq	18cb8 <PyInit__decimal@@Base+0xfe0>  // b.none
   18c98:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18c9c:	add	x0, x0, #0x7b8
   18ca0:	str	xzr, [x0]
   18ca4:	ldr	x2, [sp, #104]
   18ca8:	mov	w1, #0x1689                	// #5769
   18cac:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18cb0:	add	x0, x0, #0x9c0
   18cb4:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18cb8:	ldr	x0, [sp, #272]
   18cbc:	str	x0, [sp, #96]
   18cc0:	ldr	x0, [sp, #96]
   18cc4:	cmp	x0, #0x0
   18cc8:	b.eq	18ce4 <PyInit__decimal@@Base+0x100c>  // b.none
   18ccc:	str	xzr, [sp, #272]
   18cd0:	ldr	x2, [sp, #96]
   18cd4:	mov	w1, #0x168a                	// #5770
   18cd8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18cdc:	add	x0, x0, #0x9c0
   18ce0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18ce4:	ldr	x0, [sp, #264]
   18ce8:	str	x0, [sp, #88]
   18cec:	ldr	x0, [sp, #88]
   18cf0:	cmp	x0, #0x0
   18cf4:	b.eq	18d10 <PyInit__decimal@@Base+0x1038>  // b.none
   18cf8:	str	xzr, [sp, #264]
   18cfc:	ldr	x2, [sp, #88]
   18d00:	mov	w1, #0x168b                	// #5771
   18d04:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18d08:	add	x0, x0, #0x9c0
   18d0c:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18d10:	ldr	x0, [sp, #256]
   18d14:	str	x0, [sp, #80]
   18d18:	ldr	x0, [sp, #80]
   18d1c:	cmp	x0, #0x0
   18d20:	b.eq	18d3c <PyInit__decimal@@Base+0x1064>  // b.none
   18d24:	str	xzr, [sp, #256]
   18d28:	ldr	x2, [sp, #80]
   18d2c:	mov	w1, #0x168c                	// #5772
   18d30:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18d34:	add	x0, x0, #0x9c0
   18d38:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18d3c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18d40:	add	x0, x0, #0x780
   18d44:	ldr	x0, [x0]
   18d48:	str	x0, [sp, #72]
   18d4c:	ldr	x0, [sp, #72]
   18d50:	cmp	x0, #0x0
   18d54:	b.eq	18d78 <PyInit__decimal@@Base+0x10a0>  // b.none
   18d58:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18d5c:	add	x0, x0, #0x780
   18d60:	str	xzr, [x0]
   18d64:	ldr	x2, [sp, #72]
   18d68:	mov	w1, #0x168d                	// #5773
   18d6c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18d70:	add	x0, x0, #0x9c0
   18d74:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18d78:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18d7c:	add	x0, x0, #0x7c0
   18d80:	ldr	x0, [x0]
   18d84:	str	x0, [sp, #64]
   18d88:	ldr	x0, [sp, #64]
   18d8c:	cmp	x0, #0x0
   18d90:	b.eq	18db4 <PyInit__decimal@@Base+0x10dc>  // b.none
   18d94:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18d98:	add	x0, x0, #0x7c0
   18d9c:	str	xzr, [x0]
   18da0:	ldr	x2, [sp, #64]
   18da4:	mov	w1, #0x168e                	// #5774
   18da8:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18dac:	add	x0, x0, #0x9c0
   18db0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18db4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18db8:	add	x0, x0, #0x720
   18dbc:	ldr	x0, [x0]
   18dc0:	str	x0, [sp, #56]
   18dc4:	ldr	x0, [sp, #56]
   18dc8:	cmp	x0, #0x0
   18dcc:	b.eq	18df0 <PyInit__decimal@@Base+0x1118>  // b.none
   18dd0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18dd4:	add	x0, x0, #0x720
   18dd8:	str	xzr, [x0]
   18ddc:	ldr	x2, [sp, #56]
   18de0:	mov	w1, #0x168f                	// #5775
   18de4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18de8:	add	x0, x0, #0x9c0
   18dec:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18df0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18df4:	add	x0, x0, #0x728
   18df8:	ldr	x0, [x0]
   18dfc:	str	x0, [sp, #48]
   18e00:	ldr	x0, [sp, #48]
   18e04:	cmp	x0, #0x0
   18e08:	b.eq	18e2c <PyInit__decimal@@Base+0x1154>  // b.none
   18e0c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18e10:	add	x0, x0, #0x728
   18e14:	str	xzr, [x0]
   18e18:	ldr	x2, [sp, #48]
   18e1c:	mov	w1, #0x1690                	// #5776
   18e20:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18e24:	add	x0, x0, #0x9c0
   18e28:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18e2c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18e30:	add	x0, x0, #0x730
   18e34:	ldr	x0, [x0]
   18e38:	str	x0, [sp, #40]
   18e3c:	ldr	x0, [sp, #40]
   18e40:	cmp	x0, #0x0
   18e44:	b.eq	18e68 <PyInit__decimal@@Base+0x1190>  // b.none
   18e48:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18e4c:	add	x0, x0, #0x730
   18e50:	str	xzr, [x0]
   18e54:	ldr	x2, [sp, #40]
   18e58:	mov	w1, #0x1691                	// #5777
   18e5c:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18e60:	add	x0, x0, #0x9c0
   18e64:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18e68:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18e6c:	add	x0, x0, #0x718
   18e70:	ldr	x0, [x0]
   18e74:	str	x0, [sp, #32]
   18e78:	ldr	x0, [sp, #32]
   18e7c:	cmp	x0, #0x0
   18e80:	b.eq	18ea4 <PyInit__decimal@@Base+0x11cc>  // b.none
   18e84:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   18e88:	add	x0, x0, #0x718
   18e8c:	str	xzr, [x0]
   18e90:	ldr	x2, [sp, #32]
   18e94:	mov	w1, #0x1692                	// #5778
   18e98:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18e9c:	add	x0, x0, #0x9c0
   18ea0:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18ea4:	ldr	x0, [sp, #296]
   18ea8:	str	x0, [sp, #24]
   18eac:	ldr	x0, [sp, #24]
   18eb0:	cmp	x0, #0x0
   18eb4:	b.eq	18ed0 <PyInit__decimal@@Base+0x11f8>  // b.none
   18eb8:	str	xzr, [sp, #296]
   18ebc:	ldr	x2, [sp, #24]
   18ec0:	mov	w1, #0x1693                	// #5779
   18ec4:	adrp	x0, 47000 <PyInit__decimal@@Base+0x2f328>
   18ec8:	add	x0, x0, #0x9c0
   18ecc:	bl	6d18 <PyFloat_FromString@plt+0x1c8>
   18ed0:	mov	x0, #0x0                   	// #0
   18ed4:	ldp	x29, x30, [sp], #304
   18ed8:	ret
   18edc:	sub	sp, sp, #0x30
   18ee0:	str	x0, [sp, #24]
   18ee4:	str	x1, [sp, #16]
   18ee8:	str	x2, [sp, #8]
   18eec:	str	x3, [sp]
   18ef0:	ldr	x0, [sp, #8]
   18ef4:	mov	x6, x0
   18ef8:	mov	x7, #0x0                   	// #0
   18efc:	ldr	x0, [sp]
   18f00:	mov	x4, x0
   18f04:	mov	x5, #0x0                   	// #0
   18f08:	mul	x1, x6, x4
   18f0c:	umulh	x0, x6, x4
   18f10:	madd	x0, x7, x4, x0
   18f14:	madd	x0, x6, x5, x0
   18f18:	mov	x8, x1
   18f1c:	mov	x9, x0
   18f20:	stp	x8, x9, [sp, #32]
   18f24:	ldr	x0, [sp, #40]
   18f28:	mov	x10, x0
   18f2c:	mov	x11, #0x0                   	// #0
   18f30:	mov	x1, x10
   18f34:	ldr	x0, [sp, #24]
   18f38:	str	x1, [x0]
   18f3c:	ldr	x1, [sp, #32]
   18f40:	ldr	x0, [sp, #16]
   18f44:	str	x1, [x0]
   18f48:	nop
   18f4c:	add	sp, sp, #0x30
   18f50:	ret
   18f54:	stp	x29, x30, [sp, #-80]!
   18f58:	mov	x29, sp
   18f5c:	str	x0, [sp, #56]
   18f60:	str	x1, [sp, #48]
   18f64:	str	x2, [sp, #40]
   18f68:	str	x3, [sp, #32]
   18f6c:	str	x4, [sp, #24]
   18f70:	ldr	x0, [sp, #40]
   18f74:	mov	x14, x0
   18f78:	mov	x15, #0x0                   	// #0
   18f7c:	mov	x7, x14
   18f80:	mov	x6, #0x0                   	// #0
   18f84:	ldr	x0, [sp, #32]
   18f88:	mov	x10, x0
   18f8c:	mov	x11, #0x0                   	// #0
   18f90:	mov	x0, x10
   18f94:	adds	x1, x6, x0
   18f98:	mov	x0, x11
   18f9c:	adc	x0, x7, x0
   18fa0:	mov	x8, x1
   18fa4:	mov	x9, x0
   18fa8:	stp	x8, x9, [sp, #64]
   18fac:	ldr	x0, [sp, #24]
   18fb0:	mov	x12, x0
   18fb4:	mov	x13, #0x0                   	// #0
   18fb8:	mov	x2, x12
   18fbc:	mov	x3, x13
   18fc0:	ldp	x0, x1, [sp, #64]
   18fc4:	bl	413a4 <PyInit__decimal@@Base+0x296cc>
   18fc8:	mov	x1, x0
   18fcc:	ldr	x0, [sp, #56]
   18fd0:	str	x1, [x0]
   18fd4:	ldr	x1, [sp, #64]
   18fd8:	ldr	x0, [sp, #56]
   18fdc:	ldr	x2, [x0]
   18fe0:	ldr	x0, [sp, #24]
   18fe4:	mul	x0, x2, x0
   18fe8:	sub	x1, x1, x0
   18fec:	ldr	x0, [sp, #48]
   18ff0:	str	x1, [x0]
   18ff4:	nop
   18ff8:	ldp	x29, x30, [sp], #80
   18ffc:	ret
   19000:	sub	sp, sp, #0x20
   19004:	str	x0, [sp, #24]
   19008:	str	x1, [sp, #16]
   1900c:	str	x2, [sp, #8]
   19010:	str	x3, [sp]
   19014:	ldr	x0, [sp]
   19018:	cmp	x0, #0x9
   1901c:	b.hi	193e4 <PyInit__decimal@@Base+0x170c>  // b.pmore
   19020:	ldr	x0, [sp]
   19024:	cmp	x0, #0x4
   19028:	b.hi	191fc <PyInit__decimal@@Base+0x1524>  // b.pmore
   1902c:	ldr	x0, [sp]
   19030:	cmp	x0, #0x4
   19034:	b.eq	191b4 <PyInit__decimal@@Base+0x14dc>  // b.none
   19038:	ldr	x0, [sp]
   1903c:	cmp	x0, #0x4
   19040:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19044:	ldr	x0, [sp]
   19048:	cmp	x0, #0x3
   1904c:	b.eq	19154 <PyInit__decimal@@Base+0x147c>  // b.none
   19050:	ldr	x0, [sp]
   19054:	cmp	x0, #0x3
   19058:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   1905c:	ldr	x0, [sp]
   19060:	cmp	x0, #0x2
   19064:	b.eq	190f4 <PyInit__decimal@@Base+0x141c>  // b.none
   19068:	ldr	x0, [sp]
   1906c:	cmp	x0, #0x2
   19070:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19074:	ldr	x0, [sp]
   19078:	cmp	x0, #0x0
   1907c:	b.eq	19090 <PyInit__decimal@@Base+0x13b8>  // b.none
   19080:	ldr	x0, [sp]
   19084:	cmp	x0, #0x1
   19088:	b.eq	190a8 <PyInit__decimal@@Base+0x13d0>  // b.none
   1908c:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19090:	ldr	x0, [sp, #24]
   19094:	ldr	x1, [sp, #8]
   19098:	str	x1, [x0]
   1909c:	ldr	x0, [sp, #16]
   190a0:	str	xzr, [x0]
   190a4:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   190a8:	ldr	x1, [sp, #8]
   190ac:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   190b0:	movk	x0, #0xcccd
   190b4:	umulh	x0, x1, x0
   190b8:	lsr	x1, x0, #3
   190bc:	ldr	x0, [sp, #24]
   190c0:	str	x1, [x0]
   190c4:	ldr	x0, [sp, #24]
   190c8:	ldr	x1, [x0]
   190cc:	mov	x0, x1
   190d0:	lsl	x0, x0, #2
   190d4:	add	x0, x0, x1
   190d8:	lsl	x0, x0, #1
   190dc:	mov	x1, x0
   190e0:	ldr	x0, [sp, #8]
   190e4:	sub	x1, x0, x1
   190e8:	ldr	x0, [sp, #16]
   190ec:	str	x1, [x0]
   190f0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   190f4:	ldr	x0, [sp, #8]
   190f8:	lsr	x1, x0, #2
   190fc:	mov	x0, #0xf5c3                	// #62915
   19100:	movk	x0, #0x5c28, lsl #16
   19104:	movk	x0, #0xc28f, lsl #32
   19108:	movk	x0, #0x28f5, lsl #48
   1910c:	umulh	x0, x1, x0
   19110:	lsr	x1, x0, #2
   19114:	ldr	x0, [sp, #24]
   19118:	str	x1, [x0]
   1911c:	ldr	x0, [sp, #24]
   19120:	ldr	x1, [x0]
   19124:	mov	x0, x1
   19128:	lsl	x0, x0, #1
   1912c:	add	x0, x0, x1
   19130:	lsl	x0, x0, #3
   19134:	add	x0, x0, x1
   19138:	lsl	x0, x0, #2
   1913c:	mov	x1, x0
   19140:	ldr	x0, [sp, #8]
   19144:	sub	x1, x0, x1
   19148:	ldr	x0, [sp, #16]
   1914c:	str	x1, [x0]
   19150:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19154:	ldr	x0, [sp, #8]
   19158:	lsr	x1, x0, #3
   1915c:	mov	x0, #0xf7cf                	// #63439
   19160:	movk	x0, #0xe353, lsl #16
   19164:	movk	x0, #0x9ba5, lsl #32
   19168:	movk	x0, #0x20c4, lsl #48
   1916c:	umulh	x0, x1, x0
   19170:	lsr	x1, x0, #4
   19174:	ldr	x0, [sp, #24]
   19178:	str	x1, [x0]
   1917c:	ldr	x0, [sp, #24]
   19180:	ldr	x1, [x0]
   19184:	mov	x0, x1
   19188:	lsl	x0, x0, #5
   1918c:	sub	x0, x0, x1
   19190:	lsl	x0, x0, #2
   19194:	add	x0, x0, x1
   19198:	lsl	x0, x0, #3
   1919c:	mov	x1, x0
   191a0:	ldr	x0, [sp, #8]
   191a4:	sub	x1, x0, x1
   191a8:	ldr	x0, [sp, #16]
   191ac:	str	x1, [x0]
   191b0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   191b4:	ldr	x1, [sp, #8]
   191b8:	mov	x0, #0x594b                	// #22859
   191bc:	movk	x0, #0x3886, lsl #16
   191c0:	movk	x0, #0xc5d6, lsl #32
   191c4:	movk	x0, #0x346d, lsl #48
   191c8:	umulh	x0, x1, x0
   191cc:	lsr	x1, x0, #11
   191d0:	ldr	x0, [sp, #24]
   191d4:	str	x1, [x0]
   191d8:	ldr	x0, [sp, #24]
   191dc:	ldr	x1, [x0]
   191e0:	mov	x0, #0x2710                	// #10000
   191e4:	mul	x0, x1, x0
   191e8:	ldr	x1, [sp, #8]
   191ec:	sub	x1, x1, x0
   191f0:	ldr	x0, [sp, #16]
   191f4:	str	x1, [x0]
   191f8:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   191fc:	ldr	x0, [sp]
   19200:	cmp	x0, #0x9
   19204:	b.eq	19394 <PyInit__decimal@@Base+0x16bc>  // b.none
   19208:	ldr	x0, [sp]
   1920c:	cmp	x0, #0x9
   19210:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19214:	ldr	x0, [sp]
   19218:	cmp	x0, #0x8
   1921c:	b.eq	19348 <PyInit__decimal@@Base+0x1670>  // b.none
   19220:	ldr	x0, [sp]
   19224:	cmp	x0, #0x8
   19228:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   1922c:	ldr	x0, [sp]
   19230:	cmp	x0, #0x7
   19234:	b.eq	192fc <PyInit__decimal@@Base+0x1624>  // b.none
   19238:	ldr	x0, [sp]
   1923c:	cmp	x0, #0x7
   19240:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19244:	ldr	x0, [sp]
   19248:	cmp	x0, #0x5
   1924c:	b.eq	19260 <PyInit__decimal@@Base+0x1588>  // b.none
   19250:	ldr	x0, [sp]
   19254:	cmp	x0, #0x6
   19258:	b.eq	192b0 <PyInit__decimal@@Base+0x15d8>  // b.none
   1925c:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19260:	ldr	x0, [sp, #8]
   19264:	lsr	x1, x0, #5
   19268:	mov	x0, #0x7843                	// #30787
   1926c:	movk	x0, #0x71b4, lsl #16
   19270:	movk	x0, #0x5ac4, lsl #32
   19274:	movk	x0, #0xa7c, lsl #48
   19278:	umulh	x0, x1, x0
   1927c:	lsr	x1, x0, #7
   19280:	ldr	x0, [sp, #24]
   19284:	str	x1, [x0]
   19288:	ldr	x0, [sp, #24]
   1928c:	ldr	x1, [x0]
   19290:	mov	x0, #0x86a0                	// #34464
   19294:	movk	x0, #0x1, lsl #16
   19298:	mul	x0, x1, x0
   1929c:	ldr	x1, [sp, #8]
   192a0:	sub	x1, x1, x0
   192a4:	ldr	x0, [sp, #16]
   192a8:	str	x1, [x0]
   192ac:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   192b0:	ldr	x1, [sp, #8]
   192b4:	mov	x0, #0x34db                	// #13531
   192b8:	movk	x0, #0xd7b6, lsl #16
   192bc:	movk	x0, #0xde82, lsl #32
   192c0:	movk	x0, #0x431b, lsl #48
   192c4:	umulh	x0, x1, x0
   192c8:	lsr	x1, x0, #18
   192cc:	ldr	x0, [sp, #24]
   192d0:	str	x1, [x0]
   192d4:	ldr	x0, [sp, #24]
   192d8:	ldr	x1, [x0]
   192dc:	mov	x0, #0x4240                	// #16960
   192e0:	movk	x0, #0xf, lsl #16
   192e4:	mul	x0, x1, x0
   192e8:	ldr	x1, [sp, #8]
   192ec:	sub	x1, x1, x0
   192f0:	ldr	x0, [sp, #16]
   192f4:	str	x1, [x0]
   192f8:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   192fc:	ldr	x1, [sp, #8]
   19300:	mov	x0, #0x42bd                	// #17085
   19304:	movk	x0, #0xe57a, lsl #16
   19308:	movk	x0, #0x94d5, lsl #32
   1930c:	movk	x0, #0xd6bf, lsl #48
   19310:	umulh	x0, x1, x0
   19314:	lsr	x1, x0, #23
   19318:	ldr	x0, [sp, #24]
   1931c:	str	x1, [x0]
   19320:	ldr	x0, [sp, #24]
   19324:	ldr	x1, [x0]
   19328:	mov	x0, #0x9680                	// #38528
   1932c:	movk	x0, #0x98, lsl #16
   19330:	mul	x0, x1, x0
   19334:	ldr	x1, [sp, #8]
   19338:	sub	x1, x1, x0
   1933c:	ldr	x0, [sp, #16]
   19340:	str	x1, [x0]
   19344:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19348:	ldr	x1, [sp, #8]
   1934c:	mov	x0, #0xcefd                	// #52989
   19350:	movk	x0, #0x8461, lsl #16
   19354:	movk	x0, #0x7711, lsl #32
   19358:	movk	x0, #0xabcc, lsl #48
   1935c:	umulh	x0, x1, x0
   19360:	lsr	x1, x0, #26
   19364:	ldr	x0, [sp, #24]
   19368:	str	x1, [x0]
   1936c:	ldr	x0, [sp, #24]
   19370:	ldr	x1, [x0]
   19374:	mov	x0, #0xe100                	// #57600
   19378:	movk	x0, #0x5f5, lsl #16
   1937c:	mul	x0, x1, x0
   19380:	ldr	x1, [sp, #8]
   19384:	sub	x1, x1, x0
   19388:	ldr	x0, [sp, #16]
   1938c:	str	x1, [x0]
   19390:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19394:	ldr	x0, [sp, #8]
   19398:	lsr	x1, x0, #9
   1939c:	mov	x0, #0x5a53                	// #23123
   193a0:	movk	x0, #0xa09b, lsl #16
   193a4:	movk	x0, #0xb82f, lsl #32
   193a8:	movk	x0, #0x44, lsl #48
   193ac:	umulh	x0, x1, x0
   193b0:	lsr	x1, x0, #11
   193b4:	ldr	x0, [sp, #24]
   193b8:	str	x1, [x0]
   193bc:	ldr	x0, [sp, #24]
   193c0:	ldr	x1, [x0]
   193c4:	mov	x0, #0xca00                	// #51712
   193c8:	movk	x0, #0x3b9a, lsl #16
   193cc:	mul	x0, x1, x0
   193d0:	ldr	x1, [sp, #8]
   193d4:	sub	x1, x1, x0
   193d8:	ldr	x0, [sp, #16]
   193dc:	str	x1, [x0]
   193e0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   193e4:	ldr	x0, [sp]
   193e8:	cmp	x0, #0xe
   193ec:	b.hi	195e4 <PyInit__decimal@@Base+0x190c>  // b.pmore
   193f0:	ldr	x0, [sp]
   193f4:	cmp	x0, #0xe
   193f8:	b.eq	19594 <PyInit__decimal@@Base+0x18bc>  // b.none
   193fc:	ldr	x0, [sp]
   19400:	cmp	x0, #0xe
   19404:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19408:	ldr	x0, [sp]
   1940c:	cmp	x0, #0xd
   19410:	b.eq	19544 <PyInit__decimal@@Base+0x186c>  // b.none
   19414:	ldr	x0, [sp]
   19418:	cmp	x0, #0xd
   1941c:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19420:	ldr	x0, [sp]
   19424:	cmp	x0, #0xc
   19428:	b.eq	194f4 <PyInit__decimal@@Base+0x181c>  // b.none
   1942c:	ldr	x0, [sp]
   19430:	cmp	x0, #0xc
   19434:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19438:	ldr	x0, [sp]
   1943c:	cmp	x0, #0xa
   19440:	b.eq	19454 <PyInit__decimal@@Base+0x177c>  // b.none
   19444:	ldr	x0, [sp]
   19448:	cmp	x0, #0xb
   1944c:	b.eq	194a4 <PyInit__decimal@@Base+0x17cc>  // b.none
   19450:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19454:	ldr	x1, [sp, #8]
   19458:	mov	x0, #0xd5bf                	// #54719
   1945c:	movk	x0, #0xbded, lsl #16
   19460:	movk	x0, #0xfece, lsl #32
   19464:	movk	x0, #0xdbe6, lsl #48
   19468:	umulh	x0, x1, x0
   1946c:	lsr	x1, x0, #33
   19470:	ldr	x0, [sp, #24]
   19474:	str	x1, [x0]
   19478:	ldr	x0, [sp, #24]
   1947c:	ldr	x1, [x0]
   19480:	mov	x0, #0xe400                	// #58368
   19484:	movk	x0, #0x540b, lsl #16
   19488:	movk	x0, #0x2, lsl #32
   1948c:	mul	x0, x1, x0
   19490:	ldr	x1, [sp, #8]
   19494:	sub	x1, x1, x0
   19498:	ldr	x0, [sp, #16]
   1949c:	str	x1, [x0]
   194a0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   194a4:	ldr	x1, [sp, #8]
   194a8:	mov	x0, #0xaaff                	// #43775
   194ac:	movk	x0, #0xcb24, lsl #16
   194b0:	movk	x0, #0xff0b, lsl #32
   194b4:	movk	x0, #0xafeb, lsl #48
   194b8:	umulh	x0, x1, x0
   194bc:	lsr	x1, x0, #36
   194c0:	ldr	x0, [sp, #24]
   194c4:	str	x1, [x0]
   194c8:	ldr	x0, [sp, #24]
   194cc:	ldr	x1, [x0]
   194d0:	mov	x0, #0xe800                	// #59392
   194d4:	movk	x0, #0x4876, lsl #16
   194d8:	movk	x0, #0x17, lsl #32
   194dc:	mul	x0, x1, x0
   194e0:	ldr	x1, [sp, #8]
   194e4:	sub	x1, x1, x0
   194e8:	ldr	x0, [sp, #16]
   194ec:	str	x1, [x0]
   194f0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   194f4:	ldr	x1, [sp, #8]
   194f8:	mov	x0, #0x2233                	// #8755
   194fc:	movk	x0, #0x5bd4, lsl #16
   19500:	movk	x0, #0x3302, lsl #32
   19504:	movk	x0, #0x232f, lsl #48
   19508:	umulh	x0, x1, x0
   1950c:	lsr	x1, x0, #37
   19510:	ldr	x0, [sp, #24]
   19514:	str	x1, [x0]
   19518:	ldr	x0, [sp, #24]
   1951c:	ldr	x1, [x0]
   19520:	mov	x0, #0x1000                	// #4096
   19524:	movk	x0, #0xd4a5, lsl #16
   19528:	movk	x0, #0xe8, lsl #32
   1952c:	mul	x0, x1, x0
   19530:	ldr	x1, [sp, #8]
   19534:	sub	x1, x1, x0
   19538:	ldr	x0, [sp, #16]
   1953c:	str	x1, [x0]
   19540:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19544:	ldr	x1, [sp, #8]
   19548:	mov	x0, #0x385                 	// #901
   1954c:	movk	x0, #0x92ed, lsl #16
   19550:	movk	x0, #0x84d0, lsl #32
   19554:	movk	x0, #0x384b, lsl #48
   19558:	umulh	x0, x1, x0
   1955c:	lsr	x1, x0, #41
   19560:	ldr	x0, [sp, #24]
   19564:	str	x1, [x0]
   19568:	ldr	x0, [sp, #24]
   1956c:	ldr	x1, [x0]
   19570:	mov	x0, #0xa000                	// #40960
   19574:	movk	x0, #0x4e72, lsl #16
   19578:	movk	x0, #0x918, lsl #32
   1957c:	mul	x0, x1, x0
   19580:	ldr	x1, [sp, #8]
   19584:	sub	x1, x1, x0
   19588:	ldr	x0, [sp, #16]
   1958c:	str	x1, [x0]
   19590:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19594:	ldr	x1, [sp, #8]
   19598:	mov	x0, #0xcd81                	// #52609
   1959c:	movk	x0, #0x5095, lsl #16
   195a0:	movk	x0, #0x4dc3, lsl #32
   195a4:	movk	x0, #0xb42, lsl #48
   195a8:	umulh	x0, x1, x0
   195ac:	lsr	x1, x0, #42
   195b0:	ldr	x0, [sp, #24]
   195b4:	str	x1, [x0]
   195b8:	ldr	x0, [sp, #24]
   195bc:	ldr	x1, [x0]
   195c0:	mov	x0, #0x4000                	// #16384
   195c4:	movk	x0, #0x107a, lsl #16
   195c8:	movk	x0, #0x5af3, lsl #32
   195cc:	mul	x0, x1, x0
   195d0:	ldr	x1, [sp, #8]
   195d4:	sub	x1, x1, x0
   195d8:	ldr	x0, [sp, #16]
   195dc:	str	x1, [x0]
   195e0:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   195e4:	ldr	x0, [sp]
   195e8:	cmp	x0, #0x13
   195ec:	b.eq	19790 <PyInit__decimal@@Base+0x1ab8>  // b.none
   195f0:	ldr	x0, [sp]
   195f4:	cmp	x0, #0x13
   195f8:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   195fc:	ldr	x0, [sp]
   19600:	cmp	x0, #0x12
   19604:	b.eq	19740 <PyInit__decimal@@Base+0x1a68>  // b.none
   19608:	ldr	x0, [sp]
   1960c:	cmp	x0, #0x12
   19610:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   19614:	ldr	x0, [sp]
   19618:	cmp	x0, #0x11
   1961c:	b.eq	196f0 <PyInit__decimal@@Base+0x1a18>  // b.none
   19620:	ldr	x0, [sp]
   19624:	cmp	x0, #0x11
   19628:	b.hi	197e0 <PyInit__decimal@@Base+0x1b08>  // b.pmore
   1962c:	ldr	x0, [sp]
   19630:	cmp	x0, #0xf
   19634:	b.eq	19648 <PyInit__decimal@@Base+0x1970>  // b.none
   19638:	ldr	x0, [sp]
   1963c:	cmp	x0, #0x10
   19640:	b.eq	196a0 <PyInit__decimal@@Base+0x19c8>  // b.none
   19644:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19648:	ldr	x0, [sp, #8]
   1964c:	lsr	x1, x0, #15
   19650:	mov	x0, #0xeac3                	// #60099
   19654:	movk	x0, #0xf3dc, lsl #16
   19658:	movk	x0, #0x4075, lsl #32
   1965c:	movk	x0, #0x2, lsl #48
   19660:	umulh	x0, x1, x0
   19664:	lsr	x1, x0, #20
   19668:	ldr	x0, [sp, #24]
   1966c:	str	x1, [x0]
   19670:	ldr	x0, [sp, #24]
   19674:	ldr	x1, [x0]
   19678:	mov	x0, #0x8000                	// #32768
   1967c:	movk	x0, #0xa4c6, lsl #16
   19680:	movk	x0, #0x8d7e, lsl #32
   19684:	movk	x0, #0x3, lsl #48
   19688:	mul	x0, x1, x0
   1968c:	ldr	x1, [sp, #8]
   19690:	sub	x1, x1, x0
   19694:	ldr	x0, [sp, #16]
   19698:	str	x1, [x0]
   1969c:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   196a0:	ldr	x1, [sp, #8]
   196a4:	mov	x0, #0x7857                	// #30807
   196a8:	movk	x0, #0xb113, lsl #16
   196ac:	movk	x0, #0x652f, lsl #32
   196b0:	movk	x0, #0x39a5, lsl #48
   196b4:	umulh	x0, x1, x0
   196b8:	lsr	x1, x0, #51
   196bc:	ldr	x0, [sp, #24]
   196c0:	str	x1, [x0]
   196c4:	ldr	x0, [sp, #24]
   196c8:	ldr	x1, [x0]
   196cc:	mov	x0, #0x6fc10000            	// #1874919424
   196d0:	movk	x0, #0x86f2, lsl #32
   196d4:	movk	x0, #0x23, lsl #48
   196d8:	mul	x0, x1, x0
   196dc:	ldr	x1, [sp, #8]
   196e0:	sub	x1, x1, x0
   196e4:	ldr	x0, [sp, #16]
   196e8:	str	x1, [x0]
   196ec:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   196f0:	ldr	x0, [sp, #8]
   196f4:	lsr	x1, x0, #17
   196f8:	mov	x0, #0x1b53                	// #6995
   196fc:	movk	x0, #0xd519, lsl #16
   19700:	movk	x0, #0x5c3b, lsl #32
   19704:	umulh	x0, x1, x0
   19708:	lsr	x1, x0, #22
   1970c:	ldr	x0, [sp, #24]
   19710:	str	x1, [x0]
   19714:	ldr	x0, [sp, #24]
   19718:	ldr	x1, [x0]
   1971c:	mov	x0, #0x5d8a0000            	// #1569325056
   19720:	movk	x0, #0x4578, lsl #32
   19724:	movk	x0, #0x163, lsl #48
   19728:	mul	x0, x1, x0
   1972c:	ldr	x1, [sp, #8]
   19730:	sub	x1, x1, x0
   19734:	ldr	x0, [sp, #16]
   19738:	str	x1, [x0]
   1973c:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19740:	ldr	x0, [sp, #8]
   19744:	lsr	x1, x0, #18
   19748:	mov	x0, #0x490f                	// #18703
   1974c:	movk	x0, #0x7747, lsl #16
   19750:	movk	x0, #0x49c9, lsl #32
   19754:	umulh	x0, x1, x0
   19758:	lsr	x1, x0, #24
   1975c:	ldr	x0, [sp, #24]
   19760:	str	x1, [x0]
   19764:	ldr	x0, [sp, #24]
   19768:	ldr	x1, [x0]
   1976c:	mov	x0, #0xa7640000            	// #2808348672
   19770:	movk	x0, #0xb6b3, lsl #32
   19774:	movk	x0, #0xde0, lsl #48
   19778:	mul	x0, x1, x0
   1977c:	ldr	x1, [sp, #8]
   19780:	sub	x1, x1, x0
   19784:	ldr	x0, [sp, #16]
   19788:	str	x1, [x0]
   1978c:	b	197e0 <PyInit__decimal@@Base+0x1b08>
   19790:	ldr	x1, [sp, #8]
   19794:	mov	x0, #0x89e80000            	// #2313682944
   19798:	movk	x0, #0x2304, lsl #32
   1979c:	movk	x0, #0x8ac7, lsl #48
   197a0:	cmp	x1, x0
   197a4:	cset	w0, cs  // cs = hs, nlast
   197a8:	mov	w1, w0
   197ac:	ldr	x0, [sp, #24]
   197b0:	str	x1, [x0]
   197b4:	ldr	x0, [sp, #24]
   197b8:	ldr	x1, [x0]
   197bc:	mov	x0, #0x89e80000            	// #2313682944
   197c0:	movk	x0, #0x2304, lsl #32
   197c4:	movk	x0, #0x8ac7, lsl #48
   197c8:	mul	x0, x1, x0
   197cc:	ldr	x1, [sp, #8]
   197d0:	sub	x1, x1, x0
   197d4:	ldr	x0, [sp, #16]
   197d8:	str	x1, [x0]
   197dc:	nop
   197e0:	nop
   197e4:	add	sp, sp, #0x20
   197e8:	ret
   197ec:	sub	sp, sp, #0x20
   197f0:	str	x0, [sp, #24]
   197f4:	str	x1, [sp, #16]
   197f8:	str	x2, [sp, #8]
   197fc:	str	x3, [sp]
   19800:	ldr	x1, [sp, #8]
   19804:	ldr	x0, [sp]
   19808:	udiv	x1, x1, x0
   1980c:	ldr	x0, [sp, #24]
   19810:	str	x1, [x0]
   19814:	ldr	x0, [sp, #24]
   19818:	ldr	x1, [x0]
   1981c:	ldr	x0, [sp]
   19820:	mul	x0, x1, x0
   19824:	ldr	x1, [sp, #8]
   19828:	sub	x1, x1, x0
   1982c:	ldr	x0, [sp, #16]
   19830:	str	x1, [x0]
   19834:	nop
   19838:	add	sp, sp, #0x20
   1983c:	ret
   19840:	stp	x29, x30, [sp, #-32]!
   19844:	mov	x29, sp
   19848:	str	x0, [sp, #24]
   1984c:	str	x1, [sp, #16]
   19850:	ldr	x1, [sp, #16]
   19854:	ldr	x0, [sp, #24]
   19858:	cmp	x1, x0
   1985c:	b.ls	198c8 <PyInit__decimal@@Base+0x1bf0>  // b.plast
   19860:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   19864:	ldr	x0, [x0, #3904]
   19868:	ldr	x4, [x0]
   1986c:	mov	w3, #0x25c                 	// #604
   19870:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   19874:	add	x2, x0, #0xae0
   19878:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1987c:	add	x1, x0, #0xb20
   19880:	mov	x0, x4
   19884:	bl	6b30 <fprintf@plt>
   19888:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1988c:	ldr	x0, [x0, #3904]
   19890:	ldr	x0, [x0]
   19894:	mov	x3, x0
   19898:	mov	x2, #0x29                  	// #41
   1989c:	mov	x1, #0x1                   	// #1
   198a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   198a4:	add	x0, x0, #0xb30
   198a8:	bl	69d0 <fwrite@plt>
   198ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   198b0:	ldr	x0, [x0, #3904]
   198b4:	ldr	x0, [x0]
   198b8:	mov	x1, x0
   198bc:	mov	w0, #0xa                   	// #10
   198c0:	bl	6660 <fputc@plt>
   198c4:	bl	6860 <abort@plt>
   198c8:	ldr	x1, [sp, #24]
   198cc:	ldr	x0, [sp, #16]
   198d0:	sub	x0, x1, x0
   198d4:	ldp	x29, x30, [sp], #32
   198d8:	ret
   198dc:	stp	x29, x30, [sp, #-96]!
   198e0:	mov	x29, sp
   198e4:	str	x0, [sp, #40]
   198e8:	str	x1, [sp, #32]
   198ec:	str	x2, [sp, #24]
   198f0:	str	x3, [sp, #16]
   198f4:	ldr	x0, [sp, #16]
   198f8:	cmp	x0, #0x0
   198fc:	b.ge	19908 <PyInit__decimal@@Base+0x1c30>  // b.tcont
   19900:	mov	x0, #0xffffffffffffffff    	// #-1
   19904:	b	1990c <PyInit__decimal@@Base+0x1c34>
   19908:	mov	x0, #0x0                   	// #0
   1990c:	str	x0, [sp, #88]
   19910:	ldr	x1, [sp, #88]
   19914:	mov	x0, #0x89e80000            	// #2313682944
   19918:	movk	x0, #0x2304, lsl #32
   1991c:	movk	x0, #0x8ac7, lsl #48
   19920:	and	x0, x1, x0
   19924:	ldr	x1, [sp, #16]
   19928:	add	x0, x1, x0
   1992c:	str	x0, [sp, #80]
   19930:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   19934:	add	x0, x0, #0xe50
   19938:	ldr	x2, [x0]
   1993c:	ldr	x1, [sp, #24]
   19940:	ldr	x0, [sp, #88]
   19944:	sub	x3, x1, x0
   19948:	add	x1, sp, #0x38
   1994c:	add	x0, sp, #0x40
   19950:	bl	18edc <PyInit__decimal@@Base+0x1204>
   19954:	ldr	x1, [sp, #56]
   19958:	ldr	x0, [sp, #80]
   1995c:	add	x0, x1, x0
   19960:	str	x0, [sp, #56]
   19964:	ldr	x0, [sp, #56]
   19968:	ldr	x1, [sp, #80]
   1996c:	cmp	x1, x0
   19970:	b.ls	19980 <PyInit__decimal@@Base+0x1ca8>  // b.plast
   19974:	ldr	x0, [sp, #64]
   19978:	add	x0, x0, #0x1
   1997c:	str	x0, [sp, #64]
   19980:	ldr	x0, [sp, #64]
   19984:	ldr	x1, [sp, #24]
   19988:	add	x0, x1, x0
   1998c:	str	x0, [sp, #72]
   19990:	ldr	x0, [sp, #72]
   19994:	mvn	x0, x0
   19998:	str	x0, [sp, #72]
   1999c:	add	x1, sp, #0x38
   199a0:	add	x0, sp, #0x40
   199a4:	mov	x3, #0x89e80000            	// #2313682944
   199a8:	movk	x3, #0x2304, lsl #32
   199ac:	movk	x3, #0x8ac7, lsl #48
   199b0:	ldr	x2, [sp, #72]
   199b4:	bl	18edc <PyInit__decimal@@Base+0x1204>
   199b8:	ldr	x1, [sp, #56]
   199bc:	ldr	x0, [sp, #16]
   199c0:	add	x0, x1, x0
   199c4:	str	x0, [sp, #56]
   199c8:	ldr	x0, [sp, #56]
   199cc:	ldr	x1, [sp, #16]
   199d0:	cmp	x1, x0
   199d4:	b.ls	199e4 <PyInit__decimal@@Base+0x1d0c>  // b.plast
   199d8:	ldr	x0, [sp, #64]
   199dc:	add	x0, x0, #0x1
   199e0:	str	x0, [sp, #64]
   199e4:	ldr	x1, [sp, #64]
   199e8:	ldr	x0, [sp, #24]
   199ec:	add	x0, x1, x0
   199f0:	str	x0, [sp, #64]
   199f4:	ldr	x1, [sp, #64]
   199f8:	mov	x0, #0x76180000            	// #1981284352
   199fc:	movk	x0, #0xdcfb, lsl #32
   19a00:	movk	x0, #0x7538, lsl #48
   19a04:	add	x0, x1, x0
   19a08:	str	x0, [sp, #64]
   19a0c:	ldr	x1, [sp, #64]
   19a10:	ldr	x0, [sp, #72]
   19a14:	sub	x1, x1, x0
   19a18:	ldr	x0, [sp, #40]
   19a1c:	str	x1, [x0]
   19a20:	ldr	x1, [sp, #64]
   19a24:	mov	x0, #0x89e80000            	// #2313682944
   19a28:	movk	x0, #0x2304, lsl #32
   19a2c:	movk	x0, #0x8ac7, lsl #48
   19a30:	and	x1, x1, x0
   19a34:	ldr	x0, [sp, #56]
   19a38:	add	x1, x1, x0
   19a3c:	ldr	x0, [sp, #32]
   19a40:	str	x1, [x0]
   19a44:	nop
   19a48:	ldp	x29, x30, [sp], #96
   19a4c:	ret
   19a50:	stp	x29, x30, [sp, #-64]!
   19a54:	mov	x29, sp
   19a58:	str	x0, [sp, #40]
   19a5c:	str	x1, [sp, #32]
   19a60:	str	x2, [sp, #24]
   19a64:	add	x1, sp, #0x30
   19a68:	add	x0, sp, #0x38
   19a6c:	ldr	x3, [sp, #24]
   19a70:	ldr	x2, [sp, #32]
   19a74:	bl	18edc <PyInit__decimal@@Base+0x1204>
   19a78:	ldr	x0, [sp, #40]
   19a7c:	add	x0, x0, #0x8
   19a80:	ldr	x1, [sp, #56]
   19a84:	ldr	x2, [sp, #48]
   19a88:	mov	x3, x2
   19a8c:	mov	x2, x1
   19a90:	ldr	x1, [sp, #40]
   19a94:	bl	198dc <PyInit__decimal@@Base+0x1c04>
   19a98:	nop
   19a9c:	ldp	x29, x30, [sp], #64
   19aa0:	ret
   19aa4:	sub	sp, sp, #0x10
   19aa8:	str	x0, [sp, #8]
   19aac:	str	x1, [sp]
   19ab0:	b	19ad8 <PyInit__decimal@@Base+0x1e00>
   19ab4:	ldr	x0, [sp]
   19ab8:	lsl	x0, x0, #3
   19abc:	ldr	x1, [sp, #8]
   19ac0:	add	x0, x1, x0
   19ac4:	ldr	x0, [x0]
   19ac8:	cmp	x0, #0x0
   19acc:	b.eq	19ad8 <PyInit__decimal@@Base+0x1e00>  // b.none
   19ad0:	mov	w0, #0x0                   	// #0
   19ad4:	b	19af4 <PyInit__decimal@@Base+0x1e1c>
   19ad8:	ldr	x0, [sp]
   19adc:	sub	x0, x0, #0x1
   19ae0:	str	x0, [sp]
   19ae4:	ldr	x0, [sp]
   19ae8:	cmp	x0, #0x0
   19aec:	b.ge	19ab4 <PyInit__decimal@@Base+0x1ddc>  // b.tcont
   19af0:	mov	w0, #0x1                   	// #1
   19af4:	add	sp, sp, #0x10
   19af8:	ret
   19afc:	sub	sp, sp, #0x50
   19b00:	str	x0, [sp, #40]
   19b04:	str	x1, [sp, #32]
   19b08:	str	x2, [sp, #24]
   19b0c:	str	x3, [sp, #16]
   19b10:	str	x4, [sp, #8]
   19b14:	str	xzr, [sp, #72]
   19b18:	str	xzr, [sp, #64]
   19b1c:	b	19bf0 <PyInit__decimal@@Base+0x1f18>
   19b20:	ldr	x0, [sp, #64]
   19b24:	lsl	x0, x0, #3
   19b28:	ldr	x1, [sp, #32]
   19b2c:	add	x0, x1, x0
   19b30:	ldr	x1, [x0]
   19b34:	ldr	x0, [sp, #64]
   19b38:	lsl	x0, x0, #3
   19b3c:	ldr	x2, [sp, #24]
   19b40:	add	x0, x2, x0
   19b44:	ldr	x2, [x0]
   19b48:	ldr	x0, [sp, #72]
   19b4c:	add	x0, x2, x0
   19b50:	add	x0, x1, x0
   19b54:	str	x0, [sp, #56]
   19b58:	ldr	x0, [sp, #64]
   19b5c:	lsl	x0, x0, #3
   19b60:	ldr	x1, [sp, #32]
   19b64:	add	x0, x1, x0
   19b68:	ldr	x0, [x0]
   19b6c:	ldr	x1, [sp, #56]
   19b70:	cmp	x1, x0
   19b74:	cset	w0, cc  // cc = lo, ul, last
   19b78:	and	w1, w0, #0xff
   19b7c:	ldr	x2, [sp, #56]
   19b80:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   19b84:	movk	x0, #0x2304, lsl #32
   19b88:	movk	x0, #0x8ac7, lsl #48
   19b8c:	cmp	x2, x0
   19b90:	cset	w0, hi  // hi = pmore
   19b94:	and	w0, w0, #0xff
   19b98:	orr	w0, w1, w0
   19b9c:	and	w0, w0, #0xff
   19ba0:	and	x0, x0, #0xff
   19ba4:	str	x0, [sp, #72]
   19ba8:	ldr	x0, [sp, #72]
   19bac:	cmp	x0, #0x0
   19bb0:	b.eq	19bcc <PyInit__decimal@@Base+0x1ef4>  // b.none
   19bb4:	ldr	x1, [sp, #56]
   19bb8:	mov	x0, #0x76180000            	// #1981284352
   19bbc:	movk	x0, #0xdcfb, lsl #32
   19bc0:	movk	x0, #0x7538, lsl #48
   19bc4:	add	x0, x1, x0
   19bc8:	b	19bd0 <PyInit__decimal@@Base+0x1ef8>
   19bcc:	ldr	x0, [sp, #56]
   19bd0:	ldr	x1, [sp, #64]
   19bd4:	lsl	x1, x1, #3
   19bd8:	ldr	x2, [sp, #40]
   19bdc:	add	x1, x2, x1
   19be0:	str	x0, [x1]
   19be4:	ldr	x0, [sp, #64]
   19be8:	add	x0, x0, #0x1
   19bec:	str	x0, [sp, #64]
   19bf0:	ldr	x1, [sp, #64]
   19bf4:	ldr	x0, [sp, #8]
   19bf8:	cmp	x1, x0
   19bfc:	b.cc	19b20 <PyInit__decimal@@Base+0x1e48>  // b.lo, b.ul, b.last
   19c00:	b	19c80 <PyInit__decimal@@Base+0x1fa8>
   19c04:	ldr	x0, [sp, #64]
   19c08:	lsl	x0, x0, #3
   19c0c:	ldr	x1, [sp, #32]
   19c10:	add	x0, x1, x0
   19c14:	ldr	x0, [x0]
   19c18:	ldr	x1, [sp, #72]
   19c1c:	add	x0, x1, x0
   19c20:	str	x0, [sp, #56]
   19c24:	ldr	x1, [sp, #56]
   19c28:	mov	x0, #0x89e80000            	// #2313682944
   19c2c:	movk	x0, #0x2304, lsl #32
   19c30:	movk	x0, #0x8ac7, lsl #48
   19c34:	cmp	x1, x0
   19c38:	cset	w0, eq  // eq = none
   19c3c:	and	w0, w0, #0xff
   19c40:	and	x0, x0, #0xff
   19c44:	str	x0, [sp, #72]
   19c48:	ldr	x0, [sp, #72]
   19c4c:	cmp	x0, #0x0
   19c50:	b.ne	19c5c <PyInit__decimal@@Base+0x1f84>  // b.any
   19c54:	ldr	x0, [sp, #56]
   19c58:	b	19c60 <PyInit__decimal@@Base+0x1f88>
   19c5c:	mov	x0, #0x0                   	// #0
   19c60:	ldr	x1, [sp, #64]
   19c64:	lsl	x1, x1, #3
   19c68:	ldr	x2, [sp, #40]
   19c6c:	add	x1, x2, x1
   19c70:	str	x0, [x1]
   19c74:	ldr	x0, [sp, #64]
   19c78:	add	x0, x0, #0x1
   19c7c:	str	x0, [sp, #64]
   19c80:	ldr	x0, [sp, #72]
   19c84:	cmp	x0, #0x0
   19c88:	b.eq	19cd4 <PyInit__decimal@@Base+0x1ffc>  // b.none
   19c8c:	ldr	x1, [sp, #64]
   19c90:	ldr	x0, [sp, #16]
   19c94:	cmp	x1, x0
   19c98:	b.cc	19c04 <PyInit__decimal@@Base+0x1f2c>  // b.lo, b.ul, b.last
   19c9c:	b	19cd4 <PyInit__decimal@@Base+0x1ffc>
   19ca0:	ldr	x0, [sp, #64]
   19ca4:	lsl	x0, x0, #3
   19ca8:	ldr	x1, [sp, #32]
   19cac:	add	x1, x1, x0
   19cb0:	ldr	x0, [sp, #64]
   19cb4:	lsl	x0, x0, #3
   19cb8:	ldr	x2, [sp, #40]
   19cbc:	add	x0, x2, x0
   19cc0:	ldr	x1, [x1]
   19cc4:	str	x1, [x0]
   19cc8:	ldr	x0, [sp, #64]
   19ccc:	add	x0, x0, #0x1
   19cd0:	str	x0, [sp, #64]
   19cd4:	ldr	x1, [sp, #64]
   19cd8:	ldr	x0, [sp, #16]
   19cdc:	cmp	x1, x0
   19ce0:	b.cc	19ca0 <PyInit__decimal@@Base+0x1fc8>  // b.lo, b.ul, b.last
   19ce4:	ldr	x0, [sp, #72]
   19ce8:	add	sp, sp, #0x50
   19cec:	ret
   19cf0:	sub	sp, sp, #0x40
   19cf4:	str	x0, [sp, #24]
   19cf8:	str	x1, [sp, #16]
   19cfc:	str	x2, [sp, #8]
   19d00:	str	xzr, [sp, #56]
   19d04:	ldr	x0, [sp, #8]
   19d08:	cmp	x0, #0x0
   19d0c:	b.eq	19e88 <PyInit__decimal@@Base+0x21b0>  // b.none
   19d10:	str	xzr, [sp, #48]
   19d14:	b	19de8 <PyInit__decimal@@Base+0x2110>
   19d18:	ldr	x0, [sp, #48]
   19d1c:	lsl	x0, x0, #3
   19d20:	ldr	x1, [sp, #24]
   19d24:	add	x0, x1, x0
   19d28:	ldr	x1, [x0]
   19d2c:	ldr	x0, [sp, #48]
   19d30:	lsl	x0, x0, #3
   19d34:	ldr	x2, [sp, #16]
   19d38:	add	x0, x2, x0
   19d3c:	ldr	x2, [x0]
   19d40:	ldr	x0, [sp, #56]
   19d44:	add	x0, x2, x0
   19d48:	add	x0, x1, x0
   19d4c:	str	x0, [sp, #40]
   19d50:	ldr	x0, [sp, #48]
   19d54:	lsl	x0, x0, #3
   19d58:	ldr	x1, [sp, #24]
   19d5c:	add	x0, x1, x0
   19d60:	ldr	x0, [x0]
   19d64:	ldr	x1, [sp, #40]
   19d68:	cmp	x1, x0
   19d6c:	cset	w0, cc  // cc = lo, ul, last
   19d70:	and	w1, w0, #0xff
   19d74:	ldr	x2, [sp, #40]
   19d78:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   19d7c:	movk	x0, #0x2304, lsl #32
   19d80:	movk	x0, #0x8ac7, lsl #48
   19d84:	cmp	x2, x0
   19d88:	cset	w0, hi  // hi = pmore
   19d8c:	and	w0, w0, #0xff
   19d90:	orr	w0, w1, w0
   19d94:	and	w0, w0, #0xff
   19d98:	and	x0, x0, #0xff
   19d9c:	str	x0, [sp, #56]
   19da0:	ldr	x0, [sp, #56]
   19da4:	cmp	x0, #0x0
   19da8:	b.eq	19dc4 <PyInit__decimal@@Base+0x20ec>  // b.none
   19dac:	ldr	x1, [sp, #40]
   19db0:	mov	x0, #0x76180000            	// #1981284352
   19db4:	movk	x0, #0xdcfb, lsl #32
   19db8:	movk	x0, #0x7538, lsl #48
   19dbc:	add	x0, x1, x0
   19dc0:	b	19dc8 <PyInit__decimal@@Base+0x20f0>
   19dc4:	ldr	x0, [sp, #40]
   19dc8:	ldr	x1, [sp, #48]
   19dcc:	lsl	x1, x1, #3
   19dd0:	ldr	x2, [sp, #24]
   19dd4:	add	x1, x2, x1
   19dd8:	str	x0, [x1]
   19ddc:	ldr	x0, [sp, #48]
   19de0:	add	x0, x0, #0x1
   19de4:	str	x0, [sp, #48]
   19de8:	ldr	x1, [sp, #48]
   19dec:	ldr	x0, [sp, #8]
   19df0:	cmp	x1, x0
   19df4:	b.cc	19d18 <PyInit__decimal@@Base+0x2040>  // b.lo, b.ul, b.last
   19df8:	b	19e78 <PyInit__decimal@@Base+0x21a0>
   19dfc:	ldr	x0, [sp, #48]
   19e00:	lsl	x0, x0, #3
   19e04:	ldr	x1, [sp, #24]
   19e08:	add	x0, x1, x0
   19e0c:	ldr	x0, [x0]
   19e10:	ldr	x1, [sp, #56]
   19e14:	add	x0, x1, x0
   19e18:	str	x0, [sp, #40]
   19e1c:	ldr	x1, [sp, #40]
   19e20:	mov	x0, #0x89e80000            	// #2313682944
   19e24:	movk	x0, #0x2304, lsl #32
   19e28:	movk	x0, #0x8ac7, lsl #48
   19e2c:	cmp	x1, x0
   19e30:	cset	w0, eq  // eq = none
   19e34:	and	w0, w0, #0xff
   19e38:	and	x0, x0, #0xff
   19e3c:	str	x0, [sp, #56]
   19e40:	ldr	x0, [sp, #56]
   19e44:	cmp	x0, #0x0
   19e48:	b.ne	19e54 <PyInit__decimal@@Base+0x217c>  // b.any
   19e4c:	ldr	x0, [sp, #40]
   19e50:	b	19e58 <PyInit__decimal@@Base+0x2180>
   19e54:	mov	x0, #0x0                   	// #0
   19e58:	ldr	x1, [sp, #48]
   19e5c:	lsl	x1, x1, #3
   19e60:	ldr	x2, [sp, #24]
   19e64:	add	x1, x2, x1
   19e68:	str	x0, [x1]
   19e6c:	ldr	x0, [sp, #48]
   19e70:	add	x0, x0, #0x1
   19e74:	str	x0, [sp, #48]
   19e78:	ldr	x0, [sp, #56]
   19e7c:	cmp	x0, #0x0
   19e80:	b.ne	19dfc <PyInit__decimal@@Base+0x2124>  // b.any
   19e84:	b	19e8c <PyInit__decimal@@Base+0x21b4>
   19e88:	nop
   19e8c:	add	sp, sp, #0x40
   19e90:	ret
   19e94:	sub	sp, sp, #0x40
   19e98:	str	x0, [sp, #24]
   19e9c:	str	x1, [sp, #16]
   19ea0:	str	x2, [sp, #8]
   19ea4:	ldr	x0, [sp, #24]
   19ea8:	ldr	x0, [x0]
   19eac:	ldr	x1, [sp, #8]
   19eb0:	add	x0, x1, x0
   19eb4:	str	x0, [sp, #40]
   19eb8:	ldr	x1, [sp, #40]
   19ebc:	ldr	x0, [sp, #8]
   19ec0:	cmp	x1, x0
   19ec4:	cset	w0, cc  // cc = lo, ul, last
   19ec8:	and	w1, w0, #0xff
   19ecc:	ldr	x2, [sp, #40]
   19ed0:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   19ed4:	movk	x0, #0x2304, lsl #32
   19ed8:	movk	x0, #0x8ac7, lsl #48
   19edc:	cmp	x2, x0
   19ee0:	cset	w0, hi  // hi = pmore
   19ee4:	and	w0, w0, #0xff
   19ee8:	orr	w0, w1, w0
   19eec:	and	w0, w0, #0xff
   19ef0:	and	x0, x0, #0xff
   19ef4:	str	x0, [sp, #56]
   19ef8:	ldr	x0, [sp, #56]
   19efc:	cmp	x0, #0x0
   19f00:	b.eq	19f1c <PyInit__decimal@@Base+0x2244>  // b.none
   19f04:	ldr	x1, [sp, #40]
   19f08:	mov	x0, #0x76180000            	// #1981284352
   19f0c:	movk	x0, #0xdcfb, lsl #32
   19f10:	movk	x0, #0x7538, lsl #48
   19f14:	add	x0, x1, x0
   19f18:	b	19f20 <PyInit__decimal@@Base+0x2248>
   19f1c:	ldr	x0, [sp, #40]
   19f20:	ldr	x1, [sp, #24]
   19f24:	str	x0, [x1]
   19f28:	mov	x0, #0x1                   	// #1
   19f2c:	str	x0, [sp, #48]
   19f30:	b	19fb0 <PyInit__decimal@@Base+0x22d8>
   19f34:	ldr	x0, [sp, #48]
   19f38:	lsl	x0, x0, #3
   19f3c:	ldr	x1, [sp, #24]
   19f40:	add	x0, x1, x0
   19f44:	ldr	x0, [x0]
   19f48:	ldr	x1, [sp, #56]
   19f4c:	add	x0, x1, x0
   19f50:	str	x0, [sp, #40]
   19f54:	ldr	x1, [sp, #40]
   19f58:	mov	x0, #0x89e80000            	// #2313682944
   19f5c:	movk	x0, #0x2304, lsl #32
   19f60:	movk	x0, #0x8ac7, lsl #48
   19f64:	cmp	x1, x0
   19f68:	cset	w0, eq  // eq = none
   19f6c:	and	w0, w0, #0xff
   19f70:	and	x0, x0, #0xff
   19f74:	str	x0, [sp, #56]
   19f78:	ldr	x0, [sp, #56]
   19f7c:	cmp	x0, #0x0
   19f80:	b.ne	19f8c <PyInit__decimal@@Base+0x22b4>  // b.any
   19f84:	ldr	x0, [sp, #40]
   19f88:	b	19f90 <PyInit__decimal@@Base+0x22b8>
   19f8c:	mov	x0, #0x0                   	// #0
   19f90:	ldr	x1, [sp, #48]
   19f94:	lsl	x1, x1, #3
   19f98:	ldr	x2, [sp, #24]
   19f9c:	add	x1, x2, x1
   19fa0:	str	x0, [x1]
   19fa4:	ldr	x0, [sp, #48]
   19fa8:	add	x0, x0, #0x1
   19fac:	str	x0, [sp, #48]
   19fb0:	ldr	x0, [sp, #56]
   19fb4:	cmp	x0, #0x0
   19fb8:	b.eq	19fcc <PyInit__decimal@@Base+0x22f4>  // b.none
   19fbc:	ldr	x1, [sp, #48]
   19fc0:	ldr	x0, [sp, #16]
   19fc4:	cmp	x1, x0
   19fc8:	b.cc	19f34 <PyInit__decimal@@Base+0x225c>  // b.lo, b.ul, b.last
   19fcc:	ldr	x0, [sp, #56]
   19fd0:	add	sp, sp, #0x40
   19fd4:	ret
   19fd8:	sub	sp, sp, #0x30
   19fdc:	str	x0, [sp, #8]
   19fe0:	str	x1, [sp]
   19fe4:	mov	x0, #0x1                   	// #1
   19fe8:	str	x0, [sp, #40]
   19fec:	str	xzr, [sp, #32]
   19ff0:	b	1a070 <PyInit__decimal@@Base+0x2398>
   19ff4:	ldr	x0, [sp, #32]
   19ff8:	lsl	x0, x0, #3
   19ffc:	ldr	x1, [sp, #8]
   1a000:	add	x0, x1, x0
   1a004:	ldr	x0, [x0]
   1a008:	ldr	x1, [sp, #40]
   1a00c:	add	x0, x1, x0
   1a010:	str	x0, [sp, #24]
   1a014:	ldr	x1, [sp, #24]
   1a018:	mov	x0, #0x89e80000            	// #2313682944
   1a01c:	movk	x0, #0x2304, lsl #32
   1a020:	movk	x0, #0x8ac7, lsl #48
   1a024:	cmp	x1, x0
   1a028:	cset	w0, eq  // eq = none
   1a02c:	and	w0, w0, #0xff
   1a030:	and	x0, x0, #0xff
   1a034:	str	x0, [sp, #40]
   1a038:	ldr	x0, [sp, #40]
   1a03c:	cmp	x0, #0x0
   1a040:	b.ne	1a04c <PyInit__decimal@@Base+0x2374>  // b.any
   1a044:	ldr	x0, [sp, #24]
   1a048:	b	1a050 <PyInit__decimal@@Base+0x2378>
   1a04c:	mov	x0, #0x0                   	// #0
   1a050:	ldr	x1, [sp, #32]
   1a054:	lsl	x1, x1, #3
   1a058:	ldr	x2, [sp, #8]
   1a05c:	add	x1, x2, x1
   1a060:	str	x0, [x1]
   1a064:	ldr	x0, [sp, #32]
   1a068:	add	x0, x0, #0x1
   1a06c:	str	x0, [sp, #32]
   1a070:	ldr	x0, [sp, #40]
   1a074:	cmp	x0, #0x0
   1a078:	b.eq	1a08c <PyInit__decimal@@Base+0x23b4>  // b.none
   1a07c:	ldr	x1, [sp, #32]
   1a080:	ldr	x0, [sp]
   1a084:	cmp	x1, x0
   1a088:	b.cc	19ff4 <PyInit__decimal@@Base+0x231c>  // b.lo, b.ul, b.last
   1a08c:	ldr	x0, [sp, #40]
   1a090:	add	sp, sp, #0x30
   1a094:	ret
   1a098:	sub	sp, sp, #0x50
   1a09c:	str	x0, [sp, #40]
   1a0a0:	str	x1, [sp, #32]
   1a0a4:	str	x2, [sp, #24]
   1a0a8:	str	x3, [sp, #16]
   1a0ac:	str	x4, [sp, #8]
   1a0b0:	str	xzr, [sp, #72]
   1a0b4:	str	xzr, [sp, #64]
   1a0b8:	b	1a168 <PyInit__decimal@@Base+0x2490>
   1a0bc:	ldr	x0, [sp, #64]
   1a0c0:	lsl	x0, x0, #3
   1a0c4:	ldr	x1, [sp, #32]
   1a0c8:	add	x0, x1, x0
   1a0cc:	ldr	x1, [x0]
   1a0d0:	ldr	x0, [sp, #64]
   1a0d4:	lsl	x0, x0, #3
   1a0d8:	ldr	x2, [sp, #24]
   1a0dc:	add	x0, x2, x0
   1a0e0:	ldr	x2, [x0]
   1a0e4:	ldr	x0, [sp, #72]
   1a0e8:	add	x0, x2, x0
   1a0ec:	sub	x0, x1, x0
   1a0f0:	str	x0, [sp, #56]
   1a0f4:	ldr	x0, [sp, #64]
   1a0f8:	lsl	x0, x0, #3
   1a0fc:	ldr	x1, [sp, #32]
   1a100:	add	x0, x1, x0
   1a104:	ldr	x0, [x0]
   1a108:	ldr	x1, [sp, #56]
   1a10c:	cmp	x1, x0
   1a110:	cset	w0, hi  // hi = pmore
   1a114:	and	w0, w0, #0xff
   1a118:	and	x0, x0, #0xff
   1a11c:	str	x0, [sp, #72]
   1a120:	ldr	x0, [sp, #72]
   1a124:	cmp	x0, #0x0
   1a128:	b.eq	1a144 <PyInit__decimal@@Base+0x246c>  // b.none
   1a12c:	ldr	x1, [sp, #56]
   1a130:	mov	x0, #0x89e80000            	// #2313682944
   1a134:	movk	x0, #0x2304, lsl #32
   1a138:	movk	x0, #0x8ac7, lsl #48
   1a13c:	add	x0, x1, x0
   1a140:	b	1a148 <PyInit__decimal@@Base+0x2470>
   1a144:	ldr	x0, [sp, #56]
   1a148:	ldr	x1, [sp, #64]
   1a14c:	lsl	x1, x1, #3
   1a150:	ldr	x2, [sp, #40]
   1a154:	add	x1, x2, x1
   1a158:	str	x0, [x1]
   1a15c:	ldr	x0, [sp, #64]
   1a160:	add	x0, x0, #0x1
   1a164:	str	x0, [sp, #64]
   1a168:	ldr	x1, [sp, #64]
   1a16c:	ldr	x0, [sp, #8]
   1a170:	cmp	x1, x0
   1a174:	b.cc	1a0bc <PyInit__decimal@@Base+0x23e4>  // b.lo, b.ul, b.last
   1a178:	b	1a204 <PyInit__decimal@@Base+0x252c>
   1a17c:	ldr	x0, [sp, #64]
   1a180:	lsl	x0, x0, #3
   1a184:	ldr	x1, [sp, #32]
   1a188:	add	x0, x1, x0
   1a18c:	ldr	x1, [x0]
   1a190:	ldr	x0, [sp, #72]
   1a194:	sub	x0, x1, x0
   1a198:	str	x0, [sp, #56]
   1a19c:	ldr	x0, [sp, #64]
   1a1a0:	lsl	x0, x0, #3
   1a1a4:	ldr	x1, [sp, #32]
   1a1a8:	add	x0, x1, x0
   1a1ac:	ldr	x0, [x0]
   1a1b0:	cmp	x0, #0x0
   1a1b4:	cset	w0, eq  // eq = none
   1a1b8:	and	w0, w0, #0xff
   1a1bc:	and	x0, x0, #0xff
   1a1c0:	str	x0, [sp, #72]
   1a1c4:	ldr	x0, [sp, #72]
   1a1c8:	cmp	x0, #0x0
   1a1cc:	b.ne	1a1d8 <PyInit__decimal@@Base+0x2500>  // b.any
   1a1d0:	ldr	x0, [sp, #56]
   1a1d4:	b	1a1e4 <PyInit__decimal@@Base+0x250c>
   1a1d8:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1a1dc:	movk	x0, #0x2304, lsl #32
   1a1e0:	movk	x0, #0x8ac7, lsl #48
   1a1e4:	ldr	x1, [sp, #64]
   1a1e8:	lsl	x1, x1, #3
   1a1ec:	ldr	x2, [sp, #40]
   1a1f0:	add	x1, x2, x1
   1a1f4:	str	x0, [x1]
   1a1f8:	ldr	x0, [sp, #64]
   1a1fc:	add	x0, x0, #0x1
   1a200:	str	x0, [sp, #64]
   1a204:	ldr	x0, [sp, #72]
   1a208:	cmp	x0, #0x0
   1a20c:	b.eq	1a258 <PyInit__decimal@@Base+0x2580>  // b.none
   1a210:	ldr	x1, [sp, #64]
   1a214:	ldr	x0, [sp, #16]
   1a218:	cmp	x1, x0
   1a21c:	b.cc	1a17c <PyInit__decimal@@Base+0x24a4>  // b.lo, b.ul, b.last
   1a220:	b	1a258 <PyInit__decimal@@Base+0x2580>
   1a224:	ldr	x0, [sp, #64]
   1a228:	lsl	x0, x0, #3
   1a22c:	ldr	x1, [sp, #32]
   1a230:	add	x1, x1, x0
   1a234:	ldr	x0, [sp, #64]
   1a238:	lsl	x0, x0, #3
   1a23c:	ldr	x2, [sp, #40]
   1a240:	add	x0, x2, x0
   1a244:	ldr	x1, [x1]
   1a248:	str	x1, [x0]
   1a24c:	ldr	x0, [sp, #64]
   1a250:	add	x0, x0, #0x1
   1a254:	str	x0, [sp, #64]
   1a258:	ldr	x1, [sp, #64]
   1a25c:	ldr	x0, [sp, #16]
   1a260:	cmp	x1, x0
   1a264:	b.cc	1a224 <PyInit__decimal@@Base+0x254c>  // b.lo, b.ul, b.last
   1a268:	nop
   1a26c:	nop
   1a270:	add	sp, sp, #0x50
   1a274:	ret
   1a278:	sub	sp, sp, #0x40
   1a27c:	str	x0, [sp, #24]
   1a280:	str	x1, [sp, #16]
   1a284:	str	x2, [sp, #8]
   1a288:	str	xzr, [sp, #56]
   1a28c:	ldr	x0, [sp, #8]
   1a290:	cmp	x0, #0x0
   1a294:	b.eq	1a3f8 <PyInit__decimal@@Base+0x2720>  // b.none
   1a298:	str	xzr, [sp, #48]
   1a29c:	b	1a34c <PyInit__decimal@@Base+0x2674>
   1a2a0:	ldr	x0, [sp, #48]
   1a2a4:	lsl	x0, x0, #3
   1a2a8:	ldr	x1, [sp, #24]
   1a2ac:	add	x0, x1, x0
   1a2b0:	ldr	x1, [x0]
   1a2b4:	ldr	x0, [sp, #48]
   1a2b8:	lsl	x0, x0, #3
   1a2bc:	ldr	x2, [sp, #16]
   1a2c0:	add	x0, x2, x0
   1a2c4:	ldr	x2, [x0]
   1a2c8:	ldr	x0, [sp, #56]
   1a2cc:	add	x0, x2, x0
   1a2d0:	sub	x0, x1, x0
   1a2d4:	str	x0, [sp, #40]
   1a2d8:	ldr	x0, [sp, #48]
   1a2dc:	lsl	x0, x0, #3
   1a2e0:	ldr	x1, [sp, #24]
   1a2e4:	add	x0, x1, x0
   1a2e8:	ldr	x0, [x0]
   1a2ec:	ldr	x1, [sp, #40]
   1a2f0:	cmp	x1, x0
   1a2f4:	cset	w0, hi  // hi = pmore
   1a2f8:	and	w0, w0, #0xff
   1a2fc:	and	x0, x0, #0xff
   1a300:	str	x0, [sp, #56]
   1a304:	ldr	x0, [sp, #56]
   1a308:	cmp	x0, #0x0
   1a30c:	b.eq	1a328 <PyInit__decimal@@Base+0x2650>  // b.none
   1a310:	ldr	x1, [sp, #40]
   1a314:	mov	x0, #0x89e80000            	// #2313682944
   1a318:	movk	x0, #0x2304, lsl #32
   1a31c:	movk	x0, #0x8ac7, lsl #48
   1a320:	add	x0, x1, x0
   1a324:	b	1a32c <PyInit__decimal@@Base+0x2654>
   1a328:	ldr	x0, [sp, #40]
   1a32c:	ldr	x1, [sp, #48]
   1a330:	lsl	x1, x1, #3
   1a334:	ldr	x2, [sp, #24]
   1a338:	add	x1, x2, x1
   1a33c:	str	x0, [x1]
   1a340:	ldr	x0, [sp, #48]
   1a344:	add	x0, x0, #0x1
   1a348:	str	x0, [sp, #48]
   1a34c:	ldr	x1, [sp, #48]
   1a350:	ldr	x0, [sp, #8]
   1a354:	cmp	x1, x0
   1a358:	b.cc	1a2a0 <PyInit__decimal@@Base+0x25c8>  // b.lo, b.ul, b.last
   1a35c:	b	1a3e8 <PyInit__decimal@@Base+0x2710>
   1a360:	ldr	x0, [sp, #48]
   1a364:	lsl	x0, x0, #3
   1a368:	ldr	x1, [sp, #24]
   1a36c:	add	x0, x1, x0
   1a370:	ldr	x1, [x0]
   1a374:	ldr	x0, [sp, #56]
   1a378:	sub	x0, x1, x0
   1a37c:	str	x0, [sp, #40]
   1a380:	ldr	x0, [sp, #48]
   1a384:	lsl	x0, x0, #3
   1a388:	ldr	x1, [sp, #24]
   1a38c:	add	x0, x1, x0
   1a390:	ldr	x0, [x0]
   1a394:	cmp	x0, #0x0
   1a398:	cset	w0, eq  // eq = none
   1a39c:	and	w0, w0, #0xff
   1a3a0:	and	x0, x0, #0xff
   1a3a4:	str	x0, [sp, #56]
   1a3a8:	ldr	x0, [sp, #56]
   1a3ac:	cmp	x0, #0x0
   1a3b0:	b.ne	1a3bc <PyInit__decimal@@Base+0x26e4>  // b.any
   1a3b4:	ldr	x0, [sp, #40]
   1a3b8:	b	1a3c8 <PyInit__decimal@@Base+0x26f0>
   1a3bc:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1a3c0:	movk	x0, #0x2304, lsl #32
   1a3c4:	movk	x0, #0x8ac7, lsl #48
   1a3c8:	ldr	x1, [sp, #48]
   1a3cc:	lsl	x1, x1, #3
   1a3d0:	ldr	x2, [sp, #24]
   1a3d4:	add	x1, x2, x1
   1a3d8:	str	x0, [x1]
   1a3dc:	ldr	x0, [sp, #48]
   1a3e0:	add	x0, x0, #0x1
   1a3e4:	str	x0, [sp, #48]
   1a3e8:	ldr	x0, [sp, #56]
   1a3ec:	cmp	x0, #0x0
   1a3f0:	b.ne	1a360 <PyInit__decimal@@Base+0x2688>  // b.any
   1a3f4:	b	1a3fc <PyInit__decimal@@Base+0x2724>
   1a3f8:	nop
   1a3fc:	add	sp, sp, #0x40
   1a400:	ret
   1a404:	stp	x29, x30, [sp, #-80]!
   1a408:	mov	x29, sp
   1a40c:	str	x0, [sp, #40]
   1a410:	str	x1, [sp, #32]
   1a414:	str	x2, [sp, #24]
   1a418:	str	x3, [sp, #16]
   1a41c:	str	xzr, [sp, #48]
   1a420:	str	xzr, [sp, #72]
   1a424:	b	1a4a4 <PyInit__decimal@@Base+0x27cc>
   1a428:	ldr	x0, [sp, #72]
   1a42c:	lsl	x0, x0, #3
   1a430:	ldr	x1, [sp, #32]
   1a434:	add	x0, x1, x0
   1a438:	ldr	x2, [x0]
   1a43c:	add	x1, sp, #0x38
   1a440:	add	x0, sp, #0x40
   1a444:	ldr	x3, [sp, #16]
   1a448:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1a44c:	ldr	x1, [sp, #48]
   1a450:	ldr	x0, [sp, #56]
   1a454:	add	x0, x1, x0
   1a458:	str	x0, [sp, #56]
   1a45c:	ldr	x1, [sp, #56]
   1a460:	ldr	x0, [sp, #48]
   1a464:	cmp	x1, x0
   1a468:	b.cs	1a478 <PyInit__decimal@@Base+0x27a0>  // b.hs, b.nlast
   1a46c:	ldr	x0, [sp, #64]
   1a470:	add	x0, x0, #0x1
   1a474:	str	x0, [sp, #64]
   1a478:	ldr	x0, [sp, #72]
   1a47c:	lsl	x0, x0, #3
   1a480:	ldr	x1, [sp, #40]
   1a484:	add	x1, x1, x0
   1a488:	ldr	x2, [sp, #64]
   1a48c:	ldr	x3, [sp, #56]
   1a490:	add	x0, sp, #0x30
   1a494:	bl	198dc <PyInit__decimal@@Base+0x1c04>
   1a498:	ldr	x0, [sp, #72]
   1a49c:	add	x0, x0, #0x1
   1a4a0:	str	x0, [sp, #72]
   1a4a4:	ldr	x1, [sp, #72]
   1a4a8:	ldr	x0, [sp, #24]
   1a4ac:	cmp	x1, x0
   1a4b0:	b.cc	1a428 <PyInit__decimal@@Base+0x2750>  // b.lo, b.ul, b.last
   1a4b4:	ldr	x0, [sp, #72]
   1a4b8:	lsl	x0, x0, #3
   1a4bc:	ldr	x1, [sp, #40]
   1a4c0:	add	x0, x1, x0
   1a4c4:	ldr	x1, [sp, #48]
   1a4c8:	str	x1, [x0]
   1a4cc:	nop
   1a4d0:	ldp	x29, x30, [sp], #80
   1a4d4:	ret
   1a4d8:	stp	x29, x30, [sp, #-112]!
   1a4dc:	mov	x29, sp
   1a4e0:	str	x0, [sp, #56]
   1a4e4:	str	x1, [sp, #48]
   1a4e8:	str	x2, [sp, #40]
   1a4ec:	str	x3, [sp, #32]
   1a4f0:	str	x4, [sp, #24]
   1a4f4:	str	xzr, [sp, #96]
   1a4f8:	b	1a634 <PyInit__decimal@@Base+0x295c>
   1a4fc:	str	xzr, [sp, #72]
   1a500:	str	xzr, [sp, #104]
   1a504:	b	1a5f8 <PyInit__decimal@@Base+0x2920>
   1a508:	ldr	x0, [sp, #104]
   1a50c:	lsl	x0, x0, #3
   1a510:	ldr	x1, [sp, #48]
   1a514:	add	x0, x1, x0
   1a518:	ldr	x2, [x0]
   1a51c:	ldr	x0, [sp, #96]
   1a520:	lsl	x0, x0, #3
   1a524:	ldr	x1, [sp, #40]
   1a528:	add	x0, x1, x0
   1a52c:	ldr	x3, [x0]
   1a530:	add	x1, sp, #0x50
   1a534:	add	x0, sp, #0x58
   1a538:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1a53c:	ldr	x1, [sp, #104]
   1a540:	ldr	x0, [sp, #96]
   1a544:	add	x0, x1, x0
   1a548:	lsl	x0, x0, #3
   1a54c:	ldr	x1, [sp, #56]
   1a550:	add	x0, x1, x0
   1a554:	ldr	x1, [x0]
   1a558:	ldr	x0, [sp, #80]
   1a55c:	add	x0, x1, x0
   1a560:	str	x0, [sp, #80]
   1a564:	ldr	x1, [sp, #104]
   1a568:	ldr	x0, [sp, #96]
   1a56c:	add	x0, x1, x0
   1a570:	lsl	x0, x0, #3
   1a574:	ldr	x1, [sp, #56]
   1a578:	add	x0, x1, x0
   1a57c:	ldr	x1, [x0]
   1a580:	ldr	x0, [sp, #80]
   1a584:	cmp	x1, x0
   1a588:	b.ls	1a598 <PyInit__decimal@@Base+0x28c0>  // b.plast
   1a58c:	ldr	x0, [sp, #88]
   1a590:	add	x0, x0, #0x1
   1a594:	str	x0, [sp, #88]
   1a598:	ldr	x1, [sp, #72]
   1a59c:	ldr	x0, [sp, #80]
   1a5a0:	add	x0, x1, x0
   1a5a4:	str	x0, [sp, #80]
   1a5a8:	ldr	x1, [sp, #80]
   1a5ac:	ldr	x0, [sp, #72]
   1a5b0:	cmp	x1, x0
   1a5b4:	b.cs	1a5c4 <PyInit__decimal@@Base+0x28ec>  // b.hs, b.nlast
   1a5b8:	ldr	x0, [sp, #88]
   1a5bc:	add	x0, x0, #0x1
   1a5c0:	str	x0, [sp, #88]
   1a5c4:	ldr	x1, [sp, #104]
   1a5c8:	ldr	x0, [sp, #96]
   1a5cc:	add	x0, x1, x0
   1a5d0:	lsl	x0, x0, #3
   1a5d4:	ldr	x1, [sp, #56]
   1a5d8:	add	x1, x1, x0
   1a5dc:	ldr	x2, [sp, #88]
   1a5e0:	ldr	x3, [sp, #80]
   1a5e4:	add	x0, sp, #0x48
   1a5e8:	bl	198dc <PyInit__decimal@@Base+0x1c04>
   1a5ec:	ldr	x0, [sp, #104]
   1a5f0:	add	x0, x0, #0x1
   1a5f4:	str	x0, [sp, #104]
   1a5f8:	ldr	x1, [sp, #104]
   1a5fc:	ldr	x0, [sp, #32]
   1a600:	cmp	x1, x0
   1a604:	b.cc	1a508 <PyInit__decimal@@Base+0x2830>  // b.lo, b.ul, b.last
   1a608:	ldr	x1, [sp, #96]
   1a60c:	ldr	x0, [sp, #32]
   1a610:	add	x0, x1, x0
   1a614:	lsl	x0, x0, #3
   1a618:	ldr	x1, [sp, #56]
   1a61c:	add	x0, x1, x0
   1a620:	ldr	x1, [sp, #72]
   1a624:	str	x1, [x0]
   1a628:	ldr	x0, [sp, #96]
   1a62c:	add	x0, x0, #0x1
   1a630:	str	x0, [sp, #96]
   1a634:	ldr	x1, [sp, #96]
   1a638:	ldr	x0, [sp, #24]
   1a63c:	cmp	x1, x0
   1a640:	b.cc	1a4fc <PyInit__decimal@@Base+0x2824>  // b.lo, b.ul, b.last
   1a644:	nop
   1a648:	nop
   1a64c:	ldp	x29, x30, [sp], #112
   1a650:	ret
   1a654:	stp	x29, x30, [sp, #-80]!
   1a658:	mov	x29, sp
   1a65c:	str	x0, [sp, #40]
   1a660:	str	x1, [sp, #32]
   1a664:	str	x2, [sp, #24]
   1a668:	str	x3, [sp, #16]
   1a66c:	str	xzr, [sp, #48]
   1a670:	ldr	x0, [sp, #24]
   1a674:	sub	x0, x0, #0x1
   1a678:	str	x0, [sp, #72]
   1a67c:	b	1a718 <PyInit__decimal@@Base+0x2a40>
   1a680:	ldr	x2, [sp, #48]
   1a684:	add	x1, sp, #0x38
   1a688:	add	x0, sp, #0x40
   1a68c:	mov	x3, #0x89e80000            	// #2313682944
   1a690:	movk	x3, #0x2304, lsl #32
   1a694:	movk	x3, #0x8ac7, lsl #48
   1a698:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1a69c:	ldr	x0, [sp, #72]
   1a6a0:	lsl	x0, x0, #3
   1a6a4:	ldr	x1, [sp, #32]
   1a6a8:	add	x0, x1, x0
   1a6ac:	ldr	x1, [x0]
   1a6b0:	ldr	x0, [sp, #56]
   1a6b4:	add	x0, x1, x0
   1a6b8:	str	x0, [sp, #56]
   1a6bc:	ldr	x0, [sp, #72]
   1a6c0:	lsl	x0, x0, #3
   1a6c4:	ldr	x1, [sp, #32]
   1a6c8:	add	x0, x1, x0
   1a6cc:	ldr	x1, [x0]
   1a6d0:	ldr	x0, [sp, #56]
   1a6d4:	cmp	x1, x0
   1a6d8:	b.ls	1a6e8 <PyInit__decimal@@Base+0x2a10>  // b.plast
   1a6dc:	ldr	x0, [sp, #64]
   1a6e0:	add	x0, x0, #0x1
   1a6e4:	str	x0, [sp, #64]
   1a6e8:	ldr	x0, [sp, #72]
   1a6ec:	lsl	x0, x0, #3
   1a6f0:	ldr	x1, [sp, #40]
   1a6f4:	add	x0, x1, x0
   1a6f8:	ldr	x2, [sp, #64]
   1a6fc:	ldr	x3, [sp, #56]
   1a700:	add	x1, sp, #0x30
   1a704:	ldr	x4, [sp, #16]
   1a708:	bl	18f54 <PyInit__decimal@@Base+0x127c>
   1a70c:	ldr	x0, [sp, #72]
   1a710:	sub	x0, x0, #0x1
   1a714:	str	x0, [sp, #72]
   1a718:	ldr	x0, [sp, #72]
   1a71c:	cmn	x0, #0x1
   1a720:	b.ne	1a680 <PyInit__decimal@@Base+0x29a8>  // b.any
   1a724:	ldr	x0, [sp, #48]
   1a728:	ldp	x29, x30, [sp], #80
   1a72c:	ret
   1a730:	sub	sp, sp, #0x4c0
   1a734:	stp	x29, x30, [sp]
   1a738:	mov	x29, sp
   1a73c:	str	x0, [sp, #56]
   1a740:	str	x1, [sp, #48]
   1a744:	str	x2, [sp, #40]
   1a748:	str	x3, [sp, #32]
   1a74c:	str	x4, [sp, #24]
   1a750:	str	x5, [sp, #16]
   1a754:	add	x0, sp, #0x268
   1a758:	str	x0, [sp, #1208]
   1a75c:	add	x0, sp, #0x68
   1a760:	str	x0, [sp, #1200]
   1a764:	str	wzr, [sp, #1156]
   1a768:	ldr	x1, [sp, #16]
   1a76c:	ldr	x0, [sp, #24]
   1a770:	bl	19840 <PyInit__decimal@@Base+0x1b68>
   1a774:	str	x0, [sp, #1144]
   1a778:	ldr	x0, [sp, #16]
   1a77c:	lsl	x0, x0, #3
   1a780:	sub	x0, x0, #0x8
   1a784:	ldr	x1, [sp, #32]
   1a788:	add	x0, x1, x0
   1a78c:	ldr	x0, [x0]
   1a790:	add	x0, x0, #0x1
   1a794:	mov	x1, #0x89e80000            	// #2313682944
   1a798:	movk	x1, #0x2304, lsl #32
   1a79c:	movk	x1, #0x8ac7, lsl #48
   1a7a0:	udiv	x0, x1, x0
   1a7a4:	str	x0, [sp, #1136]
   1a7a8:	ldr	x0, [sp, #24]
   1a7ac:	cmp	x0, #0x3f
   1a7b0:	b.ls	1a7dc <PyInit__decimal@@Base+0x2b04>  // b.plast
   1a7b4:	ldr	x0, [sp, #24]
   1a7b8:	add	x0, x0, #0x1
   1a7bc:	mov	x1, #0x8                   	// #8
   1a7c0:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   1a7c4:	str	x0, [sp, #1208]
   1a7c8:	ldr	x0, [sp, #1208]
   1a7cc:	cmp	x0, #0x0
   1a7d0:	b.ne	1a7dc <PyInit__decimal@@Base+0x2b04>  // b.any
   1a7d4:	mov	w0, #0xffffffff            	// #-1
   1a7d8:	b	1ac38 <PyInit__decimal@@Base+0x2f60>
   1a7dc:	ldr	x0, [sp, #16]
   1a7e0:	cmp	x0, #0x3f
   1a7e4:	b.ls	1a824 <PyInit__decimal@@Base+0x2b4c>  // b.plast
   1a7e8:	ldr	x0, [sp, #16]
   1a7ec:	add	x0, x0, #0x1
   1a7f0:	mov	x1, #0x8                   	// #8
   1a7f4:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   1a7f8:	str	x0, [sp, #1200]
   1a7fc:	ldr	x0, [sp, #1200]
   1a800:	cmp	x0, #0x0
   1a804:	b.ne	1a824 <PyInit__decimal@@Base+0x2b4c>  // b.any
   1a808:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1a80c:	add	x0, x0, #0x6f8
   1a810:	ldr	x1, [x0]
   1a814:	ldr	x0, [sp, #1208]
   1a818:	blr	x1
   1a81c:	mov	w0, #0xffffffff            	// #-1
   1a820:	b	1ac38 <PyInit__decimal@@Base+0x2f60>
   1a824:	ldr	x3, [sp, #1136]
   1a828:	ldr	x2, [sp, #24]
   1a82c:	ldr	x1, [sp, #40]
   1a830:	ldr	x0, [sp, #1208]
   1a834:	bl	1a404 <PyInit__decimal@@Base+0x272c>
   1a838:	ldr	x3, [sp, #1136]
   1a83c:	ldr	x2, [sp, #16]
   1a840:	ldr	x1, [sp, #32]
   1a844:	ldr	x0, [sp, #1200]
   1a848:	bl	1a404 <PyInit__decimal@@Base+0x272c>
   1a84c:	ldr	x0, [sp, #1144]
   1a850:	str	x0, [sp, #1160]
   1a854:	b	1ab98 <PyInit__decimal@@Base+0x2ec0>
   1a858:	ldr	x1, [sp, #1160]
   1a85c:	ldr	x0, [sp, #16]
   1a860:	add	x0, x1, x0
   1a864:	lsl	x0, x0, #3
   1a868:	sub	x0, x0, #0x8
   1a86c:	ldr	x1, [sp, #1208]
   1a870:	add	x4, x1, x0
   1a874:	ldr	x0, [sp, #16]
   1a878:	lsl	x0, x0, #3
   1a87c:	sub	x0, x0, #0x8
   1a880:	ldr	x1, [sp, #1200]
   1a884:	add	x0, x1, x0
   1a888:	ldr	x1, [x0]
   1a88c:	add	x0, sp, #0x58
   1a890:	mov	x3, x1
   1a894:	mov	x2, #0x2                   	// #2
   1a898:	mov	x1, x4
   1a89c:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   1a8a0:	str	x0, [sp, #1184]
   1a8a4:	ldr	x1, [sp, #96]
   1a8a8:	mov	x0, #0x89e80000            	// #2313682944
   1a8ac:	movk	x0, #0x2304, lsl #32
   1a8b0:	movk	x0, #0x8ac7, lsl #48
   1a8b4:	mul	x1, x1, x0
   1a8b8:	ldr	x0, [sp, #88]
   1a8bc:	add	x0, x1, x0
   1a8c0:	str	x0, [sp, #1192]
   1a8c4:	ldr	x1, [sp, #1192]
   1a8c8:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1a8cc:	movk	x0, #0x2304, lsl #32
   1a8d0:	movk	x0, #0x8ac7, lsl #48
   1a8d4:	cmp	x1, x0
   1a8d8:	b.hi	1a950 <PyInit__decimal@@Base+0x2c78>  // b.pmore
   1a8dc:	ldr	x0, [sp, #16]
   1a8e0:	lsl	x0, x0, #3
   1a8e4:	sub	x0, x0, #0x10
   1a8e8:	ldr	x1, [sp, #1200]
   1a8ec:	add	x0, x1, x0
   1a8f0:	ldr	x1, [x0]
   1a8f4:	add	x0, sp, #0x58
   1a8f8:	mov	x2, x1
   1a8fc:	ldr	x1, [sp, #1192]
   1a900:	bl	19a50 <PyInit__decimal@@Base+0x1d78>
   1a904:	ldr	x0, [sp, #96]
   1a908:	ldr	x1, [sp, #1184]
   1a90c:	cmp	x1, x0
   1a910:	b.cc	1a950 <PyInit__decimal@@Base+0x2c78>  // b.lo, b.ul, b.last
   1a914:	ldr	x0, [sp, #96]
   1a918:	ldr	x1, [sp, #1184]
   1a91c:	cmp	x1, x0
   1a920:	b.ne	1a9c0 <PyInit__decimal@@Base+0x2ce8>  // b.any
   1a924:	ldr	x1, [sp, #88]
   1a928:	ldr	x2, [sp, #1160]
   1a92c:	ldr	x0, [sp, #16]
   1a930:	add	x0, x2, x0
   1a934:	lsl	x0, x0, #3
   1a938:	sub	x0, x0, #0x10
   1a93c:	ldr	x2, [sp, #1208]
   1a940:	add	x0, x2, x0
   1a944:	ldr	x0, [x0]
   1a948:	cmp	x1, x0
   1a94c:	b.ls	1a9c0 <PyInit__decimal@@Base+0x2ce8>  // b.plast
   1a950:	ldr	x0, [sp, #1192]
   1a954:	sub	x0, x0, #0x1
   1a958:	str	x0, [sp, #1192]
   1a95c:	ldr	x0, [sp, #16]
   1a960:	lsl	x0, x0, #3
   1a964:	sub	x0, x0, #0x8
   1a968:	ldr	x1, [sp, #1200]
   1a96c:	add	x0, x1, x0
   1a970:	ldr	x0, [x0]
   1a974:	ldr	x1, [sp, #1184]
   1a978:	add	x0, x1, x0
   1a97c:	str	x0, [sp, #1184]
   1a980:	ldr	x0, [sp, #16]
   1a984:	lsl	x0, x0, #3
   1a988:	sub	x0, x0, #0x8
   1a98c:	ldr	x1, [sp, #1200]
   1a990:	add	x0, x1, x0
   1a994:	ldr	x0, [x0]
   1a998:	ldr	x1, [sp, #1184]
   1a99c:	cmp	x1, x0
   1a9a0:	b.cc	1a9c0 <PyInit__decimal@@Base+0x2ce8>  // b.lo, b.ul, b.last
   1a9a4:	ldr	x1, [sp, #1184]
   1a9a8:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1a9ac:	movk	x0, #0x2304, lsl #32
   1a9b0:	movk	x0, #0x8ac7, lsl #48
   1a9b4:	cmp	x1, x0
   1a9b8:	b.hi	1a9c0 <PyInit__decimal@@Base+0x2ce8>  // b.pmore
   1a9bc:	b	1a8c4 <PyInit__decimal@@Base+0x2bec>
   1a9c0:	str	xzr, [sp, #1176]
   1a9c4:	str	xzr, [sp, #1168]
   1a9c8:	b	1aaf0 <PyInit__decimal@@Base+0x2e18>
   1a9cc:	ldr	x0, [sp, #1168]
   1a9d0:	lsl	x0, x0, #3
   1a9d4:	ldr	x1, [sp, #1200]
   1a9d8:	add	x0, x1, x0
   1a9dc:	ldr	x2, [x0]
   1a9e0:	add	x1, sp, #0x48
   1a9e4:	add	x0, sp, #0x50
   1a9e8:	mov	x3, x2
   1a9ec:	ldr	x2, [sp, #1192]
   1a9f0:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1a9f4:	ldr	x1, [sp, #72]
   1a9f8:	ldr	x0, [sp, #1176]
   1a9fc:	add	x0, x1, x0
   1aa00:	str	x0, [sp, #72]
   1aa04:	ldr	x0, [sp, #72]
   1aa08:	ldr	x1, [sp, #1176]
   1aa0c:	cmp	x1, x0
   1aa10:	b.ls	1aa20 <PyInit__decimal@@Base+0x2d48>  // b.plast
   1aa14:	ldr	x0, [sp, #80]
   1aa18:	add	x0, x0, #0x1
   1aa1c:	str	x0, [sp, #80]
   1aa20:	ldr	x2, [sp, #80]
   1aa24:	ldr	x3, [sp, #72]
   1aa28:	add	x1, sp, #0x48
   1aa2c:	add	x0, sp, #0x50
   1aa30:	bl	198dc <PyInit__decimal@@Base+0x1c04>
   1aa34:	ldr	x1, [sp, #1168]
   1aa38:	ldr	x0, [sp, #1160]
   1aa3c:	add	x0, x1, x0
   1aa40:	lsl	x0, x0, #3
   1aa44:	ldr	x1, [sp, #1208]
   1aa48:	add	x0, x1, x0
   1aa4c:	ldr	x1, [x0]
   1aa50:	ldr	x0, [sp, #72]
   1aa54:	sub	x0, x1, x0
   1aa58:	str	x0, [sp, #1128]
   1aa5c:	ldr	x1, [sp, #1168]
   1aa60:	ldr	x0, [sp, #1160]
   1aa64:	add	x0, x1, x0
   1aa68:	lsl	x0, x0, #3
   1aa6c:	ldr	x1, [sp, #1208]
   1aa70:	add	x0, x1, x0
   1aa74:	ldr	x0, [x0]
   1aa78:	ldr	x1, [sp, #1128]
   1aa7c:	cmp	x1, x0
   1aa80:	cset	w0, hi  // hi = pmore
   1aa84:	and	w0, w0, #0xff
   1aa88:	and	x0, x0, #0xff
   1aa8c:	str	x0, [sp, #1176]
   1aa90:	ldr	x0, [sp, #1176]
   1aa94:	cmp	x0, #0x0
   1aa98:	b.eq	1aab4 <PyInit__decimal@@Base+0x2ddc>  // b.none
   1aa9c:	ldr	x1, [sp, #1128]
   1aaa0:	mov	x0, #0x89e80000            	// #2313682944
   1aaa4:	movk	x0, #0x2304, lsl #32
   1aaa8:	movk	x0, #0x8ac7, lsl #48
   1aaac:	add	x0, x1, x0
   1aab0:	b	1aab8 <PyInit__decimal@@Base+0x2de0>
   1aab4:	ldr	x0, [sp, #1128]
   1aab8:	ldr	x2, [sp, #1168]
   1aabc:	ldr	x1, [sp, #1160]
   1aac0:	add	x1, x2, x1
   1aac4:	lsl	x1, x1, #3
   1aac8:	ldr	x2, [sp, #1208]
   1aacc:	add	x1, x2, x1
   1aad0:	str	x0, [x1]
   1aad4:	ldr	x0, [sp, #80]
   1aad8:	ldr	x1, [sp, #1176]
   1aadc:	add	x0, x1, x0
   1aae0:	str	x0, [sp, #1176]
   1aae4:	ldr	x0, [sp, #1168]
   1aae8:	add	x0, x0, #0x1
   1aaec:	str	x0, [sp, #1168]
   1aaf0:	ldr	x1, [sp, #1168]
   1aaf4:	ldr	x0, [sp, #16]
   1aaf8:	cmp	x1, x0
   1aafc:	b.ls	1a9cc <PyInit__decimal@@Base+0x2cf4>  // b.plast
   1ab00:	ldr	x0, [sp, #1160]
   1ab04:	lsl	x0, x0, #3
   1ab08:	ldr	x1, [sp, #56]
   1ab0c:	add	x0, x1, x0
   1ab10:	ldr	x1, [sp, #1192]
   1ab14:	str	x1, [x0]
   1ab18:	ldr	x0, [sp, #1176]
   1ab1c:	cmp	x0, #0x0
   1ab20:	b.eq	1ab8c <PyInit__decimal@@Base+0x2eb4>  // b.none
   1ab24:	ldr	x0, [sp, #1160]
   1ab28:	lsl	x0, x0, #3
   1ab2c:	ldr	x1, [sp, #56]
   1ab30:	add	x0, x1, x0
   1ab34:	ldr	x1, [x0]
   1ab38:	ldr	x0, [sp, #1160]
   1ab3c:	lsl	x0, x0, #3
   1ab40:	ldr	x2, [sp, #56]
   1ab44:	add	x0, x2, x0
   1ab48:	sub	x1, x1, #0x1
   1ab4c:	str	x1, [x0]
   1ab50:	ldr	x0, [sp, #1160]
   1ab54:	lsl	x0, x0, #3
   1ab58:	ldr	x1, [sp, #1208]
   1ab5c:	add	x5, x1, x0
   1ab60:	ldr	x0, [sp, #1160]
   1ab64:	lsl	x0, x0, #3
   1ab68:	ldr	x1, [sp, #1208]
   1ab6c:	add	x1, x1, x0
   1ab70:	ldr	x0, [sp, #16]
   1ab74:	add	x0, x0, #0x1
   1ab78:	ldr	x4, [sp, #16]
   1ab7c:	mov	x3, x0
   1ab80:	ldr	x2, [sp, #1200]
   1ab84:	mov	x0, x5
   1ab88:	bl	19afc <PyInit__decimal@@Base+0x1e24>
   1ab8c:	ldr	x0, [sp, #1160]
   1ab90:	sub	x0, x0, #0x1
   1ab94:	str	x0, [sp, #1160]
   1ab98:	ldr	x0, [sp, #1160]
   1ab9c:	cmn	x0, #0x1
   1aba0:	b.ne	1a858 <PyInit__decimal@@Base+0x2b80>  // b.any
   1aba4:	ldr	x0, [sp, #48]
   1aba8:	cmp	x0, #0x0
   1abac:	b.eq	1abcc <PyInit__decimal@@Base+0x2ef4>  // b.none
   1abb0:	ldr	x3, [sp, #1136]
   1abb4:	ldr	x2, [sp, #16]
   1abb8:	ldr	x1, [sp, #1208]
   1abbc:	ldr	x0, [sp, #48]
   1abc0:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   1abc4:	str	wzr, [sp, #1156]
   1abc8:	b	1abec <PyInit__decimal@@Base+0x2f14>
   1abcc:	ldr	x0, [sp, #16]
   1abd0:	mov	x1, x0
   1abd4:	ldr	x0, [sp, #1208]
   1abd8:	bl	19aa4 <PyInit__decimal@@Base+0x1dcc>
   1abdc:	cmp	w0, #0x0
   1abe0:	cset	w0, eq  // eq = none
   1abe4:	and	w0, w0, #0xff
   1abe8:	str	w0, [sp, #1156]
   1abec:	add	x0, sp, #0x268
   1abf0:	ldr	x1, [sp, #1208]
   1abf4:	cmp	x1, x0
   1abf8:	b.eq	1ac10 <PyInit__decimal@@Base+0x2f38>  // b.none
   1abfc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1ac00:	add	x0, x0, #0x6f8
   1ac04:	ldr	x1, [x0]
   1ac08:	ldr	x0, [sp, #1208]
   1ac0c:	blr	x1
   1ac10:	add	x0, sp, #0x68
   1ac14:	ldr	x1, [sp, #1200]
   1ac18:	cmp	x1, x0
   1ac1c:	b.eq	1ac34 <PyInit__decimal@@Base+0x2f5c>  // b.none
   1ac20:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1ac24:	add	x0, x0, #0x6f8
   1ac28:	ldr	x1, [x0]
   1ac2c:	ldr	x0, [sp, #1200]
   1ac30:	blr	x1
   1ac34:	ldr	w0, [sp, #1156]
   1ac38:	ldp	x29, x30, [sp]
   1ac3c:	add	sp, sp, #0x4c0
   1ac40:	ret
   1ac44:	stp	x29, x30, [sp, #-112]!
   1ac48:	mov	x29, sp
   1ac4c:	str	x0, [sp, #56]
   1ac50:	str	x1, [sp, #48]
   1ac54:	str	x2, [sp, #40]
   1ac58:	str	x3, [sp, #32]
   1ac5c:	str	x4, [sp, #24]
   1ac60:	ldr	x0, [sp, #96]
   1ac64:	str	x0, [sp, #96]
   1ac68:	ldr	x0, [sp, #88]
   1ac6c:	str	x0, [sp, #88]
   1ac70:	ldr	x0, [sp, #80]
   1ac74:	str	x0, [sp, #80]
   1ac78:	add	x1, sp, #0x40
   1ac7c:	add	x0, sp, #0x48
   1ac80:	mov	x3, #0x13                  	// #19
   1ac84:	ldr	x2, [sp, #24]
   1ac88:	bl	197ec <PyInit__decimal@@Base+0x1b14>
   1ac8c:	ldr	x0, [sp, #64]
   1ac90:	cmp	x0, #0x0
   1ac94:	b.eq	1adfc <PyInit__decimal@@Base+0x3124>  // b.none
   1ac98:	ldr	x1, [sp, #64]
   1ac9c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1aca0:	add	x0, x0, #0xdb0
   1aca4:	ldr	x0, [x0, x1, lsl #3]
   1aca8:	str	x0, [sp, #104]
   1acac:	ldr	x0, [sp, #32]
   1acb0:	sub	x0, x0, #0x1
   1acb4:	str	x0, [sp, #32]
   1acb8:	ldr	x0, [sp, #40]
   1acbc:	sub	x0, x0, #0x1
   1acc0:	str	x0, [sp, #40]
   1acc4:	ldr	x0, [sp, #32]
   1acc8:	sub	x1, x0, #0x1
   1accc:	str	x1, [sp, #32]
   1acd0:	lsl	x0, x0, #3
   1acd4:	ldr	x1, [sp, #48]
   1acd8:	add	x0, x1, x0
   1acdc:	ldr	x2, [x0]
   1ace0:	ldr	x0, [sp, #64]
   1ace4:	mov	x1, #0x13                  	// #19
   1ace8:	sub	x3, x1, x0
   1acec:	add	x1, sp, #0x58
   1acf0:	add	x0, sp, #0x50
   1acf4:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1acf8:	ldr	x0, [sp, #80]
   1acfc:	cmp	x0, #0x0
   1ad00:	b.eq	1ad9c <PyInit__decimal@@Base+0x30c4>  // b.none
   1ad04:	ldr	x0, [sp, #40]
   1ad08:	sub	x1, x0, #0x1
   1ad0c:	str	x1, [sp, #40]
   1ad10:	lsl	x0, x0, #3
   1ad14:	ldr	x1, [sp, #56]
   1ad18:	add	x0, x1, x0
   1ad1c:	ldr	x1, [sp, #80]
   1ad20:	str	x1, [x0]
   1ad24:	b	1ad9c <PyInit__decimal@@Base+0x30c4>
   1ad28:	ldr	x0, [sp, #32]
   1ad2c:	lsl	x0, x0, #3
   1ad30:	ldr	x1, [sp, #48]
   1ad34:	add	x0, x1, x0
   1ad38:	ldr	x2, [x0]
   1ad3c:	ldr	x0, [sp, #64]
   1ad40:	mov	x1, #0x13                  	// #19
   1ad44:	sub	x3, x1, x0
   1ad48:	add	x1, sp, #0x60
   1ad4c:	add	x0, sp, #0x50
   1ad50:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1ad54:	ldr	x1, [sp, #88]
   1ad58:	ldr	x0, [sp, #104]
   1ad5c:	mul	x2, x1, x0
   1ad60:	ldr	x1, [sp, #80]
   1ad64:	ldr	x0, [sp, #40]
   1ad68:	lsl	x0, x0, #3
   1ad6c:	ldr	x3, [sp, #56]
   1ad70:	add	x0, x3, x0
   1ad74:	add	x1, x2, x1
   1ad78:	str	x1, [x0]
   1ad7c:	ldr	x0, [sp, #96]
   1ad80:	str	x0, [sp, #88]
   1ad84:	ldr	x0, [sp, #32]
   1ad88:	sub	x0, x0, #0x1
   1ad8c:	str	x0, [sp, #32]
   1ad90:	ldr	x0, [sp, #40]
   1ad94:	sub	x0, x0, #0x1
   1ad98:	str	x0, [sp, #40]
   1ad9c:	ldr	x0, [sp, #32]
   1ada0:	cmn	x0, #0x1
   1ada4:	b.ne	1ad28 <PyInit__decimal@@Base+0x3050>  // b.any
   1ada8:	ldr	x2, [sp, #88]
   1adac:	ldr	x0, [sp, #72]
   1adb0:	lsl	x0, x0, #3
   1adb4:	ldr	x1, [sp, #56]
   1adb8:	add	x0, x1, x0
   1adbc:	ldr	x1, [sp, #104]
   1adc0:	mul	x1, x2, x1
   1adc4:	str	x1, [x0]
   1adc8:	b	1ae14 <PyInit__decimal@@Base+0x313c>
   1adcc:	ldr	x0, [sp, #32]
   1add0:	lsl	x0, x0, #3
   1add4:	ldr	x1, [sp, #48]
   1add8:	add	x1, x1, x0
   1addc:	ldr	x2, [sp, #72]
   1ade0:	ldr	x0, [sp, #32]
   1ade4:	add	x0, x2, x0
   1ade8:	lsl	x0, x0, #3
   1adec:	ldr	x2, [sp, #56]
   1adf0:	add	x0, x2, x0
   1adf4:	ldr	x1, [x1]
   1adf8:	str	x1, [x0]
   1adfc:	ldr	x0, [sp, #32]
   1ae00:	sub	x0, x0, #0x1
   1ae04:	str	x0, [sp, #32]
   1ae08:	ldr	x0, [sp, #32]
   1ae0c:	cmn	x0, #0x1
   1ae10:	b.ne	1adcc <PyInit__decimal@@Base+0x30f4>  // b.any
   1ae14:	ldr	x0, [sp, #72]
   1ae18:	mov	x1, x0
   1ae1c:	ldr	x0, [sp, #56]
   1ae20:	bl	257cc <PyInit__decimal@@Base+0xdaf4>
   1ae24:	nop
   1ae28:	ldp	x29, x30, [sp], #112
   1ae2c:	ret
   1ae30:	stp	x29, x30, [sp, #-128]!
   1ae34:	mov	x29, sp
   1ae38:	str	x0, [sp, #40]
   1ae3c:	str	x1, [sp, #32]
   1ae40:	str	x2, [sp, #24]
   1ae44:	str	x3, [sp, #16]
   1ae48:	ldr	x0, [sp, #96]
   1ae4c:	str	x0, [sp, #96]
   1ae50:	ldr	x0, [sp, #88]
   1ae54:	str	x0, [sp, #88]
   1ae58:	ldr	x0, [sp, #80]
   1ae5c:	str	x0, [sp, #80]
   1ae60:	add	x1, sp, #0x30
   1ae64:	add	x0, sp, #0x38
   1ae68:	mov	x3, #0x13                  	// #19
   1ae6c:	ldr	x2, [sp, #16]
   1ae70:	bl	197ec <PyInit__decimal@@Base+0x1b14>
   1ae74:	str	xzr, [sp, #64]
   1ae78:	ldr	x0, [sp, #64]
   1ae7c:	str	x0, [sp, #72]
   1ae80:	ldr	x0, [sp, #48]
   1ae84:	cmp	x0, #0x0
   1ae88:	b.eq	1afd8 <PyInit__decimal@@Base+0x3300>  // b.none
   1ae8c:	ldr	x0, [sp, #48]
   1ae90:	mov	x1, #0x13                  	// #19
   1ae94:	sub	x1, x1, x0
   1ae98:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1ae9c:	add	x0, x0, #0xdb0
   1aea0:	ldr	x0, [x0, x1, lsl #3]
   1aea4:	str	x0, [sp, #104]
   1aea8:	ldr	x0, [sp, #56]
   1aeac:	lsl	x0, x0, #3
   1aeb0:	ldr	x1, [sp, #32]
   1aeb4:	add	x0, x1, x0
   1aeb8:	ldr	x2, [x0]
   1aebc:	ldr	x3, [sp, #48]
   1aec0:	add	x1, sp, #0x40
   1aec4:	add	x0, sp, #0x50
   1aec8:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1aecc:	ldr	x2, [sp, #64]
   1aed0:	ldr	x0, [sp, #48]
   1aed4:	sub	x3, x0, #0x1
   1aed8:	add	x1, sp, #0x40
   1aedc:	add	x0, sp, #0x48
   1aee0:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1aee4:	ldr	x0, [sp, #64]
   1aee8:	cmp	x0, #0x0
   1aeec:	b.ne	1af20 <PyInit__decimal@@Base+0x3248>  // b.any
   1aef0:	ldr	x0, [sp, #56]
   1aef4:	cmp	x0, #0x0
   1aef8:	b.eq	1af20 <PyInit__decimal@@Base+0x3248>  // b.none
   1aefc:	ldr	x0, [sp, #56]
   1af00:	mov	x1, x0
   1af04:	ldr	x0, [sp, #32]
   1af08:	bl	19aa4 <PyInit__decimal@@Base+0x1dcc>
   1af0c:	cmp	w0, #0x0
   1af10:	cset	w0, eq  // eq = none
   1af14:	and	w0, w0, #0xff
   1af18:	and	x0, x0, #0xff
   1af1c:	str	x0, [sp, #64]
   1af20:	str	xzr, [sp, #112]
   1af24:	ldr	x0, [sp, #56]
   1af28:	add	x0, x0, #0x1
   1af2c:	str	x0, [sp, #120]
   1af30:	b	1afa0 <PyInit__decimal@@Base+0x32c8>
   1af34:	ldr	x0, [sp, #120]
   1af38:	lsl	x0, x0, #3
   1af3c:	ldr	x1, [sp, #32]
   1af40:	add	x0, x1, x0
   1af44:	ldr	x2, [x0]
   1af48:	ldr	x3, [sp, #48]
   1af4c:	add	x1, sp, #0x60
   1af50:	add	x0, sp, #0x58
   1af54:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1af58:	ldr	x1, [sp, #96]
   1af5c:	ldr	x0, [sp, #104]
   1af60:	mul	x2, x1, x0
   1af64:	ldr	x1, [sp, #80]
   1af68:	ldr	x0, [sp, #112]
   1af6c:	lsl	x0, x0, #3
   1af70:	ldr	x3, [sp, #40]
   1af74:	add	x0, x3, x0
   1af78:	add	x1, x2, x1
   1af7c:	str	x1, [x0]
   1af80:	ldr	x0, [sp, #88]
   1af84:	str	x0, [sp, #80]
   1af88:	ldr	x0, [sp, #120]
   1af8c:	add	x0, x0, #0x1
   1af90:	str	x0, [sp, #120]
   1af94:	ldr	x0, [sp, #112]
   1af98:	add	x0, x0, #0x1
   1af9c:	str	x0, [sp, #112]
   1afa0:	ldr	x1, [sp, #120]
   1afa4:	ldr	x0, [sp, #24]
   1afa8:	cmp	x1, x0
   1afac:	b.cc	1af34 <PyInit__decimal@@Base+0x325c>  // b.lo, b.ul, b.last
   1afb0:	ldr	x0, [sp, #80]
   1afb4:	cmp	x0, #0x0
   1afb8:	b.eq	1b09c <PyInit__decimal@@Base+0x33c4>  // b.none
   1afbc:	ldr	x0, [sp, #112]
   1afc0:	lsl	x0, x0, #3
   1afc4:	ldr	x1, [sp, #40]
   1afc8:	add	x0, x1, x0
   1afcc:	ldr	x1, [sp, #80]
   1afd0:	str	x1, [x0]
   1afd4:	b	1b09c <PyInit__decimal@@Base+0x33c4>
   1afd8:	ldr	x0, [sp, #56]
   1afdc:	cmp	x0, #0x0
   1afe0:	b.eq	1b040 <PyInit__decimal@@Base+0x3368>  // b.none
   1afe4:	ldr	x0, [sp, #56]
   1afe8:	lsl	x0, x0, #3
   1afec:	sub	x0, x0, #0x8
   1aff0:	ldr	x1, [sp, #32]
   1aff4:	add	x0, x1, x0
   1aff8:	ldr	x2, [x0]
   1affc:	add	x1, sp, #0x40
   1b000:	add	x0, sp, #0x48
   1b004:	mov	x3, #0x12                  	// #18
   1b008:	bl	19000 <PyInit__decimal@@Base+0x1328>
   1b00c:	ldr	x0, [sp, #64]
   1b010:	cmp	x0, #0x0
   1b014:	b.ne	1b040 <PyInit__decimal@@Base+0x3368>  // b.any
   1b018:	ldr	x0, [sp, #56]
   1b01c:	sub	x0, x0, #0x1
   1b020:	mov	x1, x0
   1b024:	ldr	x0, [sp, #32]
   1b028:	bl	19aa4 <PyInit__decimal@@Base+0x1dcc>
   1b02c:	cmp	w0, #0x0
   1b030:	cset	w0, eq  // eq = none
   1b034:	and	w0, w0, #0xff
   1b038:	and	x0, x0, #0xff
   1b03c:	str	x0, [sp, #64]
   1b040:	str	xzr, [sp, #112]
   1b044:	b	1b084 <PyInit__decimal@@Base+0x33ac>
   1b048:	ldr	x1, [sp, #56]
   1b04c:	ldr	x0, [sp, #112]
   1b050:	add	x0, x1, x0
   1b054:	lsl	x0, x0, #3
   1b058:	ldr	x1, [sp, #32]
   1b05c:	add	x1, x1, x0
   1b060:	ldr	x0, [sp, #112]
   1b064:	lsl	x0, x0, #3
   1b068:	ldr	x2, [sp, #40]
   1b06c:	add	x0, x2, x0
   1b070:	ldr	x1, [x1]
   1b074:	str	x1, [x0]
   1b078:	ldr	x0, [sp, #112]
   1b07c:	add	x0, x0, #0x1
   1b080:	str	x0, [sp, #112]
   1b084:	ldr	x0, [sp, #56]
   1b088:	ldr	x1, [sp, #24]
   1b08c:	sub	x0, x1, x0
   1b090:	ldr	x1, [sp, #112]
   1b094:	cmp	x1, x0
   1b098:	b.cc	1b048 <PyInit__decimal@@Base+0x3370>  // b.lo, b.ul, b.last
   1b09c:	ldr	x0, [sp, #72]
   1b0a0:	cmp	x0, #0x0
   1b0a4:	b.eq	1b0b4 <PyInit__decimal@@Base+0x33dc>  // b.none
   1b0a8:	ldr	x0, [sp, #72]
   1b0ac:	cmp	x0, #0x5
   1b0b0:	b.ne	1b0d4 <PyInit__decimal@@Base+0x33fc>  // b.any
   1b0b4:	ldr	x0, [sp, #64]
   1b0b8:	cmp	x0, #0x0
   1b0bc:	cset	w0, ne  // ne = any
   1b0c0:	and	w0, w0, #0xff
   1b0c4:	and	x1, x0, #0xff
   1b0c8:	ldr	x0, [sp, #72]
   1b0cc:	add	x0, x1, x0
   1b0d0:	b	1b0d8 <PyInit__decimal@@Base+0x3400>
   1b0d4:	ldr	x0, [sp, #72]
   1b0d8:	ldp	x29, x30, [sp], #128
   1b0dc:	ret
   1b0e0:	sub	sp, sp, #0x40
   1b0e4:	str	x0, [sp, #24]
   1b0e8:	str	x1, [sp, #16]
   1b0ec:	str	x2, [sp, #8]
   1b0f0:	str	x3, [sp]
   1b0f4:	ldr	x0, [sp, #24]
   1b0f8:	ldr	x0, [x0]
   1b0fc:	ldr	x1, [sp, #8]
   1b100:	add	x0, x1, x0
   1b104:	str	x0, [sp, #40]
   1b108:	ldr	x1, [sp, #40]
   1b10c:	ldr	x0, [sp, #8]
   1b110:	cmp	x1, x0
   1b114:	cset	w0, cc  // cc = lo, ul, last
   1b118:	and	w1, w0, #0xff
   1b11c:	ldr	x2, [sp, #40]
   1b120:	ldr	x0, [sp]
   1b124:	cmp	x2, x0
   1b128:	cset	w0, cs  // cs = hs, nlast
   1b12c:	and	w0, w0, #0xff
   1b130:	orr	w0, w1, w0
   1b134:	and	w0, w0, #0xff
   1b138:	and	x0, x0, #0xff
   1b13c:	str	x0, [sp, #56]
   1b140:	ldr	x0, [sp, #56]
   1b144:	cmp	x0, #0x0
   1b148:	b.eq	1b15c <PyInit__decimal@@Base+0x3484>  // b.none
   1b14c:	ldr	x1, [sp, #40]
   1b150:	ldr	x0, [sp]
   1b154:	sub	x0, x1, x0
   1b158:	b	1b160 <PyInit__decimal@@Base+0x3488>
   1b15c:	ldr	x0, [sp, #40]
   1b160:	ldr	x1, [sp, #24]
   1b164:	str	x0, [x1]
   1b168:	mov	x0, #0x1                   	// #1
   1b16c:	str	x0, [sp, #48]
   1b170:	b	1b1e8 <PyInit__decimal@@Base+0x3510>
   1b174:	ldr	x0, [sp, #48]
   1b178:	lsl	x0, x0, #3
   1b17c:	ldr	x1, [sp, #24]
   1b180:	add	x0, x1, x0
   1b184:	ldr	x0, [x0]
   1b188:	ldr	x1, [sp, #56]
   1b18c:	add	x0, x1, x0
   1b190:	str	x0, [sp, #40]
   1b194:	ldr	x1, [sp, #40]
   1b198:	ldr	x0, [sp]
   1b19c:	cmp	x1, x0
   1b1a0:	cset	w0, eq  // eq = none
   1b1a4:	and	w0, w0, #0xff
   1b1a8:	and	x0, x0, #0xff
   1b1ac:	str	x0, [sp, #56]
   1b1b0:	ldr	x0, [sp, #56]
   1b1b4:	cmp	x0, #0x0
   1b1b8:	b.ne	1b1c4 <PyInit__decimal@@Base+0x34ec>  // b.any
   1b1bc:	ldr	x0, [sp, #40]
   1b1c0:	b	1b1c8 <PyInit__decimal@@Base+0x34f0>
   1b1c4:	mov	x0, #0x0                   	// #0
   1b1c8:	ldr	x1, [sp, #48]
   1b1cc:	lsl	x1, x1, #3
   1b1d0:	ldr	x2, [sp, #24]
   1b1d4:	add	x1, x2, x1
   1b1d8:	str	x0, [x1]
   1b1dc:	ldr	x0, [sp, #48]
   1b1e0:	add	x0, x0, #0x1
   1b1e4:	str	x0, [sp, #48]
   1b1e8:	ldr	x0, [sp, #56]
   1b1ec:	cmp	x0, #0x0
   1b1f0:	b.eq	1b204 <PyInit__decimal@@Base+0x352c>  // b.none
   1b1f4:	ldr	x1, [sp, #48]
   1b1f8:	ldr	x0, [sp, #16]
   1b1fc:	cmp	x1, x0
   1b200:	b.cc	1b174 <PyInit__decimal@@Base+0x349c>  // b.lo, b.ul, b.last
   1b204:	ldr	x0, [sp, #56]
   1b208:	add	sp, sp, #0x40
   1b20c:	ret
   1b210:	stp	x29, x30, [sp, #-80]!
   1b214:	mov	x29, sp
   1b218:	str	x0, [sp, #40]
   1b21c:	str	x1, [sp, #32]
   1b220:	str	x2, [sp, #24]
   1b224:	str	x3, [sp, #16]
   1b228:	str	xzr, [sp, #48]
   1b22c:	str	xzr, [sp, #72]
   1b230:	b	1b2b0 <PyInit__decimal@@Base+0x35d8>
   1b234:	ldr	x0, [sp, #72]
   1b238:	lsl	x0, x0, #3
   1b23c:	ldr	x1, [sp, #32]
   1b240:	add	x0, x1, x0
   1b244:	ldr	x2, [x0]
   1b248:	add	x1, sp, #0x38
   1b24c:	add	x0, sp, #0x40
   1b250:	ldr	x3, [sp, #16]
   1b254:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1b258:	ldr	x1, [sp, #48]
   1b25c:	ldr	x0, [sp, #56]
   1b260:	add	x0, x1, x0
   1b264:	str	x0, [sp, #56]
   1b268:	ldr	x1, [sp, #56]
   1b26c:	ldr	x0, [sp, #48]
   1b270:	cmp	x1, x0
   1b274:	b.cs	1b284 <PyInit__decimal@@Base+0x35ac>  // b.hs, b.nlast
   1b278:	ldr	x0, [sp, #64]
   1b27c:	add	x0, x0, #0x1
   1b280:	str	x0, [sp, #64]
   1b284:	ldr	x0, [sp, #72]
   1b288:	lsl	x0, x0, #3
   1b28c:	ldr	x1, [sp, #40]
   1b290:	add	x1, x1, x0
   1b294:	ldr	x2, [sp, #64]
   1b298:	ldr	x3, [sp, #56]
   1b29c:	add	x0, sp, #0x30
   1b2a0:	bl	198dc <PyInit__decimal@@Base+0x1c04>
   1b2a4:	ldr	x0, [sp, #72]
   1b2a8:	add	x0, x0, #0x1
   1b2ac:	str	x0, [sp, #72]
   1b2b0:	ldr	x1, [sp, #72]
   1b2b4:	ldr	x0, [sp, #24]
   1b2b8:	cmp	x1, x0
   1b2bc:	b.cc	1b234 <PyInit__decimal@@Base+0x355c>  // b.lo, b.ul, b.last
   1b2c0:	ldr	x0, [sp, #48]
   1b2c4:	ldp	x29, x30, [sp], #80
   1b2c8:	ret
   1b2cc:	stp	x29, x30, [sp, #-96]!
   1b2d0:	mov	x29, sp
   1b2d4:	str	x0, [sp, #56]
   1b2d8:	str	x1, [sp, #48]
   1b2dc:	str	x2, [sp, #40]
   1b2e0:	str	x3, [sp, #32]
   1b2e4:	str	x4, [sp, #24]
   1b2e8:	str	xzr, [sp, #64]
   1b2ec:	str	xzr, [sp, #88]
   1b2f0:	b	1b374 <PyInit__decimal@@Base+0x369c>
   1b2f4:	ldr	x0, [sp, #88]
   1b2f8:	lsl	x0, x0, #3
   1b2fc:	ldr	x1, [sp, #48]
   1b300:	add	x0, x1, x0
   1b304:	ldr	x2, [x0]
   1b308:	add	x1, sp, #0x48
   1b30c:	add	x0, sp, #0x50
   1b310:	ldr	x3, [sp, #32]
   1b314:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1b318:	ldr	x1, [sp, #64]
   1b31c:	ldr	x0, [sp, #72]
   1b320:	add	x0, x1, x0
   1b324:	str	x0, [sp, #72]
   1b328:	ldr	x1, [sp, #72]
   1b32c:	ldr	x0, [sp, #64]
   1b330:	cmp	x1, x0
   1b334:	b.cs	1b344 <PyInit__decimal@@Base+0x366c>  // b.hs, b.nlast
   1b338:	ldr	x0, [sp, #80]
   1b33c:	add	x0, x0, #0x1
   1b340:	str	x0, [sp, #80]
   1b344:	ldr	x0, [sp, #88]
   1b348:	lsl	x0, x0, #3
   1b34c:	ldr	x1, [sp, #56]
   1b350:	add	x1, x1, x0
   1b354:	ldr	x2, [sp, #80]
   1b358:	ldr	x3, [sp, #72]
   1b35c:	add	x0, sp, #0x40
   1b360:	ldr	x4, [sp, #24]
   1b364:	bl	18f54 <PyInit__decimal@@Base+0x127c>
   1b368:	ldr	x0, [sp, #88]
   1b36c:	add	x0, x0, #0x1
   1b370:	str	x0, [sp, #88]
   1b374:	ldr	x1, [sp, #88]
   1b378:	ldr	x0, [sp, #40]
   1b37c:	cmp	x1, x0
   1b380:	b.cc	1b2f4 <PyInit__decimal@@Base+0x361c>  // b.lo, b.ul, b.last
   1b384:	ldr	x0, [sp, #64]
   1b388:	ldp	x29, x30, [sp], #96
   1b38c:	ret
   1b390:	stp	x29, x30, [sp, #-96]!
   1b394:	mov	x29, sp
   1b398:	str	x0, [sp, #56]
   1b39c:	str	x1, [sp, #48]
   1b3a0:	str	x2, [sp, #40]
   1b3a4:	str	x3, [sp, #32]
   1b3a8:	str	x4, [sp, #24]
   1b3ac:	str	xzr, [sp, #64]
   1b3b0:	ldr	x0, [sp, #40]
   1b3b4:	sub	x0, x0, #0x1
   1b3b8:	str	x0, [sp, #88]
   1b3bc:	b	1b450 <PyInit__decimal@@Base+0x3778>
   1b3c0:	ldr	x2, [sp, #64]
   1b3c4:	add	x1, sp, #0x48
   1b3c8:	add	x0, sp, #0x50
   1b3cc:	ldr	x3, [sp, #24]
   1b3d0:	bl	18edc <PyInit__decimal@@Base+0x1204>
   1b3d4:	ldr	x0, [sp, #88]
   1b3d8:	lsl	x0, x0, #3
   1b3dc:	ldr	x1, [sp, #48]
   1b3e0:	add	x0, x1, x0
   1b3e4:	ldr	x1, [x0]
   1b3e8:	ldr	x0, [sp, #72]
   1b3ec:	add	x0, x1, x0
   1b3f0:	str	x0, [sp, #72]
   1b3f4:	ldr	x0, [sp, #88]
   1b3f8:	lsl	x0, x0, #3
   1b3fc:	ldr	x1, [sp, #48]
   1b400:	add	x0, x1, x0
   1b404:	ldr	x1, [x0]
   1b408:	ldr	x0, [sp, #72]
   1b40c:	cmp	x1, x0
   1b410:	b.ls	1b420 <PyInit__decimal@@Base+0x3748>  // b.plast
   1b414:	ldr	x0, [sp, #80]
   1b418:	add	x0, x0, #0x1
   1b41c:	str	x0, [sp, #80]
   1b420:	ldr	x0, [sp, #88]
   1b424:	lsl	x0, x0, #3
   1b428:	ldr	x1, [sp, #56]
   1b42c:	add	x0, x1, x0
   1b430:	ldr	x2, [sp, #80]
   1b434:	ldr	x3, [sp, #72]
   1b438:	add	x1, sp, #0x40
   1b43c:	ldr	x4, [sp, #32]
   1b440:	bl	18f54 <PyInit__decimal@@Base+0x127c>
   1b444:	ldr	x0, [sp, #88]
   1b448:	sub	x0, x0, #0x1
   1b44c:	str	x0, [sp, #88]
   1b450:	ldr	x0, [sp, #88]
   1b454:	cmn	x0, #0x1
   1b458:	b.ne	1b3c0 <PyInit__decimal@@Base+0x36e8>  // b.any
   1b45c:	ldr	x0, [sp, #64]
   1b460:	ldp	x29, x30, [sp], #96
   1b464:	ret
   1b468:	stp	x29, x30, [sp, #-32]!
   1b46c:	mov	x29, sp
   1b470:	str	x0, [sp, #24]
   1b474:	mov	w0, #0x8                   	// #8
   1b478:	bl	65c0 <raise@plt>
   1b47c:	nop
   1b480:	ldp	x29, x30, [sp], #32
   1b484:	ret
   1b488:	stp	x29, x30, [sp, #-32]!
   1b48c:	mov	x29, sp
   1b490:	str	x0, [sp, #24]
   1b494:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1b498:	add	x0, x0, #0x7d8
   1b49c:	ldr	w0, [x0]
   1b4a0:	cmp	w0, #0x0
   1b4a4:	b.eq	1b510 <PyInit__decimal@@Base+0x3838>  // b.none
   1b4a8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b4ac:	ldr	x0, [x0, #3904]
   1b4b0:	ldr	x4, [x0]
   1b4b4:	mov	w3, #0x36                  	// #54
   1b4b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b4bc:	add	x2, x0, #0xf08
   1b4c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b4c4:	add	x1, x0, #0xf48
   1b4c8:	mov	x0, x4
   1b4cc:	bl	6b30 <fprintf@plt>
   1b4d0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b4d4:	ldr	x0, [x0, #3904]
   1b4d8:	ldr	x0, [x0]
   1b4dc:	mov	x3, x0
   1b4e0:	mov	x2, #0x44                  	// #68
   1b4e4:	mov	x1, #0x1                   	// #1
   1b4e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b4ec:	add	x0, x0, #0xf60
   1b4f0:	bl	69d0 <fwrite@plt>
   1b4f4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b4f8:	ldr	x0, [x0, #3904]
   1b4fc:	ldr	x0, [x0]
   1b500:	mov	x1, x0
   1b504:	mov	w0, #0xa                   	// #10
   1b508:	bl	6660 <fputc@plt>
   1b50c:	b	1b5b0 <PyInit__decimal@@Base+0x38d8>
   1b510:	ldr	x0, [sp, #24]
   1b514:	cmp	x0, #0x1
   1b518:	b.le	1b528 <PyInit__decimal@@Base+0x3850>
   1b51c:	ldr	x0, [sp, #24]
   1b520:	cmp	x0, #0x40
   1b524:	b.le	1b590 <PyInit__decimal@@Base+0x38b8>
   1b528:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b52c:	ldr	x0, [x0, #3904]
   1b530:	ldr	x4, [x0]
   1b534:	mov	w3, #0x3b                  	// #59
   1b538:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b53c:	add	x2, x0, #0xf08
   1b540:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b544:	add	x1, x0, #0xfa8
   1b548:	mov	x0, x4
   1b54c:	bl	6b30 <fprintf@plt>
   1b550:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b554:	ldr	x0, [x0, #3904]
   1b558:	ldr	x0, [x0]
   1b55c:	mov	x3, x0
   1b560:	mov	x2, #0x1e                  	// #30
   1b564:	mov	x1, #0x1                   	// #1
   1b568:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1b56c:	add	x0, x0, #0xfb8
   1b570:	bl	69d0 <fwrite@plt>
   1b574:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   1b578:	ldr	x0, [x0, #3904]
   1b57c:	ldr	x0, [x0]
   1b580:	mov	x1, x0
   1b584:	mov	w0, #0xa                   	// #10
   1b588:	bl	6660 <fputc@plt>
   1b58c:	bl	6860 <abort@plt>
   1b590:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1b594:	add	x0, x0, #0x6d8
   1b598:	ldr	x1, [sp, #24]
   1b59c:	str	x1, [x0]
   1b5a0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1b5a4:	add	x0, x0, #0x7d8
   1b5a8:	mov	w1, #0x1                   	// #1
   1b5ac:	str	w1, [x0]
   1b5b0:	ldp	x29, x30, [sp], #32
   1b5b4:	ret
   1b5b8:	stp	x29, x30, [sp, #-48]!
   1b5bc:	mov	x29, sp
   1b5c0:	str	x0, [sp, #24]
   1b5c4:	str	x1, [sp, #16]
   1b5c8:	ldr	x0, [sp, #24]
   1b5cc:	bl	1b6e8 <PyInit__decimal@@Base+0x3a10>
   1b5d0:	ldr	x1, [sp, #16]
   1b5d4:	ldr	x0, [sp, #24]
   1b5d8:	bl	1b9b0 <PyInit__decimal@@Base+0x3cd8>
   1b5dc:	cmp	w0, #0x0
   1b5e0:	b.ne	1b5f4 <PyInit__decimal@@Base+0x391c>  // b.any
   1b5e4:	mov	w1, #0x80                  	// #128
   1b5e8:	ldr	x0, [sp, #24]
   1b5ec:	bl	1bbe4 <PyInit__decimal@@Base+0x3f0c>
   1b5f0:	b	1b650 <PyInit__decimal@@Base+0x3978>
   1b5f4:	ldr	x0, [sp, #16]
   1b5f8:	add	x0, x0, #0x12
   1b5fc:	mov	x1, #0x9436                	// #37942
   1b600:	movk	x1, #0x50d7, lsl #16
   1b604:	movk	x1, #0x435e, lsl #32
   1b608:	movk	x1, #0xd79, lsl #48
   1b60c:	smulh	x1, x0, x1
   1b610:	asr	x0, x0, #63
   1b614:	sub	x0, x1, x0
   1b618:	lsl	x0, x0, #1
   1b61c:	str	x0, [sp, #40]
   1b620:	ldr	x0, [sp, #40]
   1b624:	cmp	x0, #0x1
   1b628:	b.gt	1b634 <PyInit__decimal@@Base+0x395c>
   1b62c:	mov	x0, #0x2                   	// #2
   1b630:	str	x0, [sp, #40]
   1b634:	ldr	x0, [sp, #40]
   1b638:	cmp	x0, #0x40
   1b63c:	b.le	1b648 <PyInit__decimal@@Base+0x3970>
   1b640:	mov	x0, #0x40                  	// #64
   1b644:	str	x0, [sp, #40]
   1b648:	ldr	x0, [sp, #40]
   1b64c:	bl	1b488 <PyInit__decimal@@Base+0x37b0>
   1b650:	ldp	x29, x30, [sp], #48
   1b654:	ret
   1b658:	sub	sp, sp, #0x10
   1b65c:	str	x0, [sp, #8]
   1b660:	ldr	x0, [sp, #8]
   1b664:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1b668:	movk	x1, #0xb6b3, lsl #32
   1b66c:	movk	x1, #0xde0, lsl #48
   1b670:	str	x1, [x0]
   1b674:	ldr	x0, [sp, #8]
   1b678:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1b67c:	movk	x1, #0xb6b3, lsl #32
   1b680:	movk	x1, #0xde0, lsl #48
   1b684:	str	x1, [x0, #8]
   1b688:	ldr	x0, [sp, #8]
   1b68c:	mov	x1, #0x1                   	// #1
   1b690:	movk	x1, #0x589c, lsl #16
   1b694:	movk	x1, #0x494c, lsl #32
   1b698:	movk	x1, #0xf21f, lsl #48
   1b69c:	str	x1, [x0, #16]
   1b6a0:	ldr	x0, [sp, #8]
   1b6a4:	mov	w1, #0x6                   	// #6
   1b6a8:	str	w1, [x0, #36]
   1b6ac:	ldr	x0, [sp, #8]
   1b6b0:	mov	w1, #0x4bbe                	// #19390
   1b6b4:	str	w1, [x0, #24]
   1b6b8:	ldr	x0, [sp, #8]
   1b6bc:	str	wzr, [x0, #28]
   1b6c0:	ldr	x0, [sp, #8]
   1b6c4:	str	wzr, [x0, #32]
   1b6c8:	ldr	x0, [sp, #8]
   1b6cc:	str	wzr, [x0, #40]
   1b6d0:	ldr	x0, [sp, #8]
   1b6d4:	mov	w1, #0x1                   	// #1
   1b6d8:	str	w1, [x0, #44]
   1b6dc:	nop
   1b6e0:	add	sp, sp, #0x10
   1b6e4:	ret
   1b6e8:	sub	sp, sp, #0x10
   1b6ec:	str	x0, [sp, #8]
   1b6f0:	ldr	x0, [sp, #8]
   1b6f4:	mov	x1, #0x26                  	// #38
   1b6f8:	str	x1, [x0]
   1b6fc:	ldr	x0, [sp, #8]
   1b700:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1b704:	movk	x1, #0xb6b3, lsl #32
   1b708:	movk	x1, #0xde0, lsl #48
   1b70c:	str	x1, [x0, #8]
   1b710:	ldr	x0, [sp, #8]
   1b714:	mov	x1, #0x1                   	// #1
   1b718:	movk	x1, #0x589c, lsl #16
   1b71c:	movk	x1, #0x494c, lsl #32
   1b720:	movk	x1, #0xf21f, lsl #48
   1b724:	str	x1, [x0, #16]
   1b728:	ldr	x0, [sp, #8]
   1b72c:	mov	w1, #0x4                   	// #4
   1b730:	str	w1, [x0, #36]
   1b734:	ldr	x0, [sp, #8]
   1b738:	mov	w1, #0x4bbe                	// #19390
   1b73c:	str	w1, [x0, #24]
   1b740:	ldr	x0, [sp, #8]
   1b744:	str	wzr, [x0, #28]
   1b748:	ldr	x0, [sp, #8]
   1b74c:	str	wzr, [x0, #32]
   1b750:	ldr	x0, [sp, #8]
   1b754:	str	wzr, [x0, #40]
   1b758:	ldr	x0, [sp, #8]
   1b75c:	mov	w1, #0x1                   	// #1
   1b760:	str	w1, [x0, #44]
   1b764:	nop
   1b768:	add	sp, sp, #0x10
   1b76c:	ret
   1b770:	sub	sp, sp, #0x10
   1b774:	str	x0, [sp, #8]
   1b778:	ldr	x0, [sp, #8]
   1b77c:	mov	x1, #0x9                   	// #9
   1b780:	str	x1, [x0]
   1b784:	ldr	x0, [sp, #8]
   1b788:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1b78c:	movk	x1, #0xb6b3, lsl #32
   1b790:	movk	x1, #0xde0, lsl #48
   1b794:	str	x1, [x0, #8]
   1b798:	ldr	x0, [sp, #8]
   1b79c:	mov	x1, #0x1                   	// #1
   1b7a0:	movk	x1, #0x589c, lsl #16
   1b7a4:	movk	x1, #0x494c, lsl #32
   1b7a8:	movk	x1, #0xf21f, lsl #48
   1b7ac:	str	x1, [x0, #16]
   1b7b0:	ldr	x0, [sp, #8]
   1b7b4:	mov	w1, #0x4                   	// #4
   1b7b8:	str	w1, [x0, #36]
   1b7bc:	ldr	x0, [sp, #8]
   1b7c0:	mov	w1, #0x4bbf                	// #19391
   1b7c4:	str	w1, [x0, #24]
   1b7c8:	ldr	x0, [sp, #8]
   1b7cc:	str	wzr, [x0, #28]
   1b7d0:	ldr	x0, [sp, #8]
   1b7d4:	str	wzr, [x0, #32]
   1b7d8:	ldr	x0, [sp, #8]
   1b7dc:	str	wzr, [x0, #40]
   1b7e0:	ldr	x0, [sp, #8]
   1b7e4:	mov	w1, #0x1                   	// #1
   1b7e8:	str	w1, [x0, #44]
   1b7ec:	nop
   1b7f0:	add	sp, sp, #0x10
   1b7f4:	ret
   1b7f8:	sub	sp, sp, #0x10
   1b7fc:	str	x0, [sp, #8]
   1b800:	str	w1, [sp, #4]
   1b804:	ldr	w0, [sp, #4]
   1b808:	cmp	w0, #0x0
   1b80c:	b.le	1b82c <PyInit__decimal@@Base+0x3b54>
   1b810:	ldr	w0, [sp, #4]
   1b814:	cmp	w0, #0x200
   1b818:	b.gt	1b82c <PyInit__decimal@@Base+0x3b54>
   1b81c:	ldr	w0, [sp, #4]
   1b820:	and	w0, w0, #0x1f
   1b824:	cmp	w0, #0x0
   1b828:	b.eq	1b834 <PyInit__decimal@@Base+0x3b5c>  // b.none
   1b82c:	mov	w0, #0xffffffff            	// #-1
   1b830:	b	1b8e8 <PyInit__decimal@@Base+0x3c10>
   1b834:	ldr	w0, [sp, #4]
   1b838:	add	w1, w0, #0x1f
   1b83c:	cmp	w0, #0x0
   1b840:	csel	w0, w1, w0, lt  // lt = tstop
   1b844:	asr	w0, w0, #5
   1b848:	mov	w1, w0
   1b84c:	mov	w0, w1
   1b850:	lsl	w0, w0, #3
   1b854:	add	w0, w0, w1
   1b858:	sub	w0, w0, #0x2
   1b85c:	sxtw	x1, w0
   1b860:	ldr	x0, [sp, #8]
   1b864:	str	x1, [x0]
   1b868:	ldr	w0, [sp, #4]
   1b86c:	add	w1, w0, #0xf
   1b870:	cmp	w0, #0x0
   1b874:	csel	w0, w1, w0, lt  // lt = tstop
   1b878:	asr	w0, w0, #4
   1b87c:	add	w0, w0, #0x3
   1b880:	mov	x1, #0x3                   	// #3
   1b884:	lsl	x1, x1, x0
   1b888:	ldr	x0, [sp, #8]
   1b88c:	str	x1, [x0, #8]
   1b890:	ldr	x0, [sp, #8]
   1b894:	ldr	x0, [x0, #8]
   1b898:	mov	x1, #0x1                   	// #1
   1b89c:	sub	x1, x1, x0
   1b8a0:	ldr	x0, [sp, #8]
   1b8a4:	str	x1, [x0, #16]
   1b8a8:	ldr	x0, [sp, #8]
   1b8ac:	mov	w1, #0x6                   	// #6
   1b8b0:	str	w1, [x0, #36]
   1b8b4:	ldr	x0, [sp, #8]
   1b8b8:	str	wzr, [x0, #24]
   1b8bc:	ldr	x0, [sp, #8]
   1b8c0:	str	wzr, [x0, #28]
   1b8c4:	ldr	x0, [sp, #8]
   1b8c8:	str	wzr, [x0, #32]
   1b8cc:	ldr	x0, [sp, #8]
   1b8d0:	mov	w1, #0x1                   	// #1
   1b8d4:	str	w1, [x0, #40]
   1b8d8:	ldr	x0, [sp, #8]
   1b8dc:	mov	w1, #0x1                   	// #1
   1b8e0:	str	w1, [x0, #44]
   1b8e4:	mov	w0, #0x0                   	// #0
   1b8e8:	add	sp, sp, #0x10
   1b8ec:	ret
   1b8f0:	sub	sp, sp, #0x10
   1b8f4:	str	x0, [sp, #8]
   1b8f8:	ldr	x0, [sp, #8]
   1b8fc:	ldr	x0, [x0]
   1b900:	add	sp, sp, #0x10
   1b904:	ret
   1b908:	sub	sp, sp, #0x10
   1b90c:	str	x0, [sp, #8]
   1b910:	ldr	x0, [sp, #8]
   1b914:	ldr	x0, [x0, #8]
   1b918:	add	sp, sp, #0x10
   1b91c:	ret
   1b920:	sub	sp, sp, #0x10
   1b924:	str	x0, [sp, #8]
   1b928:	ldr	x0, [sp, #8]
   1b92c:	ldr	x0, [x0, #16]
   1b930:	add	sp, sp, #0x10
   1b934:	ret
   1b938:	sub	sp, sp, #0x10
   1b93c:	str	x0, [sp, #8]
   1b940:	ldr	x0, [sp, #8]
   1b944:	ldr	w0, [x0, #36]
   1b948:	add	sp, sp, #0x10
   1b94c:	ret
   1b950:	sub	sp, sp, #0x10
   1b954:	str	x0, [sp, #8]
   1b958:	ldr	x0, [sp, #8]
   1b95c:	ldr	w0, [x0, #24]
   1b960:	add	sp, sp, #0x10
   1b964:	ret
   1b968:	sub	sp, sp, #0x10
   1b96c:	str	x0, [sp, #8]
   1b970:	ldr	x0, [sp, #8]
   1b974:	ldr	w0, [x0, #28]
   1b978:	add	sp, sp, #0x10
   1b97c:	ret
   1b980:	sub	sp, sp, #0x10
   1b984:	str	x0, [sp, #8]
   1b988:	ldr	x0, [sp, #8]
   1b98c:	ldr	w0, [x0, #40]
   1b990:	add	sp, sp, #0x10
   1b994:	ret
   1b998:	sub	sp, sp, #0x10
   1b99c:	str	x0, [sp, #8]
   1b9a0:	ldr	x0, [sp, #8]
   1b9a4:	ldr	w0, [x0, #44]
   1b9a8:	add	sp, sp, #0x10
   1b9ac:	ret
   1b9b0:	sub	sp, sp, #0x10
   1b9b4:	str	x0, [sp, #8]
   1b9b8:	str	x1, [sp]
   1b9bc:	ldr	x0, [sp]
   1b9c0:	cmp	x0, #0x0
   1b9c4:	b.le	1b9e0 <PyInit__decimal@@Base+0x3d08>
   1b9c8:	ldr	x1, [sp]
   1b9cc:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1b9d0:	movk	x0, #0xb6b3, lsl #32
   1b9d4:	movk	x0, #0xde0, lsl #48
   1b9d8:	cmp	x1, x0
   1b9dc:	b.le	1b9e8 <PyInit__decimal@@Base+0x3d10>
   1b9e0:	mov	w0, #0x0                   	// #0
   1b9e4:	b	1b9f8 <PyInit__decimal@@Base+0x3d20>
   1b9e8:	ldr	x0, [sp, #8]
   1b9ec:	ldr	x1, [sp]
   1b9f0:	str	x1, [x0]
   1b9f4:	mov	w0, #0x1                   	// #1
   1b9f8:	add	sp, sp, #0x10
   1b9fc:	ret
   1ba00:	sub	sp, sp, #0x10
   1ba04:	str	x0, [sp, #8]
   1ba08:	str	x1, [sp]
   1ba0c:	ldr	x0, [sp]
   1ba10:	cmp	x0, #0x0
   1ba14:	b.lt	1ba30 <PyInit__decimal@@Base+0x3d58>  // b.tstop
   1ba18:	ldr	x1, [sp]
   1ba1c:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1ba20:	movk	x0, #0xb6b3, lsl #32
   1ba24:	movk	x0, #0xde0, lsl #48
   1ba28:	cmp	x1, x0
   1ba2c:	b.le	1ba38 <PyInit__decimal@@Base+0x3d60>
   1ba30:	mov	w0, #0x0                   	// #0
   1ba34:	b	1ba48 <PyInit__decimal@@Base+0x3d70>
   1ba38:	ldr	x0, [sp, #8]
   1ba3c:	ldr	x1, [sp]
   1ba40:	str	x1, [x0, #8]
   1ba44:	mov	w0, #0x1                   	// #1
   1ba48:	add	sp, sp, #0x10
   1ba4c:	ret
   1ba50:	sub	sp, sp, #0x10
   1ba54:	str	x0, [sp, #8]
   1ba58:	str	x1, [sp]
   1ba5c:	ldr	x0, [sp]
   1ba60:	cmp	x0, #0x0
   1ba64:	b.gt	1ba80 <PyInit__decimal@@Base+0x3da8>
   1ba68:	ldr	x1, [sp]
   1ba6c:	mov	x0, #0x589c0000            	// #1486618624
   1ba70:	movk	x0, #0x494c, lsl #32
   1ba74:	movk	x0, #0xf21f, lsl #48
   1ba78:	cmp	x1, x0
   1ba7c:	b.gt	1ba88 <PyInit__decimal@@Base+0x3db0>
   1ba80:	mov	w0, #0x0                   	// #0
   1ba84:	b	1ba98 <PyInit__decimal@@Base+0x3dc0>
   1ba88:	ldr	x0, [sp, #8]
   1ba8c:	ldr	x1, [sp]
   1ba90:	str	x1, [x0, #16]
   1ba94:	mov	w0, #0x1                   	// #1
   1ba98:	add	sp, sp, #0x10
   1ba9c:	ret
   1baa0:	sub	sp, sp, #0x10
   1baa4:	str	x0, [sp, #8]
   1baa8:	str	w1, [sp, #4]
   1baac:	ldr	w0, [sp, #4]
   1bab0:	cmp	w0, #0x0
   1bab4:	b.lt	1bac4 <PyInit__decimal@@Base+0x3dec>  // b.tstop
   1bab8:	ldr	w0, [sp, #4]
   1babc:	cmp	w0, #0x8
   1bac0:	b.le	1bacc <PyInit__decimal@@Base+0x3df4>
   1bac4:	mov	w0, #0x0                   	// #0
   1bac8:	b	1badc <PyInit__decimal@@Base+0x3e04>
   1bacc:	ldr	x0, [sp, #8]
   1bad0:	ldr	w1, [sp, #4]
   1bad4:	str	w1, [x0, #36]
   1bad8:	mov	w0, #0x1                   	// #1
   1badc:	add	sp, sp, #0x10
   1bae0:	ret
   1bae4:	sub	sp, sp, #0x10
   1bae8:	str	x0, [sp, #8]
   1baec:	str	w1, [sp, #4]
   1baf0:	ldr	w1, [sp, #4]
   1baf4:	mov	w0, #0x7fff                	// #32767
   1baf8:	cmp	w1, w0
   1bafc:	b.ls	1bb08 <PyInit__decimal@@Base+0x3e30>  // b.plast
   1bb00:	mov	w0, #0x0                   	// #0
   1bb04:	b	1bb18 <PyInit__decimal@@Base+0x3e40>
   1bb08:	ldr	x0, [sp, #8]
   1bb0c:	ldr	w1, [sp, #4]
   1bb10:	str	w1, [x0, #24]
   1bb14:	mov	w0, #0x1                   	// #1
   1bb18:	add	sp, sp, #0x10
   1bb1c:	ret
   1bb20:	sub	sp, sp, #0x10
   1bb24:	str	x0, [sp, #8]
   1bb28:	str	w1, [sp, #4]
   1bb2c:	ldr	w1, [sp, #4]
   1bb30:	mov	w0, #0x7fff                	// #32767
   1bb34:	cmp	w1, w0
   1bb38:	b.ls	1bb44 <PyInit__decimal@@Base+0x3e6c>  // b.plast
   1bb3c:	mov	w0, #0x0                   	// #0
   1bb40:	b	1bb54 <PyInit__decimal@@Base+0x3e7c>
   1bb44:	ldr	x0, [sp, #8]
   1bb48:	ldr	w1, [sp, #4]
   1bb4c:	str	w1, [x0, #28]
   1bb50:	mov	w0, #0x1                   	// #1
   1bb54:	add	sp, sp, #0x10
   1bb58:	ret
   1bb5c:	sub	sp, sp, #0x10
   1bb60:	str	x0, [sp, #8]
   1bb64:	str	w1, [sp, #4]
   1bb68:	ldr	w0, [sp, #4]
   1bb6c:	cmp	w0, #0x0
   1bb70:	b.eq	1bb88 <PyInit__decimal@@Base+0x3eb0>  // b.none
   1bb74:	ldr	w0, [sp, #4]
   1bb78:	cmp	w0, #0x1
   1bb7c:	b.eq	1bb88 <PyInit__decimal@@Base+0x3eb0>  // b.none
   1bb80:	mov	w0, #0x0                   	// #0
   1bb84:	b	1bb98 <PyInit__decimal@@Base+0x3ec0>
   1bb88:	ldr	x0, [sp, #8]
   1bb8c:	ldr	w1, [sp, #4]
   1bb90:	str	w1, [x0, #40]
   1bb94:	mov	w0, #0x1                   	// #1
   1bb98:	add	sp, sp, #0x10
   1bb9c:	ret
   1bba0:	sub	sp, sp, #0x10
   1bba4:	str	x0, [sp, #8]
   1bba8:	str	w1, [sp, #4]
   1bbac:	ldr	w0, [sp, #4]
   1bbb0:	cmp	w0, #0x0
   1bbb4:	b.eq	1bbcc <PyInit__decimal@@Base+0x3ef4>  // b.none
   1bbb8:	ldr	w0, [sp, #4]
   1bbbc:	cmp	w0, #0x1
   1bbc0:	b.eq	1bbcc <PyInit__decimal@@Base+0x3ef4>  // b.none
   1bbc4:	mov	w0, #0x0                   	// #0
   1bbc8:	b	1bbdc <PyInit__decimal@@Base+0x3f04>
   1bbcc:	ldr	x0, [sp, #8]
   1bbd0:	ldr	w1, [sp, #4]
   1bbd4:	str	w1, [x0, #44]
   1bbd8:	mov	w0, #0x1                   	// #1
   1bbdc:	add	sp, sp, #0x10
   1bbe0:	ret
   1bbe4:	stp	x29, x30, [sp, #-32]!
   1bbe8:	mov	x29, sp
   1bbec:	str	x0, [sp, #24]
   1bbf0:	str	w1, [sp, #20]
   1bbf4:	ldr	x0, [sp, #24]
   1bbf8:	ldr	w1, [x0, #28]
   1bbfc:	ldr	w0, [sp, #20]
   1bc00:	orr	w1, w1, w0
   1bc04:	ldr	x0, [sp, #24]
   1bc08:	str	w1, [x0, #28]
   1bc0c:	ldr	x0, [sp, #24]
   1bc10:	ldr	w1, [x0, #24]
   1bc14:	ldr	w0, [sp, #20]
   1bc18:	and	w0, w1, w0
   1bc1c:	cmp	w0, #0x0
   1bc20:	b.eq	1bc50 <PyInit__decimal@@Base+0x3f78>  // b.none
   1bc24:	ldr	x0, [sp, #24]
   1bc28:	ldr	w1, [x0, #24]
   1bc2c:	ldr	w0, [sp, #20]
   1bc30:	and	w1, w1, w0
   1bc34:	ldr	x0, [sp, #24]
   1bc38:	str	w1, [x0, #32]
   1bc3c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1bc40:	add	x0, x0, #0x5e0
   1bc44:	ldr	x1, [x0]
   1bc48:	ldr	x0, [sp, #24]
   1bc4c:	blr	x1
   1bc50:	nop
   1bc54:	ldp	x29, x30, [sp], #32
   1bc58:	ret
   1bc5c:	sub	sp, sp, #0x10
   1bc60:	str	x0, [sp, #8]
   1bc64:	ldr	x0, [sp, #8]
   1bc68:	cmp	x0, #0x0
   1bc6c:	b.eq	1bc90 <PyInit__decimal@@Base+0x3fb8>  // b.none
   1bc70:	ldr	x0, [sp, #8]
   1bc74:	sub	x1, x0, #0x1
   1bc78:	ldr	x0, [sp, #8]
   1bc7c:	and	x0, x1, x0
   1bc80:	cmp	x0, #0x0
   1bc84:	b.ne	1bc90 <PyInit__decimal@@Base+0x3fb8>  // b.any
   1bc88:	mov	w0, #0x1                   	// #1
   1bc8c:	b	1bc94 <PyInit__decimal@@Base+0x3fbc>
   1bc90:	mov	w0, #0x0                   	// #0
   1bc94:	add	sp, sp, #0x10
   1bc98:	ret
   1bc9c:	sub	sp, sp, #0x10
   1bca0:	str	w0, [sp, #12]
   1bca4:	str	x1, [sp]
   1bca8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1bcac:	add	x0, x0, #0xb60
   1bcb0:	ldrsw	x1, [sp, #12]
   1bcb4:	ldr	x1, [x0, x1, lsl #3]
   1bcb8:	ldr	x0, [sp]
   1bcbc:	str	x1, [x0]
   1bcc0:	nop
   1bcc4:	add	sp, sp, #0x10
   1bcc8:	ret
   1bccc:	sub	sp, sp, #0x30
   1bcd0:	str	x0, [sp, #24]
   1bcd4:	str	x1, [sp, #16]
   1bcd8:	str	x2, [sp, #8]
   1bcdc:	str	x3, [sp]
   1bce0:	ldr	x0, [sp, #8]
   1bce4:	mov	x6, x0
   1bce8:	mov	x7, #0x0                   	// #0
   1bcec:	ldr	x0, [sp]
   1bcf0:	mov	x4, x0
   1bcf4:	mov	x5, #0x0                   	// #0
   1bcf8:	mul	x1, x6, x4
   1bcfc:	umulh	x0, x6, x4
   1bd00:	madd	x0, x7, x4, x0
   1bd04:	madd	x0, x6, x5, x0
   1bd08:	mov	x8, x1
   1bd0c:	mov	x9, x0
   1bd10:	stp	x8, x9, [sp, #32]
   1bd14:	ldr	x0, [sp, #40]
   1bd18:	mov	x10, x0
   1bd1c:	mov	x11, #0x0                   	// #0
   1bd20:	mov	x1, x10
   1bd24:	ldr	x0, [sp, #24]
   1bd28:	str	x1, [x0]
   1bd2c:	ldr	x1, [sp, #32]
   1bd30:	ldr	x0, [sp, #16]
   1bd34:	str	x1, [x0]
   1bd38:	nop
   1bd3c:	add	sp, sp, #0x30
   1bd40:	ret
   1bd44:	stp	x29, x30, [sp, #-80]!
   1bd48:	mov	x29, sp
   1bd4c:	str	x0, [sp, #40]
   1bd50:	str	x1, [sp, #32]
   1bd54:	str	x2, [sp, #24]
   1bd58:	add	x1, sp, #0x30
   1bd5c:	add	x0, sp, #0x38
   1bd60:	ldr	x3, [sp, #32]
   1bd64:	ldr	x2, [sp, #40]
   1bd68:	bl	1bccc <PyInit__decimal@@Base+0x3ff4>
   1bd6c:	ldr	x0, [sp, #24]
   1bd70:	and	x0, x0, #0x100000000
   1bd74:	cmp	x0, #0x0
   1bd78:	b.eq	1beb0 <PyInit__decimal@@Base+0x41d8>  // b.none
   1bd7c:	ldr	x0, [sp, #56]
   1bd80:	str	x0, [sp, #72]
   1bd84:	ldr	x0, [sp, #72]
   1bd88:	str	x0, [sp, #64]
   1bd8c:	ldr	x0, [sp, #56]
   1bd90:	lsr	x0, x0, #32
   1bd94:	str	x0, [sp, #56]
   1bd98:	ldr	x1, [sp, #48]
   1bd9c:	ldr	x0, [sp, #64]
   1bda0:	sub	x0, x1, x0
   1bda4:	str	x0, [sp, #64]
   1bda8:	ldr	x0, [sp, #48]
   1bdac:	ldr	x1, [sp, #64]
   1bdb0:	cmp	x1, x0
   1bdb4:	b.ls	1bdc4 <PyInit__decimal@@Base+0x40ec>  // b.plast
   1bdb8:	ldr	x0, [sp, #56]
   1bdbc:	sub	x0, x0, #0x1
   1bdc0:	str	x0, [sp, #56]
   1bdc4:	ldr	x0, [sp, #72]
   1bdc8:	lsl	x0, x0, #32
   1bdcc:	str	x0, [sp, #72]
   1bdd0:	ldr	x1, [sp, #72]
   1bdd4:	ldr	x0, [sp, #64]
   1bdd8:	add	x0, x1, x0
   1bddc:	str	x0, [sp, #48]
   1bde0:	ldr	x0, [sp, #48]
   1bde4:	ldr	x1, [sp, #72]
   1bde8:	cmp	x1, x0
   1bdec:	b.ls	1bdfc <PyInit__decimal@@Base+0x4124>  // b.plast
   1bdf0:	ldr	x0, [sp, #56]
   1bdf4:	add	x0, x0, #0x1
   1bdf8:	str	x0, [sp, #56]
   1bdfc:	ldr	x0, [sp, #56]
   1be00:	str	x0, [sp, #72]
   1be04:	ldr	x0, [sp, #72]
   1be08:	str	x0, [sp, #64]
   1be0c:	ldr	x0, [sp, #56]
   1be10:	lsr	x0, x0, #32
   1be14:	str	x0, [sp, #56]
   1be18:	ldr	x1, [sp, #48]
   1be1c:	ldr	x0, [sp, #64]
   1be20:	sub	x0, x1, x0
   1be24:	str	x0, [sp, #64]
   1be28:	ldr	x0, [sp, #48]
   1be2c:	ldr	x1, [sp, #64]
   1be30:	cmp	x1, x0
   1be34:	b.ls	1be44 <PyInit__decimal@@Base+0x416c>  // b.plast
   1be38:	ldr	x0, [sp, #56]
   1be3c:	sub	x0, x0, #0x1
   1be40:	str	x0, [sp, #56]
   1be44:	ldr	x0, [sp, #72]
   1be48:	lsl	x0, x0, #32
   1be4c:	str	x0, [sp, #72]
   1be50:	ldr	x1, [sp, #72]
   1be54:	ldr	x0, [sp, #64]
   1be58:	add	x0, x1, x0
   1be5c:	str	x0, [sp, #48]
   1be60:	ldr	x0, [sp, #48]
   1be64:	ldr	x1, [sp, #72]
   1be68:	cmp	x1, x0
   1be6c:	b.ls	1be7c <PyInit__decimal@@Base+0x41a4>  // b.plast
   1be70:	ldr	x0, [sp, #56]
   1be74:	add	x0, x0, #0x1
   1be78:	str	x0, [sp, #56]
   1be7c:	ldr	x0, [sp, #56]
   1be80:	cmp	x0, #0x0
   1be84:	b.ne	1be98 <PyInit__decimal@@Base+0x41c0>  // b.any
   1be88:	ldr	x0, [sp, #48]
   1be8c:	ldr	x1, [sp, #24]
   1be90:	cmp	x1, x0
   1be94:	b.hi	1bea8 <PyInit__decimal@@Base+0x41d0>  // b.pmore
   1be98:	ldr	x1, [sp, #48]
   1be9c:	ldr	x0, [sp, #24]
   1bea0:	sub	x0, x1, x0
   1bea4:	b	1c224 <PyInit__decimal@@Base+0x454c>
   1bea8:	ldr	x0, [sp, #48]
   1beac:	b	1c224 <PyInit__decimal@@Base+0x454c>
   1beb0:	ldr	x0, [sp, #24]
   1beb4:	and	x0, x0, #0x400000000
   1beb8:	cmp	x0, #0x0
   1bebc:	b.eq	1c074 <PyInit__decimal@@Base+0x439c>  // b.none
   1bec0:	ldr	x0, [sp, #56]
   1bec4:	str	x0, [sp, #72]
   1bec8:	ldr	x0, [sp, #72]
   1becc:	str	x0, [sp, #64]
   1bed0:	ldr	x0, [sp, #56]
   1bed4:	lsr	x0, x0, #30
   1bed8:	str	x0, [sp, #56]
   1bedc:	ldr	x1, [sp, #48]
   1bee0:	ldr	x0, [sp, #64]
   1bee4:	sub	x0, x1, x0
   1bee8:	str	x0, [sp, #64]
   1beec:	ldr	x0, [sp, #48]
   1bef0:	ldr	x1, [sp, #64]
   1bef4:	cmp	x1, x0
   1bef8:	b.ls	1bf08 <PyInit__decimal@@Base+0x4230>  // b.plast
   1befc:	ldr	x0, [sp, #56]
   1bf00:	sub	x0, x0, #0x1
   1bf04:	str	x0, [sp, #56]
   1bf08:	ldr	x0, [sp, #72]
   1bf0c:	lsl	x0, x0, #34
   1bf10:	str	x0, [sp, #72]
   1bf14:	ldr	x1, [sp, #72]
   1bf18:	ldr	x0, [sp, #64]
   1bf1c:	add	x0, x1, x0
   1bf20:	str	x0, [sp, #48]
   1bf24:	ldr	x0, [sp, #48]
   1bf28:	ldr	x1, [sp, #72]
   1bf2c:	cmp	x1, x0
   1bf30:	b.ls	1bf40 <PyInit__decimal@@Base+0x4268>  // b.plast
   1bf34:	ldr	x0, [sp, #56]
   1bf38:	add	x0, x0, #0x1
   1bf3c:	str	x0, [sp, #56]
   1bf40:	ldr	x0, [sp, #56]
   1bf44:	str	x0, [sp, #72]
   1bf48:	ldr	x0, [sp, #72]
   1bf4c:	str	x0, [sp, #64]
   1bf50:	ldr	x0, [sp, #56]
   1bf54:	lsr	x0, x0, #30
   1bf58:	str	x0, [sp, #56]
   1bf5c:	ldr	x1, [sp, #48]
   1bf60:	ldr	x0, [sp, #64]
   1bf64:	sub	x0, x1, x0
   1bf68:	str	x0, [sp, #64]
   1bf6c:	ldr	x0, [sp, #48]
   1bf70:	ldr	x1, [sp, #64]
   1bf74:	cmp	x1, x0
   1bf78:	b.ls	1bf88 <PyInit__decimal@@Base+0x42b0>  // b.plast
   1bf7c:	ldr	x0, [sp, #56]
   1bf80:	sub	x0, x0, #0x1
   1bf84:	str	x0, [sp, #56]
   1bf88:	ldr	x0, [sp, #72]
   1bf8c:	lsl	x0, x0, #34
   1bf90:	str	x0, [sp, #72]
   1bf94:	ldr	x1, [sp, #72]
   1bf98:	ldr	x0, [sp, #64]
   1bf9c:	add	x0, x1, x0
   1bfa0:	str	x0, [sp, #48]
   1bfa4:	ldr	x0, [sp, #48]
   1bfa8:	ldr	x1, [sp, #72]
   1bfac:	cmp	x1, x0
   1bfb0:	b.ls	1bfc0 <PyInit__decimal@@Base+0x42e8>  // b.plast
   1bfb4:	ldr	x0, [sp, #56]
   1bfb8:	add	x0, x0, #0x1
   1bfbc:	str	x0, [sp, #56]
   1bfc0:	ldr	x0, [sp, #56]
   1bfc4:	str	x0, [sp, #72]
   1bfc8:	ldr	x0, [sp, #72]
   1bfcc:	str	x0, [sp, #64]
   1bfd0:	ldr	x0, [sp, #56]
   1bfd4:	lsr	x0, x0, #30
   1bfd8:	str	x0, [sp, #56]
   1bfdc:	ldr	x1, [sp, #48]
   1bfe0:	ldr	x0, [sp, #64]
   1bfe4:	sub	x0, x1, x0
   1bfe8:	str	x0, [sp, #64]
   1bfec:	ldr	x0, [sp, #48]
   1bff0:	ldr	x1, [sp, #64]
   1bff4:	cmp	x1, x0
   1bff8:	b.ls	1c008 <PyInit__decimal@@Base+0x4330>  // b.plast
   1bffc:	ldr	x0, [sp, #56]
   1c000:	sub	x0, x0, #0x1
   1c004:	str	x0, [sp, #56]
   1c008:	ldr	x0, [sp, #72]
   1c00c:	lsl	x0, x0, #34
   1c010:	str	x0, [sp, #72]
   1c014:	ldr	x1, [sp, #72]
   1c018:	ldr	x0, [sp, #64]
   1c01c:	add	x0, x1, x0
   1c020:	str	x0, [sp, #48]
   1c024:	ldr	x0, [sp, #48]
   1c028:	ldr	x1, [sp, #72]
   1c02c:	cmp	x1, x0
   1c030:	b.ls	1c040 <PyInit__decimal@@Base+0x4368>  // b.plast
   1c034:	ldr	x0, [sp, #56]
   1c038:	add	x0, x0, #0x1
   1c03c:	str	x0, [sp, #56]
   1c040:	ldr	x0, [sp, #56]
   1c044:	cmp	x0, #0x0
   1c048:	b.ne	1c05c <PyInit__decimal@@Base+0x4384>  // b.any
   1c04c:	ldr	x0, [sp, #48]
   1c050:	ldr	x1, [sp, #24]
   1c054:	cmp	x1, x0
   1c058:	b.hi	1c06c <PyInit__decimal@@Base+0x4394>  // b.pmore
   1c05c:	ldr	x1, [sp, #48]
   1c060:	ldr	x0, [sp, #24]
   1c064:	sub	x0, x1, x0
   1c068:	b	1c224 <PyInit__decimal@@Base+0x454c>
   1c06c:	ldr	x0, [sp, #48]
   1c070:	b	1c224 <PyInit__decimal@@Base+0x454c>
   1c074:	ldr	x0, [sp, #56]
   1c078:	str	x0, [sp, #72]
   1c07c:	ldr	x0, [sp, #72]
   1c080:	str	x0, [sp, #64]
   1c084:	ldr	x0, [sp, #56]
   1c088:	lsr	x0, x0, #24
   1c08c:	str	x0, [sp, #56]
   1c090:	ldr	x1, [sp, #48]
   1c094:	ldr	x0, [sp, #64]
   1c098:	sub	x0, x1, x0
   1c09c:	str	x0, [sp, #64]
   1c0a0:	ldr	x0, [sp, #48]
   1c0a4:	ldr	x1, [sp, #64]
   1c0a8:	cmp	x1, x0
   1c0ac:	b.ls	1c0bc <PyInit__decimal@@Base+0x43e4>  // b.plast
   1c0b0:	ldr	x0, [sp, #56]
   1c0b4:	sub	x0, x0, #0x1
   1c0b8:	str	x0, [sp, #56]
   1c0bc:	ldr	x0, [sp, #72]
   1c0c0:	lsl	x0, x0, #40
   1c0c4:	str	x0, [sp, #72]
   1c0c8:	ldr	x1, [sp, #72]
   1c0cc:	ldr	x0, [sp, #64]
   1c0d0:	add	x0, x1, x0
   1c0d4:	str	x0, [sp, #48]
   1c0d8:	ldr	x0, [sp, #48]
   1c0dc:	ldr	x1, [sp, #72]
   1c0e0:	cmp	x1, x0
   1c0e4:	b.ls	1c0f4 <PyInit__decimal@@Base+0x441c>  // b.plast
   1c0e8:	ldr	x0, [sp, #56]
   1c0ec:	add	x0, x0, #0x1
   1c0f0:	str	x0, [sp, #56]
   1c0f4:	ldr	x0, [sp, #56]
   1c0f8:	str	x0, [sp, #72]
   1c0fc:	ldr	x0, [sp, #72]
   1c100:	str	x0, [sp, #64]
   1c104:	ldr	x0, [sp, #56]
   1c108:	lsr	x0, x0, #24
   1c10c:	str	x0, [sp, #56]
   1c110:	ldr	x1, [sp, #48]
   1c114:	ldr	x0, [sp, #64]
   1c118:	sub	x0, x1, x0
   1c11c:	str	x0, [sp, #64]
   1c120:	ldr	x0, [sp, #48]
   1c124:	ldr	x1, [sp, #64]
   1c128:	cmp	x1, x0
   1c12c:	b.ls	1c13c <PyInit__decimal@@Base+0x4464>  // b.plast
   1c130:	ldr	x0, [sp, #56]
   1c134:	sub	x0, x0, #0x1
   1c138:	str	x0, [sp, #56]
   1c13c:	ldr	x0, [sp, #72]
   1c140:	lsl	x0, x0, #40
   1c144:	str	x0, [sp, #72]
   1c148:	ldr	x1, [sp, #72]
   1c14c:	ldr	x0, [sp, #64]
   1c150:	add	x0, x1, x0
   1c154:	str	x0, [sp, #48]
   1c158:	ldr	x0, [sp, #48]
   1c15c:	ldr	x1, [sp, #72]
   1c160:	cmp	x1, x0
   1c164:	b.ls	1c174 <PyInit__decimal@@Base+0x449c>  // b.plast
   1c168:	ldr	x0, [sp, #56]
   1c16c:	add	x0, x0, #0x1
   1c170:	str	x0, [sp, #56]
   1c174:	ldr	x0, [sp, #56]
   1c178:	str	x0, [sp, #72]
   1c17c:	ldr	x0, [sp, #72]
   1c180:	str	x0, [sp, #64]
   1c184:	ldr	x0, [sp, #56]
   1c188:	lsr	x0, x0, #24
   1c18c:	str	x0, [sp, #56]
   1c190:	ldr	x1, [sp, #48]
   1c194:	ldr	x0, [sp, #64]
   1c198:	sub	x0, x1, x0
   1c19c:	str	x0, [sp, #64]
   1c1a0:	ldr	x0, [sp, #48]
   1c1a4:	ldr	x1, [sp, #64]
   1c1a8:	cmp	x1, x0
   1c1ac:	b.ls	1c1bc <PyInit__decimal@@Base+0x44e4>  // b.plast
   1c1b0:	ldr	x0, [sp, #56]
   1c1b4:	sub	x0, x0, #0x1
   1c1b8:	str	x0, [sp, #56]
   1c1bc:	ldr	x0, [sp, #72]
   1c1c0:	lsl	x0, x0, #40
   1c1c4:	str	x0, [sp, #72]
   1c1c8:	ldr	x1, [sp, #72]
   1c1cc:	ldr	x0, [sp, #64]
   1c1d0:	add	x0, x1, x0
   1c1d4:	str	x0, [sp, #48]
   1c1d8:	ldr	x0, [sp, #48]
   1c1dc:	ldr	x1, [sp, #72]
   1c1e0:	cmp	x1, x0
   1c1e4:	b.ls	1c1f4 <PyInit__decimal@@Base+0x451c>  // b.plast
   1c1e8:	ldr	x0, [sp, #56]
   1c1ec:	add	x0, x0, #0x1
   1c1f0:	str	x0, [sp, #56]
   1c1f4:	ldr	x0, [sp, #56]
   1c1f8:	cmp	x0, #0x0
   1c1fc:	b.ne	1c210 <PyInit__decimal@@Base+0x4538>  // b.any
   1c200:	ldr	x0, [sp, #48]
   1c204:	ldr	x1, [sp, #24]
   1c208:	cmp	x1, x0
   1c20c:	b.hi	1c220 <PyInit__decimal@@Base+0x4548>  // b.pmore
   1c210:	ldr	x1, [sp, #48]
   1c214:	ldr	x0, [sp, #24]
   1c218:	sub	x0, x1, x0
   1c21c:	b	1c224 <PyInit__decimal@@Base+0x454c>
   1c220:	ldr	x0, [sp, #48]
   1c224:	ldp	x29, x30, [sp], #80
   1c228:	ret
   1c22c:	stp	x29, x30, [sp, #-48]!
   1c230:	mov	x29, sp
   1c234:	str	x0, [sp, #40]
   1c238:	str	x1, [sp, #32]
   1c23c:	str	x2, [sp, #24]
   1c240:	str	x3, [sp, #16]
   1c244:	ldr	x0, [sp, #40]
   1c248:	ldr	x0, [x0]
   1c24c:	ldr	x2, [sp, #16]
   1c250:	ldr	x1, [sp, #24]
   1c254:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c258:	mov	x1, x0
   1c25c:	ldr	x0, [sp, #40]
   1c260:	str	x1, [x0]
   1c264:	ldr	x0, [sp, #32]
   1c268:	ldr	x0, [x0]
   1c26c:	ldr	x2, [sp, #16]
   1c270:	ldr	x1, [sp, #24]
   1c274:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c278:	mov	x1, x0
   1c27c:	ldr	x0, [sp, #32]
   1c280:	str	x1, [x0]
   1c284:	nop
   1c288:	ldp	x29, x30, [sp], #48
   1c28c:	ret
   1c290:	stp	x29, x30, [sp, #-64]!
   1c294:	mov	x29, sp
   1c298:	str	x0, [sp, #56]
   1c29c:	str	x1, [sp, #48]
   1c2a0:	str	x2, [sp, #40]
   1c2a4:	str	x3, [sp, #32]
   1c2a8:	str	x4, [sp, #24]
   1c2ac:	ldr	x0, [sp, #56]
   1c2b0:	ldr	x0, [x0]
   1c2b4:	ldr	x2, [sp, #24]
   1c2b8:	ldr	x1, [sp, #48]
   1c2bc:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c2c0:	mov	x1, x0
   1c2c4:	ldr	x0, [sp, #56]
   1c2c8:	str	x1, [x0]
   1c2cc:	ldr	x0, [sp, #40]
   1c2d0:	ldr	x0, [x0]
   1c2d4:	ldr	x2, [sp, #24]
   1c2d8:	ldr	x1, [sp, #32]
   1c2dc:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c2e0:	mov	x1, x0
   1c2e4:	ldr	x0, [sp, #40]
   1c2e8:	str	x1, [x0]
   1c2ec:	nop
   1c2f0:	ldp	x29, x30, [sp], #64
   1c2f4:	ret
   1c2f8:	stp	x29, x30, [sp, #-64]!
   1c2fc:	mov	x29, sp
   1c300:	str	x0, [sp, #40]
   1c304:	str	x1, [sp, #32]
   1c308:	str	x2, [sp, #24]
   1c30c:	mov	x0, #0x1                   	// #1
   1c310:	str	x0, [sp, #56]
   1c314:	b	1c35c <PyInit__decimal@@Base+0x4684>
   1c318:	ldr	x0, [sp, #32]
   1c31c:	and	x0, x0, #0x1
   1c320:	cmp	x0, #0x0
   1c324:	b.eq	1c33c <PyInit__decimal@@Base+0x4664>  // b.none
   1c328:	ldr	x2, [sp, #24]
   1c32c:	ldr	x1, [sp, #40]
   1c330:	ldr	x0, [sp, #56]
   1c334:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c338:	str	x0, [sp, #56]
   1c33c:	ldr	x2, [sp, #24]
   1c340:	ldr	x1, [sp, #40]
   1c344:	ldr	x0, [sp, #40]
   1c348:	bl	1bd44 <PyInit__decimal@@Base+0x406c>
   1c34c:	str	x0, [sp, #40]
   1c350:	ldr	x0, [sp, #32]
   1c354:	lsr	x0, x0, #1
   1c358:	str	x0, [sp, #32]
   1c35c:	ldr	x0, [sp, #32]
   1c360:	cmp	x0, #0x0
   1c364:	b.ne	1c318 <PyInit__decimal@@Base+0x4640>  // b.any
   1c368:	ldr	x0, [sp, #56]
   1c36c:	ldp	x29, x30, [sp], #64
   1c370:	ret
   1c374:	stp	x29, x30, [sp, #-160]!
   1c378:	mov	x29, sp
   1c37c:	str	x0, [sp, #40]
   1c380:	str	x1, [sp, #32]
   1c384:	str	x2, [sp, #24]
   1c388:	str	w3, [sp, #20]
   1c38c:	add	x0, sp, #0x68
   1c390:	mov	x1, x0
   1c394:	ldr	w0, [sp, #20]
   1c398:	bl	1bc9c <PyInit__decimal@@Base+0x3fc4>
   1c39c:	ldr	x0, [sp, #104]
   1c3a0:	sub	x0, x0, #0x2
   1c3a4:	ldr	x1, [sp, #104]
   1c3a8:	mov	x2, x1
   1c3ac:	mov	x1, x0
   1c3b0:	ldr	x0, [sp, #24]
   1c3b4:	bl	1c2f8 <PyInit__decimal@@Base+0x4620>
   1c3b8:	str	x0, [sp, #128]
   1c3bc:	ldr	x0, [sp, #24]
   1c3c0:	bl	1bc5c <PyInit__decimal@@Base+0x3f84>
   1c3c4:	cmp	w0, #0x0
   1c3c8:	b.eq	1c410 <PyInit__decimal@@Base+0x4738>  // b.none
   1c3cc:	ldr	x0, [sp, #24]
   1c3d0:	cmp	x0, #0x1, lsl #12
   1c3d4:	b.ls	1c3f4 <PyInit__decimal@@Base+0x471c>  // b.plast
   1c3d8:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x27328>
   1c3dc:	add	x0, x0, #0xd58
   1c3e0:	str	x0, [sp, #152]
   1c3e4:	adrp	x0, 40000 <PyInit__decimal@@Base+0x28328>
   1c3e8:	add	x0, x0, #0xb0
   1c3ec:	str	x0, [sp, #144]
   1c3f0:	b	1c428 <PyInit__decimal@@Base+0x4750>
   1c3f4:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c3f8:	add	x0, x0, #0x508
   1c3fc:	str	x0, [sp, #152]
   1c400:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c404:	add	x0, x0, #0x574
   1c408:	str	x0, [sp, #144]
   1c40c:	b	1c428 <PyInit__decimal@@Base+0x4750>
   1c410:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c414:	add	x0, x0, #0xecc
   1c418:	str	x0, [sp, #152]
   1c41c:	adrp	x0, 1f000 <PyInit__decimal@@Base+0x7328>
   1c420:	add	x0, x0, #0x18c
   1c424:	str	x0, [sp, #144]
   1c428:	ldr	x3, [sp, #152]
   1c42c:	ldr	w2, [sp, #20]
   1c430:	ldr	x1, [sp, #24]
   1c434:	ldr	x0, [sp, #40]
   1c438:	blr	x3
   1c43c:	cmp	w0, #0x0
   1c440:	b.ne	1c44c <PyInit__decimal@@Base+0x4774>  // b.any
   1c444:	mov	w0, #0x0                   	// #0
   1c448:	b	1c6ac <PyInit__decimal@@Base+0x49d4>
   1c44c:	ldr	x3, [sp, #152]
   1c450:	ldr	w2, [sp, #20]
   1c454:	ldr	x1, [sp, #24]
   1c458:	ldr	x0, [sp, #32]
   1c45c:	blr	x3
   1c460:	cmp	w0, #0x0
   1c464:	b.ne	1c470 <PyInit__decimal@@Base+0x4798>  // b.any
   1c468:	mov	w0, #0x0                   	// #0
   1c46c:	b	1c6ac <PyInit__decimal@@Base+0x49d4>
   1c470:	str	xzr, [sp, #136]
   1c474:	b	1c540 <PyInit__decimal@@Base+0x4868>
   1c478:	ldr	x0, [sp, #136]
   1c47c:	lsl	x0, x0, #3
   1c480:	ldr	x1, [sp, #40]
   1c484:	add	x0, x1, x0
   1c488:	ldr	x0, [x0]
   1c48c:	str	x0, [sp, #96]
   1c490:	ldr	x0, [sp, #136]
   1c494:	lsl	x0, x0, #3
   1c498:	ldr	x1, [sp, #32]
   1c49c:	add	x0, x1, x0
   1c4a0:	ldr	x0, [x0]
   1c4a4:	str	x0, [sp, #120]
   1c4a8:	ldr	x0, [sp, #136]
   1c4ac:	add	x0, x0, #0x1
   1c4b0:	lsl	x0, x0, #3
   1c4b4:	ldr	x1, [sp, #40]
   1c4b8:	add	x0, x1, x0
   1c4bc:	ldr	x0, [x0]
   1c4c0:	str	x0, [sp, #88]
   1c4c4:	ldr	x0, [sp, #136]
   1c4c8:	add	x0, x0, #0x1
   1c4cc:	lsl	x0, x0, #3
   1c4d0:	ldr	x1, [sp, #32]
   1c4d4:	add	x0, x1, x0
   1c4d8:	ldr	x0, [x0]
   1c4dc:	str	x0, [sp, #112]
   1c4e0:	ldr	x2, [sp, #104]
   1c4e4:	add	x1, sp, #0x58
   1c4e8:	add	x0, sp, #0x60
   1c4ec:	mov	x4, x2
   1c4f0:	ldr	x3, [sp, #112]
   1c4f4:	mov	x2, x1
   1c4f8:	ldr	x1, [sp, #120]
   1c4fc:	bl	1c290 <PyInit__decimal@@Base+0x45b8>
   1c500:	ldr	x0, [sp, #136]
   1c504:	lsl	x0, x0, #3
   1c508:	ldr	x1, [sp, #40]
   1c50c:	add	x0, x1, x0
   1c510:	ldr	x1, [sp, #96]
   1c514:	str	x1, [x0]
   1c518:	ldr	x0, [sp, #136]
   1c51c:	add	x0, x0, #0x1
   1c520:	lsl	x0, x0, #3
   1c524:	ldr	x1, [sp, #40]
   1c528:	add	x0, x1, x0
   1c52c:	ldr	x1, [sp, #88]
   1c530:	str	x1, [x0]
   1c534:	ldr	x0, [sp, #136]
   1c538:	add	x0, x0, #0x2
   1c53c:	str	x0, [sp, #136]
   1c540:	ldr	x0, [sp, #24]
   1c544:	sub	x0, x0, #0x1
   1c548:	ldr	x1, [sp, #136]
   1c54c:	cmp	x1, x0
   1c550:	b.cc	1c478 <PyInit__decimal@@Base+0x47a0>  // b.lo, b.ul, b.last
   1c554:	ldr	x3, [sp, #144]
   1c558:	ldr	w2, [sp, #20]
   1c55c:	ldr	x1, [sp, #24]
   1c560:	ldr	x0, [sp, #40]
   1c564:	blr	x3
   1c568:	cmp	w0, #0x0
   1c56c:	b.ne	1c578 <PyInit__decimal@@Base+0x48a0>  // b.any
   1c570:	mov	w0, #0x0                   	// #0
   1c574:	b	1c6ac <PyInit__decimal@@Base+0x49d4>
   1c578:	str	xzr, [sp, #136]
   1c57c:	b	1c694 <PyInit__decimal@@Base+0x49bc>
   1c580:	ldr	x0, [sp, #136]
   1c584:	lsl	x0, x0, #3
   1c588:	ldr	x1, [sp, #40]
   1c58c:	add	x0, x1, x0
   1c590:	ldr	x0, [x0]
   1c594:	str	x0, [sp, #80]
   1c598:	ldr	x0, [sp, #136]
   1c59c:	add	x0, x0, #0x1
   1c5a0:	lsl	x0, x0, #3
   1c5a4:	ldr	x1, [sp, #40]
   1c5a8:	add	x0, x1, x0
   1c5ac:	ldr	x0, [x0]
   1c5b0:	str	x0, [sp, #72]
   1c5b4:	ldr	x0, [sp, #136]
   1c5b8:	add	x0, x0, #0x2
   1c5bc:	lsl	x0, x0, #3
   1c5c0:	ldr	x1, [sp, #40]
   1c5c4:	add	x0, x1, x0
   1c5c8:	ldr	x0, [x0]
   1c5cc:	str	x0, [sp, #64]
   1c5d0:	ldr	x0, [sp, #136]
   1c5d4:	add	x0, x0, #0x3
   1c5d8:	lsl	x0, x0, #3
   1c5dc:	ldr	x1, [sp, #40]
   1c5e0:	add	x0, x1, x0
   1c5e4:	ldr	x0, [x0]
   1c5e8:	str	x0, [sp, #56]
   1c5ec:	ldr	x2, [sp, #104]
   1c5f0:	add	x1, sp, #0x48
   1c5f4:	add	x0, sp, #0x50
   1c5f8:	mov	x3, x2
   1c5fc:	ldr	x2, [sp, #128]
   1c600:	bl	1c22c <PyInit__decimal@@Base+0x4554>
   1c604:	ldr	x2, [sp, #104]
   1c608:	add	x1, sp, #0x38
   1c60c:	add	x0, sp, #0x40
   1c610:	mov	x3, x2
   1c614:	ldr	x2, [sp, #128]
   1c618:	bl	1c22c <PyInit__decimal@@Base+0x4554>
   1c61c:	ldr	x0, [sp, #136]
   1c620:	lsl	x0, x0, #3
   1c624:	ldr	x1, [sp, #40]
   1c628:	add	x0, x1, x0
   1c62c:	ldr	x1, [sp, #80]
   1c630:	str	x1, [x0]
   1c634:	ldr	x0, [sp, #136]
   1c638:	add	x0, x0, #0x1
   1c63c:	lsl	x0, x0, #3
   1c640:	ldr	x1, [sp, #40]
   1c644:	add	x0, x1, x0
   1c648:	ldr	x1, [sp, #72]
   1c64c:	str	x1, [x0]
   1c650:	ldr	x0, [sp, #136]
   1c654:	add	x0, x0, #0x2
   1c658:	lsl	x0, x0, #3
   1c65c:	ldr	x1, [sp, #40]
   1c660:	add	x0, x1, x0
   1c664:	ldr	x1, [sp, #64]
   1c668:	str	x1, [x0]
   1c66c:	ldr	x0, [sp, #136]
   1c670:	add	x0, x0, #0x3
   1c674:	lsl	x0, x0, #3
   1c678:	ldr	x1, [sp, #40]
   1c67c:	add	x0, x1, x0
   1c680:	ldr	x1, [sp, #56]
   1c684:	str	x1, [x0]
   1c688:	ldr	x0, [sp, #136]
   1c68c:	add	x0, x0, #0x4
   1c690:	str	x0, [sp, #136]
   1c694:	ldr	x0, [sp, #24]
   1c698:	sub	x0, x0, #0x3
   1c69c:	ldr	x1, [sp, #136]
   1c6a0:	cmp	x1, x0
   1c6a4:	b.cc	1c580 <PyInit__decimal@@Base+0x48a8>  // b.lo, b.ul, b.last
   1c6a8:	mov	w0, #0x1                   	// #1
   1c6ac:	ldp	x29, x30, [sp], #160
   1c6b0:	ret
   1c6b4:	stp	x29, x30, [sp, #-144]!
   1c6b8:	mov	x29, sp
   1c6bc:	str	x0, [sp, #40]
   1c6c0:	str	x1, [sp, #32]
   1c6c4:	str	w2, [sp, #28]
   1c6c8:	add	x0, sp, #0x68
   1c6cc:	mov	x1, x0
   1c6d0:	ldr	w0, [sp, #28]
   1c6d4:	bl	1bc9c <PyInit__decimal@@Base+0x3fc4>
   1c6d8:	ldr	x0, [sp, #104]
   1c6dc:	sub	x0, x0, #0x2
   1c6e0:	ldr	x1, [sp, #104]
   1c6e4:	mov	x2, x1
   1c6e8:	mov	x1, x0
   1c6ec:	ldr	x0, [sp, #32]
   1c6f0:	bl	1c2f8 <PyInit__decimal@@Base+0x4620>
   1c6f4:	str	x0, [sp, #112]
   1c6f8:	ldr	x0, [sp, #32]
   1c6fc:	bl	1bc5c <PyInit__decimal@@Base+0x3f84>
   1c700:	cmp	w0, #0x0
   1c704:	b.eq	1c74c <PyInit__decimal@@Base+0x4a74>  // b.none
   1c708:	ldr	x0, [sp, #32]
   1c70c:	cmp	x0, #0x1, lsl #12
   1c710:	b.ls	1c730 <PyInit__decimal@@Base+0x4a58>  // b.plast
   1c714:	adrp	x0, 3f000 <PyInit__decimal@@Base+0x27328>
   1c718:	add	x0, x0, #0xd58
   1c71c:	str	x0, [sp, #136]
   1c720:	adrp	x0, 40000 <PyInit__decimal@@Base+0x28328>
   1c724:	add	x0, x0, #0xb0
   1c728:	str	x0, [sp, #128]
   1c72c:	b	1c764 <PyInit__decimal@@Base+0x4a8c>
   1c730:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c734:	add	x0, x0, #0x508
   1c738:	str	x0, [sp, #136]
   1c73c:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c740:	add	x0, x0, #0x574
   1c744:	str	x0, [sp, #128]
   1c748:	b	1c764 <PyInit__decimal@@Base+0x4a8c>
   1c74c:	adrp	x0, 1e000 <PyInit__decimal@@Base+0x6328>
   1c750:	add	x0, x0, #0xecc
   1c754:	str	x0, [sp, #136]
   1c758:	adrp	x0, 1f000 <PyInit__decimal@@Base+0x7328>
   1c75c:	add	x0, x0, #0x18c
   1c760:	str	x0, [sp, #128]
   1c764:	ldr	x3, [sp, #136]
   1c768:	ldr	w2, [sp, #28]
   1c76c:	ldr	x1, [sp, #32]
   1c770:	ldr	x0, [sp, #40]
   1c774:	blr	x3
   1c778:	cmp	w0, #0x0
   1c77c:	b.ne	1c788 <PyInit__decimal@@Base+0x4ab0>  // b.any
   1c780:	mov	w0, #0x0                   	// #0
   1c784:	b	1c988 <PyInit__decimal@@Base+0x4cb0>
   1c788:	str	xzr, [sp, #120]
   1c78c:	b	1c81c <PyInit__decimal@@Base+0x4b44>
   1c790:	ldr	x0, [sp, #120]
   1c794:	lsl	x0, x0, #3
   1c798:	ldr	x1, [sp, #40]
   1c79c:	add	x0, x1, x0
   1c7a0:	ldr	x0, [x0]
   1c7a4:	str	x0, [sp, #96]
   1c7a8:	ldr	x0, [sp, #120]
   1c7ac:	add	x0, x0, #0x1
   1c7b0:	lsl	x0, x0, #3
   1c7b4:	ldr	x1, [sp, #40]
   1c7b8:	add	x0, x1, x0
   1c7bc:	ldr	x0, [x0]
   1c7c0:	str	x0, [sp, #88]
   1c7c4:	ldr	x1, [sp, #96]
   1c7c8:	ldr	x3, [sp, #88]
   1c7cc:	ldr	x4, [sp, #104]
   1c7d0:	add	x2, sp, #0x58
   1c7d4:	add	x0, sp, #0x60
   1c7d8:	bl	1c290 <PyInit__decimal@@Base+0x45b8>
   1c7dc:	ldr	x0, [sp, #120]
   1c7e0:	lsl	x0, x0, #3
   1c7e4:	ldr	x1, [sp, #40]
   1c7e8:	add	x0, x1, x0
   1c7ec:	ldr	x1, [sp, #96]
   1c7f0:	str	x1, [x0]
   1c7f4:	ldr	x0, [sp, #120]
   1c7f8:	add	x0, x0, #0x1
   1c7fc:	lsl	x0, x0, #3
   1c800:	ldr	x1, [sp, #40]
   1c804:	add	x0, x1, x0
   1c808:	ldr	x1, [sp, #88]
   1c80c:	str	x1, [x0]
   1c810:	ldr	x0, [sp, #120]
   1c814:	add	x0, x0, #0x2
   1c818:	str	x0, [sp, #120]
   1c81c:	ldr	x0, [sp, #32]
   1c820:	sub	x0, x0, #0x1
   1c824:	ldr	x1, [sp, #120]
   1c828:	cmp	x1, x0
   1c82c:	b.cc	1c790 <PyInit__decimal@@Base+0x4ab8>  // b.lo, b.ul, b.last
   1c830:	ldr	x3, [sp, #128]
   1c834:	ldr	w2, [sp, #28]
   1c838:	ldr	x1, [sp, #32]
   1c83c:	ldr	x0, [sp, #40]
   1c840:	blr	x3
   1c844:	cmp	w0, #0x0
   1c848:	b.ne	1c854 <PyInit__decimal@@Base+0x4b7c>  // b.any
   1c84c:	mov	w0, #0x0                   	// #0
   1c850:	b	1c988 <PyInit__decimal@@Base+0x4cb0>
   1c854:	str	xzr, [sp, #120]
   1c858:	b	1c970 <PyInit__decimal@@Base+0x4c98>
   1c85c:	ldr	x0, [sp, #120]
   1c860:	lsl	x0, x0, #3
   1c864:	ldr	x1, [sp, #40]
   1c868:	add	x0, x1, x0
   1c86c:	ldr	x0, [x0]
   1c870:	str	x0, [sp, #80]
   1c874:	ldr	x0, [sp, #120]
   1c878:	add	x0, x0, #0x1
   1c87c:	lsl	x0, x0, #3
   1c880:	ldr	x1, [sp, #40]
   1c884:	add	x0, x1, x0
   1c888:	ldr	x0, [x0]
   1c88c:	str	x0, [sp, #72]
   1c890:	ldr	x0, [sp, #120]
   1c894:	add	x0, x0, #0x2
   1c898:	lsl	x0, x0, #3
   1c89c:	ldr	x1, [sp, #40]
   1c8a0:	add	x0, x1, x0
   1c8a4:	ldr	x0, [x0]
   1c8a8:	str	x0, [sp, #64]
   1c8ac:	ldr	x0, [sp, #120]
   1c8b0:	add	x0, x0, #0x3
   1c8b4:	lsl	x0, x0, #3
   1c8b8:	ldr	x1, [sp, #40]
   1c8bc:	add	x0, x1, x0
   1c8c0:	ldr	x0, [x0]
   1c8c4:	str	x0, [sp, #56]
   1c8c8:	ldr	x2, [sp, #104]
   1c8cc:	add	x1, sp, #0x48
   1c8d0:	add	x0, sp, #0x50
   1c8d4:	mov	x3, x2
   1c8d8:	ldr	x2, [sp, #112]
   1c8dc:	bl	1c22c <PyInit__decimal@@Base+0x4554>
   1c8e0:	ldr	x2, [sp, #104]
   1c8e4:	add	x1, sp, #0x38
   1c8e8:	add	x0, sp, #0x40
   1c8ec:	mov	x3, x2
   1c8f0:	ldr	x2, [sp, #112]
   1c8f4:	bl	1c22c <PyInit__decimal@@Base+0x4554>
   1c8f8:	ldr	x0, [sp, #120]
   1c8fc:	lsl	x0, x0, #3
   1c900:	ldr	x1, [sp, #40]
   1c904:	add	x0, x1, x0
   1c908:	ldr	x1, [sp, #80]
   1c90c:	str	x1, [x0]
   1c910:	ldr	x0, [sp, #120]
   1c914:	add	x0, x0, #0x1
   1c918:	lsl	x0, x0, #3
   1c91c:	ldr	x1, [sp, #40]
   1c920:	add	x0, x1, x0
   1c924:	ldr	x1, [sp, #72]
   1c928:	str	x1, [x0]
   1c92c:	ldr	x0, [sp, #120]
   1c930:	add	x0, x0, #0x2
   1c934:	lsl	x0, x0, #3
   1c938:	ldr	x1, [sp, #40]
   1c93c:	add	x0, x1, x0
   1c940:	ldr	x1, [sp, #64]
   1c944:	str	x1, [x0]
   1c948:	ldr	x0, [sp, #120]
   1c94c:	add	x0, x0, #0x3
   1c950:	lsl	x0, x0, #3
   1c954:	ldr	x1, [sp, #40]
   1c958:	add	x0, x1, x0
   1c95c:	ldr	x1, [sp, #56]
   1c960:	str	x1, [x0]
   1c964:	ldr	x0, [sp, #120]
   1c968:	add	x0, x0, #0x4
   1c96c:	str	x0, [sp, #120]
   1c970:	ldr	x0, [sp, #32]
   1c974:	sub	x0, x0, #0x3
   1c978:	ldr	x1, [sp, #120]
   1c97c:	cmp	x1, x0
   1c980:	b.cc	1c85c <PyInit__decimal@@Base+0x4b84>  // b.lo, b.ul, b.last
   1c984:	mov	w0, #0x1                   	// #1
   1c988:	ldp	x29, x30, [sp], #144
   1c98c:	ret
   1c990:	sub	sp, sp, #0x10
   1c994:	str	w0, [sp, #12]
   1c998:	str	x1, [sp]
   1c99c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1c9a0:	add	x0, x0, #0xb60
   1c9a4:	ldrsw	x1, [sp, #12]
   1c9a8:	ldr	x1, [x0, x1, lsl #3]
   1c9ac:	ldr	x0, [sp]
   1c9b0:	str	x1, [x0]
   1c9b4:	nop
   1c9b8:	add	sp, sp, #0x10
   1c9bc:	ret
   1c9c0:	sub	sp, sp, #0x30
   1c9c4:	str	x0, [sp, #24]
   1c9c8:	str	x1, [sp, #16]
   1c9cc:	str	x2, [sp, #8]
   1c9d0:	str	x3, [sp]
   1c9d4:	ldr	x0, [sp, #8]
   1c9d8:	mov	x6, x0
   1c9dc:	mov	x7, #0x0                   	// #0
   1c9e0:	ldr	x0, [sp]
   1c9e4:	mov	x4, x0
   1c9e8:	mov	x5, #0x0                   	// #0
   1c9ec:	mul	x1, x6, x4
   1c9f0:	umulh	x0, x6, x4
   1c9f4:	madd	x0, x7, x4, x0
   1c9f8:	madd	x0, x6, x5, x0
   1c9fc:	mov	x8, x1
   1ca00:	mov	x9, x0
   1ca04:	stp	x8, x9, [sp, #32]
   1ca08:	ldr	x0, [sp, #40]
   1ca0c:	mov	x10, x0
   1ca10:	mov	x11, #0x0                   	// #0
   1ca14:	mov	x1, x10
   1ca18:	ldr	x0, [sp, #24]
   1ca1c:	str	x1, [x0]
   1ca20:	ldr	x1, [sp, #32]
   1ca24:	ldr	x0, [sp, #16]
   1ca28:	str	x1, [x0]
   1ca2c:	nop
   1ca30:	add	sp, sp, #0x30
   1ca34:	ret
   1ca38:	stp	x29, x30, [sp, #-80]!
   1ca3c:	mov	x29, sp
   1ca40:	str	x0, [sp, #56]
   1ca44:	str	x1, [sp, #48]
   1ca48:	str	x2, [sp, #40]
   1ca4c:	str	x3, [sp, #32]
   1ca50:	str	x4, [sp, #24]
   1ca54:	ldr	x0, [sp, #40]
   1ca58:	mov	x14, x0
   1ca5c:	mov	x15, #0x0                   	// #0
   1ca60:	mov	x7, x14
   1ca64:	mov	x6, #0x0                   	// #0
   1ca68:	ldr	x0, [sp, #32]
   1ca6c:	mov	x10, x0
   1ca70:	mov	x11, #0x0                   	// #0
   1ca74:	mov	x0, x10
   1ca78:	adds	x1, x6, x0
   1ca7c:	mov	x0, x11
   1ca80:	adc	x0, x7, x0
   1ca84:	mov	x8, x1
   1ca88:	mov	x9, x0
   1ca8c:	stp	x8, x9, [sp, #64]
   1ca90:	ldr	x0, [sp, #24]
   1ca94:	mov	x12, x0
   1ca98:	mov	x13, #0x0                   	// #0
   1ca9c:	mov	x2, x12
   1caa0:	mov	x3, x13
   1caa4:	ldp	x0, x1, [sp, #64]
   1caa8:	bl	413a4 <PyInit__decimal@@Base+0x296cc>
   1caac:	mov	x1, x0
   1cab0:	ldr	x0, [sp, #56]
   1cab4:	str	x1, [x0]
   1cab8:	ldr	x1, [sp, #64]
   1cabc:	ldr	x0, [sp, #56]
   1cac0:	ldr	x2, [x0]
   1cac4:	ldr	x0, [sp, #24]
   1cac8:	mul	x0, x2, x0
   1cacc:	sub	x1, x1, x0
   1cad0:	ldr	x0, [sp, #48]
   1cad4:	str	x1, [x0]
   1cad8:	nop
   1cadc:	ldp	x29, x30, [sp], #80
   1cae0:	ret
   1cae4:	sub	sp, sp, #0x20
   1cae8:	str	x0, [sp, #24]
   1caec:	str	x1, [sp, #16]
   1caf0:	str	x2, [sp, #8]
   1caf4:	str	x3, [sp]
   1caf8:	ldr	x1, [sp, #8]
   1cafc:	ldr	x0, [sp]
   1cb00:	udiv	x1, x1, x0
   1cb04:	ldr	x0, [sp, #24]
   1cb08:	str	x1, [x0]
   1cb0c:	ldr	x0, [sp, #24]
   1cb10:	ldr	x1, [x0]
   1cb14:	ldr	x0, [sp]
   1cb18:	mul	x0, x1, x0
   1cb1c:	ldr	x1, [sp, #8]
   1cb20:	sub	x1, x1, x0
   1cb24:	ldr	x0, [sp, #16]
   1cb28:	str	x1, [x0]
   1cb2c:	nop
   1cb30:	add	sp, sp, #0x20
   1cb34:	ret
   1cb38:	sub	sp, sp, #0x30
   1cb3c:	str	x0, [sp, #24]
   1cb40:	str	x1, [sp, #16]
   1cb44:	str	x2, [sp, #8]
   1cb48:	ldr	x1, [sp, #24]
   1cb4c:	ldr	x0, [sp, #8]
   1cb50:	cmp	x1, x0
   1cb54:	b.cc	1cb68 <PyInit__decimal@@Base+0x4e90>  // b.lo, b.ul, b.last
   1cb58:	ldr	x1, [sp, #24]
   1cb5c:	ldr	x0, [sp, #8]
   1cb60:	sub	x0, x1, x0
   1cb64:	b	1cb6c <PyInit__decimal@@Base+0x4e94>
   1cb68:	ldr	x0, [sp, #24]
   1cb6c:	str	x0, [sp, #24]
   1cb70:	ldr	x1, [sp, #16]
   1cb74:	ldr	x0, [sp, #8]
   1cb78:	cmp	x1, x0
   1cb7c:	b.cc	1cb90 <PyInit__decimal@@Base+0x4eb8>  // b.lo, b.ul, b.last
   1cb80:	ldr	x1, [sp, #16]
   1cb84:	ldr	x0, [sp, #8]
   1cb88:	sub	x0, x1, x0
   1cb8c:	b	1cb94 <PyInit__decimal@@Base+0x4ebc>
   1cb90:	ldr	x0, [sp, #16]
   1cb94:	str	x0, [sp, #16]
   1cb98:	ldr	x1, [sp, #24]
   1cb9c:	ldr	x0, [sp, #16]
   1cba0:	sub	x0, x1, x0
   1cba4:	str	x0, [sp, #40]
   1cba8:	ldr	x1, [sp, #24]
   1cbac:	ldr	x0, [sp, #16]
   1cbb0:	cmp	x1, x0
   1cbb4:	b.cs	1cbc8 <PyInit__decimal@@Base+0x4ef0>  // b.hs, b.nlast
   1cbb8:	ldr	x1, [sp, #40]
   1cbbc:	ldr	x0, [sp, #8]
   1cbc0:	add	x0, x1, x0
   1cbc4:	b	1cbcc <PyInit__decimal@@Base+0x4ef4>
   1cbc8:	ldr	x0, [sp, #40]
   1cbcc:	str	x0, [sp, #40]
   1cbd0:	ldr	x0, [sp, #40]
   1cbd4:	add	sp, sp, #0x30
   1cbd8:	ret
   1cbdc:	stp	x29, x30, [sp, #-80]!
   1cbe0:	mov	x29, sp
   1cbe4:	str	x0, [sp, #40]
   1cbe8:	str	x1, [sp, #32]
   1cbec:	str	x2, [sp, #24]
   1cbf0:	add	x1, sp, #0x48
   1cbf4:	add	x0, sp, #0x38
   1cbf8:	ldr	x3, [sp, #24]
   1cbfc:	ldr	x2, [sp, #40]
   1cc00:	bl	1cae4 <PyInit__decimal@@Base+0x4e0c>
   1cc04:	ldr	x2, [sp, #72]
   1cc08:	add	x1, sp, #0x40
   1cc0c:	add	x0, sp, #0x38
   1cc10:	ldr	x4, [sp, #24]
   1cc14:	ldr	x3, [sp, #32]
   1cc18:	bl	1ca38 <PyInit__decimal@@Base+0x4d60>
   1cc1c:	ldr	x0, [sp, #64]
   1cc20:	ldp	x29, x30, [sp], #80
   1cc24:	ret
   1cc28:	stp	x29, x30, [sp, #-64]!
   1cc2c:	mov	x29, sp
   1cc30:	str	x0, [sp, #40]
   1cc34:	str	x1, [sp, #32]
   1cc38:	str	x2, [sp, #24]
   1cc3c:	str	x3, [sp, #16]
   1cc40:	ldr	x2, [sp, #16]
   1cc44:	ldr	x1, [sp, #24]
   1cc48:	ldr	x0, [sp, #32]
   1cc4c:	bl	1cbdc <PyInit__decimal@@Base+0x4f04>
   1cc50:	str	x0, [sp, #56]
   1cc54:	ldr	x1, [sp, #40]
   1cc58:	ldr	x0, [sp, #56]
   1cc5c:	sub	x0, x1, x0
   1cc60:	str	x0, [sp, #48]
   1cc64:	ldr	x1, [sp, #40]
   1cc68:	ldr	x0, [sp, #56]
   1cc6c:	cmp	x1, x0
   1cc70:	b.cs	1cc84 <PyInit__decimal@@Base+0x4fac>  // b.hs, b.nlast
   1cc74:	ldr	x1, [sp, #48]
   1cc78:	ldr	x0, [sp, #16]
   1cc7c:	add	x0, x1, x0
   1cc80:	b	1cc88 <PyInit__decimal@@Base+0x4fb0>
   1cc84:	ldr	x0, [sp, #48]
   1cc88:	str	x0, [sp, #48]
   1cc8c:	ldr	x0, [sp, #48]
   1cc90:	ldp	x29, x30, [sp], #64
   1cc94:	ret
   1cc98:	stp	x29, x30, [sp, #-80]!
   1cc9c:	mov	x29, sp
   1cca0:	str	x0, [sp, #40]
   1cca4:	str	x1, [sp, #32]
   1cca8:	str	x2, [sp, #24]
   1ccac:	add	x1, sp, #0x30
   1ccb0:	add	x0, sp, #0x38
   1ccb4:	ldr	x3, [sp, #32]
   1ccb8:	ldr	x2, [sp, #40]
   1ccbc:	bl	1c9c0 <PyInit__decimal@@Base+0x4ce8>
   1ccc0:	ldr	x0, [sp, #24]
   1ccc4:	and	x0, x0, #0x100000000
   1ccc8:	cmp	x0, #0x0
   1cccc:	b.eq	1ce04 <PyInit__decimal@@Base+0x512c>  // b.none
   1ccd0:	ldr	x0, [sp, #56]
   1ccd4:	str	x0, [sp, #72]
   1ccd8:	ldr	x0, [sp, #72]
   1ccdc:	str	x0, [sp, #64]
   1cce0:	ldr	x0, [sp, #56]
   1cce4:	lsr	x0, x0, #32
   1cce8:	str	x0, [sp, #56]
   1ccec:	ldr	x1, [sp, #48]
   1ccf0:	ldr	x0, [sp, #64]
   1ccf4:	sub	x0, x1, x0
   1ccf8:	str	x0, [sp, #64]
   1ccfc:	ldr	x0, [sp, #48]
   1cd00:	ldr	x1, [sp, #64]
   1cd04:	cmp	x1, x0
   1cd08:	b.ls	1cd18 <PyInit__decimal@@Base+0x5040>  // b.plast
   1cd0c:	ldr	x0, [sp, #56]
   1cd10:	sub	x0, x0, #0x1
   1cd14:	str	x0, [sp, #56]
   1cd18:	ldr	x0, [sp, #72]
   1cd1c:	lsl	x0, x0, #32
   1cd20:	str	x0, [sp, #72]
   1cd24:	ldr	x1, [sp, #72]
   1cd28:	ldr	x0, [sp, #64]
   1cd2c:	add	x0, x1, x0
   1cd30:	str	x0, [sp, #48]
   1cd34:	ldr	x0, [sp, #48]
   1cd38:	ldr	x1, [sp, #72]
   1cd3c:	cmp	x1, x0
   1cd40:	b.ls	1cd50 <PyInit__decimal@@Base+0x5078>  // b.plast
   1cd44:	ldr	x0, [sp, #56]
   1cd48:	add	x0, x0, #0x1
   1cd4c:	str	x0, [sp, #56]
   1cd50:	ldr	x0, [sp, #56]
   1cd54:	str	x0, [sp, #72]
   1cd58:	ldr	x0, [sp, #72]
   1cd5c:	str	x0, [sp, #64]
   1cd60:	ldr	x0, [sp, #56]
   1cd64:	lsr	x0, x0, #32
   1cd68:	str	x0, [sp, #56]
   1cd6c:	ldr	x1, [sp, #48]
   1cd70:	ldr	x0, [sp, #64]
   1cd74:	sub	x0, x1, x0
   1cd78:	str	x0, [sp, #64]
   1cd7c:	ldr	x0, [sp, #48]
   1cd80:	ldr	x1, [sp, #64]
   1cd84:	cmp	x1, x0
   1cd88:	b.ls	1cd98 <PyInit__decimal@@Base+0x50c0>  // b.plast
   1cd8c:	ldr	x0, [sp, #56]
   1cd90:	sub	x0, x0, #0x1
   1cd94:	str	x0, [sp, #56]
   1cd98:	ldr	x0, [sp, #72]
   1cd9c:	lsl	x0, x0, #32
   1cda0:	str	x0, [sp, #72]
   1cda4:	ldr	x1, [sp, #72]
   1cda8:	ldr	x0, [sp, #64]
   1cdac:	add	x0, x1, x0
   1cdb0:	str	x0, [sp, #48]
   1cdb4:	ldr	x0, [sp, #48]
   1cdb8:	ldr	x1, [sp, #72]
   1cdbc:	cmp	x1, x0
   1cdc0:	b.ls	1cdd0 <PyInit__decimal@@Base+0x50f8>  // b.plast
   1cdc4:	ldr	x0, [sp, #56]
   1cdc8:	add	x0, x0, #0x1
   1cdcc:	str	x0, [sp, #56]
   1cdd0:	ldr	x0, [sp, #56]
   1cdd4:	cmp	x0, #0x0
   1cdd8:	b.ne	1cdec <PyInit__decimal@@Base+0x5114>  // b.any
   1cddc:	ldr	x0, [sp, #48]
   1cde0:	ldr	x1, [sp, #24]
   1cde4:	cmp	x1, x0
   1cde8:	b.hi	1cdfc <PyInit__decimal@@Base+0x5124>  // b.pmore
   1cdec:	ldr	x1, [sp, #48]
   1cdf0:	ldr	x0, [sp, #24]
   1cdf4:	sub	x0, x1, x0
   1cdf8:	b	1d178 <PyInit__decimal@@Base+0x54a0>
   1cdfc:	ldr	x0, [sp, #48]
   1ce00:	b	1d178 <PyInit__decimal@@Base+0x54a0>
   1ce04:	ldr	x0, [sp, #24]
   1ce08:	and	x0, x0, #0x400000000
   1ce0c:	cmp	x0, #0x0
   1ce10:	b.eq	1cfc8 <PyInit__decimal@@Base+0x52f0>  // b.none
   1ce14:	ldr	x0, [sp, #56]
   1ce18:	str	x0, [sp, #72]
   1ce1c:	ldr	x0, [sp, #72]
   1ce20:	str	x0, [sp, #64]
   1ce24:	ldr	x0, [sp, #56]
   1ce28:	lsr	x0, x0, #30
   1ce2c:	str	x0, [sp, #56]
   1ce30:	ldr	x1, [sp, #48]
   1ce34:	ldr	x0, [sp, #64]
   1ce38:	sub	x0, x1, x0
   1ce3c:	str	x0, [sp, #64]
   1ce40:	ldr	x0, [sp, #48]
   1ce44:	ldr	x1, [sp, #64]
   1ce48:	cmp	x1, x0
   1ce4c:	b.ls	1ce5c <PyInit__decimal@@Base+0x5184>  // b.plast
   1ce50:	ldr	x0, [sp, #56]
   1ce54:	sub	x0, x0, #0x1
   1ce58:	str	x0, [sp, #56]
   1ce5c:	ldr	x0, [sp, #72]
   1ce60:	lsl	x0, x0, #34
   1ce64:	str	x0, [sp, #72]
   1ce68:	ldr	x1, [sp, #72]
   1ce6c:	ldr	x0, [sp, #64]
   1ce70:	add	x0, x1, x0
   1ce74:	str	x0, [sp, #48]
   1ce78:	ldr	x0, [sp, #48]
   1ce7c:	ldr	x1, [sp, #72]
   1ce80:	cmp	x1, x0
   1ce84:	b.ls	1ce94 <PyInit__decimal@@Base+0x51bc>  // b.plast
   1ce88:	ldr	x0, [sp, #56]
   1ce8c:	add	x0, x0, #0x1
   1ce90:	str	x0, [sp, #56]
   1ce94:	ldr	x0, [sp, #56]
   1ce98:	str	x0, [sp, #72]
   1ce9c:	ldr	x0, [sp, #72]
   1cea0:	str	x0, [sp, #64]
   1cea4:	ldr	x0, [sp, #56]
   1cea8:	lsr	x0, x0, #30
   1ceac:	str	x0, [sp, #56]
   1ceb0:	ldr	x1, [sp, #48]
   1ceb4:	ldr	x0, [sp, #64]
   1ceb8:	sub	x0, x1, x0
   1cebc:	str	x0, [sp, #64]
   1cec0:	ldr	x0, [sp, #48]
   1cec4:	ldr	x1, [sp, #64]
   1cec8:	cmp	x1, x0
   1cecc:	b.ls	1cedc <PyInit__decimal@@Base+0x5204>  // b.plast
   1ced0:	ldr	x0, [sp, #56]
   1ced4:	sub	x0, x0, #0x1
   1ced8:	str	x0, [sp, #56]
   1cedc:	ldr	x0, [sp, #72]
   1cee0:	lsl	x0, x0, #34
   1cee4:	str	x0, [sp, #72]
   1cee8:	ldr	x1, [sp, #72]
   1ceec:	ldr	x0, [sp, #64]
   1cef0:	add	x0, x1, x0
   1cef4:	str	x0, [sp, #48]
   1cef8:	ldr	x0, [sp, #48]
   1cefc:	ldr	x1, [sp, #72]
   1cf00:	cmp	x1, x0
   1cf04:	b.ls	1cf14 <PyInit__decimal@@Base+0x523c>  // b.plast
   1cf08:	ldr	x0, [sp, #56]
   1cf0c:	add	x0, x0, #0x1
   1cf10:	str	x0, [sp, #56]
   1cf14:	ldr	x0, [sp, #56]
   1cf18:	str	x0, [sp, #72]
   1cf1c:	ldr	x0, [sp, #72]
   1cf20:	str	x0, [sp, #64]
   1cf24:	ldr	x0, [sp, #56]
   1cf28:	lsr	x0, x0, #30
   1cf2c:	str	x0, [sp, #56]
   1cf30:	ldr	x1, [sp, #48]
   1cf34:	ldr	x0, [sp, #64]
   1cf38:	sub	x0, x1, x0
   1cf3c:	str	x0, [sp, #64]
   1cf40:	ldr	x0, [sp, #48]
   1cf44:	ldr	x1, [sp, #64]
   1cf48:	cmp	x1, x0
   1cf4c:	b.ls	1cf5c <PyInit__decimal@@Base+0x5284>  // b.plast
   1cf50:	ldr	x0, [sp, #56]
   1cf54:	sub	x0, x0, #0x1
   1cf58:	str	x0, [sp, #56]
   1cf5c:	ldr	x0, [sp, #72]
   1cf60:	lsl	x0, x0, #34
   1cf64:	str	x0, [sp, #72]
   1cf68:	ldr	x1, [sp, #72]
   1cf6c:	ldr	x0, [sp, #64]
   1cf70:	add	x0, x1, x0
   1cf74:	str	x0, [sp, #48]
   1cf78:	ldr	x0, [sp, #48]
   1cf7c:	ldr	x1, [sp, #72]
   1cf80:	cmp	x1, x0
   1cf84:	b.ls	1cf94 <PyInit__decimal@@Base+0x52bc>  // b.plast
   1cf88:	ldr	x0, [sp, #56]
   1cf8c:	add	x0, x0, #0x1
   1cf90:	str	x0, [sp, #56]
   1cf94:	ldr	x0, [sp, #56]
   1cf98:	cmp	x0, #0x0
   1cf9c:	b.ne	1cfb0 <PyInit__decimal@@Base+0x52d8>  // b.any
   1cfa0:	ldr	x0, [sp, #48]
   1cfa4:	ldr	x1, [sp, #24]
   1cfa8:	cmp	x1, x0
   1cfac:	b.hi	1cfc0 <PyInit__decimal@@Base+0x52e8>  // b.pmore
   1cfb0:	ldr	x1, [sp, #48]
   1cfb4:	ldr	x0, [sp, #24]
   1cfb8:	sub	x0, x1, x0
   1cfbc:	b	1d178 <PyInit__decimal@@Base+0x54a0>
   1cfc0:	ldr	x0, [sp, #48]
   1cfc4:	b	1d178 <PyInit__decimal@@Base+0x54a0>
   1cfc8:	ldr	x0, [sp, #56]
   1cfcc:	str	x0, [sp, #72]
   1cfd0:	ldr	x0, [sp, #72]
   1cfd4:	str	x0, [sp, #64]
   1cfd8:	ldr	x0, [sp, #56]
   1cfdc:	lsr	x0, x0, #24
   1cfe0:	str	x0, [sp, #56]
   1cfe4:	ldr	x1, [sp, #48]
   1cfe8:	ldr	x0, [sp, #64]
   1cfec:	sub	x0, x1, x0
   1cff0:	str	x0, [sp, #64]
   1cff4:	ldr	x0, [sp, #48]
   1cff8:	ldr	x1, [sp, #64]
   1cffc:	cmp	x1, x0
   1d000:	b.ls	1d010 <PyInit__decimal@@Base+0x5338>  // b.plast
   1d004:	ldr	x0, [sp, #56]
   1d008:	sub	x0, x0, #0x1
   1d00c:	str	x0, [sp, #56]
   1d010:	ldr	x0, [sp, #72]
   1d014:	lsl	x0, x0, #40
   1d018:	str	x0, [sp, #72]
   1d01c:	ldr	x1, [sp, #72]
   1d020:	ldr	x0, [sp, #64]
   1d024:	add	x0, x1, x0
   1d028:	str	x0, [sp, #48]
   1d02c:	ldr	x0, [sp, #48]
   1d030:	ldr	x1, [sp, #72]
   1d034:	cmp	x1, x0
   1d038:	b.ls	1d048 <PyInit__decimal@@Base+0x5370>  // b.plast
   1d03c:	ldr	x0, [sp, #56]
   1d040:	add	x0, x0, #0x1
   1d044:	str	x0, [sp, #56]
   1d048:	ldr	x0, [sp, #56]
   1d04c:	str	x0, [sp, #72]
   1d050:	ldr	x0, [sp, #72]
   1d054:	str	x0, [sp, #64]
   1d058:	ldr	x0, [sp, #56]
   1d05c:	lsr	x0, x0, #24
   1d060:	str	x0, [sp, #56]
   1d064:	ldr	x1, [sp, #48]
   1d068:	ldr	x0, [sp, #64]
   1d06c:	sub	x0, x1, x0
   1d070:	str	x0, [sp, #64]
   1d074:	ldr	x0, [sp, #48]
   1d078:	ldr	x1, [sp, #64]
   1d07c:	cmp	x1, x0
   1d080:	b.ls	1d090 <PyInit__decimal@@Base+0x53b8>  // b.plast
   1d084:	ldr	x0, [sp, #56]
   1d088:	sub	x0, x0, #0x1
   1d08c:	str	x0, [sp, #56]
   1d090:	ldr	x0, [sp, #72]
   1d094:	lsl	x0, x0, #40
   1d098:	str	x0, [sp, #72]
   1d09c:	ldr	x1, [sp, #72]
   1d0a0:	ldr	x0, [sp, #64]
   1d0a4:	add	x0, x1, x0
   1d0a8:	str	x0, [sp, #48]
   1d0ac:	ldr	x0, [sp, #48]
   1d0b0:	ldr	x1, [sp, #72]
   1d0b4:	cmp	x1, x0
   1d0b8:	b.ls	1d0c8 <PyInit__decimal@@Base+0x53f0>  // b.plast
   1d0bc:	ldr	x0, [sp, #56]
   1d0c0:	add	x0, x0, #0x1
   1d0c4:	str	x0, [sp, #56]
   1d0c8:	ldr	x0, [sp, #56]
   1d0cc:	str	x0, [sp, #72]
   1d0d0:	ldr	x0, [sp, #72]
   1d0d4:	str	x0, [sp, #64]
   1d0d8:	ldr	x0, [sp, #56]
   1d0dc:	lsr	x0, x0, #24
   1d0e0:	str	x0, [sp, #56]
   1d0e4:	ldr	x1, [sp, #48]
   1d0e8:	ldr	x0, [sp, #64]
   1d0ec:	sub	x0, x1, x0
   1d0f0:	str	x0, [sp, #64]
   1d0f4:	ldr	x0, [sp, #48]
   1d0f8:	ldr	x1, [sp, #64]
   1d0fc:	cmp	x1, x0
   1d100:	b.ls	1d110 <PyInit__decimal@@Base+0x5438>  // b.plast
   1d104:	ldr	x0, [sp, #56]
   1d108:	sub	x0, x0, #0x1
   1d10c:	str	x0, [sp, #56]
   1d110:	ldr	x0, [sp, #72]
   1d114:	lsl	x0, x0, #40
   1d118:	str	x0, [sp, #72]
   1d11c:	ldr	x1, [sp, #72]
   1d120:	ldr	x0, [sp, #64]
   1d124:	add	x0, x1, x0
   1d128:	str	x0, [sp, #48]
   1d12c:	ldr	x0, [sp, #48]
   1d130:	ldr	x1, [sp, #72]
   1d134:	cmp	x1, x0
   1d138:	b.ls	1d148 <PyInit__decimal@@Base+0x5470>  // b.plast
   1d13c:	ldr	x0, [sp, #56]
   1d140:	add	x0, x0, #0x1
   1d144:	str	x0, [sp, #56]
   1d148:	ldr	x0, [sp, #56]
   1d14c:	cmp	x0, #0x0
   1d150:	b.ne	1d164 <PyInit__decimal@@Base+0x548c>  // b.any
   1d154:	ldr	x0, [sp, #48]
   1d158:	ldr	x1, [sp, #24]
   1d15c:	cmp	x1, x0
   1d160:	b.hi	1d174 <PyInit__decimal@@Base+0x549c>  // b.pmore
   1d164:	ldr	x1, [sp, #48]
   1d168:	ldr	x0, [sp, #24]
   1d16c:	sub	x0, x1, x0
   1d170:	b	1d178 <PyInit__decimal@@Base+0x54a0>
   1d174:	ldr	x0, [sp, #48]
   1d178:	ldp	x29, x30, [sp], #80
   1d17c:	ret
   1d180:	stp	x29, x30, [sp, #-64]!
   1d184:	mov	x29, sp
   1d188:	str	x0, [sp, #24]
   1d18c:	str	x1, [sp, #16]
   1d190:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d194:	add	x0, x0, #0xba0
   1d198:	ldr	x2, [x0]
   1d19c:	add	x1, sp, #0x28
   1d1a0:	add	x0, sp, #0x38
   1d1a4:	ldr	x3, [sp, #16]
   1d1a8:	bl	1c9c0 <PyInit__decimal@@Base+0x4ce8>
   1d1ac:	ldr	x1, [sp, #40]
   1d1b0:	ldr	x0, [sp, #24]
   1d1b4:	str	x1, [x0]
   1d1b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d1bc:	add	x0, x0, #0xba8
   1d1c0:	ldr	x2, [x0]
   1d1c4:	add	x1, sp, #0x28
   1d1c8:	add	x0, sp, #0x30
   1d1cc:	ldr	x3, [sp, #16]
   1d1d0:	bl	1c9c0 <PyInit__decimal@@Base+0x4ce8>
   1d1d4:	ldr	x1, [sp, #56]
   1d1d8:	ldr	x0, [sp, #40]
   1d1dc:	add	x0, x1, x0
   1d1e0:	str	x0, [sp, #40]
   1d1e4:	ldr	x1, [sp, #40]
   1d1e8:	ldr	x0, [sp, #56]
   1d1ec:	cmp	x1, x0
   1d1f0:	b.cs	1d200 <PyInit__decimal@@Base+0x5528>  // b.hs, b.nlast
   1d1f4:	ldr	x0, [sp, #48]
   1d1f8:	add	x0, x0, #0x1
   1d1fc:	str	x0, [sp, #48]
   1d200:	ldr	x0, [sp, #24]
   1d204:	add	x0, x0, #0x8
   1d208:	ldr	x1, [sp, #40]
   1d20c:	str	x1, [x0]
   1d210:	ldr	x0, [sp, #24]
   1d214:	add	x0, x0, #0x10
   1d218:	ldr	x1, [sp, #48]
   1d21c:	str	x1, [x0]
   1d220:	nop
   1d224:	ldp	x29, x30, [sp], #64
   1d228:	ret
   1d22c:	sub	sp, sp, #0x20
   1d230:	str	x0, [sp, #8]
   1d234:	str	x1, [sp]
   1d238:	ldr	x0, [sp, #8]
   1d23c:	ldr	x1, [x0]
   1d240:	ldr	x0, [sp]
   1d244:	ldr	x0, [x0]
   1d248:	add	x0, x1, x0
   1d24c:	str	x0, [sp, #24]
   1d250:	ldr	x0, [sp, #8]
   1d254:	ldr	x0, [x0]
   1d258:	ldr	x1, [sp, #24]
   1d25c:	cmp	x1, x0
   1d260:	cset	w0, cc  // cc = lo, ul, last
   1d264:	and	w0, w0, #0xff
   1d268:	and	x0, x0, #0xff
   1d26c:	str	x0, [sp, #16]
   1d270:	ldr	x0, [sp, #8]
   1d274:	ldr	x1, [sp, #24]
   1d278:	str	x1, [x0]
   1d27c:	ldr	x0, [sp, #8]
   1d280:	add	x0, x0, #0x8
   1d284:	ldr	x1, [x0]
   1d288:	ldr	x0, [sp]
   1d28c:	add	x0, x0, #0x8
   1d290:	ldr	x2, [x0]
   1d294:	ldr	x0, [sp, #16]
   1d298:	add	x0, x2, x0
   1d29c:	add	x0, x1, x0
   1d2a0:	str	x0, [sp, #24]
   1d2a4:	ldr	x0, [sp, #8]
   1d2a8:	add	x0, x0, #0x8
   1d2ac:	ldr	x0, [x0]
   1d2b0:	ldr	x1, [sp, #24]
   1d2b4:	cmp	x1, x0
   1d2b8:	cset	w0, cc  // cc = lo, ul, last
   1d2bc:	and	w0, w0, #0xff
   1d2c0:	and	x0, x0, #0xff
   1d2c4:	str	x0, [sp, #16]
   1d2c8:	ldr	x0, [sp, #8]
   1d2cc:	add	x0, x0, #0x8
   1d2d0:	ldr	x1, [sp, #24]
   1d2d4:	str	x1, [x0]
   1d2d8:	ldr	x0, [sp, #8]
   1d2dc:	add	x0, x0, #0x10
   1d2e0:	ldr	x2, [x0]
   1d2e4:	ldr	x0, [sp]
   1d2e8:	add	x0, x0, #0x10
   1d2ec:	ldr	x1, [x0]
   1d2f0:	ldr	x0, [sp, #16]
   1d2f4:	add	x1, x1, x0
   1d2f8:	ldr	x0, [sp, #8]
   1d2fc:	add	x0, x0, #0x10
   1d300:	add	x1, x2, x1
   1d304:	str	x1, [x0]
   1d308:	nop
   1d30c:	add	sp, sp, #0x20
   1d310:	ret
   1d314:	stp	x29, x30, [sp, #-64]!
   1d318:	mov	x29, sp
   1d31c:	str	x0, [sp, #40]
   1d320:	str	x1, [sp, #32]
   1d324:	str	x2, [sp, #24]
   1d328:	ldr	x0, [sp, #32]
   1d32c:	ldr	x0, [x0, #16]
   1d330:	str	x0, [sp, #56]
   1d334:	ldr	x0, [sp, #56]
   1d338:	ldr	x1, [sp, #24]
   1d33c:	cmp	x1, x0
   1d340:	b.ls	1d354 <PyInit__decimal@@Base+0x567c>  // b.plast
   1d344:	ldr	x0, [sp, #40]
   1d348:	add	x0, x0, #0x10
   1d34c:	str	xzr, [x0]
   1d350:	b	1d380 <PyInit__decimal@@Base+0x56a8>
   1d354:	ldr	x0, [sp, #40]
   1d358:	add	x4, x0, #0x10
   1d35c:	ldr	x0, [sp, #32]
   1d360:	add	x0, x0, #0x10
   1d364:	ldr	x1, [x0]
   1d368:	add	x0, sp, #0x38
   1d36c:	ldr	x3, [sp, #24]
   1d370:	mov	x2, x1
   1d374:	mov	x1, x0
   1d378:	mov	x0, x4
   1d37c:	bl	1cae4 <PyInit__decimal@@Base+0x4e0c>
   1d380:	ldr	x0, [sp, #40]
   1d384:	add	x5, x0, #0x8
   1d388:	ldr	x1, [sp, #56]
   1d38c:	ldr	x0, [sp, #32]
   1d390:	add	x0, x0, #0x8
   1d394:	ldr	x2, [x0]
   1d398:	add	x0, sp, #0x30
   1d39c:	ldr	x4, [sp, #24]
   1d3a0:	mov	x3, x2
   1d3a4:	mov	x2, x1
   1d3a8:	mov	x1, x0
   1d3ac:	mov	x0, x5
   1d3b0:	bl	1ca38 <PyInit__decimal@@Base+0x4d60>
   1d3b4:	ldr	x1, [sp, #48]
   1d3b8:	ldr	x0, [sp, #32]
   1d3bc:	ldr	x2, [x0]
   1d3c0:	add	x0, sp, #0x38
   1d3c4:	ldr	x4, [sp, #24]
   1d3c8:	mov	x3, x2
   1d3cc:	mov	x2, x1
   1d3d0:	mov	x1, x0
   1d3d4:	ldr	x0, [sp, #40]
   1d3d8:	bl	1ca38 <PyInit__decimal@@Base+0x4d60>
   1d3dc:	ldr	x0, [sp, #56]
   1d3e0:	ldp	x29, x30, [sp], #64
   1d3e4:	ret
   1d3e8:	stp	x29, x30, [sp, #-208]!
   1d3ec:	mov	x29, sp
   1d3f0:	str	x19, [sp, #16]
   1d3f4:	str	x0, [sp, #56]
   1d3f8:	str	x1, [sp, #48]
   1d3fc:	str	x2, [sp, #40]
   1d400:	str	x3, [sp, #32]
   1d404:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d408:	add	x0, x0, #0xb60
   1d40c:	ldr	x0, [x0]
   1d410:	str	x0, [sp, #192]
   1d414:	str	xzr, [sp, #80]
   1d418:	str	xzr, [sp, #88]
   1d41c:	str	xzr, [sp, #96]
   1d420:	str	xzr, [sp, #200]
   1d424:	b	1d5c4 <PyInit__decimal@@Base+0x58ec>
   1d428:	ldr	x0, [sp, #200]
   1d42c:	lsl	x0, x0, #3
   1d430:	ldr	x1, [sp, #56]
   1d434:	add	x0, x1, x0
   1d438:	ldr	x0, [x0]
   1d43c:	str	x0, [sp, #184]
   1d440:	ldr	x0, [sp, #200]
   1d444:	lsl	x0, x0, #3
   1d448:	ldr	x1, [sp, #48]
   1d44c:	add	x0, x1, x0
   1d450:	ldr	x0, [x0]
   1d454:	str	x0, [sp, #176]
   1d458:	ldr	x0, [sp, #200]
   1d45c:	lsl	x0, x0, #3
   1d460:	ldr	x1, [sp, #40]
   1d464:	add	x0, x1, x0
   1d468:	ldr	x0, [x0]
   1d46c:	str	x0, [sp, #168]
   1d470:	add	x0, sp, #0x98
   1d474:	mov	x1, x0
   1d478:	mov	w0, #0x1                   	// #1
   1d47c:	bl	1c990 <PyInit__decimal@@Base+0x4cb8>
   1d480:	ldr	x0, [sp, #152]
   1d484:	mov	x2, x0
   1d488:	ldr	x1, [sp, #184]
   1d48c:	ldr	x0, [sp, #176]
   1d490:	bl	1cb38 <PyInit__decimal@@Base+0x4e60>
   1d494:	str	x0, [sp, #160]
   1d498:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d49c:	add	x0, x0, #0xb90
   1d4a0:	ldr	x0, [x0]
   1d4a4:	ldr	x1, [sp, #152]
   1d4a8:	mov	x2, x1
   1d4ac:	mov	x1, x0
   1d4b0:	ldr	x0, [sp, #160]
   1d4b4:	bl	1cc98 <PyInit__decimal@@Base+0x4fc0>
   1d4b8:	str	x0, [sp, #160]
   1d4bc:	add	x1, sp, #0x40
   1d4c0:	add	x0, sp, #0x48
   1d4c4:	ldr	x3, [sp, #192]
   1d4c8:	ldr	x2, [sp, #160]
   1d4cc:	bl	1c9c0 <PyInit__decimal@@Base+0x4ce8>
   1d4d0:	ldr	x1, [sp, #64]
   1d4d4:	ldr	x0, [sp, #184]
   1d4d8:	add	x0, x1, x0
   1d4dc:	str	x0, [sp, #64]
   1d4e0:	ldr	x0, [sp, #64]
   1d4e4:	ldr	x1, [sp, #184]
   1d4e8:	cmp	x1, x0
   1d4ec:	b.ls	1d4fc <PyInit__decimal@@Base+0x5824>  // b.plast
   1d4f0:	ldr	x0, [sp, #72]
   1d4f4:	add	x0, x0, #0x1
   1d4f8:	str	x0, [sp, #72]
   1d4fc:	add	x0, sp, #0x98
   1d500:	mov	x1, x0
   1d504:	mov	w0, #0x2                   	// #2
   1d508:	bl	1c990 <PyInit__decimal@@Base+0x4cb8>
   1d50c:	ldr	x0, [sp, #72]
   1d510:	ldr	x1, [sp, #64]
   1d514:	ldr	x2, [sp, #152]
   1d518:	mov	x3, x2
   1d51c:	mov	x2, x1
   1d520:	mov	x1, x0
   1d524:	ldr	x0, [sp, #168]
   1d528:	bl	1cc28 <PyInit__decimal@@Base+0x4f50>
   1d52c:	str	x0, [sp, #160]
   1d530:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d534:	add	x0, x0, #0xb98
   1d538:	ldr	x0, [x0]
   1d53c:	ldr	x1, [sp, #152]
   1d540:	mov	x2, x1
   1d544:	mov	x1, x0
   1d548:	ldr	x0, [sp, #160]
   1d54c:	bl	1cc98 <PyInit__decimal@@Base+0x4fc0>
   1d550:	str	x0, [sp, #160]
   1d554:	ldr	x0, [sp, #64]
   1d558:	str	x0, [sp, #128]
   1d55c:	ldr	x0, [sp, #72]
   1d560:	str	x0, [sp, #136]
   1d564:	str	xzr, [sp, #144]
   1d568:	add	x0, sp, #0x68
   1d56c:	ldr	x1, [sp, #160]
   1d570:	bl	1d180 <PyInit__decimal@@Base+0x54a8>
   1d574:	add	x1, sp, #0x68
   1d578:	add	x0, sp, #0x80
   1d57c:	bl	1d22c <PyInit__decimal@@Base+0x5554>
   1d580:	add	x1, sp, #0x80
   1d584:	add	x0, sp, #0x50
   1d588:	bl	1d22c <PyInit__decimal@@Base+0x5554>
   1d58c:	ldr	x0, [sp, #200]
   1d590:	lsl	x0, x0, #3
   1d594:	ldr	x1, [sp, #56]
   1d598:	add	x19, x1, x0
   1d59c:	add	x1, sp, #0x50
   1d5a0:	add	x0, sp, #0x50
   1d5a4:	mov	x2, #0x89e80000            	// #2313682944
   1d5a8:	movk	x2, #0x2304, lsl #32
   1d5ac:	movk	x2, #0x8ac7, lsl #48
   1d5b0:	bl	1d314 <PyInit__decimal@@Base+0x563c>
   1d5b4:	str	x0, [x19]
   1d5b8:	ldr	x0, [sp, #200]
   1d5bc:	add	x0, x0, #0x1
   1d5c0:	str	x0, [sp, #200]
   1d5c4:	ldr	x1, [sp, #200]
   1d5c8:	ldr	x0, [sp, #32]
   1d5cc:	cmp	x1, x0
   1d5d0:	b.cc	1d428 <PyInit__decimal@@Base+0x5750>  // b.lo, b.ul, b.last
   1d5d4:	nop
   1d5d8:	nop
   1d5dc:	ldr	x19, [sp, #16]
   1d5e0:	ldp	x29, x30, [sp], #208
   1d5e4:	ret
   1d5e8:	sub	sp, sp, #0x20
   1d5ec:	str	x0, [sp, #8]
   1d5f0:	mov	w0, #0x3f                  	// #63
   1d5f4:	str	w0, [sp, #28]
   1d5f8:	ldr	x0, [sp, #8]
   1d5fc:	and	x0, x0, #0xffffffff
   1d600:	cmp	x0, #0x0
   1d604:	b.eq	1d618 <PyInit__decimal@@Base+0x5940>  // b.none
   1d608:	ldr	w0, [sp, #28]
   1d60c:	sub	w0, w0, #0x20
   1d610:	str	w0, [sp, #28]
   1d614:	b	1d624 <PyInit__decimal@@Base+0x594c>
   1d618:	ldr	x0, [sp, #8]
   1d61c:	lsr	x0, x0, #32
   1d620:	str	x0, [sp, #8]
   1d624:	ldr	x0, [sp, #8]
   1d628:	and	x0, x0, #0xffff
   1d62c:	cmp	x0, #0x0
   1d630:	b.eq	1d644 <PyInit__decimal@@Base+0x596c>  // b.none
   1d634:	ldr	w0, [sp, #28]
   1d638:	sub	w0, w0, #0x10
   1d63c:	str	w0, [sp, #28]
   1d640:	b	1d650 <PyInit__decimal@@Base+0x5978>
   1d644:	ldr	x0, [sp, #8]
   1d648:	lsr	x0, x0, #16
   1d64c:	str	x0, [sp, #8]
   1d650:	ldr	x0, [sp, #8]
   1d654:	and	x0, x0, #0xff
   1d658:	cmp	x0, #0x0
   1d65c:	b.eq	1d670 <PyInit__decimal@@Base+0x5998>  // b.none
   1d660:	ldr	w0, [sp, #28]
   1d664:	sub	w0, w0, #0x8
   1d668:	str	w0, [sp, #28]
   1d66c:	b	1d67c <PyInit__decimal@@Base+0x59a4>
   1d670:	ldr	x0, [sp, #8]
   1d674:	lsr	x0, x0, #8
   1d678:	str	x0, [sp, #8]
   1d67c:	ldr	x0, [sp, #8]
   1d680:	and	x0, x0, #0xf
   1d684:	cmp	x0, #0x0
   1d688:	b.eq	1d69c <PyInit__decimal@@Base+0x59c4>  // b.none
   1d68c:	ldr	w0, [sp, #28]
   1d690:	sub	w0, w0, #0x4
   1d694:	str	w0, [sp, #28]
   1d698:	b	1d6a8 <PyInit__decimal@@Base+0x59d0>
   1d69c:	ldr	x0, [sp, #8]
   1d6a0:	lsr	x0, x0, #4
   1d6a4:	str	x0, [sp, #8]
   1d6a8:	ldr	x0, [sp, #8]
   1d6ac:	and	x0, x0, #0x3
   1d6b0:	cmp	x0, #0x0
   1d6b4:	b.eq	1d6c8 <PyInit__decimal@@Base+0x59f0>  // b.none
   1d6b8:	ldr	w0, [sp, #28]
   1d6bc:	sub	w0, w0, #0x2
   1d6c0:	str	w0, [sp, #28]
   1d6c4:	b	1d6d4 <PyInit__decimal@@Base+0x59fc>
   1d6c8:	ldr	x0, [sp, #8]
   1d6cc:	lsr	x0, x0, #2
   1d6d0:	str	x0, [sp, #8]
   1d6d4:	ldr	x0, [sp, #8]
   1d6d8:	and	x0, x0, #0x1
   1d6dc:	cmp	x0, #0x0
   1d6e0:	b.eq	1d6f0 <PyInit__decimal@@Base+0x5a18>  // b.none
   1d6e4:	ldr	w0, [sp, #28]
   1d6e8:	sub	w0, w0, #0x1
   1d6ec:	str	w0, [sp, #28]
   1d6f0:	ldr	w0, [sp, #28]
   1d6f4:	add	sp, sp, #0x20
   1d6f8:	ret
   1d6fc:	sub	sp, sp, #0x10
   1d700:	str	w0, [sp, #12]
   1d704:	str	x1, [sp]
   1d708:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1d70c:	add	x0, x0, #0xb60
   1d710:	ldrsw	x1, [sp, #12]
   1d714:	ldr	x1, [x0, x1, lsl #3]
   1d718:	ldr	x0, [sp]
   1d71c:	str	x1, [x0]
   1d720:	nop
   1d724:	add	sp, sp, #0x10
   1d728:	ret
   1d72c:	sub	sp, sp, #0x30
   1d730:	str	x0, [sp, #24]
   1d734:	str	x1, [sp, #16]
   1d738:	str	x2, [sp, #8]
   1d73c:	str	x3, [sp]
   1d740:	ldr	x0, [sp, #8]
   1d744:	mov	x6, x0
   1d748:	mov	x7, #0x0                   	// #0
   1d74c:	ldr	x0, [sp]
   1d750:	mov	x4, x0
   1d754:	mov	x5, #0x0                   	// #0
   1d758:	mul	x1, x6, x4
   1d75c:	umulh	x0, x6, x4
   1d760:	madd	x0, x7, x4, x0
   1d764:	madd	x0, x6, x5, x0
   1d768:	mov	x8, x1
   1d76c:	mov	x9, x0
   1d770:	stp	x8, x9, [sp, #32]
   1d774:	ldr	x0, [sp, #40]
   1d778:	mov	x10, x0
   1d77c:	mov	x11, #0x0                   	// #0
   1d780:	mov	x1, x10
   1d784:	ldr	x0, [sp, #24]
   1d788:	str	x1, [x0]
   1d78c:	ldr	x1, [sp, #32]
   1d790:	ldr	x0, [sp, #16]
   1d794:	str	x1, [x0]
   1d798:	nop
   1d79c:	add	sp, sp, #0x30
   1d7a0:	ret
   1d7a4:	sub	sp, sp, #0x30
   1d7a8:	str	x0, [sp, #24]
   1d7ac:	str	x1, [sp, #16]
   1d7b0:	str	x2, [sp, #8]
   1d7b4:	ldr	x1, [sp, #24]
   1d7b8:	ldr	x0, [sp, #16]
   1d7bc:	add	x0, x1, x0
   1d7c0:	str	x0, [sp, #40]
   1d7c4:	ldr	x1, [sp, #40]
   1d7c8:	ldr	x0, [sp, #24]
   1d7cc:	cmp	x1, x0
   1d7d0:	b.cs	1d7e4 <PyInit__decimal@@Base+0x5b0c>  // b.hs, b.nlast
   1d7d4:	ldr	x1, [sp, #40]
   1d7d8:	ldr	x0, [sp, #8]
   1d7dc:	sub	x0, x1, x0
   1d7e0:	b	1d7e8 <PyInit__decimal@@Base+0x5b10>
   1d7e4:	ldr	x0, [sp, #40]
   1d7e8:	str	x0, [sp, #40]
   1d7ec:	ldr	x1, [sp, #40]
   1d7f0:	ldr	x0, [sp, #8]
   1d7f4:	cmp	x1, x0
   1d7f8:	b.cc	1d80c <PyInit__decimal@@Base+0x5b34>  // b.lo, b.ul, b.last
   1d7fc:	ldr	x1, [sp, #40]
   1d800:	ldr	x0, [sp, #8]
   1d804:	sub	x0, x1, x0
   1d808:	b	1d810 <PyInit__decimal@@Base+0x5b38>
   1d80c:	ldr	x0, [sp, #40]
   1d810:	str	x0, [sp, #40]
   1d814:	ldr	x0, [sp, #40]
   1d818:	add	sp, sp, #0x30
   1d81c:	ret
   1d820:	sub	sp, sp, #0x30
   1d824:	str	x0, [sp, #24]
   1d828:	str	x1, [sp, #16]
   1d82c:	str	x2, [sp, #8]
   1d830:	ldr	x1, [sp, #24]
   1d834:	ldr	x0, [sp, #16]
   1d838:	sub	x0, x1, x0
   1d83c:	str	x0, [sp, #40]
   1d840:	ldr	x1, [sp, #24]
   1d844:	ldr	x0, [sp, #16]
   1d848:	cmp	x1, x0
   1d84c:	b.cs	1d860 <PyInit__decimal@@Base+0x5b88>  // b.hs, b.nlast
   1d850:	ldr	x1, [sp, #40]
   1d854:	ldr	x0, [sp, #8]
   1d858:	add	x0, x1, x0
   1d85c:	b	1d864 <PyInit__decimal@@Base+0x5b8c>
   1d860:	ldr	x0, [sp, #40]
   1d864:	str	x0, [sp, #40]
   1d868:	ldr	x0, [sp, #40]
   1d86c:	add	sp, sp, #0x30
   1d870:	ret
   1d874:	stp	x29, x30, [sp, #-80]!
   1d878:	mov	x29, sp
   1d87c:	str	x0, [sp, #40]
   1d880:	str	x1, [sp, #32]
   1d884:	str	x2, [sp, #24]
   1d888:	add	x1, sp, #0x30
   1d88c:	add	x0, sp, #0x38
   1d890:	ldr	x3, [sp, #32]
   1d894:	ldr	x2, [sp, #40]
   1d898:	bl	1d72c <PyInit__decimal@@Base+0x5a54>
   1d89c:	ldr	x0, [sp, #24]
   1d8a0:	and	x0, x0, #0x100000000
   1d8a4:	cmp	x0, #0x0
   1d8a8:	b.eq	1d9e0 <PyInit__decimal@@Base+0x5d08>  // b.none
   1d8ac:	ldr	x0, [sp, #56]
   1d8b0:	str	x0, [sp, #72]
   1d8b4:	ldr	x0, [sp, #72]
   1d8b8:	str	x0, [sp, #64]
   1d8bc:	ldr	x0, [sp, #56]
   1d8c0:	lsr	x0, x0, #32
   1d8c4:	str	x0, [sp, #56]
   1d8c8:	ldr	x1, [sp, #48]
   1d8cc:	ldr	x0, [sp, #64]
   1d8d0:	sub	x0, x1, x0
   1d8d4:	str	x0, [sp, #64]
   1d8d8:	ldr	x0, [sp, #48]
   1d8dc:	ldr	x1, [sp, #64]
   1d8e0:	cmp	x1, x0
   1d8e4:	b.ls	1d8f4 <PyInit__decimal@@Base+0x5c1c>  // b.plast
   1d8e8:	ldr	x0, [sp, #56]
   1d8ec:	sub	x0, x0, #0x1
   1d8f0:	str	x0, [sp, #56]
   1d8f4:	ldr	x0, [sp, #72]
   1d8f8:	lsl	x0, x0, #32
   1d8fc:	str	x0, [sp, #72]
   1d900:	ldr	x1, [sp, #72]
   1d904:	ldr	x0, [sp, #64]
   1d908:	add	x0, x1, x0
   1d90c:	str	x0, [sp, #48]
   1d910:	ldr	x0, [sp, #48]
   1d914:	ldr	x1, [sp, #72]
   1d918:	cmp	x1, x0
   1d91c:	b.ls	1d92c <PyInit__decimal@@Base+0x5c54>  // b.plast
   1d920:	ldr	x0, [sp, #56]
   1d924:	add	x0, x0, #0x1
   1d928:	str	x0, [sp, #56]
   1d92c:	ldr	x0, [sp, #56]
   1d930:	str	x0, [sp, #72]
   1d934:	ldr	x0, [sp, #72]
   1d938:	str	x0, [sp, #64]
   1d93c:	ldr	x0, [sp, #56]
   1d940:	lsr	x0, x0, #32
   1d944:	str	x0, [sp, #56]
   1d948:	ldr	x1, [sp, #48]
   1d94c:	ldr	x0, [sp, #64]
   1d950:	sub	x0, x1, x0
   1d954:	str	x0, [sp, #64]
   1d958:	ldr	x0, [sp, #48]
   1d95c:	ldr	x1, [sp, #64]
   1d960:	cmp	x1, x0
   1d964:	b.ls	1d974 <PyInit__decimal@@Base+0x5c9c>  // b.plast
   1d968:	ldr	x0, [sp, #56]
   1d96c:	sub	x0, x0, #0x1
   1d970:	str	x0, [sp, #56]
   1d974:	ldr	x0, [sp, #72]
   1d978:	lsl	x0, x0, #32
   1d97c:	str	x0, [sp, #72]
   1d980:	ldr	x1, [sp, #72]
   1d984:	ldr	x0, [sp, #64]
   1d988:	add	x0, x1, x0
   1d98c:	str	x0, [sp, #48]
   1d990:	ldr	x0, [sp, #48]
   1d994:	ldr	x1, [sp, #72]
   1d998:	cmp	x1, x0
   1d99c:	b.ls	1d9ac <PyInit__decimal@@Base+0x5cd4>  // b.plast
   1d9a0:	ldr	x0, [sp, #56]
   1d9a4:	add	x0, x0, #0x1
   1d9a8:	str	x0, [sp, #56]
   1d9ac:	ldr	x0, [sp, #56]
   1d9b0:	cmp	x0, #0x0
   1d9b4:	b.ne	1d9c8 <PyInit__decimal@@Base+0x5cf0>  // b.any
   1d9b8:	ldr	x0, [sp, #48]
   1d9bc:	ldr	x1, [sp, #24]
   1d9c0:	cmp	x1, x0
   1d9c4:	b.hi	1d9d8 <PyInit__decimal@@Base+0x5d00>  // b.pmore
   1d9c8:	ldr	x1, [sp, #48]
   1d9cc:	ldr	x0, [sp, #24]
   1d9d0:	sub	x0, x1, x0
   1d9d4:	b	1dd54 <PyInit__decimal@@Base+0x607c>
   1d9d8:	ldr	x0, [sp, #48]
   1d9dc:	b	1dd54 <PyInit__decimal@@Base+0x607c>
   1d9e0:	ldr	x0, [sp, #24]
   1d9e4:	and	x0, x0, #0x400000000
   1d9e8:	cmp	x0, #0x0
   1d9ec:	b.eq	1dba4 <PyInit__decimal@@Base+0x5ecc>  // b.none
   1d9f0:	ldr	x0, [sp, #56]
   1d9f4:	str	x0, [sp, #72]
   1d9f8:	ldr	x0, [sp, #72]
   1d9fc:	str	x0, [sp, #64]
   1da00:	ldr	x0, [sp, #56]
   1da04:	lsr	x0, x0, #30
   1da08:	str	x0, [sp, #56]
   1da0c:	ldr	x1, [sp, #48]
   1da10:	ldr	x0, [sp, #64]
   1da14:	sub	x0, x1, x0
   1da18:	str	x0, [sp, #64]
   1da1c:	ldr	x0, [sp, #48]
   1da20:	ldr	x1, [sp, #64]
   1da24:	cmp	x1, x0
   1da28:	b.ls	1da38 <PyInit__decimal@@Base+0x5d60>  // b.plast
   1da2c:	ldr	x0, [sp, #56]
   1da30:	sub	x0, x0, #0x1
   1da34:	str	x0, [sp, #56]
   1da38:	ldr	x0, [sp, #72]
   1da3c:	lsl	x0, x0, #34
   1da40:	str	x0, [sp, #72]
   1da44:	ldr	x1, [sp, #72]
   1da48:	ldr	x0, [sp, #64]
   1da4c:	add	x0, x1, x0
   1da50:	str	x0, [sp, #48]
   1da54:	ldr	x0, [sp, #48]
   1da58:	ldr	x1, [sp, #72]
   1da5c:	cmp	x1, x0
   1da60:	b.ls	1da70 <PyInit__decimal@@Base+0x5d98>  // b.plast
   1da64:	ldr	x0, [sp, #56]
   1da68:	add	x0, x0, #0x1
   1da6c:	str	x0, [sp, #56]
   1da70:	ldr	x0, [sp, #56]
   1da74:	str	x0, [sp, #72]
   1da78:	ldr	x0, [sp, #72]
   1da7c:	str	x0, [sp, #64]
   1da80:	ldr	x0, [sp, #56]
   1da84:	lsr	x0, x0, #30
   1da88:	str	x0, [sp, #56]
   1da8c:	ldr	x1, [sp, #48]
   1da90:	ldr	x0, [sp, #64]
   1da94:	sub	x0, x1, x0
   1da98:	str	x0, [sp, #64]
   1da9c:	ldr	x0, [sp, #48]
   1daa0:	ldr	x1, [sp, #64]
   1daa4:	cmp	x1, x0
   1daa8:	b.ls	1dab8 <PyInit__decimal@@Base+0x5de0>  // b.plast
   1daac:	ldr	x0, [sp, #56]
   1dab0:	sub	x0, x0, #0x1
   1dab4:	str	x0, [sp, #56]
   1dab8:	ldr	x0, [sp, #72]
   1dabc:	lsl	x0, x0, #34
   1dac0:	str	x0, [sp, #72]
   1dac4:	ldr	x1, [sp, #72]
   1dac8:	ldr	x0, [sp, #64]
   1dacc:	add	x0, x1, x0
   1dad0:	str	x0, [sp, #48]
   1dad4:	ldr	x0, [sp, #48]
   1dad8:	ldr	x1, [sp, #72]
   1dadc:	cmp	x1, x0
   1dae0:	b.ls	1daf0 <PyInit__decimal@@Base+0x5e18>  // b.plast
   1dae4:	ldr	x0, [sp, #56]
   1dae8:	add	x0, x0, #0x1
   1daec:	str	x0, [sp, #56]
   1daf0:	ldr	x0, [sp, #56]
   1daf4:	str	x0, [sp, #72]
   1daf8:	ldr	x0, [sp, #72]
   1dafc:	str	x0, [sp, #64]
   1db00:	ldr	x0, [sp, #56]
   1db04:	lsr	x0, x0, #30
   1db08:	str	x0, [sp, #56]
   1db0c:	ldr	x1, [sp, #48]
   1db10:	ldr	x0, [sp, #64]
   1db14:	sub	x0, x1, x0
   1db18:	str	x0, [sp, #64]
   1db1c:	ldr	x0, [sp, #48]
   1db20:	ldr	x1, [sp, #64]
   1db24:	cmp	x1, x0
   1db28:	b.ls	1db38 <PyInit__decimal@@Base+0x5e60>  // b.plast
   1db2c:	ldr	x0, [sp, #56]
   1db30:	sub	x0, x0, #0x1
   1db34:	str	x0, [sp, #56]
   1db38:	ldr	x0, [sp, #72]
   1db3c:	lsl	x0, x0, #34
   1db40:	str	x0, [sp, #72]
   1db44:	ldr	x1, [sp, #72]
   1db48:	ldr	x0, [sp, #64]
   1db4c:	add	x0, x1, x0
   1db50:	str	x0, [sp, #48]
   1db54:	ldr	x0, [sp, #48]
   1db58:	ldr	x1, [sp, #72]
   1db5c:	cmp	x1, x0
   1db60:	b.ls	1db70 <PyInit__decimal@@Base+0x5e98>  // b.plast
   1db64:	ldr	x0, [sp, #56]
   1db68:	add	x0, x0, #0x1
   1db6c:	str	x0, [sp, #56]
   1db70:	ldr	x0, [sp, #56]
   1db74:	cmp	x0, #0x0
   1db78:	b.ne	1db8c <PyInit__decimal@@Base+0x5eb4>  // b.any
   1db7c:	ldr	x0, [sp, #48]
   1db80:	ldr	x1, [sp, #24]
   1db84:	cmp	x1, x0
   1db88:	b.hi	1db9c <PyInit__decimal@@Base+0x5ec4>  // b.pmore
   1db8c:	ldr	x1, [sp, #48]
   1db90:	ldr	x0, [sp, #24]
   1db94:	sub	x0, x1, x0
   1db98:	b	1dd54 <PyInit__decimal@@Base+0x607c>
   1db9c:	ldr	x0, [sp, #48]
   1dba0:	b	1dd54 <PyInit__decimal@@Base+0x607c>
   1dba4:	ldr	x0, [sp, #56]
   1dba8:	str	x0, [sp, #72]
   1dbac:	ldr	x0, [sp, #72]
   1dbb0:	str	x0, [sp, #64]
   1dbb4:	ldr	x0, [sp, #56]
   1dbb8:	lsr	x0, x0, #24
   1dbbc:	str	x0, [sp, #56]
   1dbc0:	ldr	x1, [sp, #48]
   1dbc4:	ldr	x0, [sp, #64]
   1dbc8:	sub	x0, x1, x0
   1dbcc:	str	x0, [sp, #64]
   1dbd0:	ldr	x0, [sp, #48]
   1dbd4:	ldr	x1, [sp, #64]
   1dbd8:	cmp	x1, x0
   1dbdc:	b.ls	1dbec <PyInit__decimal@@Base+0x5f14>  // b.plast
   1dbe0:	ldr	x0, [sp, #56]
   1dbe4:	sub	x0, x0, #0x1
   1dbe8:	str	x0, [sp, #56]
   1dbec:	ldr	x0, [sp, #72]
   1dbf0:	lsl	x0, x0, #40
   1dbf4:	str	x0, [sp, #72]
   1dbf8:	ldr	x1, [sp, #72]
   1dbfc:	ldr	x0, [sp, #64]
   1dc00:	add	x0, x1, x0
   1dc04:	str	x0, [sp, #48]
   1dc08:	ldr	x0, [sp, #48]
   1dc0c:	ldr	x1, [sp, #72]
   1dc10:	cmp	x1, x0
   1dc14:	b.ls	1dc24 <PyInit__decimal@@Base+0x5f4c>  // b.plast
   1dc18:	ldr	x0, [sp, #56]
   1dc1c:	add	x0, x0, #0x1
   1dc20:	str	x0, [sp, #56]
   1dc24:	ldr	x0, [sp, #56]
   1dc28:	str	x0, [sp, #72]
   1dc2c:	ldr	x0, [sp, #72]
   1dc30:	str	x0, [sp, #64]
   1dc34:	ldr	x0, [sp, #56]
   1dc38:	lsr	x0, x0, #24
   1dc3c:	str	x0, [sp, #56]
   1dc40:	ldr	x1, [sp, #48]
   1dc44:	ldr	x0, [sp, #64]
   1dc48:	sub	x0, x1, x0
   1dc4c:	str	x0, [sp, #64]
   1dc50:	ldr	x0, [sp, #48]
   1dc54:	ldr	x1, [sp, #64]
   1dc58:	cmp	x1, x0
   1dc5c:	b.ls	1dc6c <PyInit__decimal@@Base+0x5f94>  // b.plast
   1dc60:	ldr	x0, [sp, #56]
   1dc64:	sub	x0, x0, #0x1
   1dc68:	str	x0, [sp, #56]
   1dc6c:	ldr	x0, [sp, #72]
   1dc70:	lsl	x0, x0, #40
   1dc74:	str	x0, [sp, #72]
   1dc78:	ldr	x1, [sp, #72]
   1dc7c:	ldr	x0, [sp, #64]
   1dc80:	add	x0, x1, x0
   1dc84:	str	x0, [sp, #48]
   1dc88:	ldr	x0, [sp, #48]
   1dc8c:	ldr	x1, [sp, #72]
   1dc90:	cmp	x1, x0
   1dc94:	b.ls	1dca4 <PyInit__decimal@@Base+0x5fcc>  // b.plast
   1dc98:	ldr	x0, [sp, #56]
   1dc9c:	add	x0, x0, #0x1
   1dca0:	str	x0, [sp, #56]
   1dca4:	ldr	x0, [sp, #56]
   1dca8:	str	x0, [sp, #72]
   1dcac:	ldr	x0, [sp, #72]
   1dcb0:	str	x0, [sp, #64]
   1dcb4:	ldr	x0, [sp, #56]
   1dcb8:	lsr	x0, x0, #24
   1dcbc:	str	x0, [sp, #56]
   1dcc0:	ldr	x1, [sp, #48]
   1dcc4:	ldr	x0, [sp, #64]
   1dcc8:	sub	x0, x1, x0
   1dccc:	str	x0, [sp, #64]
   1dcd0:	ldr	x0, [sp, #48]
   1dcd4:	ldr	x1, [sp, #64]
   1dcd8:	cmp	x1, x0
   1dcdc:	b.ls	1dcec <PyInit__decimal@@Base+0x6014>  // b.plast
   1dce0:	ldr	x0, [sp, #56]
   1dce4:	sub	x0, x0, #0x1
   1dce8:	str	x0, [sp, #56]
   1dcec:	ldr	x0, [sp, #72]
   1dcf0:	lsl	x0, x0, #40
   1dcf4:	str	x0, [sp, #72]
   1dcf8:	ldr	x1, [sp, #72]
   1dcfc:	ldr	x0, [sp, #64]
   1dd00:	add	x0, x1, x0
   1dd04:	str	x0, [sp, #48]
   1dd08:	ldr	x0, [sp, #48]
   1dd0c:	ldr	x1, [sp, #72]
   1dd10:	cmp	x1, x0
   1dd14:	b.ls	1dd24 <PyInit__decimal@@Base+0x604c>  // b.plast
   1dd18:	ldr	x0, [sp, #56]
   1dd1c:	add	x0, x0, #0x1
   1dd20:	str	x0, [sp, #56]
   1dd24:	ldr	x0, [sp, #56]
   1dd28:	cmp	x0, #0x0
   1dd2c:	b.ne	1dd40 <PyInit__decimal@@Base+0x6068>  // b.any
   1dd30:	ldr	x0, [sp, #48]
   1dd34:	ldr	x1, [sp, #24]
   1dd38:	cmp	x1, x0
   1dd3c:	b.hi	1dd50 <PyInit__decimal@@Base+0x6078>  // b.pmore
   1dd40:	ldr	x1, [sp, #48]
   1dd44:	ldr	x0, [sp, #24]
   1dd48:	sub	x0, x1, x0
   1dd4c:	b	1dd54 <PyInit__decimal@@Base+0x607c>
   1dd50:	ldr	x0, [sp, #48]
   1dd54:	ldp	x29, x30, [sp], #80
   1dd58:	ret
   1dd5c:	stp	x29, x30, [sp, #-48]!
   1dd60:	mov	x29, sp
   1dd64:	str	x0, [sp, #40]
   1dd68:	str	x1, [sp, #32]
   1dd6c:	str	x2, [sp, #24]
   1dd70:	str	x3, [sp, #16]
   1dd74:	ldr	x0, [sp, #40]
   1dd78:	ldr	x0, [x0]
   1dd7c:	ldr	x2, [sp, #16]
   1dd80:	ldr	x1, [sp, #24]
   1dd84:	bl	1d874 <PyInit__decimal@@Base+0x5b9c>
   1dd88:	mov	x1, x0
   1dd8c:	ldr	x0, [sp, #40]
   1dd90:	str	x1, [x0]
   1dd94:	ldr	x0, [sp, #32]
   1dd98:	ldr	x0, [x0]
   1dd9c:	ldr	x2, [sp, #16]
   1dda0:	ldr	x1, [sp, #24]
   1dda4:	bl	1d874 <PyInit__decimal@@Base+0x5b9c>
   1dda8:	mov	x1, x0
   1ddac:	ldr	x0, [sp, #32]
   1ddb0:	str	x1, [x0]
   1ddb4:	nop
   1ddb8:	ldp	x29, x30, [sp], #48
   1ddbc:	ret
   1ddc0:	stp	x29, x30, [sp, #-64]!
   1ddc4:	mov	x29, sp
   1ddc8:	str	x0, [sp, #56]
   1ddcc:	str	x1, [sp, #48]
   1ddd0:	str	x2, [sp, #40]
   1ddd4:	str	x3, [sp, #32]
   1ddd8:	str	x4, [sp, #24]
   1dddc:	ldr	x0, [sp, #56]
   1dde0:	ldr	x0, [x0]
   1dde4:	ldr	x2, [sp, #24]
   1dde8:	ldr	x1, [sp, #48]
   1ddec:	bl	1d874 <PyInit__decimal@@Base+0x5b9c>
   1ddf0:	mov	x1, x0
   1ddf4:	ldr	x0, [sp, #56]
   1ddf8:	str	x1, [x0]
   1ddfc:	ldr	x0, [sp, #40]
   1de00:	ldr	x0, [x0]
   1de04:	ldr	x2, [sp, #24]
   1de08:	ldr	x1, [sp, #32]
   1de0c:	bl	1d874 <PyInit__decimal@@Base+0x5b9c>
   1de10:	mov	x1, x0
   1de14:	ldr	x0, [sp, #40]
   1de18:	str	x1, [x0]
   1de1c:	nop
   1de20:	ldp	x29, x30, [sp], #64
   1de24:	ret
   1de28:	stp	x29, x30, [sp, #-64]!
   1de2c:	mov	x29, sp
   1de30:	str	x0, [sp, #24]
   1de34:	str	x1, [sp, #16]
   1de38:	str	xzr, [sp, #56]
   1de3c:	str	xzr, [sp, #48]
   1de40:	ldr	x1, [sp, #48]
   1de44:	ldr	x0, [sp, #56]
   1de48:	cmp	x1, x0
   1de4c:	b.ls	1dea8 <PyInit__decimal@@Base+0x61d0>  // b.plast
   1de50:	ldr	x0, [sp, #56]
   1de54:	lsl	x0, x0, #3
   1de58:	ldr	x1, [sp, #24]
   1de5c:	add	x0, x1, x0
   1de60:	ldr	x0, [x0]
   1de64:	str	x0, [sp, #40]
   1de68:	ldr	x0, [sp, #48]
   1de6c:	lsl	x0, x0, #3
   1de70:	ldr	x1, [sp, #24]
   1de74:	add	x1, x1, x0
   1de78:	ldr	x0, [sp, #56]
   1de7c:	lsl	x0, x0, #3
   1de80:	ldr	x2, [sp, #24]
   1de84:	add	x0, x2, x0
   1de88:	ldr	x1, [x1]
   1de8c:	str	x1, [x0]
   1de90:	ldr	x0, [sp, #48]
   1de94:	lsl	x0, x0, #3
   1de98:	ldr	x1, [sp, #24]
   1de9c:	add	x0, x1, x0
   1dea0:	ldr	x1, [sp, #40]
   1dea4:	str	x1, [x0]
   1dea8:	ldr	x0, [sp, #56]
   1deac:	add	x0, x0, #0x1
   1deb0:	str	x0, [sp, #56]
   1deb4:	ldr	x0, [sp, #56]
   1deb8:	bl	1d5e8 <PyInit__decimal@@Base+0x5910>
   1debc:	add	w0, w0, #0x1
   1dec0:	ldr	x1, [sp, #16]
   1dec4:	lsr	x0, x1, x0
   1dec8:	ldr	x1, [sp, #16]
   1decc:	sub	x0, x1, x0
   1ded0:	ldr	x1, [sp, #48]
   1ded4:	eor	x0, x1, x0
   1ded8:	str	x0, [sp, #48]
   1dedc:	ldr	x1, [sp, #56]
   1dee0:	ldr	x0, [sp, #16]
   1dee4:	cmp	x1, x0
   1dee8:	b.cc	1de40 <PyInit__decimal@@Base+0x6168>  // b.lo, b.ul, b.last
   1deec:	nop
   1def0:	nop
   1def4:	ldp	x29, x30, [sp], #64
   1def8:	ret
   1defc:	stp	x29, x30, [sp, #-176]!
   1df00:	mov	x29, sp
   1df04:	str	x19, [sp, #16]
   1df08:	str	x0, [sp, #56]
   1df0c:	str	x1, [sp, #48]
   1df10:	str	x2, [sp, #40]
   1df14:	ldr	x0, [sp, #40]
   1df18:	add	x0, x0, #0x18
   1df1c:	str	x0, [sp, #136]
   1df20:	ldr	x0, [sp, #40]
   1df24:	ldr	w0, [x0]
   1df28:	add	x1, sp, #0x50
   1df2c:	bl	1d6fc <PyInit__decimal@@Base+0x5a24>
   1df30:	ldr	x0, [sp, #48]
   1df34:	lsr	x0, x0, #1
   1df38:	str	x0, [sp, #128]
   1df3c:	str	xzr, [sp, #152]
   1df40:	b	1e0ec <PyInit__decimal@@Base+0x6414>
   1df44:	ldr	x0, [sp, #152]
   1df48:	lsl	x0, x0, #3
   1df4c:	ldr	x1, [sp, #136]
   1df50:	add	x0, x1, x0
   1df54:	ldr	x0, [x0]
   1df58:	str	x0, [sp, #96]
   1df5c:	ldr	x0, [sp, #152]
   1df60:	add	x0, x0, #0x1
   1df64:	lsl	x0, x0, #3
   1df68:	ldr	x1, [sp, #136]
   1df6c:	add	x0, x1, x0
   1df70:	ldr	x0, [x0]
   1df74:	str	x0, [sp, #88]
   1df78:	ldr	x0, [sp, #152]
   1df7c:	lsl	x0, x0, #3
   1df80:	ldr	x1, [sp, #56]
   1df84:	add	x0, x1, x0
   1df88:	ldr	x0, [x0]
   1df8c:	str	x0, [sp, #112]
   1df90:	ldr	x1, [sp, #152]
   1df94:	ldr	x0, [sp, #128]
   1df98:	add	x0, x1, x0
   1df9c:	lsl	x0, x0, #3
   1dfa0:	ldr	x1, [sp, #56]
   1dfa4:	add	x0, x1, x0
   1dfa8:	ldr	x0, [x0]
   1dfac:	str	x0, [sp, #72]
   1dfb0:	ldr	x0, [sp, #152]
   1dfb4:	add	x0, x0, #0x1
   1dfb8:	lsl	x0, x0, #3
   1dfbc:	ldr	x1, [sp, #56]
   1dfc0:	add	x0, x1, x0
   1dfc4:	ldr	x0, [x0]
   1dfc8:	str	x0, [sp, #104]
   1dfcc:	ldr	x1, [sp, #152]
   1dfd0:	ldr	x0, [sp, #128]
   1dfd4:	add	x0, x1, x0
   1dfd8:	add	x0, x0, #0x1
   1dfdc:	lsl	x0, x0, #3
   1dfe0:	ldr	x1, [sp, #56]
   1dfe4:	add	x0, x1, x0
   1dfe8:	ldr	x0, [x0]
   1dfec:	str	x0, [sp, #64]
   1dff0:	ldr	x3, [sp, #72]
   1dff4:	ldr	x2, [sp, #80]
   1dff8:	ldr	x0, [sp, #152]
   1dffc:	lsl	x0, x0, #3
   1e000:	ldr	x1, [sp, #56]
   1e004:	add	x19, x1, x0
   1e008:	mov	x1, x3
   1e00c:	ldr	x0, [sp, #112]
   1e010:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e014:	str	x0, [x19]
   1e018:	ldr	x0, [sp, #72]
   1e01c:	ldr	x1, [sp, #80]
   1e020:	mov	x2, x1
   1e024:	mov	x1, x0
   1e028:	ldr	x0, [sp, #112]
   1e02c:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e030:	str	x0, [sp, #72]
   1e034:	ldr	x3, [sp, #64]
   1e038:	ldr	x2, [sp, #80]
   1e03c:	ldr	x0, [sp, #152]
   1e040:	add	x0, x0, #0x1
   1e044:	lsl	x0, x0, #3
   1e048:	ldr	x1, [sp, #56]
   1e04c:	add	x19, x1, x0
   1e050:	mov	x1, x3
   1e054:	ldr	x0, [sp, #104]
   1e058:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e05c:	str	x0, [x19]
   1e060:	ldr	x0, [sp, #64]
   1e064:	ldr	x1, [sp, #80]
   1e068:	mov	x2, x1
   1e06c:	mov	x1, x0
   1e070:	ldr	x0, [sp, #104]
   1e074:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e078:	str	x0, [sp, #64]
   1e07c:	ldr	x2, [sp, #80]
   1e080:	add	x1, sp, #0x40
   1e084:	add	x0, sp, #0x48
   1e088:	mov	x4, x2
   1e08c:	ldr	x3, [sp, #88]
   1e090:	mov	x2, x1
   1e094:	ldr	x1, [sp, #96]
   1e098:	bl	1ddc0 <PyInit__decimal@@Base+0x60e8>
   1e09c:	ldr	x1, [sp, #152]
   1e0a0:	ldr	x0, [sp, #128]
   1e0a4:	add	x0, x1, x0
   1e0a8:	lsl	x0, x0, #3
   1e0ac:	ldr	x1, [sp, #56]
   1e0b0:	add	x0, x1, x0
   1e0b4:	ldr	x1, [sp, #72]
   1e0b8:	str	x1, [x0]
   1e0bc:	ldr	x1, [sp, #152]
   1e0c0:	ldr	x0, [sp, #128]
   1e0c4:	add	x0, x1, x0
   1e0c8:	add	x0, x0, #0x1
   1e0cc:	lsl	x0, x0, #3
   1e0d0:	ldr	x1, [sp, #56]
   1e0d4:	add	x0, x1, x0
   1e0d8:	ldr	x1, [sp, #64]
   1e0dc:	str	x1, [x0]
   1e0e0:	ldr	x0, [sp, #152]
   1e0e4:	add	x0, x0, #0x2
   1e0e8:	str	x0, [sp, #152]
   1e0ec:	ldr	x1, [sp, #152]
   1e0f0:	ldr	x0, [sp, #128]
   1e0f4:	cmp	x1, x0
   1e0f8:	b.cc	1df44 <PyInit__decimal@@Base+0x626c>  // b.lo, b.ul, b.last
   1e0fc:	mov	x0, #0x2                   	// #2
   1e100:	str	x0, [sp, #168]
   1e104:	ldr	x0, [sp, #48]
   1e108:	lsr	x0, x0, #1
   1e10c:	str	x0, [sp, #160]
   1e110:	b	1e4e0 <PyInit__decimal@@Base+0x6808>
   1e114:	ldr	x0, [sp, #160]
   1e118:	lsr	x0, x0, #1
   1e11c:	str	x0, [sp, #128]
   1e120:	str	xzr, [sp, #144]
   1e124:	b	1e294 <PyInit__decimal@@Base+0x65bc>
   1e128:	ldr	x0, [sp, #144]
   1e12c:	lsl	x0, x0, #3
   1e130:	ldr	x1, [sp, #56]
   1e134:	add	x0, x1, x0
   1e138:	ldr	x0, [x0]
   1e13c:	str	x0, [sp, #112]
   1e140:	ldr	x1, [sp, #144]
   1e144:	ldr	x0, [sp, #128]
   1e148:	add	x0, x1, x0
   1e14c:	lsl	x0, x0, #3
   1e150:	ldr	x1, [sp, #56]
   1e154:	add	x0, x1, x0
   1e158:	ldr	x0, [x0]
   1e15c:	str	x0, [sp, #72]
   1e160:	ldr	x1, [sp, #160]
   1e164:	ldr	x0, [sp, #144]
   1e168:	add	x0, x1, x0
   1e16c:	lsl	x0, x0, #3
   1e170:	ldr	x1, [sp, #56]
   1e174:	add	x0, x1, x0
   1e178:	ldr	x0, [x0]
   1e17c:	str	x0, [sp, #104]
   1e180:	ldr	x1, [sp, #160]
   1e184:	ldr	x0, [sp, #144]
   1e188:	add	x1, x1, x0
   1e18c:	ldr	x0, [sp, #128]
   1e190:	add	x0, x1, x0
   1e194:	lsl	x0, x0, #3
   1e198:	ldr	x1, [sp, #56]
   1e19c:	add	x0, x1, x0
   1e1a0:	ldr	x0, [x0]
   1e1a4:	str	x0, [sp, #64]
   1e1a8:	ldr	x3, [sp, #72]
   1e1ac:	ldr	x2, [sp, #80]
   1e1b0:	ldr	x0, [sp, #144]
   1e1b4:	lsl	x0, x0, #3
   1e1b8:	ldr	x1, [sp, #56]
   1e1bc:	add	x19, x1, x0
   1e1c0:	mov	x1, x3
   1e1c4:	ldr	x0, [sp, #112]
   1e1c8:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e1cc:	str	x0, [x19]
   1e1d0:	ldr	x0, [sp, #72]
   1e1d4:	ldr	x1, [sp, #80]
   1e1d8:	mov	x2, x1
   1e1dc:	mov	x1, x0
   1e1e0:	ldr	x0, [sp, #112]
   1e1e4:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e1e8:	str	x0, [sp, #72]
   1e1ec:	ldr	x3, [sp, #64]
   1e1f0:	ldr	x2, [sp, #80]
   1e1f4:	ldr	x1, [sp, #160]
   1e1f8:	ldr	x0, [sp, #144]
   1e1fc:	add	x0, x1, x0
   1e200:	lsl	x0, x0, #3
   1e204:	ldr	x1, [sp, #56]
   1e208:	add	x19, x1, x0
   1e20c:	mov	x1, x3
   1e210:	ldr	x0, [sp, #104]
   1e214:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e218:	str	x0, [x19]
   1e21c:	ldr	x0, [sp, #64]
   1e220:	ldr	x1, [sp, #80]
   1e224:	mov	x2, x1
   1e228:	mov	x1, x0
   1e22c:	ldr	x0, [sp, #104]
   1e230:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e234:	str	x0, [sp, #64]
   1e238:	ldr	x1, [sp, #144]
   1e23c:	ldr	x0, [sp, #128]
   1e240:	add	x0, x1, x0
   1e244:	lsl	x0, x0, #3
   1e248:	ldr	x1, [sp, #56]
   1e24c:	add	x0, x1, x0
   1e250:	ldr	x1, [sp, #72]
   1e254:	str	x1, [x0]
   1e258:	ldr	x1, [sp, #160]
   1e25c:	ldr	x0, [sp, #144]
   1e260:	add	x1, x1, x0
   1e264:	ldr	x0, [sp, #128]
   1e268:	add	x0, x1, x0
   1e26c:	lsl	x0, x0, #3
   1e270:	ldr	x1, [sp, #56]
   1e274:	add	x0, x1, x0
   1e278:	ldr	x1, [sp, #64]
   1e27c:	str	x1, [x0]
   1e280:	ldr	x0, [sp, #160]
   1e284:	lsl	x0, x0, #1
   1e288:	ldr	x1, [sp, #144]
   1e28c:	add	x0, x1, x0
   1e290:	str	x0, [sp, #144]
   1e294:	ldr	x1, [sp, #144]
   1e298:	ldr	x0, [sp, #48]
   1e29c:	cmp	x1, x0
   1e2a0:	b.cc	1e128 <PyInit__decimal@@Base+0x6450>  // b.lo, b.ul, b.last
   1e2a4:	mov	x0, #0x1                   	// #1
   1e2a8:	str	x0, [sp, #152]
   1e2ac:	b	1e4b8 <PyInit__decimal@@Base+0x67e0>
   1e2b0:	ldr	x1, [sp, #152]
   1e2b4:	ldr	x0, [sp, #168]
   1e2b8:	mul	x0, x1, x0
   1e2bc:	lsl	x0, x0, #3
   1e2c0:	ldr	x1, [sp, #136]
   1e2c4:	add	x0, x1, x0
   1e2c8:	ldr	x0, [x0]
   1e2cc:	str	x0, [sp, #120]
   1e2d0:	str	xzr, [sp, #144]
   1e2d4:	b	1e49c <PyInit__decimal@@Base+0x67c4>
   1e2d8:	ldr	x1, [sp, #144]
   1e2dc:	ldr	x0, [sp, #152]
   1e2e0:	add	x0, x1, x0
   1e2e4:	lsl	x0, x0, #3
   1e2e8:	ldr	x1, [sp, #56]
   1e2ec:	add	x0, x1, x0
   1e2f0:	ldr	x0, [x0]
   1e2f4:	str	x0, [sp, #112]
   1e2f8:	ldr	x1, [sp, #144]
   1e2fc:	ldr	x0, [sp, #152]
   1e300:	add	x1, x1, x0
   1e304:	ldr	x0, [sp, #128]
   1e308:	add	x0, x1, x0
   1e30c:	lsl	x0, x0, #3
   1e310:	ldr	x1, [sp, #56]
   1e314:	add	x0, x1, x0
   1e318:	ldr	x0, [x0]
   1e31c:	str	x0, [sp, #72]
   1e320:	ldr	x1, [sp, #160]
   1e324:	ldr	x0, [sp, #144]
   1e328:	add	x1, x1, x0
   1e32c:	ldr	x0, [sp, #152]
   1e330:	add	x0, x1, x0
   1e334:	lsl	x0, x0, #3
   1e338:	ldr	x1, [sp, #56]
   1e33c:	add	x0, x1, x0
   1e340:	ldr	x0, [x0]
   1e344:	str	x0, [sp, #104]
   1e348:	ldr	x1, [sp, #160]
   1e34c:	ldr	x0, [sp, #144]
   1e350:	add	x1, x1, x0
   1e354:	ldr	x0, [sp, #152]
   1e358:	add	x1, x1, x0
   1e35c:	ldr	x0, [sp, #128]
   1e360:	add	x0, x1, x0
   1e364:	lsl	x0, x0, #3
   1e368:	ldr	x1, [sp, #56]
   1e36c:	add	x0, x1, x0
   1e370:	ldr	x0, [x0]
   1e374:	str	x0, [sp, #64]
   1e378:	ldr	x3, [sp, #72]
   1e37c:	ldr	x2, [sp, #80]
   1e380:	ldr	x1, [sp, #144]
   1e384:	ldr	x0, [sp, #152]
   1e388:	add	x0, x1, x0
   1e38c:	lsl	x0, x0, #3
   1e390:	ldr	x1, [sp, #56]
   1e394:	add	x19, x1, x0
   1e398:	mov	x1, x3
   1e39c:	ldr	x0, [sp, #112]
   1e3a0:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e3a4:	str	x0, [x19]
   1e3a8:	ldr	x0, [sp, #72]
   1e3ac:	ldr	x1, [sp, #80]
   1e3b0:	mov	x2, x1
   1e3b4:	mov	x1, x0
   1e3b8:	ldr	x0, [sp, #112]
   1e3bc:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e3c0:	str	x0, [sp, #72]
   1e3c4:	ldr	x3, [sp, #64]
   1e3c8:	ldr	x2, [sp, #80]
   1e3cc:	ldr	x1, [sp, #160]
   1e3d0:	ldr	x0, [sp, #144]
   1e3d4:	add	x1, x1, x0
   1e3d8:	ldr	x0, [sp, #152]
   1e3dc:	add	x0, x1, x0
   1e3e0:	lsl	x0, x0, #3
   1e3e4:	ldr	x1, [sp, #56]
   1e3e8:	add	x19, x1, x0
   1e3ec:	mov	x1, x3
   1e3f0:	ldr	x0, [sp, #104]
   1e3f4:	bl	1d7a4 <PyInit__decimal@@Base+0x5acc>
   1e3f8:	str	x0, [x19]
   1e3fc:	ldr	x0, [sp, #64]
   1e400:	ldr	x1, [sp, #80]
   1e404:	mov	x2, x1
   1e408:	mov	x1, x0
   1e40c:	ldr	x0, [sp, #104]
   1e410:	bl	1d820 <PyInit__decimal@@Base+0x5b48>
   1e414:	str	x0, [sp, #64]
   1e418:	ldr	x2, [sp, #80]
   1e41c:	add	x1, sp, #0x40
   1e420:	add	x0, sp, #0x48
   1e424:	mov	x3, x2
   1e428:	ldr	x2, [sp, #120]
   1e42c:	bl	1dd5c <PyInit__decimal@@Base+0x6084>
   1e430:	ldr	x1, [sp, #144]
   1e434:	ldr	x0, [sp, #152]
   1e438:	add	x1, x1, x0
   1e43c:	ldr	x0, [sp, #128]
   1e440:	add	x0, x1, x0
   1e444:	lsl	x0, x0, #3
   1e448:	ldr	x1, [sp, #56]
   1e44c:	add	x0, x1, x0
   1e450:	ldr	x1, [sp, #72]
   1e454:	str	x1, [x0]
   1e458:	ldr	x1, [sp, #160]
   1e45c:	ldr	x0, [sp, #144]
   1e460:	add	x1, x1, x0
   1e464:	ldr	x0, [sp, #152]
   1e468:	add	x1, x1, x0
   1e46c:	ldr	x0, [sp, #128]
   1e470:	add	x0, x1, x0
   1e474:	lsl	x0, x0, #3
   1e478:	ldr	x1, [sp, #56]
   1e47c:	add	x0, x1, x0
   1e480:	ldr	x1, [sp, #64]
   1e484:	str	x1, [x0]
   1e488:	ldr	x0, [sp, #160]
   1e48c:	lsl	x0, x0, #1
   1e490:	ldr	x1, [sp, #144]
   1e494:	add	x0, x1, x0
   1e498:	str	x0, [sp, #144]
   1e49c:	ldr	x1, [sp, #144]
   1e4a0:	ldr	x0, [sp, #48]
   1e4a4:	cmp	x1, x0
   1e4a8:	b.cc	1e2d8 <PyInit__decimal@@Base+0x6600>  // b.lo, b.ul, b.last
   1e4ac:	ldr	x0, [sp, #152]
   1e4b0:	add	x0, x0, #0x1
   1e4b4:	str	x0, [sp, #152]
   1e4b8:	ldr	x1, [sp, #152]
   1e4bc:	ldr	x0, [sp, #128]
   1e4c0:	cmp	x1, x0
   1e4c4:	b.cc	1e2b0 <PyInit__decimal@@Base+0x65d8>  // b.lo, b.ul, b.last
   1e4c8:	ldr	x0, [sp, #160]
   1e4cc:	lsr	x0, x0, #1
   1e4d0:	str	x0, [sp, #160]
   1e4d4:	ldr	x0, [sp, #168]
   1e4d8:	lsl	x0, x0, #1
   1e4dc:	str	x0, [sp, #168]
   1e4e0:	ldr	x0, [sp, #160]
   1e4e4:	cmp	x0, #0x1
   1e4e8:	b.hi	1e114 <PyInit__decimal@@Base+0x643c>  // b.pmore
   1e4ec:	ldr	x1, [sp, #48]
   1e4f0:	ldr	x0, [sp, #56]
   1e4f4:	bl	1de28 <PyInit__decimal@@Base+0x6150>
   1e4f8:	nop
   1e4fc:	ldr	x19, [sp, #16]
   1e500:	ldp	x29, x30, [sp], #176
   1e504:	ret
   1e508:	stp	x29, x30, [sp, #-64]!
   1e50c:	mov	x29, sp
   1e510:	str	x0, [sp, #40]
   1e514:	str	x1, [sp, #32]
   1e518:	str	w2, [sp, #28]
   1e51c:	ldr	w2, [sp, #28]
   1e520:	mov	w1, #0xffffffff            	// #-1
   1e524:	ldr	x0, [sp, #32]
   1e528:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   1e52c:	str	x0, [sp, #56]
   1e530:	ldr	x0, [sp, #56]
   1e534:	cmp	x0, #0x0
   1e538:	b.ne	1e544 <PyInit__decimal@@Base+0x686c>  // b.any
   1e53c:	mov	w0, #0x0                   	// #0
   1e540:	b	1e56c <PyInit__decimal@@Base+0x6894>
   1e544:	ldr	x2, [sp, #56]
   1e548:	ldr	x1, [sp, #32]
   1e54c:	ldr	x0, [sp, #40]
   1e550:	bl	1defc <PyInit__decimal@@Base+0x6224>
   1e554:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1e558:	add	x0, x0, #0x6f8
   1e55c:	ldr	x1, [x0]
   1e560:	ldr	x0, [sp, #56]
   1e564:	blr	x1
   1e568:	mov	w0, #0x1                   	// #1
   1e56c:	ldp	x29, x30, [sp], #64
   1e570:	ret
   1e574:	stp	x29, x30, [sp, #-64]!
   1e578:	mov	x29, sp
   1e57c:	str	x0, [sp, #40]
   1e580:	str	x1, [sp, #32]
   1e584:	str	w2, [sp, #28]
   1e588:	ldr	w2, [sp, #28]
   1e58c:	mov	w1, #0x1                   	// #1
   1e590:	ldr	x0, [sp, #32]
   1e594:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   1e598:	str	x0, [sp, #56]
   1e59c:	ldr	x0, [sp, #56]
   1e5a0:	cmp	x0, #0x0
   1e5a4:	b.ne	1e5b0 <PyInit__decimal@@Base+0x68d8>  // b.any
   1e5a8:	mov	w0, #0x0                   	// #0
   1e5ac:	b	1e5d8 <PyInit__decimal@@Base+0x6900>
   1e5b0:	ldr	x2, [sp, #56]
   1e5b4:	ldr	x1, [sp, #32]
   1e5b8:	ldr	x0, [sp, #40]
   1e5bc:	bl	1defc <PyInit__decimal@@Base+0x6224>
   1e5c0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   1e5c4:	add	x0, x0, #0x6f8
   1e5c8:	ldr	x1, [x0]
   1e5cc:	ldr	x0, [sp, #56]
   1e5d0:	blr	x1
   1e5d4:	mov	w0, #0x1                   	// #1
   1e5d8:	ldp	x29, x30, [sp], #64
   1e5dc:	ret
   1e5e0:	sub	sp, sp, #0x10
   1e5e4:	str	w0, [sp, #12]
   1e5e8:	str	x1, [sp]
   1e5ec:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1e5f0:	add	x0, x0, #0xb60
   1e5f4:	ldrsw	x1, [sp, #12]
   1e5f8:	ldr	x1, [x0, x1, lsl #3]
   1e5fc:	ldr	x0, [sp]
   1e600:	str	x1, [x0]
   1e604:	nop
   1e608:	add	sp, sp, #0x10
   1e60c:	ret
   1e610:	sub	sp, sp, #0x30
   1e614:	str	x0, [sp, #24]
   1e618:	str	x1, [sp, #16]
   1e61c:	str	x2, [sp, #8]
   1e620:	str	x3, [sp]
   1e624:	ldr	x0, [sp, #8]
   1e628:	mov	x6, x0
   1e62c:	mov	x7, #0x0                   	// #0
   1e630:	ldr	x0, [sp]
   1e634:	mov	x4, x0
   1e638:	mov	x5, #0x0                   	// #0
   1e63c:	mul	x1, x6, x4
   1e640:	umulh	x0, x6, x4
   1e644:	madd	x0, x7, x4, x0
   1e648:	madd	x0, x6, x5, x0
   1e64c:	mov	x8, x1
   1e650:	mov	x9, x0
   1e654:	stp	x8, x9, [sp, #32]
   1e658:	ldr	x0, [sp, #40]
   1e65c:	mov	x10, x0
   1e660:	mov	x11, #0x0                   	// #0
   1e664:	mov	x1, x10
   1e668:	ldr	x0, [sp, #24]
   1e66c:	str	x1, [x0]
   1e670:	ldr	x1, [sp, #32]
   1e674:	ldr	x0, [sp, #16]
   1e678:	str	x1, [x0]
   1e67c:	nop
   1e680:	add	sp, sp, #0x30
   1e684:	ret
   1e688:	sub	sp, sp, #0x30
   1e68c:	str	x0, [sp, #24]
   1e690:	str	x1, [sp, #16]
   1e694:	str	x2, [sp, #8]
   1e698:	ldr	x1, [sp, #24]
   1e69c:	ldr	x0, [sp, #16]
   1e6a0:	add	x0, x1, x0
   1e6a4:	str	x0, [sp, #40]
   1e6a8:	ldr	x1, [sp, #40]
   1e6ac:	ldr	x0, [sp, #24]
   1e6b0:	cmp	x1, x0
   1e6b4:	b.cs	1e6c8 <PyInit__decimal@@Base+0x69f0>  // b.hs, b.nlast
   1e6b8:	ldr	x1, [sp, #40]
   1e6bc:	ldr	x0, [sp, #8]
   1e6c0:	sub	x0, x1, x0
   1e6c4:	b	1e6cc <PyInit__decimal@@Base+0x69f4>
   1e6c8:	ldr	x0, [sp, #40]
   1e6cc:	str	x0, [sp, #40]
   1e6d0:	ldr	x1, [sp, #40]
   1e6d4:	ldr	x0, [sp, #8]
   1e6d8:	cmp	x1, x0
   1e6dc:	b.cc	1e6f0 <PyInit__decimal@@Base+0x6a18>  // b.lo, b.ul, b.last
   1e6e0:	ldr	x1, [sp, #40]
   1e6e4:	ldr	x0, [sp, #8]
   1e6e8:	sub	x0, x1, x0
   1e6ec:	b	1e6f4 <PyInit__decimal@@Base+0x6a1c>
   1e6f0:	ldr	x0, [sp, #40]
   1e6f4:	str	x0, [sp, #40]
   1e6f8:	ldr	x0, [sp, #40]
   1e6fc:	add	sp, sp, #0x30
   1e700:	ret
   1e704:	stp	x29, x30, [sp, #-80]!
   1e708:	mov	x29, sp
   1e70c:	str	x0, [sp, #40]
   1e710:	str	x1, [sp, #32]
   1e714:	str	x2, [sp, #24]
   1e718:	add	x1, sp, #0x30
   1e71c:	add	x0, sp, #0x38
   1e720:	ldr	x3, [sp, #32]
   1e724:	ldr	x2, [sp, #40]
   1e728:	bl	1e610 <PyInit__decimal@@Base+0x6938>
   1e72c:	ldr	x0, [sp, #24]
   1e730:	and	x0, x0, #0x100000000
   1e734:	cmp	x0, #0x0
   1e738:	b.eq	1e870 <PyInit__decimal@@Base+0x6b98>  // b.none
   1e73c:	ldr	x0, [sp, #56]
   1e740:	str	x0, [sp, #72]
   1e744:	ldr	x0, [sp, #72]
   1e748:	str	x0, [sp, #64]
   1e74c:	ldr	x0, [sp, #56]
   1e750:	lsr	x0, x0, #32
   1e754:	str	x0, [sp, #56]
   1e758:	ldr	x1, [sp, #48]
   1e75c:	ldr	x0, [sp, #64]
   1e760:	sub	x0, x1, x0
   1e764:	str	x0, [sp, #64]
   1e768:	ldr	x0, [sp, #48]
   1e76c:	ldr	x1, [sp, #64]
   1e770:	cmp	x1, x0
   1e774:	b.ls	1e784 <PyInit__decimal@@Base+0x6aac>  // b.plast
   1e778:	ldr	x0, [sp, #56]
   1e77c:	sub	x0, x0, #0x1
   1e780:	str	x0, [sp, #56]
   1e784:	ldr	x0, [sp, #72]
   1e788:	lsl	x0, x0, #32
   1e78c:	str	x0, [sp, #72]
   1e790:	ldr	x1, [sp, #72]
   1e794:	ldr	x0, [sp, #64]
   1e798:	add	x0, x1, x0
   1e79c:	str	x0, [sp, #48]
   1e7a0:	ldr	x0, [sp, #48]
   1e7a4:	ldr	x1, [sp, #72]
   1e7a8:	cmp	x1, x0
   1e7ac:	b.ls	1e7bc <PyInit__decimal@@Base+0x6ae4>  // b.plast
   1e7b0:	ldr	x0, [sp, #56]
   1e7b4:	add	x0, x0, #0x1
   1e7b8:	str	x0, [sp, #56]
   1e7bc:	ldr	x0, [sp, #56]
   1e7c0:	str	x0, [sp, #72]
   1e7c4:	ldr	x0, [sp, #72]
   1e7c8:	str	x0, [sp, #64]
   1e7cc:	ldr	x0, [sp, #56]
   1e7d0:	lsr	x0, x0, #32
   1e7d4:	str	x0, [sp, #56]
   1e7d8:	ldr	x1, [sp, #48]
   1e7dc:	ldr	x0, [sp, #64]
   1e7e0:	sub	x0, x1, x0
   1e7e4:	str	x0, [sp, #64]
   1e7e8:	ldr	x0, [sp, #48]
   1e7ec:	ldr	x1, [sp, #64]
   1e7f0:	cmp	x1, x0
   1e7f4:	b.ls	1e804 <PyInit__decimal@@Base+0x6b2c>  // b.plast
   1e7f8:	ldr	x0, [sp, #56]
   1e7fc:	sub	x0, x0, #0x1
   1e800:	str	x0, [sp, #56]
   1e804:	ldr	x0, [sp, #72]
   1e808:	lsl	x0, x0, #32
   1e80c:	str	x0, [sp, #72]
   1e810:	ldr	x1, [sp, #72]
   1e814:	ldr	x0, [sp, #64]
   1e818:	add	x0, x1, x0
   1e81c:	str	x0, [sp, #48]
   1e820:	ldr	x0, [sp, #48]
   1e824:	ldr	x1, [sp, #72]
   1e828:	cmp	x1, x0
   1e82c:	b.ls	1e83c <PyInit__decimal@@Base+0x6b64>  // b.plast
   1e830:	ldr	x0, [sp, #56]
   1e834:	add	x0, x0, #0x1
   1e838:	str	x0, [sp, #56]
   1e83c:	ldr	x0, [sp, #56]
   1e840:	cmp	x0, #0x0
   1e844:	b.ne	1e858 <PyInit__decimal@@Base+0x6b80>  // b.any
   1e848:	ldr	x0, [sp, #48]
   1e84c:	ldr	x1, [sp, #24]
   1e850:	cmp	x1, x0
   1e854:	b.hi	1e868 <PyInit__decimal@@Base+0x6b90>  // b.pmore
   1e858:	ldr	x1, [sp, #48]
   1e85c:	ldr	x0, [sp, #24]
   1e860:	sub	x0, x1, x0
   1e864:	b	1ebe4 <PyInit__decimal@@Base+0x6f0c>
   1e868:	ldr	x0, [sp, #48]
   1e86c:	b	1ebe4 <PyInit__decimal@@Base+0x6f0c>
   1e870:	ldr	x0, [sp, #24]
   1e874:	and	x0, x0, #0x400000000
   1e878:	cmp	x0, #0x0
   1e87c:	b.eq	1ea34 <PyInit__decimal@@Base+0x6d5c>  // b.none
   1e880:	ldr	x0, [sp, #56]
   1e884:	str	x0, [sp, #72]
   1e888:	ldr	x0, [sp, #72]
   1e88c:	str	x0, [sp, #64]
   1e890:	ldr	x0, [sp, #56]
   1e894:	lsr	x0, x0, #30
   1e898:	str	x0, [sp, #56]
   1e89c:	ldr	x1, [sp, #48]
   1e8a0:	ldr	x0, [sp, #64]
   1e8a4:	sub	x0, x1, x0
   1e8a8:	str	x0, [sp, #64]
   1e8ac:	ldr	x0, [sp, #48]
   1e8b0:	ldr	x1, [sp, #64]
   1e8b4:	cmp	x1, x0
   1e8b8:	b.ls	1e8c8 <PyInit__decimal@@Base+0x6bf0>  // b.plast
   1e8bc:	ldr	x0, [sp, #56]
   1e8c0:	sub	x0, x0, #0x1
   1e8c4:	str	x0, [sp, #56]
   1e8c8:	ldr	x0, [sp, #72]
   1e8cc:	lsl	x0, x0, #34
   1e8d0:	str	x0, [sp, #72]
   1e8d4:	ldr	x1, [sp, #72]
   1e8d8:	ldr	x0, [sp, #64]
   1e8dc:	add	x0, x1, x0
   1e8e0:	str	x0, [sp, #48]
   1e8e4:	ldr	x0, [sp, #48]
   1e8e8:	ldr	x1, [sp, #72]
   1e8ec:	cmp	x1, x0
   1e8f0:	b.ls	1e900 <PyInit__decimal@@Base+0x6c28>  // b.plast
   1e8f4:	ldr	x0, [sp, #56]
   1e8f8:	add	x0, x0, #0x1
   1e8fc:	str	x0, [sp, #56]
   1e900:	ldr	x0, [sp, #56]
   1e904:	str	x0, [sp, #72]
   1e908:	ldr	x0, [sp, #72]
   1e90c:	str	x0, [sp, #64]
   1e910:	ldr	x0, [sp, #56]
   1e914:	lsr	x0, x0, #30
   1e918:	str	x0, [sp, #56]
   1e91c:	ldr	x1, [sp, #48]
   1e920:	ldr	x0, [sp, #64]
   1e924:	sub	x0, x1, x0
   1e928:	str	x0, [sp, #64]
   1e92c:	ldr	x0, [sp, #48]
   1e930:	ldr	x1, [sp, #64]
   1e934:	cmp	x1, x0
   1e938:	b.ls	1e948 <PyInit__decimal@@Base+0x6c70>  // b.plast
   1e93c:	ldr	x0, [sp, #56]
   1e940:	sub	x0, x0, #0x1
   1e944:	str	x0, [sp, #56]
   1e948:	ldr	x0, [sp, #72]
   1e94c:	lsl	x0, x0, #34
   1e950:	str	x0, [sp, #72]
   1e954:	ldr	x1, [sp, #72]
   1e958:	ldr	x0, [sp, #64]
   1e95c:	add	x0, x1, x0
   1e960:	str	x0, [sp, #48]
   1e964:	ldr	x0, [sp, #48]
   1e968:	ldr	x1, [sp, #72]
   1e96c:	cmp	x1, x0
   1e970:	b.ls	1e980 <PyInit__decimal@@Base+0x6ca8>  // b.plast
   1e974:	ldr	x0, [sp, #56]
   1e978:	add	x0, x0, #0x1
   1e97c:	str	x0, [sp, #56]
   1e980:	ldr	x0, [sp, #56]
   1e984:	str	x0, [sp, #72]
   1e988:	ldr	x0, [sp, #72]
   1e98c:	str	x0, [sp, #64]
   1e990:	ldr	x0, [sp, #56]
   1e994:	lsr	x0, x0, #30
   1e998:	str	x0, [sp, #56]
   1e99c:	ldr	x1, [sp, #48]
   1e9a0:	ldr	x0, [sp, #64]
   1e9a4:	sub	x0, x1, x0
   1e9a8:	str	x0, [sp, #64]
   1e9ac:	ldr	x0, [sp, #48]
   1e9b0:	ldr	x1, [sp, #64]
   1e9b4:	cmp	x1, x0
   1e9b8:	b.ls	1e9c8 <PyInit__decimal@@Base+0x6cf0>  // b.plast
   1e9bc:	ldr	x0, [sp, #56]
   1e9c0:	sub	x0, x0, #0x1
   1e9c4:	str	x0, [sp, #56]
   1e9c8:	ldr	x0, [sp, #72]
   1e9cc:	lsl	x0, x0, #34
   1e9d0:	str	x0, [sp, #72]
   1e9d4:	ldr	x1, [sp, #72]
   1e9d8:	ldr	x0, [sp, #64]
   1e9dc:	add	x0, x1, x0
   1e9e0:	str	x0, [sp, #48]
   1e9e4:	ldr	x0, [sp, #48]
   1e9e8:	ldr	x1, [sp, #72]
   1e9ec:	cmp	x1, x0
   1e9f0:	b.ls	1ea00 <PyInit__decimal@@Base+0x6d28>  // b.plast
   1e9f4:	ldr	x0, [sp, #56]
   1e9f8:	add	x0, x0, #0x1
   1e9fc:	str	x0, [sp, #56]
   1ea00:	ldr	x0, [sp, #56]
   1ea04:	cmp	x0, #0x0
   1ea08:	b.ne	1ea1c <PyInit__decimal@@Base+0x6d44>  // b.any
   1ea0c:	ldr	x0, [sp, #48]
   1ea10:	ldr	x1, [sp, #24]
   1ea14:	cmp	x1, x0
   1ea18:	b.hi	1ea2c <PyInit__decimal@@Base+0x6d54>  // b.pmore
   1ea1c:	ldr	x1, [sp, #48]
   1ea20:	ldr	x0, [sp, #24]
   1ea24:	sub	x0, x1, x0
   1ea28:	b	1ebe4 <PyInit__decimal@@Base+0x6f0c>
   1ea2c:	ldr	x0, [sp, #48]
   1ea30:	b	1ebe4 <PyInit__decimal@@Base+0x6f0c>
   1ea34:	ldr	x0, [sp, #56]
   1ea38:	str	x0, [sp, #72]
   1ea3c:	ldr	x0, [sp, #72]
   1ea40:	str	x0, [sp, #64]
   1ea44:	ldr	x0, [sp, #56]
   1ea48:	lsr	x0, x0, #24
   1ea4c:	str	x0, [sp, #56]
   1ea50:	ldr	x1, [sp, #48]
   1ea54:	ldr	x0, [sp, #64]
   1ea58:	sub	x0, x1, x0
   1ea5c:	str	x0, [sp, #64]
   1ea60:	ldr	x0, [sp, #48]
   1ea64:	ldr	x1, [sp, #64]
   1ea68:	cmp	x1, x0
   1ea6c:	b.ls	1ea7c <PyInit__decimal@@Base+0x6da4>  // b.plast
   1ea70:	ldr	x0, [sp, #56]
   1ea74:	sub	x0, x0, #0x1
   1ea78:	str	x0, [sp, #56]
   1ea7c:	ldr	x0, [sp, #72]
   1ea80:	lsl	x0, x0, #40
   1ea84:	str	x0, [sp, #72]
   1ea88:	ldr	x1, [sp, #72]
   1ea8c:	ldr	x0, [sp, #64]
   1ea90:	add	x0, x1, x0
   1ea94:	str	x0, [sp, #48]
   1ea98:	ldr	x0, [sp, #48]
   1ea9c:	ldr	x1, [sp, #72]
   1eaa0:	cmp	x1, x0
   1eaa4:	b.ls	1eab4 <PyInit__decimal@@Base+0x6ddc>  // b.plast
   1eaa8:	ldr	x0, [sp, #56]
   1eaac:	add	x0, x0, #0x1
   1eab0:	str	x0, [sp, #56]
   1eab4:	ldr	x0, [sp, #56]
   1eab8:	str	x0, [sp, #72]
   1eabc:	ldr	x0, [sp, #72]
   1eac0:	str	x0, [sp, #64]
   1eac4:	ldr	x0, [sp, #56]
   1eac8:	lsr	x0, x0, #24
   1eacc:	str	x0, [sp, #56]
   1ead0:	ldr	x1, [sp, #48]
   1ead4:	ldr	x0, [sp, #64]
   1ead8:	sub	x0, x1, x0
   1eadc:	str	x0, [sp, #64]
   1eae0:	ldr	x0, [sp, #48]
   1eae4:	ldr	x1, [sp, #64]
   1eae8:	cmp	x1, x0
   1eaec:	b.ls	1eafc <PyInit__decimal@@Base+0x6e24>  // b.plast
   1eaf0:	ldr	x0, [sp, #56]
   1eaf4:	sub	x0, x0, #0x1
   1eaf8:	str	x0, [sp, #56]
   1eafc:	ldr	x0, [sp, #72]
   1eb00:	lsl	x0, x0, #40
   1eb04:	str	x0, [sp, #72]
   1eb08:	ldr	x1, [sp, #72]
   1eb0c:	ldr	x0, [sp, #64]
   1eb10:	add	x0, x1, x0
   1eb14:	str	x0, [sp, #48]
   1eb18:	ldr	x0, [sp, #48]
   1eb1c:	ldr	x1, [sp, #72]
   1eb20:	cmp	x1, x0
   1eb24:	b.ls	1eb34 <PyInit__decimal@@Base+0x6e5c>  // b.plast
   1eb28:	ldr	x0, [sp, #56]
   1eb2c:	add	x0, x0, #0x1
   1eb30:	str	x0, [sp, #56]
   1eb34:	ldr	x0, [sp, #56]
   1eb38:	str	x0, [sp, #72]
   1eb3c:	ldr	x0, [sp, #72]
   1eb40:	str	x0, [sp, #64]
   1eb44:	ldr	x0, [sp, #56]
   1eb48:	lsr	x0, x0, #24
   1eb4c:	str	x0, [sp, #56]
   1eb50:	ldr	x1, [sp, #48]
   1eb54:	ldr	x0, [sp, #64]
   1eb58:	sub	x0, x1, x0
   1eb5c:	str	x0, [sp, #64]
   1eb60:	ldr	x0, [sp, #48]
   1eb64:	ldr	x1, [sp, #64]
   1eb68:	cmp	x1, x0
   1eb6c:	b.ls	1eb7c <PyInit__decimal@@Base+0x6ea4>  // b.plast
   1eb70:	ldr	x0, [sp, #56]
   1eb74:	sub	x0, x0, #0x1
   1eb78:	str	x0, [sp, #56]
   1eb7c:	ldr	x0, [sp, #72]
   1eb80:	lsl	x0, x0, #40
   1eb84:	str	x0, [sp, #72]
   1eb88:	ldr	x1, [sp, #72]
   1eb8c:	ldr	x0, [sp, #64]
   1eb90:	add	x0, x1, x0
   1eb94:	str	x0, [sp, #48]
   1eb98:	ldr	x0, [sp, #48]
   1eb9c:	ldr	x1, [sp, #72]
   1eba0:	cmp	x1, x0
   1eba4:	b.ls	1ebb4 <PyInit__decimal@@Base+0x6edc>  // b.plast
   1eba8:	ldr	x0, [sp, #56]
   1ebac:	add	x0, x0, #0x1
   1ebb0:	str	x0, [sp, #56]
   1ebb4:	ldr	x0, [sp, #56]
   1ebb8:	cmp	x0, #0x0
   1ebbc:	b.ne	1ebd0 <PyInit__decimal@@Base+0x6ef8>  // b.any
   1ebc0:	ldr	x0, [sp, #48]
   1ebc4:	ldr	x1, [sp, #24]
   1ebc8:	cmp	x1, x0
   1ebcc:	b.hi	1ebe0 <PyInit__decimal@@Base+0x6f08>  // b.pmore
   1ebd0:	ldr	x1, [sp, #48]
   1ebd4:	ldr	x0, [sp, #24]
   1ebd8:	sub	x0, x1, x0
   1ebdc:	b	1ebe4 <PyInit__decimal@@Base+0x6f0c>
   1ebe0:	ldr	x0, [sp, #48]
   1ebe4:	ldp	x29, x30, [sp], #80
   1ebe8:	ret
   1ebec:	stp	x29, x30, [sp, #-48]!
   1ebf0:	mov	x29, sp
   1ebf4:	str	x0, [sp, #40]
   1ebf8:	str	x1, [sp, #32]
   1ebfc:	str	x2, [sp, #24]
   1ec00:	str	x3, [sp, #16]
   1ec04:	ldr	x0, [sp, #40]
   1ec08:	ldr	x0, [x0]
   1ec0c:	ldr	x2, [sp, #16]
   1ec10:	ldr	x1, [sp, #24]
   1ec14:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ec18:	mov	x1, x0
   1ec1c:	ldr	x0, [sp, #40]
   1ec20:	str	x1, [x0]
   1ec24:	ldr	x0, [sp, #32]
   1ec28:	ldr	x0, [x0]
   1ec2c:	ldr	x2, [sp, #16]
   1ec30:	ldr	x1, [sp, #24]
   1ec34:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ec38:	mov	x1, x0
   1ec3c:	ldr	x0, [sp, #32]
   1ec40:	str	x1, [x0]
   1ec44:	nop
   1ec48:	ldp	x29, x30, [sp], #48
   1ec4c:	ret
   1ec50:	stp	x29, x30, [sp, #-64]!
   1ec54:	mov	x29, sp
   1ec58:	str	x0, [sp, #56]
   1ec5c:	str	x1, [sp, #48]
   1ec60:	str	x2, [sp, #40]
   1ec64:	str	x3, [sp, #32]
   1ec68:	str	x4, [sp, #24]
   1ec6c:	ldr	x0, [sp, #56]
   1ec70:	ldr	x0, [x0]
   1ec74:	ldr	x2, [sp, #24]
   1ec78:	ldr	x1, [sp, #48]
   1ec7c:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ec80:	mov	x1, x0
   1ec84:	ldr	x0, [sp, #56]
   1ec88:	str	x1, [x0]
   1ec8c:	ldr	x0, [sp, #40]
   1ec90:	ldr	x0, [x0]
   1ec94:	ldr	x2, [sp, #24]
   1ec98:	ldr	x1, [sp, #32]
   1ec9c:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1eca0:	mov	x1, x0
   1eca4:	ldr	x0, [sp, #40]
   1eca8:	str	x1, [x0]
   1ecac:	nop
   1ecb0:	ldp	x29, x30, [sp], #64
   1ecb4:	ret
   1ecb8:	stp	x29, x30, [sp, #-64]!
   1ecbc:	mov	x29, sp
   1ecc0:	str	x0, [sp, #40]
   1ecc4:	str	x1, [sp, #32]
   1ecc8:	str	x2, [sp, #24]
   1eccc:	mov	x0, #0x1                   	// #1
   1ecd0:	str	x0, [sp, #56]
   1ecd4:	b	1ed1c <PyInit__decimal@@Base+0x7044>
   1ecd8:	ldr	x0, [sp, #32]
   1ecdc:	and	x0, x0, #0x1
   1ece0:	cmp	x0, #0x0
   1ece4:	b.eq	1ecfc <PyInit__decimal@@Base+0x7024>  // b.none
   1ece8:	ldr	x2, [sp, #24]
   1ecec:	ldr	x1, [sp, #40]
   1ecf0:	ldr	x0, [sp, #56]
   1ecf4:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ecf8:	str	x0, [sp, #56]
   1ecfc:	ldr	x2, [sp, #24]
   1ed00:	ldr	x1, [sp, #40]
   1ed04:	ldr	x0, [sp, #40]
   1ed08:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ed0c:	str	x0, [sp, #40]
   1ed10:	ldr	x0, [sp, #32]
   1ed14:	lsr	x0, x0, #1
   1ed18:	str	x0, [sp, #32]
   1ed1c:	ldr	x0, [sp, #32]
   1ed20:	cmp	x0, #0x0
   1ed24:	b.ne	1ecd8 <PyInit__decimal@@Base+0x7000>  // b.any
   1ed28:	ldr	x0, [sp, #56]
   1ed2c:	ldp	x29, x30, [sp], #64
   1ed30:	ret
   1ed34:	stp	x29, x30, [sp, #-112]!
   1ed38:	mov	x29, sp
   1ed3c:	str	x0, [sp, #56]
   1ed40:	str	x1, [sp, #48]
   1ed44:	str	x2, [sp, #40]
   1ed48:	str	x3, [sp, #32]
   1ed4c:	str	x4, [sp, #24]
   1ed50:	ldr	x0, [sp, #56]
   1ed54:	ldr	x0, [x0]
   1ed58:	str	x0, [sp, #104]
   1ed5c:	ldr	x0, [sp, #48]
   1ed60:	ldr	x0, [x0]
   1ed64:	ldr	x2, [sp, #24]
   1ed68:	mov	x1, x0
   1ed6c:	ldr	x0, [sp, #104]
   1ed70:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1ed74:	str	x0, [sp, #104]
   1ed78:	ldr	x0, [sp, #40]
   1ed7c:	ldr	x0, [x0]
   1ed80:	ldr	x2, [sp, #24]
   1ed84:	mov	x1, x0
   1ed88:	ldr	x0, [sp, #104]
   1ed8c:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1ed90:	str	x0, [sp, #104]
   1ed94:	ldr	x0, [sp, #104]
   1ed98:	str	x0, [sp, #96]
   1ed9c:	ldr	x0, [sp, #56]
   1eda0:	ldr	x0, [x0]
   1eda4:	str	x0, [sp, #104]
   1eda8:	ldr	x0, [sp, #32]
   1edac:	ldr	x0, [x0, #8]
   1edb0:	str	x0, [sp, #88]
   1edb4:	ldr	x0, [sp, #48]
   1edb8:	ldr	x0, [x0]
   1edbc:	ldr	x2, [sp, #24]
   1edc0:	ldr	x1, [sp, #88]
   1edc4:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1edc8:	str	x0, [sp, #80]
   1edcc:	ldr	x2, [sp, #24]
   1edd0:	ldr	x1, [sp, #80]
   1edd4:	ldr	x0, [sp, #104]
   1edd8:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1eddc:	str	x0, [sp, #104]
   1ede0:	ldr	x0, [sp, #32]
   1ede4:	ldr	x0, [x0, #16]
   1ede8:	str	x0, [sp, #88]
   1edec:	ldr	x0, [sp, #40]
   1edf0:	ldr	x0, [x0]
   1edf4:	ldr	x2, [sp, #24]
   1edf8:	ldr	x1, [sp, #88]
   1edfc:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ee00:	str	x0, [sp, #80]
   1ee04:	ldr	x2, [sp, #24]
   1ee08:	ldr	x1, [sp, #80]
   1ee0c:	ldr	x0, [sp, #104]
   1ee10:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1ee14:	str	x0, [sp, #104]
   1ee18:	ldr	x0, [sp, #104]
   1ee1c:	str	x0, [sp, #72]
   1ee20:	ldr	x0, [sp, #56]
   1ee24:	ldr	x0, [x0]
   1ee28:	str	x0, [sp, #104]
   1ee2c:	ldr	x0, [sp, #32]
   1ee30:	ldr	x0, [x0, #16]
   1ee34:	str	x0, [sp, #88]
   1ee38:	ldr	x0, [sp, #48]
   1ee3c:	ldr	x0, [x0]
   1ee40:	ldr	x2, [sp, #24]
   1ee44:	ldr	x1, [sp, #88]
   1ee48:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ee4c:	str	x0, [sp, #80]
   1ee50:	ldr	x2, [sp, #24]
   1ee54:	ldr	x1, [sp, #80]
   1ee58:	ldr	x0, [sp, #104]
   1ee5c:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1ee60:	str	x0, [sp, #104]
   1ee64:	ldr	x0, [sp, #32]
   1ee68:	ldr	x0, [x0, #8]
   1ee6c:	str	x0, [sp, #88]
   1ee70:	ldr	x0, [sp, #40]
   1ee74:	ldr	x0, [x0]
   1ee78:	ldr	x2, [sp, #24]
   1ee7c:	ldr	x1, [sp, #88]
   1ee80:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1ee84:	str	x0, [sp, #80]
   1ee88:	ldr	x2, [sp, #24]
   1ee8c:	ldr	x1, [sp, #80]
   1ee90:	ldr	x0, [sp, #104]
   1ee94:	bl	1e688 <PyInit__decimal@@Base+0x69b0>
   1ee98:	str	x0, [sp, #104]
   1ee9c:	ldr	x0, [sp, #40]
   1eea0:	ldr	x1, [sp, #104]
   1eea4:	str	x1, [x0]
   1eea8:	ldr	x0, [sp, #48]
   1eeac:	ldr	x1, [sp, #72]
   1eeb0:	str	x1, [x0]
   1eeb4:	ldr	x0, [sp, #56]
   1eeb8:	ldr	x1, [sp, #96]
   1eebc:	str	x1, [x0]
   1eec0:	nop
   1eec4:	ldp	x29, x30, [sp], #112
   1eec8:	ret
   1eecc:	stp	x29, x30, [sp, #-192]!
   1eed0:	mov	x29, sp
   1eed4:	str	x0, [sp, #40]
   1eed8:	str	x1, [sp, #32]
   1eedc:	str	w2, [sp, #28]
   1eee0:	mov	x0, #0x3                   	// #3
   1eee4:	str	x0, [sp, #136]
   1eee8:	ldr	x1, [sp, #32]
   1eeec:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1eef0:	movk	x0, #0xaaab
   1eef4:	umulh	x0, x1, x0
   1eef8:	lsr	x0, x0, #1
   1eefc:	str	x0, [sp, #128]
   1ef00:	add	x0, sp, #0x40
   1ef04:	mov	x1, x0
   1ef08:	ldr	w0, [sp, #28]
   1ef0c:	bl	1e5e0 <PyInit__decimal@@Base+0x6908>
   1ef10:	add	x0, sp, #0x58
   1ef14:	ldr	w2, [sp, #28]
   1ef18:	mov	w1, #0xffffffff            	// #-1
   1ef1c:	bl	3f4c8 <PyInit__decimal@@Base+0x277f0>
   1ef20:	ldr	x0, [sp, #40]
   1ef24:	str	x0, [sp, #176]
   1ef28:	ldr	x0, [sp, #128]
   1ef2c:	lsl	x0, x0, #3
   1ef30:	ldr	x1, [sp, #176]
   1ef34:	add	x0, x1, x0
   1ef38:	str	x0, [sp, #168]
   1ef3c:	ldr	x0, [sp, #128]
   1ef40:	lsl	x0, x0, #4
   1ef44:	ldr	x1, [sp, #176]
   1ef48:	add	x0, x1, x0
   1ef4c:	str	x0, [sp, #160]
   1ef50:	b	1ef98 <PyInit__decimal@@Base+0x72c0>
   1ef54:	ldr	x1, [sp, #64]
   1ef58:	add	x0, sp, #0x58
   1ef5c:	mov	x4, x1
   1ef60:	mov	x3, x0
   1ef64:	ldr	x2, [sp, #160]
   1ef68:	ldr	x1, [sp, #168]
   1ef6c:	ldr	x0, [sp, #176]
   1ef70:	bl	1ed34 <PyInit__decimal@@Base+0x705c>
   1ef74:	ldr	x0, [sp, #176]
   1ef78:	add	x0, x0, #0x8
   1ef7c:	str	x0, [sp, #176]
   1ef80:	ldr	x0, [sp, #168]
   1ef84:	add	x0, x0, #0x8
   1ef88:	str	x0, [sp, #168]
   1ef8c:	ldr	x0, [sp, #160]
   1ef90:	add	x0, x0, #0x8
   1ef94:	str	x0, [sp, #160]
   1ef98:	ldr	x0, [sp, #128]
   1ef9c:	lsl	x0, x0, #3
   1efa0:	ldr	x1, [sp, #40]
   1efa4:	add	x0, x1, x0
   1efa8:	ldr	x1, [sp, #176]
   1efac:	cmp	x1, x0
   1efb0:	b.cc	1ef54 <PyInit__decimal@@Base+0x727c>  // b.lo, b.ul, b.last
   1efb4:	ldr	w2, [sp, #28]
   1efb8:	mov	w1, #0xffffffff            	// #-1
   1efbc:	ldr	x0, [sp, #32]
   1efc0:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   1efc4:	str	x0, [sp, #120]
   1efc8:	mov	x0, #0x1                   	// #1
   1efcc:	str	x0, [sp, #152]
   1efd0:	b	1f114 <PyInit__decimal@@Base+0x743c>
   1efd4:	mov	x0, #0x1                   	// #1
   1efd8:	str	x0, [sp, #80]
   1efdc:	ldr	x0, [sp, #64]
   1efe0:	mov	x2, x0
   1efe4:	ldr	x1, [sp, #152]
   1efe8:	ldr	x0, [sp, #120]
   1efec:	bl	1ecb8 <PyInit__decimal@@Base+0x6fe0>
   1eff0:	str	x0, [sp, #72]
   1eff4:	ldr	x0, [sp, #72]
   1eff8:	ldr	x1, [sp, #72]
   1effc:	ldr	x2, [sp, #64]
   1f000:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1f004:	str	x0, [sp, #112]
   1f008:	str	xzr, [sp, #144]
   1f00c:	b	1f0f4 <PyInit__decimal@@Base+0x741c>
   1f010:	ldr	x1, [sp, #152]
   1f014:	ldr	x0, [sp, #128]
   1f018:	mul	x1, x1, x0
   1f01c:	ldr	x0, [sp, #144]
   1f020:	add	x0, x1, x0
   1f024:	lsl	x0, x0, #3
   1f028:	ldr	x1, [sp, #40]
   1f02c:	add	x0, x1, x0
   1f030:	ldr	x0, [x0]
   1f034:	str	x0, [sp, #56]
   1f038:	ldr	x1, [sp, #152]
   1f03c:	ldr	x0, [sp, #128]
   1f040:	mul	x1, x1, x0
   1f044:	ldr	x0, [sp, #144]
   1f048:	add	x0, x1, x0
   1f04c:	add	x0, x0, #0x1
   1f050:	lsl	x0, x0, #3
   1f054:	ldr	x1, [sp, #40]
   1f058:	add	x0, x1, x0
   1f05c:	ldr	x0, [x0]
   1f060:	str	x0, [sp, #48]
   1f064:	ldr	x1, [sp, #80]
   1f068:	ldr	x3, [sp, #72]
   1f06c:	ldr	x4, [sp, #64]
   1f070:	add	x2, sp, #0x30
   1f074:	add	x0, sp, #0x38
   1f078:	bl	1ec50 <PyInit__decimal@@Base+0x6f78>
   1f07c:	ldr	x2, [sp, #64]
   1f080:	add	x1, sp, #0x48
   1f084:	add	x0, sp, #0x50
   1f088:	mov	x3, x2
   1f08c:	ldr	x2, [sp, #112]
   1f090:	bl	1ebec <PyInit__decimal@@Base+0x6f14>
   1f094:	ldr	x1, [sp, #152]
   1f098:	ldr	x0, [sp, #128]
   1f09c:	mul	x1, x1, x0
   1f0a0:	ldr	x0, [sp, #144]
   1f0a4:	add	x0, x1, x0
   1f0a8:	lsl	x0, x0, #3
   1f0ac:	ldr	x1, [sp, #40]
   1f0b0:	add	x0, x1, x0
   1f0b4:	ldr	x1, [sp, #56]
   1f0b8:	str	x1, [x0]
   1f0bc:	ldr	x1, [sp, #152]
   1f0c0:	ldr	x0, [sp, #128]
   1f0c4:	mul	x1, x1, x0
   1f0c8:	ldr	x0, [sp, #144]
   1f0cc:	add	x0, x1, x0
   1f0d0:	add	x0, x0, #0x1
   1f0d4:	lsl	x0, x0, #3
   1f0d8:	ldr	x1, [sp, #40]
   1f0dc:	add	x0, x1, x0
   1f0e0:	ldr	x1, [sp, #48]
   1f0e4:	str	x1, [x0]
   1f0e8:	ldr	x0, [sp, #144]
   1f0ec:	add	x0, x0, #0x2
   1f0f0:	str	x0, [sp, #144]
   1f0f4:	ldr	x0, [sp, #128]
   1f0f8:	sub	x0, x0, #0x1
   1f0fc:	ldr	x1, [sp, #144]
   1f100:	cmp	x1, x0
   1f104:	b.cc	1f010 <PyInit__decimal@@Base+0x7338>  // b.lo, b.ul, b.last
   1f108:	ldr	x0, [sp, #152]
   1f10c:	add	x0, x0, #0x1
   1f110:	str	x0, [sp, #152]
   1f114:	ldr	x1, [sp, #152]
   1f118:	ldr	x0, [sp, #136]
   1f11c:	cmp	x1, x0
   1f120:	b.cc	1efd4 <PyInit__decimal@@Base+0x72fc>  // b.lo, b.ul, b.last
   1f124:	ldr	x0, [sp, #40]
   1f128:	str	x0, [sp, #184]
   1f12c:	b	1f164 <PyInit__decimal@@Base+0x748c>
   1f130:	ldr	w2, [sp, #28]
   1f134:	ldr	x1, [sp, #128]
   1f138:	ldr	x0, [sp, #184]
   1f13c:	bl	3fd58 <PyInit__decimal@@Base+0x28080>
   1f140:	cmp	w0, #0x0
   1f144:	b.ne	1f150 <PyInit__decimal@@Base+0x7478>  // b.any
   1f148:	mov	w0, #0x0                   	// #0
   1f14c:	b	1f184 <PyInit__decimal@@Base+0x74ac>
   1f150:	ldr	x0, [sp, #128]
   1f154:	lsl	x0, x0, #3
   1f158:	ldr	x1, [sp, #184]
   1f15c:	add	x0, x1, x0
   1f160:	str	x0, [sp, #184]
   1f164:	ldr	x0, [sp, #32]
   1f168:	lsl	x0, x0, #3
   1f16c:	ldr	x1, [sp, #40]
   1f170:	add	x0, x1, x0
   1f174:	ldr	x1, [sp, #184]
   1f178:	cmp	x1, x0
   1f17c:	b.cc	1f130 <PyInit__decimal@@Base+0x7458>  // b.lo, b.ul, b.last
   1f180:	mov	w0, #0x1                   	// #1
   1f184:	ldp	x29, x30, [sp], #192
   1f188:	ret
   1f18c:	stp	x29, x30, [sp, #-192]!
   1f190:	mov	x29, sp
   1f194:	str	x0, [sp, #40]
   1f198:	str	x1, [sp, #32]
   1f19c:	str	w2, [sp, #28]
   1f1a0:	mov	x0, #0x3                   	// #3
   1f1a4:	str	x0, [sp, #136]
   1f1a8:	ldr	x1, [sp, #32]
   1f1ac:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1f1b0:	movk	x0, #0xaaab
   1f1b4:	umulh	x0, x1, x0
   1f1b8:	lsr	x0, x0, #1
   1f1bc:	str	x0, [sp, #128]
   1f1c0:	ldr	x0, [sp, #40]
   1f1c4:	str	x0, [sp, #184]
   1f1c8:	b	1f200 <PyInit__decimal@@Base+0x7528>
   1f1cc:	ldr	w2, [sp, #28]
   1f1d0:	ldr	x1, [sp, #128]
   1f1d4:	ldr	x0, [sp, #184]
   1f1d8:	bl	400b0 <PyInit__decimal@@Base+0x283d8>
   1f1dc:	cmp	w0, #0x0
   1f1e0:	b.ne	1f1ec <PyInit__decimal@@Base+0x7514>  // b.any
   1f1e4:	mov	w0, #0x0                   	// #0
   1f1e8:	b	1f440 <PyInit__decimal@@Base+0x7768>
   1f1ec:	ldr	x0, [sp, #128]
   1f1f0:	lsl	x0, x0, #3
   1f1f4:	ldr	x1, [sp, #184]
   1f1f8:	add	x0, x1, x0
   1f1fc:	str	x0, [sp, #184]
   1f200:	ldr	x0, [sp, #32]
   1f204:	lsl	x0, x0, #3
   1f208:	ldr	x1, [sp, #40]
   1f20c:	add	x0, x1, x0
   1f210:	ldr	x1, [sp, #184]
   1f214:	cmp	x1, x0
   1f218:	b.cc	1f1cc <PyInit__decimal@@Base+0x74f4>  // b.lo, b.ul, b.last
   1f21c:	add	x0, sp, #0x40
   1f220:	mov	x1, x0
   1f224:	ldr	w0, [sp, #28]
   1f228:	bl	1e5e0 <PyInit__decimal@@Base+0x6908>
   1f22c:	ldr	w2, [sp, #28]
   1f230:	mov	w1, #0x1                   	// #1
   1f234:	ldr	x0, [sp, #32]
   1f238:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   1f23c:	str	x0, [sp, #120]
   1f240:	mov	x0, #0x1                   	// #1
   1f244:	str	x0, [sp, #152]
   1f248:	b	1f388 <PyInit__decimal@@Base+0x76b0>
   1f24c:	mov	x0, #0x1                   	// #1
   1f250:	str	x0, [sp, #80]
   1f254:	ldr	x0, [sp, #64]
   1f258:	mov	x2, x0
   1f25c:	ldr	x1, [sp, #152]
   1f260:	ldr	x0, [sp, #120]
   1f264:	bl	1ecb8 <PyInit__decimal@@Base+0x6fe0>
   1f268:	str	x0, [sp, #72]
   1f26c:	ldr	x0, [sp, #72]
   1f270:	ldr	x1, [sp, #72]
   1f274:	ldr	x2, [sp, #64]
   1f278:	bl	1e704 <PyInit__decimal@@Base+0x6a2c>
   1f27c:	str	x0, [sp, #112]
   1f280:	str	xzr, [sp, #144]
   1f284:	b	1f36c <PyInit__decimal@@Base+0x7694>
   1f288:	ldr	x1, [sp, #152]
   1f28c:	ldr	x0, [sp, #128]
   1f290:	mul	x1, x1, x0
   1f294:	ldr	x0, [sp, #144]
   1f298:	add	x0, x1, x0
   1f29c:	lsl	x0, x0, #3
   1f2a0:	ldr	x1, [sp, #40]
   1f2a4:	add	x0, x1, x0
   1f2a8:	ldr	x0, [x0]
   1f2ac:	str	x0, [sp, #56]
   1f2b0:	ldr	x1, [sp, #152]
   1f2b4:	ldr	x0, [sp, #128]
   1f2b8:	mul	x1, x1, x0
   1f2bc:	ldr	x0, [sp, #144]
   1f2c0:	add	x0, x1, x0
   1f2c4:	add	x0, x0, #0x1
   1f2c8:	lsl	x0, x0, #3
   1f2cc:	ldr	x1, [sp, #40]
   1f2d0:	add	x0, x1, x0
   1f2d4:	ldr	x0, [x0]
   1f2d8:	str	x0, [sp, #48]
   1f2dc:	ldr	x1, [sp, #80]
   1f2e0:	ldr	x3, [sp, #72]
   1f2e4:	ldr	x4, [sp, #64]
   1f2e8:	add	x2, sp, #0x30
   1f2ec:	add	x0, sp, #0x38
   1f2f0:	bl	1ec50 <PyInit__decimal@@Base+0x6f78>
   1f2f4:	ldr	x2, [sp, #64]
   1f2f8:	add	x1, sp, #0x48
   1f2fc:	add	x0, sp, #0x50
   1f300:	mov	x3, x2
   1f304:	ldr	x2, [sp, #112]
   1f308:	bl	1ebec <PyInit__decimal@@Base+0x6f14>
   1f30c:	ldr	x1, [sp, #152]
   1f310:	ldr	x0, [sp, #128]
   1f314:	mul	x1, x1, x0
   1f318:	ldr	x0, [sp, #144]
   1f31c:	add	x0, x1, x0
   1f320:	lsl	x0, x0, #3
   1f324:	ldr	x1, [sp, #40]
   1f328:	add	x0, x1, x0
   1f32c:	ldr	x1, [sp, #56]
   1f330:	str	x1, [x0]
   1f334:	ldr	x1, [sp, #152]
   1f338:	ldr	x0, [sp, #128]
   1f33c:	mul	x1, x1, x0
   1f340:	ldr	x0, [sp, #144]
   1f344:	add	x0, x1, x0
   1f348:	add	x0, x0, #0x1
   1f34c:	lsl	x0, x0, #3
   1f350:	ldr	x1, [sp, #40]
   1f354:	add	x0, x1, x0
   1f358:	ldr	x1, [sp, #48]
   1f35c:	str	x1, [x0]
   1f360:	ldr	x0, [sp, #144]
   1f364:	add	x0, x0, #0x2
   1f368:	str	x0, [sp, #144]
   1f36c:	ldr	x1, [sp, #144]
   1f370:	ldr	x0, [sp, #128]
   1f374:	cmp	x1, x0
   1f378:	b.cc	1f288 <PyInit__decimal@@Base+0x75b0>  // b.lo, b.ul, b.last
   1f37c:	ldr	x0, [sp, #152]
   1f380:	add	x0, x0, #0x1
   1f384:	str	x0, [sp, #152]
   1f388:	ldr	x1, [sp, #152]
   1f38c:	ldr	x0, [sp, #136]
   1f390:	cmp	x1, x0
   1f394:	b.cc	1f24c <PyInit__decimal@@Base+0x7574>  // b.lo, b.ul, b.last
   1f398:	add	x0, sp, #0x58
   1f39c:	ldr	w2, [sp, #28]
   1f3a0:	mov	w1, #0x1                   	// #1
   1f3a4:	bl	3f4c8 <PyInit__decimal@@Base+0x277f0>
   1f3a8:	ldr	x0, [sp, #40]
   1f3ac:	str	x0, [sp, #176]
   1f3b0:	ldr	x0, [sp, #128]
   1f3b4:	lsl	x0, x0, #3
   1f3b8:	ldr	x1, [sp, #176]
   1f3bc:	add	x0, x1, x0
   1f3c0:	str	x0, [sp, #168]
   1f3c4:	ldr	x0, [sp, #128]
   1f3c8:	lsl	x0, x0, #4
   1f3cc:	ldr	x1, [sp, #176]
   1f3d0:	add	x0, x1, x0
   1f3d4:	str	x0, [sp, #160]
   1f3d8:	b	1f420 <PyInit__decimal@@Base+0x7748>
   1f3dc:	ldr	x1, [sp, #64]
   1f3e0:	add	x0, sp, #0x58
   1f3e4:	mov	x4, x1
   1f3e8:	mov	x3, x0
   1f3ec:	ldr	x2, [sp, #160]
   1f3f0:	ldr	x1, [sp, #168]
   1f3f4:	ldr	x0, [sp, #176]
   1f3f8:	bl	1ed34 <PyInit__decimal@@Base+0x705c>
   1f3fc:	ldr	x0, [sp, #176]
   1f400:	add	x0, x0, #0x8
   1f404:	str	x0, [sp, #176]
   1f408:	ldr	x0, [sp, #168]
   1f40c:	add	x0, x0, #0x8
   1f410:	str	x0, [sp, #168]
   1f414:	ldr	x0, [sp, #160]
   1f418:	add	x0, x0, #0x8
   1f41c:	str	x0, [sp, #160]
   1f420:	ldr	x0, [sp, #128]
   1f424:	lsl	x0, x0, #3
   1f428:	ldr	x1, [sp, #40]
   1f42c:	add	x0, x1, x0
   1f430:	ldr	x1, [sp, #176]
   1f434:	cmp	x1, x0
   1f438:	b.cc	1f3dc <PyInit__decimal@@Base+0x7704>  // b.lo, b.ul, b.last
   1f43c:	mov	w0, #0x1                   	// #1
   1f440:	ldp	x29, x30, [sp], #192
   1f444:	ret
   1f448:	sub	sp, sp, #0x20
   1f44c:	str	x0, [sp, #24]
   1f450:	str	x1, [sp, #16]
   1f454:	str	x2, [sp, #8]
   1f458:	str	x3, [sp]
   1f45c:	ldr	x1, [sp, #8]
   1f460:	ldr	x0, [sp]
   1f464:	sdiv	x1, x1, x0
   1f468:	ldr	x0, [sp, #24]
   1f46c:	str	x1, [x0]
   1f470:	ldr	x0, [sp, #24]
   1f474:	ldr	x1, [x0]
   1f478:	ldr	x0, [sp]
   1f47c:	mul	x0, x1, x0
   1f480:	ldr	x1, [sp, #8]
   1f484:	sub	x1, x1, x0
   1f488:	ldr	x0, [sp, #16]
   1f48c:	str	x1, [x0]
   1f490:	nop
   1f494:	add	sp, sp, #0x20
   1f498:	ret
   1f49c:	sub	sp, sp, #0x20
   1f4a0:	str	x0, [sp, #8]
   1f4a4:	str	x1, [sp]
   1f4a8:	ldr	x0, [sp, #8]
   1f4ac:	ldr	x1, [sp]
   1f4b0:	sdiv	x2, x0, x1
   1f4b4:	ldr	x1, [sp]
   1f4b8:	mul	x1, x2, x1
   1f4bc:	sub	x0, x0, x1
   1f4c0:	str	x0, [sp, #24]
   1f4c4:	ldr	x0, [sp, #24]
   1f4c8:	cmp	x0, #0x0
   1f4cc:	b.ge	1f4e0 <PyInit__decimal@@Base+0x7808>  // b.tcont
   1f4d0:	ldr	x1, [sp, #24]
   1f4d4:	ldr	x0, [sp]
   1f4d8:	add	x0, x1, x0
   1f4dc:	b	1f4e4 <PyInit__decimal@@Base+0x780c>
   1f4e0:	ldr	x0, [sp, #24]
   1f4e4:	add	sp, sp, #0x20
   1f4e8:	ret
   1f4ec:	sub	sp, sp, #0x20
   1f4f0:	str	x0, [sp, #24]
   1f4f4:	str	x1, [sp, #16]
   1f4f8:	str	x2, [sp, #8]
   1f4fc:	str	x3, [sp]
   1f500:	b	1f560 <PyInit__decimal@@Base+0x7888>
   1f504:	ldr	x0, [sp, #24]
   1f508:	ldrb	w1, [x0]
   1f50c:	ldr	x0, [sp, #16]
   1f510:	ldrb	w0, [x0]
   1f514:	cmp	w1, w0
   1f518:	b.eq	1f53c <PyInit__decimal@@Base+0x7864>  // b.none
   1f51c:	ldr	x0, [sp, #24]
   1f520:	ldrb	w1, [x0]
   1f524:	ldr	x0, [sp, #8]
   1f528:	ldrb	w0, [x0]
   1f52c:	cmp	w1, w0
   1f530:	b.eq	1f53c <PyInit__decimal@@Base+0x7864>  // b.none
   1f534:	mov	w0, #0x0                   	// #0
   1f538:	b	1f57c <PyInit__decimal@@Base+0x78a4>
   1f53c:	ldr	x0, [sp, #24]
   1f540:	add	x0, x0, #0x1
   1f544:	str	x0, [sp, #24]
   1f548:	ldr	x0, [sp, #8]
   1f54c:	add	x0, x0, #0x1
   1f550:	str	x0, [sp, #8]
   1f554:	ldr	x0, [sp, #16]
   1f558:	add	x0, x0, #0x1
   1f55c:	str	x0, [sp, #16]
   1f560:	ldr	x0, [sp]
   1f564:	sub	x0, x0, #0x1
   1f568:	str	x0, [sp]
   1f56c:	ldr	x0, [sp]
   1f570:	cmn	x0, #0x1
   1f574:	b.ne	1f504 <PyInit__decimal@@Base+0x782c>  // b.any
   1f578:	mov	w0, #0x1                   	// #1
   1f57c:	add	sp, sp, #0x20
   1f580:	ret
   1f584:	stp	x29, x30, [sp, #-48]!
   1f588:	mov	x29, sp
   1f58c:	str	x0, [sp, #24]
   1f590:	bl	6ad0 <__errno_location@plt>
   1f594:	str	wzr, [x0]
   1f598:	add	x0, sp, #0x20
   1f59c:	mov	w2, #0xa                   	// #10
   1f5a0:	mov	x1, x0
   1f5a4:	ldr	x0, [sp, #24]
   1f5a8:	bl	65f0 <strtoll@plt>
   1f5ac:	str	x0, [sp, #40]
   1f5b0:	bl	6ad0 <__errno_location@plt>
   1f5b4:	ldr	w0, [x0]
   1f5b8:	cmp	w0, #0x0
   1f5bc:	b.ne	1f5f0 <PyInit__decimal@@Base+0x7918>  // b.any
   1f5c0:	ldr	x0, [sp, #24]
   1f5c4:	ldrb	w0, [x0]
   1f5c8:	cmp	w0, #0x0
   1f5cc:	b.eq	1f5e0 <PyInit__decimal@@Base+0x7908>  // b.none
   1f5d0:	ldr	x0, [sp, #32]
   1f5d4:	ldrb	w0, [x0]
   1f5d8:	cmp	w0, #0x0
   1f5dc:	b.eq	1f5f0 <PyInit__decimal@@Base+0x7918>  // b.none
   1f5e0:	bl	6ad0 <__errno_location@plt>
   1f5e4:	mov	x1, x0
   1f5e8:	mov	w0, #0x16                  	// #22
   1f5ec:	str	w0, [x1]
   1f5f0:	ldr	x0, [sp, #40]
   1f5f4:	ldp	x29, x30, [sp], #48
   1f5f8:	ret
   1f5fc:	sub	sp, sp, #0x40
   1f600:	str	x0, [sp, #40]
   1f604:	str	x1, [sp, #32]
   1f608:	str	x2, [sp, #24]
   1f60c:	str	w3, [sp, #20]
   1f610:	str	x4, [sp, #8]
   1f614:	ldr	w0, [sp, #20]
   1f618:	cmp	w0, #0x0
   1f61c:	b.le	1f78c <PyInit__decimal@@Base+0x7ab4>
   1f620:	ldr	x0, [sp, #8]
   1f624:	sub	x0, x0, #0x1
   1f628:	str	x0, [sp, #8]
   1f62c:	ldr	x0, [sp, #8]
   1f630:	lsl	x0, x0, #3
   1f634:	ldr	x1, [sp, #40]
   1f638:	add	x0, x1, x0
   1f63c:	str	xzr, [x0]
   1f640:	str	wzr, [sp, #60]
   1f644:	b	1f6cc <PyInit__decimal@@Base+0x79f4>
   1f648:	ldr	x1, [sp, #32]
   1f64c:	ldr	x0, [sp, #24]
   1f650:	cmp	x1, x0
   1f654:	b.ne	1f664 <PyInit__decimal@@Base+0x798c>  // b.any
   1f658:	ldr	x0, [sp, #32]
   1f65c:	add	x0, x0, #0x1
   1f660:	str	x0, [sp, #32]
   1f664:	ldr	x0, [sp, #8]
   1f668:	lsl	x0, x0, #3
   1f66c:	ldr	x1, [sp, #40]
   1f670:	add	x0, x1, x0
   1f674:	ldr	x1, [x0]
   1f678:	mov	x0, x1
   1f67c:	lsl	x0, x0, #2
   1f680:	add	x0, x0, x1
   1f684:	lsl	x0, x0, #1
   1f688:	mov	x3, x0
   1f68c:	ldr	x0, [sp, #32]
   1f690:	ldrb	w0, [x0]
   1f694:	sub	w0, w0, #0x30
   1f698:	sxtw	x1, w0
   1f69c:	ldr	x0, [sp, #8]
   1f6a0:	lsl	x0, x0, #3
   1f6a4:	ldr	x2, [sp, #40]
   1f6a8:	add	x0, x2, x0
   1f6ac:	add	x1, x3, x1
   1f6b0:	str	x1, [x0]
   1f6b4:	ldr	w0, [sp, #60]
   1f6b8:	add	w0, w0, #0x1
   1f6bc:	str	w0, [sp, #60]
   1f6c0:	ldr	x0, [sp, #32]
   1f6c4:	add	x0, x0, #0x1
   1f6c8:	str	x0, [sp, #32]
   1f6cc:	ldr	w1, [sp, #60]
   1f6d0:	ldr	w0, [sp, #20]
   1f6d4:	cmp	w1, w0
   1f6d8:	b.lt	1f648 <PyInit__decimal@@Base+0x7970>  // b.tstop
   1f6dc:	b	1f78c <PyInit__decimal@@Base+0x7ab4>
   1f6e0:	ldr	x0, [sp, #8]
   1f6e4:	lsl	x0, x0, #3
   1f6e8:	ldr	x1, [sp, #40]
   1f6ec:	add	x0, x1, x0
   1f6f0:	str	xzr, [x0]
   1f6f4:	str	wzr, [sp, #60]
   1f6f8:	b	1f780 <PyInit__decimal@@Base+0x7aa8>
   1f6fc:	ldr	x1, [sp, #32]
   1f700:	ldr	x0, [sp, #24]
   1f704:	cmp	x1, x0
   1f708:	b.ne	1f718 <PyInit__decimal@@Base+0x7a40>  // b.any
   1f70c:	ldr	x0, [sp, #32]
   1f710:	add	x0, x0, #0x1
   1f714:	str	x0, [sp, #32]
   1f718:	ldr	x0, [sp, #8]
   1f71c:	lsl	x0, x0, #3
   1f720:	ldr	x1, [sp, #40]
   1f724:	add	x0, x1, x0
   1f728:	ldr	x1, [x0]
   1f72c:	mov	x0, x1
   1f730:	lsl	x0, x0, #2
   1f734:	add	x0, x0, x1
   1f738:	lsl	x0, x0, #1
   1f73c:	mov	x3, x0
   1f740:	ldr	x0, [sp, #32]
   1f744:	ldrb	w0, [x0]
   1f748:	sub	w0, w0, #0x30
   1f74c:	sxtw	x1, w0
   1f750:	ldr	x0, [sp, #8]
   1f754:	lsl	x0, x0, #3
   1f758:	ldr	x2, [sp, #40]
   1f75c:	add	x0, x2, x0
   1f760:	add	x1, x3, x1
   1f764:	str	x1, [x0]
   1f768:	ldr	w0, [sp, #60]
   1f76c:	add	w0, w0, #0x1
   1f770:	str	w0, [sp, #60]
   1f774:	ldr	x0, [sp, #32]
   1f778:	add	x0, x0, #0x1
   1f77c:	str	x0, [sp, #32]
   1f780:	ldr	w0, [sp, #60]
   1f784:	cmp	w0, #0x12
   1f788:	b.le	1f6fc <PyInit__decimal@@Base+0x7a24>
   1f78c:	ldr	x0, [sp, #8]
   1f790:	sub	x0, x0, #0x1
   1f794:	str	x0, [sp, #8]
   1f798:	ldr	x0, [sp, #8]
   1f79c:	cmn	x0, #0x1
   1f7a0:	b.ne	1f6e0 <PyInit__decimal@@Base+0x7a08>  // b.any
   1f7a4:	nop
   1f7a8:	nop
   1f7ac:	add	sp, sp, #0x40
   1f7b0:	ret
   1f7b4:	stp	x29, x30, [sp, #-64]!
   1f7b8:	mov	x29, sp
   1f7bc:	str	x0, [sp, #40]
   1f7c0:	str	x1, [sp, #32]
   1f7c4:	str	x2, [sp, #24]
   1f7c8:	str	x3, [sp, #16]
   1f7cc:	str	xzr, [sp, #56]
   1f7d0:	ldr	x0, [sp, #32]
   1f7d4:	str	xzr, [x0]
   1f7d8:	ldr	x0, [sp, #24]
   1f7dc:	str	xzr, [x0]
   1f7e0:	b	1f9a8 <PyInit__decimal@@Base+0x7cd0>
   1f7e4:	ldr	x0, [sp, #40]
   1f7e8:	ldrb	w0, [x0]
   1f7ec:	cmp	w0, #0x65
   1f7f0:	b.eq	1f848 <PyInit__decimal@@Base+0x7b70>  // b.none
   1f7f4:	cmp	w0, #0x65
   1f7f8:	b.gt	1f8a4 <PyInit__decimal@@Base+0x7bcc>
   1f7fc:	cmp	w0, #0x2e
   1f800:	b.eq	1f810 <PyInit__decimal@@Base+0x7b38>  // b.none
   1f804:	cmp	w0, #0x45
   1f808:	b.eq	1f848 <PyInit__decimal@@Base+0x7b70>  // b.none
   1f80c:	b	1f8a4 <PyInit__decimal@@Base+0x7bcc>
   1f810:	ldr	x0, [sp, #32]
   1f814:	ldr	x0, [x0]
   1f818:	cmp	x0, #0x0
   1f81c:	b.ne	1f830 <PyInit__decimal@@Base+0x7b58>  // b.any
   1f820:	ldr	x0, [sp, #24]
   1f824:	ldr	x0, [x0]
   1f828:	cmp	x0, #0x0
   1f82c:	b.eq	1f838 <PyInit__decimal@@Base+0x7b60>  // b.none
   1f830:	mov	x0, #0x0                   	// #0
   1f834:	b	1f9c8 <PyInit__decimal@@Base+0x7cf0>
   1f838:	ldr	x0, [sp, #32]
   1f83c:	ldr	x1, [sp, #40]
   1f840:	str	x1, [x0]
   1f844:	b	1f99c <PyInit__decimal@@Base+0x7cc4>
   1f848:	ldr	x0, [sp, #24]
   1f84c:	ldr	x0, [x0]
   1f850:	cmp	x0, #0x0
   1f854:	b.eq	1f860 <PyInit__decimal@@Base+0x7b88>  // b.none
   1f858:	mov	x0, #0x0                   	// #0
   1f85c:	b	1f9c8 <PyInit__decimal@@Base+0x7cf0>
   1f860:	ldr	x0, [sp, #24]
   1f864:	ldr	x1, [sp, #40]
   1f868:	str	x1, [x0]
   1f86c:	ldr	x0, [sp, #40]
   1f870:	add	x0, x0, #0x1
   1f874:	ldrb	w0, [x0]
   1f878:	cmp	w0, #0x2b
   1f87c:	b.eq	1f894 <PyInit__decimal@@Base+0x7bbc>  // b.none
   1f880:	ldr	x0, [sp, #40]
   1f884:	add	x0, x0, #0x1
   1f888:	ldrb	w0, [x0]
   1f88c:	cmp	w0, #0x2d
   1f890:	b.ne	1f990 <PyInit__decimal@@Base+0x7cb8>  // b.any
   1f894:	ldr	x0, [sp, #40]
   1f898:	add	x0, x0, #0x1
   1f89c:	str	x0, [sp, #40]
   1f8a0:	b	1f990 <PyInit__decimal@@Base+0x7cb8>
   1f8a4:	bl	6920 <__ctype_b_loc@plt>
   1f8a8:	ldr	x1, [x0]
   1f8ac:	ldr	x0, [sp, #40]
   1f8b0:	ldrb	w0, [x0]
   1f8b4:	and	x0, x0, #0xff
   1f8b8:	lsl	x0, x0, #1
   1f8bc:	add	x0, x1, x0
   1f8c0:	ldrh	w0, [x0]
   1f8c4:	and	w0, w0, #0x800
   1f8c8:	cmp	w0, #0x0
   1f8cc:	b.ne	1f8d8 <PyInit__decimal@@Base+0x7c00>  // b.any
   1f8d0:	mov	x0, #0x0                   	// #0
   1f8d4:	b	1f9c8 <PyInit__decimal@@Base+0x7cf0>
   1f8d8:	ldr	x0, [sp, #56]
   1f8dc:	cmp	x0, #0x0
   1f8e0:	b.ne	1f998 <PyInit__decimal@@Base+0x7cc0>  // b.any
   1f8e4:	ldr	x0, [sp, #24]
   1f8e8:	ldr	x0, [x0]
   1f8ec:	cmp	x0, #0x0
   1f8f0:	b.ne	1f998 <PyInit__decimal@@Base+0x7cc0>  // b.any
   1f8f4:	ldr	x0, [sp, #40]
   1f8f8:	ldrb	w0, [x0]
   1f8fc:	cmp	w0, #0x30
   1f900:	b.ne	1f984 <PyInit__decimal@@Base+0x7cac>  // b.any
   1f904:	bl	6920 <__ctype_b_loc@plt>
   1f908:	ldr	x1, [x0]
   1f90c:	ldr	x0, [sp, #40]
   1f910:	add	x0, x0, #0x1
   1f914:	ldrb	w0, [x0]
   1f918:	and	x0, x0, #0xff
   1f91c:	lsl	x0, x0, #1
   1f920:	add	x0, x1, x0
   1f924:	ldrh	w0, [x0]
   1f928:	and	w0, w0, #0x800
   1f92c:	cmp	w0, #0x0
   1f930:	b.ne	1f998 <PyInit__decimal@@Base+0x7cc0>  // b.any
   1f934:	ldr	x0, [sp, #40]
   1f938:	add	x0, x0, #0x1
   1f93c:	ldrb	w0, [x0]
   1f940:	cmp	w0, #0x2e
   1f944:	b.ne	1f978 <PyInit__decimal@@Base+0x7ca0>  // b.any
   1f948:	bl	6920 <__ctype_b_loc@plt>
   1f94c:	ldr	x1, [x0]
   1f950:	ldr	x0, [sp, #40]
   1f954:	add	x0, x0, #0x2
   1f958:	ldrb	w0, [x0]
   1f95c:	and	x0, x0, #0xff
   1f960:	lsl	x0, x0, #1
   1f964:	add	x0, x1, x0
   1f968:	ldrh	w0, [x0]
   1f96c:	and	w0, w0, #0x800
   1f970:	cmp	w0, #0x0
   1f974:	b.ne	1f998 <PyInit__decimal@@Base+0x7cc0>  // b.any
   1f978:	ldr	x0, [sp, #40]
   1f97c:	str	x0, [sp, #56]
   1f980:	b	1f998 <PyInit__decimal@@Base+0x7cc0>
   1f984:	ldr	x0, [sp, #40]
   1f988:	str	x0, [sp, #56]
   1f98c:	b	1f998 <PyInit__decimal@@Base+0x7cc0>
   1f990:	nop
   1f994:	b	1f99c <PyInit__decimal@@Base+0x7cc4>
   1f998:	nop
   1f99c:	ldr	x0, [sp, #40]
   1f9a0:	add	x0, x0, #0x1
   1f9a4:	str	x0, [sp, #40]
   1f9a8:	ldr	x0, [sp, #40]
   1f9ac:	ldrb	w0, [x0]
   1f9b0:	cmp	w0, #0x0
   1f9b4:	b.ne	1f7e4 <PyInit__decimal@@Base+0x7b0c>  // b.any
   1f9b8:	ldr	x0, [sp, #16]
   1f9bc:	ldr	x1, [sp, #40]
   1f9c0:	str	x1, [x0]
   1f9c4:	ldr	x0, [sp, #56]
   1f9c8:	ldp	x29, x30, [sp], #64
   1f9cc:	ret
   1f9d0:	stp	x29, x30, [sp, #-48]!
   1f9d4:	mov	x29, sp
   1f9d8:	str	x0, [sp, #24]
   1f9dc:	str	x1, [sp, #16]
   1f9e0:	b	1f9f0 <PyInit__decimal@@Base+0x7d18>
   1f9e4:	ldr	x0, [sp, #24]
   1f9e8:	add	x0, x0, #0x1
   1f9ec:	str	x0, [sp, #24]
   1f9f0:	ldr	x0, [sp, #24]
   1f9f4:	ldrb	w0, [x0]
   1f9f8:	cmp	w0, #0x30
   1f9fc:	b.eq	1f9e4 <PyInit__decimal@@Base+0x7d0c>  // b.none
   1fa00:	ldr	x0, [sp, #24]
   1fa04:	str	x0, [sp, #40]
   1fa08:	b	1fa18 <PyInit__decimal@@Base+0x7d40>
   1fa0c:	ldr	x0, [sp, #24]
   1fa10:	add	x0, x0, #0x1
   1fa14:	str	x0, [sp, #24]
   1fa18:	bl	6920 <__ctype_b_loc@plt>
   1fa1c:	ldr	x1, [x0]
   1fa20:	ldr	x0, [sp, #24]
   1fa24:	ldrb	w0, [x0]
   1fa28:	and	x0, x0, #0xff
   1fa2c:	lsl	x0, x0, #1
   1fa30:	add	x0, x1, x0
   1fa34:	ldrh	w0, [x0]
   1fa38:	and	w0, w0, #0x800
   1fa3c:	cmp	w0, #0x0
   1fa40:	b.ne	1fa0c <PyInit__decimal@@Base+0x7d34>  // b.any
   1fa44:	ldr	x0, [sp, #16]
   1fa48:	ldr	x1, [sp, #24]
   1fa4c:	str	x1, [x0]
   1fa50:	ldr	x0, [sp, #24]
   1fa54:	ldrb	w0, [x0]
   1fa58:	cmp	w0, #0x0
   1fa5c:	b.ne	1fa68 <PyInit__decimal@@Base+0x7d90>  // b.any
   1fa60:	ldr	x0, [sp, #40]
   1fa64:	b	1fa6c <PyInit__decimal@@Base+0x7d94>
   1fa68:	mov	x0, #0x0                   	// #0
   1fa6c:	ldp	x29, x30, [sp], #48
   1fa70:	ret
   1fa74:	stp	x29, x30, [sp, #-128]!
   1fa78:	mov	x29, sp
   1fa7c:	str	x0, [sp, #40]
   1fa80:	str	x1, [sp, #32]
   1fa84:	str	x2, [sp, #24]
   1fa88:	str	x3, [sp, #16]
   1fa8c:	str	xzr, [sp, #56]
   1fa90:	str	xzr, [sp, #48]
   1fa94:	strb	wzr, [sp, #111]
   1fa98:	mov	w1, #0x0                   	// #0
   1fa9c:	ldr	x0, [sp, #40]
   1faa0:	bl	2637c <PyInit__decimal@@Base+0xe6a4>
   1faa4:	ldr	x0, [sp, #40]
   1faa8:	str	xzr, [x0, #24]
   1faac:	ldr	x0, [sp, #40]
   1fab0:	str	xzr, [x0, #8]
   1fab4:	ldr	x0, [sp, #32]
   1fab8:	ldrb	w0, [x0]
   1fabc:	cmp	w0, #0x2b
   1fac0:	b.ne	1fad4 <PyInit__decimal@@Base+0x7dfc>  // b.any
   1fac4:	ldr	x0, [sp, #32]
   1fac8:	add	x0, x0, #0x1
   1facc:	str	x0, [sp, #32]
   1fad0:	b	1fb00 <PyInit__decimal@@Base+0x7e28>
   1fad4:	ldr	x0, [sp, #32]
   1fad8:	ldrb	w0, [x0]
   1fadc:	cmp	w0, #0x2d
   1fae0:	b.ne	1fb00 <PyInit__decimal@@Base+0x7e28>  // b.any
   1fae4:	ldr	x0, [sp, #40]
   1fae8:	bl	261a8 <PyInit__decimal@@Base+0xe4d0>
   1faec:	mov	w0, #0x1                   	// #1
   1faf0:	strb	w0, [sp, #111]
   1faf4:	ldr	x0, [sp, #32]
   1faf8:	add	x0, x0, #0x1
   1fafc:	str	x0, [sp, #32]
   1fb00:	mov	x3, #0x3                   	// #3
   1fb04:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1fb08:	add	x2, x0, #0xfd8
   1fb0c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1fb10:	add	x1, x0, #0xfe0
   1fb14:	ldr	x0, [sp, #32]
   1fb18:	bl	1f4ec <PyInit__decimal@@Base+0x7814>
   1fb1c:	cmp	w0, #0x0
   1fb20:	b.eq	1fbbc <PyInit__decimal@@Base+0x7ee4>  // b.none
   1fb24:	ldr	x0, [sp, #32]
   1fb28:	add	x0, x0, #0x3
   1fb2c:	str	x0, [sp, #32]
   1fb30:	mov	w2, #0x4                   	// #4
   1fb34:	ldrb	w1, [sp, #111]
   1fb38:	ldr	x0, [sp, #40]
   1fb3c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   1fb40:	ldr	x0, [sp, #32]
   1fb44:	ldrb	w0, [x0]
   1fb48:	cmp	w0, #0x0
   1fb4c:	b.eq	1ffc0 <PyInit__decimal@@Base+0x82e8>  // b.none
   1fb50:	add	x0, sp, #0x40
   1fb54:	mov	x1, x0
   1fb58:	ldr	x0, [sp, #32]
   1fb5c:	bl	1f9d0 <PyInit__decimal@@Base+0x7cf8>
   1fb60:	str	x0, [sp, #120]
   1fb64:	ldr	x0, [sp, #120]
   1fb68:	cmp	x0, #0x0
   1fb6c:	b.eq	1ff70 <PyInit__decimal@@Base+0x8298>  // b.none
   1fb70:	ldr	x0, [sp, #120]
   1fb74:	ldrb	w0, [x0]
   1fb78:	cmp	w0, #0x0
   1fb7c:	b.eq	1ffc8 <PyInit__decimal@@Base+0x82f0>  // b.none
   1fb80:	ldr	x1, [sp, #64]
   1fb84:	ldr	x0, [sp, #120]
   1fb88:	sub	x0, x1, x0
   1fb8c:	str	x0, [sp, #112]
   1fb90:	ldr	x0, [sp, #24]
   1fb94:	ldr	x1, [x0]
   1fb98:	ldr	x0, [sp, #24]
   1fb9c:	ldr	w0, [x0, #40]
   1fba0:	sxtw	x0, w0
   1fba4:	sub	x0, x1, x0
   1fba8:	mov	x1, x0
   1fbac:	ldr	x0, [sp, #112]
   1fbb0:	cmp	x0, x1
   1fbb4:	b.ls	1feb4 <PyInit__decimal@@Base+0x81dc>  // b.plast
   1fbb8:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1fbbc:	mov	x3, #0x4                   	// #4
   1fbc0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1fbc4:	add	x2, x0, #0xfe8
   1fbc8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1fbcc:	add	x1, x0, #0xff0
   1fbd0:	ldr	x0, [sp, #32]
   1fbd4:	bl	1f4ec <PyInit__decimal@@Base+0x7814>
   1fbd8:	cmp	w0, #0x0
   1fbdc:	b.eq	1fc78 <PyInit__decimal@@Base+0x7fa0>  // b.none
   1fbe0:	ldr	x0, [sp, #32]
   1fbe4:	add	x0, x0, #0x4
   1fbe8:	str	x0, [sp, #32]
   1fbec:	mov	w2, #0x8                   	// #8
   1fbf0:	ldrb	w1, [sp, #111]
   1fbf4:	ldr	x0, [sp, #40]
   1fbf8:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   1fbfc:	ldr	x0, [sp, #32]
   1fc00:	ldrb	w0, [x0]
   1fc04:	cmp	w0, #0x0
   1fc08:	b.eq	1ffd0 <PyInit__decimal@@Base+0x82f8>  // b.none
   1fc0c:	add	x0, sp, #0x40
   1fc10:	mov	x1, x0
   1fc14:	ldr	x0, [sp, #32]
   1fc18:	bl	1f9d0 <PyInit__decimal@@Base+0x7cf8>
   1fc1c:	str	x0, [sp, #120]
   1fc20:	ldr	x0, [sp, #120]
   1fc24:	cmp	x0, #0x0
   1fc28:	b.eq	1ff78 <PyInit__decimal@@Base+0x82a0>  // b.none
   1fc2c:	ldr	x0, [sp, #120]
   1fc30:	ldrb	w0, [x0]
   1fc34:	cmp	w0, #0x0
   1fc38:	b.eq	1ffd8 <PyInit__decimal@@Base+0x8300>  // b.none
   1fc3c:	ldr	x1, [sp, #64]
   1fc40:	ldr	x0, [sp, #120]
   1fc44:	sub	x0, x1, x0
   1fc48:	str	x0, [sp, #112]
   1fc4c:	ldr	x0, [sp, #24]
   1fc50:	ldr	x1, [x0]
   1fc54:	ldr	x0, [sp, #24]
   1fc58:	ldr	w0, [x0, #40]
   1fc5c:	sxtw	x0, w0
   1fc60:	sub	x0, x1, x0
   1fc64:	mov	x1, x0
   1fc68:	ldr	x0, [sp, #112]
   1fc6c:	cmp	x0, x1
   1fc70:	b.ls	1feb4 <PyInit__decimal@@Base+0x81dc>  // b.plast
   1fc74:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1fc78:	mov	x3, #0x3                   	// #3
   1fc7c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   1fc80:	add	x2, x0, #0xff8
   1fc84:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   1fc88:	add	x1, x0, #0x0
   1fc8c:	ldr	x0, [sp, #32]
   1fc90:	bl	1f4ec <PyInit__decimal@@Base+0x7814>
   1fc94:	cmp	w0, #0x0
   1fc98:	b.eq	1fcf0 <PyInit__decimal@@Base+0x8018>  // b.none
   1fc9c:	ldr	x0, [sp, #32]
   1fca0:	add	x0, x0, #0x3
   1fca4:	str	x0, [sp, #32]
   1fca8:	ldr	x0, [sp, #32]
   1fcac:	ldrb	w0, [x0]
   1fcb0:	cmp	w0, #0x0
   1fcb4:	b.eq	1fcdc <PyInit__decimal@@Base+0x8004>  // b.none
   1fcb8:	mov	x3, #0x6                   	// #6
   1fcbc:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   1fcc0:	add	x2, x0, #0x8
   1fcc4:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   1fcc8:	add	x1, x0, #0x10
   1fccc:	ldr	x0, [sp, #32]
   1fcd0:	bl	1f4ec <PyInit__decimal@@Base+0x7814>
   1fcd4:	cmp	w0, #0x0
   1fcd8:	b.eq	1ff80 <PyInit__decimal@@Base+0x82a8>  // b.none
   1fcdc:	mov	w2, #0x2                   	// #2
   1fce0:	ldrb	w1, [sp, #111]
   1fce4:	ldr	x0, [sp, #40]
   1fce8:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   1fcec:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1fcf0:	add	x2, sp, #0x40
   1fcf4:	add	x1, sp, #0x30
   1fcf8:	add	x0, sp, #0x38
   1fcfc:	mov	x3, x2
   1fd00:	mov	x2, x1
   1fd04:	mov	x1, x0
   1fd08:	ldr	x0, [sp, #32]
   1fd0c:	bl	1f7b4 <PyInit__decimal@@Base+0x7adc>
   1fd10:	str	x0, [sp, #120]
   1fd14:	ldr	x0, [sp, #120]
   1fd18:	cmp	x0, #0x0
   1fd1c:	b.eq	1ff88 <PyInit__decimal@@Base+0x82b0>  // b.none
   1fd20:	ldr	x0, [sp, #48]
   1fd24:	cmp	x0, #0x0
   1fd28:	b.eq	1fd9c <PyInit__decimal@@Base+0x80c4>  // b.none
   1fd2c:	ldr	x0, [sp, #48]
   1fd30:	str	x0, [sp, #64]
   1fd34:	ldr	x0, [sp, #48]
   1fd38:	add	x0, x0, #0x1
   1fd3c:	str	x0, [sp, #48]
   1fd40:	ldr	x0, [sp, #48]
   1fd44:	bl	1f584 <PyInit__decimal@@Base+0x78ac>
   1fd48:	mov	x1, x0
   1fd4c:	ldr	x0, [sp, #40]
   1fd50:	str	x1, [x0, #8]
   1fd54:	bl	6ad0 <__errno_location@plt>
   1fd58:	ldr	w0, [x0]
   1fd5c:	cmp	w0, #0x0
   1fd60:	b.eq	1fd9c <PyInit__decimal@@Base+0x80c4>  // b.none
   1fd64:	bl	6ad0 <__errno_location@plt>
   1fd68:	ldr	w0, [x0]
   1fd6c:	cmp	w0, #0x22
   1fd70:	b.ne	1ff90 <PyInit__decimal@@Base+0x82b8>  // b.any
   1fd74:	ldr	x0, [sp, #40]
   1fd78:	ldr	x1, [x0, #8]
   1fd7c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1fd80:	cmp	x1, x0
   1fd84:	b.eq	1fd9c <PyInit__decimal@@Base+0x80c4>  // b.none
   1fd88:	ldr	x0, [sp, #40]
   1fd8c:	ldr	x1, [x0, #8]
   1fd90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1fd94:	cmp	x1, x0
   1fd98:	b.ne	1ff90 <PyInit__decimal@@Base+0x82b8>  // b.any
   1fd9c:	ldr	x1, [sp, #64]
   1fda0:	ldr	x0, [sp, #120]
   1fda4:	sub	x0, x1, x0
   1fda8:	str	x0, [sp, #112]
   1fdac:	ldr	x0, [sp, #56]
   1fdb0:	cmp	x0, #0x0
   1fdb4:	b.eq	1fe44 <PyInit__decimal@@Base+0x816c>  // b.none
   1fdb8:	ldr	x1, [sp, #64]
   1fdbc:	ldr	x0, [sp, #56]
   1fdc0:	sub	x0, x1, x0
   1fdc4:	sub	x0, x0, #0x1
   1fdc8:	str	x0, [sp, #96]
   1fdcc:	ldr	x0, [sp, #56]
   1fdd0:	ldr	x1, [sp, #120]
   1fdd4:	cmp	x1, x0
   1fdd8:	b.cs	1fde8 <PyInit__decimal@@Base+0x8110>  // b.hs, b.nlast
   1fddc:	ldr	x0, [sp, #112]
   1fde0:	sub	x0, x0, #0x1
   1fde4:	str	x0, [sp, #112]
   1fde8:	ldr	x1, [sp, #96]
   1fdec:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1fdf0:	movk	x0, #0xb6b3, lsl #32
   1fdf4:	movk	x0, #0xde0, lsl #48
   1fdf8:	cmp	x1, x0
   1fdfc:	b.hi	1ff98 <PyInit__decimal@@Base+0x82c0>  // b.pmore
   1fe00:	ldr	x0, [sp, #40]
   1fe04:	ldr	x1, [x0, #8]
   1fe08:	ldr	x2, [sp, #96]
   1fe0c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1fe10:	add	x0, x2, x0
   1fe14:	cmp	x1, x0
   1fe18:	b.ge	1fe2c <PyInit__decimal@@Base+0x8154>  // b.tcont
   1fe1c:	ldr	x0, [sp, #40]
   1fe20:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1fe24:	str	x1, [x0, #8]
   1fe28:	b	1fe44 <PyInit__decimal@@Base+0x816c>
   1fe2c:	ldr	x0, [sp, #40]
   1fe30:	ldr	x1, [x0, #8]
   1fe34:	ldr	x0, [sp, #96]
   1fe38:	sub	x1, x1, x0
   1fe3c:	ldr	x0, [sp, #40]
   1fe40:	str	x1, [x0, #8]
   1fe44:	ldr	x1, [sp, #112]
   1fe48:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1fe4c:	movk	x0, #0xb6b3, lsl #32
   1fe50:	movk	x0, #0xde0, lsl #48
   1fe54:	cmp	x1, x0
   1fe58:	b.hi	1ffa0 <PyInit__decimal@@Base+0x82c8>  // b.pmore
   1fe5c:	ldr	x0, [sp, #40]
   1fe60:	ldr	x1, [x0, #8]
   1fe64:	mov	x0, #0x1                   	// #1
   1fe68:	movk	x0, #0x4ec8, lsl #16
   1fe6c:	movk	x0, #0x6d67, lsl #32
   1fe70:	movk	x0, #0x1bc1, lsl #48
   1fe74:	cmp	x1, x0
   1fe78:	b.le	1fe94 <PyInit__decimal@@Base+0x81bc>
   1fe7c:	ldr	x0, [sp, #40]
   1fe80:	mov	x1, #0x1                   	// #1
   1fe84:	movk	x1, #0x4ec8, lsl #16
   1fe88:	movk	x1, #0x6d67, lsl #32
   1fe8c:	movk	x1, #0x1bc1, lsl #48
   1fe90:	str	x1, [x0, #8]
   1fe94:	ldr	x0, [sp, #40]
   1fe98:	ldr	x1, [x0, #8]
   1fe9c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1fea0:	cmp	x1, x0
   1fea4:	b.ne	1feb4 <PyInit__decimal@@Base+0x81dc>  // b.any
   1fea8:	ldr	x0, [sp, #40]
   1feac:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1feb0:	str	x1, [x0, #8]
   1feb4:	ldr	x2, [sp, #112]
   1feb8:	add	x1, sp, #0x48
   1febc:	add	x0, sp, #0x50
   1fec0:	mov	x3, #0x13                  	// #19
   1fec4:	bl	1f448 <PyInit__decimal@@Base+0x7770>
   1fec8:	ldr	x0, [sp, #72]
   1fecc:	cmp	x0, #0x0
   1fed0:	b.eq	1fee0 <PyInit__decimal@@Base+0x8208>  // b.none
   1fed4:	ldr	x0, [sp, #80]
   1fed8:	add	x0, x0, #0x1
   1fedc:	b	1fee4 <PyInit__decimal@@Base+0x820c>
   1fee0:	ldr	x0, [sp, #80]
   1fee4:	str	x0, [sp, #88]
   1fee8:	ldr	x0, [sp, #88]
   1feec:	cmp	x0, #0x0
   1fef0:	b.eq	1ffa8 <PyInit__decimal@@Base+0x82d0>  // b.none
   1fef4:	ldr	x2, [sp, #16]
   1fef8:	ldr	x1, [sp, #88]
   1fefc:	ldr	x0, [sp, #40]
   1ff00:	bl	258b4 <PyInit__decimal@@Base+0xdbdc>
   1ff04:	cmp	w0, #0x0
   1ff08:	b.ne	1ff20 <PyInit__decimal@@Base+0x8248>  // b.any
   1ff0c:	ldr	x2, [sp, #16]
   1ff10:	mov	w1, #0x200                 	// #512
   1ff14:	ldr	x0, [sp, #40]
   1ff18:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   1ff1c:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ff20:	ldr	x0, [sp, #40]
   1ff24:	ldr	x1, [sp, #88]
   1ff28:	str	x1, [x0, #24]
   1ff2c:	ldr	x0, [sp, #40]
   1ff30:	ldr	x0, [x0, #40]
   1ff34:	ldr	x1, [sp, #56]
   1ff38:	ldr	x2, [sp, #72]
   1ff3c:	mov	w3, w2
   1ff40:	ldr	x2, [sp, #88]
   1ff44:	mov	x4, x2
   1ff48:	mov	x2, x1
   1ff4c:	ldr	x1, [sp, #120]
   1ff50:	bl	1f5fc <PyInit__decimal@@Base+0x7924>
   1ff54:	ldr	x0, [sp, #40]
   1ff58:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   1ff5c:	ldr	x2, [sp, #16]
   1ff60:	ldr	x1, [sp, #24]
   1ff64:	ldr	x0, [sp, #40]
   1ff68:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   1ff6c:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ff70:	nop
   1ff74:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ff78:	nop
   1ff7c:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ff80:	nop
   1ff84:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ff88:	nop
   1ff8c:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ff90:	nop
   1ff94:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ff98:	nop
   1ff9c:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ffa0:	nop
   1ffa4:	b	1ffac <PyInit__decimal@@Base+0x82d4>
   1ffa8:	nop
   1ffac:	ldr	x2, [sp, #16]
   1ffb0:	mov	w1, #0x2                   	// #2
   1ffb4:	ldr	x0, [sp, #40]
   1ffb8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   1ffbc:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ffc0:	nop
   1ffc4:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ffc8:	nop
   1ffcc:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ffd0:	nop
   1ffd4:	b	1ffdc <PyInit__decimal@@Base+0x8304>
   1ffd8:	nop
   1ffdc:	ldp	x29, x30, [sp], #128
   1ffe0:	ret
   1ffe4:	sub	sp, sp, #0x20
   1ffe8:	str	x0, [sp, #24]
   1ffec:	str	x1, [sp, #16]
   1fff0:	str	w2, [sp, #12]
   1fff4:	str	x3, [sp]
   1fff8:	ldr	w0, [sp, #12]
   1fffc:	sub	w0, w0, #0x2
   20000:	cmp	w0, #0x12
   20004:	b.hi	20b2c <PyInit__decimal@@Base+0x8e54>  // b.pmore
   20008:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   2000c:	add	x1, x1, #0x18
   20010:	ldr	w0, [x1, w0, uxtw #2]
   20014:	adr	x1, 20020 <PyInit__decimal@@Base+0x8348>
   20018:	add	x0, x1, w0, sxtw #2
   2001c:	br	x0
   20020:	ldr	x1, [sp, #24]
   20024:	ldr	x0, [sp]
   20028:	cmp	x1, x0
   2002c:	b.ne	20044 <PyInit__decimal@@Base+0x836c>  // b.any
   20030:	ldr	x0, [sp, #24]
   20034:	add	x1, x0, #0x1
   20038:	str	x1, [sp, #24]
   2003c:	mov	w1, #0x2e                  	// #46
   20040:	strb	w1, [x0]
   20044:	ldr	x1, [sp, #16]
   20048:	mov	x0, #0x89e80000            	// #2313682944
   2004c:	movk	x0, #0x2304, lsl #32
   20050:	movk	x0, #0x8ac7, lsl #48
   20054:	cmp	x1, x0
   20058:	cset	w0, cs  // cs = hs, nlast
   2005c:	mov	w0, w0
   20060:	sxtb	w0, w0
   20064:	add	w0, w0, #0x30
   20068:	sxtb	w2, w0
   2006c:	ldr	x0, [sp, #24]
   20070:	add	x1, x0, #0x1
   20074:	str	x1, [sp, #24]
   20078:	and	w1, w2, #0xff
   2007c:	strb	w1, [x0]
   20080:	ldr	x0, [sp, #16]
   20084:	mov	x1, #0x89e80000            	// #2313682944
   20088:	movk	x1, #0x2304, lsl #32
   2008c:	movk	x1, #0x8ac7, lsl #48
   20090:	cmp	x0, x1
   20094:	cset	w1, cs  // cs = hs, nlast
   20098:	mov	w2, w1
   2009c:	mov	x1, #0x89e80000            	// #2313682944
   200a0:	movk	x1, #0x2304, lsl #32
   200a4:	movk	x1, #0x8ac7, lsl #48
   200a8:	mul	x1, x2, x1
   200ac:	sub	x0, x0, x1
   200b0:	str	x0, [sp, #16]
   200b4:	ldr	x1, [sp, #24]
   200b8:	ldr	x0, [sp]
   200bc:	cmp	x1, x0
   200c0:	b.ne	200d8 <PyInit__decimal@@Base+0x8400>  // b.any
   200c4:	ldr	x0, [sp, #24]
   200c8:	add	x1, x0, #0x1
   200cc:	str	x1, [sp, #24]
   200d0:	mov	w1, #0x2e                  	// #46
   200d4:	strb	w1, [x0]
   200d8:	ldr	x0, [sp, #16]
   200dc:	lsr	x1, x0, #18
   200e0:	mov	x0, #0x490f                	// #18703
   200e4:	movk	x0, #0x7747, lsl #16
   200e8:	movk	x0, #0x49c9, lsl #32
   200ec:	umulh	x0, x1, x0
   200f0:	lsr	x0, x0, #24
   200f4:	sxtb	w0, w0
   200f8:	add	w0, w0, #0x30
   200fc:	sxtb	w2, w0
   20100:	ldr	x0, [sp, #24]
   20104:	add	x1, x0, #0x1
   20108:	str	x1, [sp, #24]
   2010c:	and	w1, w2, #0xff
   20110:	strb	w1, [x0]
   20114:	ldr	x0, [sp, #16]
   20118:	lsr	x2, x0, #18
   2011c:	mov	x1, #0x490f                	// #18703
   20120:	movk	x1, #0x7747, lsl #16
   20124:	movk	x1, #0x49c9, lsl #32
   20128:	umulh	x1, x2, x1
   2012c:	lsr	x2, x1, #24
   20130:	mov	x1, #0xa7640000            	// #2808348672
   20134:	movk	x1, #0xb6b3, lsl #32
   20138:	movk	x1, #0xde0, lsl #48
   2013c:	mul	x1, x2, x1
   20140:	sub	x0, x0, x1
   20144:	str	x0, [sp, #16]
   20148:	ldr	x1, [sp, #24]
   2014c:	ldr	x0, [sp]
   20150:	cmp	x1, x0
   20154:	b.ne	2016c <PyInit__decimal@@Base+0x8494>  // b.any
   20158:	ldr	x0, [sp, #24]
   2015c:	add	x1, x0, #0x1
   20160:	str	x1, [sp, #24]
   20164:	mov	w1, #0x2e                  	// #46
   20168:	strb	w1, [x0]
   2016c:	ldr	x0, [sp, #16]
   20170:	lsr	x1, x0, #17
   20174:	mov	x0, #0x1b53                	// #6995
   20178:	movk	x0, #0xd519, lsl #16
   2017c:	movk	x0, #0x5c3b, lsl #32
   20180:	umulh	x0, x1, x0
   20184:	lsr	x0, x0, #22
   20188:	sxtb	w0, w0
   2018c:	add	w0, w0, #0x30
   20190:	sxtb	w2, w0
   20194:	ldr	x0, [sp, #24]
   20198:	add	x1, x0, #0x1
   2019c:	str	x1, [sp, #24]
   201a0:	and	w1, w2, #0xff
   201a4:	strb	w1, [x0]
   201a8:	ldr	x0, [sp, #16]
   201ac:	lsr	x2, x0, #17
   201b0:	mov	x1, #0x1b53                	// #6995
   201b4:	movk	x1, #0xd519, lsl #16
   201b8:	movk	x1, #0x5c3b, lsl #32
   201bc:	umulh	x1, x2, x1
   201c0:	lsr	x2, x1, #22
   201c4:	mov	x1, #0x5d8a0000            	// #1569325056
   201c8:	movk	x1, #0x4578, lsl #32
   201cc:	movk	x1, #0x163, lsl #48
   201d0:	mul	x1, x2, x1
   201d4:	sub	x0, x0, x1
   201d8:	str	x0, [sp, #16]
   201dc:	ldr	x1, [sp, #24]
   201e0:	ldr	x0, [sp]
   201e4:	cmp	x1, x0
   201e8:	b.ne	20200 <PyInit__decimal@@Base+0x8528>  // b.any
   201ec:	ldr	x0, [sp, #24]
   201f0:	add	x1, x0, #0x1
   201f4:	str	x1, [sp, #24]
   201f8:	mov	w1, #0x2e                  	// #46
   201fc:	strb	w1, [x0]
   20200:	ldr	x1, [sp, #16]
   20204:	mov	x0, #0x7857                	// #30807
   20208:	movk	x0, #0xb113, lsl #16
   2020c:	movk	x0, #0x652f, lsl #32
   20210:	movk	x0, #0x39a5, lsl #48
   20214:	umulh	x0, x1, x0
   20218:	lsr	x0, x0, #51
   2021c:	sxtb	w0, w0
   20220:	add	w0, w0, #0x30
   20224:	sxtb	w2, w0
   20228:	ldr	x0, [sp, #24]
   2022c:	add	x1, x0, #0x1
   20230:	str	x1, [sp, #24]
   20234:	and	w1, w2, #0xff
   20238:	strb	w1, [x0]
   2023c:	ldr	x0, [sp, #16]
   20240:	mov	x1, #0x7857                	// #30807
   20244:	movk	x1, #0xb113, lsl #16
   20248:	movk	x1, #0x652f, lsl #32
   2024c:	movk	x1, #0x39a5, lsl #48
   20250:	umulh	x1, x0, x1
   20254:	lsr	x2, x1, #51
   20258:	mov	x1, #0x6fc10000            	// #1874919424
   2025c:	movk	x1, #0x86f2, lsl #32
   20260:	movk	x1, #0x23, lsl #48
   20264:	mul	x1, x2, x1
   20268:	sub	x0, x0, x1
   2026c:	str	x0, [sp, #16]
   20270:	ldr	x1, [sp, #24]
   20274:	ldr	x0, [sp]
   20278:	cmp	x1, x0
   2027c:	b.ne	20294 <PyInit__decimal@@Base+0x85bc>  // b.any
   20280:	ldr	x0, [sp, #24]
   20284:	add	x1, x0, #0x1
   20288:	str	x1, [sp, #24]
   2028c:	mov	w1, #0x2e                  	// #46
   20290:	strb	w1, [x0]
   20294:	ldr	x0, [sp, #16]
   20298:	lsr	x1, x0, #15
   2029c:	mov	x0, #0xeac3                	// #60099
   202a0:	movk	x0, #0xf3dc, lsl #16
   202a4:	movk	x0, #0x4075, lsl #32
   202a8:	movk	x0, #0x2, lsl #48
   202ac:	umulh	x0, x1, x0
   202b0:	lsr	x0, x0, #20
   202b4:	sxtb	w0, w0
   202b8:	add	w0, w0, #0x30
   202bc:	sxtb	w2, w0
   202c0:	ldr	x0, [sp, #24]
   202c4:	add	x1, x0, #0x1
   202c8:	str	x1, [sp, #24]
   202cc:	and	w1, w2, #0xff
   202d0:	strb	w1, [x0]
   202d4:	ldr	x0, [sp, #16]
   202d8:	lsr	x2, x0, #15
   202dc:	mov	x1, #0xeac3                	// #60099
   202e0:	movk	x1, #0xf3dc, lsl #16
   202e4:	movk	x1, #0x4075, lsl #32
   202e8:	movk	x1, #0x2, lsl #48
   202ec:	umulh	x1, x2, x1
   202f0:	lsr	x2, x1, #20
   202f4:	mov	x1, #0x8000                	// #32768
   202f8:	movk	x1, #0xa4c6, lsl #16
   202fc:	movk	x1, #0x8d7e, lsl #32
   20300:	movk	x1, #0x3, lsl #48
   20304:	mul	x1, x2, x1
   20308:	sub	x0, x0, x1
   2030c:	str	x0, [sp, #16]
   20310:	ldr	x1, [sp, #24]
   20314:	ldr	x0, [sp]
   20318:	cmp	x1, x0
   2031c:	b.ne	20334 <PyInit__decimal@@Base+0x865c>  // b.any
   20320:	ldr	x0, [sp, #24]
   20324:	add	x1, x0, #0x1
   20328:	str	x1, [sp, #24]
   2032c:	mov	w1, #0x2e                  	// #46
   20330:	strb	w1, [x0]
   20334:	ldr	x1, [sp, #16]
   20338:	mov	x0, #0xcd81                	// #52609
   2033c:	movk	x0, #0x5095, lsl #16
   20340:	movk	x0, #0x4dc3, lsl #32
   20344:	movk	x0, #0xb42, lsl #48
   20348:	umulh	x0, x1, x0
   2034c:	lsr	x0, x0, #42
   20350:	sxtb	w0, w0
   20354:	add	w0, w0, #0x30
   20358:	sxtb	w2, w0
   2035c:	ldr	x0, [sp, #24]
   20360:	add	x1, x0, #0x1
   20364:	str	x1, [sp, #24]
   20368:	and	w1, w2, #0xff
   2036c:	strb	w1, [x0]
   20370:	ldr	x0, [sp, #16]
   20374:	mov	x1, #0xcd81                	// #52609
   20378:	movk	x1, #0x5095, lsl #16
   2037c:	movk	x1, #0x4dc3, lsl #32
   20380:	movk	x1, #0xb42, lsl #48
   20384:	umulh	x1, x0, x1
   20388:	lsr	x2, x1, #42
   2038c:	mov	x1, #0x4000                	// #16384
   20390:	movk	x1, #0x107a, lsl #16
   20394:	movk	x1, #0x5af3, lsl #32
   20398:	mul	x1, x2, x1
   2039c:	sub	x0, x0, x1
   203a0:	str	x0, [sp, #16]
   203a4:	ldr	x1, [sp, #24]
   203a8:	ldr	x0, [sp]
   203ac:	cmp	x1, x0
   203b0:	b.ne	203c8 <PyInit__decimal@@Base+0x86f0>  // b.any
   203b4:	ldr	x0, [sp, #24]
   203b8:	add	x1, x0, #0x1
   203bc:	str	x1, [sp, #24]
   203c0:	mov	w1, #0x2e                  	// #46
   203c4:	strb	w1, [x0]
   203c8:	ldr	x1, [sp, #16]
   203cc:	mov	x0, #0x385                 	// #901
   203d0:	movk	x0, #0x92ed, lsl #16
   203d4:	movk	x0, #0x84d0, lsl #32
   203d8:	movk	x0, #0x384b, lsl #48
   203dc:	umulh	x0, x1, x0
   203e0:	lsr	x0, x0, #41
   203e4:	sxtb	w0, w0
   203e8:	add	w0, w0, #0x30
   203ec:	sxtb	w2, w0
   203f0:	ldr	x0, [sp, #24]
   203f4:	add	x1, x0, #0x1
   203f8:	str	x1, [sp, #24]
   203fc:	and	w1, w2, #0xff
   20400:	strb	w1, [x0]
   20404:	ldr	x0, [sp, #16]
   20408:	mov	x1, #0x385                 	// #901
   2040c:	movk	x1, #0x92ed, lsl #16
   20410:	movk	x1, #0x84d0, lsl #32
   20414:	movk	x1, #0x384b, lsl #48
   20418:	umulh	x1, x0, x1
   2041c:	lsr	x2, x1, #41
   20420:	mov	x1, #0xa000                	// #40960
   20424:	movk	x1, #0x4e72, lsl #16
   20428:	movk	x1, #0x918, lsl #32
   2042c:	mul	x1, x2, x1
   20430:	sub	x0, x0, x1
   20434:	str	x0, [sp, #16]
   20438:	ldr	x1, [sp, #24]
   2043c:	ldr	x0, [sp]
   20440:	cmp	x1, x0
   20444:	b.ne	2045c <PyInit__decimal@@Base+0x8784>  // b.any
   20448:	ldr	x0, [sp, #24]
   2044c:	add	x1, x0, #0x1
   20450:	str	x1, [sp, #24]
   20454:	mov	w1, #0x2e                  	// #46
   20458:	strb	w1, [x0]
   2045c:	ldr	x1, [sp, #16]
   20460:	mov	x0, #0x2233                	// #8755
   20464:	movk	x0, #0x5bd4, lsl #16
   20468:	movk	x0, #0x3302, lsl #32
   2046c:	movk	x0, #0x232f, lsl #48
   20470:	umulh	x0, x1, x0
   20474:	lsr	x0, x0, #37
   20478:	sxtb	w0, w0
   2047c:	add	w0, w0, #0x30
   20480:	sxtb	w2, w0
   20484:	ldr	x0, [sp, #24]
   20488:	add	x1, x0, #0x1
   2048c:	str	x1, [sp, #24]
   20490:	and	w1, w2, #0xff
   20494:	strb	w1, [x0]
   20498:	ldr	x0, [sp, #16]
   2049c:	mov	x1, #0x2233                	// #8755
   204a0:	movk	x1, #0x5bd4, lsl #16
   204a4:	movk	x1, #0x3302, lsl #32
   204a8:	movk	x1, #0x232f, lsl #48
   204ac:	umulh	x1, x0, x1
   204b0:	lsr	x2, x1, #37
   204b4:	mov	x1, #0x1000                	// #4096
   204b8:	movk	x1, #0xd4a5, lsl #16
   204bc:	movk	x1, #0xe8, lsl #32
   204c0:	mul	x1, x2, x1
   204c4:	sub	x0, x0, x1
   204c8:	str	x0, [sp, #16]
   204cc:	ldr	x1, [sp, #24]
   204d0:	ldr	x0, [sp]
   204d4:	cmp	x1, x0
   204d8:	b.ne	204f0 <PyInit__decimal@@Base+0x8818>  // b.any
   204dc:	ldr	x0, [sp, #24]
   204e0:	add	x1, x0, #0x1
   204e4:	str	x1, [sp, #24]
   204e8:	mov	w1, #0x2e                  	// #46
   204ec:	strb	w1, [x0]
   204f0:	ldr	x1, [sp, #16]
   204f4:	mov	x0, #0xaaff                	// #43775
   204f8:	movk	x0, #0xcb24, lsl #16
   204fc:	movk	x0, #0xff0b, lsl #32
   20500:	movk	x0, #0xafeb, lsl #48
   20504:	umulh	x0, x1, x0
   20508:	lsr	x0, x0, #36
   2050c:	sxtb	w0, w0
   20510:	add	w0, w0, #0x30
   20514:	sxtb	w2, w0
   20518:	ldr	x0, [sp, #24]
   2051c:	add	x1, x0, #0x1
   20520:	str	x1, [sp, #24]
   20524:	and	w1, w2, #0xff
   20528:	strb	w1, [x0]
   2052c:	ldr	x0, [sp, #16]
   20530:	mov	x1, #0xaaff                	// #43775
   20534:	movk	x1, #0xcb24, lsl #16
   20538:	movk	x1, #0xff0b, lsl #32
   2053c:	movk	x1, #0xafeb, lsl #48
   20540:	umulh	x1, x0, x1
   20544:	lsr	x2, x1, #36
   20548:	mov	x1, #0xe800                	// #59392
   2054c:	movk	x1, #0x4876, lsl #16
   20550:	movk	x1, #0x17, lsl #32
   20554:	mul	x1, x2, x1
   20558:	sub	x0, x0, x1
   2055c:	str	x0, [sp, #16]
   20560:	ldr	x1, [sp, #24]
   20564:	ldr	x0, [sp]
   20568:	cmp	x1, x0
   2056c:	b.ne	20584 <PyInit__decimal@@Base+0x88ac>  // b.any
   20570:	ldr	x0, [sp, #24]
   20574:	add	x1, x0, #0x1
   20578:	str	x1, [sp, #24]
   2057c:	mov	w1, #0x2e                  	// #46
   20580:	strb	w1, [x0]
   20584:	ldr	x1, [sp, #16]
   20588:	mov	x0, #0xd5bf                	// #54719
   2058c:	movk	x0, #0xbded, lsl #16
   20590:	movk	x0, #0xfece, lsl #32
   20594:	movk	x0, #0xdbe6, lsl #48
   20598:	umulh	x0, x1, x0
   2059c:	lsr	x0, x0, #33
   205a0:	sxtb	w0, w0
   205a4:	add	w0, w0, #0x30
   205a8:	sxtb	w2, w0
   205ac:	ldr	x0, [sp, #24]
   205b0:	add	x1, x0, #0x1
   205b4:	str	x1, [sp, #24]
   205b8:	and	w1, w2, #0xff
   205bc:	strb	w1, [x0]
   205c0:	ldr	x0, [sp, #16]
   205c4:	mov	x1, #0xd5bf                	// #54719
   205c8:	movk	x1, #0xbded, lsl #16
   205cc:	movk	x1, #0xfece, lsl #32
   205d0:	movk	x1, #0xdbe6, lsl #48
   205d4:	umulh	x1, x0, x1
   205d8:	lsr	x2, x1, #33
   205dc:	mov	x1, #0xe400                	// #58368
   205e0:	movk	x1, #0x540b, lsl #16
   205e4:	movk	x1, #0x2, lsl #32
   205e8:	mul	x1, x2, x1
   205ec:	sub	x0, x0, x1
   205f0:	str	x0, [sp, #16]
   205f4:	ldr	x1, [sp, #24]
   205f8:	ldr	x0, [sp]
   205fc:	cmp	x1, x0
   20600:	b.ne	20618 <PyInit__decimal@@Base+0x8940>  // b.any
   20604:	ldr	x0, [sp, #24]
   20608:	add	x1, x0, #0x1
   2060c:	str	x1, [sp, #24]
   20610:	mov	w1, #0x2e                  	// #46
   20614:	strb	w1, [x0]
   20618:	ldr	x0, [sp, #16]
   2061c:	lsr	x1, x0, #9
   20620:	mov	x0, #0x5a53                	// #23123
   20624:	movk	x0, #0xa09b, lsl #16
   20628:	movk	x0, #0xb82f, lsl #32
   2062c:	movk	x0, #0x44, lsl #48
   20630:	umulh	x0, x1, x0
   20634:	lsr	x0, x0, #11
   20638:	sxtb	w0, w0
   2063c:	add	w0, w0, #0x30
   20640:	sxtb	w2, w0
   20644:	ldr	x0, [sp, #24]
   20648:	add	x1, x0, #0x1
   2064c:	str	x1, [sp, #24]
   20650:	and	w1, w2, #0xff
   20654:	strb	w1, [x0]
   20658:	ldr	x0, [sp, #16]
   2065c:	lsr	x2, x0, #9
   20660:	mov	x1, #0x5a53                	// #23123
   20664:	movk	x1, #0xa09b, lsl #16
   20668:	movk	x1, #0xb82f, lsl #32
   2066c:	movk	x1, #0x44, lsl #48
   20670:	umulh	x1, x2, x1
   20674:	lsr	x2, x1, #11
   20678:	mov	x1, #0xca00                	// #51712
   2067c:	movk	x1, #0x3b9a, lsl #16
   20680:	mul	x1, x2, x1
   20684:	sub	x0, x0, x1
   20688:	str	x0, [sp, #16]
   2068c:	ldr	x1, [sp, #24]
   20690:	ldr	x0, [sp]
   20694:	cmp	x1, x0
   20698:	b.ne	206b0 <PyInit__decimal@@Base+0x89d8>  // b.any
   2069c:	ldr	x0, [sp, #24]
   206a0:	add	x1, x0, #0x1
   206a4:	str	x1, [sp, #24]
   206a8:	mov	w1, #0x2e                  	// #46
   206ac:	strb	w1, [x0]
   206b0:	ldr	x1, [sp, #16]
   206b4:	mov	x0, #0xcefd                	// #52989
   206b8:	movk	x0, #0x8461, lsl #16
   206bc:	movk	x0, #0x7711, lsl #32
   206c0:	movk	x0, #0xabcc, lsl #48
   206c4:	umulh	x0, x1, x0
   206c8:	lsr	x0, x0, #26
   206cc:	sxtb	w0, w0
   206d0:	add	w0, w0, #0x30
   206d4:	sxtb	w2, w0
   206d8:	ldr	x0, [sp, #24]
   206dc:	add	x1, x0, #0x1
   206e0:	str	x1, [sp, #24]
   206e4:	and	w1, w2, #0xff
   206e8:	strb	w1, [x0]
   206ec:	ldr	x0, [sp, #16]
   206f0:	mov	x1, #0xcefd                	// #52989
   206f4:	movk	x1, #0x8461, lsl #16
   206f8:	movk	x1, #0x7711, lsl #32
   206fc:	movk	x1, #0xabcc, lsl #48
   20700:	umulh	x1, x0, x1
   20704:	lsr	x2, x1, #26
   20708:	mov	x1, #0xe100                	// #57600
   2070c:	movk	x1, #0x5f5, lsl #16
   20710:	mul	x1, x2, x1
   20714:	sub	x0, x0, x1
   20718:	str	x0, [sp, #16]
   2071c:	ldr	x1, [sp, #24]
   20720:	ldr	x0, [sp]
   20724:	cmp	x1, x0
   20728:	b.ne	20740 <PyInit__decimal@@Base+0x8a68>  // b.any
   2072c:	ldr	x0, [sp, #24]
   20730:	add	x1, x0, #0x1
   20734:	str	x1, [sp, #24]
   20738:	mov	w1, #0x2e                  	// #46
   2073c:	strb	w1, [x0]
   20740:	ldr	x1, [sp, #16]
   20744:	mov	x0, #0x42bd                	// #17085
   20748:	movk	x0, #0xe57a, lsl #16
   2074c:	movk	x0, #0x94d5, lsl #32
   20750:	movk	x0, #0xd6bf, lsl #48
   20754:	umulh	x0, x1, x0
   20758:	lsr	x0, x0, #23
   2075c:	sxtb	w0, w0
   20760:	add	w0, w0, #0x30
   20764:	sxtb	w2, w0
   20768:	ldr	x0, [sp, #24]
   2076c:	add	x1, x0, #0x1
   20770:	str	x1, [sp, #24]
   20774:	and	w1, w2, #0xff
   20778:	strb	w1, [x0]
   2077c:	ldr	x0, [sp, #16]
   20780:	mov	x1, #0x42bd                	// #17085
   20784:	movk	x1, #0xe57a, lsl #16
   20788:	movk	x1, #0x94d5, lsl #32
   2078c:	movk	x1, #0xd6bf, lsl #48
   20790:	umulh	x1, x0, x1
   20794:	lsr	x2, x1, #23
   20798:	mov	x1, #0x9680                	// #38528
   2079c:	movk	x1, #0x98, lsl #16
   207a0:	mul	x1, x2, x1
   207a4:	sub	x0, x0, x1
   207a8:	str	x0, [sp, #16]
   207ac:	ldr	x1, [sp, #24]
   207b0:	ldr	x0, [sp]
   207b4:	cmp	x1, x0
   207b8:	b.ne	207d0 <PyInit__decimal@@Base+0x8af8>  // b.any
   207bc:	ldr	x0, [sp, #24]
   207c0:	add	x1, x0, #0x1
   207c4:	str	x1, [sp, #24]
   207c8:	mov	w1, #0x2e                  	// #46
   207cc:	strb	w1, [x0]
   207d0:	ldr	x1, [sp, #16]
   207d4:	mov	x0, #0x34db                	// #13531
   207d8:	movk	x0, #0xd7b6, lsl #16
   207dc:	movk	x0, #0xde82, lsl #32
   207e0:	movk	x0, #0x431b, lsl #48
   207e4:	umulh	x0, x1, x0
   207e8:	lsr	x0, x0, #18
   207ec:	sxtb	w0, w0
   207f0:	add	w0, w0, #0x30
   207f4:	sxtb	w2, w0
   207f8:	ldr	x0, [sp, #24]
   207fc:	add	x1, x0, #0x1
   20800:	str	x1, [sp, #24]
   20804:	and	w1, w2, #0xff
   20808:	strb	w1, [x0]
   2080c:	ldr	x0, [sp, #16]
   20810:	mov	x1, #0x34db                	// #13531
   20814:	movk	x1, #0xd7b6, lsl #16
   20818:	movk	x1, #0xde82, lsl #32
   2081c:	movk	x1, #0x431b, lsl #48
   20820:	umulh	x1, x0, x1
   20824:	lsr	x2, x1, #18
   20828:	mov	x1, #0x4240                	// #16960
   2082c:	movk	x1, #0xf, lsl #16
   20830:	mul	x1, x2, x1
   20834:	sub	x0, x0, x1
   20838:	str	x0, [sp, #16]
   2083c:	ldr	x1, [sp, #24]
   20840:	ldr	x0, [sp]
   20844:	cmp	x1, x0
   20848:	b.ne	20860 <PyInit__decimal@@Base+0x8b88>  // b.any
   2084c:	ldr	x0, [sp, #24]
   20850:	add	x1, x0, #0x1
   20854:	str	x1, [sp, #24]
   20858:	mov	w1, #0x2e                  	// #46
   2085c:	strb	w1, [x0]
   20860:	ldr	x0, [sp, #16]
   20864:	lsr	x1, x0, #5
   20868:	mov	x0, #0x7843                	// #30787
   2086c:	movk	x0, #0x71b4, lsl #16
   20870:	movk	x0, #0x5ac4, lsl #32
   20874:	movk	x0, #0xa7c, lsl #48
   20878:	umulh	x0, x1, x0
   2087c:	lsr	x0, x0, #7
   20880:	sxtb	w0, w0
   20884:	add	w0, w0, #0x30
   20888:	sxtb	w2, w0
   2088c:	ldr	x0, [sp, #24]
   20890:	add	x1, x0, #0x1
   20894:	str	x1, [sp, #24]
   20898:	and	w1, w2, #0xff
   2089c:	strb	w1, [x0]
   208a0:	ldr	x0, [sp, #16]
   208a4:	lsr	x2, x0, #5
   208a8:	mov	x1, #0x7843                	// #30787
   208ac:	movk	x1, #0x71b4, lsl #16
   208b0:	movk	x1, #0x5ac4, lsl #32
   208b4:	movk	x1, #0xa7c, lsl #48
   208b8:	umulh	x1, x2, x1
   208bc:	lsr	x2, x1, #7
   208c0:	mov	x1, #0x86a0                	// #34464
   208c4:	movk	x1, #0x1, lsl #16
   208c8:	mul	x1, x2, x1
   208cc:	sub	x0, x0, x1
   208d0:	str	x0, [sp, #16]
   208d4:	ldr	x1, [sp, #24]
   208d8:	ldr	x0, [sp]
   208dc:	cmp	x1, x0
   208e0:	b.ne	208f8 <PyInit__decimal@@Base+0x8c20>  // b.any
   208e4:	ldr	x0, [sp, #24]
   208e8:	add	x1, x0, #0x1
   208ec:	str	x1, [sp, #24]
   208f0:	mov	w1, #0x2e                  	// #46
   208f4:	strb	w1, [x0]
   208f8:	ldr	x1, [sp, #16]
   208fc:	mov	x0, #0x594b                	// #22859
   20900:	movk	x0, #0x3886, lsl #16
   20904:	movk	x0, #0xc5d6, lsl #32
   20908:	movk	x0, #0x346d, lsl #48
   2090c:	umulh	x0, x1, x0
   20910:	lsr	x0, x0, #11
   20914:	sxtb	w0, w0
   20918:	add	w0, w0, #0x30
   2091c:	sxtb	w2, w0
   20920:	ldr	x0, [sp, #24]
   20924:	add	x1, x0, #0x1
   20928:	str	x1, [sp, #24]
   2092c:	and	w1, w2, #0xff
   20930:	strb	w1, [x0]
   20934:	ldr	x0, [sp, #16]
   20938:	mov	x1, #0x594b                	// #22859
   2093c:	movk	x1, #0x3886, lsl #16
   20940:	movk	x1, #0xc5d6, lsl #32
   20944:	movk	x1, #0x346d, lsl #48
   20948:	umulh	x1, x0, x1
   2094c:	lsr	x2, x1, #11
   20950:	mov	x1, #0x2710                	// #10000
   20954:	mul	x1, x2, x1
   20958:	sub	x0, x0, x1
   2095c:	str	x0, [sp, #16]
   20960:	ldr	x1, [sp, #24]
   20964:	ldr	x0, [sp]
   20968:	cmp	x1, x0
   2096c:	b.ne	20984 <PyInit__decimal@@Base+0x8cac>  // b.any
   20970:	ldr	x0, [sp, #24]
   20974:	add	x1, x0, #0x1
   20978:	str	x1, [sp, #24]
   2097c:	mov	w1, #0x2e                  	// #46
   20980:	strb	w1, [x0]
   20984:	ldr	x0, [sp, #16]
   20988:	lsr	x1, x0, #3
   2098c:	mov	x0, #0xf7cf                	// #63439
   20990:	movk	x0, #0xe353, lsl #16
   20994:	movk	x0, #0x9ba5, lsl #32
   20998:	movk	x0, #0x20c4, lsl #48
   2099c:	umulh	x0, x1, x0
   209a0:	lsr	x0, x0, #4
   209a4:	sxtb	w0, w0
   209a8:	add	w0, w0, #0x30
   209ac:	sxtb	w2, w0
   209b0:	ldr	x0, [sp, #24]
   209b4:	add	x1, x0, #0x1
   209b8:	str	x1, [sp, #24]
   209bc:	and	w1, w2, #0xff
   209c0:	strb	w1, [x0]
   209c4:	ldr	x2, [sp, #16]
   209c8:	lsr	x1, x2, #3
   209cc:	mov	x0, #0xf7cf                	// #63439
   209d0:	movk	x0, #0xe353, lsl #16
   209d4:	movk	x0, #0x9ba5, lsl #32
   209d8:	movk	x0, #0x20c4, lsl #48
   209dc:	umulh	x0, x1, x0
   209e0:	lsr	x1, x0, #4
   209e4:	mov	x0, x1
   209e8:	lsl	x0, x0, #5
   209ec:	sub	x0, x0, x1
   209f0:	lsl	x0, x0, #2
   209f4:	add	x0, x0, x1
   209f8:	lsl	x0, x0, #3
   209fc:	sub	x0, x2, x0
   20a00:	str	x0, [sp, #16]
   20a04:	ldr	x1, [sp, #24]
   20a08:	ldr	x0, [sp]
   20a0c:	cmp	x1, x0
   20a10:	b.ne	20a28 <PyInit__decimal@@Base+0x8d50>  // b.any
   20a14:	ldr	x0, [sp, #24]
   20a18:	add	x1, x0, #0x1
   20a1c:	str	x1, [sp, #24]
   20a20:	mov	w1, #0x2e                  	// #46
   20a24:	strb	w1, [x0]
   20a28:	ldr	x0, [sp, #16]
   20a2c:	lsr	x1, x0, #2
   20a30:	mov	x0, #0xf5c3                	// #62915
   20a34:	movk	x0, #0x5c28, lsl #16
   20a38:	movk	x0, #0xc28f, lsl #32
   20a3c:	movk	x0, #0x28f5, lsl #48
   20a40:	umulh	x0, x1, x0
   20a44:	lsr	x0, x0, #2
   20a48:	sxtb	w0, w0
   20a4c:	add	w0, w0, #0x30
   20a50:	sxtb	w2, w0
   20a54:	ldr	x0, [sp, #24]
   20a58:	add	x1, x0, #0x1
   20a5c:	str	x1, [sp, #24]
   20a60:	and	w1, w2, #0xff
   20a64:	strb	w1, [x0]
   20a68:	ldr	x2, [sp, #16]
   20a6c:	lsr	x1, x2, #2
   20a70:	mov	x0, #0xf5c3                	// #62915
   20a74:	movk	x0, #0x5c28, lsl #16
   20a78:	movk	x0, #0xc28f, lsl #32
   20a7c:	movk	x0, #0x28f5, lsl #48
   20a80:	umulh	x0, x1, x0
   20a84:	lsr	x1, x0, #2
   20a88:	mov	x0, x1
   20a8c:	lsl	x0, x0, #1
   20a90:	add	x0, x0, x1
   20a94:	lsl	x0, x0, #3
   20a98:	add	x0, x0, x1
   20a9c:	lsl	x0, x0, #2
   20aa0:	sub	x0, x2, x0
   20aa4:	str	x0, [sp, #16]
   20aa8:	ldr	x1, [sp, #24]
   20aac:	ldr	x0, [sp]
   20ab0:	cmp	x1, x0
   20ab4:	b.ne	20acc <PyInit__decimal@@Base+0x8df4>  // b.any
   20ab8:	ldr	x0, [sp, #24]
   20abc:	add	x1, x0, #0x1
   20ac0:	str	x1, [sp, #24]
   20ac4:	mov	w1, #0x2e                  	// #46
   20ac8:	strb	w1, [x0]
   20acc:	ldr	x1, [sp, #16]
   20ad0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   20ad4:	movk	x0, #0xcccd
   20ad8:	umulh	x0, x1, x0
   20adc:	lsr	x0, x0, #3
   20ae0:	sxtb	w0, w0
   20ae4:	add	w0, w0, #0x30
   20ae8:	sxtb	w2, w0
   20aec:	ldr	x0, [sp, #24]
   20af0:	add	x1, x0, #0x1
   20af4:	str	x1, [sp, #24]
   20af8:	and	w1, w2, #0xff
   20afc:	strb	w1, [x0]
   20b00:	ldr	x1, [sp, #16]
   20b04:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   20b08:	movk	x0, #0xcccd
   20b0c:	umulh	x0, x1, x0
   20b10:	lsr	x2, x0, #3
   20b14:	mov	x0, x2
   20b18:	lsl	x0, x0, #2
   20b1c:	add	x0, x0, x2
   20b20:	lsl	x0, x0, #1
   20b24:	sub	x0, x1, x0
   20b28:	str	x0, [sp, #16]
   20b2c:	ldr	x1, [sp, #24]
   20b30:	ldr	x0, [sp]
   20b34:	cmp	x1, x0
   20b38:	b.ne	20b50 <PyInit__decimal@@Base+0x8e78>  // b.any
   20b3c:	ldr	x0, [sp, #24]
   20b40:	add	x1, x0, #0x1
   20b44:	str	x1, [sp, #24]
   20b48:	mov	w1, #0x2e                  	// #46
   20b4c:	strb	w1, [x0]
   20b50:	ldr	x0, [sp, #16]
   20b54:	sxtb	w0, w0
   20b58:	add	w0, w0, #0x30
   20b5c:	sxtb	w2, w0
   20b60:	ldr	x0, [sp, #24]
   20b64:	add	x1, x0, #0x1
   20b68:	str	x1, [sp, #24]
   20b6c:	and	w1, w2, #0xff
   20b70:	strb	w1, [x0]
   20b74:	ldr	x0, [sp, #24]
   20b78:	strb	wzr, [x0]
   20b7c:	ldr	x0, [sp, #24]
   20b80:	add	sp, sp, #0x20
   20b84:	ret
   20b88:	stp	x29, x30, [sp, #-64]!
   20b8c:	mov	x29, sp
   20b90:	str	x19, [sp, #16]
   20b94:	str	x0, [sp, #40]
   20b98:	str	x1, [sp, #32]
   20b9c:	mov	w0, #0x2b                  	// #43
   20ba0:	strb	w0, [sp, #63]
   20ba4:	ldr	x0, [sp, #32]
   20ba8:	cmp	x0, #0x0
   20bac:	b.ge	20bc4 <PyInit__decimal@@Base+0x8eec>  // b.tcont
   20bb0:	mov	w0, #0x2d                  	// #45
   20bb4:	strb	w0, [sp, #63]
   20bb8:	ldr	x0, [sp, #32]
   20bbc:	neg	x0, x0
   20bc0:	str	x0, [sp, #32]
   20bc4:	ldr	x0, [sp, #40]
   20bc8:	add	x1, x0, #0x1
   20bcc:	str	x1, [sp, #40]
   20bd0:	ldrb	w1, [sp, #63]
   20bd4:	strb	w1, [x0]
   20bd8:	ldr	x19, [sp, #32]
   20bdc:	ldr	x0, [sp, #32]
   20be0:	bl	24a64 <PyInit__decimal@@Base+0xcd8c>
   20be4:	mov	x3, #0x0                   	// #0
   20be8:	mov	w2, w0
   20bec:	mov	x1, x19
   20bf0:	ldr	x0, [sp, #40]
   20bf4:	bl	1ffe4 <PyInit__decimal@@Base+0x830c>
   20bf8:	ldr	x19, [sp, #16]
   20bfc:	ldp	x29, x30, [sp], #64
   20c00:	ret
   20c04:	stp	x29, x30, [sp, #-48]!
   20c08:	mov	x29, sp
   20c0c:	str	x0, [sp, #24]
   20c10:	str	x1, [sp, #16]
   20c14:	ldr	x0, [sp, #16]
   20c18:	bl	24d50 <PyInit__decimal@@Base+0xd078>
   20c1c:	str	x0, [sp, #32]
   20c20:	ldr	x0, [sp, #32]
   20c24:	bl	24a64 <PyInit__decimal@@Base+0xcd8c>
   20c28:	mov	x3, #0x0                   	// #0
   20c2c:	mov	w2, w0
   20c30:	ldr	x1, [sp, #32]
   20c34:	ldr	x0, [sp, #24]
   20c38:	bl	1ffe4 <PyInit__decimal@@Base+0x830c>
   20c3c:	str	x0, [sp, #24]
   20c40:	ldr	x0, [sp, #16]
   20c44:	ldr	x0, [x0, #24]
   20c48:	sub	x0, x0, #0x2
   20c4c:	str	x0, [sp, #40]
   20c50:	b	20c94 <PyInit__decimal@@Base+0x8fbc>
   20c54:	ldr	x0, [sp, #16]
   20c58:	ldr	x1, [x0, #40]
   20c5c:	ldr	x0, [sp, #40]
   20c60:	lsl	x0, x0, #3
   20c64:	add	x0, x1, x0
   20c68:	ldr	x0, [x0]
   20c6c:	str	x0, [sp, #32]
   20c70:	mov	x3, #0x0                   	// #0
   20c74:	mov	w2, #0x13                  	// #19
   20c78:	ldr	x1, [sp, #32]
   20c7c:	ldr	x0, [sp, #24]
   20c80:	bl	1ffe4 <PyInit__decimal@@Base+0x830c>
   20c84:	str	x0, [sp, #24]
   20c88:	ldr	x0, [sp, #40]
   20c8c:	sub	x0, x0, #0x1
   20c90:	str	x0, [sp, #40]
   20c94:	ldr	x0, [sp, #40]
   20c98:	cmp	x0, #0x0
   20c9c:	b.ge	20c54 <PyInit__decimal@@Base+0x8f7c>  // b.tcont
   20ca0:	ldr	x0, [sp, #24]
   20ca4:	ldp	x29, x30, [sp], #48
   20ca8:	ret
   20cac:	stp	x29, x30, [sp, #-64]!
   20cb0:	mov	x29, sp
   20cb4:	str	x0, [sp, #40]
   20cb8:	str	x1, [sp, #32]
   20cbc:	str	x2, [sp, #24]
   20cc0:	ldr	x0, [sp, #24]
   20cc4:	bl	24d50 <PyInit__decimal@@Base+0xd078>
   20cc8:	str	x0, [sp, #48]
   20ccc:	ldr	x0, [sp, #48]
   20cd0:	bl	24a64 <PyInit__decimal@@Base+0xcd8c>
   20cd4:	ldr	x3, [sp, #32]
   20cd8:	mov	w2, w0
   20cdc:	ldr	x1, [sp, #48]
   20ce0:	ldr	x0, [sp, #40]
   20ce4:	bl	1ffe4 <PyInit__decimal@@Base+0x830c>
   20ce8:	str	x0, [sp, #40]
   20cec:	ldr	x0, [sp, #24]
   20cf0:	ldr	x0, [x0, #24]
   20cf4:	sub	x0, x0, #0x2
   20cf8:	str	x0, [sp, #56]
   20cfc:	b	20d40 <PyInit__decimal@@Base+0x9068>
   20d00:	ldr	x0, [sp, #24]
   20d04:	ldr	x1, [x0, #40]
   20d08:	ldr	x0, [sp, #56]
   20d0c:	lsl	x0, x0, #3
   20d10:	add	x0, x1, x0
   20d14:	ldr	x0, [x0]
   20d18:	str	x0, [sp, #48]
   20d1c:	ldr	x3, [sp, #32]
   20d20:	mov	w2, #0x13                  	// #19
   20d24:	ldr	x1, [sp, #48]
   20d28:	ldr	x0, [sp, #40]
   20d2c:	bl	1ffe4 <PyInit__decimal@@Base+0x830c>
   20d30:	str	x0, [sp, #40]
   20d34:	ldr	x0, [sp, #56]
   20d38:	sub	x0, x0, #0x1
   20d3c:	str	x0, [sp, #56]
   20d40:	ldr	x0, [sp, #56]
   20d44:	cmp	x0, #0x0
   20d48:	b.ge	20d00 <PyInit__decimal@@Base+0x9028>  // b.tcont
   20d4c:	ldr	x0, [sp, #40]
   20d50:	ldp	x29, x30, [sp], #64
   20d54:	ret
   20d58:	stp	x29, x30, [sp, #-96]!
   20d5c:	mov	x29, sp
   20d60:	str	x0, [sp, #40]
   20d64:	str	x1, [sp, #32]
   20d68:	str	w2, [sp, #28]
   20d6c:	str	x3, [sp, #16]
   20d70:	str	xzr, [sp, #88]
   20d74:	str	xzr, [sp, #80]
   20d78:	str	xzr, [sp, #72]
   20d7c:	ldr	x0, [sp, #32]
   20d80:	bl	25438 <PyInit__decimal@@Base+0xd760>
   20d84:	cmp	w0, #0x0
   20d88:	b.eq	20f44 <PyInit__decimal@@Base+0x926c>  // b.none
   20d8c:	mov	x0, #0xb                   	// #11
   20d90:	str	x0, [sp, #72]
   20d94:	ldr	x0, [sp, #32]
   20d98:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
   20d9c:	cmp	w0, #0x0
   20da0:	b.eq	20dc8 <PyInit__decimal@@Base+0x90f0>  // b.none
   20da4:	ldr	x0, [sp, #32]
   20da8:	ldr	x0, [x0, #24]
   20dac:	cmp	x0, #0x0
   20db0:	b.le	20dc8 <PyInit__decimal@@Base+0x90f0>
   20db4:	ldr	x0, [sp, #32]
   20db8:	ldr	x0, [x0, #16]
   20dbc:	ldr	x1, [sp, #72]
   20dc0:	add	x0, x1, x0
   20dc4:	str	x0, [sp, #72]
   20dc8:	ldr	x0, [sp, #72]
   20dcc:	mov	x1, #0x1                   	// #1
   20dd0:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   20dd4:	str	x0, [sp, #88]
   20dd8:	ldr	x0, [sp, #88]
   20ddc:	str	x0, [sp, #80]
   20de0:	ldr	x0, [sp, #80]
   20de4:	cmp	x0, #0x0
   20de8:	b.ne	20dfc <PyInit__decimal@@Base+0x9124>  // b.any
   20dec:	ldr	x0, [sp, #40]
   20df0:	str	xzr, [x0]
   20df4:	mov	x0, #0xffffffffffffffff    	// #-1
   20df8:	b	212c8 <PyInit__decimal@@Base+0x95f0>
   20dfc:	ldr	x0, [sp, #32]
   20e00:	bl	253a0 <PyInit__decimal@@Base+0xd6c8>
   20e04:	cmp	w0, #0x0
   20e08:	b.eq	20e24 <PyInit__decimal@@Base+0x914c>  // b.none
   20e0c:	ldr	x0, [sp, #80]
   20e10:	add	x1, x0, #0x1
   20e14:	str	x1, [sp, #80]
   20e18:	mov	w1, #0x2d                  	// #45
   20e1c:	strb	w1, [x0]
   20e20:	b	20e70 <PyInit__decimal@@Base+0x9198>
   20e24:	ldr	w0, [sp, #28]
   20e28:	and	w0, w0, #0x40
   20e2c:	cmp	w0, #0x0
   20e30:	b.eq	20e4c <PyInit__decimal@@Base+0x9174>  // b.none
   20e34:	ldr	x0, [sp, #80]
   20e38:	add	x1, x0, #0x1
   20e3c:	str	x1, [sp, #80]
   20e40:	mov	w1, #0x20                  	// #32
   20e44:	strb	w1, [x0]
   20e48:	b	20e70 <PyInit__decimal@@Base+0x9198>
   20e4c:	ldr	w0, [sp, #28]
   20e50:	and	w0, w0, #0x80
   20e54:	cmp	w0, #0x0
   20e58:	b.eq	20e70 <PyInit__decimal@@Base+0x9198>  // b.none
   20e5c:	ldr	x0, [sp, #80]
   20e60:	add	x1, x0, #0x1
   20e64:	str	x1, [sp, #80]
   20e68:	mov	w1, #0x2b                  	// #43
   20e6c:	strb	w1, [x0]
   20e70:	ldr	x0, [sp, #32]
   20e74:	bl	25384 <PyInit__decimal@@Base+0xd6ac>
   20e78:	cmp	w0, #0x0
   20e7c:	b.eq	20f00 <PyInit__decimal@@Base+0x9228>  // b.none
   20e80:	ldr	x0, [sp, #32]
   20e84:	bl	253e4 <PyInit__decimal@@Base+0xd70c>
   20e88:	cmp	w0, #0x0
   20e8c:	b.eq	20eb0 <PyInit__decimal@@Base+0x91d8>  // b.none
   20e90:	ldr	x0, [sp, #80]
   20e94:	mov	w1, #0x614e                	// #24910
   20e98:	movk	w1, #0x4e, lsl #16
   20e9c:	str	w1, [x0]
   20ea0:	ldr	x0, [sp, #80]
   20ea4:	add	x0, x0, #0x3
   20ea8:	str	x0, [sp, #80]
   20eac:	b	20edc <PyInit__decimal@@Base+0x9204>
   20eb0:	ldr	x2, [sp, #80]
   20eb4:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   20eb8:	add	x1, x0, #0x68
   20ebc:	mov	x0, x2
   20ec0:	ldr	w2, [x1]
   20ec4:	str	w2, [x0]
   20ec8:	ldrb	w1, [x1, #4]
   20ecc:	strb	w1, [x0, #4]
   20ed0:	ldr	x0, [sp, #80]
   20ed4:	add	x0, x0, #0x4
   20ed8:	str	x0, [sp, #80]
   20edc:	ldr	x0, [sp, #32]
   20ee0:	ldr	x0, [x0, #24]
   20ee4:	cmp	x0, #0x0
   20ee8:	b.le	21284 <PyInit__decimal@@Base+0x95ac>
   20eec:	ldr	x1, [sp, #32]
   20ef0:	ldr	x0, [sp, #80]
   20ef4:	bl	20c04 <PyInit__decimal@@Base+0x8f2c>
   20ef8:	str	x0, [sp, #80]
   20efc:	b	21284 <PyInit__decimal@@Base+0x95ac>
   20f00:	ldr	x0, [sp, #32]
   20f04:	bl	25368 <PyInit__decimal@@Base+0xd690>
   20f08:	cmp	w0, #0x0
   20f0c:	b.eq	20f40 <PyInit__decimal@@Base+0x9268>  // b.none
   20f10:	ldr	x2, [sp, #80]
   20f14:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   20f18:	add	x1, x0, #0x70
   20f1c:	mov	x0, x2
   20f20:	ldr	x2, [x1]
   20f24:	str	x2, [x0]
   20f28:	ldrb	w1, [x1, #8]
   20f2c:	strb	w1, [x0, #8]
   20f30:	ldr	x0, [sp, #80]
   20f34:	add	x0, x0, #0x8
   20f38:	str	x0, [sp, #80]
   20f3c:	b	21284 <PyInit__decimal@@Base+0x95ac>
   20f40:	bl	6860 <abort@plt>
   20f44:	ldr	x0, [sp, #32]
   20f48:	ldr	x1, [x0, #16]
   20f4c:	ldr	x0, [sp, #32]
   20f50:	ldr	x0, [x0, #8]
   20f54:	add	x0, x1, x0
   20f58:	str	x0, [sp, #56]
   20f5c:	ldr	w0, [sp, #28]
   20f60:	and	w0, w0, #0x8
   20f64:	cmp	w0, #0x0
   20f68:	b.ne	21004 <PyInit__decimal@@Base+0x932c>  // b.any
   20f6c:	ldr	w0, [sp, #28]
   20f70:	and	w0, w0, #0x10
   20f74:	cmp	w0, #0x0
   20f78:	b.ne	20f98 <PyInit__decimal@@Base+0x92c0>  // b.any
   20f7c:	ldr	x0, [sp, #32]
   20f80:	ldr	x0, [x0, #8]
   20f84:	cmp	x0, #0x0
   20f88:	b.gt	20fa4 <PyInit__decimal@@Base+0x92cc>
   20f8c:	ldr	x0, [sp, #56]
   20f90:	cmn	x0, #0x5
   20f94:	b.lt	20fa4 <PyInit__decimal@@Base+0x92cc>  // b.tstop
   20f98:	ldr	x0, [sp, #56]
   20f9c:	str	x0, [sp, #16]
   20fa0:	b	21004 <PyInit__decimal@@Base+0x932c>
   20fa4:	ldr	w0, [sp, #28]
   20fa8:	and	w0, w0, #0x4
   20fac:	cmp	w0, #0x0
   20fb0:	b.eq	21004 <PyInit__decimal@@Base+0x932c>  // b.none
   20fb4:	ldr	x0, [sp, #32]
   20fb8:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   20fbc:	cmp	w0, #0x0
   20fc0:	b.eq	20fe4 <PyInit__decimal@@Base+0x930c>  // b.none
   20fc4:	ldr	x0, [sp, #32]
   20fc8:	ldr	x0, [x0, #8]
   20fcc:	add	x0, x0, #0x2
   20fd0:	mov	x1, #0x3                   	// #3
   20fd4:	bl	1f49c <PyInit__decimal@@Base+0x77c4>
   20fd8:	sub	x0, x0, #0x1
   20fdc:	str	x0, [sp, #16]
   20fe0:	b	21004 <PyInit__decimal@@Base+0x932c>
   20fe4:	ldr	x0, [sp, #56]
   20fe8:	sub	x0, x0, #0x1
   20fec:	mov	x1, #0x3                   	// #3
   20ff0:	bl	1f49c <PyInit__decimal@@Base+0x77c4>
   20ff4:	mov	x1, x0
   20ff8:	ldr	x0, [sp, #16]
   20ffc:	add	x0, x0, x1
   21000:	str	x0, [sp, #16]
   21004:	ldr	x0, [sp, #16]
   21008:	cmp	x0, #0x0
   2100c:	b.gt	2102c <PyInit__decimal@@Base+0x9354>
   21010:	ldr	x0, [sp, #32]
   21014:	ldr	x1, [x0, #16]
   21018:	ldr	x0, [sp, #16]
   2101c:	sub	x0, x1, x0
   21020:	add	x0, x0, #0x2
   21024:	str	x0, [sp, #72]
   21028:	b	21058 <PyInit__decimal@@Base+0x9380>
   2102c:	ldr	x0, [sp, #32]
   21030:	ldr	x0, [x0, #16]
   21034:	ldr	x1, [sp, #16]
   21038:	cmp	x1, x0
   2103c:	b.lt	2104c <PyInit__decimal@@Base+0x9374>  // b.tstop
   21040:	ldr	x0, [sp, #16]
   21044:	str	x0, [sp, #72]
   21048:	b	21058 <PyInit__decimal@@Base+0x9380>
   2104c:	ldr	x0, [sp, #32]
   21050:	ldr	x0, [x0, #16]
   21054:	str	x0, [sp, #72]
   21058:	ldr	x0, [sp, #72]
   2105c:	add	x0, x0, #0x1a
   21060:	str	x0, [sp, #72]
   21064:	ldr	x0, [sp, #72]
   21068:	mov	x1, #0x1                   	// #1
   2106c:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   21070:	str	x0, [sp, #88]
   21074:	ldr	x0, [sp, #88]
   21078:	str	x0, [sp, #80]
   2107c:	ldr	x0, [sp, #80]
   21080:	cmp	x0, #0x0
   21084:	b.ne	21098 <PyInit__decimal@@Base+0x93c0>  // b.any
   21088:	ldr	x0, [sp, #40]
   2108c:	str	xzr, [x0]
   21090:	mov	x0, #0xffffffffffffffff    	// #-1
   21094:	b	212c8 <PyInit__decimal@@Base+0x95f0>
   21098:	ldr	x0, [sp, #32]
   2109c:	bl	253a0 <PyInit__decimal@@Base+0xd6c8>
   210a0:	cmp	w0, #0x0
   210a4:	b.eq	210c0 <PyInit__decimal@@Base+0x93e8>  // b.none
   210a8:	ldr	x0, [sp, #80]
   210ac:	add	x1, x0, #0x1
   210b0:	str	x1, [sp, #80]
   210b4:	mov	w1, #0x2d                  	// #45
   210b8:	strb	w1, [x0]
   210bc:	b	2110c <PyInit__decimal@@Base+0x9434>
   210c0:	ldr	w0, [sp, #28]
   210c4:	and	w0, w0, #0x40
   210c8:	cmp	w0, #0x0
   210cc:	b.eq	210e8 <PyInit__decimal@@Base+0x9410>  // b.none
   210d0:	ldr	x0, [sp, #80]
   210d4:	add	x1, x0, #0x1
   210d8:	str	x1, [sp, #80]
   210dc:	mov	w1, #0x20                  	// #32
   210e0:	strb	w1, [x0]
   210e4:	b	2110c <PyInit__decimal@@Base+0x9434>
   210e8:	ldr	w0, [sp, #28]
   210ec:	and	w0, w0, #0x80
   210f0:	cmp	w0, #0x0
   210f4:	b.eq	2110c <PyInit__decimal@@Base+0x9434>  // b.none
   210f8:	ldr	x0, [sp, #80]
   210fc:	add	x1, x0, #0x1
   21100:	str	x1, [sp, #80]
   21104:	mov	w1, #0x2b                  	// #43
   21108:	strb	w1, [x0]
   2110c:	ldr	x0, [sp, #16]
   21110:	cmp	x0, #0x0
   21114:	b.gt	21190 <PyInit__decimal@@Base+0x94b8>
   21118:	ldr	x0, [sp, #80]
   2111c:	add	x1, x0, #0x1
   21120:	str	x1, [sp, #80]
   21124:	mov	w1, #0x30                  	// #48
   21128:	strb	w1, [x0]
   2112c:	ldr	x0, [sp, #80]
   21130:	add	x1, x0, #0x1
   21134:	str	x1, [sp, #80]
   21138:	mov	w1, #0x2e                  	// #46
   2113c:	strb	w1, [x0]
   21140:	str	xzr, [sp, #64]
   21144:	b	21168 <PyInit__decimal@@Base+0x9490>
   21148:	ldr	x0, [sp, #80]
   2114c:	add	x1, x0, #0x1
   21150:	str	x1, [sp, #80]
   21154:	mov	w1, #0x30                  	// #48
   21158:	strb	w1, [x0]
   2115c:	ldr	x0, [sp, #64]
   21160:	add	x0, x0, #0x1
   21164:	str	x0, [sp, #64]
   21168:	ldr	x0, [sp, #16]
   2116c:	neg	x0, x0
   21170:	ldr	x1, [sp, #64]
   21174:	cmp	x1, x0
   21178:	b.lt	21148 <PyInit__decimal@@Base+0x9470>  // b.tstop
   2117c:	ldr	x1, [sp, #32]
   21180:	ldr	x0, [sp, #80]
   21184:	bl	20c04 <PyInit__decimal@@Base+0x8f2c>
   21188:	str	x0, [sp, #80]
   2118c:	b	2121c <PyInit__decimal@@Base+0x9544>
   21190:	ldr	x0, [sp, #32]
   21194:	ldr	x0, [x0, #16]
   21198:	ldr	x1, [sp, #16]
   2119c:	cmp	x1, x0
   211a0:	b.lt	211fc <PyInit__decimal@@Base+0x9524>  // b.tstop
   211a4:	ldr	x1, [sp, #32]
   211a8:	ldr	x0, [sp, #80]
   211ac:	bl	20c04 <PyInit__decimal@@Base+0x8f2c>
   211b0:	str	x0, [sp, #80]
   211b4:	str	xzr, [sp, #64]
   211b8:	b	211dc <PyInit__decimal@@Base+0x9504>
   211bc:	ldr	x0, [sp, #80]
   211c0:	add	x1, x0, #0x1
   211c4:	str	x1, [sp, #80]
   211c8:	mov	w1, #0x30                  	// #48
   211cc:	strb	w1, [x0]
   211d0:	ldr	x0, [sp, #64]
   211d4:	add	x0, x0, #0x1
   211d8:	str	x0, [sp, #64]
   211dc:	ldr	x0, [sp, #32]
   211e0:	ldr	x0, [x0, #16]
   211e4:	ldr	x1, [sp, #16]
   211e8:	sub	x0, x1, x0
   211ec:	ldr	x1, [sp, #64]
   211f0:	cmp	x1, x0
   211f4:	b.lt	211bc <PyInit__decimal@@Base+0x94e4>  // b.tstop
   211f8:	b	2121c <PyInit__decimal@@Base+0x9544>
   211fc:	ldr	x0, [sp, #16]
   21200:	ldr	x1, [sp, #80]
   21204:	add	x0, x1, x0
   21208:	ldr	x2, [sp, #32]
   2120c:	mov	x1, x0
   21210:	ldr	x0, [sp, #80]
   21214:	bl	20cac <PyInit__decimal@@Base+0x8fd4>
   21218:	str	x0, [sp, #80]
   2121c:	ldr	x1, [sp, #56]
   21220:	ldr	x0, [sp, #16]
   21224:	cmp	x1, x0
   21228:	b.ne	2123c <PyInit__decimal@@Base+0x9564>  // b.any
   2122c:	ldr	w0, [sp, #28]
   21230:	and	w0, w0, #0x8
   21234:	cmp	w0, #0x0
   21238:	b.eq	21284 <PyInit__decimal@@Base+0x95ac>  // b.none
   2123c:	ldr	w0, [sp, #28]
   21240:	and	w0, w0, #0x1
   21244:	cmp	w0, #0x0
   21248:	b.eq	21254 <PyInit__decimal@@Base+0x957c>  // b.none
   2124c:	mov	w1, #0x45                  	// #69
   21250:	b	21258 <PyInit__decimal@@Base+0x9580>
   21254:	mov	w1, #0x65                  	// #101
   21258:	ldr	x0, [sp, #80]
   2125c:	add	x2, x0, #0x1
   21260:	str	x2, [sp, #80]
   21264:	strb	w1, [x0]
   21268:	ldr	x1, [sp, #56]
   2126c:	ldr	x0, [sp, #16]
   21270:	sub	x0, x1, x0
   21274:	mov	x1, x0
   21278:	ldr	x0, [sp, #80]
   2127c:	bl	20b88 <PyInit__decimal@@Base+0x8eb0>
   21280:	str	x0, [sp, #80]
   21284:	ldr	w0, [sp, #28]
   21288:	and	w0, w0, #0x20
   2128c:	cmp	w0, #0x0
   21290:	b.eq	212a8 <PyInit__decimal@@Base+0x95d0>  // b.none
   21294:	ldr	x0, [sp, #80]
   21298:	add	x1, x0, #0x1
   2129c:	str	x1, [sp, #80]
   212a0:	mov	w1, #0x25                  	// #37
   212a4:	strb	w1, [x0]
   212a8:	ldr	x0, [sp, #80]
   212ac:	strb	wzr, [x0]
   212b0:	ldr	x0, [sp, #40]
   212b4:	ldr	x1, [sp, #88]
   212b8:	str	x1, [x0]
   212bc:	ldr	x1, [sp, #80]
   212c0:	ldr	x0, [sp, #88]
   212c4:	sub	x0, x1, x0
   212c8:	ldp	x29, x30, [sp], #96
   212cc:	ret
   212d0:	stp	x29, x30, [sp, #-48]!
   212d4:	mov	x29, sp
   212d8:	str	x0, [sp, #24]
   212dc:	str	w1, [sp, #20]
   212e0:	mov	w0, #0x2                   	// #2
   212e4:	str	w0, [sp, #44]
   212e8:	ldr	w0, [sp, #20]
   212ec:	cmp	w0, #0x0
   212f0:	cset	w0, ne  // ne = any
   212f4:	and	w0, w0, #0xff
   212f8:	mov	w1, w0
   212fc:	ldr	w0, [sp, #44]
   21300:	orr	w0, w0, w1
   21304:	str	w0, [sp, #44]
   21308:	add	x0, sp, #0x20
   2130c:	mov	x3, #0x1                   	// #1
   21310:	ldr	w2, [sp, #44]
   21314:	ldr	x1, [sp, #24]
   21318:	bl	20d58 <PyInit__decimal@@Base+0x9080>
   2131c:	ldr	x0, [sp, #32]
   21320:	ldp	x29, x30, [sp], #48
   21324:	ret
   21328:	stp	x29, x30, [sp, #-48]!
   2132c:	mov	x29, sp
   21330:	str	x0, [sp, #24]
   21334:	str	w1, [sp, #20]
   21338:	mov	w0, #0x4                   	// #4
   2133c:	str	w0, [sp, #44]
   21340:	ldr	w0, [sp, #20]
   21344:	cmp	w0, #0x0
   21348:	cset	w0, ne  // ne = any
   2134c:	and	w0, w0, #0xff
   21350:	mov	w1, w0
   21354:	ldr	w0, [sp, #44]
   21358:	orr	w0, w0, w1
   2135c:	str	w0, [sp, #44]
   21360:	add	x0, sp, #0x20
   21364:	mov	x3, #0x1                   	// #1
   21368:	ldr	w2, [sp, #44]
   2136c:	ldr	x1, [sp, #24]
   21370:	bl	20d58 <PyInit__decimal@@Base+0x9080>
   21374:	ldr	x0, [sp, #32]
   21378:	ldp	x29, x30, [sp], #48
   2137c:	ret
   21380:	stp	x29, x30, [sp, #-64]!
   21384:	mov	x29, sp
   21388:	str	x0, [sp, #40]
   2138c:	str	x1, [sp, #32]
   21390:	str	w2, [sp, #28]
   21394:	mov	w0, #0x2                   	// #2
   21398:	str	w0, [sp, #60]
   2139c:	ldr	w0, [sp, #28]
   213a0:	cmp	w0, #0x0
   213a4:	cset	w0, ne  // ne = any
   213a8:	and	w0, w0, #0xff
   213ac:	mov	w1, w0
   213b0:	ldr	w0, [sp, #60]
   213b4:	orr	w0, w0, w1
   213b8:	str	w0, [sp, #60]
   213bc:	mov	x3, #0x1                   	// #1
   213c0:	ldr	w2, [sp, #60]
   213c4:	ldr	x1, [sp, #32]
   213c8:	ldr	x0, [sp, #40]
   213cc:	bl	20d58 <PyInit__decimal@@Base+0x9080>
   213d0:	ldp	x29, x30, [sp], #64
   213d4:	ret
   213d8:	stp	x29, x30, [sp, #-64]!
   213dc:	mov	x29, sp
   213e0:	str	x0, [sp, #40]
   213e4:	str	x1, [sp, #32]
   213e8:	str	w2, [sp, #28]
   213ec:	mov	w0, #0x4                   	// #4
   213f0:	str	w0, [sp, #60]
   213f4:	ldr	w0, [sp, #28]
   213f8:	cmp	w0, #0x0
   213fc:	cset	w0, ne  // ne = any
   21400:	and	w0, w0, #0xff
   21404:	mov	w1, w0
   21408:	ldr	w0, [sp, #60]
   2140c:	orr	w0, w0, w1
   21410:	str	w0, [sp, #60]
   21414:	mov	x3, #0x1                   	// #1
   21418:	ldr	w2, [sp, #60]
   2141c:	ldr	x1, [sp, #32]
   21420:	ldr	x0, [sp, #40]
   21424:	bl	20d58 <PyInit__decimal@@Base+0x9080>
   21428:	ldp	x29, x30, [sp], #64
   2142c:	ret
   21430:	sub	sp, sp, #0x30
   21434:	str	x0, [sp, #8]
   21438:	str	x1, [sp]
   2143c:	ldr	x0, [sp]
   21440:	str	x0, [sp, #40]
   21444:	ldr	x0, [sp, #40]
   21448:	ldrb	w0, [x0]
   2144c:	cmp	w0, #0x0
   21450:	b.ne	21464 <PyInit__decimal@@Base+0x978c>  // b.any
   21454:	ldr	x0, [sp, #8]
   21458:	strb	wzr, [x0]
   2145c:	mov	w0, #0x0                   	// #0
   21460:	b	21708 <PyInit__decimal@@Base+0x9a30>
   21464:	ldr	x0, [sp, #40]
   21468:	ldrb	w0, [x0]
   2146c:	sxtb	w0, w0
   21470:	cmp	w0, #0x0
   21474:	b.lt	2149c <PyInit__decimal@@Base+0x97c4>  // b.tstop
   21478:	ldr	x0, [sp, #40]
   2147c:	ldrb	w1, [x0]
   21480:	ldr	x0, [sp, #8]
   21484:	strb	w1, [x0]
   21488:	ldr	x0, [sp, #8]
   2148c:	add	x0, x0, #0x1
   21490:	strb	wzr, [x0]
   21494:	mov	w0, #0x1                   	// #1
   21498:	b	21708 <PyInit__decimal@@Base+0x9a30>
   2149c:	ldr	x0, [sp, #40]
   214a0:	ldrb	w0, [x0]
   214a4:	cmp	w0, #0xc1
   214a8:	b.ls	214d8 <PyInit__decimal@@Base+0x9800>  // b.plast
   214ac:	ldr	x0, [sp, #40]
   214b0:	ldrb	w0, [x0]
   214b4:	cmp	w0, #0xdf
   214b8:	b.hi	214d8 <PyInit__decimal@@Base+0x9800>  // b.pmore
   214bc:	mov	w0, #0xffffff80            	// #-128
   214c0:	strb	w0, [sp, #39]
   214c4:	mov	w0, #0xffffffbf            	// #-65
   214c8:	strb	w0, [sp, #38]
   214cc:	mov	w0, #0x2                   	// #2
   214d0:	str	w0, [sp, #32]
   214d4:	b	21608 <PyInit__decimal@@Base+0x9930>
   214d8:	ldr	x0, [sp, #40]
   214dc:	ldrb	w0, [x0]
   214e0:	cmp	w0, #0xe0
   214e4:	b.ne	21504 <PyInit__decimal@@Base+0x982c>  // b.any
   214e8:	mov	w0, #0xffffffa0            	// #-96
   214ec:	strb	w0, [sp, #39]
   214f0:	mov	w0, #0xffffffbf            	// #-65
   214f4:	strb	w0, [sp, #38]
   214f8:	mov	w0, #0x3                   	// #3
   214fc:	str	w0, [sp, #32]
   21500:	b	21608 <PyInit__decimal@@Base+0x9930>
   21504:	ldr	x0, [sp, #40]
   21508:	ldrb	w0, [x0]
   2150c:	cmp	w0, #0xec
   21510:	b.hi	21530 <PyInit__decimal@@Base+0x9858>  // b.pmore
   21514:	mov	w0, #0xffffff80            	// #-128
   21518:	strb	w0, [sp, #39]
   2151c:	mov	w0, #0xffffffbf            	// #-65
   21520:	strb	w0, [sp, #38]
   21524:	mov	w0, #0x3                   	// #3
   21528:	str	w0, [sp, #32]
   2152c:	b	21608 <PyInit__decimal@@Base+0x9930>
   21530:	ldr	x0, [sp, #40]
   21534:	ldrb	w0, [x0]
   21538:	cmp	w0, #0xed
   2153c:	b.ne	2155c <PyInit__decimal@@Base+0x9884>  // b.any
   21540:	mov	w0, #0xffffff80            	// #-128
   21544:	strb	w0, [sp, #39]
   21548:	mov	w0, #0xffffff9f            	// #-97
   2154c:	strb	w0, [sp, #38]
   21550:	mov	w0, #0x3                   	// #3
   21554:	str	w0, [sp, #32]
   21558:	b	21608 <PyInit__decimal@@Base+0x9930>
   2155c:	ldr	x0, [sp, #40]
   21560:	ldrb	w0, [x0]
   21564:	cmp	w0, #0xef
   21568:	b.hi	21588 <PyInit__decimal@@Base+0x98b0>  // b.pmore
   2156c:	mov	w0, #0xffffff80            	// #-128
   21570:	strb	w0, [sp, #39]
   21574:	mov	w0, #0xffffffbf            	// #-65
   21578:	strb	w0, [sp, #38]
   2157c:	mov	w0, #0x3                   	// #3
   21580:	str	w0, [sp, #32]
   21584:	b	21608 <PyInit__decimal@@Base+0x9930>
   21588:	ldr	x0, [sp, #40]
   2158c:	ldrb	w0, [x0]
   21590:	cmp	w0, #0xf0
   21594:	b.ne	215b4 <PyInit__decimal@@Base+0x98dc>  // b.any
   21598:	mov	w0, #0xffffff90            	// #-112
   2159c:	strb	w0, [sp, #39]
   215a0:	mov	w0, #0xffffffbf            	// #-65
   215a4:	strb	w0, [sp, #38]
   215a8:	mov	w0, #0x4                   	// #4
   215ac:	str	w0, [sp, #32]
   215b0:	b	21608 <PyInit__decimal@@Base+0x9930>
   215b4:	ldr	x0, [sp, #40]
   215b8:	ldrb	w0, [x0]
   215bc:	cmp	w0, #0xf3
   215c0:	b.hi	215e0 <PyInit__decimal@@Base+0x9908>  // b.pmore
   215c4:	mov	w0, #0xffffff80            	// #-128
   215c8:	strb	w0, [sp, #39]
   215cc:	mov	w0, #0xffffffbf            	// #-65
   215d0:	strb	w0, [sp, #38]
   215d4:	mov	w0, #0x4                   	// #4
   215d8:	str	w0, [sp, #32]
   215dc:	b	21608 <PyInit__decimal@@Base+0x9930>
   215e0:	ldr	x0, [sp, #40]
   215e4:	ldrb	w0, [x0]
   215e8:	cmp	w0, #0xf4
   215ec:	b.ne	216e8 <PyInit__decimal@@Base+0x9a10>  // b.any
   215f0:	mov	w0, #0xffffff80            	// #-128
   215f4:	strb	w0, [sp, #39]
   215f8:	mov	w0, #0xffffff8f            	// #-113
   215fc:	strb	w0, [sp, #38]
   21600:	mov	w0, #0x4                   	// #4
   21604:	str	w0, [sp, #32]
   21608:	ldr	x0, [sp, #40]
   2160c:	add	x1, x0, #0x1
   21610:	str	x1, [sp, #40]
   21614:	ldrb	w1, [x0]
   21618:	ldr	x0, [sp, #8]
   2161c:	strb	w1, [x0]
   21620:	ldr	x0, [sp, #40]
   21624:	ldrb	w0, [x0]
   21628:	ldrb	w1, [sp, #39]
   2162c:	cmp	w1, w0
   21630:	b.hi	216f0 <PyInit__decimal@@Base+0x9a18>  // b.pmore
   21634:	ldr	x0, [sp, #40]
   21638:	ldrb	w0, [x0]
   2163c:	ldrb	w1, [sp, #38]
   21640:	cmp	w1, w0
   21644:	b.cc	216f0 <PyInit__decimal@@Base+0x9a18>  // b.lo, b.ul, b.last
   21648:	ldr	x0, [sp, #40]
   2164c:	add	x1, x0, #0x1
   21650:	str	x1, [sp, #40]
   21654:	ldr	x1, [sp, #8]
   21658:	add	x1, x1, #0x1
   2165c:	ldrb	w0, [x0]
   21660:	strb	w0, [x1]
   21664:	mov	w0, #0x2                   	// #2
   21668:	str	w0, [sp, #28]
   2166c:	b	216c0 <PyInit__decimal@@Base+0x99e8>
   21670:	ldr	x0, [sp, #40]
   21674:	ldrb	w0, [x0]
   21678:	sxtb	w0, w0
   2167c:	cmp	w0, #0x0
   21680:	b.ge	216f8 <PyInit__decimal@@Base+0x9a20>  // b.tcont
   21684:	ldr	x0, [sp, #40]
   21688:	ldrb	w0, [x0]
   2168c:	cmp	w0, #0xbf
   21690:	b.hi	216f8 <PyInit__decimal@@Base+0x9a20>  // b.pmore
   21694:	ldr	x0, [sp, #40]
   21698:	add	x1, x0, #0x1
   2169c:	str	x1, [sp, #40]
   216a0:	ldrsw	x1, [sp, #28]
   216a4:	ldr	x2, [sp, #8]
   216a8:	add	x1, x2, x1
   216ac:	ldrb	w0, [x0]
   216b0:	strb	w0, [x1]
   216b4:	ldr	w0, [sp, #28]
   216b8:	add	w0, w0, #0x1
   216bc:	str	w0, [sp, #28]
   216c0:	ldr	w1, [sp, #28]
   216c4:	ldr	w0, [sp, #32]
   216c8:	cmp	w1, w0
   216cc:	b.lt	21670 <PyInit__decimal@@Base+0x9998>  // b.tstop
   216d0:	ldrsw	x0, [sp, #28]
   216d4:	ldr	x1, [sp, #8]
   216d8:	add	x0, x1, x0
   216dc:	strb	wzr, [x0]
   216e0:	ldr	w0, [sp, #32]
   216e4:	b	21708 <PyInit__decimal@@Base+0x9a30>
   216e8:	nop
   216ec:	b	216fc <PyInit__decimal@@Base+0x9a24>
   216f0:	nop
   216f4:	b	216fc <PyInit__decimal@@Base+0x9a24>
   216f8:	nop
   216fc:	ldr	x0, [sp, #8]
   21700:	strb	wzr, [x0]
   21704:	mov	w0, #0xffffffff            	// #-1
   21708:	add	sp, sp, #0x30
   2170c:	ret
   21710:	stp	x29, x30, [sp, #-48]!
   21714:	mov	x29, sp
   21718:	str	x0, [sp, #24]
   2171c:	ldr	x0, [sp, #24]
   21720:	ldr	x0, [x0, #24]
   21724:	bl	6570 <strlen@plt>
   21728:	str	x0, [sp, #40]
   2172c:	ldr	x0, [sp, #40]
   21730:	cmp	x0, #0x0
   21734:	b.eq	21744 <PyInit__decimal@@Base+0x9a6c>  // b.none
   21738:	ldr	x0, [sp, #40]
   2173c:	cmp	x0, #0x4
   21740:	b.ls	2174c <PyInit__decimal@@Base+0x9a74>  // b.plast
   21744:	mov	w0, #0xffffffff            	// #-1
   21748:	b	2176c <PyInit__decimal@@Base+0x9a94>
   2174c:	ldr	x0, [sp, #24]
   21750:	ldr	x0, [x0, #32]
   21754:	bl	6570 <strlen@plt>
   21758:	cmp	x0, #0x4
   2175c:	b.ls	21768 <PyInit__decimal@@Base+0x9a90>  // b.plast
   21760:	mov	w0, #0xffffffff            	// #-1
   21764:	b	2176c <PyInit__decimal@@Base+0x9a94>
   21768:	mov	w0, #0x0                   	// #0
   2176c:	ldp	x29, x30, [sp], #48
   21770:	ret
   21774:	stp	x29, x30, [sp, #-80]!
   21778:	mov	x29, sp
   2177c:	str	x0, [sp, #40]
   21780:	str	x1, [sp, #32]
   21784:	str	w2, [sp, #28]
   21788:	ldr	x0, [sp, #32]
   2178c:	str	x0, [sp, #56]
   21790:	str	wzr, [sp, #76]
   21794:	ldr	x0, [sp, #40]
   21798:	str	xzr, [x0]
   2179c:	ldr	x0, [sp, #40]
   217a0:	mov	x1, #0xffffffffffffffff    	// #-1
   217a4:	str	x1, [x0, #8]
   217a8:	ldr	w0, [sp, #28]
   217ac:	cmp	w0, #0x0
   217b0:	b.eq	217bc <PyInit__decimal@@Base+0x9ae4>  // b.none
   217b4:	mov	w0, #0x47                  	// #71
   217b8:	b	217c0 <PyInit__decimal@@Base+0x9ae8>
   217bc:	mov	w0, #0x67                  	// #103
   217c0:	ldr	x1, [sp, #40]
   217c4:	strb	w0, [x1, #16]
   217c8:	ldr	x0, [sp, #40]
   217cc:	mov	w1, #0x3e                  	// #62
   217d0:	strb	w1, [x0, #17]
   217d4:	ldr	x0, [sp, #40]
   217d8:	mov	w1, #0x2d                  	// #45
   217dc:	strb	w1, [x0, #18]
   217e0:	ldr	x0, [sp, #40]
   217e4:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   217e8:	add	x1, x1, #0x80
   217ec:	str	x1, [x0, #24]
   217f0:	ldr	x0, [sp, #40]
   217f4:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   217f8:	add	x1, x1, #0x80
   217fc:	str	x1, [x0, #32]
   21800:	ldr	x0, [sp, #40]
   21804:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   21808:	add	x1, x1, #0x80
   2180c:	str	x1, [x0, #40]
   21810:	ldr	x0, [sp, #40]
   21814:	add	x0, x0, #0x13
   21818:	ldr	x1, [sp, #56]
   2181c:	bl	21430 <PyInit__decimal@@Base+0x9758>
   21820:	str	w0, [sp, #72]
   21824:	ldr	w0, [sp, #72]
   21828:	cmp	w0, #0x0
   2182c:	b.ge	21838 <PyInit__decimal@@Base+0x9b60>  // b.tcont
   21830:	mov	w0, #0x0                   	// #0
   21834:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21838:	ldr	x0, [sp, #56]
   2183c:	ldrb	w0, [x0]
   21840:	cmp	w0, #0x0
   21844:	b.eq	218dc <PyInit__decimal@@Base+0x9c04>  // b.none
   21848:	ldr	x1, [sp, #56]
   2184c:	ldrsw	x0, [sp, #72]
   21850:	add	x0, x1, x0
   21854:	ldrb	w0, [x0]
   21858:	cmp	w0, #0x3c
   2185c:	b.eq	218a8 <PyInit__decimal@@Base+0x9bd0>  // b.none
   21860:	ldr	x1, [sp, #56]
   21864:	ldrsw	x0, [sp, #72]
   21868:	add	x0, x1, x0
   2186c:	ldrb	w0, [x0]
   21870:	cmp	w0, #0x3e
   21874:	b.eq	218a8 <PyInit__decimal@@Base+0x9bd0>  // b.none
   21878:	ldr	x1, [sp, #56]
   2187c:	ldrsw	x0, [sp, #72]
   21880:	add	x0, x1, x0
   21884:	ldrb	w0, [x0]
   21888:	cmp	w0, #0x3d
   2188c:	b.eq	218a8 <PyInit__decimal@@Base+0x9bd0>  // b.none
   21890:	ldr	x1, [sp, #56]
   21894:	ldrsw	x0, [sp, #72]
   21898:	add	x0, x1, x0
   2189c:	ldrb	w0, [x0]
   218a0:	cmp	w0, #0x5e
   218a4:	b.ne	218dc <PyInit__decimal@@Base+0x9c04>  // b.any
   218a8:	ldr	x1, [sp, #56]
   218ac:	ldrsw	x0, [sp, #72]
   218b0:	add	x0, x1, x0
   218b4:	str	x0, [sp, #56]
   218b8:	ldr	x0, [sp, #56]
   218bc:	add	x1, x0, #0x1
   218c0:	str	x1, [sp, #56]
   218c4:	ldrb	w1, [x0]
   218c8:	ldr	x0, [sp, #40]
   218cc:	strb	w1, [x0, #17]
   218d0:	mov	w0, #0x1                   	// #1
   218d4:	str	w0, [sp, #76]
   218d8:	b	21950 <PyInit__decimal@@Base+0x9c78>
   218dc:	ldr	x0, [sp, #40]
   218e0:	mov	w1, #0x20                  	// #32
   218e4:	strb	w1, [x0, #19]
   218e8:	ldr	x0, [sp, #40]
   218ec:	strb	wzr, [x0, #20]
   218f0:	ldr	x0, [sp, #56]
   218f4:	ldrb	w0, [x0]
   218f8:	cmp	w0, #0x3c
   218fc:	b.eq	21930 <PyInit__decimal@@Base+0x9c58>  // b.none
   21900:	ldr	x0, [sp, #56]
   21904:	ldrb	w0, [x0]
   21908:	cmp	w0, #0x3e
   2190c:	b.eq	21930 <PyInit__decimal@@Base+0x9c58>  // b.none
   21910:	ldr	x0, [sp, #56]
   21914:	ldrb	w0, [x0]
   21918:	cmp	w0, #0x3d
   2191c:	b.eq	21930 <PyInit__decimal@@Base+0x9c58>  // b.none
   21920:	ldr	x0, [sp, #56]
   21924:	ldrb	w0, [x0]
   21928:	cmp	w0, #0x5e
   2192c:	b.ne	21950 <PyInit__decimal@@Base+0x9c78>  // b.any
   21930:	ldr	x0, [sp, #56]
   21934:	add	x1, x0, #0x1
   21938:	str	x1, [sp, #56]
   2193c:	ldrb	w1, [x0]
   21940:	ldr	x0, [sp, #40]
   21944:	strb	w1, [x0, #17]
   21948:	mov	w0, #0x1                   	// #1
   2194c:	str	w0, [sp, #76]
   21950:	ldr	x0, [sp, #56]
   21954:	ldrb	w0, [x0]
   21958:	cmp	w0, #0x2b
   2195c:	b.eq	21980 <PyInit__decimal@@Base+0x9ca8>  // b.none
   21960:	ldr	x0, [sp, #56]
   21964:	ldrb	w0, [x0]
   21968:	cmp	w0, #0x2d
   2196c:	b.eq	21980 <PyInit__decimal@@Base+0x9ca8>  // b.none
   21970:	ldr	x0, [sp, #56]
   21974:	ldrb	w0, [x0]
   21978:	cmp	w0, #0x20
   2197c:	b.ne	21998 <PyInit__decimal@@Base+0x9cc0>  // b.any
   21980:	ldr	x0, [sp, #56]
   21984:	add	x1, x0, #0x1
   21988:	str	x1, [sp, #56]
   2198c:	ldrb	w1, [x0]
   21990:	ldr	x0, [sp, #40]
   21994:	strb	w1, [x0, #18]
   21998:	ldr	x0, [sp, #56]
   2199c:	ldrb	w0, [x0]
   219a0:	cmp	w0, #0x30
   219a4:	b.ne	219e8 <PyInit__decimal@@Base+0x9d10>  // b.any
   219a8:	ldr	w0, [sp, #76]
   219ac:	cmp	w0, #0x0
   219b0:	b.eq	219bc <PyInit__decimal@@Base+0x9ce4>  // b.none
   219b4:	mov	w0, #0x0                   	// #0
   219b8:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   219bc:	ldr	x0, [sp, #40]
   219c0:	mov	w1, #0x7a                  	// #122
   219c4:	strb	w1, [x0, #17]
   219c8:	ldr	x0, [sp, #56]
   219cc:	add	x1, x0, #0x1
   219d0:	str	x1, [sp, #56]
   219d4:	ldrb	w1, [x0]
   219d8:	ldr	x0, [sp, #40]
   219dc:	strb	w1, [x0, #19]
   219e0:	ldr	x0, [sp, #40]
   219e4:	strb	wzr, [x0, #20]
   219e8:	bl	6920 <__ctype_b_loc@plt>
   219ec:	ldr	x1, [x0]
   219f0:	ldr	x0, [sp, #56]
   219f4:	ldrb	w0, [x0]
   219f8:	and	x0, x0, #0xff
   219fc:	lsl	x0, x0, #1
   21a00:	add	x0, x1, x0
   21a04:	ldrh	w0, [x0]
   21a08:	and	w0, w0, #0x800
   21a0c:	cmp	w0, #0x0
   21a10:	b.eq	21a78 <PyInit__decimal@@Base+0x9da0>  // b.none
   21a14:	ldr	x0, [sp, #56]
   21a18:	ldrb	w0, [x0]
   21a1c:	cmp	w0, #0x30
   21a20:	b.ne	21a2c <PyInit__decimal@@Base+0x9d54>  // b.any
   21a24:	mov	w0, #0x0                   	// #0
   21a28:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21a2c:	bl	6ad0 <__errno_location@plt>
   21a30:	str	wzr, [x0]
   21a34:	ldr	x0, [sp, #56]
   21a38:	add	x1, sp, #0x38
   21a3c:	mov	w2, #0xa                   	// #10
   21a40:	bl	65f0 <strtoll@plt>
   21a44:	mov	x1, x0
   21a48:	ldr	x0, [sp, #40]
   21a4c:	str	x1, [x0]
   21a50:	bl	6ad0 <__errno_location@plt>
   21a54:	ldr	w0, [x0]
   21a58:	cmp	w0, #0x22
   21a5c:	b.eq	21a70 <PyInit__decimal@@Base+0x9d98>  // b.none
   21a60:	bl	6ad0 <__errno_location@plt>
   21a64:	ldr	w0, [x0]
   21a68:	cmp	w0, #0x16
   21a6c:	b.ne	21a78 <PyInit__decimal@@Base+0x9da0>  // b.any
   21a70:	mov	w0, #0x0                   	// #0
   21a74:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21a78:	ldr	x0, [sp, #56]
   21a7c:	ldrb	w0, [x0]
   21a80:	cmp	w0, #0x2c
   21a84:	b.ne	21ac4 <PyInit__decimal@@Base+0x9dec>  // b.any
   21a88:	ldr	x0, [sp, #40]
   21a8c:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   21a90:	add	x1, x1, #0x88
   21a94:	str	x1, [x0, #24]
   21a98:	ldr	x0, [sp, #40]
   21a9c:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   21aa0:	add	x1, x1, #0x90
   21aa4:	str	x1, [x0, #32]
   21aa8:	ldr	x0, [sp, #40]
   21aac:	adrp	x1, 49000 <PyInit__decimal@@Base+0x31328>
   21ab0:	add	x1, x1, #0x98
   21ab4:	str	x1, [x0, #40]
   21ab8:	ldr	x0, [sp, #56]
   21abc:	add	x0, x0, #0x1
   21ac0:	str	x0, [sp, #56]
   21ac4:	ldr	x0, [sp, #56]
   21ac8:	ldrb	w0, [x0]
   21acc:	cmp	w0, #0x2e
   21ad0:	b.ne	21b60 <PyInit__decimal@@Base+0x9e88>  // b.any
   21ad4:	ldr	x0, [sp, #56]
   21ad8:	add	x0, x0, #0x1
   21adc:	str	x0, [sp, #56]
   21ae0:	bl	6920 <__ctype_b_loc@plt>
   21ae4:	ldr	x1, [x0]
   21ae8:	ldr	x0, [sp, #56]
   21aec:	ldrb	w0, [x0]
   21af0:	and	x0, x0, #0xff
   21af4:	lsl	x0, x0, #1
   21af8:	add	x0, x1, x0
   21afc:	ldrh	w0, [x0]
   21b00:	and	w0, w0, #0x800
   21b04:	cmp	w0, #0x0
   21b08:	b.ne	21b14 <PyInit__decimal@@Base+0x9e3c>  // b.any
   21b0c:	mov	w0, #0x0                   	// #0
   21b10:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21b14:	bl	6ad0 <__errno_location@plt>
   21b18:	str	wzr, [x0]
   21b1c:	ldr	x0, [sp, #56]
   21b20:	add	x1, sp, #0x38
   21b24:	mov	w2, #0xa                   	// #10
   21b28:	bl	65f0 <strtoll@plt>
   21b2c:	mov	x1, x0
   21b30:	ldr	x0, [sp, #40]
   21b34:	str	x1, [x0, #8]
   21b38:	bl	6ad0 <__errno_location@plt>
   21b3c:	ldr	w0, [x0]
   21b40:	cmp	w0, #0x22
   21b44:	b.eq	21b58 <PyInit__decimal@@Base+0x9e80>  // b.none
   21b48:	bl	6ad0 <__errno_location@plt>
   21b4c:	ldr	w0, [x0]
   21b50:	cmp	w0, #0x16
   21b54:	b.ne	21b60 <PyInit__decimal@@Base+0x9e88>  // b.any
   21b58:	mov	w0, #0x0                   	// #0
   21b5c:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21b60:	ldr	x0, [sp, #56]
   21b64:	ldrb	w0, [x0]
   21b68:	cmp	w0, #0x45
   21b6c:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21b70:	ldr	x0, [sp, #56]
   21b74:	ldrb	w0, [x0]
   21b78:	cmp	w0, #0x65
   21b7c:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21b80:	ldr	x0, [sp, #56]
   21b84:	ldrb	w0, [x0]
   21b88:	cmp	w0, #0x46
   21b8c:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21b90:	ldr	x0, [sp, #56]
   21b94:	ldrb	w0, [x0]
   21b98:	cmp	w0, #0x66
   21b9c:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21ba0:	ldr	x0, [sp, #56]
   21ba4:	ldrb	w0, [x0]
   21ba8:	cmp	w0, #0x47
   21bac:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21bb0:	ldr	x0, [sp, #56]
   21bb4:	ldrb	w0, [x0]
   21bb8:	cmp	w0, #0x67
   21bbc:	b.eq	21bd0 <PyInit__decimal@@Base+0x9ef8>  // b.none
   21bc0:	ldr	x0, [sp, #56]
   21bc4:	ldrb	w0, [x0]
   21bc8:	cmp	w0, #0x25
   21bcc:	b.ne	21bec <PyInit__decimal@@Base+0x9f14>  // b.any
   21bd0:	ldr	x0, [sp, #56]
   21bd4:	add	x1, x0, #0x1
   21bd8:	str	x1, [sp, #56]
   21bdc:	ldrb	w1, [x0]
   21be0:	ldr	x0, [sp, #40]
   21be4:	strb	w1, [x0, #16]
   21be8:	b	21cb4 <PyInit__decimal@@Base+0x9fdc>
   21bec:	ldr	x0, [sp, #56]
   21bf0:	ldrb	w0, [x0]
   21bf4:	cmp	w0, #0x4e
   21bf8:	b.eq	21c0c <PyInit__decimal@@Base+0x9f34>  // b.none
   21bfc:	ldr	x0, [sp, #56]
   21c00:	ldrb	w0, [x0]
   21c04:	cmp	w0, #0x6e
   21c08:	b.ne	21cb4 <PyInit__decimal@@Base+0x9fdc>  // b.any
   21c0c:	ldr	x0, [sp, #40]
   21c10:	ldr	x0, [x0, #32]
   21c14:	ldrb	w0, [x0]
   21c18:	cmp	w0, #0x0
   21c1c:	b.eq	21c28 <PyInit__decimal@@Base+0x9f50>  // b.none
   21c20:	mov	w0, #0x0                   	// #0
   21c24:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21c28:	ldr	x0, [sp, #56]
   21c2c:	add	x1, x0, #0x1
   21c30:	str	x1, [sp, #56]
   21c34:	ldrb	w1, [x0]
   21c38:	ldr	x0, [sp, #40]
   21c3c:	strb	w1, [x0, #16]
   21c40:	ldr	x0, [sp, #40]
   21c44:	ldrb	w0, [x0, #16]
   21c48:	cmp	w0, #0x4e
   21c4c:	b.ne	21c58 <PyInit__decimal@@Base+0x9f80>  // b.any
   21c50:	mov	w0, #0x47                  	// #71
   21c54:	b	21c5c <PyInit__decimal@@Base+0x9f84>
   21c58:	mov	w0, #0x67                  	// #103
   21c5c:	ldr	x1, [sp, #40]
   21c60:	strb	w0, [x1, #16]
   21c64:	bl	66d0 <localeconv@plt>
   21c68:	str	x0, [sp, #64]
   21c6c:	ldr	x0, [sp, #64]
   21c70:	ldr	x1, [x0]
   21c74:	ldr	x0, [sp, #40]
   21c78:	str	x1, [x0, #24]
   21c7c:	ldr	x0, [sp, #64]
   21c80:	ldr	x1, [x0, #8]
   21c84:	ldr	x0, [sp, #40]
   21c88:	str	x1, [x0, #32]
   21c8c:	ldr	x0, [sp, #64]
   21c90:	ldr	x1, [x0, #16]
   21c94:	ldr	x0, [sp, #40]
   21c98:	str	x1, [x0, #40]
   21c9c:	ldr	x0, [sp, #40]
   21ca0:	bl	21710 <PyInit__decimal@@Base+0x9a38>
   21ca4:	cmp	w0, #0x0
   21ca8:	b.ge	21cb4 <PyInit__decimal@@Base+0x9fdc>  // b.tcont
   21cac:	mov	w0, #0x0                   	// #0
   21cb0:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21cb4:	ldr	x0, [sp, #56]
   21cb8:	ldrb	w0, [x0]
   21cbc:	cmp	w0, #0x0
   21cc0:	b.eq	21ccc <PyInit__decimal@@Base+0x9ff4>  // b.none
   21cc4:	mov	w0, #0x0                   	// #0
   21cc8:	b	21cd0 <PyInit__decimal@@Base+0x9ff8>
   21ccc:	mov	w0, #0x1                   	// #1
   21cd0:	ldp	x29, x30, [sp], #80
   21cd4:	ret
   21cd8:	sub	sp, sp, #0x20
   21cdc:	str	x0, [sp, #24]
   21ce0:	str	x1, [sp, #16]
   21ce4:	str	x2, [sp, #8]
   21ce8:	b	21d0c <PyInit__decimal@@Base+0xa034>
   21cec:	ldr	x0, [sp, #8]
   21cf0:	ldr	x1, [sp, #16]
   21cf4:	add	x1, x1, x0
   21cf8:	ldr	x0, [sp, #8]
   21cfc:	ldr	x2, [sp, #24]
   21d00:	add	x0, x2, x0
   21d04:	ldrb	w1, [x1]
   21d08:	strb	w1, [x0]
   21d0c:	ldr	x0, [sp, #8]
   21d10:	sub	x0, x0, #0x1
   21d14:	str	x0, [sp, #8]
   21d18:	ldr	x0, [sp, #8]
   21d1c:	cmp	x0, #0x0
   21d20:	b.ge	21cec <PyInit__decimal@@Base+0xa014>  // b.tcont
   21d24:	nop
   21d28:	nop
   21d2c:	add	sp, sp, #0x20
   21d30:	ret
   21d34:	stp	x29, x30, [sp, #-48]!
   21d38:	mov	x29, sp
   21d3c:	str	x0, [sp, #40]
   21d40:	str	x1, [sp, #32]
   21d44:	str	x2, [sp, #24]
   21d48:	ldr	x0, [sp, #40]
   21d4c:	ldr	x1, [x0]
   21d50:	ldr	x0, [sp, #24]
   21d54:	add	x1, x1, x0
   21d58:	ldr	x0, [sp, #40]
   21d5c:	str	x1, [x0]
   21d60:	ldr	x0, [sp, #40]
   21d64:	ldr	x1, [x0, #8]
   21d68:	ldr	x0, [sp, #24]
   21d6c:	cmp	x0, #0x0
   21d70:	b.le	21d7c <PyInit__decimal@@Base+0xa0a4>
   21d74:	mov	x0, #0x1                   	// #1
   21d78:	b	21d80 <PyInit__decimal@@Base+0xa0a8>
   21d7c:	mov	x0, #0x0                   	// #0
   21d80:	add	x1, x0, x1
   21d84:	ldr	x0, [sp, #40]
   21d88:	str	x1, [x0, #8]
   21d8c:	ldr	x0, [sp, #40]
   21d90:	ldr	x1, [x0, #16]
   21d94:	ldr	x0, [sp, #24]
   21d98:	sub	x1, x1, x0
   21d9c:	ldr	x0, [sp, #40]
   21da0:	str	x1, [x0, #16]
   21da4:	ldr	x0, [sp, #40]
   21da8:	ldr	x0, [x0, #24]
   21dac:	cmp	x0, #0x0
   21db0:	b.eq	21dd4 <PyInit__decimal@@Base+0xa0fc>  // b.none
   21db4:	ldr	x0, [sp, #40]
   21db8:	ldr	x0, [x0, #24]
   21dbc:	ldr	x1, [sp, #40]
   21dc0:	ldr	x1, [x1, #16]
   21dc4:	add	x0, x0, x1
   21dc8:	ldr	x2, [sp, #24]
   21dcc:	ldr	x1, [sp, #32]
   21dd0:	bl	21cd8 <PyInit__decimal@@Base+0xa000>
   21dd4:	nop
   21dd8:	ldp	x29, x30, [sp], #48
   21ddc:	ret
   21de0:	stp	x29, x30, [sp, #-48]!
   21de4:	mov	x29, sp
   21de8:	str	x0, [sp, #40]
   21dec:	str	x1, [sp, #32]
   21df0:	str	x2, [sp, #24]
   21df4:	ldr	x0, [sp, #40]
   21df8:	ldr	x1, [x0]
   21dfc:	ldr	x0, [sp, #24]
   21e00:	add	x1, x1, x0
   21e04:	ldr	x0, [sp, #40]
   21e08:	str	x1, [x0]
   21e0c:	ldr	x0, [sp, #40]
   21e10:	ldr	x1, [x0, #8]
   21e14:	ldr	x0, [sp, #24]
   21e18:	add	x1, x1, x0
   21e1c:	ldr	x0, [sp, #40]
   21e20:	str	x1, [x0, #8]
   21e24:	ldr	x0, [sp, #40]
   21e28:	ldr	x1, [x0, #16]
   21e2c:	ldr	x0, [sp, #24]
   21e30:	sub	x1, x1, x0
   21e34:	ldr	x0, [sp, #40]
   21e38:	str	x1, [x0, #16]
   21e3c:	ldr	x0, [sp, #40]
   21e40:	ldr	x0, [x0, #24]
   21e44:	cmp	x0, #0x0
   21e48:	b.eq	21e6c <PyInit__decimal@@Base+0xa194>  // b.none
   21e4c:	ldr	x0, [sp, #40]
   21e50:	ldr	x0, [x0, #24]
   21e54:	ldr	x1, [sp, #40]
   21e58:	ldr	x1, [x1, #16]
   21e5c:	add	x0, x0, x1
   21e60:	ldr	x2, [sp, #24]
   21e64:	ldr	x1, [sp, #32]
   21e68:	bl	21cd8 <PyInit__decimal@@Base+0xa000>
   21e6c:	nop
   21e70:	ldp	x29, x30, [sp], #48
   21e74:	ret
   21e78:	sub	sp, sp, #0x20
   21e7c:	str	x0, [sp, #8]
   21e80:	str	x1, [sp]
   21e84:	ldr	x0, [sp, #8]
   21e88:	ldr	x1, [x0]
   21e8c:	ldr	x0, [sp]
   21e90:	add	x1, x1, x0
   21e94:	ldr	x0, [sp, #8]
   21e98:	str	x1, [x0]
   21e9c:	ldr	x0, [sp, #8]
   21ea0:	ldr	x1, [x0, #8]
   21ea4:	ldr	x0, [sp]
   21ea8:	add	x1, x1, x0
   21eac:	ldr	x0, [sp, #8]
   21eb0:	str	x1, [x0, #8]
   21eb4:	ldr	x0, [sp, #8]
   21eb8:	ldr	x1, [x0, #16]
   21ebc:	ldr	x0, [sp]
   21ec0:	sub	x1, x1, x0
   21ec4:	ldr	x0, [sp, #8]
   21ec8:	str	x1, [x0, #16]
   21ecc:	ldr	x0, [sp, #8]
   21ed0:	ldr	x0, [x0, #24]
   21ed4:	cmp	x0, #0x0
   21ed8:	b.eq	21f24 <PyInit__decimal@@Base+0xa24c>  // b.none
   21edc:	ldr	x0, [sp, #8]
   21ee0:	ldr	x0, [x0, #24]
   21ee4:	ldr	x1, [sp, #8]
   21ee8:	ldr	x1, [x1, #16]
   21eec:	add	x0, x0, x1
   21ef0:	str	x0, [sp, #24]
   21ef4:	b	21f0c <PyInit__decimal@@Base+0xa234>
   21ef8:	ldr	x0, [sp]
   21efc:	ldr	x1, [sp, #24]
   21f00:	add	x0, x1, x0
   21f04:	mov	w1, #0x30                  	// #48
   21f08:	strb	w1, [x0]
   21f0c:	ldr	x0, [sp]
   21f10:	sub	x0, x0, #0x1
   21f14:	str	x0, [sp]
   21f18:	ldr	x0, [sp]
   21f1c:	cmp	x0, #0x0
   21f20:	b.ge	21ef8 <PyInit__decimal@@Base+0xa220>  // b.tcont
   21f24:	nop
   21f28:	add	sp, sp, #0x20
   21f2c:	ret
   21f30:	stp	x29, x30, [sp, #-128]!
   21f34:	mov	x29, sp
   21f38:	str	x0, [sp, #72]
   21f3c:	str	x1, [sp, #64]
   21f40:	str	x2, [sp, #56]
   21f44:	str	x3, [sp, #48]
   21f48:	str	x4, [sp, #40]
   21f4c:	str	x5, [sp, #32]
   21f50:	str	x6, [sp, #24]
   21f54:	str	x7, [sp, #16]
   21f58:	str	wzr, [sp, #108]
   21f5c:	ldr	x0, [sp, #64]
   21f60:	cmp	x0, #0x0
   21f64:	cset	w0, ne  // ne = any
   21f68:	and	w0, w0, #0xff
   21f6c:	and	x0, x0, #0xff
   21f70:	str	x0, [sp, #96]
   21f74:	ldr	x0, [sp, #16]
   21f78:	ldr	x0, [x0, #32]
   21f7c:	bl	6570 <strlen@plt>
   21f80:	str	x0, [sp, #88]
   21f84:	ldr	x0, [sp, #72]
   21f88:	ldr	x1, [x0]
   21f8c:	ldr	x0, [sp, #72]
   21f90:	str	x1, [x0, #16]
   21f94:	ldr	x0, [sp, #72]
   21f98:	str	xzr, [x0, #8]
   21f9c:	ldr	x0, [sp, #72]
   21fa0:	ldr	x1, [x0, #8]
   21fa4:	ldr	x0, [sp, #72]
   21fa8:	str	x1, [x0]
   21fac:	ldr	x2, [sp, #24]
   21fb0:	ldr	x1, [sp, #32]
   21fb4:	ldr	x0, [sp, #72]
   21fb8:	bl	21de0 <PyInit__decimal@@Base+0xa108>
   21fbc:	ldr	x0, [sp, #40]
   21fc0:	cmp	x0, #0x0
   21fc4:	b.eq	21fe0 <PyInit__decimal@@Base+0xa308>  // b.none
   21fc8:	ldr	x0, [sp, #40]
   21fcc:	bl	6570 <strlen@plt>
   21fd0:	mov	x2, x0
   21fd4:	ldr	x1, [sp, #40]
   21fd8:	ldr	x0, [sp, #72]
   21fdc:	bl	21d34 <PyInit__decimal@@Base+0xa05c>
   21fe0:	ldr	x0, [sp, #16]
   21fe4:	ldr	x0, [x0, #40]
   21fe8:	str	x0, [sp, #112]
   21fec:	ldr	x0, [sp, #112]
   21ff0:	ldrb	w0, [x0]
   21ff4:	and	x0, x0, #0xff
   21ff8:	str	x0, [sp, #120]
   21ffc:	ldr	x0, [sp, #112]
   22000:	ldrb	w0, [x0]
   22004:	cmp	w0, #0x0
   22008:	b.eq	2202c <PyInit__decimal@@Base+0xa354>  // b.none
   2200c:	ldr	x0, [sp, #112]
   22010:	ldrb	w0, [x0]
   22014:	cmp	w0, #0xff
   22018:	b.eq	2202c <PyInit__decimal@@Base+0xa354>  // b.none
   2201c:	ldr	x1, [sp, #120]
   22020:	ldr	x0, [sp, #48]
   22024:	cmp	x1, x0
   22028:	b.le	22034 <PyInit__decimal@@Base+0xa35c>
   2202c:	ldr	x0, [sp, #48]
   22030:	str	x0, [sp, #120]
   22034:	ldr	x1, [sp, #48]
   22038:	ldr	x0, [sp, #120]
   2203c:	sub	x0, x1, x0
   22040:	str	x0, [sp, #48]
   22044:	ldr	w0, [sp, #108]
   22048:	cmp	w0, #0x0
   2204c:	b.eq	22060 <PyInit__decimal@@Base+0xa388>  // b.none
   22050:	ldr	x1, [sp, #120]
   22054:	ldr	x0, [sp, #72]
   22058:	bl	21e78 <PyInit__decimal@@Base+0xa1a0>
   2205c:	b	2207c <PyInit__decimal@@Base+0xa3a4>
   22060:	ldr	x0, [sp, #48]
   22064:	ldr	x1, [sp, #56]
   22068:	add	x0, x1, x0
   2206c:	ldr	x2, [sp, #120]
   22070:	mov	x1, x0
   22074:	ldr	x0, [sp, #72]
   22078:	bl	21de0 <PyInit__decimal@@Base+0xa108>
   2207c:	ldr	x0, [sp, #48]
   22080:	cmp	x0, #0x0
   22084:	b.ne	220fc <PyInit__decimal@@Base+0xa424>  // b.any
   22088:	ldr	x0, [sp, #16]
   2208c:	ldrb	w0, [x0, #17]
   22090:	cmp	w0, #0x7a
   22094:	b.ne	22188 <PyInit__decimal@@Base+0xa4b0>  // b.any
   22098:	ldr	x0, [sp, #72]
   2209c:	ldr	x1, [x0, #8]
   220a0:	ldr	x0, [sp, #96]
   220a4:	add	x1, x1, x0
   220a8:	ldr	x0, [sp, #16]
   220ac:	ldr	x0, [x0]
   220b0:	cmp	x1, x0
   220b4:	b.ge	22188 <PyInit__decimal@@Base+0xa4b0>  // b.tcont
   220b8:	ldr	x0, [sp, #16]
   220bc:	ldr	x1, [x0]
   220c0:	ldr	x0, [sp, #72]
   220c4:	ldr	x2, [x0, #8]
   220c8:	ldr	x0, [sp, #96]
   220cc:	add	x0, x2, x0
   220d0:	sub	x0, x1, x0
   220d4:	str	x0, [sp, #48]
   220d8:	ldr	x0, [sp, #112]
   220dc:	ldrb	w0, [x0]
   220e0:	and	x1, x0, #0xff
   220e4:	ldr	x0, [sp, #120]
   220e8:	sub	x0, x1, x0
   220ec:	str	x0, [sp, #120]
   220f0:	mov	w0, #0x1                   	// #1
   220f4:	str	w0, [sp, #108]
   220f8:	b	22184 <PyInit__decimal@@Base+0xa4ac>
   220fc:	ldr	x0, [sp, #88]
   22100:	cmp	x0, #0x0
   22104:	b.le	22144 <PyInit__decimal@@Base+0xa46c>
   22108:	ldr	w0, [sp, #108]
   2210c:	cmp	w0, #0x0
   22110:	b.eq	2212c <PyInit__decimal@@Base+0xa454>  // b.none
   22114:	ldr	x0, [sp, #48]
   22118:	cmp	x0, #0x1
   2211c:	b.le	2212c <PyInit__decimal@@Base+0xa454>
   22120:	ldr	x0, [sp, #48]
   22124:	sub	x0, x0, #0x1
   22128:	str	x0, [sp, #48]
   2212c:	ldr	x0, [sp, #16]
   22130:	ldr	x0, [x0, #32]
   22134:	ldr	x2, [sp, #88]
   22138:	mov	x1, x0
   2213c:	ldr	x0, [sp, #72]
   22140:	bl	21d34 <PyInit__decimal@@Base+0xa05c>
   22144:	ldr	x0, [sp, #112]
   22148:	ldrb	w0, [x0]
   2214c:	cmp	w0, #0x0
   22150:	b.eq	22174 <PyInit__decimal@@Base+0xa49c>  // b.none
   22154:	ldr	x0, [sp, #112]
   22158:	add	x0, x0, #0x1
   2215c:	ldrb	w0, [x0]
   22160:	cmp	w0, #0x0
   22164:	b.eq	22174 <PyInit__decimal@@Base+0xa49c>  // b.none
   22168:	ldr	x0, [sp, #112]
   2216c:	add	x0, x0, #0x1
   22170:	str	x0, [sp, #112]
   22174:	ldr	x0, [sp, #112]
   22178:	ldrb	w0, [x0]
   2217c:	and	x0, x0, #0xff
   22180:	str	x0, [sp, #120]
   22184:	b	21ffc <PyInit__decimal@@Base+0xa324>
   22188:	nop
   2218c:	ldr	x0, [sp, #64]
   22190:	cmp	x0, #0x0
   22194:	b.eq	221a8 <PyInit__decimal@@Base+0xa4d0>  // b.none
   22198:	mov	x2, #0x1                   	// #1
   2219c:	ldr	x1, [sp, #64]
   221a0:	ldr	x0, [sp, #72]
   221a4:	bl	21de0 <PyInit__decimal@@Base+0xa108>
   221a8:	ldr	x0, [sp, #72]
   221ac:	ldr	x0, [x0, #24]
   221b0:	cmp	x0, #0x0
   221b4:	b.eq	221d0 <PyInit__decimal@@Base+0xa4f8>  // b.none
   221b8:	ldr	x0, [sp, #72]
   221bc:	ldr	x0, [x0, #24]
   221c0:	ldr	x1, [sp, #72]
   221c4:	ldr	x1, [x1]
   221c8:	add	x0, x0, x1
   221cc:	strb	wzr, [x0]
   221d0:	nop
   221d4:	ldp	x29, x30, [sp], #128
   221d8:	ret
   221dc:	stp	x29, x30, [sp, #-112]!
   221e0:	mov	x29, sp
   221e4:	str	x0, [sp, #40]
   221e8:	str	x1, [sp, #32]
   221ec:	str	x2, [sp, #24]
   221f0:	str	xzr, [sp, #104]
   221f4:	str	xzr, [sp, #80]
   221f8:	str	xzr, [sp, #96]
   221fc:	ldr	x0, [sp, #40]
   22200:	ldr	x0, [x0, #24]
   22204:	str	x0, [sp, #88]
   22208:	ldr	x0, [sp, #88]
   2220c:	ldrb	w0, [x0]
   22210:	cmp	w0, #0x2b
   22214:	b.eq	22238 <PyInit__decimal@@Base+0xa560>  // b.none
   22218:	ldr	x0, [sp, #88]
   2221c:	ldrb	w0, [x0]
   22220:	cmp	w0, #0x2d
   22224:	b.eq	22238 <PyInit__decimal@@Base+0xa560>  // b.none
   22228:	ldr	x0, [sp, #88]
   2222c:	ldrb	w0, [x0]
   22230:	cmp	w0, #0x20
   22234:	b.ne	22248 <PyInit__decimal@@Base+0xa570>  // b.any
   22238:	ldr	x0, [sp, #88]
   2223c:	add	x1, x0, #0x1
   22240:	str	x1, [sp, #88]
   22244:	str	x0, [sp, #104]
   22248:	ldr	x0, [sp, #88]
   2224c:	add	x1, x0, #0x1
   22250:	str	x1, [sp, #88]
   22254:	str	x0, [sp, #80]
   22258:	b	22268 <PyInit__decimal@@Base+0xa590>
   2225c:	ldr	x0, [sp, #88]
   22260:	add	x0, x0, #0x1
   22264:	str	x0, [sp, #88]
   22268:	bl	6920 <__ctype_b_loc@plt>
   2226c:	ldr	x1, [x0]
   22270:	ldr	x0, [sp, #88]
   22274:	ldrb	w0, [x0]
   22278:	and	x0, x0, #0xff
   2227c:	lsl	x0, x0, #1
   22280:	add	x0, x1, x0
   22284:	ldrh	w0, [x0]
   22288:	and	w0, w0, #0x800
   2228c:	cmp	w0, #0x0
   22290:	b.ne	2225c <PyInit__decimal@@Base+0xa584>  // b.any
   22294:	ldr	x1, [sp, #88]
   22298:	ldr	x0, [sp, #80]
   2229c:	sub	x0, x1, x0
   222a0:	str	x0, [sp, #72]
   222a4:	ldr	x0, [sp, #88]
   222a8:	ldrb	w0, [x0]
   222ac:	cmp	w0, #0x2e
   222b0:	b.ne	222cc <PyInit__decimal@@Base+0xa5f4>  // b.any
   222b4:	ldr	x0, [sp, #88]
   222b8:	add	x0, x0, #0x1
   222bc:	str	x0, [sp, #88]
   222c0:	ldr	x0, [sp, #32]
   222c4:	ldr	x0, [x0, #24]
   222c8:	str	x0, [sp, #96]
   222cc:	ldr	x0, [sp, #88]
   222d0:	str	x0, [sp, #64]
   222d4:	ldr	x0, [sp, #40]
   222d8:	ldr	x1, [x0]
   222dc:	ldr	x0, [sp, #40]
   222e0:	ldr	x0, [x0, #24]
   222e4:	ldr	x2, [sp, #88]
   222e8:	sub	x0, x2, x0
   222ec:	sub	x0, x1, x0
   222f0:	str	x0, [sp, #56]
   222f4:	ldr	x0, [sp, #96]
   222f8:	cmp	x0, #0x0
   222fc:	b.ne	22330 <PyInit__decimal@@Base+0xa658>  // b.any
   22300:	ldr	x0, [sp, #32]
   22304:	ldr	x0, [x0, #32]
   22308:	ldrb	w0, [x0]
   2230c:	cmp	w0, #0x0
   22310:	b.eq	22328 <PyInit__decimal@@Base+0xa650>  // b.none
   22314:	ldr	x0, [sp, #32]
   22318:	ldr	x0, [x0, #40]
   2231c:	ldrb	w0, [x0]
   22320:	cmp	w0, #0x0
   22324:	b.ne	22330 <PyInit__decimal@@Base+0xa658>  // b.any
   22328:	mov	w0, #0x1                   	// #1
   2232c:	b	22404 <PyInit__decimal@@Base+0xa72c>
   22330:	ldr	x0, [sp, #40]
   22334:	ldr	x0, [x0, #24]
   22338:	str	x0, [sp, #48]
   2233c:	ldr	x0, [sp, #40]
   22340:	str	xzr, [x0, #24]
   22344:	ldr	x7, [sp, #32]
   22348:	ldr	x6, [sp, #56]
   2234c:	ldr	x5, [sp, #64]
   22350:	ldr	x4, [sp, #96]
   22354:	ldr	x3, [sp, #72]
   22358:	ldr	x2, [sp, #80]
   2235c:	ldr	x1, [sp, #104]
   22360:	ldr	x0, [sp, #40]
   22364:	bl	21f30 <PyInit__decimal@@Base+0xa258>
   22368:	ldr	x0, [sp, #40]
   2236c:	ldr	x0, [x0]
   22370:	add	x0, x0, #0x1
   22374:	mov	x1, #0x1                   	// #1
   22378:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   2237c:	mov	x1, x0
   22380:	ldr	x0, [sp, #40]
   22384:	str	x1, [x0, #24]
   22388:	ldr	x0, [sp, #40]
   2238c:	ldr	x0, [x0, #24]
   22390:	cmp	x0, #0x0
   22394:	b.ne	223c8 <PyInit__decimal@@Base+0xa6f0>  // b.any
   22398:	ldr	x0, [sp, #24]
   2239c:	ldr	w0, [x0]
   223a0:	orr	w1, w0, #0x200
   223a4:	ldr	x0, [sp, #24]
   223a8:	str	w1, [x0]
   223ac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   223b0:	add	x0, x0, #0x6f8
   223b4:	ldr	x1, [x0]
   223b8:	ldr	x0, [sp, #48]
   223bc:	blr	x1
   223c0:	mov	w0, #0x0                   	// #0
   223c4:	b	22404 <PyInit__decimal@@Base+0xa72c>
   223c8:	ldr	x7, [sp, #32]
   223cc:	ldr	x6, [sp, #56]
   223d0:	ldr	x5, [sp, #64]
   223d4:	ldr	x4, [sp, #96]
   223d8:	ldr	x3, [sp, #72]
   223dc:	ldr	x2, [sp, #80]
   223e0:	ldr	x1, [sp, #104]
   223e4:	ldr	x0, [sp, #40]
   223e8:	bl	21f30 <PyInit__decimal@@Base+0xa258>
   223ec:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   223f0:	add	x0, x0, #0x6f8
   223f4:	ldr	x1, [x0]
   223f8:	ldr	x0, [sp, #48]
   223fc:	blr	x1
   22400:	mov	w0, #0x1                   	// #1
   22404:	ldp	x29, x30, [sp], #112
   22408:	ret
   2240c:	stp	x29, x30, [sp, #-144]!
   22410:	mov	x29, sp
   22414:	str	x0, [sp, #40]
   22418:	str	x1, [sp, #32]
   2241c:	str	x2, [sp, #24]
   22420:	ldr	x0, [sp, #40]
   22424:	ldr	x1, [x0, #8]
   22428:	ldr	x0, [sp, #32]
   2242c:	ldr	x0, [x0]
   22430:	cmp	x1, x0
   22434:	b.ge	22760 <PyInit__decimal@@Base+0xaa88>  // b.tcont
   22438:	str	xzr, [sp, #136]
   2243c:	str	xzr, [sp, #128]
   22440:	ldr	x0, [sp, #32]
   22444:	ldrb	w0, [x0, #17]
   22448:	strb	w0, [sp, #103]
   2244c:	strb	wzr, [sp, #63]
   22450:	ldr	x0, [sp, #32]
   22454:	add	x0, x0, #0x13
   22458:	bl	6570 <strlen@plt>
   2245c:	str	x0, [sp, #80]
   22460:	ldr	x0, [sp, #32]
   22464:	ldr	x1, [x0]
   22468:	ldr	x0, [sp, #40]
   2246c:	ldr	x0, [x0, #8]
   22470:	sub	x0, x1, x0
   22474:	str	x0, [sp, #72]
   22478:	ldr	x0, [sp, #80]
   2247c:	ldr	x1, [sp, #72]
   22480:	mul	x0, x1, x0
   22484:	str	x0, [sp, #64]
   22488:	ldr	x0, [sp, #40]
   2248c:	ldr	x4, [x0, #24]
   22490:	ldr	x0, [sp, #40]
   22494:	ldr	x1, [x0]
   22498:	ldr	x0, [sp, #64]
   2249c:	add	x0, x1, x0
   224a0:	add	x0, x0, #0x1
   224a4:	mov	x1, x0
   224a8:	add	x0, sp, #0x3f
   224ac:	mov	x3, x0
   224b0:	mov	x2, #0x1                   	// #1
   224b4:	mov	x0, x4
   224b8:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   224bc:	mov	x1, x0
   224c0:	ldr	x0, [sp, #40]
   224c4:	str	x1, [x0, #24]
   224c8:	ldr	x0, [sp, #40]
   224cc:	ldr	x0, [x0, #24]
   224d0:	str	x0, [sp, #88]
   224d4:	ldrb	w0, [sp, #63]
   224d8:	cmp	w0, #0x0
   224dc:	b.eq	22514 <PyInit__decimal@@Base+0xa83c>  // b.none
   224e0:	ldr	x0, [sp, #24]
   224e4:	ldr	w0, [x0]
   224e8:	orr	w1, w0, #0x200
   224ec:	ldr	x0, [sp, #24]
   224f0:	str	w1, [x0]
   224f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   224f8:	add	x0, x0, #0x6f8
   224fc:	ldr	x1, [x0]
   22500:	ldr	x0, [sp, #40]
   22504:	ldr	x0, [x0, #24]
   22508:	blr	x1
   2250c:	mov	w0, #0x0                   	// #0
   22510:	b	22764 <PyInit__decimal@@Base+0xaa8c>
   22514:	ldrb	w0, [sp, #103]
   22518:	cmp	w0, #0x7a
   2251c:	b.ne	22528 <PyInit__decimal@@Base+0xa850>  // b.any
   22520:	mov	w0, #0x3d                  	// #61
   22524:	strb	w0, [sp, #103]
   22528:	ldrb	w0, [sp, #103]
   2252c:	cmp	w0, #0x3c
   22530:	b.ne	22540 <PyInit__decimal@@Base+0xa868>  // b.any
   22534:	ldr	x0, [sp, #72]
   22538:	str	x0, [sp, #128]
   2253c:	b	22588 <PyInit__decimal@@Base+0xa8b0>
   22540:	ldrb	w0, [sp, #103]
   22544:	cmp	w0, #0x3e
   22548:	b.eq	22558 <PyInit__decimal@@Base+0xa880>  // b.none
   2254c:	ldrb	w0, [sp, #103]
   22550:	cmp	w0, #0x3d
   22554:	b.ne	22564 <PyInit__decimal@@Base+0xa88c>  // b.any
   22558:	ldr	x0, [sp, #72]
   2255c:	str	x0, [sp, #136]
   22560:	b	22588 <PyInit__decimal@@Base+0xa8b0>
   22564:	ldr	x0, [sp, #72]
   22568:	lsr	x1, x0, #63
   2256c:	add	x0, x1, x0
   22570:	asr	x0, x0, #1
   22574:	str	x0, [sp, #136]
   22578:	ldr	x1, [sp, #72]
   2257c:	ldr	x0, [sp, #136]
   22580:	sub	x0, x1, x0
   22584:	str	x0, [sp, #128]
   22588:	ldr	x0, [sp, #40]
   2258c:	ldr	x0, [x0]
   22590:	str	x0, [sp, #120]
   22594:	ldrb	w0, [sp, #103]
   22598:	cmp	w0, #0x3d
   2259c:	b.ne	225e8 <PyInit__decimal@@Base+0xa910>  // b.any
   225a0:	ldr	x0, [sp, #88]
   225a4:	ldrb	w0, [x0]
   225a8:	cmp	w0, #0x2d
   225ac:	b.eq	225d0 <PyInit__decimal@@Base+0xa8f8>  // b.none
   225b0:	ldr	x0, [sp, #88]
   225b4:	ldrb	w0, [x0]
   225b8:	cmp	w0, #0x2b
   225bc:	b.eq	225d0 <PyInit__decimal@@Base+0xa8f8>  // b.none
   225c0:	ldr	x0, [sp, #88]
   225c4:	ldrb	w0, [x0]
   225c8:	cmp	w0, #0x20
   225cc:	b.ne	225e8 <PyInit__decimal@@Base+0xa910>  // b.any
   225d0:	ldr	x0, [sp, #88]
   225d4:	add	x0, x0, #0x1
   225d8:	str	x0, [sp, #88]
   225dc:	ldr	x0, [sp, #120]
   225e0:	sub	x0, x0, #0x1
   225e4:	str	x0, [sp, #120]
   225e8:	ldr	x1, [sp, #80]
   225ec:	ldr	x0, [sp, #136]
   225f0:	mul	x0, x1, x0
   225f4:	ldr	x1, [sp, #88]
   225f8:	add	x0, x1, x0
   225fc:	ldr	x2, [sp, #120]
   22600:	ldr	x1, [sp, #88]
   22604:	bl	6530 <memmove@plt>
   22608:	str	xzr, [sp, #112]
   2260c:	b	22670 <PyInit__decimal@@Base+0xa998>
   22610:	str	xzr, [sp, #104]
   22614:	b	22654 <PyInit__decimal@@Base+0xa97c>
   22618:	ldr	x1, [sp, #112]
   2261c:	ldr	x0, [sp, #80]
   22620:	mul	x1, x1, x0
   22624:	ldr	x0, [sp, #104]
   22628:	add	x0, x1, x0
   2262c:	ldr	x1, [sp, #88]
   22630:	add	x0, x1, x0
   22634:	ldr	x2, [sp, #32]
   22638:	ldr	x1, [sp, #104]
   2263c:	add	x1, x2, x1
   22640:	ldrb	w1, [x1, #19]
   22644:	strb	w1, [x0]
   22648:	ldr	x0, [sp, #104]
   2264c:	add	x0, x0, #0x1
   22650:	str	x0, [sp, #104]
   22654:	ldr	x1, [sp, #104]
   22658:	ldr	x0, [sp, #80]
   2265c:	cmp	x1, x0
   22660:	b.cc	22618 <PyInit__decimal@@Base+0xa940>  // b.lo, b.ul, b.last
   22664:	ldr	x0, [sp, #112]
   22668:	add	x0, x0, #0x1
   2266c:	str	x0, [sp, #112]
   22670:	ldr	x1, [sp, #112]
   22674:	ldr	x0, [sp, #136]
   22678:	cmp	x1, x0
   2267c:	b.cc	22610 <PyInit__decimal@@Base+0xa938>  // b.lo, b.ul, b.last
   22680:	ldr	x1, [sp, #80]
   22684:	ldr	x0, [sp, #136]
   22688:	mul	x1, x1, x0
   2268c:	ldr	x0, [sp, #120]
   22690:	add	x0, x1, x0
   22694:	ldr	x1, [sp, #88]
   22698:	add	x0, x1, x0
   2269c:	str	x0, [sp, #88]
   226a0:	str	xzr, [sp, #112]
   226a4:	b	22708 <PyInit__decimal@@Base+0xaa30>
   226a8:	str	xzr, [sp, #104]
   226ac:	b	226ec <PyInit__decimal@@Base+0xaa14>
   226b0:	ldr	x1, [sp, #112]
   226b4:	ldr	x0, [sp, #80]
   226b8:	mul	x1, x1, x0
   226bc:	ldr	x0, [sp, #104]
   226c0:	add	x0, x1, x0
   226c4:	ldr	x1, [sp, #88]
   226c8:	add	x0, x1, x0
   226cc:	ldr	x2, [sp, #32]
   226d0:	ldr	x1, [sp, #104]
   226d4:	add	x1, x2, x1
   226d8:	ldrb	w1, [x1, #19]
   226dc:	strb	w1, [x0]
   226e0:	ldr	x0, [sp, #104]
   226e4:	add	x0, x0, #0x1
   226e8:	str	x0, [sp, #104]
   226ec:	ldr	x1, [sp, #104]
   226f0:	ldr	x0, [sp, #80]
   226f4:	cmp	x1, x0
   226f8:	b.cc	226b0 <PyInit__decimal@@Base+0xa9d8>  // b.lo, b.ul, b.last
   226fc:	ldr	x0, [sp, #112]
   22700:	add	x0, x0, #0x1
   22704:	str	x0, [sp, #112]
   22708:	ldr	x1, [sp, #112]
   2270c:	ldr	x0, [sp, #128]
   22710:	cmp	x1, x0
   22714:	b.cc	226a8 <PyInit__decimal@@Base+0xa9d0>  // b.lo, b.ul, b.last
   22718:	ldr	x0, [sp, #40]
   2271c:	ldr	x1, [x0]
   22720:	ldr	x0, [sp, #64]
   22724:	add	x1, x1, x0
   22728:	ldr	x0, [sp, #40]
   2272c:	str	x1, [x0]
   22730:	ldr	x0, [sp, #40]
   22734:	ldr	x1, [x0, #8]
   22738:	ldr	x0, [sp, #72]
   2273c:	add	x1, x1, x0
   22740:	ldr	x0, [sp, #40]
   22744:	str	x1, [x0, #8]
   22748:	ldr	x0, [sp, #40]
   2274c:	ldr	x0, [x0, #24]
   22750:	ldr	x1, [sp, #40]
   22754:	ldr	x1, [x1]
   22758:	add	x0, x0, x1
   2275c:	strb	wzr, [x0]
   22760:	mov	w0, #0x1                   	// #1
   22764:	ldp	x29, x30, [sp], #144
   22768:	ret
   2276c:	stp	x29, x30, [sp, #-80]!
   22770:	mov	x29, sp
   22774:	str	x0, [sp, #56]
   22778:	str	x1, [sp, #48]
   2277c:	str	x2, [sp, #40]
   22780:	str	x3, [sp, #32]
   22784:	str	x4, [sp, #24]
   22788:	ldr	x0, [sp, #48]
   2278c:	ldr	x1, [x0, #8]
   22790:	ldr	x0, [sp, #48]
   22794:	ldr	x0, [x0, #16]
   22798:	add	x1, x1, x0
   2279c:	ldr	x0, [sp, #40]
   227a0:	sub	x0, x1, x0
   227a4:	str	x0, [sp, #72]
   227a8:	ldr	x0, [sp, #40]
   227ac:	cmp	x0, #0x0
   227b0:	b.gt	227c8 <PyInit__decimal@@Base+0xaaf0>
   227b4:	ldr	x2, [sp, #24]
   227b8:	mov	w1, #0x100                 	// #256
   227bc:	ldr	x0, [sp, #56]
   227c0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   227c4:	b	22848 <PyInit__decimal@@Base+0xab70>
   227c8:	ldr	x0, [sp, #48]
   227cc:	bl	25438 <PyInit__decimal@@Base+0xd760>
   227d0:	cmp	w0, #0x0
   227d4:	b.ne	227e8 <PyInit__decimal@@Base+0xab10>  // b.any
   227d8:	ldr	x0, [sp, #48]
   227dc:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   227e0:	cmp	w0, #0x0
   227e4:	b.eq	227fc <PyInit__decimal@@Base+0xab24>  // b.none
   227e8:	ldr	x2, [sp, #24]
   227ec:	ldr	x1, [sp, #48]
   227f0:	ldr	x0, [sp, #56]
   227f4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   227f8:	b	22848 <PyInit__decimal@@Base+0xab70>
   227fc:	ldr	x4, [sp, #24]
   22800:	ldr	x3, [sp, #32]
   22804:	ldr	x2, [sp, #72]
   22808:	ldr	x1, [sp, #48]
   2280c:	ldr	x0, [sp, #56]
   22810:	bl	3ae18 <PyInit__decimal@@Base+0x23140>
   22814:	ldr	x0, [sp, #56]
   22818:	ldr	x0, [x0, #16]
   2281c:	ldr	x1, [sp, #40]
   22820:	cmp	x1, x0
   22824:	b.ge	22848 <PyInit__decimal@@Base+0xab70>  // b.tcont
   22828:	ldr	x0, [sp, #72]
   2282c:	add	x0, x0, #0x1
   22830:	ldr	x4, [sp, #24]
   22834:	ldr	x3, [sp, #32]
   22838:	mov	x2, x0
   2283c:	ldr	x1, [sp, #56]
   22840:	ldr	x0, [sp, #56]
   22844:	bl	3ae18 <PyInit__decimal@@Base+0x23140>
   22848:	ldp	x29, x30, [sp], #80
   2284c:	ret
   22850:	sub	sp, sp, #0x2d0
   22854:	stp	x29, x30, [sp]
   22858:	mov	x29, sp
   2285c:	str	x0, [sp, #40]
   22860:	str	x1, [sp, #32]
   22864:	str	x2, [sp, #24]
   22868:	str	x3, [sp, #16]
   2286c:	mov	w0, #0x30                  	// #48
   22870:	strb	w0, [sp, #136]
   22874:	str	xzr, [sp, #144]
   22878:	str	xzr, [sp, #152]
   2287c:	str	xzr, [sp, #160]
   22880:	mov	x0, #0x40                  	// #64
   22884:	str	x0, [sp, #168]
   22888:	add	x0, sp, #0xb8
   2288c:	str	x0, [sp, #176]
   22890:	mov	x0, #0x1                   	// #1
   22894:	str	x0, [sp, #712]
   22898:	ldr	x0, [sp, #32]
   2289c:	ldrb	w0, [x0, #16]
   228a0:	strb	w0, [sp, #711]
   228a4:	str	wzr, [sp, #704]
   228a8:	ldr	x0, [sp, #32]
   228ac:	ldr	x1, [x0]
   228b0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   228b4:	movk	x0, #0xb6b3, lsl #32
   228b8:	movk	x0, #0xde0, lsl #48
   228bc:	cmp	x1, x0
   228c0:	b.le	228e0 <PyInit__decimal@@Base+0xac08>
   228c4:	ldr	x0, [sp, #16]
   228c8:	ldr	w0, [x0]
   228cc:	orr	w1, w0, #0x100
   228d0:	ldr	x0, [sp, #16]
   228d4:	str	w1, [x0]
   228d8:	mov	x0, #0x0                   	// #0
   228dc:	b	22d94 <PyInit__decimal@@Base+0xb0bc>
   228e0:	bl	6920 <__ctype_b_loc@plt>
   228e4:	ldr	x1, [x0]
   228e8:	ldrb	w0, [sp, #711]
   228ec:	lsl	x0, x0, #1
   228f0:	add	x0, x1, x0
   228f4:	ldrh	w0, [x0]
   228f8:	and	w0, w0, #0x100
   228fc:	cmp	w0, #0x0
   22900:	b.eq	2291c <PyInit__decimal@@Base+0xac44>  // b.none
   22904:	ldrb	w0, [sp, #711]
   22908:	bl	6ae0 <tolower@plt>
   2290c:	strb	w0, [sp, #711]
   22910:	ldr	w0, [sp, #704]
   22914:	orr	w0, w0, #0x1
   22918:	str	w0, [sp, #704]
   2291c:	ldr	x0, [sp, #32]
   22920:	ldrb	w0, [x0, #18]
   22924:	cmp	w0, #0x20
   22928:	b.ne	2293c <PyInit__decimal@@Base+0xac64>  // b.any
   2292c:	ldr	w0, [sp, #704]
   22930:	orr	w0, w0, #0x40
   22934:	str	w0, [sp, #704]
   22938:	b	22958 <PyInit__decimal@@Base+0xac80>
   2293c:	ldr	x0, [sp, #32]
   22940:	ldrb	w0, [x0, #18]
   22944:	cmp	w0, #0x2b
   22948:	b.ne	22958 <PyInit__decimal@@Base+0xac80>  // b.any
   2294c:	ldr	w0, [sp, #704]
   22950:	orr	w0, w0, #0x80
   22954:	str	w0, [sp, #704]
   22958:	ldr	x0, [sp, #40]
   2295c:	bl	25438 <PyInit__decimal@@Base+0xd760>
   22960:	cmp	w0, #0x0
   22964:	b.eq	229d0 <PyInit__decimal@@Base+0xacf8>  // b.none
   22968:	ldr	x0, [sp, #32]
   2296c:	ldrb	w0, [x0, #17]
   22970:	cmp	w0, #0x7a
   22974:	b.ne	229b4 <PyInit__decimal@@Base+0xacdc>  // b.any
   22978:	ldr	x1, [sp, #32]
   2297c:	add	x0, sp, #0x38
   22980:	ldp	x2, x3, [x1]
   22984:	stp	x2, x3, [x0]
   22988:	ldp	x2, x3, [x1, #16]
   2298c:	stp	x2, x3, [x0, #16]
   22990:	ldp	x2, x3, [x1, #32]
   22994:	stp	x2, x3, [x0, #32]
   22998:	mov	w0, #0x20                  	// #32
   2299c:	strb	w0, [sp, #75]
   229a0:	strb	wzr, [sp, #76]
   229a4:	mov	w0, #0x3e                  	// #62
   229a8:	strb	w0, [sp, #73]
   229ac:	add	x0, sp, #0x38
   229b0:	str	x0, [sp, #32]
   229b4:	ldrb	w0, [sp, #711]
   229b8:	cmp	w0, #0x25
   229bc:	b.ne	22c78 <PyInit__decimal@@Base+0xafa0>  // b.any
   229c0:	ldr	w0, [sp, #704]
   229c4:	orr	w0, w0, #0x20
   229c8:	str	w0, [sp, #704]
   229cc:	b	22c78 <PyInit__decimal@@Base+0xafa0>
   229d0:	str	wzr, [sp, #52]
   229d4:	ldrb	w0, [sp, #711]
   229d8:	cmp	w0, #0x67
   229dc:	b.eq	22a0c <PyInit__decimal@@Base+0xad34>  // b.none
   229e0:	cmp	w0, #0x67
   229e4:	b.gt	22a84 <PyInit__decimal@@Base+0xadac>
   229e8:	cmp	w0, #0x66
   229ec:	b.eq	22a74 <PyInit__decimal@@Base+0xad9c>  // b.none
   229f0:	cmp	w0, #0x66
   229f4:	b.gt	22a84 <PyInit__decimal@@Base+0xadac>
   229f8:	cmp	w0, #0x25
   229fc:	b.eq	22a2c <PyInit__decimal@@Base+0xad54>  // b.none
   22a00:	cmp	w0, #0x65
   22a04:	b.eq	22a1c <PyInit__decimal@@Base+0xad44>  // b.none
   22a08:	b	22a84 <PyInit__decimal@@Base+0xadac>
   22a0c:	ldr	w0, [sp, #704]
   22a10:	orr	w0, w0, #0x2
   22a14:	str	w0, [sp, #704]
   22a18:	b	22a88 <PyInit__decimal@@Base+0xadb0>
   22a1c:	ldr	w0, [sp, #704]
   22a20:	orr	w0, w0, #0x8
   22a24:	str	w0, [sp, #704]
   22a28:	b	22a88 <PyInit__decimal@@Base+0xadb0>
   22a2c:	ldr	w0, [sp, #704]
   22a30:	orr	w0, w0, #0x20
   22a34:	str	w0, [sp, #704]
   22a38:	add	x0, sp, #0x88
   22a3c:	ldr	x2, [sp, #16]
   22a40:	ldr	x1, [sp, #40]
   22a44:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   22a48:	cmp	w0, #0x0
   22a4c:	b.ne	22a58 <PyInit__decimal@@Base+0xad80>  // b.any
   22a50:	mov	x0, #0x0                   	// #0
   22a54:	b	22d94 <PyInit__decimal@@Base+0xb0bc>
   22a58:	ldr	x0, [sp, #144]
   22a5c:	add	x0, x0, #0x2
   22a60:	str	x0, [sp, #144]
   22a64:	add	x0, sp, #0x88
   22a68:	str	x0, [sp, #40]
   22a6c:	mov	w0, #0x66                  	// #102
   22a70:	strb	w0, [sp, #711]
   22a74:	ldr	w0, [sp, #704]
   22a78:	orr	w0, w0, #0x10
   22a7c:	str	w0, [sp, #704]
   22a80:	b	22a88 <PyInit__decimal@@Base+0xadb0>
   22a84:	bl	6860 <abort@plt>
   22a88:	ldr	x0, [sp, #32]
   22a8c:	ldr	x0, [x0, #8]
   22a90:	cmp	x0, #0x0
   22a94:	b.lt	22be4 <PyInit__decimal@@Base+0xaf0c>  // b.tstop
   22a98:	ldr	x0, [sp, #32]
   22a9c:	ldr	x1, [x0, #8]
   22aa0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   22aa4:	movk	x0, #0xb6b3, lsl #32
   22aa8:	movk	x0, #0xde0, lsl #48
   22aac:	cmp	x1, x0
   22ab0:	b.le	22acc <PyInit__decimal@@Base+0xadf4>
   22ab4:	ldr	x0, [sp, #16]
   22ab8:	ldr	w0, [x0]
   22abc:	orr	w1, w0, #0x100
   22ac0:	ldr	x0, [sp, #16]
   22ac4:	str	w1, [x0]
   22ac8:	b	22d88 <PyInit__decimal@@Base+0xb0b0>
   22acc:	ldrb	w0, [sp, #711]
   22ad0:	cmp	w0, #0x67
   22ad4:	b.eq	22af4 <PyInit__decimal@@Base+0xae1c>  // b.none
   22ad8:	cmp	w0, #0x67
   22adc:	b.gt	22bf0 <PyInit__decimal@@Base+0xaf18>
   22ae0:	cmp	w0, #0x65
   22ae4:	b.eq	22b54 <PyInit__decimal@@Base+0xae7c>  // b.none
   22ae8:	cmp	w0, #0x66
   22aec:	b.eq	22bb0 <PyInit__decimal@@Base+0xaed8>  // b.none
   22af0:	b	22bf0 <PyInit__decimal@@Base+0xaf18>
   22af4:	ldr	x0, [sp, #32]
   22af8:	ldr	x0, [x0, #8]
   22afc:	cmp	x0, #0x0
   22b00:	b.eq	22b10 <PyInit__decimal@@Base+0xae38>  // b.none
   22b04:	ldr	x0, [sp, #32]
   22b08:	ldr	x0, [x0, #8]
   22b0c:	b	22b14 <PyInit__decimal@@Base+0xae3c>
   22b10:	mov	x0, #0x1                   	// #1
   22b14:	str	x0, [sp, #696]
   22b18:	ldr	x0, [sp, #40]
   22b1c:	ldr	x0, [x0, #16]
   22b20:	ldr	x1, [sp, #696]
   22b24:	cmp	x1, x0
   22b28:	b.ge	22bec <PyInit__decimal@@Base+0xaf14>  // b.tcont
   22b2c:	add	x1, sp, #0x34
   22b30:	add	x0, sp, #0x88
   22b34:	mov	x4, x1
   22b38:	ldr	x3, [sp, #24]
   22b3c:	ldr	x2, [sp, #696]
   22b40:	ldr	x1, [sp, #40]
   22b44:	bl	2276c <PyInit__decimal@@Base+0xaa94>
   22b48:	add	x0, sp, #0x88
   22b4c:	str	x0, [sp, #40]
   22b50:	b	22bec <PyInit__decimal@@Base+0xaf14>
   22b54:	ldr	x0, [sp, #40]
   22b58:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   22b5c:	cmp	w0, #0x0
   22b60:	b.eq	22b7c <PyInit__decimal@@Base+0xaea4>  // b.none
   22b64:	ldr	x0, [sp, #32]
   22b68:	ldr	x0, [x0, #8]
   22b6c:	mov	x1, #0x1                   	// #1
   22b70:	sub	x0, x1, x0
   22b74:	str	x0, [sp, #712]
   22b78:	b	22bf0 <PyInit__decimal@@Base+0xaf18>
   22b7c:	ldr	x0, [sp, #32]
   22b80:	ldr	x0, [x0, #8]
   22b84:	add	x1, x0, #0x1
   22b88:	add	x2, sp, #0x34
   22b8c:	add	x0, sp, #0x88
   22b90:	mov	x4, x2
   22b94:	ldr	x3, [sp, #24]
   22b98:	mov	x2, x1
   22b9c:	ldr	x1, [sp, #40]
   22ba0:	bl	2276c <PyInit__decimal@@Base+0xaa94>
   22ba4:	add	x0, sp, #0x88
   22ba8:	str	x0, [sp, #40]
   22bac:	b	22bf0 <PyInit__decimal@@Base+0xaf18>
   22bb0:	ldr	x0, [sp, #32]
   22bb4:	ldr	x0, [x0, #8]
   22bb8:	neg	x1, x0
   22bbc:	add	x2, sp, #0x34
   22bc0:	add	x0, sp, #0x88
   22bc4:	mov	x4, x2
   22bc8:	ldr	x3, [sp, #24]
   22bcc:	mov	x2, x1
   22bd0:	ldr	x1, [sp, #40]
   22bd4:	bl	3ad94 <PyInit__decimal@@Base+0x230bc>
   22bd8:	add	x0, sp, #0x88
   22bdc:	str	x0, [sp, #40]
   22be0:	b	22bf0 <PyInit__decimal@@Base+0xaf18>
   22be4:	nop
   22be8:	b	22bf0 <PyInit__decimal@@Base+0xaf18>
   22bec:	nop
   22bf0:	ldrb	w0, [sp, #711]
   22bf4:	cmp	w0, #0x66
   22bf8:	b.ne	22c40 <PyInit__decimal@@Base+0xaf68>  // b.any
   22bfc:	ldr	x0, [sp, #40]
   22c00:	bl	25454 <PyInit__decimal@@Base+0xd77c>
   22c04:	cmp	w0, #0x0
   22c08:	b.eq	22c40 <PyInit__decimal@@Base+0xaf68>  // b.none
   22c0c:	ldr	x0, [sp, #40]
   22c10:	ldr	x0, [x0, #8]
   22c14:	cmp	x0, #0x0
   22c18:	b.le	22c40 <PyInit__decimal@@Base+0xaf68>
   22c1c:	add	x1, sp, #0x34
   22c20:	add	x0, sp, #0x88
   22c24:	mov	x4, x1
   22c28:	ldr	x3, [sp, #24]
   22c2c:	mov	x2, #0x0                   	// #0
   22c30:	ldr	x1, [sp, #40]
   22c34:	bl	3ad94 <PyInit__decimal@@Base+0x230bc>
   22c38:	add	x0, sp, #0x88
   22c3c:	str	x0, [sp, #40]
   22c40:	ldr	w1, [sp, #52]
   22c44:	mov	w0, #0x3be                 	// #958
   22c48:	and	w0, w1, w0
   22c4c:	cmp	w0, #0x0
   22c50:	b.eq	22c78 <PyInit__decimal@@Base+0xafa0>  // b.none
   22c54:	ldr	x0, [sp, #16]
   22c58:	ldr	w1, [x0]
   22c5c:	ldr	w2, [sp, #52]
   22c60:	mov	w0, #0x3be                 	// #958
   22c64:	and	w0, w2, w0
   22c68:	orr	w1, w1, w0
   22c6c:	ldr	x0, [sp, #16]
   22c70:	str	w1, [x0]
   22c74:	b	22d88 <PyInit__decimal@@Base+0xb0b0>
   22c78:	add	x0, sp, #0x68
   22c7c:	add	x0, x0, #0x18
   22c80:	ldr	x3, [sp, #712]
   22c84:	ldr	w2, [sp, #704]
   22c88:	ldr	x1, [sp, #40]
   22c8c:	bl	20d58 <PyInit__decimal@@Base+0x9080>
   22c90:	str	x0, [sp, #104]
   22c94:	ldr	x0, [sp, #104]
   22c98:	str	x0, [sp, #112]
   22c9c:	ldr	x0, [sp, #104]
   22ca0:	cmp	x0, #0x0
   22ca4:	b.ge	22cc0 <PyInit__decimal@@Base+0xafe8>  // b.tcont
   22ca8:	ldr	x0, [sp, #16]
   22cac:	ldr	w0, [x0]
   22cb0:	orr	w1, w0, #0x200
   22cb4:	ldr	x0, [sp, #16]
   22cb8:	str	w1, [x0]
   22cbc:	b	22d88 <PyInit__decimal@@Base+0xb0b0>
   22cc0:	ldr	x0, [sp, #32]
   22cc4:	ldr	x0, [x0, #24]
   22cc8:	ldrb	w0, [x0]
   22ccc:	cmp	w0, #0x0
   22cd0:	b.eq	22d44 <PyInit__decimal@@Base+0xb06c>  // b.none
   22cd4:	ldr	x0, [sp, #40]
   22cd8:	bl	25438 <PyInit__decimal@@Base+0xd760>
   22cdc:	cmp	w0, #0x0
   22ce0:	b.ne	22d44 <PyInit__decimal@@Base+0xb06c>  // b.any
   22ce4:	ldr	x1, [sp, #112]
   22ce8:	mov	x0, #0x23                  	// #35
   22cec:	movk	x0, #0xa764, lsl #16
   22cf0:	movk	x0, #0xb6b3, lsl #32
   22cf4:	movk	x0, #0xde0, lsl #48
   22cf8:	cmp	x1, x0
   22cfc:	b.le	22d2c <PyInit__decimal@@Base+0xb054>
   22d00:	ldr	x0, [sp, #16]
   22d04:	ldr	w0, [x0]
   22d08:	orr	w1, w0, #0x100
   22d0c:	ldr	x0, [sp, #16]
   22d10:	str	w1, [x0]
   22d14:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   22d18:	add	x0, x0, #0x6f8
   22d1c:	ldr	x1, [x0]
   22d20:	ldr	x0, [sp, #128]
   22d24:	blr	x1
   22d28:	b	22d88 <PyInit__decimal@@Base+0xb0b0>
   22d2c:	add	x0, sp, #0x68
   22d30:	ldr	x2, [sp, #16]
   22d34:	ldr	x1, [sp, #32]
   22d38:	bl	221dc <PyInit__decimal@@Base+0xa504>
   22d3c:	cmp	w0, #0x0
   22d40:	b.eq	22d7c <PyInit__decimal@@Base+0xb0a4>  // b.none
   22d44:	ldr	x0, [sp, #32]
   22d48:	ldr	x0, [x0]
   22d4c:	cmp	x0, #0x0
   22d50:	b.eq	22d6c <PyInit__decimal@@Base+0xb094>  // b.none
   22d54:	add	x0, sp, #0x68
   22d58:	ldr	x2, [sp, #16]
   22d5c:	ldr	x1, [sp, #32]
   22d60:	bl	2240c <PyInit__decimal@@Base+0xa734>
   22d64:	cmp	w0, #0x0
   22d68:	b.eq	22d84 <PyInit__decimal@@Base+0xb0ac>  // b.none
   22d6c:	add	x0, sp, #0x88
   22d70:	bl	25820 <PyInit__decimal@@Base+0xdb48>
   22d74:	ldr	x0, [sp, #128]
   22d78:	b	22d94 <PyInit__decimal@@Base+0xb0bc>
   22d7c:	nop
   22d80:	b	22d88 <PyInit__decimal@@Base+0xb0b0>
   22d84:	nop
   22d88:	add	x0, sp, #0x88
   22d8c:	bl	25820 <PyInit__decimal@@Base+0xdb48>
   22d90:	mov	x0, #0x0                   	// #0
   22d94:	ldp	x29, x30, [sp]
   22d98:	add	sp, sp, #0x2d0
   22d9c:	ret
   22da0:	stp	x29, x30, [sp, #-96]!
   22da4:	mov	x29, sp
   22da8:	str	x0, [sp, #40]
   22dac:	str	x1, [sp, #32]
   22db0:	str	x2, [sp, #24]
   22db4:	str	x3, [sp, #16]
   22db8:	add	x0, sp, #0x30
   22dbc:	mov	w2, #0x1                   	// #1
   22dc0:	ldr	x1, [sp, #32]
   22dc4:	bl	21774 <PyInit__decimal@@Base+0x9a9c>
   22dc8:	cmp	w0, #0x0
   22dcc:	b.ne	22dec <PyInit__decimal@@Base+0xb114>  // b.any
   22dd0:	ldr	x0, [sp, #16]
   22dd4:	ldr	w0, [x0]
   22dd8:	orr	w1, w0, #0x100
   22ddc:	ldr	x0, [sp, #16]
   22de0:	str	w1, [x0]
   22de4:	mov	x0, #0x0                   	// #0
   22de8:	b	22e04 <PyInit__decimal@@Base+0xb12c>
   22dec:	add	x0, sp, #0x30
   22df0:	ldr	x3, [sp, #16]
   22df4:	ldr	x2, [sp, #24]
   22df8:	mov	x1, x0
   22dfc:	ldr	x0, [sp, #40]
   22e00:	bl	22850 <PyInit__decimal@@Base+0xab78>
   22e04:	ldp	x29, x30, [sp], #96
   22e08:	ret
   22e0c:	stp	x29, x30, [sp, #-48]!
   22e10:	mov	x29, sp
   22e14:	str	x0, [sp, #24]
   22e18:	str	w1, [sp, #20]
   22e1c:	str	w2, [sp, #16]
   22e20:	ldr	x0, [sp, #24]
   22e24:	strb	wzr, [x0]
   22e28:	ldr	x0, [sp, #24]
   22e2c:	str	x0, [sp, #40]
   22e30:	str	wzr, [sp, #36]
   22e34:	b	22ed4 <PyInit__decimal@@Base+0xb1fc>
   22e38:	ldr	w0, [sp, #36]
   22e3c:	mov	w1, #0x1                   	// #1
   22e40:	lsl	w1, w1, w0
   22e44:	ldr	w0, [sp, #16]
   22e48:	and	w0, w1, w0
   22e4c:	cmp	w0, #0x0
   22e50:	b.eq	22ec8 <PyInit__decimal@@Base+0xb1f0>  // b.none
   22e54:	ldrsw	x4, [sp, #20]
   22e58:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   22e5c:	add	x0, x0, #0x5e8
   22e60:	ldrsw	x1, [sp, #36]
   22e64:	ldr	x0, [x0, x1, lsl #3]
   22e68:	mov	x3, x0
   22e6c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   22e70:	add	x2, x0, #0x1b8
   22e74:	mov	x1, x4
   22e78:	ldr	x0, [sp, #40]
   22e7c:	bl	66b0 <snprintf@plt>
   22e80:	str	w0, [sp, #32]
   22e84:	ldr	w0, [sp, #32]
   22e88:	cmp	w0, #0x0
   22e8c:	b.lt	22ea0 <PyInit__decimal@@Base+0xb1c8>  // b.tstop
   22e90:	ldr	w1, [sp, #32]
   22e94:	ldr	w0, [sp, #20]
   22e98:	cmp	w1, w0
   22e9c:	b.lt	22ea8 <PyInit__decimal@@Base+0xb1d0>  // b.tstop
   22ea0:	mov	w0, #0xffffffff            	// #-1
   22ea4:	b	22f10 <PyInit__decimal@@Base+0xb238>
   22ea8:	ldrsw	x0, [sp, #32]
   22eac:	ldr	x1, [sp, #40]
   22eb0:	add	x0, x1, x0
   22eb4:	str	x0, [sp, #40]
   22eb8:	ldr	w1, [sp, #20]
   22ebc:	ldr	w0, [sp, #32]
   22ec0:	sub	w0, w1, w0
   22ec4:	str	w0, [sp, #20]
   22ec8:	ldr	w0, [sp, #36]
   22ecc:	add	w0, w0, #0x1
   22ed0:	str	w0, [sp, #36]
   22ed4:	ldr	w0, [sp, #36]
   22ed8:	cmp	w0, #0xe
   22edc:	b.le	22e38 <PyInit__decimal@@Base+0xb160>
   22ee0:	ldr	x1, [sp, #40]
   22ee4:	ldr	x0, [sp, #24]
   22ee8:	cmp	x1, x0
   22eec:	b.eq	22f04 <PyInit__decimal@@Base+0xb22c>  // b.none
   22ef0:	ldr	x0, [sp, #40]
   22ef4:	sub	x0, x0, #0x1
   22ef8:	str	x0, [sp, #40]
   22efc:	ldr	x0, [sp, #40]
   22f00:	strb	wzr, [x0]
   22f04:	ldr	x1, [sp, #40]
   22f08:	ldr	x0, [sp, #24]
   22f0c:	sub	x0, x1, x0
   22f10:	ldp	x29, x30, [sp], #48
   22f14:	ret
   22f18:	stp	x29, x30, [sp, #-64]!
   22f1c:	mov	x29, sp
   22f20:	str	x0, [sp, #40]
   22f24:	str	w1, [sp, #36]
   22f28:	str	w2, [sp, #32]
   22f2c:	str	x3, [sp, #24]
   22f30:	ldr	x0, [sp, #24]
   22f34:	cmp	x0, #0x0
   22f38:	b.ne	22f48 <PyInit__decimal@@Base+0xb270>  // b.any
   22f3c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   22f40:	add	x0, x0, #0x5e8
   22f44:	str	x0, [sp, #24]
   22f48:	ldr	x0, [sp, #40]
   22f4c:	mov	w1, #0x5b                  	// #91
   22f50:	strb	w1, [x0]
   22f54:	ldr	x0, [sp, #40]
   22f58:	add	x0, x0, #0x1
   22f5c:	strb	wzr, [x0]
   22f60:	ldr	x0, [sp, #40]
   22f64:	add	x0, x0, #0x1
   22f68:	str	x0, [sp, #56]
   22f6c:	ldr	w0, [sp, #36]
   22f70:	sub	w0, w0, #0x1
   22f74:	str	w0, [sp, #36]
   22f78:	str	wzr, [sp, #52]
   22f7c:	b	23020 <PyInit__decimal@@Base+0xb348>
   22f80:	ldr	w0, [sp, #52]
   22f84:	mov	w1, #0x1                   	// #1
   22f88:	lsl	w1, w1, w0
   22f8c:	ldr	w0, [sp, #32]
   22f90:	and	w0, w1, w0
   22f94:	cmp	w0, #0x0
   22f98:	b.eq	23014 <PyInit__decimal@@Base+0xb33c>  // b.none
   22f9c:	ldrsw	x4, [sp, #36]
   22fa0:	ldrsw	x0, [sp, #52]
   22fa4:	lsl	x0, x0, #3
   22fa8:	ldr	x1, [sp, #24]
   22fac:	add	x0, x1, x0
   22fb0:	ldr	x0, [x0]
   22fb4:	mov	x3, x0
   22fb8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   22fbc:	add	x2, x0, #0x1c0
   22fc0:	mov	x1, x4
   22fc4:	ldr	x0, [sp, #56]
   22fc8:	bl	66b0 <snprintf@plt>
   22fcc:	str	w0, [sp, #48]
   22fd0:	ldr	w0, [sp, #48]
   22fd4:	cmp	w0, #0x0
   22fd8:	b.lt	22fec <PyInit__decimal@@Base+0xb314>  // b.tstop
   22fdc:	ldr	w1, [sp, #48]
   22fe0:	ldr	w0, [sp, #36]
   22fe4:	cmp	w1, w0
   22fe8:	b.lt	22ff4 <PyInit__decimal@@Base+0xb31c>  // b.tstop
   22fec:	mov	w0, #0xffffffff            	// #-1
   22ff0:	b	23074 <PyInit__decimal@@Base+0xb39c>
   22ff4:	ldrsw	x0, [sp, #48]
   22ff8:	ldr	x1, [sp, #56]
   22ffc:	add	x0, x1, x0
   23000:	str	x0, [sp, #56]
   23004:	ldr	w1, [sp, #36]
   23008:	ldr	w0, [sp, #48]
   2300c:	sub	w0, w1, w0
   23010:	str	w0, [sp, #36]
   23014:	ldr	w0, [sp, #52]
   23018:	add	w0, w0, #0x1
   2301c:	str	w0, [sp, #52]
   23020:	ldr	w0, [sp, #52]
   23024:	cmp	w0, #0xe
   23028:	b.le	22f80 <PyInit__decimal@@Base+0xb2a8>
   2302c:	ldr	x0, [sp, #40]
   23030:	add	x0, x0, #0x1
   23034:	ldr	x1, [sp, #56]
   23038:	cmp	x1, x0
   2303c:	b.eq	2304c <PyInit__decimal@@Base+0xb374>  // b.none
   23040:	ldr	x0, [sp, #56]
   23044:	sub	x0, x0, #0x2
   23048:	str	x0, [sp, #56]
   2304c:	ldr	x0, [sp, #56]
   23050:	add	x1, x0, #0x1
   23054:	str	x1, [sp, #56]
   23058:	mov	w1, #0x5d                  	// #93
   2305c:	strb	w1, [x0]
   23060:	ldr	x0, [sp, #56]
   23064:	strb	wzr, [x0]
   23068:	ldr	x1, [sp, #56]
   2306c:	ldr	x0, [sp, #40]
   23070:	sub	x0, x1, x0
   23074:	ldp	x29, x30, [sp], #64
   23078:	ret
   2307c:	stp	x29, x30, [sp, #-80]!
   23080:	mov	x29, sp
   23084:	str	x0, [sp, #40]
   23088:	str	w1, [sp, #36]
   2308c:	str	w2, [sp, #32]
   23090:	str	x3, [sp, #24]
   23094:	str	wzr, [sp, #64]
   23098:	ldr	x0, [sp, #24]
   2309c:	cmp	x0, #0x0
   230a0:	b.ne	230b0 <PyInit__decimal@@Base+0xb3d8>  // b.any
   230a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   230a8:	add	x0, x0, #0x660
   230ac:	str	x0, [sp, #24]
   230b0:	ldr	x0, [sp, #40]
   230b4:	mov	w1, #0x5b                  	// #91
   230b8:	strb	w1, [x0]
   230bc:	ldr	x0, [sp, #40]
   230c0:	add	x0, x0, #0x1
   230c4:	strb	wzr, [x0]
   230c8:	ldr	x0, [sp, #40]
   230cc:	add	x0, x0, #0x1
   230d0:	str	x0, [sp, #72]
   230d4:	ldr	w0, [sp, #36]
   230d8:	sub	w0, w0, #0x1
   230dc:	str	w0, [sp, #36]
   230e0:	str	wzr, [sp, #68]
   230e4:	b	231c0 <PyInit__decimal@@Base+0xb4e8>
   230e8:	ldr	w0, [sp, #68]
   230ec:	mov	w1, #0x1                   	// #1
   230f0:	lsl	w0, w1, w0
   230f4:	ldr	w1, [sp, #32]
   230f8:	and	w0, w1, w0
   230fc:	str	w0, [sp, #60]
   23100:	ldr	w0, [sp, #60]
   23104:	cmp	w0, #0x0
   23108:	b.eq	231b4 <PyInit__decimal@@Base+0xb4dc>  // b.none
   2310c:	ldr	w1, [sp, #60]
   23110:	mov	w0, #0x3ba                 	// #954
   23114:	and	w0, w1, w0
   23118:	cmp	w0, #0x0
   2311c:	b.eq	23134 <PyInit__decimal@@Base+0xb45c>  // b.none
   23120:	ldr	w0, [sp, #64]
   23124:	cmp	w0, #0x0
   23128:	b.ne	231b0 <PyInit__decimal@@Base+0xb4d8>  // b.any
   2312c:	mov	w0, #0x1                   	// #1
   23130:	str	w0, [sp, #64]
   23134:	ldrsw	x4, [sp, #36]
   23138:	ldrsw	x0, [sp, #68]
   2313c:	lsl	x0, x0, #3
   23140:	ldr	x1, [sp, #24]
   23144:	add	x0, x1, x0
   23148:	ldr	x0, [x0]
   2314c:	mov	x3, x0
   23150:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   23154:	add	x2, x0, #0x1c0
   23158:	mov	x1, x4
   2315c:	ldr	x0, [sp, #72]
   23160:	bl	66b0 <snprintf@plt>
   23164:	str	w0, [sp, #56]
   23168:	ldr	w0, [sp, #56]
   2316c:	cmp	w0, #0x0
   23170:	b.lt	23184 <PyInit__decimal@@Base+0xb4ac>  // b.tstop
   23174:	ldr	w1, [sp, #56]
   23178:	ldr	w0, [sp, #36]
   2317c:	cmp	w1, w0
   23180:	b.lt	2318c <PyInit__decimal@@Base+0xb4b4>  // b.tstop
   23184:	mov	w0, #0xffffffff            	// #-1
   23188:	b	23214 <PyInit__decimal@@Base+0xb53c>
   2318c:	ldrsw	x0, [sp, #56]
   23190:	ldr	x1, [sp, #72]
   23194:	add	x0, x1, x0
   23198:	str	x0, [sp, #72]
   2319c:	ldr	w1, [sp, #36]
   231a0:	ldr	w0, [sp, #56]
   231a4:	sub	w0, w1, w0
   231a8:	str	w0, [sp, #36]
   231ac:	b	231b4 <PyInit__decimal@@Base+0xb4dc>
   231b0:	nop
   231b4:	ldr	w0, [sp, #68]
   231b8:	add	w0, w0, #0x1
   231bc:	str	w0, [sp, #68]
   231c0:	ldr	w0, [sp, #68]
   231c4:	cmp	w0, #0xe
   231c8:	b.le	230e8 <PyInit__decimal@@Base+0xb410>
   231cc:	ldr	x0, [sp, #40]
   231d0:	add	x0, x0, #0x1
   231d4:	ldr	x1, [sp, #72]
   231d8:	cmp	x1, x0
   231dc:	b.eq	231ec <PyInit__decimal@@Base+0xb514>  // b.none
   231e0:	ldr	x0, [sp, #72]
   231e4:	sub	x0, x0, #0x2
   231e8:	str	x0, [sp, #72]
   231ec:	ldr	x0, [sp, #72]
   231f0:	add	x1, x0, #0x1
   231f4:	str	x1, [sp, #72]
   231f8:	mov	w1, #0x5d                  	// #93
   231fc:	strb	w1, [x0]
   23200:	ldr	x0, [sp, #72]
   23204:	strb	wzr, [x0]
   23208:	ldr	x1, [sp, #72]
   2320c:	ldr	x0, [sp, #40]
   23210:	sub	x0, x1, x0
   23214:	ldp	x29, x30, [sp], #80
   23218:	ret
   2321c:	stp	x29, x30, [sp, #-48]!
   23220:	mov	x29, sp
   23224:	str	x0, [sp, #24]
   23228:	str	x1, [sp, #16]
   2322c:	mov	w1, #0x1                   	// #1
   23230:	ldr	x0, [sp, #16]
   23234:	bl	212d0 <PyInit__decimal@@Base+0x95f8>
   23238:	str	x0, [sp, #40]
   2323c:	ldr	x0, [sp, #40]
   23240:	cmp	x0, #0x0
   23244:	b.eq	23274 <PyInit__decimal@@Base+0xb59c>  // b.none
   23248:	ldr	x2, [sp, #40]
   2324c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   23250:	add	x1, x0, #0x1c8
   23254:	ldr	x0, [sp, #24]
   23258:	bl	6b30 <fprintf@plt>
   2325c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   23260:	add	x0, x0, #0x6f8
   23264:	ldr	x1, [x0]
   23268:	ldr	x0, [sp, #40]
   2326c:	blr	x1
   23270:	b	2328c <PyInit__decimal@@Base+0xb5b4>
   23274:	ldr	x3, [sp, #24]
   23278:	mov	x2, #0x19                  	// #25
   2327c:	mov	x1, #0x1                   	// #1
   23280:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   23284:	add	x0, x0, #0x1d0
   23288:	bl	69d0 <fwrite@plt>
   2328c:	nop
   23290:	ldp	x29, x30, [sp], #48
   23294:	ret
   23298:	stp	x29, x30, [sp, #-48]!
   2329c:	mov	x29, sp
   232a0:	str	x0, [sp, #24]
   232a4:	mov	w1, #0x1                   	// #1
   232a8:	ldr	x0, [sp, #24]
   232ac:	bl	212d0 <PyInit__decimal@@Base+0x95f8>
   232b0:	str	x0, [sp, #40]
   232b4:	ldr	x0, [sp, #40]
   232b8:	cmp	x0, #0x0
   232bc:	b.eq	232e0 <PyInit__decimal@@Base+0xb608>  // b.none
   232c0:	ldr	x0, [sp, #40]
   232c4:	bl	68b0 <puts@plt>
   232c8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   232cc:	add	x0, x0, #0x6f8
   232d0:	ldr	x1, [x0]
   232d4:	ldr	x0, [sp, #40]
   232d8:	blr	x1
   232dc:	b	23304 <PyInit__decimal@@Base+0xb62c>
   232e0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   232e4:	ldr	x0, [x0, #3904]
   232e8:	ldr	x0, [x0]
   232ec:	mov	x3, x0
   232f0:	mov	x2, #0x19                  	// #25
   232f4:	mov	x1, #0x1                   	// #1
   232f8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   232fc:	add	x0, x0, #0x1d0
   23300:	bl	69d0 <fwrite@plt>
   23304:	nop
   23308:	ldp	x29, x30, [sp], #48
   2330c:	ret
   23310:	sub	sp, sp, #0x30
   23314:	str	x0, [sp, #24]
   23318:	str	x1, [sp, #16]
   2331c:	str	x2, [sp, #8]
   23320:	str	x3, [sp]
   23324:	ldr	x0, [sp, #8]
   23328:	mov	x6, x0
   2332c:	mov	x7, #0x0                   	// #0
   23330:	ldr	x0, [sp]
   23334:	mov	x4, x0
   23338:	mov	x5, #0x0                   	// #0
   2333c:	mul	x1, x6, x4
   23340:	umulh	x0, x6, x4
   23344:	madd	x0, x7, x4, x0
   23348:	madd	x0, x6, x5, x0
   2334c:	mov	x8, x1
   23350:	mov	x9, x0
   23354:	stp	x8, x9, [sp, #32]
   23358:	ldr	x0, [sp, #40]
   2335c:	mov	x10, x0
   23360:	mov	x11, #0x0                   	// #0
   23364:	mov	x1, x10
   23368:	ldr	x0, [sp, #24]
   2336c:	str	x1, [x0]
   23370:	ldr	x1, [sp, #32]
   23374:	ldr	x0, [sp, #16]
   23378:	str	x1, [x0]
   2337c:	nop
   23380:	add	sp, sp, #0x30
   23384:	ret
   23388:	sub	sp, sp, #0x30
   2338c:	str	x0, [sp, #24]
   23390:	str	x1, [sp, #16]
   23394:	str	x2, [sp, #8]
   23398:	ldr	x0, [sp, #8]
   2339c:	str	xzr, [x0]
   233a0:	ldr	x1, [sp, #24]
   233a4:	ldr	x0, [sp, #16]
   233a8:	add	x0, x1, x0
   233ac:	str	x0, [sp, #40]
   233b0:	ldr	x1, [sp, #40]
   233b4:	ldr	x0, [sp, #24]
   233b8:	cmp	x1, x0
   233bc:	b.cs	233cc <PyInit__decimal@@Base+0xb6f4>  // b.hs, b.nlast
   233c0:	ldr	x0, [sp, #8]
   233c4:	mov	x1, #0x1                   	// #1
   233c8:	str	x1, [x0]
   233cc:	ldr	x0, [sp, #40]
   233d0:	add	sp, sp, #0x30
   233d4:	ret
   233d8:	stp	x29, x30, [sp, #-64]!
   233dc:	mov	x29, sp
   233e0:	str	x0, [sp, #40]
   233e4:	str	x1, [sp, #32]
   233e8:	str	x2, [sp, #24]
   233ec:	add	x0, sp, #0x38
   233f0:	ldr	x3, [sp, #32]
   233f4:	ldr	x2, [sp, #40]
   233f8:	mov	x1, x0
   233fc:	ldr	x0, [sp, #24]
   23400:	bl	23310 <PyInit__decimal@@Base+0xb638>
   23404:	ldr	x0, [sp, #56]
   23408:	ldp	x29, x30, [sp], #64
   2340c:	ret
   23410:	stp	x29, x30, [sp, #-64]!
   23414:	mov	x29, sp
   23418:	str	x0, [sp, #24]
   2341c:	str	x1, [sp, #16]
   23420:	add	x0, sp, #0x28
   23424:	mov	x2, x0
   23428:	ldr	x1, [sp, #16]
   2342c:	ldr	x0, [sp, #24]
   23430:	bl	233d8 <PyInit__decimal@@Base+0xb700>
   23434:	str	x0, [sp, #56]
   23438:	ldr	x0, [sp, #40]
   2343c:	cmp	x0, #0x0
   23440:	b.eq	2344c <PyInit__decimal@@Base+0xb774>  // b.none
   23444:	mov	x0, #0x0                   	// #0
   23448:	b	2348c <PyInit__decimal@@Base+0xb7b4>
   2344c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   23450:	add	x0, x0, #0x6e0
   23454:	ldr	x1, [x0]
   23458:	ldr	x0, [sp, #56]
   2345c:	blr	x1
   23460:	str	x0, [sp, #48]
   23464:	ldr	x0, [sp, #48]
   23468:	cmp	x0, #0x0
   2346c:	b.ne	23478 <PyInit__decimal@@Base+0xb7a0>  // b.any
   23470:	mov	x0, #0x0                   	// #0
   23474:	b	2348c <PyInit__decimal@@Base+0xb7b4>
   23478:	ldr	x2, [sp, #56]
   2347c:	mov	w1, #0x0                   	// #0
   23480:	ldr	x0, [sp, #48]
   23484:	bl	6710 <memset@plt>
   23488:	ldr	x0, [sp, #48]
   2348c:	ldp	x29, x30, [sp], #64
   23490:	ret
   23494:	stp	x29, x30, [sp, #-48]!
   23498:	mov	x29, sp
   2349c:	str	x0, [sp, #24]
   234a0:	str	x1, [sp, #16]
   234a4:	add	x0, sp, #0x20
   234a8:	mov	x2, x0
   234ac:	ldr	x1, [sp, #16]
   234b0:	ldr	x0, [sp, #24]
   234b4:	bl	233d8 <PyInit__decimal@@Base+0xb700>
   234b8:	str	x0, [sp, #40]
   234bc:	ldr	x0, [sp, #32]
   234c0:	cmp	x0, #0x0
   234c4:	b.eq	234d0 <PyInit__decimal@@Base+0xb7f8>  // b.none
   234c8:	mov	x0, #0x0                   	// #0
   234cc:	b	234e4 <PyInit__decimal@@Base+0xb80c>
   234d0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   234d4:	add	x0, x0, #0x6e0
   234d8:	ldr	x1, [x0]
   234dc:	ldr	x0, [sp, #40]
   234e0:	blr	x1
   234e4:	ldp	x29, x30, [sp], #48
   234e8:	ret
   234ec:	stp	x29, x30, [sp, #-48]!
   234f0:	mov	x29, sp
   234f4:	str	x0, [sp, #24]
   234f8:	str	x1, [sp, #16]
   234fc:	add	x0, sp, #0x28
   23500:	mov	x2, x0
   23504:	ldr	x1, [sp, #16]
   23508:	ldr	x0, [sp, #24]
   2350c:	bl	233d8 <PyInit__decimal@@Base+0xb700>
   23510:	ldr	x0, [sp, #40]
   23514:	cmp	x0, #0x0
   23518:	b.eq	23524 <PyInit__decimal@@Base+0xb84c>  // b.none
   2351c:	mov	x0, #0x0                   	// #0
   23520:	b	2353c <PyInit__decimal@@Base+0xb864>
   23524:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   23528:	add	x0, x0, #0x6f0
   2352c:	ldr	x2, [x0]
   23530:	ldr	x1, [sp, #16]
   23534:	ldr	x0, [sp, #24]
   23538:	blr	x2
   2353c:	ldp	x29, x30, [sp], #48
   23540:	ret
   23544:	stp	x29, x30, [sp, #-80]!
   23548:	mov	x29, sp
   2354c:	str	x0, [sp, #40]
   23550:	str	x1, [sp, #32]
   23554:	str	x2, [sp, #24]
   23558:	str	x3, [sp, #16]
   2355c:	add	x0, sp, #0x38
   23560:	mov	x2, x0
   23564:	ldr	x1, [sp, #24]
   23568:	ldr	x0, [sp, #32]
   2356c:	bl	233d8 <PyInit__decimal@@Base+0xb700>
   23570:	str	x0, [sp, #72]
   23574:	ldr	x0, [sp, #56]
   23578:	cmp	x0, #0x0
   2357c:	b.eq	23594 <PyInit__decimal@@Base+0xb8bc>  // b.none
   23580:	ldr	x0, [sp, #16]
   23584:	mov	w1, #0x1                   	// #1
   23588:	strb	w1, [x0]
   2358c:	ldr	x0, [sp, #40]
   23590:	b	235d4 <PyInit__decimal@@Base+0xb8fc>
   23594:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   23598:	add	x0, x0, #0x6e8
   2359c:	ldr	x2, [x0]
   235a0:	ldr	x1, [sp, #72]
   235a4:	ldr	x0, [sp, #40]
   235a8:	blr	x2
   235ac:	str	x0, [sp, #64]
   235b0:	ldr	x0, [sp, #64]
   235b4:	cmp	x0, #0x0
   235b8:	b.ne	235d0 <PyInit__decimal@@Base+0xb8f8>  // b.any
   235bc:	ldr	x0, [sp, #16]
   235c0:	mov	w1, #0x1                   	// #1
   235c4:	strb	w1, [x0]
   235c8:	ldr	x0, [sp, #40]
   235cc:	b	235d4 <PyInit__decimal@@Base+0xb8fc>
   235d0:	ldr	x0, [sp, #64]
   235d4:	ldp	x29, x30, [sp], #80
   235d8:	ret
   235dc:	stp	x29, x30, [sp, #-64]!
   235e0:	mov	x29, sp
   235e4:	str	x0, [sp, #40]
   235e8:	str	x1, [sp, #32]
   235ec:	str	x2, [sp, #24]
   235f0:	add	x0, sp, #0x30
   235f4:	mov	x2, x0
   235f8:	ldr	x1, [sp, #24]
   235fc:	ldr	x0, [sp, #32]
   23600:	bl	233d8 <PyInit__decimal@@Base+0xb700>
   23604:	str	x0, [sp, #56]
   23608:	ldr	x0, [sp, #48]
   2360c:	cmp	x0, #0x0
   23610:	b.eq	2361c <PyInit__decimal@@Base+0xb944>  // b.none
   23614:	mov	x0, #0x0                   	// #0
   23618:	b	2365c <PyInit__decimal@@Base+0xb984>
   2361c:	add	x0, sp, #0x30
   23620:	mov	x2, x0
   23624:	ldr	x1, [sp, #40]
   23628:	ldr	x0, [sp, #56]
   2362c:	bl	23388 <PyInit__decimal@@Base+0xb6b0>
   23630:	str	x0, [sp, #56]
   23634:	ldr	x0, [sp, #48]
   23638:	cmp	x0, #0x0
   2363c:	b.eq	23648 <PyInit__decimal@@Base+0xb970>  // b.none
   23640:	mov	x0, #0x0                   	// #0
   23644:	b	2365c <PyInit__decimal@@Base+0xb984>
   23648:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2364c:	add	x0, x0, #0x6e0
   23650:	ldr	x1, [x0]
   23654:	ldr	x0, [sp, #56]
   23658:	blr	x1
   2365c:	ldp	x29, x30, [sp], #64
   23660:	ret
   23664:	stp	x29, x30, [sp, #-48]!
   23668:	mov	x29, sp
   2366c:	str	x0, [sp, #24]
   23670:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   23674:	add	x0, x0, #0x6d8
   23678:	ldr	x0, [x0]
   2367c:	ldr	x2, [sp, #24]
   23680:	ldr	x1, [sp, #24]
   23684:	cmp	x2, x0
   23688:	csel	x0, x1, x0, ge  // ge = tcont
   2368c:	str	x0, [sp, #24]
   23690:	mov	x1, #0x30                  	// #48
   23694:	mov	x0, #0x1                   	// #1
   23698:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   2369c:	str	x0, [sp, #40]
   236a0:	ldr	x0, [sp, #40]
   236a4:	cmp	x0, #0x0
   236a8:	b.ne	236b4 <PyInit__decimal@@Base+0xb9dc>  // b.any
   236ac:	mov	x0, #0x0                   	// #0
   236b0:	b	23728 <PyInit__decimal@@Base+0xba50>
   236b4:	ldr	x0, [sp, #24]
   236b8:	mov	x1, #0x8                   	// #8
   236bc:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   236c0:	mov	x1, x0
   236c4:	ldr	x0, [sp, #40]
   236c8:	str	x1, [x0, #40]
   236cc:	ldr	x0, [sp, #40]
   236d0:	ldr	x0, [x0, #40]
   236d4:	cmp	x0, #0x0
   236d8:	b.ne	236f8 <PyInit__decimal@@Base+0xba20>  // b.any
   236dc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   236e0:	add	x0, x0, #0x6f8
   236e4:	ldr	x1, [x0]
   236e8:	ldr	x0, [sp, #40]
   236ec:	blr	x1
   236f0:	mov	x0, #0x0                   	// #0
   236f4:	b	23728 <PyInit__decimal@@Base+0xba50>
   236f8:	ldr	x0, [sp, #40]
   236fc:	strb	wzr, [x0]
   23700:	ldr	x0, [sp, #40]
   23704:	str	xzr, [x0, #8]
   23708:	ldr	x0, [sp, #40]
   2370c:	str	xzr, [x0, #16]
   23710:	ldr	x0, [sp, #40]
   23714:	str	xzr, [x0, #24]
   23718:	ldr	x0, [sp, #40]
   2371c:	ldr	x1, [sp, #24]
   23720:	str	x1, [x0, #32]
   23724:	ldr	x0, [sp, #40]
   23728:	ldp	x29, x30, [sp], #48
   2372c:	ret
   23730:	stp	x29, x30, [sp, #-16]!
   23734:	mov	x29, sp
   23738:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2373c:	add	x0, x0, #0x6d8
   23740:	ldr	x0, [x0]
   23744:	bl	23664 <PyInit__decimal@@Base+0xb98c>
   23748:	ldp	x29, x30, [sp], #16
   2374c:	ret
   23750:	stp	x29, x30, [sp, #-48]!
   23754:	mov	x29, sp
   23758:	str	x0, [sp, #24]
   2375c:	bl	23730 <PyInit__decimal@@Base+0xba58>
   23760:	str	x0, [sp, #40]
   23764:	ldr	x0, [sp, #40]
   23768:	cmp	x0, #0x0
   2376c:	b.ne	2377c <PyInit__decimal@@Base+0xbaa4>  // b.any
   23770:	mov	w1, #0x200                 	// #512
   23774:	ldr	x0, [sp, #24]
   23778:	bl	1bbe4 <PyInit__decimal@@Base+0x3f0c>
   2377c:	ldr	x0, [sp, #40]
   23780:	ldp	x29, x30, [sp], #48
   23784:	ret
   23788:	stp	x29, x30, [sp, #-64]!
   2378c:	mov	x29, sp
   23790:	str	x0, [sp, #40]
   23794:	str	x1, [sp, #32]
   23798:	str	x2, [sp, #24]
   2379c:	ldr	x0, [sp, #40]
   237a0:	ldr	x0, [x0, #40]
   237a4:	str	x0, [sp, #56]
   237a8:	ldr	x0, [sp, #32]
   237ac:	mov	x1, #0x8                   	// #8
   237b0:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   237b4:	mov	x1, x0
   237b8:	ldr	x0, [sp, #40]
   237bc:	str	x1, [x0, #40]
   237c0:	ldr	x0, [sp, #40]
   237c4:	ldr	x0, [x0, #40]
   237c8:	cmp	x0, #0x0
   237cc:	b.ne	23830 <PyInit__decimal@@Base+0xbb58>  // b.any
   237d0:	ldr	x0, [sp, #40]
   237d4:	ldr	x1, [sp, #56]
   237d8:	str	x1, [x0, #40]
   237dc:	ldr	x0, [sp, #40]
   237e0:	bl	26120 <PyInit__decimal@@Base+0xe448>
   237e4:	ldr	x0, [sp, #40]
   237e8:	bl	261d4 <PyInit__decimal@@Base+0xe4fc>
   237ec:	ldr	x0, [sp, #40]
   237f0:	str	xzr, [x0, #24]
   237f4:	ldr	x0, [sp, #40]
   237f8:	ldr	x1, [x0, #24]
   237fc:	ldr	x0, [sp, #40]
   23800:	str	x1, [x0, #16]
   23804:	ldr	x0, [sp, #40]
   23808:	ldr	x1, [x0, #16]
   2380c:	ldr	x0, [sp, #40]
   23810:	str	x1, [x0, #8]
   23814:	ldr	x0, [sp, #24]
   23818:	ldr	w0, [x0]
   2381c:	orr	w1, w0, #0x200
   23820:	ldr	x0, [sp, #24]
   23824:	str	w1, [x0]
   23828:	mov	w0, #0x0                   	// #0
   2382c:	b	2386c <PyInit__decimal@@Base+0xbb94>
   23830:	ldr	x0, [sp, #40]
   23834:	ldr	x3, [x0, #40]
   23838:	ldr	x0, [sp, #40]
   2383c:	ldr	x0, [x0, #32]
   23840:	lsl	x0, x0, #3
   23844:	mov	x2, x0
   23848:	ldr	x1, [sp, #56]
   2384c:	mov	x0, x3
   23850:	bl	6510 <memcpy@plt>
   23854:	ldr	x0, [sp, #40]
   23858:	ldr	x1, [sp, #32]
   2385c:	str	x1, [x0, #32]
   23860:	ldr	x0, [sp, #40]
   23864:	bl	26258 <PyInit__decimal@@Base+0xe580>
   23868:	mov	w0, #0x1                   	// #1
   2386c:	ldp	x29, x30, [sp], #64
   23870:	ret
   23874:	stp	x29, x30, [sp, #-64]!
   23878:	mov	x29, sp
   2387c:	str	x0, [sp, #40]
   23880:	str	x1, [sp, #32]
   23884:	str	x2, [sp, #24]
   23888:	ldr	x0, [sp, #40]
   2388c:	ldr	x0, [x0, #40]
   23890:	str	x0, [sp, #56]
   23894:	ldr	x0, [sp, #32]
   23898:	mov	x1, #0x8                   	// #8
   2389c:	bl	234ec <PyInit__decimal@@Base+0xb814>
   238a0:	mov	x1, x0
   238a4:	ldr	x0, [sp, #40]
   238a8:	str	x1, [x0, #40]
   238ac:	ldr	x0, [sp, #40]
   238b0:	ldr	x0, [x0, #40]
   238b4:	cmp	x0, #0x0
   238b8:	b.ne	2391c <PyInit__decimal@@Base+0xbc44>  // b.any
   238bc:	ldr	x0, [sp, #40]
   238c0:	ldr	x1, [sp, #56]
   238c4:	str	x1, [x0, #40]
   238c8:	ldr	x0, [sp, #40]
   238cc:	bl	26120 <PyInit__decimal@@Base+0xe448>
   238d0:	ldr	x0, [sp, #40]
   238d4:	bl	261d4 <PyInit__decimal@@Base+0xe4fc>
   238d8:	ldr	x0, [sp, #40]
   238dc:	str	xzr, [x0, #24]
   238e0:	ldr	x0, [sp, #40]
   238e4:	ldr	x1, [x0, #24]
   238e8:	ldr	x0, [sp, #40]
   238ec:	str	x1, [x0, #16]
   238f0:	ldr	x0, [sp, #40]
   238f4:	ldr	x1, [x0, #16]
   238f8:	ldr	x0, [sp, #40]
   238fc:	str	x1, [x0, #8]
   23900:	ldr	x0, [sp, #24]
   23904:	ldr	w0, [x0]
   23908:	orr	w1, w0, #0x200
   2390c:	ldr	x0, [sp, #24]
   23910:	str	w1, [x0]
   23914:	mov	w0, #0x0                   	// #0
   23918:	b	23934 <PyInit__decimal@@Base+0xbc5c>
   2391c:	ldr	x0, [sp, #40]
   23920:	ldr	x1, [sp, #32]
   23924:	str	x1, [x0, #32]
   23928:	ldr	x0, [sp, #40]
   2392c:	bl	26258 <PyInit__decimal@@Base+0xe580>
   23930:	mov	w0, #0x1                   	// #1
   23934:	ldp	x29, x30, [sp], #64
   23938:	ret
   2393c:	stp	x29, x30, [sp, #-64]!
   23940:	mov	x29, sp
   23944:	str	x0, [sp, #40]
   23948:	str	x1, [sp, #32]
   2394c:	str	x2, [sp, #24]
   23950:	strb	wzr, [sp, #63]
   23954:	ldr	x0, [sp, #40]
   23958:	ldr	x0, [x0, #40]
   2395c:	ldr	x1, [sp, #32]
   23960:	add	x2, sp, #0x3f
   23964:	mov	x3, x2
   23968:	mov	x2, #0x8                   	// #8
   2396c:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   23970:	mov	x1, x0
   23974:	ldr	x0, [sp, #40]
   23978:	str	x1, [x0, #40]
   2397c:	ldrb	w0, [sp, #63]
   23980:	cmp	w0, #0x0
   23984:	b.ne	23998 <PyInit__decimal@@Base+0xbcc0>  // b.any
   23988:	ldr	x0, [sp, #40]
   2398c:	ldr	x1, [sp, #32]
   23990:	str	x1, [x0, #32]
   23994:	b	23a00 <PyInit__decimal@@Base+0xbd28>
   23998:	ldr	x0, [sp, #40]
   2399c:	ldr	x0, [x0, #32]
   239a0:	ldr	x1, [sp, #32]
   239a4:	cmp	x1, x0
   239a8:	b.le	23a00 <PyInit__decimal@@Base+0xbd28>
   239ac:	ldr	x0, [sp, #40]
   239b0:	bl	26120 <PyInit__decimal@@Base+0xe448>
   239b4:	ldr	x0, [sp, #40]
   239b8:	bl	261d4 <PyInit__decimal@@Base+0xe4fc>
   239bc:	ldr	x0, [sp, #40]
   239c0:	str	xzr, [x0, #24]
   239c4:	ldr	x0, [sp, #40]
   239c8:	ldr	x1, [x0, #24]
   239cc:	ldr	x0, [sp, #40]
   239d0:	str	x1, [x0, #16]
   239d4:	ldr	x0, [sp, #40]
   239d8:	ldr	x1, [x0, #16]
   239dc:	ldr	x0, [sp, #40]
   239e0:	str	x1, [x0, #8]
   239e4:	ldr	x0, [sp, #24]
   239e8:	ldr	w0, [x0]
   239ec:	orr	w1, w0, #0x200
   239f0:	ldr	x0, [sp, #24]
   239f4:	str	w1, [x0]
   239f8:	mov	w0, #0x0                   	// #0
   239fc:	b	23a04 <PyInit__decimal@@Base+0xbd2c>
   23a00:	mov	w0, #0x1                   	// #1
   23a04:	ldp	x29, x30, [sp], #64
   23a08:	ret
   23a0c:	sub	sp, sp, #0x30
   23a10:	str	x0, [sp, #24]
   23a14:	str	x1, [sp, #16]
   23a18:	str	x2, [sp, #8]
   23a1c:	str	x3, [sp]
   23a20:	ldr	x0, [sp, #8]
   23a24:	mov	x6, x0
   23a28:	mov	x7, #0x0                   	// #0
   23a2c:	ldr	x0, [sp]
   23a30:	mov	x4, x0
   23a34:	mov	x5, #0x0                   	// #0
   23a38:	mul	x1, x6, x4
   23a3c:	umulh	x0, x6, x4
   23a40:	madd	x0, x7, x4, x0
   23a44:	madd	x0, x6, x5, x0
   23a48:	mov	x8, x1
   23a4c:	mov	x9, x0
   23a50:	stp	x8, x9, [sp, #32]
   23a54:	ldr	x0, [sp, #40]
   23a58:	mov	x10, x0
   23a5c:	mov	x11, #0x0                   	// #0
   23a60:	mov	x1, x10
   23a64:	ldr	x0, [sp, #24]
   23a68:	str	x1, [x0]
   23a6c:	ldr	x1, [sp, #32]
   23a70:	ldr	x0, [sp, #16]
   23a74:	str	x1, [x0]
   23a78:	nop
   23a7c:	add	sp, sp, #0x30
   23a80:	ret
   23a84:	sub	sp, sp, #0x20
   23a88:	str	x0, [sp, #24]
   23a8c:	str	x1, [sp, #16]
   23a90:	str	x2, [sp, #8]
   23a94:	str	x3, [sp]
   23a98:	ldr	x0, [sp]
   23a9c:	cmp	x0, #0x9
   23aa0:	b.hi	23e68 <PyInit__decimal@@Base+0xc190>  // b.pmore
   23aa4:	ldr	x0, [sp]
   23aa8:	cmp	x0, #0x4
   23aac:	b.hi	23c80 <PyInit__decimal@@Base+0xbfa8>  // b.pmore
   23ab0:	ldr	x0, [sp]
   23ab4:	cmp	x0, #0x4
   23ab8:	b.eq	23c38 <PyInit__decimal@@Base+0xbf60>  // b.none
   23abc:	ldr	x0, [sp]
   23ac0:	cmp	x0, #0x4
   23ac4:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23ac8:	ldr	x0, [sp]
   23acc:	cmp	x0, #0x3
   23ad0:	b.eq	23bd8 <PyInit__decimal@@Base+0xbf00>  // b.none
   23ad4:	ldr	x0, [sp]
   23ad8:	cmp	x0, #0x3
   23adc:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23ae0:	ldr	x0, [sp]
   23ae4:	cmp	x0, #0x2
   23ae8:	b.eq	23b78 <PyInit__decimal@@Base+0xbea0>  // b.none
   23aec:	ldr	x0, [sp]
   23af0:	cmp	x0, #0x2
   23af4:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23af8:	ldr	x0, [sp]
   23afc:	cmp	x0, #0x0
   23b00:	b.eq	23b14 <PyInit__decimal@@Base+0xbe3c>  // b.none
   23b04:	ldr	x0, [sp]
   23b08:	cmp	x0, #0x1
   23b0c:	b.eq	23b2c <PyInit__decimal@@Base+0xbe54>  // b.none
   23b10:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23b14:	ldr	x0, [sp, #24]
   23b18:	ldr	x1, [sp, #8]
   23b1c:	str	x1, [x0]
   23b20:	ldr	x0, [sp, #16]
   23b24:	str	xzr, [x0]
   23b28:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23b2c:	ldr	x1, [sp, #8]
   23b30:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   23b34:	movk	x0, #0xcccd
   23b38:	umulh	x0, x1, x0
   23b3c:	lsr	x1, x0, #3
   23b40:	ldr	x0, [sp, #24]
   23b44:	str	x1, [x0]
   23b48:	ldr	x0, [sp, #24]
   23b4c:	ldr	x1, [x0]
   23b50:	mov	x0, x1
   23b54:	lsl	x0, x0, #2
   23b58:	add	x0, x0, x1
   23b5c:	lsl	x0, x0, #1
   23b60:	mov	x1, x0
   23b64:	ldr	x0, [sp, #8]
   23b68:	sub	x1, x0, x1
   23b6c:	ldr	x0, [sp, #16]
   23b70:	str	x1, [x0]
   23b74:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23b78:	ldr	x0, [sp, #8]
   23b7c:	lsr	x1, x0, #2
   23b80:	mov	x0, #0xf5c3                	// #62915
   23b84:	movk	x0, #0x5c28, lsl #16
   23b88:	movk	x0, #0xc28f, lsl #32
   23b8c:	movk	x0, #0x28f5, lsl #48
   23b90:	umulh	x0, x1, x0
   23b94:	lsr	x1, x0, #2
   23b98:	ldr	x0, [sp, #24]
   23b9c:	str	x1, [x0]
   23ba0:	ldr	x0, [sp, #24]
   23ba4:	ldr	x1, [x0]
   23ba8:	mov	x0, x1
   23bac:	lsl	x0, x0, #1
   23bb0:	add	x0, x0, x1
   23bb4:	lsl	x0, x0, #3
   23bb8:	add	x0, x0, x1
   23bbc:	lsl	x0, x0, #2
   23bc0:	mov	x1, x0
   23bc4:	ldr	x0, [sp, #8]
   23bc8:	sub	x1, x0, x1
   23bcc:	ldr	x0, [sp, #16]
   23bd0:	str	x1, [x0]
   23bd4:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23bd8:	ldr	x0, [sp, #8]
   23bdc:	lsr	x1, x0, #3
   23be0:	mov	x0, #0xf7cf                	// #63439
   23be4:	movk	x0, #0xe353, lsl #16
   23be8:	movk	x0, #0x9ba5, lsl #32
   23bec:	movk	x0, #0x20c4, lsl #48
   23bf0:	umulh	x0, x1, x0
   23bf4:	lsr	x1, x0, #4
   23bf8:	ldr	x0, [sp, #24]
   23bfc:	str	x1, [x0]
   23c00:	ldr	x0, [sp, #24]
   23c04:	ldr	x1, [x0]
   23c08:	mov	x0, x1
   23c0c:	lsl	x0, x0, #5
   23c10:	sub	x0, x0, x1
   23c14:	lsl	x0, x0, #2
   23c18:	add	x0, x0, x1
   23c1c:	lsl	x0, x0, #3
   23c20:	mov	x1, x0
   23c24:	ldr	x0, [sp, #8]
   23c28:	sub	x1, x0, x1
   23c2c:	ldr	x0, [sp, #16]
   23c30:	str	x1, [x0]
   23c34:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23c38:	ldr	x1, [sp, #8]
   23c3c:	mov	x0, #0x594b                	// #22859
   23c40:	movk	x0, #0x3886, lsl #16
   23c44:	movk	x0, #0xc5d6, lsl #32
   23c48:	movk	x0, #0x346d, lsl #48
   23c4c:	umulh	x0, x1, x0
   23c50:	lsr	x1, x0, #11
   23c54:	ldr	x0, [sp, #24]
   23c58:	str	x1, [x0]
   23c5c:	ldr	x0, [sp, #24]
   23c60:	ldr	x1, [x0]
   23c64:	mov	x0, #0x2710                	// #10000
   23c68:	mul	x0, x1, x0
   23c6c:	ldr	x1, [sp, #8]
   23c70:	sub	x1, x1, x0
   23c74:	ldr	x0, [sp, #16]
   23c78:	str	x1, [x0]
   23c7c:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23c80:	ldr	x0, [sp]
   23c84:	cmp	x0, #0x9
   23c88:	b.eq	23e18 <PyInit__decimal@@Base+0xc140>  // b.none
   23c8c:	ldr	x0, [sp]
   23c90:	cmp	x0, #0x9
   23c94:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23c98:	ldr	x0, [sp]
   23c9c:	cmp	x0, #0x8
   23ca0:	b.eq	23dcc <PyInit__decimal@@Base+0xc0f4>  // b.none
   23ca4:	ldr	x0, [sp]
   23ca8:	cmp	x0, #0x8
   23cac:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23cb0:	ldr	x0, [sp]
   23cb4:	cmp	x0, #0x7
   23cb8:	b.eq	23d80 <PyInit__decimal@@Base+0xc0a8>  // b.none
   23cbc:	ldr	x0, [sp]
   23cc0:	cmp	x0, #0x7
   23cc4:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23cc8:	ldr	x0, [sp]
   23ccc:	cmp	x0, #0x5
   23cd0:	b.eq	23ce4 <PyInit__decimal@@Base+0xc00c>  // b.none
   23cd4:	ldr	x0, [sp]
   23cd8:	cmp	x0, #0x6
   23cdc:	b.eq	23d34 <PyInit__decimal@@Base+0xc05c>  // b.none
   23ce0:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23ce4:	ldr	x0, [sp, #8]
   23ce8:	lsr	x1, x0, #5
   23cec:	mov	x0, #0x7843                	// #30787
   23cf0:	movk	x0, #0x71b4, lsl #16
   23cf4:	movk	x0, #0x5ac4, lsl #32
   23cf8:	movk	x0, #0xa7c, lsl #48
   23cfc:	umulh	x0, x1, x0
   23d00:	lsr	x1, x0, #7
   23d04:	ldr	x0, [sp, #24]
   23d08:	str	x1, [x0]
   23d0c:	ldr	x0, [sp, #24]
   23d10:	ldr	x1, [x0]
   23d14:	mov	x0, #0x86a0                	// #34464
   23d18:	movk	x0, #0x1, lsl #16
   23d1c:	mul	x0, x1, x0
   23d20:	ldr	x1, [sp, #8]
   23d24:	sub	x1, x1, x0
   23d28:	ldr	x0, [sp, #16]
   23d2c:	str	x1, [x0]
   23d30:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23d34:	ldr	x1, [sp, #8]
   23d38:	mov	x0, #0x34db                	// #13531
   23d3c:	movk	x0, #0xd7b6, lsl #16
   23d40:	movk	x0, #0xde82, lsl #32
   23d44:	movk	x0, #0x431b, lsl #48
   23d48:	umulh	x0, x1, x0
   23d4c:	lsr	x1, x0, #18
   23d50:	ldr	x0, [sp, #24]
   23d54:	str	x1, [x0]
   23d58:	ldr	x0, [sp, #24]
   23d5c:	ldr	x1, [x0]
   23d60:	mov	x0, #0x4240                	// #16960
   23d64:	movk	x0, #0xf, lsl #16
   23d68:	mul	x0, x1, x0
   23d6c:	ldr	x1, [sp, #8]
   23d70:	sub	x1, x1, x0
   23d74:	ldr	x0, [sp, #16]
   23d78:	str	x1, [x0]
   23d7c:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23d80:	ldr	x1, [sp, #8]
   23d84:	mov	x0, #0x42bd                	// #17085
   23d88:	movk	x0, #0xe57a, lsl #16
   23d8c:	movk	x0, #0x94d5, lsl #32
   23d90:	movk	x0, #0xd6bf, lsl #48
   23d94:	umulh	x0, x1, x0
   23d98:	lsr	x1, x0, #23
   23d9c:	ldr	x0, [sp, #24]
   23da0:	str	x1, [x0]
   23da4:	ldr	x0, [sp, #24]
   23da8:	ldr	x1, [x0]
   23dac:	mov	x0, #0x9680                	// #38528
   23db0:	movk	x0, #0x98, lsl #16
   23db4:	mul	x0, x1, x0
   23db8:	ldr	x1, [sp, #8]
   23dbc:	sub	x1, x1, x0
   23dc0:	ldr	x0, [sp, #16]
   23dc4:	str	x1, [x0]
   23dc8:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23dcc:	ldr	x1, [sp, #8]
   23dd0:	mov	x0, #0xcefd                	// #52989
   23dd4:	movk	x0, #0x8461, lsl #16
   23dd8:	movk	x0, #0x7711, lsl #32
   23ddc:	movk	x0, #0xabcc, lsl #48
   23de0:	umulh	x0, x1, x0
   23de4:	lsr	x1, x0, #26
   23de8:	ldr	x0, [sp, #24]
   23dec:	str	x1, [x0]
   23df0:	ldr	x0, [sp, #24]
   23df4:	ldr	x1, [x0]
   23df8:	mov	x0, #0xe100                	// #57600
   23dfc:	movk	x0, #0x5f5, lsl #16
   23e00:	mul	x0, x1, x0
   23e04:	ldr	x1, [sp, #8]
   23e08:	sub	x1, x1, x0
   23e0c:	ldr	x0, [sp, #16]
   23e10:	str	x1, [x0]
   23e14:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23e18:	ldr	x0, [sp, #8]
   23e1c:	lsr	x1, x0, #9
   23e20:	mov	x0, #0x5a53                	// #23123
   23e24:	movk	x0, #0xa09b, lsl #16
   23e28:	movk	x0, #0xb82f, lsl #32
   23e2c:	movk	x0, #0x44, lsl #48
   23e30:	umulh	x0, x1, x0
   23e34:	lsr	x1, x0, #11
   23e38:	ldr	x0, [sp, #24]
   23e3c:	str	x1, [x0]
   23e40:	ldr	x0, [sp, #24]
   23e44:	ldr	x1, [x0]
   23e48:	mov	x0, #0xca00                	// #51712
   23e4c:	movk	x0, #0x3b9a, lsl #16
   23e50:	mul	x0, x1, x0
   23e54:	ldr	x1, [sp, #8]
   23e58:	sub	x1, x1, x0
   23e5c:	ldr	x0, [sp, #16]
   23e60:	str	x1, [x0]
   23e64:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23e68:	ldr	x0, [sp]
   23e6c:	cmp	x0, #0xe
   23e70:	b.hi	24068 <PyInit__decimal@@Base+0xc390>  // b.pmore
   23e74:	ldr	x0, [sp]
   23e78:	cmp	x0, #0xe
   23e7c:	b.eq	24018 <PyInit__decimal@@Base+0xc340>  // b.none
   23e80:	ldr	x0, [sp]
   23e84:	cmp	x0, #0xe
   23e88:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23e8c:	ldr	x0, [sp]
   23e90:	cmp	x0, #0xd
   23e94:	b.eq	23fc8 <PyInit__decimal@@Base+0xc2f0>  // b.none
   23e98:	ldr	x0, [sp]
   23e9c:	cmp	x0, #0xd
   23ea0:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23ea4:	ldr	x0, [sp]
   23ea8:	cmp	x0, #0xc
   23eac:	b.eq	23f78 <PyInit__decimal@@Base+0xc2a0>  // b.none
   23eb0:	ldr	x0, [sp]
   23eb4:	cmp	x0, #0xc
   23eb8:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   23ebc:	ldr	x0, [sp]
   23ec0:	cmp	x0, #0xa
   23ec4:	b.eq	23ed8 <PyInit__decimal@@Base+0xc200>  // b.none
   23ec8:	ldr	x0, [sp]
   23ecc:	cmp	x0, #0xb
   23ed0:	b.eq	23f28 <PyInit__decimal@@Base+0xc250>  // b.none
   23ed4:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23ed8:	ldr	x1, [sp, #8]
   23edc:	mov	x0, #0xd5bf                	// #54719
   23ee0:	movk	x0, #0xbded, lsl #16
   23ee4:	movk	x0, #0xfece, lsl #32
   23ee8:	movk	x0, #0xdbe6, lsl #48
   23eec:	umulh	x0, x1, x0
   23ef0:	lsr	x1, x0, #33
   23ef4:	ldr	x0, [sp, #24]
   23ef8:	str	x1, [x0]
   23efc:	ldr	x0, [sp, #24]
   23f00:	ldr	x1, [x0]
   23f04:	mov	x0, #0xe400                	// #58368
   23f08:	movk	x0, #0x540b, lsl #16
   23f0c:	movk	x0, #0x2, lsl #32
   23f10:	mul	x0, x1, x0
   23f14:	ldr	x1, [sp, #8]
   23f18:	sub	x1, x1, x0
   23f1c:	ldr	x0, [sp, #16]
   23f20:	str	x1, [x0]
   23f24:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23f28:	ldr	x1, [sp, #8]
   23f2c:	mov	x0, #0xaaff                	// #43775
   23f30:	movk	x0, #0xcb24, lsl #16
   23f34:	movk	x0, #0xff0b, lsl #32
   23f38:	movk	x0, #0xafeb, lsl #48
   23f3c:	umulh	x0, x1, x0
   23f40:	lsr	x1, x0, #36
   23f44:	ldr	x0, [sp, #24]
   23f48:	str	x1, [x0]
   23f4c:	ldr	x0, [sp, #24]
   23f50:	ldr	x1, [x0]
   23f54:	mov	x0, #0xe800                	// #59392
   23f58:	movk	x0, #0x4876, lsl #16
   23f5c:	movk	x0, #0x17, lsl #32
   23f60:	mul	x0, x1, x0
   23f64:	ldr	x1, [sp, #8]
   23f68:	sub	x1, x1, x0
   23f6c:	ldr	x0, [sp, #16]
   23f70:	str	x1, [x0]
   23f74:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23f78:	ldr	x1, [sp, #8]
   23f7c:	mov	x0, #0x2233                	// #8755
   23f80:	movk	x0, #0x5bd4, lsl #16
   23f84:	movk	x0, #0x3302, lsl #32
   23f88:	movk	x0, #0x232f, lsl #48
   23f8c:	umulh	x0, x1, x0
   23f90:	lsr	x1, x0, #37
   23f94:	ldr	x0, [sp, #24]
   23f98:	str	x1, [x0]
   23f9c:	ldr	x0, [sp, #24]
   23fa0:	ldr	x1, [x0]
   23fa4:	mov	x0, #0x1000                	// #4096
   23fa8:	movk	x0, #0xd4a5, lsl #16
   23fac:	movk	x0, #0xe8, lsl #32
   23fb0:	mul	x0, x1, x0
   23fb4:	ldr	x1, [sp, #8]
   23fb8:	sub	x1, x1, x0
   23fbc:	ldr	x0, [sp, #16]
   23fc0:	str	x1, [x0]
   23fc4:	b	24264 <PyInit__decimal@@Base+0xc58c>
   23fc8:	ldr	x1, [sp, #8]
   23fcc:	mov	x0, #0x385                 	// #901
   23fd0:	movk	x0, #0x92ed, lsl #16
   23fd4:	movk	x0, #0x84d0, lsl #32
   23fd8:	movk	x0, #0x384b, lsl #48
   23fdc:	umulh	x0, x1, x0
   23fe0:	lsr	x1, x0, #41
   23fe4:	ldr	x0, [sp, #24]
   23fe8:	str	x1, [x0]
   23fec:	ldr	x0, [sp, #24]
   23ff0:	ldr	x1, [x0]
   23ff4:	mov	x0, #0xa000                	// #40960
   23ff8:	movk	x0, #0x4e72, lsl #16
   23ffc:	movk	x0, #0x918, lsl #32
   24000:	mul	x0, x1, x0
   24004:	ldr	x1, [sp, #8]
   24008:	sub	x1, x1, x0
   2400c:	ldr	x0, [sp, #16]
   24010:	str	x1, [x0]
   24014:	b	24264 <PyInit__decimal@@Base+0xc58c>
   24018:	ldr	x1, [sp, #8]
   2401c:	mov	x0, #0xcd81                	// #52609
   24020:	movk	x0, #0x5095, lsl #16
   24024:	movk	x0, #0x4dc3, lsl #32
   24028:	movk	x0, #0xb42, lsl #48
   2402c:	umulh	x0, x1, x0
   24030:	lsr	x1, x0, #42
   24034:	ldr	x0, [sp, #24]
   24038:	str	x1, [x0]
   2403c:	ldr	x0, [sp, #24]
   24040:	ldr	x1, [x0]
   24044:	mov	x0, #0x4000                	// #16384
   24048:	movk	x0, #0x107a, lsl #16
   2404c:	movk	x0, #0x5af3, lsl #32
   24050:	mul	x0, x1, x0
   24054:	ldr	x1, [sp, #8]
   24058:	sub	x1, x1, x0
   2405c:	ldr	x0, [sp, #16]
   24060:	str	x1, [x0]
   24064:	b	24264 <PyInit__decimal@@Base+0xc58c>
   24068:	ldr	x0, [sp]
   2406c:	cmp	x0, #0x13
   24070:	b.eq	24214 <PyInit__decimal@@Base+0xc53c>  // b.none
   24074:	ldr	x0, [sp]
   24078:	cmp	x0, #0x13
   2407c:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   24080:	ldr	x0, [sp]
   24084:	cmp	x0, #0x12
   24088:	b.eq	241c4 <PyInit__decimal@@Base+0xc4ec>  // b.none
   2408c:	ldr	x0, [sp]
   24090:	cmp	x0, #0x12
   24094:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   24098:	ldr	x0, [sp]
   2409c:	cmp	x0, #0x11
   240a0:	b.eq	24174 <PyInit__decimal@@Base+0xc49c>  // b.none
   240a4:	ldr	x0, [sp]
   240a8:	cmp	x0, #0x11
   240ac:	b.hi	24264 <PyInit__decimal@@Base+0xc58c>  // b.pmore
   240b0:	ldr	x0, [sp]
   240b4:	cmp	x0, #0xf
   240b8:	b.eq	240cc <PyInit__decimal@@Base+0xc3f4>  // b.none
   240bc:	ldr	x0, [sp]
   240c0:	cmp	x0, #0x10
   240c4:	b.eq	24124 <PyInit__decimal@@Base+0xc44c>  // b.none
   240c8:	b	24264 <PyInit__decimal@@Base+0xc58c>
   240cc:	ldr	x0, [sp, #8]
   240d0:	lsr	x1, x0, #15
   240d4:	mov	x0, #0xeac3                	// #60099
   240d8:	movk	x0, #0xf3dc, lsl #16
   240dc:	movk	x0, #0x4075, lsl #32
   240e0:	movk	x0, #0x2, lsl #48
   240e4:	umulh	x0, x1, x0
   240e8:	lsr	x1, x0, #20
   240ec:	ldr	x0, [sp, #24]
   240f0:	str	x1, [x0]
   240f4:	ldr	x0, [sp, #24]
   240f8:	ldr	x1, [x0]
   240fc:	mov	x0, #0x8000                	// #32768
   24100:	movk	x0, #0xa4c6, lsl #16
   24104:	movk	x0, #0x8d7e, lsl #32
   24108:	movk	x0, #0x3, lsl #48
   2410c:	mul	x0, x1, x0
   24110:	ldr	x1, [sp, #8]
   24114:	sub	x1, x1, x0
   24118:	ldr	x0, [sp, #16]
   2411c:	str	x1, [x0]
   24120:	b	24264 <PyInit__decimal@@Base+0xc58c>
   24124:	ldr	x1, [sp, #8]
   24128:	mov	x0, #0x7857                	// #30807
   2412c:	movk	x0, #0xb113, lsl #16
   24130:	movk	x0, #0x652f, lsl #32
   24134:	movk	x0, #0x39a5, lsl #48
   24138:	umulh	x0, x1, x0
   2413c:	lsr	x1, x0, #51
   24140:	ldr	x0, [sp, #24]
   24144:	str	x1, [x0]
   24148:	ldr	x0, [sp, #24]
   2414c:	ldr	x1, [x0]
   24150:	mov	x0, #0x6fc10000            	// #1874919424
   24154:	movk	x0, #0x86f2, lsl #32
   24158:	movk	x0, #0x23, lsl #48
   2415c:	mul	x0, x1, x0
   24160:	ldr	x1, [sp, #8]
   24164:	sub	x1, x1, x0
   24168:	ldr	x0, [sp, #16]
   2416c:	str	x1, [x0]
   24170:	b	24264 <PyInit__decimal@@Base+0xc58c>
   24174:	ldr	x0, [sp, #8]
   24178:	lsr	x1, x0, #17
   2417c:	mov	x0, #0x1b53                	// #6995
   24180:	movk	x0, #0xd519, lsl #16
   24184:	movk	x0, #0x5c3b, lsl #32
   24188:	umulh	x0, x1, x0
   2418c:	lsr	x1, x0, #22
   24190:	ldr	x0, [sp, #24]
   24194:	str	x1, [x0]
   24198:	ldr	x0, [sp, #24]
   2419c:	ldr	x1, [x0]
   241a0:	mov	x0, #0x5d8a0000            	// #1569325056
   241a4:	movk	x0, #0x4578, lsl #32
   241a8:	movk	x0, #0x163, lsl #48
   241ac:	mul	x0, x1, x0
   241b0:	ldr	x1, [sp, #8]
   241b4:	sub	x1, x1, x0
   241b8:	ldr	x0, [sp, #16]
   241bc:	str	x1, [x0]
   241c0:	b	24264 <PyInit__decimal@@Base+0xc58c>
   241c4:	ldr	x0, [sp, #8]
   241c8:	lsr	x1, x0, #18
   241cc:	mov	x0, #0x490f                	// #18703
   241d0:	movk	x0, #0x7747, lsl #16
   241d4:	movk	x0, #0x49c9, lsl #32
   241d8:	umulh	x0, x1, x0
   241dc:	lsr	x1, x0, #24
   241e0:	ldr	x0, [sp, #24]
   241e4:	str	x1, [x0]
   241e8:	ldr	x0, [sp, #24]
   241ec:	ldr	x1, [x0]
   241f0:	mov	x0, #0xa7640000            	// #2808348672
   241f4:	movk	x0, #0xb6b3, lsl #32
   241f8:	movk	x0, #0xde0, lsl #48
   241fc:	mul	x0, x1, x0
   24200:	ldr	x1, [sp, #8]
   24204:	sub	x1, x1, x0
   24208:	ldr	x0, [sp, #16]
   2420c:	str	x1, [x0]
   24210:	b	24264 <PyInit__decimal@@Base+0xc58c>
   24214:	ldr	x1, [sp, #8]
   24218:	mov	x0, #0x89e80000            	// #2313682944
   2421c:	movk	x0, #0x2304, lsl #32
   24220:	movk	x0, #0x8ac7, lsl #48
   24224:	cmp	x1, x0
   24228:	cset	w0, cs  // cs = hs, nlast
   2422c:	mov	w1, w0
   24230:	ldr	x0, [sp, #24]
   24234:	str	x1, [x0]
   24238:	ldr	x0, [sp, #24]
   2423c:	ldr	x1, [x0]
   24240:	mov	x0, #0x89e80000            	// #2313682944
   24244:	movk	x0, #0x2304, lsl #32
   24248:	movk	x0, #0x8ac7, lsl #48
   2424c:	mul	x0, x1, x0
   24250:	ldr	x1, [sp, #8]
   24254:	sub	x1, x1, x0
   24258:	ldr	x0, [sp, #16]
   2425c:	str	x1, [x0]
   24260:	nop
   24264:	nop
   24268:	add	sp, sp, #0x20
   2426c:	ret
   24270:	sub	sp, sp, #0x20
   24274:	str	x0, [sp, #24]
   24278:	str	x1, [sp, #16]
   2427c:	str	x2, [sp, #8]
   24280:	str	x3, [sp]
   24284:	ldr	x1, [sp, #8]
   24288:	ldr	x0, [sp]
   2428c:	udiv	x1, x1, x0
   24290:	ldr	x0, [sp, #24]
   24294:	str	x1, [x0]
   24298:	ldr	x0, [sp, #24]
   2429c:	ldr	x1, [x0]
   242a0:	ldr	x0, [sp]
   242a4:	mul	x0, x1, x0
   242a8:	ldr	x1, [sp, #8]
   242ac:	sub	x1, x1, x0
   242b0:	ldr	x0, [sp, #16]
   242b4:	str	x1, [x0]
   242b8:	nop
   242bc:	add	sp, sp, #0x20
   242c0:	ret
   242c4:	sub	sp, sp, #0x20
   242c8:	str	x0, [sp, #24]
   242cc:	str	x1, [sp, #16]
   242d0:	str	x2, [sp, #8]
   242d4:	str	x3, [sp]
   242d8:	ldr	x1, [sp, #8]
   242dc:	ldr	x0, [sp]
   242e0:	sdiv	x1, x1, x0
   242e4:	ldr	x0, [sp, #24]
   242e8:	str	x1, [x0]
   242ec:	ldr	x0, [sp, #24]
   242f0:	ldr	x1, [x0]
   242f4:	ldr	x0, [sp]
   242f8:	mul	x0, x1, x0
   242fc:	ldr	x1, [sp, #8]
   24300:	sub	x1, x1, x0
   24304:	ldr	x0, [sp, #16]
   24308:	str	x1, [x0]
   2430c:	nop
   24310:	add	sp, sp, #0x20
   24314:	ret
   24318:	stp	x29, x30, [sp, #-32]!
   2431c:	mov	x29, sp
   24320:	str	x0, [sp, #24]
   24324:	str	x1, [sp, #16]
   24328:	ldr	x0, [sp, #16]
   2432c:	mvn	x0, x0
   24330:	ldr	x1, [sp, #24]
   24334:	cmp	x1, x0
   24338:	b.ls	243a4 <PyInit__decimal@@Base+0xc6cc>  // b.plast
   2433c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   24340:	ldr	x0, [x0, #3904]
   24344:	ldr	x4, [x0]
   24348:	mov	w3, #0x253                 	// #595
   2434c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   24350:	add	x2, x0, #0x1f0
   24354:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   24358:	add	x1, x0, #0x230
   2435c:	mov	x0, x4
   24360:	bl	6b30 <fprintf@plt>
   24364:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   24368:	ldr	x0, [x0, #3904]
   2436c:	ldr	x0, [x0]
   24370:	mov	x3, x0
   24374:	mov	x2, #0x29                  	// #41
   24378:	mov	x1, #0x1                   	// #1
   2437c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   24380:	add	x0, x0, #0x240
   24384:	bl	69d0 <fwrite@plt>
   24388:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   2438c:	ldr	x0, [x0, #3904]
   24390:	ldr	x0, [x0]
   24394:	mov	x1, x0
   24398:	mov	w0, #0xa                   	// #10
   2439c:	bl	6660 <fputc@plt>
   243a0:	bl	6860 <abort@plt>
   243a4:	ldr	x1, [sp, #24]
   243a8:	ldr	x0, [sp, #16]
   243ac:	add	x0, x1, x0
   243b0:	ldp	x29, x30, [sp], #32
   243b4:	ret
   243b8:	stp	x29, x30, [sp, #-48]!
   243bc:	mov	x29, sp
   243c0:	str	x0, [sp, #24]
   243c4:	str	x1, [sp, #16]
   243c8:	add	x1, sp, #0x20
   243cc:	add	x0, sp, #0x28
   243d0:	ldr	x3, [sp, #16]
   243d4:	ldr	x2, [sp, #24]
   243d8:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   243dc:	ldr	x0, [sp, #40]
   243e0:	cmp	x0, #0x0
   243e4:	b.eq	24450 <PyInit__decimal@@Base+0xc778>  // b.none
   243e8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   243ec:	ldr	x0, [x0, #3904]
   243f0:	ldr	x4, [x0]
   243f4:	mov	w3, #0x26c                 	// #620
   243f8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   243fc:	add	x2, x0, #0x1f0
   24400:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   24404:	add	x1, x0, #0x230
   24408:	mov	x0, x4
   2440c:	bl	6b30 <fprintf@plt>
   24410:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   24414:	ldr	x0, [x0, #3904]
   24418:	ldr	x0, [x0]
   2441c:	mov	x3, x0
   24420:	mov	x2, #0x29                  	// #41
   24424:	mov	x1, #0x1                   	// #1
   24428:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2442c:	add	x0, x0, #0x270
   24430:	bl	69d0 <fwrite@plt>
   24434:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   24438:	ldr	x0, [x0, #3904]
   2443c:	ldr	x0, [x0]
   24440:	mov	x1, x0
   24444:	mov	w0, #0xa                   	// #10
   24448:	bl	6660 <fputc@plt>
   2444c:	bl	6860 <abort@plt>
   24450:	ldr	x0, [sp, #32]
   24454:	ldp	x29, x30, [sp], #48
   24458:	ret
   2445c:	stp	x29, x30, [sp, #-96]!
   24460:	mov	x29, sp
   24464:	str	x0, [sp, #40]
   24468:	str	x1, [sp, #32]
   2446c:	str	x2, [sp, #24]
   24470:	str	x3, [sp, #16]
   24474:	ldr	x0, [sp, #16]
   24478:	cmp	x0, #0x0
   2447c:	b.ge	24488 <PyInit__decimal@@Base+0xc7b0>  // b.tcont
   24480:	mov	x0, #0xffffffffffffffff    	// #-1
   24484:	b	2448c <PyInit__decimal@@Base+0xc7b4>
   24488:	mov	x0, #0x0                   	// #0
   2448c:	str	x0, [sp, #88]
   24490:	ldr	x1, [sp, #88]
   24494:	mov	x0, #0x89e80000            	// #2313682944
   24498:	movk	x0, #0x2304, lsl #32
   2449c:	movk	x0, #0x8ac7, lsl #48
   244a0:	and	x0, x1, x0
   244a4:	ldr	x1, [sp, #16]
   244a8:	add	x0, x1, x0
   244ac:	str	x0, [sp, #80]
   244b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   244b4:	add	x0, x0, #0xe50
   244b8:	ldr	x2, [x0]
   244bc:	ldr	x1, [sp, #24]
   244c0:	ldr	x0, [sp, #88]
   244c4:	sub	x3, x1, x0
   244c8:	add	x1, sp, #0x38
   244cc:	add	x0, sp, #0x40
   244d0:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   244d4:	ldr	x1, [sp, #56]
   244d8:	ldr	x0, [sp, #80]
   244dc:	add	x0, x1, x0
   244e0:	str	x0, [sp, #56]
   244e4:	ldr	x0, [sp, #56]
   244e8:	ldr	x1, [sp, #80]
   244ec:	cmp	x1, x0
   244f0:	b.ls	24500 <PyInit__decimal@@Base+0xc828>  // b.plast
   244f4:	ldr	x0, [sp, #64]
   244f8:	add	x0, x0, #0x1
   244fc:	str	x0, [sp, #64]
   24500:	ldr	x0, [sp, #64]
   24504:	ldr	x1, [sp, #24]
   24508:	add	x0, x1, x0
   2450c:	str	x0, [sp, #72]
   24510:	ldr	x0, [sp, #72]
   24514:	mvn	x0, x0
   24518:	str	x0, [sp, #72]
   2451c:	add	x1, sp, #0x38
   24520:	add	x0, sp, #0x40
   24524:	mov	x3, #0x89e80000            	// #2313682944
   24528:	movk	x3, #0x2304, lsl #32
   2452c:	movk	x3, #0x8ac7, lsl #48
   24530:	ldr	x2, [sp, #72]
   24534:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   24538:	ldr	x1, [sp, #56]
   2453c:	ldr	x0, [sp, #16]
   24540:	add	x0, x1, x0
   24544:	str	x0, [sp, #56]
   24548:	ldr	x0, [sp, #56]
   2454c:	ldr	x1, [sp, #16]
   24550:	cmp	x1, x0
   24554:	b.ls	24564 <PyInit__decimal@@Base+0xc88c>  // b.plast
   24558:	ldr	x0, [sp, #64]
   2455c:	add	x0, x0, #0x1
   24560:	str	x0, [sp, #64]
   24564:	ldr	x1, [sp, #64]
   24568:	ldr	x0, [sp, #24]
   2456c:	add	x0, x1, x0
   24570:	str	x0, [sp, #64]
   24574:	ldr	x1, [sp, #64]
   24578:	mov	x0, #0x76180000            	// #1981284352
   2457c:	movk	x0, #0xdcfb, lsl #32
   24580:	movk	x0, #0x7538, lsl #48
   24584:	add	x0, x1, x0
   24588:	str	x0, [sp, #64]
   2458c:	ldr	x1, [sp, #64]
   24590:	ldr	x0, [sp, #72]
   24594:	sub	x1, x1, x0
   24598:	ldr	x0, [sp, #40]
   2459c:	str	x1, [x0]
   245a0:	ldr	x1, [sp, #64]
   245a4:	mov	x0, #0x89e80000            	// #2313682944
   245a8:	movk	x0, #0x2304, lsl #32
   245ac:	movk	x0, #0x8ac7, lsl #48
   245b0:	and	x1, x1, x0
   245b4:	ldr	x0, [sp, #56]
   245b8:	add	x1, x1, x0
   245bc:	ldr	x0, [sp, #32]
   245c0:	str	x1, [x0]
   245c4:	nop
   245c8:	ldp	x29, x30, [sp], #96
   245cc:	ret
   245d0:	stp	x29, x30, [sp, #-64]!
   245d4:	mov	x29, sp
   245d8:	str	x0, [sp, #40]
   245dc:	str	x1, [sp, #32]
   245e0:	str	x2, [sp, #24]
   245e4:	add	x1, sp, #0x30
   245e8:	add	x0, sp, #0x38
   245ec:	ldr	x3, [sp, #24]
   245f0:	ldr	x2, [sp, #32]
   245f4:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   245f8:	ldr	x0, [sp, #40]
   245fc:	add	x0, x0, #0x8
   24600:	ldr	x1, [sp, #56]
   24604:	ldr	x2, [sp, #48]
   24608:	mov	x3, x2
   2460c:	mov	x2, x1
   24610:	ldr	x1, [sp, #40]
   24614:	bl	2445c <PyInit__decimal@@Base+0xc784>
   24618:	nop
   2461c:	ldp	x29, x30, [sp], #64
   24620:	ret
   24624:	stp	x29, x30, [sp, #-64]!
   24628:	mov	x29, sp
   2462c:	str	x0, [sp, #40]
   24630:	str	x1, [sp, #32]
   24634:	str	x2, [sp, #24]
   24638:	str	x3, [sp, #16]
   2463c:	ldr	x0, [sp, #32]
   24640:	ldr	x2, [x0]
   24644:	ldr	x0, [sp, #24]
   24648:	ldr	x3, [x0]
   2464c:	add	x1, sp, #0x30
   24650:	add	x0, sp, #0x38
   24654:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   24658:	ldr	x0, [sp, #40]
   2465c:	add	x0, x0, #0x8
   24660:	ldr	x1, [sp, #56]
   24664:	ldr	x2, [sp, #48]
   24668:	mov	x3, x2
   2466c:	mov	x2, x1
   24670:	ldr	x1, [sp, #40]
   24674:	bl	2445c <PyInit__decimal@@Base+0xc784>
   24678:	ldr	x0, [sp, #32]
   2467c:	add	x0, x0, #0x8
   24680:	ldr	x2, [x0]
   24684:	ldr	x0, [sp, #24]
   24688:	ldr	x3, [x0]
   2468c:	add	x1, sp, #0x30
   24690:	add	x0, sp, #0x38
   24694:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   24698:	ldr	x0, [sp, #40]
   2469c:	add	x0, x0, #0x8
   246a0:	ldr	x1, [x0]
   246a4:	ldr	x0, [sp, #48]
   246a8:	add	x0, x1, x0
   246ac:	str	x0, [sp, #48]
   246b0:	ldr	x0, [sp, #40]
   246b4:	add	x0, x0, #0x8
   246b8:	ldr	x1, [x0]
   246bc:	ldr	x0, [sp, #48]
   246c0:	cmp	x1, x0
   246c4:	b.ls	246d4 <PyInit__decimal@@Base+0xc9fc>  // b.plast
   246c8:	ldr	x0, [sp, #56]
   246cc:	add	x0, x0, #0x1
   246d0:	str	x0, [sp, #56]
   246d4:	ldr	x0, [sp, #40]
   246d8:	add	x4, x0, #0x10
   246dc:	ldr	x0, [sp, #40]
   246e0:	add	x0, x0, #0x8
   246e4:	ldr	x1, [sp, #56]
   246e8:	ldr	x2, [sp, #48]
   246ec:	mov	x3, x2
   246f0:	mov	x2, x1
   246f4:	mov	x1, x0
   246f8:	mov	x0, x4
   246fc:	bl	2445c <PyInit__decimal@@Base+0xc784>
   24700:	ldr	x0, [sp, #16]
   24704:	cmp	x0, #0x1
   24708:	b.eq	24860 <PyInit__decimal@@Base+0xcb88>  // b.none
   2470c:	ldr	x0, [sp, #32]
   24710:	ldr	x2, [x0]
   24714:	ldr	x0, [sp, #24]
   24718:	add	x0, x0, #0x8
   2471c:	ldr	x3, [x0]
   24720:	add	x1, sp, #0x30
   24724:	add	x0, sp, #0x38
   24728:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   2472c:	ldr	x0, [sp, #40]
   24730:	add	x0, x0, #0x8
   24734:	ldr	x1, [x0]
   24738:	ldr	x0, [sp, #48]
   2473c:	add	x0, x1, x0
   24740:	str	x0, [sp, #48]
   24744:	ldr	x0, [sp, #40]
   24748:	add	x0, x0, #0x8
   2474c:	ldr	x1, [x0]
   24750:	ldr	x0, [sp, #48]
   24754:	cmp	x1, x0
   24758:	b.ls	24768 <PyInit__decimal@@Base+0xca90>  // b.plast
   2475c:	ldr	x0, [sp, #56]
   24760:	add	x0, x0, #0x1
   24764:	str	x0, [sp, #56]
   24768:	ldr	x0, [sp, #40]
   2476c:	add	x4, x0, #0x18
   24770:	ldr	x0, [sp, #40]
   24774:	add	x0, x0, #0x8
   24778:	ldr	x1, [sp, #56]
   2477c:	ldr	x2, [sp, #48]
   24780:	mov	x3, x2
   24784:	mov	x2, x1
   24788:	mov	x1, x0
   2478c:	mov	x0, x4
   24790:	bl	2445c <PyInit__decimal@@Base+0xc784>
   24794:	ldr	x0, [sp, #32]
   24798:	add	x0, x0, #0x8
   2479c:	ldr	x2, [x0]
   247a0:	ldr	x0, [sp, #24]
   247a4:	add	x0, x0, #0x8
   247a8:	ldr	x3, [x0]
   247ac:	add	x1, sp, #0x30
   247b0:	add	x0, sp, #0x38
   247b4:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   247b8:	ldr	x0, [sp, #40]
   247bc:	add	x0, x0, #0x10
   247c0:	ldr	x1, [x0]
   247c4:	ldr	x0, [sp, #48]
   247c8:	add	x0, x1, x0
   247cc:	str	x0, [sp, #48]
   247d0:	ldr	x0, [sp, #40]
   247d4:	add	x0, x0, #0x10
   247d8:	ldr	x1, [x0]
   247dc:	ldr	x0, [sp, #48]
   247e0:	cmp	x1, x0
   247e4:	b.ls	247f4 <PyInit__decimal@@Base+0xcb1c>  // b.plast
   247e8:	ldr	x0, [sp, #56]
   247ec:	add	x0, x0, #0x1
   247f0:	str	x0, [sp, #56]
   247f4:	ldr	x0, [sp, #40]
   247f8:	add	x0, x0, #0x18
   247fc:	ldr	x1, [x0]
   24800:	ldr	x0, [sp, #48]
   24804:	add	x0, x1, x0
   24808:	str	x0, [sp, #48]
   2480c:	ldr	x0, [sp, #40]
   24810:	add	x0, x0, #0x18
   24814:	ldr	x1, [x0]
   24818:	ldr	x0, [sp, #48]
   2481c:	cmp	x1, x0
   24820:	b.ls	24830 <PyInit__decimal@@Base+0xcb58>  // b.plast
   24824:	ldr	x0, [sp, #56]
   24828:	add	x0, x0, #0x1
   2482c:	str	x0, [sp, #56]
   24830:	ldr	x0, [sp, #40]
   24834:	add	x4, x0, #0x18
   24838:	ldr	x0, [sp, #40]
   2483c:	add	x0, x0, #0x10
   24840:	ldr	x1, [sp, #56]
   24844:	ldr	x2, [sp, #48]
   24848:	mov	x3, x2
   2484c:	mov	x2, x1
   24850:	mov	x1, x0
   24854:	mov	x0, x4
   24858:	bl	2445c <PyInit__decimal@@Base+0xc784>
   2485c:	b	24864 <PyInit__decimal@@Base+0xcb8c>
   24860:	nop
   24864:	ldp	x29, x30, [sp], #64
   24868:	ret
   2486c:	sub	sp, sp, #0x10
   24870:	str	x0, [sp, #8]
   24874:	str	x1, [sp]
   24878:	b	248a0 <PyInit__decimal@@Base+0xcbc8>
   2487c:	ldr	x0, [sp]
   24880:	lsl	x0, x0, #3
   24884:	ldr	x1, [sp, #8]
   24888:	add	x0, x1, x0
   2488c:	ldr	x0, [x0]
   24890:	cmp	x0, #0x0
   24894:	b.eq	248a0 <PyInit__decimal@@Base+0xcbc8>  // b.none
   24898:	mov	w0, #0x0                   	// #0
   2489c:	b	248bc <PyInit__decimal@@Base+0xcbe4>
   248a0:	ldr	x0, [sp]
   248a4:	sub	x0, x0, #0x1
   248a8:	str	x0, [sp]
   248ac:	ldr	x0, [sp]
   248b0:	cmp	x0, #0x0
   248b4:	b.ge	2487c <PyInit__decimal@@Base+0xcba4>  // b.tcont
   248b8:	mov	w0, #0x1                   	// #1
   248bc:	add	sp, sp, #0x10
   248c0:	ret
   248c4:	sub	sp, sp, #0x10
   248c8:	str	x0, [sp, #8]
   248cc:	str	x1, [sp]
   248d0:	b	24904 <PyInit__decimal@@Base+0xcc2c>
   248d4:	ldr	x0, [sp]
   248d8:	lsl	x0, x0, #3
   248dc:	ldr	x1, [sp, #8]
   248e0:	add	x0, x1, x0
   248e4:	ldr	x1, [x0]
   248e8:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   248ec:	movk	x0, #0x2304, lsl #32
   248f0:	movk	x0, #0x8ac7, lsl #48
   248f4:	cmp	x1, x0
   248f8:	b.eq	24904 <PyInit__decimal@@Base+0xcc2c>  // b.none
   248fc:	mov	w0, #0x0                   	// #0
   24900:	b	24920 <PyInit__decimal@@Base+0xcc48>
   24904:	ldr	x0, [sp]
   24908:	sub	x0, x0, #0x1
   2490c:	str	x0, [sp]
   24910:	ldr	x0, [sp]
   24914:	cmp	x0, #0x0
   24918:	b.ge	248d4 <PyInit__decimal@@Base+0xcbfc>  // b.tcont
   2491c:	mov	w0, #0x1                   	// #1
   24920:	add	sp, sp, #0x10
   24924:	ret
   24928:	sub	sp, sp, #0x20
   2492c:	str	x0, [sp, #8]
   24930:	str	wzr, [sp, #28]
   24934:	ldr	x0, [sp, #8]
   24938:	lsr	x0, x0, #32
   2493c:	str	x0, [sp, #16]
   24940:	ldr	x0, [sp, #16]
   24944:	cmp	x0, #0x0
   24948:	b.eq	24960 <PyInit__decimal@@Base+0xcc88>  // b.none
   2494c:	ldr	x0, [sp, #16]
   24950:	str	x0, [sp, #8]
   24954:	ldr	w0, [sp, #28]
   24958:	add	w0, w0, #0x20
   2495c:	str	w0, [sp, #28]
   24960:	ldr	x0, [sp, #8]
   24964:	lsr	x0, x0, #16
   24968:	str	x0, [sp, #16]
   2496c:	ldr	x0, [sp, #16]
   24970:	cmp	x0, #0x0
   24974:	b.eq	2498c <PyInit__decimal@@Base+0xccb4>  // b.none
   24978:	ldr	x0, [sp, #16]
   2497c:	str	x0, [sp, #8]
   24980:	ldr	w0, [sp, #28]
   24984:	add	w0, w0, #0x10
   24988:	str	w0, [sp, #28]
   2498c:	ldr	x0, [sp, #8]
   24990:	lsr	x0, x0, #8
   24994:	str	x0, [sp, #16]
   24998:	ldr	x0, [sp, #16]
   2499c:	cmp	x0, #0x0
   249a0:	b.eq	249b8 <PyInit__decimal@@Base+0xcce0>  // b.none
   249a4:	ldr	x0, [sp, #16]
   249a8:	str	x0, [sp, #8]
   249ac:	ldr	w0, [sp, #28]
   249b0:	add	w0, w0, #0x8
   249b4:	str	w0, [sp, #28]
   249b8:	ldr	x0, [sp, #8]
   249bc:	lsr	x0, x0, #4
   249c0:	str	x0, [sp, #16]
   249c4:	ldr	x0, [sp, #16]
   249c8:	cmp	x0, #0x0
   249cc:	b.eq	249e4 <PyInit__decimal@@Base+0xcd0c>  // b.none
   249d0:	ldr	x0, [sp, #16]
   249d4:	str	x0, [sp, #8]
   249d8:	ldr	w0, [sp, #28]
   249dc:	add	w0, w0, #0x4
   249e0:	str	w0, [sp, #28]
   249e4:	ldr	x0, [sp, #8]
   249e8:	lsr	x0, x0, #2
   249ec:	str	x0, [sp, #16]
   249f0:	ldr	x0, [sp, #16]
   249f4:	cmp	x0, #0x0
   249f8:	b.eq	24a10 <PyInit__decimal@@Base+0xcd38>  // b.none
   249fc:	ldr	x0, [sp, #16]
   24a00:	str	x0, [sp, #8]
   24a04:	ldr	w0, [sp, #28]
   24a08:	add	w0, w0, #0x2
   24a0c:	str	w0, [sp, #28]
   24a10:	ldr	x0, [sp, #8]
   24a14:	lsr	x0, x0, #1
   24a18:	str	x0, [sp, #16]
   24a1c:	ldr	x0, [sp, #16]
   24a20:	cmp	x0, #0x0
   24a24:	b.eq	24a3c <PyInit__decimal@@Base+0xcd64>  // b.none
   24a28:	ldr	x0, [sp, #16]
   24a2c:	str	x0, [sp, #8]
   24a30:	ldr	w0, [sp, #28]
   24a34:	add	w0, w0, #0x1
   24a38:	str	w0, [sp, #28]
   24a3c:	ldr	x0, [sp, #8]
   24a40:	mov	w1, w0
   24a44:	ldr	w0, [sp, #28]
   24a48:	add	w0, w1, w0
   24a4c:	sub	w0, w0, #0x1
   24a50:	add	sp, sp, #0x20
   24a54:	ret
   24a58:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   24a5c:	add	x0, x0, #0x2a0
   24a60:	ret
   24a64:	sub	sp, sp, #0x10
   24a68:	str	x0, [sp, #8]
   24a6c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24a70:	add	x0, x0, #0xdb0
   24a74:	ldr	x0, [x0, #72]
   24a78:	ldr	x1, [sp, #8]
   24a7c:	cmp	x1, x0
   24a80:	b.cs	24b8c <PyInit__decimal@@Base+0xceb4>  // b.hs, b.nlast
   24a84:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24a88:	add	x0, x0, #0xdb0
   24a8c:	ldr	x0, [x0, #32]
   24a90:	ldr	x1, [sp, #8]
   24a94:	cmp	x1, x0
   24a98:	b.cs	24b04 <PyInit__decimal@@Base+0xce2c>  // b.hs, b.nlast
   24a9c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24aa0:	add	x0, x0, #0xdb0
   24aa4:	ldr	x0, [x0, #16]
   24aa8:	ldr	x1, [sp, #8]
   24aac:	cmp	x1, x0
   24ab0:	b.cs	24adc <PyInit__decimal@@Base+0xce04>  // b.hs, b.nlast
   24ab4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ab8:	add	x0, x0, #0xdb0
   24abc:	ldr	x0, [x0, #8]
   24ac0:	ldr	x1, [sp, #8]
   24ac4:	cmp	x1, x0
   24ac8:	b.cs	24ad4 <PyInit__decimal@@Base+0xcdfc>  // b.hs, b.nlast
   24acc:	mov	w0, #0x1                   	// #1
   24ad0:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24ad4:	mov	w0, #0x2                   	// #2
   24ad8:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24adc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ae0:	add	x0, x0, #0xdb0
   24ae4:	ldr	x0, [x0, #24]
   24ae8:	ldr	x1, [sp, #8]
   24aec:	cmp	x1, x0
   24af0:	b.cs	24afc <PyInit__decimal@@Base+0xce24>  // b.hs, b.nlast
   24af4:	mov	w0, #0x3                   	// #3
   24af8:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24afc:	mov	w0, #0x4                   	// #4
   24b00:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b04:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24b08:	add	x0, x0, #0xdb0
   24b0c:	ldr	x0, [x0, #48]
   24b10:	ldr	x1, [sp, #8]
   24b14:	cmp	x1, x0
   24b18:	b.cs	24b44 <PyInit__decimal@@Base+0xce6c>  // b.hs, b.nlast
   24b1c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24b20:	add	x0, x0, #0xdb0
   24b24:	ldr	x0, [x0, #40]
   24b28:	ldr	x1, [sp, #8]
   24b2c:	cmp	x1, x0
   24b30:	b.cs	24b3c <PyInit__decimal@@Base+0xce64>  // b.hs, b.nlast
   24b34:	mov	w0, #0x5                   	// #5
   24b38:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b3c:	mov	w0, #0x6                   	// #6
   24b40:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b44:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24b48:	add	x0, x0, #0xdb0
   24b4c:	ldr	x0, [x0, #64]
   24b50:	ldr	x1, [sp, #8]
   24b54:	cmp	x1, x0
   24b58:	b.cs	24b84 <PyInit__decimal@@Base+0xceac>  // b.hs, b.nlast
   24b5c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24b60:	add	x0, x0, #0xdb0
   24b64:	ldr	x0, [x0, #56]
   24b68:	ldr	x1, [sp, #8]
   24b6c:	cmp	x1, x0
   24b70:	b.cs	24b7c <PyInit__decimal@@Base+0xcea4>  // b.hs, b.nlast
   24b74:	mov	w0, #0x7                   	// #7
   24b78:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b7c:	mov	w0, #0x8                   	// #8
   24b80:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b84:	mov	w0, #0x9                   	// #9
   24b88:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24b8c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24b90:	add	x0, x0, #0xdb0
   24b94:	ldr	x0, [x0, #112]
   24b98:	ldr	x1, [sp, #8]
   24b9c:	cmp	x1, x0
   24ba0:	b.cs	24c2c <PyInit__decimal@@Base+0xcf54>  // b.hs, b.nlast
   24ba4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ba8:	add	x0, x0, #0xdb0
   24bac:	ldr	x0, [x0, #88]
   24bb0:	ldr	x1, [sp, #8]
   24bb4:	cmp	x1, x0
   24bb8:	b.cs	24be4 <PyInit__decimal@@Base+0xcf0c>  // b.hs, b.nlast
   24bbc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24bc0:	add	x0, x0, #0xdb0
   24bc4:	ldr	x0, [x0, #80]
   24bc8:	ldr	x1, [sp, #8]
   24bcc:	cmp	x1, x0
   24bd0:	b.cs	24bdc <PyInit__decimal@@Base+0xcf04>  // b.hs, b.nlast
   24bd4:	mov	w0, #0xa                   	// #10
   24bd8:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24bdc:	mov	w0, #0xb                   	// #11
   24be0:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24be4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24be8:	add	x0, x0, #0xdb0
   24bec:	ldr	x0, [x0, #104]
   24bf0:	ldr	x1, [sp, #8]
   24bf4:	cmp	x1, x0
   24bf8:	b.cs	24c24 <PyInit__decimal@@Base+0xcf4c>  // b.hs, b.nlast
   24bfc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24c00:	add	x0, x0, #0xdb0
   24c04:	ldr	x0, [x0, #96]
   24c08:	ldr	x1, [sp, #8]
   24c0c:	cmp	x1, x0
   24c10:	b.cs	24c1c <PyInit__decimal@@Base+0xcf44>  // b.hs, b.nlast
   24c14:	mov	w0, #0xc                   	// #12
   24c18:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24c1c:	mov	w0, #0xd                   	// #13
   24c20:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24c24:	mov	w0, #0xe                   	// #14
   24c28:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24c2c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24c30:	add	x0, x0, #0xdb0
   24c34:	ldr	x0, [x0, #144]
   24c38:	ldr	x1, [sp, #8]
   24c3c:	cmp	x1, x0
   24c40:	b.cs	24cac <PyInit__decimal@@Base+0xcfd4>  // b.hs, b.nlast
   24c44:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24c48:	add	x0, x0, #0xdb0
   24c4c:	ldr	x0, [x0, #128]
   24c50:	ldr	x1, [sp, #8]
   24c54:	cmp	x1, x0
   24c58:	b.cs	24c84 <PyInit__decimal@@Base+0xcfac>  // b.hs, b.nlast
   24c5c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24c60:	add	x0, x0, #0xdb0
   24c64:	ldr	x0, [x0, #120]
   24c68:	ldr	x1, [sp, #8]
   24c6c:	cmp	x1, x0
   24c70:	b.cs	24c7c <PyInit__decimal@@Base+0xcfa4>  // b.hs, b.nlast
   24c74:	mov	w0, #0xf                   	// #15
   24c78:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24c7c:	mov	w0, #0x10                  	// #16
   24c80:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24c84:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24c88:	add	x0, x0, #0xdb0
   24c8c:	ldr	x0, [x0, #136]
   24c90:	ldr	x1, [sp, #8]
   24c94:	cmp	x1, x0
   24c98:	b.cs	24ca4 <PyInit__decimal@@Base+0xcfcc>  // b.hs, b.nlast
   24c9c:	mov	w0, #0x11                  	// #17
   24ca0:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24ca4:	mov	w0, #0x12                  	// #18
   24ca8:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24cac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24cb0:	add	x0, x0, #0xdb0
   24cb4:	ldr	x0, [x0, #152]
   24cb8:	ldr	x1, [sp, #8]
   24cbc:	cmp	x1, x0
   24cc0:	b.cs	24ccc <PyInit__decimal@@Base+0xcff4>  // b.hs, b.nlast
   24cc4:	mov	w0, #0x13                  	// #19
   24cc8:	b	24cd0 <PyInit__decimal@@Base+0xcff8>
   24ccc:	mov	w0, #0x14                  	// #20
   24cd0:	add	sp, sp, #0x10
   24cd4:	ret
   24cd8:	sub	sp, sp, #0x10
   24cdc:	str	x0, [sp, #8]
   24ce0:	ldr	x0, [sp, #8]
   24ce4:	ldr	x1, [x0, #8]
   24ce8:	ldr	x0, [sp, #8]
   24cec:	ldr	x0, [x0, #16]
   24cf0:	add	x0, x1, x0
   24cf4:	sub	x0, x0, #0x1
   24cf8:	add	sp, sp, #0x10
   24cfc:	ret
   24d00:	sub	sp, sp, #0x10
   24d04:	str	x0, [sp, #8]
   24d08:	ldr	x0, [sp, #8]
   24d0c:	ldr	x1, [x0, #16]
   24d10:	ldr	x0, [sp, #8]
   24d14:	ldr	x0, [x0]
   24d18:	sub	x0, x1, x0
   24d1c:	add	x0, x0, #0x1
   24d20:	add	sp, sp, #0x10
   24d24:	ret
   24d28:	sub	sp, sp, #0x10
   24d2c:	str	x0, [sp, #8]
   24d30:	ldr	x0, [sp, #8]
   24d34:	ldr	x1, [x0, #8]
   24d38:	ldr	x0, [sp, #8]
   24d3c:	ldr	x0, [x0]
   24d40:	sub	x0, x1, x0
   24d44:	add	x0, x0, #0x1
   24d48:	add	sp, sp, #0x10
   24d4c:	ret
   24d50:	sub	sp, sp, #0x10
   24d54:	str	x0, [sp, #8]
   24d58:	ldr	x0, [sp, #8]
   24d5c:	ldr	x1, [x0, #40]
   24d60:	ldr	x0, [sp, #8]
   24d64:	ldr	x0, [x0, #24]
   24d68:	lsl	x0, x0, #3
   24d6c:	sub	x0, x0, #0x8
   24d70:	add	x0, x1, x0
   24d74:	ldr	x0, [x0]
   24d78:	add	sp, sp, #0x10
   24d7c:	ret
   24d80:	sub	sp, sp, #0x20
   24d84:	str	x0, [sp, #8]
   24d88:	ldr	x0, [sp, #8]
   24d8c:	str	x0, [sp, #16]
   24d90:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24d94:	add	x0, x0, #0xdb0
   24d98:	ldr	x0, [x0, #72]
   24d9c:	ldr	x1, [sp, #16]
   24da0:	cmp	x1, x0
   24da4:	b.cs	24eb0 <PyInit__decimal@@Base+0xd1d8>  // b.hs, b.nlast
   24da8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24dac:	add	x0, x0, #0xdb0
   24db0:	ldr	x0, [x0, #32]
   24db4:	ldr	x1, [sp, #16]
   24db8:	cmp	x1, x0
   24dbc:	b.cs	24e28 <PyInit__decimal@@Base+0xd150>  // b.hs, b.nlast
   24dc0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24dc4:	add	x0, x0, #0xdb0
   24dc8:	ldr	x0, [x0, #16]
   24dcc:	ldr	x1, [sp, #16]
   24dd0:	cmp	x1, x0
   24dd4:	b.cs	24e00 <PyInit__decimal@@Base+0xd128>  // b.hs, b.nlast
   24dd8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ddc:	add	x0, x0, #0xdb0
   24de0:	ldr	x0, [x0, #8]
   24de4:	ldr	x1, [sp, #16]
   24de8:	cmp	x1, x0
   24dec:	b.cs	24df8 <PyInit__decimal@@Base+0xd120>  // b.hs, b.nlast
   24df0:	mov	w0, #0x1                   	// #1
   24df4:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24df8:	mov	w0, #0x2                   	// #2
   24dfc:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24e00:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24e04:	add	x0, x0, #0xdb0
   24e08:	ldr	x0, [x0, #24]
   24e0c:	ldr	x1, [sp, #16]
   24e10:	cmp	x1, x0
   24e14:	b.cs	24e20 <PyInit__decimal@@Base+0xd148>  // b.hs, b.nlast
   24e18:	mov	w0, #0x3                   	// #3
   24e1c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24e20:	mov	w0, #0x4                   	// #4
   24e24:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24e28:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24e2c:	add	x0, x0, #0xdb0
   24e30:	ldr	x0, [x0, #48]
   24e34:	ldr	x1, [sp, #16]
   24e38:	cmp	x1, x0
   24e3c:	b.cs	24e68 <PyInit__decimal@@Base+0xd190>  // b.hs, b.nlast
   24e40:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24e44:	add	x0, x0, #0xdb0
   24e48:	ldr	x0, [x0, #40]
   24e4c:	ldr	x1, [sp, #16]
   24e50:	cmp	x1, x0
   24e54:	b.cs	24e60 <PyInit__decimal@@Base+0xd188>  // b.hs, b.nlast
   24e58:	mov	w0, #0x5                   	// #5
   24e5c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24e60:	mov	w0, #0x6                   	// #6
   24e64:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24e68:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24e6c:	add	x0, x0, #0xdb0
   24e70:	ldr	x0, [x0, #64]
   24e74:	ldr	x1, [sp, #16]
   24e78:	cmp	x1, x0
   24e7c:	b.cs	24ea8 <PyInit__decimal@@Base+0xd1d0>  // b.hs, b.nlast
   24e80:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24e84:	add	x0, x0, #0xdb0
   24e88:	ldr	x0, [x0, #56]
   24e8c:	ldr	x1, [sp, #16]
   24e90:	cmp	x1, x0
   24e94:	b.cs	24ea0 <PyInit__decimal@@Base+0xd1c8>  // b.hs, b.nlast
   24e98:	mov	w0, #0x7                   	// #7
   24e9c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24ea0:	mov	w0, #0x8                   	// #8
   24ea4:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24ea8:	mov	w0, #0x9                   	// #9
   24eac:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24eb0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24eb4:	add	x0, x0, #0xdb0
   24eb8:	ldr	x0, [x0, #112]
   24ebc:	ldr	x1, [sp, #16]
   24ec0:	cmp	x1, x0
   24ec4:	b.cs	24f50 <PyInit__decimal@@Base+0xd278>  // b.hs, b.nlast
   24ec8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ecc:	add	x0, x0, #0xdb0
   24ed0:	ldr	x0, [x0, #88]
   24ed4:	ldr	x1, [sp, #16]
   24ed8:	cmp	x1, x0
   24edc:	b.cs	24f08 <PyInit__decimal@@Base+0xd230>  // b.hs, b.nlast
   24ee0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24ee4:	add	x0, x0, #0xdb0
   24ee8:	ldr	x0, [x0, #80]
   24eec:	ldr	x1, [sp, #16]
   24ef0:	cmp	x1, x0
   24ef4:	b.cs	24f00 <PyInit__decimal@@Base+0xd228>  // b.hs, b.nlast
   24ef8:	mov	w0, #0xa                   	// #10
   24efc:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24f00:	mov	w0, #0xb                   	// #11
   24f04:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24f08:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24f0c:	add	x0, x0, #0xdb0
   24f10:	ldr	x0, [x0, #104]
   24f14:	ldr	x1, [sp, #16]
   24f18:	cmp	x1, x0
   24f1c:	b.cs	24f48 <PyInit__decimal@@Base+0xd270>  // b.hs, b.nlast
   24f20:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24f24:	add	x0, x0, #0xdb0
   24f28:	ldr	x0, [x0, #96]
   24f2c:	ldr	x1, [sp, #16]
   24f30:	cmp	x1, x0
   24f34:	b.cs	24f40 <PyInit__decimal@@Base+0xd268>  // b.hs, b.nlast
   24f38:	mov	w0, #0xc                   	// #12
   24f3c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24f40:	mov	w0, #0xd                   	// #13
   24f44:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24f48:	mov	w0, #0xe                   	// #14
   24f4c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24f50:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24f54:	add	x0, x0, #0xdb0
   24f58:	ldr	x0, [x0, #144]
   24f5c:	ldr	x1, [sp, #16]
   24f60:	cmp	x1, x0
   24f64:	b.cs	24fd0 <PyInit__decimal@@Base+0xd2f8>  // b.hs, b.nlast
   24f68:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24f6c:	add	x0, x0, #0xdb0
   24f70:	ldr	x0, [x0, #128]
   24f74:	ldr	x1, [sp, #16]
   24f78:	cmp	x1, x0
   24f7c:	b.cs	24fa8 <PyInit__decimal@@Base+0xd2d0>  // b.hs, b.nlast
   24f80:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24f84:	add	x0, x0, #0xdb0
   24f88:	ldr	x0, [x0, #120]
   24f8c:	ldr	x1, [sp, #16]
   24f90:	cmp	x1, x0
   24f94:	b.cs	24fa0 <PyInit__decimal@@Base+0xd2c8>  // b.hs, b.nlast
   24f98:	mov	w0, #0xf                   	// #15
   24f9c:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24fa0:	mov	w0, #0x10                  	// #16
   24fa4:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24fa8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24fac:	add	x0, x0, #0xdb0
   24fb0:	ldr	x0, [x0, #136]
   24fb4:	ldr	x1, [sp, #16]
   24fb8:	cmp	x1, x0
   24fbc:	b.cs	24fc8 <PyInit__decimal@@Base+0xd2f0>  // b.hs, b.nlast
   24fc0:	mov	w0, #0x11                  	// #17
   24fc4:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24fc8:	mov	w0, #0x12                  	// #18
   24fcc:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24fd0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   24fd4:	add	x0, x0, #0xdb0
   24fd8:	ldr	x0, [x0, #152]
   24fdc:	ldr	x1, [sp, #16]
   24fe0:	cmp	x1, x0
   24fe4:	b.cs	24ff0 <PyInit__decimal@@Base+0xd318>  // b.hs, b.nlast
   24fe8:	mov	w0, #0x13                  	// #19
   24fec:	b	24ff4 <PyInit__decimal@@Base+0xd31c>
   24ff0:	mov	w0, #0x14                  	// #20
   24ff4:	str	w0, [sp, #28]
   24ff8:	ldr	w0, [sp, #28]
   24ffc:	sub	w1, w0, #0x1
   25000:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25004:	add	x0, x0, #0xdb0
   25008:	sxtw	x1, w1
   2500c:	ldr	x0, [x0, x1, lsl #3]
   25010:	ldr	x1, [sp, #8]
   25014:	udiv	x0, x1, x0
   25018:	add	sp, sp, #0x20
   2501c:	ret
   25020:	sub	sp, sp, #0x10
   25024:	str	x0, [sp, #8]
   25028:	ldr	x2, [sp, #8]
   2502c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   25030:	movk	x0, #0xcccd
   25034:	umulh	x0, x2, x0
   25038:	lsr	x1, x0, #3
   2503c:	mov	x0, x1
   25040:	lsl	x0, x0, #2
   25044:	add	x0, x0, x1
   25048:	lsl	x0, x0, #1
   2504c:	sub	x1, x2, x0
   25050:	mov	x0, x1
   25054:	add	sp, sp, #0x10
   25058:	ret
   2505c:	stp	x29, x30, [sp, #-48]!
   25060:	mov	x29, sp
   25064:	str	x0, [sp, #24]
   25068:	add	x1, sp, #0x20
   2506c:	add	x0, sp, #0x28
   25070:	mov	x3, #0x13                  	// #19
   25074:	ldr	x2, [sp, #24]
   25078:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2507c:	ldr	x0, [sp, #32]
   25080:	cmp	x0, #0x0
   25084:	b.eq	25094 <PyInit__decimal@@Base+0xd3bc>  // b.none
   25088:	ldr	x0, [sp, #40]
   2508c:	add	x0, x0, #0x1
   25090:	b	25098 <PyInit__decimal@@Base+0xd3c0>
   25094:	ldr	x0, [sp, #40]
   25098:	ldp	x29, x30, [sp], #48
   2509c:	ret
   250a0:	sub	sp, sp, #0x20
   250a4:	str	x0, [sp, #8]
   250a8:	ldr	x0, [sp, #8]
   250ac:	cmp	x0, #0x0
   250b0:	cneg	x0, x0, lt  // lt = tstop
   250b4:	str	x0, [sp, #8]
   250b8:	ldr	x0, [sp, #8]
   250bc:	str	x0, [sp, #24]
   250c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   250c4:	add	x0, x0, #0xdb0
   250c8:	ldr	x0, [x0, #72]
   250cc:	ldr	x1, [sp, #24]
   250d0:	cmp	x1, x0
   250d4:	b.cs	251e0 <PyInit__decimal@@Base+0xd508>  // b.hs, b.nlast
   250d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   250dc:	add	x0, x0, #0xdb0
   250e0:	ldr	x0, [x0, #32]
   250e4:	ldr	x1, [sp, #24]
   250e8:	cmp	x1, x0
   250ec:	b.cs	25158 <PyInit__decimal@@Base+0xd480>  // b.hs, b.nlast
   250f0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   250f4:	add	x0, x0, #0xdb0
   250f8:	ldr	x0, [x0, #16]
   250fc:	ldr	x1, [sp, #24]
   25100:	cmp	x1, x0
   25104:	b.cs	25130 <PyInit__decimal@@Base+0xd458>  // b.hs, b.nlast
   25108:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2510c:	add	x0, x0, #0xdb0
   25110:	ldr	x0, [x0, #8]
   25114:	ldr	x1, [sp, #24]
   25118:	cmp	x1, x0
   2511c:	b.cs	25128 <PyInit__decimal@@Base+0xd450>  // b.hs, b.nlast
   25120:	mov	w0, #0x1                   	// #1
   25124:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25128:	mov	w0, #0x2                   	// #2
   2512c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25130:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25134:	add	x0, x0, #0xdb0
   25138:	ldr	x0, [x0, #24]
   2513c:	ldr	x1, [sp, #24]
   25140:	cmp	x1, x0
   25144:	b.cs	25150 <PyInit__decimal@@Base+0xd478>  // b.hs, b.nlast
   25148:	mov	w0, #0x3                   	// #3
   2514c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25150:	mov	w0, #0x4                   	// #4
   25154:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25158:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2515c:	add	x0, x0, #0xdb0
   25160:	ldr	x0, [x0, #48]
   25164:	ldr	x1, [sp, #24]
   25168:	cmp	x1, x0
   2516c:	b.cs	25198 <PyInit__decimal@@Base+0xd4c0>  // b.hs, b.nlast
   25170:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25174:	add	x0, x0, #0xdb0
   25178:	ldr	x0, [x0, #40]
   2517c:	ldr	x1, [sp, #24]
   25180:	cmp	x1, x0
   25184:	b.cs	25190 <PyInit__decimal@@Base+0xd4b8>  // b.hs, b.nlast
   25188:	mov	w0, #0x5                   	// #5
   2518c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25190:	mov	w0, #0x6                   	// #6
   25194:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25198:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2519c:	add	x0, x0, #0xdb0
   251a0:	ldr	x0, [x0, #64]
   251a4:	ldr	x1, [sp, #24]
   251a8:	cmp	x1, x0
   251ac:	b.cs	251d8 <PyInit__decimal@@Base+0xd500>  // b.hs, b.nlast
   251b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   251b4:	add	x0, x0, #0xdb0
   251b8:	ldr	x0, [x0, #56]
   251bc:	ldr	x1, [sp, #24]
   251c0:	cmp	x1, x0
   251c4:	b.cs	251d0 <PyInit__decimal@@Base+0xd4f8>  // b.hs, b.nlast
   251c8:	mov	w0, #0x7                   	// #7
   251cc:	b	25324 <PyInit__decimal@@Base+0xd64c>
   251d0:	mov	w0, #0x8                   	// #8
   251d4:	b	25324 <PyInit__decimal@@Base+0xd64c>
   251d8:	mov	w0, #0x9                   	// #9
   251dc:	b	25324 <PyInit__decimal@@Base+0xd64c>
   251e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   251e4:	add	x0, x0, #0xdb0
   251e8:	ldr	x0, [x0, #112]
   251ec:	ldr	x1, [sp, #24]
   251f0:	cmp	x1, x0
   251f4:	b.cs	25280 <PyInit__decimal@@Base+0xd5a8>  // b.hs, b.nlast
   251f8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   251fc:	add	x0, x0, #0xdb0
   25200:	ldr	x0, [x0, #88]
   25204:	ldr	x1, [sp, #24]
   25208:	cmp	x1, x0
   2520c:	b.cs	25238 <PyInit__decimal@@Base+0xd560>  // b.hs, b.nlast
   25210:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25214:	add	x0, x0, #0xdb0
   25218:	ldr	x0, [x0, #80]
   2521c:	ldr	x1, [sp, #24]
   25220:	cmp	x1, x0
   25224:	b.cs	25230 <PyInit__decimal@@Base+0xd558>  // b.hs, b.nlast
   25228:	mov	w0, #0xa                   	// #10
   2522c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25230:	mov	w0, #0xb                   	// #11
   25234:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25238:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2523c:	add	x0, x0, #0xdb0
   25240:	ldr	x0, [x0, #104]
   25244:	ldr	x1, [sp, #24]
   25248:	cmp	x1, x0
   2524c:	b.cs	25278 <PyInit__decimal@@Base+0xd5a0>  // b.hs, b.nlast
   25250:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25254:	add	x0, x0, #0xdb0
   25258:	ldr	x0, [x0, #96]
   2525c:	ldr	x1, [sp, #24]
   25260:	cmp	x1, x0
   25264:	b.cs	25270 <PyInit__decimal@@Base+0xd598>  // b.hs, b.nlast
   25268:	mov	w0, #0xc                   	// #12
   2526c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25270:	mov	w0, #0xd                   	// #13
   25274:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25278:	mov	w0, #0xe                   	// #14
   2527c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25280:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25284:	add	x0, x0, #0xdb0
   25288:	ldr	x0, [x0, #144]
   2528c:	ldr	x1, [sp, #24]
   25290:	cmp	x1, x0
   25294:	b.cs	25300 <PyInit__decimal@@Base+0xd628>  // b.hs, b.nlast
   25298:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2529c:	add	x0, x0, #0xdb0
   252a0:	ldr	x0, [x0, #128]
   252a4:	ldr	x1, [sp, #24]
   252a8:	cmp	x1, x0
   252ac:	b.cs	252d8 <PyInit__decimal@@Base+0xd600>  // b.hs, b.nlast
   252b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   252b4:	add	x0, x0, #0xdb0
   252b8:	ldr	x0, [x0, #120]
   252bc:	ldr	x1, [sp, #24]
   252c0:	cmp	x1, x0
   252c4:	b.cs	252d0 <PyInit__decimal@@Base+0xd5f8>  // b.hs, b.nlast
   252c8:	mov	w0, #0xf                   	// #15
   252cc:	b	25324 <PyInit__decimal@@Base+0xd64c>
   252d0:	mov	w0, #0x10                  	// #16
   252d4:	b	25324 <PyInit__decimal@@Base+0xd64c>
   252d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   252dc:	add	x0, x0, #0xdb0
   252e0:	ldr	x0, [x0, #136]
   252e4:	ldr	x1, [sp, #24]
   252e8:	cmp	x1, x0
   252ec:	b.cs	252f8 <PyInit__decimal@@Base+0xd620>  // b.hs, b.nlast
   252f0:	mov	w0, #0x11                  	// #17
   252f4:	b	25324 <PyInit__decimal@@Base+0xd64c>
   252f8:	mov	w0, #0x12                  	// #18
   252fc:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25300:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25304:	add	x0, x0, #0xdb0
   25308:	ldr	x0, [x0, #152]
   2530c:	ldr	x1, [sp, #24]
   25310:	cmp	x1, x0
   25314:	b.cs	25320 <PyInit__decimal@@Base+0xd648>  // b.hs, b.nlast
   25318:	mov	w0, #0x13                  	// #19
   2531c:	b	25324 <PyInit__decimal@@Base+0xd64c>
   25320:	mov	w0, #0x14                  	// #20
   25324:	add	sp, sp, #0x20
   25328:	ret
   2532c:	sub	sp, sp, #0x10
   25330:	str	x0, [sp, #8]
   25334:	mov	w0, #0x1                   	// #1
   25338:	add	sp, sp, #0x10
   2533c:	ret
   25340:	sub	sp, sp, #0x10
   25344:	str	x0, [sp, #8]
   25348:	ldr	x0, [sp, #8]
   2534c:	ldrb	w0, [x0]
   25350:	and	w0, w0, #0xe
   25354:	cmp	w0, #0x0
   25358:	cset	w0, eq  // eq = none
   2535c:	and	w0, w0, #0xff
   25360:	add	sp, sp, #0x10
   25364:	ret
   25368:	sub	sp, sp, #0x10
   2536c:	str	x0, [sp, #8]
   25370:	ldr	x0, [sp, #8]
   25374:	ldrb	w0, [x0]
   25378:	and	w0, w0, #0x2
   2537c:	add	sp, sp, #0x10
   25380:	ret
   25384:	sub	sp, sp, #0x10
   25388:	str	x0, [sp, #8]
   2538c:	ldr	x0, [sp, #8]
   25390:	ldrb	w0, [x0]
   25394:	and	w0, w0, #0xc
   25398:	add	sp, sp, #0x10
   2539c:	ret
   253a0:	sub	sp, sp, #0x10
   253a4:	str	x0, [sp, #8]
   253a8:	ldr	x0, [sp, #8]
   253ac:	ldrb	w0, [x0]
   253b0:	and	w0, w0, #0x1
   253b4:	add	sp, sp, #0x10
   253b8:	ret
   253bc:	sub	sp, sp, #0x10
   253c0:	str	x0, [sp, #8]
   253c4:	ldr	x0, [sp, #8]
   253c8:	ldrb	w0, [x0]
   253cc:	and	w0, w0, #0x1
   253d0:	cmp	w0, #0x0
   253d4:	cset	w0, eq  // eq = none
   253d8:	and	w0, w0, #0xff
   253dc:	add	sp, sp, #0x10
   253e0:	ret
   253e4:	sub	sp, sp, #0x10
   253e8:	str	x0, [sp, #8]
   253ec:	ldr	x0, [sp, #8]
   253f0:	ldrb	w0, [x0]
   253f4:	and	w0, w0, #0x4
   253f8:	add	sp, sp, #0x10
   253fc:	ret
   25400:	sub	sp, sp, #0x10
   25404:	str	x0, [sp, #8]
   25408:	ldr	x0, [sp, #8]
   2540c:	ldrb	w0, [x0]
   25410:	and	w0, w0, #0x1
   25414:	add	sp, sp, #0x10
   25418:	ret
   2541c:	sub	sp, sp, #0x10
   25420:	str	x0, [sp, #8]
   25424:	ldr	x0, [sp, #8]
   25428:	ldrb	w0, [x0]
   2542c:	and	w0, w0, #0x8
   25430:	add	sp, sp, #0x10
   25434:	ret
   25438:	sub	sp, sp, #0x10
   2543c:	str	x0, [sp, #8]
   25440:	ldr	x0, [sp, #8]
   25444:	ldrb	w0, [x0]
   25448:	and	w0, w0, #0xe
   2544c:	add	sp, sp, #0x10
   25450:	ret
   25454:	sub	sp, sp, #0x20
   25458:	str	x0, [sp, #8]
   2545c:	ldr	x0, [sp, #8]
   25460:	str	x0, [sp, #24]
   25464:	ldr	x0, [sp, #24]
   25468:	ldrb	w0, [x0]
   2546c:	and	w0, w0, #0xe
   25470:	cmp	w0, #0x0
   25474:	b.ne	254b0 <PyInit__decimal@@Base+0xd7d8>  // b.any
   25478:	ldr	x0, [sp, #8]
   2547c:	str	x0, [sp, #16]
   25480:	ldr	x0, [sp, #16]
   25484:	ldr	x1, [x0, #40]
   25488:	ldr	x0, [sp, #16]
   2548c:	ldr	x0, [x0, #24]
   25490:	lsl	x0, x0, #3
   25494:	sub	x0, x0, #0x8
   25498:	add	x0, x1, x0
   2549c:	ldr	x0, [x0]
   254a0:	cmp	x0, #0x0
   254a4:	b.ne	254b0 <PyInit__decimal@@Base+0xd7d8>  // b.any
   254a8:	mov	w0, #0x1                   	// #1
   254ac:	b	254b4 <PyInit__decimal@@Base+0xd7dc>
   254b0:	mov	w0, #0x0                   	// #0
   254b4:	add	sp, sp, #0x20
   254b8:	ret
   254bc:	sub	sp, sp, #0x20
   254c0:	str	x0, [sp, #8]
   254c4:	ldr	x0, [sp, #8]
   254c8:	str	x0, [sp, #24]
   254cc:	ldr	x0, [sp, #24]
   254d0:	ldr	x1, [x0, #40]
   254d4:	ldr	x0, [sp, #24]
   254d8:	ldr	x0, [x0, #24]
   254dc:	lsl	x0, x0, #3
   254e0:	sub	x0, x0, #0x8
   254e4:	add	x0, x1, x0
   254e8:	ldr	x0, [x0]
   254ec:	cmp	x0, #0x0
   254f0:	cset	w0, eq  // eq = none
   254f4:	and	w0, w0, #0xff
   254f8:	add	sp, sp, #0x20
   254fc:	ret
   25500:	sub	sp, sp, #0x30
   25504:	str	x0, [sp, #8]
   25508:	str	x1, [sp]
   2550c:	ldr	x0, [sp, #8]
   25510:	str	x0, [sp, #40]
   25514:	ldr	x0, [sp, #40]
   25518:	ldrb	w0, [x0]
   2551c:	and	w0, w0, #0xe
   25520:	cmp	w0, #0x0
   25524:	b.eq	25530 <PyInit__decimal@@Base+0xd858>  // b.none
   25528:	mov	w0, #0x0                   	// #0
   2552c:	b	255b0 <PyInit__decimal@@Base+0xd8d8>
   25530:	ldr	x0, [sp, #8]
   25534:	str	x0, [sp, #32]
   25538:	ldr	x0, [sp, #32]
   2553c:	str	x0, [sp, #24]
   25540:	ldr	x0, [sp, #24]
   25544:	ldr	x1, [x0, #40]
   25548:	ldr	x0, [sp, #24]
   2554c:	ldr	x0, [x0, #24]
   25550:	lsl	x0, x0, #3
   25554:	sub	x0, x0, #0x8
   25558:	add	x0, x1, x0
   2555c:	ldr	x0, [x0]
   25560:	cmp	x0, #0x0
   25564:	cset	w0, eq  // eq = none
   25568:	and	w0, w0, #0xff
   2556c:	cmp	w0, #0x0
   25570:	b.eq	2557c <PyInit__decimal@@Base+0xd8a4>  // b.none
   25574:	mov	w0, #0x0                   	// #0
   25578:	b	255b0 <PyInit__decimal@@Base+0xd8d8>
   2557c:	ldr	x0, [sp, #8]
   25580:	str	x0, [sp, #16]
   25584:	ldr	x0, [sp, #16]
   25588:	ldr	x1, [x0, #8]
   2558c:	ldr	x0, [sp, #16]
   25590:	ldr	x0, [x0, #16]
   25594:	add	x0, x1, x0
   25598:	sub	x1, x0, #0x1
   2559c:	ldr	x0, [sp]
   255a0:	ldr	x0, [x0, #16]
   255a4:	cmp	x1, x0
   255a8:	cset	w0, ge  // ge = tcont
   255ac:	and	w0, w0, #0xff
   255b0:	add	sp, sp, #0x30
   255b4:	ret
   255b8:	sub	sp, sp, #0x30
   255bc:	str	x0, [sp, #8]
   255c0:	str	x1, [sp]
   255c4:	ldr	x0, [sp, #8]
   255c8:	str	x0, [sp, #40]
   255cc:	ldr	x0, [sp, #40]
   255d0:	ldrb	w0, [x0]
   255d4:	and	w0, w0, #0xe
   255d8:	cmp	w0, #0x0
   255dc:	b.eq	255e8 <PyInit__decimal@@Base+0xd910>  // b.none
   255e0:	mov	w0, #0x0                   	// #0
   255e4:	b	25668 <PyInit__decimal@@Base+0xd990>
   255e8:	ldr	x0, [sp, #8]
   255ec:	str	x0, [sp, #32]
   255f0:	ldr	x0, [sp, #32]
   255f4:	str	x0, [sp, #24]
   255f8:	ldr	x0, [sp, #24]
   255fc:	ldr	x1, [x0, #40]
   25600:	ldr	x0, [sp, #24]
   25604:	ldr	x0, [x0, #24]
   25608:	lsl	x0, x0, #3
   2560c:	sub	x0, x0, #0x8
   25610:	add	x0, x1, x0
   25614:	ldr	x0, [x0]
   25618:	cmp	x0, #0x0
   2561c:	cset	w0, eq  // eq = none
   25620:	and	w0, w0, #0xff
   25624:	cmp	w0, #0x0
   25628:	b.eq	25634 <PyInit__decimal@@Base+0xd95c>  // b.none
   2562c:	mov	w0, #0x0                   	// #0
   25630:	b	25668 <PyInit__decimal@@Base+0xd990>
   25634:	ldr	x0, [sp, #8]
   25638:	str	x0, [sp, #16]
   2563c:	ldr	x0, [sp, #16]
   25640:	ldr	x1, [x0, #8]
   25644:	ldr	x0, [sp, #16]
   25648:	ldr	x0, [x0, #16]
   2564c:	add	x0, x1, x0
   25650:	sub	x1, x0, #0x1
   25654:	ldr	x0, [sp]
   25658:	ldr	x0, [x0, #16]
   2565c:	cmp	x1, x0
   25660:	cset	w0, lt  // lt = tstop
   25664:	and	w0, w0, #0xff
   25668:	add	sp, sp, #0x30
   2566c:	ret
   25670:	sub	sp, sp, #0x10
   25674:	str	x0, [sp, #8]
   25678:	ldr	x0, [sp, #8]
   2567c:	and	w0, w0, #0x1
   25680:	add	sp, sp, #0x10
   25684:	ret
   25688:	sub	sp, sp, #0x20
   2568c:	str	x0, [sp, #8]
   25690:	ldr	x0, [sp, #8]
   25694:	ldr	x0, [x0, #40]
   25698:	ldr	x0, [x0]
   2569c:	str	x0, [sp, #24]
   256a0:	ldr	x0, [sp, #24]
   256a4:	and	w0, w0, #0x1
   256a8:	add	sp, sp, #0x20
   256ac:	ret
   256b0:	sub	sp, sp, #0x10
   256b4:	str	x0, [sp, #8]
   256b8:	ldr	x0, [sp, #8]
   256bc:	ldrb	w0, [x0]
   256c0:	and	w0, w0, #0x1
   256c4:	and	w0, w0, #0xff
   256c8:	add	sp, sp, #0x10
   256cc:	ret
   256d0:	sub	sp, sp, #0x20
   256d4:	str	x0, [sp, #8]
   256d8:	ldr	x0, [sp, #8]
   256dc:	str	x0, [sp, #24]
   256e0:	ldr	x0, [sp, #24]
   256e4:	ldrb	w0, [x0]
   256e8:	and	w1, w0, #0x1
   256ec:	mov	w0, #0x0                   	// #0
   256f0:	sub	w0, w0, w1
   256f4:	lsl	w0, w0, #1
   256f8:	add	w0, w0, #0x1
   256fc:	add	sp, sp, #0x20
   25700:	ret
   25704:	mov	x0, #0xa                   	// #10
   25708:	ret
   2570c:	sub	sp, sp, #0x10
   25710:	str	x0, [sp, #8]
   25714:	ldr	x0, [sp, #8]
   25718:	ldrb	w0, [x0]
   2571c:	and	w0, w0, #0x10
   25720:	cmp	w0, #0x0
   25724:	cset	w0, eq  // eq = none
   25728:	and	w0, w0, #0xff
   2572c:	add	sp, sp, #0x10
   25730:	ret
   25734:	sub	sp, sp, #0x10
   25738:	str	x0, [sp, #8]
   2573c:	ldr	x0, [sp, #8]
   25740:	ldrb	w0, [x0]
   25744:	and	w0, w0, #0x10
   25748:	add	sp, sp, #0x10
   2574c:	ret
   25750:	sub	sp, sp, #0x10
   25754:	str	x0, [sp, #8]
   25758:	ldr	x0, [sp, #8]
   2575c:	ldrb	w0, [x0]
   25760:	and	w0, w0, #0xe0
   25764:	cmp	w0, #0x0
   25768:	cset	w0, eq  // eq = none
   2576c:	and	w0, w0, #0xff
   25770:	add	sp, sp, #0x10
   25774:	ret
   25778:	sub	sp, sp, #0x10
   2577c:	str	x0, [sp, #8]
   25780:	ldr	x0, [sp, #8]
   25784:	ldrb	w0, [x0]
   25788:	and	w0, w0, #0x20
   2578c:	add	sp, sp, #0x10
   25790:	ret
   25794:	sub	sp, sp, #0x10
   25798:	str	x0, [sp, #8]
   2579c:	ldr	x0, [sp, #8]
   257a0:	ldrb	w0, [x0]
   257a4:	and	w0, w0, #0x40
   257a8:	add	sp, sp, #0x10
   257ac:	ret
   257b0:	sub	sp, sp, #0x10
   257b4:	str	x0, [sp, #8]
   257b8:	ldr	x0, [sp, #8]
   257bc:	ldrb	w0, [x0]
   257c0:	and	w0, w0, #0x80
   257c4:	add	sp, sp, #0x10
   257c8:	ret
   257cc:	sub	sp, sp, #0x20
   257d0:	str	x0, [sp, #8]
   257d4:	str	x1, [sp]
   257d8:	str	xzr, [sp, #24]
   257dc:	b	25800 <PyInit__decimal@@Base+0xdb28>
   257e0:	ldr	x0, [sp, #24]
   257e4:	lsl	x0, x0, #3
   257e8:	ldr	x1, [sp, #8]
   257ec:	add	x0, x1, x0
   257f0:	str	xzr, [x0]
   257f4:	ldr	x0, [sp, #24]
   257f8:	add	x0, x0, #0x1
   257fc:	str	x0, [sp, #24]
   25800:	ldr	x1, [sp, #24]
   25804:	ldr	x0, [sp]
   25808:	cmp	x1, x0
   2580c:	b.cc	257e0 <PyInit__decimal@@Base+0xdb08>  // b.lo, b.ul, b.last
   25810:	nop
   25814:	nop
   25818:	add	sp, sp, #0x20
   2581c:	ret
   25820:	stp	x29, x30, [sp, #-48]!
   25824:	mov	x29, sp
   25828:	str	x0, [sp, #24]
   2582c:	ldr	x0, [sp, #24]
   25830:	str	x0, [sp, #40]
   25834:	ldr	x0, [sp, #40]
   25838:	ldrb	w0, [x0]
   2583c:	and	w0, w0, #0xe0
   25840:	cmp	w0, #0x0
   25844:	cset	w0, eq  // eq = none
   25848:	and	w0, w0, #0xff
   2584c:	cmp	w0, #0x0
   25850:	b.eq	2586c <PyInit__decimal@@Base+0xdb94>  // b.none
   25854:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25858:	add	x0, x0, #0x6f8
   2585c:	ldr	x1, [x0]
   25860:	ldr	x0, [sp, #24]
   25864:	ldr	x0, [x0, #40]
   25868:	blr	x1
   2586c:	ldr	x0, [sp, #24]
   25870:	str	x0, [sp, #32]
   25874:	ldr	x0, [sp, #32]
   25878:	ldrb	w0, [x0]
   2587c:	and	w0, w0, #0x10
   25880:	cmp	w0, #0x0
   25884:	cset	w0, eq  // eq = none
   25888:	and	w0, w0, #0xff
   2588c:	cmp	w0, #0x0
   25890:	b.eq	258a8 <PyInit__decimal@@Base+0xdbd0>  // b.none
   25894:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25898:	add	x0, x0, #0x6f8
   2589c:	ldr	x1, [x0]
   258a0:	ldr	x0, [sp, #24]
   258a4:	blr	x1
   258a8:	nop
   258ac:	ldp	x29, x30, [sp], #48
   258b0:	ret
   258b4:	stp	x29, x30, [sp, #-64]!
   258b8:	mov	x29, sp
   258bc:	str	x0, [sp, #40]
   258c0:	str	x1, [sp, #32]
   258c4:	str	x2, [sp, #24]
   258c8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   258cc:	add	x0, x0, #0x6d8
   258d0:	ldr	x0, [x0]
   258d4:	ldr	x2, [sp, #32]
   258d8:	ldr	x1, [sp, #32]
   258dc:	cmp	x2, x0
   258e0:	csel	x0, x1, x0, ge  // ge = tcont
   258e4:	str	x0, [sp, #32]
   258e8:	ldr	x0, [sp, #40]
   258ec:	ldr	x0, [x0, #32]
   258f0:	ldr	x1, [sp, #32]
   258f4:	cmp	x1, x0
   258f8:	b.ne	25904 <PyInit__decimal@@Base+0xdc2c>  // b.any
   258fc:	mov	w0, #0x1                   	// #1
   25900:	b	25960 <PyInit__decimal@@Base+0xdc88>
   25904:	ldr	x0, [sp, #40]
   25908:	str	x0, [sp, #56]
   2590c:	ldr	x0, [sp, #56]
   25910:	ldrb	w0, [x0]
   25914:	and	w0, w0, #0x20
   25918:	cmp	w0, #0x0
   2591c:	b.eq	25950 <PyInit__decimal@@Base+0xdc78>  // b.none
   25920:	ldr	x0, [sp, #40]
   25924:	ldr	x0, [x0, #32]
   25928:	ldr	x1, [sp, #32]
   2592c:	cmp	x1, x0
   25930:	b.le	25948 <PyInit__decimal@@Base+0xdc70>
   25934:	ldr	x2, [sp, #24]
   25938:	ldr	x1, [sp, #32]
   2593c:	ldr	x0, [sp, #40]
   25940:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   25944:	b	25960 <PyInit__decimal@@Base+0xdc88>
   25948:	mov	w0, #0x1                   	// #1
   2594c:	b	25960 <PyInit__decimal@@Base+0xdc88>
   25950:	ldr	x2, [sp, #24]
   25954:	ldr	x1, [sp, #32]
   25958:	ldr	x0, [sp, #40]
   2595c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   25960:	ldp	x29, x30, [sp], #64
   25964:	ret
   25968:	stp	x29, x30, [sp, #-80]!
   2596c:	mov	x29, sp
   25970:	str	x0, [sp, #40]
   25974:	str	x1, [sp, #32]
   25978:	str	x2, [sp, #24]
   2597c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25980:	add	x0, x0, #0x6d8
   25984:	ldr	x0, [x0]
   25988:	ldr	x2, [sp, #32]
   2598c:	ldr	x1, [sp, #32]
   25990:	cmp	x2, x0
   25994:	csel	x0, x1, x0, ge  // ge = tcont
   25998:	str	x0, [sp, #32]
   2599c:	ldr	x0, [sp, #40]
   259a0:	ldr	x0, [x0, #32]
   259a4:	ldr	x1, [sp, #32]
   259a8:	cmp	x1, x0
   259ac:	b.eq	25a14 <PyInit__decimal@@Base+0xdd3c>  // b.none
   259b0:	ldr	x0, [sp, #40]
   259b4:	str	x0, [sp, #72]
   259b8:	ldr	x0, [sp, #72]
   259bc:	ldrb	w0, [x0]
   259c0:	and	w0, w0, #0x20
   259c4:	cmp	w0, #0x0
   259c8:	b.eq	259f4 <PyInit__decimal@@Base+0xdd1c>  // b.none
   259cc:	ldr	x0, [sp, #40]
   259d0:	ldr	x0, [x0, #32]
   259d4:	ldr	x1, [sp, #32]
   259d8:	cmp	x1, x0
   259dc:	b.le	25a14 <PyInit__decimal@@Base+0xdd3c>
   259e0:	ldr	x2, [sp, #24]
   259e4:	ldr	x1, [sp, #32]
   259e8:	ldr	x0, [sp, #40]
   259ec:	bl	23874 <PyInit__decimal@@Base+0xbb9c>
   259f0:	b	25a68 <PyInit__decimal@@Base+0xdd90>
   259f4:	ldr	x2, [sp, #24]
   259f8:	ldr	x1, [sp, #32]
   259fc:	ldr	x0, [sp, #40]
   25a00:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   25a04:	cmp	w0, #0x0
   25a08:	b.ne	25a14 <PyInit__decimal@@Base+0xdd3c>  // b.any
   25a0c:	mov	w0, #0x0                   	// #0
   25a10:	b	25a68 <PyInit__decimal@@Base+0xdd90>
   25a14:	ldr	x0, [sp, #40]
   25a18:	ldr	x1, [x0, #40]
   25a1c:	ldr	x0, [sp, #32]
   25a20:	str	x1, [sp, #64]
   25a24:	str	x0, [sp, #56]
   25a28:	str	xzr, [sp, #48]
   25a2c:	b	25a50 <PyInit__decimal@@Base+0xdd78>
   25a30:	ldr	x0, [sp, #48]
   25a34:	lsl	x0, x0, #3
   25a38:	ldr	x1, [sp, #64]
   25a3c:	add	x0, x1, x0
   25a40:	str	xzr, [x0]
   25a44:	ldr	x0, [sp, #48]
   25a48:	add	x0, x0, #0x1
   25a4c:	str	x0, [sp, #48]
   25a50:	ldr	x1, [sp, #56]
   25a54:	ldr	x0, [sp, #48]
   25a58:	cmp	x1, x0
   25a5c:	b.hi	25a30 <PyInit__decimal@@Base+0xdd58>  // b.pmore
   25a60:	nop
   25a64:	mov	w0, #0x1                   	// #1
   25a68:	ldp	x29, x30, [sp], #80
   25a6c:	ret
   25a70:	stp	x29, x30, [sp, #-48]!
   25a74:	mov	x29, sp
   25a78:	str	x0, [sp, #24]
   25a7c:	ldr	x0, [sp, #24]
   25a80:	str	x0, [sp, #40]
   25a84:	ldr	x0, [sp, #40]
   25a88:	ldrb	w0, [x0]
   25a8c:	and	w0, w0, #0x20
   25a90:	cmp	w0, #0x0
   25a94:	b.ne	25b10 <PyInit__decimal@@Base+0xde38>  // b.any
   25a98:	ldr	x0, [sp, #24]
   25a9c:	ldr	x1, [x0, #32]
   25aa0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25aa4:	add	x0, x0, #0x6d8
   25aa8:	ldr	x0, [x0]
   25aac:	cmp	x1, x0
   25ab0:	b.le	25b10 <PyInit__decimal@@Base+0xde38>
   25ab4:	strb	wzr, [sp, #39]
   25ab8:	ldr	x0, [sp, #24]
   25abc:	ldr	x4, [x0, #40]
   25ac0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25ac4:	add	x0, x0, #0x6d8
   25ac8:	ldr	x0, [x0]
   25acc:	mov	x1, x0
   25ad0:	add	x0, sp, #0x27
   25ad4:	mov	x3, x0
   25ad8:	mov	x2, #0x8                   	// #8
   25adc:	mov	x0, x4
   25ae0:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   25ae4:	mov	x1, x0
   25ae8:	ldr	x0, [sp, #24]
   25aec:	str	x1, [x0, #40]
   25af0:	ldrb	w0, [sp, #39]
   25af4:	cmp	w0, #0x0
   25af8:	b.ne	25b10 <PyInit__decimal@@Base+0xde38>  // b.any
   25afc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25b00:	add	x0, x0, #0x6d8
   25b04:	ldr	x1, [x0]
   25b08:	ldr	x0, [sp, #24]
   25b0c:	str	x1, [x0, #32]
   25b10:	nop
   25b14:	ldp	x29, x30, [sp], #48
   25b18:	ret
   25b1c:	stp	x29, x30, [sp, #-96]!
   25b20:	mov	x29, sp
   25b24:	str	x0, [sp, #40]
   25b28:	str	x1, [sp, #32]
   25b2c:	str	x2, [sp, #24]
   25b30:	str	wzr, [sp, #60]
   25b34:	ldr	x0, [sp, #40]
   25b38:	str	x0, [sp, #88]
   25b3c:	ldr	x0, [sp, #32]
   25b40:	str	x0, [sp, #80]
   25b44:	add	x0, sp, #0x3c
   25b48:	str	x0, [sp, #72]
   25b4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25b50:	add	x0, x0, #0x6d8
   25b54:	ldr	x0, [x0]
   25b58:	ldr	x2, [sp, #80]
   25b5c:	ldr	x1, [sp, #80]
   25b60:	cmp	x2, x0
   25b64:	csel	x0, x1, x0, ge  // ge = tcont
   25b68:	str	x0, [sp, #80]
   25b6c:	ldr	x0, [sp, #88]
   25b70:	ldr	x0, [x0, #32]
   25b74:	ldr	x1, [sp, #80]
   25b78:	cmp	x1, x0
   25b7c:	b.ne	25b88 <PyInit__decimal@@Base+0xdeb0>  // b.any
   25b80:	mov	w0, #0x1                   	// #1
   25b84:	b	25be4 <PyInit__decimal@@Base+0xdf0c>
   25b88:	ldr	x0, [sp, #88]
   25b8c:	str	x0, [sp, #64]
   25b90:	ldr	x0, [sp, #64]
   25b94:	ldrb	w0, [x0]
   25b98:	and	w0, w0, #0x20
   25b9c:	cmp	w0, #0x0
   25ba0:	b.eq	25bd4 <PyInit__decimal@@Base+0xdefc>  // b.none
   25ba4:	ldr	x0, [sp, #88]
   25ba8:	ldr	x0, [x0, #32]
   25bac:	ldr	x1, [sp, #80]
   25bb0:	cmp	x1, x0
   25bb4:	b.le	25bcc <PyInit__decimal@@Base+0xdef4>
   25bb8:	ldr	x2, [sp, #72]
   25bbc:	ldr	x1, [sp, #80]
   25bc0:	ldr	x0, [sp, #88]
   25bc4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   25bc8:	b	25be4 <PyInit__decimal@@Base+0xdf0c>
   25bcc:	mov	w0, #0x1                   	// #1
   25bd0:	b	25be4 <PyInit__decimal@@Base+0xdf0c>
   25bd4:	ldr	x2, [sp, #72]
   25bd8:	ldr	x1, [sp, #80]
   25bdc:	ldr	x0, [sp, #88]
   25be0:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   25be4:	cmp	w0, #0x0
   25be8:	b.ne	25c04 <PyInit__decimal@@Base+0xdf2c>  // b.any
   25bec:	ldr	w0, [sp, #60]
   25bf0:	mov	w1, w0
   25bf4:	ldr	x0, [sp, #24]
   25bf8:	bl	1bbe4 <PyInit__decimal@@Base+0x3f0c>
   25bfc:	mov	w0, #0x0                   	// #0
   25c00:	b	25c08 <PyInit__decimal@@Base+0xdf30>
   25c04:	mov	w0, #0x1                   	// #1
   25c08:	ldp	x29, x30, [sp], #96
   25c0c:	ret
   25c10:	stp	x29, x30, [sp, #-112]!
   25c14:	mov	x29, sp
   25c18:	str	x0, [sp, #40]
   25c1c:	str	x1, [sp, #32]
   25c20:	str	x2, [sp, #24]
   25c24:	str	wzr, [sp, #52]
   25c28:	ldr	x0, [sp, #40]
   25c2c:	str	x0, [sp, #104]
   25c30:	ldr	x0, [sp, #32]
   25c34:	str	x0, [sp, #96]
   25c38:	add	x0, sp, #0x34
   25c3c:	str	x0, [sp, #88]
   25c40:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   25c44:	add	x0, x0, #0x6d8
   25c48:	ldr	x0, [x0]
   25c4c:	ldr	x2, [sp, #96]
   25c50:	ldr	x1, [sp, #96]
   25c54:	cmp	x2, x0
   25c58:	csel	x0, x1, x0, ge  // ge = tcont
   25c5c:	str	x0, [sp, #96]
   25c60:	ldr	x0, [sp, #104]
   25c64:	ldr	x0, [x0, #32]
   25c68:	ldr	x1, [sp, #96]
   25c6c:	cmp	x1, x0
   25c70:	b.eq	25cd8 <PyInit__decimal@@Base+0xe000>  // b.none
   25c74:	ldr	x0, [sp, #104]
   25c78:	str	x0, [sp, #80]
   25c7c:	ldr	x0, [sp, #80]
   25c80:	ldrb	w0, [x0]
   25c84:	and	w0, w0, #0x20
   25c88:	cmp	w0, #0x0
   25c8c:	b.eq	25cb8 <PyInit__decimal@@Base+0xdfe0>  // b.none
   25c90:	ldr	x0, [sp, #104]
   25c94:	ldr	x0, [x0, #32]
   25c98:	ldr	x1, [sp, #96]
   25c9c:	cmp	x1, x0
   25ca0:	b.le	25cd8 <PyInit__decimal@@Base+0xe000>
   25ca4:	ldr	x2, [sp, #88]
   25ca8:	ldr	x1, [sp, #96]
   25cac:	ldr	x0, [sp, #104]
   25cb0:	bl	23874 <PyInit__decimal@@Base+0xbb9c>
   25cb4:	b	25d2c <PyInit__decimal@@Base+0xe054>
   25cb8:	ldr	x2, [sp, #88]
   25cbc:	ldr	x1, [sp, #96]
   25cc0:	ldr	x0, [sp, #104]
   25cc4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   25cc8:	cmp	w0, #0x0
   25ccc:	b.ne	25cd8 <PyInit__decimal@@Base+0xe000>  // b.any
   25cd0:	mov	w0, #0x0                   	// #0
   25cd4:	b	25d2c <PyInit__decimal@@Base+0xe054>
   25cd8:	ldr	x0, [sp, #104]
   25cdc:	ldr	x1, [x0, #40]
   25ce0:	ldr	x0, [sp, #96]
   25ce4:	str	x1, [sp, #72]
   25ce8:	str	x0, [sp, #64]
   25cec:	str	xzr, [sp, #56]
   25cf0:	b	25d14 <PyInit__decimal@@Base+0xe03c>
   25cf4:	ldr	x0, [sp, #56]
   25cf8:	lsl	x0, x0, #3
   25cfc:	ldr	x1, [sp, #72]
   25d00:	add	x0, x1, x0
   25d04:	str	xzr, [x0]
   25d08:	ldr	x0, [sp, #56]
   25d0c:	add	x0, x0, #0x1
   25d10:	str	x0, [sp, #56]
   25d14:	ldr	x1, [sp, #64]
   25d18:	ldr	x0, [sp, #56]
   25d1c:	cmp	x1, x0
   25d20:	b.hi	25cf4 <PyInit__decimal@@Base+0xe01c>  // b.pmore
   25d24:	nop
   25d28:	mov	w0, #0x1                   	// #1
   25d2c:	cmp	w0, #0x0
   25d30:	b.ne	25d4c <PyInit__decimal@@Base+0xe074>  // b.any
   25d34:	ldr	w0, [sp, #52]
   25d38:	mov	w1, w0
   25d3c:	ldr	x0, [sp, #24]
   25d40:	bl	1bbe4 <PyInit__decimal@@Base+0x3f0c>
   25d44:	mov	w0, #0x0                   	// #0
   25d48:	b	25d50 <PyInit__decimal@@Base+0xe078>
   25d4c:	mov	w0, #0x1                   	// #1
   25d50:	ldp	x29, x30, [sp], #112
   25d54:	ret
   25d58:	sub	sp, sp, #0x30
   25d5c:	str	x0, [sp, #8]
   25d60:	ldr	x0, [sp, #8]
   25d64:	str	x0, [sp, #24]
   25d68:	ldr	x0, [sp, #24]
   25d6c:	ldr	x1, [x0, #40]
   25d70:	ldr	x0, [sp, #24]
   25d74:	ldr	x0, [x0, #24]
   25d78:	lsl	x0, x0, #3
   25d7c:	sub	x0, x0, #0x8
   25d80:	add	x0, x1, x0
   25d84:	ldr	x0, [x0]
   25d88:	str	x0, [sp, #32]
   25d8c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25d90:	add	x0, x0, #0xdb0
   25d94:	ldr	x0, [x0, #72]
   25d98:	ldr	x1, [sp, #32]
   25d9c:	cmp	x1, x0
   25da0:	b.cs	25eac <PyInit__decimal@@Base+0xe1d4>  // b.hs, b.nlast
   25da4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25da8:	add	x0, x0, #0xdb0
   25dac:	ldr	x0, [x0, #32]
   25db0:	ldr	x1, [sp, #32]
   25db4:	cmp	x1, x0
   25db8:	b.cs	25e24 <PyInit__decimal@@Base+0xe14c>  // b.hs, b.nlast
   25dbc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25dc0:	add	x0, x0, #0xdb0
   25dc4:	ldr	x0, [x0, #16]
   25dc8:	ldr	x1, [sp, #32]
   25dcc:	cmp	x1, x0
   25dd0:	b.cs	25dfc <PyInit__decimal@@Base+0xe124>  // b.hs, b.nlast
   25dd4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25dd8:	add	x0, x0, #0xdb0
   25ddc:	ldr	x0, [x0, #8]
   25de0:	ldr	x1, [sp, #32]
   25de4:	cmp	x1, x0
   25de8:	b.cs	25df4 <PyInit__decimal@@Base+0xe11c>  // b.hs, b.nlast
   25dec:	mov	w0, #0x1                   	// #1
   25df0:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25df4:	mov	w0, #0x2                   	// #2
   25df8:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25dfc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25e00:	add	x0, x0, #0xdb0
   25e04:	ldr	x0, [x0, #24]
   25e08:	ldr	x1, [sp, #32]
   25e0c:	cmp	x1, x0
   25e10:	b.cs	25e1c <PyInit__decimal@@Base+0xe144>  // b.hs, b.nlast
   25e14:	mov	w0, #0x3                   	// #3
   25e18:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25e1c:	mov	w0, #0x4                   	// #4
   25e20:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25e24:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25e28:	add	x0, x0, #0xdb0
   25e2c:	ldr	x0, [x0, #48]
   25e30:	ldr	x1, [sp, #32]
   25e34:	cmp	x1, x0
   25e38:	b.cs	25e64 <PyInit__decimal@@Base+0xe18c>  // b.hs, b.nlast
   25e3c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25e40:	add	x0, x0, #0xdb0
   25e44:	ldr	x0, [x0, #40]
   25e48:	ldr	x1, [sp, #32]
   25e4c:	cmp	x1, x0
   25e50:	b.cs	25e5c <PyInit__decimal@@Base+0xe184>  // b.hs, b.nlast
   25e54:	mov	w0, #0x5                   	// #5
   25e58:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25e5c:	mov	w0, #0x6                   	// #6
   25e60:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25e64:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25e68:	add	x0, x0, #0xdb0
   25e6c:	ldr	x0, [x0, #64]
   25e70:	ldr	x1, [sp, #32]
   25e74:	cmp	x1, x0
   25e78:	b.cs	25ea4 <PyInit__decimal@@Base+0xe1cc>  // b.hs, b.nlast
   25e7c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25e80:	add	x0, x0, #0xdb0
   25e84:	ldr	x0, [x0, #56]
   25e88:	ldr	x1, [sp, #32]
   25e8c:	cmp	x1, x0
   25e90:	b.cs	25e9c <PyInit__decimal@@Base+0xe1c4>  // b.hs, b.nlast
   25e94:	mov	w0, #0x7                   	// #7
   25e98:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25e9c:	mov	w0, #0x8                   	// #8
   25ea0:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25ea4:	mov	w0, #0x9                   	// #9
   25ea8:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25eac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25eb0:	add	x0, x0, #0xdb0
   25eb4:	ldr	x0, [x0, #112]
   25eb8:	ldr	x1, [sp, #32]
   25ebc:	cmp	x1, x0
   25ec0:	b.cs	25f4c <PyInit__decimal@@Base+0xe274>  // b.hs, b.nlast
   25ec4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25ec8:	add	x0, x0, #0xdb0
   25ecc:	ldr	x0, [x0, #88]
   25ed0:	ldr	x1, [sp, #32]
   25ed4:	cmp	x1, x0
   25ed8:	b.cs	25f04 <PyInit__decimal@@Base+0xe22c>  // b.hs, b.nlast
   25edc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25ee0:	add	x0, x0, #0xdb0
   25ee4:	ldr	x0, [x0, #80]
   25ee8:	ldr	x1, [sp, #32]
   25eec:	cmp	x1, x0
   25ef0:	b.cs	25efc <PyInit__decimal@@Base+0xe224>  // b.hs, b.nlast
   25ef4:	mov	w0, #0xa                   	// #10
   25ef8:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25efc:	mov	w0, #0xb                   	// #11
   25f00:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25f04:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25f08:	add	x0, x0, #0xdb0
   25f0c:	ldr	x0, [x0, #104]
   25f10:	ldr	x1, [sp, #32]
   25f14:	cmp	x1, x0
   25f18:	b.cs	25f44 <PyInit__decimal@@Base+0xe26c>  // b.hs, b.nlast
   25f1c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25f20:	add	x0, x0, #0xdb0
   25f24:	ldr	x0, [x0, #96]
   25f28:	ldr	x1, [sp, #32]
   25f2c:	cmp	x1, x0
   25f30:	b.cs	25f3c <PyInit__decimal@@Base+0xe264>  // b.hs, b.nlast
   25f34:	mov	w0, #0xc                   	// #12
   25f38:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25f3c:	mov	w0, #0xd                   	// #13
   25f40:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25f44:	mov	w0, #0xe                   	// #14
   25f48:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25f4c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25f50:	add	x0, x0, #0xdb0
   25f54:	ldr	x0, [x0, #144]
   25f58:	ldr	x1, [sp, #32]
   25f5c:	cmp	x1, x0
   25f60:	b.cs	25fcc <PyInit__decimal@@Base+0xe2f4>  // b.hs, b.nlast
   25f64:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25f68:	add	x0, x0, #0xdb0
   25f6c:	ldr	x0, [x0, #128]
   25f70:	ldr	x1, [sp, #32]
   25f74:	cmp	x1, x0
   25f78:	b.cs	25fa4 <PyInit__decimal@@Base+0xe2cc>  // b.hs, b.nlast
   25f7c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25f80:	add	x0, x0, #0xdb0
   25f84:	ldr	x0, [x0, #120]
   25f88:	ldr	x1, [sp, #32]
   25f8c:	cmp	x1, x0
   25f90:	b.cs	25f9c <PyInit__decimal@@Base+0xe2c4>  // b.hs, b.nlast
   25f94:	mov	w0, #0xf                   	// #15
   25f98:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25f9c:	mov	w0, #0x10                  	// #16
   25fa0:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25fa4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25fa8:	add	x0, x0, #0xdb0
   25fac:	ldr	x0, [x0, #136]
   25fb0:	ldr	x1, [sp, #32]
   25fb4:	cmp	x1, x0
   25fb8:	b.cs	25fc4 <PyInit__decimal@@Base+0xe2ec>  // b.hs, b.nlast
   25fbc:	mov	w0, #0x11                  	// #17
   25fc0:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25fc4:	mov	w0, #0x12                  	// #18
   25fc8:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25fcc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   25fd0:	add	x0, x0, #0xdb0
   25fd4:	ldr	x0, [x0, #152]
   25fd8:	ldr	x1, [sp, #32]
   25fdc:	cmp	x1, x0
   25fe0:	b.cs	25fec <PyInit__decimal@@Base+0xe314>  // b.hs, b.nlast
   25fe4:	mov	w0, #0x13                  	// #19
   25fe8:	b	25ff0 <PyInit__decimal@@Base+0xe318>
   25fec:	mov	w0, #0x14                  	// #20
   25ff0:	sxtw	x0, w0
   25ff4:	str	x0, [sp, #40]
   25ff8:	ldr	x0, [sp, #8]
   25ffc:	ldr	x0, [x0, #24]
   26000:	sub	x1, x0, #0x1
   26004:	mov	x0, x1
   26008:	lsl	x0, x0, #2
   2600c:	add	x0, x0, x1
   26010:	lsl	x0, x0, #2
   26014:	sub	x1, x0, x1
   26018:	ldr	x0, [sp, #40]
   2601c:	add	x1, x1, x0
   26020:	ldr	x0, [sp, #8]
   26024:	str	x1, [x0, #16]
   26028:	nop
   2602c:	add	sp, sp, #0x30
   26030:	ret
   26034:	sub	sp, sp, #0x10
   26038:	str	x0, [sp, #8]
   2603c:	strb	w1, [sp, #7]
   26040:	ldr	x0, [sp, #8]
   26044:	ldrb	w0, [x0]
   26048:	and	w0, w0, #0xfffffffe
   2604c:	and	w1, w0, #0xff
   26050:	ldr	x0, [sp, #8]
   26054:	strb	w1, [x0]
   26058:	ldr	x0, [sp, #8]
   2605c:	ldrb	w1, [x0]
   26060:	ldrb	w0, [sp, #7]
   26064:	orr	w0, w1, w0
   26068:	and	w1, w0, #0xff
   2606c:	ldr	x0, [sp, #8]
   26070:	strb	w1, [x0]
   26074:	nop
   26078:	add	sp, sp, #0x10
   2607c:	ret
   26080:	sub	sp, sp, #0x20
   26084:	str	x0, [sp, #8]
   26088:	str	x1, [sp]
   2608c:	ldr	x0, [sp]
   26090:	ldrb	w0, [x0]
   26094:	and	w0, w0, #0x1
   26098:	strb	w0, [sp, #31]
   2609c:	ldr	x0, [sp, #8]
   260a0:	ldrb	w0, [x0]
   260a4:	and	w0, w0, #0xfffffffe
   260a8:	and	w1, w0, #0xff
   260ac:	ldr	x0, [sp, #8]
   260b0:	strb	w1, [x0]
   260b4:	ldr	x0, [sp, #8]
   260b8:	ldrb	w1, [x0]
   260bc:	ldrb	w0, [sp, #31]
   260c0:	orr	w0, w1, w0
   260c4:	and	w1, w0, #0xff
   260c8:	ldr	x0, [sp, #8]
   260cc:	strb	w1, [x0]
   260d0:	nop
   260d4:	add	sp, sp, #0x20
   260d8:	ret
   260dc:	sub	sp, sp, #0x10
   260e0:	str	x0, [sp, #8]
   260e4:	ldr	x0, [sp, #8]
   260e8:	ldrb	w0, [x0]
   260ec:	and	w0, w0, #0xfffffff1
   260f0:	and	w1, w0, #0xff
   260f4:	ldr	x0, [sp, #8]
   260f8:	strb	w1, [x0]
   260fc:	ldr	x0, [sp, #8]
   26100:	ldrb	w0, [x0]
   26104:	orr	w0, w0, #0x2
   26108:	and	w1, w0, #0xff
   2610c:	ldr	x0, [sp, #8]
   26110:	strb	w1, [x0]
   26114:	nop
   26118:	add	sp, sp, #0x10
   2611c:	ret
   26120:	sub	sp, sp, #0x10
   26124:	str	x0, [sp, #8]
   26128:	ldr	x0, [sp, #8]
   2612c:	ldrb	w0, [x0]
   26130:	and	w0, w0, #0xfffffff1
   26134:	and	w1, w0, #0xff
   26138:	ldr	x0, [sp, #8]
   2613c:	strb	w1, [x0]
   26140:	ldr	x0, [sp, #8]
   26144:	ldrb	w0, [x0]
   26148:	orr	w0, w0, #0x4
   2614c:	and	w1, w0, #0xff
   26150:	ldr	x0, [sp, #8]
   26154:	strb	w1, [x0]
   26158:	nop
   2615c:	add	sp, sp, #0x10
   26160:	ret
   26164:	sub	sp, sp, #0x10
   26168:	str	x0, [sp, #8]
   2616c:	ldr	x0, [sp, #8]
   26170:	ldrb	w0, [x0]
   26174:	and	w0, w0, #0xfffffff1
   26178:	and	w1, w0, #0xff
   2617c:	ldr	x0, [sp, #8]
   26180:	strb	w1, [x0]
   26184:	ldr	x0, [sp, #8]
   26188:	ldrb	w0, [x0]
   2618c:	orr	w0, w0, #0x8
   26190:	and	w1, w0, #0xff
   26194:	ldr	x0, [sp, #8]
   26198:	strb	w1, [x0]
   2619c:	nop
   261a0:	add	sp, sp, #0x10
   261a4:	ret
   261a8:	sub	sp, sp, #0x10
   261ac:	str	x0, [sp, #8]
   261b0:	ldr	x0, [sp, #8]
   261b4:	ldrb	w0, [x0]
   261b8:	orr	w0, w0, #0x1
   261bc:	and	w1, w0, #0xff
   261c0:	ldr	x0, [sp, #8]
   261c4:	strb	w1, [x0]
   261c8:	nop
   261cc:	add	sp, sp, #0x10
   261d0:	ret
   261d4:	sub	sp, sp, #0x10
   261d8:	str	x0, [sp, #8]
   261dc:	ldr	x0, [sp, #8]
   261e0:	ldrb	w0, [x0]
   261e4:	and	w0, w0, #0xfffffffe
   261e8:	and	w1, w0, #0xff
   261ec:	ldr	x0, [sp, #8]
   261f0:	strb	w1, [x0]
   261f4:	nop
   261f8:	add	sp, sp, #0x10
   261fc:	ret
   26200:	sub	sp, sp, #0x10
   26204:	str	x0, [sp, #8]
   26208:	ldr	x0, [sp, #8]
   2620c:	ldrb	w0, [x0]
   26210:	and	w0, w0, #0xffffffef
   26214:	and	w1, w0, #0xff
   26218:	ldr	x0, [sp, #8]
   2621c:	strb	w1, [x0]
   26220:	nop
   26224:	add	sp, sp, #0x10
   26228:	ret
   2622c:	sub	sp, sp, #0x10
   26230:	str	x0, [sp, #8]
   26234:	ldr	x0, [sp, #8]
   26238:	ldrb	w0, [x0]
   2623c:	orr	w0, w0, #0x10
   26240:	and	w1, w0, #0xff
   26244:	ldr	x0, [sp, #8]
   26248:	strb	w1, [x0]
   2624c:	nop
   26250:	add	sp, sp, #0x10
   26254:	ret
   26258:	sub	sp, sp, #0x10
   2625c:	str	x0, [sp, #8]
   26260:	ldr	x0, [sp, #8]
   26264:	ldrb	w0, [x0]
   26268:	and	w0, w0, #0x1f
   2626c:	and	w1, w0, #0xff
   26270:	ldr	x0, [sp, #8]
   26274:	strb	w1, [x0]
   26278:	nop
   2627c:	add	sp, sp, #0x10
   26280:	ret
   26284:	sub	sp, sp, #0x10
   26288:	str	x0, [sp, #8]
   2628c:	ldr	x0, [sp, #8]
   26290:	ldrb	w0, [x0]
   26294:	and	w0, w0, #0x1f
   26298:	and	w1, w0, #0xff
   2629c:	ldr	x0, [sp, #8]
   262a0:	strb	w1, [x0]
   262a4:	ldr	x0, [sp, #8]
   262a8:	ldrb	w0, [x0]
   262ac:	orr	w0, w0, #0x20
   262b0:	and	w1, w0, #0xff
   262b4:	ldr	x0, [sp, #8]
   262b8:	strb	w1, [x0]
   262bc:	nop
   262c0:	add	sp, sp, #0x10
   262c4:	ret
   262c8:	sub	sp, sp, #0x10
   262cc:	str	x0, [sp, #8]
   262d0:	ldr	x0, [sp, #8]
   262d4:	ldrb	w0, [x0]
   262d8:	and	w0, w0, #0x1f
   262dc:	and	w1, w0, #0xff
   262e0:	ldr	x0, [sp, #8]
   262e4:	strb	w1, [x0]
   262e8:	ldr	x0, [sp, #8]
   262ec:	ldrb	w0, [x0]
   262f0:	orr	w0, w0, #0x40
   262f4:	and	w1, w0, #0xff
   262f8:	ldr	x0, [sp, #8]
   262fc:	strb	w1, [x0]
   26300:	nop
   26304:	add	sp, sp, #0x10
   26308:	ret
   2630c:	sub	sp, sp, #0x10
   26310:	str	x0, [sp, #8]
   26314:	ldr	x0, [sp, #8]
   26318:	ldrb	w0, [x0]
   2631c:	and	w0, w0, #0x1f
   26320:	and	w1, w0, #0xff
   26324:	ldr	x0, [sp, #8]
   26328:	strb	w1, [x0]
   2632c:	ldr	x0, [sp, #8]
   26330:	ldrb	w0, [x0]
   26334:	orr	w0, w0, #0xffffff80
   26338:	and	w1, w0, #0xff
   2633c:	ldr	x0, [sp, #8]
   26340:	strb	w1, [x0]
   26344:	nop
   26348:	add	sp, sp, #0x10
   2634c:	ret
   26350:	sub	sp, sp, #0x10
   26354:	str	x0, [sp, #8]
   26358:	ldr	x0, [sp, #8]
   2635c:	ldrb	w0, [x0]
   26360:	and	w0, w0, #0xfffffff0
   26364:	and	w1, w0, #0xff
   26368:	ldr	x0, [sp, #8]
   2636c:	strb	w1, [x0]
   26370:	nop
   26374:	add	sp, sp, #0x10
   26378:	ret
   2637c:	sub	sp, sp, #0x10
   26380:	str	x0, [sp, #8]
   26384:	strb	w1, [sp, #7]
   26388:	ldr	x0, [sp, #8]
   2638c:	ldrb	w0, [x0]
   26390:	and	w0, w0, #0xfffffff0
   26394:	and	w1, w0, #0xff
   26398:	ldr	x0, [sp, #8]
   2639c:	strb	w1, [x0]
   263a0:	ldr	x0, [sp, #8]
   263a4:	ldrb	w1, [x0]
   263a8:	ldrb	w0, [sp, #7]
   263ac:	orr	w0, w1, w0
   263b0:	and	w1, w0, #0xff
   263b4:	ldr	x0, [sp, #8]
   263b8:	strb	w1, [x0]
   263bc:	nop
   263c0:	add	sp, sp, #0x10
   263c4:	ret
   263c8:	sub	sp, sp, #0x20
   263cc:	str	x0, [sp, #8]
   263d0:	str	x1, [sp]
   263d4:	ldr	x0, [sp]
   263d8:	ldrb	w0, [x0]
   263dc:	strb	w0, [sp, #31]
   263e0:	ldr	x0, [sp, #8]
   263e4:	ldrb	w0, [x0]
   263e8:	and	w0, w0, #0xfffffff0
   263ec:	and	w1, w0, #0xff
   263f0:	ldr	x0, [sp, #8]
   263f4:	strb	w1, [x0]
   263f8:	ldr	x0, [sp, #8]
   263fc:	ldrb	w0, [x0]
   26400:	sxtb	w1, w0
   26404:	ldrsb	w0, [sp, #31]
   26408:	and	w0, w0, #0xf
   2640c:	sxtb	w0, w0
   26410:	orr	w0, w1, w0
   26414:	sxtb	w0, w0
   26418:	and	w1, w0, #0xff
   2641c:	ldr	x0, [sp, #8]
   26420:	strb	w1, [x0]
   26424:	nop
   26428:	add	sp, sp, #0x20
   2642c:	ret
   26430:	sub	sp, sp, #0x10
   26434:	str	x0, [sp, #8]
   26438:	str	x1, [sp]
   2643c:	ldr	x0, [sp]
   26440:	ldr	x1, [x0]
   26444:	ldr	x0, [sp, #8]
   26448:	str	x1, [x0]
   2644c:	ldr	x0, [sp]
   26450:	ldr	x1, [x0, #8]
   26454:	ldr	x0, [sp, #8]
   26458:	str	x1, [x0, #8]
   2645c:	ldr	x0, [sp]
   26460:	ldr	x1, [x0, #16]
   26464:	ldr	x0, [sp, #8]
   26468:	str	x1, [x0, #16]
   2646c:	ldr	x0, [sp]
   26470:	ldr	w1, [x0, #36]
   26474:	ldr	x0, [sp, #8]
   26478:	str	w1, [x0, #36]
   2647c:	ldr	x0, [sp, #8]
   26480:	str	wzr, [x0, #24]
   26484:	ldr	x0, [sp, #8]
   26488:	str	wzr, [x0, #28]
   2648c:	ldr	x0, [sp, #8]
   26490:	str	wzr, [x0, #32]
   26494:	ldr	x0, [sp]
   26498:	ldr	w1, [x0, #40]
   2649c:	ldr	x0, [sp, #8]
   264a0:	str	w1, [x0, #40]
   264a4:	ldr	x0, [sp]
   264a8:	ldr	w1, [x0, #44]
   264ac:	ldr	x0, [sp, #8]
   264b0:	str	w1, [x0, #44]
   264b4:	nop
   264b8:	add	sp, sp, #0x10
   264bc:	ret
   264c0:	sub	sp, sp, #0x10
   264c4:	str	x0, [sp, #8]
   264c8:	ldr	x0, [sp, #8]
   264cc:	ldrb	w0, [x0]
   264d0:	eor	w0, w0, #0x1
   264d4:	and	w1, w0, #0xff
   264d8:	ldr	x0, [sp, #8]
   264dc:	strb	w1, [x0]
   264e0:	nop
   264e4:	add	sp, sp, #0x10
   264e8:	ret
   264ec:	stp	x29, x30, [sp, #-64]!
   264f0:	mov	x29, sp
   264f4:	str	x0, [sp, #24]
   264f8:	ldr	x0, [sp, #24]
   264fc:	str	x0, [sp, #56]
   26500:	ldr	x0, [sp, #56]
   26504:	str	x0, [sp, #48]
   26508:	ldr	x0, [sp, #48]
   2650c:	ldrb	w0, [x0]
   26510:	and	w0, w0, #0x20
   26514:	cmp	w0, #0x0
   26518:	b.ne	26594 <PyInit__decimal@@Base+0xe8bc>  // b.any
   2651c:	ldr	x0, [sp, #56]
   26520:	ldr	x1, [x0, #32]
   26524:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26528:	add	x0, x0, #0x6d8
   2652c:	ldr	x0, [x0]
   26530:	cmp	x1, x0
   26534:	b.le	26594 <PyInit__decimal@@Base+0xe8bc>
   26538:	strb	wzr, [sp, #47]
   2653c:	ldr	x0, [sp, #56]
   26540:	ldr	x4, [x0, #40]
   26544:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26548:	add	x0, x0, #0x6d8
   2654c:	ldr	x0, [x0]
   26550:	mov	x1, x0
   26554:	add	x0, sp, #0x2f
   26558:	mov	x3, x0
   2655c:	mov	x2, #0x8                   	// #8
   26560:	mov	x0, x4
   26564:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   26568:	mov	x1, x0
   2656c:	ldr	x0, [sp, #56]
   26570:	str	x1, [x0, #40]
   26574:	ldrb	w0, [sp, #47]
   26578:	cmp	w0, #0x0
   2657c:	b.ne	26594 <PyInit__decimal@@Base+0xe8bc>  // b.any
   26580:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26584:	add	x0, x0, #0x6d8
   26588:	ldr	x1, [x0]
   2658c:	ldr	x0, [sp, #56]
   26590:	str	x1, [x0, #32]
   26594:	nop
   26598:	ldr	x0, [sp, #24]
   2659c:	mov	x1, #0x1                   	// #1
   265a0:	str	x1, [x0, #16]
   265a4:	ldr	x0, [sp, #24]
   265a8:	mov	x1, #0x1                   	// #1
   265ac:	str	x1, [x0, #24]
   265b0:	ldr	x0, [sp, #24]
   265b4:	ldr	x0, [x0, #40]
   265b8:	str	xzr, [x0]
   265bc:	nop
   265c0:	ldp	x29, x30, [sp], #64
   265c4:	ret
   265c8:	stp	x29, x30, [sp, #-96]!
   265cc:	mov	x29, sp
   265d0:	str	x0, [sp, #40]
   265d4:	str	x1, [sp, #32]
   265d8:	str	x2, [sp, #24]
   265dc:	ldr	x0, [sp, #32]
   265e0:	ldr	x2, [x0]
   265e4:	add	x1, sp, #0x30
   265e8:	add	x0, sp, #0x38
   265ec:	mov	x3, #0x13                  	// #19
   265f0:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   265f4:	ldr	x0, [sp, #48]
   265f8:	cmp	x0, #0x0
   265fc:	b.eq	2660c <PyInit__decimal@@Base+0xe934>  // b.none
   26600:	ldr	x0, [sp, #56]
   26604:	add	x0, x0, #0x1
   26608:	b	26610 <PyInit__decimal@@Base+0xe938>
   2660c:	ldr	x0, [sp, #56]
   26610:	str	x0, [sp, #56]
   26614:	ldr	x0, [sp, #56]
   26618:	ldr	x1, [sp, #40]
   2661c:	str	x1, [sp, #88]
   26620:	str	x0, [sp, #80]
   26624:	ldr	x0, [sp, #24]
   26628:	str	x0, [sp, #72]
   2662c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26630:	add	x0, x0, #0x6d8
   26634:	ldr	x0, [x0]
   26638:	ldr	x2, [sp, #80]
   2663c:	ldr	x1, [sp, #80]
   26640:	cmp	x2, x0
   26644:	csel	x0, x1, x0, ge  // ge = tcont
   26648:	str	x0, [sp, #80]
   2664c:	ldr	x0, [sp, #88]
   26650:	ldr	x0, [x0, #32]
   26654:	ldr	x1, [sp, #80]
   26658:	cmp	x1, x0
   2665c:	b.ne	26668 <PyInit__decimal@@Base+0xe990>  // b.any
   26660:	mov	w0, #0x1                   	// #1
   26664:	b	266c4 <PyInit__decimal@@Base+0xe9ec>
   26668:	ldr	x0, [sp, #88]
   2666c:	str	x0, [sp, #64]
   26670:	ldr	x0, [sp, #64]
   26674:	ldrb	w0, [x0]
   26678:	and	w0, w0, #0x20
   2667c:	cmp	w0, #0x0
   26680:	b.eq	266b4 <PyInit__decimal@@Base+0xe9dc>  // b.none
   26684:	ldr	x0, [sp, #88]
   26688:	ldr	x0, [x0, #32]
   2668c:	ldr	x1, [sp, #80]
   26690:	cmp	x1, x0
   26694:	b.le	266ac <PyInit__decimal@@Base+0xe9d4>
   26698:	ldr	x2, [sp, #72]
   2669c:	ldr	x1, [sp, #80]
   266a0:	ldr	x0, [sp, #88]
   266a4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   266a8:	b	266c4 <PyInit__decimal@@Base+0xe9ec>
   266ac:	mov	w0, #0x1                   	// #1
   266b0:	b	266c4 <PyInit__decimal@@Base+0xe9ec>
   266b4:	ldr	x2, [sp, #72]
   266b8:	ldr	x1, [sp, #80]
   266bc:	ldr	x0, [sp, #88]
   266c0:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   266c4:	cmp	w0, #0x0
   266c8:	b.eq	26778 <PyInit__decimal@@Base+0xeaa0>  // b.none
   266cc:	ldr	x1, [sp, #56]
   266d0:	ldr	x0, [sp, #40]
   266d4:	str	x1, [x0, #24]
   266d8:	ldr	x0, [sp, #32]
   266dc:	ldr	x1, [x0]
   266e0:	ldr	x0, [sp, #40]
   266e4:	str	x1, [x0, #16]
   266e8:	ldr	x0, [sp, #56]
   266ec:	sub	x0, x0, #0x1
   266f0:	str	x0, [sp, #56]
   266f4:	ldr	x0, [sp, #48]
   266f8:	cmp	x0, #0x0
   266fc:	b.le	26768 <PyInit__decimal@@Base+0xea90>
   26700:	ldr	x1, [sp, #48]
   26704:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   26708:	add	x0, x0, #0xdb0
   2670c:	ldr	x1, [x0, x1, lsl #3]
   26710:	ldr	x0, [sp, #40]
   26714:	ldr	x2, [x0, #40]
   26718:	ldr	x0, [sp, #56]
   2671c:	sub	x3, x0, #0x1
   26720:	str	x3, [sp, #56]
   26724:	lsl	x0, x0, #3
   26728:	add	x0, x2, x0
   2672c:	sub	x1, x1, #0x1
   26730:	str	x1, [x0]
   26734:	b	26768 <PyInit__decimal@@Base+0xea90>
   26738:	ldr	x0, [sp, #40]
   2673c:	ldr	x1, [x0, #40]
   26740:	ldr	x0, [sp, #56]
   26744:	lsl	x0, x0, #3
   26748:	add	x0, x1, x0
   2674c:	mov	x1, #0xffffffff89e7ffff    	// #-1981284353
   26750:	movk	x1, #0x2304, lsl #32
   26754:	movk	x1, #0x8ac7, lsl #48
   26758:	str	x1, [x0]
   2675c:	ldr	x0, [sp, #56]
   26760:	sub	x0, x0, #0x1
   26764:	str	x0, [sp, #56]
   26768:	ldr	x0, [sp, #56]
   2676c:	cmp	x0, #0x0
   26770:	b.ge	26738 <PyInit__decimal@@Base+0xea60>  // b.tcont
   26774:	b	2677c <PyInit__decimal@@Base+0xeaa4>
   26778:	nop
   2677c:	ldp	x29, x30, [sp], #96
   26780:	ret
   26784:	stp	x29, x30, [sp, #-128]!
   26788:	mov	x29, sp
   2678c:	str	x0, [sp, #24]
   26790:	str	x1, [sp, #16]
   26794:	ldr	x0, [sp, #24]
   26798:	ldr	x0, [x0, #24]
   2679c:	cmp	x0, #0x0
   267a0:	b.le	2692c <PyInit__decimal@@Base+0xec54>
   267a4:	ldr	x0, [sp, #24]
   267a8:	ldr	x1, [x0, #16]
   267ac:	ldr	x0, [sp, #16]
   267b0:	ldr	x0, [x0]
   267b4:	cmp	x1, x0
   267b8:	b.le	2692c <PyInit__decimal@@Base+0xec54>
   267bc:	ldr	x0, [sp, #16]
   267c0:	ldr	x2, [x0]
   267c4:	add	x1, sp, #0x28
   267c8:	add	x0, sp, #0x30
   267cc:	mov	x3, #0x13                  	// #19
   267d0:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   267d4:	ldr	x0, [sp, #40]
   267d8:	cmp	x0, #0x0
   267dc:	b.eq	267ec <PyInit__decimal@@Base+0xeb14>  // b.none
   267e0:	ldr	x0, [sp, #48]
   267e4:	add	x0, x0, #0x1
   267e8:	b	267f0 <PyInit__decimal@@Base+0xeb18>
   267ec:	ldr	x0, [sp, #48]
   267f0:	str	x0, [sp, #48]
   267f4:	ldr	x0, [sp, #40]
   267f8:	cmp	x0, #0x0
   267fc:	b.eq	26854 <PyInit__decimal@@Base+0xeb7c>  // b.none
   26800:	ldr	x0, [sp, #24]
   26804:	ldr	x1, [x0, #40]
   26808:	ldr	x0, [sp, #48]
   2680c:	lsl	x0, x0, #3
   26810:	sub	x0, x0, #0x8
   26814:	add	x0, x1, x0
   26818:	ldr	x0, [x0]
   2681c:	ldr	x2, [sp, #40]
   26820:	adrp	x1, 48000 <PyInit__decimal@@Base+0x30328>
   26824:	add	x1, x1, #0xdb0
   26828:	ldr	x1, [x1, x2, lsl #3]
   2682c:	ldr	x2, [sp, #24]
   26830:	ldr	x3, [x2, #40]
   26834:	ldr	x2, [sp, #48]
   26838:	lsl	x2, x2, #3
   2683c:	sub	x2, x2, #0x8
   26840:	add	x2, x3, x2
   26844:	udiv	x3, x0, x1
   26848:	mul	x1, x3, x1
   2684c:	sub	x0, x0, x1
   26850:	str	x0, [x2]
   26854:	ldr	x0, [sp, #24]
   26858:	ldr	x0, [x0, #40]
   2685c:	ldr	x1, [sp, #48]
   26860:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   26864:	str	x0, [sp, #48]
   26868:	ldr	x0, [sp, #48]
   2686c:	ldr	x1, [sp, #24]
   26870:	str	x1, [sp, #120]
   26874:	str	x0, [sp, #112]
   26878:	add	x0, sp, #0x3c
   2687c:	str	x0, [sp, #104]
   26880:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26884:	add	x0, x0, #0x6d8
   26888:	ldr	x0, [x0]
   2688c:	ldr	x2, [sp, #112]
   26890:	ldr	x1, [sp, #112]
   26894:	cmp	x2, x0
   26898:	csel	x0, x1, x0, ge  // ge = tcont
   2689c:	str	x0, [sp, #112]
   268a0:	ldr	x0, [sp, #120]
   268a4:	ldr	x0, [x0, #32]
   268a8:	ldr	x1, [sp, #112]
   268ac:	cmp	x1, x0
   268b0:	b.eq	2690c <PyInit__decimal@@Base+0xec34>  // b.none
   268b4:	ldr	x0, [sp, #120]
   268b8:	str	x0, [sp, #96]
   268bc:	ldr	x0, [sp, #96]
   268c0:	ldrb	w0, [x0]
   268c4:	and	w0, w0, #0x20
   268c8:	cmp	w0, #0x0
   268cc:	b.eq	268f8 <PyInit__decimal@@Base+0xec20>  // b.none
   268d0:	ldr	x0, [sp, #120]
   268d4:	ldr	x0, [x0, #32]
   268d8:	ldr	x1, [sp, #112]
   268dc:	cmp	x1, x0
   268e0:	b.le	26914 <PyInit__decimal@@Base+0xec3c>
   268e4:	ldr	x2, [sp, #104]
   268e8:	ldr	x1, [sp, #112]
   268ec:	ldr	x0, [sp, #120]
   268f0:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   268f4:	b	26918 <PyInit__decimal@@Base+0xec40>
   268f8:	ldr	x2, [sp, #104]
   268fc:	ldr	x1, [sp, #112]
   26900:	ldr	x0, [sp, #120]
   26904:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   26908:	b	26918 <PyInit__decimal@@Base+0xec40>
   2690c:	nop
   26910:	b	26918 <PyInit__decimal@@Base+0xec40>
   26914:	nop
   26918:	ldr	x1, [sp, #48]
   2691c:	ldr	x0, [sp, #24]
   26920:	str	x1, [x0, #24]
   26924:	ldr	x0, [sp, #24]
   26928:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2692c:	ldr	x0, [sp, #24]
   26930:	str	x0, [sp, #88]
   26934:	ldr	x0, [sp, #88]
   26938:	str	x0, [sp, #80]
   2693c:	ldr	x0, [sp, #80]
   26940:	ldrb	w0, [x0]
   26944:	and	w0, w0, #0xe
   26948:	cmp	w0, #0x0
   2694c:	b.ne	26988 <PyInit__decimal@@Base+0xecb0>  // b.any
   26950:	ldr	x0, [sp, #88]
   26954:	str	x0, [sp, #72]
   26958:	ldr	x0, [sp, #72]
   2695c:	ldr	x1, [x0, #40]
   26960:	ldr	x0, [sp, #72]
   26964:	ldr	x0, [x0, #24]
   26968:	lsl	x0, x0, #3
   2696c:	sub	x0, x0, #0x8
   26970:	add	x0, x1, x0
   26974:	ldr	x0, [x0]
   26978:	cmp	x0, #0x0
   2697c:	b.ne	26988 <PyInit__decimal@@Base+0xecb0>  // b.any
   26980:	mov	w0, #0x1                   	// #1
   26984:	b	2698c <PyInit__decimal@@Base+0xecb4>
   26988:	mov	w0, #0x0                   	// #0
   2698c:	cmp	w0, #0x0
   26990:	b.eq	269c4 <PyInit__decimal@@Base+0xecec>  // b.none
   26994:	ldr	x0, [sp, #24]
   26998:	str	x0, [sp, #64]
   2699c:	ldr	x0, [sp, #64]
   269a0:	ldrb	w0, [x0]
   269a4:	and	w0, w0, #0x1
   269a8:	and	w1, w0, #0xff
   269ac:	ldr	x0, [sp, #24]
   269b0:	ldr	x0, [x0, #8]
   269b4:	mov	x3, x0
   269b8:	mov	x2, #0x0                   	// #0
   269bc:	ldr	x0, [sp, #24]
   269c0:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   269c4:	nop
   269c8:	ldp	x29, x30, [sp], #128
   269cc:	ret
   269d0:	stp	x29, x30, [sp, #-144]!
   269d4:	mov	x29, sp
   269d8:	str	x0, [sp, #24]
   269dc:	str	x1, [sp, #16]
   269e0:	ldr	x0, [sp, #16]
   269e4:	ldr	x1, [x0]
   269e8:	ldr	x0, [sp, #16]
   269ec:	ldr	w0, [x0, #40]
   269f0:	sxtw	x0, w0
   269f4:	sub	x0, x1, x0
   269f8:	str	x0, [sp, #136]
   269fc:	ldr	x0, [sp, #24]
   26a00:	ldr	x0, [x0, #24]
   26a04:	cmp	x0, #0x0
   26a08:	b.le	26cb0 <PyInit__decimal@@Base+0xefd8>
   26a0c:	ldr	x0, [sp, #24]
   26a10:	ldr	x0, [x0, #16]
   26a14:	ldr	x1, [sp, #136]
   26a18:	cmp	x1, x0
   26a1c:	b.ge	26cb0 <PyInit__decimal@@Base+0xefd8>  // b.tcont
   26a20:	ldr	x0, [sp, #136]
   26a24:	cmp	x0, #0x0
   26a28:	b.ne	26ae8 <PyInit__decimal@@Base+0xee10>  // b.any
   26a2c:	ldr	x0, [sp, #24]
   26a30:	str	x0, [sp, #128]
   26a34:	ldr	x0, [sp, #128]
   26a38:	str	x0, [sp, #120]
   26a3c:	ldr	x0, [sp, #120]
   26a40:	ldrb	w0, [x0]
   26a44:	and	w0, w0, #0x20
   26a48:	cmp	w0, #0x0
   26a4c:	b.ne	26ac8 <PyInit__decimal@@Base+0xedf0>  // b.any
   26a50:	ldr	x0, [sp, #128]
   26a54:	ldr	x1, [x0, #32]
   26a58:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26a5c:	add	x0, x0, #0x6d8
   26a60:	ldr	x0, [x0]
   26a64:	cmp	x1, x0
   26a68:	b.le	26ac8 <PyInit__decimal@@Base+0xedf0>
   26a6c:	strb	wzr, [sp, #47]
   26a70:	ldr	x0, [sp, #128]
   26a74:	ldr	x4, [x0, #40]
   26a78:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26a7c:	add	x0, x0, #0x6d8
   26a80:	ldr	x0, [x0]
   26a84:	mov	x1, x0
   26a88:	add	x0, sp, #0x2f
   26a8c:	mov	x3, x0
   26a90:	mov	x2, #0x8                   	// #8
   26a94:	mov	x0, x4
   26a98:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   26a9c:	mov	x1, x0
   26aa0:	ldr	x0, [sp, #128]
   26aa4:	str	x1, [x0, #40]
   26aa8:	ldrb	w0, [sp, #47]
   26aac:	cmp	w0, #0x0
   26ab0:	b.ne	26ac8 <PyInit__decimal@@Base+0xedf0>  // b.any
   26ab4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26ab8:	add	x0, x0, #0x6d8
   26abc:	ldr	x1, [x0]
   26ac0:	ldr	x0, [sp, #128]
   26ac4:	str	x1, [x0, #32]
   26ac8:	nop
   26acc:	ldr	x0, [sp, #24]
   26ad0:	str	xzr, [x0, #16]
   26ad4:	ldr	x0, [sp, #24]
   26ad8:	ldr	x1, [x0, #16]
   26adc:	ldr	x0, [sp, #24]
   26ae0:	str	x1, [x0, #24]
   26ae4:	b	26cb0 <PyInit__decimal@@Base+0xefd8>
   26ae8:	add	x1, sp, #0x30
   26aec:	add	x0, sp, #0x38
   26af0:	mov	x3, #0x13                  	// #19
   26af4:	ldr	x2, [sp, #136]
   26af8:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   26afc:	ldr	x0, [sp, #48]
   26b00:	cmp	x0, #0x0
   26b04:	b.eq	26b14 <PyInit__decimal@@Base+0xee3c>  // b.none
   26b08:	ldr	x0, [sp, #56]
   26b0c:	add	x0, x0, #0x1
   26b10:	b	26b18 <PyInit__decimal@@Base+0xee40>
   26b14:	ldr	x0, [sp, #56]
   26b18:	str	x0, [sp, #56]
   26b1c:	ldr	x0, [sp, #48]
   26b20:	cmp	x0, #0x0
   26b24:	b.eq	26b7c <PyInit__decimal@@Base+0xeea4>  // b.none
   26b28:	ldr	x0, [sp, #24]
   26b2c:	ldr	x1, [x0, #40]
   26b30:	ldr	x0, [sp, #56]
   26b34:	lsl	x0, x0, #3
   26b38:	sub	x0, x0, #0x8
   26b3c:	add	x0, x1, x0
   26b40:	ldr	x0, [x0]
   26b44:	ldr	x2, [sp, #48]
   26b48:	adrp	x1, 48000 <PyInit__decimal@@Base+0x30328>
   26b4c:	add	x1, x1, #0xdb0
   26b50:	ldr	x1, [x1, x2, lsl #3]
   26b54:	ldr	x2, [sp, #24]
   26b58:	ldr	x3, [x2, #40]
   26b5c:	ldr	x2, [sp, #56]
   26b60:	lsl	x2, x2, #3
   26b64:	sub	x2, x2, #0x8
   26b68:	add	x2, x3, x2
   26b6c:	udiv	x3, x0, x1
   26b70:	mul	x1, x3, x1
   26b74:	sub	x0, x0, x1
   26b78:	str	x0, [x2]
   26b7c:	ldr	x0, [sp, #24]
   26b80:	ldr	x0, [x0, #40]
   26b84:	ldr	x1, [sp, #56]
   26b88:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   26b8c:	str	x0, [sp, #56]
   26b90:	ldr	x0, [sp, #56]
   26b94:	ldr	x1, [sp, #24]
   26b98:	str	x1, [sp, #96]
   26b9c:	str	x0, [sp, #88]
   26ba0:	add	x0, sp, #0x44
   26ba4:	str	x0, [sp, #80]
   26ba8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   26bac:	add	x0, x0, #0x6d8
   26bb0:	ldr	x0, [x0]
   26bb4:	ldr	x2, [sp, #88]
   26bb8:	ldr	x1, [sp, #88]
   26bbc:	cmp	x2, x0
   26bc0:	csel	x0, x1, x0, ge  // ge = tcont
   26bc4:	str	x0, [sp, #88]
   26bc8:	ldr	x0, [sp, #96]
   26bcc:	ldr	x0, [x0, #32]
   26bd0:	ldr	x1, [sp, #88]
   26bd4:	cmp	x1, x0
   26bd8:	b.eq	26c34 <PyInit__decimal@@Base+0xef5c>  // b.none
   26bdc:	ldr	x0, [sp, #96]
   26be0:	str	x0, [sp, #72]
   26be4:	ldr	x0, [sp, #72]
   26be8:	ldrb	w0, [x0]
   26bec:	and	w0, w0, #0x20
   26bf0:	cmp	w0, #0x0
   26bf4:	b.eq	26c20 <PyInit__decimal@@Base+0xef48>  // b.none
   26bf8:	ldr	x0, [sp, #96]
   26bfc:	ldr	x0, [x0, #32]
   26c00:	ldr	x1, [sp, #88]
   26c04:	cmp	x1, x0
   26c08:	b.le	26c3c <PyInit__decimal@@Base+0xef64>
   26c0c:	ldr	x2, [sp, #80]
   26c10:	ldr	x1, [sp, #88]
   26c14:	ldr	x0, [sp, #96]
   26c18:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   26c1c:	b	26c40 <PyInit__decimal@@Base+0xef68>
   26c20:	ldr	x2, [sp, #80]
   26c24:	ldr	x1, [sp, #88]
   26c28:	ldr	x0, [sp, #96]
   26c2c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   26c30:	b	26c40 <PyInit__decimal@@Base+0xef68>
   26c34:	nop
   26c38:	b	26c40 <PyInit__decimal@@Base+0xef68>
   26c3c:	nop
   26c40:	ldr	x1, [sp, #56]
   26c44:	ldr	x0, [sp, #24]
   26c48:	str	x1, [x0, #24]
   26c4c:	ldr	x0, [sp, #24]
   26c50:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   26c54:	ldr	x0, [sp, #24]
   26c58:	str	x0, [sp, #112]
   26c5c:	ldr	x0, [sp, #112]
   26c60:	str	x0, [sp, #104]
   26c64:	ldr	x0, [sp, #104]
   26c68:	ldr	x1, [x0, #40]
   26c6c:	ldr	x0, [sp, #104]
   26c70:	ldr	x0, [x0, #24]
   26c74:	lsl	x0, x0, #3
   26c78:	sub	x0, x0, #0x8
   26c7c:	add	x0, x1, x0
   26c80:	ldr	x0, [x0]
   26c84:	cmp	x0, #0x0
   26c88:	cset	w0, eq  // eq = none
   26c8c:	and	w0, w0, #0xff
   26c90:	cmp	w0, #0x0
   26c94:	b.eq	26cb0 <PyInit__decimal@@Base+0xefd8>  // b.none
   26c98:	ldr	x0, [sp, #24]
   26c9c:	str	xzr, [x0, #16]
   26ca0:	ldr	x0, [sp, #24]
   26ca4:	ldr	x1, [x0, #16]
   26ca8:	ldr	x0, [sp, #24]
   26cac:	str	x1, [x0, #24]
   26cb0:	nop
   26cb4:	ldp	x29, x30, [sp], #144
   26cb8:	ret
   26cbc:	stp	x29, x30, [sp, #-64]!
   26cc0:	mov	x29, sp
   26cc4:	str	x0, [sp, #40]
   26cc8:	str	x1, [sp, #32]
   26ccc:	str	x2, [sp, #24]
   26cd0:	str	w3, [sp, #20]
   26cd4:	ldr	x0, [sp, #24]
   26cd8:	ldr	x0, [x0, #16]
   26cdc:	mov	x2, x0
   26ce0:	add	x1, sp, #0x38
   26ce4:	add	x0, sp, #0x30
   26ce8:	mov	x3, #0x13                  	// #19
   26cec:	bl	24270 <PyInit__decimal@@Base+0xc598>
   26cf0:	ldr	x0, [sp, #56]
   26cf4:	cmp	x0, #0x0
   26cf8:	b.eq	26d04 <PyInit__decimal@@Base+0xf02c>  // b.none
   26cfc:	ldr	x0, [sp, #56]
   26d00:	b	26d08 <PyInit__decimal@@Base+0xf030>
   26d04:	mov	x0, #0x13                  	// #19
   26d08:	str	x0, [sp, #56]
   26d0c:	ldr	x0, [sp, #40]
   26d10:	str	xzr, [x0]
   26d14:	ldr	x0, [sp, #24]
   26d18:	ldr	x1, [x0, #40]
   26d1c:	ldr	x0, [sp, #24]
   26d20:	ldr	x0, [x0, #24]
   26d24:	lsl	x0, x0, #3
   26d28:	sub	x0, x0, #0x8
   26d2c:	add	x0, x1, x0
   26d30:	ldr	x1, [x0]
   26d34:	ldr	x0, [sp, #32]
   26d38:	str	x1, [x0]
   26d3c:	ldr	w1, [sp, #20]
   26d40:	ldr	x0, [sp, #56]
   26d44:	cmp	x1, x0
   26d48:	b.hi	26d7c <PyInit__decimal@@Base+0xf0a4>  // b.pmore
   26d4c:	ldr	x0, [sp, #32]
   26d50:	ldr	x1, [x0]
   26d54:	ldr	x2, [sp, #56]
   26d58:	ldr	w0, [sp, #20]
   26d5c:	sub	x2, x2, x0
   26d60:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   26d64:	add	x0, x0, #0xdb0
   26d68:	ldr	x0, [x0, x2, lsl #3]
   26d6c:	udiv	x1, x1, x0
   26d70:	ldr	x0, [sp, #32]
   26d74:	str	x1, [x0]
   26d78:	b	26e40 <PyInit__decimal@@Base+0xf168>
   26d7c:	ldr	x0, [sp, #24]
   26d80:	ldr	x0, [x0, #24]
   26d84:	cmp	x0, #0x1
   26d88:	b.le	26e40 <PyInit__decimal@@Base+0xf168>
   26d8c:	ldr	x0, [sp, #32]
   26d90:	ldr	x2, [x0]
   26d94:	ldr	w1, [sp, #20]
   26d98:	ldr	x0, [sp, #56]
   26d9c:	sub	x1, x1, x0
   26da0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   26da4:	add	x0, x0, #0xdb0
   26da8:	ldr	x0, [x0, x1, lsl #3]
   26dac:	mov	x3, x0
   26db0:	ldr	x1, [sp, #32]
   26db4:	ldr	x0, [sp, #40]
   26db8:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   26dbc:	ldr	x0, [sp, #24]
   26dc0:	ldr	x1, [x0, #40]
   26dc4:	ldr	x0, [sp, #24]
   26dc8:	ldr	x0, [x0, #24]
   26dcc:	lsl	x0, x0, #3
   26dd0:	sub	x0, x0, #0x10
   26dd4:	add	x0, x1, x0
   26dd8:	ldr	x1, [x0]
   26ddc:	ldr	x2, [sp, #56]
   26de0:	ldr	w0, [sp, #20]
   26de4:	sub	x0, x2, x0
   26de8:	add	x2, x0, #0x13
   26dec:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   26df0:	add	x0, x0, #0xdb0
   26df4:	ldr	x0, [x0, x2, lsl #3]
   26df8:	udiv	x0, x1, x0
   26dfc:	str	x0, [sp, #48]
   26e00:	ldr	x0, [sp, #32]
   26e04:	ldr	x1, [x0]
   26e08:	ldr	x0, [sp, #48]
   26e0c:	add	x1, x1, x0
   26e10:	ldr	x0, [sp, #32]
   26e14:	str	x1, [x0]
   26e18:	ldr	x0, [sp, #32]
   26e1c:	ldr	x1, [x0]
   26e20:	ldr	x0, [sp, #48]
   26e24:	cmp	x1, x0
   26e28:	b.cs	26e40 <PyInit__decimal@@Base+0xf168>  // b.hs, b.nlast
   26e2c:	ldr	x0, [sp, #40]
   26e30:	ldr	x0, [x0]
   26e34:	add	x1, x0, #0x1
   26e38:	ldr	x0, [sp, #40]
   26e3c:	str	x1, [x0]
   26e40:	nop
   26e44:	ldp	x29, x30, [sp], #64
   26e48:	ret
   26e4c:	sub	sp, sp, #0x10
   26e50:	str	x0, [sp, #8]
   26e54:	str	x1, [sp]
   26e58:	b	26e68 <PyInit__decimal@@Base+0xf190>
   26e5c:	ldr	x0, [sp]
   26e60:	sub	x0, x0, #0x1
   26e64:	str	x0, [sp]
   26e68:	ldr	x0, [sp]
   26e6c:	cmp	x0, #0x1
   26e70:	b.le	26e94 <PyInit__decimal@@Base+0xf1bc>
   26e74:	ldr	x0, [sp]
   26e78:	lsl	x0, x0, #3
   26e7c:	sub	x0, x0, #0x8
   26e80:	ldr	x1, [sp, #8]
   26e84:	add	x0, x1, x0
   26e88:	ldr	x0, [x0]
   26e8c:	cmp	x0, #0x0
   26e90:	b.eq	26e5c <PyInit__decimal@@Base+0xf184>  // b.none
   26e94:	ldr	x0, [sp]
   26e98:	add	sp, sp, #0x10
   26e9c:	ret
   26ea0:	sub	sp, sp, #0x30
   26ea4:	str	x0, [sp, #8]
   26ea8:	str	xzr, [sp, #24]
   26eac:	str	xzr, [sp, #32]
   26eb0:	b	26f74 <PyInit__decimal@@Base+0xf29c>
   26eb4:	ldr	x0, [sp, #8]
   26eb8:	ldr	x1, [x0, #40]
   26ebc:	ldr	x0, [sp, #32]
   26ec0:	lsl	x0, x0, #3
   26ec4:	add	x0, x1, x0
   26ec8:	ldr	x0, [x0]
   26ecc:	cmp	x0, #0x0
   26ed0:	b.eq	26f68 <PyInit__decimal@@Base+0xf290>  // b.none
   26ed4:	ldr	x0, [sp, #8]
   26ed8:	ldr	x1, [x0, #40]
   26edc:	ldr	x0, [sp, #32]
   26ee0:	lsl	x0, x0, #3
   26ee4:	add	x0, x1, x0
   26ee8:	ldr	x0, [x0]
   26eec:	str	x0, [sp, #40]
   26ef0:	ldr	x1, [sp, #32]
   26ef4:	mov	x0, x1
   26ef8:	lsl	x0, x0, #2
   26efc:	add	x0, x0, x1
   26f00:	lsl	x0, x0, #2
   26f04:	sub	x0, x0, x1
   26f08:	str	x0, [sp, #24]
   26f0c:	b	26f34 <PyInit__decimal@@Base+0xf25c>
   26f10:	ldr	x1, [sp, #40]
   26f14:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   26f18:	movk	x0, #0xcccd
   26f1c:	umulh	x0, x1, x0
   26f20:	lsr	x0, x0, #3
   26f24:	str	x0, [sp, #40]
   26f28:	ldr	x0, [sp, #24]
   26f2c:	add	x0, x0, #0x1
   26f30:	str	x0, [sp, #24]
   26f34:	ldr	x2, [sp, #40]
   26f38:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   26f3c:	movk	x0, #0xcccd
   26f40:	umulh	x0, x2, x0
   26f44:	lsr	x1, x0, #3
   26f48:	mov	x0, x1
   26f4c:	lsl	x0, x0, #2
   26f50:	add	x0, x0, x1
   26f54:	lsl	x0, x0, #1
   26f58:	sub	x1, x2, x0
   26f5c:	cmp	x1, #0x0
   26f60:	b.eq	26f10 <PyInit__decimal@@Base+0xf238>  // b.none
   26f64:	b	26f88 <PyInit__decimal@@Base+0xf2b0>
   26f68:	ldr	x0, [sp, #32]
   26f6c:	add	x0, x0, #0x1
   26f70:	str	x0, [sp, #32]
   26f74:	ldr	x0, [sp, #8]
   26f78:	ldr	x0, [x0, #24]
   26f7c:	ldr	x1, [sp, #32]
   26f80:	cmp	x1, x0
   26f84:	b.lt	26eb4 <PyInit__decimal@@Base+0xf1dc>  // b.tstop
   26f88:	ldr	x0, [sp, #24]
   26f8c:	add	sp, sp, #0x30
   26f90:	ret
   26f94:	stp	x29, x30, [sp, #-64]!
   26f98:	mov	x29, sp
   26f9c:	str	x0, [sp, #24]
   26fa0:	ldr	x0, [sp, #24]
   26fa4:	str	x0, [sp, #48]
   26fa8:	ldr	x0, [sp, #48]
   26fac:	str	x0, [sp, #40]
   26fb0:	ldr	x0, [sp, #40]
   26fb4:	ldr	x1, [x0, #40]
   26fb8:	ldr	x0, [sp, #40]
   26fbc:	ldr	x0, [x0, #24]
   26fc0:	lsl	x0, x0, #3
   26fc4:	sub	x0, x0, #0x8
   26fc8:	add	x0, x1, x0
   26fcc:	ldr	x0, [x0]
   26fd0:	cmp	x0, #0x0
   26fd4:	cset	w0, eq  // eq = none
   26fd8:	and	w0, w0, #0xff
   26fdc:	cmp	w0, #0x0
   26fe0:	b.eq	26fec <PyInit__decimal@@Base+0xf314>  // b.none
   26fe4:	mov	w0, #0x1                   	// #1
   26fe8:	b	27014 <PyInit__decimal@@Base+0xf33c>
   26fec:	ldr	x0, [sp, #24]
   26ff0:	bl	26ea0 <PyInit__decimal@@Base+0xf1c8>
   26ff4:	str	x0, [sp, #56]
   26ff8:	ldr	x0, [sp, #24]
   26ffc:	ldr	x1, [x0, #8]
   27000:	ldr	x0, [sp, #56]
   27004:	add	x0, x1, x0
   27008:	mvn	x0, x0
   2700c:	lsr	x0, x0, #63
   27010:	and	w0, w0, #0xff
   27014:	ldp	x29, x30, [sp], #64
   27018:	ret
   2701c:	stp	x29, x30, [sp, #-48]!
   27020:	mov	x29, sp
   27024:	str	x0, [sp, #24]
   27028:	ldr	x0, [sp, #24]
   2702c:	str	x0, [sp, #40]
   27030:	ldr	x0, [sp, #40]
   27034:	ldrb	w0, [x0]
   27038:	and	w0, w0, #0xe
   2703c:	cmp	w0, #0x0
   27040:	b.eq	2704c <PyInit__decimal@@Base+0xf374>  // b.none
   27044:	mov	w0, #0x0                   	// #0
   27048:	b	27054 <PyInit__decimal@@Base+0xf37c>
   2704c:	ldr	x0, [sp, #24]
   27050:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   27054:	ldp	x29, x30, [sp], #48
   27058:	ret
   2705c:	sub	sp, sp, #0x20
   27060:	str	x0, [sp, #8]
   27064:	ldr	x0, [sp, #8]
   27068:	str	x0, [sp, #16]
   2706c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27070:	add	x0, x0, #0xdb0
   27074:	ldr	x0, [x0, #72]
   27078:	ldr	x1, [sp, #16]
   2707c:	cmp	x1, x0
   27080:	b.cs	2718c <PyInit__decimal@@Base+0xf4b4>  // b.hs, b.nlast
   27084:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27088:	add	x0, x0, #0xdb0
   2708c:	ldr	x0, [x0, #32]
   27090:	ldr	x1, [sp, #16]
   27094:	cmp	x1, x0
   27098:	b.cs	27104 <PyInit__decimal@@Base+0xf42c>  // b.hs, b.nlast
   2709c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   270a0:	add	x0, x0, #0xdb0
   270a4:	ldr	x0, [x0, #16]
   270a8:	ldr	x1, [sp, #16]
   270ac:	cmp	x1, x0
   270b0:	b.cs	270dc <PyInit__decimal@@Base+0xf404>  // b.hs, b.nlast
   270b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   270b8:	add	x0, x0, #0xdb0
   270bc:	ldr	x0, [x0, #8]
   270c0:	ldr	x1, [sp, #16]
   270c4:	cmp	x1, x0
   270c8:	b.cs	270d4 <PyInit__decimal@@Base+0xf3fc>  // b.hs, b.nlast
   270cc:	mov	w0, #0x1                   	// #1
   270d0:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   270d4:	mov	w0, #0x2                   	// #2
   270d8:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   270dc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   270e0:	add	x0, x0, #0xdb0
   270e4:	ldr	x0, [x0, #24]
   270e8:	ldr	x1, [sp, #16]
   270ec:	cmp	x1, x0
   270f0:	b.cs	270fc <PyInit__decimal@@Base+0xf424>  // b.hs, b.nlast
   270f4:	mov	w0, #0x3                   	// #3
   270f8:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   270fc:	mov	w0, #0x4                   	// #4
   27100:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   27104:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27108:	add	x0, x0, #0xdb0
   2710c:	ldr	x0, [x0, #48]
   27110:	ldr	x1, [sp, #16]
   27114:	cmp	x1, x0
   27118:	b.cs	27144 <PyInit__decimal@@Base+0xf46c>  // b.hs, b.nlast
   2711c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27120:	add	x0, x0, #0xdb0
   27124:	ldr	x0, [x0, #40]
   27128:	ldr	x1, [sp, #16]
   2712c:	cmp	x1, x0
   27130:	b.cs	2713c <PyInit__decimal@@Base+0xf464>  // b.hs, b.nlast
   27134:	mov	w0, #0x5                   	// #5
   27138:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2713c:	mov	w0, #0x6                   	// #6
   27140:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   27144:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27148:	add	x0, x0, #0xdb0
   2714c:	ldr	x0, [x0, #64]
   27150:	ldr	x1, [sp, #16]
   27154:	cmp	x1, x0
   27158:	b.cs	27184 <PyInit__decimal@@Base+0xf4ac>  // b.hs, b.nlast
   2715c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27160:	add	x0, x0, #0xdb0
   27164:	ldr	x0, [x0, #56]
   27168:	ldr	x1, [sp, #16]
   2716c:	cmp	x1, x0
   27170:	b.cs	2717c <PyInit__decimal@@Base+0xf4a4>  // b.hs, b.nlast
   27174:	mov	w0, #0x7                   	// #7
   27178:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2717c:	mov	w0, #0x8                   	// #8
   27180:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   27184:	mov	w0, #0x9                   	// #9
   27188:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2718c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27190:	add	x0, x0, #0xdb0
   27194:	ldr	x0, [x0, #112]
   27198:	ldr	x1, [sp, #16]
   2719c:	cmp	x1, x0
   271a0:	b.cs	2722c <PyInit__decimal@@Base+0xf554>  // b.hs, b.nlast
   271a4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   271a8:	add	x0, x0, #0xdb0
   271ac:	ldr	x0, [x0, #88]
   271b0:	ldr	x1, [sp, #16]
   271b4:	cmp	x1, x0
   271b8:	b.cs	271e4 <PyInit__decimal@@Base+0xf50c>  // b.hs, b.nlast
   271bc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   271c0:	add	x0, x0, #0xdb0
   271c4:	ldr	x0, [x0, #80]
   271c8:	ldr	x1, [sp, #16]
   271cc:	cmp	x1, x0
   271d0:	b.cs	271dc <PyInit__decimal@@Base+0xf504>  // b.hs, b.nlast
   271d4:	mov	w0, #0xa                   	// #10
   271d8:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   271dc:	mov	w0, #0xb                   	// #11
   271e0:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   271e4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   271e8:	add	x0, x0, #0xdb0
   271ec:	ldr	x0, [x0, #104]
   271f0:	ldr	x1, [sp, #16]
   271f4:	cmp	x1, x0
   271f8:	b.cs	27224 <PyInit__decimal@@Base+0xf54c>  // b.hs, b.nlast
   271fc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27200:	add	x0, x0, #0xdb0
   27204:	ldr	x0, [x0, #96]
   27208:	ldr	x1, [sp, #16]
   2720c:	cmp	x1, x0
   27210:	b.cs	2721c <PyInit__decimal@@Base+0xf544>  // b.hs, b.nlast
   27214:	mov	w0, #0xc                   	// #12
   27218:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2721c:	mov	w0, #0xd                   	// #13
   27220:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   27224:	mov	w0, #0xe                   	// #14
   27228:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2722c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27230:	add	x0, x0, #0xdb0
   27234:	ldr	x0, [x0, #144]
   27238:	ldr	x1, [sp, #16]
   2723c:	cmp	x1, x0
   27240:	b.cs	272ac <PyInit__decimal@@Base+0xf5d4>  // b.hs, b.nlast
   27244:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27248:	add	x0, x0, #0xdb0
   2724c:	ldr	x0, [x0, #128]
   27250:	ldr	x1, [sp, #16]
   27254:	cmp	x1, x0
   27258:	b.cs	27284 <PyInit__decimal@@Base+0xf5ac>  // b.hs, b.nlast
   2725c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27260:	add	x0, x0, #0xdb0
   27264:	ldr	x0, [x0, #120]
   27268:	ldr	x1, [sp, #16]
   2726c:	cmp	x1, x0
   27270:	b.cs	2727c <PyInit__decimal@@Base+0xf5a4>  // b.hs, b.nlast
   27274:	mov	w0, #0xf                   	// #15
   27278:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   2727c:	mov	w0, #0x10                  	// #16
   27280:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   27284:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27288:	add	x0, x0, #0xdb0
   2728c:	ldr	x0, [x0, #136]
   27290:	ldr	x1, [sp, #16]
   27294:	cmp	x1, x0
   27298:	b.cs	272a4 <PyInit__decimal@@Base+0xf5cc>  // b.hs, b.nlast
   2729c:	mov	w0, #0x11                  	// #17
   272a0:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   272a4:	mov	w0, #0x12                  	// #18
   272a8:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   272ac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   272b0:	add	x0, x0, #0xdb0
   272b4:	ldr	x0, [x0, #152]
   272b8:	ldr	x1, [sp, #16]
   272bc:	cmp	x1, x0
   272c0:	b.cs	272cc <PyInit__decimal@@Base+0xf5f4>  // b.hs, b.nlast
   272c4:	mov	w0, #0x13                  	// #19
   272c8:	b	272d0 <PyInit__decimal@@Base+0xf5f8>
   272cc:	mov	w0, #0x14                  	// #20
   272d0:	str	w0, [sp, #28]
   272d4:	ldr	w0, [sp, #28]
   272d8:	sub	w1, w0, #0x1
   272dc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   272e0:	add	x0, x0, #0xdb0
   272e4:	sxtw	x1, w1
   272e8:	ldr	x0, [x0, x1, lsl #3]
   272ec:	ldr	x1, [sp, #8]
   272f0:	cmp	x1, x0
   272f4:	b.ne	27300 <PyInit__decimal@@Base+0xf628>  // b.any
   272f8:	mov	w0, #0x1                   	// #1
   272fc:	b	27304 <PyInit__decimal@@Base+0xf62c>
   27300:	mov	w0, #0x0                   	// #0
   27304:	add	sp, sp, #0x20
   27308:	ret
   2730c:	stp	x29, x30, [sp, #-48]!
   27310:	mov	x29, sp
   27314:	str	x0, [sp, #24]
   27318:	ldr	x0, [sp, #24]
   2731c:	str	x0, [sp, #40]
   27320:	ldr	x0, [sp, #40]
   27324:	ldr	x1, [x0, #40]
   27328:	ldr	x0, [sp, #40]
   2732c:	ldr	x0, [x0, #24]
   27330:	lsl	x0, x0, #3
   27334:	sub	x0, x0, #0x8
   27338:	add	x0, x1, x0
   2733c:	ldr	x0, [x0]
   27340:	bl	2705c <PyInit__decimal@@Base+0xf384>
   27344:	cmp	w0, #0x0
   27348:	b.eq	2737c <PyInit__decimal@@Base+0xf6a4>  // b.none
   2734c:	ldr	x0, [sp, #24]
   27350:	ldr	x2, [x0, #40]
   27354:	ldr	x0, [sp, #24]
   27358:	ldr	x0, [x0, #24]
   2735c:	sub	x0, x0, #0x1
   27360:	mov	x1, x0
   27364:	mov	x0, x2
   27368:	bl	2486c <PyInit__decimal@@Base+0xcb94>
   2736c:	cmp	w0, #0x0
   27370:	b.eq	2737c <PyInit__decimal@@Base+0xf6a4>  // b.none
   27374:	mov	w0, #0x1                   	// #1
   27378:	b	27380 <PyInit__decimal@@Base+0xf6a8>
   2737c:	mov	w0, #0x0                   	// #0
   27380:	ldp	x29, x30, [sp], #48
   27384:	ret
   27388:	sub	sp, sp, #0x20
   2738c:	str	x0, [sp, #8]
   27390:	ldr	x0, [sp, #8]
   27394:	str	x0, [sp, #16]
   27398:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2739c:	add	x0, x0, #0xdb0
   273a0:	ldr	x0, [x0, #72]
   273a4:	ldr	x1, [sp, #16]
   273a8:	cmp	x1, x0
   273ac:	b.cs	274b8 <PyInit__decimal@@Base+0xf7e0>  // b.hs, b.nlast
   273b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   273b4:	add	x0, x0, #0xdb0
   273b8:	ldr	x0, [x0, #32]
   273bc:	ldr	x1, [sp, #16]
   273c0:	cmp	x1, x0
   273c4:	b.cs	27430 <PyInit__decimal@@Base+0xf758>  // b.hs, b.nlast
   273c8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   273cc:	add	x0, x0, #0xdb0
   273d0:	ldr	x0, [x0, #16]
   273d4:	ldr	x1, [sp, #16]
   273d8:	cmp	x1, x0
   273dc:	b.cs	27408 <PyInit__decimal@@Base+0xf730>  // b.hs, b.nlast
   273e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   273e4:	add	x0, x0, #0xdb0
   273e8:	ldr	x0, [x0, #8]
   273ec:	ldr	x1, [sp, #16]
   273f0:	cmp	x1, x0
   273f4:	b.cs	27400 <PyInit__decimal@@Base+0xf728>  // b.hs, b.nlast
   273f8:	mov	w0, #0x1                   	// #1
   273fc:	b	275fc <PyInit__decimal@@Base+0xf924>
   27400:	mov	w0, #0x2                   	// #2
   27404:	b	275fc <PyInit__decimal@@Base+0xf924>
   27408:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2740c:	add	x0, x0, #0xdb0
   27410:	ldr	x0, [x0, #24]
   27414:	ldr	x1, [sp, #16]
   27418:	cmp	x1, x0
   2741c:	b.cs	27428 <PyInit__decimal@@Base+0xf750>  // b.hs, b.nlast
   27420:	mov	w0, #0x3                   	// #3
   27424:	b	275fc <PyInit__decimal@@Base+0xf924>
   27428:	mov	w0, #0x4                   	// #4
   2742c:	b	275fc <PyInit__decimal@@Base+0xf924>
   27430:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27434:	add	x0, x0, #0xdb0
   27438:	ldr	x0, [x0, #48]
   2743c:	ldr	x1, [sp, #16]
   27440:	cmp	x1, x0
   27444:	b.cs	27470 <PyInit__decimal@@Base+0xf798>  // b.hs, b.nlast
   27448:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2744c:	add	x0, x0, #0xdb0
   27450:	ldr	x0, [x0, #40]
   27454:	ldr	x1, [sp, #16]
   27458:	cmp	x1, x0
   2745c:	b.cs	27468 <PyInit__decimal@@Base+0xf790>  // b.hs, b.nlast
   27460:	mov	w0, #0x5                   	// #5
   27464:	b	275fc <PyInit__decimal@@Base+0xf924>
   27468:	mov	w0, #0x6                   	// #6
   2746c:	b	275fc <PyInit__decimal@@Base+0xf924>
   27470:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27474:	add	x0, x0, #0xdb0
   27478:	ldr	x0, [x0, #64]
   2747c:	ldr	x1, [sp, #16]
   27480:	cmp	x1, x0
   27484:	b.cs	274b0 <PyInit__decimal@@Base+0xf7d8>  // b.hs, b.nlast
   27488:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2748c:	add	x0, x0, #0xdb0
   27490:	ldr	x0, [x0, #56]
   27494:	ldr	x1, [sp, #16]
   27498:	cmp	x1, x0
   2749c:	b.cs	274a8 <PyInit__decimal@@Base+0xf7d0>  // b.hs, b.nlast
   274a0:	mov	w0, #0x7                   	// #7
   274a4:	b	275fc <PyInit__decimal@@Base+0xf924>
   274a8:	mov	w0, #0x8                   	// #8
   274ac:	b	275fc <PyInit__decimal@@Base+0xf924>
   274b0:	mov	w0, #0x9                   	// #9
   274b4:	b	275fc <PyInit__decimal@@Base+0xf924>
   274b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   274bc:	add	x0, x0, #0xdb0
   274c0:	ldr	x0, [x0, #112]
   274c4:	ldr	x1, [sp, #16]
   274c8:	cmp	x1, x0
   274cc:	b.cs	27558 <PyInit__decimal@@Base+0xf880>  // b.hs, b.nlast
   274d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   274d4:	add	x0, x0, #0xdb0
   274d8:	ldr	x0, [x0, #88]
   274dc:	ldr	x1, [sp, #16]
   274e0:	cmp	x1, x0
   274e4:	b.cs	27510 <PyInit__decimal@@Base+0xf838>  // b.hs, b.nlast
   274e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   274ec:	add	x0, x0, #0xdb0
   274f0:	ldr	x0, [x0, #80]
   274f4:	ldr	x1, [sp, #16]
   274f8:	cmp	x1, x0
   274fc:	b.cs	27508 <PyInit__decimal@@Base+0xf830>  // b.hs, b.nlast
   27500:	mov	w0, #0xa                   	// #10
   27504:	b	275fc <PyInit__decimal@@Base+0xf924>
   27508:	mov	w0, #0xb                   	// #11
   2750c:	b	275fc <PyInit__decimal@@Base+0xf924>
   27510:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27514:	add	x0, x0, #0xdb0
   27518:	ldr	x0, [x0, #104]
   2751c:	ldr	x1, [sp, #16]
   27520:	cmp	x1, x0
   27524:	b.cs	27550 <PyInit__decimal@@Base+0xf878>  // b.hs, b.nlast
   27528:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2752c:	add	x0, x0, #0xdb0
   27530:	ldr	x0, [x0, #96]
   27534:	ldr	x1, [sp, #16]
   27538:	cmp	x1, x0
   2753c:	b.cs	27548 <PyInit__decimal@@Base+0xf870>  // b.hs, b.nlast
   27540:	mov	w0, #0xc                   	// #12
   27544:	b	275fc <PyInit__decimal@@Base+0xf924>
   27548:	mov	w0, #0xd                   	// #13
   2754c:	b	275fc <PyInit__decimal@@Base+0xf924>
   27550:	mov	w0, #0xe                   	// #14
   27554:	b	275fc <PyInit__decimal@@Base+0xf924>
   27558:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2755c:	add	x0, x0, #0xdb0
   27560:	ldr	x0, [x0, #144]
   27564:	ldr	x1, [sp, #16]
   27568:	cmp	x1, x0
   2756c:	b.cs	275d8 <PyInit__decimal@@Base+0xf900>  // b.hs, b.nlast
   27570:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27574:	add	x0, x0, #0xdb0
   27578:	ldr	x0, [x0, #128]
   2757c:	ldr	x1, [sp, #16]
   27580:	cmp	x1, x0
   27584:	b.cs	275b0 <PyInit__decimal@@Base+0xf8d8>  // b.hs, b.nlast
   27588:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2758c:	add	x0, x0, #0xdb0
   27590:	ldr	x0, [x0, #120]
   27594:	ldr	x1, [sp, #16]
   27598:	cmp	x1, x0
   2759c:	b.cs	275a8 <PyInit__decimal@@Base+0xf8d0>  // b.hs, b.nlast
   275a0:	mov	w0, #0xf                   	// #15
   275a4:	b	275fc <PyInit__decimal@@Base+0xf924>
   275a8:	mov	w0, #0x10                  	// #16
   275ac:	b	275fc <PyInit__decimal@@Base+0xf924>
   275b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   275b4:	add	x0, x0, #0xdb0
   275b8:	ldr	x0, [x0, #136]
   275bc:	ldr	x1, [sp, #16]
   275c0:	cmp	x1, x0
   275c4:	b.cs	275d0 <PyInit__decimal@@Base+0xf8f8>  // b.hs, b.nlast
   275c8:	mov	w0, #0x11                  	// #17
   275cc:	b	275fc <PyInit__decimal@@Base+0xf924>
   275d0:	mov	w0, #0x12                  	// #18
   275d4:	b	275fc <PyInit__decimal@@Base+0xf924>
   275d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   275dc:	add	x0, x0, #0xdb0
   275e0:	ldr	x0, [x0, #152]
   275e4:	ldr	x1, [sp, #16]
   275e8:	cmp	x1, x0
   275ec:	b.cs	275f8 <PyInit__decimal@@Base+0xf920>  // b.hs, b.nlast
   275f0:	mov	w0, #0x13                  	// #19
   275f4:	b	275fc <PyInit__decimal@@Base+0xf924>
   275f8:	mov	w0, #0x14                  	// #20
   275fc:	str	w0, [sp, #28]
   27600:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27604:	add	x0, x0, #0xdb0
   27608:	ldrsw	x1, [sp, #28]
   2760c:	ldr	x0, [x0, x1, lsl #3]
   27610:	sub	x0, x0, #0x1
   27614:	ldr	x1, [sp, #8]
   27618:	cmp	x1, x0
   2761c:	b.ne	27628 <PyInit__decimal@@Base+0xf950>  // b.any
   27620:	mov	w0, #0x1                   	// #1
   27624:	b	2762c <PyInit__decimal@@Base+0xf954>
   27628:	mov	w0, #0x0                   	// #0
   2762c:	add	sp, sp, #0x20
   27630:	ret
   27634:	stp	x29, x30, [sp, #-48]!
   27638:	mov	x29, sp
   2763c:	str	x0, [sp, #24]
   27640:	ldr	x0, [sp, #24]
   27644:	str	x0, [sp, #40]
   27648:	ldr	x0, [sp, #40]
   2764c:	ldr	x1, [x0, #40]
   27650:	ldr	x0, [sp, #40]
   27654:	ldr	x0, [x0, #24]
   27658:	lsl	x0, x0, #3
   2765c:	sub	x0, x0, #0x8
   27660:	add	x0, x1, x0
   27664:	ldr	x0, [x0]
   27668:	bl	27388 <PyInit__decimal@@Base+0xf6b0>
   2766c:	cmp	w0, #0x0
   27670:	b.eq	276a4 <PyInit__decimal@@Base+0xf9cc>  // b.none
   27674:	ldr	x0, [sp, #24]
   27678:	ldr	x2, [x0, #40]
   2767c:	ldr	x0, [sp, #24]
   27680:	ldr	x0, [x0, #24]
   27684:	sub	x0, x0, #0x1
   27688:	mov	x1, x0
   2768c:	mov	x0, x2
   27690:	bl	248c4 <PyInit__decimal@@Base+0xcbec>
   27694:	cmp	w0, #0x0
   27698:	b.eq	276a4 <PyInit__decimal@@Base+0xf9cc>  // b.none
   2769c:	mov	w0, #0x1                   	// #1
   276a0:	b	276a8 <PyInit__decimal@@Base+0xf9d0>
   276a4:	mov	w0, #0x0                   	// #0
   276a8:	ldp	x29, x30, [sp], #48
   276ac:	ret
   276b0:	stp	x29, x30, [sp, #-80]!
   276b4:	mov	x29, sp
   276b8:	str	x0, [sp, #24]
   276bc:	ldr	x0, [sp, #24]
   276c0:	str	x0, [sp, #72]
   276c4:	ldr	x0, [sp, #72]
   276c8:	str	x0, [sp, #64]
   276cc:	ldr	x0, [sp, #64]
   276d0:	ldr	x1, [x0, #40]
   276d4:	ldr	x0, [sp, #64]
   276d8:	ldr	x0, [x0, #24]
   276dc:	lsl	x0, x0, #3
   276e0:	sub	x0, x0, #0x8
   276e4:	add	x0, x1, x0
   276e8:	ldr	x0, [x0]
   276ec:	cmp	x0, #0x0
   276f0:	cset	w0, eq  // eq = none
   276f4:	and	w0, w0, #0xff
   276f8:	cmp	w0, #0x0
   276fc:	b.eq	27708 <PyInit__decimal@@Base+0xfa30>  // b.none
   27700:	mov	w0, #0x0                   	// #0
   27704:	b	277b8 <PyInit__decimal@@Base+0xfae0>
   27708:	ldr	x0, [sp, #24]
   2770c:	ldr	x0, [x0, #8]
   27710:	cmp	x0, #0x0
   27714:	b.ge	2777c <PyInit__decimal@@Base+0xfaa4>  // b.tcont
   27718:	ldr	x0, [sp, #24]
   2771c:	ldr	x0, [x0, #8]
   27720:	neg	x0, x0
   27724:	mov	x2, x0
   27728:	add	x1, sp, #0x20
   2772c:	add	x0, sp, #0x28
   27730:	mov	x3, #0x13                  	// #19
   27734:	bl	24270 <PyInit__decimal@@Base+0xc598>
   27738:	ldr	x0, [sp, #24]
   2773c:	ldr	x1, [x0, #40]
   27740:	ldr	x0, [sp, #40]
   27744:	lsl	x0, x0, #3
   27748:	add	x0, x1, x0
   2774c:	ldr	x1, [x0]
   27750:	ldr	x2, [sp, #32]
   27754:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   27758:	add	x0, x0, #0xdb0
   2775c:	ldr	x0, [x0, x2, lsl #3]
   27760:	udiv	x0, x1, x0
   27764:	str	x0, [sp, #40]
   27768:	ldr	x0, [sp, #40]
   2776c:	str	x0, [sp, #56]
   27770:	ldr	x0, [sp, #56]
   27774:	and	w0, w0, #0x1
   27778:	b	277b8 <PyInit__decimal@@Base+0xfae0>
   2777c:	ldr	x0, [sp, #24]
   27780:	ldr	x0, [x0, #8]
   27784:	cmp	x0, #0x0
   27788:	b.ne	277b4 <PyInit__decimal@@Base+0xfadc>  // b.any
   2778c:	ldr	x0, [sp, #24]
   27790:	ldr	x0, [x0, #40]
   27794:	ldr	x0, [x0]
   27798:	str	x0, [sp, #48]
   2779c:	ldr	x0, [sp, #48]
   277a0:	and	w0, w0, #0x1
   277a4:	cmp	w0, #0x0
   277a8:	b.eq	277b4 <PyInit__decimal@@Base+0xfadc>  // b.none
   277ac:	mov	w0, #0x1                   	// #1
   277b0:	b	277b8 <PyInit__decimal@@Base+0xfae0>
   277b4:	mov	w0, #0x0                   	// #0
   277b8:	ldp	x29, x30, [sp], #80
   277bc:	ret
   277c0:	stp	x29, x30, [sp, #-32]!
   277c4:	mov	x29, sp
   277c8:	str	x0, [sp, #24]
   277cc:	ldr	x0, [sp, #24]
   277d0:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   277d4:	cmp	w0, #0x0
   277d8:	cset	w0, eq  // eq = none
   277dc:	and	w0, w0, #0xff
   277e0:	ldp	x29, x30, [sp], #32
   277e4:	ret
   277e8:	stp	x29, x30, [sp, #-64]!
   277ec:	mov	x29, sp
   277f0:	str	x0, [sp, #40]
   277f4:	strb	w1, [sp, #39]
   277f8:	str	x2, [sp, #24]
   277fc:	str	x3, [sp, #16]
   27800:	ldr	x0, [sp, #40]
   27804:	str	x0, [sp, #56]
   27808:	ldrb	w0, [sp, #39]
   2780c:	strb	w0, [sp, #55]
   27810:	ldr	x0, [sp, #56]
   27814:	ldrb	w0, [x0]
   27818:	and	w0, w0, #0xfffffff0
   2781c:	and	w1, w0, #0xff
   27820:	ldr	x0, [sp, #56]
   27824:	strb	w1, [x0]
   27828:	ldr	x0, [sp, #56]
   2782c:	ldrb	w1, [x0]
   27830:	ldrb	w0, [sp, #55]
   27834:	orr	w0, w1, w0
   27838:	and	w1, w0, #0xff
   2783c:	ldr	x0, [sp, #56]
   27840:	strb	w1, [x0]
   27844:	nop
   27848:	ldr	x0, [sp, #40]
   2784c:	ldr	x1, [sp, #16]
   27850:	str	x1, [x0, #8]
   27854:	ldr	x0, [sp, #40]
   27858:	ldr	x0, [x0, #40]
   2785c:	add	x4, x0, #0x8
   27860:	ldr	x0, [sp, #40]
   27864:	ldr	x0, [x0, #40]
   27868:	mov	x3, #0x89e80000            	// #2313682944
   2786c:	movk	x3, #0x2304, lsl #32
   27870:	movk	x3, #0x8ac7, lsl #48
   27874:	ldr	x2, [sp, #24]
   27878:	mov	x1, x0
   2787c:	mov	x0, x4
   27880:	bl	24270 <PyInit__decimal@@Base+0xc598>
   27884:	ldr	x0, [sp, #40]
   27888:	ldr	x0, [x0, #40]
   2788c:	add	x0, x0, #0x8
   27890:	ldr	x0, [x0]
   27894:	cmp	x0, #0x0
   27898:	b.ne	278a4 <PyInit__decimal@@Base+0xfbcc>  // b.any
   2789c:	mov	x0, #0x1                   	// #1
   278a0:	b	278a8 <PyInit__decimal@@Base+0xfbd0>
   278a4:	mov	x0, #0x2                   	// #2
   278a8:	ldr	x1, [sp, #40]
   278ac:	str	x0, [x1, #24]
   278b0:	ldr	x0, [sp, #40]
   278b4:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   278b8:	nop
   278bc:	ldp	x29, x30, [sp], #64
   278c0:	ret
   278c4:	stp	x29, x30, [sp, #-96]!
   278c8:	mov	x29, sp
   278cc:	str	x0, [sp, #40]
   278d0:	strb	w1, [sp, #39]
   278d4:	str	x2, [sp, #24]
   278d8:	str	x3, [sp, #16]
   278dc:	ldr	x0, [sp, #40]
   278e0:	str	x0, [sp, #72]
   278e4:	ldr	x0, [sp, #72]
   278e8:	str	x0, [sp, #64]
   278ec:	ldr	x0, [sp, #64]
   278f0:	ldrb	w0, [x0]
   278f4:	and	w0, w0, #0x20
   278f8:	cmp	w0, #0x0
   278fc:	b.ne	27978 <PyInit__decimal@@Base+0xfca0>  // b.any
   27900:	ldr	x0, [sp, #72]
   27904:	ldr	x1, [x0, #32]
   27908:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2790c:	add	x0, x0, #0x6d8
   27910:	ldr	x0, [x0]
   27914:	cmp	x1, x0
   27918:	b.le	27978 <PyInit__decimal@@Base+0xfca0>
   2791c:	strb	wzr, [sp, #63]
   27920:	ldr	x0, [sp, #72]
   27924:	ldr	x4, [x0, #40]
   27928:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2792c:	add	x0, x0, #0x6d8
   27930:	ldr	x0, [x0]
   27934:	mov	x1, x0
   27938:	add	x0, sp, #0x3f
   2793c:	mov	x3, x0
   27940:	mov	x2, #0x8                   	// #8
   27944:	mov	x0, x4
   27948:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   2794c:	mov	x1, x0
   27950:	ldr	x0, [sp, #72]
   27954:	str	x1, [x0, #40]
   27958:	ldrb	w0, [sp, #63]
   2795c:	cmp	w0, #0x0
   27960:	b.ne	27978 <PyInit__decimal@@Base+0xfca0>  // b.any
   27964:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27968:	add	x0, x0, #0x6d8
   2796c:	ldr	x1, [x0]
   27970:	ldr	x0, [sp, #72]
   27974:	str	x1, [x0, #32]
   27978:	nop
   2797c:	ldr	x0, [sp, #40]
   27980:	str	x0, [sp, #88]
   27984:	ldrb	w0, [sp, #39]
   27988:	strb	w0, [sp, #87]
   2798c:	ldr	x0, [sp, #88]
   27990:	ldrb	w0, [x0]
   27994:	and	w0, w0, #0xfffffff0
   27998:	and	w1, w0, #0xff
   2799c:	ldr	x0, [sp, #88]
   279a0:	strb	w1, [x0]
   279a4:	ldr	x0, [sp, #88]
   279a8:	ldrb	w1, [x0]
   279ac:	ldrb	w0, [sp, #87]
   279b0:	orr	w0, w1, w0
   279b4:	and	w1, w0, #0xff
   279b8:	ldr	x0, [sp, #88]
   279bc:	strb	w1, [x0]
   279c0:	nop
   279c4:	ldr	x0, [sp, #40]
   279c8:	ldr	x1, [sp, #16]
   279cc:	str	x1, [x0, #8]
   279d0:	ldr	x0, [sp, #40]
   279d4:	ldr	x0, [x0, #40]
   279d8:	add	x4, x0, #0x8
   279dc:	ldr	x0, [sp, #40]
   279e0:	ldr	x0, [x0, #40]
   279e4:	mov	x3, #0x89e80000            	// #2313682944
   279e8:	movk	x3, #0x2304, lsl #32
   279ec:	movk	x3, #0x8ac7, lsl #48
   279f0:	ldr	x2, [sp, #24]
   279f4:	mov	x1, x0
   279f8:	mov	x0, x4
   279fc:	bl	24270 <PyInit__decimal@@Base+0xc598>
   27a00:	ldr	x0, [sp, #40]
   27a04:	ldr	x0, [x0, #40]
   27a08:	add	x0, x0, #0x8
   27a0c:	ldr	x0, [x0]
   27a10:	cmp	x0, #0x0
   27a14:	b.ne	27a20 <PyInit__decimal@@Base+0xfd48>  // b.any
   27a18:	mov	x0, #0x1                   	// #1
   27a1c:	b	27a24 <PyInit__decimal@@Base+0xfd4c>
   27a20:	mov	x0, #0x2                   	// #2
   27a24:	ldr	x1, [sp, #40]
   27a28:	str	x0, [x1, #24]
   27a2c:	ldr	x0, [sp, #40]
   27a30:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   27a34:	nop
   27a38:	ldp	x29, x30, [sp], #96
   27a3c:	ret
   27a40:	stp	x29, x30, [sp, #-64]!
   27a44:	mov	x29, sp
   27a48:	str	x0, [sp, #24]
   27a4c:	strb	w1, [sp, #23]
   27a50:	strb	w2, [sp, #22]
   27a54:	ldr	x0, [sp, #24]
   27a58:	str	x0, [sp, #56]
   27a5c:	ldr	x0, [sp, #56]
   27a60:	str	x0, [sp, #48]
   27a64:	ldr	x0, [sp, #48]
   27a68:	ldrb	w0, [x0]
   27a6c:	and	w0, w0, #0x20
   27a70:	cmp	w0, #0x0
   27a74:	b.ne	27af0 <PyInit__decimal@@Base+0xfe18>  // b.any
   27a78:	ldr	x0, [sp, #56]
   27a7c:	ldr	x1, [x0, #32]
   27a80:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27a84:	add	x0, x0, #0x6d8
   27a88:	ldr	x0, [x0]
   27a8c:	cmp	x1, x0
   27a90:	b.le	27af0 <PyInit__decimal@@Base+0xfe18>
   27a94:	strb	wzr, [sp, #47]
   27a98:	ldr	x0, [sp, #56]
   27a9c:	ldr	x4, [x0, #40]
   27aa0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27aa4:	add	x0, x0, #0x6d8
   27aa8:	ldr	x0, [x0]
   27aac:	mov	x1, x0
   27ab0:	add	x0, sp, #0x2f
   27ab4:	mov	x3, x0
   27ab8:	mov	x2, #0x8                   	// #8
   27abc:	mov	x0, x4
   27ac0:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   27ac4:	mov	x1, x0
   27ac8:	ldr	x0, [sp, #56]
   27acc:	str	x1, [x0, #40]
   27ad0:	ldrb	w0, [sp, #47]
   27ad4:	cmp	w0, #0x0
   27ad8:	b.ne	27af0 <PyInit__decimal@@Base+0xfe18>  // b.any
   27adc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27ae0:	add	x0, x0, #0x6d8
   27ae4:	ldr	x1, [x0]
   27ae8:	ldr	x0, [sp, #56]
   27aec:	str	x1, [x0, #32]
   27af0:	nop
   27af4:	ldr	x0, [sp, #24]
   27af8:	ldrb	w0, [x0]
   27afc:	and	w0, w0, #0xfffffff0
   27b00:	and	w1, w0, #0xff
   27b04:	ldr	x0, [sp, #24]
   27b08:	strb	w1, [x0]
   27b0c:	ldr	x0, [sp, #24]
   27b10:	ldrb	w1, [x0]
   27b14:	ldrb	w2, [sp, #23]
   27b18:	ldrb	w0, [sp, #22]
   27b1c:	orr	w0, w2, w0
   27b20:	and	w0, w0, #0xff
   27b24:	orr	w0, w1, w0
   27b28:	and	w1, w0, #0xff
   27b2c:	ldr	x0, [sp, #24]
   27b30:	strb	w1, [x0]
   27b34:	ldr	x0, [sp, #24]
   27b38:	str	xzr, [x0, #24]
   27b3c:	ldr	x0, [sp, #24]
   27b40:	ldr	x1, [x0, #24]
   27b44:	ldr	x0, [sp, #24]
   27b48:	str	x1, [x0, #16]
   27b4c:	ldr	x0, [sp, #24]
   27b50:	ldr	x1, [x0, #16]
   27b54:	ldr	x0, [sp, #24]
   27b58:	str	x1, [x0, #8]
   27b5c:	nop
   27b60:	ldp	x29, x30, [sp], #64
   27b64:	ret
   27b68:	stp	x29, x30, [sp, #-96]!
   27b6c:	mov	x29, sp
   27b70:	str	x0, [sp, #40]
   27b74:	str	w1, [sp, #36]
   27b78:	str	x2, [sp, #24]
   27b7c:	ldr	x0, [sp, #40]
   27b80:	str	x0, [sp, #72]
   27b84:	ldr	x0, [sp, #72]
   27b88:	str	x0, [sp, #64]
   27b8c:	ldr	x0, [sp, #64]
   27b90:	ldrb	w0, [x0]
   27b94:	and	w0, w0, #0x20
   27b98:	cmp	w0, #0x0
   27b9c:	b.ne	27c18 <PyInit__decimal@@Base+0xff40>  // b.any
   27ba0:	ldr	x0, [sp, #72]
   27ba4:	ldr	x1, [x0, #32]
   27ba8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27bac:	add	x0, x0, #0x6d8
   27bb0:	ldr	x0, [x0]
   27bb4:	cmp	x1, x0
   27bb8:	b.le	27c18 <PyInit__decimal@@Base+0xff40>
   27bbc:	strb	wzr, [sp, #63]
   27bc0:	ldr	x0, [sp, #72]
   27bc4:	ldr	x4, [x0, #40]
   27bc8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27bcc:	add	x0, x0, #0x6d8
   27bd0:	ldr	x0, [x0]
   27bd4:	mov	x1, x0
   27bd8:	add	x0, sp, #0x3f
   27bdc:	mov	x3, x0
   27be0:	mov	x2, #0x8                   	// #8
   27be4:	mov	x0, x4
   27be8:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   27bec:	mov	x1, x0
   27bf0:	ldr	x0, [sp, #72]
   27bf4:	str	x1, [x0, #40]
   27bf8:	ldrb	w0, [sp, #63]
   27bfc:	cmp	w0, #0x0
   27c00:	b.ne	27c18 <PyInit__decimal@@Base+0xff40>  // b.any
   27c04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27c08:	add	x0, x0, #0x6d8
   27c0c:	ldr	x1, [x0]
   27c10:	ldr	x0, [sp, #72]
   27c14:	str	x1, [x0, #32]
   27c18:	nop
   27c1c:	ldr	x0, [sp, #40]
   27c20:	str	x0, [sp, #80]
   27c24:	ldr	x0, [sp, #80]
   27c28:	ldrb	w0, [x0]
   27c2c:	and	w0, w0, #0xfffffff1
   27c30:	and	w1, w0, #0xff
   27c34:	ldr	x0, [sp, #80]
   27c38:	strb	w1, [x0]
   27c3c:	ldr	x0, [sp, #80]
   27c40:	ldrb	w0, [x0]
   27c44:	orr	w0, w0, #0x4
   27c48:	and	w1, w0, #0xff
   27c4c:	ldr	x0, [sp, #80]
   27c50:	strb	w1, [x0]
   27c54:	nop
   27c58:	ldr	x0, [sp, #40]
   27c5c:	str	x0, [sp, #88]
   27c60:	ldr	x0, [sp, #88]
   27c64:	ldrb	w0, [x0]
   27c68:	and	w0, w0, #0xfffffffe
   27c6c:	and	w1, w0, #0xff
   27c70:	ldr	x0, [sp, #88]
   27c74:	strb	w1, [x0]
   27c78:	nop
   27c7c:	ldr	x0, [sp, #40]
   27c80:	str	xzr, [x0, #24]
   27c84:	ldr	x0, [sp, #40]
   27c88:	ldr	x1, [x0, #24]
   27c8c:	ldr	x0, [sp, #40]
   27c90:	str	x1, [x0, #16]
   27c94:	ldr	x0, [sp, #40]
   27c98:	ldr	x1, [x0, #16]
   27c9c:	ldr	x0, [sp, #40]
   27ca0:	str	x1, [x0, #8]
   27ca4:	ldr	x0, [sp, #24]
   27ca8:	ldr	w1, [x0]
   27cac:	ldr	w0, [sp, #36]
   27cb0:	orr	w1, w1, w0
   27cb4:	ldr	x0, [sp, #24]
   27cb8:	str	w1, [x0]
   27cbc:	nop
   27cc0:	ldp	x29, x30, [sp], #96
   27cc4:	ret
   27cc8:	stp	x29, x30, [sp, #-64]!
   27ccc:	mov	x29, sp
   27cd0:	str	x0, [sp, #40]
   27cd4:	str	x1, [sp, #32]
   27cd8:	str	x2, [sp, #24]
   27cdc:	str	x3, [sp, #16]
   27ce0:	strb	wzr, [sp, #55]
   27ce4:	ldr	x0, [sp, #32]
   27ce8:	cmp	x0, #0x0
   27cec:	b.ge	27d24 <PyInit__decimal@@Base+0x1004c>  // b.tcont
   27cf0:	ldr	x1, [sp, #32]
   27cf4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27cf8:	cmp	x1, x0
   27cfc:	b.ne	27d0c <PyInit__decimal@@Base+0x10034>  // b.any
   27d00:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27d04:	str	x0, [sp, #56]
   27d08:	b	27d18 <PyInit__decimal@@Base+0x10040>
   27d0c:	ldr	x0, [sp, #32]
   27d10:	neg	x0, x0
   27d14:	str	x0, [sp, #56]
   27d18:	mov	w0, #0x1                   	// #1
   27d1c:	strb	w0, [sp, #55]
   27d20:	b	27d2c <PyInit__decimal@@Base+0x10054>
   27d24:	ldr	x0, [sp, #32]
   27d28:	str	x0, [sp, #56]
   27d2c:	mov	x3, #0x0                   	// #0
   27d30:	ldr	x2, [sp, #56]
   27d34:	ldrb	w1, [sp, #55]
   27d38:	ldr	x0, [sp, #40]
   27d3c:	bl	277e8 <PyInit__decimal@@Base+0xfb10>
   27d40:	ldr	x2, [sp, #16]
   27d44:	ldr	x1, [sp, #24]
   27d48:	ldr	x0, [sp, #40]
   27d4c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   27d50:	nop
   27d54:	ldp	x29, x30, [sp], #64
   27d58:	ret
   27d5c:	stp	x29, x30, [sp, #-48]!
   27d60:	mov	x29, sp
   27d64:	str	x0, [sp, #40]
   27d68:	str	x1, [sp, #32]
   27d6c:	str	x2, [sp, #24]
   27d70:	str	x3, [sp, #16]
   27d74:	mov	x3, #0x0                   	// #0
   27d78:	ldr	x2, [sp, #32]
   27d7c:	mov	w1, #0x0                   	// #0
   27d80:	ldr	x0, [sp, #40]
   27d84:	bl	277e8 <PyInit__decimal@@Base+0xfb10>
   27d88:	ldr	x2, [sp, #16]
   27d8c:	ldr	x1, [sp, #24]
   27d90:	ldr	x0, [sp, #40]
   27d94:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   27d98:	nop
   27d9c:	ldp	x29, x30, [sp], #48
   27da0:	ret
   27da4:	stp	x29, x30, [sp, #-48]!
   27da8:	mov	x29, sp
   27dac:	str	x0, [sp, #40]
   27db0:	str	w1, [sp, #36]
   27db4:	str	x2, [sp, #24]
   27db8:	str	x3, [sp, #16]
   27dbc:	ldrsw	x0, [sp, #36]
   27dc0:	ldr	x3, [sp, #16]
   27dc4:	ldr	x2, [sp, #24]
   27dc8:	mov	x1, x0
   27dcc:	ldr	x0, [sp, #40]
   27dd0:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   27dd4:	nop
   27dd8:	ldp	x29, x30, [sp], #48
   27ddc:	ret
   27de0:	stp	x29, x30, [sp, #-48]!
   27de4:	mov	x29, sp
   27de8:	str	x0, [sp, #40]
   27dec:	str	w1, [sp, #36]
   27df0:	str	x2, [sp, #24]
   27df4:	str	x3, [sp, #16]
   27df8:	ldr	w0, [sp, #36]
   27dfc:	ldr	x3, [sp, #16]
   27e00:	ldr	x2, [sp, #24]
   27e04:	mov	x1, x0
   27e08:	ldr	x0, [sp, #40]
   27e0c:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   27e10:	nop
   27e14:	ldp	x29, x30, [sp], #48
   27e18:	ret
   27e1c:	stp	x29, x30, [sp, #-48]!
   27e20:	mov	x29, sp
   27e24:	str	x0, [sp, #40]
   27e28:	str	x1, [sp, #32]
   27e2c:	str	x2, [sp, #24]
   27e30:	str	x3, [sp, #16]
   27e34:	ldr	x3, [sp, #16]
   27e38:	ldr	x2, [sp, #24]
   27e3c:	ldr	x1, [sp, #32]
   27e40:	ldr	x0, [sp, #40]
   27e44:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   27e48:	nop
   27e4c:	ldp	x29, x30, [sp], #48
   27e50:	ret
   27e54:	stp	x29, x30, [sp, #-48]!
   27e58:	mov	x29, sp
   27e5c:	str	x0, [sp, #40]
   27e60:	str	x1, [sp, #32]
   27e64:	str	x2, [sp, #24]
   27e68:	str	x3, [sp, #16]
   27e6c:	ldr	x3, [sp, #16]
   27e70:	ldr	x2, [sp, #24]
   27e74:	ldr	x1, [sp, #32]
   27e78:	ldr	x0, [sp, #40]
   27e7c:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   27e80:	nop
   27e84:	ldp	x29, x30, [sp], #48
   27e88:	ret
   27e8c:	stp	x29, x30, [sp, #-80]!
   27e90:	mov	x29, sp
   27e94:	str	x0, [sp, #40]
   27e98:	str	x1, [sp, #32]
   27e9c:	str	x2, [sp, #24]
   27ea0:	str	x3, [sp, #16]
   27ea4:	ldr	x0, [sp, #40]
   27ea8:	str	x0, [sp, #72]
   27eac:	ldr	x0, [sp, #72]
   27eb0:	str	x0, [sp, #64]
   27eb4:	ldr	x0, [sp, #64]
   27eb8:	ldrb	w0, [x0]
   27ebc:	and	w0, w0, #0x20
   27ec0:	cmp	w0, #0x0
   27ec4:	b.ne	27f40 <PyInit__decimal@@Base+0x10268>  // b.any
   27ec8:	ldr	x0, [sp, #72]
   27ecc:	ldr	x1, [x0, #32]
   27ed0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27ed4:	add	x0, x0, #0x6d8
   27ed8:	ldr	x0, [x0]
   27edc:	cmp	x1, x0
   27ee0:	b.le	27f40 <PyInit__decimal@@Base+0x10268>
   27ee4:	strb	wzr, [sp, #63]
   27ee8:	ldr	x0, [sp, #72]
   27eec:	ldr	x4, [x0, #40]
   27ef0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27ef4:	add	x0, x0, #0x6d8
   27ef8:	ldr	x0, [x0]
   27efc:	mov	x1, x0
   27f00:	add	x0, sp, #0x3f
   27f04:	mov	x3, x0
   27f08:	mov	x2, #0x8                   	// #8
   27f0c:	mov	x0, x4
   27f10:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   27f14:	mov	x1, x0
   27f18:	ldr	x0, [sp, #72]
   27f1c:	str	x1, [x0, #40]
   27f20:	ldrb	w0, [sp, #63]
   27f24:	cmp	w0, #0x0
   27f28:	b.ne	27f40 <PyInit__decimal@@Base+0x10268>  // b.any
   27f2c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   27f30:	add	x0, x0, #0x6d8
   27f34:	ldr	x1, [x0]
   27f38:	ldr	x0, [sp, #72]
   27f3c:	str	x1, [x0, #32]
   27f40:	nop
   27f44:	ldr	x3, [sp, #16]
   27f48:	ldr	x2, [sp, #24]
   27f4c:	ldr	x1, [sp, #32]
   27f50:	ldr	x0, [sp, #40]
   27f54:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   27f58:	nop
   27f5c:	ldp	x29, x30, [sp], #80
   27f60:	ret
   27f64:	stp	x29, x30, [sp, #-48]!
   27f68:	mov	x29, sp
   27f6c:	str	x0, [sp, #40]
   27f70:	str	x1, [sp, #32]
   27f74:	str	x2, [sp, #24]
   27f78:	str	x3, [sp, #16]
   27f7c:	mov	x3, #0x0                   	// #0
   27f80:	ldr	x2, [sp, #32]
   27f84:	mov	w1, #0x0                   	// #0
   27f88:	ldr	x0, [sp, #40]
   27f8c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   27f90:	ldr	x2, [sp, #16]
   27f94:	ldr	x1, [sp, #24]
   27f98:	ldr	x0, [sp, #40]
   27f9c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   27fa0:	nop
   27fa4:	ldp	x29, x30, [sp], #48
   27fa8:	ret
   27fac:	stp	x29, x30, [sp, #-48]!
   27fb0:	mov	x29, sp
   27fb4:	str	x0, [sp, #40]
   27fb8:	str	w1, [sp, #36]
   27fbc:	str	x2, [sp, #24]
   27fc0:	str	x3, [sp, #16]
   27fc4:	ldrsw	x0, [sp, #36]
   27fc8:	ldr	x3, [sp, #16]
   27fcc:	ldr	x2, [sp, #24]
   27fd0:	mov	x1, x0
   27fd4:	ldr	x0, [sp, #40]
   27fd8:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
   27fdc:	nop
   27fe0:	ldp	x29, x30, [sp], #48
   27fe4:	ret
   27fe8:	stp	x29, x30, [sp, #-48]!
   27fec:	mov	x29, sp
   27ff0:	str	x0, [sp, #40]
   27ff4:	str	w1, [sp, #36]
   27ff8:	str	x2, [sp, #24]
   27ffc:	str	x3, [sp, #16]
   28000:	ldr	w0, [sp, #36]
   28004:	ldr	x3, [sp, #16]
   28008:	ldr	x2, [sp, #24]
   2800c:	mov	x1, x0
   28010:	ldr	x0, [sp, #40]
   28014:	bl	27f64 <PyInit__decimal@@Base+0x1028c>
   28018:	nop
   2801c:	ldp	x29, x30, [sp], #48
   28020:	ret
   28024:	stp	x29, x30, [sp, #-48]!
   28028:	mov	x29, sp
   2802c:	str	x0, [sp, #40]
   28030:	str	x1, [sp, #32]
   28034:	str	x2, [sp, #24]
   28038:	str	x3, [sp, #16]
   2803c:	ldr	x3, [sp, #16]
   28040:	ldr	x2, [sp, #24]
   28044:	ldr	x1, [sp, #32]
   28048:	ldr	x0, [sp, #40]
   2804c:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
   28050:	nop
   28054:	ldp	x29, x30, [sp], #48
   28058:	ret
   2805c:	stp	x29, x30, [sp, #-48]!
   28060:	mov	x29, sp
   28064:	str	x0, [sp, #40]
   28068:	str	x1, [sp, #32]
   2806c:	str	x2, [sp, #24]
   28070:	str	x3, [sp, #16]
   28074:	ldr	x3, [sp, #16]
   28078:	ldr	x2, [sp, #24]
   2807c:	ldr	x1, [sp, #32]
   28080:	ldr	x0, [sp, #40]
   28084:	bl	27f64 <PyInit__decimal@@Base+0x1028c>
   28088:	nop
   2808c:	ldp	x29, x30, [sp], #48
   28090:	ret
   28094:	stp	x29, x30, [sp, #-176]!
   28098:	mov	x29, sp
   2809c:	str	w0, [sp, #44]
   280a0:	str	x1, [sp, #32]
   280a4:	str	x2, [sp, #24]
   280a8:	ldr	x0, [sp, #32]
   280ac:	str	x0, [sp, #168]
   280b0:	ldr	x0, [sp, #168]
   280b4:	ldrb	w0, [x0]
   280b8:	and	w0, w0, #0xe
   280bc:	cmp	w0, #0x0
   280c0:	b.eq	280e0 <PyInit__decimal@@Base+0x10408>  // b.none
   280c4:	ldr	x0, [sp, #24]
   280c8:	ldr	w0, [x0]
   280cc:	orr	w1, w0, #0x100
   280d0:	ldr	x0, [sp, #24]
   280d4:	str	w1, [x0]
   280d8:	mov	x0, #0xffffffffffffffff    	// #-1
   280dc:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   280e0:	ldr	x0, [sp, #32]
   280e4:	str	x0, [sp, #160]
   280e8:	ldr	x0, [sp, #160]
   280ec:	str	x0, [sp, #152]
   280f0:	ldr	x0, [sp, #152]
   280f4:	ldrb	w0, [x0]
   280f8:	and	w0, w0, #0xe
   280fc:	cmp	w0, #0x0
   28100:	b.ne	2813c <PyInit__decimal@@Base+0x10464>  // b.any
   28104:	ldr	x0, [sp, #160]
   28108:	str	x0, [sp, #144]
   2810c:	ldr	x0, [sp, #144]
   28110:	ldr	x1, [x0, #40]
   28114:	ldr	x0, [sp, #144]
   28118:	ldr	x0, [x0, #24]
   2811c:	lsl	x0, x0, #3
   28120:	sub	x0, x0, #0x8
   28124:	add	x0, x1, x0
   28128:	ldr	x0, [x0]
   2812c:	cmp	x0, #0x0
   28130:	b.ne	2813c <PyInit__decimal@@Base+0x10464>  // b.any
   28134:	mov	w0, #0x1                   	// #1
   28138:	b	28140 <PyInit__decimal@@Base+0x10468>
   2813c:	mov	w0, #0x0                   	// #0
   28140:	cmp	w0, #0x0
   28144:	b.eq	28150 <PyInit__decimal@@Base+0x10478>  // b.none
   28148:	mov	x0, #0x0                   	// #0
   2814c:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   28150:	ldr	w0, [sp, #44]
   28154:	cmp	w0, #0x0
   28158:	b.eq	28194 <PyInit__decimal@@Base+0x104bc>  // b.none
   2815c:	ldr	x0, [sp, #32]
   28160:	str	x0, [sp, #136]
   28164:	ldr	x0, [sp, #136]
   28168:	ldrb	w0, [x0]
   2816c:	and	w0, w0, #0x1
   28170:	cmp	w0, #0x0
   28174:	b.eq	28194 <PyInit__decimal@@Base+0x104bc>  // b.none
   28178:	ldr	x0, [sp, #24]
   2817c:	ldr	w0, [x0]
   28180:	orr	w1, w0, #0x100
   28184:	ldr	x0, [sp, #24]
   28188:	str	w1, [x0]
   2818c:	mov	x0, #0xffffffffffffffff    	// #-1
   28190:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   28194:	ldr	x0, [sp, #32]
   28198:	ldr	x1, [x0, #16]
   2819c:	ldr	x0, [sp, #32]
   281a0:	ldr	x0, [x0, #8]
   281a4:	add	x0, x1, x0
   281a8:	cmp	x0, #0x14
   281ac:	b.le	281cc <PyInit__decimal@@Base+0x104f4>
   281b0:	ldr	x0, [sp, #24]
   281b4:	ldr	w0, [x0]
   281b8:	orr	w1, w0, #0x100
   281bc:	ldr	x0, [sp, #24]
   281c0:	str	w1, [x0]
   281c4:	mov	x0, #0xffffffffffffffff    	// #-1
   281c8:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   281cc:	ldr	x0, [sp, #32]
   281d0:	ldr	x0, [x0, #8]
   281d4:	cmp	x0, #0x0
   281d8:	b.ge	28248 <PyInit__decimal@@Base+0x10570>  // b.tcont
   281dc:	ldr	x0, [sp, #32]
   281e0:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   281e4:	cmp	w0, #0x0
   281e8:	b.ne	28208 <PyInit__decimal@@Base+0x10530>  // b.any
   281ec:	ldr	x0, [sp, #24]
   281f0:	ldr	w0, [x0]
   281f4:	orr	w1, w0, #0x100
   281f8:	ldr	x0, [sp, #24]
   281fc:	str	w1, [x0]
   28200:	mov	x0, #0xffffffffffffffff    	// #-1
   28204:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   28208:	add	x0, sp, #0x48
   2820c:	str	x0, [sp, #128]
   28210:	mov	w0, #0x30                  	// #48
   28214:	strb	w0, [sp, #88]
   28218:	mov	x0, #0x2                   	// #2
   2821c:	str	x0, [sp, #120]
   28220:	ldr	x0, [sp, #32]
   28224:	ldr	x0, [x0, #8]
   28228:	neg	x1, x0
   2822c:	add	x0, sp, #0x58
   28230:	mov	x2, x1
   28234:	ldr	x1, [sp, #32]
   28238:	bl	2b450 <PyInit__decimal@@Base+0x13778>
   2823c:	str	xzr, [sp, #96]
   28240:	add	x0, sp, #0x58
   28244:	str	x0, [sp, #32]
   28248:	add	x1, sp, #0x40
   2824c:	add	x0, sp, #0x38
   28250:	mov	w3, #0x14                  	// #20
   28254:	ldr	x2, [sp, #32]
   28258:	bl	26cbc <PyInit__decimal@@Base+0xefe4>
   2825c:	ldr	x0, [sp, #56]
   28260:	cmp	x0, #0x0
   28264:	b.eq	28284 <PyInit__decimal@@Base+0x105ac>  // b.none
   28268:	ldr	x0, [sp, #24]
   2826c:	ldr	w0, [x0]
   28270:	orr	w1, w0, #0x100
   28274:	ldr	x0, [sp, #24]
   28278:	str	w1, [x0]
   2827c:	mov	x0, #0xffffffffffffffff    	// #-1
   28280:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   28284:	ldr	x0, [sp, #32]
   28288:	ldr	x0, [x0, #8]
   2828c:	cmp	x0, #0x0
   28290:	b.le	282e0 <PyInit__decimal@@Base+0x10608>
   28294:	ldr	x2, [sp, #64]
   28298:	ldr	x0, [sp, #32]
   2829c:	ldr	x1, [x0, #8]
   282a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   282a4:	add	x0, x0, #0xdb0
   282a8:	ldr	x3, [x0, x1, lsl #3]
   282ac:	add	x1, sp, #0x40
   282b0:	add	x0, sp, #0x38
   282b4:	bl	23a0c <PyInit__decimal@@Base+0xbd34>
   282b8:	ldr	x0, [sp, #56]
   282bc:	cmp	x0, #0x0
   282c0:	b.eq	282e0 <PyInit__decimal@@Base+0x10608>  // b.none
   282c4:	ldr	x0, [sp, #24]
   282c8:	ldr	w0, [x0]
   282cc:	orr	w1, w0, #0x100
   282d0:	ldr	x0, [sp, #24]
   282d4:	str	w1, [x0]
   282d8:	mov	x0, #0xffffffffffffffff    	// #-1
   282dc:	b	282e4 <PyInit__decimal@@Base+0x1060c>
   282e0:	ldr	x0, [sp, #64]
   282e4:	ldp	x29, x30, [sp], #176
   282e8:	ret
   282ec:	stp	x29, x30, [sp, #-32]!
   282f0:	mov	x29, sp
   282f4:	str	x0, [sp, #24]
   282f8:	str	x1, [sp, #16]
   282fc:	ldr	x2, [sp, #16]
   28300:	ldr	x1, [sp, #24]
   28304:	mov	w0, #0x1                   	// #1
   28308:	bl	28094 <PyInit__decimal@@Base+0x103bc>
   2830c:	ldp	x29, x30, [sp], #32
   28310:	ret
   28314:	stp	x29, x30, [sp, #-32]!
   28318:	mov	x29, sp
   2831c:	str	x0, [sp, #24]
   28320:	str	x1, [sp, #16]
   28324:	ldr	x2, [sp, #16]
   28328:	ldr	x1, [sp, #24]
   2832c:	mov	w0, #0x0                   	// #0
   28330:	bl	28094 <PyInit__decimal@@Base+0x103bc>
   28334:	ldp	x29, x30, [sp], #32
   28338:	ret
   2833c:	stp	x29, x30, [sp, #-64]!
   28340:	mov	x29, sp
   28344:	str	x0, [sp, #24]
   28348:	str	x1, [sp, #16]
   2834c:	ldr	x1, [sp, #16]
   28350:	ldr	x0, [sp, #24]
   28354:	bl	28314 <PyInit__decimal@@Base+0x1063c>
   28358:	str	x0, [sp, #56]
   2835c:	ldr	x0, [sp, #16]
   28360:	ldr	w0, [x0]
   28364:	and	w0, w0, #0x100
   28368:	cmp	w0, #0x0
   2836c:	b.eq	28378 <PyInit__decimal@@Base+0x106a0>  // b.none
   28370:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   28374:	b	283f8 <PyInit__decimal@@Base+0x10720>
   28378:	ldr	x0, [sp, #24]
   2837c:	str	x0, [sp, #40]
   28380:	ldr	x0, [sp, #40]
   28384:	ldrb	w0, [x0]
   28388:	and	w0, w0, #0x1
   2838c:	str	w0, [sp, #52]
   28390:	ldr	x0, [sp, #56]
   28394:	cmp	x0, #0x0
   28398:	b.lt	283bc <PyInit__decimal@@Base+0x106e4>  // b.tstop
   2839c:	ldr	w0, [sp, #52]
   283a0:	cmp	w0, #0x0
   283a4:	b.eq	283b4 <PyInit__decimal@@Base+0x106dc>  // b.none
   283a8:	ldr	x0, [sp, #56]
   283ac:	neg	x0, x0
   283b0:	b	283f8 <PyInit__decimal@@Base+0x10720>
   283b4:	ldr	x0, [sp, #56]
   283b8:	b	283f8 <PyInit__decimal@@Base+0x10720>
   283bc:	ldr	w0, [sp, #52]
   283c0:	cmp	w0, #0x0
   283c4:	b.eq	283e0 <PyInit__decimal@@Base+0x10708>  // b.none
   283c8:	ldr	x1, [sp, #56]
   283cc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   283d0:	cmp	x1, x0
   283d4:	b.ne	283e0 <PyInit__decimal@@Base+0x10708>  // b.any
   283d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   283dc:	b	283f8 <PyInit__decimal@@Base+0x10720>
   283e0:	ldr	x0, [sp, #16]
   283e4:	ldr	w0, [x0]
   283e8:	orr	w1, w0, #0x100
   283ec:	ldr	x0, [sp, #16]
   283f0:	str	w1, [x0]
   283f4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   283f8:	ldp	x29, x30, [sp], #64
   283fc:	ret
   28400:	stp	x29, x30, [sp, #-32]!
   28404:	mov	x29, sp
   28408:	str	x0, [sp, #24]
   2840c:	str	x1, [sp, #16]
   28410:	ldr	x1, [sp, #16]
   28414:	ldr	x0, [sp, #24]
   28418:	bl	282ec <PyInit__decimal@@Base+0x10614>
   2841c:	ldp	x29, x30, [sp], #32
   28420:	ret
   28424:	stp	x29, x30, [sp, #-32]!
   28428:	mov	x29, sp
   2842c:	str	x0, [sp, #24]
   28430:	str	x1, [sp, #16]
   28434:	ldr	x1, [sp, #16]
   28438:	ldr	x0, [sp, #24]
   2843c:	bl	2833c <PyInit__decimal@@Base+0x10664>
   28440:	ldp	x29, x30, [sp], #32
   28444:	ret
   28448:	stp	x29, x30, [sp, #-48]!
   2844c:	mov	x29, sp
   28450:	str	x0, [sp, #24]
   28454:	str	x1, [sp, #16]
   28458:	ldr	x1, [sp, #16]
   2845c:	ldr	x0, [sp, #24]
   28460:	bl	282ec <PyInit__decimal@@Base+0x10614>
   28464:	str	x0, [sp, #40]
   28468:	ldr	x0, [sp, #16]
   2846c:	ldr	w0, [x0]
   28470:	and	w0, w0, #0x100
   28474:	cmp	w0, #0x0
   28478:	b.eq	28484 <PyInit__decimal@@Base+0x107ac>  // b.none
   2847c:	mov	w0, #0xffffffff            	// #-1
   28480:	b	284b4 <PyInit__decimal@@Base+0x107dc>
   28484:	ldr	x1, [sp, #40]
   28488:	mov	x0, #0xffffffff            	// #4294967295
   2848c:	cmp	x1, x0
   28490:	b.ls	284b0 <PyInit__decimal@@Base+0x107d8>  // b.plast
   28494:	ldr	x0, [sp, #16]
   28498:	ldr	w0, [x0]
   2849c:	orr	w1, w0, #0x100
   284a0:	ldr	x0, [sp, #16]
   284a4:	str	w1, [x0]
   284a8:	mov	w0, #0xffffffff            	// #-1
   284ac:	b	284b4 <PyInit__decimal@@Base+0x107dc>
   284b0:	ldr	x0, [sp, #40]
   284b4:	ldp	x29, x30, [sp], #48
   284b8:	ret
   284bc:	stp	x29, x30, [sp, #-48]!
   284c0:	mov	x29, sp
   284c4:	str	x0, [sp, #24]
   284c8:	str	x1, [sp, #16]
   284cc:	ldr	x1, [sp, #16]
   284d0:	ldr	x0, [sp, #24]
   284d4:	bl	2833c <PyInit__decimal@@Base+0x10664>
   284d8:	str	x0, [sp, #40]
   284dc:	ldr	x0, [sp, #16]
   284e0:	ldr	w0, [x0]
   284e4:	and	w0, w0, #0x100
   284e8:	cmp	w0, #0x0
   284ec:	b.eq	284f8 <PyInit__decimal@@Base+0x10820>  // b.none
   284f0:	mov	w0, #0x7fffffff            	// #2147483647
   284f4:	b	28538 <PyInit__decimal@@Base+0x10860>
   284f8:	ldr	x1, [sp, #40]
   284fc:	mov	x0, #0xffffffff80000000    	// #-2147483648
   28500:	cmp	x1, x0
   28504:	b.lt	28518 <PyInit__decimal@@Base+0x10840>  // b.tstop
   28508:	ldr	x1, [sp, #40]
   2850c:	mov	x0, #0x7fffffff            	// #2147483647
   28510:	cmp	x1, x0
   28514:	b.le	28534 <PyInit__decimal@@Base+0x1085c>
   28518:	ldr	x0, [sp, #16]
   2851c:	ldr	w0, [x0]
   28520:	orr	w1, w0, #0x100
   28524:	ldr	x0, [sp, #16]
   28528:	str	w1, [x0]
   2852c:	mov	w0, #0x7fffffff            	// #2147483647
   28530:	b	28538 <PyInit__decimal@@Base+0x10860>
   28534:	ldr	x0, [sp, #40]
   28538:	ldp	x29, x30, [sp], #48
   2853c:	ret
   28540:	stp	x29, x30, [sp, #-80]!
   28544:	mov	x29, sp
   28548:	str	x0, [sp, #40]
   2854c:	str	x1, [sp, #32]
   28550:	str	x2, [sp, #24]
   28554:	str	x3, [sp, #16]
   28558:	ldr	x0, [sp, #32]
   2855c:	str	x0, [sp, #72]
   28560:	ldr	x0, [sp, #72]
   28564:	ldrb	w0, [x0]
   28568:	and	w0, w0, #0xc
   2856c:	cmp	w0, #0x0
   28570:	b.eq	28610 <PyInit__decimal@@Base+0x10938>  // b.none
   28574:	ldr	x0, [sp, #32]
   28578:	str	x0, [sp, #64]
   2857c:	ldr	x0, [sp, #64]
   28580:	ldrb	w0, [x0]
   28584:	and	w0, w0, #0x8
   28588:	cmp	w0, #0x0
   2858c:	b.eq	28598 <PyInit__decimal@@Base+0x108c0>  // b.none
   28590:	mov	w0, #0x100                 	// #256
   28594:	b	2859c <PyInit__decimal@@Base+0x108c4>
   28598:	mov	w0, #0x0                   	// #0
   2859c:	ldr	x1, [sp, #16]
   285a0:	ldr	w1, [x1]
   285a4:	orr	w1, w0, w1
   285a8:	ldr	x0, [sp, #16]
   285ac:	str	w1, [x0]
   285b0:	ldr	x2, [sp, #16]
   285b4:	ldr	x1, [sp, #32]
   285b8:	ldr	x0, [sp, #40]
   285bc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   285c0:	ldr	x0, [sp, #40]
   285c4:	str	x0, [sp, #56]
   285c8:	ldr	x0, [sp, #56]
   285cc:	ldrb	w0, [x0]
   285d0:	and	w0, w0, #0xfffffff1
   285d4:	and	w1, w0, #0xff
   285d8:	ldr	x0, [sp, #56]
   285dc:	strb	w1, [x0]
   285e0:	ldr	x0, [sp, #56]
   285e4:	ldrb	w0, [x0]
   285e8:	orr	w0, w0, #0x4
   285ec:	and	w1, w0, #0xff
   285f0:	ldr	x0, [sp, #56]
   285f4:	strb	w1, [x0]
   285f8:	nop
   285fc:	ldr	x1, [sp, #24]
   28600:	ldr	x0, [sp, #40]
   28604:	bl	269d0 <PyInit__decimal@@Base+0xecf8>
   28608:	mov	w0, #0x1                   	// #1
   2860c:	b	28614 <PyInit__decimal@@Base+0x1093c>
   28610:	mov	w0, #0x0                   	// #0
   28614:	ldp	x29, x30, [sp], #80
   28618:	ret
   2861c:	stp	x29, x30, [sp, #-112]!
   28620:	mov	x29, sp
   28624:	str	x0, [sp, #56]
   28628:	str	x1, [sp, #48]
   2862c:	str	x2, [sp, #40]
   28630:	str	x3, [sp, #32]
   28634:	str	x4, [sp, #24]
   28638:	ldr	x0, [sp, #48]
   2863c:	ldrb	w1, [x0]
   28640:	ldr	x0, [sp, #40]
   28644:	ldrb	w0, [x0]
   28648:	orr	w0, w1, w0
   2864c:	and	w0, w0, #0xff
   28650:	and	w0, w0, #0xc
   28654:	cmp	w0, #0x0
   28658:	b.eq	28758 <PyInit__decimal@@Base+0x10a80>  // b.none
   2865c:	ldr	x0, [sp, #40]
   28660:	str	x0, [sp, #104]
   28664:	ldr	x0, [sp, #48]
   28668:	str	x0, [sp, #96]
   2866c:	ldr	x0, [sp, #96]
   28670:	ldrb	w0, [x0]
   28674:	and	w0, w0, #0x8
   28678:	cmp	w0, #0x0
   2867c:	b.eq	286a0 <PyInit__decimal@@Base+0x109c8>  // b.none
   28680:	ldr	x0, [sp, #48]
   28684:	str	x0, [sp, #104]
   28688:	ldr	x0, [sp, #24]
   2868c:	ldr	w0, [x0]
   28690:	orr	w1, w0, #0x100
   28694:	ldr	x0, [sp, #24]
   28698:	str	w1, [x0]
   2869c:	b	286f8 <PyInit__decimal@@Base+0x10a20>
   286a0:	ldr	x0, [sp, #40]
   286a4:	str	x0, [sp, #88]
   286a8:	ldr	x0, [sp, #88]
   286ac:	ldrb	w0, [x0]
   286b0:	and	w0, w0, #0x8
   286b4:	cmp	w0, #0x0
   286b8:	b.eq	286d4 <PyInit__decimal@@Base+0x109fc>  // b.none
   286bc:	ldr	x0, [sp, #24]
   286c0:	ldr	w0, [x0]
   286c4:	orr	w1, w0, #0x100
   286c8:	ldr	x0, [sp, #24]
   286cc:	str	w1, [x0]
   286d0:	b	286f8 <PyInit__decimal@@Base+0x10a20>
   286d4:	ldr	x0, [sp, #48]
   286d8:	str	x0, [sp, #80]
   286dc:	ldr	x0, [sp, #80]
   286e0:	ldrb	w0, [x0]
   286e4:	and	w0, w0, #0x4
   286e8:	cmp	w0, #0x0
   286ec:	b.eq	286f8 <PyInit__decimal@@Base+0x10a20>  // b.none
   286f0:	ldr	x0, [sp, #48]
   286f4:	str	x0, [sp, #104]
   286f8:	ldr	x2, [sp, #24]
   286fc:	ldr	x1, [sp, #104]
   28700:	ldr	x0, [sp, #56]
   28704:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   28708:	ldr	x0, [sp, #56]
   2870c:	str	x0, [sp, #72]
   28710:	ldr	x0, [sp, #72]
   28714:	ldrb	w0, [x0]
   28718:	and	w0, w0, #0xfffffff1
   2871c:	and	w1, w0, #0xff
   28720:	ldr	x0, [sp, #72]
   28724:	strb	w1, [x0]
   28728:	ldr	x0, [sp, #72]
   2872c:	ldrb	w0, [x0]
   28730:	orr	w0, w0, #0x4
   28734:	and	w1, w0, #0xff
   28738:	ldr	x0, [sp, #72]
   2873c:	strb	w1, [x0]
   28740:	nop
   28744:	ldr	x1, [sp, #32]
   28748:	ldr	x0, [sp, #56]
   2874c:	bl	269d0 <PyInit__decimal@@Base+0xecf8>
   28750:	mov	w0, #0x1                   	// #1
   28754:	b	2875c <PyInit__decimal@@Base+0x10a84>
   28758:	mov	w0, #0x0                   	// #0
   2875c:	ldp	x29, x30, [sp], #112
   28760:	ret
   28764:	stp	x29, x30, [sp, #-128]!
   28768:	mov	x29, sp
   2876c:	str	x0, [sp, #56]
   28770:	str	x1, [sp, #48]
   28774:	str	x2, [sp, #40]
   28778:	str	x3, [sp, #32]
   2877c:	str	x4, [sp, #24]
   28780:	str	x5, [sp, #16]
   28784:	ldr	x0, [sp, #48]
   28788:	ldrb	w1, [x0]
   2878c:	ldr	x0, [sp, #40]
   28790:	ldrb	w0, [x0]
   28794:	orr	w0, w1, w0
   28798:	and	w1, w0, #0xff
   2879c:	ldr	x0, [sp, #32]
   287a0:	ldrb	w0, [x0]
   287a4:	orr	w0, w1, w0
   287a8:	and	w0, w0, #0xff
   287ac:	and	w0, w0, #0xc
   287b0:	cmp	w0, #0x0
   287b4:	b.eq	28918 <PyInit__decimal@@Base+0x10c40>  // b.none
   287b8:	ldr	x0, [sp, #32]
   287bc:	str	x0, [sp, #120]
   287c0:	ldr	x0, [sp, #48]
   287c4:	str	x0, [sp, #112]
   287c8:	ldr	x0, [sp, #112]
   287cc:	ldrb	w0, [x0]
   287d0:	and	w0, w0, #0x8
   287d4:	cmp	w0, #0x0
   287d8:	b.eq	287fc <PyInit__decimal@@Base+0x10b24>  // b.none
   287dc:	ldr	x0, [sp, #48]
   287e0:	str	x0, [sp, #120]
   287e4:	ldr	x0, [sp, #16]
   287e8:	ldr	w0, [x0]
   287ec:	orr	w1, w0, #0x100
   287f0:	ldr	x0, [sp, #16]
   287f4:	str	w1, [x0]
   287f8:	b	288b8 <PyInit__decimal@@Base+0x10be0>
   287fc:	ldr	x0, [sp, #40]
   28800:	str	x0, [sp, #104]
   28804:	ldr	x0, [sp, #104]
   28808:	ldrb	w0, [x0]
   2880c:	and	w0, w0, #0x8
   28810:	cmp	w0, #0x0
   28814:	b.eq	28838 <PyInit__decimal@@Base+0x10b60>  // b.none
   28818:	ldr	x0, [sp, #40]
   2881c:	str	x0, [sp, #120]
   28820:	ldr	x0, [sp, #16]
   28824:	ldr	w0, [x0]
   28828:	orr	w1, w0, #0x100
   2882c:	ldr	x0, [sp, #16]
   28830:	str	w1, [x0]
   28834:	b	288b8 <PyInit__decimal@@Base+0x10be0>
   28838:	ldr	x0, [sp, #32]
   2883c:	str	x0, [sp, #96]
   28840:	ldr	x0, [sp, #96]
   28844:	ldrb	w0, [x0]
   28848:	and	w0, w0, #0x8
   2884c:	cmp	w0, #0x0
   28850:	b.eq	2886c <PyInit__decimal@@Base+0x10b94>  // b.none
   28854:	ldr	x0, [sp, #16]
   28858:	ldr	w0, [x0]
   2885c:	orr	w1, w0, #0x100
   28860:	ldr	x0, [sp, #16]
   28864:	str	w1, [x0]
   28868:	b	288b8 <PyInit__decimal@@Base+0x10be0>
   2886c:	ldr	x0, [sp, #48]
   28870:	str	x0, [sp, #88]
   28874:	ldr	x0, [sp, #88]
   28878:	ldrb	w0, [x0]
   2887c:	and	w0, w0, #0x4
   28880:	cmp	w0, #0x0
   28884:	b.eq	28894 <PyInit__decimal@@Base+0x10bbc>  // b.none
   28888:	ldr	x0, [sp, #48]
   2888c:	str	x0, [sp, #120]
   28890:	b	288b8 <PyInit__decimal@@Base+0x10be0>
   28894:	ldr	x0, [sp, #40]
   28898:	str	x0, [sp, #80]
   2889c:	ldr	x0, [sp, #80]
   288a0:	ldrb	w0, [x0]
   288a4:	and	w0, w0, #0x4
   288a8:	cmp	w0, #0x0
   288ac:	b.eq	288b8 <PyInit__decimal@@Base+0x10be0>  // b.none
   288b0:	ldr	x0, [sp, #40]
   288b4:	str	x0, [sp, #120]
   288b8:	ldr	x2, [sp, #16]
   288bc:	ldr	x1, [sp, #120]
   288c0:	ldr	x0, [sp, #56]
   288c4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   288c8:	ldr	x0, [sp, #56]
   288cc:	str	x0, [sp, #72]
   288d0:	ldr	x0, [sp, #72]
   288d4:	ldrb	w0, [x0]
   288d8:	and	w0, w0, #0xfffffff1
   288dc:	and	w1, w0, #0xff
   288e0:	ldr	x0, [sp, #72]
   288e4:	strb	w1, [x0]
   288e8:	ldr	x0, [sp, #72]
   288ec:	ldrb	w0, [x0]
   288f0:	orr	w0, w0, #0x4
   288f4:	and	w1, w0, #0xff
   288f8:	ldr	x0, [sp, #72]
   288fc:	strb	w1, [x0]
   28900:	nop
   28904:	ldr	x1, [sp, #24]
   28908:	ldr	x0, [sp, #56]
   2890c:	bl	269d0 <PyInit__decimal@@Base+0xecf8>
   28910:	mov	w0, #0x1                   	// #1
   28914:	b	2891c <PyInit__decimal@@Base+0x10c44>
   28918:	mov	w0, #0x0                   	// #0
   2891c:	ldp	x29, x30, [sp], #128
   28920:	ret
   28924:	sub	sp, sp, #0x50
   28928:	str	x0, [sp, #24]
   2892c:	str	x1, [sp, #16]
   28930:	str	x2, [sp, #8]
   28934:	ldr	x0, [sp, #8]
   28938:	ldr	w0, [x0, #36]
   2893c:	cmp	w0, #0x8
   28940:	b.eq	289bc <PyInit__decimal@@Base+0x10ce4>  // b.none
   28944:	cmp	w0, #0x8
   28948:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2894c:	cmp	w0, #0x7
   28950:	b.eq	28ad0 <PyInit__decimal@@Base+0x10df8>  // b.none
   28954:	cmp	w0, #0x7
   28958:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2895c:	cmp	w0, #0x6
   28960:	b.eq	289d8 <PyInit__decimal@@Base+0x10d00>  // b.none
   28964:	cmp	w0, #0x6
   28968:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2896c:	cmp	w0, #0x5
   28970:	b.eq	28aa8 <PyInit__decimal@@Base+0x10dd0>  // b.none
   28974:	cmp	w0, #0x5
   28978:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2897c:	cmp	w0, #0x4
   28980:	b.eq	289c4 <PyInit__decimal@@Base+0x10cec>  // b.none
   28984:	cmp	w0, #0x4
   28988:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2898c:	cmp	w0, #0x3
   28990:	b.eq	28a64 <PyInit__decimal@@Base+0x10d8c>  // b.none
   28994:	cmp	w0, #0x3
   28998:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   2899c:	cmp	w0, #0x2
   289a0:	b.eq	28a2c <PyInit__decimal@@Base+0x10d54>  // b.none
   289a4:	cmp	w0, #0x2
   289a8:	b.gt	28b44 <PyInit__decimal@@Base+0x10e6c>
   289ac:	cmp	w0, #0x0
   289b0:	b.eq	28abc <PyInit__decimal@@Base+0x10de4>  // b.none
   289b4:	cmp	w0, #0x1
   289b8:	b.ne	28b44 <PyInit__decimal@@Base+0x10e6c>  // b.any
   289bc:	mov	w0, #0x0                   	// #0
   289c0:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   289c4:	ldr	x0, [sp, #16]
   289c8:	cmp	x0, #0x4
   289cc:	cset	w0, hi  // hi = pmore
   289d0:	and	w0, w0, #0xff
   289d4:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   289d8:	ldr	x0, [sp, #16]
   289dc:	cmp	x0, #0x5
   289e0:	b.hi	28a1c <PyInit__decimal@@Base+0x10d44>  // b.pmore
   289e4:	ldr	x0, [sp, #16]
   289e8:	cmp	x0, #0x5
   289ec:	b.ne	28a24 <PyInit__decimal@@Base+0x10d4c>  // b.any
   289f0:	ldr	x0, [sp, #24]
   289f4:	str	x0, [sp, #64]
   289f8:	ldr	x0, [sp, #64]
   289fc:	ldr	x0, [x0, #40]
   28a00:	ldr	x0, [x0]
   28a04:	str	x0, [sp, #56]
   28a08:	ldr	x0, [sp, #56]
   28a0c:	and	w0, w0, #0x1
   28a10:	nop
   28a14:	cmp	w0, #0x0
   28a18:	b.eq	28a24 <PyInit__decimal@@Base+0x10d4c>  // b.none
   28a1c:	mov	w0, #0x1                   	// #1
   28a20:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28a24:	mov	w0, #0x0                   	// #0
   28a28:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28a2c:	ldr	x0, [sp, #16]
   28a30:	cmp	x0, #0x0
   28a34:	b.eq	28a5c <PyInit__decimal@@Base+0x10d84>  // b.none
   28a38:	ldr	x0, [sp, #24]
   28a3c:	str	x0, [sp, #48]
   28a40:	ldr	x0, [sp, #48]
   28a44:	ldrb	w0, [x0]
   28a48:	and	w0, w0, #0x1
   28a4c:	cmp	w0, #0x0
   28a50:	b.ne	28a5c <PyInit__decimal@@Base+0x10d84>  // b.any
   28a54:	mov	w0, #0x1                   	// #1
   28a58:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28a5c:	mov	w0, #0x0                   	// #0
   28a60:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28a64:	ldr	x0, [sp, #16]
   28a68:	cmp	x0, #0x0
   28a6c:	b.eq	28aa0 <PyInit__decimal@@Base+0x10dc8>  // b.none
   28a70:	ldr	x0, [sp, #24]
   28a74:	str	x0, [sp, #40]
   28a78:	ldr	x0, [sp, #40]
   28a7c:	ldrb	w0, [x0]
   28a80:	and	w0, w0, #0x1
   28a84:	cmp	w0, #0x0
   28a88:	cset	w0, eq  // eq = none
   28a8c:	and	w0, w0, #0xff
   28a90:	cmp	w0, #0x0
   28a94:	b.ne	28aa0 <PyInit__decimal@@Base+0x10dc8>  // b.any
   28a98:	mov	w0, #0x1                   	// #1
   28a9c:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28aa0:	mov	w0, #0x0                   	// #0
   28aa4:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28aa8:	ldr	x0, [sp, #16]
   28aac:	cmp	x0, #0x5
   28ab0:	cset	w0, hi  // hi = pmore
   28ab4:	and	w0, w0, #0xff
   28ab8:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28abc:	ldr	x0, [sp, #16]
   28ac0:	cmp	x0, #0x0
   28ac4:	cset	w0, ne  // ne = any
   28ac8:	and	w0, w0, #0xff
   28acc:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28ad0:	ldr	x0, [sp, #24]
   28ad4:	ldr	x0, [x0, #40]
   28ad8:	ldr	x0, [x0]
   28adc:	str	x0, [sp, #32]
   28ae0:	ldr	x2, [sp, #32]
   28ae4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   28ae8:	movk	x0, #0xcccd
   28aec:	umulh	x0, x2, x0
   28af0:	lsr	x1, x0, #3
   28af4:	mov	x0, x1
   28af8:	lsl	x0, x0, #2
   28afc:	add	x0, x0, x1
   28b00:	lsl	x0, x0, #1
   28b04:	sub	x1, x2, x0
   28b08:	mov	w0, w1
   28b0c:	str	w0, [sp, #76]
   28b10:	ldr	x0, [sp, #16]
   28b14:	cmp	x0, #0x0
   28b18:	b.eq	28b3c <PyInit__decimal@@Base+0x10e64>  // b.none
   28b1c:	ldr	w0, [sp, #76]
   28b20:	cmp	w0, #0x0
   28b24:	b.eq	28b34 <PyInit__decimal@@Base+0x10e5c>  // b.none
   28b28:	ldr	w0, [sp, #76]
   28b2c:	cmp	w0, #0x5
   28b30:	b.ne	28b3c <PyInit__decimal@@Base+0x10e64>  // b.any
   28b34:	mov	w0, #0x1                   	// #1
   28b38:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28b3c:	mov	w0, #0x0                   	// #0
   28b40:	b	28b48 <PyInit__decimal@@Base+0x10e70>
   28b44:	mov	w0, #0x0                   	// #0
   28b48:	add	sp, sp, #0x50
   28b4c:	ret
   28b50:	stp	x29, x30, [sp, #-64]!
   28b54:	mov	x29, sp
   28b58:	str	x0, [sp, #40]
   28b5c:	str	x1, [sp, #32]
   28b60:	str	x2, [sp, #24]
   28b64:	str	x3, [sp, #16]
   28b68:	ldr	x2, [sp, #24]
   28b6c:	ldr	x1, [sp, #32]
   28b70:	ldr	x0, [sp, #40]
   28b74:	bl	28924 <PyInit__decimal@@Base+0x10c4c>
   28b78:	cmp	w0, #0x0
   28b7c:	b.eq	28c60 <PyInit__decimal@@Base+0x10f88>  // b.none
   28b80:	ldr	x0, [sp, #40]
   28b84:	ldr	x2, [x0, #40]
   28b88:	ldr	x0, [sp, #40]
   28b8c:	ldr	x0, [x0, #24]
   28b90:	mov	x1, x0
   28b94:	mov	x0, x2
   28b98:	bl	19fd8 <PyInit__decimal@@Base+0x2300>
   28b9c:	str	x0, [sp, #56]
   28ba0:	ldr	x0, [sp, #56]
   28ba4:	cmp	x0, #0x0
   28ba8:	b.eq	28c00 <PyInit__decimal@@Base+0x10f28>  // b.none
   28bac:	ldr	x0, [sp, #40]
   28bb0:	ldr	x1, [x0, #40]
   28bb4:	ldr	x0, [sp, #40]
   28bb8:	ldr	x0, [x0, #24]
   28bbc:	lsl	x0, x0, #3
   28bc0:	sub	x0, x0, #0x8
   28bc4:	add	x0, x1, x0
   28bc8:	adrp	x1, 48000 <PyInit__decimal@@Base+0x30328>
   28bcc:	add	x1, x1, #0xdb0
   28bd0:	ldr	x1, [x1, #144]
   28bd4:	str	x1, [x0]
   28bd8:	ldr	x0, [sp, #40]
   28bdc:	ldr	x0, [x0, #8]
   28be0:	add	x1, x0, #0x1
   28be4:	ldr	x0, [sp, #40]
   28be8:	str	x1, [x0, #8]
   28bec:	ldr	x2, [sp, #16]
   28bf0:	ldr	x1, [sp, #24]
   28bf4:	ldr	x0, [sp, #40]
   28bf8:	bl	28f6c <PyInit__decimal@@Base+0x11294>
   28bfc:	b	28c60 <PyInit__decimal@@Base+0x10f88>
   28c00:	ldr	x0, [sp, #40]
   28c04:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   28c08:	ldr	x0, [sp, #40]
   28c0c:	ldr	x1, [x0, #16]
   28c10:	ldr	x0, [sp, #24]
   28c14:	ldr	x0, [x0]
   28c18:	cmp	x1, x0
   28c1c:	b.le	28c60 <PyInit__decimal@@Base+0x10f88>
   28c20:	mov	x1, #0x1                   	// #1
   28c24:	ldr	x0, [sp, #40]
   28c28:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   28c2c:	ldr	x0, [sp, #40]
   28c30:	ldr	x0, [x0, #8]
   28c34:	add	x1, x0, #0x1
   28c38:	ldr	x0, [sp, #40]
   28c3c:	str	x1, [x0, #8]
   28c40:	ldr	x0, [sp, #24]
   28c44:	ldr	x1, [x0]
   28c48:	ldr	x0, [sp, #40]
   28c4c:	str	x1, [x0, #16]
   28c50:	ldr	x2, [sp, #16]
   28c54:	ldr	x1, [sp, #24]
   28c58:	ldr	x0, [sp, #40]
   28c5c:	bl	28f6c <PyInit__decimal@@Base+0x11294>
   28c60:	ldp	x29, x30, [sp], #64
   28c64:	ret
   28c68:	stp	x29, x30, [sp, #-96]!
   28c6c:	mov	x29, sp
   28c70:	str	x0, [sp, #40]
   28c74:	str	x1, [sp, #32]
   28c78:	str	x2, [sp, #24]
   28c7c:	str	x3, [sp, #16]
   28c80:	ldr	x2, [sp, #24]
   28c84:	ldr	x1, [sp, #32]
   28c88:	ldr	x0, [sp, #40]
   28c8c:	bl	28924 <PyInit__decimal@@Base+0x10c4c>
   28c90:	cmp	w0, #0x0
   28c94:	b.eq	28dc8 <PyInit__decimal@@Base+0x110f0>  // b.none
   28c98:	ldr	x0, [sp, #40]
   28c9c:	ldr	x2, [x0, #40]
   28ca0:	ldr	x0, [sp, #40]
   28ca4:	ldr	x0, [x0, #24]
   28ca8:	mov	x1, x0
   28cac:	mov	x0, x2
   28cb0:	bl	19fd8 <PyInit__decimal@@Base+0x2300>
   28cb4:	str	x0, [sp, #88]
   28cb8:	ldr	x0, [sp, #88]
   28cbc:	cmp	x0, #0x0
   28cc0:	b.eq	28db8 <PyInit__decimal@@Base+0x110e0>  // b.none
   28cc4:	ldr	x0, [sp, #40]
   28cc8:	ldr	x0, [x0, #24]
   28ccc:	add	x0, x0, #0x1
   28cd0:	ldr	x1, [sp, #40]
   28cd4:	str	x1, [sp, #80]
   28cd8:	str	x0, [sp, #72]
   28cdc:	ldr	x0, [sp, #16]
   28ce0:	str	x0, [sp, #64]
   28ce4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   28ce8:	add	x0, x0, #0x6d8
   28cec:	ldr	x0, [x0]
   28cf0:	ldr	x2, [sp, #72]
   28cf4:	ldr	x1, [sp, #72]
   28cf8:	cmp	x2, x0
   28cfc:	csel	x0, x1, x0, ge  // ge = tcont
   28d00:	str	x0, [sp, #72]
   28d04:	ldr	x0, [sp, #80]
   28d08:	ldr	x0, [x0, #32]
   28d0c:	ldr	x1, [sp, #72]
   28d10:	cmp	x1, x0
   28d14:	b.ne	28d20 <PyInit__decimal@@Base+0x11048>  // b.any
   28d18:	mov	w0, #0x1                   	// #1
   28d1c:	b	28d7c <PyInit__decimal@@Base+0x110a4>
   28d20:	ldr	x0, [sp, #80]
   28d24:	str	x0, [sp, #56]
   28d28:	ldr	x0, [sp, #56]
   28d2c:	ldrb	w0, [x0]
   28d30:	and	w0, w0, #0x20
   28d34:	cmp	w0, #0x0
   28d38:	b.eq	28d6c <PyInit__decimal@@Base+0x11094>  // b.none
   28d3c:	ldr	x0, [sp, #80]
   28d40:	ldr	x0, [x0, #32]
   28d44:	ldr	x1, [sp, #72]
   28d48:	cmp	x1, x0
   28d4c:	b.le	28d64 <PyInit__decimal@@Base+0x1108c>
   28d50:	ldr	x2, [sp, #64]
   28d54:	ldr	x1, [sp, #72]
   28d58:	ldr	x0, [sp, #80]
   28d5c:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   28d60:	b	28d7c <PyInit__decimal@@Base+0x110a4>
   28d64:	mov	w0, #0x1                   	// #1
   28d68:	b	28d7c <PyInit__decimal@@Base+0x110a4>
   28d6c:	ldr	x2, [sp, #64]
   28d70:	ldr	x1, [sp, #72]
   28d74:	ldr	x0, [sp, #80]
   28d78:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   28d7c:	cmp	w0, #0x0
   28d80:	b.eq	28dc4 <PyInit__decimal@@Base+0x110ec>  // b.none
   28d84:	ldr	x0, [sp, #40]
   28d88:	ldr	x1, [x0, #40]
   28d8c:	ldr	x0, [sp, #40]
   28d90:	ldr	x0, [x0, #24]
   28d94:	lsl	x0, x0, #3
   28d98:	add	x0, x1, x0
   28d9c:	mov	x1, #0x1                   	// #1
   28da0:	str	x1, [x0]
   28da4:	ldr	x0, [sp, #40]
   28da8:	ldr	x0, [x0, #24]
   28dac:	add	x1, x0, #0x1
   28db0:	ldr	x0, [sp, #40]
   28db4:	str	x1, [x0, #24]
   28db8:	ldr	x0, [sp, #40]
   28dbc:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   28dc0:	b	28dc8 <PyInit__decimal@@Base+0x110f0>
   28dc4:	nop
   28dc8:	ldp	x29, x30, [sp], #96
   28dcc:	ret
   28dd0:	stp	x29, x30, [sp, #-96]!
   28dd4:	mov	x29, sp
   28dd8:	str	x0, [sp, #40]
   28ddc:	str	x1, [sp, #32]
   28de0:	str	x2, [sp, #24]
   28de4:	str	x3, [sp, #16]
   28de8:	ldr	x2, [sp, #24]
   28dec:	ldr	x1, [sp, #32]
   28df0:	ldr	x0, [sp, #40]
   28df4:	bl	28924 <PyInit__decimal@@Base+0x10c4c>
   28df8:	cmp	w0, #0x0
   28dfc:	b.eq	28f60 <PyInit__decimal@@Base+0x11288>  // b.none
   28e00:	ldr	x0, [sp, #40]
   28e04:	ldr	x2, [x0, #40]
   28e08:	ldr	x0, [sp, #40]
   28e0c:	ldr	x0, [x0, #24]
   28e10:	mov	x1, x0
   28e14:	mov	x0, x2
   28e18:	bl	19fd8 <PyInit__decimal@@Base+0x2300>
   28e1c:	str	x0, [sp, #88]
   28e20:	ldr	x0, [sp, #88]
   28e24:	cmp	x0, #0x0
   28e28:	b.eq	28f28 <PyInit__decimal@@Base+0x11250>  // b.none
   28e2c:	ldr	x0, [sp, #40]
   28e30:	ldr	x0, [x0, #24]
   28e34:	add	x0, x0, #0x1
   28e38:	ldr	x1, [sp, #40]
   28e3c:	str	x1, [sp, #80]
   28e40:	str	x0, [sp, #72]
   28e44:	ldr	x0, [sp, #16]
   28e48:	str	x0, [sp, #64]
   28e4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   28e50:	add	x0, x0, #0x6d8
   28e54:	ldr	x0, [x0]
   28e58:	ldr	x2, [sp, #72]
   28e5c:	ldr	x1, [sp, #72]
   28e60:	cmp	x2, x0
   28e64:	csel	x0, x1, x0, ge  // ge = tcont
   28e68:	str	x0, [sp, #72]
   28e6c:	ldr	x0, [sp, #80]
   28e70:	ldr	x0, [x0, #32]
   28e74:	ldr	x1, [sp, #72]
   28e78:	cmp	x1, x0
   28e7c:	b.ne	28e88 <PyInit__decimal@@Base+0x111b0>  // b.any
   28e80:	mov	w0, #0x1                   	// #1
   28e84:	b	28ee4 <PyInit__decimal@@Base+0x1120c>
   28e88:	ldr	x0, [sp, #80]
   28e8c:	str	x0, [sp, #56]
   28e90:	ldr	x0, [sp, #56]
   28e94:	ldrb	w0, [x0]
   28e98:	and	w0, w0, #0x20
   28e9c:	cmp	w0, #0x0
   28ea0:	b.eq	28ed4 <PyInit__decimal@@Base+0x111fc>  // b.none
   28ea4:	ldr	x0, [sp, #80]
   28ea8:	ldr	x0, [x0, #32]
   28eac:	ldr	x1, [sp, #72]
   28eb0:	cmp	x1, x0
   28eb4:	b.le	28ecc <PyInit__decimal@@Base+0x111f4>
   28eb8:	ldr	x2, [sp, #64]
   28ebc:	ldr	x1, [sp, #72]
   28ec0:	ldr	x0, [sp, #80]
   28ec4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   28ec8:	b	28ee4 <PyInit__decimal@@Base+0x1120c>
   28ecc:	mov	w0, #0x1                   	// #1
   28ed0:	b	28ee4 <PyInit__decimal@@Base+0x1120c>
   28ed4:	ldr	x2, [sp, #64]
   28ed8:	ldr	x1, [sp, #72]
   28edc:	ldr	x0, [sp, #80]
   28ee0:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   28ee4:	cmp	w0, #0x0
   28ee8:	b.ne	28ef4 <PyInit__decimal@@Base+0x1121c>  // b.any
   28eec:	mov	w0, #0x0                   	// #0
   28ef0:	b	28f64 <PyInit__decimal@@Base+0x1128c>
   28ef4:	ldr	x0, [sp, #40]
   28ef8:	ldr	x1, [x0, #40]
   28efc:	ldr	x0, [sp, #40]
   28f00:	ldr	x0, [x0, #24]
   28f04:	lsl	x0, x0, #3
   28f08:	add	x0, x1, x0
   28f0c:	mov	x1, #0x1                   	// #1
   28f10:	str	x1, [x0]
   28f14:	ldr	x0, [sp, #40]
   28f18:	ldr	x0, [x0, #24]
   28f1c:	add	x1, x0, #0x1
   28f20:	ldr	x0, [sp, #40]
   28f24:	str	x1, [x0, #24]
   28f28:	ldr	x0, [sp, #40]
   28f2c:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   28f30:	ldr	x0, [sp, #40]
   28f34:	ldr	x1, [x0, #16]
   28f38:	ldr	x0, [sp, #24]
   28f3c:	ldr	x0, [x0]
   28f40:	cmp	x1, x0
   28f44:	b.le	28f60 <PyInit__decimal@@Base+0x11288>
   28f48:	ldr	x2, [sp, #16]
   28f4c:	mov	w1, #0x100                 	// #256
   28f50:	ldr	x0, [sp, #40]
   28f54:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   28f58:	mov	w0, #0x0                   	// #0
   28f5c:	b	28f64 <PyInit__decimal@@Base+0x1128c>
   28f60:	mov	w0, #0x1                   	// #1
   28f64:	ldp	x29, x30, [sp], #96
   28f68:	ret
   28f6c:	stp	x29, x30, [sp, #-208]!
   28f70:	mov	x29, sp
   28f74:	str	x0, [sp, #40]
   28f78:	str	x1, [sp, #32]
   28f7c:	str	x2, [sp, #24]
   28f80:	ldr	x0, [sp, #40]
   28f84:	str	x0, [sp, #168]
   28f88:	ldr	x0, [sp, #168]
   28f8c:	ldr	x1, [x0, #8]
   28f90:	ldr	x0, [sp, #168]
   28f94:	ldr	x0, [x0, #16]
   28f98:	add	x0, x1, x0
   28f9c:	sub	x0, x0, #0x1
   28fa0:	str	x0, [sp, #200]
   28fa4:	ldr	x0, [sp, #32]
   28fa8:	ldr	x0, [x0, #8]
   28fac:	ldr	x1, [sp, #200]
   28fb0:	cmp	x1, x0
   28fb4:	b.le	2921c <PyInit__decimal@@Base+0x11544>
   28fb8:	ldr	x0, [sp, #40]
   28fbc:	str	x0, [sp, #160]
   28fc0:	ldr	x0, [sp, #160]
   28fc4:	str	x0, [sp, #152]
   28fc8:	ldr	x0, [sp, #152]
   28fcc:	ldr	x1, [x0, #40]
   28fd0:	ldr	x0, [sp, #152]
   28fd4:	ldr	x0, [x0, #24]
   28fd8:	lsl	x0, x0, #3
   28fdc:	sub	x0, x0, #0x8
   28fe0:	add	x0, x1, x0
   28fe4:	ldr	x0, [x0]
   28fe8:	cmp	x0, #0x0
   28fec:	cset	w0, eq  // eq = none
   28ff0:	and	w0, w0, #0xff
   28ff4:	cmp	w0, #0x0
   28ff8:	b.eq	2905c <PyInit__decimal@@Base+0x11384>  // b.none
   28ffc:	ldr	x0, [sp, #32]
   29000:	ldr	x1, [x0, #8]
   29004:	ldr	x0, [sp, #40]
   29008:	str	x1, [x0, #8]
   2900c:	ldr	x0, [sp, #32]
   29010:	ldr	w0, [x0, #40]
   29014:	cmp	w0, #0x0
   29018:	b.eq	2903c <PyInit__decimal@@Base+0x11364>  // b.none
   2901c:	ldr	x0, [sp, #40]
   29020:	ldr	x1, [x0, #8]
   29024:	ldr	x0, [sp, #32]
   29028:	ldr	x0, [x0]
   2902c:	sub	x0, x1, x0
   29030:	add	x1, x0, #0x1
   29034:	ldr	x0, [sp, #40]
   29038:	str	x1, [x0, #8]
   2903c:	ldr	x0, [sp, #40]
   29040:	bl	264ec <PyInit__decimal@@Base+0xe814>
   29044:	ldr	x0, [sp, #24]
   29048:	ldr	w0, [x0]
   2904c:	orr	w1, w0, #0x1
   29050:	ldr	x0, [sp, #24]
   29054:	str	w1, [x0]
   29058:	b	29520 <PyInit__decimal@@Base+0x11848>
   2905c:	ldr	x0, [sp, #32]
   29060:	ldr	w0, [x0, #36]
   29064:	cmp	w0, #0x8
   29068:	b.eq	290c8 <PyInit__decimal@@Base+0x113f0>  // b.none
   2906c:	cmp	w0, #0x8
   29070:	b.gt	291fc <PyInit__decimal@@Base+0x11524>
   29074:	cmp	w0, #0x7
   29078:	b.eq	290f4 <PyInit__decimal@@Base+0x1141c>  // b.none
   2907c:	cmp	w0, #0x7
   29080:	b.gt	291fc <PyInit__decimal@@Base+0x11524>
   29084:	cmp	w0, #0x6
   29088:	b.gt	291fc <PyInit__decimal@@Base+0x11524>
   2908c:	cmp	w0, #0x4
   29090:	b.ge	290c8 <PyInit__decimal@@Base+0x113f0>  // b.tcont
   29094:	cmp	w0, #0x3
   29098:	b.eq	2918c <PyInit__decimal@@Base+0x114b4>  // b.none
   2909c:	cmp	w0, #0x3
   290a0:	b.gt	291fc <PyInit__decimal@@Base+0x11524>
   290a4:	cmp	w0, #0x2
   290a8:	b.eq	29128 <PyInit__decimal@@Base+0x11450>  // b.none
   290ac:	cmp	w0, #0x2
   290b0:	b.gt	291fc <PyInit__decimal@@Base+0x11524>
   290b4:	cmp	w0, #0x0
   290b8:	b.eq	290c8 <PyInit__decimal@@Base+0x113f0>  // b.none
   290bc:	cmp	w0, #0x1
   290c0:	b.eq	290f4 <PyInit__decimal@@Base+0x1141c>  // b.none
   290c4:	b	291fc <PyInit__decimal@@Base+0x11524>
   290c8:	ldr	x0, [sp, #40]
   290cc:	str	x0, [sp, #144]
   290d0:	ldr	x0, [sp, #144]
   290d4:	ldrb	w0, [x0]
   290d8:	and	w0, w0, #0x1
   290dc:	and	w0, w0, #0xff
   290e0:	mov	w2, #0x2                   	// #2
   290e4:	mov	w1, w0
   290e8:	ldr	x0, [sp, #40]
   290ec:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   290f0:	b	29200 <PyInit__decimal@@Base+0x11528>
   290f4:	ldr	x2, [sp, #24]
   290f8:	ldr	x1, [sp, #32]
   290fc:	ldr	x0, [sp, #40]
   29100:	bl	265c8 <PyInit__decimal@@Base+0xe8f0>
   29104:	ldr	x0, [sp, #32]
   29108:	ldr	x1, [x0, #8]
   2910c:	ldr	x0, [sp, #32]
   29110:	ldr	x0, [x0]
   29114:	sub	x0, x1, x0
   29118:	add	x1, x0, #0x1
   2911c:	ldr	x0, [sp, #40]
   29120:	str	x1, [x0, #8]
   29124:	b	29200 <PyInit__decimal@@Base+0x11528>
   29128:	ldr	x0, [sp, #40]
   2912c:	str	x0, [sp, #136]
   29130:	ldr	x0, [sp, #136]
   29134:	ldrb	w0, [x0]
   29138:	and	w0, w0, #0x1
   2913c:	cmp	w0, #0x0
   29140:	b.eq	29178 <PyInit__decimal@@Base+0x114a0>  // b.none
   29144:	ldr	x2, [sp, #24]
   29148:	ldr	x1, [sp, #32]
   2914c:	ldr	x0, [sp, #40]
   29150:	bl	265c8 <PyInit__decimal@@Base+0xe8f0>
   29154:	ldr	x0, [sp, #32]
   29158:	ldr	x1, [x0, #8]
   2915c:	ldr	x0, [sp, #32]
   29160:	ldr	x0, [x0]
   29164:	sub	x0, x1, x0
   29168:	add	x1, x0, #0x1
   2916c:	ldr	x0, [sp, #40]
   29170:	str	x1, [x0, #8]
   29174:	b	29200 <PyInit__decimal@@Base+0x11528>
   29178:	mov	w2, #0x2                   	// #2
   2917c:	mov	w1, #0x0                   	// #0
   29180:	ldr	x0, [sp, #40]
   29184:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   29188:	b	29200 <PyInit__decimal@@Base+0x11528>
   2918c:	ldr	x0, [sp, #40]
   29190:	str	x0, [sp, #128]
   29194:	ldr	x0, [sp, #128]
   29198:	ldrb	w0, [x0]
   2919c:	and	w0, w0, #0x1
   291a0:	cmp	w0, #0x0
   291a4:	cset	w0, eq  // eq = none
   291a8:	and	w0, w0, #0xff
   291ac:	cmp	w0, #0x0
   291b0:	b.eq	291e8 <PyInit__decimal@@Base+0x11510>  // b.none
   291b4:	ldr	x2, [sp, #24]
   291b8:	ldr	x1, [sp, #32]
   291bc:	ldr	x0, [sp, #40]
   291c0:	bl	265c8 <PyInit__decimal@@Base+0xe8f0>
   291c4:	ldr	x0, [sp, #32]
   291c8:	ldr	x1, [x0, #8]
   291cc:	ldr	x0, [sp, #32]
   291d0:	ldr	x0, [x0]
   291d4:	sub	x0, x1, x0
   291d8:	add	x1, x0, #0x1
   291dc:	ldr	x0, [sp, #40]
   291e0:	str	x1, [x0, #8]
   291e4:	b	29200 <PyInit__decimal@@Base+0x11528>
   291e8:	mov	w2, #0x2                   	// #2
   291ec:	mov	w1, #0x1                   	// #1
   291f0:	ldr	x0, [sp, #40]
   291f4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   291f8:	b	29200 <PyInit__decimal@@Base+0x11528>
   291fc:	bl	6860 <abort@plt>
   29200:	ldr	x0, [sp, #24]
   29204:	ldr	w1, [x0]
   29208:	mov	w0, #0x1840                	// #6208
   2920c:	orr	w1, w1, w0
   29210:	ldr	x0, [sp, #24]
   29214:	str	w1, [x0]
   29218:	b	29520 <PyInit__decimal@@Base+0x11848>
   2921c:	ldr	x0, [sp, #32]
   29220:	ldr	w0, [x0, #40]
   29224:	cmp	w0, #0x0
   29228:	b.eq	29344 <PyInit__decimal@@Base+0x1166c>  // b.none
   2922c:	ldr	x0, [sp, #40]
   29230:	ldr	x1, [x0, #8]
   29234:	ldr	x0, [sp, #32]
   29238:	str	x0, [sp, #120]
   2923c:	ldr	x0, [sp, #120]
   29240:	ldr	x2, [x0, #8]
   29244:	ldr	x0, [sp, #120]
   29248:	ldr	x0, [x0]
   2924c:	sub	x0, x2, x0
   29250:	add	x0, x0, #0x1
   29254:	cmp	x1, x0
   29258:	b.le	29344 <PyInit__decimal@@Base+0x1166c>
   2925c:	ldr	x0, [sp, #40]
   29260:	ldr	x1, [x0, #8]
   29264:	ldr	x0, [sp, #32]
   29268:	str	x0, [sp, #112]
   2926c:	ldr	x0, [sp, #112]
   29270:	ldr	x2, [x0, #8]
   29274:	ldr	x0, [sp, #112]
   29278:	ldr	x0, [x0]
   2927c:	sub	x0, x2, x0
   29280:	add	x0, x0, #0x1
   29284:	sub	x0, x1, x0
   29288:	str	x0, [sp, #192]
   2928c:	ldr	x3, [sp, #24]
   29290:	ldr	x2, [sp, #192]
   29294:	ldr	x1, [sp, #40]
   29298:	ldr	x0, [sp, #40]
   2929c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   292a0:	cmp	w0, #0x0
   292a4:	b.eq	2950c <PyInit__decimal@@Base+0x11834>  // b.none
   292a8:	ldr	x0, [sp, #40]
   292ac:	ldr	x1, [x0, #8]
   292b0:	ldr	x0, [sp, #192]
   292b4:	sub	x1, x1, x0
   292b8:	ldr	x0, [sp, #40]
   292bc:	str	x1, [x0, #8]
   292c0:	ldr	x0, [sp, #24]
   292c4:	ldr	w0, [x0]
   292c8:	orr	w1, w0, #0x1
   292cc:	ldr	x0, [sp, #24]
   292d0:	str	w1, [x0]
   292d4:	ldr	x0, [sp, #40]
   292d8:	str	x0, [sp, #104]
   292dc:	ldr	x0, [sp, #104]
   292e0:	str	x0, [sp, #96]
   292e4:	ldr	x0, [sp, #96]
   292e8:	ldr	x1, [x0, #40]
   292ec:	ldr	x0, [sp, #96]
   292f0:	ldr	x0, [x0, #24]
   292f4:	lsl	x0, x0, #3
   292f8:	sub	x0, x0, #0x8
   292fc:	add	x0, x1, x0
   29300:	ldr	x0, [x0]
   29304:	cmp	x0, #0x0
   29308:	cset	w0, eq  // eq = none
   2930c:	and	w0, w0, #0xff
   29310:	cmp	w0, #0x0
   29314:	b.ne	29514 <PyInit__decimal@@Base+0x1183c>  // b.any
   29318:	ldr	x0, [sp, #32]
   2931c:	ldr	x0, [x0, #16]
   29320:	ldr	x1, [sp, #200]
   29324:	cmp	x1, x0
   29328:	b.ge	29514 <PyInit__decimal@@Base+0x1183c>  // b.tcont
   2932c:	ldr	x0, [sp, #24]
   29330:	ldr	w0, [x0]
   29334:	orr	w1, w0, #0x2000
   29338:	ldr	x0, [sp, #24]
   2933c:	str	w1, [x0]
   29340:	b	29514 <PyInit__decimal@@Base+0x1183c>
   29344:	ldr	x0, [sp, #32]
   29348:	ldr	x0, [x0, #16]
   2934c:	ldr	x1, [sp, #200]
   29350:	cmp	x1, x0
   29354:	b.ge	29520 <PyInit__decimal@@Base+0x11848>  // b.tcont
   29358:	ldr	x0, [sp, #32]
   2935c:	str	x0, [sp, #72]
   29360:	ldr	x0, [sp, #72]
   29364:	ldr	x1, [x0, #16]
   29368:	ldr	x0, [sp, #72]
   2936c:	ldr	x0, [x0]
   29370:	sub	x0, x1, x0
   29374:	add	x0, x0, #0x1
   29378:	str	x0, [sp, #184]
   2937c:	ldr	x0, [sp, #40]
   29380:	str	x0, [sp, #88]
   29384:	ldr	x0, [sp, #88]
   29388:	str	x0, [sp, #80]
   2938c:	ldr	x0, [sp, #80]
   29390:	ldr	x1, [x0, #40]
   29394:	ldr	x0, [sp, #80]
   29398:	ldr	x0, [x0, #24]
   2939c:	lsl	x0, x0, #3
   293a0:	sub	x0, x0, #0x8
   293a4:	add	x0, x1, x0
   293a8:	ldr	x0, [x0]
   293ac:	cmp	x0, #0x0
   293b0:	cset	w0, eq  // eq = none
   293b4:	and	w0, w0, #0xff
   293b8:	cmp	w0, #0x0
   293bc:	b.eq	29400 <PyInit__decimal@@Base+0x11728>  // b.none
   293c0:	ldr	x0, [sp, #40]
   293c4:	ldr	x0, [x0, #8]
   293c8:	ldr	x1, [sp, #184]
   293cc:	cmp	x1, x0
   293d0:	b.le	2951c <PyInit__decimal@@Base+0x11844>
   293d4:	ldr	x0, [sp, #40]
   293d8:	ldr	x1, [sp, #184]
   293dc:	str	x1, [x0, #8]
   293e0:	ldr	x0, [sp, #40]
   293e4:	bl	264ec <PyInit__decimal@@Base+0xe814>
   293e8:	ldr	x0, [sp, #24]
   293ec:	ldr	w0, [x0]
   293f0:	orr	w1, w0, #0x1
   293f4:	ldr	x0, [sp, #24]
   293f8:	str	w1, [x0]
   293fc:	b	2951c <PyInit__decimal@@Base+0x11844>
   29400:	ldr	x0, [sp, #24]
   29404:	ldr	w0, [x0]
   29408:	orr	w1, w0, #0x2000
   2940c:	ldr	x0, [sp, #24]
   29410:	str	w1, [x0]
   29414:	ldr	x0, [sp, #40]
   29418:	ldr	x0, [x0, #8]
   2941c:	ldr	x1, [sp, #184]
   29420:	cmp	x1, x0
   29424:	b.le	29520 <PyInit__decimal@@Base+0x11848>
   29428:	ldr	x0, [sp, #40]
   2942c:	ldr	x0, [x0, #8]
   29430:	ldr	x1, [sp, #184]
   29434:	sub	x0, x1, x0
   29438:	str	x0, [sp, #192]
   2943c:	ldr	x1, [sp, #192]
   29440:	ldr	x0, [sp, #40]
   29444:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   29448:	str	w0, [sp, #180]
   2944c:	ldr	x0, [sp, #40]
   29450:	ldr	x1, [sp, #184]
   29454:	str	x1, [x0, #8]
   29458:	ldrsw	x0, [sp, #180]
   2945c:	ldr	x3, [sp, #24]
   29460:	ldr	x2, [sp, #32]
   29464:	mov	x1, x0
   29468:	ldr	x0, [sp, #40]
   2946c:	bl	28c68 <PyInit__decimal@@Base+0x10f90>
   29470:	ldr	x0, [sp, #24]
   29474:	ldr	w0, [x0]
   29478:	orr	w1, w0, #0x1000
   2947c:	ldr	x0, [sp, #24]
   29480:	str	w1, [x0]
   29484:	ldr	w0, [sp, #180]
   29488:	cmp	w0, #0x0
   2948c:	b.eq	29520 <PyInit__decimal@@Base+0x11848>  // b.none
   29490:	ldr	x0, [sp, #24]
   29494:	ldr	w1, [x0]
   29498:	mov	w0, #0x4040                	// #16448
   2949c:	orr	w1, w1, w0
   294a0:	ldr	x0, [sp, #24]
   294a4:	str	w1, [x0]
   294a8:	ldr	x0, [sp, #40]
   294ac:	str	x0, [sp, #64]
   294b0:	ldr	x0, [sp, #64]
   294b4:	str	x0, [sp, #56]
   294b8:	ldr	x0, [sp, #56]
   294bc:	ldr	x1, [x0, #40]
   294c0:	ldr	x0, [sp, #56]
   294c4:	ldr	x0, [x0, #24]
   294c8:	lsl	x0, x0, #3
   294cc:	sub	x0, x0, #0x8
   294d0:	add	x0, x1, x0
   294d4:	ldr	x0, [x0]
   294d8:	cmp	x0, #0x0
   294dc:	cset	w0, eq  // eq = none
   294e0:	and	w0, w0, #0xff
   294e4:	cmp	w0, #0x0
   294e8:	b.eq	29520 <PyInit__decimal@@Base+0x11848>  // b.none
   294ec:	ldr	x0, [sp, #40]
   294f0:	bl	264ec <PyInit__decimal@@Base+0xe814>
   294f4:	ldr	x0, [sp, #24]
   294f8:	ldr	w0, [x0]
   294fc:	orr	w1, w0, #0x1
   29500:	ldr	x0, [sp, #24]
   29504:	str	w1, [x0]
   29508:	b	29520 <PyInit__decimal@@Base+0x11848>
   2950c:	nop
   29510:	b	29520 <PyInit__decimal@@Base+0x11848>
   29514:	nop
   29518:	b	29520 <PyInit__decimal@@Base+0x11848>
   2951c:	nop
   29520:	ldp	x29, x30, [sp], #208
   29524:	ret
   29528:	sub	sp, sp, #0x50
   2952c:	str	x0, [sp, #24]
   29530:	str	x1, [sp, #16]
   29534:	str	x2, [sp, #8]
   29538:	ldr	x0, [sp, #24]
   2953c:	str	x0, [sp, #72]
   29540:	ldr	x0, [sp, #72]
   29544:	ldr	x1, [x0, #8]
   29548:	ldr	x0, [sp, #72]
   2954c:	ldr	x0, [x0, #16]
   29550:	add	x0, x1, x0
   29554:	sub	x1, x0, #0x1
   29558:	ldr	x0, [sp, #16]
   2955c:	ldr	x0, [x0, #16]
   29560:	cmp	x1, x0
   29564:	b.ge	29614 <PyInit__decimal@@Base+0x1193c>  // b.tcont
   29568:	ldr	x0, [sp, #24]
   2956c:	str	x0, [sp, #64]
   29570:	ldr	x0, [sp, #64]
   29574:	str	x0, [sp, #56]
   29578:	ldr	x0, [sp, #56]
   2957c:	ldrb	w0, [x0]
   29580:	and	w0, w0, #0xe
   29584:	cmp	w0, #0x0
   29588:	b.ne	295c4 <PyInit__decimal@@Base+0x118ec>  // b.any
   2958c:	ldr	x0, [sp, #64]
   29590:	str	x0, [sp, #48]
   29594:	ldr	x0, [sp, #48]
   29598:	ldr	x1, [x0, #40]
   2959c:	ldr	x0, [sp, #48]
   295a0:	ldr	x0, [x0, #24]
   295a4:	lsl	x0, x0, #3
   295a8:	sub	x0, x0, #0x8
   295ac:	add	x0, x1, x0
   295b0:	ldr	x0, [x0]
   295b4:	cmp	x0, #0x0
   295b8:	b.ne	295c4 <PyInit__decimal@@Base+0x118ec>  // b.any
   295bc:	mov	w0, #0x1                   	// #1
   295c0:	b	295c8 <PyInit__decimal@@Base+0x118f0>
   295c4:	mov	w0, #0x0                   	// #0
   295c8:	cmp	w0, #0x0
   295cc:	b.ne	29614 <PyInit__decimal@@Base+0x1193c>  // b.any
   295d0:	ldr	x0, [sp, #24]
   295d4:	ldr	x1, [x0, #8]
   295d8:	ldr	x0, [sp, #16]
   295dc:	str	x0, [sp, #40]
   295e0:	ldr	x0, [sp, #40]
   295e4:	ldr	x2, [x0, #16]
   295e8:	ldr	x0, [sp, #40]
   295ec:	ldr	x0, [x0]
   295f0:	sub	x0, x2, x0
   295f4:	add	x0, x0, #0x1
   295f8:	cmp	x1, x0
   295fc:	b.ge	29614 <PyInit__decimal@@Base+0x1193c>  // b.tcont
   29600:	ldr	x0, [sp, #8]
   29604:	ldr	w0, [x0]
   29608:	orr	w1, w0, #0x4000
   2960c:	ldr	x0, [sp, #8]
   29610:	str	w1, [x0]
   29614:	nop
   29618:	add	sp, sp, #0x50
   2961c:	ret
   29620:	stp	x29, x30, [sp, #-80]!
   29624:	mov	x29, sp
   29628:	str	x0, [sp, #40]
   2962c:	str	x1, [sp, #32]
   29630:	str	x2, [sp, #24]
   29634:	ldr	x0, [sp, #40]
   29638:	str	x0, [sp, #56]
   2963c:	ldr	x0, [sp, #56]
   29640:	ldrb	w0, [x0]
   29644:	and	w0, w0, #0xe
   29648:	cmp	w0, #0x0
   2964c:	b.ne	296f4 <PyInit__decimal@@Base+0x11a1c>  // b.any
   29650:	ldr	x0, [sp, #40]
   29654:	ldr	x1, [x0, #16]
   29658:	ldr	x0, [sp, #32]
   2965c:	ldr	x0, [x0]
   29660:	cmp	x1, x0
   29664:	b.le	296f8 <PyInit__decimal@@Base+0x11a20>
   29668:	ldr	x0, [sp, #40]
   2966c:	ldr	x1, [x0, #16]
   29670:	ldr	x0, [sp, #32]
   29674:	ldr	x0, [x0]
   29678:	sub	x0, x1, x0
   2967c:	str	x0, [sp, #72]
   29680:	ldr	x1, [sp, #72]
   29684:	ldr	x0, [sp, #40]
   29688:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   2968c:	str	x0, [sp, #64]
   29690:	ldr	x0, [sp, #40]
   29694:	ldr	x1, [x0, #8]
   29698:	ldr	x0, [sp, #72]
   2969c:	add	x1, x1, x0
   296a0:	ldr	x0, [sp, #40]
   296a4:	str	x1, [x0, #8]
   296a8:	ldr	x3, [sp, #24]
   296ac:	ldr	x2, [sp, #32]
   296b0:	ldr	x1, [sp, #64]
   296b4:	ldr	x0, [sp, #40]
   296b8:	bl	28b50 <PyInit__decimal@@Base+0x10e78>
   296bc:	ldr	x0, [sp, #24]
   296c0:	ldr	w0, [x0]
   296c4:	orr	w1, w0, #0x1000
   296c8:	ldr	x0, [sp, #24]
   296cc:	str	w1, [x0]
   296d0:	ldr	x0, [sp, #64]
   296d4:	cmp	x0, #0x0
   296d8:	b.eq	296f8 <PyInit__decimal@@Base+0x11a20>  // b.none
   296dc:	ldr	x0, [sp, #24]
   296e0:	ldr	w0, [x0]
   296e4:	orr	w1, w0, #0x40
   296e8:	ldr	x0, [sp, #24]
   296ec:	str	w1, [x0]
   296f0:	b	296f8 <PyInit__decimal@@Base+0x11a20>
   296f4:	nop
   296f8:	ldp	x29, x30, [sp], #80
   296fc:	ret
   29700:	stp	x29, x30, [sp, #-64]!
   29704:	mov	x29, sp
   29708:	str	x0, [sp, #40]
   2970c:	str	x1, [sp, #32]
   29710:	str	x2, [sp, #24]
   29714:	ldr	x0, [sp, #40]
   29718:	str	x0, [sp, #56]
   2971c:	ldr	x0, [sp, #56]
   29720:	ldrb	w0, [x0]
   29724:	and	w0, w0, #0xe
   29728:	cmp	w0, #0x0
   2972c:	b.eq	2975c <PyInit__decimal@@Base+0x11a84>  // b.none
   29730:	ldr	x0, [sp, #40]
   29734:	str	x0, [sp, #48]
   29738:	ldr	x0, [sp, #48]
   2973c:	ldrb	w0, [x0]
   29740:	and	w0, w0, #0xc
   29744:	cmp	w0, #0x0
   29748:	b.eq	29780 <PyInit__decimal@@Base+0x11aa8>  // b.none
   2974c:	ldr	x1, [sp, #32]
   29750:	ldr	x0, [sp, #40]
   29754:	bl	269d0 <PyInit__decimal@@Base+0xecf8>
   29758:	b	29780 <PyInit__decimal@@Base+0x11aa8>
   2975c:	ldr	x2, [sp, #24]
   29760:	ldr	x1, [sp, #32]
   29764:	ldr	x0, [sp, #40]
   29768:	bl	28f6c <PyInit__decimal@@Base+0x11294>
   2976c:	ldr	x2, [sp, #24]
   29770:	ldr	x1, [sp, #32]
   29774:	ldr	x0, [sp, #40]
   29778:	bl	29620 <PyInit__decimal@@Base+0x11948>
   2977c:	b	29784 <PyInit__decimal@@Base+0x11aac>
   29780:	nop
   29784:	ldp	x29, x30, [sp], #64
   29788:	ret
   2978c:	sub	sp, sp, #0x20
   29790:	str	x0, [sp, #8]
   29794:	str	x1, [sp]
   29798:	ldr	x0, [sp]
   2979c:	ldrb	w1, [x0]
   297a0:	ldr	x0, [sp, #8]
   297a4:	strb	w1, [x0]
   297a8:	ldr	x0, [sp]
   297ac:	ldr	x1, [x0, #8]
   297b0:	ldr	x0, [sp, #8]
   297b4:	str	x1, [x0, #8]
   297b8:	ldr	x0, [sp]
   297bc:	ldr	x1, [x0, #16]
   297c0:	ldr	x0, [sp, #8]
   297c4:	str	x1, [x0, #16]
   297c8:	ldr	x0, [sp]
   297cc:	ldr	x1, [x0, #24]
   297d0:	ldr	x0, [sp, #8]
   297d4:	str	x1, [x0, #24]
   297d8:	ldr	x0, [sp]
   297dc:	ldr	x1, [x0, #32]
   297e0:	ldr	x0, [sp, #8]
   297e4:	str	x1, [x0, #32]
   297e8:	ldr	x0, [sp]
   297ec:	ldr	x1, [x0, #40]
   297f0:	ldr	x0, [sp, #8]
   297f4:	str	x1, [x0, #40]
   297f8:	ldr	x0, [sp, #8]
   297fc:	str	x0, [sp, #24]
   29800:	ldr	x0, [sp, #24]
   29804:	ldrb	w0, [x0]
   29808:	and	w0, w0, #0x1f
   2980c:	and	w1, w0, #0xff
   29810:	ldr	x0, [sp, #24]
   29814:	strb	w1, [x0]
   29818:	ldr	x0, [sp, #24]
   2981c:	ldrb	w0, [x0]
   29820:	orr	w0, w0, #0x40
   29824:	and	w1, w0, #0xff
   29828:	ldr	x0, [sp, #24]
   2982c:	strb	w1, [x0]
   29830:	nop
   29834:	nop
   29838:	add	sp, sp, #0x20
   2983c:	ret
   29840:	stp	x29, x30, [sp, #-112]!
   29844:	mov	x29, sp
   29848:	str	x0, [sp, #40]
   2984c:	str	x1, [sp, #32]
   29850:	str	x2, [sp, #24]
   29854:	ldr	x1, [sp, #40]
   29858:	ldr	x0, [sp, #32]
   2985c:	cmp	x1, x0
   29860:	b.ne	2986c <PyInit__decimal@@Base+0x11b94>  // b.any
   29864:	mov	w0, #0x1                   	// #1
   29868:	b	299f0 <PyInit__decimal@@Base+0x11d18>
   2986c:	ldr	x0, [sp, #32]
   29870:	ldr	x0, [x0, #24]
   29874:	ldr	x1, [sp, #40]
   29878:	str	x1, [sp, #104]
   2987c:	str	x0, [sp, #96]
   29880:	ldr	x0, [sp, #24]
   29884:	str	x0, [sp, #88]
   29888:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2988c:	add	x0, x0, #0x6d8
   29890:	ldr	x0, [x0]
   29894:	ldr	x2, [sp, #96]
   29898:	ldr	x1, [sp, #96]
   2989c:	cmp	x2, x0
   298a0:	csel	x0, x1, x0, ge  // ge = tcont
   298a4:	str	x0, [sp, #96]
   298a8:	ldr	x0, [sp, #104]
   298ac:	ldr	x0, [x0, #32]
   298b0:	ldr	x1, [sp, #96]
   298b4:	cmp	x1, x0
   298b8:	b.ne	298c4 <PyInit__decimal@@Base+0x11bec>  // b.any
   298bc:	mov	w0, #0x1                   	// #1
   298c0:	b	29920 <PyInit__decimal@@Base+0x11c48>
   298c4:	ldr	x0, [sp, #104]
   298c8:	str	x0, [sp, #80]
   298cc:	ldr	x0, [sp, #80]
   298d0:	ldrb	w0, [x0]
   298d4:	and	w0, w0, #0x20
   298d8:	cmp	w0, #0x0
   298dc:	b.eq	29910 <PyInit__decimal@@Base+0x11c38>  // b.none
   298e0:	ldr	x0, [sp, #104]
   298e4:	ldr	x0, [x0, #32]
   298e8:	ldr	x1, [sp, #96]
   298ec:	cmp	x1, x0
   298f0:	b.le	29908 <PyInit__decimal@@Base+0x11c30>
   298f4:	ldr	x2, [sp, #88]
   298f8:	ldr	x1, [sp, #96]
   298fc:	ldr	x0, [sp, #104]
   29900:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   29904:	b	29920 <PyInit__decimal@@Base+0x11c48>
   29908:	mov	w0, #0x1                   	// #1
   2990c:	b	29920 <PyInit__decimal@@Base+0x11c48>
   29910:	ldr	x2, [sp, #88]
   29914:	ldr	x1, [sp, #96]
   29918:	ldr	x0, [sp, #104]
   2991c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   29920:	cmp	w0, #0x0
   29924:	b.ne	29930 <PyInit__decimal@@Base+0x11c58>  // b.any
   29928:	mov	w0, #0x0                   	// #0
   2992c:	b	299f0 <PyInit__decimal@@Base+0x11d18>
   29930:	ldr	x0, [sp, #40]
   29934:	str	x0, [sp, #72]
   29938:	ldr	x0, [sp, #32]
   2993c:	str	x0, [sp, #64]
   29940:	ldr	x0, [sp, #64]
   29944:	ldrb	w0, [x0]
   29948:	strb	w0, [sp, #63]
   2994c:	ldr	x0, [sp, #72]
   29950:	ldrb	w0, [x0]
   29954:	and	w0, w0, #0xfffffff0
   29958:	and	w1, w0, #0xff
   2995c:	ldr	x0, [sp, #72]
   29960:	strb	w1, [x0]
   29964:	ldr	x0, [sp, #72]
   29968:	ldrb	w0, [x0]
   2996c:	sxtb	w1, w0
   29970:	ldrsb	w0, [sp, #63]
   29974:	and	w0, w0, #0xf
   29978:	sxtb	w0, w0
   2997c:	orr	w0, w1, w0
   29980:	sxtb	w0, w0
   29984:	and	w1, w0, #0xff
   29988:	ldr	x0, [sp, #72]
   2998c:	strb	w1, [x0]
   29990:	nop
   29994:	ldr	x0, [sp, #32]
   29998:	ldr	x1, [x0, #8]
   2999c:	ldr	x0, [sp, #40]
   299a0:	str	x1, [x0, #8]
   299a4:	ldr	x0, [sp, #32]
   299a8:	ldr	x1, [x0, #16]
   299ac:	ldr	x0, [sp, #40]
   299b0:	str	x1, [x0, #16]
   299b4:	ldr	x0, [sp, #32]
   299b8:	ldr	x1, [x0, #24]
   299bc:	ldr	x0, [sp, #40]
   299c0:	str	x1, [x0, #24]
   299c4:	ldr	x0, [sp, #40]
   299c8:	ldr	x3, [x0, #40]
   299cc:	ldr	x0, [sp, #32]
   299d0:	ldr	x1, [x0, #40]
   299d4:	ldr	x0, [sp, #32]
   299d8:	ldr	x0, [x0, #24]
   299dc:	lsl	x0, x0, #3
   299e0:	mov	x2, x0
   299e4:	mov	x0, x3
   299e8:	bl	6510 <memcpy@plt>
   299ec:	mov	w0, #0x1                   	// #1
   299f0:	ldp	x29, x30, [sp], #112
   299f4:	ret
   299f8:	stp	x29, x30, [sp, #-64]!
   299fc:	mov	x29, sp
   29a00:	str	x0, [sp, #24]
   29a04:	str	x1, [sp, #16]
   29a08:	ldr	x1, [sp, #24]
   29a0c:	ldr	x0, [sp, #16]
   29a10:	cmp	x1, x0
   29a14:	b.eq	29ad8 <PyInit__decimal@@Base+0x11e00>  // b.none
   29a18:	ldr	x0, [sp, #24]
   29a1c:	ldr	x3, [x0, #40]
   29a20:	ldr	x0, [sp, #16]
   29a24:	ldr	x1, [x0, #40]
   29a28:	ldr	x0, [sp, #16]
   29a2c:	ldr	x0, [x0, #24]
   29a30:	lsl	x0, x0, #3
   29a34:	mov	x2, x0
   29a38:	mov	x0, x3
   29a3c:	bl	6510 <memcpy@plt>
   29a40:	ldr	x0, [sp, #24]
   29a44:	str	x0, [sp, #56]
   29a48:	ldr	x0, [sp, #16]
   29a4c:	str	x0, [sp, #48]
   29a50:	ldr	x0, [sp, #48]
   29a54:	ldrb	w0, [x0]
   29a58:	strb	w0, [sp, #47]
   29a5c:	ldr	x0, [sp, #56]
   29a60:	ldrb	w0, [x0]
   29a64:	and	w0, w0, #0xfffffff0
   29a68:	and	w1, w0, #0xff
   29a6c:	ldr	x0, [sp, #56]
   29a70:	strb	w1, [x0]
   29a74:	ldr	x0, [sp, #56]
   29a78:	ldrb	w0, [x0]
   29a7c:	sxtb	w1, w0
   29a80:	ldrsb	w0, [sp, #47]
   29a84:	and	w0, w0, #0xf
   29a88:	sxtb	w0, w0
   29a8c:	orr	w0, w1, w0
   29a90:	sxtb	w0, w0
   29a94:	and	w1, w0, #0xff
   29a98:	ldr	x0, [sp, #56]
   29a9c:	strb	w1, [x0]
   29aa0:	nop
   29aa4:	ldr	x0, [sp, #16]
   29aa8:	ldr	x1, [x0, #8]
   29aac:	ldr	x0, [sp, #24]
   29ab0:	str	x1, [x0, #8]
   29ab4:	ldr	x0, [sp, #16]
   29ab8:	ldr	x1, [x0, #16]
   29abc:	ldr	x0, [sp, #24]
   29ac0:	str	x1, [x0, #16]
   29ac4:	ldr	x0, [sp, #16]
   29ac8:	ldr	x1, [x0, #24]
   29acc:	ldr	x0, [sp, #24]
   29ad0:	str	x1, [x0, #24]
   29ad4:	b	29adc <PyInit__decimal@@Base+0x11e04>
   29ad8:	nop
   29adc:	ldp	x29, x30, [sp], #64
   29ae0:	ret
   29ae4:	stp	x29, x30, [sp, #-64]!
   29ae8:	mov	x29, sp
   29aec:	str	x0, [sp, #24]
   29af0:	ldr	x0, [sp, #24]
   29af4:	ldr	x0, [x0, #24]
   29af8:	bl	23664 <PyInit__decimal@@Base+0xb98c>
   29afc:	str	x0, [sp, #56]
   29b00:	ldr	x0, [sp, #56]
   29b04:	cmp	x0, #0x0
   29b08:	b.ne	29b14 <PyInit__decimal@@Base+0x11e3c>  // b.any
   29b0c:	mov	x0, #0x0                   	// #0
   29b10:	b	29bd4 <PyInit__decimal@@Base+0x11efc>
   29b14:	ldr	x0, [sp, #56]
   29b18:	ldr	x3, [x0, #40]
   29b1c:	ldr	x0, [sp, #24]
   29b20:	ldr	x1, [x0, #40]
   29b24:	ldr	x0, [sp, #24]
   29b28:	ldr	x0, [x0, #24]
   29b2c:	lsl	x0, x0, #3
   29b30:	mov	x2, x0
   29b34:	mov	x0, x3
   29b38:	bl	6510 <memcpy@plt>
   29b3c:	ldr	x0, [sp, #56]
   29b40:	str	x0, [sp, #48]
   29b44:	ldr	x0, [sp, #24]
   29b48:	str	x0, [sp, #40]
   29b4c:	ldr	x0, [sp, #40]
   29b50:	ldrb	w0, [x0]
   29b54:	strb	w0, [sp, #39]
   29b58:	ldr	x0, [sp, #48]
   29b5c:	ldrb	w0, [x0]
   29b60:	and	w0, w0, #0xfffffff0
   29b64:	and	w1, w0, #0xff
   29b68:	ldr	x0, [sp, #48]
   29b6c:	strb	w1, [x0]
   29b70:	ldr	x0, [sp, #48]
   29b74:	ldrb	w0, [x0]
   29b78:	sxtb	w1, w0
   29b7c:	ldrsb	w0, [sp, #39]
   29b80:	and	w0, w0, #0xf
   29b84:	sxtb	w0, w0
   29b88:	orr	w0, w1, w0
   29b8c:	sxtb	w0, w0
   29b90:	and	w1, w0, #0xff
   29b94:	ldr	x0, [sp, #48]
   29b98:	strb	w1, [x0]
   29b9c:	nop
   29ba0:	ldr	x0, [sp, #24]
   29ba4:	ldr	x1, [x0, #8]
   29ba8:	ldr	x0, [sp, #56]
   29bac:	str	x1, [x0, #8]
   29bb0:	ldr	x0, [sp, #24]
   29bb4:	ldr	x1, [x0, #16]
   29bb8:	ldr	x0, [sp, #56]
   29bbc:	str	x1, [x0, #16]
   29bc0:	ldr	x0, [sp, #24]
   29bc4:	ldr	x1, [x0, #24]
   29bc8:	ldr	x0, [sp, #56]
   29bcc:	str	x1, [x0, #24]
   29bd0:	ldr	x0, [sp, #56]
   29bd4:	ldp	x29, x30, [sp], #64
   29bd8:	ret
   29bdc:	stp	x29, x30, [sp, #-64]!
   29be0:	mov	x29, sp
   29be4:	str	x0, [sp, #40]
   29be8:	str	x1, [sp, #32]
   29bec:	str	x2, [sp, #24]
   29bf0:	ldr	x2, [sp, #24]
   29bf4:	ldr	x1, [sp, #32]
   29bf8:	ldr	x0, [sp, #40]
   29bfc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   29c00:	cmp	w0, #0x0
   29c04:	b.ne	29c10 <PyInit__decimal@@Base+0x11f38>  // b.any
   29c08:	mov	w0, #0x0                   	// #0
   29c0c:	b	29c38 <PyInit__decimal@@Base+0x11f60>
   29c10:	ldr	x0, [sp, #40]
   29c14:	str	x0, [sp, #56]
   29c18:	ldr	x0, [sp, #56]
   29c1c:	ldrb	w0, [x0]
   29c20:	and	w0, w0, #0xfffffffe
   29c24:	and	w1, w0, #0xff
   29c28:	ldr	x0, [sp, #56]
   29c2c:	strb	w1, [x0]
   29c30:	nop
   29c34:	mov	w0, #0x1                   	// #1
   29c38:	ldp	x29, x30, [sp], #64
   29c3c:	ret
   29c40:	stp	x29, x30, [sp, #-48]!
   29c44:	mov	x29, sp
   29c48:	str	x0, [sp, #40]
   29c4c:	str	x1, [sp, #32]
   29c50:	str	x2, [sp, #24]
   29c54:	ldr	x2, [sp, #24]
   29c58:	ldr	x1, [sp, #32]
   29c5c:	ldr	x0, [sp, #40]
   29c60:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   29c64:	cmp	w0, #0x0
   29c68:	b.ne	29c74 <PyInit__decimal@@Base+0x11f9c>  // b.any
   29c6c:	mov	w0, #0x0                   	// #0
   29c70:	b	29c80 <PyInit__decimal@@Base+0x11fa8>
   29c74:	ldr	x0, [sp, #40]
   29c78:	bl	264c0 <PyInit__decimal@@Base+0xe7e8>
   29c7c:	mov	w0, #0x1                   	// #1
   29c80:	ldp	x29, x30, [sp], #48
   29c84:	ret
   29c88:	stp	x29, x30, [sp, #-80]!
   29c8c:	mov	x29, sp
   29c90:	str	x0, [sp, #40]
   29c94:	str	x1, [sp, #32]
   29c98:	str	x2, [sp, #24]
   29c9c:	str	x3, [sp, #16]
   29ca0:	ldr	x0, [sp, #24]
   29ca4:	str	x0, [sp, #64]
   29ca8:	ldr	x0, [sp, #64]
   29cac:	ldrb	w0, [x0]
   29cb0:	and	w0, w0, #0x1
   29cb4:	and	w0, w0, #0xff
   29cb8:	strb	w0, [sp, #79]
   29cbc:	ldr	x2, [sp, #16]
   29cc0:	ldr	x1, [sp, #32]
   29cc4:	ldr	x0, [sp, #40]
   29cc8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   29ccc:	cmp	w0, #0x0
   29cd0:	b.ne	29cdc <PyInit__decimal@@Base+0x12004>  // b.any
   29cd4:	mov	w0, #0x0                   	// #0
   29cd8:	b	29d28 <PyInit__decimal@@Base+0x12050>
   29cdc:	ldr	x0, [sp, #40]
   29ce0:	str	x0, [sp, #56]
   29ce4:	ldrb	w0, [sp, #79]
   29ce8:	strb	w0, [sp, #55]
   29cec:	ldr	x0, [sp, #56]
   29cf0:	ldrb	w0, [x0]
   29cf4:	and	w0, w0, #0xfffffffe
   29cf8:	and	w1, w0, #0xff
   29cfc:	ldr	x0, [sp, #56]
   29d00:	strb	w1, [x0]
   29d04:	ldr	x0, [sp, #56]
   29d08:	ldrb	w1, [x0]
   29d0c:	ldrb	w0, [sp, #55]
   29d10:	orr	w0, w1, w0
   29d14:	and	w1, w0, #0xff
   29d18:	ldr	x0, [sp, #56]
   29d1c:	strb	w1, [x0]
   29d20:	nop
   29d24:	mov	w0, #0x1                   	// #1
   29d28:	ldp	x29, x30, [sp], #80
   29d2c:	ret
   29d30:	stp	x29, x30, [sp, #-128]!
   29d34:	mov	x29, sp
   29d38:	str	x0, [sp, #56]
   29d3c:	str	x1, [sp, #48]
   29d40:	str	x2, [sp, #40]
   29d44:	str	x3, [sp, #32]
   29d48:	str	x4, [sp, #24]
   29d4c:	ldr	x0, [sp, #104]
   29d50:	str	x0, [sp, #104]
   29d54:	ldr	x0, [sp, #96]
   29d58:	str	x0, [sp, #96]
   29d5c:	ldr	x0, [sp, #88]
   29d60:	str	x0, [sp, #88]
   29d64:	add	x1, sp, #0x48
   29d68:	add	x0, sp, #0x50
   29d6c:	mov	x3, #0x13                  	// #19
   29d70:	ldr	x2, [sp, #24]
   29d74:	bl	24270 <PyInit__decimal@@Base+0xc598>
   29d78:	ldr	x0, [sp, #72]
   29d7c:	cmp	x0, #0x0
   29d80:	b.eq	29ff0 <PyInit__decimal@@Base+0x12318>  // b.none
   29d84:	ldr	x1, [sp, #72]
   29d88:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   29d8c:	add	x0, x0, #0xdb0
   29d90:	ldr	x0, [x0, x1, lsl #3]
   29d94:	str	x0, [sp, #120]
   29d98:	ldr	x0, [sp, #32]
   29d9c:	sub	x0, x0, #0x1
   29da0:	str	x0, [sp, #32]
   29da4:	ldr	x0, [sp, #40]
   29da8:	sub	x0, x0, #0x1
   29dac:	str	x0, [sp, #40]
   29db0:	ldr	x0, [sp, #32]
   29db4:	sub	x1, x0, #0x1
   29db8:	str	x1, [sp, #32]
   29dbc:	lsl	x0, x0, #3
   29dc0:	ldr	x1, [sp, #48]
   29dc4:	add	x0, x1, x0
   29dc8:	ldr	x2, [x0]
   29dcc:	ldr	x0, [sp, #72]
   29dd0:	mov	x1, #0x13                  	// #19
   29dd4:	sub	x3, x1, x0
   29dd8:	add	x1, sp, #0x60
   29ddc:	add	x0, sp, #0x58
   29de0:	bl	23a84 <PyInit__decimal@@Base+0xbdac>
   29de4:	ldr	x0, [sp, #88]
   29de8:	cmp	x0, #0x0
   29dec:	b.eq	29f04 <PyInit__decimal@@Base+0x1222c>  // b.none
   29df0:	ldr	x0, [sp, #40]
   29df4:	lsl	x0, x0, #3
   29df8:	ldr	x1, [sp, #56]
   29dfc:	add	x0, x1, x0
   29e00:	ldr	x1, [x0]
   29e04:	ldr	x0, [sp, #88]
   29e08:	cmp	x1, x0
   29e0c:	b.eq	29e40 <PyInit__decimal@@Base+0x12168>  // b.none
   29e10:	ldr	x0, [sp, #40]
   29e14:	lsl	x0, x0, #3
   29e18:	ldr	x1, [sp, #56]
   29e1c:	add	x0, x1, x0
   29e20:	ldr	x1, [x0]
   29e24:	ldr	x0, [sp, #88]
   29e28:	cmp	x1, x0
   29e2c:	b.cs	29e38 <PyInit__decimal@@Base+0x12160>  // b.hs, b.nlast
   29e30:	mov	w0, #0xffffffff            	// #-1
   29e34:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29e38:	mov	w0, #0x1                   	// #1
   29e3c:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29e40:	ldr	x0, [sp, #40]
   29e44:	sub	x0, x0, #0x1
   29e48:	str	x0, [sp, #40]
   29e4c:	b	29f04 <PyInit__decimal@@Base+0x1222c>
   29e50:	ldr	x0, [sp, #32]
   29e54:	lsl	x0, x0, #3
   29e58:	ldr	x1, [sp, #48]
   29e5c:	add	x0, x1, x0
   29e60:	ldr	x2, [x0]
   29e64:	ldr	x0, [sp, #72]
   29e68:	mov	x1, #0x13                  	// #19
   29e6c:	sub	x3, x1, x0
   29e70:	add	x1, sp, #0x68
   29e74:	add	x0, sp, #0x58
   29e78:	bl	23a84 <PyInit__decimal@@Base+0xbdac>
   29e7c:	ldr	x1, [sp, #96]
   29e80:	ldr	x0, [sp, #120]
   29e84:	mul	x1, x1, x0
   29e88:	ldr	x0, [sp, #88]
   29e8c:	add	x0, x1, x0
   29e90:	str	x0, [sp, #112]
   29e94:	ldr	x0, [sp, #40]
   29e98:	lsl	x0, x0, #3
   29e9c:	ldr	x1, [sp, #56]
   29ea0:	add	x0, x1, x0
   29ea4:	ldr	x0, [x0]
   29ea8:	ldr	x1, [sp, #112]
   29eac:	cmp	x1, x0
   29eb0:	b.eq	29ee4 <PyInit__decimal@@Base+0x1220c>  // b.none
   29eb4:	ldr	x0, [sp, #40]
   29eb8:	lsl	x0, x0, #3
   29ebc:	ldr	x1, [sp, #56]
   29ec0:	add	x0, x1, x0
   29ec4:	ldr	x0, [x0]
   29ec8:	ldr	x1, [sp, #112]
   29ecc:	cmp	x1, x0
   29ed0:	b.ls	29edc <PyInit__decimal@@Base+0x12204>  // b.plast
   29ed4:	mov	w0, #0xffffffff            	// #-1
   29ed8:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29edc:	mov	w0, #0x1                   	// #1
   29ee0:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29ee4:	ldr	x0, [sp, #104]
   29ee8:	str	x0, [sp, #96]
   29eec:	ldr	x0, [sp, #32]
   29ef0:	sub	x0, x0, #0x1
   29ef4:	str	x0, [sp, #32]
   29ef8:	ldr	x0, [sp, #40]
   29efc:	sub	x0, x0, #0x1
   29f00:	str	x0, [sp, #40]
   29f04:	ldr	x0, [sp, #32]
   29f08:	cmn	x0, #0x1
   29f0c:	b.ne	29e50 <PyInit__decimal@@Base+0x12178>  // b.any
   29f10:	ldr	x0, [sp, #96]
   29f14:	ldr	x1, [sp, #120]
   29f18:	mul	x0, x1, x0
   29f1c:	str	x0, [sp, #112]
   29f20:	ldr	x0, [sp, #80]
   29f24:	lsl	x0, x0, #3
   29f28:	ldr	x1, [sp, #56]
   29f2c:	add	x0, x1, x0
   29f30:	ldr	x0, [x0]
   29f34:	ldr	x1, [sp, #112]
   29f38:	cmp	x1, x0
   29f3c:	b.eq	2a008 <PyInit__decimal@@Base+0x12330>  // b.none
   29f40:	ldr	x0, [sp, #80]
   29f44:	lsl	x0, x0, #3
   29f48:	ldr	x1, [sp, #56]
   29f4c:	add	x0, x1, x0
   29f50:	ldr	x0, [x0]
   29f54:	ldr	x1, [sp, #112]
   29f58:	cmp	x1, x0
   29f5c:	b.ls	29f68 <PyInit__decimal@@Base+0x12290>  // b.plast
   29f60:	mov	w0, #0xffffffff            	// #-1
   29f64:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29f68:	mov	w0, #0x1                   	// #1
   29f6c:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29f70:	ldr	x1, [sp, #80]
   29f74:	ldr	x0, [sp, #32]
   29f78:	add	x0, x1, x0
   29f7c:	lsl	x0, x0, #3
   29f80:	ldr	x1, [sp, #56]
   29f84:	add	x0, x1, x0
   29f88:	ldr	x1, [x0]
   29f8c:	ldr	x0, [sp, #32]
   29f90:	lsl	x0, x0, #3
   29f94:	ldr	x2, [sp, #48]
   29f98:	add	x0, x2, x0
   29f9c:	ldr	x0, [x0]
   29fa0:	cmp	x1, x0
   29fa4:	b.eq	29ff0 <PyInit__decimal@@Base+0x12318>  // b.none
   29fa8:	ldr	x1, [sp, #80]
   29fac:	ldr	x0, [sp, #32]
   29fb0:	add	x0, x1, x0
   29fb4:	lsl	x0, x0, #3
   29fb8:	ldr	x1, [sp, #56]
   29fbc:	add	x0, x1, x0
   29fc0:	ldr	x1, [x0]
   29fc4:	ldr	x0, [sp, #32]
   29fc8:	lsl	x0, x0, #3
   29fcc:	ldr	x2, [sp, #48]
   29fd0:	add	x0, x2, x0
   29fd4:	ldr	x0, [x0]
   29fd8:	cmp	x1, x0
   29fdc:	b.cs	29fe8 <PyInit__decimal@@Base+0x12310>  // b.hs, b.nlast
   29fe0:	mov	w0, #0xffffffff            	// #-1
   29fe4:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29fe8:	mov	w0, #0x1                   	// #1
   29fec:	b	2a024 <PyInit__decimal@@Base+0x1234c>
   29ff0:	ldr	x0, [sp, #32]
   29ff4:	sub	x0, x0, #0x1
   29ff8:	str	x0, [sp, #32]
   29ffc:	ldr	x0, [sp, #32]
   2a000:	cmn	x0, #0x1
   2a004:	b.ne	29f70 <PyInit__decimal@@Base+0x12298>  // b.any
   2a008:	ldr	x0, [sp, #80]
   2a00c:	mov	x1, x0
   2a010:	ldr	x0, [sp, #56]
   2a014:	bl	2486c <PyInit__decimal@@Base+0xcb94>
   2a018:	cmp	w0, #0x0
   2a01c:	cset	w0, eq  // eq = none
   2a020:	and	w0, w0, #0xff
   2a024:	ldp	x29, x30, [sp], #128
   2a028:	ret
   2a02c:	stp	x29, x30, [sp, #-48]!
   2a030:	mov	x29, sp
   2a034:	str	x0, [sp, #24]
   2a038:	str	x1, [sp, #16]
   2a03c:	ldr	x0, [sp, #24]
   2a040:	ldr	x1, [x0, #8]
   2a044:	ldr	x0, [sp, #16]
   2a048:	ldr	x0, [x0, #8]
   2a04c:	cmp	x1, x0
   2a050:	b.eq	2a0f8 <PyInit__decimal@@Base+0x12420>  // b.none
   2a054:	ldr	x0, [sp, #24]
   2a058:	ldr	x1, [x0, #8]
   2a05c:	ldr	x0, [sp, #16]
   2a060:	ldr	x0, [x0, #8]
   2a064:	sub	x0, x1, x0
   2a068:	str	x0, [sp, #32]
   2a06c:	ldr	x0, [sp, #32]
   2a070:	cmp	x0, #0x0
   2a074:	b.le	2a0b8 <PyInit__decimal@@Base+0x123e0>
   2a078:	ldr	x0, [sp, #16]
   2a07c:	ldr	x5, [x0, #40]
   2a080:	ldr	x0, [sp, #24]
   2a084:	ldr	x1, [x0, #40]
   2a088:	ldr	x0, [sp, #16]
   2a08c:	ldr	x0, [x0, #24]
   2a090:	mov	x2, x0
   2a094:	ldr	x0, [sp, #24]
   2a098:	ldr	x0, [x0, #24]
   2a09c:	mov	x3, x0
   2a0a0:	ldr	x0, [sp, #32]
   2a0a4:	mov	x4, x0
   2a0a8:	mov	x0, x5
   2a0ac:	bl	29d30 <PyInit__decimal@@Base+0x12058>
   2a0b0:	neg	w0, w0
   2a0b4:	b	2a1a8 <PyInit__decimal@@Base+0x124d0>
   2a0b8:	ldr	x0, [sp, #24]
   2a0bc:	ldr	x5, [x0, #40]
   2a0c0:	ldr	x0, [sp, #16]
   2a0c4:	ldr	x1, [x0, #40]
   2a0c8:	ldr	x0, [sp, #24]
   2a0cc:	ldr	x0, [x0, #24]
   2a0d0:	mov	x2, x0
   2a0d4:	ldr	x0, [sp, #16]
   2a0d8:	ldr	x0, [x0, #24]
   2a0dc:	mov	x3, x0
   2a0e0:	ldr	x0, [sp, #32]
   2a0e4:	neg	x0, x0
   2a0e8:	mov	x4, x0
   2a0ec:	mov	x0, x5
   2a0f0:	bl	29d30 <PyInit__decimal@@Base+0x12058>
   2a0f4:	b	2a1a8 <PyInit__decimal@@Base+0x124d0>
   2a0f8:	ldr	x0, [sp, #24]
   2a0fc:	ldr	x0, [x0, #24]
   2a100:	sub	x0, x0, #0x1
   2a104:	str	x0, [sp, #40]
   2a108:	b	2a198 <PyInit__decimal@@Base+0x124c0>
   2a10c:	ldr	x0, [sp, #24]
   2a110:	ldr	x1, [x0, #40]
   2a114:	ldr	x0, [sp, #40]
   2a118:	lsl	x0, x0, #3
   2a11c:	add	x0, x1, x0
   2a120:	ldr	x1, [x0]
   2a124:	ldr	x0, [sp, #16]
   2a128:	ldr	x2, [x0, #40]
   2a12c:	ldr	x0, [sp, #40]
   2a130:	lsl	x0, x0, #3
   2a134:	add	x0, x2, x0
   2a138:	ldr	x0, [x0]
   2a13c:	cmp	x1, x0
   2a140:	b.eq	2a18c <PyInit__decimal@@Base+0x124b4>  // b.none
   2a144:	ldr	x0, [sp, #24]
   2a148:	ldr	x1, [x0, #40]
   2a14c:	ldr	x0, [sp, #40]
   2a150:	lsl	x0, x0, #3
   2a154:	add	x0, x1, x0
   2a158:	ldr	x1, [x0]
   2a15c:	ldr	x0, [sp, #16]
   2a160:	ldr	x2, [x0, #40]
   2a164:	ldr	x0, [sp, #40]
   2a168:	lsl	x0, x0, #3
   2a16c:	add	x0, x2, x0
   2a170:	ldr	x0, [x0]
   2a174:	cmp	x1, x0
   2a178:	b.cs	2a184 <PyInit__decimal@@Base+0x124ac>  // b.hs, b.nlast
   2a17c:	mov	w0, #0xffffffff            	// #-1
   2a180:	b	2a1a8 <PyInit__decimal@@Base+0x124d0>
   2a184:	mov	w0, #0x1                   	// #1
   2a188:	b	2a1a8 <PyInit__decimal@@Base+0x124d0>
   2a18c:	ldr	x0, [sp, #40]
   2a190:	sub	x0, x0, #0x1
   2a194:	str	x0, [sp, #40]
   2a198:	ldr	x0, [sp, #40]
   2a19c:	cmp	x0, #0x0
   2a1a0:	b.ge	2a10c <PyInit__decimal@@Base+0x12434>  // b.tcont
   2a1a4:	mov	w0, #0x0                   	// #0
   2a1a8:	ldp	x29, x30, [sp], #48
   2a1ac:	ret
   2a1b0:	stp	x29, x30, [sp, #-304]!
   2a1b4:	mov	x29, sp
   2a1b8:	str	x0, [sp, #24]
   2a1bc:	str	x1, [sp, #16]
   2a1c0:	ldr	x1, [sp, #24]
   2a1c4:	ldr	x0, [sp, #16]
   2a1c8:	cmp	x1, x0
   2a1cc:	b.ne	2a1d8 <PyInit__decimal@@Base+0x12500>  // b.any
   2a1d0:	mov	w0, #0x0                   	// #0
   2a1d4:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a1d8:	ldr	x0, [sp, #24]
   2a1dc:	str	x0, [sp, #280]
   2a1e0:	ldr	x0, [sp, #280]
   2a1e4:	ldrb	w0, [x0]
   2a1e8:	and	w0, w0, #0x2
   2a1ec:	cmp	w0, #0x0
   2a1f0:	b.eq	2a270 <PyInit__decimal@@Base+0x12598>  // b.none
   2a1f4:	ldr	x0, [sp, #16]
   2a1f8:	str	x0, [sp, #272]
   2a1fc:	ldr	x0, [sp, #272]
   2a200:	ldrb	w0, [x0]
   2a204:	and	w0, w0, #0x2
   2a208:	cmp	w0, #0x0
   2a20c:	b.eq	2a240 <PyInit__decimal@@Base+0x12568>  // b.none
   2a210:	ldr	x0, [sp, #16]
   2a214:	str	x0, [sp, #256]
   2a218:	ldr	x0, [sp, #256]
   2a21c:	ldrb	w0, [x0]
   2a220:	and	w1, w0, #0x1
   2a224:	ldr	x0, [sp, #24]
   2a228:	str	x0, [sp, #264]
   2a22c:	ldr	x0, [sp, #264]
   2a230:	ldrb	w0, [x0]
   2a234:	and	w0, w0, #0x1
   2a238:	sub	w0, w1, w0
   2a23c:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a240:	ldr	x0, [sp, #24]
   2a244:	str	x0, [sp, #248]
   2a248:	ldr	x0, [sp, #248]
   2a24c:	str	x0, [sp, #240]
   2a250:	ldr	x0, [sp, #240]
   2a254:	ldrb	w0, [x0]
   2a258:	and	w1, w0, #0x1
   2a25c:	mov	w0, #0x0                   	// #0
   2a260:	sub	w0, w0, w1
   2a264:	lsl	w0, w0, #1
   2a268:	add	w0, w0, #0x1
   2a26c:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a270:	ldr	x0, [sp, #16]
   2a274:	str	x0, [sp, #232]
   2a278:	ldr	x0, [sp, #232]
   2a27c:	ldrb	w0, [x0]
   2a280:	and	w0, w0, #0x2
   2a284:	cmp	w0, #0x0
   2a288:	b.eq	2a2c0 <PyInit__decimal@@Base+0x125e8>  // b.none
   2a28c:	ldr	x0, [sp, #16]
   2a290:	str	x0, [sp, #224]
   2a294:	ldr	x0, [sp, #224]
   2a298:	str	x0, [sp, #216]
   2a29c:	ldr	x0, [sp, #216]
   2a2a0:	ldrb	w0, [x0]
   2a2a4:	and	w1, w0, #0x1
   2a2a8:	mov	w0, #0x0                   	// #0
   2a2ac:	sub	w0, w0, w1
   2a2b0:	lsl	w0, w0, #1
   2a2b4:	add	w0, w0, #0x1
   2a2b8:	neg	w0, w0
   2a2bc:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a2c0:	ldr	x0, [sp, #24]
   2a2c4:	str	x0, [sp, #208]
   2a2c8:	ldr	x0, [sp, #208]
   2a2cc:	str	x0, [sp, #200]
   2a2d0:	ldr	x0, [sp, #200]
   2a2d4:	ldr	x1, [x0, #40]
   2a2d8:	ldr	x0, [sp, #200]
   2a2dc:	ldr	x0, [x0, #24]
   2a2e0:	lsl	x0, x0, #3
   2a2e4:	sub	x0, x0, #0x8
   2a2e8:	add	x0, x1, x0
   2a2ec:	ldr	x0, [x0]
   2a2f0:	cmp	x0, #0x0
   2a2f4:	cset	w0, eq  // eq = none
   2a2f8:	and	w0, w0, #0xff
   2a2fc:	cmp	w0, #0x0
   2a300:	b.eq	2a384 <PyInit__decimal@@Base+0x126ac>  // b.none
   2a304:	ldr	x0, [sp, #16]
   2a308:	str	x0, [sp, #192]
   2a30c:	ldr	x0, [sp, #192]
   2a310:	str	x0, [sp, #184]
   2a314:	ldr	x0, [sp, #184]
   2a318:	ldr	x1, [x0, #40]
   2a31c:	ldr	x0, [sp, #184]
   2a320:	ldr	x0, [x0, #24]
   2a324:	lsl	x0, x0, #3
   2a328:	sub	x0, x0, #0x8
   2a32c:	add	x0, x1, x0
   2a330:	ldr	x0, [x0]
   2a334:	cmp	x0, #0x0
   2a338:	cset	w0, eq  // eq = none
   2a33c:	and	w0, w0, #0xff
   2a340:	cmp	w0, #0x0
   2a344:	b.eq	2a350 <PyInit__decimal@@Base+0x12678>  // b.none
   2a348:	mov	w0, #0x0                   	// #0
   2a34c:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a350:	ldr	x0, [sp, #16]
   2a354:	str	x0, [sp, #176]
   2a358:	ldr	x0, [sp, #176]
   2a35c:	str	x0, [sp, #168]
   2a360:	ldr	x0, [sp, #168]
   2a364:	ldrb	w0, [x0]
   2a368:	and	w1, w0, #0x1
   2a36c:	mov	w0, #0x0                   	// #0
   2a370:	sub	w0, w0, w1
   2a374:	lsl	w0, w0, #1
   2a378:	add	w0, w0, #0x1
   2a37c:	neg	w0, w0
   2a380:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a384:	ldr	x0, [sp, #16]
   2a388:	str	x0, [sp, #160]
   2a38c:	ldr	x0, [sp, #160]
   2a390:	str	x0, [sp, #152]
   2a394:	ldr	x0, [sp, #152]
   2a398:	ldr	x1, [x0, #40]
   2a39c:	ldr	x0, [sp, #152]
   2a3a0:	ldr	x0, [x0, #24]
   2a3a4:	lsl	x0, x0, #3
   2a3a8:	sub	x0, x0, #0x8
   2a3ac:	add	x0, x1, x0
   2a3b0:	ldr	x0, [x0]
   2a3b4:	cmp	x0, #0x0
   2a3b8:	cset	w0, eq  // eq = none
   2a3bc:	and	w0, w0, #0xff
   2a3c0:	cmp	w0, #0x0
   2a3c4:	b.eq	2a3f8 <PyInit__decimal@@Base+0x12720>  // b.none
   2a3c8:	ldr	x0, [sp, #24]
   2a3cc:	str	x0, [sp, #144]
   2a3d0:	ldr	x0, [sp, #144]
   2a3d4:	str	x0, [sp, #136]
   2a3d8:	ldr	x0, [sp, #136]
   2a3dc:	ldrb	w0, [x0]
   2a3e0:	and	w1, w0, #0x1
   2a3e4:	mov	w0, #0x0                   	// #0
   2a3e8:	sub	w0, w0, w1
   2a3ec:	lsl	w0, w0, #1
   2a3f0:	add	w0, w0, #0x1
   2a3f4:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a3f8:	ldr	x0, [sp, #24]
   2a3fc:	str	x0, [sp, #120]
   2a400:	ldr	x0, [sp, #120]
   2a404:	ldrb	w0, [x0]
   2a408:	and	w0, w0, #0x1
   2a40c:	and	w1, w0, #0xff
   2a410:	ldr	x0, [sp, #16]
   2a414:	str	x0, [sp, #128]
   2a418:	ldr	x0, [sp, #128]
   2a41c:	ldrb	w0, [x0]
   2a420:	and	w0, w0, #0x1
   2a424:	and	w0, w0, #0xff
   2a428:	cmp	w1, w0
   2a42c:	b.eq	2a46c <PyInit__decimal@@Base+0x12794>  // b.none
   2a430:	ldr	x0, [sp, #16]
   2a434:	str	x0, [sp, #104]
   2a438:	ldr	x0, [sp, #104]
   2a43c:	ldrb	w0, [x0]
   2a440:	and	w0, w0, #0x1
   2a444:	and	w0, w0, #0xff
   2a448:	mov	w1, w0
   2a44c:	ldr	x0, [sp, #24]
   2a450:	str	x0, [sp, #112]
   2a454:	ldr	x0, [sp, #112]
   2a458:	ldrb	w0, [x0]
   2a45c:	and	w0, w0, #0x1
   2a460:	and	w0, w0, #0xff
   2a464:	sub	w0, w1, w0
   2a468:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a46c:	ldr	x0, [sp, #24]
   2a470:	str	x0, [sp, #88]
   2a474:	ldr	x0, [sp, #88]
   2a478:	ldr	x1, [x0, #8]
   2a47c:	ldr	x0, [sp, #88]
   2a480:	ldr	x0, [x0, #16]
   2a484:	add	x0, x1, x0
   2a488:	sub	x0, x0, #0x1
   2a48c:	str	x0, [sp, #296]
   2a490:	ldr	x0, [sp, #16]
   2a494:	str	x0, [sp, #96]
   2a498:	ldr	x0, [sp, #96]
   2a49c:	ldr	x1, [x0, #8]
   2a4a0:	ldr	x0, [sp, #96]
   2a4a4:	ldr	x0, [x0, #16]
   2a4a8:	add	x0, x1, x0
   2a4ac:	sub	x0, x0, #0x1
   2a4b0:	str	x0, [sp, #288]
   2a4b4:	ldr	x1, [sp, #296]
   2a4b8:	ldr	x0, [sp, #288]
   2a4bc:	cmp	x1, x0
   2a4c0:	b.eq	2a538 <PyInit__decimal@@Base+0x12860>  // b.none
   2a4c4:	ldr	x1, [sp, #296]
   2a4c8:	ldr	x0, [sp, #288]
   2a4cc:	cmp	x1, x0
   2a4d0:	b.ge	2a508 <PyInit__decimal@@Base+0x12830>  // b.tcont
   2a4d4:	ldr	x0, [sp, #24]
   2a4d8:	str	x0, [sp, #80]
   2a4dc:	ldr	x0, [sp, #80]
   2a4e0:	str	x0, [sp, #72]
   2a4e4:	ldr	x0, [sp, #72]
   2a4e8:	ldrb	w0, [x0]
   2a4ec:	and	w1, w0, #0x1
   2a4f0:	mov	w0, #0x0                   	// #0
   2a4f4:	sub	w0, w0, w1
   2a4f8:	lsl	w0, w0, #1
   2a4fc:	add	w0, w0, #0x1
   2a500:	neg	w0, w0
   2a504:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a508:	ldr	x0, [sp, #24]
   2a50c:	str	x0, [sp, #64]
   2a510:	ldr	x0, [sp, #64]
   2a514:	str	x0, [sp, #56]
   2a518:	ldr	x0, [sp, #56]
   2a51c:	ldrb	w0, [x0]
   2a520:	and	w1, w0, #0x1
   2a524:	mov	w0, #0x0                   	// #0
   2a528:	sub	w0, w0, w1
   2a52c:	lsl	w0, w0, #1
   2a530:	add	w0, w0, #0x1
   2a534:	b	2a578 <PyInit__decimal@@Base+0x128a0>
   2a538:	ldr	x1, [sp, #16]
   2a53c:	ldr	x0, [sp, #24]
   2a540:	bl	2a02c <PyInit__decimal@@Base+0x12354>
   2a544:	mov	w2, w0
   2a548:	ldr	x0, [sp, #24]
   2a54c:	str	x0, [sp, #48]
   2a550:	ldr	x0, [sp, #48]
   2a554:	str	x0, [sp, #40]
   2a558:	ldr	x0, [sp, #40]
   2a55c:	ldrb	w0, [x0]
   2a560:	and	w1, w0, #0x1
   2a564:	mov	w0, #0x0                   	// #0
   2a568:	sub	w0, w0, w1
   2a56c:	lsl	w0, w0, #1
   2a570:	add	w0, w0, #0x1
   2a574:	mul	w0, w2, w0
   2a578:	ldp	x29, x30, [sp], #304
   2a57c:	ret
   2a580:	stp	x29, x30, [sp, #-144]!
   2a584:	mov	x29, sp
   2a588:	str	x0, [sp, #24]
   2a58c:	str	x1, [sp, #16]
   2a590:	ldr	x1, [sp, #24]
   2a594:	ldr	x0, [sp, #16]
   2a598:	cmp	x1, x0
   2a59c:	b.ne	2a5a8 <PyInit__decimal@@Base+0x128d0>  // b.any
   2a5a0:	mov	w0, #0x0                   	// #0
   2a5a4:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a5a8:	ldr	x0, [sp, #24]
   2a5ac:	str	x0, [sp, #120]
   2a5b0:	ldr	x0, [sp, #120]
   2a5b4:	ldrb	w0, [x0]
   2a5b8:	and	w0, w0, #0x2
   2a5bc:	cmp	w0, #0x0
   2a5c0:	b.eq	2a5f0 <PyInit__decimal@@Base+0x12918>  // b.none
   2a5c4:	ldr	x0, [sp, #16]
   2a5c8:	str	x0, [sp, #112]
   2a5cc:	ldr	x0, [sp, #112]
   2a5d0:	ldrb	w0, [x0]
   2a5d4:	and	w0, w0, #0x2
   2a5d8:	cmp	w0, #0x0
   2a5dc:	b.eq	2a5e8 <PyInit__decimal@@Base+0x12910>  // b.none
   2a5e0:	mov	w0, #0x0                   	// #0
   2a5e4:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a5e8:	mov	w0, #0x1                   	// #1
   2a5ec:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a5f0:	ldr	x0, [sp, #16]
   2a5f4:	str	x0, [sp, #104]
   2a5f8:	ldr	x0, [sp, #104]
   2a5fc:	ldrb	w0, [x0]
   2a600:	and	w0, w0, #0x2
   2a604:	cmp	w0, #0x0
   2a608:	b.eq	2a614 <PyInit__decimal@@Base+0x1293c>  // b.none
   2a60c:	mov	w0, #0xffffffff            	// #-1
   2a610:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a614:	ldr	x0, [sp, #24]
   2a618:	str	x0, [sp, #96]
   2a61c:	ldr	x0, [sp, #96]
   2a620:	str	x0, [sp, #88]
   2a624:	ldr	x0, [sp, #88]
   2a628:	ldr	x1, [x0, #40]
   2a62c:	ldr	x0, [sp, #88]
   2a630:	ldr	x0, [x0, #24]
   2a634:	lsl	x0, x0, #3
   2a638:	sub	x0, x0, #0x8
   2a63c:	add	x0, x1, x0
   2a640:	ldr	x0, [x0]
   2a644:	cmp	x0, #0x0
   2a648:	cset	w0, eq  // eq = none
   2a64c:	and	w0, w0, #0xff
   2a650:	cmp	w0, #0x0
   2a654:	b.eq	2a6ac <PyInit__decimal@@Base+0x129d4>  // b.none
   2a658:	ldr	x0, [sp, #16]
   2a65c:	str	x0, [sp, #80]
   2a660:	ldr	x0, [sp, #80]
   2a664:	str	x0, [sp, #72]
   2a668:	ldr	x0, [sp, #72]
   2a66c:	ldr	x1, [x0, #40]
   2a670:	ldr	x0, [sp, #72]
   2a674:	ldr	x0, [x0, #24]
   2a678:	lsl	x0, x0, #3
   2a67c:	sub	x0, x0, #0x8
   2a680:	add	x0, x1, x0
   2a684:	ldr	x0, [x0]
   2a688:	cmp	x0, #0x0
   2a68c:	cset	w0, eq  // eq = none
   2a690:	and	w0, w0, #0xff
   2a694:	cmp	w0, #0x0
   2a698:	b.eq	2a6a4 <PyInit__decimal@@Base+0x129cc>  // b.none
   2a69c:	mov	w0, #0x0                   	// #0
   2a6a0:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a6a4:	mov	w0, #0xffffffff            	// #-1
   2a6a8:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a6ac:	ldr	x0, [sp, #16]
   2a6b0:	str	x0, [sp, #64]
   2a6b4:	ldr	x0, [sp, #64]
   2a6b8:	str	x0, [sp, #56]
   2a6bc:	ldr	x0, [sp, #56]
   2a6c0:	ldr	x1, [x0, #40]
   2a6c4:	ldr	x0, [sp, #56]
   2a6c8:	ldr	x0, [x0, #24]
   2a6cc:	lsl	x0, x0, #3
   2a6d0:	sub	x0, x0, #0x8
   2a6d4:	add	x0, x1, x0
   2a6d8:	ldr	x0, [x0]
   2a6dc:	cmp	x0, #0x0
   2a6e0:	cset	w0, eq  // eq = none
   2a6e4:	and	w0, w0, #0xff
   2a6e8:	cmp	w0, #0x0
   2a6ec:	b.eq	2a6f8 <PyInit__decimal@@Base+0x12a20>  // b.none
   2a6f0:	mov	w0, #0x1                   	// #1
   2a6f4:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a6f8:	ldr	x0, [sp, #24]
   2a6fc:	str	x0, [sp, #40]
   2a700:	ldr	x0, [sp, #40]
   2a704:	ldr	x1, [x0, #8]
   2a708:	ldr	x0, [sp, #40]
   2a70c:	ldr	x0, [x0, #16]
   2a710:	add	x0, x1, x0
   2a714:	sub	x0, x0, #0x1
   2a718:	str	x0, [sp, #136]
   2a71c:	ldr	x0, [sp, #16]
   2a720:	str	x0, [sp, #48]
   2a724:	ldr	x0, [sp, #48]
   2a728:	ldr	x1, [x0, #8]
   2a72c:	ldr	x0, [sp, #48]
   2a730:	ldr	x0, [x0, #16]
   2a734:	add	x0, x1, x0
   2a738:	sub	x0, x0, #0x1
   2a73c:	str	x0, [sp, #128]
   2a740:	ldr	x1, [sp, #136]
   2a744:	ldr	x0, [sp, #128]
   2a748:	cmp	x1, x0
   2a74c:	b.eq	2a770 <PyInit__decimal@@Base+0x12a98>  // b.none
   2a750:	ldr	x1, [sp, #136]
   2a754:	ldr	x0, [sp, #128]
   2a758:	cmp	x1, x0
   2a75c:	b.ge	2a768 <PyInit__decimal@@Base+0x12a90>  // b.tcont
   2a760:	mov	w0, #0xffffffff            	// #-1
   2a764:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a768:	mov	w0, #0x1                   	// #1
   2a76c:	b	2a77c <PyInit__decimal@@Base+0x12aa4>
   2a770:	ldr	x1, [sp, #16]
   2a774:	ldr	x0, [sp, #24]
   2a778:	bl	2a02c <PyInit__decimal@@Base+0x12354>
   2a77c:	ldp	x29, x30, [sp], #144
   2a780:	ret
   2a784:	stp	x29, x30, [sp, #-80]!
   2a788:	mov	x29, sp
   2a78c:	str	x0, [sp, #40]
   2a790:	str	x1, [sp, #32]
   2a794:	str	x2, [sp, #24]
   2a798:	ldr	x0, [sp, #40]
   2a79c:	str	x0, [sp, #72]
   2a7a0:	ldr	x0, [sp, #72]
   2a7a4:	ldrb	w0, [x0]
   2a7a8:	and	w0, w0, #0xe
   2a7ac:	cmp	w0, #0x0
   2a7b0:	b.ne	2a7d0 <PyInit__decimal@@Base+0x12af8>  // b.any
   2a7b4:	ldr	x0, [sp, #32]
   2a7b8:	str	x0, [sp, #64]
   2a7bc:	ldr	x0, [sp, #64]
   2a7c0:	ldrb	w0, [x0]
   2a7c4:	and	w0, w0, #0xe
   2a7c8:	cmp	w0, #0x0
   2a7cc:	b.eq	2a824 <PyInit__decimal@@Base+0x12b4c>  // b.none
   2a7d0:	ldr	x0, [sp, #40]
   2a7d4:	str	x0, [sp, #56]
   2a7d8:	ldr	x0, [sp, #56]
   2a7dc:	ldrb	w0, [x0]
   2a7e0:	and	w0, w0, #0xc
   2a7e4:	cmp	w0, #0x0
   2a7e8:	b.ne	2a808 <PyInit__decimal@@Base+0x12b30>  // b.any
   2a7ec:	ldr	x0, [sp, #32]
   2a7f0:	str	x0, [sp, #48]
   2a7f4:	ldr	x0, [sp, #48]
   2a7f8:	ldrb	w0, [x0]
   2a7fc:	and	w0, w0, #0xc
   2a800:	cmp	w0, #0x0
   2a804:	b.eq	2a824 <PyInit__decimal@@Base+0x12b4c>  // b.none
   2a808:	ldr	x0, [sp, #24]
   2a80c:	ldr	w0, [x0]
   2a810:	orr	w1, w0, #0x100
   2a814:	ldr	x0, [sp, #24]
   2a818:	str	w1, [x0]
   2a81c:	mov	w0, #0x7fffffff            	// #2147483647
   2a820:	b	2a830 <PyInit__decimal@@Base+0x12b58>
   2a824:	ldr	x1, [sp, #32]
   2a828:	ldr	x0, [sp, #40]
   2a82c:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   2a830:	ldp	x29, x30, [sp], #80
   2a834:	ret
   2a838:	stp	x29, x30, [sp, #-96]!
   2a83c:	mov	x29, sp
   2a840:	str	x0, [sp, #56]
   2a844:	str	x1, [sp, #48]
   2a848:	str	x2, [sp, #40]
   2a84c:	str	x3, [sp, #32]
   2a850:	str	x4, [sp, #24]
   2a854:	ldr	x0, [sp, #48]
   2a858:	str	x0, [sp, #80]
   2a85c:	ldr	x0, [sp, #80]
   2a860:	ldrb	w0, [x0]
   2a864:	and	w0, w0, #0xe
   2a868:	cmp	w0, #0x0
   2a86c:	b.ne	2a88c <PyInit__decimal@@Base+0x12bb4>  // b.any
   2a870:	ldr	x0, [sp, #40]
   2a874:	str	x0, [sp, #72]
   2a878:	ldr	x0, [sp, #72]
   2a87c:	ldrb	w0, [x0]
   2a880:	and	w0, w0, #0xe
   2a884:	cmp	w0, #0x0
   2a888:	b.eq	2a8b4 <PyInit__decimal@@Base+0x12bdc>  // b.none
   2a88c:	ldr	x4, [sp, #24]
   2a890:	ldr	x3, [sp, #32]
   2a894:	ldr	x2, [sp, #40]
   2a898:	ldr	x1, [sp, #48]
   2a89c:	ldr	x0, [sp, #56]
   2a8a0:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2a8a4:	cmp	w0, #0x0
   2a8a8:	b.eq	2a8b4 <PyInit__decimal@@Base+0x12bdc>  // b.none
   2a8ac:	mov	w0, #0x7fffffff            	// #2147483647
   2a8b0:	b	2a8fc <PyInit__decimal@@Base+0x12c24>
   2a8b4:	ldr	x1, [sp, #40]
   2a8b8:	ldr	x0, [sp, #48]
   2a8bc:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   2a8c0:	str	w0, [sp, #92]
   2a8c4:	ldr	w0, [sp, #92]
   2a8c8:	lsr	w0, w0, #31
   2a8cc:	and	w0, w0, #0xff
   2a8d0:	mov	w1, w0
   2a8d4:	ldr	w0, [sp, #92]
   2a8d8:	cmp	w0, #0x0
   2a8dc:	cset	w0, ne  // ne = any
   2a8e0:	and	w0, w0, #0xff
   2a8e4:	and	x0, x0, #0xff
   2a8e8:	mov	x3, #0x0                   	// #0
   2a8ec:	mov	x2, x0
   2a8f0:	ldr	x0, [sp, #56]
   2a8f4:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   2a8f8:	ldr	w0, [sp, #92]
   2a8fc:	ldp	x29, x30, [sp], #96
   2a900:	ret
   2a904:	stp	x29, x30, [sp, #-96]!
   2a908:	mov	x29, sp
   2a90c:	str	x0, [sp, #56]
   2a910:	str	x1, [sp, #48]
   2a914:	str	x2, [sp, #40]
   2a918:	str	x3, [sp, #32]
   2a91c:	str	x4, [sp, #24]
   2a920:	ldr	x0, [sp, #48]
   2a924:	str	x0, [sp, #80]
   2a928:	ldr	x0, [sp, #80]
   2a92c:	ldrb	w0, [x0]
   2a930:	and	w0, w0, #0xe
   2a934:	cmp	w0, #0x0
   2a938:	b.ne	2a958 <PyInit__decimal@@Base+0x12c80>  // b.any
   2a93c:	ldr	x0, [sp, #40]
   2a940:	str	x0, [sp, #72]
   2a944:	ldr	x0, [sp, #72]
   2a948:	ldrb	w0, [x0]
   2a94c:	and	w0, w0, #0xe
   2a950:	cmp	w0, #0x0
   2a954:	b.eq	2a994 <PyInit__decimal@@Base+0x12cbc>  // b.none
   2a958:	ldr	x4, [sp, #24]
   2a95c:	ldr	x3, [sp, #32]
   2a960:	ldr	x2, [sp, #40]
   2a964:	ldr	x1, [sp, #48]
   2a968:	ldr	x0, [sp, #56]
   2a96c:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2a970:	cmp	w0, #0x0
   2a974:	b.eq	2a994 <PyInit__decimal@@Base+0x12cbc>  // b.none
   2a978:	ldr	x0, [sp, #24]
   2a97c:	ldr	w0, [x0]
   2a980:	orr	w1, w0, #0x100
   2a984:	ldr	x0, [sp, #24]
   2a988:	str	w1, [x0]
   2a98c:	mov	w0, #0x7fffffff            	// #2147483647
   2a990:	b	2a9dc <PyInit__decimal@@Base+0x12d04>
   2a994:	ldr	x1, [sp, #40]
   2a998:	ldr	x0, [sp, #48]
   2a99c:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   2a9a0:	str	w0, [sp, #92]
   2a9a4:	ldr	w0, [sp, #92]
   2a9a8:	lsr	w0, w0, #31
   2a9ac:	and	w0, w0, #0xff
   2a9b0:	mov	w1, w0
   2a9b4:	ldr	w0, [sp, #92]
   2a9b8:	cmp	w0, #0x0
   2a9bc:	cset	w0, ne  // ne = any
   2a9c0:	and	w0, w0, #0xff
   2a9c4:	and	x0, x0, #0xff
   2a9c8:	mov	x3, #0x0                   	// #0
   2a9cc:	mov	x2, x0
   2a9d0:	ldr	x0, [sp, #56]
   2a9d4:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   2a9d8:	ldr	w0, [sp, #92]
   2a9dc:	ldp	x29, x30, [sp], #96
   2a9e0:	ret
   2a9e4:	stp	x29, x30, [sp, #-240]!
   2a9e8:	mov	x29, sp
   2a9ec:	str	x0, [sp, #24]
   2a9f0:	str	x1, [sp, #16]
   2a9f4:	ldr	x0, [sp, #24]
   2a9f8:	str	x0, [sp, #208]
   2a9fc:	ldr	x0, [sp, #208]
   2aa00:	ldrb	w0, [x0]
   2aa04:	and	w0, w0, #0x1
   2aa08:	and	w1, w0, #0xff
   2aa0c:	ldr	x0, [sp, #16]
   2aa10:	str	x0, [sp, #216]
   2aa14:	ldr	x0, [sp, #216]
   2aa18:	ldrb	w0, [x0]
   2aa1c:	and	w0, w0, #0x1
   2aa20:	and	w0, w0, #0xff
   2aa24:	cmp	w1, w0
   2aa28:	b.eq	2aa68 <PyInit__decimal@@Base+0x12d90>  // b.none
   2aa2c:	ldr	x0, [sp, #16]
   2aa30:	str	x0, [sp, #192]
   2aa34:	ldr	x0, [sp, #192]
   2aa38:	ldrb	w0, [x0]
   2aa3c:	and	w0, w0, #0x1
   2aa40:	and	w0, w0, #0xff
   2aa44:	mov	w1, w0
   2aa48:	ldr	x0, [sp, #24]
   2aa4c:	str	x0, [sp, #200]
   2aa50:	ldr	x0, [sp, #200]
   2aa54:	ldrb	w0, [x0]
   2aa58:	and	w0, w0, #0x1
   2aa5c:	and	w0, w0, #0xff
   2aa60:	sub	w0, w1, w0
   2aa64:	b	2ac5c <PyInit__decimal@@Base+0x12f84>
   2aa68:	ldr	x0, [sp, #24]
   2aa6c:	str	x0, [sp, #184]
   2aa70:	ldr	x0, [sp, #184]
   2aa74:	ldrb	w0, [x0]
   2aa78:	and	w0, w0, #0xc
   2aa7c:	cmp	w0, #0x0
   2aa80:	b.eq	2aba4 <PyInit__decimal@@Base+0x12ecc>  // b.none
   2aa84:	mov	w0, #0x1                   	// #1
   2aa88:	str	w0, [sp, #236]
   2aa8c:	ldr	x0, [sp, #16]
   2aa90:	str	x0, [sp, #176]
   2aa94:	ldr	x0, [sp, #176]
   2aa98:	ldrb	w0, [x0]
   2aa9c:	and	w0, w0, #0xc
   2aaa0:	cmp	w0, #0x0
   2aaa4:	b.eq	2ac28 <PyInit__decimal@@Base+0x12f50>  // b.none
   2aaa8:	ldr	x0, [sp, #24]
   2aaac:	str	x0, [sp, #160]
   2aab0:	ldr	x0, [sp, #160]
   2aab4:	ldrb	w0, [x0]
   2aab8:	and	w0, w0, #0x4
   2aabc:	cmp	w0, #0x0
   2aac0:	cset	w0, ne  // ne = any
   2aac4:	and	w0, w0, #0xff
   2aac8:	str	w0, [sp, #232]
   2aacc:	ldr	x0, [sp, #16]
   2aad0:	str	x0, [sp, #168]
   2aad4:	ldr	x0, [sp, #168]
   2aad8:	ldrb	w0, [x0]
   2aadc:	and	w0, w0, #0x4
   2aae0:	cmp	w0, #0x0
   2aae4:	cset	w0, ne  // ne = any
   2aae8:	and	w0, w0, #0xff
   2aaec:	str	w0, [sp, #228]
   2aaf0:	ldr	w1, [sp, #228]
   2aaf4:	ldr	w0, [sp, #232]
   2aaf8:	cmp	w1, w0
   2aafc:	b.ne	2ab90 <PyInit__decimal@@Base+0x12eb8>  // b.any
   2ab00:	ldr	x0, [sp, #24]
   2ab04:	ldr	x0, [x0, #24]
   2ab08:	cmp	x0, #0x0
   2ab0c:	b.le	2ab58 <PyInit__decimal@@Base+0x12e80>
   2ab10:	ldr	x0, [sp, #16]
   2ab14:	ldr	x0, [x0, #24]
   2ab18:	cmp	x0, #0x0
   2ab1c:	b.le	2ab58 <PyInit__decimal@@Base+0x12e80>
   2ab20:	add	x0, sp, #0x58
   2ab24:	ldr	x1, [sp, #24]
   2ab28:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   2ab2c:	add	x0, sp, #0x28
   2ab30:	ldr	x1, [sp, #16]
   2ab34:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   2ab38:	str	xzr, [sp, #48]
   2ab3c:	ldr	x0, [sp, #48]
   2ab40:	str	x0, [sp, #96]
   2ab44:	add	x1, sp, #0x28
   2ab48:	add	x0, sp, #0x58
   2ab4c:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   2ab50:	str	w0, [sp, #236]
   2ab54:	b	2ac28 <PyInit__decimal@@Base+0x12f50>
   2ab58:	ldr	x0, [sp, #24]
   2ab5c:	ldr	x0, [x0, #24]
   2ab60:	cmp	x0, #0x0
   2ab64:	cset	w0, gt
   2ab68:	and	w0, w0, #0xff
   2ab6c:	mov	w1, w0
   2ab70:	ldr	x0, [sp, #16]
   2ab74:	ldr	x0, [x0, #24]
   2ab78:	cmp	x0, #0x0
   2ab7c:	cset	w0, gt
   2ab80:	and	w0, w0, #0xff
   2ab84:	sub	w0, w1, w0
   2ab88:	str	w0, [sp, #236]
   2ab8c:	b	2ac28 <PyInit__decimal@@Base+0x12f50>
   2ab90:	ldr	w1, [sp, #232]
   2ab94:	ldr	w0, [sp, #228]
   2ab98:	sub	w0, w1, w0
   2ab9c:	str	w0, [sp, #236]
   2aba0:	b	2ac28 <PyInit__decimal@@Base+0x12f50>
   2aba4:	ldr	x0, [sp, #16]
   2aba8:	str	x0, [sp, #152]
   2abac:	ldr	x0, [sp, #152]
   2abb0:	ldrb	w0, [x0]
   2abb4:	and	w0, w0, #0xc
   2abb8:	cmp	w0, #0x0
   2abbc:	b.eq	2abcc <PyInit__decimal@@Base+0x12ef4>  // b.none
   2abc0:	mov	w0, #0xffffffff            	// #-1
   2abc4:	str	w0, [sp, #236]
   2abc8:	b	2ac28 <PyInit__decimal@@Base+0x12f50>
   2abcc:	ldr	x1, [sp, #16]
   2abd0:	ldr	x0, [sp, #24]
   2abd4:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   2abd8:	str	w0, [sp, #236]
   2abdc:	ldr	w0, [sp, #236]
   2abe0:	cmp	w0, #0x0
   2abe4:	b.ne	2ac28 <PyInit__decimal@@Base+0x12f50>  // b.any
   2abe8:	ldr	x0, [sp, #24]
   2abec:	ldr	x1, [x0, #8]
   2abf0:	ldr	x0, [sp, #16]
   2abf4:	ldr	x0, [x0, #8]
   2abf8:	cmp	x1, x0
   2abfc:	b.eq	2ac28 <PyInit__decimal@@Base+0x12f50>  // b.none
   2ac00:	ldr	x0, [sp, #24]
   2ac04:	ldr	x1, [x0, #8]
   2ac08:	ldr	x0, [sp, #16]
   2ac0c:	ldr	x0, [x0, #8]
   2ac10:	cmp	x1, x0
   2ac14:	b.ge	2ac20 <PyInit__decimal@@Base+0x12f48>  // b.tcont
   2ac18:	mov	w0, #0xffffffff            	// #-1
   2ac1c:	b	2ac24 <PyInit__decimal@@Base+0x12f4c>
   2ac20:	mov	w0, #0x1                   	// #1
   2ac24:	str	w0, [sp, #236]
   2ac28:	ldr	x0, [sp, #24]
   2ac2c:	str	x0, [sp, #144]
   2ac30:	ldr	x0, [sp, #144]
   2ac34:	str	x0, [sp, #136]
   2ac38:	ldr	x0, [sp, #136]
   2ac3c:	ldrb	w0, [x0]
   2ac40:	and	w1, w0, #0x1
   2ac44:	mov	w0, #0x0                   	// #0
   2ac48:	sub	w0, w0, w1
   2ac4c:	lsl	w0, w0, #1
   2ac50:	add	w1, w0, #0x1
   2ac54:	ldr	w0, [sp, #236]
   2ac58:	mul	w0, w1, w0
   2ac5c:	ldp	x29, x30, [sp], #240
   2ac60:	ret
   2ac64:	stp	x29, x30, [sp, #-64]!
   2ac68:	mov	x29, sp
   2ac6c:	str	x0, [sp, #40]
   2ac70:	str	x1, [sp, #32]
   2ac74:	str	x2, [sp, #24]
   2ac78:	ldr	x1, [sp, #24]
   2ac7c:	ldr	x0, [sp, #32]
   2ac80:	bl	2a9e4 <PyInit__decimal@@Base+0x12d0c>
   2ac84:	str	w0, [sp, #60]
   2ac88:	ldr	w0, [sp, #60]
   2ac8c:	lsr	w0, w0, #31
   2ac90:	and	w0, w0, #0xff
   2ac94:	mov	w1, w0
   2ac98:	ldr	w0, [sp, #60]
   2ac9c:	cmp	w0, #0x0
   2aca0:	cset	w0, ne  // ne = any
   2aca4:	and	w0, w0, #0xff
   2aca8:	and	x0, x0, #0xff
   2acac:	mov	x3, #0x0                   	// #0
   2acb0:	mov	x2, x0
   2acb4:	ldr	x0, [sp, #40]
   2acb8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   2acbc:	ldr	w0, [sp, #60]
   2acc0:	ldp	x29, x30, [sp], #64
   2acc4:	ret
   2acc8:	stp	x29, x30, [sp, #-144]!
   2accc:	mov	x29, sp
   2acd0:	str	x0, [sp, #24]
   2acd4:	str	x1, [sp, #16]
   2acd8:	add	x0, sp, #0x50
   2acdc:	ldr	x1, [sp, #24]
   2ace0:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   2ace4:	add	x0, sp, #0x20
   2ace8:	ldr	x1, [sp, #16]
   2acec:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   2acf0:	add	x0, sp, #0x50
   2acf4:	str	x0, [sp, #128]
   2acf8:	ldr	x0, [sp, #128]
   2acfc:	ldrb	w0, [x0]
   2ad00:	and	w0, w0, #0xfffffffe
   2ad04:	and	w1, w0, #0xff
   2ad08:	ldr	x0, [sp, #128]
   2ad0c:	strb	w1, [x0]
   2ad10:	nop
   2ad14:	add	x0, sp, #0x20
   2ad18:	str	x0, [sp, #136]
   2ad1c:	ldr	x0, [sp, #136]
   2ad20:	ldrb	w0, [x0]
   2ad24:	and	w0, w0, #0xfffffffe
   2ad28:	and	w1, w0, #0xff
   2ad2c:	ldr	x0, [sp, #136]
   2ad30:	strb	w1, [x0]
   2ad34:	nop
   2ad38:	add	x1, sp, #0x20
   2ad3c:	add	x0, sp, #0x50
   2ad40:	bl	2a9e4 <PyInit__decimal@@Base+0x12d0c>
   2ad44:	ldp	x29, x30, [sp], #144
   2ad48:	ret
   2ad4c:	stp	x29, x30, [sp, #-64]!
   2ad50:	mov	x29, sp
   2ad54:	str	x0, [sp, #40]
   2ad58:	str	x1, [sp, #32]
   2ad5c:	str	x2, [sp, #24]
   2ad60:	ldr	x1, [sp, #24]
   2ad64:	ldr	x0, [sp, #32]
   2ad68:	bl	2acc8 <PyInit__decimal@@Base+0x12ff0>
   2ad6c:	str	w0, [sp, #60]
   2ad70:	ldr	w0, [sp, #60]
   2ad74:	lsr	w0, w0, #31
   2ad78:	and	w0, w0, #0xff
   2ad7c:	mov	w1, w0
   2ad80:	ldr	w0, [sp, #60]
   2ad84:	cmp	w0, #0x0
   2ad88:	cset	w0, ne  // ne = any
   2ad8c:	and	w0, w0, #0xff
   2ad90:	and	x0, x0, #0xff
   2ad94:	mov	x3, #0x0                   	// #0
   2ad98:	mov	x2, x0
   2ad9c:	ldr	x0, [sp, #40]
   2ada0:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   2ada4:	ldr	w0, [sp, #60]
   2ada8:	ldp	x29, x30, [sp], #64
   2adac:	ret
   2adb0:	sub	sp, sp, #0x40
   2adb4:	str	x0, [sp, #8]
   2adb8:	str	x1, [sp]
   2adbc:	ldr	x0, [sp, #8]
   2adc0:	str	x0, [sp, #32]
   2adc4:	ldr	x0, [sp, #32]
   2adc8:	ldrb	w0, [x0]
   2adcc:	and	w0, w0, #0x1
   2add0:	and	w0, w0, #0xff
   2add4:	str	w0, [sp, #56]
   2add8:	ldr	x0, [sp]
   2addc:	str	x0, [sp, #40]
   2ade0:	ldr	x0, [sp, #40]
   2ade4:	ldrb	w0, [x0]
   2ade8:	and	w0, w0, #0x1
   2adec:	and	w0, w0, #0xff
   2adf0:	str	w0, [sp, #52]
   2adf4:	ldr	w1, [sp, #56]
   2adf8:	ldr	w0, [sp, #52]
   2adfc:	cmp	w1, w0
   2ae00:	b.eq	2ae18 <PyInit__decimal@@Base+0x13140>  // b.none
   2ae04:	ldr	w1, [sp, #52]
   2ae08:	ldr	w0, [sp, #56]
   2ae0c:	sub	w0, w1, w0
   2ae10:	str	w0, [sp, #60]
   2ae14:	b	2ae78 <PyInit__decimal@@Base+0x131a0>
   2ae18:	ldr	x0, [sp, #8]
   2ae1c:	ldr	x1, [x0, #8]
   2ae20:	ldr	x0, [sp]
   2ae24:	ldr	x0, [x0, #8]
   2ae28:	cmp	x1, x0
   2ae2c:	b.ge	2ae38 <PyInit__decimal@@Base+0x13160>  // b.tcont
   2ae30:	mov	w0, #0xffffffff            	// #-1
   2ae34:	b	2ae3c <PyInit__decimal@@Base+0x13164>
   2ae38:	mov	w0, #0x1                   	// #1
   2ae3c:	str	w0, [sp, #60]
   2ae40:	ldr	x0, [sp, #8]
   2ae44:	str	x0, [sp, #24]
   2ae48:	ldr	x0, [sp, #24]
   2ae4c:	str	x0, [sp, #16]
   2ae50:	ldr	x0, [sp, #16]
   2ae54:	ldrb	w0, [x0]
   2ae58:	and	w1, w0, #0x1
   2ae5c:	mov	w0, #0x0                   	// #0
   2ae60:	sub	w0, w0, w1
   2ae64:	lsl	w0, w0, #1
   2ae68:	add	w0, w0, #0x1
   2ae6c:	ldr	w1, [sp, #60]
   2ae70:	mul	w0, w1, w0
   2ae74:	str	w0, [sp, #60]
   2ae78:	ldr	w0, [sp, #60]
   2ae7c:	add	sp, sp, #0x40
   2ae80:	ret
   2ae84:	stp	x29, x30, [sp, #-160]!
   2ae88:	mov	x29, sp
   2ae8c:	str	x0, [sp, #40]
   2ae90:	str	x1, [sp, #32]
   2ae94:	str	x2, [sp, #24]
   2ae98:	str	x3, [sp, #16]
   2ae9c:	ldr	x0, [sp, #32]
   2aea0:	str	x0, [sp, #144]
   2aea4:	ldr	x0, [sp, #144]
   2aea8:	str	x0, [sp, #136]
   2aeac:	ldr	x0, [sp, #136]
   2aeb0:	ldr	x1, [x0, #40]
   2aeb4:	ldr	x0, [sp, #136]
   2aeb8:	ldr	x0, [x0, #24]
   2aebc:	lsl	x0, x0, #3
   2aec0:	sub	x0, x0, #0x8
   2aec4:	add	x0, x1, x0
   2aec8:	ldr	x0, [x0]
   2aecc:	cmp	x0, #0x0
   2aed0:	cset	w0, eq  // eq = none
   2aed4:	and	w0, w0, #0xff
   2aed8:	cmp	w0, #0x0
   2aedc:	b.ne	2aeec <PyInit__decimal@@Base+0x13214>  // b.any
   2aee0:	ldr	x0, [sp, #24]
   2aee4:	cmp	x0, #0x0
   2aee8:	b.ne	2af00 <PyInit__decimal@@Base+0x13228>  // b.any
   2aeec:	ldr	x2, [sp, #16]
   2aef0:	ldr	x1, [sp, #32]
   2aef4:	ldr	x0, [sp, #40]
   2aef8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2aefc:	b	2b0d4 <PyInit__decimal@@Base+0x133fc>
   2af00:	ldr	x0, [sp, #32]
   2af04:	ldr	x1, [x0, #16]
   2af08:	ldr	x0, [sp, #24]
   2af0c:	add	x0, x1, x0
   2af10:	str	x0, [sp, #96]
   2af14:	add	x1, sp, #0x38
   2af18:	add	x0, sp, #0x40
   2af1c:	mov	x3, #0x13                  	// #19
   2af20:	ldr	x2, [sp, #96]
   2af24:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2af28:	ldr	x0, [sp, #56]
   2af2c:	cmp	x0, #0x0
   2af30:	b.eq	2af40 <PyInit__decimal@@Base+0x13268>  // b.none
   2af34:	ldr	x0, [sp, #64]
   2af38:	add	x0, x0, #0x1
   2af3c:	b	2af44 <PyInit__decimal@@Base+0x1326c>
   2af40:	ldr	x0, [sp, #64]
   2af44:	str	x0, [sp, #152]
   2af48:	ldr	x0, [sp, #40]
   2af4c:	str	x0, [sp, #128]
   2af50:	ldr	x0, [sp, #152]
   2af54:	str	x0, [sp, #120]
   2af58:	ldr	x0, [sp, #16]
   2af5c:	str	x0, [sp, #112]
   2af60:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2af64:	add	x0, x0, #0x6d8
   2af68:	ldr	x0, [x0]
   2af6c:	ldr	x2, [sp, #120]
   2af70:	ldr	x1, [sp, #120]
   2af74:	cmp	x2, x0
   2af78:	csel	x0, x1, x0, ge  // ge = tcont
   2af7c:	str	x0, [sp, #120]
   2af80:	ldr	x0, [sp, #128]
   2af84:	ldr	x0, [x0, #32]
   2af88:	ldr	x1, [sp, #120]
   2af8c:	cmp	x1, x0
   2af90:	b.ne	2af9c <PyInit__decimal@@Base+0x132c4>  // b.any
   2af94:	mov	w0, #0x1                   	// #1
   2af98:	b	2aff8 <PyInit__decimal@@Base+0x13320>
   2af9c:	ldr	x0, [sp, #128]
   2afa0:	str	x0, [sp, #104]
   2afa4:	ldr	x0, [sp, #104]
   2afa8:	ldrb	w0, [x0]
   2afac:	and	w0, w0, #0x20
   2afb0:	cmp	w0, #0x0
   2afb4:	b.eq	2afe8 <PyInit__decimal@@Base+0x13310>  // b.none
   2afb8:	ldr	x0, [sp, #128]
   2afbc:	ldr	x0, [x0, #32]
   2afc0:	ldr	x1, [sp, #120]
   2afc4:	cmp	x1, x0
   2afc8:	b.le	2afe0 <PyInit__decimal@@Base+0x13308>
   2afcc:	ldr	x2, [sp, #112]
   2afd0:	ldr	x1, [sp, #120]
   2afd4:	ldr	x0, [sp, #128]
   2afd8:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2afdc:	b	2aff8 <PyInit__decimal@@Base+0x13320>
   2afe0:	mov	w0, #0x1                   	// #1
   2afe4:	b	2aff8 <PyInit__decimal@@Base+0x13320>
   2afe8:	ldr	x2, [sp, #112]
   2afec:	ldr	x1, [sp, #120]
   2aff0:	ldr	x0, [sp, #128]
   2aff4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2aff8:	cmp	w0, #0x0
   2affc:	b.ne	2b008 <PyInit__decimal@@Base+0x13330>  // b.any
   2b000:	mov	w0, #0x0                   	// #0
   2b004:	b	2b0d4 <PyInit__decimal@@Base+0x133fc>
   2b008:	ldr	x0, [sp, #40]
   2b00c:	ldr	x5, [x0, #40]
   2b010:	ldr	x0, [sp, #32]
   2b014:	ldr	x1, [x0, #40]
   2b018:	ldr	x2, [sp, #152]
   2b01c:	ldr	x0, [sp, #32]
   2b020:	ldr	x0, [x0, #24]
   2b024:	mov	x3, x0
   2b028:	ldr	x0, [sp, #24]
   2b02c:	mov	x4, x0
   2b030:	mov	x0, x5
   2b034:	bl	1ac44 <PyInit__decimal@@Base+0x2f6c>
   2b038:	ldr	x0, [sp, #40]
   2b03c:	str	x0, [sp, #88]
   2b040:	ldr	x0, [sp, #32]
   2b044:	str	x0, [sp, #80]
   2b048:	ldr	x0, [sp, #80]
   2b04c:	ldrb	w0, [x0]
   2b050:	strb	w0, [sp, #79]
   2b054:	ldr	x0, [sp, #88]
   2b058:	ldrb	w0, [x0]
   2b05c:	and	w0, w0, #0xfffffff0
   2b060:	and	w1, w0, #0xff
   2b064:	ldr	x0, [sp, #88]
   2b068:	strb	w1, [x0]
   2b06c:	ldr	x0, [sp, #88]
   2b070:	ldrb	w0, [x0]
   2b074:	sxtb	w1, w0
   2b078:	ldrsb	w0, [sp, #79]
   2b07c:	and	w0, w0, #0xf
   2b080:	sxtb	w0, w0
   2b084:	orr	w0, w1, w0
   2b088:	sxtb	w0, w0
   2b08c:	and	w1, w0, #0xff
   2b090:	ldr	x0, [sp, #88]
   2b094:	strb	w1, [x0]
   2b098:	nop
   2b09c:	ldr	x0, [sp, #32]
   2b0a0:	ldr	x1, [x0, #8]
   2b0a4:	ldr	x0, [sp, #40]
   2b0a8:	str	x1, [x0, #8]
   2b0ac:	ldr	x0, [sp, #32]
   2b0b0:	ldr	x1, [x0, #16]
   2b0b4:	ldr	x0, [sp, #24]
   2b0b8:	add	x1, x1, x0
   2b0bc:	ldr	x0, [sp, #40]
   2b0c0:	str	x1, [x0, #16]
   2b0c4:	ldr	x0, [sp, #40]
   2b0c8:	ldr	x1, [sp, #152]
   2b0cc:	str	x1, [x0, #24]
   2b0d0:	mov	w0, #0x1                   	// #1
   2b0d4:	ldp	x29, x30, [sp], #160
   2b0d8:	ret
   2b0dc:	stp	x29, x30, [sp, #-80]!
   2b0e0:	mov	x29, sp
   2b0e4:	str	x0, [sp, #40]
   2b0e8:	str	x1, [sp, #32]
   2b0ec:	str	w2, [sp, #28]
   2b0f0:	str	xzr, [sp, #56]
   2b0f4:	str	xzr, [sp, #48]
   2b0f8:	ldr	x0, [sp, #32]
   2b0fc:	lsl	x0, x0, #3
   2b100:	sub	x0, x0, #0x8
   2b104:	ldr	x1, [sp, #40]
   2b108:	add	x0, x1, x0
   2b10c:	ldr	x0, [x0]
   2b110:	str	x0, [sp, #72]
   2b114:	ldr	w0, [sp, #28]
   2b118:	cmp	w0, #0x0
   2b11c:	b.eq	2b3ec <PyInit__decimal@@Base+0x13714>  // b.none
   2b120:	ldr	x0, [sp, #72]
   2b124:	str	x0, [sp, #64]
   2b128:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b12c:	add	x0, x0, #0xdb0
   2b130:	ldr	x0, [x0, #72]
   2b134:	ldr	x1, [sp, #64]
   2b138:	cmp	x1, x0
   2b13c:	b.cs	2b248 <PyInit__decimal@@Base+0x13570>  // b.hs, b.nlast
   2b140:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b144:	add	x0, x0, #0xdb0
   2b148:	ldr	x0, [x0, #32]
   2b14c:	ldr	x1, [sp, #64]
   2b150:	cmp	x1, x0
   2b154:	b.cs	2b1c0 <PyInit__decimal@@Base+0x134e8>  // b.hs, b.nlast
   2b158:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b15c:	add	x0, x0, #0xdb0
   2b160:	ldr	x0, [x0, #16]
   2b164:	ldr	x1, [sp, #64]
   2b168:	cmp	x1, x0
   2b16c:	b.cs	2b198 <PyInit__decimal@@Base+0x134c0>  // b.hs, b.nlast
   2b170:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b174:	add	x0, x0, #0xdb0
   2b178:	ldr	x0, [x0, #8]
   2b17c:	ldr	x1, [sp, #64]
   2b180:	cmp	x1, x0
   2b184:	b.cs	2b190 <PyInit__decimal@@Base+0x134b8>  // b.hs, b.nlast
   2b188:	mov	w0, #0x1                   	// #1
   2b18c:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b190:	mov	w0, #0x2                   	// #2
   2b194:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b198:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b19c:	add	x0, x0, #0xdb0
   2b1a0:	ldr	x0, [x0, #24]
   2b1a4:	ldr	x1, [sp, #64]
   2b1a8:	cmp	x1, x0
   2b1ac:	b.cs	2b1b8 <PyInit__decimal@@Base+0x134e0>  // b.hs, b.nlast
   2b1b0:	mov	w0, #0x3                   	// #3
   2b1b4:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b1b8:	mov	w0, #0x4                   	// #4
   2b1bc:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b1c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b1c4:	add	x0, x0, #0xdb0
   2b1c8:	ldr	x0, [x0, #48]
   2b1cc:	ldr	x1, [sp, #64]
   2b1d0:	cmp	x1, x0
   2b1d4:	b.cs	2b200 <PyInit__decimal@@Base+0x13528>  // b.hs, b.nlast
   2b1d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b1dc:	add	x0, x0, #0xdb0
   2b1e0:	ldr	x0, [x0, #40]
   2b1e4:	ldr	x1, [sp, #64]
   2b1e8:	cmp	x1, x0
   2b1ec:	b.cs	2b1f8 <PyInit__decimal@@Base+0x13520>  // b.hs, b.nlast
   2b1f0:	mov	w0, #0x5                   	// #5
   2b1f4:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b1f8:	mov	w0, #0x6                   	// #6
   2b1fc:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b200:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b204:	add	x0, x0, #0xdb0
   2b208:	ldr	x0, [x0, #64]
   2b20c:	ldr	x1, [sp, #64]
   2b210:	cmp	x1, x0
   2b214:	b.cs	2b240 <PyInit__decimal@@Base+0x13568>  // b.hs, b.nlast
   2b218:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b21c:	add	x0, x0, #0xdb0
   2b220:	ldr	x0, [x0, #56]
   2b224:	ldr	x1, [sp, #64]
   2b228:	cmp	x1, x0
   2b22c:	b.cs	2b238 <PyInit__decimal@@Base+0x13560>  // b.hs, b.nlast
   2b230:	mov	w0, #0x7                   	// #7
   2b234:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b238:	mov	w0, #0x8                   	// #8
   2b23c:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b240:	mov	w0, #0x9                   	// #9
   2b244:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b248:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b24c:	add	x0, x0, #0xdb0
   2b250:	ldr	x0, [x0, #112]
   2b254:	ldr	x1, [sp, #64]
   2b258:	cmp	x1, x0
   2b25c:	b.cs	2b2e8 <PyInit__decimal@@Base+0x13610>  // b.hs, b.nlast
   2b260:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b264:	add	x0, x0, #0xdb0
   2b268:	ldr	x0, [x0, #88]
   2b26c:	ldr	x1, [sp, #64]
   2b270:	cmp	x1, x0
   2b274:	b.cs	2b2a0 <PyInit__decimal@@Base+0x135c8>  // b.hs, b.nlast
   2b278:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b27c:	add	x0, x0, #0xdb0
   2b280:	ldr	x0, [x0, #80]
   2b284:	ldr	x1, [sp, #64]
   2b288:	cmp	x1, x0
   2b28c:	b.cs	2b298 <PyInit__decimal@@Base+0x135c0>  // b.hs, b.nlast
   2b290:	mov	w0, #0xa                   	// #10
   2b294:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b298:	mov	w0, #0xb                   	// #11
   2b29c:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b2a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b2a4:	add	x0, x0, #0xdb0
   2b2a8:	ldr	x0, [x0, #104]
   2b2ac:	ldr	x1, [sp, #64]
   2b2b0:	cmp	x1, x0
   2b2b4:	b.cs	2b2e0 <PyInit__decimal@@Base+0x13608>  // b.hs, b.nlast
   2b2b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b2bc:	add	x0, x0, #0xdb0
   2b2c0:	ldr	x0, [x0, #96]
   2b2c4:	ldr	x1, [sp, #64]
   2b2c8:	cmp	x1, x0
   2b2cc:	b.cs	2b2d8 <PyInit__decimal@@Base+0x13600>  // b.hs, b.nlast
   2b2d0:	mov	w0, #0xc                   	// #12
   2b2d4:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b2d8:	mov	w0, #0xd                   	// #13
   2b2dc:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b2e0:	mov	w0, #0xe                   	// #14
   2b2e4:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b2e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b2ec:	add	x0, x0, #0xdb0
   2b2f0:	ldr	x0, [x0, #144]
   2b2f4:	ldr	x1, [sp, #64]
   2b2f8:	cmp	x1, x0
   2b2fc:	b.cs	2b368 <PyInit__decimal@@Base+0x13690>  // b.hs, b.nlast
   2b300:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b304:	add	x0, x0, #0xdb0
   2b308:	ldr	x0, [x0, #128]
   2b30c:	ldr	x1, [sp, #64]
   2b310:	cmp	x1, x0
   2b314:	b.cs	2b340 <PyInit__decimal@@Base+0x13668>  // b.hs, b.nlast
   2b318:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b31c:	add	x0, x0, #0xdb0
   2b320:	ldr	x0, [x0, #120]
   2b324:	ldr	x1, [sp, #64]
   2b328:	cmp	x1, x0
   2b32c:	b.cs	2b338 <PyInit__decimal@@Base+0x13660>  // b.hs, b.nlast
   2b330:	mov	w0, #0xf                   	// #15
   2b334:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b338:	mov	w0, #0x10                  	// #16
   2b33c:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b340:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b344:	add	x0, x0, #0xdb0
   2b348:	ldr	x0, [x0, #136]
   2b34c:	ldr	x1, [sp, #64]
   2b350:	cmp	x1, x0
   2b354:	b.cs	2b360 <PyInit__decimal@@Base+0x13688>  // b.hs, b.nlast
   2b358:	mov	w0, #0x11                  	// #17
   2b35c:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b360:	mov	w0, #0x12                  	// #18
   2b364:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b368:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2b36c:	add	x0, x0, #0xdb0
   2b370:	ldr	x0, [x0, #152]
   2b374:	ldr	x1, [sp, #64]
   2b378:	cmp	x1, x0
   2b37c:	b.cs	2b388 <PyInit__decimal@@Base+0x136b0>  // b.hs, b.nlast
   2b380:	mov	w0, #0x13                  	// #19
   2b384:	b	2b38c <PyInit__decimal@@Base+0x136b4>
   2b388:	mov	w0, #0x14                  	// #20
   2b38c:	sub	w0, w0, #0x1
   2b390:	sxtw	x2, w0
   2b394:	add	x1, sp, #0x30
   2b398:	add	x0, sp, #0x38
   2b39c:	mov	x3, x2
   2b3a0:	ldr	x2, [sp, #72]
   2b3a4:	bl	23a84 <PyInit__decimal@@Base+0xbdac>
   2b3a8:	ldr	x0, [sp, #32]
   2b3ac:	cmp	x0, #0x1
   2b3b0:	b.le	2b40c <PyInit__decimal@@Base+0x13734>
   2b3b4:	ldr	x0, [sp, #48]
   2b3b8:	cmp	x0, #0x0
   2b3bc:	b.ne	2b40c <PyInit__decimal@@Base+0x13734>  // b.any
   2b3c0:	ldr	x0, [sp, #32]
   2b3c4:	sub	x0, x0, #0x1
   2b3c8:	mov	x1, x0
   2b3cc:	ldr	x0, [sp, #40]
   2b3d0:	bl	2486c <PyInit__decimal@@Base+0xcb94>
   2b3d4:	cmp	w0, #0x0
   2b3d8:	cset	w0, eq  // eq = none
   2b3dc:	and	w0, w0, #0xff
   2b3e0:	and	x0, x0, #0xff
   2b3e4:	str	x0, [sp, #48]
   2b3e8:	b	2b40c <PyInit__decimal@@Base+0x13734>
   2b3ec:	ldr	x1, [sp, #32]
   2b3f0:	ldr	x0, [sp, #40]
   2b3f4:	bl	2486c <PyInit__decimal@@Base+0xcb94>
   2b3f8:	cmp	w0, #0x0
   2b3fc:	cset	w0, eq  // eq = none
   2b400:	and	w0, w0, #0xff
   2b404:	and	x0, x0, #0xff
   2b408:	str	x0, [sp, #48]
   2b40c:	ldr	x0, [sp, #56]
   2b410:	cmp	x0, #0x0
   2b414:	b.eq	2b424 <PyInit__decimal@@Base+0x1374c>  // b.none
   2b418:	ldr	x0, [sp, #56]
   2b41c:	cmp	x0, #0x5
   2b420:	b.ne	2b444 <PyInit__decimal@@Base+0x1376c>  // b.any
   2b424:	ldr	x0, [sp, #48]
   2b428:	cmp	x0, #0x0
   2b42c:	cset	w0, ne  // ne = any
   2b430:	and	w0, w0, #0xff
   2b434:	and	x1, x0, #0xff
   2b438:	ldr	x0, [sp, #56]
   2b43c:	add	x0, x1, x0
   2b440:	b	2b448 <PyInit__decimal@@Base+0x13770>
   2b444:	ldr	x0, [sp, #56]
   2b448:	ldp	x29, x30, [sp], #80
   2b44c:	ret
   2b450:	stp	x29, x30, [sp, #-128]!
   2b454:	mov	x29, sp
   2b458:	str	x0, [sp, #40]
   2b45c:	str	x1, [sp, #32]
   2b460:	str	x2, [sp, #24]
   2b464:	ldr	x0, [sp, #32]
   2b468:	str	x0, [sp, #104]
   2b46c:	ldr	x0, [sp, #104]
   2b470:	str	x0, [sp, #96]
   2b474:	ldr	x0, [sp, #96]
   2b478:	ldr	x1, [x0, #40]
   2b47c:	ldr	x0, [sp, #96]
   2b480:	ldr	x0, [x0, #24]
   2b484:	lsl	x0, x0, #3
   2b488:	sub	x0, x0, #0x8
   2b48c:	add	x0, x1, x0
   2b490:	ldr	x0, [x0]
   2b494:	cmp	x0, #0x0
   2b498:	cset	w0, eq  // eq = none
   2b49c:	and	w0, w0, #0xff
   2b4a0:	cmp	w0, #0x0
   2b4a4:	b.ne	2b4b4 <PyInit__decimal@@Base+0x137dc>  // b.any
   2b4a8:	ldr	x0, [sp, #24]
   2b4ac:	cmp	x0, #0x0
   2b4b0:	b.ne	2b4c8 <PyInit__decimal@@Base+0x137f0>  // b.any
   2b4b4:	ldr	x1, [sp, #32]
   2b4b8:	ldr	x0, [sp, #40]
   2b4bc:	bl	299f8 <PyInit__decimal@@Base+0x11d20>
   2b4c0:	mov	x0, #0x0                   	// #0
   2b4c4:	b	2b630 <PyInit__decimal@@Base+0x13958>
   2b4c8:	ldr	x0, [sp, #32]
   2b4cc:	ldr	x0, [x0, #16]
   2b4d0:	ldr	x1, [sp, #24]
   2b4d4:	cmp	x1, x0
   2b4d8:	b.lt	2b524 <PyInit__decimal@@Base+0x1384c>  // b.tstop
   2b4dc:	ldr	x0, [sp, #32]
   2b4e0:	ldr	x3, [x0, #40]
   2b4e4:	ldr	x0, [sp, #32]
   2b4e8:	ldr	x4, [x0, #24]
   2b4ec:	ldr	x0, [sp, #32]
   2b4f0:	ldr	x0, [x0, #16]
   2b4f4:	ldr	x1, [sp, #24]
   2b4f8:	cmp	x1, x0
   2b4fc:	cset	w0, eq  // eq = none
   2b500:	and	w0, w0, #0xff
   2b504:	mov	w2, w0
   2b508:	mov	x1, x4
   2b50c:	mov	x0, x3
   2b510:	bl	2b0dc <PyInit__decimal@@Base+0x13404>
   2b514:	str	x0, [sp, #120]
   2b518:	ldr	x0, [sp, #40]
   2b51c:	bl	264ec <PyInit__decimal@@Base+0xe814>
   2b520:	b	2b5b8 <PyInit__decimal@@Base+0x138e0>
   2b524:	ldr	x0, [sp, #32]
   2b528:	ldr	x1, [x0, #16]
   2b52c:	ldr	x0, [sp, #24]
   2b530:	sub	x1, x1, x0
   2b534:	ldr	x0, [sp, #40]
   2b538:	str	x1, [x0, #16]
   2b53c:	ldr	x0, [sp, #40]
   2b540:	ldr	x0, [x0, #16]
   2b544:	str	x0, [sp, #88]
   2b548:	add	x1, sp, #0x30
   2b54c:	add	x0, sp, #0x38
   2b550:	mov	x3, #0x13                  	// #19
   2b554:	ldr	x2, [sp, #88]
   2b558:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2b55c:	ldr	x0, [sp, #48]
   2b560:	cmp	x0, #0x0
   2b564:	b.eq	2b574 <PyInit__decimal@@Base+0x1389c>  // b.none
   2b568:	ldr	x0, [sp, #56]
   2b56c:	add	x0, x0, #0x1
   2b570:	b	2b578 <PyInit__decimal@@Base+0x138a0>
   2b574:	ldr	x0, [sp, #56]
   2b578:	str	x0, [sp, #112]
   2b57c:	ldr	x0, [sp, #40]
   2b580:	ldr	x4, [x0, #40]
   2b584:	ldr	x0, [sp, #32]
   2b588:	ldr	x1, [x0, #40]
   2b58c:	ldr	x0, [sp, #32]
   2b590:	ldr	x0, [x0, #24]
   2b594:	mov	x2, x0
   2b598:	ldr	x0, [sp, #24]
   2b59c:	mov	x3, x0
   2b5a0:	mov	x0, x4
   2b5a4:	bl	1ae30 <PyInit__decimal@@Base+0x3158>
   2b5a8:	str	x0, [sp, #120]
   2b5ac:	ldr	x0, [sp, #40]
   2b5b0:	ldr	x1, [sp, #112]
   2b5b4:	str	x1, [x0, #24]
   2b5b8:	ldr	x0, [sp, #40]
   2b5bc:	str	x0, [sp, #80]
   2b5c0:	ldr	x0, [sp, #32]
   2b5c4:	str	x0, [sp, #72]
   2b5c8:	ldr	x0, [sp, #72]
   2b5cc:	ldrb	w0, [x0]
   2b5d0:	strb	w0, [sp, #71]
   2b5d4:	ldr	x0, [sp, #80]
   2b5d8:	ldrb	w0, [x0]
   2b5dc:	and	w0, w0, #0xfffffff0
   2b5e0:	and	w1, w0, #0xff
   2b5e4:	ldr	x0, [sp, #80]
   2b5e8:	strb	w1, [x0]
   2b5ec:	ldr	x0, [sp, #80]
   2b5f0:	ldrb	w0, [x0]
   2b5f4:	sxtb	w1, w0
   2b5f8:	ldrsb	w0, [sp, #71]
   2b5fc:	and	w0, w0, #0xf
   2b600:	sxtb	w0, w0
   2b604:	orr	w0, w1, w0
   2b608:	sxtb	w0, w0
   2b60c:	and	w1, w0, #0xff
   2b610:	ldr	x0, [sp, #80]
   2b614:	strb	w1, [x0]
   2b618:	nop
   2b61c:	ldr	x0, [sp, #32]
   2b620:	ldr	x1, [x0, #8]
   2b624:	ldr	x0, [sp, #40]
   2b628:	str	x1, [x0, #8]
   2b62c:	ldr	x0, [sp, #120]
   2b630:	ldp	x29, x30, [sp], #128
   2b634:	ret
   2b638:	stp	x29, x30, [sp, #-128]!
   2b63c:	mov	x29, sp
   2b640:	str	x0, [sp, #24]
   2b644:	str	x1, [sp, #16]
   2b648:	ldr	x0, [sp, #24]
   2b64c:	str	x0, [sp, #104]
   2b650:	ldr	x0, [sp, #104]
   2b654:	str	x0, [sp, #96]
   2b658:	ldr	x0, [sp, #96]
   2b65c:	ldr	x1, [x0, #40]
   2b660:	ldr	x0, [sp, #96]
   2b664:	ldr	x0, [x0, #24]
   2b668:	lsl	x0, x0, #3
   2b66c:	sub	x0, x0, #0x8
   2b670:	add	x0, x1, x0
   2b674:	ldr	x0, [x0]
   2b678:	cmp	x0, #0x0
   2b67c:	cset	w0, eq  // eq = none
   2b680:	and	w0, w0, #0xff
   2b684:	cmp	w0, #0x0
   2b688:	b.ne	2b698 <PyInit__decimal@@Base+0x139c0>  // b.any
   2b68c:	ldr	x0, [sp, #16]
   2b690:	cmp	x0, #0x0
   2b694:	b.ne	2b6a0 <PyInit__decimal@@Base+0x139c8>  // b.any
   2b698:	mov	x0, #0x0                   	// #0
   2b69c:	b	2b844 <PyInit__decimal@@Base+0x13b6c>
   2b6a0:	ldr	x0, [sp, #24]
   2b6a4:	ldr	x0, [x0, #16]
   2b6a8:	ldr	x1, [sp, #16]
   2b6ac:	cmp	x1, x0
   2b6b0:	b.lt	2b6fc <PyInit__decimal@@Base+0x13a24>  // b.tstop
   2b6b4:	ldr	x0, [sp, #24]
   2b6b8:	ldr	x3, [x0, #40]
   2b6bc:	ldr	x0, [sp, #24]
   2b6c0:	ldr	x4, [x0, #24]
   2b6c4:	ldr	x0, [sp, #24]
   2b6c8:	ldr	x0, [x0, #16]
   2b6cc:	ldr	x1, [sp, #16]
   2b6d0:	cmp	x1, x0
   2b6d4:	cset	w0, eq  // eq = none
   2b6d8:	and	w0, w0, #0xff
   2b6dc:	mov	w2, w0
   2b6e0:	mov	x1, x4
   2b6e4:	mov	x0, x3
   2b6e8:	bl	2b0dc <PyInit__decimal@@Base+0x13404>
   2b6ec:	str	x0, [sp, #120]
   2b6f0:	ldr	x0, [sp, #24]
   2b6f4:	bl	264ec <PyInit__decimal@@Base+0xe814>
   2b6f8:	b	2b840 <PyInit__decimal@@Base+0x13b68>
   2b6fc:	ldr	x0, [sp, #24]
   2b700:	ldr	x4, [x0, #40]
   2b704:	ldr	x0, [sp, #24]
   2b708:	ldr	x1, [x0, #40]
   2b70c:	ldr	x0, [sp, #24]
   2b710:	ldr	x0, [x0, #24]
   2b714:	mov	x2, x0
   2b718:	ldr	x0, [sp, #16]
   2b71c:	mov	x3, x0
   2b720:	mov	x0, x4
   2b724:	bl	1ae30 <PyInit__decimal@@Base+0x3158>
   2b728:	str	x0, [sp, #120]
   2b72c:	ldr	x0, [sp, #24]
   2b730:	ldr	x1, [x0, #16]
   2b734:	ldr	x0, [sp, #16]
   2b738:	sub	x1, x1, x0
   2b73c:	ldr	x0, [sp, #24]
   2b740:	str	x1, [x0, #16]
   2b744:	ldr	x0, [sp, #24]
   2b748:	ldr	x0, [x0, #16]
   2b74c:	str	x0, [sp, #56]
   2b750:	add	x1, sp, #0x20
   2b754:	add	x0, sp, #0x28
   2b758:	mov	x3, #0x13                  	// #19
   2b75c:	ldr	x2, [sp, #56]
   2b760:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2b764:	ldr	x0, [sp, #32]
   2b768:	cmp	x0, #0x0
   2b76c:	b.eq	2b77c <PyInit__decimal@@Base+0x13aa4>  // b.none
   2b770:	ldr	x0, [sp, #40]
   2b774:	add	x0, x0, #0x1
   2b778:	b	2b780 <PyInit__decimal@@Base+0x13aa8>
   2b77c:	ldr	x0, [sp, #40]
   2b780:	str	x0, [sp, #112]
   2b784:	ldr	x0, [sp, #24]
   2b788:	str	x0, [sp, #88]
   2b78c:	ldr	x0, [sp, #112]
   2b790:	str	x0, [sp, #80]
   2b794:	add	x0, sp, #0x34
   2b798:	str	x0, [sp, #72]
   2b79c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2b7a0:	add	x0, x0, #0x6d8
   2b7a4:	ldr	x0, [x0]
   2b7a8:	ldr	x2, [sp, #80]
   2b7ac:	ldr	x1, [sp, #80]
   2b7b0:	cmp	x2, x0
   2b7b4:	csel	x0, x1, x0, ge  // ge = tcont
   2b7b8:	str	x0, [sp, #80]
   2b7bc:	ldr	x0, [sp, #88]
   2b7c0:	ldr	x0, [x0, #32]
   2b7c4:	ldr	x1, [sp, #80]
   2b7c8:	cmp	x1, x0
   2b7cc:	b.eq	2b828 <PyInit__decimal@@Base+0x13b50>  // b.none
   2b7d0:	ldr	x0, [sp, #88]
   2b7d4:	str	x0, [sp, #64]
   2b7d8:	ldr	x0, [sp, #64]
   2b7dc:	ldrb	w0, [x0]
   2b7e0:	and	w0, w0, #0x20
   2b7e4:	cmp	w0, #0x0
   2b7e8:	b.eq	2b814 <PyInit__decimal@@Base+0x13b3c>  // b.none
   2b7ec:	ldr	x0, [sp, #88]
   2b7f0:	ldr	x0, [x0, #32]
   2b7f4:	ldr	x1, [sp, #80]
   2b7f8:	cmp	x1, x0
   2b7fc:	b.le	2b830 <PyInit__decimal@@Base+0x13b58>
   2b800:	ldr	x2, [sp, #72]
   2b804:	ldr	x1, [sp, #80]
   2b808:	ldr	x0, [sp, #88]
   2b80c:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2b810:	b	2b834 <PyInit__decimal@@Base+0x13b5c>
   2b814:	ldr	x2, [sp, #72]
   2b818:	ldr	x1, [sp, #80]
   2b81c:	ldr	x0, [sp, #88]
   2b820:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2b824:	b	2b834 <PyInit__decimal@@Base+0x13b5c>
   2b828:	nop
   2b82c:	b	2b834 <PyInit__decimal@@Base+0x13b5c>
   2b830:	nop
   2b834:	ldr	x0, [sp, #24]
   2b838:	ldr	x1, [sp, #112]
   2b83c:	str	x1, [x0, #24]
   2b840:	ldr	x0, [sp, #120]
   2b844:	ldp	x29, x30, [sp], #128
   2b848:	ret
   2b84c:	stp	x29, x30, [sp, #-192]!
   2b850:	mov	x29, sp
   2b854:	str	x0, [sp, #40]
   2b858:	str	x1, [sp, #32]
   2b85c:	str	x2, [sp, #24]
   2b860:	str	x3, [sp, #16]
   2b864:	ldr	x0, [sp, #32]
   2b868:	str	x0, [sp, #168]
   2b86c:	ldr	x0, [sp, #168]
   2b870:	str	x0, [sp, #160]
   2b874:	ldr	x0, [sp, #160]
   2b878:	ldr	x1, [x0, #40]
   2b87c:	ldr	x0, [sp, #160]
   2b880:	ldr	x0, [x0, #24]
   2b884:	lsl	x0, x0, #3
   2b888:	sub	x0, x0, #0x8
   2b88c:	add	x0, x1, x0
   2b890:	ldr	x0, [x0]
   2b894:	cmp	x0, #0x0
   2b898:	cset	w0, eq  // eq = none
   2b89c:	and	w0, w0, #0xff
   2b8a0:	cmp	w0, #0x0
   2b8a4:	b.ne	2b8b4 <PyInit__decimal@@Base+0x13bdc>  // b.any
   2b8a8:	ldr	x0, [sp, #24]
   2b8ac:	cmp	x0, #0x0
   2b8b0:	b.ne	2b8dc <PyInit__decimal@@Base+0x13c04>  // b.any
   2b8b4:	ldr	x2, [sp, #16]
   2b8b8:	ldr	x1, [sp, #32]
   2b8bc:	ldr	x0, [sp, #40]
   2b8c0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2b8c4:	cmp	w0, #0x0
   2b8c8:	b.ne	2b8d4 <PyInit__decimal@@Base+0x13bfc>  // b.any
   2b8cc:	mov	x0, #0xffffffffffffffff    	// #-1
   2b8d0:	b	2bbf8 <PyInit__decimal@@Base+0x13f20>
   2b8d4:	mov	x0, #0x0                   	// #0
   2b8d8:	b	2bbf8 <PyInit__decimal@@Base+0x13f20>
   2b8dc:	ldr	x0, [sp, #32]
   2b8e0:	ldr	x0, [x0, #16]
   2b8e4:	ldr	x1, [sp, #24]
   2b8e8:	cmp	x1, x0
   2b8ec:	b.lt	2b938 <PyInit__decimal@@Base+0x13c60>  // b.tstop
   2b8f0:	ldr	x0, [sp, #32]
   2b8f4:	ldr	x3, [x0, #40]
   2b8f8:	ldr	x0, [sp, #32]
   2b8fc:	ldr	x4, [x0, #24]
   2b900:	ldr	x0, [sp, #32]
   2b904:	ldr	x0, [x0, #16]
   2b908:	ldr	x1, [sp, #24]
   2b90c:	cmp	x1, x0
   2b910:	cset	w0, eq  // eq = none
   2b914:	and	w0, w0, #0xff
   2b918:	mov	w2, w0
   2b91c:	mov	x1, x4
   2b920:	mov	x0, x3
   2b924:	bl	2b0dc <PyInit__decimal@@Base+0x13404>
   2b928:	str	x0, [sp, #184]
   2b92c:	ldr	x0, [sp, #40]
   2b930:	bl	264ec <PyInit__decimal@@Base+0xe814>
   2b934:	b	2bb80 <PyInit__decimal@@Base+0x13ea8>
   2b938:	ldr	x0, [sp, #32]
   2b93c:	ldr	x1, [x0, #16]
   2b940:	ldr	x0, [sp, #24]
   2b944:	sub	x1, x1, x0
   2b948:	ldr	x0, [sp, #40]
   2b94c:	str	x1, [x0, #16]
   2b950:	ldr	x0, [sp, #40]
   2b954:	ldr	x0, [x0, #16]
   2b958:	str	x0, [sp, #152]
   2b95c:	add	x1, sp, #0x30
   2b960:	add	x0, sp, #0x38
   2b964:	mov	x3, #0x13                  	// #19
   2b968:	ldr	x2, [sp, #152]
   2b96c:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2b970:	ldr	x0, [sp, #48]
   2b974:	cmp	x0, #0x0
   2b978:	b.eq	2b988 <PyInit__decimal@@Base+0x13cb0>  // b.none
   2b97c:	ldr	x0, [sp, #56]
   2b980:	add	x0, x0, #0x1
   2b984:	b	2b98c <PyInit__decimal@@Base+0x13cb4>
   2b988:	ldr	x0, [sp, #56]
   2b98c:	str	x0, [sp, #176]
   2b990:	ldr	x1, [sp, #40]
   2b994:	ldr	x0, [sp, #32]
   2b998:	cmp	x1, x0
   2b99c:	b.ne	2ba74 <PyInit__decimal@@Base+0x13d9c>  // b.any
   2b9a0:	ldr	x0, [sp, #40]
   2b9a4:	ldr	x4, [x0, #40]
   2b9a8:	ldr	x0, [sp, #32]
   2b9ac:	ldr	x1, [x0, #40]
   2b9b0:	ldr	x0, [sp, #32]
   2b9b4:	ldr	x0, [x0, #24]
   2b9b8:	mov	x2, x0
   2b9bc:	ldr	x0, [sp, #24]
   2b9c0:	mov	x3, x0
   2b9c4:	mov	x0, x4
   2b9c8:	bl	1ae30 <PyInit__decimal@@Base+0x3158>
   2b9cc:	str	x0, [sp, #184]
   2b9d0:	ldr	x0, [sp, #40]
   2b9d4:	str	x0, [sp, #144]
   2b9d8:	ldr	x0, [sp, #176]
   2b9dc:	str	x0, [sp, #136]
   2b9e0:	ldr	x0, [sp, #16]
   2b9e4:	str	x0, [sp, #128]
   2b9e8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2b9ec:	add	x0, x0, #0x6d8
   2b9f0:	ldr	x0, [x0]
   2b9f4:	ldr	x2, [sp, #136]
   2b9f8:	ldr	x1, [sp, #136]
   2b9fc:	cmp	x2, x0
   2ba00:	csel	x0, x1, x0, ge  // ge = tcont
   2ba04:	str	x0, [sp, #136]
   2ba08:	ldr	x0, [sp, #144]
   2ba0c:	ldr	x0, [x0, #32]
   2ba10:	ldr	x1, [sp, #136]
   2ba14:	cmp	x1, x0
   2ba18:	b.eq	2bb68 <PyInit__decimal@@Base+0x13e90>  // b.none
   2ba1c:	ldr	x0, [sp, #144]
   2ba20:	str	x0, [sp, #120]
   2ba24:	ldr	x0, [sp, #120]
   2ba28:	ldrb	w0, [x0]
   2ba2c:	and	w0, w0, #0x20
   2ba30:	cmp	w0, #0x0
   2ba34:	b.eq	2ba60 <PyInit__decimal@@Base+0x13d88>  // b.none
   2ba38:	ldr	x0, [sp, #144]
   2ba3c:	ldr	x0, [x0, #32]
   2ba40:	ldr	x1, [sp, #136]
   2ba44:	cmp	x1, x0
   2ba48:	b.le	2bb70 <PyInit__decimal@@Base+0x13e98>
   2ba4c:	ldr	x2, [sp, #128]
   2ba50:	ldr	x1, [sp, #136]
   2ba54:	ldr	x0, [sp, #144]
   2ba58:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2ba5c:	b	2bb74 <PyInit__decimal@@Base+0x13e9c>
   2ba60:	ldr	x2, [sp, #128]
   2ba64:	ldr	x1, [sp, #136]
   2ba68:	ldr	x0, [sp, #144]
   2ba6c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2ba70:	b	2bb74 <PyInit__decimal@@Base+0x13e9c>
   2ba74:	ldr	x0, [sp, #40]
   2ba78:	str	x0, [sp, #112]
   2ba7c:	ldr	x0, [sp, #176]
   2ba80:	str	x0, [sp, #104]
   2ba84:	ldr	x0, [sp, #16]
   2ba88:	str	x0, [sp, #96]
   2ba8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2ba90:	add	x0, x0, #0x6d8
   2ba94:	ldr	x0, [x0]
   2ba98:	ldr	x2, [sp, #104]
   2ba9c:	ldr	x1, [sp, #104]
   2baa0:	cmp	x2, x0
   2baa4:	csel	x0, x1, x0, ge  // ge = tcont
   2baa8:	str	x0, [sp, #104]
   2baac:	ldr	x0, [sp, #112]
   2bab0:	ldr	x0, [x0, #32]
   2bab4:	ldr	x1, [sp, #104]
   2bab8:	cmp	x1, x0
   2babc:	b.ne	2bac8 <PyInit__decimal@@Base+0x13df0>  // b.any
   2bac0:	mov	w0, #0x1                   	// #1
   2bac4:	b	2bb24 <PyInit__decimal@@Base+0x13e4c>
   2bac8:	ldr	x0, [sp, #112]
   2bacc:	str	x0, [sp, #88]
   2bad0:	ldr	x0, [sp, #88]
   2bad4:	ldrb	w0, [x0]
   2bad8:	and	w0, w0, #0x20
   2badc:	cmp	w0, #0x0
   2bae0:	b.eq	2bb14 <PyInit__decimal@@Base+0x13e3c>  // b.none
   2bae4:	ldr	x0, [sp, #112]
   2bae8:	ldr	x0, [x0, #32]
   2baec:	ldr	x1, [sp, #104]
   2baf0:	cmp	x1, x0
   2baf4:	b.le	2bb0c <PyInit__decimal@@Base+0x13e34>
   2baf8:	ldr	x2, [sp, #96]
   2bafc:	ldr	x1, [sp, #104]
   2bb00:	ldr	x0, [sp, #112]
   2bb04:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2bb08:	b	2bb24 <PyInit__decimal@@Base+0x13e4c>
   2bb0c:	mov	w0, #0x1                   	// #1
   2bb10:	b	2bb24 <PyInit__decimal@@Base+0x13e4c>
   2bb14:	ldr	x2, [sp, #96]
   2bb18:	ldr	x1, [sp, #104]
   2bb1c:	ldr	x0, [sp, #112]
   2bb20:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2bb24:	cmp	w0, #0x0
   2bb28:	b.ne	2bb34 <PyInit__decimal@@Base+0x13e5c>  // b.any
   2bb2c:	mov	x0, #0xffffffffffffffff    	// #-1
   2bb30:	b	2bbf8 <PyInit__decimal@@Base+0x13f20>
   2bb34:	ldr	x0, [sp, #40]
   2bb38:	ldr	x4, [x0, #40]
   2bb3c:	ldr	x0, [sp, #32]
   2bb40:	ldr	x1, [x0, #40]
   2bb44:	ldr	x0, [sp, #32]
   2bb48:	ldr	x0, [x0, #24]
   2bb4c:	mov	x2, x0
   2bb50:	ldr	x0, [sp, #24]
   2bb54:	mov	x3, x0
   2bb58:	mov	x0, x4
   2bb5c:	bl	1ae30 <PyInit__decimal@@Base+0x3158>
   2bb60:	str	x0, [sp, #184]
   2bb64:	b	2bb74 <PyInit__decimal@@Base+0x13e9c>
   2bb68:	nop
   2bb6c:	b	2bb74 <PyInit__decimal@@Base+0x13e9c>
   2bb70:	nop
   2bb74:	ldr	x0, [sp, #40]
   2bb78:	ldr	x1, [sp, #176]
   2bb7c:	str	x1, [x0, #24]
   2bb80:	ldr	x0, [sp, #40]
   2bb84:	str	x0, [sp, #80]
   2bb88:	ldr	x0, [sp, #32]
   2bb8c:	str	x0, [sp, #72]
   2bb90:	ldr	x0, [sp, #72]
   2bb94:	ldrb	w0, [x0]
   2bb98:	strb	w0, [sp, #71]
   2bb9c:	ldr	x0, [sp, #80]
   2bba0:	ldrb	w0, [x0]
   2bba4:	and	w0, w0, #0xfffffff0
   2bba8:	and	w1, w0, #0xff
   2bbac:	ldr	x0, [sp, #80]
   2bbb0:	strb	w1, [x0]
   2bbb4:	ldr	x0, [sp, #80]
   2bbb8:	ldrb	w0, [x0]
   2bbbc:	sxtb	w1, w0
   2bbc0:	ldrsb	w0, [sp, #71]
   2bbc4:	and	w0, w0, #0xf
   2bbc8:	sxtb	w0, w0
   2bbcc:	orr	w0, w1, w0
   2bbd0:	sxtb	w0, w0
   2bbd4:	and	w1, w0, #0xff
   2bbd8:	ldr	x0, [sp, #80]
   2bbdc:	strb	w1, [x0]
   2bbe0:	nop
   2bbe4:	ldr	x0, [sp, #32]
   2bbe8:	ldr	x1, [x0, #8]
   2bbec:	ldr	x0, [sp, #40]
   2bbf0:	str	x1, [x0, #8]
   2bbf4:	ldr	x0, [sp, #184]
   2bbf8:	ldp	x29, x30, [sp], #192
   2bbfc:	ret
   2bc00:	stp	x29, x30, [sp, #-256]!
   2bc04:	mov	x29, sp
   2bc08:	str	x0, [sp, #56]
   2bc0c:	str	x1, [sp, #48]
   2bc10:	str	x2, [sp, #40]
   2bc14:	str	x3, [sp, #32]
   2bc18:	str	x4, [sp, #24]
   2bc1c:	ldr	x0, [sp, #48]
   2bc20:	str	x0, [sp, #248]
   2bc24:	ldr	x0, [sp, #40]
   2bc28:	str	x0, [sp, #240]
   2bc2c:	ldr	x0, [sp, #48]
   2bc30:	str	x0, [sp, #168]
   2bc34:	ldr	x0, [sp, #168]
   2bc38:	ldrb	w0, [x0]
   2bc3c:	and	w0, w0, #0xe
   2bc40:	cmp	w0, #0x0
   2bc44:	b.ne	2bcbc <PyInit__decimal@@Base+0x13fe4>  // b.any
   2bc48:	ldr	x0, [sp, #40]
   2bc4c:	str	x0, [sp, #160]
   2bc50:	ldr	x0, [sp, #160]
   2bc54:	ldrb	w0, [x0]
   2bc58:	and	w0, w0, #0xe
   2bc5c:	cmp	w0, #0x0
   2bc60:	b.ne	2bcbc <PyInit__decimal@@Base+0x13fe4>  // b.any
   2bc64:	ldr	x0, [sp, #48]
   2bc68:	str	x0, [sp, #152]
   2bc6c:	ldr	x0, [sp, #152]
   2bc70:	ldrb	w0, [x0]
   2bc74:	and	w0, w0, #0x1
   2bc78:	cmp	w0, #0x0
   2bc7c:	b.ne	2bcbc <PyInit__decimal@@Base+0x13fe4>  // b.any
   2bc80:	ldr	x0, [sp, #40]
   2bc84:	str	x0, [sp, #144]
   2bc88:	ldr	x0, [sp, #144]
   2bc8c:	ldrb	w0, [x0]
   2bc90:	and	w0, w0, #0x1
   2bc94:	cmp	w0, #0x0
   2bc98:	b.ne	2bcbc <PyInit__decimal@@Base+0x13fe4>  // b.any
   2bc9c:	ldr	x0, [sp, #48]
   2bca0:	ldr	x0, [x0, #8]
   2bca4:	cmp	x0, #0x0
   2bca8:	b.ne	2bcbc <PyInit__decimal@@Base+0x13fe4>  // b.any
   2bcac:	ldr	x0, [sp, #40]
   2bcb0:	ldr	x0, [x0, #8]
   2bcb4:	cmp	x0, #0x0
   2bcb8:	b.eq	2bcd0 <PyInit__decimal@@Base+0x13ff8>  // b.none
   2bcbc:	ldr	x2, [sp, #24]
   2bcc0:	mov	w1, #0x100                 	// #256
   2bcc4:	ldr	x0, [sp, #56]
   2bcc8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2bccc:	b	2c56c <PyInit__decimal@@Base+0x14894>
   2bcd0:	ldr	x0, [sp, #40]
   2bcd4:	ldr	x1, [x0, #16]
   2bcd8:	ldr	x0, [sp, #48]
   2bcdc:	ldr	x0, [x0, #16]
   2bce0:	cmp	x1, x0
   2bce4:	b.le	2bcf8 <PyInit__decimal@@Base+0x14020>
   2bce8:	ldr	x0, [sp, #40]
   2bcec:	str	x0, [sp, #248]
   2bcf0:	ldr	x0, [sp, #48]
   2bcf4:	str	x0, [sp, #240]
   2bcf8:	ldr	x0, [sp, #248]
   2bcfc:	ldr	x0, [x0, #24]
   2bd00:	ldr	x1, [sp, #56]
   2bd04:	str	x1, [sp, #136]
   2bd08:	str	x0, [sp, #128]
   2bd0c:	ldr	x0, [sp, #24]
   2bd10:	str	x0, [sp, #120]
   2bd14:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2bd18:	add	x0, x0, #0x6d8
   2bd1c:	ldr	x0, [x0]
   2bd20:	ldr	x2, [sp, #128]
   2bd24:	ldr	x1, [sp, #128]
   2bd28:	cmp	x2, x0
   2bd2c:	csel	x0, x1, x0, ge  // ge = tcont
   2bd30:	str	x0, [sp, #128]
   2bd34:	ldr	x0, [sp, #136]
   2bd38:	ldr	x0, [x0, #32]
   2bd3c:	ldr	x1, [sp, #128]
   2bd40:	cmp	x1, x0
   2bd44:	b.ne	2bd50 <PyInit__decimal@@Base+0x14078>  // b.any
   2bd48:	mov	w0, #0x1                   	// #1
   2bd4c:	b	2bdac <PyInit__decimal@@Base+0x140d4>
   2bd50:	ldr	x0, [sp, #136]
   2bd54:	str	x0, [sp, #112]
   2bd58:	ldr	x0, [sp, #112]
   2bd5c:	ldrb	w0, [x0]
   2bd60:	and	w0, w0, #0x20
   2bd64:	cmp	w0, #0x0
   2bd68:	b.eq	2bd9c <PyInit__decimal@@Base+0x140c4>  // b.none
   2bd6c:	ldr	x0, [sp, #136]
   2bd70:	ldr	x0, [x0, #32]
   2bd74:	ldr	x1, [sp, #128]
   2bd78:	cmp	x1, x0
   2bd7c:	b.le	2bd94 <PyInit__decimal@@Base+0x140bc>
   2bd80:	ldr	x2, [sp, #120]
   2bd84:	ldr	x1, [sp, #128]
   2bd88:	ldr	x0, [sp, #136]
   2bd8c:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2bd90:	b	2bdac <PyInit__decimal@@Base+0x140d4>
   2bd94:	mov	w0, #0x1                   	// #1
   2bd98:	b	2bdac <PyInit__decimal@@Base+0x140d4>
   2bd9c:	ldr	x2, [sp, #120]
   2bda0:	ldr	x1, [sp, #128]
   2bda4:	ldr	x0, [sp, #136]
   2bda8:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2bdac:	cmp	w0, #0x0
   2bdb0:	b.eq	2c568 <PyInit__decimal@@Base+0x14890>  // b.none
   2bdb4:	str	xzr, [sp, #200]
   2bdb8:	b	2bf18 <PyInit__decimal@@Base+0x14240>
   2bdbc:	ldr	x0, [sp, #240]
   2bdc0:	ldr	x1, [x0, #40]
   2bdc4:	ldr	x0, [sp, #200]
   2bdc8:	lsl	x0, x0, #3
   2bdcc:	add	x0, x1, x0
   2bdd0:	ldr	x0, [x0]
   2bdd4:	str	x0, [sp, #232]
   2bdd8:	ldr	x0, [sp, #248]
   2bddc:	ldr	x1, [x0, #40]
   2bde0:	ldr	x0, [sp, #200]
   2bde4:	lsl	x0, x0, #3
   2bde8:	add	x0, x1, x0
   2bdec:	ldr	x0, [x0]
   2bdf0:	str	x0, [sp, #224]
   2bdf4:	str	xzr, [sp, #216]
   2bdf8:	str	wzr, [sp, #212]
   2bdfc:	b	2bee4 <PyInit__decimal@@Base+0x1420c>
   2be00:	ldr	x1, [sp, #232]
   2be04:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2be08:	movk	x0, #0xcccd
   2be0c:	umulh	x0, x1, x0
   2be10:	lsr	x2, x0, #3
   2be14:	mov	x0, x2
   2be18:	lsl	x0, x0, #2
   2be1c:	add	x0, x0, x2
   2be20:	lsl	x0, x0, #1
   2be24:	sub	x0, x1, x0
   2be28:	str	x0, [sp, #176]
   2be2c:	ldr	x1, [sp, #232]
   2be30:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2be34:	movk	x0, #0xcccd
   2be38:	umulh	x0, x1, x0
   2be3c:	lsr	x0, x0, #3
   2be40:	str	x0, [sp, #232]
   2be44:	ldr	x1, [sp, #224]
   2be48:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2be4c:	movk	x0, #0xcccd
   2be50:	umulh	x0, x1, x0
   2be54:	lsr	x2, x0, #3
   2be58:	mov	x0, x2
   2be5c:	lsl	x0, x0, #2
   2be60:	add	x0, x0, x2
   2be64:	lsl	x0, x0, #1
   2be68:	sub	x0, x1, x0
   2be6c:	str	x0, [sp, #184]
   2be70:	ldr	x1, [sp, #224]
   2be74:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2be78:	movk	x0, #0xcccd
   2be7c:	umulh	x0, x1, x0
   2be80:	lsr	x0, x0, #3
   2be84:	str	x0, [sp, #224]
   2be88:	ldr	x0, [sp, #176]
   2be8c:	cmp	x0, #0x1
   2be90:	b.hi	2c538 <PyInit__decimal@@Base+0x14860>  // b.pmore
   2be94:	ldr	x0, [sp, #184]
   2be98:	cmp	x0, #0x1
   2be9c:	b.hi	2c538 <PyInit__decimal@@Base+0x14860>  // b.pmore
   2bea0:	ldr	x1, [sp, #176]
   2bea4:	ldr	x0, [sp, #184]
   2bea8:	and	x0, x1, x0
   2beac:	cmp	x0, #0x0
   2beb0:	b.eq	2bec8 <PyInit__decimal@@Base+0x141f0>  // b.none
   2beb4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2beb8:	add	x0, x0, #0xdb0
   2bebc:	ldrsw	x1, [sp, #212]
   2bec0:	ldr	x0, [x0, x1, lsl #3]
   2bec4:	b	2becc <PyInit__decimal@@Base+0x141f4>
   2bec8:	mov	x0, #0x0                   	// #0
   2becc:	ldr	x1, [sp, #216]
   2bed0:	add	x0, x1, x0
   2bed4:	str	x0, [sp, #216]
   2bed8:	ldr	w0, [sp, #212]
   2bedc:	add	w0, w0, #0x1
   2bee0:	str	w0, [sp, #212]
   2bee4:	ldr	w0, [sp, #212]
   2bee8:	cmp	w0, #0x12
   2beec:	b.le	2be00 <PyInit__decimal@@Base+0x14128>
   2bef0:	ldr	x0, [sp, #56]
   2bef4:	ldr	x1, [x0, #40]
   2bef8:	ldr	x0, [sp, #200]
   2befc:	lsl	x0, x0, #3
   2bf00:	add	x0, x1, x0
   2bf04:	ldr	x1, [sp, #216]
   2bf08:	str	x1, [x0]
   2bf0c:	ldr	x0, [sp, #200]
   2bf10:	add	x0, x0, #0x1
   2bf14:	str	x0, [sp, #200]
   2bf18:	ldr	x0, [sp, #240]
   2bf1c:	ldr	x0, [x0, #24]
   2bf20:	sub	x0, x0, #0x1
   2bf24:	ldr	x1, [sp, #200]
   2bf28:	cmp	x1, x0
   2bf2c:	b.lt	2bdbc <PyInit__decimal@@Base+0x140e4>  // b.tstop
   2bf30:	ldr	x0, [sp, #240]
   2bf34:	ldr	x1, [x0, #40]
   2bf38:	ldr	x0, [sp, #200]
   2bf3c:	lsl	x0, x0, #3
   2bf40:	add	x0, x1, x0
   2bf44:	ldr	x0, [x0]
   2bf48:	str	x0, [sp, #232]
   2bf4c:	ldr	x0, [sp, #248]
   2bf50:	ldr	x1, [x0, #40]
   2bf54:	ldr	x0, [sp, #200]
   2bf58:	lsl	x0, x0, #3
   2bf5c:	add	x0, x1, x0
   2bf60:	ldr	x0, [x0]
   2bf64:	str	x0, [sp, #224]
   2bf68:	str	xzr, [sp, #216]
   2bf6c:	ldr	x0, [sp, #232]
   2bf70:	str	x0, [sp, #104]
   2bf74:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2bf78:	add	x0, x0, #0xdb0
   2bf7c:	ldr	x0, [x0, #72]
   2bf80:	ldr	x1, [sp, #104]
   2bf84:	cmp	x1, x0
   2bf88:	b.cs	2c094 <PyInit__decimal@@Base+0x143bc>  // b.hs, b.nlast
   2bf8c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2bf90:	add	x0, x0, #0xdb0
   2bf94:	ldr	x0, [x0, #32]
   2bf98:	ldr	x1, [sp, #104]
   2bf9c:	cmp	x1, x0
   2bfa0:	b.cs	2c00c <PyInit__decimal@@Base+0x14334>  // b.hs, b.nlast
   2bfa4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2bfa8:	add	x0, x0, #0xdb0
   2bfac:	ldr	x0, [x0, #16]
   2bfb0:	ldr	x1, [sp, #104]
   2bfb4:	cmp	x1, x0
   2bfb8:	b.cs	2bfe4 <PyInit__decimal@@Base+0x1430c>  // b.hs, b.nlast
   2bfbc:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2bfc0:	add	x0, x0, #0xdb0
   2bfc4:	ldr	x0, [x0, #8]
   2bfc8:	ldr	x1, [sp, #104]
   2bfcc:	cmp	x1, x0
   2bfd0:	b.cs	2bfdc <PyInit__decimal@@Base+0x14304>  // b.hs, b.nlast
   2bfd4:	mov	w0, #0x1                   	// #1
   2bfd8:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2bfdc:	mov	w0, #0x2                   	// #2
   2bfe0:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2bfe4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2bfe8:	add	x0, x0, #0xdb0
   2bfec:	ldr	x0, [x0, #24]
   2bff0:	ldr	x1, [sp, #104]
   2bff4:	cmp	x1, x0
   2bff8:	b.cs	2c004 <PyInit__decimal@@Base+0x1432c>  // b.hs, b.nlast
   2bffc:	mov	w0, #0x3                   	// #3
   2c000:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c004:	mov	w0, #0x4                   	// #4
   2c008:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c00c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c010:	add	x0, x0, #0xdb0
   2c014:	ldr	x0, [x0, #48]
   2c018:	ldr	x1, [sp, #104]
   2c01c:	cmp	x1, x0
   2c020:	b.cs	2c04c <PyInit__decimal@@Base+0x14374>  // b.hs, b.nlast
   2c024:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c028:	add	x0, x0, #0xdb0
   2c02c:	ldr	x0, [x0, #40]
   2c030:	ldr	x1, [sp, #104]
   2c034:	cmp	x1, x0
   2c038:	b.cs	2c044 <PyInit__decimal@@Base+0x1436c>  // b.hs, b.nlast
   2c03c:	mov	w0, #0x5                   	// #5
   2c040:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c044:	mov	w0, #0x6                   	// #6
   2c048:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c04c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c050:	add	x0, x0, #0xdb0
   2c054:	ldr	x0, [x0, #64]
   2c058:	ldr	x1, [sp, #104]
   2c05c:	cmp	x1, x0
   2c060:	b.cs	2c08c <PyInit__decimal@@Base+0x143b4>  // b.hs, b.nlast
   2c064:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c068:	add	x0, x0, #0xdb0
   2c06c:	ldr	x0, [x0, #56]
   2c070:	ldr	x1, [sp, #104]
   2c074:	cmp	x1, x0
   2c078:	b.cs	2c084 <PyInit__decimal@@Base+0x143ac>  // b.hs, b.nlast
   2c07c:	mov	w0, #0x7                   	// #7
   2c080:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c084:	mov	w0, #0x8                   	// #8
   2c088:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c08c:	mov	w0, #0x9                   	// #9
   2c090:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c094:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c098:	add	x0, x0, #0xdb0
   2c09c:	ldr	x0, [x0, #112]
   2c0a0:	ldr	x1, [sp, #104]
   2c0a4:	cmp	x1, x0
   2c0a8:	b.cs	2c134 <PyInit__decimal@@Base+0x1445c>  // b.hs, b.nlast
   2c0ac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c0b0:	add	x0, x0, #0xdb0
   2c0b4:	ldr	x0, [x0, #88]
   2c0b8:	ldr	x1, [sp, #104]
   2c0bc:	cmp	x1, x0
   2c0c0:	b.cs	2c0ec <PyInit__decimal@@Base+0x14414>  // b.hs, b.nlast
   2c0c4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c0c8:	add	x0, x0, #0xdb0
   2c0cc:	ldr	x0, [x0, #80]
   2c0d0:	ldr	x1, [sp, #104]
   2c0d4:	cmp	x1, x0
   2c0d8:	b.cs	2c0e4 <PyInit__decimal@@Base+0x1440c>  // b.hs, b.nlast
   2c0dc:	mov	w0, #0xa                   	// #10
   2c0e0:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c0e4:	mov	w0, #0xb                   	// #11
   2c0e8:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c0ec:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c0f0:	add	x0, x0, #0xdb0
   2c0f4:	ldr	x0, [x0, #104]
   2c0f8:	ldr	x1, [sp, #104]
   2c0fc:	cmp	x1, x0
   2c100:	b.cs	2c12c <PyInit__decimal@@Base+0x14454>  // b.hs, b.nlast
   2c104:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c108:	add	x0, x0, #0xdb0
   2c10c:	ldr	x0, [x0, #96]
   2c110:	ldr	x1, [sp, #104]
   2c114:	cmp	x1, x0
   2c118:	b.cs	2c124 <PyInit__decimal@@Base+0x1444c>  // b.hs, b.nlast
   2c11c:	mov	w0, #0xc                   	// #12
   2c120:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c124:	mov	w0, #0xd                   	// #13
   2c128:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c12c:	mov	w0, #0xe                   	// #14
   2c130:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c134:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c138:	add	x0, x0, #0xdb0
   2c13c:	ldr	x0, [x0, #144]
   2c140:	ldr	x1, [sp, #104]
   2c144:	cmp	x1, x0
   2c148:	b.cs	2c1b4 <PyInit__decimal@@Base+0x144dc>  // b.hs, b.nlast
   2c14c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c150:	add	x0, x0, #0xdb0
   2c154:	ldr	x0, [x0, #128]
   2c158:	ldr	x1, [sp, #104]
   2c15c:	cmp	x1, x0
   2c160:	b.cs	2c18c <PyInit__decimal@@Base+0x144b4>  // b.hs, b.nlast
   2c164:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c168:	add	x0, x0, #0xdb0
   2c16c:	ldr	x0, [x0, #120]
   2c170:	ldr	x1, [sp, #104]
   2c174:	cmp	x1, x0
   2c178:	b.cs	2c184 <PyInit__decimal@@Base+0x144ac>  // b.hs, b.nlast
   2c17c:	mov	w0, #0xf                   	// #15
   2c180:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c184:	mov	w0, #0x10                  	// #16
   2c188:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c18c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c190:	add	x0, x0, #0xdb0
   2c194:	ldr	x0, [x0, #136]
   2c198:	ldr	x1, [sp, #104]
   2c19c:	cmp	x1, x0
   2c1a0:	b.cs	2c1ac <PyInit__decimal@@Base+0x144d4>  // b.hs, b.nlast
   2c1a4:	mov	w0, #0x11                  	// #17
   2c1a8:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c1ac:	mov	w0, #0x12                  	// #18
   2c1b0:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c1b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c1b8:	add	x0, x0, #0xdb0
   2c1bc:	ldr	x0, [x0, #152]
   2c1c0:	ldr	x1, [sp, #104]
   2c1c4:	cmp	x1, x0
   2c1c8:	b.cs	2c1d4 <PyInit__decimal@@Base+0x144fc>  // b.hs, b.nlast
   2c1cc:	mov	w0, #0x13                  	// #19
   2c1d0:	b	2c1d8 <PyInit__decimal@@Base+0x14500>
   2c1d4:	mov	w0, #0x14                  	// #20
   2c1d8:	str	w0, [sp, #196]
   2c1dc:	str	wzr, [sp, #212]
   2c1e0:	b	2c2c8 <PyInit__decimal@@Base+0x145f0>
   2c1e4:	ldr	x1, [sp, #232]
   2c1e8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c1ec:	movk	x0, #0xcccd
   2c1f0:	umulh	x0, x1, x0
   2c1f4:	lsr	x2, x0, #3
   2c1f8:	mov	x0, x2
   2c1fc:	lsl	x0, x0, #2
   2c200:	add	x0, x0, x2
   2c204:	lsl	x0, x0, #1
   2c208:	sub	x0, x1, x0
   2c20c:	str	x0, [sp, #176]
   2c210:	ldr	x1, [sp, #232]
   2c214:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c218:	movk	x0, #0xcccd
   2c21c:	umulh	x0, x1, x0
   2c220:	lsr	x0, x0, #3
   2c224:	str	x0, [sp, #232]
   2c228:	ldr	x1, [sp, #224]
   2c22c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c230:	movk	x0, #0xcccd
   2c234:	umulh	x0, x1, x0
   2c238:	lsr	x2, x0, #3
   2c23c:	mov	x0, x2
   2c240:	lsl	x0, x0, #2
   2c244:	add	x0, x0, x2
   2c248:	lsl	x0, x0, #1
   2c24c:	sub	x0, x1, x0
   2c250:	str	x0, [sp, #184]
   2c254:	ldr	x1, [sp, #224]
   2c258:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c25c:	movk	x0, #0xcccd
   2c260:	umulh	x0, x1, x0
   2c264:	lsr	x0, x0, #3
   2c268:	str	x0, [sp, #224]
   2c26c:	ldr	x0, [sp, #176]
   2c270:	cmp	x0, #0x1
   2c274:	b.hi	2c540 <PyInit__decimal@@Base+0x14868>  // b.pmore
   2c278:	ldr	x0, [sp, #184]
   2c27c:	cmp	x0, #0x1
   2c280:	b.hi	2c540 <PyInit__decimal@@Base+0x14868>  // b.pmore
   2c284:	ldr	x1, [sp, #176]
   2c288:	ldr	x0, [sp, #184]
   2c28c:	and	x0, x1, x0
   2c290:	cmp	x0, #0x0
   2c294:	b.eq	2c2ac <PyInit__decimal@@Base+0x145d4>  // b.none
   2c298:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c29c:	add	x0, x0, #0xdb0
   2c2a0:	ldrsw	x1, [sp, #212]
   2c2a4:	ldr	x0, [x0, x1, lsl #3]
   2c2a8:	b	2c2b0 <PyInit__decimal@@Base+0x145d8>
   2c2ac:	mov	x0, #0x0                   	// #0
   2c2b0:	ldr	x1, [sp, #216]
   2c2b4:	add	x0, x1, x0
   2c2b8:	str	x0, [sp, #216]
   2c2bc:	ldr	w0, [sp, #212]
   2c2c0:	add	w0, w0, #0x1
   2c2c4:	str	w0, [sp, #212]
   2c2c8:	ldr	w1, [sp, #212]
   2c2cc:	ldr	w0, [sp, #196]
   2c2d0:	cmp	w1, w0
   2c2d4:	b.lt	2c1e4 <PyInit__decimal@@Base+0x1450c>  // b.tstop
   2c2d8:	ldr	x0, [sp, #56]
   2c2dc:	ldr	x1, [x0, #40]
   2c2e0:	ldr	x0, [sp, #200]
   2c2e4:	add	x2, x0, #0x1
   2c2e8:	str	x2, [sp, #200]
   2c2ec:	lsl	x0, x0, #3
   2c2f0:	add	x0, x1, x0
   2c2f4:	ldr	x1, [sp, #216]
   2c2f8:	str	x1, [x0]
   2c2fc:	b	2c35c <PyInit__decimal@@Base+0x14684>
   2c300:	ldr	x1, [sp, #224]
   2c304:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c308:	movk	x0, #0xcccd
   2c30c:	umulh	x0, x1, x0
   2c310:	lsr	x2, x0, #3
   2c314:	mov	x0, x2
   2c318:	lsl	x0, x0, #2
   2c31c:	add	x0, x0, x2
   2c320:	lsl	x0, x0, #1
   2c324:	sub	x0, x1, x0
   2c328:	str	x0, [sp, #184]
   2c32c:	ldr	x1, [sp, #224]
   2c330:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c334:	movk	x0, #0xcccd
   2c338:	umulh	x0, x1, x0
   2c33c:	lsr	x0, x0, #3
   2c340:	str	x0, [sp, #224]
   2c344:	ldr	x0, [sp, #184]
   2c348:	cmp	x0, #0x1
   2c34c:	b.hi	2c548 <PyInit__decimal@@Base+0x14870>  // b.pmore
   2c350:	ldr	w0, [sp, #212]
   2c354:	add	w0, w0, #0x1
   2c358:	str	w0, [sp, #212]
   2c35c:	ldr	w0, [sp, #212]
   2c360:	cmp	w0, #0x12
   2c364:	b.le	2c300 <PyInit__decimal@@Base+0x14628>
   2c368:	b	2c404 <PyInit__decimal@@Base+0x1472c>
   2c36c:	ldr	x0, [sp, #248]
   2c370:	ldr	x1, [x0, #40]
   2c374:	ldr	x0, [sp, #200]
   2c378:	lsl	x0, x0, #3
   2c37c:	add	x0, x1, x0
   2c380:	ldr	x0, [x0]
   2c384:	str	x0, [sp, #224]
   2c388:	str	wzr, [sp, #212]
   2c38c:	b	2c3ec <PyInit__decimal@@Base+0x14714>
   2c390:	ldr	x1, [sp, #224]
   2c394:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c398:	movk	x0, #0xcccd
   2c39c:	umulh	x0, x1, x0
   2c3a0:	lsr	x2, x0, #3
   2c3a4:	mov	x0, x2
   2c3a8:	lsl	x0, x0, #2
   2c3ac:	add	x0, x0, x2
   2c3b0:	lsl	x0, x0, #1
   2c3b4:	sub	x0, x1, x0
   2c3b8:	str	x0, [sp, #184]
   2c3bc:	ldr	x1, [sp, #224]
   2c3c0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c3c4:	movk	x0, #0xcccd
   2c3c8:	umulh	x0, x1, x0
   2c3cc:	lsr	x0, x0, #3
   2c3d0:	str	x0, [sp, #224]
   2c3d4:	ldr	x0, [sp, #184]
   2c3d8:	cmp	x0, #0x1
   2c3dc:	b.hi	2c550 <PyInit__decimal@@Base+0x14878>  // b.pmore
   2c3e0:	ldr	w0, [sp, #212]
   2c3e4:	add	w0, w0, #0x1
   2c3e8:	str	w0, [sp, #212]
   2c3ec:	ldr	w0, [sp, #212]
   2c3f0:	cmp	w0, #0x12
   2c3f4:	b.le	2c390 <PyInit__decimal@@Base+0x146b8>
   2c3f8:	ldr	x0, [sp, #200]
   2c3fc:	add	x0, x0, #0x1
   2c400:	str	x0, [sp, #200]
   2c404:	ldr	x0, [sp, #248]
   2c408:	ldr	x0, [x0, #24]
   2c40c:	ldr	x1, [sp, #200]
   2c410:	cmp	x1, x0
   2c414:	b.lt	2c36c <PyInit__decimal@@Base+0x14694>  // b.tstop
   2c418:	ldr	x0, [sp, #56]
   2c41c:	str	x0, [sp, #64]
   2c420:	ldr	x0, [sp, #64]
   2c424:	ldrb	w0, [x0]
   2c428:	and	w0, w0, #0xfffffff0
   2c42c:	and	w1, w0, #0xff
   2c430:	ldr	x0, [sp, #64]
   2c434:	strb	w1, [x0]
   2c438:	nop
   2c43c:	ldr	x0, [sp, #56]
   2c440:	str	xzr, [x0, #8]
   2c444:	ldr	x0, [sp, #56]
   2c448:	ldr	x2, [x0, #40]
   2c44c:	ldr	x0, [sp, #240]
   2c450:	ldr	x0, [x0, #24]
   2c454:	mov	x1, x0
   2c458:	mov	x0, x2
   2c45c:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   2c460:	mov	x1, x0
   2c464:	ldr	x0, [sp, #56]
   2c468:	str	x1, [x0, #24]
   2c46c:	ldr	x0, [sp, #56]
   2c470:	ldr	x0, [x0, #24]
   2c474:	ldr	x1, [sp, #56]
   2c478:	str	x1, [sp, #96]
   2c47c:	str	x0, [sp, #88]
   2c480:	ldr	x0, [sp, #24]
   2c484:	str	x0, [sp, #80]
   2c488:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2c48c:	add	x0, x0, #0x6d8
   2c490:	ldr	x0, [x0]
   2c494:	ldr	x2, [sp, #88]
   2c498:	ldr	x1, [sp, #88]
   2c49c:	cmp	x2, x0
   2c4a0:	csel	x0, x1, x0, ge  // ge = tcont
   2c4a4:	str	x0, [sp, #88]
   2c4a8:	ldr	x0, [sp, #96]
   2c4ac:	ldr	x0, [x0, #32]
   2c4b0:	ldr	x1, [sp, #88]
   2c4b4:	cmp	x1, x0
   2c4b8:	b.eq	2c514 <PyInit__decimal@@Base+0x1483c>  // b.none
   2c4bc:	ldr	x0, [sp, #96]
   2c4c0:	str	x0, [sp, #72]
   2c4c4:	ldr	x0, [sp, #72]
   2c4c8:	ldrb	w0, [x0]
   2c4cc:	and	w0, w0, #0x20
   2c4d0:	cmp	w0, #0x0
   2c4d4:	b.eq	2c500 <PyInit__decimal@@Base+0x14828>  // b.none
   2c4d8:	ldr	x0, [sp, #96]
   2c4dc:	ldr	x0, [x0, #32]
   2c4e0:	ldr	x1, [sp, #88]
   2c4e4:	cmp	x1, x0
   2c4e8:	b.le	2c51c <PyInit__decimal@@Base+0x14844>
   2c4ec:	ldr	x2, [sp, #80]
   2c4f0:	ldr	x1, [sp, #88]
   2c4f4:	ldr	x0, [sp, #96]
   2c4f8:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2c4fc:	b	2c520 <PyInit__decimal@@Base+0x14848>
   2c500:	ldr	x2, [sp, #80]
   2c504:	ldr	x1, [sp, #88]
   2c508:	ldr	x0, [sp, #96]
   2c50c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2c510:	b	2c520 <PyInit__decimal@@Base+0x14848>
   2c514:	nop
   2c518:	b	2c520 <PyInit__decimal@@Base+0x14848>
   2c51c:	nop
   2c520:	ldr	x0, [sp, #56]
   2c524:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2c528:	ldr	x1, [sp, #32]
   2c52c:	ldr	x0, [sp, #56]
   2c530:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2c534:	b	2c56c <PyInit__decimal@@Base+0x14894>
   2c538:	nop
   2c53c:	b	2c554 <PyInit__decimal@@Base+0x1487c>
   2c540:	nop
   2c544:	b	2c554 <PyInit__decimal@@Base+0x1487c>
   2c548:	nop
   2c54c:	b	2c554 <PyInit__decimal@@Base+0x1487c>
   2c550:	nop
   2c554:	ldr	x2, [sp, #24]
   2c558:	mov	w1, #0x100                 	// #256
   2c55c:	ldr	x0, [sp, #56]
   2c560:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2c564:	b	2c56c <PyInit__decimal@@Base+0x14894>
   2c568:	nop
   2c56c:	ldp	x29, x30, [sp], #256
   2c570:	ret
   2c574:	stp	x29, x30, [sp, #-128]!
   2c578:	mov	x29, sp
   2c57c:	str	x0, [sp, #24]
   2c580:	str	x1, [sp, #16]
   2c584:	ldr	x0, [sp, #24]
   2c588:	str	x0, [sp, #120]
   2c58c:	ldr	x0, [sp, #120]
   2c590:	ldrb	w0, [x0]
   2c594:	and	w0, w0, #0xc
   2c598:	cmp	w0, #0x0
   2c59c:	b.eq	2c5d4 <PyInit__decimal@@Base+0x148fc>  // b.none
   2c5a0:	ldr	x0, [sp, #24]
   2c5a4:	str	x0, [sp, #112]
   2c5a8:	ldr	x0, [sp, #112]
   2c5ac:	ldrb	w0, [x0]
   2c5b0:	and	w0, w0, #0x4
   2c5b4:	cmp	w0, #0x0
   2c5b8:	b.eq	2c5c8 <PyInit__decimal@@Base+0x148f0>  // b.none
   2c5bc:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c5c0:	add	x0, x0, #0x2a8
   2c5c4:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c5c8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c5cc:	add	x0, x0, #0x2b0
   2c5d0:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c5d4:	ldr	x0, [sp, #24]
   2c5d8:	str	x0, [sp, #104]
   2c5dc:	ldr	x0, [sp, #104]
   2c5e0:	ldrb	w0, [x0]
   2c5e4:	and	w0, w0, #0x1
   2c5e8:	cmp	w0, #0x0
   2c5ec:	cset	w0, eq  // eq = none
   2c5f0:	and	w0, w0, #0xff
   2c5f4:	cmp	w0, #0x0
   2c5f8:	b.eq	2c6c4 <PyInit__decimal@@Base+0x149ec>  // b.none
   2c5fc:	ldr	x0, [sp, #24]
   2c600:	str	x0, [sp, #96]
   2c604:	ldr	x0, [sp, #96]
   2c608:	ldrb	w0, [x0]
   2c60c:	and	w0, w0, #0x2
   2c610:	cmp	w0, #0x0
   2c614:	b.eq	2c624 <PyInit__decimal@@Base+0x1494c>  // b.none
   2c618:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c61c:	add	x0, x0, #0x2b8
   2c620:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c624:	ldr	x0, [sp, #24]
   2c628:	str	x0, [sp, #88]
   2c62c:	ldr	x0, [sp, #88]
   2c630:	str	x0, [sp, #80]
   2c634:	ldr	x0, [sp, #80]
   2c638:	ldrb	w0, [x0]
   2c63c:	and	w0, w0, #0xe
   2c640:	cmp	w0, #0x0
   2c644:	b.ne	2c680 <PyInit__decimal@@Base+0x149a8>  // b.any
   2c648:	ldr	x0, [sp, #88]
   2c64c:	str	x0, [sp, #72]
   2c650:	ldr	x0, [sp, #72]
   2c654:	ldr	x1, [x0, #40]
   2c658:	ldr	x0, [sp, #72]
   2c65c:	ldr	x0, [x0, #24]
   2c660:	lsl	x0, x0, #3
   2c664:	sub	x0, x0, #0x8
   2c668:	add	x0, x1, x0
   2c66c:	ldr	x0, [x0]
   2c670:	cmp	x0, #0x0
   2c674:	b.ne	2c680 <PyInit__decimal@@Base+0x149a8>  // b.any
   2c678:	mov	w0, #0x1                   	// #1
   2c67c:	b	2c684 <PyInit__decimal@@Base+0x149ac>
   2c680:	mov	w0, #0x0                   	// #0
   2c684:	cmp	w0, #0x0
   2c688:	b.eq	2c698 <PyInit__decimal@@Base+0x149c0>  // b.none
   2c68c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c690:	add	x0, x0, #0x2c8
   2c694:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c698:	ldr	x1, [sp, #16]
   2c69c:	ldr	x0, [sp, #24]
   2c6a0:	bl	25500 <PyInit__decimal@@Base+0xd828>
   2c6a4:	cmp	w0, #0x0
   2c6a8:	b.eq	2c6b8 <PyInit__decimal@@Base+0x149e0>  // b.none
   2c6ac:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c6b0:	add	x0, x0, #0x2d0
   2c6b4:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c6b8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c6bc:	add	x0, x0, #0x2d8
   2c6c0:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c6c4:	ldr	x0, [sp, #24]
   2c6c8:	str	x0, [sp, #64]
   2c6cc:	ldr	x0, [sp, #64]
   2c6d0:	ldrb	w0, [x0]
   2c6d4:	and	w0, w0, #0x2
   2c6d8:	cmp	w0, #0x0
   2c6dc:	b.eq	2c6ec <PyInit__decimal@@Base+0x14a14>  // b.none
   2c6e0:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c6e4:	add	x0, x0, #0x2e8
   2c6e8:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c6ec:	ldr	x0, [sp, #24]
   2c6f0:	str	x0, [sp, #56]
   2c6f4:	ldr	x0, [sp, #56]
   2c6f8:	str	x0, [sp, #48]
   2c6fc:	ldr	x0, [sp, #48]
   2c700:	ldrb	w0, [x0]
   2c704:	and	w0, w0, #0xe
   2c708:	cmp	w0, #0x0
   2c70c:	b.ne	2c748 <PyInit__decimal@@Base+0x14a70>  // b.any
   2c710:	ldr	x0, [sp, #56]
   2c714:	str	x0, [sp, #40]
   2c718:	ldr	x0, [sp, #40]
   2c71c:	ldr	x1, [x0, #40]
   2c720:	ldr	x0, [sp, #40]
   2c724:	ldr	x0, [x0, #24]
   2c728:	lsl	x0, x0, #3
   2c72c:	sub	x0, x0, #0x8
   2c730:	add	x0, x1, x0
   2c734:	ldr	x0, [x0]
   2c738:	cmp	x0, #0x0
   2c73c:	b.ne	2c748 <PyInit__decimal@@Base+0x14a70>  // b.any
   2c740:	mov	w0, #0x1                   	// #1
   2c744:	b	2c74c <PyInit__decimal@@Base+0x14a74>
   2c748:	mov	w0, #0x0                   	// #0
   2c74c:	cmp	w0, #0x0
   2c750:	b.eq	2c760 <PyInit__decimal@@Base+0x14a88>  // b.none
   2c754:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c758:	add	x0, x0, #0x2f8
   2c75c:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c760:	ldr	x1, [sp, #16]
   2c764:	ldr	x0, [sp, #24]
   2c768:	bl	25500 <PyInit__decimal@@Base+0xd828>
   2c76c:	cmp	w0, #0x0
   2c770:	b.eq	2c780 <PyInit__decimal@@Base+0x14aa8>  // b.none
   2c774:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c778:	add	x0, x0, #0x300
   2c77c:	b	2c788 <PyInit__decimal@@Base+0x14ab0>
   2c780:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   2c784:	add	x0, x0, #0x308
   2c788:	ldp	x29, x30, [sp], #128
   2c78c:	ret
   2c790:	stp	x29, x30, [sp, #-208]!
   2c794:	mov	x29, sp
   2c798:	str	x0, [sp, #40]
   2c79c:	str	x1, [sp, #32]
   2c7a0:	str	x2, [sp, #24]
   2c7a4:	str	x3, [sp, #16]
   2c7a8:	ldr	x0, [sp, #32]
   2c7ac:	str	x0, [sp, #144]
   2c7b0:	ldr	x0, [sp, #144]
   2c7b4:	ldrb	w0, [x0]
   2c7b8:	and	w0, w0, #0xe
   2c7bc:	cmp	w0, #0x0
   2c7c0:	b.ne	2c7f0 <PyInit__decimal@@Base+0x14b18>  // b.any
   2c7c4:	ldr	x0, [sp, #32]
   2c7c8:	str	x0, [sp, #136]
   2c7cc:	ldr	x0, [sp, #136]
   2c7d0:	ldrb	w0, [x0]
   2c7d4:	and	w0, w0, #0x1
   2c7d8:	cmp	w0, #0x0
   2c7dc:	b.ne	2c7f0 <PyInit__decimal@@Base+0x14b18>  // b.any
   2c7e0:	ldr	x0, [sp, #32]
   2c7e4:	ldr	x0, [x0, #8]
   2c7e8:	cmp	x0, #0x0
   2c7ec:	b.eq	2c804 <PyInit__decimal@@Base+0x14b2c>  // b.none
   2c7f0:	ldr	x2, [sp, #16]
   2c7f4:	mov	w1, #0x100                 	// #256
   2c7f8:	ldr	x0, [sp, #40]
   2c7fc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2c800:	b	2cb58 <PyInit__decimal@@Base+0x14e80>
   2c804:	ldr	x0, [sp, #32]
   2c808:	ldr	x1, [x0, #16]
   2c80c:	ldr	x0, [sp, #24]
   2c810:	ldr	x0, [x0]
   2c814:	cmp	x1, x0
   2c818:	csel	x0, x1, x0, ge  // ge = tcont
   2c81c:	str	x0, [sp, #168]
   2c820:	add	x1, sp, #0x30
   2c824:	add	x0, sp, #0x38
   2c828:	mov	x3, #0x13                  	// #19
   2c82c:	ldr	x2, [sp, #168]
   2c830:	bl	242c4 <PyInit__decimal@@Base+0xc5ec>
   2c834:	ldr	x0, [sp, #48]
   2c838:	cmp	x0, #0x0
   2c83c:	b.eq	2c84c <PyInit__decimal@@Base+0x14b74>  // b.none
   2c840:	ldr	x0, [sp, #56]
   2c844:	add	x0, x0, #0x1
   2c848:	b	2c850 <PyInit__decimal@@Base+0x14b78>
   2c84c:	ldr	x0, [sp, #56]
   2c850:	str	x0, [sp, #160]
   2c854:	ldr	x0, [sp, #40]
   2c858:	str	x0, [sp, #128]
   2c85c:	ldr	x0, [sp, #160]
   2c860:	str	x0, [sp, #120]
   2c864:	ldr	x0, [sp, #16]
   2c868:	str	x0, [sp, #112]
   2c86c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2c870:	add	x0, x0, #0x6d8
   2c874:	ldr	x0, [x0]
   2c878:	ldr	x2, [sp, #120]
   2c87c:	ldr	x1, [sp, #120]
   2c880:	cmp	x2, x0
   2c884:	csel	x0, x1, x0, ge  // ge = tcont
   2c888:	str	x0, [sp, #120]
   2c88c:	ldr	x0, [sp, #128]
   2c890:	ldr	x0, [x0, #32]
   2c894:	ldr	x1, [sp, #120]
   2c898:	cmp	x1, x0
   2c89c:	b.ne	2c8a8 <PyInit__decimal@@Base+0x14bd0>  // b.any
   2c8a0:	mov	w0, #0x1                   	// #1
   2c8a4:	b	2c904 <PyInit__decimal@@Base+0x14c2c>
   2c8a8:	ldr	x0, [sp, #128]
   2c8ac:	str	x0, [sp, #104]
   2c8b0:	ldr	x0, [sp, #104]
   2c8b4:	ldrb	w0, [x0]
   2c8b8:	and	w0, w0, #0x20
   2c8bc:	cmp	w0, #0x0
   2c8c0:	b.eq	2c8f4 <PyInit__decimal@@Base+0x14c1c>  // b.none
   2c8c4:	ldr	x0, [sp, #128]
   2c8c8:	ldr	x0, [x0, #32]
   2c8cc:	ldr	x1, [sp, #120]
   2c8d0:	cmp	x1, x0
   2c8d4:	b.le	2c8ec <PyInit__decimal@@Base+0x14c14>
   2c8d8:	ldr	x2, [sp, #112]
   2c8dc:	ldr	x1, [sp, #120]
   2c8e0:	ldr	x0, [sp, #128]
   2c8e4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2c8e8:	b	2c904 <PyInit__decimal@@Base+0x14c2c>
   2c8ec:	mov	w0, #0x1                   	// #1
   2c8f0:	b	2c904 <PyInit__decimal@@Base+0x14c2c>
   2c8f4:	ldr	x2, [sp, #112]
   2c8f8:	ldr	x1, [sp, #120]
   2c8fc:	ldr	x0, [sp, #128]
   2c900:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2c904:	cmp	w0, #0x0
   2c908:	b.eq	2cb54 <PyInit__decimal@@Base+0x14e7c>  // b.none
   2c90c:	str	xzr, [sp, #184]
   2c910:	b	2ca18 <PyInit__decimal@@Base+0x14d40>
   2c914:	ldr	x0, [sp, #32]
   2c918:	ldr	x0, [x0, #24]
   2c91c:	ldr	x1, [sp, #184]
   2c920:	cmp	x1, x0
   2c924:	b.ge	2c944 <PyInit__decimal@@Base+0x14c6c>  // b.tcont
   2c928:	ldr	x0, [sp, #32]
   2c92c:	ldr	x1, [x0, #40]
   2c930:	ldr	x0, [sp, #184]
   2c934:	lsl	x0, x0, #3
   2c938:	add	x0, x1, x0
   2c93c:	ldr	x0, [x0]
   2c940:	b	2c948 <PyInit__decimal@@Base+0x14c70>
   2c944:	mov	x0, #0x0                   	// #0
   2c948:	str	x0, [sp, #200]
   2c94c:	str	xzr, [sp, #192]
   2c950:	str	wzr, [sp, #180]
   2c954:	b	2c9e4 <PyInit__decimal@@Base+0x14d0c>
   2c958:	ldr	x1, [sp, #200]
   2c95c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c960:	movk	x0, #0xcccd
   2c964:	umulh	x0, x1, x0
   2c968:	lsr	x2, x0, #3
   2c96c:	mov	x0, x2
   2c970:	lsl	x0, x0, #2
   2c974:	add	x0, x0, x2
   2c978:	lsl	x0, x0, #1
   2c97c:	sub	x0, x1, x0
   2c980:	str	x0, [sp, #152]
   2c984:	ldr	x1, [sp, #200]
   2c988:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c98c:	movk	x0, #0xcccd
   2c990:	umulh	x0, x1, x0
   2c994:	lsr	x0, x0, #3
   2c998:	str	x0, [sp, #200]
   2c99c:	ldr	x0, [sp, #152]
   2c9a0:	cmp	x0, #0x1
   2c9a4:	b.hi	2cb3c <PyInit__decimal@@Base+0x14e64>  // b.pmore
   2c9a8:	ldr	x0, [sp, #152]
   2c9ac:	cmp	x0, #0x0
   2c9b0:	b.ne	2c9c8 <PyInit__decimal@@Base+0x14cf0>  // b.any
   2c9b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2c9b8:	add	x0, x0, #0xdb0
   2c9bc:	ldrsw	x1, [sp, #180]
   2c9c0:	ldr	x0, [x0, x1, lsl #3]
   2c9c4:	b	2c9cc <PyInit__decimal@@Base+0x14cf4>
   2c9c8:	mov	x0, #0x0                   	// #0
   2c9cc:	ldr	x1, [sp, #192]
   2c9d0:	add	x0, x1, x0
   2c9d4:	str	x0, [sp, #192]
   2c9d8:	ldr	w0, [sp, #180]
   2c9dc:	add	w0, w0, #0x1
   2c9e0:	str	w0, [sp, #180]
   2c9e4:	ldr	w0, [sp, #180]
   2c9e8:	cmp	w0, #0x12
   2c9ec:	b.le	2c958 <PyInit__decimal@@Base+0x14c80>
   2c9f0:	ldr	x0, [sp, #40]
   2c9f4:	ldr	x1, [x0, #40]
   2c9f8:	ldr	x0, [sp, #184]
   2c9fc:	lsl	x0, x0, #3
   2ca00:	add	x0, x1, x0
   2ca04:	ldr	x1, [sp, #192]
   2ca08:	str	x1, [x0]
   2ca0c:	ldr	x0, [sp, #184]
   2ca10:	add	x0, x0, #0x1
   2ca14:	str	x0, [sp, #184]
   2ca18:	ldr	x1, [sp, #184]
   2ca1c:	ldr	x0, [sp, #160]
   2ca20:	cmp	x1, x0
   2ca24:	b.lt	2c914 <PyInit__decimal@@Base+0x14c3c>  // b.tstop
   2ca28:	ldr	x0, [sp, #40]
   2ca2c:	str	x0, [sp, #64]
   2ca30:	ldr	x0, [sp, #64]
   2ca34:	ldrb	w0, [x0]
   2ca38:	and	w0, w0, #0xfffffff0
   2ca3c:	and	w1, w0, #0xff
   2ca40:	ldr	x0, [sp, #64]
   2ca44:	strb	w1, [x0]
   2ca48:	nop
   2ca4c:	ldr	x0, [sp, #40]
   2ca50:	str	xzr, [x0, #8]
   2ca54:	ldr	x0, [sp, #40]
   2ca58:	ldr	x0, [x0, #40]
   2ca5c:	ldr	x1, [sp, #160]
   2ca60:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   2ca64:	mov	x1, x0
   2ca68:	ldr	x0, [sp, #40]
   2ca6c:	str	x1, [x0, #24]
   2ca70:	ldr	x0, [sp, #40]
   2ca74:	ldr	x0, [x0, #24]
   2ca78:	ldr	x1, [sp, #40]
   2ca7c:	str	x1, [sp, #96]
   2ca80:	str	x0, [sp, #88]
   2ca84:	ldr	x0, [sp, #16]
   2ca88:	str	x0, [sp, #80]
   2ca8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2ca90:	add	x0, x0, #0x6d8
   2ca94:	ldr	x0, [x0]
   2ca98:	ldr	x2, [sp, #88]
   2ca9c:	ldr	x1, [sp, #88]
   2caa0:	cmp	x2, x0
   2caa4:	csel	x0, x1, x0, ge  // ge = tcont
   2caa8:	str	x0, [sp, #88]
   2caac:	ldr	x0, [sp, #96]
   2cab0:	ldr	x0, [x0, #32]
   2cab4:	ldr	x1, [sp, #88]
   2cab8:	cmp	x1, x0
   2cabc:	b.eq	2cb18 <PyInit__decimal@@Base+0x14e40>  // b.none
   2cac0:	ldr	x0, [sp, #96]
   2cac4:	str	x0, [sp, #72]
   2cac8:	ldr	x0, [sp, #72]
   2cacc:	ldrb	w0, [x0]
   2cad0:	and	w0, w0, #0x20
   2cad4:	cmp	w0, #0x0
   2cad8:	b.eq	2cb04 <PyInit__decimal@@Base+0x14e2c>  // b.none
   2cadc:	ldr	x0, [sp, #96]
   2cae0:	ldr	x0, [x0, #32]
   2cae4:	ldr	x1, [sp, #88]
   2cae8:	cmp	x1, x0
   2caec:	b.le	2cb20 <PyInit__decimal@@Base+0x14e48>
   2caf0:	ldr	x2, [sp, #80]
   2caf4:	ldr	x1, [sp, #88]
   2caf8:	ldr	x0, [sp, #96]
   2cafc:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2cb00:	b	2cb24 <PyInit__decimal@@Base+0x14e4c>
   2cb04:	ldr	x2, [sp, #80]
   2cb08:	ldr	x1, [sp, #88]
   2cb0c:	ldr	x0, [sp, #96]
   2cb10:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2cb14:	b	2cb24 <PyInit__decimal@@Base+0x14e4c>
   2cb18:	nop
   2cb1c:	b	2cb24 <PyInit__decimal@@Base+0x14e4c>
   2cb20:	nop
   2cb24:	ldr	x0, [sp, #40]
   2cb28:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2cb2c:	ldr	x1, [sp, #24]
   2cb30:	ldr	x0, [sp, #40]
   2cb34:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2cb38:	b	2cb58 <PyInit__decimal@@Base+0x14e80>
   2cb3c:	nop
   2cb40:	ldr	x2, [sp, #16]
   2cb44:	mov	w1, #0x100                 	// #256
   2cb48:	ldr	x0, [sp, #40]
   2cb4c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2cb50:	b	2cb58 <PyInit__decimal@@Base+0x14e80>
   2cb54:	nop
   2cb58:	ldp	x29, x30, [sp], #208
   2cb5c:	ret
   2cb60:	stp	x29, x30, [sp, #-80]!
   2cb64:	mov	x29, sp
   2cb68:	str	x0, [sp, #40]
   2cb6c:	str	x1, [sp, #32]
   2cb70:	str	x2, [sp, #24]
   2cb74:	str	x3, [sp, #16]
   2cb78:	ldr	x0, [sp, #32]
   2cb7c:	str	x0, [sp, #72]
   2cb80:	ldr	x0, [sp, #72]
   2cb84:	ldrb	w0, [x0]
   2cb88:	and	w0, w0, #0xe
   2cb8c:	cmp	w0, #0x0
   2cb90:	b.eq	2cbc4 <PyInit__decimal@@Base+0x14eec>  // b.none
   2cb94:	ldr	x3, [sp, #16]
   2cb98:	ldr	x2, [sp, #24]
   2cb9c:	ldr	x1, [sp, #32]
   2cba0:	ldr	x0, [sp, #40]
   2cba4:	bl	28540 <PyInit__decimal@@Base+0x10868>
   2cba8:	cmp	w0, #0x0
   2cbac:	b.ne	2cc68 <PyInit__decimal@@Base+0x14f90>  // b.any
   2cbb0:	mov	w2, #0x2                   	// #2
   2cbb4:	mov	w1, #0x0                   	// #0
   2cbb8:	ldr	x0, [sp, #40]
   2cbbc:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   2cbc0:	b	2cc6c <PyInit__decimal@@Base+0x14f94>
   2cbc4:	ldr	x0, [sp, #32]
   2cbc8:	str	x0, [sp, #64]
   2cbcc:	ldr	x0, [sp, #64]
   2cbd0:	str	x0, [sp, #56]
   2cbd4:	ldr	x0, [sp, #56]
   2cbd8:	ldr	x1, [x0, #40]
   2cbdc:	ldr	x0, [sp, #56]
   2cbe0:	ldr	x0, [x0, #24]
   2cbe4:	lsl	x0, x0, #3
   2cbe8:	sub	x0, x0, #0x8
   2cbec:	add	x0, x1, x0
   2cbf0:	ldr	x0, [x0]
   2cbf4:	cmp	x0, #0x0
   2cbf8:	cset	w0, eq  // eq = none
   2cbfc:	and	w0, w0, #0xff
   2cc00:	cmp	w0, #0x0
   2cc04:	b.eq	2cc30 <PyInit__decimal@@Base+0x14f58>  // b.none
   2cc08:	mov	w2, #0x2                   	// #2
   2cc0c:	mov	w1, #0x1                   	// #1
   2cc10:	ldr	x0, [sp, #40]
   2cc14:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   2cc18:	ldr	x0, [sp, #16]
   2cc1c:	ldr	w0, [x0]
   2cc20:	orr	w1, w0, #0x4
   2cc24:	ldr	x0, [sp, #16]
   2cc28:	str	w1, [x0]
   2cc2c:	b	2cc6c <PyInit__decimal@@Base+0x14f94>
   2cc30:	ldr	x0, [sp, #32]
   2cc34:	str	x0, [sp, #48]
   2cc38:	ldr	x0, [sp, #48]
   2cc3c:	ldr	x1, [x0, #8]
   2cc40:	ldr	x0, [sp, #48]
   2cc44:	ldr	x0, [x0, #16]
   2cc48:	add	x0, x1, x0
   2cc4c:	sub	x0, x0, #0x1
   2cc50:	ldr	x3, [sp, #16]
   2cc54:	ldr	x2, [sp, #24]
   2cc58:	mov	x1, x0
   2cc5c:	ldr	x0, [sp, #40]
   2cc60:	bl	27e8c <PyInit__decimal@@Base+0x101b4>
   2cc64:	b	2cc6c <PyInit__decimal@@Base+0x14f94>
   2cc68:	nop
   2cc6c:	ldp	x29, x30, [sp], #80
   2cc70:	ret
   2cc74:	stp	x29, x30, [sp, #-256]!
   2cc78:	mov	x29, sp
   2cc7c:	str	x0, [sp, #56]
   2cc80:	str	x1, [sp, #48]
   2cc84:	str	x2, [sp, #40]
   2cc88:	str	x3, [sp, #32]
   2cc8c:	str	x4, [sp, #24]
   2cc90:	ldr	x0, [sp, #48]
   2cc94:	str	x0, [sp, #248]
   2cc98:	ldr	x0, [sp, #40]
   2cc9c:	str	x0, [sp, #240]
   2cca0:	ldr	x0, [sp, #48]
   2cca4:	str	x0, [sp, #168]
   2cca8:	ldr	x0, [sp, #168]
   2ccac:	ldrb	w0, [x0]
   2ccb0:	and	w0, w0, #0xe
   2ccb4:	cmp	w0, #0x0
   2ccb8:	b.ne	2cd30 <PyInit__decimal@@Base+0x15058>  // b.any
   2ccbc:	ldr	x0, [sp, #40]
   2ccc0:	str	x0, [sp, #160]
   2ccc4:	ldr	x0, [sp, #160]
   2ccc8:	ldrb	w0, [x0]
   2cccc:	and	w0, w0, #0xe
   2ccd0:	cmp	w0, #0x0
   2ccd4:	b.ne	2cd30 <PyInit__decimal@@Base+0x15058>  // b.any
   2ccd8:	ldr	x0, [sp, #48]
   2ccdc:	str	x0, [sp, #152]
   2cce0:	ldr	x0, [sp, #152]
   2cce4:	ldrb	w0, [x0]
   2cce8:	and	w0, w0, #0x1
   2ccec:	cmp	w0, #0x0
   2ccf0:	b.ne	2cd30 <PyInit__decimal@@Base+0x15058>  // b.any
   2ccf4:	ldr	x0, [sp, #40]
   2ccf8:	str	x0, [sp, #144]
   2ccfc:	ldr	x0, [sp, #144]
   2cd00:	ldrb	w0, [x0]
   2cd04:	and	w0, w0, #0x1
   2cd08:	cmp	w0, #0x0
   2cd0c:	b.ne	2cd30 <PyInit__decimal@@Base+0x15058>  // b.any
   2cd10:	ldr	x0, [sp, #48]
   2cd14:	ldr	x0, [x0, #8]
   2cd18:	cmp	x0, #0x0
   2cd1c:	b.ne	2cd30 <PyInit__decimal@@Base+0x15058>  // b.any
   2cd20:	ldr	x0, [sp, #40]
   2cd24:	ldr	x0, [x0, #8]
   2cd28:	cmp	x0, #0x0
   2cd2c:	b.eq	2cd44 <PyInit__decimal@@Base+0x1506c>  // b.none
   2cd30:	ldr	x2, [sp, #24]
   2cd34:	mov	w1, #0x100                 	// #256
   2cd38:	ldr	x0, [sp, #56]
   2cd3c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2cd40:	b	2d634 <PyInit__decimal@@Base+0x1595c>
   2cd44:	ldr	x0, [sp, #40]
   2cd48:	ldr	x1, [x0, #16]
   2cd4c:	ldr	x0, [sp, #48]
   2cd50:	ldr	x0, [x0, #16]
   2cd54:	cmp	x1, x0
   2cd58:	b.le	2cd6c <PyInit__decimal@@Base+0x15094>
   2cd5c:	ldr	x0, [sp, #40]
   2cd60:	str	x0, [sp, #248]
   2cd64:	ldr	x0, [sp, #48]
   2cd68:	str	x0, [sp, #240]
   2cd6c:	ldr	x0, [sp, #248]
   2cd70:	ldr	x0, [x0, #24]
   2cd74:	ldr	x1, [sp, #56]
   2cd78:	str	x1, [sp, #136]
   2cd7c:	str	x0, [sp, #128]
   2cd80:	ldr	x0, [sp, #24]
   2cd84:	str	x0, [sp, #120]
   2cd88:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2cd8c:	add	x0, x0, #0x6d8
   2cd90:	ldr	x0, [x0]
   2cd94:	ldr	x2, [sp, #128]
   2cd98:	ldr	x1, [sp, #128]
   2cd9c:	cmp	x2, x0
   2cda0:	csel	x0, x1, x0, ge  // ge = tcont
   2cda4:	str	x0, [sp, #128]
   2cda8:	ldr	x0, [sp, #136]
   2cdac:	ldr	x0, [x0, #32]
   2cdb0:	ldr	x1, [sp, #128]
   2cdb4:	cmp	x1, x0
   2cdb8:	b.ne	2cdc4 <PyInit__decimal@@Base+0x150ec>  // b.any
   2cdbc:	mov	w0, #0x1                   	// #1
   2cdc0:	b	2ce20 <PyInit__decimal@@Base+0x15148>
   2cdc4:	ldr	x0, [sp, #136]
   2cdc8:	str	x0, [sp, #112]
   2cdcc:	ldr	x0, [sp, #112]
   2cdd0:	ldrb	w0, [x0]
   2cdd4:	and	w0, w0, #0x20
   2cdd8:	cmp	w0, #0x0
   2cddc:	b.eq	2ce10 <PyInit__decimal@@Base+0x15138>  // b.none
   2cde0:	ldr	x0, [sp, #136]
   2cde4:	ldr	x0, [x0, #32]
   2cde8:	ldr	x1, [sp, #128]
   2cdec:	cmp	x1, x0
   2cdf0:	b.le	2ce08 <PyInit__decimal@@Base+0x15130>
   2cdf4:	ldr	x2, [sp, #120]
   2cdf8:	ldr	x1, [sp, #128]
   2cdfc:	ldr	x0, [sp, #136]
   2ce00:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2ce04:	b	2ce20 <PyInit__decimal@@Base+0x15148>
   2ce08:	mov	w0, #0x1                   	// #1
   2ce0c:	b	2ce20 <PyInit__decimal@@Base+0x15148>
   2ce10:	ldr	x2, [sp, #120]
   2ce14:	ldr	x1, [sp, #128]
   2ce18:	ldr	x0, [sp, #136]
   2ce1c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2ce20:	cmp	w0, #0x0
   2ce24:	b.eq	2d630 <PyInit__decimal@@Base+0x15958>  // b.none
   2ce28:	str	xzr, [sp, #200]
   2ce2c:	b	2cf8c <PyInit__decimal@@Base+0x152b4>
   2ce30:	ldr	x0, [sp, #240]
   2ce34:	ldr	x1, [x0, #40]
   2ce38:	ldr	x0, [sp, #200]
   2ce3c:	lsl	x0, x0, #3
   2ce40:	add	x0, x1, x0
   2ce44:	ldr	x0, [x0]
   2ce48:	str	x0, [sp, #232]
   2ce4c:	ldr	x0, [sp, #248]
   2ce50:	ldr	x1, [x0, #40]
   2ce54:	ldr	x0, [sp, #200]
   2ce58:	lsl	x0, x0, #3
   2ce5c:	add	x0, x1, x0
   2ce60:	ldr	x0, [x0]
   2ce64:	str	x0, [sp, #224]
   2ce68:	str	xzr, [sp, #216]
   2ce6c:	str	wzr, [sp, #212]
   2ce70:	b	2cf58 <PyInit__decimal@@Base+0x15280>
   2ce74:	ldr	x1, [sp, #232]
   2ce78:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2ce7c:	movk	x0, #0xcccd
   2ce80:	umulh	x0, x1, x0
   2ce84:	lsr	x2, x0, #3
   2ce88:	mov	x0, x2
   2ce8c:	lsl	x0, x0, #2
   2ce90:	add	x0, x0, x2
   2ce94:	lsl	x0, x0, #1
   2ce98:	sub	x0, x1, x0
   2ce9c:	str	x0, [sp, #176]
   2cea0:	ldr	x1, [sp, #232]
   2cea4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2cea8:	movk	x0, #0xcccd
   2ceac:	umulh	x0, x1, x0
   2ceb0:	lsr	x0, x0, #3
   2ceb4:	str	x0, [sp, #232]
   2ceb8:	ldr	x1, [sp, #224]
   2cebc:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2cec0:	movk	x0, #0xcccd
   2cec4:	umulh	x0, x1, x0
   2cec8:	lsr	x2, x0, #3
   2cecc:	mov	x0, x2
   2ced0:	lsl	x0, x0, #2
   2ced4:	add	x0, x0, x2
   2ced8:	lsl	x0, x0, #1
   2cedc:	sub	x0, x1, x0
   2cee0:	str	x0, [sp, #184]
   2cee4:	ldr	x1, [sp, #224]
   2cee8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2ceec:	movk	x0, #0xcccd
   2cef0:	umulh	x0, x1, x0
   2cef4:	lsr	x0, x0, #3
   2cef8:	str	x0, [sp, #224]
   2cefc:	ldr	x0, [sp, #176]
   2cf00:	cmp	x0, #0x1
   2cf04:	b.hi	2d600 <PyInit__decimal@@Base+0x15928>  // b.pmore
   2cf08:	ldr	x0, [sp, #184]
   2cf0c:	cmp	x0, #0x1
   2cf10:	b.hi	2d600 <PyInit__decimal@@Base+0x15928>  // b.pmore
   2cf14:	ldr	x1, [sp, #176]
   2cf18:	ldr	x0, [sp, #184]
   2cf1c:	orr	x0, x1, x0
   2cf20:	cmp	x0, #0x0
   2cf24:	b.eq	2cf3c <PyInit__decimal@@Base+0x15264>  // b.none
   2cf28:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2cf2c:	add	x0, x0, #0xdb0
   2cf30:	ldrsw	x1, [sp, #212]
   2cf34:	ldr	x0, [x0, x1, lsl #3]
   2cf38:	b	2cf40 <PyInit__decimal@@Base+0x15268>
   2cf3c:	mov	x0, #0x0                   	// #0
   2cf40:	ldr	x1, [sp, #216]
   2cf44:	add	x0, x1, x0
   2cf48:	str	x0, [sp, #216]
   2cf4c:	ldr	w0, [sp, #212]
   2cf50:	add	w0, w0, #0x1
   2cf54:	str	w0, [sp, #212]
   2cf58:	ldr	w0, [sp, #212]
   2cf5c:	cmp	w0, #0x12
   2cf60:	b.le	2ce74 <PyInit__decimal@@Base+0x1519c>
   2cf64:	ldr	x0, [sp, #56]
   2cf68:	ldr	x1, [x0, #40]
   2cf6c:	ldr	x0, [sp, #200]
   2cf70:	lsl	x0, x0, #3
   2cf74:	add	x0, x1, x0
   2cf78:	ldr	x1, [sp, #216]
   2cf7c:	str	x1, [x0]
   2cf80:	ldr	x0, [sp, #200]
   2cf84:	add	x0, x0, #0x1
   2cf88:	str	x0, [sp, #200]
   2cf8c:	ldr	x0, [sp, #240]
   2cf90:	ldr	x0, [x0, #24]
   2cf94:	sub	x0, x0, #0x1
   2cf98:	ldr	x1, [sp, #200]
   2cf9c:	cmp	x1, x0
   2cfa0:	b.lt	2ce30 <PyInit__decimal@@Base+0x15158>  // b.tstop
   2cfa4:	ldr	x0, [sp, #240]
   2cfa8:	ldr	x1, [x0, #40]
   2cfac:	ldr	x0, [sp, #200]
   2cfb0:	lsl	x0, x0, #3
   2cfb4:	add	x0, x1, x0
   2cfb8:	ldr	x0, [x0]
   2cfbc:	str	x0, [sp, #232]
   2cfc0:	ldr	x0, [sp, #248]
   2cfc4:	ldr	x1, [x0, #40]
   2cfc8:	ldr	x0, [sp, #200]
   2cfcc:	lsl	x0, x0, #3
   2cfd0:	add	x0, x1, x0
   2cfd4:	ldr	x0, [x0]
   2cfd8:	str	x0, [sp, #224]
   2cfdc:	str	xzr, [sp, #216]
   2cfe0:	ldr	x0, [sp, #232]
   2cfe4:	str	x0, [sp, #104]
   2cfe8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2cfec:	add	x0, x0, #0xdb0
   2cff0:	ldr	x0, [x0, #72]
   2cff4:	ldr	x1, [sp, #104]
   2cff8:	cmp	x1, x0
   2cffc:	b.cs	2d108 <PyInit__decimal@@Base+0x15430>  // b.hs, b.nlast
   2d000:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d004:	add	x0, x0, #0xdb0
   2d008:	ldr	x0, [x0, #32]
   2d00c:	ldr	x1, [sp, #104]
   2d010:	cmp	x1, x0
   2d014:	b.cs	2d080 <PyInit__decimal@@Base+0x153a8>  // b.hs, b.nlast
   2d018:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d01c:	add	x0, x0, #0xdb0
   2d020:	ldr	x0, [x0, #16]
   2d024:	ldr	x1, [sp, #104]
   2d028:	cmp	x1, x0
   2d02c:	b.cs	2d058 <PyInit__decimal@@Base+0x15380>  // b.hs, b.nlast
   2d030:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d034:	add	x0, x0, #0xdb0
   2d038:	ldr	x0, [x0, #8]
   2d03c:	ldr	x1, [sp, #104]
   2d040:	cmp	x1, x0
   2d044:	b.cs	2d050 <PyInit__decimal@@Base+0x15378>  // b.hs, b.nlast
   2d048:	mov	w0, #0x1                   	// #1
   2d04c:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d050:	mov	w0, #0x2                   	// #2
   2d054:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d058:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d05c:	add	x0, x0, #0xdb0
   2d060:	ldr	x0, [x0, #24]
   2d064:	ldr	x1, [sp, #104]
   2d068:	cmp	x1, x0
   2d06c:	b.cs	2d078 <PyInit__decimal@@Base+0x153a0>  // b.hs, b.nlast
   2d070:	mov	w0, #0x3                   	// #3
   2d074:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d078:	mov	w0, #0x4                   	// #4
   2d07c:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d080:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d084:	add	x0, x0, #0xdb0
   2d088:	ldr	x0, [x0, #48]
   2d08c:	ldr	x1, [sp, #104]
   2d090:	cmp	x1, x0
   2d094:	b.cs	2d0c0 <PyInit__decimal@@Base+0x153e8>  // b.hs, b.nlast
   2d098:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d09c:	add	x0, x0, #0xdb0
   2d0a0:	ldr	x0, [x0, #40]
   2d0a4:	ldr	x1, [sp, #104]
   2d0a8:	cmp	x1, x0
   2d0ac:	b.cs	2d0b8 <PyInit__decimal@@Base+0x153e0>  // b.hs, b.nlast
   2d0b0:	mov	w0, #0x5                   	// #5
   2d0b4:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d0b8:	mov	w0, #0x6                   	// #6
   2d0bc:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d0c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d0c4:	add	x0, x0, #0xdb0
   2d0c8:	ldr	x0, [x0, #64]
   2d0cc:	ldr	x1, [sp, #104]
   2d0d0:	cmp	x1, x0
   2d0d4:	b.cs	2d100 <PyInit__decimal@@Base+0x15428>  // b.hs, b.nlast
   2d0d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d0dc:	add	x0, x0, #0xdb0
   2d0e0:	ldr	x0, [x0, #56]
   2d0e4:	ldr	x1, [sp, #104]
   2d0e8:	cmp	x1, x0
   2d0ec:	b.cs	2d0f8 <PyInit__decimal@@Base+0x15420>  // b.hs, b.nlast
   2d0f0:	mov	w0, #0x7                   	// #7
   2d0f4:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d0f8:	mov	w0, #0x8                   	// #8
   2d0fc:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d100:	mov	w0, #0x9                   	// #9
   2d104:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d108:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d10c:	add	x0, x0, #0xdb0
   2d110:	ldr	x0, [x0, #112]
   2d114:	ldr	x1, [sp, #104]
   2d118:	cmp	x1, x0
   2d11c:	b.cs	2d1a8 <PyInit__decimal@@Base+0x154d0>  // b.hs, b.nlast
   2d120:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d124:	add	x0, x0, #0xdb0
   2d128:	ldr	x0, [x0, #88]
   2d12c:	ldr	x1, [sp, #104]
   2d130:	cmp	x1, x0
   2d134:	b.cs	2d160 <PyInit__decimal@@Base+0x15488>  // b.hs, b.nlast
   2d138:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d13c:	add	x0, x0, #0xdb0
   2d140:	ldr	x0, [x0, #80]
   2d144:	ldr	x1, [sp, #104]
   2d148:	cmp	x1, x0
   2d14c:	b.cs	2d158 <PyInit__decimal@@Base+0x15480>  // b.hs, b.nlast
   2d150:	mov	w0, #0xa                   	// #10
   2d154:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d158:	mov	w0, #0xb                   	// #11
   2d15c:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d160:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d164:	add	x0, x0, #0xdb0
   2d168:	ldr	x0, [x0, #104]
   2d16c:	ldr	x1, [sp, #104]
   2d170:	cmp	x1, x0
   2d174:	b.cs	2d1a0 <PyInit__decimal@@Base+0x154c8>  // b.hs, b.nlast
   2d178:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d17c:	add	x0, x0, #0xdb0
   2d180:	ldr	x0, [x0, #96]
   2d184:	ldr	x1, [sp, #104]
   2d188:	cmp	x1, x0
   2d18c:	b.cs	2d198 <PyInit__decimal@@Base+0x154c0>  // b.hs, b.nlast
   2d190:	mov	w0, #0xc                   	// #12
   2d194:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d198:	mov	w0, #0xd                   	// #13
   2d19c:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d1a0:	mov	w0, #0xe                   	// #14
   2d1a4:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d1a8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d1ac:	add	x0, x0, #0xdb0
   2d1b0:	ldr	x0, [x0, #144]
   2d1b4:	ldr	x1, [sp, #104]
   2d1b8:	cmp	x1, x0
   2d1bc:	b.cs	2d228 <PyInit__decimal@@Base+0x15550>  // b.hs, b.nlast
   2d1c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d1c4:	add	x0, x0, #0xdb0
   2d1c8:	ldr	x0, [x0, #128]
   2d1cc:	ldr	x1, [sp, #104]
   2d1d0:	cmp	x1, x0
   2d1d4:	b.cs	2d200 <PyInit__decimal@@Base+0x15528>  // b.hs, b.nlast
   2d1d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d1dc:	add	x0, x0, #0xdb0
   2d1e0:	ldr	x0, [x0, #120]
   2d1e4:	ldr	x1, [sp, #104]
   2d1e8:	cmp	x1, x0
   2d1ec:	b.cs	2d1f8 <PyInit__decimal@@Base+0x15520>  // b.hs, b.nlast
   2d1f0:	mov	w0, #0xf                   	// #15
   2d1f4:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d1f8:	mov	w0, #0x10                  	// #16
   2d1fc:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d200:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d204:	add	x0, x0, #0xdb0
   2d208:	ldr	x0, [x0, #136]
   2d20c:	ldr	x1, [sp, #104]
   2d210:	cmp	x1, x0
   2d214:	b.cs	2d220 <PyInit__decimal@@Base+0x15548>  // b.hs, b.nlast
   2d218:	mov	w0, #0x11                  	// #17
   2d21c:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d220:	mov	w0, #0x12                  	// #18
   2d224:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d228:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d22c:	add	x0, x0, #0xdb0
   2d230:	ldr	x0, [x0, #152]
   2d234:	ldr	x1, [sp, #104]
   2d238:	cmp	x1, x0
   2d23c:	b.cs	2d248 <PyInit__decimal@@Base+0x15570>  // b.hs, b.nlast
   2d240:	mov	w0, #0x13                  	// #19
   2d244:	b	2d24c <PyInit__decimal@@Base+0x15574>
   2d248:	mov	w0, #0x14                  	// #20
   2d24c:	str	w0, [sp, #196]
   2d250:	str	wzr, [sp, #212]
   2d254:	b	2d33c <PyInit__decimal@@Base+0x15664>
   2d258:	ldr	x1, [sp, #232]
   2d25c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d260:	movk	x0, #0xcccd
   2d264:	umulh	x0, x1, x0
   2d268:	lsr	x2, x0, #3
   2d26c:	mov	x0, x2
   2d270:	lsl	x0, x0, #2
   2d274:	add	x0, x0, x2
   2d278:	lsl	x0, x0, #1
   2d27c:	sub	x0, x1, x0
   2d280:	str	x0, [sp, #176]
   2d284:	ldr	x1, [sp, #232]
   2d288:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d28c:	movk	x0, #0xcccd
   2d290:	umulh	x0, x1, x0
   2d294:	lsr	x0, x0, #3
   2d298:	str	x0, [sp, #232]
   2d29c:	ldr	x1, [sp, #224]
   2d2a0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d2a4:	movk	x0, #0xcccd
   2d2a8:	umulh	x0, x1, x0
   2d2ac:	lsr	x2, x0, #3
   2d2b0:	mov	x0, x2
   2d2b4:	lsl	x0, x0, #2
   2d2b8:	add	x0, x0, x2
   2d2bc:	lsl	x0, x0, #1
   2d2c0:	sub	x0, x1, x0
   2d2c4:	str	x0, [sp, #184]
   2d2c8:	ldr	x1, [sp, #224]
   2d2cc:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d2d0:	movk	x0, #0xcccd
   2d2d4:	umulh	x0, x1, x0
   2d2d8:	lsr	x0, x0, #3
   2d2dc:	str	x0, [sp, #224]
   2d2e0:	ldr	x0, [sp, #176]
   2d2e4:	cmp	x0, #0x1
   2d2e8:	b.hi	2d608 <PyInit__decimal@@Base+0x15930>  // b.pmore
   2d2ec:	ldr	x0, [sp, #184]
   2d2f0:	cmp	x0, #0x1
   2d2f4:	b.hi	2d608 <PyInit__decimal@@Base+0x15930>  // b.pmore
   2d2f8:	ldr	x1, [sp, #176]
   2d2fc:	ldr	x0, [sp, #184]
   2d300:	orr	x0, x1, x0
   2d304:	cmp	x0, #0x0
   2d308:	b.eq	2d320 <PyInit__decimal@@Base+0x15648>  // b.none
   2d30c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d310:	add	x0, x0, #0xdb0
   2d314:	ldrsw	x1, [sp, #212]
   2d318:	ldr	x0, [x0, x1, lsl #3]
   2d31c:	b	2d324 <PyInit__decimal@@Base+0x1564c>
   2d320:	mov	x0, #0x0                   	// #0
   2d324:	ldr	x1, [sp, #216]
   2d328:	add	x0, x1, x0
   2d32c:	str	x0, [sp, #216]
   2d330:	ldr	w0, [sp, #212]
   2d334:	add	w0, w0, #0x1
   2d338:	str	w0, [sp, #212]
   2d33c:	ldr	w1, [sp, #212]
   2d340:	ldr	w0, [sp, #196]
   2d344:	cmp	w1, w0
   2d348:	b.lt	2d258 <PyInit__decimal@@Base+0x15580>  // b.tstop
   2d34c:	b	2d3d0 <PyInit__decimal@@Base+0x156f8>
   2d350:	ldr	x1, [sp, #224]
   2d354:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d358:	movk	x0, #0xcccd
   2d35c:	umulh	x0, x1, x0
   2d360:	lsr	x2, x0, #3
   2d364:	mov	x0, x2
   2d368:	lsl	x0, x0, #2
   2d36c:	add	x0, x0, x2
   2d370:	lsl	x0, x0, #1
   2d374:	sub	x0, x1, x0
   2d378:	str	x0, [sp, #184]
   2d37c:	ldr	x1, [sp, #224]
   2d380:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d384:	movk	x0, #0xcccd
   2d388:	umulh	x0, x1, x0
   2d38c:	lsr	x0, x0, #3
   2d390:	str	x0, [sp, #224]
   2d394:	ldr	x0, [sp, #184]
   2d398:	cmp	x0, #0x1
   2d39c:	b.hi	2d610 <PyInit__decimal@@Base+0x15938>  // b.pmore
   2d3a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2d3a4:	add	x0, x0, #0xdb0
   2d3a8:	ldrsw	x1, [sp, #212]
   2d3ac:	ldr	x1, [x0, x1, lsl #3]
   2d3b0:	ldr	x0, [sp, #184]
   2d3b4:	mul	x0, x1, x0
   2d3b8:	ldr	x1, [sp, #216]
   2d3bc:	add	x0, x1, x0
   2d3c0:	str	x0, [sp, #216]
   2d3c4:	ldr	w0, [sp, #212]
   2d3c8:	add	w0, w0, #0x1
   2d3cc:	str	w0, [sp, #212]
   2d3d0:	ldr	w0, [sp, #212]
   2d3d4:	cmp	w0, #0x12
   2d3d8:	b.le	2d350 <PyInit__decimal@@Base+0x15678>
   2d3dc:	ldr	x0, [sp, #56]
   2d3e0:	ldr	x1, [x0, #40]
   2d3e4:	ldr	x0, [sp, #200]
   2d3e8:	add	x2, x0, #0x1
   2d3ec:	str	x2, [sp, #200]
   2d3f0:	lsl	x0, x0, #3
   2d3f4:	add	x0, x1, x0
   2d3f8:	ldr	x1, [sp, #216]
   2d3fc:	str	x1, [x0]
   2d400:	b	2d4cc <PyInit__decimal@@Base+0x157f4>
   2d404:	ldr	x0, [sp, #248]
   2d408:	ldr	x1, [x0, #40]
   2d40c:	ldr	x0, [sp, #200]
   2d410:	lsl	x0, x0, #3
   2d414:	add	x0, x1, x0
   2d418:	ldr	x0, [x0]
   2d41c:	str	x0, [sp, #224]
   2d420:	str	wzr, [sp, #212]
   2d424:	b	2d484 <PyInit__decimal@@Base+0x157ac>
   2d428:	ldr	x1, [sp, #224]
   2d42c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d430:	movk	x0, #0xcccd
   2d434:	umulh	x0, x1, x0
   2d438:	lsr	x2, x0, #3
   2d43c:	mov	x0, x2
   2d440:	lsl	x0, x0, #2
   2d444:	add	x0, x0, x2
   2d448:	lsl	x0, x0, #1
   2d44c:	sub	x0, x1, x0
   2d450:	str	x0, [sp, #184]
   2d454:	ldr	x1, [sp, #224]
   2d458:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2d45c:	movk	x0, #0xcccd
   2d460:	umulh	x0, x1, x0
   2d464:	lsr	x0, x0, #3
   2d468:	str	x0, [sp, #224]
   2d46c:	ldr	x0, [sp, #184]
   2d470:	cmp	x0, #0x1
   2d474:	b.hi	2d618 <PyInit__decimal@@Base+0x15940>  // b.pmore
   2d478:	ldr	w0, [sp, #212]
   2d47c:	add	w0, w0, #0x1
   2d480:	str	w0, [sp, #212]
   2d484:	ldr	w0, [sp, #212]
   2d488:	cmp	w0, #0x12
   2d48c:	b.le	2d428 <PyInit__decimal@@Base+0x15750>
   2d490:	ldr	x0, [sp, #248]
   2d494:	ldr	x1, [x0, #40]
   2d498:	ldr	x0, [sp, #200]
   2d49c:	lsl	x0, x0, #3
   2d4a0:	add	x1, x1, x0
   2d4a4:	ldr	x0, [sp, #56]
   2d4a8:	ldr	x2, [x0, #40]
   2d4ac:	ldr	x0, [sp, #200]
   2d4b0:	lsl	x0, x0, #3
   2d4b4:	add	x0, x2, x0
   2d4b8:	ldr	x1, [x1]
   2d4bc:	str	x1, [x0]
   2d4c0:	ldr	x0, [sp, #200]
   2d4c4:	add	x0, x0, #0x1
   2d4c8:	str	x0, [sp, #200]
   2d4cc:	ldr	x0, [sp, #248]
   2d4d0:	ldr	x0, [x0, #24]
   2d4d4:	ldr	x1, [sp, #200]
   2d4d8:	cmp	x1, x0
   2d4dc:	b.lt	2d404 <PyInit__decimal@@Base+0x1572c>  // b.tstop
   2d4e0:	ldr	x0, [sp, #56]
   2d4e4:	str	x0, [sp, #64]
   2d4e8:	ldr	x0, [sp, #64]
   2d4ec:	ldrb	w0, [x0]
   2d4f0:	and	w0, w0, #0xfffffff0
   2d4f4:	and	w1, w0, #0xff
   2d4f8:	ldr	x0, [sp, #64]
   2d4fc:	strb	w1, [x0]
   2d500:	nop
   2d504:	ldr	x0, [sp, #56]
   2d508:	str	xzr, [x0, #8]
   2d50c:	ldr	x0, [sp, #56]
   2d510:	ldr	x2, [x0, #40]
   2d514:	ldr	x0, [sp, #248]
   2d518:	ldr	x0, [x0, #24]
   2d51c:	mov	x1, x0
   2d520:	mov	x0, x2
   2d524:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   2d528:	mov	x1, x0
   2d52c:	ldr	x0, [sp, #56]
   2d530:	str	x1, [x0, #24]
   2d534:	ldr	x0, [sp, #56]
   2d538:	ldr	x0, [x0, #24]
   2d53c:	ldr	x1, [sp, #56]
   2d540:	str	x1, [sp, #96]
   2d544:	str	x0, [sp, #88]
   2d548:	ldr	x0, [sp, #24]
   2d54c:	str	x0, [sp, #80]
   2d550:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2d554:	add	x0, x0, #0x6d8
   2d558:	ldr	x0, [x0]
   2d55c:	ldr	x2, [sp, #88]
   2d560:	ldr	x1, [sp, #88]
   2d564:	cmp	x2, x0
   2d568:	csel	x0, x1, x0, ge  // ge = tcont
   2d56c:	str	x0, [sp, #88]
   2d570:	ldr	x0, [sp, #96]
   2d574:	ldr	x0, [x0, #32]
   2d578:	ldr	x1, [sp, #88]
   2d57c:	cmp	x1, x0
   2d580:	b.eq	2d5dc <PyInit__decimal@@Base+0x15904>  // b.none
   2d584:	ldr	x0, [sp, #96]
   2d588:	str	x0, [sp, #72]
   2d58c:	ldr	x0, [sp, #72]
   2d590:	ldrb	w0, [x0]
   2d594:	and	w0, w0, #0x20
   2d598:	cmp	w0, #0x0
   2d59c:	b.eq	2d5c8 <PyInit__decimal@@Base+0x158f0>  // b.none
   2d5a0:	ldr	x0, [sp, #96]
   2d5a4:	ldr	x0, [x0, #32]
   2d5a8:	ldr	x1, [sp, #88]
   2d5ac:	cmp	x1, x0
   2d5b0:	b.le	2d5e4 <PyInit__decimal@@Base+0x1590c>
   2d5b4:	ldr	x2, [sp, #80]
   2d5b8:	ldr	x1, [sp, #88]
   2d5bc:	ldr	x0, [sp, #96]
   2d5c0:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2d5c4:	b	2d5e8 <PyInit__decimal@@Base+0x15910>
   2d5c8:	ldr	x2, [sp, #80]
   2d5cc:	ldr	x1, [sp, #88]
   2d5d0:	ldr	x0, [sp, #96]
   2d5d4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2d5d8:	b	2d5e8 <PyInit__decimal@@Base+0x15910>
   2d5dc:	nop
   2d5e0:	b	2d5e8 <PyInit__decimal@@Base+0x15910>
   2d5e4:	nop
   2d5e8:	ldr	x0, [sp, #56]
   2d5ec:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2d5f0:	ldr	x1, [sp, #32]
   2d5f4:	ldr	x0, [sp, #56]
   2d5f8:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2d5fc:	b	2d634 <PyInit__decimal@@Base+0x1595c>
   2d600:	nop
   2d604:	b	2d61c <PyInit__decimal@@Base+0x15944>
   2d608:	nop
   2d60c:	b	2d61c <PyInit__decimal@@Base+0x15944>
   2d610:	nop
   2d614:	b	2d61c <PyInit__decimal@@Base+0x15944>
   2d618:	nop
   2d61c:	ldr	x2, [sp, #24]
   2d620:	mov	w1, #0x100                 	// #256
   2d624:	ldr	x0, [sp, #56]
   2d628:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d62c:	b	2d634 <PyInit__decimal@@Base+0x1595c>
   2d630:	nop
   2d634:	ldp	x29, x30, [sp], #256
   2d638:	ret
   2d63c:	sub	sp, sp, #0x760
   2d640:	stp	x29, x30, [sp]
   2d644:	mov	x29, sp
   2d648:	str	x0, [sp, #56]
   2d64c:	str	x1, [sp, #48]
   2d650:	str	x2, [sp, #40]
   2d654:	str	x3, [sp, #32]
   2d658:	str	x4, [sp, #24]
   2d65c:	str	wzr, [sp, #1756]
   2d660:	mov	w0, #0x30                  	// #48
   2d664:	strb	w0, [sp, #1192]
   2d668:	str	xzr, [sp, #1200]
   2d66c:	str	xzr, [sp, #1208]
   2d670:	str	xzr, [sp, #1216]
   2d674:	mov	x0, #0x40                  	// #64
   2d678:	str	x0, [sp, #1224]
   2d67c:	add	x0, sp, #0x4d8
   2d680:	str	x0, [sp, #1232]
   2d684:	mov	w0, #0x30                  	// #48
   2d688:	strb	w0, [sp, #632]
   2d68c:	str	xzr, [sp, #640]
   2d690:	str	xzr, [sp, #648]
   2d694:	str	xzr, [sp, #656]
   2d698:	mov	x0, #0x40                  	// #64
   2d69c:	str	x0, [sp, #664]
   2d6a0:	add	x0, sp, #0x2a8
   2d6a4:	str	x0, [sp, #672]
   2d6a8:	mov	w0, #0x30                  	// #48
   2d6ac:	strb	w0, [sp, #72]
   2d6b0:	str	xzr, [sp, #80]
   2d6b4:	str	xzr, [sp, #88]
   2d6b8:	str	xzr, [sp, #96]
   2d6bc:	mov	x0, #0x40                  	// #64
   2d6c0:	str	x0, [sp, #104]
   2d6c4:	add	x0, sp, #0x78
   2d6c8:	str	x0, [sp, #112]
   2d6cc:	ldr	x0, [sp, #48]
   2d6d0:	str	x0, [sp, #1856]
   2d6d4:	ldr	x0, [sp, #1856]
   2d6d8:	ldrb	w0, [x0]
   2d6dc:	and	w0, w0, #0xe
   2d6e0:	cmp	w0, #0x0
   2d6e4:	b.ne	2d704 <PyInit__decimal@@Base+0x15a2c>  // b.any
   2d6e8:	ldr	x0, [sp, #40]
   2d6ec:	str	x0, [sp, #1848]
   2d6f0:	ldr	x0, [sp, #1848]
   2d6f4:	ldrb	w0, [x0]
   2d6f8:	and	w0, w0, #0xe
   2d6fc:	cmp	w0, #0x0
   2d700:	b.eq	2d724 <PyInit__decimal@@Base+0x15a4c>  // b.none
   2d704:	ldr	x4, [sp, #24]
   2d708:	ldr	x3, [sp, #32]
   2d70c:	ldr	x2, [sp, #40]
   2d710:	ldr	x1, [sp, #48]
   2d714:	ldr	x0, [sp, #56]
   2d718:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2d71c:	cmp	w0, #0x0
   2d720:	b.ne	2dad4 <PyInit__decimal@@Base+0x15dfc>  // b.any
   2d724:	ldr	x0, [sp, #40]
   2d728:	ldr	x0, [x0, #8]
   2d72c:	cmp	x0, #0x0
   2d730:	b.ne	2d750 <PyInit__decimal@@Base+0x15a78>  // b.any
   2d734:	ldr	x0, [sp, #40]
   2d738:	str	x0, [sp, #1840]
   2d73c:	ldr	x0, [sp, #1840]
   2d740:	ldrb	w0, [x0]
   2d744:	and	w0, w0, #0x2
   2d748:	cmp	w0, #0x0
   2d74c:	b.eq	2d764 <PyInit__decimal@@Base+0x15a8c>  // b.none
   2d750:	ldr	x2, [sp, #24]
   2d754:	mov	w1, #0x100                 	// #256
   2d758:	ldr	x0, [sp, #56]
   2d75c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d760:	b	2dae0 <PyInit__decimal@@Base+0x15e08>
   2d764:	add	x0, sp, #0x6dc
   2d768:	mov	x1, x0
   2d76c:	ldr	x0, [sp, #40]
   2d770:	bl	2833c <PyInit__decimal@@Base+0x10664>
   2d774:	str	x0, [sp, #1864]
   2d778:	ldr	w0, [sp, #1756]
   2d77c:	and	w0, w0, #0x100
   2d780:	cmp	w0, #0x0
   2d784:	b.eq	2d79c <PyInit__decimal@@Base+0x15ac4>  // b.none
   2d788:	ldr	x2, [sp, #24]
   2d78c:	mov	w1, #0x100                 	// #256
   2d790:	ldr	x0, [sp, #56]
   2d794:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d798:	b	2dae0 <PyInit__decimal@@Base+0x15e08>
   2d79c:	ldr	x0, [sp, #32]
   2d7a0:	ldr	x0, [x0]
   2d7a4:	ldr	x1, [sp, #1864]
   2d7a8:	cmp	x1, x0
   2d7ac:	b.gt	2d7c8 <PyInit__decimal@@Base+0x15af0>
   2d7b0:	ldr	x0, [sp, #32]
   2d7b4:	ldr	x0, [x0]
   2d7b8:	neg	x0, x0
   2d7bc:	ldr	x1, [sp, #1864]
   2d7c0:	cmp	x1, x0
   2d7c4:	b.ge	2d7dc <PyInit__decimal@@Base+0x15b04>  // b.tcont
   2d7c8:	ldr	x2, [sp, #24]
   2d7cc:	mov	w1, #0x100                 	// #256
   2d7d0:	ldr	x0, [sp, #56]
   2d7d4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d7d8:	b	2dae0 <PyInit__decimal@@Base+0x15e08>
   2d7dc:	ldr	x0, [sp, #48]
   2d7e0:	str	x0, [sp, #1832]
   2d7e4:	ldr	x0, [sp, #1832]
   2d7e8:	ldrb	w0, [x0]
   2d7ec:	and	w0, w0, #0x2
   2d7f0:	cmp	w0, #0x0
   2d7f4:	b.eq	2d80c <PyInit__decimal@@Base+0x15b34>  // b.none
   2d7f8:	ldr	x2, [sp, #24]
   2d7fc:	ldr	x1, [sp, #48]
   2d800:	ldr	x0, [sp, #56]
   2d804:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2d808:	b	2dae0 <PyInit__decimal@@Base+0x15e08>
   2d80c:	ldr	x0, [sp, #1864]
   2d810:	cmp	x0, #0x0
   2d814:	b.lt	2d838 <PyInit__decimal@@Base+0x15b60>  // b.tstop
   2d818:	ldr	x0, [sp, #1864]
   2d81c:	str	x0, [sp, #1880]
   2d820:	ldr	x0, [sp, #32]
   2d824:	ldr	x1, [x0]
   2d828:	ldr	x0, [sp, #1864]
   2d82c:	sub	x0, x1, x0
   2d830:	str	x0, [sp, #1872]
   2d834:	b	2d858 <PyInit__decimal@@Base+0x15b80>
   2d838:	ldr	x0, [sp, #32]
   2d83c:	ldr	x0, [x0]
   2d840:	ldr	x1, [sp, #1864]
   2d844:	add	x0, x1, x0
   2d848:	str	x0, [sp, #1880]
   2d84c:	ldr	x0, [sp, #1864]
   2d850:	neg	x0, x0
   2d854:	str	x0, [sp, #1872]
   2d858:	ldr	x0, [sp, #48]
   2d85c:	ldr	x1, [x0, #16]
   2d860:	ldr	x0, [sp, #32]
   2d864:	ldr	x0, [x0]
   2d868:	cmp	x1, x0
   2d86c:	b.le	2d8b0 <PyInit__decimal@@Base+0x15bd8>
   2d870:	add	x0, sp, #0x4a8
   2d874:	ldr	x2, [sp, #24]
   2d878:	ldr	x1, [sp, #48]
   2d87c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2d880:	cmp	w0, #0x0
   2d884:	b.ne	2d89c <PyInit__decimal@@Base+0x15bc4>  // b.any
   2d888:	ldr	x2, [sp, #24]
   2d88c:	mov	w1, #0x200                 	// #512
   2d890:	ldr	x0, [sp, #56]
   2d894:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d898:	b	2d93c <PyInit__decimal@@Base+0x15c64>
   2d89c:	add	x0, sp, #0x4a8
   2d8a0:	ldr	x1, [sp, #32]
   2d8a4:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2d8a8:	add	x0, sp, #0x4a8
   2d8ac:	str	x0, [sp, #48]
   2d8b0:	add	x0, sp, #0x278
   2d8b4:	ldr	x3, [sp, #24]
   2d8b8:	ldr	x2, [sp, #1880]
   2d8bc:	ldr	x1, [sp, #48]
   2d8c0:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   2d8c4:	cmp	w0, #0x0
   2d8c8:	b.ne	2d8e0 <PyInit__decimal@@Base+0x15c08>  // b.any
   2d8cc:	ldr	x2, [sp, #24]
   2d8d0:	mov	w1, #0x200                 	// #512
   2d8d4:	ldr	x0, [sp, #56]
   2d8d8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d8dc:	b	2d93c <PyInit__decimal@@Base+0x15c64>
   2d8e0:	add	x0, sp, #0x278
   2d8e4:	ldr	x1, [sp, #32]
   2d8e8:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2d8ec:	add	x0, sp, #0x48
   2d8f0:	ldr	x3, [sp, #24]
   2d8f4:	ldr	x2, [sp, #1872]
   2d8f8:	ldr	x1, [sp, #48]
   2d8fc:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   2d900:	cmn	x0, #0x1
   2d904:	b.ne	2d91c <PyInit__decimal@@Base+0x15c44>  // b.any
   2d908:	ldr	x2, [sp, #24]
   2d90c:	mov	w1, #0x200                 	// #512
   2d910:	ldr	x0, [sp, #56]
   2d914:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2d918:	b	2d93c <PyInit__decimal@@Base+0x15c64>
   2d91c:	add	x1, sp, #0x48
   2d920:	add	x0, sp, #0x278
   2d924:	ldr	x4, [sp, #24]
   2d928:	ldr	x3, [sp, #32]
   2d92c:	mov	x2, x1
   2d930:	mov	x1, x0
   2d934:	ldr	x0, [sp, #56]
   2d938:	bl	2f4cc <PyInit__decimal@@Base+0x177f4>
   2d93c:	add	x0, sp, #0x4a8
   2d940:	str	x0, [sp, #1776]
   2d944:	ldr	x0, [sp, #1776]
   2d948:	str	x0, [sp, #1768]
   2d94c:	ldr	x0, [sp, #1768]
   2d950:	ldrb	w0, [x0]
   2d954:	and	w0, w0, #0xe0
   2d958:	cmp	w0, #0x0
   2d95c:	cset	w0, eq  // eq = none
   2d960:	and	w0, w0, #0xff
   2d964:	cmp	w0, #0x0
   2d968:	b.eq	2d984 <PyInit__decimal@@Base+0x15cac>  // b.none
   2d96c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2d970:	add	x0, x0, #0x6f8
   2d974:	ldr	x1, [x0]
   2d978:	ldr	x0, [sp, #1776]
   2d97c:	ldr	x0, [x0, #40]
   2d980:	blr	x1
   2d984:	ldr	x0, [sp, #1776]
   2d988:	str	x0, [sp, #1760]
   2d98c:	ldr	x0, [sp, #1760]
   2d990:	ldrb	w0, [x0]
   2d994:	and	w0, w0, #0x10
   2d998:	cmp	w0, #0x0
   2d99c:	cset	w0, eq  // eq = none
   2d9a0:	and	w0, w0, #0xff
   2d9a4:	cmp	w0, #0x0
   2d9a8:	b.eq	2d9c0 <PyInit__decimal@@Base+0x15ce8>  // b.none
   2d9ac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2d9b0:	add	x0, x0, #0x6f8
   2d9b4:	ldr	x1, [x0]
   2d9b8:	ldr	x0, [sp, #1776]
   2d9bc:	blr	x1
   2d9c0:	nop
   2d9c4:	add	x0, sp, #0x278
   2d9c8:	str	x0, [sp, #1800]
   2d9cc:	ldr	x0, [sp, #1800]
   2d9d0:	str	x0, [sp, #1792]
   2d9d4:	ldr	x0, [sp, #1792]
   2d9d8:	ldrb	w0, [x0]
   2d9dc:	and	w0, w0, #0xe0
   2d9e0:	cmp	w0, #0x0
   2d9e4:	cset	w0, eq  // eq = none
   2d9e8:	and	w0, w0, #0xff
   2d9ec:	cmp	w0, #0x0
   2d9f0:	b.eq	2da0c <PyInit__decimal@@Base+0x15d34>  // b.none
   2d9f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2d9f8:	add	x0, x0, #0x6f8
   2d9fc:	ldr	x1, [x0]
   2da00:	ldr	x0, [sp, #1800]
   2da04:	ldr	x0, [x0, #40]
   2da08:	blr	x1
   2da0c:	ldr	x0, [sp, #1800]
   2da10:	str	x0, [sp, #1784]
   2da14:	ldr	x0, [sp, #1784]
   2da18:	ldrb	w0, [x0]
   2da1c:	and	w0, w0, #0x10
   2da20:	cmp	w0, #0x0
   2da24:	cset	w0, eq  // eq = none
   2da28:	and	w0, w0, #0xff
   2da2c:	cmp	w0, #0x0
   2da30:	b.eq	2da48 <PyInit__decimal@@Base+0x15d70>  // b.none
   2da34:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2da38:	add	x0, x0, #0x6f8
   2da3c:	ldr	x1, [x0]
   2da40:	ldr	x0, [sp, #1800]
   2da44:	blr	x1
   2da48:	nop
   2da4c:	add	x0, sp, #0x48
   2da50:	str	x0, [sp, #1824]
   2da54:	ldr	x0, [sp, #1824]
   2da58:	str	x0, [sp, #1816]
   2da5c:	ldr	x0, [sp, #1816]
   2da60:	ldrb	w0, [x0]
   2da64:	and	w0, w0, #0xe0
   2da68:	cmp	w0, #0x0
   2da6c:	cset	w0, eq  // eq = none
   2da70:	and	w0, w0, #0xff
   2da74:	cmp	w0, #0x0
   2da78:	b.eq	2da94 <PyInit__decimal@@Base+0x15dbc>  // b.none
   2da7c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2da80:	add	x0, x0, #0x6f8
   2da84:	ldr	x1, [x0]
   2da88:	ldr	x0, [sp, #1824]
   2da8c:	ldr	x0, [x0, #40]
   2da90:	blr	x1
   2da94:	ldr	x0, [sp, #1824]
   2da98:	str	x0, [sp, #1808]
   2da9c:	ldr	x0, [sp, #1808]
   2daa0:	ldrb	w0, [x0]
   2daa4:	and	w0, w0, #0x10
   2daa8:	cmp	w0, #0x0
   2daac:	cset	w0, eq  // eq = none
   2dab0:	and	w0, w0, #0xff
   2dab4:	cmp	w0, #0x0
   2dab8:	b.eq	2dadc <PyInit__decimal@@Base+0x15e04>  // b.none
   2dabc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2dac0:	add	x0, x0, #0x6f8
   2dac4:	ldr	x1, [x0]
   2dac8:	ldr	x0, [sp, #1824]
   2dacc:	blr	x1
   2dad0:	b	2dadc <PyInit__decimal@@Base+0x15e04>
   2dad4:	nop
   2dad8:	b	2dae0 <PyInit__decimal@@Base+0x15e08>
   2dadc:	nop
   2dae0:	ldp	x29, x30, [sp]
   2dae4:	add	sp, sp, #0x760
   2dae8:	ret
   2daec:	stp	x29, x30, [sp, #-144]!
   2daf0:	mov	x29, sp
   2daf4:	str	x0, [sp, #56]
   2daf8:	str	x1, [sp, #48]
   2dafc:	str	x2, [sp, #40]
   2db00:	str	x3, [sp, #32]
   2db04:	str	x4, [sp, #24]
   2db08:	str	wzr, [sp, #68]
   2db0c:	ldr	x0, [sp, #48]
   2db10:	str	x0, [sp, #112]
   2db14:	ldr	x0, [sp, #112]
   2db18:	ldrb	w0, [x0]
   2db1c:	and	w0, w0, #0xe
   2db20:	cmp	w0, #0x0
   2db24:	b.ne	2db44 <PyInit__decimal@@Base+0x15e6c>  // b.any
   2db28:	ldr	x0, [sp, #40]
   2db2c:	str	x0, [sp, #104]
   2db30:	ldr	x0, [sp, #104]
   2db34:	ldrb	w0, [x0]
   2db38:	and	w0, w0, #0xe
   2db3c:	cmp	w0, #0x0
   2db40:	b.eq	2db64 <PyInit__decimal@@Base+0x15e8c>  // b.none
   2db44:	ldr	x4, [sp, #24]
   2db48:	ldr	x3, [sp, #32]
   2db4c:	ldr	x2, [sp, #40]
   2db50:	ldr	x1, [sp, #48]
   2db54:	ldr	x0, [sp, #56]
   2db58:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2db5c:	cmp	w0, #0x0
   2db60:	b.ne	2dd10 <PyInit__decimal@@Base+0x16038>  // b.any
   2db64:	ldr	x0, [sp, #40]
   2db68:	ldr	x0, [x0, #8]
   2db6c:	cmp	x0, #0x0
   2db70:	b.ne	2db90 <PyInit__decimal@@Base+0x15eb8>  // b.any
   2db74:	ldr	x0, [sp, #40]
   2db78:	str	x0, [sp, #96]
   2db7c:	ldr	x0, [sp, #96]
   2db80:	ldrb	w0, [x0]
   2db84:	and	w0, w0, #0x2
   2db88:	cmp	w0, #0x0
   2db8c:	b.eq	2dba4 <PyInit__decimal@@Base+0x15ecc>  // b.none
   2db90:	ldr	x2, [sp, #24]
   2db94:	mov	w1, #0x100                 	// #256
   2db98:	ldr	x0, [sp, #56]
   2db9c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2dba0:	b	2dd14 <PyInit__decimal@@Base+0x1603c>
   2dba4:	add	x0, sp, #0x44
   2dba8:	mov	x1, x0
   2dbac:	ldr	x0, [sp, #40]
   2dbb0:	bl	28314 <PyInit__decimal@@Base+0x1063c>
   2dbb4:	str	x0, [sp, #136]
   2dbb8:	ldr	x0, [sp, #32]
   2dbbc:	ldr	x1, [x0, #8]
   2dbc0:	ldr	x0, [sp, #32]
   2dbc4:	ldr	x0, [x0]
   2dbc8:	add	x0, x1, x0
   2dbcc:	lsl	x0, x0, #1
   2dbd0:	str	x0, [sp, #128]
   2dbd4:	ldr	x1, [sp, #136]
   2dbd8:	ldr	x0, [sp, #128]
   2dbdc:	cmp	x1, x0
   2dbe0:	b.hi	2dbf4 <PyInit__decimal@@Base+0x15f1c>  // b.pmore
   2dbe4:	ldr	w0, [sp, #68]
   2dbe8:	and	w0, w0, #0x100
   2dbec:	cmp	w0, #0x0
   2dbf0:	b.eq	2dc08 <PyInit__decimal@@Base+0x15f30>  // b.none
   2dbf4:	ldr	x2, [sp, #24]
   2dbf8:	mov	w1, #0x100                 	// #256
   2dbfc:	ldr	x0, [sp, #56]
   2dc00:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2dc04:	b	2dd14 <PyInit__decimal@@Base+0x1603c>
   2dc08:	ldr	x0, [sp, #48]
   2dc0c:	str	x0, [sp, #88]
   2dc10:	ldr	x0, [sp, #88]
   2dc14:	ldrb	w0, [x0]
   2dc18:	and	w0, w0, #0x2
   2dc1c:	cmp	w0, #0x0
   2dc20:	b.eq	2dc38 <PyInit__decimal@@Base+0x15f60>  // b.none
   2dc24:	ldr	x2, [sp, #24]
   2dc28:	ldr	x1, [sp, #48]
   2dc2c:	ldr	x0, [sp, #56]
   2dc30:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2dc34:	b	2dd14 <PyInit__decimal@@Base+0x1603c>
   2dc38:	ldr	x0, [sp, #48]
   2dc3c:	ldr	x1, [x0, #8]
   2dc40:	ldr	x0, [sp, #40]
   2dc44:	str	x0, [sp, #80]
   2dc48:	ldr	x0, [sp, #80]
   2dc4c:	str	x0, [sp, #72]
   2dc50:	ldr	x0, [sp, #72]
   2dc54:	ldrb	w0, [x0]
   2dc58:	and	w2, w0, #0x1
   2dc5c:	mov	w0, #0x0                   	// #0
   2dc60:	sub	w0, w0, w2
   2dc64:	lsl	w0, w0, #1
   2dc68:	add	w0, w0, #0x1
   2dc6c:	sxtw	x2, w0
   2dc70:	ldr	x0, [sp, #136]
   2dc74:	mul	x0, x2, x0
   2dc78:	add	x0, x1, x0
   2dc7c:	str	x0, [sp, #120]
   2dc80:	ldr	x3, [sp, #120]
   2dc84:	mov	x2, #0x1                   	// #1
   2dc88:	movk	x2, #0x4ec8, lsl #16
   2dc8c:	movk	x2, #0x6d67, lsl #32
   2dc90:	movk	x2, #0x1bc1, lsl #48
   2dc94:	ldr	x1, [sp, #120]
   2dc98:	mov	x0, #0x1                   	// #1
   2dc9c:	movk	x0, #0x4ec8, lsl #16
   2dca0:	movk	x0, #0x6d67, lsl #32
   2dca4:	movk	x0, #0x1bc1, lsl #48
   2dca8:	cmp	x3, x2
   2dcac:	csel	x0, x1, x0, le
   2dcb0:	str	x0, [sp, #120]
   2dcb4:	ldr	x3, [sp, #120]
   2dcb8:	mov	x2, #0xffffffff626fffff    	// #-2643460097
   2dcbc:	movk	x2, #0x2531, lsl #32
   2dcc0:	movk	x2, #0xc87d, lsl #48
   2dcc4:	ldr	x1, [sp, #120]
   2dcc8:	mov	x0, #0xffffffff626fffff    	// #-2643460097
   2dccc:	movk	x0, #0x2531, lsl #32
   2dcd0:	movk	x0, #0xc87d, lsl #48
   2dcd4:	cmp	x3, x2
   2dcd8:	csel	x0, x1, x0, ge  // ge = tcont
   2dcdc:	str	x0, [sp, #120]
   2dce0:	ldr	x2, [sp, #24]
   2dce4:	ldr	x1, [sp, #48]
   2dce8:	ldr	x0, [sp, #56]
   2dcec:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2dcf0:	ldr	x0, [sp, #56]
   2dcf4:	ldr	x1, [sp, #120]
   2dcf8:	str	x1, [x0, #8]
   2dcfc:	ldr	x2, [sp, #24]
   2dd00:	ldr	x1, [sp, #32]
   2dd04:	ldr	x0, [sp, #56]
   2dd08:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   2dd0c:	b	2dd14 <PyInit__decimal@@Base+0x1603c>
   2dd10:	nop
   2dd14:	ldp	x29, x30, [sp], #144
   2dd18:	ret
   2dd1c:	stp	x29, x30, [sp, #-80]!
   2dd20:	mov	x29, sp
   2dd24:	str	x0, [sp, #56]
   2dd28:	str	x1, [sp, #48]
   2dd2c:	str	x2, [sp, #40]
   2dd30:	str	x3, [sp, #32]
   2dd34:	str	x4, [sp, #24]
   2dd38:	ldr	x0, [sp, #48]
   2dd3c:	str	x0, [sp, #72]
   2dd40:	ldr	x0, [sp, #72]
   2dd44:	ldrb	w0, [x0]
   2dd48:	and	w0, w0, #0xe
   2dd4c:	cmp	w0, #0x0
   2dd50:	b.eq	2dd84 <PyInit__decimal@@Base+0x160ac>  // b.none
   2dd54:	ldr	x3, [sp, #24]
   2dd58:	ldr	x2, [sp, #32]
   2dd5c:	ldr	x1, [sp, #48]
   2dd60:	ldr	x0, [sp, #56]
   2dd64:	bl	28540 <PyInit__decimal@@Base+0x10868>
   2dd68:	cmp	w0, #0x0
   2dd6c:	b.ne	2de3c <PyInit__decimal@@Base+0x16164>  // b.any
   2dd70:	ldr	x2, [sp, #24]
   2dd74:	ldr	x1, [sp, #48]
   2dd78:	ldr	x0, [sp, #56]
   2dd7c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2dd80:	b	2de48 <PyInit__decimal@@Base+0x16170>
   2dd84:	ldr	x0, [sp, #40]
   2dd88:	cmp	x0, #0x0
   2dd8c:	b.lt	2ddc8 <PyInit__decimal@@Base+0x160f0>  // b.tstop
   2dd90:	ldr	x0, [sp, #32]
   2dd94:	ldr	x0, [x0]
   2dd98:	ldr	x1, [sp, #40]
   2dd9c:	cmp	x1, x0
   2dda0:	b.gt	2ddc8 <PyInit__decimal@@Base+0x160f0>
   2dda4:	ldr	x3, [sp, #24]
   2dda8:	ldr	x2, [sp, #40]
   2ddac:	ldr	x1, [sp, #48]
   2ddb0:	ldr	x0, [sp, #56]
   2ddb4:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   2ddb8:	ldr	x1, [sp, #32]
   2ddbc:	ldr	x0, [sp, #56]
   2ddc0:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2ddc4:	b	2de48 <PyInit__decimal@@Base+0x16170>
   2ddc8:	ldr	x0, [sp, #40]
   2ddcc:	cmp	x0, #0x0
   2ddd0:	b.ge	2de28 <PyInit__decimal@@Base+0x16150>  // b.tcont
   2ddd4:	ldr	x0, [sp, #32]
   2ddd8:	ldr	x0, [x0]
   2dddc:	neg	x0, x0
   2dde0:	ldr	x1, [sp, #40]
   2dde4:	cmp	x1, x0
   2dde8:	b.lt	2de28 <PyInit__decimal@@Base+0x16150>  // b.tstop
   2ddec:	ldr	x2, [sp, #24]
   2ddf0:	ldr	x1, [sp, #48]
   2ddf4:	ldr	x0, [sp, #56]
   2ddf8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2ddfc:	cmp	w0, #0x0
   2de00:	b.eq	2de44 <PyInit__decimal@@Base+0x1616c>  // b.none
   2de04:	ldr	x1, [sp, #32]
   2de08:	ldr	x0, [sp, #56]
   2de0c:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2de10:	ldr	x0, [sp, #40]
   2de14:	neg	x0, x0
   2de18:	mov	x1, x0
   2de1c:	ldr	x0, [sp, #56]
   2de20:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   2de24:	b	2de48 <PyInit__decimal@@Base+0x16170>
   2de28:	ldr	x2, [sp, #24]
   2de2c:	mov	w1, #0x100                 	// #256
   2de30:	ldr	x0, [sp, #56]
   2de34:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2de38:	b	2de48 <PyInit__decimal@@Base+0x16170>
   2de3c:	nop
   2de40:	b	2de48 <PyInit__decimal@@Base+0x16170>
   2de44:	nop
   2de48:	ldp	x29, x30, [sp], #80
   2de4c:	ret
   2de50:	stp	x29, x30, [sp, #-112]!
   2de54:	mov	x29, sp
   2de58:	str	x0, [sp, #56]
   2de5c:	str	x1, [sp, #48]
   2de60:	str	x2, [sp, #40]
   2de64:	str	x3, [sp, #32]
   2de68:	str	x4, [sp, #24]
   2de6c:	str	wzr, [sp, #68]
   2de70:	ldr	x0, [sp, #48]
   2de74:	str	x0, [sp, #96]
   2de78:	ldr	x0, [sp, #96]
   2de7c:	ldrb	w0, [x0]
   2de80:	and	w0, w0, #0xe
   2de84:	cmp	w0, #0x0
   2de88:	b.ne	2dea8 <PyInit__decimal@@Base+0x161d0>  // b.any
   2de8c:	ldr	x0, [sp, #40]
   2de90:	str	x0, [sp, #88]
   2de94:	ldr	x0, [sp, #88]
   2de98:	ldrb	w0, [x0]
   2de9c:	and	w0, w0, #0xe
   2dea0:	cmp	w0, #0x0
   2dea4:	b.eq	2dec8 <PyInit__decimal@@Base+0x161f0>  // b.none
   2dea8:	ldr	x4, [sp, #24]
   2deac:	ldr	x3, [sp, #32]
   2deb0:	ldr	x2, [sp, #40]
   2deb4:	ldr	x1, [sp, #48]
   2deb8:	ldr	x0, [sp, #56]
   2debc:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2dec0:	cmp	w0, #0x0
   2dec4:	b.ne	2e01c <PyInit__decimal@@Base+0x16344>  // b.any
   2dec8:	ldr	x0, [sp, #40]
   2decc:	ldr	x0, [x0, #8]
   2ded0:	cmp	x0, #0x0
   2ded4:	b.ne	2def4 <PyInit__decimal@@Base+0x1621c>  // b.any
   2ded8:	ldr	x0, [sp, #40]
   2dedc:	str	x0, [sp, #80]
   2dee0:	ldr	x0, [sp, #80]
   2dee4:	ldrb	w0, [x0]
   2dee8:	and	w0, w0, #0x2
   2deec:	cmp	w0, #0x0
   2def0:	b.eq	2df08 <PyInit__decimal@@Base+0x16230>  // b.none
   2def4:	ldr	x2, [sp, #24]
   2def8:	mov	w1, #0x100                 	// #256
   2defc:	ldr	x0, [sp, #56]
   2df00:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2df04:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2df08:	add	x0, sp, #0x44
   2df0c:	mov	x1, x0
   2df10:	ldr	x0, [sp, #40]
   2df14:	bl	2833c <PyInit__decimal@@Base+0x10664>
   2df18:	str	x0, [sp, #104]
   2df1c:	ldr	w0, [sp, #68]
   2df20:	and	w0, w0, #0x100
   2df24:	cmp	w0, #0x0
   2df28:	b.eq	2df40 <PyInit__decimal@@Base+0x16268>  // b.none
   2df2c:	ldr	x2, [sp, #24]
   2df30:	mov	w1, #0x100                 	// #256
   2df34:	ldr	x0, [sp, #56]
   2df38:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2df3c:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2df40:	ldr	x0, [sp, #32]
   2df44:	ldr	x0, [x0]
   2df48:	ldr	x1, [sp, #104]
   2df4c:	cmp	x1, x0
   2df50:	b.gt	2df6c <PyInit__decimal@@Base+0x16294>
   2df54:	ldr	x0, [sp, #32]
   2df58:	ldr	x0, [x0]
   2df5c:	neg	x0, x0
   2df60:	ldr	x1, [sp, #104]
   2df64:	cmp	x1, x0
   2df68:	b.ge	2df80 <PyInit__decimal@@Base+0x162a8>  // b.tcont
   2df6c:	ldr	x2, [sp, #24]
   2df70:	mov	w1, #0x100                 	// #256
   2df74:	ldr	x0, [sp, #56]
   2df78:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2df7c:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2df80:	ldr	x0, [sp, #48]
   2df84:	str	x0, [sp, #72]
   2df88:	ldr	x0, [sp, #72]
   2df8c:	ldrb	w0, [x0]
   2df90:	and	w0, w0, #0x2
   2df94:	cmp	w0, #0x0
   2df98:	b.eq	2dfb0 <PyInit__decimal@@Base+0x162d8>  // b.none
   2df9c:	ldr	x2, [sp, #24]
   2dfa0:	ldr	x1, [sp, #48]
   2dfa4:	ldr	x0, [sp, #56]
   2dfa8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2dfac:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2dfb0:	ldr	x0, [sp, #104]
   2dfb4:	cmp	x0, #0x0
   2dfb8:	b.lt	2dfe0 <PyInit__decimal@@Base+0x16308>  // b.tstop
   2dfbc:	ldr	x3, [sp, #24]
   2dfc0:	ldr	x2, [sp, #104]
   2dfc4:	ldr	x1, [sp, #48]
   2dfc8:	ldr	x0, [sp, #56]
   2dfcc:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   2dfd0:	ldr	x1, [sp, #32]
   2dfd4:	ldr	x0, [sp, #56]
   2dfd8:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2dfdc:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2dfe0:	ldr	x2, [sp, #24]
   2dfe4:	ldr	x1, [sp, #48]
   2dfe8:	ldr	x0, [sp, #56]
   2dfec:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   2dff0:	cmp	w0, #0x0
   2dff4:	b.eq	2e024 <PyInit__decimal@@Base+0x1634c>  // b.none
   2dff8:	ldr	x1, [sp, #32]
   2dffc:	ldr	x0, [sp, #56]
   2e000:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2e004:	ldr	x0, [sp, #104]
   2e008:	neg	x0, x0
   2e00c:	mov	x1, x0
   2e010:	ldr	x0, [sp, #56]
   2e014:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   2e018:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2e01c:	nop
   2e020:	b	2e028 <PyInit__decimal@@Base+0x16350>
   2e024:	nop
   2e028:	ldp	x29, x30, [sp], #112
   2e02c:	ret
   2e030:	stp	x29, x30, [sp, #-256]!
   2e034:	mov	x29, sp
   2e038:	str	x0, [sp, #56]
   2e03c:	str	x1, [sp, #48]
   2e040:	str	x2, [sp, #40]
   2e044:	str	x3, [sp, #32]
   2e048:	str	x4, [sp, #24]
   2e04c:	ldr	x0, [sp, #48]
   2e050:	str	x0, [sp, #248]
   2e054:	ldr	x0, [sp, #40]
   2e058:	str	x0, [sp, #240]
   2e05c:	ldr	x0, [sp, #48]
   2e060:	str	x0, [sp, #168]
   2e064:	ldr	x0, [sp, #168]
   2e068:	ldrb	w0, [x0]
   2e06c:	and	w0, w0, #0xe
   2e070:	cmp	w0, #0x0
   2e074:	b.ne	2e0ec <PyInit__decimal@@Base+0x16414>  // b.any
   2e078:	ldr	x0, [sp, #40]
   2e07c:	str	x0, [sp, #160]
   2e080:	ldr	x0, [sp, #160]
   2e084:	ldrb	w0, [x0]
   2e088:	and	w0, w0, #0xe
   2e08c:	cmp	w0, #0x0
   2e090:	b.ne	2e0ec <PyInit__decimal@@Base+0x16414>  // b.any
   2e094:	ldr	x0, [sp, #48]
   2e098:	str	x0, [sp, #152]
   2e09c:	ldr	x0, [sp, #152]
   2e0a0:	ldrb	w0, [x0]
   2e0a4:	and	w0, w0, #0x1
   2e0a8:	cmp	w0, #0x0
   2e0ac:	b.ne	2e0ec <PyInit__decimal@@Base+0x16414>  // b.any
   2e0b0:	ldr	x0, [sp, #40]
   2e0b4:	str	x0, [sp, #144]
   2e0b8:	ldr	x0, [sp, #144]
   2e0bc:	ldrb	w0, [x0]
   2e0c0:	and	w0, w0, #0x1
   2e0c4:	cmp	w0, #0x0
   2e0c8:	b.ne	2e0ec <PyInit__decimal@@Base+0x16414>  // b.any
   2e0cc:	ldr	x0, [sp, #48]
   2e0d0:	ldr	x0, [x0, #8]
   2e0d4:	cmp	x0, #0x0
   2e0d8:	b.ne	2e0ec <PyInit__decimal@@Base+0x16414>  // b.any
   2e0dc:	ldr	x0, [sp, #40]
   2e0e0:	ldr	x0, [x0, #8]
   2e0e4:	cmp	x0, #0x0
   2e0e8:	b.eq	2e100 <PyInit__decimal@@Base+0x16428>  // b.none
   2e0ec:	ldr	x2, [sp, #24]
   2e0f0:	mov	w1, #0x100                 	// #256
   2e0f4:	ldr	x0, [sp, #56]
   2e0f8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2e0fc:	b	2e9e8 <PyInit__decimal@@Base+0x16d10>
   2e100:	ldr	x0, [sp, #40]
   2e104:	ldr	x1, [x0, #16]
   2e108:	ldr	x0, [sp, #48]
   2e10c:	ldr	x0, [x0, #16]
   2e110:	cmp	x1, x0
   2e114:	b.le	2e128 <PyInit__decimal@@Base+0x16450>
   2e118:	ldr	x0, [sp, #40]
   2e11c:	str	x0, [sp, #248]
   2e120:	ldr	x0, [sp, #48]
   2e124:	str	x0, [sp, #240]
   2e128:	ldr	x0, [sp, #248]
   2e12c:	ldr	x0, [x0, #24]
   2e130:	ldr	x1, [sp, #56]
   2e134:	str	x1, [sp, #136]
   2e138:	str	x0, [sp, #128]
   2e13c:	ldr	x0, [sp, #24]
   2e140:	str	x0, [sp, #120]
   2e144:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2e148:	add	x0, x0, #0x6d8
   2e14c:	ldr	x0, [x0]
   2e150:	ldr	x2, [sp, #128]
   2e154:	ldr	x1, [sp, #128]
   2e158:	cmp	x2, x0
   2e15c:	csel	x0, x1, x0, ge  // ge = tcont
   2e160:	str	x0, [sp, #128]
   2e164:	ldr	x0, [sp, #136]
   2e168:	ldr	x0, [x0, #32]
   2e16c:	ldr	x1, [sp, #128]
   2e170:	cmp	x1, x0
   2e174:	b.ne	2e180 <PyInit__decimal@@Base+0x164a8>  // b.any
   2e178:	mov	w0, #0x1                   	// #1
   2e17c:	b	2e1dc <PyInit__decimal@@Base+0x16504>
   2e180:	ldr	x0, [sp, #136]
   2e184:	str	x0, [sp, #112]
   2e188:	ldr	x0, [sp, #112]
   2e18c:	ldrb	w0, [x0]
   2e190:	and	w0, w0, #0x20
   2e194:	cmp	w0, #0x0
   2e198:	b.eq	2e1cc <PyInit__decimal@@Base+0x164f4>  // b.none
   2e19c:	ldr	x0, [sp, #136]
   2e1a0:	ldr	x0, [x0, #32]
   2e1a4:	ldr	x1, [sp, #128]
   2e1a8:	cmp	x1, x0
   2e1ac:	b.le	2e1c4 <PyInit__decimal@@Base+0x164ec>
   2e1b0:	ldr	x2, [sp, #120]
   2e1b4:	ldr	x1, [sp, #128]
   2e1b8:	ldr	x0, [sp, #136]
   2e1bc:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2e1c0:	b	2e1dc <PyInit__decimal@@Base+0x16504>
   2e1c4:	mov	w0, #0x1                   	// #1
   2e1c8:	b	2e1dc <PyInit__decimal@@Base+0x16504>
   2e1cc:	ldr	x2, [sp, #120]
   2e1d0:	ldr	x1, [sp, #128]
   2e1d4:	ldr	x0, [sp, #136]
   2e1d8:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2e1dc:	cmp	w0, #0x0
   2e1e0:	b.eq	2e9e4 <PyInit__decimal@@Base+0x16d0c>  // b.none
   2e1e4:	str	xzr, [sp, #200]
   2e1e8:	b	2e344 <PyInit__decimal@@Base+0x1666c>
   2e1ec:	ldr	x0, [sp, #240]
   2e1f0:	ldr	x1, [x0, #40]
   2e1f4:	ldr	x0, [sp, #200]
   2e1f8:	lsl	x0, x0, #3
   2e1fc:	add	x0, x1, x0
   2e200:	ldr	x0, [x0]
   2e204:	str	x0, [sp, #232]
   2e208:	ldr	x0, [sp, #248]
   2e20c:	ldr	x1, [x0, #40]
   2e210:	ldr	x0, [sp, #200]
   2e214:	lsl	x0, x0, #3
   2e218:	add	x0, x1, x0
   2e21c:	ldr	x0, [x0]
   2e220:	str	x0, [sp, #224]
   2e224:	str	xzr, [sp, #216]
   2e228:	str	wzr, [sp, #212]
   2e22c:	b	2e310 <PyInit__decimal@@Base+0x16638>
   2e230:	ldr	x1, [sp, #232]
   2e234:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e238:	movk	x0, #0xcccd
   2e23c:	umulh	x0, x1, x0
   2e240:	lsr	x2, x0, #3
   2e244:	mov	x0, x2
   2e248:	lsl	x0, x0, #2
   2e24c:	add	x0, x0, x2
   2e250:	lsl	x0, x0, #1
   2e254:	sub	x0, x1, x0
   2e258:	str	x0, [sp, #176]
   2e25c:	ldr	x1, [sp, #232]
   2e260:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e264:	movk	x0, #0xcccd
   2e268:	umulh	x0, x1, x0
   2e26c:	lsr	x0, x0, #3
   2e270:	str	x0, [sp, #232]
   2e274:	ldr	x1, [sp, #224]
   2e278:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e27c:	movk	x0, #0xcccd
   2e280:	umulh	x0, x1, x0
   2e284:	lsr	x2, x0, #3
   2e288:	mov	x0, x2
   2e28c:	lsl	x0, x0, #2
   2e290:	add	x0, x0, x2
   2e294:	lsl	x0, x0, #1
   2e298:	sub	x0, x1, x0
   2e29c:	str	x0, [sp, #184]
   2e2a0:	ldr	x1, [sp, #224]
   2e2a4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e2a8:	movk	x0, #0xcccd
   2e2ac:	umulh	x0, x1, x0
   2e2b0:	lsr	x0, x0, #3
   2e2b4:	str	x0, [sp, #224]
   2e2b8:	ldr	x0, [sp, #176]
   2e2bc:	cmp	x0, #0x1
   2e2c0:	b.hi	2e9b4 <PyInit__decimal@@Base+0x16cdc>  // b.pmore
   2e2c4:	ldr	x0, [sp, #184]
   2e2c8:	cmp	x0, #0x1
   2e2cc:	b.hi	2e9b4 <PyInit__decimal@@Base+0x16cdc>  // b.pmore
   2e2d0:	ldr	x1, [sp, #176]
   2e2d4:	ldr	x0, [sp, #184]
   2e2d8:	cmp	x1, x0
   2e2dc:	b.eq	2e2f4 <PyInit__decimal@@Base+0x1661c>  // b.none
   2e2e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e2e4:	add	x0, x0, #0xdb0
   2e2e8:	ldrsw	x1, [sp, #212]
   2e2ec:	ldr	x0, [x0, x1, lsl #3]
   2e2f0:	b	2e2f8 <PyInit__decimal@@Base+0x16620>
   2e2f4:	mov	x0, #0x0                   	// #0
   2e2f8:	ldr	x1, [sp, #216]
   2e2fc:	add	x0, x1, x0
   2e300:	str	x0, [sp, #216]
   2e304:	ldr	w0, [sp, #212]
   2e308:	add	w0, w0, #0x1
   2e30c:	str	w0, [sp, #212]
   2e310:	ldr	w0, [sp, #212]
   2e314:	cmp	w0, #0x12
   2e318:	b.le	2e230 <PyInit__decimal@@Base+0x16558>
   2e31c:	ldr	x0, [sp, #56]
   2e320:	ldr	x1, [x0, #40]
   2e324:	ldr	x0, [sp, #200]
   2e328:	lsl	x0, x0, #3
   2e32c:	add	x0, x1, x0
   2e330:	ldr	x1, [sp, #216]
   2e334:	str	x1, [x0]
   2e338:	ldr	x0, [sp, #200]
   2e33c:	add	x0, x0, #0x1
   2e340:	str	x0, [sp, #200]
   2e344:	ldr	x0, [sp, #240]
   2e348:	ldr	x0, [x0, #24]
   2e34c:	sub	x0, x0, #0x1
   2e350:	ldr	x1, [sp, #200]
   2e354:	cmp	x1, x0
   2e358:	b.lt	2e1ec <PyInit__decimal@@Base+0x16514>  // b.tstop
   2e35c:	ldr	x0, [sp, #240]
   2e360:	ldr	x1, [x0, #40]
   2e364:	ldr	x0, [sp, #200]
   2e368:	lsl	x0, x0, #3
   2e36c:	add	x0, x1, x0
   2e370:	ldr	x0, [x0]
   2e374:	str	x0, [sp, #232]
   2e378:	ldr	x0, [sp, #248]
   2e37c:	ldr	x1, [x0, #40]
   2e380:	ldr	x0, [sp, #200]
   2e384:	lsl	x0, x0, #3
   2e388:	add	x0, x1, x0
   2e38c:	ldr	x0, [x0]
   2e390:	str	x0, [sp, #224]
   2e394:	str	xzr, [sp, #216]
   2e398:	ldr	x0, [sp, #232]
   2e39c:	str	x0, [sp, #104]
   2e3a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e3a4:	add	x0, x0, #0xdb0
   2e3a8:	ldr	x0, [x0, #72]
   2e3ac:	ldr	x1, [sp, #104]
   2e3b0:	cmp	x1, x0
   2e3b4:	b.cs	2e4c0 <PyInit__decimal@@Base+0x167e8>  // b.hs, b.nlast
   2e3b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e3bc:	add	x0, x0, #0xdb0
   2e3c0:	ldr	x0, [x0, #32]
   2e3c4:	ldr	x1, [sp, #104]
   2e3c8:	cmp	x1, x0
   2e3cc:	b.cs	2e438 <PyInit__decimal@@Base+0x16760>  // b.hs, b.nlast
   2e3d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e3d4:	add	x0, x0, #0xdb0
   2e3d8:	ldr	x0, [x0, #16]
   2e3dc:	ldr	x1, [sp, #104]
   2e3e0:	cmp	x1, x0
   2e3e4:	b.cs	2e410 <PyInit__decimal@@Base+0x16738>  // b.hs, b.nlast
   2e3e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e3ec:	add	x0, x0, #0xdb0
   2e3f0:	ldr	x0, [x0, #8]
   2e3f4:	ldr	x1, [sp, #104]
   2e3f8:	cmp	x1, x0
   2e3fc:	b.cs	2e408 <PyInit__decimal@@Base+0x16730>  // b.hs, b.nlast
   2e400:	mov	w0, #0x1                   	// #1
   2e404:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e408:	mov	w0, #0x2                   	// #2
   2e40c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e410:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e414:	add	x0, x0, #0xdb0
   2e418:	ldr	x0, [x0, #24]
   2e41c:	ldr	x1, [sp, #104]
   2e420:	cmp	x1, x0
   2e424:	b.cs	2e430 <PyInit__decimal@@Base+0x16758>  // b.hs, b.nlast
   2e428:	mov	w0, #0x3                   	// #3
   2e42c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e430:	mov	w0, #0x4                   	// #4
   2e434:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e438:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e43c:	add	x0, x0, #0xdb0
   2e440:	ldr	x0, [x0, #48]
   2e444:	ldr	x1, [sp, #104]
   2e448:	cmp	x1, x0
   2e44c:	b.cs	2e478 <PyInit__decimal@@Base+0x167a0>  // b.hs, b.nlast
   2e450:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e454:	add	x0, x0, #0xdb0
   2e458:	ldr	x0, [x0, #40]
   2e45c:	ldr	x1, [sp, #104]
   2e460:	cmp	x1, x0
   2e464:	b.cs	2e470 <PyInit__decimal@@Base+0x16798>  // b.hs, b.nlast
   2e468:	mov	w0, #0x5                   	// #5
   2e46c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e470:	mov	w0, #0x6                   	// #6
   2e474:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e478:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e47c:	add	x0, x0, #0xdb0
   2e480:	ldr	x0, [x0, #64]
   2e484:	ldr	x1, [sp, #104]
   2e488:	cmp	x1, x0
   2e48c:	b.cs	2e4b8 <PyInit__decimal@@Base+0x167e0>  // b.hs, b.nlast
   2e490:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e494:	add	x0, x0, #0xdb0
   2e498:	ldr	x0, [x0, #56]
   2e49c:	ldr	x1, [sp, #104]
   2e4a0:	cmp	x1, x0
   2e4a4:	b.cs	2e4b0 <PyInit__decimal@@Base+0x167d8>  // b.hs, b.nlast
   2e4a8:	mov	w0, #0x7                   	// #7
   2e4ac:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e4b0:	mov	w0, #0x8                   	// #8
   2e4b4:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e4b8:	mov	w0, #0x9                   	// #9
   2e4bc:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e4c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e4c4:	add	x0, x0, #0xdb0
   2e4c8:	ldr	x0, [x0, #112]
   2e4cc:	ldr	x1, [sp, #104]
   2e4d0:	cmp	x1, x0
   2e4d4:	b.cs	2e560 <PyInit__decimal@@Base+0x16888>  // b.hs, b.nlast
   2e4d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e4dc:	add	x0, x0, #0xdb0
   2e4e0:	ldr	x0, [x0, #88]
   2e4e4:	ldr	x1, [sp, #104]
   2e4e8:	cmp	x1, x0
   2e4ec:	b.cs	2e518 <PyInit__decimal@@Base+0x16840>  // b.hs, b.nlast
   2e4f0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e4f4:	add	x0, x0, #0xdb0
   2e4f8:	ldr	x0, [x0, #80]
   2e4fc:	ldr	x1, [sp, #104]
   2e500:	cmp	x1, x0
   2e504:	b.cs	2e510 <PyInit__decimal@@Base+0x16838>  // b.hs, b.nlast
   2e508:	mov	w0, #0xa                   	// #10
   2e50c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e510:	mov	w0, #0xb                   	// #11
   2e514:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e518:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e51c:	add	x0, x0, #0xdb0
   2e520:	ldr	x0, [x0, #104]
   2e524:	ldr	x1, [sp, #104]
   2e528:	cmp	x1, x0
   2e52c:	b.cs	2e558 <PyInit__decimal@@Base+0x16880>  // b.hs, b.nlast
   2e530:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e534:	add	x0, x0, #0xdb0
   2e538:	ldr	x0, [x0, #96]
   2e53c:	ldr	x1, [sp, #104]
   2e540:	cmp	x1, x0
   2e544:	b.cs	2e550 <PyInit__decimal@@Base+0x16878>  // b.hs, b.nlast
   2e548:	mov	w0, #0xc                   	// #12
   2e54c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e550:	mov	w0, #0xd                   	// #13
   2e554:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e558:	mov	w0, #0xe                   	// #14
   2e55c:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e560:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e564:	add	x0, x0, #0xdb0
   2e568:	ldr	x0, [x0, #144]
   2e56c:	ldr	x1, [sp, #104]
   2e570:	cmp	x1, x0
   2e574:	b.cs	2e5e0 <PyInit__decimal@@Base+0x16908>  // b.hs, b.nlast
   2e578:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e57c:	add	x0, x0, #0xdb0
   2e580:	ldr	x0, [x0, #128]
   2e584:	ldr	x1, [sp, #104]
   2e588:	cmp	x1, x0
   2e58c:	b.cs	2e5b8 <PyInit__decimal@@Base+0x168e0>  // b.hs, b.nlast
   2e590:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e594:	add	x0, x0, #0xdb0
   2e598:	ldr	x0, [x0, #120]
   2e59c:	ldr	x1, [sp, #104]
   2e5a0:	cmp	x1, x0
   2e5a4:	b.cs	2e5b0 <PyInit__decimal@@Base+0x168d8>  // b.hs, b.nlast
   2e5a8:	mov	w0, #0xf                   	// #15
   2e5ac:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e5b0:	mov	w0, #0x10                  	// #16
   2e5b4:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e5b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e5bc:	add	x0, x0, #0xdb0
   2e5c0:	ldr	x0, [x0, #136]
   2e5c4:	ldr	x1, [sp, #104]
   2e5c8:	cmp	x1, x0
   2e5cc:	b.cs	2e5d8 <PyInit__decimal@@Base+0x16900>  // b.hs, b.nlast
   2e5d0:	mov	w0, #0x11                  	// #17
   2e5d4:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e5d8:	mov	w0, #0x12                  	// #18
   2e5dc:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e5e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e5e4:	add	x0, x0, #0xdb0
   2e5e8:	ldr	x0, [x0, #152]
   2e5ec:	ldr	x1, [sp, #104]
   2e5f0:	cmp	x1, x0
   2e5f4:	b.cs	2e600 <PyInit__decimal@@Base+0x16928>  // b.hs, b.nlast
   2e5f8:	mov	w0, #0x13                  	// #19
   2e5fc:	b	2e604 <PyInit__decimal@@Base+0x1692c>
   2e600:	mov	w0, #0x14                  	// #20
   2e604:	str	w0, [sp, #196]
   2e608:	str	wzr, [sp, #212]
   2e60c:	b	2e6f0 <PyInit__decimal@@Base+0x16a18>
   2e610:	ldr	x1, [sp, #232]
   2e614:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e618:	movk	x0, #0xcccd
   2e61c:	umulh	x0, x1, x0
   2e620:	lsr	x2, x0, #3
   2e624:	mov	x0, x2
   2e628:	lsl	x0, x0, #2
   2e62c:	add	x0, x0, x2
   2e630:	lsl	x0, x0, #1
   2e634:	sub	x0, x1, x0
   2e638:	str	x0, [sp, #176]
   2e63c:	ldr	x1, [sp, #232]
   2e640:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e644:	movk	x0, #0xcccd
   2e648:	umulh	x0, x1, x0
   2e64c:	lsr	x0, x0, #3
   2e650:	str	x0, [sp, #232]
   2e654:	ldr	x1, [sp, #224]
   2e658:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e65c:	movk	x0, #0xcccd
   2e660:	umulh	x0, x1, x0
   2e664:	lsr	x2, x0, #3
   2e668:	mov	x0, x2
   2e66c:	lsl	x0, x0, #2
   2e670:	add	x0, x0, x2
   2e674:	lsl	x0, x0, #1
   2e678:	sub	x0, x1, x0
   2e67c:	str	x0, [sp, #184]
   2e680:	ldr	x1, [sp, #224]
   2e684:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e688:	movk	x0, #0xcccd
   2e68c:	umulh	x0, x1, x0
   2e690:	lsr	x0, x0, #3
   2e694:	str	x0, [sp, #224]
   2e698:	ldr	x0, [sp, #176]
   2e69c:	cmp	x0, #0x1
   2e6a0:	b.hi	2e9bc <PyInit__decimal@@Base+0x16ce4>  // b.pmore
   2e6a4:	ldr	x0, [sp, #184]
   2e6a8:	cmp	x0, #0x1
   2e6ac:	b.hi	2e9bc <PyInit__decimal@@Base+0x16ce4>  // b.pmore
   2e6b0:	ldr	x1, [sp, #176]
   2e6b4:	ldr	x0, [sp, #184]
   2e6b8:	cmp	x1, x0
   2e6bc:	b.eq	2e6d4 <PyInit__decimal@@Base+0x169fc>  // b.none
   2e6c0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e6c4:	add	x0, x0, #0xdb0
   2e6c8:	ldrsw	x1, [sp, #212]
   2e6cc:	ldr	x0, [x0, x1, lsl #3]
   2e6d0:	b	2e6d8 <PyInit__decimal@@Base+0x16a00>
   2e6d4:	mov	x0, #0x0                   	// #0
   2e6d8:	ldr	x1, [sp, #216]
   2e6dc:	add	x0, x1, x0
   2e6e0:	str	x0, [sp, #216]
   2e6e4:	ldr	w0, [sp, #212]
   2e6e8:	add	w0, w0, #0x1
   2e6ec:	str	w0, [sp, #212]
   2e6f0:	ldr	w1, [sp, #212]
   2e6f4:	ldr	w0, [sp, #196]
   2e6f8:	cmp	w1, w0
   2e6fc:	b.lt	2e610 <PyInit__decimal@@Base+0x16938>  // b.tstop
   2e700:	b	2e784 <PyInit__decimal@@Base+0x16aac>
   2e704:	ldr	x1, [sp, #224]
   2e708:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e70c:	movk	x0, #0xcccd
   2e710:	umulh	x0, x1, x0
   2e714:	lsr	x2, x0, #3
   2e718:	mov	x0, x2
   2e71c:	lsl	x0, x0, #2
   2e720:	add	x0, x0, x2
   2e724:	lsl	x0, x0, #1
   2e728:	sub	x0, x1, x0
   2e72c:	str	x0, [sp, #184]
   2e730:	ldr	x1, [sp, #224]
   2e734:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e738:	movk	x0, #0xcccd
   2e73c:	umulh	x0, x1, x0
   2e740:	lsr	x0, x0, #3
   2e744:	str	x0, [sp, #224]
   2e748:	ldr	x0, [sp, #184]
   2e74c:	cmp	x0, #0x1
   2e750:	b.hi	2e9c4 <PyInit__decimal@@Base+0x16cec>  // b.pmore
   2e754:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   2e758:	add	x0, x0, #0xdb0
   2e75c:	ldrsw	x1, [sp, #212]
   2e760:	ldr	x1, [x0, x1, lsl #3]
   2e764:	ldr	x0, [sp, #184]
   2e768:	mul	x0, x1, x0
   2e76c:	ldr	x1, [sp, #216]
   2e770:	add	x0, x1, x0
   2e774:	str	x0, [sp, #216]
   2e778:	ldr	w0, [sp, #212]
   2e77c:	add	w0, w0, #0x1
   2e780:	str	w0, [sp, #212]
   2e784:	ldr	w0, [sp, #212]
   2e788:	cmp	w0, #0x12
   2e78c:	b.le	2e704 <PyInit__decimal@@Base+0x16a2c>
   2e790:	ldr	x0, [sp, #56]
   2e794:	ldr	x1, [x0, #40]
   2e798:	ldr	x0, [sp, #200]
   2e79c:	add	x2, x0, #0x1
   2e7a0:	str	x2, [sp, #200]
   2e7a4:	lsl	x0, x0, #3
   2e7a8:	add	x0, x1, x0
   2e7ac:	ldr	x1, [sp, #216]
   2e7b0:	str	x1, [x0]
   2e7b4:	b	2e880 <PyInit__decimal@@Base+0x16ba8>
   2e7b8:	ldr	x0, [sp, #248]
   2e7bc:	ldr	x1, [x0, #40]
   2e7c0:	ldr	x0, [sp, #200]
   2e7c4:	lsl	x0, x0, #3
   2e7c8:	add	x0, x1, x0
   2e7cc:	ldr	x0, [x0]
   2e7d0:	str	x0, [sp, #224]
   2e7d4:	str	wzr, [sp, #212]
   2e7d8:	b	2e838 <PyInit__decimal@@Base+0x16b60>
   2e7dc:	ldr	x1, [sp, #224]
   2e7e0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e7e4:	movk	x0, #0xcccd
   2e7e8:	umulh	x0, x1, x0
   2e7ec:	lsr	x2, x0, #3
   2e7f0:	mov	x0, x2
   2e7f4:	lsl	x0, x0, #2
   2e7f8:	add	x0, x0, x2
   2e7fc:	lsl	x0, x0, #1
   2e800:	sub	x0, x1, x0
   2e804:	str	x0, [sp, #184]
   2e808:	ldr	x1, [sp, #224]
   2e80c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2e810:	movk	x0, #0xcccd
   2e814:	umulh	x0, x1, x0
   2e818:	lsr	x0, x0, #3
   2e81c:	str	x0, [sp, #224]
   2e820:	ldr	x0, [sp, #184]
   2e824:	cmp	x0, #0x1
   2e828:	b.hi	2e9cc <PyInit__decimal@@Base+0x16cf4>  // b.pmore
   2e82c:	ldr	w0, [sp, #212]
   2e830:	add	w0, w0, #0x1
   2e834:	str	w0, [sp, #212]
   2e838:	ldr	w0, [sp, #212]
   2e83c:	cmp	w0, #0x12
   2e840:	b.le	2e7dc <PyInit__decimal@@Base+0x16b04>
   2e844:	ldr	x0, [sp, #248]
   2e848:	ldr	x1, [x0, #40]
   2e84c:	ldr	x0, [sp, #200]
   2e850:	lsl	x0, x0, #3
   2e854:	add	x1, x1, x0
   2e858:	ldr	x0, [sp, #56]
   2e85c:	ldr	x2, [x0, #40]
   2e860:	ldr	x0, [sp, #200]
   2e864:	lsl	x0, x0, #3
   2e868:	add	x0, x2, x0
   2e86c:	ldr	x1, [x1]
   2e870:	str	x1, [x0]
   2e874:	ldr	x0, [sp, #200]
   2e878:	add	x0, x0, #0x1
   2e87c:	str	x0, [sp, #200]
   2e880:	ldr	x0, [sp, #248]
   2e884:	ldr	x0, [x0, #24]
   2e888:	ldr	x1, [sp, #200]
   2e88c:	cmp	x1, x0
   2e890:	b.lt	2e7b8 <PyInit__decimal@@Base+0x16ae0>  // b.tstop
   2e894:	ldr	x0, [sp, #56]
   2e898:	str	x0, [sp, #64]
   2e89c:	ldr	x0, [sp, #64]
   2e8a0:	ldrb	w0, [x0]
   2e8a4:	and	w0, w0, #0xfffffff0
   2e8a8:	and	w1, w0, #0xff
   2e8ac:	ldr	x0, [sp, #64]
   2e8b0:	strb	w1, [x0]
   2e8b4:	nop
   2e8b8:	ldr	x0, [sp, #56]
   2e8bc:	str	xzr, [x0, #8]
   2e8c0:	ldr	x0, [sp, #56]
   2e8c4:	ldr	x2, [x0, #40]
   2e8c8:	ldr	x0, [sp, #248]
   2e8cc:	ldr	x0, [x0, #24]
   2e8d0:	mov	x1, x0
   2e8d4:	mov	x0, x2
   2e8d8:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   2e8dc:	mov	x1, x0
   2e8e0:	ldr	x0, [sp, #56]
   2e8e4:	str	x1, [x0, #24]
   2e8e8:	ldr	x0, [sp, #56]
   2e8ec:	ldr	x0, [x0, #24]
   2e8f0:	ldr	x1, [sp, #56]
   2e8f4:	str	x1, [sp, #96]
   2e8f8:	str	x0, [sp, #88]
   2e8fc:	ldr	x0, [sp, #24]
   2e900:	str	x0, [sp, #80]
   2e904:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2e908:	add	x0, x0, #0x6d8
   2e90c:	ldr	x0, [x0]
   2e910:	ldr	x2, [sp, #88]
   2e914:	ldr	x1, [sp, #88]
   2e918:	cmp	x2, x0
   2e91c:	csel	x0, x1, x0, ge  // ge = tcont
   2e920:	str	x0, [sp, #88]
   2e924:	ldr	x0, [sp, #96]
   2e928:	ldr	x0, [x0, #32]
   2e92c:	ldr	x1, [sp, #88]
   2e930:	cmp	x1, x0
   2e934:	b.eq	2e990 <PyInit__decimal@@Base+0x16cb8>  // b.none
   2e938:	ldr	x0, [sp, #96]
   2e93c:	str	x0, [sp, #72]
   2e940:	ldr	x0, [sp, #72]
   2e944:	ldrb	w0, [x0]
   2e948:	and	w0, w0, #0x20
   2e94c:	cmp	w0, #0x0
   2e950:	b.eq	2e97c <PyInit__decimal@@Base+0x16ca4>  // b.none
   2e954:	ldr	x0, [sp, #96]
   2e958:	ldr	x0, [x0, #32]
   2e95c:	ldr	x1, [sp, #88]
   2e960:	cmp	x1, x0
   2e964:	b.le	2e998 <PyInit__decimal@@Base+0x16cc0>
   2e968:	ldr	x2, [sp, #80]
   2e96c:	ldr	x1, [sp, #88]
   2e970:	ldr	x0, [sp, #96]
   2e974:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2e978:	b	2e99c <PyInit__decimal@@Base+0x16cc4>
   2e97c:	ldr	x2, [sp, #80]
   2e980:	ldr	x1, [sp, #88]
   2e984:	ldr	x0, [sp, #96]
   2e988:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2e98c:	b	2e99c <PyInit__decimal@@Base+0x16cc4>
   2e990:	nop
   2e994:	b	2e99c <PyInit__decimal@@Base+0x16cc4>
   2e998:	nop
   2e99c:	ldr	x0, [sp, #56]
   2e9a0:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2e9a4:	ldr	x1, [sp, #32]
   2e9a8:	ldr	x0, [sp, #56]
   2e9ac:	bl	26784 <PyInit__decimal@@Base+0xeaac>
   2e9b0:	b	2e9e8 <PyInit__decimal@@Base+0x16d10>
   2e9b4:	nop
   2e9b8:	b	2e9d0 <PyInit__decimal@@Base+0x16cf8>
   2e9bc:	nop
   2e9c0:	b	2e9d0 <PyInit__decimal@@Base+0x16cf8>
   2e9c4:	nop
   2e9c8:	b	2e9d0 <PyInit__decimal@@Base+0x16cf8>
   2e9cc:	nop
   2e9d0:	ldr	x2, [sp, #24]
   2e9d4:	mov	w1, #0x100                 	// #256
   2e9d8:	ldr	x0, [sp, #56]
   2e9dc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2e9e0:	b	2e9e8 <PyInit__decimal@@Base+0x16d10>
   2e9e4:	nop
   2e9e8:	ldp	x29, x30, [sp], #256
   2e9ec:	ret
   2e9f0:	stp	x29, x30, [sp, #-64]!
   2e9f4:	mov	x29, sp
   2e9f8:	str	x0, [sp, #40]
   2e9fc:	str	x1, [sp, #32]
   2ea00:	str	x2, [sp, #24]
   2ea04:	str	x3, [sp, #16]
   2ea08:	ldr	x0, [sp, #32]
   2ea0c:	str	x0, [sp, #56]
   2ea10:	ldr	x0, [sp, #56]
   2ea14:	ldrb	w0, [x0]
   2ea18:	and	w0, w0, #0xe
   2ea1c:	cmp	w0, #0x0
   2ea20:	b.eq	2ea40 <PyInit__decimal@@Base+0x16d68>  // b.none
   2ea24:	ldr	x3, [sp, #16]
   2ea28:	ldr	x2, [sp, #24]
   2ea2c:	ldr	x1, [sp, #32]
   2ea30:	ldr	x0, [sp, #40]
   2ea34:	bl	28540 <PyInit__decimal@@Base+0x10868>
   2ea38:	cmp	w0, #0x0
   2ea3c:	b.ne	2ea8c <PyInit__decimal@@Base+0x16db4>  // b.any
   2ea40:	ldr	x0, [sp, #32]
   2ea44:	str	x0, [sp, #48]
   2ea48:	ldr	x0, [sp, #48]
   2ea4c:	ldrb	w0, [x0]
   2ea50:	and	w0, w0, #0x1
   2ea54:	cmp	w0, #0x0
   2ea58:	b.eq	2ea74 <PyInit__decimal@@Base+0x16d9c>  // b.none
   2ea5c:	ldr	x3, [sp, #16]
   2ea60:	ldr	x2, [sp, #24]
   2ea64:	ldr	x1, [sp, #32]
   2ea68:	ldr	x0, [sp, #40]
   2ea6c:	bl	371dc <PyInit__decimal@@Base+0x1f504>
   2ea70:	b	2ea90 <PyInit__decimal@@Base+0x16db8>
   2ea74:	ldr	x3, [sp, #16]
   2ea78:	ldr	x2, [sp, #24]
   2ea7c:	ldr	x1, [sp, #32]
   2ea80:	ldr	x0, [sp, #40]
   2ea84:	bl	372e8 <PyInit__decimal@@Base+0x1f610>
   2ea88:	b	2ea90 <PyInit__decimal@@Base+0x16db8>
   2ea8c:	nop
   2ea90:	ldp	x29, x30, [sp], #64
   2ea94:	ret
   2ea98:	sub	sp, sp, #0x20
   2ea9c:	str	x0, [sp, #8]
   2eaa0:	str	x1, [sp]
   2eaa4:	ldr	x0, [sp, #8]
   2eaa8:	ldr	x0, [x0]
   2eaac:	str	x0, [sp, #24]
   2eab0:	ldr	x0, [sp]
   2eab4:	ldr	x1, [x0]
   2eab8:	ldr	x0, [sp, #8]
   2eabc:	str	x1, [x0]
   2eac0:	ldr	x0, [sp]
   2eac4:	ldr	x1, [sp, #24]
   2eac8:	str	x1, [x0]
   2eacc:	nop
   2ead0:	add	sp, sp, #0x20
   2ead4:	ret
   2ead8:	stp	x29, x30, [sp, #-96]!
   2eadc:	mov	x29, sp
   2eae0:	str	x0, [sp, #56]
   2eae4:	str	x1, [sp, #48]
   2eae8:	str	x2, [sp, #40]
   2eaec:	strb	w3, [sp, #39]
   2eaf0:	str	x4, [sp, #24]
   2eaf4:	ldr	x0, [sp, #48]
   2eaf8:	str	x0, [sp, #88]
   2eafc:	ldr	x0, [sp, #88]
   2eb00:	ldrb	w0, [x0]
   2eb04:	and	w0, w0, #0x2
   2eb08:	cmp	w0, #0x0
   2eb0c:	b.eq	2eb90 <PyInit__decimal@@Base+0x16eb8>  // b.none
   2eb10:	ldr	x0, [sp, #48]
   2eb14:	str	x0, [sp, #80]
   2eb18:	ldr	x0, [sp, #80]
   2eb1c:	ldrb	w0, [x0]
   2eb20:	and	w0, w0, #0x1
   2eb24:	and	w0, w0, #0xff
   2eb28:	ldrb	w1, [sp, #39]
   2eb2c:	cmp	w1, w0
   2eb30:	b.eq	2eb64 <PyInit__decimal@@Base+0x16e8c>  // b.none
   2eb34:	ldr	x0, [sp, #40]
   2eb38:	str	x0, [sp, #72]
   2eb3c:	ldr	x0, [sp, #72]
   2eb40:	ldrb	w0, [x0]
   2eb44:	and	w0, w0, #0x2
   2eb48:	cmp	w0, #0x0
   2eb4c:	b.eq	2eb64 <PyInit__decimal@@Base+0x16e8c>  // b.none
   2eb50:	ldr	x2, [sp, #24]
   2eb54:	mov	w1, #0x100                 	// #256
   2eb58:	ldr	x0, [sp, #56]
   2eb5c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2eb60:	b	2eba0 <PyInit__decimal@@Base+0x16ec8>
   2eb64:	ldr	x0, [sp, #48]
   2eb68:	str	x0, [sp, #64]
   2eb6c:	ldr	x0, [sp, #64]
   2eb70:	ldrb	w0, [x0]
   2eb74:	and	w0, w0, #0x1
   2eb78:	and	w0, w0, #0xff
   2eb7c:	mov	w2, #0x2                   	// #2
   2eb80:	mov	w1, w0
   2eb84:	ldr	x0, [sp, #56]
   2eb88:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   2eb8c:	b	2eba0 <PyInit__decimal@@Base+0x16ec8>
   2eb90:	mov	w2, #0x2                   	// #2
   2eb94:	ldrb	w1, [sp, #39]
   2eb98:	ldr	x0, [sp, #56]
   2eb9c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   2eba0:	ldp	x29, x30, [sp], #96
   2eba4:	ret
   2eba8:	sub	sp, sp, #0x3f0
   2ebac:	stp	x29, x30, [sp]
   2ebb0:	mov	x29, sp
   2ebb4:	str	x0, [sp, #56]
   2ebb8:	str	x1, [sp, #48]
   2ebbc:	str	x2, [sp, #40]
   2ebc0:	strb	w3, [sp, #39]
   2ebc4:	str	x4, [sp, #24]
   2ebc8:	str	x5, [sp, #16]
   2ebcc:	mov	w0, #0x30                  	// #48
   2ebd0:	strb	w0, [sp, #120]
   2ebd4:	str	xzr, [sp, #128]
   2ebd8:	str	xzr, [sp, #136]
   2ebdc:	str	xzr, [sp, #144]
   2ebe0:	mov	x0, #0x40                  	// #64
   2ebe4:	str	x0, [sp, #152]
   2ebe8:	add	x0, sp, #0xa8
   2ebec:	str	x0, [sp, #160]
   2ebf0:	mov	x0, #0x1                   	// #1
   2ebf4:	str	x0, [sp, #112]
   2ebf8:	mov	w0, #0xffffff90            	// #-112
   2ebfc:	strb	w0, [sp, #64]
   2ec00:	str	xzr, [sp, #72]
   2ec04:	mov	x0, #0x1                   	// #1
   2ec08:	str	x0, [sp, #80]
   2ec0c:	mov	x0, #0x1                   	// #1
   2ec10:	str	x0, [sp, #88]
   2ec14:	mov	x0, #0x1                   	// #1
   2ec18:	str	x0, [sp, #96]
   2ec1c:	add	x0, sp, #0x70
   2ec20:	str	x0, [sp, #104]
   2ec24:	str	wzr, [sp, #988]
   2ec28:	ldr	x0, [sp, #48]
   2ec2c:	str	x0, [sp, #688]
   2ec30:	ldr	x0, [sp, #40]
   2ec34:	str	x0, [sp, #680]
   2ec38:	ldr	x0, [sp, #688]
   2ec3c:	ldr	x1, [x0, #8]
   2ec40:	ldr	x0, [sp, #680]
   2ec44:	ldr	x0, [x0, #8]
   2ec48:	cmp	x1, x0
   2ec4c:	b.eq	2ee6c <PyInit__decimal@@Base+0x17194>  // b.none
   2ec50:	ldr	x0, [sp, #680]
   2ec54:	ldr	x1, [x0, #8]
   2ec58:	ldr	x0, [sp, #688]
   2ec5c:	ldr	x0, [x0, #8]
   2ec60:	cmp	x1, x0
   2ec64:	b.le	2ec80 <PyInit__decimal@@Base+0x16fa8>
   2ec68:	add	x1, sp, #0x2a8
   2ec6c:	add	x0, sp, #0x2b0
   2ec70:	bl	2ea98 <PyInit__decimal@@Base+0x16dc0>
   2ec74:	ldr	w0, [sp, #988]
   2ec78:	add	w0, w0, #0x1
   2ec7c:	str	w0, [sp, #988]
   2ec80:	ldr	x0, [sp, #688]
   2ec84:	str	x0, [sp, #952]
   2ec88:	ldr	x0, [sp, #952]
   2ec8c:	str	x0, [sp, #944]
   2ec90:	ldr	x0, [sp, #944]
   2ec94:	ldr	x1, [x0, #40]
   2ec98:	ldr	x0, [sp, #944]
   2ec9c:	ldr	x0, [x0, #24]
   2eca0:	lsl	x0, x0, #3
   2eca4:	sub	x0, x0, #0x8
   2eca8:	add	x0, x1, x0
   2ecac:	ldr	x0, [x0]
   2ecb0:	cmp	x0, #0x0
   2ecb4:	cset	w0, eq  // eq = none
   2ecb8:	and	w0, w0, #0xff
   2ecbc:	cmp	w0, #0x0
   2ecc0:	b.ne	2ee6c <PyInit__decimal@@Base+0x17194>  // b.any
   2ecc4:	ldr	x0, [sp, #688]
   2ecc8:	ldr	x0, [x0, #8]
   2eccc:	sub	x0, x0, #0x1
   2ecd0:	str	x0, [sp, #976]
   2ecd4:	ldr	x0, [sp, #688]
   2ecd8:	ldr	x1, [x0, #16]
   2ecdc:	ldr	x0, [sp, #24]
   2ece0:	ldr	x0, [x0]
   2ece4:	cmp	x1, x0
   2ece8:	b.gt	2ed08 <PyInit__decimal@@Base+0x17030>
   2ecec:	ldr	x0, [sp, #688]
   2ecf0:	ldr	x1, [x0, #16]
   2ecf4:	ldr	x0, [sp, #24]
   2ecf8:	ldr	x0, [x0]
   2ecfc:	sub	x0, x1, x0
   2ed00:	sub	x0, x0, #0x1
   2ed04:	b	2ed0c <PyInit__decimal@@Base+0x17034>
   2ed08:	mov	x0, #0x0                   	// #0
   2ed0c:	ldr	x1, [sp, #976]
   2ed10:	add	x0, x1, x0
   2ed14:	str	x0, [sp, #976]
   2ed18:	ldr	x0, [sp, #680]
   2ed1c:	str	x0, [sp, #936]
   2ed20:	ldr	x0, [sp, #936]
   2ed24:	ldr	x1, [x0, #8]
   2ed28:	ldr	x0, [sp, #936]
   2ed2c:	ldr	x0, [x0, #16]
   2ed30:	add	x0, x1, x0
   2ed34:	sub	x0, x0, #0x1
   2ed38:	ldr	x1, [sp, #976]
   2ed3c:	cmp	x1, x0
   2ed40:	b.le	2ee1c <PyInit__decimal@@Base+0x17144>
   2ed44:	ldr	x0, [sp, #680]
   2ed48:	add	x1, sp, #0x40
   2ed4c:	str	x1, [sp, #912]
   2ed50:	str	x0, [sp, #904]
   2ed54:	ldr	x0, [sp, #904]
   2ed58:	ldrb	w0, [x0]
   2ed5c:	strb	w0, [sp, #903]
   2ed60:	ldr	x0, [sp, #912]
   2ed64:	ldrb	w0, [x0]
   2ed68:	and	w0, w0, #0xfffffff0
   2ed6c:	and	w1, w0, #0xff
   2ed70:	ldr	x0, [sp, #912]
   2ed74:	strb	w1, [x0]
   2ed78:	ldr	x0, [sp, #912]
   2ed7c:	ldrb	w0, [x0]
   2ed80:	sxtb	w1, w0
   2ed84:	ldrsb	w0, [sp, #903]
   2ed88:	and	w0, w0, #0xf
   2ed8c:	sxtb	w0, w0
   2ed90:	orr	w0, w1, w0
   2ed94:	sxtb	w0, w0
   2ed98:	and	w1, w0, #0xff
   2ed9c:	ldr	x0, [sp, #912]
   2eda0:	strb	w1, [x0]
   2eda4:	nop
   2eda8:	ldr	x0, [sp, #976]
   2edac:	str	x0, [sp, #72]
   2edb0:	mov	x0, #0x1                   	// #1
   2edb4:	str	x0, [sp, #80]
   2edb8:	mov	x0, #0x1                   	// #1
   2edbc:	str	x0, [sp, #88]
   2edc0:	ldr	x0, [sp, #680]
   2edc4:	str	x0, [sp, #928]
   2edc8:	ldr	x0, [sp, #928]
   2edcc:	str	x0, [sp, #920]
   2edd0:	ldr	x0, [sp, #920]
   2edd4:	ldr	x1, [x0, #40]
   2edd8:	ldr	x0, [sp, #920]
   2eddc:	ldr	x0, [x0, #24]
   2ede0:	lsl	x0, x0, #3
   2ede4:	sub	x0, x0, #0x8
   2ede8:	add	x0, x1, x0
   2edec:	ldr	x0, [x0]
   2edf0:	cmp	x0, #0x0
   2edf4:	cset	w0, eq  // eq = none
   2edf8:	and	w0, w0, #0xff
   2edfc:	cmp	w0, #0x0
   2ee00:	cset	w0, eq  // eq = none
   2ee04:	and	w1, w0, #0xff
   2ee08:	ldr	x0, [sp, #104]
   2ee0c:	and	x1, x1, #0xff
   2ee10:	str	x1, [x0]
   2ee14:	add	x0, sp, #0x40
   2ee18:	str	x0, [sp, #680]
   2ee1c:	ldr	x0, [sp, #688]
   2ee20:	ldr	x1, [x0, #8]
   2ee24:	ldr	x0, [sp, #680]
   2ee28:	ldr	x0, [x0, #8]
   2ee2c:	sub	x0, x1, x0
   2ee30:	str	x0, [sp, #968]
   2ee34:	ldr	x1, [sp, #688]
   2ee38:	add	x0, sp, #0x78
   2ee3c:	ldr	x3, [sp, #16]
   2ee40:	ldr	x2, [sp, #968]
   2ee44:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   2ee48:	cmp	w0, #0x0
   2ee4c:	b.ne	2ee64 <PyInit__decimal@@Base+0x1718c>  // b.any
   2ee50:	ldr	x2, [sp, #16]
   2ee54:	mov	w1, #0x200                 	// #512
   2ee58:	ldr	x0, [sp, #56]
   2ee5c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2ee60:	b	2f434 <PyInit__decimal@@Base+0x1775c>
   2ee64:	add	x0, sp, #0x78
   2ee68:	str	x0, [sp, #688]
   2ee6c:	ldr	x0, [sp, #680]
   2ee70:	ldr	x1, [x0, #8]
   2ee74:	ldr	x0, [sp, #56]
   2ee78:	str	x1, [x0, #8]
   2ee7c:	ldr	x0, [sp, #688]
   2ee80:	ldr	x1, [x0, #24]
   2ee84:	ldr	x0, [sp, #680]
   2ee88:	ldr	x0, [x0, #24]
   2ee8c:	cmp	x1, x0
   2ee90:	b.ge	2eeac <PyInit__decimal@@Base+0x171d4>  // b.tcont
   2ee94:	add	x1, sp, #0x2a8
   2ee98:	add	x0, sp, #0x2b0
   2ee9c:	bl	2ea98 <PyInit__decimal@@Base+0x16dc0>
   2eea0:	ldr	w0, [sp, #988]
   2eea4:	add	w0, w0, #0x1
   2eea8:	str	w0, [sp, #988]
   2eeac:	ldr	x0, [sp, #688]
   2eeb0:	ldr	x0, [x0, #24]
   2eeb4:	str	x0, [sp, #1000]
   2eeb8:	ldr	x0, [sp, #56]
   2eebc:	str	x0, [sp, #888]
   2eec0:	ldr	x0, [sp, #1000]
   2eec4:	str	x0, [sp, #880]
   2eec8:	ldr	x0, [sp, #16]
   2eecc:	str	x0, [sp, #872]
   2eed0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2eed4:	add	x0, x0, #0x6d8
   2eed8:	ldr	x0, [x0]
   2eedc:	ldr	x2, [sp, #880]
   2eee0:	ldr	x1, [sp, #880]
   2eee4:	cmp	x2, x0
   2eee8:	csel	x0, x1, x0, ge  // ge = tcont
   2eeec:	str	x0, [sp, #880]
   2eef0:	ldr	x0, [sp, #888]
   2eef4:	ldr	x0, [x0, #32]
   2eef8:	ldr	x1, [sp, #880]
   2eefc:	cmp	x1, x0
   2ef00:	b.ne	2ef0c <PyInit__decimal@@Base+0x17234>  // b.any
   2ef04:	mov	w0, #0x1                   	// #1
   2ef08:	b	2ef68 <PyInit__decimal@@Base+0x17290>
   2ef0c:	ldr	x0, [sp, #888]
   2ef10:	str	x0, [sp, #864]
   2ef14:	ldr	x0, [sp, #864]
   2ef18:	ldrb	w0, [x0]
   2ef1c:	and	w0, w0, #0x20
   2ef20:	cmp	w0, #0x0
   2ef24:	b.eq	2ef58 <PyInit__decimal@@Base+0x17280>  // b.none
   2ef28:	ldr	x0, [sp, #888]
   2ef2c:	ldr	x0, [x0, #32]
   2ef30:	ldr	x1, [sp, #880]
   2ef34:	cmp	x1, x0
   2ef38:	b.le	2ef50 <PyInit__decimal@@Base+0x17278>
   2ef3c:	ldr	x2, [sp, #872]
   2ef40:	ldr	x1, [sp, #880]
   2ef44:	ldr	x0, [sp, #888]
   2ef48:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2ef4c:	b	2ef68 <PyInit__decimal@@Base+0x17290>
   2ef50:	mov	w0, #0x1                   	// #1
   2ef54:	b	2ef68 <PyInit__decimal@@Base+0x17290>
   2ef58:	ldr	x2, [sp, #872]
   2ef5c:	ldr	x1, [sp, #880]
   2ef60:	ldr	x0, [sp, #888]
   2ef64:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2ef68:	cmp	w0, #0x0
   2ef6c:	b.eq	2f428 <PyInit__decimal@@Base+0x17750>  // b.none
   2ef70:	ldr	x0, [sp, #48]
   2ef74:	str	x0, [sp, #856]
   2ef78:	ldr	x0, [sp, #856]
   2ef7c:	ldrb	w0, [x0]
   2ef80:	and	w0, w0, #0x1
   2ef84:	and	w0, w0, #0xff
   2ef88:	ldrb	w1, [sp, #39]
   2ef8c:	cmp	w1, w0
   2ef90:	b.ne	2f118 <PyInit__decimal@@Base+0x17440>  // b.any
   2ef94:	ldr	x0, [sp, #56]
   2ef98:	ldr	x5, [x0, #40]
   2ef9c:	ldr	x0, [sp, #688]
   2efa0:	ldr	x1, [x0, #40]
   2efa4:	ldr	x0, [sp, #680]
   2efa8:	ldr	x2, [x0, #40]
   2efac:	ldr	x0, [sp, #688]
   2efb0:	ldr	x0, [x0, #24]
   2efb4:	mov	x3, x0
   2efb8:	ldr	x0, [sp, #680]
   2efbc:	ldr	x0, [x0, #24]
   2efc0:	mov	x4, x0
   2efc4:	mov	x0, x5
   2efc8:	bl	19afc <PyInit__decimal@@Base+0x1e24>
   2efcc:	str	x0, [sp, #960]
   2efd0:	ldr	x0, [sp, #960]
   2efd4:	cmp	x0, #0x0
   2efd8:	b.eq	2f0c4 <PyInit__decimal@@Base+0x173ec>  // b.none
   2efdc:	ldr	x0, [sp, #688]
   2efe0:	ldr	x0, [x0, #24]
   2efe4:	add	x0, x0, #0x1
   2efe8:	str	x0, [sp, #1000]
   2efec:	ldr	x0, [sp, #56]
   2eff0:	str	x0, [sp, #848]
   2eff4:	ldr	x0, [sp, #1000]
   2eff8:	str	x0, [sp, #840]
   2effc:	ldr	x0, [sp, #16]
   2f000:	str	x0, [sp, #832]
   2f004:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f008:	add	x0, x0, #0x6d8
   2f00c:	ldr	x0, [x0]
   2f010:	ldr	x2, [sp, #840]
   2f014:	ldr	x1, [sp, #840]
   2f018:	cmp	x2, x0
   2f01c:	csel	x0, x1, x0, ge  // ge = tcont
   2f020:	str	x0, [sp, #840]
   2f024:	ldr	x0, [sp, #848]
   2f028:	ldr	x0, [x0, #32]
   2f02c:	ldr	x1, [sp, #840]
   2f030:	cmp	x1, x0
   2f034:	b.ne	2f040 <PyInit__decimal@@Base+0x17368>  // b.any
   2f038:	mov	w0, #0x1                   	// #1
   2f03c:	b	2f09c <PyInit__decimal@@Base+0x173c4>
   2f040:	ldr	x0, [sp, #848]
   2f044:	str	x0, [sp, #824]
   2f048:	ldr	x0, [sp, #824]
   2f04c:	ldrb	w0, [x0]
   2f050:	and	w0, w0, #0x20
   2f054:	cmp	w0, #0x0
   2f058:	b.eq	2f08c <PyInit__decimal@@Base+0x173b4>  // b.none
   2f05c:	ldr	x0, [sp, #848]
   2f060:	ldr	x0, [x0, #32]
   2f064:	ldr	x1, [sp, #840]
   2f068:	cmp	x1, x0
   2f06c:	b.le	2f084 <PyInit__decimal@@Base+0x173ac>
   2f070:	ldr	x2, [sp, #832]
   2f074:	ldr	x1, [sp, #840]
   2f078:	ldr	x0, [sp, #848]
   2f07c:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2f080:	b	2f09c <PyInit__decimal@@Base+0x173c4>
   2f084:	mov	w0, #0x1                   	// #1
   2f088:	b	2f09c <PyInit__decimal@@Base+0x173c4>
   2f08c:	ldr	x2, [sp, #832]
   2f090:	ldr	x1, [sp, #840]
   2f094:	ldr	x0, [sp, #848]
   2f098:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2f09c:	cmp	w0, #0x0
   2f0a0:	b.eq	2f430 <PyInit__decimal@@Base+0x17758>  // b.none
   2f0a4:	ldr	x0, [sp, #56]
   2f0a8:	ldr	x1, [x0, #40]
   2f0ac:	ldr	x0, [sp, #1000]
   2f0b0:	lsl	x0, x0, #3
   2f0b4:	sub	x0, x0, #0x8
   2f0b8:	add	x0, x1, x0
   2f0bc:	ldr	x1, [sp, #960]
   2f0c0:	str	x1, [x0]
   2f0c4:	ldr	x0, [sp, #56]
   2f0c8:	ldr	x1, [sp, #1000]
   2f0cc:	str	x1, [x0, #24]
   2f0d0:	ldr	x0, [sp, #56]
   2f0d4:	str	x0, [sp, #816]
   2f0d8:	ldrb	w0, [sp, #39]
   2f0dc:	strb	w0, [sp, #815]
   2f0e0:	ldr	x0, [sp, #816]
   2f0e4:	ldrb	w0, [x0]
   2f0e8:	and	w0, w0, #0xfffffff0
   2f0ec:	and	w1, w0, #0xff
   2f0f0:	ldr	x0, [sp, #816]
   2f0f4:	strb	w1, [x0]
   2f0f8:	ldr	x0, [sp, #816]
   2f0fc:	ldrb	w1, [x0]
   2f100:	ldrb	w0, [sp, #815]
   2f104:	orr	w0, w1, w0
   2f108:	and	w1, w0, #0xff
   2f10c:	ldr	x0, [sp, #816]
   2f110:	strb	w1, [x0]
   2f114:	b	2f41c <PyInit__decimal@@Base+0x17744>
   2f118:	ldr	x0, [sp, #688]
   2f11c:	ldr	x1, [x0, #24]
   2f120:	ldr	x0, [sp, #680]
   2f124:	ldr	x0, [x0, #24]
   2f128:	cmp	x1, x0
   2f12c:	b.ne	2f1f0 <PyInit__decimal@@Base+0x17518>  // b.any
   2f130:	ldr	x0, [sp, #688]
   2f134:	ldr	x0, [x0, #24]
   2f138:	sub	x0, x0, #0x1
   2f13c:	str	x0, [sp, #992]
   2f140:	b	2f1dc <PyInit__decimal@@Base+0x17504>
   2f144:	ldr	x0, [sp, #688]
   2f148:	ldr	x1, [x0, #40]
   2f14c:	ldr	x0, [sp, #992]
   2f150:	lsl	x0, x0, #3
   2f154:	add	x0, x1, x0
   2f158:	ldr	x1, [x0]
   2f15c:	ldr	x0, [sp, #680]
   2f160:	ldr	x2, [x0, #40]
   2f164:	ldr	x0, [sp, #992]
   2f168:	lsl	x0, x0, #3
   2f16c:	add	x0, x2, x0
   2f170:	ldr	x0, [x0]
   2f174:	cmp	x1, x0
   2f178:	b.eq	2f1d0 <PyInit__decimal@@Base+0x174f8>  // b.none
   2f17c:	ldr	x0, [sp, #688]
   2f180:	ldr	x1, [x0, #40]
   2f184:	ldr	x0, [sp, #992]
   2f188:	lsl	x0, x0, #3
   2f18c:	add	x0, x1, x0
   2f190:	ldr	x1, [x0]
   2f194:	ldr	x0, [sp, #680]
   2f198:	ldr	x2, [x0, #40]
   2f19c:	ldr	x0, [sp, #992]
   2f1a0:	lsl	x0, x0, #3
   2f1a4:	add	x0, x2, x0
   2f1a8:	ldr	x0, [x0]
   2f1ac:	cmp	x1, x0
   2f1b0:	b.cs	2f1ec <PyInit__decimal@@Base+0x17514>  // b.hs, b.nlast
   2f1b4:	add	x1, sp, #0x2a8
   2f1b8:	add	x0, sp, #0x2b0
   2f1bc:	bl	2ea98 <PyInit__decimal@@Base+0x16dc0>
   2f1c0:	ldr	w0, [sp, #988]
   2f1c4:	add	w0, w0, #0x1
   2f1c8:	str	w0, [sp, #988]
   2f1cc:	b	2f1ec <PyInit__decimal@@Base+0x17514>
   2f1d0:	ldr	x0, [sp, #992]
   2f1d4:	sub	x0, x0, #0x1
   2f1d8:	str	x0, [sp, #992]
   2f1dc:	ldr	x0, [sp, #992]
   2f1e0:	cmp	x0, #0x0
   2f1e4:	b.ge	2f144 <PyInit__decimal@@Base+0x1746c>  // b.tcont
   2f1e8:	b	2f1f0 <PyInit__decimal@@Base+0x17518>
   2f1ec:	nop
   2f1f0:	ldr	x0, [sp, #56]
   2f1f4:	ldr	x5, [x0, #40]
   2f1f8:	ldr	x0, [sp, #688]
   2f1fc:	ldr	x1, [x0, #40]
   2f200:	ldr	x0, [sp, #680]
   2f204:	ldr	x2, [x0, #40]
   2f208:	ldr	x0, [sp, #688]
   2f20c:	ldr	x0, [x0, #24]
   2f210:	mov	x3, x0
   2f214:	ldr	x0, [sp, #680]
   2f218:	ldr	x0, [x0, #24]
   2f21c:	mov	x4, x0
   2f220:	mov	x0, x5
   2f224:	bl	1a098 <PyInit__decimal@@Base+0x23c0>
   2f228:	ldr	x0, [sp, #56]
   2f22c:	ldr	x2, [x0, #40]
   2f230:	ldr	x0, [sp, #688]
   2f234:	ldr	x0, [x0, #24]
   2f238:	mov	x1, x0
   2f23c:	mov	x0, x2
   2f240:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   2f244:	str	x0, [sp, #1000]
   2f248:	ldr	x0, [sp, #56]
   2f24c:	str	x0, [sp, #800]
   2f250:	ldr	x0, [sp, #1000]
   2f254:	str	x0, [sp, #792]
   2f258:	ldr	x0, [sp, #16]
   2f25c:	str	x0, [sp, #784]
   2f260:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f264:	add	x0, x0, #0x6d8
   2f268:	ldr	x0, [x0]
   2f26c:	ldr	x2, [sp, #792]
   2f270:	ldr	x1, [sp, #792]
   2f274:	cmp	x2, x0
   2f278:	csel	x0, x1, x0, ge  // ge = tcont
   2f27c:	str	x0, [sp, #792]
   2f280:	ldr	x0, [sp, #800]
   2f284:	ldr	x0, [x0, #32]
   2f288:	ldr	x1, [sp, #792]
   2f28c:	cmp	x1, x0
   2f290:	b.eq	2f2ec <PyInit__decimal@@Base+0x17614>  // b.none
   2f294:	ldr	x0, [sp, #800]
   2f298:	str	x0, [sp, #776]
   2f29c:	ldr	x0, [sp, #776]
   2f2a0:	ldrb	w0, [x0]
   2f2a4:	and	w0, w0, #0x20
   2f2a8:	cmp	w0, #0x0
   2f2ac:	b.eq	2f2d8 <PyInit__decimal@@Base+0x17600>  // b.none
   2f2b0:	ldr	x0, [sp, #800]
   2f2b4:	ldr	x0, [x0, #32]
   2f2b8:	ldr	x1, [sp, #792]
   2f2bc:	cmp	x1, x0
   2f2c0:	b.le	2f2f4 <PyInit__decimal@@Base+0x1761c>
   2f2c4:	ldr	x2, [sp, #784]
   2f2c8:	ldr	x1, [sp, #792]
   2f2cc:	ldr	x0, [sp, #800]
   2f2d0:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   2f2d4:	b	2f2f8 <PyInit__decimal@@Base+0x17620>
   2f2d8:	ldr	x2, [sp, #784]
   2f2dc:	ldr	x1, [sp, #792]
   2f2e0:	ldr	x0, [sp, #800]
   2f2e4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   2f2e8:	b	2f2f8 <PyInit__decimal@@Base+0x17620>
   2f2ec:	nop
   2f2f0:	b	2f2f8 <PyInit__decimal@@Base+0x17620>
   2f2f4:	nop
   2f2f8:	ldr	x0, [sp, #56]
   2f2fc:	ldr	x1, [sp, #1000]
   2f300:	str	x1, [x0, #24]
   2f304:	ldr	w0, [sp, #988]
   2f308:	and	w0, w0, #0x1
   2f30c:	cmp	w0, #0x0
   2f310:	b.ne	2f330 <PyInit__decimal@@Base+0x17658>  // b.any
   2f314:	ldr	x0, [sp, #48]
   2f318:	str	x0, [sp, #768]
   2f31c:	ldr	x0, [sp, #768]
   2f320:	ldrb	w0, [x0]
   2f324:	and	w0, w0, #0x1
   2f328:	and	w0, w0, #0xff
   2f32c:	b	2f334 <PyInit__decimal@@Base+0x1765c>
   2f330:	ldrb	w0, [sp, #39]
   2f334:	strb	w0, [sp, #39]
   2f338:	ldr	x0, [sp, #56]
   2f33c:	str	x0, [sp, #744]
   2f340:	ldrb	w0, [sp, #39]
   2f344:	strb	w0, [sp, #743]
   2f348:	ldr	x0, [sp, #744]
   2f34c:	ldrb	w0, [x0]
   2f350:	and	w0, w0, #0xfffffff0
   2f354:	and	w1, w0, #0xff
   2f358:	ldr	x0, [sp, #744]
   2f35c:	strb	w1, [x0]
   2f360:	ldr	x0, [sp, #744]
   2f364:	ldrb	w1, [x0]
   2f368:	ldrb	w0, [sp, #743]
   2f36c:	orr	w0, w1, w0
   2f370:	and	w1, w0, #0xff
   2f374:	ldr	x0, [sp, #744]
   2f378:	strb	w1, [x0]
   2f37c:	nop
   2f380:	ldr	x0, [sp, #56]
   2f384:	str	x0, [sp, #760]
   2f388:	ldr	x0, [sp, #760]
   2f38c:	str	x0, [sp, #752]
   2f390:	ldr	x0, [sp, #752]
   2f394:	ldr	x1, [x0, #40]
   2f398:	ldr	x0, [sp, #752]
   2f39c:	ldr	x0, [x0, #24]
   2f3a0:	lsl	x0, x0, #3
   2f3a4:	sub	x0, x0, #0x8
   2f3a8:	add	x0, x1, x0
   2f3ac:	ldr	x0, [x0]
   2f3b0:	cmp	x0, #0x0
   2f3b4:	cset	w0, eq  // eq = none
   2f3b8:	and	w0, w0, #0xff
   2f3bc:	cmp	w0, #0x0
   2f3c0:	b.eq	2f41c <PyInit__decimal@@Base+0x17744>  // b.none
   2f3c4:	ldr	x0, [sp, #56]
   2f3c8:	str	x0, [sp, #728]
   2f3cc:	ldr	x0, [sp, #728]
   2f3d0:	ldrb	w0, [x0]
   2f3d4:	and	w0, w0, #0xfffffffe
   2f3d8:	and	w1, w0, #0xff
   2f3dc:	ldr	x0, [sp, #728]
   2f3e0:	strb	w1, [x0]
   2f3e4:	nop
   2f3e8:	ldr	x0, [sp, #24]
   2f3ec:	ldr	w0, [x0, #36]
   2f3f0:	cmp	w0, #0x3
   2f3f4:	b.ne	2f41c <PyInit__decimal@@Base+0x17744>  // b.any
   2f3f8:	ldr	x0, [sp, #56]
   2f3fc:	str	x0, [sp, #720]
   2f400:	ldr	x0, [sp, #720]
   2f404:	ldrb	w0, [x0]
   2f408:	orr	w0, w0, #0x1
   2f40c:	and	w1, w0, #0xff
   2f410:	ldr	x0, [sp, #720]
   2f414:	strb	w1, [x0]
   2f418:	nop
   2f41c:	ldr	x0, [sp, #56]
   2f420:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   2f424:	b	2f434 <PyInit__decimal@@Base+0x1775c>
   2f428:	nop
   2f42c:	b	2f434 <PyInit__decimal@@Base+0x1775c>
   2f430:	nop
   2f434:	add	x0, sp, #0x78
   2f438:	str	x0, [sp, #712]
   2f43c:	ldr	x0, [sp, #712]
   2f440:	str	x0, [sp, #704]
   2f444:	ldr	x0, [sp, #704]
   2f448:	ldrb	w0, [x0]
   2f44c:	and	w0, w0, #0xe0
   2f450:	cmp	w0, #0x0
   2f454:	cset	w0, eq  // eq = none
   2f458:	and	w0, w0, #0xff
   2f45c:	cmp	w0, #0x0
   2f460:	b.eq	2f47c <PyInit__decimal@@Base+0x177a4>  // b.none
   2f464:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f468:	add	x0, x0, #0x6f8
   2f46c:	ldr	x1, [x0]
   2f470:	ldr	x0, [sp, #712]
   2f474:	ldr	x0, [x0, #40]
   2f478:	blr	x1
   2f47c:	ldr	x0, [sp, #712]
   2f480:	str	x0, [sp, #696]
   2f484:	ldr	x0, [sp, #696]
   2f488:	ldrb	w0, [x0]
   2f48c:	and	w0, w0, #0x10
   2f490:	cmp	w0, #0x0
   2f494:	cset	w0, eq  // eq = none
   2f498:	and	w0, w0, #0xff
   2f49c:	cmp	w0, #0x0
   2f4a0:	b.eq	2f4b8 <PyInit__decimal@@Base+0x177e0>  // b.none
   2f4a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f4a8:	add	x0, x0, #0x6f8
   2f4ac:	ldr	x1, [x0]
   2f4b0:	ldr	x0, [sp, #712]
   2f4b4:	blr	x1
   2f4b8:	nop
   2f4bc:	nop
   2f4c0:	ldp	x29, x30, [sp]
   2f4c4:	add	sp, sp, #0x3f0
   2f4c8:	ret
   2f4cc:	stp	x29, x30, [sp, #-80]!
   2f4d0:	mov	x29, sp
   2f4d4:	str	x0, [sp, #56]
   2f4d8:	str	x1, [sp, #48]
   2f4dc:	str	x2, [sp, #40]
   2f4e0:	str	x3, [sp, #32]
   2f4e4:	str	x4, [sp, #24]
   2f4e8:	ldr	x0, [sp, #40]
   2f4ec:	str	x0, [sp, #72]
   2f4f0:	ldr	x0, [sp, #72]
   2f4f4:	ldrb	w0, [x0]
   2f4f8:	and	w0, w0, #0x1
   2f4fc:	and	w0, w0, #0xff
   2f500:	ldr	x5, [sp, #24]
   2f504:	ldr	x4, [sp, #32]
   2f508:	mov	w3, w0
   2f50c:	ldr	x2, [sp, #40]
   2f510:	ldr	x1, [sp, #48]
   2f514:	ldr	x0, [sp, #56]
   2f518:	bl	2eba8 <PyInit__decimal@@Base+0x16ed0>
   2f51c:	nop
   2f520:	ldp	x29, x30, [sp], #80
   2f524:	ret
   2f528:	stp	x29, x30, [sp, #-80]!
   2f52c:	mov	x29, sp
   2f530:	str	x0, [sp, #56]
   2f534:	str	x1, [sp, #48]
   2f538:	str	x2, [sp, #40]
   2f53c:	str	x3, [sp, #32]
   2f540:	str	x4, [sp, #24]
   2f544:	ldr	x0, [sp, #40]
   2f548:	str	x0, [sp, #72]
   2f54c:	ldr	x0, [sp, #72]
   2f550:	ldrb	w0, [x0]
   2f554:	and	w0, w0, #0x1
   2f558:	and	w0, w0, #0xff
   2f55c:	cmp	w0, #0x0
   2f560:	cset	w0, eq  // eq = none
   2f564:	and	w0, w0, #0xff
   2f568:	ldr	x5, [sp, #24]
   2f56c:	ldr	x4, [sp, #32]
   2f570:	mov	w3, w0
   2f574:	ldr	x2, [sp, #40]
   2f578:	ldr	x1, [sp, #48]
   2f57c:	ldr	x0, [sp, #56]
   2f580:	bl	2eba8 <PyInit__decimal@@Base+0x16ed0>
   2f584:	nop
   2f588:	ldp	x29, x30, [sp], #80
   2f58c:	ret
   2f590:	stp	x29, x30, [sp, #-96]!
   2f594:	mov	x29, sp
   2f598:	str	x0, [sp, #56]
   2f59c:	str	x1, [sp, #48]
   2f5a0:	str	x2, [sp, #40]
   2f5a4:	str	x3, [sp, #32]
   2f5a8:	str	x4, [sp, #24]
   2f5ac:	ldr	x0, [sp, #48]
   2f5b0:	str	x0, [sp, #88]
   2f5b4:	ldr	x0, [sp, #88]
   2f5b8:	ldrb	w0, [x0]
   2f5bc:	and	w0, w0, #0xe
   2f5c0:	cmp	w0, #0x0
   2f5c4:	b.ne	2f5e4 <PyInit__decimal@@Base+0x1790c>  // b.any
   2f5c8:	ldr	x0, [sp, #40]
   2f5cc:	str	x0, [sp, #80]
   2f5d0:	ldr	x0, [sp, #80]
   2f5d4:	ldrb	w0, [x0]
   2f5d8:	and	w0, w0, #0xe
   2f5dc:	cmp	w0, #0x0
   2f5e0:	b.eq	2f638 <PyInit__decimal@@Base+0x17960>  // b.none
   2f5e4:	ldr	x4, [sp, #24]
   2f5e8:	ldr	x3, [sp, #32]
   2f5ec:	ldr	x2, [sp, #40]
   2f5f0:	ldr	x1, [sp, #48]
   2f5f4:	ldr	x0, [sp, #56]
   2f5f8:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2f5fc:	cmp	w0, #0x0
   2f600:	b.ne	2f680 <PyInit__decimal@@Base+0x179a8>  // b.any
   2f604:	ldr	x0, [sp, #40]
   2f608:	str	x0, [sp, #72]
   2f60c:	ldr	x0, [sp, #72]
   2f610:	ldrb	w0, [x0]
   2f614:	and	w0, w0, #0x1
   2f618:	and	w0, w0, #0xff
   2f61c:	ldr	x4, [sp, #24]
   2f620:	mov	w3, w0
   2f624:	ldr	x2, [sp, #40]
   2f628:	ldr	x1, [sp, #48]
   2f62c:	ldr	x0, [sp, #56]
   2f630:	bl	2ead8 <PyInit__decimal@@Base+0x16e00>
   2f634:	b	2f684 <PyInit__decimal@@Base+0x179ac>
   2f638:	ldr	x0, [sp, #40]
   2f63c:	str	x0, [sp, #64]
   2f640:	ldr	x0, [sp, #64]
   2f644:	ldrb	w0, [x0]
   2f648:	and	w0, w0, #0x1
   2f64c:	and	w0, w0, #0xff
   2f650:	ldr	x5, [sp, #24]
   2f654:	ldr	x4, [sp, #32]
   2f658:	mov	w3, w0
   2f65c:	ldr	x2, [sp, #40]
   2f660:	ldr	x1, [sp, #48]
   2f664:	ldr	x0, [sp, #56]
   2f668:	bl	2eba8 <PyInit__decimal@@Base+0x16ed0>
   2f66c:	ldr	x2, [sp, #24]
   2f670:	ldr	x1, [sp, #32]
   2f674:	ldr	x0, [sp, #56]
   2f678:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   2f67c:	b	2f684 <PyInit__decimal@@Base+0x179ac>
   2f680:	nop
   2f684:	ldp	x29, x30, [sp], #96
   2f688:	ret
   2f68c:	stp	x29, x30, [sp, #-80]!
   2f690:	mov	x29, sp
   2f694:	str	x0, [sp, #56]
   2f698:	str	x1, [sp, #48]
   2f69c:	str	x2, [sp, #40]
   2f6a0:	str	x3, [sp, #32]
   2f6a4:	str	x4, [sp, #24]
   2f6a8:	str	wzr, [sp, #76]
   2f6ac:	add	x0, sp, #0x4c
   2f6b0:	mov	x4, x0
   2f6b4:	ldr	x3, [sp, #32]
   2f6b8:	ldr	x2, [sp, #40]
   2f6bc:	ldr	x1, [sp, #48]
   2f6c0:	ldr	x0, [sp, #56]
   2f6c4:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   2f6c8:	ldr	x0, [sp, #24]
   2f6cc:	ldr	w1, [x0]
   2f6d0:	ldr	w0, [sp, #76]
   2f6d4:	orr	w1, w1, w0
   2f6d8:	ldr	x0, [sp, #24]
   2f6dc:	str	w1, [x0]
   2f6e0:	ldr	w1, [sp, #76]
   2f6e4:	mov	w0, #0x1041                	// #4161
   2f6e8:	and	w0, w1, w0
   2f6ec:	cmp	w0, #0x0
   2f6f0:	b.eq	2f704 <PyInit__decimal@@Base+0x17a2c>  // b.none
   2f6f4:	ldr	x2, [sp, #24]
   2f6f8:	mov	w1, #0x100                 	// #256
   2f6fc:	ldr	x0, [sp, #56]
   2f700:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2f704:	nop
   2f708:	ldp	x29, x30, [sp], #80
   2f70c:	ret
   2f710:	stp	x29, x30, [sp, #-96]!
   2f714:	mov	x29, sp
   2f718:	str	x0, [sp, #56]
   2f71c:	str	x1, [sp, #48]
   2f720:	str	x2, [sp, #40]
   2f724:	str	x3, [sp, #32]
   2f728:	str	x4, [sp, #24]
   2f72c:	ldr	x0, [sp, #48]
   2f730:	str	x0, [sp, #88]
   2f734:	ldr	x0, [sp, #88]
   2f738:	ldrb	w0, [x0]
   2f73c:	and	w0, w0, #0xe
   2f740:	cmp	w0, #0x0
   2f744:	b.ne	2f764 <PyInit__decimal@@Base+0x17a8c>  // b.any
   2f748:	ldr	x0, [sp, #40]
   2f74c:	str	x0, [sp, #80]
   2f750:	ldr	x0, [sp, #80]
   2f754:	ldrb	w0, [x0]
   2f758:	and	w0, w0, #0xe
   2f75c:	cmp	w0, #0x0
   2f760:	b.eq	2f7c4 <PyInit__decimal@@Base+0x17aec>  // b.none
   2f764:	ldr	x4, [sp, #24]
   2f768:	ldr	x3, [sp, #32]
   2f76c:	ldr	x2, [sp, #40]
   2f770:	ldr	x1, [sp, #48]
   2f774:	ldr	x0, [sp, #56]
   2f778:	bl	2861c <PyInit__decimal@@Base+0x10944>
   2f77c:	cmp	w0, #0x0
   2f780:	b.ne	2f818 <PyInit__decimal@@Base+0x17b40>  // b.any
   2f784:	ldr	x0, [sp, #40]
   2f788:	str	x0, [sp, #72]
   2f78c:	ldr	x0, [sp, #72]
   2f790:	ldrb	w0, [x0]
   2f794:	and	w0, w0, #0x1
   2f798:	and	w0, w0, #0xff
   2f79c:	cmp	w0, #0x0
   2f7a0:	cset	w0, eq  // eq = none
   2f7a4:	and	w0, w0, #0xff
   2f7a8:	ldr	x4, [sp, #24]
   2f7ac:	mov	w3, w0
   2f7b0:	ldr	x2, [sp, #40]
   2f7b4:	ldr	x1, [sp, #48]
   2f7b8:	ldr	x0, [sp, #56]
   2f7bc:	bl	2ead8 <PyInit__decimal@@Base+0x16e00>
   2f7c0:	b	2f81c <PyInit__decimal@@Base+0x17b44>
   2f7c4:	ldr	x0, [sp, #40]
   2f7c8:	str	x0, [sp, #64]
   2f7cc:	ldr	x0, [sp, #64]
   2f7d0:	ldrb	w0, [x0]
   2f7d4:	and	w0, w0, #0x1
   2f7d8:	and	w0, w0, #0xff
   2f7dc:	cmp	w0, #0x0
   2f7e0:	cset	w0, eq  // eq = none
   2f7e4:	and	w0, w0, #0xff
   2f7e8:	ldr	x5, [sp, #24]
   2f7ec:	ldr	x4, [sp, #32]
   2f7f0:	mov	w3, w0
   2f7f4:	ldr	x2, [sp, #40]
   2f7f8:	ldr	x1, [sp, #48]
   2f7fc:	ldr	x0, [sp, #56]
   2f800:	bl	2eba8 <PyInit__decimal@@Base+0x16ed0>
   2f804:	ldr	x2, [sp, #24]
   2f808:	ldr	x1, [sp, #32]
   2f80c:	ldr	x0, [sp, #56]
   2f810:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   2f814:	b	2f81c <PyInit__decimal@@Base+0x17b44>
   2f818:	nop
   2f81c:	ldp	x29, x30, [sp], #96
   2f820:	ret
   2f824:	stp	x29, x30, [sp, #-80]!
   2f828:	mov	x29, sp
   2f82c:	str	x0, [sp, #56]
   2f830:	str	x1, [sp, #48]
   2f834:	str	x2, [sp, #40]
   2f838:	str	x3, [sp, #32]
   2f83c:	str	x4, [sp, #24]
   2f840:	str	wzr, [sp, #76]
   2f844:	add	x0, sp, #0x4c
   2f848:	mov	x4, x0
   2f84c:	ldr	x3, [sp, #32]
   2f850:	ldr	x2, [sp, #40]
   2f854:	ldr	x1, [sp, #48]
   2f858:	ldr	x0, [sp, #56]
   2f85c:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   2f860:	ldr	x0, [sp, #24]
   2f864:	ldr	w1, [x0]
   2f868:	ldr	w0, [sp, #76]
   2f86c:	orr	w1, w1, w0
   2f870:	ldr	x0, [sp, #24]
   2f874:	str	w1, [x0]
   2f878:	ldr	w1, [sp, #76]
   2f87c:	mov	w0, #0x1041                	// #4161
   2f880:	and	w0, w1, w0
   2f884:	cmp	w0, #0x0
   2f888:	b.eq	2f89c <PyInit__decimal@@Base+0x17bc4>  // b.none
   2f88c:	ldr	x2, [sp, #24]
   2f890:	mov	w1, #0x100                 	// #256
   2f894:	ldr	x0, [sp, #56]
   2f898:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2f89c:	nop
   2f8a0:	ldp	x29, x30, [sp], #80
   2f8a4:	ret
   2f8a8:	sub	sp, sp, #0x2c0
   2f8ac:	stp	x29, x30, [sp]
   2f8b0:	mov	x29, sp
   2f8b4:	str	x0, [sp, #56]
   2f8b8:	str	x1, [sp, #48]
   2f8bc:	str	x2, [sp, #40]
   2f8c0:	str	x3, [sp, #32]
   2f8c4:	str	x4, [sp, #24]
   2f8c8:	mov	w0, #0x30                  	// #48
   2f8cc:	strb	w0, [sp, #72]
   2f8d0:	str	xzr, [sp, #80]
   2f8d4:	str	xzr, [sp, #88]
   2f8d8:	str	xzr, [sp, #96]
   2f8dc:	mov	x0, #0x40                  	// #64
   2f8e0:	str	x0, [sp, #104]
   2f8e4:	add	x0, sp, #0x78
   2f8e8:	str	x0, [sp, #112]
   2f8ec:	add	x0, sp, #0x278
   2f8f0:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   2f8f4:	add	x1, sp, #0x278
   2f8f8:	add	x0, sp, #0x48
   2f8fc:	ldr	x3, [sp, #24]
   2f900:	mov	x2, x1
   2f904:	ldr	x1, [sp, #40]
   2f908:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   2f90c:	add	x0, sp, #0x48
   2f910:	ldr	x4, [sp, #24]
   2f914:	ldr	x3, [sp, #32]
   2f918:	mov	x2, x0
   2f91c:	ldr	x1, [sp, #48]
   2f920:	ldr	x0, [sp, #56]
   2f924:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   2f928:	add	x0, sp, #0x48
   2f92c:	str	x0, [sp, #696]
   2f930:	ldr	x0, [sp, #696]
   2f934:	str	x0, [sp, #688]
   2f938:	ldr	x0, [sp, #688]
   2f93c:	ldrb	w0, [x0]
   2f940:	and	w0, w0, #0xe0
   2f944:	cmp	w0, #0x0
   2f948:	cset	w0, eq  // eq = none
   2f94c:	and	w0, w0, #0xff
   2f950:	cmp	w0, #0x0
   2f954:	b.eq	2f970 <PyInit__decimal@@Base+0x17c98>  // b.none
   2f958:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f95c:	add	x0, x0, #0x6f8
   2f960:	ldr	x1, [x0]
   2f964:	ldr	x0, [sp, #696]
   2f968:	ldr	x0, [x0, #40]
   2f96c:	blr	x1
   2f970:	ldr	x0, [sp, #696]
   2f974:	str	x0, [sp, #680]
   2f978:	ldr	x0, [sp, #680]
   2f97c:	ldrb	w0, [x0]
   2f980:	and	w0, w0, #0x10
   2f984:	cmp	w0, #0x0
   2f988:	cset	w0, eq  // eq = none
   2f98c:	and	w0, w0, #0xff
   2f990:	cmp	w0, #0x0
   2f994:	b.eq	2f9ac <PyInit__decimal@@Base+0x17cd4>  // b.none
   2f998:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2f99c:	add	x0, x0, #0x6f8
   2f9a0:	ldr	x1, [x0]
   2f9a4:	ldr	x0, [sp, #696]
   2f9a8:	blr	x1
   2f9ac:	nop
   2f9b0:	nop
   2f9b4:	ldp	x29, x30, [sp]
   2f9b8:	add	sp, sp, #0x2c0
   2f9bc:	ret
   2f9c0:	sub	sp, sp, #0x2c0
   2f9c4:	stp	x29, x30, [sp]
   2f9c8:	mov	x29, sp
   2f9cc:	str	x0, [sp, #56]
   2f9d0:	str	x1, [sp, #48]
   2f9d4:	str	x2, [sp, #40]
   2f9d8:	str	x3, [sp, #32]
   2f9dc:	str	x4, [sp, #24]
   2f9e0:	mov	w0, #0x30                  	// #48
   2f9e4:	strb	w0, [sp, #72]
   2f9e8:	str	xzr, [sp, #80]
   2f9ec:	str	xzr, [sp, #88]
   2f9f0:	str	xzr, [sp, #96]
   2f9f4:	mov	x0, #0x40                  	// #64
   2f9f8:	str	x0, [sp, #104]
   2f9fc:	add	x0, sp, #0x78
   2fa00:	str	x0, [sp, #112]
   2fa04:	add	x0, sp, #0x278
   2fa08:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   2fa0c:	add	x1, sp, #0x278
   2fa10:	add	x0, sp, #0x48
   2fa14:	ldr	x3, [sp, #24]
   2fa18:	mov	x2, x1
   2fa1c:	ldr	x1, [sp, #40]
   2fa20:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   2fa24:	add	x0, sp, #0x48
   2fa28:	ldr	x4, [sp, #24]
   2fa2c:	ldr	x3, [sp, #32]
   2fa30:	mov	x2, x0
   2fa34:	ldr	x1, [sp, #48]
   2fa38:	ldr	x0, [sp, #56]
   2fa3c:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   2fa40:	add	x0, sp, #0x48
   2fa44:	str	x0, [sp, #696]
   2fa48:	ldr	x0, [sp, #696]
   2fa4c:	str	x0, [sp, #688]
   2fa50:	ldr	x0, [sp, #688]
   2fa54:	ldrb	w0, [x0]
   2fa58:	and	w0, w0, #0xe0
   2fa5c:	cmp	w0, #0x0
   2fa60:	cset	w0, eq  // eq = none
   2fa64:	and	w0, w0, #0xff
   2fa68:	cmp	w0, #0x0
   2fa6c:	b.eq	2fa88 <PyInit__decimal@@Base+0x17db0>  // b.none
   2fa70:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fa74:	add	x0, x0, #0x6f8
   2fa78:	ldr	x1, [x0]
   2fa7c:	ldr	x0, [sp, #696]
   2fa80:	ldr	x0, [x0, #40]
   2fa84:	blr	x1
   2fa88:	ldr	x0, [sp, #696]
   2fa8c:	str	x0, [sp, #680]
   2fa90:	ldr	x0, [sp, #680]
   2fa94:	ldrb	w0, [x0]
   2fa98:	and	w0, w0, #0x10
   2fa9c:	cmp	w0, #0x0
   2faa0:	cset	w0, eq  // eq = none
   2faa4:	and	w0, w0, #0xff
   2faa8:	cmp	w0, #0x0
   2faac:	b.eq	2fac4 <PyInit__decimal@@Base+0x17dec>  // b.none
   2fab0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fab4:	add	x0, x0, #0x6f8
   2fab8:	ldr	x1, [x0]
   2fabc:	ldr	x0, [sp, #696]
   2fac0:	blr	x1
   2fac4:	nop
   2fac8:	nop
   2facc:	ldp	x29, x30, [sp]
   2fad0:	add	sp, sp, #0x2c0
   2fad4:	ret
   2fad8:	sub	sp, sp, #0x2c0
   2fadc:	stp	x29, x30, [sp]
   2fae0:	mov	x29, sp
   2fae4:	str	x0, [sp, #56]
   2fae8:	str	x1, [sp, #48]
   2faec:	str	x2, [sp, #40]
   2faf0:	str	x3, [sp, #32]
   2faf4:	str	x4, [sp, #24]
   2faf8:	mov	w0, #0x30                  	// #48
   2fafc:	strb	w0, [sp, #72]
   2fb00:	str	xzr, [sp, #80]
   2fb04:	str	xzr, [sp, #88]
   2fb08:	str	xzr, [sp, #96]
   2fb0c:	mov	x0, #0x40                  	// #64
   2fb10:	str	x0, [sp, #104]
   2fb14:	add	x0, sp, #0x78
   2fb18:	str	x0, [sp, #112]
   2fb1c:	add	x0, sp, #0x278
   2fb20:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   2fb24:	add	x1, sp, #0x278
   2fb28:	add	x0, sp, #0x48
   2fb2c:	ldr	x3, [sp, #24]
   2fb30:	mov	x2, x1
   2fb34:	ldr	x1, [sp, #40]
   2fb38:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   2fb3c:	add	x0, sp, #0x48
   2fb40:	ldr	x4, [sp, #24]
   2fb44:	ldr	x3, [sp, #32]
   2fb48:	mov	x2, x0
   2fb4c:	ldr	x1, [sp, #48]
   2fb50:	ldr	x0, [sp, #56]
   2fb54:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   2fb58:	add	x0, sp, #0x48
   2fb5c:	str	x0, [sp, #696]
   2fb60:	ldr	x0, [sp, #696]
   2fb64:	str	x0, [sp, #688]
   2fb68:	ldr	x0, [sp, #688]
   2fb6c:	ldrb	w0, [x0]
   2fb70:	and	w0, w0, #0xe0
   2fb74:	cmp	w0, #0x0
   2fb78:	cset	w0, eq  // eq = none
   2fb7c:	and	w0, w0, #0xff
   2fb80:	cmp	w0, #0x0
   2fb84:	b.eq	2fba0 <PyInit__decimal@@Base+0x17ec8>  // b.none
   2fb88:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fb8c:	add	x0, x0, #0x6f8
   2fb90:	ldr	x1, [x0]
   2fb94:	ldr	x0, [sp, #696]
   2fb98:	ldr	x0, [x0, #40]
   2fb9c:	blr	x1
   2fba0:	ldr	x0, [sp, #696]
   2fba4:	str	x0, [sp, #680]
   2fba8:	ldr	x0, [sp, #680]
   2fbac:	ldrb	w0, [x0]
   2fbb0:	and	w0, w0, #0x10
   2fbb4:	cmp	w0, #0x0
   2fbb8:	cset	w0, eq  // eq = none
   2fbbc:	and	w0, w0, #0xff
   2fbc0:	cmp	w0, #0x0
   2fbc4:	b.eq	2fbdc <PyInit__decimal@@Base+0x17f04>  // b.none
   2fbc8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fbcc:	add	x0, x0, #0x6f8
   2fbd0:	ldr	x1, [x0]
   2fbd4:	ldr	x0, [sp, #696]
   2fbd8:	blr	x1
   2fbdc:	nop
   2fbe0:	nop
   2fbe4:	ldp	x29, x30, [sp]
   2fbe8:	add	sp, sp, #0x2c0
   2fbec:	ret
   2fbf0:	sub	sp, sp, #0x2c0
   2fbf4:	stp	x29, x30, [sp]
   2fbf8:	mov	x29, sp
   2fbfc:	str	x0, [sp, #56]
   2fc00:	str	x1, [sp, #48]
   2fc04:	str	x2, [sp, #40]
   2fc08:	str	x3, [sp, #32]
   2fc0c:	str	x4, [sp, #24]
   2fc10:	mov	w0, #0x30                  	// #48
   2fc14:	strb	w0, [sp, #72]
   2fc18:	str	xzr, [sp, #80]
   2fc1c:	str	xzr, [sp, #88]
   2fc20:	str	xzr, [sp, #96]
   2fc24:	mov	x0, #0x40                  	// #64
   2fc28:	str	x0, [sp, #104]
   2fc2c:	add	x0, sp, #0x78
   2fc30:	str	x0, [sp, #112]
   2fc34:	add	x0, sp, #0x278
   2fc38:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   2fc3c:	add	x1, sp, #0x278
   2fc40:	add	x0, sp, #0x48
   2fc44:	ldr	x3, [sp, #24]
   2fc48:	mov	x2, x1
   2fc4c:	ldr	x1, [sp, #40]
   2fc50:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   2fc54:	add	x0, sp, #0x48
   2fc58:	ldr	x4, [sp, #24]
   2fc5c:	ldr	x3, [sp, #32]
   2fc60:	mov	x2, x0
   2fc64:	ldr	x1, [sp, #48]
   2fc68:	ldr	x0, [sp, #56]
   2fc6c:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   2fc70:	add	x0, sp, #0x48
   2fc74:	str	x0, [sp, #696]
   2fc78:	ldr	x0, [sp, #696]
   2fc7c:	str	x0, [sp, #688]
   2fc80:	ldr	x0, [sp, #688]
   2fc84:	ldrb	w0, [x0]
   2fc88:	and	w0, w0, #0xe0
   2fc8c:	cmp	w0, #0x0
   2fc90:	cset	w0, eq  // eq = none
   2fc94:	and	w0, w0, #0xff
   2fc98:	cmp	w0, #0x0
   2fc9c:	b.eq	2fcb8 <PyInit__decimal@@Base+0x17fe0>  // b.none
   2fca0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fca4:	add	x0, x0, #0x6f8
   2fca8:	ldr	x1, [x0]
   2fcac:	ldr	x0, [sp, #696]
   2fcb0:	ldr	x0, [x0, #40]
   2fcb4:	blr	x1
   2fcb8:	ldr	x0, [sp, #696]
   2fcbc:	str	x0, [sp, #680]
   2fcc0:	ldr	x0, [sp, #680]
   2fcc4:	ldrb	w0, [x0]
   2fcc8:	and	w0, w0, #0x10
   2fccc:	cmp	w0, #0x0
   2fcd0:	cset	w0, eq  // eq = none
   2fcd4:	and	w0, w0, #0xff
   2fcd8:	cmp	w0, #0x0
   2fcdc:	b.eq	2fcf4 <PyInit__decimal@@Base+0x1801c>  // b.none
   2fce0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   2fce4:	add	x0, x0, #0x6f8
   2fce8:	ldr	x1, [x0]
   2fcec:	ldr	x0, [sp, #696]
   2fcf0:	blr	x1
   2fcf4:	nop
   2fcf8:	nop
   2fcfc:	ldp	x29, x30, [sp]
   2fd00:	add	sp, sp, #0x2c0
   2fd04:	ret
   2fd08:	stp	x29, x30, [sp, #-64]!
   2fd0c:	mov	x29, sp
   2fd10:	str	x0, [sp, #56]
   2fd14:	str	x1, [sp, #48]
   2fd18:	str	w2, [sp, #44]
   2fd1c:	str	x3, [sp, #32]
   2fd20:	str	x4, [sp, #24]
   2fd24:	ldrsw	x0, [sp, #44]
   2fd28:	ldr	x4, [sp, #24]
   2fd2c:	ldr	x3, [sp, #32]
   2fd30:	mov	x2, x0
   2fd34:	ldr	x1, [sp, #48]
   2fd38:	ldr	x0, [sp, #56]
   2fd3c:	bl	2f8a8 <PyInit__decimal@@Base+0x17bd0>
   2fd40:	nop
   2fd44:	ldp	x29, x30, [sp], #64
   2fd48:	ret
   2fd4c:	stp	x29, x30, [sp, #-64]!
   2fd50:	mov	x29, sp
   2fd54:	str	x0, [sp, #56]
   2fd58:	str	x1, [sp, #48]
   2fd5c:	str	w2, [sp, #44]
   2fd60:	str	x3, [sp, #32]
   2fd64:	str	x4, [sp, #24]
   2fd68:	ldr	w0, [sp, #44]
   2fd6c:	ldr	x4, [sp, #24]
   2fd70:	ldr	x3, [sp, #32]
   2fd74:	mov	x2, x0
   2fd78:	ldr	x1, [sp, #48]
   2fd7c:	ldr	x0, [sp, #56]
   2fd80:	bl	2f9c0 <PyInit__decimal@@Base+0x17ce8>
   2fd84:	nop
   2fd88:	ldp	x29, x30, [sp], #64
   2fd8c:	ret
   2fd90:	stp	x29, x30, [sp, #-64]!
   2fd94:	mov	x29, sp
   2fd98:	str	x0, [sp, #56]
   2fd9c:	str	x1, [sp, #48]
   2fda0:	str	x2, [sp, #40]
   2fda4:	str	x3, [sp, #32]
   2fda8:	str	x4, [sp, #24]
   2fdac:	ldr	x4, [sp, #24]
   2fdb0:	ldr	x3, [sp, #32]
   2fdb4:	ldr	x2, [sp, #40]
   2fdb8:	ldr	x1, [sp, #48]
   2fdbc:	ldr	x0, [sp, #56]
   2fdc0:	bl	2f8a8 <PyInit__decimal@@Base+0x17bd0>
   2fdc4:	nop
   2fdc8:	ldp	x29, x30, [sp], #64
   2fdcc:	ret
   2fdd0:	stp	x29, x30, [sp, #-64]!
   2fdd4:	mov	x29, sp
   2fdd8:	str	x0, [sp, #56]
   2fddc:	str	x1, [sp, #48]
   2fde0:	str	x2, [sp, #40]
   2fde4:	str	x3, [sp, #32]
   2fde8:	str	x4, [sp, #24]
   2fdec:	ldr	x4, [sp, #24]
   2fdf0:	ldr	x3, [sp, #32]
   2fdf4:	ldr	x2, [sp, #40]
   2fdf8:	ldr	x1, [sp, #48]
   2fdfc:	ldr	x0, [sp, #56]
   2fe00:	bl	2f9c0 <PyInit__decimal@@Base+0x17ce8>
   2fe04:	nop
   2fe08:	ldp	x29, x30, [sp], #64
   2fe0c:	ret
   2fe10:	stp	x29, x30, [sp, #-64]!
   2fe14:	mov	x29, sp
   2fe18:	str	x0, [sp, #56]
   2fe1c:	str	x1, [sp, #48]
   2fe20:	str	w2, [sp, #44]
   2fe24:	str	x3, [sp, #32]
   2fe28:	str	x4, [sp, #24]
   2fe2c:	ldrsw	x0, [sp, #44]
   2fe30:	ldr	x4, [sp, #24]
   2fe34:	ldr	x3, [sp, #32]
   2fe38:	mov	x2, x0
   2fe3c:	ldr	x1, [sp, #48]
   2fe40:	ldr	x0, [sp, #56]
   2fe44:	bl	2fad8 <PyInit__decimal@@Base+0x17e00>
   2fe48:	nop
   2fe4c:	ldp	x29, x30, [sp], #64
   2fe50:	ret
   2fe54:	stp	x29, x30, [sp, #-64]!
   2fe58:	mov	x29, sp
   2fe5c:	str	x0, [sp, #56]
   2fe60:	str	x1, [sp, #48]
   2fe64:	str	w2, [sp, #44]
   2fe68:	str	x3, [sp, #32]
   2fe6c:	str	x4, [sp, #24]
   2fe70:	ldr	w0, [sp, #44]
   2fe74:	ldr	x4, [sp, #24]
   2fe78:	ldr	x3, [sp, #32]
   2fe7c:	mov	x2, x0
   2fe80:	ldr	x1, [sp, #48]
   2fe84:	ldr	x0, [sp, #56]
   2fe88:	bl	2fbf0 <PyInit__decimal@@Base+0x17f18>
   2fe8c:	nop
   2fe90:	ldp	x29, x30, [sp], #64
   2fe94:	ret
   2fe98:	stp	x29, x30, [sp, #-64]!
   2fe9c:	mov	x29, sp
   2fea0:	str	x0, [sp, #56]
   2fea4:	str	x1, [sp, #48]
   2fea8:	str	x2, [sp, #40]
   2feac:	str	x3, [sp, #32]
   2feb0:	str	x4, [sp, #24]
   2feb4:	ldr	x4, [sp, #24]
   2feb8:	ldr	x3, [sp, #32]
   2febc:	ldr	x2, [sp, #40]
   2fec0:	ldr	x1, [sp, #48]
   2fec4:	ldr	x0, [sp, #56]
   2fec8:	bl	2fad8 <PyInit__decimal@@Base+0x17e00>
   2fecc:	nop
   2fed0:	ldp	x29, x30, [sp], #64
   2fed4:	ret
   2fed8:	stp	x29, x30, [sp, #-64]!
   2fedc:	mov	x29, sp
   2fee0:	str	x0, [sp, #56]
   2fee4:	str	x1, [sp, #48]
   2fee8:	str	x2, [sp, #40]
   2feec:	str	x3, [sp, #32]
   2fef0:	str	x4, [sp, #24]
   2fef4:	ldr	x4, [sp, #24]
   2fef8:	ldr	x3, [sp, #32]
   2fefc:	ldr	x2, [sp, #40]
   2ff00:	ldr	x1, [sp, #48]
   2ff04:	ldr	x0, [sp, #56]
   2ff08:	bl	2fbf0 <PyInit__decimal@@Base+0x17f18>
   2ff0c:	nop
   2ff10:	ldp	x29, x30, [sp], #64
   2ff14:	ret
   2ff18:	stp	x29, x30, [sp, #-128]!
   2ff1c:	mov	x29, sp
   2ff20:	str	x0, [sp, #56]
   2ff24:	str	x1, [sp, #48]
   2ff28:	str	x2, [sp, #40]
   2ff2c:	str	x3, [sp, #32]
   2ff30:	str	x4, [sp, #24]
   2ff34:	ldr	x0, [sp, #48]
   2ff38:	str	x0, [sp, #120]
   2ff3c:	ldr	x0, [sp, #120]
   2ff40:	ldrb	w0, [x0]
   2ff44:	and	w0, w0, #0x2
   2ff48:	cmp	w0, #0x0
   2ff4c:	b.eq	2ffcc <PyInit__decimal@@Base+0x182f4>  // b.none
   2ff50:	ldr	x0, [sp, #40]
   2ff54:	str	x0, [sp, #112]
   2ff58:	ldr	x0, [sp, #112]
   2ff5c:	ldrb	w0, [x0]
   2ff60:	and	w0, w0, #0x2
   2ff64:	cmp	w0, #0x0
   2ff68:	b.eq	2ff80 <PyInit__decimal@@Base+0x182a8>  // b.none
   2ff6c:	ldr	x2, [sp, #24]
   2ff70:	mov	w1, #0x100                 	// #256
   2ff74:	ldr	x0, [sp, #56]
   2ff78:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   2ff7c:	b	3004c <PyInit__decimal@@Base+0x18374>
   2ff80:	ldr	x0, [sp, #48]
   2ff84:	str	x0, [sp, #96]
   2ff88:	ldr	x0, [sp, #96]
   2ff8c:	ldrb	w0, [x0]
   2ff90:	and	w0, w0, #0x1
   2ff94:	and	w1, w0, #0xff
   2ff98:	ldr	x0, [sp, #40]
   2ff9c:	str	x0, [sp, #104]
   2ffa0:	ldr	x0, [sp, #104]
   2ffa4:	ldrb	w0, [x0]
   2ffa8:	and	w0, w0, #0x1
   2ffac:	and	w0, w0, #0xff
   2ffb0:	eor	w0, w1, w0
   2ffb4:	and	w0, w0, #0xff
   2ffb8:	mov	w2, #0x2                   	// #2
   2ffbc:	mov	w1, w0
   2ffc0:	ldr	x0, [sp, #56]
   2ffc4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   2ffc8:	b	3004c <PyInit__decimal@@Base+0x18374>
   2ffcc:	ldr	x0, [sp, #48]
   2ffd0:	str	x0, [sp, #72]
   2ffd4:	ldr	x0, [sp, #72]
   2ffd8:	ldrb	w0, [x0]
   2ffdc:	and	w0, w0, #0x1
   2ffe0:	and	w1, w0, #0xff
   2ffe4:	ldr	x0, [sp, #40]
   2ffe8:	str	x0, [sp, #80]
   2ffec:	ldr	x0, [sp, #80]
   2fff0:	ldrb	w0, [x0]
   2fff4:	and	w0, w0, #0x1
   2fff8:	and	w0, w0, #0xff
   2fffc:	eor	w0, w1, w0
   30000:	and	w4, w0, #0xff
   30004:	ldr	x0, [sp, #32]
   30008:	str	x0, [sp, #88]
   3000c:	ldr	x0, [sp, #88]
   30010:	ldr	x1, [x0, #16]
   30014:	ldr	x0, [sp, #88]
   30018:	ldr	x0, [x0]
   3001c:	sub	x0, x1, x0
   30020:	add	x0, x0, #0x1
   30024:	mov	x3, x0
   30028:	mov	x2, #0x0                   	// #0
   3002c:	mov	w1, w4
   30030:	ldr	x0, [sp, #56]
   30034:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   30038:	ldr	x0, [sp, #24]
   3003c:	ldr	w0, [x0]
   30040:	orr	w1, w0, #0x1
   30044:	ldr	x0, [sp, #24]
   30048:	str	w1, [x0]
   3004c:	ldp	x29, x30, [sp], #128
   30050:	ret
   30054:	sub	sp, sp, #0x600
   30058:	stp	x29, x30, [sp]
   3005c:	mov	x29, sp
   30060:	str	w0, [sp, #60]
   30064:	str	x1, [sp, #48]
   30068:	str	x2, [sp, #40]
   3006c:	str	x3, [sp, #32]
   30070:	str	x4, [sp, #24]
   30074:	str	x5, [sp, #16]
   30078:	mov	w0, #0x30                  	// #48
   3007c:	strb	w0, [sp, #632]
   30080:	str	xzr, [sp, #640]
   30084:	str	xzr, [sp, #648]
   30088:	str	xzr, [sp, #656]
   3008c:	mov	x0, #0x40                  	// #64
   30090:	str	x0, [sp, #664]
   30094:	add	x0, sp, #0x2a8
   30098:	str	x0, [sp, #672]
   3009c:	ldr	x0, [sp, #40]
   300a0:	str	x0, [sp, #1440]
   300a4:	ldr	x0, [sp, #1440]
   300a8:	ldrb	w0, [x0]
   300ac:	and	w0, w0, #0x1
   300b0:	and	w0, w0, #0xff
   300b4:	strb	w0, [sp, #1511]
   300b8:	ldr	x0, [sp, #32]
   300bc:	str	x0, [sp, #1448]
   300c0:	ldr	x0, [sp, #1448]
   300c4:	ldrb	w0, [x0]
   300c8:	and	w0, w0, #0x1
   300cc:	and	w0, w0, #0xff
   300d0:	strb	w0, [sp, #1510]
   300d4:	ldr	x0, [sp, #40]
   300d8:	str	x0, [sp, #1456]
   300dc:	ldr	x0, [sp, #1456]
   300e0:	ldrb	w0, [x0]
   300e4:	and	w0, w0, #0xe
   300e8:	cmp	w0, #0x0
   300ec:	b.ne	3010c <PyInit__decimal@@Base+0x18434>  // b.any
   300f0:	ldr	x0, [sp, #32]
   300f4:	str	x0, [sp, #1432]
   300f8:	ldr	x0, [sp, #1432]
   300fc:	ldrb	w0, [x0]
   30100:	and	w0, w0, #0xe
   30104:	cmp	w0, #0x0
   30108:	b.eq	30148 <PyInit__decimal@@Base+0x18470>  // b.none
   3010c:	ldr	x4, [sp, #16]
   30110:	ldr	x3, [sp, #24]
   30114:	ldr	x2, [sp, #32]
   30118:	ldr	x1, [sp, #40]
   3011c:	ldr	x0, [sp, #48]
   30120:	bl	2861c <PyInit__decimal@@Base+0x10944>
   30124:	cmp	w0, #0x0
   30128:	b.ne	30a54 <PyInit__decimal@@Base+0x18d7c>  // b.any
   3012c:	ldr	x4, [sp, #16]
   30130:	ldr	x3, [sp, #24]
   30134:	ldr	x2, [sp, #32]
   30138:	ldr	x1, [sp, #40]
   3013c:	ldr	x0, [sp, #48]
   30140:	bl	2ff18 <PyInit__decimal@@Base+0x18240>
   30144:	b	30a58 <PyInit__decimal@@Base+0x18d80>
   30148:	ldr	x0, [sp, #32]
   3014c:	str	x0, [sp, #1424]
   30150:	ldr	x0, [sp, #1424]
   30154:	str	x0, [sp, #1416]
   30158:	ldr	x0, [sp, #1416]
   3015c:	ldr	x1, [x0, #40]
   30160:	ldr	x0, [sp, #1416]
   30164:	ldr	x0, [x0, #24]
   30168:	lsl	x0, x0, #3
   3016c:	sub	x0, x0, #0x8
   30170:	add	x0, x1, x0
   30174:	ldr	x0, [x0]
   30178:	cmp	x0, #0x0
   3017c:	cset	w0, eq  // eq = none
   30180:	and	w0, w0, #0xff
   30184:	cmp	w0, #0x0
   30188:	b.eq	3021c <PyInit__decimal@@Base+0x18544>  // b.none
   3018c:	ldr	x0, [sp, #40]
   30190:	str	x0, [sp, #1408]
   30194:	ldr	x0, [sp, #1408]
   30198:	str	x0, [sp, #1400]
   3019c:	ldr	x0, [sp, #1400]
   301a0:	ldr	x1, [x0, #40]
   301a4:	ldr	x0, [sp, #1400]
   301a8:	ldr	x0, [x0, #24]
   301ac:	lsl	x0, x0, #3
   301b0:	sub	x0, x0, #0x8
   301b4:	add	x0, x1, x0
   301b8:	ldr	x0, [x0]
   301bc:	cmp	x0, #0x0
   301c0:	cset	w0, eq  // eq = none
   301c4:	and	w0, w0, #0xff
   301c8:	cmp	w0, #0x0
   301cc:	b.eq	301e4 <PyInit__decimal@@Base+0x1850c>  // b.none
   301d0:	ldr	x2, [sp, #16]
   301d4:	mov	w1, #0x10                  	// #16
   301d8:	ldr	x0, [sp, #48]
   301dc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   301e0:	b	30a58 <PyInit__decimal@@Base+0x18d80>
   301e4:	ldrb	w1, [sp, #1511]
   301e8:	ldrb	w0, [sp, #1510]
   301ec:	eor	w0, w1, w0
   301f0:	and	w0, w0, #0xff
   301f4:	mov	w2, #0x2                   	// #2
   301f8:	mov	w1, w0
   301fc:	ldr	x0, [sp, #48]
   30200:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   30204:	ldr	x0, [sp, #16]
   30208:	ldr	w0, [x0]
   3020c:	orr	w1, w0, #0x4
   30210:	ldr	x0, [sp, #16]
   30214:	str	w1, [x0]
   30218:	b	30a58 <PyInit__decimal@@Base+0x18d80>
   3021c:	ldr	x0, [sp, #40]
   30220:	str	x0, [sp, #1392]
   30224:	ldr	x0, [sp, #1392]
   30228:	str	x0, [sp, #1384]
   3022c:	ldr	x0, [sp, #1384]
   30230:	ldr	x1, [x0, #40]
   30234:	ldr	x0, [sp, #1384]
   30238:	ldr	x0, [x0, #24]
   3023c:	lsl	x0, x0, #3
   30240:	sub	x0, x0, #0x8
   30244:	add	x0, x1, x0
   30248:	ldr	x0, [x0]
   3024c:	cmp	x0, #0x0
   30250:	cset	w0, eq  // eq = none
   30254:	and	w0, w0, #0xff
   30258:	cmp	w0, #0x0
   3025c:	b.eq	302b0 <PyInit__decimal@@Base+0x185d8>  // b.none
   30260:	ldr	x0, [sp, #40]
   30264:	ldr	x1, [x0, #8]
   30268:	ldr	x0, [sp, #32]
   3026c:	ldr	x0, [x0, #8]
   30270:	sub	x0, x1, x0
   30274:	str	x0, [sp, #1528]
   30278:	ldrb	w1, [sp, #1511]
   3027c:	ldrb	w0, [sp, #1510]
   30280:	eor	w0, w1, w0
   30284:	and	w0, w0, #0xff
   30288:	ldr	x3, [sp, #1528]
   3028c:	mov	x2, #0x0                   	// #0
   30290:	mov	w1, w0
   30294:	ldr	x0, [sp, #48]
   30298:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3029c:	ldr	x2, [sp, #16]
   302a0:	ldr	x1, [sp, #24]
   302a4:	ldr	x0, [sp, #48]
   302a8:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   302ac:	b	30a58 <PyInit__decimal@@Base+0x18d80>
   302b0:	ldr	x0, [sp, #32]
   302b4:	ldr	x1, [x0, #16]
   302b8:	ldr	x0, [sp, #40]
   302bc:	ldr	x0, [x0, #16]
   302c0:	sub	x1, x1, x0
   302c4:	ldr	x0, [sp, #24]
   302c8:	ldr	x0, [x0]
   302cc:	add	x0, x1, x0
   302d0:	add	x0, x0, #0x1
   302d4:	str	x0, [sp, #1496]
   302d8:	ldr	x0, [sp, #40]
   302dc:	ldr	x1, [x0, #8]
   302e0:	ldr	x0, [sp, #32]
   302e4:	ldr	x0, [x0, #8]
   302e8:	sub	x0, x1, x0
   302ec:	str	x0, [sp, #1488]
   302f0:	ldr	x1, [sp, #1488]
   302f4:	ldr	x0, [sp, #1496]
   302f8:	sub	x0, x1, x0
   302fc:	str	x0, [sp, #1528]
   30300:	ldr	x0, [sp, #1496]
   30304:	cmp	x0, #0x0
   30308:	b.le	30348 <PyInit__decimal@@Base+0x18670>
   3030c:	add	x0, sp, #0x278
   30310:	ldr	x3, [sp, #16]
   30314:	ldr	x2, [sp, #1496]
   30318:	ldr	x1, [sp, #40]
   3031c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   30320:	cmp	w0, #0x0
   30324:	b.ne	3033c <PyInit__decimal@@Base+0x18664>  // b.any
   30328:	ldr	x2, [sp, #16]
   3032c:	mov	w1, #0x200                 	// #512
   30330:	ldr	x0, [sp, #48]
   30334:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   30338:	b	309b8 <PyInit__decimal@@Base+0x18ce0>
   3033c:	add	x0, sp, #0x278
   30340:	str	x0, [sp, #40]
   30344:	b	30398 <PyInit__decimal@@Base+0x186c0>
   30348:	ldr	x0, [sp, #1496]
   3034c:	cmp	x0, #0x0
   30350:	b.ge	30398 <PyInit__decimal@@Base+0x186c0>  // b.tcont
   30354:	ldr	x0, [sp, #1496]
   30358:	neg	x0, x0
   3035c:	str	x0, [sp, #1496]
   30360:	add	x0, sp, #0x278
   30364:	ldr	x3, [sp, #16]
   30368:	ldr	x2, [sp, #1496]
   3036c:	ldr	x1, [sp, #32]
   30370:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   30374:	cmp	w0, #0x0
   30378:	b.ne	30390 <PyInit__decimal@@Base+0x186b8>  // b.any
   3037c:	ldr	x2, [sp, #16]
   30380:	mov	w1, #0x200                 	// #512
   30384:	ldr	x0, [sp, #48]
   30388:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3038c:	b	309b8 <PyInit__decimal@@Base+0x18ce0>
   30390:	add	x0, sp, #0x278
   30394:	str	x0, [sp, #32]
   30398:	ldr	x0, [sp, #40]
   3039c:	ldr	x1, [x0, #24]
   303a0:	ldr	x0, [sp, #32]
   303a4:	ldr	x0, [x0, #24]
   303a8:	sub	x0, x1, x0
   303ac:	add	x0, x0, #0x1
   303b0:	str	x0, [sp, #1520]
   303b4:	ldr	x1, [sp, #48]
   303b8:	ldr	x0, [sp, #32]
   303bc:	cmp	x1, x0
   303c0:	b.eq	303d4 <PyInit__decimal@@Base+0x186fc>  // b.none
   303c4:	ldr	x1, [sp, #48]
   303c8:	ldr	x0, [sp, #40]
   303cc:	cmp	x1, x0
   303d0:	b.ne	303f8 <PyInit__decimal@@Base+0x18720>  // b.any
   303d4:	ldr	x1, [sp, #48]
   303d8:	ldr	x0, [sp, #32]
   303dc:	cmp	x1, x0
   303e0:	b.ne	304c4 <PyInit__decimal@@Base+0x187ec>  // b.any
   303e4:	ldr	x0, [sp, #32]
   303e8:	ldr	x0, [x0, #24]
   303ec:	ldr	x1, [sp, #1520]
   303f0:	cmp	x1, x0
   303f4:	b.le	304c4 <PyInit__decimal@@Base+0x187ec>
   303f8:	ldr	x0, [sp, #48]
   303fc:	str	x0, [sp, #1376]
   30400:	ldr	x0, [sp, #1520]
   30404:	str	x0, [sp, #1368]
   30408:	ldr	x0, [sp, #16]
   3040c:	str	x0, [sp, #1360]
   30410:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30414:	add	x0, x0, #0x6d8
   30418:	ldr	x0, [x0]
   3041c:	ldr	x2, [sp, #1368]
   30420:	ldr	x1, [sp, #1368]
   30424:	cmp	x2, x0
   30428:	csel	x0, x1, x0, ge  // ge = tcont
   3042c:	str	x0, [sp, #1368]
   30430:	ldr	x0, [sp, #1376]
   30434:	ldr	x0, [x0, #32]
   30438:	ldr	x1, [sp, #1368]
   3043c:	cmp	x1, x0
   30440:	b.ne	3044c <PyInit__decimal@@Base+0x18774>  // b.any
   30444:	mov	w0, #0x1                   	// #1
   30448:	b	304a8 <PyInit__decimal@@Base+0x187d0>
   3044c:	ldr	x0, [sp, #1376]
   30450:	str	x0, [sp, #1352]
   30454:	ldr	x0, [sp, #1352]
   30458:	ldrb	w0, [x0]
   3045c:	and	w0, w0, #0x20
   30460:	cmp	w0, #0x0
   30464:	b.eq	30498 <PyInit__decimal@@Base+0x187c0>  // b.none
   30468:	ldr	x0, [sp, #1376]
   3046c:	ldr	x0, [x0, #32]
   30470:	ldr	x1, [sp, #1368]
   30474:	cmp	x1, x0
   30478:	b.le	30490 <PyInit__decimal@@Base+0x187b8>
   3047c:	ldr	x2, [sp, #1360]
   30480:	ldr	x1, [sp, #1368]
   30484:	ldr	x0, [sp, #1376]
   30488:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3048c:	b	304a8 <PyInit__decimal@@Base+0x187d0>
   30490:	mov	w0, #0x1                   	// #1
   30494:	b	304a8 <PyInit__decimal@@Base+0x187d0>
   30498:	ldr	x2, [sp, #1360]
   3049c:	ldr	x1, [sp, #1368]
   304a0:	ldr	x0, [sp, #1376]
   304a4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   304a8:	cmp	w0, #0x0
   304ac:	b.ne	304c4 <PyInit__decimal@@Base+0x187ec>  // b.any
   304b0:	ldr	x2, [sp, #16]
   304b4:	mov	w1, #0x200                 	// #512
   304b8:	ldr	x0, [sp, #48]
   304bc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   304c0:	b	309b8 <PyInit__decimal@@Base+0x18ce0>
   304c4:	ldr	x0, [sp, #32]
   304c8:	ldr	x0, [x0, #24]
   304cc:	cmp	x0, #0x1
   304d0:	b.ne	30510 <PyInit__decimal@@Base+0x18838>  // b.any
   304d4:	ldr	x0, [sp, #48]
   304d8:	ldr	x4, [x0, #40]
   304dc:	ldr	x0, [sp, #40]
   304e0:	ldr	x1, [x0, #40]
   304e4:	ldr	x0, [sp, #40]
   304e8:	ldr	x0, [x0, #24]
   304ec:	mov	x2, x0
   304f0:	ldr	x0, [sp, #32]
   304f4:	ldr	x0, [x0, #40]
   304f8:	ldr	x0, [x0]
   304fc:	mov	x3, x0
   30500:	mov	x0, x4
   30504:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   30508:	str	x0, [sp, #1512]
   3050c:	b	3078c <PyInit__decimal@@Base+0x18ab4>
   30510:	ldr	x0, [sp, #32]
   30514:	ldr	x0, [x0, #24]
   30518:	cmp	x0, #0x400
   3051c:	b.gt	30598 <PyInit__decimal@@Base+0x188c0>
   30520:	ldr	x0, [sp, #48]
   30524:	ldr	x6, [x0, #40]
   30528:	ldr	x0, [sp, #40]
   3052c:	ldr	x1, [x0, #40]
   30530:	ldr	x0, [sp, #32]
   30534:	ldr	x2, [x0, #40]
   30538:	ldr	x0, [sp, #40]
   3053c:	ldr	x0, [x0, #24]
   30540:	mov	x3, x0
   30544:	ldr	x0, [sp, #32]
   30548:	ldr	x0, [x0, #24]
   3054c:	mov	x5, x0
   30550:	mov	x4, x3
   30554:	mov	x3, x2
   30558:	mov	x2, x1
   3055c:	mov	x1, #0x0                   	// #0
   30560:	mov	x0, x6
   30564:	bl	1a730 <PyInit__decimal@@Base+0x2a58>
   30568:	str	w0, [sp, #1484]
   3056c:	ldr	w0, [sp, #1484]
   30570:	cmp	w0, #0x0
   30574:	b.ge	3058c <PyInit__decimal@@Base+0x188b4>  // b.tcont
   30578:	ldr	x2, [sp, #16]
   3057c:	mov	w1, #0x200                 	// #512
   30580:	ldr	x0, [sp, #48]
   30584:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   30588:	b	309b8 <PyInit__decimal@@Base+0x18ce0>
   3058c:	ldrsw	x0, [sp, #1484]
   30590:	str	x0, [sp, #1512]
   30594:	b	3078c <PyInit__decimal@@Base+0x18ab4>
   30598:	mov	w0, #0x30                  	// #48
   3059c:	strb	w0, [sp, #72]
   305a0:	str	xzr, [sp, #80]
   305a4:	str	xzr, [sp, #88]
   305a8:	str	xzr, [sp, #96]
   305ac:	mov	x0, #0x40                  	// #64
   305b0:	str	x0, [sp, #104]
   305b4:	add	x0, sp, #0x78
   305b8:	str	x0, [sp, #112]
   305bc:	add	x0, sp, #0x48
   305c0:	ldr	x4, [sp, #16]
   305c4:	ldr	x3, [sp, #32]
   305c8:	ldr	x2, [sp, #40]
   305cc:	mov	x1, x0
   305d0:	ldr	x0, [sp, #48]
   305d4:	bl	3bc50 <PyInit__decimal@@Base+0x23f78>
   305d8:	ldr	x0, [sp, #48]
   305dc:	str	x0, [sp, #1344]
   305e0:	ldr	x0, [sp, #1344]
   305e4:	ldrb	w0, [x0]
   305e8:	and	w0, w0, #0xe
   305ec:	cmp	w0, #0x0
   305f0:	b.ne	30610 <PyInit__decimal@@Base+0x18938>  // b.any
   305f4:	add	x0, sp, #0x48
   305f8:	str	x0, [sp, #1336]
   305fc:	ldr	x0, [sp, #1336]
   30600:	ldrb	w0, [x0]
   30604:	and	w0, w0, #0xe
   30608:	cmp	w0, #0x0
   3060c:	b.eq	306a8 <PyInit__decimal@@Base+0x189d0>  // b.none
   30610:	mov	w2, #0x4                   	// #4
   30614:	mov	w1, #0x0                   	// #0
   30618:	ldr	x0, [sp, #48]
   3061c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   30620:	add	x0, sp, #0x48
   30624:	str	x0, [sp, #1328]
   30628:	ldr	x0, [sp, #1328]
   3062c:	str	x0, [sp, #1320]
   30630:	ldr	x0, [sp, #1320]
   30634:	ldrb	w0, [x0]
   30638:	and	w0, w0, #0xe0
   3063c:	cmp	w0, #0x0
   30640:	cset	w0, eq  // eq = none
   30644:	and	w0, w0, #0xff
   30648:	cmp	w0, #0x0
   3064c:	b.eq	30668 <PyInit__decimal@@Base+0x18990>  // b.none
   30650:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30654:	add	x0, x0, #0x6f8
   30658:	ldr	x1, [x0]
   3065c:	ldr	x0, [sp, #1328]
   30660:	ldr	x0, [x0, #40]
   30664:	blr	x1
   30668:	ldr	x0, [sp, #1328]
   3066c:	str	x0, [sp, #1312]
   30670:	ldr	x0, [sp, #1312]
   30674:	ldrb	w0, [x0]
   30678:	and	w0, w0, #0x10
   3067c:	cmp	w0, #0x0
   30680:	cset	w0, eq  // eq = none
   30684:	and	w0, w0, #0xff
   30688:	cmp	w0, #0x0
   3068c:	b.eq	309b4 <PyInit__decimal@@Base+0x18cdc>  // b.none
   30690:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30694:	add	x0, x0, #0x6f8
   30698:	ldr	x1, [x0]
   3069c:	ldr	x0, [sp, #1328]
   306a0:	blr	x1
   306a4:	b	309b4 <PyInit__decimal@@Base+0x18cdc>
   306a8:	add	x0, sp, #0x48
   306ac:	str	x0, [sp, #1280]
   306b0:	ldr	x0, [sp, #1280]
   306b4:	str	x0, [sp, #1272]
   306b8:	ldr	x0, [sp, #1272]
   306bc:	ldr	x1, [x0, #40]
   306c0:	ldr	x0, [sp, #1272]
   306c4:	ldr	x0, [x0, #24]
   306c8:	lsl	x0, x0, #3
   306cc:	sub	x0, x0, #0x8
   306d0:	add	x0, x1, x0
   306d4:	ldr	x0, [x0]
   306d8:	cmp	x0, #0x0
   306dc:	cset	w0, eq  // eq = none
   306e0:	and	w0, w0, #0xff
   306e4:	cmp	w0, #0x0
   306e8:	cset	w0, eq  // eq = none
   306ec:	and	w0, w0, #0xff
   306f0:	and	x0, x0, #0xff
   306f4:	str	x0, [sp, #1512]
   306f8:	add	x0, sp, #0x48
   306fc:	str	x0, [sp, #1304]
   30700:	ldr	x0, [sp, #1304]
   30704:	str	x0, [sp, #1296]
   30708:	ldr	x0, [sp, #1296]
   3070c:	ldrb	w0, [x0]
   30710:	and	w0, w0, #0xe0
   30714:	cmp	w0, #0x0
   30718:	cset	w0, eq  // eq = none
   3071c:	and	w0, w0, #0xff
   30720:	cmp	w0, #0x0
   30724:	b.eq	30740 <PyInit__decimal@@Base+0x18a68>  // b.none
   30728:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3072c:	add	x0, x0, #0x6f8
   30730:	ldr	x1, [x0]
   30734:	ldr	x0, [sp, #1304]
   30738:	ldr	x0, [x0, #40]
   3073c:	blr	x1
   30740:	ldr	x0, [sp, #1304]
   30744:	str	x0, [sp, #1288]
   30748:	ldr	x0, [sp, #1288]
   3074c:	ldrb	w0, [x0]
   30750:	and	w0, w0, #0x10
   30754:	cmp	w0, #0x0
   30758:	cset	w0, eq  // eq = none
   3075c:	and	w0, w0, #0xff
   30760:	cmp	w0, #0x0
   30764:	b.eq	3077c <PyInit__decimal@@Base+0x18aa4>  // b.none
   30768:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3076c:	add	x0, x0, #0x6f8
   30770:	ldr	x1, [x0]
   30774:	ldr	x0, [sp, #1304]
   30778:	blr	x1
   3077c:	nop
   30780:	ldr	x0, [sp, #48]
   30784:	ldr	x0, [x0, #24]
   30788:	str	x0, [sp, #1520]
   3078c:	ldr	x0, [sp, #48]
   30790:	ldr	x0, [x0, #40]
   30794:	ldr	x1, [sp, #1520]
   30798:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   3079c:	str	x0, [sp, #1520]
   307a0:	ldr	x0, [sp, #48]
   307a4:	str	x0, [sp, #1248]
   307a8:	ldr	x0, [sp, #1520]
   307ac:	str	x0, [sp, #1240]
   307b0:	ldr	x0, [sp, #16]
   307b4:	str	x0, [sp, #1232]
   307b8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   307bc:	add	x0, x0, #0x6d8
   307c0:	ldr	x0, [x0]
   307c4:	ldr	x2, [sp, #1240]
   307c8:	ldr	x1, [sp, #1240]
   307cc:	cmp	x2, x0
   307d0:	csel	x0, x1, x0, ge  // ge = tcont
   307d4:	str	x0, [sp, #1240]
   307d8:	ldr	x0, [sp, #1248]
   307dc:	ldr	x0, [x0, #32]
   307e0:	ldr	x1, [sp, #1240]
   307e4:	cmp	x1, x0
   307e8:	b.eq	30844 <PyInit__decimal@@Base+0x18b6c>  // b.none
   307ec:	ldr	x0, [sp, #1248]
   307f0:	str	x0, [sp, #1224]
   307f4:	ldr	x0, [sp, #1224]
   307f8:	ldrb	w0, [x0]
   307fc:	and	w0, w0, #0x20
   30800:	cmp	w0, #0x0
   30804:	b.eq	30830 <PyInit__decimal@@Base+0x18b58>  // b.none
   30808:	ldr	x0, [sp, #1248]
   3080c:	ldr	x0, [x0, #32]
   30810:	ldr	x1, [sp, #1240]
   30814:	cmp	x1, x0
   30818:	b.le	3084c <PyInit__decimal@@Base+0x18b74>
   3081c:	ldr	x2, [sp, #1232]
   30820:	ldr	x1, [sp, #1240]
   30824:	ldr	x0, [sp, #1248]
   30828:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3082c:	b	30850 <PyInit__decimal@@Base+0x18b78>
   30830:	ldr	x2, [sp, #1232]
   30834:	ldr	x1, [sp, #1240]
   30838:	ldr	x0, [sp, #1248]
   3083c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   30840:	b	30850 <PyInit__decimal@@Base+0x18b78>
   30844:	nop
   30848:	b	30850 <PyInit__decimal@@Base+0x18b78>
   3084c:	nop
   30850:	ldrb	w1, [sp, #1511]
   30854:	ldrb	w0, [sp, #1510]
   30858:	eor	w0, w1, w0
   3085c:	and	w1, w0, #0xff
   30860:	ldr	x0, [sp, #48]
   30864:	str	x0, [sp, #1264]
   30868:	mov	w0, w1
   3086c:	strb	w0, [sp, #1263]
   30870:	ldr	x0, [sp, #1264]
   30874:	ldrb	w0, [x0]
   30878:	and	w0, w0, #0xfffffff0
   3087c:	and	w1, w0, #0xff
   30880:	ldr	x0, [sp, #1264]
   30884:	strb	w1, [x0]
   30888:	ldr	x0, [sp, #1264]
   3088c:	ldrb	w1, [x0]
   30890:	ldrb	w0, [sp, #1263]
   30894:	orr	w0, w1, w0
   30898:	and	w1, w0, #0xff
   3089c:	ldr	x0, [sp, #1264]
   308a0:	strb	w1, [x0]
   308a4:	nop
   308a8:	ldr	x0, [sp, #48]
   308ac:	ldr	x1, [sp, #1520]
   308b0:	str	x1, [x0, #24]
   308b4:	ldr	x0, [sp, #48]
   308b8:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   308bc:	ldr	x1, [sp, #1488]
   308c0:	ldr	x0, [sp, #1528]
   308c4:	sub	x0, x1, x0
   308c8:	str	x0, [sp, #1496]
   308cc:	ldr	x0, [sp, #1512]
   308d0:	cmp	x0, #0x0
   308d4:	b.eq	3094c <PyInit__decimal@@Base+0x18c74>  // b.none
   308d8:	ldr	x0, [sp, #48]
   308dc:	ldr	x0, [x0, #40]
   308e0:	ldr	x0, [x0]
   308e4:	str	x0, [sp, #1216]
   308e8:	ldr	x2, [sp, #1216]
   308ec:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   308f0:	movk	x0, #0xcccd
   308f4:	umulh	x0, x2, x0
   308f8:	lsr	x1, x0, #3
   308fc:	mov	x0, x1
   30900:	lsl	x0, x0, #2
   30904:	add	x0, x0, x1
   30908:	lsl	x0, x0, #1
   3090c:	sub	x1, x2, x0
   30910:	str	x1, [sp, #1464]
   30914:	ldr	x0, [sp, #1464]
   30918:	cmp	x0, #0x0
   3091c:	b.eq	3092c <PyInit__decimal@@Base+0x18c54>  // b.none
   30920:	ldr	x0, [sp, #1464]
   30924:	cmp	x0, #0x5
   30928:	b.ne	309a4 <PyInit__decimal@@Base+0x18ccc>  // b.any
   3092c:	ldr	x0, [sp, #48]
   30930:	ldr	x0, [x0, #40]
   30934:	ldr	x1, [x0]
   30938:	ldr	x0, [sp, #48]
   3093c:	ldr	x0, [x0, #40]
   30940:	add	x1, x1, #0x1
   30944:	str	x1, [x0]
   30948:	b	309a4 <PyInit__decimal@@Base+0x18ccc>
   3094c:	ldr	w0, [sp, #60]
   30950:	cmp	w0, #0x1
   30954:	b.ne	309a4 <PyInit__decimal@@Base+0x18ccc>  // b.any
   30958:	ldr	x0, [sp, #1496]
   3095c:	cmp	x0, #0x0
   30960:	b.le	309a4 <PyInit__decimal@@Base+0x18ccc>
   30964:	ldr	x0, [sp, #48]
   30968:	bl	26ea0 <PyInit__decimal@@Base+0xf1c8>
   3096c:	str	x0, [sp, #1472]
   30970:	ldr	x0, [sp, #1496]
   30974:	ldr	x2, [sp, #1472]
   30978:	ldr	x1, [sp, #1472]
   3097c:	cmp	x2, x0
   30980:	csel	x0, x1, x0, le
   30984:	str	x0, [sp, #1496]
   30988:	ldr	x1, [sp, #1496]
   3098c:	ldr	x0, [sp, #48]
   30990:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   30994:	ldr	x1, [sp, #1528]
   30998:	ldr	x0, [sp, #1496]
   3099c:	add	x0, x1, x0
   309a0:	str	x0, [sp, #1528]
   309a4:	ldr	x0, [sp, #48]
   309a8:	ldr	x1, [sp, #1528]
   309ac:	str	x1, [x0, #8]
   309b0:	b	309b8 <PyInit__decimal@@Base+0x18ce0>
   309b4:	nop
   309b8:	add	x0, sp, #0x278
   309bc:	str	x0, [sp, #1208]
   309c0:	ldr	x0, [sp, #1208]
   309c4:	str	x0, [sp, #1200]
   309c8:	ldr	x0, [sp, #1200]
   309cc:	ldrb	w0, [x0]
   309d0:	and	w0, w0, #0xe0
   309d4:	cmp	w0, #0x0
   309d8:	cset	w0, eq  // eq = none
   309dc:	and	w0, w0, #0xff
   309e0:	cmp	w0, #0x0
   309e4:	b.eq	30a00 <PyInit__decimal@@Base+0x18d28>  // b.none
   309e8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   309ec:	add	x0, x0, #0x6f8
   309f0:	ldr	x1, [x0]
   309f4:	ldr	x0, [sp, #1208]
   309f8:	ldr	x0, [x0, #40]
   309fc:	blr	x1
   30a00:	ldr	x0, [sp, #1208]
   30a04:	str	x0, [sp, #1192]
   30a08:	ldr	x0, [sp, #1192]
   30a0c:	ldrb	w0, [x0]
   30a10:	and	w0, w0, #0x10
   30a14:	cmp	w0, #0x0
   30a18:	cset	w0, eq  // eq = none
   30a1c:	and	w0, w0, #0xff
   30a20:	cmp	w0, #0x0
   30a24:	b.eq	30a3c <PyInit__decimal@@Base+0x18d64>  // b.none
   30a28:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30a2c:	add	x0, x0, #0x6f8
   30a30:	ldr	x1, [x0]
   30a34:	ldr	x0, [sp, #1208]
   30a38:	blr	x1
   30a3c:	nop
   30a40:	ldr	x2, [sp, #16]
   30a44:	ldr	x1, [sp, #24]
   30a48:	ldr	x0, [sp, #48]
   30a4c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   30a50:	b	30a58 <PyInit__decimal@@Base+0x18d80>
   30a54:	nop
   30a58:	ldp	x29, x30, [sp]
   30a5c:	add	sp, sp, #0x600
   30a60:	ret
   30a64:	stp	x29, x30, [sp, #-64]!
   30a68:	mov	x29, sp
   30a6c:	str	x0, [sp, #56]
   30a70:	str	x1, [sp, #48]
   30a74:	str	x2, [sp, #40]
   30a78:	str	x3, [sp, #32]
   30a7c:	str	x4, [sp, #24]
   30a80:	ldr	x5, [sp, #24]
   30a84:	ldr	x4, [sp, #32]
   30a88:	ldr	x3, [sp, #40]
   30a8c:	ldr	x2, [sp, #48]
   30a90:	ldr	x1, [sp, #56]
   30a94:	mov	w0, #0x1                   	// #1
   30a98:	bl	30054 <PyInit__decimal@@Base+0x1837c>
   30a9c:	nop
   30aa0:	ldp	x29, x30, [sp], #64
   30aa4:	ret
   30aa8:	sub	sp, sp, #0x3c0
   30aac:	stp	x29, x30, [sp]
   30ab0:	mov	x29, sp
   30ab4:	str	x19, [sp, #16]
   30ab8:	str	x0, [sp, #72]
   30abc:	str	x1, [sp, #64]
   30ac0:	str	x2, [sp, #56]
   30ac4:	str	x3, [sp, #48]
   30ac8:	str	x4, [sp, #40]
   30acc:	str	x5, [sp, #32]
   30ad0:	mov	w0, #0x30                  	// #48
   30ad4:	strb	w0, [sp, #88]
   30ad8:	str	xzr, [sp, #96]
   30adc:	str	xzr, [sp, #104]
   30ae0:	str	xzr, [sp, #112]
   30ae4:	mov	x0, #0x40                  	// #64
   30ae8:	str	x0, [sp, #120]
   30aec:	add	x0, sp, #0x88
   30af0:	str	x0, [sp, #128]
   30af4:	ldr	x0, [sp, #56]
   30af8:	str	x0, [sp, #864]
   30afc:	ldr	x0, [sp, #864]
   30b00:	ldrb	w0, [x0]
   30b04:	and	w0, w0, #0x1
   30b08:	and	w0, w0, #0xff
   30b0c:	strb	w0, [sp, #943]
   30b10:	ldr	x0, [sp, #56]
   30b14:	str	x0, [sp, #872]
   30b18:	ldr	x0, [sp, #872]
   30b1c:	ldrb	w0, [x0]
   30b20:	and	w0, w0, #0x1
   30b24:	and	w1, w0, #0xff
   30b28:	ldr	x0, [sp, #48]
   30b2c:	str	x0, [sp, #880]
   30b30:	ldr	x0, [sp, #880]
   30b34:	ldrb	w0, [x0]
   30b38:	and	w0, w0, #0x1
   30b3c:	and	w0, w0, #0xff
   30b40:	eor	w0, w1, w0
   30b44:	strb	w0, [sp, #942]
   30b48:	ldr	x0, [sp, #56]
   30b4c:	ldr	x1, [x0, #8]
   30b50:	ldr	x0, [sp, #48]
   30b54:	ldr	x0, [x0, #8]
   30b58:	cmp	x1, x0
   30b5c:	csel	x0, x1, x0, le
   30b60:	str	x0, [sp, #928]
   30b64:	ldr	x0, [sp, #56]
   30b68:	str	x0, [sp, #896]
   30b6c:	ldr	x0, [sp, #896]
   30b70:	str	x0, [sp, #888]
   30b74:	ldr	x0, [sp, #888]
   30b78:	ldr	x1, [x0, #40]
   30b7c:	ldr	x0, [sp, #888]
   30b80:	ldr	x0, [x0, #24]
   30b84:	lsl	x0, x0, #3
   30b88:	sub	x0, x0, #0x8
   30b8c:	add	x0, x1, x0
   30b90:	ldr	x0, [x0]
   30b94:	cmp	x0, #0x0
   30b98:	cset	w0, eq  // eq = none
   30b9c:	and	w0, w0, #0xff
   30ba0:	cmp	w0, #0x0
   30ba4:	b.eq	30be4 <PyInit__decimal@@Base+0x18f0c>  // b.none
   30ba8:	ldr	x2, [sp, #32]
   30bac:	ldr	x1, [sp, #56]
   30bb0:	ldr	x0, [sp, #64]
   30bb4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   30bb8:	cmp	w0, #0x0
   30bbc:	b.eq	31418 <PyInit__decimal@@Base+0x19740>  // b.none
   30bc0:	ldr	x0, [sp, #64]
   30bc4:	ldr	x1, [sp, #928]
   30bc8:	str	x1, [x0, #8]
   30bcc:	mov	x3, #0x0                   	// #0
   30bd0:	mov	x2, #0x0                   	// #0
   30bd4:	ldrb	w1, [sp, #942]
   30bd8:	ldr	x0, [sp, #72]
   30bdc:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   30be0:	b	31478 <PyInit__decimal@@Base+0x197a0>
   30be4:	ldr	x0, [sp, #56]
   30be8:	str	x0, [sp, #848]
   30bec:	ldr	x0, [sp, #848]
   30bf0:	ldr	x1, [x0, #8]
   30bf4:	ldr	x0, [sp, #848]
   30bf8:	ldr	x0, [x0, #16]
   30bfc:	add	x0, x1, x0
   30c00:	sub	x1, x0, #0x1
   30c04:	ldr	x0, [sp, #48]
   30c08:	str	x0, [sp, #856]
   30c0c:	ldr	x0, [sp, #856]
   30c10:	ldr	x2, [x0, #8]
   30c14:	ldr	x0, [sp, #856]
   30c18:	ldr	x0, [x0, #16]
   30c1c:	add	x0, x2, x0
   30c20:	sub	x0, x0, #0x1
   30c24:	sub	x0, x1, x0
   30c28:	str	x0, [sp, #920]
   30c2c:	ldr	x0, [sp, #920]
   30c30:	cmp	x0, #0x0
   30c34:	b.ge	30cc4 <PyInit__decimal@@Base+0x18fec>  // b.tcont
   30c38:	ldr	x0, [sp, #56]
   30c3c:	ldr	x1, [x0, #8]
   30c40:	ldr	x0, [sp, #48]
   30c44:	ldr	x0, [x0, #8]
   30c48:	cmp	x1, x0
   30c4c:	b.le	30c94 <PyInit__decimal@@Base+0x18fbc>
   30c50:	ldr	x0, [sp, #56]
   30c54:	ldr	x1, [x0, #8]
   30c58:	ldr	x0, [sp, #48]
   30c5c:	ldr	x0, [x0, #8]
   30c60:	sub	x0, x1, x0
   30c64:	str	x0, [sp, #912]
   30c68:	ldr	x3, [sp, #32]
   30c6c:	ldr	x2, [sp, #912]
   30c70:	ldr	x1, [sp, #56]
   30c74:	ldr	x0, [sp, #64]
   30c78:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   30c7c:	cmp	w0, #0x0
   30c80:	b.eq	31420 <PyInit__decimal@@Base+0x19748>  // b.none
   30c84:	ldr	x0, [sp, #64]
   30c88:	ldr	x1, [sp, #928]
   30c8c:	str	x1, [x0, #8]
   30c90:	b	30cac <PyInit__decimal@@Base+0x18fd4>
   30c94:	ldr	x2, [sp, #32]
   30c98:	ldr	x1, [sp, #56]
   30c9c:	ldr	x0, [sp, #64]
   30ca0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   30ca4:	cmp	w0, #0x0
   30ca8:	b.eq	31428 <PyInit__decimal@@Base+0x19750>  // b.none
   30cac:	mov	x3, #0x0                   	// #0
   30cb0:	mov	x2, #0x0                   	// #0
   30cb4:	ldrb	w1, [sp, #942]
   30cb8:	ldr	x0, [sp, #72]
   30cbc:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   30cc0:	b	31478 <PyInit__decimal@@Base+0x197a0>
   30cc4:	ldr	x0, [sp, #40]
   30cc8:	ldr	x0, [x0]
   30ccc:	ldr	x1, [sp, #920]
   30cd0:	cmp	x1, x0
   30cd4:	b.le	30cf0 <PyInit__decimal@@Base+0x19018>
   30cd8:	ldr	x0, [sp, #32]
   30cdc:	ldr	w0, [x0]
   30ce0:	orr	w1, w0, #0x8
   30ce4:	ldr	x0, [sp, #32]
   30ce8:	str	w1, [x0]
   30cec:	b	31454 <PyInit__decimal@@Base+0x1977c>
   30cf0:	ldr	x0, [sp, #56]
   30cf4:	ldr	x1, [x0, #8]
   30cf8:	ldr	x0, [sp, #48]
   30cfc:	ldr	x0, [x0, #8]
   30d00:	cmp	x1, x0
   30d04:	b.eq	30d84 <PyInit__decimal@@Base+0x190ac>  // b.none
   30d08:	ldr	x0, [sp, #56]
   30d0c:	ldr	x1, [x0, #8]
   30d10:	ldr	x0, [sp, #48]
   30d14:	ldr	x0, [x0, #8]
   30d18:	sub	x0, x1, x0
   30d1c:	str	x0, [sp, #912]
   30d20:	ldr	x0, [sp, #912]
   30d24:	cmp	x0, #0x0
   30d28:	b.le	30d54 <PyInit__decimal@@Base+0x1907c>
   30d2c:	add	x0, sp, #0x58
   30d30:	ldr	x3, [sp, #32]
   30d34:	ldr	x2, [sp, #912]
   30d38:	ldr	x1, [sp, #56]
   30d3c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   30d40:	cmp	w0, #0x0
   30d44:	b.eq	31430 <PyInit__decimal@@Base+0x19758>  // b.none
   30d48:	add	x0, sp, #0x58
   30d4c:	str	x0, [sp, #56]
   30d50:	b	30d84 <PyInit__decimal@@Base+0x190ac>
   30d54:	ldr	x0, [sp, #912]
   30d58:	neg	x0, x0
   30d5c:	str	x0, [sp, #912]
   30d60:	add	x0, sp, #0x58
   30d64:	ldr	x3, [sp, #32]
   30d68:	ldr	x2, [sp, #912]
   30d6c:	ldr	x1, [sp, #48]
   30d70:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   30d74:	cmp	w0, #0x0
   30d78:	b.eq	31438 <PyInit__decimal@@Base+0x19760>  // b.none
   30d7c:	add	x0, sp, #0x58
   30d80:	str	x0, [sp, #48]
   30d84:	ldr	x0, [sp, #56]
   30d88:	ldr	x1, [x0, #24]
   30d8c:	ldr	x0, [sp, #48]
   30d90:	ldr	x0, [x0, #24]
   30d94:	sub	x0, x1, x0
   30d98:	add	x0, x0, #0x1
   30d9c:	str	x0, [sp, #952]
   30da0:	ldr	x1, [sp, #72]
   30da4:	ldr	x0, [sp, #56]
   30da8:	cmp	x1, x0
   30dac:	b.ne	30dc4 <PyInit__decimal@@Base+0x190ec>  // b.any
   30db0:	ldr	x0, [sp, #56]
   30db4:	ldr	x0, [x0, #24]
   30db8:	ldr	x1, [sp, #952]
   30dbc:	cmp	x1, x0
   30dc0:	b.lt	30ea0 <PyInit__decimal@@Base+0x191c8>  // b.tstop
   30dc4:	ldr	x1, [sp, #72]
   30dc8:	ldr	x0, [sp, #48]
   30dcc:	cmp	x1, x0
   30dd0:	b.ne	30de8 <PyInit__decimal@@Base+0x19110>  // b.any
   30dd4:	ldr	x0, [sp, #48]
   30dd8:	ldr	x0, [x0, #24]
   30ddc:	ldr	x1, [sp, #952]
   30de0:	cmp	x1, x0
   30de4:	b.lt	30ea0 <PyInit__decimal@@Base+0x191c8>  // b.tstop
   30de8:	ldr	x0, [sp, #72]
   30dec:	str	x0, [sp, #840]
   30df0:	ldr	x0, [sp, #952]
   30df4:	str	x0, [sp, #832]
   30df8:	ldr	x0, [sp, #32]
   30dfc:	str	x0, [sp, #824]
   30e00:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30e04:	add	x0, x0, #0x6d8
   30e08:	ldr	x0, [x0]
   30e0c:	ldr	x2, [sp, #832]
   30e10:	ldr	x1, [sp, #832]
   30e14:	cmp	x2, x0
   30e18:	csel	x0, x1, x0, ge  // ge = tcont
   30e1c:	str	x0, [sp, #832]
   30e20:	ldr	x0, [sp, #840]
   30e24:	ldr	x0, [x0, #32]
   30e28:	ldr	x1, [sp, #832]
   30e2c:	cmp	x1, x0
   30e30:	b.ne	30e3c <PyInit__decimal@@Base+0x19164>  // b.any
   30e34:	mov	w0, #0x1                   	// #1
   30e38:	b	30e98 <PyInit__decimal@@Base+0x191c0>
   30e3c:	ldr	x0, [sp, #840]
   30e40:	str	x0, [sp, #816]
   30e44:	ldr	x0, [sp, #816]
   30e48:	ldrb	w0, [x0]
   30e4c:	and	w0, w0, #0x20
   30e50:	cmp	w0, #0x0
   30e54:	b.eq	30e88 <PyInit__decimal@@Base+0x191b0>  // b.none
   30e58:	ldr	x0, [sp, #840]
   30e5c:	ldr	x0, [x0, #32]
   30e60:	ldr	x1, [sp, #832]
   30e64:	cmp	x1, x0
   30e68:	b.le	30e80 <PyInit__decimal@@Base+0x191a8>
   30e6c:	ldr	x2, [sp, #824]
   30e70:	ldr	x1, [sp, #832]
   30e74:	ldr	x0, [sp, #840]
   30e78:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   30e7c:	b	30e98 <PyInit__decimal@@Base+0x191c0>
   30e80:	mov	w0, #0x1                   	// #1
   30e84:	b	30e98 <PyInit__decimal@@Base+0x191c0>
   30e88:	ldr	x2, [sp, #824]
   30e8c:	ldr	x1, [sp, #832]
   30e90:	ldr	x0, [sp, #840]
   30e94:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   30e98:	cmp	w0, #0x0
   30e9c:	b.eq	31440 <PyInit__decimal@@Base+0x19768>  // b.none
   30ea0:	ldr	x0, [sp, #48]
   30ea4:	ldr	x0, [x0, #24]
   30ea8:	str	x0, [sp, #944]
   30eac:	ldr	x1, [sp, #64]
   30eb0:	ldr	x0, [sp, #56]
   30eb4:	cmp	x1, x0
   30eb8:	b.ne	30ed0 <PyInit__decimal@@Base+0x191f8>  // b.any
   30ebc:	ldr	x0, [sp, #56]
   30ec0:	ldr	x0, [x0, #24]
   30ec4:	ldr	x1, [sp, #944]
   30ec8:	cmp	x1, x0
   30ecc:	b.lt	30f88 <PyInit__decimal@@Base+0x192b0>  // b.tstop
   30ed0:	ldr	x0, [sp, #64]
   30ed4:	str	x0, [sp, #808]
   30ed8:	ldr	x0, [sp, #944]
   30edc:	str	x0, [sp, #800]
   30ee0:	ldr	x0, [sp, #32]
   30ee4:	str	x0, [sp, #792]
   30ee8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   30eec:	add	x0, x0, #0x6d8
   30ef0:	ldr	x0, [x0]
   30ef4:	ldr	x2, [sp, #800]
   30ef8:	ldr	x1, [sp, #800]
   30efc:	cmp	x2, x0
   30f00:	csel	x0, x1, x0, ge  // ge = tcont
   30f04:	str	x0, [sp, #800]
   30f08:	ldr	x0, [sp, #808]
   30f0c:	ldr	x0, [x0, #32]
   30f10:	ldr	x1, [sp, #800]
   30f14:	cmp	x1, x0
   30f18:	b.ne	30f24 <PyInit__decimal@@Base+0x1924c>  // b.any
   30f1c:	mov	w0, #0x1                   	// #1
   30f20:	b	30f80 <PyInit__decimal@@Base+0x192a8>
   30f24:	ldr	x0, [sp, #808]
   30f28:	str	x0, [sp, #784]
   30f2c:	ldr	x0, [sp, #784]
   30f30:	ldrb	w0, [x0]
   30f34:	and	w0, w0, #0x20
   30f38:	cmp	w0, #0x0
   30f3c:	b.eq	30f70 <PyInit__decimal@@Base+0x19298>  // b.none
   30f40:	ldr	x0, [sp, #808]
   30f44:	ldr	x0, [x0, #32]
   30f48:	ldr	x1, [sp, #800]
   30f4c:	cmp	x1, x0
   30f50:	b.le	30f68 <PyInit__decimal@@Base+0x19290>
   30f54:	ldr	x2, [sp, #792]
   30f58:	ldr	x1, [sp, #800]
   30f5c:	ldr	x0, [sp, #808]
   30f60:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   30f64:	b	30f80 <PyInit__decimal@@Base+0x192a8>
   30f68:	mov	w0, #0x1                   	// #1
   30f6c:	b	30f80 <PyInit__decimal@@Base+0x192a8>
   30f70:	ldr	x2, [sp, #792]
   30f74:	ldr	x1, [sp, #800]
   30f78:	ldr	x0, [sp, #808]
   30f7c:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   30f80:	cmp	w0, #0x0
   30f84:	b.eq	31448 <PyInit__decimal@@Base+0x19770>  // b.none
   30f88:	ldr	x0, [sp, #48]
   30f8c:	ldr	x0, [x0, #24]
   30f90:	cmp	x0, #0x1
   30f94:	b.ne	31028 <PyInit__decimal@@Base+0x19350>  // b.any
   30f98:	ldr	x0, [sp, #56]
   30f9c:	ldr	x0, [x0, #24]
   30fa0:	cmp	x0, #0x1
   30fa4:	b.ne	30fe0 <PyInit__decimal@@Base+0x19308>  // b.any
   30fa8:	ldr	x0, [sp, #72]
   30fac:	ldr	x4, [x0, #40]
   30fb0:	ldr	x0, [sp, #64]
   30fb4:	ldr	x1, [x0, #40]
   30fb8:	ldr	x0, [sp, #56]
   30fbc:	ldr	x0, [x0, #40]
   30fc0:	ldr	x2, [x0]
   30fc4:	ldr	x0, [sp, #48]
   30fc8:	ldr	x0, [x0, #40]
   30fcc:	ldr	x0, [x0]
   30fd0:	mov	x3, x0
   30fd4:	mov	x0, x4
   30fd8:	bl	24270 <PyInit__decimal@@Base+0xc598>
   30fdc:	b	31108 <PyInit__decimal@@Base+0x19430>
   30fe0:	ldr	x0, [sp, #72]
   30fe4:	ldr	x4, [x0, #40]
   30fe8:	ldr	x0, [sp, #56]
   30fec:	ldr	x1, [x0, #40]
   30ff0:	ldr	x0, [sp, #56]
   30ff4:	ldr	x0, [x0, #24]
   30ff8:	mov	x5, x0
   30ffc:	ldr	x0, [sp, #48]
   31000:	ldr	x0, [x0, #40]
   31004:	ldr	x2, [x0]
   31008:	ldr	x0, [sp, #64]
   3100c:	ldr	x19, [x0, #40]
   31010:	mov	x3, x2
   31014:	mov	x2, x5
   31018:	mov	x0, x4
   3101c:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   31020:	str	x0, [x19]
   31024:	b	31108 <PyInit__decimal@@Base+0x19430>
   31028:	ldr	x0, [sp, #48]
   3102c:	ldr	x0, [x0, #24]
   31030:	cmp	x0, #0x400
   31034:	b.gt	310a0 <PyInit__decimal@@Base+0x193c8>
   31038:	ldr	x0, [sp, #72]
   3103c:	ldr	x6, [x0, #40]
   31040:	ldr	x0, [sp, #64]
   31044:	ldr	x1, [x0, #40]
   31048:	ldr	x0, [sp, #56]
   3104c:	ldr	x2, [x0, #40]
   31050:	ldr	x0, [sp, #48]
   31054:	ldr	x3, [x0, #40]
   31058:	ldr	x0, [sp, #56]
   3105c:	ldr	x0, [x0, #24]
   31060:	mov	x4, x0
   31064:	ldr	x0, [sp, #48]
   31068:	ldr	x0, [x0, #24]
   3106c:	mov	x5, x0
   31070:	mov	x0, x6
   31074:	bl	1a730 <PyInit__decimal@@Base+0x2a58>
   31078:	str	w0, [sp, #908]
   3107c:	ldr	w0, [sp, #908]
   31080:	cmn	w0, #0x1
   31084:	b.ne	31108 <PyInit__decimal@@Base+0x19430>  // b.any
   31088:	ldr	x0, [sp, #32]
   3108c:	ldr	w0, [x0]
   31090:	orr	w1, w0, #0x200
   31094:	ldr	x0, [sp, #32]
   31098:	str	w1, [x0]
   3109c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   310a0:	ldr	x4, [sp, #32]
   310a4:	ldr	x3, [sp, #48]
   310a8:	ldr	x2, [sp, #56]
   310ac:	ldr	x1, [sp, #64]
   310b0:	ldr	x0, [sp, #72]
   310b4:	bl	3bc50 <PyInit__decimal@@Base+0x23f78>
   310b8:	ldr	x0, [sp, #72]
   310bc:	str	x0, [sp, #776]
   310c0:	ldr	x0, [sp, #776]
   310c4:	ldrb	w0, [x0]
   310c8:	and	w0, w0, #0xe
   310cc:	cmp	w0, #0x0
   310d0:	b.ne	31450 <PyInit__decimal@@Base+0x19778>  // b.any
   310d4:	ldr	x0, [sp, #64]
   310d8:	str	x0, [sp, #768]
   310dc:	ldr	x0, [sp, #768]
   310e0:	ldrb	w0, [x0]
   310e4:	and	w0, w0, #0xe
   310e8:	cmp	w0, #0x0
   310ec:	b.ne	31450 <PyInit__decimal@@Base+0x19778>  // b.any
   310f0:	ldr	x0, [sp, #72]
   310f4:	ldr	x0, [x0, #24]
   310f8:	str	x0, [sp, #952]
   310fc:	ldr	x0, [sp, #64]
   31100:	ldr	x0, [x0, #24]
   31104:	str	x0, [sp, #944]
   31108:	ldr	x0, [sp, #72]
   3110c:	ldr	x0, [x0, #40]
   31110:	ldr	x1, [sp, #952]
   31114:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   31118:	str	x0, [sp, #952]
   3111c:	ldr	x0, [sp, #72]
   31120:	str	x0, [sp, #744]
   31124:	ldr	x0, [sp, #952]
   31128:	str	x0, [sp, #736]
   3112c:	ldr	x0, [sp, #32]
   31130:	str	x0, [sp, #728]
   31134:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31138:	add	x0, x0, #0x6d8
   3113c:	ldr	x0, [x0]
   31140:	ldr	x2, [sp, #736]
   31144:	ldr	x1, [sp, #736]
   31148:	cmp	x2, x0
   3114c:	csel	x0, x1, x0, ge  // ge = tcont
   31150:	str	x0, [sp, #736]
   31154:	ldr	x0, [sp, #744]
   31158:	ldr	x0, [x0, #32]
   3115c:	ldr	x1, [sp, #736]
   31160:	cmp	x1, x0
   31164:	b.eq	311c0 <PyInit__decimal@@Base+0x194e8>  // b.none
   31168:	ldr	x0, [sp, #744]
   3116c:	str	x0, [sp, #720]
   31170:	ldr	x0, [sp, #720]
   31174:	ldrb	w0, [x0]
   31178:	and	w0, w0, #0x20
   3117c:	cmp	w0, #0x0
   31180:	b.eq	311ac <PyInit__decimal@@Base+0x194d4>  // b.none
   31184:	ldr	x0, [sp, #744]
   31188:	ldr	x0, [x0, #32]
   3118c:	ldr	x1, [sp, #736]
   31190:	cmp	x1, x0
   31194:	b.le	311c8 <PyInit__decimal@@Base+0x194f0>
   31198:	ldr	x2, [sp, #728]
   3119c:	ldr	x1, [sp, #736]
   311a0:	ldr	x0, [sp, #744]
   311a4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   311a8:	b	311cc <PyInit__decimal@@Base+0x194f4>
   311ac:	ldr	x2, [sp, #728]
   311b0:	ldr	x1, [sp, #736]
   311b4:	ldr	x0, [sp, #744]
   311b8:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   311bc:	b	311cc <PyInit__decimal@@Base+0x194f4>
   311c0:	nop
   311c4:	b	311cc <PyInit__decimal@@Base+0x194f4>
   311c8:	nop
   311cc:	ldr	x0, [sp, #72]
   311d0:	ldr	x1, [sp, #952]
   311d4:	str	x1, [x0, #24]
   311d8:	ldr	x0, [sp, #72]
   311dc:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   311e0:	ldr	x0, [sp, #72]
   311e4:	str	x0, [sp, #760]
   311e8:	ldrb	w0, [sp, #942]
   311ec:	strb	w0, [sp, #759]
   311f0:	ldr	x0, [sp, #760]
   311f4:	ldrb	w0, [x0]
   311f8:	and	w0, w0, #0xfffffff0
   311fc:	and	w1, w0, #0xff
   31200:	ldr	x0, [sp, #760]
   31204:	strb	w1, [x0]
   31208:	ldr	x0, [sp, #760]
   3120c:	ldrb	w1, [x0]
   31210:	ldrb	w0, [sp, #759]
   31214:	orr	w0, w1, w0
   31218:	and	w1, w0, #0xff
   3121c:	ldr	x0, [sp, #760]
   31220:	strb	w1, [x0]
   31224:	nop
   31228:	ldr	x0, [sp, #72]
   3122c:	str	xzr, [x0, #8]
   31230:	ldr	x0, [sp, #72]
   31234:	ldr	x1, [x0, #16]
   31238:	ldr	x0, [sp, #40]
   3123c:	ldr	x0, [x0]
   31240:	cmp	x1, x0
   31244:	b.le	31260 <PyInit__decimal@@Base+0x19588>
   31248:	ldr	x0, [sp, #32]
   3124c:	ldr	w0, [x0]
   31250:	orr	w1, w0, #0x8
   31254:	ldr	x0, [sp, #32]
   31258:	str	w1, [x0]
   3125c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31260:	ldr	x0, [sp, #64]
   31264:	ldr	x0, [x0, #40]
   31268:	ldr	x1, [sp, #944]
   3126c:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   31270:	str	x0, [sp, #944]
   31274:	ldr	x0, [sp, #64]
   31278:	str	x0, [sp, #696]
   3127c:	ldr	x0, [sp, #944]
   31280:	str	x0, [sp, #688]
   31284:	ldr	x0, [sp, #32]
   31288:	str	x0, [sp, #680]
   3128c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31290:	add	x0, x0, #0x6d8
   31294:	ldr	x0, [x0]
   31298:	ldr	x2, [sp, #688]
   3129c:	ldr	x1, [sp, #688]
   312a0:	cmp	x2, x0
   312a4:	csel	x0, x1, x0, ge  // ge = tcont
   312a8:	str	x0, [sp, #688]
   312ac:	ldr	x0, [sp, #696]
   312b0:	ldr	x0, [x0, #32]
   312b4:	ldr	x1, [sp, #688]
   312b8:	cmp	x1, x0
   312bc:	b.eq	31318 <PyInit__decimal@@Base+0x19640>  // b.none
   312c0:	ldr	x0, [sp, #696]
   312c4:	str	x0, [sp, #672]
   312c8:	ldr	x0, [sp, #672]
   312cc:	ldrb	w0, [x0]
   312d0:	and	w0, w0, #0x20
   312d4:	cmp	w0, #0x0
   312d8:	b.eq	31304 <PyInit__decimal@@Base+0x1962c>  // b.none
   312dc:	ldr	x0, [sp, #696]
   312e0:	ldr	x0, [x0, #32]
   312e4:	ldr	x1, [sp, #688]
   312e8:	cmp	x1, x0
   312ec:	b.le	31320 <PyInit__decimal@@Base+0x19648>
   312f0:	ldr	x2, [sp, #680]
   312f4:	ldr	x1, [sp, #688]
   312f8:	ldr	x0, [sp, #696]
   312fc:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   31300:	b	31324 <PyInit__decimal@@Base+0x1964c>
   31304:	ldr	x2, [sp, #680]
   31308:	ldr	x1, [sp, #688]
   3130c:	ldr	x0, [sp, #696]
   31310:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   31314:	b	31324 <PyInit__decimal@@Base+0x1964c>
   31318:	nop
   3131c:	b	31324 <PyInit__decimal@@Base+0x1964c>
   31320:	nop
   31324:	ldr	x0, [sp, #64]
   31328:	ldr	x1, [sp, #944]
   3132c:	str	x1, [x0, #24]
   31330:	ldr	x0, [sp, #64]
   31334:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   31338:	ldr	x0, [sp, #64]
   3133c:	str	x0, [sp, #712]
   31340:	ldrb	w0, [sp, #943]
   31344:	strb	w0, [sp, #711]
   31348:	ldr	x0, [sp, #712]
   3134c:	ldrb	w0, [x0]
   31350:	and	w0, w0, #0xfffffff0
   31354:	and	w1, w0, #0xff
   31358:	ldr	x0, [sp, #712]
   3135c:	strb	w1, [x0]
   31360:	ldr	x0, [sp, #712]
   31364:	ldrb	w1, [x0]
   31368:	ldrb	w0, [sp, #711]
   3136c:	orr	w0, w1, w0
   31370:	and	w1, w0, #0xff
   31374:	ldr	x0, [sp, #712]
   31378:	strb	w1, [x0]
   3137c:	nop
   31380:	ldr	x0, [sp, #64]
   31384:	ldr	x1, [sp, #928]
   31388:	str	x1, [x0, #8]
   3138c:	add	x0, sp, #0x58
   31390:	str	x0, [sp, #664]
   31394:	ldr	x0, [sp, #664]
   31398:	str	x0, [sp, #656]
   3139c:	ldr	x0, [sp, #656]
   313a0:	ldrb	w0, [x0]
   313a4:	and	w0, w0, #0xe0
   313a8:	cmp	w0, #0x0
   313ac:	cset	w0, eq  // eq = none
   313b0:	and	w0, w0, #0xff
   313b4:	cmp	w0, #0x0
   313b8:	b.eq	313d4 <PyInit__decimal@@Base+0x196fc>  // b.none
   313bc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   313c0:	add	x0, x0, #0x6f8
   313c4:	ldr	x1, [x0]
   313c8:	ldr	x0, [sp, #664]
   313cc:	ldr	x0, [x0, #40]
   313d0:	blr	x1
   313d4:	ldr	x0, [sp, #664]
   313d8:	str	x0, [sp, #648]
   313dc:	ldr	x0, [sp, #648]
   313e0:	ldrb	w0, [x0]
   313e4:	and	w0, w0, #0x10
   313e8:	cmp	w0, #0x0
   313ec:	cset	w0, eq  // eq = none
   313f0:	and	w0, w0, #0xff
   313f4:	cmp	w0, #0x0
   313f8:	b.eq	31410 <PyInit__decimal@@Base+0x19738>  // b.none
   313fc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31400:	add	x0, x0, #0x6f8
   31404:	ldr	x1, [x0]
   31408:	ldr	x0, [sp, #664]
   3140c:	blr	x1
   31410:	nop
   31414:	b	31478 <PyInit__decimal@@Base+0x197a0>
   31418:	nop
   3141c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31420:	nop
   31424:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31428:	nop
   3142c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31430:	nop
   31434:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31438:	nop
   3143c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31440:	nop
   31444:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31448:	nop
   3144c:	b	31454 <PyInit__decimal@@Base+0x1977c>
   31450:	nop
   31454:	mov	w2, #0x4                   	// #4
   31458:	mov	w1, #0x0                   	// #0
   3145c:	ldr	x0, [sp, #72]
   31460:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   31464:	mov	w2, #0x4                   	// #4
   31468:	mov	w1, #0x0                   	// #0
   3146c:	ldr	x0, [sp, #64]
   31470:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   31474:	b	3138c <PyInit__decimal@@Base+0x196b4>
   31478:	ldr	x19, [sp, #16]
   3147c:	ldp	x29, x30, [sp]
   31480:	add	sp, sp, #0x3c0
   31484:	ret
   31488:	stp	x29, x30, [sp, #-160]!
   3148c:	mov	x29, sp
   31490:	str	x0, [sp, #56]
   31494:	str	x1, [sp, #48]
   31498:	str	x2, [sp, #40]
   3149c:	str	x3, [sp, #32]
   314a0:	str	x4, [sp, #24]
   314a4:	str	x5, [sp, #16]
   314a8:	ldr	x0, [sp, #40]
   314ac:	str	x0, [sp, #128]
   314b0:	ldr	x0, [sp, #128]
   314b4:	ldrb	w0, [x0]
   314b8:	and	w0, w0, #0x1
   314bc:	and	w1, w0, #0xff
   314c0:	ldr	x0, [sp, #32]
   314c4:	str	x0, [sp, #136]
   314c8:	ldr	x0, [sp, #136]
   314cc:	ldrb	w0, [x0]
   314d0:	and	w0, w0, #0x1
   314d4:	and	w0, w0, #0xff
   314d8:	eor	w0, w1, w0
   314dc:	strb	w0, [sp, #159]
   314e0:	ldr	x0, [sp, #40]
   314e4:	str	x0, [sp, #144]
   314e8:	ldr	x0, [sp, #144]
   314ec:	ldrb	w0, [x0]
   314f0:	and	w0, w0, #0xe
   314f4:	cmp	w0, #0x0
   314f8:	b.ne	31518 <PyInit__decimal@@Base+0x19840>  // b.any
   314fc:	ldr	x0, [sp, #32]
   31500:	str	x0, [sp, #120]
   31504:	ldr	x0, [sp, #120]
   31508:	ldrb	w0, [x0]
   3150c:	and	w0, w0, #0xe
   31510:	cmp	w0, #0x0
   31514:	b.eq	31644 <PyInit__decimal@@Base+0x1996c>  // b.none
   31518:	ldr	x4, [sp, #16]
   3151c:	ldr	x3, [sp, #24]
   31520:	ldr	x2, [sp, #32]
   31524:	ldr	x1, [sp, #40]
   31528:	ldr	x0, [sp, #56]
   3152c:	bl	2861c <PyInit__decimal@@Base+0x10944>
   31530:	cmp	w0, #0x0
   31534:	b.eq	3154c <PyInit__decimal@@Base+0x19874>  // b.none
   31538:	ldr	x2, [sp, #16]
   3153c:	ldr	x1, [sp, #56]
   31540:	ldr	x0, [sp, #48]
   31544:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   31548:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   3154c:	ldr	x0, [sp, #40]
   31550:	str	x0, [sp, #112]
   31554:	ldr	x0, [sp, #112]
   31558:	ldrb	w0, [x0]
   3155c:	and	w0, w0, #0x2
   31560:	cmp	w0, #0x0
   31564:	b.eq	315d0 <PyInit__decimal@@Base+0x198f8>  // b.none
   31568:	ldr	x0, [sp, #32]
   3156c:	str	x0, [sp, #104]
   31570:	ldr	x0, [sp, #104]
   31574:	ldrb	w0, [x0]
   31578:	and	w0, w0, #0x2
   3157c:	cmp	w0, #0x0
   31580:	b.eq	31598 <PyInit__decimal@@Base+0x198c0>  // b.none
   31584:	mov	w2, #0x4                   	// #4
   31588:	mov	w1, #0x0                   	// #0
   3158c:	ldr	x0, [sp, #56]
   31590:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   31594:	b	315a8 <PyInit__decimal@@Base+0x198d0>
   31598:	mov	w2, #0x2                   	// #2
   3159c:	ldrb	w1, [sp, #159]
   315a0:	ldr	x0, [sp, #56]
   315a4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   315a8:	mov	w2, #0x4                   	// #4
   315ac:	mov	w1, #0x0                   	// #0
   315b0:	ldr	x0, [sp, #48]
   315b4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   315b8:	ldr	x0, [sp, #16]
   315bc:	ldr	w0, [x0]
   315c0:	orr	w1, w0, #0x100
   315c4:	ldr	x0, [sp, #16]
   315c8:	str	w1, [x0]
   315cc:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   315d0:	ldr	x0, [sp, #32]
   315d4:	str	x0, [sp, #96]
   315d8:	ldr	x0, [sp, #96]
   315dc:	ldrb	w0, [x0]
   315e0:	and	w0, w0, #0x2
   315e4:	cmp	w0, #0x0
   315e8:	b.eq	31640 <PyInit__decimal@@Base+0x19968>  // b.none
   315ec:	ldr	x2, [sp, #16]
   315f0:	ldr	x1, [sp, #40]
   315f4:	ldr	x0, [sp, #48]
   315f8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   315fc:	cmp	w0, #0x0
   31600:	b.ne	31618 <PyInit__decimal@@Base+0x19940>  // b.any
   31604:	ldr	x2, [sp, #16]
   31608:	mov	w1, #0x200                 	// #512
   3160c:	ldr	x0, [sp, #56]
   31610:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   31614:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   31618:	ldr	x2, [sp, #16]
   3161c:	ldr	x1, [sp, #24]
   31620:	ldr	x0, [sp, #48]
   31624:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   31628:	mov	x3, #0x0                   	// #0
   3162c:	mov	x2, #0x0                   	// #0
   31630:	ldrb	w1, [sp, #159]
   31634:	ldr	x0, [sp, #56]
   31638:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3163c:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   31640:	bl	6860 <abort@plt>
   31644:	ldr	x0, [sp, #32]
   31648:	str	x0, [sp, #88]
   3164c:	ldr	x0, [sp, #88]
   31650:	str	x0, [sp, #80]
   31654:	ldr	x0, [sp, #80]
   31658:	ldr	x1, [x0, #40]
   3165c:	ldr	x0, [sp, #80]
   31660:	ldr	x0, [x0, #24]
   31664:	lsl	x0, x0, #3
   31668:	sub	x0, x0, #0x8
   3166c:	add	x0, x1, x0
   31670:	ldr	x0, [x0]
   31674:	cmp	x0, #0x0
   31678:	cset	w0, eq  // eq = none
   3167c:	and	w0, w0, #0xff
   31680:	cmp	w0, #0x0
   31684:	b.eq	31740 <PyInit__decimal@@Base+0x19a68>  // b.none
   31688:	ldr	x0, [sp, #40]
   3168c:	str	x0, [sp, #72]
   31690:	ldr	x0, [sp, #72]
   31694:	str	x0, [sp, #64]
   31698:	ldr	x0, [sp, #64]
   3169c:	ldr	x1, [x0, #40]
   316a0:	ldr	x0, [sp, #64]
   316a4:	ldr	x0, [x0, #24]
   316a8:	lsl	x0, x0, #3
   316ac:	sub	x0, x0, #0x8
   316b0:	add	x0, x1, x0
   316b4:	ldr	x0, [x0]
   316b8:	cmp	x0, #0x0
   316bc:	cset	w0, eq  // eq = none
   316c0:	and	w0, w0, #0xff
   316c4:	cmp	w0, #0x0
   316c8:	b.eq	31704 <PyInit__decimal@@Base+0x19a2c>  // b.none
   316cc:	mov	w2, #0x4                   	// #4
   316d0:	mov	w1, #0x0                   	// #0
   316d4:	ldr	x0, [sp, #56]
   316d8:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   316dc:	mov	w2, #0x4                   	// #4
   316e0:	mov	w1, #0x0                   	// #0
   316e4:	ldr	x0, [sp, #48]
   316e8:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   316ec:	ldr	x0, [sp, #16]
   316f0:	ldr	w0, [x0]
   316f4:	orr	w1, w0, #0x10
   316f8:	ldr	x0, [sp, #16]
   316fc:	str	w1, [x0]
   31700:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   31704:	mov	w2, #0x2                   	// #2
   31708:	ldrb	w1, [sp, #159]
   3170c:	ldr	x0, [sp, #56]
   31710:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   31714:	mov	w2, #0x4                   	// #4
   31718:	mov	w1, #0x0                   	// #0
   3171c:	ldr	x0, [sp, #48]
   31720:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   31724:	ldr	x0, [sp, #16]
   31728:	ldr	w1, [x0]
   3172c:	mov	w0, #0x104                 	// #260
   31730:	orr	w1, w1, w0
   31734:	ldr	x0, [sp, #16]
   31738:	str	w1, [x0]
   3173c:	b	3177c <PyInit__decimal@@Base+0x19aa4>
   31740:	ldr	x5, [sp, #16]
   31744:	ldr	x4, [sp, #24]
   31748:	ldr	x3, [sp, #32]
   3174c:	ldr	x2, [sp, #40]
   31750:	ldr	x1, [sp, #48]
   31754:	ldr	x0, [sp, #56]
   31758:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   3175c:	ldr	x2, [sp, #16]
   31760:	ldr	x1, [sp, #24]
   31764:	ldr	x0, [sp, #56]
   31768:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3176c:	ldr	x2, [sp, #16]
   31770:	ldr	x1, [sp, #24]
   31774:	ldr	x0, [sp, #48]
   31778:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3177c:	ldp	x29, x30, [sp], #160
   31780:	ret
   31784:	sub	sp, sp, #0x2f0
   31788:	stp	x29, x30, [sp]
   3178c:	mov	x29, sp
   31790:	str	x0, [sp, #56]
   31794:	str	x1, [sp, #48]
   31798:	str	x2, [sp, #40]
   3179c:	str	x3, [sp, #32]
   317a0:	str	x4, [sp, #24]
   317a4:	mov	w0, #0x30                  	// #48
   317a8:	strb	w0, [sp, #64]
   317ac:	str	xzr, [sp, #72]
   317b0:	str	xzr, [sp, #80]
   317b4:	str	xzr, [sp, #88]
   317b8:	mov	x0, #0x40                  	// #64
   317bc:	str	x0, [sp, #96]
   317c0:	add	x0, sp, #0x70
   317c4:	str	x0, [sp, #104]
   317c8:	ldr	x0, [sp, #48]
   317cc:	str	x0, [sp, #720]
   317d0:	ldr	x0, [sp, #720]
   317d4:	ldrb	w0, [x0]
   317d8:	and	w0, w0, #0x1
   317dc:	and	w1, w0, #0xff
   317e0:	ldr	x0, [sp, #40]
   317e4:	str	x0, [sp, #728]
   317e8:	ldr	x0, [sp, #728]
   317ec:	ldrb	w0, [x0]
   317f0:	and	w0, w0, #0x1
   317f4:	and	w0, w0, #0xff
   317f8:	eor	w0, w1, w0
   317fc:	strb	w0, [sp, #751]
   31800:	ldr	x0, [sp, #48]
   31804:	str	x0, [sp, #736]
   31808:	ldr	x0, [sp, #736]
   3180c:	ldrb	w0, [x0]
   31810:	and	w0, w0, #0xe
   31814:	cmp	w0, #0x0
   31818:	b.ne	31838 <PyInit__decimal@@Base+0x19b60>  // b.any
   3181c:	ldr	x0, [sp, #40]
   31820:	str	x0, [sp, #712]
   31824:	ldr	x0, [sp, #712]
   31828:	ldrb	w0, [x0]
   3182c:	and	w0, w0, #0xe
   31830:	cmp	w0, #0x0
   31834:	b.eq	3190c <PyInit__decimal@@Base+0x19c34>  // b.none
   31838:	ldr	x4, [sp, #24]
   3183c:	ldr	x3, [sp, #32]
   31840:	ldr	x2, [sp, #40]
   31844:	ldr	x1, [sp, #48]
   31848:	ldr	x0, [sp, #56]
   3184c:	bl	2861c <PyInit__decimal@@Base+0x10944>
   31850:	cmp	w0, #0x0
   31854:	b.ne	31a8c <PyInit__decimal@@Base+0x19db4>  // b.any
   31858:	ldr	x0, [sp, #48]
   3185c:	str	x0, [sp, #704]
   31860:	ldr	x0, [sp, #704]
   31864:	ldrb	w0, [x0]
   31868:	and	w0, w0, #0x2
   3186c:	cmp	w0, #0x0
   31870:	b.eq	318a4 <PyInit__decimal@@Base+0x19bcc>  // b.none
   31874:	ldr	x0, [sp, #40]
   31878:	str	x0, [sp, #696]
   3187c:	ldr	x0, [sp, #696]
   31880:	ldrb	w0, [x0]
   31884:	and	w0, w0, #0x2
   31888:	cmp	w0, #0x0
   3188c:	b.eq	318a4 <PyInit__decimal@@Base+0x19bcc>  // b.none
   31890:	ldr	x2, [sp, #24]
   31894:	mov	w1, #0x100                 	// #256
   31898:	ldr	x0, [sp, #56]
   3189c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   318a0:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   318a4:	ldr	x0, [sp, #48]
   318a8:	str	x0, [sp, #688]
   318ac:	ldr	x0, [sp, #688]
   318b0:	ldrb	w0, [x0]
   318b4:	and	w0, w0, #0x2
   318b8:	cmp	w0, #0x0
   318bc:	b.eq	318d4 <PyInit__decimal@@Base+0x19bfc>  // b.none
   318c0:	mov	w2, #0x2                   	// #2
   318c4:	ldrb	w1, [sp, #751]
   318c8:	ldr	x0, [sp, #56]
   318cc:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   318d0:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   318d4:	ldr	x0, [sp, #40]
   318d8:	str	x0, [sp, #680]
   318dc:	ldr	x0, [sp, #680]
   318e0:	ldrb	w0, [x0]
   318e4:	and	w0, w0, #0x2
   318e8:	cmp	w0, #0x0
   318ec:	b.eq	31908 <PyInit__decimal@@Base+0x19c30>  // b.none
   318f0:	mov	x3, #0x0                   	// #0
   318f4:	mov	x2, #0x0                   	// #0
   318f8:	ldrb	w1, [sp, #751]
   318fc:	ldr	x0, [sp, #56]
   31900:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   31904:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   31908:	bl	6860 <abort@plt>
   3190c:	ldr	x0, [sp, #40]
   31910:	str	x0, [sp, #672]
   31914:	ldr	x0, [sp, #672]
   31918:	str	x0, [sp, #664]
   3191c:	ldr	x0, [sp, #664]
   31920:	ldr	x1, [x0, #40]
   31924:	ldr	x0, [sp, #664]
   31928:	ldr	x0, [x0, #24]
   3192c:	lsl	x0, x0, #3
   31930:	sub	x0, x0, #0x8
   31934:	add	x0, x1, x0
   31938:	ldr	x0, [x0]
   3193c:	cmp	x0, #0x0
   31940:	cset	w0, eq  // eq = none
   31944:	and	w0, w0, #0xff
   31948:	cmp	w0, #0x0
   3194c:	b.eq	319d0 <PyInit__decimal@@Base+0x19cf8>  // b.none
   31950:	ldr	x0, [sp, #48]
   31954:	str	x0, [sp, #656]
   31958:	ldr	x0, [sp, #656]
   3195c:	str	x0, [sp, #648]
   31960:	ldr	x0, [sp, #648]
   31964:	ldr	x1, [x0, #40]
   31968:	ldr	x0, [sp, #648]
   3196c:	ldr	x0, [x0, #24]
   31970:	lsl	x0, x0, #3
   31974:	sub	x0, x0, #0x8
   31978:	add	x0, x1, x0
   3197c:	ldr	x0, [x0]
   31980:	cmp	x0, #0x0
   31984:	cset	w0, eq  // eq = none
   31988:	and	w0, w0, #0xff
   3198c:	cmp	w0, #0x0
   31990:	b.eq	319a8 <PyInit__decimal@@Base+0x19cd0>  // b.none
   31994:	ldr	x2, [sp, #24]
   31998:	mov	w1, #0x10                  	// #16
   3199c:	ldr	x0, [sp, #56]
   319a0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   319a4:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   319a8:	mov	w2, #0x2                   	// #2
   319ac:	ldrb	w1, [sp, #751]
   319b0:	ldr	x0, [sp, #56]
   319b4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   319b8:	ldr	x0, [sp, #24]
   319bc:	ldr	w0, [x0]
   319c0:	orr	w1, w0, #0x4
   319c4:	ldr	x0, [sp, #24]
   319c8:	str	w1, [x0]
   319cc:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   319d0:	add	x0, sp, #0x40
   319d4:	ldr	x5, [sp, #24]
   319d8:	ldr	x4, [sp, #32]
   319dc:	ldr	x3, [sp, #40]
   319e0:	ldr	x2, [sp, #48]
   319e4:	mov	x1, x0
   319e8:	ldr	x0, [sp, #56]
   319ec:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   319f0:	add	x0, sp, #0x40
   319f4:	str	x0, [sp, #640]
   319f8:	ldr	x0, [sp, #640]
   319fc:	str	x0, [sp, #632]
   31a00:	ldr	x0, [sp, #632]
   31a04:	ldrb	w0, [x0]
   31a08:	and	w0, w0, #0xe0
   31a0c:	cmp	w0, #0x0
   31a10:	cset	w0, eq  // eq = none
   31a14:	and	w0, w0, #0xff
   31a18:	cmp	w0, #0x0
   31a1c:	b.eq	31a38 <PyInit__decimal@@Base+0x19d60>  // b.none
   31a20:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31a24:	add	x0, x0, #0x6f8
   31a28:	ldr	x1, [x0]
   31a2c:	ldr	x0, [sp, #640]
   31a30:	ldr	x0, [x0, #40]
   31a34:	blr	x1
   31a38:	ldr	x0, [sp, #640]
   31a3c:	str	x0, [sp, #624]
   31a40:	ldr	x0, [sp, #624]
   31a44:	ldrb	w0, [x0]
   31a48:	and	w0, w0, #0x10
   31a4c:	cmp	w0, #0x0
   31a50:	cset	w0, eq  // eq = none
   31a54:	and	w0, w0, #0xff
   31a58:	cmp	w0, #0x0
   31a5c:	b.eq	31a74 <PyInit__decimal@@Base+0x19d9c>  // b.none
   31a60:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31a64:	add	x0, x0, #0x6f8
   31a68:	ldr	x1, [x0]
   31a6c:	ldr	x0, [sp, #640]
   31a70:	blr	x1
   31a74:	nop
   31a78:	ldr	x2, [sp, #24]
   31a7c:	ldr	x1, [sp, #32]
   31a80:	ldr	x0, [sp, #56]
   31a84:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   31a88:	b	31a90 <PyInit__decimal@@Base+0x19db8>
   31a8c:	nop
   31a90:	ldp	x29, x30, [sp]
   31a94:	add	sp, sp, #0x2f0
   31a98:	ret
   31a9c:	sub	sp, sp, #0x2c0
   31aa0:	stp	x29, x30, [sp]
   31aa4:	mov	x29, sp
   31aa8:	str	x0, [sp, #56]
   31aac:	str	x1, [sp, #48]
   31ab0:	str	x2, [sp, #40]
   31ab4:	str	x3, [sp, #32]
   31ab8:	str	x4, [sp, #24]
   31abc:	mov	w0, #0x30                  	// #48
   31ac0:	strb	w0, [sp, #72]
   31ac4:	str	xzr, [sp, #80]
   31ac8:	str	xzr, [sp, #88]
   31acc:	str	xzr, [sp, #96]
   31ad0:	mov	x0, #0x40                  	// #64
   31ad4:	str	x0, [sp, #104]
   31ad8:	add	x0, sp, #0x78
   31adc:	str	x0, [sp, #112]
   31ae0:	add	x0, sp, #0x278
   31ae4:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   31ae8:	add	x1, sp, #0x278
   31aec:	add	x0, sp, #0x48
   31af0:	ldr	x3, [sp, #24]
   31af4:	mov	x2, x1
   31af8:	ldr	x1, [sp, #40]
   31afc:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   31b00:	add	x0, sp, #0x48
   31b04:	ldr	x4, [sp, #24]
   31b08:	ldr	x3, [sp, #32]
   31b0c:	mov	x2, x0
   31b10:	ldr	x1, [sp, #48]
   31b14:	ldr	x0, [sp, #56]
   31b18:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
   31b1c:	add	x0, sp, #0x48
   31b20:	str	x0, [sp, #696]
   31b24:	ldr	x0, [sp, #696]
   31b28:	str	x0, [sp, #688]
   31b2c:	ldr	x0, [sp, #688]
   31b30:	ldrb	w0, [x0]
   31b34:	and	w0, w0, #0xe0
   31b38:	cmp	w0, #0x0
   31b3c:	cset	w0, eq  // eq = none
   31b40:	and	w0, w0, #0xff
   31b44:	cmp	w0, #0x0
   31b48:	b.eq	31b64 <PyInit__decimal@@Base+0x19e8c>  // b.none
   31b4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31b50:	add	x0, x0, #0x6f8
   31b54:	ldr	x1, [x0]
   31b58:	ldr	x0, [sp, #696]
   31b5c:	ldr	x0, [x0, #40]
   31b60:	blr	x1
   31b64:	ldr	x0, [sp, #696]
   31b68:	str	x0, [sp, #680]
   31b6c:	ldr	x0, [sp, #680]
   31b70:	ldrb	w0, [x0]
   31b74:	and	w0, w0, #0x10
   31b78:	cmp	w0, #0x0
   31b7c:	cset	w0, eq  // eq = none
   31b80:	and	w0, w0, #0xff
   31b84:	cmp	w0, #0x0
   31b88:	b.eq	31ba0 <PyInit__decimal@@Base+0x19ec8>  // b.none
   31b8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31b90:	add	x0, x0, #0x6f8
   31b94:	ldr	x1, [x0]
   31b98:	ldr	x0, [sp, #696]
   31b9c:	blr	x1
   31ba0:	nop
   31ba4:	nop
   31ba8:	ldp	x29, x30, [sp]
   31bac:	add	sp, sp, #0x2c0
   31bb0:	ret
   31bb4:	sub	sp, sp, #0x2c0
   31bb8:	stp	x29, x30, [sp]
   31bbc:	mov	x29, sp
   31bc0:	str	x0, [sp, #56]
   31bc4:	str	x1, [sp, #48]
   31bc8:	str	x2, [sp, #40]
   31bcc:	str	x3, [sp, #32]
   31bd0:	str	x4, [sp, #24]
   31bd4:	mov	w0, #0x30                  	// #48
   31bd8:	strb	w0, [sp, #72]
   31bdc:	str	xzr, [sp, #80]
   31be0:	str	xzr, [sp, #88]
   31be4:	str	xzr, [sp, #96]
   31be8:	mov	x0, #0x40                  	// #64
   31bec:	str	x0, [sp, #104]
   31bf0:	add	x0, sp, #0x78
   31bf4:	str	x0, [sp, #112]
   31bf8:	add	x0, sp, #0x278
   31bfc:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   31c00:	add	x1, sp, #0x278
   31c04:	add	x0, sp, #0x48
   31c08:	ldr	x3, [sp, #24]
   31c0c:	mov	x2, x1
   31c10:	ldr	x1, [sp, #40]
   31c14:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   31c18:	add	x0, sp, #0x48
   31c1c:	ldr	x4, [sp, #24]
   31c20:	ldr	x3, [sp, #32]
   31c24:	mov	x2, x0
   31c28:	ldr	x1, [sp, #48]
   31c2c:	ldr	x0, [sp, #56]
   31c30:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
   31c34:	add	x0, sp, #0x48
   31c38:	str	x0, [sp, #696]
   31c3c:	ldr	x0, [sp, #696]
   31c40:	str	x0, [sp, #688]
   31c44:	ldr	x0, [sp, #688]
   31c48:	ldrb	w0, [x0]
   31c4c:	and	w0, w0, #0xe0
   31c50:	cmp	w0, #0x0
   31c54:	cset	w0, eq  // eq = none
   31c58:	and	w0, w0, #0xff
   31c5c:	cmp	w0, #0x0
   31c60:	b.eq	31c7c <PyInit__decimal@@Base+0x19fa4>  // b.none
   31c64:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31c68:	add	x0, x0, #0x6f8
   31c6c:	ldr	x1, [x0]
   31c70:	ldr	x0, [sp, #696]
   31c74:	ldr	x0, [x0, #40]
   31c78:	blr	x1
   31c7c:	ldr	x0, [sp, #696]
   31c80:	str	x0, [sp, #680]
   31c84:	ldr	x0, [sp, #680]
   31c88:	ldrb	w0, [x0]
   31c8c:	and	w0, w0, #0x10
   31c90:	cmp	w0, #0x0
   31c94:	cset	w0, eq  // eq = none
   31c98:	and	w0, w0, #0xff
   31c9c:	cmp	w0, #0x0
   31ca0:	b.eq	31cb8 <PyInit__decimal@@Base+0x19fe0>  // b.none
   31ca4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   31ca8:	add	x0, x0, #0x6f8
   31cac:	ldr	x1, [x0]
   31cb0:	ldr	x0, [sp, #696]
   31cb4:	blr	x1
   31cb8:	nop
   31cbc:	nop
   31cc0:	ldp	x29, x30, [sp]
   31cc4:	add	sp, sp, #0x2c0
   31cc8:	ret
   31ccc:	stp	x29, x30, [sp, #-64]!
   31cd0:	mov	x29, sp
   31cd4:	str	x0, [sp, #56]
   31cd8:	str	x1, [sp, #48]
   31cdc:	str	w2, [sp, #44]
   31ce0:	str	x3, [sp, #32]
   31ce4:	str	x4, [sp, #24]
   31ce8:	ldrsw	x0, [sp, #44]
   31cec:	ldr	x4, [sp, #24]
   31cf0:	ldr	x3, [sp, #32]
   31cf4:	mov	x2, x0
   31cf8:	ldr	x1, [sp, #48]
   31cfc:	ldr	x0, [sp, #56]
   31d00:	bl	31a9c <PyInit__decimal@@Base+0x19dc4>
   31d04:	nop
   31d08:	ldp	x29, x30, [sp], #64
   31d0c:	ret
   31d10:	stp	x29, x30, [sp, #-64]!
   31d14:	mov	x29, sp
   31d18:	str	x0, [sp, #56]
   31d1c:	str	x1, [sp, #48]
   31d20:	str	w2, [sp, #44]
   31d24:	str	x3, [sp, #32]
   31d28:	str	x4, [sp, #24]
   31d2c:	ldr	w0, [sp, #44]
   31d30:	ldr	x4, [sp, #24]
   31d34:	ldr	x3, [sp, #32]
   31d38:	mov	x2, x0
   31d3c:	ldr	x1, [sp, #48]
   31d40:	ldr	x0, [sp, #56]
   31d44:	bl	31bb4 <PyInit__decimal@@Base+0x19edc>
   31d48:	nop
   31d4c:	ldp	x29, x30, [sp], #64
   31d50:	ret
   31d54:	stp	x29, x30, [sp, #-64]!
   31d58:	mov	x29, sp
   31d5c:	str	x0, [sp, #56]
   31d60:	str	x1, [sp, #48]
   31d64:	str	x2, [sp, #40]
   31d68:	str	x3, [sp, #32]
   31d6c:	str	x4, [sp, #24]
   31d70:	ldr	x4, [sp, #24]
   31d74:	ldr	x3, [sp, #32]
   31d78:	ldr	x2, [sp, #40]
   31d7c:	ldr	x1, [sp, #48]
   31d80:	ldr	x0, [sp, #56]
   31d84:	bl	31a9c <PyInit__decimal@@Base+0x19dc4>
   31d88:	nop
   31d8c:	ldp	x29, x30, [sp], #64
   31d90:	ret
   31d94:	stp	x29, x30, [sp, #-64]!
   31d98:	mov	x29, sp
   31d9c:	str	x0, [sp, #56]
   31da0:	str	x1, [sp, #48]
   31da4:	str	x2, [sp, #40]
   31da8:	str	x3, [sp, #32]
   31dac:	str	x4, [sp, #24]
   31db0:	ldr	x4, [sp, #24]
   31db4:	ldr	x3, [sp, #32]
   31db8:	ldr	x2, [sp, #40]
   31dbc:	ldr	x1, [sp, #48]
   31dc0:	ldr	x0, [sp, #56]
   31dc4:	bl	31bb4 <PyInit__decimal@@Base+0x19edc>
   31dc8:	nop
   31dcc:	ldp	x29, x30, [sp], #64
   31dd0:	ret
   31dd4:	stp	x29, x30, [sp, #-96]!
   31dd8:	mov	x29, sp
   31ddc:	str	x0, [sp, #40]
   31de0:	str	x1, [sp, #32]
   31de4:	str	x2, [sp, #24]
   31de8:	ldr	x0, [sp, #40]
   31dec:	str	x0, [sp, #80]
   31df0:	ldr	x0, [sp, #80]
   31df4:	ldrb	w0, [x0]
   31df8:	and	w0, w0, #0xe
   31dfc:	cmp	w0, #0x0
   31e00:	b.ne	31ec8 <PyInit__decimal@@Base+0x1a1f0>  // b.any
   31e04:	ldr	x0, [sp, #40]
   31e08:	str	x0, [sp, #72]
   31e0c:	ldr	x0, [sp, #72]
   31e10:	str	x0, [sp, #64]
   31e14:	ldr	x0, [sp, #64]
   31e18:	ldrb	w0, [x0]
   31e1c:	and	w0, w0, #0xe
   31e20:	cmp	w0, #0x0
   31e24:	b.ne	31e60 <PyInit__decimal@@Base+0x1a188>  // b.any
   31e28:	ldr	x0, [sp, #72]
   31e2c:	str	x0, [sp, #56]
   31e30:	ldr	x0, [sp, #56]
   31e34:	ldr	x1, [x0, #40]
   31e38:	ldr	x0, [sp, #56]
   31e3c:	ldr	x0, [x0, #24]
   31e40:	lsl	x0, x0, #3
   31e44:	sub	x0, x0, #0x8
   31e48:	add	x0, x1, x0
   31e4c:	ldr	x0, [x0]
   31e50:	cmp	x0, #0x0
   31e54:	b.ne	31e60 <PyInit__decimal@@Base+0x1a188>  // b.any
   31e58:	mov	w0, #0x1                   	// #1
   31e5c:	b	31e64 <PyInit__decimal@@Base+0x1a18c>
   31e60:	mov	w0, #0x0                   	// #0
   31e64:	cmp	w0, #0x0
   31e68:	b.ne	31ec8 <PyInit__decimal@@Base+0x1a1f0>  // b.any
   31e6c:	ldr	x0, [sp, #40]
   31e70:	ldr	x1, [x0, #16]
   31e74:	ldr	x0, [sp, #32]
   31e78:	ldr	x0, [x0]
   31e7c:	cmp	x1, x0
   31e80:	b.ge	31ec8 <PyInit__decimal@@Base+0x1a1f0>  // b.tcont
   31e84:	ldr	x0, [sp, #32]
   31e88:	ldr	x1, [x0]
   31e8c:	ldr	x0, [sp, #40]
   31e90:	ldr	x0, [x0, #16]
   31e94:	sub	x0, x1, x0
   31e98:	str	x0, [sp, #88]
   31e9c:	ldr	x3, [sp, #24]
   31ea0:	ldr	x2, [sp, #88]
   31ea4:	ldr	x1, [sp, #40]
   31ea8:	ldr	x0, [sp, #40]
   31eac:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   31eb0:	ldr	x0, [sp, #40]
   31eb4:	ldr	x1, [x0, #8]
   31eb8:	ldr	x0, [sp, #88]
   31ebc:	sub	x1, x1, x0
   31ec0:	ldr	x0, [sp, #40]
   31ec4:	str	x1, [x0, #8]
   31ec8:	nop
   31ecc:	ldp	x29, x30, [sp], #96
   31ed0:	ret
   31ed4:	stp	x29, x30, [sp, #-160]!
   31ed8:	mov	x29, sp
   31edc:	str	x0, [sp, #40]
   31ee0:	str	x1, [sp, #32]
   31ee4:	str	x2, [sp, #24]
   31ee8:	str	x3, [sp, #16]
   31eec:	mov	x0, #0x9                   	// #9
   31ef0:	str	x0, [sp, #144]
   31ef4:	mov	w0, #0xffffff90            	// #-112
   31ef8:	strb	w0, [sp, #96]
   31efc:	ldr	x0, [sp, #24]
   31f00:	ldr	x0, [x0]
   31f04:	mvn	x0, x0
   31f08:	str	x0, [sp, #104]
   31f0c:	mov	x0, #0x1                   	// #1
   31f10:	str	x0, [sp, #112]
   31f14:	mov	x0, #0x1                   	// #1
   31f18:	str	x0, [sp, #120]
   31f1c:	mov	x0, #0x1                   	// #1
   31f20:	str	x0, [sp, #128]
   31f24:	add	x0, sp, #0x90
   31f28:	str	x0, [sp, #136]
   31f2c:	ldr	x0, [sp, #32]
   31f30:	ldrb	w0, [x0]
   31f34:	sxtb	w0, w0
   31f38:	and	w0, w0, #0xf
   31f3c:	sxtb	w1, w0
   31f40:	mov	w0, #0x50                  	// #80
   31f44:	orr	w0, w1, w0
   31f48:	sxtb	w0, w0
   31f4c:	and	w0, w0, #0xff
   31f50:	strb	w0, [sp, #48]
   31f54:	ldr	x0, [sp, #32]
   31f58:	ldr	x0, [x0, #8]
   31f5c:	str	x0, [sp, #56]
   31f60:	ldr	x0, [sp, #32]
   31f64:	ldr	x0, [x0, #16]
   31f68:	str	x0, [sp, #64]
   31f6c:	ldr	x0, [sp, #32]
   31f70:	ldr	x0, [x0, #24]
   31f74:	str	x0, [sp, #72]
   31f78:	ldr	x0, [sp, #32]
   31f7c:	ldr	x0, [x0, #32]
   31f80:	str	x0, [sp, #80]
   31f84:	ldr	x0, [sp, #32]
   31f88:	ldr	x0, [x0, #40]
   31f8c:	str	x0, [sp, #88]
   31f90:	add	x0, sp, #0x30
   31f94:	str	x0, [sp, #152]
   31f98:	ldr	x0, [sp, #152]
   31f9c:	ldrb	w0, [x0]
   31fa0:	and	w0, w0, #0xfffffffe
   31fa4:	and	w1, w0, #0xff
   31fa8:	ldr	x0, [sp, #152]
   31fac:	strb	w1, [x0]
   31fb0:	nop
   31fb4:	add	x1, sp, #0x60
   31fb8:	add	x0, sp, #0x30
   31fbc:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   31fc0:	cmp	w0, #0x0
   31fc4:	b.gt	31ffc <PyInit__decimal@@Base+0x1a324>
   31fc8:	mov	x3, #0x0                   	// #0
   31fcc:	mov	x2, #0x1                   	// #1
   31fd0:	mov	w1, #0x0                   	// #0
   31fd4:	ldr	x0, [sp, #40]
   31fd8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   31fdc:	ldr	x0, [sp, #16]
   31fe0:	ldr	w1, [x0]
   31fe4:	mov	w0, #0x1040                	// #4160
   31fe8:	orr	w1, w1, w0
   31fec:	ldr	x0, [sp, #16]
   31ff0:	str	w1, [x0]
   31ff4:	mov	w0, #0x1                   	// #1
   31ff8:	b	32000 <PyInit__decimal@@Base+0x1a328>
   31ffc:	mov	w0, #0x0                   	// #0
   32000:	ldp	x29, x30, [sp], #160
   32004:	ret
   32008:	stp	x29, x30, [sp, #-64]!
   3200c:	mov	x29, sp
   32010:	str	x0, [sp, #24]
   32014:	str	x1, [sp, #16]
   32018:	ldr	x1, [sp, #16]
   3201c:	mov	x0, #0x10000000000000      	// #4503599627370496
   32020:	cmp	x1, x0
   32024:	b.le	32030 <PyInit__decimal@@Base+0x1a358>
   32028:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3202c:	b	3231c <PyInit__decimal@@Base+0x1a644>
   32030:	ldr	x0, [sp, #16]
   32034:	str	x0, [sp, #32]
   32038:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3203c:	add	x0, x0, #0xdb0
   32040:	ldr	x0, [x0, #72]
   32044:	ldr	x1, [sp, #32]
   32048:	cmp	x1, x0
   3204c:	b.cs	32158 <PyInit__decimal@@Base+0x1a480>  // b.hs, b.nlast
   32050:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32054:	add	x0, x0, #0xdb0
   32058:	ldr	x0, [x0, #32]
   3205c:	ldr	x1, [sp, #32]
   32060:	cmp	x1, x0
   32064:	b.cs	320d0 <PyInit__decimal@@Base+0x1a3f8>  // b.hs, b.nlast
   32068:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3206c:	add	x0, x0, #0xdb0
   32070:	ldr	x0, [x0, #16]
   32074:	ldr	x1, [sp, #32]
   32078:	cmp	x1, x0
   3207c:	b.cs	320a8 <PyInit__decimal@@Base+0x1a3d0>  // b.hs, b.nlast
   32080:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32084:	add	x0, x0, #0xdb0
   32088:	ldr	x0, [x0, #8]
   3208c:	ldr	x1, [sp, #32]
   32090:	cmp	x1, x0
   32094:	b.cs	320a0 <PyInit__decimal@@Base+0x1a3c8>  // b.hs, b.nlast
   32098:	mov	w0, #0x1                   	// #1
   3209c:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   320a0:	mov	w0, #0x2                   	// #2
   320a4:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   320a8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   320ac:	add	x0, x0, #0xdb0
   320b0:	ldr	x0, [x0, #24]
   320b4:	ldr	x1, [sp, #32]
   320b8:	cmp	x1, x0
   320bc:	b.cs	320c8 <PyInit__decimal@@Base+0x1a3f0>  // b.hs, b.nlast
   320c0:	mov	w0, #0x3                   	// #3
   320c4:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   320c8:	mov	w0, #0x4                   	// #4
   320cc:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   320d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   320d4:	add	x0, x0, #0xdb0
   320d8:	ldr	x0, [x0, #48]
   320dc:	ldr	x1, [sp, #32]
   320e0:	cmp	x1, x0
   320e4:	b.cs	32110 <PyInit__decimal@@Base+0x1a438>  // b.hs, b.nlast
   320e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   320ec:	add	x0, x0, #0xdb0
   320f0:	ldr	x0, [x0, #40]
   320f4:	ldr	x1, [sp, #32]
   320f8:	cmp	x1, x0
   320fc:	b.cs	32108 <PyInit__decimal@@Base+0x1a430>  // b.hs, b.nlast
   32100:	mov	w0, #0x5                   	// #5
   32104:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32108:	mov	w0, #0x6                   	// #6
   3210c:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32110:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32114:	add	x0, x0, #0xdb0
   32118:	ldr	x0, [x0, #64]
   3211c:	ldr	x1, [sp, #32]
   32120:	cmp	x1, x0
   32124:	b.cs	32150 <PyInit__decimal@@Base+0x1a478>  // b.hs, b.nlast
   32128:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3212c:	add	x0, x0, #0xdb0
   32130:	ldr	x0, [x0, #56]
   32134:	ldr	x1, [sp, #32]
   32138:	cmp	x1, x0
   3213c:	b.cs	32148 <PyInit__decimal@@Base+0x1a470>  // b.hs, b.nlast
   32140:	mov	w0, #0x7                   	// #7
   32144:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32148:	mov	w0, #0x8                   	// #8
   3214c:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32150:	mov	w0, #0x9                   	// #9
   32154:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32158:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3215c:	add	x0, x0, #0xdb0
   32160:	ldr	x0, [x0, #112]
   32164:	ldr	x1, [sp, #32]
   32168:	cmp	x1, x0
   3216c:	b.cs	321f8 <PyInit__decimal@@Base+0x1a520>  // b.hs, b.nlast
   32170:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32174:	add	x0, x0, #0xdb0
   32178:	ldr	x0, [x0, #88]
   3217c:	ldr	x1, [sp, #32]
   32180:	cmp	x1, x0
   32184:	b.cs	321b0 <PyInit__decimal@@Base+0x1a4d8>  // b.hs, b.nlast
   32188:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3218c:	add	x0, x0, #0xdb0
   32190:	ldr	x0, [x0, #80]
   32194:	ldr	x1, [sp, #32]
   32198:	cmp	x1, x0
   3219c:	b.cs	321a8 <PyInit__decimal@@Base+0x1a4d0>  // b.hs, b.nlast
   321a0:	mov	w0, #0xa                   	// #10
   321a4:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   321a8:	mov	w0, #0xb                   	// #11
   321ac:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   321b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   321b4:	add	x0, x0, #0xdb0
   321b8:	ldr	x0, [x0, #104]
   321bc:	ldr	x1, [sp, #32]
   321c0:	cmp	x1, x0
   321c4:	b.cs	321f0 <PyInit__decimal@@Base+0x1a518>  // b.hs, b.nlast
   321c8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   321cc:	add	x0, x0, #0xdb0
   321d0:	ldr	x0, [x0, #96]
   321d4:	ldr	x1, [sp, #32]
   321d8:	cmp	x1, x0
   321dc:	b.cs	321e8 <PyInit__decimal@@Base+0x1a510>  // b.hs, b.nlast
   321e0:	mov	w0, #0xc                   	// #12
   321e4:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   321e8:	mov	w0, #0xd                   	// #13
   321ec:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   321f0:	mov	w0, #0xe                   	// #14
   321f4:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   321f8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   321fc:	add	x0, x0, #0xdb0
   32200:	ldr	x0, [x0, #144]
   32204:	ldr	x1, [sp, #32]
   32208:	cmp	x1, x0
   3220c:	b.cs	32278 <PyInit__decimal@@Base+0x1a5a0>  // b.hs, b.nlast
   32210:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32214:	add	x0, x0, #0xdb0
   32218:	ldr	x0, [x0, #128]
   3221c:	ldr	x1, [sp, #32]
   32220:	cmp	x1, x0
   32224:	b.cs	32250 <PyInit__decimal@@Base+0x1a578>  // b.hs, b.nlast
   32228:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3222c:	add	x0, x0, #0xdb0
   32230:	ldr	x0, [x0, #120]
   32234:	ldr	x1, [sp, #32]
   32238:	cmp	x1, x0
   3223c:	b.cs	32248 <PyInit__decimal@@Base+0x1a570>  // b.hs, b.nlast
   32240:	mov	w0, #0xf                   	// #15
   32244:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32248:	mov	w0, #0x10                  	// #16
   3224c:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32250:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32254:	add	x0, x0, #0xdb0
   32258:	ldr	x0, [x0, #136]
   3225c:	ldr	x1, [sp, #32]
   32260:	cmp	x1, x0
   32264:	b.cs	32270 <PyInit__decimal@@Base+0x1a598>  // b.hs, b.nlast
   32268:	mov	w0, #0x11                  	// #17
   3226c:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32270:	mov	w0, #0x12                  	// #18
   32274:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32278:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3227c:	add	x0, x0, #0xdb0
   32280:	ldr	x0, [x0, #152]
   32284:	ldr	x1, [sp, #32]
   32288:	cmp	x1, x0
   3228c:	b.cs	32298 <PyInit__decimal@@Base+0x1a5c0>  // b.hs, b.nlast
   32290:	mov	w0, #0x13                  	// #19
   32294:	b	3229c <PyInit__decimal@@Base+0x1a5c4>
   32298:	mov	w0, #0x14                  	// #20
   3229c:	sub	w0, w0, #0x1
   322a0:	sxtw	x1, w0
   322a4:	ldr	x0, [sp, #24]
   322a8:	str	x0, [sp, #40]
   322ac:	ldr	x0, [sp, #40]
   322b0:	ldr	x2, [x0, #8]
   322b4:	ldr	x0, [sp, #40]
   322b8:	ldr	x0, [x0, #16]
   322bc:	add	x0, x2, x0
   322c0:	sub	x0, x0, #0x1
   322c4:	sub	x0, x1, x0
   322c8:	sub	x0, x0, #0x1
   322cc:	str	x0, [sp, #56]
   322d0:	ldr	d0, [sp, #16]
   322d4:	scvtf	d0, d0
   322d8:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   322dc:	ldr	d1, [x0, #3256]
   322e0:	fmul	d0, d0, d1
   322e4:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   322e8:	ldr	d1, [x0, #3264]
   322ec:	fsub	d1, d0, d1
   322f0:	ldr	d0, [sp, #56]
   322f4:	scvtf	d0, d0
   322f8:	fdiv	d0, d1, d0
   322fc:	bl	69f0 <ceil@plt>
   32300:	fcvtzs	d0, d0
   32304:	str	d0, [sp, #48]
   32308:	ldr	x2, [sp, #48]
   3230c:	ldr	x1, [sp, #48]
   32310:	mov	x0, #0x3                   	// #3
   32314:	cmp	x2, #0x3
   32318:	csel	x0, x1, x0, ge  // ge = tcont
   3231c:	ldp	x29, x30, [sp], #64
   32320:	ret
   32324:	sub	sp, sp, #0x560
   32328:	stp	x29, x30, [sp]
   3232c:	mov	x29, sp
   32330:	str	x0, [sp, #40]
   32334:	str	x1, [sp, #32]
   32338:	str	x2, [sp, #24]
   3233c:	str	x3, [sp, #16]
   32340:	mov	w0, #0x30                  	// #48
   32344:	strb	w0, [sp, #664]
   32348:	str	xzr, [sp, #672]
   3234c:	str	xzr, [sp, #680]
   32350:	str	xzr, [sp, #688]
   32354:	mov	x0, #0x40                  	// #64
   32358:	str	x0, [sp, #696]
   3235c:	add	x0, sp, #0x2c8
   32360:	str	x0, [sp, #704]
   32364:	mov	w0, #0x30                  	// #48
   32368:	strb	w0, [sp, #104]
   3236c:	str	xzr, [sp, #112]
   32370:	str	xzr, [sp, #120]
   32374:	str	xzr, [sp, #128]
   32378:	mov	x0, #0x40                  	// #64
   3237c:	str	x0, [sp, #136]
   32380:	add	x0, sp, #0x98
   32384:	str	x0, [sp, #144]
   32388:	mov	x0, #0x1                   	// #1
   3238c:	str	x0, [sp, #96]
   32390:	mov	w0, #0xffffff90            	// #-112
   32394:	strb	w0, [sp, #48]
   32398:	str	xzr, [sp, #56]
   3239c:	mov	x0, #0x1                   	// #1
   323a0:	str	x0, [sp, #64]
   323a4:	mov	x0, #0x1                   	// #1
   323a8:	str	x0, [sp, #72]
   323ac:	mov	x0, #0x1                   	// #1
   323b0:	str	x0, [sp, #80]
   323b4:	add	x0, sp, #0x60
   323b8:	str	x0, [sp, #88]
   323bc:	ldr	x0, [sp, #32]
   323c0:	str	x0, [sp, #1344]
   323c4:	ldr	x0, [sp, #1344]
   323c8:	str	x0, [sp, #1336]
   323cc:	ldr	x0, [sp, #1336]
   323d0:	ldr	x1, [x0, #40]
   323d4:	ldr	x0, [sp, #1336]
   323d8:	ldr	x0, [x0, #24]
   323dc:	lsl	x0, x0, #3
   323e0:	sub	x0, x0, #0x8
   323e4:	add	x0, x1, x0
   323e8:	ldr	x0, [x0]
   323ec:	cmp	x0, #0x0
   323f0:	cset	w0, eq  // eq = none
   323f4:	and	w0, w0, #0xff
   323f8:	cmp	w0, #0x0
   323fc:	b.eq	32418 <PyInit__decimal@@Base+0x1a740>  // b.none
   32400:	mov	x3, #0x0                   	// #0
   32404:	mov	x2, #0x1                   	// #1
   32408:	mov	w1, #0x0                   	// #0
   3240c:	ldr	x0, [sp, #40]
   32410:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   32414:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   32418:	ldr	x0, [sp, #32]
   3241c:	ldr	x1, [x0, #16]
   32420:	ldr	x0, [sp, #32]
   32424:	ldr	x0, [x0, #8]
   32428:	add	x0, x1, x0
   3242c:	str	x0, [sp, #1360]
   32430:	ldr	x1, [sp, #1360]
   32434:	ldr	x0, [sp, #1360]
   32438:	mov	x2, #0x0                   	// #0
   3243c:	cmp	x1, #0x0
   32440:	csel	x0, x0, x2, ge  // ge = tcont
   32444:	str	x0, [sp, #1360]
   32448:	ldr	x0, [sp, #1360]
   3244c:	cmp	x0, #0x13
   32450:	b.le	324f8 <PyInit__decimal@@Base+0x1a820>
   32454:	ldr	x0, [sp, #32]
   32458:	str	x0, [sp, #1328]
   3245c:	ldr	x0, [sp, #1328]
   32460:	ldrb	w0, [x0]
   32464:	and	w0, w0, #0x1
   32468:	cmp	w0, #0x0
   3246c:	cset	w0, eq  // eq = none
   32470:	and	w0, w0, #0xff
   32474:	cmp	w0, #0x0
   32478:	b.eq	324a8 <PyInit__decimal@@Base+0x1a7d0>  // b.none
   3247c:	mov	w2, #0x2                   	// #2
   32480:	mov	w1, #0x0                   	// #0
   32484:	ldr	x0, [sp, #40]
   32488:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3248c:	ldr	x0, [sp, #16]
   32490:	ldr	w1, [x0]
   32494:	mov	w0, #0x1840                	// #6208
   32498:	orr	w1, w1, w0
   3249c:	ldr	x0, [sp, #16]
   324a0:	str	w1, [x0]
   324a4:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   324a8:	ldr	x0, [sp, #24]
   324ac:	str	x0, [sp, #1320]
   324b0:	ldr	x0, [sp, #1320]
   324b4:	ldr	x1, [x0, #16]
   324b8:	ldr	x0, [sp, #1320]
   324bc:	ldr	x0, [x0]
   324c0:	sub	x0, x1, x0
   324c4:	add	x0, x0, #0x1
   324c8:	mov	x3, x0
   324cc:	mov	x2, #0x0                   	// #0
   324d0:	mov	w1, #0x0                   	// #0
   324d4:	ldr	x0, [sp, #40]
   324d8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   324dc:	ldr	x0, [sp, #16]
   324e0:	ldr	w1, [x0]
   324e4:	mov	w0, #0x7041                	// #28737
   324e8:	orr	w1, w1, w0
   324ec:	ldr	x0, [sp, #16]
   324f0:	str	w1, [x0]
   324f4:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   324f8:	ldr	x3, [sp, #16]
   324fc:	ldr	x2, [sp, #24]
   32500:	ldr	x1, [sp, #32]
   32504:	ldr	x0, [sp, #40]
   32508:	bl	31ed4 <PyInit__decimal@@Base+0x1a1fc>
   3250c:	cmp	w0, #0x0
   32510:	b.ne	327e0 <PyInit__decimal@@Base+0x1ab08>  // b.any
   32514:	add	x0, sp, #0x4c8
   32518:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3251c:	ldr	x0, [sp, #24]
   32520:	ldr	x1, [x0]
   32524:	ldr	x0, [sp, #1360]
   32528:	add	x0, x1, x0
   3252c:	add	x0, x0, #0x2
   32530:	str	x0, [sp, #1224]
   32534:	ldr	x0, [sp, #1224]
   32538:	mov	x1, #0xa                   	// #10
   3253c:	cmp	x0, #0xa
   32540:	csel	x0, x0, x1, ge  // ge = tcont
   32544:	str	x0, [sp, #1224]
   32548:	mov	w0, #0x6                   	// #6
   3254c:	str	w0, [sp, #1260]
   32550:	ldr	x2, [sp, #16]
   32554:	ldr	x1, [sp, #32]
   32558:	ldr	x0, [sp, #40]
   3255c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   32560:	cmp	w0, #0x0
   32564:	b.eq	327e8 <PyInit__decimal@@Base+0x1ab10>  // b.none
   32568:	ldr	x0, [sp, #40]
   3256c:	ldr	x1, [x0, #8]
   32570:	ldr	x0, [sp, #1360]
   32574:	sub	x1, x1, x0
   32578:	ldr	x0, [sp, #40]
   3257c:	str	x1, [x0, #8]
   32580:	ldr	x0, [sp, #1224]
   32584:	mov	x1, x0
   32588:	ldr	x0, [sp, #40]
   3258c:	bl	32008 <PyInit__decimal@@Base+0x1a330>
   32590:	str	x0, [sp, #1352]
   32594:	ldr	x1, [sp, #1352]
   32598:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3259c:	cmp	x1, x0
   325a0:	b.ne	325b8 <PyInit__decimal@@Base+0x1a8e0>  // b.any
   325a4:	ldr	x2, [sp, #16]
   325a8:	mov	w1, #0x100                 	// #256
   325ac:	ldr	x0, [sp, #40]
   325b0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   325b4:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   325b8:	add	x0, sp, #0x68
   325bc:	mov	x3, #0x0                   	// #0
   325c0:	mov	x2, #0x1                   	// #1
   325c4:	mov	w1, #0x0                   	// #0
   325c8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   325cc:	ldr	x0, [sp, #1352]
   325d0:	sub	x0, x0, #0x1
   325d4:	str	x0, [sp, #1368]
   325d8:	b	32654 <PyInit__decimal@@Base+0x1a97c>
   325dc:	ldr	x0, [sp, #88]
   325e0:	ldr	x1, [sp, #1368]
   325e4:	str	x1, [x0]
   325e8:	add	x0, sp, #0x30
   325ec:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   325f0:	add	x0, sp, #0x4c8
   325f4:	add	x3, x0, #0x1c
   325f8:	add	x2, sp, #0x4c8
   325fc:	add	x1, sp, #0x30
   32600:	add	x0, sp, #0x298
   32604:	mov	x4, x3
   32608:	mov	x3, x2
   3260c:	mov	x2, x1
   32610:	ldr	x1, [sp, #40]
   32614:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
   32618:	add	x0, sp, #0x4c8
   3261c:	add	x3, x0, #0x1c
   32620:	add	x0, sp, #0x4c8
   32624:	add	x2, sp, #0x298
   32628:	add	x1, sp, #0x68
   3262c:	add	x6, sp, #0x68
   32630:	mov	x5, x3
   32634:	mov	x4, x0
   32638:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3263c:	add	x3, x0, #0xc58
   32640:	mov	x0, x6
   32644:	bl	32e64 <PyInit__decimal@@Base+0x1b18c>
   32648:	ldr	x0, [sp, #1368]
   3264c:	sub	x0, x0, #0x1
   32650:	str	x0, [sp, #1368]
   32654:	ldr	x0, [sp, #1368]
   32658:	cmp	x0, #0x0
   3265c:	b.gt	325dc <PyInit__decimal@@Base+0x1a904>
   32660:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   32664:	add	x0, x0, #0xdb0
   32668:	ldr	x1, [sp, #1360]
   3266c:	ldr	x1, [x0, x1, lsl #3]
   32670:	add	x2, sp, #0x4c8
   32674:	add	x0, sp, #0x68
   32678:	ldr	x5, [sp, #16]
   3267c:	mov	x4, x2
   32680:	mov	w3, #0x0                   	// #0
   32684:	mov	x2, x1
   32688:	mov	x1, x0
   3268c:	ldr	x0, [sp, #40]
   32690:	bl	37a74 <PyInit__decimal@@Base+0x1fd9c>
   32694:	add	x0, sp, #0x298
   32698:	str	x0, [sp, #1288]
   3269c:	ldr	x0, [sp, #1288]
   326a0:	str	x0, [sp, #1280]
   326a4:	ldr	x0, [sp, #1280]
   326a8:	ldrb	w0, [x0]
   326ac:	and	w0, w0, #0xe0
   326b0:	cmp	w0, #0x0
   326b4:	cset	w0, eq  // eq = none
   326b8:	and	w0, w0, #0xff
   326bc:	cmp	w0, #0x0
   326c0:	b.eq	326dc <PyInit__decimal@@Base+0x1aa04>  // b.none
   326c4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   326c8:	add	x0, x0, #0x6f8
   326cc:	ldr	x1, [x0]
   326d0:	ldr	x0, [sp, #1288]
   326d4:	ldr	x0, [x0, #40]
   326d8:	blr	x1
   326dc:	ldr	x0, [sp, #1288]
   326e0:	str	x0, [sp, #1272]
   326e4:	ldr	x0, [sp, #1272]
   326e8:	ldrb	w0, [x0]
   326ec:	and	w0, w0, #0x10
   326f0:	cmp	w0, #0x0
   326f4:	cset	w0, eq  // eq = none
   326f8:	and	w0, w0, #0xff
   326fc:	cmp	w0, #0x0
   32700:	b.eq	32718 <PyInit__decimal@@Base+0x1aa40>  // b.none
   32704:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32708:	add	x0, x0, #0x6f8
   3270c:	ldr	x1, [x0]
   32710:	ldr	x0, [sp, #1288]
   32714:	blr	x1
   32718:	nop
   3271c:	add	x0, sp, #0x68
   32720:	str	x0, [sp, #1312]
   32724:	ldr	x0, [sp, #1312]
   32728:	str	x0, [sp, #1304]
   3272c:	ldr	x0, [sp, #1304]
   32730:	ldrb	w0, [x0]
   32734:	and	w0, w0, #0xe0
   32738:	cmp	w0, #0x0
   3273c:	cset	w0, eq  // eq = none
   32740:	and	w0, w0, #0xff
   32744:	cmp	w0, #0x0
   32748:	b.eq	32764 <PyInit__decimal@@Base+0x1aa8c>  // b.none
   3274c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32750:	add	x0, x0, #0x6f8
   32754:	ldr	x1, [x0]
   32758:	ldr	x0, [sp, #1312]
   3275c:	ldr	x0, [x0, #40]
   32760:	blr	x1
   32764:	ldr	x0, [sp, #1312]
   32768:	str	x0, [sp, #1296]
   3276c:	ldr	x0, [sp, #1296]
   32770:	ldrb	w0, [x0]
   32774:	and	w0, w0, #0x10
   32778:	cmp	w0, #0x0
   3277c:	cset	w0, eq  // eq = none
   32780:	and	w0, w0, #0xff
   32784:	cmp	w0, #0x0
   32788:	b.eq	327a0 <PyInit__decimal@@Base+0x1aac8>  // b.none
   3278c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32790:	add	x0, x0, #0x6f8
   32794:	ldr	x1, [x0]
   32798:	ldr	x0, [sp, #1312]
   3279c:	blr	x1
   327a0:	nop
   327a4:	ldr	x0, [sp, #16]
   327a8:	ldr	w1, [x0]
   327ac:	ldr	w2, [sp, #1252]
   327b0:	mov	w0, #0x3be                 	// #958
   327b4:	and	w0, w2, w0
   327b8:	orr	w1, w1, w0
   327bc:	ldr	x0, [sp, #16]
   327c0:	str	w1, [x0]
   327c4:	ldr	x0, [sp, #16]
   327c8:	ldr	w1, [x0]
   327cc:	mov	w0, #0x1040                	// #4160
   327d0:	orr	w1, w1, w0
   327d4:	ldr	x0, [sp, #16]
   327d8:	str	w1, [x0]
   327dc:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   327e0:	nop
   327e4:	b	327ec <PyInit__decimal@@Base+0x1ab14>
   327e8:	nop
   327ec:	ldp	x29, x30, [sp]
   327f0:	add	sp, sp, #0x560
   327f4:	ret
   327f8:	sub	sp, sp, #0x9d0
   327fc:	stp	x29, x30, [sp]
   32800:	mov	x29, sp
   32804:	str	x0, [sp, #40]
   32808:	str	x1, [sp, #32]
   3280c:	str	x2, [sp, #24]
   32810:	str	x3, [sp, #16]
   32814:	ldr	x0, [sp, #32]
   32818:	str	x0, [sp, #2488]
   3281c:	ldr	x0, [sp, #2488]
   32820:	ldrb	w0, [x0]
   32824:	and	w0, w0, #0xe
   32828:	cmp	w0, #0x0
   3282c:	b.eq	32894 <PyInit__decimal@@Base+0x1abbc>  // b.none
   32830:	ldr	x3, [sp, #16]
   32834:	ldr	x2, [sp, #24]
   32838:	ldr	x1, [sp, #32]
   3283c:	ldr	x0, [sp, #40]
   32840:	bl	28540 <PyInit__decimal@@Base+0x10868>
   32844:	cmp	w0, #0x0
   32848:	b.ne	32e4c <PyInit__decimal@@Base+0x1b174>  // b.any
   3284c:	ldr	x0, [sp, #32]
   32850:	str	x0, [sp, #2480]
   32854:	ldr	x0, [sp, #2480]
   32858:	ldrb	w0, [x0]
   3285c:	and	w0, w0, #0x1
   32860:	cmp	w0, #0x0
   32864:	b.eq	32880 <PyInit__decimal@@Base+0x1aba8>  // b.none
   32868:	mov	x3, #0x0                   	// #0
   3286c:	mov	x2, #0x0                   	// #0
   32870:	mov	w1, #0x0                   	// #0
   32874:	ldr	x0, [sp, #40]
   32878:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3287c:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   32880:	mov	w2, #0x2                   	// #2
   32884:	mov	w1, #0x0                   	// #0
   32888:	ldr	x0, [sp, #40]
   3288c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   32890:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   32894:	ldr	x0, [sp, #32]
   32898:	str	x0, [sp, #2472]
   3289c:	ldr	x0, [sp, #2472]
   328a0:	str	x0, [sp, #2464]
   328a4:	ldr	x0, [sp, #2464]
   328a8:	ldr	x1, [x0, #40]
   328ac:	ldr	x0, [sp, #2464]
   328b0:	ldr	x0, [x0, #24]
   328b4:	lsl	x0, x0, #3
   328b8:	sub	x0, x0, #0x8
   328bc:	add	x0, x1, x0
   328c0:	ldr	x0, [x0]
   328c4:	cmp	x0, #0x0
   328c8:	cset	w0, eq  // eq = none
   328cc:	and	w0, w0, #0xff
   328d0:	cmp	w0, #0x0
   328d4:	b.eq	328f0 <PyInit__decimal@@Base+0x1ac18>  // b.none
   328d8:	mov	x3, #0x0                   	// #0
   328dc:	mov	x2, #0x1                   	// #1
   328e0:	mov	w1, #0x0                   	// #0
   328e4:	ldr	x0, [sp, #40]
   328e8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   328ec:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   328f0:	ldr	x1, [sp, #24]
   328f4:	add	x0, sp, #0x8f8
   328f8:	ldp	x2, x3, [x1]
   328fc:	stp	x2, x3, [x0]
   32900:	ldp	x2, x3, [x1, #16]
   32904:	stp	x2, x3, [x0, #16]
   32908:	ldp	x2, x3, [x1, #32]
   3290c:	stp	x2, x3, [x0, #32]
   32910:	mov	w0, #0x6                   	// #6
   32914:	str	w0, [sp, #2332]
   32918:	ldr	x0, [sp, #24]
   3291c:	ldr	w0, [x0, #44]
   32920:	cmp	w0, #0x0
   32924:	b.eq	32df4 <PyInit__decimal@@Base+0x1b11c>  // b.none
   32928:	mov	w0, #0x30                  	// #48
   3292c:	strb	w0, [sp, #48]
   32930:	str	xzr, [sp, #56]
   32934:	str	xzr, [sp, #64]
   32938:	str	xzr, [sp, #72]
   3293c:	mov	x0, #0x40                  	// #64
   32940:	str	x0, [sp, #80]
   32944:	add	x0, sp, #0xf0
   32948:	str	x0, [sp, #88]
   3294c:	mov	w0, #0x30                  	// #48
   32950:	strb	w0, [sp, #96]
   32954:	str	xzr, [sp, #104]
   32958:	str	xzr, [sp, #112]
   3295c:	str	xzr, [sp, #120]
   32960:	mov	x0, #0x40                  	// #64
   32964:	str	x0, [sp, #128]
   32968:	add	x0, sp, #0x2f0
   3296c:	str	x0, [sp, #136]
   32970:	mov	w0, #0x30                  	// #48
   32974:	strb	w0, [sp, #144]
   32978:	str	xzr, [sp, #152]
   3297c:	str	xzr, [sp, #160]
   32980:	str	xzr, [sp, #168]
   32984:	mov	x0, #0x40                  	// #64
   32988:	str	x0, [sp, #176]
   3298c:	add	x0, sp, #0x4f0
   32990:	str	x0, [sp, #184]
   32994:	mov	w0, #0x30                  	// #48
   32998:	strb	w0, [sp, #192]
   3299c:	str	xzr, [sp, #200]
   329a0:	str	xzr, [sp, #208]
   329a4:	str	xzr, [sp, #216]
   329a8:	mov	x0, #0x40                  	// #64
   329ac:	str	x0, [sp, #224]
   329b0:	add	x0, sp, #0x6f0
   329b4:	str	x0, [sp, #232]
   329b8:	ldr	x1, [sp, #40]
   329bc:	ldr	x0, [sp, #32]
   329c0:	cmp	x1, x0
   329c4:	b.ne	329fc <PyInit__decimal@@Base+0x1ad24>  // b.any
   329c8:	add	x0, sp, #0xc0
   329cc:	ldr	x2, [sp, #16]
   329d0:	ldr	x1, [sp, #32]
   329d4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   329d8:	cmp	w0, #0x0
   329dc:	b.ne	329f4 <PyInit__decimal@@Base+0x1ad1c>  // b.any
   329e0:	ldr	x2, [sp, #16]
   329e4:	mov	w1, #0x200                 	// #512
   329e8:	ldr	x0, [sp, #40]
   329ec:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   329f0:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   329f4:	add	x0, sp, #0xc0
   329f8:	str	x0, [sp, #32]
   329fc:	str	wzr, [sp, #2336]
   32a00:	ldr	x0, [sp, #24]
   32a04:	ldr	x0, [x0]
   32a08:	add	x0, x0, #0x3
   32a0c:	str	x0, [sp, #2504]
   32a10:	ldr	x0, [sp, #2504]
   32a14:	str	x0, [sp, #2296]
   32a18:	str	wzr, [sp, #2292]
   32a1c:	add	x1, sp, #0x8f4
   32a20:	add	x0, sp, #0x8f8
   32a24:	mov	x3, x1
   32a28:	mov	x2, x0
   32a2c:	ldr	x1, [sp, #32]
   32a30:	ldr	x0, [sp, #40]
   32a34:	bl	32324 <PyInit__decimal@@Base+0x1a64c>
   32a38:	ldr	x0, [sp, #16]
   32a3c:	ldr	w1, [x0]
   32a40:	ldr	w0, [sp, #2292]
   32a44:	orr	w1, w1, w0
   32a48:	ldr	x0, [sp, #16]
   32a4c:	str	w1, [x0]
   32a50:	ldr	x0, [sp, #40]
   32a54:	ldr	x1, [x0, #8]
   32a58:	ldr	x0, [sp, #40]
   32a5c:	ldr	x0, [x0, #16]
   32a60:	add	x1, x1, x0
   32a64:	ldr	x0, [sp, #2296]
   32a68:	sub	x0, x1, x0
   32a6c:	str	x0, [sp, #2496]
   32a70:	ldr	w0, [sp, #2292]
   32a74:	and	w0, w0, #0x4000
   32a78:	cmp	w0, #0x0
   32a7c:	b.eq	32a8c <PyInit__decimal@@Base+0x1adb4>  // b.none
   32a80:	ldr	x0, [sp, #40]
   32a84:	ldr	x0, [x0, #8]
   32a88:	str	x0, [sp, #2496]
   32a8c:	add	x0, sp, #0x90
   32a90:	ldr	x3, [sp, #2496]
   32a94:	mov	x2, #0x1                   	// #1
   32a98:	mov	w1, #0x0                   	// #0
   32a9c:	bl	277e8 <PyInit__decimal@@Base+0xfb10>
   32aa0:	ldr	x0, [sp, #24]
   32aa4:	ldr	x0, [x0]
   32aa8:	str	x0, [sp, #2296]
   32aac:	add	x0, sp, #0x8f8
   32ab0:	add	x3, x0, #0x1c
   32ab4:	add	x2, sp, #0x8f8
   32ab8:	add	x1, sp, #0x90
   32abc:	add	x0, sp, #0x30
   32ac0:	mov	x4, x3
   32ac4:	mov	x3, x2
   32ac8:	mov	x2, x1
   32acc:	ldr	x1, [sp, #40]
   32ad0:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   32ad4:	add	x0, sp, #0x8f8
   32ad8:	add	x3, x0, #0x1c
   32adc:	add	x2, sp, #0x8f8
   32ae0:	add	x1, sp, #0x90
   32ae4:	add	x0, sp, #0x60
   32ae8:	mov	x4, x3
   32aec:	mov	x3, x2
   32af0:	mov	x2, x1
   32af4:	ldr	x1, [sp, #40]
   32af8:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   32afc:	ldr	x0, [sp, #40]
   32b00:	str	x0, [sp, #2456]
   32b04:	ldr	x0, [sp, #2456]
   32b08:	ldrb	w0, [x0]
   32b0c:	and	w0, w0, #0xe
   32b10:	cmp	w0, #0x0
   32b14:	b.ne	32b74 <PyInit__decimal@@Base+0x1ae9c>  // b.any
   32b18:	ldr	x0, [sp, #40]
   32b1c:	str	x0, [sp, #2448]
   32b20:	ldr	x0, [sp, #2448]
   32b24:	str	x0, [sp, #2440]
   32b28:	ldr	x0, [sp, #2440]
   32b2c:	ldr	x1, [x0, #40]
   32b30:	ldr	x0, [sp, #2440]
   32b34:	ldr	x0, [x0, #24]
   32b38:	lsl	x0, x0, #3
   32b3c:	sub	x0, x0, #0x8
   32b40:	add	x0, x1, x0
   32b44:	ldr	x0, [x0]
   32b48:	cmp	x0, #0x0
   32b4c:	cset	w0, eq  // eq = none
   32b50:	and	w0, w0, #0xff
   32b54:	cmp	w0, #0x0
   32b58:	b.ne	32b74 <PyInit__decimal@@Base+0x1ae9c>  // b.any
   32b5c:	add	x1, sp, #0x60
   32b60:	add	x0, sp, #0x30
   32b64:	ldr	x2, [sp, #16]
   32b68:	bl	2a784 <PyInit__decimal@@Base+0x12aac>
   32b6c:	cmp	w0, #0x0
   32b70:	b.ne	32bf4 <PyInit__decimal@@Base+0x1af1c>  // b.any
   32b74:	ldr	x0, [sp, #24]
   32b78:	ldr	w0, [x0, #40]
   32b7c:	str	w0, [sp, #2336]
   32b80:	add	x0, sp, #0x8f8
   32b84:	ldr	x2, [sp, #16]
   32b88:	mov	x1, x0
   32b8c:	ldr	x0, [sp, #40]
   32b90:	bl	31dd4 <PyInit__decimal@@Base+0x1a0fc>
   32b94:	add	x0, sp, #0x8f8
   32b98:	ldr	x2, [sp, #16]
   32b9c:	mov	x1, x0
   32ba0:	ldr	x0, [sp, #40]
   32ba4:	bl	29528 <PyInit__decimal@@Base+0x11850>
   32ba8:	add	x0, sp, #0x8f8
   32bac:	ldr	x2, [sp, #16]
   32bb0:	mov	x1, x0
   32bb4:	ldr	x0, [sp, #40]
   32bb8:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   32bbc:	nop
   32bc0:	add	x0, sp, #0x30
   32bc4:	str	x0, [sp, #2360]
   32bc8:	ldr	x0, [sp, #2360]
   32bcc:	str	x0, [sp, #2352]
   32bd0:	ldr	x0, [sp, #2352]
   32bd4:	ldrb	w0, [x0]
   32bd8:	and	w0, w0, #0xe0
   32bdc:	cmp	w0, #0x0
   32be0:	cset	w0, eq  // eq = none
   32be4:	and	w0, w0, #0xff
   32be8:	cmp	w0, #0x0
   32bec:	b.eq	32c1c <PyInit__decimal@@Base+0x1af44>  // b.none
   32bf0:	b	32c04 <PyInit__decimal@@Base+0x1af2c>
   32bf4:	ldr	x0, [sp, #2504]
   32bf8:	add	x0, x0, #0x13
   32bfc:	str	x0, [sp, #2504]
   32c00:	b	32a10 <PyInit__decimal@@Base+0x1ad38>
   32c04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32c08:	add	x0, x0, #0x6f8
   32c0c:	ldr	x1, [x0]
   32c10:	ldr	x0, [sp, #2360]
   32c14:	ldr	x0, [x0, #40]
   32c18:	blr	x1
   32c1c:	ldr	x0, [sp, #2360]
   32c20:	str	x0, [sp, #2344]
   32c24:	ldr	x0, [sp, #2344]
   32c28:	ldrb	w0, [x0]
   32c2c:	and	w0, w0, #0x10
   32c30:	cmp	w0, #0x0
   32c34:	cset	w0, eq  // eq = none
   32c38:	and	w0, w0, #0xff
   32c3c:	cmp	w0, #0x0
   32c40:	b.eq	32c58 <PyInit__decimal@@Base+0x1af80>  // b.none
   32c44:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32c48:	add	x0, x0, #0x6f8
   32c4c:	ldr	x1, [x0]
   32c50:	ldr	x0, [sp, #2360]
   32c54:	blr	x1
   32c58:	nop
   32c5c:	add	x0, sp, #0x60
   32c60:	str	x0, [sp, #2384]
   32c64:	ldr	x0, [sp, #2384]
   32c68:	str	x0, [sp, #2376]
   32c6c:	ldr	x0, [sp, #2376]
   32c70:	ldrb	w0, [x0]
   32c74:	and	w0, w0, #0xe0
   32c78:	cmp	w0, #0x0
   32c7c:	cset	w0, eq  // eq = none
   32c80:	and	w0, w0, #0xff
   32c84:	cmp	w0, #0x0
   32c88:	b.eq	32ca4 <PyInit__decimal@@Base+0x1afcc>  // b.none
   32c8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32c90:	add	x0, x0, #0x6f8
   32c94:	ldr	x1, [x0]
   32c98:	ldr	x0, [sp, #2384]
   32c9c:	ldr	x0, [x0, #40]
   32ca0:	blr	x1
   32ca4:	ldr	x0, [sp, #2384]
   32ca8:	str	x0, [sp, #2368]
   32cac:	ldr	x0, [sp, #2368]
   32cb0:	ldrb	w0, [x0]
   32cb4:	and	w0, w0, #0x10
   32cb8:	cmp	w0, #0x0
   32cbc:	cset	w0, eq  // eq = none
   32cc0:	and	w0, w0, #0xff
   32cc4:	cmp	w0, #0x0
   32cc8:	b.eq	32ce0 <PyInit__decimal@@Base+0x1b008>  // b.none
   32ccc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32cd0:	add	x0, x0, #0x6f8
   32cd4:	ldr	x1, [x0]
   32cd8:	ldr	x0, [sp, #2384]
   32cdc:	blr	x1
   32ce0:	nop
   32ce4:	add	x0, sp, #0x90
   32ce8:	str	x0, [sp, #2408]
   32cec:	ldr	x0, [sp, #2408]
   32cf0:	str	x0, [sp, #2400]
   32cf4:	ldr	x0, [sp, #2400]
   32cf8:	ldrb	w0, [x0]
   32cfc:	and	w0, w0, #0xe0
   32d00:	cmp	w0, #0x0
   32d04:	cset	w0, eq  // eq = none
   32d08:	and	w0, w0, #0xff
   32d0c:	cmp	w0, #0x0
   32d10:	b.eq	32d2c <PyInit__decimal@@Base+0x1b054>  // b.none
   32d14:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32d18:	add	x0, x0, #0x6f8
   32d1c:	ldr	x1, [x0]
   32d20:	ldr	x0, [sp, #2408]
   32d24:	ldr	x0, [x0, #40]
   32d28:	blr	x1
   32d2c:	ldr	x0, [sp, #2408]
   32d30:	str	x0, [sp, #2392]
   32d34:	ldr	x0, [sp, #2392]
   32d38:	ldrb	w0, [x0]
   32d3c:	and	w0, w0, #0x10
   32d40:	cmp	w0, #0x0
   32d44:	cset	w0, eq  // eq = none
   32d48:	and	w0, w0, #0xff
   32d4c:	cmp	w0, #0x0
   32d50:	b.eq	32d68 <PyInit__decimal@@Base+0x1b090>  // b.none
   32d54:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32d58:	add	x0, x0, #0x6f8
   32d5c:	ldr	x1, [x0]
   32d60:	ldr	x0, [sp, #2408]
   32d64:	blr	x1
   32d68:	nop
   32d6c:	add	x0, sp, #0xc0
   32d70:	str	x0, [sp, #2432]
   32d74:	ldr	x0, [sp, #2432]
   32d78:	str	x0, [sp, #2424]
   32d7c:	ldr	x0, [sp, #2424]
   32d80:	ldrb	w0, [x0]
   32d84:	and	w0, w0, #0xe0
   32d88:	cmp	w0, #0x0
   32d8c:	cset	w0, eq  // eq = none
   32d90:	and	w0, w0, #0xff
   32d94:	cmp	w0, #0x0
   32d98:	b.eq	32db4 <PyInit__decimal@@Base+0x1b0dc>  // b.none
   32d9c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32da0:	add	x0, x0, #0x6f8
   32da4:	ldr	x1, [x0]
   32da8:	ldr	x0, [sp, #2432]
   32dac:	ldr	x0, [x0, #40]
   32db0:	blr	x1
   32db4:	ldr	x0, [sp, #2432]
   32db8:	str	x0, [sp, #2416]
   32dbc:	ldr	x0, [sp, #2416]
   32dc0:	ldrb	w0, [x0]
   32dc4:	and	w0, w0, #0x10
   32dc8:	cmp	w0, #0x0
   32dcc:	cset	w0, eq  // eq = none
   32dd0:	and	w0, w0, #0xff
   32dd4:	cmp	w0, #0x0
   32dd8:	b.eq	32e54 <PyInit__decimal@@Base+0x1b17c>  // b.none
   32ddc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32de0:	add	x0, x0, #0x6f8
   32de4:	ldr	x1, [x0]
   32de8:	ldr	x0, [sp, #2432]
   32dec:	blr	x1
   32df0:	b	32e54 <PyInit__decimal@@Base+0x1b17c>
   32df4:	add	x0, sp, #0x8f8
   32df8:	ldr	x3, [sp, #16]
   32dfc:	mov	x2, x0
   32e00:	ldr	x1, [sp, #32]
   32e04:	ldr	x0, [sp, #40]
   32e08:	bl	32324 <PyInit__decimal@@Base+0x1a64c>
   32e0c:	add	x0, sp, #0x8f8
   32e10:	ldr	x2, [sp, #16]
   32e14:	mov	x1, x0
   32e18:	ldr	x0, [sp, #40]
   32e1c:	bl	31dd4 <PyInit__decimal@@Base+0x1a0fc>
   32e20:	add	x0, sp, #0x8f8
   32e24:	ldr	x2, [sp, #16]
   32e28:	mov	x1, x0
   32e2c:	ldr	x0, [sp, #40]
   32e30:	bl	29528 <PyInit__decimal@@Base+0x11850>
   32e34:	add	x0, sp, #0x8f8
   32e38:	ldr	x2, [sp, #16]
   32e3c:	mov	x1, x0
   32e40:	ldr	x0, [sp, #40]
   32e44:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   32e48:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   32e4c:	nop
   32e50:	b	32e58 <PyInit__decimal@@Base+0x1b180>
   32e54:	nop
   32e58:	ldp	x29, x30, [sp]
   32e5c:	add	sp, sp, #0x9d0
   32e60:	ret
   32e64:	stp	x29, x30, [sp, #-112]!
   32e68:	mov	x29, sp
   32e6c:	str	x0, [sp, #56]
   32e70:	str	x1, [sp, #48]
   32e74:	str	x2, [sp, #40]
   32e78:	str	x3, [sp, #32]
   32e7c:	str	x4, [sp, #24]
   32e80:	str	x5, [sp, #16]
   32e84:	str	wzr, [sp, #76]
   32e88:	str	xzr, [sp, #104]
   32e8c:	ldr	x1, [sp, #56]
   32e90:	ldr	x0, [sp, #32]
   32e94:	cmp	x1, x0
   32e98:	b.ne	32ed0 <PyInit__decimal@@Base+0x1b1f8>  // b.any
   32e9c:	ldr	x0, [sp, #32]
   32ea0:	bl	29ae4 <PyInit__decimal@@Base+0x11e0c>
   32ea4:	str	x0, [sp, #104]
   32ea8:	ldr	x0, [sp, #104]
   32eac:	cmp	x0, #0x0
   32eb0:	b.ne	32ec8 <PyInit__decimal@@Base+0x1b1f0>  // b.any
   32eb4:	ldr	x2, [sp, #16]
   32eb8:	mov	w1, #0x200                 	// #512
   32ebc:	ldr	x0, [sp, #56]
   32ec0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   32ec4:	b	32fc4 <PyInit__decimal@@Base+0x1b2ec>
   32ec8:	ldr	x0, [sp, #104]
   32ecc:	str	x0, [sp, #32]
   32ed0:	add	x0, sp, #0x4c
   32ed4:	mov	x4, x0
   32ed8:	ldr	x3, [sp, #24]
   32edc:	ldr	x2, [sp, #40]
   32ee0:	ldr	x1, [sp, #48]
   32ee4:	ldr	x0, [sp, #56]
   32ee8:	bl	366fc <PyInit__decimal@@Base+0x1ea24>
   32eec:	ldr	w0, [sp, #76]
   32ef0:	and	w0, w0, #0x100
   32ef4:	cmp	w0, #0x0
   32ef8:	b.ne	32f18 <PyInit__decimal@@Base+0x1b240>  // b.any
   32efc:	add	x0, sp, #0x4c
   32f00:	mov	x4, x0
   32f04:	ldr	x3, [sp, #24]
   32f08:	ldr	x2, [sp, #32]
   32f0c:	ldr	x1, [sp, #56]
   32f10:	ldr	x0, [sp, #56]
   32f14:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   32f18:	ldr	x0, [sp, #104]
   32f1c:	cmp	x0, #0x0
   32f20:	b.eq	32fac <PyInit__decimal@@Base+0x1b2d4>  // b.none
   32f24:	ldr	x0, [sp, #104]
   32f28:	str	x0, [sp, #96]
   32f2c:	ldr	x0, [sp, #96]
   32f30:	str	x0, [sp, #88]
   32f34:	ldr	x0, [sp, #88]
   32f38:	ldrb	w0, [x0]
   32f3c:	and	w0, w0, #0xe0
   32f40:	cmp	w0, #0x0
   32f44:	cset	w0, eq  // eq = none
   32f48:	and	w0, w0, #0xff
   32f4c:	cmp	w0, #0x0
   32f50:	b.eq	32f6c <PyInit__decimal@@Base+0x1b294>  // b.none
   32f54:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32f58:	add	x0, x0, #0x6f8
   32f5c:	ldr	x1, [x0]
   32f60:	ldr	x0, [sp, #96]
   32f64:	ldr	x0, [x0, #40]
   32f68:	blr	x1
   32f6c:	ldr	x0, [sp, #96]
   32f70:	str	x0, [sp, #80]
   32f74:	ldr	x0, [sp, #80]
   32f78:	ldrb	w0, [x0]
   32f7c:	and	w0, w0, #0x10
   32f80:	cmp	w0, #0x0
   32f84:	cset	w0, eq  // eq = none
   32f88:	and	w0, w0, #0xff
   32f8c:	cmp	w0, #0x0
   32f90:	b.eq	32fa8 <PyInit__decimal@@Base+0x1b2d0>  // b.none
   32f94:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   32f98:	add	x0, x0, #0x6f8
   32f9c:	ldr	x1, [x0]
   32fa0:	ldr	x0, [sp, #96]
   32fa4:	blr	x1
   32fa8:	nop
   32fac:	ldr	x0, [sp, #16]
   32fb0:	ldr	w1, [x0]
   32fb4:	ldr	w0, [sp, #76]
   32fb8:	orr	w1, w1, w0
   32fbc:	ldr	x0, [sp, #16]
   32fc0:	str	w1, [x0]
   32fc4:	ldp	x29, x30, [sp], #112
   32fc8:	ret
   32fcc:	sub	sp, sp, #0x30
   32fd0:	str	x0, [sp, #24]
   32fd4:	str	x1, [sp, #16]
   32fd8:	str	x2, [sp, #8]
   32fdc:	ldr	x1, [sp, #16]
   32fe0:	ldr	x0, [sp, #8]
   32fe4:	cmp	x1, x0
   32fe8:	b.gt	32ff4 <PyInit__decimal@@Base+0x1b31c>
   32fec:	mov	w0, #0xffffffff            	// #-1
   32ff0:	b	33054 <PyInit__decimal@@Base+0x1b37c>
   32ff4:	str	wzr, [sp, #36]
   32ff8:	ldr	x0, [sp, #16]
   32ffc:	str	x0, [sp, #40]
   33000:	ldr	x0, [sp, #40]
   33004:	add	x0, x0, #0x2
   33008:	lsr	x1, x0, #63
   3300c:	add	x0, x1, x0
   33010:	asr	x0, x0, #1
   33014:	str	x0, [sp, #40]
   33018:	ldr	w0, [sp, #36]
   3301c:	add	w1, w0, #0x1
   33020:	str	w1, [sp, #36]
   33024:	sxtw	x0, w0
   33028:	lsl	x0, x0, #3
   3302c:	ldr	x1, [sp, #24]
   33030:	add	x0, x1, x0
   33034:	ldr	x1, [sp, #40]
   33038:	str	x1, [x0]
   3303c:	ldr	x1, [sp, #40]
   33040:	ldr	x0, [sp, #8]
   33044:	cmp	x1, x0
   33048:	b.gt	33000 <PyInit__decimal@@Base+0x1b328>
   3304c:	ldr	w0, [sp, #36]
   33050:	sub	w0, w0, #0x1
   33054:	add	sp, sp, #0x30
   33058:	ret
   3305c:	sub	sp, sp, #0x530
   33060:	stp	x29, x30, [sp]
   33064:	mov	x29, sp
   33068:	str	x0, [sp, #40]
   3306c:	str	x1, [sp, #32]
   33070:	str	x2, [sp, #24]
   33074:	mov	w0, #0x30                  	// #48
   33078:	strb	w0, [sp, #616]
   3307c:	str	xzr, [sp, #624]
   33080:	str	xzr, [sp, #632]
   33084:	str	xzr, [sp, #640]
   33088:	mov	x0, #0x40                  	// #64
   3308c:	str	x0, [sp, #648]
   33090:	add	x0, sp, #0x298
   33094:	str	x0, [sp, #656]
   33098:	mov	x0, #0xa                   	// #10
   3309c:	str	x0, [sp, #608]
   330a0:	mov	w0, #0xffffff90            	// #-112
   330a4:	strb	w0, [sp, #560]
   330a8:	str	xzr, [sp, #568]
   330ac:	mov	x0, #0x2                   	// #2
   330b0:	str	x0, [sp, #576]
   330b4:	mov	x0, #0x1                   	// #1
   330b8:	str	x0, [sp, #584]
   330bc:	mov	x0, #0x1                   	// #1
   330c0:	str	x0, [sp, #592]
   330c4:	add	x0, sp, #0x260
   330c8:	str	x0, [sp, #600]
   330cc:	mov	x1, #0x4c0                 	// #1216
   330d0:	ldr	x0, [sp, #32]
   330d4:	sub	x0, x1, x0
   330d8:	str	x0, [sp, #1312]
   330dc:	ldr	x1, [sp, #1312]
   330e0:	ldr	x0, [sp, #1312]
   330e4:	mov	x2, #0x0                   	// #0
   330e8:	cmp	x1, #0x0
   330ec:	csel	x0, x0, x2, ge  // ge = tcont
   330f0:	str	x0, [sp, #1312]
   330f4:	ldr	x3, [sp, #24]
   330f8:	ldr	x2, [sp, #1312]
   330fc:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   33100:	add	x1, x0, #0xce8
   33104:	ldr	x0, [sp, #40]
   33108:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3310c:	str	x0, [sp, #1304]
   33110:	ldr	x0, [sp, #1304]
   33114:	cmn	x0, #0x1
   33118:	b.ne	33130 <PyInit__decimal@@Base+0x1b458>  // b.any
   3311c:	ldr	x2, [sp, #24]
   33120:	mov	w1, #0x200                 	// #512
   33124:	ldr	x0, [sp, #40]
   33128:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3312c:	b	3336c <PyInit__decimal@@Base+0x1b694>
   33130:	ldr	x0, [sp, #40]
   33134:	ldr	x0, [x0, #16]
   33138:	mov	x1, #0x1                   	// #1
   3313c:	sub	x1, x1, x0
   33140:	ldr	x0, [sp, #40]
   33144:	str	x1, [x0, #8]
   33148:	add	x0, sp, #0x498
   3314c:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   33150:	ldr	x0, [sp, #32]
   33154:	cmp	x0, #0x4bf
   33158:	b.gt	33198 <PyInit__decimal@@Base+0x1b4c0>
   3315c:	ldr	x0, [sp, #32]
   33160:	str	x0, [sp, #1176]
   33164:	add	x0, sp, #0x498
   33168:	ldr	x3, [sp, #24]
   3316c:	mov	x2, x0
   33170:	ldr	x1, [sp, #1304]
   33174:	ldr	x0, [sp, #40]
   33178:	bl	28c68 <PyInit__decimal@@Base+0x10f90>
   3317c:	ldr	x0, [sp, #24]
   33180:	ldr	w1, [x0]
   33184:	mov	w0, #0x1040                	// #4160
   33188:	orr	w1, w1, w0
   3318c:	ldr	x0, [sp, #24]
   33190:	str	w1, [x0]
   33194:	b	3336c <PyInit__decimal@@Base+0x1b694>
   33198:	add	x0, sp, #0x4c8
   3319c:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   331a0:	mov	w0, #0x8                   	// #8
   331a4:	str	w0, [sp, #1260]
   331a8:	ldr	x0, [sp, #32]
   331ac:	add	x1, x0, #0x2
   331b0:	ldr	x0, [sp, #40]
   331b4:	ldr	x0, [x0, #8]
   331b8:	neg	x2, x0
   331bc:	add	x0, sp, #0x30
   331c0:	bl	32fcc <PyInit__decimal@@Base+0x1b2f4>
   331c4:	str	w0, [sp, #1324]
   331c8:	b	332b4 <PyInit__decimal@@Base+0x1b5dc>
   331cc:	ldrsw	x0, [sp, #1324]
   331d0:	lsl	x0, x0, #3
   331d4:	add	x1, sp, #0x30
   331d8:	ldr	x0, [x1, x0]
   331dc:	lsl	x0, x0, #1
   331e0:	add	x0, x0, #0x3
   331e4:	str	x0, [sp, #1224]
   331e8:	ldr	x0, [sp, #40]
   331ec:	ldrb	w0, [x0]
   331f0:	eor	w0, w0, #0x1
   331f4:	and	w1, w0, #0xff
   331f8:	ldr	x0, [sp, #40]
   331fc:	strb	w1, [x0]
   33200:	add	x1, sp, #0x4c8
   33204:	add	x0, sp, #0x268
   33208:	ldr	x3, [sp, #24]
   3320c:	mov	x2, x1
   33210:	ldr	x1, [sp, #40]
   33214:	bl	32324 <PyInit__decimal@@Base+0x1a64c>
   33218:	ldr	x0, [sp, #40]
   3321c:	ldrb	w0, [x0]
   33220:	eor	w0, w0, #0x1
   33224:	and	w1, w0, #0xff
   33228:	ldr	x0, [sp, #40]
   3322c:	strb	w1, [x0]
   33230:	add	x3, sp, #0x4c8
   33234:	add	x2, sp, #0x268
   33238:	add	x1, sp, #0x230
   3323c:	add	x0, sp, #0x268
   33240:	ldr	x4, [sp, #24]
   33244:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   33248:	add	x0, sp, #0x498
   3324c:	add	x1, sp, #0x268
   33250:	add	x5, sp, #0x268
   33254:	ldr	x4, [sp, #24]
   33258:	mov	x3, x0
   3325c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   33260:	add	x2, x0, #0xc58
   33264:	mov	x0, x5
   33268:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   3326c:	add	x1, sp, #0x498
   33270:	add	x0, sp, #0x268
   33274:	ldr	x4, [sp, #24]
   33278:	mov	x3, x1
   3327c:	mov	x2, x0
   33280:	ldr	x1, [sp, #40]
   33284:	ldr	x0, [sp, #40]
   33288:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   3328c:	ldr	x0, [sp, #40]
   33290:	str	x0, [sp, #1296]
   33294:	ldr	x0, [sp, #1296]
   33298:	ldrb	w0, [x0]
   3329c:	and	w0, w0, #0xe
   332a0:	cmp	w0, #0x0
   332a4:	b.ne	332c4 <PyInit__decimal@@Base+0x1b5ec>  // b.any
   332a8:	ldr	w0, [sp, #1324]
   332ac:	sub	w0, w0, #0x1
   332b0:	str	w0, [sp, #1324]
   332b4:	ldr	w0, [sp, #1324]
   332b8:	cmp	w0, #0x0
   332bc:	b.ge	331cc <PyInit__decimal@@Base+0x1b4f4>  // b.tcont
   332c0:	b	332c8 <PyInit__decimal@@Base+0x1b5f0>
   332c4:	nop
   332c8:	add	x0, sp, #0x268
   332cc:	str	x0, [sp, #1288]
   332d0:	ldr	x0, [sp, #1288]
   332d4:	str	x0, [sp, #1280]
   332d8:	ldr	x0, [sp, #1280]
   332dc:	ldrb	w0, [x0]
   332e0:	and	w0, w0, #0xe0
   332e4:	cmp	w0, #0x0
   332e8:	cset	w0, eq  // eq = none
   332ec:	and	w0, w0, #0xff
   332f0:	cmp	w0, #0x0
   332f4:	b.eq	33310 <PyInit__decimal@@Base+0x1b638>  // b.none
   332f8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   332fc:	add	x0, x0, #0x6f8
   33300:	ldr	x1, [x0]
   33304:	ldr	x0, [sp, #1288]
   33308:	ldr	x0, [x0, #40]
   3330c:	blr	x1
   33310:	ldr	x0, [sp, #1288]
   33314:	str	x0, [sp, #1272]
   33318:	ldr	x0, [sp, #1272]
   3331c:	ldrb	w0, [x0]
   33320:	and	w0, w0, #0x10
   33324:	cmp	w0, #0x0
   33328:	cset	w0, eq  // eq = none
   3332c:	and	w0, w0, #0xff
   33330:	cmp	w0, #0x0
   33334:	b.eq	3334c <PyInit__decimal@@Base+0x1b674>  // b.none
   33338:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3333c:	add	x0, x0, #0x6f8
   33340:	ldr	x1, [x0]
   33344:	ldr	x0, [sp, #1288]
   33348:	blr	x1
   3334c:	nop
   33350:	ldr	x0, [sp, #32]
   33354:	str	x0, [sp, #1176]
   33358:	add	x0, sp, #0x498
   3335c:	ldr	x2, [sp, #24]
   33360:	mov	x1, x0
   33364:	ldr	x0, [sp, #40]
   33368:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3336c:	ldp	x29, x30, [sp]
   33370:	add	sp, sp, #0x530
   33374:	ret
   33378:	sub	sp, sp, #0xa10
   3337c:	stp	x29, x30, [sp]
   33380:	mov	x29, sp
   33384:	str	x0, [sp, #40]
   33388:	str	x1, [sp, #32]
   3338c:	str	x2, [sp, #24]
   33390:	str	x3, [sp, #16]
   33394:	ldr	x0, [sp, #40]
   33398:	str	x0, [sp, #2544]
   3339c:	mov	w0, #0x30                  	// #48
   333a0:	strb	w0, [sp, #1704]
   333a4:	str	xzr, [sp, #1712]
   333a8:	str	xzr, [sp, #1720]
   333ac:	str	xzr, [sp, #1728]
   333b0:	mov	x0, #0x40                  	// #64
   333b4:	str	x0, [sp, #1736]
   333b8:	add	x0, sp, #0x6d8
   333bc:	str	x0, [sp, #1744]
   333c0:	mov	w0, #0x30                  	// #48
   333c4:	strb	w0, [sp, #1144]
   333c8:	str	xzr, [sp, #1152]
   333cc:	str	xzr, [sp, #1160]
   333d0:	str	xzr, [sp, #1168]
   333d4:	mov	x0, #0x40                  	// #64
   333d8:	str	x0, [sp, #1176]
   333dc:	add	x0, sp, #0x4a8
   333e0:	str	x0, [sp, #1184]
   333e4:	mov	w0, #0x30                  	// #48
   333e8:	strb	w0, [sp, #584]
   333ec:	str	xzr, [sp, #592]
   333f0:	str	xzr, [sp, #600]
   333f4:	str	xzr, [sp, #608]
   333f8:	mov	x0, #0x40                  	// #64
   333fc:	str	x0, [sp, #616]
   33400:	add	x0, sp, #0x278
   33404:	str	x0, [sp, #624]
   33408:	add	x0, sp, #0x6a8
   3340c:	ldr	x2, [sp, #16]
   33410:	ldr	x1, [sp, #32]
   33414:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   33418:	cmp	w0, #0x0
   3341c:	b.ne	33434 <PyInit__decimal@@Base+0x1b75c>  // b.any
   33420:	ldr	x2, [sp, #16]
   33424:	mov	w1, #0x200                 	// #512
   33428:	ldr	x0, [sp, #40]
   3342c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   33430:	b	339b4 <PyInit__decimal@@Base+0x1bcdc>
   33434:	add	x2, sp, #0x6a8
   33438:	add	x1, sp, #0x38
   3343c:	add	x0, sp, #0x40
   33440:	mov	w3, #0x3                   	// #3
   33444:	bl	26cbc <PyInit__decimal@@Base+0xefe4>
   33448:	ldr	x0, [sp, #56]
   3344c:	cmp	x0, #0x9
   33450:	b.hi	3346c <PyInit__decimal@@Base+0x1b794>  // b.pmore
   33454:	ldr	x1, [sp, #56]
   33458:	mov	x0, x1
   3345c:	lsl	x0, x0, #2
   33460:	add	x0, x0, x1
   33464:	lsl	x0, x0, #1
   33468:	str	x0, [sp, #56]
   3346c:	ldr	x0, [sp, #56]
   33470:	cmp	x0, #0x63
   33474:	b.hi	33490 <PyInit__decimal@@Base+0x1b7b8>  // b.pmore
   33478:	ldr	x1, [sp, #56]
   3347c:	mov	x0, x1
   33480:	lsl	x0, x0, #2
   33484:	add	x0, x0, x1
   33488:	lsl	x0, x0, #1
   3348c:	str	x0, [sp, #56]
   33490:	ldr	x0, [sp, #56]
   33494:	sub	x0, x0, #0x64
   33498:	str	x0, [sp, #56]
   3349c:	ldr	x0, [sp, #32]
   334a0:	ldr	x0, [x0, #16]
   334a4:	str	x0, [sp, #2536]
   334a8:	ldr	x0, [sp, #32]
   334ac:	ldr	x0, [x0, #8]
   334b0:	str	x0, [sp, #2528]
   334b4:	ldr	x0, [sp, #2544]
   334b8:	str	x0, [sp, #2496]
   334bc:	ldr	x0, [sp, #2496]
   334c0:	str	x0, [sp, #2488]
   334c4:	ldr	x0, [sp, #2488]
   334c8:	ldrb	w0, [x0]
   334cc:	and	w0, w0, #0x20
   334d0:	cmp	w0, #0x0
   334d4:	b.ne	33550 <PyInit__decimal@@Base+0x1b878>  // b.any
   334d8:	ldr	x0, [sp, #2496]
   334dc:	ldr	x1, [x0, #32]
   334e0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   334e4:	add	x0, x0, #0x6d8
   334e8:	ldr	x0, [x0]
   334ec:	cmp	x1, x0
   334f0:	b.le	33550 <PyInit__decimal@@Base+0x1b878>
   334f4:	strb	wzr, [sp, #55]
   334f8:	ldr	x0, [sp, #2496]
   334fc:	ldr	x4, [x0, #40]
   33500:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33504:	add	x0, x0, #0x6d8
   33508:	ldr	x0, [x0]
   3350c:	mov	x1, x0
   33510:	add	x0, sp, #0x37
   33514:	mov	x3, x0
   33518:	mov	x2, #0x8                   	// #8
   3351c:	mov	x0, x4
   33520:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   33524:	mov	x1, x0
   33528:	ldr	x0, [sp, #2496]
   3352c:	str	x1, [x0, #40]
   33530:	ldrb	w0, [sp, #55]
   33534:	cmp	w0, #0x0
   33538:	b.ne	33550 <PyInit__decimal@@Base+0x1b878>  // b.any
   3353c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33540:	add	x0, x0, #0x6d8
   33544:	ldr	x1, [x0]
   33548:	ldr	x0, [sp, #2496]
   3354c:	str	x1, [x0, #32]
   33550:	nop
   33554:	ldr	x0, [sp, #2544]
   33558:	str	x0, [sp, #2504]
   3355c:	ldr	x0, [sp, #2504]
   33560:	ldrb	w0, [x0]
   33564:	and	w0, w0, #0xfffffff0
   33568:	and	w1, w0, #0xff
   3356c:	ldr	x0, [sp, #2504]
   33570:	strb	w1, [x0]
   33574:	nop
   33578:	ldr	x1, [sp, #56]
   3357c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   33580:	add	x0, x0, #0x518
   33584:	ldrh	w1, [x0, x1, lsl #1]
   33588:	ldr	x0, [sp, #2544]
   3358c:	ldr	x0, [x0, #40]
   33590:	and	x1, x1, #0xffff
   33594:	str	x1, [x0]
   33598:	ldr	x0, [sp, #2544]
   3359c:	mov	x1, #0x1                   	// #1
   335a0:	str	x1, [x0, #24]
   335a4:	ldr	x0, [sp, #2544]
   335a8:	mov	x1, #0xfffffffffffffffd    	// #-3
   335ac:	str	x1, [x0, #8]
   335b0:	ldr	x0, [sp, #2544]
   335b4:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   335b8:	ldr	x0, [sp, #56]
   335bc:	cmp	x0, #0x190
   335c0:	b.hi	335ec <PyInit__decimal@@Base+0x1b914>  // b.pmore
   335c4:	mov	x1, #0x1                   	// #1
   335c8:	ldr	x0, [sp, #2536]
   335cc:	sub	x0, x1, x0
   335d0:	str	x0, [sp, #1712]
   335d4:	ldr	x1, [sp, #2528]
   335d8:	ldr	x0, [sp, #2536]
   335dc:	add	x0, x1, x0
   335e0:	sub	x0, x0, #0x1
   335e4:	str	x0, [sp, #2560]
   335e8:	b	3362c <PyInit__decimal@@Base+0x1b954>
   335ec:	ldr	x0, [sp, #2536]
   335f0:	neg	x0, x0
   335f4:	str	x0, [sp, #1712]
   335f8:	ldr	x1, [sp, #2528]
   335fc:	ldr	x0, [sp, #2536]
   33600:	add	x0, x1, x0
   33604:	str	x0, [sp, #2560]
   33608:	ldr	x0, [sp, #2544]
   3360c:	str	x0, [sp, #2480]
   33610:	ldr	x0, [sp, #2480]
   33614:	ldrb	w0, [x0]
   33618:	orr	w0, w0, #0x1
   3361c:	and	w1, w0, #0xff
   33620:	ldr	x0, [sp, #2480]
   33624:	strb	w1, [x0]
   33628:	nop
   3362c:	add	x0, sp, #0x8d8
   33630:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   33634:	add	x0, sp, #0x908
   33638:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3363c:	mov	w0, #0x8                   	// #8
   33640:	str	w0, [sp, #2348]
   33644:	ldr	x0, [sp, #24]
   33648:	ldr	x0, [x0]
   3364c:	add	x0, x0, #0x2
   33650:	str	x0, [sp, #2568]
   33654:	ldr	x0, [sp, #2560]
   33658:	cmp	x0, #0x0
   3365c:	b.ne	337f0 <PyInit__decimal@@Base+0x1bb18>  // b.any
   33660:	ldr	x0, [sp, #56]
   33664:	cmp	x0, #0xf
   33668:	b.ls	33678 <PyInit__decimal@@Base+0x1b9a0>  // b.plast
   3366c:	ldr	x0, [sp, #56]
   33670:	cmp	x0, #0x31f
   33674:	b.ls	337f0 <PyInit__decimal@@Base+0x1bb18>  // b.plast
   33678:	add	x2, sp, #0x6a8
   3367c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   33680:	add	x1, x0, #0xc58
   33684:	mov	x0, x2
   33688:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   3368c:	str	w0, [sp, #2524]
   33690:	add	x0, sp, #0x8d8
   33694:	add	x2, x0, #0x1c
   33698:	add	x0, sp, #0x8d8
   3369c:	add	x1, sp, #0x6a8
   336a0:	add	x5, sp, #0x248
   336a4:	mov	x4, x2
   336a8:	mov	x3, x0
   336ac:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   336b0:	add	x2, x0, #0xc58
   336b4:	mov	x0, x5
   336b8:	bl	2f528 <PyInit__decimal@@Base+0x17850>
   336bc:	ldr	w1, [sp, #2292]
   336c0:	mov	w0, #0x3be                 	// #958
   336c4:	and	w0, w1, w0
   336c8:	cmp	w0, #0x0
   336cc:	b.eq	336e4 <PyInit__decimal@@Base+0x1ba0c>  // b.none
   336d0:	ldr	x2, [sp, #16]
   336d4:	mov	w1, #0x200                 	// #512
   336d8:	ldr	x0, [sp, #40]
   336dc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   336e0:	b	339b4 <PyInit__decimal@@Base+0x1bcdc>
   336e4:	ldr	w0, [sp, #2524]
   336e8:	cmp	w0, #0x0
   336ec:	b.ge	336fc <PyInit__decimal@@Base+0x1ba24>  // b.tcont
   336f0:	ldr	x0, [sp, #592]
   336f4:	add	x0, x0, #0x1
   336f8:	str	x0, [sp, #592]
   336fc:	add	x0, sp, #0x248
   33700:	str	x0, [sp, #2464]
   33704:	ldr	x0, [sp, #2464]
   33708:	ldr	x1, [x0, #8]
   3370c:	ldr	x0, [sp, #2464]
   33710:	ldr	x0, [x0, #16]
   33714:	add	x0, x1, x0
   33718:	sub	x1, x0, #0x1
   3371c:	ldr	x0, [sp, #24]
   33720:	str	x0, [sp, #2472]
   33724:	ldr	x0, [sp, #2472]
   33728:	ldr	x2, [x0, #16]
   3372c:	ldr	x0, [sp, #2472]
   33730:	ldr	x0, [x0]
   33734:	sub	x0, x2, x0
   33738:	add	x0, x0, #0x1
   3373c:	cmp	x1, x0
   33740:	b.ge	33790 <PyInit__decimal@@Base+0x1bab8>  // b.tcont
   33744:	ldr	w0, [sp, #2524]
   33748:	lsr	w0, w0, #31
   3374c:	and	w0, w0, #0xff
   33750:	mov	w4, w0
   33754:	ldr	x0, [sp, #24]
   33758:	str	x0, [sp, #2456]
   3375c:	ldr	x0, [sp, #2456]
   33760:	ldr	x1, [x0, #16]
   33764:	ldr	x0, [sp, #2456]
   33768:	ldr	x0, [x0]
   3376c:	sub	x0, x1, x0
   33770:	add	x0, x0, #0x1
   33774:	sub	x0, x0, #0x1
   33778:	mov	x3, x0
   3377c:	mov	x2, #0x1                   	// #1
   33780:	mov	w1, w4
   33784:	ldr	x0, [sp, #40]
   33788:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3378c:	b	339b4 <PyInit__decimal@@Base+0x1bcdc>
   33790:	ldr	x0, [sp, #592]
   33794:	sub	x0, x0, #0x1
   33798:	str	x0, [sp, #592]
   3379c:	add	x0, sp, #0x248
   337a0:	str	x0, [sp, #2448]
   337a4:	ldr	x0, [sp, #2448]
   337a8:	ldr	x1, [x0, #8]
   337ac:	ldr	x0, [sp, #2448]
   337b0:	ldr	x0, [x0, #16]
   337b4:	add	x0, x1, x0
   337b8:	sub	x0, x0, #0x1
   337bc:	cmp	x0, #0x0
   337c0:	b.ge	337f0 <PyInit__decimal@@Base+0x1bb18>  // b.tcont
   337c4:	add	x0, sp, #0x248
   337c8:	str	x0, [sp, #2440]
   337cc:	ldr	x0, [sp, #2440]
   337d0:	ldr	x1, [x0, #8]
   337d4:	ldr	x0, [sp, #2440]
   337d8:	ldr	x0, [x0, #16]
   337dc:	add	x0, x1, x0
   337e0:	sub	x0, x0, #0x1
   337e4:	ldr	x1, [sp, #2568]
   337e8:	sub	x0, x1, x0
   337ec:	str	x0, [sp, #2568]
   337f0:	add	x0, sp, #0x48
   337f4:	mov	x2, #0x2                   	// #2
   337f8:	ldr	x1, [sp, #2568]
   337fc:	bl	32fcc <PyInit__decimal@@Base+0x1b2f4>
   33800:	str	w0, [sp, #2556]
   33804:	b	33950 <PyInit__decimal@@Base+0x1bc78>
   33808:	ldrsw	x0, [sp, #2556]
   3380c:	lsl	x0, x0, #3
   33810:	add	x1, sp, #0x48
   33814:	ldr	x0, [x1, x0]
   33818:	lsl	x0, x0, #1
   3381c:	add	x0, x0, #0x3
   33820:	str	x0, [sp, #2312]
   33824:	ldr	x0, [sp, #2544]
   33828:	ldrb	w0, [x0]
   3382c:	eor	w0, w0, #0x1
   33830:	and	w1, w0, #0xff
   33834:	ldr	x0, [sp, #2544]
   33838:	strb	w1, [x0]
   3383c:	add	x1, sp, #0x908
   33840:	add	x0, sp, #0x248
   33844:	ldr	x3, [sp, #16]
   33848:	mov	x2, x1
   3384c:	ldr	x1, [sp, #2544]
   33850:	bl	32324 <PyInit__decimal@@Base+0x1a64c>
   33854:	ldr	x0, [sp, #2544]
   33858:	ldrb	w0, [x0]
   3385c:	eor	w0, w0, #0x1
   33860:	and	w1, w0, #0xff
   33864:	ldr	x0, [sp, #2544]
   33868:	strb	w1, [x0]
   3386c:	ldr	x1, [sp, #1720]
   33870:	ldr	x0, [sp, #2312]
   33874:	cmp	x1, x0
   33878:	b.le	338cc <PyInit__decimal@@Base+0x1bbf4>
   3387c:	ldr	x1, [sp, #1720]
   33880:	ldr	x0, [sp, #2312]
   33884:	sub	x0, x1, x0
   33888:	str	x0, [sp, #2512]
   3388c:	add	x1, sp, #0x6a8
   33890:	add	x0, sp, #0x478
   33894:	ldr	x3, [sp, #16]
   33898:	ldr	x2, [sp, #2512]
   3389c:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   338a0:	ldr	x1, [sp, #1152]
   338a4:	ldr	x0, [sp, #2512]
   338a8:	add	x0, x1, x0
   338ac:	str	x0, [sp, #1152]
   338b0:	add	x3, sp, #0x908
   338b4:	add	x2, sp, #0x248
   338b8:	add	x1, sp, #0x478
   338bc:	add	x0, sp, #0x248
   338c0:	ldr	x4, [sp, #16]
   338c4:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   338c8:	b	338e4 <PyInit__decimal@@Base+0x1bc0c>
   338cc:	add	x3, sp, #0x908
   338d0:	add	x2, sp, #0x248
   338d4:	add	x1, sp, #0x6a8
   338d8:	add	x0, sp, #0x248
   338dc:	ldr	x4, [sp, #16]
   338e0:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   338e4:	add	x0, sp, #0x8d8
   338e8:	add	x1, sp, #0x248
   338ec:	add	x5, sp, #0x248
   338f0:	ldr	x4, [sp, #16]
   338f4:	mov	x3, x0
   338f8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   338fc:	add	x2, x0, #0xc58
   33900:	mov	x0, x5
   33904:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   33908:	add	x1, sp, #0x8d8
   3390c:	add	x0, sp, #0x248
   33910:	ldr	x4, [sp, #16]
   33914:	mov	x3, x1
   33918:	mov	x2, x0
   3391c:	ldr	x1, [sp, #2544]
   33920:	ldr	x0, [sp, #2544]
   33924:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   33928:	ldr	x0, [sp, #2544]
   3392c:	str	x0, [sp, #2432]
   33930:	ldr	x0, [sp, #2432]
   33934:	ldrb	w0, [x0]
   33938:	and	w0, w0, #0xe
   3393c:	cmp	w0, #0x0
   33940:	b.ne	33960 <PyInit__decimal@@Base+0x1bc88>  // b.any
   33944:	ldr	w0, [sp, #2556]
   33948:	sub	w0, w0, #0x1
   3394c:	str	w0, [sp, #2556]
   33950:	ldr	w0, [sp, #2556]
   33954:	cmp	w0, #0x0
   33958:	b.ge	33808 <PyInit__decimal@@Base+0x1bb30>  // b.tcont
   3395c:	b	33964 <PyInit__decimal@@Base+0x1bc8c>
   33960:	nop
   33964:	ldr	x0, [sp, #2568]
   33968:	add	x1, x0, #0x1
   3396c:	add	x0, sp, #0x6a8
   33970:	ldr	x2, [sp, #16]
   33974:	bl	3305c <PyInit__decimal@@Base+0x1b384>
   33978:	add	x2, sp, #0x8d8
   3397c:	add	x1, sp, #0x6a8
   33980:	add	x0, sp, #0x248
   33984:	ldr	x4, [sp, #16]
   33988:	mov	x3, x2
   3398c:	ldr	x2, [sp, #2560]
   33990:	bl	36ea4 <PyInit__decimal@@Base+0x1f1cc>
   33994:	add	x1, sp, #0x8d8
   33998:	add	x0, sp, #0x248
   3399c:	ldr	x4, [sp, #16]
   339a0:	mov	x3, x1
   339a4:	ldr	x2, [sp, #2544]
   339a8:	mov	x1, x0
   339ac:	ldr	x0, [sp, #40]
   339b0:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   339b4:	ldr	x0, [sp, #16]
   339b8:	ldr	w1, [x0]
   339bc:	mov	w0, #0x1040                	// #4160
   339c0:	orr	w1, w1, w0
   339c4:	ldr	x0, [sp, #16]
   339c8:	str	w1, [x0]
   339cc:	add	x0, sp, #0x6a8
   339d0:	str	x0, [sp, #2376]
   339d4:	ldr	x0, [sp, #2376]
   339d8:	str	x0, [sp, #2368]
   339dc:	ldr	x0, [sp, #2368]
   339e0:	ldrb	w0, [x0]
   339e4:	and	w0, w0, #0xe0
   339e8:	cmp	w0, #0x0
   339ec:	cset	w0, eq  // eq = none
   339f0:	and	w0, w0, #0xff
   339f4:	cmp	w0, #0x0
   339f8:	b.eq	33a14 <PyInit__decimal@@Base+0x1bd3c>  // b.none
   339fc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33a00:	add	x0, x0, #0x6f8
   33a04:	ldr	x1, [x0]
   33a08:	ldr	x0, [sp, #2376]
   33a0c:	ldr	x0, [x0, #40]
   33a10:	blr	x1
   33a14:	ldr	x0, [sp, #2376]
   33a18:	str	x0, [sp, #2360]
   33a1c:	ldr	x0, [sp, #2360]
   33a20:	ldrb	w0, [x0]
   33a24:	and	w0, w0, #0x10
   33a28:	cmp	w0, #0x0
   33a2c:	cset	w0, eq  // eq = none
   33a30:	and	w0, w0, #0xff
   33a34:	cmp	w0, #0x0
   33a38:	b.eq	33a50 <PyInit__decimal@@Base+0x1bd78>  // b.none
   33a3c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33a40:	add	x0, x0, #0x6f8
   33a44:	ldr	x1, [x0]
   33a48:	ldr	x0, [sp, #2376]
   33a4c:	blr	x1
   33a50:	nop
   33a54:	add	x0, sp, #0x478
   33a58:	str	x0, [sp, #2400]
   33a5c:	ldr	x0, [sp, #2400]
   33a60:	str	x0, [sp, #2392]
   33a64:	ldr	x0, [sp, #2392]
   33a68:	ldrb	w0, [x0]
   33a6c:	and	w0, w0, #0xe0
   33a70:	cmp	w0, #0x0
   33a74:	cset	w0, eq  // eq = none
   33a78:	and	w0, w0, #0xff
   33a7c:	cmp	w0, #0x0
   33a80:	b.eq	33a9c <PyInit__decimal@@Base+0x1bdc4>  // b.none
   33a84:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33a88:	add	x0, x0, #0x6f8
   33a8c:	ldr	x1, [x0]
   33a90:	ldr	x0, [sp, #2400]
   33a94:	ldr	x0, [x0, #40]
   33a98:	blr	x1
   33a9c:	ldr	x0, [sp, #2400]
   33aa0:	str	x0, [sp, #2384]
   33aa4:	ldr	x0, [sp, #2384]
   33aa8:	ldrb	w0, [x0]
   33aac:	and	w0, w0, #0x10
   33ab0:	cmp	w0, #0x0
   33ab4:	cset	w0, eq  // eq = none
   33ab8:	and	w0, w0, #0xff
   33abc:	cmp	w0, #0x0
   33ac0:	b.eq	33ad8 <PyInit__decimal@@Base+0x1be00>  // b.none
   33ac4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33ac8:	add	x0, x0, #0x6f8
   33acc:	ldr	x1, [x0]
   33ad0:	ldr	x0, [sp, #2400]
   33ad4:	blr	x1
   33ad8:	nop
   33adc:	add	x0, sp, #0x248
   33ae0:	str	x0, [sp, #2424]
   33ae4:	ldr	x0, [sp, #2424]
   33ae8:	str	x0, [sp, #2416]
   33aec:	ldr	x0, [sp, #2416]
   33af0:	ldrb	w0, [x0]
   33af4:	and	w0, w0, #0xe0
   33af8:	cmp	w0, #0x0
   33afc:	cset	w0, eq  // eq = none
   33b00:	and	w0, w0, #0xff
   33b04:	cmp	w0, #0x0
   33b08:	b.eq	33b24 <PyInit__decimal@@Base+0x1be4c>  // b.none
   33b0c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33b10:	add	x0, x0, #0x6f8
   33b14:	ldr	x1, [x0]
   33b18:	ldr	x0, [sp, #2424]
   33b1c:	ldr	x0, [x0, #40]
   33b20:	blr	x1
   33b24:	ldr	x0, [sp, #2424]
   33b28:	str	x0, [sp, #2408]
   33b2c:	ldr	x0, [sp, #2408]
   33b30:	ldrb	w0, [x0]
   33b34:	and	w0, w0, #0x10
   33b38:	cmp	w0, #0x0
   33b3c:	cset	w0, eq  // eq = none
   33b40:	and	w0, w0, #0xff
   33b44:	cmp	w0, #0x0
   33b48:	b.eq	33b60 <PyInit__decimal@@Base+0x1be88>  // b.none
   33b4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   33b50:	add	x0, x0, #0x6f8
   33b54:	ldr	x1, [x0]
   33b58:	ldr	x0, [sp, #2424]
   33b5c:	blr	x1
   33b60:	nop
   33b64:	nop
   33b68:	ldp	x29, x30, [sp]
   33b6c:	add	sp, sp, #0xa10
   33b70:	ret
   33b74:	sub	sp, sp, #0x9e0
   33b78:	stp	x29, x30, [sp]
   33b7c:	mov	x29, sp
   33b80:	str	x0, [sp, #40]
   33b84:	str	x1, [sp, #32]
   33b88:	str	x2, [sp, #24]
   33b8c:	str	x3, [sp, #16]
   33b90:	ldr	x0, [sp, #32]
   33b94:	str	x0, [sp, #2496]
   33b98:	ldr	x0, [sp, #2496]
   33b9c:	ldrb	w0, [x0]
   33ba0:	and	w0, w0, #0xe
   33ba4:	cmp	w0, #0x0
   33ba8:	b.eq	33c0c <PyInit__decimal@@Base+0x1bf34>  // b.none
   33bac:	ldr	x3, [sp, #16]
   33bb0:	ldr	x2, [sp, #24]
   33bb4:	ldr	x1, [sp, #32]
   33bb8:	ldr	x0, [sp, #40]
   33bbc:	bl	28540 <PyInit__decimal@@Base+0x10868>
   33bc0:	cmp	w0, #0x0
   33bc4:	b.ne	34260 <PyInit__decimal@@Base+0x1c588>  // b.any
   33bc8:	ldr	x0, [sp, #32]
   33bcc:	str	x0, [sp, #2488]
   33bd0:	ldr	x0, [sp, #2488]
   33bd4:	ldrb	w0, [x0]
   33bd8:	and	w0, w0, #0x1
   33bdc:	cmp	w0, #0x0
   33be0:	b.eq	33bf8 <PyInit__decimal@@Base+0x1bf20>  // b.none
   33be4:	ldr	x2, [sp, #16]
   33be8:	mov	w1, #0x100                 	// #256
   33bec:	ldr	x0, [sp, #40]
   33bf0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   33bf4:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33bf8:	mov	w2, #0x2                   	// #2
   33bfc:	mov	w1, #0x0                   	// #0
   33c00:	ldr	x0, [sp, #40]
   33c04:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   33c08:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33c0c:	ldr	x0, [sp, #32]
   33c10:	str	x0, [sp, #2480]
   33c14:	ldr	x0, [sp, #2480]
   33c18:	str	x0, [sp, #2472]
   33c1c:	ldr	x0, [sp, #2472]
   33c20:	ldr	x1, [x0, #40]
   33c24:	ldr	x0, [sp, #2472]
   33c28:	ldr	x0, [x0, #24]
   33c2c:	lsl	x0, x0, #3
   33c30:	sub	x0, x0, #0x8
   33c34:	add	x0, x1, x0
   33c38:	ldr	x0, [x0]
   33c3c:	cmp	x0, #0x0
   33c40:	cset	w0, eq  // eq = none
   33c44:	and	w0, w0, #0xff
   33c48:	cmp	w0, #0x0
   33c4c:	b.eq	33c64 <PyInit__decimal@@Base+0x1bf8c>  // b.none
   33c50:	mov	w2, #0x2                   	// #2
   33c54:	mov	w1, #0x1                   	// #1
   33c58:	ldr	x0, [sp, #40]
   33c5c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   33c60:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33c64:	ldr	x0, [sp, #32]
   33c68:	str	x0, [sp, #2464]
   33c6c:	ldr	x0, [sp, #2464]
   33c70:	ldrb	w0, [x0]
   33c74:	and	w0, w0, #0x1
   33c78:	cmp	w0, #0x0
   33c7c:	b.eq	33c94 <PyInit__decimal@@Base+0x1bfbc>  // b.none
   33c80:	ldr	x2, [sp, #16]
   33c84:	mov	w1, #0x100                 	// #256
   33c88:	ldr	x0, [sp, #40]
   33c8c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   33c90:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33c94:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   33c98:	add	x1, x0, #0xc58
   33c9c:	ldr	x0, [sp, #32]
   33ca0:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   33ca4:	cmp	w0, #0x0
   33ca8:	b.ne	33cc4 <PyInit__decimal@@Base+0x1bfec>  // b.any
   33cac:	mov	x3, #0x0                   	// #0
   33cb0:	mov	x2, #0x0                   	// #0
   33cb4:	mov	w1, #0x0                   	// #0
   33cb8:	ldr	x0, [sp, #40]
   33cbc:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   33cc0:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33cc4:	ldr	x0, [sp, #32]
   33cc8:	str	x0, [sp, #2456]
   33ccc:	ldr	x0, [sp, #2456]
   33cd0:	ldr	x1, [x0, #8]
   33cd4:	ldr	x0, [sp, #2456]
   33cd8:	ldr	x0, [x0, #16]
   33cdc:	add	x0, x1, x0
   33ce0:	sub	x0, x0, #0x1
   33ce4:	str	x0, [sp, #2512]
   33ce8:	ldr	x0, [sp, #2512]
   33cec:	cmp	x0, #0x0
   33cf0:	b.ge	33d00 <PyInit__decimal@@Base+0x1c028>  // b.tcont
   33cf4:	ldr	x0, [sp, #2512]
   33cf8:	mvn	x0, x0
   33cfc:	b	33d04 <PyInit__decimal@@Base+0x1c02c>
   33d00:	ldr	x0, [sp, #2512]
   33d04:	str	x0, [sp, #2504]
   33d08:	ldr	x0, [sp, #2504]
   33d0c:	lsl	x0, x0, #1
   33d10:	str	x0, [sp, #2504]
   33d14:	ldr	x0, [sp, #2504]
   33d18:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   33d1c:	sub	w0, w0, #0x1
   33d20:	sxtw	x1, w0
   33d24:	ldr	x0, [sp, #24]
   33d28:	ldr	x0, [x0, #8]
   33d2c:	cmp	x1, x0
   33d30:	b.le	33d6c <PyInit__decimal@@Base+0x1c094>
   33d34:	ldr	x0, [sp, #16]
   33d38:	ldr	w1, [x0]
   33d3c:	mov	w0, #0x1840                	// #6208
   33d40:	orr	w1, w1, w0
   33d44:	ldr	x0, [sp, #16]
   33d48:	str	w1, [x0]
   33d4c:	ldr	x0, [sp, #2512]
   33d50:	lsr	x0, x0, #63
   33d54:	and	w0, w0, #0xff
   33d58:	mov	w2, #0x2                   	// #2
   33d5c:	mov	w1, w0
   33d60:	ldr	x0, [sp, #40]
   33d64:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   33d68:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33d6c:	ldr	x1, [sp, #24]
   33d70:	add	x0, sp, #0x8f0
   33d74:	ldp	x2, x3, [x1]
   33d78:	stp	x2, x3, [x0]
   33d7c:	ldp	x2, x3, [x1, #16]
   33d80:	stp	x2, x3, [x0, #16]
   33d84:	ldp	x2, x3, [x1, #32]
   33d88:	stp	x2, x3, [x0, #32]
   33d8c:	mov	w0, #0x6                   	// #6
   33d90:	str	w0, [sp, #2324]
   33d94:	ldr	x0, [sp, #24]
   33d98:	ldr	w0, [x0, #44]
   33d9c:	cmp	w0, #0x0
   33da0:	b.eq	3421c <PyInit__decimal@@Base+0x1c544>  // b.none
   33da4:	mov	w0, #0x30                  	// #48
   33da8:	strb	w0, [sp, #48]
   33dac:	str	xzr, [sp, #56]
   33db0:	str	xzr, [sp, #64]
   33db4:	str	xzr, [sp, #72]
   33db8:	mov	x0, #0x40                  	// #64
   33dbc:	str	x0, [sp, #80]
   33dc0:	add	x0, sp, #0xf0
   33dc4:	str	x0, [sp, #88]
   33dc8:	mov	w0, #0x30                  	// #48
   33dcc:	strb	w0, [sp, #96]
   33dd0:	str	xzr, [sp, #104]
   33dd4:	str	xzr, [sp, #112]
   33dd8:	str	xzr, [sp, #120]
   33ddc:	mov	x0, #0x40                  	// #64
   33de0:	str	x0, [sp, #128]
   33de4:	add	x0, sp, #0x2f0
   33de8:	str	x0, [sp, #136]
   33dec:	mov	w0, #0x30                  	// #48
   33df0:	strb	w0, [sp, #144]
   33df4:	str	xzr, [sp, #152]
   33df8:	str	xzr, [sp, #160]
   33dfc:	str	xzr, [sp, #168]
   33e00:	mov	x0, #0x40                  	// #64
   33e04:	str	x0, [sp, #176]
   33e08:	add	x0, sp, #0x4f0
   33e0c:	str	x0, [sp, #184]
   33e10:	mov	w0, #0x30                  	// #48
   33e14:	strb	w0, [sp, #192]
   33e18:	str	xzr, [sp, #200]
   33e1c:	str	xzr, [sp, #208]
   33e20:	str	xzr, [sp, #216]
   33e24:	mov	x0, #0x40                  	// #64
   33e28:	str	x0, [sp, #224]
   33e2c:	add	x0, sp, #0x6f0
   33e30:	str	x0, [sp, #232]
   33e34:	ldr	x1, [sp, #40]
   33e38:	ldr	x0, [sp, #32]
   33e3c:	cmp	x1, x0
   33e40:	b.ne	33e78 <PyInit__decimal@@Base+0x1c1a0>  // b.any
   33e44:	add	x0, sp, #0xc0
   33e48:	ldr	x2, [sp, #16]
   33e4c:	ldr	x1, [sp, #32]
   33e50:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   33e54:	cmp	w0, #0x0
   33e58:	b.ne	33e70 <PyInit__decimal@@Base+0x1c198>  // b.any
   33e5c:	ldr	x2, [sp, #16]
   33e60:	mov	w1, #0x200                 	// #512
   33e64:	ldr	x0, [sp, #40]
   33e68:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   33e6c:	b	3426c <PyInit__decimal@@Base+0x1c594>
   33e70:	add	x0, sp, #0xc0
   33e74:	str	x0, [sp, #32]
   33e78:	str	wzr, [sp, #2328]
   33e7c:	ldr	x0, [sp, #24]
   33e80:	ldr	x0, [x0]
   33e84:	add	x0, x0, #0x3
   33e88:	str	x0, [sp, #2520]
   33e8c:	ldr	x0, [sp, #2520]
   33e90:	str	x0, [sp, #2288]
   33e94:	add	x0, sp, #0x8f0
   33e98:	ldr	x3, [sp, #16]
   33e9c:	mov	x2, x0
   33ea0:	ldr	x1, [sp, #32]
   33ea4:	ldr	x0, [sp, #40]
   33ea8:	bl	33378 <PyInit__decimal@@Base+0x1b6a0>
   33eac:	ldr	x0, [sp, #40]
   33eb0:	ldr	x1, [x0, #8]
   33eb4:	ldr	x0, [sp, #40]
   33eb8:	ldr	x0, [x0, #16]
   33ebc:	add	x1, x1, x0
   33ec0:	ldr	x0, [sp, #2288]
   33ec4:	sub	x1, x1, x0
   33ec8:	add	x0, sp, #0x90
   33ecc:	mov	x3, x1
   33ed0:	mov	x2, #0x1                   	// #1
   33ed4:	mov	w1, #0x0                   	// #0
   33ed8:	bl	277e8 <PyInit__decimal@@Base+0xfb10>
   33edc:	ldr	x0, [sp, #24]
   33ee0:	ldr	x0, [x0]
   33ee4:	str	x0, [sp, #2288]
   33ee8:	add	x0, sp, #0x8f0
   33eec:	add	x3, x0, #0x1c
   33ef0:	add	x2, sp, #0x8f0
   33ef4:	add	x1, sp, #0x90
   33ef8:	add	x0, sp, #0x30
   33efc:	mov	x4, x3
   33f00:	mov	x3, x2
   33f04:	mov	x2, x1
   33f08:	ldr	x1, [sp, #40]
   33f0c:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   33f10:	add	x0, sp, #0x8f0
   33f14:	add	x3, x0, #0x1c
   33f18:	add	x2, sp, #0x8f0
   33f1c:	add	x1, sp, #0x90
   33f20:	add	x0, sp, #0x60
   33f24:	mov	x4, x3
   33f28:	mov	x3, x2
   33f2c:	mov	x2, x1
   33f30:	ldr	x1, [sp, #40]
   33f34:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   33f38:	ldr	x0, [sp, #40]
   33f3c:	str	x0, [sp, #2448]
   33f40:	ldr	x0, [sp, #2448]
   33f44:	ldrb	w0, [x0]
   33f48:	and	w0, w0, #0xe
   33f4c:	cmp	w0, #0x0
   33f50:	b.ne	33fb0 <PyInit__decimal@@Base+0x1c2d8>  // b.any
   33f54:	ldr	x0, [sp, #40]
   33f58:	str	x0, [sp, #2440]
   33f5c:	ldr	x0, [sp, #2440]
   33f60:	str	x0, [sp, #2432]
   33f64:	ldr	x0, [sp, #2432]
   33f68:	ldr	x1, [x0, #40]
   33f6c:	ldr	x0, [sp, #2432]
   33f70:	ldr	x0, [x0, #24]
   33f74:	lsl	x0, x0, #3
   33f78:	sub	x0, x0, #0x8
   33f7c:	add	x0, x1, x0
   33f80:	ldr	x0, [x0]
   33f84:	cmp	x0, #0x0
   33f88:	cset	w0, eq  // eq = none
   33f8c:	and	w0, w0, #0xff
   33f90:	cmp	w0, #0x0
   33f94:	b.ne	33fb0 <PyInit__decimal@@Base+0x1c2d8>  // b.any
   33f98:	add	x1, sp, #0x60
   33f9c:	add	x0, sp, #0x30
   33fa0:	ldr	x2, [sp, #16]
   33fa4:	bl	2a784 <PyInit__decimal@@Base+0x12aac>
   33fa8:	cmp	w0, #0x0
   33fac:	b.ne	3401c <PyInit__decimal@@Base+0x1c344>  // b.any
   33fb0:	ldr	x0, [sp, #24]
   33fb4:	ldr	w0, [x0, #40]
   33fb8:	str	w0, [sp, #2328]
   33fbc:	add	x0, sp, #0x8f0
   33fc0:	ldr	x2, [sp, #16]
   33fc4:	mov	x1, x0
   33fc8:	ldr	x0, [sp, #40]
   33fcc:	bl	29528 <PyInit__decimal@@Base+0x11850>
   33fd0:	add	x0, sp, #0x8f0
   33fd4:	ldr	x2, [sp, #16]
   33fd8:	mov	x1, x0
   33fdc:	ldr	x0, [sp, #40]
   33fe0:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   33fe4:	nop
   33fe8:	add	x0, sp, #0x30
   33fec:	str	x0, [sp, #2352]
   33ff0:	ldr	x0, [sp, #2352]
   33ff4:	str	x0, [sp, #2344]
   33ff8:	ldr	x0, [sp, #2344]
   33ffc:	ldrb	w0, [x0]
   34000:	and	w0, w0, #0xe0
   34004:	cmp	w0, #0x0
   34008:	cset	w0, eq  // eq = none
   3400c:	and	w0, w0, #0xff
   34010:	cmp	w0, #0x0
   34014:	b.eq	34044 <PyInit__decimal@@Base+0x1c36c>  // b.none
   34018:	b	3402c <PyInit__decimal@@Base+0x1c354>
   3401c:	ldr	x0, [sp, #2520]
   34020:	add	x0, x0, #0x13
   34024:	str	x0, [sp, #2520]
   34028:	b	33e8c <PyInit__decimal@@Base+0x1c1b4>
   3402c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34030:	add	x0, x0, #0x6f8
   34034:	ldr	x1, [x0]
   34038:	ldr	x0, [sp, #2352]
   3403c:	ldr	x0, [x0, #40]
   34040:	blr	x1
   34044:	ldr	x0, [sp, #2352]
   34048:	str	x0, [sp, #2336]
   3404c:	ldr	x0, [sp, #2336]
   34050:	ldrb	w0, [x0]
   34054:	and	w0, w0, #0x10
   34058:	cmp	w0, #0x0
   3405c:	cset	w0, eq  // eq = none
   34060:	and	w0, w0, #0xff
   34064:	cmp	w0, #0x0
   34068:	b.eq	34080 <PyInit__decimal@@Base+0x1c3a8>  // b.none
   3406c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34070:	add	x0, x0, #0x6f8
   34074:	ldr	x1, [x0]
   34078:	ldr	x0, [sp, #2352]
   3407c:	blr	x1
   34080:	nop
   34084:	add	x0, sp, #0x60
   34088:	str	x0, [sp, #2376]
   3408c:	ldr	x0, [sp, #2376]
   34090:	str	x0, [sp, #2368]
   34094:	ldr	x0, [sp, #2368]
   34098:	ldrb	w0, [x0]
   3409c:	and	w0, w0, #0xe0
   340a0:	cmp	w0, #0x0
   340a4:	cset	w0, eq  // eq = none
   340a8:	and	w0, w0, #0xff
   340ac:	cmp	w0, #0x0
   340b0:	b.eq	340cc <PyInit__decimal@@Base+0x1c3f4>  // b.none
   340b4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   340b8:	add	x0, x0, #0x6f8
   340bc:	ldr	x1, [x0]
   340c0:	ldr	x0, [sp, #2376]
   340c4:	ldr	x0, [x0, #40]
   340c8:	blr	x1
   340cc:	ldr	x0, [sp, #2376]
   340d0:	str	x0, [sp, #2360]
   340d4:	ldr	x0, [sp, #2360]
   340d8:	ldrb	w0, [x0]
   340dc:	and	w0, w0, #0x10
   340e0:	cmp	w0, #0x0
   340e4:	cset	w0, eq  // eq = none
   340e8:	and	w0, w0, #0xff
   340ec:	cmp	w0, #0x0
   340f0:	b.eq	34108 <PyInit__decimal@@Base+0x1c430>  // b.none
   340f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   340f8:	add	x0, x0, #0x6f8
   340fc:	ldr	x1, [x0]
   34100:	ldr	x0, [sp, #2376]
   34104:	blr	x1
   34108:	nop
   3410c:	add	x0, sp, #0x90
   34110:	str	x0, [sp, #2400]
   34114:	ldr	x0, [sp, #2400]
   34118:	str	x0, [sp, #2392]
   3411c:	ldr	x0, [sp, #2392]
   34120:	ldrb	w0, [x0]
   34124:	and	w0, w0, #0xe0
   34128:	cmp	w0, #0x0
   3412c:	cset	w0, eq  // eq = none
   34130:	and	w0, w0, #0xff
   34134:	cmp	w0, #0x0
   34138:	b.eq	34154 <PyInit__decimal@@Base+0x1c47c>  // b.none
   3413c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34140:	add	x0, x0, #0x6f8
   34144:	ldr	x1, [x0]
   34148:	ldr	x0, [sp, #2400]
   3414c:	ldr	x0, [x0, #40]
   34150:	blr	x1
   34154:	ldr	x0, [sp, #2400]
   34158:	str	x0, [sp, #2384]
   3415c:	ldr	x0, [sp, #2384]
   34160:	ldrb	w0, [x0]
   34164:	and	w0, w0, #0x10
   34168:	cmp	w0, #0x0
   3416c:	cset	w0, eq  // eq = none
   34170:	and	w0, w0, #0xff
   34174:	cmp	w0, #0x0
   34178:	b.eq	34190 <PyInit__decimal@@Base+0x1c4b8>  // b.none
   3417c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34180:	add	x0, x0, #0x6f8
   34184:	ldr	x1, [x0]
   34188:	ldr	x0, [sp, #2400]
   3418c:	blr	x1
   34190:	nop
   34194:	add	x0, sp, #0xc0
   34198:	str	x0, [sp, #2424]
   3419c:	ldr	x0, [sp, #2424]
   341a0:	str	x0, [sp, #2416]
   341a4:	ldr	x0, [sp, #2416]
   341a8:	ldrb	w0, [x0]
   341ac:	and	w0, w0, #0xe0
   341b0:	cmp	w0, #0x0
   341b4:	cset	w0, eq  // eq = none
   341b8:	and	w0, w0, #0xff
   341bc:	cmp	w0, #0x0
   341c0:	b.eq	341dc <PyInit__decimal@@Base+0x1c504>  // b.none
   341c4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   341c8:	add	x0, x0, #0x6f8
   341cc:	ldr	x1, [x0]
   341d0:	ldr	x0, [sp, #2424]
   341d4:	ldr	x0, [x0, #40]
   341d8:	blr	x1
   341dc:	ldr	x0, [sp, #2424]
   341e0:	str	x0, [sp, #2408]
   341e4:	ldr	x0, [sp, #2408]
   341e8:	ldrb	w0, [x0]
   341ec:	and	w0, w0, #0x10
   341f0:	cmp	w0, #0x0
   341f4:	cset	w0, eq  // eq = none
   341f8:	and	w0, w0, #0xff
   341fc:	cmp	w0, #0x0
   34200:	b.eq	34268 <PyInit__decimal@@Base+0x1c590>  // b.none
   34204:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34208:	add	x0, x0, #0x6f8
   3420c:	ldr	x1, [x0]
   34210:	ldr	x0, [sp, #2424]
   34214:	blr	x1
   34218:	b	34268 <PyInit__decimal@@Base+0x1c590>
   3421c:	add	x0, sp, #0x8f0
   34220:	ldr	x3, [sp, #16]
   34224:	mov	x2, x0
   34228:	ldr	x1, [sp, #32]
   3422c:	ldr	x0, [sp, #40]
   34230:	bl	33378 <PyInit__decimal@@Base+0x1b6a0>
   34234:	add	x0, sp, #0x8f0
   34238:	ldr	x2, [sp, #16]
   3423c:	mov	x1, x0
   34240:	ldr	x0, [sp, #40]
   34244:	bl	29528 <PyInit__decimal@@Base+0x11850>
   34248:	add	x0, sp, #0x8f0
   3424c:	ldr	x2, [sp, #16]
   34250:	mov	x1, x0
   34254:	ldr	x0, [sp, #40]
   34258:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3425c:	b	3426c <PyInit__decimal@@Base+0x1c594>
   34260:	nop
   34264:	b	3426c <PyInit__decimal@@Base+0x1c594>
   34268:	nop
   3426c:	ldp	x29, x30, [sp]
   34270:	add	sp, sp, #0x9e0
   34274:	ret
   34278:	sub	sp, sp, #0x2c0
   3427c:	stp	x29, x30, [sp]
   34280:	mov	x29, sp
   34284:	str	w0, [sp, #60]
   34288:	str	x1, [sp, #48]
   3428c:	str	x2, [sp, #40]
   34290:	str	x3, [sp, #32]
   34294:	str	x4, [sp, #24]
   34298:	mov	w0, #0x30                  	// #48
   3429c:	strb	w0, [sp, #72]
   342a0:	str	xzr, [sp, #80]
   342a4:	str	xzr, [sp, #88]
   342a8:	str	xzr, [sp, #96]
   342ac:	mov	x0, #0x40                  	// #64
   342b0:	str	x0, [sp, #104]
   342b4:	add	x0, sp, #0x78
   342b8:	str	x0, [sp, #112]
   342bc:	add	x0, sp, #0x278
   342c0:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   342c4:	ldr	x0, [sp, #32]
   342c8:	ldr	x0, [x0]
   342cc:	add	x0, x0, #0x3
   342d0:	str	x0, [sp, #632]
   342d4:	add	x0, sp, #0x278
   342d8:	ldr	x3, [sp, #24]
   342dc:	mov	x2, x0
   342e0:	ldr	x1, [sp, #40]
   342e4:	ldr	x0, [sp, #48]
   342e8:	bl	33378 <PyInit__decimal@@Base+0x1b6a0>
   342ec:	ldr	x1, [sp, #632]
   342f0:	add	x0, sp, #0x48
   342f4:	ldr	x2, [sp, #24]
   342f8:	bl	3305c <PyInit__decimal@@Base+0x1b384>
   342fc:	ldr	w0, [sp, #60]
   34300:	cmp	w0, #0x1
   34304:	b.ne	34330 <PyInit__decimal@@Base+0x1c658>  // b.any
   34308:	ldr	x1, [sp, #32]
   3430c:	add	x0, sp, #0x278
   34310:	ldp	x2, x3, [x1]
   34314:	stp	x2, x3, [x0]
   34318:	ldp	x2, x3, [x1, #16]
   3431c:	stp	x2, x3, [x0, #16]
   34320:	ldp	x2, x3, [x1, #32]
   34324:	stp	x2, x3, [x0, #32]
   34328:	mov	w0, #0x6                   	// #6
   3432c:	str	w0, [sp, #668]
   34330:	add	x1, sp, #0x278
   34334:	add	x0, sp, #0x48
   34338:	ldr	x5, [sp, #24]
   3433c:	mov	x4, x1
   34340:	mov	x3, x0
   34344:	ldr	x2, [sp, #48]
   34348:	ldr	x1, [sp, #48]
   3434c:	mov	w0, #0x0                   	// #0
   34350:	bl	30054 <PyInit__decimal@@Base+0x1837c>
   34354:	add	x0, sp, #0x48
   34358:	str	x0, [sp, #696]
   3435c:	ldr	x0, [sp, #696]
   34360:	str	x0, [sp, #688]
   34364:	ldr	x0, [sp, #688]
   34368:	ldrb	w0, [x0]
   3436c:	and	w0, w0, #0xe0
   34370:	cmp	w0, #0x0
   34374:	cset	w0, eq  // eq = none
   34378:	and	w0, w0, #0xff
   3437c:	cmp	w0, #0x0
   34380:	b.eq	3439c <PyInit__decimal@@Base+0x1c6c4>  // b.none
   34384:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34388:	add	x0, x0, #0x6f8
   3438c:	ldr	x1, [x0]
   34390:	ldr	x0, [sp, #696]
   34394:	ldr	x0, [x0, #40]
   34398:	blr	x1
   3439c:	ldr	x0, [sp, #696]
   343a0:	str	x0, [sp, #680]
   343a4:	ldr	x0, [sp, #680]
   343a8:	ldrb	w0, [x0]
   343ac:	and	w0, w0, #0x10
   343b0:	cmp	w0, #0x0
   343b4:	cset	w0, eq  // eq = none
   343b8:	and	w0, w0, #0xff
   343bc:	cmp	w0, #0x0
   343c0:	b.eq	343d8 <PyInit__decimal@@Base+0x1c700>  // b.none
   343c4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   343c8:	add	x0, x0, #0x6f8
   343cc:	ldr	x1, [x0]
   343d0:	ldr	x0, [sp, #696]
   343d4:	blr	x1
   343d8:	nop
   343dc:	nop
   343e0:	ldp	x29, x30, [sp]
   343e4:	add	sp, sp, #0x2c0
   343e8:	ret
   343ec:	sub	sp, sp, #0x9f0
   343f0:	stp	x29, x30, [sp]
   343f4:	mov	x29, sp
   343f8:	str	x0, [sp, #40]
   343fc:	str	x1, [sp, #32]
   34400:	str	x2, [sp, #24]
   34404:	str	x3, [sp, #16]
   34408:	ldr	x1, [sp, #24]
   3440c:	add	x0, sp, #0x8f0
   34410:	ldp	x2, x3, [x1]
   34414:	stp	x2, x3, [x0]
   34418:	ldp	x2, x3, [x1, #16]
   3441c:	stp	x2, x3, [x0, #16]
   34420:	ldp	x2, x3, [x1, #32]
   34424:	stp	x2, x3, [x0, #32]
   34428:	mov	w0, #0x6                   	// #6
   3442c:	str	w0, [sp, #2324]
   34430:	ldr	x0, [sp, #32]
   34434:	str	x0, [sp, #2504]
   34438:	ldr	x0, [sp, #2504]
   3443c:	ldrb	w0, [x0]
   34440:	and	w0, w0, #0xe
   34444:	cmp	w0, #0x0
   34448:	b.eq	344ac <PyInit__decimal@@Base+0x1c7d4>  // b.none
   3444c:	ldr	x3, [sp, #16]
   34450:	ldr	x2, [sp, #24]
   34454:	ldr	x1, [sp, #32]
   34458:	ldr	x0, [sp, #40]
   3445c:	bl	28540 <PyInit__decimal@@Base+0x10868>
   34460:	cmp	w0, #0x0
   34464:	b.ne	34b18 <PyInit__decimal@@Base+0x1ce40>  // b.any
   34468:	ldr	x0, [sp, #32]
   3446c:	str	x0, [sp, #2496]
   34470:	ldr	x0, [sp, #2496]
   34474:	ldrb	w0, [x0]
   34478:	and	w0, w0, #0x1
   3447c:	cmp	w0, #0x0
   34480:	b.eq	34498 <PyInit__decimal@@Base+0x1c7c0>  // b.none
   34484:	ldr	x2, [sp, #16]
   34488:	mov	w1, #0x100                 	// #256
   3448c:	ldr	x0, [sp, #40]
   34490:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   34494:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34498:	mov	w2, #0x2                   	// #2
   3449c:	mov	w1, #0x0                   	// #0
   344a0:	ldr	x0, [sp, #40]
   344a4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   344a8:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   344ac:	ldr	x0, [sp, #32]
   344b0:	str	x0, [sp, #2488]
   344b4:	ldr	x0, [sp, #2488]
   344b8:	str	x0, [sp, #2480]
   344bc:	ldr	x0, [sp, #2480]
   344c0:	ldr	x1, [x0, #40]
   344c4:	ldr	x0, [sp, #2480]
   344c8:	ldr	x0, [x0, #24]
   344cc:	lsl	x0, x0, #3
   344d0:	sub	x0, x0, #0x8
   344d4:	add	x0, x1, x0
   344d8:	ldr	x0, [x0]
   344dc:	cmp	x0, #0x0
   344e0:	cset	w0, eq  // eq = none
   344e4:	and	w0, w0, #0xff
   344e8:	cmp	w0, #0x0
   344ec:	b.eq	34504 <PyInit__decimal@@Base+0x1c82c>  // b.none
   344f0:	mov	w2, #0x2                   	// #2
   344f4:	mov	w1, #0x1                   	// #1
   344f8:	ldr	x0, [sp, #40]
   344fc:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   34500:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34504:	ldr	x0, [sp, #32]
   34508:	str	x0, [sp, #2472]
   3450c:	ldr	x0, [sp, #2472]
   34510:	ldrb	w0, [x0]
   34514:	and	w0, w0, #0x1
   34518:	cmp	w0, #0x0
   3451c:	b.eq	34534 <PyInit__decimal@@Base+0x1c85c>  // b.none
   34520:	ldr	x2, [sp, #16]
   34524:	mov	w1, #0x100                 	// #256
   34528:	ldr	x0, [sp, #40]
   3452c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   34530:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34534:	ldr	x0, [sp, #32]
   34538:	bl	2730c <PyInit__decimal@@Base+0xf634>
   3453c:	cmp	w0, #0x0
   34540:	b.eq	345bc <PyInit__decimal@@Base+0x1c8e4>  // b.none
   34544:	strb	wzr, [sp, #2535]
   34548:	ldr	x0, [sp, #32]
   3454c:	str	x0, [sp, #2464]
   34550:	ldr	x0, [sp, #2464]
   34554:	ldr	x1, [x0, #8]
   34558:	ldr	x0, [sp, #2464]
   3455c:	ldr	x0, [x0, #16]
   34560:	add	x0, x1, x0
   34564:	sub	x0, x0, #0x1
   34568:	str	x0, [sp, #2536]
   3456c:	ldr	x0, [sp, #2536]
   34570:	cmp	x0, #0x0
   34574:	b.ge	3458c <PyInit__decimal@@Base+0x1c8b4>  // b.tcont
   34578:	mov	w0, #0x1                   	// #1
   3457c:	strb	w0, [sp, #2535]
   34580:	ldr	x0, [sp, #2536]
   34584:	neg	x0, x0
   34588:	str	x0, [sp, #2536]
   3458c:	ldr	x0, [sp, #2536]
   34590:	mov	x3, #0x0                   	// #0
   34594:	mov	x2, x0
   34598:	ldrb	w1, [sp, #2535]
   3459c:	ldr	x0, [sp, #40]
   345a0:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   345a4:	add	x0, sp, #0x8f0
   345a8:	ldr	x2, [sp, #16]
   345ac:	mov	x1, x0
   345b0:	ldr	x0, [sp, #40]
   345b4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   345b8:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   345bc:	ldr	x0, [sp, #32]
   345c0:	str	x0, [sp, #2456]
   345c4:	ldr	x0, [sp, #2456]
   345c8:	ldr	x1, [x0, #8]
   345cc:	ldr	x0, [sp, #2456]
   345d0:	ldr	x0, [x0, #16]
   345d4:	add	x0, x1, x0
   345d8:	sub	x0, x0, #0x1
   345dc:	str	x0, [sp, #2536]
   345e0:	ldr	x0, [sp, #2536]
   345e4:	cmp	x0, #0x0
   345e8:	b.ge	345f8 <PyInit__decimal@@Base+0x1c920>  // b.tcont
   345ec:	ldr	x0, [sp, #2536]
   345f0:	mvn	x0, x0
   345f4:	b	345fc <PyInit__decimal@@Base+0x1c924>
   345f8:	ldr	x0, [sp, #2536]
   345fc:	str	x0, [sp, #2512]
   34600:	ldr	x0, [sp, #2512]
   34604:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   34608:	sub	w0, w0, #0x1
   3460c:	sxtw	x1, w0
   34610:	ldr	x0, [sp, #24]
   34614:	ldr	x0, [x0, #8]
   34618:	cmp	x1, x0
   3461c:	b.le	34658 <PyInit__decimal@@Base+0x1c980>
   34620:	ldr	x0, [sp, #16]
   34624:	ldr	w1, [x0]
   34628:	mov	w0, #0x1840                	// #6208
   3462c:	orr	w1, w1, w0
   34630:	ldr	x0, [sp, #16]
   34634:	str	w1, [x0]
   34638:	ldr	x0, [sp, #2536]
   3463c:	lsr	x0, x0, #63
   34640:	and	w0, w0, #0xff
   34644:	mov	w2, #0x2                   	// #2
   34648:	mov	w1, w0
   3464c:	ldr	x0, [sp, #40]
   34650:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   34654:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34658:	ldr	x0, [sp, #24]
   3465c:	ldr	w0, [x0, #44]
   34660:	cmp	w0, #0x0
   34664:	b.eq	34ae4 <PyInit__decimal@@Base+0x1ce0c>  // b.none
   34668:	mov	w0, #0x30                  	// #48
   3466c:	strb	w0, [sp, #48]
   34670:	str	xzr, [sp, #56]
   34674:	str	xzr, [sp, #64]
   34678:	str	xzr, [sp, #72]
   3467c:	mov	x0, #0x40                  	// #64
   34680:	str	x0, [sp, #80]
   34684:	add	x0, sp, #0xf0
   34688:	str	x0, [sp, #88]
   3468c:	mov	w0, #0x30                  	// #48
   34690:	strb	w0, [sp, #96]
   34694:	str	xzr, [sp, #104]
   34698:	str	xzr, [sp, #112]
   3469c:	str	xzr, [sp, #120]
   346a0:	mov	x0, #0x40                  	// #64
   346a4:	str	x0, [sp, #128]
   346a8:	add	x0, sp, #0x2f0
   346ac:	str	x0, [sp, #136]
   346b0:	mov	w0, #0x30                  	// #48
   346b4:	strb	w0, [sp, #144]
   346b8:	str	xzr, [sp, #152]
   346bc:	str	xzr, [sp, #160]
   346c0:	str	xzr, [sp, #168]
   346c4:	mov	x0, #0x40                  	// #64
   346c8:	str	x0, [sp, #176]
   346cc:	add	x0, sp, #0x4f0
   346d0:	str	x0, [sp, #184]
   346d4:	mov	w0, #0x30                  	// #48
   346d8:	strb	w0, [sp, #192]
   346dc:	str	xzr, [sp, #200]
   346e0:	str	xzr, [sp, #208]
   346e4:	str	xzr, [sp, #216]
   346e8:	mov	x0, #0x40                  	// #64
   346ec:	str	x0, [sp, #224]
   346f0:	add	x0, sp, #0x6f0
   346f4:	str	x0, [sp, #232]
   346f8:	ldr	x1, [sp, #40]
   346fc:	ldr	x0, [sp, #32]
   34700:	cmp	x1, x0
   34704:	b.ne	3473c <PyInit__decimal@@Base+0x1ca64>  // b.any
   34708:	add	x0, sp, #0xc0
   3470c:	ldr	x2, [sp, #16]
   34710:	ldr	x1, [sp, #32]
   34714:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34718:	cmp	w0, #0x0
   3471c:	b.ne	34734 <PyInit__decimal@@Base+0x1ca5c>  // b.any
   34720:	ldr	x2, [sp, #16]
   34724:	mov	w1, #0x200                 	// #512
   34728:	ldr	x0, [sp, #40]
   3472c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   34730:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34734:	add	x0, sp, #0xc0
   34738:	str	x0, [sp, #32]
   3473c:	str	wzr, [sp, #2328]
   34740:	ldr	x0, [sp, #24]
   34744:	ldr	x0, [x0]
   34748:	add	x0, x0, #0x3
   3474c:	str	x0, [sp, #2520]
   34750:	ldr	x0, [sp, #2520]
   34754:	str	x0, [sp, #2288]
   34758:	add	x0, sp, #0x8f0
   3475c:	ldr	x4, [sp, #16]
   34760:	mov	x3, x0
   34764:	ldr	x2, [sp, #32]
   34768:	ldr	x1, [sp, #40]
   3476c:	mov	w0, #0x0                   	// #0
   34770:	bl	34278 <PyInit__decimal@@Base+0x1c5a0>
   34774:	ldr	x0, [sp, #40]
   34778:	ldr	x1, [x0, #8]
   3477c:	ldr	x0, [sp, #40]
   34780:	ldr	x0, [x0, #16]
   34784:	add	x1, x1, x0
   34788:	ldr	x0, [sp, #2288]
   3478c:	sub	x1, x1, x0
   34790:	add	x0, sp, #0x90
   34794:	mov	x3, x1
   34798:	mov	x2, #0x1                   	// #1
   3479c:	mov	w1, #0x0                   	// #0
   347a0:	bl	277e8 <PyInit__decimal@@Base+0xfb10>
   347a4:	ldr	x0, [sp, #24]
   347a8:	ldr	x0, [x0]
   347ac:	str	x0, [sp, #2288]
   347b0:	add	x0, sp, #0x8f0
   347b4:	add	x3, x0, #0x1c
   347b8:	add	x2, sp, #0x8f0
   347bc:	add	x1, sp, #0x90
   347c0:	add	x0, sp, #0x30
   347c4:	mov	x4, x3
   347c8:	mov	x3, x2
   347cc:	mov	x2, x1
   347d0:	ldr	x1, [sp, #40]
   347d4:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   347d8:	add	x0, sp, #0x8f0
   347dc:	add	x3, x0, #0x1c
   347e0:	add	x2, sp, #0x8f0
   347e4:	add	x1, sp, #0x90
   347e8:	add	x0, sp, #0x60
   347ec:	mov	x4, x3
   347f0:	mov	x3, x2
   347f4:	mov	x2, x1
   347f8:	ldr	x1, [sp, #40]
   347fc:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   34800:	ldr	x0, [sp, #40]
   34804:	str	x0, [sp, #2448]
   34808:	ldr	x0, [sp, #2448]
   3480c:	ldrb	w0, [x0]
   34810:	and	w0, w0, #0xe
   34814:	cmp	w0, #0x0
   34818:	b.ne	34878 <PyInit__decimal@@Base+0x1cba0>  // b.any
   3481c:	ldr	x0, [sp, #40]
   34820:	str	x0, [sp, #2440]
   34824:	ldr	x0, [sp, #2440]
   34828:	str	x0, [sp, #2432]
   3482c:	ldr	x0, [sp, #2432]
   34830:	ldr	x1, [x0, #40]
   34834:	ldr	x0, [sp, #2432]
   34838:	ldr	x0, [x0, #24]
   3483c:	lsl	x0, x0, #3
   34840:	sub	x0, x0, #0x8
   34844:	add	x0, x1, x0
   34848:	ldr	x0, [x0]
   3484c:	cmp	x0, #0x0
   34850:	cset	w0, eq  // eq = none
   34854:	and	w0, w0, #0xff
   34858:	cmp	w0, #0x0
   3485c:	b.ne	34878 <PyInit__decimal@@Base+0x1cba0>  // b.any
   34860:	add	x1, sp, #0x60
   34864:	add	x0, sp, #0x30
   34868:	ldr	x2, [sp, #16]
   3486c:	bl	2a784 <PyInit__decimal@@Base+0x12aac>
   34870:	cmp	w0, #0x0
   34874:	b.ne	348e4 <PyInit__decimal@@Base+0x1cc0c>  // b.any
   34878:	ldr	x0, [sp, #24]
   3487c:	ldr	w0, [x0, #40]
   34880:	str	w0, [sp, #2328]
   34884:	add	x0, sp, #0x8f0
   34888:	ldr	x2, [sp, #16]
   3488c:	mov	x1, x0
   34890:	ldr	x0, [sp, #40]
   34894:	bl	29528 <PyInit__decimal@@Base+0x11850>
   34898:	add	x0, sp, #0x8f0
   3489c:	ldr	x2, [sp, #16]
   348a0:	mov	x1, x0
   348a4:	ldr	x0, [sp, #40]
   348a8:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   348ac:	nop
   348b0:	add	x0, sp, #0x30
   348b4:	str	x0, [sp, #2352]
   348b8:	ldr	x0, [sp, #2352]
   348bc:	str	x0, [sp, #2344]
   348c0:	ldr	x0, [sp, #2344]
   348c4:	ldrb	w0, [x0]
   348c8:	and	w0, w0, #0xe0
   348cc:	cmp	w0, #0x0
   348d0:	cset	w0, eq  // eq = none
   348d4:	and	w0, w0, #0xff
   348d8:	cmp	w0, #0x0
   348dc:	b.eq	3490c <PyInit__decimal@@Base+0x1cc34>  // b.none
   348e0:	b	348f4 <PyInit__decimal@@Base+0x1cc1c>
   348e4:	ldr	x0, [sp, #2520]
   348e8:	add	x0, x0, #0x13
   348ec:	str	x0, [sp, #2520]
   348f0:	b	34750 <PyInit__decimal@@Base+0x1ca78>
   348f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   348f8:	add	x0, x0, #0x6f8
   348fc:	ldr	x1, [x0]
   34900:	ldr	x0, [sp, #2352]
   34904:	ldr	x0, [x0, #40]
   34908:	blr	x1
   3490c:	ldr	x0, [sp, #2352]
   34910:	str	x0, [sp, #2336]
   34914:	ldr	x0, [sp, #2336]
   34918:	ldrb	w0, [x0]
   3491c:	and	w0, w0, #0x10
   34920:	cmp	w0, #0x0
   34924:	cset	w0, eq  // eq = none
   34928:	and	w0, w0, #0xff
   3492c:	cmp	w0, #0x0
   34930:	b.eq	34948 <PyInit__decimal@@Base+0x1cc70>  // b.none
   34934:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34938:	add	x0, x0, #0x6f8
   3493c:	ldr	x1, [x0]
   34940:	ldr	x0, [sp, #2352]
   34944:	blr	x1
   34948:	nop
   3494c:	add	x0, sp, #0x60
   34950:	str	x0, [sp, #2376]
   34954:	ldr	x0, [sp, #2376]
   34958:	str	x0, [sp, #2368]
   3495c:	ldr	x0, [sp, #2368]
   34960:	ldrb	w0, [x0]
   34964:	and	w0, w0, #0xe0
   34968:	cmp	w0, #0x0
   3496c:	cset	w0, eq  // eq = none
   34970:	and	w0, w0, #0xff
   34974:	cmp	w0, #0x0
   34978:	b.eq	34994 <PyInit__decimal@@Base+0x1ccbc>  // b.none
   3497c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34980:	add	x0, x0, #0x6f8
   34984:	ldr	x1, [x0]
   34988:	ldr	x0, [sp, #2376]
   3498c:	ldr	x0, [x0, #40]
   34990:	blr	x1
   34994:	ldr	x0, [sp, #2376]
   34998:	str	x0, [sp, #2360]
   3499c:	ldr	x0, [sp, #2360]
   349a0:	ldrb	w0, [x0]
   349a4:	and	w0, w0, #0x10
   349a8:	cmp	w0, #0x0
   349ac:	cset	w0, eq  // eq = none
   349b0:	and	w0, w0, #0xff
   349b4:	cmp	w0, #0x0
   349b8:	b.eq	349d0 <PyInit__decimal@@Base+0x1ccf8>  // b.none
   349bc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   349c0:	add	x0, x0, #0x6f8
   349c4:	ldr	x1, [x0]
   349c8:	ldr	x0, [sp, #2376]
   349cc:	blr	x1
   349d0:	nop
   349d4:	add	x0, sp, #0x90
   349d8:	str	x0, [sp, #2400]
   349dc:	ldr	x0, [sp, #2400]
   349e0:	str	x0, [sp, #2392]
   349e4:	ldr	x0, [sp, #2392]
   349e8:	ldrb	w0, [x0]
   349ec:	and	w0, w0, #0xe0
   349f0:	cmp	w0, #0x0
   349f4:	cset	w0, eq  // eq = none
   349f8:	and	w0, w0, #0xff
   349fc:	cmp	w0, #0x0
   34a00:	b.eq	34a1c <PyInit__decimal@@Base+0x1cd44>  // b.none
   34a04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34a08:	add	x0, x0, #0x6f8
   34a0c:	ldr	x1, [x0]
   34a10:	ldr	x0, [sp, #2400]
   34a14:	ldr	x0, [x0, #40]
   34a18:	blr	x1
   34a1c:	ldr	x0, [sp, #2400]
   34a20:	str	x0, [sp, #2384]
   34a24:	ldr	x0, [sp, #2384]
   34a28:	ldrb	w0, [x0]
   34a2c:	and	w0, w0, #0x10
   34a30:	cmp	w0, #0x0
   34a34:	cset	w0, eq  // eq = none
   34a38:	and	w0, w0, #0xff
   34a3c:	cmp	w0, #0x0
   34a40:	b.eq	34a58 <PyInit__decimal@@Base+0x1cd80>  // b.none
   34a44:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34a48:	add	x0, x0, #0x6f8
   34a4c:	ldr	x1, [x0]
   34a50:	ldr	x0, [sp, #2400]
   34a54:	blr	x1
   34a58:	nop
   34a5c:	add	x0, sp, #0xc0
   34a60:	str	x0, [sp, #2424]
   34a64:	ldr	x0, [sp, #2424]
   34a68:	str	x0, [sp, #2416]
   34a6c:	ldr	x0, [sp, #2416]
   34a70:	ldrb	w0, [x0]
   34a74:	and	w0, w0, #0xe0
   34a78:	cmp	w0, #0x0
   34a7c:	cset	w0, eq  // eq = none
   34a80:	and	w0, w0, #0xff
   34a84:	cmp	w0, #0x0
   34a88:	b.eq	34aa4 <PyInit__decimal@@Base+0x1cdcc>  // b.none
   34a8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34a90:	add	x0, x0, #0x6f8
   34a94:	ldr	x1, [x0]
   34a98:	ldr	x0, [sp, #2424]
   34a9c:	ldr	x0, [x0, #40]
   34aa0:	blr	x1
   34aa4:	ldr	x0, [sp, #2424]
   34aa8:	str	x0, [sp, #2408]
   34aac:	ldr	x0, [sp, #2408]
   34ab0:	ldrb	w0, [x0]
   34ab4:	and	w0, w0, #0x10
   34ab8:	cmp	w0, #0x0
   34abc:	cset	w0, eq  // eq = none
   34ac0:	and	w0, w0, #0xff
   34ac4:	cmp	w0, #0x0
   34ac8:	b.eq	34b20 <PyInit__decimal@@Base+0x1ce48>  // b.none
   34acc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   34ad0:	add	x0, x0, #0x6f8
   34ad4:	ldr	x1, [x0]
   34ad8:	ldr	x0, [sp, #2424]
   34adc:	blr	x1
   34ae0:	b	34b20 <PyInit__decimal@@Base+0x1ce48>
   34ae4:	add	x0, sp, #0x8f0
   34ae8:	ldr	x4, [sp, #16]
   34aec:	mov	x3, x0
   34af0:	ldr	x2, [sp, #32]
   34af4:	ldr	x1, [sp, #40]
   34af8:	mov	w0, #0x1                   	// #1
   34afc:	bl	34278 <PyInit__decimal@@Base+0x1c5a0>
   34b00:	add	x0, sp, #0x8f0
   34b04:	ldr	x2, [sp, #16]
   34b08:	mov	x1, x0
   34b0c:	ldr	x0, [sp, #40]
   34b10:	bl	29528 <PyInit__decimal@@Base+0x11850>
   34b14:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34b18:	nop
   34b1c:	b	34b24 <PyInit__decimal@@Base+0x1ce4c>
   34b20:	nop
   34b24:	ldp	x29, x30, [sp]
   34b28:	add	sp, sp, #0x9f0
   34b2c:	ret
   34b30:	stp	x29, x30, [sp, #-112]!
   34b34:	mov	x29, sp
   34b38:	str	x0, [sp, #56]
   34b3c:	str	x1, [sp, #48]
   34b40:	str	x2, [sp, #40]
   34b44:	str	x3, [sp, #32]
   34b48:	str	x4, [sp, #24]
   34b4c:	ldr	x0, [sp, #48]
   34b50:	str	x0, [sp, #96]
   34b54:	ldr	x0, [sp, #96]
   34b58:	ldrb	w0, [x0]
   34b5c:	and	w0, w0, #0x4
   34b60:	cmp	w0, #0x0
   34b64:	b.eq	34b98 <PyInit__decimal@@Base+0x1cec0>  // b.none
   34b68:	ldr	x0, [sp, #40]
   34b6c:	str	x0, [sp, #88]
   34b70:	ldr	x0, [sp, #88]
   34b74:	ldrb	w0, [x0]
   34b78:	and	w0, w0, #0xc
   34b7c:	cmp	w0, #0x0
   34b80:	b.ne	34b98 <PyInit__decimal@@Base+0x1cec0>  // b.any
   34b84:	ldr	x2, [sp, #24]
   34b88:	ldr	x1, [sp, #40]
   34b8c:	ldr	x0, [sp, #56]
   34b90:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34b94:	b	34c60 <PyInit__decimal@@Base+0x1cf88>
   34b98:	ldr	x0, [sp, #40]
   34b9c:	str	x0, [sp, #80]
   34ba0:	ldr	x0, [sp, #80]
   34ba4:	ldrb	w0, [x0]
   34ba8:	and	w0, w0, #0x4
   34bac:	cmp	w0, #0x0
   34bb0:	b.eq	34be4 <PyInit__decimal@@Base+0x1cf0c>  // b.none
   34bb4:	ldr	x0, [sp, #48]
   34bb8:	str	x0, [sp, #72]
   34bbc:	ldr	x0, [sp, #72]
   34bc0:	ldrb	w0, [x0]
   34bc4:	and	w0, w0, #0xc
   34bc8:	cmp	w0, #0x0
   34bcc:	b.ne	34be4 <PyInit__decimal@@Base+0x1cf0c>  // b.any
   34bd0:	ldr	x2, [sp, #24]
   34bd4:	ldr	x1, [sp, #48]
   34bd8:	ldr	x0, [sp, #56]
   34bdc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34be0:	b	34c60 <PyInit__decimal@@Base+0x1cf88>
   34be4:	ldr	x4, [sp, #24]
   34be8:	ldr	x3, [sp, #32]
   34bec:	ldr	x2, [sp, #40]
   34bf0:	ldr	x1, [sp, #48]
   34bf4:	ldr	x0, [sp, #56]
   34bf8:	bl	2861c <PyInit__decimal@@Base+0x10944>
   34bfc:	cmp	w0, #0x0
   34c00:	b.ne	34c74 <PyInit__decimal@@Base+0x1cf9c>  // b.any
   34c04:	ldr	x1, [sp, #40]
   34c08:	ldr	x0, [sp, #48]
   34c0c:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   34c10:	str	w0, [sp, #108]
   34c14:	ldr	w0, [sp, #108]
   34c18:	cmp	w0, #0x0
   34c1c:	b.ne	34c30 <PyInit__decimal@@Base+0x1cf58>  // b.any
   34c20:	ldr	x1, [sp, #40]
   34c24:	ldr	x0, [sp, #48]
   34c28:	bl	2adb0 <PyInit__decimal@@Base+0x130d8>
   34c2c:	str	w0, [sp, #108]
   34c30:	ldr	w0, [sp, #108]
   34c34:	cmp	w0, #0x0
   34c38:	b.ge	34c50 <PyInit__decimal@@Base+0x1cf78>  // b.tcont
   34c3c:	ldr	x2, [sp, #24]
   34c40:	ldr	x1, [sp, #40]
   34c44:	ldr	x0, [sp, #56]
   34c48:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34c4c:	b	34c60 <PyInit__decimal@@Base+0x1cf88>
   34c50:	ldr	x2, [sp, #24]
   34c54:	ldr	x1, [sp, #48]
   34c58:	ldr	x0, [sp, #56]
   34c5c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34c60:	ldr	x2, [sp, #24]
   34c64:	ldr	x1, [sp, #32]
   34c68:	ldr	x0, [sp, #56]
   34c6c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   34c70:	b	34c78 <PyInit__decimal@@Base+0x1cfa0>
   34c74:	nop
   34c78:	ldp	x29, x30, [sp], #112
   34c7c:	ret
   34c80:	stp	x29, x30, [sp, #-112]!
   34c84:	mov	x29, sp
   34c88:	str	x0, [sp, #56]
   34c8c:	str	x1, [sp, #48]
   34c90:	str	x2, [sp, #40]
   34c94:	str	x3, [sp, #32]
   34c98:	str	x4, [sp, #24]
   34c9c:	ldr	x0, [sp, #48]
   34ca0:	str	x0, [sp, #96]
   34ca4:	ldr	x0, [sp, #96]
   34ca8:	ldrb	w0, [x0]
   34cac:	and	w0, w0, #0x4
   34cb0:	cmp	w0, #0x0
   34cb4:	b.eq	34ce8 <PyInit__decimal@@Base+0x1d010>  // b.none
   34cb8:	ldr	x0, [sp, #40]
   34cbc:	str	x0, [sp, #88]
   34cc0:	ldr	x0, [sp, #88]
   34cc4:	ldrb	w0, [x0]
   34cc8:	and	w0, w0, #0xc
   34ccc:	cmp	w0, #0x0
   34cd0:	b.ne	34ce8 <PyInit__decimal@@Base+0x1d010>  // b.any
   34cd4:	ldr	x2, [sp, #24]
   34cd8:	ldr	x1, [sp, #40]
   34cdc:	ldr	x0, [sp, #56]
   34ce0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34ce4:	b	34db0 <PyInit__decimal@@Base+0x1d0d8>
   34ce8:	ldr	x0, [sp, #40]
   34cec:	str	x0, [sp, #80]
   34cf0:	ldr	x0, [sp, #80]
   34cf4:	ldrb	w0, [x0]
   34cf8:	and	w0, w0, #0x4
   34cfc:	cmp	w0, #0x0
   34d00:	b.eq	34d34 <PyInit__decimal@@Base+0x1d05c>  // b.none
   34d04:	ldr	x0, [sp, #48]
   34d08:	str	x0, [sp, #72]
   34d0c:	ldr	x0, [sp, #72]
   34d10:	ldrb	w0, [x0]
   34d14:	and	w0, w0, #0xc
   34d18:	cmp	w0, #0x0
   34d1c:	b.ne	34d34 <PyInit__decimal@@Base+0x1d05c>  // b.any
   34d20:	ldr	x2, [sp, #24]
   34d24:	ldr	x1, [sp, #48]
   34d28:	ldr	x0, [sp, #56]
   34d2c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34d30:	b	34db0 <PyInit__decimal@@Base+0x1d0d8>
   34d34:	ldr	x4, [sp, #24]
   34d38:	ldr	x3, [sp, #32]
   34d3c:	ldr	x2, [sp, #40]
   34d40:	ldr	x1, [sp, #48]
   34d44:	ldr	x0, [sp, #56]
   34d48:	bl	2861c <PyInit__decimal@@Base+0x10944>
   34d4c:	cmp	w0, #0x0
   34d50:	b.ne	34dc4 <PyInit__decimal@@Base+0x1d0ec>  // b.any
   34d54:	ldr	x1, [sp, #40]
   34d58:	ldr	x0, [sp, #48]
   34d5c:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   34d60:	str	w0, [sp, #108]
   34d64:	ldr	w0, [sp, #108]
   34d68:	cmp	w0, #0x0
   34d6c:	b.ne	34d80 <PyInit__decimal@@Base+0x1d0a8>  // b.any
   34d70:	ldr	x1, [sp, #40]
   34d74:	ldr	x0, [sp, #48]
   34d78:	bl	2adb0 <PyInit__decimal@@Base+0x130d8>
   34d7c:	str	w0, [sp, #108]
   34d80:	ldr	w0, [sp, #108]
   34d84:	cmp	w0, #0x0
   34d88:	b.ge	34da0 <PyInit__decimal@@Base+0x1d0c8>  // b.tcont
   34d8c:	ldr	x2, [sp, #24]
   34d90:	ldr	x1, [sp, #40]
   34d94:	ldr	x0, [sp, #56]
   34d98:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34d9c:	b	34db0 <PyInit__decimal@@Base+0x1d0d8>
   34da0:	ldr	x2, [sp, #24]
   34da4:	ldr	x1, [sp, #48]
   34da8:	ldr	x0, [sp, #56]
   34dac:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34db0:	ldr	x2, [sp, #24]
   34db4:	ldr	x1, [sp, #32]
   34db8:	ldr	x0, [sp, #56]
   34dbc:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   34dc0:	b	34dc8 <PyInit__decimal@@Base+0x1d0f0>
   34dc4:	nop
   34dc8:	ldp	x29, x30, [sp], #112
   34dcc:	ret
   34dd0:	stp	x29, x30, [sp, #-112]!
   34dd4:	mov	x29, sp
   34dd8:	str	x0, [sp, #56]
   34ddc:	str	x1, [sp, #48]
   34de0:	str	x2, [sp, #40]
   34de4:	str	x3, [sp, #32]
   34de8:	str	x4, [sp, #24]
   34dec:	ldr	x0, [sp, #48]
   34df0:	str	x0, [sp, #96]
   34df4:	ldr	x0, [sp, #96]
   34df8:	ldrb	w0, [x0]
   34dfc:	and	w0, w0, #0x4
   34e00:	cmp	w0, #0x0
   34e04:	b.eq	34e38 <PyInit__decimal@@Base+0x1d160>  // b.none
   34e08:	ldr	x0, [sp, #40]
   34e0c:	str	x0, [sp, #88]
   34e10:	ldr	x0, [sp, #88]
   34e14:	ldrb	w0, [x0]
   34e18:	and	w0, w0, #0xc
   34e1c:	cmp	w0, #0x0
   34e20:	b.ne	34e38 <PyInit__decimal@@Base+0x1d160>  // b.any
   34e24:	ldr	x2, [sp, #24]
   34e28:	ldr	x1, [sp, #40]
   34e2c:	ldr	x0, [sp, #56]
   34e30:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34e34:	b	34f00 <PyInit__decimal@@Base+0x1d228>
   34e38:	ldr	x0, [sp, #40]
   34e3c:	str	x0, [sp, #80]
   34e40:	ldr	x0, [sp, #80]
   34e44:	ldrb	w0, [x0]
   34e48:	and	w0, w0, #0x4
   34e4c:	cmp	w0, #0x0
   34e50:	b.eq	34e84 <PyInit__decimal@@Base+0x1d1ac>  // b.none
   34e54:	ldr	x0, [sp, #48]
   34e58:	str	x0, [sp, #72]
   34e5c:	ldr	x0, [sp, #72]
   34e60:	ldrb	w0, [x0]
   34e64:	and	w0, w0, #0xc
   34e68:	cmp	w0, #0x0
   34e6c:	b.ne	34e84 <PyInit__decimal@@Base+0x1d1ac>  // b.any
   34e70:	ldr	x2, [sp, #24]
   34e74:	ldr	x1, [sp, #48]
   34e78:	ldr	x0, [sp, #56]
   34e7c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34e80:	b	34f00 <PyInit__decimal@@Base+0x1d228>
   34e84:	ldr	x4, [sp, #24]
   34e88:	ldr	x3, [sp, #32]
   34e8c:	ldr	x2, [sp, #40]
   34e90:	ldr	x1, [sp, #48]
   34e94:	ldr	x0, [sp, #56]
   34e98:	bl	2861c <PyInit__decimal@@Base+0x10944>
   34e9c:	cmp	w0, #0x0
   34ea0:	b.ne	34f14 <PyInit__decimal@@Base+0x1d23c>  // b.any
   34ea4:	ldr	x1, [sp, #40]
   34ea8:	ldr	x0, [sp, #48]
   34eac:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   34eb0:	str	w0, [sp, #108]
   34eb4:	ldr	w0, [sp, #108]
   34eb8:	cmp	w0, #0x0
   34ebc:	b.ne	34ed0 <PyInit__decimal@@Base+0x1d1f8>  // b.any
   34ec0:	ldr	x1, [sp, #40]
   34ec4:	ldr	x0, [sp, #48]
   34ec8:	bl	2adb0 <PyInit__decimal@@Base+0x130d8>
   34ecc:	str	w0, [sp, #108]
   34ed0:	ldr	w0, [sp, #108]
   34ed4:	cmp	w0, #0x0
   34ed8:	b.ge	34ef0 <PyInit__decimal@@Base+0x1d218>  // b.tcont
   34edc:	ldr	x2, [sp, #24]
   34ee0:	ldr	x1, [sp, #48]
   34ee4:	ldr	x0, [sp, #56]
   34ee8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34eec:	b	34f00 <PyInit__decimal@@Base+0x1d228>
   34ef0:	ldr	x2, [sp, #24]
   34ef4:	ldr	x1, [sp, #40]
   34ef8:	ldr	x0, [sp, #56]
   34efc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34f00:	ldr	x2, [sp, #24]
   34f04:	ldr	x1, [sp, #32]
   34f08:	ldr	x0, [sp, #56]
   34f0c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   34f10:	b	34f18 <PyInit__decimal@@Base+0x1d240>
   34f14:	nop
   34f18:	ldp	x29, x30, [sp], #112
   34f1c:	ret
   34f20:	stp	x29, x30, [sp, #-112]!
   34f24:	mov	x29, sp
   34f28:	str	x0, [sp, #56]
   34f2c:	str	x1, [sp, #48]
   34f30:	str	x2, [sp, #40]
   34f34:	str	x3, [sp, #32]
   34f38:	str	x4, [sp, #24]
   34f3c:	ldr	x0, [sp, #48]
   34f40:	str	x0, [sp, #96]
   34f44:	ldr	x0, [sp, #96]
   34f48:	ldrb	w0, [x0]
   34f4c:	and	w0, w0, #0x4
   34f50:	cmp	w0, #0x0
   34f54:	b.eq	34f88 <PyInit__decimal@@Base+0x1d2b0>  // b.none
   34f58:	ldr	x0, [sp, #40]
   34f5c:	str	x0, [sp, #88]
   34f60:	ldr	x0, [sp, #88]
   34f64:	ldrb	w0, [x0]
   34f68:	and	w0, w0, #0xc
   34f6c:	cmp	w0, #0x0
   34f70:	b.ne	34f88 <PyInit__decimal@@Base+0x1d2b0>  // b.any
   34f74:	ldr	x2, [sp, #24]
   34f78:	ldr	x1, [sp, #40]
   34f7c:	ldr	x0, [sp, #56]
   34f80:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34f84:	b	35050 <PyInit__decimal@@Base+0x1d378>
   34f88:	ldr	x0, [sp, #40]
   34f8c:	str	x0, [sp, #80]
   34f90:	ldr	x0, [sp, #80]
   34f94:	ldrb	w0, [x0]
   34f98:	and	w0, w0, #0x4
   34f9c:	cmp	w0, #0x0
   34fa0:	b.eq	34fd4 <PyInit__decimal@@Base+0x1d2fc>  // b.none
   34fa4:	ldr	x0, [sp, #48]
   34fa8:	str	x0, [sp, #72]
   34fac:	ldr	x0, [sp, #72]
   34fb0:	ldrb	w0, [x0]
   34fb4:	and	w0, w0, #0xc
   34fb8:	cmp	w0, #0x0
   34fbc:	b.ne	34fd4 <PyInit__decimal@@Base+0x1d2fc>  // b.any
   34fc0:	ldr	x2, [sp, #24]
   34fc4:	ldr	x1, [sp, #48]
   34fc8:	ldr	x0, [sp, #56]
   34fcc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   34fd0:	b	35050 <PyInit__decimal@@Base+0x1d378>
   34fd4:	ldr	x4, [sp, #24]
   34fd8:	ldr	x3, [sp, #32]
   34fdc:	ldr	x2, [sp, #40]
   34fe0:	ldr	x1, [sp, #48]
   34fe4:	ldr	x0, [sp, #56]
   34fe8:	bl	2861c <PyInit__decimal@@Base+0x10944>
   34fec:	cmp	w0, #0x0
   34ff0:	b.ne	35064 <PyInit__decimal@@Base+0x1d38c>  // b.any
   34ff4:	ldr	x1, [sp, #40]
   34ff8:	ldr	x0, [sp, #48]
   34ffc:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   35000:	str	w0, [sp, #108]
   35004:	ldr	w0, [sp, #108]
   35008:	cmp	w0, #0x0
   3500c:	b.ne	35020 <PyInit__decimal@@Base+0x1d348>  // b.any
   35010:	ldr	x1, [sp, #40]
   35014:	ldr	x0, [sp, #48]
   35018:	bl	2adb0 <PyInit__decimal@@Base+0x130d8>
   3501c:	str	w0, [sp, #108]
   35020:	ldr	w0, [sp, #108]
   35024:	cmp	w0, #0x0
   35028:	b.ge	35040 <PyInit__decimal@@Base+0x1d368>  // b.tcont
   3502c:	ldr	x2, [sp, #24]
   35030:	ldr	x1, [sp, #48]
   35034:	ldr	x0, [sp, #56]
   35038:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3503c:	b	35050 <PyInit__decimal@@Base+0x1d378>
   35040:	ldr	x2, [sp, #24]
   35044:	ldr	x1, [sp, #40]
   35048:	ldr	x0, [sp, #56]
   3504c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   35050:	ldr	x2, [sp, #24]
   35054:	ldr	x1, [sp, #32]
   35058:	ldr	x0, [sp, #56]
   3505c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   35060:	b	35068 <PyInit__decimal@@Base+0x1d390>
   35064:	nop
   35068:	ldp	x29, x30, [sp], #112
   3506c:	ret
   35070:	stp	x29, x30, [sp, #-48]!
   35074:	mov	x29, sp
   35078:	str	x0, [sp, #24]
   3507c:	str	x1, [sp, #16]
   35080:	ldr	x1, [sp, #16]
   35084:	ldr	x0, [sp, #24]
   35088:	bl	24318 <PyInit__decimal@@Base+0xc640>
   3508c:	str	x0, [sp, #40]
   35090:	mov	x1, #0x1                   	// #1
   35094:	ldr	x0, [sp, #40]
   35098:	bl	24318 <PyInit__decimal@@Base+0xc640>
   3509c:	str	x0, [sp, #40]
   350a0:	ldr	x0, [sp, #24]
   350a4:	add	x0, x0, #0x1
   350a8:	lsr	x0, x0, #1
   350ac:	add	x0, x0, #0x1
   350b0:	str	x0, [sp, #32]
   350b4:	mov	x1, #0x3                   	// #3
   350b8:	ldr	x0, [sp, #32]
   350bc:	bl	243b8 <PyInit__decimal@@Base+0xc6e0>
   350c0:	str	x0, [sp, #32]
   350c4:	ldr	x0, [sp, #32]
   350c8:	ldr	x2, [sp, #40]
   350cc:	ldr	x1, [sp, #40]
   350d0:	cmp	x2, x0
   350d4:	csel	x0, x1, x0, cs  // cs = hs, nlast
   350d8:	ldp	x29, x30, [sp], #48
   350dc:	ret
   350e0:	stp	x29, x30, [sp, #-64]!
   350e4:	mov	x29, sp
   350e8:	str	x19, [sp, #16]
   350ec:	str	x0, [sp, #40]
   350f0:	str	x1, [sp, #32]
   350f4:	ldr	x1, [sp, #40]
   350f8:	ldr	x0, [sp, #32]
   350fc:	cmp	x1, x0
   35100:	b.hi	3510c <PyInit__decimal@@Base+0x1d434>  // b.pmore
   35104:	mov	x0, #0x0                   	// #0
   35108:	b	35148 <PyInit__decimal@@Base+0x1d470>
   3510c:	ldr	x0, [sp, #40]
   35110:	add	x0, x0, #0x1
   35114:	lsr	x0, x0, #1
   35118:	add	x0, x0, #0x1
   3511c:	str	x0, [sp, #56]
   35120:	mov	x1, #0x2                   	// #2
   35124:	ldr	x0, [sp, #56]
   35128:	bl	243b8 <PyInit__decimal@@Base+0xc6e0>
   3512c:	mov	x19, x0
   35130:	ldr	x1, [sp, #32]
   35134:	ldr	x0, [sp, #56]
   35138:	bl	350e0 <PyInit__decimal@@Base+0x1d408>
   3513c:	mov	x1, x0
   35140:	mov	x0, x19
   35144:	bl	24318 <PyInit__decimal@@Base+0xc640>
   35148:	ldr	x19, [sp, #16]
   3514c:	ldp	x29, x30, [sp], #64
   35150:	ret
   35154:	stp	x29, x30, [sp, #-208]!
   35158:	mov	x29, sp
   3515c:	str	x0, [sp, #56]
   35160:	str	x1, [sp, #48]
   35164:	str	x2, [sp, #40]
   35168:	str	x3, [sp, #32]
   3516c:	str	x4, [sp, #24]
   35170:	str	x5, [sp, #16]
   35174:	ldr	x0, [sp, #24]
   35178:	cmp	x0, #0x10
   3517c:	b.hi	3519c <PyInit__decimal@@Base+0x1d4c4>  // b.pmore
   35180:	ldr	x4, [sp, #16]
   35184:	ldr	x3, [sp, #24]
   35188:	ldr	x2, [sp, #40]
   3518c:	ldr	x1, [sp, #48]
   35190:	ldr	x0, [sp, #56]
   35194:	bl	1a4d8 <PyInit__decimal@@Base+0x2800>
   35198:	b	35738 <PyInit__decimal@@Base+0x1da60>
   3519c:	ldr	x0, [sp, #24]
   351a0:	add	x0, x0, #0x1
   351a4:	lsr	x0, x0, #1
   351a8:	str	x0, [sp, #200]
   351ac:	ldr	x1, [sp, #16]
   351b0:	ldr	x0, [sp, #200]
   351b4:	cmp	x1, x0
   351b8:	b.hi	353fc <PyInit__decimal@@Base+0x1d724>  // b.pmore
   351bc:	ldr	x1, [sp, #24]
   351c0:	ldr	x0, [sp, #200]
   351c4:	sub	x0, x1, x0
   351c8:	ldr	x1, [sp, #16]
   351cc:	cmp	x1, x0
   351d0:	b.ls	35274 <PyInit__decimal@@Base+0x1d59c>  // b.plast
   351d4:	ldr	x0, [sp, #16]
   351d8:	lsl	x0, x0, #1
   351dc:	add	x0, x0, #0x1
   351e0:	str	x0, [sp, #192]
   351e4:	ldr	x0, [sp, #32]
   351e8:	str	x0, [sp, #184]
   351ec:	ldr	x0, [sp, #192]
   351f0:	str	x0, [sp, #176]
   351f4:	str	xzr, [sp, #168]
   351f8:	b	3521c <PyInit__decimal@@Base+0x1d544>
   351fc:	ldr	x0, [sp, #168]
   35200:	lsl	x0, x0, #3
   35204:	ldr	x1, [sp, #184]
   35208:	add	x0, x1, x0
   3520c:	str	xzr, [x0]
   35210:	ldr	x0, [sp, #168]
   35214:	add	x0, x0, #0x1
   35218:	str	x0, [sp, #168]
   3521c:	ldr	x1, [sp, #176]
   35220:	ldr	x0, [sp, #168]
   35224:	cmp	x1, x0
   35228:	b.hi	351fc <PyInit__decimal@@Base+0x1d524>  // b.pmore
   3522c:	nop
   35230:	ldr	x0, [sp, #200]
   35234:	lsl	x0, x0, #3
   35238:	ldr	x1, [sp, #48]
   3523c:	add	x2, x1, x0
   35240:	ldr	x0, [sp, #192]
   35244:	lsl	x0, x0, #3
   35248:	ldr	x1, [sp, #32]
   3524c:	add	x3, x1, x0
   35250:	ldr	x1, [sp, #24]
   35254:	ldr	x0, [sp, #200]
   35258:	sub	x0, x1, x0
   3525c:	mov	x5, x0
   35260:	ldr	x4, [sp, #16]
   35264:	ldr	x1, [sp, #40]
   35268:	ldr	x0, [sp, #32]
   3526c:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   35270:	b	35320 <PyInit__decimal@@Base+0x1d648>
   35274:	ldr	x1, [sp, #24]
   35278:	ldr	x0, [sp, #200]
   3527c:	sub	x0, x1, x0
   35280:	lsl	x0, x0, #1
   35284:	add	x0, x0, #0x1
   35288:	str	x0, [sp, #192]
   3528c:	ldr	x0, [sp, #32]
   35290:	str	x0, [sp, #160]
   35294:	ldr	x0, [sp, #192]
   35298:	str	x0, [sp, #152]
   3529c:	str	xzr, [sp, #144]
   352a0:	b	352c4 <PyInit__decimal@@Base+0x1d5ec>
   352a4:	ldr	x0, [sp, #144]
   352a8:	lsl	x0, x0, #3
   352ac:	ldr	x1, [sp, #160]
   352b0:	add	x0, x1, x0
   352b4:	str	xzr, [x0]
   352b8:	ldr	x0, [sp, #144]
   352bc:	add	x0, x0, #0x1
   352c0:	str	x0, [sp, #144]
   352c4:	ldr	x1, [sp, #152]
   352c8:	ldr	x0, [sp, #144]
   352cc:	cmp	x1, x0
   352d0:	b.hi	352a4 <PyInit__decimal@@Base+0x1d5cc>  // b.pmore
   352d4:	nop
   352d8:	ldr	x0, [sp, #200]
   352dc:	lsl	x0, x0, #3
   352e0:	ldr	x1, [sp, #48]
   352e4:	add	x6, x1, x0
   352e8:	ldr	x0, [sp, #192]
   352ec:	lsl	x0, x0, #3
   352f0:	ldr	x1, [sp, #32]
   352f4:	add	x2, x1, x0
   352f8:	ldr	x1, [sp, #24]
   352fc:	ldr	x0, [sp, #200]
   35300:	sub	x0, x1, x0
   35304:	ldr	x5, [sp, #16]
   35308:	mov	x4, x0
   3530c:	mov	x3, x2
   35310:	ldr	x2, [sp, #40]
   35314:	mov	x1, x6
   35318:	ldr	x0, [sp, #32]
   3531c:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   35320:	ldr	x0, [sp, #200]
   35324:	lsl	x0, x0, #3
   35328:	ldr	x1, [sp, #56]
   3532c:	add	x3, x1, x0
   35330:	ldr	x1, [sp, #24]
   35334:	ldr	x0, [sp, #200]
   35338:	sub	x1, x1, x0
   3533c:	ldr	x0, [sp, #16]
   35340:	add	x0, x1, x0
   35344:	mov	x2, x0
   35348:	ldr	x1, [sp, #32]
   3534c:	mov	x0, x3
   35350:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   35354:	ldr	x0, [sp, #200]
   35358:	lsl	x0, x0, #1
   3535c:	add	x0, x0, #0x1
   35360:	str	x0, [sp, #192]
   35364:	ldr	x0, [sp, #32]
   35368:	str	x0, [sp, #136]
   3536c:	ldr	x0, [sp, #192]
   35370:	str	x0, [sp, #128]
   35374:	str	xzr, [sp, #120]
   35378:	b	3539c <PyInit__decimal@@Base+0x1d6c4>
   3537c:	ldr	x0, [sp, #120]
   35380:	lsl	x0, x0, #3
   35384:	ldr	x1, [sp, #136]
   35388:	add	x0, x1, x0
   3538c:	str	xzr, [x0]
   35390:	ldr	x0, [sp, #120]
   35394:	add	x0, x0, #0x1
   35398:	str	x0, [sp, #120]
   3539c:	ldr	x1, [sp, #128]
   353a0:	ldr	x0, [sp, #120]
   353a4:	cmp	x1, x0
   353a8:	b.hi	3537c <PyInit__decimal@@Base+0x1d6a4>  // b.pmore
   353ac:	nop
   353b0:	ldr	x0, [sp, #192]
   353b4:	lsl	x0, x0, #3
   353b8:	ldr	x1, [sp, #32]
   353bc:	add	x0, x1, x0
   353c0:	ldr	x5, [sp, #16]
   353c4:	ldr	x4, [sp, #200]
   353c8:	mov	x3, x0
   353cc:	ldr	x2, [sp, #40]
   353d0:	ldr	x1, [sp, #48]
   353d4:	ldr	x0, [sp, #32]
   353d8:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   353dc:	ldr	x1, [sp, #200]
   353e0:	ldr	x0, [sp, #16]
   353e4:	add	x0, x1, x0
   353e8:	mov	x2, x0
   353ec:	ldr	x1, [sp, #32]
   353f0:	ldr	x0, [sp, #56]
   353f4:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   353f8:	b	35738 <PyInit__decimal@@Base+0x1da60>
   353fc:	ldr	x0, [sp, #200]
   35400:	lsl	x0, x0, #3
   35404:	mov	x2, x0
   35408:	ldr	x1, [sp, #48]
   3540c:	ldr	x0, [sp, #32]
   35410:	bl	6510 <memcpy@plt>
   35414:	ldr	x0, [sp, #200]
   35418:	lsl	x0, x0, #3
   3541c:	ldr	x1, [sp, #32]
   35420:	add	x0, x1, x0
   35424:	str	xzr, [x0]
   35428:	ldr	x0, [sp, #200]
   3542c:	lsl	x0, x0, #3
   35430:	ldr	x1, [sp, #48]
   35434:	add	x3, x1, x0
   35438:	ldr	x1, [sp, #24]
   3543c:	ldr	x0, [sp, #200]
   35440:	sub	x0, x1, x0
   35444:	mov	x2, x0
   35448:	mov	x1, x3
   3544c:	ldr	x0, [sp, #32]
   35450:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   35454:	ldr	x0, [sp, #200]
   35458:	add	x0, x0, #0x1
   3545c:	lsl	x0, x0, #3
   35460:	ldr	x1, [sp, #32]
   35464:	add	x3, x1, x0
   35468:	ldr	x0, [sp, #200]
   3546c:	lsl	x0, x0, #3
   35470:	mov	x2, x0
   35474:	ldr	x1, [sp, #40]
   35478:	mov	x0, x3
   3547c:	bl	6510 <memcpy@plt>
   35480:	ldr	x0, [sp, #200]
   35484:	lsl	x0, x0, #4
   35488:	add	x0, x0, #0x8
   3548c:	ldr	x1, [sp, #32]
   35490:	add	x0, x1, x0
   35494:	str	xzr, [x0]
   35498:	ldr	x0, [sp, #200]
   3549c:	add	x0, x0, #0x1
   354a0:	lsl	x0, x0, #3
   354a4:	ldr	x1, [sp, #32]
   354a8:	add	x3, x1, x0
   354ac:	ldr	x0, [sp, #200]
   354b0:	lsl	x0, x0, #3
   354b4:	ldr	x1, [sp, #40]
   354b8:	add	x4, x1, x0
   354bc:	ldr	x1, [sp, #16]
   354c0:	ldr	x0, [sp, #200]
   354c4:	sub	x0, x1, x0
   354c8:	mov	x2, x0
   354cc:	mov	x1, x4
   354d0:	mov	x0, x3
   354d4:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   354d8:	ldr	x0, [sp, #200]
   354dc:	lsl	x0, x0, #3
   354e0:	ldr	x1, [sp, #56]
   354e4:	add	x6, x1, x0
   354e8:	ldr	x0, [sp, #200]
   354ec:	add	x0, x0, #0x1
   354f0:	lsl	x0, x0, #3
   354f4:	ldr	x1, [sp, #32]
   354f8:	add	x2, x1, x0
   354fc:	ldr	x0, [sp, #200]
   35500:	add	x0, x0, #0x1
   35504:	lsl	x0, x0, #4
   35508:	ldr	x1, [sp, #32]
   3550c:	add	x1, x1, x0
   35510:	ldr	x0, [sp, #200]
   35514:	add	x3, x0, #0x1
   35518:	ldr	x0, [sp, #200]
   3551c:	add	x0, x0, #0x1
   35520:	mov	x5, x0
   35524:	mov	x4, x3
   35528:	mov	x3, x1
   3552c:	ldr	x1, [sp, #32]
   35530:	mov	x0, x6
   35534:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   35538:	ldr	x1, [sp, #24]
   3553c:	ldr	x0, [sp, #200]
   35540:	sub	x0, x1, x0
   35544:	lsl	x0, x0, #1
   35548:	add	x0, x0, #0x1
   3554c:	str	x0, [sp, #192]
   35550:	ldr	x0, [sp, #32]
   35554:	str	x0, [sp, #88]
   35558:	ldr	x0, [sp, #192]
   3555c:	str	x0, [sp, #80]
   35560:	str	xzr, [sp, #72]
   35564:	b	35588 <PyInit__decimal@@Base+0x1d8b0>
   35568:	ldr	x0, [sp, #72]
   3556c:	lsl	x0, x0, #3
   35570:	ldr	x1, [sp, #88]
   35574:	add	x0, x1, x0
   35578:	str	xzr, [x0]
   3557c:	ldr	x0, [sp, #72]
   35580:	add	x0, x0, #0x1
   35584:	str	x0, [sp, #72]
   35588:	ldr	x1, [sp, #80]
   3558c:	ldr	x0, [sp, #72]
   35590:	cmp	x1, x0
   35594:	b.hi	35568 <PyInit__decimal@@Base+0x1d890>  // b.pmore
   35598:	nop
   3559c:	ldr	x0, [sp, #200]
   355a0:	lsl	x0, x0, #3
   355a4:	ldr	x1, [sp, #48]
   355a8:	add	x6, x1, x0
   355ac:	ldr	x0, [sp, #200]
   355b0:	lsl	x0, x0, #3
   355b4:	ldr	x1, [sp, #40]
   355b8:	add	x2, x1, x0
   355bc:	ldr	x0, [sp, #192]
   355c0:	lsl	x0, x0, #3
   355c4:	ldr	x1, [sp, #32]
   355c8:	add	x3, x1, x0
   355cc:	ldr	x1, [sp, #24]
   355d0:	ldr	x0, [sp, #200]
   355d4:	sub	x4, x1, x0
   355d8:	ldr	x1, [sp, #16]
   355dc:	ldr	x0, [sp, #200]
   355e0:	sub	x0, x1, x0
   355e4:	mov	x5, x0
   355e8:	mov	x1, x6
   355ec:	ldr	x0, [sp, #32]
   355f0:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   355f4:	ldr	x0, [sp, #200]
   355f8:	lsl	x0, x0, #4
   355fc:	ldr	x1, [sp, #56]
   35600:	add	x3, x1, x0
   35604:	ldr	x1, [sp, #24]
   35608:	ldr	x0, [sp, #200]
   3560c:	sub	x1, x1, x0
   35610:	ldr	x2, [sp, #16]
   35614:	ldr	x0, [sp, #200]
   35618:	sub	x0, x2, x0
   3561c:	add	x0, x1, x0
   35620:	mov	x2, x0
   35624:	ldr	x1, [sp, #32]
   35628:	mov	x0, x3
   3562c:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   35630:	ldr	x0, [sp, #200]
   35634:	lsl	x0, x0, #3
   35638:	ldr	x1, [sp, #56]
   3563c:	add	x3, x1, x0
   35640:	ldr	x1, [sp, #24]
   35644:	ldr	x0, [sp, #200]
   35648:	sub	x1, x1, x0
   3564c:	ldr	x2, [sp, #16]
   35650:	ldr	x0, [sp, #200]
   35654:	sub	x0, x2, x0
   35658:	add	x0, x1, x0
   3565c:	mov	x2, x0
   35660:	ldr	x1, [sp, #32]
   35664:	mov	x0, x3
   35668:	bl	1a278 <PyInit__decimal@@Base+0x25a0>
   3566c:	ldr	x0, [sp, #200]
   35670:	lsl	x0, x0, #1
   35674:	add	x0, x0, #0x1
   35678:	str	x0, [sp, #192]
   3567c:	ldr	x0, [sp, #32]
   35680:	str	x0, [sp, #112]
   35684:	ldr	x0, [sp, #192]
   35688:	str	x0, [sp, #104]
   3568c:	str	xzr, [sp, #96]
   35690:	b	356b4 <PyInit__decimal@@Base+0x1d9dc>
   35694:	ldr	x0, [sp, #96]
   35698:	lsl	x0, x0, #3
   3569c:	ldr	x1, [sp, #112]
   356a0:	add	x0, x1, x0
   356a4:	str	xzr, [x0]
   356a8:	ldr	x0, [sp, #96]
   356ac:	add	x0, x0, #0x1
   356b0:	str	x0, [sp, #96]
   356b4:	ldr	x1, [sp, #104]
   356b8:	ldr	x0, [sp, #96]
   356bc:	cmp	x1, x0
   356c0:	b.hi	35694 <PyInit__decimal@@Base+0x1d9bc>  // b.pmore
   356c4:	nop
   356c8:	ldr	x0, [sp, #192]
   356cc:	lsl	x0, x0, #3
   356d0:	ldr	x1, [sp, #32]
   356d4:	add	x0, x1, x0
   356d8:	ldr	x5, [sp, #200]
   356dc:	ldr	x4, [sp, #200]
   356e0:	mov	x3, x0
   356e4:	ldr	x2, [sp, #40]
   356e8:	ldr	x1, [sp, #48]
   356ec:	ldr	x0, [sp, #32]
   356f0:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   356f4:	ldr	x0, [sp, #200]
   356f8:	lsl	x0, x0, #1
   356fc:	mov	x2, x0
   35700:	ldr	x1, [sp, #32]
   35704:	ldr	x0, [sp, #56]
   35708:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   3570c:	ldr	x0, [sp, #200]
   35710:	lsl	x0, x0, #3
   35714:	ldr	x1, [sp, #56]
   35718:	add	x3, x1, x0
   3571c:	ldr	x0, [sp, #200]
   35720:	lsl	x0, x0, #1
   35724:	mov	x2, x0
   35728:	ldr	x1, [sp, #32]
   3572c:	mov	x0, x3
   35730:	bl	1a278 <PyInit__decimal@@Base+0x25a0>
   35734:	nop
   35738:	ldp	x29, x30, [sp], #208
   3573c:	ret
   35740:	stp	x29, x30, [sp, #-96]!
   35744:	mov	x29, sp
   35748:	str	x0, [sp, #56]
   3574c:	str	x1, [sp, #48]
   35750:	str	x2, [sp, #40]
   35754:	str	x3, [sp, #32]
   35758:	str	x4, [sp, #24]
   3575c:	str	xzr, [sp, #80]
   35760:	str	xzr, [sp, #88]
   35764:	ldr	x1, [sp, #32]
   35768:	ldr	x0, [sp, #40]
   3576c:	bl	35070 <PyInit__decimal@@Base+0x1d398>
   35770:	mov	x1, x0
   35774:	ldr	x0, [sp, #24]
   35778:	str	x1, [x0]
   3577c:	ldr	x0, [sp, #24]
   35780:	ldr	x0, [x0]
   35784:	mov	x1, #0x8                   	// #8
   35788:	bl	234ec <PyInit__decimal@@Base+0xb814>
   3578c:	str	x0, [sp, #80]
   35790:	ldr	x0, [sp, #80]
   35794:	cmp	x0, #0x0
   35798:	b.ne	357a4 <PyInit__decimal@@Base+0x1dacc>  // b.any
   3579c:	mov	x0, #0x0                   	// #0
   357a0:	b	35838 <PyInit__decimal@@Base+0x1db60>
   357a4:	mov	x1, #0x10                  	// #16
   357a8:	ldr	x0, [sp, #40]
   357ac:	bl	350e0 <PyInit__decimal@@Base+0x1d408>
   357b0:	str	x0, [sp, #72]
   357b4:	ldr	x0, [sp, #72]
   357b8:	cmp	x0, #0x0
   357bc:	b.eq	357f8 <PyInit__decimal@@Base+0x1db20>  // b.none
   357c0:	mov	x1, #0x8                   	// #8
   357c4:	ldr	x0, [sp, #72]
   357c8:	bl	234ec <PyInit__decimal@@Base+0xb814>
   357cc:	str	x0, [sp, #88]
   357d0:	ldr	x0, [sp, #88]
   357d4:	cmp	x0, #0x0
   357d8:	b.ne	357f8 <PyInit__decimal@@Base+0x1db20>  // b.any
   357dc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   357e0:	add	x0, x0, #0x6f8
   357e4:	ldr	x1, [x0]
   357e8:	ldr	x0, [sp, #80]
   357ec:	blr	x1
   357f0:	mov	x0, #0x0                   	// #0
   357f4:	b	35838 <PyInit__decimal@@Base+0x1db60>
   357f8:	ldr	x5, [sp, #32]
   357fc:	ldr	x4, [sp, #40]
   35800:	ldr	x3, [sp, #88]
   35804:	ldr	x2, [sp, #48]
   35808:	ldr	x1, [sp, #56]
   3580c:	ldr	x0, [sp, #80]
   35810:	bl	35154 <PyInit__decimal@@Base+0x1d47c>
   35814:	ldr	x0, [sp, #88]
   35818:	cmp	x0, #0x0
   3581c:	b.eq	35834 <PyInit__decimal@@Base+0x1db5c>  // b.none
   35820:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35824:	add	x0, x0, #0x6f8
   35828:	ldr	x1, [x0]
   3582c:	ldr	x0, [sp, #88]
   35830:	blr	x1
   35834:	ldr	x0, [sp, #80]
   35838:	ldp	x29, x30, [sp], #96
   3583c:	ret
   35840:	stp	x29, x30, [sp, #-64]!
   35844:	mov	x29, sp
   35848:	str	x0, [sp, #24]
   3584c:	ldr	x0, [sp, #24]
   35850:	bl	24928 <PyInit__decimal@@Base+0xcc50>
   35854:	sxtw	x0, w0
   35858:	str	x0, [sp, #56]
   3585c:	ldr	x0, [sp, #24]
   35860:	cmp	x0, #0x400
   35864:	b.hi	358a0 <PyInit__decimal@@Base+0x1dbc8>  // b.pmore
   35868:	ldr	x0, [sp, #56]
   3586c:	mov	w1, w0
   35870:	mov	x0, #0x1                   	// #1
   35874:	lsl	x0, x0, x1
   35878:	str	x0, [sp, #48]
   3587c:	ldr	x1, [sp, #24]
   35880:	ldr	x0, [sp, #48]
   35884:	cmp	x1, x0
   35888:	b.eq	35898 <PyInit__decimal@@Base+0x1dbc0>  // b.none
   3588c:	ldr	x0, [sp, #48]
   35890:	lsl	x0, x0, #1
   35894:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   35898:	ldr	x0, [sp, #48]
   3589c:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   358a0:	ldr	x1, [sp, #24]
   358a4:	mov	x0, #0x100000000           	// #4294967296
   358a8:	cmp	x1, x0
   358ac:	b.hi	35920 <PyInit__decimal@@Base+0x1dc48>  // b.pmore
   358b0:	ldr	x0, [sp, #56]
   358b4:	mov	w1, w0
   358b8:	mov	x0, #0x1                   	// #1
   358bc:	lsl	x0, x0, x1
   358c0:	str	x0, [sp, #48]
   358c4:	ldr	x1, [sp, #24]
   358c8:	ldr	x0, [sp, #48]
   358cc:	cmp	x1, x0
   358d0:	b.ne	358dc <PyInit__decimal@@Base+0x1dc04>  // b.any
   358d4:	ldr	x0, [sp, #48]
   358d8:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   358dc:	ldr	x0, [sp, #48]
   358e0:	lsr	x0, x0, #1
   358e4:	str	x0, [sp, #40]
   358e8:	ldr	x1, [sp, #48]
   358ec:	ldr	x0, [sp, #40]
   358f0:	add	x0, x1, x0
   358f4:	str	x0, [sp, #48]
   358f8:	ldr	x1, [sp, #24]
   358fc:	ldr	x0, [sp, #48]
   35900:	cmp	x1, x0
   35904:	b.ls	35918 <PyInit__decimal@@Base+0x1dc40>  // b.plast
   35908:	ldr	x1, [sp, #48]
   3590c:	ldr	x0, [sp, #40]
   35910:	add	x0, x1, x0
   35914:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   35918:	ldr	x0, [sp, #48]
   3591c:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   35920:	ldr	x1, [sp, #24]
   35924:	mov	x0, #0x180000000           	// #6442450944
   35928:	cmp	x1, x0
   3592c:	b.hi	35938 <PyInit__decimal@@Base+0x1dc60>  // b.pmore
   35930:	mov	x0, #0x180000000           	// #6442450944
   35934:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   35938:	ldr	x1, [sp, #24]
   3593c:	mov	x0, #0x300000000           	// #12884901888
   35940:	cmp	x1, x0
   35944:	b.hi	35950 <PyInit__decimal@@Base+0x1dc78>  // b.pmore
   35948:	mov	x0, #0x300000000           	// #12884901888
   3594c:	b	35954 <PyInit__decimal@@Base+0x1dc7c>
   35950:	mov	x0, #0xffffffffffffffff    	// #-1
   35954:	ldp	x29, x30, [sp], #64
   35958:	ret
   3595c:	stp	x29, x30, [sp, #-160]!
   35960:	mov	x29, sp
   35964:	str	x0, [sp, #56]
   35968:	str	x1, [sp, #48]
   3596c:	str	x2, [sp, #40]
   35970:	str	x3, [sp, #32]
   35974:	str	x4, [sp, #24]
   35978:	str	xzr, [sp, #152]
   3597c:	str	xzr, [sp, #144]
   35980:	str	xzr, [sp, #136]
   35984:	str	xzr, [sp, #128]
   35988:	ldr	x1, [sp, #32]
   3598c:	ldr	x0, [sp, #40]
   35990:	bl	24318 <PyInit__decimal@@Base+0xc640>
   35994:	mov	x1, x0
   35998:	ldr	x0, [sp, #24]
   3599c:	str	x1, [x0]
   359a0:	ldr	x0, [sp, #24]
   359a4:	ldr	x0, [x0]
   359a8:	bl	35840 <PyInit__decimal@@Base+0x1db68>
   359ac:	str	x0, [sp, #120]
   359b0:	ldr	x0, [sp, #120]
   359b4:	cmn	x0, #0x1
   359b8:	b.eq	35cec <PyInit__decimal@@Base+0x1e014>  // b.none
   359bc:	mov	x1, #0x8                   	// #8
   359c0:	ldr	x0, [sp, #120]
   359c4:	bl	234ec <PyInit__decimal@@Base+0xb814>
   359c8:	str	x0, [sp, #152]
   359cc:	ldr	x0, [sp, #152]
   359d0:	cmp	x0, #0x0
   359d4:	b.eq	35cf4 <PyInit__decimal@@Base+0x1e01c>  // b.none
   359d8:	mov	x1, #0x8                   	// #8
   359dc:	ldr	x0, [sp, #120]
   359e0:	bl	234ec <PyInit__decimal@@Base+0xb814>
   359e4:	str	x0, [sp, #144]
   359e8:	ldr	x0, [sp, #144]
   359ec:	cmp	x0, #0x0
   359f0:	b.eq	35cfc <PyInit__decimal@@Base+0x1e024>  // b.none
   359f4:	mov	x1, #0x8                   	// #8
   359f8:	ldr	x0, [sp, #120]
   359fc:	bl	234ec <PyInit__decimal@@Base+0xb814>
   35a00:	str	x0, [sp, #136]
   35a04:	ldr	x0, [sp, #136]
   35a08:	cmp	x0, #0x0
   35a0c:	b.eq	35d04 <PyInit__decimal@@Base+0x1e02c>  // b.none
   35a10:	ldr	x0, [sp, #40]
   35a14:	lsl	x0, x0, #3
   35a18:	mov	x2, x0
   35a1c:	ldr	x1, [sp, #56]
   35a20:	ldr	x0, [sp, #152]
   35a24:	bl	6510 <memcpy@plt>
   35a28:	ldr	x0, [sp, #40]
   35a2c:	lsl	x0, x0, #3
   35a30:	mov	x2, x0
   35a34:	ldr	x1, [sp, #56]
   35a38:	ldr	x0, [sp, #144]
   35a3c:	bl	6510 <memcpy@plt>
   35a40:	ldr	x0, [sp, #40]
   35a44:	lsl	x0, x0, #3
   35a48:	mov	x2, x0
   35a4c:	ldr	x1, [sp, #56]
   35a50:	ldr	x0, [sp, #136]
   35a54:	bl	6510 <memcpy@plt>
   35a58:	ldr	x1, [sp, #56]
   35a5c:	ldr	x0, [sp, #48]
   35a60:	cmp	x1, x0
   35a64:	b.ne	35ab4 <PyInit__decimal@@Base+0x1dddc>  // b.any
   35a68:	mov	w2, #0x0                   	// #0
   35a6c:	ldr	x1, [sp, #120]
   35a70:	ldr	x0, [sp, #152]
   35a74:	bl	1c6b4 <PyInit__decimal@@Base+0x49dc>
   35a78:	cmp	w0, #0x0
   35a7c:	b.eq	35d0c <PyInit__decimal@@Base+0x1e034>  // b.none
   35a80:	mov	w2, #0x1                   	// #1
   35a84:	ldr	x1, [sp, #120]
   35a88:	ldr	x0, [sp, #144]
   35a8c:	bl	1c6b4 <PyInit__decimal@@Base+0x49dc>
   35a90:	cmp	w0, #0x0
   35a94:	b.eq	35d0c <PyInit__decimal@@Base+0x1e034>  // b.none
   35a98:	mov	w2, #0x2                   	// #2
   35a9c:	ldr	x1, [sp, #120]
   35aa0:	ldr	x0, [sp, #136]
   35aa4:	bl	1c6b4 <PyInit__decimal@@Base+0x49dc>
   35aa8:	cmp	w0, #0x0
   35aac:	b.ne	35c88 <PyInit__decimal@@Base+0x1dfb0>  // b.any
   35ab0:	b	35d0c <PyInit__decimal@@Base+0x1e034>
   35ab4:	mov	x1, #0x8                   	// #8
   35ab8:	ldr	x0, [sp, #120]
   35abc:	bl	234ec <PyInit__decimal@@Base+0xb814>
   35ac0:	str	x0, [sp, #128]
   35ac4:	ldr	x0, [sp, #128]
   35ac8:	cmp	x0, #0x0
   35acc:	b.eq	35d14 <PyInit__decimal@@Base+0x1e03c>  // b.none
   35ad0:	ldr	x0, [sp, #32]
   35ad4:	lsl	x0, x0, #3
   35ad8:	mov	x2, x0
   35adc:	ldr	x1, [sp, #48]
   35ae0:	ldr	x0, [sp, #128]
   35ae4:	bl	6510 <memcpy@plt>
   35ae8:	mov	w3, #0x0                   	// #0
   35aec:	ldr	x2, [sp, #120]
   35af0:	ldr	x1, [sp, #128]
   35af4:	ldr	x0, [sp, #152]
   35af8:	bl	1c374 <PyInit__decimal@@Base+0x469c>
   35afc:	cmp	w0, #0x0
   35b00:	b.ne	35b1c <PyInit__decimal@@Base+0x1de44>  // b.any
   35b04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35b08:	add	x0, x0, #0x6f8
   35b0c:	ldr	x1, [x0]
   35b10:	ldr	x0, [sp, #128]
   35b14:	blr	x1
   35b18:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35b1c:	ldr	x0, [sp, #32]
   35b20:	lsl	x0, x0, #3
   35b24:	mov	x2, x0
   35b28:	ldr	x1, [sp, #48]
   35b2c:	ldr	x0, [sp, #128]
   35b30:	bl	6510 <memcpy@plt>
   35b34:	ldr	x0, [sp, #32]
   35b38:	lsl	x0, x0, #3
   35b3c:	ldr	x1, [sp, #128]
   35b40:	add	x1, x1, x0
   35b44:	ldr	x2, [sp, #120]
   35b48:	ldr	x0, [sp, #32]
   35b4c:	sub	x0, x2, x0
   35b50:	str	x1, [sp, #112]
   35b54:	str	x0, [sp, #104]
   35b58:	str	xzr, [sp, #96]
   35b5c:	b	35b80 <PyInit__decimal@@Base+0x1dea8>
   35b60:	ldr	x0, [sp, #96]
   35b64:	lsl	x0, x0, #3
   35b68:	ldr	x1, [sp, #112]
   35b6c:	add	x0, x1, x0
   35b70:	str	xzr, [x0]
   35b74:	ldr	x0, [sp, #96]
   35b78:	add	x0, x0, #0x1
   35b7c:	str	x0, [sp, #96]
   35b80:	ldr	x1, [sp, #104]
   35b84:	ldr	x0, [sp, #96]
   35b88:	cmp	x1, x0
   35b8c:	b.hi	35b60 <PyInit__decimal@@Base+0x1de88>  // b.pmore
   35b90:	nop
   35b94:	mov	w3, #0x1                   	// #1
   35b98:	ldr	x2, [sp, #120]
   35b9c:	ldr	x1, [sp, #128]
   35ba0:	ldr	x0, [sp, #144]
   35ba4:	bl	1c374 <PyInit__decimal@@Base+0x469c>
   35ba8:	cmp	w0, #0x0
   35bac:	b.ne	35bc8 <PyInit__decimal@@Base+0x1def0>  // b.any
   35bb0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35bb4:	add	x0, x0, #0x6f8
   35bb8:	ldr	x1, [x0]
   35bbc:	ldr	x0, [sp, #128]
   35bc0:	blr	x1
   35bc4:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35bc8:	ldr	x0, [sp, #32]
   35bcc:	lsl	x0, x0, #3
   35bd0:	mov	x2, x0
   35bd4:	ldr	x1, [sp, #48]
   35bd8:	ldr	x0, [sp, #128]
   35bdc:	bl	6510 <memcpy@plt>
   35be0:	ldr	x0, [sp, #32]
   35be4:	lsl	x0, x0, #3
   35be8:	ldr	x1, [sp, #128]
   35bec:	add	x1, x1, x0
   35bf0:	ldr	x2, [sp, #120]
   35bf4:	ldr	x0, [sp, #32]
   35bf8:	sub	x0, x2, x0
   35bfc:	str	x1, [sp, #88]
   35c00:	str	x0, [sp, #80]
   35c04:	str	xzr, [sp, #72]
   35c08:	b	35c2c <PyInit__decimal@@Base+0x1df54>
   35c0c:	ldr	x0, [sp, #72]
   35c10:	lsl	x0, x0, #3
   35c14:	ldr	x1, [sp, #88]
   35c18:	add	x0, x1, x0
   35c1c:	str	xzr, [x0]
   35c20:	ldr	x0, [sp, #72]
   35c24:	add	x0, x0, #0x1
   35c28:	str	x0, [sp, #72]
   35c2c:	ldr	x1, [sp, #80]
   35c30:	ldr	x0, [sp, #72]
   35c34:	cmp	x1, x0
   35c38:	b.hi	35c0c <PyInit__decimal@@Base+0x1df34>  // b.pmore
   35c3c:	nop
   35c40:	mov	w3, #0x2                   	// #2
   35c44:	ldr	x2, [sp, #120]
   35c48:	ldr	x1, [sp, #128]
   35c4c:	ldr	x0, [sp, #136]
   35c50:	bl	1c374 <PyInit__decimal@@Base+0x469c>
   35c54:	cmp	w0, #0x0
   35c58:	b.ne	35c74 <PyInit__decimal@@Base+0x1df9c>  // b.any
   35c5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35c60:	add	x0, x0, #0x6f8
   35c64:	ldr	x1, [x0]
   35c68:	ldr	x0, [sp, #128]
   35c6c:	blr	x1
   35c70:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35c74:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35c78:	add	x0, x0, #0x6f8
   35c7c:	ldr	x1, [x0]
   35c80:	ldr	x0, [sp, #128]
   35c84:	blr	x1
   35c88:	ldr	x0, [sp, #24]
   35c8c:	ldr	x0, [x0]
   35c90:	mov	x3, x0
   35c94:	ldr	x2, [sp, #136]
   35c98:	ldr	x1, [sp, #144]
   35c9c:	ldr	x0, [sp, #152]
   35ca0:	bl	1d3e8 <PyInit__decimal@@Base+0x5710>
   35ca4:	ldr	x0, [sp, #144]
   35ca8:	cmp	x0, #0x0
   35cac:	b.eq	35cc4 <PyInit__decimal@@Base+0x1dfec>  // b.none
   35cb0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35cb4:	add	x0, x0, #0x6f8
   35cb8:	ldr	x1, [x0]
   35cbc:	ldr	x0, [sp, #144]
   35cc0:	blr	x1
   35cc4:	ldr	x0, [sp, #136]
   35cc8:	cmp	x0, #0x0
   35ccc:	b.eq	35ce4 <PyInit__decimal@@Base+0x1e00c>  // b.none
   35cd0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35cd4:	add	x0, x0, #0x6f8
   35cd8:	ldr	x1, [x0]
   35cdc:	ldr	x0, [sp, #136]
   35ce0:	blr	x1
   35ce4:	ldr	x0, [sp, #152]
   35ce8:	b	35d40 <PyInit__decimal@@Base+0x1e068>
   35cec:	nop
   35cf0:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35cf4:	nop
   35cf8:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35cfc:	nop
   35d00:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35d04:	nop
   35d08:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35d0c:	nop
   35d10:	b	35d18 <PyInit__decimal@@Base+0x1e040>
   35d14:	nop
   35d18:	ldr	x0, [sp, #152]
   35d1c:	cmp	x0, #0x0
   35d20:	b.eq	35d38 <PyInit__decimal@@Base+0x1e060>  // b.none
   35d24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35d28:	add	x0, x0, #0x6f8
   35d2c:	ldr	x1, [x0]
   35d30:	ldr	x0, [sp, #152]
   35d34:	blr	x1
   35d38:	str	xzr, [sp, #152]
   35d3c:	b	35ca4 <PyInit__decimal@@Base+0x1dfcc>
   35d40:	ldp	x29, x30, [sp], #160
   35d44:	ret
   35d48:	stp	x29, x30, [sp, #-224]!
   35d4c:	mov	x29, sp
   35d50:	str	x0, [sp, #56]
   35d54:	str	x1, [sp, #48]
   35d58:	str	x2, [sp, #40]
   35d5c:	str	x3, [sp, #32]
   35d60:	str	x4, [sp, #24]
   35d64:	str	x5, [sp, #16]
   35d68:	ldr	x1, [sp, #24]
   35d6c:	mov	x0, #0x180000000           	// #6442450944
   35d70:	cmp	x1, x0
   35d74:	b.hi	35e10 <PyInit__decimal@@Base+0x1e138>  // b.pmore
   35d78:	ldr	x0, [sp, #16]
   35d7c:	cmp	x0, #0xc0
   35d80:	b.hi	35da0 <PyInit__decimal@@Base+0x1e0c8>  // b.pmore
   35d84:	ldr	x4, [sp, #24]
   35d88:	ldr	x3, [sp, #16]
   35d8c:	ldr	x2, [sp, #48]
   35d90:	ldr	x1, [sp, #40]
   35d94:	ldr	x0, [sp, #56]
   35d98:	bl	1a4d8 <PyInit__decimal@@Base+0x2800>
   35d9c:	b	35e08 <PyInit__decimal@@Base+0x1e130>
   35da0:	add	x0, sp, #0x48
   35da4:	mov	x4, x0
   35da8:	ldr	x3, [sp, #16]
   35dac:	ldr	x2, [sp, #24]
   35db0:	ldr	x1, [sp, #40]
   35db4:	ldr	x0, [sp, #48]
   35db8:	bl	3595c <PyInit__decimal@@Base+0x1dc84>
   35dbc:	str	x0, [sp, #200]
   35dc0:	ldr	x0, [sp, #200]
   35dc4:	cmp	x0, #0x0
   35dc8:	b.ne	35dd4 <PyInit__decimal@@Base+0x1e0fc>  // b.any
   35dcc:	mov	w0, #0x0                   	// #0
   35dd0:	b	3640c <PyInit__decimal@@Base+0x1e734>
   35dd4:	ldr	x1, [sp, #24]
   35dd8:	ldr	x0, [sp, #16]
   35ddc:	add	x0, x1, x0
   35de0:	lsl	x0, x0, #3
   35de4:	mov	x2, x0
   35de8:	ldr	x1, [sp, #200]
   35dec:	ldr	x0, [sp, #56]
   35df0:	bl	6510 <memcpy@plt>
   35df4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   35df8:	add	x0, x0, #0x6f8
   35dfc:	ldr	x1, [x0]
   35e00:	ldr	x0, [sp, #200]
   35e04:	blr	x1
   35e08:	mov	w0, #0x1                   	// #1
   35e0c:	b	3640c <PyInit__decimal@@Base+0x1e734>
   35e10:	ldr	x0, [sp, #24]
   35e14:	add	x0, x0, #0x1
   35e18:	lsr	x0, x0, #1
   35e1c:	str	x0, [sp, #216]
   35e20:	ldr	x1, [sp, #16]
   35e24:	ldr	x0, [sp, #216]
   35e28:	cmp	x1, x0
   35e2c:	b.hi	360a0 <PyInit__decimal@@Base+0x1e3c8>  // b.pmore
   35e30:	ldr	x1, [sp, #24]
   35e34:	ldr	x0, [sp, #216]
   35e38:	sub	x0, x1, x0
   35e3c:	ldr	x1, [sp, #16]
   35e40:	cmp	x1, x0
   35e44:	b.ls	35ef4 <PyInit__decimal@@Base+0x1e21c>  // b.plast
   35e48:	ldr	x0, [sp, #16]
   35e4c:	lsl	x0, x0, #1
   35e50:	add	x0, x0, #0x1
   35e54:	str	x0, [sp, #208]
   35e58:	ldr	x0, [sp, #32]
   35e5c:	str	x0, [sp, #192]
   35e60:	ldr	x0, [sp, #208]
   35e64:	str	x0, [sp, #184]
   35e68:	str	xzr, [sp, #176]
   35e6c:	b	35e90 <PyInit__decimal@@Base+0x1e1b8>
   35e70:	ldr	x0, [sp, #176]
   35e74:	lsl	x0, x0, #3
   35e78:	ldr	x1, [sp, #192]
   35e7c:	add	x0, x1, x0
   35e80:	str	xzr, [x0]
   35e84:	ldr	x0, [sp, #176]
   35e88:	add	x0, x0, #0x1
   35e8c:	str	x0, [sp, #176]
   35e90:	ldr	x1, [sp, #184]
   35e94:	ldr	x0, [sp, #176]
   35e98:	cmp	x1, x0
   35e9c:	b.hi	35e70 <PyInit__decimal@@Base+0x1e198>  // b.pmore
   35ea0:	nop
   35ea4:	ldr	x0, [sp, #216]
   35ea8:	lsl	x0, x0, #3
   35eac:	ldr	x1, [sp, #48]
   35eb0:	add	x2, x1, x0
   35eb4:	ldr	x0, [sp, #208]
   35eb8:	lsl	x0, x0, #3
   35ebc:	ldr	x1, [sp, #32]
   35ec0:	add	x3, x1, x0
   35ec4:	ldr	x1, [sp, #24]
   35ec8:	ldr	x0, [sp, #216]
   35ecc:	sub	x0, x1, x0
   35ed0:	mov	x5, x0
   35ed4:	ldr	x4, [sp, #16]
   35ed8:	ldr	x1, [sp, #40]
   35edc:	ldr	x0, [sp, #32]
   35ee0:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   35ee4:	cmp	w0, #0x0
   35ee8:	b.ne	35fb0 <PyInit__decimal@@Base+0x1e2d8>  // b.any
   35eec:	mov	w0, #0x0                   	// #0
   35ef0:	b	3640c <PyInit__decimal@@Base+0x1e734>
   35ef4:	ldr	x1, [sp, #24]
   35ef8:	ldr	x0, [sp, #216]
   35efc:	sub	x0, x1, x0
   35f00:	lsl	x0, x0, #1
   35f04:	add	x0, x0, #0x1
   35f08:	str	x0, [sp, #208]
   35f0c:	ldr	x0, [sp, #32]
   35f10:	str	x0, [sp, #168]
   35f14:	ldr	x0, [sp, #208]
   35f18:	str	x0, [sp, #160]
   35f1c:	str	xzr, [sp, #152]
   35f20:	b	35f44 <PyInit__decimal@@Base+0x1e26c>
   35f24:	ldr	x0, [sp, #152]
   35f28:	lsl	x0, x0, #3
   35f2c:	ldr	x1, [sp, #168]
   35f30:	add	x0, x1, x0
   35f34:	str	xzr, [x0]
   35f38:	ldr	x0, [sp, #152]
   35f3c:	add	x0, x0, #0x1
   35f40:	str	x0, [sp, #152]
   35f44:	ldr	x1, [sp, #160]
   35f48:	ldr	x0, [sp, #152]
   35f4c:	cmp	x1, x0
   35f50:	b.hi	35f24 <PyInit__decimal@@Base+0x1e24c>  // b.pmore
   35f54:	nop
   35f58:	ldr	x0, [sp, #216]
   35f5c:	lsl	x0, x0, #3
   35f60:	ldr	x1, [sp, #48]
   35f64:	add	x6, x1, x0
   35f68:	ldr	x0, [sp, #208]
   35f6c:	lsl	x0, x0, #3
   35f70:	ldr	x1, [sp, #32]
   35f74:	add	x2, x1, x0
   35f78:	ldr	x1, [sp, #24]
   35f7c:	ldr	x0, [sp, #216]
   35f80:	sub	x0, x1, x0
   35f84:	ldr	x5, [sp, #16]
   35f88:	mov	x4, x0
   35f8c:	mov	x3, x2
   35f90:	ldr	x2, [sp, #40]
   35f94:	mov	x1, x6
   35f98:	ldr	x0, [sp, #32]
   35f9c:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   35fa0:	cmp	w0, #0x0
   35fa4:	b.ne	35fb0 <PyInit__decimal@@Base+0x1e2d8>  // b.any
   35fa8:	mov	w0, #0x0                   	// #0
   35fac:	b	3640c <PyInit__decimal@@Base+0x1e734>
   35fb0:	ldr	x0, [sp, #216]
   35fb4:	lsl	x0, x0, #3
   35fb8:	ldr	x1, [sp, #56]
   35fbc:	add	x3, x1, x0
   35fc0:	ldr	x1, [sp, #24]
   35fc4:	ldr	x0, [sp, #216]
   35fc8:	sub	x1, x1, x0
   35fcc:	ldr	x0, [sp, #16]
   35fd0:	add	x0, x1, x0
   35fd4:	mov	x2, x0
   35fd8:	ldr	x1, [sp, #32]
   35fdc:	mov	x0, x3
   35fe0:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   35fe4:	ldr	x0, [sp, #216]
   35fe8:	lsl	x0, x0, #1
   35fec:	add	x0, x0, #0x1
   35ff0:	str	x0, [sp, #208]
   35ff4:	ldr	x0, [sp, #32]
   35ff8:	str	x0, [sp, #144]
   35ffc:	ldr	x0, [sp, #208]
   36000:	str	x0, [sp, #136]
   36004:	str	xzr, [sp, #128]
   36008:	b	3602c <PyInit__decimal@@Base+0x1e354>
   3600c:	ldr	x0, [sp, #128]
   36010:	lsl	x0, x0, #3
   36014:	ldr	x1, [sp, #144]
   36018:	add	x0, x1, x0
   3601c:	str	xzr, [x0]
   36020:	ldr	x0, [sp, #128]
   36024:	add	x0, x0, #0x1
   36028:	str	x0, [sp, #128]
   3602c:	ldr	x1, [sp, #136]
   36030:	ldr	x0, [sp, #128]
   36034:	cmp	x1, x0
   36038:	b.hi	3600c <PyInit__decimal@@Base+0x1e334>  // b.pmore
   3603c:	nop
   36040:	ldr	x0, [sp, #208]
   36044:	lsl	x0, x0, #3
   36048:	ldr	x1, [sp, #32]
   3604c:	add	x0, x1, x0
   36050:	ldr	x5, [sp, #16]
   36054:	ldr	x4, [sp, #216]
   36058:	mov	x3, x0
   3605c:	ldr	x2, [sp, #40]
   36060:	ldr	x1, [sp, #48]
   36064:	ldr	x0, [sp, #32]
   36068:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   3606c:	cmp	w0, #0x0
   36070:	b.ne	3607c <PyInit__decimal@@Base+0x1e3a4>  // b.any
   36074:	mov	w0, #0x0                   	// #0
   36078:	b	3640c <PyInit__decimal@@Base+0x1e734>
   3607c:	ldr	x1, [sp, #216]
   36080:	ldr	x0, [sp, #16]
   36084:	add	x0, x1, x0
   36088:	mov	x2, x0
   3608c:	ldr	x1, [sp, #32]
   36090:	ldr	x0, [sp, #56]
   36094:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   36098:	mov	w0, #0x1                   	// #1
   3609c:	b	3640c <PyInit__decimal@@Base+0x1e734>
   360a0:	ldr	x0, [sp, #216]
   360a4:	lsl	x0, x0, #3
   360a8:	mov	x2, x0
   360ac:	ldr	x1, [sp, #48]
   360b0:	ldr	x0, [sp, #32]
   360b4:	bl	6510 <memcpy@plt>
   360b8:	ldr	x0, [sp, #216]
   360bc:	lsl	x0, x0, #3
   360c0:	ldr	x1, [sp, #32]
   360c4:	add	x0, x1, x0
   360c8:	str	xzr, [x0]
   360cc:	ldr	x0, [sp, #216]
   360d0:	lsl	x0, x0, #3
   360d4:	ldr	x1, [sp, #48]
   360d8:	add	x3, x1, x0
   360dc:	ldr	x1, [sp, #24]
   360e0:	ldr	x0, [sp, #216]
   360e4:	sub	x0, x1, x0
   360e8:	mov	x2, x0
   360ec:	mov	x1, x3
   360f0:	ldr	x0, [sp, #32]
   360f4:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   360f8:	ldr	x0, [sp, #216]
   360fc:	add	x0, x0, #0x1
   36100:	lsl	x0, x0, #3
   36104:	ldr	x1, [sp, #32]
   36108:	add	x3, x1, x0
   3610c:	ldr	x0, [sp, #216]
   36110:	lsl	x0, x0, #3
   36114:	mov	x2, x0
   36118:	ldr	x1, [sp, #40]
   3611c:	mov	x0, x3
   36120:	bl	6510 <memcpy@plt>
   36124:	ldr	x0, [sp, #216]
   36128:	lsl	x0, x0, #4
   3612c:	add	x0, x0, #0x8
   36130:	ldr	x1, [sp, #32]
   36134:	add	x0, x1, x0
   36138:	str	xzr, [x0]
   3613c:	ldr	x0, [sp, #216]
   36140:	add	x0, x0, #0x1
   36144:	lsl	x0, x0, #3
   36148:	ldr	x1, [sp, #32]
   3614c:	add	x3, x1, x0
   36150:	ldr	x0, [sp, #216]
   36154:	lsl	x0, x0, #3
   36158:	ldr	x1, [sp, #40]
   3615c:	add	x4, x1, x0
   36160:	ldr	x1, [sp, #16]
   36164:	ldr	x0, [sp, #216]
   36168:	sub	x0, x1, x0
   3616c:	mov	x2, x0
   36170:	mov	x1, x4
   36174:	mov	x0, x3
   36178:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   3617c:	ldr	x0, [sp, #216]
   36180:	lsl	x0, x0, #3
   36184:	ldr	x1, [sp, #56]
   36188:	add	x6, x1, x0
   3618c:	ldr	x0, [sp, #216]
   36190:	add	x0, x0, #0x1
   36194:	lsl	x0, x0, #3
   36198:	ldr	x1, [sp, #32]
   3619c:	add	x2, x1, x0
   361a0:	ldr	x0, [sp, #216]
   361a4:	add	x0, x0, #0x1
   361a8:	lsl	x0, x0, #4
   361ac:	ldr	x1, [sp, #32]
   361b0:	add	x1, x1, x0
   361b4:	ldr	x0, [sp, #216]
   361b8:	add	x3, x0, #0x1
   361bc:	ldr	x0, [sp, #216]
   361c0:	add	x0, x0, #0x1
   361c4:	mov	x5, x0
   361c8:	mov	x4, x3
   361cc:	mov	x3, x1
   361d0:	ldr	x1, [sp, #32]
   361d4:	mov	x0, x6
   361d8:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   361dc:	cmp	w0, #0x0
   361e0:	b.ne	361ec <PyInit__decimal@@Base+0x1e514>  // b.any
   361e4:	mov	w0, #0x0                   	// #0
   361e8:	b	3640c <PyInit__decimal@@Base+0x1e734>
   361ec:	ldr	x1, [sp, #24]
   361f0:	ldr	x0, [sp, #216]
   361f4:	sub	x0, x1, x0
   361f8:	lsl	x0, x0, #1
   361fc:	add	x0, x0, #0x1
   36200:	str	x0, [sp, #208]
   36204:	ldr	x0, [sp, #32]
   36208:	str	x0, [sp, #120]
   3620c:	ldr	x0, [sp, #208]
   36210:	str	x0, [sp, #112]
   36214:	str	xzr, [sp, #104]
   36218:	b	3623c <PyInit__decimal@@Base+0x1e564>
   3621c:	ldr	x0, [sp, #104]
   36220:	lsl	x0, x0, #3
   36224:	ldr	x1, [sp, #120]
   36228:	add	x0, x1, x0
   3622c:	str	xzr, [x0]
   36230:	ldr	x0, [sp, #104]
   36234:	add	x0, x0, #0x1
   36238:	str	x0, [sp, #104]
   3623c:	ldr	x1, [sp, #112]
   36240:	ldr	x0, [sp, #104]
   36244:	cmp	x1, x0
   36248:	b.hi	3621c <PyInit__decimal@@Base+0x1e544>  // b.pmore
   3624c:	nop
   36250:	ldr	x0, [sp, #216]
   36254:	lsl	x0, x0, #3
   36258:	ldr	x1, [sp, #48]
   3625c:	add	x6, x1, x0
   36260:	ldr	x0, [sp, #216]
   36264:	lsl	x0, x0, #3
   36268:	ldr	x1, [sp, #40]
   3626c:	add	x2, x1, x0
   36270:	ldr	x0, [sp, #208]
   36274:	lsl	x0, x0, #3
   36278:	ldr	x1, [sp, #32]
   3627c:	add	x3, x1, x0
   36280:	ldr	x1, [sp, #24]
   36284:	ldr	x0, [sp, #216]
   36288:	sub	x4, x1, x0
   3628c:	ldr	x1, [sp, #16]
   36290:	ldr	x0, [sp, #216]
   36294:	sub	x0, x1, x0
   36298:	mov	x5, x0
   3629c:	mov	x1, x6
   362a0:	ldr	x0, [sp, #32]
   362a4:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   362a8:	cmp	w0, #0x0
   362ac:	b.ne	362b8 <PyInit__decimal@@Base+0x1e5e0>  // b.any
   362b0:	mov	w0, #0x0                   	// #0
   362b4:	b	3640c <PyInit__decimal@@Base+0x1e734>
   362b8:	ldr	x0, [sp, #216]
   362bc:	lsl	x0, x0, #4
   362c0:	ldr	x1, [sp, #56]
   362c4:	add	x3, x1, x0
   362c8:	ldr	x1, [sp, #24]
   362cc:	ldr	x0, [sp, #216]
   362d0:	sub	x1, x1, x0
   362d4:	ldr	x2, [sp, #16]
   362d8:	ldr	x0, [sp, #216]
   362dc:	sub	x0, x2, x0
   362e0:	add	x0, x1, x0
   362e4:	mov	x2, x0
   362e8:	ldr	x1, [sp, #32]
   362ec:	mov	x0, x3
   362f0:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   362f4:	ldr	x0, [sp, #216]
   362f8:	lsl	x0, x0, #3
   362fc:	ldr	x1, [sp, #56]
   36300:	add	x3, x1, x0
   36304:	ldr	x1, [sp, #24]
   36308:	ldr	x0, [sp, #216]
   3630c:	sub	x1, x1, x0
   36310:	ldr	x2, [sp, #16]
   36314:	ldr	x0, [sp, #216]
   36318:	sub	x0, x2, x0
   3631c:	add	x0, x1, x0
   36320:	mov	x2, x0
   36324:	ldr	x1, [sp, #32]
   36328:	mov	x0, x3
   3632c:	bl	1a278 <PyInit__decimal@@Base+0x25a0>
   36330:	ldr	x0, [sp, #216]
   36334:	lsl	x0, x0, #1
   36338:	add	x0, x0, #0x1
   3633c:	str	x0, [sp, #208]
   36340:	ldr	x0, [sp, #32]
   36344:	str	x0, [sp, #96]
   36348:	ldr	x0, [sp, #208]
   3634c:	str	x0, [sp, #88]
   36350:	str	xzr, [sp, #80]
   36354:	b	36378 <PyInit__decimal@@Base+0x1e6a0>
   36358:	ldr	x0, [sp, #80]
   3635c:	lsl	x0, x0, #3
   36360:	ldr	x1, [sp, #96]
   36364:	add	x0, x1, x0
   36368:	str	xzr, [x0]
   3636c:	ldr	x0, [sp, #80]
   36370:	add	x0, x0, #0x1
   36374:	str	x0, [sp, #80]
   36378:	ldr	x1, [sp, #88]
   3637c:	ldr	x0, [sp, #80]
   36380:	cmp	x1, x0
   36384:	b.hi	36358 <PyInit__decimal@@Base+0x1e680>  // b.pmore
   36388:	nop
   3638c:	ldr	x0, [sp, #208]
   36390:	lsl	x0, x0, #3
   36394:	ldr	x1, [sp, #32]
   36398:	add	x0, x1, x0
   3639c:	ldr	x5, [sp, #216]
   363a0:	ldr	x4, [sp, #216]
   363a4:	mov	x3, x0
   363a8:	ldr	x2, [sp, #40]
   363ac:	ldr	x1, [sp, #48]
   363b0:	ldr	x0, [sp, #32]
   363b4:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   363b8:	cmp	w0, #0x0
   363bc:	b.ne	363c8 <PyInit__decimal@@Base+0x1e6f0>  // b.any
   363c0:	mov	w0, #0x0                   	// #0
   363c4:	b	3640c <PyInit__decimal@@Base+0x1e734>
   363c8:	ldr	x0, [sp, #216]
   363cc:	lsl	x0, x0, #1
   363d0:	mov	x2, x0
   363d4:	ldr	x1, [sp, #32]
   363d8:	ldr	x0, [sp, #56]
   363dc:	bl	19cf0 <PyInit__decimal@@Base+0x2018>
   363e0:	ldr	x0, [sp, #216]
   363e4:	lsl	x0, x0, #3
   363e8:	ldr	x1, [sp, #56]
   363ec:	add	x3, x1, x0
   363f0:	ldr	x0, [sp, #216]
   363f4:	lsl	x0, x0, #1
   363f8:	mov	x2, x0
   363fc:	ldr	x1, [sp, #32]
   36400:	mov	x0, x3
   36404:	bl	1a278 <PyInit__decimal@@Base+0x25a0>
   36408:	mov	w0, #0x1                   	// #1
   3640c:	ldp	x29, x30, [sp], #224
   36410:	ret
   36414:	stp	x29, x30, [sp, #-96]!
   36418:	mov	x29, sp
   3641c:	str	x0, [sp, #56]
   36420:	str	x1, [sp, #48]
   36424:	str	x2, [sp, #40]
   36428:	str	x3, [sp, #32]
   3642c:	str	x4, [sp, #24]
   36430:	str	xzr, [sp, #88]
   36434:	str	xzr, [sp, #80]
   36438:	ldr	x1, [sp, #32]
   3643c:	ldr	x0, [sp, #40]
   36440:	bl	35070 <PyInit__decimal@@Base+0x1d398>
   36444:	mov	x1, x0
   36448:	ldr	x0, [sp, #24]
   3644c:	str	x1, [x0]
   36450:	ldr	x0, [sp, #24]
   36454:	ldr	x0, [x0]
   36458:	mov	x1, #0x8                   	// #8
   3645c:	bl	234ec <PyInit__decimal@@Base+0xb814>
   36460:	str	x0, [sp, #88]
   36464:	ldr	x0, [sp, #88]
   36468:	cmp	x0, #0x0
   3646c:	b.ne	36478 <PyInit__decimal@@Base+0x1e7a0>  // b.any
   36470:	mov	x0, #0x0                   	// #0
   36474:	b	3652c <PyInit__decimal@@Base+0x1e854>
   36478:	mov	x1, #0x180000000           	// #6442450944
   3647c:	ldr	x0, [sp, #40]
   36480:	bl	350e0 <PyInit__decimal@@Base+0x1d408>
   36484:	str	x0, [sp, #72]
   36488:	ldr	x0, [sp, #72]
   3648c:	cmp	x0, #0x0
   36490:	b.eq	364cc <PyInit__decimal@@Base+0x1e7f4>  // b.none
   36494:	mov	x1, #0x8                   	// #8
   36498:	ldr	x0, [sp, #72]
   3649c:	bl	234ec <PyInit__decimal@@Base+0xb814>
   364a0:	str	x0, [sp, #80]
   364a4:	ldr	x0, [sp, #80]
   364a8:	cmp	x0, #0x0
   364ac:	b.ne	364cc <PyInit__decimal@@Base+0x1e7f4>  // b.any
   364b0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   364b4:	add	x0, x0, #0x6f8
   364b8:	ldr	x1, [x0]
   364bc:	ldr	x0, [sp, #88]
   364c0:	blr	x1
   364c4:	mov	x0, #0x0                   	// #0
   364c8:	b	3652c <PyInit__decimal@@Base+0x1e854>
   364cc:	ldr	x5, [sp, #32]
   364d0:	ldr	x4, [sp, #40]
   364d4:	ldr	x3, [sp, #80]
   364d8:	ldr	x2, [sp, #48]
   364dc:	ldr	x1, [sp, #56]
   364e0:	ldr	x0, [sp, #88]
   364e4:	bl	35d48 <PyInit__decimal@@Base+0x1e070>
   364e8:	cmp	w0, #0x0
   364ec:	b.ne	36508 <PyInit__decimal@@Base+0x1e830>  // b.any
   364f0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   364f4:	add	x0, x0, #0x6f8
   364f8:	ldr	x1, [x0]
   364fc:	ldr	x0, [sp, #88]
   36500:	blr	x1
   36504:	str	xzr, [sp, #88]
   36508:	ldr	x0, [sp, #80]
   3650c:	cmp	x0, #0x0
   36510:	b.eq	36528 <PyInit__decimal@@Base+0x1e850>  // b.none
   36514:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   36518:	add	x0, x0, #0x6f8
   3651c:	ldr	x1, [x0]
   36520:	ldr	x0, [sp, #80]
   36524:	blr	x1
   36528:	ldr	x0, [sp, #88]
   3652c:	ldp	x29, x30, [sp], #96
   36530:	ret
   36534:	stp	x29, x30, [sp, #-144]!
   36538:	mov	x29, sp
   3653c:	str	x0, [sp, #40]
   36540:	str	x1, [sp, #32]
   36544:	str	x2, [sp, #24]
   36548:	str	x3, [sp, #16]
   3654c:	ldr	x0, [sp, #32]
   36550:	str	x0, [sp, #136]
   36554:	ldr	x0, [sp, #136]
   36558:	ldrb	w0, [x0]
   3655c:	and	w0, w0, #0x2
   36560:	cmp	w0, #0x0
   36564:	b.eq	36630 <PyInit__decimal@@Base+0x1e958>  // b.none
   36568:	ldr	x0, [sp, #24]
   3656c:	str	x0, [sp, #128]
   36570:	ldr	x0, [sp, #128]
   36574:	str	x0, [sp, #120]
   36578:	ldr	x0, [sp, #120]
   3657c:	ldrb	w0, [x0]
   36580:	and	w0, w0, #0xe
   36584:	cmp	w0, #0x0
   36588:	b.ne	365c4 <PyInit__decimal@@Base+0x1e8ec>  // b.any
   3658c:	ldr	x0, [sp, #128]
   36590:	str	x0, [sp, #112]
   36594:	ldr	x0, [sp, #112]
   36598:	ldr	x1, [x0, #40]
   3659c:	ldr	x0, [sp, #112]
   365a0:	ldr	x0, [x0, #24]
   365a4:	lsl	x0, x0, #3
   365a8:	sub	x0, x0, #0x8
   365ac:	add	x0, x1, x0
   365b0:	ldr	x0, [x0]
   365b4:	cmp	x0, #0x0
   365b8:	b.ne	365c4 <PyInit__decimal@@Base+0x1e8ec>  // b.any
   365bc:	mov	w0, #0x1                   	// #1
   365c0:	b	365c8 <PyInit__decimal@@Base+0x1e8f0>
   365c4:	mov	w0, #0x0                   	// #0
   365c8:	cmp	w0, #0x0
   365cc:	b.eq	365e4 <PyInit__decimal@@Base+0x1e90c>  // b.none
   365d0:	ldr	x2, [sp, #16]
   365d4:	mov	w1, #0x100                 	// #256
   365d8:	ldr	x0, [sp, #40]
   365dc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   365e0:	b	366f4 <PyInit__decimal@@Base+0x1ea1c>
   365e4:	ldr	x0, [sp, #32]
   365e8:	str	x0, [sp, #96]
   365ec:	ldr	x0, [sp, #96]
   365f0:	ldrb	w0, [x0]
   365f4:	and	w0, w0, #0x1
   365f8:	and	w1, w0, #0xff
   365fc:	ldr	x0, [sp, #24]
   36600:	str	x0, [sp, #104]
   36604:	ldr	x0, [sp, #104]
   36608:	ldrb	w0, [x0]
   3660c:	and	w0, w0, #0x1
   36610:	and	w0, w0, #0xff
   36614:	eor	w0, w1, w0
   36618:	and	w0, w0, #0xff
   3661c:	mov	w2, #0x2                   	// #2
   36620:	mov	w1, w0
   36624:	ldr	x0, [sp, #40]
   36628:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3662c:	b	366f4 <PyInit__decimal@@Base+0x1ea1c>
   36630:	ldr	x0, [sp, #32]
   36634:	str	x0, [sp, #88]
   36638:	ldr	x0, [sp, #88]
   3663c:	str	x0, [sp, #80]
   36640:	ldr	x0, [sp, #80]
   36644:	ldrb	w0, [x0]
   36648:	and	w0, w0, #0xe
   3664c:	cmp	w0, #0x0
   36650:	b.ne	3668c <PyInit__decimal@@Base+0x1e9b4>  // b.any
   36654:	ldr	x0, [sp, #88]
   36658:	str	x0, [sp, #72]
   3665c:	ldr	x0, [sp, #72]
   36660:	ldr	x1, [x0, #40]
   36664:	ldr	x0, [sp, #72]
   36668:	ldr	x0, [x0, #24]
   3666c:	lsl	x0, x0, #3
   36670:	sub	x0, x0, #0x8
   36674:	add	x0, x1, x0
   36678:	ldr	x0, [x0]
   3667c:	cmp	x0, #0x0
   36680:	b.ne	3668c <PyInit__decimal@@Base+0x1e9b4>  // b.any
   36684:	mov	w0, #0x1                   	// #1
   36688:	b	36690 <PyInit__decimal@@Base+0x1e9b8>
   3668c:	mov	w0, #0x0                   	// #0
   36690:	cmp	w0, #0x0
   36694:	b.eq	366ac <PyInit__decimal@@Base+0x1e9d4>  // b.none
   36698:	ldr	x2, [sp, #16]
   3669c:	mov	w1, #0x100                 	// #256
   366a0:	ldr	x0, [sp, #40]
   366a4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   366a8:	b	366f4 <PyInit__decimal@@Base+0x1ea1c>
   366ac:	ldr	x0, [sp, #32]
   366b0:	str	x0, [sp, #56]
   366b4:	ldr	x0, [sp, #56]
   366b8:	ldrb	w0, [x0]
   366bc:	and	w0, w0, #0x1
   366c0:	and	w1, w0, #0xff
   366c4:	ldr	x0, [sp, #24]
   366c8:	str	x0, [sp, #64]
   366cc:	ldr	x0, [sp, #64]
   366d0:	ldrb	w0, [x0]
   366d4:	and	w0, w0, #0x1
   366d8:	and	w0, w0, #0xff
   366dc:	eor	w0, w1, w0
   366e0:	and	w0, w0, #0xff
   366e4:	mov	w2, #0x2                   	// #2
   366e8:	mov	w1, w0
   366ec:	ldr	x0, [sp, #40]
   366f0:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   366f4:	ldp	x29, x30, [sp], #144
   366f8:	ret
   366fc:	sub	sp, sp, #0x300
   36700:	stp	x29, x30, [sp]
   36704:	mov	x29, sp
   36708:	str	x0, [sp, #56]
   3670c:	str	x1, [sp, #48]
   36710:	str	x2, [sp, #40]
   36714:	str	x3, [sp, #32]
   36718:	str	x4, [sp, #24]
   3671c:	ldr	x0, [sp, #48]
   36720:	str	x0, [sp, #592]
   36724:	ldr	x0, [sp, #40]
   36728:	str	x0, [sp, #584]
   3672c:	str	xzr, [sp, #760]
   36730:	ldr	x0, [sp, #48]
   36734:	str	x0, [sp, #744]
   36738:	ldr	x0, [sp, #744]
   3673c:	ldrb	w0, [x0]
   36740:	and	w0, w0, #0xe
   36744:	cmp	w0, #0x0
   36748:	b.ne	36768 <PyInit__decimal@@Base+0x1ea90>  // b.any
   3674c:	ldr	x0, [sp, #40]
   36750:	str	x0, [sp, #736]
   36754:	ldr	x0, [sp, #736]
   36758:	ldrb	w0, [x0]
   3675c:	and	w0, w0, #0xe
   36760:	cmp	w0, #0x0
   36764:	b.eq	367a0 <PyInit__decimal@@Base+0x1eac8>  // b.none
   36768:	ldr	x4, [sp, #24]
   3676c:	ldr	x3, [sp, #32]
   36770:	ldr	x2, [sp, #40]
   36774:	ldr	x1, [sp, #48]
   36778:	ldr	x0, [sp, #56]
   3677c:	bl	2861c <PyInit__decimal@@Base+0x10944>
   36780:	cmp	w0, #0x0
   36784:	b.ne	36db8 <PyInit__decimal@@Base+0x1f0e0>  // b.any
   36788:	ldr	x3, [sp, #24]
   3678c:	ldr	x2, [sp, #40]
   36790:	ldr	x1, [sp, #48]
   36794:	ldr	x0, [sp, #56]
   36798:	bl	36534 <PyInit__decimal@@Base+0x1e85c>
   3679c:	b	36dc4 <PyInit__decimal@@Base+0x1f0ec>
   367a0:	ldr	x0, [sp, #584]
   367a4:	ldr	x1, [x0, #24]
   367a8:	ldr	x0, [sp, #592]
   367ac:	ldr	x0, [x0, #24]
   367b0:	cmp	x1, x0
   367b4:	b.le	367c4 <PyInit__decimal@@Base+0x1eaec>
   367b8:	add	x1, sp, #0x248
   367bc:	add	x0, sp, #0x250
   367c0:	bl	2ea98 <PyInit__decimal@@Base+0x16dc0>
   367c4:	ldr	x0, [sp, #592]
   367c8:	ldr	x1, [x0, #24]
   367cc:	ldr	x0, [sp, #584]
   367d0:	ldr	x0, [x0, #24]
   367d4:	add	x0, x1, x0
   367d8:	str	x0, [sp, #64]
   367dc:	ldr	x0, [sp, #592]
   367e0:	ldr	x0, [x0, #24]
   367e4:	cmp	x0, #0x1
   367e8:	b.ne	3681c <PyInit__decimal@@Base+0x1eb44>  // b.any
   367ec:	ldr	x0, [sp, #56]
   367f0:	ldr	x3, [x0, #40]
   367f4:	ldr	x0, [sp, #592]
   367f8:	ldr	x0, [x0, #40]
   367fc:	ldr	x1, [x0]
   36800:	ldr	x0, [sp, #584]
   36804:	ldr	x0, [x0, #40]
   36808:	ldr	x0, [x0]
   3680c:	mov	x2, x0
   36810:	mov	x0, x3
   36814:	bl	245d0 <PyInit__decimal@@Base+0xc8f8>
   36818:	b	36c40 <PyInit__decimal@@Base+0x1ef68>
   3681c:	ldr	x0, [sp, #64]
   36820:	cmp	x0, #0x40
   36824:	b.hi	36a28 <PyInit__decimal@@Base+0x1ed50>  // b.pmore
   36828:	ldr	x0, [sp, #592]
   3682c:	ldr	x0, [x0, #24]
   36830:	cmp	x0, #0x2
   36834:	b.ne	3685c <PyInit__decimal@@Base+0x1eb84>  // b.any
   36838:	ldr	x0, [sp, #592]
   3683c:	ldr	x1, [x0, #40]
   36840:	ldr	x0, [sp, #584]
   36844:	ldr	x2, [x0, #40]
   36848:	ldr	x0, [sp, #584]
   3684c:	ldr	x3, [x0, #24]
   36850:	add	x0, sp, #0x48
   36854:	bl	24624 <PyInit__decimal@@Base+0xc94c>
   36858:	b	3691c <PyInit__decimal@@Base+0x1ec44>
   3685c:	ldr	x0, [sp, #64]
   36860:	add	x1, sp, #0x48
   36864:	str	x1, [sp, #728]
   36868:	str	x0, [sp, #720]
   3686c:	str	xzr, [sp, #712]
   36870:	b	36894 <PyInit__decimal@@Base+0x1ebbc>
   36874:	ldr	x0, [sp, #712]
   36878:	lsl	x0, x0, #3
   3687c:	ldr	x1, [sp, #728]
   36880:	add	x0, x1, x0
   36884:	str	xzr, [x0]
   36888:	ldr	x0, [sp, #712]
   3688c:	add	x0, x0, #0x1
   36890:	str	x0, [sp, #712]
   36894:	ldr	x1, [sp, #720]
   36898:	ldr	x0, [sp, #712]
   3689c:	cmp	x1, x0
   368a0:	b.hi	36874 <PyInit__decimal@@Base+0x1eb9c>  // b.pmore
   368a4:	nop
   368a8:	ldr	x0, [sp, #584]
   368ac:	ldr	x0, [x0, #24]
   368b0:	cmp	x0, #0x1
   368b4:	b.ne	368ec <PyInit__decimal@@Base+0x1ec14>  // b.any
   368b8:	ldr	x0, [sp, #592]
   368bc:	ldr	x1, [x0, #40]
   368c0:	ldr	x0, [sp, #592]
   368c4:	ldr	x0, [x0, #24]
   368c8:	mov	x4, x0
   368cc:	ldr	x0, [sp, #584]
   368d0:	ldr	x0, [x0, #40]
   368d4:	ldr	x2, [x0]
   368d8:	add	x0, sp, #0x48
   368dc:	mov	x3, x2
   368e0:	mov	x2, x4
   368e4:	bl	1a404 <PyInit__decimal@@Base+0x272c>
   368e8:	b	3691c <PyInit__decimal@@Base+0x1ec44>
   368ec:	ldr	x0, [sp, #584]
   368f0:	ldr	x1, [x0, #40]
   368f4:	ldr	x0, [sp, #592]
   368f8:	ldr	x2, [x0, #40]
   368fc:	ldr	x0, [sp, #584]
   36900:	ldr	x0, [x0, #24]
   36904:	mov	x3, x0
   36908:	ldr	x0, [sp, #592]
   3690c:	ldr	x0, [x0, #24]
   36910:	mov	x4, x0
   36914:	add	x0, sp, #0x48
   36918:	bl	1a4d8 <PyInit__decimal@@Base+0x2800>
   3691c:	ldr	x0, [sp, #64]
   36920:	mov	x1, x0
   36924:	ldr	x0, [sp, #56]
   36928:	str	x0, [sp, #704]
   3692c:	str	x1, [sp, #696]
   36930:	ldr	x0, [sp, #24]
   36934:	str	x0, [sp, #688]
   36938:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3693c:	add	x0, x0, #0x6d8
   36940:	ldr	x0, [x0]
   36944:	ldr	x2, [sp, #696]
   36948:	ldr	x1, [sp, #696]
   3694c:	cmp	x2, x0
   36950:	csel	x0, x1, x0, ge  // ge = tcont
   36954:	str	x0, [sp, #696]
   36958:	ldr	x0, [sp, #704]
   3695c:	ldr	x0, [x0, #32]
   36960:	ldr	x1, [sp, #696]
   36964:	cmp	x1, x0
   36968:	b.ne	36974 <PyInit__decimal@@Base+0x1ec9c>  // b.any
   3696c:	mov	w0, #0x1                   	// #1
   36970:	b	369d0 <PyInit__decimal@@Base+0x1ecf8>
   36974:	ldr	x0, [sp, #704]
   36978:	str	x0, [sp, #680]
   3697c:	ldr	x0, [sp, #680]
   36980:	ldrb	w0, [x0]
   36984:	and	w0, w0, #0x20
   36988:	cmp	w0, #0x0
   3698c:	b.eq	369c0 <PyInit__decimal@@Base+0x1ece8>  // b.none
   36990:	ldr	x0, [sp, #704]
   36994:	ldr	x0, [x0, #32]
   36998:	ldr	x1, [sp, #696]
   3699c:	cmp	x1, x0
   369a0:	b.le	369b8 <PyInit__decimal@@Base+0x1ece0>
   369a4:	ldr	x2, [sp, #688]
   369a8:	ldr	x1, [sp, #696]
   369ac:	ldr	x0, [sp, #704]
   369b0:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   369b4:	b	369d0 <PyInit__decimal@@Base+0x1ecf8>
   369b8:	mov	w0, #0x1                   	// #1
   369bc:	b	369d0 <PyInit__decimal@@Base+0x1ecf8>
   369c0:	ldr	x2, [sp, #688]
   369c4:	ldr	x1, [sp, #696]
   369c8:	ldr	x0, [sp, #704]
   369cc:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   369d0:	cmp	w0, #0x0
   369d4:	b.eq	36dc0 <PyInit__decimal@@Base+0x1f0e8>  // b.none
   369d8:	str	xzr, [sp, #752]
   369dc:	b	36a14 <PyInit__decimal@@Base+0x1ed3c>
   369e0:	ldr	x0, [sp, #56]
   369e4:	ldr	x1, [x0, #40]
   369e8:	ldr	x0, [sp, #752]
   369ec:	lsl	x0, x0, #3
   369f0:	add	x0, x1, x0
   369f4:	ldr	x1, [sp, #752]
   369f8:	lsl	x1, x1, #3
   369fc:	add	x2, sp, #0x48
   36a00:	ldr	x1, [x2, x1]
   36a04:	str	x1, [x0]
   36a08:	ldr	x0, [sp, #752]
   36a0c:	add	x0, x0, #0x1
   36a10:	str	x0, [sp, #752]
   36a14:	ldr	x0, [sp, #64]
   36a18:	ldr	x1, [sp, #752]
   36a1c:	cmp	x1, x0
   36a20:	b.cc	369e0 <PyInit__decimal@@Base+0x1ed08>  // b.lo, b.ul, b.last
   36a24:	b	36c40 <PyInit__decimal@@Base+0x1ef68>
   36a28:	ldr	x0, [sp, #584]
   36a2c:	ldr	x0, [x0, #24]
   36a30:	cmp	x0, #0x100
   36a34:	b.gt	36ac8 <PyInit__decimal@@Base+0x1edf0>
   36a38:	ldr	x0, [sp, #64]
   36a3c:	mov	x1, #0x8                   	// #8
   36a40:	bl	234ec <PyInit__decimal@@Base+0xb814>
   36a44:	str	x0, [sp, #760]
   36a48:	ldr	x0, [sp, #760]
   36a4c:	cmp	x0, #0x0
   36a50:	b.eq	36ba0 <PyInit__decimal@@Base+0x1eec8>  // b.none
   36a54:	ldr	x0, [sp, #584]
   36a58:	ldr	x0, [x0, #24]
   36a5c:	cmp	x0, #0x1
   36a60:	b.ne	36a94 <PyInit__decimal@@Base+0x1edbc>  // b.any
   36a64:	ldr	x0, [sp, #592]
   36a68:	ldr	x1, [x0, #40]
   36a6c:	ldr	x0, [sp, #592]
   36a70:	ldr	x0, [x0, #24]
   36a74:	mov	x2, x0
   36a78:	ldr	x0, [sp, #584]
   36a7c:	ldr	x0, [x0, #40]
   36a80:	ldr	x0, [x0]
   36a84:	mov	x3, x0
   36a88:	ldr	x0, [sp, #760]
   36a8c:	bl	1a404 <PyInit__decimal@@Base+0x272c>
   36a90:	b	36ba0 <PyInit__decimal@@Base+0x1eec8>
   36a94:	ldr	x0, [sp, #584]
   36a98:	ldr	x1, [x0, #40]
   36a9c:	ldr	x0, [sp, #592]
   36aa0:	ldr	x2, [x0, #40]
   36aa4:	ldr	x0, [sp, #584]
   36aa8:	ldr	x0, [x0, #24]
   36aac:	mov	x3, x0
   36ab0:	ldr	x0, [sp, #592]
   36ab4:	ldr	x0, [x0, #24]
   36ab8:	mov	x4, x0
   36abc:	ldr	x0, [sp, #760]
   36ac0:	bl	1a4d8 <PyInit__decimal@@Base+0x2800>
   36ac4:	b	36ba0 <PyInit__decimal@@Base+0x1eec8>
   36ac8:	ldr	x0, [sp, #64]
   36acc:	cmp	x0, #0x400
   36ad0:	b.hi	36b14 <PyInit__decimal@@Base+0x1ee3c>  // b.pmore
   36ad4:	ldr	x0, [sp, #592]
   36ad8:	ldr	x5, [x0, #40]
   36adc:	ldr	x0, [sp, #584]
   36ae0:	ldr	x1, [x0, #40]
   36ae4:	ldr	x0, [sp, #592]
   36ae8:	ldr	x0, [x0, #24]
   36aec:	mov	x2, x0
   36af0:	ldr	x0, [sp, #584]
   36af4:	ldr	x0, [x0, #24]
   36af8:	mov	x3, x0
   36afc:	add	x0, sp, #0x40
   36b00:	mov	x4, x0
   36b04:	mov	x0, x5
   36b08:	bl	35740 <PyInit__decimal@@Base+0x1da68>
   36b0c:	str	x0, [sp, #760]
   36b10:	b	36ba0 <PyInit__decimal@@Base+0x1eec8>
   36b14:	ldr	x1, [sp, #64]
   36b18:	mov	x0, #0x300000000           	// #12884901888
   36b1c:	cmp	x1, x0
   36b20:	b.hi	36b64 <PyInit__decimal@@Base+0x1ee8c>  // b.pmore
   36b24:	ldr	x0, [sp, #592]
   36b28:	ldr	x5, [x0, #40]
   36b2c:	ldr	x0, [sp, #584]
   36b30:	ldr	x1, [x0, #40]
   36b34:	ldr	x0, [sp, #592]
   36b38:	ldr	x0, [x0, #24]
   36b3c:	mov	x2, x0
   36b40:	ldr	x0, [sp, #584]
   36b44:	ldr	x0, [x0, #24]
   36b48:	mov	x3, x0
   36b4c:	add	x0, sp, #0x40
   36b50:	mov	x4, x0
   36b54:	mov	x0, x5
   36b58:	bl	3595c <PyInit__decimal@@Base+0x1dc84>
   36b5c:	str	x0, [sp, #760]
   36b60:	b	36ba0 <PyInit__decimal@@Base+0x1eec8>
   36b64:	ldr	x0, [sp, #592]
   36b68:	ldr	x5, [x0, #40]
   36b6c:	ldr	x0, [sp, #584]
   36b70:	ldr	x1, [x0, #40]
   36b74:	ldr	x0, [sp, #592]
   36b78:	ldr	x0, [x0, #24]
   36b7c:	mov	x2, x0
   36b80:	ldr	x0, [sp, #584]
   36b84:	ldr	x0, [x0, #24]
   36b88:	mov	x3, x0
   36b8c:	add	x0, sp, #0x40
   36b90:	mov	x4, x0
   36b94:	mov	x0, x5
   36b98:	bl	36414 <PyInit__decimal@@Base+0x1e73c>
   36b9c:	str	x0, [sp, #760]
   36ba0:	ldr	x0, [sp, #760]
   36ba4:	cmp	x0, #0x0
   36ba8:	b.ne	36bc0 <PyInit__decimal@@Base+0x1eee8>  // b.any
   36bac:	ldr	x2, [sp, #24]
   36bb0:	mov	w1, #0x200                 	// #512
   36bb4:	ldr	x0, [sp, #56]
   36bb8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   36bbc:	b	36dc4 <PyInit__decimal@@Base+0x1f0ec>
   36bc0:	ldr	x0, [sp, #56]
   36bc4:	str	x0, [sp, #672]
   36bc8:	ldr	x0, [sp, #672]
   36bcc:	ldrb	w0, [x0]
   36bd0:	and	w0, w0, #0xe0
   36bd4:	cmp	w0, #0x0
   36bd8:	cset	w0, eq  // eq = none
   36bdc:	and	w0, w0, #0xff
   36be0:	cmp	w0, #0x0
   36be4:	b.eq	36c00 <PyInit__decimal@@Base+0x1ef28>  // b.none
   36be8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   36bec:	add	x0, x0, #0x6f8
   36bf0:	ldr	x1, [x0]
   36bf4:	ldr	x0, [sp, #56]
   36bf8:	ldr	x0, [x0, #40]
   36bfc:	blr	x1
   36c00:	ldr	x0, [sp, #56]
   36c04:	ldr	x1, [sp, #760]
   36c08:	str	x1, [x0, #40]
   36c0c:	ldr	x0, [sp, #64]
   36c10:	mov	x1, x0
   36c14:	ldr	x0, [sp, #56]
   36c18:	str	x1, [x0, #32]
   36c1c:	ldr	x0, [sp, #56]
   36c20:	str	x0, [sp, #664]
   36c24:	ldr	x0, [sp, #664]
   36c28:	ldrb	w0, [x0]
   36c2c:	and	w0, w0, #0x1f
   36c30:	and	w1, w0, #0xff
   36c34:	ldr	x0, [sp, #664]
   36c38:	strb	w1, [x0]
   36c3c:	nop
   36c40:	ldr	x0, [sp, #48]
   36c44:	str	x0, [sp, #600]
   36c48:	ldr	x0, [sp, #600]
   36c4c:	ldrb	w0, [x0]
   36c50:	and	w0, w0, #0x1
   36c54:	and	w1, w0, #0xff
   36c58:	ldr	x0, [sp, #40]
   36c5c:	str	x0, [sp, #608]
   36c60:	ldr	x0, [sp, #608]
   36c64:	ldrb	w0, [x0]
   36c68:	and	w0, w0, #0x1
   36c6c:	and	w0, w0, #0xff
   36c70:	eor	w0, w1, w0
   36c74:	and	w1, w0, #0xff
   36c78:	ldr	x0, [sp, #56]
   36c7c:	str	x0, [sp, #624]
   36c80:	mov	w0, w1
   36c84:	strb	w0, [sp, #623]
   36c88:	ldr	x0, [sp, #624]
   36c8c:	ldrb	w0, [x0]
   36c90:	and	w0, w0, #0xfffffff0
   36c94:	and	w1, w0, #0xff
   36c98:	ldr	x0, [sp, #624]
   36c9c:	strb	w1, [x0]
   36ca0:	ldr	x0, [sp, #624]
   36ca4:	ldrb	w1, [x0]
   36ca8:	ldrb	w0, [sp, #623]
   36cac:	orr	w0, w1, w0
   36cb0:	and	w1, w0, #0xff
   36cb4:	ldr	x0, [sp, #624]
   36cb8:	strb	w1, [x0]
   36cbc:	nop
   36cc0:	ldr	x0, [sp, #592]
   36cc4:	ldr	x1, [x0, #8]
   36cc8:	ldr	x0, [sp, #584]
   36ccc:	ldr	x0, [x0, #8]
   36cd0:	add	x1, x1, x0
   36cd4:	ldr	x0, [sp, #56]
   36cd8:	str	x1, [x0, #8]
   36cdc:	ldr	x0, [sp, #56]
   36ce0:	ldr	x0, [x0, #40]
   36ce4:	ldr	x1, [sp, #64]
   36ce8:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   36cec:	mov	x1, x0
   36cf0:	ldr	x0, [sp, #56]
   36cf4:	str	x1, [x0, #24]
   36cf8:	ldr	x0, [sp, #56]
   36cfc:	ldr	x0, [x0, #24]
   36d00:	ldr	x1, [sp, #56]
   36d04:	str	x1, [sp, #656]
   36d08:	str	x0, [sp, #648]
   36d0c:	ldr	x0, [sp, #24]
   36d10:	str	x0, [sp, #640]
   36d14:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   36d18:	add	x0, x0, #0x6d8
   36d1c:	ldr	x0, [x0]
   36d20:	ldr	x2, [sp, #648]
   36d24:	ldr	x1, [sp, #648]
   36d28:	cmp	x2, x0
   36d2c:	csel	x0, x1, x0, ge  // ge = tcont
   36d30:	str	x0, [sp, #648]
   36d34:	ldr	x0, [sp, #656]
   36d38:	ldr	x0, [x0, #32]
   36d3c:	ldr	x1, [sp, #648]
   36d40:	cmp	x1, x0
   36d44:	b.eq	36da0 <PyInit__decimal@@Base+0x1f0c8>  // b.none
   36d48:	ldr	x0, [sp, #656]
   36d4c:	str	x0, [sp, #632]
   36d50:	ldr	x0, [sp, #632]
   36d54:	ldrb	w0, [x0]
   36d58:	and	w0, w0, #0x20
   36d5c:	cmp	w0, #0x0
   36d60:	b.eq	36d8c <PyInit__decimal@@Base+0x1f0b4>  // b.none
   36d64:	ldr	x0, [sp, #656]
   36d68:	ldr	x0, [x0, #32]
   36d6c:	ldr	x1, [sp, #648]
   36d70:	cmp	x1, x0
   36d74:	b.le	36da8 <PyInit__decimal@@Base+0x1f0d0>
   36d78:	ldr	x2, [sp, #640]
   36d7c:	ldr	x1, [sp, #648]
   36d80:	ldr	x0, [sp, #656]
   36d84:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   36d88:	b	36dac <PyInit__decimal@@Base+0x1f0d4>
   36d8c:	ldr	x2, [sp, #640]
   36d90:	ldr	x1, [sp, #648]
   36d94:	ldr	x0, [sp, #656]
   36d98:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   36d9c:	b	36dac <PyInit__decimal@@Base+0x1f0d4>
   36da0:	nop
   36da4:	b	36dac <PyInit__decimal@@Base+0x1f0d4>
   36da8:	nop
   36dac:	ldr	x0, [sp, #56]
   36db0:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   36db4:	b	36dc4 <PyInit__decimal@@Base+0x1f0ec>
   36db8:	nop
   36dbc:	b	36dc4 <PyInit__decimal@@Base+0x1f0ec>
   36dc0:	nop
   36dc4:	ldp	x29, x30, [sp]
   36dc8:	add	sp, sp, #0x300
   36dcc:	ret
   36dd0:	stp	x29, x30, [sp, #-64]!
   36dd4:	mov	x29, sp
   36dd8:	str	x0, [sp, #56]
   36ddc:	str	x1, [sp, #48]
   36de0:	str	x2, [sp, #40]
   36de4:	str	x3, [sp, #32]
   36de8:	str	x4, [sp, #24]
   36dec:	ldr	x4, [sp, #24]
   36df0:	ldr	x3, [sp, #32]
   36df4:	ldr	x2, [sp, #40]
   36df8:	ldr	x1, [sp, #48]
   36dfc:	ldr	x0, [sp, #56]
   36e00:	bl	366fc <PyInit__decimal@@Base+0x1ea24>
   36e04:	ldr	x2, [sp, #24]
   36e08:	ldr	x1, [sp, #32]
   36e0c:	ldr	x0, [sp, #56]
   36e10:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   36e14:	nop
   36e18:	ldp	x29, x30, [sp], #64
   36e1c:	ret
   36e20:	stp	x29, x30, [sp, #-80]!
   36e24:	mov	x29, sp
   36e28:	str	x0, [sp, #56]
   36e2c:	str	x1, [sp, #48]
   36e30:	str	x2, [sp, #40]
   36e34:	str	x3, [sp, #32]
   36e38:	str	x4, [sp, #24]
   36e3c:	str	wzr, [sp, #76]
   36e40:	add	x0, sp, #0x4c
   36e44:	mov	x4, x0
   36e48:	ldr	x3, [sp, #32]
   36e4c:	ldr	x2, [sp, #40]
   36e50:	ldr	x1, [sp, #48]
   36e54:	ldr	x0, [sp, #56]
   36e58:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   36e5c:	ldr	x0, [sp, #24]
   36e60:	ldr	w1, [x0]
   36e64:	ldr	w0, [sp, #76]
   36e68:	orr	w1, w1, w0
   36e6c:	ldr	x0, [sp, #24]
   36e70:	str	w1, [x0]
   36e74:	ldr	w1, [sp, #76]
   36e78:	mov	w0, #0x1041                	// #4161
   36e7c:	and	w0, w1, w0
   36e80:	cmp	w0, #0x0
   36e84:	b.eq	36e98 <PyInit__decimal@@Base+0x1f1c0>  // b.none
   36e88:	ldr	x2, [sp, #24]
   36e8c:	mov	w1, #0x100                 	// #256
   36e90:	ldr	x0, [sp, #56]
   36e94:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   36e98:	nop
   36e9c:	ldp	x29, x30, [sp], #80
   36ea0:	ret
   36ea4:	sub	sp, sp, #0x2c0
   36ea8:	stp	x29, x30, [sp]
   36eac:	mov	x29, sp
   36eb0:	str	x0, [sp, #56]
   36eb4:	str	x1, [sp, #48]
   36eb8:	str	x2, [sp, #40]
   36ebc:	str	x3, [sp, #32]
   36ec0:	str	x4, [sp, #24]
   36ec4:	mov	w0, #0x30                  	// #48
   36ec8:	strb	w0, [sp, #72]
   36ecc:	str	xzr, [sp, #80]
   36ed0:	str	xzr, [sp, #88]
   36ed4:	str	xzr, [sp, #96]
   36ed8:	mov	x0, #0x40                  	// #64
   36edc:	str	x0, [sp, #104]
   36ee0:	add	x0, sp, #0x78
   36ee4:	str	x0, [sp, #112]
   36ee8:	add	x0, sp, #0x278
   36eec:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   36ef0:	add	x1, sp, #0x278
   36ef4:	add	x0, sp, #0x48
   36ef8:	ldr	x3, [sp, #24]
   36efc:	mov	x2, x1
   36f00:	ldr	x1, [sp, #40]
   36f04:	bl	27cc8 <PyInit__decimal@@Base+0xfff0>
   36f08:	add	x0, sp, #0x48
   36f0c:	ldr	x4, [sp, #24]
   36f10:	ldr	x3, [sp, #32]
   36f14:	mov	x2, x0
   36f18:	ldr	x1, [sp, #48]
   36f1c:	ldr	x0, [sp, #56]
   36f20:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   36f24:	add	x0, sp, #0x48
   36f28:	str	x0, [sp, #696]
   36f2c:	ldr	x0, [sp, #696]
   36f30:	str	x0, [sp, #688]
   36f34:	ldr	x0, [sp, #688]
   36f38:	ldrb	w0, [x0]
   36f3c:	and	w0, w0, #0xe0
   36f40:	cmp	w0, #0x0
   36f44:	cset	w0, eq  // eq = none
   36f48:	and	w0, w0, #0xff
   36f4c:	cmp	w0, #0x0
   36f50:	b.eq	36f6c <PyInit__decimal@@Base+0x1f294>  // b.none
   36f54:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   36f58:	add	x0, x0, #0x6f8
   36f5c:	ldr	x1, [x0]
   36f60:	ldr	x0, [sp, #696]
   36f64:	ldr	x0, [x0, #40]
   36f68:	blr	x1
   36f6c:	ldr	x0, [sp, #696]
   36f70:	str	x0, [sp, #680]
   36f74:	ldr	x0, [sp, #680]
   36f78:	ldrb	w0, [x0]
   36f7c:	and	w0, w0, #0x10
   36f80:	cmp	w0, #0x0
   36f84:	cset	w0, eq  // eq = none
   36f88:	and	w0, w0, #0xff
   36f8c:	cmp	w0, #0x0
   36f90:	b.eq	36fa8 <PyInit__decimal@@Base+0x1f2d0>  // b.none
   36f94:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   36f98:	add	x0, x0, #0x6f8
   36f9c:	ldr	x1, [x0]
   36fa0:	ldr	x0, [sp, #696]
   36fa4:	blr	x1
   36fa8:	nop
   36fac:	nop
   36fb0:	ldp	x29, x30, [sp]
   36fb4:	add	sp, sp, #0x2c0
   36fb8:	ret
   36fbc:	sub	sp, sp, #0x2c0
   36fc0:	stp	x29, x30, [sp]
   36fc4:	mov	x29, sp
   36fc8:	str	x0, [sp, #56]
   36fcc:	str	x1, [sp, #48]
   36fd0:	str	x2, [sp, #40]
   36fd4:	str	x3, [sp, #32]
   36fd8:	str	x4, [sp, #24]
   36fdc:	mov	w0, #0x30                  	// #48
   36fe0:	strb	w0, [sp, #72]
   36fe4:	str	xzr, [sp, #80]
   36fe8:	str	xzr, [sp, #88]
   36fec:	str	xzr, [sp, #96]
   36ff0:	mov	x0, #0x40                  	// #64
   36ff4:	str	x0, [sp, #104]
   36ff8:	add	x0, sp, #0x78
   36ffc:	str	x0, [sp, #112]
   37000:	add	x0, sp, #0x278
   37004:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   37008:	add	x1, sp, #0x278
   3700c:	add	x0, sp, #0x48
   37010:	ldr	x3, [sp, #24]
   37014:	mov	x2, x1
   37018:	ldr	x1, [sp, #40]
   3701c:	bl	27d5c <PyInit__decimal@@Base+0x10084>
   37020:	add	x0, sp, #0x48
   37024:	ldr	x4, [sp, #24]
   37028:	ldr	x3, [sp, #32]
   3702c:	mov	x2, x0
   37030:	ldr	x1, [sp, #48]
   37034:	ldr	x0, [sp, #56]
   37038:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3703c:	add	x0, sp, #0x48
   37040:	str	x0, [sp, #696]
   37044:	ldr	x0, [sp, #696]
   37048:	str	x0, [sp, #688]
   3704c:	ldr	x0, [sp, #688]
   37050:	ldrb	w0, [x0]
   37054:	and	w0, w0, #0xe0
   37058:	cmp	w0, #0x0
   3705c:	cset	w0, eq  // eq = none
   37060:	and	w0, w0, #0xff
   37064:	cmp	w0, #0x0
   37068:	b.eq	37084 <PyInit__decimal@@Base+0x1f3ac>  // b.none
   3706c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   37070:	add	x0, x0, #0x6f8
   37074:	ldr	x1, [x0]
   37078:	ldr	x0, [sp, #696]
   3707c:	ldr	x0, [x0, #40]
   37080:	blr	x1
   37084:	ldr	x0, [sp, #696]
   37088:	str	x0, [sp, #680]
   3708c:	ldr	x0, [sp, #680]
   37090:	ldrb	w0, [x0]
   37094:	and	w0, w0, #0x10
   37098:	cmp	w0, #0x0
   3709c:	cset	w0, eq  // eq = none
   370a0:	and	w0, w0, #0xff
   370a4:	cmp	w0, #0x0
   370a8:	b.eq	370c0 <PyInit__decimal@@Base+0x1f3e8>  // b.none
   370ac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   370b0:	add	x0, x0, #0x6f8
   370b4:	ldr	x1, [x0]
   370b8:	ldr	x0, [sp, #696]
   370bc:	blr	x1
   370c0:	nop
   370c4:	nop
   370c8:	ldp	x29, x30, [sp]
   370cc:	add	sp, sp, #0x2c0
   370d0:	ret
   370d4:	stp	x29, x30, [sp, #-64]!
   370d8:	mov	x29, sp
   370dc:	str	x0, [sp, #56]
   370e0:	str	x1, [sp, #48]
   370e4:	str	w2, [sp, #44]
   370e8:	str	x3, [sp, #32]
   370ec:	str	x4, [sp, #24]
   370f0:	ldrsw	x0, [sp, #44]
   370f4:	ldr	x4, [sp, #24]
   370f8:	ldr	x3, [sp, #32]
   370fc:	mov	x2, x0
   37100:	ldr	x1, [sp, #48]
   37104:	ldr	x0, [sp, #56]
   37108:	bl	36ea4 <PyInit__decimal@@Base+0x1f1cc>
   3710c:	nop
   37110:	ldp	x29, x30, [sp], #64
   37114:	ret
   37118:	stp	x29, x30, [sp, #-64]!
   3711c:	mov	x29, sp
   37120:	str	x0, [sp, #56]
   37124:	str	x1, [sp, #48]
   37128:	str	w2, [sp, #44]
   3712c:	str	x3, [sp, #32]
   37130:	str	x4, [sp, #24]
   37134:	ldr	w0, [sp, #44]
   37138:	ldr	x4, [sp, #24]
   3713c:	ldr	x3, [sp, #32]
   37140:	mov	x2, x0
   37144:	ldr	x1, [sp, #48]
   37148:	ldr	x0, [sp, #56]
   3714c:	bl	36fbc <PyInit__decimal@@Base+0x1f2e4>
   37150:	nop
   37154:	ldp	x29, x30, [sp], #64
   37158:	ret
   3715c:	stp	x29, x30, [sp, #-64]!
   37160:	mov	x29, sp
   37164:	str	x0, [sp, #56]
   37168:	str	x1, [sp, #48]
   3716c:	str	x2, [sp, #40]
   37170:	str	x3, [sp, #32]
   37174:	str	x4, [sp, #24]
   37178:	ldr	x4, [sp, #24]
   3717c:	ldr	x3, [sp, #32]
   37180:	ldr	x2, [sp, #40]
   37184:	ldr	x1, [sp, #48]
   37188:	ldr	x0, [sp, #56]
   3718c:	bl	36ea4 <PyInit__decimal@@Base+0x1f1cc>
   37190:	nop
   37194:	ldp	x29, x30, [sp], #64
   37198:	ret
   3719c:	stp	x29, x30, [sp, #-64]!
   371a0:	mov	x29, sp
   371a4:	str	x0, [sp, #56]
   371a8:	str	x1, [sp, #48]
   371ac:	str	x2, [sp, #40]
   371b0:	str	x3, [sp, #32]
   371b4:	str	x4, [sp, #24]
   371b8:	ldr	x4, [sp, #24]
   371bc:	ldr	x3, [sp, #32]
   371c0:	ldr	x2, [sp, #40]
   371c4:	ldr	x1, [sp, #48]
   371c8:	ldr	x0, [sp, #56]
   371cc:	bl	36fbc <PyInit__decimal@@Base+0x1f2e4>
   371d0:	nop
   371d4:	ldp	x29, x30, [sp], #64
   371d8:	ret
   371dc:	stp	x29, x30, [sp, #-80]!
   371e0:	mov	x29, sp
   371e4:	str	x0, [sp, #40]
   371e8:	str	x1, [sp, #32]
   371ec:	str	x2, [sp, #24]
   371f0:	str	x3, [sp, #16]
   371f4:	ldr	x0, [sp, #32]
   371f8:	str	x0, [sp, #72]
   371fc:	ldr	x0, [sp, #72]
   37200:	ldrb	w0, [x0]
   37204:	and	w0, w0, #0xe
   37208:	cmp	w0, #0x0
   3720c:	b.eq	3722c <PyInit__decimal@@Base+0x1f554>  // b.none
   37210:	ldr	x3, [sp, #16]
   37214:	ldr	x2, [sp, #24]
   37218:	ldr	x1, [sp, #32]
   3721c:	ldr	x0, [sp, #40]
   37220:	bl	28540 <PyInit__decimal@@Base+0x10868>
   37224:	cmp	w0, #0x0
   37228:	b.ne	372dc <PyInit__decimal@@Base+0x1f604>  // b.any
   3722c:	ldr	x0, [sp, #32]
   37230:	str	x0, [sp, #64]
   37234:	ldr	x0, [sp, #64]
   37238:	str	x0, [sp, #56]
   3723c:	ldr	x0, [sp, #56]
   37240:	ldrb	w0, [x0]
   37244:	and	w0, w0, #0xe
   37248:	cmp	w0, #0x0
   3724c:	b.ne	37288 <PyInit__decimal@@Base+0x1f5b0>  // b.any
   37250:	ldr	x0, [sp, #64]
   37254:	str	x0, [sp, #48]
   37258:	ldr	x0, [sp, #48]
   3725c:	ldr	x1, [x0, #40]
   37260:	ldr	x0, [sp, #48]
   37264:	ldr	x0, [x0, #24]
   37268:	lsl	x0, x0, #3
   3726c:	sub	x0, x0, #0x8
   37270:	add	x0, x1, x0
   37274:	ldr	x0, [x0]
   37278:	cmp	x0, #0x0
   3727c:	b.ne	37288 <PyInit__decimal@@Base+0x1f5b0>  // b.any
   37280:	mov	w0, #0x1                   	// #1
   37284:	b	3728c <PyInit__decimal@@Base+0x1f5b4>
   37288:	mov	w0, #0x0                   	// #0
   3728c:	cmp	w0, #0x0
   37290:	b.eq	372b8 <PyInit__decimal@@Base+0x1f5e0>  // b.none
   37294:	ldr	x0, [sp, #24]
   37298:	ldr	w0, [x0, #36]
   3729c:	cmp	w0, #0x3
   372a0:	b.eq	372b8 <PyInit__decimal@@Base+0x1f5e0>  // b.none
   372a4:	ldr	x2, [sp, #16]
   372a8:	ldr	x1, [sp, #32]
   372ac:	ldr	x0, [sp, #40]
   372b0:	bl	29bdc <PyInit__decimal@@Base+0x11f04>
   372b4:	b	372c8 <PyInit__decimal@@Base+0x1f5f0>
   372b8:	ldr	x2, [sp, #16]
   372bc:	ldr	x1, [sp, #32]
   372c0:	ldr	x0, [sp, #40]
   372c4:	bl	29c40 <PyInit__decimal@@Base+0x11f68>
   372c8:	ldr	x2, [sp, #16]
   372cc:	ldr	x1, [sp, #24]
   372d0:	ldr	x0, [sp, #40]
   372d4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   372d8:	b	372e0 <PyInit__decimal@@Base+0x1f608>
   372dc:	nop
   372e0:	ldp	x29, x30, [sp], #80
   372e4:	ret
   372e8:	stp	x29, x30, [sp, #-80]!
   372ec:	mov	x29, sp
   372f0:	str	x0, [sp, #40]
   372f4:	str	x1, [sp, #32]
   372f8:	str	x2, [sp, #24]
   372fc:	str	x3, [sp, #16]
   37300:	ldr	x0, [sp, #32]
   37304:	str	x0, [sp, #72]
   37308:	ldr	x0, [sp, #72]
   3730c:	ldrb	w0, [x0]
   37310:	and	w0, w0, #0xe
   37314:	cmp	w0, #0x0
   37318:	b.eq	37338 <PyInit__decimal@@Base+0x1f660>  // b.none
   3731c:	ldr	x3, [sp, #16]
   37320:	ldr	x2, [sp, #24]
   37324:	ldr	x1, [sp, #32]
   37328:	ldr	x0, [sp, #40]
   3732c:	bl	28540 <PyInit__decimal@@Base+0x10868>
   37330:	cmp	w0, #0x0
   37334:	b.ne	373e8 <PyInit__decimal@@Base+0x1f710>  // b.any
   37338:	ldr	x0, [sp, #32]
   3733c:	str	x0, [sp, #64]
   37340:	ldr	x0, [sp, #64]
   37344:	str	x0, [sp, #56]
   37348:	ldr	x0, [sp, #56]
   3734c:	ldrb	w0, [x0]
   37350:	and	w0, w0, #0xe
   37354:	cmp	w0, #0x0
   37358:	b.ne	37394 <PyInit__decimal@@Base+0x1f6bc>  // b.any
   3735c:	ldr	x0, [sp, #64]
   37360:	str	x0, [sp, #48]
   37364:	ldr	x0, [sp, #48]
   37368:	ldr	x1, [x0, #40]
   3736c:	ldr	x0, [sp, #48]
   37370:	ldr	x0, [x0, #24]
   37374:	lsl	x0, x0, #3
   37378:	sub	x0, x0, #0x8
   3737c:	add	x0, x1, x0
   37380:	ldr	x0, [x0]
   37384:	cmp	x0, #0x0
   37388:	b.ne	37394 <PyInit__decimal@@Base+0x1f6bc>  // b.any
   3738c:	mov	w0, #0x1                   	// #1
   37390:	b	37398 <PyInit__decimal@@Base+0x1f6c0>
   37394:	mov	w0, #0x0                   	// #0
   37398:	cmp	w0, #0x0
   3739c:	b.eq	373c4 <PyInit__decimal@@Base+0x1f6ec>  // b.none
   373a0:	ldr	x0, [sp, #24]
   373a4:	ldr	w0, [x0, #36]
   373a8:	cmp	w0, #0x3
   373ac:	b.eq	373c4 <PyInit__decimal@@Base+0x1f6ec>  // b.none
   373b0:	ldr	x2, [sp, #16]
   373b4:	ldr	x1, [sp, #32]
   373b8:	ldr	x0, [sp, #40]
   373bc:	bl	29bdc <PyInit__decimal@@Base+0x11f04>
   373c0:	b	373d4 <PyInit__decimal@@Base+0x1f6fc>
   373c4:	ldr	x2, [sp, #16]
   373c8:	ldr	x1, [sp, #32]
   373cc:	ldr	x0, [sp, #40]
   373d0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   373d4:	ldr	x2, [sp, #16]
   373d8:	ldr	x1, [sp, #24]
   373dc:	ldr	x0, [sp, #40]
   373e0:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   373e4:	b	373ec <PyInit__decimal@@Base+0x1f714>
   373e8:	nop
   373ec:	ldp	x29, x30, [sp], #80
   373f0:	ret
   373f4:	stp	x29, x30, [sp, #-208]!
   373f8:	mov	x29, sp
   373fc:	str	x0, [sp, #40]
   37400:	str	x1, [sp, #32]
   37404:	str	x2, [sp, #24]
   37408:	str	x3, [sp, #16]
   3740c:	mov	x0, #0x1                   	// #1
   37410:	str	x0, [sp, #104]
   37414:	mov	w0, #0xffffff90            	// #-112
   37418:	strb	w0, [sp, #56]
   3741c:	ldr	x0, [sp, #24]
   37420:	str	x0, [sp, #192]
   37424:	ldr	x0, [sp, #192]
   37428:	ldr	x1, [x0, #16]
   3742c:	ldr	x0, [sp, #192]
   37430:	ldr	x0, [x0]
   37434:	sub	x0, x1, x0
   37438:	add	x0, x0, #0x1
   3743c:	sub	x0, x0, #0x1
   37440:	str	x0, [sp, #64]
   37444:	mov	x0, #0x1                   	// #1
   37448:	str	x0, [sp, #72]
   3744c:	mov	x0, #0x1                   	// #1
   37450:	str	x0, [sp, #80]
   37454:	mov	x0, #0x1                   	// #1
   37458:	str	x0, [sp, #88]
   3745c:	add	x0, sp, #0x68
   37460:	str	x0, [sp, #96]
   37464:	ldr	x0, [sp, #32]
   37468:	str	x0, [sp, #200]
   3746c:	ldr	x0, [sp, #200]
   37470:	ldrb	w0, [x0]
   37474:	and	w0, w0, #0xe
   37478:	cmp	w0, #0x0
   3747c:	b.eq	37548 <PyInit__decimal@@Base+0x1f870>  // b.none
   37480:	ldr	x3, [sp, #16]
   37484:	ldr	x2, [sp, #24]
   37488:	ldr	x1, [sp, #32]
   3748c:	ldr	x0, [sp, #40]
   37490:	bl	28540 <PyInit__decimal@@Base+0x10868>
   37494:	cmp	w0, #0x0
   37498:	b.ne	37614 <PyInit__decimal@@Base+0x1f93c>  // b.any
   3749c:	ldr	x0, [sp, #32]
   374a0:	str	x0, [sp, #184]
   374a4:	ldr	x0, [sp, #184]
   374a8:	ldrb	w0, [x0]
   374ac:	and	w0, w0, #0x1
   374b0:	cmp	w0, #0x0
   374b4:	b.eq	374cc <PyInit__decimal@@Base+0x1f7f4>  // b.none
   374b8:	ldr	x2, [sp, #16]
   374bc:	ldr	x1, [sp, #32]
   374c0:	ldr	x0, [sp, #40]
   374c4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   374c8:	b	37628 <PyInit__decimal@@Base+0x1f950>
   374cc:	ldr	x0, [sp, #40]
   374d0:	str	x0, [sp, #168]
   374d4:	ldr	x0, [sp, #168]
   374d8:	ldrb	w0, [x0]
   374dc:	and	w0, w0, #0xfffffff0
   374e0:	and	w1, w0, #0xff
   374e4:	ldr	x0, [sp, #168]
   374e8:	strb	w1, [x0]
   374ec:	nop
   374f0:	ldr	x2, [sp, #16]
   374f4:	ldr	x1, [sp, #24]
   374f8:	ldr	x0, [sp, #40]
   374fc:	bl	265c8 <PyInit__decimal@@Base+0xe8f0>
   37500:	ldr	x0, [sp, #40]
   37504:	str	x0, [sp, #176]
   37508:	ldr	x0, [sp, #176]
   3750c:	ldrb	w0, [x0]
   37510:	and	w0, w0, #0xc
   37514:	cmp	w0, #0x0
   37518:	b.ne	3761c <PyInit__decimal@@Base+0x1f944>  // b.any
   3751c:	ldr	x0, [sp, #24]
   37520:	str	x0, [sp, #160]
   37524:	ldr	x0, [sp, #160]
   37528:	ldr	x1, [x0, #8]
   3752c:	ldr	x0, [sp, #160]
   37530:	ldr	x0, [x0]
   37534:	sub	x0, x1, x0
   37538:	add	x1, x0, #0x1
   3753c:	ldr	x0, [sp, #40]
   37540:	str	x1, [x0, #8]
   37544:	b	37628 <PyInit__decimal@@Base+0x1f950>
   37548:	add	x0, sp, #0x70
   3754c:	ldr	x1, [sp, #24]
   37550:	bl	26430 <PyInit__decimal@@Base+0xe758>
   37554:	mov	w0, #0x3                   	// #3
   37558:	str	w0, [sp, #148]
   3755c:	ldr	x2, [sp, #16]
   37560:	ldr	x1, [sp, #32]
   37564:	ldr	x0, [sp, #40]
   37568:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3756c:	cmp	w0, #0x0
   37570:	b.eq	37624 <PyInit__decimal@@Base+0x1f94c>  // b.none
   37574:	add	x0, sp, #0x70
   37578:	add	x1, x0, #0x1c
   3757c:	add	x0, sp, #0x70
   37580:	mov	x2, x1
   37584:	mov	x1, x0
   37588:	ldr	x0, [sp, #40]
   3758c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   37590:	ldr	w0, [sp, #140]
   37594:	and	w0, w0, #0x3fe
   37598:	cmp	w0, #0x0
   3759c:	b.eq	375c4 <PyInit__decimal@@Base+0x1f8ec>  // b.none
   375a0:	ldr	x0, [sp, #16]
   375a4:	ldr	w1, [x0]
   375a8:	ldr	w2, [sp, #140]
   375ac:	mov	w0, #0x3be                 	// #958
   375b0:	and	w0, w2, w0
   375b4:	orr	w1, w1, w0
   375b8:	ldr	x0, [sp, #16]
   375bc:	str	w1, [x0]
   375c0:	b	37628 <PyInit__decimal@@Base+0x1f950>
   375c4:	str	wzr, [sp, #140]
   375c8:	add	x0, sp, #0x70
   375cc:	add	x2, x0, #0x1c
   375d0:	add	x1, sp, #0x70
   375d4:	add	x0, sp, #0x38
   375d8:	mov	x4, x2
   375dc:	mov	x3, x1
   375e0:	mov	x2, x0
   375e4:	ldr	x1, [sp, #32]
   375e8:	ldr	x0, [sp, #40]
   375ec:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   375f0:	ldr	x0, [sp, #16]
   375f4:	ldr	w1, [x0]
   375f8:	ldr	w2, [sp, #140]
   375fc:	mov	w0, #0x3be                 	// #958
   37600:	and	w0, w2, w0
   37604:	orr	w1, w1, w0
   37608:	ldr	x0, [sp, #16]
   3760c:	str	w1, [x0]
   37610:	b	37628 <PyInit__decimal@@Base+0x1f950>
   37614:	nop
   37618:	b	37628 <PyInit__decimal@@Base+0x1f950>
   3761c:	nop
   37620:	b	37628 <PyInit__decimal@@Base+0x1f950>
   37624:	nop
   37628:	ldp	x29, x30, [sp], #208
   3762c:	ret
   37630:	stp	x29, x30, [sp, #-224]!
   37634:	mov	x29, sp
   37638:	str	x0, [sp, #40]
   3763c:	str	x1, [sp, #32]
   37640:	str	x2, [sp, #24]
   37644:	str	x3, [sp, #16]
   37648:	mov	x0, #0x1                   	// #1
   3764c:	str	x0, [sp, #104]
   37650:	mov	w0, #0xffffff90            	// #-112
   37654:	strb	w0, [sp, #56]
   37658:	ldr	x0, [sp, #24]
   3765c:	str	x0, [sp, #208]
   37660:	ldr	x0, [sp, #208]
   37664:	ldr	x1, [x0, #16]
   37668:	ldr	x0, [sp, #208]
   3766c:	ldr	x0, [x0]
   37670:	sub	x0, x1, x0
   37674:	add	x0, x0, #0x1
   37678:	sub	x0, x0, #0x1
   3767c:	str	x0, [sp, #64]
   37680:	mov	x0, #0x1                   	// #1
   37684:	str	x0, [sp, #72]
   37688:	mov	x0, #0x1                   	// #1
   3768c:	str	x0, [sp, #80]
   37690:	mov	x0, #0x1                   	// #1
   37694:	str	x0, [sp, #88]
   37698:	add	x0, sp, #0x68
   3769c:	str	x0, [sp, #96]
   376a0:	ldr	x0, [sp, #32]
   376a4:	str	x0, [sp, #216]
   376a8:	ldr	x0, [sp, #216]
   376ac:	ldrb	w0, [x0]
   376b0:	and	w0, w0, #0xe
   376b4:	cmp	w0, #0x0
   376b8:	b.eq	377d8 <PyInit__decimal@@Base+0x1fb00>  // b.none
   376bc:	ldr	x3, [sp, #16]
   376c0:	ldr	x2, [sp, #24]
   376c4:	ldr	x1, [sp, #32]
   376c8:	ldr	x0, [sp, #40]
   376cc:	bl	28540 <PyInit__decimal@@Base+0x10868>
   376d0:	cmp	w0, #0x0
   376d4:	b.ne	378a4 <PyInit__decimal@@Base+0x1fbcc>  // b.any
   376d8:	ldr	x0, [sp, #32]
   376dc:	str	x0, [sp, #200]
   376e0:	ldr	x0, [sp, #200]
   376e4:	ldrb	w0, [x0]
   376e8:	and	w0, w0, #0x1
   376ec:	cmp	w0, #0x0
   376f0:	cset	w0, eq  // eq = none
   376f4:	and	w0, w0, #0xff
   376f8:	cmp	w0, #0x0
   376fc:	b.eq	37714 <PyInit__decimal@@Base+0x1fa3c>  // b.none
   37700:	ldr	x2, [sp, #16]
   37704:	ldr	x1, [sp, #32]
   37708:	ldr	x0, [sp, #40]
   3770c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   37710:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   37714:	ldr	x0, [sp, #40]
   37718:	str	x0, [sp, #184]
   3771c:	ldr	x0, [sp, #184]
   37720:	ldrb	w0, [x0]
   37724:	and	w0, w0, #0xfffffff0
   37728:	and	w1, w0, #0xff
   3772c:	ldr	x0, [sp, #184]
   37730:	strb	w1, [x0]
   37734:	nop
   37738:	ldr	x2, [sp, #16]
   3773c:	ldr	x1, [sp, #24]
   37740:	ldr	x0, [sp, #40]
   37744:	bl	265c8 <PyInit__decimal@@Base+0xe8f0>
   37748:	ldr	x0, [sp, #40]
   3774c:	str	x0, [sp, #192]
   37750:	ldr	x0, [sp, #192]
   37754:	ldrb	w0, [x0]
   37758:	and	w0, w0, #0xc
   3775c:	cmp	w0, #0x0
   37760:	b.ne	378ac <PyInit__decimal@@Base+0x1fbd4>  // b.any
   37764:	ldr	x0, [sp, #40]
   37768:	str	x0, [sp, #168]
   3776c:	mov	w0, #0x1                   	// #1
   37770:	strb	w0, [sp, #167]
   37774:	ldr	x0, [sp, #168]
   37778:	ldrb	w0, [x0]
   3777c:	and	w0, w0, #0xfffffff0
   37780:	and	w1, w0, #0xff
   37784:	ldr	x0, [sp, #168]
   37788:	strb	w1, [x0]
   3778c:	ldr	x0, [sp, #168]
   37790:	ldrb	w1, [x0]
   37794:	ldrb	w0, [sp, #167]
   37798:	orr	w0, w1, w0
   3779c:	and	w1, w0, #0xff
   377a0:	ldr	x0, [sp, #168]
   377a4:	strb	w1, [x0]
   377a8:	nop
   377ac:	ldr	x0, [sp, #24]
   377b0:	str	x0, [sp, #176]
   377b4:	ldr	x0, [sp, #176]
   377b8:	ldr	x1, [x0, #8]
   377bc:	ldr	x0, [sp, #176]
   377c0:	ldr	x0, [x0]
   377c4:	sub	x0, x1, x0
   377c8:	add	x1, x0, #0x1
   377cc:	ldr	x0, [sp, #40]
   377d0:	str	x1, [x0, #8]
   377d4:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   377d8:	add	x0, sp, #0x70
   377dc:	ldr	x1, [sp, #24]
   377e0:	bl	26430 <PyInit__decimal@@Base+0xe758>
   377e4:	mov	w0, #0x2                   	// #2
   377e8:	str	w0, [sp, #148]
   377ec:	ldr	x2, [sp, #16]
   377f0:	ldr	x1, [sp, #32]
   377f4:	ldr	x0, [sp, #40]
   377f8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   377fc:	cmp	w0, #0x0
   37800:	b.eq	378b4 <PyInit__decimal@@Base+0x1fbdc>  // b.none
   37804:	add	x0, sp, #0x70
   37808:	add	x1, x0, #0x1c
   3780c:	add	x0, sp, #0x70
   37810:	mov	x2, x1
   37814:	mov	x1, x0
   37818:	ldr	x0, [sp, #40]
   3781c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   37820:	ldr	w0, [sp, #140]
   37824:	and	w0, w0, #0x3fe
   37828:	cmp	w0, #0x0
   3782c:	b.eq	37854 <PyInit__decimal@@Base+0x1fb7c>  // b.none
   37830:	ldr	x0, [sp, #16]
   37834:	ldr	w1, [x0]
   37838:	ldr	w2, [sp, #140]
   3783c:	mov	w0, #0x3be                 	// #958
   37840:	and	w0, w2, w0
   37844:	orr	w1, w1, w0
   37848:	ldr	x0, [sp, #16]
   3784c:	str	w1, [x0]
   37850:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   37854:	str	wzr, [sp, #140]
   37858:	add	x0, sp, #0x70
   3785c:	add	x2, x0, #0x1c
   37860:	add	x1, sp, #0x70
   37864:	add	x0, sp, #0x38
   37868:	mov	x4, x2
   3786c:	mov	x3, x1
   37870:	mov	x2, x0
   37874:	ldr	x1, [sp, #32]
   37878:	ldr	x0, [sp, #40]
   3787c:	bl	2f590 <PyInit__decimal@@Base+0x178b8>
   37880:	ldr	x0, [sp, #16]
   37884:	ldr	w1, [x0]
   37888:	ldr	w2, [sp, #140]
   3788c:	mov	w0, #0x3be                 	// #958
   37890:	and	w0, w2, w0
   37894:	orr	w1, w1, w0
   37898:	ldr	x0, [sp, #16]
   3789c:	str	w1, [x0]
   378a0:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   378a4:	nop
   378a8:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   378ac:	nop
   378b0:	b	378b8 <PyInit__decimal@@Base+0x1fbe0>
   378b4:	nop
   378b8:	ldp	x29, x30, [sp], #224
   378bc:	ret
   378c0:	stp	x29, x30, [sp, #-112]!
   378c4:	mov	x29, sp
   378c8:	str	x0, [sp, #56]
   378cc:	str	x1, [sp, #48]
   378d0:	str	x2, [sp, #40]
   378d4:	str	x3, [sp, #32]
   378d8:	str	x4, [sp, #24]
   378dc:	ldr	x4, [sp, #24]
   378e0:	ldr	x3, [sp, #32]
   378e4:	ldr	x2, [sp, #40]
   378e8:	ldr	x1, [sp, #48]
   378ec:	ldr	x0, [sp, #56]
   378f0:	bl	2861c <PyInit__decimal@@Base+0x10944>
   378f4:	cmp	w0, #0x0
   378f8:	b.ne	37a68 <PyInit__decimal@@Base+0x1fd90>  // b.any
   378fc:	ldr	x1, [sp, #40]
   37900:	ldr	x0, [sp, #48]
   37904:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   37908:	str	w0, [sp, #108]
   3790c:	ldr	w0, [sp, #108]
   37910:	cmp	w0, #0x0
   37914:	b.ne	37930 <PyInit__decimal@@Base+0x1fc58>  // b.any
   37918:	ldr	x3, [sp, #24]
   3791c:	ldr	x2, [sp, #40]
   37920:	ldr	x1, [sp, #48]
   37924:	ldr	x0, [sp, #56]
   37928:	bl	29c88 <PyInit__decimal@@Base+0x11fb0>
   3792c:	b	37a6c <PyInit__decimal@@Base+0x1fd94>
   37930:	ldr	w0, [sp, #108]
   37934:	cmp	w0, #0x0
   37938:	b.ge	37954 <PyInit__decimal@@Base+0x1fc7c>  // b.tcont
   3793c:	ldr	x3, [sp, #24]
   37940:	ldr	x2, [sp, #32]
   37944:	ldr	x1, [sp, #48]
   37948:	ldr	x0, [sp, #56]
   3794c:	bl	37630 <PyInit__decimal@@Base+0x1f958>
   37950:	b	37968 <PyInit__decimal@@Base+0x1fc90>
   37954:	ldr	x3, [sp, #24]
   37958:	ldr	x2, [sp, #32]
   3795c:	ldr	x1, [sp, #48]
   37960:	ldr	x0, [sp, #56]
   37964:	bl	373f4 <PyInit__decimal@@Base+0x1f71c>
   37968:	ldr	x0, [sp, #56]
   3796c:	str	x0, [sp, #96]
   37970:	ldr	x0, [sp, #96]
   37974:	ldrb	w0, [x0]
   37978:	and	w0, w0, #0x2
   3797c:	cmp	w0, #0x0
   37980:	b.eq	379a0 <PyInit__decimal@@Base+0x1fcc8>  // b.none
   37984:	ldr	x0, [sp, #24]
   37988:	ldr	w1, [x0]
   3798c:	mov	w0, #0x1840                	// #6208
   37990:	orr	w1, w1, w0
   37994:	ldr	x0, [sp, #24]
   37998:	str	w1, [x0]
   3799c:	b	37a6c <PyInit__decimal@@Base+0x1fd94>
   379a0:	ldr	x0, [sp, #56]
   379a4:	str	x0, [sp, #88]
   379a8:	ldr	x0, [sp, #88]
   379ac:	ldr	x1, [x0, #8]
   379b0:	ldr	x0, [sp, #88]
   379b4:	ldr	x0, [x0, #16]
   379b8:	add	x0, x1, x0
   379bc:	sub	x1, x0, #0x1
   379c0:	ldr	x0, [sp, #32]
   379c4:	ldr	x0, [x0, #16]
   379c8:	cmp	x1, x0
   379cc:	b.ge	37a6c <PyInit__decimal@@Base+0x1fd94>  // b.tcont
   379d0:	ldr	x0, [sp, #24]
   379d4:	ldr	w1, [x0]
   379d8:	mov	w0, #0x7040                	// #28736
   379dc:	orr	w1, w1, w0
   379e0:	ldr	x0, [sp, #24]
   379e4:	str	w1, [x0]
   379e8:	ldr	x0, [sp, #56]
   379ec:	str	x0, [sp, #80]
   379f0:	ldr	x0, [sp, #80]
   379f4:	str	x0, [sp, #72]
   379f8:	ldr	x0, [sp, #72]
   379fc:	ldrb	w0, [x0]
   37a00:	and	w0, w0, #0xe
   37a04:	cmp	w0, #0x0
   37a08:	b.ne	37a44 <PyInit__decimal@@Base+0x1fd6c>  // b.any
   37a0c:	ldr	x0, [sp, #80]
   37a10:	str	x0, [sp, #64]
   37a14:	ldr	x0, [sp, #64]
   37a18:	ldr	x1, [x0, #40]
   37a1c:	ldr	x0, [sp, #64]
   37a20:	ldr	x0, [x0, #24]
   37a24:	lsl	x0, x0, #3
   37a28:	sub	x0, x0, #0x8
   37a2c:	add	x0, x1, x0
   37a30:	ldr	x0, [x0]
   37a34:	cmp	x0, #0x0
   37a38:	b.ne	37a44 <PyInit__decimal@@Base+0x1fd6c>  // b.any
   37a3c:	mov	w0, #0x1                   	// #1
   37a40:	b	37a48 <PyInit__decimal@@Base+0x1fd70>
   37a44:	mov	w0, #0x0                   	// #0
   37a48:	cmp	w0, #0x0
   37a4c:	b.eq	37a6c <PyInit__decimal@@Base+0x1fd94>  // b.none
   37a50:	ldr	x0, [sp, #24]
   37a54:	ldr	w0, [x0]
   37a58:	orr	w1, w0, #0x1
   37a5c:	ldr	x0, [sp, #24]
   37a60:	str	w1, [x0]
   37a64:	b	37a6c <PyInit__decimal@@Base+0x1fd94>
   37a68:	nop
   37a6c:	ldp	x29, x30, [sp], #112
   37a70:	ret
   37a74:	stp	x29, x30, [sp, #-112]!
   37a78:	mov	x29, sp
   37a7c:	str	x0, [sp, #56]
   37a80:	str	x1, [sp, #48]
   37a84:	str	x2, [sp, #40]
   37a88:	strb	w3, [sp, #39]
   37a8c:	str	x4, [sp, #24]
   37a90:	str	x5, [sp, #16]
   37a94:	str	wzr, [sp, #64]
   37a98:	ldr	x0, [sp, #40]
   37a9c:	cmp	x0, #0x0
   37aa0:	b.ne	37abc <PyInit__decimal@@Base+0x1fde4>  // b.any
   37aa4:	mov	x3, #0x0                   	// #0
   37aa8:	mov	x2, #0x1                   	// #1
   37aac:	ldrb	w1, [sp, #39]
   37ab0:	ldr	x0, [sp, #56]
   37ab4:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   37ab8:	b	37c30 <PyInit__decimal@@Base+0x1ff58>
   37abc:	ldr	x2, [sp, #16]
   37ac0:	ldr	x1, [sp, #48]
   37ac4:	ldr	x0, [sp, #56]
   37ac8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   37acc:	cmp	w0, #0x0
   37ad0:	b.eq	37c2c <PyInit__decimal@@Base+0x1ff54>  // b.none
   37ad4:	ldr	x0, [sp, #40]
   37ad8:	bl	24928 <PyInit__decimal@@Base+0xcc50>
   37adc:	mov	w1, w0
   37ae0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   37ae4:	add	x0, x0, #0xbb0
   37ae8:	sxtw	x1, w1
   37aec:	ldr	x0, [x0, x1, lsl #3]
   37af0:	str	x0, [sp, #104]
   37af4:	b	37bb4 <PyInit__decimal@@Base+0x1fedc>
   37af8:	add	x0, sp, #0x40
   37afc:	mov	x4, x0
   37b00:	ldr	x3, [sp, #24]
   37b04:	ldr	x2, [sp, #56]
   37b08:	ldr	x1, [sp, #56]
   37b0c:	ldr	x0, [sp, #56]
   37b10:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   37b14:	ldr	x1, [sp, #40]
   37b18:	ldr	x0, [sp, #104]
   37b1c:	and	x0, x1, x0
   37b20:	cmp	x0, #0x0
   37b24:	b.eq	37b44 <PyInit__decimal@@Base+0x1fe6c>  // b.none
   37b28:	add	x0, sp, #0x40
   37b2c:	mov	x4, x0
   37b30:	ldr	x3, [sp, #24]
   37b34:	ldr	x2, [sp, #48]
   37b38:	ldr	x1, [sp, #56]
   37b3c:	ldr	x0, [sp, #56]
   37b40:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   37b44:	ldr	x0, [sp, #56]
   37b48:	str	x0, [sp, #96]
   37b4c:	ldr	x0, [sp, #96]
   37b50:	ldrb	w0, [x0]
   37b54:	and	w0, w0, #0xe
   37b58:	cmp	w0, #0x0
   37b5c:	b.ne	37bcc <PyInit__decimal@@Base+0x1fef4>  // b.any
   37b60:	ldr	x0, [sp, #56]
   37b64:	str	x0, [sp, #88]
   37b68:	ldr	x0, [sp, #88]
   37b6c:	str	x0, [sp, #80]
   37b70:	ldr	x0, [sp, #80]
   37b74:	ldr	x1, [x0, #40]
   37b78:	ldr	x0, [sp, #80]
   37b7c:	ldr	x0, [x0, #24]
   37b80:	lsl	x0, x0, #3
   37b84:	sub	x0, x0, #0x8
   37b88:	add	x0, x1, x0
   37b8c:	ldr	x0, [x0]
   37b90:	cmp	x0, #0x0
   37b94:	cset	w0, eq  // eq = none
   37b98:	and	w0, w0, #0xff
   37b9c:	cmp	w0, #0x0
   37ba0:	b.eq	37bb4 <PyInit__decimal@@Base+0x1fedc>  // b.none
   37ba4:	ldr	w0, [sp, #64]
   37ba8:	and	w0, w0, #0x1
   37bac:	cmp	w0, #0x0
   37bb0:	b.ne	37bcc <PyInit__decimal@@Base+0x1fef4>  // b.any
   37bb4:	ldr	x0, [sp, #104]
   37bb8:	lsr	x0, x0, #1
   37bbc:	str	x0, [sp, #104]
   37bc0:	ldr	x0, [sp, #104]
   37bc4:	cmp	x0, #0x0
   37bc8:	b.ne	37af8 <PyInit__decimal@@Base+0x1fe20>  // b.any
   37bcc:	ldr	x0, [sp, #16]
   37bd0:	ldr	w1, [x0]
   37bd4:	ldr	w0, [sp, #64]
   37bd8:	orr	w1, w1, w0
   37bdc:	ldr	x0, [sp, #16]
   37be0:	str	w1, [x0]
   37be4:	ldr	x0, [sp, #56]
   37be8:	str	x0, [sp, #72]
   37bec:	ldrb	w0, [sp, #39]
   37bf0:	strb	w0, [sp, #71]
   37bf4:	ldr	x0, [sp, #72]
   37bf8:	ldrb	w0, [x0]
   37bfc:	and	w0, w0, #0xfffffffe
   37c00:	and	w1, w0, #0xff
   37c04:	ldr	x0, [sp, #72]
   37c08:	strb	w1, [x0]
   37c0c:	ldr	x0, [sp, #72]
   37c10:	ldrb	w1, [x0]
   37c14:	ldrb	w0, [sp, #71]
   37c18:	orr	w0, w1, w0
   37c1c:	and	w1, w0, #0xff
   37c20:	ldr	x0, [sp, #72]
   37c24:	strb	w1, [x0]
   37c28:	b	37c30 <PyInit__decimal@@Base+0x1ff58>
   37c2c:	nop
   37c30:	ldp	x29, x30, [sp], #112
   37c34:	ret
   37c38:	stp	x29, x30, [sp, #-256]!
   37c3c:	mov	x29, sp
   37c40:	str	x0, [sp, #56]
   37c44:	str	x1, [sp, #48]
   37c48:	str	x2, [sp, #40]
   37c4c:	strb	w3, [sp, #39]
   37c50:	str	x4, [sp, #24]
   37c54:	str	x5, [sp, #16]
   37c58:	str	wzr, [sp, #176]
   37c5c:	mov	x0, #0x2                   	// #2
   37c60:	str	x0, [sp, #120]
   37c64:	mov	w0, #0xffffff90            	// #-112
   37c68:	strb	w0, [sp, #72]
   37c6c:	str	xzr, [sp, #80]
   37c70:	mov	x0, #0x1                   	// #1
   37c74:	str	x0, [sp, #88]
   37c78:	mov	x0, #0x1                   	// #1
   37c7c:	str	x0, [sp, #96]
   37c80:	mov	x0, #0x1                   	// #1
   37c84:	str	x0, [sp, #104]
   37c88:	add	x0, sp, #0x78
   37c8c:	str	x0, [sp, #112]
   37c90:	add	x0, sp, #0x80
   37c94:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   37c98:	ldr	x2, [sp, #16]
   37c9c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   37ca0:	add	x1, x0, #0xc58
   37ca4:	ldr	x0, [sp, #56]
   37ca8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   37cac:	b	37dfc <PyInit__decimal@@Base+0x20124>
   37cb0:	ldr	x0, [sp, #40]
   37cb4:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   37cb8:	cmp	w0, #0x0
   37cbc:	b.eq	37d64 <PyInit__decimal@@Base+0x2008c>  // b.none
   37cc0:	add	x0, sp, #0xb0
   37cc4:	mov	x4, x0
   37cc8:	ldr	x3, [sp, #24]
   37ccc:	ldr	x2, [sp, #48]
   37cd0:	ldr	x1, [sp, #56]
   37cd4:	ldr	x0, [sp, #56]
   37cd8:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   37cdc:	ldr	x0, [sp, #16]
   37ce0:	ldr	w1, [x0]
   37ce4:	ldr	w0, [sp, #176]
   37ce8:	orr	w1, w1, w0
   37cec:	ldr	x0, [sp, #16]
   37cf0:	str	w1, [x0]
   37cf4:	ldr	x0, [sp, #56]
   37cf8:	str	x0, [sp, #248]
   37cfc:	ldr	x0, [sp, #248]
   37d00:	ldrb	w0, [x0]
   37d04:	and	w0, w0, #0xe
   37d08:	cmp	w0, #0x0
   37d0c:	b.ne	37e64 <PyInit__decimal@@Base+0x2018c>  // b.any
   37d10:	ldr	x0, [sp, #56]
   37d14:	str	x0, [sp, #240]
   37d18:	ldr	x0, [sp, #240]
   37d1c:	str	x0, [sp, #232]
   37d20:	ldr	x0, [sp, #232]
   37d24:	ldr	x1, [x0, #40]
   37d28:	ldr	x0, [sp, #232]
   37d2c:	ldr	x0, [x0, #24]
   37d30:	lsl	x0, x0, #3
   37d34:	sub	x0, x0, #0x8
   37d38:	add	x0, x1, x0
   37d3c:	ldr	x0, [x0]
   37d40:	cmp	x0, #0x0
   37d44:	cset	w0, eq  // eq = none
   37d48:	and	w0, w0, #0xff
   37d4c:	cmp	w0, #0x0
   37d50:	b.eq	37d64 <PyInit__decimal@@Base+0x2008c>  // b.none
   37d54:	ldr	w0, [sp, #176]
   37d58:	and	w0, w0, #0x1
   37d5c:	cmp	w0, #0x0
   37d60:	b.ne	37e64 <PyInit__decimal@@Base+0x2018c>  // b.any
   37d64:	add	x0, sp, #0xb0
   37d68:	mov	x4, x0
   37d6c:	ldr	x3, [sp, #24]
   37d70:	ldr	x2, [sp, #48]
   37d74:	ldr	x1, [sp, #48]
   37d78:	ldr	x0, [sp, #48]
   37d7c:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   37d80:	add	x2, sp, #0xb0
   37d84:	add	x1, sp, #0x80
   37d88:	add	x0, sp, #0x48
   37d8c:	mov	x4, x2
   37d90:	mov	x3, x1
   37d94:	mov	x2, x0
   37d98:	ldr	x1, [sp, #40]
   37d9c:	ldr	x0, [sp, #40]
   37da0:	bl	31784 <PyInit__decimal@@Base+0x19aac>
   37da4:	ldr	x0, [sp, #48]
   37da8:	str	x0, [sp, #224]
   37dac:	ldr	x0, [sp, #224]
   37db0:	ldrb	w0, [x0]
   37db4:	and	w0, w0, #0xc
   37db8:	cmp	w0, #0x0
   37dbc:	b.ne	37ddc <PyInit__decimal@@Base+0x20104>  // b.any
   37dc0:	ldr	x0, [sp, #40]
   37dc4:	str	x0, [sp, #216]
   37dc8:	ldr	x0, [sp, #216]
   37dcc:	ldrb	w0, [x0]
   37dd0:	and	w0, w0, #0xc
   37dd4:	cmp	w0, #0x0
   37dd8:	b.eq	37dfc <PyInit__decimal@@Base+0x20124>  // b.none
   37ddc:	ldr	w1, [sp, #176]
   37de0:	mov	w0, #0x3be                 	// #958
   37de4:	and	w0, w1, w0
   37de8:	ldr	x2, [sp, #16]
   37dec:	mov	w1, w0
   37df0:	ldr	x0, [sp, #56]
   37df4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   37df8:	b	37eac <PyInit__decimal@@Base+0x201d4>
   37dfc:	ldr	x0, [sp, #40]
   37e00:	str	x0, [sp, #208]
   37e04:	ldr	x0, [sp, #208]
   37e08:	str	x0, [sp, #200]
   37e0c:	ldr	x0, [sp, #200]
   37e10:	ldrb	w0, [x0]
   37e14:	and	w0, w0, #0xe
   37e18:	cmp	w0, #0x0
   37e1c:	b.ne	37e58 <PyInit__decimal@@Base+0x20180>  // b.any
   37e20:	ldr	x0, [sp, #208]
   37e24:	str	x0, [sp, #192]
   37e28:	ldr	x0, [sp, #192]
   37e2c:	ldr	x1, [x0, #40]
   37e30:	ldr	x0, [sp, #192]
   37e34:	ldr	x0, [x0, #24]
   37e38:	lsl	x0, x0, #3
   37e3c:	sub	x0, x0, #0x8
   37e40:	add	x0, x1, x0
   37e44:	ldr	x0, [x0]
   37e48:	cmp	x0, #0x0
   37e4c:	b.ne	37e58 <PyInit__decimal@@Base+0x20180>  // b.any
   37e50:	mov	w0, #0x1                   	// #1
   37e54:	b	37e5c <PyInit__decimal@@Base+0x20184>
   37e58:	mov	w0, #0x0                   	// #0
   37e5c:	cmp	w0, #0x0
   37e60:	b.eq	37cb0 <PyInit__decimal@@Base+0x1ffd8>  // b.none
   37e64:	ldr	x0, [sp, #56]
   37e68:	str	x0, [sp, #184]
   37e6c:	ldrb	w0, [sp, #39]
   37e70:	strb	w0, [sp, #183]
   37e74:	ldr	x0, [sp, #184]
   37e78:	ldrb	w0, [x0]
   37e7c:	and	w0, w0, #0xfffffffe
   37e80:	and	w1, w0, #0xff
   37e84:	ldr	x0, [sp, #184]
   37e88:	strb	w1, [x0]
   37e8c:	ldr	x0, [sp, #184]
   37e90:	ldrb	w1, [x0]
   37e94:	ldrb	w0, [sp, #183]
   37e98:	orr	w0, w1, w0
   37e9c:	and	w1, w0, #0xff
   37ea0:	ldr	x0, [sp, #184]
   37ea4:	strb	w1, [x0]
   37ea8:	nop
   37eac:	ldp	x29, x30, [sp], #256
   37eb0:	ret
   37eb4:	sub	sp, sp, #0x520
   37eb8:	stp	x29, x30, [sp]
   37ebc:	mov	x29, sp
   37ec0:	str	x0, [sp, #56]
   37ec4:	str	x1, [sp, #48]
   37ec8:	str	x2, [sp, #40]
   37ecc:	strb	w3, [sp, #39]
   37ed0:	str	x4, [sp, #24]
   37ed4:	str	x5, [sp, #16]
   37ed8:	mov	w0, #0x30                  	// #48
   37edc:	strb	w0, [sp, #632]
   37ee0:	str	xzr, [sp, #640]
   37ee4:	str	xzr, [sp, #648]
   37ee8:	str	xzr, [sp, #656]
   37eec:	mov	x0, #0x40                  	// #64
   37ef0:	str	x0, [sp, #664]
   37ef4:	add	x0, sp, #0x2a8
   37ef8:	str	x0, [sp, #672]
   37efc:	mov	w0, #0x30                  	// #48
   37f00:	strb	w0, [sp, #72]
   37f04:	str	xzr, [sp, #80]
   37f08:	str	xzr, [sp, #88]
   37f0c:	str	xzr, [sp, #96]
   37f10:	mov	x0, #0x40                  	// #64
   37f14:	str	x0, [sp, #104]
   37f18:	add	x0, sp, #0x78
   37f1c:	str	x0, [sp, #112]
   37f20:	add	x0, sp, #0x4a8
   37f24:	ldr	x1, [sp, #24]
   37f28:	bl	26430 <PyInit__decimal@@Base+0xe758>
   37f2c:	ldr	x1, [sp, #1192]
   37f30:	ldr	x0, [sp, #40]
   37f34:	ldr	x2, [x0, #16]
   37f38:	ldr	x0, [sp, #40]
   37f3c:	ldr	x0, [x0, #8]
   37f40:	add	x0, x2, x0
   37f44:	add	x0, x1, x0
   37f48:	add	x0, x0, #0x2
   37f4c:	str	x0, [sp, #1192]
   37f50:	mov	w0, #0x6                   	// #6
   37f54:	str	w0, [sp, #1228]
   37f58:	str	wzr, [sp, #1232]
   37f5c:	ldr	x0, [sp, #40]
   37f60:	str	x0, [sp, #1296]
   37f64:	ldr	x0, [sp, #1296]
   37f68:	ldrb	w0, [x0]
   37f6c:	and	w0, w0, #0x1
   37f70:	cmp	w0, #0x0
   37f74:	b.eq	37fd4 <PyInit__decimal@@Base+0x202fc>  // b.none
   37f78:	ldr	x0, [sp, #1192]
   37f7c:	add	x0, x0, #0x1
   37f80:	str	x0, [sp, #1192]
   37f84:	add	x0, sp, #0x4a8
   37f88:	add	x5, sp, #0x278
   37f8c:	ldr	x4, [sp, #16]
   37f90:	mov	x3, x0
   37f94:	ldr	x2, [sp, #48]
   37f98:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   37f9c:	add	x1, x0, #0xc58
   37fa0:	mov	x0, x5
   37fa4:	bl	30a64 <PyInit__decimal@@Base+0x18d8c>
   37fa8:	ldr	x0, [sp, #16]
   37fac:	ldr	w1, [x0]
   37fb0:	mov	w0, #0x3be                 	// #958
   37fb4:	and	w0, w1, w0
   37fb8:	cmp	w0, #0x0
   37fbc:	b.eq	38000 <PyInit__decimal@@Base+0x20328>  // b.none
   37fc0:	mov	w2, #0x4                   	// #4
   37fc4:	mov	w1, #0x0                   	// #0
   37fc8:	ldr	x0, [sp, #56]
   37fcc:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   37fd0:	b	380ec <PyInit__decimal@@Base+0x20414>
   37fd4:	add	x0, sp, #0x278
   37fd8:	ldr	x2, [sp, #16]
   37fdc:	ldr	x1, [sp, #48]
   37fe0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   37fe4:	cmp	w0, #0x0
   37fe8:	b.ne	38000 <PyInit__decimal@@Base+0x20328>  // b.any
   37fec:	mov	w2, #0x4                   	// #4
   37ff0:	mov	w1, #0x0                   	// #0
   37ff4:	ldr	x0, [sp, #56]
   37ff8:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   37ffc:	b	380ec <PyInit__decimal@@Base+0x20414>
   38000:	add	x0, sp, #0x4a8
   38004:	add	x0, x0, #0x1c
   38008:	mov	x1, x0
   3800c:	ldr	x0, [sp, #40]
   38010:	bl	28314 <PyInit__decimal@@Base+0x1063c>
   38014:	str	x0, [sp, #1304]
   38018:	ldr	w0, [sp, #1220]
   3801c:	and	w0, w0, #0x100
   38020:	cmp	w0, #0x0
   38024:	b.eq	38080 <PyInit__decimal@@Base+0x203a8>  // b.none
   38028:	add	x0, sp, #0x48
   3802c:	ldr	x2, [sp, #16]
   38030:	ldr	x1, [sp, #40]
   38034:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   38038:	cmp	w0, #0x0
   3803c:	b.ne	38054 <PyInit__decimal@@Base+0x2037c>  // b.any
   38040:	mov	w2, #0x4                   	// #4
   38044:	mov	w1, #0x0                   	// #0
   38048:	ldr	x0, [sp, #56]
   3804c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   38050:	b	380ec <PyInit__decimal@@Base+0x20414>
   38054:	add	x2, sp, #0x4a8
   38058:	add	x1, sp, #0x48
   3805c:	add	x0, sp, #0x278
   38060:	ldr	x5, [sp, #16]
   38064:	mov	x4, x2
   38068:	ldrb	w3, [sp, #39]
   3806c:	mov	x2, x1
   38070:	mov	x1, x0
   38074:	ldr	x0, [sp, #56]
   38078:	bl	37c38 <PyInit__decimal@@Base+0x1ff60>
   3807c:	b	380a8 <PyInit__decimal@@Base+0x203d0>
   38080:	ldr	x1, [sp, #1304]
   38084:	add	x2, sp, #0x4a8
   38088:	add	x0, sp, #0x278
   3808c:	ldr	x5, [sp, #16]
   38090:	mov	x4, x2
   38094:	ldrb	w3, [sp, #39]
   38098:	mov	x2, x1
   3809c:	mov	x1, x0
   380a0:	ldr	x0, [sp, #56]
   380a4:	bl	37a74 <PyInit__decimal@@Base+0x1fd9c>
   380a8:	ldr	x0, [sp, #56]
   380ac:	str	x0, [sp, #1288]
   380b0:	ldr	x0, [sp, #1288]
   380b4:	ldrb	w0, [x0]
   380b8:	and	w0, w0, #0x2
   380bc:	cmp	w0, #0x0
   380c0:	b.eq	380e8 <PyInit__decimal@@Base+0x20410>  // b.none
   380c4:	mov	x3, #0x1                   	// #1
   380c8:	movk	x3, #0x4ec8, lsl #16
   380cc:	movk	x3, #0x6d67, lsl #32
   380d0:	movk	x3, #0x1bc1, lsl #48
   380d4:	mov	x2, #0x1                   	// #1
   380d8:	ldrb	w1, [sp, #39]
   380dc:	ldr	x0, [sp, #56]
   380e0:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   380e4:	b	380ec <PyInit__decimal@@Base+0x20414>
   380e8:	nop
   380ec:	add	x0, sp, #0x278
   380f0:	str	x0, [sp, #1256]
   380f4:	ldr	x0, [sp, #1256]
   380f8:	str	x0, [sp, #1248]
   380fc:	ldr	x0, [sp, #1248]
   38100:	ldrb	w0, [x0]
   38104:	and	w0, w0, #0xe0
   38108:	cmp	w0, #0x0
   3810c:	cset	w0, eq  // eq = none
   38110:	and	w0, w0, #0xff
   38114:	cmp	w0, #0x0
   38118:	b.eq	38134 <PyInit__decimal@@Base+0x2045c>  // b.none
   3811c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38120:	add	x0, x0, #0x6f8
   38124:	ldr	x1, [x0]
   38128:	ldr	x0, [sp, #1256]
   3812c:	ldr	x0, [x0, #40]
   38130:	blr	x1
   38134:	ldr	x0, [sp, #1256]
   38138:	str	x0, [sp, #1240]
   3813c:	ldr	x0, [sp, #1240]
   38140:	ldrb	w0, [x0]
   38144:	and	w0, w0, #0x10
   38148:	cmp	w0, #0x0
   3814c:	cset	w0, eq  // eq = none
   38150:	and	w0, w0, #0xff
   38154:	cmp	w0, #0x0
   38158:	b.eq	38170 <PyInit__decimal@@Base+0x20498>  // b.none
   3815c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38160:	add	x0, x0, #0x6f8
   38164:	ldr	x1, [x0]
   38168:	ldr	x0, [sp, #1256]
   3816c:	blr	x1
   38170:	nop
   38174:	add	x0, sp, #0x48
   38178:	str	x0, [sp, #1280]
   3817c:	ldr	x0, [sp, #1280]
   38180:	str	x0, [sp, #1272]
   38184:	ldr	x0, [sp, #1272]
   38188:	ldrb	w0, [x0]
   3818c:	and	w0, w0, #0xe0
   38190:	cmp	w0, #0x0
   38194:	cset	w0, eq  // eq = none
   38198:	and	w0, w0, #0xff
   3819c:	cmp	w0, #0x0
   381a0:	b.eq	381bc <PyInit__decimal@@Base+0x204e4>  // b.none
   381a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   381a8:	add	x0, x0, #0x6f8
   381ac:	ldr	x1, [x0]
   381b0:	ldr	x0, [sp, #1280]
   381b4:	ldr	x0, [x0, #40]
   381b8:	blr	x1
   381bc:	ldr	x0, [sp, #1280]
   381c0:	str	x0, [sp, #1264]
   381c4:	ldr	x0, [sp, #1264]
   381c8:	ldrb	w0, [x0]
   381cc:	and	w0, w0, #0x10
   381d0:	cmp	w0, #0x0
   381d4:	cset	w0, eq  // eq = none
   381d8:	and	w0, w0, #0xff
   381dc:	cmp	w0, #0x0
   381e0:	b.eq	381f8 <PyInit__decimal@@Base+0x20520>  // b.none
   381e4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   381e8:	add	x0, x0, #0x6f8
   381ec:	ldr	x1, [x0]
   381f0:	ldr	x0, [sp, #1280]
   381f4:	blr	x1
   381f8:	nop
   381fc:	ldr	x2, [sp, #16]
   38200:	ldr	x1, [sp, #24]
   38204:	ldr	x0, [sp, #56]
   38208:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3820c:	nop
   38210:	ldp	x29, x30, [sp]
   38214:	add	sp, sp, #0x520
   38218:	ret
   3821c:	stp	x29, x30, [sp, #-96]!
   38220:	mov	x29, sp
   38224:	str	x0, [sp, #56]
   38228:	str	x1, [sp, #48]
   3822c:	strb	w2, [sp, #47]
   38230:	str	x3, [sp, #32]
   38234:	str	x4, [sp, #24]
   38238:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3823c:	add	x1, x0, #0xc58
   38240:	ldr	x0, [sp, #48]
   38244:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   38248:	str	w0, [sp, #92]
   3824c:	ldr	w0, [sp, #92]
   38250:	cmp	w0, #0x0
   38254:	b.ne	382f0 <PyInit__decimal@@Base+0x20618>  // b.any
   38258:	ldr	x0, [sp, #32]
   3825c:	ldr	x0, [x0]
   38260:	sub	x0, x0, #0x1
   38264:	str	x0, [sp, #80]
   38268:	ldr	x3, [sp, #24]
   3826c:	ldr	x2, [sp, #80]
   38270:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   38274:	add	x1, x0, #0xc58
   38278:	ldr	x0, [sp, #56]
   3827c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   38280:	ldr	x0, [sp, #80]
   38284:	neg	x1, x0
   38288:	ldr	x0, [sp, #56]
   3828c:	str	x1, [x0, #8]
   38290:	ldr	x0, [sp, #56]
   38294:	str	x0, [sp, #72]
   38298:	ldrb	w0, [sp, #47]
   3829c:	strb	w0, [sp, #71]
   382a0:	ldr	x0, [sp, #72]
   382a4:	ldrb	w0, [x0]
   382a8:	and	w0, w0, #0xfffffff0
   382ac:	and	w1, w0, #0xff
   382b0:	ldr	x0, [sp, #72]
   382b4:	strb	w1, [x0]
   382b8:	ldr	x0, [sp, #72]
   382bc:	ldrb	w1, [x0]
   382c0:	ldrb	w0, [sp, #71]
   382c4:	orr	w0, w1, w0
   382c8:	and	w1, w0, #0xff
   382cc:	ldr	x0, [sp, #72]
   382d0:	strb	w1, [x0]
   382d4:	nop
   382d8:	ldr	x0, [sp, #24]
   382dc:	ldr	w1, [x0]
   382e0:	mov	w0, #0x1040                	// #4160
   382e4:	orr	w1, w1, w0
   382e8:	ldr	x0, [sp, #24]
   382ec:	str	w1, [x0]
   382f0:	ldr	w0, [sp, #92]
   382f4:	ldp	x29, x30, [sp], #96
   382f8:	ret
   382fc:	stp	x29, x30, [sp, #-112]!
   38300:	mov	x29, sp
   38304:	str	x0, [sp, #56]
   38308:	str	x1, [sp, #48]
   3830c:	str	x2, [sp, #40]
   38310:	strb	w3, [sp, #39]
   38314:	str	x4, [sp, #24]
   38318:	str	x5, [sp, #16]
   3831c:	str	wzr, [sp, #64]
   38320:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   38324:	add	x1, x0, #0xc58
   38328:	ldr	x0, [sp, #48]
   3832c:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   38330:	str	w0, [sp, #100]
   38334:	ldr	w0, [sp, #100]
   38338:	cmp	w0, #0x0
   3833c:	b.ne	3851c <PyInit__decimal@@Base+0x20844>  // b.any
   38340:	ldr	x0, [sp, #40]
   38344:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   38348:	cmp	w0, #0x0
   3834c:	b.eq	38440 <PyInit__decimal@@Base+0x20768>  // b.none
   38350:	ldr	x0, [sp, #40]
   38354:	str	x0, [sp, #88]
   38358:	ldr	x0, [sp, #88]
   3835c:	ldrb	w0, [x0]
   38360:	and	w0, w0, #0x1
   38364:	cmp	w0, #0x0
   38368:	b.eq	38388 <PyInit__decimal@@Base+0x206b0>  // b.none
   3836c:	mov	x3, #0x0                   	// #0
   38370:	mov	x2, #0x1                   	// #1
   38374:	ldrb	w1, [sp, #39]
   38378:	ldr	x0, [sp, #56]
   3837c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38380:	mov	w0, #0x0                   	// #0
   38384:	b	38520 <PyInit__decimal@@Base+0x20848>
   38388:	ldr	x0, [sp, #48]
   3838c:	ldr	x0, [x0, #8]
   38390:	neg	x0, x0
   38394:	add	x1, sp, #0x40
   38398:	mov	x4, x1
   3839c:	ldr	x3, [sp, #24]
   383a0:	mov	x2, x0
   383a4:	ldr	x1, [sp, #40]
   383a8:	ldr	x0, [sp, #56]
   383ac:	bl	36ea4 <PyInit__decimal@@Base+0x1f1cc>
   383b0:	ldr	w1, [sp, #64]
   383b4:	mov	w0, #0x3be                 	// #958
   383b8:	and	w0, w1, w0
   383bc:	cmp	w0, #0x0
   383c0:	b.eq	383ec <PyInit__decimal@@Base+0x20714>  // b.none
   383c4:	ldr	x0, [sp, #16]
   383c8:	ldr	w1, [x0]
   383cc:	ldr	w2, [sp, #64]
   383d0:	mov	w0, #0x3be                 	// #958
   383d4:	and	w0, w2, w0
   383d8:	orr	w1, w1, w0
   383dc:	ldr	x0, [sp, #16]
   383e0:	str	w1, [x0]
   383e4:	mov	w0, #0x0                   	// #0
   383e8:	b	38520 <PyInit__decimal@@Base+0x20848>
   383ec:	add	x0, sp, #0x40
   383f0:	mov	x1, x0
   383f4:	ldr	x0, [sp, #56]
   383f8:	bl	2833c <PyInit__decimal@@Base+0x10664>
   383fc:	str	x0, [sp, #104]
   38400:	ldr	x0, [sp, #24]
   38404:	ldr	x0, [x0]
   38408:	sub	x0, x0, #0x1
   3840c:	ldr	x1, [sp, #104]
   38410:	cmp	x1, x0
   38414:	b.le	3849c <PyInit__decimal@@Base+0x207c4>
   38418:	ldr	x0, [sp, #24]
   3841c:	ldr	x0, [x0]
   38420:	sub	x0, x0, #0x1
   38424:	str	x0, [sp, #104]
   38428:	ldr	x0, [sp, #16]
   3842c:	ldr	w0, [x0]
   38430:	orr	w1, w0, #0x1000
   38434:	ldr	x0, [sp, #16]
   38438:	str	w1, [x0]
   3843c:	b	3849c <PyInit__decimal@@Base+0x207c4>
   38440:	ldr	x0, [sp, #48]
   38444:	str	x0, [sp, #80]
   38448:	ldr	x0, [sp, #80]
   3844c:	ldrb	w0, [x0]
   38450:	and	w0, w0, #0x1
   38454:	cmp	w0, #0x0
   38458:	cset	w0, eq  // eq = none
   3845c:	and	w0, w0, #0xff
   38460:	cmp	w0, #0x0
   38464:	b.eq	38494 <PyInit__decimal@@Base+0x207bc>  // b.none
   38468:	ldr	x0, [sp, #24]
   3846c:	ldr	x0, [x0]
   38470:	sub	x0, x0, #0x1
   38474:	str	x0, [sp, #104]
   38478:	ldr	x0, [sp, #16]
   3847c:	ldr	w1, [x0]
   38480:	mov	w0, #0x1040                	// #4160
   38484:	orr	w1, w1, w0
   38488:	ldr	x0, [sp, #16]
   3848c:	str	w1, [x0]
   38490:	b	3849c <PyInit__decimal@@Base+0x207c4>
   38494:	mov	w0, #0xfffffffe            	// #-2
   38498:	b	38520 <PyInit__decimal@@Base+0x20848>
   3849c:	ldr	x3, [sp, #16]
   384a0:	ldr	x2, [sp, #104]
   384a4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   384a8:	add	x1, x0, #0xc58
   384ac:	ldr	x0, [sp, #56]
   384b0:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   384b4:	cmp	w0, #0x0
   384b8:	b.ne	384c4 <PyInit__decimal@@Base+0x207ec>  // b.any
   384bc:	mov	w0, #0x0                   	// #0
   384c0:	b	38520 <PyInit__decimal@@Base+0x20848>
   384c4:	ldr	x0, [sp, #104]
   384c8:	neg	x1, x0
   384cc:	ldr	x0, [sp, #56]
   384d0:	str	x1, [x0, #8]
   384d4:	ldr	x0, [sp, #56]
   384d8:	str	x0, [sp, #72]
   384dc:	ldrb	w0, [sp, #39]
   384e0:	strb	w0, [sp, #71]
   384e4:	ldr	x0, [sp, #72]
   384e8:	ldrb	w0, [x0]
   384ec:	and	w0, w0, #0xfffffff0
   384f0:	and	w1, w0, #0xff
   384f4:	ldr	x0, [sp, #72]
   384f8:	strb	w1, [x0]
   384fc:	ldr	x0, [sp, #72]
   38500:	ldrb	w1, [x0]
   38504:	ldrb	w0, [sp, #71]
   38508:	orr	w0, w1, w0
   3850c:	and	w1, w0, #0xff
   38510:	ldr	x0, [sp, #72]
   38514:	strb	w1, [x0]
   38518:	nop
   3851c:	ldr	w0, [sp, #100]
   38520:	ldp	x29, x30, [sp], #112
   38524:	ret
   38528:	sub	sp, sp, #0x2e0
   3852c:	stp	x29, x30, [sp]
   38530:	mov	x29, sp
   38534:	str	x0, [sp, #24]
   38538:	str	x1, [sp, #16]
   3853c:	mov	w0, #0x30                  	// #48
   38540:	strb	w0, [sp, #40]
   38544:	str	xzr, [sp, #48]
   38548:	str	xzr, [sp, #56]
   3854c:	str	xzr, [sp, #64]
   38550:	mov	x0, #0x40                  	// #64
   38554:	str	x0, [sp, #72]
   38558:	add	x0, sp, #0x58
   3855c:	str	x0, [sp, #80]
   38560:	ldr	x0, [sp, #24]
   38564:	str	x0, [sp, #712]
   38568:	ldr	x0, [sp, #712]
   3856c:	ldr	x1, [x0, #8]
   38570:	ldr	x0, [sp, #712]
   38574:	ldr	x0, [x0, #16]
   38578:	add	x0, x1, x0
   3857c:	sub	x0, x0, #0x1
   38580:	str	x0, [sp, #728]
   38584:	ldr	x0, [sp, #728]
   38588:	cmp	x0, #0x0
   3858c:	b.le	385a4 <PyInit__decimal@@Base+0x208cc>
   38590:	ldr	x0, [sp, #728]
   38594:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   38598:	sub	w0, w0, #0x1
   3859c:	sxtw	x0, w0
   385a0:	b	3876c <PyInit__decimal@@Base+0x20a94>
   385a4:	ldr	x0, [sp, #728]
   385a8:	cmn	x0, #0x1
   385ac:	b.ge	385c8 <PyInit__decimal@@Base+0x208f0>  // b.tcont
   385b0:	ldr	x0, [sp, #728]
   385b4:	add	x0, x0, #0x1
   385b8:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   385bc:	sub	w0, w0, #0x1
   385c0:	sxtw	x0, w0
   385c4:	b	3876c <PyInit__decimal@@Base+0x20a94>
   385c8:	add	x0, sp, #0x258
   385cc:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   385d0:	add	x0, sp, #0x258
   385d4:	add	x5, sp, #0x28
   385d8:	ldr	x4, [sp, #16]
   385dc:	mov	x3, x0
   385e0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   385e4:	add	x2, x0, #0xc58
   385e8:	ldr	x1, [sp, #24]
   385ec:	mov	x0, x5
   385f0:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   385f4:	add	x0, sp, #0x28
   385f8:	str	x0, [sp, #704]
   385fc:	ldr	x0, [sp, #704]
   38600:	ldrb	w0, [x0]
   38604:	and	w0, w0, #0xe
   38608:	cmp	w0, #0x0
   3860c:	b.eq	386a0 <PyInit__decimal@@Base+0x209c8>  // b.none
   38610:	add	x0, sp, #0x28
   38614:	str	x0, [sp, #696]
   38618:	ldr	x0, [sp, #696]
   3861c:	str	x0, [sp, #688]
   38620:	ldr	x0, [sp, #688]
   38624:	ldrb	w0, [x0]
   38628:	and	w0, w0, #0xe0
   3862c:	cmp	w0, #0x0
   38630:	cset	w0, eq  // eq = none
   38634:	and	w0, w0, #0xff
   38638:	cmp	w0, #0x0
   3863c:	b.eq	38658 <PyInit__decimal@@Base+0x20980>  // b.none
   38640:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38644:	add	x0, x0, #0x6f8
   38648:	ldr	x1, [x0]
   3864c:	ldr	x0, [sp, #696]
   38650:	ldr	x0, [x0, #40]
   38654:	blr	x1
   38658:	ldr	x0, [sp, #696]
   3865c:	str	x0, [sp, #680]
   38660:	ldr	x0, [sp, #680]
   38664:	ldrb	w0, [x0]
   38668:	and	w0, w0, #0x10
   3866c:	cmp	w0, #0x0
   38670:	cset	w0, eq  // eq = none
   38674:	and	w0, w0, #0xff
   38678:	cmp	w0, #0x0
   3867c:	b.eq	38694 <PyInit__decimal@@Base+0x209bc>  // b.none
   38680:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38684:	add	x0, x0, #0x6f8
   38688:	ldr	x1, [x0]
   3868c:	ldr	x0, [sp, #696]
   38690:	blr	x1
   38694:	nop
   38698:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3869c:	b	3876c <PyInit__decimal@@Base+0x20a94>
   386a0:	add	x0, sp, #0x28
   386a4:	str	x0, [sp, #648]
   386a8:	ldr	x0, [sp, #648]
   386ac:	ldr	x1, [x0, #8]
   386b0:	ldr	x0, [sp, #648]
   386b4:	ldr	x0, [x0, #16]
   386b8:	add	x0, x1, x0
   386bc:	sub	x0, x0, #0x1
   386c0:	str	x0, [sp, #720]
   386c4:	add	x0, sp, #0x28
   386c8:	str	x0, [sp, #672]
   386cc:	ldr	x0, [sp, #672]
   386d0:	str	x0, [sp, #664]
   386d4:	ldr	x0, [sp, #664]
   386d8:	ldrb	w0, [x0]
   386dc:	and	w0, w0, #0xe0
   386e0:	cmp	w0, #0x0
   386e4:	cset	w0, eq  // eq = none
   386e8:	and	w0, w0, #0xff
   386ec:	cmp	w0, #0x0
   386f0:	b.eq	3870c <PyInit__decimal@@Base+0x20a34>  // b.none
   386f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   386f8:	add	x0, x0, #0x6f8
   386fc:	ldr	x1, [x0]
   38700:	ldr	x0, [sp, #672]
   38704:	ldr	x0, [x0, #40]
   38708:	blr	x1
   3870c:	ldr	x0, [sp, #672]
   38710:	str	x0, [sp, #656]
   38714:	ldr	x0, [sp, #656]
   38718:	ldrb	w0, [x0]
   3871c:	and	w0, w0, #0x10
   38720:	cmp	w0, #0x0
   38724:	cset	w0, eq  // eq = none
   38728:	and	w0, w0, #0xff
   3872c:	cmp	w0, #0x0
   38730:	b.eq	38748 <PyInit__decimal@@Base+0x20a70>  // b.none
   38734:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38738:	add	x0, x0, #0x6f8
   3873c:	ldr	x1, [x0]
   38740:	ldr	x0, [sp, #672]
   38744:	blr	x1
   38748:	nop
   3874c:	ldr	x0, [sp, #728]
   38750:	cmp	x0, #0x0
   38754:	b.ne	38764 <PyInit__decimal@@Base+0x20a8c>  // b.any
   38758:	ldr	x0, [sp, #720]
   3875c:	sub	x0, x0, #0x2
   38760:	b	3876c <PyInit__decimal@@Base+0x20a94>
   38764:	ldr	x0, [sp, #720]
   38768:	sub	x0, x0, #0x1
   3876c:	ldp	x29, x30, [sp]
   38770:	add	sp, sp, #0x2e0
   38774:	ret
   38778:	stp	x29, x30, [sp, #-192]!
   3877c:	mov	x29, sp
   38780:	str	x0, [sp, #56]
   38784:	str	x1, [sp, #48]
   38788:	str	x2, [sp, #40]
   3878c:	strb	w3, [sp, #39]
   38790:	str	x4, [sp, #24]
   38794:	str	x5, [sp, #16]
   38798:	ldr	x0, [sp, #48]
   3879c:	ldrb	w0, [x0]
   387a0:	sxtb	w0, w0
   387a4:	and	w0, w0, #0xf
   387a8:	sxtb	w1, w0
   387ac:	mov	w0, #0x50                  	// #80
   387b0:	orr	w0, w1, w0
   387b4:	sxtb	w0, w0
   387b8:	and	w0, w0, #0xff
   387bc:	strb	w0, [sp, #64]
   387c0:	ldr	x0, [sp, #48]
   387c4:	ldr	x0, [x0, #8]
   387c8:	str	x0, [sp, #72]
   387cc:	ldr	x0, [sp, #48]
   387d0:	ldr	x0, [x0, #16]
   387d4:	str	x0, [sp, #80]
   387d8:	ldr	x0, [sp, #48]
   387dc:	ldr	x0, [x0, #24]
   387e0:	str	x0, [sp, #88]
   387e4:	ldr	x0, [sp, #48]
   387e8:	ldr	x0, [x0, #32]
   387ec:	str	x0, [sp, #96]
   387f0:	ldr	x0, [sp, #48]
   387f4:	ldr	x0, [x0, #40]
   387f8:	str	x0, [sp, #104]
   387fc:	add	x0, sp, #0x40
   38800:	str	x0, [sp, #144]
   38804:	ldr	x0, [sp, #144]
   38808:	ldrb	w0, [x0]
   3880c:	and	w0, w0, #0xfffffffe
   38810:	and	w1, w0, #0xff
   38814:	ldr	x0, [sp, #144]
   38818:	strb	w1, [x0]
   3881c:	nop
   38820:	ldr	x0, [sp, #40]
   38824:	str	x0, [sp, #152]
   38828:	ldr	x0, [sp, #152]
   3882c:	ldr	x1, [x0, #8]
   38830:	ldr	x0, [sp, #152]
   38834:	ldr	x0, [x0, #16]
   38838:	add	x0, x1, x0
   3883c:	sub	x0, x0, #0x1
   38840:	str	x0, [sp, #184]
   38844:	add	x0, sp, #0x40
   38848:	ldr	x1, [sp, #16]
   3884c:	bl	38528 <PyInit__decimal@@Base+0x20850>
   38850:	str	x0, [sp, #176]
   38854:	ldr	x1, [sp, #176]
   38858:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3885c:	cmp	x1, x0
   38860:	b.ne	3887c <PyInit__decimal@@Base+0x20ba4>  // b.any
   38864:	ldr	x2, [sp, #16]
   38868:	mov	w1, #0x200                 	// #512
   3886c:	ldr	x0, [sp, #56]
   38870:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   38874:	mov	w0, #0x1                   	// #1
   38878:	b	389d8 <PyInit__decimal@@Base+0x20d00>
   3887c:	add	x0, sp, #0x40
   38880:	str	x0, [sp, #128]
   38884:	ldr	x0, [sp, #128]
   38888:	ldr	x1, [x0, #8]
   3888c:	ldr	x0, [sp, #128]
   38890:	ldr	x0, [x0, #16]
   38894:	add	x0, x1, x0
   38898:	sub	x0, x0, #0x1
   3889c:	lsr	x0, x0, #63
   388a0:	and	w0, w0, #0xff
   388a4:	sxtb	w1, w0
   388a8:	ldr	x0, [sp, #40]
   388ac:	str	x0, [sp, #136]
   388b0:	ldr	x0, [sp, #136]
   388b4:	ldrb	w0, [x0]
   388b8:	and	w0, w0, #0x1
   388bc:	and	w0, w0, #0xff
   388c0:	sxtb	w0, w0
   388c4:	eor	w0, w1, w0
   388c8:	sxtb	w0, w0
   388cc:	strb	w0, [sp, #175]
   388d0:	ldrb	w0, [sp, #175]
   388d4:	cmp	w0, #0x0
   388d8:	b.ne	38940 <PyInit__decimal@@Base+0x20c68>  // b.any
   388dc:	ldr	x0, [sp, #24]
   388e0:	ldr	x0, [x0, #8]
   388e4:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   388e8:	sxtw	x0, w0
   388ec:	str	x0, [sp, #160]
   388f0:	ldr	x1, [sp, #176]
   388f4:	ldr	x0, [sp, #184]
   388f8:	add	x0, x1, x0
   388fc:	ldr	x1, [sp, #160]
   38900:	cmp	x1, x0
   38904:	b.ge	389d4 <PyInit__decimal@@Base+0x20cfc>  // b.tcont
   38908:	mov	x3, #0x1                   	// #1
   3890c:	movk	x3, #0x4ec8, lsl #16
   38910:	movk	x3, #0x6d67, lsl #32
   38914:	movk	x3, #0x1bc1, lsl #48
   38918:	mov	x2, #0x1                   	// #1
   3891c:	ldrb	w1, [sp, #39]
   38920:	ldr	x0, [sp, #56]
   38924:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38928:	ldr	x2, [sp, #16]
   3892c:	ldr	x1, [sp, #24]
   38930:	ldr	x0, [sp, #56]
   38934:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   38938:	mov	w0, #0x1                   	// #1
   3893c:	b	389d8 <PyInit__decimal@@Base+0x20d00>
   38940:	ldr	x0, [sp, #24]
   38944:	str	x0, [sp, #120]
   38948:	ldr	x0, [sp, #120]
   3894c:	ldr	x1, [x0, #16]
   38950:	ldr	x0, [sp, #120]
   38954:	ldr	x0, [x0]
   38958:	sub	x0, x1, x0
   3895c:	add	x0, x0, #0x1
   38960:	bl	250a0 <PyInit__decimal@@Base+0xd3c8>
   38964:	sxtw	x0, w0
   38968:	str	x0, [sp, #160]
   3896c:	ldr	x1, [sp, #176]
   38970:	ldr	x0, [sp, #184]
   38974:	add	x0, x1, x0
   38978:	ldr	x1, [sp, #160]
   3897c:	cmp	x1, x0
   38980:	b.ge	389d4 <PyInit__decimal@@Base+0x20cfc>  // b.tcont
   38984:	ldr	x0, [sp, #24]
   38988:	str	x0, [sp, #112]
   3898c:	ldr	x0, [sp, #112]
   38990:	ldr	x1, [x0, #16]
   38994:	ldr	x0, [sp, #112]
   38998:	ldr	x0, [x0]
   3899c:	sub	x0, x1, x0
   389a0:	add	x0, x0, #0x1
   389a4:	sub	x0, x0, #0x1
   389a8:	mov	x3, x0
   389ac:	mov	x2, #0x1                   	// #1
   389b0:	ldrb	w1, [sp, #39]
   389b4:	ldr	x0, [sp, #56]
   389b8:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   389bc:	ldr	x2, [sp, #16]
   389c0:	ldr	x1, [sp, #24]
   389c4:	ldr	x0, [sp, #56]
   389c8:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   389cc:	mov	w0, #0x1                   	// #1
   389d0:	b	389d8 <PyInit__decimal@@Base+0x20d00>
   389d4:	mov	w0, #0x0                   	// #0
   389d8:	ldp	x29, x30, [sp], #192
   389dc:	ret
   389e0:	sub	sp, sp, #0x2c0
   389e4:	stp	x29, x30, [sp]
   389e8:	mov	x29, sp
   389ec:	str	x0, [sp, #56]
   389f0:	str	x1, [sp, #48]
   389f4:	str	x2, [sp, #40]
   389f8:	str	x3, [sp, #32]
   389fc:	str	x4, [sp, #24]
   38a00:	mov	w0, #0x30                  	// #48
   38a04:	strb	w0, [sp, #72]
   38a08:	str	xzr, [sp, #80]
   38a0c:	str	xzr, [sp, #88]
   38a10:	str	xzr, [sp, #96]
   38a14:	mov	x0, #0x40                  	// #64
   38a18:	str	x0, [sp, #104]
   38a1c:	add	x0, sp, #0x78
   38a20:	str	x0, [sp, #112]
   38a24:	add	x0, sp, #0x48
   38a28:	ldr	x2, [sp, #24]
   38a2c:	ldr	x1, [sp, #40]
   38a30:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   38a34:	cmp	w0, #0x0
   38a38:	b.ne	38a50 <PyInit__decimal@@Base+0x20d78>  // b.any
   38a3c:	ldr	x2, [sp, #24]
   38a40:	mov	w1, #0x200                 	// #512
   38a44:	ldr	x0, [sp, #56]
   38a48:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   38a4c:	b	38bb4 <PyInit__decimal@@Base+0x20edc>
   38a50:	add	x0, sp, #0x278
   38a54:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   38a58:	ldr	x0, [sp, #32]
   38a5c:	ldr	x1, [x0]
   38a60:	ldr	x0, [sp, #48]
   38a64:	ldr	x0, [x0, #16]
   38a68:	cmp	x1, x0
   38a6c:	csel	x0, x1, x0, ge  // ge = tcont
   38a70:	str	x0, [sp, #632]
   38a74:	ldr	x0, [sp, #632]
   38a78:	add	x0, x0, #0x17
   38a7c:	str	x0, [sp, #632]
   38a80:	mov	w0, #0x6                   	// #6
   38a84:	str	w0, [sp, #668]
   38a88:	ldr	x0, [sp, #32]
   38a8c:	ldr	w0, [x0, #44]
   38a90:	str	w0, [sp, #676]
   38a94:	add	x0, sp, #0x278
   38a98:	add	x1, x0, #0x1c
   38a9c:	add	x0, sp, #0x278
   38aa0:	mov	x3, x1
   38aa4:	mov	x2, x0
   38aa8:	ldr	x1, [sp, #48]
   38aac:	ldr	x0, [sp, #56]
   38ab0:	bl	33b74 <PyInit__decimal@@Base+0x1be9c>
   38ab4:	add	x0, sp, #0x278
   38ab8:	add	x2, x0, #0x1c
   38abc:	add	x1, sp, #0x278
   38ac0:	add	x0, sp, #0x48
   38ac4:	mov	x4, x2
   38ac8:	mov	x3, x1
   38acc:	mov	x2, x0
   38ad0:	ldr	x1, [sp, #56]
   38ad4:	ldr	x0, [sp, #56]
   38ad8:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   38adc:	add	x0, sp, #0x278
   38ae0:	ldr	x3, [sp, #24]
   38ae4:	mov	x2, x0
   38ae8:	ldr	x1, [sp, #56]
   38aec:	ldr	x0, [sp, #56]
   38af0:	bl	327f8 <PyInit__decimal@@Base+0x1ab20>
   38af4:	add	x0, sp, #0x48
   38af8:	str	x0, [sp, #696]
   38afc:	ldr	x0, [sp, #696]
   38b00:	str	x0, [sp, #688]
   38b04:	ldr	x0, [sp, #688]
   38b08:	ldrb	w0, [x0]
   38b0c:	and	w0, w0, #0xe0
   38b10:	cmp	w0, #0x0
   38b14:	cset	w0, eq  // eq = none
   38b18:	and	w0, w0, #0xff
   38b1c:	cmp	w0, #0x0
   38b20:	b.eq	38b3c <PyInit__decimal@@Base+0x20e64>  // b.none
   38b24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38b28:	add	x0, x0, #0x6f8
   38b2c:	ldr	x1, [x0]
   38b30:	ldr	x0, [sp, #696]
   38b34:	ldr	x0, [x0, #40]
   38b38:	blr	x1
   38b3c:	ldr	x0, [sp, #696]
   38b40:	str	x0, [sp, #680]
   38b44:	ldr	x0, [sp, #680]
   38b48:	ldrb	w0, [x0]
   38b4c:	and	w0, w0, #0x10
   38b50:	cmp	w0, #0x0
   38b54:	cset	w0, eq  // eq = none
   38b58:	and	w0, w0, #0xff
   38b5c:	cmp	w0, #0x0
   38b60:	b.eq	38b78 <PyInit__decimal@@Base+0x20ea0>  // b.none
   38b64:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   38b68:	add	x0, x0, #0x6f8
   38b6c:	ldr	x1, [x0]
   38b70:	ldr	x0, [sp, #696]
   38b74:	blr	x1
   38b78:	nop
   38b7c:	ldr	x0, [sp, #24]
   38b80:	ldr	w1, [x0]
   38b84:	ldr	w2, [sp, #660]
   38b88:	mov	w0, #0x3be                 	// #958
   38b8c:	and	w0, w2, w0
   38b90:	orr	w1, w1, w0
   38b94:	ldr	x0, [sp, #24]
   38b98:	str	w1, [x0]
   38b9c:	ldr	x0, [sp, #24]
   38ba0:	ldr	w1, [x0]
   38ba4:	mov	w0, #0x1040                	// #4160
   38ba8:	orr	w1, w1, w0
   38bac:	ldr	x0, [sp, #24]
   38bb0:	str	w1, [x0]
   38bb4:	ldp	x29, x30, [sp]
   38bb8:	add	sp, sp, #0x2c0
   38bbc:	ret
   38bc0:	stp	x29, x30, [sp, #-288]!
   38bc4:	mov	x29, sp
   38bc8:	str	x0, [sp, #56]
   38bcc:	str	x1, [sp, #48]
   38bd0:	str	x2, [sp, #40]
   38bd4:	str	x3, [sp, #32]
   38bd8:	str	x4, [sp, #24]
   38bdc:	strb	wzr, [sp, #287]
   38be0:	str	wzr, [sp, #280]
   38be4:	ldr	x0, [sp, #48]
   38be8:	str	x0, [sp, #256]
   38bec:	ldr	x0, [sp, #256]
   38bf0:	ldrb	w0, [x0]
   38bf4:	and	w0, w0, #0xe
   38bf8:	cmp	w0, #0x0
   38bfc:	b.ne	38c1c <PyInit__decimal@@Base+0x20f44>  // b.any
   38c00:	ldr	x0, [sp, #40]
   38c04:	str	x0, [sp, #248]
   38c08:	ldr	x0, [sp, #248]
   38c0c:	ldrb	w0, [x0]
   38c10:	and	w0, w0, #0xe
   38c14:	cmp	w0, #0x0
   38c18:	b.eq	38c3c <PyInit__decimal@@Base+0x20f64>  // b.none
   38c1c:	ldr	x4, [sp, #24]
   38c20:	ldr	x3, [sp, #32]
   38c24:	ldr	x2, [sp, #40]
   38c28:	ldr	x1, [sp, #48]
   38c2c:	ldr	x0, [sp, #56]
   38c30:	bl	2861c <PyInit__decimal@@Base+0x10944>
   38c34:	cmp	w0, #0x0
   38c38:	b.ne	39174 <PyInit__decimal@@Base+0x2149c>  // b.any
   38c3c:	ldr	x0, [sp, #40]
   38c40:	bl	2701c <PyInit__decimal@@Base+0xf344>
   38c44:	cmp	w0, #0x0
   38c48:	b.eq	38c90 <PyInit__decimal@@Base+0x20fb8>  // b.none
   38c4c:	mov	w0, #0x1                   	// #1
   38c50:	str	w0, [sp, #280]
   38c54:	ldr	x0, [sp, #48]
   38c58:	str	x0, [sp, #240]
   38c5c:	ldr	x0, [sp, #240]
   38c60:	ldrb	w0, [x0]
   38c64:	and	w0, w0, #0x1
   38c68:	cmp	w0, #0x0
   38c6c:	b.eq	38c88 <PyInit__decimal@@Base+0x20fb0>  // b.none
   38c70:	ldr	x0, [sp, #40]
   38c74:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   38c78:	cmp	w0, #0x0
   38c7c:	b.eq	38c88 <PyInit__decimal@@Base+0x20fb0>  // b.none
   38c80:	mov	w0, #0x1                   	// #1
   38c84:	b	38c8c <PyInit__decimal@@Base+0x20fb4>
   38c88:	mov	w0, #0x0                   	// #0
   38c8c:	strb	w0, [sp, #287]
   38c90:	ldr	x0, [sp, #48]
   38c94:	str	x0, [sp, #232]
   38c98:	ldr	x0, [sp, #232]
   38c9c:	str	x0, [sp, #224]
   38ca0:	ldr	x0, [sp, #224]
   38ca4:	ldrb	w0, [x0]
   38ca8:	and	w0, w0, #0xe
   38cac:	cmp	w0, #0x0
   38cb0:	b.ne	38cec <PyInit__decimal@@Base+0x21014>  // b.any
   38cb4:	ldr	x0, [sp, #232]
   38cb8:	str	x0, [sp, #216]
   38cbc:	ldr	x0, [sp, #216]
   38cc0:	ldr	x1, [x0, #40]
   38cc4:	ldr	x0, [sp, #216]
   38cc8:	ldr	x0, [x0, #24]
   38ccc:	lsl	x0, x0, #3
   38cd0:	sub	x0, x0, #0x8
   38cd4:	add	x0, x1, x0
   38cd8:	ldr	x0, [x0]
   38cdc:	cmp	x0, #0x0
   38ce0:	b.ne	38cec <PyInit__decimal@@Base+0x21014>  // b.any
   38ce4:	mov	w0, #0x1                   	// #1
   38ce8:	b	38cf0 <PyInit__decimal@@Base+0x21018>
   38cec:	mov	w0, #0x0                   	// #0
   38cf0:	cmp	w0, #0x0
   38cf4:	b.eq	38dbc <PyInit__decimal@@Base+0x210e4>  // b.none
   38cf8:	ldr	x0, [sp, #40]
   38cfc:	str	x0, [sp, #208]
   38d00:	ldr	x0, [sp, #208]
   38d04:	str	x0, [sp, #200]
   38d08:	ldr	x0, [sp, #200]
   38d0c:	ldrb	w0, [x0]
   38d10:	and	w0, w0, #0xe
   38d14:	cmp	w0, #0x0
   38d18:	b.ne	38d54 <PyInit__decimal@@Base+0x2107c>  // b.any
   38d1c:	ldr	x0, [sp, #208]
   38d20:	str	x0, [sp, #192]
   38d24:	ldr	x0, [sp, #192]
   38d28:	ldr	x1, [x0, #40]
   38d2c:	ldr	x0, [sp, #192]
   38d30:	ldr	x0, [x0, #24]
   38d34:	lsl	x0, x0, #3
   38d38:	sub	x0, x0, #0x8
   38d3c:	add	x0, x1, x0
   38d40:	ldr	x0, [x0]
   38d44:	cmp	x0, #0x0
   38d48:	b.ne	38d54 <PyInit__decimal@@Base+0x2107c>  // b.any
   38d4c:	mov	w0, #0x1                   	// #1
   38d50:	b	38d58 <PyInit__decimal@@Base+0x21080>
   38d54:	mov	w0, #0x0                   	// #0
   38d58:	cmp	w0, #0x0
   38d5c:	b.eq	38d74 <PyInit__decimal@@Base+0x2109c>  // b.none
   38d60:	ldr	x2, [sp, #24]
   38d64:	mov	w1, #0x100                 	// #256
   38d68:	ldr	x0, [sp, #56]
   38d6c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   38d70:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38d74:	ldr	x0, [sp, #40]
   38d78:	str	x0, [sp, #184]
   38d7c:	ldr	x0, [sp, #184]
   38d80:	ldrb	w0, [x0]
   38d84:	and	w0, w0, #0x1
   38d88:	cmp	w0, #0x0
   38d8c:	b.eq	38da4 <PyInit__decimal@@Base+0x210cc>  // b.none
   38d90:	mov	w2, #0x2                   	// #2
   38d94:	ldrb	w1, [sp, #287]
   38d98:	ldr	x0, [sp, #56]
   38d9c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   38da0:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38da4:	mov	x3, #0x0                   	// #0
   38da8:	mov	x2, #0x0                   	// #0
   38dac:	ldrb	w1, [sp, #287]
   38db0:	ldr	x0, [sp, #56]
   38db4:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38db8:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38dbc:	ldr	x0, [sp, #48]
   38dc0:	str	x0, [sp, #176]
   38dc4:	ldr	x0, [sp, #176]
   38dc8:	ldrb	w0, [x0]
   38dcc:	and	w0, w0, #0x1
   38dd0:	cmp	w0, #0x0
   38dd4:	b.eq	38e14 <PyInit__decimal@@Base+0x2113c>  // b.none
   38dd8:	ldr	w0, [sp, #280]
   38ddc:	cmp	w0, #0x0
   38de0:	b.eq	38e00 <PyInit__decimal@@Base+0x21128>  // b.none
   38de4:	ldr	x0, [sp, #40]
   38de8:	str	x0, [sp, #168]
   38dec:	ldr	x0, [sp, #168]
   38df0:	ldrb	w0, [x0]
   38df4:	and	w0, w0, #0x2
   38df8:	cmp	w0, #0x0
   38dfc:	b.eq	38e14 <PyInit__decimal@@Base+0x2113c>  // b.none
   38e00:	ldr	x2, [sp, #24]
   38e04:	mov	w1, #0x100                 	// #256
   38e08:	ldr	x0, [sp, #56]
   38e0c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   38e10:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38e14:	ldr	x0, [sp, #40]
   38e18:	str	x0, [sp, #160]
   38e1c:	ldr	x0, [sp, #160]
   38e20:	ldrb	w0, [x0]
   38e24:	and	w0, w0, #0x2
   38e28:	cmp	w0, #0x0
   38e2c:	b.eq	38ec8 <PyInit__decimal@@Base+0x211f0>  // b.none
   38e30:	ldr	x4, [sp, #24]
   38e34:	ldr	x3, [sp, #32]
   38e38:	ldrb	w2, [sp, #287]
   38e3c:	ldr	x1, [sp, #48]
   38e40:	ldr	x0, [sp, #56]
   38e44:	bl	3821c <PyInit__decimal@@Base+0x20544>
   38e48:	str	w0, [sp, #268]
   38e4c:	ldr	w0, [sp, #268]
   38e50:	cmp	w0, #0x0
   38e54:	b.eq	3917c <PyInit__decimal@@Base+0x214a4>  // b.none
   38e58:	ldr	x0, [sp, #40]
   38e5c:	str	x0, [sp, #152]
   38e60:	ldr	x0, [sp, #152]
   38e64:	str	x0, [sp, #144]
   38e68:	ldr	x0, [sp, #144]
   38e6c:	ldrb	w0, [x0]
   38e70:	and	w1, w0, #0x1
   38e74:	mov	w0, #0x0                   	// #0
   38e78:	sub	w0, w0, w1
   38e7c:	lsl	w0, w0, #1
   38e80:	add	w0, w0, #0x1
   38e84:	ldr	w1, [sp, #268]
   38e88:	mul	w0, w1, w0
   38e8c:	str	w0, [sp, #268]
   38e90:	ldr	w0, [sp, #268]
   38e94:	cmp	w0, #0x0
   38e98:	b.ge	38eb4 <PyInit__decimal@@Base+0x211dc>  // b.tcont
   38e9c:	mov	x3, #0x0                   	// #0
   38ea0:	mov	x2, #0x0                   	// #0
   38ea4:	ldrb	w1, [sp, #287]
   38ea8:	ldr	x0, [sp, #56]
   38eac:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38eb0:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38eb4:	mov	w2, #0x2                   	// #2
   38eb8:	ldrb	w1, [sp, #287]
   38ebc:	ldr	x0, [sp, #56]
   38ec0:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   38ec4:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38ec8:	ldr	x0, [sp, #48]
   38ecc:	str	x0, [sp, #136]
   38ed0:	ldr	x0, [sp, #136]
   38ed4:	ldrb	w0, [x0]
   38ed8:	and	w0, w0, #0x2
   38edc:	cmp	w0, #0x0
   38ee0:	b.eq	38fac <PyInit__decimal@@Base+0x212d4>  // b.none
   38ee4:	ldr	x0, [sp, #40]
   38ee8:	str	x0, [sp, #128]
   38eec:	ldr	x0, [sp, #128]
   38ef0:	str	x0, [sp, #120]
   38ef4:	ldr	x0, [sp, #120]
   38ef8:	ldrb	w0, [x0]
   38efc:	and	w0, w0, #0xe
   38f00:	cmp	w0, #0x0
   38f04:	b.ne	38f40 <PyInit__decimal@@Base+0x21268>  // b.any
   38f08:	ldr	x0, [sp, #128]
   38f0c:	str	x0, [sp, #112]
   38f10:	ldr	x0, [sp, #112]
   38f14:	ldr	x1, [x0, #40]
   38f18:	ldr	x0, [sp, #112]
   38f1c:	ldr	x0, [x0, #24]
   38f20:	lsl	x0, x0, #3
   38f24:	sub	x0, x0, #0x8
   38f28:	add	x0, x1, x0
   38f2c:	ldr	x0, [x0]
   38f30:	cmp	x0, #0x0
   38f34:	b.ne	38f40 <PyInit__decimal@@Base+0x21268>  // b.any
   38f38:	mov	w0, #0x1                   	// #1
   38f3c:	b	38f44 <PyInit__decimal@@Base+0x2126c>
   38f40:	mov	w0, #0x0                   	// #0
   38f44:	cmp	w0, #0x0
   38f48:	b.eq	38f64 <PyInit__decimal@@Base+0x2128c>  // b.none
   38f4c:	mov	x3, #0x0                   	// #0
   38f50:	mov	x2, #0x1                   	// #1
   38f54:	ldrb	w1, [sp, #287]
   38f58:	ldr	x0, [sp, #56]
   38f5c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38f60:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38f64:	ldr	x0, [sp, #40]
   38f68:	str	x0, [sp, #104]
   38f6c:	ldr	x0, [sp, #104]
   38f70:	ldrb	w0, [x0]
   38f74:	and	w0, w0, #0x1
   38f78:	cmp	w0, #0x0
   38f7c:	b.eq	38f98 <PyInit__decimal@@Base+0x212c0>  // b.none
   38f80:	mov	x3, #0x0                   	// #0
   38f84:	mov	x2, #0x0                   	// #0
   38f88:	ldrb	w1, [sp, #287]
   38f8c:	ldr	x0, [sp, #56]
   38f90:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   38f94:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38f98:	mov	w2, #0x2                   	// #2
   38f9c:	ldrb	w1, [sp, #287]
   38fa0:	ldr	x0, [sp, #56]
   38fa4:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   38fa8:	b	39190 <PyInit__decimal@@Base+0x214b8>
   38fac:	ldr	x0, [sp, #40]
   38fb0:	str	x0, [sp, #96]
   38fb4:	ldr	x0, [sp, #96]
   38fb8:	str	x0, [sp, #88]
   38fbc:	ldr	x0, [sp, #88]
   38fc0:	ldrb	w0, [x0]
   38fc4:	and	w0, w0, #0xe
   38fc8:	cmp	w0, #0x0
   38fcc:	b.ne	39008 <PyInit__decimal@@Base+0x21330>  // b.any
   38fd0:	ldr	x0, [sp, #96]
   38fd4:	str	x0, [sp, #80]
   38fd8:	ldr	x0, [sp, #80]
   38fdc:	ldr	x1, [x0, #40]
   38fe0:	ldr	x0, [sp, #80]
   38fe4:	ldr	x0, [x0, #24]
   38fe8:	lsl	x0, x0, #3
   38fec:	sub	x0, x0, #0x8
   38ff0:	add	x0, x1, x0
   38ff4:	ldr	x0, [x0]
   38ff8:	cmp	x0, #0x0
   38ffc:	b.ne	39008 <PyInit__decimal@@Base+0x21330>  // b.any
   39000:	mov	w0, #0x1                   	// #1
   39004:	b	3900c <PyInit__decimal@@Base+0x21334>
   39008:	mov	w0, #0x0                   	// #0
   3900c:	cmp	w0, #0x0
   39010:	b.eq	3902c <PyInit__decimal@@Base+0x21354>  // b.none
   39014:	mov	x3, #0x0                   	// #0
   39018:	mov	x2, #0x1                   	// #1
   3901c:	ldrb	w1, [sp, #287]
   39020:	ldr	x0, [sp, #56]
   39024:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   39028:	b	39190 <PyInit__decimal@@Base+0x214b8>
   3902c:	ldr	x5, [sp, #24]
   39030:	ldr	x4, [sp, #32]
   39034:	ldrb	w3, [sp, #287]
   39038:	ldr	x2, [sp, #40]
   3903c:	ldr	x1, [sp, #48]
   39040:	ldr	x0, [sp, #56]
   39044:	bl	382fc <PyInit__decimal@@Base+0x20624>
   39048:	cmp	w0, #0x0
   3904c:	b.eq	39184 <PyInit__decimal@@Base+0x214ac>  // b.none
   39050:	ldr	x5, [sp, #24]
   39054:	ldr	x4, [sp, #32]
   39058:	ldrb	w3, [sp, #287]
   3905c:	ldr	x2, [sp, #40]
   39060:	ldr	x1, [sp, #48]
   39064:	ldr	x0, [sp, #56]
   39068:	bl	38778 <PyInit__decimal@@Base+0x20aa0>
   3906c:	cmp	w0, #0x0
   39070:	b.ne	3918c <PyInit__decimal@@Base+0x214b4>  // b.any
   39074:	ldr	w0, [sp, #280]
   39078:	cmp	w0, #0x0
   3907c:	b.eq	390a0 <PyInit__decimal@@Base+0x213c8>  // b.none
   39080:	ldr	x5, [sp, #24]
   39084:	ldr	x4, [sp, #32]
   39088:	ldrb	w3, [sp, #287]
   3908c:	ldr	x2, [sp, #40]
   39090:	ldr	x1, [sp, #48]
   39094:	ldr	x0, [sp, #56]
   39098:	bl	37eb4 <PyInit__decimal@@Base+0x201dc>
   3909c:	b	39190 <PyInit__decimal@@Base+0x214b8>
   390a0:	ldr	x4, [sp, #24]
   390a4:	ldr	x3, [sp, #32]
   390a8:	ldr	x2, [sp, #40]
   390ac:	ldr	x1, [sp, #48]
   390b0:	ldr	x0, [sp, #56]
   390b4:	bl	389e0 <PyInit__decimal@@Base+0x20d08>
   390b8:	ldr	x0, [sp, #56]
   390bc:	str	x0, [sp, #72]
   390c0:	ldr	x0, [sp, #72]
   390c4:	ldrb	w0, [x0]
   390c8:	and	w0, w0, #0xe
   390cc:	cmp	w0, #0x0
   390d0:	b.ne	39124 <PyInit__decimal@@Base+0x2144c>  // b.any
   390d4:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   390d8:	add	x1, x0, #0xc58
   390dc:	ldr	x0, [sp, #56]
   390e0:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   390e4:	cmp	w0, #0x0
   390e8:	b.ne	39124 <PyInit__decimal@@Base+0x2144c>  // b.any
   390ec:	ldr	x0, [sp, #32]
   390f0:	ldr	x0, [x0]
   390f4:	sub	x0, x0, #0x1
   390f8:	str	x0, [sp, #272]
   390fc:	ldr	x3, [sp, #24]
   39100:	ldr	x2, [sp, #272]
   39104:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   39108:	add	x1, x0, #0xc58
   3910c:	ldr	x0, [sp, #56]
   39110:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   39114:	ldr	x0, [sp, #272]
   39118:	neg	x1, x0
   3911c:	ldr	x0, [sp, #56]
   39120:	str	x1, [x0, #8]
   39124:	ldr	x0, [sp, #56]
   39128:	str	x0, [sp, #64]
   3912c:	ldr	x0, [sp, #64]
   39130:	ldrb	w0, [x0]
   39134:	and	w0, w0, #0x2
   39138:	cmp	w0, #0x0
   3913c:	b.eq	39160 <PyInit__decimal@@Base+0x21488>  // b.none
   39140:	mov	x3, #0x1                   	// #1
   39144:	movk	x3, #0x4ec8, lsl #16
   39148:	movk	x3, #0x6d67, lsl #32
   3914c:	movk	x3, #0x1bc1, lsl #48
   39150:	mov	x2, #0x1                   	// #1
   39154:	mov	w1, #0x0                   	// #0
   39158:	ldr	x0, [sp, #56]
   3915c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   39160:	ldr	x2, [sp, #24]
   39164:	ldr	x1, [sp, #32]
   39168:	ldr	x0, [sp, #56]
   3916c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   39170:	b	39190 <PyInit__decimal@@Base+0x214b8>
   39174:	nop
   39178:	b	39190 <PyInit__decimal@@Base+0x214b8>
   3917c:	nop
   39180:	b	39190 <PyInit__decimal@@Base+0x214b8>
   39184:	nop
   39188:	b	39190 <PyInit__decimal@@Base+0x214b8>
   3918c:	nop
   39190:	ldp	x29, x30, [sp], #288
   39194:	ret
   39198:	stp	x29, x30, [sp, #-112]!
   3919c:	mov	x29, sp
   391a0:	str	x0, [sp, #56]
   391a4:	str	x1, [sp, #48]
   391a8:	str	x2, [sp, #40]
   391ac:	str	x3, [sp, #32]
   391b0:	str	x4, [sp, #24]
   391b4:	add	x0, sp, #0x40
   391b8:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   391bc:	ldr	x2, [sp, #24]
   391c0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   391c4:	add	x1, x0, #0xc58
   391c8:	ldr	x0, [sp, #56]
   391cc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   391d0:	b	39260 <PyInit__decimal@@Base+0x21588>
   391d4:	ldr	x0, [sp, #40]
   391d8:	and	x0, x0, #0x1
   391dc:	cmp	x0, #0x0
   391e0:	b.eq	3921c <PyInit__decimal@@Base+0x21544>  // b.none
   391e4:	add	x0, sp, #0x40
   391e8:	ldr	x4, [sp, #24]
   391ec:	mov	x3, x0
   391f0:	ldr	x2, [sp, #48]
   391f4:	ldr	x1, [sp, #56]
   391f8:	ldr	x0, [sp, #56]
   391fc:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   39200:	add	x0, sp, #0x40
   39204:	ldr	x4, [sp, #24]
   39208:	mov	x3, x0
   3920c:	ldr	x2, [sp, #32]
   39210:	ldr	x1, [sp, #56]
   39214:	ldr	x0, [sp, #56]
   39218:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   3921c:	add	x0, sp, #0x40
   39220:	ldr	x4, [sp, #24]
   39224:	mov	x3, x0
   39228:	ldr	x2, [sp, #48]
   3922c:	ldr	x1, [sp, #48]
   39230:	ldr	x0, [sp, #48]
   39234:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   39238:	add	x0, sp, #0x40
   3923c:	ldr	x4, [sp, #24]
   39240:	mov	x3, x0
   39244:	ldr	x2, [sp, #32]
   39248:	ldr	x1, [sp, #48]
   3924c:	ldr	x0, [sp, #48]
   39250:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   39254:	ldr	x0, [sp, #40]
   39258:	lsr	x0, x0, #1
   3925c:	str	x0, [sp, #40]
   39260:	ldr	x0, [sp, #40]
   39264:	cmp	x0, #0x0
   39268:	b.ne	391d4 <PyInit__decimal@@Base+0x214fc>  // b.any
   3926c:	nop
   39270:	nop
   39274:	ldp	x29, x30, [sp], #112
   39278:	ret
   3927c:	sub	sp, sp, #0xb10
   39280:	stp	x29, x30, [sp]
   39284:	mov	x29, sp
   39288:	str	x0, [sp, #56]
   3928c:	str	x1, [sp, #48]
   39290:	str	x2, [sp, #40]
   39294:	str	x3, [sp, #32]
   39298:	str	x4, [sp, #24]
   3929c:	str	x5, [sp, #16]
   392a0:	mov	w0, #0x30                  	// #48
   392a4:	strb	w0, [sp, #1856]
   392a8:	str	xzr, [sp, #1864]
   392ac:	str	xzr, [sp, #1872]
   392b0:	str	xzr, [sp, #1880]
   392b4:	mov	x0, #0x40                  	// #64
   392b8:	str	x0, [sp, #1888]
   392bc:	add	x0, sp, #0x770
   392c0:	str	x0, [sp, #1896]
   392c4:	mov	w0, #0x30                  	// #48
   392c8:	strb	w0, [sp, #1296]
   392cc:	str	xzr, [sp, #1304]
   392d0:	str	xzr, [sp, #1312]
   392d4:	str	xzr, [sp, #1320]
   392d8:	mov	x0, #0x40                  	// #64
   392dc:	str	x0, [sp, #1328]
   392e0:	add	x0, sp, #0x540
   392e4:	str	x0, [sp, #1336]
   392e8:	mov	w0, #0x30                  	// #48
   392ec:	strb	w0, [sp, #736]
   392f0:	str	xzr, [sp, #744]
   392f4:	str	xzr, [sp, #752]
   392f8:	str	xzr, [sp, #760]
   392fc:	mov	x0, #0x40                  	// #64
   39300:	str	x0, [sp, #768]
   39304:	add	x0, sp, #0x310
   39308:	str	x0, [sp, #776]
   3930c:	mov	w0, #0x30                  	// #48
   39310:	strb	w0, [sp, #176]
   39314:	str	xzr, [sp, #184]
   39318:	str	xzr, [sp, #192]
   3931c:	str	xzr, [sp, #200]
   39320:	mov	x0, #0x40                  	// #64
   39324:	str	x0, [sp, #208]
   39328:	add	x0, sp, #0xe0
   3932c:	str	x0, [sp, #216]
   39330:	mov	x0, #0x2                   	// #2
   39334:	str	x0, [sp, #168]
   39338:	mov	w0, #0xffffff90            	// #-112
   3933c:	strb	w0, [sp, #120]
   39340:	str	xzr, [sp, #128]
   39344:	mov	x0, #0x1                   	// #1
   39348:	str	x0, [sp, #136]
   3934c:	mov	x0, #0x1                   	// #1
   39350:	str	x0, [sp, #144]
   39354:	mov	x0, #0x1                   	// #1
   39358:	str	x0, [sp, #152]
   3935c:	add	x0, sp, #0xa8
   39360:	str	x0, [sp, #160]
   39364:	ldr	x0, [sp, #48]
   39368:	str	x0, [sp, #2784]
   3936c:	ldr	x0, [sp, #2784]
   39370:	ldrb	w0, [x0]
   39374:	and	w0, w0, #0xe
   39378:	cmp	w0, #0x0
   3937c:	b.ne	393b8 <PyInit__decimal@@Base+0x216e0>  // b.any
   39380:	ldr	x0, [sp, #40]
   39384:	str	x0, [sp, #2776]
   39388:	ldr	x0, [sp, #2776]
   3938c:	ldrb	w0, [x0]
   39390:	and	w0, w0, #0xe
   39394:	cmp	w0, #0x0
   39398:	b.ne	393b8 <PyInit__decimal@@Base+0x216e0>  // b.any
   3939c:	ldr	x0, [sp, #32]
   393a0:	str	x0, [sp, #2768]
   393a4:	ldr	x0, [sp, #2768]
   393a8:	ldrb	w0, [x0]
   393ac:	and	w0, w0, #0xe
   393b0:	cmp	w0, #0x0
   393b4:	b.eq	393f0 <PyInit__decimal@@Base+0x21718>  // b.none
   393b8:	ldr	x5, [sp, #16]
   393bc:	ldr	x4, [sp, #24]
   393c0:	ldr	x3, [sp, #32]
   393c4:	ldr	x2, [sp, #40]
   393c8:	ldr	x1, [sp, #48]
   393cc:	ldr	x0, [sp, #56]
   393d0:	bl	28764 <PyInit__decimal@@Base+0x10a8c>
   393d4:	cmp	w0, #0x0
   393d8:	b.ne	39d30 <PyInit__decimal@@Base+0x22058>  // b.any
   393dc:	ldr	x2, [sp, #16]
   393e0:	mov	w1, #0x100                 	// #256
   393e4:	ldr	x0, [sp, #56]
   393e8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   393ec:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   393f0:	ldr	x0, [sp, #48]
   393f4:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   393f8:	cmp	w0, #0x0
   393fc:	b.eq	39420 <PyInit__decimal@@Base+0x21748>  // b.none
   39400:	ldr	x0, [sp, #40]
   39404:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   39408:	cmp	w0, #0x0
   3940c:	b.eq	39420 <PyInit__decimal@@Base+0x21748>  // b.none
   39410:	ldr	x0, [sp, #32]
   39414:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   39418:	cmp	w0, #0x0
   3941c:	b.ne	39434 <PyInit__decimal@@Base+0x2175c>  // b.any
   39420:	ldr	x2, [sp, #16]
   39424:	mov	w1, #0x100                 	// #256
   39428:	ldr	x0, [sp, #56]
   3942c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39430:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   39434:	ldr	x0, [sp, #32]
   39438:	str	x0, [sp, #2760]
   3943c:	ldr	x0, [sp, #2760]
   39440:	str	x0, [sp, #2752]
   39444:	ldr	x0, [sp, #2752]
   39448:	ldr	x1, [x0, #40]
   3944c:	ldr	x0, [sp, #2752]
   39450:	ldr	x0, [x0, #24]
   39454:	lsl	x0, x0, #3
   39458:	sub	x0, x0, #0x8
   3945c:	add	x0, x1, x0
   39460:	ldr	x0, [x0]
   39464:	cmp	x0, #0x0
   39468:	cset	w0, eq  // eq = none
   3946c:	and	w0, w0, #0xff
   39470:	cmp	w0, #0x0
   39474:	b.eq	3948c <PyInit__decimal@@Base+0x217b4>  // b.none
   39478:	ldr	x2, [sp, #16]
   3947c:	mov	w1, #0x100                 	// #256
   39480:	ldr	x0, [sp, #56]
   39484:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39488:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   3948c:	ldr	x0, [sp, #32]
   39490:	ldr	x1, [x0, #16]
   39494:	ldr	x0, [sp, #32]
   39498:	ldr	x0, [x0, #8]
   3949c:	add	x1, x1, x0
   394a0:	ldr	x0, [sp, #24]
   394a4:	ldr	x0, [x0]
   394a8:	cmp	x1, x0
   394ac:	b.le	394c4 <PyInit__decimal@@Base+0x217ec>
   394b0:	ldr	x2, [sp, #16]
   394b4:	mov	w1, #0x100                 	// #256
   394b8:	ldr	x0, [sp, #56]
   394bc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   394c0:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   394c4:	ldr	x0, [sp, #48]
   394c8:	str	x0, [sp, #2744]
   394cc:	ldr	x0, [sp, #2744]
   394d0:	ldrb	w0, [x0]
   394d4:	and	w0, w0, #0x1
   394d8:	cmp	w0, #0x0
   394dc:	b.eq	394f8 <PyInit__decimal@@Base+0x21820>  // b.none
   394e0:	ldr	x0, [sp, #40]
   394e4:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   394e8:	cmp	w0, #0x0
   394ec:	b.eq	394f8 <PyInit__decimal@@Base+0x21820>  // b.none
   394f0:	mov	w0, #0x1                   	// #1
   394f4:	b	394fc <PyInit__decimal@@Base+0x21824>
   394f8:	mov	w0, #0x0                   	// #0
   394fc:	strb	w0, [sp, #2823]
   39500:	ldr	x0, [sp, #40]
   39504:	str	x0, [sp, #2736]
   39508:	ldr	x0, [sp, #2736]
   3950c:	str	x0, [sp, #2728]
   39510:	ldr	x0, [sp, #2728]
   39514:	ldr	x1, [x0, #40]
   39518:	ldr	x0, [sp, #2728]
   3951c:	ldr	x0, [x0, #24]
   39520:	lsl	x0, x0, #3
   39524:	sub	x0, x0, #0x8
   39528:	add	x0, x1, x0
   3952c:	ldr	x0, [x0]
   39530:	cmp	x0, #0x0
   39534:	cset	w0, eq  // eq = none
   39538:	and	w0, w0, #0xff
   3953c:	cmp	w0, #0x0
   39540:	b.eq	395d8 <PyInit__decimal@@Base+0x21900>  // b.none
   39544:	ldr	x0, [sp, #48]
   39548:	str	x0, [sp, #2720]
   3954c:	ldr	x0, [sp, #2720]
   39550:	str	x0, [sp, #2712]
   39554:	ldr	x0, [sp, #2712]
   39558:	ldr	x1, [x0, #40]
   3955c:	ldr	x0, [sp, #2712]
   39560:	ldr	x0, [x0, #24]
   39564:	lsl	x0, x0, #3
   39568:	sub	x0, x0, #0x8
   3956c:	add	x0, x1, x0
   39570:	ldr	x0, [x0]
   39574:	cmp	x0, #0x0
   39578:	cset	w0, eq  // eq = none
   3957c:	and	w0, w0, #0xff
   39580:	cmp	w0, #0x0
   39584:	b.eq	3959c <PyInit__decimal@@Base+0x218c4>  // b.none
   39588:	ldr	x2, [sp, #16]
   3958c:	mov	w1, #0x100                 	// #256
   39590:	ldr	x0, [sp, #56]
   39594:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39598:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   3959c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   395a0:	add	x1, x0, #0xc58
   395a4:	ldr	x0, [sp, #32]
   395a8:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   395ac:	cmp	w0, #0x0
   395b0:	cset	w0, ne  // ne = any
   395b4:	and	w0, w0, #0xff
   395b8:	and	x0, x0, #0xff
   395bc:	str	x0, [sp, #2792]
   395c0:	mov	x3, #0x0                   	// #0
   395c4:	ldr	x2, [sp, #2792]
   395c8:	ldrb	w1, [sp, #2823]
   395cc:	ldr	x0, [sp, #56]
   395d0:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   395d4:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   395d8:	ldr	x0, [sp, #40]
   395dc:	str	x0, [sp, #2704]
   395e0:	ldr	x0, [sp, #2704]
   395e4:	ldrb	w0, [x0]
   395e8:	and	w0, w0, #0x1
   395ec:	cmp	w0, #0x0
   395f0:	b.eq	39608 <PyInit__decimal@@Base+0x21930>  // b.none
   395f4:	ldr	x2, [sp, #16]
   395f8:	mov	w1, #0x100                 	// #256
   395fc:	ldr	x0, [sp, #56]
   39600:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39604:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   39608:	ldr	x0, [sp, #48]
   3960c:	str	x0, [sp, #2696]
   39610:	ldr	x0, [sp, #2696]
   39614:	str	x0, [sp, #2688]
   39618:	ldr	x0, [sp, #2688]
   3961c:	ldr	x1, [x0, #40]
   39620:	ldr	x0, [sp, #2688]
   39624:	ldr	x0, [x0, #24]
   39628:	lsl	x0, x0, #3
   3962c:	sub	x0, x0, #0x8
   39630:	add	x0, x1, x0
   39634:	ldr	x0, [x0]
   39638:	cmp	x0, #0x0
   3963c:	cset	w0, eq  // eq = none
   39640:	and	w0, w0, #0xff
   39644:	cmp	w0, #0x0
   39648:	b.eq	39664 <PyInit__decimal@@Base+0x2198c>  // b.none
   3964c:	mov	x3, #0x0                   	// #0
   39650:	mov	x2, #0x0                   	// #0
   39654:	ldrb	w1, [sp, #2823]
   39658:	ldr	x0, [sp, #56]
   3965c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   39660:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   39664:	add	x0, sp, #0x970
   39668:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3966c:	add	x0, sp, #0x970
   39670:	add	x2, x0, #0x1c
   39674:	add	x1, sp, #0x970
   39678:	add	x0, sp, #0x2e0
   3967c:	mov	x4, x2
   39680:	mov	x3, x1
   39684:	mov	x2, #0x0                   	// #0
   39688:	ldr	x1, [sp, #32]
   3968c:	bl	3ad94 <PyInit__decimal@@Base+0x230bc>
   39690:	ldr	w1, [sp, #2444]
   39694:	mov	w0, #0x3be                 	// #958
   39698:	and	w0, w1, w0
   3969c:	cmp	w0, #0x0
   396a0:	b.eq	396c4 <PyInit__decimal@@Base+0x219ec>  // b.none
   396a4:	ldr	w1, [sp, #2444]
   396a8:	mov	w0, #0x3be                 	// #958
   396ac:	and	w0, w1, w0
   396b0:	ldr	x2, [sp, #16]
   396b4:	mov	w1, w0
   396b8:	ldr	x0, [sp, #56]
   396bc:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   396c0:	b	39ae4 <PyInit__decimal@@Base+0x21e0c>
   396c4:	str	wzr, [sp, #2444]
   396c8:	add	x0, sp, #0x2e0
   396cc:	str	x0, [sp, #2664]
   396d0:	ldr	x0, [sp, #2664]
   396d4:	ldrb	w0, [x0]
   396d8:	and	w0, w0, #0xfffffffe
   396dc:	and	w1, w0, #0xff
   396e0:	ldr	x0, [sp, #2664]
   396e4:	strb	w1, [x0]
   396e8:	nop
   396ec:	add	x1, sp, #0x970
   396f0:	add	x0, sp, #0x740
   396f4:	ldr	x3, [sp, #16]
   396f8:	mov	x2, x1
   396fc:	ldr	x1, [sp, #48]
   39700:	bl	3b094 <PyInit__decimal@@Base+0x233bc>
   39704:	add	x0, sp, #0x740
   39708:	str	x0, [sp, #2672]
   3970c:	ldr	x0, [sp, #2672]
   39710:	ldrb	w0, [x0]
   39714:	and	w0, w0, #0xfffffffe
   39718:	and	w1, w0, #0xff
   3971c:	ldr	x0, [sp, #2672]
   39720:	strb	w1, [x0]
   39724:	nop
   39728:	ldr	x0, [sp, #1864]
   3972c:	str	x0, [sp, #2808]
   39730:	str	xzr, [sp, #1864]
   39734:	add	x1, sp, #0x970
   39738:	add	x0, sp, #0x510
   3973c:	ldr	x3, [sp, #16]
   39740:	mov	x2, x1
   39744:	ldr	x1, [sp, #40]
   39748:	bl	3b094 <PyInit__decimal@@Base+0x233bc>
   3974c:	ldr	x0, [sp, #1304]
   39750:	str	x0, [sp, #2800]
   39754:	str	xzr, [sp, #1304]
   39758:	add	x3, sp, #0x970
   3975c:	add	x2, sp, #0x2e0
   39760:	add	x1, sp, #0x740
   39764:	add	x0, sp, #0x740
   39768:	ldr	x4, [sp, #16]
   3976c:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   39770:	ldr	x3, [sp, #16]
   39774:	ldr	x2, [sp, #2808]
   39778:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3977c:	add	x1, x0, #0xc58
   39780:	ldr	x0, [sp, #56]
   39784:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   39788:	add	x1, sp, #0x970
   3978c:	add	x0, sp, #0x2e0
   39790:	ldr	x4, [sp, #16]
   39794:	mov	x3, x1
   39798:	mov	x2, x0
   3979c:	ldr	x1, [sp, #56]
   397a0:	ldr	x0, [sp, #56]
   397a4:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   397a8:	add	x2, sp, #0x970
   397ac:	add	x1, sp, #0x740
   397b0:	add	x0, sp, #0x740
   397b4:	ldr	x4, [sp, #16]
   397b8:	mov	x3, x2
   397bc:	ldr	x2, [sp, #56]
   397c0:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   397c4:	add	x3, sp, #0x970
   397c8:	add	x2, sp, #0x2e0
   397cc:	add	x1, sp, #0x740
   397d0:	add	x0, sp, #0x740
   397d4:	ldr	x4, [sp, #16]
   397d8:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   397dc:	add	x0, sp, #0x740
   397e0:	str	x0, [sp, #2680]
   397e4:	ldr	x0, [sp, #2680]
   397e8:	ldrb	w0, [x0]
   397ec:	and	w0, w0, #0xe
   397f0:	cmp	w0, #0x0
   397f4:	b.ne	39d08 <PyInit__decimal@@Base+0x22030>  // b.any
   397f8:	add	x0, sp, #0x510
   397fc:	str	x0, [sp, #2656]
   39800:	ldr	x0, [sp, #2656]
   39804:	ldrb	w0, [x0]
   39808:	and	w0, w0, #0xe
   3980c:	cmp	w0, #0x0
   39810:	b.ne	39d08 <PyInit__decimal@@Base+0x22030>  // b.any
   39814:	add	x0, sp, #0x2e0
   39818:	str	x0, [sp, #2648]
   3981c:	ldr	x0, [sp, #2648]
   39820:	ldrb	w0, [x0]
   39824:	and	w0, w0, #0xe
   39828:	cmp	w0, #0x0
   3982c:	b.ne	39d08 <PyInit__decimal@@Base+0x22030>  // b.any
   39830:	str	xzr, [sp, #2824]
   39834:	b	398c0 <PyInit__decimal@@Base+0x21be8>
   39838:	add	x2, sp, #0x2e0
   3983c:	add	x1, sp, #0x740
   39840:	add	x0, sp, #0xb0
   39844:	ldr	x4, [sp, #16]
   39848:	mov	x3, x2
   3984c:	mov	x2, #0xa                   	// #10
   39850:	bl	39198 <PyInit__decimal@@Base+0x214c0>
   39854:	add	x0, sp, #0x48
   39858:	add	x1, sp, #0xb0
   3985c:	ldp	x2, x3, [x1]
   39860:	stp	x2, x3, [x0]
   39864:	ldp	x2, x3, [x1, #16]
   39868:	stp	x2, x3, [x0, #16]
   3986c:	ldp	x2, x3, [x1, #32]
   39870:	stp	x2, x3, [x0, #32]
   39874:	add	x0, sp, #0xb0
   39878:	add	x1, sp, #0x740
   3987c:	ldp	x2, x3, [x1]
   39880:	stp	x2, x3, [x0]
   39884:	ldp	x2, x3, [x1, #16]
   39888:	stp	x2, x3, [x0, #16]
   3988c:	ldp	x2, x3, [x1, #32]
   39890:	stp	x2, x3, [x0, #32]
   39894:	add	x0, sp, #0x740
   39898:	add	x1, sp, #0x48
   3989c:	ldp	x2, x3, [x1]
   398a0:	stp	x2, x3, [x0]
   398a4:	ldp	x2, x3, [x1, #16]
   398a8:	stp	x2, x3, [x0, #16]
   398ac:	ldp	x2, x3, [x1, #32]
   398b0:	stp	x2, x3, [x0, #32]
   398b4:	ldr	x0, [sp, #2824]
   398b8:	add	x0, x0, #0x1
   398bc:	str	x0, [sp, #2824]
   398c0:	ldr	x1, [sp, #2824]
   398c4:	ldr	x0, [sp, #2800]
   398c8:	cmp	x1, x0
   398cc:	b.lt	39838 <PyInit__decimal@@Base+0x21b60>  // b.tstop
   398d0:	add	x0, sp, #0x740
   398d4:	str	x0, [sp, #2640]
   398d8:	ldr	x0, [sp, #2640]
   398dc:	ldrb	w0, [x0]
   398e0:	and	w0, w0, #0xe
   398e4:	cmp	w0, #0x0
   398e8:	b.ne	39d10 <PyInit__decimal@@Base+0x22038>  // b.any
   398ec:	ldr	x2, [sp, #16]
   398f0:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   398f4:	add	x1, x0, #0xc58
   398f8:	ldr	x0, [sp, #56]
   398fc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   39900:	b	3999c <PyInit__decimal@@Base+0x21cc4>
   39904:	add	x0, sp, #0x510
   39908:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   3990c:	cmp	w0, #0x0
   39910:	b.eq	39954 <PyInit__decimal@@Base+0x21c7c>  // b.none
   39914:	add	x1, sp, #0x970
   39918:	add	x0, sp, #0x740
   3991c:	ldr	x4, [sp, #16]
   39920:	mov	x3, x1
   39924:	mov	x2, x0
   39928:	ldr	x1, [sp, #56]
   3992c:	ldr	x0, [sp, #56]
   39930:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   39934:	add	x1, sp, #0x970
   39938:	add	x0, sp, #0x2e0
   3993c:	ldr	x4, [sp, #16]
   39940:	mov	x3, x1
   39944:	mov	x2, x0
   39948:	ldr	x1, [sp, #56]
   3994c:	ldr	x0, [sp, #56]
   39950:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   39954:	add	x3, sp, #0x970
   39958:	add	x2, sp, #0x740
   3995c:	add	x1, sp, #0x740
   39960:	add	x0, sp, #0x740
   39964:	ldr	x4, [sp, #16]
   39968:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   3996c:	add	x3, sp, #0x970
   39970:	add	x2, sp, #0x2e0
   39974:	add	x1, sp, #0x740
   39978:	add	x0, sp, #0x740
   3997c:	ldr	x4, [sp, #16]
   39980:	bl	3a310 <PyInit__decimal@@Base+0x22638>
   39984:	add	x3, sp, #0x970
   39988:	add	x2, sp, #0x78
   3998c:	add	x1, sp, #0x510
   39990:	add	x0, sp, #0x510
   39994:	ldr	x4, [sp, #16]
   39998:	bl	31784 <PyInit__decimal@@Base+0x19aac>
   3999c:	add	x0, sp, #0x510
   399a0:	str	x0, [sp, #2632]
   399a4:	ldr	x0, [sp, #2632]
   399a8:	ldrb	w0, [x0]
   399ac:	and	w0, w0, #0xe
   399b0:	cmp	w0, #0x0
   399b4:	cset	w0, eq  // eq = none
   399b8:	and	w0, w0, #0xff
   399bc:	cmp	w0, #0x0
   399c0:	b.eq	39a2c <PyInit__decimal@@Base+0x21d54>  // b.none
   399c4:	add	x0, sp, #0x510
   399c8:	str	x0, [sp, #2624]
   399cc:	ldr	x0, [sp, #2624]
   399d0:	str	x0, [sp, #2616]
   399d4:	ldr	x0, [sp, #2616]
   399d8:	ldrb	w0, [x0]
   399dc:	and	w0, w0, #0xe
   399e0:	cmp	w0, #0x0
   399e4:	b.ne	39a20 <PyInit__decimal@@Base+0x21d48>  // b.any
   399e8:	ldr	x0, [sp, #2624]
   399ec:	str	x0, [sp, #2608]
   399f0:	ldr	x0, [sp, #2608]
   399f4:	ldr	x1, [x0, #40]
   399f8:	ldr	x0, [sp, #2608]
   399fc:	ldr	x0, [x0, #24]
   39a00:	lsl	x0, x0, #3
   39a04:	sub	x0, x0, #0x8
   39a08:	add	x0, x1, x0
   39a0c:	ldr	x0, [x0]
   39a10:	cmp	x0, #0x0
   39a14:	b.ne	39a20 <PyInit__decimal@@Base+0x21d48>  // b.any
   39a18:	mov	w0, #0x1                   	// #1
   39a1c:	b	39a24 <PyInit__decimal@@Base+0x21d4c>
   39a20:	mov	w0, #0x0                   	// #0
   39a24:	cmp	w0, #0x0
   39a28:	b.eq	39904 <PyInit__decimal@@Base+0x21c2c>  // b.none
   39a2c:	add	x0, sp, #0x510
   39a30:	str	x0, [sp, #2600]
   39a34:	ldr	x0, [sp, #2600]
   39a38:	ldrb	w0, [x0]
   39a3c:	and	w0, w0, #0xe
   39a40:	cmp	w0, #0x0
   39a44:	b.ne	39d18 <PyInit__decimal@@Base+0x22040>  // b.any
   39a48:	add	x0, sp, #0x740
   39a4c:	str	x0, [sp, #2592]
   39a50:	ldr	x0, [sp, #2592]
   39a54:	ldrb	w0, [x0]
   39a58:	and	w0, w0, #0xe
   39a5c:	cmp	w0, #0x0
   39a60:	b.ne	39d18 <PyInit__decimal@@Base+0x22040>  // b.any
   39a64:	add	x0, sp, #0x2e0
   39a68:	str	x0, [sp, #2584]
   39a6c:	ldr	x0, [sp, #2584]
   39a70:	ldrb	w0, [x0]
   39a74:	and	w0, w0, #0xe
   39a78:	cmp	w0, #0x0
   39a7c:	b.ne	39d18 <PyInit__decimal@@Base+0x22040>  // b.any
   39a80:	ldr	x0, [sp, #56]
   39a84:	str	x0, [sp, #2576]
   39a88:	ldr	x0, [sp, #2576]
   39a8c:	ldrb	w0, [x0]
   39a90:	and	w0, w0, #0xe
   39a94:	cmp	w0, #0x0
   39a98:	b.ne	39d18 <PyInit__decimal@@Base+0x22040>  // b.any
   39a9c:	ldr	x0, [sp, #56]
   39aa0:	str	x0, [sp, #2568]
   39aa4:	ldrb	w0, [sp, #2823]
   39aa8:	strb	w0, [sp, #2567]
   39aac:	ldr	x0, [sp, #2568]
   39ab0:	ldrb	w0, [x0]
   39ab4:	and	w0, w0, #0xfffffffe
   39ab8:	and	w1, w0, #0xff
   39abc:	ldr	x0, [sp, #2568]
   39ac0:	strb	w1, [x0]
   39ac4:	ldr	x0, [sp, #2568]
   39ac8:	ldrb	w1, [x0]
   39acc:	ldrb	w0, [sp, #2567]
   39ad0:	orr	w0, w1, w0
   39ad4:	and	w1, w0, #0xff
   39ad8:	ldr	x0, [sp, #2568]
   39adc:	strb	w1, [x0]
   39ae0:	nop
   39ae4:	add	x0, sp, #0x740
   39ae8:	str	x0, [sp, #2480]
   39aec:	ldr	x0, [sp, #2480]
   39af0:	str	x0, [sp, #2472]
   39af4:	ldr	x0, [sp, #2472]
   39af8:	ldrb	w0, [x0]
   39afc:	and	w0, w0, #0xe0
   39b00:	cmp	w0, #0x0
   39b04:	cset	w0, eq  // eq = none
   39b08:	and	w0, w0, #0xff
   39b0c:	cmp	w0, #0x0
   39b10:	b.eq	39b2c <PyInit__decimal@@Base+0x21e54>  // b.none
   39b14:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39b18:	add	x0, x0, #0x6f8
   39b1c:	ldr	x1, [x0]
   39b20:	ldr	x0, [sp, #2480]
   39b24:	ldr	x0, [x0, #40]
   39b28:	blr	x1
   39b2c:	ldr	x0, [sp, #2480]
   39b30:	str	x0, [sp, #2464]
   39b34:	ldr	x0, [sp, #2464]
   39b38:	ldrb	w0, [x0]
   39b3c:	and	w0, w0, #0x10
   39b40:	cmp	w0, #0x0
   39b44:	cset	w0, eq  // eq = none
   39b48:	and	w0, w0, #0xff
   39b4c:	cmp	w0, #0x0
   39b50:	b.eq	39b68 <PyInit__decimal@@Base+0x21e90>  // b.none
   39b54:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39b58:	add	x0, x0, #0x6f8
   39b5c:	ldr	x1, [x0]
   39b60:	ldr	x0, [sp, #2480]
   39b64:	blr	x1
   39b68:	nop
   39b6c:	add	x0, sp, #0x510
   39b70:	str	x0, [sp, #2504]
   39b74:	ldr	x0, [sp, #2504]
   39b78:	str	x0, [sp, #2496]
   39b7c:	ldr	x0, [sp, #2496]
   39b80:	ldrb	w0, [x0]
   39b84:	and	w0, w0, #0xe0
   39b88:	cmp	w0, #0x0
   39b8c:	cset	w0, eq  // eq = none
   39b90:	and	w0, w0, #0xff
   39b94:	cmp	w0, #0x0
   39b98:	b.eq	39bb4 <PyInit__decimal@@Base+0x21edc>  // b.none
   39b9c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39ba0:	add	x0, x0, #0x6f8
   39ba4:	ldr	x1, [x0]
   39ba8:	ldr	x0, [sp, #2504]
   39bac:	ldr	x0, [x0, #40]
   39bb0:	blr	x1
   39bb4:	ldr	x0, [sp, #2504]
   39bb8:	str	x0, [sp, #2488]
   39bbc:	ldr	x0, [sp, #2488]
   39bc0:	ldrb	w0, [x0]
   39bc4:	and	w0, w0, #0x10
   39bc8:	cmp	w0, #0x0
   39bcc:	cset	w0, eq  // eq = none
   39bd0:	and	w0, w0, #0xff
   39bd4:	cmp	w0, #0x0
   39bd8:	b.eq	39bf0 <PyInit__decimal@@Base+0x21f18>  // b.none
   39bdc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39be0:	add	x0, x0, #0x6f8
   39be4:	ldr	x1, [x0]
   39be8:	ldr	x0, [sp, #2504]
   39bec:	blr	x1
   39bf0:	nop
   39bf4:	add	x0, sp, #0x2e0
   39bf8:	str	x0, [sp, #2528]
   39bfc:	ldr	x0, [sp, #2528]
   39c00:	str	x0, [sp, #2520]
   39c04:	ldr	x0, [sp, #2520]
   39c08:	ldrb	w0, [x0]
   39c0c:	and	w0, w0, #0xe0
   39c10:	cmp	w0, #0x0
   39c14:	cset	w0, eq  // eq = none
   39c18:	and	w0, w0, #0xff
   39c1c:	cmp	w0, #0x0
   39c20:	b.eq	39c3c <PyInit__decimal@@Base+0x21f64>  // b.none
   39c24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39c28:	add	x0, x0, #0x6f8
   39c2c:	ldr	x1, [x0]
   39c30:	ldr	x0, [sp, #2528]
   39c34:	ldr	x0, [x0, #40]
   39c38:	blr	x1
   39c3c:	ldr	x0, [sp, #2528]
   39c40:	str	x0, [sp, #2512]
   39c44:	ldr	x0, [sp, #2512]
   39c48:	ldrb	w0, [x0]
   39c4c:	and	w0, w0, #0x10
   39c50:	cmp	w0, #0x0
   39c54:	cset	w0, eq  // eq = none
   39c58:	and	w0, w0, #0xff
   39c5c:	cmp	w0, #0x0
   39c60:	b.eq	39c78 <PyInit__decimal@@Base+0x21fa0>  // b.none
   39c64:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39c68:	add	x0, x0, #0x6f8
   39c6c:	ldr	x1, [x0]
   39c70:	ldr	x0, [sp, #2528]
   39c74:	blr	x1
   39c78:	nop
   39c7c:	add	x0, sp, #0xb0
   39c80:	str	x0, [sp, #2552]
   39c84:	ldr	x0, [sp, #2552]
   39c88:	str	x0, [sp, #2544]
   39c8c:	ldr	x0, [sp, #2544]
   39c90:	ldrb	w0, [x0]
   39c94:	and	w0, w0, #0xe0
   39c98:	cmp	w0, #0x0
   39c9c:	cset	w0, eq  // eq = none
   39ca0:	and	w0, w0, #0xff
   39ca4:	cmp	w0, #0x0
   39ca8:	b.eq	39cc4 <PyInit__decimal@@Base+0x21fec>  // b.none
   39cac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39cb0:	add	x0, x0, #0x6f8
   39cb4:	ldr	x1, [x0]
   39cb8:	ldr	x0, [sp, #2552]
   39cbc:	ldr	x0, [x0, #40]
   39cc0:	blr	x1
   39cc4:	ldr	x0, [sp, #2552]
   39cc8:	str	x0, [sp, #2536]
   39ccc:	ldr	x0, [sp, #2536]
   39cd0:	ldrb	w0, [x0]
   39cd4:	and	w0, w0, #0x10
   39cd8:	cmp	w0, #0x0
   39cdc:	cset	w0, eq  // eq = none
   39ce0:	and	w0, w0, #0xff
   39ce4:	cmp	w0, #0x0
   39ce8:	b.eq	39d00 <PyInit__decimal@@Base+0x22028>  // b.none
   39cec:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   39cf0:	add	x0, x0, #0x6f8
   39cf4:	ldr	x1, [x0]
   39cf8:	ldr	x0, [sp, #2552]
   39cfc:	blr	x1
   39d00:	nop
   39d04:	b	39d34 <PyInit__decimal@@Base+0x2205c>
   39d08:	nop
   39d0c:	b	39d1c <PyInit__decimal@@Base+0x22044>
   39d10:	nop
   39d14:	b	39d1c <PyInit__decimal@@Base+0x22044>
   39d18:	nop
   39d1c:	mov	w2, #0x4                   	// #4
   39d20:	mov	w1, #0x0                   	// #0
   39d24:	ldr	x0, [sp, #56]
   39d28:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   39d2c:	b	39ae4 <PyInit__decimal@@Base+0x21e0c>
   39d30:	nop
   39d34:	ldp	x29, x30, [sp]
   39d38:	add	sp, sp, #0xb10
   39d3c:	ret
   39d40:	stp	x29, x30, [sp, #-208]!
   39d44:	mov	x29, sp
   39d48:	str	x0, [sp, #56]
   39d4c:	str	x1, [sp, #48]
   39d50:	str	x2, [sp, #40]
   39d54:	str	x3, [sp, #32]
   39d58:	str	x4, [sp, #24]
   39d5c:	str	wzr, [sp, #204]
   39d60:	ldr	x0, [sp, #40]
   39d64:	ldr	x0, [x0, #8]
   39d68:	str	x0, [sp, #192]
   39d6c:	ldr	x0, [sp, #48]
   39d70:	str	x0, [sp, #160]
   39d74:	ldr	x0, [sp, #160]
   39d78:	ldrb	w0, [x0]
   39d7c:	and	w0, w0, #0xe
   39d80:	cmp	w0, #0x0
   39d84:	b.ne	39da4 <PyInit__decimal@@Base+0x220cc>  // b.any
   39d88:	ldr	x0, [sp, #40]
   39d8c:	str	x0, [sp, #152]
   39d90:	ldr	x0, [sp, #152]
   39d94:	ldrb	w0, [x0]
   39d98:	and	w0, w0, #0xe
   39d9c:	cmp	w0, #0x0
   39da0:	b.eq	39e24 <PyInit__decimal@@Base+0x2214c>  // b.none
   39da4:	ldr	x4, [sp, #24]
   39da8:	ldr	x3, [sp, #32]
   39dac:	ldr	x2, [sp, #40]
   39db0:	ldr	x1, [sp, #48]
   39db4:	ldr	x0, [sp, #56]
   39db8:	bl	2861c <PyInit__decimal@@Base+0x10944>
   39dbc:	cmp	w0, #0x0
   39dc0:	b.ne	3a0ec <PyInit__decimal@@Base+0x22414>  // b.any
   39dc4:	ldr	x0, [sp, #48]
   39dc8:	str	x0, [sp, #144]
   39dcc:	ldr	x0, [sp, #144]
   39dd0:	ldrb	w0, [x0]
   39dd4:	and	w0, w0, #0x2
   39dd8:	cmp	w0, #0x0
   39ddc:	b.eq	39e10 <PyInit__decimal@@Base+0x22138>  // b.none
   39de0:	ldr	x0, [sp, #40]
   39de4:	str	x0, [sp, #136]
   39de8:	ldr	x0, [sp, #136]
   39dec:	ldrb	w0, [x0]
   39df0:	and	w0, w0, #0x2
   39df4:	cmp	w0, #0x0
   39df8:	b.eq	39e10 <PyInit__decimal@@Base+0x22138>  // b.none
   39dfc:	ldr	x2, [sp, #24]
   39e00:	ldr	x1, [sp, #48]
   39e04:	ldr	x0, [sp, #56]
   39e08:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   39e0c:	b	3a108 <PyInit__decimal@@Base+0x22430>
   39e10:	ldr	x2, [sp, #24]
   39e14:	mov	w1, #0x100                 	// #256
   39e18:	ldr	x0, [sp, #56]
   39e1c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39e20:	b	3a108 <PyInit__decimal@@Base+0x22430>
   39e24:	ldr	x0, [sp, #40]
   39e28:	ldr	x1, [x0, #8]
   39e2c:	ldr	x0, [sp, #32]
   39e30:	ldr	x0, [x0, #8]
   39e34:	cmp	x1, x0
   39e38:	b.gt	39e6c <PyInit__decimal@@Base+0x22194>
   39e3c:	ldr	x0, [sp, #40]
   39e40:	ldr	x1, [x0, #8]
   39e44:	ldr	x0, [sp, #32]
   39e48:	str	x0, [sp, #128]
   39e4c:	ldr	x0, [sp, #128]
   39e50:	ldr	x2, [x0, #16]
   39e54:	ldr	x0, [sp, #128]
   39e58:	ldr	x0, [x0]
   39e5c:	sub	x0, x2, x0
   39e60:	add	x0, x0, #0x1
   39e64:	cmp	x1, x0
   39e68:	b.ge	39e80 <PyInit__decimal@@Base+0x221a8>  // b.tcont
   39e6c:	ldr	x2, [sp, #24]
   39e70:	mov	w1, #0x100                 	// #256
   39e74:	ldr	x0, [sp, #56]
   39e78:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39e7c:	b	3a108 <PyInit__decimal@@Base+0x22430>
   39e80:	ldr	x0, [sp, #48]
   39e84:	str	x0, [sp, #120]
   39e88:	ldr	x0, [sp, #120]
   39e8c:	str	x0, [sp, #112]
   39e90:	ldr	x0, [sp, #112]
   39e94:	ldrb	w0, [x0]
   39e98:	and	w0, w0, #0xe
   39e9c:	cmp	w0, #0x0
   39ea0:	b.ne	39edc <PyInit__decimal@@Base+0x22204>  // b.any
   39ea4:	ldr	x0, [sp, #120]
   39ea8:	str	x0, [sp, #104]
   39eac:	ldr	x0, [sp, #104]
   39eb0:	ldr	x1, [x0, #40]
   39eb4:	ldr	x0, [sp, #104]
   39eb8:	ldr	x0, [x0, #24]
   39ebc:	lsl	x0, x0, #3
   39ec0:	sub	x0, x0, #0x8
   39ec4:	add	x0, x1, x0
   39ec8:	ldr	x0, [x0]
   39ecc:	cmp	x0, #0x0
   39ed0:	b.ne	39edc <PyInit__decimal@@Base+0x22204>  // b.any
   39ed4:	mov	w0, #0x1                   	// #1
   39ed8:	b	39ee0 <PyInit__decimal@@Base+0x22208>
   39edc:	mov	w0, #0x0                   	// #0
   39ee0:	cmp	w0, #0x0
   39ee4:	b.eq	39f2c <PyInit__decimal@@Base+0x22254>  // b.none
   39ee8:	ldr	x0, [sp, #48]
   39eec:	str	x0, [sp, #96]
   39ef0:	ldr	x0, [sp, #96]
   39ef4:	ldrb	w0, [x0]
   39ef8:	and	w0, w0, #0x1
   39efc:	and	w1, w0, #0xff
   39f00:	ldr	x0, [sp, #40]
   39f04:	ldr	x0, [x0, #8]
   39f08:	mov	x3, x0
   39f0c:	mov	x2, #0x0                   	// #0
   39f10:	ldr	x0, [sp, #56]
   39f14:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   39f18:	ldr	x2, [sp, #24]
   39f1c:	ldr	x1, [sp, #32]
   39f20:	ldr	x0, [sp, #56]
   39f24:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   39f28:	b	3a108 <PyInit__decimal@@Base+0x22430>
   39f2c:	ldr	x0, [sp, #48]
   39f30:	ldr	x1, [x0, #8]
   39f34:	ldr	x0, [sp, #40]
   39f38:	ldr	x0, [x0, #8]
   39f3c:	sub	x0, x1, x0
   39f40:	str	x0, [sp, #184]
   39f44:	ldr	x0, [sp, #48]
   39f48:	ldr	x1, [x0, #16]
   39f4c:	ldr	x0, [sp, #184]
   39f50:	add	x1, x1, x0
   39f54:	ldr	x0, [sp, #32]
   39f58:	ldr	x0, [x0]
   39f5c:	cmp	x1, x0
   39f60:	b.le	39f78 <PyInit__decimal@@Base+0x222a0>
   39f64:	ldr	x2, [sp, #24]
   39f68:	mov	w1, #0x100                 	// #256
   39f6c:	ldr	x0, [sp, #56]
   39f70:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   39f74:	b	3a108 <PyInit__decimal@@Base+0x22430>
   39f78:	ldr	x0, [sp, #184]
   39f7c:	cmp	x0, #0x0
   39f80:	b.lt	39fb8 <PyInit__decimal@@Base+0x222e0>  // b.tstop
   39f84:	ldr	x0, [sp, #184]
   39f88:	str	x0, [sp, #176]
   39f8c:	ldr	x3, [sp, #24]
   39f90:	ldr	x2, [sp, #176]
   39f94:	ldr	x1, [sp, #48]
   39f98:	ldr	x0, [sp, #56]
   39f9c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   39fa0:	cmp	w0, #0x0
   39fa4:	b.eq	3a0f4 <PyInit__decimal@@Base+0x2241c>  // b.none
   39fa8:	ldr	x0, [sp, #56]
   39fac:	ldr	x1, [sp, #192]
   39fb0:	str	x1, [x0, #8]
   39fb4:	b	3a034 <PyInit__decimal@@Base+0x2235c>
   39fb8:	ldr	x0, [sp, #184]
   39fbc:	neg	x0, x0
   39fc0:	str	x0, [sp, #176]
   39fc4:	ldr	x3, [sp, #24]
   39fc8:	ldr	x2, [sp, #176]
   39fcc:	ldr	x1, [sp, #48]
   39fd0:	ldr	x0, [sp, #56]
   39fd4:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   39fd8:	str	x0, [sp, #168]
   39fdc:	ldr	x0, [sp, #168]
   39fe0:	cmn	x0, #0x1
   39fe4:	b.eq	3a0fc <PyInit__decimal@@Base+0x22424>  // b.none
   39fe8:	ldr	x0, [sp, #56]
   39fec:	ldr	x1, [sp, #192]
   39ff0:	str	x1, [x0, #8]
   39ff4:	ldr	x3, [sp, #24]
   39ff8:	ldr	x2, [sp, #32]
   39ffc:	ldr	x1, [sp, #168]
   3a000:	ldr	x0, [sp, #56]
   3a004:	bl	28dd0 <PyInit__decimal@@Base+0x110f8>
   3a008:	cmp	w0, #0x0
   3a00c:	b.eq	3a104 <PyInit__decimal@@Base+0x2242c>  // b.none
   3a010:	ldr	w0, [sp, #204]
   3a014:	orr	w0, w0, #0x1000
   3a018:	str	w0, [sp, #204]
   3a01c:	ldr	x0, [sp, #168]
   3a020:	cmp	x0, #0x0
   3a024:	b.eq	3a034 <PyInit__decimal@@Base+0x2235c>  // b.none
   3a028:	ldr	w0, [sp, #204]
   3a02c:	orr	w0, w0, #0x40
   3a030:	str	w0, [sp, #204]
   3a034:	ldr	x0, [sp, #56]
   3a038:	str	x0, [sp, #88]
   3a03c:	ldr	x0, [sp, #88]
   3a040:	ldr	x1, [x0, #8]
   3a044:	ldr	x0, [sp, #88]
   3a048:	ldr	x0, [x0, #16]
   3a04c:	add	x0, x1, x0
   3a050:	sub	x1, x0, #0x1
   3a054:	ldr	x0, [sp, #32]
   3a058:	ldr	x0, [x0, #8]
   3a05c:	cmp	x1, x0
   3a060:	b.gt	3a0ac <PyInit__decimal@@Base+0x223d4>
   3a064:	ldr	x0, [sp, #56]
   3a068:	str	x0, [sp, #72]
   3a06c:	ldr	x0, [sp, #72]
   3a070:	ldr	x1, [x0, #8]
   3a074:	ldr	x0, [sp, #72]
   3a078:	ldr	x0, [x0, #16]
   3a07c:	add	x0, x1, x0
   3a080:	sub	x1, x0, #0x1
   3a084:	ldr	x0, [sp, #32]
   3a088:	str	x0, [sp, #80]
   3a08c:	ldr	x0, [sp, #80]
   3a090:	ldr	x2, [x0, #16]
   3a094:	ldr	x0, [sp, #80]
   3a098:	ldr	x0, [x0]
   3a09c:	sub	x0, x2, x0
   3a0a0:	add	x0, x0, #0x1
   3a0a4:	cmp	x1, x0
   3a0a8:	b.ge	3a0c0 <PyInit__decimal@@Base+0x223e8>  // b.tcont
   3a0ac:	ldr	x2, [sp, #24]
   3a0b0:	mov	w1, #0x100                 	// #256
   3a0b4:	ldr	x0, [sp, #56]
   3a0b8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a0bc:	b	3a108 <PyInit__decimal@@Base+0x22430>
   3a0c0:	ldr	x0, [sp, #24]
   3a0c4:	ldr	w1, [x0]
   3a0c8:	ldr	w0, [sp, #204]
   3a0cc:	orr	w1, w1, w0
   3a0d0:	ldr	x0, [sp, #24]
   3a0d4:	str	w1, [x0]
   3a0d8:	ldr	x2, [sp, #24]
   3a0dc:	ldr	x1, [sp, #32]
   3a0e0:	ldr	x0, [sp, #56]
   3a0e4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3a0e8:	b	3a108 <PyInit__decimal@@Base+0x22430>
   3a0ec:	nop
   3a0f0:	b	3a108 <PyInit__decimal@@Base+0x22430>
   3a0f4:	nop
   3a0f8:	b	3a108 <PyInit__decimal@@Base+0x22430>
   3a0fc:	nop
   3a100:	b	3a108 <PyInit__decimal@@Base+0x22430>
   3a104:	nop
   3a108:	ldp	x29, x30, [sp], #208
   3a10c:	ret
   3a110:	stp	x29, x30, [sp, #-144]!
   3a114:	mov	x29, sp
   3a118:	str	x0, [sp, #40]
   3a11c:	str	x1, [sp, #32]
   3a120:	str	x2, [sp, #24]
   3a124:	str	x3, [sp, #16]
   3a128:	ldr	x0, [sp, #32]
   3a12c:	str	x0, [sp, #96]
   3a130:	ldr	x0, [sp, #96]
   3a134:	ldrb	w0, [x0]
   3a138:	and	w0, w0, #0x1
   3a13c:	and	w0, w0, #0xff
   3a140:	strb	w0, [sp, #143]
   3a144:	ldr	x0, [sp, #32]
   3a148:	str	x0, [sp, #104]
   3a14c:	ldr	x0, [sp, #104]
   3a150:	ldrb	w0, [x0]
   3a154:	and	w0, w0, #0xe
   3a158:	cmp	w0, #0x0
   3a15c:	b.eq	3a190 <PyInit__decimal@@Base+0x224b8>  // b.none
   3a160:	ldr	x3, [sp, #16]
   3a164:	ldr	x2, [sp, #24]
   3a168:	ldr	x1, [sp, #32]
   3a16c:	ldr	x0, [sp, #40]
   3a170:	bl	28540 <PyInit__decimal@@Base+0x10868>
   3a174:	cmp	w0, #0x0
   3a178:	b.ne	3a2f4 <PyInit__decimal@@Base+0x2261c>  // b.any
   3a17c:	ldr	x2, [sp, #16]
   3a180:	ldr	x1, [sp, #32]
   3a184:	ldr	x0, [sp, #40]
   3a188:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3a18c:	b	3a308 <PyInit__decimal@@Base+0x22630>
   3a190:	ldr	x2, [sp, #16]
   3a194:	ldr	x1, [sp, #32]
   3a198:	ldr	x0, [sp, #40]
   3a19c:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3a1a0:	cmp	w0, #0x0
   3a1a4:	b.eq	3a2fc <PyInit__decimal@@Base+0x22624>  // b.none
   3a1a8:	ldr	x2, [sp, #16]
   3a1ac:	ldr	x1, [sp, #24]
   3a1b0:	ldr	x0, [sp, #40]
   3a1b4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3a1b8:	ldr	x0, [sp, #40]
   3a1bc:	str	x0, [sp, #88]
   3a1c0:	ldr	x0, [sp, #88]
   3a1c4:	ldrb	w0, [x0]
   3a1c8:	and	w0, w0, #0xe
   3a1cc:	cmp	w0, #0x0
   3a1d0:	b.ne	3a304 <PyInit__decimal@@Base+0x2262c>  // b.any
   3a1d4:	ldr	x0, [sp, #40]
   3a1d8:	str	x0, [sp, #80]
   3a1dc:	ldr	x0, [sp, #80]
   3a1e0:	str	x0, [sp, #72]
   3a1e4:	ldr	x0, [sp, #72]
   3a1e8:	ldrb	w0, [x0]
   3a1ec:	and	w0, w0, #0xe
   3a1f0:	cmp	w0, #0x0
   3a1f4:	b.ne	3a230 <PyInit__decimal@@Base+0x22558>  // b.any
   3a1f8:	ldr	x0, [sp, #80]
   3a1fc:	str	x0, [sp, #64]
   3a200:	ldr	x0, [sp, #64]
   3a204:	ldr	x1, [x0, #40]
   3a208:	ldr	x0, [sp, #64]
   3a20c:	ldr	x0, [x0, #24]
   3a210:	lsl	x0, x0, #3
   3a214:	sub	x0, x0, #0x8
   3a218:	add	x0, x1, x0
   3a21c:	ldr	x0, [x0]
   3a220:	cmp	x0, #0x0
   3a224:	b.ne	3a230 <PyInit__decimal@@Base+0x22558>  // b.any
   3a228:	mov	w0, #0x1                   	// #1
   3a22c:	b	3a234 <PyInit__decimal@@Base+0x2255c>
   3a230:	mov	w0, #0x0                   	// #0
   3a234:	cmp	w0, #0x0
   3a238:	b.eq	3a254 <PyInit__decimal@@Base+0x2257c>  // b.none
   3a23c:	mov	x3, #0x0                   	// #0
   3a240:	mov	x2, #0x0                   	// #0
   3a244:	ldrb	w1, [sp, #143]
   3a248:	ldr	x0, [sp, #40]
   3a24c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3a250:	b	3a308 <PyInit__decimal@@Base+0x22630>
   3a254:	ldr	x0, [sp, #40]
   3a258:	bl	26ea0 <PyInit__decimal@@Base+0xf1c8>
   3a25c:	str	x0, [sp, #128]
   3a260:	ldr	x0, [sp, #24]
   3a264:	ldr	w0, [x0, #40]
   3a268:	cmp	w0, #0x0
   3a26c:	b.eq	3a294 <PyInit__decimal@@Base+0x225bc>  // b.none
   3a270:	ldr	x0, [sp, #24]
   3a274:	str	x0, [sp, #56]
   3a278:	ldr	x0, [sp, #56]
   3a27c:	ldr	x1, [x0, #8]
   3a280:	ldr	x0, [sp, #56]
   3a284:	ldr	x0, [x0]
   3a288:	sub	x0, x1, x0
   3a28c:	add	x0, x0, #0x1
   3a290:	b	3a29c <PyInit__decimal@@Base+0x225c4>
   3a294:	ldr	x0, [sp, #24]
   3a298:	ldr	x0, [x0, #8]
   3a29c:	str	x0, [sp, #120]
   3a2a0:	ldr	x0, [sp, #40]
   3a2a4:	ldr	x0, [x0, #8]
   3a2a8:	ldr	x1, [sp, #120]
   3a2ac:	sub	x0, x1, x0
   3a2b0:	str	x0, [sp, #112]
   3a2b4:	ldr	x0, [sp, #112]
   3a2b8:	ldr	x2, [sp, #128]
   3a2bc:	ldr	x1, [sp, #128]
   3a2c0:	cmp	x2, x0
   3a2c4:	csel	x0, x1, x0, le
   3a2c8:	str	x0, [sp, #128]
   3a2cc:	ldr	x1, [sp, #128]
   3a2d0:	ldr	x0, [sp, #40]
   3a2d4:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   3a2d8:	ldr	x0, [sp, #40]
   3a2dc:	ldr	x1, [x0, #8]
   3a2e0:	ldr	x0, [sp, #128]
   3a2e4:	add	x1, x1, x0
   3a2e8:	ldr	x0, [sp, #40]
   3a2ec:	str	x1, [x0, #8]
   3a2f0:	b	3a308 <PyInit__decimal@@Base+0x22630>
   3a2f4:	nop
   3a2f8:	b	3a308 <PyInit__decimal@@Base+0x22630>
   3a2fc:	nop
   3a300:	b	3a308 <PyInit__decimal@@Base+0x22630>
   3a304:	nop
   3a308:	ldp	x29, x30, [sp], #144
   3a30c:	ret
   3a310:	sub	sp, sp, #0x2d0
   3a314:	stp	x29, x30, [sp]
   3a318:	mov	x29, sp
   3a31c:	str	x0, [sp, #56]
   3a320:	str	x1, [sp, #48]
   3a324:	str	x2, [sp, #40]
   3a328:	str	x3, [sp, #32]
   3a32c:	str	x4, [sp, #24]
   3a330:	mov	w0, #0x30                  	// #48
   3a334:	strb	w0, [sp, #72]
   3a338:	str	xzr, [sp, #80]
   3a33c:	str	xzr, [sp, #88]
   3a340:	str	xzr, [sp, #96]
   3a344:	mov	x0, #0x40                  	// #64
   3a348:	str	x0, [sp, #104]
   3a34c:	add	x0, sp, #0x78
   3a350:	str	x0, [sp, #112]
   3a354:	ldr	x0, [sp, #48]
   3a358:	str	x0, [sp, #712]
   3a35c:	ldr	x0, [sp, #712]
   3a360:	ldrb	w0, [x0]
   3a364:	and	w0, w0, #0xe
   3a368:	cmp	w0, #0x0
   3a36c:	b.ne	3a38c <PyInit__decimal@@Base+0x226b4>  // b.any
   3a370:	ldr	x0, [sp, #40]
   3a374:	str	x0, [sp, #704]
   3a378:	ldr	x0, [sp, #704]
   3a37c:	ldrb	w0, [x0]
   3a380:	and	w0, w0, #0xe
   3a384:	cmp	w0, #0x0
   3a388:	b.eq	3a420 <PyInit__decimal@@Base+0x22748>  // b.none
   3a38c:	ldr	x4, [sp, #24]
   3a390:	ldr	x3, [sp, #32]
   3a394:	ldr	x2, [sp, #40]
   3a398:	ldr	x1, [sp, #48]
   3a39c:	ldr	x0, [sp, #56]
   3a3a0:	bl	2861c <PyInit__decimal@@Base+0x10944>
   3a3a4:	cmp	w0, #0x0
   3a3a8:	b.ne	3a588 <PyInit__decimal@@Base+0x228b0>  // b.any
   3a3ac:	ldr	x0, [sp, #48]
   3a3b0:	str	x0, [sp, #696]
   3a3b4:	ldr	x0, [sp, #696]
   3a3b8:	ldrb	w0, [x0]
   3a3bc:	and	w0, w0, #0x2
   3a3c0:	cmp	w0, #0x0
   3a3c4:	b.eq	3a3dc <PyInit__decimal@@Base+0x22704>  // b.none
   3a3c8:	ldr	x2, [sp, #24]
   3a3cc:	mov	w1, #0x100                 	// #256
   3a3d0:	ldr	x0, [sp, #56]
   3a3d4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a3d8:	b	3a58c <PyInit__decimal@@Base+0x228b4>
   3a3dc:	ldr	x0, [sp, #40]
   3a3e0:	str	x0, [sp, #688]
   3a3e4:	ldr	x0, [sp, #688]
   3a3e8:	ldrb	w0, [x0]
   3a3ec:	and	w0, w0, #0x2
   3a3f0:	cmp	w0, #0x0
   3a3f4:	b.eq	3a41c <PyInit__decimal@@Base+0x22744>  // b.none
   3a3f8:	ldr	x2, [sp, #24]
   3a3fc:	ldr	x1, [sp, #48]
   3a400:	ldr	x0, [sp, #56]
   3a404:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3a408:	ldr	x2, [sp, #24]
   3a40c:	ldr	x1, [sp, #32]
   3a410:	ldr	x0, [sp, #56]
   3a414:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3a418:	b	3a58c <PyInit__decimal@@Base+0x228b4>
   3a41c:	bl	6860 <abort@plt>
   3a420:	ldr	x0, [sp, #40]
   3a424:	str	x0, [sp, #680]
   3a428:	ldr	x0, [sp, #680]
   3a42c:	str	x0, [sp, #672]
   3a430:	ldr	x0, [sp, #672]
   3a434:	ldr	x1, [x0, #40]
   3a438:	ldr	x0, [sp, #672]
   3a43c:	ldr	x0, [x0, #24]
   3a440:	lsl	x0, x0, #3
   3a444:	sub	x0, x0, #0x8
   3a448:	add	x0, x1, x0
   3a44c:	ldr	x0, [x0]
   3a450:	cmp	x0, #0x0
   3a454:	cset	w0, eq  // eq = none
   3a458:	and	w0, w0, #0xff
   3a45c:	cmp	w0, #0x0
   3a460:	b.eq	3a4d0 <PyInit__decimal@@Base+0x227f8>  // b.none
   3a464:	ldr	x0, [sp, #48]
   3a468:	str	x0, [sp, #664]
   3a46c:	ldr	x0, [sp, #664]
   3a470:	str	x0, [sp, #656]
   3a474:	ldr	x0, [sp, #656]
   3a478:	ldr	x1, [x0, #40]
   3a47c:	ldr	x0, [sp, #656]
   3a480:	ldr	x0, [x0, #24]
   3a484:	lsl	x0, x0, #3
   3a488:	sub	x0, x0, #0x8
   3a48c:	add	x0, x1, x0
   3a490:	ldr	x0, [x0]
   3a494:	cmp	x0, #0x0
   3a498:	cset	w0, eq  // eq = none
   3a49c:	and	w0, w0, #0xff
   3a4a0:	cmp	w0, #0x0
   3a4a4:	b.eq	3a4bc <PyInit__decimal@@Base+0x227e4>  // b.none
   3a4a8:	ldr	x2, [sp, #24]
   3a4ac:	mov	w1, #0x10                  	// #16
   3a4b0:	ldr	x0, [sp, #56]
   3a4b4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a4b8:	b	3a58c <PyInit__decimal@@Base+0x228b4>
   3a4bc:	ldr	x2, [sp, #24]
   3a4c0:	mov	w1, #0x100                 	// #256
   3a4c4:	ldr	x0, [sp, #56]
   3a4c8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a4cc:	b	3a58c <PyInit__decimal@@Base+0x228b4>
   3a4d0:	add	x0, sp, #0x48
   3a4d4:	ldr	x5, [sp, #24]
   3a4d8:	ldr	x4, [sp, #32]
   3a4dc:	ldr	x3, [sp, #40]
   3a4e0:	ldr	x2, [sp, #48]
   3a4e4:	ldr	x1, [sp, #56]
   3a4e8:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   3a4ec:	add	x0, sp, #0x48
   3a4f0:	str	x0, [sp, #648]
   3a4f4:	ldr	x0, [sp, #648]
   3a4f8:	str	x0, [sp, #640]
   3a4fc:	ldr	x0, [sp, #640]
   3a500:	ldrb	w0, [x0]
   3a504:	and	w0, w0, #0xe0
   3a508:	cmp	w0, #0x0
   3a50c:	cset	w0, eq  // eq = none
   3a510:	and	w0, w0, #0xff
   3a514:	cmp	w0, #0x0
   3a518:	b.eq	3a534 <PyInit__decimal@@Base+0x2285c>  // b.none
   3a51c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3a520:	add	x0, x0, #0x6f8
   3a524:	ldr	x1, [x0]
   3a528:	ldr	x0, [sp, #648]
   3a52c:	ldr	x0, [x0, #40]
   3a530:	blr	x1
   3a534:	ldr	x0, [sp, #648]
   3a538:	str	x0, [sp, #632]
   3a53c:	ldr	x0, [sp, #632]
   3a540:	ldrb	w0, [x0]
   3a544:	and	w0, w0, #0x10
   3a548:	cmp	w0, #0x0
   3a54c:	cset	w0, eq  // eq = none
   3a550:	and	w0, w0, #0xff
   3a554:	cmp	w0, #0x0
   3a558:	b.eq	3a570 <PyInit__decimal@@Base+0x22898>  // b.none
   3a55c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3a560:	add	x0, x0, #0x6f8
   3a564:	ldr	x1, [x0]
   3a568:	ldr	x0, [sp, #648]
   3a56c:	blr	x1
   3a570:	nop
   3a574:	ldr	x2, [sp, #24]
   3a578:	ldr	x1, [sp, #32]
   3a57c:	ldr	x0, [sp, #56]
   3a580:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3a584:	b	3a58c <PyInit__decimal@@Base+0x228b4>
   3a588:	nop
   3a58c:	ldp	x29, x30, [sp]
   3a590:	add	sp, sp, #0x2d0
   3a594:	ret
   3a598:	sub	sp, sp, #0x5a0
   3a59c:	stp	x29, x30, [sp]
   3a5a0:	mov	x29, sp
   3a5a4:	str	x0, [sp, #56]
   3a5a8:	str	x1, [sp, #48]
   3a5ac:	str	x2, [sp, #40]
   3a5b0:	str	x3, [sp, #32]
   3a5b4:	str	x4, [sp, #24]
   3a5b8:	mov	w0, #0x30                  	// #48
   3a5bc:	strb	w0, [sp, #624]
   3a5c0:	str	xzr, [sp, #632]
   3a5c4:	str	xzr, [sp, #640]
   3a5c8:	str	xzr, [sp, #648]
   3a5cc:	mov	x0, #0x40                  	// #64
   3a5d0:	str	x0, [sp, #656]
   3a5d4:	add	x0, sp, #0x2a0
   3a5d8:	str	x0, [sp, #664]
   3a5dc:	mov	w0, #0x30                  	// #48
   3a5e0:	strb	w0, [sp, #64]
   3a5e4:	str	xzr, [sp, #72]
   3a5e8:	str	xzr, [sp, #80]
   3a5ec:	str	xzr, [sp, #88]
   3a5f0:	mov	x0, #0x40                  	// #64
   3a5f4:	str	x0, [sp, #96]
   3a5f8:	add	x0, sp, #0x70
   3a5fc:	str	x0, [sp, #104]
   3a600:	ldr	x0, [sp, #48]
   3a604:	str	x0, [sp, #1400]
   3a608:	ldr	x0, [sp, #1400]
   3a60c:	ldrb	w0, [x0]
   3a610:	and	w0, w0, #0xe
   3a614:	cmp	w0, #0x0
   3a618:	b.ne	3a638 <PyInit__decimal@@Base+0x22960>  // b.any
   3a61c:	ldr	x0, [sp, #40]
   3a620:	str	x0, [sp, #1392]
   3a624:	ldr	x0, [sp, #1392]
   3a628:	ldrb	w0, [x0]
   3a62c:	and	w0, w0, #0xe
   3a630:	cmp	w0, #0x0
   3a634:	b.eq	3a6cc <PyInit__decimal@@Base+0x229f4>  // b.none
   3a638:	ldr	x4, [sp, #24]
   3a63c:	ldr	x3, [sp, #32]
   3a640:	ldr	x2, [sp, #40]
   3a644:	ldr	x1, [sp, #48]
   3a648:	ldr	x0, [sp, #56]
   3a64c:	bl	2861c <PyInit__decimal@@Base+0x10944>
   3a650:	cmp	w0, #0x0
   3a654:	b.ne	3ab50 <PyInit__decimal@@Base+0x22e78>  // b.any
   3a658:	ldr	x0, [sp, #48]
   3a65c:	str	x0, [sp, #1384]
   3a660:	ldr	x0, [sp, #1384]
   3a664:	ldrb	w0, [x0]
   3a668:	and	w0, w0, #0x2
   3a66c:	cmp	w0, #0x0
   3a670:	b.eq	3a688 <PyInit__decimal@@Base+0x229b0>  // b.none
   3a674:	ldr	x2, [sp, #24]
   3a678:	mov	w1, #0x100                 	// #256
   3a67c:	ldr	x0, [sp, #56]
   3a680:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a684:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3a688:	ldr	x0, [sp, #40]
   3a68c:	str	x0, [sp, #1376]
   3a690:	ldr	x0, [sp, #1376]
   3a694:	ldrb	w0, [x0]
   3a698:	and	w0, w0, #0x2
   3a69c:	cmp	w0, #0x0
   3a6a0:	b.eq	3a6c8 <PyInit__decimal@@Base+0x229f0>  // b.none
   3a6a4:	ldr	x2, [sp, #24]
   3a6a8:	ldr	x1, [sp, #48]
   3a6ac:	ldr	x0, [sp, #56]
   3a6b0:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3a6b4:	ldr	x2, [sp, #24]
   3a6b8:	ldr	x1, [sp, #32]
   3a6bc:	ldr	x0, [sp, #56]
   3a6c0:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3a6c4:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3a6c8:	bl	6860 <abort@plt>
   3a6cc:	ldr	x0, [sp, #40]
   3a6d0:	str	x0, [sp, #1368]
   3a6d4:	ldr	x0, [sp, #1368]
   3a6d8:	str	x0, [sp, #1360]
   3a6dc:	ldr	x0, [sp, #1360]
   3a6e0:	ldr	x1, [x0, #40]
   3a6e4:	ldr	x0, [sp, #1360]
   3a6e8:	ldr	x0, [x0, #24]
   3a6ec:	lsl	x0, x0, #3
   3a6f0:	sub	x0, x0, #0x8
   3a6f4:	add	x0, x1, x0
   3a6f8:	ldr	x0, [x0]
   3a6fc:	cmp	x0, #0x0
   3a700:	cset	w0, eq  // eq = none
   3a704:	and	w0, w0, #0xff
   3a708:	cmp	w0, #0x0
   3a70c:	b.eq	3a77c <PyInit__decimal@@Base+0x22aa4>  // b.none
   3a710:	ldr	x0, [sp, #48]
   3a714:	str	x0, [sp, #1352]
   3a718:	ldr	x0, [sp, #1352]
   3a71c:	str	x0, [sp, #1344]
   3a720:	ldr	x0, [sp, #1344]
   3a724:	ldr	x1, [x0, #40]
   3a728:	ldr	x0, [sp, #1344]
   3a72c:	ldr	x0, [x0, #24]
   3a730:	lsl	x0, x0, #3
   3a734:	sub	x0, x0, #0x8
   3a738:	add	x0, x1, x0
   3a73c:	ldr	x0, [x0]
   3a740:	cmp	x0, #0x0
   3a744:	cset	w0, eq  // eq = none
   3a748:	and	w0, w0, #0xff
   3a74c:	cmp	w0, #0x0
   3a750:	b.eq	3a768 <PyInit__decimal@@Base+0x22a90>  // b.none
   3a754:	ldr	x2, [sp, #24]
   3a758:	mov	w1, #0x10                  	// #16
   3a75c:	ldr	x0, [sp, #56]
   3a760:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a764:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3a768:	ldr	x2, [sp, #24]
   3a76c:	mov	w1, #0x100                 	// #256
   3a770:	ldr	x0, [sp, #56]
   3a774:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a778:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3a77c:	ldr	x1, [sp, #56]
   3a780:	ldr	x0, [sp, #40]
   3a784:	cmp	x1, x0
   3a788:	b.ne	3a7c0 <PyInit__decimal@@Base+0x22ae8>  // b.any
   3a78c:	add	x0, sp, #0x270
   3a790:	ldr	x2, [sp, #24]
   3a794:	ldr	x1, [sp, #40]
   3a798:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3a79c:	cmp	w0, #0x0
   3a7a0:	b.ne	3a7b8 <PyInit__decimal@@Base+0x22ae0>  // b.any
   3a7a4:	ldr	x2, [sp, #24]
   3a7a8:	mov	w1, #0x200                 	// #512
   3a7ac:	ldr	x0, [sp, #56]
   3a7b0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a7b4:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3a7b8:	add	x0, sp, #0x270
   3a7bc:	str	x0, [sp, #40]
   3a7c0:	add	x0, sp, #0x40
   3a7c4:	ldr	x5, [sp, #24]
   3a7c8:	ldr	x4, [sp, #32]
   3a7cc:	ldr	x3, [sp, #40]
   3a7d0:	ldr	x2, [sp, #48]
   3a7d4:	ldr	x1, [sp, #56]
   3a7d8:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   3a7dc:	add	x0, sp, #0x40
   3a7e0:	str	x0, [sp, #1336]
   3a7e4:	ldr	x0, [sp, #1336]
   3a7e8:	ldrb	w0, [x0]
   3a7ec:	and	w0, w0, #0xc
   3a7f0:	cmp	w0, #0x0
   3a7f4:	b.ne	3aa18 <PyInit__decimal@@Base+0x22d40>  // b.any
   3a7f8:	ldr	x0, [sp, #56]
   3a7fc:	str	x0, [sp, #1328]
   3a800:	ldr	x0, [sp, #1328]
   3a804:	ldrb	w0, [x0]
   3a808:	and	w0, w0, #0xc
   3a80c:	cmp	w0, #0x0
   3a810:	b.ne	3aa18 <PyInit__decimal@@Base+0x22d40>  // b.any
   3a814:	ldr	x0, [sp, #56]
   3a818:	str	x0, [sp, #1320]
   3a81c:	ldr	x0, [sp, #1320]
   3a820:	str	x0, [sp, #1312]
   3a824:	ldr	x0, [sp, #1312]
   3a828:	ldr	x1, [x0, #40]
   3a82c:	ldr	x0, [sp, #1312]
   3a830:	ldr	x0, [x0, #24]
   3a834:	lsl	x0, x0, #3
   3a838:	sub	x0, x0, #0x8
   3a83c:	add	x0, x1, x0
   3a840:	ldr	x0, [x0]
   3a844:	cmp	x0, #0x0
   3a848:	cset	w0, eq  // eq = none
   3a84c:	and	w0, w0, #0xff
   3a850:	cmp	w0, #0x0
   3a854:	b.ne	3aa20 <PyInit__decimal@@Base+0x22d48>  // b.any
   3a858:	ldr	x0, [sp, #40]
   3a85c:	str	x0, [sp, #1296]
   3a860:	ldr	x0, [sp, #1296]
   3a864:	ldr	x1, [x0, #8]
   3a868:	ldr	x0, [sp, #1296]
   3a86c:	ldr	x0, [x0, #16]
   3a870:	add	x0, x1, x0
   3a874:	sub	x1, x0, #0x1
   3a878:	ldr	x0, [sp, #56]
   3a87c:	str	x0, [sp, #1304]
   3a880:	ldr	x0, [sp, #1304]
   3a884:	ldr	x2, [x0, #8]
   3a888:	ldr	x0, [sp, #1304]
   3a88c:	ldr	x0, [x0, #16]
   3a890:	add	x0, x2, x0
   3a894:	sub	x0, x0, #0x1
   3a898:	sub	x0, x1, x0
   3a89c:	str	x0, [sp, #1432]
   3a8a0:	ldr	x0, [sp, #1432]
   3a8a4:	cmn	x0, #0x1
   3a8a8:	b.lt	3aa28 <PyInit__decimal@@Base+0x22d50>  // b.tstop
   3a8ac:	ldr	x0, [sp, #1432]
   3a8b0:	cmp	x0, #0x1
   3a8b4:	b.gt	3aa28 <PyInit__decimal@@Base+0x22d50>
   3a8b8:	add	x0, sp, #0x40
   3a8bc:	bl	27634 <PyInit__decimal@@Base+0xf95c>
   3a8c0:	str	w0, [sp, #1428]
   3a8c4:	ldr	x0, [sp, #80]
   3a8c8:	str	x0, [sp, #1416]
   3a8cc:	add	x0, sp, #0x40
   3a8d0:	bl	276b0 <PyInit__decimal@@Base+0xf9d8>
   3a8d4:	str	w0, [sp, #1412]
   3a8d8:	add	x0, sp, #0x4a0
   3a8dc:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3a8e0:	ldr	x0, [sp, #48]
   3a8e4:	str	x0, [sp, #1280]
   3a8e8:	ldr	x0, [sp, #1280]
   3a8ec:	ldrb	w0, [x0]
   3a8f0:	and	w0, w0, #0x1
   3a8f4:	and	w1, w0, #0xff
   3a8f8:	ldr	x0, [sp, #40]
   3a8fc:	str	x0, [sp, #1288]
   3a900:	ldr	x0, [sp, #1288]
   3a904:	ldrb	w0, [x0]
   3a908:	and	w0, w0, #0x1
   3a90c:	and	w0, w0, #0xff
   3a910:	cmp	w1, w0
   3a914:	b.ne	3a940 <PyInit__decimal@@Base+0x22c68>  // b.any
   3a918:	add	x0, sp, #0x4a0
   3a91c:	add	x2, x0, #0x1c
   3a920:	add	x1, sp, #0x4a0
   3a924:	add	x0, sp, #0x40
   3a928:	mov	x4, x2
   3a92c:	mov	x3, x1
   3a930:	ldr	x2, [sp, #40]
   3a934:	ldr	x1, [sp, #56]
   3a938:	bl	2f528 <PyInit__decimal@@Base+0x17850>
   3a93c:	b	3a964 <PyInit__decimal@@Base+0x22c8c>
   3a940:	add	x0, sp, #0x4a0
   3a944:	add	x2, x0, #0x1c
   3a948:	add	x1, sp, #0x4a0
   3a94c:	add	x0, sp, #0x40
   3a950:	mov	x4, x2
   3a954:	mov	x3, x1
   3a958:	ldr	x2, [sp, #40]
   3a95c:	ldr	x1, [sp, #56]
   3a960:	bl	2f4cc <PyInit__decimal@@Base+0x177f4>
   3a964:	ldr	w1, [sp, #1212]
   3a968:	mov	w0, #0x3be                 	// #958
   3a96c:	and	w0, w1, w0
   3a970:	cmp	w0, #0x0
   3a974:	b.eq	3a998 <PyInit__decimal@@Base+0x22cc0>  // b.none
   3a978:	ldr	w1, [sp, #1212]
   3a97c:	mov	w0, #0x3be                 	// #958
   3a980:	and	w0, w1, w0
   3a984:	ldr	x2, [sp, #24]
   3a988:	mov	w1, w0
   3a98c:	ldr	x0, [sp, #56]
   3a990:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a994:	b	3aa2c <PyInit__decimal@@Base+0x22d54>
   3a998:	add	x0, sp, #0x40
   3a99c:	ldr	x1, [sp, #56]
   3a9a0:	bl	2a580 <PyInit__decimal@@Base+0x128a8>
   3a9a4:	str	w0, [sp, #1408]
   3a9a8:	ldr	w0, [sp, #1408]
   3a9ac:	cmp	w0, #0x0
   3a9b0:	b.lt	3a9cc <PyInit__decimal@@Base+0x22cf4>  // b.tstop
   3a9b4:	ldr	w0, [sp, #1408]
   3a9b8:	cmp	w0, #0x0
   3a9bc:	b.ne	3aa28 <PyInit__decimal@@Base+0x22d50>  // b.any
   3a9c0:	ldr	w0, [sp, #1412]
   3a9c4:	cmp	w0, #0x0
   3a9c8:	b.eq	3aa28 <PyInit__decimal@@Base+0x22d50>  // b.none
   3a9cc:	ldr	w0, [sp, #1428]
   3a9d0:	cmp	w0, #0x0
   3a9d4:	b.eq	3aa00 <PyInit__decimal@@Base+0x22d28>  // b.none
   3a9d8:	ldr	x0, [sp, #32]
   3a9dc:	ldr	x0, [x0]
   3a9e0:	ldr	x1, [sp, #1416]
   3a9e4:	cmp	x1, x0
   3a9e8:	b.ne	3aa00 <PyInit__decimal@@Base+0x22d28>  // b.any
   3a9ec:	ldr	x2, [sp, #24]
   3a9f0:	mov	w1, #0x8                   	// #8
   3a9f4:	ldr	x0, [sp, #56]
   3a9f8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3a9fc:	b	3aa2c <PyInit__decimal@@Base+0x22d54>
   3aa00:	add	x0, sp, #0x40
   3aa04:	ldr	x2, [sp, #24]
   3aa08:	mov	x1, x0
   3aa0c:	ldr	x0, [sp, #56]
   3aa10:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3aa14:	b	3aa2c <PyInit__decimal@@Base+0x22d54>
   3aa18:	nop
   3aa1c:	b	3aa2c <PyInit__decimal@@Base+0x22d54>
   3aa20:	nop
   3aa24:	b	3aa2c <PyInit__decimal@@Base+0x22d54>
   3aa28:	nop
   3aa2c:	add	x0, sp, #0x270
   3aa30:	str	x0, [sp, #1248]
   3aa34:	ldr	x0, [sp, #1248]
   3aa38:	str	x0, [sp, #1240]
   3aa3c:	ldr	x0, [sp, #1240]
   3aa40:	ldrb	w0, [x0]
   3aa44:	and	w0, w0, #0xe0
   3aa48:	cmp	w0, #0x0
   3aa4c:	cset	w0, eq  // eq = none
   3aa50:	and	w0, w0, #0xff
   3aa54:	cmp	w0, #0x0
   3aa58:	b.eq	3aa74 <PyInit__decimal@@Base+0x22d9c>  // b.none
   3aa5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3aa60:	add	x0, x0, #0x6f8
   3aa64:	ldr	x1, [x0]
   3aa68:	ldr	x0, [sp, #1248]
   3aa6c:	ldr	x0, [x0, #40]
   3aa70:	blr	x1
   3aa74:	ldr	x0, [sp, #1248]
   3aa78:	str	x0, [sp, #1232]
   3aa7c:	ldr	x0, [sp, #1232]
   3aa80:	ldrb	w0, [x0]
   3aa84:	and	w0, w0, #0x10
   3aa88:	cmp	w0, #0x0
   3aa8c:	cset	w0, eq  // eq = none
   3aa90:	and	w0, w0, #0xff
   3aa94:	cmp	w0, #0x0
   3aa98:	b.eq	3aab0 <PyInit__decimal@@Base+0x22dd8>  // b.none
   3aa9c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3aaa0:	add	x0, x0, #0x6f8
   3aaa4:	ldr	x1, [x0]
   3aaa8:	ldr	x0, [sp, #1248]
   3aaac:	blr	x1
   3aab0:	nop
   3aab4:	add	x0, sp, #0x40
   3aab8:	str	x0, [sp, #1272]
   3aabc:	ldr	x0, [sp, #1272]
   3aac0:	str	x0, [sp, #1264]
   3aac4:	ldr	x0, [sp, #1264]
   3aac8:	ldrb	w0, [x0]
   3aacc:	and	w0, w0, #0xe0
   3aad0:	cmp	w0, #0x0
   3aad4:	cset	w0, eq  // eq = none
   3aad8:	and	w0, w0, #0xff
   3aadc:	cmp	w0, #0x0
   3aae0:	b.eq	3aafc <PyInit__decimal@@Base+0x22e24>  // b.none
   3aae4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3aae8:	add	x0, x0, #0x6f8
   3aaec:	ldr	x1, [x0]
   3aaf0:	ldr	x0, [sp, #1272]
   3aaf4:	ldr	x0, [x0, #40]
   3aaf8:	blr	x1
   3aafc:	ldr	x0, [sp, #1272]
   3ab00:	str	x0, [sp, #1256]
   3ab04:	ldr	x0, [sp, #1256]
   3ab08:	ldrb	w0, [x0]
   3ab0c:	and	w0, w0, #0x10
   3ab10:	cmp	w0, #0x0
   3ab14:	cset	w0, eq  // eq = none
   3ab18:	and	w0, w0, #0xff
   3ab1c:	cmp	w0, #0x0
   3ab20:	b.eq	3ab38 <PyInit__decimal@@Base+0x22e60>  // b.none
   3ab24:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3ab28:	add	x0, x0, #0x6f8
   3ab2c:	ldr	x1, [x0]
   3ab30:	ldr	x0, [sp, #1272]
   3ab34:	blr	x1
   3ab38:	nop
   3ab3c:	ldr	x2, [sp, #24]
   3ab40:	ldr	x1, [sp, #32]
   3ab44:	ldr	x0, [sp, #56]
   3ab48:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3ab4c:	b	3ab54 <PyInit__decimal@@Base+0x22e7c>
   3ab50:	nop
   3ab54:	ldp	x29, x30, [sp]
   3ab58:	add	sp, sp, #0x5a0
   3ab5c:	ret
   3ab60:	stp	x29, x30, [sp, #-128]!
   3ab64:	mov	x29, sp
   3ab68:	str	x0, [sp, #56]
   3ab6c:	str	x1, [sp, #48]
   3ab70:	str	x2, [sp, #40]
   3ab74:	str	x3, [sp, #32]
   3ab78:	str	x4, [sp, #24]
   3ab7c:	ldr	x0, [sp, #48]
   3ab80:	str	x0, [sp, #96]
   3ab84:	ldr	x0, [sp, #96]
   3ab88:	ldrb	w0, [x0]
   3ab8c:	and	w0, w0, #0xe
   3ab90:	cmp	w0, #0x0
   3ab94:	b.eq	3abac <PyInit__decimal@@Base+0x22ed4>  // b.none
   3ab98:	ldr	x2, [sp, #24]
   3ab9c:	ldr	x1, [sp, #48]
   3aba0:	ldr	x0, [sp, #56]
   3aba4:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3aba8:	b	3ad8c <PyInit__decimal@@Base+0x230b4>
   3abac:	ldr	x0, [sp, #48]
   3abb0:	str	x0, [sp, #88]
   3abb4:	ldr	x0, [sp, #88]
   3abb8:	str	x0, [sp, #80]
   3abbc:	ldr	x0, [sp, #80]
   3abc0:	ldrb	w0, [x0]
   3abc4:	and	w0, w0, #0xe
   3abc8:	cmp	w0, #0x0
   3abcc:	b.ne	3ac08 <PyInit__decimal@@Base+0x22f30>  // b.any
   3abd0:	ldr	x0, [sp, #88]
   3abd4:	str	x0, [sp, #72]
   3abd8:	ldr	x0, [sp, #72]
   3abdc:	ldr	x1, [x0, #40]
   3abe0:	ldr	x0, [sp, #72]
   3abe4:	ldr	x0, [x0, #24]
   3abe8:	lsl	x0, x0, #3
   3abec:	sub	x0, x0, #0x8
   3abf0:	add	x0, x1, x0
   3abf4:	ldr	x0, [x0]
   3abf8:	cmp	x0, #0x0
   3abfc:	b.ne	3ac08 <PyInit__decimal@@Base+0x22f30>  // b.any
   3ac00:	mov	w0, #0x1                   	// #1
   3ac04:	b	3ac0c <PyInit__decimal@@Base+0x22f34>
   3ac08:	mov	w0, #0x0                   	// #0
   3ac0c:	cmp	w0, #0x0
   3ac10:	b.eq	3ac44 <PyInit__decimal@@Base+0x22f6c>  // b.none
   3ac14:	ldr	x0, [sp, #48]
   3ac18:	str	x0, [sp, #64]
   3ac1c:	ldr	x0, [sp, #64]
   3ac20:	ldrb	w0, [x0]
   3ac24:	and	w0, w0, #0x1
   3ac28:	and	w0, w0, #0xff
   3ac2c:	ldr	x3, [sp, #40]
   3ac30:	mov	x2, #0x0                   	// #0
   3ac34:	mov	w1, w0
   3ac38:	ldr	x0, [sp, #56]
   3ac3c:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3ac40:	b	3ad8c <PyInit__decimal@@Base+0x230b4>
   3ac44:	ldr	x0, [sp, #48]
   3ac48:	ldr	x1, [x0, #8]
   3ac4c:	ldr	x0, [sp, #40]
   3ac50:	sub	x0, x1, x0
   3ac54:	str	x0, [sp, #120]
   3ac58:	ldr	x0, [sp, #120]
   3ac5c:	cmp	x0, #0x0
   3ac60:	b.lt	3acd0 <PyInit__decimal@@Base+0x22ff8>  // b.tstop
   3ac64:	ldr	x0, [sp, #120]
   3ac68:	str	x0, [sp, #112]
   3ac6c:	ldr	x0, [sp, #48]
   3ac70:	ldr	x1, [x0, #16]
   3ac74:	ldr	x0, [sp, #112]
   3ac78:	add	x1, x1, x0
   3ac7c:	mov	x0, #0xa7640000            	// #2808348672
   3ac80:	movk	x0, #0xb6b3, lsl #32
   3ac84:	movk	x0, #0xde0, lsl #48
   3ac88:	cmp	x1, x0
   3ac8c:	b.le	3aca4 <PyInit__decimal@@Base+0x22fcc>
   3ac90:	ldr	x2, [sp, #24]
   3ac94:	mov	w1, #0x100                 	// #256
   3ac98:	ldr	x0, [sp, #56]
   3ac9c:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3aca0:	b	3ad8c <PyInit__decimal@@Base+0x230b4>
   3aca4:	ldr	x3, [sp, #24]
   3aca8:	ldr	x2, [sp, #112]
   3acac:	ldr	x1, [sp, #48]
   3acb0:	ldr	x0, [sp, #56]
   3acb4:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3acb8:	cmp	w0, #0x0
   3acbc:	b.eq	3ad80 <PyInit__decimal@@Base+0x230a8>  // b.none
   3acc0:	ldr	x0, [sp, #56]
   3acc4:	ldr	x1, [sp, #40]
   3acc8:	str	x1, [x0, #8]
   3accc:	b	3ad54 <PyInit__decimal@@Base+0x2307c>
   3acd0:	ldr	x0, [sp, #120]
   3acd4:	neg	x0, x0
   3acd8:	str	x0, [sp, #112]
   3acdc:	ldr	x3, [sp, #24]
   3ace0:	ldr	x2, [sp, #112]
   3ace4:	ldr	x1, [sp, #48]
   3ace8:	ldr	x0, [sp, #56]
   3acec:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3acf0:	str	x0, [sp, #104]
   3acf4:	ldr	x0, [sp, #104]
   3acf8:	cmn	x0, #0x1
   3acfc:	b.eq	3ad88 <PyInit__decimal@@Base+0x230b0>  // b.none
   3ad00:	ldr	x0, [sp, #56]
   3ad04:	ldr	x1, [sp, #40]
   3ad08:	str	x1, [x0, #8]
   3ad0c:	ldr	x3, [sp, #24]
   3ad10:	ldr	x2, [sp, #32]
   3ad14:	ldr	x1, [sp, #104]
   3ad18:	ldr	x0, [sp, #56]
   3ad1c:	bl	28c68 <PyInit__decimal@@Base+0x10f90>
   3ad20:	ldr	x0, [sp, #24]
   3ad24:	ldr	w0, [x0]
   3ad28:	orr	w1, w0, #0x1000
   3ad2c:	ldr	x0, [sp, #24]
   3ad30:	str	w1, [x0]
   3ad34:	ldr	x0, [sp, #104]
   3ad38:	cmp	x0, #0x0
   3ad3c:	b.eq	3ad54 <PyInit__decimal@@Base+0x2307c>  // b.none
   3ad40:	ldr	x0, [sp, #24]
   3ad44:	ldr	w0, [x0]
   3ad48:	orr	w1, w0, #0x40
   3ad4c:	ldr	x0, [sp, #24]
   3ad50:	str	w1, [x0]
   3ad54:	ldr	x1, [sp, #32]
   3ad58:	ldr	x0, [sp, #56]
   3ad5c:	bl	255b8 <PyInit__decimal@@Base+0xd8e0>
   3ad60:	cmp	w0, #0x0
   3ad64:	b.eq	3ad8c <PyInit__decimal@@Base+0x230b4>  // b.none
   3ad68:	ldr	x0, [sp, #24]
   3ad6c:	ldr	w0, [x0]
   3ad70:	orr	w1, w0, #0x2000
   3ad74:	ldr	x0, [sp, #24]
   3ad78:	str	w1, [x0]
   3ad7c:	b	3ad8c <PyInit__decimal@@Base+0x230b4>
   3ad80:	nop
   3ad84:	b	3ad8c <PyInit__decimal@@Base+0x230b4>
   3ad88:	nop
   3ad8c:	ldp	x29, x30, [sp], #128
   3ad90:	ret
   3ad94:	stp	x29, x30, [sp, #-64]!
   3ad98:	mov	x29, sp
   3ad9c:	str	x0, [sp, #56]
   3ada0:	str	x1, [sp, #48]
   3ada4:	str	x2, [sp, #40]
   3ada8:	str	x3, [sp, #32]
   3adac:	str	x4, [sp, #24]
   3adb0:	ldr	x1, [sp, #40]
   3adb4:	mov	x0, #0xa7640000            	// #2808348672
   3adb8:	movk	x0, #0xb6b3, lsl #32
   3adbc:	movk	x0, #0xde0, lsl #48
   3adc0:	cmp	x1, x0
   3adc4:	b.gt	3ade4 <PyInit__decimal@@Base+0x2310c>
   3adc8:	ldr	x1, [sp, #40]
   3adcc:	mov	x0, #0x3                   	// #3
   3add0:	movk	x0, #0xb138, lsl #16
   3add4:	movk	x0, #0x9298, lsl #32
   3add8:	movk	x0, #0xe43e, lsl #48
   3addc:	cmp	x1, x0
   3ade0:	b.ge	3adf8 <PyInit__decimal@@Base+0x23120>  // b.tcont
   3ade4:	ldr	x2, [sp, #24]
   3ade8:	mov	w1, #0x100                 	// #256
   3adec:	ldr	x0, [sp, #56]
   3adf0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3adf4:	b	3ae10 <PyInit__decimal@@Base+0x23138>
   3adf8:	ldr	x4, [sp, #24]
   3adfc:	ldr	x3, [sp, #32]
   3ae00:	ldr	x2, [sp, #40]
   3ae04:	ldr	x1, [sp, #48]
   3ae08:	ldr	x0, [sp, #56]
   3ae0c:	bl	3ab60 <PyInit__decimal@@Base+0x22e88>
   3ae10:	ldp	x29, x30, [sp], #64
   3ae14:	ret
   3ae18:	stp	x29, x30, [sp, #-64]!
   3ae1c:	mov	x29, sp
   3ae20:	str	x0, [sp, #56]
   3ae24:	str	x1, [sp, #48]
   3ae28:	str	x2, [sp, #40]
   3ae2c:	str	x3, [sp, #32]
   3ae30:	str	x4, [sp, #24]
   3ae34:	ldr	x1, [sp, #40]
   3ae38:	mov	x0, #0xa7640000            	// #2808348672
   3ae3c:	movk	x0, #0xb6b3, lsl #32
   3ae40:	movk	x0, #0xde0, lsl #48
   3ae44:	cmp	x1, x0
   3ae48:	b.gt	3ae68 <PyInit__decimal@@Base+0x23190>
   3ae4c:	ldr	x1, [sp, #40]
   3ae50:	mov	x0, #0x4                   	// #4
   3ae54:	movk	x0, #0x9d4, lsl #16
   3ae58:	movk	x0, #0xdbe5, lsl #32
   3ae5c:	movk	x0, #0xd65d, lsl #48
   3ae60:	cmp	x1, x0
   3ae64:	b.ge	3ae7c <PyInit__decimal@@Base+0x231a4>  // b.tcont
   3ae68:	ldr	x2, [sp, #24]
   3ae6c:	mov	w1, #0x100                 	// #256
   3ae70:	ldr	x0, [sp, #56]
   3ae74:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3ae78:	b	3ae94 <PyInit__decimal@@Base+0x231bc>
   3ae7c:	ldr	x4, [sp, #24]
   3ae80:	ldr	x3, [sp, #32]
   3ae84:	ldr	x2, [sp, #40]
   3ae88:	ldr	x1, [sp, #48]
   3ae8c:	ldr	x0, [sp, #56]
   3ae90:	bl	3ab60 <PyInit__decimal@@Base+0x22e88>
   3ae94:	ldp	x29, x30, [sp], #64
   3ae98:	ret
   3ae9c:	stp	x29, x30, [sp, #-112]!
   3aea0:	mov	x29, sp
   3aea4:	str	w0, [sp, #60]
   3aea8:	str	x1, [sp, #48]
   3aeac:	str	x2, [sp, #40]
   3aeb0:	str	x3, [sp, #32]
   3aeb4:	str	x4, [sp, #24]
   3aeb8:	ldr	x0, [sp, #40]
   3aebc:	str	x0, [sp, #96]
   3aec0:	ldr	x0, [sp, #96]
   3aec4:	ldrb	w0, [x0]
   3aec8:	and	w0, w0, #0xe
   3aecc:	cmp	w0, #0x0
   3aed0:	b.eq	3af04 <PyInit__decimal@@Base+0x2322c>  // b.none
   3aed4:	ldr	x3, [sp, #24]
   3aed8:	ldr	x2, [sp, #32]
   3aedc:	ldr	x1, [sp, #40]
   3aee0:	ldr	x0, [sp, #48]
   3aee4:	bl	28540 <PyInit__decimal@@Base+0x10868>
   3aee8:	cmp	w0, #0x0
   3aeec:	b.ne	3b044 <PyInit__decimal@@Base+0x2336c>  // b.any
   3aef0:	ldr	x2, [sp, #24]
   3aef4:	ldr	x1, [sp, #40]
   3aef8:	ldr	x0, [sp, #48]
   3aefc:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3af00:	b	3b050 <PyInit__decimal@@Base+0x23378>
   3af04:	ldr	x0, [sp, #40]
   3af08:	ldr	x0, [x0, #8]
   3af0c:	cmp	x0, #0x0
   3af10:	b.lt	3af28 <PyInit__decimal@@Base+0x23250>  // b.tstop
   3af14:	ldr	x2, [sp, #24]
   3af18:	ldr	x1, [sp, #40]
   3af1c:	ldr	x0, [sp, #48]
   3af20:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3af24:	b	3b050 <PyInit__decimal@@Base+0x23378>
   3af28:	ldr	x0, [sp, #40]
   3af2c:	str	x0, [sp, #88]
   3af30:	ldr	x0, [sp, #88]
   3af34:	str	x0, [sp, #80]
   3af38:	ldr	x0, [sp, #80]
   3af3c:	ldr	x1, [x0, #40]
   3af40:	ldr	x0, [sp, #80]
   3af44:	ldr	x0, [x0, #24]
   3af48:	lsl	x0, x0, #3
   3af4c:	sub	x0, x0, #0x8
   3af50:	add	x0, x1, x0
   3af54:	ldr	x0, [x0]
   3af58:	cmp	x0, #0x0
   3af5c:	cset	w0, eq  // eq = none
   3af60:	and	w0, w0, #0xff
   3af64:	cmp	w0, #0x0
   3af68:	b.eq	3af9c <PyInit__decimal@@Base+0x232c4>  // b.none
   3af6c:	ldr	x0, [sp, #40]
   3af70:	str	x0, [sp, #72]
   3af74:	ldr	x0, [sp, #72]
   3af78:	ldrb	w0, [x0]
   3af7c:	and	w0, w0, #0x1
   3af80:	and	w0, w0, #0xff
   3af84:	mov	x3, #0x0                   	// #0
   3af88:	mov	x2, #0x0                   	// #0
   3af8c:	mov	w1, w0
   3af90:	ldr	x0, [sp, #48]
   3af94:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3af98:	b	3b050 <PyInit__decimal@@Base+0x23378>
   3af9c:	ldr	x0, [sp, #40]
   3afa0:	ldr	x0, [x0, #8]
   3afa4:	neg	x0, x0
   3afa8:	ldr	x3, [sp, #24]
   3afac:	mov	x2, x0
   3afb0:	ldr	x1, [sp, #40]
   3afb4:	ldr	x0, [sp, #48]
   3afb8:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3afbc:	str	x0, [sp, #104]
   3afc0:	ldr	x0, [sp, #104]
   3afc4:	cmn	x0, #0x1
   3afc8:	b.eq	3b04c <PyInit__decimal@@Base+0x23374>  // b.none
   3afcc:	ldr	x0, [sp, #48]
   3afd0:	str	xzr, [x0, #8]
   3afd4:	ldr	w0, [sp, #60]
   3afd8:	cmp	w0, #0x0
   3afdc:	b.eq	3afec <PyInit__decimal@@Base+0x23314>  // b.none
   3afe0:	ldr	w0, [sp, #60]
   3afe4:	cmp	w0, #0x1
   3afe8:	b.ne	3b050 <PyInit__decimal@@Base+0x23378>  // b.any
   3afec:	ldr	x3, [sp, #24]
   3aff0:	ldr	x2, [sp, #32]
   3aff4:	ldr	x1, [sp, #104]
   3aff8:	ldr	x0, [sp, #48]
   3affc:	bl	28c68 <PyInit__decimal@@Base+0x10f90>
   3b000:	ldr	w0, [sp, #60]
   3b004:	cmp	w0, #0x0
   3b008:	b.ne	3b050 <PyInit__decimal@@Base+0x23378>  // b.any
   3b00c:	ldr	x0, [sp, #24]
   3b010:	ldr	w0, [x0]
   3b014:	orr	w1, w0, #0x1000
   3b018:	ldr	x0, [sp, #24]
   3b01c:	str	w1, [x0]
   3b020:	ldr	x0, [sp, #104]
   3b024:	cmp	x0, #0x0
   3b028:	b.eq	3b050 <PyInit__decimal@@Base+0x23378>  // b.none
   3b02c:	ldr	x0, [sp, #24]
   3b030:	ldr	w0, [x0]
   3b034:	orr	w1, w0, #0x40
   3b038:	ldr	x0, [sp, #24]
   3b03c:	str	w1, [x0]
   3b040:	b	3b050 <PyInit__decimal@@Base+0x23378>
   3b044:	nop
   3b048:	b	3b050 <PyInit__decimal@@Base+0x23378>
   3b04c:	nop
   3b050:	ldp	x29, x30, [sp], #112
   3b054:	ret
   3b058:	stp	x29, x30, [sp, #-48]!
   3b05c:	mov	x29, sp
   3b060:	str	x0, [sp, #40]
   3b064:	str	x1, [sp, #32]
   3b068:	str	x2, [sp, #24]
   3b06c:	str	x3, [sp, #16]
   3b070:	ldr	x4, [sp, #16]
   3b074:	ldr	x3, [sp, #24]
   3b078:	ldr	x2, [sp, #32]
   3b07c:	ldr	x1, [sp, #40]
   3b080:	mov	w0, #0x0                   	// #0
   3b084:	bl	3ae9c <PyInit__decimal@@Base+0x231c4>
   3b088:	nop
   3b08c:	ldp	x29, x30, [sp], #48
   3b090:	ret
   3b094:	stp	x29, x30, [sp, #-48]!
   3b098:	mov	x29, sp
   3b09c:	str	x0, [sp, #40]
   3b0a0:	str	x1, [sp, #32]
   3b0a4:	str	x2, [sp, #24]
   3b0a8:	str	x3, [sp, #16]
   3b0ac:	ldr	x4, [sp, #16]
   3b0b0:	ldr	x3, [sp, #24]
   3b0b4:	ldr	x2, [sp, #32]
   3b0b8:	ldr	x1, [sp, #40]
   3b0bc:	mov	w0, #0x1                   	// #1
   3b0c0:	bl	3ae9c <PyInit__decimal@@Base+0x231c4>
   3b0c4:	nop
   3b0c8:	ldp	x29, x30, [sp], #48
   3b0cc:	ret
   3b0d0:	stp	x29, x30, [sp, #-48]!
   3b0d4:	mov	x29, sp
   3b0d8:	str	x0, [sp, #40]
   3b0dc:	str	x1, [sp, #32]
   3b0e0:	str	x2, [sp, #24]
   3b0e4:	str	x3, [sp, #16]
   3b0e8:	ldr	x4, [sp, #16]
   3b0ec:	ldr	x3, [sp, #24]
   3b0f0:	ldr	x2, [sp, #32]
   3b0f4:	ldr	x1, [sp, #40]
   3b0f8:	mov	w0, #0x2                   	// #2
   3b0fc:	bl	3ae9c <PyInit__decimal@@Base+0x231c4>
   3b100:	nop
   3b104:	ldp	x29, x30, [sp], #48
   3b108:	ret
   3b10c:	stp	x29, x30, [sp, #-96]!
   3b110:	mov	x29, sp
   3b114:	str	x0, [sp, #40]
   3b118:	str	x1, [sp, #32]
   3b11c:	str	x2, [sp, #24]
   3b120:	str	x3, [sp, #16]
   3b124:	ldr	x1, [sp, #24]
   3b128:	add	x0, sp, #0x30
   3b12c:	ldp	x2, x3, [x1]
   3b130:	stp	x2, x3, [x0]
   3b134:	ldp	x2, x3, [x1, #16]
   3b138:	stp	x2, x3, [x0, #16]
   3b13c:	ldp	x2, x3, [x1, #32]
   3b140:	stp	x2, x3, [x0, #32]
   3b144:	mov	w0, #0x3                   	// #3
   3b148:	str	w0, [sp, #84]
   3b14c:	add	x0, sp, #0x30
   3b150:	ldr	x4, [sp, #16]
   3b154:	mov	x3, x0
   3b158:	ldr	x2, [sp, #32]
   3b15c:	ldr	x1, [sp, #40]
   3b160:	mov	w0, #0x1                   	// #1
   3b164:	bl	3ae9c <PyInit__decimal@@Base+0x231c4>
   3b168:	nop
   3b16c:	ldp	x29, x30, [sp], #96
   3b170:	ret
   3b174:	stp	x29, x30, [sp, #-96]!
   3b178:	mov	x29, sp
   3b17c:	str	x0, [sp, #40]
   3b180:	str	x1, [sp, #32]
   3b184:	str	x2, [sp, #24]
   3b188:	str	x3, [sp, #16]
   3b18c:	ldr	x1, [sp, #24]
   3b190:	add	x0, sp, #0x30
   3b194:	ldp	x2, x3, [x1]
   3b198:	stp	x2, x3, [x0]
   3b19c:	ldp	x2, x3, [x1, #16]
   3b1a0:	stp	x2, x3, [x0, #16]
   3b1a4:	ldp	x2, x3, [x1, #32]
   3b1a8:	stp	x2, x3, [x0, #32]
   3b1ac:	mov	w0, #0x2                   	// #2
   3b1b0:	str	w0, [sp, #84]
   3b1b4:	add	x0, sp, #0x30
   3b1b8:	ldr	x4, [sp, #16]
   3b1bc:	mov	x3, x0
   3b1c0:	ldr	x2, [sp, #32]
   3b1c4:	ldr	x1, [sp, #40]
   3b1c8:	mov	w0, #0x1                   	// #1
   3b1cc:	bl	3ae9c <PyInit__decimal@@Base+0x231c4>
   3b1d0:	nop
   3b1d4:	ldp	x29, x30, [sp], #96
   3b1d8:	ret
   3b1dc:	sub	sp, sp, #0x40
   3b1e0:	str	x0, [sp, #8]
   3b1e4:	str	x1, [sp]
   3b1e8:	ldr	x0, [sp, #8]
   3b1ec:	str	x0, [sp, #56]
   3b1f0:	ldr	x0, [sp, #56]
   3b1f4:	ldrb	w0, [x0]
   3b1f8:	and	w0, w0, #0xe
   3b1fc:	cmp	w0, #0x0
   3b200:	b.ne	3b220 <PyInit__decimal@@Base+0x23548>  // b.any
   3b204:	ldr	x0, [sp]
   3b208:	str	x0, [sp, #48]
   3b20c:	ldr	x0, [sp, #48]
   3b210:	ldrb	w0, [x0]
   3b214:	and	w0, w0, #0xe
   3b218:	cmp	w0, #0x0
   3b21c:	b.eq	3b2a0 <PyInit__decimal@@Base+0x235c8>  // b.none
   3b220:	ldr	x0, [sp, #8]
   3b224:	str	x0, [sp, #40]
   3b228:	ldr	x0, [sp, #40]
   3b22c:	ldrb	w0, [x0]
   3b230:	and	w0, w0, #0xc
   3b234:	cmp	w0, #0x0
   3b238:	b.eq	3b258 <PyInit__decimal@@Base+0x23580>  // b.none
   3b23c:	ldr	x0, [sp]
   3b240:	str	x0, [sp, #32]
   3b244:	ldr	x0, [sp, #32]
   3b248:	ldrb	w0, [x0]
   3b24c:	and	w0, w0, #0xc
   3b250:	cmp	w0, #0x0
   3b254:	b.ne	3b290 <PyInit__decimal@@Base+0x235b8>  // b.any
   3b258:	ldr	x0, [sp, #8]
   3b25c:	str	x0, [sp, #24]
   3b260:	ldr	x0, [sp, #24]
   3b264:	ldrb	w0, [x0]
   3b268:	and	w0, w0, #0x2
   3b26c:	cmp	w0, #0x0
   3b270:	b.eq	3b298 <PyInit__decimal@@Base+0x235c0>  // b.none
   3b274:	ldr	x0, [sp]
   3b278:	str	x0, [sp, #16]
   3b27c:	ldr	x0, [sp, #16]
   3b280:	ldrb	w0, [x0]
   3b284:	and	w0, w0, #0x2
   3b288:	cmp	w0, #0x0
   3b28c:	b.eq	3b298 <PyInit__decimal@@Base+0x235c0>  // b.none
   3b290:	mov	w0, #0x1                   	// #1
   3b294:	b	3b2bc <PyInit__decimal@@Base+0x235e4>
   3b298:	mov	w0, #0x0                   	// #0
   3b29c:	b	3b2bc <PyInit__decimal@@Base+0x235e4>
   3b2a0:	ldr	x0, [sp, #8]
   3b2a4:	ldr	x1, [x0, #8]
   3b2a8:	ldr	x0, [sp]
   3b2ac:	ldr	x0, [x0, #8]
   3b2b0:	cmp	x1, x0
   3b2b4:	cset	w0, eq  // eq = none
   3b2b8:	and	w0, w0, #0xff
   3b2bc:	add	sp, sp, #0x40
   3b2c0:	ret
   3b2c4:	sub	sp, sp, #0x30
   3b2c8:	str	x0, [sp, #24]
   3b2cc:	str	x1, [sp, #16]
   3b2d0:	str	x2, [sp, #8]
   3b2d4:	ldr	x1, [sp, #16]
   3b2d8:	ldr	x0, [sp, #8]
   3b2dc:	cmp	x1, x0
   3b2e0:	b.gt	3b2ec <PyInit__decimal@@Base+0x23614>
   3b2e4:	mov	w0, #0xffffffff            	// #-1
   3b2e8:	b	3b34c <PyInit__decimal@@Base+0x23674>
   3b2ec:	str	wzr, [sp, #36]
   3b2f0:	ldr	x0, [sp, #16]
   3b2f4:	str	x0, [sp, #40]
   3b2f8:	ldr	x0, [sp, #40]
   3b2fc:	add	x0, x0, #0x1
   3b300:	lsr	x1, x0, #63
   3b304:	add	x0, x1, x0
   3b308:	asr	x0, x0, #1
   3b30c:	str	x0, [sp, #40]
   3b310:	ldr	w0, [sp, #36]
   3b314:	add	w1, w0, #0x1
   3b318:	str	w1, [sp, #36]
   3b31c:	sxtw	x0, w0
   3b320:	lsl	x0, x0, #3
   3b324:	ldr	x1, [sp, #24]
   3b328:	add	x0, x1, x0
   3b32c:	ldr	x1, [sp, #40]
   3b330:	str	x1, [x0]
   3b334:	ldr	x1, [sp, #40]
   3b338:	ldr	x0, [sp, #8]
   3b33c:	cmp	x1, x0
   3b340:	b.gt	3b2f8 <PyInit__decimal@@Base+0x23620>
   3b344:	ldr	w0, [sp, #36]
   3b348:	sub	w0, w0, #0x1
   3b34c:	add	sp, sp, #0x30
   3b350:	ret
   3b354:	stp	x29, x30, [sp, #-144]!
   3b358:	mov	x29, sp
   3b35c:	str	x0, [sp, #40]
   3b360:	str	x1, [sp, #32]
   3b364:	str	x2, [sp, #24]
   3b368:	str	xzr, [sp, #72]
   3b36c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b370:	add	x0, x0, #0xdb0
   3b374:	ldr	x0, [x0, #136]
   3b378:	str	x0, [sp, #80]
   3b37c:	add	x1, sp, #0x38
   3b380:	add	x0, sp, #0x40
   3b384:	mov	w3, #0x13                  	// #19
   3b388:	ldr	x2, [sp, #32]
   3b38c:	bl	26cbc <PyInit__decimal@@Base+0xefe4>
   3b390:	ldr	x0, [sp, #56]
   3b394:	str	x0, [sp, #88]
   3b398:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b39c:	add	x0, x0, #0xdb0
   3b3a0:	ldr	x0, [x0, #72]
   3b3a4:	ldr	x1, [sp, #88]
   3b3a8:	cmp	x1, x0
   3b3ac:	b.cs	3b4b8 <PyInit__decimal@@Base+0x237e0>  // b.hs, b.nlast
   3b3b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b3b4:	add	x0, x0, #0xdb0
   3b3b8:	ldr	x0, [x0, #32]
   3b3bc:	ldr	x1, [sp, #88]
   3b3c0:	cmp	x1, x0
   3b3c4:	b.cs	3b430 <PyInit__decimal@@Base+0x23758>  // b.hs, b.nlast
   3b3c8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b3cc:	add	x0, x0, #0xdb0
   3b3d0:	ldr	x0, [x0, #16]
   3b3d4:	ldr	x1, [sp, #88]
   3b3d8:	cmp	x1, x0
   3b3dc:	b.cs	3b408 <PyInit__decimal@@Base+0x23730>  // b.hs, b.nlast
   3b3e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b3e4:	add	x0, x0, #0xdb0
   3b3e8:	ldr	x0, [x0, #8]
   3b3ec:	ldr	x1, [sp, #88]
   3b3f0:	cmp	x1, x0
   3b3f4:	b.cs	3b400 <PyInit__decimal@@Base+0x23728>  // b.hs, b.nlast
   3b3f8:	mov	w0, #0x1                   	// #1
   3b3fc:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b400:	mov	w0, #0x2                   	// #2
   3b404:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b408:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b40c:	add	x0, x0, #0xdb0
   3b410:	ldr	x0, [x0, #24]
   3b414:	ldr	x1, [sp, #88]
   3b418:	cmp	x1, x0
   3b41c:	b.cs	3b428 <PyInit__decimal@@Base+0x23750>  // b.hs, b.nlast
   3b420:	mov	w0, #0x3                   	// #3
   3b424:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b428:	mov	w0, #0x4                   	// #4
   3b42c:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b430:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b434:	add	x0, x0, #0xdb0
   3b438:	ldr	x0, [x0, #48]
   3b43c:	ldr	x1, [sp, #88]
   3b440:	cmp	x1, x0
   3b444:	b.cs	3b470 <PyInit__decimal@@Base+0x23798>  // b.hs, b.nlast
   3b448:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b44c:	add	x0, x0, #0xdb0
   3b450:	ldr	x0, [x0, #40]
   3b454:	ldr	x1, [sp, #88]
   3b458:	cmp	x1, x0
   3b45c:	b.cs	3b468 <PyInit__decimal@@Base+0x23790>  // b.hs, b.nlast
   3b460:	mov	w0, #0x5                   	// #5
   3b464:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b468:	mov	w0, #0x6                   	// #6
   3b46c:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b470:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b474:	add	x0, x0, #0xdb0
   3b478:	ldr	x0, [x0, #64]
   3b47c:	ldr	x1, [sp, #88]
   3b480:	cmp	x1, x0
   3b484:	b.cs	3b4b0 <PyInit__decimal@@Base+0x237d8>  // b.hs, b.nlast
   3b488:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b48c:	add	x0, x0, #0xdb0
   3b490:	ldr	x0, [x0, #56]
   3b494:	ldr	x1, [sp, #88]
   3b498:	cmp	x1, x0
   3b49c:	b.cs	3b4a8 <PyInit__decimal@@Base+0x237d0>  // b.hs, b.nlast
   3b4a0:	mov	w0, #0x7                   	// #7
   3b4a4:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b4a8:	mov	w0, #0x8                   	// #8
   3b4ac:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b4b0:	mov	w0, #0x9                   	// #9
   3b4b4:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b4b8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b4bc:	add	x0, x0, #0xdb0
   3b4c0:	ldr	x0, [x0, #112]
   3b4c4:	ldr	x1, [sp, #88]
   3b4c8:	cmp	x1, x0
   3b4cc:	b.cs	3b558 <PyInit__decimal@@Base+0x23880>  // b.hs, b.nlast
   3b4d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b4d4:	add	x0, x0, #0xdb0
   3b4d8:	ldr	x0, [x0, #88]
   3b4dc:	ldr	x1, [sp, #88]
   3b4e0:	cmp	x1, x0
   3b4e4:	b.cs	3b510 <PyInit__decimal@@Base+0x23838>  // b.hs, b.nlast
   3b4e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b4ec:	add	x0, x0, #0xdb0
   3b4f0:	ldr	x0, [x0, #80]
   3b4f4:	ldr	x1, [sp, #88]
   3b4f8:	cmp	x1, x0
   3b4fc:	b.cs	3b508 <PyInit__decimal@@Base+0x23830>  // b.hs, b.nlast
   3b500:	mov	w0, #0xa                   	// #10
   3b504:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b508:	mov	w0, #0xb                   	// #11
   3b50c:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b510:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b514:	add	x0, x0, #0xdb0
   3b518:	ldr	x0, [x0, #104]
   3b51c:	ldr	x1, [sp, #88]
   3b520:	cmp	x1, x0
   3b524:	b.cs	3b550 <PyInit__decimal@@Base+0x23878>  // b.hs, b.nlast
   3b528:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b52c:	add	x0, x0, #0xdb0
   3b530:	ldr	x0, [x0, #96]
   3b534:	ldr	x1, [sp, #88]
   3b538:	cmp	x1, x0
   3b53c:	b.cs	3b548 <PyInit__decimal@@Base+0x23870>  // b.hs, b.nlast
   3b540:	mov	w0, #0xc                   	// #12
   3b544:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b548:	mov	w0, #0xd                   	// #13
   3b54c:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b550:	mov	w0, #0xe                   	// #14
   3b554:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b558:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b55c:	add	x0, x0, #0xdb0
   3b560:	ldr	x0, [x0, #144]
   3b564:	ldr	x1, [sp, #88]
   3b568:	cmp	x1, x0
   3b56c:	b.cs	3b5d8 <PyInit__decimal@@Base+0x23900>  // b.hs, b.nlast
   3b570:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b574:	add	x0, x0, #0xdb0
   3b578:	ldr	x0, [x0, #128]
   3b57c:	ldr	x1, [sp, #88]
   3b580:	cmp	x1, x0
   3b584:	b.cs	3b5b0 <PyInit__decimal@@Base+0x238d8>  // b.hs, b.nlast
   3b588:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b58c:	add	x0, x0, #0xdb0
   3b590:	ldr	x0, [x0, #120]
   3b594:	ldr	x1, [sp, #88]
   3b598:	cmp	x1, x0
   3b59c:	b.cs	3b5a8 <PyInit__decimal@@Base+0x238d0>  // b.hs, b.nlast
   3b5a0:	mov	w0, #0xf                   	// #15
   3b5a4:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b5a8:	mov	w0, #0x10                  	// #16
   3b5ac:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b5b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b5b4:	add	x0, x0, #0xdb0
   3b5b8:	ldr	x0, [x0, #136]
   3b5bc:	ldr	x1, [sp, #88]
   3b5c0:	cmp	x1, x0
   3b5c4:	b.cs	3b5d0 <PyInit__decimal@@Base+0x238f8>  // b.hs, b.nlast
   3b5c8:	mov	w0, #0x11                  	// #17
   3b5cc:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b5d0:	mov	w0, #0x12                  	// #18
   3b5d4:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b5d8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b5dc:	add	x0, x0, #0xdb0
   3b5e0:	ldr	x0, [x0, #152]
   3b5e4:	ldr	x1, [sp, #88]
   3b5e8:	cmp	x1, x0
   3b5ec:	b.cs	3b5f8 <PyInit__decimal@@Base+0x23920>  // b.hs, b.nlast
   3b5f0:	mov	w0, #0x13                  	// #19
   3b5f4:	b	3b5fc <PyInit__decimal@@Base+0x23924>
   3b5f8:	mov	w0, #0x14                  	// #20
   3b5fc:	str	w0, [sp, #140]
   3b600:	mov	w1, #0x13                  	// #19
   3b604:	ldr	w0, [sp, #140]
   3b608:	sub	w1, w1, w0
   3b60c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3b610:	add	x0, x0, #0xdb0
   3b614:	sxtw	x1, w1
   3b618:	ldr	x1, [x0, x1, lsl #3]
   3b61c:	ldr	x0, [sp, #56]
   3b620:	mul	x0, x1, x0
   3b624:	str	x0, [sp, #56]
   3b628:	ldr	x0, [sp, #40]
   3b62c:	str	x0, [sp, #120]
   3b630:	mov	x0, #0x2                   	// #2
   3b634:	str	x0, [sp, #112]
   3b638:	ldr	x0, [sp, #24]
   3b63c:	str	x0, [sp, #104]
   3b640:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3b644:	add	x0, x0, #0x6d8
   3b648:	ldr	x0, [x0]
   3b64c:	ldr	x2, [sp, #112]
   3b650:	ldr	x1, [sp, #112]
   3b654:	cmp	x2, x0
   3b658:	csel	x0, x1, x0, ge  // ge = tcont
   3b65c:	str	x0, [sp, #112]
   3b660:	ldr	x0, [sp, #120]
   3b664:	ldr	x0, [x0, #32]
   3b668:	ldr	x1, [sp, #112]
   3b66c:	cmp	x1, x0
   3b670:	b.eq	3b6cc <PyInit__decimal@@Base+0x239f4>  // b.none
   3b674:	ldr	x0, [sp, #120]
   3b678:	str	x0, [sp, #96]
   3b67c:	ldr	x0, [sp, #96]
   3b680:	ldrb	w0, [x0]
   3b684:	and	w0, w0, #0x20
   3b688:	cmp	w0, #0x0
   3b68c:	b.eq	3b6b8 <PyInit__decimal@@Base+0x239e0>  // b.none
   3b690:	ldr	x0, [sp, #120]
   3b694:	ldr	x0, [x0, #32]
   3b698:	ldr	x1, [sp, #112]
   3b69c:	cmp	x1, x0
   3b6a0:	b.le	3b6d4 <PyInit__decimal@@Base+0x239fc>
   3b6a4:	ldr	x2, [sp, #104]
   3b6a8:	ldr	x1, [sp, #112]
   3b6ac:	ldr	x0, [sp, #120]
   3b6b0:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3b6b4:	b	3b6d8 <PyInit__decimal@@Base+0x23a00>
   3b6b8:	ldr	x2, [sp, #104]
   3b6bc:	ldr	x1, [sp, #112]
   3b6c0:	ldr	x0, [sp, #120]
   3b6c4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3b6c8:	b	3b6d8 <PyInit__decimal@@Base+0x23a00>
   3b6cc:	nop
   3b6d0:	b	3b6d8 <PyInit__decimal@@Base+0x23a00>
   3b6d4:	nop
   3b6d8:	ldr	x0, [sp, #40]
   3b6dc:	ldr	x0, [x0, #40]
   3b6e0:	ldr	x2, [sp, #56]
   3b6e4:	add	x1, sp, #0x48
   3b6e8:	mov	x3, x2
   3b6ec:	mov	x2, #0x2                   	// #2
   3b6f0:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   3b6f4:	ldr	x0, [sp, #40]
   3b6f8:	str	x0, [sp, #128]
   3b6fc:	ldr	x0, [sp, #128]
   3b700:	ldrb	w0, [x0]
   3b704:	and	w0, w0, #0xfffffff0
   3b708:	and	w1, w0, #0xff
   3b70c:	ldr	x0, [sp, #128]
   3b710:	strb	w1, [x0]
   3b714:	nop
   3b718:	ldr	x0, [sp, #40]
   3b71c:	mov	x1, #0xffffffffffffffef    	// #-17
   3b720:	str	x1, [x0, #8]
   3b724:	ldr	x0, [sp, #40]
   3b728:	ldr	x0, [x0, #40]
   3b72c:	add	x0, x0, #0x8
   3b730:	ldr	x0, [x0]
   3b734:	cmp	x0, #0x0
   3b738:	b.ne	3b744 <PyInit__decimal@@Base+0x23a6c>  // b.any
   3b73c:	mov	x0, #0x1                   	// #1
   3b740:	b	3b748 <PyInit__decimal@@Base+0x23a70>
   3b744:	mov	x0, #0x2                   	// #2
   3b748:	ldr	x1, [sp, #40]
   3b74c:	str	x0, [x1, #24]
   3b750:	ldr	x0, [sp, #40]
   3b754:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   3b758:	nop
   3b75c:	ldp	x29, x30, [sp], #144
   3b760:	ret
   3b764:	sub	sp, sp, #0x7f0
   3b768:	stp	x29, x30, [sp]
   3b76c:	mov	x29, sp
   3b770:	str	x0, [sp, #40]
   3b774:	str	x1, [sp, #32]
   3b778:	str	x2, [sp, #24]
   3b77c:	str	x3, [sp, #16]
   3b780:	ldr	x0, [sp, #40]
   3b784:	str	x0, [sp, #2016]
   3b788:	ldr	x0, [sp, #32]
   3b78c:	ldrb	w0, [x0]
   3b790:	sxtb	w0, w0
   3b794:	and	w0, w0, #0xf
   3b798:	sxtb	w1, w0
   3b79c:	mov	w0, #0x50                  	// #80
   3b7a0:	orr	w0, w1, w0
   3b7a4:	sxtb	w0, w0
   3b7a8:	and	w0, w0, #0xff
   3b7ac:	strb	w0, [sp, #1744]
   3b7b0:	ldr	x0, [sp, #32]
   3b7b4:	ldr	x0, [x0, #8]
   3b7b8:	str	x0, [sp, #1752]
   3b7bc:	ldr	x0, [sp, #32]
   3b7c0:	ldr	x0, [x0, #16]
   3b7c4:	str	x0, [sp, #1760]
   3b7c8:	ldr	x0, [sp, #32]
   3b7cc:	ldr	x0, [x0, #24]
   3b7d0:	str	x0, [sp, #1768]
   3b7d4:	ldr	x0, [sp, #32]
   3b7d8:	ldr	x0, [x0, #32]
   3b7dc:	str	x0, [sp, #1776]
   3b7e0:	ldr	x0, [sp, #32]
   3b7e4:	ldr	x0, [x0, #40]
   3b7e8:	str	x0, [sp, #1784]
   3b7ec:	mov	w0, #0x30                  	// #48
   3b7f0:	strb	w0, [sp, #1184]
   3b7f4:	str	xzr, [sp, #1192]
   3b7f8:	str	xzr, [sp, #1200]
   3b7fc:	str	xzr, [sp, #1208]
   3b800:	mov	x0, #0x40                  	// #64
   3b804:	str	x0, [sp, #1216]
   3b808:	add	x0, sp, #0x4d0
   3b80c:	str	x0, [sp, #1224]
   3b810:	mov	w0, #0x30                  	// #48
   3b814:	strb	w0, [sp, #624]
   3b818:	str	xzr, [sp, #632]
   3b81c:	str	xzr, [sp, #640]
   3b820:	str	xzr, [sp, #648]
   3b824:	mov	x0, #0x40                  	// #64
   3b828:	str	x0, [sp, #656]
   3b82c:	add	x0, sp, #0x2a0
   3b830:	str	x0, [sp, #664]
   3b834:	mov	x0, #0x2                   	// #2
   3b838:	str	x0, [sp, #616]
   3b83c:	mov	w0, #0xffffff90            	// #-112
   3b840:	strb	w0, [sp, #568]
   3b844:	str	xzr, [sp, #576]
   3b848:	mov	x0, #0x1                   	// #1
   3b84c:	str	x0, [sp, #584]
   3b850:	mov	x0, #0x1                   	// #1
   3b854:	str	x0, [sp, #592]
   3b858:	mov	x0, #0x1                   	// #1
   3b85c:	str	x0, [sp, #600]
   3b860:	add	x0, sp, #0x268
   3b864:	str	x0, [sp, #608]
   3b868:	ldr	x0, [sp, #32]
   3b86c:	str	x0, [sp, #1960]
   3b870:	ldr	x0, [sp, #1960]
   3b874:	ldrb	w0, [x0]
   3b878:	and	w0, w0, #0x1
   3b87c:	and	w0, w0, #0xff
   3b880:	strb	w0, [sp, #2015]
   3b884:	add	x0, sp, #0x6d0
   3b888:	str	x0, [sp, #2000]
   3b88c:	ldr	x0, [sp, #2000]
   3b890:	str	x0, [sp, #1968]
   3b894:	ldr	x0, [sp, #1968]
   3b898:	ldrb	w0, [x0]
   3b89c:	and	w0, w0, #0xfffffff0
   3b8a0:	and	w1, w0, #0xff
   3b8a4:	ldr	x0, [sp, #1968]
   3b8a8:	strb	w1, [x0]
   3b8ac:	nop
   3b8b0:	ldr	x0, [sp, #2000]
   3b8b4:	ldr	x1, [x0, #16]
   3b8b8:	ldr	x0, [sp, #2000]
   3b8bc:	ldr	x0, [x0, #8]
   3b8c0:	add	x0, x1, x0
   3b8c4:	str	x0, [sp, #1992]
   3b8c8:	ldr	x0, [sp, #2000]
   3b8cc:	ldr	x0, [x0, #16]
   3b8d0:	neg	x1, x0
   3b8d4:	ldr	x0, [sp, #2000]
   3b8d8:	str	x1, [x0, #8]
   3b8dc:	ldr	x2, [sp, #16]
   3b8e0:	ldr	x1, [sp, #2000]
   3b8e4:	ldr	x0, [sp, #2016]
   3b8e8:	bl	3b354 <PyInit__decimal@@Base+0x2367c>
   3b8ec:	add	x0, sp, #0x730
   3b8f0:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3b8f4:	add	x0, sp, #0x700
   3b8f8:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3b8fc:	mov	w0, #0x8                   	// #8
   3b900:	str	w0, [sp, #1828]
   3b904:	ldr	w0, [sp, #1828]
   3b908:	str	w0, [sp, #1876]
   3b90c:	mov	x0, #0x63                  	// #99
   3b910:	movk	x0, #0xa764, lsl #16
   3b914:	movk	x0, #0xb6b3, lsl #32
   3b918:	movk	x0, #0xde0, lsl #48
   3b91c:	str	x0, [sp, #1800]
   3b920:	ldr	x0, [sp, #1800]
   3b924:	str	x0, [sp, #1848]
   3b928:	mov	x0, #0xff9d                	// #65437
   3b92c:	movk	x0, #0x589b, lsl #16
   3b930:	movk	x0, #0x494c, lsl #32
   3b934:	movk	x0, #0xf21f, lsl #48
   3b938:	str	x0, [sp, #1808]
   3b93c:	ldr	x0, [sp, #1808]
   3b940:	str	x0, [sp, #1856]
   3b944:	mov	x0, #0x63                  	// #99
   3b948:	movk	x0, #0xa764, lsl #16
   3b94c:	movk	x0, #0xb6b3, lsl #32
   3b950:	movk	x0, #0xde0, lsl #48
   3b954:	str	x0, [sp, #1792]
   3b958:	ldr	x0, [sp, #24]
   3b95c:	ldr	x0, [x0]
   3b960:	str	x0, [sp, #1984]
   3b964:	ldr	x0, [sp, #1984]
   3b968:	add	x0, x0, #0x2
   3b96c:	str	x0, [sp, #1984]
   3b970:	mov	x0, #0x10                  	// #16
   3b974:	str	x0, [sp, #1976]
   3b978:	add	x0, sp, #0x38
   3b97c:	ldr	x2, [sp, #1976]
   3b980:	ldr	x1, [sp, #1984]
   3b984:	bl	3b2c4 <PyInit__decimal@@Base+0x235ec>
   3b988:	str	w0, [sp, #2028]
   3b98c:	b	3ba98 <PyInit__decimal@@Base+0x23dc0>
   3b990:	add	x1, sp, #0x700
   3b994:	add	x0, sp, #0x4a0
   3b998:	ldr	x4, [sp, #16]
   3b99c:	mov	x3, x1
   3b9a0:	ldr	x2, [sp, #2016]
   3b9a4:	ldr	x1, [sp, #2016]
   3b9a8:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   3b9ac:	ldrsw	x0, [sp, #2028]
   3b9b0:	lsl	x0, x0, #3
   3b9b4:	add	x1, sp, #0x38
   3b9b8:	ldr	x0, [x1, x0]
   3b9bc:	lsl	x0, x0, #1
   3b9c0:	add	x0, x0, #0x5
   3b9c4:	str	x0, [sp, #1840]
   3b9c8:	ldr	x0, [sp, #2000]
   3b9cc:	ldr	x1, [x0, #16]
   3b9d0:	ldr	x0, [sp, #1840]
   3b9d4:	cmp	x1, x0
   3b9d8:	b.le	3ba28 <PyInit__decimal@@Base+0x23d50>
   3b9dc:	ldr	x0, [sp, #2000]
   3b9e0:	ldr	x1, [x0, #16]
   3b9e4:	ldr	x0, [sp, #1840]
   3b9e8:	sub	x1, x1, x0
   3b9ec:	add	x0, sp, #0x270
   3b9f0:	ldr	x3, [sp, #16]
   3b9f4:	mov	x2, x1
   3b9f8:	ldr	x1, [sp, #2000]
   3b9fc:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3ba00:	ldr	x0, [sp, #1840]
   3ba04:	neg	x0, x0
   3ba08:	str	x0, [sp, #632]
   3ba0c:	add	x3, sp, #0x730
   3ba10:	add	x2, sp, #0x4a0
   3ba14:	add	x1, sp, #0x270
   3ba18:	add	x0, sp, #0x270
   3ba1c:	ldr	x4, [sp, #16]
   3ba20:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3ba24:	b	3ba48 <PyInit__decimal@@Base+0x23d70>
   3ba28:	add	x2, sp, #0x730
   3ba2c:	add	x1, sp, #0x4a0
   3ba30:	add	x0, sp, #0x270
   3ba34:	ldr	x4, [sp, #16]
   3ba38:	mov	x3, x2
   3ba3c:	mov	x2, x1
   3ba40:	ldr	x1, [sp, #2000]
   3ba44:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3ba48:	add	x2, sp, #0x700
   3ba4c:	add	x1, sp, #0x238
   3ba50:	add	x0, sp, #0x4a0
   3ba54:	ldr	x4, [sp, #16]
   3ba58:	mov	x3, x2
   3ba5c:	mov	x2, x1
   3ba60:	ldr	x1, [sp, #2016]
   3ba64:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   3ba68:	add	x2, sp, #0x700
   3ba6c:	add	x1, sp, #0x270
   3ba70:	add	x0, sp, #0x4a0
   3ba74:	ldr	x4, [sp, #16]
   3ba78:	mov	x3, x2
   3ba7c:	mov	x2, x1
   3ba80:	mov	x1, x0
   3ba84:	ldr	x0, [sp, #2016]
   3ba88:	bl	2f824 <PyInit__decimal@@Base+0x17b4c>
   3ba8c:	ldr	w0, [sp, #2028]
   3ba90:	sub	w0, w0, #0x1
   3ba94:	str	w0, [sp, #2028]
   3ba98:	ldr	w0, [sp, #2028]
   3ba9c:	cmp	w0, #0x0
   3baa0:	b.ge	3b990 <PyInit__decimal@@Base+0x23cb8>  // b.tcont
   3baa4:	ldr	x0, [sp, #2016]
   3baa8:	str	x0, [sp, #1952]
   3baac:	ldr	x0, [sp, #1952]
   3bab0:	ldrb	w0, [x0]
   3bab4:	and	w0, w0, #0xe
   3bab8:	cmp	w0, #0x0
   3babc:	b.ne	3bb20 <PyInit__decimal@@Base+0x23e48>  // b.any
   3bac0:	ldr	x0, [sp, #2016]
   3bac4:	ldr	x1, [x0, #8]
   3bac8:	ldr	x0, [sp, #1992]
   3bacc:	sub	x1, x1, x0
   3bad0:	ldr	x0, [sp, #2016]
   3bad4:	str	x1, [x0, #8]
   3bad8:	ldr	x0, [sp, #2016]
   3badc:	str	x0, [sp, #1944]
   3bae0:	ldrb	w0, [sp, #2015]
   3bae4:	strb	w0, [sp, #1943]
   3bae8:	ldr	x0, [sp, #1944]
   3baec:	ldrb	w0, [x0]
   3baf0:	and	w0, w0, #0xfffffff0
   3baf4:	and	w1, w0, #0xff
   3baf8:	ldr	x0, [sp, #1944]
   3bafc:	strb	w1, [x0]
   3bb00:	ldr	x0, [sp, #1944]
   3bb04:	ldrb	w1, [x0]
   3bb08:	ldrb	w0, [sp, #1943]
   3bb0c:	orr	w0, w1, w0
   3bb10:	and	w1, w0, #0xff
   3bb14:	ldr	x0, [sp, #1944]
   3bb18:	strb	w1, [x0]
   3bb1c:	nop
   3bb20:	add	x0, sp, #0x4a0
   3bb24:	str	x0, [sp, #1904]
   3bb28:	ldr	x0, [sp, #1904]
   3bb2c:	str	x0, [sp, #1896]
   3bb30:	ldr	x0, [sp, #1896]
   3bb34:	ldrb	w0, [x0]
   3bb38:	and	w0, w0, #0xe0
   3bb3c:	cmp	w0, #0x0
   3bb40:	cset	w0, eq  // eq = none
   3bb44:	and	w0, w0, #0xff
   3bb48:	cmp	w0, #0x0
   3bb4c:	b.eq	3bb68 <PyInit__decimal@@Base+0x23e90>  // b.none
   3bb50:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3bb54:	add	x0, x0, #0x6f8
   3bb58:	ldr	x1, [x0]
   3bb5c:	ldr	x0, [sp, #1904]
   3bb60:	ldr	x0, [x0, #40]
   3bb64:	blr	x1
   3bb68:	ldr	x0, [sp, #1904]
   3bb6c:	str	x0, [sp, #1888]
   3bb70:	ldr	x0, [sp, #1888]
   3bb74:	ldrb	w0, [x0]
   3bb78:	and	w0, w0, #0x10
   3bb7c:	cmp	w0, #0x0
   3bb80:	cset	w0, eq  // eq = none
   3bb84:	and	w0, w0, #0xff
   3bb88:	cmp	w0, #0x0
   3bb8c:	b.eq	3bba4 <PyInit__decimal@@Base+0x23ecc>  // b.none
   3bb90:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3bb94:	add	x0, x0, #0x6f8
   3bb98:	ldr	x1, [x0]
   3bb9c:	ldr	x0, [sp, #1904]
   3bba0:	blr	x1
   3bba4:	nop
   3bba8:	add	x0, sp, #0x270
   3bbac:	str	x0, [sp, #1928]
   3bbb0:	ldr	x0, [sp, #1928]
   3bbb4:	str	x0, [sp, #1920]
   3bbb8:	ldr	x0, [sp, #1920]
   3bbbc:	ldrb	w0, [x0]
   3bbc0:	and	w0, w0, #0xe0
   3bbc4:	cmp	w0, #0x0
   3bbc8:	cset	w0, eq  // eq = none
   3bbcc:	and	w0, w0, #0xff
   3bbd0:	cmp	w0, #0x0
   3bbd4:	b.eq	3bbf0 <PyInit__decimal@@Base+0x23f18>  // b.none
   3bbd8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3bbdc:	add	x0, x0, #0x6f8
   3bbe0:	ldr	x1, [x0]
   3bbe4:	ldr	x0, [sp, #1928]
   3bbe8:	ldr	x0, [x0, #40]
   3bbec:	blr	x1
   3bbf0:	ldr	x0, [sp, #1928]
   3bbf4:	str	x0, [sp, #1912]
   3bbf8:	ldr	x0, [sp, #1912]
   3bbfc:	ldrb	w0, [x0]
   3bc00:	and	w0, w0, #0x10
   3bc04:	cmp	w0, #0x0
   3bc08:	cset	w0, eq  // eq = none
   3bc0c:	and	w0, w0, #0xff
   3bc10:	cmp	w0, #0x0
   3bc14:	b.eq	3bc2c <PyInit__decimal@@Base+0x23f54>  // b.none
   3bc18:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3bc1c:	add	x0, x0, #0x6f8
   3bc20:	ldr	x1, [x0]
   3bc24:	ldr	x0, [sp, #1928]
   3bc28:	blr	x1
   3bc2c:	nop
   3bc30:	ldr	x2, [sp, #16]
   3bc34:	ldr	x1, [sp, #24]
   3bc38:	ldr	x0, [sp, #2016]
   3bc3c:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3bc40:	nop
   3bc44:	ldp	x29, x30, [sp]
   3bc48:	add	sp, sp, #0x7f0
   3bc4c:	ret
   3bc50:	stp	x29, x30, [sp, #-368]!
   3bc54:	mov	x29, sp
   3bc58:	str	x0, [sp, #56]
   3bc5c:	str	x1, [sp, #48]
   3bc60:	str	x2, [sp, #40]
   3bc64:	str	x3, [sp, #32]
   3bc68:	str	x4, [sp, #24]
   3bc6c:	ldr	x0, [sp, #56]
   3bc70:	str	x0, [sp, #360]
   3bc74:	ldr	x0, [sp, #48]
   3bc78:	str	x0, [sp, #352]
   3bc7c:	add	x0, sp, #0x78
   3bc80:	ldr	x1, [sp, #40]
   3bc84:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   3bc88:	add	x0, sp, #0x48
   3bc8c:	ldr	x1, [sp, #32]
   3bc90:	bl	2978c <PyInit__decimal@@Base+0x11ab4>
   3bc94:	add	x0, sp, #0x78
   3bc98:	str	x0, [sp, #328]
   3bc9c:	ldr	x0, [sp, #328]
   3bca0:	ldrb	w0, [x0]
   3bca4:	and	w0, w0, #0xfffffffe
   3bca8:	and	w1, w0, #0xff
   3bcac:	ldr	x0, [sp, #328]
   3bcb0:	strb	w1, [x0]
   3bcb4:	nop
   3bcb8:	add	x0, sp, #0x48
   3bcbc:	str	x0, [sp, #336]
   3bcc0:	ldr	x0, [sp, #336]
   3bcc4:	ldrb	w0, [x0]
   3bcc8:	and	w0, w0, #0xfffffffe
   3bccc:	and	w1, w0, #0xff
   3bcd0:	ldr	x0, [sp, #336]
   3bcd4:	strb	w1, [x0]
   3bcd8:	nop
   3bcdc:	str	xzr, [sp, #128]
   3bce0:	str	xzr, [sp, #80]
   3bce4:	ldr	x1, [sp, #56]
   3bce8:	ldr	x0, [sp, #40]
   3bcec:	cmp	x1, x0
   3bcf0:	b.eq	3bd04 <PyInit__decimal@@Base+0x2402c>  // b.none
   3bcf4:	ldr	x1, [sp, #56]
   3bcf8:	ldr	x0, [sp, #32]
   3bcfc:	cmp	x1, x0
   3bd00:	b.ne	3bd30 <PyInit__decimal@@Base+0x24058>  // b.any
   3bd04:	bl	23730 <PyInit__decimal@@Base+0xba58>
   3bd08:	str	x0, [sp, #360]
   3bd0c:	ldr	x0, [sp, #360]
   3bd10:	cmp	x0, #0x0
   3bd14:	b.ne	3bd30 <PyInit__decimal@@Base+0x24058>  // b.any
   3bd18:	ldr	x0, [sp, #24]
   3bd1c:	ldr	w0, [x0]
   3bd20:	orr	w1, w0, #0x200
   3bd24:	ldr	x0, [sp, #24]
   3bd28:	str	w1, [x0]
   3bd2c:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3bd30:	ldr	x1, [sp, #48]
   3bd34:	ldr	x0, [sp, #40]
   3bd38:	cmp	x1, x0
   3bd3c:	b.eq	3bd50 <PyInit__decimal@@Base+0x24078>  // b.none
   3bd40:	ldr	x1, [sp, #48]
   3bd44:	ldr	x0, [sp, #32]
   3bd48:	cmp	x1, x0
   3bd4c:	b.ne	3bd7c <PyInit__decimal@@Base+0x240a4>  // b.any
   3bd50:	bl	23730 <PyInit__decimal@@Base+0xba58>
   3bd54:	str	x0, [sp, #352]
   3bd58:	ldr	x0, [sp, #352]
   3bd5c:	cmp	x0, #0x0
   3bd60:	b.ne	3bd7c <PyInit__decimal@@Base+0x240a4>  // b.any
   3bd64:	ldr	x0, [sp, #24]
   3bd68:	ldr	w0, [x0]
   3bd6c:	orr	w1, w0, #0x200
   3bd70:	ldr	x0, [sp, #24]
   3bd74:	str	w1, [x0]
   3bd78:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3bd7c:	add	x0, sp, #0xa8
   3bd80:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3bd84:	ldr	x0, [sp, #40]
   3bd88:	ldr	x1, [x0, #16]
   3bd8c:	ldr	x0, [sp, #32]
   3bd90:	ldr	x0, [x0, #16]
   3bd94:	sub	x0, x1, x0
   3bd98:	add	x0, x0, #0x4
   3bd9c:	str	x0, [sp, #168]
   3bda0:	ldr	x0, [sp, #40]
   3bda4:	ldr	x1, [x0, #16]
   3bda8:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   3bdac:	movk	x0, #0xb6b3, lsl #32
   3bdb0:	movk	x0, #0xde0, lsl #48
   3bdb4:	cmp	x1, x0
   3bdb8:	b.gt	3bdd4 <PyInit__decimal@@Base+0x240fc>
   3bdbc:	ldr	x1, [sp, #168]
   3bdc0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   3bdc4:	movk	x0, #0xb6b3, lsl #32
   3bdc8:	movk	x0, #0xde0, lsl #48
   3bdcc:	cmp	x1, x0
   3bdd0:	b.le	3bdec <PyInit__decimal@@Base+0x24114>
   3bdd4:	ldr	x0, [sp, #24]
   3bdd8:	ldr	w0, [x0]
   3bddc:	orr	w1, w0, #0x8
   3bde0:	ldr	x0, [sp, #24]
   3bde4:	str	w1, [x0]
   3bde8:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3bdec:	add	x0, sp, #0xa8
   3bdf0:	add	x2, x0, #0x1c
   3bdf4:	add	x1, sp, #0xa8
   3bdf8:	add	x0, sp, #0x48
   3bdfc:	mov	x3, x2
   3be00:	mov	x2, x1
   3be04:	mov	x1, x0
   3be08:	ldr	x0, [sp, #352]
   3be0c:	bl	3b764 <PyInit__decimal@@Base+0x23a8c>
   3be10:	add	x0, sp, #0xa8
   3be14:	add	x2, x0, #0x1c
   3be18:	add	x1, sp, #0xa8
   3be1c:	add	x0, sp, #0x78
   3be20:	mov	x4, x2
   3be24:	mov	x3, x1
   3be28:	ldr	x2, [sp, #352]
   3be2c:	mov	x1, x0
   3be30:	ldr	x0, [sp, #360]
   3be34:	bl	366fc <PyInit__decimal@@Base+0x1ea24>
   3be38:	add	x0, sp, #0xa8
   3be3c:	add	x1, x0, #0x1c
   3be40:	add	x0, sp, #0xa8
   3be44:	mov	x3, x1
   3be48:	mov	x2, x0
   3be4c:	ldr	x1, [sp, #360]
   3be50:	ldr	x0, [sp, #360]
   3be54:	bl	3b0d0 <PyInit__decimal@@Base+0x233f8>
   3be58:	ldr	x0, [sp, #136]
   3be5c:	add	x0, x0, #0x3
   3be60:	str	x0, [sp, #168]
   3be64:	mov	x0, #0x2                   	// #2
   3be68:	movk	x0, #0xa764, lsl #16
   3be6c:	movk	x0, #0xb6b3, lsl #32
   3be70:	movk	x0, #0xde0, lsl #48
   3be74:	str	x0, [sp, #176]
   3be78:	mov	x0, #0xfffe                	// #65534
   3be7c:	movk	x0, #0x589b, lsl #16
   3be80:	movk	x0, #0x494c, lsl #32
   3be84:	movk	x0, #0xf21f, lsl #48
   3be88:	str	x0, [sp, #184]
   3be8c:	add	x0, sp, #0xa8
   3be90:	add	x2, x0, #0x1c
   3be94:	add	x1, sp, #0xa8
   3be98:	add	x0, sp, #0x48
   3be9c:	mov	x4, x2
   3bea0:	mov	x3, x1
   3bea4:	ldr	x2, [sp, #360]
   3bea8:	mov	x1, x0
   3beac:	ldr	x0, [sp, #352]
   3beb0:	bl	366fc <PyInit__decimal@@Base+0x1ea24>
   3beb4:	add	x0, sp, #0xa8
   3beb8:	add	x2, x0, #0x1c
   3bebc:	add	x1, sp, #0xa8
   3bec0:	add	x0, sp, #0x78
   3bec4:	mov	x4, x2
   3bec8:	mov	x3, x1
   3becc:	ldr	x2, [sp, #352]
   3bed0:	mov	x1, x0
   3bed4:	ldr	x0, [sp, #352]
   3bed8:	bl	2f824 <PyInit__decimal@@Base+0x17b4c>
   3bedc:	str	wzr, [sp, #348]
   3bee0:	ldr	x0, [sp, #360]
   3bee4:	str	x0, [sp, #320]
   3bee8:	ldr	x0, [sp, #320]
   3beec:	ldrb	w0, [x0]
   3bef0:	and	w0, w0, #0xe
   3bef4:	cmp	w0, #0x0
   3bef8:	b.ne	3bf18 <PyInit__decimal@@Base+0x24240>  // b.any
   3befc:	ldr	x0, [sp, #352]
   3bf00:	str	x0, [sp, #312]
   3bf04:	ldr	x0, [sp, #312]
   3bf08:	ldrb	w0, [x0]
   3bf0c:	and	w0, w0, #0xe
   3bf10:	cmp	w0, #0x0
   3bf14:	b.eq	3bf3c <PyInit__decimal@@Base+0x24264>  // b.none
   3bf18:	ldr	x0, [sp, #24]
   3bf1c:	ldr	w1, [x0]
   3bf20:	ldr	w2, [sp, #196]
   3bf24:	mov	w0, #0x3be                 	// #958
   3bf28:	and	w0, w2, w0
   3bf2c:	orr	w1, w1, w0
   3bf30:	ldr	x0, [sp, #24]
   3bf34:	str	w1, [x0]
   3bf38:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3bf3c:	ldr	w0, [sp, #348]
   3bf40:	cmp	w0, #0x2
   3bf44:	b.le	3bfc4 <PyInit__decimal@@Base+0x242ec>
   3bf48:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3bf4c:	ldr	x0, [x0, #3904]
   3bf50:	ldr	x4, [x0]
   3bf54:	mov	w3, #0x1d0b                	// #7435
   3bf58:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   3bf5c:	add	x2, x0, #0xc20
   3bf60:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   3bf64:	add	x1, x0, #0xc60
   3bf68:	mov	x0, x4
   3bf6c:	bl	6b30 <fprintf@plt>
   3bf70:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3bf74:	ldr	x0, [x0, #3904]
   3bf78:	ldr	x0, [x0]
   3bf7c:	mov	x3, x0
   3bf80:	mov	x2, #0x3c                  	// #60
   3bf84:	mov	x1, #0x1                   	// #1
   3bf88:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   3bf8c:	add	x0, x0, #0xc78
   3bf90:	bl	69d0 <fwrite@plt>
   3bf94:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3bf98:	ldr	x0, [x0, #3904]
   3bf9c:	ldr	x0, [x0]
   3bfa0:	mov	x1, x0
   3bfa4:	mov	w0, #0xa                   	// #10
   3bfa8:	bl	6660 <fputc@plt>
   3bfac:	ldr	x0, [sp, #24]
   3bfb0:	ldr	w0, [x0]
   3bfb4:	orr	w1, w0, #0x100
   3bfb8:	ldr	x0, [sp, #24]
   3bfbc:	str	w1, [x0]
   3bfc0:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3bfc4:	ldr	x1, [sp, #352]
   3bfc8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3bfcc:	add	x0, x0, #0xcb8
   3bfd0:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   3bfd4:	cmp	w0, #0x1
   3bfd8:	b.ne	3c030 <PyInit__decimal@@Base+0x24358>  // b.any
   3bfdc:	add	x0, sp, #0xa8
   3bfe0:	add	x2, x0, #0x1c
   3bfe4:	add	x1, sp, #0xa8
   3bfe8:	add	x0, sp, #0x48
   3bfec:	mov	x4, x2
   3bff0:	mov	x3, x1
   3bff4:	mov	x2, x0
   3bff8:	ldr	x1, [sp, #352]
   3bffc:	ldr	x0, [sp, #352]
   3c000:	bl	2f68c <PyInit__decimal@@Base+0x179b4>
   3c004:	add	x0, sp, #0xa8
   3c008:	add	x1, x0, #0x1c
   3c00c:	add	x0, sp, #0xa8
   3c010:	mov	x4, x1
   3c014:	mov	x3, x0
   3c018:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3c01c:	add	x2, x0, #0xc88
   3c020:	ldr	x1, [sp, #360]
   3c024:	ldr	x0, [sp, #360]
   3c028:	bl	2f68c <PyInit__decimal@@Base+0x179b4>
   3c02c:	b	3c098 <PyInit__decimal@@Base+0x243c0>
   3c030:	add	x0, sp, #0x48
   3c034:	mov	x1, x0
   3c038:	ldr	x0, [sp, #352]
   3c03c:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   3c040:	cmn	w0, #0x1
   3c044:	b.eq	3c0a8 <PyInit__decimal@@Base+0x243d0>  // b.none
   3c048:	add	x0, sp, #0xa8
   3c04c:	add	x2, x0, #0x1c
   3c050:	add	x1, sp, #0xa8
   3c054:	add	x0, sp, #0x48
   3c058:	mov	x4, x2
   3c05c:	mov	x3, x1
   3c060:	mov	x2, x0
   3c064:	ldr	x1, [sp, #352]
   3c068:	ldr	x0, [sp, #352]
   3c06c:	bl	2f824 <PyInit__decimal@@Base+0x17b4c>
   3c070:	add	x0, sp, #0xa8
   3c074:	add	x1, x0, #0x1c
   3c078:	add	x0, sp, #0xa8
   3c07c:	mov	x4, x1
   3c080:	mov	x3, x0
   3c084:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3c088:	add	x2, x0, #0xc58
   3c08c:	ldr	x1, [sp, #360]
   3c090:	ldr	x0, [sp, #360]
   3c094:	bl	2f68c <PyInit__decimal@@Base+0x179b4>
   3c098:	ldr	w0, [sp, #348]
   3c09c:	add	w0, w0, #0x1
   3c0a0:	str	w0, [sp, #348]
   3c0a4:	b	3bee0 <PyInit__decimal@@Base+0x24208>
   3c0a8:	nop
   3c0ac:	ldr	x1, [sp, #360]
   3c0b0:	ldr	x0, [sp, #56]
   3c0b4:	cmp	x1, x0
   3c0b8:	b.eq	3c15c <PyInit__decimal@@Base+0x24484>  // b.none
   3c0bc:	ldr	x2, [sp, #24]
   3c0c0:	ldr	x1, [sp, #360]
   3c0c4:	ldr	x0, [sp, #56]
   3c0c8:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3c0cc:	cmp	w0, #0x0
   3c0d0:	b.eq	3c230 <PyInit__decimal@@Base+0x24558>  // b.none
   3c0d4:	ldr	x0, [sp, #360]
   3c0d8:	str	x0, [sp, #304]
   3c0dc:	ldr	x0, [sp, #304]
   3c0e0:	str	x0, [sp, #296]
   3c0e4:	ldr	x0, [sp, #296]
   3c0e8:	ldrb	w0, [x0]
   3c0ec:	and	w0, w0, #0xe0
   3c0f0:	cmp	w0, #0x0
   3c0f4:	cset	w0, eq  // eq = none
   3c0f8:	and	w0, w0, #0xff
   3c0fc:	cmp	w0, #0x0
   3c100:	b.eq	3c11c <PyInit__decimal@@Base+0x24444>  // b.none
   3c104:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c108:	add	x0, x0, #0x6f8
   3c10c:	ldr	x1, [x0]
   3c110:	ldr	x0, [sp, #304]
   3c114:	ldr	x0, [x0, #40]
   3c118:	blr	x1
   3c11c:	ldr	x0, [sp, #304]
   3c120:	str	x0, [sp, #288]
   3c124:	ldr	x0, [sp, #288]
   3c128:	ldrb	w0, [x0]
   3c12c:	and	w0, w0, #0x10
   3c130:	cmp	w0, #0x0
   3c134:	cset	w0, eq  // eq = none
   3c138:	and	w0, w0, #0xff
   3c13c:	cmp	w0, #0x0
   3c140:	b.eq	3c158 <PyInit__decimal@@Base+0x24480>  // b.none
   3c144:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c148:	add	x0, x0, #0x6f8
   3c14c:	ldr	x1, [x0]
   3c150:	ldr	x0, [sp, #304]
   3c154:	blr	x1
   3c158:	nop
   3c15c:	ldr	x1, [sp, #352]
   3c160:	ldr	x0, [sp, #48]
   3c164:	cmp	x1, x0
   3c168:	b.eq	3c20c <PyInit__decimal@@Base+0x24534>  // b.none
   3c16c:	ldr	x2, [sp, #24]
   3c170:	ldr	x1, [sp, #352]
   3c174:	ldr	x0, [sp, #48]
   3c178:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3c17c:	cmp	w0, #0x0
   3c180:	b.eq	3c238 <PyInit__decimal@@Base+0x24560>  // b.none
   3c184:	ldr	x0, [sp, #352]
   3c188:	str	x0, [sp, #280]
   3c18c:	ldr	x0, [sp, #280]
   3c190:	str	x0, [sp, #272]
   3c194:	ldr	x0, [sp, #272]
   3c198:	ldrb	w0, [x0]
   3c19c:	and	w0, w0, #0xe0
   3c1a0:	cmp	w0, #0x0
   3c1a4:	cset	w0, eq  // eq = none
   3c1a8:	and	w0, w0, #0xff
   3c1ac:	cmp	w0, #0x0
   3c1b0:	b.eq	3c1cc <PyInit__decimal@@Base+0x244f4>  // b.none
   3c1b4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c1b8:	add	x0, x0, #0x6f8
   3c1bc:	ldr	x1, [x0]
   3c1c0:	ldr	x0, [sp, #280]
   3c1c4:	ldr	x0, [x0, #40]
   3c1c8:	blr	x1
   3c1cc:	ldr	x0, [sp, #280]
   3c1d0:	str	x0, [sp, #264]
   3c1d4:	ldr	x0, [sp, #264]
   3c1d8:	ldrb	w0, [x0]
   3c1dc:	and	w0, w0, #0x10
   3c1e0:	cmp	w0, #0x0
   3c1e4:	cset	w0, eq  // eq = none
   3c1e8:	and	w0, w0, #0xff
   3c1ec:	cmp	w0, #0x0
   3c1f0:	b.eq	3c208 <PyInit__decimal@@Base+0x24530>  // b.none
   3c1f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c1f8:	add	x0, x0, #0x6f8
   3c1fc:	ldr	x1, [x0]
   3c200:	ldr	x0, [sp, #280]
   3c204:	blr	x1
   3c208:	nop
   3c20c:	ldr	x0, [sp, #24]
   3c210:	ldr	w1, [x0]
   3c214:	ldr	w2, [sp, #196]
   3c218:	mov	w0, #0x3be                 	// #958
   3c21c:	and	w0, w2, w0
   3c220:	orr	w1, w1, w0
   3c224:	ldr	x0, [sp, #24]
   3c228:	str	w1, [x0]
   3c22c:	b	3c3a4 <PyInit__decimal@@Base+0x246cc>
   3c230:	nop
   3c234:	b	3c23c <PyInit__decimal@@Base+0x24564>
   3c238:	nop
   3c23c:	ldr	x0, [sp, #360]
   3c240:	cmp	x0, #0x0
   3c244:	b.eq	3c2e0 <PyInit__decimal@@Base+0x24608>  // b.none
   3c248:	ldr	x1, [sp, #360]
   3c24c:	ldr	x0, [sp, #56]
   3c250:	cmp	x1, x0
   3c254:	b.eq	3c2e0 <PyInit__decimal@@Base+0x24608>  // b.none
   3c258:	ldr	x0, [sp, #360]
   3c25c:	str	x0, [sp, #256]
   3c260:	ldr	x0, [sp, #256]
   3c264:	str	x0, [sp, #248]
   3c268:	ldr	x0, [sp, #248]
   3c26c:	ldrb	w0, [x0]
   3c270:	and	w0, w0, #0xe0
   3c274:	cmp	w0, #0x0
   3c278:	cset	w0, eq  // eq = none
   3c27c:	and	w0, w0, #0xff
   3c280:	cmp	w0, #0x0
   3c284:	b.eq	3c2a0 <PyInit__decimal@@Base+0x245c8>  // b.none
   3c288:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c28c:	add	x0, x0, #0x6f8
   3c290:	ldr	x1, [x0]
   3c294:	ldr	x0, [sp, #256]
   3c298:	ldr	x0, [x0, #40]
   3c29c:	blr	x1
   3c2a0:	ldr	x0, [sp, #256]
   3c2a4:	str	x0, [sp, #240]
   3c2a8:	ldr	x0, [sp, #240]
   3c2ac:	ldrb	w0, [x0]
   3c2b0:	and	w0, w0, #0x10
   3c2b4:	cmp	w0, #0x0
   3c2b8:	cset	w0, eq  // eq = none
   3c2bc:	and	w0, w0, #0xff
   3c2c0:	cmp	w0, #0x0
   3c2c4:	b.eq	3c2dc <PyInit__decimal@@Base+0x24604>  // b.none
   3c2c8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c2cc:	add	x0, x0, #0x6f8
   3c2d0:	ldr	x1, [x0]
   3c2d4:	ldr	x0, [sp, #256]
   3c2d8:	blr	x1
   3c2dc:	nop
   3c2e0:	ldr	x0, [sp, #352]
   3c2e4:	cmp	x0, #0x0
   3c2e8:	b.eq	3c384 <PyInit__decimal@@Base+0x246ac>  // b.none
   3c2ec:	ldr	x1, [sp, #352]
   3c2f0:	ldr	x0, [sp, #48]
   3c2f4:	cmp	x1, x0
   3c2f8:	b.eq	3c384 <PyInit__decimal@@Base+0x246ac>  // b.none
   3c2fc:	ldr	x0, [sp, #352]
   3c300:	str	x0, [sp, #232]
   3c304:	ldr	x0, [sp, #232]
   3c308:	str	x0, [sp, #224]
   3c30c:	ldr	x0, [sp, #224]
   3c310:	ldrb	w0, [x0]
   3c314:	and	w0, w0, #0xe0
   3c318:	cmp	w0, #0x0
   3c31c:	cset	w0, eq  // eq = none
   3c320:	and	w0, w0, #0xff
   3c324:	cmp	w0, #0x0
   3c328:	b.eq	3c344 <PyInit__decimal@@Base+0x2466c>  // b.none
   3c32c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c330:	add	x0, x0, #0x6f8
   3c334:	ldr	x1, [x0]
   3c338:	ldr	x0, [sp, #232]
   3c33c:	ldr	x0, [x0, #40]
   3c340:	blr	x1
   3c344:	ldr	x0, [sp, #232]
   3c348:	str	x0, [sp, #216]
   3c34c:	ldr	x0, [sp, #216]
   3c350:	ldrb	w0, [x0]
   3c354:	and	w0, w0, #0x10
   3c358:	cmp	w0, #0x0
   3c35c:	cset	w0, eq  // eq = none
   3c360:	and	w0, w0, #0xff
   3c364:	cmp	w0, #0x0
   3c368:	b.eq	3c380 <PyInit__decimal@@Base+0x246a8>  // b.none
   3c36c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c370:	add	x0, x0, #0x6f8
   3c374:	ldr	x1, [x0]
   3c378:	ldr	x0, [sp, #232]
   3c37c:	blr	x1
   3c380:	nop
   3c384:	mov	w2, #0x4                   	// #4
   3c388:	mov	w1, #0x0                   	// #0
   3c38c:	ldr	x0, [sp, #56]
   3c390:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3c394:	mov	w2, #0x4                   	// #4
   3c398:	mov	w1, #0x0                   	// #0
   3c39c:	ldr	x0, [sp, #48]
   3c3a0:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3c3a4:	ldp	x29, x30, [sp], #368
   3c3a8:	ret
   3c3ac:	sub	sp, sp, #0x30
   3c3b0:	str	x0, [sp, #24]
   3c3b4:	str	x1, [sp, #16]
   3c3b8:	str	x2, [sp, #8]
   3c3bc:	ldr	x1, [sp, #16]
   3c3c0:	ldr	x0, [sp, #8]
   3c3c4:	cmp	x1, x0
   3c3c8:	b.gt	3c3d4 <PyInit__decimal@@Base+0x246fc>
   3c3cc:	mov	w0, #0xffffffff            	// #-1
   3c3d0:	b	3c434 <PyInit__decimal@@Base+0x2475c>
   3c3d4:	str	wzr, [sp, #36]
   3c3d8:	ldr	x0, [sp, #16]
   3c3dc:	str	x0, [sp, #40]
   3c3e0:	ldr	x0, [sp, #40]
   3c3e4:	add	x0, x0, #0x3
   3c3e8:	lsr	x1, x0, #63
   3c3ec:	add	x0, x1, x0
   3c3f0:	asr	x0, x0, #1
   3c3f4:	str	x0, [sp, #40]
   3c3f8:	ldr	w0, [sp, #36]
   3c3fc:	add	w1, w0, #0x1
   3c400:	str	w1, [sp, #36]
   3c404:	sxtw	x0, w0
   3c408:	lsl	x0, x0, #3
   3c40c:	ldr	x1, [sp, #24]
   3c410:	add	x0, x1, x0
   3c414:	ldr	x1, [sp, #40]
   3c418:	str	x1, [x0]
   3c41c:	ldr	x1, [sp, #40]
   3c420:	ldr	x0, [sp, #8]
   3c424:	cmp	x1, x0
   3c428:	b.gt	3c3e0 <PyInit__decimal@@Base+0x24708>
   3c42c:	ldr	w0, [sp, #36]
   3c430:	sub	w0, w0, #0x1
   3c434:	add	sp, sp, #0x30
   3c438:	ret
   3c43c:	stp	x29, x30, [sp, #-96]!
   3c440:	mov	x29, sp
   3c444:	str	x0, [sp, #24]
   3c448:	str	x1, [sp, #16]
   3c44c:	mov	x0, #0x3e8                 	// #1000
   3c450:	str	x0, [sp, #88]
   3c454:	mov	x0, #0x2710                	// #10000
   3c458:	str	x0, [sp, #80]
   3c45c:	ldr	x1, [sp, #88]
   3c460:	ldr	x0, [sp, #80]
   3c464:	add	x0, x1, x0
   3c468:	lsr	x0, x0, #1
   3c46c:	str	x0, [sp, #72]
   3c470:	ldr	x0, [sp, #72]
   3c474:	mul	x0, x0, x0
   3c478:	str	x0, [sp, #64]
   3c47c:	ldr	x1, [sp, #16]
   3c480:	ldr	x0, [sp, #64]
   3c484:	cmp	x1, x0
   3c488:	b.cc	3c4bc <PyInit__decimal@@Base+0x247e4>  // b.lo, b.ul, b.last
   3c48c:	ldr	x0, [sp, #72]
   3c490:	lsl	x1, x0, #1
   3c494:	ldr	x0, [sp, #64]
   3c498:	add	x0, x1, x0
   3c49c:	add	x0, x0, #0x1
   3c4a0:	ldr	x1, [sp, #16]
   3c4a4:	cmp	x1, x0
   3c4a8:	b.cc	3c4cc <PyInit__decimal@@Base+0x247f4>  // b.lo, b.ul, b.last
   3c4ac:	ldr	x0, [sp, #72]
   3c4b0:	add	x0, x0, #0x1
   3c4b4:	str	x0, [sp, #88]
   3c4b8:	b	3c45c <PyInit__decimal@@Base+0x24784>
   3c4bc:	ldr	x0, [sp, #72]
   3c4c0:	sub	x0, x0, #0x1
   3c4c4:	str	x0, [sp, #80]
   3c4c8:	b	3c45c <PyInit__decimal@@Base+0x24784>
   3c4cc:	nop
   3c4d0:	ldr	x0, [sp, #24]
   3c4d4:	str	x0, [sp, #48]
   3c4d8:	ldr	x0, [sp, #48]
   3c4dc:	str	x0, [sp, #40]
   3c4e0:	ldr	x0, [sp, #40]
   3c4e4:	ldrb	w0, [x0]
   3c4e8:	and	w0, w0, #0x20
   3c4ec:	cmp	w0, #0x0
   3c4f0:	b.ne	3c56c <PyInit__decimal@@Base+0x24894>  // b.any
   3c4f4:	ldr	x0, [sp, #48]
   3c4f8:	ldr	x1, [x0, #32]
   3c4fc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c500:	add	x0, x0, #0x6d8
   3c504:	ldr	x0, [x0]
   3c508:	cmp	x1, x0
   3c50c:	b.le	3c56c <PyInit__decimal@@Base+0x24894>
   3c510:	strb	wzr, [sp, #39]
   3c514:	ldr	x0, [sp, #48]
   3c518:	ldr	x4, [x0, #40]
   3c51c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c520:	add	x0, x0, #0x6d8
   3c524:	ldr	x0, [x0]
   3c528:	mov	x1, x0
   3c52c:	add	x0, sp, #0x27
   3c530:	mov	x3, x0
   3c534:	mov	x2, #0x8                   	// #8
   3c538:	mov	x0, x4
   3c53c:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   3c540:	mov	x1, x0
   3c544:	ldr	x0, [sp, #48]
   3c548:	str	x1, [x0, #40]
   3c54c:	ldrb	w0, [sp, #39]
   3c550:	cmp	w0, #0x0
   3c554:	b.ne	3c56c <PyInit__decimal@@Base+0x24894>  // b.any
   3c558:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3c55c:	add	x0, x0, #0x6d8
   3c560:	ldr	x1, [x0]
   3c564:	ldr	x0, [sp, #48]
   3c568:	str	x1, [x0, #32]
   3c56c:	nop
   3c570:	ldr	x0, [sp, #24]
   3c574:	str	x0, [sp, #56]
   3c578:	ldr	x0, [sp, #56]
   3c57c:	ldrb	w0, [x0]
   3c580:	and	w0, w0, #0xfffffff0
   3c584:	and	w1, w0, #0xff
   3c588:	ldr	x0, [sp, #56]
   3c58c:	strb	w1, [x0]
   3c590:	nop
   3c594:	ldr	x0, [sp, #24]
   3c598:	ldr	x0, [x0, #40]
   3c59c:	mov	x2, #0xca00                	// #51712
   3c5a0:	movk	x2, #0x3b9a, lsl #16
   3c5a4:	ldr	x1, [sp, #72]
   3c5a8:	udiv	x1, x2, x1
   3c5ac:	str	x1, [x0]
   3c5b0:	ldr	x0, [sp, #24]
   3c5b4:	mov	x1, #0x1                   	// #1
   3c5b8:	str	x1, [x0, #24]
   3c5bc:	ldr	x0, [sp, #24]
   3c5c0:	mov	x1, #0xfffffffffffffffa    	// #-6
   3c5c4:	str	x1, [x0, #8]
   3c5c8:	ldr	x0, [sp, #24]
   3c5cc:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   3c5d0:	nop
   3c5d4:	ldp	x29, x30, [sp], #96
   3c5d8:	ret
   3c5dc:	sub	sp, sp, #0x840
   3c5e0:	stp	x29, x30, [sp]
   3c5e4:	mov	x29, sp
   3c5e8:	str	x0, [sp, #40]
   3c5ec:	str	x1, [sp, #32]
   3c5f0:	str	x2, [sp, #24]
   3c5f4:	str	x3, [sp, #16]
   3c5f8:	str	wzr, [sp, #1956]
   3c5fc:	ldr	x0, [sp, #40]
   3c600:	str	x0, [sp, #2088]
   3c604:	ldr	x0, [sp, #32]
   3c608:	ldrb	w0, [x0]
   3c60c:	sxtb	w0, w0
   3c610:	and	w0, w0, #0xf
   3c614:	sxtb	w1, w0
   3c618:	mov	w0, #0x50                  	// #80
   3c61c:	orr	w0, w1, w0
   3c620:	sxtb	w0, w0
   3c624:	and	w0, w0, #0xff
   3c628:	strb	w0, [sp, #1808]
   3c62c:	ldr	x0, [sp, #32]
   3c630:	ldr	x0, [x0, #8]
   3c634:	str	x0, [sp, #1816]
   3c638:	ldr	x0, [sp, #32]
   3c63c:	ldr	x0, [x0, #16]
   3c640:	str	x0, [sp, #1824]
   3c644:	ldr	x0, [sp, #32]
   3c648:	ldr	x0, [x0, #24]
   3c64c:	str	x0, [sp, #1832]
   3c650:	ldr	x0, [sp, #32]
   3c654:	ldr	x0, [x0, #32]
   3c658:	str	x0, [sp, #1840]
   3c65c:	ldr	x0, [sp, #32]
   3c660:	ldr	x0, [x0, #40]
   3c664:	str	x0, [sp, #1848]
   3c668:	mov	w0, #0x30                  	// #48
   3c66c:	strb	w0, [sp, #1248]
   3c670:	str	xzr, [sp, #1256]
   3c674:	str	xzr, [sp, #1264]
   3c678:	str	xzr, [sp, #1272]
   3c67c:	mov	x0, #0x40                  	// #64
   3c680:	str	x0, [sp, #1280]
   3c684:	add	x0, sp, #0x510
   3c688:	str	x0, [sp, #1288]
   3c68c:	mov	w0, #0x30                  	// #48
   3c690:	strb	w0, [sp, #688]
   3c694:	str	xzr, [sp, #696]
   3c698:	str	xzr, [sp, #704]
   3c69c:	str	xzr, [sp, #712]
   3c6a0:	mov	x0, #0x40                  	// #64
   3c6a4:	str	x0, [sp, #720]
   3c6a8:	add	x0, sp, #0x2e0
   3c6ac:	str	x0, [sp, #728]
   3c6b0:	mov	x0, #0x5                   	// #5
   3c6b4:	str	x0, [sp, #680]
   3c6b8:	mov	w0, #0xffffff90            	// #-112
   3c6bc:	strb	w0, [sp, #632]
   3c6c0:	mov	x0, #0xffffffffffffffff    	// #-1
   3c6c4:	str	x0, [sp, #640]
   3c6c8:	mov	x0, #0x1                   	// #1
   3c6cc:	str	x0, [sp, #648]
   3c6d0:	mov	x0, #0x1                   	// #1
   3c6d4:	str	x0, [sp, #656]
   3c6d8:	mov	x0, #0x1                   	// #1
   3c6dc:	str	x0, [sp, #664]
   3c6e0:	add	x0, sp, #0x2a8
   3c6e4:	str	x0, [sp, #672]
   3c6e8:	mov	x0, #0x3                   	// #3
   3c6ec:	str	x0, [sp, #624]
   3c6f0:	mov	w0, #0xffffff90            	// #-112
   3c6f4:	strb	w0, [sp, #576]
   3c6f8:	str	xzr, [sp, #584]
   3c6fc:	mov	x0, #0x1                   	// #1
   3c700:	str	x0, [sp, #592]
   3c704:	mov	x0, #0x1                   	// #1
   3c708:	str	x0, [sp, #600]
   3c70c:	mov	x0, #0x1                   	// #1
   3c710:	str	x0, [sp, #608]
   3c714:	add	x0, sp, #0x270
   3c718:	str	x0, [sp, #616]
   3c71c:	ldr	x0, [sp, #32]
   3c720:	ldr	x0, [x0, #8]
   3c724:	and	x0, x0, #0xfffffffffffffffe
   3c728:	neg	x0, x0
   3c72c:	lsr	x1, x0, #63
   3c730:	add	x0, x1, x0
   3c734:	asr	x0, x0, #1
   3c738:	str	x0, [sp, #2080]
   3c73c:	add	x0, sp, #0x710
   3c740:	str	x0, [sp, #2104]
   3c744:	ldr	x1, [sp, #40]
   3c748:	ldr	x0, [sp, #32]
   3c74c:	cmp	x1, x0
   3c750:	b.ne	3c780 <PyInit__decimal@@Base+0x24aa8>  // b.any
   3c754:	ldr	x0, [sp, #32]
   3c758:	bl	29ae4 <PyInit__decimal@@Base+0x11e0c>
   3c75c:	str	x0, [sp, #2104]
   3c760:	ldr	x0, [sp, #2104]
   3c764:	cmp	x0, #0x0
   3c768:	b.ne	3c780 <PyInit__decimal@@Base+0x24aa8>  // b.any
   3c76c:	ldr	x2, [sp, #16]
   3c770:	mov	w1, #0x200                 	// #512
   3c774:	ldr	x0, [sp, #40]
   3c778:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3c77c:	b	3ccdc <PyInit__decimal@@Base+0x25004>
   3c780:	ldr	x0, [sp, #2104]
   3c784:	ldr	x1, [x0, #16]
   3c788:	ldr	x0, [sp, #2104]
   3c78c:	ldr	x0, [x0, #8]
   3c790:	add	x0, x1, x0
   3c794:	and	x0, x0, #0x1
   3c798:	cmp	x0, #0x0
   3c79c:	b.eq	3c834 <PyInit__decimal@@Base+0x24b5c>  // b.none
   3c7a0:	ldr	x0, [sp, #2104]
   3c7a4:	ldr	x0, [x0, #16]
   3c7a8:	sub	x0, x0, #0x1
   3c7ac:	str	x0, [sp, #2072]
   3c7b0:	ldr	x0, [sp, #2072]
   3c7b4:	neg	x1, x0
   3c7b8:	ldr	x0, [sp, #2104]
   3c7bc:	str	x1, [x0, #8]
   3c7c0:	ldr	x0, [sp, #2104]
   3c7c4:	ldr	x0, [x0, #16]
   3c7c8:	cmp	x0, #0x7
   3c7cc:	b.gt	3c7dc <PyInit__decimal@@Base+0x24b04>
   3c7d0:	ldr	x0, [sp, #2104]
   3c7d4:	ldr	x0, [x0, #16]
   3c7d8:	b	3c7e0 <PyInit__decimal@@Base+0x24b08>
   3c7dc:	mov	w0, #0x7                   	// #7
   3c7e0:	str	w0, [sp, #2068]
   3c7e4:	ldr	w2, [sp, #2068]
   3c7e8:	add	x1, sp, #0x38
   3c7ec:	add	x0, sp, #0x30
   3c7f0:	mov	w3, w2
   3c7f4:	ldr	x2, [sp, #2104]
   3c7f8:	bl	26cbc <PyInit__decimal@@Base+0xefe4>
   3c7fc:	ldr	w0, [sp, #2068]
   3c800:	cmp	w0, #0x6
   3c804:	b.gt	3c8c4 <PyInit__decimal@@Base+0x24bec>
   3c808:	mov	w1, #0x7                   	// #7
   3c80c:	ldr	w0, [sp, #2068]
   3c810:	sub	w1, w1, w0
   3c814:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3c818:	add	x0, x0, #0xdb0
   3c81c:	sxtw	x1, w1
   3c820:	ldr	x1, [x0, x1, lsl #3]
   3c824:	ldr	x0, [sp, #56]
   3c828:	mul	x0, x1, x0
   3c82c:	str	x0, [sp, #56]
   3c830:	b	3c8c4 <PyInit__decimal@@Base+0x24bec>
   3c834:	ldr	x0, [sp, #2104]
   3c838:	ldr	x0, [x0, #16]
   3c83c:	sub	x0, x0, #0x2
   3c840:	str	x0, [sp, #2072]
   3c844:	ldr	x0, [sp, #2072]
   3c848:	neg	x1, x0
   3c84c:	ldr	x0, [sp, #2104]
   3c850:	str	x1, [x0, #8]
   3c854:	ldr	x0, [sp, #2104]
   3c858:	ldr	x0, [x0, #16]
   3c85c:	cmp	x0, #0x8
   3c860:	b.gt	3c870 <PyInit__decimal@@Base+0x24b98>
   3c864:	ldr	x0, [sp, #2104]
   3c868:	ldr	x0, [x0, #16]
   3c86c:	b	3c874 <PyInit__decimal@@Base+0x24b9c>
   3c870:	mov	w0, #0x8                   	// #8
   3c874:	str	w0, [sp, #2068]
   3c878:	ldr	w2, [sp, #2068]
   3c87c:	add	x1, sp, #0x38
   3c880:	add	x0, sp, #0x30
   3c884:	mov	w3, w2
   3c888:	ldr	x2, [sp, #2104]
   3c88c:	bl	26cbc <PyInit__decimal@@Base+0xefe4>
   3c890:	ldr	w0, [sp, #2068]
   3c894:	cmp	w0, #0x7
   3c898:	b.gt	3c8c4 <PyInit__decimal@@Base+0x24bec>
   3c89c:	mov	w1, #0x8                   	// #8
   3c8a0:	ldr	w0, [sp, #2068]
   3c8a4:	sub	w1, w1, w0
   3c8a8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3c8ac:	add	x0, x0, #0xdb0
   3c8b0:	sxtw	x1, w1
   3c8b4:	ldr	x1, [x0, x1, lsl #3]
   3c8b8:	ldr	x0, [sp, #56]
   3c8bc:	mul	x0, x1, x0
   3c8c0:	str	x0, [sp, #56]
   3c8c4:	ldr	x0, [sp, #32]
   3c8c8:	ldr	x1, [x0, #8]
   3c8cc:	ldr	x0, [sp, #2104]
   3c8d0:	ldr	x0, [x0, #8]
   3c8d4:	sub	x0, x1, x0
   3c8d8:	lsr	x1, x0, #63
   3c8dc:	add	x0, x1, x0
   3c8e0:	asr	x0, x0, #1
   3c8e4:	str	x0, [sp, #2056]
   3c8e8:	ldr	x0, [sp, #56]
   3c8ec:	mov	x1, x0
   3c8f0:	ldr	x0, [sp, #2088]
   3c8f4:	bl	3c43c <PyInit__decimal@@Base+0x24764>
   3c8f8:	add	x0, sp, #0x740
   3c8fc:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3c900:	add	x0, sp, #0x770
   3c904:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3c908:	mov	w0, #0x8                   	// #8
   3c90c:	str	w0, [sp, #1940]
   3c910:	ldr	x0, [sp, #24]
   3c914:	ldr	x0, [x0]
   3c918:	add	x0, x0, #0x1
   3c91c:	str	x0, [sp, #2048]
   3c920:	add	x0, sp, #0x40
   3c924:	mov	x2, #0x3                   	// #3
   3c928:	ldr	x1, [sp, #2048]
   3c92c:	bl	3c3ac <PyInit__decimal@@Base+0x246d4>
   3c930:	str	w0, [sp, #2100]
   3c934:	b	3ca70 <PyInit__decimal@@Base+0x24d98>
   3c938:	ldrsw	x0, [sp, #2100]
   3c93c:	lsl	x0, x0, #3
   3c940:	add	x1, sp, #0x40
   3c944:	ldr	x0, [x1, x0]
   3c948:	add	x0, x0, #0x1
   3c94c:	lsl	x0, x0, #1
   3c950:	str	x0, [sp, #1904]
   3c954:	add	x2, sp, #0x7a4
   3c958:	add	x1, sp, #0x740
   3c95c:	add	x0, sp, #0x4e0
   3c960:	mov	x4, x2
   3c964:	mov	x3, x1
   3c968:	ldr	x2, [sp, #2088]
   3c96c:	ldr	x1, [sp, #2088]
   3c970:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3c974:	ldr	x0, [sp, #2104]
   3c978:	ldr	x1, [x0, #16]
   3c97c:	ldr	x0, [sp, #1904]
   3c980:	cmp	x1, x0
   3c984:	b.le	3c9e0 <PyInit__decimal@@Base+0x24d08>
   3c988:	ldr	x0, [sp, #2104]
   3c98c:	ldr	x1, [x0, #16]
   3c990:	ldr	x0, [sp, #1904]
   3c994:	sub	x0, x1, x0
   3c998:	str	x0, [sp, #2032]
   3c99c:	add	x1, sp, #0x7a4
   3c9a0:	add	x0, sp, #0x2b0
   3c9a4:	mov	x3, x1
   3c9a8:	ldr	x2, [sp, #2032]
   3c9ac:	ldr	x1, [sp, #2104]
   3c9b0:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3c9b4:	ldr	x1, [sp, #696]
   3c9b8:	ldr	x0, [sp, #2032]
   3c9bc:	add	x0, x1, x0
   3c9c0:	str	x0, [sp, #696]
   3c9c4:	add	x4, sp, #0x7a4
   3c9c8:	add	x3, sp, #0x770
   3c9cc:	add	x2, sp, #0x4e0
   3c9d0:	add	x1, sp, #0x2b0
   3c9d4:	add	x0, sp, #0x2b0
   3c9d8:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3c9dc:	b	3ca04 <PyInit__decimal@@Base+0x24d2c>
   3c9e0:	add	x3, sp, #0x7a4
   3c9e4:	add	x2, sp, #0x770
   3c9e8:	add	x1, sp, #0x4e0
   3c9ec:	add	x0, sp, #0x2b0
   3c9f0:	mov	x4, x3
   3c9f4:	mov	x3, x2
   3c9f8:	mov	x2, x1
   3c9fc:	ldr	x1, [sp, #2104]
   3ca00:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3ca04:	add	x4, sp, #0x7a4
   3ca08:	add	x3, sp, #0x740
   3ca0c:	add	x2, sp, #0x2b0
   3ca10:	add	x1, sp, #0x240
   3ca14:	add	x0, sp, #0x2b0
   3ca18:	bl	2f710 <PyInit__decimal@@Base+0x17a38>
   3ca1c:	add	x2, sp, #0x7a4
   3ca20:	add	x1, sp, #0x770
   3ca24:	add	x0, sp, #0x2b0
   3ca28:	mov	x4, x2
   3ca2c:	mov	x3, x1
   3ca30:	mov	x2, x0
   3ca34:	ldr	x1, [sp, #2088]
   3ca38:	ldr	x0, [sp, #2088]
   3ca3c:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3ca40:	add	x2, sp, #0x7a4
   3ca44:	add	x1, sp, #0x740
   3ca48:	add	x0, sp, #0x278
   3ca4c:	mov	x4, x2
   3ca50:	mov	x3, x1
   3ca54:	mov	x2, x0
   3ca58:	ldr	x1, [sp, #2088]
   3ca5c:	ldr	x0, [sp, #2088]
   3ca60:	bl	36dd0 <PyInit__decimal@@Base+0x1f0f8>
   3ca64:	ldr	w0, [sp, #2100]
   3ca68:	sub	w0, w0, #0x1
   3ca6c:	str	w0, [sp, #2100]
   3ca70:	ldr	w0, [sp, #2100]
   3ca74:	cmp	w0, #0x0
   3ca78:	b.ge	3c938 <PyInit__decimal@@Base+0x24c60>  // b.tcont
   3ca7c:	ldr	x0, [sp, #2088]
   3ca80:	ldr	x1, [x0, #8]
   3ca84:	ldr	x0, [sp, #2056]
   3ca88:	sub	x1, x1, x0
   3ca8c:	ldr	x0, [sp, #2088]
   3ca90:	str	x1, [x0, #8]
   3ca94:	ldr	x0, [sp, #40]
   3ca98:	bl	26ea0 <PyInit__decimal@@Base+0xf1c8>
   3ca9c:	str	x0, [sp, #2040]
   3caa0:	ldr	x0, [sp, #40]
   3caa4:	ldr	x0, [x0, #8]
   3caa8:	ldr	x1, [sp, #2080]
   3caac:	sub	x0, x1, x0
   3cab0:	str	x0, [sp, #2032]
   3cab4:	ldr	x0, [sp, #2032]
   3cab8:	ldr	x2, [sp, #2040]
   3cabc:	ldr	x1, [sp, #2040]
   3cac0:	cmp	x2, x0
   3cac4:	csel	x0, x1, x0, le
   3cac8:	str	x0, [sp, #2032]
   3cacc:	ldr	x0, [sp, #2032]
   3cad0:	cmp	x0, #0x0
   3cad4:	b.le	3cafc <PyInit__decimal@@Base+0x24e24>
   3cad8:	ldr	x1, [sp, #2032]
   3cadc:	ldr	x0, [sp, #40]
   3cae0:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   3cae4:	ldr	x0, [sp, #40]
   3cae8:	ldr	x1, [x0, #8]
   3caec:	ldr	x0, [sp, #2032]
   3caf0:	add	x1, x1, x0
   3caf4:	ldr	x0, [sp, #40]
   3caf8:	str	x1, [x0, #8]
   3cafc:	add	x0, sp, #0x4e0
   3cb00:	str	x0, [sp, #2000]
   3cb04:	ldr	x0, [sp, #2000]
   3cb08:	str	x0, [sp, #1992]
   3cb0c:	ldr	x0, [sp, #1992]
   3cb10:	ldrb	w0, [x0]
   3cb14:	and	w0, w0, #0xe0
   3cb18:	cmp	w0, #0x0
   3cb1c:	cset	w0, eq  // eq = none
   3cb20:	and	w0, w0, #0xff
   3cb24:	cmp	w0, #0x0
   3cb28:	b.eq	3cb44 <PyInit__decimal@@Base+0x24e6c>  // b.none
   3cb2c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cb30:	add	x0, x0, #0x6f8
   3cb34:	ldr	x1, [x0]
   3cb38:	ldr	x0, [sp, #2000]
   3cb3c:	ldr	x0, [x0, #40]
   3cb40:	blr	x1
   3cb44:	ldr	x0, [sp, #2000]
   3cb48:	str	x0, [sp, #1984]
   3cb4c:	ldr	x0, [sp, #1984]
   3cb50:	ldrb	w0, [x0]
   3cb54:	and	w0, w0, #0x10
   3cb58:	cmp	w0, #0x0
   3cb5c:	cset	w0, eq  // eq = none
   3cb60:	and	w0, w0, #0xff
   3cb64:	cmp	w0, #0x0
   3cb68:	b.eq	3cb80 <PyInit__decimal@@Base+0x24ea8>  // b.none
   3cb6c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cb70:	add	x0, x0, #0x6f8
   3cb74:	ldr	x1, [x0]
   3cb78:	ldr	x0, [sp, #2000]
   3cb7c:	blr	x1
   3cb80:	nop
   3cb84:	add	x0, sp, #0x2b0
   3cb88:	str	x0, [sp, #2024]
   3cb8c:	ldr	x0, [sp, #2024]
   3cb90:	str	x0, [sp, #2016]
   3cb94:	ldr	x0, [sp, #2016]
   3cb98:	ldrb	w0, [x0]
   3cb9c:	and	w0, w0, #0xe0
   3cba0:	cmp	w0, #0x0
   3cba4:	cset	w0, eq  // eq = none
   3cba8:	and	w0, w0, #0xff
   3cbac:	cmp	w0, #0x0
   3cbb0:	b.eq	3cbcc <PyInit__decimal@@Base+0x24ef4>  // b.none
   3cbb4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cbb8:	add	x0, x0, #0x6f8
   3cbbc:	ldr	x1, [x0]
   3cbc0:	ldr	x0, [sp, #2024]
   3cbc4:	ldr	x0, [x0, #40]
   3cbc8:	blr	x1
   3cbcc:	ldr	x0, [sp, #2024]
   3cbd0:	str	x0, [sp, #2008]
   3cbd4:	ldr	x0, [sp, #2008]
   3cbd8:	ldrb	w0, [x0]
   3cbdc:	and	w0, w0, #0x10
   3cbe0:	cmp	w0, #0x0
   3cbe4:	cset	w0, eq  // eq = none
   3cbe8:	and	w0, w0, #0xff
   3cbec:	cmp	w0, #0x0
   3cbf0:	b.eq	3cc08 <PyInit__decimal@@Base+0x24f30>  // b.none
   3cbf4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cbf8:	add	x0, x0, #0x6f8
   3cbfc:	ldr	x1, [x0]
   3cc00:	ldr	x0, [sp, #2024]
   3cc04:	blr	x1
   3cc08:	nop
   3cc0c:	add	x0, sp, #0x710
   3cc10:	ldr	x1, [sp, #2104]
   3cc14:	cmp	x1, x0
   3cc18:	b.eq	3cca4 <PyInit__decimal@@Base+0x24fcc>  // b.none
   3cc1c:	ldr	x0, [sp, #2104]
   3cc20:	str	x0, [sp, #1976]
   3cc24:	ldr	x0, [sp, #1976]
   3cc28:	str	x0, [sp, #1968]
   3cc2c:	ldr	x0, [sp, #1968]
   3cc30:	ldrb	w0, [x0]
   3cc34:	and	w0, w0, #0xe0
   3cc38:	cmp	w0, #0x0
   3cc3c:	cset	w0, eq  // eq = none
   3cc40:	and	w0, w0, #0xff
   3cc44:	cmp	w0, #0x0
   3cc48:	b.eq	3cc64 <PyInit__decimal@@Base+0x24f8c>  // b.none
   3cc4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cc50:	add	x0, x0, #0x6f8
   3cc54:	ldr	x1, [x0]
   3cc58:	ldr	x0, [sp, #1976]
   3cc5c:	ldr	x0, [x0, #40]
   3cc60:	blr	x1
   3cc64:	ldr	x0, [sp, #1976]
   3cc68:	str	x0, [sp, #1960]
   3cc6c:	ldr	x0, [sp, #1960]
   3cc70:	ldrb	w0, [x0]
   3cc74:	and	w0, w0, #0x10
   3cc78:	cmp	w0, #0x0
   3cc7c:	cset	w0, eq  // eq = none
   3cc80:	and	w0, w0, #0xff
   3cc84:	cmp	w0, #0x0
   3cc88:	b.eq	3cca0 <PyInit__decimal@@Base+0x24fc8>  // b.none
   3cc8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3cc90:	add	x0, x0, #0x6f8
   3cc94:	ldr	x1, [x0]
   3cc98:	ldr	x0, [sp, #1976]
   3cc9c:	blr	x1
   3cca0:	nop
   3cca4:	ldr	x0, [sp, #16]
   3cca8:	ldr	w1, [x0]
   3ccac:	ldr	w2, [sp, #1956]
   3ccb0:	mov	w0, #0x3be                 	// #958
   3ccb4:	and	w0, w2, w0
   3ccb8:	orr	w1, w1, w0
   3ccbc:	ldr	x0, [sp, #16]
   3ccc0:	str	w1, [x0]
   3ccc4:	ldr	x0, [sp, #16]
   3ccc8:	ldr	w1, [x0]
   3cccc:	mov	w0, #0x1040                	// #4160
   3ccd0:	orr	w1, w1, w0
   3ccd4:	ldr	x0, [sp, #16]
   3ccd8:	str	w1, [x0]
   3ccdc:	ldp	x29, x30, [sp]
   3cce0:	add	sp, sp, #0x840
   3cce4:	ret
   3cce8:	stp	x29, x30, [sp, #-160]!
   3ccec:	mov	x29, sp
   3ccf0:	str	x0, [sp, #40]
   3ccf4:	str	x1, [sp, #32]
   3ccf8:	str	x2, [sp, #24]
   3ccfc:	str	x3, [sp, #16]
   3cd00:	ldr	x0, [sp, #32]
   3cd04:	str	x0, [sp, #152]
   3cd08:	ldr	x0, [sp, #152]
   3cd0c:	ldrb	w0, [x0]
   3cd10:	and	w0, w0, #0xe
   3cd14:	cmp	w0, #0x0
   3cd18:	b.eq	3cdb4 <PyInit__decimal@@Base+0x250dc>  // b.none
   3cd1c:	ldr	x3, [sp, #16]
   3cd20:	ldr	x2, [sp, #24]
   3cd24:	ldr	x1, [sp, #32]
   3cd28:	ldr	x0, [sp, #40]
   3cd2c:	bl	28540 <PyInit__decimal@@Base+0x10868>
   3cd30:	cmp	w0, #0x0
   3cd34:	b.ne	3ceec <PyInit__decimal@@Base+0x25214>  // b.any
   3cd38:	ldr	x0, [sp, #32]
   3cd3c:	str	x0, [sp, #144]
   3cd40:	ldr	x0, [sp, #144]
   3cd44:	ldrb	w0, [x0]
   3cd48:	and	w0, w0, #0x1
   3cd4c:	cmp	w0, #0x0
   3cd50:	b.eq	3cd68 <PyInit__decimal@@Base+0x25090>  // b.none
   3cd54:	ldr	x2, [sp, #16]
   3cd58:	mov	w1, #0x100                 	// #256
   3cd5c:	ldr	x0, [sp, #40]
   3cd60:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3cd64:	b	3cef0 <PyInit__decimal@@Base+0x25218>
   3cd68:	ldr	x0, [sp, #24]
   3cd6c:	str	x0, [sp, #136]
   3cd70:	ldr	x0, [sp, #136]
   3cd74:	ldr	x1, [x0, #16]
   3cd78:	ldr	x0, [sp, #136]
   3cd7c:	ldr	x0, [x0]
   3cd80:	sub	x0, x1, x0
   3cd84:	add	x0, x0, #0x1
   3cd88:	mov	x3, x0
   3cd8c:	mov	x2, #0x0                   	// #0
   3cd90:	mov	w1, #0x0                   	// #0
   3cd94:	ldr	x0, [sp, #40]
   3cd98:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3cd9c:	ldr	x0, [sp, #16]
   3cda0:	ldr	w0, [x0]
   3cda4:	orr	w1, w0, #0x1
   3cda8:	ldr	x0, [sp, #16]
   3cdac:	str	w1, [x0]
   3cdb0:	b	3cef0 <PyInit__decimal@@Base+0x25218>
   3cdb4:	ldr	x0, [sp, #32]
   3cdb8:	str	x0, [sp, #128]
   3cdbc:	ldr	x0, [sp, #128]
   3cdc0:	str	x0, [sp, #120]
   3cdc4:	ldr	x0, [sp, #120]
   3cdc8:	ldrb	w0, [x0]
   3cdcc:	and	w0, w0, #0xe
   3cdd0:	cmp	w0, #0x0
   3cdd4:	b.ne	3ce10 <PyInit__decimal@@Base+0x25138>  // b.any
   3cdd8:	ldr	x0, [sp, #128]
   3cddc:	str	x0, [sp, #112]
   3cde0:	ldr	x0, [sp, #112]
   3cde4:	ldr	x1, [x0, #40]
   3cde8:	ldr	x0, [sp, #112]
   3cdec:	ldr	x0, [x0, #24]
   3cdf0:	lsl	x0, x0, #3
   3cdf4:	sub	x0, x0, #0x8
   3cdf8:	add	x0, x1, x0
   3cdfc:	ldr	x0, [x0]
   3ce00:	cmp	x0, #0x0
   3ce04:	b.ne	3ce10 <PyInit__decimal@@Base+0x25138>  // b.any
   3ce08:	mov	w0, #0x1                   	// #1
   3ce0c:	b	3ce14 <PyInit__decimal@@Base+0x2513c>
   3ce10:	mov	w0, #0x0                   	// #0
   3ce14:	cmp	w0, #0x0
   3ce18:	b.eq	3ce5c <PyInit__decimal@@Base+0x25184>  // b.none
   3ce1c:	ldr	x0, [sp, #32]
   3ce20:	str	x0, [sp, #104]
   3ce24:	ldr	x0, [sp, #104]
   3ce28:	ldrb	w0, [x0]
   3ce2c:	and	w0, w0, #0x1
   3ce30:	and	w0, w0, #0xff
   3ce34:	mov	w2, #0x2                   	// #2
   3ce38:	mov	w1, w0
   3ce3c:	ldr	x0, [sp, #40]
   3ce40:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3ce44:	ldr	x0, [sp, #16]
   3ce48:	ldr	w0, [x0]
   3ce4c:	orr	w1, w0, #0x4
   3ce50:	ldr	x0, [sp, #16]
   3ce54:	str	w1, [x0]
   3ce58:	b	3cef0 <PyInit__decimal@@Base+0x25218>
   3ce5c:	ldr	x0, [sp, #32]
   3ce60:	str	x0, [sp, #96]
   3ce64:	ldr	x0, [sp, #96]
   3ce68:	ldrb	w0, [x0]
   3ce6c:	and	w0, w0, #0x1
   3ce70:	cmp	w0, #0x0
   3ce74:	b.eq	3ce8c <PyInit__decimal@@Base+0x251b4>  // b.none
   3ce78:	ldr	x2, [sp, #16]
   3ce7c:	mov	w1, #0x100                 	// #256
   3ce80:	ldr	x0, [sp, #40]
   3ce84:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3ce88:	b	3cef0 <PyInit__decimal@@Base+0x25218>
   3ce8c:	ldr	x1, [sp, #24]
   3ce90:	add	x0, sp, #0x30
   3ce94:	ldp	x2, x3, [x1]
   3ce98:	stp	x2, x3, [x0]
   3ce9c:	ldp	x2, x3, [x1, #16]
   3cea0:	stp	x2, x3, [x0, #16]
   3cea4:	ldp	x2, x3, [x1, #32]
   3cea8:	stp	x2, x3, [x0, #32]
   3ceac:	ldr	x0, [sp, #48]
   3ceb0:	add	x0, x0, #0x2
   3ceb4:	str	x0, [sp, #48]
   3ceb8:	mov	w0, #0x6                   	// #6
   3cebc:	str	w0, [sp, #84]
   3cec0:	add	x0, sp, #0x30
   3cec4:	ldr	x3, [sp, #16]
   3cec8:	mov	x2, x0
   3cecc:	ldr	x1, [sp, #32]
   3ced0:	ldr	x0, [sp, #40]
   3ced4:	bl	3c5dc <PyInit__decimal@@Base+0x24904>
   3ced8:	ldr	x2, [sp, #16]
   3cedc:	ldr	x1, [sp, #24]
   3cee0:	ldr	x0, [sp, #40]
   3cee4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3cee8:	b	3cef0 <PyInit__decimal@@Base+0x25218>
   3ceec:	nop
   3cef0:	ldp	x29, x30, [sp], #160
   3cef4:	ret
   3cef8:	sub	sp, sp, #0x800
   3cefc:	stp	x29, x30, [sp]
   3cf00:	mov	x29, sp
   3cf04:	str	x0, [sp, #40]
   3cf08:	str	x1, [sp, #32]
   3cf0c:	str	x2, [sp, #24]
   3cf10:	str	x3, [sp, #16]
   3cf14:	mov	w0, #0x30                  	// #48
   3cf18:	strb	w0, [sp, #1224]
   3cf1c:	str	xzr, [sp, #1232]
   3cf20:	str	xzr, [sp, #1240]
   3cf24:	str	xzr, [sp, #1248]
   3cf28:	mov	x0, #0x40                  	// #64
   3cf2c:	str	x0, [sp, #1256]
   3cf30:	add	x0, sp, #0x4f8
   3cf34:	str	x0, [sp, #1264]
   3cf38:	mov	w0, #0x30                  	// #48
   3cf3c:	strb	w0, [sp, #664]
   3cf40:	str	xzr, [sp, #672]
   3cf44:	str	xzr, [sp, #680]
   3cf48:	str	xzr, [sp, #688]
   3cf4c:	mov	x0, #0x40                  	// #64
   3cf50:	str	x0, [sp, #696]
   3cf54:	add	x0, sp, #0x2c8
   3cf58:	str	x0, [sp, #704]
   3cf5c:	mov	w0, #0x30                  	// #48
   3cf60:	strb	w0, [sp, #104]
   3cf64:	str	xzr, [sp, #112]
   3cf68:	str	xzr, [sp, #120]
   3cf6c:	str	xzr, [sp, #128]
   3cf70:	mov	x0, #0x40                  	// #64
   3cf74:	str	x0, [sp, #136]
   3cf78:	add	x0, sp, #0x98
   3cf7c:	str	x0, [sp, #144]
   3cf80:	mov	x0, #0x2                   	// #2
   3cf84:	str	x0, [sp, #96]
   3cf88:	mov	w0, #0xffffff90            	// #-112
   3cf8c:	strb	w0, [sp, #48]
   3cf90:	str	xzr, [sp, #56]
   3cf94:	mov	x0, #0x1                   	// #1
   3cf98:	str	x0, [sp, #64]
   3cf9c:	mov	x0, #0x1                   	// #1
   3cfa0:	str	x0, [sp, #72]
   3cfa4:	mov	x0, #0x1                   	// #1
   3cfa8:	str	x0, [sp, #80]
   3cfac:	add	x0, sp, #0x60
   3cfb0:	str	x0, [sp, #88]
   3cfb4:	str	wzr, [sp, #2028]
   3cfb8:	ldr	x0, [sp, #32]
   3cfbc:	ldr	x0, [x0, #8]
   3cfc0:	asr	x0, x0, #1
   3cfc4:	str	x0, [sp, #2040]
   3cfc8:	ldr	x0, [sp, #32]
   3cfcc:	str	x0, [sp, #1992]
   3cfd0:	ldr	x0, [sp, #1992]
   3cfd4:	ldrb	w0, [x0]
   3cfd8:	and	w0, w0, #0xe
   3cfdc:	cmp	w0, #0x0
   3cfe0:	b.eq	3d044 <PyInit__decimal@@Base+0x2536c>  // b.none
   3cfe4:	ldr	x3, [sp, #16]
   3cfe8:	ldr	x2, [sp, #24]
   3cfec:	ldr	x1, [sp, #32]
   3cff0:	ldr	x0, [sp, #40]
   3cff4:	bl	28540 <PyInit__decimal@@Base+0x10868>
   3cff8:	cmp	w0, #0x0
   3cffc:	b.ne	3d6fc <PyInit__decimal@@Base+0x25a24>  // b.any
   3d000:	ldr	x0, [sp, #32]
   3d004:	str	x0, [sp, #1984]
   3d008:	ldr	x0, [sp, #1984]
   3d00c:	ldrb	w0, [x0]
   3d010:	and	w0, w0, #0x1
   3d014:	cmp	w0, #0x0
   3d018:	b.eq	3d030 <PyInit__decimal@@Base+0x25358>  // b.none
   3d01c:	ldr	x2, [sp, #16]
   3d020:	mov	w1, #0x100                 	// #256
   3d024:	ldr	x0, [sp, #40]
   3d028:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d02c:	b	3d700 <PyInit__decimal@@Base+0x25a28>
   3d030:	mov	w2, #0x2                   	// #2
   3d034:	mov	w1, #0x0                   	// #0
   3d038:	ldr	x0, [sp, #40]
   3d03c:	bl	27a40 <PyInit__decimal@@Base+0xfd68>
   3d040:	b	3d700 <PyInit__decimal@@Base+0x25a28>
   3d044:	ldr	x0, [sp, #32]
   3d048:	str	x0, [sp, #1976]
   3d04c:	ldr	x0, [sp, #1976]
   3d050:	str	x0, [sp, #1968]
   3d054:	ldr	x0, [sp, #1968]
   3d058:	ldrb	w0, [x0]
   3d05c:	and	w0, w0, #0xe
   3d060:	cmp	w0, #0x0
   3d064:	b.ne	3d0a0 <PyInit__decimal@@Base+0x253c8>  // b.any
   3d068:	ldr	x0, [sp, #1976]
   3d06c:	str	x0, [sp, #1960]
   3d070:	ldr	x0, [sp, #1960]
   3d074:	ldr	x1, [x0, #40]
   3d078:	ldr	x0, [sp, #1960]
   3d07c:	ldr	x0, [x0, #24]
   3d080:	lsl	x0, x0, #3
   3d084:	sub	x0, x0, #0x8
   3d088:	add	x0, x1, x0
   3d08c:	ldr	x0, [x0]
   3d090:	cmp	x0, #0x0
   3d094:	b.ne	3d0a0 <PyInit__decimal@@Base+0x253c8>  // b.any
   3d098:	mov	w0, #0x1                   	// #1
   3d09c:	b	3d0a4 <PyInit__decimal@@Base+0x253cc>
   3d0a0:	mov	w0, #0x0                   	// #0
   3d0a4:	cmp	w0, #0x0
   3d0a8:	b.eq	3d0ec <PyInit__decimal@@Base+0x25414>  // b.none
   3d0ac:	ldr	x0, [sp, #32]
   3d0b0:	str	x0, [sp, #1952]
   3d0b4:	ldr	x0, [sp, #1952]
   3d0b8:	ldrb	w0, [x0]
   3d0bc:	and	w0, w0, #0x1
   3d0c0:	and	w0, w0, #0xff
   3d0c4:	ldr	x3, [sp, #2040]
   3d0c8:	mov	x2, #0x0                   	// #0
   3d0cc:	mov	w1, w0
   3d0d0:	ldr	x0, [sp, #40]
   3d0d4:	bl	278c4 <PyInit__decimal@@Base+0xfbec>
   3d0d8:	ldr	x2, [sp, #16]
   3d0dc:	ldr	x1, [sp, #24]
   3d0e0:	ldr	x0, [sp, #40]
   3d0e4:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3d0e8:	b	3d700 <PyInit__decimal@@Base+0x25a28>
   3d0ec:	ldr	x0, [sp, #32]
   3d0f0:	str	x0, [sp, #1944]
   3d0f4:	ldr	x0, [sp, #1944]
   3d0f8:	ldrb	w0, [x0]
   3d0fc:	and	w0, w0, #0x1
   3d100:	cmp	w0, #0x0
   3d104:	b.eq	3d11c <PyInit__decimal@@Base+0x25444>  // b.none
   3d108:	ldr	x2, [sp, #16]
   3d10c:	mov	w1, #0x100                 	// #256
   3d110:	ldr	x0, [sp, #40]
   3d114:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d118:	b	3d700 <PyInit__decimal@@Base+0x25a28>
   3d11c:	add	x0, sp, #0x6f8
   3d120:	bl	1b658 <PyInit__decimal@@Base+0x3980>
   3d124:	ldr	x0, [sp, #24]
   3d128:	ldr	x0, [x0]
   3d12c:	add	x0, x0, #0x1
   3d130:	str	x0, [sp, #2016]
   3d134:	add	x0, sp, #0x4c8
   3d138:	ldr	x2, [sp, #16]
   3d13c:	ldr	x1, [sp, #32]
   3d140:	bl	29840 <PyInit__decimal@@Base+0x11b68>
   3d144:	cmp	w0, #0x0
   3d148:	b.eq	3d6c4 <PyInit__decimal@@Base+0x259ec>  // b.none
   3d14c:	str	xzr, [sp, #1232]
   3d150:	ldr	x0, [sp, #32]
   3d154:	ldr	x0, [x0, #8]
   3d158:	and	x0, x0, #0x1
   3d15c:	cmp	x0, #0x0
   3d160:	b.eq	3d198 <PyInit__decimal@@Base+0x254c0>  // b.none
   3d164:	add	x1, sp, #0x4c8
   3d168:	add	x0, sp, #0x4c8
   3d16c:	ldr	x3, [sp, #16]
   3d170:	mov	x2, #0x1                   	// #1
   3d174:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3d178:	cmp	w0, #0x0
   3d17c:	b.eq	3d6cc <PyInit__decimal@@Base+0x259f4>  // b.none
   3d180:	ldr	x0, [sp, #32]
   3d184:	ldr	x0, [x0, #16]
   3d188:	asr	x0, x0, #1
   3d18c:	add	x0, x0, #0x1
   3d190:	str	x0, [sp, #2032]
   3d194:	b	3d1ac <PyInit__decimal@@Base+0x254d4>
   3d198:	ldr	x0, [sp, #32]
   3d19c:	ldr	x0, [x0, #16]
   3d1a0:	add	x0, x0, #0x1
   3d1a4:	asr	x0, x0, #1
   3d1a8:	str	x0, [sp, #2032]
   3d1ac:	ldr	x1, [sp, #2016]
   3d1b0:	ldr	x0, [sp, #2032]
   3d1b4:	sub	x0, x1, x0
   3d1b8:	str	x0, [sp, #2008]
   3d1bc:	ldr	x0, [sp, #2008]
   3d1c0:	cmp	x0, #0x0
   3d1c4:	b.lt	3d1f4 <PyInit__decimal@@Base+0x2551c>  // b.tstop
   3d1c8:	ldr	x0, [sp, #2008]
   3d1cc:	lsl	x2, x0, #1
   3d1d0:	add	x1, sp, #0x4c8
   3d1d4:	add	x0, sp, #0x4c8
   3d1d8:	ldr	x3, [sp, #16]
   3d1dc:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3d1e0:	cmp	w0, #0x0
   3d1e4:	b.eq	3d6d4 <PyInit__decimal@@Base+0x259fc>  // b.none
   3d1e8:	mov	w0, #0x1                   	// #1
   3d1ec:	str	w0, [sp, #2028]
   3d1f0:	b	3d220 <PyInit__decimal@@Base+0x25548>
   3d1f4:	ldr	x1, [sp, #2008]
   3d1f8:	mov	x0, #0x0                   	// #0
   3d1fc:	sub	x0, x0, x1
   3d200:	lsl	x0, x0, #1
   3d204:	mov	x1, x0
   3d208:	add	x0, sp, #0x4c8
   3d20c:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   3d210:	cmp	x0, #0x0
   3d214:	cset	w0, eq  // eq = none
   3d218:	and	w0, w0, #0xff
   3d21c:	str	w0, [sp, #2028]
   3d220:	ldr	x1, [sp, #2040]
   3d224:	ldr	x0, [sp, #2008]
   3d228:	sub	x0, x1, x0
   3d22c:	str	x0, [sp, #2040]
   3d230:	ldr	x3, [sp, #16]
   3d234:	ldr	x2, [sp, #2016]
   3d238:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   3d23c:	add	x1, x0, #0xc58
   3d240:	ldr	x0, [sp, #40]
   3d244:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3d248:	cmp	w0, #0x0
   3d24c:	b.eq	3d6dc <PyInit__decimal@@Base+0x25a04>  // b.none
   3d250:	add	x0, sp, #0x6f8
   3d254:	add	x4, x0, #0x1c
   3d258:	add	x3, sp, #0x6f8
   3d25c:	add	x2, sp, #0x4c8
   3d260:	add	x1, sp, #0x68
   3d264:	add	x0, sp, #0x298
   3d268:	mov	x5, x4
   3d26c:	mov	x4, x3
   3d270:	ldr	x3, [sp, #40]
   3d274:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   3d278:	ldr	x0, [sp, #40]
   3d27c:	str	x0, [sp, #1936]
   3d280:	ldr	x0, [sp, #1936]
   3d284:	ldrb	w0, [x0]
   3d288:	and	w0, w0, #0xe
   3d28c:	cmp	w0, #0x0
   3d290:	b.ne	3d2b0 <PyInit__decimal@@Base+0x255d8>  // b.any
   3d294:	add	x0, sp, #0x298
   3d298:	str	x0, [sp, #1928]
   3d29c:	ldr	x0, [sp, #1928]
   3d2a0:	ldrb	w0, [x0]
   3d2a4:	and	w0, w0, #0xe
   3d2a8:	cmp	w0, #0x0
   3d2ac:	b.eq	3d2d0 <PyInit__decimal@@Base+0x255f8>  // b.none
   3d2b0:	ldr	w1, [sp, #1812]
   3d2b4:	mov	w0, #0x3be                 	// #958
   3d2b8:	and	w0, w1, w0
   3d2bc:	ldr	x2, [sp, #16]
   3d2c0:	mov	w1, w0
   3d2c4:	ldr	x0, [sp, #40]
   3d2c8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d2cc:	b	3d4ec <PyInit__decimal@@Base+0x25814>
   3d2d0:	add	x0, sp, #0x298
   3d2d4:	mov	x1, x0
   3d2d8:	ldr	x0, [sp, #40]
   3d2dc:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   3d2e0:	cmp	w0, #0x0
   3d2e4:	b.le	3d380 <PyInit__decimal@@Base+0x256a8>
   3d2e8:	add	x0, sp, #0x6f8
   3d2ec:	add	x2, x0, #0x1c
   3d2f0:	add	x1, sp, #0x6f8
   3d2f4:	add	x0, sp, #0x298
   3d2f8:	mov	x4, x2
   3d2fc:	mov	x3, x1
   3d300:	mov	x2, x0
   3d304:	ldr	x1, [sp, #40]
   3d308:	ldr	x0, [sp, #40]
   3d30c:	bl	2f68c <PyInit__decimal@@Base+0x179b4>
   3d310:	ldr	x0, [sp, #40]
   3d314:	str	x0, [sp, #1920]
   3d318:	ldr	x0, [sp, #1920]
   3d31c:	ldrb	w0, [x0]
   3d320:	and	w0, w0, #0xe
   3d324:	cmp	w0, #0x0
   3d328:	b.eq	3d34c <PyInit__decimal@@Base+0x25674>  // b.none
   3d32c:	ldr	w1, [sp, #1812]
   3d330:	mov	w0, #0x3be                 	// #958
   3d334:	and	w0, w1, w0
   3d338:	ldr	x2, [sp, #16]
   3d33c:	mov	w1, w0
   3d340:	ldr	x0, [sp, #40]
   3d344:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d348:	b	3d4ec <PyInit__decimal@@Base+0x25814>
   3d34c:	add	x0, sp, #0x6f8
   3d350:	add	x3, x0, #0x1c
   3d354:	add	x2, sp, #0x6f8
   3d358:	add	x1, sp, #0x30
   3d35c:	add	x0, sp, #0x68
   3d360:	mov	x5, x3
   3d364:	mov	x4, x2
   3d368:	mov	x3, x1
   3d36c:	ldr	x2, [sp, #40]
   3d370:	mov	x1, x0
   3d374:	ldr	x0, [sp, #40]
   3d378:	bl	30aa8 <PyInit__decimal@@Base+0x18dd0>
   3d37c:	b	3d250 <PyInit__decimal@@Base+0x25578>
   3d380:	nop
   3d384:	ldr	w0, [sp, #2028]
   3d388:	cmp	w0, #0x0
   3d38c:	b.eq	3d40c <PyInit__decimal@@Base+0x25734>  // b.none
   3d390:	add	x0, sp, #0x6f8
   3d394:	add	x2, x0, #0x1c
   3d398:	add	x1, sp, #0x6f8
   3d39c:	add	x0, sp, #0x68
   3d3a0:	mov	x4, x2
   3d3a4:	mov	x3, x1
   3d3a8:	ldr	x2, [sp, #40]
   3d3ac:	ldr	x1, [sp, #40]
   3d3b0:	bl	36e20 <PyInit__decimal@@Base+0x1f148>
   3d3b4:	add	x0, sp, #0x68
   3d3b8:	str	x0, [sp, #1912]
   3d3bc:	ldr	x0, [sp, #1912]
   3d3c0:	ldrb	w0, [x0]
   3d3c4:	and	w0, w0, #0xe
   3d3c8:	cmp	w0, #0x0
   3d3cc:	b.eq	3d3f0 <PyInit__decimal@@Base+0x25718>  // b.none
   3d3d0:	ldr	w1, [sp, #1812]
   3d3d4:	mov	w0, #0x3be                 	// #958
   3d3d8:	and	w0, w1, w0
   3d3dc:	ldr	x2, [sp, #16]
   3d3e0:	mov	w1, w0
   3d3e4:	ldr	x0, [sp, #40]
   3d3e8:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d3ec:	b	3d4ec <PyInit__decimal@@Base+0x25814>
   3d3f0:	add	x1, sp, #0x4c8
   3d3f4:	add	x0, sp, #0x68
   3d3f8:	bl	2a1b0 <PyInit__decimal@@Base+0x124d8>
   3d3fc:	cmp	w0, #0x0
   3d400:	cset	w0, eq  // eq = none
   3d404:	and	w0, w0, #0xff
   3d408:	str	w0, [sp, #2028]
   3d40c:	ldr	w0, [sp, #2028]
   3d410:	cmp	w0, #0x0
   3d414:	b.eq	3d46c <PyInit__decimal@@Base+0x25794>  // b.none
   3d418:	ldr	x0, [sp, #2008]
   3d41c:	cmp	x0, #0x0
   3d420:	b.lt	3d434 <PyInit__decimal@@Base+0x2575c>  // b.tstop
   3d424:	ldr	x1, [sp, #2008]
   3d428:	ldr	x0, [sp, #40]
   3d42c:	bl	2b638 <PyInit__decimal@@Base+0x13960>
   3d430:	b	3d458 <PyInit__decimal@@Base+0x25780>
   3d434:	ldr	x0, [sp, #2008]
   3d438:	neg	x0, x0
   3d43c:	ldr	x3, [sp, #16]
   3d440:	mov	x2, x0
   3d444:	ldr	x1, [sp, #40]
   3d448:	ldr	x0, [sp, #40]
   3d44c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3d450:	cmp	w0, #0x0
   3d454:	b.eq	3d6e4 <PyInit__decimal@@Base+0x25a0c>  // b.none
   3d458:	ldr	x1, [sp, #2040]
   3d45c:	ldr	x0, [sp, #2008]
   3d460:	add	x0, x1, x0
   3d464:	str	x0, [sp, #2040]
   3d468:	b	3d4e0 <PyInit__decimal@@Base+0x25808>
   3d46c:	ldr	x0, [sp, #40]
   3d470:	ldr	x0, [x0, #40]
   3d474:	ldr	x0, [x0]
   3d478:	str	x0, [sp, #1904]
   3d47c:	ldr	x2, [sp, #1904]
   3d480:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   3d484:	movk	x0, #0xcccd
   3d488:	umulh	x0, x2, x0
   3d48c:	lsr	x1, x0, #3
   3d490:	mov	x0, x1
   3d494:	lsl	x0, x0, #2
   3d498:	add	x0, x0, x1
   3d49c:	lsl	x0, x0, #1
   3d4a0:	sub	x1, x2, x0
   3d4a4:	mov	w0, w1
   3d4a8:	str	w0, [sp, #2004]
   3d4ac:	ldr	w0, [sp, #2004]
   3d4b0:	cmp	w0, #0x0
   3d4b4:	b.eq	3d4c4 <PyInit__decimal@@Base+0x257ec>  // b.none
   3d4b8:	ldr	w0, [sp, #2004]
   3d4bc:	cmp	w0, #0x5
   3d4c0:	b.ne	3d4e0 <PyInit__decimal@@Base+0x25808>  // b.any
   3d4c4:	ldr	x0, [sp, #40]
   3d4c8:	ldr	x0, [x0, #40]
   3d4cc:	ldr	x1, [x0]
   3d4d0:	ldr	x0, [sp, #40]
   3d4d4:	ldr	x0, [x0, #40]
   3d4d8:	add	x1, x1, #0x1
   3d4dc:	str	x1, [x0]
   3d4e0:	ldr	x0, [sp, #40]
   3d4e4:	ldr	x1, [sp, #2040]
   3d4e8:	str	x1, [x0, #8]
   3d4ec:	add	x0, sp, #0x4c8
   3d4f0:	str	x0, [sp, #1848]
   3d4f4:	ldr	x0, [sp, #1848]
   3d4f8:	str	x0, [sp, #1840]
   3d4fc:	ldr	x0, [sp, #1840]
   3d500:	ldrb	w0, [x0]
   3d504:	and	w0, w0, #0xe0
   3d508:	cmp	w0, #0x0
   3d50c:	cset	w0, eq  // eq = none
   3d510:	and	w0, w0, #0xff
   3d514:	cmp	w0, #0x0
   3d518:	b.eq	3d534 <PyInit__decimal@@Base+0x2585c>  // b.none
   3d51c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d520:	add	x0, x0, #0x6f8
   3d524:	ldr	x1, [x0]
   3d528:	ldr	x0, [sp, #1848]
   3d52c:	ldr	x0, [x0, #40]
   3d530:	blr	x1
   3d534:	ldr	x0, [sp, #1848]
   3d538:	str	x0, [sp, #1832]
   3d53c:	ldr	x0, [sp, #1832]
   3d540:	ldrb	w0, [x0]
   3d544:	and	w0, w0, #0x10
   3d548:	cmp	w0, #0x0
   3d54c:	cset	w0, eq  // eq = none
   3d550:	and	w0, w0, #0xff
   3d554:	cmp	w0, #0x0
   3d558:	b.eq	3d570 <PyInit__decimal@@Base+0x25898>  // b.none
   3d55c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d560:	add	x0, x0, #0x6f8
   3d564:	ldr	x1, [x0]
   3d568:	ldr	x0, [sp, #1848]
   3d56c:	blr	x1
   3d570:	nop
   3d574:	add	x0, sp, #0x298
   3d578:	str	x0, [sp, #1872]
   3d57c:	ldr	x0, [sp, #1872]
   3d580:	str	x0, [sp, #1864]
   3d584:	ldr	x0, [sp, #1864]
   3d588:	ldrb	w0, [x0]
   3d58c:	and	w0, w0, #0xe0
   3d590:	cmp	w0, #0x0
   3d594:	cset	w0, eq  // eq = none
   3d598:	and	w0, w0, #0xff
   3d59c:	cmp	w0, #0x0
   3d5a0:	b.eq	3d5bc <PyInit__decimal@@Base+0x258e4>  // b.none
   3d5a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d5a8:	add	x0, x0, #0x6f8
   3d5ac:	ldr	x1, [x0]
   3d5b0:	ldr	x0, [sp, #1872]
   3d5b4:	ldr	x0, [x0, #40]
   3d5b8:	blr	x1
   3d5bc:	ldr	x0, [sp, #1872]
   3d5c0:	str	x0, [sp, #1856]
   3d5c4:	ldr	x0, [sp, #1856]
   3d5c8:	ldrb	w0, [x0]
   3d5cc:	and	w0, w0, #0x10
   3d5d0:	cmp	w0, #0x0
   3d5d4:	cset	w0, eq  // eq = none
   3d5d8:	and	w0, w0, #0xff
   3d5dc:	cmp	w0, #0x0
   3d5e0:	b.eq	3d5f8 <PyInit__decimal@@Base+0x25920>  // b.none
   3d5e4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d5e8:	add	x0, x0, #0x6f8
   3d5ec:	ldr	x1, [x0]
   3d5f0:	ldr	x0, [sp, #1872]
   3d5f4:	blr	x1
   3d5f8:	nop
   3d5fc:	add	x0, sp, #0x68
   3d600:	str	x0, [sp, #1896]
   3d604:	ldr	x0, [sp, #1896]
   3d608:	str	x0, [sp, #1888]
   3d60c:	ldr	x0, [sp, #1888]
   3d610:	ldrb	w0, [x0]
   3d614:	and	w0, w0, #0xe0
   3d618:	cmp	w0, #0x0
   3d61c:	cset	w0, eq  // eq = none
   3d620:	and	w0, w0, #0xff
   3d624:	cmp	w0, #0x0
   3d628:	b.eq	3d644 <PyInit__decimal@@Base+0x2596c>  // b.none
   3d62c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d630:	add	x0, x0, #0x6f8
   3d634:	ldr	x1, [x0]
   3d638:	ldr	x0, [sp, #1896]
   3d63c:	ldr	x0, [x0, #40]
   3d640:	blr	x1
   3d644:	ldr	x0, [sp, #1896]
   3d648:	str	x0, [sp, #1880]
   3d64c:	ldr	x0, [sp, #1880]
   3d650:	ldrb	w0, [x0]
   3d654:	and	w0, w0, #0x10
   3d658:	cmp	w0, #0x0
   3d65c:	cset	w0, eq  // eq = none
   3d660:	and	w0, w0, #0xff
   3d664:	cmp	w0, #0x0
   3d668:	b.eq	3d680 <PyInit__decimal@@Base+0x259a8>  // b.none
   3d66c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3d670:	add	x0, x0, #0x6f8
   3d674:	ldr	x1, [x0]
   3d678:	ldr	x0, [sp, #1896]
   3d67c:	blr	x1
   3d680:	nop
   3d684:	ldr	x1, [sp, #24]
   3d688:	add	x0, sp, #0x6f8
   3d68c:	ldp	x2, x3, [x1]
   3d690:	stp	x2, x3, [x0]
   3d694:	ldp	x2, x3, [x1, #16]
   3d698:	stp	x2, x3, [x0, #16]
   3d69c:	ldp	x2, x3, [x1, #32]
   3d6a0:	stp	x2, x3, [x0, #32]
   3d6a4:	mov	w0, #0x6                   	// #6
   3d6a8:	str	w0, [sp, #1820]
   3d6ac:	add	x0, sp, #0x6f8
   3d6b0:	ldr	x2, [sp, #16]
   3d6b4:	mov	x1, x0
   3d6b8:	ldr	x0, [sp, #40]
   3d6bc:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3d6c0:	b	3d700 <PyInit__decimal@@Base+0x25a28>
   3d6c4:	nop
   3d6c8:	b	3d6e8 <PyInit__decimal@@Base+0x25a10>
   3d6cc:	nop
   3d6d0:	b	3d6e8 <PyInit__decimal@@Base+0x25a10>
   3d6d4:	nop
   3d6d8:	b	3d6e8 <PyInit__decimal@@Base+0x25a10>
   3d6dc:	nop
   3d6e0:	b	3d6e8 <PyInit__decimal@@Base+0x25a10>
   3d6e4:	nop
   3d6e8:	ldr	x2, [sp, #16]
   3d6ec:	mov	w1, #0x200                 	// #512
   3d6f0:	ldr	x0, [sp, #40]
   3d6f4:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3d6f8:	b	3d4ec <PyInit__decimal@@Base+0x25814>
   3d6fc:	nop
   3d700:	ldp	x29, x30, [sp]
   3d704:	add	sp, sp, #0x800
   3d708:	ret
   3d70c:	stp	x29, x30, [sp, #-96]!
   3d710:	mov	x29, sp
   3d714:	str	d8, [sp, #16]
   3d718:	str	x0, [sp, #40]
   3d71c:	str	w1, [sp, #36]
   3d720:	ldr	x0, [sp, #40]
   3d724:	str	x0, [sp, #72]
   3d728:	ldr	x0, [sp, #72]
   3d72c:	str	x0, [sp, #64]
   3d730:	ldr	x0, [sp, #64]
   3d734:	ldrb	w0, [x0]
   3d738:	and	w0, w0, #0xe
   3d73c:	cmp	w0, #0x0
   3d740:	b.ne	3d77c <PyInit__decimal@@Base+0x25aa4>  // b.any
   3d744:	ldr	x0, [sp, #72]
   3d748:	str	x0, [sp, #56]
   3d74c:	ldr	x0, [sp, #56]
   3d750:	ldr	x1, [x0, #40]
   3d754:	ldr	x0, [sp, #56]
   3d758:	ldr	x0, [x0, #24]
   3d75c:	lsl	x0, x0, #3
   3d760:	sub	x0, x0, #0x8
   3d764:	add	x0, x1, x0
   3d768:	ldr	x0, [x0]
   3d76c:	cmp	x0, #0x0
   3d770:	b.ne	3d77c <PyInit__decimal@@Base+0x25aa4>  // b.any
   3d774:	mov	w0, #0x1                   	// #1
   3d778:	b	3d780 <PyInit__decimal@@Base+0x25aa8>
   3d77c:	mov	w0, #0x0                   	// #0
   3d780:	cmp	w0, #0x0
   3d784:	b.eq	3d790 <PyInit__decimal@@Base+0x25ab8>  // b.none
   3d788:	mov	x0, #0x1                   	// #1
   3d78c:	b	3d810 <PyInit__decimal@@Base+0x25b38>
   3d790:	ldr	x0, [sp, #40]
   3d794:	ldr	x1, [x0, #16]
   3d798:	ldr	x0, [sp, #40]
   3d79c:	ldr	x0, [x0, #8]
   3d7a0:	add	x0, x1, x0
   3d7a4:	str	x0, [sp, #88]
   3d7a8:	ldr	x1, [sp, #88]
   3d7ac:	mov	x0, #0xbcfe                	// #48382
   3d7b0:	movk	x0, #0xa84f, lsl #16
   3d7b4:	movk	x0, #0xa209, lsl #32
   3d7b8:	movk	x0, #0x9, lsl #48
   3d7bc:	cmp	x1, x0
   3d7c0:	b.ls	3d7cc <PyInit__decimal@@Base+0x25af4>  // b.plast
   3d7c4:	mov	x0, #0xffffffffffffffff    	// #-1
   3d7c8:	b	3d810 <PyInit__decimal@@Base+0x25b38>
   3d7cc:	ldr	d0, [sp, #88]
   3d7d0:	ucvtf	d8, d0
   3d7d4:	ldr	w0, [sp, #36]
   3d7d8:	ucvtf	d0, w0
   3d7dc:	bl	66c0 <log10@plt>
   3d7e0:	fdiv	d0, d8, d0
   3d7e4:	str	d0, [sp, #80]
   3d7e8:	ldr	d0, [sp, #80]
   3d7ec:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   3d7f0:	fmov	d1, x0
   3d7f4:	fcmpe	d0, d1
   3d7f8:	b.le	3d804 <PyInit__decimal@@Base+0x25b2c>
   3d7fc:	mov	x0, #0xffffffffffffffff    	// #-1
   3d800:	b	3d810 <PyInit__decimal@@Base+0x25b38>
   3d804:	ldr	d0, [sp, #80]
   3d808:	fcvtzu	x0, d0
   3d80c:	add	x0, x0, #0x1
   3d810:	ldr	d8, [sp, #16]
   3d814:	ldp	x29, x30, [sp], #96
   3d818:	ret
   3d81c:	stp	x29, x30, [sp, #-64]!
   3d820:	mov	x29, sp
   3d824:	str	d8, [sp, #16]
   3d828:	str	x0, [sp, #40]
   3d82c:	str	w1, [sp, #36]
   3d830:	ldr	x1, [sp, #40]
   3d834:	mov	x0, #0x20000000000000      	// #9007199254740992
   3d838:	cmp	x1, x0
   3d83c:	b.ls	3d848 <PyInit__decimal@@Base+0x25b70>  // b.plast
   3d840:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3d844:	b	3d898 <PyInit__decimal@@Base+0x25bc0>
   3d848:	ldr	d0, [sp, #40]
   3d84c:	ucvtf	d8, d0
   3d850:	ldr	w0, [sp, #36]
   3d854:	ucvtf	d0, w0
   3d858:	bl	66c0 <log10@plt>
   3d85c:	fmov	d1, d0
   3d860:	fmov	d0, #1.900000000000000000e+01
   3d864:	fdiv	d0, d1, d0
   3d868:	fmul	d0, d8, d0
   3d86c:	str	d0, [sp, #56]
   3d870:	ldr	d0, [sp, #56]
   3d874:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   3d878:	ldr	d1, [x0, #3272]
   3d87c:	fcmpe	d0, d1
   3d880:	b.lt	3d88c <PyInit__decimal@@Base+0x25bb4>  // b.tstop
   3d884:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3d888:	b	3d898 <PyInit__decimal@@Base+0x25bc0>
   3d88c:	ldr	d0, [sp, #56]
   3d890:	fcvtzs	x0, d0
   3d894:	add	x0, x0, #0x1
   3d898:	ldr	d8, [sp, #16]
   3d89c:	ldp	x29, x30, [sp], #64
   3d8a0:	ret
   3d8a4:	stp	x29, x30, [sp, #-48]!
   3d8a8:	mov	x29, sp
   3d8ac:	str	x0, [sp, #24]
   3d8b0:	str	x1, [sp, #16]
   3d8b4:	strb	wzr, [sp, #47]
   3d8b8:	ldr	x0, [sp, #24]
   3d8bc:	ldr	x0, [x0]
   3d8c0:	add	x1, sp, #0x2f
   3d8c4:	mov	x3, x1
   3d8c8:	mov	x2, #0x2                   	// #2
   3d8cc:	ldr	x1, [sp, #16]
   3d8d0:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   3d8d4:	mov	x1, x0
   3d8d8:	ldr	x0, [sp, #24]
   3d8dc:	str	x1, [x0]
   3d8e0:	ldrb	w0, [sp, #47]
   3d8e4:	cmp	w0, #0x0
   3d8e8:	cset	w0, eq  // eq = none
   3d8ec:	and	w0, w0, #0xff
   3d8f0:	ldp	x29, x30, [sp], #48
   3d8f4:	ret
   3d8f8:	stp	x29, x30, [sp, #-48]!
   3d8fc:	mov	x29, sp
   3d900:	str	x0, [sp, #24]
   3d904:	str	x1, [sp, #16]
   3d908:	strb	wzr, [sp, #47]
   3d90c:	ldr	x0, [sp, #24]
   3d910:	ldr	x0, [x0]
   3d914:	add	x1, sp, #0x2f
   3d918:	mov	x3, x1
   3d91c:	mov	x2, #0x4                   	// #4
   3d920:	ldr	x1, [sp, #16]
   3d924:	bl	23544 <PyInit__decimal@@Base+0xb86c>
   3d928:	mov	x1, x0
   3d92c:	ldr	x0, [sp, #24]
   3d930:	str	x1, [x0]
   3d934:	ldrb	w0, [sp, #47]
   3d938:	cmp	w0, #0x0
   3d93c:	cset	w0, eq  // eq = none
   3d940:	and	w0, w0, #0xff
   3d944:	ldp	x29, x30, [sp], #48
   3d948:	ret
   3d94c:	stp	x29, x30, [sp, #-80]!
   3d950:	mov	x29, sp
   3d954:	str	x0, [sp, #56]
   3d958:	str	x1, [sp, #48]
   3d95c:	str	x2, [sp, #40]
   3d960:	str	x3, [sp, #32]
   3d964:	str	x4, [sp, #24]
   3d968:	str	xzr, [sp, #72]
   3d96c:	ldr	x1, [sp, #72]
   3d970:	ldr	x0, [sp, #48]
   3d974:	cmp	x1, x0
   3d978:	b.cc	3d9b0 <PyInit__decimal@@Base+0x25cd8>  // b.lo, b.ul, b.last
   3d97c:	ldr	x0, [sp, #72]
   3d980:	add	x0, x0, #0x1
   3d984:	mov	x1, x0
   3d988:	ldr	x0, [sp, #56]
   3d98c:	bl	3d8a4 <PyInit__decimal@@Base+0x25bcc>
   3d990:	and	w0, w0, #0xff
   3d994:	cmp	w0, #0x0
   3d998:	b.ne	3d9a4 <PyInit__decimal@@Base+0x25ccc>  // b.any
   3d99c:	mov	x0, #0xffffffffffffffff    	// #-1
   3d9a0:	b	3da24 <PyInit__decimal@@Base+0x25d4c>
   3d9a4:	ldr	x0, [sp, #72]
   3d9a8:	add	x0, x0, #0x1
   3d9ac:	str	x0, [sp, #48]
   3d9b0:	ldr	x0, [sp, #24]
   3d9b4:	ldr	x3, [sp, #40]
   3d9b8:	mov	x2, x0
   3d9bc:	ldr	x1, [sp, #32]
   3d9c0:	ldr	x0, [sp, #32]
   3d9c4:	bl	1a654 <PyInit__decimal@@Base+0x297c>
   3d9c8:	mov	x3, x0
   3d9cc:	ldr	x0, [sp, #56]
   3d9d0:	ldr	x1, [x0]
   3d9d4:	ldr	x0, [sp, #72]
   3d9d8:	add	x2, x0, #0x1
   3d9dc:	str	x2, [sp, #72]
   3d9e0:	lsl	x0, x0, #1
   3d9e4:	add	x0, x1, x0
   3d9e8:	and	w1, w3, #0xffff
   3d9ec:	strh	w1, [x0]
   3d9f0:	ldr	x1, [sp, #24]
   3d9f4:	ldr	x0, [sp, #32]
   3d9f8:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   3d9fc:	str	x0, [sp, #24]
   3da00:	ldr	x0, [sp, #24]
   3da04:	lsl	x0, x0, #3
   3da08:	sub	x0, x0, #0x8
   3da0c:	ldr	x1, [sp, #32]
   3da10:	add	x0, x1, x0
   3da14:	ldr	x0, [x0]
   3da18:	cmp	x0, #0x0
   3da1c:	b.ne	3d96c <PyInit__decimal@@Base+0x25c94>  // b.any
   3da20:	ldr	x0, [sp, #72]
   3da24:	ldp	x29, x30, [sp], #80
   3da28:	ret
   3da2c:	stp	x29, x30, [sp, #-144]!
   3da30:	mov	x29, sp
   3da34:	str	x0, [sp, #56]
   3da38:	str	x1, [sp, #48]
   3da3c:	str	x2, [sp, #40]
   3da40:	str	x3, [sp, #32]
   3da44:	str	w4, [sp, #28]
   3da48:	str	x5, [sp, #16]
   3da4c:	str	xzr, [sp, #136]
   3da50:	ldr	x0, [sp, #32]
   3da54:	sub	x0, x0, #0x1
   3da58:	str	x0, [sp, #32]
   3da5c:	ldr	x0, [sp, #32]
   3da60:	lsl	x0, x0, #3
   3da64:	ldr	x1, [sp, #40]
   3da68:	add	x1, x1, x0
   3da6c:	ldr	x0, [sp, #56]
   3da70:	ldr	x2, [x0, #40]
   3da74:	ldr	x0, [sp, #136]
   3da78:	add	x3, x0, #0x1
   3da7c:	str	x3, [sp, #136]
   3da80:	lsl	x0, x0, #3
   3da84:	add	x0, x2, x0
   3da88:	ldr	x1, [x1]
   3da8c:	str	x1, [x0]
   3da90:	b	3dd18 <PyInit__decimal@@Base+0x26040>
   3da94:	ldr	x0, [sp, #56]
   3da98:	ldr	x4, [x0, #40]
   3da9c:	ldr	x0, [sp, #56]
   3daa0:	ldr	x0, [x0, #40]
   3daa4:	ldr	x1, [sp, #136]
   3daa8:	ldr	w2, [sp, #28]
   3daac:	mov	x3, x2
   3dab0:	mov	x2, x1
   3dab4:	mov	x1, x0
   3dab8:	mov	x0, x4
   3dabc:	bl	1b210 <PyInit__decimal@@Base+0x3538>
   3dac0:	str	x0, [sp, #128]
   3dac4:	ldr	x0, [sp, #128]
   3dac8:	cmp	x0, #0x0
   3dacc:	b.eq	3dbd4 <PyInit__decimal@@Base+0x25efc>  // b.none
   3dad0:	ldr	x1, [sp, #136]
   3dad4:	ldr	x0, [sp, #48]
   3dad8:	cmp	x1, x0
   3dadc:	b.lt	3dbb0 <PyInit__decimal@@Base+0x25ed8>  // b.tstop
   3dae0:	ldr	x0, [sp, #136]
   3dae4:	add	x0, x0, #0x1
   3dae8:	ldr	x1, [sp, #56]
   3daec:	str	x1, [sp, #120]
   3daf0:	str	x0, [sp, #112]
   3daf4:	ldr	x0, [sp, #16]
   3daf8:	str	x0, [sp, #104]
   3dafc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3db00:	add	x0, x0, #0x6d8
   3db04:	ldr	x0, [x0]
   3db08:	ldr	x2, [sp, #112]
   3db0c:	ldr	x1, [sp, #112]
   3db10:	cmp	x2, x0
   3db14:	csel	x0, x1, x0, ge  // ge = tcont
   3db18:	str	x0, [sp, #112]
   3db1c:	ldr	x0, [sp, #120]
   3db20:	ldr	x0, [x0, #32]
   3db24:	ldr	x1, [sp, #112]
   3db28:	cmp	x1, x0
   3db2c:	b.ne	3db38 <PyInit__decimal@@Base+0x25e60>  // b.any
   3db30:	mov	w0, #0x1                   	// #1
   3db34:	b	3db94 <PyInit__decimal@@Base+0x25ebc>
   3db38:	ldr	x0, [sp, #120]
   3db3c:	str	x0, [sp, #96]
   3db40:	ldr	x0, [sp, #96]
   3db44:	ldrb	w0, [x0]
   3db48:	and	w0, w0, #0x20
   3db4c:	cmp	w0, #0x0
   3db50:	b.eq	3db84 <PyInit__decimal@@Base+0x25eac>  // b.none
   3db54:	ldr	x0, [sp, #120]
   3db58:	ldr	x0, [x0, #32]
   3db5c:	ldr	x1, [sp, #112]
   3db60:	cmp	x1, x0
   3db64:	b.le	3db7c <PyInit__decimal@@Base+0x25ea4>
   3db68:	ldr	x2, [sp, #104]
   3db6c:	ldr	x1, [sp, #112]
   3db70:	ldr	x0, [sp, #120]
   3db74:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3db78:	b	3db94 <PyInit__decimal@@Base+0x25ebc>
   3db7c:	mov	w0, #0x1                   	// #1
   3db80:	b	3db94 <PyInit__decimal@@Base+0x25ebc>
   3db84:	ldr	x2, [sp, #104]
   3db88:	ldr	x1, [sp, #112]
   3db8c:	ldr	x0, [sp, #120]
   3db90:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3db94:	cmp	w0, #0x0
   3db98:	b.ne	3dba4 <PyInit__decimal@@Base+0x25ecc>  // b.any
   3db9c:	mov	x0, #0xffffffffffffffff    	// #-1
   3dba0:	b	3dd34 <PyInit__decimal@@Base+0x2605c>
   3dba4:	ldr	x0, [sp, #136]
   3dba8:	add	x0, x0, #0x1
   3dbac:	str	x0, [sp, #48]
   3dbb0:	ldr	x0, [sp, #56]
   3dbb4:	ldr	x1, [x0, #40]
   3dbb8:	ldr	x0, [sp, #136]
   3dbbc:	add	x2, x0, #0x1
   3dbc0:	str	x2, [sp, #136]
   3dbc4:	lsl	x0, x0, #3
   3dbc8:	add	x0, x1, x0
   3dbcc:	ldr	x1, [sp, #128]
   3dbd0:	str	x1, [x0]
   3dbd4:	ldr	x0, [sp, #56]
   3dbd8:	ldr	x3, [x0, #40]
   3dbdc:	ldr	x4, [sp, #136]
   3dbe0:	ldr	x0, [sp, #32]
   3dbe4:	lsl	x0, x0, #3
   3dbe8:	ldr	x1, [sp, #40]
   3dbec:	add	x0, x1, x0
   3dbf0:	ldr	x0, [x0]
   3dbf4:	mov	x2, x0
   3dbf8:	mov	x1, x4
   3dbfc:	mov	x0, x3
   3dc00:	bl	19e94 <PyInit__decimal@@Base+0x21bc>
   3dc04:	str	x0, [sp, #128]
   3dc08:	ldr	x0, [sp, #128]
   3dc0c:	cmp	x0, #0x0
   3dc10:	b.eq	3dd18 <PyInit__decimal@@Base+0x26040>  // b.none
   3dc14:	ldr	x1, [sp, #136]
   3dc18:	ldr	x0, [sp, #48]
   3dc1c:	cmp	x1, x0
   3dc20:	b.lt	3dcf4 <PyInit__decimal@@Base+0x2601c>  // b.tstop
   3dc24:	ldr	x0, [sp, #136]
   3dc28:	add	x0, x0, #0x1
   3dc2c:	ldr	x1, [sp, #56]
   3dc30:	str	x1, [sp, #88]
   3dc34:	str	x0, [sp, #80]
   3dc38:	ldr	x0, [sp, #16]
   3dc3c:	str	x0, [sp, #72]
   3dc40:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3dc44:	add	x0, x0, #0x6d8
   3dc48:	ldr	x0, [x0]
   3dc4c:	ldr	x2, [sp, #80]
   3dc50:	ldr	x1, [sp, #80]
   3dc54:	cmp	x2, x0
   3dc58:	csel	x0, x1, x0, ge  // ge = tcont
   3dc5c:	str	x0, [sp, #80]
   3dc60:	ldr	x0, [sp, #88]
   3dc64:	ldr	x0, [x0, #32]
   3dc68:	ldr	x1, [sp, #80]
   3dc6c:	cmp	x1, x0
   3dc70:	b.ne	3dc7c <PyInit__decimal@@Base+0x25fa4>  // b.any
   3dc74:	mov	w0, #0x1                   	// #1
   3dc78:	b	3dcd8 <PyInit__decimal@@Base+0x26000>
   3dc7c:	ldr	x0, [sp, #88]
   3dc80:	str	x0, [sp, #64]
   3dc84:	ldr	x0, [sp, #64]
   3dc88:	ldrb	w0, [x0]
   3dc8c:	and	w0, w0, #0x20
   3dc90:	cmp	w0, #0x0
   3dc94:	b.eq	3dcc8 <PyInit__decimal@@Base+0x25ff0>  // b.none
   3dc98:	ldr	x0, [sp, #88]
   3dc9c:	ldr	x0, [x0, #32]
   3dca0:	ldr	x1, [sp, #80]
   3dca4:	cmp	x1, x0
   3dca8:	b.le	3dcc0 <PyInit__decimal@@Base+0x25fe8>
   3dcac:	ldr	x2, [sp, #72]
   3dcb0:	ldr	x1, [sp, #80]
   3dcb4:	ldr	x0, [sp, #88]
   3dcb8:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3dcbc:	b	3dcd8 <PyInit__decimal@@Base+0x26000>
   3dcc0:	mov	w0, #0x1                   	// #1
   3dcc4:	b	3dcd8 <PyInit__decimal@@Base+0x26000>
   3dcc8:	ldr	x2, [sp, #72]
   3dccc:	ldr	x1, [sp, #80]
   3dcd0:	ldr	x0, [sp, #88]
   3dcd4:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3dcd8:	cmp	w0, #0x0
   3dcdc:	b.ne	3dce8 <PyInit__decimal@@Base+0x26010>  // b.any
   3dce0:	mov	x0, #0xffffffffffffffff    	// #-1
   3dce4:	b	3dd34 <PyInit__decimal@@Base+0x2605c>
   3dce8:	ldr	x0, [sp, #136]
   3dcec:	add	x0, x0, #0x1
   3dcf0:	str	x0, [sp, #48]
   3dcf4:	ldr	x0, [sp, #56]
   3dcf8:	ldr	x1, [x0, #40]
   3dcfc:	ldr	x0, [sp, #136]
   3dd00:	add	x2, x0, #0x1
   3dd04:	str	x2, [sp, #136]
   3dd08:	lsl	x0, x0, #3
   3dd0c:	add	x0, x1, x0
   3dd10:	ldr	x1, [sp, #128]
   3dd14:	str	x1, [x0]
   3dd18:	ldr	x0, [sp, #32]
   3dd1c:	sub	x0, x0, #0x1
   3dd20:	str	x0, [sp, #32]
   3dd24:	ldr	x0, [sp, #32]
   3dd28:	cmn	x0, #0x1
   3dd2c:	b.ne	3da94 <PyInit__decimal@@Base+0x25dbc>  // b.any
   3dd30:	ldr	x0, [sp, #136]
   3dd34:	ldp	x29, x30, [sp], #144
   3dd38:	ret
   3dd3c:	stp	x29, x30, [sp, #-80]!
   3dd40:	mov	x29, sp
   3dd44:	str	x0, [sp, #56]
   3dd48:	str	x1, [sp, #48]
   3dd4c:	str	w2, [sp, #44]
   3dd50:	str	x3, [sp, #32]
   3dd54:	str	x4, [sp, #24]
   3dd58:	str	x5, [sp, #16]
   3dd5c:	str	xzr, [sp, #72]
   3dd60:	ldr	x1, [sp, #72]
   3dd64:	ldr	x0, [sp, #48]
   3dd68:	cmp	x1, x0
   3dd6c:	b.cc	3dda4 <PyInit__decimal@@Base+0x260cc>  // b.lo, b.ul, b.last
   3dd70:	ldr	x0, [sp, #72]
   3dd74:	add	x0, x0, #0x1
   3dd78:	mov	x1, x0
   3dd7c:	ldr	x0, [sp, #56]
   3dd80:	bl	3d8f8 <PyInit__decimal@@Base+0x25c20>
   3dd84:	and	w0, w0, #0xff
   3dd88:	cmp	w0, #0x0
   3dd8c:	b.ne	3dd98 <PyInit__decimal@@Base+0x260c0>  // b.any
   3dd90:	mov	x0, #0xffffffffffffffff    	// #-1
   3dd94:	b	3de20 <PyInit__decimal@@Base+0x26148>
   3dd98:	ldr	x0, [sp, #72]
   3dd9c:	add	x0, x0, #0x1
   3dda0:	str	x0, [sp, #48]
   3dda4:	ldr	x0, [sp, #24]
   3dda8:	ldr	w1, [sp, #44]
   3ddac:	ldr	x4, [sp, #16]
   3ddb0:	mov	x3, x1
   3ddb4:	mov	x2, x0
   3ddb8:	ldr	x1, [sp, #32]
   3ddbc:	ldr	x0, [sp, #32]
   3ddc0:	bl	1b390 <PyInit__decimal@@Base+0x36b8>
   3ddc4:	mov	x3, x0
   3ddc8:	ldr	x0, [sp, #56]
   3ddcc:	ldr	x1, [x0]
   3ddd0:	ldr	x0, [sp, #72]
   3ddd4:	add	x2, x0, #0x1
   3ddd8:	str	x2, [sp, #72]
   3dddc:	lsl	x0, x0, #2
   3dde0:	add	x0, x1, x0
   3dde4:	mov	w1, w3
   3dde8:	str	w1, [x0]
   3ddec:	ldr	x1, [sp, #24]
   3ddf0:	ldr	x0, [sp, #32]
   3ddf4:	bl	26e4c <PyInit__decimal@@Base+0xf174>
   3ddf8:	str	x0, [sp, #24]
   3ddfc:	ldr	x0, [sp, #24]
   3de00:	lsl	x0, x0, #3
   3de04:	sub	x0, x0, #0x8
   3de08:	ldr	x1, [sp, #32]
   3de0c:	add	x0, x1, x0
   3de10:	ldr	x0, [x0]
   3de14:	cmp	x0, #0x0
   3de18:	b.ne	3dd60 <PyInit__decimal@@Base+0x26088>  // b.any
   3de1c:	ldr	x0, [sp, #72]
   3de20:	ldp	x29, x30, [sp], #80
   3de24:	ret
   3de28:	stp	x29, x30, [sp, #-160]!
   3de2c:	mov	x29, sp
   3de30:	str	x0, [sp, #72]
   3de34:	str	x1, [sp, #64]
   3de38:	str	x2, [sp, #56]
   3de3c:	str	x3, [sp, #48]
   3de40:	str	x4, [sp, #40]
   3de44:	str	x5, [sp, #32]
   3de48:	str	x6, [sp, #24]
   3de4c:	str	xzr, [sp, #152]
   3de50:	ldr	x0, [sp, #40]
   3de54:	sub	x0, x0, #0x1
   3de58:	str	x0, [sp, #40]
   3de5c:	ldr	x0, [sp, #40]
   3de60:	lsl	x0, x0, #2
   3de64:	ldr	x1, [sp, #48]
   3de68:	add	x0, x1, x0
   3de6c:	ldr	w3, [x0]
   3de70:	ldr	x0, [sp, #72]
   3de74:	ldr	x1, [x0, #40]
   3de78:	ldr	x0, [sp, #152]
   3de7c:	add	x2, x0, #0x1
   3de80:	str	x2, [sp, #152]
   3de84:	lsl	x0, x0, #3
   3de88:	add	x0, x1, x0
   3de8c:	mov	w1, w3
   3de90:	str	x1, [x0]
   3de94:	b	3e124 <PyInit__decimal@@Base+0x2644c>
   3de98:	ldr	x0, [sp, #72]
   3de9c:	ldr	x5, [x0, #40]
   3dea0:	ldr	x0, [sp, #72]
   3dea4:	ldr	x0, [x0, #40]
   3dea8:	ldr	x1, [sp, #152]
   3deac:	ldr	x4, [sp, #56]
   3deb0:	ldr	x3, [sp, #32]
   3deb4:	mov	x2, x1
   3deb8:	mov	x1, x0
   3debc:	mov	x0, x5
   3dec0:	bl	1b2cc <PyInit__decimal@@Base+0x35f4>
   3dec4:	str	x0, [sp, #144]
   3dec8:	ldr	x0, [sp, #144]
   3decc:	cmp	x0, #0x0
   3ded0:	b.eq	3dfd8 <PyInit__decimal@@Base+0x26300>  // b.none
   3ded4:	ldr	x1, [sp, #152]
   3ded8:	ldr	x0, [sp, #64]
   3dedc:	cmp	x1, x0
   3dee0:	b.lt	3dfb4 <PyInit__decimal@@Base+0x262dc>  // b.tstop
   3dee4:	ldr	x0, [sp, #152]
   3dee8:	add	x0, x0, #0x1
   3deec:	ldr	x1, [sp, #72]
   3def0:	str	x1, [sp, #136]
   3def4:	str	x0, [sp, #128]
   3def8:	ldr	x0, [sp, #24]
   3defc:	str	x0, [sp, #120]
   3df00:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3df04:	add	x0, x0, #0x6d8
   3df08:	ldr	x0, [x0]
   3df0c:	ldr	x2, [sp, #128]
   3df10:	ldr	x1, [sp, #128]
   3df14:	cmp	x2, x0
   3df18:	csel	x0, x1, x0, ge  // ge = tcont
   3df1c:	str	x0, [sp, #128]
   3df20:	ldr	x0, [sp, #136]
   3df24:	ldr	x0, [x0, #32]
   3df28:	ldr	x1, [sp, #128]
   3df2c:	cmp	x1, x0
   3df30:	b.ne	3df3c <PyInit__decimal@@Base+0x26264>  // b.any
   3df34:	mov	w0, #0x1                   	// #1
   3df38:	b	3df98 <PyInit__decimal@@Base+0x262c0>
   3df3c:	ldr	x0, [sp, #136]
   3df40:	str	x0, [sp, #112]
   3df44:	ldr	x0, [sp, #112]
   3df48:	ldrb	w0, [x0]
   3df4c:	and	w0, w0, #0x20
   3df50:	cmp	w0, #0x0
   3df54:	b.eq	3df88 <PyInit__decimal@@Base+0x262b0>  // b.none
   3df58:	ldr	x0, [sp, #136]
   3df5c:	ldr	x0, [x0, #32]
   3df60:	ldr	x1, [sp, #128]
   3df64:	cmp	x1, x0
   3df68:	b.le	3df80 <PyInit__decimal@@Base+0x262a8>
   3df6c:	ldr	x2, [sp, #120]
   3df70:	ldr	x1, [sp, #128]
   3df74:	ldr	x0, [sp, #136]
   3df78:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3df7c:	b	3df98 <PyInit__decimal@@Base+0x262c0>
   3df80:	mov	w0, #0x1                   	// #1
   3df84:	b	3df98 <PyInit__decimal@@Base+0x262c0>
   3df88:	ldr	x2, [sp, #120]
   3df8c:	ldr	x1, [sp, #128]
   3df90:	ldr	x0, [sp, #136]
   3df94:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3df98:	cmp	w0, #0x0
   3df9c:	b.ne	3dfa8 <PyInit__decimal@@Base+0x262d0>  // b.any
   3dfa0:	mov	x0, #0xffffffffffffffff    	// #-1
   3dfa4:	b	3e140 <PyInit__decimal@@Base+0x26468>
   3dfa8:	ldr	x0, [sp, #152]
   3dfac:	add	x0, x0, #0x1
   3dfb0:	str	x0, [sp, #64]
   3dfb4:	ldr	x0, [sp, #72]
   3dfb8:	ldr	x1, [x0, #40]
   3dfbc:	ldr	x0, [sp, #152]
   3dfc0:	add	x2, x0, #0x1
   3dfc4:	str	x2, [sp, #152]
   3dfc8:	lsl	x0, x0, #3
   3dfcc:	add	x0, x1, x0
   3dfd0:	ldr	x1, [sp, #144]
   3dfd4:	str	x1, [x0]
   3dfd8:	ldr	x0, [sp, #72]
   3dfdc:	ldr	x4, [x0, #40]
   3dfe0:	ldr	x5, [sp, #152]
   3dfe4:	ldr	x0, [sp, #40]
   3dfe8:	lsl	x0, x0, #2
   3dfec:	ldr	x1, [sp, #48]
   3dff0:	add	x0, x1, x0
   3dff4:	ldr	w0, [x0]
   3dff8:	mov	w0, w0
   3dffc:	ldr	x3, [sp, #56]
   3e000:	mov	x2, x0
   3e004:	mov	x1, x5
   3e008:	mov	x0, x4
   3e00c:	bl	1b0e0 <PyInit__decimal@@Base+0x3408>
   3e010:	str	x0, [sp, #144]
   3e014:	ldr	x0, [sp, #144]
   3e018:	cmp	x0, #0x0
   3e01c:	b.eq	3e124 <PyInit__decimal@@Base+0x2644c>  // b.none
   3e020:	ldr	x1, [sp, #152]
   3e024:	ldr	x0, [sp, #64]
   3e028:	cmp	x1, x0
   3e02c:	b.lt	3e100 <PyInit__decimal@@Base+0x26428>  // b.tstop
   3e030:	ldr	x0, [sp, #152]
   3e034:	add	x0, x0, #0x1
   3e038:	ldr	x1, [sp, #72]
   3e03c:	str	x1, [sp, #104]
   3e040:	str	x0, [sp, #96]
   3e044:	ldr	x0, [sp, #24]
   3e048:	str	x0, [sp, #88]
   3e04c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e050:	add	x0, x0, #0x6d8
   3e054:	ldr	x0, [x0]
   3e058:	ldr	x2, [sp, #96]
   3e05c:	ldr	x1, [sp, #96]
   3e060:	cmp	x2, x0
   3e064:	csel	x0, x1, x0, ge  // ge = tcont
   3e068:	str	x0, [sp, #96]
   3e06c:	ldr	x0, [sp, #104]
   3e070:	ldr	x0, [x0, #32]
   3e074:	ldr	x1, [sp, #96]
   3e078:	cmp	x1, x0
   3e07c:	b.ne	3e088 <PyInit__decimal@@Base+0x263b0>  // b.any
   3e080:	mov	w0, #0x1                   	// #1
   3e084:	b	3e0e4 <PyInit__decimal@@Base+0x2640c>
   3e088:	ldr	x0, [sp, #104]
   3e08c:	str	x0, [sp, #80]
   3e090:	ldr	x0, [sp, #80]
   3e094:	ldrb	w0, [x0]
   3e098:	and	w0, w0, #0x20
   3e09c:	cmp	w0, #0x0
   3e0a0:	b.eq	3e0d4 <PyInit__decimal@@Base+0x263fc>  // b.none
   3e0a4:	ldr	x0, [sp, #104]
   3e0a8:	ldr	x0, [x0, #32]
   3e0ac:	ldr	x1, [sp, #96]
   3e0b0:	cmp	x1, x0
   3e0b4:	b.le	3e0cc <PyInit__decimal@@Base+0x263f4>
   3e0b8:	ldr	x2, [sp, #88]
   3e0bc:	ldr	x1, [sp, #96]
   3e0c0:	ldr	x0, [sp, #104]
   3e0c4:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3e0c8:	b	3e0e4 <PyInit__decimal@@Base+0x2640c>
   3e0cc:	mov	w0, #0x1                   	// #1
   3e0d0:	b	3e0e4 <PyInit__decimal@@Base+0x2640c>
   3e0d4:	ldr	x2, [sp, #88]
   3e0d8:	ldr	x1, [sp, #96]
   3e0dc:	ldr	x0, [sp, #104]
   3e0e0:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3e0e4:	cmp	w0, #0x0
   3e0e8:	b.ne	3e0f4 <PyInit__decimal@@Base+0x2641c>  // b.any
   3e0ec:	mov	x0, #0xffffffffffffffff    	// #-1
   3e0f0:	b	3e140 <PyInit__decimal@@Base+0x26468>
   3e0f4:	ldr	x0, [sp, #152]
   3e0f8:	add	x0, x0, #0x1
   3e0fc:	str	x0, [sp, #64]
   3e100:	ldr	x0, [sp, #72]
   3e104:	ldr	x1, [x0, #40]
   3e108:	ldr	x0, [sp, #152]
   3e10c:	add	x2, x0, #0x1
   3e110:	str	x2, [sp, #152]
   3e114:	lsl	x0, x0, #3
   3e118:	add	x0, x1, x0
   3e11c:	ldr	x1, [sp, #144]
   3e120:	str	x1, [x0]
   3e124:	ldr	x0, [sp, #40]
   3e128:	sub	x0, x0, #0x1
   3e12c:	str	x0, [sp, #40]
   3e130:	ldr	x0, [sp, #40]
   3e134:	cmn	x0, #0x1
   3e138:	b.ne	3de98 <PyInit__decimal@@Base+0x261c0>  // b.any
   3e13c:	ldr	x0, [sp, #152]
   3e140:	ldp	x29, x30, [sp], #160
   3e144:	ret
   3e148:	sub	sp, sp, #0x2c0
   3e14c:	stp	x29, x30, [sp]
   3e150:	mov	x29, sp
   3e154:	str	x0, [sp, #56]
   3e158:	str	x1, [sp, #48]
   3e15c:	str	w2, [sp, #44]
   3e160:	str	x3, [sp, #32]
   3e164:	str	x4, [sp, #24]
   3e168:	mov	w0, #0x30                  	// #48
   3e16c:	strb	w0, [sp, #72]
   3e170:	str	xzr, [sp, #80]
   3e174:	str	xzr, [sp, #88]
   3e178:	str	xzr, [sp, #96]
   3e17c:	mov	x0, #0x40                  	// #64
   3e180:	str	x0, [sp, #104]
   3e184:	add	x0, sp, #0x78
   3e188:	str	x0, [sp, #112]
   3e18c:	str	wzr, [sp, #700]
   3e190:	ldr	x0, [sp, #32]
   3e194:	str	x0, [sp, #680]
   3e198:	ldr	x0, [sp, #680]
   3e19c:	ldrb	w0, [x0]
   3e1a0:	and	w0, w0, #0xe
   3e1a4:	cmp	w0, #0x0
   3e1a8:	b.ne	3e1bc <PyInit__decimal@@Base+0x264e4>  // b.any
   3e1ac:	ldr	x0, [sp, #32]
   3e1b0:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   3e1b4:	cmp	w0, #0x0
   3e1b8:	b.ne	3e1d8 <PyInit__decimal@@Base+0x26500>  // b.any
   3e1bc:	ldr	x0, [sp, #24]
   3e1c0:	ldr	w0, [x0]
   3e1c4:	orr	w1, w0, #0x100
   3e1c8:	ldr	x0, [sp, #24]
   3e1cc:	str	w1, [x0]
   3e1d0:	mov	x0, #0xffffffffffffffff    	// #-1
   3e1d4:	b	3e454 <PyInit__decimal@@Base+0x2677c>
   3e1d8:	ldr	x0, [sp, #56]
   3e1dc:	ldr	x0, [x0]
   3e1e0:	cmp	x0, #0x0
   3e1e4:	b.ne	3e250 <PyInit__decimal@@Base+0x26578>  // b.any
   3e1e8:	ldr	w1, [sp, #44]
   3e1ec:	ldr	x0, [sp, #32]
   3e1f0:	bl	3d70c <PyInit__decimal@@Base+0x25a34>
   3e1f4:	str	x0, [sp, #48]
   3e1f8:	ldr	x0, [sp, #48]
   3e1fc:	cmn	x0, #0x1
   3e200:	b.ne	3e220 <PyInit__decimal@@Base+0x26548>  // b.any
   3e204:	ldr	x0, [sp, #24]
   3e208:	ldr	w0, [x0]
   3e20c:	orr	w1, w0, #0x100
   3e210:	ldr	x0, [sp, #24]
   3e214:	str	w1, [x0]
   3e218:	mov	x0, #0xffffffffffffffff    	// #-1
   3e21c:	b	3e454 <PyInit__decimal@@Base+0x2677c>
   3e220:	mov	x1, #0x2                   	// #2
   3e224:	ldr	x0, [sp, #48]
   3e228:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   3e22c:	mov	x1, x0
   3e230:	ldr	x0, [sp, #56]
   3e234:	str	x1, [x0]
   3e238:	ldr	x0, [sp, #56]
   3e23c:	ldr	x0, [x0]
   3e240:	cmp	x0, #0x0
   3e244:	b.eq	3e3f4 <PyInit__decimal@@Base+0x2671c>  // b.none
   3e248:	mov	w0, #0x1                   	// #1
   3e24c:	str	w0, [sp, #700]
   3e250:	ldr	x0, [sp, #32]
   3e254:	str	x0, [sp, #672]
   3e258:	ldr	x0, [sp, #672]
   3e25c:	str	x0, [sp, #664]
   3e260:	ldr	x0, [sp, #664]
   3e264:	ldrb	w0, [x0]
   3e268:	and	w0, w0, #0xe
   3e26c:	cmp	w0, #0x0
   3e270:	b.ne	3e2ac <PyInit__decimal@@Base+0x265d4>  // b.any
   3e274:	ldr	x0, [sp, #672]
   3e278:	str	x0, [sp, #656]
   3e27c:	ldr	x0, [sp, #656]
   3e280:	ldr	x1, [x0, #40]
   3e284:	ldr	x0, [sp, #656]
   3e288:	ldr	x0, [x0, #24]
   3e28c:	lsl	x0, x0, #3
   3e290:	sub	x0, x0, #0x8
   3e294:	add	x0, x1, x0
   3e298:	ldr	x0, [x0]
   3e29c:	cmp	x0, #0x0
   3e2a0:	b.ne	3e2ac <PyInit__decimal@@Base+0x265d4>  // b.any
   3e2a4:	mov	w0, #0x1                   	// #1
   3e2a8:	b	3e2b0 <PyInit__decimal@@Base+0x265d8>
   3e2ac:	mov	w0, #0x0                   	// #0
   3e2b0:	cmp	w0, #0x0
   3e2b4:	b.eq	3e2cc <PyInit__decimal@@Base+0x265f4>  // b.none
   3e2b8:	ldr	x0, [sp, #56]
   3e2bc:	ldr	x0, [x0]
   3e2c0:	strh	wzr, [x0]
   3e2c4:	mov	x0, #0x1                   	// #1
   3e2c8:	b	3e454 <PyInit__decimal@@Base+0x2677c>
   3e2cc:	ldr	x0, [sp, #32]
   3e2d0:	ldr	x0, [x0, #8]
   3e2d4:	cmp	x0, #0x0
   3e2d8:	b.lt	3e304 <PyInit__decimal@@Base+0x2662c>  // b.tstop
   3e2dc:	ldr	x0, [sp, #32]
   3e2e0:	ldr	x1, [x0, #8]
   3e2e4:	add	x0, sp, #0x48
   3e2e8:	ldr	x3, [sp, #24]
   3e2ec:	mov	x2, x1
   3e2f0:	ldr	x1, [sp, #32]
   3e2f4:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3e2f8:	cmp	w0, #0x0
   3e2fc:	b.ne	3e32c <PyInit__decimal@@Base+0x26654>  // b.any
   3e300:	b	3e408 <PyInit__decimal@@Base+0x26730>
   3e304:	ldr	x0, [sp, #32]
   3e308:	ldr	x0, [x0, #8]
   3e30c:	neg	x1, x0
   3e310:	add	x0, sp, #0x48
   3e314:	ldr	x3, [sp, #24]
   3e318:	mov	x2, x1
   3e31c:	ldr	x1, [sp, #32]
   3e320:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3e324:	cmn	x0, #0x1
   3e328:	b.eq	3e3fc <PyInit__decimal@@Base+0x26724>  // b.none
   3e32c:	ldr	w0, [sp, #44]
   3e330:	ldr	x1, [sp, #112]
   3e334:	ldr	x2, [sp, #96]
   3e338:	mov	x4, x2
   3e33c:	mov	x3, x1
   3e340:	mov	x2, x0
   3e344:	ldr	x1, [sp, #48]
   3e348:	ldr	x0, [sp, #56]
   3e34c:	bl	3d94c <PyInit__decimal@@Base+0x25c74>
   3e350:	str	x0, [sp, #688]
   3e354:	ldr	x0, [sp, #688]
   3e358:	cmn	x0, #0x1
   3e35c:	b.eq	3e404 <PyInit__decimal@@Base+0x2672c>  // b.none
   3e360:	nop
   3e364:	add	x0, sp, #0x48
   3e368:	str	x0, [sp, #648]
   3e36c:	ldr	x0, [sp, #648]
   3e370:	str	x0, [sp, #640]
   3e374:	ldr	x0, [sp, #640]
   3e378:	ldrb	w0, [x0]
   3e37c:	and	w0, w0, #0xe0
   3e380:	cmp	w0, #0x0
   3e384:	cset	w0, eq  // eq = none
   3e388:	and	w0, w0, #0xff
   3e38c:	cmp	w0, #0x0
   3e390:	b.eq	3e3ac <PyInit__decimal@@Base+0x266d4>  // b.none
   3e394:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e398:	add	x0, x0, #0x6f8
   3e39c:	ldr	x1, [x0]
   3e3a0:	ldr	x0, [sp, #648]
   3e3a4:	ldr	x0, [x0, #40]
   3e3a8:	blr	x1
   3e3ac:	ldr	x0, [sp, #648]
   3e3b0:	str	x0, [sp, #632]
   3e3b4:	ldr	x0, [sp, #632]
   3e3b8:	ldrb	w0, [x0]
   3e3bc:	and	w0, w0, #0x10
   3e3c0:	cmp	w0, #0x0
   3e3c4:	cset	w0, eq  // eq = none
   3e3c8:	and	w0, w0, #0xff
   3e3cc:	cmp	w0, #0x0
   3e3d0:	b.eq	3e3e8 <PyInit__decimal@@Base+0x26710>  // b.none
   3e3d4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e3d8:	add	x0, x0, #0x6f8
   3e3dc:	ldr	x1, [x0]
   3e3e0:	ldr	x0, [sp, #648]
   3e3e4:	blr	x1
   3e3e8:	nop
   3e3ec:	ldr	x0, [sp, #688]
   3e3f0:	b	3e454 <PyInit__decimal@@Base+0x2677c>
   3e3f4:	nop
   3e3f8:	b	3e408 <PyInit__decimal@@Base+0x26730>
   3e3fc:	nop
   3e400:	b	3e408 <PyInit__decimal@@Base+0x26730>
   3e404:	nop
   3e408:	ldr	w0, [sp, #700]
   3e40c:	cmp	w0, #0x0
   3e410:	b.eq	3e434 <PyInit__decimal@@Base+0x2675c>  // b.none
   3e414:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e418:	add	x0, x0, #0x6f8
   3e41c:	ldr	x1, [x0]
   3e420:	ldr	x0, [sp, #56]
   3e424:	ldr	x0, [x0]
   3e428:	blr	x1
   3e42c:	ldr	x0, [sp, #56]
   3e430:	str	xzr, [x0]
   3e434:	mov	x0, #0xffffffffffffffff    	// #-1
   3e438:	str	x0, [sp, #688]
   3e43c:	ldr	x0, [sp, #24]
   3e440:	ldr	w0, [x0]
   3e444:	orr	w1, w0, #0x200
   3e448:	ldr	x0, [sp, #24]
   3e44c:	str	w1, [x0]
   3e450:	b	3e364 <PyInit__decimal@@Base+0x2668c>
   3e454:	ldp	x29, x30, [sp]
   3e458:	add	sp, sp, #0x2c0
   3e45c:	ret
   3e460:	sub	sp, sp, #0x2c0
   3e464:	stp	x29, x30, [sp]
   3e468:	mov	x29, sp
   3e46c:	str	x0, [sp, #56]
   3e470:	str	x1, [sp, #48]
   3e474:	str	w2, [sp, #44]
   3e478:	str	x3, [sp, #32]
   3e47c:	str	x4, [sp, #24]
   3e480:	mov	w0, #0x30                  	// #48
   3e484:	strb	w0, [sp, #72]
   3e488:	str	xzr, [sp, #80]
   3e48c:	str	xzr, [sp, #88]
   3e490:	str	xzr, [sp, #96]
   3e494:	mov	x0, #0x40                  	// #64
   3e498:	str	x0, [sp, #104]
   3e49c:	add	x0, sp, #0x78
   3e4a0:	str	x0, [sp, #112]
   3e4a4:	str	wzr, [sp, #700]
   3e4a8:	ldr	x0, [sp, #32]
   3e4ac:	str	x0, [sp, #680]
   3e4b0:	ldr	x0, [sp, #680]
   3e4b4:	ldrb	w0, [x0]
   3e4b8:	and	w0, w0, #0xe
   3e4bc:	cmp	w0, #0x0
   3e4c0:	b.ne	3e4d4 <PyInit__decimal@@Base+0x267fc>  // b.any
   3e4c4:	ldr	x0, [sp, #32]
   3e4c8:	bl	26f94 <PyInit__decimal@@Base+0xf2bc>
   3e4cc:	cmp	w0, #0x0
   3e4d0:	b.ne	3e4f0 <PyInit__decimal@@Base+0x26818>  // b.any
   3e4d4:	ldr	x0, [sp, #24]
   3e4d8:	ldr	w0, [x0]
   3e4dc:	orr	w1, w0, #0x100
   3e4e0:	ldr	x0, [sp, #24]
   3e4e4:	str	w1, [x0]
   3e4e8:	mov	x0, #0xffffffffffffffff    	// #-1
   3e4ec:	b	3e774 <PyInit__decimal@@Base+0x26a9c>
   3e4f0:	ldr	x0, [sp, #56]
   3e4f4:	ldr	x0, [x0]
   3e4f8:	cmp	x0, #0x0
   3e4fc:	b.ne	3e568 <PyInit__decimal@@Base+0x26890>  // b.any
   3e500:	ldr	w1, [sp, #44]
   3e504:	ldr	x0, [sp, #32]
   3e508:	bl	3d70c <PyInit__decimal@@Base+0x25a34>
   3e50c:	str	x0, [sp, #48]
   3e510:	ldr	x0, [sp, #48]
   3e514:	cmn	x0, #0x1
   3e518:	b.ne	3e538 <PyInit__decimal@@Base+0x26860>  // b.any
   3e51c:	ldr	x0, [sp, #24]
   3e520:	ldr	w0, [x0]
   3e524:	orr	w1, w0, #0x100
   3e528:	ldr	x0, [sp, #24]
   3e52c:	str	w1, [x0]
   3e530:	mov	x0, #0xffffffffffffffff    	// #-1
   3e534:	b	3e774 <PyInit__decimal@@Base+0x26a9c>
   3e538:	mov	x1, #0x4                   	// #4
   3e53c:	ldr	x0, [sp, #48]
   3e540:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   3e544:	mov	x1, x0
   3e548:	ldr	x0, [sp, #56]
   3e54c:	str	x1, [x0]
   3e550:	ldr	x0, [sp, #56]
   3e554:	ldr	x0, [x0]
   3e558:	cmp	x0, #0x0
   3e55c:	b.eq	3e714 <PyInit__decimal@@Base+0x26a3c>  // b.none
   3e560:	mov	w0, #0x1                   	// #1
   3e564:	str	w0, [sp, #700]
   3e568:	ldr	x0, [sp, #32]
   3e56c:	str	x0, [sp, #672]
   3e570:	ldr	x0, [sp, #672]
   3e574:	str	x0, [sp, #664]
   3e578:	ldr	x0, [sp, #664]
   3e57c:	ldrb	w0, [x0]
   3e580:	and	w0, w0, #0xe
   3e584:	cmp	w0, #0x0
   3e588:	b.ne	3e5c4 <PyInit__decimal@@Base+0x268ec>  // b.any
   3e58c:	ldr	x0, [sp, #672]
   3e590:	str	x0, [sp, #656]
   3e594:	ldr	x0, [sp, #656]
   3e598:	ldr	x1, [x0, #40]
   3e59c:	ldr	x0, [sp, #656]
   3e5a0:	ldr	x0, [x0, #24]
   3e5a4:	lsl	x0, x0, #3
   3e5a8:	sub	x0, x0, #0x8
   3e5ac:	add	x0, x1, x0
   3e5b0:	ldr	x0, [x0]
   3e5b4:	cmp	x0, #0x0
   3e5b8:	b.ne	3e5c4 <PyInit__decimal@@Base+0x268ec>  // b.any
   3e5bc:	mov	w0, #0x1                   	// #1
   3e5c0:	b	3e5c8 <PyInit__decimal@@Base+0x268f0>
   3e5c4:	mov	w0, #0x0                   	// #0
   3e5c8:	cmp	w0, #0x0
   3e5cc:	b.eq	3e5e4 <PyInit__decimal@@Base+0x2690c>  // b.none
   3e5d0:	ldr	x0, [sp, #56]
   3e5d4:	ldr	x0, [x0]
   3e5d8:	str	wzr, [x0]
   3e5dc:	mov	x0, #0x1                   	// #1
   3e5e0:	b	3e774 <PyInit__decimal@@Base+0x26a9c>
   3e5e4:	ldr	x0, [sp, #32]
   3e5e8:	ldr	x0, [x0, #8]
   3e5ec:	cmp	x0, #0x0
   3e5f0:	b.lt	3e61c <PyInit__decimal@@Base+0x26944>  // b.tstop
   3e5f4:	ldr	x0, [sp, #32]
   3e5f8:	ldr	x1, [x0, #8]
   3e5fc:	add	x0, sp, #0x48
   3e600:	ldr	x3, [sp, #24]
   3e604:	mov	x2, x1
   3e608:	ldr	x1, [sp, #32]
   3e60c:	bl	2ae84 <PyInit__decimal@@Base+0x131ac>
   3e610:	cmp	w0, #0x0
   3e614:	b.ne	3e644 <PyInit__decimal@@Base+0x2696c>  // b.any
   3e618:	b	3e728 <PyInit__decimal@@Base+0x26a50>
   3e61c:	ldr	x0, [sp, #32]
   3e620:	ldr	x0, [x0, #8]
   3e624:	neg	x1, x0
   3e628:	add	x0, sp, #0x48
   3e62c:	ldr	x3, [sp, #24]
   3e630:	mov	x2, x1
   3e634:	ldr	x1, [sp, #32]
   3e638:	bl	2b84c <PyInit__decimal@@Base+0x13b74>
   3e63c:	cmn	x0, #0x1
   3e640:	b.eq	3e71c <PyInit__decimal@@Base+0x26a44>  // b.none
   3e644:	ldr	x0, [sp, #112]
   3e648:	ldr	x1, [sp, #96]
   3e64c:	mov	x5, #0x89e80000            	// #2313682944
   3e650:	movk	x5, #0x2304, lsl #32
   3e654:	movk	x5, #0x8ac7, lsl #48
   3e658:	mov	x4, x1
   3e65c:	mov	x3, x0
   3e660:	ldr	w2, [sp, #44]
   3e664:	ldr	x1, [sp, #48]
   3e668:	ldr	x0, [sp, #56]
   3e66c:	bl	3dd3c <PyInit__decimal@@Base+0x26064>
   3e670:	str	x0, [sp, #688]
   3e674:	ldr	x0, [sp, #688]
   3e678:	cmn	x0, #0x1
   3e67c:	b.eq	3e724 <PyInit__decimal@@Base+0x26a4c>  // b.none
   3e680:	nop
   3e684:	add	x0, sp, #0x48
   3e688:	str	x0, [sp, #648]
   3e68c:	ldr	x0, [sp, #648]
   3e690:	str	x0, [sp, #640]
   3e694:	ldr	x0, [sp, #640]
   3e698:	ldrb	w0, [x0]
   3e69c:	and	w0, w0, #0xe0
   3e6a0:	cmp	w0, #0x0
   3e6a4:	cset	w0, eq  // eq = none
   3e6a8:	and	w0, w0, #0xff
   3e6ac:	cmp	w0, #0x0
   3e6b0:	b.eq	3e6cc <PyInit__decimal@@Base+0x269f4>  // b.none
   3e6b4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e6b8:	add	x0, x0, #0x6f8
   3e6bc:	ldr	x1, [x0]
   3e6c0:	ldr	x0, [sp, #648]
   3e6c4:	ldr	x0, [x0, #40]
   3e6c8:	blr	x1
   3e6cc:	ldr	x0, [sp, #648]
   3e6d0:	str	x0, [sp, #632]
   3e6d4:	ldr	x0, [sp, #632]
   3e6d8:	ldrb	w0, [x0]
   3e6dc:	and	w0, w0, #0x10
   3e6e0:	cmp	w0, #0x0
   3e6e4:	cset	w0, eq  // eq = none
   3e6e8:	and	w0, w0, #0xff
   3e6ec:	cmp	w0, #0x0
   3e6f0:	b.eq	3e708 <PyInit__decimal@@Base+0x26a30>  // b.none
   3e6f4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e6f8:	add	x0, x0, #0x6f8
   3e6fc:	ldr	x1, [x0]
   3e700:	ldr	x0, [sp, #648]
   3e704:	blr	x1
   3e708:	nop
   3e70c:	ldr	x0, [sp, #688]
   3e710:	b	3e774 <PyInit__decimal@@Base+0x26a9c>
   3e714:	nop
   3e718:	b	3e728 <PyInit__decimal@@Base+0x26a50>
   3e71c:	nop
   3e720:	b	3e728 <PyInit__decimal@@Base+0x26a50>
   3e724:	nop
   3e728:	ldr	w0, [sp, #700]
   3e72c:	cmp	w0, #0x0
   3e730:	b.eq	3e754 <PyInit__decimal@@Base+0x26a7c>  // b.none
   3e734:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e738:	add	x0, x0, #0x6f8
   3e73c:	ldr	x1, [x0]
   3e740:	ldr	x0, [sp, #56]
   3e744:	ldr	x0, [x0]
   3e748:	blr	x1
   3e74c:	ldr	x0, [sp, #56]
   3e750:	str	xzr, [x0]
   3e754:	mov	x0, #0xffffffffffffffff    	// #-1
   3e758:	str	x0, [sp, #688]
   3e75c:	ldr	x0, [sp, #24]
   3e760:	ldr	w0, [x0]
   3e764:	orr	w1, w0, #0x200
   3e768:	ldr	x0, [sp, #24]
   3e76c:	str	w1, [x0]
   3e770:	b	3e684 <PyInit__decimal@@Base+0x269ac>
   3e774:	ldp	x29, x30, [sp]
   3e778:	add	sp, sp, #0x2c0
   3e77c:	ret
   3e780:	stp	x29, x30, [sp, #-176]!
   3e784:	mov	x29, sp
   3e788:	str	x0, [sp, #56]
   3e78c:	str	x1, [sp, #48]
   3e790:	str	x2, [sp, #40]
   3e794:	strb	w3, [sp, #39]
   3e798:	str	w4, [sp, #32]
   3e79c:	str	x5, [sp, #24]
   3e7a0:	str	x6, [sp, #16]
   3e7a4:	ldr	w1, [sp, #32]
   3e7a8:	ldr	x0, [sp, #40]
   3e7ac:	bl	3d81c <PyInit__decimal@@Base+0x25b44>
   3e7b0:	str	x0, [sp, #160]
   3e7b4:	ldr	x1, [sp, #160]
   3e7b8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3e7bc:	cmp	x1, x0
   3e7c0:	b.ne	3e7d8 <PyInit__decimal@@Base+0x26b00>  // b.any
   3e7c4:	ldr	x2, [sp, #16]
   3e7c8:	mov	w1, #0x100                 	// #256
   3e7cc:	ldr	x0, [sp, #56]
   3e7d0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3e7d4:	b	3ea88 <PyInit__decimal@@Base+0x26db0>
   3e7d8:	mov	x1, #0x8                   	// #8
   3e7dc:	ldr	x0, [sp, #40]
   3e7e0:	bl	23494 <PyInit__decimal@@Base+0xb7bc>
   3e7e4:	str	x0, [sp, #152]
   3e7e8:	ldr	x0, [sp, #152]
   3e7ec:	cmp	x0, #0x0
   3e7f0:	b.ne	3e808 <PyInit__decimal@@Base+0x26b30>  // b.any
   3e7f4:	ldr	x2, [sp, #16]
   3e7f8:	mov	w1, #0x200                 	// #512
   3e7fc:	ldr	x0, [sp, #56]
   3e800:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3e804:	b	3ea88 <PyInit__decimal@@Base+0x26db0>
   3e808:	str	xzr, [sp, #168]
   3e80c:	b	3e848 <PyInit__decimal@@Base+0x26b70>
   3e810:	ldr	x0, [sp, #168]
   3e814:	lsl	x0, x0, #1
   3e818:	ldr	x1, [sp, #48]
   3e81c:	add	x0, x1, x0
   3e820:	ldrh	w2, [x0]
   3e824:	ldr	x0, [sp, #168]
   3e828:	lsl	x0, x0, #3
   3e82c:	ldr	x1, [sp, #152]
   3e830:	add	x0, x1, x0
   3e834:	and	x1, x2, #0xffff
   3e838:	str	x1, [x0]
   3e83c:	ldr	x0, [sp, #168]
   3e840:	add	x0, x0, #0x1
   3e844:	str	x0, [sp, #168]
   3e848:	ldr	x1, [sp, #168]
   3e84c:	ldr	x0, [sp, #40]
   3e850:	cmp	x1, x0
   3e854:	b.cc	3e810 <PyInit__decimal@@Base+0x26b38>  // b.lo, b.ul, b.last
   3e858:	ldr	x0, [sp, #56]
   3e85c:	str	x0, [sp, #144]
   3e860:	ldr	x0, [sp, #160]
   3e864:	str	x0, [sp, #136]
   3e868:	ldr	x0, [sp, #16]
   3e86c:	str	x0, [sp, #128]
   3e870:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e874:	add	x0, x0, #0x6d8
   3e878:	ldr	x0, [x0]
   3e87c:	ldr	x2, [sp, #136]
   3e880:	ldr	x1, [sp, #136]
   3e884:	cmp	x2, x0
   3e888:	csel	x0, x1, x0, ge  // ge = tcont
   3e88c:	str	x0, [sp, #136]
   3e890:	ldr	x0, [sp, #144]
   3e894:	ldr	x0, [x0, #32]
   3e898:	ldr	x1, [sp, #136]
   3e89c:	cmp	x1, x0
   3e8a0:	b.ne	3e8ac <PyInit__decimal@@Base+0x26bd4>  // b.any
   3e8a4:	mov	w0, #0x1                   	// #1
   3e8a8:	b	3e908 <PyInit__decimal@@Base+0x26c30>
   3e8ac:	ldr	x0, [sp, #144]
   3e8b0:	str	x0, [sp, #120]
   3e8b4:	ldr	x0, [sp, #120]
   3e8b8:	ldrb	w0, [x0]
   3e8bc:	and	w0, w0, #0x20
   3e8c0:	cmp	w0, #0x0
   3e8c4:	b.eq	3e8f8 <PyInit__decimal@@Base+0x26c20>  // b.none
   3e8c8:	ldr	x0, [sp, #144]
   3e8cc:	ldr	x0, [x0, #32]
   3e8d0:	ldr	x1, [sp, #136]
   3e8d4:	cmp	x1, x0
   3e8d8:	b.le	3e8f0 <PyInit__decimal@@Base+0x26c18>
   3e8dc:	ldr	x2, [sp, #128]
   3e8e0:	ldr	x1, [sp, #136]
   3e8e4:	ldr	x0, [sp, #144]
   3e8e8:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3e8ec:	b	3e908 <PyInit__decimal@@Base+0x26c30>
   3e8f0:	mov	w0, #0x1                   	// #1
   3e8f4:	b	3e908 <PyInit__decimal@@Base+0x26c30>
   3e8f8:	ldr	x2, [sp, #128]
   3e8fc:	ldr	x1, [sp, #136]
   3e900:	ldr	x0, [sp, #144]
   3e904:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3e908:	cmp	w0, #0x0
   3e90c:	b.eq	3ea68 <PyInit__decimal@@Base+0x26d90>  // b.none
   3e910:	ldr	x5, [sp, #16]
   3e914:	ldr	w4, [sp, #32]
   3e918:	ldr	x3, [sp, #40]
   3e91c:	ldr	x2, [sp, #152]
   3e920:	ldr	x1, [sp, #160]
   3e924:	ldr	x0, [sp, #56]
   3e928:	bl	3da2c <PyInit__decimal@@Base+0x25d54>
   3e92c:	str	x0, [sp, #168]
   3e930:	ldr	x0, [sp, #168]
   3e934:	cmn	x0, #0x1
   3e938:	b.eq	3ea70 <PyInit__decimal@@Base+0x26d98>  // b.none
   3e93c:	ldr	x0, [sp, #56]
   3e940:	str	x0, [sp, #80]
   3e944:	ldrb	w0, [sp, #39]
   3e948:	strb	w0, [sp, #79]
   3e94c:	ldr	x0, [sp, #80]
   3e950:	ldrb	w0, [x0]
   3e954:	and	w0, w0, #0xfffffff0
   3e958:	and	w1, w0, #0xff
   3e95c:	ldr	x0, [sp, #80]
   3e960:	strb	w1, [x0]
   3e964:	ldr	x0, [sp, #80]
   3e968:	ldrb	w1, [x0]
   3e96c:	ldrb	w0, [sp, #79]
   3e970:	orr	w0, w1, w0
   3e974:	and	w1, w0, #0xff
   3e978:	ldr	x0, [sp, #80]
   3e97c:	strb	w1, [x0]
   3e980:	nop
   3e984:	ldr	x0, [sp, #56]
   3e988:	str	xzr, [x0, #8]
   3e98c:	ldr	x1, [sp, #168]
   3e990:	ldr	x0, [sp, #56]
   3e994:	str	x1, [x0, #24]
   3e998:	ldr	x0, [sp, #56]
   3e99c:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   3e9a0:	ldr	x0, [sp, #56]
   3e9a4:	ldr	x0, [x0, #24]
   3e9a8:	ldr	x1, [sp, #56]
   3e9ac:	str	x1, [sp, #112]
   3e9b0:	str	x0, [sp, #104]
   3e9b4:	ldr	x0, [sp, #16]
   3e9b8:	str	x0, [sp, #96]
   3e9bc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3e9c0:	add	x0, x0, #0x6d8
   3e9c4:	ldr	x0, [x0]
   3e9c8:	ldr	x2, [sp, #104]
   3e9cc:	ldr	x1, [sp, #104]
   3e9d0:	cmp	x2, x0
   3e9d4:	csel	x0, x1, x0, ge  // ge = tcont
   3e9d8:	str	x0, [sp, #104]
   3e9dc:	ldr	x0, [sp, #112]
   3e9e0:	ldr	x0, [x0, #32]
   3e9e4:	ldr	x1, [sp, #104]
   3e9e8:	cmp	x1, x0
   3e9ec:	b.eq	3ea48 <PyInit__decimal@@Base+0x26d70>  // b.none
   3e9f0:	ldr	x0, [sp, #112]
   3e9f4:	str	x0, [sp, #88]
   3e9f8:	ldr	x0, [sp, #88]
   3e9fc:	ldrb	w0, [x0]
   3ea00:	and	w0, w0, #0x20
   3ea04:	cmp	w0, #0x0
   3ea08:	b.eq	3ea34 <PyInit__decimal@@Base+0x26d5c>  // b.none
   3ea0c:	ldr	x0, [sp, #112]
   3ea10:	ldr	x0, [x0, #32]
   3ea14:	ldr	x1, [sp, #104]
   3ea18:	cmp	x1, x0
   3ea1c:	b.le	3ea50 <PyInit__decimal@@Base+0x26d78>
   3ea20:	ldr	x2, [sp, #96]
   3ea24:	ldr	x1, [sp, #104]
   3ea28:	ldr	x0, [sp, #112]
   3ea2c:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3ea30:	b	3ea54 <PyInit__decimal@@Base+0x26d7c>
   3ea34:	ldr	x2, [sp, #96]
   3ea38:	ldr	x1, [sp, #104]
   3ea3c:	ldr	x0, [sp, #112]
   3ea40:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3ea44:	b	3ea54 <PyInit__decimal@@Base+0x26d7c>
   3ea48:	nop
   3ea4c:	b	3ea54 <PyInit__decimal@@Base+0x26d7c>
   3ea50:	nop
   3ea54:	ldr	x2, [sp, #16]
   3ea58:	ldr	x1, [sp, #24]
   3ea5c:	ldr	x0, [sp, #56]
   3ea60:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3ea64:	b	3ea74 <PyInit__decimal@@Base+0x26d9c>
   3ea68:	nop
   3ea6c:	b	3ea74 <PyInit__decimal@@Base+0x26d9c>
   3ea70:	nop
   3ea74:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3ea78:	add	x0, x0, #0x6f8
   3ea7c:	ldr	x1, [x0]
   3ea80:	ldr	x0, [sp, #152]
   3ea84:	blr	x1
   3ea88:	ldp	x29, x30, [sp], #176
   3ea8c:	ret
   3ea90:	stp	x29, x30, [sp, #-160]!
   3ea94:	mov	x29, sp
   3ea98:	str	x0, [sp, #56]
   3ea9c:	str	x1, [sp, #48]
   3eaa0:	str	x2, [sp, #40]
   3eaa4:	strb	w3, [sp, #39]
   3eaa8:	str	w4, [sp, #32]
   3eaac:	str	x5, [sp, #24]
   3eab0:	str	x6, [sp, #16]
   3eab4:	ldr	w1, [sp, #32]
   3eab8:	ldr	x0, [sp, #40]
   3eabc:	bl	3d81c <PyInit__decimal@@Base+0x25b44>
   3eac0:	str	x0, [sp, #152]
   3eac4:	ldr	x1, [sp, #152]
   3eac8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3eacc:	cmp	x1, x0
   3ead0:	b.ne	3eae8 <PyInit__decimal@@Base+0x26e10>  // b.any
   3ead4:	ldr	x2, [sp, #16]
   3ead8:	mov	w1, #0x100                 	// #256
   3eadc:	ldr	x0, [sp, #56]
   3eae0:	bl	27b68 <PyInit__decimal@@Base+0xfe90>
   3eae4:	b	3ed14 <PyInit__decimal@@Base+0x2703c>
   3eae8:	ldr	x0, [sp, #56]
   3eaec:	str	x0, [sp, #136]
   3eaf0:	ldr	x0, [sp, #152]
   3eaf4:	str	x0, [sp, #128]
   3eaf8:	ldr	x0, [sp, #16]
   3eafc:	str	x0, [sp, #120]
   3eb00:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3eb04:	add	x0, x0, #0x6d8
   3eb08:	ldr	x0, [x0]
   3eb0c:	ldr	x2, [sp, #128]
   3eb10:	ldr	x1, [sp, #128]
   3eb14:	cmp	x2, x0
   3eb18:	csel	x0, x1, x0, ge  // ge = tcont
   3eb1c:	str	x0, [sp, #128]
   3eb20:	ldr	x0, [sp, #136]
   3eb24:	ldr	x0, [x0, #32]
   3eb28:	ldr	x1, [sp, #128]
   3eb2c:	cmp	x1, x0
   3eb30:	b.ne	3eb3c <PyInit__decimal@@Base+0x26e64>  // b.any
   3eb34:	mov	w0, #0x1                   	// #1
   3eb38:	b	3eb98 <PyInit__decimal@@Base+0x26ec0>
   3eb3c:	ldr	x0, [sp, #136]
   3eb40:	str	x0, [sp, #112]
   3eb44:	ldr	x0, [sp, #112]
   3eb48:	ldrb	w0, [x0]
   3eb4c:	and	w0, w0, #0x20
   3eb50:	cmp	w0, #0x0
   3eb54:	b.eq	3eb88 <PyInit__decimal@@Base+0x26eb0>  // b.none
   3eb58:	ldr	x0, [sp, #136]
   3eb5c:	ldr	x0, [x0, #32]
   3eb60:	ldr	x1, [sp, #128]
   3eb64:	cmp	x1, x0
   3eb68:	b.le	3eb80 <PyInit__decimal@@Base+0x26ea8>
   3eb6c:	ldr	x2, [sp, #120]
   3eb70:	ldr	x1, [sp, #128]
   3eb74:	ldr	x0, [sp, #136]
   3eb78:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3eb7c:	b	3eb98 <PyInit__decimal@@Base+0x26ec0>
   3eb80:	mov	w0, #0x1                   	// #1
   3eb84:	b	3eb98 <PyInit__decimal@@Base+0x26ec0>
   3eb88:	ldr	x2, [sp, #120]
   3eb8c:	ldr	x1, [sp, #128]
   3eb90:	ldr	x0, [sp, #136]
   3eb94:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3eb98:	cmp	w0, #0x0
   3eb9c:	b.eq	3ed08 <PyInit__decimal@@Base+0x27030>  // b.none
   3eba0:	ldr	w0, [sp, #32]
   3eba4:	ldr	x6, [sp, #16]
   3eba8:	mov	x5, x0
   3ebac:	ldr	x4, [sp, #40]
   3ebb0:	ldr	x3, [sp, #48]
   3ebb4:	mov	x2, #0x89e80000            	// #2313682944
   3ebb8:	movk	x2, #0x2304, lsl #32
   3ebbc:	movk	x2, #0x8ac7, lsl #48
   3ebc0:	ldr	x1, [sp, #152]
   3ebc4:	ldr	x0, [sp, #56]
   3ebc8:	bl	3de28 <PyInit__decimal@@Base+0x26150>
   3ebcc:	str	x0, [sp, #144]
   3ebd0:	ldr	x0, [sp, #144]
   3ebd4:	cmn	x0, #0x1
   3ebd8:	b.eq	3ed10 <PyInit__decimal@@Base+0x27038>  // b.none
   3ebdc:	ldr	x0, [sp, #56]
   3ebe0:	str	x0, [sp, #72]
   3ebe4:	ldrb	w0, [sp, #39]
   3ebe8:	strb	w0, [sp, #71]
   3ebec:	ldr	x0, [sp, #72]
   3ebf0:	ldrb	w0, [x0]
   3ebf4:	and	w0, w0, #0xfffffff0
   3ebf8:	and	w1, w0, #0xff
   3ebfc:	ldr	x0, [sp, #72]
   3ec00:	strb	w1, [x0]
   3ec04:	ldr	x0, [sp, #72]
   3ec08:	ldrb	w1, [x0]
   3ec0c:	ldrb	w0, [sp, #71]
   3ec10:	orr	w0, w1, w0
   3ec14:	and	w1, w0, #0xff
   3ec18:	ldr	x0, [sp, #72]
   3ec1c:	strb	w1, [x0]
   3ec20:	nop
   3ec24:	ldr	x0, [sp, #56]
   3ec28:	str	xzr, [x0, #8]
   3ec2c:	ldr	x1, [sp, #144]
   3ec30:	ldr	x0, [sp, #56]
   3ec34:	str	x1, [x0, #24]
   3ec38:	ldr	x0, [sp, #56]
   3ec3c:	bl	25d58 <PyInit__decimal@@Base+0xe080>
   3ec40:	ldr	x0, [sp, #56]
   3ec44:	ldr	x0, [x0, #24]
   3ec48:	ldr	x1, [sp, #56]
   3ec4c:	str	x1, [sp, #104]
   3ec50:	str	x0, [sp, #96]
   3ec54:	ldr	x0, [sp, #16]
   3ec58:	str	x0, [sp, #88]
   3ec5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3ec60:	add	x0, x0, #0x6d8
   3ec64:	ldr	x0, [x0]
   3ec68:	ldr	x2, [sp, #96]
   3ec6c:	ldr	x1, [sp, #96]
   3ec70:	cmp	x2, x0
   3ec74:	csel	x0, x1, x0, ge  // ge = tcont
   3ec78:	str	x0, [sp, #96]
   3ec7c:	ldr	x0, [sp, #104]
   3ec80:	ldr	x0, [x0, #32]
   3ec84:	ldr	x1, [sp, #96]
   3ec88:	cmp	x1, x0
   3ec8c:	b.eq	3ece8 <PyInit__decimal@@Base+0x27010>  // b.none
   3ec90:	ldr	x0, [sp, #104]
   3ec94:	str	x0, [sp, #80]
   3ec98:	ldr	x0, [sp, #80]
   3ec9c:	ldrb	w0, [x0]
   3eca0:	and	w0, w0, #0x20
   3eca4:	cmp	w0, #0x0
   3eca8:	b.eq	3ecd4 <PyInit__decimal@@Base+0x26ffc>  // b.none
   3ecac:	ldr	x0, [sp, #104]
   3ecb0:	ldr	x0, [x0, #32]
   3ecb4:	ldr	x1, [sp, #96]
   3ecb8:	cmp	x1, x0
   3ecbc:	b.le	3ecf0 <PyInit__decimal@@Base+0x27018>
   3ecc0:	ldr	x2, [sp, #88]
   3ecc4:	ldr	x1, [sp, #96]
   3ecc8:	ldr	x0, [sp, #104]
   3eccc:	bl	23788 <PyInit__decimal@@Base+0xbab0>
   3ecd0:	b	3ecf4 <PyInit__decimal@@Base+0x2701c>
   3ecd4:	ldr	x2, [sp, #88]
   3ecd8:	ldr	x1, [sp, #96]
   3ecdc:	ldr	x0, [sp, #104]
   3ece0:	bl	2393c <PyInit__decimal@@Base+0xbc64>
   3ece4:	b	3ecf4 <PyInit__decimal@@Base+0x2701c>
   3ece8:	nop
   3ecec:	b	3ecf4 <PyInit__decimal@@Base+0x2701c>
   3ecf0:	nop
   3ecf4:	ldr	x2, [sp, #16]
   3ecf8:	ldr	x1, [sp, #24]
   3ecfc:	ldr	x0, [sp, #56]
   3ed00:	bl	29700 <PyInit__decimal@@Base+0x11a28>
   3ed04:	b	3ed14 <PyInit__decimal@@Base+0x2703c>
   3ed08:	nop
   3ed0c:	b	3ed14 <PyInit__decimal@@Base+0x2703c>
   3ed10:	nop
   3ed14:	ldp	x29, x30, [sp], #160
   3ed18:	ret
   3ed1c:	sub	sp, sp, #0x30
   3ed20:	str	x0, [sp, #24]
   3ed24:	str	x1, [sp, #16]
   3ed28:	str	x2, [sp, #8]
   3ed2c:	str	x3, [sp]
   3ed30:	ldr	x0, [sp, #8]
   3ed34:	mov	x6, x0
   3ed38:	mov	x7, #0x0                   	// #0
   3ed3c:	ldr	x0, [sp]
   3ed40:	mov	x4, x0
   3ed44:	mov	x5, #0x0                   	// #0
   3ed48:	mul	x1, x6, x4
   3ed4c:	umulh	x0, x6, x4
   3ed50:	madd	x0, x7, x4, x0
   3ed54:	madd	x0, x6, x5, x0
   3ed58:	mov	x8, x1
   3ed5c:	mov	x9, x0
   3ed60:	stp	x8, x9, [sp, #32]
   3ed64:	ldr	x0, [sp, #40]
   3ed68:	mov	x10, x0
   3ed6c:	mov	x11, #0x0                   	// #0
   3ed70:	mov	x1, x10
   3ed74:	ldr	x0, [sp, #24]
   3ed78:	str	x1, [x0]
   3ed7c:	ldr	x1, [sp, #32]
   3ed80:	ldr	x0, [sp, #16]
   3ed84:	str	x1, [x0]
   3ed88:	nop
   3ed8c:	add	sp, sp, #0x30
   3ed90:	ret
   3ed94:	stp	x29, x30, [sp, #-80]!
   3ed98:	mov	x29, sp
   3ed9c:	str	x0, [sp, #40]
   3eda0:	str	x1, [sp, #32]
   3eda4:	str	x2, [sp, #24]
   3eda8:	add	x1, sp, #0x30
   3edac:	add	x0, sp, #0x38
   3edb0:	ldr	x3, [sp, #32]
   3edb4:	ldr	x2, [sp, #40]
   3edb8:	bl	3ed1c <PyInit__decimal@@Base+0x27044>
   3edbc:	ldr	x0, [sp, #24]
   3edc0:	and	x0, x0, #0x100000000
   3edc4:	cmp	x0, #0x0
   3edc8:	b.eq	3ef00 <PyInit__decimal@@Base+0x27228>  // b.none
   3edcc:	ldr	x0, [sp, #56]
   3edd0:	str	x0, [sp, #72]
   3edd4:	ldr	x0, [sp, #72]
   3edd8:	str	x0, [sp, #64]
   3eddc:	ldr	x0, [sp, #56]
   3ede0:	lsr	x0, x0, #32
   3ede4:	str	x0, [sp, #56]
   3ede8:	ldr	x1, [sp, #48]
   3edec:	ldr	x0, [sp, #64]
   3edf0:	sub	x0, x1, x0
   3edf4:	str	x0, [sp, #64]
   3edf8:	ldr	x0, [sp, #48]
   3edfc:	ldr	x1, [sp, #64]
   3ee00:	cmp	x1, x0
   3ee04:	b.ls	3ee14 <PyInit__decimal@@Base+0x2713c>  // b.plast
   3ee08:	ldr	x0, [sp, #56]
   3ee0c:	sub	x0, x0, #0x1
   3ee10:	str	x0, [sp, #56]
   3ee14:	ldr	x0, [sp, #72]
   3ee18:	lsl	x0, x0, #32
   3ee1c:	str	x0, [sp, #72]
   3ee20:	ldr	x1, [sp, #72]
   3ee24:	ldr	x0, [sp, #64]
   3ee28:	add	x0, x1, x0
   3ee2c:	str	x0, [sp, #48]
   3ee30:	ldr	x0, [sp, #48]
   3ee34:	ldr	x1, [sp, #72]
   3ee38:	cmp	x1, x0
   3ee3c:	b.ls	3ee4c <PyInit__decimal@@Base+0x27174>  // b.plast
   3ee40:	ldr	x0, [sp, #56]
   3ee44:	add	x0, x0, #0x1
   3ee48:	str	x0, [sp, #56]
   3ee4c:	ldr	x0, [sp, #56]
   3ee50:	str	x0, [sp, #72]
   3ee54:	ldr	x0, [sp, #72]
   3ee58:	str	x0, [sp, #64]
   3ee5c:	ldr	x0, [sp, #56]
   3ee60:	lsr	x0, x0, #32
   3ee64:	str	x0, [sp, #56]
   3ee68:	ldr	x1, [sp, #48]
   3ee6c:	ldr	x0, [sp, #64]
   3ee70:	sub	x0, x1, x0
   3ee74:	str	x0, [sp, #64]
   3ee78:	ldr	x0, [sp, #48]
   3ee7c:	ldr	x1, [sp, #64]
   3ee80:	cmp	x1, x0
   3ee84:	b.ls	3ee94 <PyInit__decimal@@Base+0x271bc>  // b.plast
   3ee88:	ldr	x0, [sp, #56]
   3ee8c:	sub	x0, x0, #0x1
   3ee90:	str	x0, [sp, #56]
   3ee94:	ldr	x0, [sp, #72]
   3ee98:	lsl	x0, x0, #32
   3ee9c:	str	x0, [sp, #72]
   3eea0:	ldr	x1, [sp, #72]
   3eea4:	ldr	x0, [sp, #64]
   3eea8:	add	x0, x1, x0
   3eeac:	str	x0, [sp, #48]
   3eeb0:	ldr	x0, [sp, #48]
   3eeb4:	ldr	x1, [sp, #72]
   3eeb8:	cmp	x1, x0
   3eebc:	b.ls	3eecc <PyInit__decimal@@Base+0x271f4>  // b.plast
   3eec0:	ldr	x0, [sp, #56]
   3eec4:	add	x0, x0, #0x1
   3eec8:	str	x0, [sp, #56]
   3eecc:	ldr	x0, [sp, #56]
   3eed0:	cmp	x0, #0x0
   3eed4:	b.ne	3eee8 <PyInit__decimal@@Base+0x27210>  // b.any
   3eed8:	ldr	x0, [sp, #48]
   3eedc:	ldr	x1, [sp, #24]
   3eee0:	cmp	x1, x0
   3eee4:	b.hi	3eef8 <PyInit__decimal@@Base+0x27220>  // b.pmore
   3eee8:	ldr	x1, [sp, #48]
   3eeec:	ldr	x0, [sp, #24]
   3eef0:	sub	x0, x1, x0
   3eef4:	b	3f274 <PyInit__decimal@@Base+0x2759c>
   3eef8:	ldr	x0, [sp, #48]
   3eefc:	b	3f274 <PyInit__decimal@@Base+0x2759c>
   3ef00:	ldr	x0, [sp, #24]
   3ef04:	and	x0, x0, #0x400000000
   3ef08:	cmp	x0, #0x0
   3ef0c:	b.eq	3f0c4 <PyInit__decimal@@Base+0x273ec>  // b.none
   3ef10:	ldr	x0, [sp, #56]
   3ef14:	str	x0, [sp, #72]
   3ef18:	ldr	x0, [sp, #72]
   3ef1c:	str	x0, [sp, #64]
   3ef20:	ldr	x0, [sp, #56]
   3ef24:	lsr	x0, x0, #30
   3ef28:	str	x0, [sp, #56]
   3ef2c:	ldr	x1, [sp, #48]
   3ef30:	ldr	x0, [sp, #64]
   3ef34:	sub	x0, x1, x0
   3ef38:	str	x0, [sp, #64]
   3ef3c:	ldr	x0, [sp, #48]
   3ef40:	ldr	x1, [sp, #64]
   3ef44:	cmp	x1, x0
   3ef48:	b.ls	3ef58 <PyInit__decimal@@Base+0x27280>  // b.plast
   3ef4c:	ldr	x0, [sp, #56]
   3ef50:	sub	x0, x0, #0x1
   3ef54:	str	x0, [sp, #56]
   3ef58:	ldr	x0, [sp, #72]
   3ef5c:	lsl	x0, x0, #34
   3ef60:	str	x0, [sp, #72]
   3ef64:	ldr	x1, [sp, #72]
   3ef68:	ldr	x0, [sp, #64]
   3ef6c:	add	x0, x1, x0
   3ef70:	str	x0, [sp, #48]
   3ef74:	ldr	x0, [sp, #48]
   3ef78:	ldr	x1, [sp, #72]
   3ef7c:	cmp	x1, x0
   3ef80:	b.ls	3ef90 <PyInit__decimal@@Base+0x272b8>  // b.plast
   3ef84:	ldr	x0, [sp, #56]
   3ef88:	add	x0, x0, #0x1
   3ef8c:	str	x0, [sp, #56]
   3ef90:	ldr	x0, [sp, #56]
   3ef94:	str	x0, [sp, #72]
   3ef98:	ldr	x0, [sp, #72]
   3ef9c:	str	x0, [sp, #64]
   3efa0:	ldr	x0, [sp, #56]
   3efa4:	lsr	x0, x0, #30
   3efa8:	str	x0, [sp, #56]
   3efac:	ldr	x1, [sp, #48]
   3efb0:	ldr	x0, [sp, #64]
   3efb4:	sub	x0, x1, x0
   3efb8:	str	x0, [sp, #64]
   3efbc:	ldr	x0, [sp, #48]
   3efc0:	ldr	x1, [sp, #64]
   3efc4:	cmp	x1, x0
   3efc8:	b.ls	3efd8 <PyInit__decimal@@Base+0x27300>  // b.plast
   3efcc:	ldr	x0, [sp, #56]
   3efd0:	sub	x0, x0, #0x1
   3efd4:	str	x0, [sp, #56]
   3efd8:	ldr	x0, [sp, #72]
   3efdc:	lsl	x0, x0, #34
   3efe0:	str	x0, [sp, #72]
   3efe4:	ldr	x1, [sp, #72]
   3efe8:	ldr	x0, [sp, #64]
   3efec:	add	x0, x1, x0
   3eff0:	str	x0, [sp, #48]
   3eff4:	ldr	x0, [sp, #48]
   3eff8:	ldr	x1, [sp, #72]
   3effc:	cmp	x1, x0
   3f000:	b.ls	3f010 <PyInit__decimal@@Base+0x27338>  // b.plast
   3f004:	ldr	x0, [sp, #56]
   3f008:	add	x0, x0, #0x1
   3f00c:	str	x0, [sp, #56]
   3f010:	ldr	x0, [sp, #56]
   3f014:	str	x0, [sp, #72]
   3f018:	ldr	x0, [sp, #72]
   3f01c:	str	x0, [sp, #64]
   3f020:	ldr	x0, [sp, #56]
   3f024:	lsr	x0, x0, #30
   3f028:	str	x0, [sp, #56]
   3f02c:	ldr	x1, [sp, #48]
   3f030:	ldr	x0, [sp, #64]
   3f034:	sub	x0, x1, x0
   3f038:	str	x0, [sp, #64]
   3f03c:	ldr	x0, [sp, #48]
   3f040:	ldr	x1, [sp, #64]
   3f044:	cmp	x1, x0
   3f048:	b.ls	3f058 <PyInit__decimal@@Base+0x27380>  // b.plast
   3f04c:	ldr	x0, [sp, #56]
   3f050:	sub	x0, x0, #0x1
   3f054:	str	x0, [sp, #56]
   3f058:	ldr	x0, [sp, #72]
   3f05c:	lsl	x0, x0, #34
   3f060:	str	x0, [sp, #72]
   3f064:	ldr	x1, [sp, #72]
   3f068:	ldr	x0, [sp, #64]
   3f06c:	add	x0, x1, x0
   3f070:	str	x0, [sp, #48]
   3f074:	ldr	x0, [sp, #48]
   3f078:	ldr	x1, [sp, #72]
   3f07c:	cmp	x1, x0
   3f080:	b.ls	3f090 <PyInit__decimal@@Base+0x273b8>  // b.plast
   3f084:	ldr	x0, [sp, #56]
   3f088:	add	x0, x0, #0x1
   3f08c:	str	x0, [sp, #56]
   3f090:	ldr	x0, [sp, #56]
   3f094:	cmp	x0, #0x0
   3f098:	b.ne	3f0ac <PyInit__decimal@@Base+0x273d4>  // b.any
   3f09c:	ldr	x0, [sp, #48]
   3f0a0:	ldr	x1, [sp, #24]
   3f0a4:	cmp	x1, x0
   3f0a8:	b.hi	3f0bc <PyInit__decimal@@Base+0x273e4>  // b.pmore
   3f0ac:	ldr	x1, [sp, #48]
   3f0b0:	ldr	x0, [sp, #24]
   3f0b4:	sub	x0, x1, x0
   3f0b8:	b	3f274 <PyInit__decimal@@Base+0x2759c>
   3f0bc:	ldr	x0, [sp, #48]
   3f0c0:	b	3f274 <PyInit__decimal@@Base+0x2759c>
   3f0c4:	ldr	x0, [sp, #56]
   3f0c8:	str	x0, [sp, #72]
   3f0cc:	ldr	x0, [sp, #72]
   3f0d0:	str	x0, [sp, #64]
   3f0d4:	ldr	x0, [sp, #56]
   3f0d8:	lsr	x0, x0, #24
   3f0dc:	str	x0, [sp, #56]
   3f0e0:	ldr	x1, [sp, #48]
   3f0e4:	ldr	x0, [sp, #64]
   3f0e8:	sub	x0, x1, x0
   3f0ec:	str	x0, [sp, #64]
   3f0f0:	ldr	x0, [sp, #48]
   3f0f4:	ldr	x1, [sp, #64]
   3f0f8:	cmp	x1, x0
   3f0fc:	b.ls	3f10c <PyInit__decimal@@Base+0x27434>  // b.plast
   3f100:	ldr	x0, [sp, #56]
   3f104:	sub	x0, x0, #0x1
   3f108:	str	x0, [sp, #56]
   3f10c:	ldr	x0, [sp, #72]
   3f110:	lsl	x0, x0, #40
   3f114:	str	x0, [sp, #72]
   3f118:	ldr	x1, [sp, #72]
   3f11c:	ldr	x0, [sp, #64]
   3f120:	add	x0, x1, x0
   3f124:	str	x0, [sp, #48]
   3f128:	ldr	x0, [sp, #48]
   3f12c:	ldr	x1, [sp, #72]
   3f130:	cmp	x1, x0
   3f134:	b.ls	3f144 <PyInit__decimal@@Base+0x2746c>  // b.plast
   3f138:	ldr	x0, [sp, #56]
   3f13c:	add	x0, x0, #0x1
   3f140:	str	x0, [sp, #56]
   3f144:	ldr	x0, [sp, #56]
   3f148:	str	x0, [sp, #72]
   3f14c:	ldr	x0, [sp, #72]
   3f150:	str	x0, [sp, #64]
   3f154:	ldr	x0, [sp, #56]
   3f158:	lsr	x0, x0, #24
   3f15c:	str	x0, [sp, #56]
   3f160:	ldr	x1, [sp, #48]
   3f164:	ldr	x0, [sp, #64]
   3f168:	sub	x0, x1, x0
   3f16c:	str	x0, [sp, #64]
   3f170:	ldr	x0, [sp, #48]
   3f174:	ldr	x1, [sp, #64]
   3f178:	cmp	x1, x0
   3f17c:	b.ls	3f18c <PyInit__decimal@@Base+0x274b4>  // b.plast
   3f180:	ldr	x0, [sp, #56]
   3f184:	sub	x0, x0, #0x1
   3f188:	str	x0, [sp, #56]
   3f18c:	ldr	x0, [sp, #72]
   3f190:	lsl	x0, x0, #40
   3f194:	str	x0, [sp, #72]
   3f198:	ldr	x1, [sp, #72]
   3f19c:	ldr	x0, [sp, #64]
   3f1a0:	add	x0, x1, x0
   3f1a4:	str	x0, [sp, #48]
   3f1a8:	ldr	x0, [sp, #48]
   3f1ac:	ldr	x1, [sp, #72]
   3f1b0:	cmp	x1, x0
   3f1b4:	b.ls	3f1c4 <PyInit__decimal@@Base+0x274ec>  // b.plast
   3f1b8:	ldr	x0, [sp, #56]
   3f1bc:	add	x0, x0, #0x1
   3f1c0:	str	x0, [sp, #56]
   3f1c4:	ldr	x0, [sp, #56]
   3f1c8:	str	x0, [sp, #72]
   3f1cc:	ldr	x0, [sp, #72]
   3f1d0:	str	x0, [sp, #64]
   3f1d4:	ldr	x0, [sp, #56]
   3f1d8:	lsr	x0, x0, #24
   3f1dc:	str	x0, [sp, #56]
   3f1e0:	ldr	x1, [sp, #48]
   3f1e4:	ldr	x0, [sp, #64]
   3f1e8:	sub	x0, x1, x0
   3f1ec:	str	x0, [sp, #64]
   3f1f0:	ldr	x0, [sp, #48]
   3f1f4:	ldr	x1, [sp, #64]
   3f1f8:	cmp	x1, x0
   3f1fc:	b.ls	3f20c <PyInit__decimal@@Base+0x27534>  // b.plast
   3f200:	ldr	x0, [sp, #56]
   3f204:	sub	x0, x0, #0x1
   3f208:	str	x0, [sp, #56]
   3f20c:	ldr	x0, [sp, #72]
   3f210:	lsl	x0, x0, #40
   3f214:	str	x0, [sp, #72]
   3f218:	ldr	x1, [sp, #72]
   3f21c:	ldr	x0, [sp, #64]
   3f220:	add	x0, x1, x0
   3f224:	str	x0, [sp, #48]
   3f228:	ldr	x0, [sp, #48]
   3f22c:	ldr	x1, [sp, #72]
   3f230:	cmp	x1, x0
   3f234:	b.ls	3f244 <PyInit__decimal@@Base+0x2756c>  // b.plast
   3f238:	ldr	x0, [sp, #56]
   3f23c:	add	x0, x0, #0x1
   3f240:	str	x0, [sp, #56]
   3f244:	ldr	x0, [sp, #56]
   3f248:	cmp	x0, #0x0
   3f24c:	b.ne	3f260 <PyInit__decimal@@Base+0x27588>  // b.any
   3f250:	ldr	x0, [sp, #48]
   3f254:	ldr	x1, [sp, #24]
   3f258:	cmp	x1, x0
   3f25c:	b.hi	3f270 <PyInit__decimal@@Base+0x27598>  // b.pmore
   3f260:	ldr	x1, [sp, #48]
   3f264:	ldr	x0, [sp, #24]
   3f268:	sub	x0, x1, x0
   3f26c:	b	3f274 <PyInit__decimal@@Base+0x2759c>
   3f270:	ldr	x0, [sp, #48]
   3f274:	ldp	x29, x30, [sp], #80
   3f278:	ret
   3f27c:	stp	x29, x30, [sp, #-64]!
   3f280:	mov	x29, sp
   3f284:	str	x0, [sp, #40]
   3f288:	str	x1, [sp, #32]
   3f28c:	str	x2, [sp, #24]
   3f290:	mov	x0, #0x1                   	// #1
   3f294:	str	x0, [sp, #56]
   3f298:	b	3f2e0 <PyInit__decimal@@Base+0x27608>
   3f29c:	ldr	x0, [sp, #32]
   3f2a0:	and	x0, x0, #0x1
   3f2a4:	cmp	x0, #0x0
   3f2a8:	b.eq	3f2c0 <PyInit__decimal@@Base+0x275e8>  // b.none
   3f2ac:	ldr	x2, [sp, #24]
   3f2b0:	ldr	x1, [sp, #40]
   3f2b4:	ldr	x0, [sp, #56]
   3f2b8:	bl	3ed94 <PyInit__decimal@@Base+0x270bc>
   3f2bc:	str	x0, [sp, #56]
   3f2c0:	ldr	x2, [sp, #24]
   3f2c4:	ldr	x1, [sp, #40]
   3f2c8:	ldr	x0, [sp, #40]
   3f2cc:	bl	3ed94 <PyInit__decimal@@Base+0x270bc>
   3f2d0:	str	x0, [sp, #40]
   3f2d4:	ldr	x0, [sp, #32]
   3f2d8:	lsr	x0, x0, #1
   3f2dc:	str	x0, [sp, #32]
   3f2e0:	ldr	x0, [sp, #32]
   3f2e4:	cmp	x0, #0x0
   3f2e8:	b.ne	3f29c <PyInit__decimal@@Base+0x275c4>  // b.any
   3f2ec:	ldr	x0, [sp, #56]
   3f2f0:	ldp	x29, x30, [sp], #64
   3f2f4:	ret
   3f2f8:	sub	sp, sp, #0x10
   3f2fc:	str	w0, [sp, #12]
   3f300:	str	x1, [sp]
   3f304:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3f308:	add	x0, x0, #0xb60
   3f30c:	ldrsw	x1, [sp, #12]
   3f310:	ldr	x1, [x0, x1, lsl #3]
   3f314:	ldr	x0, [sp]
   3f318:	str	x1, [x0]
   3f31c:	nop
   3f320:	add	sp, sp, #0x10
   3f324:	ret
   3f328:	stp	x29, x30, [sp, #-64]!
   3f32c:	mov	x29, sp
   3f330:	str	x0, [sp, #24]
   3f334:	str	w1, [sp, #20]
   3f338:	str	w2, [sp, #16]
   3f33c:	add	x0, sp, #0x20
   3f340:	mov	x1, x0
   3f344:	ldr	w0, [sp, #16]
   3f348:	bl	3f2f8 <PyInit__decimal@@Base+0x27620>
   3f34c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3f350:	add	x0, x0, #0xb78
   3f354:	ldrsw	x1, [sp, #16]
   3f358:	ldr	x0, [x0, x1, lsl #3]
   3f35c:	str	x0, [sp, #56]
   3f360:	ldr	x0, [sp, #32]
   3f364:	str	x0, [sp, #48]
   3f368:	ldr	x0, [sp, #48]
   3f36c:	sub	x1, x0, #0x1
   3f370:	ldr	x0, [sp, #24]
   3f374:	udiv	x0, x1, x0
   3f378:	str	x0, [sp, #40]
   3f37c:	ldr	w0, [sp, #20]
   3f380:	cmn	w0, #0x1
   3f384:	b.ne	3f3b0 <PyInit__decimal@@Base+0x276d8>  // b.any
   3f388:	ldr	x1, [sp, #48]
   3f38c:	ldr	x0, [sp, #40]
   3f390:	sub	x0, x1, x0
   3f394:	sub	x0, x0, #0x1
   3f398:	ldr	x1, [sp, #32]
   3f39c:	mov	x2, x1
   3f3a0:	mov	x1, x0
   3f3a4:	ldr	x0, [sp, #56]
   3f3a8:	bl	3f27c <PyInit__decimal@@Base+0x275a4>
   3f3ac:	b	3f3c4 <PyInit__decimal@@Base+0x276ec>
   3f3b0:	ldr	x0, [sp, #32]
   3f3b4:	mov	x2, x0
   3f3b8:	ldr	x1, [sp, #40]
   3f3bc:	ldr	x0, [sp, #56]
   3f3c0:	bl	3f27c <PyInit__decimal@@Base+0x275a4>
   3f3c4:	ldp	x29, x30, [sp], #64
   3f3c8:	ret
   3f3cc:	stp	x29, x30, [sp, #-80]!
   3f3d0:	mov	x29, sp
   3f3d4:	str	x0, [sp, #24]
   3f3d8:	str	w1, [sp, #20]
   3f3dc:	str	w2, [sp, #16]
   3f3e0:	ldr	x0, [sp, #24]
   3f3e4:	lsr	x0, x0, #1
   3f3e8:	str	x0, [sp, #56]
   3f3ec:	mov	x2, #0x8                   	// #8
   3f3f0:	ldr	x1, [sp, #56]
   3f3f4:	mov	x0, #0x18                  	// #24
   3f3f8:	bl	235dc <PyInit__decimal@@Base+0xb904>
   3f3fc:	str	x0, [sp, #48]
   3f400:	ldr	x0, [sp, #48]
   3f404:	cmp	x0, #0x0
   3f408:	b.ne	3f414 <PyInit__decimal@@Base+0x2773c>  // b.any
   3f40c:	mov	x0, #0x0                   	// #0
   3f410:	b	3f4c0 <PyInit__decimal@@Base+0x277e8>
   3f414:	add	x0, sp, #0x20
   3f418:	mov	x1, x0
   3f41c:	ldr	w0, [sp, #16]
   3f420:	bl	3f2f8 <PyInit__decimal@@Base+0x27620>
   3f424:	ldr	w2, [sp, #16]
   3f428:	ldr	w1, [sp, #20]
   3f42c:	ldr	x0, [sp, #24]
   3f430:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   3f434:	str	x0, [sp, #40]
   3f438:	ldr	x0, [sp, #48]
   3f43c:	ldr	w1, [sp, #16]
   3f440:	str	w1, [x0]
   3f444:	ldr	x1, [sp, #32]
   3f448:	ldr	x0, [sp, #48]
   3f44c:	str	x1, [x0, #8]
   3f450:	ldr	x0, [sp, #48]
   3f454:	ldr	x1, [sp, #40]
   3f458:	str	x1, [x0, #16]
   3f45c:	mov	x0, #0x1                   	// #1
   3f460:	str	x0, [sp, #72]
   3f464:	str	xzr, [sp, #64]
   3f468:	b	3f4ac <PyInit__decimal@@Base+0x277d4>
   3f46c:	ldr	x1, [sp, #48]
   3f470:	ldr	x0, [sp, #64]
   3f474:	add	x0, x0, #0x2
   3f478:	lsl	x0, x0, #3
   3f47c:	add	x0, x1, x0
   3f480:	ldr	x1, [sp, #72]
   3f484:	str	x1, [x0, #8]
   3f488:	ldr	x0, [sp, #32]
   3f48c:	mov	x2, x0
   3f490:	ldr	x1, [sp, #40]
   3f494:	ldr	x0, [sp, #72]
   3f498:	bl	3ed94 <PyInit__decimal@@Base+0x270bc>
   3f49c:	str	x0, [sp, #72]
   3f4a0:	ldr	x0, [sp, #64]
   3f4a4:	add	x0, x0, #0x1
   3f4a8:	str	x0, [sp, #64]
   3f4ac:	ldr	x1, [sp, #64]
   3f4b0:	ldr	x0, [sp, #56]
   3f4b4:	cmp	x1, x0
   3f4b8:	b.cc	3f46c <PyInit__decimal@@Base+0x27794>  // b.lo, b.ul, b.last
   3f4bc:	ldr	x0, [sp, #48]
   3f4c0:	ldp	x29, x30, [sp], #80
   3f4c4:	ret
   3f4c8:	stp	x29, x30, [sp, #-64]!
   3f4cc:	mov	x29, sp
   3f4d0:	str	x19, [sp, #16]
   3f4d4:	str	x0, [sp, #40]
   3f4d8:	str	w1, [sp, #36]
   3f4dc:	str	w2, [sp, #32]
   3f4e0:	add	x0, sp, #0x30
   3f4e4:	mov	x1, x0
   3f4e8:	ldr	w0, [sp, #32]
   3f4ec:	bl	3f2f8 <PyInit__decimal@@Base+0x27620>
   3f4f0:	ldr	w2, [sp, #32]
   3f4f4:	ldr	w1, [sp, #36]
   3f4f8:	mov	x0, #0x3                   	// #3
   3f4fc:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   3f500:	str	x0, [sp, #56]
   3f504:	ldr	x0, [sp, #40]
   3f508:	mov	x1, #0x1                   	// #1
   3f50c:	str	x1, [x0]
   3f510:	ldr	x0, [sp, #40]
   3f514:	add	x0, x0, #0x8
   3f518:	ldr	x1, [sp, #56]
   3f51c:	str	x1, [x0]
   3f520:	ldr	x1, [sp, #48]
   3f524:	ldr	x0, [sp, #40]
   3f528:	add	x19, x0, #0x10
   3f52c:	mov	x2, x1
   3f530:	mov	x1, #0x2                   	// #2
   3f534:	ldr	x0, [sp, #56]
   3f538:	bl	3f27c <PyInit__decimal@@Base+0x275a4>
   3f53c:	str	x0, [x19]
   3f540:	nop
   3f544:	ldr	x19, [sp, #16]
   3f548:	ldp	x29, x30, [sp], #64
   3f54c:	ret
   3f550:	sub	sp, sp, #0x20
   3f554:	str	x0, [sp, #8]
   3f558:	str	wzr, [sp, #28]
   3f55c:	ldr	x0, [sp, #8]
   3f560:	lsr	x0, x0, #32
   3f564:	str	x0, [sp, #16]
   3f568:	ldr	x0, [sp, #16]
   3f56c:	cmp	x0, #0x0
   3f570:	b.eq	3f588 <PyInit__decimal@@Base+0x278b0>  // b.none
   3f574:	ldr	x0, [sp, #16]
   3f578:	str	x0, [sp, #8]
   3f57c:	ldr	w0, [sp, #28]
   3f580:	add	w0, w0, #0x20
   3f584:	str	w0, [sp, #28]
   3f588:	ldr	x0, [sp, #8]
   3f58c:	lsr	x0, x0, #16
   3f590:	str	x0, [sp, #16]
   3f594:	ldr	x0, [sp, #16]
   3f598:	cmp	x0, #0x0
   3f59c:	b.eq	3f5b4 <PyInit__decimal@@Base+0x278dc>  // b.none
   3f5a0:	ldr	x0, [sp, #16]
   3f5a4:	str	x0, [sp, #8]
   3f5a8:	ldr	w0, [sp, #28]
   3f5ac:	add	w0, w0, #0x10
   3f5b0:	str	w0, [sp, #28]
   3f5b4:	ldr	x0, [sp, #8]
   3f5b8:	lsr	x0, x0, #8
   3f5bc:	str	x0, [sp, #16]
   3f5c0:	ldr	x0, [sp, #16]
   3f5c4:	cmp	x0, #0x0
   3f5c8:	b.eq	3f5e0 <PyInit__decimal@@Base+0x27908>  // b.none
   3f5cc:	ldr	x0, [sp, #16]
   3f5d0:	str	x0, [sp, #8]
   3f5d4:	ldr	w0, [sp, #28]
   3f5d8:	add	w0, w0, #0x8
   3f5dc:	str	w0, [sp, #28]
   3f5e0:	ldr	x0, [sp, #8]
   3f5e4:	lsr	x0, x0, #4
   3f5e8:	str	x0, [sp, #16]
   3f5ec:	ldr	x0, [sp, #16]
   3f5f0:	cmp	x0, #0x0
   3f5f4:	b.eq	3f60c <PyInit__decimal@@Base+0x27934>  // b.none
   3f5f8:	ldr	x0, [sp, #16]
   3f5fc:	str	x0, [sp, #8]
   3f600:	ldr	w0, [sp, #28]
   3f604:	add	w0, w0, #0x4
   3f608:	str	w0, [sp, #28]
   3f60c:	ldr	x0, [sp, #8]
   3f610:	lsr	x0, x0, #2
   3f614:	str	x0, [sp, #16]
   3f618:	ldr	x0, [sp, #16]
   3f61c:	cmp	x0, #0x0
   3f620:	b.eq	3f638 <PyInit__decimal@@Base+0x27960>  // b.none
   3f624:	ldr	x0, [sp, #16]
   3f628:	str	x0, [sp, #8]
   3f62c:	ldr	w0, [sp, #28]
   3f630:	add	w0, w0, #0x2
   3f634:	str	w0, [sp, #28]
   3f638:	ldr	x0, [sp, #8]
   3f63c:	lsr	x0, x0, #1
   3f640:	str	x0, [sp, #16]
   3f644:	ldr	x0, [sp, #16]
   3f648:	cmp	x0, #0x0
   3f64c:	b.eq	3f664 <PyInit__decimal@@Base+0x2798c>  // b.none
   3f650:	ldr	x0, [sp, #16]
   3f654:	str	x0, [sp, #8]
   3f658:	ldr	w0, [sp, #28]
   3f65c:	add	w0, w0, #0x1
   3f660:	str	w0, [sp, #28]
   3f664:	ldr	x0, [sp, #8]
   3f668:	mov	w1, w0
   3f66c:	ldr	w0, [sp, #28]
   3f670:	add	w0, w1, w0
   3f674:	sub	w0, w0, #0x1
   3f678:	add	sp, sp, #0x20
   3f67c:	ret
   3f680:	sub	sp, sp, #0x10
   3f684:	str	w0, [sp, #12]
   3f688:	str	x1, [sp]
   3f68c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   3f690:	add	x0, x0, #0xb60
   3f694:	ldrsw	x1, [sp, #12]
   3f698:	ldr	x1, [x0, x1, lsl #3]
   3f69c:	ldr	x0, [sp]
   3f6a0:	str	x1, [x0]
   3f6a4:	nop
   3f6a8:	add	sp, sp, #0x10
   3f6ac:	ret
   3f6b0:	sub	sp, sp, #0x30
   3f6b4:	str	x0, [sp, #24]
   3f6b8:	str	x1, [sp, #16]
   3f6bc:	str	x2, [sp, #8]
   3f6c0:	str	x3, [sp]
   3f6c4:	ldr	x0, [sp, #8]
   3f6c8:	mov	x6, x0
   3f6cc:	mov	x7, #0x0                   	// #0
   3f6d0:	ldr	x0, [sp]
   3f6d4:	mov	x4, x0
   3f6d8:	mov	x5, #0x0                   	// #0
   3f6dc:	mul	x1, x6, x4
   3f6e0:	umulh	x0, x6, x4
   3f6e4:	madd	x0, x7, x4, x0
   3f6e8:	madd	x0, x6, x5, x0
   3f6ec:	mov	x8, x1
   3f6f0:	mov	x9, x0
   3f6f4:	stp	x8, x9, [sp, #32]
   3f6f8:	ldr	x0, [sp, #40]
   3f6fc:	mov	x10, x0
   3f700:	mov	x11, #0x0                   	// #0
   3f704:	mov	x1, x10
   3f708:	ldr	x0, [sp, #24]
   3f70c:	str	x1, [x0]
   3f710:	ldr	x1, [sp, #32]
   3f714:	ldr	x0, [sp, #16]
   3f718:	str	x1, [x0]
   3f71c:	nop
   3f720:	add	sp, sp, #0x30
   3f724:	ret
   3f728:	stp	x29, x30, [sp, #-80]!
   3f72c:	mov	x29, sp
   3f730:	str	x0, [sp, #40]
   3f734:	str	x1, [sp, #32]
   3f738:	str	x2, [sp, #24]
   3f73c:	add	x1, sp, #0x30
   3f740:	add	x0, sp, #0x38
   3f744:	ldr	x3, [sp, #32]
   3f748:	ldr	x2, [sp, #40]
   3f74c:	bl	3f6b0 <PyInit__decimal@@Base+0x279d8>
   3f750:	ldr	x0, [sp, #24]
   3f754:	and	x0, x0, #0x100000000
   3f758:	cmp	x0, #0x0
   3f75c:	b.eq	3f894 <PyInit__decimal@@Base+0x27bbc>  // b.none
   3f760:	ldr	x0, [sp, #56]
   3f764:	str	x0, [sp, #72]
   3f768:	ldr	x0, [sp, #72]
   3f76c:	str	x0, [sp, #64]
   3f770:	ldr	x0, [sp, #56]
   3f774:	lsr	x0, x0, #32
   3f778:	str	x0, [sp, #56]
   3f77c:	ldr	x1, [sp, #48]
   3f780:	ldr	x0, [sp, #64]
   3f784:	sub	x0, x1, x0
   3f788:	str	x0, [sp, #64]
   3f78c:	ldr	x0, [sp, #48]
   3f790:	ldr	x1, [sp, #64]
   3f794:	cmp	x1, x0
   3f798:	b.ls	3f7a8 <PyInit__decimal@@Base+0x27ad0>  // b.plast
   3f79c:	ldr	x0, [sp, #56]
   3f7a0:	sub	x0, x0, #0x1
   3f7a4:	str	x0, [sp, #56]
   3f7a8:	ldr	x0, [sp, #72]
   3f7ac:	lsl	x0, x0, #32
   3f7b0:	str	x0, [sp, #72]
   3f7b4:	ldr	x1, [sp, #72]
   3f7b8:	ldr	x0, [sp, #64]
   3f7bc:	add	x0, x1, x0
   3f7c0:	str	x0, [sp, #48]
   3f7c4:	ldr	x0, [sp, #48]
   3f7c8:	ldr	x1, [sp, #72]
   3f7cc:	cmp	x1, x0
   3f7d0:	b.ls	3f7e0 <PyInit__decimal@@Base+0x27b08>  // b.plast
   3f7d4:	ldr	x0, [sp, #56]
   3f7d8:	add	x0, x0, #0x1
   3f7dc:	str	x0, [sp, #56]
   3f7e0:	ldr	x0, [sp, #56]
   3f7e4:	str	x0, [sp, #72]
   3f7e8:	ldr	x0, [sp, #72]
   3f7ec:	str	x0, [sp, #64]
   3f7f0:	ldr	x0, [sp, #56]
   3f7f4:	lsr	x0, x0, #32
   3f7f8:	str	x0, [sp, #56]
   3f7fc:	ldr	x1, [sp, #48]
   3f800:	ldr	x0, [sp, #64]
   3f804:	sub	x0, x1, x0
   3f808:	str	x0, [sp, #64]
   3f80c:	ldr	x0, [sp, #48]
   3f810:	ldr	x1, [sp, #64]
   3f814:	cmp	x1, x0
   3f818:	b.ls	3f828 <PyInit__decimal@@Base+0x27b50>  // b.plast
   3f81c:	ldr	x0, [sp, #56]
   3f820:	sub	x0, x0, #0x1
   3f824:	str	x0, [sp, #56]
   3f828:	ldr	x0, [sp, #72]
   3f82c:	lsl	x0, x0, #32
   3f830:	str	x0, [sp, #72]
   3f834:	ldr	x1, [sp, #72]
   3f838:	ldr	x0, [sp, #64]
   3f83c:	add	x0, x1, x0
   3f840:	str	x0, [sp, #48]
   3f844:	ldr	x0, [sp, #48]
   3f848:	ldr	x1, [sp, #72]
   3f84c:	cmp	x1, x0
   3f850:	b.ls	3f860 <PyInit__decimal@@Base+0x27b88>  // b.plast
   3f854:	ldr	x0, [sp, #56]
   3f858:	add	x0, x0, #0x1
   3f85c:	str	x0, [sp, #56]
   3f860:	ldr	x0, [sp, #56]
   3f864:	cmp	x0, #0x0
   3f868:	b.ne	3f87c <PyInit__decimal@@Base+0x27ba4>  // b.any
   3f86c:	ldr	x0, [sp, #48]
   3f870:	ldr	x1, [sp, #24]
   3f874:	cmp	x1, x0
   3f878:	b.hi	3f88c <PyInit__decimal@@Base+0x27bb4>  // b.pmore
   3f87c:	ldr	x1, [sp, #48]
   3f880:	ldr	x0, [sp, #24]
   3f884:	sub	x0, x1, x0
   3f888:	b	3fc08 <PyInit__decimal@@Base+0x27f30>
   3f88c:	ldr	x0, [sp, #48]
   3f890:	b	3fc08 <PyInit__decimal@@Base+0x27f30>
   3f894:	ldr	x0, [sp, #24]
   3f898:	and	x0, x0, #0x400000000
   3f89c:	cmp	x0, #0x0
   3f8a0:	b.eq	3fa58 <PyInit__decimal@@Base+0x27d80>  // b.none
   3f8a4:	ldr	x0, [sp, #56]
   3f8a8:	str	x0, [sp, #72]
   3f8ac:	ldr	x0, [sp, #72]
   3f8b0:	str	x0, [sp, #64]
   3f8b4:	ldr	x0, [sp, #56]
   3f8b8:	lsr	x0, x0, #30
   3f8bc:	str	x0, [sp, #56]
   3f8c0:	ldr	x1, [sp, #48]
   3f8c4:	ldr	x0, [sp, #64]
   3f8c8:	sub	x0, x1, x0
   3f8cc:	str	x0, [sp, #64]
   3f8d0:	ldr	x0, [sp, #48]
   3f8d4:	ldr	x1, [sp, #64]
   3f8d8:	cmp	x1, x0
   3f8dc:	b.ls	3f8ec <PyInit__decimal@@Base+0x27c14>  // b.plast
   3f8e0:	ldr	x0, [sp, #56]
   3f8e4:	sub	x0, x0, #0x1
   3f8e8:	str	x0, [sp, #56]
   3f8ec:	ldr	x0, [sp, #72]
   3f8f0:	lsl	x0, x0, #34
   3f8f4:	str	x0, [sp, #72]
   3f8f8:	ldr	x1, [sp, #72]
   3f8fc:	ldr	x0, [sp, #64]
   3f900:	add	x0, x1, x0
   3f904:	str	x0, [sp, #48]
   3f908:	ldr	x0, [sp, #48]
   3f90c:	ldr	x1, [sp, #72]
   3f910:	cmp	x1, x0
   3f914:	b.ls	3f924 <PyInit__decimal@@Base+0x27c4c>  // b.plast
   3f918:	ldr	x0, [sp, #56]
   3f91c:	add	x0, x0, #0x1
   3f920:	str	x0, [sp, #56]
   3f924:	ldr	x0, [sp, #56]
   3f928:	str	x0, [sp, #72]
   3f92c:	ldr	x0, [sp, #72]
   3f930:	str	x0, [sp, #64]
   3f934:	ldr	x0, [sp, #56]
   3f938:	lsr	x0, x0, #30
   3f93c:	str	x0, [sp, #56]
   3f940:	ldr	x1, [sp, #48]
   3f944:	ldr	x0, [sp, #64]
   3f948:	sub	x0, x1, x0
   3f94c:	str	x0, [sp, #64]
   3f950:	ldr	x0, [sp, #48]
   3f954:	ldr	x1, [sp, #64]
   3f958:	cmp	x1, x0
   3f95c:	b.ls	3f96c <PyInit__decimal@@Base+0x27c94>  // b.plast
   3f960:	ldr	x0, [sp, #56]
   3f964:	sub	x0, x0, #0x1
   3f968:	str	x0, [sp, #56]
   3f96c:	ldr	x0, [sp, #72]
   3f970:	lsl	x0, x0, #34
   3f974:	str	x0, [sp, #72]
   3f978:	ldr	x1, [sp, #72]
   3f97c:	ldr	x0, [sp, #64]
   3f980:	add	x0, x1, x0
   3f984:	str	x0, [sp, #48]
   3f988:	ldr	x0, [sp, #48]
   3f98c:	ldr	x1, [sp, #72]
   3f990:	cmp	x1, x0
   3f994:	b.ls	3f9a4 <PyInit__decimal@@Base+0x27ccc>  // b.plast
   3f998:	ldr	x0, [sp, #56]
   3f99c:	add	x0, x0, #0x1
   3f9a0:	str	x0, [sp, #56]
   3f9a4:	ldr	x0, [sp, #56]
   3f9a8:	str	x0, [sp, #72]
   3f9ac:	ldr	x0, [sp, #72]
   3f9b0:	str	x0, [sp, #64]
   3f9b4:	ldr	x0, [sp, #56]
   3f9b8:	lsr	x0, x0, #30
   3f9bc:	str	x0, [sp, #56]
   3f9c0:	ldr	x1, [sp, #48]
   3f9c4:	ldr	x0, [sp, #64]
   3f9c8:	sub	x0, x1, x0
   3f9cc:	str	x0, [sp, #64]
   3f9d0:	ldr	x0, [sp, #48]
   3f9d4:	ldr	x1, [sp, #64]
   3f9d8:	cmp	x1, x0
   3f9dc:	b.ls	3f9ec <PyInit__decimal@@Base+0x27d14>  // b.plast
   3f9e0:	ldr	x0, [sp, #56]
   3f9e4:	sub	x0, x0, #0x1
   3f9e8:	str	x0, [sp, #56]
   3f9ec:	ldr	x0, [sp, #72]
   3f9f0:	lsl	x0, x0, #34
   3f9f4:	str	x0, [sp, #72]
   3f9f8:	ldr	x1, [sp, #72]
   3f9fc:	ldr	x0, [sp, #64]
   3fa00:	add	x0, x1, x0
   3fa04:	str	x0, [sp, #48]
   3fa08:	ldr	x0, [sp, #48]
   3fa0c:	ldr	x1, [sp, #72]
   3fa10:	cmp	x1, x0
   3fa14:	b.ls	3fa24 <PyInit__decimal@@Base+0x27d4c>  // b.plast
   3fa18:	ldr	x0, [sp, #56]
   3fa1c:	add	x0, x0, #0x1
   3fa20:	str	x0, [sp, #56]
   3fa24:	ldr	x0, [sp, #56]
   3fa28:	cmp	x0, #0x0
   3fa2c:	b.ne	3fa40 <PyInit__decimal@@Base+0x27d68>  // b.any
   3fa30:	ldr	x0, [sp, #48]
   3fa34:	ldr	x1, [sp, #24]
   3fa38:	cmp	x1, x0
   3fa3c:	b.hi	3fa50 <PyInit__decimal@@Base+0x27d78>  // b.pmore
   3fa40:	ldr	x1, [sp, #48]
   3fa44:	ldr	x0, [sp, #24]
   3fa48:	sub	x0, x1, x0
   3fa4c:	b	3fc08 <PyInit__decimal@@Base+0x27f30>
   3fa50:	ldr	x0, [sp, #48]
   3fa54:	b	3fc08 <PyInit__decimal@@Base+0x27f30>
   3fa58:	ldr	x0, [sp, #56]
   3fa5c:	str	x0, [sp, #72]
   3fa60:	ldr	x0, [sp, #72]
   3fa64:	str	x0, [sp, #64]
   3fa68:	ldr	x0, [sp, #56]
   3fa6c:	lsr	x0, x0, #24
   3fa70:	str	x0, [sp, #56]
   3fa74:	ldr	x1, [sp, #48]
   3fa78:	ldr	x0, [sp, #64]
   3fa7c:	sub	x0, x1, x0
   3fa80:	str	x0, [sp, #64]
   3fa84:	ldr	x0, [sp, #48]
   3fa88:	ldr	x1, [sp, #64]
   3fa8c:	cmp	x1, x0
   3fa90:	b.ls	3faa0 <PyInit__decimal@@Base+0x27dc8>  // b.plast
   3fa94:	ldr	x0, [sp, #56]
   3fa98:	sub	x0, x0, #0x1
   3fa9c:	str	x0, [sp, #56]
   3faa0:	ldr	x0, [sp, #72]
   3faa4:	lsl	x0, x0, #40
   3faa8:	str	x0, [sp, #72]
   3faac:	ldr	x1, [sp, #72]
   3fab0:	ldr	x0, [sp, #64]
   3fab4:	add	x0, x1, x0
   3fab8:	str	x0, [sp, #48]
   3fabc:	ldr	x0, [sp, #48]
   3fac0:	ldr	x1, [sp, #72]
   3fac4:	cmp	x1, x0
   3fac8:	b.ls	3fad8 <PyInit__decimal@@Base+0x27e00>  // b.plast
   3facc:	ldr	x0, [sp, #56]
   3fad0:	add	x0, x0, #0x1
   3fad4:	str	x0, [sp, #56]
   3fad8:	ldr	x0, [sp, #56]
   3fadc:	str	x0, [sp, #72]
   3fae0:	ldr	x0, [sp, #72]
   3fae4:	str	x0, [sp, #64]
   3fae8:	ldr	x0, [sp, #56]
   3faec:	lsr	x0, x0, #24
   3faf0:	str	x0, [sp, #56]
   3faf4:	ldr	x1, [sp, #48]
   3faf8:	ldr	x0, [sp, #64]
   3fafc:	sub	x0, x1, x0
   3fb00:	str	x0, [sp, #64]
   3fb04:	ldr	x0, [sp, #48]
   3fb08:	ldr	x1, [sp, #64]
   3fb0c:	cmp	x1, x0
   3fb10:	b.ls	3fb20 <PyInit__decimal@@Base+0x27e48>  // b.plast
   3fb14:	ldr	x0, [sp, #56]
   3fb18:	sub	x0, x0, #0x1
   3fb1c:	str	x0, [sp, #56]
   3fb20:	ldr	x0, [sp, #72]
   3fb24:	lsl	x0, x0, #40
   3fb28:	str	x0, [sp, #72]
   3fb2c:	ldr	x1, [sp, #72]
   3fb30:	ldr	x0, [sp, #64]
   3fb34:	add	x0, x1, x0
   3fb38:	str	x0, [sp, #48]
   3fb3c:	ldr	x0, [sp, #48]
   3fb40:	ldr	x1, [sp, #72]
   3fb44:	cmp	x1, x0
   3fb48:	b.ls	3fb58 <PyInit__decimal@@Base+0x27e80>  // b.plast
   3fb4c:	ldr	x0, [sp, #56]
   3fb50:	add	x0, x0, #0x1
   3fb54:	str	x0, [sp, #56]
   3fb58:	ldr	x0, [sp, #56]
   3fb5c:	str	x0, [sp, #72]
   3fb60:	ldr	x0, [sp, #72]
   3fb64:	str	x0, [sp, #64]
   3fb68:	ldr	x0, [sp, #56]
   3fb6c:	lsr	x0, x0, #24
   3fb70:	str	x0, [sp, #56]
   3fb74:	ldr	x1, [sp, #48]
   3fb78:	ldr	x0, [sp, #64]
   3fb7c:	sub	x0, x1, x0
   3fb80:	str	x0, [sp, #64]
   3fb84:	ldr	x0, [sp, #48]
   3fb88:	ldr	x1, [sp, #64]
   3fb8c:	cmp	x1, x0
   3fb90:	b.ls	3fba0 <PyInit__decimal@@Base+0x27ec8>  // b.plast
   3fb94:	ldr	x0, [sp, #56]
   3fb98:	sub	x0, x0, #0x1
   3fb9c:	str	x0, [sp, #56]
   3fba0:	ldr	x0, [sp, #72]
   3fba4:	lsl	x0, x0, #40
   3fba8:	str	x0, [sp, #72]
   3fbac:	ldr	x1, [sp, #72]
   3fbb0:	ldr	x0, [sp, #64]
   3fbb4:	add	x0, x1, x0
   3fbb8:	str	x0, [sp, #48]
   3fbbc:	ldr	x0, [sp, #48]
   3fbc0:	ldr	x1, [sp, #72]
   3fbc4:	cmp	x1, x0
   3fbc8:	b.ls	3fbd8 <PyInit__decimal@@Base+0x27f00>  // b.plast
   3fbcc:	ldr	x0, [sp, #56]
   3fbd0:	add	x0, x0, #0x1
   3fbd4:	str	x0, [sp, #56]
   3fbd8:	ldr	x0, [sp, #56]
   3fbdc:	cmp	x0, #0x0
   3fbe0:	b.ne	3fbf4 <PyInit__decimal@@Base+0x27f1c>  // b.any
   3fbe4:	ldr	x0, [sp, #48]
   3fbe8:	ldr	x1, [sp, #24]
   3fbec:	cmp	x1, x0
   3fbf0:	b.hi	3fc04 <PyInit__decimal@@Base+0x27f2c>  // b.pmore
   3fbf4:	ldr	x1, [sp, #48]
   3fbf8:	ldr	x0, [sp, #24]
   3fbfc:	sub	x0, x1, x0
   3fc00:	b	3fc08 <PyInit__decimal@@Base+0x27f30>
   3fc04:	ldr	x0, [sp, #48]
   3fc08:	ldp	x29, x30, [sp], #80
   3fc0c:	ret
   3fc10:	stp	x29, x30, [sp, #-48]!
   3fc14:	mov	x29, sp
   3fc18:	str	x0, [sp, #40]
   3fc1c:	str	x1, [sp, #32]
   3fc20:	str	x2, [sp, #24]
   3fc24:	str	x3, [sp, #16]
   3fc28:	ldr	x0, [sp, #40]
   3fc2c:	ldr	x0, [x0]
   3fc30:	ldr	x2, [sp, #16]
   3fc34:	ldr	x1, [sp, #24]
   3fc38:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fc3c:	mov	x1, x0
   3fc40:	ldr	x0, [sp, #40]
   3fc44:	str	x1, [x0]
   3fc48:	ldr	x0, [sp, #32]
   3fc4c:	ldr	x0, [x0]
   3fc50:	ldr	x2, [sp, #16]
   3fc54:	ldr	x1, [sp, #24]
   3fc58:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fc5c:	mov	x1, x0
   3fc60:	ldr	x0, [sp, #32]
   3fc64:	str	x1, [x0]
   3fc68:	nop
   3fc6c:	ldp	x29, x30, [sp], #48
   3fc70:	ret
   3fc74:	stp	x29, x30, [sp, #-64]!
   3fc78:	mov	x29, sp
   3fc7c:	str	x0, [sp, #56]
   3fc80:	str	x1, [sp, #48]
   3fc84:	str	x2, [sp, #40]
   3fc88:	str	x3, [sp, #32]
   3fc8c:	str	x4, [sp, #24]
   3fc90:	ldr	x0, [sp, #56]
   3fc94:	ldr	x0, [x0]
   3fc98:	ldr	x2, [sp, #24]
   3fc9c:	ldr	x1, [sp, #48]
   3fca0:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fca4:	mov	x1, x0
   3fca8:	ldr	x0, [sp, #56]
   3fcac:	str	x1, [x0]
   3fcb0:	ldr	x0, [sp, #40]
   3fcb4:	ldr	x0, [x0]
   3fcb8:	ldr	x2, [sp, #24]
   3fcbc:	ldr	x1, [sp, #32]
   3fcc0:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fcc4:	mov	x1, x0
   3fcc8:	ldr	x0, [sp, #40]
   3fccc:	str	x1, [x0]
   3fcd0:	nop
   3fcd4:	ldp	x29, x30, [sp], #64
   3fcd8:	ret
   3fcdc:	stp	x29, x30, [sp, #-64]!
   3fce0:	mov	x29, sp
   3fce4:	str	x0, [sp, #40]
   3fce8:	str	x1, [sp, #32]
   3fcec:	str	x2, [sp, #24]
   3fcf0:	mov	x0, #0x1                   	// #1
   3fcf4:	str	x0, [sp, #56]
   3fcf8:	b	3fd40 <PyInit__decimal@@Base+0x28068>
   3fcfc:	ldr	x0, [sp, #32]
   3fd00:	and	x0, x0, #0x1
   3fd04:	cmp	x0, #0x0
   3fd08:	b.eq	3fd20 <PyInit__decimal@@Base+0x28048>  // b.none
   3fd0c:	ldr	x2, [sp, #24]
   3fd10:	ldr	x1, [sp, #40]
   3fd14:	ldr	x0, [sp, #56]
   3fd18:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fd1c:	str	x0, [sp, #56]
   3fd20:	ldr	x2, [sp, #24]
   3fd24:	ldr	x1, [sp, #40]
   3fd28:	ldr	x0, [sp, #40]
   3fd2c:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fd30:	str	x0, [sp, #40]
   3fd34:	ldr	x0, [sp, #32]
   3fd38:	lsr	x0, x0, #1
   3fd3c:	str	x0, [sp, #32]
   3fd40:	ldr	x0, [sp, #32]
   3fd44:	cmp	x0, #0x0
   3fd48:	b.ne	3fcfc <PyInit__decimal@@Base+0x28024>  // b.any
   3fd4c:	ldr	x0, [sp, #56]
   3fd50:	ldp	x29, x30, [sp], #64
   3fd54:	ret
   3fd58:	stp	x29, x30, [sp, #-160]!
   3fd5c:	mov	x29, sp
   3fd60:	str	x0, [sp, #40]
   3fd64:	str	x1, [sp, #32]
   3fd68:	str	w2, [sp, #28]
   3fd6c:	ldr	x0, [sp, #32]
   3fd70:	bl	3f550 <PyInit__decimal@@Base+0x27878>
   3fd74:	sxtw	x0, w0
   3fd78:	str	x0, [sp, #120]
   3fd7c:	ldr	x0, [sp, #120]
   3fd80:	lsr	x0, x0, #1
   3fd84:	mov	w1, w0
   3fd88:	mov	x0, #0x1                   	// #1
   3fd8c:	lsl	x0, x0, x1
   3fd90:	str	x0, [sp, #112]
   3fd94:	ldr	x0, [sp, #120]
   3fd98:	mov	w1, w0
   3fd9c:	ldr	x0, [sp, #120]
   3fda0:	lsr	x0, x0, #1
   3fda4:	sub	w0, w1, w0
   3fda8:	mov	x1, #0x1                   	// #1
   3fdac:	lsl	x0, x1, x0
   3fdb0:	str	x0, [sp, #104]
   3fdb4:	ldr	x2, [sp, #112]
   3fdb8:	ldr	x1, [sp, #104]
   3fdbc:	ldr	x0, [sp, #40]
   3fdc0:	bl	4127c <PyInit__decimal@@Base+0x295a4>
   3fdc4:	cmp	w0, #0x0
   3fdc8:	b.ne	3fdd4 <PyInit__decimal@@Base+0x280fc>  // b.any
   3fdcc:	mov	w0, #0x0                   	// #0
   3fdd0:	b	400a8 <PyInit__decimal@@Base+0x283d0>
   3fdd4:	ldr	w2, [sp, #28]
   3fdd8:	mov	w1, #0xffffffff            	// #-1
   3fddc:	ldr	x0, [sp, #104]
   3fde0:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   3fde4:	str	x0, [sp, #152]
   3fde8:	ldr	x0, [sp, #152]
   3fdec:	cmp	x0, #0x0
   3fdf0:	b.ne	3fdfc <PyInit__decimal@@Base+0x28124>  // b.any
   3fdf4:	mov	w0, #0x0                   	// #0
   3fdf8:	b	400a8 <PyInit__decimal@@Base+0x283d0>
   3fdfc:	ldr	x0, [sp, #40]
   3fe00:	str	x0, [sp, #144]
   3fe04:	b	3fe2c <PyInit__decimal@@Base+0x28154>
   3fe08:	ldr	x2, [sp, #152]
   3fe0c:	ldr	x1, [sp, #104]
   3fe10:	ldr	x0, [sp, #144]
   3fe14:	bl	1defc <PyInit__decimal@@Base+0x6224>
   3fe18:	ldr	x0, [sp, #104]
   3fe1c:	lsl	x0, x0, #3
   3fe20:	ldr	x1, [sp, #144]
   3fe24:	add	x0, x1, x0
   3fe28:	str	x0, [sp, #144]
   3fe2c:	ldr	x0, [sp, #32]
   3fe30:	lsl	x0, x0, #3
   3fe34:	ldr	x1, [sp, #40]
   3fe38:	add	x0, x1, x0
   3fe3c:	ldr	x1, [sp, #144]
   3fe40:	cmp	x1, x0
   3fe44:	b.cc	3fe08 <PyInit__decimal@@Base+0x28130>  // b.lo, b.ul, b.last
   3fe48:	ldr	x2, [sp, #104]
   3fe4c:	ldr	x1, [sp, #112]
   3fe50:	ldr	x0, [sp, #40]
   3fe54:	bl	4127c <PyInit__decimal@@Base+0x295a4>
   3fe58:	cmp	w0, #0x0
   3fe5c:	b.ne	3fe7c <PyInit__decimal@@Base+0x281a4>  // b.any
   3fe60:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   3fe64:	add	x0, x0, #0x6f8
   3fe68:	ldr	x1, [x0]
   3fe6c:	ldr	x0, [sp, #152]
   3fe70:	blr	x1
   3fe74:	mov	w0, #0x0                   	// #0
   3fe78:	b	400a8 <PyInit__decimal@@Base+0x283d0>
   3fe7c:	add	x0, sp, #0x50
   3fe80:	mov	x1, x0
   3fe84:	ldr	w0, [sp, #28]
   3fe88:	bl	3f680 <PyInit__decimal@@Base+0x279a8>
   3fe8c:	ldr	w2, [sp, #28]
   3fe90:	mov	w1, #0xffffffff            	// #-1
   3fe94:	ldr	x0, [sp, #32]
   3fe98:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   3fe9c:	str	x0, [sp, #96]
   3fea0:	mov	x0, #0x1                   	// #1
   3fea4:	str	x0, [sp, #136]
   3fea8:	b	3ffe8 <PyInit__decimal@@Base+0x28310>
   3feac:	mov	x0, #0x1                   	// #1
   3feb0:	str	x0, [sp, #72]
   3feb4:	ldr	x0, [sp, #80]
   3feb8:	mov	x2, x0
   3febc:	ldr	x1, [sp, #136]
   3fec0:	ldr	x0, [sp, #96]
   3fec4:	bl	3fcdc <PyInit__decimal@@Base+0x28004>
   3fec8:	str	x0, [sp, #64]
   3fecc:	ldr	x0, [sp, #64]
   3fed0:	ldr	x1, [sp, #64]
   3fed4:	ldr	x2, [sp, #80]
   3fed8:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   3fedc:	str	x0, [sp, #88]
   3fee0:	str	xzr, [sp, #128]
   3fee4:	b	3ffcc <PyInit__decimal@@Base+0x282f4>
   3fee8:	ldr	x1, [sp, #136]
   3feec:	ldr	x0, [sp, #112]
   3fef0:	mul	x1, x1, x0
   3fef4:	ldr	x0, [sp, #128]
   3fef8:	add	x0, x1, x0
   3fefc:	lsl	x0, x0, #3
   3ff00:	ldr	x1, [sp, #40]
   3ff04:	add	x0, x1, x0
   3ff08:	ldr	x0, [x0]
   3ff0c:	str	x0, [sp, #56]
   3ff10:	ldr	x1, [sp, #136]
   3ff14:	ldr	x0, [sp, #112]
   3ff18:	mul	x1, x1, x0
   3ff1c:	ldr	x0, [sp, #128]
   3ff20:	add	x0, x1, x0
   3ff24:	add	x0, x0, #0x1
   3ff28:	lsl	x0, x0, #3
   3ff2c:	ldr	x1, [sp, #40]
   3ff30:	add	x0, x1, x0
   3ff34:	ldr	x0, [x0]
   3ff38:	str	x0, [sp, #48]
   3ff3c:	ldr	x1, [sp, #72]
   3ff40:	ldr	x3, [sp, #64]
   3ff44:	ldr	x4, [sp, #80]
   3ff48:	add	x2, sp, #0x30
   3ff4c:	add	x0, sp, #0x38
   3ff50:	bl	3fc74 <PyInit__decimal@@Base+0x27f9c>
   3ff54:	ldr	x2, [sp, #80]
   3ff58:	add	x1, sp, #0x40
   3ff5c:	add	x0, sp, #0x48
   3ff60:	mov	x3, x2
   3ff64:	ldr	x2, [sp, #88]
   3ff68:	bl	3fc10 <PyInit__decimal@@Base+0x27f38>
   3ff6c:	ldr	x1, [sp, #136]
   3ff70:	ldr	x0, [sp, #112]
   3ff74:	mul	x1, x1, x0
   3ff78:	ldr	x0, [sp, #128]
   3ff7c:	add	x0, x1, x0
   3ff80:	lsl	x0, x0, #3
   3ff84:	ldr	x1, [sp, #40]
   3ff88:	add	x0, x1, x0
   3ff8c:	ldr	x1, [sp, #56]
   3ff90:	str	x1, [x0]
   3ff94:	ldr	x1, [sp, #136]
   3ff98:	ldr	x0, [sp, #112]
   3ff9c:	mul	x1, x1, x0
   3ffa0:	ldr	x0, [sp, #128]
   3ffa4:	add	x0, x1, x0
   3ffa8:	add	x0, x0, #0x1
   3ffac:	lsl	x0, x0, #3
   3ffb0:	ldr	x1, [sp, #40]
   3ffb4:	add	x0, x1, x0
   3ffb8:	ldr	x1, [sp, #48]
   3ffbc:	str	x1, [x0]
   3ffc0:	ldr	x0, [sp, #128]
   3ffc4:	add	x0, x0, #0x2
   3ffc8:	str	x0, [sp, #128]
   3ffcc:	ldr	x1, [sp, #128]
   3ffd0:	ldr	x0, [sp, #112]
   3ffd4:	cmp	x1, x0
   3ffd8:	b.cc	3fee8 <PyInit__decimal@@Base+0x28210>  // b.lo, b.ul, b.last
   3ffdc:	ldr	x0, [sp, #136]
   3ffe0:	add	x0, x0, #0x1
   3ffe4:	str	x0, [sp, #136]
   3ffe8:	ldr	x1, [sp, #136]
   3ffec:	ldr	x0, [sp, #104]
   3fff0:	cmp	x1, x0
   3fff4:	b.cc	3feac <PyInit__decimal@@Base+0x281d4>  // b.lo, b.ul, b.last
   3fff8:	ldr	x1, [sp, #112]
   3fffc:	ldr	x0, [sp, #104]
   40000:	cmp	x1, x0
   40004:	b.eq	40044 <PyInit__decimal@@Base+0x2836c>  // b.none
   40008:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   4000c:	add	x0, x0, #0x6f8
   40010:	ldr	x1, [x0]
   40014:	ldr	x0, [sp, #152]
   40018:	blr	x1
   4001c:	ldr	w2, [sp, #28]
   40020:	mov	w1, #0xffffffff            	// #-1
   40024:	ldr	x0, [sp, #112]
   40028:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   4002c:	str	x0, [sp, #152]
   40030:	ldr	x0, [sp, #152]
   40034:	cmp	x0, #0x0
   40038:	b.ne	40044 <PyInit__decimal@@Base+0x2836c>  // b.any
   4003c:	mov	w0, #0x0                   	// #0
   40040:	b	400a8 <PyInit__decimal@@Base+0x283d0>
   40044:	ldr	x0, [sp, #40]
   40048:	str	x0, [sp, #144]
   4004c:	b	40074 <PyInit__decimal@@Base+0x2839c>
   40050:	ldr	x2, [sp, #152]
   40054:	ldr	x1, [sp, #112]
   40058:	ldr	x0, [sp, #144]
   4005c:	bl	1defc <PyInit__decimal@@Base+0x6224>
   40060:	ldr	x0, [sp, #112]
   40064:	lsl	x0, x0, #3
   40068:	ldr	x1, [sp, #144]
   4006c:	add	x0, x1, x0
   40070:	str	x0, [sp, #144]
   40074:	ldr	x0, [sp, #32]
   40078:	lsl	x0, x0, #3
   4007c:	ldr	x1, [sp, #40]
   40080:	add	x0, x1, x0
   40084:	ldr	x1, [sp, #144]
   40088:	cmp	x1, x0
   4008c:	b.cc	40050 <PyInit__decimal@@Base+0x28378>  // b.lo, b.ul, b.last
   40090:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   40094:	add	x0, x0, #0x6f8
   40098:	ldr	x1, [x0]
   4009c:	ldr	x0, [sp, #152]
   400a0:	blr	x1
   400a4:	mov	w0, #0x1                   	// #1
   400a8:	ldp	x29, x30, [sp], #160
   400ac:	ret
   400b0:	stp	x29, x30, [sp, #-160]!
   400b4:	mov	x29, sp
   400b8:	str	x0, [sp, #40]
   400bc:	str	x1, [sp, #32]
   400c0:	str	w2, [sp, #28]
   400c4:	ldr	x0, [sp, #32]
   400c8:	bl	3f550 <PyInit__decimal@@Base+0x27878>
   400cc:	sxtw	x0, w0
   400d0:	str	x0, [sp, #120]
   400d4:	ldr	x0, [sp, #120]
   400d8:	lsr	x0, x0, #1
   400dc:	mov	w1, w0
   400e0:	mov	x0, #0x1                   	// #1
   400e4:	lsl	x0, x0, x1
   400e8:	str	x0, [sp, #112]
   400ec:	ldr	x0, [sp, #120]
   400f0:	mov	w1, w0
   400f4:	ldr	x0, [sp, #120]
   400f8:	lsr	x0, x0, #1
   400fc:	sub	w0, w1, w0
   40100:	mov	x1, #0x1                   	// #1
   40104:	lsl	x0, x1, x0
   40108:	str	x0, [sp, #104]
   4010c:	ldr	w2, [sp, #28]
   40110:	mov	w1, #0x1                   	// #1
   40114:	ldr	x0, [sp, #112]
   40118:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   4011c:	str	x0, [sp, #152]
   40120:	ldr	x0, [sp, #152]
   40124:	cmp	x0, #0x0
   40128:	b.ne	40134 <PyInit__decimal@@Base+0x2845c>  // b.any
   4012c:	mov	w0, #0x0                   	// #0
   40130:	b	40400 <PyInit__decimal@@Base+0x28728>
   40134:	ldr	x0, [sp, #40]
   40138:	str	x0, [sp, #144]
   4013c:	b	40164 <PyInit__decimal@@Base+0x2848c>
   40140:	ldr	x2, [sp, #152]
   40144:	ldr	x1, [sp, #112]
   40148:	ldr	x0, [sp, #144]
   4014c:	bl	1defc <PyInit__decimal@@Base+0x6224>
   40150:	ldr	x0, [sp, #112]
   40154:	lsl	x0, x0, #3
   40158:	ldr	x1, [sp, #144]
   4015c:	add	x0, x1, x0
   40160:	str	x0, [sp, #144]
   40164:	ldr	x0, [sp, #32]
   40168:	lsl	x0, x0, #3
   4016c:	ldr	x1, [sp, #40]
   40170:	add	x0, x1, x0
   40174:	ldr	x1, [sp, #144]
   40178:	cmp	x1, x0
   4017c:	b.cc	40140 <PyInit__decimal@@Base+0x28468>  // b.lo, b.ul, b.last
   40180:	add	x0, sp, #0x50
   40184:	mov	x1, x0
   40188:	ldr	w0, [sp, #28]
   4018c:	bl	3f680 <PyInit__decimal@@Base+0x279a8>
   40190:	ldr	w2, [sp, #28]
   40194:	mov	w1, #0x1                   	// #1
   40198:	ldr	x0, [sp, #32]
   4019c:	bl	3f328 <PyInit__decimal@@Base+0x27650>
   401a0:	str	x0, [sp, #96]
   401a4:	mov	x0, #0x1                   	// #1
   401a8:	str	x0, [sp, #136]
   401ac:	b	402ec <PyInit__decimal@@Base+0x28614>
   401b0:	mov	x0, #0x1                   	// #1
   401b4:	str	x0, [sp, #72]
   401b8:	ldr	x0, [sp, #80]
   401bc:	mov	x2, x0
   401c0:	ldr	x1, [sp, #136]
   401c4:	ldr	x0, [sp, #96]
   401c8:	bl	3fcdc <PyInit__decimal@@Base+0x28004>
   401cc:	str	x0, [sp, #64]
   401d0:	ldr	x0, [sp, #64]
   401d4:	ldr	x1, [sp, #64]
   401d8:	ldr	x2, [sp, #80]
   401dc:	bl	3f728 <PyInit__decimal@@Base+0x27a50>
   401e0:	str	x0, [sp, #88]
   401e4:	str	xzr, [sp, #128]
   401e8:	b	402d0 <PyInit__decimal@@Base+0x285f8>
   401ec:	ldr	x1, [sp, #136]
   401f0:	ldr	x0, [sp, #112]
   401f4:	mul	x1, x1, x0
   401f8:	ldr	x0, [sp, #128]
   401fc:	add	x0, x1, x0
   40200:	lsl	x0, x0, #3
   40204:	ldr	x1, [sp, #40]
   40208:	add	x0, x1, x0
   4020c:	ldr	x0, [x0]
   40210:	str	x0, [sp, #56]
   40214:	ldr	x1, [sp, #136]
   40218:	ldr	x0, [sp, #112]
   4021c:	mul	x1, x1, x0
   40220:	ldr	x0, [sp, #128]
   40224:	add	x0, x1, x0
   40228:	add	x0, x0, #0x1
   4022c:	lsl	x0, x0, #3
   40230:	ldr	x1, [sp, #40]
   40234:	add	x0, x1, x0
   40238:	ldr	x0, [x0]
   4023c:	str	x0, [sp, #48]
   40240:	ldr	x1, [sp, #72]
   40244:	ldr	x3, [sp, #64]
   40248:	ldr	x4, [sp, #80]
   4024c:	add	x2, sp, #0x30
   40250:	add	x0, sp, #0x38
   40254:	bl	3fc74 <PyInit__decimal@@Base+0x27f9c>
   40258:	ldr	x2, [sp, #80]
   4025c:	add	x1, sp, #0x40
   40260:	add	x0, sp, #0x48
   40264:	mov	x3, x2
   40268:	ldr	x2, [sp, #88]
   4026c:	bl	3fc10 <PyInit__decimal@@Base+0x27f38>
   40270:	ldr	x1, [sp, #136]
   40274:	ldr	x0, [sp, #112]
   40278:	mul	x1, x1, x0
   4027c:	ldr	x0, [sp, #128]
   40280:	add	x0, x1, x0
   40284:	lsl	x0, x0, #3
   40288:	ldr	x1, [sp, #40]
   4028c:	add	x0, x1, x0
   40290:	ldr	x1, [sp, #56]
   40294:	str	x1, [x0]
   40298:	ldr	x1, [sp, #136]
   4029c:	ldr	x0, [sp, #112]
   402a0:	mul	x1, x1, x0
   402a4:	ldr	x0, [sp, #128]
   402a8:	add	x0, x1, x0
   402ac:	add	x0, x0, #0x1
   402b0:	lsl	x0, x0, #3
   402b4:	ldr	x1, [sp, #40]
   402b8:	add	x0, x1, x0
   402bc:	ldr	x1, [sp, #48]
   402c0:	str	x1, [x0]
   402c4:	ldr	x0, [sp, #128]
   402c8:	add	x0, x0, #0x2
   402cc:	str	x0, [sp, #128]
   402d0:	ldr	x1, [sp, #128]
   402d4:	ldr	x0, [sp, #112]
   402d8:	cmp	x1, x0
   402dc:	b.cc	401ec <PyInit__decimal@@Base+0x28514>  // b.lo, b.ul, b.last
   402e0:	ldr	x0, [sp, #136]
   402e4:	add	x0, x0, #0x1
   402e8:	str	x0, [sp, #136]
   402ec:	ldr	x1, [sp, #136]
   402f0:	ldr	x0, [sp, #104]
   402f4:	cmp	x1, x0
   402f8:	b.cc	401b0 <PyInit__decimal@@Base+0x284d8>  // b.lo, b.ul, b.last
   402fc:	ldr	x2, [sp, #112]
   40300:	ldr	x1, [sp, #104]
   40304:	ldr	x0, [sp, #40]
   40308:	bl	4127c <PyInit__decimal@@Base+0x295a4>
   4030c:	cmp	w0, #0x0
   40310:	b.ne	40330 <PyInit__decimal@@Base+0x28658>  // b.any
   40314:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   40318:	add	x0, x0, #0x6f8
   4031c:	ldr	x1, [x0]
   40320:	ldr	x0, [sp, #152]
   40324:	blr	x1
   40328:	mov	w0, #0x0                   	// #0
   4032c:	b	40400 <PyInit__decimal@@Base+0x28728>
   40330:	ldr	x1, [sp, #104]
   40334:	ldr	x0, [sp, #112]
   40338:	cmp	x1, x0
   4033c:	b.eq	4037c <PyInit__decimal@@Base+0x286a4>  // b.none
   40340:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   40344:	add	x0, x0, #0x6f8
   40348:	ldr	x1, [x0]
   4034c:	ldr	x0, [sp, #152]
   40350:	blr	x1
   40354:	ldr	w2, [sp, #28]
   40358:	mov	w1, #0x1                   	// #1
   4035c:	ldr	x0, [sp, #104]
   40360:	bl	3f3cc <PyInit__decimal@@Base+0x276f4>
   40364:	str	x0, [sp, #152]
   40368:	ldr	x0, [sp, #152]
   4036c:	cmp	x0, #0x0
   40370:	b.ne	4037c <PyInit__decimal@@Base+0x286a4>  // b.any
   40374:	mov	w0, #0x0                   	// #0
   40378:	b	40400 <PyInit__decimal@@Base+0x28728>
   4037c:	ldr	x0, [sp, #40]
   40380:	str	x0, [sp, #144]
   40384:	b	403ac <PyInit__decimal@@Base+0x286d4>
   40388:	ldr	x2, [sp, #152]
   4038c:	ldr	x1, [sp, #104]
   40390:	ldr	x0, [sp, #144]
   40394:	bl	1defc <PyInit__decimal@@Base+0x6224>
   40398:	ldr	x0, [sp, #104]
   4039c:	lsl	x0, x0, #3
   403a0:	ldr	x1, [sp, #144]
   403a4:	add	x0, x1, x0
   403a8:	str	x0, [sp, #144]
   403ac:	ldr	x0, [sp, #32]
   403b0:	lsl	x0, x0, #3
   403b4:	ldr	x1, [sp, #40]
   403b8:	add	x0, x1, x0
   403bc:	ldr	x1, [sp, #144]
   403c0:	cmp	x1, x0
   403c4:	b.cc	40388 <PyInit__decimal@@Base+0x286b0>  // b.lo, b.ul, b.last
   403c8:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   403cc:	add	x0, x0, #0x6f8
   403d0:	ldr	x1, [x0]
   403d4:	ldr	x0, [sp, #152]
   403d8:	blr	x1
   403dc:	ldr	x2, [sp, #104]
   403e0:	ldr	x1, [sp, #112]
   403e4:	ldr	x0, [sp, #40]
   403e8:	bl	4127c <PyInit__decimal@@Base+0x295a4>
   403ec:	cmp	w0, #0x0
   403f0:	b.ne	403fc <PyInit__decimal@@Base+0x28724>  // b.any
   403f4:	mov	w0, #0x0                   	// #0
   403f8:	b	40400 <PyInit__decimal@@Base+0x28728>
   403fc:	mov	w0, #0x1                   	// #1
   40400:	ldp	x29, x30, [sp], #160
   40404:	ret
   40408:	sub	sp, sp, #0x30
   4040c:	str	x0, [sp, #24]
   40410:	str	x1, [sp, #16]
   40414:	str	x2, [sp, #8]
   40418:	str	x3, [sp]
   4041c:	ldr	x0, [sp, #8]
   40420:	mov	x6, x0
   40424:	mov	x7, #0x0                   	// #0
   40428:	ldr	x0, [sp]
   4042c:	mov	x4, x0
   40430:	mov	x5, #0x0                   	// #0
   40434:	mul	x1, x6, x4
   40438:	umulh	x0, x6, x4
   4043c:	madd	x0, x7, x4, x0
   40440:	madd	x0, x6, x5, x0
   40444:	mov	x8, x1
   40448:	mov	x9, x0
   4044c:	stp	x8, x9, [sp, #32]
   40450:	ldr	x0, [sp, #40]
   40454:	mov	x10, x0
   40458:	mov	x11, #0x0                   	// #0
   4045c:	mov	x1, x10
   40460:	ldr	x0, [sp, #24]
   40464:	str	x1, [x0]
   40468:	ldr	x1, [sp, #32]
   4046c:	ldr	x0, [sp, #16]
   40470:	str	x1, [x0]
   40474:	nop
   40478:	add	sp, sp, #0x30
   4047c:	ret
   40480:	stp	x29, x30, [sp, #-80]!
   40484:	mov	x29, sp
   40488:	str	x0, [sp, #56]
   4048c:	str	x1, [sp, #48]
   40490:	str	x2, [sp, #40]
   40494:	str	x3, [sp, #32]
   40498:	str	x4, [sp, #24]
   4049c:	ldr	x0, [sp, #40]
   404a0:	mov	x14, x0
   404a4:	mov	x15, #0x0                   	// #0
   404a8:	mov	x7, x14
   404ac:	mov	x6, #0x0                   	// #0
   404b0:	ldr	x0, [sp, #32]
   404b4:	mov	x10, x0
   404b8:	mov	x11, #0x0                   	// #0
   404bc:	mov	x0, x10
   404c0:	adds	x1, x6, x0
   404c4:	mov	x0, x11
   404c8:	adc	x0, x7, x0
   404cc:	mov	x8, x1
   404d0:	mov	x9, x0
   404d4:	stp	x8, x9, [sp, #64]
   404d8:	ldr	x0, [sp, #24]
   404dc:	mov	x12, x0
   404e0:	mov	x13, #0x0                   	// #0
   404e4:	mov	x2, x12
   404e8:	mov	x3, x13
   404ec:	ldp	x0, x1, [sp, #64]
   404f0:	bl	413a4 <PyInit__decimal@@Base+0x296cc>
   404f4:	mov	x1, x0
   404f8:	ldr	x0, [sp, #56]
   404fc:	str	x1, [x0]
   40500:	ldr	x1, [sp, #64]
   40504:	ldr	x0, [sp, #56]
   40508:	ldr	x2, [x0]
   4050c:	ldr	x0, [sp, #24]
   40510:	mul	x0, x2, x0
   40514:	sub	x1, x1, x0
   40518:	ldr	x0, [sp, #48]
   4051c:	str	x1, [x0]
   40520:	nop
   40524:	ldp	x29, x30, [sp], #80
   40528:	ret
   4052c:	stp	x29, x30, [sp, #-48]!
   40530:	mov	x29, sp
   40534:	str	x0, [sp, #24]
   40538:	str	x1, [sp, #16]
   4053c:	add	x1, sp, #0x20
   40540:	add	x0, sp, #0x28
   40544:	ldr	x3, [sp, #16]
   40548:	ldr	x2, [sp, #24]
   4054c:	bl	40408 <PyInit__decimal@@Base+0x28730>
   40550:	ldr	x0, [sp, #40]
   40554:	cmp	x0, #0x0
   40558:	b.eq	405c4 <PyInit__decimal@@Base+0x288ec>  // b.none
   4055c:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   40560:	ldr	x0, [x0, #3904]
   40564:	ldr	x4, [x0]
   40568:	mov	w3, #0x26c                 	// #620
   4056c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   40570:	add	x2, x0, #0xcd0
   40574:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   40578:	add	x1, x0, #0xd10
   4057c:	mov	x0, x4
   40580:	bl	6b30 <fprintf@plt>
   40584:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   40588:	ldr	x0, [x0, #3904]
   4058c:	ldr	x0, [x0]
   40590:	mov	x3, x0
   40594:	mov	x2, #0x29                  	// #41
   40598:	mov	x1, #0x1                   	// #1
   4059c:	adrp	x0, 49000 <PyInit__decimal@@Base+0x31328>
   405a0:	add	x0, x0, #0xd20
   405a4:	bl	69d0 <fwrite@plt>
   405a8:	adrp	x0, 60000 <PyInit__decimal@@Base+0x48328>
   405ac:	ldr	x0, [x0, #3904]
   405b0:	ldr	x0, [x0]
   405b4:	mov	x1, x0
   405b8:	mov	w0, #0xa                   	// #10
   405bc:	bl	6660 <fputc@plt>
   405c0:	bl	6860 <abort@plt>
   405c4:	ldr	x0, [sp, #32]
   405c8:	ldp	x29, x30, [sp], #48
   405cc:	ret
   405d0:	stp	x29, x30, [sp, #-80]!
   405d4:	mov	x29, sp
   405d8:	str	x0, [sp, #40]
   405dc:	str	x1, [sp, #32]
   405e0:	str	x2, [sp, #24]
   405e4:	add	x1, sp, #0x40
   405e8:	add	x0, sp, #0x48
   405ec:	ldr	x3, [sp, #32]
   405f0:	ldr	x2, [sp, #40]
   405f4:	bl	40408 <PyInit__decimal@@Base+0x28730>
   405f8:	ldr	x2, [sp, #72]
   405fc:	ldr	x3, [sp, #64]
   40600:	add	x1, sp, #0x30
   40604:	add	x0, sp, #0x38
   40608:	ldr	x4, [sp, #24]
   4060c:	bl	40480 <PyInit__decimal@@Base+0x287a8>
   40610:	ldr	x0, [sp, #48]
   40614:	ldp	x29, x30, [sp], #80
   40618:	ret
   4061c:	sub	sp, sp, #0x20
   40620:	str	x0, [sp, #8]
   40624:	str	x1, [sp]
   40628:	ldr	x0, [sp]
   4062c:	ldr	x0, [x0]
   40630:	str	x0, [sp, #24]
   40634:	ldr	x0, [sp, #8]
   40638:	ldr	x1, [x0]
   4063c:	ldr	x0, [sp]
   40640:	str	x1, [x0]
   40644:	ldr	x0, [sp, #8]
   40648:	ldr	x1, [sp, #24]
   4064c:	str	x1, [x0]
   40650:	nop
   40654:	add	sp, sp, #0x20
   40658:	ret
   4065c:	sub	sp, sp, #0x40
   40660:	str	x0, [sp, #24]
   40664:	str	x1, [sp, #16]
   40668:	str	x2, [sp, #8]
   4066c:	str	x3, [sp]
   40670:	str	xzr, [sp, #40]
   40674:	b	40704 <PyInit__decimal@@Base+0x28a2c>
   40678:	ldr	x1, [sp, #40]
   4067c:	ldr	x0, [sp]
   40680:	mul	x0, x1, x0
   40684:	str	x0, [sp, #48]
   40688:	ldr	x0, [sp, #40]
   4068c:	str	x0, [sp, #56]
   40690:	str	xzr, [sp, #32]
   40694:	b	406e8 <PyInit__decimal@@Base+0x28a10>
   40698:	ldr	x0, [sp, #48]
   4069c:	lsl	x0, x0, #3
   406a0:	ldr	x1, [sp, #16]
   406a4:	add	x1, x1, x0
   406a8:	ldr	x0, [sp, #56]
   406ac:	lsl	x0, x0, #3
   406b0:	ldr	x2, [sp, #24]
   406b4:	add	x0, x2, x0
   406b8:	ldr	x1, [x1]
   406bc:	str	x1, [x0]
   406c0:	ldr	x0, [sp, #48]
   406c4:	add	x0, x0, #0x1
   406c8:	str	x0, [sp, #48]
   406cc:	ldr	x1, [sp, #56]
   406d0:	ldr	x0, [sp, #8]
   406d4:	add	x0, x1, x0
   406d8:	str	x0, [sp, #56]
   406dc:	ldr	x0, [sp, #32]
   406e0:	add	x0, x0, #0x1
   406e4:	str	x0, [sp, #32]
   406e8:	ldr	x1, [sp, #32]
   406ec:	ldr	x0, [sp]
   406f0:	cmp	x1, x0
   406f4:	b.cc	40698 <PyInit__decimal@@Base+0x289c0>  // b.lo, b.ul, b.last
   406f8:	ldr	x0, [sp, #40]
   406fc:	add	x0, x0, #0x1
   40700:	str	x0, [sp, #40]
   40704:	ldr	x1, [sp, #40]
   40708:	ldr	x0, [sp, #8]
   4070c:	cmp	x1, x0
   40710:	b.cc	40678 <PyInit__decimal@@Base+0x289a0>  // b.lo, b.ul, b.last
   40714:	nop
   40718:	nop
   4071c:	add	sp, sp, #0x40
   40720:	ret
   40724:	sub	sp, sp, #0xa0
   40728:	sub	sp, sp, #0x10, lsl #12
   4072c:	stp	x29, x30, [sp]
   40730:	mov	x29, sp
   40734:	str	x0, [sp, #40]
   40738:	str	x1, [sp, #32]
   4073c:	str	x2, [sp, #24]
   40740:	str	w3, [sp, #20]
   40744:	mov	x0, #0x1000                	// #4096
   40748:	add	x1, sp, #0x10, lsl #12
   4074c:	str	x0, [x1, #112]
   40750:	add	x0, sp, #0x10, lsl #12
   40754:	str	xzr, [x0, #136]
   40758:	ldr	w0, [sp, #20]
   4075c:	cmp	w0, #0x0
   40760:	b.ne	40774 <PyInit__decimal@@Base+0x28a9c>  // b.any
   40764:	ldr	x0, [sp, #32]
   40768:	add	x1, sp, #0x10, lsl #12
   4076c:	str	x0, [x1, #136]
   40770:	b	40794 <PyInit__decimal@@Base+0x28abc>
   40774:	ldr	w0, [sp, #20]
   40778:	cmp	w0, #0x1
   4077c:	b.ne	40790 <PyInit__decimal@@Base+0x28ab8>  // b.any
   40780:	mov	x0, #0x2                   	// #2
   40784:	add	x1, sp, #0x10, lsl #12
   40788:	str	x0, [x1, #136]
   4078c:	b	40794 <PyInit__decimal@@Base+0x28abc>
   40790:	bl	6860 <abort@plt>
   40794:	ldr	x0, [sp, #24]
   40798:	sub	x0, x0, #0x1
   4079c:	add	x1, sp, #0x10, lsl #12
   407a0:	str	x0, [x1, #104]
   407a4:	ldr	x0, [sp, #32]
   407a8:	add	x1, sp, #0x10, lsl #12
   407ac:	str	x0, [x1, #96]
   407b0:	mov	x0, #0x40                  	// #64
   407b4:	add	x1, sp, #0x10, lsl #12
   407b8:	str	x0, [x1, #88]
   407bc:	add	x0, sp, #0x10, lsl #12
   407c0:	ldr	x0, [x0, #96]
   407c4:	lsr	x0, x0, #3
   407c8:	add	x0, x0, #0x1
   407cc:	mov	x1, #0x8                   	// #8
   407d0:	bl	234ec <PyInit__decimal@@Base+0xb814>
   407d4:	add	x1, sp, #0x10, lsl #12
   407d8:	str	x0, [x1, #80]
   407dc:	add	x0, sp, #0x10, lsl #12
   407e0:	ldr	x0, [x0, #80]
   407e4:	cmp	x0, #0x0
   407e8:	b.ne	407f4 <PyInit__decimal@@Base+0x28b1c>  // b.any
   407ec:	mov	w0, #0x0                   	// #0
   407f0:	b	40bfc <PyInit__decimal@@Base+0x28f24>
   407f4:	mov	x0, #0x1                   	// #1
   407f8:	add	x1, sp, #0x10, lsl #12
   407fc:	str	x0, [x1, #144]
   40800:	b	40bc8 <PyInit__decimal@@Base+0x28ef0>
   40804:	add	x0, sp, #0x10, lsl #12
   40808:	ldr	x1, [x0, #144]
   4080c:	add	x0, sp, #0x10, lsl #12
   40810:	ldr	x0, [x0, #88]
   40814:	udiv	x0, x1, x0
   40818:	lsl	x0, x0, #3
   4081c:	add	x1, sp, #0x10, lsl #12
   40820:	ldr	x1, [x1, #80]
   40824:	add	x0, x1, x0
   40828:	ldr	x1, [x0]
   4082c:	add	x0, sp, #0x10, lsl #12
   40830:	ldr	x0, [x0, #144]
   40834:	add	x2, sp, #0x10, lsl #12
   40838:	ldr	x2, [x2, #88]
   4083c:	udiv	x3, x0, x2
   40840:	add	x2, sp, #0x10, lsl #12
   40844:	ldr	x2, [x2, #88]
   40848:	mul	x2, x3, x2
   4084c:	sub	x2, x0, x2
   40850:	adrp	x0, 48000 <PyInit__decimal@@Base+0x30328>
   40854:	add	x0, x0, #0xbb0
   40858:	ldr	x0, [x0, x2, lsl #3]
   4085c:	and	x0, x1, x0
   40860:	cmp	x0, #0x0
   40864:	b.ne	40bb0 <PyInit__decimal@@Base+0x28ed8>  // b.any
   40868:	add	x0, sp, #0x8, lsl #12
   4086c:	add	x0, x0, #0x48
   40870:	str	x0, [sp, #64]
   40874:	add	x0, sp, #0x48
   40878:	str	x0, [sp, #56]
   4087c:	add	x0, sp, #0x10, lsl #12
   40880:	str	xzr, [x0, #128]
   40884:	b	40b94 <PyInit__decimal@@Base+0x28ebc>
   40888:	add	x0, sp, #0x10, lsl #12
   4088c:	ldr	x1, [x0, #128]
   40890:	add	x0, sp, #0x10, lsl #12
   40894:	ldr	x0, [x0, #112]
   40898:	add	x1, x1, x0
   4089c:	ldr	x0, [sp, #24]
   408a0:	lsr	x0, x0, #1
   408a4:	cmp	x1, x0
   408a8:	b.cc	408c4 <PyInit__decimal@@Base+0x28bec>  // b.lo, b.ul, b.last
   408ac:	ldr	x0, [sp, #24]
   408b0:	lsr	x1, x0, #1
   408b4:	add	x0, sp, #0x10, lsl #12
   408b8:	ldr	x0, [x0, #128]
   408bc:	sub	x0, x1, x0
   408c0:	b	408cc <PyInit__decimal@@Base+0x28bf4>
   408c4:	add	x0, sp, #0x10, lsl #12
   408c8:	ldr	x0, [x0, #112]
   408cc:	add	x1, sp, #0x10, lsl #12
   408d0:	str	x0, [x1, #72]
   408d4:	add	x0, sp, #0x10, lsl #12
   408d8:	ldr	x1, [x0, #144]
   408dc:	ldr	x0, [sp, #24]
   408e0:	mul	x0, x1, x0
   408e4:	lsr	x0, x0, #1
   408e8:	lsl	x0, x0, #3
   408ec:	ldr	x1, [sp, #40]
   408f0:	add	x0, x1, x0
   408f4:	add	x1, sp, #0x10, lsl #12
   408f8:	str	x0, [x1, #152]
   408fc:	ldr	x3, [sp, #64]
   40900:	add	x0, sp, #0x10, lsl #12
   40904:	ldr	x0, [x0, #128]
   40908:	lsl	x0, x0, #3
   4090c:	add	x1, sp, #0x10, lsl #12
   40910:	ldr	x1, [x1, #152]
   40914:	add	x1, x1, x0
   40918:	add	x0, sp, #0x10, lsl #12
   4091c:	ldr	x0, [x0, #72]
   40920:	lsl	x0, x0, #3
   40924:	mov	x2, x0
   40928:	mov	x0, x3
   4092c:	bl	6510 <memcpy@plt>
   40930:	add	x1, sp, #0x38
   40934:	add	x0, sp, #0x40
   40938:	bl	4061c <PyInit__decimal@@Base+0x28944>
   4093c:	add	x0, sp, #0x10, lsl #12
   40940:	ldr	x2, [x0, #104]
   40944:	add	x0, sp, #0x10, lsl #12
   40948:	ldr	x1, [x0, #136]
   4094c:	add	x0, sp, #0x10, lsl #12
   40950:	ldr	x0, [x0, #144]
   40954:	bl	405d0 <PyInit__decimal@@Base+0x288f8>
   40958:	add	x1, sp, #0x10, lsl #12
   4095c:	str	x0, [x1, #120]
   40960:	add	x0, sp, #0x10, lsl #12
   40964:	ldr	x1, [x0, #120]
   40968:	ldr	x0, [sp, #24]
   4096c:	mul	x0, x1, x0
   40970:	lsr	x0, x0, #1
   40974:	lsl	x0, x0, #3
   40978:	ldr	x1, [sp, #40]
   4097c:	add	x0, x1, x0
   40980:	add	x1, sp, #0x10, lsl #12
   40984:	str	x0, [x1, #152]
   40988:	b	40abc <PyInit__decimal@@Base+0x28de4>
   4098c:	ldr	x3, [sp, #64]
   40990:	add	x0, sp, #0x10, lsl #12
   40994:	ldr	x0, [x0, #128]
   40998:	lsl	x0, x0, #3
   4099c:	add	x1, sp, #0x10, lsl #12
   409a0:	ldr	x1, [x1, #152]
   409a4:	add	x1, x1, x0
   409a8:	add	x0, sp, #0x10, lsl #12
   409ac:	ldr	x0, [x0, #72]
   409b0:	lsl	x0, x0, #3
   409b4:	mov	x2, x0
   409b8:	mov	x0, x3
   409bc:	bl	6510 <memcpy@plt>
   409c0:	add	x0, sp, #0x10, lsl #12
   409c4:	ldr	x0, [x0, #128]
   409c8:	lsl	x0, x0, #3
   409cc:	add	x1, sp, #0x10, lsl #12
   409d0:	ldr	x1, [x1, #152]
   409d4:	add	x3, x1, x0
   409d8:	ldr	x1, [sp, #56]
   409dc:	add	x0, sp, #0x10, lsl #12
   409e0:	ldr	x0, [x0, #72]
   409e4:	lsl	x0, x0, #3
   409e8:	mov	x2, x0
   409ec:	mov	x0, x3
   409f0:	bl	6510 <memcpy@plt>
   409f4:	add	x1, sp, #0x38
   409f8:	add	x0, sp, #0x40
   409fc:	bl	4061c <PyInit__decimal@@Base+0x28944>
   40a00:	add	x0, sp, #0x10, lsl #12
   40a04:	ldr	x1, [x0, #120]
   40a08:	add	x0, sp, #0x10, lsl #12
   40a0c:	ldr	x0, [x0, #88]
   40a10:	udiv	x0, x1, x0
   40a14:	lsl	x1, x0, #3
   40a18:	add	x2, sp, #0x10, lsl #12
   40a1c:	ldr	x2, [x2, #80]
   40a20:	add	x1, x2, x1
   40a24:	ldr	x2, [x1]
   40a28:	add	x1, sp, #0x10, lsl #12
   40a2c:	ldr	x1, [x1, #120]
   40a30:	add	x3, sp, #0x10, lsl #12
   40a34:	ldr	x3, [x3, #88]
   40a38:	udiv	x4, x1, x3
   40a3c:	add	x3, sp, #0x10, lsl #12
   40a40:	ldr	x3, [x3, #88]
   40a44:	mul	x3, x4, x3
   40a48:	sub	x3, x1, x3
   40a4c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x30328>
   40a50:	add	x1, x1, #0xbb0
   40a54:	ldr	x1, [x1, x3, lsl #3]
   40a58:	lsl	x0, x0, #3
   40a5c:	add	x3, sp, #0x10, lsl #12
   40a60:	ldr	x3, [x3, #80]
   40a64:	add	x0, x3, x0
   40a68:	orr	x1, x2, x1
   40a6c:	str	x1, [x0]
   40a70:	add	x0, sp, #0x10, lsl #12
   40a74:	ldr	x2, [x0, #104]
   40a78:	add	x0, sp, #0x10, lsl #12
   40a7c:	ldr	x1, [x0, #136]
   40a80:	add	x0, sp, #0x10, lsl #12
   40a84:	ldr	x0, [x0, #120]
   40a88:	bl	405d0 <PyInit__decimal@@Base+0x288f8>
   40a8c:	add	x1, sp, #0x10, lsl #12
   40a90:	str	x0, [x1, #120]
   40a94:	add	x0, sp, #0x10, lsl #12
   40a98:	ldr	x1, [x0, #120]
   40a9c:	ldr	x0, [sp, #24]
   40aa0:	mul	x0, x1, x0
   40aa4:	lsr	x0, x0, #1
   40aa8:	lsl	x0, x0, #3
   40aac:	ldr	x1, [sp, #40]
   40ab0:	add	x0, x1, x0
   40ab4:	add	x1, sp, #0x10, lsl #12
   40ab8:	str	x0, [x1, #152]
   40abc:	add	x0, sp, #0x10, lsl #12
   40ac0:	ldr	x1, [x0, #120]
   40ac4:	add	x0, sp, #0x10, lsl #12
   40ac8:	ldr	x0, [x0, #144]
   40acc:	cmp	x1, x0
   40ad0:	b.ne	4098c <PyInit__decimal@@Base+0x28cb4>  // b.any
   40ad4:	add	x0, sp, #0x10, lsl #12
   40ad8:	ldr	x0, [x0, #128]
   40adc:	lsl	x0, x0, #3
   40ae0:	add	x1, sp, #0x10, lsl #12
   40ae4:	ldr	x1, [x1, #152]
   40ae8:	add	x3, x1, x0
   40aec:	ldr	x1, [sp, #56]
   40af0:	add	x0, sp, #0x10, lsl #12
   40af4:	ldr	x0, [x0, #72]
   40af8:	lsl	x0, x0, #3
   40afc:	mov	x2, x0
   40b00:	mov	x0, x3
   40b04:	bl	6510 <memcpy@plt>
   40b08:	add	x0, sp, #0x10, lsl #12
   40b0c:	ldr	x1, [x0, #144]
   40b10:	add	x0, sp, #0x10, lsl #12
   40b14:	ldr	x0, [x0, #88]
   40b18:	udiv	x0, x1, x0
   40b1c:	lsl	x1, x0, #3
   40b20:	add	x2, sp, #0x10, lsl #12
   40b24:	ldr	x2, [x2, #80]
   40b28:	add	x1, x2, x1
   40b2c:	ldr	x2, [x1]
   40b30:	add	x1, sp, #0x10, lsl #12
   40b34:	ldr	x1, [x1, #144]
   40b38:	add	x3, sp, #0x10, lsl #12
   40b3c:	ldr	x3, [x3, #88]
   40b40:	udiv	x4, x1, x3
   40b44:	add	x3, sp, #0x10, lsl #12
   40b48:	ldr	x3, [x3, #88]
   40b4c:	mul	x3, x4, x3
   40b50:	sub	x3, x1, x3
   40b54:	adrp	x1, 48000 <PyInit__decimal@@Base+0x30328>
   40b58:	add	x1, x1, #0xbb0
   40b5c:	ldr	x1, [x1, x3, lsl #3]
   40b60:	lsl	x0, x0, #3
   40b64:	add	x3, sp, #0x10, lsl #12
   40b68:	ldr	x3, [x3, #80]
   40b6c:	add	x0, x3, x0
   40b70:	orr	x1, x2, x1
   40b74:	str	x1, [x0]
   40b78:	add	x0, sp, #0x10, lsl #12
   40b7c:	ldr	x1, [x0, #128]
   40b80:	add	x0, sp, #0x10, lsl #12
   40b84:	ldr	x0, [x0, #112]
   40b88:	add	x0, x1, x0
   40b8c:	add	x1, sp, #0x10, lsl #12
   40b90:	str	x0, [x1, #128]
   40b94:	ldr	x0, [sp, #24]
   40b98:	lsr	x0, x0, #1
   40b9c:	add	x1, sp, #0x10, lsl #12
   40ba0:	ldr	x1, [x1, #128]
   40ba4:	cmp	x1, x0
   40ba8:	b.cc	40888 <PyInit__decimal@@Base+0x28bb0>  // b.lo, b.ul, b.last
   40bac:	b	40bb4 <PyInit__decimal@@Base+0x28edc>
   40bb0:	nop
   40bb4:	add	x0, sp, #0x10, lsl #12
   40bb8:	ldr	x0, [x0, #144]
   40bbc:	add	x0, x0, #0x2
   40bc0:	add	x1, sp, #0x10, lsl #12
   40bc4:	str	x0, [x1, #144]
   40bc8:	add	x0, sp, #0x10, lsl #12
   40bcc:	ldr	x1, [x0, #144]
   40bd0:	add	x0, sp, #0x10, lsl #12
   40bd4:	ldr	x0, [x0, #96]
   40bd8:	cmp	x1, x0
   40bdc:	b.ls	40804 <PyInit__decimal@@Base+0x28b2c>  // b.plast
   40be0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x4b328>
   40be4:	add	x0, x0, #0x6f8
   40be8:	ldr	x1, [x0]
   40bec:	add	x0, sp, #0x10, lsl #12
   40bf0:	ldr	x0, [x0, #80]
   40bf4:	blr	x1
   40bf8:	mov	w0, #0x1                   	// #1
   40bfc:	ldp	x29, x30, [sp]
   40c00:	add	sp, sp, #0xa0
   40c04:	add	sp, sp, #0x10, lsl #12
   40c08:	ret
   40c0c:	sub	sp, sp, #0x40
   40c10:	str	x0, [sp, #8]
   40c14:	str	x1, [sp]
   40c18:	str	xzr, [sp, #40]
   40c1c:	b	40d08 <PyInit__decimal@@Base+0x29030>
   40c20:	ldr	x0, [sp, #40]
   40c24:	add	x0, x0, #0x1
   40c28:	str	x0, [sp, #32]
   40c2c:	ldr	x1, [sp, #40]
   40c30:	ldr	x0, [sp]
   40c34:	mul	x0, x1, x0
   40c38:	ldr	x1, [sp, #32]
   40c3c:	add	x0, x1, x0
   40c40:	str	x0, [sp, #48]
   40c44:	ldr	x1, [sp, #32]
   40c48:	ldr	x0, [sp]
   40c4c:	mul	x0, x1, x0
   40c50:	ldr	x1, [sp, #40]
   40c54:	add	x0, x1, x0
   40c58:	str	x0, [sp, #56]
   40c5c:	ldr	x0, [sp, #40]
   40c60:	add	x0, x0, #0x1
   40c64:	str	x0, [sp, #32]
   40c68:	b	40cec <PyInit__decimal@@Base+0x29014>
   40c6c:	ldr	x0, [sp, #48]
   40c70:	lsl	x0, x0, #3
   40c74:	ldr	x1, [sp, #8]
   40c78:	add	x0, x1, x0
   40c7c:	ldr	x0, [x0]
   40c80:	str	x0, [sp, #24]
   40c84:	ldr	x0, [sp, #56]
   40c88:	lsl	x0, x0, #3
   40c8c:	ldr	x1, [sp, #8]
   40c90:	add	x1, x1, x0
   40c94:	ldr	x0, [sp, #48]
   40c98:	lsl	x0, x0, #3
   40c9c:	ldr	x2, [sp, #8]
   40ca0:	add	x0, x2, x0
   40ca4:	ldr	x1, [x1]
   40ca8:	str	x1, [x0]
   40cac:	ldr	x0, [sp, #56]
   40cb0:	lsl	x0, x0, #3
   40cb4:	ldr	x1, [sp, #8]
   40cb8:	add	x0, x1, x0
   40cbc:	ldr	x1, [sp, #24]
   40cc0:	str	x1, [x0]
   40cc4:	ldr	x0, [sp, #48]
   40cc8:	add	x0, x0, #0x1
   40ccc:	str	x0, [sp, #48]
   40cd0:	ldr	x1, [sp, #56]
   40cd4:	ldr	x0, [sp]
   40cd8:	add	x0, x1, x0
   40cdc:	str	x0, [sp, #56]
   40ce0:	ldr	x0, [sp, #32]
   40ce4:	add	x0, x0, #0x1
   40ce8:	str	x0, [sp, #32]
   40cec:	ldr	x1, [sp, #32]
   40cf0:	ldr	x0, [sp]
   40cf4:	cmp	x1, x0
   40cf8:	b.cc	40c6c <PyInit__decimal@@Base+0x28f94>  // b.lo, b.ul, b.last
   40cfc:	ldr	x0, [sp, #40]
   40d00:	add	x0, x0, #0x1
   40d04:	str	x0, [sp, #40]
   40d08:	ldr	x1, [sp, #40]
   40d0c:	ldr	x0, [sp]
   40d10:	cmp	x1, x0
   40d14:	b.cc	40c20 <PyInit__decimal@@Base+0x28f48>  // b.lo, b.ul, b.last
   40d18:	nop
   40d1c:	nop
   40d20:	add	sp, sp, #0x40
   40d24:	ret
   40d28:	sub	sp, sp, #0x50
   40d2c:	sub	sp, sp, #0x40, lsl #12
   40d30:	stp	x29, x30, [sp]
   40d34:	mov	x29, sp
   40d38:	str	x0, [sp, #24]
   40d3c:	str	x1, [sp, #16]
   40d40:	ldr	x0, [sp, #16]
   40d44:	add	x1, sp, #0x40, lsl #12
   40d48:	str	x0, [x1, #56]
   40d4c:	b	40d64 <PyInit__decimal@@Base+0x2908c>
   40d50:	add	x0, sp, #0x40, lsl #12
   40d54:	ldr	x0, [x0, #56]
   40d58:	lsr	x0, x0, #1
   40d5c:	add	x1, sp, #0x40, lsl #12
   40d60:	str	x0, [x1, #56]
   40d64:	add	x0, sp, #0x40, lsl #12
   40d68:	ldr	x0, [x0, #56]
   40d6c:	cmp	x0, #0x80
   40d70:	b.hi	40d50 <PyInit__decimal@@Base+0x29078>  // b.pmore
   40d74:	add	x0, sp, #0x40, lsl #12
   40d78:	str	xzr, [x0, #48]
   40d7c:	b	41250 <PyInit__decimal@@Base+0x29578>
   40d80:	add	x0, sp, #0x40, lsl #12
   40d84:	ldr	x0, [x0, #48]
   40d88:	add	x1, sp, #0x40, lsl #12
   40d8c:	str	x0, [x1, #40]
   40d90:	b	41220 <PyInit__decimal@@Base+0x29548>
   40d94:	add	x0, sp, #0x40, lsl #12
   40d98:	ldr	x1, [x0, #48]
   40d9c:	ldr	x0, [sp, #16]
   40da0:	mul	x1, x1, x0
   40da4:	add	x0, sp, #0x40, lsl #12
   40da8:	ldr	x0, [x0, #40]
   40dac:	add	x0, x1, x0
   40db0:	lsl	x0, x0, #3
   40db4:	ldr	x1, [sp, #24]
   40db8:	add	x0, x1, x0
   40dbc:	add	x1, sp, #0x40, lsl #12
   40dc0:	str	x0, [x1, #64]
   40dc4:	add	x0, sp, #0x20, lsl #12
   40dc8:	add	x0, x0, #0x20
   40dcc:	add	x1, sp, #0x40, lsl #12
   40dd0:	str	x0, [x1, #72]
   40dd4:	add	x0, sp, #0x40, lsl #12
   40dd8:	str	xzr, [x0, #32]
   40ddc:	b	40e54 <PyInit__decimal@@Base+0x2917c>
   40de0:	add	x0, sp, #0x40, lsl #12
   40de4:	ldr	x0, [x0, #56]
   40de8:	lsl	x0, x0, #3
   40dec:	mov	x2, x0
   40df0:	add	x0, sp, #0x40, lsl #12
   40df4:	ldr	x1, [x0, #64]
   40df8:	add	x0, sp, #0x40, lsl #12
   40dfc:	ldr	x0, [x0, #72]
   40e00:	bl	6510 <memcpy@plt>
   40e04:	ldr	x0, [sp, #16]
   40e08:	lsl	x0, x0, #3
   40e0c:	add	x1, sp, #0x40, lsl #12
   40e10:	ldr	x1, [x1, #64]
   40e14:	add	x0, x1, x0
   40e18:	add	x1, sp, #0x40, lsl #12
   40e1c:	str	x0, [x1, #64]
   40e20:	add	x0, sp, #0x40, lsl #12
   40e24:	ldr	x0, [x0, #56]
   40e28:	lsl	x0, x0, #3
   40e2c:	add	x1, sp, #0x40, lsl #12
   40e30:	ldr	x1, [x1, #72]
   40e34:	add	x0, x1, x0
   40e38:	add	x1, sp, #0x40, lsl #12
   40e3c:	str	x0, [x1, #72]
   40e40:	add	x0, sp, #0x40, lsl #12
   40e44:	ldr	x0, [x0, #32]
   40e48:	add	x0, x0, #0x1
   40e4c:	add	x1, sp, #0x40, lsl #12
   40e50:	str	x0, [x1, #32]
   40e54:	add	x0, sp, #0x40, lsl #12
   40e58:	ldr	x1, [x0, #32]
   40e5c:	add	x0, sp, #0x40, lsl #12
   40e60:	ldr	x0, [x0, #56]
   40e64:	cmp	x1, x0
   40e68:	b.cc	40de0 <PyInit__decimal@@Base+0x29108>  // b.lo, b.ul, b.last
   40e6c:	add	x0, sp, #0x20, lsl #12
   40e70:	add	x0, x0, #0x20
   40e74:	add	x1, sp, #0x40, lsl #12
   40e78:	ldr	x1, [x1, #56]
   40e7c:	bl	40c0c <PyInit__decimal@@Base+0x28f34>
   40e80:	add	x0, sp, #0x40, lsl #12
   40e84:	ldr	x1, [x0, #48]
   40e88:	add	x0, sp, #0x40, lsl #12
   40e8c:	ldr	x0, [x0, #40]
   40e90:	cmp	x1, x0
   40e94:	b.ne	40f74 <PyInit__decimal@@Base+0x2929c>  // b.any
   40e98:	add	x0, sp, #0x40, lsl #12
   40e9c:	ldr	x1, [x0, #48]
   40ea0:	ldr	x0, [sp, #16]
   40ea4:	mul	x1, x1, x0
   40ea8:	add	x0, sp, #0x40, lsl #12
   40eac:	ldr	x0, [x0, #40]
   40eb0:	add	x0, x1, x0
   40eb4:	lsl	x0, x0, #3
   40eb8:	ldr	x1, [sp, #24]
   40ebc:	add	x0, x1, x0
   40ec0:	add	x1, sp, #0x40, lsl #12
   40ec4:	str	x0, [x1, #72]
   40ec8:	add	x0, sp, #0x20, lsl #12
   40ecc:	add	x0, x0, #0x20
   40ed0:	add	x1, sp, #0x40, lsl #12
   40ed4:	str	x0, [x1, #64]
   40ed8:	add	x0, sp, #0x40, lsl #12
   40edc:	str	xzr, [x0, #32]
   40ee0:	b	40f58 <PyInit__decimal@@Base+0x29280>
   40ee4:	add	x0, sp, #0x40, lsl #12
   40ee8:	ldr	x0, [x0, #56]
   40eec:	lsl	x0, x0, #3
   40ef0:	mov	x2, x0
   40ef4:	add	x0, sp, #0x40, lsl #12
   40ef8:	ldr	x1, [x0, #64]
   40efc:	add	x0, sp, #0x40, lsl #12
   40f00:	ldr	x0, [x0, #72]
   40f04:	bl	6510 <memcpy@plt>
   40f08:	add	x0, sp, #0x40, lsl #12
   40f0c:	ldr	x0, [x0, #56]
   40f10:	lsl	x0, x0, #3
   40f14:	add	x1, sp, #0x40, lsl #12
   40f18:	ldr	x1, [x1, #64]
   40f1c:	add	x0, x1, x0
   40f20:	add	x1, sp, #0x40, lsl #12
   40f24:	str	x0, [x1, #64]
   40f28:	ldr	x0, [sp, #16]
   40f2c:	lsl	x0, x0, #3
   40f30:	add	x1, sp, #0x40, lsl #12
   40f34:	ldr	x1, [x1, #72]
   40f38:	add	x0, x1, x0
   40f3c:	add	x1, sp, #0x40, lsl #12
   40f40:	str	x0, [x1, #72]
   40f44:	add	x0, sp, #0x40, lsl #12
   40f48:	ldr	x0, [x0, #32]
   40f4c:	add	x0, x0, #0x1
   40f50:	add	x1, sp, #0x40, lsl #12
   40f54:	str	x0, [x1, #32]
   40f58:	add	x0, sp, #0x40, lsl #12
   40f5c:	ldr	x1, [x0, #32]
   40f60:	add	x0, sp, #0x40, lsl #12
   40f64:	ldr	x0, [x0, #56]
   40f68:	cmp	x1, x0
   40f6c:	b.cc	40ee4 <PyInit__decimal@@Base+0x2920c>  // b.lo, b.ul, b.last
   40f70:	b	41204 <PyInit__decimal@@Base+0x2952c>
   40f74:	add	x0, sp, #0x40, lsl #12
   40f78:	ldr	x1, [x0, #40]
   40f7c:	ldr	x0, [sp, #16]
   40f80:	mul	x1, x1, x0
   40f84:	add	x0, sp, #0x40, lsl #12
   40f88:	ldr	x0, [x0, #48]
   40f8c:	add	x0, x1, x0
   40f90:	lsl	x0, x0, #3
   40f94:	ldr	x1, [sp, #24]
   40f98:	add	x0, x1, x0
   40f9c:	add	x1, sp, #0x40, lsl #12
   40fa0:	str	x0, [x1, #64]
   40fa4:	add	x0, sp, #0x20
   40fa8:	add	x1, sp, #0x40, lsl #12
   40fac:	str	x0, [x1, #72]
   40fb0:	add	x0, sp, #0x40, lsl #12
   40fb4:	str	xzr, [x0, #32]
   40fb8:	b	41030 <PyInit__decimal@@Base+0x29358>
   40fbc:	add	x0, sp, #0x40, lsl #12
   40fc0:	ldr	x0, [x0, #56]
   40fc4:	lsl	x0, x0, #3
   40fc8:	mov	x2, x0
   40fcc:	add	x0, sp, #0x40, lsl #12
   40fd0:	ldr	x1, [x0, #64]
   40fd4:	add	x0, sp, #0x40, lsl #12
   40fd8:	ldr	x0, [x0, #72]
   40fdc:	bl	6510 <memcpy@plt>
   40fe0:	ldr	x0, [sp, #16]
   40fe4:	lsl	x0, x0, #3
   40fe8:	add	x1, sp, #0x40, lsl #12
   40fec:	ldr	x1, [x1, #64]
   40ff0:	add	x0, x1, x0
   40ff4:	add	x1, sp, #0x40, lsl #12
   40ff8:	str	x0, [x1, #64]
   40ffc:	add	x0, sp, #0x40, lsl #12
   41000:	ldr	x0, [x0, #56]
   41004:	lsl	x0, x0, #3
   41008:	add	x1, sp, #0x40, lsl #12
   4100c:	ldr	x1, [x1, #72]
   41010:	add	x0, x1, x0
   41014:	add	x1, sp, #0x40, lsl #12
   41018:	str	x0, [x1, #72]
   4101c:	add	x0, sp, #0x40, lsl #12
   41020:	ldr	x0, [x0, #32]
   41024:	add	x0, x0, #0x1
   41028:	add	x1, sp, #0x40, lsl #12
   4102c:	str	x0, [x1, #32]
   41030:	add	x0, sp, #0x40, lsl #12
   41034:	ldr	x1, [x0, #32]
   41038:	add	x0, sp, #0x40, lsl #12
   4103c:	ldr	x0, [x0, #56]
   41040:	cmp	x1, x0
   41044:	b.cc	40fbc <PyInit__decimal@@Base+0x292e4>  // b.lo, b.ul, b.last
   41048:	add	x0, sp, #0x20
   4104c:	add	x1, sp, #0x40, lsl #12
   41050:	ldr	x1, [x1, #56]
   41054:	bl	40c0c <PyInit__decimal@@Base+0x28f34>
   41058:	add	x0, sp, #0x40, lsl #12
   4105c:	ldr	x1, [x0, #40]
   41060:	ldr	x0, [sp, #16]
   41064:	mul	x1, x1, x0
   41068:	add	x0, sp, #0x40, lsl #12
   4106c:	ldr	x0, [x0, #48]
   41070:	add	x0, x1, x0
   41074:	lsl	x0, x0, #3
   41078:	ldr	x1, [sp, #24]
   4107c:	add	x0, x1, x0
   41080:	add	x1, sp, #0x40, lsl #12
   41084:	str	x0, [x1, #72]
   41088:	add	x0, sp, #0x20, lsl #12
   4108c:	add	x0, x0, #0x20
   41090:	add	x1, sp, #0x40, lsl #12
   41094:	str	x0, [x1, #64]
   41098:	add	x0, sp, #0x40, lsl #12
   4109c:	str	xzr, [x0, #32]
   410a0:	b	41118 <PyInit__decimal@@Base+0x29440>
   410a4:	add	x0, sp, #0x40, lsl #12
   410a8:	ldr	x0, [x0, #56]
   410ac:	lsl	x0, x0, #3
   410b0:	mov	x2, x0
   410b4:	add	x0, sp, #0x40, lsl #12
   410b8:	ldr	x1, [x0, #64]
   410bc:	add	x0, sp, #0x40, lsl #12
   410c0:	ldr	x0, [x0, #72]
   410c4:	bl	6510 <memcpy@plt>
   410c8:	add	x0, sp, #0x40, lsl #12
   410cc:	ldr	x0, [x0, #56]
   410d0:	lsl	x0, x0, #3
   410d4:	add	x1, sp, #0x40, lsl #12
   410d8:	ldr	x1, [x1, #64]
   410dc:	add	x0, x1, x0
   410e0:	add	x1, sp, #0x40, lsl #12
   410e4:	str	x0, [x1, #64]
   410e8:	ldr	x0, [sp, #16]
   410ec:	lsl	x0, x0, #3
   410f0:	add	x1, sp, #0x40, lsl #12
   410f4:	ldr	x1, [x1, #72]
   410f8:	add	x0, x1, x0
   410fc:	add	x1, sp, #0x40, lsl #12
   41100:	str	x0, [x1, #72]
   41104:	add	x0, sp, #0x40, lsl #12
   41108:	ldr	x0, [x0, #32]
   4110c:	add	x0, x0, #0x1
   41110:	add	x1, sp, #0x40, lsl #12
   41114:	str	x0, [x1, #32]
   41118:	add	x0, sp, #0x40, lsl #12
   4111c:	ldr	x1, [x0, #32]
   41120:	add	x0, sp, #0x40, lsl #12
   41124:	ldr	x0, [x0, #56]
   41128:	cmp	x1, x0
   4112c:	b.cc	410a4 <PyInit__decimal@@Base+0x293cc>  // b.lo, b.ul, b.last
   41130:	add	x0, sp, #0x40, lsl #12
   41134:	ldr	x1, [x0, #48]
   41138:	ldr	x0, [sp, #16]
   4113c:	mul	x1, x1, x0
   41140:	add	x0, sp, #0x40, lsl #12
   41144:	ldr	x0, [x0, #40]
   41148:	add	x0, x1, x0
   4114c:	lsl	x0, x0, #3
   41150:	ldr	x1, [sp, #24]
   41154:	add	x0, x1, x0
   41158:	add	x1, sp, #0x40, lsl #12
   4115c:	str	x0, [x1, #72]
   41160:	add	x0, sp, #0x20
   41164:	add	x1, sp, #0x40, lsl #12
   41168:	str	x0, [x1, #64]
   4116c:	add	x0, sp, #0x40, lsl #12
   41170:	str	xzr, [x0, #32]
   41174:	b	411ec <PyInit__decimal@@Base+0x29514>
   41178:	add	x0, sp, #0x40, lsl #12
   4117c:	ldr	x0, [x0, #56]
   41180:	lsl	x0, x0, #3
   41184:	mov	x2, x0
   41188:	add	x0, sp, #0x40, lsl #12
   4118c:	ldr	x1, [x0, #64]
   41190:	add	x0, sp, #0x40, lsl #12
   41194:	ldr	x0, [x0, #72]
   41198:	bl	6510 <memcpy@plt>
   4119c:	add	x0, sp, #0x40, lsl #12
   411a0:	ldr	x0, [x0, #56]
   411a4:	lsl	x0, x0, #3
   411a8:	add	x1, sp, #0x40, lsl #12
   411ac:	ldr	x1, [x1, #64]
   411b0:	add	x0, x1, x0
   411b4:	add	x1, sp, #0x40, lsl #12
   411b8:	str	x0, [x1, #64]
   411bc:	ldr	x0, [sp, #16]
   411c0:	lsl	x0, x0, #3
   411c4:	add	x1, sp, #0x40, lsl #12
   411c8:	ldr	x1, [x1, #72]
   411cc:	add	x0, x1, x0
   411d0:	add	x1, sp, #0x40, lsl #12
   411d4:	str	x0, [x1, #72]
   411d8:	add	x0, sp, #0x40, lsl #12
   411dc:	ldr	x0, [x0, #32]
   411e0:	add	x0, x0, #0x1
   411e4:	add	x1, sp, #0x40, lsl #12
   411e8:	str	x0, [x1, #32]
   411ec:	add	x0, sp, #0x40, lsl #12
   411f0:	ldr	x1, [x0, #32]
   411f4:	add	x0, sp, #0x40, lsl #12
   411f8:	ldr	x0, [x0, #56]
   411fc:	cmp	x1, x0
   41200:	b.cc	41178 <PyInit__decimal@@Base+0x294a0>  // b.lo, b.ul, b.last
   41204:	add	x0, sp, #0x40, lsl #12
   41208:	ldr	x1, [x0, #40]
   4120c:	add	x0, sp, #0x40, lsl #12
   41210:	ldr	x0, [x0, #56]
   41214:	add	x0, x1, x0
   41218:	add	x1, sp, #0x40, lsl #12
   4121c:	str	x0, [x1, #40]
   41220:	add	x0, sp, #0x40, lsl #12
   41224:	ldr	x1, [x0, #40]
   41228:	ldr	x0, [sp, #16]
   4122c:	cmp	x1, x0
   41230:	b.cc	40d94 <PyInit__decimal@@Base+0x290bc>  // b.lo, b.ul, b.last
   41234:	add	x0, sp, #0x40, lsl #12
   41238:	ldr	x1, [x0, #48]
   4123c:	add	x0, sp, #0x40, lsl #12
   41240:	ldr	x0, [x0, #56]
   41244:	add	x0, x1, x0
   41248:	add	x1, sp, #0x40, lsl #12
   4124c:	str	x0, [x1, #48]
   41250:	add	x0, sp, #0x40, lsl #12
   41254:	ldr	x1, [x0, #48]
   41258:	ldr	x0, [sp, #16]
   4125c:	cmp	x1, x0
   41260:	b.cc	40d80 <PyInit__decimal@@Base+0x290a8>  // b.lo, b.ul, b.last
   41264:	nop
   41268:	nop
   4126c:	ldp	x29, x30, [sp]
   41270:	add	sp, sp, #0x50
   41274:	add	sp, sp, #0x40, lsl #12
   41278:	ret
   4127c:	stp	x29, x30, [sp, #-64]!
   41280:	mov	x29, sp
   41284:	str	x0, [sp, #40]
   41288:	str	x1, [sp, #32]
   4128c:	str	x2, [sp, #24]
   41290:	ldr	x1, [sp, #24]
   41294:	ldr	x0, [sp, #32]
   41298:	bl	4052c <PyInit__decimal@@Base+0x28854>
   4129c:	str	x0, [sp, #56]
   412a0:	ldr	x1, [sp, #24]
   412a4:	ldr	x0, [sp, #32]
   412a8:	cmp	x1, x0
   412ac:	b.ne	412c0 <PyInit__decimal@@Base+0x295e8>  // b.any
   412b0:	ldr	x1, [sp, #32]
   412b4:	ldr	x0, [sp, #40]
   412b8:	bl	40d28 <PyInit__decimal@@Base+0x29050>
   412bc:	b	41398 <PyInit__decimal@@Base+0x296c0>
   412c0:	ldr	x1, [sp, #32]
   412c4:	mov	x0, #0x2                   	// #2
   412c8:	bl	4052c <PyInit__decimal@@Base+0x28854>
   412cc:	mov	x1, x0
   412d0:	ldr	x0, [sp, #24]
   412d4:	cmp	x0, x1
   412d8:	b.ne	4132c <PyInit__decimal@@Base+0x29654>  // b.any
   412dc:	mov	w3, #0x0                   	// #0
   412e0:	ldr	x2, [sp, #24]
   412e4:	ldr	x1, [sp, #32]
   412e8:	ldr	x0, [sp, #40]
   412ec:	bl	40724 <PyInit__decimal@@Base+0x28a4c>
   412f0:	cmp	w0, #0x0
   412f4:	b.ne	41300 <PyInit__decimal@@Base+0x29628>  // b.any
   412f8:	mov	w0, #0x0                   	// #0
   412fc:	b	4139c <PyInit__decimal@@Base+0x296c4>
   41300:	ldr	x1, [sp, #32]
   41304:	ldr	x0, [sp, #40]
   41308:	bl	40d28 <PyInit__decimal@@Base+0x29050>
   4130c:	ldr	x0, [sp, #56]
   41310:	lsr	x0, x0, #1
   41314:	lsl	x0, x0, #3
   41318:	ldr	x1, [sp, #40]
   4131c:	add	x0, x1, x0
   41320:	ldr	x1, [sp, #32]
   41324:	bl	40d28 <PyInit__decimal@@Base+0x29050>
   41328:	b	41398 <PyInit__decimal@@Base+0x296c0>
   4132c:	ldr	x1, [sp, #24]
   41330:	mov	x0, #0x2                   	// #2
   41334:	bl	4052c <PyInit__decimal@@Base+0x28854>
   41338:	mov	x1, x0
   4133c:	ldr	x0, [sp, #32]
   41340:	cmp	x0, x1
   41344:	b.ne	41394 <PyInit__decimal@@Base+0x296bc>  // b.any
   41348:	ldr	x1, [sp, #24]
   4134c:	ldr	x0, [sp, #40]
   41350:	bl	40d28 <PyInit__decimal@@Base+0x29050>
   41354:	ldr	x0, [sp, #56]
   41358:	lsr	x0, x0, #1
   4135c:	lsl	x0, x0, #3
   41360:	ldr	x1, [sp, #40]
   41364:	add	x0, x1, x0
   41368:	ldr	x1, [sp, #24]
   4136c:	bl	40d28 <PyInit__decimal@@Base+0x29050>
   41370:	mov	w3, #0x1                   	// #1
   41374:	ldr	x2, [sp, #32]
   41378:	ldr	x1, [sp, #24]
   4137c:	ldr	x0, [sp, #40]
   41380:	bl	40724 <PyInit__decimal@@Base+0x28a4c>
   41384:	cmp	w0, #0x0
   41388:	b.ne	41398 <PyInit__decimal@@Base+0x296c0>  // b.any
   4138c:	mov	w0, #0x0                   	// #0
   41390:	b	4139c <PyInit__decimal@@Base+0x296c4>
   41394:	bl	6860 <abort@plt>
   41398:	mov	w0, #0x1                   	// #1
   4139c:	ldp	x29, x30, [sp], #64
   413a0:	ret
   413a4:	sub	sp, sp, #0x220
   413a8:	stp	x0, x1, [sp, #16]
   413ac:	stp	x2, x3, [sp]
   413b0:	ldp	x0, x1, [sp, #16]
   413b4:	add	x2, sp, #0x200
   413b8:	stp	x0, x1, [x2, #16]
   413bc:	ldp	x0, x1, [sp]
   413c0:	add	x2, sp, #0x200
   413c4:	stp	x0, x1, [x2]
   413c8:	str	xzr, [sp, #504]
   413cc:	add	x0, sp, #0x200
   413d0:	ldp	x0, x1, [x0, #16]
   413d4:	stp	x0, x1, [sp, #80]
   413d8:	add	x0, sp, #0x200
   413dc:	ldp	x0, x1, [x0]
   413e0:	stp	x0, x1, [sp, #64]
   413e4:	ldr	x0, [sp, #64]
   413e8:	str	x0, [sp, #496]
   413ec:	ldr	x0, [sp, #72]
   413f0:	str	x0, [sp, #488]
   413f4:	ldr	x0, [sp, #80]
   413f8:	str	x0, [sp, #480]
   413fc:	ldr	x0, [sp, #88]
   41400:	str	x0, [sp, #472]
   41404:	ldr	x0, [sp, #488]
   41408:	cmp	x0, #0x0
   4140c:	b.ne	41afc <PyInit__decimal@@Base+0x29e24>  // b.any
   41410:	ldr	x1, [sp, #496]
   41414:	ldr	x0, [sp, #472]
   41418:	cmp	x1, x0
   4141c:	b.ls	41668 <PyInit__decimal@@Base+0x29990>  // b.plast
   41420:	ldr	x0, [sp, #496]
   41424:	clz	x0, x0
   41428:	sxtw	x0, w0
   4142c:	str	x0, [sp, #464]
   41430:	ldr	x0, [sp, #464]
   41434:	cmp	x0, #0x0
   41438:	b.eq	41494 <PyInit__decimal@@Base+0x297bc>  // b.none
   4143c:	ldr	x0, [sp, #464]
   41440:	mov	w1, w0
   41444:	ldr	x0, [sp, #496]
   41448:	lsl	x0, x0, x1
   4144c:	str	x0, [sp, #496]
   41450:	ldr	x0, [sp, #464]
   41454:	mov	w1, w0
   41458:	ldr	x0, [sp, #472]
   4145c:	lsl	x1, x0, x1
   41460:	ldr	x0, [sp, #464]
   41464:	mov	w2, w0
   41468:	mov	w0, #0x40                  	// #64
   4146c:	sub	w0, w0, w2
   41470:	ldr	x2, [sp, #480]
   41474:	lsr	x0, x2, x0
   41478:	orr	x0, x1, x0
   4147c:	str	x0, [sp, #472]
   41480:	ldr	x0, [sp, #464]
   41484:	mov	w1, w0
   41488:	ldr	x0, [sp, #480]
   4148c:	lsl	x0, x0, x1
   41490:	str	x0, [sp, #480]
   41494:	ldr	x0, [sp, #496]
   41498:	lsr	x0, x0, #32
   4149c:	str	x0, [sp, #456]
   414a0:	ldr	x0, [sp, #496]
   414a4:	and	x0, x0, #0xffffffff
   414a8:	str	x0, [sp, #448]
   414ac:	ldr	x0, [sp, #472]
   414b0:	ldr	x1, [sp, #456]
   414b4:	udiv	x2, x0, x1
   414b8:	ldr	x1, [sp, #456]
   414bc:	mul	x1, x2, x1
   414c0:	sub	x0, x0, x1
   414c4:	str	x0, [sp, #440]
   414c8:	ldr	x1, [sp, #472]
   414cc:	ldr	x0, [sp, #456]
   414d0:	udiv	x0, x1, x0
   414d4:	str	x0, [sp, #432]
   414d8:	ldr	x1, [sp, #448]
   414dc:	ldr	x0, [sp, #432]
   414e0:	mul	x0, x1, x0
   414e4:	str	x0, [sp, #424]
   414e8:	ldr	x0, [sp, #440]
   414ec:	lsl	x1, x0, #32
   414f0:	ldr	x0, [sp, #480]
   414f4:	lsr	x0, x0, #32
   414f8:	orr	x0, x1, x0
   414fc:	str	x0, [sp, #440]
   41500:	ldr	x1, [sp, #424]
   41504:	ldr	x0, [sp, #440]
   41508:	cmp	x1, x0
   4150c:	b.ls	41568 <PyInit__decimal@@Base+0x29890>  // b.plast
   41510:	ldr	x0, [sp, #432]
   41514:	sub	x0, x0, #0x1
   41518:	str	x0, [sp, #432]
   4151c:	ldr	x1, [sp, #440]
   41520:	ldr	x0, [sp, #496]
   41524:	add	x0, x1, x0
   41528:	str	x0, [sp, #440]
   4152c:	ldr	x1, [sp, #496]
   41530:	ldr	x0, [sp, #440]
   41534:	cmp	x1, x0
   41538:	b.hi	41568 <PyInit__decimal@@Base+0x29890>  // b.pmore
   4153c:	ldr	x1, [sp, #424]
   41540:	ldr	x0, [sp, #440]
   41544:	cmp	x1, x0
   41548:	b.ls	41568 <PyInit__decimal@@Base+0x29890>  // b.plast
   4154c:	ldr	x0, [sp, #432]
   41550:	sub	x0, x0, #0x1
   41554:	str	x0, [sp, #432]
   41558:	ldr	x1, [sp, #440]
   4155c:	ldr	x0, [sp, #496]
   41560:	add	x0, x1, x0
   41564:	str	x0, [sp, #440]
   41568:	ldr	x1, [sp, #440]
   4156c:	ldr	x0, [sp, #424]
   41570:	sub	x0, x1, x0
   41574:	str	x0, [sp, #440]
   41578:	ldr	x0, [sp, #440]
   4157c:	ldr	x1, [sp, #456]
   41580:	udiv	x2, x0, x1
   41584:	ldr	x1, [sp, #456]
   41588:	mul	x1, x2, x1
   4158c:	sub	x0, x0, x1
   41590:	str	x0, [sp, #416]
   41594:	ldr	x1, [sp, #440]
   41598:	ldr	x0, [sp, #456]
   4159c:	udiv	x0, x1, x0
   415a0:	str	x0, [sp, #408]
   415a4:	ldr	x1, [sp, #448]
   415a8:	ldr	x0, [sp, #408]
   415ac:	mul	x0, x1, x0
   415b0:	str	x0, [sp, #424]
   415b4:	ldr	x0, [sp, #416]
   415b8:	lsl	x1, x0, #32
   415bc:	ldr	x0, [sp, #480]
   415c0:	and	x0, x0, #0xffffffff
   415c4:	orr	x0, x1, x0
   415c8:	str	x0, [sp, #416]
   415cc:	ldr	x1, [sp, #424]
   415d0:	ldr	x0, [sp, #416]
   415d4:	cmp	x1, x0
   415d8:	b.ls	41634 <PyInit__decimal@@Base+0x2995c>  // b.plast
   415dc:	ldr	x0, [sp, #408]
   415e0:	sub	x0, x0, #0x1
   415e4:	str	x0, [sp, #408]
   415e8:	ldr	x1, [sp, #416]
   415ec:	ldr	x0, [sp, #496]
   415f0:	add	x0, x1, x0
   415f4:	str	x0, [sp, #416]
   415f8:	ldr	x1, [sp, #496]
   415fc:	ldr	x0, [sp, #416]
   41600:	cmp	x1, x0
   41604:	b.hi	41634 <PyInit__decimal@@Base+0x2995c>  // b.pmore
   41608:	ldr	x1, [sp, #424]
   4160c:	ldr	x0, [sp, #416]
   41610:	cmp	x1, x0
   41614:	b.ls	41634 <PyInit__decimal@@Base+0x2995c>  // b.plast
   41618:	ldr	x0, [sp, #408]
   4161c:	sub	x0, x0, #0x1
   41620:	str	x0, [sp, #408]
   41624:	ldr	x1, [sp, #416]
   41628:	ldr	x0, [sp, #496]
   4162c:	add	x0, x1, x0
   41630:	str	x0, [sp, #416]
   41634:	ldr	x1, [sp, #416]
   41638:	ldr	x0, [sp, #424]
   4163c:	sub	x0, x1, x0
   41640:	str	x0, [sp, #416]
   41644:	ldr	x0, [sp, #432]
   41648:	lsl	x1, x0, #32
   4164c:	ldr	x0, [sp, #408]
   41650:	orr	x0, x1, x0
   41654:	str	x0, [sp, #400]
   41658:	ldr	x0, [sp, #416]
   4165c:	str	x0, [sp, #480]
   41660:	str	xzr, [sp, #392]
   41664:	b	41ac8 <PyInit__decimal@@Base+0x29df0>
   41668:	ldr	x0, [sp, #496]
   4166c:	cmp	x0, #0x0
   41670:	b.ne	41684 <PyInit__decimal@@Base+0x299ac>  // b.any
   41674:	mov	x1, #0x1                   	// #1
   41678:	ldr	x0, [sp, #496]
   4167c:	udiv	x0, x1, x0
   41680:	str	x0, [sp, #496]
   41684:	ldr	x0, [sp, #496]
   41688:	clz	x0, x0
   4168c:	sxtw	x0, w0
   41690:	str	x0, [sp, #464]
   41694:	ldr	x0, [sp, #464]
   41698:	cmp	x0, #0x0
   4169c:	b.ne	416bc <PyInit__decimal@@Base+0x299e4>  // b.any
   416a0:	ldr	x1, [sp, #472]
   416a4:	ldr	x0, [sp, #496]
   416a8:	sub	x0, x1, x0
   416ac:	str	x0, [sp, #472]
   416b0:	mov	x0, #0x1                   	// #1
   416b4:	str	x0, [sp, #392]
   416b8:	b	418fc <PyInit__decimal@@Base+0x29c24>
   416bc:	mov	x1, #0x40                  	// #64
   416c0:	ldr	x0, [sp, #464]
   416c4:	sub	x0, x1, x0
   416c8:	str	x0, [sp, #384]
   416cc:	ldr	x0, [sp, #464]
   416d0:	mov	w1, w0
   416d4:	ldr	x0, [sp, #496]
   416d8:	lsl	x0, x0, x1
   416dc:	str	x0, [sp, #496]
   416e0:	ldr	x0, [sp, #384]
   416e4:	mov	w1, w0
   416e8:	ldr	x0, [sp, #472]
   416ec:	lsr	x0, x0, x1
   416f0:	str	x0, [sp, #376]
   416f4:	ldr	x0, [sp, #464]
   416f8:	mov	w1, w0
   416fc:	ldr	x0, [sp, #472]
   41700:	lsl	x1, x0, x1
   41704:	ldr	x0, [sp, #384]
   41708:	mov	w2, w0
   4170c:	ldr	x0, [sp, #480]
   41710:	lsr	x0, x0, x2
   41714:	orr	x0, x1, x0
   41718:	str	x0, [sp, #472]
   4171c:	ldr	x0, [sp, #464]
   41720:	mov	w1, w0
   41724:	ldr	x0, [sp, #480]
   41728:	lsl	x0, x0, x1
   4172c:	str	x0, [sp, #480]
   41730:	ldr	x0, [sp, #496]
   41734:	lsr	x0, x0, #32
   41738:	str	x0, [sp, #368]
   4173c:	ldr	x0, [sp, #496]
   41740:	and	x0, x0, #0xffffffff
   41744:	str	x0, [sp, #360]
   41748:	ldr	x0, [sp, #376]
   4174c:	ldr	x1, [sp, #368]
   41750:	udiv	x2, x0, x1
   41754:	ldr	x1, [sp, #368]
   41758:	mul	x1, x2, x1
   4175c:	sub	x0, x0, x1
   41760:	str	x0, [sp, #352]
   41764:	ldr	x1, [sp, #376]
   41768:	ldr	x0, [sp, #368]
   4176c:	udiv	x0, x1, x0
   41770:	str	x0, [sp, #344]
   41774:	ldr	x1, [sp, #360]
   41778:	ldr	x0, [sp, #344]
   4177c:	mul	x0, x1, x0
   41780:	str	x0, [sp, #336]
   41784:	ldr	x0, [sp, #352]
   41788:	lsl	x1, x0, #32
   4178c:	ldr	x0, [sp, #472]
   41790:	lsr	x0, x0, #32
   41794:	orr	x0, x1, x0
   41798:	str	x0, [sp, #352]
   4179c:	ldr	x1, [sp, #336]
   417a0:	ldr	x0, [sp, #352]
   417a4:	cmp	x1, x0
   417a8:	b.ls	41804 <PyInit__decimal@@Base+0x29b2c>  // b.plast
   417ac:	ldr	x0, [sp, #344]
   417b0:	sub	x0, x0, #0x1
   417b4:	str	x0, [sp, #344]
   417b8:	ldr	x1, [sp, #352]
   417bc:	ldr	x0, [sp, #496]
   417c0:	add	x0, x1, x0
   417c4:	str	x0, [sp, #352]
   417c8:	ldr	x1, [sp, #496]
   417cc:	ldr	x0, [sp, #352]
   417d0:	cmp	x1, x0
   417d4:	b.hi	41804 <PyInit__decimal@@Base+0x29b2c>  // b.pmore
   417d8:	ldr	x1, [sp, #336]
   417dc:	ldr	x0, [sp, #352]
   417e0:	cmp	x1, x0
   417e4:	b.ls	41804 <PyInit__decimal@@Base+0x29b2c>  // b.plast
   417e8:	ldr	x0, [sp, #344]
   417ec:	sub	x0, x0, #0x1
   417f0:	str	x0, [sp, #344]
   417f4:	ldr	x1, [sp, #352]
   417f8:	ldr	x0, [sp, #496]
   417fc:	add	x0, x1, x0
   41800:	str	x0, [sp, #352]
   41804:	ldr	x1, [sp, #352]
   41808:	ldr	x0, [sp, #336]
   4180c:	sub	x0, x1, x0
   41810:	str	x0, [sp, #352]
   41814:	ldr	x0, [sp, #352]
   41818:	ldr	x1, [sp, #368]
   4181c:	udiv	x2, x0, x1
   41820:	ldr	x1, [sp, #368]
   41824:	mul	x1, x2, x1
   41828:	sub	x0, x0, x1
   4182c:	str	x0, [sp, #328]
   41830:	ldr	x1, [sp, #352]
   41834:	ldr	x0, [sp, #368]
   41838:	udiv	x0, x1, x0
   4183c:	str	x0, [sp, #320]
   41840:	ldr	x1, [sp, #360]
   41844:	ldr	x0, [sp, #320]
   41848:	mul	x0, x1, x0
   4184c:	str	x0, [sp, #336]
   41850:	ldr	x0, [sp, #328]
   41854:	lsl	x1, x0, #32
   41858:	ldr	x0, [sp, #472]
   4185c:	and	x0, x0, #0xffffffff
   41860:	orr	x0, x1, x0
   41864:	str	x0, [sp, #328]
   41868:	ldr	x1, [sp, #336]
   4186c:	ldr	x0, [sp, #328]
   41870:	cmp	x1, x0
   41874:	b.ls	418d0 <PyInit__decimal@@Base+0x29bf8>  // b.plast
   41878:	ldr	x0, [sp, #320]
   4187c:	sub	x0, x0, #0x1
   41880:	str	x0, [sp, #320]
   41884:	ldr	x1, [sp, #328]
   41888:	ldr	x0, [sp, #496]
   4188c:	add	x0, x1, x0
   41890:	str	x0, [sp, #328]
   41894:	ldr	x1, [sp, #496]
   41898:	ldr	x0, [sp, #328]
   4189c:	cmp	x1, x0
   418a0:	b.hi	418d0 <PyInit__decimal@@Base+0x29bf8>  // b.pmore
   418a4:	ldr	x1, [sp, #336]
   418a8:	ldr	x0, [sp, #328]
   418ac:	cmp	x1, x0
   418b0:	b.ls	418d0 <PyInit__decimal@@Base+0x29bf8>  // b.plast
   418b4:	ldr	x0, [sp, #320]
   418b8:	sub	x0, x0, #0x1
   418bc:	str	x0, [sp, #320]
   418c0:	ldr	x1, [sp, #328]
   418c4:	ldr	x0, [sp, #496]
   418c8:	add	x0, x1, x0
   418cc:	str	x0, [sp, #328]
   418d0:	ldr	x1, [sp, #328]
   418d4:	ldr	x0, [sp, #336]
   418d8:	sub	x0, x1, x0
   418dc:	str	x0, [sp, #328]
   418e0:	ldr	x0, [sp, #344]
   418e4:	lsl	x1, x0, #32
   418e8:	ldr	x0, [sp, #320]
   418ec:	orr	x0, x1, x0
   418f0:	str	x0, [sp, #392]
   418f4:	ldr	x0, [sp, #328]
   418f8:	str	x0, [sp, #472]
   418fc:	ldr	x0, [sp, #496]
   41900:	lsr	x0, x0, #32
   41904:	str	x0, [sp, #312]
   41908:	ldr	x0, [sp, #496]
   4190c:	and	x0, x0, #0xffffffff
   41910:	str	x0, [sp, #304]
   41914:	ldr	x0, [sp, #472]
   41918:	ldr	x1, [sp, #312]
   4191c:	udiv	x2, x0, x1
   41920:	ldr	x1, [sp, #312]
   41924:	mul	x1, x2, x1
   41928:	sub	x0, x0, x1
   4192c:	str	x0, [sp, #296]
   41930:	ldr	x1, [sp, #472]
   41934:	ldr	x0, [sp, #312]
   41938:	udiv	x0, x1, x0
   4193c:	str	x0, [sp, #288]
   41940:	ldr	x1, [sp, #304]
   41944:	ldr	x0, [sp, #288]
   41948:	mul	x0, x1, x0
   4194c:	str	x0, [sp, #280]
   41950:	ldr	x0, [sp, #296]
   41954:	lsl	x1, x0, #32
   41958:	ldr	x0, [sp, #480]
   4195c:	lsr	x0, x0, #32
   41960:	orr	x0, x1, x0
   41964:	str	x0, [sp, #296]
   41968:	ldr	x1, [sp, #280]
   4196c:	ldr	x0, [sp, #296]
   41970:	cmp	x1, x0
   41974:	b.ls	419d0 <PyInit__decimal@@Base+0x29cf8>  // b.plast
   41978:	ldr	x0, [sp, #288]
   4197c:	sub	x0, x0, #0x1
   41980:	str	x0, [sp, #288]
   41984:	ldr	x1, [sp, #296]
   41988:	ldr	x0, [sp, #496]
   4198c:	add	x0, x1, x0
   41990:	str	x0, [sp, #296]
   41994:	ldr	x1, [sp, #496]
   41998:	ldr	x0, [sp, #296]
   4199c:	cmp	x1, x0
   419a0:	b.hi	419d0 <PyInit__decimal@@Base+0x29cf8>  // b.pmore
   419a4:	ldr	x1, [sp, #280]
   419a8:	ldr	x0, [sp, #296]
   419ac:	cmp	x1, x0
   419b0:	b.ls	419d0 <PyInit__decimal@@Base+0x29cf8>  // b.plast
   419b4:	ldr	x0, [sp, #288]
   419b8:	sub	x0, x0, #0x1
   419bc:	str	x0, [sp, #288]
   419c0:	ldr	x1, [sp, #296]
   419c4:	ldr	x0, [sp, #496]
   419c8:	add	x0, x1, x0
   419cc:	str	x0, [sp, #296]
   419d0:	ldr	x1, [sp, #296]
   419d4:	ldr	x0, [sp, #280]
   419d8:	sub	x0, x1, x0
   419dc:	str	x0, [sp, #296]
   419e0:	ldr	x0, [sp, #296]
   419e4:	ldr	x1, [sp, #312]
   419e8:	udiv	x2, x0, x1
   419ec:	ldr	x1, [sp, #312]
   419f0:	mul	x1, x2, x1
   419f4:	sub	x0, x0, x1
   419f8:	str	x0, [sp, #272]
   419fc:	ldr	x1, [sp, #296]
   41a00:	ldr	x0, [sp, #312]
   41a04:	udiv	x0, x1, x0
   41a08:	str	x0, [sp, #264]
   41a0c:	ldr	x1, [sp, #304]
   41a10:	ldr	x0, [sp, #264]
   41a14:	mul	x0, x1, x0
   41a18:	str	x0, [sp, #280]
   41a1c:	ldr	x0, [sp, #272]
   41a20:	lsl	x1, x0, #32
   41a24:	ldr	x0, [sp, #480]
   41a28:	and	x0, x0, #0xffffffff
   41a2c:	orr	x0, x1, x0
   41a30:	str	x0, [sp, #272]
   41a34:	ldr	x1, [sp, #280]
   41a38:	ldr	x0, [sp, #272]
   41a3c:	cmp	x1, x0
   41a40:	b.ls	41a9c <PyInit__decimal@@Base+0x29dc4>  // b.plast
   41a44:	ldr	x0, [sp, #264]
   41a48:	sub	x0, x0, #0x1
   41a4c:	str	x0, [sp, #264]
   41a50:	ldr	x1, [sp, #272]
   41a54:	ldr	x0, [sp, #496]
   41a58:	add	x0, x1, x0
   41a5c:	str	x0, [sp, #272]
   41a60:	ldr	x1, [sp, #496]
   41a64:	ldr	x0, [sp, #272]
   41a68:	cmp	x1, x0
   41a6c:	b.hi	41a9c <PyInit__decimal@@Base+0x29dc4>  // b.pmore
   41a70:	ldr	x1, [sp, #280]
   41a74:	ldr	x0, [sp, #272]
   41a78:	cmp	x1, x0
   41a7c:	b.ls	41a9c <PyInit__decimal@@Base+0x29dc4>  // b.plast
   41a80:	ldr	x0, [sp, #264]
   41a84:	sub	x0, x0, #0x1
   41a88:	str	x0, [sp, #264]
   41a8c:	ldr	x1, [sp, #272]
   41a90:	ldr	x0, [sp, #496]
   41a94:	add	x0, x1, x0
   41a98:	str	x0, [sp, #272]
   41a9c:	ldr	x1, [sp, #272]
   41aa0:	ldr	x0, [sp, #280]
   41aa4:	sub	x0, x1, x0
   41aa8:	str	x0, [sp, #272]
   41aac:	ldr	x0, [sp, #288]
   41ab0:	lsl	x1, x0, #32
   41ab4:	ldr	x0, [sp, #264]
   41ab8:	orr	x0, x1, x0
   41abc:	str	x0, [sp, #400]
   41ac0:	ldr	x0, [sp, #272]
   41ac4:	str	x0, [sp, #480]
   41ac8:	ldr	x0, [sp, #504]
   41acc:	cmp	x0, #0x0
   41ad0:	b.eq	42068 <PyInit__decimal@@Base+0x2a390>  // b.none
   41ad4:	ldr	x0, [sp, #464]
   41ad8:	mov	w1, w0
   41adc:	ldr	x0, [sp, #480]
   41ae0:	lsr	x0, x0, x1
   41ae4:	str	x0, [sp, #48]
   41ae8:	str	xzr, [sp, #56]
   41aec:	ldp	x0, x1, [sp, #48]
   41af0:	ldr	x2, [sp, #504]
   41af4:	stp	x0, x1, [x2]
   41af8:	b	42068 <PyInit__decimal@@Base+0x2a390>
   41afc:	ldr	x1, [sp, #488]
   41b00:	ldr	x0, [sp, #472]
   41b04:	cmp	x1, x0
   41b08:	b.ls	41b40 <PyInit__decimal@@Base+0x29e68>  // b.plast
   41b0c:	str	xzr, [sp, #400]
   41b10:	str	xzr, [sp, #392]
   41b14:	ldr	x0, [sp, #504]
   41b18:	cmp	x0, #0x0
   41b1c:	b.eq	42068 <PyInit__decimal@@Base+0x2a390>  // b.none
   41b20:	ldr	x0, [sp, #480]
   41b24:	str	x0, [sp, #48]
   41b28:	ldr	x0, [sp, #472]
   41b2c:	str	x0, [sp, #56]
   41b30:	ldp	x0, x1, [sp, #48]
   41b34:	ldr	x2, [sp, #504]
   41b38:	stp	x0, x1, [x2]
   41b3c:	b	42068 <PyInit__decimal@@Base+0x2a390>
   41b40:	ldr	x0, [sp, #488]
   41b44:	clz	x0, x0
   41b48:	sxtw	x0, w0
   41b4c:	str	x0, [sp, #464]
   41b50:	ldr	x0, [sp, #464]
   41b54:	cmp	x0, #0x0
   41b58:	b.ne	41c00 <PyInit__decimal@@Base+0x29f28>  // b.any
   41b5c:	ldr	x1, [sp, #488]
   41b60:	ldr	x0, [sp, #472]
   41b64:	cmp	x1, x0
   41b68:	b.cc	41b7c <PyInit__decimal@@Base+0x29ea4>  // b.lo, b.ul, b.last
   41b6c:	ldr	x1, [sp, #496]
   41b70:	ldr	x0, [sp, #480]
   41b74:	cmp	x1, x0
   41b78:	b.hi	41bcc <PyInit__decimal@@Base+0x29ef4>  // b.pmore
   41b7c:	mov	x0, #0x1                   	// #1
   41b80:	str	x0, [sp, #400]
   41b84:	ldr	x1, [sp, #480]
   41b88:	ldr	x0, [sp, #496]
   41b8c:	sub	x0, x1, x0
   41b90:	str	x0, [sp, #256]
   41b94:	ldr	x1, [sp, #472]
   41b98:	ldr	x0, [sp, #488]
   41b9c:	sub	x1, x1, x0
   41ba0:	ldr	x2, [sp, #480]
   41ba4:	ldr	x0, [sp, #256]
   41ba8:	cmp	x2, x0
   41bac:	cset	w0, cc  // cc = lo, ul, last
   41bb0:	and	w0, w0, #0xff
   41bb4:	and	x0, x0, #0xff
   41bb8:	sub	x0, x1, x0
   41bbc:	str	x0, [sp, #472]
   41bc0:	ldr	x0, [sp, #256]
   41bc4:	str	x0, [sp, #480]
   41bc8:	b	41bd0 <PyInit__decimal@@Base+0x29ef8>
   41bcc:	str	xzr, [sp, #400]
   41bd0:	str	xzr, [sp, #392]
   41bd4:	ldr	x0, [sp, #504]
   41bd8:	cmp	x0, #0x0
   41bdc:	b.eq	42068 <PyInit__decimal@@Base+0x2a390>  // b.none
   41be0:	ldr	x0, [sp, #480]
   41be4:	str	x0, [sp, #48]
   41be8:	ldr	x0, [sp, #472]
   41bec:	str	x0, [sp, #56]
   41bf0:	ldp	x0, x1, [sp, #48]
   41bf4:	ldr	x2, [sp, #504]
   41bf8:	stp	x0, x1, [x2]
   41bfc:	b	42068 <PyInit__decimal@@Base+0x2a390>
   41c00:	mov	x1, #0x40                  	// #64
   41c04:	ldr	x0, [sp, #464]
   41c08:	sub	x0, x1, x0
   41c0c:	str	x0, [sp, #384]
   41c10:	ldr	x0, [sp, #464]
   41c14:	mov	w1, w0
   41c18:	ldr	x0, [sp, #488]
   41c1c:	lsl	x1, x0, x1
   41c20:	ldr	x0, [sp, #384]
   41c24:	mov	w2, w0
   41c28:	ldr	x0, [sp, #496]
   41c2c:	lsr	x0, x0, x2
   41c30:	orr	x0, x1, x0
   41c34:	str	x0, [sp, #488]
   41c38:	ldr	x0, [sp, #464]
   41c3c:	mov	w1, w0
   41c40:	ldr	x0, [sp, #496]
   41c44:	lsl	x0, x0, x1
   41c48:	str	x0, [sp, #496]
   41c4c:	ldr	x0, [sp, #384]
   41c50:	mov	w1, w0
   41c54:	ldr	x0, [sp, #472]
   41c58:	lsr	x0, x0, x1
   41c5c:	str	x0, [sp, #376]
   41c60:	ldr	x0, [sp, #464]
   41c64:	mov	w1, w0
   41c68:	ldr	x0, [sp, #472]
   41c6c:	lsl	x1, x0, x1
   41c70:	ldr	x0, [sp, #384]
   41c74:	mov	w2, w0
   41c78:	ldr	x0, [sp, #480]
   41c7c:	lsr	x0, x0, x2
   41c80:	orr	x0, x1, x0
   41c84:	str	x0, [sp, #472]
   41c88:	ldr	x0, [sp, #464]
   41c8c:	mov	w1, w0
   41c90:	ldr	x0, [sp, #480]
   41c94:	lsl	x0, x0, x1
   41c98:	str	x0, [sp, #480]
   41c9c:	ldr	x0, [sp, #488]
   41ca0:	lsr	x0, x0, #32
   41ca4:	str	x0, [sp, #248]
   41ca8:	ldr	x0, [sp, #488]
   41cac:	and	x0, x0, #0xffffffff
   41cb0:	str	x0, [sp, #240]
   41cb4:	ldr	x0, [sp, #376]
   41cb8:	ldr	x1, [sp, #248]
   41cbc:	udiv	x2, x0, x1
   41cc0:	ldr	x1, [sp, #248]
   41cc4:	mul	x1, x2, x1
   41cc8:	sub	x0, x0, x1
   41ccc:	str	x0, [sp, #232]
   41cd0:	ldr	x1, [sp, #376]
   41cd4:	ldr	x0, [sp, #248]
   41cd8:	udiv	x0, x1, x0
   41cdc:	str	x0, [sp, #224]
   41ce0:	ldr	x1, [sp, #240]
   41ce4:	ldr	x0, [sp, #224]
   41ce8:	mul	x0, x1, x0
   41cec:	str	x0, [sp, #216]
   41cf0:	ldr	x0, [sp, #232]
   41cf4:	lsl	x1, x0, #32
   41cf8:	ldr	x0, [sp, #472]
   41cfc:	lsr	x0, x0, #32
   41d00:	orr	x0, x1, x0
   41d04:	str	x0, [sp, #232]
   41d08:	ldr	x1, [sp, #216]
   41d0c:	ldr	x0, [sp, #232]
   41d10:	cmp	x1, x0
   41d14:	b.ls	41d70 <PyInit__decimal@@Base+0x2a098>  // b.plast
   41d18:	ldr	x0, [sp, #224]
   41d1c:	sub	x0, x0, #0x1
   41d20:	str	x0, [sp, #224]
   41d24:	ldr	x1, [sp, #232]
   41d28:	ldr	x0, [sp, #488]
   41d2c:	add	x0, x1, x0
   41d30:	str	x0, [sp, #232]
   41d34:	ldr	x1, [sp, #488]
   41d38:	ldr	x0, [sp, #232]
   41d3c:	cmp	x1, x0
   41d40:	b.hi	41d70 <PyInit__decimal@@Base+0x2a098>  // b.pmore
   41d44:	ldr	x1, [sp, #216]
   41d48:	ldr	x0, [sp, #232]
   41d4c:	cmp	x1, x0
   41d50:	b.ls	41d70 <PyInit__decimal@@Base+0x2a098>  // b.plast
   41d54:	ldr	x0, [sp, #224]
   41d58:	sub	x0, x0, #0x1
   41d5c:	str	x0, [sp, #224]
   41d60:	ldr	x1, [sp, #232]
   41d64:	ldr	x0, [sp, #488]
   41d68:	add	x0, x1, x0
   41d6c:	str	x0, [sp, #232]
   41d70:	ldr	x1, [sp, #232]
   41d74:	ldr	x0, [sp, #216]
   41d78:	sub	x0, x1, x0
   41d7c:	str	x0, [sp, #232]
   41d80:	ldr	x0, [sp, #232]
   41d84:	ldr	x1, [sp, #248]
   41d88:	udiv	x2, x0, x1
   41d8c:	ldr	x1, [sp, #248]
   41d90:	mul	x1, x2, x1
   41d94:	sub	x0, x0, x1
   41d98:	str	x0, [sp, #208]
   41d9c:	ldr	x1, [sp, #232]
   41da0:	ldr	x0, [sp, #248]
   41da4:	udiv	x0, x1, x0
   41da8:	str	x0, [sp, #200]
   41dac:	ldr	x1, [sp, #240]
   41db0:	ldr	x0, [sp, #200]
   41db4:	mul	x0, x1, x0
   41db8:	str	x0, [sp, #216]
   41dbc:	ldr	x0, [sp, #208]
   41dc0:	lsl	x1, x0, #32
   41dc4:	ldr	x0, [sp, #472]
   41dc8:	and	x0, x0, #0xffffffff
   41dcc:	orr	x0, x1, x0
   41dd0:	str	x0, [sp, #208]
   41dd4:	ldr	x1, [sp, #216]
   41dd8:	ldr	x0, [sp, #208]
   41ddc:	cmp	x1, x0
   41de0:	b.ls	41e3c <PyInit__decimal@@Base+0x2a164>  // b.plast
   41de4:	ldr	x0, [sp, #200]
   41de8:	sub	x0, x0, #0x1
   41dec:	str	x0, [sp, #200]
   41df0:	ldr	x1, [sp, #208]
   41df4:	ldr	x0, [sp, #488]
   41df8:	add	x0, x1, x0
   41dfc:	str	x0, [sp, #208]
   41e00:	ldr	x1, [sp, #488]
   41e04:	ldr	x0, [sp, #208]
   41e08:	cmp	x1, x0
   41e0c:	b.hi	41e3c <PyInit__decimal@@Base+0x2a164>  // b.pmore
   41e10:	ldr	x1, [sp, #216]
   41e14:	ldr	x0, [sp, #208]
   41e18:	cmp	x1, x0
   41e1c:	b.ls	41e3c <PyInit__decimal@@Base+0x2a164>  // b.plast
   41e20:	ldr	x0, [sp, #200]
   41e24:	sub	x0, x0, #0x1
   41e28:	str	x0, [sp, #200]
   41e2c:	ldr	x1, [sp, #208]
   41e30:	ldr	x0, [sp, #488]
   41e34:	add	x0, x1, x0
   41e38:	str	x0, [sp, #208]
   41e3c:	ldr	x1, [sp, #208]
   41e40:	ldr	x0, [sp, #216]
   41e44:	sub	x0, x1, x0
   41e48:	str	x0, [sp, #208]
   41e4c:	ldr	x0, [sp, #224]
   41e50:	lsl	x1, x0, #32
   41e54:	ldr	x0, [sp, #200]
   41e58:	orr	x0, x1, x0
   41e5c:	str	x0, [sp, #400]
   41e60:	ldr	x0, [sp, #208]
   41e64:	str	x0, [sp, #472]
   41e68:	ldr	x0, [sp, #400]
   41e6c:	and	x0, x0, #0xffffffff
   41e70:	str	x0, [sp, #192]
   41e74:	ldr	x0, [sp, #400]
   41e78:	lsr	x0, x0, #32
   41e7c:	str	x0, [sp, #184]
   41e80:	ldr	x0, [sp, #496]
   41e84:	and	x0, x0, #0xffffffff
   41e88:	str	x0, [sp, #176]
   41e8c:	ldr	x0, [sp, #496]
   41e90:	lsr	x0, x0, #32
   41e94:	str	x0, [sp, #168]
   41e98:	ldr	x1, [sp, #192]
   41e9c:	ldr	x0, [sp, #176]
   41ea0:	mul	x0, x1, x0
   41ea4:	str	x0, [sp, #160]
   41ea8:	ldr	x1, [sp, #192]
   41eac:	ldr	x0, [sp, #168]
   41eb0:	mul	x0, x1, x0
   41eb4:	str	x0, [sp, #152]
   41eb8:	ldr	x1, [sp, #184]
   41ebc:	ldr	x0, [sp, #176]
   41ec0:	mul	x0, x1, x0
   41ec4:	str	x0, [sp, #144]
   41ec8:	ldr	x1, [sp, #184]
   41ecc:	ldr	x0, [sp, #168]
   41ed0:	mul	x0, x1, x0
   41ed4:	str	x0, [sp, #136]
   41ed8:	ldr	x0, [sp, #160]
   41edc:	lsr	x0, x0, #32
   41ee0:	ldr	x1, [sp, #152]
   41ee4:	add	x0, x1, x0
   41ee8:	str	x0, [sp, #152]
   41eec:	ldr	x1, [sp, #152]
   41ef0:	ldr	x0, [sp, #144]
   41ef4:	add	x0, x1, x0
   41ef8:	str	x0, [sp, #152]
   41efc:	ldr	x1, [sp, #144]
   41f00:	ldr	x0, [sp, #152]
   41f04:	cmp	x1, x0
   41f08:	b.ls	41f1c <PyInit__decimal@@Base+0x2a244>  // b.plast
   41f0c:	ldr	x1, [sp, #136]
   41f10:	mov	x0, #0x100000000           	// #4294967296
   41f14:	add	x0, x1, x0
   41f18:	str	x0, [sp, #136]
   41f1c:	ldr	x0, [sp, #152]
   41f20:	lsr	x1, x0, #32
   41f24:	ldr	x0, [sp, #136]
   41f28:	add	x0, x1, x0
   41f2c:	str	x0, [sp, #128]
   41f30:	ldr	x0, [sp, #152]
   41f34:	and	x0, x0, #0xffffffff
   41f38:	lsl	x1, x0, #32
   41f3c:	ldr	x0, [sp, #160]
   41f40:	and	x0, x0, #0xffffffff
   41f44:	add	x0, x1, x0
   41f48:	str	x0, [sp, #120]
   41f4c:	ldr	x1, [sp, #472]
   41f50:	ldr	x0, [sp, #128]
   41f54:	cmp	x1, x0
   41f58:	b.cc	41f7c <PyInit__decimal@@Base+0x2a2a4>  // b.lo, b.ul, b.last
   41f5c:	ldr	x1, [sp, #472]
   41f60:	ldr	x0, [sp, #128]
   41f64:	cmp	x1, x0
   41f68:	b.ne	41fcc <PyInit__decimal@@Base+0x2a2f4>  // b.any
   41f6c:	ldr	x1, [sp, #480]
   41f70:	ldr	x0, [sp, #120]
   41f74:	cmp	x1, x0
   41f78:	b.cs	41fcc <PyInit__decimal@@Base+0x2a2f4>  // b.hs, b.nlast
   41f7c:	ldr	x0, [sp, #400]
   41f80:	sub	x0, x0, #0x1
   41f84:	str	x0, [sp, #400]
   41f88:	ldr	x1, [sp, #120]
   41f8c:	ldr	x0, [sp, #496]
   41f90:	sub	x0, x1, x0
   41f94:	str	x0, [sp, #112]
   41f98:	ldr	x1, [sp, #128]
   41f9c:	ldr	x0, [sp, #488]
   41fa0:	sub	x1, x1, x0
   41fa4:	ldr	x2, [sp, #120]
   41fa8:	ldr	x0, [sp, #112]
   41fac:	cmp	x2, x0
   41fb0:	cset	w0, cc  // cc = lo, ul, last
   41fb4:	and	w0, w0, #0xff
   41fb8:	and	x0, x0, #0xff
   41fbc:	sub	x0, x1, x0
   41fc0:	str	x0, [sp, #128]
   41fc4:	ldr	x0, [sp, #112]
   41fc8:	str	x0, [sp, #120]
   41fcc:	str	xzr, [sp, #392]
   41fd0:	ldr	x0, [sp, #504]
   41fd4:	cmp	x0, #0x0
   41fd8:	b.eq	42068 <PyInit__decimal@@Base+0x2a390>  // b.none
   41fdc:	ldr	x1, [sp, #480]
   41fe0:	ldr	x0, [sp, #120]
   41fe4:	sub	x0, x1, x0
   41fe8:	str	x0, [sp, #104]
   41fec:	ldr	x1, [sp, #472]
   41ff0:	ldr	x0, [sp, #128]
   41ff4:	sub	x1, x1, x0
   41ff8:	ldr	x2, [sp, #480]
   41ffc:	ldr	x0, [sp, #104]
   42000:	cmp	x2, x0
   42004:	cset	w0, cc  // cc = lo, ul, last
   42008:	and	w0, w0, #0xff
   4200c:	and	x0, x0, #0xff
   42010:	sub	x0, x1, x0
   42014:	str	x0, [sp, #472]
   42018:	ldr	x0, [sp, #104]
   4201c:	str	x0, [sp, #480]
   42020:	ldr	x0, [sp, #384]
   42024:	mov	w1, w0
   42028:	ldr	x0, [sp, #472]
   4202c:	lsl	x1, x0, x1
   42030:	ldr	x0, [sp, #464]
   42034:	mov	w2, w0
   42038:	ldr	x0, [sp, #480]
   4203c:	lsr	x0, x0, x2
   42040:	orr	x0, x1, x0
   42044:	str	x0, [sp, #48]
   42048:	ldr	x0, [sp, #464]
   4204c:	mov	w1, w0
   42050:	ldr	x0, [sp, #472]
   42054:	lsr	x0, x0, x1
   42058:	str	x0, [sp, #56]
   4205c:	ldp	x0, x1, [sp, #48]
   42060:	ldr	x2, [sp, #504]
   42064:	stp	x0, x1, [x2]
   42068:	ldr	x0, [sp, #400]
   4206c:	str	x0, [sp, #32]
   42070:	ldr	x0, [sp, #392]
   42074:	str	x0, [sp, #40]
   42078:	ldp	x0, x1, [sp, #32]
   4207c:	add	sp, sp, #0x220
   42080:	ret

Disassembly of section .fini:

0000000000042084 <.fini>:
   42084:	stp	x29, x30, [sp, #-16]!
   42088:	mov	x29, sp
   4208c:	ldp	x29, x30, [sp], #16
   42090:	ret
