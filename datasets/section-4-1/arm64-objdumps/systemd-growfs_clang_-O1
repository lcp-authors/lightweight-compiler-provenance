
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-growfs_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211598 <_start>:
  211598:	mov	x29, #0x0                   	// #0
  21159c:	mov	x30, #0x0                   	// #0
  2115a0:	mov	x5, x0
  2115a4:	ldr	x1, [sp]
  2115a8:	add	x2, sp, #0x8
  2115ac:	mov	x6, sp
  2115b0:	movz	x0, #0x0, lsl #48
  2115b4:	movk	x0, #0x0, lsl #32
  2115b8:	movk	x0, #0x21, lsl #16
  2115bc:	movk	x0, #0x16e8
  2115c0:	movz	x3, #0x0, lsl #48
  2115c4:	movk	x3, #0x0, lsl #32
  2115c8:	movk	x3, #0x21, lsl #16
  2115cc:	movk	x3, #0x2370
  2115d0:	movz	x4, #0x0, lsl #48
  2115d4:	movk	x4, #0x0, lsl #32
  2115d8:	movk	x4, #0x21, lsl #16
  2115dc:	movk	x4, #0x23f0
  2115e0:	bl	212440 <__libc_start_main@plt>
  2115e4:	bl	212450 <abort@plt>

00000000002115e8 <call_weak_fn>:
  2115e8:	adrp	x0, 222000 <log_oom_internal@plt+0xfa00>
  2115ec:	ldr	x0, [x0, #2032]
  2115f0:	cbz	x0, 2115f8 <call_weak_fn+0x10>
  2115f4:	b	212460 <__gmon_start__@plt>
  2115f8:	ret

00000000002115fc <deregister_tm_clones>:
  2115fc:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  211600:	add	x0, x0, #0x8f8
  211604:	adrp	x1, 232000 <_DYNAMIC+0xf9e0>
  211608:	add	x1, x1, #0x8f8
  21160c:	cmp	x0, x1
  211610:	b.eq	211644 <deregister_tm_clones+0x48>  // b.none
  211614:	stp	x29, x30, [sp, #-32]!
  211618:	mov	x29, sp
  21161c:	adrp	x0, 200000 <parse_argv.options-0x13e0>
  211620:	ldr	x0, [x0, #3448]
  211624:	str	x0, [sp, #24]
  211628:	mov	x1, x0
  21162c:	cbz	x1, 21163c <deregister_tm_clones+0x40>
  211630:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  211634:	add	x0, x0, #0x8f8
  211638:	blr	x1
  21163c:	ldp	x29, x30, [sp], #32
  211640:	ret
  211644:	ret

0000000000211648 <register_tm_clones>:
  211648:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  21164c:	add	x0, x0, #0x8f8
  211650:	adrp	x1, 232000 <_DYNAMIC+0xf9e0>
  211654:	add	x1, x1, #0x8f8
  211658:	sub	x0, x0, x1
  21165c:	lsr	x1, x0, #63
  211660:	add	x0, x1, x0, asr #3
  211664:	cmp	xzr, x0, asr #1
  211668:	b.eq	2116a0 <register_tm_clones+0x58>  // b.none
  21166c:	stp	x29, x30, [sp, #-32]!
  211670:	mov	x29, sp
  211674:	asr	x1, x0, #1
  211678:	adrp	x0, 200000 <parse_argv.options-0x13e0>
  21167c:	ldr	x0, [x0, #3456]
  211680:	str	x0, [sp, #24]
  211684:	mov	x2, x0
  211688:	cbz	x2, 211698 <register_tm_clones+0x50>
  21168c:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  211690:	add	x0, x0, #0x8f8
  211694:	blr	x2
  211698:	ldp	x29, x30, [sp], #32
  21169c:	ret
  2116a0:	ret

00000000002116a4 <__do_global_dtors_aux>:
  2116a4:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  2116a8:	ldrb	w0, [x0, #2296]
  2116ac:	cbnz	w0, 2116d0 <__do_global_dtors_aux+0x2c>
  2116b0:	stp	x29, x30, [sp, #-16]!
  2116b4:	mov	x29, sp
  2116b8:	bl	2115fc <deregister_tm_clones>
  2116bc:	adrp	x0, 232000 <_DYNAMIC+0xf9e0>
  2116c0:	mov	w1, #0x1                   	// #1
  2116c4:	strb	w1, [x0, #2296]
  2116c8:	ldp	x29, x30, [sp], #16
  2116cc:	ret
  2116d0:	ret

00000000002116d4 <frame_dummy>:
  2116d4:	stp	x29, x30, [sp, #-16]!
  2116d8:	mov	x29, sp
  2116dc:	bl	211648 <register_tm_clones>
  2116e0:	ldp	x29, x30, [sp], #16
  2116e4:	ret

00000000002116e8 <main>:
  2116e8:	sub	sp, sp, #0x100
  2116ec:	stp	x29, x30, [sp, #192]
  2116f0:	add	x29, sp, #0xc0
  2116f4:	stp	x24, x23, [sp, #208]
  2116f8:	sub	x23, x29, #0x18
  2116fc:	mov	w8, #0xffffffff            	// #-1
  211700:	stp	x22, x21, [sp, #224]
  211704:	stp	x20, x19, [sp, #240]
  211708:	mov	x19, x1
  21170c:	mov	w20, w0
  211710:	stp	w8, w8, [x29, #-8]
  211714:	str	xzr, [x23, #8]
  211718:	bl	212470 <log_setup_service@plt>
  21171c:	mov	w0, w20
  211720:	mov	x1, x19
  211724:	bl	211bf8 <parse_argv>
  211728:	tbnz	w0, #31, 211b90 <main+0x4a8>
  21172c:	cbz	w0, 211b48 <main+0x460>
  211730:	adrp	x22, 232000 <_DYNAMIC+0xf9e0>
  211734:	ldr	x0, [x22, #2304]
  211738:	mov	x1, xzr
  21173c:	mov	w2, wzr
  211740:	bl	212480 <path_is_mount_point@plt>
  211744:	mov	w19, w0
  211748:	tbnz	w0, #31, 211810 <main+0x128>
  21174c:	cbz	w19, 211848 <main+0x160>
  211750:	ldr	x0, [x22, #2304]
  211754:	add	x1, sp, #0x20
  211758:	bl	212490 <get_block_device@plt>
  21175c:	tbnz	w0, #31, 211884 <main+0x19c>
  211760:	ldr	x0, [x22, #2304]
  211764:	ldr	x1, [sp, #32]
  211768:	bl	211da0 <maybe_resize_slave_device>
  21176c:	tbnz	w0, #31, 211b90 <main+0x4a8>
  211770:	ldr	x0, [x22, #2304]
  211774:	mov	w1, #0x80000               	// #524288
  211778:	bl	2124a0 <open64@plt>
  21177c:	stur	w0, [x29, #-4]
  211780:	tbnz	w0, #31, 2118cc <main+0x1e4>
  211784:	ldr	x1, [sp, #32]
  211788:	mov	w19, w0
  21178c:	sub	x2, x29, #0x10
  211790:	mov	w0, #0x6000                	// #24576
  211794:	bl	2124b0 <device_path_make_major_minor@plt>
  211798:	tbnz	w0, #31, 21190c <main+0x224>
  21179c:	ldr	x0, [x23, #8]
  2117a0:	mov	w1, #0x80000               	// #524288
  2117a4:	bl	2124a0 <open64@plt>
  2117a8:	stur	w0, [x29, #-8]
  2117ac:	tbnz	w0, #31, 211950 <main+0x268>
  2117b0:	mov	w1, #0x1270                	// #4720
  2117b4:	mov	w21, #0x1270                	// #4720
  2117b8:	add	x2, sp, #0x1c
  2117bc:	movk	w1, #0x8008, lsl #16
  2117c0:	mov	w20, w0
  2117c4:	movk	w21, #0x8008, lsl #16
  2117c8:	bl	2124c0 <ioctl@plt>
  2117cc:	cbz	w0, 211990 <main+0x2a8>
  2117d0:	mov	w0, wzr
  2117d4:	bl	2124d0 <log_get_max_level_realm@plt>
  2117d8:	cmp	w0, #0x3
  2117dc:	b.lt	211b90 <main+0x4a8>  // b.tstop
  2117e0:	bl	2124e0 <__errno_location@plt>
  2117e4:	ldr	w1, [x0]
  2117e8:	ldr	x6, [x23, #8]
  2117ec:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2117f0:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  2117f4:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  2117f8:	add	x2, x2, #0xf34
  2117fc:	add	x4, x4, #0x1e
  211800:	add	x5, x5, #0x1bd
  211804:	mov	w0, #0x3                   	// #3
  211808:	mov	w3, #0x123                 	// #291
  21180c:	b	2118c0 <main+0x1d8>
  211810:	mov	w0, wzr
  211814:	bl	2124d0 <log_get_max_level_realm@plt>
  211818:	cmp	w0, #0x3
  21181c:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211820:	ldr	x6, [x22, #2304]
  211824:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211828:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  21182c:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211830:	add	x2, x2, #0xf34
  211834:	add	x4, x4, #0x1e
  211838:	add	x5, x5, #0xe60
  21183c:	mov	w0, #0x3                   	// #3
  211840:	mov	w3, #0xfe                  	// #254
  211844:	b	2118bc <main+0x1d4>
  211848:	mov	w0, wzr
  21184c:	bl	2124d0 <log_get_max_level_realm@plt>
  211850:	cmp	w0, #0x3
  211854:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211858:	ldr	x6, [x22, #2304]
  21185c:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211860:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211864:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211868:	add	x2, x2, #0xf34
  21186c:	add	x4, x4, #0x1e
  211870:	add	x5, x5, #0xef7
  211874:	mov	w0, #0x3                   	// #3
  211878:	mov	w3, #0x102                 	// #258
  21187c:	mov	w1, wzr
  211880:	b	2118c0 <main+0x1d8>
  211884:	mov	w19, w0
  211888:	mov	w0, wzr
  21188c:	bl	2124d0 <log_get_max_level_realm@plt>
  211890:	cmp	w0, #0x3
  211894:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211898:	ldr	x6, [x22, #2304]
  21189c:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2118a0:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  2118a4:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  2118a8:	add	x2, x2, #0xf34
  2118ac:	add	x4, x4, #0x1e
  2118b0:	add	x5, x5, #0x29d
  2118b4:	mov	w0, #0x3                   	// #3
  2118b8:	mov	w3, #0x108                 	// #264
  2118bc:	mov	w1, w19
  2118c0:	bl	2124f0 <log_internal_realm@plt>
  2118c4:	mov	w19, #0x1                   	// #1
  2118c8:	b	211b94 <main+0x4ac>
  2118cc:	mov	w0, wzr
  2118d0:	bl	2124d0 <log_get_max_level_realm@plt>
  2118d4:	cmp	w0, #0x3
  2118d8:	b.lt	211b90 <main+0x4a8>  // b.tstop
  2118dc:	bl	2124e0 <__errno_location@plt>
  2118e0:	ldr	w1, [x0]
  2118e4:	ldr	x6, [x22, #2304]
  2118e8:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2118ec:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  2118f0:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  2118f4:	add	x2, x2, #0xf34
  2118f8:	add	x4, x4, #0x1e
  2118fc:	add	x5, x5, #0xfd0
  211900:	mov	w0, #0x3                   	// #3
  211904:	mov	w3, #0x112                 	// #274
  211908:	b	2118c0 <main+0x1d8>
  21190c:	mov	w20, w0
  211910:	mov	w0, wzr
  211914:	bl	2124d0 <log_get_max_level_realm@plt>
  211918:	cmp	w0, #0x3
  21191c:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211920:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211924:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211928:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  21192c:	add	x2, x2, #0xf34
  211930:	add	x4, x4, #0x1e
  211934:	add	x5, x5, #0xdc5
  211938:	mov	w0, #0x3                   	// #3
  21193c:	mov	w3, #0x118                 	// #280
  211940:	mov	w1, w20
  211944:	bl	2124f0 <log_internal_realm@plt>
  211948:	mov	w19, #0x1                   	// #1
  21194c:	b	211b94 <main+0x4ac>
  211950:	mov	w0, wzr
  211954:	bl	2124d0 <log_get_max_level_realm@plt>
  211958:	cmp	w0, #0x3
  21195c:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211960:	bl	2124e0 <__errno_location@plt>
  211964:	ldr	w1, [x0]
  211968:	ldr	x6, [x23, #8]
  21196c:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211970:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211974:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211978:	add	x2, x2, #0xf34
  21197c:	add	x4, x4, #0x1e
  211980:	add	x5, x5, #0xfd0
  211984:	mov	w0, #0x3                   	// #3
  211988:	mov	w3, #0x11e                 	// #286
  21198c:	b	2118c0 <main+0x1d8>
  211990:	add	x1, x21, #0x2
  211994:	sub	x2, x29, #0x18
  211998:	mov	w0, w20
  21199c:	bl	2124c0 <ioctl@plt>
  2119a0:	cbz	w0, 2119e4 <main+0x2fc>
  2119a4:	mov	w0, wzr
  2119a8:	bl	2124d0 <log_get_max_level_realm@plt>
  2119ac:	cmp	w0, #0x3
  2119b0:	b.lt	211b90 <main+0x4a8>  // b.tstop
  2119b4:	bl	2124e0 <__errno_location@plt>
  2119b8:	ldr	w1, [x0]
  2119bc:	ldr	x6, [x23, #8]
  2119c0:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2119c4:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  2119c8:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  2119cc:	add	x2, x2, #0xf34
  2119d0:	add	x4, x4, #0x1e
  2119d4:	add	x5, x5, #0xe8d
  2119d8:	mov	w0, #0x3                   	// #3
  2119dc:	mov	w3, #0x128                 	// #296
  2119e0:	b	2118c0 <main+0x1d8>
  2119e4:	ldr	x20, [x23]
  2119e8:	ldrsw	x21, [sp, #28]
  2119ec:	udiv	x8, x20, x21
  2119f0:	msub	x24, x8, x21, x20
  2119f4:	cbz	x24, 211a3c <main+0x354>
  2119f8:	mov	w0, wzr
  2119fc:	bl	2124d0 <log_get_max_level_realm@plt>
  211a00:	cmp	w0, #0x5
  211a04:	b.lt	211a3c <main+0x354>  // b.tstop
  211a08:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211a0c:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211a10:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211a14:	add	x2, x2, #0xf34
  211a18:	add	x4, x4, #0x1e
  211a1c:	add	x5, x5, #0x2ce
  211a20:	mov	w0, #0x5                   	// #5
  211a24:	mov	w3, #0x12e                 	// #302
  211a28:	mov	w1, wzr
  211a2c:	mov	x6, x20
  211a30:	mov	w7, w21
  211a34:	str	x24, [sp]
  211a38:	bl	2124f0 <log_internal_realm@plt>
  211a3c:	ldr	x20, [x23]
  211a40:	ldrsw	x24, [sp, #28]
  211a44:	add	x1, sp, #0x28
  211a48:	mov	w0, w19
  211a4c:	bl	212500 <fstatfs64@plt>
  211a50:	tbnz	w0, #31, 211a90 <main+0x3a8>
  211a54:	ldr	x21, [sp, #40]
  211a58:	mov	w8, #0x683e                	// #26686
  211a5c:	movk	w8, #0x9123, lsl #16
  211a60:	udiv	x20, x20, x24
  211a64:	cmp	x21, x8
  211a68:	b.eq	211ad0 <main+0x3e8>  // b.none
  211a6c:	mov	w8, #0xef53                	// #61267
  211a70:	cmp	x21, x8
  211a74:	b.ne	211b50 <main+0x468>  // b.any
  211a78:	ldr	x0, [x22, #2304]
  211a7c:	ldrsw	x3, [sp, #28]
  211a80:	mov	w1, w19
  211a84:	mov	x2, x20
  211a88:	bl	212038 <resize_ext4>
  211a8c:	b	211ae4 <main+0x3fc>
  211a90:	mov	w0, wzr
  211a94:	bl	2124d0 <log_get_max_level_realm@plt>
  211a98:	cmp	w0, #0x3
  211a9c:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211aa0:	bl	2124e0 <__errno_location@plt>
  211aa4:	ldr	w1, [x0]
  211aa8:	ldr	x6, [x22, #2304]
  211aac:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211ab0:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211ab4:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211ab8:	add	x2, x2, #0xf34
  211abc:	add	x4, x4, #0x1e
  211ac0:	add	x5, x5, #0x279
  211ac4:	mov	w0, #0x3                   	// #3
  211ac8:	mov	w3, #0x133                 	// #307
  211acc:	b	2118c0 <main+0x1d8>
  211ad0:	ldr	x0, [x22, #2304]
  211ad4:	ldrsw	x3, [sp, #28]
  211ad8:	mov	w1, w19
  211adc:	mov	x2, x20
  211ae0:	bl	212118 <resize_btrfs>
  211ae4:	tbnz	w0, #31, 211b90 <main+0x4a8>
  211ae8:	mov	w0, wzr
  211aec:	bl	2124d0 <log_get_max_level_realm@plt>
  211af0:	cmp	w0, #0x6
  211af4:	mov	w19, wzr
  211af8:	b.lt	211b94 <main+0x4ac>  // b.tstop
  211afc:	ldr	x1, [x23]
  211b00:	ldr	x19, [x22, #2304]
  211b04:	sub	x0, x29, #0x20
  211b08:	bl	2122b8 <format_bytes>
  211b0c:	ldr	w8, [sp, #28]
  211b10:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211b14:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211b18:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211b1c:	mov	x7, x0
  211b20:	add	x2, x2, #0xf34
  211b24:	add	x4, x4, #0x1e
  211b28:	add	x5, x5, #0x31b
  211b2c:	mov	w0, #0x6                   	// #6
  211b30:	mov	w3, #0x148                 	// #328
  211b34:	mov	w1, wzr
  211b38:	mov	x6, x19
  211b3c:	str	w8, [sp, #8]
  211b40:	str	x20, [sp]
  211b44:	bl	2124f0 <log_internal_realm@plt>
  211b48:	mov	w19, wzr
  211b4c:	b	211b94 <main+0x4ac>
  211b50:	mov	w0, wzr
  211b54:	bl	2124d0 <log_get_max_level_realm@plt>
  211b58:	cmp	w0, #0x3
  211b5c:	b.lt	211b90 <main+0x4a8>  // b.tstop
  211b60:	ldr	x7, [x22, #2304]
  211b64:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211b68:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211b6c:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211b70:	add	x2, x2, #0xf34
  211b74:	add	x4, x4, #0x1e
  211b78:	add	x5, x5, #0x1e4
  211b7c:	mov	w0, #0x3                   	// #3
  211b80:	mov	w3, #0x140                 	// #320
  211b84:	mov	w1, wzr
  211b88:	mov	x6, x21
  211b8c:	bl	2124f0 <log_internal_realm@plt>
  211b90:	mov	w19, #0x1                   	// #1
  211b94:	sub	x0, x29, #0x10
  211b98:	bl	211be0 <freep>
  211b9c:	sub	x0, x29, #0x8
  211ba0:	bl	211bc8 <closep>
  211ba4:	sub	x0, x29, #0x4
  211ba8:	bl	211bc8 <closep>
  211bac:	mov	w0, w19
  211bb0:	ldp	x20, x19, [sp, #240]
  211bb4:	ldp	x22, x21, [sp, #224]
  211bb8:	ldp	x24, x23, [sp, #208]
  211bbc:	ldp	x29, x30, [sp, #192]
  211bc0:	add	sp, sp, #0x100
  211bc4:	ret

0000000000211bc8 <closep>:
  211bc8:	stp	x29, x30, [sp, #-16]!
  211bcc:	ldr	w0, [x0]
  211bd0:	mov	x29, sp
  211bd4:	bl	212510 <safe_close@plt>
  211bd8:	ldp	x29, x30, [sp], #16
  211bdc:	ret

0000000000211be0 <freep>:
  211be0:	stp	x29, x30, [sp, #-16]!
  211be4:	ldr	x0, [x0]
  211be8:	mov	x29, sp
  211bec:	bl	212520 <free@plt>
  211bf0:	ldp	x29, x30, [sp], #16
  211bf4:	ret

0000000000211bf8 <parse_argv>:
  211bf8:	stp	x29, x30, [sp, #-64]!
  211bfc:	stp	x24, x23, [sp, #16]
  211c00:	stp	x22, x21, [sp, #32]
  211c04:	stp	x20, x19, [sp, #48]
  211c08:	mov	x29, sp
  211c0c:	tbnz	w0, #31, 211d34 <parse_argv+0x13c>
  211c10:	mov	x19, x1
  211c14:	cbz	x1, 211d58 <parse_argv+0x160>
  211c18:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211c1c:	adrp	x3, 201000 <parse_argv.options-0x3e0>
  211c20:	add	x2, x2, #0xe5d
  211c24:	add	x3, x3, #0x3e0
  211c28:	mov	x1, x19
  211c2c:	mov	x4, xzr
  211c30:	mov	w20, w0
  211c34:	bl	212530 <getopt_long@plt>
  211c38:	tbnz	w0, #31, 211c84 <parse_argv+0x8c>
  211c3c:	adrp	x21, 200000 <parse_argv.options-0x13e0>
  211c40:	adrp	x22, 201000 <parse_argv.options-0x3e0>
  211c44:	adrp	x23, 232000 <_DYNAMIC+0xf9e0>
  211c48:	mov	w24, #0x1                   	// #1
  211c4c:	add	x21, x21, #0xe5d
  211c50:	add	x22, x22, #0x3e0
  211c54:	cmp	w0, #0x6d
  211c58:	b.le	211cac <parse_argv+0xb4>
  211c5c:	cmp	w0, #0x6e
  211c60:	b.ne	211cc4 <parse_argv+0xcc>  // b.any
  211c64:	mov	w0, w20
  211c68:	mov	x1, x19
  211c6c:	mov	x2, x21
  211c70:	mov	x3, x22
  211c74:	mov	x4, xzr
  211c78:	strb	w24, [x23, #2312]
  211c7c:	bl	212530 <getopt_long@plt>
  211c80:	tbz	w0, #31, 211c54 <parse_argv+0x5c>
  211c84:	adrp	x8, 232000 <_DYNAMIC+0xf9e0>
  211c88:	ldrsw	x8, [x8, #2320]
  211c8c:	add	w9, w8, #0x1
  211c90:	cmp	w9, w20
  211c94:	b.ne	211cd4 <parse_argv+0xdc>  // b.any
  211c98:	ldr	x8, [x19, x8, lsl #3]
  211c9c:	adrp	x9, 232000 <_DYNAMIC+0xf9e0>
  211ca0:	mov	w0, #0x1                   	// #1
  211ca4:	str	x8, [x9, #2304]
  211ca8:	b	211d20 <parse_argv+0x128>
  211cac:	cmp	w0, #0x3f
  211cb0:	b.eq	211d1c <parse_argv+0x124>  // b.none
  211cb4:	cmp	w0, #0x68
  211cb8:	b.ne	211d7c <parse_argv+0x184>  // b.any
  211cbc:	bl	2122d8 <help>
  211cc0:	b	211d20 <parse_argv+0x128>
  211cc4:	cmp	w0, #0x100
  211cc8:	b.ne	211d7c <parse_argv+0x184>  // b.any
  211ccc:	bl	212540 <version@plt>
  211cd0:	b	211d20 <parse_argv+0x128>
  211cd4:	mov	w0, wzr
  211cd8:	bl	2124d0 <log_get_max_level_realm@plt>
  211cdc:	cmp	w0, #0x3
  211ce0:	b.lt	211d1c <parse_argv+0x124>  // b.tstop
  211ce4:	adrp	x8, 232000 <_DYNAMIC+0xf9e0>
  211ce8:	ldr	x6, [x8, #2328]
  211cec:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211cf0:	adrp	x4, 200000 <parse_argv.options-0x13e0>
  211cf4:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211cf8:	mov	w1, #0x16                  	// #22
  211cfc:	add	x2, x2, #0xf34
  211d00:	add	x4, x4, #0xf8b
  211d04:	add	x5, x5, #0xf4b
  211d08:	mov	w0, #0x3                   	// #3
  211d0c:	movk	w1, #0x4000, lsl #16
  211d10:	mov	w3, #0xe3                  	// #227
  211d14:	bl	2124f0 <log_internal_realm@plt>
  211d18:	b	211d20 <parse_argv+0x128>
  211d1c:	mov	w0, #0xffffffea            	// #-22
  211d20:	ldp	x20, x19, [sp, #48]
  211d24:	ldp	x22, x21, [sp, #32]
  211d28:	ldp	x24, x23, [sp, #16]
  211d2c:	ldp	x29, x30, [sp], #64
  211d30:	ret
  211d34:	adrp	x1, 200000 <parse_argv.options-0x13e0>
  211d38:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211d3c:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211d40:	add	x1, x1, #0xf1d
  211d44:	add	x2, x2, #0xf34
  211d48:	add	x4, x4, #0x396
  211d4c:	mov	w3, #0xca                  	// #202
  211d50:	mov	w0, wzr
  211d54:	bl	212550 <log_assert_failed_realm@plt>
  211d58:	adrp	x1, 200000 <parse_argv.options-0x13e0>
  211d5c:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211d60:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211d64:	add	x1, x1, #0xf7e
  211d68:	add	x2, x2, #0xf34
  211d6c:	add	x4, x4, #0x396
  211d70:	mov	w3, #0xcb                  	// #203
  211d74:	mov	w0, wzr
  211d78:	bl	212550 <log_assert_failed_realm@plt>
  211d7c:	adrp	x1, 201000 <parse_argv.options-0x3e0>
  211d80:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211d84:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211d88:	add	x1, x1, #0x9b
  211d8c:	add	x2, x2, #0xf34
  211d90:	add	x4, x4, #0x396
  211d94:	mov	w3, #0xdd                  	// #221
  211d98:	mov	w0, wzr
  211d9c:	bl	212560 <log_assert_failed_unreachable_realm@plt>

0000000000211da0 <maybe_resize_slave_device>:
  211da0:	sub	sp, sp, #0x70
  211da4:	stp	x29, x30, [sp, #48]
  211da8:	add	x29, sp, #0x30
  211dac:	stp	x20, x19, [sp, #96]
  211db0:	mov	x19, x1
  211db4:	sub	x1, x29, #0x10
  211db8:	str	x23, [sp, #64]
  211dbc:	stp	x22, x21, [sp, #80]
  211dc0:	mov	x20, x0
  211dc4:	str	xzr, [x29, #24]
  211dc8:	stur	xzr, [x29, #-8]
  211dcc:	bl	212570 <get_block_device_harder@plt>
  211dd0:	mov	w21, w0
  211dd4:	mov	w0, wzr
  211dd8:	bl	2124d0 <log_get_max_level_realm@plt>
  211ddc:	tbnz	w21, #31, 211e80 <maybe_resize_slave_device+0xe0>
  211de0:	cmp	w0, #0x7
  211de4:	b.lt	211e6c <maybe_resize_slave_device+0xcc>  // b.tstop
  211de8:	ldur	x20, [x29, #-16]
  211dec:	mov	x0, x20
  211df0:	bl	212580 <gnu_dev_major@plt>
  211df4:	mov	w21, w0
  211df8:	mov	x0, x20
  211dfc:	bl	212590 <gnu_dev_minor@plt>
  211e00:	mov	w22, w0
  211e04:	mov	x0, x19
  211e08:	bl	212580 <gnu_dev_major@plt>
  211e0c:	mov	w23, w0
  211e10:	mov	x0, x19
  211e14:	bl	212590 <gnu_dev_minor@plt>
  211e18:	adrp	x8, 200000 <parse_argv.options-0x13e0>
  211e1c:	adrp	x9, 201000 <parse_argv.options-0x3e0>
  211e20:	add	x8, x8, #0xf27
  211e24:	add	x9, x9, #0x19
  211e28:	cmp	x20, x19
  211e2c:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211e30:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211e34:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211e38:	csel	x8, x9, x8, eq  // eq = none
  211e3c:	str	w0, [sp, #8]
  211e40:	add	x2, x2, #0xf34
  211e44:	add	x4, x4, #0x3c0
  211e48:	add	x5, x5, #0x20d
  211e4c:	mov	w0, #0x7                   	// #7
  211e50:	mov	w3, #0x8f                  	// #143
  211e54:	mov	w1, wzr
  211e58:	mov	w6, w21
  211e5c:	mov	w7, w22
  211e60:	str	x8, [sp, #16]
  211e64:	str	w23, [sp]
  211e68:	bl	2124f0 <log_internal_realm@plt>
  211e6c:	ldur	x1, [x29, #-16]
  211e70:	cmp	x1, x19
  211e74:	b.ne	211eb4 <maybe_resize_slave_device+0x114>  // b.any
  211e78:	mov	w19, wzr
  211e7c:	b	21200c <maybe_resize_slave_device+0x26c>
  211e80:	cmp	w0, #0x3
  211e84:	b.lt	211f14 <maybe_resize_slave_device+0x174>  // b.tstop
  211e88:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211e8c:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211e90:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211e94:	add	x2, x2, #0xf34
  211e98:	add	x4, x4, #0x3c0
  211e9c:	add	x5, x5, #0xf96
  211ea0:	mov	w0, #0x3                   	// #3
  211ea4:	mov	w3, #0x8a                  	// #138
  211ea8:	mov	w1, w21
  211eac:	mov	x6, x20
  211eb0:	b	211ff4 <maybe_resize_slave_device+0x254>
  211eb4:	sub	x2, x29, #0x8
  211eb8:	mov	w0, #0x6000                	// #24576
  211ebc:	bl	2124b0 <device_path_make_major_minor@plt>
  211ec0:	tbnz	w0, #31, 211f20 <maybe_resize_slave_device+0x180>
  211ec4:	ldur	x0, [x29, #-8]
  211ec8:	add	x1, x29, #0x18
  211ecc:	bl	2125a0 <probe_filesystem@plt>
  211ed0:	cmn	w0, #0x75
  211ed4:	b.ne	211f64 <maybe_resize_slave_device+0x1c4>  // b.any
  211ed8:	mov	w0, wzr
  211edc:	bl	2124d0 <log_get_max_level_realm@plt>
  211ee0:	cmp	w0, #0x4
  211ee4:	b.lt	211fbc <maybe_resize_slave_device+0x21c>  // b.tstop
  211ee8:	ldur	x6, [x29, #-8]
  211eec:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211ef0:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211ef4:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  211ef8:	add	x2, x2, #0xf34
  211efc:	add	x4, x4, #0x3c0
  211f00:	add	x5, x5, #0x35b
  211f04:	mov	w0, #0x4                   	// #4
  211f08:	mov	w1, #0xffffff8b            	// #-117
  211f0c:	mov	w3, #0x99                  	// #153
  211f10:	b	211ff4 <maybe_resize_slave_device+0x254>
  211f14:	mov	w8, wzr
  211f18:	neg	w9, w21
  211f1c:	b	212008 <maybe_resize_slave_device+0x268>
  211f20:	mov	w19, w0
  211f24:	mov	w0, wzr
  211f28:	bl	2124d0 <log_get_max_level_realm@plt>
  211f2c:	cmp	w0, #0x3
  211f30:	b.lt	212000 <maybe_resize_slave_device+0x260>  // b.tstop
  211f34:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211f38:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211f3c:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211f40:	add	x2, x2, #0xf34
  211f44:	add	x4, x4, #0x3c0
  211f48:	add	x5, x5, #0xdc5
  211f4c:	mov	w0, #0x3                   	// #3
  211f50:	mov	w3, #0x95                  	// #149
  211f54:	mov	w1, w19
  211f58:	bl	2124f0 <log_internal_realm@plt>
  211f5c:	mov	w19, w0
  211f60:	b	21200c <maybe_resize_slave_device+0x26c>
  211f64:	mov	w19, w0
  211f68:	mov	w0, wzr
  211f6c:	bl	2124d0 <log_get_max_level_realm@plt>
  211f70:	tbnz	w19, #31, 211fc4 <maybe_resize_slave_device+0x224>
  211f74:	cmp	w0, #0x7
  211f78:	b.lt	211e78 <maybe_resize_slave_device+0xd8>  // b.tstop
  211f7c:	ldr	x0, [x29, #24]
  211f80:	ldur	x19, [x29, #-8]
  211f84:	bl	21235c <strnull>
  211f88:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211f8c:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211f90:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211f94:	mov	x7, x0
  211f98:	add	x2, x2, #0xf34
  211f9c:	add	x4, x4, #0x3c0
  211fa0:	add	x5, x5, #0xfe8
  211fa4:	mov	w0, #0x7                   	// #7
  211fa8:	mov	w3, #0xa2                  	// #162
  211fac:	mov	w1, wzr
  211fb0:	mov	x6, x19
  211fb4:	bl	2124f0 <log_internal_realm@plt>
  211fb8:	b	211e78 <maybe_resize_slave_device+0xd8>
  211fbc:	mov	w19, #0xffffff8b            	// #-117
  211fc0:	b	21200c <maybe_resize_slave_device+0x26c>
  211fc4:	cmp	w0, #0x4
  211fc8:	b.lt	212000 <maybe_resize_slave_device+0x260>  // b.tstop
  211fcc:	ldur	x6, [x29, #-8]
  211fd0:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  211fd4:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  211fd8:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  211fdc:	add	x2, x2, #0xf34
  211fe0:	add	x4, x4, #0x3c0
  211fe4:	add	x5, x5, #0xeae
  211fe8:	mov	w0, #0x4                   	// #4
  211fec:	mov	w3, #0x9b                  	// #155
  211ff0:	mov	w1, w19
  211ff4:	bl	2124f0 <log_internal_realm@plt>
  211ff8:	mov	w19, w0
  211ffc:	b	21200c <maybe_resize_slave_device+0x26c>
  212000:	mov	w8, wzr
  212004:	neg	w9, w19
  212008:	sub	w19, w8, w9, uxtb
  21200c:	sub	x0, x29, #0x8
  212010:	bl	211be0 <freep>
  212014:	add	x0, x29, #0x18
  212018:	bl	211be0 <freep>
  21201c:	mov	w0, w19
  212020:	ldp	x20, x19, [sp, #96]
  212024:	ldp	x22, x21, [sp, #80]
  212028:	ldr	x23, [sp, #64]
  21202c:	ldp	x29, x30, [sp, #48]
  212030:	add	sp, sp, #0x70
  212034:	ret

0000000000212038 <resize_ext4>:
  212038:	sub	sp, sp, #0x30
  21203c:	cmp	x3, w3, sxtw
  212040:	stp	x29, x30, [sp, #16]
  212044:	stp	x20, x19, [sp, #32]
  212048:	add	x29, sp, #0x10
  21204c:	str	x2, [sp, #8]
  212050:	b.ne	2120f4 <resize_ext4+0xbc>  // b.any
  212054:	adrp	x9, 232000 <_DYNAMIC+0xf9e0>
  212058:	ldrb	w9, [x9, #2312]
  21205c:	tbz	w9, #0, 212068 <resize_ext4+0x30>
  212060:	mov	w0, wzr
  212064:	b	2120e4 <resize_ext4+0xac>
  212068:	mov	w8, w1
  21206c:	mov	w1, #0x6610                	// #26128
  212070:	mov	x19, x0
  212074:	add	x2, sp, #0x8
  212078:	movk	w1, #0x4008, lsl #16
  21207c:	mov	w0, w8
  212080:	bl	2124c0 <ioctl@plt>
  212084:	cbz	w0, 2120e4 <resize_ext4+0xac>
  212088:	bl	2124e0 <__errno_location@plt>
  21208c:	ldr	w20, [x0]
  212090:	mov	w0, wzr
  212094:	bl	2124d0 <log_get_max_level_realm@plt>
  212098:	cmp	w0, #0x3
  21209c:	b.lt	2120d4 <resize_ext4+0x9c>  // b.tstop
  2120a0:	ldr	x7, [sp, #8]
  2120a4:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2120a8:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  2120ac:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  2120b0:	add	x2, x2, #0xf34
  2120b4:	add	x4, x4, #0x240
  2120b8:	add	x5, x5, #0xe2e
  2120bc:	mov	w0, #0x3                   	// #3
  2120c0:	mov	w3, #0x29                  	// #41
  2120c4:	mov	w1, w20
  2120c8:	mov	x6, x19
  2120cc:	bl	2124f0 <log_internal_realm@plt>
  2120d0:	b	2120e4 <resize_ext4+0xac>
  2120d4:	cmp	w20, #0x0
  2120d8:	mov	w8, wzr
  2120dc:	cneg	w9, w20, mi  // mi = first
  2120e0:	sub	w0, w8, w9, uxtb
  2120e4:	ldp	x20, x19, [sp, #32]
  2120e8:	ldp	x29, x30, [sp, #16]
  2120ec:	add	sp, sp, #0x30
  2120f0:	ret
  2120f4:	adrp	x1, 201000 <parse_argv.options-0x3e0>
  2120f8:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  2120fc:	adrp	x4, 200000 <parse_argv.options-0x13e0>
  212100:	add	x1, x1, #0x251
  212104:	add	x2, x2, #0xf34
  212108:	add	x4, x4, #0xdf2
  21210c:	mov	w3, #0x22                  	// #34
  212110:	mov	w0, wzr
  212114:	bl	212550 <log_assert_failed_realm@plt>

0000000000212118 <resize_btrfs>:
  212118:	stp	x29, x30, [sp, #-64]!
  21211c:	str	x28, [sp, #16]
  212120:	stp	x22, x21, [sp, #32]
  212124:	stp	x20, x19, [sp, #48]
  212128:	mov	x29, sp
  21212c:	sub	sp, sp, #0x1, lsl #12
  212130:	mov	x20, x2
  212134:	mov	w21, w1
  212138:	mov	x19, x0
  21213c:	mov	x0, sp
  212140:	mov	w2, #0x1000                	// #4096
  212144:	mov	w1, wzr
  212148:	mov	x22, x3
  21214c:	bl	2125b0 <memset@plt>
  212150:	cmp	x22, w22, sxtw
  212154:	b.ne	212270 <resize_btrfs+0x158>  // b.any
  212158:	mul	x3, x22, x20
  21215c:	lsr	x8, x3, #28
  212160:	cbnz	x8, 2121a8 <resize_btrfs+0x90>
  212164:	mov	w0, wzr
  212168:	bl	2124d0 <log_get_max_level_realm@plt>
  21216c:	cmp	w0, #0x4
  212170:	b.lt	2121dc <resize_btrfs+0xc4>  // b.tstop
  212174:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  212178:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  21217c:	adrp	x5, 201000 <parse_argv.options-0x3e0>
  212180:	add	x2, x2, #0xf34
  212184:	add	x4, x4, #0x3b3
  212188:	add	x5, x5, #0x3b
  21218c:	mov	w0, #0x4                   	// #4
  212190:	mov	w3, #0x36                  	// #54
  212194:	mov	w1, wzr
  212198:	mov	x6, x19
  21219c:	bl	2124f0 <log_internal_realm@plt>
  2121a0:	mov	w0, #0xffffffa1            	// #-95
  2121a4:	b	212258 <resize_btrfs+0x140>
  2121a8:	mov	x8, sp
  2121ac:	adrp	x2, 201000 <parse_argv.options-0x3e0>
  2121b0:	add	x0, x8, #0x8
  2121b4:	add	x2, x2, #0x2ca
  2121b8:	mov	w1, #0xff8                 	// #4088
  2121bc:	bl	2125c0 <snprintf@plt>
  2121c0:	cmp	w0, #0xff8
  2121c4:	b.cs	212294 <resize_btrfs+0x17c>  // b.hs, b.nlast
  2121c8:	adrp	x8, 232000 <_DYNAMIC+0xf9e0>
  2121cc:	ldrb	w8, [x8, #2312]
  2121d0:	tbz	w8, #0, 2121e4 <resize_btrfs+0xcc>
  2121d4:	mov	w0, wzr
  2121d8:	b	212258 <resize_btrfs+0x140>
  2121dc:	mov	w0, #0xffffffa1            	// #-95
  2121e0:	b	212258 <resize_btrfs+0x140>
  2121e4:	mov	w1, #0x9403                	// #37891
  2121e8:	mov	x2, sp
  2121ec:	movk	w1, #0x5000, lsl #16
  2121f0:	mov	w0, w21
  2121f4:	bl	2124c0 <ioctl@plt>
  2121f8:	cbz	w0, 212258 <resize_btrfs+0x140>
  2121fc:	bl	2124e0 <__errno_location@plt>
  212200:	ldr	w21, [x0]
  212204:	mov	w0, wzr
  212208:	bl	2124d0 <log_get_max_level_realm@plt>
  21220c:	cmp	w0, #0x3
  212210:	b.lt	212248 <resize_btrfs+0x130>  // b.tstop
  212214:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  212218:	adrp	x4, 201000 <parse_argv.options-0x3e0>
  21221c:	adrp	x5, 200000 <parse_argv.options-0x13e0>
  212220:	add	x2, x2, #0xf34
  212224:	add	x4, x4, #0x3b3
  212228:	add	x5, x5, #0xec7
  21222c:	mov	w0, #0x3                   	// #3
  212230:	mov	w3, #0x43                  	// #67
  212234:	mov	w1, w21
  212238:	mov	x6, x19
  21223c:	mov	x7, x20
  212240:	bl	2124f0 <log_internal_realm@plt>
  212244:	b	212258 <resize_btrfs+0x140>
  212248:	cmp	w21, #0x0
  21224c:	mov	w8, wzr
  212250:	cneg	w9, w21, mi  // mi = first
  212254:	sub	w0, w8, w9, uxtb
  212258:	add	sp, sp, #0x1, lsl #12
  21225c:	ldp	x20, x19, [sp, #48]
  212260:	ldp	x22, x21, [sp, #32]
  212264:	ldr	x28, [sp, #16]
  212268:	ldp	x29, x30, [sp], #64
  21226c:	ret
  212270:	adrp	x1, 201000 <parse_argv.options-0x3e0>
  212274:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  212278:	adrp	x4, 200000 <parse_argv.options-0x13e0>
  21227c:	add	x1, x1, #0x251
  212280:	add	x2, x2, #0xf34
  212284:	add	x4, x4, #0xd88
  212288:	mov	w3, #0x32                  	// #50
  21228c:	mov	w0, wzr
  212290:	bl	212550 <log_assert_failed_realm@plt>
  212294:	adrp	x1, 201000 <parse_argv.options-0x3e0>
  212298:	adrp	x2, 200000 <parse_argv.options-0x13e0>
  21229c:	adrp	x4, 200000 <parse_argv.options-0x13e0>
  2122a0:	add	x1, x1, #0x7c
  2122a4:	add	x2, x2, #0xf34
  2122a8:	add	x4, x4, #0xd88
  2122ac:	mov	w3, #0x3c                  	// #60
  2122b0:	mov	w0, wzr
  2122b4:	bl	212550 <log_assert_failed_realm@plt>

00000000002122b8 <format_bytes>:
  2122b8:	stp	x29, x30, [sp, #-16]!
  2122bc:	mov	x2, x1
  2122c0:	mov	w1, #0x8                   	// #8
  2122c4:	mov	w3, #0x7                   	// #7
  2122c8:	mov	x29, sp
  2122cc:	bl	2125d0 <format_bytes_full@plt>
  2122d0:	ldp	x29, x30, [sp], #16
  2122d4:	ret

00000000002122d8 <help>:
  2122d8:	stp	x29, x30, [sp, #-32]!
  2122dc:	mov	x29, sp
  2122e0:	adrp	x0, 201000 <parse_argv.options-0x3e0>
  2122e4:	adrp	x1, 200000 <parse_argv.options-0x13e0>
  2122e8:	add	x0, x0, #0x23
  2122ec:	add	x1, x1, #0xfce
  2122f0:	add	x2, x29, #0x18
  2122f4:	str	x19, [sp, #16]
  2122f8:	str	xzr, [x29, #24]
  2122fc:	bl	2125e0 <terminal_urlify_man@plt>
  212300:	tbnz	w0, #31, 212324 <help+0x4c>
  212304:	adrp	x8, 232000 <_DYNAMIC+0xf9e0>
  212308:	ldr	x1, [x8, #2328]
  21230c:	ldr	x2, [x29, #24]
  212310:	adrp	x0, 201000 <parse_argv.options-0x3e0>
  212314:	add	x0, x0, #0xac
  212318:	bl	2125f0 <printf@plt>
  21231c:	mov	w19, wzr
  212320:	b	212344 <help+0x6c>
  212324:	adrp	x1, 200000 <parse_argv.options-0x13e0>
  212328:	adrp	x3, 201000 <parse_argv.options-0x3e0>
  21232c:	add	x1, x1, #0xf34
  212330:	add	x3, x3, #0x24c
  212334:	mov	w2, #0xac                  	// #172
  212338:	mov	w0, wzr
  21233c:	bl	212600 <log_oom_internal@plt>
  212340:	mov	w19, w0
  212344:	add	x0, x29, #0x18
  212348:	bl	211be0 <freep>
  21234c:	mov	w0, w19
  212350:	ldr	x19, [sp, #16]
  212354:	ldp	x29, x30, [sp], #32
  212358:	ret

000000000021235c <strnull>:
  21235c:	adrp	x8, 201000 <parse_argv.options-0x3e0>
  212360:	add	x8, x8, #0x239
  212364:	cmp	x0, #0x0
  212368:	csel	x0, x8, x0, eq  // eq = none
  21236c:	ret

0000000000212370 <__libc_csu_init>:
  212370:	stp	x29, x30, [sp, #-64]!
  212374:	mov	x29, sp
  212378:	stp	x19, x20, [sp, #16]
  21237c:	adrp	x20, 222000 <log_oom_internal@plt+0xfa00>
  212380:	add	x20, x20, #0x620
  212384:	stp	x21, x22, [sp, #32]
  212388:	adrp	x21, 222000 <log_oom_internal@plt+0xfa00>
  21238c:	add	x21, x21, #0x618
  212390:	sub	x20, x20, x21
  212394:	mov	w22, w0
  212398:	stp	x23, x24, [sp, #48]
  21239c:	mov	x23, x1
  2123a0:	mov	x24, x2
  2123a4:	bl	2123f4 <_init>
  2123a8:	cmp	xzr, x20, asr #3
  2123ac:	b.eq	2123d8 <__libc_csu_init+0x68>  // b.none
  2123b0:	asr	x20, x20, #3
  2123b4:	mov	x19, #0x0                   	// #0
  2123b8:	ldr	x3, [x21, x19, lsl #3]
  2123bc:	mov	x2, x24
  2123c0:	add	x19, x19, #0x1
  2123c4:	mov	x1, x23
  2123c8:	mov	w0, w22
  2123cc:	blr	x3
  2123d0:	cmp	x20, x19
  2123d4:	b.ne	2123b8 <__libc_csu_init+0x48>  // b.any
  2123d8:	ldp	x19, x20, [sp, #16]
  2123dc:	ldp	x21, x22, [sp, #32]
  2123e0:	ldp	x23, x24, [sp, #48]
  2123e4:	ldp	x29, x30, [sp], #64
  2123e8:	ret
  2123ec:	nop

00000000002123f0 <__libc_csu_fini>:
  2123f0:	ret

Disassembly of section .init:

00000000002123f4 <_init>:
  2123f4:	stp	x29, x30, [sp, #-16]!
  2123f8:	mov	x29, sp
  2123fc:	bl	2115e8 <call_weak_fn>
  212400:	ldp	x29, x30, [sp], #16
  212404:	ret

Disassembly of section .fini:

0000000000212408 <_fini>:
  212408:	stp	x29, x30, [sp, #-16]!
  21240c:	mov	x29, sp
  212410:	ldp	x29, x30, [sp], #16
  212414:	ret

Disassembly of section .plt:

0000000000212420 <__libc_start_main@plt-0x20>:
  212420:	stp	x16, x30, [sp, #-16]!
  212424:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212428:	ldr	x17, [x16, #2056]
  21242c:	add	x16, x16, #0x808
  212430:	br	x17
  212434:	nop
  212438:	nop
  21243c:	nop

0000000000212440 <__libc_start_main@plt>:
  212440:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212444:	ldr	x17, [x16, #2064]
  212448:	add	x16, x16, #0x810
  21244c:	br	x17

0000000000212450 <abort@plt>:
  212450:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212454:	ldr	x17, [x16, #2072]
  212458:	add	x16, x16, #0x818
  21245c:	br	x17

0000000000212460 <__gmon_start__@plt>:
  212460:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212464:	ldr	x17, [x16, #2080]
  212468:	add	x16, x16, #0x820
  21246c:	br	x17

0000000000212470 <log_setup_service@plt>:
  212470:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212474:	ldr	x17, [x16, #2088]
  212478:	add	x16, x16, #0x828
  21247c:	br	x17

0000000000212480 <path_is_mount_point@plt>:
  212480:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212484:	ldr	x17, [x16, #2096]
  212488:	add	x16, x16, #0x830
  21248c:	br	x17

0000000000212490 <get_block_device@plt>:
  212490:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212494:	ldr	x17, [x16, #2104]
  212498:	add	x16, x16, #0x838
  21249c:	br	x17

00000000002124a0 <open64@plt>:
  2124a0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124a4:	ldr	x17, [x16, #2112]
  2124a8:	add	x16, x16, #0x840
  2124ac:	br	x17

00000000002124b0 <device_path_make_major_minor@plt>:
  2124b0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124b4:	ldr	x17, [x16, #2120]
  2124b8:	add	x16, x16, #0x848
  2124bc:	br	x17

00000000002124c0 <ioctl@plt>:
  2124c0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124c4:	ldr	x17, [x16, #2128]
  2124c8:	add	x16, x16, #0x850
  2124cc:	br	x17

00000000002124d0 <log_get_max_level_realm@plt>:
  2124d0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124d4:	ldr	x17, [x16, #2136]
  2124d8:	add	x16, x16, #0x858
  2124dc:	br	x17

00000000002124e0 <__errno_location@plt>:
  2124e0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124e4:	ldr	x17, [x16, #2144]
  2124e8:	add	x16, x16, #0x860
  2124ec:	br	x17

00000000002124f0 <log_internal_realm@plt>:
  2124f0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2124f4:	ldr	x17, [x16, #2152]
  2124f8:	add	x16, x16, #0x868
  2124fc:	br	x17

0000000000212500 <fstatfs64@plt>:
  212500:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212504:	ldr	x17, [x16, #2160]
  212508:	add	x16, x16, #0x870
  21250c:	br	x17

0000000000212510 <safe_close@plt>:
  212510:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212514:	ldr	x17, [x16, #2168]
  212518:	add	x16, x16, #0x878
  21251c:	br	x17

0000000000212520 <free@plt>:
  212520:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212524:	ldr	x17, [x16, #2176]
  212528:	add	x16, x16, #0x880
  21252c:	br	x17

0000000000212530 <getopt_long@plt>:
  212530:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212534:	ldr	x17, [x16, #2184]
  212538:	add	x16, x16, #0x888
  21253c:	br	x17

0000000000212540 <version@plt>:
  212540:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212544:	ldr	x17, [x16, #2192]
  212548:	add	x16, x16, #0x890
  21254c:	br	x17

0000000000212550 <log_assert_failed_realm@plt>:
  212550:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212554:	ldr	x17, [x16, #2200]
  212558:	add	x16, x16, #0x898
  21255c:	br	x17

0000000000212560 <log_assert_failed_unreachable_realm@plt>:
  212560:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212564:	ldr	x17, [x16, #2208]
  212568:	add	x16, x16, #0x8a0
  21256c:	br	x17

0000000000212570 <get_block_device_harder@plt>:
  212570:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212574:	ldr	x17, [x16, #2216]
  212578:	add	x16, x16, #0x8a8
  21257c:	br	x17

0000000000212580 <gnu_dev_major@plt>:
  212580:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212584:	ldr	x17, [x16, #2224]
  212588:	add	x16, x16, #0x8b0
  21258c:	br	x17

0000000000212590 <gnu_dev_minor@plt>:
  212590:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212594:	ldr	x17, [x16, #2232]
  212598:	add	x16, x16, #0x8b8
  21259c:	br	x17

00000000002125a0 <probe_filesystem@plt>:
  2125a0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125a4:	ldr	x17, [x16, #2240]
  2125a8:	add	x16, x16, #0x8c0
  2125ac:	br	x17

00000000002125b0 <memset@plt>:
  2125b0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125b4:	ldr	x17, [x16, #2248]
  2125b8:	add	x16, x16, #0x8c8
  2125bc:	br	x17

00000000002125c0 <snprintf@plt>:
  2125c0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125c4:	ldr	x17, [x16, #2256]
  2125c8:	add	x16, x16, #0x8d0
  2125cc:	br	x17

00000000002125d0 <format_bytes_full@plt>:
  2125d0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125d4:	ldr	x17, [x16, #2264]
  2125d8:	add	x16, x16, #0x8d8
  2125dc:	br	x17

00000000002125e0 <terminal_urlify_man@plt>:
  2125e0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125e4:	ldr	x17, [x16, #2272]
  2125e8:	add	x16, x16, #0x8e0
  2125ec:	br	x17

00000000002125f0 <printf@plt>:
  2125f0:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  2125f4:	ldr	x17, [x16, #2280]
  2125f8:	add	x16, x16, #0x8e8
  2125fc:	br	x17

0000000000212600 <log_oom_internal@plt>:
  212600:	adrp	x16, 222000 <log_oom_internal@plt+0xfa00>
  212604:	ldr	x17, [x16, #2288]
  212608:	add	x16, x16, #0x8f0
  21260c:	br	x17
