
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//strtoull_test.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <strtoull_testcase>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x19, x20, [sp, #32]
  10:	mov	x20, x2
  14:	adrp	x2, 0 <strtoull_testcase>
  18:	stp	x23, x24, [sp, #64]
  1c:	mov	x19, x0
  20:	mov	w24, w4
  24:	ldr	x23, [x2]
  28:	stp	x21, x22, [sp, #48]
  2c:	mov	w2, w1
  30:	str	x25, [sp, #80]
  34:	mov	w22, w3
  38:	add	x1, sp, #0x68
  3c:	str	wzr, [x23]
  40:	bl	0 <grub_strtoull>
  44:	mov	x21, x0
  48:	adrp	x0, 0 <strtoull_testcase>
  4c:	ldr	w7, [x23]
  50:	mov	w6, w24
  54:	str	x19, [sp]
  58:	ldr	x25, [x0]
  5c:	adrp	x0, 0 <strtoull_testcase>
  60:	cmp	w7, w24
  64:	adrp	x24, 0 <strtoull_testcase>
  68:	ldr	x5, [x0]
  6c:	adrp	x0, 0 <strtoull_testcase>
  70:	ldr	x1, [x24]
  74:	mov	x2, x25
  78:	ldr	x4, [x0]
  7c:	mov	w3, #0x20                  	// #32
  80:	cset	w0, eq  // eq = none
  84:	bl	0 <grub_test_assert_helper>
  88:	ldr	w0, [x23]
  8c:	cbz	w0, b0 <strtoull_testcase+0xb0>
  90:	str	wzr, [x23]
  94:	ldp	x29, x30, [sp, #16]
  98:	ldp	x19, x20, [sp, #32]
  9c:	ldp	x21, x22, [sp, #48]
  a0:	ldp	x23, x24, [sp, #64]
  a4:	ldr	x25, [sp, #80]
  a8:	add	sp, sp, #0x70
  ac:	ret
  b0:	ldr	x7, [sp, #104]
  b4:	add	x0, x19, w22, sxtw
  b8:	ldr	x1, [x24]
  bc:	cmp	x7, x0
  c0:	adrp	x0, 0 <strtoull_testcase>
  c4:	str	x19, [sp]
  c8:	mov	w6, w22
  cc:	mov	x2, x25
  d0:	ldr	x5, [x0]
  d4:	adrp	x0, 0 <strtoull_testcase>
  d8:	sub	w7, w7, w19
  dc:	mov	w3, #0x28                  	// #40
  e0:	ldr	x4, [x0]
  e4:	cset	w0, eq  // eq = none
  e8:	bl	0 <grub_test_assert_helper>
  ec:	str	x19, [sp]
  f0:	adrp	x0, 0 <strtoull_testcase>
  f4:	cmp	x21, x20
  f8:	ldr	x1, [x24]
  fc:	mov	x7, x21
 100:	ldr	x5, [x0]
 104:	adrp	x0, 0 <strtoull_testcase>
 108:	mov	x6, x20
 10c:	mov	x2, x25
 110:	ldr	x4, [x0]
 114:	mov	w3, #0x2b                  	// #43
 118:	cset	w0, eq  // eq = none
 11c:	bl	0 <grub_test_assert_helper>
 120:	b	94 <strtoull_testcase+0x94>
 124:	nop
	...

0000000000000170 <strtoull_test>:
 170:	stp	x29, x30, [sp, #-16]!
 174:	adrp	x0, 0 <strtoull_testcase>
 178:	mov	w4, #0x0                   	// #0
 17c:	mov	x29, sp
 180:	ldr	x0, [x0]
 184:	mov	w3, #0x1                   	// #1
 188:	mov	x2, #0x9                   	// #9
 18c:	mov	w1, #0x0                   	// #0
 190:	bl	0 <strtoull_testcase>
 194:	adrp	x0, 0 <strtoull_testcase>
 198:	mov	w4, #0x0                   	// #0
 19c:	mov	w3, #0x4                   	// #4
 1a0:	mov	x2, #0xaa                  	// #170
 1a4:	ldr	x0, [x0]
 1a8:	mov	w1, #0x0                   	// #0
 1ac:	bl	0 <strtoull_testcase>
 1b0:	adrp	x0, 0 <strtoull_testcase>
 1b4:	mov	w4, #0x0                   	// #0
 1b8:	mov	w3, #0x4                   	// #4
 1bc:	mov	x2, #0xff                  	// #255
 1c0:	ldr	x0, [x0]
 1c4:	mov	w1, #0x0                   	// #0
 1c8:	bl	0 <strtoull_testcase>
 1cc:	adrp	x0, 0 <strtoull_testcase>
 1d0:	mov	w4, #0x0                   	// #0
 1d4:	mov	w3, #0x1                   	// #1
 1d8:	mov	x2, #0x0                   	// #0
 1dc:	ldr	x0, [x0]
 1e0:	mov	w1, #0xa                   	// #10
 1e4:	bl	0 <strtoull_testcase>
 1e8:	adrp	x0, 0 <strtoull_testcase>
 1ec:	mov	w4, #0xa                   	// #10
 1f0:	mov	w3, #0x0                   	// #0
 1f4:	mov	x2, #0x0                   	// #0
 1f8:	ldr	x0, [x0]
 1fc:	mov	w1, #0x8                   	// #8
 200:	bl	0 <strtoull_testcase>
 204:	adrp	x0, 0 <strtoull_testcase>
 208:	mov	w4, #0x0                   	// #0
 20c:	mov	w3, #0x1                   	// #1
 210:	mov	x2, #0x3                   	// #3
 214:	ldr	x0, [x0]
 218:	mov	w1, #0x8                   	// #8
 21c:	bl	0 <strtoull_testcase>
 220:	adrp	x0, 0 <strtoull_testcase>
 224:	mov	w4, #0x0                   	// #0
 228:	mov	w3, #0x1                   	// #1
 22c:	mov	x2, #0x7                   	// #7
 230:	ldr	x0, [x0]
 234:	mov	w1, #0x8                   	// #8
 238:	bl	0 <strtoull_testcase>
 23c:	adrp	x0, 0 <strtoull_testcase>
 240:	mov	w4, #0x0                   	// #0
 244:	mov	w3, #0x1                   	// #1
 248:	mov	x2, #0x1                   	// #1
 24c:	ldr	x0, [x0]
 250:	mov	w1, #0x10                  	// #16
 254:	bl	0 <strtoull_testcase>
 258:	ldp	x29, x30, [sp], #16
 25c:	adrp	x0, 0 <strtoull_testcase>
 260:	mov	w4, #0xb                   	// #11
 264:	mov	w3, #0x0                   	// #0
 268:	ldr	x0, [x0]
 26c:	mov	x2, #0x0                   	// #0
 270:	mov	w1, #0xa                   	// #10
 274:	b	0 <strtoull_testcase>
	...

00000000000002c0 <grub_mod_init>:
 2c0:	adrp	x0, 0 <strtoull_testcase>
 2c4:	ldr	x1, [x0]
 2c8:	adrp	x0, 0 <strtoull_testcase>
 2cc:	ldr	x0, [x0]
 2d0:	b	0 <grub_test_register>
 2d4:	nop
	...

00000000000002e8 <grub_mod_fini>:
 2e8:	adrp	x0, 0 <strtoull_testcase>
 2ec:	ldr	x0, [x0]
 2f0:	b	0 <grub_test_unregister>
 2f4:	nop
	...
