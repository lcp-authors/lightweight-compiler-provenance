
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-debug-generator_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400dc0 <_init>:
  400dc0:	stp	x29, x30, [sp, #-16]!
  400dc4:	mov	x29, sp
  400dc8:	bl	401028 <call_weak_fn>
  400dcc:	ldp	x29, x30, [sp], #16
  400dd0:	ret

Disassembly of section .plt:

0000000000400dd8 <__libc_start_main@plt-0x20>:
  400dd8:	stp	x16, x30, [sp, #-16]!
  400ddc:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400de0:	ldr	x17, [x16, #3848]
  400de4:	add	x16, x16, #0xf08
  400de8:	br	x17
  400dec:	nop
  400df0:	nop
  400df4:	nop

0000000000400df8 <__libc_start_main@plt>:
  400df8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400dfc:	ldr	x17, [x16, #3856]
  400e00:	add	x16, x16, #0xf10
  400e04:	br	x17

0000000000400e08 <abort@plt>:
  400e08:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e0c:	ldr	x17, [x16, #3864]
  400e10:	add	x16, x16, #0xf18
  400e14:	br	x17

0000000000400e18 <__gmon_start__@plt>:
  400e18:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e1c:	ldr	x17, [x16, #3872]
  400e20:	add	x16, x16, #0xf20
  400e24:	br	x17

0000000000400e28 <free@plt>:
  400e28:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e2c:	ldr	x17, [x16, #3880]
  400e30:	add	x16, x16, #0xf28
  400e34:	br	x17

0000000000400e38 <strv_free@plt>:
  400e38:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e3c:	ldr	x17, [x16, #3888]
  400e40:	add	x16, x16, #0xf30
  400e44:	br	x17

0000000000400e48 <log_setup_generator@plt>:
  400e48:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e4c:	ldr	x17, [x16, #3896]
  400e50:	add	x16, x16, #0xf38
  400e54:	br	x17

0000000000400e58 <log_get_max_level_realm@plt>:
  400e58:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e5c:	ldr	x17, [x16, #3904]
  400e60:	add	x16, x16, #0xf40
  400e64:	br	x17

0000000000400e68 <log_internal_realm@plt>:
  400e68:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e6c:	ldr	x17, [x16, #3912]
  400e70:	add	x16, x16, #0xf48
  400e74:	br	x17

0000000000400e78 <log_assert_failed_realm@plt>:
  400e78:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e7c:	ldr	x17, [x16, #3920]
  400e80:	add	x16, x16, #0xf50
  400e84:	br	x17

0000000000400e88 <proc_cmdline_parse@plt>:
  400e88:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e8c:	ldr	x17, [x16, #3928]
  400e90:	add	x16, x16, #0xf58
  400e94:	br	x17

0000000000400e98 <strv_extend@plt>:
  400e98:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400e9c:	ldr	x17, [x16, #3936]
  400ea0:	add	x16, x16, #0xf60
  400ea4:	br	x17

0000000000400ea8 <path_startswith@plt>:
  400ea8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400eac:	ldr	x17, [x16, #3944]
  400eb0:	add	x16, x16, #0xf68
  400eb4:	br	x17

0000000000400eb8 <strcmp@plt>:
  400eb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400ebc:	ldr	x17, [x16, #3952]
  400ec0:	add	x16, x16, #0xf70
  400ec4:	br	x17

0000000000400ec8 <write_drop_in_format@plt>:
  400ec8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400ecc:	ldr	x17, [x16, #3960]
  400ed0:	add	x16, x16, #0xf78
  400ed4:	br	x17

0000000000400ed8 <path_join_internal@plt>:
  400ed8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400edc:	ldr	x17, [x16, #3968]
  400ee0:	add	x16, x16, #0xf80
  400ee4:	br	x17

0000000000400ee8 <symlink@plt>:
  400ee8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400eec:	ldr	x17, [x16, #3976]
  400ef0:	add	x16, x16, #0xf88
  400ef4:	br	x17

0000000000400ef8 <__errno_location@plt>:
  400ef8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400efc:	ldr	x17, [x16, #3984]
  400f00:	add	x16, x16, #0xf90
  400f04:	br	x17

0000000000400f08 <log_oom_internal@plt>:
  400f08:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f0c:	ldr	x17, [x16, #3992]
  400f10:	add	x16, x16, #0xf98
  400f14:	br	x17

0000000000400f18 <strjoin_real@plt>:
  400f18:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f1c:	ldr	x17, [x16, #4000]
  400f20:	add	x16, x16, #0xfa0
  400f24:	br	x17

0000000000400f28 <mkdir_parents_label@plt>:
  400f28:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f2c:	ldr	x17, [x16, #4008]
  400f30:	add	x16, x16, #0xfa8
  400f34:	br	x17

0000000000400f38 <ask_password_agent_close@plt>:
  400f38:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f3c:	ldr	x17, [x16, #4016]
  400f40:	add	x16, x16, #0xfb0
  400f44:	br	x17

0000000000400f48 <polkit_agent_close@plt>:
  400f48:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f4c:	ldr	x17, [x16, #4024]
  400f50:	add	x16, x16, #0xfb8
  400f54:	br	x17

0000000000400f58 <pager_close@plt>:
  400f58:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f5c:	ldr	x17, [x16, #4032]
  400f60:	add	x16, x16, #0xfc0
  400f64:	br	x17

0000000000400f68 <mac_selinux_finish@plt>:
  400f68:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f6c:	ldr	x17, [x16, #4040]
  400f70:	add	x16, x16, #0xfc8
  400f74:	br	x17

0000000000400f78 <proc_cmdline_key_streq@plt>:
  400f78:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f7c:	ldr	x17, [x16, #4048]
  400f80:	add	x16, x16, #0xfd0
  400f84:	br	x17

0000000000400f88 <parse_boolean@plt>:
  400f88:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f8c:	ldr	x17, [x16, #4056]
  400f90:	add	x16, x16, #0xfd8
  400f94:	br	x17

0000000000400f98 <unit_name_mangle_with_suffix@plt>:
  400f98:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400f9c:	ldr	x17, [x16, #4064]
  400fa0:	add	x16, x16, #0xfe0
  400fa4:	br	x17

0000000000400fa8 <strv_consume@plt>:
  400fa8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400fac:	ldr	x17, [x16, #4072]
  400fb0:	add	x16, x16, #0xfe8
  400fb4:	br	x17

0000000000400fb8 <runlevel_to_target@plt>:
  400fb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400fbc:	ldr	x17, [x16, #4080]
  400fc0:	add	x16, x16, #0xff0
  400fc4:	br	x17

0000000000400fc8 <free_and_strdup@plt>:
  400fc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d098>
  400fcc:	ldr	x17, [x16, #4088]
  400fd0:	add	x16, x16, #0xff8
  400fd4:	br	x17

Disassembly of section .text:

0000000000400fd8 <_start>:
  400fd8:	mov	x29, #0x0                   	// #0
  400fdc:	mov	x30, #0x0                   	// #0
  400fe0:	mov	x5, x0
  400fe4:	ldr	x1, [sp]
  400fe8:	add	x2, sp, #0x8
  400fec:	mov	x6, sp
  400ff0:	movz	x0, #0x0, lsl #48
  400ff4:	movk	x0, #0x0, lsl #32
  400ff8:	movk	x0, #0x40, lsl #16
  400ffc:	movk	x0, #0x1134
  401000:	movz	x3, #0x0, lsl #48
  401004:	movk	x3, #0x0, lsl #32
  401008:	movk	x3, #0x40, lsl #16
  40100c:	movk	x3, #0x19c0
  401010:	movz	x4, #0x0, lsl #48
  401014:	movk	x4, #0x0, lsl #32
  401018:	movk	x4, #0x40, lsl #16
  40101c:	movk	x4, #0x1a40
  401020:	bl	400df8 <__libc_start_main@plt>
  401024:	bl	400e08 <abort@plt>

0000000000401028 <call_weak_fn>:
  401028:	adrp	x0, 41f000 <__FRAME_END__+0x1d098>
  40102c:	ldr	x0, [x0, #3808]
  401030:	cbz	x0, 401038 <call_weak_fn+0x10>
  401034:	b	400e18 <__gmon_start__@plt>
  401038:	ret

000000000040103c <deregister_tm_clones>:
  40103c:	adrp	x0, 420000 <completed.8445>
  401040:	add	x1, x0, #0x0
  401044:	adrp	x0, 420000 <completed.8445>
  401048:	add	x0, x0, #0x0
  40104c:	cmp	x1, x0
  401050:	b.eq	40107c <deregister_tm_clones+0x40>  // b.none
  401054:	sub	sp, sp, #0x10
  401058:	adrp	x1, 401000 <_start+0x28>
  40105c:	ldr	x1, [x1, #2648]
  401060:	str	x1, [sp, #8]
  401064:	cbz	x1, 401074 <deregister_tm_clones+0x38>
  401068:	mov	x16, x1
  40106c:	add	sp, sp, #0x10
  401070:	br	x16
  401074:	add	sp, sp, #0x10
  401078:	ret
  40107c:	ret

0000000000401080 <register_tm_clones>:
  401080:	adrp	x0, 420000 <completed.8445>
  401084:	add	x1, x0, #0x0
  401088:	adrp	x0, 420000 <completed.8445>
  40108c:	add	x0, x0, #0x0
  401090:	sub	x1, x1, x0
  401094:	mov	x2, #0x2                   	// #2
  401098:	asr	x1, x1, #3
  40109c:	sdiv	x1, x1, x2
  4010a0:	cbz	x1, 4010cc <register_tm_clones+0x4c>
  4010a4:	sub	sp, sp, #0x10
  4010a8:	adrp	x2, 401000 <_start+0x28>
  4010ac:	ldr	x2, [x2, #2656]
  4010b0:	str	x2, [sp, #8]
  4010b4:	cbz	x2, 4010c4 <register_tm_clones+0x44>
  4010b8:	mov	x16, x2
  4010bc:	add	sp, sp, #0x10
  4010c0:	br	x16
  4010c4:	add	sp, sp, #0x10
  4010c8:	ret
  4010cc:	ret

00000000004010d0 <__do_global_dtors_aux>:
  4010d0:	stp	x29, x30, [sp, #-32]!
  4010d4:	mov	x29, sp
  4010d8:	str	x19, [sp, #16]
  4010dc:	adrp	x19, 420000 <completed.8445>
  4010e0:	ldrb	w0, [x19]
  4010e4:	cbnz	w0, 4010f4 <__do_global_dtors_aux+0x24>
  4010e8:	bl	40103c <deregister_tm_clones>
  4010ec:	mov	w0, #0x1                   	// #1
  4010f0:	strb	w0, [x19]
  4010f4:	ldr	x19, [sp, #16]
  4010f8:	ldp	x29, x30, [sp], #32
  4010fc:	ret

0000000000401100 <frame_dummy>:
  401100:	b	401080 <register_tm_clones>

0000000000401104 <__unique_prefix_static_destructor_wrapper0>:
  401104:	ldr	x0, [x0]
  401108:	b	400e28 <free@plt>

000000000040110c <__unique_prefix_static_destructor_wrapper1>:
  40110c:	ldr	x0, [x0]
  401110:	cbz	x0, 401118 <__unique_prefix_static_destructor_wrapper1+0xc>
  401114:	b	400e38 <strv_free@plt>
  401118:	ret

000000000040111c <__unique_prefix_static_destructor_wrapper2>:
  40111c:	ldr	x0, [x0]
  401120:	cbz	x0, 401128 <__unique_prefix_static_destructor_wrapper2+0xc>
  401124:	b	400e38 <strv_free@plt>
  401128:	ret

000000000040112c <__unique_prefix_static_destructor_wrapper3>:
  40112c:	ldr	x0, [x0]
  401130:	b	400e28 <free@plt>

0000000000401134 <main>:
  401134:	stp	x29, x30, [sp, #-96]!
  401138:	adrp	x8, 420000 <completed.8445>
  40113c:	adrp	x9, 420000 <completed.8445>
  401140:	stp	x28, x27, [sp, #16]
  401144:	stp	x26, x25, [sp, #32]
  401148:	stp	x24, x23, [sp, #48]
  40114c:	stp	x22, x21, [sp, #64]
  401150:	stp	x20, x19, [sp, #80]
  401154:	mov	x29, sp
  401158:	mov	x19, x1
  40115c:	mov	w20, w0
  401160:	str	w0, [x8, #48]
  401164:	str	x1, [x9, #56]
  401168:	bl	400e48 <log_setup_generator@plt>
  40116c:	cmp	w20, #0x2
  401170:	b.lt	4011d0 <main+0x9c>  // b.tstop
  401174:	cmp	w20, #0x4
  401178:	b.eq	4011d0 <main+0x9c>  // b.none
  40117c:	mov	w0, wzr
  401180:	bl	400e58 <log_get_max_level_realm@plt>
  401184:	cmp	w0, #0x3
  401188:	b.lt	401408 <main+0x2d4>  // b.tstop
  40118c:	ldp	x20, x19, [sp, #80]
  401190:	ldp	x22, x21, [sp, #64]
  401194:	ldp	x24, x23, [sp, #48]
  401198:	ldp	x26, x25, [sp, #32]
  40119c:	ldp	x28, x27, [sp, #16]
  4011a0:	adrp	x2, 401000 <_start+0x28>
  4011a4:	adrp	x4, 401000 <_start+0x28>
  4011a8:	adrp	x5, 401000 <_start+0x28>
  4011ac:	mov	w1, #0x16                  	// #22
  4011b0:	add	x2, x2, #0xa6b
  4011b4:	add	x4, x4, #0xa91
  4011b8:	add	x5, x5, #0xa96
  4011bc:	mov	w0, #0x3                   	// #3
  4011c0:	movk	w1, #0x4000, lsl #16
  4011c4:	mov	w3, #0xbe                  	// #190
  4011c8:	ldp	x29, x30, [sp], #96
  4011cc:	b	400e68 <log_internal_realm@plt>
  4011d0:	cmp	w20, #0x1
  4011d4:	adrp	x28, 420000 <completed.8445>
  4011d8:	b.le	40120c <main+0xd8>
  4011dc:	ldr	x8, [x19, #16]
  4011e0:	str	x8, [x28, #40]
  4011e4:	cbnz	x8, 401218 <main+0xe4>
  4011e8:	adrp	x1, 401000 <_start+0x28>
  4011ec:	adrp	x2, 401000 <_start+0x28>
  4011f0:	adrp	x4, 401000 <_start+0x28>
  4011f4:	add	x1, x1, #0xac7
  4011f8:	add	x2, x2, #0xa6b
  4011fc:	add	x4, x4, #0xadd
  401200:	mov	w3, #0xaa                  	// #170
  401204:	mov	w0, wzr
  401208:	bl	400e78 <log_assert_failed_realm@plt>
  40120c:	adrp	x8, 401000 <_start+0x28>
  401210:	add	x8, x8, #0xac2
  401214:	str	x8, [x28, #40]
  401218:	adrp	x0, 401000 <_start+0x28>
  40121c:	add	x0, x0, #0x644
  401220:	mov	w2, #0x5                   	// #5
  401224:	mov	x1, xzr
  401228:	bl	400e88 <proc_cmdline_parse@plt>
  40122c:	tbz	w0, #31, 40126c <main+0x138>
  401230:	mov	w19, w0
  401234:	mov	w0, wzr
  401238:	bl	400e58 <log_get_max_level_realm@plt>
  40123c:	cmp	w0, #0x4
  401240:	b.lt	40126c <main+0x138>  // b.tstop
  401244:	adrp	x2, 401000 <_start+0x28>
  401248:	adrp	x4, 401000 <_start+0x28>
  40124c:	adrp	x5, 401000 <_start+0x28>
  401250:	add	x2, x2, #0xa6b
  401254:	add	x4, x4, #0xb0f
  401258:	add	x5, x5, #0xb13
  40125c:	mov	w0, #0x4                   	// #4
  401260:	mov	w3, #0xae                  	// #174
  401264:	mov	w1, w19
  401268:	bl	400e68 <log_internal_realm@plt>
  40126c:	adrp	x19, 420000 <completed.8445>
  401270:	ldr	x8, [x19, #32]
  401274:	cbz	x8, 40132c <main+0x1f8>
  401278:	adrp	x0, 420000 <completed.8445>
  40127c:	adrp	x1, 401000 <_start+0x28>
  401280:	add	x0, x0, #0x18
  401284:	add	x1, x1, #0xb45
  401288:	bl	400e98 <strv_extend@plt>
  40128c:	tbnz	w0, #31, 401418 <main+0x2e4>
  401290:	ldr	x19, [x19, #32]
  401294:	adrp	x20, 401000 <_start+0x28>
  401298:	add	x20, x20, #0xc01
  40129c:	adrp	x1, 401000 <_start+0x28>
  4012a0:	add	x1, x1, #0xcb9
  4012a4:	mov	x0, x20
  4012a8:	bl	400ea8 <path_startswith@plt>
  4012ac:	cmp	x0, #0x0
  4012b0:	csel	x1, x20, x0, eq  // eq = none
  4012b4:	mov	x0, x19
  4012b8:	bl	400eb8 <strcmp@plt>
  4012bc:	cbz	w0, 40132c <main+0x1f8>
  4012c0:	ldr	x0, [x28, #40]
  4012c4:	adrp	x1, 401000 <_start+0x28>
  4012c8:	adrp	x3, 401000 <_start+0x28>
  4012cc:	adrp	x4, 401000 <_start+0x28>
  4012d0:	add	x1, x1, #0xb45
  4012d4:	add	x3, x3, #0xcbf
  4012d8:	add	x4, x4, #0xcc3
  4012dc:	mov	w2, #0x32                  	// #50
  4012e0:	mov	x5, x19
  4012e4:	mov	x6, x19
  4012e8:	bl	400ec8 <write_drop_in_format@plt>
  4012ec:	tbz	w0, #31, 40132c <main+0x1f8>
  4012f0:	mov	w19, w0
  4012f4:	mov	w0, wzr
  4012f8:	bl	400e58 <log_get_max_level_realm@plt>
  4012fc:	cmp	w0, #0x4
  401300:	b.lt	40132c <main+0x1f8>  // b.tstop
  401304:	adrp	x2, 401000 <_start+0x28>
  401308:	adrp	x4, 401000 <_start+0x28>
  40130c:	adrp	x5, 401000 <_start+0x28>
  401310:	add	x2, x2, #0xa6b
  401314:	add	x4, x4, #0xd34
  401318:	add	x5, x5, #0xd4f
  40131c:	mov	w0, #0x4                   	// #4
  401320:	mov	w3, #0xa4                  	// #164
  401324:	mov	w1, w19
  401328:	bl	400e68 <log_internal_realm@plt>
  40132c:	adrp	x8, 420000 <completed.8445>
  401330:	ldr	x8, [x8, #16]
  401334:	cbz	x8, 401410 <main+0x2dc>
  401338:	ldr	x1, [x8]
  40133c:	cbz	x1, 401410 <main+0x2dc>
  401340:	adrp	x26, 401000 <_start+0x28>
  401344:	adrp	x20, 401000 <_start+0x28>
  401348:	adrp	x21, 401000 <_start+0x28>
  40134c:	adrp	x25, 401000 <_start+0x28>
  401350:	adrp	x23, 401000 <_start+0x28>
  401354:	mov	w19, wzr
  401358:	add	x22, x8, #0x8
  40135c:	add	x26, x26, #0xdd3
  401360:	add	x20, x20, #0xda4
  401364:	add	x21, x21, #0xa6b
  401368:	add	x25, x25, #0xd8d
  40136c:	add	x23, x23, #0xdae
  401370:	ldr	x0, [x28, #40]
  401374:	cbz	x0, 401380 <main+0x24c>
  401378:	ldrb	w8, [x0]
  40137c:	cbnz	w8, 401384 <main+0x250>
  401380:	mov	x0, x26
  401384:	mov	x2, #0xffffffffffffffff    	// #-1
  401388:	bl	400ed8 <path_join_internal@plt>
  40138c:	cbz	x0, 40143c <main+0x308>
  401390:	mov	x24, x0
  401394:	mov	x0, x20
  401398:	mov	x1, x24
  40139c:	bl	400ee8 <symlink@plt>
  4013a0:	tbz	w0, #31, 4013f4 <main+0x2c0>
  4013a4:	bl	400ef8 <__errno_location@plt>
  4013a8:	ldr	w19, [x0]
  4013ac:	mov	w0, wzr
  4013b0:	bl	400e58 <log_get_max_level_realm@plt>
  4013b4:	cmp	w0, #0x3
  4013b8:	b.lt	4013e4 <main+0x2b0>  // b.tstop
  4013bc:	mov	w0, #0x3                   	// #3
  4013c0:	mov	w3, #0x72                  	// #114
  4013c4:	mov	w1, w19
  4013c8:	mov	x2, x21
  4013cc:	mov	x4, x25
  4013d0:	mov	x5, x23
  4013d4:	mov	x6, x24
  4013d8:	bl	400e68 <log_internal_realm@plt>
  4013dc:	mov	w19, w0
  4013e0:	b	4013f4 <main+0x2c0>
  4013e4:	cmp	w19, #0x0
  4013e8:	mov	w8, wzr
  4013ec:	cneg	w9, w19, mi  // mi = first
  4013f0:	sub	w19, w8, w9, uxtb
  4013f4:	mov	x0, x24
  4013f8:	bl	400e28 <free@plt>
  4013fc:	ldr	x1, [x22], #8
  401400:	cbnz	x1, 401370 <main+0x23c>
  401404:	b	401458 <main+0x324>
  401408:	mov	w0, #0xffffffea            	// #-22
  40140c:	b	401628 <main+0x4f4>
  401410:	mov	w19, wzr
  401414:	b	401458 <main+0x324>
  401418:	adrp	x1, 401000 <_start+0x28>
  40141c:	adrp	x3, 401000 <_start+0x28>
  401420:	add	x1, x1, #0xa6b
  401424:	add	x3, x3, #0xb0f
  401428:	mov	w2, #0xb3                  	// #179
  40142c:	mov	w0, wzr
  401430:	bl	400f08 <log_oom_internal@plt>
  401434:	mov	w19, w0
  401438:	b	4015d4 <main+0x4a0>
  40143c:	adrp	x1, 401000 <_start+0x28>
  401440:	adrp	x3, 401000 <_start+0x28>
  401444:	add	x1, x1, #0xa6b
  401448:	add	x3, x3, #0xd8d
  40144c:	mov	w2, #0x6d                  	// #109
  401450:	bl	400f08 <log_oom_internal@plt>
  401454:	mov	w19, w0
  401458:	adrp	x8, 420000 <completed.8445>
  40145c:	ldr	x8, [x8, #24]
  401460:	cbz	x8, 4015c0 <main+0x48c>
  401464:	ldr	x4, [x8]
  401468:	cbz	x4, 4015c0 <main+0x48c>
  40146c:	adrp	x20, 401000 <_start+0x28>
  401470:	adrp	x21, 401000 <_start+0x28>
  401474:	mov	w26, wzr
  401478:	add	x24, x8, #0x8
  40147c:	add	x20, x20, #0xdd3
  401480:	add	x21, x21, #0xde4
  401484:	adrp	x8, 420000 <completed.8445>
  401488:	ldr	x8, [x8, #8]
  40148c:	ldr	x0, [x28, #40]
  401490:	adrp	x9, 401000 <_start+0x28>
  401494:	add	x9, x9, #0xdd5
  401498:	cmp	x8, #0x0
  40149c:	csel	x2, x9, x8, eq  // eq = none
  4014a0:	mov	x1, x20
  4014a4:	mov	x3, x21
  4014a8:	mov	x5, xzr
  4014ac:	mov	x22, x28
  4014b0:	bl	400f18 <strjoin_real@plt>
  4014b4:	mov	x28, x0
  4014b8:	cbz	x0, 401540 <main+0x40c>
  4014bc:	ldur	x1, [x24, #-8]
  4014c0:	adrp	x0, 401000 <_start+0x28>
  4014c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4014c8:	add	x0, x0, #0xe04
  4014cc:	bl	400ed8 <path_join_internal@plt>
  4014d0:	mov	x25, x0
  4014d4:	cbz	x0, 401564 <main+0x430>
  4014d8:	mov	w1, #0x1ed                 	// #493
  4014dc:	mov	x0, x28
  4014e0:	bl	400f28 <mkdir_parents_label@plt>
  4014e4:	mov	x0, x25
  4014e8:	mov	x1, x28
  4014ec:	bl	400ee8 <symlink@plt>
  4014f0:	tbz	w0, #31, 401598 <main+0x464>
  4014f4:	bl	400ef8 <__errno_location@plt>
  4014f8:	ldr	w26, [x0]
  4014fc:	mov	w0, wzr
  401500:	bl	400e58 <log_get_max_level_realm@plt>
  401504:	cmp	w0, #0x3
  401508:	b.lt	401588 <main+0x454>  // b.tstop
  40150c:	adrp	x2, 401000 <_start+0x28>
  401510:	adrp	x4, 401000 <_start+0x28>
  401514:	adrp	x5, 401000 <_start+0x28>
  401518:	mov	w0, #0x3                   	// #3
  40151c:	mov	w3, #0x90                  	// #144
  401520:	mov	w1, w26
  401524:	add	x2, x2, #0xa6b
  401528:	add	x4, x4, #0xdec
  40152c:	add	x5, x5, #0xe18
  401530:	mov	x6, x28
  401534:	bl	400e68 <log_internal_realm@plt>
  401538:	mov	w26, w0
  40153c:	b	401598 <main+0x464>
  401540:	adrp	x1, 401000 <_start+0x28>
  401544:	adrp	x3, 401000 <_start+0x28>
  401548:	mov	w2, #0x85                  	// #133
  40154c:	add	x1, x1, #0xa6b
  401550:	add	x3, x3, #0xdec
  401554:	bl	400f08 <log_oom_internal@plt>
  401558:	mov	w27, w0
  40155c:	mov	x25, xzr
  401560:	b	401580 <main+0x44c>
  401564:	adrp	x1, 401000 <_start+0x28>
  401568:	adrp	x3, 401000 <_start+0x28>
  40156c:	mov	w2, #0x89                  	// #137
  401570:	add	x1, x1, #0xa6b
  401574:	add	x3, x3, #0xdec
  401578:	bl	400f08 <log_oom_internal@plt>
  40157c:	mov	w27, w0
  401580:	mov	w23, wzr
  401584:	b	40159c <main+0x468>
  401588:	cmp	w26, #0x0
  40158c:	mov	w8, wzr
  401590:	cneg	w9, w26, mi  // mi = first
  401594:	sub	w26, w8, w9, uxtb
  401598:	mov	w23, #0x1                   	// #1
  40159c:	mov	x0, x25
  4015a0:	bl	400e28 <free@plt>
  4015a4:	mov	x0, x28
  4015a8:	bl	400e28 <free@plt>
  4015ac:	cbz	w23, 4015c8 <main+0x494>
  4015b0:	ldr	x4, [x24], #8
  4015b4:	mov	x28, x22
  4015b8:	cbnz	x4, 401484 <main+0x350>
  4015bc:	b	4015cc <main+0x498>
  4015c0:	mov	w26, wzr
  4015c4:	b	4015cc <main+0x498>
  4015c8:	mov	w26, w27
  4015cc:	cmp	w19, #0x0
  4015d0:	csel	w19, w19, w26, lt  // lt = tstop
  4015d4:	bl	400f38 <ask_password_agent_close@plt>
  4015d8:	bl	400f48 <polkit_agent_close@plt>
  4015dc:	bl	400f58 <pager_close@plt>
  4015e0:	bl	400f68 <mac_selinux_finish@plt>
  4015e4:	adrp	x8, 41f000 <__FRAME_END__+0x1d098>
  4015e8:	ldr	x8, [x8, #3816]
  4015ec:	adrp	x20, 41f000 <__FRAME_END__+0x1d098>
  4015f0:	ldr	x20, [x20, #3824]
  4015f4:	add	x9, x8, #0x7
  4015f8:	and	x21, x9, #0xfffffffffffffff8
  4015fc:	cmp	x21, x20
  401600:	cset	w9, cs  // cs = hs, nlast
  401604:	cmp	x8, #0x0
  401608:	cset	w8, eq  // eq = none
  40160c:	orr	w8, w8, w9
  401610:	tbnz	w8, #0, 401624 <main+0x4f0>
  401614:	ldp	x0, x8, [x21], #16
  401618:	blr	x8
  40161c:	cmp	x21, x20
  401620:	b.cc	401614 <main+0x4e0>  // b.lo, b.ul, b.last
  401624:	lsr	w0, w19, #31
  401628:	ldp	x20, x19, [sp, #80]
  40162c:	ldp	x22, x21, [sp, #64]
  401630:	ldp	x24, x23, [sp, #48]
  401634:	ldp	x26, x25, [sp, #32]
  401638:	ldp	x28, x27, [sp, #16]
  40163c:	ldp	x29, x30, [sp], #96
  401640:	ret

0000000000401644 <parse_proc_cmdline_item>:
  401644:	sub	sp, sp, #0x30
  401648:	stp	x29, x30, [sp, #16]
  40164c:	stp	x20, x19, [sp, #32]
  401650:	add	x29, sp, #0x10
  401654:	cbz	x0, 40199c <parse_proc_cmdline_item+0x358>
  401658:	mov	x20, x1
  40165c:	adrp	x1, 401000 <_start+0x28>
  401660:	add	x1, x1, #0xb9d
  401664:	mov	x19, x0
  401668:	bl	400eb8 <strcmp@plt>
  40166c:	cbz	w0, 4016d0 <parse_proc_cmdline_item+0x8c>
  401670:	adrp	x1, 401000 <_start+0x28>
  401674:	add	x1, x1, #0xbdf
  401678:	mov	x0, x19
  40167c:	bl	400eb8 <strcmp@plt>
  401680:	cbz	w0, 401720 <parse_proc_cmdline_item+0xdc>
  401684:	adrp	x1, 401000 <_start+0x28>
  401688:	add	x1, x1, #0xbed
  40168c:	mov	x0, x19
  401690:	bl	400f78 <proc_cmdline_key_streq@plt>
  401694:	tbz	w0, #0, 401778 <parse_proc_cmdline_item+0x134>
  401698:	cbz	x20, 4016ac <parse_proc_cmdline_item+0x68>
  40169c:	mov	x0, x20
  4016a0:	bl	400f88 <parse_boolean@plt>
  4016a4:	tbnz	w0, #31, 401924 <parse_proc_cmdline_item+0x2e0>
  4016a8:	cbz	w0, 401940 <parse_proc_cmdline_item+0x2fc>
  4016ac:	adrp	x19, 401000 <_start+0x28>
  4016b0:	add	x19, x19, #0xc01
  4016b4:	adrp	x1, 401000 <_start+0x28>
  4016b8:	add	x1, x1, #0xcb9
  4016bc:	mov	x0, x19
  4016c0:	bl	400ea8 <path_startswith@plt>
  4016c4:	cmp	x0, #0x0
  4016c8:	csel	x1, x19, x0, eq  // eq = none
  4016cc:	b	401944 <parse_proc_cmdline_item+0x300>
  4016d0:	cbz	x20, 401890 <parse_proc_cmdline_item+0x24c>
  4016d4:	adrp	x3, 401000 <_start+0x28>
  4016d8:	add	x3, x3, #0xcb0
  4016dc:	add	x4, sp, #0x8
  4016e0:	mov	w2, #0x2                   	// #2
  4016e4:	mov	x0, x20
  4016e8:	mov	x1, xzr
  4016ec:	bl	400f98 <unit_name_mangle_with_suffix@plt>
  4016f0:	tbnz	w0, #31, 4017f4 <parse_proc_cmdline_item+0x1b0>
  4016f4:	ldr	x1, [sp, #8]
  4016f8:	adrp	x0, 420000 <completed.8445>
  4016fc:	add	x0, x0, #0x10
  401700:	bl	400fa8 <strv_consume@plt>
  401704:	tbz	w0, #31, 401954 <parse_proc_cmdline_item+0x310>
  401708:	adrp	x1, 401000 <_start+0x28>
  40170c:	adrp	x3, 401000 <_start+0x28>
  401710:	add	x1, x1, #0xa6b
  401714:	add	x3, x3, #0xbaa
  401718:	mov	w2, #0x2e                  	// #46
  40171c:	b	40176c <parse_proc_cmdline_item+0x128>
  401720:	cbz	x20, 401890 <parse_proc_cmdline_item+0x24c>
  401724:	adrp	x3, 401000 <_start+0x28>
  401728:	add	x3, x3, #0xcb0
  40172c:	add	x4, sp, #0x8
  401730:	mov	w2, #0x2                   	// #2
  401734:	mov	x0, x20
  401738:	mov	x1, xzr
  40173c:	bl	400f98 <unit_name_mangle_with_suffix@plt>
  401740:	tbnz	w0, #31, 4018d4 <parse_proc_cmdline_item+0x290>
  401744:	ldr	x1, [sp, #8]
  401748:	adrp	x0, 420000 <completed.8445>
  40174c:	add	x0, x0, #0x18
  401750:	bl	400fa8 <strv_consume@plt>
  401754:	tbz	w0, #31, 401954 <parse_proc_cmdline_item+0x310>
  401758:	adrp	x1, 401000 <_start+0x28>
  40175c:	adrp	x3, 401000 <_start+0x28>
  401760:	add	x1, x1, #0xa6b
  401764:	add	x3, x3, #0xbaa
  401768:	mov	w2, #0x3c                  	// #60
  40176c:	mov	w0, wzr
  401770:	bl	400f08 <log_oom_internal@plt>
  401774:	b	401958 <parse_proc_cmdline_item+0x314>
  401778:	adrp	x1, 401000 <_start+0x28>
  40177c:	add	x1, x1, #0xc0b
  401780:	mov	x0, x19
  401784:	bl	400eb8 <strcmp@plt>
  401788:	cbz	w0, 40182c <parse_proc_cmdline_item+0x1e8>
  40178c:	cbnz	x20, 401954 <parse_proc_cmdline_item+0x310>
  401790:	mov	x0, x19
  401794:	bl	400fb8 <runlevel_to_target@plt>
  401798:	cbz	x0, 401958 <parse_proc_cmdline_item+0x314>
  40179c:	mov	x19, x0
  4017a0:	adrp	x0, 420000 <completed.8445>
  4017a4:	add	x0, x0, #0x8
  4017a8:	mov	x1, x19
  4017ac:	bl	400fc8 <free_and_strdup@plt>
  4017b0:	tbz	w0, #31, 401954 <parse_proc_cmdline_item+0x310>
  4017b4:	mov	w20, w0
  4017b8:	mov	w0, wzr
  4017bc:	bl	400e58 <log_get_max_level_realm@plt>
  4017c0:	cmp	w0, #0x3
  4017c4:	b.lt	401990 <parse_proc_cmdline_item+0x34c>  // b.tstop
  4017c8:	adrp	x2, 401000 <_start+0x28>
  4017cc:	adrp	x4, 401000 <_start+0x28>
  4017d0:	adrp	x5, 401000 <_start+0x28>
  4017d4:	add	x2, x2, #0xa6b
  4017d8:	add	x4, x4, #0xbaa
  4017dc:	add	x5, x5, #0xc18
  4017e0:	mov	w0, #0x3                   	// #3
  4017e4:	mov	w3, #0x5a                  	// #90
  4017e8:	mov	w1, w20
  4017ec:	mov	x6, x19
  4017f0:	b	401880 <parse_proc_cmdline_item+0x23c>
  4017f4:	mov	w19, w0
  4017f8:	mov	w0, wzr
  4017fc:	bl	400e58 <log_get_max_level_realm@plt>
  401800:	cmp	w0, #0x3
  401804:	b.lt	401914 <parse_proc_cmdline_item+0x2d0>  // b.tstop
  401808:	adrp	x2, 401000 <_start+0x28>
  40180c:	adrp	x4, 401000 <_start+0x28>
  401810:	adrp	x5, 401000 <_start+0x28>
  401814:	add	x2, x2, #0xa6b
  401818:	add	x4, x4, #0xbaa
  40181c:	add	x5, x5, #0xbc2
  401820:	mov	w0, #0x3                   	// #3
  401824:	mov	w3, #0x2a                  	// #42
  401828:	b	401908 <parse_proc_cmdline_item+0x2c4>
  40182c:	cbz	x20, 401890 <parse_proc_cmdline_item+0x24c>
  401830:	adrp	x0, 420000 <completed.8445>
  401834:	add	x0, x0, #0x8
  401838:	mov	x1, x20
  40183c:	bl	400fc8 <free_and_strdup@plt>
  401840:	tbz	w0, #31, 401954 <parse_proc_cmdline_item+0x310>
  401844:	mov	w19, w0
  401848:	mov	w0, wzr
  40184c:	bl	400e58 <log_get_max_level_realm@plt>
  401850:	cmp	w0, #0x3
  401854:	b.lt	401914 <parse_proc_cmdline_item+0x2d0>  // b.tstop
  401858:	adrp	x2, 401000 <_start+0x28>
  40185c:	adrp	x4, 401000 <_start+0x28>
  401860:	adrp	x5, 401000 <_start+0x28>
  401864:	add	x2, x2, #0xa6b
  401868:	add	x4, x4, #0xbaa
  40186c:	add	x5, x5, #0xc18
  401870:	mov	w0, #0x3                   	// #3
  401874:	mov	w3, #0x51                  	// #81
  401878:	mov	w1, w19
  40187c:	mov	x6, x20
  401880:	ldp	x20, x19, [sp, #32]
  401884:	ldp	x29, x30, [sp, #16]
  401888:	add	sp, sp, #0x30
  40188c:	b	400e68 <log_internal_realm@plt>
  401890:	mov	w0, wzr
  401894:	bl	400e58 <log_get_max_level_realm@plt>
  401898:	cmp	w0, #0x4
  40189c:	mov	w0, wzr
  4018a0:	b.lt	401958 <parse_proc_cmdline_item+0x314>  // b.tstop
  4018a4:	adrp	x2, 401000 <_start+0x28>
  4018a8:	adrp	x4, 401000 <_start+0x28>
  4018ac:	adrp	x5, 401000 <_start+0x28>
  4018b0:	add	x2, x2, #0xc3d
  4018b4:	add	x4, x4, #0xc56
  4018b8:	add	x5, x5, #0xc71
  4018bc:	mov	w0, #0x4                   	// #4
  4018c0:	mov	w3, #0x21                  	// #33
  4018c4:	mov	w1, wzr
  4018c8:	mov	x6, x19
  4018cc:	bl	400e68 <log_internal_realm@plt>
  4018d0:	b	401954 <parse_proc_cmdline_item+0x310>
  4018d4:	mov	w19, w0
  4018d8:	mov	w0, wzr
  4018dc:	bl	400e58 <log_get_max_level_realm@plt>
  4018e0:	cmp	w0, #0x3
  4018e4:	b.lt	401914 <parse_proc_cmdline_item+0x2d0>  // b.tstop
  4018e8:	adrp	x2, 401000 <_start+0x28>
  4018ec:	adrp	x4, 401000 <_start+0x28>
  4018f0:	adrp	x5, 401000 <_start+0x28>
  4018f4:	add	x2, x2, #0xa6b
  4018f8:	add	x4, x4, #0xbaa
  4018fc:	add	x5, x5, #0xbc2
  401900:	mov	w0, #0x3                   	// #3
  401904:	mov	w3, #0x38                  	// #56
  401908:	mov	w1, w19
  40190c:	bl	400e68 <log_internal_realm@plt>
  401910:	b	401958 <parse_proc_cmdline_item+0x314>
  401914:	mov	w8, wzr
  401918:	neg	w9, w19
  40191c:	sub	w0, w8, w9, uxtb
  401920:	b	401958 <parse_proc_cmdline_item+0x314>
  401924:	adrp	x1, 401000 <_start+0x28>
  401928:	add	x1, x1, #0xcb9
  40192c:	mov	x0, x20
  401930:	bl	400ea8 <path_startswith@plt>
  401934:	cmp	x0, #0x0
  401938:	csel	x1, x20, x0, eq  // eq = none
  40193c:	b	401944 <parse_proc_cmdline_item+0x300>
  401940:	mov	x1, xzr
  401944:	adrp	x0, 420000 <completed.8445>
  401948:	add	x0, x0, #0x20
  40194c:	bl	400fc8 <free_and_strdup@plt>
  401950:	tbnz	w0, #31, 401968 <parse_proc_cmdline_item+0x324>
  401954:	mov	w0, wzr
  401958:	ldp	x20, x19, [sp, #32]
  40195c:	ldp	x29, x30, [sp, #16]
  401960:	add	sp, sp, #0x30
  401964:	ret
  401968:	ldp	x20, x19, [sp, #32]
  40196c:	ldp	x29, x30, [sp, #16]
  401970:	adrp	x1, 401000 <_start+0x28>
  401974:	adrp	x3, 401000 <_start+0x28>
  401978:	add	x1, x1, #0xa6b
  40197c:	add	x3, x3, #0xbaa
  401980:	mov	w2, #0x48                  	// #72
  401984:	mov	w0, wzr
  401988:	add	sp, sp, #0x30
  40198c:	b	400f08 <log_oom_internal@plt>
  401990:	mov	w8, wzr
  401994:	neg	w9, w20
  401998:	b	40191c <parse_proc_cmdline_item+0x2d8>
  40199c:	adrp	x1, 401000 <_start+0x28>
  4019a0:	adrp	x2, 401000 <_start+0x28>
  4019a4:	adrp	x4, 401000 <_start+0x28>
  4019a8:	add	x1, x1, #0xb59
  4019ac:	add	x2, x2, #0xa6b
  4019b0:	add	x4, x4, #0xb5d
  4019b4:	mov	w3, #0x20                  	// #32
  4019b8:	bl	400e78 <log_assert_failed_realm@plt>
  4019bc:	udf	#0

00000000004019c0 <__libc_csu_init>:
  4019c0:	stp	x29, x30, [sp, #-64]!
  4019c4:	mov	x29, sp
  4019c8:	stp	x19, x20, [sp, #16]
  4019cc:	adrp	x20, 41f000 <__FRAME_END__+0x1d098>
  4019d0:	add	x20, x20, #0xcb8
  4019d4:	stp	x21, x22, [sp, #32]
  4019d8:	adrp	x21, 41f000 <__FRAME_END__+0x1d098>
  4019dc:	add	x21, x21, #0xcb0
  4019e0:	sub	x20, x20, x21
  4019e4:	mov	w22, w0
  4019e8:	stp	x23, x24, [sp, #48]
  4019ec:	mov	x23, x1
  4019f0:	mov	x24, x2
  4019f4:	bl	400dc0 <_init>
  4019f8:	cmp	xzr, x20, asr #3
  4019fc:	b.eq	401a28 <__libc_csu_init+0x68>  // b.none
  401a00:	asr	x20, x20, #3
  401a04:	mov	x19, #0x0                   	// #0
  401a08:	ldr	x3, [x21, x19, lsl #3]
  401a0c:	mov	x2, x24
  401a10:	add	x19, x19, #0x1
  401a14:	mov	x1, x23
  401a18:	mov	w0, w22
  401a1c:	blr	x3
  401a20:	cmp	x20, x19
  401a24:	b.ne	401a08 <__libc_csu_init+0x48>  // b.any
  401a28:	ldp	x19, x20, [sp, #16]
  401a2c:	ldp	x21, x22, [sp, #32]
  401a30:	ldp	x23, x24, [sp, #48]
  401a34:	ldp	x29, x30, [sp], #64
  401a38:	ret
  401a3c:	nop

0000000000401a40 <__libc_csu_fini>:
  401a40:	ret

Disassembly of section .fini:

0000000000401a44 <_fini>:
  401a44:	stp	x29, x30, [sp, #-16]!
  401a48:	mov	x29, sp
  401a4c:	ldp	x29, x30, [sp], #16
  401a50:	ret
