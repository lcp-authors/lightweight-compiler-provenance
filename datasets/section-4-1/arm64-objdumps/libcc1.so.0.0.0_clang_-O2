
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004f60 <.init>:
    4f60:	stp	x29, x30, [sp, #-16]!
    4f64:	mov	x29, sp
    4f68:	bl	54d0 <bcmp@plt+0x10>
    4f6c:	ldp	x29, x30, [sp], #16
    4f70:	ret

Disassembly of section .plt:

0000000000004f80 <_Znam@plt-0x20>:
    4f80:	stp	x16, x30, [sp, #-16]!
    4f84:	adrp	x16, 2a000 <xexit@@Base+0x144dc>
    4f88:	ldr	x17, [x16, #4088]
    4f8c:	add	x16, x16, #0xff8
    4f90:	br	x17
    4f94:	nop
    4f98:	nop
    4f9c:	nop

0000000000004fa0 <_Znam@plt>:
    4fa0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fa4:	ldr	x17, [x16]
    4fa8:	add	x16, x16, #0x0
    4fac:	br	x17

0000000000004fb0 <memcpy@plt>:
    4fb0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fb4:	ldr	x17, [x16, #8]
    4fb8:	add	x16, x16, #0x8
    4fbc:	br	x17

0000000000004fc0 <select@plt>:
    4fc0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fc4:	ldr	x17, [x16, #16]
    4fc8:	add	x16, x16, #0x10
    4fcc:	br	x17

0000000000004fd0 <xregcomp@plt>:
    4fd0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fd4:	ldr	x17, [x16, #24]
    4fd8:	add	x16, x16, #0x18
    4fdc:	br	x17

0000000000004fe0 <execvp@plt>:
    4fe0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4fe4:	ldr	x17, [x16, #32]
    4fe8:	add	x16, x16, #0x20
    4fec:	br	x17

0000000000004ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm@plt>:
    4ff0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    4ff4:	ldr	x17, [x16, #40]
    4ff8:	add	x16, x16, #0x28
    4ffc:	br	x17

0000000000005000 <socketpair@plt>:
    5000:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5004:	ldr	x17, [x16, #48]
    5008:	add	x16, x16, #0x30
    500c:	br	x17

0000000000005010 <calloc@plt>:
    5010:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5014:	ldr	x17, [x16, #56]
    5018:	add	x16, x16, #0x38
    501c:	br	x17

0000000000005020 <pipe@plt>:
    5020:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5024:	ldr	x17, [x16, #64]
    5028:	add	x16, x16, #0x40
    502c:	br	x17

0000000000005030 <dup2@plt>:
    5030:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5034:	ldr	x17, [x16, #72]
    5038:	add	x16, x16, #0x48
    503c:	br	x17

0000000000005040 <_ZSt9terminatev@plt>:
    5040:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5044:	ldr	x17, [x16, #80]
    5048:	add	x16, x16, #0x50
    504c:	br	x17

0000000000005050 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    5050:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5054:	ldr	x17, [x16, #88]
    5058:	add	x16, x16, #0x58
    505c:	br	x17

0000000000005060 <strlen@plt>:
    5060:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5064:	ldr	x17, [x16, #96]
    5068:	add	x16, x16, #0x60
    506c:	br	x17

0000000000005070 <fprintf@plt>:
    5070:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5074:	ldr	x17, [x16, #104]
    5078:	add	x16, x16, #0x68
    507c:	br	x17

0000000000005080 <xregfree@plt>:
    5080:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5084:	ldr	x17, [x16, #112]
    5088:	add	x16, x16, #0x70
    508c:	br	x17

0000000000005090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>:
    5090:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5094:	ldr	x17, [x16, #120]
    5098:	add	x16, x16, #0x78
    509c:	br	x17

00000000000050a0 <_ZNSt8ios_baseD2Ev@plt>:
    50a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50a4:	ldr	x17, [x16, #128]
    50a8:	add	x16, x16, #0x80
    50ac:	br	x17

00000000000050b0 <waitpid@plt>:
    50b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50b4:	ldr	x17, [x16, #136]
    50b8:	add	x16, x16, #0x88
    50bc:	br	x17

00000000000050c0 <htab_create_alloc@plt>:
    50c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50c4:	ldr	x17, [x16, #144]
    50c8:	add	x16, x16, #0x90
    50cc:	br	x17

00000000000050d0 <__cxa_begin_catch@plt>:
    50d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50d4:	ldr	x17, [x16, #152]
    50d8:	add	x16, x16, #0x98
    50dc:	br	x17

00000000000050e0 <xstrdup@plt>:
    50e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50e4:	ldr	x17, [x16, #160]
    50e8:	add	x16, x16, #0xa0
    50ec:	br	x17

00000000000050f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>:
    50f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    50f4:	ldr	x17, [x16, #168]
    50f8:	add	x16, x16, #0xa8
    50fc:	br	x17

0000000000005100 <_ZSt20__throw_length_errorPKc@plt>:
    5100:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5104:	ldr	x17, [x16, #176]
    5108:	add	x16, x16, #0xb0
    510c:	br	x17

0000000000005110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>:
    5110:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5114:	ldr	x17, [x16, #184]
    5118:	add	x16, x16, #0xb8
    511c:	br	x17

0000000000005120 <free@plt>:
    5120:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5124:	ldr	x17, [x16, #192]
    5128:	add	x16, x16, #0xc0
    512c:	br	x17

0000000000005130 <memset@plt>:
    5130:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5134:	ldr	x17, [x16, #200]
    5138:	add	x16, x16, #0xc8
    513c:	br	x17

0000000000005140 <__cxa_finalize@plt>:
    5140:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5144:	ldr	x17, [x16, #208]
    5148:	add	x16, x16, #0xd0
    514c:	br	x17

0000000000005150 <realloc@plt>:
    5150:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5154:	ldr	x17, [x16, #216]
    5158:	add	x16, x16, #0xd8
    515c:	br	x17

0000000000005160 <xregexec@plt>:
    5160:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5164:	ldr	x17, [x16, #224]
    5168:	add	x16, x16, #0xe0
    516c:	br	x17

0000000000005170 <_exit@plt>:
    5170:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5174:	ldr	x17, [x16, #232]
    5178:	add	x16, x16, #0xe8
    517c:	br	x17

0000000000005180 <htab_find_slot_with_hash@plt>:
    5180:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5184:	ldr	x17, [x16, #240]
    5188:	add	x16, x16, #0xf0
    518c:	br	x17

0000000000005190 <read@plt>:
    5190:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5194:	ldr	x17, [x16, #248]
    5198:	add	x16, x16, #0xf8
    519c:	br	x17

00000000000051a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    51a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51a4:	ldr	x17, [x16, #256]
    51a8:	add	x16, x16, #0x100
    51ac:	br	x17

00000000000051b0 <_ZSt19__throw_logic_errorPKc@plt>:
    51b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51b4:	ldr	x17, [x16, #264]
    51b8:	add	x16, x16, #0x108
    51bc:	br	x17

00000000000051c0 <htab_find@plt>:
    51c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51c4:	ldr	x17, [x16, #272]
    51c8:	add	x16, x16, #0x110
    51cc:	br	x17

00000000000051d0 <closedir@plt>:
    51d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51d4:	ldr	x17, [x16, #280]
    51d8:	add	x16, x16, #0x118
    51dc:	br	x17

00000000000051e0 <concat@plt>:
    51e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51e4:	ldr	x17, [x16, #288]
    51e8:	add	x16, x16, #0x120
    51ec:	br	x17

00000000000051f0 <xmalloc_failed@plt>:
    51f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    51f4:	ldr	x17, [x16, #296]
    51f8:	add	x16, x16, #0x128
    51fc:	br	x17

0000000000005200 <htab_hash_string@plt>:
    5200:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5204:	ldr	x17, [x16, #304]
    5208:	add	x16, x16, #0x130
    520c:	br	x17

0000000000005210 <_ZdlPv@plt>:
    5210:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5214:	ldr	x17, [x16, #312]
    5218:	add	x16, x16, #0x138
    521c:	br	x17

0000000000005220 <_Znwm@plt>:
    5220:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5224:	ldr	x17, [x16, #320]
    5228:	add	x16, x16, #0x140
    522c:	br	x17

0000000000005230 <readdir@plt>:
    5230:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5234:	ldr	x17, [x16, #328]
    5238:	add	x16, x16, #0x148
    523c:	br	x17

0000000000005240 <opendir@plt>:
    5240:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5244:	ldr	x17, [x16, #336]
    5248:	add	x16, x16, #0x150
    524c:	br	x17

0000000000005250 <__ctype_b_loc@plt>:
    5250:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5254:	ldr	x17, [x16, #344]
    5258:	add	x16, x16, #0x158
    525c:	br	x17

0000000000005260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>:
    5260:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5264:	ldr	x17, [x16, #352]
    5268:	add	x16, x16, #0x160
    526c:	br	x17

0000000000005270 <snprintf@plt>:
    5270:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5274:	ldr	x17, [x16, #360]
    5278:	add	x16, x16, #0x168
    527c:	br	x17

0000000000005280 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5280:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5284:	ldr	x17, [x16, #368]
    5288:	add	x16, x16, #0x170
    528c:	br	x17

0000000000005290 <sbrk@plt>:
    5290:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5294:	ldr	x17, [x16, #376]
    5298:	add	x16, x16, #0x178
    529c:	br	x17

00000000000052a0 <htab_find_slot@plt>:
    52a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52a4:	ldr	x17, [x16, #384]
    52a8:	add	x16, x16, #0x180
    52ac:	br	x17

00000000000052b0 <_ZdaPv@plt>:
    52b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52b4:	ldr	x17, [x16, #392]
    52b8:	add	x16, x16, #0x188
    52bc:	br	x17

00000000000052c0 <__errno_location@plt>:
    52c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52c4:	ldr	x17, [x16, #400]
    52c8:	add	x16, x16, #0x190
    52cc:	br	x17

00000000000052d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    52d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52d4:	ldr	x17, [x16, #408]
    52d8:	add	x16, x16, #0x198
    52dc:	br	x17

00000000000052e0 <__ctype_tolower_loc@plt>:
    52e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52e4:	ldr	x17, [x16, #416]
    52e8:	add	x16, x16, #0x1a0
    52ec:	br	x17

00000000000052f0 <xmalloc@plt>:
    52f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    52f4:	ldr	x17, [x16, #424]
    52f8:	add	x16, x16, #0x1a8
    52fc:	br	x17

0000000000005300 <fork@plt>:
    5300:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5304:	ldr	x17, [x16, #432]
    5308:	add	x16, x16, #0x1b0
    530c:	br	x17

0000000000005310 <_ZNSt6localeD1Ev@plt>:
    5310:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5314:	ldr	x17, [x16, #440]
    5318:	add	x16, x16, #0x1b8
    531c:	br	x17

0000000000005320 <close@plt>:
    5320:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5324:	ldr	x17, [x16, #448]
    5328:	add	x16, x16, #0x1c0
    532c:	br	x17

0000000000005330 <strcmp@plt>:
    5330:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5334:	ldr	x17, [x16, #456]
    5338:	add	x16, x16, #0x1c8
    533c:	br	x17

0000000000005340 <__cxa_rethrow@plt>:
    5340:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5344:	ldr	x17, [x16, #464]
    5348:	add	x16, x16, #0x1d0
    534c:	br	x17

0000000000005350 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5350:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5354:	ldr	x17, [x16, #472]
    5358:	add	x16, x16, #0x1d8
    535c:	br	x17

0000000000005360 <write@plt>:
    5360:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5364:	ldr	x17, [x16, #480]
    5368:	add	x16, x16, #0x1e0
    536c:	br	x17

0000000000005370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>:
    5370:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5374:	ldr	x17, [x16, #488]
    5378:	add	x16, x16, #0x1e8
    537c:	br	x17

0000000000005380 <malloc@plt>:
    5380:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5384:	ldr	x17, [x16, #496]
    5388:	add	x16, x16, #0x1f0
    538c:	br	x17

0000000000005390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    5390:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5394:	ldr	x17, [x16, #504]
    5398:	add	x16, x16, #0x1f8
    539c:	br	x17

00000000000053a0 <xexit@plt>:
    53a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53a4:	ldr	x17, [x16, #512]
    53a8:	add	x16, x16, #0x200
    53ac:	br	x17

00000000000053b0 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>:
    53b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53b4:	ldr	x17, [x16, #520]
    53b8:	add	x16, x16, #0x208
    53bc:	br	x17

00000000000053c0 <abort@plt>:
    53c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53c4:	ldr	x17, [x16, #528]
    53c8:	add	x16, x16, #0x210
    53cc:	br	x17

00000000000053d0 <getenv@plt>:
    53d0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53d4:	ldr	x17, [x16, #536]
    53d8:	add	x16, x16, #0x218
    53dc:	br	x17

00000000000053e0 <__cxa_end_catch@plt>:
    53e0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53e4:	ldr	x17, [x16, #544]
    53e8:	add	x16, x16, #0x220
    53ec:	br	x17

00000000000053f0 <_ZnamRKSt9nothrow_t@plt>:
    53f0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    53f4:	ldr	x17, [x16, #552]
    53f8:	add	x16, x16, #0x228
    53fc:	br	x17

0000000000005400 <xcalloc@plt>:
    5400:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5404:	ldr	x17, [x16, #560]
    5408:	add	x16, x16, #0x230
    540c:	br	x17

0000000000005410 <__gxx_personality_v0@plt>:
    5410:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5414:	ldr	x17, [x16, #568]
    5418:	add	x16, x16, #0x238
    541c:	br	x17

0000000000005420 <htab_find_with_hash@plt>:
    5420:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5424:	ldr	x17, [x16, #576]
    5428:	add	x16, x16, #0x240
    542c:	br	x17

0000000000005430 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>:
    5430:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5434:	ldr	x17, [x16, #584]
    5438:	add	x16, x16, #0x248
    543c:	br	x17

0000000000005440 <xregerror@plt>:
    5440:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5444:	ldr	x17, [x16, #592]
    5448:	add	x16, x16, #0x250
    544c:	br	x17

0000000000005450 <exit@plt>:
    5450:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5454:	ldr	x17, [x16, #600]
    5458:	add	x16, x16, #0x258
    545c:	br	x17

0000000000005460 <htab_delete@plt>:
    5460:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5464:	ldr	x17, [x16, #608]
    5468:	add	x16, x16, #0x260
    546c:	br	x17

0000000000005470 <_Unwind_Resume@plt>:
    5470:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5474:	ldr	x17, [x16, #616]
    5478:	add	x16, x16, #0x268
    547c:	br	x17

0000000000005480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    5480:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5484:	ldr	x17, [x16, #624]
    5488:	add	x16, x16, #0x270
    548c:	br	x17

0000000000005490 <xre_search_2@plt>:
    5490:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    5494:	ldr	x17, [x16, #632]
    5498:	add	x16, x16, #0x278
    549c:	br	x17

00000000000054a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>:
    54a0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54a4:	ldr	x17, [x16, #640]
    54a8:	add	x16, x16, #0x280
    54ac:	br	x17

00000000000054b0 <__gmon_start__@plt>:
    54b0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54b4:	ldr	x17, [x16, #648]
    54b8:	add	x16, x16, #0x288
    54bc:	br	x17

00000000000054c0 <bcmp@plt>:
    54c0:	adrp	x16, 2b000 <_Znam@GLIBCXX_3.4>
    54c4:	ldr	x17, [x16, #656]
    54c8:	add	x16, x16, #0x290
    54cc:	br	x17

Disassembly of section .text:

00000000000054d0 <gcc_c_fe_context@@Base-0xc44>:
    54d0:	adrp	x0, 2a000 <xexit@@Base+0x144dc>
    54d4:	ldr	x0, [x0, #3960]
    54d8:	cbz	x0, 54e0 <bcmp@plt+0x20>
    54dc:	b	54b0 <__gmon_start__@plt>
    54e0:	ret
    54e4:	nop
    54e8:	adrp	x0, 2b000 <xexit@@Base+0x154dc>
    54ec:	add	x0, x0, #0x5b0
    54f0:	adrp	x1, 2b000 <xexit@@Base+0x154dc>
    54f4:	add	x1, x1, #0x5b0
    54f8:	cmp	x1, x0
    54fc:	b.eq	5514 <bcmp@plt+0x54>  // b.none
    5500:	adrp	x1, 2a000 <xexit@@Base+0x144dc>
    5504:	ldr	x1, [x1, #3904]
    5508:	cbz	x1, 5514 <bcmp@plt+0x54>
    550c:	mov	x16, x1
    5510:	br	x16
    5514:	ret
    5518:	adrp	x0, 2b000 <xexit@@Base+0x154dc>
    551c:	add	x0, x0, #0x5b0
    5520:	adrp	x1, 2b000 <xexit@@Base+0x154dc>
    5524:	add	x1, x1, #0x5b0
    5528:	sub	x1, x1, x0
    552c:	lsr	x2, x1, #63
    5530:	add	x1, x2, x1, asr #3
    5534:	cmp	xzr, x1, asr #1
    5538:	asr	x1, x1, #1
    553c:	b.eq	5554 <bcmp@plt+0x94>  // b.none
    5540:	adrp	x2, 2a000 <xexit@@Base+0x144dc>
    5544:	ldr	x2, [x2, #3992]
    5548:	cbz	x2, 5554 <bcmp@plt+0x94>
    554c:	mov	x16, x2
    5550:	br	x16
    5554:	ret
    5558:	stp	x29, x30, [sp, #-32]!
    555c:	mov	x29, sp
    5560:	str	x19, [sp, #16]
    5564:	adrp	x19, 2b000 <xexit@@Base+0x154dc>
    5568:	ldrb	w0, [x19, #1456]
    556c:	cbnz	w0, 5594 <bcmp@plt+0xd4>
    5570:	adrp	x0, 2a000 <xexit@@Base+0x144dc>
    5574:	ldr	x0, [x0, #3416]
    5578:	cbz	x0, 5588 <bcmp@plt+0xc8>
    557c:	adrp	x0, 2b000 <xexit@@Base+0x154dc>
    5580:	ldr	x0, [x0, #664]
    5584:	bl	5140 <__cxa_finalize@plt>
    5588:	bl	54e8 <bcmp@plt+0x28>
    558c:	mov	w0, #0x1                   	// #1
    5590:	strb	w0, [x19, #1456]
    5594:	ldr	x19, [sp, #16]
    5598:	ldp	x29, x30, [sp], #32
    559c:	ret
    55a0:	b	5518 <bcmp@plt+0x58>
    55a4:	sub	sp, sp, #0x100
    55a8:	stp	x29, x30, [sp, #160]
    55ac:	stp	x28, x27, [sp, #176]
    55b0:	stp	x26, x25, [sp, #192]
    55b4:	stp	x24, x23, [sp, #208]
    55b8:	stp	x22, x21, [sp, #224]
    55bc:	stp	x20, x19, [sp, #240]
    55c0:	add	x29, sp, #0xa0
    55c4:	mov	x20, x0
    55c8:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    55cc:	add	x0, x0, #0xb60
    55d0:	mov	x19, x1
    55d4:	bl	53d0 <getenv@plt>
    55d8:	cbz	x0, 563c <bcmp@plt+0x17c>
    55dc:	add	x8, sp, #0x30
    55e0:	add	x23, x8, #0x10
    55e4:	mov	x21, x0
    55e8:	str	x23, [sp, #48]
    55ec:	bl	5060 <strlen@plt>
    55f0:	mov	x22, x0
    55f4:	cmp	x0, #0x10
    55f8:	stur	x0, [x29, #-40]
    55fc:	mov	x0, x23
    5600:	str	x23, [sp, #8]
    5604:	b.cc	5624 <bcmp@plt+0x164>  // b.lo, b.ul, b.last
    5608:	add	x0, sp, #0x30
    560c:	sub	x1, x29, #0x28
    5610:	mov	x2, xzr
    5614:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5618:	ldur	x8, [x29, #-40]
    561c:	str	x0, [sp, #48]
    5620:	str	x8, [sp, #64]
    5624:	cbz	x22, 5650 <bcmp@plt+0x190>
    5628:	cmp	x22, #0x1
    562c:	b.ne	5644 <bcmp@plt+0x184>  // b.any
    5630:	ldrb	w8, [x21]
    5634:	strb	w8, [x0]
    5638:	b	5650 <bcmp@plt+0x190>
    563c:	mov	w19, wzr
    5640:	b	58c8 <bcmp@plt+0x408>
    5644:	mov	x1, x21
    5648:	mov	x2, x22
    564c:	bl	4fb0 <memcpy@plt>
    5650:	ldur	x8, [x29, #-40]
    5654:	ldr	x9, [sp, #48]
    5658:	sub	x10, x29, #0x48
    565c:	sub	x11, x29, #0x28
    5660:	add	x12, sp, #0x10
    5664:	add	x26, x19, #0x10
    5668:	add	x28, x10, #0x10
    566c:	add	x22, x11, #0x10
    5670:	add	x27, x12, #0x10
    5674:	str	x8, [sp, #56]
    5678:	strb	wzr, [x9, x8]
    567c:	str	xzr, [sp, #80]
    5680:	add	x8, sp, #0x10
    5684:	add	x0, sp, #0x30
    5688:	bl	5980 <bcmp@plt+0x4c0>
    568c:	ldr	x0, [sp, #16]
    5690:	bl	5240 <opendir@plt>
    5694:	cbz	x0, 571c <bcmp@plt+0x25c>
    5698:	mov	x21, x0
    569c:	mov	x0, x21
    56a0:	bl	5230 <readdir@plt>
    56a4:	cbz	x0, 5724 <bcmp@plt+0x264>
    56a8:	add	x23, x0, #0x13
    56ac:	mov	x0, x20
    56b0:	mov	x1, x23
    56b4:	mov	x2, xzr
    56b8:	mov	x3, xzr
    56bc:	mov	w4, wzr
    56c0:	bl	5160 <xregexec@plt>
    56c4:	cbnz	w0, 569c <bcmp@plt+0x1dc>
    56c8:	ldp	x24, x25, [sp, #16]
    56cc:	stur	x28, [x29, #-72]
    56d0:	cbnz	x24, 56d8 <bcmp@plt+0x218>
    56d4:	cbnz	x25, 58ec <bcmp@plt+0x42c>
    56d8:	cmp	x25, #0x10
    56dc:	mov	x0, x28
    56e0:	stur	x25, [x29, #-8]
    56e4:	b.cc	5704 <bcmp@plt+0x244>  // b.lo, b.ul, b.last
    56e8:	sub	x0, x29, #0x48
    56ec:	sub	x1, x29, #0x8
    56f0:	mov	x2, xzr
    56f4:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    56f8:	ldur	x8, [x29, #-8]
    56fc:	stur	x0, [x29, #-72]
    5700:	stur	x8, [x29, #-56]
    5704:	cbz	x25, 5738 <bcmp@plt+0x278>
    5708:	cmp	x25, #0x1
    570c:	b.ne	572c <bcmp@plt+0x26c>  // b.any
    5710:	ldrb	w8, [x24]
    5714:	strb	w8, [x0]
    5718:	b	5738 <bcmp@plt+0x278>
    571c:	mov	w23, #0x1                   	// #1
    5720:	b	5888 <bcmp@plt+0x3c8>
    5724:	mov	w23, #0x1                   	// #1
    5728:	b	5880 <bcmp@plt+0x3c0>
    572c:	mov	x1, x24
    5730:	mov	x2, x25
    5734:	bl	4fb0 <memcpy@plt>
    5738:	ldur	x8, [x29, #-8]
    573c:	ldur	x9, [x29, #-72]
    5740:	stur	x8, [x29, #-64]
    5744:	strb	wzr, [x9, x8]
    5748:	ldur	x1, [x29, #-64]
    574c:	sub	x0, x29, #0x48
    5750:	mov	w3, #0x1                   	// #1
    5754:	mov	w4, #0x2f                  	// #47
    5758:	mov	x2, xzr
    575c:	bl	54a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@plt>
    5760:	mov	x0, x23
    5764:	bl	5060 <strlen@plt>
    5768:	ldur	x8, [x29, #-64]
    576c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    5770:	sub	x8, x9, x8
    5774:	cmp	x8, x0
    5778:	b.cc	58f8 <bcmp@plt+0x438>  // b.lo, b.ul, b.last
    577c:	mov	x2, x0
    5780:	sub	x0, x29, #0x48
    5784:	mov	x1, x23
    5788:	bl	5090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt>
    578c:	stur	x22, [x29, #-40]
    5790:	mov	x8, x0
    5794:	ldr	x9, [x8], #16
    5798:	cmp	x9, x8
    579c:	b.eq	57b0 <bcmp@plt+0x2f0>  // b.none
    57a0:	stur	x9, [x29, #-40]
    57a4:	ldr	x9, [x0, #16]
    57a8:	stur	x9, [x29, #-24]
    57ac:	b	57b8 <bcmp@plt+0x2f8>
    57b0:	ldr	q0, [x9]
    57b4:	str	q0, [x22]
    57b8:	ldr	x9, [x0, #8]
    57bc:	stur	x9, [x29, #-32]
    57c0:	stp	x8, xzr, [x0]
    57c4:	strb	wzr, [x0, #16]
    57c8:	ldur	x9, [x29, #-40]
    57cc:	cmp	x9, x22
    57d0:	b.eq	5800 <bcmp@plt+0x340>  // b.none
    57d4:	ldr	x8, [x19]
    57d8:	cmp	x8, x26
    57dc:	b.eq	5820 <bcmp@plt+0x360>  // b.none
    57e0:	str	x9, [x19]
    57e4:	ldur	q0, [x29, #-32]
    57e8:	ldr	x9, [x19, #16]
    57ec:	stur	q0, [x19, #8]
    57f0:	cbz	x8, 582c <bcmp@plt+0x36c>
    57f4:	stur	x8, [x29, #-40]
    57f8:	stur	x9, [x29, #-24]
    57fc:	b	5854 <bcmp@plt+0x394>
    5800:	ldur	x2, [x29, #-32]
    5804:	cbz	x2, 5840 <bcmp@plt+0x380>
    5808:	ldr	x0, [x19]
    580c:	cmp	x2, #0x1
    5810:	b.ne	5838 <bcmp@plt+0x378>  // b.any
    5814:	ldurb	w8, [x29, #-24]
    5818:	strb	w8, [x0]
    581c:	b	5840 <bcmp@plt+0x380>
    5820:	str	x9, [x19]
    5824:	ldur	q0, [x29, #-32]
    5828:	stur	q0, [x19, #8]
    582c:	stur	x22, [x29, #-40]
    5830:	mov	x8, x22
    5834:	b	5854 <bcmp@plt+0x394>
    5838:	mov	x1, x22
    583c:	bl	4fb0 <memcpy@plt>
    5840:	ldur	x8, [x29, #-32]
    5844:	ldr	x9, [x19]
    5848:	str	x8, [x19, #8]
    584c:	strb	wzr, [x9, x8]
    5850:	ldur	x8, [x29, #-40]
    5854:	stur	xzr, [x29, #-32]
    5858:	strb	wzr, [x8]
    585c:	ldur	x0, [x29, #-40]
    5860:	cmp	x0, x22
    5864:	b.eq	586c <bcmp@plt+0x3ac>  // b.none
    5868:	bl	5210 <_ZdlPv@plt>
    586c:	ldur	x0, [x29, #-72]
    5870:	cmp	x0, x28
    5874:	b.eq	587c <bcmp@plt+0x3bc>  // b.none
    5878:	bl	5210 <_ZdlPv@plt>
    587c:	mov	w23, wzr
    5880:	mov	x0, x21
    5884:	bl	51d0 <closedir@plt>
    5888:	ldr	x0, [sp, #16]
    588c:	cmp	x0, x27
    5890:	b.eq	5898 <bcmp@plt+0x3d8>  // b.none
    5894:	bl	5210 <_ZdlPv@plt>
    5898:	tbz	w23, #0, 58b0 <bcmp@plt+0x3f0>
    589c:	ldr	x8, [sp, #80]
    58a0:	cmn	x8, #0x1
    58a4:	b.ne	5680 <bcmp@plt+0x1c0>  // b.any
    58a8:	mov	w19, wzr
    58ac:	b	58b4 <bcmp@plt+0x3f4>
    58b0:	mov	w19, #0x1                   	// #1
    58b4:	ldr	x0, [sp, #48]
    58b8:	ldr	x8, [sp, #8]
    58bc:	cmp	x0, x8
    58c0:	b.eq	58c8 <bcmp@plt+0x408>  // b.none
    58c4:	bl	5210 <_ZdlPv@plt>
    58c8:	mov	w0, w19
    58cc:	ldp	x20, x19, [sp, #240]
    58d0:	ldp	x22, x21, [sp, #224]
    58d4:	ldp	x24, x23, [sp, #208]
    58d8:	ldp	x26, x25, [sp, #192]
    58dc:	ldp	x28, x27, [sp, #176]
    58e0:	ldp	x29, x30, [sp, #160]
    58e4:	add	sp, sp, #0x100
    58e8:	ret
    58ec:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    58f0:	add	x0, x0, #0xb65
    58f4:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    58f8:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    58fc:	add	x0, x0, #0xbdd
    5900:	bl	5100 <_ZSt20__throw_length_errorPKc@plt>
    5904:	b	5910 <bcmp@plt+0x450>
    5908:	b	5948 <bcmp@plt+0x488>
    590c:	b	5948 <bcmp@plt+0x488>
    5910:	mov	x19, x0
    5914:	ldur	x0, [x29, #-72]
    5918:	cmp	x0, x28
    591c:	b.ne	5938 <bcmp@plt+0x478>  // b.any
    5920:	b	594c <bcmp@plt+0x48c>
    5924:	ldur	x8, [x29, #-72]
    5928:	mov	x19, x0
    592c:	cmp	x8, x28
    5930:	b.eq	594c <bcmp@plt+0x48c>  // b.none
    5934:	mov	x0, x8
    5938:	bl	5210 <_ZdlPv@plt>
    593c:	b	594c <bcmp@plt+0x48c>
    5940:	mov	x19, x0
    5944:	b	5964 <bcmp@plt+0x4a4>
    5948:	mov	x19, x0
    594c:	mov	x0, x21
    5950:	bl	51d0 <closedir@plt>
    5954:	ldr	x0, [sp, #16]
    5958:	cmp	x0, x27
    595c:	b.eq	5964 <bcmp@plt+0x4a4>  // b.none
    5960:	bl	5210 <_ZdlPv@plt>
    5964:	ldr	x0, [sp, #48]
    5968:	ldr	x8, [sp, #8]
    596c:	cmp	x0, x8
    5970:	b.eq	5978 <bcmp@plt+0x4b8>  // b.none
    5974:	bl	5210 <_ZdlPv@plt>
    5978:	mov	x0, x19
    597c:	bl	5470 <_Unwind_Resume@plt>
    5980:	sub	sp, sp, #0x60
    5984:	stp	x29, x30, [sp, #32]
    5988:	str	x23, [sp, #48]
    598c:	stp	x22, x21, [sp, #64]
    5990:	stp	x20, x19, [sp, #80]
    5994:	add	x29, sp, #0x20
    5998:	ldr	x20, [x0, #32]
    599c:	mov	w1, #0x3a                  	// #58
    59a0:	mov	x21, x0
    59a4:	mov	x19, x8
    59a8:	mov	x2, x20
    59ac:	bl	52d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    59b0:	mov	x22, x19
    59b4:	cmn	x0, #0x1
    59b8:	strb	wzr, [x22, #16]!
    59bc:	stp	x22, xzr, [x19]
    59c0:	b.eq	59f4 <bcmp@plt+0x534>  // b.none
    59c4:	ldr	x3, [x21, #8]
    59c8:	add	x8, x0, #0x1
    59cc:	str	x8, [x21, #32]
    59d0:	cmp	x3, x20
    59d4:	b.cc	5b00 <bcmp@plt+0x640>  // b.lo, b.ul, b.last
    59d8:	sub	x3, x0, x20
    59dc:	mov	x0, sp
    59e0:	mov	x1, x21
    59e4:	mov	x2, x20
    59e8:	mov	x23, sp
    59ec:	bl	4ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm@plt>
    59f0:	b	5a20 <bcmp@plt+0x560>
    59f4:	ldr	x3, [x21, #8]
    59f8:	mov	x8, #0xffffffffffffffff    	// #-1
    59fc:	str	x8, [x21, #32]
    5a00:	cmp	x3, x20
    5a04:	b.cc	5b18 <bcmp@plt+0x658>  // b.lo, b.ul, b.last
    5a08:	mov	x0, sp
    5a0c:	mov	x3, #0xffffffffffffffff    	// #-1
    5a10:	mov	x1, x21
    5a14:	mov	x2, x20
    5a18:	mov	x23, sp
    5a1c:	bl	4ff0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm@plt>
    5a20:	ldr	x1, [sp]
    5a24:	add	x20, x23, #0x10
    5a28:	cmp	x1, x20
    5a2c:	b.eq	5a5c <bcmp@plt+0x59c>  // b.none
    5a30:	ldr	x8, [x19]
    5a34:	ldr	x9, [x19, #16]
    5a38:	ldur	q0, [sp, #8]
    5a3c:	str	x1, [x19]
    5a40:	cmp	x8, x22
    5a44:	csel	x8, xzr, x8, eq  // eq = none
    5a48:	stur	q0, [x19, #8]
    5a4c:	cbz	x8, 5a7c <bcmp@plt+0x5bc>
    5a50:	str	x8, [sp]
    5a54:	str	x9, [sp, #16]
    5a58:	b	5aa0 <bcmp@plt+0x5e0>
    5a5c:	ldr	x2, [sp, #8]
    5a60:	cbz	x2, 5a8c <bcmp@plt+0x5cc>
    5a64:	ldr	x0, [x19]
    5a68:	cmp	x2, #0x1
    5a6c:	b.ne	5a88 <bcmp@plt+0x5c8>  // b.any
    5a70:	ldrb	w8, [x1]
    5a74:	strb	w8, [x0]
    5a78:	b	5a8c <bcmp@plt+0x5cc>
    5a7c:	mov	x8, x20
    5a80:	str	x20, [sp]
    5a84:	b	5aa0 <bcmp@plt+0x5e0>
    5a88:	bl	4fb0 <memcpy@plt>
    5a8c:	ldr	x8, [sp, #8]
    5a90:	ldr	x9, [x19]
    5a94:	str	x8, [x19, #8]
    5a98:	strb	wzr, [x9, x8]
    5a9c:	ldr	x8, [sp]
    5aa0:	str	xzr, [sp, #8]
    5aa4:	strb	wzr, [x8]
    5aa8:	ldr	x0, [sp]
    5aac:	cmp	x0, x20
    5ab0:	b.eq	5ab8 <bcmp@plt+0x5f8>  // b.none
    5ab4:	bl	5210 <_ZdlPv@plt>
    5ab8:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5abc:	add	x1, x1, #0xdca
    5ac0:	mov	x0, x19
    5ac4:	bl	5050 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    5ac8:	cbnz	w0, 5ae8 <bcmp@plt+0x628>
    5acc:	ldr	x2, [x19, #8]
    5ad0:	adrp	x3, 15000 <htab_find_with_hash@@Base+0xdc>
    5ad4:	add	x3, x3, #0xb8f
    5ad8:	mov	w4, #0x1                   	// #1
    5adc:	mov	x0, x19
    5ae0:	mov	x1, xzr
    5ae4:	bl	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    5ae8:	ldp	x20, x19, [sp, #80]
    5aec:	ldp	x22, x21, [sp, #64]
    5af0:	ldr	x23, [sp, #48]
    5af4:	ldp	x29, x30, [sp, #32]
    5af8:	add	sp, sp, #0x60
    5afc:	ret
    5b00:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    5b04:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5b08:	add	x0, x0, #0xba6
    5b0c:	add	x1, x1, #0xb91
    5b10:	mov	x2, x20
    5b14:	bl	5350 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5b18:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    5b1c:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5b20:	add	x0, x0, #0xba6
    5b24:	add	x1, x1, #0xb91
    5b28:	mov	x2, x20
    5b2c:	bl	5350 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
    5b30:	b	5b38 <bcmp@plt+0x678>
    5b34:	b	5b38 <bcmp@plt+0x678>
    5b38:	mov	x20, x0
    5b3c:	ldr	x0, [x19]
    5b40:	cmp	x0, x22
    5b44:	b.eq	5b4c <bcmp@plt+0x68c>  // b.none
    5b48:	bl	5210 <_ZdlPv@plt>
    5b4c:	mov	x0, x20
    5b50:	bl	5470 <_Unwind_Resume@plt>
    5b54:	stp	x29, x30, [sp, #-32]!
    5b58:	str	x19, [sp, #16]
    5b5c:	mov	x29, sp
    5b60:	mov	x19, x1
    5b64:	add	x1, x29, #0x18
    5b68:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    5b6c:	cbz	w0, 5b7c <bcmp@plt+0x6bc>
    5b70:	ldr	x8, [x29, #24]
    5b74:	mov	w0, #0x1                   	// #1
    5b78:	str	w8, [x19]
    5b7c:	ldr	x19, [sp, #16]
    5b80:	ldp	x29, x30, [sp], #32
    5b84:	ret
    5b88:	stp	x29, x30, [sp, #-32]!
    5b8c:	str	x19, [sp, #16]
    5b90:	mov	x29, sp
    5b94:	mov	x19, x1
    5b98:	add	x1, x29, #0x18
    5b9c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    5ba0:	cbz	w0, 5bb0 <bcmp@plt+0x6f0>
    5ba4:	ldr	x8, [x29, #24]
    5ba8:	mov	w0, #0x1                   	// #1
    5bac:	str	w8, [x19]
    5bb0:	ldr	x19, [sp, #16]
    5bb4:	ldp	x29, x30, [sp], #32
    5bb8:	ret
    5bbc:	stp	x29, x30, [sp, #-32]!
    5bc0:	str	x19, [sp, #16]
    5bc4:	mov	x29, sp
    5bc8:	mov	x19, x1
    5bcc:	add	x1, x29, #0x18
    5bd0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    5bd4:	cbz	w0, 5be4 <bcmp@plt+0x724>
    5bd8:	ldr	x8, [x29, #24]
    5bdc:	mov	w0, #0x1                   	// #1
    5be0:	str	w8, [x19]
    5be4:	ldr	x19, [sp, #16]
    5be8:	ldp	x29, x30, [sp], #32
    5bec:	ret
    5bf0:	stp	x29, x30, [sp, #-48]!
    5bf4:	str	x21, [sp, #16]
    5bf8:	stp	x20, x19, [sp, #32]
    5bfc:	mov	x29, sp
    5c00:	movi	v0.2d, #0x0
    5c04:	mov	x8, x0
    5c08:	stp	q0, q0, [x0, #48]
    5c0c:	stp	q0, q0, [x0, #16]
    5c10:	strb	wzr, [x8, #104]!
    5c14:	mov	x21, x0
    5c18:	stp	xzr, x8, [x0, #80]
    5c1c:	str	xzr, [x0, #96]
    5c20:	strb	wzr, [x0, #120]
    5c24:	mov	w0, #0x10                  	// #16
    5c28:	mov	x19, x2
    5c2c:	mov	x20, x1
    5c30:	bl	5220 <_Znwm@plt>
    5c34:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    5c38:	add	x8, x8, #0x538
    5c3c:	stp	x8, x21, [x0]
    5c40:	str	x0, [x21, #128]
    5c44:	stp	x20, x19, [x21]
    5c48:	ldp	x20, x19, [sp, #32]
    5c4c:	ldr	x21, [sp, #16]
    5c50:	ldp	x29, x30, [sp], #48
    5c54:	ret
    5c58:	stp	x29, x30, [sp, #-48]!
    5c5c:	str	x21, [sp, #16]
    5c60:	stp	x20, x19, [sp, #32]
    5c64:	mov	x29, sp
    5c68:	mov	x19, x0
    5c6c:	ldr	x0, [x0, #16]
    5c70:	cbz	x0, 5c80 <bcmp@plt+0x7c0>
    5c74:	ldr	x8, [x0]
    5c78:	ldr	x8, [x8, #8]
    5c7c:	blr	x8
    5c80:	ldr	x0, [x19, #128]
    5c84:	cbz	x0, 5c94 <bcmp@plt+0x7d4>
    5c88:	ldr	x8, [x0]
    5c8c:	ldr	x8, [x8, #16]
    5c90:	blr	x8
    5c94:	ldr	x0, [x19, #88]
    5c98:	add	x8, x19, #0x68
    5c9c:	cmp	x0, x8
    5ca0:	b.eq	5ca8 <bcmp@plt+0x7e8>  // b.none
    5ca4:	bl	5210 <_ZdlPv@plt>
    5ca8:	ldp	x20, x21, [x19, #64]
    5cac:	cmp	x20, x21
    5cb0:	b.ne	5cd8 <bcmp@plt+0x818>  // b.any
    5cb4:	cbz	x20, 5cf4 <bcmp@plt+0x834>
    5cb8:	mov	x0, x20
    5cbc:	ldp	x20, x19, [sp, #32]
    5cc0:	ldr	x21, [sp, #16]
    5cc4:	ldp	x29, x30, [sp], #48
    5cc8:	b	5210 <_ZdlPv@plt>
    5ccc:	add	x20, x20, #0x10
    5cd0:	cmp	x20, x21
    5cd4:	b.eq	5cec <bcmp@plt+0x82c>  // b.none
    5cd8:	ldr	x0, [x20], #16
    5cdc:	cmp	x0, x20
    5ce0:	b.eq	5ccc <bcmp@plt+0x80c>  // b.none
    5ce4:	bl	5210 <_ZdlPv@plt>
    5ce8:	b	5ccc <bcmp@plt+0x80c>
    5cec:	ldr	x20, [x19, #64]
    5cf0:	cbnz	x20, 5cb8 <bcmp@plt+0x7f8>
    5cf4:	ldp	x20, x19, [sp, #32]
    5cf8:	ldr	x21, [sp, #16]
    5cfc:	ldp	x29, x30, [sp], #48
    5d00:	ret
    5d04:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    5d08:	add	x0, x0, #0xcc9
    5d0c:	b	50e0 <xstrdup@plt>
    5d10:	stp	x29, x30, [sp, #-80]!
    5d14:	stp	x28, x25, [sp, #16]
    5d18:	stp	x24, x23, [sp, #32]
    5d1c:	stp	x22, x21, [sp, #48]
    5d20:	stp	x20, x19, [sp, #64]
    5d24:	mov	x29, sp
    5d28:	sub	sp, sp, #0x1b0
    5d2c:	mov	x19, sp
    5d30:	ldr	x23, [x0, #16]
    5d34:	mov	x21, x0
    5d38:	add	x0, x19, #0x20
    5d3c:	mov	x20, x1
    5d40:	add	x22, x19, #0x20
    5d44:	bl	51a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    5d48:	add	x22, x22, #0x10
    5d4c:	adrp	x1, 16000 <xexit@@Base+0x4dc>
    5d50:	add	x1, x1, #0x8db
    5d54:	mov	w2, #0x1                   	// #1
    5d58:	mov	x0, x22
    5d5c:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5d60:	cbz	x23, 5d80 <bcmp@plt+0x8c0>
    5d64:	mov	x0, x23
    5d68:	bl	5060 <strlen@plt>
    5d6c:	mov	x2, x0
    5d70:	mov	x0, x22
    5d74:	mov	x1, x23
    5d78:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5d7c:	b	5d98 <bcmp@plt+0x8d8>
    5d80:	ldr	x8, [x19, #48]
    5d84:	ldur	x8, [x8, #-24]
    5d88:	add	x0, x22, x8
    5d8c:	ldr	w8, [x0, #32]
    5d90:	orr	w1, w8, #0x1
    5d94:	bl	5430 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    5d98:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5d9c:	add	x1, x1, #0xd93
    5da0:	mov	w2, #0x1                   	// #1
    5da4:	mov	x0, x22
    5da8:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5dac:	adrp	x23, 15000 <htab_find_with_hash@@Base+0xdc>
    5db0:	adrp	x24, 15000 <htab_find_with_hash@@Base+0xdc>
    5db4:	add	x23, x23, #0xce9
    5db8:	add	x24, x24, #0xbf2
    5dbc:	mov	w25, #0x5c                  	// #92
    5dc0:	ldrb	w8, [x23]
    5dc4:	cmp	w8, #0x7c
    5dc8:	b.hi	5df4 <bcmp@plt+0x934>  // b.pmore
    5dcc:	adr	x9, 5ddc <bcmp@plt+0x91c>
    5dd0:	ldrb	w10, [x24, x8]
    5dd4:	add	x9, x9, x10, lsl #2
    5dd8:	br	x9
    5ddc:	sturb	w25, [x29, #-4]
    5de0:	sub	x1, x29, #0x4
    5de4:	mov	w2, #0x1                   	// #1
    5de8:	mov	x0, x22
    5dec:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5df0:	ldrb	w8, [x23]
    5df4:	sturb	w8, [x29, #-4]
    5df8:	sub	x1, x29, #0x4
    5dfc:	mov	w2, #0x1                   	// #1
    5e00:	mov	x0, x22
    5e04:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5e08:	add	x23, x23, #0x1
    5e0c:	b	5dc0 <bcmp@plt+0x900>
    5e10:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5e14:	add	x1, x1, #0xd95
    5e18:	mov	w2, #0x1                   	// #1
    5e1c:	mov	x0, x22
    5e20:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    5e24:	add	x23, x19, #0x20
    5e28:	add	x0, x23, #0x18
    5e2c:	add	x8, x19, #0x0
    5e30:	bl	53b0 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>
    5e34:	adrp	x22, 2a000 <xexit@@Base+0x144dc>
    5e38:	ldr	x22, [x22, #3304]
    5e3c:	ldr	x8, [x22]
    5e40:	ldp	x9, x10, [x22, #64]
    5e44:	str	x8, [x19, #32]
    5e48:	ldur	x8, [x8, #-24]
    5e4c:	str	x9, [x23, x8]
    5e50:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    5e54:	ldr	x0, [x19, #128]
    5e58:	ldr	x8, [x8, #4048]
    5e5c:	add	x9, x23, #0x70
    5e60:	cmp	x0, x9
    5e64:	add	x8, x8, #0x10
    5e68:	stp	x10, x8, [x19, #48]
    5e6c:	b.eq	5e74 <bcmp@plt+0x9b4>  // b.none
    5e70:	bl	5210 <_ZdlPv@plt>
    5e74:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    5e78:	ldr	x8, [x8, #3440]
    5e7c:	add	x23, x19, #0x20
    5e80:	add	x0, x23, #0x50
    5e84:	add	x8, x8, #0x10
    5e88:	str	x8, [x19, #56]
    5e8c:	bl	5310 <_ZNSt6localeD1Ev@plt>
    5e90:	ldp	x8, x9, [x22, #16]
    5e94:	add	x0, x23, #0x80
    5e98:	str	x8, [x19, #32]
    5e9c:	ldur	x8, [x8, #-24]
    5ea0:	str	x9, [x23, x8]
    5ea4:	str	xzr, [x19, #40]
    5ea8:	bl	50a0 <_ZNSt8ios_baseD2Ev@plt>
    5eac:	ldr	x8, [x21, #8]
    5eb0:	ldrb	w8, [x8, #120]
    5eb4:	cbnz	w8, 5fc8 <bcmp@plt+0xb08>
    5eb8:	ldr	x1, [x19]
    5ebc:	add	x0, x19, #0x20
    5ec0:	mov	w2, #0x9                   	// #9
    5ec4:	bl	4fd0 <xregcomp@plt>
    5ec8:	mov	w22, w0
    5ecc:	cbz	w0, 5f3c <bcmp@plt+0xa7c>
    5ed0:	add	x1, x19, #0x20
    5ed4:	mov	w0, w22
    5ed8:	mov	x2, xzr
    5edc:	mov	x3, xzr
    5ee0:	bl	5440 <xregerror@plt>
    5ee4:	add	x9, x0, #0xf
    5ee8:	mov	x8, sp
    5eec:	and	x9, x9, #0xfffffffffffffff0
    5ef0:	mov	x21, sp
    5ef4:	sub	x20, x8, x9
    5ef8:	mov	x3, x0
    5efc:	mov	sp, x20
    5f00:	add	x1, x19, #0x20
    5f04:	mov	w0, w22
    5f08:	mov	x2, x20
    5f0c:	bl	5440 <xregerror@plt>
    5f10:	ldr	x1, [x19]
    5f14:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    5f18:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    5f1c:	add	x0, x0, #0xd17
    5f20:	add	x2, x2, #0xd32
    5f24:	mov	x3, x20
    5f28:	mov	x4, xzr
    5f2c:	bl	51e0 <concat@plt>
    5f30:	mov	x20, x0
    5f34:	mov	sp, x21
    5f38:	b	5f90 <bcmp@plt+0xad0>
    5f3c:	add	x0, x19, #0x20
    5f40:	mov	x1, x20
    5f44:	bl	55a4 <bcmp@plt+0xe4>
    5f48:	tbz	w0, #0, 5f68 <bcmp@plt+0xaa8>
    5f4c:	add	x0, x19, #0x20
    5f50:	bl	5080 <xregfree@plt>
    5f54:	ldr	x8, [x21, #8]
    5f58:	ldrb	w8, [x8, #120]
    5f5c:	cbnz	w8, 5fe8 <bcmp@plt+0xb28>
    5f60:	mov	x20, xzr
    5f64:	b	5f90 <bcmp@plt+0xad0>
    5f68:	add	x0, x19, #0x20
    5f6c:	bl	5080 <xregfree@plt>
    5f70:	ldr	x1, [x19]
    5f74:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    5f78:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    5f7c:	add	x0, x0, #0xd36
    5f80:	add	x2, x2, #0xd59
    5f84:	mov	x3, xzr
    5f88:	bl	51e0 <concat@plt>
    5f8c:	mov	x20, x0
    5f90:	ldr	x0, [x19]
    5f94:	add	x8, x19, #0x0
    5f98:	add	x8, x8, #0x10
    5f9c:	cmp	x0, x8
    5fa0:	b.eq	5fa8 <bcmp@plt+0xae8>  // b.none
    5fa4:	bl	5210 <_ZdlPv@plt>
    5fa8:	mov	x0, x20
    5fac:	mov	sp, x29
    5fb0:	ldp	x20, x19, [sp, #64]
    5fb4:	ldp	x22, x21, [sp, #48]
    5fb8:	ldp	x24, x23, [sp, #32]
    5fbc:	ldp	x28, x25, [sp, #16]
    5fc0:	ldp	x29, x30, [sp], #80
    5fc4:	ret
    5fc8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    5fcc:	ldr	x8, [x8, #3968]
    5fd0:	ldr	x2, [x19]
    5fd4:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5fd8:	add	x1, x1, #0xced
    5fdc:	ldr	x0, [x8]
    5fe0:	bl	5070 <fprintf@plt>
    5fe4:	b	5eb8 <bcmp@plt+0x9f8>
    5fe8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    5fec:	ldr	x8, [x8, #3968]
    5ff0:	ldr	x2, [x20]
    5ff4:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    5ff8:	add	x1, x1, #0xd5b
    5ffc:	ldr	x0, [x8]
    6000:	bl	5070 <fprintf@plt>
    6004:	b	5f60 <bcmp@plt+0xaa0>
    6008:	b	600c <bcmp@plt+0xb4c>
    600c:	mov	x20, x0
    6010:	ldr	x0, [x19]
    6014:	add	x8, x19, #0x0
    6018:	add	x8, x8, #0x10
    601c:	cmp	x0, x8
    6020:	b.eq	6028 <bcmp@plt+0xb68>  // b.none
    6024:	bl	5210 <_ZdlPv@plt>
    6028:	mov	x0, x20
    602c:	bl	5470 <_Unwind_Resume@plt>
    6030:	b	6034 <bcmp@plt+0xb74>
    6034:	adrp	x21, 2a000 <xexit@@Base+0x144dc>
    6038:	ldr	x21, [x21, #3304]
    603c:	add	x22, x19, #0x20
    6040:	mov	x20, x0
    6044:	ldr	x8, [x21]
    6048:	ldp	x9, x10, [x21, #64]
    604c:	str	x8, [x19, #32]
    6050:	ldur	x8, [x8, #-24]
    6054:	str	x9, [x22, x8]
    6058:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    605c:	ldr	x0, [x19, #128]
    6060:	ldr	x8, [x8, #4048]
    6064:	add	x9, x22, #0x70
    6068:	cmp	x0, x9
    606c:	add	x8, x8, #0x10
    6070:	stp	x10, x8, [x19, #48]
    6074:	b.eq	607c <bcmp@plt+0xbbc>  // b.none
    6078:	bl	5210 <_ZdlPv@plt>
    607c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    6080:	ldr	x8, [x8, #3440]
    6084:	add	x0, x22, #0x50
    6088:	add	x8, x8, #0x10
    608c:	str	x8, [x19, #56]
    6090:	bl	5310 <_ZNSt6localeD1Ev@plt>
    6094:	ldp	x8, x9, [x21, #16]
    6098:	add	x0, x22, #0x80
    609c:	str	x8, [x19, #32]
    60a0:	ldur	x8, [x8, #-24]
    60a4:	str	x9, [x22, x8]
    60a8:	str	xzr, [x19, #40]
    60ac:	bl	50a0 <_ZNSt8ios_baseD2Ev@plt>
    60b0:	mov	x0, x20
    60b4:	bl	5470 <_Unwind_Resume@plt>
    60b8:	stp	x29, x30, [sp, #-32]!
    60bc:	stp	x20, x19, [sp, #16]
    60c0:	mov	x29, sp
    60c4:	ldr	x8, [x0, #8]
    60c8:	mov	x19, x0
    60cc:	mov	x20, x1
    60d0:	ldrb	w8, [x8, #120]
    60d4:	cbnz	w8, 60f4 <bcmp@plt+0xc34>
    60d8:	add	x1, x19, #0x10
    60dc:	mov	x0, x20
    60e0:	bl	5110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    60e4:	ldp	x20, x19, [sp, #16]
    60e8:	mov	x0, xzr
    60ec:	ldp	x29, x30, [sp], #32
    60f0:	ret
    60f4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    60f8:	ldr	x8, [x8, #3968]
    60fc:	ldr	x2, [x19, #16]
    6100:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    6104:	add	x1, x1, #0xd6e
    6108:	ldr	x0, [x8]
    610c:	bl	5070 <fprintf@plt>
    6110:	b	60d8 <bcmp@plt+0xc18>

0000000000006114 <gcc_c_fe_context@@Base>:
    6114:	stp	x29, x30, [sp, #-32]!
    6118:	stp	x20, x19, [sp, #16]
    611c:	mov	x29, sp
    6120:	orr	w8, w1, w0
    6124:	cmp	w8, #0x1
    6128:	b.ls	6134 <gcc_c_fe_context@@Base+0x20>  // b.plast
    612c:	mov	x19, xzr
    6130:	b	618c <gcc_c_fe_context@@Base+0x78>
    6134:	mov	w0, #0x88                  	// #136
    6138:	bl	5220 <_Znwm@plt>
    613c:	movi	v0.2d, #0x0
    6140:	mov	x8, x0
    6144:	mov	x19, x0
    6148:	stp	q0, q0, [x0, #16]
    614c:	stp	q0, q0, [x0, #48]
    6150:	strb	wzr, [x8, #104]!
    6154:	stp	xzr, x8, [x0, #80]
    6158:	str	xzr, [x0, #96]
    615c:	strb	wzr, [x0, #120]
    6160:	mov	w0, #0x10                  	// #16
    6164:	bl	5220 <_Znwm@plt>
    6168:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    616c:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    6170:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    6174:	add	x8, x8, #0x538
    6178:	add	x9, x9, #0x3f0
    617c:	add	x10, x10, #0x448
    6180:	str	x0, [x19, #128]
    6184:	stp	x8, x19, [x0]
    6188:	stp	x9, x10, [x19]
    618c:	mov	x0, x19
    6190:	ldp	x20, x19, [sp, #16]
    6194:	ldp	x29, x30, [sp], #32
    6198:	ret
    619c:	mov	x20, x0
    61a0:	mov	x0, x19
    61a4:	bl	5210 <_ZdlPv@plt>
    61a8:	mov	x0, x20
    61ac:	bl	5470 <_Unwind_Resume@plt>
    61b0:	stp	x29, x30, [sp, #-48]!
    61b4:	str	x21, [sp, #16]
    61b8:	stp	x20, x19, [sp, #32]
    61bc:	mov	x29, sp
    61c0:	mov	x19, x3
    61c4:	mov	w20, w2
    61c8:	mov	x21, x0
    61cc:	bl	6c78 <gcc_c_fe_context@@Base+0xb64>
    61d0:	mov	x0, x21
    61d4:	mov	w1, w20
    61d8:	mov	x2, x19
    61dc:	ldp	x20, x19, [sp, #32]
    61e0:	ldr	x21, [sp, #16]
    61e4:	ldp	x29, x30, [sp], #48
    61e8:	b	6a84 <gcc_c_fe_context@@Base+0x970>
    61ec:	stp	x29, x30, [sp, #-48]!
    61f0:	str	x21, [sp, #16]
    61f4:	stp	x20, x19, [sp, #32]
    61f8:	mov	x29, sp
    61fc:	ldr	x20, [x0, #96]
    6200:	add	x21, x0, #0x58
    6204:	mov	x0, x1
    6208:	mov	x19, x1
    620c:	bl	5060 <strlen@plt>
    6210:	mov	x4, x0
    6214:	mov	x0, x21
    6218:	mov	x2, x20
    621c:	mov	x3, x19
    6220:	ldp	x20, x19, [sp, #32]
    6224:	ldr	x21, [sp, #16]
    6228:	mov	x1, xzr
    622c:	ldp	x29, x30, [sp], #48
    6230:	b	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    6234:	stp	x1, x2, [x0, #48]
    6238:	ret
    623c:	cmp	w2, #0x0
    6240:	cset	w8, ne  // ne = any
    6244:	strb	w8, [x0, #120]
    6248:	b	6308 <gcc_c_fe_context@@Base+0x1f4>
    624c:	cbz	x0, 62d0 <gcc_c_fe_context@@Base+0x1bc>
    6250:	stp	x29, x30, [sp, #-48]!
    6254:	str	x21, [sp, #16]
    6258:	stp	x20, x19, [sp, #32]
    625c:	mov	x29, sp
    6260:	mov	x19, x0
    6264:	ldr	x0, [x0, #16]
    6268:	cbz	x0, 6278 <gcc_c_fe_context@@Base+0x164>
    626c:	ldr	x8, [x0]
    6270:	ldr	x8, [x8, #8]
    6274:	blr	x8
    6278:	ldr	x0, [x19, #128]
    627c:	cbz	x0, 628c <gcc_c_fe_context@@Base+0x178>
    6280:	ldr	x8, [x0]
    6284:	ldr	x8, [x8, #16]
    6288:	blr	x8
    628c:	ldr	x0, [x19, #88]
    6290:	add	x8, x19, #0x68
    6294:	cmp	x0, x8
    6298:	b.eq	62a0 <gcc_c_fe_context@@Base+0x18c>  // b.none
    629c:	bl	5210 <_ZdlPv@plt>
    62a0:	ldp	x20, x21, [x19, #64]
    62a4:	cmp	x20, x21
    62a8:	b.ne	62bc <gcc_c_fe_context@@Base+0x1a8>  // b.any
    62ac:	b	62d8 <gcc_c_fe_context@@Base+0x1c4>
    62b0:	add	x20, x20, #0x10
    62b4:	cmp	x20, x21
    62b8:	b.eq	62d4 <gcc_c_fe_context@@Base+0x1c0>  // b.none
    62bc:	ldr	x0, [x20], #16
    62c0:	cmp	x0, x20
    62c4:	b.eq	62b0 <gcc_c_fe_context@@Base+0x19c>  // b.none
    62c8:	bl	5210 <_ZdlPv@plt>
    62cc:	b	62b0 <gcc_c_fe_context@@Base+0x19c>
    62d0:	ret
    62d4:	ldr	x20, [x19, #64]
    62d8:	cbz	x20, 62e4 <gcc_c_fe_context@@Base+0x1d0>
    62dc:	mov	x0, x20
    62e0:	bl	5210 <_ZdlPv@plt>
    62e4:	mov	x0, x19
    62e8:	ldp	x20, x19, [sp, #32]
    62ec:	ldr	x21, [sp, #16]
    62f0:	ldp	x29, x30, [sp], #48
    62f4:	b	5210 <_ZdlPv@plt>
    62f8:	cmp	w1, #0x0
    62fc:	cset	w8, ne  // ne = any
    6300:	strb	w8, [x0, #120]
    6304:	ret
    6308:	sub	sp, sp, #0xe0
    630c:	stp	x29, x30, [sp, #160]
    6310:	str	x23, [sp, #176]
    6314:	stp	x22, x21, [sp, #192]
    6318:	stp	x20, x19, [sp, #208]
    631c:	add	x29, sp, #0xa0
    6320:	mov	x21, x1
    6324:	mov	x19, x0
    6328:	sub	x3, x29, #0x8
    632c:	mov	w0, #0x1                   	// #1
    6330:	mov	w1, #0x1                   	// #1
    6334:	mov	w2, wzr
    6338:	bl	5000 <socketpair@plt>
    633c:	cbz	w0, 6354 <gcc_c_fe_context@@Base+0x240>
    6340:	ldp	x8, x0, [x19, #48]
    6344:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    6348:	add	x1, x1, #0xd97
    634c:	blr	x8
    6350:	b	6380 <gcc_c_fe_context@@Base+0x26c>
    6354:	sub	x0, x29, #0x10
    6358:	bl	5020 <pipe@plt>
    635c:	cbz	w0, 639c <gcc_c_fe_context@@Base+0x288>
    6360:	ldp	x8, x0, [x19, #48]
    6364:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    6368:	add	x1, x1, #0xdb4
    636c:	blr	x8
    6370:	ldur	w0, [x29, #-8]
    6374:	bl	5320 <close@plt>
    6378:	ldur	w0, [x29, #-4]
    637c:	bl	5320 <close@plt>
    6380:	mov	w0, wzr
    6384:	ldp	x20, x19, [sp, #208]
    6388:	ldp	x22, x21, [sp, #192]
    638c:	ldr	x23, [sp, #176]
    6390:	ldp	x29, x30, [sp, #160]
    6394:	add	sp, sp, #0xe0
    6398:	ret
    639c:	add	x8, sp, #0x28
    63a0:	mov	w9, #0x15                  	// #21
    63a4:	add	x22, x8, #0x10
    63a8:	str	x22, [sp, #40]
    63ac:	str	x9, [sp, #8]
    63b0:	add	x0, sp, #0x28
    63b4:	add	x1, sp, #0x8
    63b8:	mov	x2, xzr
    63bc:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    63c0:	adrp	x9, 15000 <htab_find_with_hash@@Base+0xdc>
    63c4:	add	x9, x9, #0xdcb
    63c8:	ldr	x8, [sp, #8]
    63cc:	ldur	x10, [x9, #13]
    63d0:	ldr	q0, [x9]
    63d4:	str	x0, [sp, #40]
    63d8:	str	x8, [sp, #56]
    63dc:	stur	x10, [x0, #13]
    63e0:	str	q0, [x0]
    63e4:	ldr	x9, [sp, #40]
    63e8:	str	x8, [sp, #48]
    63ec:	add	x20, x19, #0x40
    63f0:	strb	wzr, [x9, x8]
    63f4:	ldp	x1, x8, [x19, #72]
    63f8:	cmp	x1, x8
    63fc:	b.eq	6424 <gcc_c_fe_context@@Base+0x310>  // b.none
    6400:	add	x8, x1, #0x10
    6404:	str	x8, [x1]
    6408:	ldr	x9, [sp, #40]
    640c:	cmp	x9, x22
    6410:	b.eq	6444 <gcc_c_fe_context@@Base+0x330>  // b.none
    6414:	str	x9, [x1]
    6418:	ldr	x8, [sp, #56]
    641c:	str	x8, [x1, #16]
    6420:	b	644c <gcc_c_fe_context@@Base+0x338>
    6424:	add	x2, sp, #0x28
    6428:	mov	x0, x20
    642c:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6430:	ldr	x0, [sp, #40]
    6434:	cmp	x0, x22
    6438:	b.eq	6468 <gcc_c_fe_context@@Base+0x354>  // b.none
    643c:	bl	5210 <_ZdlPv@plt>
    6440:	b	6468 <gcc_c_fe_context@@Base+0x354>
    6444:	ldr	q0, [x22]
    6448:	str	q0, [x8]
    644c:	ldr	x8, [sp, #48]
    6450:	str	x8, [x1, #8]
    6454:	stp	x22, xzr, [sp, #40]
    6458:	strb	wzr, [sp, #56]
    645c:	ldr	x8, [x19, #72]
    6460:	add	x8, x8, #0x20
    6464:	str	x8, [x19, #72]
    6468:	ldur	w3, [x29, #-4]
    646c:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    6470:	add	x2, x2, #0xde1
    6474:	add	x0, sp, #0x28
    6478:	mov	w1, #0x64                  	// #100
    647c:	bl	5270 <snprintf@plt>
    6480:	cmp	w0, #0x64
    6484:	b.ge	69cc <gcc_c_fe_context@@Base+0x8b8>  // b.tcont
    6488:	add	x8, sp, #0x8
    648c:	add	x23, x8, #0x10
    6490:	add	x0, sp, #0x28
    6494:	str	x23, [sp, #8]
    6498:	bl	5060 <strlen@plt>
    649c:	mov	x22, x0
    64a0:	cmp	x0, #0x10
    64a4:	str	x0, [x29, #24]
    64a8:	mov	x0, x23
    64ac:	b.cc	64cc <gcc_c_fe_context@@Base+0x3b8>  // b.lo, b.ul, b.last
    64b0:	add	x0, sp, #0x8
    64b4:	add	x1, x29, #0x18
    64b8:	mov	x2, xzr
    64bc:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    64c0:	ldr	x8, [x29, #24]
    64c4:	str	x0, [sp, #8]
    64c8:	str	x8, [sp, #24]
    64cc:	cbz	x22, 64f0 <gcc_c_fe_context@@Base+0x3dc>
    64d0:	cmp	x22, #0x1
    64d4:	b.ne	64e4 <gcc_c_fe_context@@Base+0x3d0>  // b.any
    64d8:	ldrb	w8, [sp, #40]
    64dc:	strb	w8, [x0]
    64e0:	b	64f0 <gcc_c_fe_context@@Base+0x3dc>
    64e4:	add	x1, sp, #0x28
    64e8:	mov	x2, x22
    64ec:	bl	4fb0 <memcpy@plt>
    64f0:	ldr	x8, [x29, #24]
    64f4:	ldr	x9, [sp, #8]
    64f8:	str	x8, [sp, #16]
    64fc:	strb	wzr, [x9, x8]
    6500:	ldp	x1, x8, [x19, #72]
    6504:	cmp	x1, x8
    6508:	b.eq	6530 <gcc_c_fe_context@@Base+0x41c>  // b.none
    650c:	add	x8, x1, #0x10
    6510:	str	x8, [x1]
    6514:	ldr	x9, [sp, #8]
    6518:	cmp	x9, x23
    651c:	b.eq	6550 <gcc_c_fe_context@@Base+0x43c>  // b.none
    6520:	str	x9, [x1]
    6524:	ldr	x8, [sp, #24]
    6528:	str	x8, [x1, #16]
    652c:	b	6558 <gcc_c_fe_context@@Base+0x444>
    6530:	add	x2, sp, #0x8
    6534:	mov	x0, x20
    6538:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    653c:	ldr	x0, [sp, #8]
    6540:	cmp	x0, x23
    6544:	b.eq	6574 <gcc_c_fe_context@@Base+0x460>  // b.none
    6548:	bl	5210 <_ZdlPv@plt>
    654c:	b	6574 <gcc_c_fe_context@@Base+0x460>
    6550:	ldr	q0, [x23]
    6554:	str	q0, [x8]
    6558:	ldr	x8, [sp, #16]
    655c:	str	x8, [x1, #8]
    6560:	stp	x23, xzr, [sp, #8]
    6564:	strb	wzr, [sp, #24]
    6568:	ldr	x8, [x19, #72]
    656c:	add	x8, x8, #0x20
    6570:	str	x8, [x19, #72]
    6574:	add	x1, x19, #0x58
    6578:	mov	x0, x20
    657c:	bl	50f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    6580:	add	x8, sp, #0x8
    6584:	mov	w9, #0x632d                	// #25389
    6588:	mov	w10, #0x2                   	// #2
    658c:	add	x22, x8, #0x10
    6590:	strb	wzr, [sp, #26]
    6594:	strh	w9, [sp, #24]
    6598:	stp	x22, x10, [sp, #8]
    659c:	ldp	x1, x8, [x19, #72]
    65a0:	cmp	x1, x8
    65a4:	b.eq	65cc <gcc_c_fe_context@@Base+0x4b8>  // b.none
    65a8:	add	x8, x1, #0x10
    65ac:	str	x8, [x1]
    65b0:	ldr	x9, [sp, #8]
    65b4:	cmp	x9, x22
    65b8:	b.eq	65ec <gcc_c_fe_context@@Base+0x4d8>  // b.none
    65bc:	str	x9, [x1]
    65c0:	ldr	x8, [sp, #24]
    65c4:	str	x8, [x1, #16]
    65c8:	b	65f4 <gcc_c_fe_context@@Base+0x4e0>
    65cc:	add	x2, sp, #0x8
    65d0:	mov	x0, x20
    65d4:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    65d8:	ldr	x0, [sp, #8]
    65dc:	cmp	x0, x22
    65e0:	b.eq	6610 <gcc_c_fe_context@@Base+0x4fc>  // b.none
    65e4:	bl	5210 <_ZdlPv@plt>
    65e8:	b	6610 <gcc_c_fe_context@@Base+0x4fc>
    65ec:	ldr	q0, [x22]
    65f0:	str	q0, [x8]
    65f4:	mov	w8, #0x2                   	// #2
    65f8:	str	x8, [x1, #8]
    65fc:	stp	x22, xzr, [sp, #8]
    6600:	strb	wzr, [sp, #24]
    6604:	ldr	x8, [x19, #72]
    6608:	add	x8, x8, #0x20
    660c:	str	x8, [x19, #72]
    6610:	add	x8, sp, #0x8
    6614:	mov	w9, #0x6f2d                	// #28461
    6618:	mov	w10, #0x2                   	// #2
    661c:	add	x22, x8, #0x10
    6620:	strb	wzr, [sp, #26]
    6624:	strh	w9, [sp, #24]
    6628:	stp	x22, x10, [sp, #8]
    662c:	ldp	x1, x8, [x19, #72]
    6630:	cmp	x1, x8
    6634:	b.eq	665c <gcc_c_fe_context@@Base+0x548>  // b.none
    6638:	add	x8, x1, #0x10
    663c:	str	x8, [x1]
    6640:	ldr	x9, [sp, #8]
    6644:	cmp	x9, x22
    6648:	b.eq	667c <gcc_c_fe_context@@Base+0x568>  // b.none
    664c:	str	x9, [x1]
    6650:	ldr	x8, [sp, #24]
    6654:	str	x8, [x1, #16]
    6658:	b	6684 <gcc_c_fe_context@@Base+0x570>
    665c:	add	x2, sp, #0x8
    6660:	mov	x0, x20
    6664:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6668:	ldr	x0, [sp, #8]
    666c:	cmp	x0, x22
    6670:	b.eq	66a0 <gcc_c_fe_context@@Base+0x58c>  // b.none
    6674:	bl	5210 <_ZdlPv@plt>
    6678:	b	66a0 <gcc_c_fe_context@@Base+0x58c>
    667c:	ldr	q0, [x22]
    6680:	str	q0, [x8]
    6684:	mov	w8, #0x2                   	// #2
    6688:	str	x8, [x1, #8]
    668c:	stp	x22, xzr, [sp, #8]
    6690:	strb	wzr, [sp, #24]
    6694:	ldr	x8, [x19, #72]
    6698:	add	x8, x8, #0x20
    669c:	str	x8, [x19, #72]
    66a0:	add	x8, sp, #0x8
    66a4:	add	x23, x8, #0x10
    66a8:	str	x23, [sp, #8]
    66ac:	cbz	x21, 69d0 <gcc_c_fe_context@@Base+0x8bc>
    66b0:	mov	x0, x21
    66b4:	bl	5060 <strlen@plt>
    66b8:	mov	x22, x0
    66bc:	cmp	x0, #0xf
    66c0:	str	x0, [x29, #24]
    66c4:	mov	x0, x23
    66c8:	b.ls	66e8 <gcc_c_fe_context@@Base+0x5d4>  // b.plast
    66cc:	add	x0, sp, #0x8
    66d0:	add	x1, x29, #0x18
    66d4:	mov	x2, xzr
    66d8:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    66dc:	ldr	x8, [x29, #24]
    66e0:	str	x0, [sp, #8]
    66e4:	str	x8, [sp, #24]
    66e8:	cbz	x22, 670c <gcc_c_fe_context@@Base+0x5f8>
    66ec:	cmp	x22, #0x1
    66f0:	b.ne	6700 <gcc_c_fe_context@@Base+0x5ec>  // b.any
    66f4:	ldrb	w8, [x21]
    66f8:	strb	w8, [x0]
    66fc:	b	670c <gcc_c_fe_context@@Base+0x5f8>
    6700:	mov	x1, x21
    6704:	mov	x2, x22
    6708:	bl	4fb0 <memcpy@plt>
    670c:	ldr	x8, [x29, #24]
    6710:	ldr	x9, [sp, #8]
    6714:	str	x8, [sp, #16]
    6718:	strb	wzr, [x9, x8]
    671c:	ldp	x1, x8, [x19, #72]
    6720:	cmp	x1, x8
    6724:	b.eq	674c <gcc_c_fe_context@@Base+0x638>  // b.none
    6728:	add	x8, x1, #0x10
    672c:	str	x8, [x1]
    6730:	ldr	x9, [sp, #8]
    6734:	cmp	x9, x23
    6738:	b.eq	676c <gcc_c_fe_context@@Base+0x658>  // b.none
    673c:	str	x9, [x1]
    6740:	ldr	x8, [sp, #24]
    6744:	str	x8, [x1, #16]
    6748:	b	6774 <gcc_c_fe_context@@Base+0x660>
    674c:	add	x2, sp, #0x8
    6750:	mov	x0, x20
    6754:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6758:	ldr	x0, [sp, #8]
    675c:	cmp	x0, x23
    6760:	b.eq	6790 <gcc_c_fe_context@@Base+0x67c>  // b.none
    6764:	bl	5210 <_ZdlPv@plt>
    6768:	b	6790 <gcc_c_fe_context@@Base+0x67c>
    676c:	ldr	q0, [x23]
    6770:	str	q0, [x8]
    6774:	ldr	x8, [sp, #16]
    6778:	str	x8, [x1, #8]
    677c:	stp	x23, xzr, [sp, #8]
    6780:	strb	wzr, [sp, #24]
    6784:	ldr	x8, [x19, #72]
    6788:	add	x8, x8, #0x20
    678c:	str	x8, [x19, #72]
    6790:	ldrb	w8, [x19, #120]
    6794:	cbz	w8, 6828 <gcc_c_fe_context@@Base+0x714>
    6798:	add	x8, sp, #0x8
    679c:	mov	w9, #0x762d                	// #30253
    67a0:	mov	w10, #0x2                   	// #2
    67a4:	add	x21, x8, #0x10
    67a8:	strb	wzr, [sp, #26]
    67ac:	strh	w9, [sp, #24]
    67b0:	stp	x21, x10, [sp, #8]
    67b4:	ldp	x1, x8, [x19, #72]
    67b8:	cmp	x1, x8
    67bc:	b.eq	67e4 <gcc_c_fe_context@@Base+0x6d0>  // b.none
    67c0:	add	x8, x1, #0x10
    67c4:	str	x8, [x1]
    67c8:	ldr	x9, [sp, #8]
    67cc:	cmp	x9, x21
    67d0:	b.eq	6804 <gcc_c_fe_context@@Base+0x6f0>  // b.none
    67d4:	str	x9, [x1]
    67d8:	ldr	x8, [sp, #24]
    67dc:	str	x8, [x1, #16]
    67e0:	b	680c <gcc_c_fe_context@@Base+0x6f8>
    67e4:	add	x2, sp, #0x8
    67e8:	mov	x0, x20
    67ec:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    67f0:	ldr	x0, [sp, #8]
    67f4:	cmp	x0, x21
    67f8:	b.eq	6828 <gcc_c_fe_context@@Base+0x714>  // b.none
    67fc:	bl	5210 <_ZdlPv@plt>
    6800:	b	6828 <gcc_c_fe_context@@Base+0x714>
    6804:	ldr	q0, [x21]
    6808:	str	q0, [x8]
    680c:	mov	w8, #0x2                   	// #2
    6810:	str	x8, [x1, #8]
    6814:	stp	x21, xzr, [sp, #8]
    6818:	strb	wzr, [sp, #24]
    681c:	ldr	x8, [x19, #72]
    6820:	add	x8, x8, #0x20
    6824:	str	x8, [x19, #72]
    6828:	mov	w0, #0x20                  	// #32
    682c:	bl	5220 <_Znwm@plt>
    6830:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    6834:	ldur	w8, [x29, #-8]
    6838:	ldur	w9, [x29, #-16]
    683c:	ldr	x10, [x10, #3352]
    6840:	mov	x20, x0
    6844:	add	x21, x0, #0x10
    6848:	stp	w8, w9, [x0, #8]
    684c:	add	x10, x10, #0x10
    6850:	str	x10, [x0]
    6854:	mov	x0, x21
    6858:	bl	dd9c <gcc_cp_fe_context@@Base+0x44d8>
    685c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    6860:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    6864:	adrp	x2, 7000 <gcc_c_fe_context@@Base+0xeec>
    6868:	add	x8, x8, #0x5f0
    686c:	add	x1, x1, #0xe01
    6870:	add	x2, x2, #0x10
    6874:	mov	x0, x21
    6878:	str	x19, [x20, #24]
    687c:	str	x8, [x20]
    6880:	str	x20, [x19, #16]
    6884:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    6888:	ldr	x8, [x19, #16]
    688c:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    6890:	adrp	x2, 7000 <gcc_c_fe_context@@Base+0xeec>
    6894:	add	x1, x1, #0xe10
    6898:	add	x0, x8, #0x10
    689c:	add	x2, x2, #0xdc
    68a0:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    68a4:	ldp	x22, x8, [x19, #64]
    68a8:	adrp	x1, 2a000 <xexit@@Base+0x144dc>
    68ac:	ldr	x1, [x1, #3264]
    68b0:	sub	x23, x8, x22
    68b4:	asr	x21, x23, #5
    68b8:	add	x8, x21, #0x1
    68bc:	lsl	x9, x8, #3
    68c0:	cmp	xzr, x8, lsr #61
    68c4:	csinv	x0, x9, xzr, eq  // eq = none
    68c8:	bl	53f0 <_ZnamRKSt9nothrow_t@plt>
    68cc:	cbz	x0, 6384 <gcc_c_fe_context@@Base+0x270>
    68d0:	mov	x20, x0
    68d4:	cbz	x23, 68fc <gcc_c_fe_context@@Base+0x7e8>
    68d8:	mov	x8, xzr
    68dc:	mov	w9, #0x1                   	// #1
    68e0:	lsl	x10, x8, #5
    68e4:	ldr	x10, [x22, x10]
    68e8:	str	x10, [x20, x8, lsl #3]
    68ec:	mov	w8, w9
    68f0:	cmp	x21, x8
    68f4:	add	w9, w9, #0x1
    68f8:	b.hi	68e0 <gcc_c_fe_context@@Base+0x7cc>  // b.pmore
    68fc:	str	xzr, [x20, x21, lsl #3]
    6900:	bl	5300 <fork@plt>
    6904:	cmn	w0, #0x1
    6908:	b.eq	6958 <gcc_c_fe_context@@Base+0x844>  // b.none
    690c:	mov	w21, w0
    6910:	cbz	w0, 69dc <gcc_c_fe_context@@Base+0x8c8>
    6914:	ldur	w0, [x29, #-4]
    6918:	bl	5320 <close@plt>
    691c:	ldur	w0, [x29, #-12]
    6920:	bl	5320 <close@plt>
    6924:	ldr	x0, [x19, #16]
    6928:	mov	w1, #0x48                  	// #72
    692c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    6930:	cbz	w0, 6978 <gcc_c_fe_context@@Base+0x864>
    6934:	ldr	x0, [x19, #16]
    6938:	mov	w1, #0x1                   	// #1
    693c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    6940:	cbz	w0, 6978 <gcc_c_fe_context@@Base+0x864>
    6944:	ldr	x0, [x19, #16]
    6948:	mov	w1, wzr
    694c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    6950:	mov	w19, w0
    6954:	b	697c <gcc_c_fe_context@@Base+0x868>
    6958:	ldur	w0, [x29, #-8]
    695c:	bl	5320 <close@plt>
    6960:	ldur	w0, [x29, #-4]
    6964:	bl	5320 <close@plt>
    6968:	ldur	w0, [x29, #-16]
    696c:	bl	5320 <close@plt>
    6970:	ldur	w0, [x29, #-12]
    6974:	b	637c <gcc_c_fe_context@@Base+0x268>
    6978:	mov	w19, wzr
    697c:	ldur	w0, [x29, #-8]
    6980:	bl	5320 <close@plt>
    6984:	ldur	w0, [x29, #-16]
    6988:	bl	5320 <close@plt>
    698c:	add	x1, sp, #0x8
    6990:	mov	w0, w21
    6994:	mov	w2, wzr
    6998:	bl	50b0 <waitpid@plt>
    699c:	cmn	w0, #0x1
    69a0:	b.ne	69b4 <gcc_c_fe_context@@Base+0x8a0>  // b.any
    69a4:	bl	52c0 <__errno_location@plt>
    69a8:	ldr	w8, [x0]
    69ac:	cmp	w8, #0x4
    69b0:	b.ne	6380 <gcc_c_fe_context@@Base+0x26c>  // b.any
    69b4:	ldrh	w8, [sp, #8]
    69b8:	tst	w8, #0xffffff7f
    69bc:	b.ne	6380 <gcc_c_fe_context@@Base+0x26c>  // b.any
    69c0:	cmp	w19, #0x0
    69c4:	cset	w0, ne  // ne = any
    69c8:	b	6384 <gcc_c_fe_context@@Base+0x270>
    69cc:	bl	53c0 <abort@plt>
    69d0:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    69d4:	add	x0, x0, #0xb65
    69d8:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    69dc:	ldur	w0, [x29, #-12]
    69e0:	mov	w1, #0x1                   	// #1
    69e4:	bl	5030 <dup2@plt>
    69e8:	ldur	w0, [x29, #-12]
    69ec:	mov	w1, #0x2                   	// #2
    69f0:	bl	5030 <dup2@plt>
    69f4:	ldur	w0, [x29, #-16]
    69f8:	bl	5320 <close@plt>
    69fc:	ldur	w0, [x29, #-12]
    6a00:	bl	5320 <close@plt>
    6a04:	ldur	w0, [x29, #-8]
    6a08:	bl	5320 <close@plt>
    6a0c:	ldr	x0, [x20]
    6a10:	mov	x1, x20
    6a14:	bl	4fe0 <execvp@plt>
    6a18:	mov	w0, #0x7f                  	// #127
    6a1c:	bl	5170 <_exit@plt>
    6a20:	ldr	x8, [sp, #8]
    6a24:	cmp	x8, x21
    6a28:	b	6a54 <gcc_c_fe_context@@Base+0x940>
    6a2c:	b	6a40 <gcc_c_fe_context@@Base+0x92c>
    6a30:	ldr	x8, [sp, #8]
    6a34:	b	6a50 <gcc_c_fe_context@@Base+0x93c>
    6a38:	ldr	x8, [sp, #8]
    6a3c:	b	6a50 <gcc_c_fe_context@@Base+0x93c>
    6a40:	ldr	x8, [sp, #8]
    6a44:	cmp	x8, x23
    6a48:	b	6a54 <gcc_c_fe_context@@Base+0x940>
    6a4c:	ldr	x8, [sp, #40]
    6a50:	cmp	x8, x22
    6a54:	mov	x19, x0
    6a58:	b.eq	6a78 <gcc_c_fe_context@@Base+0x964>  // b.none
    6a5c:	mov	x0, x8
    6a60:	b	6a74 <gcc_c_fe_context@@Base+0x960>
    6a64:	bl	5470 <_Unwind_Resume@plt>
    6a68:	bl	5470 <_Unwind_Resume@plt>
    6a6c:	mov	x19, x0
    6a70:	mov	x0, x20
    6a74:	bl	5210 <_ZdlPv@plt>
    6a78:	mov	x0, x19
    6a7c:	bl	5470 <_Unwind_Resume@plt>
    6a80:	bl	5470 <_Unwind_Resume@plt>
    6a84:	sub	sp, sp, #0xa0
    6a88:	stp	x29, x30, [sp, #80]
    6a8c:	stp	x26, x25, [sp, #96]
    6a90:	stp	x24, x23, [sp, #112]
    6a94:	stp	x22, x21, [sp, #128]
    6a98:	stp	x20, x19, [sp, #144]
    6a9c:	add	x29, sp, #0x50
    6aa0:	add	x8, sp, #0x28
    6aa4:	add	x24, x8, #0x10
    6aa8:	stp	x24, xzr, [sp, #40]
    6aac:	strb	wzr, [sp, #56]
    6ab0:	mov	x20, x0
    6ab4:	ldr	x0, [x0, #128]
    6ab8:	mov	x19, x2
    6abc:	mov	w22, w1
    6ac0:	ldr	x8, [x0]
    6ac4:	ldr	x8, [x8]
    6ac8:	add	x1, sp, #0x28
    6acc:	blr	x8
    6ad0:	mov	x21, x0
    6ad4:	cbnz	x0, 6bfc <gcc_c_fe_context@@Base+0xae8>
    6ad8:	add	x21, x20, #0x40
    6adc:	add	x1, sp, #0x28
    6ae0:	mov	x0, x21
    6ae4:	bl	50f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    6ae8:	cmp	w22, #0x1
    6aec:	b.lt	6bf8 <gcc_c_fe_context@@Base+0xae4>  // b.tstop
    6af0:	add	x8, sp, #0x8
    6af4:	add	x25, x8, #0x10
    6af8:	mov	w26, w22
    6afc:	b	6b34 <gcc_c_fe_context@@Base+0xa20>
    6b00:	str	x9, [x1]
    6b04:	ldr	x8, [sp, #24]
    6b08:	str	x8, [x1, #16]
    6b0c:	ldr	x8, [sp, #16]
    6b10:	str	x8, [x1, #8]
    6b14:	stp	x25, xzr, [sp, #8]
    6b18:	strb	wzr, [sp, #24]
    6b1c:	ldr	x8, [x20, #72]
    6b20:	add	x8, x8, #0x20
    6b24:	str	x8, [x20, #72]
    6b28:	subs	x26, x26, #0x1
    6b2c:	add	x19, x19, #0x8
    6b30:	b.eq	6bf8 <gcc_c_fe_context@@Base+0xae4>  // b.none
    6b34:	ldr	x22, [x19]
    6b38:	str	x25, [sp, #8]
    6b3c:	cbz	x22, 6c2c <gcc_c_fe_context@@Base+0xb18>
    6b40:	mov	x0, x22
    6b44:	bl	5060 <strlen@plt>
    6b48:	mov	x23, x0
    6b4c:	cmp	x0, #0xf
    6b50:	stur	x0, [x29, #-8]
    6b54:	mov	x0, x25
    6b58:	b.ls	6b78 <gcc_c_fe_context@@Base+0xa64>  // b.plast
    6b5c:	add	x0, sp, #0x8
    6b60:	sub	x1, x29, #0x8
    6b64:	mov	x2, xzr
    6b68:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6b6c:	ldur	x8, [x29, #-8]
    6b70:	str	x0, [sp, #8]
    6b74:	str	x8, [sp, #24]
    6b78:	cbz	x23, 6b9c <gcc_c_fe_context@@Base+0xa88>
    6b7c:	cmp	x23, #0x1
    6b80:	b.ne	6b90 <gcc_c_fe_context@@Base+0xa7c>  // b.any
    6b84:	ldrb	w8, [x22]
    6b88:	strb	w8, [x0]
    6b8c:	b	6b9c <gcc_c_fe_context@@Base+0xa88>
    6b90:	mov	x1, x22
    6b94:	mov	x2, x23
    6b98:	bl	4fb0 <memcpy@plt>
    6b9c:	ldur	x8, [x29, #-8]
    6ba0:	ldr	x9, [sp, #8]
    6ba4:	str	x8, [sp, #16]
    6ba8:	strb	wzr, [x9, x8]
    6bac:	ldp	x1, x8, [x20, #72]
    6bb0:	cmp	x1, x8
    6bb4:	b.eq	6bd8 <gcc_c_fe_context@@Base+0xac4>  // b.none
    6bb8:	add	x8, x1, #0x10
    6bbc:	str	x8, [x1]
    6bc0:	ldr	x9, [sp, #8]
    6bc4:	cmp	x9, x25
    6bc8:	b.ne	6b00 <gcc_c_fe_context@@Base+0x9ec>  // b.any
    6bcc:	ldr	q0, [x25]
    6bd0:	str	q0, [x8]
    6bd4:	b	6b0c <gcc_c_fe_context@@Base+0x9f8>
    6bd8:	add	x2, sp, #0x8
    6bdc:	mov	x0, x21
    6be0:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    6be4:	ldr	x0, [sp, #8]
    6be8:	cmp	x0, x25
    6bec:	b.eq	6b28 <gcc_c_fe_context@@Base+0xa14>  // b.none
    6bf0:	bl	5210 <_ZdlPv@plt>
    6bf4:	b	6b28 <gcc_c_fe_context@@Base+0xa14>
    6bf8:	mov	x21, xzr
    6bfc:	ldr	x0, [sp, #40]
    6c00:	cmp	x0, x24
    6c04:	b.eq	6c0c <gcc_c_fe_context@@Base+0xaf8>  // b.none
    6c08:	bl	5210 <_ZdlPv@plt>
    6c0c:	mov	x0, x21
    6c10:	ldp	x20, x19, [sp, #144]
    6c14:	ldp	x22, x21, [sp, #128]
    6c18:	ldp	x24, x23, [sp, #112]
    6c1c:	ldp	x26, x25, [sp, #96]
    6c20:	ldp	x29, x30, [sp, #80]
    6c24:	add	sp, sp, #0xa0
    6c28:	ret
    6c2c:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    6c30:	add	x0, x0, #0xb65
    6c34:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    6c38:	b	6c5c <gcc_c_fe_context@@Base+0xb48>
    6c3c:	b	6c5c <gcc_c_fe_context@@Base+0xb48>
    6c40:	ldr	x8, [sp, #8]
    6c44:	mov	x19, x0
    6c48:	cmp	x8, x25
    6c4c:	b.eq	6c60 <gcc_c_fe_context@@Base+0xb4c>  // b.none
    6c50:	mov	x0, x8
    6c54:	bl	5210 <_ZdlPv@plt>
    6c58:	b	6c60 <gcc_c_fe_context@@Base+0xb4c>
    6c5c:	mov	x19, x0
    6c60:	ldr	x0, [sp, #40]
    6c64:	cmp	x0, x24
    6c68:	b.eq	6c70 <gcc_c_fe_context@@Base+0xb5c>  // b.none
    6c6c:	bl	5210 <_ZdlPv@plt>
    6c70:	mov	x0, x19
    6c74:	bl	5470 <_Unwind_Resume@plt>
    6c78:	sub	sp, sp, #0x70
    6c7c:	stp	x29, x30, [sp, #32]
    6c80:	str	x25, [sp, #48]
    6c84:	stp	x24, x23, [sp, #64]
    6c88:	stp	x22, x21, [sp, #80]
    6c8c:	stp	x20, x19, [sp, #96]
    6c90:	add	x29, sp, #0x20
    6c94:	mov	x20, x0
    6c98:	ldr	x0, [x0, #128]
    6c9c:	mov	x21, x1
    6ca0:	cbz	x0, 6cb0 <gcc_c_fe_context@@Base+0xb9c>
    6ca4:	ldr	x8, [x0]
    6ca8:	ldr	x8, [x8, #16]
    6cac:	blr	x8
    6cb0:	mov	w0, #0x30                  	// #48
    6cb4:	bl	5220 <_Znwm@plt>
    6cb8:	mov	x8, sp
    6cbc:	mov	x19, x0
    6cc0:	add	x25, x8, #0x10
    6cc4:	str	x25, [sp]
    6cc8:	cbz	x21, 6dfc <gcc_c_fe_context@@Base+0xce8>
    6ccc:	mov	x0, x21
    6cd0:	bl	5060 <strlen@plt>
    6cd4:	mov	x22, x0
    6cd8:	cmp	x0, #0xf
    6cdc:	str	x0, [x29, #24]
    6ce0:	b.ls	6d08 <gcc_c_fe_context@@Base+0xbf4>  // b.plast
    6ce4:	mov	x0, sp
    6ce8:	add	x1, x29, #0x18
    6cec:	mov	x2, xzr
    6cf0:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6cf4:	ldr	x8, [x29, #24]
    6cf8:	str	x0, [sp]
    6cfc:	str	x8, [sp, #16]
    6d00:	cbnz	x22, 6d10 <gcc_c_fe_context@@Base+0xbfc>
    6d04:	b	6d30 <gcc_c_fe_context@@Base+0xc1c>
    6d08:	mov	x0, x25
    6d0c:	cbz	x22, 6d30 <gcc_c_fe_context@@Base+0xc1c>
    6d10:	cmp	x22, #0x1
    6d14:	b.ne	6d24 <gcc_c_fe_context@@Base+0xc10>  // b.any
    6d18:	ldrb	w8, [x21]
    6d1c:	strb	w8, [x0]
    6d20:	b	6d30 <gcc_c_fe_context@@Base+0xc1c>
    6d24:	mov	x1, x21
    6d28:	mov	x2, x22
    6d2c:	bl	4fb0 <memcpy@plt>
    6d30:	ldr	x8, [x29, #24]
    6d34:	ldr	x9, [sp]
    6d38:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    6d3c:	add	x10, x10, #0x570
    6d40:	str	x8, [sp, #8]
    6d44:	strb	wzr, [x9, x8]
    6d48:	ldp	x21, x22, [sp]
    6d4c:	add	x23, x19, #0x20
    6d50:	mov	x24, x19
    6d54:	stp	x10, x20, [x19]
    6d58:	str	x23, [x24, #16]!
    6d5c:	cbnz	x21, 6d64 <gcc_c_fe_context@@Base+0xc50>
    6d60:	cbnz	x22, 6e08 <gcc_c_fe_context@@Base+0xcf4>
    6d64:	cmp	x22, #0x10
    6d68:	str	x22, [x29, #24]
    6d6c:	b.cc	6d90 <gcc_c_fe_context@@Base+0xc7c>  // b.lo, b.ul, b.last
    6d70:	add	x1, x29, #0x18
    6d74:	mov	x0, x24
    6d78:	mov	x2, xzr
    6d7c:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6d80:	ldr	x8, [x29, #24]
    6d84:	str	x0, [x24]
    6d88:	str	x8, [x23]
    6d8c:	mov	x23, x0
    6d90:	cbz	x22, 6db8 <gcc_c_fe_context@@Base+0xca4>
    6d94:	cmp	x22, #0x1
    6d98:	b.ne	6da8 <gcc_c_fe_context@@Base+0xc94>  // b.any
    6d9c:	ldrb	w8, [x21]
    6da0:	strb	w8, [x23]
    6da4:	b	6db8 <gcc_c_fe_context@@Base+0xca4>
    6da8:	mov	x0, x23
    6dac:	mov	x1, x21
    6db0:	mov	x2, x22
    6db4:	bl	4fb0 <memcpy@plt>
    6db8:	ldr	x8, [x29, #24]
    6dbc:	ldr	x9, [x19, #16]
    6dc0:	str	x8, [x19, #24]
    6dc4:	strb	wzr, [x9, x8]
    6dc8:	str	x19, [x20, #128]
    6dcc:	ldr	x0, [sp]
    6dd0:	cmp	x0, x25
    6dd4:	b.eq	6ddc <gcc_c_fe_context@@Base+0xcc8>  // b.none
    6dd8:	bl	5210 <_ZdlPv@plt>
    6ddc:	ldp	x20, x19, [sp, #96]
    6de0:	ldp	x22, x21, [sp, #80]
    6de4:	ldp	x24, x23, [sp, #64]
    6de8:	ldr	x25, [sp, #48]
    6dec:	ldp	x29, x30, [sp, #32]
    6df0:	mov	x0, xzr
    6df4:	add	sp, sp, #0x70
    6df8:	ret
    6dfc:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    6e00:	add	x0, x0, #0xb65
    6e04:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    6e08:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    6e0c:	add	x0, x0, #0xb65
    6e10:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    6e14:	ldr	x8, [sp]
    6e18:	mov	x20, x0
    6e1c:	cmp	x8, x25
    6e20:	b.eq	6e34 <gcc_c_fe_context@@Base+0xd20>  // b.none
    6e24:	mov	x0, x8
    6e28:	bl	5210 <_ZdlPv@plt>
    6e2c:	b	6e34 <gcc_c_fe_context@@Base+0xd20>
    6e30:	mov	x20, x0
    6e34:	mov	x0, x19
    6e38:	bl	5210 <_ZdlPv@plt>
    6e3c:	mov	x0, x20
    6e40:	bl	5470 <_Unwind_Resume@plt>
    6e44:	sub	sp, sp, #0x70
    6e48:	stp	x29, x30, [sp, #32]
    6e4c:	str	x25, [sp, #48]
    6e50:	stp	x24, x23, [sp, #64]
    6e54:	stp	x22, x21, [sp, #80]
    6e58:	stp	x20, x19, [sp, #96]
    6e5c:	add	x29, sp, #0x20
    6e60:	mov	x20, x0
    6e64:	ldr	x0, [x0, #128]
    6e68:	mov	x21, x1
    6e6c:	cbz	x0, 6e7c <gcc_c_fe_context@@Base+0xd68>
    6e70:	ldr	x8, [x0]
    6e74:	ldr	x8, [x8, #16]
    6e78:	blr	x8
    6e7c:	mov	w0, #0x30                  	// #48
    6e80:	bl	5220 <_Znwm@plt>
    6e84:	mov	x8, sp
    6e88:	mov	x19, x0
    6e8c:	add	x25, x8, #0x10
    6e90:	str	x25, [sp]
    6e94:	cbz	x21, 6fc8 <gcc_c_fe_context@@Base+0xeb4>
    6e98:	mov	x0, x21
    6e9c:	bl	5060 <strlen@plt>
    6ea0:	mov	x22, x0
    6ea4:	cmp	x0, #0xf
    6ea8:	str	x0, [x29, #24]
    6eac:	b.ls	6ed4 <gcc_c_fe_context@@Base+0xdc0>  // b.plast
    6eb0:	mov	x0, sp
    6eb4:	add	x1, x29, #0x18
    6eb8:	mov	x2, xzr
    6ebc:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6ec0:	ldr	x8, [x29, #24]
    6ec4:	str	x0, [sp]
    6ec8:	str	x8, [sp, #16]
    6ecc:	cbnz	x22, 6edc <gcc_c_fe_context@@Base+0xdc8>
    6ed0:	b	6efc <gcc_c_fe_context@@Base+0xde8>
    6ed4:	mov	x0, x25
    6ed8:	cbz	x22, 6efc <gcc_c_fe_context@@Base+0xde8>
    6edc:	cmp	x22, #0x1
    6ee0:	b.ne	6ef0 <gcc_c_fe_context@@Base+0xddc>  // b.any
    6ee4:	ldrb	w8, [x21]
    6ee8:	strb	w8, [x0]
    6eec:	b	6efc <gcc_c_fe_context@@Base+0xde8>
    6ef0:	mov	x1, x21
    6ef4:	mov	x2, x22
    6ef8:	bl	4fb0 <memcpy@plt>
    6efc:	ldr	x8, [x29, #24]
    6f00:	ldr	x9, [sp]
    6f04:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    6f08:	add	x10, x10, #0x5b0
    6f0c:	str	x8, [sp, #8]
    6f10:	strb	wzr, [x9, x8]
    6f14:	ldp	x21, x22, [sp]
    6f18:	add	x23, x19, #0x20
    6f1c:	mov	x24, x19
    6f20:	stp	x10, x20, [x19]
    6f24:	str	x23, [x24, #16]!
    6f28:	cbnz	x21, 6f30 <gcc_c_fe_context@@Base+0xe1c>
    6f2c:	cbnz	x22, 6fd4 <gcc_c_fe_context@@Base+0xec0>
    6f30:	cmp	x22, #0x10
    6f34:	str	x22, [x29, #24]
    6f38:	b.cc	6f5c <gcc_c_fe_context@@Base+0xe48>  // b.lo, b.ul, b.last
    6f3c:	add	x1, x29, #0x18
    6f40:	mov	x0, x24
    6f44:	mov	x2, xzr
    6f48:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    6f4c:	ldr	x8, [x29, #24]
    6f50:	str	x0, [x24]
    6f54:	str	x8, [x23]
    6f58:	mov	x23, x0
    6f5c:	cbz	x22, 6f84 <gcc_c_fe_context@@Base+0xe70>
    6f60:	cmp	x22, #0x1
    6f64:	b.ne	6f74 <gcc_c_fe_context@@Base+0xe60>  // b.any
    6f68:	ldrb	w8, [x21]
    6f6c:	strb	w8, [x23]
    6f70:	b	6f84 <gcc_c_fe_context@@Base+0xe70>
    6f74:	mov	x0, x23
    6f78:	mov	x1, x21
    6f7c:	mov	x2, x22
    6f80:	bl	4fb0 <memcpy@plt>
    6f84:	ldr	x8, [x29, #24]
    6f88:	ldr	x9, [x19, #16]
    6f8c:	str	x8, [x19, #24]
    6f90:	strb	wzr, [x9, x8]
    6f94:	str	x19, [x20, #128]
    6f98:	ldr	x0, [sp]
    6f9c:	cmp	x0, x25
    6fa0:	b.eq	6fa8 <gcc_c_fe_context@@Base+0xe94>  // b.none
    6fa4:	bl	5210 <_ZdlPv@plt>
    6fa8:	ldp	x20, x19, [sp, #96]
    6fac:	ldp	x22, x21, [sp, #80]
    6fb0:	ldp	x24, x23, [sp, #64]
    6fb4:	ldr	x25, [sp, #48]
    6fb8:	ldp	x29, x30, [sp, #32]
    6fbc:	mov	x0, xzr
    6fc0:	add	sp, sp, #0x70
    6fc4:	ret
    6fc8:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    6fcc:	add	x0, x0, #0xb65
    6fd0:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    6fd4:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    6fd8:	add	x0, x0, #0xb65
    6fdc:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    6fe0:	ldr	x8, [sp]
    6fe4:	mov	x20, x0
    6fe8:	cmp	x8, x25
    6fec:	b.eq	7000 <gcc_c_fe_context@@Base+0xeec>  // b.none
    6ff0:	mov	x0, x8
    6ff4:	bl	5210 <_ZdlPv@plt>
    6ff8:	b	7000 <gcc_c_fe_context@@Base+0xeec>
    6ffc:	mov	x20, x0
    7000:	mov	x0, x19
    7004:	bl	5210 <_ZdlPv@plt>
    7008:	mov	x0, x20
    700c:	bl	5470 <_Unwind_Resume@plt>
    7010:	sub	sp, sp, #0x30
    7014:	stp	x29, x30, [sp, #16]
    7018:	stp	x20, x19, [sp, #32]
    701c:	add	x29, sp, #0x10
    7020:	mov	x19, x0
    7024:	str	xzr, [sp]
    7028:	mov	w1, #0x2                   	// #2
    702c:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    7030:	cbz	w0, 709c <gcc_c_fe_context@@Base+0xf88>
    7034:	add	x1, sp, #0x8
    7038:	mov	x0, x19
    703c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    7040:	cbz	w0, 709c <gcc_c_fe_context@@Base+0xf88>
    7044:	ldr	w20, [sp, #8]
    7048:	mov	x1, sp
    704c:	mov	x0, x19
    7050:	bl	e320 <gcc_cp_fe_context@@Base+0x4a5c>
    7054:	cbz	w0, 709c <gcc_c_fe_context@@Base+0xf88>
    7058:	ldr	x1, [x19, #24]
    705c:	ldr	x3, [sp]
    7060:	ldr	x0, [x1, #40]
    7064:	ldr	x8, [x1, #24]
    7068:	mov	w2, w20
    706c:	blr	x8
    7070:	mov	w1, #0x52                  	// #82
    7074:	mov	x0, x19
    7078:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    707c:	cbz	w0, 709c <gcc_c_fe_context@@Base+0xf88>
    7080:	mov	w1, #0x1                   	// #1
    7084:	mov	x0, x19
    7088:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    708c:	mov	w19, w0
    7090:	ldr	x0, [sp]
    7094:	cbnz	x0, 70a8 <gcc_c_fe_context@@Base+0xf94>
    7098:	b	70ac <gcc_c_fe_context@@Base+0xf98>
    709c:	mov	w19, wzr
    70a0:	ldr	x0, [sp]
    70a4:	cbz	x0, 70ac <gcc_c_fe_context@@Base+0xf98>
    70a8:	bl	52b0 <_ZdaPv@plt>
    70ac:	mov	w0, w19
    70b0:	ldp	x20, x19, [sp, #32]
    70b4:	ldp	x29, x30, [sp, #16]
    70b8:	add	sp, sp, #0x30
    70bc:	ret
    70c0:	ldr	x8, [sp]
    70c4:	mov	x19, x0
    70c8:	cbz	x8, 70d4 <gcc_c_fe_context@@Base+0xfc0>
    70cc:	mov	x0, x8
    70d0:	bl	52b0 <_ZdaPv@plt>
    70d4:	mov	x0, x19
    70d8:	bl	5470 <_Unwind_Resume@plt>
    70dc:	sub	sp, sp, #0x30
    70e0:	stp	x29, x30, [sp, #16]
    70e4:	stp	x20, x19, [sp, #32]
    70e8:	add	x29, sp, #0x10
    70ec:	mov	x19, x0
    70f0:	str	xzr, [sp, #8]
    70f4:	mov	w1, #0x1                   	// #1
    70f8:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    70fc:	cbz	w0, 7150 <gcc_c_fe_context@@Base+0x103c>
    7100:	add	x1, sp, #0x8
    7104:	mov	x0, x19
    7108:	bl	e320 <gcc_cp_fe_context@@Base+0x4a5c>
    710c:	cbz	w0, 7150 <gcc_c_fe_context@@Base+0x103c>
    7110:	ldr	x1, [x19, #24]
    7114:	ldr	x2, [sp, #8]
    7118:	ldp	x8, x0, [x1, #32]
    711c:	blr	x8
    7120:	mov	x20, x0
    7124:	mov	w1, #0x52                  	// #82
    7128:	mov	x0, x19
    712c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    7130:	cbz	w0, 7150 <gcc_c_fe_context@@Base+0x103c>
    7134:	mov	x0, x19
    7138:	mov	x1, x20
    713c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    7140:	mov	w19, w0
    7144:	ldr	x0, [sp, #8]
    7148:	cbnz	x0, 715c <gcc_c_fe_context@@Base+0x1048>
    714c:	b	7160 <gcc_c_fe_context@@Base+0x104c>
    7150:	mov	w19, wzr
    7154:	ldr	x0, [sp, #8]
    7158:	cbz	x0, 7160 <gcc_c_fe_context@@Base+0x104c>
    715c:	bl	52b0 <_ZdaPv@plt>
    7160:	mov	w0, w19
    7164:	ldp	x20, x19, [sp, #32]
    7168:	ldp	x29, x30, [sp, #16]
    716c:	add	sp, sp, #0x30
    7170:	ret
    7174:	ldr	x8, [sp, #8]
    7178:	mov	x19, x0
    717c:	cbz	x8, 7188 <gcc_c_fe_context@@Base+0x1074>
    7180:	mov	x0, x8
    7184:	bl	52b0 <_ZdaPv@plt>
    7188:	mov	x0, x19
    718c:	bl	5470 <_Unwind_Resume@plt>
    7190:	stp	x1, x2, [x0, #24]
    7194:	str	x3, [x0, #40]
    7198:	ret
    719c:	ret
    71a0:	b	5210 <_ZdlPv@plt>
    71a4:	mov	x8, x0
    71a8:	ldr	x0, [x0, #16]
    71ac:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    71b0:	add	x10, x8, #0x20
    71b4:	add	x9, x9, #0x570
    71b8:	cmp	x0, x10
    71bc:	str	x9, [x8]
    71c0:	b.eq	71c8 <gcc_c_fe_context@@Base+0x10b4>  // b.none
    71c4:	b	5210 <_ZdlPv@plt>
    71c8:	ret
    71cc:	stp	x29, x30, [sp, #-32]!
    71d0:	str	x19, [sp, #16]
    71d4:	mov	x29, sp
    71d8:	mov	x19, x0
    71dc:	ldr	x0, [x0, #16]
    71e0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    71e4:	add	x9, x19, #0x20
    71e8:	add	x8, x8, #0x570
    71ec:	cmp	x0, x9
    71f0:	str	x8, [x19]
    71f4:	b.eq	71fc <gcc_c_fe_context@@Base+0x10e8>  // b.none
    71f8:	bl	5210 <_ZdlPv@plt>
    71fc:	mov	x0, x19
    7200:	ldr	x19, [sp, #16]
    7204:	ldp	x29, x30, [sp], #32
    7208:	b	5210 <_ZdlPv@plt>
    720c:	mov	x8, x0
    7210:	ldr	x0, [x0, #16]
    7214:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    7218:	add	x10, x8, #0x20
    721c:	add	x9, x9, #0x5b0
    7220:	cmp	x0, x10
    7224:	str	x9, [x8]
    7228:	b.eq	7230 <gcc_c_fe_context@@Base+0x111c>  // b.none
    722c:	b	5210 <_ZdlPv@plt>
    7230:	ret
    7234:	stp	x29, x30, [sp, #-32]!
    7238:	str	x19, [sp, #16]
    723c:	mov	x29, sp
    7240:	mov	x19, x0
    7244:	ldr	x0, [x0, #16]
    7248:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    724c:	add	x9, x19, #0x20
    7250:	add	x8, x8, #0x5b0
    7254:	cmp	x0, x9
    7258:	str	x8, [x19]
    725c:	b.eq	7264 <gcc_c_fe_context@@Base+0x1150>  // b.none
    7260:	bl	5210 <_ZdlPv@plt>
    7264:	mov	x0, x19
    7268:	ldr	x19, [sp, #16]
    726c:	ldp	x29, x30, [sp], #32
    7270:	b	5210 <_ZdlPv@plt>
    7274:	str	x30, [sp, #-16]!
    7278:	bl	50d0 <__cxa_begin_catch@plt>
    727c:	bl	5040 <_ZSt9terminatev@plt>

0000000000007280 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base>:
    7280:	sub	sp, sp, #0x40
    7284:	stp	x29, x30, [sp, #16]
    7288:	stp	x22, x21, [sp, #32]
    728c:	stp	x20, x19, [sp, #48]
    7290:	add	x29, sp, #0x10
    7294:	ldp	x20, x8, [x0, #8]
    7298:	mov	x19, x0
    729c:	mov	x2, x1
    72a0:	cmp	x20, x8
    72a4:	b.eq	72fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x7c>  // b.none
    72a8:	add	x0, x20, #0x10
    72ac:	str	x0, [x20]
    72b0:	ldp	x21, x22, [x2]
    72b4:	cbnz	x21, 72bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x3c>
    72b8:	cbnz	x22, 7354 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0xd4>
    72bc:	cmp	x22, #0x10
    72c0:	str	x22, [sp, #8]
    72c4:	b.cc	72e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x64>  // b.lo, b.ul, b.last
    72c8:	add	x1, sp, #0x8
    72cc:	mov	x0, x20
    72d0:	mov	x2, xzr
    72d4:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    72d8:	str	x0, [x20]
    72dc:	ldr	x8, [sp, #8]
    72e0:	str	x8, [x20, #16]
    72e4:	cbz	x22, 7324 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0xa4>
    72e8:	cmp	x22, #0x1
    72ec:	b.ne	7318 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x98>  // b.any
    72f0:	ldrb	w8, [x21]
    72f4:	strb	w8, [x0]
    72f8:	b	7324 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0xa4>
    72fc:	mov	x0, x19
    7300:	mov	x1, x20
    7304:	ldp	x20, x19, [sp, #48]
    7308:	ldp	x22, x21, [sp, #32]
    730c:	ldp	x29, x30, [sp, #16]
    7310:	add	sp, sp, #0x40
    7314:	b	5280 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    7318:	mov	x1, x21
    731c:	mov	x2, x22
    7320:	bl	4fb0 <memcpy@plt>
    7324:	ldr	x8, [sp, #8]
    7328:	ldr	x9, [x20]
    732c:	str	x8, [x20, #8]
    7330:	strb	wzr, [x9, x8]
    7334:	ldr	x8, [x19, #8]
    7338:	add	x8, x8, #0x20
    733c:	str	x8, [x19, #8]
    7340:	ldp	x20, x19, [sp, #48]
    7344:	ldp	x22, x21, [sp, #32]
    7348:	ldp	x29, x30, [sp, #16]
    734c:	add	sp, sp, #0x40
    7350:	ret
    7354:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    7358:	add	x0, x0, #0xb65
    735c:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>

0000000000007360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    7360:	stp	x29, x30, [sp, #-80]!
    7364:	stp	x26, x25, [sp, #16]
    7368:	stp	x24, x23, [sp, #32]
    736c:	stp	x22, x21, [sp, #48]
    7370:	stp	x20, x19, [sp, #64]
    7374:	mov	x29, sp
    7378:	ldp	x20, x24, [x0]
    737c:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
    7380:	sub	x8, x24, x20
    7384:	cmp	x8, x9
    7388:	b.eq	7538 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d8>  // b.none
    738c:	asr	x9, x8, #5
    7390:	cmp	x8, #0x0
    7394:	csinc	x10, x9, xzr, ne  // ne = any
    7398:	adds	x9, x10, x9
    739c:	lsr	x11, x9, #58
    73a0:	cset	w10, cs  // cs = hs, nlast
    73a4:	cmp	x11, #0x0
    73a8:	cset	w11, ne  // ne = any
    73ac:	orr	w10, w10, w11
    73b0:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    73b4:	cmp	w10, #0x0
    73b8:	csel	x25, x8, x9, ne  // ne = any
    73bc:	sub	x8, x1, x20
    73c0:	mov	x23, x2
    73c4:	mov	x19, x0
    73c8:	mov	x21, x1
    73cc:	asr	x26, x8, #5
    73d0:	cbz	x25, 73e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x84>
    73d4:	lsl	x0, x25, #5
    73d8:	bl	5220 <_Znwm@plt>
    73dc:	mov	x22, x0
    73e0:	b	73e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x88>
    73e4:	mov	x22, xzr
    73e8:	add	x9, x22, x26, lsl #5
    73ec:	add	x10, x9, #0x10
    73f0:	str	x10, [x9]
    73f4:	mov	x8, x23
    73f8:	ldr	x11, [x8], #16
    73fc:	cmp	x11, x8
    7400:	b.eq	7414 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb4>  // b.none
    7404:	str	x11, [x9]
    7408:	ldr	x10, [x23, #16]
    740c:	str	x10, [x9, #16]
    7410:	b	741c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xbc>
    7414:	ldr	q0, [x11]
    7418:	str	q0, [x10]
    741c:	ldr	x9, [x23, #8]
    7420:	add	x10, x22, x26, lsl #5
    7424:	cmp	x20, x21
    7428:	str	x9, [x10, #8]
    742c:	stp	x8, xzr, [x23]
    7430:	mov	x8, x22
    7434:	strb	wzr, [x23, #16]
    7438:	b.eq	7494 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x134>  // b.none
    743c:	add	x8, x22, #0x10
    7440:	add	x9, x20, #0x10
    7444:	b	7474 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x114>
    7448:	stur	x10, [x8, #-16]
    744c:	ldr	x10, [x9]
    7450:	str	x10, [x8]
    7454:	ldur	x10, [x9, #-8]
    7458:	add	x11, x9, #0x10
    745c:	cmp	x11, x21
    7460:	stur	x10, [x8, #-8]
    7464:	stp	x9, xzr, [x9, #-16]
    7468:	strb	wzr, [x9], #32
    746c:	add	x8, x8, #0x20
    7470:	b.eq	7490 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130>  // b.none
    7474:	stur	x8, [x8, #-16]
    7478:	ldur	x10, [x9, #-16]
    747c:	cmp	x10, x9
    7480:	b.ne	7448 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe8>  // b.any
    7484:	ldr	q0, [x10]
    7488:	str	q0, [x8]
    748c:	b	7454 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>
    7490:	sub	x8, x8, #0x10
    7494:	cmp	x24, x21
    7498:	b.eq	7504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a4>  // b.none
    749c:	mov	x9, xzr
    74a0:	b	74d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x174>
    74a4:	str	x13, [x11, #32]
    74a8:	ldr	x12, [x12, #16]
    74ac:	str	x12, [x11, #48]
    74b0:	ldur	x11, [x10, #-8]
    74b4:	add	x13, x10, #0x10
    74b8:	add	x12, x8, x9
    74bc:	cmp	x13, x24
    74c0:	add	x9, x9, #0x20
    74c4:	str	x11, [x12, #40]
    74c8:	stp	x10, xzr, [x10, #-16]
    74cc:	strb	wzr, [x10]
    74d0:	b.eq	7500 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a0>  // b.none
    74d4:	add	x11, x8, x9
    74d8:	add	x10, x11, #0x30
    74dc:	add	x12, x21, x9
    74e0:	str	x10, [x11, #32]
    74e4:	mov	x10, x12
    74e8:	ldr	x13, [x10], #16
    74ec:	cmp	x13, x10
    74f0:	b.ne	74a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x144>  // b.any
    74f4:	ldr	q0, [x13]
    74f8:	str	q0, [x11, #48]
    74fc:	b	74b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x150>
    7500:	add	x8, x8, x9
    7504:	add	x21, x8, #0x20
    7508:	cbz	x20, 7514 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b4>
    750c:	mov	x0, x20
    7510:	bl	5210 <_ZdlPv@plt>
    7514:	add	x8, x22, x25, lsl #5
    7518:	stp	x22, x21, [x19]
    751c:	str	x8, [x19, #16]
    7520:	ldp	x20, x19, [sp, #64]
    7524:	ldp	x22, x21, [sp, #48]
    7528:	ldp	x24, x23, [sp, #32]
    752c:	ldp	x26, x25, [sp, #16]
    7530:	ldp	x29, x30, [sp], #80
    7534:	ret
    7538:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    753c:	add	x0, x0, #0xe1f
    7540:	bl	5100 <_ZSt20__throw_length_errorPKc@plt>

0000000000007544 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    7544:	sub	sp, sp, #0x70
    7548:	stp	x29, x30, [sp, #16]
    754c:	stp	x28, x27, [sp, #32]
    7550:	stp	x26, x25, [sp, #48]
    7554:	stp	x24, x23, [sp, #64]
    7558:	stp	x22, x21, [sp, #80]
    755c:	stp	x20, x19, [sp, #96]
    7560:	add	x29, sp, #0x10
    7564:	ldp	x20, x27, [x0]
    7568:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
    756c:	sub	x8, x27, x20
    7570:	cmp	x8, x9
    7574:	b.eq	777c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x238>  // b.none
    7578:	asr	x9, x8, #5
    757c:	cmp	x8, #0x0
    7580:	csinc	x10, x9, xzr, ne  // ne = any
    7584:	adds	x9, x10, x9
    7588:	lsr	x11, x9, #58
    758c:	cset	w10, cs  // cs = hs, nlast
    7590:	cmp	x11, #0x0
    7594:	cset	w11, ne  // ne = any
    7598:	orr	w10, w10, w11
    759c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    75a0:	cmp	w10, #0x0
    75a4:	csel	x9, x8, x9, ne  // ne = any
    75a8:	sub	x8, x1, x20
    75ac:	mov	x26, x2
    75b0:	mov	x19, x0
    75b4:	mov	x22, x1
    75b8:	asr	x28, x8, #5
    75bc:	str	x9, [sp]
    75c0:	cbz	x9, 75d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x90>
    75c4:	lsl	x0, x9, #5
    75c8:	bl	5220 <_Znwm@plt>
    75cc:	mov	x21, x0
    75d0:	b	75d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x94>
    75d4:	mov	x21, xzr
    75d8:	add	x23, x21, x28, lsl #5
    75dc:	add	x24, x23, #0x10
    75e0:	str	x24, [x23]
    75e4:	ldp	x25, x26, [x26]
    75e8:	cbnz	x25, 75f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xac>
    75ec:	cbnz	x26, 7770 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22c>
    75f0:	cmp	x26, #0x10
    75f4:	str	x26, [sp, #8]
    75f8:	b.cc	7620 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xdc>  // b.lo, b.ul, b.last
    75fc:	add	x1, sp, #0x8
    7600:	mov	x0, x23
    7604:	mov	x2, xzr
    7608:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    760c:	str	x0, [x23]
    7610:	ldr	x8, [sp, #8]
    7614:	add	x9, x21, x28, lsl #5
    7618:	mov	x24, x0
    761c:	str	x8, [x9, #16]
    7620:	cbz	x26, 7648 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>
    7624:	cmp	x26, #0x1
    7628:	b.ne	7638 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xf4>  // b.any
    762c:	ldrb	w8, [x25]
    7630:	strb	w8, [x24]
    7634:	b	7648 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x104>
    7638:	mov	x0, x24
    763c:	mov	x1, x25
    7640:	mov	x2, x26
    7644:	bl	4fb0 <memcpy@plt>
    7648:	ldr	x8, [sp, #8]
    764c:	add	x9, x21, x28, lsl #5
    7650:	cmp	x20, x22
    7654:	str	x8, [x9, #8]
    7658:	ldr	x9, [x23]
    765c:	strb	wzr, [x9, x8]
    7660:	mov	x8, x21
    7664:	b.eq	76c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17c>  // b.none
    7668:	add	x8, x21, #0x10
    766c:	add	x9, x20, #0x10
    7670:	b	769c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158>
    7674:	ldr	q0, [x10]
    7678:	str	q0, [x8]
    767c:	ldur	x10, [x9, #-8]
    7680:	add	x11, x9, #0x10
    7684:	cmp	x11, x22
    7688:	stur	x10, [x8, #-8]
    768c:	stp	x9, xzr, [x9, #-16]
    7690:	strb	wzr, [x9], #32
    7694:	add	x8, x8, #0x20
    7698:	b.eq	76bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x178>  // b.none
    769c:	stur	x8, [x8, #-16]
    76a0:	ldur	x10, [x9, #-16]
    76a4:	cmp	x10, x9
    76a8:	b.eq	7674 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x130>  // b.none
    76ac:	stur	x10, [x8, #-16]
    76b0:	ldr	x10, [x9]
    76b4:	str	x10, [x8]
    76b8:	b	767c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>
    76bc:	sub	x8, x8, #0x10
    76c0:	cmp	x27, x22
    76c4:	b.eq	7730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ec>  // b.none
    76c8:	mov	x9, xzr
    76cc:	b	76fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b8>
    76d0:	ldr	q0, [x13]
    76d4:	str	q0, [x11, #48]
    76d8:	ldur	x11, [x10, #-8]
    76dc:	add	x13, x10, #0x10
    76e0:	add	x12, x8, x9
    76e4:	cmp	x13, x27
    76e8:	add	x9, x9, #0x20
    76ec:	str	x11, [x12, #40]
    76f0:	stp	x10, xzr, [x10, #-16]
    76f4:	strb	wzr, [x10]
    76f8:	b.eq	772c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e8>  // b.none
    76fc:	add	x11, x8, x9
    7700:	add	x10, x11, #0x30
    7704:	add	x12, x22, x9
    7708:	str	x10, [x11, #32]
    770c:	mov	x10, x12
    7710:	ldr	x13, [x10], #16
    7714:	cmp	x13, x10
    7718:	b.eq	76d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18c>  // b.none
    771c:	str	x13, [x11, #32]
    7720:	ldr	x12, [x12, #16]
    7724:	str	x12, [x11, #48]
    7728:	b	76d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x194>
    772c:	add	x8, x8, x9
    7730:	add	x22, x8, #0x20
    7734:	cbz	x20, 7740 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fc>
    7738:	mov	x0, x20
    773c:	bl	5210 <_ZdlPv@plt>
    7740:	stp	x21, x22, [x19]
    7744:	ldr	x8, [sp]
    7748:	add	x8, x21, x8, lsl #5
    774c:	str	x8, [x19, #16]
    7750:	ldp	x20, x19, [sp, #96]
    7754:	ldp	x22, x21, [sp, #80]
    7758:	ldp	x24, x23, [sp, #64]
    775c:	ldp	x26, x25, [sp, #48]
    7760:	ldp	x28, x27, [sp, #32]
    7764:	ldp	x29, x30, [sp, #16]
    7768:	add	sp, sp, #0x70
    776c:	ret
    7770:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    7774:	add	x0, x0, #0xb65
    7778:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    777c:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    7780:	add	x0, x0, #0xe1f
    7784:	bl	5100 <_ZSt20__throw_length_errorPKc@plt>
    7788:	bl	50d0 <__cxa_begin_catch@plt>
    778c:	cbnz	x21, 77a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x25c>
    7790:	ldr	x0, [x23]
    7794:	cmp	x0, x24
    7798:	b.ne	77a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x260>  // b.any
    779c:	b	77a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x264>
    77a0:	mov	x0, x21
    77a4:	bl	5210 <_ZdlPv@plt>
    77a8:	bl	5340 <__cxa_rethrow@plt>
    77ac:	mov	x19, x0
    77b0:	bl	53e0 <__cxa_end_catch@plt>
    77b4:	mov	x0, x19
    77b8:	bl	5470 <_Unwind_Resume@plt>
    77bc:	bl	7274 <gcc_c_fe_context@@Base+0x1160>
    77c0:	stp	x29, x30, [sp, #-32]!
    77c4:	str	x19, [sp, #16]
    77c8:	mov	x29, sp
    77cc:	mov	x19, x0
    77d0:	bl	deac <gcc_cp_fe_context@@Base+0x45e8>
    77d4:	mov	x0, x19
    77d8:	ldr	x19, [sp, #16]
    77dc:	ldp	x29, x30, [sp], #32
    77e0:	b	5210 <_ZdlPv@plt>
    77e4:	ldr	x8, [x0, #24]
    77e8:	ldp	x2, x0, [x8, #48]
    77ec:	br	x2
    77f0:	sub	sp, sp, #0x30
    77f4:	stp	x29, x30, [sp, #32]
    77f8:	add	x29, sp, #0x20
    77fc:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    7800:	ldr	x0, [x0, #16]
    7804:	ldr	x10, [x10, #3296]
    7808:	mov	x8, x5
    780c:	mov	x9, x4
    7810:	mov	x5, x3
    7814:	ldr	x10, [x10]
    7818:	mov	w4, w2
    781c:	mov	x3, x1
    7820:	str	w7, [sp, #8]
    7824:	sub	x2, x29, #0x8
    7828:	str	x6, [sp]
    782c:	mov	x1, x10
    7830:	mov	x6, x9
    7834:	mov	x7, x8
    7838:	bl	80c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb80>
    783c:	ldur	x8, [x29, #-8]
    7840:	ldp	x29, x30, [sp, #32]
    7844:	cmp	w0, #0x0
    7848:	csel	x0, xzr, x8, eq  // eq = none
    784c:	add	sp, sp, #0x30
    7850:	ret
    7854:	sub	sp, sp, #0x20
    7858:	stp	x29, x30, [sp, #16]
    785c:	add	x29, sp, #0x10
    7860:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7864:	ldr	x0, [x0, #16]
    7868:	ldr	x8, [x8, #4040]
    786c:	mov	w4, w2
    7870:	mov	x3, x1
    7874:	sub	x2, x29, #0x4
    7878:	ldr	x8, [x8]
    787c:	mov	x1, x8
    7880:	bl	81e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xca4>
    7884:	ldur	w8, [x29, #-4]
    7888:	ldp	x29, x30, [sp, #16]
    788c:	cmp	w0, #0x0
    7890:	csel	w0, wzr, w8, eq  // eq = none
    7894:	add	sp, sp, #0x20
    7898:	ret
    789c:	sub	sp, sp, #0x20
    78a0:	stp	x29, x30, [sp, #16]
    78a4:	add	x29, sp, #0x10
    78a8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    78ac:	ldr	x0, [x0, #16]
    78b0:	ldr	x8, [x8, #3624]
    78b4:	mov	w6, w4
    78b8:	mov	x5, x3
    78bc:	mov	x4, x2
    78c0:	ldr	x8, [x8]
    78c4:	mov	x3, x1
    78c8:	sub	x2, x29, #0x4
    78cc:	mov	x1, x8
    78d0:	bl	829c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd58>
    78d4:	ldur	w8, [x29, #-4]
    78d8:	ldp	x29, x30, [sp, #16]
    78dc:	cmp	w0, #0x0
    78e0:	csel	w0, wzr, w8, eq  // eq = none
    78e4:	add	sp, sp, #0x20
    78e8:	ret
    78ec:	sub	sp, sp, #0x20
    78f0:	stp	x29, x30, [sp, #16]
    78f4:	add	x29, sp, #0x10
    78f8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    78fc:	ldr	x0, [x0, #16]
    7900:	ldr	x8, [x8, #3528]
    7904:	mov	x3, x1
    7908:	add	x2, sp, #0x8
    790c:	ldr	x8, [x8]
    7910:	mov	x1, x8
    7914:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    7918:	ldr	x8, [sp, #8]
    791c:	ldp	x29, x30, [sp, #16]
    7920:	cmp	w0, #0x0
    7924:	csel	x0, xzr, x8, eq  // eq = none
    7928:	add	sp, sp, #0x20
    792c:	ret
    7930:	sub	sp, sp, #0x30
    7934:	stp	x29, x30, [sp, #16]
    7938:	stp	x20, x19, [sp, #32]
    793c:	add	x29, sp, #0x10
    7940:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7944:	ldr	x19, [x0, #16]
    7948:	ldr	x8, [x8, #3920]
    794c:	mov	w1, #0x51                  	// #81
    7950:	mov	x0, x19
    7954:	ldr	x20, [x8]
    7958:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    795c:	cbz	w0, 79a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x464>
    7960:	mov	x0, x19
    7964:	mov	x1, x20
    7968:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    796c:	cbz	w0, 79a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x464>
    7970:	mov	x0, x19
    7974:	mov	x1, xzr
    7978:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    797c:	cbz	w0, 79a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x464>
    7980:	mov	w1, #0x1                   	// #1
    7984:	mov	x0, x19
    7988:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    798c:	cbz	w0, 79a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x464>
    7990:	add	x1, sp, #0x8
    7994:	mov	x0, x19
    7998:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    799c:	cbz	w0, 79a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x464>
    79a0:	ldr	x0, [sp, #8]
    79a4:	b	79ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x468>
    79a8:	mov	x0, xzr
    79ac:	ldp	x20, x19, [sp, #32]
    79b0:	ldp	x29, x30, [sp, #16]
    79b4:	add	sp, sp, #0x30
    79b8:	ret
    79bc:	sub	sp, sp, #0x30
    79c0:	stp	x29, x30, [sp, #16]
    79c4:	stp	x20, x19, [sp, #32]
    79c8:	add	x29, sp, #0x10
    79cc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    79d0:	ldr	x19, [x0, #16]
    79d4:	ldr	x8, [x8, #3216]
    79d8:	mov	w1, #0x51                  	// #81
    79dc:	mov	x0, x19
    79e0:	ldr	x20, [x8]
    79e4:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    79e8:	cbz	w0, 7a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    79ec:	mov	x0, x19
    79f0:	mov	x1, x20
    79f4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    79f8:	cbz	w0, 7a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    79fc:	mov	x0, x19
    7a00:	mov	x1, xzr
    7a04:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    7a08:	cbz	w0, 7a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    7a0c:	mov	w1, #0x1                   	// #1
    7a10:	mov	x0, x19
    7a14:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    7a18:	cbz	w0, 7a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    7a1c:	add	x1, sp, #0x8
    7a20:	mov	x0, x19
    7a24:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    7a28:	cbz	w0, 7a34 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f0>
    7a2c:	ldr	x0, [sp, #8]
    7a30:	b	7a38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x4f4>
    7a34:	mov	x0, xzr
    7a38:	ldp	x20, x19, [sp, #32]
    7a3c:	ldp	x29, x30, [sp, #16]
    7a40:	add	sp, sp, #0x30
    7a44:	ret
    7a48:	sub	sp, sp, #0x20
    7a4c:	stp	x29, x30, [sp, #16]
    7a50:	add	x29, sp, #0x10
    7a54:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7a58:	ldr	x0, [x0, #16]
    7a5c:	ldr	x8, [x8, #3376]
    7a60:	mov	x7, x5
    7a64:	mov	x6, x4
    7a68:	mov	x5, x3
    7a6c:	ldr	x8, [x8]
    7a70:	mov	x4, x2
    7a74:	mov	x3, x1
    7a78:	sub	x2, x29, #0x4
    7a7c:	mov	x1, x8
    7a80:	bl	8420 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xedc>
    7a84:	ldur	w8, [x29, #-4]
    7a88:	ldp	x29, x30, [sp, #16]
    7a8c:	cmp	w0, #0x0
    7a90:	csel	w0, wzr, w8, eq  // eq = none
    7a94:	add	sp, sp, #0x20
    7a98:	ret
    7a9c:	sub	sp, sp, #0x20
    7aa0:	stp	x29, x30, [sp, #16]
    7aa4:	add	x29, sp, #0x10
    7aa8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7aac:	ldr	x0, [x0, #16]
    7ab0:	ldr	x8, [x8, #4056]
    7ab4:	mov	x4, x2
    7ab8:	mov	x3, x1
    7abc:	sub	x2, x29, #0x4
    7ac0:	ldr	x8, [x8]
    7ac4:	mov	x1, x8
    7ac8:	bl	8520 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfdc>
    7acc:	ldur	w8, [x29, #-4]
    7ad0:	ldp	x29, x30, [sp, #16]
    7ad4:	cmp	w0, #0x0
    7ad8:	csel	w0, wzr, w8, eq  // eq = none
    7adc:	add	sp, sp, #0x20
    7ae0:	ret
    7ae4:	sub	sp, sp, #0x20
    7ae8:	stp	x29, x30, [sp, #16]
    7aec:	add	x29, sp, #0x10
    7af0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7af4:	ldr	x0, [x0, #16]
    7af8:	ldr	x8, [x8, #3936]
    7afc:	mov	x3, x1
    7b00:	add	x2, sp, #0x8
    7b04:	ldr	x8, [x8]
    7b08:	mov	x1, x8
    7b0c:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    7b10:	ldr	x8, [sp, #8]
    7b14:	ldp	x29, x30, [sp, #16]
    7b18:	cmp	w0, #0x0
    7b1c:	csel	x0, xzr, x8, eq  // eq = none
    7b20:	add	sp, sp, #0x20
    7b24:	ret
    7b28:	sub	sp, sp, #0x20
    7b2c:	stp	x29, x30, [sp, #16]
    7b30:	add	x29, sp, #0x10
    7b34:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7b38:	ldr	x0, [x0, #16]
    7b3c:	ldr	x8, [x8, #3432]
    7b40:	mov	x5, x3
    7b44:	mov	x4, x2
    7b48:	mov	x3, x1
    7b4c:	ldr	x8, [x8]
    7b50:	sub	x2, x29, #0x4
    7b54:	mov	x1, x8
    7b58:	bl	85d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1090>
    7b5c:	ldur	w8, [x29, #-4]
    7b60:	ldp	x29, x30, [sp, #16]
    7b64:	cmp	w0, #0x0
    7b68:	csel	w0, wzr, w8, eq  // eq = none
    7b6c:	add	sp, sp, #0x20
    7b70:	ret
    7b74:	sub	sp, sp, #0x20
    7b78:	stp	x29, x30, [sp, #16]
    7b7c:	add	x29, sp, #0x10
    7b80:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7b84:	ldr	x0, [x0, #16]
    7b88:	ldr	x8, [x8, #3648]
    7b8c:	mov	x3, x1
    7b90:	sub	x2, x29, #0x4
    7b94:	ldr	x8, [x8]
    7b98:	mov	x1, x8
    7b9c:	bl	86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1160>
    7ba0:	ldur	w8, [x29, #-4]
    7ba4:	ldp	x29, x30, [sp, #16]
    7ba8:	cmp	w0, #0x0
    7bac:	csel	w0, wzr, w8, eq  // eq = none
    7bb0:	add	sp, sp, #0x20
    7bb4:	ret
    7bb8:	sub	sp, sp, #0x20
    7bbc:	stp	x29, x30, [sp, #16]
    7bc0:	add	x29, sp, #0x10
    7bc4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7bc8:	ldr	x0, [x0, #16]
    7bcc:	ldr	x8, [x8, #3944]
    7bd0:	mov	w5, w3
    7bd4:	mov	x4, x2
    7bd8:	mov	x3, x1
    7bdc:	ldr	x8, [x8]
    7be0:	add	x2, sp, #0x8
    7be4:	mov	x1, x8
    7be8:	bl	8744 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1200>
    7bec:	ldr	x8, [sp, #8]
    7bf0:	ldp	x29, x30, [sp, #16]
    7bf4:	cmp	w0, #0x0
    7bf8:	csel	x0, xzr, x8, eq  // eq = none
    7bfc:	add	sp, sp, #0x20
    7c00:	ret
    7c04:	sub	sp, sp, #0x20
    7c08:	stp	x29, x30, [sp, #16]
    7c0c:	add	x29, sp, #0x10
    7c10:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7c14:	ldr	x0, [x0, #16]
    7c18:	ldr	x8, [x8, #3464]
    7c1c:	mov	x4, x2
    7c20:	mov	w3, w1
    7c24:	add	x2, sp, #0x8
    7c28:	ldr	x8, [x8]
    7c2c:	mov	x1, x8
    7c30:	bl	8814 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12d0>
    7c34:	ldr	x8, [sp, #8]
    7c38:	ldp	x29, x30, [sp, #16]
    7c3c:	cmp	w0, #0x0
    7c40:	csel	x0, xzr, x8, eq  // eq = none
    7c44:	add	sp, sp, #0x20
    7c48:	ret
    7c4c:	sub	sp, sp, #0x20
    7c50:	stp	x29, x30, [sp, #16]
    7c54:	add	x29, sp, #0x10
    7c58:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7c5c:	ldr	x0, [x0, #16]
    7c60:	ldr	x8, [x8, #3520]
    7c64:	mov	x3, x1
    7c68:	add	x2, sp, #0x8
    7c6c:	ldr	x8, [x8]
    7c70:	mov	x1, x8
    7c74:	bl	88c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1384>
    7c78:	ldr	x8, [sp, #8]
    7c7c:	ldp	x29, x30, [sp, #16]
    7c80:	cmp	w0, #0x0
    7c84:	csel	x0, xzr, x8, eq  // eq = none
    7c88:	add	sp, sp, #0x20
    7c8c:	ret
    7c90:	sub	sp, sp, #0x30
    7c94:	stp	x29, x30, [sp, #16]
    7c98:	stp	x20, x19, [sp, #32]
    7c9c:	add	x29, sp, #0x10
    7ca0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7ca4:	ldr	x19, [x0, #16]
    7ca8:	ldr	x8, [x8, #3312]
    7cac:	mov	w1, #0x51                  	// #81
    7cb0:	mov	x0, x19
    7cb4:	ldr	x20, [x8]
    7cb8:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    7cbc:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c4>
    7cc0:	mov	x0, x19
    7cc4:	mov	x1, x20
    7cc8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    7ccc:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c4>
    7cd0:	mov	x0, x19
    7cd4:	mov	x1, xzr
    7cd8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    7cdc:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c4>
    7ce0:	mov	w1, #0x1                   	// #1
    7ce4:	mov	x0, x19
    7ce8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    7cec:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c4>
    7cf0:	add	x1, sp, #0x8
    7cf4:	mov	x0, x19
    7cf8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    7cfc:	cbz	w0, 7d08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c4>
    7d00:	ldr	x0, [sp, #8]
    7d04:	b	7d0c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x7c8>
    7d08:	mov	x0, xzr
    7d0c:	ldp	x20, x19, [sp, #32]
    7d10:	ldp	x29, x30, [sp, #16]
    7d14:	add	sp, sp, #0x30
    7d18:	ret
    7d1c:	sub	sp, sp, #0x30
    7d20:	stp	x29, x30, [sp, #16]
    7d24:	stp	x20, x19, [sp, #32]
    7d28:	add	x29, sp, #0x10
    7d2c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7d30:	ldr	x19, [x0, #16]
    7d34:	ldr	x8, [x8, #3856]
    7d38:	mov	w1, #0x51                  	// #81
    7d3c:	mov	x0, x19
    7d40:	ldr	x20, [x8]
    7d44:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    7d48:	cbz	w0, 7d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    7d4c:	mov	x0, x19
    7d50:	mov	x1, x20
    7d54:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    7d58:	cbz	w0, 7d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    7d5c:	mov	x0, x19
    7d60:	mov	x1, xzr
    7d64:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    7d68:	cbz	w0, 7d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    7d6c:	mov	w1, #0x1                   	// #1
    7d70:	mov	x0, x19
    7d74:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    7d78:	cbz	w0, 7d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    7d7c:	add	x1, sp, #0x8
    7d80:	mov	x0, x19
    7d84:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    7d88:	cbz	w0, 7d94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x850>
    7d8c:	ldr	x0, [sp, #8]
    7d90:	b	7d98 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x854>
    7d94:	mov	x0, xzr
    7d98:	ldp	x20, x19, [sp, #32]
    7d9c:	ldp	x29, x30, [sp, #16]
    7da0:	add	sp, sp, #0x30
    7da4:	ret
    7da8:	sub	sp, sp, #0x20
    7dac:	stp	x29, x30, [sp, #16]
    7db0:	add	x29, sp, #0x10
    7db4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7db8:	ldr	x0, [x0, #16]
    7dbc:	ldr	x8, [x8, #3600]
    7dc0:	mov	w4, w2
    7dc4:	mov	x3, x1
    7dc8:	add	x2, sp, #0x8
    7dcc:	ldr	x8, [x8]
    7dd0:	mov	x1, x8
    7dd4:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    7dd8:	ldr	x8, [sp, #8]
    7ddc:	ldp	x29, x30, [sp, #16]
    7de0:	cmp	w0, #0x0
    7de4:	csel	x0, xzr, x8, eq  // eq = none
    7de8:	add	sp, sp, #0x20
    7dec:	ret
    7df0:	sub	sp, sp, #0x20
    7df4:	stp	x29, x30, [sp, #16]
    7df8:	add	x29, sp, #0x10
    7dfc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7e00:	ldr	x0, [x0, #16]
    7e04:	ldr	x8, [x8, #3200]
    7e08:	mov	x4, x2
    7e0c:	mov	x3, x1
    7e10:	add	x2, sp, #0x8
    7e14:	ldr	x8, [x8]
    7e18:	mov	x1, x8
    7e1c:	bl	8a1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14d8>
    7e20:	ldr	x8, [sp, #8]
    7e24:	ldp	x29, x30, [sp, #16]
    7e28:	cmp	w0, #0x0
    7e2c:	csel	x0, xzr, x8, eq  // eq = none
    7e30:	add	sp, sp, #0x20
    7e34:	ret
    7e38:	sub	sp, sp, #0x20
    7e3c:	stp	x29, x30, [sp, #16]
    7e40:	add	x29, sp, #0x10
    7e44:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7e48:	ldr	x0, [x0, #16]
    7e4c:	ldr	x8, [x8, #3672]
    7e50:	mov	w4, w2
    7e54:	mov	x3, x1
    7e58:	add	x2, sp, #0x8
    7e5c:	ldr	x8, [x8]
    7e60:	mov	x1, x8
    7e64:	bl	8ad0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x158c>
    7e68:	ldr	x8, [sp, #8]
    7e6c:	ldp	x29, x30, [sp, #16]
    7e70:	cmp	w0, #0x0
    7e74:	csel	x0, xzr, x8, eq  // eq = none
    7e78:	add	sp, sp, #0x20
    7e7c:	ret
    7e80:	sub	sp, sp, #0x20
    7e84:	stp	x29, x30, [sp, #16]
    7e88:	add	x29, sp, #0x10
    7e8c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7e90:	ldr	x0, [x0, #16]
    7e94:	ldr	x8, [x8, #3752]
    7e98:	mov	x3, x1
    7e9c:	add	x2, sp, #0x8
    7ea0:	ldr	x8, [x8]
    7ea4:	mov	x1, x8
    7ea8:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    7eac:	ldr	x8, [sp, #8]
    7eb0:	ldp	x29, x30, [sp, #16]
    7eb4:	cmp	w0, #0x0
    7eb8:	csel	x0, xzr, x8, eq  // eq = none
    7ebc:	add	sp, sp, #0x20
    7ec0:	ret
    7ec4:	sub	sp, sp, #0x20
    7ec8:	stp	x29, x30, [sp, #16]
    7ecc:	add	x29, sp, #0x10
    7ed0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7ed4:	ldr	x0, [x0, #16]
    7ed8:	ldr	x8, [x8, #3816]
    7edc:	mov	w4, w2
    7ee0:	mov	x3, x1
    7ee4:	add	x2, sp, #0x8
    7ee8:	ldr	x8, [x8]
    7eec:	mov	x1, x8
    7ef0:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    7ef4:	ldr	x8, [sp, #8]
    7ef8:	ldp	x29, x30, [sp, #16]
    7efc:	cmp	w0, #0x0
    7f00:	csel	x0, xzr, x8, eq  // eq = none
    7f04:	add	sp, sp, #0x20
    7f08:	ret
    7f0c:	sub	sp, sp, #0x20
    7f10:	stp	x29, x30, [sp, #16]
    7f14:	add	x29, sp, #0x10
    7f18:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7f1c:	ldr	x0, [x0, #16]
    7f20:	ldr	x8, [x8, #3392]
    7f24:	mov	w7, w5
    7f28:	mov	x6, x4
    7f2c:	mov	x5, x3
    7f30:	ldr	x8, [x8]
    7f34:	mov	x4, x2
    7f38:	mov	x3, x1
    7f3c:	sub	x2, x29, #0x4
    7f40:	mov	x1, x8
    7f44:	bl	8b84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1640>
    7f48:	ldur	w8, [x29, #-4]
    7f4c:	ldp	x29, x30, [sp, #16]
    7f50:	cmp	w0, #0x0
    7f54:	csel	w0, wzr, w8, eq  // eq = none
    7f58:	add	sp, sp, #0x20
    7f5c:	ret
    7f60:	sub	sp, sp, #0x20
    7f64:	stp	x29, x30, [sp, #16]
    7f68:	add	x29, sp, #0x10
    7f6c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7f70:	ldr	x0, [x0, #16]
    7f74:	ldr	x8, [x8, #3208]
    7f78:	mov	x3, x1
    7f7c:	add	x2, sp, #0x8
    7f80:	ldr	x8, [x8]
    7f84:	mov	x1, x8
    7f88:	bl	8c84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1740>
    7f8c:	ldr	x8, [sp, #8]
    7f90:	ldp	x29, x30, [sp, #16]
    7f94:	cmp	w0, #0x0
    7f98:	csel	x0, xzr, x8, eq  // eq = none
    7f9c:	add	sp, sp, #0x20
    7fa0:	ret
    7fa4:	sub	sp, sp, #0x20
    7fa8:	stp	x29, x30, [sp, #16]
    7fac:	add	x29, sp, #0x10
    7fb0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    7fb4:	ldr	x0, [x0, #16]
    7fb8:	ldr	x8, [x8, #3832]
    7fbc:	mov	x5, x3
    7fc0:	mov	x4, x2
    7fc4:	mov	w3, w1
    7fc8:	ldr	x8, [x8]
    7fcc:	add	x2, sp, #0x8
    7fd0:	mov	x1, x8
    7fd4:	bl	8d24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17e0>
    7fd8:	ldr	x8, [sp, #8]
    7fdc:	ldp	x29, x30, [sp, #16]
    7fe0:	cmp	w0, #0x0
    7fe4:	csel	x0, xzr, x8, eq  // eq = none
    7fe8:	add	sp, sp, #0x20
    7fec:	ret
    7ff0:	sub	sp, sp, #0x30
    7ff4:	stp	x29, x30, [sp, #16]
    7ff8:	stp	x20, x19, [sp, #32]
    7ffc:	add	x29, sp, #0x10
    8000:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    8004:	ldr	x19, [x0, #16]
    8008:	ldr	x8, [x8, #3576]
    800c:	mov	w1, #0x51                  	// #81
    8010:	mov	x0, x19
    8014:	ldr	x20, [x8]
    8018:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    801c:	cbz	w0, 8068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb24>
    8020:	mov	x0, x19
    8024:	mov	x1, x20
    8028:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    802c:	cbz	w0, 8068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb24>
    8030:	mov	x0, x19
    8034:	mov	x1, xzr
    8038:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    803c:	cbz	w0, 8068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb24>
    8040:	mov	w1, #0x1                   	// #1
    8044:	mov	x0, x19
    8048:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    804c:	cbz	w0, 8068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb24>
    8050:	add	x1, sp, #0x8
    8054:	mov	x0, x19
    8058:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    805c:	cbz	w0, 8068 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb24>
    8060:	ldr	x0, [sp, #8]
    8064:	b	806c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xb28>
    8068:	mov	x0, xzr
    806c:	ldp	x20, x19, [sp, #32]
    8070:	ldp	x29, x30, [sp, #16]
    8074:	add	sp, sp, #0x30
    8078:	ret
    807c:	sub	sp, sp, #0x20
    8080:	stp	x29, x30, [sp, #16]
    8084:	add	x29, sp, #0x10
    8088:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    808c:	ldr	x0, [x0, #16]
    8090:	ldr	x8, [x8, #3232]
    8094:	mov	x4, x2
    8098:	mov	x3, x1
    809c:	add	x2, sp, #0x8
    80a0:	ldr	x8, [x8]
    80a4:	mov	x1, x8
    80a8:	bl	8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18b0>
    80ac:	ldr	x8, [sp, #8]
    80b0:	ldp	x29, x30, [sp, #16]
    80b4:	cmp	w0, #0x0
    80b8:	csel	x0, xzr, x8, eq  // eq = none
    80bc:	add	sp, sp, #0x20
    80c0:	ret
    80c4:	sub	sp, sp, #0x60
    80c8:	stp	x29, x30, [sp, #16]
    80cc:	stp	x26, x25, [sp, #32]
    80d0:	stp	x24, x23, [sp, #48]
    80d4:	stp	x22, x21, [sp, #64]
    80d8:	stp	x20, x19, [sp, #80]
    80dc:	add	x29, sp, #0x10
    80e0:	mov	x26, x1
    80e4:	mov	w1, #0x51                  	// #81
    80e8:	mov	x21, x7
    80ec:	mov	x22, x6
    80f0:	mov	x23, x5
    80f4:	mov	w24, w4
    80f8:	mov	x25, x3
    80fc:	mov	x19, x2
    8100:	mov	x20, x0
    8104:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8108:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    810c:	mov	x0, x20
    8110:	mov	x1, x26
    8114:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8118:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    811c:	mov	w1, #0x7                   	// #7
    8120:	mov	x0, x20
    8124:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8128:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    812c:	mov	x0, x20
    8130:	mov	x1, x25
    8134:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8138:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    813c:	mov	w1, w24
    8140:	mov	x0, x20
    8144:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8148:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    814c:	mov	x0, x20
    8150:	mov	x1, x23
    8154:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8158:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    815c:	mov	x0, x20
    8160:	mov	x1, x22
    8164:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8168:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    816c:	mov	x0, x20
    8170:	mov	x1, x21
    8174:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8178:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    817c:	ldr	x1, [x29, #80]
    8180:	mov	x0, x20
    8184:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8188:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    818c:	ldr	w8, [x29, #88]
    8190:	mov	x0, x20
    8194:	mov	w1, w8
    8198:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    819c:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    81a0:	mov	w1, #0x1                   	// #1
    81a4:	mov	x0, x20
    81a8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    81ac:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    81b0:	add	x1, sp, #0x8
    81b4:	mov	x0, x20
    81b8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    81bc:	cbz	w0, 81cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xc88>
    81c0:	ldr	x8, [sp, #8]
    81c4:	mov	w0, #0x1                   	// #1
    81c8:	str	x8, [x19]
    81cc:	ldp	x20, x19, [sp, #80]
    81d0:	ldp	x22, x21, [sp, #64]
    81d4:	ldp	x24, x23, [sp, #48]
    81d8:	ldp	x26, x25, [sp, #32]
    81dc:	ldp	x29, x30, [sp, #16]
    81e0:	add	sp, sp, #0x60
    81e4:	ret
    81e8:	stp	x29, x30, [sp, #-64]!
    81ec:	str	x23, [sp, #16]
    81f0:	stp	x22, x21, [sp, #32]
    81f4:	stp	x20, x19, [sp, #48]
    81f8:	mov	x29, sp
    81fc:	mov	x23, x1
    8200:	mov	w1, #0x51                  	// #81
    8204:	mov	w21, w4
    8208:	mov	x22, x3
    820c:	mov	x19, x2
    8210:	mov	x20, x0
    8214:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8218:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    821c:	mov	x0, x20
    8220:	mov	x1, x23
    8224:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8228:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    822c:	mov	w1, #0x2                   	// #2
    8230:	mov	x0, x20
    8234:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8238:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    823c:	mov	x0, x20
    8240:	mov	x1, x22
    8244:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8248:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    824c:	sxtw	x1, w21
    8250:	mov	x0, x20
    8254:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8258:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    825c:	mov	w1, #0x1                   	// #1
    8260:	mov	x0, x20
    8264:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8268:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    826c:	add	x1, x29, #0x18
    8270:	mov	x0, x20
    8274:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8278:	cbz	w0, 8288 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xd44>
    827c:	ldr	x8, [x29, #24]
    8280:	mov	w0, #0x1                   	// #1
    8284:	str	w8, [x19]
    8288:	ldp	x20, x19, [sp, #48]
    828c:	ldp	x22, x21, [sp, #32]
    8290:	ldr	x23, [sp, #16]
    8294:	ldp	x29, x30, [sp], #64
    8298:	ret
    829c:	stp	x29, x30, [sp, #-80]!
    82a0:	str	x25, [sp, #16]
    82a4:	stp	x24, x23, [sp, #32]
    82a8:	stp	x22, x21, [sp, #48]
    82ac:	stp	x20, x19, [sp, #64]
    82b0:	mov	x29, sp
    82b4:	mov	x25, x1
    82b8:	mov	w1, #0x51                  	// #81
    82bc:	mov	w21, w6
    82c0:	mov	x22, x5
    82c4:	mov	x23, x4
    82c8:	mov	x24, x3
    82cc:	mov	x19, x2
    82d0:	mov	x20, x0
    82d4:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    82d8:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    82dc:	mov	x0, x20
    82e0:	mov	x1, x25
    82e4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    82e8:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    82ec:	mov	w1, #0x4                   	// #4
    82f0:	mov	x0, x20
    82f4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    82f8:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    82fc:	mov	x0, x20
    8300:	mov	x1, x24
    8304:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8308:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    830c:	mov	x0, x20
    8310:	mov	x1, x23
    8314:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8318:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    831c:	mov	x0, x20
    8320:	mov	x1, x22
    8324:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8328:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    832c:	mov	w1, w21
    8330:	mov	x0, x20
    8334:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8338:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    833c:	mov	w1, #0x1                   	// #1
    8340:	mov	x0, x20
    8344:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8348:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    834c:	add	x1, x29, #0x18
    8350:	mov	x0, x20
    8354:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8358:	cbz	w0, 8368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe24>
    835c:	ldr	x8, [x29, #24]
    8360:	mov	w0, #0x1                   	// #1
    8364:	str	w8, [x19]
    8368:	ldp	x20, x19, [sp, #64]
    836c:	ldp	x22, x21, [sp, #48]
    8370:	ldp	x24, x23, [sp, #32]
    8374:	ldr	x25, [sp, #16]
    8378:	ldp	x29, x30, [sp], #80
    837c:	ret
    8380:	sub	sp, sp, #0x40
    8384:	stp	x29, x30, [sp, #16]
    8388:	stp	x22, x21, [sp, #32]
    838c:	stp	x20, x19, [sp, #48]
    8390:	add	x29, sp, #0x10
    8394:	mov	x22, x1
    8398:	mov	w1, #0x51                  	// #81
    839c:	mov	x21, x3
    83a0:	mov	x19, x2
    83a4:	mov	x20, x0
    83a8:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    83ac:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    83b0:	mov	x0, x20
    83b4:	mov	x1, x22
    83b8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    83bc:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    83c0:	mov	w1, #0x1                   	// #1
    83c4:	mov	x0, x20
    83c8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    83cc:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    83d0:	mov	x0, x20
    83d4:	mov	x1, x21
    83d8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    83dc:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    83e0:	mov	w1, #0x1                   	// #1
    83e4:	mov	x0, x20
    83e8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    83ec:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    83f0:	add	x1, sp, #0x8
    83f4:	mov	x0, x20
    83f8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    83fc:	cbz	w0, 840c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xec8>
    8400:	ldr	x8, [sp, #8]
    8404:	mov	w0, #0x1                   	// #1
    8408:	str	x8, [x19]
    840c:	ldp	x20, x19, [sp, #48]
    8410:	ldp	x22, x21, [sp, #32]
    8414:	ldp	x29, x30, [sp, #16]
    8418:	add	sp, sp, #0x40
    841c:	ret
    8420:	sub	sp, sp, #0x60
    8424:	stp	x29, x30, [sp, #16]
    8428:	stp	x26, x25, [sp, #32]
    842c:	stp	x24, x23, [sp, #48]
    8430:	stp	x22, x21, [sp, #64]
    8434:	stp	x20, x19, [sp, #80]
    8438:	add	x29, sp, #0x10
    843c:	mov	x26, x1
    8440:	mov	w1, #0x51                  	// #81
    8444:	mov	x21, x7
    8448:	mov	x22, x6
    844c:	mov	x23, x5
    8450:	mov	x24, x4
    8454:	mov	x25, x3
    8458:	mov	x19, x2
    845c:	mov	x20, x0
    8460:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8464:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    8468:	mov	x0, x20
    846c:	mov	x1, x26
    8470:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8474:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    8478:	mov	w1, #0x5                   	// #5
    847c:	mov	x0, x20
    8480:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8484:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    8488:	mov	x0, x20
    848c:	mov	x1, x25
    8490:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8494:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    8498:	mov	x0, x20
    849c:	mov	x1, x24
    84a0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    84a4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84a8:	mov	x0, x20
    84ac:	mov	x1, x23
    84b0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    84b4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84b8:	mov	x0, x20
    84bc:	mov	x1, x22
    84c0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    84c4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84c8:	mov	x0, x20
    84cc:	mov	x1, x21
    84d0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    84d4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84d8:	mov	w1, #0x1                   	// #1
    84dc:	mov	x0, x20
    84e0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    84e4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84e8:	add	x1, sp, #0x8
    84ec:	mov	x0, x20
    84f0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    84f4:	cbz	w0, 8504 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xfc0>
    84f8:	ldr	x8, [sp, #8]
    84fc:	mov	w0, #0x1                   	// #1
    8500:	str	w8, [x19]
    8504:	ldp	x20, x19, [sp, #80]
    8508:	ldp	x22, x21, [sp, #64]
    850c:	ldp	x24, x23, [sp, #48]
    8510:	ldp	x26, x25, [sp, #32]
    8514:	ldp	x29, x30, [sp, #16]
    8518:	add	sp, sp, #0x60
    851c:	ret
    8520:	stp	x29, x30, [sp, #-64]!
    8524:	str	x23, [sp, #16]
    8528:	stp	x22, x21, [sp, #32]
    852c:	stp	x20, x19, [sp, #48]
    8530:	mov	x29, sp
    8534:	mov	x23, x1
    8538:	mov	w1, #0x51                  	// #81
    853c:	mov	x21, x4
    8540:	mov	x22, x3
    8544:	mov	x19, x2
    8548:	mov	x20, x0
    854c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8550:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    8554:	mov	x0, x20
    8558:	mov	x1, x23
    855c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8560:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    8564:	mov	w1, #0x2                   	// #2
    8568:	mov	x0, x20
    856c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8570:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    8574:	mov	x0, x20
    8578:	mov	x1, x22
    857c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8580:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    8584:	mov	x0, x20
    8588:	mov	x1, x21
    858c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8590:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    8594:	mov	w1, #0x1                   	// #1
    8598:	mov	x0, x20
    859c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    85a0:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    85a4:	add	x1, x29, #0x18
    85a8:	mov	x0, x20
    85ac:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    85b0:	cbz	w0, 85c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x107c>
    85b4:	ldr	x8, [x29, #24]
    85b8:	mov	w0, #0x1                   	// #1
    85bc:	str	w8, [x19]
    85c0:	ldp	x20, x19, [sp, #48]
    85c4:	ldp	x22, x21, [sp, #32]
    85c8:	ldr	x23, [sp, #16]
    85cc:	ldp	x29, x30, [sp], #64
    85d0:	ret
    85d4:	sub	sp, sp, #0x50
    85d8:	stp	x29, x30, [sp, #16]
    85dc:	stp	x24, x23, [sp, #32]
    85e0:	stp	x22, x21, [sp, #48]
    85e4:	stp	x20, x19, [sp, #64]
    85e8:	add	x29, sp, #0x10
    85ec:	mov	x24, x1
    85f0:	mov	w1, #0x51                  	// #81
    85f4:	mov	x21, x5
    85f8:	mov	x22, x4
    85fc:	mov	x23, x3
    8600:	mov	x19, x2
    8604:	mov	x20, x0
    8608:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    860c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8610:	mov	x0, x20
    8614:	mov	x1, x24
    8618:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    861c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8620:	mov	w1, #0x3                   	// #3
    8624:	mov	x0, x20
    8628:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    862c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8630:	mov	x0, x20
    8634:	mov	x1, x23
    8638:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    863c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8640:	mov	x0, x20
    8644:	mov	x1, x22
    8648:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    864c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8650:	mov	x0, x20
    8654:	mov	x1, x21
    8658:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    865c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8660:	mov	w1, #0x1                   	// #1
    8664:	mov	x0, x20
    8668:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    866c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8670:	add	x1, sp, #0x8
    8674:	mov	x0, x20
    8678:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    867c:	cbz	w0, 868c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1148>
    8680:	ldr	x8, [sp, #8]
    8684:	mov	w0, #0x1                   	// #1
    8688:	str	w8, [x19]
    868c:	ldp	x20, x19, [sp, #64]
    8690:	ldp	x22, x21, [sp, #48]
    8694:	ldp	x24, x23, [sp, #32]
    8698:	ldp	x29, x30, [sp, #16]
    869c:	add	sp, sp, #0x50
    86a0:	ret
    86a4:	sub	sp, sp, #0x40
    86a8:	stp	x29, x30, [sp, #16]
    86ac:	stp	x22, x21, [sp, #32]
    86b0:	stp	x20, x19, [sp, #48]
    86b4:	add	x29, sp, #0x10
    86b8:	mov	x22, x1
    86bc:	mov	w1, #0x51                  	// #81
    86c0:	mov	x21, x3
    86c4:	mov	x19, x2
    86c8:	mov	x20, x0
    86cc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    86d0:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    86d4:	mov	x0, x20
    86d8:	mov	x1, x22
    86dc:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    86e0:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    86e4:	mov	w1, #0x1                   	// #1
    86e8:	mov	x0, x20
    86ec:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    86f0:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    86f4:	mov	x0, x20
    86f8:	mov	x1, x21
    86fc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8700:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    8704:	mov	w1, #0x1                   	// #1
    8708:	mov	x0, x20
    870c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8710:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    8714:	add	x1, sp, #0x8
    8718:	mov	x0, x20
    871c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8720:	cbz	w0, 8730 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x11ec>
    8724:	ldr	x8, [sp, #8]
    8728:	mov	w0, #0x1                   	// #1
    872c:	str	w8, [x19]
    8730:	ldp	x20, x19, [sp, #48]
    8734:	ldp	x22, x21, [sp, #32]
    8738:	ldp	x29, x30, [sp, #16]
    873c:	add	sp, sp, #0x40
    8740:	ret
    8744:	sub	sp, sp, #0x50
    8748:	stp	x29, x30, [sp, #16]
    874c:	stp	x24, x23, [sp, #32]
    8750:	stp	x22, x21, [sp, #48]
    8754:	stp	x20, x19, [sp, #64]
    8758:	add	x29, sp, #0x10
    875c:	mov	x24, x1
    8760:	mov	w1, #0x51                  	// #81
    8764:	mov	w21, w5
    8768:	mov	x22, x4
    876c:	mov	x23, x3
    8770:	mov	x19, x2
    8774:	mov	x20, x0
    8778:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    877c:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    8780:	mov	x0, x20
    8784:	mov	x1, x24
    8788:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    878c:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    8790:	mov	w1, #0x3                   	// #3
    8794:	mov	x0, x20
    8798:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    879c:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87a0:	mov	x0, x20
    87a4:	mov	x1, x23
    87a8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    87ac:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87b0:	mov	x0, x20
    87b4:	mov	x1, x22
    87b8:	bl	e48c <gcc_cp_fe_context@@Base+0x4bc8>
    87bc:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87c0:	sxtw	x1, w21
    87c4:	mov	x0, x20
    87c8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    87cc:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87d0:	mov	w1, #0x1                   	// #1
    87d4:	mov	x0, x20
    87d8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    87dc:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87e0:	add	x1, sp, #0x8
    87e4:	mov	x0, x20
    87e8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    87ec:	cbz	w0, 87fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x12b8>
    87f0:	ldr	x8, [sp, #8]
    87f4:	mov	w0, #0x1                   	// #1
    87f8:	str	x8, [x19]
    87fc:	ldp	x20, x19, [sp, #64]
    8800:	ldp	x22, x21, [sp, #48]
    8804:	ldp	x24, x23, [sp, #32]
    8808:	ldp	x29, x30, [sp, #16]
    880c:	add	sp, sp, #0x50
    8810:	ret
    8814:	stp	x29, x30, [sp, #-64]!
    8818:	str	x23, [sp, #16]
    881c:	stp	x22, x21, [sp, #32]
    8820:	stp	x20, x19, [sp, #48]
    8824:	mov	x29, sp
    8828:	mov	x23, x1
    882c:	mov	w1, #0x51                  	// #81
    8830:	mov	x21, x4
    8834:	mov	w22, w3
    8838:	mov	x19, x2
    883c:	mov	x20, x0
    8840:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8844:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8848:	mov	x0, x20
    884c:	mov	x1, x23
    8850:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8854:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8858:	mov	w1, #0x2                   	// #2
    885c:	mov	x0, x20
    8860:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8864:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8868:	sxtw	x1, w22
    886c:	mov	x0, x20
    8870:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8874:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8878:	mov	x0, x20
    887c:	mov	x1, x21
    8880:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8884:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8888:	mov	w1, #0x1                   	// #1
    888c:	mov	x0, x20
    8890:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8894:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    8898:	add	x1, x29, #0x18
    889c:	mov	x0, x20
    88a0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    88a4:	cbz	w0, 88b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1370>
    88a8:	ldr	x8, [x29, #24]
    88ac:	mov	w0, #0x1                   	// #1
    88b0:	str	x8, [x19]
    88b4:	ldp	x20, x19, [sp, #48]
    88b8:	ldp	x22, x21, [sp, #32]
    88bc:	ldr	x23, [sp, #16]
    88c0:	ldp	x29, x30, [sp], #64
    88c4:	ret
    88c8:	sub	sp, sp, #0x40
    88cc:	stp	x29, x30, [sp, #16]
    88d0:	stp	x22, x21, [sp, #32]
    88d4:	stp	x20, x19, [sp, #48]
    88d8:	add	x29, sp, #0x10
    88dc:	mov	x22, x1
    88e0:	mov	w1, #0x51                  	// #81
    88e4:	mov	x21, x3
    88e8:	mov	x19, x2
    88ec:	mov	x20, x0
    88f0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    88f4:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    88f8:	mov	x0, x20
    88fc:	mov	x1, x22
    8900:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8904:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    8908:	mov	w1, #0x1                   	// #1
    890c:	mov	x0, x20
    8910:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8914:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    8918:	mov	x0, x20
    891c:	mov	x1, x21
    8920:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8924:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    8928:	mov	w1, #0x1                   	// #1
    892c:	mov	x0, x20
    8930:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8934:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    8938:	add	x1, sp, #0x8
    893c:	mov	x0, x20
    8940:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8944:	cbz	w0, 8954 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1410>
    8948:	ldr	x8, [sp, #8]
    894c:	mov	w0, #0x1                   	// #1
    8950:	str	x8, [x19]
    8954:	ldp	x20, x19, [sp, #48]
    8958:	ldp	x22, x21, [sp, #32]
    895c:	ldp	x29, x30, [sp, #16]
    8960:	add	sp, sp, #0x40
    8964:	ret
    8968:	stp	x29, x30, [sp, #-64]!
    896c:	str	x23, [sp, #16]
    8970:	stp	x22, x21, [sp, #32]
    8974:	stp	x20, x19, [sp, #48]
    8978:	mov	x29, sp
    897c:	mov	x23, x1
    8980:	mov	w1, #0x51                  	// #81
    8984:	mov	w21, w4
    8988:	mov	x22, x3
    898c:	mov	x19, x2
    8990:	mov	x20, x0
    8994:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8998:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    899c:	mov	x0, x20
    89a0:	mov	x1, x23
    89a4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    89a8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89ac:	mov	w1, #0x2                   	// #2
    89b0:	mov	x0, x20
    89b4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    89b8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89bc:	mov	x0, x20
    89c0:	mov	x1, x22
    89c4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    89c8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89cc:	sxtw	x1, w21
    89d0:	mov	x0, x20
    89d4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    89d8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89dc:	mov	w1, #0x1                   	// #1
    89e0:	mov	x0, x20
    89e4:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    89e8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89ec:	add	x1, x29, #0x18
    89f0:	mov	x0, x20
    89f4:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    89f8:	cbz	w0, 8a08 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c4>
    89fc:	ldr	x8, [x29, #24]
    8a00:	mov	w0, #0x1                   	// #1
    8a04:	str	x8, [x19]
    8a08:	ldp	x20, x19, [sp, #48]
    8a0c:	ldp	x22, x21, [sp, #32]
    8a10:	ldr	x23, [sp, #16]
    8a14:	ldp	x29, x30, [sp], #64
    8a18:	ret
    8a1c:	stp	x29, x30, [sp, #-64]!
    8a20:	str	x23, [sp, #16]
    8a24:	stp	x22, x21, [sp, #32]
    8a28:	stp	x20, x19, [sp, #48]
    8a2c:	mov	x29, sp
    8a30:	mov	x23, x1
    8a34:	mov	w1, #0x51                  	// #81
    8a38:	mov	x21, x4
    8a3c:	mov	x22, x3
    8a40:	mov	x19, x2
    8a44:	mov	x20, x0
    8a48:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8a4c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8a50:	mov	x0, x20
    8a54:	mov	x1, x23
    8a58:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8a5c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8a60:	mov	w1, #0x2                   	// #2
    8a64:	mov	x0, x20
    8a68:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8a6c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8a70:	mov	x0, x20
    8a74:	mov	x1, x22
    8a78:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8a7c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8a80:	mov	x0, x20
    8a84:	mov	x1, x21
    8a88:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8a8c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8a90:	mov	w1, #0x1                   	// #1
    8a94:	mov	x0, x20
    8a98:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8a9c:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8aa0:	add	x1, x29, #0x18
    8aa4:	mov	x0, x20
    8aa8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8aac:	cbz	w0, 8abc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1578>
    8ab0:	ldr	x8, [x29, #24]
    8ab4:	mov	w0, #0x1                   	// #1
    8ab8:	str	x8, [x19]
    8abc:	ldp	x20, x19, [sp, #48]
    8ac0:	ldp	x22, x21, [sp, #32]
    8ac4:	ldr	x23, [sp, #16]
    8ac8:	ldp	x29, x30, [sp], #64
    8acc:	ret
    8ad0:	stp	x29, x30, [sp, #-64]!
    8ad4:	str	x23, [sp, #16]
    8ad8:	stp	x22, x21, [sp, #32]
    8adc:	stp	x20, x19, [sp, #48]
    8ae0:	mov	x29, sp
    8ae4:	mov	x23, x1
    8ae8:	mov	w1, #0x51                  	// #81
    8aec:	mov	w21, w4
    8af0:	mov	x22, x3
    8af4:	mov	x19, x2
    8af8:	mov	x20, x0
    8afc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8b00:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b04:	mov	x0, x20
    8b08:	mov	x1, x23
    8b0c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8b10:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b14:	mov	w1, #0x2                   	// #2
    8b18:	mov	x0, x20
    8b1c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8b20:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b24:	mov	x0, x20
    8b28:	mov	x1, x22
    8b2c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8b30:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b34:	mov	w1, w21
    8b38:	mov	x0, x20
    8b3c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8b40:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b44:	mov	w1, #0x1                   	// #1
    8b48:	mov	x0, x20
    8b4c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8b50:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b54:	add	x1, x29, #0x18
    8b58:	mov	x0, x20
    8b5c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8b60:	cbz	w0, 8b70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x162c>
    8b64:	ldr	x8, [x29, #24]
    8b68:	mov	w0, #0x1                   	// #1
    8b6c:	str	x8, [x19]
    8b70:	ldp	x20, x19, [sp, #48]
    8b74:	ldp	x22, x21, [sp, #32]
    8b78:	ldr	x23, [sp, #16]
    8b7c:	ldp	x29, x30, [sp], #64
    8b80:	ret
    8b84:	sub	sp, sp, #0x60
    8b88:	stp	x29, x30, [sp, #16]
    8b8c:	stp	x26, x25, [sp, #32]
    8b90:	stp	x24, x23, [sp, #48]
    8b94:	stp	x22, x21, [sp, #64]
    8b98:	stp	x20, x19, [sp, #80]
    8b9c:	add	x29, sp, #0x10
    8ba0:	mov	x26, x1
    8ba4:	mov	w1, #0x51                  	// #81
    8ba8:	mov	w21, w7
    8bac:	mov	x22, x6
    8bb0:	mov	x23, x5
    8bb4:	mov	x24, x4
    8bb8:	mov	x25, x3
    8bbc:	mov	x19, x2
    8bc0:	mov	x20, x0
    8bc4:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8bc8:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8bcc:	mov	x0, x20
    8bd0:	mov	x1, x26
    8bd4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8bd8:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8bdc:	mov	w1, #0x5                   	// #5
    8be0:	mov	x0, x20
    8be4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8be8:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8bec:	mov	x0, x20
    8bf0:	mov	x1, x25
    8bf4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8bf8:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8bfc:	mov	x0, x20
    8c00:	mov	x1, x24
    8c04:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8c08:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c0c:	mov	x0, x20
    8c10:	mov	x1, x23
    8c14:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8c18:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c1c:	mov	x0, x20
    8c20:	mov	x1, x22
    8c24:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8c28:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c2c:	mov	w1, w21
    8c30:	mov	x0, x20
    8c34:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8c38:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c3c:	mov	w1, #0x1                   	// #1
    8c40:	mov	x0, x20
    8c44:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8c48:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c4c:	add	x1, sp, #0x8
    8c50:	mov	x0, x20
    8c54:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8c58:	cbz	w0, 8c68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1724>
    8c5c:	ldr	x8, [sp, #8]
    8c60:	mov	w0, #0x1                   	// #1
    8c64:	str	w8, [x19]
    8c68:	ldp	x20, x19, [sp, #80]
    8c6c:	ldp	x22, x21, [sp, #64]
    8c70:	ldp	x24, x23, [sp, #48]
    8c74:	ldp	x26, x25, [sp, #32]
    8c78:	ldp	x29, x30, [sp, #16]
    8c7c:	add	sp, sp, #0x60
    8c80:	ret
    8c84:	sub	sp, sp, #0x40
    8c88:	stp	x29, x30, [sp, #16]
    8c8c:	stp	x22, x21, [sp, #32]
    8c90:	stp	x20, x19, [sp, #48]
    8c94:	add	x29, sp, #0x10
    8c98:	mov	x22, x1
    8c9c:	mov	w1, #0x51                  	// #81
    8ca0:	mov	x21, x3
    8ca4:	mov	x19, x2
    8ca8:	mov	x20, x0
    8cac:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8cb0:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8cb4:	mov	x0, x20
    8cb8:	mov	x1, x22
    8cbc:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8cc0:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8cc4:	mov	w1, #0x1                   	// #1
    8cc8:	mov	x0, x20
    8ccc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8cd0:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8cd4:	mov	x0, x20
    8cd8:	mov	x1, x21
    8cdc:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8ce0:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8ce4:	mov	w1, #0x1                   	// #1
    8ce8:	mov	x0, x20
    8cec:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8cf0:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8cf4:	add	x1, sp, #0x8
    8cf8:	mov	x0, x20
    8cfc:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8d00:	cbz	w0, 8d10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17cc>
    8d04:	ldr	x8, [sp, #8]
    8d08:	mov	w0, #0x1                   	// #1
    8d0c:	str	x8, [x19]
    8d10:	ldp	x20, x19, [sp, #48]
    8d14:	ldp	x22, x21, [sp, #32]
    8d18:	ldp	x29, x30, [sp, #16]
    8d1c:	add	sp, sp, #0x40
    8d20:	ret
    8d24:	sub	sp, sp, #0x50
    8d28:	stp	x29, x30, [sp, #16]
    8d2c:	stp	x24, x23, [sp, #32]
    8d30:	stp	x22, x21, [sp, #48]
    8d34:	stp	x20, x19, [sp, #64]
    8d38:	add	x29, sp, #0x10
    8d3c:	mov	x24, x1
    8d40:	mov	w1, #0x51                  	// #81
    8d44:	mov	x21, x5
    8d48:	mov	x22, x4
    8d4c:	mov	w23, w3
    8d50:	mov	x19, x2
    8d54:	mov	x20, x0
    8d58:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8d5c:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8d60:	mov	x0, x20
    8d64:	mov	x1, x24
    8d68:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8d6c:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8d70:	mov	w1, #0x3                   	// #3
    8d74:	mov	x0, x20
    8d78:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8d7c:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8d80:	sxtw	x1, w23
    8d84:	mov	x0, x20
    8d88:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8d8c:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8d90:	mov	x0, x20
    8d94:	mov	x1, x22
    8d98:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8d9c:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8da0:	mov	x0, x20
    8da4:	mov	x1, x21
    8da8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8dac:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8db0:	mov	w1, #0x1                   	// #1
    8db4:	mov	x0, x20
    8db8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8dbc:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8dc0:	add	x1, sp, #0x8
    8dc4:	mov	x0, x20
    8dc8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8dcc:	cbz	w0, 8ddc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1898>
    8dd0:	ldr	x8, [sp, #8]
    8dd4:	mov	w0, #0x1                   	// #1
    8dd8:	str	x8, [x19]
    8ddc:	ldp	x20, x19, [sp, #64]
    8de0:	ldp	x22, x21, [sp, #48]
    8de4:	ldp	x24, x23, [sp, #32]
    8de8:	ldp	x29, x30, [sp, #16]
    8dec:	add	sp, sp, #0x50
    8df0:	ret
    8df4:	stp	x29, x30, [sp, #-64]!
    8df8:	str	x23, [sp, #16]
    8dfc:	stp	x22, x21, [sp, #32]
    8e00:	stp	x20, x19, [sp, #48]
    8e04:	mov	x29, sp
    8e08:	mov	x23, x1
    8e0c:	mov	w1, #0x51                  	// #81
    8e10:	mov	x21, x4
    8e14:	mov	x22, x3
    8e18:	mov	x19, x2
    8e1c:	mov	x20, x0
    8e20:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    8e24:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e28:	mov	x0, x20
    8e2c:	mov	x1, x23
    8e30:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8e34:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e38:	mov	w1, #0x2                   	// #2
    8e3c:	mov	x0, x20
    8e40:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8e44:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e48:	mov	x0, x20
    8e4c:	mov	x1, x22
    8e50:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    8e54:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e58:	mov	x0, x20
    8e5c:	mov	x1, x21
    8e60:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    8e64:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e68:	mov	w1, #0x1                   	// #1
    8e6c:	mov	x0, x20
    8e70:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    8e74:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e78:	add	x1, x29, #0x18
    8e7c:	mov	x0, x20
    8e80:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8e84:	cbz	w0, 8e94 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1950>
    8e88:	ldr	x8, [x29, #24]
    8e8c:	mov	w0, #0x1                   	// #1
    8e90:	str	x8, [x19]
    8e94:	ldp	x20, x19, [sp, #48]
    8e98:	ldp	x22, x21, [sp, #32]
    8e9c:	ldr	x23, [sp, #16]
    8ea0:	ldp	x29, x30, [sp], #64
    8ea4:	ret
    8ea8:	stp	x29, x30, [sp, #-32]!
    8eac:	str	x19, [sp, #16]
    8eb0:	mov	x29, sp
    8eb4:	mov	x19, x1
    8eb8:	add	x1, x29, #0x18
    8ebc:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8ec0:	cbz	w0, 8ed0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x198c>
    8ec4:	ldr	x8, [x29, #24]
    8ec8:	mov	w0, #0x1                   	// #1
    8ecc:	str	w8, [x19]
    8ed0:	ldr	x19, [sp, #16]
    8ed4:	ldp	x29, x30, [sp], #32
    8ed8:	ret
    8edc:	stp	x29, x30, [sp, #-32]!
    8ee0:	str	x19, [sp, #16]
    8ee4:	mov	x29, sp
    8ee8:	mov	x19, x1
    8eec:	add	x1, x29, #0x18
    8ef0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8ef4:	cbz	w0, 8f04 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19c0>
    8ef8:	ldr	x8, [x29, #24]
    8efc:	mov	w0, #0x1                   	// #1
    8f00:	str	w8, [x19]
    8f04:	ldr	x19, [sp, #16]
    8f08:	ldp	x29, x30, [sp], #32
    8f0c:	ret
    8f10:	stp	x29, x30, [sp, #-32]!
    8f14:	str	x19, [sp, #16]
    8f18:	mov	x29, sp
    8f1c:	mov	x19, x1
    8f20:	add	x1, x29, #0x18
    8f24:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8f28:	cbz	w0, 8f38 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x19f4>
    8f2c:	ldr	x8, [x29, #24]
    8f30:	mov	w0, #0x1                   	// #1
    8f34:	str	w8, [x19]
    8f38:	ldr	x19, [sp, #16]
    8f3c:	ldp	x29, x30, [sp], #32
    8f40:	ret
    8f44:	stp	x29, x30, [sp, #-32]!
    8f48:	str	x19, [sp, #16]
    8f4c:	mov	x29, sp
    8f50:	mov	x19, x1
    8f54:	add	x1, x29, #0x18
    8f58:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    8f5c:	cbz	w0, 8f6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a28>
    8f60:	ldr	x8, [x29, #24]
    8f64:	mov	w0, #0x1                   	// #1
    8f68:	str	w8, [x19]
    8f6c:	ldr	x19, [sp, #16]
    8f70:	ldp	x29, x30, [sp], #32
    8f74:	ret
    8f78:	stp	x29, x30, [sp, #-48]!
    8f7c:	str	x21, [sp, #16]
    8f80:	stp	x20, x19, [sp, #32]
    8f84:	mov	x29, sp
    8f88:	mov	x20, x1
    8f8c:	mov	x19, x0
    8f90:	cbz	x1, 8f9c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a58>
    8f94:	ldrsw	x21, [x20]
    8f98:	b	8fa0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1a5c>
    8f9c:	mov	x21, #0xffffffffffffffff    	// #-1
    8fa0:	mov	w1, #0x76                  	// #118
    8fa4:	mov	x0, x19
    8fa8:	mov	x2, x21
    8fac:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    8fb0:	cmp	w0, #0x0
    8fb4:	mov	w8, w0
    8fb8:	cset	w0, ne  // ne = any
    8fbc:	cbz	w8, 8ff4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ab0>
    8fc0:	cbz	x20, 8ff4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ab0>
    8fc4:	ldr	x2, [x20, #8]
    8fc8:	lsl	x1, x21, #3
    8fcc:	mov	x0, x19
    8fd0:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    8fd4:	cbz	w0, 8ff4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ab0>
    8fd8:	ldr	x2, [x20, #16]
    8fdc:	lsl	x1, x21, #2
    8fe0:	mov	x0, x19
    8fe4:	ldp	x20, x19, [sp, #32]
    8fe8:	ldr	x21, [sp, #16]
    8fec:	ldp	x29, x30, [sp], #48
    8ff0:	b	e41c <gcc_cp_fe_context@@Base+0x4b58>
    8ff4:	ldp	x20, x19, [sp, #32]
    8ff8:	ldr	x21, [sp, #16]
    8ffc:	ldp	x29, x30, [sp], #48
    9000:	ret
    9004:	stp	x29, x30, [sp, #-64]!
    9008:	str	x23, [sp, #16]
    900c:	stp	x22, x21, [sp, #32]
    9010:	stp	x20, x19, [sp, #48]
    9014:	mov	x29, sp
    9018:	mov	x20, x1
    901c:	add	x2, x29, #0x18
    9020:	mov	w1, #0x76                  	// #118
    9024:	mov	x21, x0
    9028:	bl	e42c <gcc_cp_fe_context@@Base+0x4b68>
    902c:	cbz	w0, 90e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ba0>
    9030:	ldr	x22, [x29, #24]
    9034:	cmn	x22, #0x1
    9038:	b.eq	90ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b68>  // b.none
    903c:	mov	w0, #0x18                  	// #24
    9040:	bl	5220 <_Znwm@plt>
    9044:	cmp	xzr, x22, lsr #61
    9048:	lsl	x23, x22, #3
    904c:	mov	x19, x0
    9050:	str	w22, [x0]
    9054:	csinv	x0, x23, xzr, eq  // eq = none
    9058:	bl	4fa0 <_Znam@plt>
    905c:	mov	x22, x0
    9060:	str	x0, [x19, #8]
    9064:	mov	x0, x21
    9068:	mov	x1, x23
    906c:	mov	x2, x22
    9070:	bl	e47c <gcc_cp_fe_context@@Base+0x4bb8>
    9074:	cbz	w0, 90b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b74>
    9078:	ldr	x8, [x29, #24]
    907c:	cmp	xzr, x8, lsr #62
    9080:	lsl	x22, x8, #2
    9084:	csinv	x0, x22, xzr, eq  // eq = none
    9088:	bl	4fa0 <_Znam@plt>
    908c:	mov	x2, x0
    9090:	str	x0, [x19, #16]
    9094:	mov	x0, x21
    9098:	mov	x1, x22
    909c:	bl	e47c <gcc_cp_fe_context@@Base+0x4bb8>
    90a0:	cbz	w0, 90c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b7c>
    90a4:	str	x19, [x20]
    90a8:	b	90b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b6c>
    90ac:	str	xzr, [x20]
    90b0:	mov	w0, #0x1                   	// #1
    90b4:	b	90e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ba0>
    90b8:	mov	x0, x22
    90bc:	b	90d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b90>
    90c0:	ldr	x0, [x19, #16]
    90c4:	cbz	x0, 90cc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b88>
    90c8:	bl	52b0 <_ZdaPv@plt>
    90cc:	ldr	x0, [x19, #8]
    90d0:	cbz	x0, 90d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1b94>
    90d4:	bl	52b0 <_ZdaPv@plt>
    90d8:	mov	x0, x19
    90dc:	bl	5210 <_ZdlPv@plt>
    90e0:	mov	w0, wzr
    90e4:	ldp	x20, x19, [sp, #48]
    90e8:	ldp	x22, x21, [sp, #32]
    90ec:	ldr	x23, [sp, #16]
    90f0:	ldp	x29, x30, [sp], #64
    90f4:	ret
    90f8:	stp	x29, x30, [sp, #-48]!
    90fc:	str	x21, [sp, #16]
    9100:	stp	x20, x19, [sp, #32]
    9104:	mov	x29, sp
    9108:	mov	x20, x1
    910c:	mov	x19, x0
    9110:	cbz	x1, 911c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bd8>
    9114:	ldrsw	x21, [x20]
    9118:	b	9120 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1bdc>
    911c:	mov	x21, #0xffffffffffffffff    	// #-1
    9120:	mov	w1, #0x74                  	// #116
    9124:	mov	x0, x19
    9128:	mov	x2, x21
    912c:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    9130:	cmp	w0, #0x0
    9134:	mov	w8, w0
    9138:	cset	w0, ne  // ne = any
    913c:	cbz	w8, 9174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c30>
    9140:	cbz	x20, 9174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c30>
    9144:	ldr	x2, [x20, #8]
    9148:	mov	x0, x19
    914c:	mov	x1, x21
    9150:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    9154:	cbz	w0, 9174 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1c30>
    9158:	ldr	x2, [x20, #16]
    915c:	lsl	x1, x21, #3
    9160:	mov	x0, x19
    9164:	ldp	x20, x19, [sp, #32]
    9168:	ldr	x21, [sp, #16]
    916c:	ldp	x29, x30, [sp], #48
    9170:	b	e41c <gcc_cp_fe_context@@Base+0x4b58>
    9174:	ldp	x20, x19, [sp, #32]
    9178:	ldr	x21, [sp, #16]
    917c:	ldp	x29, x30, [sp], #48
    9180:	ret
    9184:	stp	x29, x30, [sp, #-64]!
    9188:	str	x23, [sp, #16]
    918c:	stp	x22, x21, [sp, #32]
    9190:	stp	x20, x19, [sp, #48]
    9194:	mov	x29, sp
    9198:	mov	x20, x1
    919c:	add	x2, x29, #0x18
    91a0:	mov	w1, #0x74                  	// #116
    91a4:	mov	x21, x0
    91a8:	bl	e42c <gcc_cp_fe_context@@Base+0x4b68>
    91ac:	cbz	w0, 925c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d18>
    91b0:	ldr	x22, [x29, #24]
    91b4:	cmn	x22, #0x1
    91b8:	b.eq	9224 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ce0>  // b.none
    91bc:	mov	w0, #0x18                  	// #24
    91c0:	bl	5220 <_Znwm@plt>
    91c4:	mov	x19, x0
    91c8:	str	w22, [x0]
    91cc:	mov	x0, x22
    91d0:	bl	4fa0 <_Znam@plt>
    91d4:	mov	x23, x0
    91d8:	str	x0, [x19, #8]
    91dc:	mov	x0, x21
    91e0:	mov	x1, x22
    91e4:	mov	x2, x23
    91e8:	bl	e47c <gcc_cp_fe_context@@Base+0x4bb8>
    91ec:	cbz	w0, 9230 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1cec>
    91f0:	ldr	x8, [x29, #24]
    91f4:	cmp	xzr, x8, lsr #61
    91f8:	lsl	x22, x8, #3
    91fc:	csinv	x0, x22, xzr, eq  // eq = none
    9200:	bl	4fa0 <_Znam@plt>
    9204:	mov	x2, x0
    9208:	str	x0, [x19, #16]
    920c:	mov	x0, x21
    9210:	mov	x1, x22
    9214:	bl	e47c <gcc_cp_fe_context@@Base+0x4bb8>
    9218:	cbz	w0, 9238 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1cf4>
    921c:	str	x19, [x20]
    9220:	b	9228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1ce4>
    9224:	str	xzr, [x20]
    9228:	mov	w0, #0x1                   	// #1
    922c:	b	925c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d18>
    9230:	mov	x0, x23
    9234:	b	924c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d08>
    9238:	ldr	x0, [x19, #16]
    923c:	cbz	x0, 9244 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d00>
    9240:	bl	52b0 <_ZdaPv@plt>
    9244:	ldr	x0, [x19, #8]
    9248:	cbz	x0, 9250 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d0c>
    924c:	bl	52b0 <_ZdaPv@plt>
    9250:	mov	x0, x19
    9254:	bl	5210 <_ZdlPv@plt>
    9258:	mov	w0, wzr
    925c:	ldp	x20, x19, [sp, #48]
    9260:	ldp	x22, x21, [sp, #32]
    9264:	ldr	x23, [sp, #16]
    9268:	ldp	x29, x30, [sp], #64
    926c:	ret
    9270:	stp	x29, x30, [sp, #-48]!
    9274:	str	x21, [sp, #16]
    9278:	stp	x20, x19, [sp, #32]
    927c:	mov	x29, sp
    9280:	mov	x20, x1
    9284:	mov	x19, x0
    9288:	cbz	x1, 9294 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d50>
    928c:	ldrsw	x21, [x20]
    9290:	b	9298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d54>
    9294:	mov	x21, #0xffffffffffffffff    	// #-1
    9298:	mov	w1, #0x64                  	// #100
    929c:	mov	x0, x19
    92a0:	mov	x2, x21
    92a4:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    92a8:	cmp	w0, #0x0
    92ac:	mov	w8, w0
    92b0:	cset	w0, ne  // ne = any
    92b4:	cbz	w8, 92d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d94>
    92b8:	cbz	x20, 92d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1d94>
    92bc:	ldr	x2, [x20, #8]
    92c0:	lsl	x1, x21, #3
    92c4:	mov	x0, x19
    92c8:	ldp	x20, x19, [sp, #32]
    92cc:	ldr	x21, [sp, #16]
    92d0:	ldp	x29, x30, [sp], #48
    92d4:	b	e41c <gcc_cp_fe_context@@Base+0x4b58>
    92d8:	ldp	x20, x19, [sp, #32]
    92dc:	ldr	x21, [sp, #16]
    92e0:	ldp	x29, x30, [sp], #48
    92e4:	ret
    92e8:	stp	x29, x30, [sp, #-64]!
    92ec:	str	x23, [sp, #16]
    92f0:	stp	x22, x21, [sp, #32]
    92f4:	stp	x20, x19, [sp, #48]
    92f8:	mov	x29, sp
    92fc:	mov	x19, x1
    9300:	add	x2, x29, #0x18
    9304:	mov	w1, #0x64                  	// #100
    9308:	mov	x20, x0
    930c:	bl	e42c <gcc_cp_fe_context@@Base+0x4b68>
    9310:	cbz	w0, 9384 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e40>
    9314:	ldr	x22, [x29, #24]
    9318:	cmn	x22, #0x1
    931c:	b.eq	9364 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e20>  // b.none
    9320:	mov	w0, #0x10                  	// #16
    9324:	bl	5220 <_Znwm@plt>
    9328:	cmp	xzr, x22, lsr #61
    932c:	lsl	x23, x22, #3
    9330:	mov	x21, x0
    9334:	str	w22, [x0]
    9338:	csinv	x0, x23, xzr, eq  // eq = none
    933c:	bl	4fa0 <_Znam@plt>
    9340:	mov	x22, x0
    9344:	str	x0, [x21, #8]
    9348:	mov	x0, x20
    934c:	mov	x1, x23
    9350:	mov	x2, x22
    9354:	bl	e47c <gcc_cp_fe_context@@Base+0x4bb8>
    9358:	cbz	w0, 9370 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e2c>
    935c:	str	x21, [x19]
    9360:	b	9368 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e24>
    9364:	str	xzr, [x19]
    9368:	mov	w0, #0x1                   	// #1
    936c:	b	9384 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1e40>
    9370:	mov	x0, x22
    9374:	bl	52b0 <_ZdaPv@plt>
    9378:	mov	x0, x21
    937c:	bl	5210 <_ZdlPv@plt>
    9380:	mov	w0, wzr
    9384:	ldp	x20, x19, [sp, #48]
    9388:	ldp	x22, x21, [sp, #32]
    938c:	ldr	x23, [sp, #16]
    9390:	ldp	x29, x30, [sp], #64
    9394:	ret
    9398:	stp	x29, x30, [sp, #-48]!
    939c:	str	x21, [sp, #16]
    93a0:	stp	x20, x19, [sp, #32]
    93a4:	mov	x29, sp
    93a8:	movi	v0.2d, #0x0
    93ac:	mov	x8, x0
    93b0:	stp	xzr, xzr, [x0, #16]
    93b4:	str	xzr, [x0, #32]
    93b8:	stur	q0, [x0, #56]
    93bc:	stur	q0, [x0, #72]
    93c0:	stur	q0, [x0, #88]
    93c4:	strb	wzr, [x8, #120]!
    93c8:	mov	x21, x0
    93cc:	stp	x8, xzr, [x0, #104]
    93d0:	strb	wzr, [x0, #136]
    93d4:	mov	w0, #0x10                  	// #16
    93d8:	mov	x19, x2
    93dc:	mov	x20, x1
    93e0:	bl	5220 <_Znwm@plt>
    93e4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    93e8:	add	x8, x8, #0x8b0
    93ec:	stp	x8, x21, [x0]
    93f0:	str	x0, [x21, #144]
    93f4:	stp	x20, x19, [x21]
    93f8:	ldp	x20, x19, [sp, #32]
    93fc:	ldr	x21, [sp, #16]
    9400:	ldp	x29, x30, [sp], #48
    9404:	ret
    9408:	stp	x29, x30, [sp, #-48]!
    940c:	str	x21, [sp, #16]
    9410:	stp	x20, x19, [sp, #32]
    9414:	mov	x29, sp
    9418:	mov	x19, x0
    941c:	ldr	x0, [x0, #16]
    9420:	cbz	x0, 9430 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1eec>
    9424:	ldr	x8, [x0]
    9428:	ldr	x8, [x8, #8]
    942c:	blr	x8
    9430:	ldr	x0, [x19, #144]
    9434:	cbz	x0, 9444 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f00>
    9438:	ldr	x8, [x0]
    943c:	ldr	x8, [x8, #16]
    9440:	blr	x8
    9444:	ldr	x0, [x19, #104]
    9448:	add	x8, x19, #0x78
    944c:	cmp	x0, x8
    9450:	b.eq	9458 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f14>  // b.none
    9454:	bl	5210 <_ZdlPv@plt>
    9458:	ldp	x20, x21, [x19, #80]
    945c:	cmp	x20, x21
    9460:	b.ne	9488 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f44>  // b.any
    9464:	cbz	x20, 94a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f60>
    9468:	mov	x0, x20
    946c:	ldp	x20, x19, [sp, #32]
    9470:	ldr	x21, [sp, #16]
    9474:	ldp	x29, x30, [sp], #48
    9478:	b	5210 <_ZdlPv@plt>
    947c:	add	x20, x20, #0x10
    9480:	cmp	x20, x21
    9484:	b.eq	949c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f58>  // b.none
    9488:	ldr	x0, [x20], #16
    948c:	cmp	x0, x20
    9490:	b.eq	947c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f38>  // b.none
    9494:	bl	5210 <_ZdlPv@plt>
    9498:	b	947c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f38>
    949c:	ldr	x20, [x19, #80]
    94a0:	cbnz	x20, 9468 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1f24>
    94a4:	ldp	x20, x19, [sp, #32]
    94a8:	ldr	x21, [sp, #16]
    94ac:	ldp	x29, x30, [sp], #48
    94b0:	ret
    94b4:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    94b8:	add	x0, x0, #0xcc9
    94bc:	b	50e0 <xstrdup@plt>
    94c0:	stp	x29, x30, [sp, #-80]!
    94c4:	stp	x28, x25, [sp, #16]
    94c8:	stp	x24, x23, [sp, #32]
    94cc:	stp	x22, x21, [sp, #48]
    94d0:	stp	x20, x19, [sp, #64]
    94d4:	mov	x29, sp
    94d8:	sub	sp, sp, #0x1b0
    94dc:	mov	x19, sp
    94e0:	ldr	x23, [x0, #16]
    94e4:	mov	x21, x0
    94e8:	add	x0, x19, #0x20
    94ec:	mov	x20, x1
    94f0:	add	x22, x19, #0x20
    94f4:	bl	51a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    94f8:	add	x22, x22, #0x10
    94fc:	adrp	x1, 16000 <xexit@@Base+0x4dc>
    9500:	add	x1, x1, #0x8db
    9504:	mov	w2, #0x1                   	// #1
    9508:	mov	x0, x22
    950c:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    9510:	cbz	x23, 9530 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1fec>
    9514:	mov	x0, x23
    9518:	bl	5060 <strlen@plt>
    951c:	mov	x2, x0
    9520:	mov	x0, x22
    9524:	mov	x1, x23
    9528:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    952c:	b	9548 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2004>
    9530:	ldr	x8, [x19, #48]
    9534:	ldur	x8, [x8, #-24]
    9538:	add	x0, x22, x8
    953c:	ldr	w8, [x0, #32]
    9540:	orr	w1, w8, #0x1
    9544:	bl	5430 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt>
    9548:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    954c:	add	x1, x1, #0xd93
    9550:	mov	w2, #0x1                   	// #1
    9554:	mov	x0, x22
    9558:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    955c:	adrp	x23, 15000 <htab_find_with_hash@@Base+0xdc>
    9560:	adrp	x24, 15000 <htab_find_with_hash@@Base+0xdc>
    9564:	add	x23, x23, #0xf24
    9568:	add	x24, x24, #0xe4d
    956c:	mov	w25, #0x5c                  	// #92
    9570:	ldrb	w8, [x23]
    9574:	cmp	w8, #0x7c
    9578:	b.hi	95a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2060>  // b.pmore
    957c:	adr	x9, 958c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2048>
    9580:	ldrb	w10, [x24, x8]
    9584:	add	x9, x9, x10, lsl #2
    9588:	br	x9
    958c:	sturb	w25, [x29, #-4]
    9590:	sub	x1, x29, #0x4
    9594:	mov	w2, #0x1                   	// #1
    9598:	mov	x0, x22
    959c:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95a0:	ldrb	w8, [x23]
    95a4:	sturb	w8, [x29, #-4]
    95a8:	sub	x1, x29, #0x4
    95ac:	mov	w2, #0x1                   	// #1
    95b0:	mov	x0, x22
    95b4:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95b8:	add	x23, x23, #0x1
    95bc:	b	9570 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x202c>
    95c0:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    95c4:	add	x1, x1, #0xd95
    95c8:	mov	w2, #0x1                   	// #1
    95cc:	mov	x0, x22
    95d0:	bl	5260 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@plt>
    95d4:	add	x23, x19, #0x20
    95d8:	add	x0, x23, #0x18
    95dc:	add	x8, x19, #0x0
    95e0:	bl	53b0 <_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@plt>
    95e4:	adrp	x22, 2a000 <xexit@@Base+0x144dc>
    95e8:	ldr	x22, [x22, #3304]
    95ec:	ldr	x8, [x22]
    95f0:	ldp	x9, x10, [x22, #64]
    95f4:	str	x8, [x19, #32]
    95f8:	ldur	x8, [x8, #-24]
    95fc:	str	x9, [x23, x8]
    9600:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    9604:	ldr	x0, [x19, #128]
    9608:	ldr	x8, [x8, #4048]
    960c:	add	x9, x23, #0x70
    9610:	cmp	x0, x9
    9614:	add	x8, x8, #0x10
    9618:	stp	x10, x8, [x19, #48]
    961c:	b.eq	9624 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x20e0>  // b.none
    9620:	bl	5210 <_ZdlPv@plt>
    9624:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    9628:	ldr	x8, [x8, #3440]
    962c:	add	x23, x19, #0x20
    9630:	add	x0, x23, #0x50
    9634:	add	x8, x8, #0x10
    9638:	str	x8, [x19, #56]
    963c:	bl	5310 <_ZNSt6localeD1Ev@plt>
    9640:	ldp	x8, x9, [x22, #16]
    9644:	add	x0, x23, #0x80
    9648:	str	x8, [x19, #32]
    964c:	ldur	x8, [x8, #-24]
    9650:	str	x9, [x23, x8]
    9654:	str	xzr, [x19, #40]
    9658:	bl	50a0 <_ZNSt8ios_baseD2Ev@plt>
    965c:	ldr	x8, [x21, #8]
    9660:	ldrb	w8, [x8, #136]
    9664:	cbnz	w8, 9778 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2234>
    9668:	ldr	x1, [x19]
    966c:	add	x0, x19, #0x20
    9670:	mov	w2, #0x9                   	// #9
    9674:	bl	4fd0 <xregcomp@plt>
    9678:	mov	w22, w0
    967c:	cbz	w0, 96ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21a8>
    9680:	add	x1, x19, #0x20
    9684:	mov	w0, w22
    9688:	mov	x2, xzr
    968c:	mov	x3, xzr
    9690:	bl	5440 <xregerror@plt>
    9694:	add	x9, x0, #0xf
    9698:	mov	x8, sp
    969c:	and	x9, x9, #0xfffffffffffffff0
    96a0:	mov	x21, sp
    96a4:	sub	x20, x8, x9
    96a8:	mov	x3, x0
    96ac:	mov	sp, x20
    96b0:	add	x1, x19, #0x20
    96b4:	mov	w0, w22
    96b8:	mov	x2, x20
    96bc:	bl	5440 <xregerror@plt>
    96c0:	ldr	x1, [x19]
    96c4:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    96c8:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    96cc:	add	x0, x0, #0xd17
    96d0:	add	x2, x2, #0xd32
    96d4:	mov	x3, x20
    96d8:	mov	x4, xzr
    96dc:	bl	51e0 <concat@plt>
    96e0:	mov	x20, x0
    96e4:	mov	sp, x21
    96e8:	b	9740 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21fc>
    96ec:	add	x0, x19, #0x20
    96f0:	mov	x1, x20
    96f4:	bl	55a4 <bcmp@plt+0xe4>
    96f8:	tbz	w0, #0, 9718 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21d4>
    96fc:	add	x0, x19, #0x20
    9700:	bl	5080 <xregfree@plt>
    9704:	ldr	x8, [x21, #8]
    9708:	ldrb	w8, [x8, #136]
    970c:	cbnz	w8, 9798 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2254>
    9710:	mov	x20, xzr
    9714:	b	9740 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21fc>
    9718:	add	x0, x19, #0x20
    971c:	bl	5080 <xregfree@plt>
    9720:	ldr	x1, [x19]
    9724:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    9728:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    972c:	add	x0, x0, #0xd36
    9730:	add	x2, x2, #0xd59
    9734:	mov	x3, xzr
    9738:	bl	51e0 <concat@plt>
    973c:	mov	x20, x0
    9740:	ldr	x0, [x19]
    9744:	add	x8, x19, #0x0
    9748:	add	x8, x8, #0x10
    974c:	cmp	x0, x8
    9750:	b.eq	9758 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2214>  // b.none
    9754:	bl	5210 <_ZdlPv@plt>
    9758:	mov	x0, x20
    975c:	mov	sp, x29
    9760:	ldp	x20, x19, [sp, #64]
    9764:	ldp	x22, x21, [sp, #48]
    9768:	ldp	x24, x23, [sp, #32]
    976c:	ldp	x28, x25, [sp, #16]
    9770:	ldp	x29, x30, [sp], #80
    9774:	ret
    9778:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    977c:	ldr	x8, [x8, #3968]
    9780:	ldr	x2, [x19]
    9784:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    9788:	add	x1, x1, #0xced
    978c:	ldr	x0, [x8]
    9790:	bl	5070 <fprintf@plt>
    9794:	b	9668 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2124>
    9798:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    979c:	ldr	x8, [x8, #3968]
    97a0:	ldr	x2, [x20]
    97a4:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    97a8:	add	x1, x1, #0xd5b
    97ac:	ldr	x0, [x8]
    97b0:	bl	5070 <fprintf@plt>
    97b4:	b	9710 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x21cc>
    97b8:	b	97bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2278>
    97bc:	mov	x20, x0
    97c0:	ldr	x0, [x19]
    97c4:	add	x8, x19, #0x0
    97c8:	add	x8, x8, #0x10
    97cc:	cmp	x0, x8
    97d0:	b.eq	97d8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2294>  // b.none
    97d4:	bl	5210 <_ZdlPv@plt>
    97d8:	mov	x0, x20
    97dc:	bl	5470 <_Unwind_Resume@plt>
    97e0:	b	97e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22a0>
    97e4:	adrp	x21, 2a000 <xexit@@Base+0x144dc>
    97e8:	ldr	x21, [x21, #3304]
    97ec:	add	x22, x19, #0x20
    97f0:	mov	x20, x0
    97f4:	ldr	x8, [x21]
    97f8:	ldp	x9, x10, [x21, #64]
    97fc:	str	x8, [x19, #32]
    9800:	ldur	x8, [x8, #-24]
    9804:	str	x9, [x22, x8]
    9808:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    980c:	ldr	x0, [x19, #128]
    9810:	ldr	x8, [x8, #4048]
    9814:	add	x9, x22, #0x70
    9818:	cmp	x0, x9
    981c:	add	x8, x8, #0x10
    9820:	stp	x10, x8, [x19, #48]
    9824:	b.eq	982c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x22e8>  // b.none
    9828:	bl	5210 <_ZdlPv@plt>
    982c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    9830:	ldr	x8, [x8, #3440]
    9834:	add	x0, x22, #0x50
    9838:	add	x8, x8, #0x10
    983c:	str	x8, [x19, #56]
    9840:	bl	5310 <_ZNSt6localeD1Ev@plt>
    9844:	ldp	x8, x9, [x21, #16]
    9848:	add	x0, x22, #0x80
    984c:	str	x8, [x19, #32]
    9850:	ldur	x8, [x8, #-24]
    9854:	str	x9, [x22, x8]
    9858:	str	xzr, [x19, #40]
    985c:	bl	50a0 <_ZNSt8ios_baseD2Ev@plt>
    9860:	mov	x0, x20
    9864:	bl	5470 <_Unwind_Resume@plt>
    9868:	stp	x29, x30, [sp, #-32]!
    986c:	stp	x20, x19, [sp, #16]
    9870:	mov	x29, sp
    9874:	ldr	x8, [x0, #8]
    9878:	mov	x19, x0
    987c:	mov	x20, x1
    9880:	ldrb	w8, [x8, #136]
    9884:	cbnz	w8, 98a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2360>
    9888:	add	x1, x19, #0x10
    988c:	mov	x0, x20
    9890:	bl	5110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt>
    9894:	ldp	x20, x19, [sp, #16]
    9898:	mov	x0, xzr
    989c:	ldp	x29, x30, [sp], #32
    98a0:	ret
    98a4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    98a8:	ldr	x8, [x8, #3968]
    98ac:	ldr	x2, [x19, #16]
    98b0:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    98b4:	add	x1, x1, #0xd6e
    98b8:	ldr	x0, [x8]
    98bc:	bl	5070 <fprintf@plt>
    98c0:	b	9888 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x2344>

00000000000098c4 <gcc_cp_fe_context@@Base>:
    98c4:	stp	x29, x30, [sp, #-32]!
    98c8:	stp	x20, x19, [sp, #16]
    98cc:	mov	x29, sp
    98d0:	cmp	w0, #0x1
    98d4:	mov	x19, xzr
    98d8:	b.hi	9940 <gcc_cp_fe_context@@Base+0x7c>  // b.pmore
    98dc:	cbnz	w1, 9940 <gcc_cp_fe_context@@Base+0x7c>
    98e0:	mov	w0, #0x98                  	// #152
    98e4:	bl	5220 <_Znwm@plt>
    98e8:	movi	v0.2d, #0x0
    98ec:	mov	x8, x0
    98f0:	mov	x19, x0
    98f4:	stp	xzr, xzr, [x0, #24]
    98f8:	str	xzr, [x0, #16]
    98fc:	stur	q0, [x0, #56]
    9900:	stur	q0, [x0, #72]
    9904:	stur	q0, [x0, #88]
    9908:	strb	wzr, [x8, #120]!
    990c:	stp	x8, xzr, [x0, #104]
    9910:	strb	wzr, [x0, #136]
    9914:	mov	w0, #0x10                  	// #16
    9918:	bl	5220 <_Znwm@plt>
    991c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    9920:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    9924:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    9928:	add	x8, x8, #0x8b0
    992c:	add	x9, x9, #0x620
    9930:	add	x10, x10, #0x678
    9934:	str	x0, [x19, #144]
    9938:	stp	x8, x19, [x0]
    993c:	stp	x9, x10, [x19]
    9940:	mov	x0, x19
    9944:	ldp	x20, x19, [sp, #16]
    9948:	ldp	x29, x30, [sp], #32
    994c:	ret
    9950:	mov	x20, x0
    9954:	mov	x0, x19
    9958:	bl	5210 <_ZdlPv@plt>
    995c:	mov	x0, x20
    9960:	bl	5470 <_Unwind_Resume@plt>
    9964:	stp	x29, x30, [sp, #-48]!
    9968:	str	x21, [sp, #16]
    996c:	stp	x20, x19, [sp, #32]
    9970:	mov	x29, sp
    9974:	mov	x19, x3
    9978:	mov	w20, w2
    997c:	mov	x21, x0
    9980:	bl	a464 <gcc_cp_fe_context@@Base+0xba0>
    9984:	mov	x0, x21
    9988:	mov	w1, w20
    998c:	mov	x2, x19
    9990:	ldp	x20, x19, [sp, #32]
    9994:	ldr	x21, [sp, #16]
    9998:	ldp	x29, x30, [sp], #48
    999c:	b	a270 <gcc_cp_fe_context@@Base+0x9ac>
    99a0:	stp	x29, x30, [sp, #-48]!
    99a4:	str	x21, [sp, #16]
    99a8:	stp	x20, x19, [sp, #32]
    99ac:	mov	x29, sp
    99b0:	ldr	x20, [x0, #112]
    99b4:	add	x21, x0, #0x68
    99b8:	mov	x0, x1
    99bc:	mov	x19, x1
    99c0:	bl	5060 <strlen@plt>
    99c4:	mov	x4, x0
    99c8:	mov	x0, x21
    99cc:	mov	x2, x20
    99d0:	mov	x3, x19
    99d4:	ldp	x20, x19, [sp, #32]
    99d8:	ldr	x21, [sp, #16]
    99dc:	mov	x1, xzr
    99e0:	ldp	x29, x30, [sp], #48
    99e4:	b	5370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt>
    99e8:	stp	x1, x2, [x0, #64]
    99ec:	ret
    99f0:	cmp	w2, #0x0
    99f4:	cset	w8, ne  // ne = any
    99f8:	strb	w8, [x0, #136]
    99fc:	b	9abc <gcc_cp_fe_context@@Base+0x1f8>
    9a00:	cbz	x0, 9a84 <gcc_cp_fe_context@@Base+0x1c0>
    9a04:	stp	x29, x30, [sp, #-48]!
    9a08:	str	x21, [sp, #16]
    9a0c:	stp	x20, x19, [sp, #32]
    9a10:	mov	x29, sp
    9a14:	mov	x19, x0
    9a18:	ldr	x0, [x0, #16]
    9a1c:	cbz	x0, 9a2c <gcc_cp_fe_context@@Base+0x168>
    9a20:	ldr	x8, [x0]
    9a24:	ldr	x8, [x8, #8]
    9a28:	blr	x8
    9a2c:	ldr	x0, [x19, #144]
    9a30:	cbz	x0, 9a40 <gcc_cp_fe_context@@Base+0x17c>
    9a34:	ldr	x8, [x0]
    9a38:	ldr	x8, [x8, #16]
    9a3c:	blr	x8
    9a40:	ldr	x0, [x19, #104]
    9a44:	add	x8, x19, #0x78
    9a48:	cmp	x0, x8
    9a4c:	b.eq	9a54 <gcc_cp_fe_context@@Base+0x190>  // b.none
    9a50:	bl	5210 <_ZdlPv@plt>
    9a54:	ldp	x20, x21, [x19, #80]
    9a58:	cmp	x20, x21
    9a5c:	b.ne	9a70 <gcc_cp_fe_context@@Base+0x1ac>  // b.any
    9a60:	b	9a8c <gcc_cp_fe_context@@Base+0x1c8>
    9a64:	add	x20, x20, #0x10
    9a68:	cmp	x20, x21
    9a6c:	b.eq	9a88 <gcc_cp_fe_context@@Base+0x1c4>  // b.none
    9a70:	ldr	x0, [x20], #16
    9a74:	cmp	x0, x20
    9a78:	b.eq	9a64 <gcc_cp_fe_context@@Base+0x1a0>  // b.none
    9a7c:	bl	5210 <_ZdlPv@plt>
    9a80:	b	9a64 <gcc_cp_fe_context@@Base+0x1a0>
    9a84:	ret
    9a88:	ldr	x20, [x19, #80]
    9a8c:	cbz	x20, 9a98 <gcc_cp_fe_context@@Base+0x1d4>
    9a90:	mov	x0, x20
    9a94:	bl	5210 <_ZdlPv@plt>
    9a98:	mov	x0, x19
    9a9c:	ldp	x20, x19, [sp, #32]
    9aa0:	ldr	x21, [sp, #16]
    9aa4:	ldp	x29, x30, [sp], #48
    9aa8:	b	5210 <_ZdlPv@plt>
    9aac:	cmp	w1, #0x0
    9ab0:	cset	w8, ne  // ne = any
    9ab4:	strb	w8, [x0, #136]
    9ab8:	ret
    9abc:	sub	sp, sp, #0xe0
    9ac0:	stp	x29, x30, [sp, #160]
    9ac4:	str	x23, [sp, #176]
    9ac8:	stp	x22, x21, [sp, #192]
    9acc:	stp	x20, x19, [sp, #208]
    9ad0:	add	x29, sp, #0xa0
    9ad4:	mov	x21, x1
    9ad8:	mov	x19, x0
    9adc:	sub	x3, x29, #0x8
    9ae0:	mov	w0, #0x1                   	// #1
    9ae4:	mov	w1, #0x1                   	// #1
    9ae8:	mov	w2, wzr
    9aec:	bl	5000 <socketpair@plt>
    9af0:	cbz	w0, 9b08 <gcc_cp_fe_context@@Base+0x244>
    9af4:	ldp	x8, x0, [x19, #64]
    9af8:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    9afc:	add	x1, x1, #0xd97
    9b00:	blr	x8
    9b04:	b	9b34 <gcc_cp_fe_context@@Base+0x270>
    9b08:	sub	x0, x29, #0x10
    9b0c:	bl	5020 <pipe@plt>
    9b10:	cbz	w0, 9b50 <gcc_cp_fe_context@@Base+0x28c>
    9b14:	ldp	x8, x0, [x19, #64]
    9b18:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    9b1c:	add	x1, x1, #0xdb4
    9b20:	blr	x8
    9b24:	ldur	w0, [x29, #-8]
    9b28:	bl	5320 <close@plt>
    9b2c:	ldur	w0, [x29, #-4]
    9b30:	bl	5320 <close@plt>
    9b34:	mov	w0, wzr
    9b38:	ldp	x20, x19, [sp, #208]
    9b3c:	ldp	x22, x21, [sp, #192]
    9b40:	ldr	x23, [sp, #176]
    9b44:	ldp	x29, x30, [sp, #160]
    9b48:	add	sp, sp, #0xe0
    9b4c:	ret
    9b50:	add	x8, sp, #0x28
    9b54:	mov	w9, #0x15                  	// #21
    9b58:	add	x22, x8, #0x10
    9b5c:	str	x22, [sp, #40]
    9b60:	str	x9, [sp, #8]
    9b64:	add	x0, sp, #0x28
    9b68:	add	x1, sp, #0x8
    9b6c:	mov	x2, xzr
    9b70:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9b74:	adrp	x9, 15000 <htab_find_with_hash@@Base+0xdc>
    9b78:	add	x9, x9, #0xf28
    9b7c:	ldr	x8, [sp, #8]
    9b80:	ldur	x10, [x9, #13]
    9b84:	ldr	q0, [x9]
    9b88:	str	x0, [sp, #40]
    9b8c:	str	x8, [sp, #56]
    9b90:	stur	x10, [x0, #13]
    9b94:	str	q0, [x0]
    9b98:	ldr	x9, [sp, #40]
    9b9c:	str	x8, [sp, #48]
    9ba0:	add	x20, x19, #0x50
    9ba4:	strb	wzr, [x9, x8]
    9ba8:	ldp	x1, x8, [x19, #88]
    9bac:	cmp	x1, x8
    9bb0:	b.eq	9bd8 <gcc_cp_fe_context@@Base+0x314>  // b.none
    9bb4:	add	x8, x1, #0x10
    9bb8:	str	x8, [x1]
    9bbc:	ldr	x9, [sp, #40]
    9bc0:	cmp	x9, x22
    9bc4:	b.eq	9bf8 <gcc_cp_fe_context@@Base+0x334>  // b.none
    9bc8:	str	x9, [x1]
    9bcc:	ldr	x8, [sp, #56]
    9bd0:	str	x8, [x1, #16]
    9bd4:	b	9c00 <gcc_cp_fe_context@@Base+0x33c>
    9bd8:	add	x2, sp, #0x28
    9bdc:	mov	x0, x20
    9be0:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9be4:	ldr	x0, [sp, #40]
    9be8:	cmp	x0, x22
    9bec:	b.eq	9c1c <gcc_cp_fe_context@@Base+0x358>  // b.none
    9bf0:	bl	5210 <_ZdlPv@plt>
    9bf4:	b	9c1c <gcc_cp_fe_context@@Base+0x358>
    9bf8:	ldr	q0, [x22]
    9bfc:	str	q0, [x8]
    9c00:	ldr	x8, [sp, #48]
    9c04:	str	x8, [x1, #8]
    9c08:	stp	x22, xzr, [sp, #40]
    9c0c:	strb	wzr, [sp, #56]
    9c10:	ldr	x8, [x19, #88]
    9c14:	add	x8, x8, #0x20
    9c18:	str	x8, [x19, #88]
    9c1c:	ldur	w3, [x29, #-4]
    9c20:	adrp	x2, 15000 <htab_find_with_hash@@Base+0xdc>
    9c24:	add	x2, x2, #0xf3e
    9c28:	add	x0, sp, #0x28
    9c2c:	mov	w1, #0x64                  	// #100
    9c30:	bl	5270 <snprintf@plt>
    9c34:	cmp	w0, #0x64
    9c38:	b.ge	a1b8 <gcc_cp_fe_context@@Base+0x8f4>  // b.tcont
    9c3c:	add	x8, sp, #0x8
    9c40:	add	x23, x8, #0x10
    9c44:	add	x0, sp, #0x28
    9c48:	str	x23, [sp, #8]
    9c4c:	bl	5060 <strlen@plt>
    9c50:	mov	x22, x0
    9c54:	cmp	x0, #0x10
    9c58:	str	x0, [x29, #24]
    9c5c:	mov	x0, x23
    9c60:	b.cc	9c80 <gcc_cp_fe_context@@Base+0x3bc>  // b.lo, b.ul, b.last
    9c64:	add	x0, sp, #0x8
    9c68:	add	x1, x29, #0x18
    9c6c:	mov	x2, xzr
    9c70:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9c74:	ldr	x8, [x29, #24]
    9c78:	str	x0, [sp, #8]
    9c7c:	str	x8, [sp, #24]
    9c80:	cbz	x22, 9ca4 <gcc_cp_fe_context@@Base+0x3e0>
    9c84:	cmp	x22, #0x1
    9c88:	b.ne	9c98 <gcc_cp_fe_context@@Base+0x3d4>  // b.any
    9c8c:	ldrb	w8, [sp, #40]
    9c90:	strb	w8, [x0]
    9c94:	b	9ca4 <gcc_cp_fe_context@@Base+0x3e0>
    9c98:	add	x1, sp, #0x28
    9c9c:	mov	x2, x22
    9ca0:	bl	4fb0 <memcpy@plt>
    9ca4:	ldr	x8, [x29, #24]
    9ca8:	ldr	x9, [sp, #8]
    9cac:	str	x8, [sp, #16]
    9cb0:	strb	wzr, [x9, x8]
    9cb4:	ldp	x1, x8, [x19, #88]
    9cb8:	cmp	x1, x8
    9cbc:	b.eq	9ce4 <gcc_cp_fe_context@@Base+0x420>  // b.none
    9cc0:	add	x8, x1, #0x10
    9cc4:	str	x8, [x1]
    9cc8:	ldr	x9, [sp, #8]
    9ccc:	cmp	x9, x23
    9cd0:	b.eq	9d04 <gcc_cp_fe_context@@Base+0x440>  // b.none
    9cd4:	str	x9, [x1]
    9cd8:	ldr	x8, [sp, #24]
    9cdc:	str	x8, [x1, #16]
    9ce0:	b	9d0c <gcc_cp_fe_context@@Base+0x448>
    9ce4:	add	x2, sp, #0x8
    9ce8:	mov	x0, x20
    9cec:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9cf0:	ldr	x0, [sp, #8]
    9cf4:	cmp	x0, x23
    9cf8:	b.eq	9d28 <gcc_cp_fe_context@@Base+0x464>  // b.none
    9cfc:	bl	5210 <_ZdlPv@plt>
    9d00:	b	9d28 <gcc_cp_fe_context@@Base+0x464>
    9d04:	ldr	q0, [x23]
    9d08:	str	q0, [x8]
    9d0c:	ldr	x8, [sp, #16]
    9d10:	str	x8, [x1, #8]
    9d14:	stp	x23, xzr, [sp, #8]
    9d18:	strb	wzr, [sp, #24]
    9d1c:	ldr	x8, [x19, #88]
    9d20:	add	x8, x8, #0x20
    9d24:	str	x8, [x19, #88]
    9d28:	add	x1, x19, #0x68
    9d2c:	mov	x0, x20
    9d30:	bl	50f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    9d34:	add	x8, sp, #0x8
    9d38:	mov	w9, #0x632d                	// #25389
    9d3c:	mov	w10, #0x2                   	// #2
    9d40:	add	x22, x8, #0x10
    9d44:	strb	wzr, [sp, #26]
    9d48:	strh	w9, [sp, #24]
    9d4c:	stp	x22, x10, [sp, #8]
    9d50:	ldp	x1, x8, [x19, #88]
    9d54:	cmp	x1, x8
    9d58:	b.eq	9d80 <gcc_cp_fe_context@@Base+0x4bc>  // b.none
    9d5c:	add	x8, x1, #0x10
    9d60:	str	x8, [x1]
    9d64:	ldr	x9, [sp, #8]
    9d68:	cmp	x9, x22
    9d6c:	b.eq	9da0 <gcc_cp_fe_context@@Base+0x4dc>  // b.none
    9d70:	str	x9, [x1]
    9d74:	ldr	x8, [sp, #24]
    9d78:	str	x8, [x1, #16]
    9d7c:	b	9da8 <gcc_cp_fe_context@@Base+0x4e4>
    9d80:	add	x2, sp, #0x8
    9d84:	mov	x0, x20
    9d88:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9d8c:	ldr	x0, [sp, #8]
    9d90:	cmp	x0, x22
    9d94:	b.eq	9dc4 <gcc_cp_fe_context@@Base+0x500>  // b.none
    9d98:	bl	5210 <_ZdlPv@plt>
    9d9c:	b	9dc4 <gcc_cp_fe_context@@Base+0x500>
    9da0:	ldr	q0, [x22]
    9da4:	str	q0, [x8]
    9da8:	mov	w8, #0x2                   	// #2
    9dac:	str	x8, [x1, #8]
    9db0:	stp	x22, xzr, [sp, #8]
    9db4:	strb	wzr, [sp, #24]
    9db8:	ldr	x8, [x19, #88]
    9dbc:	add	x8, x8, #0x20
    9dc0:	str	x8, [x19, #88]
    9dc4:	add	x8, sp, #0x8
    9dc8:	mov	w9, #0x6f2d                	// #28461
    9dcc:	mov	w10, #0x2                   	// #2
    9dd0:	add	x22, x8, #0x10
    9dd4:	strb	wzr, [sp, #26]
    9dd8:	strh	w9, [sp, #24]
    9ddc:	stp	x22, x10, [sp, #8]
    9de0:	ldp	x1, x8, [x19, #88]
    9de4:	cmp	x1, x8
    9de8:	b.eq	9e10 <gcc_cp_fe_context@@Base+0x54c>  // b.none
    9dec:	add	x8, x1, #0x10
    9df0:	str	x8, [x1]
    9df4:	ldr	x9, [sp, #8]
    9df8:	cmp	x9, x22
    9dfc:	b.eq	9e30 <gcc_cp_fe_context@@Base+0x56c>  // b.none
    9e00:	str	x9, [x1]
    9e04:	ldr	x8, [sp, #24]
    9e08:	str	x8, [x1, #16]
    9e0c:	b	9e38 <gcc_cp_fe_context@@Base+0x574>
    9e10:	add	x2, sp, #0x8
    9e14:	mov	x0, x20
    9e18:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9e1c:	ldr	x0, [sp, #8]
    9e20:	cmp	x0, x22
    9e24:	b.eq	9e54 <gcc_cp_fe_context@@Base+0x590>  // b.none
    9e28:	bl	5210 <_ZdlPv@plt>
    9e2c:	b	9e54 <gcc_cp_fe_context@@Base+0x590>
    9e30:	ldr	q0, [x22]
    9e34:	str	q0, [x8]
    9e38:	mov	w8, #0x2                   	// #2
    9e3c:	str	x8, [x1, #8]
    9e40:	stp	x22, xzr, [sp, #8]
    9e44:	strb	wzr, [sp, #24]
    9e48:	ldr	x8, [x19, #88]
    9e4c:	add	x8, x8, #0x20
    9e50:	str	x8, [x19, #88]
    9e54:	add	x8, sp, #0x8
    9e58:	add	x23, x8, #0x10
    9e5c:	str	x23, [sp, #8]
    9e60:	cbz	x21, a1bc <gcc_cp_fe_context@@Base+0x8f8>
    9e64:	mov	x0, x21
    9e68:	bl	5060 <strlen@plt>
    9e6c:	mov	x22, x0
    9e70:	cmp	x0, #0xf
    9e74:	str	x0, [x29, #24]
    9e78:	mov	x0, x23
    9e7c:	b.ls	9e9c <gcc_cp_fe_context@@Base+0x5d8>  // b.plast
    9e80:	add	x0, sp, #0x8
    9e84:	add	x1, x29, #0x18
    9e88:	mov	x2, xzr
    9e8c:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9e90:	ldr	x8, [x29, #24]
    9e94:	str	x0, [sp, #8]
    9e98:	str	x8, [sp, #24]
    9e9c:	cbz	x22, 9ec0 <gcc_cp_fe_context@@Base+0x5fc>
    9ea0:	cmp	x22, #0x1
    9ea4:	b.ne	9eb4 <gcc_cp_fe_context@@Base+0x5f0>  // b.any
    9ea8:	ldrb	w8, [x21]
    9eac:	strb	w8, [x0]
    9eb0:	b	9ec0 <gcc_cp_fe_context@@Base+0x5fc>
    9eb4:	mov	x1, x21
    9eb8:	mov	x2, x22
    9ebc:	bl	4fb0 <memcpy@plt>
    9ec0:	ldr	x8, [x29, #24]
    9ec4:	ldr	x9, [sp, #8]
    9ec8:	str	x8, [sp, #16]
    9ecc:	strb	wzr, [x9, x8]
    9ed0:	ldp	x1, x8, [x19, #88]
    9ed4:	cmp	x1, x8
    9ed8:	b.eq	9f00 <gcc_cp_fe_context@@Base+0x63c>  // b.none
    9edc:	add	x8, x1, #0x10
    9ee0:	str	x8, [x1]
    9ee4:	ldr	x9, [sp, #8]
    9ee8:	cmp	x9, x23
    9eec:	b.eq	9f20 <gcc_cp_fe_context@@Base+0x65c>  // b.none
    9ef0:	str	x9, [x1]
    9ef4:	ldr	x8, [sp, #24]
    9ef8:	str	x8, [x1, #16]
    9efc:	b	9f28 <gcc_cp_fe_context@@Base+0x664>
    9f00:	add	x2, sp, #0x8
    9f04:	mov	x0, x20
    9f08:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9f0c:	ldr	x0, [sp, #8]
    9f10:	cmp	x0, x23
    9f14:	b.eq	9f44 <gcc_cp_fe_context@@Base+0x680>  // b.none
    9f18:	bl	5210 <_ZdlPv@plt>
    9f1c:	b	9f44 <gcc_cp_fe_context@@Base+0x680>
    9f20:	ldr	q0, [x23]
    9f24:	str	q0, [x8]
    9f28:	ldr	x8, [sp, #16]
    9f2c:	str	x8, [x1, #8]
    9f30:	stp	x23, xzr, [sp, #8]
    9f34:	strb	wzr, [sp, #24]
    9f38:	ldr	x8, [x19, #88]
    9f3c:	add	x8, x8, #0x20
    9f40:	str	x8, [x19, #88]
    9f44:	ldrb	w8, [x19, #136]
    9f48:	cbz	w8, 9fdc <gcc_cp_fe_context@@Base+0x718>
    9f4c:	add	x8, sp, #0x8
    9f50:	mov	w9, #0x762d                	// #30253
    9f54:	mov	w10, #0x2                   	// #2
    9f58:	add	x21, x8, #0x10
    9f5c:	strb	wzr, [sp, #26]
    9f60:	strh	w9, [sp, #24]
    9f64:	stp	x21, x10, [sp, #8]
    9f68:	ldp	x1, x8, [x19, #88]
    9f6c:	cmp	x1, x8
    9f70:	b.eq	9f98 <gcc_cp_fe_context@@Base+0x6d4>  // b.none
    9f74:	add	x8, x1, #0x10
    9f78:	str	x8, [x1]
    9f7c:	ldr	x9, [sp, #8]
    9f80:	cmp	x9, x21
    9f84:	b.eq	9fb8 <gcc_cp_fe_context@@Base+0x6f4>  // b.none
    9f88:	str	x9, [x1]
    9f8c:	ldr	x8, [sp, #24]
    9f90:	str	x8, [x1, #16]
    9f94:	b	9fc0 <gcc_cp_fe_context@@Base+0x6fc>
    9f98:	add	x2, sp, #0x8
    9f9c:	mov	x0, x20
    9fa0:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    9fa4:	ldr	x0, [sp, #8]
    9fa8:	cmp	x0, x21
    9fac:	b.eq	9fdc <gcc_cp_fe_context@@Base+0x718>  // b.none
    9fb0:	bl	5210 <_ZdlPv@plt>
    9fb4:	b	9fdc <gcc_cp_fe_context@@Base+0x718>
    9fb8:	ldr	q0, [x21]
    9fbc:	str	q0, [x8]
    9fc0:	mov	w8, #0x2                   	// #2
    9fc4:	str	x8, [x1, #8]
    9fc8:	stp	x21, xzr, [sp, #8]
    9fcc:	strb	wzr, [sp, #24]
    9fd0:	ldr	x8, [x19, #88]
    9fd4:	add	x8, x8, #0x20
    9fd8:	str	x8, [x19, #88]
    9fdc:	mov	w0, #0x20                  	// #32
    9fe0:	bl	5220 <_Znwm@plt>
    9fe4:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    9fe8:	ldur	w8, [x29, #-8]
    9fec:	ldur	w9, [x29, #-16]
    9ff0:	ldr	x10, [x10, #3352]
    9ff4:	mov	x20, x0
    9ff8:	add	x21, x0, #0x10
    9ffc:	stp	w8, w9, [x0, #8]
    a000:	add	x10, x10, #0x10
    a004:	str	x10, [x0]
    a008:	mov	x0, x21
    a00c:	bl	dd9c <gcc_cp_fe_context@@Base+0x44d8>
    a010:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    a014:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    a018:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x73c>
    a01c:	add	x8, x8, #0x968
    a020:	add	x1, x1, #0xe01
    a024:	add	x2, x2, #0x7fc
    a028:	mov	x0, x21
    a02c:	str	x19, [x20, #24]
    a030:	str	x8, [x20]
    a034:	str	x20, [x19, #16]
    a038:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    a03c:	ldr	x8, [x19, #16]
    a040:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    a044:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x73c>
    a048:	add	x1, x1, #0xe10
    a04c:	add	x0, x8, #0x10
    a050:	add	x2, x2, #0x8c8
    a054:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    a058:	ldr	x8, [x19, #16]
    a05c:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    a060:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x73c>
    a064:	add	x1, x1, #0xf5e
    a068:	add	x0, x8, #0x10
    a06c:	add	x2, x2, #0x980
    a070:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    a074:	ldr	x8, [x19, #16]
    a078:	adrp	x1, 15000 <htab_find_with_hash@@Base+0xdc>
    a07c:	adrp	x2, a000 <gcc_cp_fe_context@@Base+0x73c>
    a080:	add	x1, x1, #0xf6a
    a084:	add	x0, x8, #0x10
    a088:	add	x2, x2, #0x9e0
    a08c:	bl	de30 <gcc_cp_fe_context@@Base+0x456c>
    a090:	ldp	x22, x8, [x19, #80]
    a094:	adrp	x1, 2a000 <xexit@@Base+0x144dc>
    a098:	ldr	x1, [x1, #3264]
    a09c:	sub	x23, x8, x22
    a0a0:	asr	x21, x23, #5
    a0a4:	add	x8, x21, #0x1
    a0a8:	lsl	x9, x8, #3
    a0ac:	cmp	xzr, x8, lsr #61
    a0b0:	csinv	x0, x9, xzr, eq  // eq = none
    a0b4:	bl	53f0 <_ZnamRKSt9nothrow_t@plt>
    a0b8:	cbz	x0, 9b38 <gcc_cp_fe_context@@Base+0x274>
    a0bc:	mov	x20, x0
    a0c0:	cbz	x23, a0e8 <gcc_cp_fe_context@@Base+0x824>
    a0c4:	mov	x8, xzr
    a0c8:	mov	w9, #0x1                   	// #1
    a0cc:	lsl	x10, x8, #5
    a0d0:	ldr	x10, [x22, x10]
    a0d4:	str	x10, [x20, x8, lsl #3]
    a0d8:	mov	w8, w9
    a0dc:	cmp	x21, x8
    a0e0:	add	w9, w9, #0x1
    a0e4:	b.hi	a0cc <gcc_cp_fe_context@@Base+0x808>  // b.pmore
    a0e8:	str	xzr, [x20, x21, lsl #3]
    a0ec:	bl	5300 <fork@plt>
    a0f0:	cmn	w0, #0x1
    a0f4:	b.eq	a144 <gcc_cp_fe_context@@Base+0x880>  // b.none
    a0f8:	mov	w21, w0
    a0fc:	cbz	w0, a1c8 <gcc_cp_fe_context@@Base+0x904>
    a100:	ldur	w0, [x29, #-4]
    a104:	bl	5320 <close@plt>
    a108:	ldur	w0, [x29, #-12]
    a10c:	bl	5320 <close@plt>
    a110:	ldr	x0, [x19, #16]
    a114:	mov	w1, #0x48                  	// #72
    a118:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    a11c:	cbz	w0, a164 <gcc_cp_fe_context@@Base+0x8a0>
    a120:	ldr	x0, [x19, #16]
    a124:	mov	x1, xzr
    a128:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    a12c:	cbz	w0, a164 <gcc_cp_fe_context@@Base+0x8a0>
    a130:	ldr	x0, [x19, #16]
    a134:	mov	w1, wzr
    a138:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    a13c:	mov	w19, w0
    a140:	b	a168 <gcc_cp_fe_context@@Base+0x8a4>
    a144:	ldur	w0, [x29, #-8]
    a148:	bl	5320 <close@plt>
    a14c:	ldur	w0, [x29, #-4]
    a150:	bl	5320 <close@plt>
    a154:	ldur	w0, [x29, #-16]
    a158:	bl	5320 <close@plt>
    a15c:	ldur	w0, [x29, #-12]
    a160:	b	9b30 <gcc_cp_fe_context@@Base+0x26c>
    a164:	mov	w19, wzr
    a168:	ldur	w0, [x29, #-8]
    a16c:	bl	5320 <close@plt>
    a170:	ldur	w0, [x29, #-16]
    a174:	bl	5320 <close@plt>
    a178:	add	x1, sp, #0x8
    a17c:	mov	w0, w21
    a180:	mov	w2, wzr
    a184:	bl	50b0 <waitpid@plt>
    a188:	cmn	w0, #0x1
    a18c:	b.ne	a1a0 <gcc_cp_fe_context@@Base+0x8dc>  // b.any
    a190:	bl	52c0 <__errno_location@plt>
    a194:	ldr	w8, [x0]
    a198:	cmp	w8, #0x4
    a19c:	b.ne	9b34 <gcc_cp_fe_context@@Base+0x270>  // b.any
    a1a0:	ldrh	w8, [sp, #8]
    a1a4:	tst	w8, #0xffffff7f
    a1a8:	b.ne	9b34 <gcc_cp_fe_context@@Base+0x270>  // b.any
    a1ac:	cmp	w19, #0x0
    a1b0:	cset	w0, ne  // ne = any
    a1b4:	b	9b38 <gcc_cp_fe_context@@Base+0x274>
    a1b8:	bl	53c0 <abort@plt>
    a1bc:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a1c0:	add	x0, x0, #0xb65
    a1c4:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a1c8:	ldur	w0, [x29, #-12]
    a1cc:	mov	w1, #0x1                   	// #1
    a1d0:	bl	5030 <dup2@plt>
    a1d4:	ldur	w0, [x29, #-12]
    a1d8:	mov	w1, #0x2                   	// #2
    a1dc:	bl	5030 <dup2@plt>
    a1e0:	ldur	w0, [x29, #-16]
    a1e4:	bl	5320 <close@plt>
    a1e8:	ldur	w0, [x29, #-12]
    a1ec:	bl	5320 <close@plt>
    a1f0:	ldur	w0, [x29, #-8]
    a1f4:	bl	5320 <close@plt>
    a1f8:	ldr	x0, [x20]
    a1fc:	mov	x1, x20
    a200:	bl	4fe0 <execvp@plt>
    a204:	mov	w0, #0x7f                  	// #127
    a208:	bl	5170 <_exit@plt>
    a20c:	ldr	x8, [sp, #8]
    a210:	cmp	x8, x21
    a214:	b	a240 <gcc_cp_fe_context@@Base+0x97c>
    a218:	b	a22c <gcc_cp_fe_context@@Base+0x968>
    a21c:	ldr	x8, [sp, #8]
    a220:	b	a23c <gcc_cp_fe_context@@Base+0x978>
    a224:	ldr	x8, [sp, #8]
    a228:	b	a23c <gcc_cp_fe_context@@Base+0x978>
    a22c:	ldr	x8, [sp, #8]
    a230:	cmp	x8, x23
    a234:	b	a240 <gcc_cp_fe_context@@Base+0x97c>
    a238:	ldr	x8, [sp, #40]
    a23c:	cmp	x8, x22
    a240:	mov	x19, x0
    a244:	b.eq	a264 <gcc_cp_fe_context@@Base+0x9a0>  // b.none
    a248:	mov	x0, x8
    a24c:	b	a260 <gcc_cp_fe_context@@Base+0x99c>
    a250:	bl	5470 <_Unwind_Resume@plt>
    a254:	bl	5470 <_Unwind_Resume@plt>
    a258:	mov	x19, x0
    a25c:	mov	x0, x20
    a260:	bl	5210 <_ZdlPv@plt>
    a264:	mov	x0, x19
    a268:	bl	5470 <_Unwind_Resume@plt>
    a26c:	bl	5470 <_Unwind_Resume@plt>
    a270:	sub	sp, sp, #0xa0
    a274:	stp	x29, x30, [sp, #80]
    a278:	stp	x26, x25, [sp, #96]
    a27c:	stp	x24, x23, [sp, #112]
    a280:	stp	x22, x21, [sp, #128]
    a284:	stp	x20, x19, [sp, #144]
    a288:	add	x29, sp, #0x50
    a28c:	add	x8, sp, #0x28
    a290:	add	x24, x8, #0x10
    a294:	stp	x24, xzr, [sp, #40]
    a298:	strb	wzr, [sp, #56]
    a29c:	mov	x20, x0
    a2a0:	ldr	x0, [x0, #144]
    a2a4:	mov	x19, x2
    a2a8:	mov	w22, w1
    a2ac:	ldr	x8, [x0]
    a2b0:	ldr	x8, [x8]
    a2b4:	add	x1, sp, #0x28
    a2b8:	blr	x8
    a2bc:	mov	x21, x0
    a2c0:	cbnz	x0, a3e8 <gcc_cp_fe_context@@Base+0xb24>
    a2c4:	add	x21, x20, #0x50
    a2c8:	add	x1, sp, #0x28
    a2cc:	mov	x0, x21
    a2d0:	bl	50f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    a2d4:	cmp	w22, #0x1
    a2d8:	b.lt	a3e4 <gcc_cp_fe_context@@Base+0xb20>  // b.tstop
    a2dc:	add	x8, sp, #0x8
    a2e0:	add	x25, x8, #0x10
    a2e4:	mov	w26, w22
    a2e8:	b	a320 <gcc_cp_fe_context@@Base+0xa5c>
    a2ec:	str	x9, [x1]
    a2f0:	ldr	x8, [sp, #24]
    a2f4:	str	x8, [x1, #16]
    a2f8:	ldr	x8, [sp, #16]
    a2fc:	str	x8, [x1, #8]
    a300:	stp	x25, xzr, [sp, #8]
    a304:	strb	wzr, [sp, #24]
    a308:	ldr	x8, [x20, #88]
    a30c:	add	x8, x8, #0x20
    a310:	str	x8, [x20, #88]
    a314:	subs	x26, x26, #0x1
    a318:	add	x19, x19, #0x8
    a31c:	b.eq	a3e4 <gcc_cp_fe_context@@Base+0xb20>  // b.none
    a320:	ldr	x22, [x19]
    a324:	str	x25, [sp, #8]
    a328:	cbz	x22, a418 <gcc_cp_fe_context@@Base+0xb54>
    a32c:	mov	x0, x22
    a330:	bl	5060 <strlen@plt>
    a334:	mov	x23, x0
    a338:	cmp	x0, #0xf
    a33c:	stur	x0, [x29, #-8]
    a340:	mov	x0, x25
    a344:	b.ls	a364 <gcc_cp_fe_context@@Base+0xaa0>  // b.plast
    a348:	add	x0, sp, #0x8
    a34c:	sub	x1, x29, #0x8
    a350:	mov	x2, xzr
    a354:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a358:	ldur	x8, [x29, #-8]
    a35c:	str	x0, [sp, #8]
    a360:	str	x8, [sp, #24]
    a364:	cbz	x23, a388 <gcc_cp_fe_context@@Base+0xac4>
    a368:	cmp	x23, #0x1
    a36c:	b.ne	a37c <gcc_cp_fe_context@@Base+0xab8>  // b.any
    a370:	ldrb	w8, [x22]
    a374:	strb	w8, [x0]
    a378:	b	a388 <gcc_cp_fe_context@@Base+0xac4>
    a37c:	mov	x1, x22
    a380:	mov	x2, x23
    a384:	bl	4fb0 <memcpy@plt>
    a388:	ldur	x8, [x29, #-8]
    a38c:	ldr	x9, [sp, #8]
    a390:	str	x8, [sp, #16]
    a394:	strb	wzr, [x9, x8]
    a398:	ldp	x1, x8, [x20, #88]
    a39c:	cmp	x1, x8
    a3a0:	b.eq	a3c4 <gcc_cp_fe_context@@Base+0xb00>  // b.none
    a3a4:	add	x8, x1, #0x10
    a3a8:	str	x8, [x1]
    a3ac:	ldr	x9, [sp, #8]
    a3b0:	cmp	x9, x25
    a3b4:	b.ne	a2ec <gcc_cp_fe_context@@Base+0xa28>  // b.any
    a3b8:	ldr	q0, [x25]
    a3bc:	str	q0, [x8]
    a3c0:	b	a2f8 <gcc_cp_fe_context@@Base+0xa34>
    a3c4:	add	x2, sp, #0x8
    a3c8:	mov	x0, x21
    a3cc:	bl	5390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    a3d0:	ldr	x0, [sp, #8]
    a3d4:	cmp	x0, x25
    a3d8:	b.eq	a314 <gcc_cp_fe_context@@Base+0xa50>  // b.none
    a3dc:	bl	5210 <_ZdlPv@plt>
    a3e0:	b	a314 <gcc_cp_fe_context@@Base+0xa50>
    a3e4:	mov	x21, xzr
    a3e8:	ldr	x0, [sp, #40]
    a3ec:	cmp	x0, x24
    a3f0:	b.eq	a3f8 <gcc_cp_fe_context@@Base+0xb34>  // b.none
    a3f4:	bl	5210 <_ZdlPv@plt>
    a3f8:	mov	x0, x21
    a3fc:	ldp	x20, x19, [sp, #144]
    a400:	ldp	x22, x21, [sp, #128]
    a404:	ldp	x24, x23, [sp, #112]
    a408:	ldp	x26, x25, [sp, #96]
    a40c:	ldp	x29, x30, [sp, #80]
    a410:	add	sp, sp, #0xa0
    a414:	ret
    a418:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a41c:	add	x0, x0, #0xb65
    a420:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a424:	b	a448 <gcc_cp_fe_context@@Base+0xb84>
    a428:	b	a448 <gcc_cp_fe_context@@Base+0xb84>
    a42c:	ldr	x8, [sp, #8]
    a430:	mov	x19, x0
    a434:	cmp	x8, x25
    a438:	b.eq	a44c <gcc_cp_fe_context@@Base+0xb88>  // b.none
    a43c:	mov	x0, x8
    a440:	bl	5210 <_ZdlPv@plt>
    a444:	b	a44c <gcc_cp_fe_context@@Base+0xb88>
    a448:	mov	x19, x0
    a44c:	ldr	x0, [sp, #40]
    a450:	cmp	x0, x24
    a454:	b.eq	a45c <gcc_cp_fe_context@@Base+0xb98>  // b.none
    a458:	bl	5210 <_ZdlPv@plt>
    a45c:	mov	x0, x19
    a460:	bl	5470 <_Unwind_Resume@plt>
    a464:	sub	sp, sp, #0x70
    a468:	stp	x29, x30, [sp, #32]
    a46c:	str	x25, [sp, #48]
    a470:	stp	x24, x23, [sp, #64]
    a474:	stp	x22, x21, [sp, #80]
    a478:	stp	x20, x19, [sp, #96]
    a47c:	add	x29, sp, #0x20
    a480:	mov	x20, x0
    a484:	ldr	x0, [x0, #144]
    a488:	mov	x21, x1
    a48c:	cbz	x0, a49c <gcc_cp_fe_context@@Base+0xbd8>
    a490:	ldr	x8, [x0]
    a494:	ldr	x8, [x8, #16]
    a498:	blr	x8
    a49c:	mov	w0, #0x30                  	// #48
    a4a0:	bl	5220 <_Znwm@plt>
    a4a4:	mov	x8, sp
    a4a8:	mov	x19, x0
    a4ac:	add	x25, x8, #0x10
    a4b0:	str	x25, [sp]
    a4b4:	cbz	x21, a5e8 <gcc_cp_fe_context@@Base+0xd24>
    a4b8:	mov	x0, x21
    a4bc:	bl	5060 <strlen@plt>
    a4c0:	mov	x22, x0
    a4c4:	cmp	x0, #0xf
    a4c8:	str	x0, [x29, #24]
    a4cc:	b.ls	a4f4 <gcc_cp_fe_context@@Base+0xc30>  // b.plast
    a4d0:	mov	x0, sp
    a4d4:	add	x1, x29, #0x18
    a4d8:	mov	x2, xzr
    a4dc:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a4e0:	ldr	x8, [x29, #24]
    a4e4:	str	x0, [sp]
    a4e8:	str	x8, [sp, #16]
    a4ec:	cbnz	x22, a4fc <gcc_cp_fe_context@@Base+0xc38>
    a4f0:	b	a51c <gcc_cp_fe_context@@Base+0xc58>
    a4f4:	mov	x0, x25
    a4f8:	cbz	x22, a51c <gcc_cp_fe_context@@Base+0xc58>
    a4fc:	cmp	x22, #0x1
    a500:	b.ne	a510 <gcc_cp_fe_context@@Base+0xc4c>  // b.any
    a504:	ldrb	w8, [x21]
    a508:	strb	w8, [x0]
    a50c:	b	a51c <gcc_cp_fe_context@@Base+0xc58>
    a510:	mov	x1, x21
    a514:	mov	x2, x22
    a518:	bl	4fb0 <memcpy@plt>
    a51c:	ldr	x8, [x29, #24]
    a520:	ldr	x9, [sp]
    a524:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    a528:	add	x10, x10, #0x8e8
    a52c:	str	x8, [sp, #8]
    a530:	strb	wzr, [x9, x8]
    a534:	ldp	x21, x22, [sp]
    a538:	add	x23, x19, #0x20
    a53c:	mov	x24, x19
    a540:	stp	x10, x20, [x19]
    a544:	str	x23, [x24, #16]!
    a548:	cbnz	x21, a550 <gcc_cp_fe_context@@Base+0xc8c>
    a54c:	cbnz	x22, a5f4 <gcc_cp_fe_context@@Base+0xd30>
    a550:	cmp	x22, #0x10
    a554:	str	x22, [x29, #24]
    a558:	b.cc	a57c <gcc_cp_fe_context@@Base+0xcb8>  // b.lo, b.ul, b.last
    a55c:	add	x1, x29, #0x18
    a560:	mov	x0, x24
    a564:	mov	x2, xzr
    a568:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a56c:	ldr	x8, [x29, #24]
    a570:	str	x0, [x24]
    a574:	str	x8, [x23]
    a578:	mov	x23, x0
    a57c:	cbz	x22, a5a4 <gcc_cp_fe_context@@Base+0xce0>
    a580:	cmp	x22, #0x1
    a584:	b.ne	a594 <gcc_cp_fe_context@@Base+0xcd0>  // b.any
    a588:	ldrb	w8, [x21]
    a58c:	strb	w8, [x23]
    a590:	b	a5a4 <gcc_cp_fe_context@@Base+0xce0>
    a594:	mov	x0, x23
    a598:	mov	x1, x21
    a59c:	mov	x2, x22
    a5a0:	bl	4fb0 <memcpy@plt>
    a5a4:	ldr	x8, [x29, #24]
    a5a8:	ldr	x9, [x19, #16]
    a5ac:	str	x8, [x19, #24]
    a5b0:	strb	wzr, [x9, x8]
    a5b4:	str	x19, [x20, #144]
    a5b8:	ldr	x0, [sp]
    a5bc:	cmp	x0, x25
    a5c0:	b.eq	a5c8 <gcc_cp_fe_context@@Base+0xd04>  // b.none
    a5c4:	bl	5210 <_ZdlPv@plt>
    a5c8:	ldp	x20, x19, [sp, #96]
    a5cc:	ldp	x22, x21, [sp, #80]
    a5d0:	ldp	x24, x23, [sp, #64]
    a5d4:	ldr	x25, [sp, #48]
    a5d8:	ldp	x29, x30, [sp, #32]
    a5dc:	mov	x0, xzr
    a5e0:	add	sp, sp, #0x70
    a5e4:	ret
    a5e8:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a5ec:	add	x0, x0, #0xb65
    a5f0:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a5f4:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a5f8:	add	x0, x0, #0xb65
    a5fc:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a600:	ldr	x8, [sp]
    a604:	mov	x20, x0
    a608:	cmp	x8, x25
    a60c:	b.eq	a620 <gcc_cp_fe_context@@Base+0xd5c>  // b.none
    a610:	mov	x0, x8
    a614:	bl	5210 <_ZdlPv@plt>
    a618:	b	a620 <gcc_cp_fe_context@@Base+0xd5c>
    a61c:	mov	x20, x0
    a620:	mov	x0, x19
    a624:	bl	5210 <_ZdlPv@plt>
    a628:	mov	x0, x20
    a62c:	bl	5470 <_Unwind_Resume@plt>
    a630:	sub	sp, sp, #0x70
    a634:	stp	x29, x30, [sp, #32]
    a638:	str	x25, [sp, #48]
    a63c:	stp	x24, x23, [sp, #64]
    a640:	stp	x22, x21, [sp, #80]
    a644:	stp	x20, x19, [sp, #96]
    a648:	add	x29, sp, #0x20
    a64c:	mov	x20, x0
    a650:	ldr	x0, [x0, #144]
    a654:	mov	x21, x1
    a658:	cbz	x0, a668 <gcc_cp_fe_context@@Base+0xda4>
    a65c:	ldr	x8, [x0]
    a660:	ldr	x8, [x8, #16]
    a664:	blr	x8
    a668:	mov	w0, #0x30                  	// #48
    a66c:	bl	5220 <_Znwm@plt>
    a670:	mov	x8, sp
    a674:	mov	x19, x0
    a678:	add	x25, x8, #0x10
    a67c:	str	x25, [sp]
    a680:	cbz	x21, a7b4 <gcc_cp_fe_context@@Base+0xef0>
    a684:	mov	x0, x21
    a688:	bl	5060 <strlen@plt>
    a68c:	mov	x22, x0
    a690:	cmp	x0, #0xf
    a694:	str	x0, [x29, #24]
    a698:	b.ls	a6c0 <gcc_cp_fe_context@@Base+0xdfc>  // b.plast
    a69c:	mov	x0, sp
    a6a0:	add	x1, x29, #0x18
    a6a4:	mov	x2, xzr
    a6a8:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a6ac:	ldr	x8, [x29, #24]
    a6b0:	str	x0, [sp]
    a6b4:	str	x8, [sp, #16]
    a6b8:	cbnz	x22, a6c8 <gcc_cp_fe_context@@Base+0xe04>
    a6bc:	b	a6e8 <gcc_cp_fe_context@@Base+0xe24>
    a6c0:	mov	x0, x25
    a6c4:	cbz	x22, a6e8 <gcc_cp_fe_context@@Base+0xe24>
    a6c8:	cmp	x22, #0x1
    a6cc:	b.ne	a6dc <gcc_cp_fe_context@@Base+0xe18>  // b.any
    a6d0:	ldrb	w8, [x21]
    a6d4:	strb	w8, [x0]
    a6d8:	b	a6e8 <gcc_cp_fe_context@@Base+0xe24>
    a6dc:	mov	x1, x21
    a6e0:	mov	x2, x22
    a6e4:	bl	4fb0 <memcpy@plt>
    a6e8:	ldr	x8, [x29, #24]
    a6ec:	ldr	x9, [sp]
    a6f0:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    a6f4:	add	x10, x10, #0x928
    a6f8:	str	x8, [sp, #8]
    a6fc:	strb	wzr, [x9, x8]
    a700:	ldp	x21, x22, [sp]
    a704:	add	x23, x19, #0x20
    a708:	mov	x24, x19
    a70c:	stp	x10, x20, [x19]
    a710:	str	x23, [x24, #16]!
    a714:	cbnz	x21, a71c <gcc_cp_fe_context@@Base+0xe58>
    a718:	cbnz	x22, a7c0 <gcc_cp_fe_context@@Base+0xefc>
    a71c:	cmp	x22, #0x10
    a720:	str	x22, [x29, #24]
    a724:	b.cc	a748 <gcc_cp_fe_context@@Base+0xe84>  // b.lo, b.ul, b.last
    a728:	add	x1, x29, #0x18
    a72c:	mov	x0, x24
    a730:	mov	x2, xzr
    a734:	bl	5480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a738:	ldr	x8, [x29, #24]
    a73c:	str	x0, [x24]
    a740:	str	x8, [x23]
    a744:	mov	x23, x0
    a748:	cbz	x22, a770 <gcc_cp_fe_context@@Base+0xeac>
    a74c:	cmp	x22, #0x1
    a750:	b.ne	a760 <gcc_cp_fe_context@@Base+0xe9c>  // b.any
    a754:	ldrb	w8, [x21]
    a758:	strb	w8, [x23]
    a75c:	b	a770 <gcc_cp_fe_context@@Base+0xeac>
    a760:	mov	x0, x23
    a764:	mov	x1, x21
    a768:	mov	x2, x22
    a76c:	bl	4fb0 <memcpy@plt>
    a770:	ldr	x8, [x29, #24]
    a774:	ldr	x9, [x19, #16]
    a778:	str	x8, [x19, #24]
    a77c:	strb	wzr, [x9, x8]
    a780:	str	x19, [x20, #144]
    a784:	ldr	x0, [sp]
    a788:	cmp	x0, x25
    a78c:	b.eq	a794 <gcc_cp_fe_context@@Base+0xed0>  // b.none
    a790:	bl	5210 <_ZdlPv@plt>
    a794:	ldp	x20, x19, [sp, #96]
    a798:	ldp	x22, x21, [sp, #80]
    a79c:	ldp	x24, x23, [sp, #64]
    a7a0:	ldr	x25, [sp, #48]
    a7a4:	ldp	x29, x30, [sp, #32]
    a7a8:	mov	x0, xzr
    a7ac:	add	sp, sp, #0x70
    a7b0:	ret
    a7b4:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a7b8:	add	x0, x0, #0xb65
    a7bc:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a7c0:	adrp	x0, 15000 <htab_find_with_hash@@Base+0xdc>
    a7c4:	add	x0, x0, #0xb65
    a7c8:	bl	51b0 <_ZSt19__throw_logic_errorPKc@plt>
    a7cc:	ldr	x8, [sp]
    a7d0:	mov	x20, x0
    a7d4:	cmp	x8, x25
    a7d8:	b.eq	a7ec <gcc_cp_fe_context@@Base+0xf28>  // b.none
    a7dc:	mov	x0, x8
    a7e0:	bl	5210 <_ZdlPv@plt>
    a7e4:	b	a7ec <gcc_cp_fe_context@@Base+0xf28>
    a7e8:	mov	x20, x0
    a7ec:	mov	x0, x19
    a7f0:	bl	5210 <_ZdlPv@plt>
    a7f4:	mov	x0, x20
    a7f8:	bl	5470 <_Unwind_Resume@plt>
    a7fc:	sub	sp, sp, #0x30
    a800:	stp	x29, x30, [sp, #16]
    a804:	stp	x20, x19, [sp, #32]
    a808:	add	x29, sp, #0x10
    a80c:	mov	x19, x0
    a810:	str	xzr, [sp]
    a814:	mov	w1, #0x2                   	// #2
    a818:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    a81c:	cbz	w0, a888 <gcc_cp_fe_context@@Base+0xfc4>
    a820:	add	x1, sp, #0x8
    a824:	mov	x0, x19
    a828:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    a82c:	cbz	w0, a888 <gcc_cp_fe_context@@Base+0xfc4>
    a830:	ldr	w20, [sp, #8]
    a834:	mov	x1, sp
    a838:	mov	x0, x19
    a83c:	bl	e320 <gcc_cp_fe_context@@Base+0x4a5c>
    a840:	cbz	w0, a888 <gcc_cp_fe_context@@Base+0xfc4>
    a844:	ldr	x1, [x19, #24]
    a848:	ldr	x3, [sp]
    a84c:	ldr	x0, [x1, #56]
    a850:	ldr	x8, [x1, #24]
    a854:	mov	w2, w20
    a858:	blr	x8
    a85c:	mov	w1, #0x52                  	// #82
    a860:	mov	x0, x19
    a864:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    a868:	cbz	w0, a888 <gcc_cp_fe_context@@Base+0xfc4>
    a86c:	mov	w1, #0x1                   	// #1
    a870:	mov	x0, x19
    a874:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    a878:	mov	w19, w0
    a87c:	ldr	x0, [sp]
    a880:	cbnz	x0, a894 <gcc_cp_fe_context@@Base+0xfd0>
    a884:	b	a898 <gcc_cp_fe_context@@Base+0xfd4>
    a888:	mov	w19, wzr
    a88c:	ldr	x0, [sp]
    a890:	cbz	x0, a898 <gcc_cp_fe_context@@Base+0xfd4>
    a894:	bl	52b0 <_ZdaPv@plt>
    a898:	mov	w0, w19
    a89c:	ldp	x20, x19, [sp, #32]
    a8a0:	ldp	x29, x30, [sp, #16]
    a8a4:	add	sp, sp, #0x30
    a8a8:	ret
    a8ac:	ldr	x8, [sp]
    a8b0:	mov	x19, x0
    a8b4:	cbz	x8, a8c0 <gcc_cp_fe_context@@Base+0xffc>
    a8b8:	mov	x0, x8
    a8bc:	bl	52b0 <_ZdaPv@plt>
    a8c0:	mov	x0, x19
    a8c4:	bl	5470 <_Unwind_Resume@plt>
    a8c8:	sub	sp, sp, #0x30
    a8cc:	stp	x29, x30, [sp, #16]
    a8d0:	stp	x20, x19, [sp, #32]
    a8d4:	add	x29, sp, #0x10
    a8d8:	mov	x19, x0
    a8dc:	str	xzr, [sp, #8]
    a8e0:	mov	w1, #0x1                   	// #1
    a8e4:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    a8e8:	cbz	w0, a940 <gcc_cp_fe_context@@Base+0x107c>
    a8ec:	add	x1, sp, #0x8
    a8f0:	mov	x0, x19
    a8f4:	bl	e320 <gcc_cp_fe_context@@Base+0x4a5c>
    a8f8:	cbz	w0, a940 <gcc_cp_fe_context@@Base+0x107c>
    a8fc:	ldr	x1, [x19, #24]
    a900:	ldr	x2, [sp, #8]
    a904:	ldr	x0, [x1, #56]
    a908:	ldr	x8, [x1, #32]
    a90c:	blr	x8
    a910:	mov	x20, x0
    a914:	mov	w1, #0x52                  	// #82
    a918:	mov	x0, x19
    a91c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    a920:	cbz	w0, a940 <gcc_cp_fe_context@@Base+0x107c>
    a924:	mov	x0, x19
    a928:	mov	x1, x20
    a92c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    a930:	mov	w19, w0
    a934:	ldr	x0, [sp, #8]
    a938:	cbnz	x0, a94c <gcc_cp_fe_context@@Base+0x1088>
    a93c:	b	a950 <gcc_cp_fe_context@@Base+0x108c>
    a940:	mov	w19, wzr
    a944:	ldr	x0, [sp, #8]
    a948:	cbz	x0, a950 <gcc_cp_fe_context@@Base+0x108c>
    a94c:	bl	52b0 <_ZdaPv@plt>
    a950:	mov	w0, w19
    a954:	ldp	x20, x19, [sp, #32]
    a958:	ldp	x29, x30, [sp, #16]
    a95c:	add	sp, sp, #0x30
    a960:	ret
    a964:	ldr	x8, [sp, #8]
    a968:	mov	x19, x0
    a96c:	cbz	x8, a978 <gcc_cp_fe_context@@Base+0x10b4>
    a970:	mov	x0, x8
    a974:	bl	52b0 <_ZdaPv@plt>
    a978:	mov	x0, x19
    a97c:	bl	5470 <_Unwind_Resume@plt>
    a980:	stp	x29, x30, [sp, #-32]!
    a984:	str	x19, [sp, #16]
    a988:	mov	x29, sp
    a98c:	mov	x1, xzr
    a990:	mov	x19, x0
    a994:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    a998:	cbz	w0, a9d0 <gcc_cp_fe_context@@Base+0x110c>
    a99c:	ldr	x1, [x19, #24]
    a9a0:	ldr	x8, [x1, #40]
    a9a4:	ldr	x0, [x1, #56]
    a9a8:	blr	x8
    a9ac:	mov	w1, #0x52                  	// #82
    a9b0:	mov	x0, x19
    a9b4:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    a9b8:	cbz	w0, a9d0 <gcc_cp_fe_context@@Base+0x110c>
    a9bc:	mov	x0, x19
    a9c0:	ldr	x19, [sp, #16]
    a9c4:	mov	w1, #0x1                   	// #1
    a9c8:	ldp	x29, x30, [sp], #32
    a9cc:	b	e220 <gcc_cp_fe_context@@Base+0x495c>
    a9d0:	ldr	x19, [sp, #16]
    a9d4:	mov	w0, wzr
    a9d8:	ldp	x29, x30, [sp], #32
    a9dc:	ret
    a9e0:	stp	x29, x30, [sp, #-32]!
    a9e4:	str	x19, [sp, #16]
    a9e8:	mov	x29, sp
    a9ec:	mov	x1, xzr
    a9f0:	mov	x19, x0
    a9f4:	bl	e1c4 <gcc_cp_fe_context@@Base+0x4900>
    a9f8:	cbz	w0, aa2c <gcc_cp_fe_context@@Base+0x1168>
    a9fc:	ldr	x1, [x19, #24]
    aa00:	ldp	x8, x0, [x1, #48]
    aa04:	blr	x8
    aa08:	mov	w1, #0x52                  	// #82
    aa0c:	mov	x0, x19
    aa10:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    aa14:	cbz	w0, aa2c <gcc_cp_fe_context@@Base+0x1168>
    aa18:	mov	x0, x19
    aa1c:	ldr	x19, [sp, #16]
    aa20:	mov	w1, #0x1                   	// #1
    aa24:	ldp	x29, x30, [sp], #32
    aa28:	b	e220 <gcc_cp_fe_context@@Base+0x495c>
    aa2c:	ldr	x19, [sp, #16]
    aa30:	mov	w0, wzr
    aa34:	ldp	x29, x30, [sp], #32
    aa38:	ret
    aa3c:	stp	x1, x2, [x0, #24]
    aa40:	stp	x3, x4, [x0, #40]
    aa44:	str	x5, [x0, #56]
    aa48:	ret
    aa4c:	ret
    aa50:	b	5210 <_ZdlPv@plt>
    aa54:	mov	x8, x0
    aa58:	ldr	x0, [x0, #16]
    aa5c:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    aa60:	add	x10, x8, #0x20
    aa64:	add	x9, x9, #0x8e8
    aa68:	cmp	x0, x10
    aa6c:	str	x9, [x8]
    aa70:	b.eq	aa78 <gcc_cp_fe_context@@Base+0x11b4>  // b.none
    aa74:	b	5210 <_ZdlPv@plt>
    aa78:	ret
    aa7c:	stp	x29, x30, [sp, #-32]!
    aa80:	str	x19, [sp, #16]
    aa84:	mov	x29, sp
    aa88:	mov	x19, x0
    aa8c:	ldr	x0, [x0, #16]
    aa90:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    aa94:	add	x9, x19, #0x20
    aa98:	add	x8, x8, #0x8e8
    aa9c:	cmp	x0, x9
    aaa0:	str	x8, [x19]
    aaa4:	b.eq	aaac <gcc_cp_fe_context@@Base+0x11e8>  // b.none
    aaa8:	bl	5210 <_ZdlPv@plt>
    aaac:	mov	x0, x19
    aab0:	ldr	x19, [sp, #16]
    aab4:	ldp	x29, x30, [sp], #32
    aab8:	b	5210 <_ZdlPv@plt>
    aabc:	mov	x8, x0
    aac0:	ldr	x0, [x0, #16]
    aac4:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    aac8:	add	x10, x8, #0x20
    aacc:	add	x9, x9, #0x928
    aad0:	cmp	x0, x10
    aad4:	str	x9, [x8]
    aad8:	b.eq	aae0 <gcc_cp_fe_context@@Base+0x121c>  // b.none
    aadc:	b	5210 <_ZdlPv@plt>
    aae0:	ret
    aae4:	stp	x29, x30, [sp, #-32]!
    aae8:	str	x19, [sp, #16]
    aaec:	mov	x29, sp
    aaf0:	mov	x19, x0
    aaf4:	ldr	x0, [x0, #16]
    aaf8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    aafc:	add	x9, x19, #0x20
    ab00:	add	x8, x8, #0x928
    ab04:	cmp	x0, x9
    ab08:	str	x8, [x19]
    ab0c:	b.eq	ab14 <gcc_cp_fe_context@@Base+0x1250>  // b.none
    ab10:	bl	5210 <_ZdlPv@plt>
    ab14:	mov	x0, x19
    ab18:	ldr	x19, [sp, #16]
    ab1c:	ldp	x29, x30, [sp], #32
    ab20:	b	5210 <_ZdlPv@plt>
    ab24:	stp	x29, x30, [sp, #-32]!
    ab28:	str	x19, [sp, #16]
    ab2c:	mov	x29, sp
    ab30:	mov	x19, x0
    ab34:	bl	deac <gcc_cp_fe_context@@Base+0x45e8>
    ab38:	mov	x0, x19
    ab3c:	ldr	x19, [sp, #16]
    ab40:	ldp	x29, x30, [sp], #32
    ab44:	b	5210 <_ZdlPv@plt>
    ab48:	ldr	x8, [x0, #24]
    ab4c:	ldp	x2, x0, [x8, #64]
    ab50:	br	x2
    ab54:	sub	sp, sp, #0x20
    ab58:	stp	x29, x30, [sp, #16]
    ab5c:	add	x29, sp, #0x10
    ab60:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ab64:	ldr	x0, [x0, #16]
    ab68:	ldr	x8, [x8, #3456]
    ab6c:	mov	x3, x1
    ab70:	sub	x2, x29, #0x4
    ab74:	ldr	x8, [x8]
    ab78:	mov	x1, x8
    ab7c:	bl	c120 <gcc_cp_fe_context@@Base+0x285c>
    ab80:	ldur	w8, [x29, #-4]
    ab84:	ldp	x29, x30, [sp, #16]
    ab88:	cmp	w0, #0x0
    ab8c:	csel	w0, wzr, w8, eq  // eq = none
    ab90:	add	sp, sp, #0x20
    ab94:	ret
    ab98:	sub	sp, sp, #0x20
    ab9c:	stp	x29, x30, [sp, #16]
    aba0:	add	x29, sp, #0x10
    aba4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    aba8:	ldr	x0, [x0, #16]
    abac:	ldr	x8, [x8, #3584]
    abb0:	mov	x3, x1
    abb4:	sub	x2, x29, #0x4
    abb8:	ldr	x8, [x8]
    abbc:	mov	x1, x8
    abc0:	bl	86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1160>
    abc4:	ldur	w8, [x29, #-4]
    abc8:	ldp	x29, x30, [sp, #16]
    abcc:	cmp	w0, #0x0
    abd0:	csel	w0, wzr, w8, eq  // eq = none
    abd4:	add	sp, sp, #0x20
    abd8:	ret
    abdc:	sub	sp, sp, #0x20
    abe0:	stp	x29, x30, [sp, #16]
    abe4:	add	x29, sp, #0x10
    abe8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    abec:	ldr	x0, [x0, #16]
    abf0:	ldr	x8, [x8, #3496]
    abf4:	mov	x3, x1
    abf8:	sub	x2, x29, #0x4
    abfc:	ldr	x8, [x8]
    ac00:	mov	x1, x8
    ac04:	bl	86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1160>
    ac08:	ldur	w8, [x29, #-4]
    ac0c:	ldp	x29, x30, [sp, #16]
    ac10:	cmp	w0, #0x0
    ac14:	csel	w0, wzr, w8, eq  // eq = none
    ac18:	add	sp, sp, #0x20
    ac1c:	ret
    ac20:	sub	sp, sp, #0x20
    ac24:	stp	x29, x30, [sp, #16]
    ac28:	add	x29, sp, #0x10
    ac2c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ac30:	ldr	x0, [x0, #16]
    ac34:	ldr	x8, [x8, #3488]
    ac38:	mov	x4, x2
    ac3c:	mov	x3, x1
    ac40:	sub	x2, x29, #0x4
    ac44:	ldr	x8, [x8]
    ac48:	mov	x1, x8
    ac4c:	bl	c1c0 <gcc_cp_fe_context@@Base+0x28fc>
    ac50:	ldur	w8, [x29, #-4]
    ac54:	ldp	x29, x30, [sp, #16]
    ac58:	cmp	w0, #0x0
    ac5c:	csel	w0, wzr, w8, eq  // eq = none
    ac60:	add	sp, sp, #0x20
    ac64:	ret
    ac68:	sub	sp, sp, #0x30
    ac6c:	stp	x29, x30, [sp, #16]
    ac70:	stp	x20, x19, [sp, #32]
    ac74:	add	x29, sp, #0x10
    ac78:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ac7c:	ldr	x19, [x0, #16]
    ac80:	ldr	x8, [x8, #3608]
    ac84:	mov	w1, #0x51                  	// #81
    ac88:	mov	x0, x19
    ac8c:	ldr	x20, [x8]
    ac90:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ac94:	cbz	w0, acdc <gcc_cp_fe_context@@Base+0x1418>
    ac98:	mov	x0, x19
    ac9c:	mov	x1, x20
    aca0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    aca4:	cbz	w0, acdc <gcc_cp_fe_context@@Base+0x1418>
    aca8:	mov	x0, x19
    acac:	mov	x1, xzr
    acb0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    acb4:	cbz	w0, acdc <gcc_cp_fe_context@@Base+0x1418>
    acb8:	mov	w1, #0x1                   	// #1
    acbc:	mov	x0, x19
    acc0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    acc4:	cbz	w0, acdc <gcc_cp_fe_context@@Base+0x1418>
    acc8:	add	x1, sp, #0x8
    accc:	mov	x0, x19
    acd0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    acd4:	cbz	w0, acdc <gcc_cp_fe_context@@Base+0x1418>
    acd8:	ldr	w0, [sp, #8]
    acdc:	ldp	x20, x19, [sp, #32]
    ace0:	ldp	x29, x30, [sp, #16]
    ace4:	add	sp, sp, #0x30
    ace8:	ret
    acec:	sub	sp, sp, #0x30
    acf0:	stp	x29, x30, [sp, #16]
    acf4:	stp	x20, x19, [sp, #32]
    acf8:	add	x29, sp, #0x10
    acfc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ad00:	ldr	x19, [x0, #16]
    ad04:	ldr	x8, [x8, #4024]
    ad08:	mov	w1, #0x51                  	// #81
    ad0c:	mov	x0, x19
    ad10:	ldr	x20, [x8]
    ad14:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ad18:	cbz	w0, ad64 <gcc_cp_fe_context@@Base+0x14a0>
    ad1c:	mov	x0, x19
    ad20:	mov	x1, x20
    ad24:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    ad28:	cbz	w0, ad64 <gcc_cp_fe_context@@Base+0x14a0>
    ad2c:	mov	x0, x19
    ad30:	mov	x1, xzr
    ad34:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    ad38:	cbz	w0, ad64 <gcc_cp_fe_context@@Base+0x14a0>
    ad3c:	mov	w1, #0x1                   	// #1
    ad40:	mov	x0, x19
    ad44:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    ad48:	cbz	w0, ad64 <gcc_cp_fe_context@@Base+0x14a0>
    ad4c:	add	x1, sp, #0x8
    ad50:	mov	x0, x19
    ad54:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    ad58:	cbz	w0, ad64 <gcc_cp_fe_context@@Base+0x14a0>
    ad5c:	ldr	x0, [sp, #8]
    ad60:	b	ad68 <gcc_cp_fe_context@@Base+0x14a4>
    ad64:	mov	x0, xzr
    ad68:	ldp	x20, x19, [sp, #32]
    ad6c:	ldp	x29, x30, [sp, #16]
    ad70:	add	sp, sp, #0x30
    ad74:	ret
    ad78:	sub	sp, sp, #0x30
    ad7c:	stp	x29, x30, [sp, #16]
    ad80:	stp	x20, x19, [sp, #32]
    ad84:	add	x29, sp, #0x10
    ad88:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ad8c:	ldr	x19, [x0, #16]
    ad90:	ldr	x8, [x8, #3808]
    ad94:	mov	w1, #0x51                  	// #81
    ad98:	mov	x0, x19
    ad9c:	ldr	x20, [x8]
    ada0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ada4:	cbz	w0, adec <gcc_cp_fe_context@@Base+0x1528>
    ada8:	mov	x0, x19
    adac:	mov	x1, x20
    adb0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    adb4:	cbz	w0, adec <gcc_cp_fe_context@@Base+0x1528>
    adb8:	mov	x0, x19
    adbc:	mov	x1, xzr
    adc0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    adc4:	cbz	w0, adec <gcc_cp_fe_context@@Base+0x1528>
    adc8:	mov	w1, #0x1                   	// #1
    adcc:	mov	x0, x19
    add0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    add4:	cbz	w0, adec <gcc_cp_fe_context@@Base+0x1528>
    add8:	add	x1, sp, #0x8
    addc:	mov	x0, x19
    ade0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    ade4:	cbz	w0, adec <gcc_cp_fe_context@@Base+0x1528>
    ade8:	ldr	w0, [sp, #8]
    adec:	ldp	x20, x19, [sp, #32]
    adf0:	ldp	x29, x30, [sp, #16]
    adf4:	add	sp, sp, #0x30
    adf8:	ret
    adfc:	sub	sp, sp, #0x20
    ae00:	stp	x29, x30, [sp, #16]
    ae04:	add	x29, sp, #0x10
    ae08:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ae0c:	ldr	x0, [x0, #16]
    ae10:	ldr	x8, [x8, #3880]
    ae14:	mov	x3, x1
    ae18:	sub	x2, x29, #0x4
    ae1c:	ldr	x8, [x8]
    ae20:	mov	x1, x8
    ae24:	bl	86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1160>
    ae28:	ldur	w8, [x29, #-4]
    ae2c:	ldp	x29, x30, [sp, #16]
    ae30:	cmp	w0, #0x0
    ae34:	csel	w0, wzr, w8, eq  // eq = none
    ae38:	add	sp, sp, #0x20
    ae3c:	ret
    ae40:	sub	sp, sp, #0x20
    ae44:	stp	x29, x30, [sp, #16]
    ae48:	add	x29, sp, #0x10
    ae4c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ae50:	ldr	x0, [x0, #16]
    ae54:	ldr	x8, [x8, #3728]
    ae58:	mov	x4, x2
    ae5c:	mov	x3, x1
    ae60:	sub	x2, x29, #0x4
    ae64:	ldr	x8, [x8]
    ae68:	mov	x1, x8
    ae6c:	bl	c274 <gcc_cp_fe_context@@Base+0x29b0>
    ae70:	ldur	w8, [x29, #-4]
    ae74:	ldp	x29, x30, [sp, #16]
    ae78:	cmp	w0, #0x0
    ae7c:	csel	w0, wzr, w8, eq  // eq = none
    ae80:	add	sp, sp, #0x20
    ae84:	ret
    ae88:	sub	sp, sp, #0x20
    ae8c:	stp	x29, x30, [sp, #16]
    ae90:	add	x29, sp, #0x10
    ae94:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ae98:	ldr	x0, [x0, #16]
    ae9c:	ldr	x8, [x8, #3344]
    aea0:	mov	x4, x2
    aea4:	mov	w3, w1
    aea8:	sub	x2, x29, #0x4
    aeac:	ldr	x8, [x8]
    aeb0:	mov	x1, x8
    aeb4:	bl	c328 <gcc_cp_fe_context@@Base+0x2a64>
    aeb8:	ldur	w8, [x29, #-4]
    aebc:	ldp	x29, x30, [sp, #16]
    aec0:	cmp	w0, #0x0
    aec4:	csel	w0, wzr, w8, eq  // eq = none
    aec8:	add	sp, sp, #0x20
    aecc:	ret
    aed0:	sub	sp, sp, #0x30
    aed4:	stp	x29, x30, [sp, #32]
    aed8:	add	x29, sp, #0x20
    aedc:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
    aee0:	ldr	x0, [x0, #16]
    aee4:	ldr	x10, [x10, #3448]
    aee8:	mov	x8, x5
    aeec:	mov	x9, x4
    aef0:	mov	x5, x3
    aef4:	ldr	x10, [x10]
    aef8:	mov	w4, w2
    aefc:	mov	x3, x1
    af00:	str	w7, [sp, #8]
    af04:	sub	x2, x29, #0x8
    af08:	str	x6, [sp]
    af0c:	mov	x1, x10
    af10:	mov	x6, x9
    af14:	mov	x7, x8
    af18:	bl	c3dc <gcc_cp_fe_context@@Base+0x2b18>
    af1c:	ldur	x8, [x29, #-8]
    af20:	ldp	x29, x30, [sp, #32]
    af24:	cmp	w0, #0x0
    af28:	csel	x0, xzr, x8, eq  // eq = none
    af2c:	add	sp, sp, #0x30
    af30:	ret
    af34:	sub	sp, sp, #0x20
    af38:	stp	x29, x30, [sp, #16]
    af3c:	add	x29, sp, #0x10
    af40:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    af44:	ldr	x0, [x0, #16]
    af48:	ldr	x8, [x8, #3736]
    af4c:	mov	x5, x3
    af50:	mov	x4, x2
    af54:	mov	x3, x1
    af58:	ldr	x8, [x8]
    af5c:	add	x2, sp, #0x8
    af60:	mov	x1, x8
    af64:	bl	c500 <gcc_cp_fe_context@@Base+0x2c3c>
    af68:	ldr	x8, [sp, #8]
    af6c:	ldp	x29, x30, [sp, #16]
    af70:	cmp	w0, #0x0
    af74:	csel	x0, xzr, x8, eq  // eq = none
    af78:	add	sp, sp, #0x20
    af7c:	ret
    af80:	sub	sp, sp, #0x20
    af84:	stp	x29, x30, [sp, #16]
    af88:	add	x29, sp, #0x10
    af8c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    af90:	ldr	x0, [x0, #16]
    af94:	ldr	x8, [x8, #3192]
    af98:	mov	x3, x1
    af9c:	add	x2, sp, #0x8
    afa0:	ldr	x8, [x8]
    afa4:	mov	x1, x8
    afa8:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    afac:	ldr	x8, [sp, #8]
    afb0:	ldp	x29, x30, [sp, #16]
    afb4:	cmp	w0, #0x0
    afb8:	csel	x0, xzr, x8, eq  // eq = none
    afbc:	add	sp, sp, #0x20
    afc0:	ret
    afc4:	sub	sp, sp, #0x20
    afc8:	stp	x29, x30, [sp, #16]
    afcc:	add	x29, sp, #0x10
    afd0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    afd4:	ldr	x0, [x0, #16]
    afd8:	ldr	x8, [x8, #3688]
    afdc:	mov	x3, x1
    afe0:	add	x2, sp, #0x8
    afe4:	ldr	x8, [x8]
    afe8:	mov	x1, x8
    afec:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    aff0:	ldr	x8, [sp, #8]
    aff4:	ldp	x29, x30, [sp, #16]
    aff8:	cmp	w0, #0x0
    affc:	csel	x0, xzr, x8, eq  // eq = none
    b000:	add	sp, sp, #0x20
    b004:	ret
    b008:	sub	sp, sp, #0x20
    b00c:	stp	x29, x30, [sp, #16]
    b010:	add	x29, sp, #0x10
    b014:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b018:	ldr	x0, [x0, #16]
    b01c:	ldr	x8, [x8, #3864]
    b020:	mov	x4, x2
    b024:	mov	x3, x1
    b028:	sub	x2, x29, #0x4
    b02c:	ldr	x8, [x8]
    b030:	mov	x1, x8
    b034:	bl	c1c0 <gcc_cp_fe_context@@Base+0x28fc>
    b038:	ldur	w8, [x29, #-4]
    b03c:	ldp	x29, x30, [sp, #16]
    b040:	cmp	w0, #0x0
    b044:	csel	w0, wzr, w8, eq  // eq = none
    b048:	add	sp, sp, #0x20
    b04c:	ret
    b050:	sub	sp, sp, #0x20
    b054:	stp	x29, x30, [sp, #16]
    b058:	add	x29, sp, #0x10
    b05c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b060:	ldr	x0, [x0, #16]
    b064:	ldr	x8, [x8, #3912]
    b068:	mov	x3, x1
    b06c:	add	x2, sp, #0x8
    b070:	ldr	x8, [x8]
    b074:	mov	x1, x8
    b078:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    b07c:	ldr	x8, [sp, #8]
    b080:	ldp	x29, x30, [sp, #16]
    b084:	cmp	w0, #0x0
    b088:	csel	x0, xzr, x8, eq  // eq = none
    b08c:	add	sp, sp, #0x20
    b090:	ret
    b094:	sub	sp, sp, #0x20
    b098:	stp	x29, x30, [sp, #16]
    b09c:	add	x29, sp, #0x10
    b0a0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b0a4:	ldr	x0, [x0, #16]
    b0a8:	ldr	x8, [x8, #3320]
    b0ac:	mov	w4, w2
    b0b0:	mov	x3, x1
    b0b4:	add	x2, sp, #0x8
    b0b8:	ldr	x8, [x8]
    b0bc:	mov	x1, x8
    b0c0:	bl	c5d0 <gcc_cp_fe_context@@Base+0x2d0c>
    b0c4:	ldr	x8, [sp, #8]
    b0c8:	ldp	x29, x30, [sp, #16]
    b0cc:	cmp	w0, #0x0
    b0d0:	csel	x0, xzr, x8, eq  // eq = none
    b0d4:	add	sp, sp, #0x20
    b0d8:	ret
    b0dc:	sub	sp, sp, #0x20
    b0e0:	stp	x29, x30, [sp, #16]
    b0e4:	add	x29, sp, #0x10
    b0e8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b0ec:	ldr	x0, [x0, #16]
    b0f0:	ldr	x8, [x8, #4016]
    b0f4:	mov	x4, x2
    b0f8:	mov	x3, x1
    b0fc:	add	x2, sp, #0x8
    b100:	ldr	x8, [x8]
    b104:	mov	x1, x8
    b108:	bl	c684 <gcc_cp_fe_context@@Base+0x2dc0>
    b10c:	ldr	x8, [sp, #8]
    b110:	ldp	x29, x30, [sp, #16]
    b114:	cmp	w0, #0x0
    b118:	csel	x0, xzr, x8, eq  // eq = none
    b11c:	add	sp, sp, #0x20
    b120:	ret
    b124:	sub	sp, sp, #0x30
    b128:	stp	x29, x30, [sp, #16]
    b12c:	stp	x20, x19, [sp, #32]
    b130:	add	x29, sp, #0x10
    b134:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b138:	ldr	x19, [x0, #16]
    b13c:	ldr	x8, [x8, #3848]
    b140:	mov	w1, #0x51                  	// #81
    b144:	mov	x0, x19
    b148:	ldr	x20, [x8]
    b14c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    b150:	cbz	w0, b198 <gcc_cp_fe_context@@Base+0x18d4>
    b154:	mov	x0, x19
    b158:	mov	x1, x20
    b15c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    b160:	cbz	w0, b198 <gcc_cp_fe_context@@Base+0x18d4>
    b164:	mov	x0, x19
    b168:	mov	x1, xzr
    b16c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    b170:	cbz	w0, b198 <gcc_cp_fe_context@@Base+0x18d4>
    b174:	mov	w1, #0x1                   	// #1
    b178:	mov	x0, x19
    b17c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    b180:	cbz	w0, b198 <gcc_cp_fe_context@@Base+0x18d4>
    b184:	add	x1, sp, #0x8
    b188:	mov	x0, x19
    b18c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    b190:	cbz	w0, b198 <gcc_cp_fe_context@@Base+0x18d4>
    b194:	ldr	w0, [sp, #8]
    b198:	ldp	x20, x19, [sp, #32]
    b19c:	ldp	x29, x30, [sp, #16]
    b1a0:	add	sp, sp, #0x30
    b1a4:	ret
    b1a8:	sub	sp, sp, #0x20
    b1ac:	stp	x29, x30, [sp, #16]
    b1b0:	add	x29, sp, #0x10
    b1b4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b1b8:	ldr	x0, [x0, #16]
    b1bc:	ldr	x8, [x8, #3616]
    b1c0:	mov	w7, w5
    b1c4:	mov	x6, x4
    b1c8:	mov	x5, x3
    b1cc:	ldr	x8, [x8]
    b1d0:	mov	w4, w2
    b1d4:	mov	x3, x1
    b1d8:	add	x2, sp, #0x8
    b1dc:	mov	x1, x8
    b1e0:	bl	c738 <gcc_cp_fe_context@@Base+0x2e74>
    b1e4:	ldr	x8, [sp, #8]
    b1e8:	ldp	x29, x30, [sp, #16]
    b1ec:	cmp	w0, #0x0
    b1f0:	csel	x0, xzr, x8, eq  // eq = none
    b1f4:	add	sp, sp, #0x20
    b1f8:	ret
    b1fc:	sub	sp, sp, #0x20
    b200:	stp	x29, x30, [sp, #16]
    b204:	add	x29, sp, #0x10
    b208:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b20c:	ldr	x0, [x0, #16]
    b210:	ldr	x8, [x8, #3472]
    b214:	mov	w7, w5
    b218:	mov	x6, x4
    b21c:	mov	x5, x3
    b220:	ldr	x8, [x8]
    b224:	mov	w4, w2
    b228:	mov	x3, x1
    b22c:	add	x2, sp, #0x8
    b230:	mov	x1, x8
    b234:	bl	c738 <gcc_cp_fe_context@@Base+0x2e74>
    b238:	ldr	x8, [sp, #8]
    b23c:	ldp	x29, x30, [sp, #16]
    b240:	cmp	w0, #0x0
    b244:	csel	x0, xzr, x8, eq  // eq = none
    b248:	add	sp, sp, #0x20
    b24c:	ret
    b250:	sub	sp, sp, #0x20
    b254:	stp	x29, x30, [sp, #16]
    b258:	add	x29, sp, #0x10
    b25c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b260:	ldr	x0, [x0, #16]
    b264:	ldr	x8, [x8, #3240]
    b268:	mov	w7, w5
    b26c:	mov	x6, x4
    b270:	mov	x5, x3
    b274:	ldr	x8, [x8]
    b278:	mov	x4, x2
    b27c:	mov	x3, x1
    b280:	add	x2, sp, #0x8
    b284:	mov	x1, x8
    b288:	bl	c838 <gcc_cp_fe_context@@Base+0x2f74>
    b28c:	ldr	x8, [sp, #8]
    b290:	ldp	x29, x30, [sp, #16]
    b294:	cmp	w0, #0x0
    b298:	csel	x0, xzr, x8, eq  // eq = none
    b29c:	add	sp, sp, #0x20
    b2a0:	ret
    b2a4:	sub	sp, sp, #0x20
    b2a8:	stp	x29, x30, [sp, #16]
    b2ac:	add	x29, sp, #0x10
    b2b0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b2b4:	ldr	x0, [x0, #16]
    b2b8:	ldr	x8, [x8, #3368]
    b2bc:	mov	x5, x3
    b2c0:	mov	x4, x2
    b2c4:	mov	x3, x1
    b2c8:	ldr	x8, [x8]
    b2cc:	add	x2, sp, #0x8
    b2d0:	mov	x1, x8
    b2d4:	bl	c938 <gcc_cp_fe_context@@Base+0x3074>
    b2d8:	ldr	x8, [sp, #8]
    b2dc:	ldp	x29, x30, [sp, #16]
    b2e0:	cmp	w0, #0x0
    b2e4:	csel	x0, xzr, x8, eq  // eq = none
    b2e8:	add	sp, sp, #0x20
    b2ec:	ret
    b2f0:	sub	sp, sp, #0x20
    b2f4:	stp	x29, x30, [sp, #16]
    b2f8:	add	x29, sp, #0x10
    b2fc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b300:	ldr	x0, [x0, #16]
    b304:	ldr	x8, [x8, #3656]
    b308:	mov	x4, x2
    b30c:	mov	x3, x1
    b310:	add	x2, sp, #0x8
    b314:	ldr	x8, [x8]
    b318:	mov	x1, x8
    b31c:	bl	8a1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14d8>
    b320:	ldr	x8, [sp, #8]
    b324:	ldp	x29, x30, [sp, #16]
    b328:	cmp	w0, #0x0
    b32c:	csel	x0, xzr, x8, eq  // eq = none
    b330:	add	sp, sp, #0x20
    b334:	ret
    b338:	sub	sp, sp, #0x20
    b33c:	stp	x29, x30, [sp, #16]
    b340:	add	x29, sp, #0x10
    b344:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b348:	ldr	x0, [x0, #16]
    b34c:	ldr	x8, [x8, #3504]
    b350:	mov	x4, x2
    b354:	mov	x3, x1
    b358:	add	x2, sp, #0x8
    b35c:	ldr	x8, [x8]
    b360:	mov	x1, x8
    b364:	bl	ca54 <gcc_cp_fe_context@@Base+0x3190>
    b368:	ldr	x8, [sp, #8]
    b36c:	ldp	x29, x30, [sp, #16]
    b370:	cmp	w0, #0x0
    b374:	csel	x0, xzr, x8, eq  // eq = none
    b378:	add	sp, sp, #0x20
    b37c:	ret
    b380:	sub	sp, sp, #0x20
    b384:	stp	x29, x30, [sp, #16]
    b388:	add	x29, sp, #0x10
    b38c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b390:	ldr	x0, [x0, #16]
    b394:	ldr	x8, [x8, #3784]
    b398:	mov	x7, x5
    b39c:	mov	x6, x4
    b3a0:	mov	x5, x3
    b3a4:	ldr	x8, [x8]
    b3a8:	mov	w4, w2
    b3ac:	mov	x3, x1
    b3b0:	add	x2, sp, #0x8
    b3b4:	mov	x1, x8
    b3b8:	bl	cb54 <gcc_cp_fe_context@@Base+0x3290>
    b3bc:	ldr	x8, [sp, #8]
    b3c0:	ldp	x29, x30, [sp, #16]
    b3c4:	cmp	w0, #0x0
    b3c8:	csel	x0, xzr, x8, eq  // eq = none
    b3cc:	add	sp, sp, #0x20
    b3d0:	ret
    b3d4:	sub	sp, sp, #0x20
    b3d8:	stp	x29, x30, [sp, #16]
    b3dc:	add	x29, sp, #0x10
    b3e0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b3e4:	ldr	x0, [x0, #16]
    b3e8:	ldr	x8, [x8, #3824]
    b3ec:	mov	x4, x2
    b3f0:	mov	x3, x1
    b3f4:	add	x2, sp, #0x8
    b3f8:	ldr	x8, [x8]
    b3fc:	mov	x1, x8
    b400:	bl	cca0 <gcc_cp_fe_context@@Base+0x33dc>
    b404:	ldr	x8, [sp, #8]
    b408:	ldp	x29, x30, [sp, #16]
    b40c:	cmp	w0, #0x0
    b410:	csel	x0, xzr, x8, eq  // eq = none
    b414:	add	sp, sp, #0x20
    b418:	ret
    b41c:	sub	sp, sp, #0x20
    b420:	stp	x29, x30, [sp, #16]
    b424:	add	x29, sp, #0x10
    b428:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b42c:	ldr	x0, [x0, #16]
    b430:	ldr	x8, [x8, #3424]
    b434:	mov	w4, w2
    b438:	mov	x3, x1
    b43c:	add	x2, sp, #0x8
    b440:	ldr	x8, [x8]
    b444:	mov	x1, x8
    b448:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    b44c:	ldr	x8, [sp, #8]
    b450:	ldp	x29, x30, [sp, #16]
    b454:	cmp	w0, #0x0
    b458:	csel	x0, xzr, x8, eq  // eq = none
    b45c:	add	sp, sp, #0x20
    b460:	ret
    b464:	sub	sp, sp, #0x20
    b468:	stp	x29, x30, [sp, #16]
    b46c:	add	x29, sp, #0x10
    b470:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b474:	ldr	x0, [x0, #16]
    b478:	ldr	x8, [x8, #3776]
    b47c:	mov	x4, x2
    b480:	mov	x3, x1
    b484:	add	x2, sp, #0x8
    b488:	ldr	x8, [x8]
    b48c:	mov	x1, x8
    b490:	bl	cd54 <gcc_cp_fe_context@@Base+0x3490>
    b494:	ldr	x8, [sp, #8]
    b498:	ldp	x29, x30, [sp, #16]
    b49c:	cmp	w0, #0x0
    b4a0:	csel	x0, xzr, x8, eq  // eq = none
    b4a4:	add	sp, sp, #0x20
    b4a8:	ret
    b4ac:	sub	sp, sp, #0x20
    b4b0:	stp	x29, x30, [sp, #16]
    b4b4:	add	x29, sp, #0x10
    b4b8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b4bc:	ldr	x0, [x0, #16]
    b4c0:	ldr	x8, [x8, #3408]
    b4c4:	mov	x5, x3
    b4c8:	mov	x4, x2
    b4cc:	mov	x3, x1
    b4d0:	ldr	x8, [x8]
    b4d4:	add	x2, sp, #0x8
    b4d8:	mov	x1, x8
    b4dc:	bl	c500 <gcc_cp_fe_context@@Base+0x2c3c>
    b4e0:	ldr	x8, [sp, #8]
    b4e4:	ldp	x29, x30, [sp, #16]
    b4e8:	cmp	w0, #0x0
    b4ec:	csel	x0, xzr, x8, eq  // eq = none
    b4f0:	add	sp, sp, #0x20
    b4f4:	ret
    b4f8:	sub	sp, sp, #0x20
    b4fc:	stp	x29, x30, [sp, #16]
    b500:	add	x29, sp, #0x10
    b504:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b508:	ldr	x0, [x0, #16]
    b50c:	ldr	x8, [x8, #3768]
    b510:	mov	x6, x4
    b514:	mov	x5, x3
    b518:	mov	x4, x2
    b51c:	ldr	x8, [x8]
    b520:	mov	x3, x1
    b524:	add	x2, sp, #0x8
    b528:	mov	x1, x8
    b52c:	bl	ce08 <gcc_cp_fe_context@@Base+0x3544>
    b530:	ldr	x8, [sp, #8]
    b534:	ldp	x29, x30, [sp, #16]
    b538:	cmp	w0, #0x0
    b53c:	csel	x0, xzr, x8, eq  // eq = none
    b540:	add	sp, sp, #0x20
    b544:	ret
    b548:	sub	sp, sp, #0x20
    b54c:	stp	x29, x30, [sp, #16]
    b550:	add	x29, sp, #0x10
    b554:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b558:	ldr	x0, [x0, #16]
    b55c:	ldr	x8, [x8, #3480]
    b560:	mov	x4, x2
    b564:	mov	x3, x1
    b568:	add	x2, sp, #0x8
    b56c:	ldr	x8, [x8]
    b570:	mov	x1, x8
    b574:	bl	cd54 <gcc_cp_fe_context@@Base+0x3490>
    b578:	ldr	x8, [sp, #8]
    b57c:	ldp	x29, x30, [sp, #16]
    b580:	cmp	w0, #0x0
    b584:	csel	x0, xzr, x8, eq  // eq = none
    b588:	add	sp, sp, #0x20
    b58c:	ret
    b590:	sub	sp, sp, #0x20
    b594:	stp	x29, x30, [sp, #16]
    b598:	add	x29, sp, #0x10
    b59c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b5a0:	ldr	x0, [x0, #16]
    b5a4:	ldr	x8, [x8, #3328]
    b5a8:	mov	x5, x3
    b5ac:	mov	x4, x2
    b5b0:	mov	x3, x1
    b5b4:	ldr	x8, [x8]
    b5b8:	add	x2, sp, #0x8
    b5bc:	mov	x1, x8
    b5c0:	bl	c500 <gcc_cp_fe_context@@Base+0x2c3c>
    b5c4:	ldr	x8, [sp, #8]
    b5c8:	ldp	x29, x30, [sp, #16]
    b5cc:	cmp	w0, #0x0
    b5d0:	csel	x0, xzr, x8, eq  // eq = none
    b5d4:	add	sp, sp, #0x20
    b5d8:	ret
    b5dc:	sub	sp, sp, #0x20
    b5e0:	stp	x29, x30, [sp, #16]
    b5e4:	add	x29, sp, #0x10
    b5e8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b5ec:	ldr	x0, [x0, #16]
    b5f0:	ldr	x8, [x8, #3744]
    b5f4:	mov	x5, x3
    b5f8:	mov	x4, x2
    b5fc:	mov	x3, x1
    b600:	ldr	x8, [x8]
    b604:	add	x2, sp, #0x8
    b608:	mov	x1, x8
    b60c:	bl	ceec <gcc_cp_fe_context@@Base+0x3628>
    b610:	ldr	x8, [sp, #8]
    b614:	ldp	x29, x30, [sp, #16]
    b618:	cmp	w0, #0x0
    b61c:	csel	x0, xzr, x8, eq  // eq = none
    b620:	add	sp, sp, #0x20
    b624:	ret
    b628:	sub	sp, sp, #0x20
    b62c:	stp	x29, x30, [sp, #16]
    b630:	add	x29, sp, #0x10
    b634:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b638:	ldr	x0, [x0, #16]
    b63c:	ldr	x8, [x8, #3680]
    b640:	mov	x6, x4
    b644:	mov	x5, x3
    b648:	mov	x4, x2
    b64c:	ldr	x8, [x8]
    b650:	mov	x3, x1
    b654:	add	x2, sp, #0x8
    b658:	mov	x1, x8
    b65c:	bl	cff4 <gcc_cp_fe_context@@Base+0x3730>
    b660:	ldr	x8, [sp, #8]
    b664:	ldp	x29, x30, [sp, #16]
    b668:	cmp	w0, #0x0
    b66c:	csel	x0, xzr, x8, eq  // eq = none
    b670:	add	sp, sp, #0x20
    b674:	ret
    b678:	sub	sp, sp, #0x20
    b67c:	stp	x29, x30, [sp, #16]
    b680:	add	x29, sp, #0x10
    b684:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b688:	ldr	x0, [x0, #16]
    b68c:	ldr	x8, [x8, #3552]
    b690:	mov	x5, x3
    b694:	mov	w4, w2
    b698:	mov	x3, x1
    b69c:	ldr	x8, [x8]
    b6a0:	add	x2, sp, #0x8
    b6a4:	mov	x1, x8
    b6a8:	bl	d148 <gcc_cp_fe_context@@Base+0x3884>
    b6ac:	ldr	x8, [sp, #8]
    b6b0:	ldp	x29, x30, [sp, #16]
    b6b4:	cmp	w0, #0x0
    b6b8:	csel	x0, xzr, x8, eq  // eq = none
    b6bc:	add	sp, sp, #0x20
    b6c0:	ret
    b6c4:	sub	sp, sp, #0x20
    b6c8:	stp	x29, x30, [sp, #16]
    b6cc:	add	x29, sp, #0x10
    b6d0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b6d4:	ldr	x0, [x0, #16]
    b6d8:	ldr	x8, [x8, #3704]
    b6dc:	mov	x3, x1
    b6e0:	add	x2, sp, #0x8
    b6e4:	ldr	x8, [x8]
    b6e8:	mov	x1, x8
    b6ec:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    b6f0:	ldr	x8, [sp, #8]
    b6f4:	ldp	x29, x30, [sp, #16]
    b6f8:	cmp	w0, #0x0
    b6fc:	csel	x0, xzr, x8, eq  // eq = none
    b700:	add	sp, sp, #0x20
    b704:	ret
    b708:	sub	sp, sp, #0x20
    b70c:	stp	x29, x30, [sp, #16]
    b710:	add	x29, sp, #0x10
    b714:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b718:	ldr	x0, [x0, #16]
    b71c:	ldr	x8, [x8, #3592]
    b720:	mov	w7, w5
    b724:	mov	x6, x4
    b728:	mov	x5, x3
    b72c:	ldr	x8, [x8]
    b730:	mov	x4, x2
    b734:	mov	x3, x1
    b738:	add	x2, sp, #0x8
    b73c:	mov	x1, x8
    b740:	bl	d250 <gcc_cp_fe_context@@Base+0x398c>
    b744:	ldr	x8, [sp, #8]
    b748:	ldp	x29, x30, [sp, #16]
    b74c:	cmp	w0, #0x0
    b750:	csel	x0, xzr, x8, eq  // eq = none
    b754:	add	sp, sp, #0x20
    b758:	ret
    b75c:	sub	sp, sp, #0x20
    b760:	stp	x29, x30, [sp, #16]
    b764:	add	x29, sp, #0x10
    b768:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b76c:	ldr	x0, [x0, #16]
    b770:	ldr	x8, [x8, #3720]
    b774:	mov	w6, w4
    b778:	mov	x5, x3
    b77c:	mov	x4, x2
    b780:	ldr	x8, [x8]
    b784:	mov	x3, x1
    b788:	add	x2, sp, #0x8
    b78c:	mov	x1, x8
    b790:	bl	d39c <gcc_cp_fe_context@@Base+0x3ad8>
    b794:	ldr	x8, [sp, #8]
    b798:	ldp	x29, x30, [sp, #16]
    b79c:	cmp	w0, #0x0
    b7a0:	csel	x0, xzr, x8, eq  // eq = none
    b7a4:	add	sp, sp, #0x20
    b7a8:	ret
    b7ac:	sub	sp, sp, #0x20
    b7b0:	stp	x29, x30, [sp, #16]
    b7b4:	add	x29, sp, #0x10
    b7b8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b7bc:	ldr	x0, [x0, #16]
    b7c0:	ldr	x8, [x8, #3760]
    b7c4:	mov	w6, w4
    b7c8:	mov	x5, x3
    b7cc:	mov	x4, x2
    b7d0:	ldr	x8, [x8]
    b7d4:	mov	x3, x1
    b7d8:	add	x2, sp, #0x8
    b7dc:	mov	x1, x8
    b7e0:	bl	d4cc <gcc_cp_fe_context@@Base+0x3c08>
    b7e4:	ldr	x8, [sp, #8]
    b7e8:	ldp	x29, x30, [sp, #16]
    b7ec:	cmp	w0, #0x0
    b7f0:	csel	x0, xzr, x8, eq  // eq = none
    b7f4:	add	sp, sp, #0x20
    b7f8:	ret
    b7fc:	sub	sp, sp, #0x20
    b800:	stp	x29, x30, [sp, #16]
    b804:	add	x29, sp, #0x10
    b808:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b80c:	ldr	x0, [x0, #16]
    b810:	ldr	x8, [x8, #3360]
    b814:	mov	w7, w5
    b818:	mov	x6, x4
    b81c:	mov	w5, w3
    b820:	ldr	x8, [x8]
    b824:	mov	x4, x2
    b828:	mov	w3, w1
    b82c:	add	x2, sp, #0x8
    b830:	mov	x1, x8
    b834:	bl	d5fc <gcc_cp_fe_context@@Base+0x3d38>
    b838:	ldr	x8, [sp, #8]
    b83c:	ldp	x29, x30, [sp, #16]
    b840:	cmp	w0, #0x0
    b844:	csel	x0, xzr, x8, eq  // eq = none
    b848:	add	sp, sp, #0x20
    b84c:	ret
    b850:	sub	sp, sp, #0x20
    b854:	stp	x29, x30, [sp, #16]
    b858:	add	x29, sp, #0x10
    b85c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b860:	ldr	x0, [x0, #16]
    b864:	ldr	x8, [x8, #3536]
    b868:	mov	x7, x5
    b86c:	mov	x6, x4
    b870:	mov	w5, w3
    b874:	ldr	x8, [x8]
    b878:	mov	x4, x2
    b87c:	mov	x3, x1
    b880:	add	x2, sp, #0x8
    b884:	mov	x1, x8
    b888:	bl	d6fc <gcc_cp_fe_context@@Base+0x3e38>
    b88c:	ldr	x8, [sp, #8]
    b890:	ldp	x29, x30, [sp, #16]
    b894:	cmp	w0, #0x0
    b898:	csel	x0, xzr, x8, eq  // eq = none
    b89c:	add	sp, sp, #0x20
    b8a0:	ret
    b8a4:	sub	sp, sp, #0x20
    b8a8:	stp	x29, x30, [sp, #16]
    b8ac:	add	x29, sp, #0x10
    b8b0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b8b4:	ldr	x0, [x0, #16]
    b8b8:	ldr	x8, [x8, #3888]
    b8bc:	mov	x3, x1
    b8c0:	sub	x2, x29, #0x4
    b8c4:	ldr	x8, [x8]
    b8c8:	mov	x1, x8
    b8cc:	bl	d7fc <gcc_cp_fe_context@@Base+0x3f38>
    b8d0:	ldur	w8, [x29, #-4]
    b8d4:	ldp	x29, x30, [sp, #16]
    b8d8:	cmp	w0, #0x0
    b8dc:	csel	w0, wzr, w8, eq  // eq = none
    b8e0:	add	sp, sp, #0x20
    b8e4:	ret
    b8e8:	sub	sp, sp, #0x20
    b8ec:	stp	x29, x30, [sp, #16]
    b8f0:	add	x29, sp, #0x10
    b8f4:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b8f8:	ldr	x0, [x0, #16]
    b8fc:	ldr	x8, [x8, #3224]
    b900:	mov	w7, w5
    b904:	mov	x6, x4
    b908:	mov	w5, w3
    b90c:	ldr	x8, [x8]
    b910:	mov	x4, x2
    b914:	mov	x3, x1
    b918:	add	x2, sp, #0x8
    b91c:	mov	x1, x8
    b920:	bl	d89c <gcc_cp_fe_context@@Base+0x3fd8>
    b924:	ldr	x8, [sp, #8]
    b928:	ldp	x29, x30, [sp, #16]
    b92c:	cmp	w0, #0x0
    b930:	csel	x0, xzr, x8, eq  // eq = none
    b934:	add	sp, sp, #0x20
    b938:	ret
    b93c:	sub	sp, sp, #0x20
    b940:	stp	x29, x30, [sp, #16]
    b944:	add	x29, sp, #0x10
    b948:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b94c:	ldr	x0, [x0, #16]
    b950:	ldr	x8, [x8, #3400]
    b954:	mov	x5, x3
    b958:	mov	x4, x2
    b95c:	mov	x3, x1
    b960:	ldr	x8, [x8]
    b964:	add	x2, sp, #0x8
    b968:	mov	x1, x8
    b96c:	bl	d99c <gcc_cp_fe_context@@Base+0x40d8>
    b970:	ldr	x8, [sp, #8]
    b974:	ldp	x29, x30, [sp, #16]
    b978:	cmp	w0, #0x0
    b97c:	csel	x0, xzr, x8, eq  // eq = none
    b980:	add	sp, sp, #0x20
    b984:	ret
    b988:	sub	sp, sp, #0x20
    b98c:	stp	x29, x30, [sp, #16]
    b990:	add	x29, sp, #0x10
    b994:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b998:	ldr	x0, [x0, #16]
    b99c:	ldr	x8, [x8, #3696]
    b9a0:	mov	x3, x1
    b9a4:	sub	x2, x29, #0x4
    b9a8:	ldr	x8, [x8]
    b9ac:	mov	x1, x8
    b9b0:	bl	86a4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1160>
    b9b4:	ldur	w8, [x29, #-4]
    b9b8:	ldp	x29, x30, [sp, #16]
    b9bc:	cmp	w0, #0x0
    b9c0:	csel	w0, wzr, w8, eq  // eq = none
    b9c4:	add	sp, sp, #0x20
    b9c8:	ret
    b9cc:	sub	sp, sp, #0x20
    b9d0:	stp	x29, x30, [sp, #16]
    b9d4:	add	x29, sp, #0x10
    b9d8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    b9dc:	ldr	x0, [x0, #16]
    b9e0:	ldr	x8, [x8, #3928]
    b9e4:	mov	w5, w3
    b9e8:	mov	x4, x2
    b9ec:	mov	x3, x1
    b9f0:	ldr	x8, [x8]
    b9f4:	add	x2, sp, #0x8
    b9f8:	mov	x1, x8
    b9fc:	bl	8744 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1200>
    ba00:	ldr	x8, [sp, #8]
    ba04:	ldp	x29, x30, [sp, #16]
    ba08:	cmp	w0, #0x0
    ba0c:	csel	x0, xzr, x8, eq  // eq = none
    ba10:	add	sp, sp, #0x20
    ba14:	ret
    ba18:	sub	sp, sp, #0x20
    ba1c:	stp	x29, x30, [sp, #16]
    ba20:	add	x29, sp, #0x10
    ba24:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ba28:	ldr	x0, [x0, #16]
    ba2c:	ldr	x8, [x8, #3280]
    ba30:	mov	x4, x2
    ba34:	mov	x3, x1
    ba38:	add	x2, sp, #0x8
    ba3c:	ldr	x8, [x8]
    ba40:	mov	x1, x8
    ba44:	bl	da6c <gcc_cp_fe_context@@Base+0x41a8>
    ba48:	ldr	x8, [sp, #8]
    ba4c:	ldp	x29, x30, [sp, #16]
    ba50:	cmp	w0, #0x0
    ba54:	csel	x0, xzr, x8, eq  // eq = none
    ba58:	add	sp, sp, #0x20
    ba5c:	ret
    ba60:	sub	sp, sp, #0x20
    ba64:	stp	x29, x30, [sp, #16]
    ba68:	add	x29, sp, #0x10
    ba6c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    ba70:	ldr	x0, [x0, #16]
    ba74:	ldr	x8, [x8, #3632]
    ba78:	mov	w6, w4
    ba7c:	mov	w5, w3
    ba80:	mov	x4, x2
    ba84:	ldr	x8, [x8]
    ba88:	mov	x3, x1
    ba8c:	add	x2, sp, #0x8
    ba90:	mov	x1, x8
    ba94:	bl	db20 <gcc_cp_fe_context@@Base+0x425c>
    ba98:	ldr	x8, [sp, #8]
    ba9c:	ldp	x29, x30, [sp, #16]
    baa0:	cmp	w0, #0x0
    baa4:	csel	x0, xzr, x8, eq  // eq = none
    baa8:	add	sp, sp, #0x20
    baac:	ret
    bab0:	sub	sp, sp, #0x20
    bab4:	stp	x29, x30, [sp, #16]
    bab8:	add	x29, sp, #0x10
    babc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bac0:	ldr	x0, [x0, #16]
    bac4:	ldr	x8, [x8, #3792]
    bac8:	mov	w4, w2
    bacc:	mov	x3, x1
    bad0:	add	x2, sp, #0x8
    bad4:	ldr	x8, [x8]
    bad8:	mov	x1, x8
    badc:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    bae0:	ldr	x8, [sp, #8]
    bae4:	ldp	x29, x30, [sp, #16]
    bae8:	cmp	w0, #0x0
    baec:	csel	x0, xzr, x8, eq  // eq = none
    baf0:	add	sp, sp, #0x20
    baf4:	ret
    baf8:	sub	sp, sp, #0x20
    bafc:	stp	x29, x30, [sp, #16]
    bb00:	add	x29, sp, #0x10
    bb04:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bb08:	ldr	x0, [x0, #16]
    bb0c:	ldr	x8, [x8, #3560]
    bb10:	mov	x3, x1
    bb14:	add	x2, sp, #0x8
    bb18:	ldr	x8, [x8]
    bb1c:	mov	x1, x8
    bb20:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    bb24:	ldr	x8, [sp, #8]
    bb28:	ldp	x29, x30, [sp, #16]
    bb2c:	cmp	w0, #0x0
    bb30:	csel	x0, xzr, x8, eq  // eq = none
    bb34:	add	sp, sp, #0x20
    bb38:	ret
    bb3c:	sub	sp, sp, #0x20
    bb40:	stp	x29, x30, [sp, #16]
    bb44:	add	x29, sp, #0x10
    bb48:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bb4c:	ldr	x0, [x0, #16]
    bb50:	ldr	x8, [x8, #3272]
    bb54:	mov	x5, x3
    bb58:	mov	x4, x2
    bb5c:	mov	w3, w1
    bb60:	ldr	x8, [x8]
    bb64:	add	x2, sp, #0x8
    bb68:	mov	x1, x8
    bb6c:	bl	8d24 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x17e0>
    bb70:	ldr	x8, [sp, #8]
    bb74:	ldp	x29, x30, [sp, #16]
    bb78:	cmp	w0, #0x0
    bb7c:	csel	x0, xzr, x8, eq  // eq = none
    bb80:	add	sp, sp, #0x20
    bb84:	ret
    bb88:	sub	sp, sp, #0x30
    bb8c:	stp	x29, x30, [sp, #16]
    bb90:	stp	x20, x19, [sp, #32]
    bb94:	add	x29, sp, #0x10
    bb98:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bb9c:	ldr	x19, [x0, #16]
    bba0:	ldr	x8, [x8, #4064]
    bba4:	mov	w1, #0x51                  	// #81
    bba8:	mov	x0, x19
    bbac:	ldr	x20, [x8]
    bbb0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    bbb4:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x233c>
    bbb8:	mov	x0, x19
    bbbc:	mov	x1, x20
    bbc0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    bbc4:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x233c>
    bbc8:	mov	x0, x19
    bbcc:	mov	x1, xzr
    bbd0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    bbd4:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x233c>
    bbd8:	mov	w1, #0x1                   	// #1
    bbdc:	mov	x0, x19
    bbe0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    bbe4:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x233c>
    bbe8:	add	x1, sp, #0x8
    bbec:	mov	x0, x19
    bbf0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    bbf4:	cbz	w0, bc00 <gcc_cp_fe_context@@Base+0x233c>
    bbf8:	ldr	x0, [sp, #8]
    bbfc:	b	bc04 <gcc_cp_fe_context@@Base+0x2340>
    bc00:	mov	x0, xzr
    bc04:	ldp	x20, x19, [sp, #32]
    bc08:	ldp	x29, x30, [sp, #16]
    bc0c:	add	sp, sp, #0x30
    bc10:	ret
    bc14:	sub	sp, sp, #0x20
    bc18:	stp	x29, x30, [sp, #16]
    bc1c:	add	x29, sp, #0x10
    bc20:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bc24:	ldr	x0, [x0, #16]
    bc28:	ldr	x8, [x8, #3288]
    bc2c:	mov	x4, x2
    bc30:	mov	x3, x1
    bc34:	add	x2, sp, #0x8
    bc38:	ldr	x8, [x8]
    bc3c:	mov	x1, x8
    bc40:	bl	8df4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x18b0>
    bc44:	ldr	x8, [sp, #8]
    bc48:	ldp	x29, x30, [sp, #16]
    bc4c:	cmp	w0, #0x0
    bc50:	csel	x0, xzr, x8, eq  // eq = none
    bc54:	add	sp, sp, #0x20
    bc58:	ret
    bc5c:	sub	sp, sp, #0x30
    bc60:	stp	x29, x30, [sp, #16]
    bc64:	stp	x20, x19, [sp, #32]
    bc68:	add	x29, sp, #0x10
    bc6c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bc70:	ldr	x19, [x0, #16]
    bc74:	ldr	x8, [x8, #3256]
    bc78:	mov	w1, #0x51                  	// #81
    bc7c:	mov	x0, x19
    bc80:	ldr	x20, [x8]
    bc84:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    bc88:	cbz	w0, bcd4 <gcc_cp_fe_context@@Base+0x2410>
    bc8c:	mov	x0, x19
    bc90:	mov	x1, x20
    bc94:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    bc98:	cbz	w0, bcd4 <gcc_cp_fe_context@@Base+0x2410>
    bc9c:	mov	x0, x19
    bca0:	mov	x1, xzr
    bca4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    bca8:	cbz	w0, bcd4 <gcc_cp_fe_context@@Base+0x2410>
    bcac:	mov	w1, #0x1                   	// #1
    bcb0:	mov	x0, x19
    bcb4:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    bcb8:	cbz	w0, bcd4 <gcc_cp_fe_context@@Base+0x2410>
    bcbc:	add	x1, sp, #0x8
    bcc0:	mov	x0, x19
    bcc4:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    bcc8:	cbz	w0, bcd4 <gcc_cp_fe_context@@Base+0x2410>
    bccc:	ldr	x0, [sp, #8]
    bcd0:	b	bcd8 <gcc_cp_fe_context@@Base+0x2414>
    bcd4:	mov	x0, xzr
    bcd8:	ldp	x20, x19, [sp, #32]
    bcdc:	ldp	x29, x30, [sp, #16]
    bce0:	add	sp, sp, #0x30
    bce4:	ret
    bce8:	sub	sp, sp, #0x30
    bcec:	stp	x29, x30, [sp, #16]
    bcf0:	stp	x20, x19, [sp, #32]
    bcf4:	add	x29, sp, #0x10
    bcf8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bcfc:	ldr	x19, [x0, #16]
    bd00:	ldr	x8, [x8, #3976]
    bd04:	mov	w1, #0x51                  	// #81
    bd08:	mov	x0, x19
    bd0c:	ldr	x20, [x8]
    bd10:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    bd14:	cbz	w0, bd60 <gcc_cp_fe_context@@Base+0x249c>
    bd18:	mov	x0, x19
    bd1c:	mov	x1, x20
    bd20:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    bd24:	cbz	w0, bd60 <gcc_cp_fe_context@@Base+0x249c>
    bd28:	mov	x0, x19
    bd2c:	mov	x1, xzr
    bd30:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    bd34:	cbz	w0, bd60 <gcc_cp_fe_context@@Base+0x249c>
    bd38:	mov	w1, #0x1                   	// #1
    bd3c:	mov	x0, x19
    bd40:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    bd44:	cbz	w0, bd60 <gcc_cp_fe_context@@Base+0x249c>
    bd48:	add	x1, sp, #0x8
    bd4c:	mov	x0, x19
    bd50:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    bd54:	cbz	w0, bd60 <gcc_cp_fe_context@@Base+0x249c>
    bd58:	ldr	x0, [sp, #8]
    bd5c:	b	bd64 <gcc_cp_fe_context@@Base+0x24a0>
    bd60:	mov	x0, xzr
    bd64:	ldp	x20, x19, [sp, #32]
    bd68:	ldp	x29, x30, [sp, #16]
    bd6c:	add	sp, sp, #0x30
    bd70:	ret
    bd74:	sub	sp, sp, #0x30
    bd78:	stp	x29, x30, [sp, #16]
    bd7c:	stp	x20, x19, [sp, #32]
    bd80:	add	x29, sp, #0x10
    bd84:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bd88:	ldr	x19, [x0, #16]
    bd8c:	ldr	x8, [x8, #3336]
    bd90:	mov	w1, #0x51                  	// #81
    bd94:	mov	x0, x19
    bd98:	ldr	x20, [x8]
    bd9c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    bda0:	cbz	w0, bdec <gcc_cp_fe_context@@Base+0x2528>
    bda4:	mov	x0, x19
    bda8:	mov	x1, x20
    bdac:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    bdb0:	cbz	w0, bdec <gcc_cp_fe_context@@Base+0x2528>
    bdb4:	mov	x0, x19
    bdb8:	mov	x1, xzr
    bdbc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    bdc0:	cbz	w0, bdec <gcc_cp_fe_context@@Base+0x2528>
    bdc4:	mov	w1, #0x1                   	// #1
    bdc8:	mov	x0, x19
    bdcc:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    bdd0:	cbz	w0, bdec <gcc_cp_fe_context@@Base+0x2528>
    bdd4:	add	x1, sp, #0x8
    bdd8:	mov	x0, x19
    bddc:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    bde0:	cbz	w0, bdec <gcc_cp_fe_context@@Base+0x2528>
    bde4:	ldr	x0, [sp, #8]
    bde8:	b	bdf0 <gcc_cp_fe_context@@Base+0x252c>
    bdec:	mov	x0, xzr
    bdf0:	ldp	x20, x19, [sp, #32]
    bdf4:	ldp	x29, x30, [sp, #16]
    bdf8:	add	sp, sp, #0x30
    bdfc:	ret
    be00:	sub	sp, sp, #0x30
    be04:	stp	x29, x30, [sp, #16]
    be08:	stp	x20, x19, [sp, #32]
    be0c:	add	x29, sp, #0x10
    be10:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    be14:	ldr	x19, [x0, #16]
    be18:	ldr	x8, [x8, #3544]
    be1c:	mov	w1, #0x51                  	// #81
    be20:	mov	x0, x19
    be24:	ldr	x20, [x8]
    be28:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    be2c:	cbz	w0, be78 <gcc_cp_fe_context@@Base+0x25b4>
    be30:	mov	x0, x19
    be34:	mov	x1, x20
    be38:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    be3c:	cbz	w0, be78 <gcc_cp_fe_context@@Base+0x25b4>
    be40:	mov	x0, x19
    be44:	mov	x1, xzr
    be48:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    be4c:	cbz	w0, be78 <gcc_cp_fe_context@@Base+0x25b4>
    be50:	mov	w1, #0x1                   	// #1
    be54:	mov	x0, x19
    be58:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    be5c:	cbz	w0, be78 <gcc_cp_fe_context@@Base+0x25b4>
    be60:	add	x1, sp, #0x8
    be64:	mov	x0, x19
    be68:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    be6c:	cbz	w0, be78 <gcc_cp_fe_context@@Base+0x25b4>
    be70:	ldr	x0, [sp, #8]
    be74:	b	be7c <gcc_cp_fe_context@@Base+0x25b8>
    be78:	mov	x0, xzr
    be7c:	ldp	x20, x19, [sp, #32]
    be80:	ldp	x29, x30, [sp, #16]
    be84:	add	sp, sp, #0x30
    be88:	ret
    be8c:	sub	sp, sp, #0x20
    be90:	stp	x29, x30, [sp, #16]
    be94:	add	x29, sp, #0x10
    be98:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    be9c:	ldr	x0, [x0, #16]
    bea0:	ldr	x8, [x8, #3512]
    bea4:	mov	w4, w2
    bea8:	mov	x3, x1
    beac:	add	x2, sp, #0x8
    beb0:	ldr	x8, [x8]
    beb4:	mov	x1, x8
    beb8:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    bebc:	ldr	x8, [sp, #8]
    bec0:	ldp	x29, x30, [sp, #16]
    bec4:	cmp	w0, #0x0
    bec8:	csel	x0, xzr, x8, eq  // eq = none
    becc:	add	sp, sp, #0x20
    bed0:	ret
    bed4:	sub	sp, sp, #0x20
    bed8:	stp	x29, x30, [sp, #16]
    bedc:	add	x29, sp, #0x10
    bee0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bee4:	ldr	x0, [x0, #16]
    bee8:	ldr	x8, [x8, #3568]
    beec:	mov	x4, x2
    bef0:	mov	x3, x1
    bef4:	add	x2, sp, #0x8
    bef8:	ldr	x8, [x8]
    befc:	mov	x1, x8
    bf00:	bl	c684 <gcc_cp_fe_context@@Base+0x2dc0>
    bf04:	ldr	x8, [sp, #8]
    bf08:	ldp	x29, x30, [sp, #16]
    bf0c:	cmp	w0, #0x0
    bf10:	csel	x0, xzr, x8, eq  // eq = none
    bf14:	add	sp, sp, #0x20
    bf18:	ret
    bf1c:	sub	sp, sp, #0x20
    bf20:	stp	x29, x30, [sp, #16]
    bf24:	add	x29, sp, #0x10
    bf28:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bf2c:	ldr	x0, [x0, #16]
    bf30:	ldr	x8, [x8, #3896]
    bf34:	mov	x4, x2
    bf38:	mov	x3, x1
    bf3c:	add	x2, sp, #0x8
    bf40:	ldr	x8, [x8]
    bf44:	mov	x1, x8
    bf48:	bl	8a1c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14d8>
    bf4c:	ldr	x8, [sp, #8]
    bf50:	ldp	x29, x30, [sp, #16]
    bf54:	cmp	w0, #0x0
    bf58:	csel	x0, xzr, x8, eq  // eq = none
    bf5c:	add	sp, sp, #0x20
    bf60:	ret
    bf64:	sub	sp, sp, #0x20
    bf68:	stp	x29, x30, [sp, #16]
    bf6c:	add	x29, sp, #0x10
    bf70:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bf74:	ldr	x0, [x0, #16]
    bf78:	ldr	x8, [x8, #4008]
    bf7c:	mov	w4, w2
    bf80:	mov	x3, x1
    bf84:	add	x2, sp, #0x8
    bf88:	ldr	x8, [x8]
    bf8c:	mov	x1, x8
    bf90:	bl	dc04 <gcc_cp_fe_context@@Base+0x4340>
    bf94:	ldr	x8, [sp, #8]
    bf98:	ldp	x29, x30, [sp, #16]
    bf9c:	cmp	w0, #0x0
    bfa0:	csel	x0, xzr, x8, eq  // eq = none
    bfa4:	add	sp, sp, #0x20
    bfa8:	ret
    bfac:	sub	sp, sp, #0x20
    bfb0:	stp	x29, x30, [sp, #16]
    bfb4:	add	x29, sp, #0x10
    bfb8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    bfbc:	ldr	x0, [x0, #16]
    bfc0:	ldr	x8, [x8, #3984]
    bfc4:	mov	x3, x1
    bfc8:	add	x2, sp, #0x8
    bfcc:	ldr	x8, [x8]
    bfd0:	mov	x1, x8
    bfd4:	bl	8380 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0xe3c>
    bfd8:	ldr	x8, [sp, #8]
    bfdc:	ldp	x29, x30, [sp, #16]
    bfe0:	cmp	w0, #0x0
    bfe4:	csel	x0, xzr, x8, eq  // eq = none
    bfe8:	add	sp, sp, #0x20
    bfec:	ret
    bff0:	sub	sp, sp, #0x20
    bff4:	stp	x29, x30, [sp, #16]
    bff8:	add	x29, sp, #0x10
    bffc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    c000:	ldr	x0, [x0, #16]
    c004:	ldr	x8, [x8, #3712]
    c008:	mov	w4, w2
    c00c:	mov	x3, x1
    c010:	add	x2, sp, #0x8
    c014:	ldr	x8, [x8]
    c018:	mov	x1, x8
    c01c:	bl	8968 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1424>
    c020:	ldr	x8, [sp, #8]
    c024:	ldp	x29, x30, [sp, #16]
    c028:	cmp	w0, #0x0
    c02c:	csel	x0, xzr, x8, eq  // eq = none
    c030:	add	sp, sp, #0x20
    c034:	ret
    c038:	sub	sp, sp, #0x20
    c03c:	stp	x29, x30, [sp, #16]
    c040:	add	x29, sp, #0x10
    c044:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    c048:	ldr	x0, [x0, #16]
    c04c:	ldr	x8, [x8, #4032]
    c050:	mov	w7, w5
    c054:	mov	x6, x4
    c058:	mov	x5, x3
    c05c:	ldr	x8, [x8]
    c060:	mov	x4, x2
    c064:	mov	x3, x1
    c068:	sub	x2, x29, #0x4
    c06c:	mov	x1, x8
    c070:	bl	8b84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1640>
    c074:	ldur	w8, [x29, #-4]
    c078:	ldp	x29, x30, [sp, #16]
    c07c:	cmp	w0, #0x0
    c080:	csel	w0, wzr, w8, eq  // eq = none
    c084:	add	sp, sp, #0x20
    c088:	ret
    c08c:	sub	sp, sp, #0x20
    c090:	stp	x29, x30, [sp, #16]
    c094:	add	x29, sp, #0x10
    c098:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    c09c:	ldr	x0, [x0, #16]
    c0a0:	ldr	x8, [x8, #3640]
    c0a4:	mov	x3, x1
    c0a8:	add	x2, sp, #0x8
    c0ac:	ldr	x8, [x8]
    c0b0:	mov	x1, x8
    c0b4:	bl	8c84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x1740>
    c0b8:	ldr	x8, [sp, #8]
    c0bc:	ldp	x29, x30, [sp, #16]
    c0c0:	cmp	w0, #0x0
    c0c4:	csel	x0, xzr, x8, eq  // eq = none
    c0c8:	add	sp, sp, #0x20
    c0cc:	ret
    c0d0:	sub	sp, sp, #0x20
    c0d4:	stp	x29, x30, [sp, #16]
    c0d8:	add	x29, sp, #0x10
    c0dc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    c0e0:	ldr	x0, [x0, #16]
    c0e4:	ldr	x8, [x8, #3664]
    c0e8:	mov	w6, w4
    c0ec:	mov	x5, x3
    c0f0:	mov	x4, x2
    c0f4:	ldr	x8, [x8]
    c0f8:	mov	x3, x1
    c0fc:	sub	x2, x29, #0x4
    c100:	mov	x1, x8
    c104:	bl	dcb8 <gcc_cp_fe_context@@Base+0x43f4>
    c108:	ldur	w8, [x29, #-4]
    c10c:	ldp	x29, x30, [sp, #16]
    c110:	cmp	w0, #0x0
    c114:	csel	w0, wzr, w8, eq  // eq = none
    c118:	add	sp, sp, #0x20
    c11c:	ret
    c120:	sub	sp, sp, #0x40
    c124:	stp	x29, x30, [sp, #16]
    c128:	stp	x22, x21, [sp, #32]
    c12c:	stp	x20, x19, [sp, #48]
    c130:	add	x29, sp, #0x10
    c134:	mov	x22, x1
    c138:	mov	w1, #0x51                  	// #81
    c13c:	mov	x21, x3
    c140:	mov	x19, x2
    c144:	mov	x20, x0
    c148:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c14c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c150:	mov	x0, x20
    c154:	mov	x1, x22
    c158:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c15c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c160:	mov	w1, #0x1                   	// #1
    c164:	mov	x0, x20
    c168:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c16c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c170:	mov	x0, x20
    c174:	mov	x1, x21
    c178:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c17c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c180:	mov	w1, #0x1                   	// #1
    c184:	mov	x0, x20
    c188:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c18c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c190:	add	x1, sp, #0x8
    c194:	mov	x0, x20
    c198:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c19c:	cbz	w0, c1ac <gcc_cp_fe_context@@Base+0x28e8>
    c1a0:	ldr	x8, [sp, #8]
    c1a4:	mov	w0, #0x1                   	// #1
    c1a8:	str	w8, [x19]
    c1ac:	ldp	x20, x19, [sp, #48]
    c1b0:	ldp	x22, x21, [sp, #32]
    c1b4:	ldp	x29, x30, [sp, #16]
    c1b8:	add	sp, sp, #0x40
    c1bc:	ret
    c1c0:	stp	x29, x30, [sp, #-64]!
    c1c4:	str	x23, [sp, #16]
    c1c8:	stp	x22, x21, [sp, #32]
    c1cc:	stp	x20, x19, [sp, #48]
    c1d0:	mov	x29, sp
    c1d4:	mov	x23, x1
    c1d8:	mov	w1, #0x51                  	// #81
    c1dc:	mov	x21, x4
    c1e0:	mov	x22, x3
    c1e4:	mov	x19, x2
    c1e8:	mov	x20, x0
    c1ec:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c1f0:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c1f4:	mov	x0, x20
    c1f8:	mov	x1, x23
    c1fc:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c200:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c204:	mov	w1, #0x2                   	// #2
    c208:	mov	x0, x20
    c20c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c210:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c214:	mov	x0, x20
    c218:	mov	x1, x22
    c21c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c220:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c224:	mov	x0, x20
    c228:	mov	x1, x21
    c22c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c230:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c234:	mov	w1, #0x1                   	// #1
    c238:	mov	x0, x20
    c23c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c240:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c244:	add	x1, x29, #0x18
    c248:	mov	x0, x20
    c24c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c250:	cbz	w0, c260 <gcc_cp_fe_context@@Base+0x299c>
    c254:	ldr	x8, [x29, #24]
    c258:	mov	w0, #0x1                   	// #1
    c25c:	str	w8, [x19]
    c260:	ldp	x20, x19, [sp, #48]
    c264:	ldp	x22, x21, [sp, #32]
    c268:	ldr	x23, [sp, #16]
    c26c:	ldp	x29, x30, [sp], #64
    c270:	ret
    c274:	stp	x29, x30, [sp, #-64]!
    c278:	str	x23, [sp, #16]
    c27c:	stp	x22, x21, [sp, #32]
    c280:	stp	x20, x19, [sp, #48]
    c284:	mov	x29, sp
    c288:	mov	x23, x1
    c28c:	mov	w1, #0x51                  	// #81
    c290:	mov	x21, x4
    c294:	mov	x22, x3
    c298:	mov	x19, x2
    c29c:	mov	x20, x0
    c2a0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c2a4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2a8:	mov	x0, x20
    c2ac:	mov	x1, x23
    c2b0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c2b4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2b8:	mov	w1, #0x2                   	// #2
    c2bc:	mov	x0, x20
    c2c0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c2c4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2c8:	mov	x0, x20
    c2cc:	mov	x1, x22
    c2d0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c2d4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2d8:	mov	x0, x20
    c2dc:	mov	x1, x21
    c2e0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c2e4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2e8:	mov	w1, #0x1                   	// #1
    c2ec:	mov	x0, x20
    c2f0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c2f4:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c2f8:	add	x1, x29, #0x18
    c2fc:	mov	x0, x20
    c300:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c304:	cbz	w0, c314 <gcc_cp_fe_context@@Base+0x2a50>
    c308:	ldr	x8, [x29, #24]
    c30c:	mov	w0, #0x1                   	// #1
    c310:	str	w8, [x19]
    c314:	ldp	x20, x19, [sp, #48]
    c318:	ldp	x22, x21, [sp, #32]
    c31c:	ldr	x23, [sp, #16]
    c320:	ldp	x29, x30, [sp], #64
    c324:	ret
    c328:	stp	x29, x30, [sp, #-64]!
    c32c:	str	x23, [sp, #16]
    c330:	stp	x22, x21, [sp, #32]
    c334:	stp	x20, x19, [sp, #48]
    c338:	mov	x29, sp
    c33c:	mov	x23, x1
    c340:	mov	w1, #0x51                  	// #81
    c344:	mov	x21, x4
    c348:	mov	w22, w3
    c34c:	mov	x19, x2
    c350:	mov	x20, x0
    c354:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c358:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c35c:	mov	x0, x20
    c360:	mov	x1, x23
    c364:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c368:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c36c:	mov	w1, #0x2                   	// #2
    c370:	mov	x0, x20
    c374:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c378:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c37c:	mov	w1, w22
    c380:	mov	x0, x20
    c384:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c388:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c38c:	mov	x0, x20
    c390:	mov	x1, x21
    c394:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c398:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c39c:	mov	w1, #0x1                   	// #1
    c3a0:	mov	x0, x20
    c3a4:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c3a8:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c3ac:	add	x1, x29, #0x18
    c3b0:	mov	x0, x20
    c3b4:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c3b8:	cbz	w0, c3c8 <gcc_cp_fe_context@@Base+0x2b04>
    c3bc:	ldr	x8, [x29, #24]
    c3c0:	mov	w0, #0x1                   	// #1
    c3c4:	str	w8, [x19]
    c3c8:	ldp	x20, x19, [sp, #48]
    c3cc:	ldp	x22, x21, [sp, #32]
    c3d0:	ldr	x23, [sp, #16]
    c3d4:	ldp	x29, x30, [sp], #64
    c3d8:	ret
    c3dc:	sub	sp, sp, #0x60
    c3e0:	stp	x29, x30, [sp, #16]
    c3e4:	stp	x26, x25, [sp, #32]
    c3e8:	stp	x24, x23, [sp, #48]
    c3ec:	stp	x22, x21, [sp, #64]
    c3f0:	stp	x20, x19, [sp, #80]
    c3f4:	add	x29, sp, #0x10
    c3f8:	mov	x26, x1
    c3fc:	mov	w1, #0x51                  	// #81
    c400:	mov	x21, x7
    c404:	mov	x22, x6
    c408:	mov	x23, x5
    c40c:	mov	w24, w4
    c410:	mov	x25, x3
    c414:	mov	x19, x2
    c418:	mov	x20, x0
    c41c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c420:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c424:	mov	x0, x20
    c428:	mov	x1, x26
    c42c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c430:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c434:	mov	w1, #0x7                   	// #7
    c438:	mov	x0, x20
    c43c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c440:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c444:	mov	x0, x20
    c448:	mov	x1, x25
    c44c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c450:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c454:	mov	w1, w24
    c458:	mov	x0, x20
    c45c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c460:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c464:	mov	x0, x20
    c468:	mov	x1, x23
    c46c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c470:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c474:	mov	x0, x20
    c478:	mov	x1, x22
    c47c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c480:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c484:	mov	x0, x20
    c488:	mov	x1, x21
    c48c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c490:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c494:	ldr	x1, [x29, #80]
    c498:	mov	x0, x20
    c49c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c4a0:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c4a4:	ldr	w8, [x29, #88]
    c4a8:	mov	x0, x20
    c4ac:	mov	w1, w8
    c4b0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c4b4:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c4b8:	mov	w1, #0x1                   	// #1
    c4bc:	mov	x0, x20
    c4c0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c4c4:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c4c8:	add	x1, sp, #0x8
    c4cc:	mov	x0, x20
    c4d0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c4d4:	cbz	w0, c4e4 <gcc_cp_fe_context@@Base+0x2c20>
    c4d8:	ldr	x8, [sp, #8]
    c4dc:	mov	w0, #0x1                   	// #1
    c4e0:	str	x8, [x19]
    c4e4:	ldp	x20, x19, [sp, #80]
    c4e8:	ldp	x22, x21, [sp, #64]
    c4ec:	ldp	x24, x23, [sp, #48]
    c4f0:	ldp	x26, x25, [sp, #32]
    c4f4:	ldp	x29, x30, [sp, #16]
    c4f8:	add	sp, sp, #0x60
    c4fc:	ret
    c500:	sub	sp, sp, #0x50
    c504:	stp	x29, x30, [sp, #16]
    c508:	stp	x24, x23, [sp, #32]
    c50c:	stp	x22, x21, [sp, #48]
    c510:	stp	x20, x19, [sp, #64]
    c514:	add	x29, sp, #0x10
    c518:	mov	x24, x1
    c51c:	mov	w1, #0x51                  	// #81
    c520:	mov	x21, x5
    c524:	mov	x22, x4
    c528:	mov	x23, x3
    c52c:	mov	x19, x2
    c530:	mov	x20, x0
    c534:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c538:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c53c:	mov	x0, x20
    c540:	mov	x1, x24
    c544:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c548:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c54c:	mov	w1, #0x3                   	// #3
    c550:	mov	x0, x20
    c554:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c558:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c55c:	mov	x0, x20
    c560:	mov	x1, x23
    c564:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c568:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c56c:	mov	x0, x20
    c570:	mov	x1, x22
    c574:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c578:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c57c:	mov	x0, x20
    c580:	mov	x1, x21
    c584:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c588:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c58c:	mov	w1, #0x1                   	// #1
    c590:	mov	x0, x20
    c594:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c598:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c59c:	add	x1, sp, #0x8
    c5a0:	mov	x0, x20
    c5a4:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c5a8:	cbz	w0, c5b8 <gcc_cp_fe_context@@Base+0x2cf4>
    c5ac:	ldr	x8, [sp, #8]
    c5b0:	mov	w0, #0x1                   	// #1
    c5b4:	str	x8, [x19]
    c5b8:	ldp	x20, x19, [sp, #64]
    c5bc:	ldp	x22, x21, [sp, #48]
    c5c0:	ldp	x24, x23, [sp, #32]
    c5c4:	ldp	x29, x30, [sp, #16]
    c5c8:	add	sp, sp, #0x50
    c5cc:	ret
    c5d0:	stp	x29, x30, [sp, #-64]!
    c5d4:	str	x23, [sp, #16]
    c5d8:	stp	x22, x21, [sp, #32]
    c5dc:	stp	x20, x19, [sp, #48]
    c5e0:	mov	x29, sp
    c5e4:	mov	x23, x1
    c5e8:	mov	w1, #0x51                  	// #81
    c5ec:	mov	w21, w4
    c5f0:	mov	x22, x3
    c5f4:	mov	x19, x2
    c5f8:	mov	x20, x0
    c5fc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c600:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c604:	mov	x0, x20
    c608:	mov	x1, x23
    c60c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c610:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c614:	mov	w1, #0x2                   	// #2
    c618:	mov	x0, x20
    c61c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c620:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c624:	mov	x0, x20
    c628:	mov	x1, x22
    c62c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c630:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c634:	mov	w1, w21
    c638:	mov	x0, x20
    c63c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c640:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c644:	mov	w1, #0x1                   	// #1
    c648:	mov	x0, x20
    c64c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c650:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c654:	add	x1, x29, #0x18
    c658:	mov	x0, x20
    c65c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c660:	cbz	w0, c670 <gcc_cp_fe_context@@Base+0x2dac>
    c664:	ldr	x8, [x29, #24]
    c668:	mov	w0, #0x1                   	// #1
    c66c:	str	x8, [x19]
    c670:	ldp	x20, x19, [sp, #48]
    c674:	ldp	x22, x21, [sp, #32]
    c678:	ldr	x23, [sp, #16]
    c67c:	ldp	x29, x30, [sp], #64
    c680:	ret
    c684:	stp	x29, x30, [sp, #-64]!
    c688:	str	x23, [sp, #16]
    c68c:	stp	x22, x21, [sp, #32]
    c690:	stp	x20, x19, [sp, #48]
    c694:	mov	x29, sp
    c698:	mov	x23, x1
    c69c:	mov	w1, #0x51                  	// #81
    c6a0:	mov	x21, x4
    c6a4:	mov	x22, x3
    c6a8:	mov	x19, x2
    c6ac:	mov	x20, x0
    c6b0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c6b4:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c6b8:	mov	x0, x20
    c6bc:	mov	x1, x23
    c6c0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c6c4:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c6c8:	mov	w1, #0x2                   	// #2
    c6cc:	mov	x0, x20
    c6d0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c6d4:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c6d8:	mov	x0, x20
    c6dc:	mov	x1, x22
    c6e0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c6e4:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c6e8:	mov	x0, x20
    c6ec:	mov	x1, x21
    c6f0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c6f4:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c6f8:	mov	w1, #0x1                   	// #1
    c6fc:	mov	x0, x20
    c700:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c704:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c708:	add	x1, x29, #0x18
    c70c:	mov	x0, x20
    c710:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c714:	cbz	w0, c724 <gcc_cp_fe_context@@Base+0x2e60>
    c718:	ldr	x8, [x29, #24]
    c71c:	mov	w0, #0x1                   	// #1
    c720:	str	x8, [x19]
    c724:	ldp	x20, x19, [sp, #48]
    c728:	ldp	x22, x21, [sp, #32]
    c72c:	ldr	x23, [sp, #16]
    c730:	ldp	x29, x30, [sp], #64
    c734:	ret
    c738:	sub	sp, sp, #0x60
    c73c:	stp	x29, x30, [sp, #16]
    c740:	stp	x26, x25, [sp, #32]
    c744:	stp	x24, x23, [sp, #48]
    c748:	stp	x22, x21, [sp, #64]
    c74c:	stp	x20, x19, [sp, #80]
    c750:	add	x29, sp, #0x10
    c754:	mov	x26, x1
    c758:	mov	w1, #0x51                  	// #81
    c75c:	mov	w21, w7
    c760:	mov	x22, x6
    c764:	mov	x23, x5
    c768:	mov	w24, w4
    c76c:	mov	x25, x3
    c770:	mov	x19, x2
    c774:	mov	x20, x0
    c778:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c77c:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c780:	mov	x0, x20
    c784:	mov	x1, x26
    c788:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c78c:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c790:	mov	w1, #0x5                   	// #5
    c794:	mov	x0, x20
    c798:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c79c:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7a0:	mov	x0, x20
    c7a4:	mov	x1, x25
    c7a8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c7ac:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7b0:	sxtw	x1, w24
    c7b4:	mov	x0, x20
    c7b8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c7bc:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7c0:	mov	x0, x20
    c7c4:	mov	x1, x23
    c7c8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c7cc:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7d0:	mov	x0, x20
    c7d4:	mov	x1, x22
    c7d8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c7dc:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7e0:	mov	w1, w21
    c7e4:	mov	x0, x20
    c7e8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c7ec:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c7f0:	mov	w1, #0x1                   	// #1
    c7f4:	mov	x0, x20
    c7f8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c7fc:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c800:	add	x1, sp, #0x8
    c804:	mov	x0, x20
    c808:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c80c:	cbz	w0, c81c <gcc_cp_fe_context@@Base+0x2f58>
    c810:	ldr	x8, [sp, #8]
    c814:	mov	w0, #0x1                   	// #1
    c818:	str	x8, [x19]
    c81c:	ldp	x20, x19, [sp, #80]
    c820:	ldp	x22, x21, [sp, #64]
    c824:	ldp	x24, x23, [sp, #48]
    c828:	ldp	x26, x25, [sp, #32]
    c82c:	ldp	x29, x30, [sp, #16]
    c830:	add	sp, sp, #0x60
    c834:	ret
    c838:	sub	sp, sp, #0x60
    c83c:	stp	x29, x30, [sp, #16]
    c840:	stp	x26, x25, [sp, #32]
    c844:	stp	x24, x23, [sp, #48]
    c848:	stp	x22, x21, [sp, #64]
    c84c:	stp	x20, x19, [sp, #80]
    c850:	add	x29, sp, #0x10
    c854:	mov	x26, x1
    c858:	mov	w1, #0x51                  	// #81
    c85c:	mov	w21, w7
    c860:	mov	x22, x6
    c864:	mov	x23, x5
    c868:	mov	x24, x4
    c86c:	mov	x25, x3
    c870:	mov	x19, x2
    c874:	mov	x20, x0
    c878:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c87c:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c880:	mov	x0, x20
    c884:	mov	x1, x26
    c888:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c88c:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c890:	mov	w1, #0x5                   	// #5
    c894:	mov	x0, x20
    c898:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c89c:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8a0:	mov	x0, x20
    c8a4:	mov	x1, x25
    c8a8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c8ac:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8b0:	mov	x0, x20
    c8b4:	mov	x1, x24
    c8b8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c8bc:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8c0:	mov	x0, x20
    c8c4:	mov	x1, x23
    c8c8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c8cc:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8d0:	mov	x0, x20
    c8d4:	mov	x1, x22
    c8d8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c8dc:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8e0:	mov	w1, w21
    c8e4:	mov	x0, x20
    c8e8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c8ec:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c8f0:	mov	w1, #0x1                   	// #1
    c8f4:	mov	x0, x20
    c8f8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    c8fc:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c900:	add	x1, sp, #0x8
    c904:	mov	x0, x20
    c908:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    c90c:	cbz	w0, c91c <gcc_cp_fe_context@@Base+0x3058>
    c910:	ldr	x8, [sp, #8]
    c914:	mov	w0, #0x1                   	// #1
    c918:	str	x8, [x19]
    c91c:	ldp	x20, x19, [sp, #80]
    c920:	ldp	x22, x21, [sp, #64]
    c924:	ldp	x24, x23, [sp, #48]
    c928:	ldp	x26, x25, [sp, #32]
    c92c:	ldp	x29, x30, [sp, #16]
    c930:	add	sp, sp, #0x60
    c934:	ret
    c938:	sub	sp, sp, #0x50
    c93c:	stp	x29, x30, [sp, #16]
    c940:	stp	x24, x23, [sp, #32]
    c944:	stp	x22, x21, [sp, #48]
    c948:	stp	x20, x19, [sp, #64]
    c94c:	add	x29, sp, #0x10
    c950:	mov	x24, x1
    c954:	mov	w1, #0x51                  	// #81
    c958:	mov	x21, x5
    c95c:	mov	x22, x4
    c960:	mov	x23, x3
    c964:	mov	x19, x2
    c968:	mov	x20, x0
    c96c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    c970:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c974:	mov	x0, x20
    c978:	mov	x1, x24
    c97c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c980:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c984:	mov	w1, #0x3                   	// #3
    c988:	mov	x0, x20
    c98c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c990:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c994:	mov	x0, x20
    c998:	mov	x1, x23
    c99c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    c9a0:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c9a4:	mov	x0, x20
    c9a8:	mov	x1, x22
    c9ac:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    c9b0:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c9b4:	cbz	x21, c9c0 <gcc_cp_fe_context@@Base+0x30fc>
    c9b8:	ldrsw	x22, [x21]
    c9bc:	b	c9c4 <gcc_cp_fe_context@@Base+0x3100>
    c9c0:	mov	x22, #0xffffffffffffffff    	// #-1
    c9c4:	mov	w1, #0x74                  	// #116
    c9c8:	mov	x0, x20
    c9cc:	mov	x2, x22
    c9d0:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    c9d4:	cmp	w0, #0x0
    c9d8:	mov	w8, w0
    c9dc:	cset	w0, ne  // ne = any
    c9e0:	cbz	w8, ca0c <gcc_cp_fe_context@@Base+0x3148>
    c9e4:	cbz	x21, ca0c <gcc_cp_fe_context@@Base+0x3148>
    c9e8:	ldr	x2, [x21, #8]
    c9ec:	mov	x0, x20
    c9f0:	mov	x1, x22
    c9f4:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    c9f8:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    c9fc:	ldr	x2, [x21, #16]
    ca00:	lsl	x1, x22, #3
    ca04:	mov	x0, x20
    ca08:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    ca0c:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    ca10:	mov	w1, #0x1                   	// #1
    ca14:	mov	x0, x20
    ca18:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    ca1c:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    ca20:	add	x1, sp, #0x8
    ca24:	mov	x0, x20
    ca28:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    ca2c:	cbz	w0, ca3c <gcc_cp_fe_context@@Base+0x3178>
    ca30:	ldr	x8, [sp, #8]
    ca34:	mov	w0, #0x1                   	// #1
    ca38:	str	x8, [x19]
    ca3c:	ldp	x20, x19, [sp, #64]
    ca40:	ldp	x22, x21, [sp, #48]
    ca44:	ldp	x24, x23, [sp, #32]
    ca48:	ldp	x29, x30, [sp, #16]
    ca4c:	add	sp, sp, #0x50
    ca50:	ret
    ca54:	stp	x29, x30, [sp, #-64]!
    ca58:	str	x23, [sp, #16]
    ca5c:	stp	x22, x21, [sp, #32]
    ca60:	stp	x20, x19, [sp, #48]
    ca64:	mov	x29, sp
    ca68:	mov	x23, x1
    ca6c:	mov	w1, #0x51                  	// #81
    ca70:	mov	x21, x4
    ca74:	mov	x22, x3
    ca78:	mov	x19, x2
    ca7c:	mov	x20, x0
    ca80:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ca84:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    ca88:	mov	x0, x20
    ca8c:	mov	x1, x23
    ca90:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    ca94:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    ca98:	mov	w1, #0x2                   	// #2
    ca9c:	mov	x0, x20
    caa0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    caa4:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    caa8:	mov	x0, x20
    caac:	mov	x1, x22
    cab0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cab4:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    cab8:	cbz	x21, cac4 <gcc_cp_fe_context@@Base+0x3200>
    cabc:	ldrsw	x22, [x21]
    cac0:	b	cac8 <gcc_cp_fe_context@@Base+0x3204>
    cac4:	mov	x22, #0xffffffffffffffff    	// #-1
    cac8:	mov	w1, #0x74                  	// #116
    cacc:	mov	x0, x20
    cad0:	mov	x2, x22
    cad4:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    cad8:	cmp	w0, #0x0
    cadc:	mov	w8, w0
    cae0:	cset	w0, ne  // ne = any
    cae4:	cbz	w8, cb10 <gcc_cp_fe_context@@Base+0x324c>
    cae8:	cbz	x21, cb10 <gcc_cp_fe_context@@Base+0x324c>
    caec:	ldr	x2, [x21, #8]
    caf0:	mov	x0, x20
    caf4:	mov	x1, x22
    caf8:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    cafc:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    cb00:	ldr	x2, [x21, #16]
    cb04:	lsl	x1, x22, #3
    cb08:	mov	x0, x20
    cb0c:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    cb10:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    cb14:	mov	w1, #0x1                   	// #1
    cb18:	mov	x0, x20
    cb1c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    cb20:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    cb24:	add	x1, x29, #0x18
    cb28:	mov	x0, x20
    cb2c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cb30:	cbz	w0, cb40 <gcc_cp_fe_context@@Base+0x327c>
    cb34:	ldr	x8, [x29, #24]
    cb38:	mov	w0, #0x1                   	// #1
    cb3c:	str	x8, [x19]
    cb40:	ldp	x20, x19, [sp, #48]
    cb44:	ldp	x22, x21, [sp, #32]
    cb48:	ldr	x23, [sp, #16]
    cb4c:	ldp	x29, x30, [sp], #64
    cb50:	ret
    cb54:	sub	sp, sp, #0x60
    cb58:	stp	x29, x30, [sp, #16]
    cb5c:	stp	x26, x25, [sp, #32]
    cb60:	stp	x24, x23, [sp, #48]
    cb64:	stp	x22, x21, [sp, #64]
    cb68:	stp	x20, x19, [sp, #80]
    cb6c:	add	x29, sp, #0x10
    cb70:	mov	x26, x1
    cb74:	mov	w1, #0x51                  	// #81
    cb78:	mov	x21, x7
    cb7c:	mov	x22, x6
    cb80:	mov	x23, x5
    cb84:	mov	w24, w4
    cb88:	mov	x25, x3
    cb8c:	mov	x19, x2
    cb90:	mov	x20, x0
    cb94:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    cb98:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cb9c:	mov	x0, x20
    cba0:	mov	x1, x26
    cba4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cba8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbac:	mov	w1, #0x5                   	// #5
    cbb0:	mov	x0, x20
    cbb4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cbb8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbbc:	mov	x0, x20
    cbc0:	mov	x1, x25
    cbc4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cbc8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbcc:	mov	w1, w24
    cbd0:	mov	x0, x20
    cbd4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cbd8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbdc:	mov	x0, x20
    cbe0:	mov	x1, x23
    cbe4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cbe8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbec:	mov	x0, x20
    cbf0:	mov	x1, x22
    cbf4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cbf8:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cbfc:	cbz	x21, cc08 <gcc_cp_fe_context@@Base+0x3344>
    cc00:	ldrsw	x22, [x21]
    cc04:	b	cc0c <gcc_cp_fe_context@@Base+0x3348>
    cc08:	mov	x22, #0xffffffffffffffff    	// #-1
    cc0c:	mov	w1, #0x74                  	// #116
    cc10:	mov	x0, x20
    cc14:	mov	x2, x22
    cc18:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    cc1c:	cmp	w0, #0x0
    cc20:	mov	w8, w0
    cc24:	cset	w0, ne  // ne = any
    cc28:	cbz	w8, cc54 <gcc_cp_fe_context@@Base+0x3390>
    cc2c:	cbz	x21, cc54 <gcc_cp_fe_context@@Base+0x3390>
    cc30:	ldr	x2, [x21, #8]
    cc34:	mov	x0, x20
    cc38:	mov	x1, x22
    cc3c:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    cc40:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cc44:	ldr	x2, [x21, #16]
    cc48:	lsl	x1, x22, #3
    cc4c:	mov	x0, x20
    cc50:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    cc54:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cc58:	mov	w1, #0x1                   	// #1
    cc5c:	mov	x0, x20
    cc60:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    cc64:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cc68:	add	x1, sp, #0x8
    cc6c:	mov	x0, x20
    cc70:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cc74:	cbz	w0, cc84 <gcc_cp_fe_context@@Base+0x33c0>
    cc78:	ldr	x8, [sp, #8]
    cc7c:	mov	w0, #0x1                   	// #1
    cc80:	str	x8, [x19]
    cc84:	ldp	x20, x19, [sp, #80]
    cc88:	ldp	x22, x21, [sp, #64]
    cc8c:	ldp	x24, x23, [sp, #48]
    cc90:	ldp	x26, x25, [sp, #32]
    cc94:	ldp	x29, x30, [sp, #16]
    cc98:	add	sp, sp, #0x60
    cc9c:	ret
    cca0:	stp	x29, x30, [sp, #-64]!
    cca4:	str	x23, [sp, #16]
    cca8:	stp	x22, x21, [sp, #32]
    ccac:	stp	x20, x19, [sp, #48]
    ccb0:	mov	x29, sp
    ccb4:	mov	x23, x1
    ccb8:	mov	w1, #0x51                  	// #81
    ccbc:	mov	x21, x4
    ccc0:	mov	x22, x3
    ccc4:	mov	x19, x2
    ccc8:	mov	x20, x0
    cccc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ccd0:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    ccd4:	mov	x0, x20
    ccd8:	mov	x1, x23
    ccdc:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cce0:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    cce4:	mov	w1, #0x2                   	// #2
    cce8:	mov	x0, x20
    ccec:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    ccf0:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    ccf4:	mov	x0, x20
    ccf8:	mov	x1, x22
    ccfc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cd00:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    cd04:	mov	x0, x20
    cd08:	mov	x1, x21
    cd0c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cd10:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    cd14:	mov	w1, #0x1                   	// #1
    cd18:	mov	x0, x20
    cd1c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    cd20:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    cd24:	add	x1, x29, #0x18
    cd28:	mov	x0, x20
    cd2c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cd30:	cbz	w0, cd40 <gcc_cp_fe_context@@Base+0x347c>
    cd34:	ldr	x8, [x29, #24]
    cd38:	mov	w0, #0x1                   	// #1
    cd3c:	str	x8, [x19]
    cd40:	ldp	x20, x19, [sp, #48]
    cd44:	ldp	x22, x21, [sp, #32]
    cd48:	ldr	x23, [sp, #16]
    cd4c:	ldp	x29, x30, [sp], #64
    cd50:	ret
    cd54:	stp	x29, x30, [sp, #-64]!
    cd58:	str	x23, [sp, #16]
    cd5c:	stp	x22, x21, [sp, #32]
    cd60:	stp	x20, x19, [sp, #48]
    cd64:	mov	x29, sp
    cd68:	mov	x23, x1
    cd6c:	mov	w1, #0x51                  	// #81
    cd70:	mov	x21, x4
    cd74:	mov	x22, x3
    cd78:	mov	x19, x2
    cd7c:	mov	x20, x0
    cd80:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    cd84:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cd88:	mov	x0, x20
    cd8c:	mov	x1, x23
    cd90:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cd94:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cd98:	mov	w1, #0x2                   	// #2
    cd9c:	mov	x0, x20
    cda0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cda4:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cda8:	mov	x0, x20
    cdac:	mov	x1, x22
    cdb0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cdb4:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cdb8:	mov	x0, x20
    cdbc:	mov	x1, x21
    cdc0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cdc4:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cdc8:	mov	w1, #0x1                   	// #1
    cdcc:	mov	x0, x20
    cdd0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    cdd4:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cdd8:	add	x1, x29, #0x18
    cddc:	mov	x0, x20
    cde0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cde4:	cbz	w0, cdf4 <gcc_cp_fe_context@@Base+0x3530>
    cde8:	ldr	x8, [x29, #24]
    cdec:	mov	w0, #0x1                   	// #1
    cdf0:	str	x8, [x19]
    cdf4:	ldp	x20, x19, [sp, #48]
    cdf8:	ldp	x22, x21, [sp, #32]
    cdfc:	ldr	x23, [sp, #16]
    ce00:	ldp	x29, x30, [sp], #64
    ce04:	ret
    ce08:	stp	x29, x30, [sp, #-80]!
    ce0c:	str	x25, [sp, #16]
    ce10:	stp	x24, x23, [sp, #32]
    ce14:	stp	x22, x21, [sp, #48]
    ce18:	stp	x20, x19, [sp, #64]
    ce1c:	mov	x29, sp
    ce20:	mov	x25, x1
    ce24:	mov	w1, #0x51                  	// #81
    ce28:	mov	x21, x6
    ce2c:	mov	x22, x5
    ce30:	mov	x23, x4
    ce34:	mov	x24, x3
    ce38:	mov	x19, x2
    ce3c:	mov	x20, x0
    ce40:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    ce44:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce48:	mov	x0, x20
    ce4c:	mov	x1, x25
    ce50:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    ce54:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce58:	mov	w1, #0x4                   	// #4
    ce5c:	mov	x0, x20
    ce60:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    ce64:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce68:	mov	x0, x20
    ce6c:	mov	x1, x24
    ce70:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    ce74:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce78:	mov	x0, x20
    ce7c:	mov	x1, x23
    ce80:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    ce84:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce88:	mov	x0, x20
    ce8c:	mov	x1, x22
    ce90:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    ce94:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ce98:	mov	x0, x20
    ce9c:	mov	x1, x21
    cea0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cea4:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    cea8:	mov	w1, #0x1                   	// #1
    ceac:	mov	x0, x20
    ceb0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    ceb4:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    ceb8:	add	x1, x29, #0x18
    cebc:	mov	x0, x20
    cec0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cec4:	cbz	w0, ced4 <gcc_cp_fe_context@@Base+0x3610>
    cec8:	ldr	x8, [x29, #24]
    cecc:	mov	w0, #0x1                   	// #1
    ced0:	str	x8, [x19]
    ced4:	ldp	x20, x19, [sp, #64]
    ced8:	ldp	x22, x21, [sp, #48]
    cedc:	ldp	x24, x23, [sp, #32]
    cee0:	ldr	x25, [sp, #16]
    cee4:	ldp	x29, x30, [sp], #80
    cee8:	ret
    ceec:	sub	sp, sp, #0x50
    cef0:	stp	x29, x30, [sp, #16]
    cef4:	stp	x24, x23, [sp, #32]
    cef8:	stp	x22, x21, [sp, #48]
    cefc:	stp	x20, x19, [sp, #64]
    cf00:	add	x29, sp, #0x10
    cf04:	mov	x24, x1
    cf08:	mov	w1, #0x51                  	// #81
    cf0c:	mov	x21, x5
    cf10:	mov	x22, x4
    cf14:	mov	x23, x3
    cf18:	mov	x19, x2
    cf1c:	mov	x20, x0
    cf20:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    cf24:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cf28:	mov	x0, x20
    cf2c:	mov	x1, x24
    cf30:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cf34:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cf38:	mov	w1, #0x3                   	// #3
    cf3c:	mov	x0, x20
    cf40:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cf44:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cf48:	mov	x0, x20
    cf4c:	mov	x1, x23
    cf50:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    cf54:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cf58:	mov	x0, x20
    cf5c:	mov	x1, x22
    cf60:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    cf64:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cf68:	cbz	x21, cf74 <gcc_cp_fe_context@@Base+0x36b0>
    cf6c:	ldrsw	x22, [x21]
    cf70:	b	cf78 <gcc_cp_fe_context@@Base+0x36b4>
    cf74:	mov	x22, #0xffffffffffffffff    	// #-1
    cf78:	mov	w1, #0x64                  	// #100
    cf7c:	mov	x0, x20
    cf80:	mov	x2, x22
    cf84:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    cf88:	cmp	w0, #0x0
    cf8c:	mov	w8, w0
    cf90:	cset	w0, ne  // ne = any
    cf94:	cbz	w8, cfac <gcc_cp_fe_context@@Base+0x36e8>
    cf98:	cbz	x21, cfac <gcc_cp_fe_context@@Base+0x36e8>
    cf9c:	ldr	x2, [x21, #8]
    cfa0:	lsl	x1, x22, #3
    cfa4:	mov	x0, x20
    cfa8:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    cfac:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cfb0:	mov	w1, #0x1                   	// #1
    cfb4:	mov	x0, x20
    cfb8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    cfbc:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cfc0:	add	x1, sp, #0x8
    cfc4:	mov	x0, x20
    cfc8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    cfcc:	cbz	w0, cfdc <gcc_cp_fe_context@@Base+0x3718>
    cfd0:	ldr	x8, [sp, #8]
    cfd4:	mov	w0, #0x1                   	// #1
    cfd8:	str	x8, [x19]
    cfdc:	ldp	x20, x19, [sp, #64]
    cfe0:	ldp	x22, x21, [sp, #48]
    cfe4:	ldp	x24, x23, [sp, #32]
    cfe8:	ldp	x29, x30, [sp, #16]
    cfec:	add	sp, sp, #0x50
    cff0:	ret
    cff4:	stp	x29, x30, [sp, #-80]!
    cff8:	str	x25, [sp, #16]
    cffc:	stp	x24, x23, [sp, #32]
    d000:	stp	x22, x21, [sp, #48]
    d004:	stp	x20, x19, [sp, #64]
    d008:	mov	x29, sp
    d00c:	mov	x25, x1
    d010:	mov	w1, #0x51                  	// #81
    d014:	mov	x21, x6
    d018:	mov	x22, x5
    d01c:	mov	x23, x4
    d020:	mov	x24, x3
    d024:	mov	x19, x2
    d028:	mov	x20, x0
    d02c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d030:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d034:	mov	x0, x20
    d038:	mov	x1, x25
    d03c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d040:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d044:	mov	w1, #0x4                   	// #4
    d048:	mov	x0, x20
    d04c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d050:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d054:	mov	x0, x20
    d058:	mov	x1, x24
    d05c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d060:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d064:	cbz	x23, d070 <gcc_cp_fe_context@@Base+0x37ac>
    d068:	ldrsw	x24, [x23]
    d06c:	b	d074 <gcc_cp_fe_context@@Base+0x37b0>
    d070:	mov	x24, #0xffffffffffffffff    	// #-1
    d074:	mov	w1, #0x64                  	// #100
    d078:	mov	x0, x20
    d07c:	mov	x2, x24
    d080:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d084:	cmp	w0, #0x0
    d088:	mov	w8, w0
    d08c:	cset	w0, ne  // ne = any
    d090:	cbz	w8, d0a8 <gcc_cp_fe_context@@Base+0x37e4>
    d094:	cbz	x23, d0a8 <gcc_cp_fe_context@@Base+0x37e4>
    d098:	ldr	x2, [x23, #8]
    d09c:	lsl	x1, x24, #3
    d0a0:	mov	x0, x20
    d0a4:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d0a8:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d0ac:	mov	x0, x20
    d0b0:	mov	x1, x22
    d0b4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d0b8:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d0bc:	cbz	x21, d0c8 <gcc_cp_fe_context@@Base+0x3804>
    d0c0:	ldrsw	x22, [x21]
    d0c4:	b	d0cc <gcc_cp_fe_context@@Base+0x3808>
    d0c8:	mov	x22, #0xffffffffffffffff    	// #-1
    d0cc:	mov	w1, #0x64                  	// #100
    d0d0:	mov	x0, x20
    d0d4:	mov	x2, x22
    d0d8:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d0dc:	cmp	w0, #0x0
    d0e0:	mov	w8, w0
    d0e4:	cset	w0, ne  // ne = any
    d0e8:	cbz	w8, d100 <gcc_cp_fe_context@@Base+0x383c>
    d0ec:	cbz	x21, d100 <gcc_cp_fe_context@@Base+0x383c>
    d0f0:	ldr	x2, [x21, #8]
    d0f4:	lsl	x1, x22, #3
    d0f8:	mov	x0, x20
    d0fc:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d100:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d104:	mov	w1, #0x1                   	// #1
    d108:	mov	x0, x20
    d10c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d110:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d114:	add	x1, x29, #0x18
    d118:	mov	x0, x20
    d11c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d120:	cbz	w0, d130 <gcc_cp_fe_context@@Base+0x386c>
    d124:	ldr	x8, [x29, #24]
    d128:	mov	w0, #0x1                   	// #1
    d12c:	str	x8, [x19]
    d130:	ldp	x20, x19, [sp, #64]
    d134:	ldp	x22, x21, [sp, #48]
    d138:	ldp	x24, x23, [sp, #32]
    d13c:	ldr	x25, [sp, #16]
    d140:	ldp	x29, x30, [sp], #80
    d144:	ret
    d148:	sub	sp, sp, #0x50
    d14c:	stp	x29, x30, [sp, #16]
    d150:	stp	x24, x23, [sp, #32]
    d154:	stp	x22, x21, [sp, #48]
    d158:	stp	x20, x19, [sp, #64]
    d15c:	add	x29, sp, #0x10
    d160:	mov	x24, x1
    d164:	mov	w1, #0x51                  	// #81
    d168:	mov	x21, x5
    d16c:	mov	w22, w4
    d170:	mov	x23, x3
    d174:	mov	x19, x2
    d178:	mov	x20, x0
    d17c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d180:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d184:	mov	x0, x20
    d188:	mov	x1, x24
    d18c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d190:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d194:	mov	w1, #0x3                   	// #3
    d198:	mov	x0, x20
    d19c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d1a0:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d1a4:	mov	x0, x20
    d1a8:	mov	x1, x23
    d1ac:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d1b0:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d1b4:	sxtw	x1, w22
    d1b8:	mov	x0, x20
    d1bc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d1c0:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d1c4:	cbz	x21, d1d0 <gcc_cp_fe_context@@Base+0x390c>
    d1c8:	ldrsw	x22, [x21]
    d1cc:	b	d1d4 <gcc_cp_fe_context@@Base+0x3910>
    d1d0:	mov	x22, #0xffffffffffffffff    	// #-1
    d1d4:	mov	w1, #0x64                  	// #100
    d1d8:	mov	x0, x20
    d1dc:	mov	x2, x22
    d1e0:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d1e4:	cmp	w0, #0x0
    d1e8:	mov	w8, w0
    d1ec:	cset	w0, ne  // ne = any
    d1f0:	cbz	w8, d208 <gcc_cp_fe_context@@Base+0x3944>
    d1f4:	cbz	x21, d208 <gcc_cp_fe_context@@Base+0x3944>
    d1f8:	ldr	x2, [x21, #8]
    d1fc:	lsl	x1, x22, #3
    d200:	mov	x0, x20
    d204:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d208:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d20c:	mov	w1, #0x1                   	// #1
    d210:	mov	x0, x20
    d214:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d218:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d21c:	add	x1, sp, #0x8
    d220:	mov	x0, x20
    d224:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d228:	cbz	w0, d238 <gcc_cp_fe_context@@Base+0x3974>
    d22c:	ldr	x8, [sp, #8]
    d230:	mov	w0, #0x1                   	// #1
    d234:	str	x8, [x19]
    d238:	ldp	x20, x19, [sp, #64]
    d23c:	ldp	x22, x21, [sp, #48]
    d240:	ldp	x24, x23, [sp, #32]
    d244:	ldp	x29, x30, [sp, #16]
    d248:	add	sp, sp, #0x50
    d24c:	ret
    d250:	sub	sp, sp, #0x60
    d254:	stp	x29, x30, [sp, #16]
    d258:	stp	x26, x25, [sp, #32]
    d25c:	stp	x24, x23, [sp, #48]
    d260:	stp	x22, x21, [sp, #64]
    d264:	stp	x20, x19, [sp, #80]
    d268:	add	x29, sp, #0x10
    d26c:	mov	x26, x1
    d270:	mov	w1, #0x51                  	// #81
    d274:	mov	w21, w7
    d278:	mov	x22, x6
    d27c:	mov	x23, x5
    d280:	mov	x24, x4
    d284:	mov	x25, x3
    d288:	mov	x19, x2
    d28c:	mov	x20, x0
    d290:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d294:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d298:	mov	x0, x20
    d29c:	mov	x1, x26
    d2a0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d2a4:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d2a8:	mov	w1, #0x5                   	// #5
    d2ac:	mov	x0, x20
    d2b0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d2b4:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d2b8:	mov	x0, x20
    d2bc:	mov	x1, x25
    d2c0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d2c4:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d2c8:	cbz	x24, d2d4 <gcc_cp_fe_context@@Base+0x3a10>
    d2cc:	ldrsw	x25, [x24]
    d2d0:	b	d2d8 <gcc_cp_fe_context@@Base+0x3a14>
    d2d4:	mov	x25, #0xffffffffffffffff    	// #-1
    d2d8:	mov	w1, #0x74                  	// #116
    d2dc:	mov	x0, x20
    d2e0:	mov	x2, x25
    d2e4:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d2e8:	cmp	w0, #0x0
    d2ec:	mov	w8, w0
    d2f0:	cset	w0, ne  // ne = any
    d2f4:	cbz	w8, d320 <gcc_cp_fe_context@@Base+0x3a5c>
    d2f8:	cbz	x24, d320 <gcc_cp_fe_context@@Base+0x3a5c>
    d2fc:	ldr	x2, [x24, #8]
    d300:	mov	x0, x20
    d304:	mov	x1, x25
    d308:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d30c:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d310:	ldr	x2, [x24, #16]
    d314:	lsl	x1, x25, #3
    d318:	mov	x0, x20
    d31c:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d320:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d324:	mov	x0, x20
    d328:	mov	x1, x23
    d32c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d330:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d334:	mov	x0, x20
    d338:	mov	x1, x22
    d33c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d340:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d344:	mov	w1, w21
    d348:	mov	x0, x20
    d34c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d350:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d354:	mov	w1, #0x1                   	// #1
    d358:	mov	x0, x20
    d35c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d360:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d364:	add	x1, sp, #0x8
    d368:	mov	x0, x20
    d36c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d370:	cbz	w0, d380 <gcc_cp_fe_context@@Base+0x3abc>
    d374:	ldr	x8, [sp, #8]
    d378:	mov	w0, #0x1                   	// #1
    d37c:	str	x8, [x19]
    d380:	ldp	x20, x19, [sp, #80]
    d384:	ldp	x22, x21, [sp, #64]
    d388:	ldp	x24, x23, [sp, #48]
    d38c:	ldp	x26, x25, [sp, #32]
    d390:	ldp	x29, x30, [sp, #16]
    d394:	add	sp, sp, #0x60
    d398:	ret
    d39c:	stp	x29, x30, [sp, #-80]!
    d3a0:	str	x25, [sp, #16]
    d3a4:	stp	x24, x23, [sp, #32]
    d3a8:	stp	x22, x21, [sp, #48]
    d3ac:	stp	x20, x19, [sp, #64]
    d3b0:	mov	x29, sp
    d3b4:	mov	x25, x1
    d3b8:	mov	w1, #0x51                  	// #81
    d3bc:	mov	w21, w6
    d3c0:	mov	x22, x5
    d3c4:	mov	x23, x4
    d3c8:	mov	x24, x3
    d3cc:	mov	x19, x2
    d3d0:	mov	x20, x0
    d3d4:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d3d8:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d3dc:	mov	x0, x20
    d3e0:	mov	x1, x25
    d3e4:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d3e8:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d3ec:	mov	w1, #0x4                   	// #4
    d3f0:	mov	x0, x20
    d3f4:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d3f8:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d3fc:	mov	x0, x20
    d400:	mov	x1, x24
    d404:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d408:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d40c:	cbz	x23, d418 <gcc_cp_fe_context@@Base+0x3b54>
    d410:	ldrsw	x24, [x23]
    d414:	b	d41c <gcc_cp_fe_context@@Base+0x3b58>
    d418:	mov	x24, #0xffffffffffffffff    	// #-1
    d41c:	mov	w1, #0x74                  	// #116
    d420:	mov	x0, x20
    d424:	mov	x2, x24
    d428:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d42c:	cmp	w0, #0x0
    d430:	mov	w8, w0
    d434:	cset	w0, ne  // ne = any
    d438:	cbz	w8, d464 <gcc_cp_fe_context@@Base+0x3ba0>
    d43c:	cbz	x23, d464 <gcc_cp_fe_context@@Base+0x3ba0>
    d440:	ldr	x2, [x23, #8]
    d444:	mov	x0, x20
    d448:	mov	x1, x24
    d44c:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d450:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d454:	ldr	x2, [x23, #16]
    d458:	lsl	x1, x24, #3
    d45c:	mov	x0, x20
    d460:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d464:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d468:	mov	x0, x20
    d46c:	mov	x1, x22
    d470:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d474:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d478:	mov	w1, w21
    d47c:	mov	x0, x20
    d480:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d484:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d488:	mov	w1, #0x1                   	// #1
    d48c:	mov	x0, x20
    d490:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d494:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d498:	add	x1, x29, #0x18
    d49c:	mov	x0, x20
    d4a0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d4a4:	cbz	w0, d4b4 <gcc_cp_fe_context@@Base+0x3bf0>
    d4a8:	ldr	x8, [x29, #24]
    d4ac:	mov	w0, #0x1                   	// #1
    d4b0:	str	x8, [x19]
    d4b4:	ldp	x20, x19, [sp, #64]
    d4b8:	ldp	x22, x21, [sp, #48]
    d4bc:	ldp	x24, x23, [sp, #32]
    d4c0:	ldr	x25, [sp, #16]
    d4c4:	ldp	x29, x30, [sp], #80
    d4c8:	ret
    d4cc:	stp	x29, x30, [sp, #-80]!
    d4d0:	str	x25, [sp, #16]
    d4d4:	stp	x24, x23, [sp, #32]
    d4d8:	stp	x22, x21, [sp, #48]
    d4dc:	stp	x20, x19, [sp, #64]
    d4e0:	mov	x29, sp
    d4e4:	mov	x25, x1
    d4e8:	mov	w1, #0x51                  	// #81
    d4ec:	mov	w21, w6
    d4f0:	mov	x22, x5
    d4f4:	mov	x23, x4
    d4f8:	mov	x24, x3
    d4fc:	mov	x19, x2
    d500:	mov	x20, x0
    d504:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d508:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d50c:	mov	x0, x20
    d510:	mov	x1, x25
    d514:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d518:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d51c:	mov	w1, #0x4                   	// #4
    d520:	mov	x0, x20
    d524:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d528:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d52c:	mov	x0, x20
    d530:	mov	x1, x24
    d534:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d538:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d53c:	cbz	x23, d548 <gcc_cp_fe_context@@Base+0x3c84>
    d540:	ldrsw	x24, [x23]
    d544:	b	d54c <gcc_cp_fe_context@@Base+0x3c88>
    d548:	mov	x24, #0xffffffffffffffff    	// #-1
    d54c:	mov	w1, #0x76                  	// #118
    d550:	mov	x0, x20
    d554:	mov	x2, x24
    d558:	bl	e3d0 <gcc_cp_fe_context@@Base+0x4b0c>
    d55c:	cmp	w0, #0x0
    d560:	mov	w8, w0
    d564:	cset	w0, ne  // ne = any
    d568:	cbz	w8, d594 <gcc_cp_fe_context@@Base+0x3cd0>
    d56c:	cbz	x23, d594 <gcc_cp_fe_context@@Base+0x3cd0>
    d570:	ldr	x2, [x23, #8]
    d574:	lsl	x1, x24, #3
    d578:	mov	x0, x20
    d57c:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d580:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d584:	ldr	x2, [x23, #16]
    d588:	lsl	x1, x24, #2
    d58c:	mov	x0, x20
    d590:	bl	e41c <gcc_cp_fe_context@@Base+0x4b58>
    d594:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d598:	mov	x0, x20
    d59c:	mov	x1, x22
    d5a0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d5a4:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d5a8:	mov	w1, w21
    d5ac:	mov	x0, x20
    d5b0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d5b4:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d5b8:	mov	w1, #0x1                   	// #1
    d5bc:	mov	x0, x20
    d5c0:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d5c4:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d5c8:	add	x1, x29, #0x18
    d5cc:	mov	x0, x20
    d5d0:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d5d4:	cbz	w0, d5e4 <gcc_cp_fe_context@@Base+0x3d20>
    d5d8:	ldr	x8, [x29, #24]
    d5dc:	mov	w0, #0x1                   	// #1
    d5e0:	str	x8, [x19]
    d5e4:	ldp	x20, x19, [sp, #64]
    d5e8:	ldp	x22, x21, [sp, #48]
    d5ec:	ldp	x24, x23, [sp, #32]
    d5f0:	ldr	x25, [sp, #16]
    d5f4:	ldp	x29, x30, [sp], #80
    d5f8:	ret
    d5fc:	sub	sp, sp, #0x60
    d600:	stp	x29, x30, [sp, #16]
    d604:	stp	x26, x25, [sp, #32]
    d608:	stp	x24, x23, [sp, #48]
    d60c:	stp	x22, x21, [sp, #64]
    d610:	stp	x20, x19, [sp, #80]
    d614:	add	x29, sp, #0x10
    d618:	mov	x26, x1
    d61c:	mov	w1, #0x51                  	// #81
    d620:	mov	w21, w7
    d624:	mov	x22, x6
    d628:	mov	w23, w5
    d62c:	mov	x24, x4
    d630:	mov	w25, w3
    d634:	mov	x19, x2
    d638:	mov	x20, x0
    d63c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d640:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d644:	mov	x0, x20
    d648:	mov	x1, x26
    d64c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d650:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d654:	mov	w1, #0x5                   	// #5
    d658:	mov	x0, x20
    d65c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d660:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d664:	sxtw	x1, w25
    d668:	mov	x0, x20
    d66c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d670:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d674:	mov	x0, x20
    d678:	mov	x1, x24
    d67c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d680:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d684:	mov	w1, w23
    d688:	mov	x0, x20
    d68c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d690:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d694:	mov	x0, x20
    d698:	mov	x1, x22
    d69c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d6a0:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d6a4:	mov	w1, w21
    d6a8:	mov	x0, x20
    d6ac:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d6b0:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d6b4:	mov	w1, #0x1                   	// #1
    d6b8:	mov	x0, x20
    d6bc:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d6c0:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d6c4:	add	x1, sp, #0x8
    d6c8:	mov	x0, x20
    d6cc:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d6d0:	cbz	w0, d6e0 <gcc_cp_fe_context@@Base+0x3e1c>
    d6d4:	ldr	x8, [sp, #8]
    d6d8:	mov	w0, #0x1                   	// #1
    d6dc:	str	x8, [x19]
    d6e0:	ldp	x20, x19, [sp, #80]
    d6e4:	ldp	x22, x21, [sp, #64]
    d6e8:	ldp	x24, x23, [sp, #48]
    d6ec:	ldp	x26, x25, [sp, #32]
    d6f0:	ldp	x29, x30, [sp, #16]
    d6f4:	add	sp, sp, #0x60
    d6f8:	ret
    d6fc:	sub	sp, sp, #0x60
    d700:	stp	x29, x30, [sp, #16]
    d704:	stp	x26, x25, [sp, #32]
    d708:	stp	x24, x23, [sp, #48]
    d70c:	stp	x22, x21, [sp, #64]
    d710:	stp	x20, x19, [sp, #80]
    d714:	add	x29, sp, #0x10
    d718:	mov	x26, x1
    d71c:	mov	w1, #0x51                  	// #81
    d720:	mov	x21, x7
    d724:	mov	x22, x6
    d728:	mov	w23, w5
    d72c:	mov	x24, x4
    d730:	mov	x25, x3
    d734:	mov	x19, x2
    d738:	mov	x20, x0
    d73c:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d740:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d744:	mov	x0, x20
    d748:	mov	x1, x26
    d74c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d750:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d754:	mov	w1, #0x5                   	// #5
    d758:	mov	x0, x20
    d75c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d760:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d764:	mov	x0, x20
    d768:	mov	x1, x25
    d76c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d770:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d774:	mov	x0, x20
    d778:	mov	x1, x24
    d77c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d780:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d784:	mov	w1, w23
    d788:	mov	x0, x20
    d78c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d790:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d794:	mov	x0, x20
    d798:	mov	x1, x22
    d79c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d7a0:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d7a4:	mov	x0, x20
    d7a8:	mov	x1, x21
    d7ac:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d7b0:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d7b4:	mov	w1, #0x1                   	// #1
    d7b8:	mov	x0, x20
    d7bc:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d7c0:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d7c4:	add	x1, sp, #0x8
    d7c8:	mov	x0, x20
    d7cc:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d7d0:	cbz	w0, d7e0 <gcc_cp_fe_context@@Base+0x3f1c>
    d7d4:	ldr	x8, [sp, #8]
    d7d8:	mov	w0, #0x1                   	// #1
    d7dc:	str	x8, [x19]
    d7e0:	ldp	x20, x19, [sp, #80]
    d7e4:	ldp	x22, x21, [sp, #64]
    d7e8:	ldp	x24, x23, [sp, #48]
    d7ec:	ldp	x26, x25, [sp, #32]
    d7f0:	ldp	x29, x30, [sp, #16]
    d7f4:	add	sp, sp, #0x60
    d7f8:	ret
    d7fc:	sub	sp, sp, #0x40
    d800:	stp	x29, x30, [sp, #16]
    d804:	stp	x22, x21, [sp, #32]
    d808:	stp	x20, x19, [sp, #48]
    d80c:	add	x29, sp, #0x10
    d810:	mov	x22, x1
    d814:	mov	w1, #0x51                  	// #81
    d818:	mov	x21, x3
    d81c:	mov	x19, x2
    d820:	mov	x20, x0
    d824:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d828:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d82c:	mov	x0, x20
    d830:	mov	x1, x22
    d834:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d838:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d83c:	mov	w1, #0x1                   	// #1
    d840:	mov	x0, x20
    d844:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d848:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d84c:	mov	x0, x20
    d850:	mov	x1, x21
    d854:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d858:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d85c:	mov	w1, #0x1                   	// #1
    d860:	mov	x0, x20
    d864:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d868:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d86c:	add	x1, sp, #0x8
    d870:	mov	x0, x20
    d874:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d878:	cbz	w0, d888 <gcc_cp_fe_context@@Base+0x3fc4>
    d87c:	ldr	x8, [sp, #8]
    d880:	mov	w0, #0x1                   	// #1
    d884:	str	w8, [x19]
    d888:	ldp	x20, x19, [sp, #48]
    d88c:	ldp	x22, x21, [sp, #32]
    d890:	ldp	x29, x30, [sp, #16]
    d894:	add	sp, sp, #0x40
    d898:	ret
    d89c:	sub	sp, sp, #0x60
    d8a0:	stp	x29, x30, [sp, #16]
    d8a4:	stp	x26, x25, [sp, #32]
    d8a8:	stp	x24, x23, [sp, #48]
    d8ac:	stp	x22, x21, [sp, #64]
    d8b0:	stp	x20, x19, [sp, #80]
    d8b4:	add	x29, sp, #0x10
    d8b8:	mov	x26, x1
    d8bc:	mov	w1, #0x51                  	// #81
    d8c0:	mov	w21, w7
    d8c4:	mov	x22, x6
    d8c8:	mov	w23, w5
    d8cc:	mov	x24, x4
    d8d0:	mov	x25, x3
    d8d4:	mov	x19, x2
    d8d8:	mov	x20, x0
    d8dc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d8e0:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d8e4:	mov	x0, x20
    d8e8:	mov	x1, x26
    d8ec:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d8f0:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d8f4:	mov	w1, #0x5                   	// #5
    d8f8:	mov	x0, x20
    d8fc:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d900:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d904:	mov	x0, x20
    d908:	mov	x1, x25
    d90c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d910:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d914:	mov	x0, x20
    d918:	mov	x1, x24
    d91c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d920:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d924:	mov	w1, w23
    d928:	mov	x0, x20
    d92c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d930:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d934:	mov	x0, x20
    d938:	mov	x1, x22
    d93c:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d940:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d944:	mov	w1, w21
    d948:	mov	x0, x20
    d94c:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d950:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d954:	mov	w1, #0x1                   	// #1
    d958:	mov	x0, x20
    d95c:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    d960:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d964:	add	x1, sp, #0x8
    d968:	mov	x0, x20
    d96c:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    d970:	cbz	w0, d980 <gcc_cp_fe_context@@Base+0x40bc>
    d974:	ldr	x8, [sp, #8]
    d978:	mov	w0, #0x1                   	// #1
    d97c:	str	x8, [x19]
    d980:	ldp	x20, x19, [sp, #80]
    d984:	ldp	x22, x21, [sp, #64]
    d988:	ldp	x24, x23, [sp, #48]
    d98c:	ldp	x26, x25, [sp, #32]
    d990:	ldp	x29, x30, [sp, #16]
    d994:	add	sp, sp, #0x60
    d998:	ret
    d99c:	sub	sp, sp, #0x50
    d9a0:	stp	x29, x30, [sp, #16]
    d9a4:	stp	x24, x23, [sp, #32]
    d9a8:	stp	x22, x21, [sp, #48]
    d9ac:	stp	x20, x19, [sp, #64]
    d9b0:	add	x29, sp, #0x10
    d9b4:	mov	x24, x1
    d9b8:	mov	w1, #0x51                  	// #81
    d9bc:	mov	x21, x5
    d9c0:	mov	x22, x4
    d9c4:	mov	x23, x3
    d9c8:	mov	x19, x2
    d9cc:	mov	x20, x0
    d9d0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    d9d4:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    d9d8:	mov	x0, x20
    d9dc:	mov	x1, x24
    d9e0:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    d9e4:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    d9e8:	mov	w1, #0x3                   	// #3
    d9ec:	mov	x0, x20
    d9f0:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    d9f4:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    d9f8:	mov	x0, x20
    d9fc:	mov	x1, x23
    da00:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    da04:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    da08:	mov	x0, x20
    da0c:	mov	x1, x22
    da10:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    da14:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    da18:	mov	x0, x20
    da1c:	mov	x1, x21
    da20:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    da24:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    da28:	mov	w1, #0x1                   	// #1
    da2c:	mov	x0, x20
    da30:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    da34:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    da38:	add	x1, sp, #0x8
    da3c:	mov	x0, x20
    da40:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    da44:	cbz	w0, da54 <gcc_cp_fe_context@@Base+0x4190>
    da48:	ldr	x8, [sp, #8]
    da4c:	mov	w0, #0x1                   	// #1
    da50:	str	x8, [x19]
    da54:	ldp	x20, x19, [sp, #64]
    da58:	ldp	x22, x21, [sp, #48]
    da5c:	ldp	x24, x23, [sp, #32]
    da60:	ldp	x29, x30, [sp, #16]
    da64:	add	sp, sp, #0x50
    da68:	ret
    da6c:	stp	x29, x30, [sp, #-64]!
    da70:	str	x23, [sp, #16]
    da74:	stp	x22, x21, [sp, #32]
    da78:	stp	x20, x19, [sp, #48]
    da7c:	mov	x29, sp
    da80:	mov	x23, x1
    da84:	mov	w1, #0x51                  	// #81
    da88:	mov	x21, x4
    da8c:	mov	x22, x3
    da90:	mov	x19, x2
    da94:	mov	x20, x0
    da98:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    da9c:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    daa0:	mov	x0, x20
    daa4:	mov	x1, x23
    daa8:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    daac:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    dab0:	mov	w1, #0x2                   	// #2
    dab4:	mov	x0, x20
    dab8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dabc:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    dac0:	mov	x0, x20
    dac4:	mov	x1, x22
    dac8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dacc:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    dad0:	mov	x0, x20
    dad4:	mov	x1, x21
    dad8:	bl	e48c <gcc_cp_fe_context@@Base+0x4bc8>
    dadc:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    dae0:	mov	w1, #0x1                   	// #1
    dae4:	mov	x0, x20
    dae8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    daec:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    daf0:	add	x1, x29, #0x18
    daf4:	mov	x0, x20
    daf8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    dafc:	cbz	w0, db0c <gcc_cp_fe_context@@Base+0x4248>
    db00:	ldr	x8, [x29, #24]
    db04:	mov	w0, #0x1                   	// #1
    db08:	str	x8, [x19]
    db0c:	ldp	x20, x19, [sp, #48]
    db10:	ldp	x22, x21, [sp, #32]
    db14:	ldr	x23, [sp, #16]
    db18:	ldp	x29, x30, [sp], #64
    db1c:	ret
    db20:	stp	x29, x30, [sp, #-80]!
    db24:	str	x25, [sp, #16]
    db28:	stp	x24, x23, [sp, #32]
    db2c:	stp	x22, x21, [sp, #48]
    db30:	stp	x20, x19, [sp, #64]
    db34:	mov	x29, sp
    db38:	mov	x25, x1
    db3c:	mov	w1, #0x51                  	// #81
    db40:	mov	w21, w6
    db44:	mov	w22, w5
    db48:	mov	x23, x4
    db4c:	mov	x24, x3
    db50:	mov	x19, x2
    db54:	mov	x20, x0
    db58:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    db5c:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    db60:	mov	x0, x20
    db64:	mov	x1, x25
    db68:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    db6c:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    db70:	mov	w1, #0x4                   	// #4
    db74:	mov	x0, x20
    db78:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    db7c:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    db80:	mov	x0, x20
    db84:	mov	x1, x24
    db88:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    db8c:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    db90:	mov	x0, x20
    db94:	mov	x1, x23
    db98:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    db9c:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    dba0:	mov	w1, w22
    dba4:	mov	x0, x20
    dba8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dbac:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    dbb0:	mov	w1, w21
    dbb4:	mov	x0, x20
    dbb8:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dbbc:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    dbc0:	mov	w1, #0x1                   	// #1
    dbc4:	mov	x0, x20
    dbc8:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    dbcc:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    dbd0:	add	x1, x29, #0x18
    dbd4:	mov	x0, x20
    dbd8:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    dbdc:	cbz	w0, dbec <gcc_cp_fe_context@@Base+0x4328>
    dbe0:	ldr	x8, [x29, #24]
    dbe4:	mov	w0, #0x1                   	// #1
    dbe8:	str	x8, [x19]
    dbec:	ldp	x20, x19, [sp, #64]
    dbf0:	ldp	x22, x21, [sp, #48]
    dbf4:	ldp	x24, x23, [sp, #32]
    dbf8:	ldr	x25, [sp, #16]
    dbfc:	ldp	x29, x30, [sp], #80
    dc00:	ret
    dc04:	stp	x29, x30, [sp, #-64]!
    dc08:	str	x23, [sp, #16]
    dc0c:	stp	x22, x21, [sp, #32]
    dc10:	stp	x20, x19, [sp, #48]
    dc14:	mov	x29, sp
    dc18:	mov	x23, x1
    dc1c:	mov	w1, #0x51                  	// #81
    dc20:	mov	w21, w4
    dc24:	mov	x22, x3
    dc28:	mov	x19, x2
    dc2c:	mov	x20, x0
    dc30:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    dc34:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc38:	mov	x0, x20
    dc3c:	mov	x1, x23
    dc40:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    dc44:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc48:	mov	w1, #0x2                   	// #2
    dc4c:	mov	x0, x20
    dc50:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dc54:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc58:	mov	x0, x20
    dc5c:	mov	x1, x22
    dc60:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dc64:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc68:	mov	w1, w21
    dc6c:	mov	x0, x20
    dc70:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dc74:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc78:	mov	w1, #0x1                   	// #1
    dc7c:	mov	x0, x20
    dc80:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    dc84:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc88:	add	x1, x29, #0x18
    dc8c:	mov	x0, x20
    dc90:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    dc94:	cbz	w0, dca4 <gcc_cp_fe_context@@Base+0x43e0>
    dc98:	ldr	x8, [x29, #24]
    dc9c:	mov	w0, #0x1                   	// #1
    dca0:	str	x8, [x19]
    dca4:	ldp	x20, x19, [sp, #48]
    dca8:	ldp	x22, x21, [sp, #32]
    dcac:	ldr	x23, [sp, #16]
    dcb0:	ldp	x29, x30, [sp], #64
    dcb4:	ret
    dcb8:	stp	x29, x30, [sp, #-80]!
    dcbc:	str	x25, [sp, #16]
    dcc0:	stp	x24, x23, [sp, #32]
    dcc4:	stp	x22, x21, [sp, #48]
    dcc8:	stp	x20, x19, [sp, #64]
    dccc:	mov	x29, sp
    dcd0:	mov	x25, x1
    dcd4:	mov	w1, #0x51                  	// #81
    dcd8:	mov	w21, w6
    dcdc:	mov	x22, x5
    dce0:	mov	x23, x4
    dce4:	mov	x24, x3
    dce8:	mov	x19, x2
    dcec:	mov	x20, x0
    dcf0:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    dcf4:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dcf8:	mov	x0, x20
    dcfc:	mov	x1, x25
    dd00:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    dd04:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd08:	mov	w1, #0x4                   	// #4
    dd0c:	mov	x0, x20
    dd10:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dd14:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd18:	mov	x0, x20
    dd1c:	mov	x1, x24
    dd20:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dd24:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd28:	mov	x0, x20
    dd2c:	mov	x1, x23
    dd30:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    dd34:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd38:	mov	x0, x20
    dd3c:	mov	x1, x22
    dd40:	bl	e2a0 <gcc_cp_fe_context@@Base+0x49dc>
    dd44:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd48:	mov	w1, w21
    dd4c:	mov	x0, x20
    dd50:	bl	e220 <gcc_cp_fe_context@@Base+0x495c>
    dd54:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd58:	mov	w1, #0x1                   	// #1
    dd5c:	mov	x0, x20
    dd60:	bl	dfc8 <gcc_cp_fe_context@@Base+0x4704>
    dd64:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd68:	add	x1, x29, #0x18
    dd6c:	mov	x0, x20
    dd70:	bl	e25c <gcc_cp_fe_context@@Base+0x4998>
    dd74:	cbz	w0, dd84 <gcc_cp_fe_context@@Base+0x44c0>
    dd78:	ldr	x8, [x29, #24]
    dd7c:	mov	w0, #0x1                   	// #1
    dd80:	str	w8, [x19]
    dd84:	ldp	x20, x19, [sp, #64]
    dd88:	ldp	x22, x21, [sp, #48]
    dd8c:	ldp	x24, x23, [sp, #32]
    dd90:	ldr	x25, [sp, #16]
    dd94:	ldp	x29, x30, [sp], #80
    dd98:	ret
    dd9c:	stp	x29, x30, [sp, #-32]!
    dda0:	str	x19, [sp, #16]
    dda4:	mov	x29, sp
    dda8:	adrp	x4, 2a000 <xexit@@Base+0x144dc>
    ddac:	adrp	x3, 2a000 <xexit@@Base+0x144dc>
    ddb0:	ldr	x4, [x4, #3872]
    ddb4:	ldr	x3, [x3, #3384]
    ddb8:	adrp	x1, d000 <gcc_cp_fe_context@@Base+0x373c>
    ddbc:	adrp	x2, d000 <gcc_cp_fe_context@@Base+0x373c>
    ddc0:	mov	x19, x0
    ddc4:	add	x1, x1, #0xde8
    ddc8:	add	x2, x2, #0xdf0
    ddcc:	mov	w0, #0xa                   	// #10
    ddd0:	mov	x5, x3
    ddd4:	bl	50c0 <htab_create_alloc@plt>
    ddd8:	str	x0, [x19]
    dddc:	ldr	x19, [sp, #16]
    dde0:	ldp	x29, x30, [sp], #32
    dde4:	ret
    dde8:	ldr	x0, [x0]
    ddec:	b	5200 <htab_hash_string@plt>
    ddf0:	stp	x29, x30, [sp, #-16]!
    ddf4:	ldr	x0, [x0]
    ddf8:	ldr	x1, [x1]
    ddfc:	mov	x29, sp
    de00:	bl	5330 <strcmp@plt>
    de04:	cmp	w0, #0x0
    de08:	cset	w0, eq  // eq = none
    de0c:	ldp	x29, x30, [sp], #16
    de10:	ret
    de14:	stp	x29, x30, [sp, #-16]!
    de18:	mov	x29, sp
    de1c:	ldr	x0, [x0]
    de20:	bl	5460 <htab_delete@plt>
    de24:	ldp	x29, x30, [sp], #16
    de28:	ret
    de2c:	bl	7274 <gcc_c_fe_context@@Base+0x1160>
    de30:	sub	sp, sp, #0x30
    de34:	stp	x29, x30, [sp, #16]
    de38:	str	x19, [sp, #32]
    de3c:	add	x29, sp, #0x10
    de40:	stp	x1, x2, [sp]
    de44:	ldr	x0, [x0]
    de48:	mov	x1, sp
    de4c:	mov	w2, #0x1                   	// #1
    de50:	bl	52a0 <htab_find_slot@plt>
    de54:	mov	x19, x0
    de58:	mov	w0, #0x10                  	// #16
    de5c:	bl	52f0 <xmalloc@plt>
    de60:	str	x0, [x19]
    de64:	ldr	q0, [sp]
    de68:	ldr	x19, [sp, #32]
    de6c:	ldp	x29, x30, [sp, #16]
    de70:	str	q0, [x0]
    de74:	add	sp, sp, #0x30
    de78:	ret
    de7c:	sub	sp, sp, #0x20
    de80:	stp	x29, x30, [sp, #16]
    de84:	add	x29, sp, #0x10
    de88:	str	x1, [sp]
    de8c:	ldr	x0, [x0]
    de90:	mov	x1, sp
    de94:	bl	51c0 <htab_find@plt>
    de98:	cbz	x0, dea0 <gcc_cp_fe_context@@Base+0x45dc>
    de9c:	ldr	x0, [x0, #8]
    dea0:	ldp	x29, x30, [sp, #16]
    dea4:	add	sp, sp, #0x20
    dea8:	ret
    deac:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    deb0:	add	x8, x8, #0x9a8
    deb4:	str	x8, [x0], #16
    deb8:	b	de14 <gcc_cp_fe_context@@Base+0x4550>
    debc:	stp	x29, x30, [sp, #-32]!
    dec0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    dec4:	add	x8, x8, #0x9a8
    dec8:	str	x19, [sp, #16]
    decc:	mov	x19, x0
    ded0:	str	x8, [x0], #16
    ded4:	mov	x29, sp
    ded8:	bl	de14 <gcc_cp_fe_context@@Base+0x4550>
    dedc:	mov	x0, x19
    dee0:	ldr	x19, [sp, #16]
    dee4:	ldp	x29, x30, [sp], #32
    dee8:	b	5210 <_ZdlPv@plt>
    deec:	ret
    def0:	sub	sp, sp, #0x20
    def4:	stp	x29, x30, [sp, #16]
    def8:	add	x29, sp, #0x10
    defc:	sturb	w1, [x29, #-4]
    df00:	ldr	w0, [x0, #8]
    df04:	sub	x1, x29, #0x4
    df08:	mov	w2, #0x1                   	// #1
    df0c:	bl	5360 <write@plt>
    df10:	ldp	x29, x30, [sp, #16]
    df14:	cmp	x0, #0x1
    df18:	cset	w0, eq  // eq = none
    df1c:	add	sp, sp, #0x20
    df20:	ret
    df24:	stp	x29, x30, [sp, #-32]!
    df28:	str	x19, [sp, #16]
    df2c:	mov	x29, sp
    df30:	ldr	w0, [x0, #8]
    df34:	sxtw	x19, w2
    df38:	mov	x2, x19
    df3c:	bl	5360 <write@plt>
    df40:	cmp	x0, x19
    df44:	ldr	x19, [sp, #16]
    df48:	cset	w0, eq  // eq = none
    df4c:	ldp	x29, x30, [sp], #32
    df50:	ret
    df54:	stp	x29, x30, [sp, #-32]!
    df58:	str	x19, [sp, #16]
    df5c:	mov	x29, sp
    df60:	ldr	w0, [x0, #8]
    df64:	mov	w19, w1
    df68:	add	x1, x29, #0x1c
    df6c:	mov	w2, #0x1                   	// #1
    df70:	bl	5190 <read@plt>
    df74:	ldrb	w8, [x29, #28]
    df78:	cmp	x0, #0x1
    df7c:	cset	w9, eq  // eq = none
    df80:	cmp	w8, w19, uxtb
    df84:	ldr	x19, [sp, #16]
    df88:	cset	w8, eq  // eq = none
    df8c:	and	w0, w9, w8
    df90:	ldp	x29, x30, [sp], #32
    df94:	ret
    df98:	stp	x29, x30, [sp, #-32]!
    df9c:	str	x19, [sp, #16]
    dfa0:	mov	x29, sp
    dfa4:	ldr	w0, [x0, #8]
    dfa8:	sxtw	x19, w2
    dfac:	mov	x2, x19
    dfb0:	bl	5190 <read@plt>
    dfb4:	cmp	x0, x19
    dfb8:	ldr	x19, [sp, #16]
    dfbc:	cset	w0, eq  // eq = none
    dfc0:	ldp	x29, x30, [sp], #32
    dfc4:	ret
    dfc8:	stp	x29, x30, [sp, #-80]!
    dfcc:	str	x28, [sp, #16]
    dfd0:	stp	x24, x23, [sp, #32]
    dfd4:	stp	x22, x21, [sp, #48]
    dfd8:	stp	x20, x19, [sp, #64]
    dfdc:	mov	x29, sp
    dfe0:	sub	sp, sp, #0x480
    dfe4:	mov	w19, w1
    dfe8:	mov	x20, x0
    dfec:	add	x21, x0, #0x10
    dff0:	mov	w22, #0x1                   	// #1
    dff4:	sub	x23, x29, #0x80
    dff8:	mov	x24, sp
    dffc:	b	e010 <gcc_cp_fe_context@@Base+0x474c>
    e000:	bl	52c0 <__errno_location@plt>
    e004:	ldr	w8, [x0]
    e008:	cmp	w8, #0x4
    e00c:	b.ne	e198 <gcc_cp_fe_context@@Base+0x48d4>  // b.any
    e010:	movi	v0.2d, #0x0
    e014:	stp	q0, q0, [x29, #-32]
    e018:	stp	q0, q0, [x29, #-64]
    e01c:	stp	q0, q0, [x29, #-96]
    e020:	stp	q0, q0, [x29, #-128]
    e024:	ldr	w8, [x20, #8]
    e028:	add	w9, w8, #0x3f
    e02c:	cmp	w8, #0x0
    e030:	csel	w9, w9, w8, lt  // lt = tstop
    e034:	asr	w10, w9, #6
    e038:	sbfiz	x10, x10, #3, #32
    e03c:	ldr	x11, [x23, x10]
    e040:	and	w9, w9, #0xffffffc0
    e044:	sub	w8, w8, w9
    e048:	lsl	x8, x22, x8
    e04c:	orr	x8, x8, x11
    e050:	str	x8, [x23, x10]
    e054:	ldr	w8, [x20, #12]
    e058:	cmn	w8, #0x1
    e05c:	b.eq	e08c <gcc_cp_fe_context@@Base+0x47c8>  // b.none
    e060:	add	w9, w8, #0x3f
    e064:	cmp	w8, #0x0
    e068:	csel	w9, w9, w8, lt  // lt = tstop
    e06c:	asr	w10, w9, #6
    e070:	sbfiz	x10, x10, #3, #32
    e074:	ldr	x11, [x23, x10]
    e078:	and	w9, w9, #0xffffffc0
    e07c:	sub	w8, w8, w9
    e080:	lsl	x8, x22, x8
    e084:	orr	x8, x11, x8
    e088:	str	x8, [x23, x10]
    e08c:	sub	x1, x29, #0x80
    e090:	mov	w0, #0x400                 	// #1024
    e094:	mov	x2, xzr
    e098:	mov	x3, xzr
    e09c:	mov	x4, xzr
    e0a0:	bl	4fc0 <select@plt>
    e0a4:	cmn	w0, #0x1
    e0a8:	b.eq	e000 <gcc_cp_fe_context@@Base+0x473c>  // b.none
    e0ac:	ldr	w0, [x20, #12]
    e0b0:	cmn	w0, #0x1
    e0b4:	b.eq	e108 <gcc_cp_fe_context@@Base+0x4844>  // b.none
    e0b8:	add	w8, w0, #0x3f
    e0bc:	cmp	w0, #0x0
    e0c0:	csel	w8, w8, w0, lt  // lt = tstop
    e0c4:	asr	w9, w8, #6
    e0c8:	ldr	x9, [x23, w9, sxtw #3]
    e0cc:	and	w8, w8, #0xffffffc0
    e0d0:	sub	w8, w0, w8
    e0d4:	lsr	x8, x9, x8
    e0d8:	tbz	w8, #0, e108 <gcc_cp_fe_context@@Base+0x4844>
    e0dc:	mov	x1, sp
    e0e0:	mov	w2, #0x3ff                 	// #1023
    e0e4:	bl	5190 <read@plt>
    e0e8:	tbnz	w0, #31, e198 <gcc_cp_fe_context@@Base+0x48d4>
    e0ec:	cbz	w0, e108 <gcc_cp_fe_context@@Base+0x4844>
    e0f0:	strb	wzr, [x24, w0, sxtw]
    e0f4:	ldr	x8, [x20]
    e0f8:	mov	x1, sp
    e0fc:	mov	x0, x20
    e100:	ldr	x8, [x8, #16]
    e104:	blr	x8
    e108:	ldr	w0, [x20, #8]
    e10c:	add	w8, w0, #0x3f
    e110:	cmp	w0, #0x0
    e114:	csel	w8, w8, w0, lt  // lt = tstop
    e118:	asr	w9, w8, #6
    e11c:	ldr	x9, [x23, w9, sxtw #3]
    e120:	and	w8, w8, #0xffffffc0
    e124:	sub	w8, w0, w8
    e128:	lsr	x8, x9, x8
    e12c:	tbz	w8, #0, e010 <gcc_cp_fe_context@@Base+0x474c>
    e130:	add	x1, x29, #0x1c
    e134:	mov	w2, #0x1                   	// #1
    e138:	bl	5190 <read@plt>
    e13c:	cmp	w0, #0x1
    e140:	b.ne	e184 <gcc_cp_fe_context@@Base+0x48c0>  // b.any
    e144:	ldrb	w8, [x29, #28]
    e148:	cmp	w8, #0x51
    e14c:	b.ne	e190 <gcc_cp_fe_context@@Base+0x48cc>  // b.any
    e150:	mov	x1, sp
    e154:	mov	x0, x20
    e158:	bl	e320 <gcc_cp_fe_context@@Base+0x4a5c>
    e15c:	cbz	w0, e198 <gcc_cp_fe_context@@Base+0x48d4>
    e160:	ldr	x1, [sp]
    e164:	mov	x0, x21
    e168:	bl	de7c <gcc_cp_fe_context@@Base+0x45b8>
    e16c:	mov	x8, x0
    e170:	cbz	x0, e198 <gcc_cp_fe_context@@Base+0x48d4>
    e174:	mov	x0, x20
    e178:	blr	x8
    e17c:	cbnz	w0, e010 <gcc_cp_fe_context@@Base+0x474c>
    e180:	b	e198 <gcc_cp_fe_context@@Base+0x48d4>
    e184:	cbnz	w0, e198 <gcc_cp_fe_context@@Base+0x48d4>
    e188:	eor	w19, w19, #0x1
    e18c:	b	e19c <gcc_cp_fe_context@@Base+0x48d8>
    e190:	cmp	w8, #0x52
    e194:	b.eq	e19c <gcc_cp_fe_context@@Base+0x48d8>  // b.none
    e198:	mov	w19, wzr
    e19c:	and	w0, w19, #0x1
    e1a0:	add	sp, sp, #0x480
    e1a4:	ldp	x20, x19, [sp, #64]
    e1a8:	ldp	x22, x21, [sp, #48]
    e1ac:	ldp	x24, x23, [sp, #32]
    e1b0:	ldr	x28, [sp, #16]
    e1b4:	ldp	x29, x30, [sp], #80
    e1b8:	ret
    e1bc:	bl	5470 <_Unwind_Resume@plt>
    e1c0:	bl	5470 <_Unwind_Resume@plt>
    e1c4:	sub	sp, sp, #0x30
    e1c8:	stp	x29, x30, [sp, #16]
    e1cc:	stp	x20, x19, [sp, #32]
    e1d0:	add	x29, sp, #0x10
    e1d4:	mov	x19, x1
    e1d8:	mov	w1, #0x69                  	// #105
    e1dc:	mov	x20, x0
    e1e0:	bl	df54 <gcc_cp_fe_context@@Base+0x4690>
    e1e4:	cbz	w0, e20c <gcc_cp_fe_context@@Base+0x4948>
    e1e8:	add	x1, sp, #0x8
    e1ec:	mov	w2, #0x8                   	// #8
    e1f0:	mov	x0, x20
    e1f4:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e1f8:	cbz	w0, e20c <gcc_cp_fe_context@@Base+0x4948>
    e1fc:	ldr	x8, [sp, #8]
    e200:	cmp	x8, x19
    e204:	cset	w0, eq  // eq = none
    e208:	b	e210 <gcc_cp_fe_context@@Base+0x494c>
    e20c:	mov	w0, wzr
    e210:	ldp	x20, x19, [sp, #32]
    e214:	ldp	x29, x30, [sp, #16]
    e218:	add	sp, sp, #0x30
    e21c:	ret
    e220:	stp	x29, x30, [sp, #-32]!
    e224:	str	x19, [sp, #16]
    e228:	mov	x29, sp
    e22c:	str	x1, [x29, #24]
    e230:	mov	w1, #0x69                  	// #105
    e234:	mov	x19, x0
    e238:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    e23c:	cbz	w0, e250 <gcc_cp_fe_context@@Base+0x498c>
    e240:	add	x1, x29, #0x18
    e244:	mov	w2, #0x8                   	// #8
    e248:	mov	x0, x19
    e24c:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e250:	ldr	x19, [sp, #16]
    e254:	ldp	x29, x30, [sp], #32
    e258:	ret
    e25c:	stp	x29, x30, [sp, #-32]!
    e260:	stp	x20, x19, [sp, #16]
    e264:	mov	x29, sp
    e268:	mov	x19, x1
    e26c:	mov	w1, #0x69                  	// #105
    e270:	mov	x20, x0
    e274:	bl	df54 <gcc_cp_fe_context@@Base+0x4690>
    e278:	cbz	w0, e294 <gcc_cp_fe_context@@Base+0x49d0>
    e27c:	mov	x0, x20
    e280:	mov	x1, x19
    e284:	ldp	x20, x19, [sp, #16]
    e288:	mov	w2, #0x8                   	// #8
    e28c:	ldp	x29, x30, [sp], #32
    e290:	b	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e294:	ldp	x20, x19, [sp, #16]
    e298:	ldp	x29, x30, [sp], #32
    e29c:	ret
    e2a0:	sub	sp, sp, #0x30
    e2a4:	stp	x29, x30, [sp, #16]
    e2a8:	stp	x20, x19, [sp, #32]
    e2ac:	add	x29, sp, #0x10
    e2b0:	mov	x19, x1
    e2b4:	mov	w1, #0x73                  	// #115
    e2b8:	mov	x20, x0
    e2bc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    e2c0:	cbz	w0, e310 <gcc_cp_fe_context@@Base+0x4a4c>
    e2c4:	cbz	x19, e2d4 <gcc_cp_fe_context@@Base+0x4a10>
    e2c8:	mov	x0, x19
    e2cc:	bl	5060 <strlen@plt>
    e2d0:	b	e2d8 <gcc_cp_fe_context@@Base+0x4a14>
    e2d4:	mov	x0, #0xffffffffffffffff    	// #-1
    e2d8:	str	x0, [sp, #8]
    e2dc:	add	x1, sp, #0x8
    e2e0:	mov	w2, #0x8                   	// #8
    e2e4:	mov	x0, x20
    e2e8:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e2ec:	cmp	w0, #0x0
    e2f0:	mov	w8, w0
    e2f4:	cset	w0, ne  // ne = any
    e2f8:	cbz	x19, e310 <gcc_cp_fe_context@@Base+0x4a4c>
    e2fc:	cbz	w8, e310 <gcc_cp_fe_context@@Base+0x4a4c>
    e300:	ldr	w2, [sp, #8]
    e304:	mov	x0, x20
    e308:	mov	x1, x19
    e30c:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e310:	ldp	x20, x19, [sp, #32]
    e314:	ldp	x29, x30, [sp, #16]
    e318:	add	sp, sp, #0x30
    e31c:	ret
    e320:	sub	sp, sp, #0x40
    e324:	stp	x29, x30, [sp, #16]
    e328:	stp	x22, x21, [sp, #32]
    e32c:	stp	x20, x19, [sp, #48]
    e330:	add	x29, sp, #0x10
    e334:	mov	x19, x1
    e338:	mov	w1, #0x73                  	// #115
    e33c:	mov	x20, x0
    e340:	bl	df54 <gcc_cp_fe_context@@Base+0x4690>
    e344:	cbz	w0, e3bc <gcc_cp_fe_context@@Base+0x4af8>
    e348:	add	x1, sp, #0x8
    e34c:	mov	w2, #0x8                   	// #8
    e350:	mov	x0, x20
    e354:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e358:	cbz	w0, e3bc <gcc_cp_fe_context@@Base+0x4af8>
    e35c:	ldr	x22, [sp, #8]
    e360:	cmn	x22, #0x1
    e364:	b.eq	e3a4 <gcc_cp_fe_context@@Base+0x4ae0>  // b.none
    e368:	adrp	x1, 2a000 <xexit@@Base+0x144dc>
    e36c:	ldr	x1, [x1, #3264]
    e370:	add	x0, x22, #0x1
    e374:	bl	53f0 <_ZnamRKSt9nothrow_t@plt>
    e378:	cbz	x0, e3bc <gcc_cp_fe_context@@Base+0x4af8>
    e37c:	mov	x21, x0
    e380:	mov	x0, x20
    e384:	mov	x1, x21
    e388:	mov	w2, w22
    e38c:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e390:	cbz	w0, e3b0 <gcc_cp_fe_context@@Base+0x4aec>
    e394:	ldr	x8, [sp, #8]
    e398:	strb	wzr, [x21, x8]
    e39c:	str	x21, [x19]
    e3a0:	b	e3a8 <gcc_cp_fe_context@@Base+0x4ae4>
    e3a4:	str	xzr, [x19]
    e3a8:	mov	w0, #0x1                   	// #1
    e3ac:	b	e3bc <gcc_cp_fe_context@@Base+0x4af8>
    e3b0:	mov	x0, x21
    e3b4:	bl	52b0 <_ZdaPv@plt>
    e3b8:	mov	w0, wzr
    e3bc:	ldp	x20, x19, [sp, #48]
    e3c0:	ldp	x22, x21, [sp, #32]
    e3c4:	ldp	x29, x30, [sp, #16]
    e3c8:	add	sp, sp, #0x40
    e3cc:	ret
    e3d0:	sub	sp, sp, #0x30
    e3d4:	stp	x29, x30, [sp, #16]
    e3d8:	stp	x20, x19, [sp, #32]
    e3dc:	add	x29, sp, #0x10
    e3e0:	mov	x20, x2
    e3e4:	mov	x19, x0
    e3e8:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    e3ec:	cbz	w0, e40c <gcc_cp_fe_context@@Base+0x4b48>
    e3f0:	add	x1, sp, #0x8
    e3f4:	mov	w2, #0x8                   	// #8
    e3f8:	mov	x0, x19
    e3fc:	str	x20, [sp, #8]
    e400:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e404:	cmp	w0, #0x0
    e408:	cset	w0, ne  // ne = any
    e40c:	ldp	x20, x19, [sp, #32]
    e410:	ldp	x29, x30, [sp, #16]
    e414:	add	sp, sp, #0x30
    e418:	ret
    e41c:	mov	x8, x1
    e420:	mov	x1, x2
    e424:	mov	w2, w8
    e428:	b	df24 <gcc_cp_fe_context@@Base+0x4660>
    e42c:	sub	sp, sp, #0x30
    e430:	stp	x29, x30, [sp, #16]
    e434:	stp	x20, x19, [sp, #32]
    e438:	add	x29, sp, #0x10
    e43c:	mov	x19, x2
    e440:	mov	x20, x0
    e444:	bl	df54 <gcc_cp_fe_context@@Base+0x4690>
    e448:	cbz	w0, e46c <gcc_cp_fe_context@@Base+0x4ba8>
    e44c:	add	x1, sp, #0x8
    e450:	mov	w2, #0x8                   	// #8
    e454:	mov	x0, x20
    e458:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e45c:	cbz	w0, e46c <gcc_cp_fe_context@@Base+0x4ba8>
    e460:	ldr	x8, [sp, #8]
    e464:	mov	w0, #0x1                   	// #1
    e468:	str	x8, [x19]
    e46c:	ldp	x20, x19, [sp, #32]
    e470:	ldp	x29, x30, [sp, #16]
    e474:	add	sp, sp, #0x30
    e478:	ret
    e47c:	mov	x8, x1
    e480:	mov	x1, x2
    e484:	mov	w2, w8
    e488:	b	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e48c:	stp	x29, x30, [sp, #-48]!
    e490:	str	x21, [sp, #16]
    e494:	stp	x20, x19, [sp, #32]
    e498:	mov	x29, sp
    e49c:	mov	x20, x1
    e4a0:	mov	x19, x0
    e4a4:	cbz	x1, e4b0 <gcc_cp_fe_context@@Base+0x4bec>
    e4a8:	ldrsw	x21, [x20]
    e4ac:	b	e4b4 <gcc_cp_fe_context@@Base+0x4bf0>
    e4b0:	mov	x21, #0xffffffffffffffff    	// #-1
    e4b4:	mov	w1, #0x61                  	// #97
    e4b8:	mov	x0, x19
    e4bc:	bl	def0 <gcc_cp_fe_context@@Base+0x462c>
    e4c0:	cbz	w0, e4fc <gcc_cp_fe_context@@Base+0x4c38>
    e4c4:	add	x1, x29, #0x18
    e4c8:	mov	w2, #0x8                   	// #8
    e4cc:	mov	x0, x19
    e4d0:	str	x21, [x29, #24]
    e4d4:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e4d8:	cmp	w0, #0x0
    e4dc:	mov	w8, w0
    e4e0:	cset	w0, ne  // ne = any
    e4e4:	cbz	w8, e4fc <gcc_cp_fe_context@@Base+0x4c38>
    e4e8:	cbz	x20, e4fc <gcc_cp_fe_context@@Base+0x4c38>
    e4ec:	ldr	x1, [x20, #8]
    e4f0:	lsl	w2, w21, #3
    e4f4:	mov	x0, x19
    e4f8:	bl	df24 <gcc_cp_fe_context@@Base+0x4660>
    e4fc:	ldp	x20, x19, [sp, #32]
    e500:	ldr	x21, [sp, #16]
    e504:	ldp	x29, x30, [sp], #48
    e508:	ret
    e50c:	stp	x29, x30, [sp, #-64]!
    e510:	str	x23, [sp, #16]
    e514:	stp	x22, x21, [sp, #32]
    e518:	stp	x20, x19, [sp, #48]
    e51c:	mov	x29, sp
    e520:	mov	x19, x1
    e524:	mov	w1, #0x61                  	// #97
    e528:	mov	x20, x0
    e52c:	bl	df54 <gcc_cp_fe_context@@Base+0x4690>
    e530:	cbz	w0, e598 <gcc_cp_fe_context@@Base+0x4cd4>
    e534:	add	x1, x29, #0x18
    e538:	mov	w2, #0x8                   	// #8
    e53c:	mov	x0, x20
    e540:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e544:	cbz	w0, e598 <gcc_cp_fe_context@@Base+0x4cd4>
    e548:	ldr	x23, [x29, #24]
    e54c:	cmn	x23, #0x1
    e550:	b.eq	e5a0 <gcc_cp_fe_context@@Base+0x4cdc>  // b.none
    e554:	mov	w0, #0x10                  	// #16
    e558:	bl	5220 <_Znwm@plt>
    e55c:	lsl	x8, x23, #3
    e560:	cmp	xzr, x23, lsr #61
    e564:	mov	x21, x0
    e568:	str	w23, [x0]
    e56c:	csinv	x0, x8, xzr, eq  // eq = none
    e570:	bl	4fa0 <_Znam@plt>
    e574:	mov	x22, x0
    e578:	str	x0, [x21, #8]
    e57c:	lsl	w2, w23, #3
    e580:	mov	x0, x20
    e584:	mov	x1, x22
    e588:	bl	df98 <gcc_cp_fe_context@@Base+0x46d4>
    e58c:	cbz	w0, e5bc <gcc_cp_fe_context@@Base+0x4cf8>
    e590:	str	x21, [x19]
    e594:	b	e5a4 <gcc_cp_fe_context@@Base+0x4ce0>
    e598:	mov	w0, wzr
    e59c:	b	e5a8 <gcc_cp_fe_context@@Base+0x4ce4>
    e5a0:	str	xzr, [x19]
    e5a4:	mov	w0, #0x1                   	// #1
    e5a8:	ldp	x20, x19, [sp, #48]
    e5ac:	ldp	x22, x21, [sp, #32]
    e5b0:	ldr	x23, [sp, #16]
    e5b4:	ldp	x29, x30, [sp], #64
    e5b8:	ret
    e5bc:	mov	x0, x22
    e5c0:	bl	52b0 <_ZdaPv@plt>
    e5c4:	ldr	x0, [x19]
    e5c8:	cbz	x0, e5a8 <gcc_cp_fe_context@@Base+0x4ce4>
    e5cc:	bl	5210 <_ZdlPv@plt>
    e5d0:	mov	w0, wzr
    e5d4:	b	e5a8 <gcc_cp_fe_context@@Base+0x4ce4>

000000000000e5d8 <xre_set_syntax@@Base>:
    e5d8:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
    e5dc:	ldr	x9, [x9, #3800]
    e5e0:	ldr	x8, [x9]
    e5e4:	str	x0, [x9]
    e5e8:	mov	x0, x8
    e5ec:	ret

000000000000e5f0 <xre_compile_fastmap@@Base>:
    e5f0:	b	e5f4 <xre_compile_fastmap@@Base+0x4>
    e5f4:	str	d8, [sp, #-112]!
    e5f8:	stp	x29, x30, [sp, #16]
    e5fc:	stp	x28, x27, [sp, #32]
    e600:	stp	x26, x25, [sp, #48]
    e604:	stp	x24, x23, [sp, #64]
    e608:	stp	x22, x21, [sp, #80]
    e60c:	stp	x20, x19, [sp, #96]
    e610:	mov	x29, sp
    e614:	sub	sp, sp, #0x50
    e618:	ldr	x22, [x0, #32]
    e61c:	ldr	x27, [x0]
    e620:	ldr	x9, [x0, #16]
    e624:	adrp	x13, 2b000 <xexit@@Base+0x154dc>
    e628:	movi	v0.2d, #0x0
    e62c:	add	x13, x13, #0x5f8
    e630:	adrp	x16, 2a000 <xexit@@Base+0x144dc>
    e634:	ldr	x16, [x16, #3952]
    e638:	stp	q0, q0, [x22, #224]
    e63c:	stp	q0, q0, [x22, #192]
    e640:	stp	q0, q0, [x22, #160]
    e644:	stp	q0, q0, [x22, #128]
    e648:	stp	q0, q0, [x22, #96]
    e64c:	stp	q0, q0, [x22, #64]
    e650:	stp	q0, q0, [x22, #32]
    e654:	stp	q0, q0, [x22]
    e658:	add	x10, x13, #0x100
    e65c:	cmp	x22, x10
    e660:	ldrb	w10, [x0, #56]
    e664:	add	x23, x27, x9
    e668:	add	x9, x22, #0x100
    e66c:	cset	w11, cc  // cc = lo, ul, last
    e670:	cmp	x9, x13
    e674:	cset	w9, hi  // hi = pmore
    e678:	adrp	x14, 16000 <xexit@@Base+0x4dc>
    e67c:	and	w3, w11, w9
    e680:	and	w9, w10, #0xfffffffe
    e684:	mov	x19, x0
    e688:	mov	w8, wzr
    e68c:	sub	x1, x29, #0x30
    e690:	mov	w24, #0x1                   	// #1
    e694:	mov	w18, #0x5                   	// #5
    e698:	add	x14, x14, #0x568
    e69c:	movi	v1.16b, #0x1
    e6a0:	mov	w15, #0x100                 	// #256
    e6a4:	mov	w17, #0x13                  	// #19
    e6a8:	movi	v8.8b, #0x1
    e6ac:	add	x28, x22, #0x7
    e6b0:	sub	x2, x22, #0x1
    e6b4:	orr	w9, w9, #0x8
    e6b8:	strb	w9, [x0, #56]
    e6bc:	mov	w26, #0x1                   	// #1
    e6c0:	cmp	x27, x23
    e6c4:	mov	w25, w8
    e6c8:	b.eq	ebcc <xre_compile_fastmap@@Base+0x5dc>  // b.none
    e6cc:	ldrb	w8, [x27]
    e6d0:	mov	x21, x27
    e6d4:	cmp	w8, #0x1
    e6d8:	b.eq	ebcc <xre_compile_fastmap@@Base+0x5dc>  // b.none
    e6dc:	cmp	w8, #0x1d
    e6e0:	b.hi	ec38 <xre_compile_fastmap@@Base+0x648>  // b.pmore
    e6e4:	adr	x9, e6c0 <xre_compile_fastmap@@Base+0xd0>
    e6e8:	ldrh	w10, [x14, x8, lsl #1]
    e6ec:	add	x9, x9, x10, lsl #2
    e6f0:	mov	w20, wzr
    e6f4:	add	x27, x21, #0x1
    e6f8:	mov	w8, w25
    e6fc:	br	x9
    e700:	ldrb	w8, [x21, #1]
    e704:	ldrsb	x9, [x21, #2]
    e708:	bfi	x8, x9, #8, #56
    e70c:	add	x9, x21, x8
    e710:	cmp	w8, #0x0
    e714:	add	x27, x9, #0x3
    e718:	mov	w8, w25
    e71c:	b.gt	e6c0 <xre_compile_fastmap@@Base+0xd0>
    e720:	ldrb	w8, [x27]
    e724:	cmp	w8, #0x15
    e728:	b.eq	e738 <xre_compile_fastmap@@Base+0x148>  // b.none
    e72c:	cmp	w8, #0xf
    e730:	mov	w8, w25
    e734:	b.ne	e6c0 <xre_compile_fastmap@@Base+0xd0>  // b.any
    e738:	ldrb	w9, [x27, #1]!
    e73c:	mov	w8, wzr
    e740:	ldrsb	x10, [x27, #1]
    e744:	bfi	x9, x10, #8, #56
    e748:	add	x9, x27, x9
    e74c:	add	x27, x9, #0x2
    e750:	cbz	w25, e6c0 <xre_compile_fastmap@@Base+0xd0>
    e754:	sub	w8, w25, #0x1
    e758:	ldr	x9, [x1, w8, uxtw #3]
    e75c:	cmp	x9, x27
    e760:	csel	w8, w8, w25, eq  // eq = none
    e764:	b	e6c0 <xre_compile_fastmap@@Base+0xd0>
    e768:	add	x27, x21, #0x3
    e76c:	mov	w8, w25
    e770:	b	e6c0 <xre_compile_fastmap@@Base+0xd0>
    e774:	ldrb	w8, [x21, #2]
    e778:	mov	w26, wzr
    e77c:	strb	w24, [x22, x8]
    e780:	b	eb9c <xre_compile_fastmap@@Base+0x5ac>
    e784:	ldrb	w8, [x22, #10]
    e788:	stp	q1, q1, [x22, #16]
    e78c:	stp	q1, q1, [x22, #48]
    e790:	stp	q1, q1, [x22, #80]
    e794:	stp	q1, q1, [x22, #112]
    e798:	stp	q1, q1, [x22, #144]
    e79c:	stp	q1, q1, [x22, #176]
    e7a0:	stp	q1, q1, [x22, #208]
    e7a4:	str	q1, [x22, #240]
    e7a8:	str	q1, [x22]
    e7ac:	ldrb	w9, [x19, #24]
    e7b0:	tbnz	w9, #6, ebb4 <xre_compile_fastmap@@Base+0x5c4>
    e7b4:	mov	w26, wzr
    e7b8:	strb	w8, [x22, #10]
    e7bc:	b	eb9c <xre_compile_fastmap@@Base+0x5ac>
    e7c0:	ldrb	w9, [x21, #1]
    e7c4:	mov	w26, wzr
    e7c8:	mov	w8, w25
    e7cc:	mov	x27, x23
    e7d0:	cbz	x9, e6c0 <xre_compile_fastmap@@Base+0xd0>
    e7d4:	add	x8, x21, #0x2
    e7d8:	lsl	x10, x9, #3
    e7dc:	b	e7f0 <xre_compile_fastmap@@Base+0x200>
    e7e0:	add	x10, x9, #0x1
    e7e4:	cmp	x10, #0x1
    e7e8:	mov	x10, x9
    e7ec:	b.le	eb98 <xre_compile_fastmap@@Base+0x5a8>
    e7f0:	sub	x9, x10, #0x1
    e7f4:	add	w11, w9, #0x7
    e7f8:	cmp	w9, #0x0
    e7fc:	csel	w11, w11, w9, lt  // lt = tstop
    e800:	asr	w11, w11, #3
    e804:	ldrb	w11, [x8, w11, sxtw]
    e808:	and	w12, w9, #0x7
    e80c:	lsr	w11, w11, w12
    e810:	tbz	w11, #0, e7e0 <xre_compile_fastmap@@Base+0x1f0>
    e814:	strb	w24, [x2, x10]
    e818:	b	e7e0 <xre_compile_fastmap@@Base+0x1f0>
    e81c:	ldrb	w9, [x27]
    e820:	cmp	x9, #0x1f
    e824:	b.hi	e880 <xre_compile_fastmap@@Base+0x290>  // b.pmore
    e828:	add	x0, x22, x9, lsl #3
    e82c:	stp	x1, x2, [x29, #-64]
    e830:	sub	x2, x15, x9, lsl #3
    e834:	mov	w1, #0x1                   	// #1
    e838:	stp	w18, w3, [x29, #8]
    e83c:	mov	x26, x13
    e840:	mov	x20, x14
    e844:	bl	5130 <memset@plt>
    e848:	adrp	x16, 2a000 <xexit@@Base+0x144dc>
    e84c:	ldp	x1, x2, [x29, #-64]
    e850:	ldp	w18, w3, [x29, #8]
    e854:	ldr	x16, [x16, #3952]
    e858:	ldrb	w9, [x27]
    e85c:	mov	w17, #0x13                  	// #19
    e860:	mov	w15, #0x100                 	// #256
    e864:	movi	v1.16b, #0x1
    e868:	mov	x14, x20
    e86c:	mov	x13, x26
    e870:	mov	w26, wzr
    e874:	mov	w8, w25
    e878:	mov	x27, x23
    e87c:	cbz	w9, e6c0 <xre_compile_fastmap@@Base+0xd0>
    e880:	add	x8, x21, #0x2
    e884:	lsl	x10, x9, #3
    e888:	b	e89c <xre_compile_fastmap@@Base+0x2ac>
    e88c:	add	x10, x9, #0x1
    e890:	cmp	x10, #0x1
    e894:	mov	x10, x9
    e898:	b.le	eb98 <xre_compile_fastmap@@Base+0x5a8>
    e89c:	sub	x9, x10, #0x1
    e8a0:	add	w11, w9, #0x7
    e8a4:	cmp	w9, #0x0
    e8a8:	csel	w11, w11, w9, lt  // lt = tstop
    e8ac:	asr	w11, w11, #3
    e8b0:	ldrb	w11, [x8, w11, sxtw]
    e8b4:	and	w12, w9, #0x7
    e8b8:	lsr	w11, w11, w12
    e8bc:	tbnz	w11, #0, e88c <xre_compile_fastmap@@Base+0x29c>
    e8c0:	strb	w24, [x2, x10]
    e8c4:	b	e88c <xre_compile_fastmap@@Base+0x29c>
    e8c8:	ldrb	w9, [x21, #3]
    e8cc:	ldrsb	w8, [x21, #4]
    e8d0:	add	x27, x21, #0x5
    e8d4:	bfi	w9, w8, #8, #24
    e8d8:	mov	w8, w25
    e8dc:	cbnz	w9, e6c0 <xre_compile_fastmap@@Base+0xd0>
    e8e0:	mov	w20, #0x1                   	// #1
    e8e4:	ldrb	w8, [x21, #1]
    e8e8:	ldrsb	x9, [x21, #2]
    e8ec:	bfi	x8, x9, #8, #56
    e8f0:	add	x9, x21, #0x3
    e8f4:	add	x27, x9, x8
    e8f8:	cmp	x27, x23
    e8fc:	b.cs	e97c <xre_compile_fastmap@@Base+0x38c>  // b.hs, b.nlast
    e900:	cmp	w25, w18
    e904:	b.ne	e96c <xre_compile_fastmap@@Base+0x37c>  // b.any
    e908:	ldr	w8, [x16]
    e90c:	mul	w8, w8, w17
    e910:	cmp	w18, w8
    e914:	b.hi	ec30 <xre_compile_fastmap@@Base+0x640>  // b.pmore
    e918:	lsl	w8, w18, #1
    e91c:	sub	x0, sp, w8, uxtw #3
    e920:	stp	w8, w3, [x29, #8]
    e924:	stp	x0, x9, [x29, #-72]
    e928:	mov	sp, x0
    e92c:	mov	w8, w18
    e930:	stur	x2, [x29, #-56]
    e934:	lsl	x2, x8, #3
    e938:	bl	4fb0 <memcpy@plt>
    e93c:	adrp	x16, 2a000 <xexit@@Base+0x144dc>
    e940:	ldp	x9, x2, [x29, #-64]
    e944:	ldp	w18, w3, [x29, #8]
    e948:	ldr	x16, [x16, #3952]
    e94c:	ldur	x1, [x29, #-72]
    e950:	adrp	x14, 16000 <xexit@@Base+0x4dc>
    e954:	adrp	x13, 2b000 <xexit@@Base+0x154dc>
    e958:	mov	w17, #0x13                  	// #19
    e95c:	mov	w15, #0x100                 	// #256
    e960:	movi	v1.16b, #0x1
    e964:	add	x14, x14, #0x568
    e968:	add	x13, x13, #0x5f8
    e96c:	add	w8, w25, #0x1
    e970:	str	x27, [x1, w25, uxtw #3]
    e974:	mov	w25, w8
    e978:	b	e988 <xre_compile_fastmap@@Base+0x398>
    e97c:	ldrb	w8, [x19, #56]
    e980:	orr	w8, w8, #0x1
    e984:	strb	w8, [x19, #56]
    e988:	add	x8, x21, #0x5
    e98c:	cmp	w20, #0x0
    e990:	csel	x27, x9, x8, eq  // eq = none
    e994:	mov	w8, w25
    e998:	b	e6c0 <xre_compile_fastmap@@Base+0xd0>
    e99c:	mov	x8, xzr
    e9a0:	tbnz	w3, #0, e9b4 <xre_compile_fastmap@@Base+0x3c4>
    e9a4:	b	e9d4 <xre_compile_fastmap@@Base+0x3e4>
    e9a8:	add	x8, x8, #0x1
    e9ac:	cmp	x8, #0x100
    e9b0:	b.eq	eb98 <xre_compile_fastmap@@Base+0x5a8>  // b.none
    e9b4:	ldrb	w9, [x13, x8]
    e9b8:	cmp	w9, #0x1
    e9bc:	b.ne	e9a8 <xre_compile_fastmap@@Base+0x3b8>  // b.any
    e9c0:	strb	w24, [x22, x8]
    e9c4:	b	e9a8 <xre_compile_fastmap@@Base+0x3b8>
    e9c8:	add	x8, x8, #0x8
    e9cc:	cmp	x8, #0x100
    e9d0:	b.eq	eb98 <xre_compile_fastmap@@Base+0x5a8>  // b.none
    e9d4:	ldr	d0, [x13, x8]
    e9d8:	cmeq	v0.8b, v0.8b, v8.8b
    e9dc:	umov	w9, v0.b[0]
    e9e0:	tbz	w9, #0, ea40 <xre_compile_fastmap@@Base+0x450>
    e9e4:	add	x9, x28, x8
    e9e8:	sturb	w24, [x9, #-7]
    e9ec:	umov	w9, v0.b[1]
    e9f0:	tbnz	w9, #0, ea48 <xre_compile_fastmap@@Base+0x458>
    e9f4:	umov	w9, v0.b[2]
    e9f8:	tbz	w9, #0, ea58 <xre_compile_fastmap@@Base+0x468>
    e9fc:	add	x9, x28, x8
    ea00:	sturb	w24, [x9, #-5]
    ea04:	umov	w9, v0.b[3]
    ea08:	tbnz	w9, #0, ea60 <xre_compile_fastmap@@Base+0x470>
    ea0c:	umov	w9, v0.b[4]
    ea10:	tbz	w9, #0, ea70 <xre_compile_fastmap@@Base+0x480>
    ea14:	add	x9, x28, x8
    ea18:	sturb	w24, [x9, #-3]
    ea1c:	umov	w9, v0.b[5]
    ea20:	tbnz	w9, #0, ea78 <xre_compile_fastmap@@Base+0x488>
    ea24:	umov	w9, v0.b[6]
    ea28:	tbz	w9, #0, ea88 <xre_compile_fastmap@@Base+0x498>
    ea2c:	add	x9, x28, x8
    ea30:	sturb	w24, [x9, #-1]
    ea34:	umov	w9, v0.b[7]
    ea38:	tbz	w9, #0, e9c8 <xre_compile_fastmap@@Base+0x3d8>
    ea3c:	b	ea90 <xre_compile_fastmap@@Base+0x4a0>
    ea40:	umov	w9, v0.b[1]
    ea44:	tbz	w9, #0, e9f4 <xre_compile_fastmap@@Base+0x404>
    ea48:	add	x9, x28, x8
    ea4c:	sturb	w24, [x9, #-6]
    ea50:	umov	w9, v0.b[2]
    ea54:	tbnz	w9, #0, e9fc <xre_compile_fastmap@@Base+0x40c>
    ea58:	umov	w9, v0.b[3]
    ea5c:	tbz	w9, #0, ea0c <xre_compile_fastmap@@Base+0x41c>
    ea60:	add	x9, x28, x8
    ea64:	sturb	w24, [x9, #-4]
    ea68:	umov	w9, v0.b[4]
    ea6c:	tbnz	w9, #0, ea14 <xre_compile_fastmap@@Base+0x424>
    ea70:	umov	w9, v0.b[5]
    ea74:	tbz	w9, #0, ea24 <xre_compile_fastmap@@Base+0x434>
    ea78:	add	x9, x28, x8
    ea7c:	sturb	w24, [x9, #-2]
    ea80:	umov	w9, v0.b[6]
    ea84:	tbnz	w9, #0, ea2c <xre_compile_fastmap@@Base+0x43c>
    ea88:	umov	w9, v0.b[7]
    ea8c:	tbz	w9, #0, e9c8 <xre_compile_fastmap@@Base+0x3d8>
    ea90:	strb	w24, [x28, x8]
    ea94:	b	e9c8 <xre_compile_fastmap@@Base+0x3d8>
    ea98:	mov	x8, xzr
    ea9c:	tbnz	w3, #0, eab0 <xre_compile_fastmap@@Base+0x4c0>
    eaa0:	b	ead0 <xre_compile_fastmap@@Base+0x4e0>
    eaa4:	add	x8, x8, #0x1
    eaa8:	cmp	x8, #0x100
    eaac:	b.eq	eb98 <xre_compile_fastmap@@Base+0x5a8>  // b.none
    eab0:	ldrb	w9, [x13, x8]
    eab4:	cmp	w9, #0x1
    eab8:	b.eq	eaa4 <xre_compile_fastmap@@Base+0x4b4>  // b.none
    eabc:	strb	w24, [x22, x8]
    eac0:	b	eaa4 <xre_compile_fastmap@@Base+0x4b4>
    eac4:	add	x8, x8, #0x8
    eac8:	cmp	x8, #0x100
    eacc:	b.eq	eb98 <xre_compile_fastmap@@Base+0x5a8>  // b.none
    ead0:	ldr	d0, [x13, x8]
    ead4:	cmeq	v0.8b, v0.8b, v8.8b
    ead8:	mvn	v0.8b, v0.8b
    eadc:	umov	w9, v0.b[0]
    eae0:	tbz	w9, #0, eb40 <xre_compile_fastmap@@Base+0x550>
    eae4:	add	x9, x28, x8
    eae8:	sturb	w24, [x9, #-7]
    eaec:	umov	w9, v0.b[1]
    eaf0:	tbnz	w9, #0, eb48 <xre_compile_fastmap@@Base+0x558>
    eaf4:	umov	w9, v0.b[2]
    eaf8:	tbz	w9, #0, eb58 <xre_compile_fastmap@@Base+0x568>
    eafc:	add	x9, x28, x8
    eb00:	sturb	w24, [x9, #-5]
    eb04:	umov	w9, v0.b[3]
    eb08:	tbnz	w9, #0, eb60 <xre_compile_fastmap@@Base+0x570>
    eb0c:	umov	w9, v0.b[4]
    eb10:	tbz	w9, #0, eb70 <xre_compile_fastmap@@Base+0x580>
    eb14:	add	x9, x28, x8
    eb18:	sturb	w24, [x9, #-3]
    eb1c:	umov	w9, v0.b[5]
    eb20:	tbnz	w9, #0, eb78 <xre_compile_fastmap@@Base+0x588>
    eb24:	umov	w9, v0.b[6]
    eb28:	tbz	w9, #0, eb88 <xre_compile_fastmap@@Base+0x598>
    eb2c:	add	x9, x28, x8
    eb30:	sturb	w24, [x9, #-1]
    eb34:	umov	w9, v0.b[7]
    eb38:	tbz	w9, #0, eac4 <xre_compile_fastmap@@Base+0x4d4>
    eb3c:	b	eb90 <xre_compile_fastmap@@Base+0x5a0>
    eb40:	umov	w9, v0.b[1]
    eb44:	tbz	w9, #0, eaf4 <xre_compile_fastmap@@Base+0x504>
    eb48:	add	x9, x28, x8
    eb4c:	sturb	w24, [x9, #-6]
    eb50:	umov	w9, v0.b[2]
    eb54:	tbnz	w9, #0, eafc <xre_compile_fastmap@@Base+0x50c>
    eb58:	umov	w9, v0.b[3]
    eb5c:	tbz	w9, #0, eb0c <xre_compile_fastmap@@Base+0x51c>
    eb60:	add	x9, x28, x8
    eb64:	sturb	w24, [x9, #-4]
    eb68:	umov	w9, v0.b[4]
    eb6c:	tbnz	w9, #0, eb14 <xre_compile_fastmap@@Base+0x524>
    eb70:	umov	w9, v0.b[5]
    eb74:	tbz	w9, #0, eb24 <xre_compile_fastmap@@Base+0x534>
    eb78:	add	x9, x28, x8
    eb7c:	sturb	w24, [x9, #-2]
    eb80:	umov	w9, v0.b[6]
    eb84:	tbnz	w9, #0, eb2c <xre_compile_fastmap@@Base+0x53c>
    eb88:	umov	w9, v0.b[7]
    eb8c:	tbz	w9, #0, eac4 <xre_compile_fastmap@@Base+0x4d4>
    eb90:	strb	w24, [x28, x8]
    eb94:	b	eac4 <xre_compile_fastmap@@Base+0x4d4>
    eb98:	mov	w26, wzr
    eb9c:	mov	w8, w25
    eba0:	mov	x27, x23
    eba4:	b	e6c0 <xre_compile_fastmap@@Base+0xd0>
    eba8:	add	x27, x21, #0x5
    ebac:	mov	w8, w25
    ebb0:	b	e6c0 <xre_compile_fastmap@@Base+0xd0>
    ebb4:	ldrb	w9, [x19, #56]
    ebb8:	mov	w26, wzr
    ebbc:	mov	w8, w25
    ebc0:	mov	x27, x23
    ebc4:	tbz	w9, #0, e6c0 <xre_compile_fastmap@@Base+0xd0>
    ebc8:	b	ebf4 <xre_compile_fastmap@@Base+0x604>
    ebcc:	ldrb	w8, [x19, #56]
    ebd0:	and	w9, w8, #0x1
    ebd4:	orr	w9, w9, w26
    ebd8:	and	w8, w8, #0xfe
    ebdc:	orr	w8, w9, w8
    ebe0:	strb	w8, [x19, #56]
    ebe4:	cbz	w25, ebf4 <xre_compile_fastmap@@Base+0x604>
    ebe8:	sub	w8, w25, #0x1
    ebec:	ldr	x27, [x1, w8, uxtw #3]
    ebf0:	b	e6bc <xre_compile_fastmap@@Base+0xcc>
    ebf4:	mov	w0, wzr
    ebf8:	b	ec0c <xre_compile_fastmap@@Base+0x61c>
    ebfc:	ldrb	w8, [x19, #56]
    ec00:	mov	w0, wzr
    ec04:	orr	w8, w8, #0x1
    ec08:	strb	w8, [x19, #56]
    ec0c:	mov	sp, x29
    ec10:	ldp	x20, x19, [sp, #96]
    ec14:	ldp	x22, x21, [sp, #80]
    ec18:	ldp	x24, x23, [sp, #64]
    ec1c:	ldp	x26, x25, [sp, #48]
    ec20:	ldp	x28, x27, [sp, #32]
    ec24:	ldp	x29, x30, [sp, #16]
    ec28:	ldr	d8, [sp], #112
    ec2c:	ret
    ec30:	mov	w0, #0xfffffffe            	// #-2
    ec34:	b	ec0c <xre_compile_fastmap@@Base+0x61c>
    ec38:	bl	53c0 <abort@plt>

000000000000ec3c <xre_set_registers@@Base>:
    ec3c:	ldrb	w8, [x0, #56]
    ec40:	cmp	w2, #0x0
    ec44:	csel	x9, xzr, x4, eq  // eq = none
    ec48:	csel	x10, xzr, x3, eq  // eq = none
    ec4c:	and	w8, w8, #0xfffffff9
    ec50:	orr	w11, w8, #0x2
    ec54:	csel	w8, w8, w11, eq  // eq = none
    ec58:	strb	w8, [x0, #56]
    ec5c:	str	w2, [x1]
    ec60:	stp	x10, x9, [x1, #8]
    ec64:	ret

000000000000ec68 <xre_search@@Base>:
    ec68:	sub	sp, sp, #0x20
    ec6c:	mov	x7, x5
    ec70:	mov	w6, w4
    ec74:	mov	w5, w3
    ec78:	mov	w4, w2
    ec7c:	mov	x3, x1
    ec80:	str	w2, [sp]
    ec84:	mov	x1, xzr
    ec88:	mov	w2, wzr
    ec8c:	stp	x29, x30, [sp, #16]
    ec90:	add	x29, sp, #0x10
    ec94:	bl	5490 <xre_search_2@plt>
    ec98:	ldp	x29, x30, [sp, #16]
    ec9c:	add	sp, sp, #0x20
    eca0:	ret

000000000000eca4 <xre_search_2@@Base>:
    eca4:	sub	sp, sp, #0x80
    eca8:	stp	x29, x30, [sp, #32]
    ecac:	stp	x24, x23, [sp, #80]
    ecb0:	add	x29, sp, #0x20
    ecb4:	mov	x24, x0
    ecb8:	mov	w0, #0xffffffff            	// #-1
    ecbc:	stp	x28, x27, [sp, #48]
    ecc0:	stp	x26, x25, [sp, #64]
    ecc4:	stp	x22, x21, [sp, #96]
    ecc8:	stp	x20, x19, [sp, #112]
    eccc:	stur	x7, [x29, #-8]
    ecd0:	tbnz	w5, #31, eec8 <xre_search_2@@Base+0x224>
    ecd4:	add	w27, w4, w2
    ecd8:	mov	w25, w5
    ecdc:	mov	w20, w4
    ece0:	mov	w22, w2
    ece4:	subs	w8, w27, w5
    ece8:	b.lt	eec8 <xre_search_2@@Base+0x224>  // b.tstop
    ecec:	ldp	x28, x9, [x24, #32]
    ecf0:	mov	x21, x3
    ecf4:	mov	x23, x1
    ecf8:	str	x9, [sp, #16]
    ecfc:	add	w9, w6, w25
    ed00:	cmp	w9, w27
    ed04:	csel	w8, w8, w6, gt
    ed08:	cmp	w9, #0x0
    ed0c:	csneg	w19, w8, w25, ge  // ge = tcont
    ed10:	cmp	w19, #0x1
    ed14:	b.lt	ed54 <xre_search_2@@Base+0xb0>  // b.tstop
    ed18:	ldr	x8, [x24, #16]
    ed1c:	cbz	x8, ed54 <xre_search_2@@Base+0xb0>
    ed20:	ldr	x8, [x24]
    ed24:	ldrb	w8, [x8]
    ed28:	cmp	w8, #0xb
    ed2c:	b.eq	ed40 <xre_search_2@@Base+0x9c>  // b.none
    ed30:	cmp	w8, #0x9
    ed34:	b.ne	ed54 <xre_search_2@@Base+0xb0>  // b.any
    ed38:	ldrsb	w8, [x24, #56]
    ed3c:	tbnz	w8, #31, ed54 <xre_search_2@@Base+0xb0>
    ed40:	cmp	w25, #0x0
    ed44:	b.le	ed50 <xre_search_2@@Base+0xac>
    ed48:	mov	w0, #0xffffffff            	// #-1
    ed4c:	b	eec8 <xre_search_2@@Base+0x224>
    ed50:	mov	w19, #0x1                   	// #1
    ed54:	cbz	x28, ed70 <xre_search_2@@Base+0xcc>
    ed58:	ldrb	w8, [x24, #56]
    ed5c:	tbnz	w8, #3, ed70 <xre_search_2@@Base+0xcc>
    ed60:	mov	x0, x24
    ed64:	bl	e5f4 <xre_compile_fastmap@@Base+0x4>
    ed68:	cmn	w0, #0x2
    ed6c:	b.eq	eec8 <xre_search_2@@Base+0x224>  // b.none
    ed70:	ldr	w26, [x29, #96]
    ed74:	sub	x8, x21, w22, sxtw
    ed78:	str	x8, [sp, #8]
    ed7c:	cbz	x28, ee54 <xre_search_2@@Base+0x1b0>
    ed80:	cmp	w25, w27
    ed84:	b.ge	ee54 <xre_search_2@@Base+0x1b0>  // b.tcont
    ed88:	ldrb	w8, [x24, #56]
    ed8c:	tbnz	w8, #0, ee54 <xre_search_2@@Base+0x1b0>
    ed90:	cmp	w19, #0x1
    ed94:	b.lt	edf0 <xre_search_2@@Base+0x14c>  // b.tstop
    ed98:	add	w8, w25, w19
    ed9c:	ldp	x10, x12, [sp, #8]
    eda0:	sub	w9, w19, w22
    eda4:	cmp	w8, w22
    eda8:	add	w9, w9, w25
    edac:	ccmp	w25, w22, #0x0, ge  // ge = tcont
    edb0:	csel	w9, wzr, w9, ge  // ge = tcont
    edb4:	cmp	w25, w22
    edb8:	csel	x10, x23, x10, lt  // lt = tstop
    edbc:	add	x10, x10, w25, sxtw
    edc0:	cbz	x12, ee28 <xre_search_2@@Base+0x184>
    edc4:	cmp	w19, w9
    edc8:	b.le	ee50 <xre_search_2@@Base+0x1ac>
    edcc:	ldrb	w11, [x10]
    edd0:	ldrb	w11, [x12, x11]
    edd4:	ldrb	w11, [x28, x11]
    edd8:	cbnz	w11, ee50 <xre_search_2@@Base+0x1ac>
    eddc:	sub	w19, w19, #0x1
    ede0:	cmp	w19, w9
    ede4:	add	x10, x10, #0x1
    ede8:	b.gt	edcc <xre_search_2@@Base+0x128>
    edec:	b	ee4c <xre_search_2@@Base+0x1a8>
    edf0:	sxtw	x8, w25
    edf4:	cmp	w25, w22
    edf8:	sub	x9, x8, w22, sxtw
    edfc:	ccmp	w22, #0x0, #0x4, lt  // lt = tstop
    ee00:	add	x9, x21, x9
    ee04:	add	x8, x23, x8
    ee08:	csel	x8, x8, x9, ne  // ne = any
    ee0c:	ldrb	w8, [x8]
    ee10:	ldr	x9, [sp, #16]
    ee14:	cbz	x9, ee1c <xre_search_2@@Base+0x178>
    ee18:	ldrb	w8, [x9, x8]
    ee1c:	ldrb	w8, [x28, w8, uxtw]
    ee20:	cbnz	w8, ee54 <xre_search_2@@Base+0x1b0>
    ee24:	b	ee9c <xre_search_2@@Base+0x1f8>
    ee28:	cmp	w19, w9
    ee2c:	b.le	ee50 <xre_search_2@@Base+0x1ac>
    ee30:	ldrb	w11, [x10]
    ee34:	ldrb	w11, [x28, x11]
    ee38:	cbnz	w11, ee50 <xre_search_2@@Base+0x1ac>
    ee3c:	sub	w19, w19, #0x1
    ee40:	cmp	w19, w9
    ee44:	add	x10, x10, #0x1
    ee48:	b.gt	ee30 <xre_search_2@@Base+0x18c>
    ee4c:	mov	w19, w9
    ee50:	sub	w25, w8, w19
    ee54:	tbnz	w19, #31, ee6c <xre_search_2@@Base+0x1c8>
    ee58:	cbz	x28, ee6c <xre_search_2@@Base+0x1c8>
    ee5c:	cmp	w25, w27
    ee60:	b.ne	ee6c <xre_search_2@@Base+0x1c8>  // b.any
    ee64:	ldrb	w8, [x24, #56]
    ee68:	tbz	w8, #0, ed48 <xre_search_2@@Base+0xa4>
    ee6c:	ldur	x6, [x29, #-8]
    ee70:	mov	x0, x24
    ee74:	mov	x1, x23
    ee78:	mov	w2, w22
    ee7c:	mov	x3, x21
    ee80:	mov	w4, w20
    ee84:	mov	w5, w25
    ee88:	mov	w7, w26
    ee8c:	bl	ef08 <xre_match@@Base+0x20>
    ee90:	tbz	w0, #31, eec4 <xre_search_2@@Base+0x220>
    ee94:	cmn	w0, #0x2
    ee98:	b.eq	eec8 <xre_search_2@@Base+0x224>  // b.none
    ee9c:	cbz	w19, ed48 <xre_search_2@@Base+0xa4>
    eea0:	cmp	w19, #0x0
    eea4:	mov	w8, #0xffffffff            	// #-1
    eea8:	mov	w9, #0x1                   	// #1
    eeac:	cneg	w8, w8, le
    eeb0:	cneg	w9, w9, le
    eeb4:	add	w19, w8, w19
    eeb8:	add	w25, w9, w25
    eebc:	cbnz	x28, ed80 <xre_search_2@@Base+0xdc>
    eec0:	b	ee54 <xre_search_2@@Base+0x1b0>
    eec4:	mov	w0, w25
    eec8:	ldp	x20, x19, [sp, #112]
    eecc:	ldp	x22, x21, [sp, #96]
    eed0:	ldp	x24, x23, [sp, #80]
    eed4:	ldp	x26, x25, [sp, #64]
    eed8:	ldp	x28, x27, [sp, #48]
    eedc:	ldp	x29, x30, [sp, #32]
    eee0:	add	sp, sp, #0x80
    eee4:	ret

000000000000eee8 <xre_match@@Base>:
    eee8:	mov	x6, x4
    eeec:	mov	w4, w2
    eef0:	mov	w5, w3
    eef4:	mov	x3, x1
    eef8:	mov	x1, xzr
    eefc:	mov	w2, wzr
    ef00:	mov	w7, w4
    ef04:	b	ef08 <xre_match@@Base+0x20>
    ef08:	stp	x29, x30, [sp, #-96]!
    ef0c:	stp	x28, x27, [sp, #16]
    ef10:	stp	x26, x25, [sp, #32]
    ef14:	stp	x24, x23, [sp, #48]
    ef18:	stp	x22, x21, [sp, #64]
    ef1c:	stp	x20, x19, [sp, #80]
    ef20:	mov	x29, sp
    ef24:	sub	sp, sp, #0x1b0
    ef28:	ldp	x13, x9, [x0, #40]
    ef2c:	ldr	x26, [x0]
    ef30:	ldr	x8, [x0, #16]
    ef34:	mov	x12, x0
    ef38:	add	x11, x9, #0x1
    ef3c:	lsl	x16, x11, #3
    ef40:	stur	x9, [x29, #-96]
    ef44:	cbz	x9, efd0 <xre_match@@Base+0xe8>
    ef48:	add	x10, x16, #0xf
    ef4c:	mov	x9, sp
    ef50:	and	x10, x10, #0xfffffffffffffff0
    ef54:	sub	x19, x9, x10
    ef58:	mov	sp, x19
    ef5c:	mov	x9, sp
    ef60:	sub	x28, x9, x10
    ef64:	mov	sp, x28
    ef68:	mov	x9, sp
    ef6c:	sub	x17, x9, x10
    ef70:	mov	sp, x17
    ef74:	mov	x9, sp
    ef78:	sub	x18, x9, x10
    ef7c:	mov	sp, x18
    ef80:	mov	x9, sp
    ef84:	sub	x9, x9, x10
    ef88:	stur	x9, [x29, #-120]
    ef8c:	mov	sp, x9
    ef90:	mov	x9, sp
    ef94:	sub	x9, x9, x10
    ef98:	stur	x9, [x29, #-128]
    ef9c:	mov	sp, x9
    efa0:	mov	x9, sp
    efa4:	sub	x22, x9, x10
    efa8:	mov	sp, x22
    efac:	mov	x9, sp
    efb0:	sub	x14, x9, x10
    efb4:	mov	sp, x14
    efb8:	mov	x9, sp
    efbc:	sub	x10, x9, x10
    efc0:	mov	sp, x10
    efc4:	mov	w0, #0xffffffff            	// #-1
    efc8:	tbz	w5, #31, eff8 <xre_match@@Base+0x110>
    efcc:	b	10e38 <xre_match@@Base+0x1f50>
    efd0:	mov	x19, xzr
    efd4:	mov	x28, xzr
    efd8:	mov	x17, xzr
    efdc:	mov	x18, xzr
    efe0:	mov	x22, xzr
    efe4:	stp	xzr, xzr, [x29, #-128]
    efe8:	mov	x14, xzr
    efec:	mov	x10, xzr
    eff0:	mov	w0, #0xffffffff            	// #-1
    eff4:	tbnz	w5, #31, 10e38 <xre_match@@Base+0x1f50>
    eff8:	add	w9, w4, w2
    effc:	cmp	w9, w5
    f000:	stur	x5, [x29, #-168]
    f004:	b.lt	10e38 <xre_match@@Base+0x1f50>  // b.tstop
    f008:	sub	x9, x29, #0x60
    f00c:	stur	x10, [x9, #-256]
    f010:	sub	x9, x29, #0x58
    f014:	cmp	x11, #0x2
    f018:	add	x8, x26, x8
    f01c:	stur	x14, [x9, #-256]
    f020:	stur	x13, [x29, #-160]
    f024:	stur	x12, [x29, #-176]
    f028:	stur	x6, [x29, #-248]
    f02c:	stur	x11, [x29, #-192]
    f030:	stur	x8, [x29, #-72]
    f034:	b.cc	f080 <xre_match@@Base+0x198>  // b.lo, b.ul, b.last
    f038:	ldur	x14, [x29, #-96]
    f03c:	adrp	x13, 2b000 <xexit@@Base+0x154dc>
    f040:	add	x8, x22, #0x8
    f044:	add	x9, x19, #0x8
    f048:	add	x10, x28, #0x8
    f04c:	add	x11, x17, #0x8
    f050:	add	x12, x18, #0x8
    f054:	add	x13, x13, #0x6f8
    f058:	str	x13, [x12], #8
    f05c:	str	x13, [x11], #8
    f060:	str	x13, [x10], #8
    f064:	str	x13, [x9], #8
    f068:	ldrb	w15, [x8]
    f06c:	subs	x14, x14, #0x1
    f070:	and	w15, w15, #0xe0
    f074:	orr	w15, w15, #0x3
    f078:	strb	w15, [x8], #8
    f07c:	b.ne	f058 <xre_match@@Base+0x170>  // b.any
    f080:	sub	x8, x29, #0x48
    f084:	stur	x18, [x8, #-256]
    f088:	sub	x8, x29, #0x40
    f08c:	cmp	w4, #0x0
    f090:	ldp	x30, x23, [x29, #-128]
    f094:	stur	x17, [x8, #-256]
    f098:	cset	w17, eq  // eq = none
    f09c:	cmp	x1, #0x0
    f0a0:	add	x15, x28, #0x8
    f0a4:	cset	w18, ne  // ne = any
    f0a8:	sub	x8, x29, #0x20
    f0ac:	stur	x15, [x29, #-80]
    f0b0:	sub	x15, x29, #0x90
    f0b4:	tst	w18, w17
    f0b8:	stur	xzr, [x8, #-256]
    f0bc:	sxtw	x8, w7
    f0c0:	ldur	x25, [x29, #-168]
    f0c4:	add	x10, x23, x16
    f0c8:	add	x12, x30, x16
    f0cc:	add	x14, x19, x16
    f0d0:	stur	x16, [x15, #-256]
    f0d4:	add	x15, x28, x16
    f0d8:	csel	w16, w2, w4, ne  // ne = any
    f0dc:	csel	x3, x1, x3, ne  // ne = any
    f0e0:	csel	w21, wzr, w2, ne  // ne = any
    f0e4:	csel	x2, xzr, x1, ne  // ne = any
    f0e8:	sxtw	x17, w21
    f0ec:	add	x18, x2, x8
    f0f0:	add	x8, x3, x8
    f0f4:	cmp	w21, w7
    f0f8:	add	x7, x2, x17
    f0fc:	sub	x8, x8, x17
    f100:	csel	x6, x8, x3, lt  // lt = tstop
    f104:	csel	x4, x7, x18, lt  // lt = tstop
    f108:	cmp	w21, #0x1
    f10c:	cset	w8, lt  // lt = tstop
    f110:	cmp	w21, w25
    f114:	sxtw	x20, w25
    f118:	sub	x1, x29, #0x10
    f11c:	cset	w18, lt  // lt = tstop
    f120:	stur	x20, [x1, #-256]
    f124:	add	x1, x3, x20
    f128:	orr	w8, w8, w18
    f12c:	add	x0, x2, x20
    f130:	sub	x1, x1, x17
    f134:	cmp	w8, #0x0
    f138:	add	x9, x23, #0x8
    f13c:	stur	x15, [x29, #-88]
    f140:	stur	x4, [x29, #-104]
    f144:	csel	x4, x6, x4, ne  // ne = any
    f148:	csel	x25, x1, x0, ne  // ne = any
    f14c:	cmp	w21, #0x0
    f150:	add	x11, x30, #0x8
    f154:	stur	x21, [x29, #-184]
    f158:	csel	x8, x3, x2, eq  // eq = none
    f15c:	cmp	x9, x12
    f160:	ldp	x21, x20, [x29, #-88]
    f164:	stur	x8, [x29, #-240]
    f168:	cset	w8, cc  // cc = lo, ul, last
    f16c:	cmp	x11, x10
    f170:	add	x13, x19, #0x8
    f174:	cset	w18, cc  // cc = lo, ul, last
    f178:	cmp	x9, x14
    f17c:	cset	w0, cc  // cc = lo, ul, last
    f180:	cmp	x13, x10
    f184:	cset	w1, cc  // cc = lo, ul, last
    f188:	cmp	x9, x21
    f18c:	cset	w9, cc  // cc = lo, ul, last
    f190:	cmp	x20, x10
    f194:	cset	w10, cc  // cc = lo, ul, last
    f198:	cmp	x11, x14
    f19c:	cset	w14, cc  // cc = lo, ul, last
    f1a0:	cmp	x13, x12
    f1a4:	cset	w13, cc  // cc = lo, ul, last
    f1a8:	cmp	x11, x21
    f1ac:	add	x11, x19, #0x18
    f1b0:	sub	x21, x29, #0x68
    f1b4:	stur	x11, [x21, #-256]
    f1b8:	cset	w11, cc  // cc = lo, ul, last
    f1bc:	cmp	x20, x12
    f1c0:	add	x12, x23, #0x18
    f1c4:	sub	x20, x29, #0x70
    f1c8:	stur	x12, [x20, #-256]
    f1cc:	add	x12, x30, #0x18
    f1d0:	sub	x20, x29, #0x78
    f1d4:	stur	x12, [x20, #-256]
    f1d8:	and	w8, w8, w18
    f1dc:	add	x12, x28, #0x18
    f1e0:	sub	x18, x29, #0x80
    f1e4:	stur	x12, [x18, #-256]
    f1e8:	and	w12, w0, w1
    f1ec:	orr	w8, w8, w12
    f1f0:	and	w9, w9, w10
    f1f4:	ldur	x5, [x29, #-96]
    f1f8:	orr	w8, w8, w9
    f1fc:	and	w9, w14, w13
    f200:	orr	w8, w8, w9
    f204:	cset	w9, cc  // cc = lo, ul, last
    f208:	and	w9, w11, w9
    f20c:	orr	w8, w8, w9
    f210:	sub	x9, x29, #0x34
    f214:	and	x15, x5, #0xfffffffffffffffc
    f218:	stur	w8, [x9, #-256]
    f21c:	sub	x8, x29, #0x30
    f220:	stur	x15, [x8, #-256]
    f224:	orr	x8, x15, #0x1
    f228:	sub	x9, x29, #0x88
    f22c:	stur	x8, [x9, #-256]
    f230:	neg	x8, x17
    f234:	sub	x9, x29, #0x18
    f238:	stur	x8, [x9, #-256]
    f23c:	stur	w16, [x29, #-204]
    f240:	add	x8, x3, w16, sxtw
    f244:	ldur	x16, [x29, #-72]
    f248:	add	x18, x5, #0x1
    f24c:	sub	x20, x29, #0x50
    f250:	stur	x8, [x29, #-200]
    f254:	sub	x8, x3, #0x1
    f258:	mov	w27, wzr
    f25c:	sub	x24, x29, #0x40
    f260:	mov	x30, x2
    f264:	stur	x18, [x20, #-256]
    f268:	mov	w18, #0x5                   	// #5
    f26c:	mov	w21, #0x101                 	// #257
    f270:	mov	w5, #0x100                 	// #256
    f274:	mov	x15, x4
    f278:	stur	x8, [x29, #-256]
    f27c:	sub	x8, x7, #0x1
    f280:	stur	wzr, [x29, #-140]
    f284:	stur	xzr, [x29, #-152]
    f288:	stp	x7, x3, [x29, #-88]
    f28c:	stp	x2, x8, [x29, #-224]
    f290:	stur	x6, [x29, #-136]
    f294:	b	f2ac <xre_match@@Base+0x3c4>
    f298:	ldur	x8, [x29, #-88]
    f29c:	cmp	x25, x8
    f2a0:	ldur	x8, [x29, #-104]
    f2a4:	ccmp	x25, x30, #0x0, ls  // ls = plast
    f2a8:	csel	x15, x15, x8, cc  // cc = lo, ul, last
    f2ac:	cmp	x26, x16
    f2b0:	b.eq	f2c0 <xre_match@@Base+0x3d8>  // b.none
    f2b4:	mov	x12, x26
    f2b8:	stur	wzr, [x29, #-112]
    f2bc:	b	f3a4 <xre_match@@Base+0x4bc>
    f2c0:	mov	x23, x25
    f2c4:	cmp	x23, x6
    f2c8:	b.eq	10e58 <xre_match@@Base+0x1f70>  // b.none
    f2cc:	ldur	x8, [x29, #-184]
    f2d0:	ldur	x11, [x29, #-152]
    f2d4:	ldur	x10, [x29, #-88]
    f2d8:	cmp	w8, #0x0
    f2dc:	cset	w8, ne  // ne = any
    f2e0:	cmp	x30, x11
    f2e4:	cset	w9, ls  // ls = plast
    f2e8:	and	w8, w8, w9
    f2ec:	ldur	x9, [x29, #-104]
    f2f0:	cmp	x11, x10
    f2f4:	cset	w10, ls  // ls = plast
    f2f8:	and	w8, w10, w8
    f2fc:	cmp	x15, x9
    f300:	cset	w9, eq  // eq = none
    f304:	eor	w8, w8, w9
    f308:	tbz	w8, #0, f314 <xre_match@@Base+0x42c>
    f30c:	cset	w8, ne  // ne = any
    f310:	b	f31c <xre_match@@Base+0x434>
    f314:	cmp	x23, x11
    f318:	cset	w8, hi  // hi = pmore
    f31c:	ldur	w9, [x29, #-140]
    f320:	cmp	w9, #0x0
    f324:	cset	w9, eq  // eq = none
    f328:	orr	w8, w9, w8
    f32c:	cbz	w27, 10e60 <xre_match@@Base+0x1f78>
    f330:	cbz	w8, 10714 <xre_match@@Base+0x182c>
    f334:	ldur	x8, [x29, #-192]
    f338:	cmp	x8, #0x2
    f33c:	b.cc	f364 <xre_match@@Base+0x47c>  // b.lo, b.ul, b.last
    f340:	ldur	x8, [x29, #-96]
    f344:	sub	x9, x29, #0x34
    f348:	ldur	w9, [x9, #-256]
    f34c:	cmp	x8, #0x4
    f350:	cset	w8, cc  // cc = lo, ul, last
    f354:	orr	w8, w8, w9
    f358:	tbz	w8, #0, 10654 <xre_match@@Base+0x176c>
    f35c:	mov	w9, #0x1                   	// #1
    f360:	b	106c0 <xre_match@@Base+0x17d8>
    f364:	mov	w8, #0x1                   	// #1
    f368:	stur	w8, [x29, #-140]
    f36c:	stur	x23, [x29, #-152]
    f370:	b	10714 <xre_match@@Base+0x182c>
    f374:	stur	wzr, [x29, #-112]
    f378:	mov	w27, w10
    f37c:	ldrb	w8, [x26, #1]
    f380:	ldrsb	x9, [x26, #2]
    f384:	bfi	x8, x9, #8, #56
    f388:	add	x8, x26, x8
    f38c:	add	x12, x8, #0x3
    f390:	mov	x23, x25
    f394:	cmp	x12, x16
    f398:	mov	x25, x23
    f39c:	mov	x26, x12
    f3a0:	b.eq	f2c4 <xre_match@@Base+0x3dc>  // b.none
    f3a4:	ldrb	w8, [x12], #1
    f3a8:	cmp	w8, #0x1d
    f3ac:	b.hi	10e80 <xre_match@@Base+0x1f98>  // b.pmore
    f3b0:	adrp	x11, 16000 <xexit@@Base+0x4dc>
    f3b4:	add	x11, x11, #0x5a4
    f3b8:	adr	x9, f37c <xre_match@@Base+0x494>
    f3bc:	ldrh	w10, [x11, x8, lsl #1]
    f3c0:	add	x9, x9, x10, lsl #2
    f3c4:	br	x9
    f3c8:	cmp	w8, #0x5
    f3cc:	cset	w9, eq  // eq = none
    f3d0:	cmp	x25, x15
    f3d4:	b.ne	f408 <xre_match@@Base+0x520>  // b.any
    f3d8:	cmp	x15, x6
    f3dc:	mov	x15, x6
    f3e0:	mov	x25, x3
    f3e4:	b.ne	f3d0 <xre_match@@Base+0x4e8>  // b.any
    f3e8:	b	10648 <xre_match@@Base+0x1760>
    f3ec:	cmp	x25, x15
    f3f0:	b.ne	1009c <xre_match@@Base+0x11b4>  // b.any
    f3f4:	cmp	x15, x6
    f3f8:	mov	x15, x6
    f3fc:	mov	x25, x3
    f400:	b.ne	f3ec <xre_match@@Base+0x504>  // b.any
    f404:	b	10648 <xre_match@@Base+0x1760>
    f408:	ldur	x11, [x29, #-160]
    f40c:	mov	x10, x25
    f410:	cbz	x11, f41c <xre_match@@Base+0x534>
    f414:	ldrb	w10, [x25]
    f418:	add	x10, x11, x10
    f41c:	ldrb	w11, [x10]
    f420:	ldrb	w10, [x12]
    f424:	cmp	w11, w10, lsl #3
    f428:	b.cs	ff90 <xre_match@@Base+0x10a8>  // b.hs, b.nlast
    f42c:	mov	x13, x12
    f430:	add	x12, x12, x11, lsr #3
    f434:	ldrb	w12, [x12, #1]
    f438:	and	w11, w11, #0x7
    f43c:	lsr	w11, w12, w11
    f440:	tbz	w11, #0, ff94 <xre_match@@Base+0x10ac>
    f444:	cmp	w8, #0x5
    f448:	cset	w9, ne  // ne = any
    f44c:	b	ff94 <xre_match@@Base+0x10ac>
    f450:	ldrb	w8, [x12]
    f454:	adrp	x11, 2b000 <xexit@@Base+0x154dc>
    f458:	add	x11, x11, #0x6f8
    f45c:	lsl	x8, x8, #3
    f460:	ldr	x9, [x28, x8]
    f464:	ldrb	w10, [x22, x8]
    f468:	cmp	x9, x11
    f46c:	csel	x11, x25, x9, eq  // eq = none
    f470:	tst	w10, #0x3
    f474:	sub	x10, x29, #0x48
    f478:	ldur	x10, [x10, #-256]
    f47c:	csel	x9, x9, x11, eq  // eq = none
    f480:	cmp	x5, x21
    f484:	str	x9, [x10, x8]
    f488:	ldrb	w8, [x12]
    f48c:	str	x25, [x28, x8, lsl #3]
    f490:	ldrb	w8, [x12]
    f494:	lsl	x8, x8, #3
    f498:	ldrb	w9, [x22, x8]
    f49c:	and	w9, w9, #0xfffffffb
    f4a0:	strb	w9, [x22, x8]
    f4a4:	ldrb	w8, [x12]
    f4a8:	b.ne	10128 <xre_match@@Base+0x1240>  // b.any
    f4ac:	mov	w21, #0x101                 	// #257
    f4b0:	mov	w5, #0x100                 	// #256
    f4b4:	b	10148 <xre_match@@Base+0x1260>
    f4b8:	ldur	x23, [x29, #-200]
    f4bc:	cmp	x25, x23
    f4c0:	b.eq	f394 <xre_match@@Base+0x4ac>  // b.none
    f4c4:	b	1070c <xre_match@@Base+0x1824>
    f4c8:	ldur	x9, [x29, #-88]
    f4cc:	cmp	x25, x15
    f4d0:	b.ne	ffd4 <xre_match@@Base+0x10ec>  // b.any
    f4d4:	cmp	x15, x6
    f4d8:	mov	x15, x6
    f4dc:	mov	x25, x3
    f4e0:	b.ne	f4cc <xre_match@@Base+0x5e4>  // b.any
    f4e4:	b	10648 <xre_match@@Base+0x1760>
    f4e8:	ldur	x9, [x29, #-88]
    f4ec:	cmp	x25, x15
    f4f0:	b.ne	10038 <xre_match@@Base+0x1150>  // b.any
    f4f4:	cmp	x15, x6
    f4f8:	mov	x15, x6
    f4fc:	mov	x25, x3
    f500:	b.ne	f4ec <xre_match@@Base+0x604>  // b.any
    f504:	b	10648 <xre_match@@Base+0x1760>
    f508:	ldrb	w8, [x26, #1]
    f50c:	ldur	x12, [x29, #-160]
    f510:	add	x9, x26, #0x2
    f514:	mov	w10, w8
    f518:	mov	w11, w8
    f51c:	cbz	x12, 1027c <xre_match@@Base+0x1394>
    f520:	cmp	x25, x15
    f524:	b.ne	f53c <xre_match@@Base+0x654>  // b.any
    f528:	cmp	x15, x6
    f52c:	mov	x15, x6
    f530:	mov	x25, x3
    f534:	b.ne	f520 <xre_match@@Base+0x638>  // b.any
    f538:	b	10648 <xre_match@@Base+0x1760>
    f53c:	ldrb	w11, [x25], #1
    f540:	ldur	x13, [x29, #-160]
    f544:	ldrb	w12, [x9]
    f548:	ldrb	w11, [x13, x11]
    f54c:	cmp	w11, w12
    f550:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
    f554:	subs	w10, w10, #0x1
    f558:	add	x9, x9, #0x1
    f55c:	b.ne	f520 <xre_match@@Base+0x638>  // b.any
    f560:	sub	w8, w8, #0x1
    f564:	add	x8, x26, x8
    f568:	add	x12, x8, #0x3
    f56c:	ldur	w8, [x29, #-112]
    f570:	cbnz	w8, f390 <xre_match@@Base+0x4a8>
    f574:	cmp	x5, x21
    f578:	b.cc	f59c <xre_match@@Base+0x6b4>  // b.lo, b.ul, b.last
    f57c:	add	x8, x22, x21, lsl #3
    f580:	mov	x9, x21
    f584:	ldrb	w10, [x8]
    f588:	add	x9, x9, #0x1
    f58c:	cmp	x9, x5
    f590:	orr	w10, w10, #0x18
    f594:	strb	w10, [x8], #8
    f598:	b.ls	f584 <xre_match@@Base+0x69c>  // b.plast
    f59c:	mov	w8, #0x1                   	// #1
    f5a0:	stur	w8, [x29, #-112]
    f5a4:	b	f390 <xre_match@@Base+0x4a8>
    f5a8:	stur	x12, [x29, #-16]
    f5ac:	ldrb	w8, [x12]
    f5b0:	lsl	x9, x8, #3
    f5b4:	ldrb	w9, [x22, x9]
    f5b8:	and	w9, w9, #0x3
    f5bc:	cmp	w9, #0x3
    f5c0:	b.ne	f624 <xre_match@@Base+0x73c>  // b.any
    f5c4:	sub	x0, x29, #0x10
    f5c8:	mov	x1, x16
    f5cc:	mov	x2, x22
    f5d0:	sub	x8, x29, #0x28
    f5d4:	mov	w23, w18
    f5d8:	stur	x15, [x8, #-256]
    f5dc:	mov	x20, x12
    f5e0:	bl	13e58 <xregfree@@Base+0x50>
    f5e4:	sub	x8, x29, #0x28
    f5e8:	ldur	x15, [x8, #-256]
    f5ec:	ldrb	w8, [x20]
    f5f0:	ldp	x3, x16, [x29, #-80]
    f5f4:	ldur	x6, [x29, #-136]
    f5f8:	ldur	x30, [x29, #-224]
    f5fc:	lsl	x8, x8, #3
    f600:	ldrb	w9, [x22, x8]
    f604:	mov	w18, w23
    f608:	and	w9, w9, #0xfc
    f60c:	bfxil	w9, w0, #0, #2
    f610:	strb	w9, [x22, x8]
    f614:	ldrb	w8, [x20]
    f618:	lsl	x9, x8, #3
    f61c:	ldrb	w9, [x22, x9]
    f620:	and	w9, w9, #0x3
    f624:	lsl	x8, x8, #3
    f628:	ldr	x10, [x19, x8]
    f62c:	adrp	x11, 2b000 <xexit@@Base+0x154dc>
    f630:	add	x11, x11, #0x6f8
    f634:	stur	wzr, [x29, #-112]
    f638:	cmp	x10, x11
    f63c:	csel	x11, x25, x10, eq  // eq = none
    f640:	cmp	w9, #0x0
    f644:	csel	x9, x10, x11, eq  // eq = none
    f648:	sub	x10, x29, #0x40
    f64c:	ldur	x10, [x10, #-256]
    f650:	cmp	x21, #0x101
    f654:	str	x9, [x10, x8]
    f658:	ldrb	w8, [x26, #1]
    f65c:	str	x25, [x19, x8, lsl #3]
    f660:	ldrb	w8, [x26, #1]
    f664:	lsl	x8, x8, #3
    f668:	ldrb	w9, [x22, x8]
    f66c:	orr	w9, w9, #0x4
    f670:	strb	w9, [x22, x8]
    f674:	ldrb	w8, [x26, #1]
    f678:	lsl	x8, x8, #3
    f67c:	ldrb	w9, [x22, x8]
    f680:	and	w9, w9, #0xfffffff7
    f684:	strb	w9, [x22, x8]
    f688:	ldrb	w5, [x26, #1]
    f68c:	add	x8, x26, #0x3
    f690:	sub	x9, x29, #0x20
    f694:	stur	x8, [x9, #-256]
    f698:	csel	x21, x5, x21, eq  // eq = none
    f69c:	mov	x12, x8
    f6a0:	b	f390 <xre_match@@Base+0x4a8>
    f6a4:	ldrb	w9, [x26, #1]
    f6a8:	adrp	x10, 2b000 <xexit@@Base+0x154dc>
    f6ac:	add	x10, x10, #0x6f8
    f6b0:	ldr	x8, [x19, x9, lsl #3]
    f6b4:	cmp	x8, x10
    f6b8:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
    f6bc:	ldr	x20, [x28, x9, lsl #3]
    f6c0:	cmp	x20, x10
    f6c4:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
    f6c8:	ldur	x12, [x29, #-184]
    f6cc:	ldur	x13, [x29, #-88]
    f6d0:	add	x9, x26, #0x2
    f6d4:	sub	x10, x29, #0x8
    f6d8:	cmp	w12, #0x0
    f6dc:	stur	x9, [x10, #-256]
    f6e0:	cset	w9, ne  // ne = any
    f6e4:	cmp	x30, x8
    f6e8:	cset	w10, ls  // ls = plast
    f6ec:	cmp	x8, x13
    f6f0:	cset	w11, ls  // ls = plast
    f6f4:	and	w9, w9, w10
    f6f8:	and	w9, w11, w9
    f6fc:	cbz	w12, 10298 <xre_match@@Base+0x13b0>
    f700:	cmp	x30, x20
    f704:	cset	w10, ls  // ls = plast
    f708:	cmp	x20, x13
    f70c:	ldur	x26, [x29, #-104]
    f710:	cset	w11, ls  // ls = plast
    f714:	and	w10, w11, w10
    f718:	cmp	w9, w10
    f71c:	b.ne	f724 <xre_match@@Base+0x83c>  // b.any
    f720:	mov	x26, x20
    f724:	add	x13, x22, x21, lsl #3
    f728:	cmp	x3, x20
    f72c:	cset	w9, eq  // eq = none
    f730:	cmp	x8, x26
    f734:	cset	w10, eq  // eq = none
    f738:	cset	w11, ne  // ne = any
    f73c:	cmp	x26, x6
    f740:	cset	w12, eq  // eq = none
    f744:	cmp	x26, x20
    f748:	ldur	w23, [x29, #-112]
    f74c:	orr	w11, w12, w11
    f750:	cset	w12, eq  // eq = none
    f754:	orr	w11, w12, w11
    f758:	cmp	w11, #0x0
    f75c:	csel	x1, x8, x3, ne  // ne = any
    f760:	csel	w8, w10, w9, ne  // ne = any
    f764:	csel	x26, x26, x20, ne  // ne = any
    f768:	tbnz	w8, #0, 104f8 <xre_match@@Base+0x1610>
    f76c:	cmp	x25, x15
    f770:	b.ne	f788 <xre_match@@Base+0x8a0>  // b.any
    f774:	cmp	x15, x6
    f778:	mov	x15, x6
    f77c:	mov	x25, x3
    f780:	b.ne	f76c <xre_match@@Base+0x884>  // b.any
    f784:	b	10648 <xre_match@@Base+0x1760>
    f788:	sub	x8, x15, x25
    f78c:	sub	x9, x26, x1
    f790:	cmp	x9, w8, sxtw
    f794:	csel	x8, x9, x8, lt  // lt = tstop
    f798:	ldur	x9, [x29, #-160]
    f79c:	sxtw	x2, w8
    f7a0:	cbz	x9, f7d8 <xre_match@@Base+0x8f0>
    f7a4:	cbz	w8, f840 <xre_match@@Base+0x958>
    f7a8:	mov	x9, xzr
    f7ac:	ldrb	w10, [x25, x9]
    f7b0:	ldrb	w11, [x1, x9]
    f7b4:	ldur	x12, [x29, #-160]
    f7b8:	ldrb	w10, [x12, x10]
    f7bc:	ldrb	w11, [x12, x11]
    f7c0:	cmp	w10, w11
    f7c4:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
    f7c8:	add	x9, x9, #0x1
    f7cc:	cmp	w8, w9
    f7d0:	b.ne	f7ac <xre_match@@Base+0x8c4>  // b.any
    f7d4:	b	f840 <xre_match@@Base+0x958>
    f7d8:	sub	x8, x29, #0x28
    f7dc:	stur	x15, [x8, #-256]
    f7e0:	sub	x8, x29, #0x98
    f7e4:	stur	x13, [x8, #-256]
    f7e8:	sub	x8, x29, #0xa0
    f7ec:	mov	x0, x25
    f7f0:	stur	x1, [x8, #-256]
    f7f4:	sub	x8, x29, #0xa8
    f7f8:	stur	x5, [x29, #-112]
    f7fc:	stur	w18, [x29, #-232]
    f800:	stur	x2, [x8, #-256]
    f804:	bl	54c0 <bcmp@plt>
    f808:	sub	x8, x29, #0xa8
    f80c:	ldur	x2, [x8, #-256]
    f810:	sub	x8, x29, #0xa0
    f814:	ldur	x1, [x8, #-256]
    f818:	sub	x8, x29, #0x98
    f81c:	ldur	x13, [x8, #-256]
    f820:	sub	x8, x29, #0x28
    f824:	ldur	x15, [x8, #-256]
    f828:	ldur	x5, [x29, #-112]
    f82c:	ldur	w18, [x29, #-232]
    f830:	ldur	x6, [x29, #-136]
    f834:	ldp	x3, x16, [x29, #-80]
    f838:	ldur	x30, [x29, #-224]
    f83c:	cbnz	w0, 1070c <xre_match@@Base+0x1824>
    f840:	cmp	w23, #0x0
    f844:	add	x25, x25, x2
    f848:	add	x8, x1, x2
    f84c:	csinc	w9, w23, wzr, ne  // ne = any
    f850:	stur	w9, [x29, #-112]
    f854:	cbnz	w23, f728 <xre_match@@Base+0x840>
    f858:	cmp	x5, x21
    f85c:	b.cc	f728 <xre_match@@Base+0x840>  // b.lo, b.ul, b.last
    f860:	mov	x9, x13
    f864:	mov	x10, x21
    f868:	ldrb	w11, [x9]
    f86c:	add	x10, x10, #0x1
    f870:	cmp	x10, x5
    f874:	orr	w11, w11, #0x18
    f878:	strb	w11, [x9], #8
    f87c:	b.ls	f868 <xre_match@@Base+0x980>  // b.plast
    f880:	mov	w9, #0x1                   	// #1
    f884:	stur	w9, [x29, #-112]
    f888:	b	f728 <xre_match@@Base+0x840>
    f88c:	ldur	x23, [x29, #-200]
    f890:	cmp	x25, x23
    f894:	b.eq	10208 <xre_match@@Base+0x1320>  // b.none
    f898:	ldur	x8, [x29, #-88]
    f89c:	cmp	x25, x8
    f8a0:	csel	x8, x3, x25, eq  // eq = none
    f8a4:	ldrb	w8, [x8]
    f8a8:	b	faac <xre_match@@Base+0xbc4>
    f8ac:	ldrb	w9, [x26, #1]
    f8b0:	ldrsb	x10, [x26, #2]
    f8b4:	add	x8, x26, #0x3
    f8b8:	mov	x12, x8
    f8bc:	bfi	x9, x10, #8, #56
    f8c0:	b	f8c8 <xre_match@@Base+0x9e0>
    f8c4:	add	x12, x10, #0x3
    f8c8:	add	x11, x12, #0x2
    f8cc:	mov	x10, x12
    f8d0:	cmp	x11, x16
    f8d4:	b.cs	f8e8 <xre_match@@Base+0xa00>  // b.hs, b.nlast
    f8d8:	ldrb	w12, [x10]
    f8dc:	and	w12, w12, #0xfe
    f8e0:	cmp	w12, #0x6
    f8e4:	b.eq	f8c4 <xre_match@@Base+0x9dc>  // b.none
    f8e8:	add	x12, x10, #0x6
    f8ec:	cmp	x12, x16
    f8f0:	b.cs	f900 <xre_match@@Base+0xa18>  // b.hs, b.nlast
    f8f4:	ldrb	w13, [x10]
    f8f8:	cmp	w13, #0x13
    f8fc:	b.eq	f8c8 <xre_match@@Base+0x9e0>  // b.none
    f900:	add	x8, x8, x9
    f904:	cmp	x10, x16
    f908:	stur	x8, [x29, #-16]
    f90c:	b.eq	10478 <xre_match@@Base+0x1590>  // b.none
    f910:	ldrb	w12, [x10]
    f914:	cmp	w12, #0x2
    f918:	b.ne	102a4 <xre_match@@Base+0x13bc>  // b.any
    f91c:	ldrb	w9, [x11]
    f920:	b	102bc <xre_match@@Base+0x13d4>
    f924:	sub	x9, x5, x21
    f928:	sub	x8, x29, #0x28
    f92c:	add	x9, x9, x9, lsl #1
    f930:	stur	x15, [x8, #-256]
    f934:	sub	w8, w18, w27
    f938:	add	x9, x9, #0x7
    f93c:	cmp	x9, x8
    f940:	stur	x9, [x29, #-232]
    f944:	b.ls	f9c8 <xre_match@@Base+0xae0>  // b.plast
    f948:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    f94c:	ldr	x8, [x8, #3952]
    f950:	mov	w9, #0x13                  	// #19
    f954:	mov	x1, x24
    f958:	ldr	w8, [x8]
    f95c:	mul	w8, w8, w9
    f960:	sub	x9, x29, #0x8
    f964:	stur	w8, [x9, #-256]
    f968:	mov	w8, w18
    f96c:	sub	x9, x29, #0x8
    f970:	ldur	w9, [x9, #-256]
    f974:	cmp	w8, w9
    f978:	b.hi	10a90 <xre_match@@Base+0x1ba8>  // b.pmore
    f97c:	lsl	w26, w8, #1
    f980:	sub	x24, sp, w26, uxtw #3
    f984:	mov	sp, x24
    f988:	mov	w8, w8
    f98c:	lsl	x2, x8, #3
    f990:	mov	x0, x24
    f994:	mov	x20, x5
    f998:	mov	x23, x12
    f99c:	bl	4fb0 <memcpy@plt>
    f9a0:	ldur	x9, [x29, #-232]
    f9a4:	ldp	x3, x16, [x29, #-80]
    f9a8:	sub	w8, w26, w27
    f9ac:	mov	x12, x23
    f9b0:	mov	x5, x20
    f9b4:	mov	w18, w26
    f9b8:	cmp	x9, x8
    f9bc:	mov	w8, w26
    f9c0:	mov	x1, x24
    f9c4:	b.hi	f96c <xre_match@@Base+0xa84>  // b.pmore
    f9c8:	mov	x13, x12
    f9cc:	cmp	x5, x21
    f9d0:	mov	x8, x21
    f9d4:	b.cc	fa0c <xre_match@@Base+0xb24>  // b.lo, b.ul, b.last
    f9d8:	lsl	x9, x8, #3
    f9dc:	ldr	x10, [x19, x9]
    f9e0:	add	w11, w27, #0x1
    f9e4:	add	x8, x8, #0x1
    f9e8:	add	w12, w27, #0x2
    f9ec:	str	x10, [x24, w27, uxtw #3]
    f9f0:	ldr	x10, [x28, x9]
    f9f4:	add	w27, w27, #0x3
    f9f8:	cmp	x8, x5
    f9fc:	str	x10, [x24, w11, uxtw #3]
    fa00:	ldr	x9, [x22, x9]
    fa04:	str	x9, [x24, w12, uxtw #3]
    fa08:	b.ls	f9d8 <xre_match@@Base+0xaf0>  // b.plast
    fa0c:	add	w8, w27, #0x1
    fa10:	mov	w9, w27
    fa14:	lsl	x9, x9, #3
    fa18:	lsl	x8, x8, #3
    fa1c:	str	w21, [x24, x9]
    fa20:	str	w5, [x24, x8]
    fa24:	sub	x8, x29, #0x28
    fa28:	ldur	x30, [x29, #-224]
    fa2c:	ldur	x6, [x29, #-136]
    fa30:	ldur	x15, [x8, #-256]
    fa34:	add	w10, w27, #0x2
    fa38:	add	w11, w27, #0x3
    fa3c:	add	w27, w27, #0x4
    fa40:	str	xzr, [x24, w10, uxtw #3]
    fa44:	str	xzr, [x24, w11, uxtw #3]
    fa48:	mov	x23, x25
    fa4c:	mov	x12, x13
    fa50:	b	f394 <xre_match@@Base+0x4ac>
    fa54:	ldrb	w8, [x26, #3]
    fa58:	ldrsb	w9, [x26, #4]
    fa5c:	bfi	w8, w9, #8, #24
    fa60:	subs	w9, w8, #0x1
    fa64:	b.lt	10218 <xre_match@@Base+0x1330>  // b.tstop
    fa68:	sturh	w9, [x26, #3]
    fa6c:	b	fa8c <xre_match@@Base+0xba4>
    fa70:	ldrb	w8, [x26, #3]
    fa74:	ldrsb	w9, [x26, #4]
    fa78:	bfi	w8, w9, #8, #24
    fa7c:	cbz	w8, fa8c <xre_match@@Base+0xba4>
    fa80:	sub	w8, w8, #0x1
    fa84:	sturh	w8, [x26, #3]
    fa88:	b	f37c <xre_match@@Base+0x494>
    fa8c:	add	x12, x26, #0x5
    fa90:	b	f390 <xre_match@@Base+0x4a8>
    fa94:	ldur	w8, [x29, #-204]
    fa98:	cbz	w8, 101f4 <xre_match@@Base+0x130c>
    fa9c:	ldur	x8, [x29, #-240]
    faa0:	cmp	x25, x8
    faa4:	b.eq	101f4 <xre_match@@Base+0x130c>  // b.none
    faa8:	ldurb	w8, [x25, #-1]
    faac:	cmp	w8, #0xa
    fab0:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
    fab4:	ldur	x8, [x29, #-176]
    fab8:	mov	x23, x25
    fabc:	ldrsb	w8, [x8, #56]
    fac0:	tbnz	w8, #31, f394 <xre_match@@Base+0x4ac>
    fac4:	b	1070c <xre_match@@Base+0x1824>
    fac8:	ldur	w8, [x29, #-204]
    facc:	cbz	w8, f390 <xre_match@@Base+0x4a8>
    fad0:	ldur	x8, [x29, #-240]
    fad4:	mov	x23, x25
    fad8:	cmp	x25, x8
    fadc:	b.eq	f394 <xre_match@@Base+0x4ac>  // b.none
    fae0:	b	1070c <xre_match@@Base+0x1824>
    fae4:	sub	x8, x29, #0x28
    fae8:	stur	x15, [x8, #-256]
    faec:	ldrb	w8, [x26, #1]
    faf0:	sub	x9, x29, #0x98
    faf4:	stur	x8, [x9, #-256]
    faf8:	ldrsb	x8, [x26, #2]
    fafc:	sub	x9, x29, #0xa0
    fb00:	stur	x8, [x9, #-256]
    fb04:	sub	x9, x5, x21
    fb08:	add	x9, x9, x9, lsl #1
    fb0c:	sub	w8, w18, w27
    fb10:	add	x9, x9, #0x7
    fb14:	cmp	x9, x8
    fb18:	stur	x9, [x29, #-232]
    fb1c:	b.ls	fb98 <xre_match@@Base+0xcb0>  // b.plast
    fb20:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    fb24:	ldr	x8, [x8, #3952]
    fb28:	mov	w9, #0x13                  	// #19
    fb2c:	mov	x1, x24
    fb30:	ldr	w8, [x8]
    fb34:	mul	w8, w8, w9
    fb38:	sub	x9, x29, #0x8
    fb3c:	stur	w8, [x9, #-256]
    fb40:	mov	w8, w18
    fb44:	sub	x9, x29, #0x8
    fb48:	ldur	w9, [x9, #-256]
    fb4c:	cmp	w8, w9
    fb50:	b.hi	10a90 <xre_match@@Base+0x1ba8>  // b.pmore
    fb54:	lsl	w23, w8, #1
    fb58:	sub	x24, sp, w23, uxtw #3
    fb5c:	mov	sp, x24
    fb60:	mov	w8, w8
    fb64:	lsl	x2, x8, #3
    fb68:	mov	x0, x24
    fb6c:	mov	x20, x5
    fb70:	bl	4fb0 <memcpy@plt>
    fb74:	ldur	x9, [x29, #-232]
    fb78:	ldp	x3, x16, [x29, #-80]
    fb7c:	sub	w8, w23, w27
    fb80:	mov	x5, x20
    fb84:	mov	w18, w23
    fb88:	cmp	x9, x8
    fb8c:	mov	w8, w23
    fb90:	mov	x1, x24
    fb94:	b.hi	fb44 <xre_match@@Base+0xc5c>  // b.pmore
    fb98:	sub	x8, x29, #0x98
    fb9c:	ldur	x14, [x8, #-256]
    fba0:	sub	x8, x29, #0xa0
    fba4:	ldur	x8, [x8, #-256]
    fba8:	cmp	x5, x21
    fbac:	add	x13, x26, #0x3
    fbb0:	bfi	x14, x8, #8, #56
    fbb4:	mov	x8, x21
    fbb8:	b.cc	fbf0 <xre_match@@Base+0xd08>  // b.lo, b.ul, b.last
    fbbc:	lsl	x9, x8, #3
    fbc0:	ldr	x10, [x19, x9]
    fbc4:	add	w11, w27, #0x1
    fbc8:	add	x8, x8, #0x1
    fbcc:	add	w12, w27, #0x2
    fbd0:	str	x10, [x24, w27, uxtw #3]
    fbd4:	ldr	x10, [x28, x9]
    fbd8:	add	w27, w27, #0x3
    fbdc:	cmp	x8, x5
    fbe0:	str	x10, [x24, w11, uxtw #3]
    fbe4:	ldr	x9, [x22, x9]
    fbe8:	str	x9, [x24, w12, uxtw #3]
    fbec:	b.ls	fbbc <xre_match@@Base+0xcd4>  // b.plast
    fbf0:	add	w8, w27, #0x1
    fbf4:	mov	w9, w27
    fbf8:	add	w10, w27, #0x2
    fbfc:	add	x11, x13, x14
    fc00:	add	w12, w27, #0x3
    fc04:	add	w27, w27, #0x4
    fc08:	lsl	x9, x9, #3
    fc0c:	lsl	x8, x8, #3
    fc10:	str	w21, [x24, x9]
    fc14:	str	w5, [x24, x8]
    fc18:	str	x11, [x24, w10, uxtw #3]
    fc1c:	str	xzr, [x24, w12, uxtw #3]
    fc20:	b	1041c <xre_match@@Base+0x1534>
    fc24:	sub	x9, x5, x21
    fc28:	sub	x8, x29, #0x28
    fc2c:	add	x9, x9, x9, lsl #1
    fc30:	stur	x25, [x8, #-256]
    fc34:	sub	w8, w18, w27
    fc38:	add	x9, x9, #0x7
    fc3c:	cmp	x9, x8
    fc40:	stur	x9, [x29, #-232]
    fc44:	b.ls	fccc <xre_match@@Base+0xde4>  // b.plast
    fc48:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
    fc4c:	ldr	x8, [x8, #3952]
    fc50:	mov	w9, #0x13                  	// #19
    fc54:	mov	x1, x24
    fc58:	ldr	w8, [x8]
    fc5c:	mul	w8, w8, w9
    fc60:	sub	x9, x29, #0x8
    fc64:	stur	w8, [x9, #-256]
    fc68:	mov	w8, w18
    fc6c:	sub	x9, x29, #0x8
    fc70:	ldur	w9, [x9, #-256]
    fc74:	cmp	w8, w9
    fc78:	b.hi	10a90 <xre_match@@Base+0x1ba8>  // b.pmore
    fc7c:	lsl	w23, w8, #1
    fc80:	sub	x24, sp, w23, uxtw #3
    fc84:	mov	sp, x24
    fc88:	mov	w8, w8
    fc8c:	lsl	x2, x8, #3
    fc90:	mov	x0, x24
    fc94:	mov	x20, x5
    fc98:	mov	x25, x15
    fc9c:	bl	4fb0 <memcpy@plt>
    fca0:	ldur	x9, [x29, #-232]
    fca4:	ldur	x6, [x29, #-136]
    fca8:	ldp	x3, x16, [x29, #-80]
    fcac:	sub	w8, w23, w27
    fcb0:	mov	x15, x25
    fcb4:	mov	x5, x20
    fcb8:	mov	w18, w23
    fcbc:	cmp	x9, x8
    fcc0:	mov	w8, w23
    fcc4:	mov	x1, x24
    fcc8:	b.hi	fc6c <xre_match@@Base+0xd84>  // b.pmore
    fccc:	ldur	x30, [x29, #-224]
    fcd0:	cmp	x5, x21
    fcd4:	mov	x8, x21
    fcd8:	b.cc	fd10 <xre_match@@Base+0xe28>  // b.lo, b.ul, b.last
    fcdc:	lsl	x9, x8, #3
    fce0:	ldr	x10, [x19, x9]
    fce4:	add	w11, w27, #0x1
    fce8:	add	x8, x8, #0x1
    fcec:	add	w12, w27, #0x2
    fcf0:	str	x10, [x24, w27, uxtw #3]
    fcf4:	ldr	x10, [x28, x9]
    fcf8:	add	w27, w27, #0x3
    fcfc:	cmp	x8, x5
    fd00:	str	x10, [x24, w11, uxtw #3]
    fd04:	ldr	x9, [x22, x9]
    fd08:	str	x9, [x24, w12, uxtw #3]
    fd0c:	b.ls	fcdc <xre_match@@Base+0xdf4>  // b.plast
    fd10:	add	w8, w27, #0x1
    fd14:	mov	w9, w27
    fd18:	lsl	x9, x9, #3
    fd1c:	lsl	x8, x8, #3
    fd20:	str	w21, [x24, x9]
    fd24:	str	w5, [x24, x8]
    fd28:	sub	x8, x29, #0x28
    fd2c:	ldur	x25, [x8, #-256]
    fd30:	add	w10, w27, #0x2
    fd34:	add	w11, w27, #0x3
    fd38:	add	w27, w27, #0x4
    fd3c:	str	xzr, [x24, w10, uxtw #3]
    fd40:	str	xzr, [x24, w11, uxtw #3]
    fd44:	b	f37c <xre_match@@Base+0x494>
    fd48:	ldrb	w8, [x26, #1]
    fd4c:	ldrsb	x9, [x26, #2]
    fd50:	add	x12, x26, #0x5
    fd54:	bfi	x8, x9, #8, #56
    fd58:	add	x9, x26, #0x3
    fd5c:	add	x10, x9, x8
    fd60:	stur	x10, [x29, #-16]
    fd64:	ldrb	w10, [x26, #3]
    fd68:	ldrb	w11, [x26, #4]
    fd6c:	strb	w10, [x9, x8]
    fd70:	ldur	x8, [x29, #-16]
    fd74:	strb	w11, [x8, #1]
    fd78:	b	f390 <xre_match@@Base+0x4a8>
    fd7c:	ldur	x8, [x29, #-200]
    fd80:	cmp	x25, x8
    fd84:	b.eq	f390 <xre_match@@Base+0x4a8>  // b.none
    fd88:	ldur	w8, [x29, #-204]
    fd8c:	cbz	w8, f390 <xre_match@@Base+0x4a8>
    fd90:	ldur	x8, [x29, #-240]
    fd94:	cmp	x25, x8
    fd98:	b.eq	f390 <xre_match@@Base+0x4a8>  // b.none
    fd9c:	mov	x13, x12
    fda0:	ldur	x12, [x29, #-216]
    fda4:	ldur	x11, [x29, #-88]
    fda8:	sub	x8, x25, #0x1
    fdac:	cmp	x25, x3
    fdb0:	csel	x9, x12, x8, eq  // eq = none
    fdb4:	cmp	x8, x11
    fdb8:	csel	x8, x3, x9, eq  // eq = none
    fdbc:	ldrb	w8, [x8]
    fdc0:	adrp	x9, 2b000 <xexit@@Base+0x154dc>
    fdc4:	add	x9, x9, #0x5f8
    fdc8:	ldur	x10, [x29, #-256]
    fdcc:	ldrb	w8, [x9, x8]
    fdd0:	mov	x23, x25
    fdd4:	cmp	w8, #0x1
    fdd8:	cset	w8, eq  // eq = none
    fddc:	cmp	x25, x10
    fde0:	csel	x10, x12, x25, eq  // eq = none
    fde4:	cmp	x25, x11
    fde8:	csel	x10, x3, x10, eq  // eq = none
    fdec:	ldrb	w10, [x10]
    fdf0:	mov	x12, x13
    fdf4:	ldrb	w9, [x9, x10]
    fdf8:	cmp	w9, #0x1
    fdfc:	cset	w9, eq  // eq = none
    fe00:	eor	w8, w8, w9
    fe04:	tbnz	w8, #0, f394 <xre_match@@Base+0x4ac>
    fe08:	b	1070c <xre_match@@Base+0x1824>
    fe0c:	ldur	x8, [x29, #-200]
    fe10:	cmp	x25, x8
    fe14:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
    fe18:	ldur	w8, [x29, #-204]
    fe1c:	cbz	w8, 1070c <xre_match@@Base+0x1824>
    fe20:	ldur	x8, [x29, #-240]
    fe24:	cmp	x25, x8
    fe28:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
    fe2c:	mov	x13, x12
    fe30:	ldur	x12, [x29, #-216]
    fe34:	ldur	x11, [x29, #-88]
    fe38:	sub	x8, x25, #0x1
    fe3c:	cmp	x25, x3
    fe40:	csel	x9, x12, x8, eq  // eq = none
    fe44:	cmp	x8, x11
    fe48:	csel	x8, x3, x9, eq  // eq = none
    fe4c:	ldrb	w8, [x8]
    fe50:	adrp	x9, 2b000 <xexit@@Base+0x154dc>
    fe54:	add	x9, x9, #0x5f8
    fe58:	ldur	x10, [x29, #-256]
    fe5c:	ldrb	w8, [x9, x8]
    fe60:	mov	x23, x25
    fe64:	cmp	w8, #0x1
    fe68:	cset	w8, eq  // eq = none
    fe6c:	cmp	x25, x10
    fe70:	csel	x10, x12, x25, eq  // eq = none
    fe74:	cmp	x25, x11
    fe78:	csel	x10, x3, x10, eq  // eq = none
    fe7c:	ldrb	w10, [x10]
    fe80:	mov	x12, x13
    fe84:	ldrb	w9, [x9, x10]
    fe88:	cmp	w9, #0x1
    fe8c:	cset	w9, eq  // eq = none
    fe90:	eor	w8, w8, w9
    fe94:	tbz	w8, #0, f394 <xre_match@@Base+0x4ac>
    fe98:	b	1070c <xre_match@@Base+0x1824>
    fe9c:	ldur	x8, [x29, #-200]
    fea0:	cmp	x25, x8
    fea4:	b.eq	10800 <xre_match@@Base+0x1918>  // b.none
    fea8:	ldur	x8, [x29, #-256]
    feac:	ldur	x11, [x29, #-88]
    feb0:	cmp	x25, x8
    feb4:	ldur	x8, [x29, #-216]
    feb8:	csel	x8, x8, x25, eq  // eq = none
    febc:	cmp	x25, x11
    fec0:	csel	x8, x3, x8, eq  // eq = none
    fec4:	ldrb	w9, [x8]
    fec8:	adrp	x8, 2b000 <xexit@@Base+0x154dc>
    fecc:	add	x8, x8, #0x5f8
    fed0:	ldrb	w9, [x8, x9]
    fed4:	cmp	w9, #0x1
    fed8:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
    fedc:	ldur	w9, [x29, #-204]
    fee0:	cbz	w9, f390 <xre_match@@Base+0x4a8>
    fee4:	ldur	x9, [x29, #-240]
    fee8:	cmp	x25, x9
    feec:	b.eq	f390 <xre_match@@Base+0x4a8>  // b.none
    fef0:	ldur	x10, [x29, #-216]
    fef4:	sub	x9, x25, #0x1
    fef8:	cmp	x25, x3
    fefc:	csel	x10, x10, x9, eq  // eq = none
    ff00:	cmp	x9, x11
    ff04:	csel	x9, x3, x10, eq  // eq = none
    ff08:	b	ff78 <xre_match@@Base+0x1090>
    ff0c:	ldur	w8, [x29, #-204]
    ff10:	cbz	w8, 1070c <xre_match@@Base+0x1824>
    ff14:	ldur	x8, [x29, #-240]
    ff18:	cmp	x25, x8
    ff1c:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
    ff20:	ldur	x9, [x29, #-216]
    ff24:	ldur	x10, [x29, #-88]
    ff28:	sub	x8, x25, #0x1
    ff2c:	cmp	x25, x3
    ff30:	csel	x9, x9, x8, eq  // eq = none
    ff34:	cmp	x8, x10
    ff38:	csel	x8, x3, x9, eq  // eq = none
    ff3c:	ldrb	w9, [x8]
    ff40:	adrp	x8, 2b000 <xexit@@Base+0x154dc>
    ff44:	add	x8, x8, #0x5f8
    ff48:	ldrb	w9, [x8, x9]
    ff4c:	cmp	w9, #0x1
    ff50:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
    ff54:	ldur	x23, [x29, #-200]
    ff58:	cmp	x25, x23
    ff5c:	b.eq	f394 <xre_match@@Base+0x4ac>  // b.none
    ff60:	ldur	x9, [x29, #-256]
    ff64:	cmp	x25, x9
    ff68:	ldur	x9, [x29, #-216]
    ff6c:	csel	x9, x9, x25, eq  // eq = none
    ff70:	cmp	x25, x10
    ff74:	csel	x9, x3, x9, eq  // eq = none
    ff78:	ldrb	w9, [x9]
    ff7c:	mov	x23, x25
    ff80:	ldrb	w8, [x8, x9]
    ff84:	cmp	w8, #0x1
    ff88:	b.ne	f394 <xre_match@@Base+0x4ac>  // b.any
    ff8c:	b	1070c <xre_match@@Base+0x1824>
    ff90:	mov	x13, x12
    ff94:	cbz	w9, 1070c <xre_match@@Base+0x1824>
    ff98:	add	x8, x10, x13
    ff9c:	add	x12, x8, #0x1
    ffa0:	ldur	w8, [x29, #-112]
    ffa4:	cbnz	w8, 1011c <xre_match@@Base+0x1234>
    ffa8:	cmp	x5, x21
    ffac:	b.cc	10118 <xre_match@@Base+0x1230>  // b.lo, b.ul, b.last
    ffb0:	add	x8, x22, x21, lsl #3
    ffb4:	mov	x9, x21
    ffb8:	ldrb	w10, [x8]
    ffbc:	add	x9, x9, #0x1
    ffc0:	cmp	x9, x5
    ffc4:	orr	w10, w10, #0x18
    ffc8:	strb	w10, [x8], #8
    ffcc:	b.ls	ffb8 <xre_match@@Base+0x10d0>  // b.plast
    ffd0:	b	10118 <xre_match@@Base+0x1230>
    ffd4:	ldur	x8, [x29, #-256]
    ffd8:	cmp	x25, x8
    ffdc:	ldur	x8, [x29, #-216]
    ffe0:	csel	x8, x8, x25, eq  // eq = none
    ffe4:	cmp	x25, x9
    ffe8:	csel	x8, x3, x8, eq  // eq = none
    ffec:	ldrb	w8, [x8]
    fff0:	adrp	x9, 2b000 <xexit@@Base+0x154dc>
    fff4:	add	x9, x9, #0x5f8
    fff8:	ldrb	w8, [x9, x8]
    fffc:	cmp	w8, #0x1
   10000:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
   10004:	ldur	w8, [x29, #-112]
   10008:	cbnz	w8, 1011c <xre_match@@Base+0x1234>
   1000c:	cmp	x5, x21
   10010:	b.cc	10118 <xre_match@@Base+0x1230>  // b.lo, b.ul, b.last
   10014:	add	x8, x22, x21, lsl #3
   10018:	mov	x9, x21
   1001c:	ldrb	w10, [x8]
   10020:	add	x9, x9, #0x1
   10024:	cmp	x9, x5
   10028:	orr	w10, w10, #0x18
   1002c:	strb	w10, [x8], #8
   10030:	b.ls	1001c <xre_match@@Base+0x1134>  // b.plast
   10034:	b	10118 <xre_match@@Base+0x1230>
   10038:	ldur	x8, [x29, #-256]
   1003c:	cmp	x25, x8
   10040:	ldur	x8, [x29, #-216]
   10044:	csel	x8, x8, x25, eq  // eq = none
   10048:	cmp	x25, x9
   1004c:	csel	x8, x3, x8, eq  // eq = none
   10050:	ldrb	w8, [x8]
   10054:	adrp	x9, 2b000 <xexit@@Base+0x154dc>
   10058:	add	x9, x9, #0x5f8
   1005c:	ldrb	w8, [x9, x8]
   10060:	cmp	w8, #0x1
   10064:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
   10068:	ldur	w8, [x29, #-112]
   1006c:	cbnz	w8, 1011c <xre_match@@Base+0x1234>
   10070:	cmp	x5, x21
   10074:	b.cc	10118 <xre_match@@Base+0x1230>  // b.lo, b.ul, b.last
   10078:	add	x8, x22, x21, lsl #3
   1007c:	mov	x9, x21
   10080:	ldrb	w10, [x8]
   10084:	add	x9, x9, #0x1
   10088:	cmp	x9, x5
   1008c:	orr	w10, w10, #0x18
   10090:	strb	w10, [x8], #8
   10094:	b.ls	10080 <xre_match@@Base+0x1198>  // b.plast
   10098:	b	10118 <xre_match@@Base+0x1230>
   1009c:	ldur	x8, [x29, #-176]
   100a0:	ldr	x8, [x8, #24]
   100a4:	tbnz	w8, #6, 100c8 <xre_match@@Base+0x11e0>
   100a8:	ldur	x10, [x29, #-160]
   100ac:	mov	x9, x25
   100b0:	cbz	x10, 100bc <xre_match@@Base+0x11d4>
   100b4:	ldrb	w9, [x25]
   100b8:	add	x9, x10, x9
   100bc:	ldrb	w9, [x9]
   100c0:	cmp	w9, #0xa
   100c4:	b.eq	1070c <xre_match@@Base+0x1824>  // b.none
   100c8:	tbz	w8, #7, 100e8 <xre_match@@Base+0x1200>
   100cc:	ldur	x9, [x29, #-160]
   100d0:	mov	x8, x25
   100d4:	cbz	x9, 100e0 <xre_match@@Base+0x11f8>
   100d8:	ldrb	w8, [x25]
   100dc:	add	x8, x9, x8
   100e0:	ldrb	w8, [x8]
   100e4:	cbz	w8, 1070c <xre_match@@Base+0x1824>
   100e8:	ldur	w8, [x29, #-112]
   100ec:	cbnz	w8, 1011c <xre_match@@Base+0x1234>
   100f0:	cmp	x5, x21
   100f4:	b.cc	10118 <xre_match@@Base+0x1230>  // b.lo, b.ul, b.last
   100f8:	add	x8, x22, x21, lsl #3
   100fc:	mov	x9, x21
   10100:	ldrb	w10, [x8]
   10104:	add	x9, x9, #0x1
   10108:	cmp	x9, x5
   1010c:	orr	w10, w10, #0x18
   10110:	strb	w10, [x8], #8
   10114:	b.ls	10100 <xre_match@@Base+0x1218>  // b.plast
   10118:	mov	w8, #0x1                   	// #1
   1011c:	stur	w8, [x29, #-112]
   10120:	add	x23, x25, #0x1
   10124:	b	f394 <xre_match@@Base+0x4ac>
   10128:	mov	w9, w8
   1012c:	sub	w9, w9, #0x1
   10130:	tst	w9, #0xff
   10134:	b.eq	f4ac <xre_match@@Base+0x5c4>  // b.none
   10138:	and	x5, x9, #0xff
   1013c:	lsl	x10, x5, #3
   10140:	ldrb	w10, [x22, x10]
   10144:	tbz	w10, #2, 1012c <xre_match@@Base+0x1244>
   10148:	sub	x9, x29, #0x20
   1014c:	ldur	x9, [x9, #-256]
   10150:	cmp	x9, x26
   10154:	b.eq	10164 <xre_match@@Base+0x127c>  // b.none
   10158:	lsl	x8, x8, #3
   1015c:	ldrb	w8, [x22, x8]
   10160:	tbnz	w8, #3, 101e8 <xre_match@@Base+0x1300>
   10164:	add	x8, x26, #0x3
   10168:	cmp	x8, x16
   1016c:	b.cs	101e8 <xre_match@@Base+0x1300>  // b.hs, b.nlast
   10170:	add	x8, x26, #0x4
   10174:	stur	x8, [x29, #-16]
   10178:	ldrb	w8, [x26, #3]
   1017c:	sub	w8, w8, #0xd
   10180:	cmp	w8, #0x9
   10184:	b.hi	101e8 <xre_match@@Base+0x1300>  // b.pmore
   10188:	mov	w9, #0x271                 	// #625
   1018c:	lsr	w9, w9, w8
   10190:	tbz	w9, #0, 101e8 <xre_match@@Base+0x1300>
   10194:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   10198:	sxtb	x8, w8
   1019c:	add	x9, x9, #0x790
   101a0:	ldrb	w10, [x26, #4]
   101a4:	ldrsb	x11, [x26, #5]
   101a8:	ldr	x8, [x9, x8, lsl #3]
   101ac:	bfi	x10, x11, #8, #56
   101b0:	add	x8, x26, x8
   101b4:	add	x8, x8, x10
   101b8:	stur	x8, [x29, #-16]
   101bc:	tbz	w10, #31, 101e8 <xre_match@@Base+0x1300>
   101c0:	ldrb	w9, [x8]
   101c4:	cmp	w9, #0xf
   101c8:	b.ne	101e8 <xre_match@@Base+0x1300>  // b.any
   101cc:	ldrb	w9, [x8, #3]
   101d0:	cmp	w9, #0x6
   101d4:	b.ne	101e8 <xre_match@@Base+0x1300>  // b.any
   101d8:	ldrb	w9, [x8, #4]
   101dc:	ldrb	w10, [x12]
   101e0:	cmp	w9, w10
   101e4:	b.eq	10810 <xre_match@@Base+0x1928>  // b.none
   101e8:	add	x12, x26, #0x3
   101ec:	stur	wzr, [x29, #-112]
   101f0:	b	f390 <xre_match@@Base+0x4a8>
   101f4:	ldur	x8, [x29, #-176]
   101f8:	mov	x23, x25
   101fc:	ldrb	w8, [x8, #56]
   10200:	tbz	w8, #5, f394 <xre_match@@Base+0x4ac>
   10204:	b	1070c <xre_match@@Base+0x1824>
   10208:	ldur	x8, [x29, #-176]
   1020c:	ldrb	w8, [x8, #56]
   10210:	tbz	w8, #6, f394 <xre_match@@Base+0x4ac>
   10214:	b	10808 <xre_match@@Base+0x1920>
   10218:	cbnz	w8, f390 <xre_match@@Base+0x4a8>
   1021c:	sturh	wzr, [x26, #3]
   10220:	ldrb	w11, [x26, #1]
   10224:	ldrsb	x8, [x26, #2]
   10228:	add	x10, x26, #0x3
   1022c:	sub	x9, x29, #0xa0
   10230:	cmp	x10, x16
   10234:	stur	x8, [x9, #-256]
   10238:	stur	x10, [x29, #-16]
   1023c:	b.cs	102f4 <xre_match@@Base+0x140c>  // b.hs, b.nlast
   10240:	mov	x8, x10
   10244:	ldrb	w9, [x8]
   10248:	cbnz	w9, 102d8 <xre_match@@Base+0x13f0>
   1024c:	add	x8, x8, #0x1
   10250:	cmp	x16, x8
   10254:	stur	x8, [x29, #-16]
   10258:	b.ne	10244 <xre_match@@Base+0x135c>  // b.any
   1025c:	b	102f4 <xre_match@@Base+0x140c>
   10260:	ldrb	w10, [x25], #1
   10264:	ldrb	w12, [x9]
   10268:	cmp	w10, w12
   1026c:	b.ne	1070c <xre_match@@Base+0x1824>  // b.any
   10270:	subs	w11, w11, #0x1
   10274:	add	x9, x9, #0x1
   10278:	b.eq	f560 <xre_match@@Base+0x678>  // b.none
   1027c:	cmp	x25, x15
   10280:	b.ne	10260 <xre_match@@Base+0x1378>  // b.any
   10284:	cmp	x15, x6
   10288:	mov	x15, x6
   1028c:	mov	x25, x3
   10290:	b.ne	1027c <xre_match@@Base+0x1394>  // b.any
   10294:	b	10648 <xre_match@@Base+0x1760>
   10298:	ldur	x26, [x29, #-104]
   1029c:	tbz	w9, #0, f720 <xre_match@@Base+0x838>
   102a0:	b	f724 <xre_match@@Base+0x83c>
   102a4:	cmp	w12, #0xa
   102a8:	b.ne	10484 <xre_match@@Base+0x159c>  // b.any
   102ac:	ldur	x11, [x29, #-176]
   102b0:	ldrsb	w11, [x11, #56]
   102b4:	tbz	w11, #31, 10484 <xre_match@@Base+0x159c>
   102b8:	mov	w9, #0xa                   	// #10
   102bc:	ldrb	w10, [x8, #3]
   102c0:	cmp	w10, #0x2
   102c4:	b.ne	10434 <xre_match@@Base+0x154c>  // b.any
   102c8:	ldrb	w8, [x8, #5]
   102cc:	cmp	w8, w9
   102d0:	b.ne	10478 <xre_match@@Base+0x1590>  // b.any
   102d4:	b	105b4 <xre_match@@Base+0x16cc>
   102d8:	cmp	w9, #0x6
   102dc:	b.ne	102f4 <xre_match@@Base+0x140c>  // b.any
   102e0:	ldrb	w9, [x8, #1]
   102e4:	ldrb	w8, [x8, #2]
   102e8:	cmp	x21, #0x101
   102ec:	csel	x21, x9, x21, eq  // eq = none
   102f0:	add	x5, x8, x9
   102f4:	sub	x8, x29, #0x98
   102f8:	stur	x11, [x8, #-256]
   102fc:	sub	x8, x29, #0x8
   10300:	sub	x9, x5, x21
   10304:	stur	x10, [x8, #-256]
   10308:	sub	x8, x29, #0x28
   1030c:	add	x9, x9, x9, lsl #1
   10310:	stur	x15, [x8, #-256]
   10314:	sub	w8, w18, w27
   10318:	add	x26, x9, #0x7
   1031c:	cmp	x26, x8
   10320:	b.ls	10390 <xre_match@@Base+0x14a8>  // b.plast
   10324:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   10328:	ldr	x8, [x8, #3952]
   1032c:	mov	w9, #0x13                  	// #19
   10330:	mov	x1, x24
   10334:	ldr	w8, [x8]
   10338:	mul	w8, w8, w9
   1033c:	stur	w8, [x29, #-232]
   10340:	mov	w8, w18
   10344:	ldur	w9, [x29, #-232]
   10348:	cmp	w8, w9
   1034c:	b.hi	10a90 <xre_match@@Base+0x1ba8>  // b.pmore
   10350:	lsl	w23, w8, #1
   10354:	sub	x24, sp, w23, uxtw #3
   10358:	mov	sp, x24
   1035c:	mov	w8, w8
   10360:	lsl	x2, x8, #3
   10364:	mov	x0, x24
   10368:	mov	x20, x5
   1036c:	bl	4fb0 <memcpy@plt>
   10370:	ldp	x3, x16, [x29, #-80]
   10374:	sub	w8, w23, w27
   10378:	mov	x5, x20
   1037c:	mov	w18, w23
   10380:	cmp	x26, x8
   10384:	mov	w8, w23
   10388:	mov	x1, x24
   1038c:	b.hi	10344 <xre_match@@Base+0x145c>  // b.pmore
   10390:	sub	x8, x29, #0x98
   10394:	ldur	x14, [x8, #-256]
   10398:	sub	x8, x29, #0xa0
   1039c:	ldur	x8, [x8, #-256]
   103a0:	cmp	x5, x21
   103a4:	bfi	x14, x8, #8, #56
   103a8:	mov	x8, x21
   103ac:	b.cc	103e4 <xre_match@@Base+0x14fc>  // b.lo, b.ul, b.last
   103b0:	lsl	x9, x8, #3
   103b4:	ldr	x10, [x19, x9]
   103b8:	add	w11, w27, #0x1
   103bc:	add	x8, x8, #0x1
   103c0:	add	w12, w27, #0x2
   103c4:	str	x10, [x24, w27, uxtw #3]
   103c8:	ldr	x10, [x28, x9]
   103cc:	add	w27, w27, #0x3
   103d0:	cmp	x8, x5
   103d4:	str	x10, [x24, w11, uxtw #3]
   103d8:	ldr	x9, [x22, x9]
   103dc:	str	x9, [x24, w12, uxtw #3]
   103e0:	b.ls	103b0 <xre_match@@Base+0x14c8>  // b.plast
   103e4:	sub	x11, x29, #0x8
   103e8:	ldur	x13, [x11, #-256]
   103ec:	add	w8, w27, #0x1
   103f0:	mov	w9, w27
   103f4:	add	w10, w27, #0x2
   103f8:	add	x11, x13, x14
   103fc:	add	w12, w27, #0x3
   10400:	lsl	x9, x9, #3
   10404:	lsl	x8, x8, #3
   10408:	add	w27, w27, #0x4
   1040c:	str	w21, [x24, x9]
   10410:	str	w5, [x24, x8]
   10414:	str	x11, [x24, w10, uxtw #3]
   10418:	str	x25, [x24, w12, uxtw #3]
   1041c:	sub	x8, x29, #0x28
   10420:	ldur	x30, [x29, #-224]
   10424:	ldur	x6, [x29, #-136]
   10428:	ldur	x15, [x8, #-256]
   1042c:	mov	x12, x13
   10430:	b	f390 <xre_match@@Base+0x4a8>
   10434:	and	w11, w10, #0xfe
   10438:	cmp	w11, #0x4
   1043c:	b.ne	105b4 <xre_match@@Base+0x16cc>  // b.any
   10440:	ldrb	w12, [x8, #4]
   10444:	cmp	w10, #0x5
   10448:	cset	w11, eq  // eq = none
   1044c:	cmp	w9, w12, lsl #3
   10450:	b.cs	10474 <xre_match@@Base+0x158c>  // b.hs, b.nlast
   10454:	lsr	w12, w9, #3
   10458:	add	x8, x12, x8
   1045c:	ldrb	w8, [x8, #5]
   10460:	and	w9, w9, #0x7
   10464:	lsr	w8, w8, w9
   10468:	tbz	w8, #0, 10474 <xre_match@@Base+0x158c>
   1046c:	cmp	w10, #0x5
   10470:	cset	w11, ne  // ne = any
   10474:	cbnz	w11, 105b4 <xre_match@@Base+0x16cc>
   10478:	mov	w8, #0x11                  	// #17
   1047c:	strb	w8, [x26]
   10480:	b	105c0 <xre_match@@Base+0x16d8>
   10484:	cmp	w12, #0x4
   10488:	b.ne	105b4 <xre_match@@Base+0x16cc>  // b.any
   1048c:	ldrb	w11, [x8, #3]
   10490:	cmp	w11, #0x2
   10494:	b.eq	10508 <xre_match@@Base+0x1620>  // b.none
   10498:	cmp	w11, #0x5
   1049c:	b.eq	10530 <xre_match@@Base+0x1648>  // b.none
   104a0:	cmp	w11, #0x4
   104a4:	b.ne	105b4 <xre_match@@Base+0x16cc>  // b.any
   104a8:	ldrb	w11, [x10, #1]
   104ac:	cbz	w11, 10580 <xre_match@@Base+0x1698>
   104b0:	ldrb	w12, [x8, #4]
   104b4:	add	x9, x26, x9
   104b8:	mov	x13, xzr
   104bc:	add	x10, x10, #0x2
   104c0:	add	x9, x9, #0x8
   104c4:	cmp	x12, x13
   104c8:	b.eq	105a0 <xre_match@@Base+0x16b8>  // b.none
   104cc:	mov	x0, x15
   104d0:	ldrb	w14, [x10, x13]
   104d4:	ldrb	w15, [x9, x13]
   104d8:	tst	w15, w14
   104dc:	b.ne	10598 <xre_match@@Base+0x16b0>  // b.any
   104e0:	add	x13, x13, #0x1
   104e4:	cmp	x13, x11
   104e8:	mov	x15, x0
   104ec:	b.cc	104c4 <xre_match@@Base+0x15dc>  // b.lo, b.ul, b.last
   104f0:	mov	w12, w13
   104f4:	b	105a0 <xre_match@@Base+0x16b8>
   104f8:	sub	x8, x29, #0x8
   104fc:	ldur	x12, [x8, #-256]
   10500:	stur	w23, [x29, #-112]
   10504:	b	f390 <xre_match@@Base+0x4a8>
   10508:	ldrb	w9, [x10, #1]
   1050c:	ldrb	w8, [x8, #5]
   10510:	cmp	w8, w9, lsl #3
   10514:	b.cs	10478 <xre_match@@Base+0x1590>  // b.hs, b.nlast
   10518:	add	x9, x10, x8, lsr #3
   1051c:	ldrb	w9, [x9, #2]
   10520:	and	w8, w8, #0x7
   10524:	lsr	w8, w9, w8
   10528:	tbnz	w8, #0, 105b4 <xre_match@@Base+0x16cc>
   1052c:	b	10478 <xre_match@@Base+0x1590>
   10530:	ldrb	w11, [x10, #1]
   10534:	cbz	w11, 10588 <xre_match@@Base+0x16a0>
   10538:	add	x9, x26, x9
   1053c:	mov	x12, xzr
   10540:	add	x10, x10, #0x2
   10544:	add	x9, x9, #0x8
   10548:	b	10558 <xre_match@@Base+0x1670>
   1054c:	add	x12, x12, #0x1
   10550:	cmp	x12, x11
   10554:	b.cs	1058c <xre_match@@Base+0x16a4>  // b.hs, b.nlast
   10558:	ldrb	w13, [x10, x12]
   1055c:	cbz	w13, 1054c <xre_match@@Base+0x1664>
   10560:	ldrb	w14, [x8, #4]
   10564:	cmp	x12, x14
   10568:	b.cs	1058c <xre_match@@Base+0x16a4>  // b.hs, b.nlast
   1056c:	ldrb	w14, [x9, x12]
   10570:	eor	w14, w14, #0xff
   10574:	tst	w13, w14
   10578:	b.eq	1054c <xre_match@@Base+0x1664>  // b.none
   1057c:	b	1058c <xre_match@@Base+0x16a4>
   10580:	mov	w12, wzr
   10584:	b	105a0 <xre_match@@Base+0x16b8>
   10588:	mov	w12, wzr
   1058c:	cmp	w12, w11
   10590:	b.eq	10478 <xre_match@@Base+0x1590>  // b.none
   10594:	b	105b4 <xre_match@@Base+0x16cc>
   10598:	mov	w12, w13
   1059c:	mov	x15, x0
   105a0:	cmp	w12, w11
   105a4:	b.eq	10478 <xre_match@@Base+0x1590>  // b.none
   105a8:	ldrb	w8, [x8, #4]
   105ac:	cmp	w12, w8
   105b0:	b.eq	10478 <xre_match@@Base+0x1590>  // b.none
   105b4:	ldrb	w8, [x26]
   105b8:	cmp	w8, #0x11
   105bc:	b.ne	1063c <xre_match@@Base+0x1754>  // b.any
   105c0:	sub	w8, w27, #0x3
   105c4:	sub	w10, w27, #0x4
   105c8:	lsl	x8, x8, #3
   105cc:	lsl	x9, x10, #3
   105d0:	ldrsw	x8, [x24, x8]
   105d4:	ldrsw	x9, [x24, x9]
   105d8:	cmp	w8, w9
   105dc:	b.cc	f374 <xre_match@@Base+0x48c>  // b.lo, b.ul, b.last
   105e0:	sub	x11, x29, #0x58
   105e4:	ldur	x14, [x11, #-256]
   105e8:	sub	x11, x29, #0x60
   105ec:	mov	x0, x15
   105f0:	ldur	x15, [x11, #-256]
   105f4:	sub	w10, w27, #0x7
   105f8:	add	w11, w10, #0x2
   105fc:	ldr	x11, [x24, w11, uxtw #3]
   10600:	lsl	x12, x8, #3
   10604:	add	w13, w10, #0x1
   10608:	sub	x8, x8, #0x1
   1060c:	str	x11, [x15, x12]
   10610:	ldr	x11, [x24, w13, uxtw #3]
   10614:	cmp	x8, x9
   10618:	str	x11, [x14, x12]
   1061c:	ldr	x11, [x24, w10, uxtw #3]
   10620:	sub	w10, w10, #0x3
   10624:	str	x11, [x14, x12]
   10628:	b.cs	105f8 <xre_match@@Base+0x1710>  // b.hs, b.nlast
   1062c:	add	w27, w10, #0x3
   10630:	mov	x15, x0
   10634:	stur	wzr, [x29, #-112]
   10638:	b	f37c <xre_match@@Base+0x494>
   1063c:	mov	w8, #0xd                   	// #13
   10640:	strb	w8, [x26]
   10644:	b	f37c <xre_match@@Base+0x494>
   10648:	mov	x15, x6
   1064c:	mov	x25, x6
   10650:	b	1070c <xre_match@@Base+0x1824>
   10654:	sub	x8, x29, #0x80
   10658:	sub	x9, x29, #0x78
   1065c:	sub	x10, x29, #0x70
   10660:	sub	x11, x29, #0x30
   10664:	sub	x12, x29, #0x68
   10668:	ldur	x8, [x8, #-256]
   1066c:	ldur	x9, [x9, #-256]
   10670:	ldur	x10, [x10, #-256]
   10674:	ldur	x11, [x11, #-256]
   10678:	ldur	x12, [x12, #-256]
   1067c:	ldp	q0, q1, [x12, #-16]
   10680:	add	x12, x12, #0x20
   10684:	subs	x11, x11, #0x4
   10688:	stp	q0, q1, [x10, #-16]
   1068c:	ldp	q0, q1, [x8, #-16]
   10690:	add	x10, x10, #0x20
   10694:	add	x8, x8, #0x20
   10698:	stp	q0, q1, [x9, #-16]
   1069c:	add	x9, x9, #0x20
   106a0:	b.ne	1067c <xre_match@@Base+0x1794>  // b.any
   106a4:	sub	x9, x29, #0x30
   106a8:	ldur	x8, [x29, #-96]
   106ac:	ldur	x9, [x9, #-256]
   106b0:	cmp	x8, x9
   106b4:	sub	x8, x29, #0x88
   106b8:	ldur	x9, [x8, #-256]
   106bc:	b.eq	106fc <xre_match@@Base+0x1814>  // b.none
   106c0:	sub	x8, x29, #0x50
   106c4:	ldur	x8, [x8, #-256]
   106c8:	lsl	x12, x9, #3
   106cc:	add	x10, x28, x12
   106d0:	sub	x8, x8, x9
   106d4:	ldp	x9, x11, [x29, #-128]
   106d8:	add	x9, x9, x12
   106dc:	add	x11, x11, x12
   106e0:	add	x12, x19, x12
   106e4:	ldr	x13, [x12], #8
   106e8:	subs	x8, x8, #0x1
   106ec:	str	x13, [x11], #8
   106f0:	ldr	x13, [x10], #8
   106f4:	str	x13, [x9], #8
   106f8:	b.ne	106e4 <xre_match@@Base+0x17fc>  // b.any
   106fc:	mov	w8, #0x1                   	// #1
   10700:	stur	w8, [x29, #-140]
   10704:	stur	x23, [x29, #-152]
   10708:	mov	x25, x23
   1070c:	mov	x23, x25
   10710:	cbz	w27, 10a00 <xre_match@@Base+0x1b18>
   10714:	mov	x25, x23
   10718:	mov	w13, #0x231                 	// #561
   1071c:	mov	w14, #0x3ce                 	// #974
   10720:	b	10730 <xre_match@@Base+0x1848>
   10724:	cmp	w9, #0x15
   10728:	b.ne	f298 <xre_match@@Base+0x3b0>  // b.any
   1072c:	cbz	w27, 10a00 <xre_match@@Base+0x1b18>
   10730:	sub	w9, w27, #0x1
   10734:	sub	w11, w27, #0x3
   10738:	sub	w8, w27, #0x4
   1073c:	ldr	x9, [x24, w9, uxtw #3]
   10740:	lsl	x11, x11, #3
   10744:	lsl	x12, x8, #3
   10748:	sub	w10, w27, #0x2
   1074c:	ldrsw	x5, [x24, x11]
   10750:	ldrsw	x21, [x24, x12]
   10754:	ldr	x26, [x24, w10, uxtw #3]
   10758:	cmp	x9, #0x0
   1075c:	csel	x25, x25, x9, eq  // eq = none
   10760:	cmp	w5, w21
   10764:	b.cc	107a8 <xre_match@@Base+0x18c0>  // b.lo, b.ul, b.last
   10768:	sub	w8, w27, #0x7
   1076c:	mov	x9, x5
   10770:	add	w10, w8, #0x2
   10774:	ldr	x10, [x24, w10, uxtw #3]
   10778:	lsl	x11, x9, #3
   1077c:	add	w12, w8, #0x1
   10780:	sub	x9, x9, #0x1
   10784:	str	x10, [x22, x11]
   10788:	ldr	x10, [x24, w12, uxtw #3]
   1078c:	cmp	x9, x21
   10790:	str	x10, [x28, x11]
   10794:	ldr	x10, [x24, w8, uxtw #3]
   10798:	sub	w8, w8, #0x3
   1079c:	str	x10, [x19, x11]
   107a0:	b.cs	10770 <xre_match@@Base+0x1888>  // b.hs, b.nlast
   107a4:	add	w8, w8, #0x3
   107a8:	mov	w27, w8
   107ac:	cbz	x26, 1072c <xre_match@@Base+0x1844>
   107b0:	cmp	x26, x16
   107b4:	b.cs	f298 <xre_match@@Base+0x3b0>  // b.hs, b.nlast
   107b8:	ldrb	w8, [x26]
   107bc:	sub	w8, w8, #0xd
   107c0:	cmp	w8, #0x9
   107c4:	b.hi	f298 <xre_match@@Base+0x3b0>  // b.pmore
   107c8:	lsr	w9, w13, w8
   107cc:	tbz	w9, #0, f298 <xre_match@@Base+0x3b0>
   107d0:	ldrb	w9, [x26, #1]
   107d4:	ldrsb	x10, [x26, #2]
   107d8:	lsr	w8, w14, w8
   107dc:	bfi	x9, x10, #8, #56
   107e0:	add	x9, x26, x9
   107e4:	add	x10, x9, #0x3
   107e8:	stur	x10, [x29, #-16]
   107ec:	ldrb	w9, [x9, #3]
   107f0:	tbnz	w8, #0, 10724 <xre_match@@Base+0x183c>
   107f4:	cmp	w9, #0xf
   107f8:	b.eq	1072c <xre_match@@Base+0x1844>  // b.none
   107fc:	b	f298 <xre_match@@Base+0x3b0>
   10800:	mov	x25, x8
   10804:	b	1070c <xre_match@@Base+0x1824>
   10808:	ldur	x25, [x29, #-200]
   1080c:	b	1070c <xre_match@@Base+0x1824>
   10810:	add	x9, x22, x9, lsl #3
   10814:	ldrb	w10, [x9]
   10818:	mov	x20, x15
   1081c:	add	x11, x8, #0x3
   10820:	sub	x13, x29, #0x28
   10824:	stur	x5, [x29, #-112]
   10828:	stur	x11, [x13, #-256]
   1082c:	tbz	w10, #4, 10890 <xre_match@@Base+0x19a8>
   10830:	and	w10, w10, #0xffffffef
   10834:	strb	w10, [x9]
   10838:	ldrb	w9, [x26, #2]
   1083c:	cbz	w9, 10890 <xre_match@@Base+0x19a8>
   10840:	ldrb	w9, [x12]
   10844:	b	10860 <xre_match@@Base+0x1978>
   10848:	ldrb	w10, [x26, #1]
   1084c:	ldrb	w11, [x26, #2]
   10850:	add	x9, x9, #0x1
   10854:	add	x10, x11, x10
   10858:	cmp	x9, x10
   1085c:	b.cs	10890 <xre_match@@Base+0x19a8>  // b.hs, b.nlast
   10860:	sub	x11, x29, #0x40
   10864:	ldur	x11, [x11, #-256]
   10868:	lsl	x10, x9, #3
   1086c:	sub	x12, x29, #0x48
   10870:	ldur	x12, [x12, #-256]
   10874:	ldr	x11, [x11, x10]
   10878:	str	x11, [x19, x10]
   1087c:	ldr	x10, [x12, x10]
   10880:	cmp	x10, x11
   10884:	b.cc	10848 <xre_match@@Base+0x1960>  // b.lo, b.ul, b.last
   10888:	str	x10, [x28, x9, lsl #3]
   1088c:	b	10848 <xre_match@@Base+0x1960>
   10890:	add	x9, x8, #0x1
   10894:	stur	x9, [x29, #-16]
   10898:	ldur	x11, [x29, #-112]
   1089c:	ldrb	w9, [x8, #1]
   108a0:	ldrsb	x8, [x8, #2]
   108a4:	sub	x12, x29, #0x8
   108a8:	sub	x11, x11, x21
   108ac:	stur	x9, [x12, #-256]
   108b0:	sub	x9, x29, #0x98
   108b4:	stur	x8, [x9, #-256]
   108b8:	add	x8, x11, x11, lsl #1
   108bc:	add	x23, x8, #0x7
   108c0:	sub	x8, x29, #0x28
   108c4:	ldur	x8, [x8, #-256]
   108c8:	sub	w10, w18, w27
   108cc:	cmp	x23, x10
   108d0:	stur	x8, [x29, #-16]
   108d4:	b.ls	10938 <xre_match@@Base+0x1a50>  // b.plast
   108d8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   108dc:	ldr	x8, [x8, #3952]
   108e0:	mov	w9, #0x13                  	// #19
   108e4:	mov	x1, x24
   108e8:	ldr	w8, [x8]
   108ec:	mul	w8, w8, w9
   108f0:	stur	w8, [x29, #-232]
   108f4:	mov	w8, w18
   108f8:	ldur	w9, [x29, #-232]
   108fc:	cmp	w8, w9
   10900:	b.hi	10a90 <xre_match@@Base+0x1ba8>  // b.pmore
   10904:	lsl	w26, w8, #1
   10908:	sub	x24, sp, w26, uxtw #3
   1090c:	mov	sp, x24
   10910:	mov	w8, w8
   10914:	lsl	x2, x8, #3
   10918:	mov	x0, x24
   1091c:	bl	4fb0 <memcpy@plt>
   10920:	sub	w8, w26, w27
   10924:	cmp	x23, x8
   10928:	mov	w8, w26
   1092c:	mov	x1, x24
   10930:	b.hi	108f8 <xre_match@@Base+0x1a10>  // b.pmore
   10934:	b	1093c <xre_match@@Base+0x1a54>
   10938:	mov	w26, w18
   1093c:	sub	x9, x29, #0x8
   10940:	sub	x10, x29, #0x98
   10944:	ldur	x8, [x29, #-112]
   10948:	ldur	x9, [x9, #-256]
   1094c:	ldur	x10, [x10, #-256]
   10950:	subs	x8, x8, x21
   10954:	bfi	x9, x10, #8, #56
   10958:	sub	x10, x29, #0x8
   1095c:	stur	x9, [x10, #-256]
   10960:	b.cc	109a4 <xre_match@@Base+0x1abc>  // b.lo, b.ul, b.last
   10964:	lsl	x11, x21, #3
   10968:	add	x8, x8, #0x1
   1096c:	add	x9, x28, x11
   10970:	add	x10, x19, x11
   10974:	add	x11, x22, x11
   10978:	ldr	x12, [x10], #8
   1097c:	add	w13, w27, #0x1
   10980:	subs	x8, x8, #0x1
   10984:	str	x12, [x24, w27, uxtw #3]
   10988:	ldr	x12, [x9], #8
   1098c:	str	x12, [x24, w13, uxtw #3]
   10990:	ldr	x12, [x11], #8
   10994:	add	w13, w27, #0x2
   10998:	add	w27, w27, #0x3
   1099c:	str	x12, [x24, w13, uxtw #3]
   109a0:	b.ne	10978 <xre_match@@Base+0x1a90>  // b.any
   109a4:	mov	w9, w27
   109a8:	sub	x11, x29, #0x28
   109ac:	sub	x12, x29, #0x8
   109b0:	ldur	x11, [x11, #-256]
   109b4:	ldur	x12, [x12, #-256]
   109b8:	lsl	x9, x9, #3
   109bc:	str	w21, [x24, x9]
   109c0:	ldur	x9, [x29, #-112]
   109c4:	ldur	x30, [x29, #-224]
   109c8:	ldp	x3, x16, [x29, #-80]
   109cc:	ldur	x6, [x29, #-136]
   109d0:	add	w8, w27, #0x1
   109d4:	add	w10, w27, #0x2
   109d8:	add	x11, x11, x12
   109dc:	add	w12, w27, #0x3
   109e0:	add	w27, w27, #0x4
   109e4:	lsl	x8, x8, #3
   109e8:	mov	w18, w26
   109ec:	mov	x15, x20
   109f0:	str	w9, [x24, x8]
   109f4:	str	x11, [x24, w10, uxtw #3]
   109f8:	str	x25, [x24, w12, uxtw #3]
   109fc:	b	1070c <xre_match@@Base+0x1824>
   10a00:	ldur	x24, [x29, #-248]
   10a04:	ldur	x25, [x29, #-192]
   10a08:	ldur	x26, [x29, #-176]
   10a0c:	ldur	w8, [x29, #-140]
   10a10:	cbz	w8, 10a88 <xre_match@@Base+0x1ba0>
   10a14:	ldur	x8, [x29, #-88]
   10a18:	ldur	x23, [x29, #-152]
   10a1c:	cmp	x23, x8
   10a20:	ldur	x8, [x29, #-104]
   10a24:	ccmp	x23, x30, #0x0, ls  // ls = plast
   10a28:	csel	x15, x6, x8, cc  // cc = lo, ul, last
   10a2c:	cmp	x25, #0x2
   10a30:	b.cc	10aa8 <xre_match@@Base+0x1bc0>  // b.lo, b.ul, b.last
   10a34:	ldur	x8, [x29, #-96]
   10a38:	cmp	x8, #0x4
   10a3c:	b.cs	10b30 <xre_match@@Base+0x1c48>  // b.hs, b.nlast
   10a40:	mov	w8, #0x1                   	// #1
   10a44:	ldur	x9, [x29, #-96]
   10a48:	ldp	x10, x13, [x29, #-128]
   10a4c:	lsl	x12, x8, #3
   10a50:	add	x11, x19, x12
   10a54:	sub	x9, x9, x8
   10a58:	add	x8, x9, #0x1
   10a5c:	add	x9, x28, x12
   10a60:	add	x10, x10, x12
   10a64:	add	x12, x13, x12
   10a68:	ldr	x13, [x12], #8
   10a6c:	subs	x8, x8, #0x1
   10a70:	str	x13, [x11], #8
   10a74:	ldr	x13, [x10], #8
   10a78:	str	x13, [x9], #8
   10a7c:	b.ne	10a68 <xre_match@@Base+0x1b80>  // b.any
   10a80:	ldur	x23, [x29, #-152]
   10a84:	b	10aa8 <xre_match@@Base+0x1bc0>
   10a88:	mov	w0, #0xffffffff            	// #-1
   10a8c:	b	10e38 <xre_match@@Base+0x1f50>
   10a90:	mov	w0, #0xfffffffe            	// #-2
   10a94:	b	10e38 <xre_match@@Base+0x1f50>
   10a98:	mov	x23, x25
   10a9c:	ldur	x24, [x29, #-248]
   10aa0:	ldur	x25, [x29, #-192]
   10aa4:	ldur	x26, [x29, #-176]
   10aa8:	cbz	x24, 10e10 <xre_match@@Base+0x1f28>
   10aac:	ldrb	w8, [x26, #56]
   10ab0:	tbnz	w8, #4, 10e10 <xre_match@@Base+0x1f28>
   10ab4:	ubfx	w8, w8, #1, #2
   10ab8:	cmp	w8, #0x1
   10abc:	mov	x20, x15
   10ac0:	b.eq	10c48 <xre_match@@Base+0x1d60>  // b.none
   10ac4:	cbnz	w8, 10ca8 <xre_match@@Base+0x1dc0>
   10ac8:	ldur	x8, [x29, #-96]
   10acc:	mov	w9, #0x1e                  	// #30
   10ad0:	add	x8, x8, #0x2
   10ad4:	cmp	x8, #0x1e
   10ad8:	csel	x8, x8, x9, hi  // hi = pmore
   10adc:	ubfiz	x21, x8, #2, #32
   10ae0:	mov	x0, x21
   10ae4:	str	w8, [x24]
   10ae8:	bl	5380 <malloc@plt>
   10aec:	mov	x22, x0
   10af0:	str	x0, [x24, #8]
   10af4:	mov	x0, x21
   10af8:	bl	5380 <malloc@plt>
   10afc:	mov	x8, x0
   10b00:	str	x0, [x24, #16]
   10b04:	mov	w0, #0xfffffffe            	// #-2
   10b08:	cbz	x8, 10e38 <xre_match@@Base+0x1f50>
   10b0c:	ldur	x30, [x29, #-224]
   10b10:	ldur	x3, [x29, #-80]
   10b14:	cbz	x22, 10e38 <xre_match@@Base+0x1f50>
   10b18:	ldrb	w8, [x26, #56]
   10b1c:	mov	x15, x20
   10b20:	and	w8, w8, #0xfffffffb
   10b24:	orr	w8, w8, #0x2
   10b28:	strb	w8, [x26, #56]
   10b2c:	b	10ca8 <xre_match@@Base+0x1dc0>
   10b30:	sub	x9, x29, #0x90
   10b34:	ldur	x10, [x9, #-256]
   10b38:	ldur	x9, [x29, #-120]
   10b3c:	mov	x2, x15
   10b40:	add	x8, x19, #0x8
   10b44:	add	x16, x28, x10
   10b48:	add	x15, x9, #0x8
   10b4c:	add	x17, x9, x10
   10b50:	ldur	x9, [x29, #-128]
   10b54:	add	x12, x19, x10
   10b58:	add	x14, x28, #0x8
   10b5c:	cmp	x8, x16
   10b60:	add	x18, x9, #0x8
   10b64:	add	x0, x9, x10
   10b68:	cset	w9, cc  // cc = lo, ul, last
   10b6c:	cmp	x14, x12
   10b70:	cset	w10, cc  // cc = lo, ul, last
   10b74:	cmp	x8, x17
   10b78:	and	w1, w9, w10
   10b7c:	cset	w9, cc  // cc = lo, ul, last
   10b80:	cmp	x15, x12
   10b84:	cset	w11, cc  // cc = lo, ul, last
   10b88:	cmp	x8, x0
   10b8c:	cset	w10, cc  // cc = lo, ul, last
   10b90:	cmp	x18, x12
   10b94:	cset	w13, cc  // cc = lo, ul, last
   10b98:	cmp	x14, x17
   10b9c:	cset	w12, cc  // cc = lo, ul, last
   10ba0:	cmp	x15, x16
   10ba4:	cset	w15, cc  // cc = lo, ul, last
   10ba8:	cmp	x14, x0
   10bac:	cset	w14, cc  // cc = lo, ul, last
   10bb0:	cmp	x18, x16
   10bb4:	cset	w16, cc  // cc = lo, ul, last
   10bb8:	mov	w8, #0x1                   	// #1
   10bbc:	tbnz	w1, #0, 10e74 <xre_match@@Base+0x1f8c>
   10bc0:	and	w9, w9, w11
   10bc4:	tbnz	w9, #0, 10e74 <xre_match@@Base+0x1f8c>
   10bc8:	ldur	x30, [x29, #-224]
   10bcc:	and	w9, w10, w13
   10bd0:	tbnz	w9, #0, 10e78 <xre_match@@Base+0x1f90>
   10bd4:	and	w9, w12, w15
   10bd8:	tbnz	w9, #0, 10e78 <xre_match@@Base+0x1f90>
   10bdc:	and	w9, w14, w16
   10be0:	mov	x15, x2
   10be4:	tbnz	w9, #0, 10a44 <xre_match@@Base+0x1b5c>
   10be8:	ldur	x8, [x29, #-96]
   10bec:	add	x11, x19, #0x18
   10bf0:	add	x13, x28, #0x18
   10bf4:	and	x9, x8, #0xfffffffffffffffc
   10bf8:	ldur	x8, [x29, #-120]
   10bfc:	mov	x14, x9
   10c00:	add	x10, x8, #0x18
   10c04:	ldur	x8, [x29, #-128]
   10c08:	add	x12, x8, #0x18
   10c0c:	orr	x8, x9, #0x1
   10c10:	ldp	q0, q1, [x10, #-16]
   10c14:	add	x10, x10, #0x20
   10c18:	subs	x14, x14, #0x4
   10c1c:	stp	q0, q1, [x11, #-16]
   10c20:	ldp	q0, q1, [x12, #-16]
   10c24:	add	x11, x11, #0x20
   10c28:	add	x12, x12, #0x20
   10c2c:	stp	q0, q1, [x13, #-16]
   10c30:	add	x13, x13, #0x20
   10c34:	b.ne	10c10 <xre_match@@Base+0x1d28>  // b.any
   10c38:	ldur	x10, [x29, #-96]
   10c3c:	cmp	x10, x9
   10c40:	b.ne	10a44 <xre_match@@Base+0x1b5c>  // b.any
   10c44:	b	10a80 <xre_match@@Base+0x1b98>
   10c48:	ldur	x8, [x29, #-96]
   10c4c:	ldr	w9, [x24]
   10c50:	add	x8, x8, #0x2
   10c54:	cmp	x8, x9
   10c58:	b.ls	10ca8 <xre_match@@Base+0x1dc0>  // b.plast
   10c5c:	ldr	x0, [x24, #8]
   10c60:	ubfiz	x1, x8, #2, #32
   10c64:	str	w8, [x24]
   10c68:	bl	5150 <realloc@plt>
   10c6c:	ldr	w9, [x24]
   10c70:	ldr	x8, [x24, #16]
   10c74:	str	x0, [x24, #8]
   10c78:	lsl	x1, x9, #2
   10c7c:	mov	x0, x8
   10c80:	bl	5150 <realloc@plt>
   10c84:	mov	x8, x0
   10c88:	str	x0, [x24, #16]
   10c8c:	mov	w0, #0xfffffffe            	// #-2
   10c90:	cbz	x8, 10e38 <xre_match@@Base+0x1f50>
   10c94:	ldr	x8, [x24, #8]
   10c98:	ldur	x30, [x29, #-224]
   10c9c:	ldur	x3, [x29, #-80]
   10ca0:	mov	x15, x20
   10ca4:	cbz	x8, 10e38 <xre_match@@Base+0x1f50>
   10ca8:	ldr	w8, [x24]
   10cac:	cbz	w8, 10ce8 <xre_match@@Base+0x1e00>
   10cb0:	ldr	x8, [x24, #8]
   10cb4:	ldur	x10, [x29, #-168]
   10cb8:	ldur	x0, [x29, #-184]
   10cbc:	ldur	x11, [x29, #-104]
   10cc0:	sub	w9, w23, w30
   10cc4:	str	w10, [x8]
   10cc8:	ldr	x10, [x24, #16]
   10ccc:	sub	w8, w23, w3
   10cd0:	add	w8, w0, w8
   10cd4:	cmp	x15, x11
   10cd8:	csel	w8, w9, w8, eq  // eq = none
   10cdc:	str	w8, [x10]
   10ce0:	ldr	w13, [x24]
   10ce4:	b	10cf0 <xre_match@@Base+0x1e08>
   10ce8:	ldur	x0, [x29, #-184]
   10cec:	mov	w13, wzr
   10cf0:	ldur	x2, [x29, #-88]
   10cf4:	mov	w8, w13
   10cf8:	cmp	x25, x8
   10cfc:	csel	x8, x25, x8, cc  // cc = lo, ul, last
   10d00:	cmp	x8, #0x2
   10d04:	b.cc	10dd4 <xre_match@@Base+0x1eec>  // b.lo, b.ul, b.last
   10d08:	cmp	w0, #0x0
   10d0c:	adrp	x12, 2b000 <xexit@@Base+0x154dc>
   10d10:	add	x8, x24, #0x8
   10d14:	add	x9, x24, #0x10
   10d18:	mov	w10, #0x1                   	// #1
   10d1c:	cset	w11, eq  // eq = none
   10d20:	add	x12, x12, #0x6f8
   10d24:	b	10d58 <xre_match@@Base+0x1e70>
   10d28:	ldr	x14, [x9]
   10d2c:	mov	w13, #0xffffffff            	// #-1
   10d30:	str	w13, [x14, x10, lsl #2]
   10d34:	mov	x14, x8
   10d38:	ldr	x14, [x14]
   10d3c:	str	w13, [x14, x10, lsl #2]
   10d40:	ldr	w13, [x24]
   10d44:	add	x10, x10, #0x1
   10d48:	cmp	x25, x13
   10d4c:	csel	x14, x25, x13, cc  // cc = lo, ul, last
   10d50:	cmp	x14, x10
   10d54:	b.ls	10dd4 <xre_match@@Base+0x1eec>  // b.plast
   10d58:	ldr	x14, [x19, x10, lsl #3]
   10d5c:	cmp	x14, x12
   10d60:	b.eq	10d28 <xre_match@@Base+0x1e40>  // b.none
   10d64:	ldr	x13, [x28, x10, lsl #3]
   10d68:	cmp	x13, x12
   10d6c:	b.eq	10d28 <xre_match@@Base+0x1e40>  // b.none
   10d70:	cmp	x30, x14
   10d74:	cset	w18, hi  // hi = pmore
   10d78:	cmp	x14, x2
   10d7c:	sub	w15, w14, w30
   10d80:	sub	w16, w14, w3
   10d84:	ldr	x17, [x8]
   10d88:	orr	w14, w18, w11
   10d8c:	cset	w18, hi  // hi = pmore
   10d90:	orr	w14, w18, w14
   10d94:	add	w16, w0, w16
   10d98:	cmp	w14, #0x0
   10d9c:	csel	w14, w16, w15, ne  // ne = any
   10da0:	str	w14, [x17, x10, lsl #2]
   10da4:	cbz	w0, 10dc0 <xre_match@@Base+0x1ed8>
   10da8:	cmp	x30, x13
   10dac:	b.hi	10dc0 <xre_match@@Base+0x1ed8>  // b.pmore
   10db0:	cmp	x13, x2
   10db4:	b.hi	10dc0 <xre_match@@Base+0x1ed8>  // b.pmore
   10db8:	sub	w13, w13, w30
   10dbc:	b	10dc8 <xre_match@@Base+0x1ee0>
   10dc0:	sub	w13, w13, w3
   10dc4:	add	w13, w0, w13
   10dc8:	mov	x14, x9
   10dcc:	mov	x15, x20
   10dd0:	b	10d38 <xre_match@@Base+0x1e50>
   10dd4:	cmp	w13, w25
   10dd8:	b.ls	10e10 <xre_match@@Base+0x1f28>  // b.plast
   10ddc:	ldur	x8, [x29, #-96]
   10de0:	ldp	x10, x9, [x24, #8]
   10de4:	add	w8, w8, #0x1
   10de8:	sbfiz	x11, x8, #2, #32
   10dec:	add	x9, x9, x11
   10df0:	add	x10, x10, x11
   10df4:	mov	w11, #0xffffffff            	// #-1
   10df8:	str	w11, [x9], #4
   10dfc:	str	w11, [x10], #4
   10e00:	ldr	w12, [x24]
   10e04:	add	w8, w8, #0x1
   10e08:	cmp	w12, w8
   10e0c:	b.hi	10df8 <xre_match@@Base+0x1f10>  // b.pmore
   10e10:	sub	x9, x29, #0x18
   10e14:	sub	x8, x29, #0x10
   10e18:	ldur	x9, [x9, #-256]
   10e1c:	ldur	x10, [x29, #-104]
   10e20:	ldur	x8, [x8, #-256]
   10e24:	add	w9, w3, w9
   10e28:	cmp	x15, x10
   10e2c:	sub	w8, w23, w8
   10e30:	csel	w9, w30, w9, eq  // eq = none
   10e34:	sub	w0, w8, w9
   10e38:	mov	sp, x29
   10e3c:	ldp	x20, x19, [sp, #80]
   10e40:	ldp	x22, x21, [sp, #64]
   10e44:	ldp	x24, x23, [sp, #48]
   10e48:	ldp	x26, x25, [sp, #32]
   10e4c:	ldp	x28, x27, [sp, #16]
   10e50:	ldp	x29, x30, [sp], #96
   10e54:	ret
   10e58:	mov	x23, x6
   10e5c:	b	10a9c <xre_match@@Base+0x1bb4>
   10e60:	ldur	x24, [x29, #-248]
   10e64:	ldur	x25, [x29, #-192]
   10e68:	ldur	x26, [x29, #-176]
   10e6c:	tbz	w8, #0, 10a14 <xre_match@@Base+0x1b2c>
   10e70:	b	10aa8 <xre_match@@Base+0x1bc0>
   10e74:	ldur	x30, [x29, #-224]
   10e78:	mov	x15, x2
   10e7c:	b	10a44 <xre_match@@Base+0x1b5c>
   10e80:	bl	53c0 <abort@plt>

0000000000010e84 <xre_match_2@@Base>:
   10e84:	b	ef08 <xre_match@@Base+0x20>

0000000000010e88 <xre_compile_pattern@@Base>:
   10e88:	stp	x29, x30, [sp, #-16]!
   10e8c:	ldrb	w8, [x2, #56]
   10e90:	mov	w9, #0x69                  	// #105
   10e94:	mov	x3, x2
   10e98:	mov	x29, sp
   10e9c:	and	w8, w8, w9
   10ea0:	orr	w8, w8, #0x80
   10ea4:	strb	w8, [x2, #56]
   10ea8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   10eac:	ldr	x8, [x8, #3800]
   10eb0:	ldr	x2, [x8]
   10eb4:	bl	10edc <xre_compile_pattern@@Base+0x54>
   10eb8:	cbz	w0, 10ed0 <xre_compile_pattern@@Base+0x48>
   10ebc:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   10ec0:	add	x8, x8, #0x9d0
   10ec4:	ldr	x0, [x8, w0, sxtw #3]
   10ec8:	ldp	x29, x30, [sp], #16
   10ecc:	ret
   10ed0:	mov	x0, xzr
   10ed4:	ldp	x29, x30, [sp], #16
   10ed8:	ret
   10edc:	sub	sp, sp, #0x1c0
   10ee0:	stp	x29, x30, [sp, #352]
   10ee4:	stp	x28, x27, [sp, #368]
   10ee8:	stp	x26, x25, [sp, #384]
   10eec:	stp	x24, x23, [sp, #400]
   10ef0:	stp	x22, x21, [sp, #416]
   10ef4:	stp	x20, x19, [sp, #432]
   10ef8:	ldr	x8, [x3, #40]
   10efc:	add	x29, sp, #0x160
   10f00:	mov	x27, x0
   10f04:	mov	w0, #0x500                 	// #1280
   10f08:	mov	x20, x3
   10f0c:	mov	x26, x2
   10f10:	mov	x24, x1
   10f14:	stur	x8, [x29, #-152]
   10f18:	bl	5380 <malloc@plt>
   10f1c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   10f20:	ldrb	w8, [x20, #56]
   10f24:	mov	w9, #0x97                  	// #151
   10f28:	stp	xzr, x26, [x20, #16]
   10f2c:	str	xzr, [x20, #48]
   10f30:	and	w8, w8, w9
   10f34:	strb	w8, [x20, #56]
   10f38:	adrp	x19, 2b000 <xexit@@Base+0x154dc>
   10f3c:	ldrb	w8, [x19, #1788]
   10f40:	mov	x22, x0
   10f44:	tbnz	w8, #0, 10fb4 <xre_compile_pattern@@Base+0x12c>
   10f48:	adrp	x21, 2b000 <xexit@@Base+0x154dc>
   10f4c:	add	x21, x21, #0x5f8
   10f50:	movi	v0.2d, #0x0
   10f54:	stp	q0, q0, [x21, #224]
   10f58:	stp	q0, q0, [x21, #192]
   10f5c:	stp	q0, q0, [x21, #160]
   10f60:	stp	q0, q0, [x21, #128]
   10f64:	stp	q0, q0, [x21, #96]
   10f68:	stp	q0, q0, [x21, #64]
   10f6c:	stp	q0, q0, [x21, #32]
   10f70:	stp	q0, q0, [x21]
   10f74:	bl	5250 <__ctype_b_loc@plt>
   10f78:	mov	x8, xzr
   10f7c:	mov	w9, #0x1                   	// #1
   10f80:	b	10f90 <xre_compile_pattern@@Base+0x108>
   10f84:	add	x8, x8, #0x1
   10f88:	cmp	x8, #0x100
   10f8c:	b.eq	10fa4 <xre_compile_pattern@@Base+0x11c>  // b.none
   10f90:	ldr	x10, [x0]
   10f94:	ldrh	w10, [x10, x8, lsl #1]
   10f98:	tbz	w10, #3, 10f84 <xre_compile_pattern@@Base+0xfc>
   10f9c:	strb	w9, [x21, x8]
   10fa0:	b	10f84 <xre_compile_pattern@@Base+0xfc>
   10fa4:	adrp	x8, 2b000 <xexit@@Base+0x154dc>
   10fa8:	mov	w9, #0x1                   	// #1
   10fac:	strb	w9, [x8, #1623]
   10fb0:	strb	w9, [x19, #1788]
   10fb4:	mov	x25, x20
   10fb8:	ldr	x8, [x25, #8]!
   10fbc:	ldr	x23, [x20]
   10fc0:	cbz	x8, 10fcc <xre_compile_pattern@@Base+0x144>
   10fc4:	cbnz	x24, 11000 <xre_compile_pattern@@Base+0x178>
   10fc8:	b	13748 <xre_compile_pattern@@Base+0x28c0>
   10fcc:	cbz	x23, 10fe0 <xre_compile_pattern@@Base+0x158>
   10fd0:	mov	w1, #0x20                  	// #32
   10fd4:	mov	x0, x23
   10fd8:	bl	5150 <realloc@plt>
   10fdc:	b	10fe8 <xre_compile_pattern@@Base+0x160>
   10fe0:	mov	w0, #0x20                  	// #32
   10fe4:	bl	5380 <malloc@plt>
   10fe8:	mov	x23, x0
   10fec:	str	x0, [x20]
   10ff0:	cbz	x0, 136f4 <xre_compile_pattern@@Base+0x286c>
   10ff4:	mov	w8, #0x20                  	// #32
   10ff8:	str	x8, [x25]
   10ffc:	cbz	x24, 13748 <xre_compile_pattern@@Base+0x28c0>
   11000:	mov	w8, #0x8400                	// #33792
   11004:	mov	w9, #0x200020              	// #2097184
   11008:	and	x8, x26, x8
   1100c:	mov	w10, #0x402                 	// #1026
   11010:	str	x8, [sp, #96]
   11014:	and	x8, x26, x9
   11018:	mov	x11, x27
   1101c:	mov	w12, #0x1200                	// #4608
   11020:	str	x8, [sp, #88]
   11024:	and	x8, x26, x10
   11028:	add	x21, x11, x24
   1102c:	str	x8, [sp, #152]
   11030:	and	x8, x26, x12
   11034:	stp	x8, x11, [sp, #128]
   11038:	sub	x8, x21, #0x1
   1103c:	ldur	x24, [x29, #-152]
   11040:	str	x8, [sp, #168]
   11044:	sub	x8, x21, #0x2
   11048:	lsr	x13, x26, #15
   1104c:	str	x8, [sp, #104]
   11050:	mov	w8, #0x20                  	// #32
   11054:	str	x22, [sp, #176]
   11058:	mov	x27, xzr
   1105c:	mov	x28, xzr
   11060:	mov	x22, xzr
   11064:	str	x13, [sp, #112]
   11068:	lsr	x13, x26, #13
   1106c:	stur	x26, [x29, #-160]
   11070:	str	x8, [sp, #160]
   11074:	mov	x19, x23
   11078:	mov	x26, x11
   1107c:	mov	x8, x11
   11080:	str	wzr, [sp, #148]
   11084:	str	x13, [sp, #120]
   11088:	stur	x21, [x29, #-168]
   1108c:	ldrb	w21, [x8], #1
   11090:	stur	x8, [x29, #-144]
   11094:	cbz	x24, 1109c <xre_compile_pattern@@Base+0x214>
   11098:	ldrb	w21, [x24, x21]
   1109c:	sub	w8, w21, #0xa
   110a0:	cmp	w8, #0x72
   110a4:	b.hi	130f4 <xre_compile_pattern@@Base+0x226c>  // b.pmore
   110a8:	adrp	x11, 16000 <xexit@@Base+0x4dc>
   110ac:	add	x11, x11, #0x5e0
   110b0:	adr	x9, 110c0 <xre_compile_pattern@@Base+0x238>
   110b4:	ldrh	w10, [x11, x8, lsl #1]
   110b8:	add	x9, x9, x10, lsl #2
   110bc:	br	x9
   110c0:	ldr	x8, [sp, #152]
   110c4:	cbnz	x8, 130f4 <xre_compile_pattern@@Base+0x226c>
   110c8:	cbnz	x28, 110e0 <xre_compile_pattern@@Base+0x258>
   110cc:	ldur	x8, [x29, #-160]
   110d0:	tbnz	w8, #5, 13824 <xre_compile_pattern@@Base+0x299c>
   110d4:	tbnz	w8, #4, 110e0 <xre_compile_pattern@@Base+0x258>
   110d8:	mov	x28, xzr
   110dc:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   110e0:	cmp	w21, #0x2b
   110e4:	cset	w26, ne  // ne = any
   110e8:	cmp	w21, #0x3f
   110ec:	ldur	x21, [x29, #-168]
   110f0:	ldur	x9, [x29, #-144]
   110f4:	cset	w8, ne  // ne = any
   110f8:	cmp	x9, x21
   110fc:	b.ne	11160 <xre_compile_pattern@@Base+0x2d8>  // b.any
   11100:	stur	x21, [x29, #-144]
   11104:	cbz	x28, 13184 <xre_compile_pattern@@Base+0x22fc>
   11108:	cbz	w8, 117a4 <xre_compile_pattern@@Base+0x91c>
   1110c:	ldp	x24, x8, [x20]
   11110:	sub	x9, x23, x24
   11114:	add	x9, x9, #0x3
   11118:	cmp	x9, x8
   1111c:	b.hi	111e0 <xre_compile_pattern@@Base+0x358>  // b.pmore
   11120:	ldp	x10, x8, [x29, #-152]
   11124:	ldurb	w8, [x8, #-2]
   11128:	cbz	x10, 1269c <xre_compile_pattern@@Base+0x1814>
   1112c:	ldrb	w8, [x10, x8]
   11130:	ldrb	w9, [x10, #46]
   11134:	b	126a0 <xre_compile_pattern@@Base+0x1818>
   11138:	mov	w10, #0x2a                  	// #42
   1113c:	cmp	w10, #0x2b
   11140:	cset	w11, ne  // ne = any
   11144:	cmp	w10, #0x3f
   11148:	cset	w10, ne  // ne = any
   1114c:	orr	w26, w26, w11
   11150:	cmp	x9, x21
   11154:	orr	w8, w8, w10
   11158:	stur	x9, [x29, #-144]
   1115c:	b.eq	11100 <xre_compile_pattern@@Base+0x278>  // b.none
   11160:	ldrb	w10, [x9], #1
   11164:	cbz	x24, 1116c <xre_compile_pattern@@Base+0x2e4>
   11168:	ldrb	w10, [x24, x10]
   1116c:	cmp	w10, #0x2a
   11170:	b.eq	11138 <xre_compile_pattern@@Base+0x2b0>  // b.none
   11174:	ldur	x11, [x29, #-160]
   11178:	tbnz	w11, #1, 11190 <xre_compile_pattern@@Base+0x308>
   1117c:	cmp	w10, #0x2b
   11180:	b.eq	1113c <xre_compile_pattern@@Base+0x2b4>  // b.none
   11184:	cmp	w10, #0x3f
   11188:	b.eq	1113c <xre_compile_pattern@@Base+0x2b4>  // b.none
   1118c:	b	11104 <xre_compile_pattern@@Base+0x27c>
   11190:	cmp	w10, #0x5c
   11194:	b.ne	11104 <xre_compile_pattern@@Base+0x27c>  // b.any
   11198:	cmp	x9, x21
   1119c:	b.eq	13704 <xre_compile_pattern@@Base+0x287c>  // b.none
   111a0:	ldur	x9, [x29, #-144]
   111a4:	ldrb	w10, [x9, #1]
   111a8:	add	x9, x9, #0x2
   111ac:	cbz	x24, 111b4 <xre_compile_pattern@@Base+0x32c>
   111b0:	ldrb	w10, [x24, x10]
   111b4:	cmp	w10, #0x3f
   111b8:	b.eq	1113c <xre_compile_pattern@@Base+0x2b4>  // b.none
   111bc:	cmp	w10, #0x2b
   111c0:	b.eq	1113c <xre_compile_pattern@@Base+0x2b4>  // b.none
   111c4:	b	11104 <xre_compile_pattern@@Base+0x27c>
   111c8:	ldr	x8, [x25]
   111cc:	sub	x9, x23, x0
   111d0:	add	x9, x9, #0x3
   111d4:	mov	x24, x0
   111d8:	cmp	x9, x8
   111dc:	b.ls	11120 <xre_compile_pattern@@Base+0x298>  // b.plast
   111e0:	cmp	x8, #0x10, lsl #12
   111e4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   111e8:	lsl	x8, x8, #1
   111ec:	cmp	x8, #0x10, lsl #12
   111f0:	mov	w9, #0x10000               	// #65536
   111f4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   111f8:	mov	x0, x24
   111fc:	str	x1, [x20, #8]
   11200:	bl	5150 <realloc@plt>
   11204:	str	x0, [x20]
   11208:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   1120c:	cmp	x24, x0
   11210:	b.eq	111c8 <xre_compile_pattern@@Base+0x340>  // b.none
   11214:	sub	x8, x0, x24
   11218:	cmp	x22, #0x0
   1121c:	add	x9, x22, x8
   11220:	add	x23, x23, x8
   11224:	add	x19, x19, x8
   11228:	add	x8, x28, x8
   1122c:	csel	x22, xzr, x9, eq  // eq = none
   11230:	cmp	x28, #0x0
   11234:	csel	x28, xzr, x8, eq  // eq = none
   11238:	b	111c8 <xre_compile_pattern@@Base+0x340>
   1123c:	ldur	x8, [x29, #-160]
   11240:	mov	w21, #0xa                   	// #10
   11244:	tbnz	w8, #11, 1168c <xre_compile_pattern@@Base+0x804>
   11248:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   1124c:	ldp	x21, x8, [x29, #-168]
   11250:	tbnz	w8, #3, 118d4 <xre_compile_pattern@@Base+0xa4c>
   11254:	ldur	x8, [x29, #-144]
   11258:	cmp	x8, x21
   1125c:	b.eq	118d4 <xre_compile_pattern@@Base+0xa4c>  // b.none
   11260:	ldrb	w8, [x26, #1]
   11264:	ldur	x11, [x29, #-160]
   11268:	add	x10, x26, #0x2
   1126c:	cmp	x10, x21
   11270:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
   11274:	tbnz	w11, #13, 118a0 <xre_compile_pattern@@Base+0xa18>
   11278:	cmp	x10, x21
   1127c:	b.cs	118a8 <xre_compile_pattern@@Base+0xa20>  // b.hs, b.nlast
   11280:	cmp	w8, #0x5c
   11284:	b.ne	118a8 <xre_compile_pattern@@Base+0xa20>  // b.any
   11288:	ldrb	w11, [x9]
   1128c:	cmp	w11, #0x29
   11290:	b.ne	118a8 <xre_compile_pattern@@Base+0xa20>  // b.any
   11294:	b	118d4 <xre_compile_pattern@@Base+0xa4c>
   11298:	ldur	x8, [x29, #-160]
   1129c:	tbnz	w8, #13, 12a48 <xre_compile_pattern@@Base+0x1bc0>
   112a0:	mov	w21, #0x28                  	// #40
   112a4:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   112a8:	ldur	x21, [x29, #-160]
   112ac:	tbz	w21, #13, 12694 <xre_compile_pattern@@Base+0x180c>
   112b0:	mov	w26, #0x10000               	// #65536
   112b4:	cbz	x22, 112f4 <xre_compile_pattern@@Base+0x46c>
   112b8:	ldp	x24, x8, [x20]
   112bc:	sub	x9, x23, x24
   112c0:	add	x9, x9, #0x1
   112c4:	cmp	x9, x8
   112c8:	b.hi	113b0 <xre_compile_pattern@@Base+0x528>  // b.pmore
   112cc:	ldur	x24, [x29, #-152]
   112d0:	sub	w8, w23, w22
   112d4:	mov	w9, #0x14                  	// #20
   112d8:	sub	w8, w8, #0x3
   112dc:	strb	w9, [x23], #1
   112e0:	mov	w9, #0xe                   	// #14
   112e4:	strb	w8, [x22, #1]
   112e8:	lsr	w8, w8, #8
   112ec:	strb	w9, [x22]
   112f0:	strb	w8, [x22, #2]
   112f4:	ldr	x10, [sp, #160]
   112f8:	lsr	x8, x10, #32
   112fc:	cbz	x8, 12690 <xre_compile_pattern@@Base+0x1808>
   11300:	ldr	x14, [sp, #176]
   11304:	mov	w9, #0xffffffff            	// #-1
   11308:	add	x9, x8, x9
   1130c:	bfi	x10, x9, #32, #32
   11310:	and	x9, x9, #0xffffffff
   11314:	mov	w15, #0x28                  	// #40
   11318:	str	x10, [sp, #160]
   1131c:	madd	x10, x9, x15, x14
   11320:	ldr	x8, [x20]
   11324:	ldp	x11, x12, [x10]
   11328:	ldr	x13, [x10, #24]
   1132c:	ldr	w21, [x10, #32]
   11330:	add	x10, x8, x12
   11334:	cmp	x12, #0x0
   11338:	sub	x10, x10, #0x1
   1133c:	add	x19, x8, x11
   11340:	csel	x22, xzr, x10, eq  // eq = none
   11344:	cmp	w21, #0xff
   11348:	add	x28, x8, x13
   1134c:	b.hi	126d0 <xre_compile_pattern@@Base+0x1848>  // b.pmore
   11350:	madd	x9, x9, x15, x14
   11354:	ldr	w10, [sp, #148]
   11358:	ldr	x9, [x9, #16]
   1135c:	sub	w26, w10, w21
   11360:	strb	w26, [x8, x9]
   11364:	ldp	x24, x8, [x20]
   11368:	sub	x9, x23, x24
   1136c:	add	x9, x9, #0x3
   11370:	cmp	x9, x8
   11374:	b.hi	11734 <xre_compile_pattern@@Base+0x8ac>  // b.pmore
   11378:	mov	w8, #0x7                   	// #7
   1137c:	strb	w8, [x23]
   11380:	add	x8, x23, #0x3
   11384:	mov	x27, xzr
   11388:	strb	w21, [x23, #1]
   1138c:	strb	w26, [x23, #2]
   11390:	mov	x23, x8
   11394:	b	1317c <xre_compile_pattern@@Base+0x22f4>
   11398:	ldr	x8, [x25]
   1139c:	sub	x9, x23, x0
   113a0:	add	x9, x9, #0x1
   113a4:	mov	x24, x0
   113a8:	cmp	x9, x8
   113ac:	b.ls	112cc <xre_compile_pattern@@Base+0x444>  // b.plast
   113b0:	cmp	x8, #0x10, lsl #12
   113b4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   113b8:	lsl	x8, x8, #1
   113bc:	cmp	x8, #0x10, lsl #12
   113c0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   113c4:	mov	x0, x24
   113c8:	str	x1, [x20, #8]
   113cc:	bl	5150 <realloc@plt>
   113d0:	str	x0, [x20]
   113d4:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   113d8:	cmp	x24, x0
   113dc:	b.eq	11398 <xre_compile_pattern@@Base+0x510>  // b.none
   113e0:	sub	x8, x0, x24
   113e4:	cmp	x22, #0x0
   113e8:	add	x9, x22, x8
   113ec:	add	x10, x28, x8
   113f0:	csel	x22, xzr, x9, eq  // eq = none
   113f4:	cmp	x28, #0x0
   113f8:	add	x23, x23, x8
   113fc:	add	x19, x19, x8
   11400:	add	x8, x27, x8
   11404:	csel	x28, xzr, x10, eq  // eq = none
   11408:	cmp	x27, #0x0
   1140c:	csel	x27, xzr, x8, eq  // eq = none
   11410:	b	11398 <xre_compile_pattern@@Base+0x510>
   11414:	ldp	x24, x8, [x20]
   11418:	mov	x28, x23
   1141c:	sub	x9, x23, x24
   11420:	add	x9, x9, #0x1
   11424:	cmp	x9, x8
   11428:	b.ls	11790 <xre_compile_pattern@@Base+0x908>  // b.plast
   1142c:	ldur	x21, [x29, #-168]
   11430:	mov	w26, #0x10000               	// #65536
   11434:	b	11450 <xre_compile_pattern@@Base+0x5c8>
   11438:	ldr	x8, [x25]
   1143c:	sub	x9, x23, x0
   11440:	add	x9, x9, #0x1
   11444:	mov	x24, x0
   11448:	cmp	x9, x8
   1144c:	b.ls	11794 <xre_compile_pattern@@Base+0x90c>  // b.plast
   11450:	cmp	x8, #0x10, lsl #12
   11454:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   11458:	lsl	x8, x8, #1
   1145c:	cmp	x8, #0x10, lsl #12
   11460:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11464:	mov	x0, x24
   11468:	str	x1, [x20, #8]
   1146c:	bl	5150 <realloc@plt>
   11470:	str	x0, [x20]
   11474:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11478:	cmp	x24, x0
   1147c:	b.eq	11438 <xre_compile_pattern@@Base+0x5b0>  // b.none
   11480:	sub	x8, x0, x24
   11484:	cmp	x22, #0x0
   11488:	add	x9, x22, x8
   1148c:	add	x10, x28, x8
   11490:	csel	x22, xzr, x9, eq  // eq = none
   11494:	cmp	x28, #0x0
   11498:	add	x23, x23, x8
   1149c:	add	x19, x19, x8
   114a0:	add	x8, x27, x8
   114a4:	csel	x28, xzr, x10, eq  // eq = none
   114a8:	cmp	x27, #0x0
   114ac:	csel	x27, xzr, x8, eq  // eq = none
   114b0:	b	11438 <xre_compile_pattern@@Base+0x5b0>
   114b4:	ldur	x21, [x29, #-168]
   114b8:	ldur	x8, [x29, #-144]
   114bc:	cmp	x8, x21
   114c0:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   114c4:	ldp	x24, x8, [x20]
   114c8:	sub	x9, x23, x24
   114cc:	add	x9, x9, #0x22
   114d0:	cmp	x9, x8
   114d4:	b.hi	114f4 <xre_compile_pattern@@Base+0x66c>  // b.pmore
   114d8:	b	11ad8 <xre_compile_pattern@@Base+0xc50>
   114dc:	ldr	x8, [x25]
   114e0:	sub	x9, x23, x0
   114e4:	add	x9, x9, #0x22
   114e8:	mov	x24, x0
   114ec:	cmp	x9, x8
   114f0:	b.ls	11ad4 <xre_compile_pattern@@Base+0xc4c>  // b.plast
   114f4:	cmp	x8, #0x10, lsl #12
   114f8:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   114fc:	lsl	x8, x8, #1
   11500:	cmp	x8, #0x10, lsl #12
   11504:	mov	w9, #0x10000               	// #65536
   11508:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1150c:	mov	x0, x24
   11510:	str	x1, [x20, #8]
   11514:	bl	5150 <realloc@plt>
   11518:	str	x0, [x20]
   1151c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11520:	cmp	x24, x0
   11524:	b.eq	114dc <xre_compile_pattern@@Base+0x654>  // b.none
   11528:	sub	x8, x0, x24
   1152c:	cmp	x22, #0x0
   11530:	add	x9, x22, x8
   11534:	add	x23, x23, x8
   11538:	add	x19, x19, x8
   1153c:	add	x8, x27, x8
   11540:	csel	x22, xzr, x9, eq  // eq = none
   11544:	cmp	x27, #0x0
   11548:	csel	x27, xzr, x8, eq  // eq = none
   1154c:	b	114dc <xre_compile_pattern@@Base+0x654>
   11550:	ldur	x8, [x29, #-168]
   11554:	ldur	x9, [x29, #-144]
   11558:	cmp	x9, x8
   1155c:	b.eq	13704 <xre_compile_pattern@@Base+0x287c>  // b.none
   11560:	ldrb	w21, [x26, #1]
   11564:	add	x9, x26, #0x2
   11568:	stur	x9, [x29, #-144]
   1156c:	sub	w8, w21, #0x27
   11570:	cmp	w8, #0x55
   11574:	b.hi	130ec <xre_compile_pattern@@Base+0x2264>  // b.pmore
   11578:	adrp	x11, 16000 <xexit@@Base+0x4dc>
   1157c:	add	x11, x11, #0x6c6
   11580:	adr	x9, 11590 <xre_compile_pattern@@Base+0x708>
   11584:	ldrh	w10, [x11, x8, lsl #1]
   11588:	add	x9, x9, x10, lsl #2
   1158c:	br	x9
   11590:	ldur	x8, [x29, #-160]
   11594:	tbnz	w8, #14, 130f4 <xre_compile_pattern@@Base+0x226c>
   11598:	ldr	w9, [sp, #148]
   1159c:	sub	w26, w21, #0x30
   115a0:	and	w8, w26, #0xff
   115a4:	cmp	w9, w8
   115a8:	b.cc	13854 <xre_compile_pattern@@Base+0x29cc>  // b.lo, b.ul, b.last
   115ac:	ldr	x9, [sp, #160]
   115b0:	mov	w11, #0x28                  	// #40
   115b4:	lsr	x9, x9, #32
   115b8:	sub	w9, w9, #0x1
   115bc:	tbnz	w9, #31, 126e0 <xre_compile_pattern@@Base+0x1858>
   115c0:	ldr	x10, [sp, #176]
   115c4:	umaddl	x10, w9, w11, x10
   115c8:	ldr	w10, [x10, #32]
   115cc:	sub	w9, w9, #0x1
   115d0:	cmp	w10, w8
   115d4:	b.ne	115bc <xre_compile_pattern@@Base+0x734>  // b.any
   115d8:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   115dc:	ldur	x8, [x29, #-160]
   115e0:	tbnz	w8, #3, 119a8 <xre_compile_pattern@@Base+0xb20>
   115e4:	ldr	x8, [sp, #136]
   115e8:	cmp	x26, x8
   115ec:	b.eq	119a8 <xre_compile_pattern@@Base+0xb20>  // b.none
   115f0:	ldr	x8, [sp, #136]
   115f4:	sub	x9, x26, #0x1
   115f8:	cmp	x9, x8
   115fc:	b.ls	1197c <xre_compile_pattern@@Base+0xaf4>  // b.plast
   11600:	ldurb	w8, [x26, #-2]
   11604:	cmp	w8, #0x5c
   11608:	cset	w8, eq  // eq = none
   1160c:	b	11980 <xre_compile_pattern@@Base+0xaf8>
   11610:	ldr	x9, [sp, #128]
   11614:	mov	w8, #0x1200                	// #4608
   11618:	cmp	x9, x8
   1161c:	b.ne	1179c <xre_compile_pattern@@Base+0x914>  // b.any
   11620:	ldur	x12, [x29, #-168]
   11624:	ldur	x10, [x29, #-144]
   11628:	mov	x14, x12
   1162c:	cmp	x10, x12
   11630:	b.eq	130dc <xre_compile_pattern@@Base+0x2254>  // b.none
   11634:	mov	w26, #0xffffffff            	// #-1
   11638:	mov	x9, x10
   1163c:	mov	w13, #0xa                   	// #10
   11640:	b	11650 <xre_compile_pattern@@Base+0x7c8>
   11644:	cmp	x12, x9
   11648:	mov	x10, x9
   1164c:	b.eq	11ac8 <xre_compile_pattern@@Base+0xc40>  // b.none
   11650:	ldrb	w8, [x9], #1
   11654:	cbz	x24, 1165c <xre_compile_pattern@@Base+0x7d4>
   11658:	ldrb	w8, [x24, x8]
   1165c:	sub	w11, w8, #0x30
   11660:	cmp	w11, #0x9
   11664:	b.hi	11a60 <xre_compile_pattern@@Base+0xbd8>  // b.pmore
   11668:	cmp	w26, #0x8, lsl #12
   1166c:	b.ge	11644 <xre_compile_pattern@@Base+0x7bc>  // b.tcont
   11670:	bic	w10, w26, w26, asr #31
   11674:	madd	w10, w10, w13, w8
   11678:	sub	w26, w10, #0x30
   1167c:	b	11644 <xre_compile_pattern@@Base+0x7bc>
   11680:	ldur	x8, [x29, #-160]
   11684:	mov	w21, #0x7c                  	// #124
   11688:	tbz	w8, #15, 130f4 <xre_compile_pattern@@Base+0x226c>
   1168c:	ldur	x8, [x29, #-160]
   11690:	tbnz	w8, #10, 130f4 <xre_compile_pattern@@Base+0x226c>
   11694:	ldp	x24, x8, [x20]
   11698:	sub	x9, x23, x24
   1169c:	add	x9, x9, #0x3
   116a0:	cmp	x9, x8
   116a4:	b.ls	117ac <xre_compile_pattern@@Base+0x924>  // b.plast
   116a8:	ldur	x21, [x29, #-168]
   116ac:	mov	w26, #0x10000               	// #65536
   116b0:	cmp	x8, #0x10, lsl #12
   116b4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   116b8:	lsl	x8, x8, #1
   116bc:	cmp	x8, #0x10, lsl #12
   116c0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   116c4:	mov	x0, x24
   116c8:	str	x1, [x20, #8]
   116cc:	bl	5150 <realloc@plt>
   116d0:	str	x0, [x20]
   116d4:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   116d8:	sub	x9, x0, x24
   116dc:	cmp	x22, #0x0
   116e0:	add	x10, x23, x9
   116e4:	add	x11, x19, x9
   116e8:	add	x9, x22, x9
   116ec:	ldr	x8, [x25]
   116f0:	csel	x9, xzr, x9, eq  // eq = none
   116f4:	cmp	x24, x0
   116f8:	csel	x23, x23, x10, eq  // eq = none
   116fc:	csel	x22, x22, x9, eq  // eq = none
   11700:	sub	x9, x23, x0
   11704:	add	x9, x9, #0x3
   11708:	csel	x19, x19, x11, eq  // eq = none
   1170c:	cmp	x9, x8
   11710:	mov	x24, x0
   11714:	b.hi	116b0 <xre_compile_pattern@@Base+0x828>  // b.pmore
   11718:	b	117b4 <xre_compile_pattern@@Base+0x92c>
   1171c:	ldr	x8, [x25]
   11720:	sub	x9, x23, x0
   11724:	add	x9, x9, #0x3
   11728:	mov	x24, x0
   1172c:	cmp	x9, x8
   11730:	b.ls	11378 <xre_compile_pattern@@Base+0x4f0>  // b.plast
   11734:	cmp	x8, #0x10, lsl #12
   11738:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   1173c:	lsl	x8, x8, #1
   11740:	cmp	x8, #0x10, lsl #12
   11744:	mov	w9, #0x10000               	// #65536
   11748:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1174c:	mov	x0, x24
   11750:	str	x1, [x20, #8]
   11754:	bl	5150 <realloc@plt>
   11758:	str	x0, [x20]
   1175c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11760:	cmp	x24, x0
   11764:	b.eq	1171c <xre_compile_pattern@@Base+0x894>  // b.none
   11768:	sub	x8, x0, x24
   1176c:	cmp	x22, #0x0
   11770:	add	x9, x22, x8
   11774:	add	x23, x23, x8
   11778:	add	x19, x19, x8
   1177c:	add	x8, x28, x8
   11780:	csel	x22, xzr, x9, eq  // eq = none
   11784:	cmp	x28, #0x0
   11788:	csel	x28, xzr, x8, eq  // eq = none
   1178c:	b	1171c <xre_compile_pattern@@Base+0x894>
   11790:	ldur	x21, [x29, #-168]
   11794:	mov	w8, #0x3                   	// #3
   11798:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   1179c:	mov	w21, #0x7b                  	// #123
   117a0:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   117a4:	mov	w21, wzr
   117a8:	b	127e0 <xre_compile_pattern@@Base+0x1958>
   117ac:	ldur	x21, [x29, #-168]
   117b0:	mov	w26, #0x10000               	// #65536
   117b4:	sub	w8, w23, w19
   117b8:	cmp	x23, x19
   117bc:	add	w8, w8, #0x3
   117c0:	b.eq	117d8 <xre_compile_pattern@@Base+0x950>  // b.none
   117c4:	mov	x9, x23
   117c8:	ldrb	w10, [x9, #-1]!
   117cc:	cmp	x19, x9
   117d0:	strb	w10, [x9, #3]
   117d4:	b.ne	117c8 <xre_compile_pattern@@Base+0x940>  // b.any
   117d8:	ldur	x24, [x29, #-152]
   117dc:	mov	w9, #0xf                   	// #15
   117e0:	strb	w8, [x19, #1]
   117e4:	lsr	w8, w8, #8
   117e8:	strb	w9, [x19]
   117ec:	strb	w8, [x19, #2]
   117f0:	add	x19, x23, #0x3
   117f4:	cbz	x22, 11814 <xre_compile_pattern@@Base+0x98c>
   117f8:	sub	w8, w19, w22
   117fc:	sub	w8, w8, #0x3
   11800:	mov	w9, #0xe                   	// #14
   11804:	strb	w8, [x22, #1]
   11808:	lsr	w8, w8, #8
   1180c:	strb	w9, [x22]
   11810:	strb	w8, [x22, #2]
   11814:	ldp	x23, x8, [x20]
   11818:	mov	x22, x19
   1181c:	sub	x9, x19, x23
   11820:	add	x9, x9, #0x3
   11824:	cmp	x9, x8
   11828:	b.ls	1188c <xre_compile_pattern@@Base+0xa04>  // b.plast
   1182c:	cmp	x8, #0x10, lsl #12
   11830:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   11834:	lsl	x8, x8, #1
   11838:	cmp	x8, #0x10, lsl #12
   1183c:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   11840:	mov	x0, x23
   11844:	str	x1, [x20, #8]
   11848:	bl	5150 <realloc@plt>
   1184c:	str	x0, [x20]
   11850:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11854:	sub	x9, x0, x23
   11858:	cmp	x22, #0x0
   1185c:	add	x10, x19, x9
   11860:	add	x9, x22, x9
   11864:	ldr	x8, [x25]
   11868:	csel	x9, xzr, x9, eq  // eq = none
   1186c:	cmp	x23, x0
   11870:	csel	x19, x19, x10, eq  // eq = none
   11874:	csel	x22, x22, x9, eq  // eq = none
   11878:	sub	x9, x19, x0
   1187c:	add	x9, x9, #0x3
   11880:	cmp	x9, x8
   11884:	mov	x23, x0
   11888:	b.hi	1182c <xre_compile_pattern@@Base+0x9a4>  // b.pmore
   1188c:	add	x19, x19, #0x3
   11890:	mov	x28, xzr
   11894:	mov	x27, xzr
   11898:	mov	x23, x19
   1189c:	b	13184 <xre_compile_pattern@@Base+0x22fc>
   118a0:	cmp	w8, #0x29
   118a4:	b.eq	118d4 <xre_compile_pattern@@Base+0xa4c>  // b.none
   118a8:	ldur	x11, [x29, #-160]
   118ac:	tbnz	w11, #15, 118cc <xre_compile_pattern@@Base+0xa44>
   118b0:	cmp	x10, x21
   118b4:	mov	w21, #0x24                  	// #36
   118b8:	b.cs	130f4 <xre_compile_pattern@@Base+0x226c>  // b.hs, b.nlast
   118bc:	cmp	w8, #0x5c
   118c0:	b.ne	130f4 <xre_compile_pattern@@Base+0x226c>  // b.any
   118c4:	ldrb	w8, [x9]
   118c8:	ldur	x21, [x29, #-168]
   118cc:	cmp	w8, #0x7c
   118d0:	b.ne	126d8 <xre_compile_pattern@@Base+0x1850>  // b.any
   118d4:	ldp	x24, x8, [x20]
   118d8:	sub	x9, x23, x24
   118dc:	add	x9, x9, #0x1
   118e0:	cmp	x9, x8
   118e4:	b.ls	1196c <xre_compile_pattern@@Base+0xae4>  // b.plast
   118e8:	mov	w26, #0x10000               	// #65536
   118ec:	b	11908 <xre_compile_pattern@@Base+0xa80>
   118f0:	ldr	x8, [x25]
   118f4:	sub	x9, x23, x0
   118f8:	add	x9, x9, #0x1
   118fc:	mov	x24, x0
   11900:	cmp	x9, x8
   11904:	b.ls	1196c <xre_compile_pattern@@Base+0xae4>  // b.plast
   11908:	cmp	x8, #0x10, lsl #12
   1190c:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   11910:	lsl	x8, x8, #1
   11914:	cmp	x8, #0x10, lsl #12
   11918:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   1191c:	mov	x0, x24
   11920:	str	x1, [x20, #8]
   11924:	bl	5150 <realloc@plt>
   11928:	str	x0, [x20]
   1192c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11930:	cmp	x24, x0
   11934:	b.eq	118f0 <xre_compile_pattern@@Base+0xa68>  // b.none
   11938:	sub	x8, x0, x24
   1193c:	cmp	x22, #0x0
   11940:	add	x9, x22, x8
   11944:	add	x10, x28, x8
   11948:	csel	x22, xzr, x9, eq  // eq = none
   1194c:	cmp	x28, #0x0
   11950:	add	x23, x23, x8
   11954:	add	x19, x19, x8
   11958:	add	x8, x27, x8
   1195c:	csel	x28, xzr, x10, eq  // eq = none
   11960:	cmp	x27, #0x0
   11964:	csel	x27, xzr, x8, eq  // eq = none
   11968:	b	118f0 <xre_compile_pattern@@Base+0xa68>
   1196c:	ldur	x24, [x29, #-152]
   11970:	mov	w8, #0xa                   	// #10
   11974:	strb	w8, [x23], #1
   11978:	b	13184 <xre_compile_pattern@@Base+0x22fc>
   1197c:	mov	w8, wzr
   11980:	ldrb	w10, [x9]
   11984:	ldr	x9, [sp, #120]
   11988:	cmp	w10, #0x28
   1198c:	b.eq	1199c <xre_compile_pattern@@Base+0xb14>  // b.none
   11990:	cmp	w10, #0x7c
   11994:	b.ne	11a58 <xre_compile_pattern@@Base+0xbd0>  // b.any
   11998:	ldr	x9, [sp, #112]
   1199c:	and	w9, w9, #0x1
   119a0:	orr	w8, w9, w8
   119a4:	cbz	w8, 11a58 <xre_compile_pattern@@Base+0xbd0>
   119a8:	ldp	x24, x8, [x20]
   119ac:	sub	x9, x23, x24
   119b0:	add	x9, x9, #0x1
   119b4:	cmp	x9, x8
   119b8:	b.ls	11a44 <xre_compile_pattern@@Base+0xbbc>  // b.plast
   119bc:	ldur	x21, [x29, #-168]
   119c0:	mov	w26, #0x10000               	// #65536
   119c4:	b	119e0 <xre_compile_pattern@@Base+0xb58>
   119c8:	ldr	x8, [x25]
   119cc:	sub	x9, x23, x0
   119d0:	add	x9, x9, #0x1
   119d4:	mov	x24, x0
   119d8:	cmp	x9, x8
   119dc:	b.ls	11a48 <xre_compile_pattern@@Base+0xbc0>  // b.plast
   119e0:	cmp	x8, #0x10, lsl #12
   119e4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   119e8:	lsl	x8, x8, #1
   119ec:	cmp	x8, #0x10, lsl #12
   119f0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   119f4:	mov	x0, x24
   119f8:	str	x1, [x20, #8]
   119fc:	bl	5150 <realloc@plt>
   11a00:	str	x0, [x20]
   11a04:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11a08:	cmp	x24, x0
   11a0c:	b.eq	119c8 <xre_compile_pattern@@Base+0xb40>  // b.none
   11a10:	sub	x8, x0, x24
   11a14:	cmp	x22, #0x0
   11a18:	add	x9, x22, x8
   11a1c:	add	x10, x28, x8
   11a20:	csel	x22, xzr, x9, eq  // eq = none
   11a24:	cmp	x28, #0x0
   11a28:	add	x23, x23, x8
   11a2c:	add	x19, x19, x8
   11a30:	add	x8, x27, x8
   11a34:	csel	x28, xzr, x10, eq  // eq = none
   11a38:	cmp	x27, #0x0
   11a3c:	csel	x27, xzr, x8, eq  // eq = none
   11a40:	b	119c8 <xre_compile_pattern@@Base+0xb40>
   11a44:	ldur	x21, [x29, #-168]
   11a48:	mov	w8, #0x9                   	// #9
   11a4c:	strb	w8, [x23], #1
   11a50:	ldur	x24, [x29, #-152]
   11a54:	b	13184 <xre_compile_pattern@@Base+0x22fc>
   11a58:	mov	w21, #0x5e                  	// #94
   11a5c:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   11a60:	cmp	w8, #0x2c
   11a64:	add	x14, x10, #0x1
   11a68:	b.ne	12780 <xre_compile_pattern@@Base+0x18f8>  // b.any
   11a6c:	ldr	x8, [sp, #168]
   11a70:	cmp	x8, x10
   11a74:	b.eq	13074 <xre_compile_pattern@@Base+0x21ec>  // b.none
   11a78:	mov	w21, #0xffffffff            	// #-1
   11a7c:	mov	x9, x14
   11a80:	b	11a94 <xre_compile_pattern@@Base+0xc0c>
   11a84:	ldur	x10, [x29, #-168]
   11a88:	mov	x14, x9
   11a8c:	cmp	x10, x9
   11a90:	b.eq	13088 <xre_compile_pattern@@Base+0x2200>  // b.none
   11a94:	ldrb	w8, [x9], #1
   11a98:	cbz	x24, 11aa0 <xre_compile_pattern@@Base+0xc18>
   11a9c:	ldrb	w8, [x24, x8]
   11aa0:	sub	w10, w8, #0x30
   11aa4:	cmp	w10, #0x9
   11aa8:	b.hi	13080 <xre_compile_pattern@@Base+0x21f8>  // b.pmore
   11aac:	cmp	w21, #0x8, lsl #12
   11ab0:	b.ge	11a84 <xre_compile_pattern@@Base+0xbfc>  // b.tcont
   11ab4:	bic	w10, w21, w21, asr #31
   11ab8:	mov	w11, #0xa                   	// #10
   11abc:	madd	w10, w10, w11, w8
   11ac0:	sub	w21, w10, #0x30
   11ac4:	b	11a84 <xre_compile_pattern@@Base+0xbfc>
   11ac8:	mov	x14, x12
   11acc:	mov	w21, w26
   11ad0:	b	13094 <xre_compile_pattern@@Base+0x220c>
   11ad4:	mov	x24, x0
   11ad8:	sub	x9, x23, x24
   11adc:	add	x9, x9, #0x1
   11ae0:	cmp	x9, x8
   11ae4:	mov	x28, x23
   11ae8:	b.hi	11b4c <xre_compile_pattern@@Base+0xcc4>  // b.pmore
   11aec:	ldrb	w8, [x26, #1]
   11af0:	ldur	x11, [x29, #-144]
   11af4:	add	x10, x26, #0x2
   11af8:	cmp	w8, #0x5e
   11afc:	mov	w8, #0x4                   	// #4
   11b00:	cinc	w8, w8, eq  // eq = none
   11b04:	strb	w8, [x23], #1
   11b08:	ldrb	w9, [x26, #1]
   11b0c:	ldp	x24, x8, [x20]
   11b10:	cmp	w9, #0x5e
   11b14:	sub	x9, x23, x24
   11b18:	add	x9, x9, #0x1
   11b1c:	csel	x10, x10, x11, eq  // eq = none
   11b20:	cmp	x9, x8
   11b24:	stur	x10, [x29, #-144]
   11b28:	b.ls	11c34 <xre_compile_pattern@@Base+0xdac>  // b.plast
   11b2c:	ldur	x26, [x29, #-160]
   11b30:	b	11bcc <xre_compile_pattern@@Base+0xd44>
   11b34:	ldr	x8, [x25]
   11b38:	sub	x9, x23, x0
   11b3c:	add	x9, x9, #0x1
   11b40:	mov	x24, x0
   11b44:	cmp	x9, x8
   11b48:	b.ls	11aec <xre_compile_pattern@@Base+0xc64>  // b.plast
   11b4c:	cmp	x8, #0x10, lsl #12
   11b50:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   11b54:	lsl	x8, x8, #1
   11b58:	cmp	x8, #0x10, lsl #12
   11b5c:	mov	w9, #0x10000               	// #65536
   11b60:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11b64:	mov	x0, x24
   11b68:	str	x1, [x20, #8]
   11b6c:	bl	5150 <realloc@plt>
   11b70:	str	x0, [x20]
   11b74:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11b78:	cmp	x24, x0
   11b7c:	b.eq	11b34 <xre_compile_pattern@@Base+0xcac>  // b.none
   11b80:	sub	x8, x0, x24
   11b84:	cmp	x22, #0x0
   11b88:	add	x9, x22, x8
   11b8c:	add	x10, x28, x8
   11b90:	csel	x22, xzr, x9, eq  // eq = none
   11b94:	cmp	x28, #0x0
   11b98:	add	x23, x23, x8
   11b9c:	add	x19, x19, x8
   11ba0:	add	x8, x27, x8
   11ba4:	csel	x28, xzr, x10, eq  // eq = none
   11ba8:	cmp	x27, #0x0
   11bac:	csel	x27, xzr, x8, eq  // eq = none
   11bb0:	b	11b34 <xre_compile_pattern@@Base+0xcac>
   11bb4:	ldr	x8, [x25]
   11bb8:	sub	x9, x23, x0
   11bbc:	add	x9, x9, #0x1
   11bc0:	mov	x24, x0
   11bc4:	cmp	x9, x8
   11bc8:	b.ls	11c38 <xre_compile_pattern@@Base+0xdb0>  // b.plast
   11bcc:	cmp	x8, #0x10, lsl #12
   11bd0:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   11bd4:	lsl	x8, x8, #1
   11bd8:	cmp	x8, #0x10, lsl #12
   11bdc:	mov	w9, #0x10000               	// #65536
   11be0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   11be4:	mov	x0, x24
   11be8:	str	x1, [x20, #8]
   11bec:	bl	5150 <realloc@plt>
   11bf0:	str	x0, [x20]
   11bf4:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   11bf8:	cmp	x24, x0
   11bfc:	b.eq	11bb4 <xre_compile_pattern@@Base+0xd2c>  // b.none
   11c00:	sub	x8, x0, x24
   11c04:	cmp	x22, #0x0
   11c08:	add	x9, x22, x8
   11c0c:	add	x10, x28, x8
   11c10:	csel	x22, xzr, x9, eq  // eq = none
   11c14:	cmp	x28, #0x0
   11c18:	add	x23, x23, x8
   11c1c:	add	x19, x19, x8
   11c20:	add	x8, x27, x8
   11c24:	csel	x28, xzr, x10, eq  // eq = none
   11c28:	cmp	x27, #0x0
   11c2c:	csel	x27, xzr, x8, eq  // eq = none
   11c30:	b	11bb4 <xre_compile_pattern@@Base+0xd2c>
   11c34:	ldur	x26, [x29, #-160]
   11c38:	mov	x24, x23
   11c3c:	movi	v0.2d, #0x0
   11c40:	str	q0, [x24, #1]!
   11c44:	mov	w8, #0x20                  	// #32
   11c48:	strb	w8, [x23]
   11c4c:	stur	q0, [x23, #17]
   11c50:	tbz	w26, #8, 11c68 <xre_compile_pattern@@Base+0xde0>
   11c54:	ldurb	w8, [x23, #-1]
   11c58:	cmp	w8, #0x5
   11c5c:	b.ne	11c68 <xre_compile_pattern@@Base+0xde0>  // b.any
   11c60:	mov	w8, #0x4                   	// #4
   11c64:	strb	w8, [x23, #2]
   11c68:	ldur	x8, [x29, #-144]
   11c6c:	cmp	x8, x21
   11c70:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   11c74:	ldur	x16, [x29, #-144]
   11c78:	mov	w8, wzr
   11c7c:	add	x6, x23, #0x8
   11c80:	mov	w9, #0xffffffff            	// #-1
   11c84:	mov	w21, w9
   11c88:	mov	x10, x16
   11c8c:	b	11cb8 <xre_compile_pattern@@Base+0xe30>
   11c90:	lsr	x9, x21, #3
   11c94:	ldrb	w11, [x24, x9]
   11c98:	and	w12, w21, #0x7
   11c9c:	mov	w13, #0x1                   	// #1
   11ca0:	lsl	w12, w13, w12
   11ca4:	orr	w11, w11, w12
   11ca8:	ldur	x12, [x29, #-168]
   11cac:	strb	w11, [x24, x9]
   11cb0:	cmp	x12, x10
   11cb4:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   11cb8:	ldrb	w9, [x10]
   11cbc:	ldur	x11, [x29, #-152]
   11cc0:	cbz	x11, 11cc8 <xre_compile_pattern@@Base+0xe40>
   11cc4:	ldrb	w9, [x11, x9]
   11cc8:	tbz	w26, #0, 11cf8 <xre_compile_pattern@@Base+0xe70>
   11ccc:	cmp	w9, #0x5c
   11cd0:	b.ne	11cf8 <xre_compile_pattern@@Base+0xe70>  // b.any
   11cd4:	ldr	x9, [sp, #168]
   11cd8:	cmp	x9, x10
   11cdc:	b.eq	13704 <xre_compile_pattern@@Base+0x287c>  // b.none
   11ce0:	ldrb	w21, [x10, #1]
   11ce4:	ldur	x9, [x29, #-152]
   11ce8:	add	x10, x10, #0x2
   11cec:	cbz	x9, 11c90 <xre_compile_pattern@@Base+0xe08>
   11cf0:	ldrb	w21, [x9, x21]
   11cf4:	b	11c90 <xre_compile_pattern@@Base+0xe08>
   11cf8:	cmp	w9, #0x5d
   11cfc:	add	x16, x10, #0x1
   11d00:	b.ne	11d14 <xre_compile_pattern@@Base+0xe8c>  // b.any
   11d04:	ldur	x11, [x29, #-144]
   11d08:	cmp	x11, x10
   11d0c:	b.eq	11d7c <xre_compile_pattern@@Base+0xef4>  // b.none
   11d10:	b	136b4 <xre_compile_pattern@@Base+0x282c>
   11d14:	tst	w8, #0xff
   11d18:	b.eq	11d30 <xre_compile_pattern@@Base+0xea8>  // b.none
   11d1c:	cmp	w9, #0x2d
   11d20:	b.ne	11d30 <xre_compile_pattern@@Base+0xea8>  // b.any
   11d24:	ldrb	w11, [x16]
   11d28:	cmp	w11, #0x5d
   11d2c:	b.ne	13874 <xre_compile_pattern@@Base+0x29ec>  // b.any
   11d30:	cmp	w9, #0x2d
   11d34:	b.ne	11d7c <xre_compile_pattern@@Base+0xef4>  // b.any
   11d38:	ldr	x12, [sp, #136]
   11d3c:	sub	x11, x10, #0x1
   11d40:	cmp	x11, x12
   11d44:	b.cc	11d54 <xre_compile_pattern@@Base+0xecc>  // b.lo, b.ul, b.last
   11d48:	ldrb	w12, [x11]
   11d4c:	cmp	w12, #0x5b
   11d50:	b.eq	11d7c <xre_compile_pattern@@Base+0xef4>  // b.none
   11d54:	ldr	x13, [sp, #136]
   11d58:	sub	x12, x10, #0x2
   11d5c:	cmp	x12, x13
   11d60:	b.cc	11e80 <xre_compile_pattern@@Base+0xff8>  // b.lo, b.ul, b.last
   11d64:	ldrb	w12, [x12]
   11d68:	cmp	w12, #0x5b
   11d6c:	b.ne	11e80 <xre_compile_pattern@@Base+0xff8>  // b.any
   11d70:	ldrb	w11, [x11]
   11d74:	cmp	w11, #0x5e
   11d78:	b.ne	11e80 <xre_compile_pattern@@Base+0xff8>  // b.any
   11d7c:	ldrb	w12, [x16]
   11d80:	cmp	w12, #0x2d
   11d84:	b.ne	11d94 <xre_compile_pattern@@Base+0xf0c>  // b.any
   11d88:	ldrb	w11, [x10, #2]
   11d8c:	cmp	x11, #0x5d
   11d90:	b.ne	11e3c <xre_compile_pattern@@Base+0xfb4>  // b.any
   11d94:	tbz	w26, #2, 11e8c <xre_compile_pattern@@Base+0x1004>
   11d98:	cmp	w9, #0x5b
   11d9c:	b.ne	11e8c <xre_compile_pattern@@Base+0x1004>  // b.any
   11da0:	cmp	w12, #0x2e
   11da4:	b.eq	11f3c <xre_compile_pattern@@Base+0x10b4>  // b.none
   11da8:	cmp	w12, #0x3d
   11dac:	b.eq	11fb4 <xre_compile_pattern@@Base+0x112c>  // b.none
   11db0:	cmp	w12, #0x3a
   11db4:	b.ne	11e8c <xre_compile_pattern@@Base+0x1004>  // b.any
   11db8:	ldr	x8, [sp, #168]
   11dbc:	cmp	x8, x10
   11dc0:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   11dc4:	ldr	x8, [sp, #104]
   11dc8:	cmp	x8, x10
   11dcc:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   11dd0:	mov	w11, wzr
   11dd4:	add	x8, x10, #0x2
   11dd8:	mov	x10, x8
   11ddc:	ldrb	w9, [x10], #1
   11de0:	ldur	x12, [x29, #-152]
   11de4:	cbz	x12, 11dec <xre_compile_pattern@@Base+0xf64>
   11de8:	ldrb	w9, [x12, x9]
   11dec:	cmp	w9, #0x3a
   11df0:	b.ne	11e00 <xre_compile_pattern@@Base+0xf78>  // b.any
   11df4:	ldrb	w12, [x8, #1]
   11df8:	cmp	w12, #0x5d
   11dfc:	b.eq	120d0 <xre_compile_pattern@@Base+0x1248>  // b.none
   11e00:	ldr	x12, [sp, #168]
   11e04:	cmp	x12, x8
   11e08:	b.eq	12030 <xre_compile_pattern@@Base+0x11a8>  // b.none
   11e0c:	and	w12, w11, #0xff
   11e10:	cmp	w12, #0x5
   11e14:	b.ls	11e24 <xre_compile_pattern@@Base+0xf9c>  // b.plast
   11e18:	sturb	wzr, [x29, #-136]
   11e1c:	mov	x8, x10
   11e20:	b	11dd8 <xre_compile_pattern@@Base+0xf50>
   11e24:	and	x10, x11, #0xff
   11e28:	add	w11, w11, #0x1
   11e2c:	sub	x12, x29, #0x88
   11e30:	strb	w9, [x12, x10]
   11e34:	add	x8, x8, #0x1
   11e38:	b	11dd8 <xre_compile_pattern@@Base+0xf50>
   11e3c:	ldr	x12, [sp, #168]
   11e40:	cmp	x12, x10
   11e44:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   11e48:	ldr	x12, [sp, #104]
   11e4c:	ldur	x14, [x29, #-168]
   11e50:	cmp	x12, x10
   11e54:	b.eq	13874 <xre_compile_pattern@@Base+0x29ec>  // b.none
   11e58:	add	x16, x10, #0x3
   11e5c:	ldur	x10, [x29, #-152]
   11e60:	cbz	x10, 11e6c <xre_compile_pattern@@Base+0xfe4>
   11e64:	ldrb	w9, [x10, w9, uxtw]
   11e68:	ldrb	w11, [x10, x11]
   11e6c:	cmp	w9, w11
   11e70:	b.ls	11ebc <xre_compile_pattern@@Base+0x1034>  // b.plast
   11e74:	tbnz	w26, #16, 13874 <xre_compile_pattern@@Base+0x29ec>
   11e78:	mov	w9, #0xffffffff            	// #-1
   11e7c:	b	11eb0 <xre_compile_pattern@@Base+0x1028>
   11e80:	ldrb	w11, [x16]
   11e84:	cmp	x11, #0x5d
   11e88:	b.ne	11f04 <xre_compile_pattern@@Base+0x107c>  // b.any
   11e8c:	lsr	x10, x9, #3
   11e90:	ldrb	w11, [x24, x10]
   11e94:	and	w12, w9, #0x7
   11e98:	mov	w13, #0x1                   	// #1
   11e9c:	lsl	w12, w13, w12
   11ea0:	mov	w8, wzr
   11ea4:	orr	w11, w11, w12
   11ea8:	strb	w11, [x24, x10]
   11eac:	ldur	x14, [x29, #-168]
   11eb0:	cmp	x16, x14
   11eb4:	b.ne	11c84 <xre_compile_pattern@@Base+0xdfc>  // b.any
   11eb8:	b	13804 <xre_compile_pattern@@Base+0x297c>
   11ebc:	add	w10, w11, #0x1
   11ec0:	b	11ef0 <xre_compile_pattern@@Base+0x1068>
   11ec4:	ldrb	w11, [x12, x11]
   11ec8:	and	w12, w11, #0x7
   11ecc:	lsr	x11, x11, #3
   11ed0:	ldrb	w13, [x24, x11]
   11ed4:	mov	w15, #0x1                   	// #1
   11ed8:	lsl	w12, w15, w12
   11edc:	add	w9, w9, #0x1
   11ee0:	orr	w12, w13, w12
   11ee4:	cmp	w10, w9
   11ee8:	strb	w12, [x24, x11]
   11eec:	b.eq	11e78 <xre_compile_pattern@@Base+0xff0>  // b.none
   11ef0:	ldur	x12, [x29, #-152]
   11ef4:	and	x11, x9, #0xff
   11ef8:	cbnz	x12, 11ec4 <xre_compile_pattern@@Base+0x103c>
   11efc:	and	w12, w9, #0x7
   11f00:	b	11ecc <xre_compile_pattern@@Base+0x1044>
   11f04:	ldr	x9, [sp, #168]
   11f08:	cmp	x9, x10
   11f0c:	b.eq	13874 <xre_compile_pattern@@Base+0x29ec>  // b.none
   11f10:	add	x16, x10, #0x2
   11f14:	ldur	x10, [x29, #-152]
   11f18:	and	x9, x21, #0xff
   11f1c:	cbz	x10, 11f28 <xre_compile_pattern@@Base+0x10a0>
   11f20:	ldrb	w9, [x10, x9]
   11f24:	ldrb	w11, [x10, x11]
   11f28:	cmp	w9, w11
   11f2c:	b.ls	12084 <xre_compile_pattern@@Base+0x11fc>  // b.plast
   11f30:	tbnz	w26, #16, 13874 <xre_compile_pattern@@Base+0x29ec>
   11f34:	mov	w9, #0xffffffff            	// #-1
   11f38:	b	11eac <xre_compile_pattern@@Base+0x1024>
   11f3c:	ldr	x8, [sp, #168]
   11f40:	cmp	x8, x10
   11f44:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   11f48:	ldr	x8, [sp, #104]
   11f4c:	ldur	x14, [x29, #-168]
   11f50:	cmp	x8, x10
   11f54:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   11f58:	mov	w9, wzr
   11f5c:	add	x8, x10, #0x2
   11f60:	add	x8, x8, #0x1
   11f64:	ldurb	w10, [x8, #-1]
   11f68:	ldur	x11, [x29, #-152]
   11f6c:	cbz	x11, 11f74 <xre_compile_pattern@@Base+0x10ec>
   11f70:	ldrb	w10, [x11, x10]
   11f74:	cmp	w10, #0x2e
   11f78:	b.ne	11f88 <xre_compile_pattern@@Base+0x1100>  // b.any
   11f7c:	ldrb	w11, [x8]
   11f80:	cmp	w11, #0x5d
   11f84:	b.eq	12540 <xre_compile_pattern@@Base+0x16b8>  // b.none
   11f88:	cmp	x14, x8
   11f8c:	b.eq	1204c <xre_compile_pattern@@Base+0x11c4>  // b.none
   11f90:	sxtb	w11, w9
   11f94:	tbz	w11, #31, 11fa0 <xre_compile_pattern@@Base+0x1118>
   11f98:	sturb	wzr, [x29, #-136]
   11f9c:	b	11f60 <xre_compile_pattern@@Base+0x10d8>
   11fa0:	and	x11, x9, #0xff
   11fa4:	sub	x12, x29, #0x88
   11fa8:	add	w9, w9, #0x1
   11fac:	strb	w10, [x12, x11]
   11fb0:	b	11f60 <xre_compile_pattern@@Base+0x10d8>
   11fb4:	ldr	x8, [sp, #168]
   11fb8:	cmp	x8, x10
   11fbc:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   11fc0:	ldr	x8, [sp, #104]
   11fc4:	cmp	x8, x10
   11fc8:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   11fcc:	mov	w9, wzr
   11fd0:	add	x8, x10, #0x2
   11fd4:	add	x8, x8, #0x1
   11fd8:	ldurb	w10, [x8, #-1]
   11fdc:	ldur	x11, [x29, #-152]
   11fe0:	cbz	x11, 11fe8 <xre_compile_pattern@@Base+0x1160>
   11fe4:	ldrb	w10, [x11, x10]
   11fe8:	cmp	w10, #0x3d
   11fec:	b.ne	11ffc <xre_compile_pattern@@Base+0x1174>  // b.any
   11ff0:	ldrb	w11, [x8]
   11ff4:	cmp	w11, #0x5d
   11ff8:	b.eq	125e4 <xre_compile_pattern@@Base+0x175c>  // b.none
   11ffc:	ldur	x11, [x29, #-168]
   12000:	cmp	x11, x8
   12004:	b.eq	12068 <xre_compile_pattern@@Base+0x11e0>  // b.none
   12008:	and	w11, w9, #0xff
   1200c:	cmp	w11, #0xf
   12010:	b.ls	1201c <xre_compile_pattern@@Base+0x1194>  // b.plast
   12014:	sturb	wzr, [x29, #-136]
   12018:	b	11fd4 <xre_compile_pattern@@Base+0x114c>
   1201c:	and	x11, x9, #0xff
   12020:	add	w9, w9, #0x1
   12024:	sub	x12, x29, #0x88
   12028:	strb	w10, [x12, x11]
   1202c:	b	11fd4 <xre_compile_pattern@@Base+0x114c>
   12030:	and	x10, x11, #0xff
   12034:	cmp	w9, #0x3a
   12038:	sub	x9, x29, #0x88
   1203c:	strb	wzr, [x9, x10]
   12040:	ldur	x9, [x29, #-168]
   12044:	b.eq	120e0 <xre_compile_pattern@@Base+0x1258>  // b.none
   12048:	b	1250c <xre_compile_pattern@@Base+0x1684>
   1204c:	and	x11, x9, #0xff
   12050:	cmp	w10, #0x2e
   12054:	sub	x10, x29, #0x88
   12058:	strb	wzr, [x10, x11]
   1205c:	mov	x10, x14
   12060:	b.eq	12550 <xre_compile_pattern@@Base+0x16c8>  // b.none
   12064:	b	125a8 <xre_compile_pattern@@Base+0x1720>
   12068:	and	x11, x9, #0xff
   1206c:	cmp	w10, #0x3d
   12070:	sub	x10, x29, #0x88
   12074:	strb	wzr, [x10, x11]
   12078:	ldur	x10, [x29, #-168]
   1207c:	b.eq	125f4 <xre_compile_pattern@@Base+0x176c>  // b.none
   12080:	b	1264c <xre_compile_pattern@@Base+0x17c4>
   12084:	ldur	x14, [x29, #-168]
   12088:	add	w10, w11, #0x1
   1208c:	b	120bc <xre_compile_pattern@@Base+0x1234>
   12090:	ldrb	w11, [x12, x11]
   12094:	and	w12, w11, #0x7
   12098:	lsr	x11, x11, #3
   1209c:	ldrb	w13, [x24, x11]
   120a0:	mov	w15, #0x1                   	// #1
   120a4:	lsl	w12, w15, w12
   120a8:	add	w9, w9, #0x1
   120ac:	orr	w12, w13, w12
   120b0:	cmp	w10, w9
   120b4:	strb	w12, [x24, x11]
   120b8:	b.eq	11e78 <xre_compile_pattern@@Base+0xff0>  // b.none
   120bc:	ldur	x12, [x29, #-152]
   120c0:	and	x11, x9, #0xff
   120c4:	cbnz	x12, 12090 <xre_compile_pattern@@Base+0x1208>
   120c8:	and	w12, w9, #0x7
   120cc:	b	12098 <xre_compile_pattern@@Base+0x1210>
   120d0:	and	x9, x11, #0xff
   120d4:	sub	x10, x29, #0x88
   120d8:	strb	wzr, [x10, x9]
   120dc:	add	x9, x8, #0x1
   120e0:	ldrb	w10, [x9]
   120e4:	cmp	w10, #0x5d
   120e8:	b.ne	1250c <xre_compile_pattern@@Base+0x1684>  // b.any
   120ec:	ldur	w10, [x29, #-136]
   120f0:	ldurh	w11, [x29, #-132]
   120f4:	mov	w13, #0x6c61                	// #27745
   120f8:	movk	w13, #0x756e, lsl #16
   120fc:	mov	w14, #0x6d                  	// #109
   12100:	eor	w13, w10, w13
   12104:	eor	w14, w11, w14
   12108:	mov	w0, #0x6e63                	// #28259
   1210c:	mov	w4, #0x7267                	// #29287
   12110:	movk	w0, #0x7274, lsl #16
   12114:	mov	w1, #0x6c                  	// #108
   12118:	movk	w4, #0x7061, lsl #16
   1211c:	orr	w13, w13, w14
   12120:	mov	w14, #0x68                  	// #104
   12124:	eor	w0, w10, w0
   12128:	eor	w1, w11, w1
   1212c:	eor	w4, w10, w4
   12130:	eor	w14, w11, w14
   12134:	mov	w2, #0x6964                	// #26980
   12138:	orr	w0, w0, w1
   1213c:	mov	w1, #0x7270                	// #29296
   12140:	orr	w14, w4, w14
   12144:	mov	w4, #0x7570                	// #30064
   12148:	mov	w17, #0x6c62                	// #27746
   1214c:	movk	w2, #0x6967, lsl #16
   12150:	mov	w3, #0x74                  	// #116
   12154:	movk	w1, #0x6e69, lsl #16
   12158:	movk	w4, #0x636e, lsl #16
   1215c:	movk	w17, #0x6e61, lsl #16
   12160:	mov	w18, #0x6b                  	// #107
   12164:	eor	w2, w10, w2
   12168:	eor	w3, w11, w3
   1216c:	eor	w1, w10, w1
   12170:	eor	w4, w10, w4
   12174:	mov	w15, #0x6c61                	// #27745
   12178:	eor	w17, w10, w17
   1217c:	eor	w18, w11, w18
   12180:	orr	w2, w2, w3
   12184:	orr	w1, w1, w3
   12188:	orr	w3, w4, w3
   1218c:	mov	w4, #0x7073                	// #28787
   12190:	movk	w15, #0x6870, lsl #16
   12194:	mov	w16, #0x61                  	// #97
   12198:	orr	w17, w17, w18
   1219c:	mov	w18, #0x72                  	// #114
   121a0:	movk	w4, #0x6361, lsl #16
   121a4:	mov	w5, #0x65                  	// #101
   121a8:	eor	w15, w10, w15
   121ac:	eor	w16, w11, w16
   121b0:	eor	w18, w11, w18
   121b4:	eor	w4, w10, w4
   121b8:	eor	w11, w11, w5
   121bc:	orr	w15, w15, w16
   121c0:	mov	w16, #0x6f6c                	// #28524
   121c4:	orr	w11, w4, w11
   121c8:	mov	w4, #0x7075                	// #28789
   121cc:	movk	w16, #0x6577, lsl #16
   121d0:	movk	w4, #0x6570, lsl #16
   121d4:	eor	w16, w10, w16
   121d8:	eor	w4, w10, w4
   121dc:	ldur	w12, [x29, #-133]
   121e0:	orr	w16, w16, w18
   121e4:	orr	w18, w4, w18
   121e8:	mov	w4, #0x6478                	// #25720
   121ec:	movk	w4, #0x6769, lsl #16
   121f0:	eor	w10, w10, w4
   121f4:	mov	w4, #0x6967                	// #26983
   121f8:	movk	w4, #0x74, lsl #16
   121fc:	eor	w12, w12, w4
   12200:	cmp	w13, #0x0
   12204:	orr	w10, w10, w12
   12208:	cset	w12, ne  // ne = any
   1220c:	cmp	w15, #0x0
   12210:	str	w12, [sp, #72]
   12214:	cset	w12, ne  // ne = any
   12218:	cmp	w17, #0x0
   1221c:	str	w12, [sp, #52]
   12220:	cset	w12, ne  // ne = any
   12224:	cmp	w0, #0x0
   12228:	str	w12, [sp, #40]
   1222c:	cset	w12, ne  // ne = any
   12230:	cmp	w2, #0x0
   12234:	str	w12, [sp, #32]
   12238:	cset	w12, ne  // ne = any
   1223c:	cmp	w14, #0x0
   12240:	str	w12, [sp, #68]
   12244:	cset	w12, ne  // ne = any
   12248:	cmp	w16, #0x0
   1224c:	str	w12, [sp, #60]
   12250:	cset	w12, ne  // ne = any
   12254:	cmp	w1, #0x0
   12258:	str	w12, [sp, #48]
   1225c:	cset	w12, ne  // ne = any
   12260:	cmp	w3, #0x0
   12264:	str	w12, [sp, #36]
   12268:	cset	w12, ne  // ne = any
   1226c:	cmp	w11, #0x0
   12270:	cset	w11, ne  // ne = any
   12274:	cmp	w18, #0x0
   12278:	str	w11, [sp, #56]
   1227c:	cset	w11, ne  // ne = any
   12280:	cmp	w10, #0x0
   12284:	cset	w10, ne  // ne = any
   12288:	str	w12, [sp, #76]
   1228c:	str	w11, [sp, #44]
   12290:	str	w10, [sp, #28]
   12294:	cbz	w17, 122f0 <xre_compile_pattern@@Base+0x1468>
   12298:	ldr	w10, [sp, #32]
   1229c:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122a0:	ldr	w10, [sp, #60]
   122a4:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122a8:	ldr	w10, [sp, #76]
   122ac:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122b0:	ldr	w10, [sp, #36]
   122b4:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122b8:	ldr	w10, [sp, #56]
   122bc:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122c0:	ldr	w10, [sp, #28]
   122c4:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122c8:	ldr	w10, [sp, #72]
   122cc:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122d0:	ldr	w10, [sp, #68]
   122d4:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122d8:	ldr	w10, [sp, #48]
   122dc:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122e0:	ldr	w10, [sp, #52]
   122e4:	cbz	w10, 122f0 <xre_compile_pattern@@Base+0x1468>
   122e8:	ldr	w10, [sp, #44]
   122ec:	cbnz	w10, 138ac <xre_compile_pattern@@Base+0x2a24>
   122f0:	ldur	x10, [x29, #-168]
   122f4:	cmp	x9, x10
   122f8:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   122fc:	ldr	x9, [sp, #104]
   12300:	str	x6, [sp, #16]
   12304:	cmp	x9, x8
   12308:	b.eq	13804 <xre_compile_pattern@@Base+0x297c>  // b.none
   1230c:	add	x8, x8, #0x2
   12310:	str	x8, [sp, #8]
   12314:	ldp	w8, w9, [sp, #44]
   12318:	ldur	x10, [x29, #-152]
   1231c:	mov	x26, xzr
   12320:	cmp	w8, #0x0
   12324:	cset	w8, eq  // eq = none
   12328:	cmp	w9, #0x0
   1232c:	cset	w9, eq  // eq = none
   12330:	cmp	x10, #0x0
   12334:	cset	w10, ne  // ne = any
   12338:	orr	w8, w9, w8
   1233c:	and	w8, w10, w8
   12340:	str	w8, [sp, #64]
   12344:	b	12354 <xre_compile_pattern@@Base+0x14cc>
   12348:	add	x26, x26, #0x1
   1234c:	cmp	x26, #0x100
   12350:	b.eq	1267c <xre_compile_pattern@@Base+0x17f4>  // b.none
   12354:	ubfx	x8, x26, #3, #29
   12358:	str	x8, [sp, #80]
   1235c:	ldr	w8, [sp, #72]
   12360:	cbnz	w8, 12374 <xre_compile_pattern@@Base+0x14ec>
   12364:	bl	5250 <__ctype_b_loc@plt>
   12368:	ldr	x8, [x0]
   1236c:	ldrh	w8, [x8, x26, lsl #1]
   12370:	tbnz	w8, #3, 123bc <xre_compile_pattern@@Base+0x1534>
   12374:	ldr	w8, [sp, #52]
   12378:	cbnz	w8, 1238c <xre_compile_pattern@@Base+0x1504>
   1237c:	bl	5250 <__ctype_b_loc@plt>
   12380:	ldr	x8, [x0]
   12384:	ldrh	w8, [x8, x26, lsl #1]
   12388:	tbnz	w8, #10, 123bc <xre_compile_pattern@@Base+0x1534>
   1238c:	ldr	w8, [sp, #40]
   12390:	cbnz	w8, 123a4 <xre_compile_pattern@@Base+0x151c>
   12394:	bl	5250 <__ctype_b_loc@plt>
   12398:	ldr	x8, [x0]
   1239c:	ldrh	w8, [x8, x26, lsl #1]
   123a0:	tbnz	w8, #0, 123bc <xre_compile_pattern@@Base+0x1534>
   123a4:	ldr	w8, [sp, #32]
   123a8:	cbnz	w8, 123d8 <xre_compile_pattern@@Base+0x1550>
   123ac:	bl	5250 <__ctype_b_loc@plt>
   123b0:	ldr	x8, [x0]
   123b4:	ldrh	w8, [x8, x26, lsl #1]
   123b8:	tbz	w8, #1, 123d8 <xre_compile_pattern@@Base+0x1550>
   123bc:	ldr	x11, [sp, #80]
   123c0:	and	w9, w26, #0x7
   123c4:	mov	w10, #0x1                   	// #1
   123c8:	lsl	w9, w10, w9
   123cc:	ldrb	w8, [x24, x11]
   123d0:	orr	w8, w8, w9
   123d4:	strb	w8, [x24, x11]
   123d8:	ldr	w8, [sp, #68]
   123dc:	cbnz	w8, 123f0 <xre_compile_pattern@@Base+0x1568>
   123e0:	bl	5250 <__ctype_b_loc@plt>
   123e4:	ldr	x8, [x0]
   123e8:	ldrh	w8, [x8, x26, lsl #1]
   123ec:	tbnz	w8, #11, 12438 <xre_compile_pattern@@Base+0x15b0>
   123f0:	ldr	w8, [sp, #60]
   123f4:	cbnz	w8, 12408 <xre_compile_pattern@@Base+0x1580>
   123f8:	bl	5250 <__ctype_b_loc@plt>
   123fc:	ldr	x8, [x0]
   12400:	ldrsh	w8, [x8, x26, lsl #1]
   12404:	tbnz	w8, #31, 12438 <xre_compile_pattern@@Base+0x15b0>
   12408:	ldr	w8, [sp, #48]
   1240c:	cbnz	w8, 12420 <xre_compile_pattern@@Base+0x1598>
   12410:	bl	5250 <__ctype_b_loc@plt>
   12414:	ldr	x8, [x0]
   12418:	ldrh	w8, [x8, x26, lsl #1]
   1241c:	tbnz	w8, #9, 12438 <xre_compile_pattern@@Base+0x15b0>
   12420:	ldr	w8, [sp, #36]
   12424:	cbnz	w8, 12454 <xre_compile_pattern@@Base+0x15cc>
   12428:	bl	5250 <__ctype_b_loc@plt>
   1242c:	ldr	x8, [x0]
   12430:	ldrh	w8, [x8, x26, lsl #1]
   12434:	tbz	w8, #14, 12454 <xre_compile_pattern@@Base+0x15cc>
   12438:	ldr	x11, [sp, #80]
   1243c:	and	w9, w26, #0x7
   12440:	mov	w10, #0x1                   	// #1
   12444:	lsl	w9, w10, w9
   12448:	ldrb	w8, [x24, x11]
   1244c:	orr	w8, w8, w9
   12450:	strb	w8, [x24, x11]
   12454:	ldr	w8, [sp, #76]
   12458:	cbnz	w8, 1246c <xre_compile_pattern@@Base+0x15e4>
   1245c:	bl	5250 <__ctype_b_loc@plt>
   12460:	ldr	x8, [x0]
   12464:	ldrh	w8, [x8, x26, lsl #1]
   12468:	tbnz	w8, #2, 124b4 <xre_compile_pattern@@Base+0x162c>
   1246c:	ldr	w8, [sp, #56]
   12470:	cbnz	w8, 12484 <xre_compile_pattern@@Base+0x15fc>
   12474:	bl	5250 <__ctype_b_loc@plt>
   12478:	ldr	x8, [x0]
   1247c:	ldrh	w8, [x8, x26, lsl #1]
   12480:	tbnz	w8, #13, 124b4 <xre_compile_pattern@@Base+0x162c>
   12484:	ldr	w8, [sp, #44]
   12488:	cbnz	w8, 1249c <xre_compile_pattern@@Base+0x1614>
   1248c:	bl	5250 <__ctype_b_loc@plt>
   12490:	ldr	x8, [x0]
   12494:	ldrh	w8, [x8, x26, lsl #1]
   12498:	tbnz	w8, #8, 124b4 <xre_compile_pattern@@Base+0x162c>
   1249c:	ldr	w8, [sp, #28]
   124a0:	cbnz	w8, 124d0 <xre_compile_pattern@@Base+0x1648>
   124a4:	bl	5250 <__ctype_b_loc@plt>
   124a8:	ldr	x8, [x0]
   124ac:	ldrh	w8, [x8, x26, lsl #1]
   124b0:	tbz	w8, #12, 124d0 <xre_compile_pattern@@Base+0x1648>
   124b4:	ldr	x11, [sp, #80]
   124b8:	and	w9, w26, #0x7
   124bc:	mov	w10, #0x1                   	// #1
   124c0:	lsl	w9, w10, w9
   124c4:	ldrb	w8, [x24, x11]
   124c8:	orr	w8, w8, w9
   124cc:	strb	w8, [x24, x11]
   124d0:	ldr	w8, [sp, #64]
   124d4:	cbz	w8, 12348 <xre_compile_pattern@@Base+0x14c0>
   124d8:	bl	5250 <__ctype_b_loc@plt>
   124dc:	ldr	x8, [x0]
   124e0:	ldrh	w8, [x8, x26, lsl #1]
   124e4:	tst	w8, #0x300
   124e8:	b.eq	12348 <xre_compile_pattern@@Base+0x14c0>  // b.none
   124ec:	ldr	x11, [sp, #80]
   124f0:	and	w9, w26, #0x7
   124f4:	mov	w10, #0x1                   	// #1
   124f8:	lsl	w9, w10, w9
   124fc:	ldrb	w8, [x24, x11]
   12500:	orr	w8, w8, w9
   12504:	strb	w8, [x24, x11]
   12508:	b	12348 <xre_compile_pattern@@Base+0x14c0>
   1250c:	mvn	w10, w11
   12510:	ldrb	w11, [x23, #12]
   12514:	ldrb	w12, [x23, #8]
   12518:	orr	x10, x10, #0xffffffffffffff00
   1251c:	add	x16, x10, x9
   12520:	orr	w9, w11, #0x8
   12524:	orr	w10, w12, #0x4
   12528:	mov	w21, #0x3a                  	// #58
   1252c:	mov	w8, wzr
   12530:	strb	w9, [x23, #12]
   12534:	strb	w10, [x23, #8]
   12538:	mov	w9, w21
   1253c:	b	11eac <xre_compile_pattern@@Base+0x1024>
   12540:	and	x10, x9, #0xff
   12544:	sub	x11, x29, #0x88
   12548:	strb	wzr, [x11, x10]
   1254c:	mov	x10, x8
   12550:	ldrb	w11, [x10]
   12554:	cmp	w11, #0x5d
   12558:	b.ne	125a8 <xre_compile_pattern@@Base+0x1720>  // b.any
   1255c:	ldurb	w11, [x29, #-136]
   12560:	cbz	w11, 125a8 <xre_compile_pattern@@Base+0x1720>
   12564:	and	w9, w9, #0xff
   12568:	cmp	w9, #0x1
   1256c:	b.ne	1389c <xre_compile_pattern@@Base+0x2a14>  // b.any
   12570:	cmp	x10, x14
   12574:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   12578:	lsr	x9, x11, #3
   1257c:	ldrb	w10, [x24, x9]
   12580:	and	w11, w11, #0x7
   12584:	mov	w12, #0x1                   	// #1
   12588:	lsl	w11, w12, w11
   1258c:	orr	w10, w10, w11
   12590:	strb	w10, [x24, x9]
   12594:	ldurb	w9, [x29, #-136]
   12598:	ldur	x26, [x29, #-160]
   1259c:	add	x16, x8, #0x1
   125a0:	mov	w8, wzr
   125a4:	b	11eb0 <xre_compile_pattern@@Base+0x1028>
   125a8:	mov	w11, #0xff                  	// #255
   125ac:	mvn	w8, w9
   125b0:	bics	wzr, w11, w9
   125b4:	ldrb	w9, [x23, #12]
   125b8:	ldrb	w11, [x23, #6]
   125bc:	orr	x8, x8, #0xffffffffffffff00
   125c0:	add	x8, x8, x10
   125c4:	csel	x16, x10, x8, eq  // eq = none
   125c8:	orr	w8, w9, #0x8
   125cc:	orr	w9, w11, #0x40
   125d0:	strb	w8, [x23, #12]
   125d4:	strb	w9, [x23, #6]
   125d8:	mov	w9, #0x2e                  	// #46
   125dc:	mov	w8, wzr
   125e0:	b	11eb0 <xre_compile_pattern@@Base+0x1028>
   125e4:	and	x10, x9, #0xff
   125e8:	sub	x11, x29, #0x88
   125ec:	strb	wzr, [x11, x10]
   125f0:	mov	x10, x8
   125f4:	ldrb	w11, [x10]
   125f8:	cmp	w11, #0x5d
   125fc:	b.ne	1264c <xre_compile_pattern@@Base+0x17c4>  // b.any
   12600:	ldurb	w11, [x29, #-136]
   12604:	cbz	w11, 1264c <xre_compile_pattern@@Base+0x17c4>
   12608:	and	w9, w9, #0xff
   1260c:	cmp	w9, #0x1
   12610:	b.ne	1389c <xre_compile_pattern@@Base+0x2a14>  // b.any
   12614:	ldur	x9, [x29, #-168]
   12618:	cmp	x10, x9
   1261c:	b.eq	13884 <xre_compile_pattern@@Base+0x29fc>  // b.none
   12620:	add	x9, x24, x11, lsr #3
   12624:	ldrb	w10, [x9]
   12628:	add	x16, x8, #0x1
   1262c:	and	w11, w11, #0x7
   12630:	mov	w8, #0x1                   	// #1
   12634:	ldur	x26, [x29, #-160]
   12638:	lsl	w11, w8, w11
   1263c:	orr	w10, w10, w11
   12640:	strb	w10, [x9]
   12644:	mov	w9, w21
   12648:	b	11eac <xre_compile_pattern@@Base+0x1024>
   1264c:	ldrb	w12, [x23, #12]
   12650:	ldrb	w13, [x23, #8]
   12654:	mvn	w11, w9
   12658:	orr	x11, x11, #0xffffffffffffff00
   1265c:	add	x16, x11, x10
   12660:	orr	w10, w12, #0x8
   12664:	orr	w11, w13, #0x20
   12668:	mov	w8, wzr
   1266c:	mov	w9, #0x3d                  	// #61
   12670:	strb	w10, [x23, #12]
   12674:	strb	w11, [x6]
   12678:	b	11eac <xre_compile_pattern@@Base+0x1024>
   1267c:	ldur	x26, [x29, #-160]
   12680:	ldp	x16, x6, [sp, #8]
   12684:	mov	w8, #0x1                   	// #1
   12688:	mov	w9, w21
   1268c:	b	11eac <xre_compile_pattern@@Base+0x1024>
   12690:	tbz	w21, #17, 13864 <xre_compile_pattern@@Base+0x29dc>
   12694:	mov	w21, #0x29                  	// #41
   12698:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   1269c:	mov	w9, #0x2e                  	// #46
   126a0:	ldur	x11, [x29, #-144]
   126a4:	cmp	x11, x21
   126a8:	b.cs	127b8 <xre_compile_pattern@@Base+0x1930>  // b.hs, b.nlast
   126ac:	cbz	w26, 127b8 <xre_compile_pattern@@Base+0x1930>
   126b0:	cmp	w9, w8
   126b4:	b.ne	127b8 <xre_compile_pattern@@Base+0x1930>  // b.any
   126b8:	ldur	x8, [x29, #-144]
   126bc:	ldrb	w8, [x8]
   126c0:	cbz	x10, 12794 <xre_compile_pattern@@Base+0x190c>
   126c4:	ldrb	w8, [x10, x8]
   126c8:	ldrb	w9, [x10, #10]
   126cc:	b	12798 <xre_compile_pattern@@Base+0x1910>
   126d0:	mov	x27, xzr
   126d4:	b	13180 <xre_compile_pattern@@Base+0x22f8>
   126d8:	mov	w21, #0x24                  	// #36
   126dc:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   126e0:	ldp	x24, x8, [x20]
   126e4:	mov	x28, x23
   126e8:	sub	x9, x23, x24
   126ec:	add	x9, x9, #0x2
   126f0:	cmp	x9, x8
   126f4:	b.ls	1297c <xre_compile_pattern@@Base+0x1af4>  // b.plast
   126f8:	ldur	x21, [x29, #-168]
   126fc:	b	12718 <xre_compile_pattern@@Base+0x1890>
   12700:	ldr	x8, [x25]
   12704:	sub	x9, x23, x0
   12708:	add	x9, x9, #0x2
   1270c:	mov	x24, x0
   12710:	cmp	x9, x8
   12714:	b.ls	12980 <xre_compile_pattern@@Base+0x1af8>  // b.plast
   12718:	cmp	x8, #0x10, lsl #12
   1271c:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12720:	lsl	x8, x8, #1
   12724:	cmp	x8, #0x10, lsl #12
   12728:	mov	w9, #0x10000               	// #65536
   1272c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   12730:	mov	x0, x24
   12734:	str	x1, [x20, #8]
   12738:	bl	5150 <realloc@plt>
   1273c:	str	x0, [x20]
   12740:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12744:	cmp	x24, x0
   12748:	b.eq	12700 <xre_compile_pattern@@Base+0x1878>  // b.none
   1274c:	sub	x8, x0, x24
   12750:	cmp	x22, #0x0
   12754:	add	x9, x22, x8
   12758:	add	x10, x28, x8
   1275c:	csel	x22, xzr, x9, eq  // eq = none
   12760:	cmp	x28, #0x0
   12764:	add	x23, x23, x8
   12768:	add	x19, x19, x8
   1276c:	add	x8, x27, x8
   12770:	csel	x28, xzr, x10, eq  // eq = none
   12774:	cmp	x27, #0x0
   12778:	csel	x27, xzr, x8, eq  // eq = none
   1277c:	b	12700 <xre_compile_pattern@@Base+0x1878>
   12780:	mov	w21, w26
   12784:	b	13094 <xre_compile_pattern@@Base+0x220c>
   12788:	ldur	x8, [x29, #-160]
   1278c:	tbnz	w8, #1, 110c8 <xre_compile_pattern@@Base+0x240>
   12790:	b	130ec <xre_compile_pattern@@Base+0x2264>
   12794:	mov	w9, #0xa                   	// #10
   12798:	ldur	x10, [x29, #-160]
   1279c:	tbnz	w10, #6, 127b8 <xre_compile_pattern@@Base+0x1930>
   127a0:	cmp	w9, w8
   127a4:	b.ne	127b8 <xre_compile_pattern@@Base+0x1930>  // b.any
   127a8:	mov	w21, #0x1                   	// #1
   127ac:	mov	w8, #0xd                   	// #13
   127b0:	mov	x9, x28
   127b4:	b	127c4 <xre_compile_pattern@@Base+0x193c>
   127b8:	mov	w21, wzr
   127bc:	sub	x9, x28, #0x3
   127c0:	mov	w8, #0x12                  	// #18
   127c4:	sub	w9, w9, w23
   127c8:	strb	w8, [x23]
   127cc:	sub	w8, w9, #0x3
   127d0:	strb	w8, [x23, #1]
   127d4:	lsr	w8, w8, #8
   127d8:	strb	w8, [x23, #2]
   127dc:	add	x23, x23, #0x3
   127e0:	ldp	x24, x8, [x20]
   127e4:	sub	x9, x23, x24
   127e8:	add	x9, x9, #0x3
   127ec:	cmp	x9, x8
   127f0:	b.hi	12860 <xre_compile_pattern@@Base+0x19d8>  // b.pmore
   127f4:	cmp	w21, #0x0
   127f8:	add	x21, x23, #0x3
   127fc:	mov	w8, #0xf                   	// #15
   12800:	sub	w9, w21, w28
   12804:	cinc	w8, w8, ne  // ne = any
   12808:	cmp	x23, x28
   1280c:	sub	w9, w9, #0x3
   12810:	b.eq	12824 <xre_compile_pattern@@Base+0x199c>  // b.none
   12814:	ldrb	w10, [x23, #-1]!
   12818:	cmp	x28, x23
   1281c:	strb	w10, [x23, #3]
   12820:	b.ne	12814 <xre_compile_pattern@@Base+0x198c>  // b.any
   12824:	ldur	x24, [x29, #-152]
   12828:	strb	w8, [x28]
   1282c:	lsr	w8, w9, #8
   12830:	strb	w9, [x28, #1]
   12834:	strb	w8, [x28, #2]
   12838:	cbz	w26, 128bc <xre_compile_pattern@@Base+0x1a34>
   1283c:	mov	x27, xzr
   12840:	mov	x23, x21
   12844:	b	13180 <xre_compile_pattern@@Base+0x22f8>
   12848:	ldr	x8, [x25]
   1284c:	sub	x9, x23, x0
   12850:	add	x9, x9, #0x3
   12854:	mov	x24, x0
   12858:	cmp	x9, x8
   1285c:	b.ls	127f4 <xre_compile_pattern@@Base+0x196c>  // b.plast
   12860:	cmp	x8, #0x10, lsl #12
   12864:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12868:	lsl	x8, x8, #1
   1286c:	cmp	x8, #0x10, lsl #12
   12870:	mov	w9, #0x10000               	// #65536
   12874:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   12878:	mov	x0, x24
   1287c:	str	x1, [x20, #8]
   12880:	bl	5150 <realloc@plt>
   12884:	str	x0, [x20]
   12888:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   1288c:	cmp	x24, x0
   12890:	b.eq	12848 <xre_compile_pattern@@Base+0x19c0>  // b.none
   12894:	sub	x8, x0, x24
   12898:	cmp	x22, #0x0
   1289c:	add	x9, x22, x8
   128a0:	add	x23, x23, x8
   128a4:	add	x19, x19, x8
   128a8:	add	x8, x28, x8
   128ac:	csel	x22, xzr, x9, eq  // eq = none
   128b0:	cmp	x28, #0x0
   128b4:	csel	x28, xzr, x8, eq  // eq = none
   128b8:	b	12848 <xre_compile_pattern@@Base+0x19c0>
   128bc:	ldp	x23, x8, [x20]
   128c0:	sub	x9, x21, x23
   128c4:	add	x9, x9, #0x3
   128c8:	cmp	x9, x8
   128cc:	b.ls	12948 <xre_compile_pattern@@Base+0x1ac0>  // b.plast
   128d0:	mov	w26, #0x10000               	// #65536
   128d4:	b	128f0 <xre_compile_pattern@@Base+0x1a68>
   128d8:	ldr	x8, [x25]
   128dc:	sub	x9, x21, x0
   128e0:	add	x9, x9, #0x3
   128e4:	mov	x23, x0
   128e8:	cmp	x9, x8
   128ec:	b.ls	12948 <xre_compile_pattern@@Base+0x1ac0>  // b.plast
   128f0:	cmp	x8, #0x10, lsl #12
   128f4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   128f8:	lsl	x8, x8, #1
   128fc:	cmp	x8, #0x10, lsl #12
   12900:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12904:	mov	x0, x23
   12908:	str	x1, [x20, #8]
   1290c:	bl	5150 <realloc@plt>
   12910:	str	x0, [x20]
   12914:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12918:	cmp	x23, x0
   1291c:	b.eq	128d8 <xre_compile_pattern@@Base+0x1a50>  // b.none
   12920:	sub	x8, x0, x23
   12924:	cmp	x22, #0x0
   12928:	add	x9, x22, x8
   1292c:	add	x21, x21, x8
   12930:	add	x19, x19, x8
   12934:	add	x8, x28, x8
   12938:	csel	x22, xzr, x9, eq  // eq = none
   1293c:	cmp	x28, #0x0
   12940:	csel	x28, xzr, x8, eq  // eq = none
   12944:	b	128d8 <xre_compile_pattern@@Base+0x1a50>
   12948:	cmp	x21, x28
   1294c:	b.eq	12964 <xre_compile_pattern@@Base+0x1adc>  // b.none
   12950:	mov	x8, x21
   12954:	ldrb	w9, [x8, #-1]!
   12958:	cmp	x28, x8
   1295c:	strb	w9, [x8, #3]
   12960:	b.ne	12954 <xre_compile_pattern@@Base+0x1acc>  // b.any
   12964:	mov	w8, #0x313                 	// #787
   12968:	mov	x27, xzr
   1296c:	strh	w8, [x28]
   12970:	strb	wzr, [x28, #2]
   12974:	add	x23, x21, #0x3
   12978:	b	13180 <xre_compile_pattern@@Base+0x22f8>
   1297c:	ldur	x21, [x29, #-168]
   12980:	ldur	x24, [x29, #-152]
   12984:	mov	w8, #0x8                   	// #8
   12988:	strb	w8, [x23]
   1298c:	add	x8, x23, #0x2
   12990:	strb	w26, [x23, #1]
   12994:	mov	x23, x8
   12998:	b	13184 <xre_compile_pattern@@Base+0x22fc>
   1299c:	ldur	x8, [x29, #-160]
   129a0:	tbnz	w8, #19, 134c8 <xre_compile_pattern@@Base+0x2640>
   129a4:	ldp	x24, x8, [x20]
   129a8:	sub	x9, x23, x24
   129ac:	add	x9, x9, #0x1
   129b0:	cmp	x9, x8
   129b4:	b.ls	135ac <xre_compile_pattern@@Base+0x2724>  // b.plast
   129b8:	ldur	x21, [x29, #-168]
   129bc:	mov	w26, #0x10000               	// #65536
   129c0:	b	129dc <xre_compile_pattern@@Base+0x1b54>
   129c4:	ldr	x8, [x25]
   129c8:	sub	x9, x23, x0
   129cc:	add	x9, x9, #0x1
   129d0:	mov	x24, x0
   129d4:	cmp	x9, x8
   129d8:	b.ls	13674 <xre_compile_pattern@@Base+0x27ec>  // b.plast
   129dc:	cmp	x8, #0x10, lsl #12
   129e0:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   129e4:	lsl	x8, x8, #1
   129e8:	cmp	x8, #0x10, lsl #12
   129ec:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   129f0:	mov	x0, x24
   129f4:	str	x1, [x20, #8]
   129f8:	bl	5150 <realloc@plt>
   129fc:	str	x0, [x20]
   12a00:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12a04:	cmp	x24, x0
   12a08:	b.eq	129c4 <xre_compile_pattern@@Base+0x1b3c>  // b.none
   12a0c:	sub	x8, x0, x24
   12a10:	cmp	x22, #0x0
   12a14:	add	x9, x22, x8
   12a18:	add	x10, x28, x8
   12a1c:	csel	x22, xzr, x9, eq  // eq = none
   12a20:	cmp	x28, #0x0
   12a24:	add	x23, x23, x8
   12a28:	add	x19, x19, x8
   12a2c:	add	x8, x27, x8
   12a30:	csel	x28, xzr, x10, eq  // eq = none
   12a34:	cmp	x27, #0x0
   12a38:	csel	x27, xzr, x8, eq  // eq = none
   12a3c:	b	129c4 <xre_compile_pattern@@Base+0x1b3c>
   12a40:	ldur	x8, [x29, #-160]
   12a44:	tbnz	w8, #13, 134d0 <xre_compile_pattern@@Base+0x2648>
   12a48:	ldr	x27, [sp, #160]
   12a4c:	ldr	x8, [x20, #48]
   12a50:	ldr	x26, [sp, #176]
   12a54:	lsr	x21, x27, #32
   12a58:	add	x8, x8, #0x1
   12a5c:	cmp	w21, w27
   12a60:	str	x8, [x20, #48]
   12a64:	b.ne	12a8c <xre_compile_pattern@@Base+0x1c04>  // b.any
   12a68:	lsl	w24, w27, #1
   12a6c:	add	x8, x24, w24, uxtw #2
   12a70:	lsl	x1, x8, #3
   12a74:	mov	x0, x26
   12a78:	bl	5150 <realloc@plt>
   12a7c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12a80:	and	x8, x27, #0xffffffff00000000
   12a84:	mov	x26, x0
   12a88:	orr	x27, x24, x8
   12a8c:	ldr	x24, [x20]
   12a90:	ldr	w12, [sp, #148]
   12a94:	mov	w13, #0x28                  	// #40
   12a98:	cmp	x22, #0x0
   12a9c:	sub	x11, x22, x24
   12aa0:	add	w12, w12, #0x1
   12aa4:	madd	x8, x21, x13, x26
   12aa8:	sub	x10, x19, x24
   12aac:	sub	x9, x23, x24
   12ab0:	csinc	x11, xzr, x11, eq  // eq = none
   12ab4:	cmp	w12, #0xff
   12ab8:	str	x9, [x8, #24]
   12abc:	stp	x10, x11, [x8]
   12ac0:	str	w12, [sp, #148]
   12ac4:	str	w12, [x8, #32]
   12ac8:	b.hi	12b44 <xre_compile_pattern@@Base+0x1cbc>  // b.pmore
   12acc:	add	x8, x9, #0x2
   12ad0:	madd	x10, x21, x13, x26
   12ad4:	str	x8, [x10, #16]
   12ad8:	ldr	x8, [x25]
   12adc:	add	x9, x9, #0x3
   12ae0:	cmp	x9, x8
   12ae4:	b.ls	12b54 <xre_compile_pattern@@Base+0x1ccc>  // b.plast
   12ae8:	ldur	x21, [x29, #-168]
   12aec:	cmp	x8, #0x10, lsl #12
   12af0:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12af4:	lsl	x8, x8, #1
   12af8:	cmp	x8, #0x10, lsl #12
   12afc:	mov	w9, #0x10000               	// #65536
   12b00:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   12b04:	mov	x0, x24
   12b08:	str	x1, [x20, #8]
   12b0c:	bl	5150 <realloc@plt>
   12b10:	str	x0, [x20]
   12b14:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12b18:	sub	x8, x0, x24
   12b1c:	cmp	x24, x0
   12b20:	add	x9, x23, x8
   12b24:	ldr	x8, [x25]
   12b28:	csel	x23, x23, x9, eq  // eq = none
   12b2c:	sub	x9, x23, x0
   12b30:	add	x9, x9, #0x3
   12b34:	cmp	x9, x8
   12b38:	mov	x24, x0
   12b3c:	b.hi	12aec <xre_compile_pattern@@Base+0x1c64>  // b.pmore
   12b40:	b	12b58 <xre_compile_pattern@@Base+0x1cd0>
   12b44:	ldur	x21, [x29, #-168]
   12b48:	str	x27, [sp, #160]
   12b4c:	str	x26, [sp, #176]
   12b50:	b	12b7c <xre_compile_pattern@@Base+0x1cf4>
   12b54:	ldur	x21, [x29, #-168]
   12b58:	mov	w8, #0x6                   	// #6
   12b5c:	strb	w8, [x23]
   12b60:	ldr	w8, [sp, #148]
   12b64:	strb	wzr, [x23, #2]
   12b68:	str	x27, [sp, #160]
   12b6c:	str	x26, [sp, #176]
   12b70:	strb	w8, [x23, #1]
   12b74:	add	x8, x23, #0x3
   12b78:	mov	x23, x8
   12b7c:	ldr	x9, [sp, #160]
   12b80:	ldur	x24, [x29, #-152]
   12b84:	mov	x8, #0x100000000           	// #4294967296
   12b88:	mov	x22, xzr
   12b8c:	add	x9, x9, x8
   12b90:	mov	x28, xzr
   12b94:	mov	x27, xzr
   12b98:	str	x9, [sp, #160]
   12b9c:	mov	x19, x23
   12ba0:	b	13184 <xre_compile_pattern@@Base+0x22fc>
   12ba4:	ldur	x21, [x29, #-160]
   12ba8:	tbnz	w21, #13, 12bbc <xre_compile_pattern@@Base+0x1d34>
   12bac:	ldr	x8, [sp, #160]
   12bb0:	lsr	x8, x8, #32
   12bb4:	cbnz	x8, 112b0 <xre_compile_pattern@@Base+0x428>
   12bb8:	tbz	w21, #17, 13864 <xre_compile_pattern@@Base+0x29dc>
   12bbc:	mov	w21, #0x29                  	// #41
   12bc0:	cbnz	x24, 130f0 <xre_compile_pattern@@Base+0x2268>
   12bc4:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   12bc8:	ldur	x8, [x29, #-160]
   12bcc:	tbnz	w8, #19, 134dc <xre_compile_pattern@@Base+0x2654>
   12bd0:	ldp	x24, x8, [x20]
   12bd4:	sub	x9, x23, x24
   12bd8:	add	x9, x9, #0x1
   12bdc:	cmp	x9, x8
   12be0:	b.ls	135b8 <xre_compile_pattern@@Base+0x2730>  // b.plast
   12be4:	ldur	x21, [x29, #-168]
   12be8:	mov	w26, #0x10000               	// #65536
   12bec:	b	12c08 <xre_compile_pattern@@Base+0x1d80>
   12bf0:	ldr	x8, [x25]
   12bf4:	sub	x9, x23, x0
   12bf8:	add	x9, x9, #0x1
   12bfc:	mov	x24, x0
   12c00:	cmp	x9, x8
   12c04:	b.ls	1367c <xre_compile_pattern@@Base+0x27f4>  // b.plast
   12c08:	cmp	x8, #0x10, lsl #12
   12c0c:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12c10:	lsl	x8, x8, #1
   12c14:	cmp	x8, #0x10, lsl #12
   12c18:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12c1c:	mov	x0, x24
   12c20:	str	x1, [x20, #8]
   12c24:	bl	5150 <realloc@plt>
   12c28:	str	x0, [x20]
   12c2c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12c30:	cmp	x24, x0
   12c34:	b.eq	12bf0 <xre_compile_pattern@@Base+0x1d68>  // b.none
   12c38:	sub	x8, x0, x24
   12c3c:	cmp	x22, #0x0
   12c40:	add	x9, x22, x8
   12c44:	add	x10, x28, x8
   12c48:	csel	x22, xzr, x9, eq  // eq = none
   12c4c:	cmp	x28, #0x0
   12c50:	add	x23, x23, x8
   12c54:	add	x19, x19, x8
   12c58:	add	x8, x27, x8
   12c5c:	csel	x28, xzr, x10, eq  // eq = none
   12c60:	cmp	x27, #0x0
   12c64:	csel	x27, xzr, x8, eq  // eq = none
   12c68:	b	12bf0 <xre_compile_pattern@@Base+0x1d68>
   12c6c:	ldur	x8, [x29, #-160]
   12c70:	tbnz	w8, #19, 134e4 <xre_compile_pattern@@Base+0x265c>
   12c74:	ldp	x24, x8, [x20]
   12c78:	sub	x9, x23, x24
   12c7c:	add	x9, x9, #0x1
   12c80:	cmp	x9, x8
   12c84:	b.ls	135c4 <xre_compile_pattern@@Base+0x273c>  // b.plast
   12c88:	ldur	x21, [x29, #-168]
   12c8c:	mov	w26, #0x10000               	// #65536
   12c90:	b	12cac <xre_compile_pattern@@Base+0x1e24>
   12c94:	ldr	x8, [x25]
   12c98:	sub	x9, x23, x0
   12c9c:	add	x9, x9, #0x1
   12ca0:	mov	x24, x0
   12ca4:	cmp	x9, x8
   12ca8:	b.ls	13684 <xre_compile_pattern@@Base+0x27fc>  // b.plast
   12cac:	cmp	x8, #0x10, lsl #12
   12cb0:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12cb4:	lsl	x8, x8, #1
   12cb8:	cmp	x8, #0x10, lsl #12
   12cbc:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12cc0:	mov	x0, x24
   12cc4:	str	x1, [x20, #8]
   12cc8:	bl	5150 <realloc@plt>
   12ccc:	str	x0, [x20]
   12cd0:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12cd4:	cmp	x24, x0
   12cd8:	b.eq	12c94 <xre_compile_pattern@@Base+0x1e0c>  // b.none
   12cdc:	sub	x8, x0, x24
   12ce0:	cmp	x22, #0x0
   12ce4:	add	x9, x22, x8
   12ce8:	add	x10, x28, x8
   12cec:	csel	x22, xzr, x9, eq  // eq = none
   12cf0:	cmp	x28, #0x0
   12cf4:	add	x23, x23, x8
   12cf8:	add	x19, x19, x8
   12cfc:	add	x8, x27, x8
   12d00:	csel	x28, xzr, x10, eq  // eq = none
   12d04:	cmp	x27, #0x0
   12d08:	csel	x27, xzr, x8, eq  // eq = none
   12d0c:	b	12c94 <xre_compile_pattern@@Base+0x1e0c>
   12d10:	ldur	x8, [x29, #-160]
   12d14:	tbnz	w8, #19, 134ec <xre_compile_pattern@@Base+0x2664>
   12d18:	ldp	x24, x8, [x20]
   12d1c:	sub	x9, x23, x24
   12d20:	add	x9, x9, #0x1
   12d24:	cmp	x9, x8
   12d28:	b.ls	135d0 <xre_compile_pattern@@Base+0x2748>  // b.plast
   12d2c:	ldur	x21, [x29, #-168]
   12d30:	mov	w26, #0x10000               	// #65536
   12d34:	b	12d50 <xre_compile_pattern@@Base+0x1ec8>
   12d38:	ldr	x8, [x25]
   12d3c:	sub	x9, x23, x0
   12d40:	add	x9, x9, #0x1
   12d44:	mov	x24, x0
   12d48:	cmp	x9, x8
   12d4c:	b.ls	1368c <xre_compile_pattern@@Base+0x2804>  // b.plast
   12d50:	cmp	x8, #0x10, lsl #12
   12d54:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12d58:	lsl	x8, x8, #1
   12d5c:	cmp	x8, #0x10, lsl #12
   12d60:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12d64:	mov	x0, x24
   12d68:	str	x1, [x20, #8]
   12d6c:	bl	5150 <realloc@plt>
   12d70:	str	x0, [x20]
   12d74:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12d78:	cmp	x24, x0
   12d7c:	b.eq	12d38 <xre_compile_pattern@@Base+0x1eb0>  // b.none
   12d80:	sub	x8, x0, x24
   12d84:	cmp	x22, #0x0
   12d88:	add	x9, x22, x8
   12d8c:	add	x10, x28, x8
   12d90:	csel	x22, xzr, x9, eq  // eq = none
   12d94:	cmp	x28, #0x0
   12d98:	add	x23, x23, x8
   12d9c:	add	x19, x19, x8
   12da0:	add	x8, x27, x8
   12da4:	csel	x28, xzr, x10, eq  // eq = none
   12da8:	cmp	x27, #0x0
   12dac:	csel	x27, xzr, x8, eq  // eq = none
   12db0:	b	12d38 <xre_compile_pattern@@Base+0x1eb0>
   12db4:	ldur	x8, [x29, #-160]
   12db8:	tbnz	w8, #19, 134f4 <xre_compile_pattern@@Base+0x266c>
   12dbc:	ldp	x24, x8, [x20]
   12dc0:	mov	x28, x23
   12dc4:	sub	x9, x23, x24
   12dc8:	add	x9, x9, #0x1
   12dcc:	cmp	x9, x8
   12dd0:	b.ls	135dc <xre_compile_pattern@@Base+0x2754>  // b.plast
   12dd4:	ldur	x21, [x29, #-168]
   12dd8:	mov	w26, #0x10000               	// #65536
   12ddc:	b	12df8 <xre_compile_pattern@@Base+0x1f70>
   12de0:	ldr	x8, [x25]
   12de4:	sub	x9, x23, x0
   12de8:	add	x9, x9, #0x1
   12dec:	mov	x24, x0
   12df0:	cmp	x9, x8
   12df4:	b.ls	13694 <xre_compile_pattern@@Base+0x280c>  // b.plast
   12df8:	cmp	x8, #0x10, lsl #12
   12dfc:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12e00:	lsl	x8, x8, #1
   12e04:	cmp	x8, #0x10, lsl #12
   12e08:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12e0c:	mov	x0, x24
   12e10:	str	x1, [x20, #8]
   12e14:	bl	5150 <realloc@plt>
   12e18:	str	x0, [x20]
   12e1c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12e20:	cmp	x24, x0
   12e24:	b.eq	12de0 <xre_compile_pattern@@Base+0x1f58>  // b.none
   12e28:	sub	x8, x0, x24
   12e2c:	cmp	x22, #0x0
   12e30:	add	x9, x22, x8
   12e34:	add	x10, x28, x8
   12e38:	csel	x22, xzr, x9, eq  // eq = none
   12e3c:	cmp	x28, #0x0
   12e40:	add	x23, x23, x8
   12e44:	add	x19, x19, x8
   12e48:	add	x8, x27, x8
   12e4c:	csel	x28, xzr, x10, eq  // eq = none
   12e50:	cmp	x27, #0x0
   12e54:	csel	x27, xzr, x8, eq  // eq = none
   12e58:	b	12de0 <xre_compile_pattern@@Base+0x1f58>
   12e5c:	ldur	x8, [x29, #-160]
   12e60:	tbnz	w8, #19, 134fc <xre_compile_pattern@@Base+0x2674>
   12e64:	ldp	x24, x8, [x20]
   12e68:	sub	x9, x23, x24
   12e6c:	add	x9, x9, #0x1
   12e70:	cmp	x9, x8
   12e74:	b.ls	135e8 <xre_compile_pattern@@Base+0x2760>  // b.plast
   12e78:	ldur	x21, [x29, #-168]
   12e7c:	mov	w26, #0x10000               	// #65536
   12e80:	b	12e9c <xre_compile_pattern@@Base+0x2014>
   12e84:	ldr	x8, [x25]
   12e88:	sub	x9, x23, x0
   12e8c:	add	x9, x9, #0x1
   12e90:	mov	x24, x0
   12e94:	cmp	x9, x8
   12e98:	b.ls	1369c <xre_compile_pattern@@Base+0x2814>  // b.plast
   12e9c:	cmp	x8, #0x10, lsl #12
   12ea0:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12ea4:	lsl	x8, x8, #1
   12ea8:	cmp	x8, #0x10, lsl #12
   12eac:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12eb0:	mov	x0, x24
   12eb4:	str	x1, [x20, #8]
   12eb8:	bl	5150 <realloc@plt>
   12ebc:	str	x0, [x20]
   12ec0:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12ec4:	cmp	x24, x0
   12ec8:	b.eq	12e84 <xre_compile_pattern@@Base+0x1ffc>  // b.none
   12ecc:	sub	x8, x0, x24
   12ed0:	cmp	x22, #0x0
   12ed4:	add	x9, x22, x8
   12ed8:	add	x10, x28, x8
   12edc:	csel	x22, xzr, x9, eq  // eq = none
   12ee0:	cmp	x28, #0x0
   12ee4:	add	x23, x23, x8
   12ee8:	add	x19, x19, x8
   12eec:	add	x8, x27, x8
   12ef0:	csel	x28, xzr, x10, eq  // eq = none
   12ef4:	cmp	x27, #0x0
   12ef8:	csel	x27, xzr, x8, eq  // eq = none
   12efc:	b	12e84 <xre_compile_pattern@@Base+0x1ffc>
   12f00:	ldur	x8, [x29, #-160]
   12f04:	tbnz	w8, #19, 13504 <xre_compile_pattern@@Base+0x267c>
   12f08:	ldp	x24, x8, [x20]
   12f0c:	sub	x9, x23, x24
   12f10:	add	x9, x9, #0x1
   12f14:	cmp	x9, x8
   12f18:	b.ls	135f4 <xre_compile_pattern@@Base+0x276c>  // b.plast
   12f1c:	ldur	x21, [x29, #-168]
   12f20:	mov	w26, #0x10000               	// #65536
   12f24:	b	12f40 <xre_compile_pattern@@Base+0x20b8>
   12f28:	ldr	x8, [x25]
   12f2c:	sub	x9, x23, x0
   12f30:	add	x9, x9, #0x1
   12f34:	mov	x24, x0
   12f38:	cmp	x9, x8
   12f3c:	b.ls	136a4 <xre_compile_pattern@@Base+0x281c>  // b.plast
   12f40:	cmp	x8, #0x10, lsl #12
   12f44:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12f48:	lsl	x8, x8, #1
   12f4c:	cmp	x8, #0x10, lsl #12
   12f50:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12f54:	mov	x0, x24
   12f58:	str	x1, [x20, #8]
   12f5c:	bl	5150 <realloc@plt>
   12f60:	str	x0, [x20]
   12f64:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   12f68:	cmp	x24, x0
   12f6c:	b.eq	12f28 <xre_compile_pattern@@Base+0x20a0>  // b.none
   12f70:	sub	x8, x0, x24
   12f74:	cmp	x22, #0x0
   12f78:	add	x9, x22, x8
   12f7c:	add	x10, x28, x8
   12f80:	csel	x22, xzr, x9, eq  // eq = none
   12f84:	cmp	x28, #0x0
   12f88:	add	x23, x23, x8
   12f8c:	add	x19, x19, x8
   12f90:	add	x8, x27, x8
   12f94:	csel	x28, xzr, x10, eq  // eq = none
   12f98:	cmp	x27, #0x0
   12f9c:	csel	x27, xzr, x8, eq  // eq = none
   12fa0:	b	12f28 <xre_compile_pattern@@Base+0x20a0>
   12fa4:	ldur	x8, [x29, #-160]
   12fa8:	tbnz	w8, #19, 1350c <xre_compile_pattern@@Base+0x2684>
   12fac:	ldp	x24, x8, [x20]
   12fb0:	mov	x28, x23
   12fb4:	sub	x9, x23, x24
   12fb8:	add	x9, x9, #0x1
   12fbc:	cmp	x9, x8
   12fc0:	b.ls	13600 <xre_compile_pattern@@Base+0x2778>  // b.plast
   12fc4:	ldur	x21, [x29, #-168]
   12fc8:	mov	w26, #0x10000               	// #65536
   12fcc:	b	12fe8 <xre_compile_pattern@@Base+0x2160>
   12fd0:	ldr	x8, [x25]
   12fd4:	sub	x9, x23, x0
   12fd8:	add	x9, x9, #0x1
   12fdc:	mov	x24, x0
   12fe0:	cmp	x9, x8
   12fe4:	b.ls	136ac <xre_compile_pattern@@Base+0x2824>  // b.plast
   12fe8:	cmp	x8, #0x10, lsl #12
   12fec:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   12ff0:	lsl	x8, x8, #1
   12ff4:	cmp	x8, #0x10, lsl #12
   12ff8:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   12ffc:	mov	x0, x24
   13000:	str	x1, [x20, #8]
   13004:	bl	5150 <realloc@plt>
   13008:	str	x0, [x20]
   1300c:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   13010:	cmp	x24, x0
   13014:	b.eq	12fd0 <xre_compile_pattern@@Base+0x2148>  // b.none
   13018:	sub	x8, x0, x24
   1301c:	cmp	x22, #0x0
   13020:	add	x9, x22, x8
   13024:	add	x10, x28, x8
   13028:	csel	x22, xzr, x9, eq  // eq = none
   1302c:	cmp	x28, #0x0
   13030:	add	x23, x23, x8
   13034:	add	x19, x19, x8
   13038:	add	x8, x27, x8
   1303c:	csel	x28, xzr, x10, eq  // eq = none
   13040:	cmp	x27, #0x0
   13044:	csel	x27, xzr, x8, eq  // eq = none
   13048:	b	12fd0 <xre_compile_pattern@@Base+0x2148>
   1304c:	ldr	x8, [sp, #128]
   13050:	cmp	x8, #0x200
   13054:	b.eq	11620 <xre_compile_pattern@@Base+0x798>  // b.none
   13058:	mov	w21, #0x7b                  	// #123
   1305c:	cbnz	x24, 130f0 <xre_compile_pattern@@Base+0x2268>
   13060:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   13064:	ldr	x8, [sp, #96]
   13068:	mov	w21, #0x7c                  	// #124
   1306c:	cbnz	x8, 130ec <xre_compile_pattern@@Base+0x2264>
   13070:	b	1168c <xre_compile_pattern@@Base+0x804>
   13074:	mov	w8, #0x2c                  	// #44
   13078:	mov	x14, x12
   1307c:	b	13090 <xre_compile_pattern@@Base+0x2208>
   13080:	add	x14, x14, #0x1
   13084:	b	1308c <xre_compile_pattern@@Base+0x2204>
   13088:	ldur	x14, [x29, #-168]
   1308c:	tbz	w21, #31, 13094 <xre_compile_pattern@@Base+0x220c>
   13090:	mov	w21, #0x7fff                	// #32767
   13094:	tbnz	w26, #31, 130dc <xre_compile_pattern@@Base+0x2254>
   13098:	cmp	w26, w21
   1309c:	b.gt	130dc <xre_compile_pattern@@Base+0x2254>
   130a0:	ldur	x9, [x29, #-160]
   130a4:	tbnz	w9, #12, 130c8 <xre_compile_pattern@@Base+0x2240>
   130a8:	ldur	x9, [x29, #-168]
   130ac:	cmp	x14, x9
   130b0:	b.eq	130dc <xre_compile_pattern@@Base+0x2254>  // b.none
   130b4:	cmp	w8, #0x5c
   130b8:	b.ne	130dc <xre_compile_pattern@@Base+0x2254>  // b.any
   130bc:	ldrb	w8, [x14], #1
   130c0:	cbz	x24, 130c8 <xre_compile_pattern@@Base+0x2240>
   130c4:	ldrb	w8, [x24, x8]
   130c8:	cmp	w8, #0x7d
   130cc:	b.ne	130dc <xre_compile_pattern@@Base+0x2254>  // b.any
   130d0:	cbz	x28, 132e0 <xre_compile_pattern@@Base+0x2458>
   130d4:	mov	x0, x28
   130d8:	b	132f8 <xre_compile_pattern@@Base+0x2470>
   130dc:	ldur	x8, [x29, #-160]
   130e0:	tbz	w8, #21, 13834 <xre_compile_pattern@@Base+0x29ac>
   130e4:	mov	w21, #0x7b                  	// #123
   130e8:	tbnz	w8, #12, 130f4 <xre_compile_pattern@@Base+0x226c>
   130ec:	cbz	x24, 130f4 <xre_compile_pattern@@Base+0x226c>
   130f0:	ldrb	w21, [x24, w21, uxtw]
   130f4:	ldur	x10, [x29, #-160]
   130f8:	mov	w26, #0x10000               	// #65536
   130fc:	cbz	x27, 13134 <xre_compile_pattern@@Base+0x22ac>
   13100:	ldrb	w8, [x27]
   13104:	cmp	x8, #0xff
   13108:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   1310c:	add	x8, x27, x8
   13110:	add	x8, x8, #0x1
   13114:	cmp	x8, x23
   13118:	b.ne	13134 <xre_compile_pattern@@Base+0x22ac>  // b.any
   1311c:	ldur	x8, [x29, #-144]
   13120:	ldrb	w8, [x8]
   13124:	cmp	w8, #0x2a
   13128:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   1312c:	cmp	w8, #0x5e
   13130:	b.ne	13284 <xre_compile_pattern@@Base+0x23fc>  // b.any
   13134:	ldp	x24, x8, [x20]
   13138:	mov	x28, x23
   1313c:	sub	x9, x23, x24
   13140:	add	x9, x9, #0x2
   13144:	cmp	x9, x8
   13148:	b.hi	131b0 <xre_compile_pattern@@Base+0x2328>  // b.pmore
   1314c:	mov	w8, #0x2                   	// #2
   13150:	add	x27, x23, #0x1
   13154:	strh	w8, [x23], #2
   13158:	ldp	x24, x8, [x20]
   1315c:	sub	x9, x23, x24
   13160:	add	x9, x9, #0x1
   13164:	cmp	x9, x8
   13168:	b.hi	13220 <xre_compile_pattern@@Base+0x2398>  // b.pmore
   1316c:	strb	w21, [x23], #1
   13170:	ldrb	w8, [x27]
   13174:	add	w8, w8, #0x1
   13178:	strb	w8, [x27]
   1317c:	ldur	x24, [x29, #-152]
   13180:	ldur	x21, [x29, #-168]
   13184:	ldur	x8, [x29, #-144]
   13188:	cmp	x8, x21
   1318c:	mov	x26, x8
   13190:	b.ne	1108c <xre_compile_pattern@@Base+0x204>  // b.any
   13194:	b	13714 <xre_compile_pattern@@Base+0x288c>
   13198:	ldr	x8, [x25]
   1319c:	sub	x9, x23, x0
   131a0:	add	x9, x9, #0x2
   131a4:	mov	x24, x0
   131a8:	cmp	x9, x8
   131ac:	b.ls	1314c <xre_compile_pattern@@Base+0x22c4>  // b.plast
   131b0:	cmp	x8, #0x10, lsl #12
   131b4:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   131b8:	lsl	x8, x8, #1
   131bc:	cmp	x8, #0x10, lsl #12
   131c0:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   131c4:	mov	x0, x24
   131c8:	str	x1, [x20, #8]
   131cc:	bl	5150 <realloc@plt>
   131d0:	str	x0, [x20]
   131d4:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   131d8:	cmp	x24, x0
   131dc:	b.eq	13198 <xre_compile_pattern@@Base+0x2310>  // b.none
   131e0:	sub	x8, x0, x24
   131e4:	cmp	x22, #0x0
   131e8:	add	x9, x22, x8
   131ec:	add	x23, x23, x8
   131f0:	add	x19, x19, x8
   131f4:	add	x8, x28, x8
   131f8:	csel	x22, xzr, x9, eq  // eq = none
   131fc:	cmp	x28, #0x0
   13200:	csel	x28, xzr, x8, eq  // eq = none
   13204:	b	13198 <xre_compile_pattern@@Base+0x2310>
   13208:	ldr	x8, [x25]
   1320c:	sub	x9, x23, x0
   13210:	add	x9, x9, #0x1
   13214:	mov	x24, x0
   13218:	cmp	x9, x8
   1321c:	b.ls	1316c <xre_compile_pattern@@Base+0x22e4>  // b.plast
   13220:	cmp	x8, #0x10, lsl #12
   13224:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   13228:	lsl	x8, x8, #1
   1322c:	cmp	x8, #0x10, lsl #12
   13230:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13234:	mov	x0, x24
   13238:	str	x1, [x20, #8]
   1323c:	bl	5150 <realloc@plt>
   13240:	str	x0, [x20]
   13244:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   13248:	cmp	x24, x0
   1324c:	b.eq	13208 <xre_compile_pattern@@Base+0x2380>  // b.none
   13250:	sub	x8, x0, x24
   13254:	cmp	x22, #0x0
   13258:	add	x9, x22, x8
   1325c:	add	x10, x28, x8
   13260:	csel	x22, xzr, x9, eq  // eq = none
   13264:	cmp	x28, #0x0
   13268:	add	x23, x23, x8
   1326c:	add	x19, x19, x8
   13270:	add	x8, x27, x8
   13274:	csel	x28, xzr, x10, eq  // eq = none
   13278:	cmp	x27, #0x0
   1327c:	csel	x27, xzr, x8, eq  // eq = none
   13280:	b	13208 <xre_compile_pattern@@Base+0x2380>
   13284:	tbnz	w10, #1, 1329c <xre_compile_pattern@@Base+0x2414>
   13288:	cmp	w8, #0x2b
   1328c:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   13290:	cmp	w8, #0x3f
   13294:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   13298:	b	132bc <xre_compile_pattern@@Base+0x2434>
   1329c:	cmp	w8, #0x5c
   132a0:	b.ne	132bc <xre_compile_pattern@@Base+0x2434>  // b.any
   132a4:	ldur	x9, [x29, #-144]
   132a8:	ldrb	w9, [x9, #1]
   132ac:	cmp	w9, #0x2b
   132b0:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   132b4:	cmp	w9, #0x3f
   132b8:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   132bc:	tbz	w10, #9, 13158 <xre_compile_pattern@@Base+0x22d0>
   132c0:	tbnz	w10, #12, 132d4 <xre_compile_pattern@@Base+0x244c>
   132c4:	cmp	w8, #0x5c
   132c8:	b.ne	13158 <xre_compile_pattern@@Base+0x22d0>  // b.any
   132cc:	ldur	x8, [x29, #-144]
   132d0:	ldrb	w8, [x8, #1]
   132d4:	cmp	w8, #0x7b
   132d8:	b.eq	13134 <xre_compile_pattern@@Base+0x22ac>  // b.none
   132dc:	b	13158 <xre_compile_pattern@@Base+0x22d0>
   132e0:	ldr	x8, [sp, #88]
   132e4:	cmp	x8, #0x20
   132e8:	b.eq	13824 <xre_compile_pattern@@Base+0x299c>  // b.none
   132ec:	ldur	x8, [x29, #-160]
   132f0:	mov	x0, x23
   132f4:	tbz	w8, #4, 130e4 <xre_compile_pattern@@Base+0x225c>
   132f8:	cmp	w21, #0x8, lsl #12
   132fc:	b.ge	1388c <xre_compile_pattern@@Base+0x2a04>  // b.tcont
   13300:	stur	x14, [x29, #-144]
   13304:	cbz	w21, 13514 <xre_compile_pattern@@Base+0x268c>
   13308:	ldp	x24, x8, [x20]
   1330c:	cmp	w21, #0x1
   13310:	mov	w9, #0xa                   	// #10
   13314:	mov	w10, #0x14                  	// #20
   13318:	csel	x27, x10, x9, gt
   1331c:	add	x9, x27, x23
   13320:	sub	x9, x9, x24
   13324:	mov	x28, x0
   13328:	cmp	x9, x8
   1332c:	b.hi	1346c <xre_compile_pattern@@Base+0x25e4>  // b.pmore
   13330:	subs	w8, w21, #0x1
   13334:	mov	w10, #0x5                   	// #5
   13338:	add	x9, x23, #0x5
   1333c:	csel	w10, w10, wzr, gt
   13340:	add	w10, w9, w10
   13344:	sub	w10, w10, w28
   13348:	cmp	x23, x28
   1334c:	sub	w10, w10, #0x3
   13350:	b.eq	13368 <xre_compile_pattern@@Base+0x24e0>  // b.none
   13354:	mov	x11, x23
   13358:	ldrb	w12, [x11, #-1]!
   1335c:	cmp	x28, x11
   13360:	strb	w12, [x11, #5]
   13364:	b.ne	13358 <xre_compile_pattern@@Base+0x24d0>  // b.any
   13368:	ldur	x24, [x29, #-152]
   1336c:	mov	w11, #0x15                  	// #21
   13370:	strb	w11, [x28]
   13374:	strb	w10, [x28, #1]
   13378:	lsr	w11, w10, #8
   1337c:	lsr	w10, w26, #8
   13380:	cmp	x9, x28
   13384:	strb	w26, [x28, #3]
   13388:	strb	w11, [x28, #2]
   1338c:	strb	w10, [x28, #4]
   13390:	b.eq	133b0 <xre_compile_pattern@@Base+0x2528>  // b.none
   13394:	sub	x9, x28, #0x5
   13398:	mov	x11, x23
   1339c:	ldrb	w12, [x11, #4]
   133a0:	strb	w12, [x11, #9]
   133a4:	sub	x11, x11, #0x1
   133a8:	cmp	x9, x11
   133ac:	b.ne	1339c <xre_compile_pattern@@Base+0x2514>  // b.any
   133b0:	mov	w9, #0x517                 	// #1303
   133b4:	strh	w9, [x28]
   133b8:	cmp	w21, #0x2
   133bc:	add	x9, x23, #0xa
   133c0:	strb	wzr, [x28, #2]
   133c4:	strb	w26, [x28, #3]
   133c8:	strb	w10, [x28, #4]
   133cc:	b.lt	1360c <xre_compile_pattern@@Base+0x2784>  // b.tstop
   133d0:	ldur	x21, [x29, #-168]
   133d4:	sub	w10, w28, w9
   133d8:	mov	w9, #0x16                  	// #22
   133dc:	add	x11, x23, #0xf
   133e0:	add	w12, w10, #0x2
   133e4:	strb	w9, [x23, #10]
   133e8:	lsr	w9, w8, #8
   133ec:	subs	x10, x11, x28
   133f0:	lsr	w11, w12, #8
   133f4:	strb	w8, [x23, #13]
   133f8:	strb	w12, [x23, #11]
   133fc:	strb	w11, [x23, #12]
   13400:	strb	w9, [x23, #14]
   13404:	b.eq	13424 <xre_compile_pattern@@Base+0x259c>  // b.none
   13408:	sub	x11, x28, #0xf
   1340c:	mov	x12, x23
   13410:	ldrb	w13, [x12, #14]
   13414:	strb	w13, [x12, #19]
   13418:	sub	x12, x12, #0x1
   1341c:	cmp	x11, x12
   13420:	b.ne	13410 <xre_compile_pattern@@Base+0x2588>  // b.any
   13424:	mov	w11, #0x17                  	// #23
   13428:	strb	w10, [x28, #1]
   1342c:	lsr	w10, w10, #8
   13430:	mov	x27, xzr
   13434:	strb	w11, [x28]
   13438:	strb	w8, [x28, #3]
   1343c:	strb	w9, [x28, #4]
   13440:	strb	w10, [x28, #2]
   13444:	add	x23, x23, #0x14
   13448:	mov	x8, x14
   1344c:	b	13188 <xre_compile_pattern@@Base+0x2300>
   13450:	ldr	x8, [x25]
   13454:	ldur	x14, [x29, #-144]
   13458:	add	x9, x27, x23
   1345c:	sub	x9, x9, x0
   13460:	cmp	x9, x8
   13464:	mov	x24, x0
   13468:	b.ls	13330 <xre_compile_pattern@@Base+0x24a8>  // b.plast
   1346c:	cmp	x8, #0x10, lsl #12
   13470:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   13474:	lsl	x8, x8, #1
   13478:	cmp	x8, #0x10, lsl #12
   1347c:	mov	w9, #0x10000               	// #65536
   13480:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   13484:	mov	x0, x24
   13488:	str	x1, [x20, #8]
   1348c:	bl	5150 <realloc@plt>
   13490:	str	x0, [x20]
   13494:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   13498:	cmp	x24, x0
   1349c:	b.eq	13450 <xre_compile_pattern@@Base+0x25c8>  // b.none
   134a0:	sub	x8, x0, x24
   134a4:	cmp	x22, #0x0
   134a8:	add	x9, x22, x8
   134ac:	add	x23, x23, x8
   134b0:	add	x19, x19, x8
   134b4:	add	x8, x28, x8
   134b8:	csel	x22, xzr, x9, eq  // eq = none
   134bc:	cmp	x28, #0x0
   134c0:	csel	x28, xzr, x8, eq  // eq = none
   134c4:	b	13450 <xre_compile_pattern@@Base+0x25c8>
   134c8:	mov	w21, #0x27                  	// #39
   134cc:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134d0:	mov	w21, #0x28                  	// #40
   134d4:	cbnz	x24, 130f0 <xre_compile_pattern@@Base+0x2268>
   134d8:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134dc:	mov	w21, #0x3c                  	// #60
   134e0:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134e4:	mov	w21, #0x3e                  	// #62
   134e8:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134ec:	mov	w21, #0x42                  	// #66
   134f0:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134f4:	mov	w21, #0x57                  	// #87
   134f8:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   134fc:	mov	w21, #0x60                  	// #96
   13500:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   13504:	mov	w21, #0x62                  	// #98
   13508:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   1350c:	mov	w21, #0x77                  	// #119
   13510:	b	130f4 <xre_compile_pattern@@Base+0x226c>
   13514:	ldp	x24, x8, [x20]
   13518:	mov	x28, x0
   1351c:	sub	x9, x23, x24
   13520:	add	x9, x9, #0x3
   13524:	cmp	x9, x8
   13528:	b.ls	13620 <xre_compile_pattern@@Base+0x2798>  // b.plast
   1352c:	ldur	x21, [x29, #-168]
   13530:	mov	w26, #0x10000               	// #65536
   13534:	b	13554 <xre_compile_pattern@@Base+0x26cc>
   13538:	ldr	x8, [x25]
   1353c:	ldur	x14, [x29, #-144]
   13540:	sub	x9, x23, x0
   13544:	add	x9, x9, #0x3
   13548:	cmp	x9, x8
   1354c:	mov	x24, x0
   13550:	b.ls	13624 <xre_compile_pattern@@Base+0x279c>  // b.plast
   13554:	cmp	x8, #0x10, lsl #12
   13558:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   1355c:	lsl	x8, x8, #1
   13560:	cmp	x8, #0x10, lsl #12
   13564:	csel	x1, x8, x26, cc  // cc = lo, ul, last
   13568:	mov	x0, x24
   1356c:	str	x1, [x20, #8]
   13570:	bl	5150 <realloc@plt>
   13574:	str	x0, [x20]
   13578:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   1357c:	cmp	x24, x0
   13580:	b.eq	13538 <xre_compile_pattern@@Base+0x26b0>  // b.none
   13584:	sub	x8, x0, x24
   13588:	cmp	x22, #0x0
   1358c:	add	x9, x22, x8
   13590:	add	x23, x23, x8
   13594:	add	x19, x19, x8
   13598:	add	x8, x28, x8
   1359c:	csel	x22, xzr, x9, eq  // eq = none
   135a0:	cmp	x28, #0x0
   135a4:	csel	x28, xzr, x8, eq  // eq = none
   135a8:	b	13538 <xre_compile_pattern@@Base+0x26b0>
   135ac:	ldur	x21, [x29, #-168]
   135b0:	mov	w8, #0xc                   	// #12
   135b4:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135b8:	ldur	x21, [x29, #-168]
   135bc:	mov	w8, #0x1a                  	// #26
   135c0:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135c4:	ldur	x21, [x29, #-168]
   135c8:	mov	w8, #0x1b                  	// #27
   135cc:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135d0:	ldur	x21, [x29, #-168]
   135d4:	mov	w8, #0x1d                  	// #29
   135d8:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135dc:	ldur	x21, [x29, #-168]
   135e0:	mov	w8, #0x19                  	// #25
   135e4:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135e8:	ldur	x21, [x29, #-168]
   135ec:	mov	w8, #0xb                   	// #11
   135f0:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   135f4:	ldur	x21, [x29, #-168]
   135f8:	mov	w8, #0x1c                  	// #28
   135fc:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   13600:	ldur	x21, [x29, #-168]
   13604:	mov	w8, #0x18                  	// #24
   13608:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   1360c:	ldur	x21, [x29, #-168]
   13610:	mov	x27, xzr
   13614:	mov	x8, x14
   13618:	mov	x23, x9
   1361c:	b	13188 <xre_compile_pattern@@Base+0x2300>
   13620:	ldur	x21, [x29, #-168]
   13624:	add	x8, x23, #0x3
   13628:	sub	w9, w8, w28
   1362c:	cmp	x23, x28
   13630:	sub	w9, w9, #0x3
   13634:	b.eq	13648 <xre_compile_pattern@@Base+0x27c0>  // b.none
   13638:	ldrb	w10, [x23, #-1]!
   1363c:	cmp	x28, x23
   13640:	strb	w10, [x23, #3]
   13644:	b.ne	13638 <xre_compile_pattern@@Base+0x27b0>  // b.any
   13648:	ldur	x24, [x29, #-152]
   1364c:	mov	w10, #0xd                   	// #13
   13650:	strb	w9, [x28, #1]
   13654:	lsr	w9, w9, #8
   13658:	mov	x27, xzr
   1365c:	strb	w10, [x28]
   13660:	strb	w9, [x28, #2]
   13664:	mov	x9, x14
   13668:	mov	x23, x8
   1366c:	mov	x8, x14
   13670:	b	13188 <xre_compile_pattern@@Base+0x2300>
   13674:	mov	w8, #0xc                   	// #12
   13678:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   1367c:	mov	w8, #0x1a                  	// #26
   13680:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   13684:	mov	w8, #0x1b                  	// #27
   13688:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   1368c:	mov	w8, #0x1d                  	// #29
   13690:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   13694:	mov	w8, #0x19                  	// #25
   13698:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   1369c:	mov	w8, #0xb                   	// #11
   136a0:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   136a4:	mov	w8, #0x1c                  	// #28
   136a8:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   136ac:	mov	w8, #0x18                  	// #24
   136b0:	b	11a4c <xre_compile_pattern@@Base+0xbc4>
   136b4:	ldrb	w8, [x23]
   136b8:	add	x10, x10, #0x1
   136bc:	cbz	w8, 136e0 <xre_compile_pattern@@Base+0x2858>
   136c0:	and	x9, x8, #0xff
   136c4:	ldrb	w9, [x23, x9]
   136c8:	cbnz	w9, 136e0 <xre_compile_pattern@@Base+0x2858>
   136cc:	sub	w8, w8, #0x1
   136d0:	tst	w8, #0xff
   136d4:	strb	w8, [x23]
   136d8:	b.ne	136c0 <xre_compile_pattern@@Base+0x2838>  // b.any
   136dc:	mov	w8, wzr
   136e0:	add	x23, x24, w8, uxtb
   136e4:	ldur	x24, [x29, #-152]
   136e8:	ldur	x21, [x29, #-168]
   136ec:	mov	x8, x10
   136f0:	b	13188 <xre_compile_pattern@@Base+0x2300>
   136f4:	mov	x0, x22
   136f8:	bl	5120 <free@plt>
   136fc:	mov	w0, #0xc                   	// #12
   13700:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13704:	ldr	x0, [sp, #176]
   13708:	bl	5120 <free@plt>
   1370c:	mov	w0, #0x5                   	// #5
   13710:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13714:	cbz	x22, 13734 <xre_compile_pattern@@Base+0x28ac>
   13718:	sub	w8, w23, w22
   1371c:	sub	w8, w8, #0x3
   13720:	mov	w9, #0xe                   	// #14
   13724:	strb	w8, [x22, #1]
   13728:	lsr	w8, w8, #8
   1372c:	strb	w9, [x22]
   13730:	strb	w8, [x22, #2]
   13734:	ldr	x8, [sp, #160]
   13738:	ldr	x22, [sp, #176]
   1373c:	ldur	x26, [x29, #-160]
   13740:	lsr	x8, x8, #32
   13744:	cbnz	x8, 13814 <xre_compile_pattern@@Base+0x298c>
   13748:	tbz	w26, #18, 137bc <xre_compile_pattern@@Base+0x2934>
   1374c:	ldp	x21, x8, [x20]
   13750:	sub	x9, x23, x21
   13754:	add	x9, x9, #0x1
   13758:	cmp	x9, x8
   1375c:	b.ls	137b4 <xre_compile_pattern@@Base+0x292c>  // b.plast
   13760:	mov	w19, #0x10000               	// #65536
   13764:	cmp	x8, #0x10, lsl #12
   13768:	b.eq	137e0 <xre_compile_pattern@@Base+0x2958>  // b.none
   1376c:	lsl	x8, x8, #1
   13770:	cmp	x8, #0x10, lsl #12
   13774:	csel	x1, x8, x19, cc  // cc = lo, ul, last
   13778:	mov	x0, x21
   1377c:	str	x1, [x20, #8]
   13780:	bl	5150 <realloc@plt>
   13784:	str	x0, [x20]
   13788:	cbz	x0, 137d8 <xre_compile_pattern@@Base+0x2950>
   1378c:	sub	x8, x0, x21
   13790:	cmp	x21, x0
   13794:	add	x9, x23, x8
   13798:	ldr	x8, [x25]
   1379c:	csel	x23, x23, x9, eq  // eq = none
   137a0:	sub	x9, x23, x0
   137a4:	add	x9, x9, #0x1
   137a8:	cmp	x9, x8
   137ac:	mov	x21, x0
   137b0:	b.hi	13764 <xre_compile_pattern@@Base+0x28dc>  // b.pmore
   137b4:	mov	w8, #0x1                   	// #1
   137b8:	strb	w8, [x23], #1
   137bc:	mov	x0, x22
   137c0:	bl	5120 <free@plt>
   137c4:	ldr	x8, [x20]
   137c8:	mov	w0, wzr
   137cc:	sub	x8, x23, x8
   137d0:	str	x8, [x20, #16]
   137d4:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   137d8:	mov	w0, #0xc                   	// #12
   137dc:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   137e0:	mov	w0, #0xf                   	// #15
   137e4:	ldp	x20, x19, [sp, #432]
   137e8:	ldp	x22, x21, [sp, #416]
   137ec:	ldp	x24, x23, [sp, #400]
   137f0:	ldp	x26, x25, [sp, #384]
   137f4:	ldp	x28, x27, [sp, #368]
   137f8:	ldp	x29, x30, [sp, #352]
   137fc:	add	sp, sp, #0x1c0
   13800:	ret
   13804:	ldr	x0, [sp, #176]
   13808:	bl	5120 <free@plt>
   1380c:	mov	w0, #0x7                   	// #7
   13810:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13814:	mov	x0, x22
   13818:	bl	5120 <free@plt>
   1381c:	mov	w0, #0x8                   	// #8
   13820:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13824:	ldr	x0, [sp, #176]
   13828:	bl	5120 <free@plt>
   1382c:	mov	w0, #0xd                   	// #13
   13830:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13834:	ldr	x0, [sp, #176]
   13838:	mov	x19, x14
   1383c:	bl	5120 <free@plt>
   13840:	ldur	x8, [x29, #-168]
   13844:	cmp	x19, x8
   13848:	mov	w8, #0x9                   	// #9
   1384c:	cinc	w0, w8, ne  // ne = any
   13850:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13854:	ldr	x0, [sp, #176]
   13858:	bl	5120 <free@plt>
   1385c:	mov	w0, #0x6                   	// #6
   13860:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13864:	ldr	x0, [sp, #176]
   13868:	bl	5120 <free@plt>
   1386c:	mov	w0, #0x10                  	// #16
   13870:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13874:	ldr	x0, [sp, #176]
   13878:	bl	5120 <free@plt>
   1387c:	mov	w0, #0xb                   	// #11
   13880:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   13884:	mov	w0, #0xe                   	// #14
   13888:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   1388c:	ldr	x0, [sp, #176]
   13890:	bl	5120 <free@plt>
   13894:	mov	w0, #0xa                   	// #10
   13898:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   1389c:	ldr	x0, [sp, #176]
   138a0:	bl	5120 <free@plt>
   138a4:	mov	w0, #0x3                   	// #3
   138a8:	b	137e4 <xre_compile_pattern@@Base+0x295c>
   138ac:	ldr	x0, [sp, #176]
   138b0:	bl	5120 <free@plt>
   138b4:	mov	w0, #0x4                   	// #4
   138b8:	b	137e4 <xre_compile_pattern@@Base+0x295c>

00000000000138bc <xre_comp@@Base>:
   138bc:	stp	x29, x30, [sp, #-32]!
   138c0:	stp	x20, x19, [sp, #16]
   138c4:	adrp	x20, 2b000 <xexit@@Base+0x154dc>
   138c8:	ldr	x8, [x20, #1464]
   138cc:	mov	x29, sp
   138d0:	cbz	x0, 13928 <xre_comp@@Base+0x6c>
   138d4:	mov	x19, x0
   138d8:	cbz	x8, 1393c <xre_comp@@Base+0x80>
   138dc:	adrp	x20, 2b000 <xexit@@Base+0x154dc>
   138e0:	add	x20, x20, #0x5b8
   138e4:	ldrb	w8, [x20, #56]
   138e8:	mov	x0, x19
   138ec:	orr	w8, w8, #0x80
   138f0:	strb	w8, [x20, #56]
   138f4:	bl	5060 <strlen@plt>
   138f8:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   138fc:	ldr	x8, [x8, #3800]
   13900:	mov	x1, x0
   13904:	mov	x0, x19
   13908:	mov	x3, x20
   1390c:	ldr	x2, [x8]
   13910:	bl	10edc <xre_compile_pattern@@Base+0x54>
   13914:	cbz	w0, 13978 <xre_comp@@Base+0xbc>
   13918:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   1391c:	add	x8, x8, #0x9d0
   13920:	ldr	x0, [x8, w0, sxtw #3]
   13924:	b	1397c <xre_comp@@Base+0xc0>
   13928:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   1392c:	add	x9, x9, #0x7e0
   13930:	cmp	x8, #0x0
   13934:	csel	x0, xzr, x9, ne  // ne = any
   13938:	b	1397c <xre_comp@@Base+0xc0>
   1393c:	mov	w0, #0xc8                  	// #200
   13940:	bl	5380 <malloc@plt>
   13944:	str	x0, [x20, #1464]
   13948:	cbz	x0, 1396c <xre_comp@@Base+0xb0>
   1394c:	adrp	x20, 2b000 <xexit@@Base+0x154dc>
   13950:	add	x20, x20, #0x5c0
   13954:	mov	w8, #0xc8                  	// #200
   13958:	mov	w0, #0x100                 	// #256
   1395c:	str	x8, [x20]
   13960:	bl	5380 <malloc@plt>
   13964:	str	x0, [x20, #24]
   13968:	cbnz	x0, 138dc <xre_comp@@Base+0x20>
   1396c:	adrp	x0, 16000 <xexit@@Base+0x4dc>
   13970:	add	x0, x0, #0x926
   13974:	b	1397c <xre_comp@@Base+0xc0>
   13978:	mov	x0, xzr
   1397c:	ldp	x20, x19, [sp, #16]
   13980:	ldp	x29, x30, [sp], #32
   13984:	ret

0000000000013988 <xre_exec@@Base>:
   13988:	sub	sp, sp, #0x30
   1398c:	stp	x29, x30, [sp, #16]
   13990:	str	x19, [sp, #32]
   13994:	add	x29, sp, #0x10
   13998:	mov	x19, x0
   1399c:	bl	5060 <strlen@plt>
   139a0:	mov	x4, x0
   139a4:	adrp	x0, 2b000 <xexit@@Base+0x154dc>
   139a8:	add	x0, x0, #0x5b8
   139ac:	mov	x1, xzr
   139b0:	mov	w2, wzr
   139b4:	mov	x3, x19
   139b8:	mov	w5, wzr
   139bc:	mov	w6, w4
   139c0:	mov	x7, xzr
   139c4:	str	w4, [sp]
   139c8:	bl	5490 <xre_search_2@plt>
   139cc:	ldr	x19, [sp, #32]
   139d0:	ldp	x29, x30, [sp, #16]
   139d4:	mvn	w8, w0
   139d8:	lsr	w0, w8, #31
   139dc:	add	sp, sp, #0x30
   139e0:	ret

00000000000139e4 <xregcomp@@Base>:
   139e4:	stp	x29, x30, [sp, #-80]!
   139e8:	stp	x24, x23, [sp, #32]
   139ec:	mov	w24, #0xb2be                	// #45758
   139f0:	movk	w24, #0x3, lsl #16
   139f4:	mov	w8, #0x2c6                 	// #710
   139f8:	str	x25, [sp, #16]
   139fc:	stp	x22, x21, [sp, #48]
   13a00:	stp	x20, x19, [sp, #64]
   13a04:	mov	x19, x0
   13a08:	tst	w2, #0x1
   13a0c:	movk	w8, #0x1, lsl #16
   13a10:	stp	xzr, xzr, [x0]
   13a14:	add	x9, x24, #0x3e
   13a18:	str	xzr, [x0, #16]
   13a1c:	mov	w0, #0x100                 	// #256
   13a20:	mov	x29, sp
   13a24:	mov	w22, w2
   13a28:	mov	x20, x1
   13a2c:	csel	x21, x8, x9, eq  // eq = none
   13a30:	bl	5380 <malloc@plt>
   13a34:	str	x0, [x19, #32]
   13a38:	tbnz	w22, #1, 13a50 <xregcomp@@Base+0x6c>
   13a3c:	str	xzr, [x19, #40]
   13a40:	tbnz	w22, #2, 13aa4 <xregcomp@@Base+0xc0>
   13a44:	ldrb	w8, [x19, #56]
   13a48:	and	w8, w8, #0x7f
   13a4c:	b	13ab4 <xregcomp@@Base+0xd0>
   13a50:	mov	w0, #0x100                 	// #256
   13a54:	bl	5380 <malloc@plt>
   13a58:	str	x0, [x19, #40]
   13a5c:	cbz	x0, 13b2c <xregcomp@@Base+0x148>
   13a60:	bl	5250 <__ctype_b_loc@plt>
   13a64:	mov	x23, x0
   13a68:	mov	x25, xzr
   13a6c:	b	13a90 <xregcomp@@Base+0xac>
   13a70:	bl	52e0 <__ctype_tolower_loc@plt>
   13a74:	ldr	x8, [x0]
   13a78:	ldr	w8, [x8, x25, lsl #2]
   13a7c:	ldr	x9, [x19, #40]
   13a80:	strb	w8, [x9, x25]
   13a84:	add	x25, x25, #0x1
   13a88:	cmp	x25, #0x100
   13a8c:	b.eq	13a40 <xregcomp@@Base+0x5c>  // b.none
   13a90:	ldr	x8, [x23]
   13a94:	ldrh	w8, [x8, x25, lsl #1]
   13a98:	tbnz	w8, #8, 13a70 <xregcomp@@Base+0x8c>
   13a9c:	mov	w8, w25
   13aa0:	b	13a7c <xregcomp@@Base+0x98>
   13aa4:	ldrb	w8, [x19, #56]
   13aa8:	and	x9, x21, x24
   13aac:	orr	x21, x9, #0x100
   13ab0:	orr	w8, w8, #0xffffff80
   13ab4:	lsl	w9, w22, #1
   13ab8:	strb	w8, [x19, #56]
   13abc:	and	w9, w9, #0x10
   13ac0:	and	w8, w8, #0xffffffef
   13ac4:	orr	w8, w8, w9
   13ac8:	mov	x0, x20
   13acc:	strb	w8, [x19, #56]
   13ad0:	bl	5060 <strlen@plt>
   13ad4:	mov	x1, x0
   13ad8:	mov	x0, x20
   13adc:	mov	x2, x21
   13ae0:	mov	x3, x19
   13ae4:	bl	10edc <xre_compile_pattern@@Base+0x54>
   13ae8:	cmp	w0, #0x10
   13aec:	mov	w8, #0x8                   	// #8
   13af0:	csel	w0, w8, w0, eq  // eq = none
   13af4:	cbnz	w0, 13b30 <xregcomp@@Base+0x14c>
   13af8:	ldr	x8, [x19, #32]
   13afc:	cbz	x8, 13b24 <xregcomp@@Base+0x140>
   13b00:	mov	x0, x19
   13b04:	bl	e5f4 <xre_compile_fastmap@@Base+0x4>
   13b08:	cmn	w0, #0x2
   13b0c:	b.ne	13b24 <xregcomp@@Base+0x140>  // b.any
   13b10:	ldr	x0, [x19, #32]
   13b14:	bl	5120 <free@plt>
   13b18:	mov	w0, wzr
   13b1c:	str	xzr, [x19, #32]
   13b20:	b	13b30 <xregcomp@@Base+0x14c>
   13b24:	mov	w0, wzr
   13b28:	b	13b30 <xregcomp@@Base+0x14c>
   13b2c:	mov	w0, #0xc                   	// #12
   13b30:	ldp	x20, x19, [sp, #64]
   13b34:	ldp	x22, x21, [sp, #48]
   13b38:	ldp	x24, x23, [sp, #32]
   13b3c:	ldr	x25, [sp, #16]
   13b40:	ldp	x29, x30, [sp], #80
   13b44:	ret

0000000000013b48 <xregexec@@Base>:
   13b48:	sub	sp, sp, #0xb0
   13b4c:	stp	x24, x23, [sp, #128]
   13b50:	mov	x24, x0
   13b54:	mov	x0, x1
   13b58:	stp	x29, x30, [sp, #112]
   13b5c:	stp	x22, x21, [sp, #144]
   13b60:	stp	x20, x19, [sp, #160]
   13b64:	add	x29, sp, #0x70
   13b68:	mov	w23, w4
   13b6c:	mov	x19, x3
   13b70:	mov	x20, x2
   13b74:	mov	x21, x1
   13b78:	bl	5060 <strlen@plt>
   13b7c:	ldp	q0, q1, [x24, #32]
   13b80:	ldrb	w8, [x24, #56]
   13b84:	ldp	q3, q2, [x24]
   13b88:	ubfiz	w10, w23, #5, #2
   13b8c:	stp	q0, q1, [sp, #48]
   13b90:	ldrb	w9, [sp, #72]
   13b94:	mov	x22, x0
   13b98:	stp	q3, q2, [sp, #16]
   13b9c:	and	w9, w9, #0x99999999
   13ba0:	orr	w9, w10, w9
   13ba4:	orr	w9, w9, #0x4
   13ba8:	strb	w9, [sp, #72]
   13bac:	cbz	x20, 13c44 <xregexec@@Base+0xfc>
   13bb0:	tbnz	w8, #4, 13c44 <xregexec@@Base+0xfc>
   13bb4:	lsl	x0, x20, #3
   13bb8:	stur	w20, [x29, #-24]
   13bbc:	bl	5380 <malloc@plt>
   13bc0:	stur	x0, [x29, #-16]
   13bc4:	cbz	x0, 13c74 <xregexec@@Base+0x12c>
   13bc8:	add	x8, x0, x20, lsl #2
   13bcc:	add	x0, sp, #0x10
   13bd0:	sub	x7, x29, #0x18
   13bd4:	mov	x1, xzr
   13bd8:	mov	w2, wzr
   13bdc:	mov	x3, x21
   13be0:	mov	w4, w22
   13be4:	mov	w5, wzr
   13be8:	mov	w6, w22
   13bec:	stur	x8, [x29, #-8]
   13bf0:	str	w22, [sp]
   13bf4:	bl	5490 <xre_search_2@plt>
   13bf8:	mov	w21, w0
   13bfc:	tbnz	w0, #31, 13c7c <xregexec@@Base+0x134>
   13c00:	ldp	x0, x8, [x29, #-16]
   13c04:	cmp	x20, #0x8
   13c08:	b.cs	13ca0 <xregexec@@Base+0x158>  // b.hs, b.nlast
   13c0c:	mov	x9, xzr
   13c10:	mov	w10, wzr
   13c14:	add	w10, w10, #0x1
   13c18:	lsl	x11, x9, #2
   13c1c:	ldr	w12, [x0, x11]
   13c20:	add	x13, x19, x9, lsl #3
   13c24:	mov	w9, w10
   13c28:	cmp	x9, x20
   13c2c:	str	w12, [x13]
   13c30:	ldr	w11, [x8, x11]
   13c34:	add	w10, w10, #0x1
   13c38:	str	w11, [x13, #4]
   13c3c:	b.cc	13c18 <xregexec@@Base+0xd0>  // b.lo, b.ul, b.last
   13c40:	b	13c80 <xregexec@@Base+0x138>
   13c44:	add	x0, sp, #0x10
   13c48:	mov	x1, xzr
   13c4c:	mov	w2, wzr
   13c50:	mov	x3, x21
   13c54:	mov	w4, w22
   13c58:	mov	w5, wzr
   13c5c:	mov	w6, w22
   13c60:	mov	x7, xzr
   13c64:	str	w22, [sp]
   13c68:	bl	5490 <xre_search_2@plt>
   13c6c:	mov	w21, w0
   13c70:	b	13c84 <xregexec@@Base+0x13c>
   13c74:	mov	w0, #0x1                   	// #1
   13c78:	b	13c88 <xregexec@@Base+0x140>
   13c7c:	ldur	x0, [x29, #-16]
   13c80:	bl	5120 <free@plt>
   13c84:	lsr	w0, w21, #31
   13c88:	ldp	x20, x19, [sp, #160]
   13c8c:	ldp	x22, x21, [sp, #144]
   13c90:	ldp	x24, x23, [sp, #128]
   13c94:	ldp	x29, x30, [sp, #112]
   13c98:	add	sp, sp, #0xb0
   13c9c:	ret
   13ca0:	sub	x12, x20, #0x1
   13ca4:	cmp	xzr, x12, lsr #61
   13ca8:	mov	w10, wzr
   13cac:	cset	w11, ne  // ne = any
   13cb0:	cmn	w12, #0x1
   13cb4:	mov	x9, xzr
   13cb8:	b.eq	13c14 <xregexec@@Base+0xcc>  // b.none
   13cbc:	lsr	x13, x12, #32
   13cc0:	cbnz	x13, 13c14 <xregexec@@Base+0xcc>
   13cc4:	lsl	x12, x12, #3
   13cc8:	mvn	x13, x19
   13ccc:	cmp	x12, x13
   13cd0:	b.hi	13c14 <xregexec@@Base+0xcc>  // b.pmore
   13cd4:	tbnz	w11, #0, 13c14 <xregexec@@Base+0xcc>
   13cd8:	add	x13, x19, #0x4
   13cdc:	mvn	x13, x13
   13ce0:	cmp	x12, x13
   13ce4:	b.hi	13c14 <xregexec@@Base+0xcc>  // b.pmore
   13ce8:	tbnz	w11, #0, 13c14 <xregexec@@Base+0xcc>
   13cec:	lsl	x11, x20, #2
   13cf0:	add	x13, x0, x11
   13cf4:	add	x12, x19, x20, lsl #3
   13cf8:	cmp	x13, x19
   13cfc:	add	x11, x8, x11
   13d00:	cset	w13, hi  // hi = pmore
   13d04:	cmp	x0, x12
   13d08:	cset	w14, cc  // cc = lo, ul, last
   13d0c:	cmp	x11, x19
   13d10:	cset	w11, hi  // hi = pmore
   13d14:	cmp	x8, x12
   13d18:	mov	w10, wzr
   13d1c:	mov	x9, xzr
   13d20:	and	w13, w13, w14
   13d24:	cset	w12, cc  // cc = lo, ul, last
   13d28:	tbnz	w13, #0, 13c14 <xregexec@@Base+0xcc>
   13d2c:	and	w11, w11, w12
   13d30:	tbnz	w11, #0, 13c14 <xregexec@@Base+0xcc>
   13d34:	and	x9, x20, #0xfffffffffffffff8
   13d38:	add	x11, x19, #0x20
   13d3c:	add	x12, x0, #0x10
   13d40:	mov	w10, w9
   13d44:	add	x13, x8, #0x10
   13d48:	mov	x14, x9
   13d4c:	ldp	q0, q2, [x12, #-16]
   13d50:	ldp	q1, q3, [x13, #-16]
   13d54:	sub	x15, x11, #0x20
   13d58:	add	x12, x12, #0x20
   13d5c:	subs	x14, x14, #0x8
   13d60:	st2	{v0.4s, v1.4s}, [x15]
   13d64:	st2	{v2.4s, v3.4s}, [x11]
   13d68:	add	x11, x11, #0x40
   13d6c:	add	x13, x13, #0x20
   13d70:	b.ne	13d4c <xregexec@@Base+0x204>  // b.any
   13d74:	cmp	x9, x20
   13d78:	b.ne	13c14 <xregexec@@Base+0xcc>  // b.any
   13d7c:	b	13c80 <xregexec@@Base+0x138>

0000000000013d80 <xregerror@@Base>:
   13d80:	stp	x29, x30, [sp, #-48]!
   13d84:	cmp	w0, #0x11
   13d88:	stp	x22, x21, [sp, #16]
   13d8c:	stp	x20, x19, [sp, #32]
   13d90:	mov	x29, sp
   13d94:	b.cs	13e04 <xregerror@@Base+0x84>  // b.hs, b.nlast
   13d98:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   13d9c:	add	x8, x8, #0x9d0
   13da0:	ldr	x22, [x8, w0, uxtw #3]
   13da4:	mov	x21, x3
   13da8:	mov	x19, x2
   13dac:	mov	x0, x22
   13db0:	bl	5060 <strlen@plt>
   13db4:	add	x20, x0, #0x1
   13db8:	cbz	x21, 13df0 <xregerror@@Base+0x70>
   13dbc:	cmp	x20, x21
   13dc0:	b.ls	13de0 <xregerror@@Base+0x60>  // b.plast
   13dc4:	sub	x21, x21, #0x1
   13dc8:	mov	x0, x19
   13dcc:	mov	x1, x22
   13dd0:	mov	x2, x21
   13dd4:	bl	4fb0 <memcpy@plt>
   13dd8:	strb	wzr, [x19, x21]
   13ddc:	b	13df0 <xregerror@@Base+0x70>
   13de0:	mov	x0, x19
   13de4:	mov	x1, x22
   13de8:	mov	x2, x20
   13dec:	bl	4fb0 <memcpy@plt>
   13df0:	mov	x0, x20
   13df4:	ldp	x20, x19, [sp, #32]
   13df8:	ldp	x22, x21, [sp, #16]
   13dfc:	ldp	x29, x30, [sp], #48
   13e00:	ret
   13e04:	bl	53c0 <abort@plt>

0000000000013e08 <xregfree@@Base>:
   13e08:	stp	x29, x30, [sp, #-32]!
   13e0c:	str	x19, [sp, #16]
   13e10:	mov	x19, x0
   13e14:	ldr	x0, [x0]
   13e18:	mov	x29, sp
   13e1c:	bl	5120 <free@plt>
   13e20:	ldr	x0, [x19, #32]
   13e24:	stp	xzr, xzr, [x19]
   13e28:	str	xzr, [x19, #16]
   13e2c:	bl	5120 <free@plt>
   13e30:	ldrb	w8, [x19, #56]
   13e34:	ldr	x0, [x19, #40]
   13e38:	str	xzr, [x19, #32]
   13e3c:	and	w8, w8, #0xfffffff7
   13e40:	strb	w8, [x19, #56]
   13e44:	bl	5120 <free@plt>
   13e48:	str	xzr, [x19, #40]
   13e4c:	ldr	x19, [sp, #16]
   13e50:	ldp	x29, x30, [sp], #32
   13e54:	ret
   13e58:	sub	sp, sp, #0x50
   13e5c:	stp	x29, x30, [sp, #16]
   13e60:	stp	x24, x23, [sp, #32]
   13e64:	stp	x22, x21, [sp, #48]
   13e68:	stp	x20, x19, [sp, #64]
   13e6c:	ldr	x8, [x0]
   13e70:	add	x29, sp, #0x10
   13e74:	add	x22, x8, #0x2
   13e78:	cmp	x22, x1
   13e7c:	str	x22, [sp]
   13e80:	b.cs	14048 <xregfree@@Base+0x240>  // b.hs, b.nlast
   13e84:	mov	x20, x2
   13e88:	mov	x21, x1
   13e8c:	mov	x19, x0
   13e90:	ldrb	w8, [x22]
   13e94:	cmp	w8, #0xf
   13e98:	b.eq	13ecc <xregfree@@Base+0xc4>  // b.none
   13e9c:	cmp	w8, #0x7
   13ea0:	b.eq	14070 <xregfree@@Base+0x268>  // b.none
   13ea4:	mov	x0, sp
   13ea8:	mov	x1, x21
   13eac:	mov	x2, x20
   13eb0:	bl	14080 <xregfree@@Base+0x278>
   13eb4:	tst	w0, #0xff
   13eb8:	b.eq	14048 <xregfree@@Base+0x240>  // b.none
   13ebc:	ldr	x22, [sp]
   13ec0:	cmp	x22, x21
   13ec4:	b.cc	13e90 <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   13ec8:	b	14048 <xregfree@@Base+0x240>
   13ecc:	add	x8, x22, #0x1
   13ed0:	str	x8, [sp]
   13ed4:	ldrb	w8, [x22, #1]
   13ed8:	ldrsb	w9, [x22, #2]
   13edc:	add	x23, x22, #0x3
   13ee0:	str	x23, [sp]
   13ee4:	bfi	w8, w9, #8, #24
   13ee8:	tbnz	w8, #31, 13fac <xregfree@@Base+0x1a4>
   13eec:	sxtw	x8, w8
   13ef0:	add	x9, x8, x23
   13ef4:	ldurb	w9, [x9, #-3]
   13ef8:	cmp	w9, #0xe
   13efc:	b.ne	13fc0 <xregfree@@Base+0x1b8>  // b.any
   13f00:	add	x24, x23, x8
   13f04:	sub	x22, x24, #0x3
   13f08:	cmp	x23, x22
   13f0c:	str	x23, [sp, #8]
   13f10:	b.cs	13f74 <xregfree@@Base+0x16c>  // b.hs, b.nlast
   13f14:	mov	x8, x23
   13f18:	b	13f44 <xregfree@@Base+0x13c>
   13f1c:	add	x9, x8, #0x1
   13f20:	str	x9, [sp, #8]
   13f24:	ldrb	w9, [x8, #1]
   13f28:	ldrsb	x10, [x8, #2]
   13f2c:	bfi	x9, x10, #8, #56
   13f30:	add	x8, x8, x9
   13f34:	add	x8, x8, #0x3
   13f38:	str	x8, [sp, #8]
   13f3c:	cmp	x8, x22
   13f40:	b.cs	13f74 <xregfree@@Base+0x16c>  // b.hs, b.nlast
   13f44:	ldrb	w9, [x8]
   13f48:	cmp	w9, #0xf
   13f4c:	b.eq	13f1c <xregfree@@Base+0x114>  // b.none
   13f50:	add	x0, sp, #0x8
   13f54:	mov	x1, x22
   13f58:	mov	x2, x20
   13f5c:	bl	14080 <xregfree@@Base+0x278>
   13f60:	tst	w0, #0xff
   13f64:	b.eq	14050 <xregfree@@Base+0x248>  // b.none
   13f68:	ldr	x8, [sp, #8]
   13f6c:	cmp	x8, x22
   13f70:	b.cc	13f44 <xregfree@@Base+0x13c>  // b.lo, b.ul, b.last
   13f74:	ldrb	w8, [x24]
   13f78:	cmp	w8, #0xf
   13f7c:	b.ne	13fbc <xregfree@@Base+0x1b4>  // b.any
   13f80:	ldrb	w8, [x24, #1]
   13f84:	ldrsb	x9, [x24, #2]
   13f88:	add	x23, x24, #0x3
   13f8c:	bfi	x8, x9, #8, #56
   13f90:	add	x9, x8, x23
   13f94:	ldurb	w9, [x9, #-3]
   13f98:	cmp	w9, #0xe
   13f9c:	b.eq	13eec <xregfree@@Base+0xe4>  // b.none
   13fa0:	str	x23, [sp]
   13fa4:	sub	x23, x23, #0x3
   13fa8:	b	13fc0 <xregfree@@Base+0x1b8>
   13fac:	mov	x22, x23
   13fb0:	cmp	x22, x21
   13fb4:	b.cc	13e90 <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   13fb8:	b	14048 <xregfree@@Base+0x240>
   13fbc:	mov	x23, x24
   13fc0:	str	x23, [sp]
   13fc4:	ldurb	w8, [x23, #-2]
   13fc8:	ldursb	x9, [x23, #-1]
   13fcc:	str	x23, [sp, #8]
   13fd0:	bfi	x8, x9, #8, #56
   13fd4:	add	x22, x23, x8
   13fd8:	cmp	w8, #0x1
   13fdc:	b.ge	1400c <xregfree@@Base+0x204>  // b.tcont
   13fe0:	b	1403c <xregfree@@Base+0x234>
   13fe4:	add	x8, x23, #0x1
   13fe8:	str	x8, [sp, #8]
   13fec:	ldrb	w8, [x23, #1]
   13ff0:	ldrsb	x9, [x23, #2]
   13ff4:	bfi	x8, x9, #8, #56
   13ff8:	add	x8, x23, x8
   13ffc:	add	x23, x8, #0x3
   14000:	str	x23, [sp, #8]
   14004:	cmp	x23, x22
   14008:	b.cs	1403c <xregfree@@Base+0x234>  // b.hs, b.nlast
   1400c:	ldrb	w8, [x23]
   14010:	cmp	w8, #0xf
   14014:	b.eq	13fe4 <xregfree@@Base+0x1dc>  // b.none
   14018:	add	x0, sp, #0x8
   1401c:	mov	x1, x22
   14020:	mov	x2, x20
   14024:	bl	14080 <xregfree@@Base+0x278>
   14028:	tst	w0, #0xff
   1402c:	b.eq	14048 <xregfree@@Base+0x240>  // b.none
   14030:	ldr	x23, [sp, #8]
   14034:	cmp	x23, x22
   14038:	b.cc	1400c <xregfree@@Base+0x204>  // b.lo, b.ul, b.last
   1403c:	str	x22, [sp]
   14040:	cmp	x22, x21
   14044:	b.cc	13e90 <xregfree@@Base+0x88>  // b.lo, b.ul, b.last
   14048:	mov	w0, wzr
   1404c:	b	14058 <xregfree@@Base+0x250>
   14050:	mov	w0, wzr
   14054:	str	x23, [sp]
   14058:	ldp	x20, x19, [sp, #64]
   1405c:	ldp	x22, x21, [sp, #48]
   14060:	ldp	x24, x23, [sp, #32]
   14064:	ldp	x29, x30, [sp, #16]
   14068:	add	sp, sp, #0x50
   1406c:	ret
   14070:	add	x8, x22, #0x2
   14074:	str	x8, [x19]
   14078:	mov	w0, #0x1                   	// #1
   1407c:	b	14058 <xregfree@@Base+0x250>
   14080:	stp	x29, x30, [sp, #-48]!
   14084:	stp	x20, x19, [sp, #32]
   14088:	ldr	x9, [x0]
   1408c:	mov	x29, sp
   14090:	mov	x19, x0
   14094:	mov	w0, wzr
   14098:	add	x8, x9, #0x1
   1409c:	str	x8, [x29, #24]
   140a0:	ldrb	w10, [x9]
   140a4:	str	x21, [sp, #16]
   140a8:	cmp	w10, #0x1d
   140ac:	b.hi	140d4 <xregfree@@Base+0x2cc>  // b.pmore
   140b0:	adrp	x11, 16000 <xexit@@Base+0x4dc>
   140b4:	add	x11, x11, #0x772
   140b8:	adr	x12, 140cc <xregfree@@Base+0x2c4>
   140bc:	ldrb	w13, [x11, x10]
   140c0:	add	x12, x12, x13, lsl #2
   140c4:	mov	x20, x2
   140c8:	br	x12
   140cc:	mov	w0, #0x1                   	// #1
   140d0:	str	x8, [x19]
   140d4:	ldp	x20, x19, [sp, #32]
   140d8:	ldr	x21, [sp, #16]
   140dc:	ldp	x29, x30, [sp], #48
   140e0:	ret
   140e4:	ldrb	w21, [x8]
   140e8:	add	x0, x29, #0x18
   140ec:	mov	x2, x20
   140f0:	bl	13e58 <xregfree@@Base+0x50>
   140f4:	add	x8, x20, x21, lsl #3
   140f8:	ldrb	w9, [x8]
   140fc:	mvn	w10, w9
   14100:	tst	w10, #0x3
   14104:	b.ne	14110 <xregfree@@Base+0x308>  // b.any
   14108:	bfxil	w9, w0, #0, #2
   1410c:	strb	w9, [x8]
   14110:	tst	w0, #0xff
   14114:	b.eq	14178 <xregfree@@Base+0x370>  // b.none
   14118:	ldr	x8, [x29, #24]
   1411c:	b	140cc <xregfree@@Base+0x2c4>
   14120:	ldrb	w9, [x8]
   14124:	lsl	x9, x9, #3
   14128:	ldrb	w9, [x20, x9]
   1412c:	tst	w9, #0x3
   14130:	b.ne	140cc <xregfree@@Base+0x2c4>  // b.any
   14134:	b	14178 <xregfree@@Base+0x370>
   14138:	ldrsb	w8, [x9, #2]
   1413c:	ldrb	w10, [x9, #1]
   14140:	add	x9, x9, #0x3
   14144:	str	x9, [x29, #24]
   14148:	lsl	w8, w8, #8
   1414c:	orr	x8, x8, x10
   14150:	tbnz	w8, #31, 14178 <xregfree@@Base+0x370>
   14154:	add	x8, x9, x8
   14158:	b	141a0 <xregfree@@Base+0x398>
   1415c:	mov	x8, x9
   14160:	ldrb	w10, [x8, #3]!
   14164:	ldrsb	w11, [x8, #1]
   14168:	bfi	w10, w11, #8, #24
   1416c:	add	x11, x8, #0x2
   14170:	str	x11, [x29, #24]
   14174:	cbz	w10, 14190 <xregfree@@Base+0x388>
   14178:	mov	w0, wzr
   1417c:	b	140d4 <xregfree@@Base+0x2cc>
   14180:	add	x8, x9, #0x5
   14184:	mov	w0, wzr
   14188:	str	x8, [x29, #24]
   1418c:	b	140d4 <xregfree@@Base+0x2cc>
   14190:	ldrb	w10, [x9, #1]
   14194:	ldrsb	x9, [x9, #2]
   14198:	bfi	x10, x9, #8, #56
   1419c:	add	x8, x8, x10
   141a0:	str	x8, [x29, #24]
   141a4:	b	140cc <xregfree@@Base+0x2c4>

00000000000141a8 <concat_length@@Base>:
   141a8:	sub	sp, sp, #0x120
   141ac:	stp	x29, x30, [sp, #224]
   141b0:	add	x29, sp, #0xe0
   141b4:	mov	x8, #0xffffffffffffffc8    	// #-56
   141b8:	mov	x9, sp
   141bc:	sub	x10, x29, #0x58
   141c0:	stp	x20, x19, [sp, #272]
   141c4:	movk	x8, #0xff80, lsl #32
   141c8:	add	x11, x29, #0x40
   141cc:	add	x9, x9, #0x80
   141d0:	add	x20, x10, #0x38
   141d4:	str	x28, [sp, #240]
   141d8:	stp	x22, x21, [sp, #256]
   141dc:	stp	x1, x2, [x29, #-88]
   141e0:	stp	x3, x4, [x29, #-72]
   141e4:	stp	x5, x6, [x29, #-56]
   141e8:	stur	x7, [x29, #-40]
   141ec:	stp	q0, q1, [sp]
   141f0:	stp	q2, q3, [sp, #32]
   141f4:	stp	q4, q5, [sp, #64]
   141f8:	stp	q6, q7, [sp, #96]
   141fc:	stp	x9, x8, [x29, #-16]
   14200:	stp	x11, x20, [x29, #-32]
   14204:	cbz	x0, 14258 <concat_length@@Base+0xb0>
   14208:	ldur	w22, [x29, #-8]
   1420c:	ldur	x21, [x29, #-32]
   14210:	mov	x19, xzr
   14214:	b	14230 <concat_length@@Base+0x88>
   14218:	mov	w8, w22
   1421c:	add	x9, x21, #0x8
   14220:	ldr	x0, [x21]
   14224:	mov	x21, x9
   14228:	mov	w22, w8
   1422c:	cbz	x0, 1425c <concat_length@@Base+0xb4>
   14230:	bl	5060 <strlen@plt>
   14234:	add	x19, x0, x19
   14238:	tbz	w22, #31, 14218 <concat_length@@Base+0x70>
   1423c:	cmn	w22, #0x8
   14240:	add	w8, w22, #0x8
   14244:	b.gt	1421c <concat_length@@Base+0x74>
   14248:	add	x10, x20, w22, sxtw
   1424c:	mov	x9, x21
   14250:	mov	x21, x10
   14254:	b	14220 <concat_length@@Base+0x78>
   14258:	mov	x19, xzr
   1425c:	mov	x0, x19
   14260:	ldp	x20, x19, [sp, #272]
   14264:	ldp	x22, x21, [sp, #256]
   14268:	ldr	x28, [sp, #240]
   1426c:	ldp	x29, x30, [sp, #224]
   14270:	add	sp, sp, #0x120
   14274:	ret

0000000000014278 <concat_copy@@Base>:
   14278:	sub	sp, sp, #0x120
   1427c:	stp	x29, x30, [sp, #208]
   14280:	add	x29, sp, #0xd0
   14284:	mov	x8, #0xffffffffffffffd0    	// #-48
   14288:	mov	x9, sp
   1428c:	sub	x10, x29, #0x50
   14290:	stp	x24, x23, [sp, #240]
   14294:	stp	x20, x19, [sp, #272]
   14298:	mov	x19, x0
   1429c:	movk	x8, #0xff80, lsl #32
   142a0:	add	x11, x29, #0x50
   142a4:	add	x9, x9, #0x80
   142a8:	add	x23, x10, #0x30
   142ac:	mov	x20, x0
   142b0:	stp	x28, x25, [sp, #224]
   142b4:	stp	x22, x21, [sp, #256]
   142b8:	stp	x2, x3, [x29, #-80]
   142bc:	stp	x4, x5, [x29, #-64]
   142c0:	stp	x6, x7, [x29, #-48]
   142c4:	stp	q1, q2, [sp, #16]
   142c8:	stp	q3, q4, [sp, #48]
   142cc:	str	q0, [sp]
   142d0:	stp	q5, q6, [sp, #80]
   142d4:	str	q7, [sp, #112]
   142d8:	stp	x9, x8, [x29, #-16]
   142dc:	stp	x11, x23, [x29, #-32]
   142e0:	cbz	x1, 14350 <concat_copy@@Base+0xd8>
   142e4:	ldur	w25, [x29, #-8]
   142e8:	ldur	x24, [x29, #-32]
   142ec:	mov	x21, x1
   142f0:	mov	x20, x19
   142f4:	b	14310 <concat_copy@@Base+0x98>
   142f8:	mov	w8, w25
   142fc:	add	x9, x24, #0x8
   14300:	ldr	x21, [x24]
   14304:	mov	w25, w8
   14308:	mov	x24, x9
   1430c:	cbz	x21, 14350 <concat_copy@@Base+0xd8>
   14310:	mov	x0, x21
   14314:	bl	5060 <strlen@plt>
   14318:	mov	x22, x0
   1431c:	mov	x0, x20
   14320:	mov	x1, x21
   14324:	mov	x2, x22
   14328:	bl	4fb0 <memcpy@plt>
   1432c:	add	x20, x20, x22
   14330:	tbz	w25, #31, 142f8 <concat_copy@@Base+0x80>
   14334:	cmn	w25, #0x8
   14338:	add	w8, w25, #0x8
   1433c:	b.gt	142fc <concat_copy@@Base+0x84>
   14340:	add	x10, x23, w25, sxtw
   14344:	mov	x9, x24
   14348:	mov	x24, x10
   1434c:	b	14300 <concat_copy@@Base+0x88>
   14350:	strb	wzr, [x20]
   14354:	mov	x0, x19
   14358:	ldp	x20, x19, [sp, #272]
   1435c:	ldp	x22, x21, [sp, #256]
   14360:	ldp	x24, x23, [sp, #240]
   14364:	ldp	x28, x25, [sp, #224]
   14368:	ldp	x29, x30, [sp, #208]
   1436c:	add	sp, sp, #0x120
   14370:	ret

0000000000014374 <concat_copy2@@Base>:
   14374:	sub	sp, sp, #0x130
   14378:	stp	x29, x30, [sp, #224]
   1437c:	add	x29, sp, #0xe0
   14380:	stp	x28, x25, [sp, #240]
   14384:	stp	x24, x23, [sp, #256]
   14388:	stp	x22, x21, [sp, #272]
   1438c:	stp	x20, x19, [sp, #288]
   14390:	stp	x1, x2, [x29, #-88]
   14394:	stp	x3, x4, [x29, #-72]
   14398:	stp	x5, x6, [x29, #-56]
   1439c:	stur	x7, [x29, #-40]
   143a0:	stp	q0, q1, [sp]
   143a4:	stp	q2, q3, [sp, #32]
   143a8:	stp	q4, q5, [sp, #64]
   143ac:	stp	q6, q7, [sp, #96]
   143b0:	adrp	x22, 2a000 <xexit@@Base+0x144dc>
   143b4:	ldr	x22, [x22, #3840]
   143b8:	mov	x8, #0xffffffffffffffc8    	// #-56
   143bc:	mov	x9, sp
   143c0:	movk	x8, #0xff80, lsl #32
   143c4:	ldr	x19, [x22]
   143c8:	sub	x10, x29, #0x58
   143cc:	add	x9, x9, #0x80
   143d0:	add	x23, x10, #0x38
   143d4:	stp	x9, x8, [x29, #-16]
   143d8:	add	x8, x29, #0x50
   143dc:	stp	x8, x23, [x29, #-32]
   143e0:	cbz	x0, 1444c <concat_copy2@@Base+0xd8>
   143e4:	ldur	w25, [x29, #-8]
   143e8:	ldur	x24, [x29, #-32]
   143ec:	mov	x20, x0
   143f0:	b	1440c <concat_copy2@@Base+0x98>
   143f4:	mov	w8, w25
   143f8:	add	x9, x24, #0x8
   143fc:	ldr	x20, [x24]
   14400:	mov	w25, w8
   14404:	mov	x24, x9
   14408:	cbz	x20, 1444c <concat_copy2@@Base+0xd8>
   1440c:	mov	x0, x20
   14410:	bl	5060 <strlen@plt>
   14414:	mov	x21, x0
   14418:	mov	x0, x19
   1441c:	mov	x1, x20
   14420:	mov	x2, x21
   14424:	bl	4fb0 <memcpy@plt>
   14428:	add	x19, x19, x21
   1442c:	tbz	w25, #31, 143f4 <concat_copy2@@Base+0x80>
   14430:	cmn	w25, #0x8
   14434:	add	w8, w25, #0x8
   14438:	b.gt	143f8 <concat_copy2@@Base+0x84>
   1443c:	add	x10, x23, w25, sxtw
   14440:	mov	x9, x24
   14444:	mov	x24, x10
   14448:	b	143fc <concat_copy2@@Base+0x88>
   1444c:	strb	wzr, [x19]
   14450:	ldr	x0, [x22]
   14454:	ldp	x20, x19, [sp, #288]
   14458:	ldp	x22, x21, [sp, #272]
   1445c:	ldp	x24, x23, [sp, #256]
   14460:	ldp	x28, x25, [sp, #240]
   14464:	ldp	x29, x30, [sp, #224]
   14468:	add	sp, sp, #0x130
   1446c:	ret

0000000000014470 <concat@@Base>:
   14470:	sub	sp, sp, #0x140
   14474:	stp	x29, x30, [sp, #224]
   14478:	add	x29, sp, #0xe0
   1447c:	stp	x22, x21, [sp, #288]
   14480:	mov	x21, #0xffffffffffffffc8    	// #-56
   14484:	mov	x8, sp
   14488:	sub	x9, x29, #0x58
   1448c:	stp	x24, x23, [sp, #272]
   14490:	stp	x20, x19, [sp, #304]
   14494:	mov	x19, x0
   14498:	movk	x21, #0xff80, lsl #32
   1449c:	add	x24, x29, #0x60
   144a0:	add	x22, x8, #0x80
   144a4:	add	x23, x9, #0x38
   144a8:	str	x28, [sp, #240]
   144ac:	stp	x26, x25, [sp, #256]
   144b0:	stp	x1, x2, [x29, #-88]
   144b4:	stp	x3, x4, [x29, #-72]
   144b8:	stp	x5, x6, [x29, #-56]
   144bc:	stur	x7, [x29, #-40]
   144c0:	stp	q0, q1, [sp]
   144c4:	stp	q2, q3, [sp, #32]
   144c8:	stp	q4, q5, [sp, #64]
   144cc:	stp	q6, q7, [sp, #96]
   144d0:	stp	x22, x21, [x29, #-16]
   144d4:	stp	x24, x23, [x29, #-32]
   144d8:	cbz	x0, 14538 <concat@@Base+0xc8>
   144dc:	ldur	w26, [x29, #-8]
   144e0:	ldur	x25, [x29, #-32]
   144e4:	mov	x20, xzr
   144e8:	mov	x0, x19
   144ec:	b	14508 <concat@@Base+0x98>
   144f0:	mov	w8, w26
   144f4:	add	x9, x25, #0x8
   144f8:	ldr	x0, [x25]
   144fc:	mov	x25, x9
   14500:	mov	w26, w8
   14504:	cbz	x0, 14530 <concat@@Base+0xc0>
   14508:	bl	5060 <strlen@plt>
   1450c:	add	x20, x0, x20
   14510:	tbz	w26, #31, 144f0 <concat@@Base+0x80>
   14514:	cmn	w26, #0x8
   14518:	add	w8, w26, #0x8
   1451c:	b.gt	144f4 <concat@@Base+0x84>
   14520:	add	x10, x23, w26, sxtw
   14524:	mov	x9, x25
   14528:	mov	x25, x10
   1452c:	b	144f8 <concat@@Base+0x88>
   14530:	add	x0, x20, #0x1
   14534:	b	1453c <concat@@Base+0xcc>
   14538:	mov	w0, #0x1                   	// #1
   1453c:	bl	52f0 <xmalloc@plt>
   14540:	mov	x20, x0
   14544:	stp	x22, x21, [x29, #-16]
   14548:	mov	x21, x0
   1454c:	stp	x24, x23, [x29, #-32]
   14550:	cbz	x19, 145bc <concat@@Base+0x14c>
   14554:	ldur	w25, [x29, #-8]
   14558:	ldur	x24, [x29, #-32]
   1455c:	mov	x21, x20
   14560:	b	1457c <concat@@Base+0x10c>
   14564:	mov	w8, w25
   14568:	add	x9, x24, #0x8
   1456c:	ldr	x19, [x24]
   14570:	mov	w25, w8
   14574:	mov	x24, x9
   14578:	cbz	x19, 145bc <concat@@Base+0x14c>
   1457c:	mov	x0, x19
   14580:	bl	5060 <strlen@plt>
   14584:	mov	x22, x0
   14588:	mov	x0, x21
   1458c:	mov	x1, x19
   14590:	mov	x2, x22
   14594:	bl	4fb0 <memcpy@plt>
   14598:	add	x21, x21, x22
   1459c:	tbz	w25, #31, 14564 <concat@@Base+0xf4>
   145a0:	cmn	w25, #0x8
   145a4:	add	w8, w25, #0x8
   145a8:	b.gt	14568 <concat@@Base+0xf8>
   145ac:	add	x10, x23, w25, sxtw
   145b0:	mov	x9, x24
   145b4:	mov	x24, x10
   145b8:	b	1456c <concat@@Base+0xfc>
   145bc:	strb	wzr, [x21]
   145c0:	mov	x0, x20
   145c4:	ldp	x20, x19, [sp, #304]
   145c8:	ldp	x22, x21, [sp, #288]
   145cc:	ldp	x24, x23, [sp, #272]
   145d0:	ldp	x26, x25, [sp, #256]
   145d4:	ldr	x28, [sp, #240]
   145d8:	ldp	x29, x30, [sp, #224]
   145dc:	add	sp, sp, #0x140
   145e0:	ret

00000000000145e4 <reconcat@@Base>:
   145e4:	sub	sp, sp, #0x130
   145e8:	stp	x29, x30, [sp, #208]
   145ec:	add	x29, sp, #0xd0
   145f0:	stp	x22, x21, [sp, #272]
   145f4:	mov	x22, #0xffffffffffffffd0    	// #-48
   145f8:	mov	x8, sp
   145fc:	sub	x9, x29, #0x50
   14600:	stp	x26, x25, [sp, #240]
   14604:	stp	x24, x23, [sp, #256]
   14608:	stp	x20, x19, [sp, #288]
   1460c:	mov	x20, x1
   14610:	mov	x19, x0
   14614:	movk	x22, #0xff80, lsl #32
   14618:	add	x25, x29, #0x60
   1461c:	add	x23, x8, #0x80
   14620:	add	x24, x9, #0x30
   14624:	stp	x28, x27, [sp, #224]
   14628:	stp	x2, x3, [x29, #-80]
   1462c:	stp	x4, x5, [x29, #-64]
   14630:	stp	x6, x7, [x29, #-48]
   14634:	stp	q1, q2, [sp, #16]
   14638:	stp	q3, q4, [sp, #48]
   1463c:	str	q0, [sp]
   14640:	stp	q5, q6, [sp, #80]
   14644:	str	q7, [sp, #112]
   14648:	stp	x23, x22, [x29, #-16]
   1464c:	stp	x25, x24, [x29, #-32]
   14650:	cbz	x1, 146b0 <reconcat@@Base+0xcc>
   14654:	ldur	w27, [x29, #-8]
   14658:	ldur	x26, [x29, #-32]
   1465c:	mov	x21, xzr
   14660:	mov	x0, x20
   14664:	b	14680 <reconcat@@Base+0x9c>
   14668:	mov	w8, w27
   1466c:	add	x9, x26, #0x8
   14670:	ldr	x0, [x26]
   14674:	mov	x26, x9
   14678:	mov	w27, w8
   1467c:	cbz	x0, 146a8 <reconcat@@Base+0xc4>
   14680:	bl	5060 <strlen@plt>
   14684:	add	x21, x0, x21
   14688:	tbz	w27, #31, 14668 <reconcat@@Base+0x84>
   1468c:	cmn	w27, #0x8
   14690:	add	w8, w27, #0x8
   14694:	b.gt	1466c <reconcat@@Base+0x88>
   14698:	add	x10, x24, w27, sxtw
   1469c:	mov	x9, x26
   146a0:	mov	x26, x10
   146a4:	b	14670 <reconcat@@Base+0x8c>
   146a8:	add	x0, x21, #0x1
   146ac:	b	146b4 <reconcat@@Base+0xd0>
   146b0:	mov	w0, #0x1                   	// #1
   146b4:	bl	52f0 <xmalloc@plt>
   146b8:	mov	x21, x0
   146bc:	stp	x23, x22, [x29, #-16]
   146c0:	mov	x22, x0
   146c4:	stp	x25, x24, [x29, #-32]
   146c8:	cbz	x20, 14734 <reconcat@@Base+0x150>
   146cc:	ldur	w26, [x29, #-8]
   146d0:	ldur	x25, [x29, #-32]
   146d4:	mov	x22, x21
   146d8:	b	146f4 <reconcat@@Base+0x110>
   146dc:	mov	w8, w26
   146e0:	add	x9, x25, #0x8
   146e4:	ldr	x20, [x25]
   146e8:	mov	w26, w8
   146ec:	mov	x25, x9
   146f0:	cbz	x20, 14734 <reconcat@@Base+0x150>
   146f4:	mov	x0, x20
   146f8:	bl	5060 <strlen@plt>
   146fc:	mov	x23, x0
   14700:	mov	x0, x22
   14704:	mov	x1, x20
   14708:	mov	x2, x23
   1470c:	bl	4fb0 <memcpy@plt>
   14710:	add	x22, x22, x23
   14714:	tbz	w26, #31, 146dc <reconcat@@Base+0xf8>
   14718:	cmn	w26, #0x8
   1471c:	add	w8, w26, #0x8
   14720:	b.gt	146e0 <reconcat@@Base+0xfc>
   14724:	add	x10, x24, w26, sxtw
   14728:	mov	x9, x25
   1472c:	mov	x25, x10
   14730:	b	146e4 <reconcat@@Base+0x100>
   14734:	strb	wzr, [x22]
   14738:	cbz	x19, 14744 <reconcat@@Base+0x160>
   1473c:	mov	x0, x19
   14740:	bl	5120 <free@plt>
   14744:	mov	x0, x21
   14748:	ldp	x20, x19, [sp, #288]
   1474c:	ldp	x22, x21, [sp, #272]
   14750:	ldp	x24, x23, [sp, #256]
   14754:	ldp	x26, x25, [sp, #240]
   14758:	ldp	x28, x27, [sp, #224]
   1475c:	ldp	x29, x30, [sp, #208]
   14760:	add	sp, sp, #0x130
   14764:	ret
   14768:	lsr	x8, x0, #32
   1476c:	mov	w9, #0xadcc                	// #44492
   14770:	movk	w9, #0xbdec, lsl #16
   14774:	mov	w10, #0x109a                	// #4250
   14778:	sub	w8, w8, w0
   1477c:	movk	w10, #0x2, lsl #16
   14780:	add	w8, w8, w9
   14784:	mov	w9, #0x2785                	// #10117
   14788:	eor	w8, w8, w10
   1478c:	movk	w9, #0x5c24, lsl #16
   14790:	sub	w11, w0, w8
   14794:	add	w9, w11, w9
   14798:	mov	w10, #0x5234                	// #21044
   1479c:	eor	w9, w9, w8, lsl #8
   147a0:	movk	w10, #0x4213, lsl #16
   147a4:	add	w11, w8, w9
   147a8:	sub	w10, w10, w11
   147ac:	sub	w8, w8, w9
   147b0:	eor	w10, w10, w9, lsr #13
   147b4:	sub	w8, w8, w10
   147b8:	sub	w9, w9, w10
   147bc:	eor	w8, w8, w10, lsr #12
   147c0:	sub	w9, w9, w8
   147c4:	sub	w10, w10, w8
   147c8:	eor	w9, w9, w8, lsl #16
   147cc:	sub	w10, w10, w9
   147d0:	sub	w8, w8, w9
   147d4:	eor	w10, w10, w9, lsr #5
   147d8:	sub	w8, w8, w10
   147dc:	sub	w9, w9, w10
   147e0:	eor	w8, w8, w10, lsr #3
   147e4:	sub	w9, w9, w8
   147e8:	eor	w9, w9, w8, lsl #10
   147ec:	sub	w8, w10, w8
   147f0:	sub	w8, w8, w9
   147f4:	eor	w0, w8, w9, lsr #15
   147f8:	ret
   147fc:	cmp	x0, x1
   14800:	cset	w0, eq  // eq = none
   14804:	ret

0000000000014808 <htab_size@@Base>:
   14808:	ldr	x0, [x0, #32]
   1480c:	ret

0000000000014810 <htab_elements@@Base>:
   14810:	ldp	x8, x9, [x0, #40]
   14814:	sub	x0, x8, x9
   14818:	ret

000000000001481c <htab_create_alloc@@Base>:
   1481c:	stp	x29, x30, [sp, #-80]!
   14820:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   14824:	stp	x26, x25, [sp, #16]
   14828:	stp	x24, x23, [sp, #32]
   1482c:	stp	x22, x21, [sp, #48]
   14830:	stp	x20, x19, [sp, #64]
   14834:	mov	x19, x5
   14838:	mov	x20, x4
   1483c:	mov	x21, x3
   14840:	mov	x22, x2
   14844:	mov	x23, x1
   14848:	mov	x2, x0
   1484c:	mov	w8, wzr
   14850:	mov	w26, #0x1e                  	// #30
   14854:	add	x9, x9, #0x9bc
   14858:	mov	x29, sp
   1485c:	sub	w10, w26, w8
   14860:	add	w10, w8, w10, lsr #1
   14864:	lsl	x11, x10, #4
   14868:	ldr	w11, [x9, x11]
   1486c:	cmp	x11, x2
   14870:	csel	w26, w26, w10, cc  // cc = lo, ul, last
   14874:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   14878:	cmp	w26, w8
   1487c:	b.ne	1485c <htab_create_alloc@@Base+0x40>  // b.any
   14880:	mov	w8, w26
   14884:	lsl	x8, x8, #4
   14888:	ldr	w25, [x9, x8]
   1488c:	cmp	x25, x2
   14890:	b.cc	14900 <htab_create_alloc@@Base+0xe4>  // b.lo, b.ul, b.last
   14894:	mov	w0, #0x1                   	// #1
   14898:	mov	w1, #0x70                  	// #112
   1489c:	blr	x20
   148a0:	mov	x24, x0
   148a4:	cbz	x0, 148e4 <htab_create_alloc@@Base+0xc8>
   148a8:	mov	w1, #0x8                   	// #8
   148ac:	mov	x0, x25
   148b0:	blr	x20
   148b4:	str	x0, [x24, #24]
   148b8:	cbz	x0, 148d4 <htab_create_alloc@@Base+0xb8>
   148bc:	str	x25, [x24, #32]
   148c0:	str	w26, [x24, #104]
   148c4:	stp	x23, x22, [x24]
   148c8:	str	x21, [x24, #16]
   148cc:	stp	x20, x19, [x24, #64]
   148d0:	b	148e4 <htab_create_alloc@@Base+0xc8>
   148d4:	cbz	x19, 148e0 <htab_create_alloc@@Base+0xc4>
   148d8:	mov	x0, x24
   148dc:	blr	x19
   148e0:	mov	x24, xzr
   148e4:	mov	x0, x24
   148e8:	ldp	x20, x19, [sp, #64]
   148ec:	ldp	x22, x21, [sp, #48]
   148f0:	ldp	x24, x23, [sp, #32]
   148f4:	ldp	x26, x25, [sp, #16]
   148f8:	ldp	x29, x30, [sp], #80
   148fc:	ret
   14900:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14904:	ldr	x8, [x8, #3968]
   14908:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   1490c:	add	x1, x1, #0xb9c
   14910:	ldr	x0, [x8]
   14914:	bl	5070 <fprintf@plt>
   14918:	bl	53c0 <abort@plt>

000000000001491c <htab_create_typed_alloc@@Base>:
   1491c:	stp	x29, x30, [sp, #-80]!
   14920:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   14924:	stp	x26, x25, [sp, #16]
   14928:	stp	x24, x23, [sp, #32]
   1492c:	stp	x22, x21, [sp, #48]
   14930:	stp	x20, x19, [sp, #64]
   14934:	mov	x19, x6
   14938:	mov	x20, x5
   1493c:	mov	x21, x3
   14940:	mov	x22, x2
   14944:	mov	x23, x1
   14948:	mov	x2, x0
   1494c:	mov	w8, wzr
   14950:	mov	w26, #0x1e                  	// #30
   14954:	add	x9, x9, #0x9bc
   14958:	mov	x29, sp
   1495c:	sub	w10, w26, w8
   14960:	add	w10, w8, w10, lsr #1
   14964:	lsl	x11, x10, #4
   14968:	ldr	w11, [x9, x11]
   1496c:	cmp	x11, x2
   14970:	csel	w26, w26, w10, cc  // cc = lo, ul, last
   14974:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   14978:	cmp	w26, w8
   1497c:	b.ne	1495c <htab_create_typed_alloc@@Base+0x40>  // b.any
   14980:	mov	w8, w26
   14984:	lsl	x8, x8, #4
   14988:	ldr	w25, [x9, x8]
   1498c:	cmp	x25, x2
   14990:	b.cc	14a00 <htab_create_typed_alloc@@Base+0xe4>  // b.lo, b.ul, b.last
   14994:	mov	w0, #0x1                   	// #1
   14998:	mov	w1, #0x70                  	// #112
   1499c:	blr	x4
   149a0:	mov	x24, x0
   149a4:	cbz	x0, 149e4 <htab_create_typed_alloc@@Base+0xc8>
   149a8:	mov	w1, #0x8                   	// #8
   149ac:	mov	x0, x25
   149b0:	blr	x20
   149b4:	str	x0, [x24, #24]
   149b8:	cbz	x0, 149d4 <htab_create_typed_alloc@@Base+0xb8>
   149bc:	str	x25, [x24, #32]
   149c0:	str	w26, [x24, #104]
   149c4:	stp	x23, x22, [x24]
   149c8:	str	x21, [x24, #16]
   149cc:	stp	x20, x19, [x24, #64]
   149d0:	b	149e4 <htab_create_typed_alloc@@Base+0xc8>
   149d4:	cbz	x19, 149e0 <htab_create_typed_alloc@@Base+0xc4>
   149d8:	mov	x0, x24
   149dc:	blr	x19
   149e0:	mov	x24, xzr
   149e4:	mov	x0, x24
   149e8:	ldp	x20, x19, [sp, #64]
   149ec:	ldp	x22, x21, [sp, #48]
   149f0:	ldp	x24, x23, [sp, #32]
   149f4:	ldp	x26, x25, [sp, #16]
   149f8:	ldp	x29, x30, [sp], #80
   149fc:	ret
   14a00:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14a04:	ldr	x8, [x8, #3968]
   14a08:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   14a0c:	add	x1, x1, #0xb9c
   14a10:	ldr	x0, [x8]
   14a14:	bl	5070 <fprintf@plt>
   14a18:	bl	53c0 <abort@plt>

0000000000014a1c <htab_create_alloc_ex@@Base>:
   14a1c:	stp	x29, x30, [sp, #-96]!
   14a20:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   14a24:	str	x27, [sp, #16]
   14a28:	stp	x24, x23, [sp, #48]
   14a2c:	stp	x22, x21, [sp, #64]
   14a30:	stp	x20, x19, [sp, #80]
   14a34:	mov	x19, x6
   14a38:	mov	x21, x5
   14a3c:	mov	x20, x4
   14a40:	mov	x22, x3
   14a44:	mov	x23, x2
   14a48:	mov	x24, x1
   14a4c:	mov	x2, x0
   14a50:	mov	w8, wzr
   14a54:	mov	w27, #0x1e                  	// #30
   14a58:	add	x9, x9, #0x9bc
   14a5c:	stp	x26, x25, [sp, #32]
   14a60:	mov	x29, sp
   14a64:	sub	w10, w27, w8
   14a68:	add	w10, w8, w10, lsr #1
   14a6c:	lsl	x11, x10, #4
   14a70:	ldr	w11, [x9, x11]
   14a74:	cmp	x11, x2
   14a78:	csel	w27, w27, w10, cc  // cc = lo, ul, last
   14a7c:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   14a80:	cmp	w27, w8
   14a84:	b.ne	14a64 <htab_create_alloc_ex@@Base+0x48>  // b.any
   14a88:	mov	w8, w27
   14a8c:	lsl	x8, x8, #4
   14a90:	ldr	w26, [x9, x8]
   14a94:	cmp	x26, x2
   14a98:	b.cc	14b1c <htab_create_alloc_ex@@Base+0x100>  // b.lo, b.ul, b.last
   14a9c:	mov	w1, #0x1                   	// #1
   14aa0:	mov	w2, #0x70                  	// #112
   14aa4:	mov	x0, x20
   14aa8:	blr	x21
   14aac:	mov	x25, x0
   14ab0:	cbz	x0, 14afc <htab_create_alloc_ex@@Base+0xe0>
   14ab4:	mov	w2, #0x8                   	// #8
   14ab8:	mov	x0, x20
   14abc:	mov	x1, x26
   14ac0:	blr	x21
   14ac4:	str	x0, [x25, #24]
   14ac8:	cbz	x0, 14ae8 <htab_create_alloc_ex@@Base+0xcc>
   14acc:	str	x26, [x25, #32]
   14ad0:	str	w27, [x25, #104]
   14ad4:	stp	x24, x23, [x25]
   14ad8:	str	x22, [x25, #16]
   14adc:	stp	x20, x21, [x25, #80]
   14ae0:	str	x19, [x25, #96]
   14ae4:	b	14afc <htab_create_alloc_ex@@Base+0xe0>
   14ae8:	cbz	x19, 14af8 <htab_create_alloc_ex@@Base+0xdc>
   14aec:	mov	x0, x20
   14af0:	mov	x1, x25
   14af4:	blr	x19
   14af8:	mov	x25, xzr
   14afc:	mov	x0, x25
   14b00:	ldp	x20, x19, [sp, #80]
   14b04:	ldp	x22, x21, [sp, #64]
   14b08:	ldp	x24, x23, [sp, #48]
   14b0c:	ldp	x26, x25, [sp, #32]
   14b10:	ldr	x27, [sp, #16]
   14b14:	ldp	x29, x30, [sp], #96
   14b18:	ret
   14b1c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14b20:	ldr	x8, [x8, #3968]
   14b24:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   14b28:	add	x1, x1, #0xb9c
   14b2c:	ldr	x0, [x8]
   14b30:	bl	5070 <fprintf@plt>
   14b34:	bl	53c0 <abort@plt>

0000000000014b38 <htab_set_functions_ex@@Base>:
   14b38:	stp	x1, x2, [x0]
   14b3c:	str	x3, [x0, #16]
   14b40:	stp	x4, x5, [x0, #80]
   14b44:	str	x6, [x0, #96]
   14b48:	ret

0000000000014b4c <htab_create@@Base>:
   14b4c:	stp	x29, x30, [sp, #-64]!
   14b50:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   14b54:	stp	x24, x23, [sp, #16]
   14b58:	stp	x22, x21, [sp, #32]
   14b5c:	stp	x20, x19, [sp, #48]
   14b60:	mov	x19, x3
   14b64:	mov	x20, x2
   14b68:	mov	x21, x1
   14b6c:	mov	x2, x0
   14b70:	mov	w8, wzr
   14b74:	mov	w24, #0x1e                  	// #30
   14b78:	add	x9, x9, #0x9bc
   14b7c:	mov	x29, sp
   14b80:	sub	w10, w24, w8
   14b84:	add	w10, w8, w10, lsr #1
   14b88:	lsl	x11, x10, #4
   14b8c:	ldr	w11, [x9, x11]
   14b90:	cmp	x11, x2
   14b94:	csel	w24, w24, w10, cc  // cc = lo, ul, last
   14b98:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   14b9c:	cmp	w24, w8
   14ba0:	b.ne	14b80 <htab_create@@Base+0x34>  // b.any
   14ba4:	mov	w8, w24
   14ba8:	lsl	x8, x8, #4
   14bac:	ldr	w23, [x9, x8]
   14bb0:	cmp	x23, x2
   14bb4:	b.cc	14c2c <htab_create@@Base+0xe0>  // b.lo, b.ul, b.last
   14bb8:	mov	w0, #0x1                   	// #1
   14bbc:	mov	w1, #0x70                  	// #112
   14bc0:	bl	5400 <xcalloc@plt>
   14bc4:	mov	x22, x0
   14bc8:	cbz	x0, 14c14 <htab_create@@Base+0xc8>
   14bcc:	mov	w1, #0x8                   	// #8
   14bd0:	mov	x0, x23
   14bd4:	bl	5400 <xcalloc@plt>
   14bd8:	str	x0, [x22, #24]
   14bdc:	cbz	x0, 14c08 <htab_create@@Base+0xbc>
   14be0:	str	x23, [x22, #32]
   14be4:	str	w24, [x22, #104]
   14be8:	stp	x21, x20, [x22]
   14bec:	str	x19, [x22, #16]
   14bf0:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14bf4:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
   14bf8:	ldr	x8, [x8, #3872]
   14bfc:	ldr	x9, [x9, #3384]
   14c00:	stp	x8, x9, [x22, #64]
   14c04:	b	14c14 <htab_create@@Base+0xc8>
   14c08:	mov	x0, x22
   14c0c:	bl	5120 <free@plt>
   14c10:	mov	x22, xzr
   14c14:	mov	x0, x22
   14c18:	ldp	x20, x19, [sp, #48]
   14c1c:	ldp	x22, x21, [sp, #32]
   14c20:	ldp	x24, x23, [sp, #16]
   14c24:	ldp	x29, x30, [sp], #64
   14c28:	ret
   14c2c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14c30:	ldr	x8, [x8, #3968]
   14c34:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   14c38:	add	x1, x1, #0xb9c
   14c3c:	ldr	x0, [x8]
   14c40:	bl	5070 <fprintf@plt>
   14c44:	bl	53c0 <abort@plt>

0000000000014c48 <htab_try_create@@Base>:
   14c48:	stp	x29, x30, [sp, #-64]!
   14c4c:	adrp	x9, 16000 <xexit@@Base+0x4dc>
   14c50:	stp	x24, x23, [sp, #16]
   14c54:	stp	x22, x21, [sp, #32]
   14c58:	stp	x20, x19, [sp, #48]
   14c5c:	mov	x19, x3
   14c60:	mov	x20, x2
   14c64:	mov	x21, x1
   14c68:	mov	x2, x0
   14c6c:	mov	w8, wzr
   14c70:	mov	w24, #0x1e                  	// #30
   14c74:	add	x9, x9, #0x9bc
   14c78:	mov	x29, sp
   14c7c:	sub	w10, w24, w8
   14c80:	add	w10, w8, w10, lsr #1
   14c84:	lsl	x11, x10, #4
   14c88:	ldr	w11, [x9, x11]
   14c8c:	cmp	x11, x2
   14c90:	csel	w24, w24, w10, cc  // cc = lo, ul, last
   14c94:	csinc	w8, w8, w10, cs  // cs = hs, nlast
   14c98:	cmp	w24, w8
   14c9c:	b.ne	14c7c <htab_try_create@@Base+0x34>  // b.any
   14ca0:	mov	w8, w24
   14ca4:	lsl	x8, x8, #4
   14ca8:	ldr	w23, [x9, x8]
   14cac:	cmp	x23, x2
   14cb0:	b.cc	14d28 <htab_try_create@@Base+0xe0>  // b.lo, b.ul, b.last
   14cb4:	mov	w0, #0x1                   	// #1
   14cb8:	mov	w1, #0x70                  	// #112
   14cbc:	bl	5010 <calloc@plt>
   14cc0:	mov	x22, x0
   14cc4:	cbz	x0, 14d10 <htab_try_create@@Base+0xc8>
   14cc8:	mov	w1, #0x8                   	// #8
   14ccc:	mov	x0, x23
   14cd0:	bl	5010 <calloc@plt>
   14cd4:	str	x0, [x22, #24]
   14cd8:	cbz	x0, 14d04 <htab_try_create@@Base+0xbc>
   14cdc:	str	x23, [x22, #32]
   14ce0:	str	w24, [x22, #104]
   14ce4:	stp	x21, x20, [x22]
   14ce8:	str	x19, [x22, #16]
   14cec:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14cf0:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
   14cf4:	ldr	x8, [x8, #3248]
   14cf8:	ldr	x9, [x9, #3384]
   14cfc:	stp	x8, x9, [x22, #64]
   14d00:	b	14d10 <htab_try_create@@Base+0xc8>
   14d04:	mov	x0, x22
   14d08:	bl	5120 <free@plt>
   14d0c:	mov	x22, xzr
   14d10:	mov	x0, x22
   14d14:	ldp	x20, x19, [sp, #48]
   14d18:	ldp	x22, x21, [sp, #32]
   14d1c:	ldp	x24, x23, [sp, #16]
   14d20:	ldp	x29, x30, [sp], #64
   14d24:	ret
   14d28:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14d2c:	ldr	x8, [x8, #3968]
   14d30:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   14d34:	add	x1, x1, #0xb9c
   14d38:	ldr	x0, [x8]
   14d3c:	bl	5070 <fprintf@plt>
   14d40:	bl	53c0 <abort@plt>

0000000000014d44 <htab_delete@@Base>:
   14d44:	stp	x29, x30, [sp, #-48]!
   14d48:	str	x21, [sp, #16]
   14d4c:	stp	x20, x19, [sp, #32]
   14d50:	ldp	x8, x20, [x0, #16]
   14d54:	mov	x19, x0
   14d58:	mov	x29, sp
   14d5c:	cbz	x8, 14d6c <htab_delete@@Base+0x28>
   14d60:	ldr	w8, [x19, #32]
   14d64:	subs	w21, w8, #0x1
   14d68:	b.pl	14d9c <htab_delete@@Base+0x58>  // b.nfrst
   14d6c:	ldr	x8, [x19, #72]
   14d70:	cbz	x8, 14db4 <htab_delete@@Base+0x70>
   14d74:	mov	x0, x20
   14d78:	blr	x8
   14d7c:	ldr	x1, [x19, #72]
   14d80:	mov	x0, x19
   14d84:	ldp	x20, x19, [sp, #32]
   14d88:	ldr	x21, [sp, #16]
   14d8c:	ldp	x29, x30, [sp], #48
   14d90:	br	x1
   14d94:	subs	w21, w21, #0x1
   14d98:	b.mi	14d6c <htab_delete@@Base+0x28>  // b.first
   14d9c:	ldr	x0, [x20, w21, uxtw #3]
   14da0:	cmp	x0, #0x2
   14da4:	b.cc	14d94 <htab_delete@@Base+0x50>  // b.lo, b.ul, b.last
   14da8:	ldr	x8, [x19, #16]
   14dac:	blr	x8
   14db0:	b	14d94 <htab_delete@@Base+0x50>
   14db4:	ldr	x8, [x19, #96]
   14db8:	cbz	x8, 14de4 <htab_delete@@Base+0xa0>
   14dbc:	ldr	x0, [x19, #80]
   14dc0:	mov	x1, x20
   14dc4:	blr	x8
   14dc8:	ldr	x2, [x19, #96]
   14dcc:	ldr	x0, [x19, #80]
   14dd0:	mov	x1, x19
   14dd4:	ldp	x20, x19, [sp, #32]
   14dd8:	ldr	x21, [sp, #16]
   14ddc:	ldp	x29, x30, [sp], #48
   14de0:	br	x2
   14de4:	ldp	x20, x19, [sp, #32]
   14de8:	ldr	x21, [sp, #16]
   14dec:	ldp	x29, x30, [sp], #48
   14df0:	ret

0000000000014df4 <htab_empty@@Base>:
   14df4:	stp	x29, x30, [sp, #-48]!
   14df8:	stp	x22, x21, [sp, #16]
   14dfc:	stp	x20, x19, [sp, #32]
   14e00:	ldp	x8, x20, [x0, #16]
   14e04:	ldr	x21, [x0, #32]
   14e08:	mov	x19, x0
   14e0c:	mov	x29, sp
   14e10:	cbz	x8, 14e1c <htab_empty@@Base+0x28>
   14e14:	subs	w22, w21, #0x1
   14e18:	b.pl	14e7c <htab_empty@@Base+0x88>  // b.nfrst
   14e1c:	cmp	x21, #0x20, lsl #12
   14e20:	b.ls	14e94 <htab_empty@@Base+0xa0>  // b.plast
   14e24:	mov	w8, wzr
   14e28:	mov	w21, #0x1e                  	// #30
   14e2c:	sub	w9, w21, w8
   14e30:	add	w9, w8, w9, lsr #1
   14e34:	cmp	w9, #0x5
   14e38:	csel	w21, w21, w9, cc  // cc = lo, ul, last
   14e3c:	csinc	w8, w8, w9, cs  // cs = hs, nlast
   14e40:	cmp	w21, w8
   14e44:	b.ne	14e2c <htab_empty@@Base+0x38>  // b.any
   14e48:	cmp	w21, #0x4
   14e4c:	b.ls	14f04 <htab_empty@@Base+0x110>  // b.plast
   14e50:	adrp	x10, 16000 <xexit@@Base+0x4dc>
   14e54:	sbfiz	x9, x21, #4, #32
   14e58:	add	x10, x10, #0x9bc
   14e5c:	ldr	x8, [x19, #72]
   14e60:	ldrsw	x20, [x10, x9]
   14e64:	cbz	x8, 14ea8 <htab_empty@@Base+0xb4>
   14e68:	ldr	x0, [x19, #24]
   14e6c:	blr	x8
   14e70:	b	14ebc <htab_empty@@Base+0xc8>
   14e74:	subs	w22, w22, #0x1
   14e78:	b.mi	14e1c <htab_empty@@Base+0x28>  // b.first
   14e7c:	ldr	x0, [x20, w22, uxtw #3]
   14e80:	cmp	x0, #0x2
   14e84:	b.cc	14e74 <htab_empty@@Base+0x80>  // b.lo, b.ul, b.last
   14e88:	ldr	x8, [x19, #16]
   14e8c:	blr	x8
   14e90:	b	14e74 <htab_empty@@Base+0x80>
   14e94:	lsl	x2, x21, #3
   14e98:	mov	x0, x20
   14e9c:	mov	w1, wzr
   14ea0:	bl	5130 <memset@plt>
   14ea4:	b	14ef0 <htab_empty@@Base+0xfc>
   14ea8:	ldr	x8, [x19, #96]
   14eac:	cbz	x8, 14ebc <htab_empty@@Base+0xc8>
   14eb0:	ldr	x0, [x19, #80]
   14eb4:	ldr	x1, [x19, #24]
   14eb8:	blr	x8
   14ebc:	ldr	x8, [x19, #88]
   14ec0:	cbz	x8, 14ed8 <htab_empty@@Base+0xe4>
   14ec4:	ldr	x0, [x19, #80]
   14ec8:	mov	w2, #0x8                   	// #8
   14ecc:	mov	x1, x20
   14ed0:	blr	x8
   14ed4:	b	14ee8 <htab_empty@@Base+0xf4>
   14ed8:	ldr	x8, [x19, #64]
   14edc:	mov	w1, #0x8                   	// #8
   14ee0:	mov	x0, x20
   14ee4:	blr	x8
   14ee8:	stp	x0, x20, [x19, #24]
   14eec:	str	w21, [x19, #104]
   14ef0:	stp	xzr, xzr, [x19, #40]
   14ef4:	ldp	x20, x19, [sp, #32]
   14ef8:	ldp	x22, x21, [sp, #16]
   14efc:	ldp	x29, x30, [sp], #48
   14f00:	ret
   14f04:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   14f08:	ldr	x8, [x8, #3968]
   14f0c:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   14f10:	add	x1, x1, #0xb9c
   14f14:	mov	w2, #0x80                  	// #128
   14f18:	ldr	x0, [x8]
   14f1c:	bl	5070 <fprintf@plt>
   14f20:	bl	53c0 <abort@plt>

0000000000014f24 <htab_find_with_hash@@Base>:
   14f24:	stp	x29, x30, [sp, #-80]!
   14f28:	stp	x26, x25, [sp, #16]
   14f2c:	stp	x24, x23, [sp, #32]
   14f30:	stp	x22, x21, [sp, #48]
   14f34:	stp	x20, x19, [sp, #64]
   14f38:	ldr	w8, [x0, #104]
   14f3c:	adrp	x25, 16000 <xexit@@Base+0x4dc>
   14f40:	add	x25, x25, #0x9bc
   14f44:	ldr	w9, [x0, #56]
   14f48:	add	x11, x25, x8, lsl #4
   14f4c:	ldp	w10, w12, [x11]
   14f50:	mov	w26, w2
   14f54:	add	w9, w9, #0x1
   14f58:	str	w9, [x0, #56]
   14f5c:	ldr	w9, [x11, #12]
   14f60:	mul	x11, x12, x26
   14f64:	lsr	x11, x11, #32
   14f68:	sub	w12, w2, w11
   14f6c:	ldr	x13, [x0, #24]
   14f70:	add	w11, w11, w12, lsr #1
   14f74:	lsr	w11, w11, w9
   14f78:	msub	w24, w11, w10, w2
   14f7c:	ldr	x22, [x13, w24, uxtw #3]
   14f80:	mov	x29, sp
   14f84:	cbz	x22, 15030 <htab_find_with_hash@@Base+0x10c>
   14f88:	ldr	x23, [x0, #32]
   14f8c:	mov	w21, w2
   14f90:	mov	x19, x0
   14f94:	mov	x20, x1
   14f98:	cmp	x22, #0x1
   14f9c:	b.eq	14fc4 <htab_find_with_hash@@Base+0xa0>  // b.none
   14fa0:	ldr	x8, [x19, #8]
   14fa4:	mov	x0, x22
   14fa8:	mov	x1, x20
   14fac:	blr	x8
   14fb0:	cbnz	w0, 15030 <htab_find_with_hash@@Base+0x10c>
   14fb4:	ldr	w8, [x19, #104]
   14fb8:	add	x9, x25, x8, lsl #4
   14fbc:	ldr	w10, [x9]
   14fc0:	ldr	w9, [x9, #12]
   14fc4:	add	x8, x25, x8, lsl #4
   14fc8:	ldr	w8, [x8, #8]
   14fcc:	sub	w10, w10, #0x2
   14fd0:	mul	x8, x8, x26
   14fd4:	lsr	x8, x8, #32
   14fd8:	sub	w11, w21, w8
   14fdc:	add	w8, w8, w11, lsr #1
   14fe0:	lsr	w8, w8, w9
   14fe4:	msub	w8, w8, w10, w21
   14fe8:	add	w21, w8, #0x1
   14fec:	ldr	w8, [x19, #60]
   14ff0:	add	w9, w21, w24
   14ff4:	ldr	x10, [x19, #24]
   14ff8:	cmp	x23, x9
   14ffc:	csel	w11, wzr, w23, hi  // hi = pmore
   15000:	add	w8, w8, #0x1
   15004:	str	w8, [x19, #60]
   15008:	sub	w24, w9, w11
   1500c:	ldr	x22, [x10, w24, uxtw #3]
   15010:	cmp	x22, #0x1
   15014:	b.eq	14fec <htab_find_with_hash@@Base+0xc8>  // b.none
   15018:	cbz	x22, 15030 <htab_find_with_hash@@Base+0x10c>
   1501c:	ldr	x8, [x19, #8]
   15020:	mov	x0, x22
   15024:	mov	x1, x20
   15028:	blr	x8
   1502c:	cbz	w0, 14fec <htab_find_with_hash@@Base+0xc8>
   15030:	mov	x0, x22
   15034:	ldp	x20, x19, [sp, #64]
   15038:	ldp	x22, x21, [sp, #48]
   1503c:	ldp	x24, x23, [sp, #32]
   15040:	ldp	x26, x25, [sp, #16]
   15044:	ldp	x29, x30, [sp], #80
   15048:	ret

000000000001504c <htab_find@@Base>:
   1504c:	stp	x29, x30, [sp, #-32]!
   15050:	stp	x20, x19, [sp, #16]
   15054:	ldr	x8, [x0]
   15058:	mov	x19, x0
   1505c:	mov	x0, x1
   15060:	mov	x29, sp
   15064:	mov	x20, x1
   15068:	blr	x8
   1506c:	mov	w2, w0
   15070:	mov	x0, x19
   15074:	mov	x1, x20
   15078:	ldp	x20, x19, [sp, #16]
   1507c:	ldp	x29, x30, [sp], #32
   15080:	b	5420 <htab_find_with_hash@plt>

0000000000015084 <htab_find_slot_with_hash@@Base>:
   15084:	stp	x29, x30, [sp, #-96]!
   15088:	stp	x26, x25, [sp, #32]
   1508c:	stp	x24, x23, [sp, #48]
   15090:	stp	x22, x21, [sp, #64]
   15094:	stp	x20, x19, [sp, #80]
   15098:	ldr	x24, [x0, #32]
   1509c:	mov	w20, w3
   150a0:	mov	w23, w2
   150a4:	mov	x19, x0
   150a8:	cmp	w3, #0x1
   150ac:	mov	x21, x1
   150b0:	str	x27, [sp, #16]
   150b4:	mov	x29, sp
   150b8:	b.ne	150dc <htab_find_slot_with_hash@@Base+0x58>  // b.any
   150bc:	ldr	x8, [x19, #40]
   150c0:	add	x9, x24, x24, lsl #1
   150c4:	cmp	x9, x8, lsl #2
   150c8:	b.hi	150dc <htab_find_slot_with_hash@@Base+0x58>  // b.pmore
   150cc:	mov	x0, x19
   150d0:	bl	15244 <htab_find_slot_with_hash@@Base+0x1c0>
   150d4:	cbz	w0, 15170 <htab_find_slot_with_hash@@Base+0xec>
   150d8:	ldr	x24, [x19, #32]
   150dc:	ldr	w8, [x19, #104]
   150e0:	adrp	x26, 16000 <xexit@@Base+0x4dc>
   150e4:	add	x26, x26, #0x9bc
   150e8:	ldr	w9, [x19, #56]
   150ec:	add	x12, x26, x8, lsl #4
   150f0:	ldp	w11, w13, [x12]
   150f4:	mov	w27, w23
   150f8:	add	w14, w9, #0x1
   150fc:	ldr	w9, [x12, #12]
   15100:	mul	x12, x13, x27
   15104:	lsr	x12, x12, #32
   15108:	ldr	x10, [x19, #24]
   1510c:	sub	w13, w23, w12
   15110:	add	w12, w12, w13, lsr #1
   15114:	lsr	w12, w12, w9
   15118:	msub	w25, w12, w11, w23
   1511c:	str	w14, [x19, #56]
   15120:	add	x22, x10, w25, uxtw #3
   15124:	ldr	x0, [x22]
   15128:	cbz	x0, 15150 <htab_find_slot_with_hash@@Base+0xcc>
   1512c:	cmp	x0, #0x1
   15130:	b.eq	1518c <htab_find_slot_with_hash@@Base+0x108>  // b.none
   15134:	ldr	x8, [x19, #8]
   15138:	mov	x1, x21
   1513c:	blr	x8
   15140:	cbz	w0, 15178 <htab_find_slot_with_hash@@Base+0xf4>
   15144:	ldr	x8, [x19, #24]
   15148:	add	x22, x8, x25, lsl #3
   1514c:	b	15224 <htab_find_slot_with_hash@@Base+0x1a0>
   15150:	mov	x22, xzr
   15154:	cbz	w20, 15170 <htab_find_slot_with_hash@@Base+0xec>
   15158:	cbz	x22, 15214 <htab_find_slot_with_hash@@Base+0x190>
   1515c:	ldr	x8, [x19, #48]
   15160:	sub	x8, x8, #0x1
   15164:	str	x8, [x19, #48]
   15168:	str	xzr, [x22]
   1516c:	b	15224 <htab_find_slot_with_hash@@Base+0x1a0>
   15170:	mov	x22, xzr
   15174:	b	15224 <htab_find_slot_with_hash@@Base+0x1a0>
   15178:	ldr	w8, [x19, #104]
   1517c:	mov	x22, xzr
   15180:	add	x9, x26, x8, lsl #4
   15184:	ldr	w11, [x9]
   15188:	ldr	w9, [x9, #12]
   1518c:	add	x8, x26, x8, lsl #4
   15190:	ldr	w8, [x8, #8]
   15194:	sub	w10, w11, #0x2
   15198:	mul	x8, x8, x27
   1519c:	lsr	x8, x8, #32
   151a0:	sub	w11, w23, w8
   151a4:	add	w8, w8, w11, lsr #1
   151a8:	lsr	w8, w8, w9
   151ac:	msub	w8, w8, w10, w23
   151b0:	add	w23, w8, #0x1
   151b4:	ldr	w8, [x19, #60]
   151b8:	add	w9, w23, w25
   151bc:	ldr	x10, [x19, #24]
   151c0:	cmp	x24, x9
   151c4:	csel	w11, wzr, w24, hi  // hi = pmore
   151c8:	add	w8, w8, #0x1
   151cc:	str	w8, [x19, #60]
   151d0:	sub	w25, w9, w11
   151d4:	ldr	x0, [x10, w25, uxtw #3]
   151d8:	cbz	x0, 15154 <htab_find_slot_with_hash@@Base+0xd0>
   151dc:	cmp	x0, #0x1
   151e0:	b.eq	151f8 <htab_find_slot_with_hash@@Base+0x174>  // b.none
   151e4:	ldr	x8, [x19, #8]
   151e8:	mov	x1, x21
   151ec:	blr	x8
   151f0:	cbz	w0, 151b4 <htab_find_slot_with_hash@@Base+0x130>
   151f4:	b	15208 <htab_find_slot_with_hash@@Base+0x184>
   151f8:	add	x8, x10, w25, uxtw #3
   151fc:	cmp	x22, #0x0
   15200:	csel	x22, x8, x22, eq  // eq = none
   15204:	b	151b4 <htab_find_slot_with_hash@@Base+0x130>
   15208:	ldr	x8, [x19, #24]
   1520c:	add	x22, x8, w25, uxtw #3
   15210:	b	15224 <htab_find_slot_with_hash@@Base+0x1a0>
   15214:	ldr	x8, [x19, #40]
   15218:	add	x22, x10, w25, uxtw #3
   1521c:	add	x8, x8, #0x1
   15220:	str	x8, [x19, #40]
   15224:	mov	x0, x22
   15228:	ldp	x20, x19, [sp, #80]
   1522c:	ldp	x22, x21, [sp, #64]
   15230:	ldp	x24, x23, [sp, #48]
   15234:	ldp	x26, x25, [sp, #32]
   15238:	ldr	x27, [sp, #16]
   1523c:	ldp	x29, x30, [sp], #96
   15240:	ret
   15244:	stp	x29, x30, [sp, #-64]!
   15248:	stp	x24, x23, [sp, #16]
   1524c:	stp	x22, x21, [sp, #32]
   15250:	stp	x20, x19, [sp, #48]
   15254:	ldp	x8, x9, [x0, #40]
   15258:	ldp	x19, x23, [x0, #24]
   1525c:	adrp	x22, 16000 <xexit@@Base+0x4dc>
   15260:	mov	x20, x0
   15264:	sub	x8, x8, x9
   15268:	lsl	x2, x8, #1
   1526c:	cmp	x2, x23
   15270:	add	x22, x22, #0x9bc
   15274:	mov	x29, sp
   15278:	b.hi	15298 <htab_find_slot_with_hash@@Base+0x214>  // b.pmore
   1527c:	ldr	w24, [x20, #104]
   15280:	cmp	x23, #0x21
   15284:	b.cc	152f8 <htab_find_slot_with_hash@@Base+0x274>  // b.lo, b.ul, b.last
   15288:	lsl	x8, x8, #3
   1528c:	cmp	x8, x23
   15290:	mov	x21, x23
   15294:	b.cs	152d8 <htab_find_slot_with_hash@@Base+0x254>  // b.hs, b.nlast
   15298:	mov	w8, wzr
   1529c:	mov	w24, #0x1e                  	// #30
   152a0:	sub	w9, w24, w8
   152a4:	add	w9, w8, w9, lsr #1
   152a8:	lsl	x10, x9, #4
   152ac:	ldr	w10, [x22, x10]
   152b0:	cmp	x2, x10
   152b4:	csel	w24, w24, w9, hi  // hi = pmore
   152b8:	csinc	w8, w8, w9, ls  // ls = plast
   152bc:	cmp	w24, w8
   152c0:	b.ne	152a0 <htab_find_slot_with_hash@@Base+0x21c>  // b.any
   152c4:	mov	w8, w24
   152c8:	lsl	x8, x8, #4
   152cc:	ldr	w21, [x22, x8]
   152d0:	cmp	x2, x21
   152d4:	b.hi	15438 <htab_find_slot_with_hash@@Base+0x3b4>  // b.pmore
   152d8:	ldr	x8, [x20, #88]
   152dc:	cbz	x8, 15304 <htab_find_slot_with_hash@@Base+0x280>
   152e0:	ldr	x0, [x20, #80]
   152e4:	mov	w2, #0x8                   	// #8
   152e8:	mov	x1, x21
   152ec:	blr	x8
   152f0:	cbnz	x0, 15318 <htab_find_slot_with_hash@@Base+0x294>
   152f4:	b	15424 <htab_find_slot_with_hash@@Base+0x3a0>
   152f8:	mov	x21, x23
   152fc:	ldr	x8, [x20, #88]
   15300:	cbnz	x8, 152e0 <htab_find_slot_with_hash@@Base+0x25c>
   15304:	ldr	x8, [x20, #64]
   15308:	mov	w1, #0x8                   	// #8
   1530c:	mov	x0, x21
   15310:	blr	x8
   15314:	cbz	x0, 15424 <htab_find_slot_with_hash@@Base+0x3a0>
   15318:	ldp	x9, x8, [x20, #40]
   1531c:	add	x23, x19, x23, lsl #3
   15320:	str	w24, [x20, #104]
   15324:	mov	x24, x19
   15328:	sub	x8, x9, x8
   1532c:	stp	x0, x21, [x20, #24]
   15330:	stp	x8, xzr, [x20, #40]
   15334:	b	15348 <htab_find_slot_with_hash@@Base+0x2c4>
   15338:	str	x21, [x14]
   1533c:	add	x24, x24, #0x8
   15340:	cmp	x24, x23
   15344:	b.cs	153f8 <htab_find_slot_with_hash@@Base+0x374>  // b.hs, b.nlast
   15348:	ldr	x21, [x24]
   1534c:	cmp	x21, #0x2
   15350:	b.cc	1533c <htab_find_slot_with_hash@@Base+0x2b8>  // b.lo, b.ul, b.last
   15354:	ldr	x8, [x20]
   15358:	mov	x0, x21
   1535c:	blr	x8
   15360:	ldr	w10, [x20, #104]
   15364:	mov	w11, w0
   15368:	add	x8, x22, x10, lsl #4
   1536c:	ldp	w13, w9, [x8]
   15370:	ldr	w12, [x8, #12]
   15374:	mul	x8, x9, x11
   15378:	lsr	x9, x8, #32
   1537c:	sub	w14, w0, w9
   15380:	ldr	x8, [x20, #24]
   15384:	add	w9, w9, w14, lsr #1
   15388:	lsr	w9, w9, w12
   1538c:	msub	w9, w9, w13, w0
   15390:	add	x14, x8, w9, uxtw #3
   15394:	ldr	x15, [x14]
   15398:	cbz	x15, 15338 <htab_find_slot_with_hash@@Base+0x2b4>
   1539c:	cmp	x15, #0x1
   153a0:	b.eq	153f4 <htab_find_slot_with_hash@@Base+0x370>  // b.none
   153a4:	add	x10, x22, x10, lsl #4
   153a8:	ldr	w14, [x10, #8]
   153ac:	ldr	x10, [x20, #32]
   153b0:	sub	w13, w13, #0x2
   153b4:	mul	x14, x14, x11
   153b8:	lsr	x14, x14, #32
   153bc:	sub	w15, w11, w14
   153c0:	add	w14, w14, w15, lsr #1
   153c4:	lsr	w12, w14, w12
   153c8:	msub	w11, w12, w13, w11
   153cc:	add	w11, w11, #0x1
   153d0:	add	w9, w11, w9
   153d4:	cmp	x10, x9
   153d8:	csel	w12, wzr, w10, hi  // hi = pmore
   153dc:	sub	w9, w9, w12
   153e0:	add	x14, x8, w9, uxtw #3
   153e4:	ldr	x12, [x14]
   153e8:	cbz	x12, 15338 <htab_find_slot_with_hash@@Base+0x2b4>
   153ec:	cmp	x12, #0x1
   153f0:	b.ne	153d0 <htab_find_slot_with_hash@@Base+0x34c>  // b.any
   153f4:	bl	53c0 <abort@plt>
   153f8:	ldr	x8, [x20, #72]
   153fc:	cbz	x8, 1540c <htab_find_slot_with_hash@@Base+0x388>
   15400:	mov	x0, x19
   15404:	blr	x8
   15408:	b	15420 <htab_find_slot_with_hash@@Base+0x39c>
   1540c:	ldr	x8, [x20, #96]
   15410:	cbz	x8, 15420 <htab_find_slot_with_hash@@Base+0x39c>
   15414:	ldr	x0, [x20, #80]
   15418:	mov	x1, x19
   1541c:	blr	x8
   15420:	mov	w0, #0x1                   	// #1
   15424:	ldp	x20, x19, [sp, #48]
   15428:	ldp	x22, x21, [sp, #32]
   1542c:	ldp	x24, x23, [sp, #16]
   15430:	ldp	x29, x30, [sp], #64
   15434:	ret
   15438:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   1543c:	ldr	x8, [x8, #3968]
   15440:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   15444:	add	x1, x1, #0xb9c
   15448:	ldr	x0, [x8]
   1544c:	bl	5070 <fprintf@plt>
   15450:	bl	53c0 <abort@plt>

0000000000015454 <htab_find_slot@@Base>:
   15454:	stp	x29, x30, [sp, #-48]!
   15458:	stp	x20, x19, [sp, #32]
   1545c:	ldr	x8, [x0]
   15460:	mov	x20, x0
   15464:	mov	x0, x1
   15468:	str	x21, [sp, #16]
   1546c:	mov	x29, sp
   15470:	mov	w19, w2
   15474:	mov	x21, x1
   15478:	blr	x8
   1547c:	mov	w2, w0
   15480:	mov	x0, x20
   15484:	mov	x1, x21
   15488:	mov	w3, w19
   1548c:	ldp	x20, x19, [sp, #32]
   15490:	ldr	x21, [sp, #16]
   15494:	ldp	x29, x30, [sp], #48
   15498:	b	5180 <htab_find_slot_with_hash@plt>

000000000001549c <htab_remove_elt@@Base>:
   1549c:	stp	x29, x30, [sp, #-32]!
   154a0:	stp	x20, x19, [sp, #16]
   154a4:	ldr	x8, [x0]
   154a8:	mov	x19, x0
   154ac:	mov	x0, x1
   154b0:	mov	x29, sp
   154b4:	mov	x20, x1
   154b8:	blr	x8
   154bc:	mov	w2, w0
   154c0:	mov	x0, x19
   154c4:	mov	x1, x20
   154c8:	mov	w3, wzr
   154cc:	bl	5180 <htab_find_slot_with_hash@plt>
   154d0:	cbz	x0, 154fc <htab_remove_elt@@Base+0x60>
   154d4:	ldr	x8, [x19, #16]
   154d8:	mov	x20, x0
   154dc:	cbz	x8, 154e8 <htab_remove_elt@@Base+0x4c>
   154e0:	ldr	x0, [x20]
   154e4:	blr	x8
   154e8:	mov	w8, #0x1                   	// #1
   154ec:	str	x8, [x20]
   154f0:	ldr	x8, [x19, #48]
   154f4:	add	x8, x8, #0x1
   154f8:	str	x8, [x19, #48]
   154fc:	ldp	x20, x19, [sp, #16]
   15500:	ldp	x29, x30, [sp], #32
   15504:	ret

0000000000015508 <htab_remove_elt_with_hash@@Base>:
   15508:	stp	x29, x30, [sp, #-32]!
   1550c:	mov	w3, wzr
   15510:	stp	x20, x19, [sp, #16]
   15514:	mov	x29, sp
   15518:	mov	x19, x0
   1551c:	bl	5180 <htab_find_slot_with_hash@plt>
   15520:	cbz	x0, 1554c <htab_remove_elt_with_hash@@Base+0x44>
   15524:	ldr	x8, [x19, #16]
   15528:	mov	x20, x0
   1552c:	cbz	x8, 15538 <htab_remove_elt_with_hash@@Base+0x30>
   15530:	ldr	x0, [x20]
   15534:	blr	x8
   15538:	mov	w8, #0x1                   	// #1
   1553c:	str	x8, [x20]
   15540:	ldr	x8, [x19, #48]
   15544:	add	x8, x8, #0x1
   15548:	str	x8, [x19, #48]
   1554c:	ldp	x20, x19, [sp, #16]
   15550:	ldp	x29, x30, [sp], #32
   15554:	ret

0000000000015558 <htab_clear_slot@@Base>:
   15558:	stp	x29, x30, [sp, #-32]!
   1555c:	stp	x20, x19, [sp, #16]
   15560:	ldr	x8, [x0, #24]
   15564:	mov	x29, sp
   15568:	cmp	x8, x1
   1556c:	b.hi	155c0 <htab_clear_slot@@Base+0x68>  // b.pmore
   15570:	ldr	x9, [x0, #32]
   15574:	mov	x19, x0
   15578:	mov	x20, x1
   1557c:	add	x8, x8, x9, lsl #3
   15580:	cmp	x8, x1
   15584:	b.ls	155c0 <htab_clear_slot@@Base+0x68>  // b.plast
   15588:	ldr	x0, [x20]
   1558c:	cmp	x0, #0x1
   15590:	b.ls	155c0 <htab_clear_slot@@Base+0x68>  // b.plast
   15594:	ldr	x8, [x19, #16]
   15598:	cbz	x8, 155a0 <htab_clear_slot@@Base+0x48>
   1559c:	blr	x8
   155a0:	mov	w8, #0x1                   	// #1
   155a4:	str	x8, [x20]
   155a8:	ldr	x8, [x19, #48]
   155ac:	add	x8, x8, #0x1
   155b0:	str	x8, [x19, #48]
   155b4:	ldp	x20, x19, [sp, #16]
   155b8:	ldp	x29, x30, [sp], #32
   155bc:	ret
   155c0:	bl	53c0 <abort@plt>

00000000000155c4 <htab_traverse_noresize@@Base>:
   155c4:	stp	x29, x30, [sp, #-48]!
   155c8:	stp	x22, x21, [sp, #16]
   155cc:	stp	x20, x19, [sp, #32]
   155d0:	ldp	x21, x8, [x0, #24]
   155d4:	mov	x19, x2
   155d8:	mov	x20, x1
   155dc:	mov	x29, sp
   155e0:	add	x22, x21, x8, lsl #3
   155e4:	b	155f4 <htab_traverse_noresize@@Base+0x30>
   155e8:	add	x21, x21, #0x8
   155ec:	cmp	x21, x22
   155f0:	b.cs	15610 <htab_traverse_noresize@@Base+0x4c>  // b.hs, b.nlast
   155f4:	ldr	x8, [x21]
   155f8:	cmp	x8, #0x2
   155fc:	b.cc	155e8 <htab_traverse_noresize@@Base+0x24>  // b.lo, b.ul, b.last
   15600:	mov	x0, x21
   15604:	mov	x1, x19
   15608:	blr	x20
   1560c:	cbnz	w0, 155e8 <htab_traverse_noresize@@Base+0x24>
   15610:	ldp	x20, x19, [sp, #32]
   15614:	ldp	x22, x21, [sp, #16]
   15618:	ldp	x29, x30, [sp], #48
   1561c:	ret

0000000000015620 <htab_traverse@@Base>:
   15620:	stp	x29, x30, [sp, #-48]!
   15624:	stp	x22, x21, [sp, #16]
   15628:	stp	x20, x19, [sp, #32]
   1562c:	ldr	x8, [x0, #32]
   15630:	mov	x19, x2
   15634:	mov	x21, x0
   15638:	mov	x20, x1
   1563c:	cmp	x8, #0x21
   15640:	mov	x29, sp
   15644:	b.cc	15668 <htab_traverse@@Base+0x48>  // b.lo, b.ul, b.last
   15648:	ldp	x9, x10, [x21, #40]
   1564c:	sub	x9, x9, x10
   15650:	lsl	x9, x9, #3
   15654:	cmp	x9, x8
   15658:	b.cs	15668 <htab_traverse@@Base+0x48>  // b.hs, b.nlast
   1565c:	mov	x0, x21
   15660:	bl	15244 <htab_find_slot_with_hash@@Base+0x1c0>
   15664:	ldr	x8, [x21, #32]
   15668:	ldr	x21, [x21, #24]
   1566c:	add	x22, x21, x8, lsl #3
   15670:	b	15680 <htab_traverse@@Base+0x60>
   15674:	add	x21, x21, #0x8
   15678:	cmp	x21, x22
   1567c:	b.cs	1569c <htab_traverse@@Base+0x7c>  // b.hs, b.nlast
   15680:	ldr	x8, [x21]
   15684:	cmp	x8, #0x2
   15688:	b.cc	15674 <htab_traverse@@Base+0x54>  // b.lo, b.ul, b.last
   1568c:	mov	x0, x21
   15690:	mov	x1, x19
   15694:	blr	x20
   15698:	cbnz	w0, 15674 <htab_traverse@@Base+0x54>
   1569c:	ldp	x20, x19, [sp, #32]
   156a0:	ldp	x22, x21, [sp, #16]
   156a4:	ldp	x29, x30, [sp], #48
   156a8:	ret

00000000000156ac <htab_collisions@@Base>:
   156ac:	ldr	w8, [x0, #56]
   156b0:	cbz	w8, 156c8 <htab_collisions@@Base+0x1c>
   156b4:	ldr	s0, [x0, #60]
   156b8:	ucvtf	d1, w8
   156bc:	ucvtf	d0, d0
   156c0:	fdiv	d0, d0, d1
   156c4:	ret
   156c8:	fmov	d0, xzr
   156cc:	ret

00000000000156d0 <htab_hash_string@@Base>:
   156d0:	ldrb	w9, [x0]
   156d4:	cbz	w9, 15700 <htab_hash_string@@Base+0x30>
   156d8:	mov	x8, x0
   156dc:	mov	w0, wzr
   156e0:	add	x8, x8, #0x1
   156e4:	mov	w10, #0x43                  	// #67
   156e8:	mul	w11, w0, w10
   156ec:	add	w11, w11, w9, uxtb
   156f0:	ldrb	w9, [x8], #1
   156f4:	sub	w0, w11, #0x71
   156f8:	cbnz	w9, 156e8 <htab_hash_string@@Base+0x18>
   156fc:	ret
   15700:	mov	w0, wzr
   15704:	ret

0000000000015708 <iterative_hash@@Base>:
   15708:	tst	x0, #0x3
   1570c:	b.eq	157c0 <iterative_hash@@Base+0xb8>  // b.none
   15710:	mov	w8, #0x79b9                	// #31161
   15714:	cmp	w1, #0xc
   15718:	movk	w8, #0x9e37, lsl #16
   1571c:	b.cc	15870 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   15720:	mov	w9, #0x79b9                	// #31161
   15724:	mov	w10, w1
   15728:	movk	w9, #0x9e37, lsl #16
   1572c:	ldp	w11, w12, [x0]
   15730:	sub	w10, w10, #0xc
   15734:	cmp	w10, #0xb
   15738:	add	w9, w11, w9
   1573c:	ldr	w11, [x0, #8]
   15740:	add	w8, w12, w8
   15744:	sub	w9, w9, w8
   15748:	add	x0, x0, #0xc
   1574c:	add	w11, w11, w2
   15750:	sub	w9, w9, w11
   15754:	sub	w8, w8, w11
   15758:	eor	w9, w9, w11, lsr #13
   1575c:	sub	w8, w8, w9
   15760:	sub	w11, w11, w9
   15764:	eor	w8, w8, w9, lsl #8
   15768:	sub	w11, w11, w8
   1576c:	sub	w9, w9, w8
   15770:	eor	w11, w11, w8, lsr #13
   15774:	sub	w9, w9, w11
   15778:	sub	w8, w8, w11
   1577c:	eor	w9, w9, w11, lsr #12
   15780:	sub	w8, w8, w9
   15784:	sub	w11, w11, w9
   15788:	eor	w8, w8, w9, lsl #16
   1578c:	sub	w11, w11, w8
   15790:	sub	w9, w9, w8
   15794:	eor	w11, w11, w8, lsr #5
   15798:	sub	w9, w9, w11
   1579c:	sub	w8, w8, w11
   157a0:	eor	w9, w9, w11, lsr #3
   157a4:	sub	w8, w8, w9
   157a8:	sub	w11, w11, w9
   157ac:	eor	w8, w8, w9, lsl #10
   157b0:	sub	w11, w11, w8
   157b4:	eor	w2, w11, w8, lsr #15
   157b8:	b.hi	1572c <iterative_hash@@Base+0x24>  // b.pmore
   157bc:	b	1587c <iterative_hash@@Base+0x174>
   157c0:	mov	w8, #0x79b9                	// #31161
   157c4:	cmp	w1, #0xc
   157c8:	movk	w8, #0x9e37, lsl #16
   157cc:	b.cc	15870 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   157d0:	mov	w9, #0x79b9                	// #31161
   157d4:	mov	w10, w1
   157d8:	movk	w9, #0x9e37, lsl #16
   157dc:	ldp	w11, w12, [x0]
   157e0:	sub	w10, w10, #0xc
   157e4:	cmp	w10, #0xb
   157e8:	add	w9, w11, w9
   157ec:	ldr	w11, [x0, #8]
   157f0:	add	w8, w12, w8
   157f4:	sub	w9, w9, w8
   157f8:	add	x0, x0, #0xc
   157fc:	add	w11, w11, w2
   15800:	sub	w9, w9, w11
   15804:	sub	w8, w8, w11
   15808:	eor	w9, w9, w11, lsr #13
   1580c:	sub	w8, w8, w9
   15810:	sub	w11, w11, w9
   15814:	eor	w8, w8, w9, lsl #8
   15818:	sub	w11, w11, w8
   1581c:	sub	w9, w9, w8
   15820:	eor	w11, w11, w8, lsr #13
   15824:	sub	w9, w9, w11
   15828:	sub	w8, w8, w11
   1582c:	eor	w9, w9, w11, lsr #12
   15830:	sub	w8, w8, w9
   15834:	sub	w11, w11, w9
   15838:	eor	w8, w8, w9, lsl #16
   1583c:	sub	w11, w11, w8
   15840:	sub	w9, w9, w8
   15844:	eor	w11, w11, w8, lsr #5
   15848:	sub	w9, w9, w11
   1584c:	sub	w8, w8, w11
   15850:	eor	w9, w9, w11, lsr #3
   15854:	sub	w8, w8, w9
   15858:	sub	w11, w11, w9
   1585c:	eor	w8, w8, w9, lsl #10
   15860:	sub	w11, w11, w8
   15864:	eor	w2, w11, w8, lsr #15
   15868:	b.hi	157dc <iterative_hash@@Base+0xd4>  // b.pmore
   1586c:	b	1587c <iterative_hash@@Base+0x174>
   15870:	mov	w9, #0x79b9                	// #31161
   15874:	movk	w9, #0x9e37, lsl #16
   15878:	mov	w10, w1
   1587c:	sub	w11, w10, #0x1
   15880:	cmp	w11, #0xa
   15884:	add	w10, w2, w1
   15888:	b.hi	158fc <iterative_hash@@Base+0x1f4>  // b.pmore
   1588c:	adrp	x12, 16000 <xexit@@Base+0x4dc>
   15890:	add	x12, x12, #0x9b0
   15894:	adr	x13, 158a4 <iterative_hash@@Base+0x19c>
   15898:	ldrb	w14, [x12, x11]
   1589c:	add	x13, x13, x14, lsl #2
   158a0:	br	x13
   158a4:	ldrb	w11, [x0, #10]
   158a8:	add	w10, w10, w11, lsl #24
   158ac:	ldrb	w11, [x0, #9]
   158b0:	add	w10, w10, w11, lsl #16
   158b4:	ldrb	w11, [x0, #8]
   158b8:	add	w10, w10, w11, lsl #8
   158bc:	ldrb	w11, [x0, #7]
   158c0:	add	w8, w8, w11, lsl #24
   158c4:	ldrb	w11, [x0, #6]
   158c8:	add	w8, w8, w11, lsl #16
   158cc:	ldrb	w11, [x0, #5]
   158d0:	add	w8, w8, w11, lsl #8
   158d4:	ldrb	w11, [x0, #4]
   158d8:	add	w8, w8, w11
   158dc:	ldrb	w11, [x0, #3]
   158e0:	add	w9, w9, w11, lsl #24
   158e4:	ldrb	w11, [x0, #2]
   158e8:	add	w9, w9, w11, lsl #16
   158ec:	ldrb	w11, [x0, #1]
   158f0:	add	w9, w9, w11, lsl #8
   158f4:	ldrb	w11, [x0]
   158f8:	add	w9, w9, w11
   158fc:	sub	w9, w9, w8
   15900:	sub	w9, w9, w10
   15904:	sub	w8, w8, w10
   15908:	eor	w9, w9, w10, lsr #13
   1590c:	sub	w8, w8, w9
   15910:	sub	w10, w10, w9
   15914:	eor	w8, w8, w9, lsl #8
   15918:	sub	w10, w10, w8
   1591c:	sub	w9, w9, w8
   15920:	eor	w10, w10, w8, lsr #13
   15924:	sub	w9, w9, w10
   15928:	sub	w8, w8, w10
   1592c:	eor	w9, w9, w10, lsr #12
   15930:	sub	w8, w8, w9
   15934:	sub	w10, w10, w9
   15938:	eor	w8, w8, w9, lsl #16
   1593c:	sub	w10, w10, w8
   15940:	sub	w9, w9, w8
   15944:	eor	w10, w10, w8, lsr #5
   15948:	sub	w9, w9, w10
   1594c:	sub	w8, w8, w10
   15950:	eor	w9, w9, w10, lsr #3
   15954:	sub	w8, w8, w9
   15958:	eor	w8, w8, w9, lsl #10
   1595c:	sub	w9, w10, w9
   15960:	sub	w9, w9, w8
   15964:	eor	w0, w9, w8, lsr #15
   15968:	ret

000000000001596c <xmalloc_set_program_name@@Base>:
   1596c:	stp	x29, x30, [sp, #-32]!
   15970:	str	x19, [sp, #16]
   15974:	adrp	x19, 2b000 <xexit@@Base+0x154dc>
   15978:	ldr	x8, [x19, #1792]
   1597c:	adrp	x9, 2b000 <xexit@@Base+0x154dc>
   15980:	mov	x29, sp
   15984:	str	x0, [x9, #1448]
   15988:	cbnz	x8, 15998 <xmalloc_set_program_name@@Base+0x2c>
   1598c:	mov	x0, xzr
   15990:	bl	5290 <sbrk@plt>
   15994:	str	x0, [x19, #1792]
   15998:	ldr	x19, [sp, #16]
   1599c:	ldp	x29, x30, [sp], #32
   159a0:	ret

00000000000159a4 <xmalloc_failed@@Base>:
   159a4:	stp	x29, x30, [sp, #-48]!
   159a8:	stp	x20, x19, [sp, #32]
   159ac:	adrp	x20, 2b000 <xexit@@Base+0x154dc>
   159b0:	str	x21, [sp, #16]
   159b4:	ldr	x21, [x20, #1792]
   159b8:	mov	x19, x0
   159bc:	mov	x0, xzr
   159c0:	mov	x29, sp
   159c4:	bl	5290 <sbrk@plt>
   159c8:	adrp	x9, 2a000 <xexit@@Base+0x144dc>
   159cc:	ldr	x8, [x20, #1792]
   159d0:	ldr	x9, [x9, #4000]
   159d4:	adrp	x10, 2b000 <xexit@@Base+0x154dc>
   159d8:	ldr	x2, [x10, #1448]
   159dc:	adrp	x10, 2a000 <xexit@@Base+0x144dc>
   159e0:	cmp	x21, #0x0
   159e4:	ldr	x10, [x10, #3968]
   159e8:	csel	x8, x9, x8, eq  // eq = none
   159ec:	sub	x5, x0, x8
   159f0:	ldrb	w8, [x2]
   159f4:	ldr	x0, [x10]
   159f8:	adrp	x9, 15000 <htab_find_with_hash@@Base+0xdc>
   159fc:	adrp	x10, 15000 <htab_find_with_hash@@Base+0xdc>
   15a00:	add	x9, x9, #0xd33
   15a04:	add	x10, x10, #0xdca
   15a08:	cmp	w8, #0x0
   15a0c:	adrp	x1, 16000 <xexit@@Base+0x4dc>
   15a10:	csel	x3, x10, x9, eq  // eq = none
   15a14:	add	x1, x1, #0xbbf
   15a18:	mov	x4, x19
   15a1c:	bl	5070 <fprintf@plt>
   15a20:	mov	w0, #0x1                   	// #1
   15a24:	bl	53a0 <xexit@plt>

0000000000015a28 <xmalloc@@Base>:
   15a28:	stp	x29, x30, [sp, #-32]!
   15a2c:	cmp	x0, #0x0
   15a30:	str	x19, [sp, #16]
   15a34:	csinc	x19, x0, xzr, ne  // ne = any
   15a38:	mov	x0, x19
   15a3c:	mov	x29, sp
   15a40:	bl	5380 <malloc@plt>
   15a44:	cbz	x0, 15a54 <xmalloc@@Base+0x2c>
   15a48:	ldr	x19, [sp, #16]
   15a4c:	ldp	x29, x30, [sp], #32
   15a50:	ret
   15a54:	mov	x0, x19
   15a58:	bl	51f0 <xmalloc_failed@plt>

0000000000015a5c <xcalloc@@Base>:
   15a5c:	stp	x29, x30, [sp, #-32]!
   15a60:	cmp	x0, #0x0
   15a64:	cset	w8, eq  // eq = none
   15a68:	cmp	x1, #0x0
   15a6c:	cset	w9, eq  // eq = none
   15a70:	orr	w8, w8, w9
   15a74:	cmp	w8, #0x0
   15a78:	stp	x20, x19, [sp, #16]
   15a7c:	csinc	x19, x1, xzr, eq  // eq = none
   15a80:	csinc	x20, x0, xzr, eq  // eq = none
   15a84:	mov	x0, x20
   15a88:	mov	x1, x19
   15a8c:	mov	x29, sp
   15a90:	bl	5010 <calloc@plt>
   15a94:	cbz	x0, 15aa4 <xcalloc@@Base+0x48>
   15a98:	ldp	x20, x19, [sp, #16]
   15a9c:	ldp	x29, x30, [sp], #32
   15aa0:	ret
   15aa4:	mul	x0, x20, x19
   15aa8:	bl	51f0 <xmalloc_failed@plt>

0000000000015aac <xrealloc@@Base>:
   15aac:	stp	x29, x30, [sp, #-32]!
   15ab0:	cmp	x1, #0x0
   15ab4:	str	x19, [sp, #16]
   15ab8:	csinc	x19, x1, xzr, ne  // ne = any
   15abc:	mov	x29, sp
   15ac0:	cbz	x0, 15adc <xrealloc@@Base+0x30>
   15ac4:	mov	x1, x19
   15ac8:	bl	5150 <realloc@plt>
   15acc:	cbz	x0, 15ae8 <xrealloc@@Base+0x3c>
   15ad0:	ldr	x19, [sp, #16]
   15ad4:	ldp	x29, x30, [sp], #32
   15ad8:	ret
   15adc:	mov	x0, x19
   15ae0:	bl	5380 <malloc@plt>
   15ae4:	cbnz	x0, 15ad0 <xrealloc@@Base+0x24>
   15ae8:	mov	x0, x19
   15aec:	bl	51f0 <xmalloc_failed@plt>

0000000000015af0 <xstrdup@@Base>:
   15af0:	stp	x29, x30, [sp, #-32]!
   15af4:	stp	x20, x19, [sp, #16]
   15af8:	mov	x29, sp
   15afc:	mov	x19, x0
   15b00:	bl	5060 <strlen@plt>
   15b04:	add	x20, x0, #0x1
   15b08:	mov	x0, x20
   15b0c:	bl	52f0 <xmalloc@plt>
   15b10:	mov	x1, x19
   15b14:	mov	x2, x20
   15b18:	ldp	x20, x19, [sp, #16]
   15b1c:	ldp	x29, x30, [sp], #32
   15b20:	b	4fb0 <memcpy@plt>

0000000000015b24 <xexit@@Base>:
   15b24:	stp	x29, x30, [sp, #-32]!
   15b28:	str	x19, [sp, #16]
   15b2c:	adrp	x8, 2a000 <xexit@@Base+0x144dc>
   15b30:	ldr	x8, [x8, #3184]
   15b34:	mov	w19, w0
   15b38:	mov	x29, sp
   15b3c:	ldr	x8, [x8]
   15b40:	cbz	x8, 15b48 <xexit@@Base+0x24>
   15b44:	blr	x8
   15b48:	mov	w0, w19
   15b4c:	bl	5450 <exit@plt>

Disassembly of section .fini:

0000000000015b50 <.fini>:
   15b50:	stp	x29, x30, [sp, #-16]!
   15b54:	mov	x29, sp
   15b58:	ldp	x29, x30, [sp], #16
   15b5c:	ret
