
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//uname_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007f8 <_init>:
 7f8:	stp	x29, x30, [sp, #-16]!
 7fc:	mov	x29, sp
 800:	bl	8e0 <call_weak_fn>
 804:	ldp	x29, x30, [sp], #16
 808:	ret

Disassembly of section .plt:

0000000000000810 <.plt>:
 810:	stp	x16, x30, [sp, #-16]!
 814:	adrp	x16, 11000 <__FRAME_END__+0x10234>
 818:	ldr	x17, [x16, #4088]
 81c:	add	x16, x16, #0xff8
 820:	br	x17
 824:	nop
 828:	nop
 82c:	nop

0000000000000830 <builtin_error@plt>:
 830:	adrp	x16, 12000 <builtin_error>
 834:	ldr	x17, [x16]
 838:	add	x16, x16, #0x0
 83c:	br	x17

0000000000000840 <__cxa_finalize@plt>:
 840:	adrp	x16, 12000 <builtin_error>
 844:	ldr	x17, [x16, #8]
 848:	add	x16, x16, #0x8
 84c:	br	x17

0000000000000850 <builtin_help@plt>:
 850:	adrp	x16, 12000 <builtin_error>
 854:	ldr	x17, [x16, #16]
 858:	add	x16, x16, #0x10
 85c:	br	x17

0000000000000860 <builtin_usage@plt>:
 860:	adrp	x16, 12000 <builtin_error>
 864:	ldr	x17, [x16, #24]
 868:	add	x16, x16, #0x18
 86c:	br	x17

0000000000000870 <strerror@plt>:
 870:	adrp	x16, 12000 <builtin_error>
 874:	ldr	x17, [x16, #32]
 878:	add	x16, x16, #0x20
 87c:	br	x17

0000000000000880 <__gmon_start__@plt>:
 880:	adrp	x16, 12000 <builtin_error>
 884:	ldr	x17, [x16, #40]
 888:	add	x16, x16, #0x28
 88c:	br	x17

0000000000000890 <internal_getopt@plt>:
 890:	adrp	x16, 12000 <builtin_error>
 894:	ldr	x17, [x16, #48]
 898:	add	x16, x16, #0x30
 89c:	br	x17

00000000000008a0 <reset_internal_getopt@plt>:
 8a0:	adrp	x16, 12000 <builtin_error>
 8a4:	ldr	x17, [x16, #56]
 8a8:	add	x16, x16, #0x38
 8ac:	br	x17

00000000000008b0 <printf@plt>:
 8b0:	adrp	x16, 12000 <builtin_error>
 8b4:	ldr	x17, [x16, #64]
 8b8:	add	x16, x16, #0x40
 8bc:	br	x17

00000000000008c0 <__errno_location@plt>:
 8c0:	adrp	x16, 12000 <builtin_error>
 8c4:	ldr	x17, [x16, #72]
 8c8:	add	x16, x16, #0x48
 8cc:	br	x17

00000000000008d0 <uname@plt>:
 8d0:	adrp	x16, 12000 <builtin_error>
 8d4:	ldr	x17, [x16, #80]
 8d8:	add	x16, x16, #0x50
 8dc:	br	x17

Disassembly of section .text:

00000000000008e0 <call_weak_fn>:
 8e0:	adrp	x0, 11000 <__FRAME_END__+0x10234>
 8e4:	ldr	x0, [x0, #4048]
 8e8:	cbz	x0, 8f0 <call_weak_fn+0x10>
 8ec:	b	880 <__gmon_start__@plt>
 8f0:	ret

00000000000008f4 <deregister_tm_clones>:
 8f4:	adrp	x0, 12000 <builtin_error>
 8f8:	add	x0, x0, #0xb0
 8fc:	adrp	x1, 12000 <builtin_error>
 900:	add	x1, x1, #0xb0
 904:	cmp	x0, x1
 908:	b.eq	934 <deregister_tm_clones+0x40>  // b.none
 90c:	adrp	x1, 11000 <__FRAME_END__+0x10234>
 910:	ldr	x1, [x1, #4032]
 914:	cbz	x1, 934 <deregister_tm_clones+0x40>
 918:	stp	x29, x30, [sp, #-16]!
 91c:	mov	x29, sp
 920:	adrp	x0, 12000 <builtin_error>
 924:	add	x0, x0, #0xb0
 928:	blr	x1
 92c:	ldp	x29, x30, [sp], #16
 930:	ret
 934:	ret

0000000000000938 <register_tm_clones>:
 938:	adrp	x0, 12000 <builtin_error>
 93c:	add	x0, x0, #0xb0
 940:	adrp	x1, 12000 <builtin_error>
 944:	add	x1, x1, #0xb0
 948:	sub	x0, x0, x1
 94c:	lsr	x1, x0, #63
 950:	add	x0, x1, x0, asr #3
 954:	cmp	xzr, x0, asr #1
 958:	b.eq	988 <register_tm_clones+0x50>  // b.none
 95c:	asr	x1, x0, #1
 960:	adrp	x2, 11000 <__FRAME_END__+0x10234>
 964:	ldr	x2, [x2, #4064]
 968:	cbz	x2, 988 <register_tm_clones+0x50>
 96c:	stp	x29, x30, [sp, #-16]!
 970:	mov	x29, sp
 974:	adrp	x0, 12000 <builtin_error>
 978:	add	x0, x0, #0xb0
 97c:	blr	x2
 980:	ldp	x29, x30, [sp], #16
 984:	ret
 988:	ret

000000000000098c <__do_global_dtors_aux>:
 98c:	adrp	x0, 12000 <builtin_error>
 990:	ldrb	w0, [x0, #176]
 994:	cbnz	w0, 9d0 <__do_global_dtors_aux+0x44>
 998:	stp	x29, x30, [sp, #-16]!
 99c:	mov	x29, sp
 9a0:	adrp	x0, 11000 <__FRAME_END__+0x10234>
 9a4:	ldr	x0, [x0, #4040]
 9a8:	cbz	x0, 9b8 <__do_global_dtors_aux+0x2c>
 9ac:	adrp	x0, 12000 <builtin_error>
 9b0:	ldr	x0, [x0, #88]
 9b4:	bl	840 <__cxa_finalize@plt>
 9b8:	bl	8f4 <deregister_tm_clones>
 9bc:	adrp	x0, 12000 <builtin_error>
 9c0:	mov	w1, #0x1                   	// #1
 9c4:	strb	w1, [x0, #176]
 9c8:	ldp	x29, x30, [sp], #16
 9cc:	ret
 9d0:	ret

00000000000009d4 <frame_dummy>:
 9d4:	stp	x29, x30, [sp, #-16]!
 9d8:	mov	x29, sp
 9dc:	bl	938 <register_tm_clones>
 9e0:	ldp	x29, x30, [sp], #16
 9e4:	ret

00000000000009e8 <uprint>:
 9e8:	adrp	x2, 12000 <builtin_error>
 9ec:	ldr	w2, [x2, #180]
 9f0:	tst	w2, w0
 9f4:	b.eq	a2c <uprint+0x44>  // b.none
 9f8:	stp	x29, x30, [sp, #-16]!
 9fc:	mov	x29, sp
 a00:	bics	w0, w2, w0
 a04:	adrp	x2, 12000 <builtin_error>
 a08:	str	w0, [x2, #180]
 a0c:	mov	w2, #0x20                  	// #32
 a10:	mov	w0, #0xa                   	// #10
 a14:	csel	w2, w2, w0, ne  // ne = any
 a18:	adrp	x0, 0 <_init-0x7f8>
 a1c:	add	x0, x0, #0xc00
 a20:	bl	8b0 <printf@plt>
 a24:	ldp	x29, x30, [sp], #16
 a28:	ret
 a2c:	ret

0000000000000a30 <uname_builtin>:
 a30:	stp	x29, x30, [sp, #-448]!
 a34:	mov	x29, sp
 a38:	stp	x19, x20, [sp, #16]
 a3c:	str	x21, [sp, #32]
 a40:	mov	x21, x0
 a44:	adrp	x0, 12000 <builtin_error>
 a48:	str	wzr, [x0, #180]
 a4c:	bl	8a0 <reset_internal_getopt@plt>
 a50:	adrp	x20, 0 <_init-0x7f8>
 a54:	add	x20, x20, #0xc08
 a58:	adrp	x19, 12000 <builtin_error>
 a5c:	add	x19, x19, #0xb4
 a60:	mov	x1, x20
 a64:	mov	x0, x21
 a68:	bl	890 <internal_getopt@plt>
 a6c:	cmn	w0, #0x1
 a70:	b.eq	b44 <uname_builtin+0x114>  // b.none
 a74:	cmp	w0, #0x70
 a78:	b.eq	b18 <uname_builtin+0xe8>  // b.none
 a7c:	b.gt	ad0 <uname_builtin+0xa0>
 a80:	cmp	w0, #0x61
 a84:	b.eq	b08 <uname_builtin+0xd8>  // b.none
 a88:	cmp	w0, #0x61
 a8c:	b.le	ab0 <uname_builtin+0x80>
 a90:	cmp	w0, #0x6d
 a94:	b.eq	b18 <uname_builtin+0xe8>  // b.none
 a98:	cmp	w0, #0x6e
 a9c:	b.ne	b38 <uname_builtin+0x108>  // b.any
 aa0:	ldr	w0, [x19]
 aa4:	orr	w0, w0, #0x2
 aa8:	str	w0, [x19]
 aac:	b	a60 <uname_builtin+0x30>
 ab0:	cmn	w0, #0x63
 ab4:	b.ne	b38 <uname_builtin+0x108>  // b.any
 ab8:	bl	850 <builtin_help@plt>
 abc:	mov	w0, #0x102                 	// #258
 ac0:	ldp	x19, x20, [sp, #16]
 ac4:	ldr	x21, [sp, #32]
 ac8:	ldp	x29, x30, [sp], #448
 acc:	ret
 ad0:	cmp	w0, #0x73
 ad4:	b.eq	b28 <uname_builtin+0xf8>  // b.none
 ad8:	cmp	w0, #0x76
 adc:	b.ne	af0 <uname_builtin+0xc0>  // b.any
 ae0:	ldr	w0, [x19]
 ae4:	orr	w0, w0, #0x8
 ae8:	str	w0, [x19]
 aec:	b	a60 <uname_builtin+0x30>
 af0:	cmp	w0, #0x72
 af4:	b.ne	b38 <uname_builtin+0x108>  // b.any
 af8:	ldr	w0, [x19]
 afc:	orr	w0, w0, #0x4
 b00:	str	w0, [x19]
 b04:	b	a60 <uname_builtin+0x30>
 b08:	ldr	w0, [x19]
 b0c:	orr	w0, w0, #0x1f
 b10:	str	w0, [x19]
 b14:	b	a60 <uname_builtin+0x30>
 b18:	ldr	w0, [x19]
 b1c:	orr	w0, w0, #0x10
 b20:	str	w0, [x19]
 b24:	b	a60 <uname_builtin+0x30>
 b28:	ldr	w0, [x19]
 b2c:	orr	w0, w0, #0x1
 b30:	str	w0, [x19]
 b34:	b	a60 <uname_builtin+0x30>
 b38:	bl	860 <builtin_usage@plt>
 b3c:	mov	w0, #0x102                 	// #258
 b40:	b	ac0 <uname_builtin+0x90>
 b44:	adrp	x0, 11000 <__FRAME_END__+0x10234>
 b48:	ldr	x0, [x0, #4056]
 b4c:	ldr	x0, [x0]
 b50:	cbnz	x0, bc0 <uname_builtin+0x190>
 b54:	adrp	x0, 12000 <builtin_error>
 b58:	ldr	w0, [x0, #180]
 b5c:	cbnz	w0, b6c <uname_builtin+0x13c>
 b60:	adrp	x0, 12000 <builtin_error>
 b64:	mov	w1, #0x1                   	// #1
 b68:	str	w1, [x0, #180]
 b6c:	add	x0, sp, #0x38
 b70:	bl	8d0 <uname@plt>
 b74:	tbnz	w0, #31, bcc <uname_builtin+0x19c>
 b78:	add	x19, sp, #0x38
 b7c:	mov	x1, x19
 b80:	mov	w0, #0x1                   	// #1
 b84:	bl	9e8 <uprint>
 b88:	add	x1, x19, #0x41
 b8c:	mov	w0, #0x2                   	// #2
 b90:	bl	9e8 <uprint>
 b94:	add	x1, x19, #0x82
 b98:	mov	w0, #0x4                   	// #4
 b9c:	bl	9e8 <uprint>
 ba0:	add	x1, x19, #0xc3
 ba4:	mov	w0, #0x8                   	// #8
 ba8:	bl	9e8 <uprint>
 bac:	add	x1, x19, #0x104
 bb0:	mov	w0, #0x10                  	// #16
 bb4:	bl	9e8 <uprint>
 bb8:	mov	w0, #0x0                   	// #0
 bbc:	b	ac0 <uname_builtin+0x90>
 bc0:	bl	860 <builtin_usage@plt>
 bc4:	mov	w0, #0x102                 	// #258
 bc8:	b	ac0 <uname_builtin+0x90>
 bcc:	bl	8c0 <__errno_location@plt>
 bd0:	ldr	w0, [x0]
 bd4:	bl	870 <strerror@plt>
 bd8:	mov	x1, x0
 bdc:	adrp	x0, 0 <_init-0x7f8>
 be0:	add	x0, x0, #0xc10
 be4:	bl	830 <builtin_error@plt>
 be8:	mov	w0, #0x1                   	// #1
 bec:	b	ac0 <uname_builtin+0x90>

Disassembly of section .fini:

0000000000000bf0 <_fini>:
 bf0:	stp	x29, x30, [sp, #-16]!
 bf4:	mov	x29, sp
 bf8:	ldp	x29, x30, [sp], #16
 bfc:	ret
