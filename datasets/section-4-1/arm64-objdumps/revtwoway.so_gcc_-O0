
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000660 <.init>:
 660:	stp	x29, x30, [sp, #-16]!
 664:	mov	x29, sp
 668:	bl	710 <fprintf@plt+0x10>
 66c:	ldp	x29, x30, [sp], #16
 670:	ret

Disassembly of section .plt:

0000000000000680 <exit@plt-0x20>:
 680:	stp	x16, x30, [sp, #-16]!
 684:	adrp	x16, 11000 <dl_load@@Base+0x10088>
 688:	ldr	x17, [x16, #4088]
 68c:	add	x16, x16, #0xff8
 690:	br	x17
 694:	nop
 698:	nop
 69c:	nop

00000000000006a0 <exit@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16]
 6a8:	add	x16, x16, #0x0
 6ac:	br	x17

00000000000006b0 <__cxa_finalize@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #8]
 6b8:	add	x16, x16, #0x8
 6bc:	br	x17

00000000000006c0 <__gmon_start__@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #16]
 6c8:	add	x16, x16, #0x10
 6cc:	br	x17

00000000000006d0 <strcmp@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #24]
 6d8:	add	x16, x16, #0x18
 6dc:	br	x17

00000000000006e0 <fwrite@plt>:
 6e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #32]
 6e8:	add	x16, x16, #0x20
 6ec:	br	x17

00000000000006f0 <getdtablesize@plt>:
 6f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6f4:	ldr	x17, [x16, #40]
 6f8:	add	x16, x16, #0x28
 6fc:	br	x17

0000000000000700 <fprintf@plt>:
 700:	adrp	x16, 12000 <exit@GLIBC_2.17>
 704:	ldr	x17, [x16, #48]
 708:	add	x16, x16, #0x30
 70c:	br	x17

Disassembly of section .text:

0000000000000710 <dl_load@@Base-0x868>:
     710:	adrp	x0, 11000 <dl_load@@Base+0x10088>
     714:	ldr	x0, [x0, #4056]
     718:	cbz	x0, 720 <fprintf@plt+0x20>
     71c:	b	6c0 <__gmon_start__@plt>
     720:	ret
     724:	stp	x29, x30, [sp, #-32]!
     728:	mov	x29, sp
     72c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     730:	add	x0, x0, #0x70
     734:	str	x0, [sp, #24]
     738:	ldr	x0, [sp, #24]
     73c:	str	x0, [sp, #24]
     740:	ldr	x1, [sp, #24]
     744:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     748:	add	x0, x0, #0x70
     74c:	cmp	x1, x0
     750:	b.eq	788 <fprintf@plt+0x88>  // b.none
     754:	adrp	x0, 11000 <dl_load@@Base+0x10088>
     758:	ldr	x0, [x0, #4032]
     75c:	str	x0, [sp, #16]
     760:	ldr	x0, [sp, #16]
     764:	str	x0, [sp, #16]
     768:	ldr	x0, [sp, #16]
     76c:	cmp	x0, #0x0
     770:	b.eq	78c <fprintf@plt+0x8c>  // b.none
     774:	ldr	x1, [sp, #16]
     778:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     77c:	add	x0, x0, #0x70
     780:	blr	x1
     784:	b	78c <fprintf@plt+0x8c>
     788:	nop
     78c:	ldp	x29, x30, [sp], #32
     790:	ret
     794:	stp	x29, x30, [sp, #-48]!
     798:	mov	x29, sp
     79c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     7a0:	add	x0, x0, #0x70
     7a4:	str	x0, [sp, #40]
     7a8:	ldr	x0, [sp, #40]
     7ac:	str	x0, [sp, #40]
     7b0:	ldr	x1, [sp, #40]
     7b4:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     7b8:	add	x0, x0, #0x70
     7bc:	sub	x0, x1, x0
     7c0:	asr	x0, x0, #3
     7c4:	lsr	x1, x0, #63
     7c8:	add	x0, x1, x0
     7cc:	asr	x0, x0, #1
     7d0:	str	x0, [sp, #32]
     7d4:	ldr	x0, [sp, #32]
     7d8:	cmp	x0, #0x0
     7dc:	b.eq	818 <fprintf@plt+0x118>  // b.none
     7e0:	adrp	x0, 11000 <dl_load@@Base+0x10088>
     7e4:	ldr	x0, [x0, #4064]
     7e8:	str	x0, [sp, #24]
     7ec:	ldr	x0, [sp, #24]
     7f0:	str	x0, [sp, #24]
     7f4:	ldr	x0, [sp, #24]
     7f8:	cmp	x0, #0x0
     7fc:	b.eq	81c <fprintf@plt+0x11c>  // b.none
     800:	ldr	x2, [sp, #24]
     804:	ldr	x1, [sp, #32]
     808:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     80c:	add	x0, x0, #0x70
     810:	blr	x2
     814:	b	81c <fprintf@plt+0x11c>
     818:	nop
     81c:	ldp	x29, x30, [sp], #48
     820:	ret
     824:	stp	x29, x30, [sp, #-16]!
     828:	mov	x29, sp
     82c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     830:	add	x0, x0, #0x70
     834:	ldrb	w0, [x0]
     838:	and	x0, x0, #0xff
     83c:	cmp	x0, #0x0
     840:	b.ne	87c <fprintf@plt+0x17c>  // b.any
     844:	adrp	x0, 11000 <dl_load@@Base+0x10088>
     848:	ldr	x0, [x0, #4040]
     84c:	cmp	x0, #0x0
     850:	b.eq	864 <fprintf@plt+0x164>  // b.none
     854:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     858:	add	x0, x0, #0x38
     85c:	ldr	x0, [x0]
     860:	bl	6b0 <__cxa_finalize@plt>
     864:	bl	724 <fprintf@plt+0x24>
     868:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     86c:	add	x0, x0, #0x70
     870:	mov	w1, #0x1                   	// #1
     874:	strb	w1, [x0]
     878:	b	880 <fprintf@plt+0x180>
     87c:	nop
     880:	ldp	x29, x30, [sp], #16
     884:	ret
     888:	stp	x29, x30, [sp, #-16]!
     88c:	mov	x29, sp
     890:	bl	794 <fprintf@plt+0x94>
     894:	nop
     898:	ldp	x29, x30, [sp], #16
     89c:	ret
     8a0:	stp	x29, x30, [sp, #-32]!
     8a4:	mov	x29, sp
     8a8:	str	x0, [sp, #24]
     8ac:	ldr	x0, [sp, #24]
     8b0:	ldr	x0, [x0, #24]
     8b4:	cmp	x0, #0x1
     8b8:	b.ls	8d4 <fprintf@plt+0x1d4>  // b.plast
     8bc:	ldr	x0, [sp, #24]
     8c0:	ldr	x0, [x0, #24]
     8c4:	sub	x1, x0, #0x1
     8c8:	ldr	x0, [sp, #24]
     8cc:	str	x1, [x0, #24]
     8d0:	b	908 <fprintf@plt+0x208>
     8d4:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     8d8:	add	x0, x0, #0x78
     8dc:	ldr	x0, [x0]
     8e0:	ldr	x1, [x0, #304]
     8e4:	ldr	x0, [sp, #24]
     8e8:	ldr	x0, [x0, #16]
     8ec:	blr	x1
     8f0:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     8f4:	add	x0, x0, #0x78
     8f8:	ldr	x0, [x0]
     8fc:	ldr	x1, [x0, #304]
     900:	ldr	x0, [sp, #24]
     904:	blr	x1
     908:	ldp	x29, x30, [sp], #32
     90c:	ret
     910:	sub	sp, sp, #0x40
     914:	str	x0, [sp, #40]
     918:	str	x1, [sp, #32]
     91c:	str	x2, [sp, #24]
     920:	str	x3, [sp, #16]
     924:	str	x4, [sp, #8]
     928:	str	x5, [sp]
     92c:	str	wzr, [sp, #60]
     930:	ldr	x0, [sp, #40]
     934:	cmp	x0, #0x0
     938:	b.eq	958 <fprintf@plt+0x258>  // b.none
     93c:	ldr	x0, [sp, #32]
     940:	cmp	x0, #0x0
     944:	b.eq	958 <fprintf@plt+0x258>  // b.none
     948:	ldr	x0, [sp, #32]
     94c:	ldr	x0, [x0, #16]
     950:	cmp	x0, #0x0
     954:	b.ne	960 <fprintf@plt+0x260>  // b.any
     958:	mov	w0, #0xffffffff            	// #-1
     95c:	b	a30 <fprintf@plt+0x330>
     960:	ldr	x0, [sp, #32]
     964:	ldr	x0, [x0, #16]
     968:	str	x0, [sp, #48]
     96c:	ldr	x0, [sp, #48]
     970:	ldr	x0, [x0, #8]
     974:	cmp	x0, #0x0
     978:	b.ne	984 <fprintf@plt+0x284>  // b.any
     97c:	mov	w0, #0x0                   	// #0
     980:	b	a30 <fprintf@plt+0x330>
     984:	ldr	x0, [sp, #48]
     988:	ldr	x1, [x0, #16]
     98c:	ldr	x0, [sp, #40]
     990:	str	x1, [x0]
     994:	ldr	x0, [sp, #48]
     998:	ldr	x0, [x0, #8]
     99c:	str	w0, [sp, #60]
     9a0:	ldr	x0, [sp, #48]
     9a4:	str	xzr, [x0, #8]
     9a8:	ldr	x0, [sp, #8]
     9ac:	str	xzr, [x0]
     9b0:	ldr	x0, [sp, #48]
     9b4:	ldr	x1, [x0, #16]
     9b8:	ldrsw	x0, [sp, #60]
     9bc:	sub	x0, x0, #0x1
     9c0:	add	x0, x1, x0
     9c4:	ldrb	w0, [x0]
     9c8:	cmp	w0, #0xa
     9cc:	b.ne	a2c <fprintf@plt+0x32c>  // b.any
     9d0:	b	9f4 <fprintf@plt+0x2f4>
     9d4:	ldr	w0, [sp, #60]
     9d8:	sub	w0, w0, #0x1
     9dc:	str	w0, [sp, #60]
     9e0:	ldr	x0, [sp, #8]
     9e4:	ldr	x0, [x0]
     9e8:	add	x1, x0, #0x1
     9ec:	ldr	x0, [sp, #8]
     9f0:	str	x1, [x0]
     9f4:	ldr	x0, [sp, #48]
     9f8:	ldr	x1, [x0, #16]
     9fc:	ldrsw	x0, [sp, #60]
     a00:	sub	x0, x0, #0x1
     a04:	add	x0, x1, x0
     a08:	ldrb	w0, [x0]
     a0c:	cmp	w0, #0xa
     a10:	b.eq	9d4 <fprintf@plt+0x2d4>  // b.none
     a14:	ldr	x0, [sp, #48]
     a18:	ldr	x1, [x0, #16]
     a1c:	ldrsw	x0, [sp, #60]
     a20:	add	x1, x1, x0
     a24:	ldr	x0, [sp, #16]
     a28:	str	x1, [x0]
     a2c:	ldr	w0, [sp, #60]
     a30:	add	sp, sp, #0x40
     a34:	ret
     a38:	stp	x29, x30, [sp, #-48]!
     a3c:	mov	x29, sp
     a40:	str	x0, [sp, #24]
     a44:	ldr	x0, [sp, #24]
     a48:	cmp	x0, #0x0
     a4c:	b.eq	a84 <fprintf@plt+0x384>  // b.none
     a50:	ldr	x0, [sp, #24]
     a54:	ldr	x0, [x0, #16]
     a58:	cmp	x0, #0x0
     a5c:	b.eq	a84 <fprintf@plt+0x384>  // b.none
     a60:	ldr	x0, [sp, #24]
     a64:	ldr	x0, [x0, #16]
     a68:	str	x0, [sp, #40]
     a6c:	ldr	x0, [sp, #40]
     a70:	bl	8a0 <fprintf@plt+0x1a0>
     a74:	ldr	x0, [sp, #24]
     a78:	mov	w1, #0xffffffff            	// #-1
     a7c:	str	w1, [x0, #8]
     a80:	b	a88 <fprintf@plt+0x388>
     a84:	nop
     a88:	ldp	x29, x30, [sp], #48
     a8c:	ret
     a90:	stp	x29, x30, [sp, #-112]!
     a94:	mov	x29, sp
     a98:	str	x0, [sp, #56]
     a9c:	str	x1, [sp, #48]
     aa0:	str	x2, [sp, #40]
     aa4:	str	x3, [sp, #32]
     aa8:	str	x4, [sp, #24]
     aac:	ldr	x0, [sp, #24]
     ab0:	cmp	x0, #0x0
     ab4:	b.ne	ac0 <fprintf@plt+0x3c0>  // b.any
     ab8:	mov	x0, #0x0                   	// #0
     abc:	b	cb8 <fprintf@plt+0x5b8>
     ac0:	ldr	x0, [sp, #24]
     ac4:	str	x0, [sp, #80]
     ac8:	ldr	x1, [sp, #48]
     acc:	ldr	x0, [sp, #40]
     ad0:	mul	x0, x1, x0
     ad4:	str	x0, [sp, #72]
     ad8:	ldr	x0, [sp, #80]
     adc:	ldr	x0, [x0]
     ae0:	ldr	x1, [sp, #72]
     ae4:	cmp	x1, x0
     ae8:	b.hi	afc <fprintf@plt+0x3fc>  // b.pmore
     aec:	ldr	x0, [sp, #80]
     af0:	ldr	x0, [x0, #8]
     af4:	cmp	x0, #0x0
     af8:	b.eq	c2c <fprintf@plt+0x52c>  // b.none
     afc:	ldr	x0, [sp, #80]
     b00:	ldr	x0, [x0, #16]
     b04:	cmp	x0, #0x0
     b08:	b.ne	b7c <fprintf@plt+0x47c>  // b.any
     b0c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     b10:	add	x0, x0, #0x78
     b14:	ldr	x0, [x0]
     b18:	ldr	x1, [x0, #280]
     b1c:	ldr	x0, [sp, #72]
     b20:	blr	x1
     b24:	mov	x1, x0
     b28:	ldr	x0, [sp, #80]
     b2c:	str	x1, [x0, #16]
     b30:	ldr	x0, [sp, #80]
     b34:	ldr	x0, [x0, #16]
     b38:	cmp	x0, #0x0
     b3c:	b.ne	c14 <fprintf@plt+0x514>  // b.any
     b40:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     b44:	add	x0, x0, #0x78
     b48:	ldr	x0, [x0]
     b4c:	ldr	x4, [x0, #96]
     b50:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     b54:	add	x0, x0, #0x80
     b58:	ldr	x5, [x0]
     b5c:	ldr	x3, [sp, #72]
     b60:	adrp	x0, 1000 <dl_load@@Base+0x88>
     b64:	add	x2, x0, #0x268
     b68:	adrp	x0, 1000 <dl_load@@Base+0x88>
     b6c:	add	x1, x0, #0x278
     b70:	mov	x0, x5
     b74:	blr	x4
     b78:	b	c14 <fprintf@plt+0x514>
     b7c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     b80:	add	x0, x0, #0x78
     b84:	ldr	x0, [x0]
     b88:	ldr	x2, [x0, #296]
     b8c:	ldr	x0, [sp, #80]
     b90:	ldr	x3, [x0, #16]
     b94:	ldr	x0, [sp, #80]
     b98:	ldr	x1, [x0]
     b9c:	ldr	x0, [sp, #72]
     ba0:	add	x0, x1, x0
     ba4:	mov	x1, x0
     ba8:	mov	x0, x3
     bac:	blr	x2
     bb0:	mov	x1, x0
     bb4:	ldr	x0, [sp, #80]
     bb8:	str	x1, [x0, #16]
     bbc:	ldr	x0, [sp, #80]
     bc0:	ldr	x0, [x0, #16]
     bc4:	cmp	x0, #0x0
     bc8:	b.ne	c14 <fprintf@plt+0x514>  // b.any
     bcc:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     bd0:	add	x0, x0, #0x78
     bd4:	ldr	x0, [x0]
     bd8:	ldr	x4, [x0, #96]
     bdc:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     be0:	add	x0, x0, #0x80
     be4:	ldr	x5, [x0]
     be8:	ldr	x0, [sp, #80]
     bec:	ldr	x1, [x0]
     bf0:	ldr	x0, [sp, #72]
     bf4:	add	x0, x1, x0
     bf8:	mov	x3, x0
     bfc:	adrp	x0, 1000 <dl_load@@Base+0x88>
     c00:	add	x2, x0, #0x268
     c04:	adrp	x0, 1000 <dl_load@@Base+0x88>
     c08:	add	x1, x0, #0x298
     c0c:	mov	x0, x5
     c10:	blr	x4
     c14:	ldr	x0, [sp, #80]
     c18:	ldr	x1, [x0]
     c1c:	ldr	x0, [sp, #72]
     c20:	add	x1, x1, x0
     c24:	ldr	x0, [sp, #80]
     c28:	str	x1, [x0]
     c2c:	ldr	x0, [sp, #72]
     c30:	sub	x0, x0, #0x1
     c34:	ldr	x1, [sp, #56]
     c38:	add	x0, x1, x0
     c3c:	str	x0, [sp, #96]
     c40:	ldr	x0, [sp, #80]
     c44:	ldr	x1, [x0, #16]
     c48:	ldr	x0, [sp, #80]
     c4c:	ldr	x0, [x0, #8]
     c50:	add	x0, x1, x0
     c54:	str	x0, [sp, #88]
     c58:	ldr	x0, [sp, #72]
     c5c:	str	x0, [sp, #104]
     c60:	b	c90 <fprintf@plt+0x590>
     c64:	ldr	x1, [sp, #96]
     c68:	sub	x0, x1, #0x1
     c6c:	str	x0, [sp, #96]
     c70:	ldr	x0, [sp, #88]
     c74:	add	x2, x0, #0x1
     c78:	str	x2, [sp, #88]
     c7c:	ldrb	w1, [x1]
     c80:	strb	w1, [x0]
     c84:	ldr	x0, [sp, #104]
     c88:	sub	x0, x0, #0x1
     c8c:	str	x0, [sp, #104]
     c90:	ldr	x0, [sp, #104]
     c94:	cmp	x0, #0x0
     c98:	b.ne	c64 <fprintf@plt+0x564>  // b.any
     c9c:	ldr	x0, [sp, #80]
     ca0:	ldr	x1, [x0, #8]
     ca4:	ldr	x0, [sp, #72]
     ca8:	add	x1, x1, x0
     cac:	ldr	x0, [sp, #80]
     cb0:	str	x1, [x0, #8]
     cb4:	ldr	x0, [sp, #72]
     cb8:	ldp	x29, x30, [sp], #112
     cbc:	ret
     cc0:	sub	sp, sp, #0x10
     cc4:	str	x0, [sp, #8]
     cc8:	str	x1, [sp]
     ccc:	mov	w0, #0x0                   	// #0
     cd0:	add	sp, sp, #0x10
     cd4:	ret
     cd8:	sub	sp, sp, #0x10
     cdc:	str	x0, [sp, #8]
     ce0:	str	x1, [sp]
     ce4:	mov	w0, #0x0                   	// #0
     ce8:	add	sp, sp, #0x10
     cec:	ret
     cf0:	stp	x29, x30, [sp, #-48]!
     cf4:	mov	x29, sp
     cf8:	str	x0, [sp, #24]
     cfc:	str	x1, [sp, #16]
     d00:	ldr	x0, [sp, #16]
     d04:	cmp	x0, #0x0
     d08:	b.ne	d14 <fprintf@plt+0x614>  // b.any
     d0c:	mov	w0, #0xffffffff            	// #-1
     d10:	b	d28 <fprintf@plt+0x628>
     d14:	ldr	x0, [sp, #16]
     d18:	str	x0, [sp, #40]
     d1c:	ldr	x0, [sp, #40]
     d20:	bl	8a0 <fprintf@plt+0x1a0>
     d24:	mov	w0, #0x0                   	// #0
     d28:	ldp	x29, x30, [sp], #48
     d2c:	ret
     d30:	stp	x29, x30, [sp, #-32]!
     d34:	mov	x29, sp
     d38:	str	x0, [sp, #24]
     d3c:	ldr	x0, [sp, #24]
     d40:	cmp	x0, #0x0
     d44:	b.eq	d68 <fprintf@plt+0x668>  // b.none
     d48:	adrp	x0, 1000 <dl_load@@Base+0x88>
     d4c:	add	x1, x0, #0x2b8
     d50:	ldr	x0, [sp, #24]
     d54:	bl	6d0 <strcmp@plt>
     d58:	cmp	w0, #0x0
     d5c:	b.ne	d68 <fprintf@plt+0x668>  // b.any
     d60:	mov	w0, #0x1                   	// #1
     d64:	b	d6c <fprintf@plt+0x66c>
     d68:	mov	w0, #0x0                   	// #0
     d6c:	ldp	x29, x30, [sp], #32
     d70:	ret
     d74:	stp	x29, x30, [sp, #-64]!
     d78:	mov	x29, sp
     d7c:	str	x0, [sp, #40]
     d80:	str	x1, [sp, #32]
     d84:	str	x2, [sp, #24]
     d88:	ldr	x0, [sp, #32]
     d8c:	cmp	x0, #0x0
     d90:	b.eq	da0 <fprintf@plt+0x6a0>  // b.none
     d94:	ldr	x0, [sp, #24]
     d98:	cmp	x0, #0x0
     d9c:	b.ne	da8 <fprintf@plt+0x6a8>  // b.any
     da0:	mov	w0, #0x0                   	// #0
     da4:	b	f1c <fprintf@plt+0x81c>
     da8:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     dac:	add	x0, x0, #0x78
     db0:	ldr	x0, [x0]
     db4:	ldr	x1, [x0, #280]
     db8:	mov	x0, #0x20                  	// #32
     dbc:	blr	x1
     dc0:	str	x0, [sp, #56]
     dc4:	ldr	x0, [sp, #56]
     dc8:	cmp	x0, #0x0
     dcc:	b.ne	e08 <fprintf@plt+0x708>  // b.any
     dd0:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     dd4:	add	x0, x0, #0x78
     dd8:	ldr	x0, [x0]
     ddc:	ldr	x4, [x0, #96]
     de0:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     de4:	add	x0, x0, #0x80
     de8:	ldr	x5, [x0]
     dec:	mov	x3, #0x20                  	// #32
     df0:	adrp	x0, 1000 <dl_load@@Base+0x88>
     df4:	add	x2, x0, #0x2c8
     df8:	adrp	x0, 1000 <dl_load@@Base+0x88>
     dfc:	add	x1, x0, #0x278
     e00:	mov	x0, x5
     e04:	blr	x4
     e08:	ldr	x0, [sp, #56]
     e0c:	mov	x1, #0x2                   	// #2
     e10:	str	x1, [x0, #24]
     e14:	ldr	x0, [sp, #56]
     e18:	str	xzr, [x0]
     e1c:	ldr	x0, [sp, #56]
     e20:	str	xzr, [x0, #8]
     e24:	ldr	x0, [sp, #56]
     e28:	str	xzr, [x0, #16]
     e2c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     e30:	add	x0, x0, #0x88
     e34:	ldr	x0, [x0]
     e38:	cmn	x0, #0x1
     e3c:	b.ne	e54 <fprintf@plt+0x754>  // b.any
     e40:	bl	6f0 <getdtablesize@plt>
     e44:	sxtw	x1, w0
     e48:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     e4c:	add	x0, x0, #0x88
     e50:	str	x1, [x0]
     e54:	ldr	x0, [sp, #32]
     e58:	adrp	x1, 0 <exit@plt-0x6a0>
     e5c:	add	x1, x1, #0x910
     e60:	str	x1, [x0, #24]
     e64:	ldr	x0, [sp, #32]
     e68:	adrp	x1, 0 <exit@plt-0x6a0>
     e6c:	add	x1, x1, #0xa38
     e70:	str	x1, [x0, #40]
     e74:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     e78:	add	x0, x0, #0x88
     e7c:	ldr	x0, [x0]
     e80:	mov	w1, w0
     e84:	ldr	x0, [sp, #32]
     e88:	str	w1, [x0, #8]
     e8c:	ldr	x0, [sp, #32]
     e90:	ldr	x1, [sp, #56]
     e94:	str	x1, [x0, #16]
     e98:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     e9c:	add	x0, x0, #0x88
     ea0:	ldr	x0, [x0]
     ea4:	add	x2, x0, #0x1
     ea8:	adrp	x1, 12000 <dl_load@@Base+0x11088>
     eac:	add	x1, x1, #0x88
     eb0:	str	x2, [x1]
     eb4:	mov	x1, x0
     eb8:	ldr	x0, [sp, #24]
     ebc:	str	x1, [x0, #16]
     ec0:	ldr	x0, [sp, #24]
     ec4:	ldr	x1, [sp, #56]
     ec8:	str	x1, [x0, #32]
     ecc:	ldr	x0, [sp, #24]
     ed0:	adrp	x1, 0 <exit@plt-0x6a0>
     ed4:	add	x1, x1, #0xa90
     ed8:	str	x1, [x0, #40]
     edc:	ldr	x0, [sp, #24]
     ee0:	adrp	x1, 0 <exit@plt-0x6a0>
     ee4:	add	x1, x1, #0xcc0
     ee8:	str	x1, [x0, #48]
     eec:	ldr	x0, [sp, #24]
     ef0:	adrp	x1, 0 <exit@plt-0x6a0>
     ef4:	add	x1, x1, #0xcd8
     ef8:	str	x1, [x0, #56]
     efc:	ldr	x0, [sp, #24]
     f00:	adrp	x1, 0 <exit@plt-0x6a0>
     f04:	add	x1, x1, #0xcf0
     f08:	str	x1, [x0, #64]
     f0c:	ldr	x0, [sp, #24]
     f10:	mov	w1, #0x1                   	// #1
     f14:	str	w1, [x0, #24]
     f18:	mov	w0, #0x1                   	// #1
     f1c:	ldp	x29, x30, [sp], #64
     f20:	ret
     f24:	stp	x29, x30, [sp, #-16]!
     f28:	mov	x29, sp
     f2c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     f30:	add	x0, x0, #0x78
     f34:	ldr	x0, [x0]
     f38:	ldr	x2, [x0, #72]
     f3c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     f40:	add	x0, x0, #0x80
     f44:	ldr	x3, [x0]
     f48:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     f4c:	add	x1, x0, #0x50
     f50:	mov	x0, x3
     f54:	blr	x2
     f58:	bl	6f0 <getdtablesize@plt>
     f5c:	sxtw	x1, w0
     f60:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     f64:	add	x0, x0, #0x88
     f68:	str	x1, [x0]
     f6c:	mov	w0, #0x1                   	// #1
     f70:	ldp	x29, x30, [sp], #16
     f74:	ret

0000000000000f78 <dl_load@@Base>:
     f78:	stp	x29, x30, [sp, #-64]!
     f7c:	mov	x29, sp
     f80:	str	x0, [sp, #24]
     f84:	str	x1, [sp, #16]
     f88:	str	wzr, [sp, #52]
     f8c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     f90:	add	x0, x0, #0x78
     f94:	ldr	x1, [sp, #24]
     f98:	str	x1, [x0]
     f9c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     fa0:	add	x0, x0, #0x80
     fa4:	ldr	x1, [sp, #16]
     fa8:	str	x1, [x0]
     fac:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     fb0:	add	x0, x0, #0x78
     fb4:	ldr	x0, [x0]
     fb8:	ldr	w0, [x0]
     fbc:	cmp	w0, #0x2
     fc0:	b.ne	fdc <dl_load@@Base+0x64>  // b.any
     fc4:	adrp	x0, 12000 <dl_load@@Base+0x11088>
     fc8:	add	x0, x0, #0x78
     fcc:	ldr	x0, [x0]
     fd0:	ldr	w0, [x0, #4]
     fd4:	cmp	w0, #0x0
     fd8:	b.ge	1054 <dl_load@@Base+0xdc>  // b.tcont
     fdc:	adrp	x0, 11000 <dl_load@@Base+0x10088>
     fe0:	ldr	x0, [x0, #4048]
     fe4:	ldr	x0, [x0]
     fe8:	mov	x3, x0
     fec:	mov	x2, #0x27                  	// #39
     ff0:	mov	x1, #0x1                   	// #1
     ff4:	adrp	x0, 1000 <dl_load@@Base+0x88>
     ff8:	add	x0, x0, #0x2f8
     ffc:	bl	6e0 <fwrite@plt>
    1000:	adrp	x0, 11000 <dl_load@@Base+0x10088>
    1004:	ldr	x0, [x0, #4048]
    1008:	ldr	x6, [x0]
    100c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1010:	add	x0, x0, #0x78
    1014:	ldr	x0, [x0]
    1018:	ldr	w1, [x0]
    101c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1020:	add	x0, x0, #0x78
    1024:	ldr	x0, [x0]
    1028:	ldr	w0, [x0, #4]
    102c:	mov	w5, w0
    1030:	mov	w4, w1
    1034:	mov	w3, #0x0                   	// #0
    1038:	mov	w2, #0x2                   	// #2
    103c:	adrp	x0, 1000 <dl_load@@Base+0x88>
    1040:	add	x1, x0, #0x320
    1044:	mov	x0, x6
    1048:	bl	700 <fprintf@plt>
    104c:	mov	w0, #0x1                   	// #1
    1050:	bl	6a0 <exit@plt>
    1054:	str	xzr, [sp, #56]
    1058:	mov	x0, #0x1                   	// #1
    105c:	str	x0, [sp, #40]
    1060:	b	1154 <dl_load@@Base+0x1dc>
    1064:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1068:	add	x2, x0, #0x90
    106c:	ldr	x1, [sp, #56]
    1070:	mov	x0, x1
    1074:	lsl	x0, x0, #1
    1078:	add	x0, x0, x1
    107c:	lsl	x0, x0, #4
    1080:	add	x0, x2, x0
    1084:	ldr	x0, [x0]
    1088:	cmp	x0, #0x0
    108c:	b.eq	1168 <dl_load@@Base+0x1f0>  // b.none
    1090:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1094:	add	x0, x0, #0x78
    1098:	ldr	x0, [x0]
    109c:	ldr	x3, [x0, #48]
    10a0:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    10a4:	add	x0, x0, #0x80
    10a8:	ldr	x4, [x0]
    10ac:	ldr	x1, [sp, #56]
    10b0:	mov	x0, x1
    10b4:	lsl	x0, x0, #1
    10b8:	add	x0, x0, x1
    10bc:	lsl	x0, x0, #4
    10c0:	adrp	x1, 12000 <dl_load@@Base+0x11088>
    10c4:	add	x1, x1, #0x90
    10c8:	add	x0, x0, x1
    10cc:	mov	x2, x0
    10d0:	adrp	x0, 1000 <dl_load@@Base+0x88>
    10d4:	add	x1, x0, #0x358
    10d8:	mov	x0, x4
    10dc:	blr	x3
    10e0:	cmp	w0, #0x0
    10e4:	b.ne	1148 <dl_load@@Base+0x1d0>  // b.any
    10e8:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    10ec:	add	x0, x0, #0x78
    10f0:	ldr	x0, [x0]
    10f4:	ldr	x3, [x0, #104]
    10f8:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    10fc:	add	x0, x0, #0x80
    1100:	ldr	x4, [x0]
    1104:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1108:	add	x2, x0, #0x90
    110c:	ldr	x1, [sp, #56]
    1110:	mov	x0, x1
    1114:	lsl	x0, x0, #1
    1118:	add	x0, x0, x1
    111c:	lsl	x0, x0, #4
    1120:	add	x0, x2, x0
    1124:	ldr	x0, [x0]
    1128:	mov	x2, x0
    112c:	adrp	x0, 1000 <dl_load@@Base+0x88>
    1130:	add	x1, x0, #0x360
    1134:	mov	x0, x4
    1138:	blr	x3
    113c:	ldr	w0, [sp, #52]
    1140:	add	w0, w0, #0x1
    1144:	str	w0, [sp, #52]
    1148:	ldr	x0, [sp, #56]
    114c:	add	x0, x0, #0x1
    1150:	str	x0, [sp, #56]
    1154:	ldr	x1, [sp, #56]
    1158:	ldr	x0, [sp, #40]
    115c:	cmp	x1, x0
    1160:	b.cc	1064 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
    1164:	b	116c <dl_load@@Base+0x1f4>
    1168:	nop
    116c:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1170:	add	x0, x0, #0x48
    1174:	ldr	x0, [x0]
    1178:	cmp	x0, #0x0
    117c:	b.eq	11d0 <dl_load@@Base+0x258>  // b.none
    1180:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1184:	add	x0, x0, #0x48
    1188:	ldr	x0, [x0]
    118c:	blr	x0
    1190:	cmp	w0, #0x0
    1194:	b.ne	11d0 <dl_load@@Base+0x258>  // b.any
    1198:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    119c:	add	x0, x0, #0x78
    11a0:	ldr	x0, [x0]
    11a4:	ldr	x2, [x0, #104]
    11a8:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    11ac:	add	x0, x0, #0x80
    11b0:	ldr	x3, [x0]
    11b4:	adrp	x0, 1000 <dl_load@@Base+0x88>
    11b8:	add	x1, x0, #0x380
    11bc:	mov	x0, x3
    11c0:	blr	x2
    11c4:	ldr	w0, [sp, #52]
    11c8:	add	w0, w0, #0x1
    11cc:	str	w0, [sp, #52]
    11d0:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    11d4:	add	x0, x0, #0x40
    11d8:	ldr	x0, [x0]
    11dc:	cmp	x0, #0x0
    11e0:	b.eq	1218 <dl_load@@Base+0x2a0>  // b.none
    11e4:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    11e8:	add	x0, x0, #0x78
    11ec:	ldr	x0, [x0]
    11f0:	ldr	x2, [x0, #88]
    11f4:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    11f8:	add	x0, x0, #0x80
    11fc:	ldr	x3, [x0]
    1200:	adrp	x0, 12000 <dl_load@@Base+0x11088>
    1204:	add	x0, x0, #0x40
    1208:	ldr	x0, [x0]
    120c:	mov	x1, x0
    1210:	mov	x0, x3
    1214:	blr	x2
    1218:	ldr	w0, [sp, #52]
    121c:	cmp	w0, #0x0
    1220:	cset	w0, eq  // eq = none
    1224:	and	w0, w0, #0xff
    1228:	ldp	x29, x30, [sp], #64
    122c:	ret

Disassembly of section .fini:

0000000000001230 <.fini>:
    1230:	stp	x29, x30, [sp, #-16]!
    1234:	mov	x29, sp
    1238:	ldp	x29, x30, [sp], #16
    123c:	ret
