
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401620 <_init>:
  401620:	stp	x29, x30, [sp, #-16]!
  401624:	mov	x29, sp
  401628:	bl	401c7c <call_weak_fn>
  40162c:	ldp	x29, x30, [sp], #16
  401630:	ret

Disassembly of section .plt:

0000000000401640 <.plt>:
  401640:	stp	x16, x30, [sp, #-16]!
  401644:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401648:	ldr	x17, [x16, #3640]
  40164c:	add	x16, x16, #0xe38
  401650:	br	x17
  401654:	nop
  401658:	nop
  40165c:	nop

0000000000401660 <__libc_start_main@plt>:
  401660:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401664:	ldr	x17, [x16, #3648]
  401668:	add	x16, x16, #0xe40
  40166c:	br	x17

0000000000401670 <safe_atollu@plt>:
  401670:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401674:	ldr	x17, [x16, #3656]
  401678:	add	x16, x16, #0xe48
  40167c:	br	x17

0000000000401680 <efi_get_variable_string@plt>:
  401680:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401684:	ldr	x17, [x16, #3664]
  401688:	add	x16, x16, #0xe50
  40168c:	br	x17

0000000000401690 <__gmon_start__@plt>:
  401690:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401694:	ldr	x17, [x16, #3672]
  401698:	add	x16, x16, #0xe58
  40169c:	br	x17

00000000004016a0 <polkit_agent_close@plt>:
  4016a0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016a4:	ldr	x17, [x16, #3680]
  4016a8:	add	x16, x16, #0xe60
  4016ac:	br	x17

00000000004016b0 <log_parse_environment_realm@plt>:
  4016b0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016b4:	ldr	x17, [x16, #3688]
  4016b8:	add	x16, x16, #0xe68
  4016bc:	br	x17

00000000004016c0 <strnlen@plt>:
  4016c0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016c4:	ldr	x17, [x16, #3696]
  4016c8:	add	x16, x16, #0xe70
  4016cc:	br	x17

00000000004016d0 <dispatch_verb@plt>:
  4016d0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016d4:	ldr	x17, [x16, #3704]
  4016d8:	add	x16, x16, #0xe78
  4016dc:	br	x17

00000000004016e0 <memcpy@plt>:
  4016e0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016e4:	ldr	x17, [x16, #3712]
  4016e8:	add	x16, x16, #0xe80
  4016ec:	br	x17

00000000004016f0 <last_path_component@plt>:
  4016f0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4016f4:	ldr	x17, [x16, #3720]
  4016f8:	add	x16, x16, #0xe88
  4016fc:	br	x17

0000000000401700 <strjoin_real@plt>:
  401700:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401704:	ldr	x17, [x16, #3728]
  401708:	add	x16, x16, #0xe90
  40170c:	br	x17

0000000000401710 <safe_close@plt>:
  401710:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401714:	ldr	x17, [x16, #3736]
  401718:	add	x16, x16, #0xe98
  40171c:	br	x17

0000000000401720 <strrchr@plt>:
  401720:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401724:	ldr	x17, [x16, #3744]
  401728:	add	x16, x16, #0xea0
  40172c:	br	x17

0000000000401730 <log_assert_failed_realm@plt>:
  401730:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401734:	ldr	x17, [x16, #3752]
  401738:	add	x16, x16, #0xea8
  40173c:	br	x17

0000000000401740 <faccessat@plt>:
  401740:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401744:	ldr	x17, [x16, #3760]
  401748:	add	x16, x16, #0xeb0
  40174c:	br	x17

0000000000401750 <getopt_long@plt>:
  401750:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401754:	ldr	x17, [x16, #3768]
  401758:	add	x16, x16, #0xeb8
  40175c:	br	x17

0000000000401760 <dirname_malloc@plt>:
  401760:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401764:	ldr	x17, [x16, #3776]
  401768:	add	x16, x16, #0xec0
  40176c:	br	x17

0000000000401770 <log_assert_failed_unreachable_realm@plt>:
  401770:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401774:	ldr	x17, [x16, #3784]
  401778:	add	x16, x16, #0xec8
  40177c:	br	x17

0000000000401780 <path_is_absolute@plt>:
  401780:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401784:	ldr	x17, [x16, #3792]
  401788:	add	x16, x16, #0xed0
  40178c:	br	x17

0000000000401790 <rename_noreplace@plt>:
  401790:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401794:	ldr	x17, [x16, #3800]
  401798:	add	x16, x16, #0xed8
  40179c:	br	x17

00000000004017a0 <is_efi_boot@plt>:
  4017a0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017a4:	ldr	x17, [x16, #3808]
  4017a8:	add	x16, x16, #0xee0
  4017ac:	br	x17

00000000004017b0 <path_is_normalized@plt>:
  4017b0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017b4:	ldr	x17, [x16, #3816]
  4017b8:	add	x16, x16, #0xee8
  4017bc:	br	x17

00000000004017c0 <abort@plt>:
  4017c0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017c4:	ldr	x17, [x16, #3824]
  4017c8:	add	x16, x16, #0xef0
  4017cc:	br	x17

00000000004017d0 <strv_new_internal@plt>:
  4017d0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017d4:	ldr	x17, [x16, #3832]
  4017d8:	add	x16, x16, #0xef8
  4017dc:	br	x17

00000000004017e0 <strspn@plt>:
  4017e0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017e4:	ldr	x17, [x16, #3840]
  4017e8:	add	x16, x16, #0xf00
  4017ec:	br	x17

00000000004017f0 <efi_tilt_backslashes@plt>:
  4017f0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4017f4:	ldr	x17, [x16, #3848]
  4017f8:	add	x16, x16, #0xf08
  4017fc:	br	x17

0000000000401800 <__errno_location@plt>:
  401800:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401804:	ldr	x17, [x16, #3856]
  401808:	add	x16, x16, #0xf10
  40180c:	br	x17

0000000000401810 <strv_free@plt>:
  401810:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401814:	ldr	x17, [x16, #3864]
  401818:	add	x16, x16, #0xf18
  40181c:	br	x17

0000000000401820 <find_xbootldr_and_warn@plt>:
  401820:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401824:	ldr	x17, [x16, #3872]
  401828:	add	x16, x16, #0xf20
  40182c:	br	x17

0000000000401830 <strv_extend@plt>:
  401830:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401834:	ldr	x17, [x16, #3880]
  401838:	add	x16, x16, #0xf28
  40183c:	br	x17

0000000000401840 <strndup@plt>:
  401840:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401844:	ldr	x17, [x16, #3888]
  401848:	add	x16, x16, #0xf30
  40184c:	br	x17

0000000000401850 <terminal_urlify_man@plt>:
  401850:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401854:	ldr	x17, [x16, #3896]
  401858:	add	x16, x16, #0xf38
  40185c:	br	x17

0000000000401860 <__stack_chk_fail@plt>:
  401860:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401864:	ldr	x17, [x16, #3904]
  401868:	add	x16, x16, #0xf40
  40186c:	br	x17

0000000000401870 <ask_password_agent_close@plt>:
  401870:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401874:	ldr	x17, [x16, #3912]
  401878:	add	x16, x16, #0xf48
  40187c:	br	x17

0000000000401880 <version@plt>:
  401880:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401884:	ldr	x17, [x16, #3920]
  401888:	add	x16, x16, #0xf50
  40188c:	br	x17

0000000000401890 <pager_close@plt>:
  401890:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401894:	ldr	x17, [x16, #3928]
  401898:	add	x16, x16, #0xf58
  40189c:	br	x17

00000000004018a0 <log_internal_realm@plt>:
  4018a0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018a4:	ldr	x17, [x16, #3936]
  4018a8:	add	x16, x16, #0xf60
  4018ac:	br	x17

00000000004018b0 <strv_join_prefix@plt>:
  4018b0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018b4:	ldr	x17, [x16, #3944]
  4018b8:	add	x16, x16, #0xf68
  4018bc:	br	x17

00000000004018c0 <detect_container@plt>:
  4018c0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018c4:	ldr	x17, [x16, #3952]
  4018c8:	add	x16, x16, #0xf70
  4018cc:	br	x17

00000000004018d0 <strcmp@plt>:
  4018d0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018d4:	ldr	x17, [x16, #3960]
  4018d8:	add	x16, x16, #0xf78
  4018dc:	br	x17

00000000004018e0 <strdup@plt>:
  4018e0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018e4:	ldr	x17, [x16, #3968]
  4018e8:	add	x16, x16, #0xf80
  4018ec:	br	x17

00000000004018f0 <asprintf@plt>:
  4018f0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4018f4:	ldr	x17, [x16, #3976]
  4018f8:	add	x16, x16, #0xf88
  4018fc:	br	x17

0000000000401900 <colors_enabled@plt>:
  401900:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401904:	ldr	x17, [x16, #3984]
  401908:	add	x16, x16, #0xf90
  40190c:	br	x17

0000000000401910 <free@plt>:
  401910:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401914:	ldr	x17, [x16, #3992]
  401918:	add	x16, x16, #0xf98
  40191c:	br	x17

0000000000401920 <puts@plt>:
  401920:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401924:	ldr	x17, [x16, #4000]
  401928:	add	x16, x16, #0xfa0
  40192c:	br	x17

0000000000401930 <fsync_path_at@plt>:
  401930:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401934:	ldr	x17, [x16, #4008]
  401938:	add	x16, x16, #0xfa8
  40193c:	br	x17

0000000000401940 <mac_selinux_finish@plt>:
  401940:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401944:	ldr	x17, [x16, #4016]
  401948:	add	x16, x16, #0xfb0
  40194c:	br	x17

0000000000401950 <syncfs@plt>:
  401950:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401954:	ldr	x17, [x16, #4024]
  401958:	add	x16, x16, #0xfb8
  40195c:	br	x17

0000000000401960 <printf@plt>:
  401960:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401964:	ldr	x17, [x16, #4032]
  401968:	add	x16, x16, #0xfc0
  40196c:	br	x17

0000000000401970 <open64@plt>:
  401970:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401974:	ldr	x17, [x16, #4040]
  401978:	add	x16, x16, #0xfc8
  40197c:	br	x17

0000000000401980 <find_esp_and_warn@plt>:
  401980:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401984:	ldr	x17, [x16, #4048]
  401988:	add	x16, x16, #0xfd0
  40198c:	br	x17

0000000000401990 <log_open@plt>:
  401990:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  401994:	ldr	x17, [x16, #4056]
  401998:	add	x16, x16, #0xfd8
  40199c:	br	x17

00000000004019a0 <log_oom_internal@plt>:
  4019a0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4019a4:	ldr	x17, [x16, #4064]
  4019a8:	add	x16, x16, #0xfe0
  4019ac:	br	x17

00000000004019b0 <log_get_max_level_realm@plt>:
  4019b0:	adrp	x16, 414000 <__FRAME_END__+0xfee0>
  4019b4:	ldr	x17, [x16, #4072]
  4019b8:	add	x16, x16, #0xfe8
  4019bc:	br	x17

Disassembly of section .text:

00000000004019c0 <main>:
  4019c0:	stp	x29, x30, [sp, #-64]!
  4019c4:	mov	x29, sp
  4019c8:	stp	x19, x20, [sp, #16]
  4019cc:	mov	w20, w0
  4019d0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4019d4:	stp	x21, x22, [sp, #32]
  4019d8:	mov	x21, x1
  4019dc:	str	w20, [x0, #16]
  4019e0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4019e4:	stp	x23, x24, [sp, #48]
  4019e8:	str	x1, [x0]
  4019ec:	mov	w0, #0x0                   	// #0
  4019f0:	bl	4016b0 <log_parse_environment_realm@plt>
  4019f4:	bl	401990 <log_open@plt>
  4019f8:	tbz	w20, #31, 401a20 <main+0x60>
  4019fc:	adrp	x4, 403000 <verb_status+0x1ec>
  401a00:	adrp	x2, 403000 <verb_status+0x1ec>
  401a04:	adrp	x1, 403000 <verb_status+0x1ec>
  401a08:	add	x4, x4, #0xba8
  401a0c:	add	x2, x2, #0x2d7
  401a10:	add	x1, x1, #0xaf3
  401a14:	mov	w3, #0x45                  	// #69
  401a18:	mov	w0, #0x0                   	// #0
  401a1c:	bl	401730 <log_assert_failed_realm@plt>
  401a20:	cbz	x21, 401a9c <main+0xdc>
  401a24:	adrp	x22, 403000 <verb_status+0x1ec>
  401a28:	adrp	x19, 403000 <verb_status+0x1ec>
  401a2c:	adrp	x23, 415000 <saved_argv@@SD_SHARED>
  401a30:	add	x22, x22, #0xc48
  401a34:	add	x19, x19, #0x67c
  401a38:	add	x23, x23, #0x28
  401a3c:	adrp	x24, 415000 <saved_argv@@SD_SHARED>
  401a40:	mov	x3, x22
  401a44:	mov	x2, x19
  401a48:	mov	x1, x21
  401a4c:	mov	w0, w20
  401a50:	mov	x4, #0x0                   	// #0
  401a54:	bl	401750 <getopt_long@plt>
  401a58:	tbnz	w0, #31, 401ad4 <main+0x114>
  401a5c:	cmp	w0, #0x100
  401a60:	b.eq	401b5c <main+0x19c>  // b.none
  401a64:	b.gt	401abc <main+0xfc>
  401a68:	cmp	w0, #0x3f
  401a6c:	b.eq	401bf4 <main+0x234>  // b.none
  401a70:	cmp	w0, #0x68
  401a74:	b.eq	401b14 <main+0x154>  // b.none
  401a78:	adrp	x4, 403000 <verb_status+0x1ec>
  401a7c:	adrp	x2, 403000 <verb_status+0x1ec>
  401a80:	adrp	x1, 403000 <verb_status+0x1ec>
  401a84:	add	x4, x4, #0xba8
  401a88:	add	x2, x2, #0x2d7
  401a8c:	add	x1, x1, #0xb02
  401a90:	mov	w3, #0x5c                  	// #92
  401a94:	mov	w0, #0x0                   	// #0
  401a98:	bl	401770 <log_assert_failed_unreachable_realm@plt>
  401a9c:	adrp	x4, 403000 <verb_status+0x1ec>
  401aa0:	adrp	x2, 403000 <verb_status+0x1ec>
  401aa4:	adrp	x1, 403000 <verb_status+0x1ec>
  401aa8:	add	x4, x4, #0xba8
  401aac:	add	x2, x2, #0x2d7
  401ab0:	add	x1, x1, #0xafd
  401ab4:	mov	w3, #0x46                  	// #70
  401ab8:	b	401a18 <main+0x58>
  401abc:	cmp	w0, #0x101
  401ac0:	b.ne	401a78 <main+0xb8>  // b.any
  401ac4:	bl	401880 <version@plt>
  401ac8:	mov	w19, w0
  401acc:	cmp	w0, #0x0
  401ad0:	b.le	401b28 <main+0x168>
  401ad4:	bl	4018c0 <detect_container@plt>
  401ad8:	cmp	w0, #0x0
  401adc:	b.gt	401b8c <main+0x1cc>
  401ae0:	bl	4017a0 <is_efi_boot@plt>
  401ae4:	tst	w0, #0xff
  401ae8:	b.ne	401bd8 <main+0x218>  // b.any
  401aec:	mov	w0, #0x0                   	// #0
  401af0:	bl	4019b0 <log_get_max_level_realm@plt>
  401af4:	cmp	w0, #0x2
  401af8:	b.le	401b9c <main+0x1dc>
  401afc:	adrp	x5, 403000 <verb_status+0x1ec>
  401b00:	adrp	x4, 403000 <verb_status+0x1ec>
  401b04:	add	x5, x5, #0xb40
  401b08:	add	x4, x4, #0xc40
  401b0c:	mov	w3, #0x207                 	// #519
  401b10:	b	401bb8 <main+0x1f8>
  401b14:	mov	w19, #0x0                   	// #0
  401b18:	mov	x2, #0x0                   	// #0
  401b1c:	mov	x1, #0x0                   	// #0
  401b20:	mov	w0, #0x0                   	// #0
  401b24:	bl	401d60 <help>
  401b28:	bl	401870 <ask_password_agent_close@plt>
  401b2c:	bl	4016a0 <polkit_agent_close@plt>
  401b30:	bl	401890 <pager_close@plt>
  401b34:	bl	401940 <mac_selinux_finish@plt>
  401b38:	adrp	x0, 403000 <verb_status+0x1ec>
  401b3c:	ldr	x0, [x0, #2952]
  401b40:	cbnz	x0, 401bfc <main+0x23c>
  401b44:	lsr	w0, w19, #31
  401b48:	ldp	x19, x20, [sp, #16]
  401b4c:	ldp	x21, x22, [sp, #32]
  401b50:	ldp	x23, x24, [sp, #48]
  401b54:	ldp	x29, x30, [sp], #64
  401b58:	ret
  401b5c:	ldr	x1, [x24, #24]
  401b60:	mov	x0, x23
  401b64:	bl	401830 <strv_extend@plt>
  401b68:	tbz	w0, #31, 401a40 <main+0x80>
  401b6c:	adrp	x3, 403000 <verb_status+0x1ec>
  401b70:	mov	w2, #0x55                  	// #85
  401b74:	add	x3, x3, #0xbed
  401b78:	adrp	x1, 403000 <verb_status+0x1ec>
  401b7c:	mov	w0, #0x0                   	// #0
  401b80:	add	x1, x1, #0x2d7
  401b84:	bl	4019a0 <log_oom_internal@plt>
  401b88:	b	401ac8 <main+0x108>
  401b8c:	mov	w0, #0x0                   	// #0
  401b90:	bl	4019b0 <log_get_max_level_realm@plt>
  401b94:	cmp	w0, #0x2
  401b98:	b.gt	401ba4 <main+0x1e4>
  401b9c:	mov	w19, #0xffffffa1            	// #-95
  401ba0:	b	401b28 <main+0x168>
  401ba4:	adrp	x5, 403000 <verb_status+0x1ec>
  401ba8:	adrp	x4, 403000 <verb_status+0x1ec>
  401bac:	add	x5, x5, #0xb11
  401bb0:	add	x4, x4, #0xc40
  401bb4:	mov	w3, #0x203                 	// #515
  401bb8:	mov	w1, #0x5f                  	// #95
  401bbc:	adrp	x2, 403000 <verb_status+0x1ec>
  401bc0:	movk	w1, #0x4000, lsl #16
  401bc4:	add	x2, x2, #0x2d7
  401bc8:	mov	w0, #0x3                   	// #3
  401bcc:	bl	4018a0 <log_internal_realm@plt>
  401bd0:	mov	w19, w0
  401bd4:	b	401b28 <main+0x168>
  401bd8:	mov	x1, x21
  401bdc:	mov	w0, w20
  401be0:	mov	x3, #0x0                   	// #0
  401be4:	adrp	x2, 403000 <verb_status+0x1ec>
  401be8:	add	x2, x2, #0xcc8
  401bec:	bl	4016d0 <dispatch_verb@plt>
  401bf0:	b	401bd0 <main+0x210>
  401bf4:	mov	w19, #0xffffffea            	// #-22
  401bf8:	b	401b28 <main+0x168>
  401bfc:	add	x0, x0, #0x7
  401c00:	adrp	x21, 403000 <verb_status+0x1ec>
  401c04:	and	x0, x0, #0xfffffffffffffff8
  401c08:	ldr	x1, [x21, #2960]
  401c0c:	cmp	x0, x1
  401c10:	b.cs	401b44 <main+0x184>  // b.hs, b.nlast
  401c14:	mov	x20, x0
  401c18:	ldr	x1, [x0, #8]
  401c1c:	ldr	x0, [x20], #23
  401c20:	blr	x1
  401c24:	and	x0, x20, #0xfffffffffffffff8
  401c28:	b	401c08 <main+0x248>

0000000000401c2c <_start>:
  401c2c:	mov	x29, #0x0                   	// #0
  401c30:	mov	x30, #0x0                   	// #0
  401c34:	mov	x5, x0
  401c38:	ldr	x1, [sp]
  401c3c:	add	x2, sp, #0x8
  401c40:	mov	x6, sp
  401c44:	movz	x0, #0x0, lsl #48
  401c48:	movk	x0, #0x0, lsl #32
  401c4c:	movk	x0, #0x40, lsl #16
  401c50:	movk	x0, #0x19c0
  401c54:	movz	x3, #0x0, lsl #48
  401c58:	movk	x3, #0x0, lsl #32
  401c5c:	movk	x3, #0x40, lsl #16
  401c60:	movk	x3, #0x3200
  401c64:	movz	x4, #0x0, lsl #48
  401c68:	movk	x4, #0x0, lsl #32
  401c6c:	movk	x4, #0x40, lsl #16
  401c70:	movk	x4, #0x3280
  401c74:	bl	401660 <__libc_start_main@plt>
  401c78:	bl	4017c0 <abort@plt>

0000000000401c7c <call_weak_fn>:
  401c7c:	adrp	x0, 414000 <__FRAME_END__+0xfee0>
  401c80:	ldr	x0, [x0, #4088]
  401c84:	cbz	x0, 401c8c <call_weak_fn+0x10>
  401c88:	b	401690 <__gmon_start__@plt>
  401c8c:	ret

0000000000401c90 <deregister_tm_clones>:
  401c90:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401c94:	add	x1, x0, #0x0
  401c98:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401c9c:	add	x0, x0, #0x0
  401ca0:	cmp	x1, x0
  401ca4:	b.eq	401cd0 <deregister_tm_clones+0x40>  // b.none
  401ca8:	sub	sp, sp, #0x10
  401cac:	adrp	x1, 403000 <verb_status+0x1ec>
  401cb0:	ldr	x1, [x1, #664]
  401cb4:	str	x1, [sp, #8]
  401cb8:	cbz	x1, 401cc8 <deregister_tm_clones+0x38>
  401cbc:	mov	x16, x1
  401cc0:	add	sp, sp, #0x10
  401cc4:	br	x16
  401cc8:	add	sp, sp, #0x10
  401ccc:	ret
  401cd0:	ret

0000000000401cd4 <register_tm_clones>:
  401cd4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401cd8:	add	x1, x0, #0x0
  401cdc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401ce0:	add	x0, x0, #0x0
  401ce4:	sub	x1, x1, x0
  401ce8:	mov	x2, #0x2                   	// #2
  401cec:	asr	x1, x1, #3
  401cf0:	sdiv	x1, x1, x2
  401cf4:	cbz	x1, 401d20 <register_tm_clones+0x4c>
  401cf8:	sub	sp, sp, #0x10
  401cfc:	adrp	x2, 403000 <verb_status+0x1ec>
  401d00:	ldr	x2, [x2, #672]
  401d04:	str	x2, [sp, #8]
  401d08:	cbz	x2, 401d18 <register_tm_clones+0x44>
  401d0c:	mov	x16, x2
  401d10:	add	sp, sp, #0x10
  401d14:	br	x16
  401d18:	add	sp, sp, #0x10
  401d1c:	ret
  401d20:	ret

0000000000401d24 <__do_global_dtors_aux>:
  401d24:	stp	x29, x30, [sp, #-32]!
  401d28:	mov	x29, sp
  401d2c:	str	x19, [sp, #16]
  401d30:	adrp	x19, 415000 <saved_argv@@SD_SHARED>
  401d34:	ldrb	w0, [x19, #32]
  401d38:	cbnz	w0, 401d48 <__do_global_dtors_aux+0x24>
  401d3c:	bl	401c90 <deregister_tm_clones>
  401d40:	mov	w0, #0x1                   	// #1
  401d44:	strb	w0, [x19, #32]
  401d48:	ldr	x19, [sp, #16]
  401d4c:	ldp	x29, x30, [sp], #32
  401d50:	ret

0000000000401d54 <frame_dummy>:
  401d54:	b	401cd4 <register_tm_clones>

0000000000401d58 <freep>:
  401d58:	ldr	x0, [x0]
  401d5c:	b	401910 <free@plt>

0000000000401d60 <help>:
  401d60:	stp	x29, x30, [sp, #-64]!
  401d64:	adrp	x1, 403000 <verb_status+0x1ec>
  401d68:	add	x1, x1, #0x2b7
  401d6c:	mov	x29, sp
  401d70:	stp	x19, x20, [sp, #16]
  401d74:	adrp	x20, 414000 <__FRAME_END__+0xfee0>
  401d78:	add	x20, x20, #0xbf0
  401d7c:	ldr	x0, [x20]
  401d80:	str	x0, [sp, #56]
  401d84:	mov	x0, #0x0                   	// #0
  401d88:	add	x2, sp, #0x30
  401d8c:	adrp	x0, 403000 <verb_status+0x1ec>
  401d90:	add	x0, x0, #0x2b9
  401d94:	stp	x21, x22, [sp, #32]
  401d98:	str	xzr, [sp, #48]
  401d9c:	bl	401850 <terminal_urlify_man@plt>
  401da0:	tbz	w0, #31, 401de0 <help+0x80>
  401da4:	adrp	x3, 403000 <verb_status+0x1ec>
  401da8:	mov	w2, #0x20                  	// #32
  401dac:	add	x3, x3, #0xbe8
  401db0:	adrp	x1, 403000 <verb_status+0x1ec>
  401db4:	mov	w0, #0x0                   	// #0
  401db8:	add	x1, x1, #0x2d7
  401dbc:	bl	4019a0 <log_oom_internal@plt>
  401dc0:	mov	w19, w0
  401dc4:	add	x0, sp, #0x30
  401dc8:	bl	401d58 <freep>
  401dcc:	ldr	x1, [sp, #56]
  401dd0:	ldr	x0, [x20]
  401dd4:	eor	x0, x1, x0
  401dd8:	cbz	x0, 401e38 <help+0xd8>
  401ddc:	bl	401860 <__stack_chk_fail@plt>
  401de0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401de4:	adrp	x21, 403000 <verb_status+0x1ec>
  401de8:	adrp	x19, 403000 <verb_status+0x1ec>
  401dec:	add	x21, x21, #0x47f
  401df0:	ldr	x22, [x0, #8]
  401df4:	bl	401900 <colors_enabled@plt>
  401df8:	tst	w0, #0xff
  401dfc:	add	x19, x19, #0x2a8
  401e00:	csel	x19, x19, x21, ne  // ne = any
  401e04:	bl	401900 <colors_enabled@plt>
  401e08:	tst	w0, #0xff
  401e0c:	ldr	x4, [sp, #48]
  401e10:	adrp	x3, 403000 <verb_status+0x1ec>
  401e14:	add	x3, x3, #0x2b2
  401e18:	mov	x2, x19
  401e1c:	csel	x3, x3, x21, ne  // ne = any
  401e20:	mov	x1, x22
  401e24:	adrp	x0, 403000 <verb_status+0x1ec>
  401e28:	mov	w19, #0x0                   	// #0
  401e2c:	add	x0, x0, #0x2ed
  401e30:	bl	401960 <printf@plt>
  401e34:	b	401dc4 <help+0x64>
  401e38:	mov	w0, w19
  401e3c:	ldp	x19, x20, [sp, #16]
  401e40:	ldp	x21, x22, [sp, #32]
  401e44:	ldp	x29, x30, [sp], #64
  401e48:	ret

0000000000401e4c <parse_counter>:
  401e4c:	stp	x29, x30, [sp, #-128]!
  401e50:	mov	x29, sp
  401e54:	stp	x19, x20, [sp, #16]
  401e58:	adrp	x20, 414000 <__FRAME_END__+0xfee0>
  401e5c:	add	x20, x20, #0xbf0
  401e60:	stp	x21, x22, [sp, #32]
  401e64:	mov	x22, x0
  401e68:	ldr	x0, [x20]
  401e6c:	str	x0, [x29, #120]
  401e70:	mov	x0, #0x0                   	// #0
  401e74:	stp	x23, x24, [sp, #48]
  401e78:	stp	x25, x26, [sp, #64]
  401e7c:	str	x27, [sp, #80]
  401e80:	cbnz	x22, 401ea4 <parse_counter+0x58>
  401e84:	adrp	x4, 403000 <verb_status+0x1ec>
  401e88:	adrp	x2, 403000 <verb_status+0x1ec>
  401e8c:	adrp	x1, 403000 <verb_status+0x1ec>
  401e90:	add	x4, x4, #0xbb3
  401e94:	add	x2, x2, #0x2d7
  401e98:	add	x1, x1, #0x480
  401e9c:	mov	w3, #0x95                  	// #149
  401ea0:	bl	401730 <log_assert_failed_realm@plt>
  401ea4:	ldr	x21, [x1]
  401ea8:	mov	x23, x1
  401eac:	cbnz	x21, 401ed4 <parse_counter+0x88>
  401eb0:	adrp	x4, 403000 <verb_status+0x1ec>
  401eb4:	adrp	x2, 403000 <verb_status+0x1ec>
  401eb8:	adrp	x1, 403000 <verb_status+0x1ec>
  401ebc:	add	x4, x4, #0xbb3
  401ec0:	add	x2, x2, #0x2d7
  401ec4:	add	x1, x1, #0x2d2
  401ec8:	mov	w3, #0x99                  	// #153
  401ecc:	mov	w0, #0x0                   	// #0
  401ed0:	b	401ea0 <parse_counter+0x54>
  401ed4:	ldrb	w0, [x21]
  401ed8:	cmp	w0, #0x2b
  401edc:	b.eq	401f00 <parse_counter+0xb4>  // b.none
  401ee0:	adrp	x4, 403000 <verb_status+0x1ec>
  401ee4:	adrp	x2, 403000 <verb_status+0x1ec>
  401ee8:	adrp	x1, 403000 <verb_status+0x1ec>
  401eec:	add	x4, x4, #0xbb3
  401ef0:	add	x2, x2, #0x2d7
  401ef4:	add	x1, x1, #0x485
  401ef8:	mov	w3, #0x9a                  	// #154
  401efc:	b	401ecc <parse_counter+0x80>
  401f00:	add	x21, x21, #0x1
  401f04:	adrp	x27, 403000 <verb_status+0x1ec>
  401f08:	add	x27, x27, #0x48f
  401f0c:	mov	x25, x2
  401f10:	mov	x24, x3
  401f14:	mov	x1, x27
  401f18:	mov	x0, x21
  401f1c:	bl	4017e0 <strspn@plt>
  401f20:	mov	x26, x0
  401f24:	cbnz	x0, 401f84 <parse_counter+0x138>
  401f28:	mov	w0, #0x0                   	// #0
  401f2c:	bl	4019b0 <log_get_max_level_realm@plt>
  401f30:	cmp	w0, #0x2
  401f34:	b.gt	401f50 <parse_counter+0x104>
  401f38:	mov	w0, #0xffffffea            	// #-22
  401f3c:	ldr	x2, [x29, #120]
  401f40:	ldr	x1, [x20]
  401f44:	eor	x1, x2, x1
  401f48:	cbz	x1, 40212c <parse_counter+0x2e0>
  401f4c:	bl	401860 <__stack_chk_fail@plt>
  401f50:	adrp	x5, 403000 <verb_status+0x1ec>
  401f54:	adrp	x4, 403000 <verb_status+0x1ec>
  401f58:	mov	x6, x22
  401f5c:	add	x5, x5, #0x49a
  401f60:	add	x4, x4, #0xc05
  401f64:	mov	w3, #0xa0                  	// #160
  401f68:	adrp	x2, 403000 <verb_status+0x1ec>
  401f6c:	mov	w1, #0x16                  	// #22
  401f70:	add	x2, x2, #0x2d7
  401f74:	movk	w1, #0x4000, lsl #16
  401f78:	mov	w0, #0x3                   	// #3
  401f7c:	bl	4018a0 <log_internal_realm@plt>
  401f80:	b	401f3c <parse_counter+0xf0>
  401f84:	mov	x1, x0
  401f88:	mov	x0, x21
  401f8c:	bl	4016c0 <strnlen@plt>
  401f90:	mov	x2, x0
  401f94:	add	x0, x0, #0x10
  401f98:	mov	x1, x21
  401f9c:	and	x0, x0, #0xfffffffffffffff0
  401fa0:	sub	sp, sp, x0
  401fa4:	mov	x0, sp
  401fa8:	strb	wzr, [x0, x2]
  401fac:	bl	4016e0 <memcpy@plt>
  401fb0:	add	x1, x29, #0x68
  401fb4:	bl	401670 <safe_atollu@plt>
  401fb8:	mov	w19, w0
  401fbc:	tbz	w0, #31, 401ff8 <parse_counter+0x1ac>
  401fc0:	mov	w0, #0x0                   	// #0
  401fc4:	bl	4019b0 <log_get_max_level_realm@plt>
  401fc8:	cmp	w0, #0x2
  401fcc:	b.le	4020b4 <parse_counter+0x268>
  401fd0:	adrp	x5, 403000 <verb_status+0x1ec>
  401fd4:	adrp	x4, 403000 <verb_status+0x1ec>
  401fd8:	mov	x6, x22
  401fdc:	add	x5, x5, #0x4de
  401fe0:	add	x4, x4, #0xc05
  401fe4:	mov	w3, #0xa7                  	// #167
  401fe8:	adrp	x2, 403000 <verb_status+0x1ec>
  401fec:	mov	w1, w19
  401ff0:	add	x2, x2, #0x2d7
  401ff4:	b	401f78 <parse_counter+0x12c>
  401ff8:	ldrb	w0, [x21, x26]
  401ffc:	add	x19, x21, x26
  402000:	cmp	w0, #0x2d
  402004:	b.ne	402124 <parse_counter+0x2d8>  // b.any
  402008:	add	x21, x19, #0x1
  40200c:	mov	x1, x27
  402010:	mov	x0, x21
  402014:	bl	4017e0 <strspn@plt>
  402018:	mov	x26, x0
  40201c:	cbnz	x0, 40204c <parse_counter+0x200>
  402020:	mov	w0, #0x0                   	// #0
  402024:	bl	4019b0 <log_get_max_level_realm@plt>
  402028:	cmp	w0, #0x2
  40202c:	b.le	401f38 <parse_counter+0xec>
  402030:	adrp	x5, 403000 <verb_status+0x1ec>
  402034:	adrp	x4, 403000 <verb_status+0x1ec>
  402038:	mov	x6, x22
  40203c:	add	x5, x5, #0x520
  402040:	add	x4, x4, #0xc05
  402044:	mov	w3, #0xb0                  	// #176
  402048:	b	401f68 <parse_counter+0x11c>
  40204c:	mov	x1, x0
  402050:	mov	x0, x21
  402054:	bl	4016c0 <strnlen@plt>
  402058:	mov	x2, x0
  40205c:	add	x0, x0, #0x10
  402060:	mov	x1, x21
  402064:	and	x0, x0, #0xfffffffffffffff0
  402068:	sub	sp, sp, x0
  40206c:	mov	x0, sp
  402070:	strb	wzr, [x0, x2]
  402074:	bl	4016e0 <memcpy@plt>
  402078:	add	x1, x29, #0x70
  40207c:	bl	401670 <safe_atollu@plt>
  402080:	mov	w19, w0
  402084:	tbz	w0, #31, 4020c4 <parse_counter+0x278>
  402088:	mov	w0, #0x0                   	// #0
  40208c:	bl	4019b0 <log_get_max_level_realm@plt>
  402090:	cmp	w0, #0x2
  402094:	b.le	4020b4 <parse_counter+0x268>
  402098:	adrp	x5, 403000 <verb_status+0x1ec>
  40209c:	adrp	x4, 403000 <verb_status+0x1ec>
  4020a0:	mov	x6, x22
  4020a4:	add	x5, x5, #0x564
  4020a8:	add	x4, x4, #0xc05
  4020ac:	mov	w3, #0xb7                  	// #183
  4020b0:	b	401fe8 <parse_counter+0x19c>
  4020b4:	neg	w0, w19
  4020b8:	and	w0, w0, #0xff
  4020bc:	neg	w0, w0
  4020c0:	b	401f3c <parse_counter+0xf0>
  4020c4:	ldr	x0, [x29, #112]
  4020c8:	add	x19, x21, x26
  4020cc:	cbnz	x0, 402108 <parse_counter+0x2bc>
  4020d0:	mov	w0, #0x0                   	// #0
  4020d4:	bl	4019b0 <log_get_max_level_realm@plt>
  4020d8:	cmp	w0, #0x3
  4020dc:	b.le	402108 <parse_counter+0x2bc>
  4020e0:	adrp	x5, 403000 <verb_status+0x1ec>
  4020e4:	adrp	x4, 403000 <verb_status+0x1ec>
  4020e8:	adrp	x2, 403000 <verb_status+0x1ec>
  4020ec:	add	x5, x5, #0x5a6
  4020f0:	add	x4, x4, #0xc05
  4020f4:	add	x2, x2, #0x2d7
  4020f8:	mov	w3, #0xbe                  	// #190
  4020fc:	mov	w1, #0x0                   	// #0
  402100:	mov	w0, #0x4                   	// #4
  402104:	bl	4018a0 <log_internal_realm@plt>
  402108:	str	x19, [x23]
  40210c:	ldr	x0, [x29, #104]
  402110:	str	x0, [x25]
  402114:	ldr	x0, [x29, #112]
  402118:	str	x0, [x24]
  40211c:	mov	w0, #0x0                   	// #0
  402120:	b	401f3c <parse_counter+0xf0>
  402124:	str	xzr, [x29, #112]
  402128:	b	4020d0 <parse_counter+0x284>
  40212c:	mov	sp, x29
  402130:	ldp	x19, x20, [sp, #16]
  402134:	ldp	x21, x22, [sp, #32]
  402138:	ldp	x23, x24, [sp, #48]
  40213c:	ldp	x25, x26, [sp, #64]
  402140:	ldr	x27, [sp, #80]
  402144:	ldp	x29, x30, [sp], #128
  402148:	ret

000000000040214c <make_bad>:
  40214c:	stp	x29, x30, [sp, #-48]!
  402150:	mov	x29, sp
  402154:	stp	x19, x20, [sp, #16]
  402158:	adrp	x19, 414000 <__FRAME_END__+0xfee0>
  40215c:	add	x19, x19, #0xbf0
  402160:	mov	x20, x3
  402164:	ldr	x3, [x19]
  402168:	str	x3, [sp, #40]
  40216c:	mov	x3, #0x0                   	// #0
  402170:	str	xzr, [sp, #32]
  402174:	cbnz	x0, 40219c <make_bad+0x50>
  402178:	adrp	x4, 403000 <verb_status+0x1ec>
  40217c:	adrp	x2, 403000 <verb_status+0x1ec>
  402180:	adrp	x1, 403000 <verb_status+0x1ec>
  402184:	add	x4, x4, #0xbcb
  402188:	add	x2, x2, #0x2d7
  40218c:	add	x1, x1, #0x63f
  402190:	mov	w3, #0x124                 	// #292
  402194:	mov	w0, #0x0                   	// #0
  402198:	bl	401730 <log_assert_failed_realm@plt>
  40219c:	mov	x4, x2
  4021a0:	cbnz	x2, 4021c4 <make_bad+0x78>
  4021a4:	adrp	x4, 403000 <verb_status+0x1ec>
  4021a8:	adrp	x2, 403000 <verb_status+0x1ec>
  4021ac:	adrp	x1, 403000 <verb_status+0x1ec>
  4021b0:	add	x4, x4, #0xbcb
  4021b4:	add	x2, x2, #0x2d7
  4021b8:	add	x1, x1, #0x646
  4021bc:	mov	w3, #0x125                 	// #293
  4021c0:	b	402194 <make_bad+0x48>
  4021c4:	cbnz	x1, 40220c <make_bad+0xc0>
  4021c8:	mov	x3, #0x0                   	// #0
  4021cc:	adrp	x1, 403000 <verb_status+0x1ec>
  4021d0:	add	x1, x1, #0x64d
  4021d4:	bl	401700 <strjoin_real@plt>
  4021d8:	str	x0, [sp, #32]
  4021dc:	cbz	x0, 402228 <make_bad+0xdc>
  4021e0:	ldr	x0, [sp, #32]
  4021e4:	str	x0, [x20]
  4021e8:	mov	w20, #0x0                   	// #0
  4021ec:	str	xzr, [sp, #32]
  4021f0:	add	x0, sp, #0x20
  4021f4:	bl	401d58 <freep>
  4021f8:	ldr	x1, [sp, #40]
  4021fc:	ldr	x0, [x19]
  402200:	eor	x0, x1, x0
  402204:	cbz	x0, 402230 <make_bad+0xe4>
  402208:	bl	401860 <__stack_chk_fail@plt>
  40220c:	mov	x3, x1
  402210:	mov	x2, x0
  402214:	adrp	x1, 403000 <verb_status+0x1ec>
  402218:	add	x0, sp, #0x20
  40221c:	add	x1, x1, #0x650
  402220:	bl	4018f0 <asprintf@plt>
  402224:	tbz	w0, #31, 4021e0 <make_bad+0x94>
  402228:	mov	w20, #0xfffffff4            	// #-12
  40222c:	b	4021f0 <make_bad+0xa4>
  402230:	mov	w0, w20
  402234:	ldp	x19, x20, [sp, #16]
  402238:	ldp	x29, x30, [sp], #48
  40223c:	ret

0000000000402240 <__unique_prefix_static_destructor_wrapper0>:
  402240:	ldr	x0, [x0]
  402244:	cbz	x0, 40224c <__unique_prefix_static_destructor_wrapper0+0xc>
  402248:	b	401810 <strv_free@plt>
  40224c:	ret

0000000000402250 <skip_slash>:
  402250:	stp	x29, x30, [sp, #-16]!
  402254:	mov	x29, sp
  402258:	cbnz	x0, 40227c <skip_slash+0x2c>
  40225c:	adrp	x4, 403000 <verb_status+0x1ec>
  402260:	adrp	x2, 403000 <verb_status+0x1ec>
  402264:	adrp	x1, 403000 <verb_status+0x1ec>
  402268:	add	x4, x4, #0xbd4
  40226c:	add	x2, x2, #0x2d7
  402270:	add	x1, x1, #0x480
  402274:	mov	w3, #0x139                 	// #313
  402278:	bl	401730 <log_assert_failed_realm@plt>
  40227c:	ldrb	w1, [x0]
  402280:	cmp	w1, #0x2f
  402284:	b.eq	4022ac <skip_slash+0x5c>  // b.none
  402288:	adrp	x4, 403000 <verb_status+0x1ec>
  40228c:	adrp	x2, 403000 <verb_status+0x1ec>
  402290:	adrp	x1, 403000 <verb_status+0x1ec>
  402294:	add	x4, x4, #0xbd4
  402298:	add	x2, x2, #0x2d7
  40229c:	add	x1, x1, #0x65b
  4022a0:	mov	w3, #0x13a                 	// #314
  4022a4:	mov	w0, #0x0                   	// #0
  4022a8:	b	402278 <skip_slash+0x28>
  4022ac:	add	x0, x0, #0x1
  4022b0:	ldp	x29, x30, [sp], #16
  4022b4:	ret

00000000004022b8 <make_good>:
  4022b8:	stp	x29, x30, [sp, #-48]!
  4022bc:	mov	x29, sp
  4022c0:	stp	x19, x20, [sp, #16]
  4022c4:	adrp	x19, 414000 <__FRAME_END__+0xfee0>
  4022c8:	add	x19, x19, #0xbf0
  4022cc:	mov	x20, x2
  4022d0:	ldr	x2, [x19]
  4022d4:	str	x2, [sp, #40]
  4022d8:	mov	x2, #0x0                   	// #0
  4022dc:	str	xzr, [sp, #32]
  4022e0:	cbnz	x0, 402304 <make_good+0x4c>
  4022e4:	adrp	x4, 403000 <verb_status+0x1ec>
  4022e8:	adrp	x2, 403000 <verb_status+0x1ec>
  4022ec:	adrp	x1, 403000 <verb_status+0x1ec>
  4022f0:	add	x4, x4, #0xbc1
  4022f4:	add	x2, x2, #0x2d7
  4022f8:	add	x1, x1, #0x63f
  4022fc:	mov	w3, #0x111                 	// #273
  402300:	bl	401730 <log_assert_failed_realm@plt>
  402304:	cbnz	x1, 40232c <make_good+0x74>
  402308:	adrp	x4, 403000 <verb_status+0x1ec>
  40230c:	adrp	x2, 403000 <verb_status+0x1ec>
  402310:	adrp	x1, 403000 <verb_status+0x1ec>
  402314:	add	x4, x4, #0xbc1
  402318:	add	x2, x2, #0x2d7
  40231c:	add	x1, x1, #0x646
  402320:	mov	w3, #0x112                 	// #274
  402324:	mov	w0, #0x0                   	// #0
  402328:	b	402300 <make_good+0x48>
  40232c:	mov	x2, #0x0                   	// #0
  402330:	bl	401700 <strjoin_real@plt>
  402334:	str	xzr, [sp, #32]
  402338:	cbnz	x0, 40235c <make_good+0xa4>
  40233c:	mov	w20, #0xfffffff4            	// #-12
  402340:	add	x0, sp, #0x20
  402344:	bl	401d58 <freep>
  402348:	ldr	x1, [sp, #40]
  40234c:	ldr	x0, [x19]
  402350:	eor	x0, x1, x0
  402354:	cbz	x0, 402368 <make_good+0xb0>
  402358:	bl	401860 <__stack_chk_fail@plt>
  40235c:	str	x0, [x20]
  402360:	mov	w20, #0x0                   	// #0
  402364:	b	402340 <make_good+0x88>
  402368:	mov	w0, w20
  40236c:	ldp	x19, x20, [sp, #16]
  402370:	ldp	x29, x30, [sp], #48
  402374:	ret

0000000000402378 <acquire_boot_count_path.constprop.0>:
  402378:	stp	x29, x30, [sp, #-144]!
  40237c:	mov	x29, sp
  402380:	stp	x19, x20, [sp, #16]
  402384:	adrp	x20, 414000 <__FRAME_END__+0xfee0>
  402388:	add	x20, x20, #0xbf0
  40238c:	stp	x23, x24, [sp, #48]
  402390:	mov	x24, x0
  402394:	ldr	x0, [x20]
  402398:	str	x0, [sp, #136]
  40239c:	mov	x0, #0x0                   	// #0
  4023a0:	adrp	x0, 403000 <verb_status+0x1ec>
  4023a4:	add	x0, x0, #0xb98
  4023a8:	mov	x23, x1
  4023ac:	stp	x21, x22, [sp, #32]
  4023b0:	mov	x21, x2
  4023b4:	ldp	x0, x1, [x0]
  4023b8:	mov	x22, x3
  4023bc:	adrp	x2, 403000 <verb_status+0x1ec>
  4023c0:	add	x3, sp, #0x58
  4023c4:	add	x2, x2, #0x66a
  4023c8:	str	x25, [sp, #64]
  4023cc:	mov	x25, x4
  4023d0:	stp	xzr, xzr, [sp, #88]
  4023d4:	str	xzr, [sp, #104]
  4023d8:	bl	401680 <efi_get_variable_string@plt>
  4023dc:	cmn	w0, #0x2
  4023e0:	b.eq	4025f0 <acquire_boot_count_path.constprop.0+0x278>  // b.none
  4023e4:	mov	w19, w0
  4023e8:	tbz	w0, #31, 402464 <acquire_boot_count_path.constprop.0+0xec>
  4023ec:	mov	w0, #0x0                   	// #0
  4023f0:	bl	4019b0 <log_get_max_level_realm@plt>
  4023f4:	cmp	w0, #0x2
  4023f8:	b.le	40242c <acquire_boot_count_path.constprop.0+0xb4>
  4023fc:	adrp	x5, 403000 <verb_status+0x1ec>
  402400:	adrp	x4, 403000 <verb_status+0x1ec>
  402404:	adrp	x2, 403000 <verb_status+0x1ec>
  402408:	add	x5, x5, #0x67e
  40240c:	add	x4, x4, #0xc13
  402410:	add	x2, x2, #0x2d7
  402414:	mov	w1, w19
  402418:	mov	w3, #0xdb                  	// #219
  40241c:	mov	w0, #0x3                   	// #3
  402420:	bl	4018a0 <log_internal_realm@plt>
  402424:	mov	w19, w0
  402428:	b	402438 <acquire_boot_count_path.constprop.0+0xc0>
  40242c:	neg	w19, w19
  402430:	and	w0, w19, #0xff
  402434:	neg	w19, w0
  402438:	add	x0, sp, #0x68
  40243c:	bl	401d58 <freep>
  402440:	add	x0, sp, #0x60
  402444:	bl	401d58 <freep>
  402448:	add	x0, sp, #0x58
  40244c:	bl	401d58 <freep>
  402450:	ldr	x1, [sp, #136]
  402454:	ldr	x0, [x20]
  402458:	eor	x0, x1, x0
  40245c:	cbz	x0, 4025f8 <acquire_boot_count_path.constprop.0+0x280>
  402460:	bl	401860 <__stack_chk_fail@plt>
  402464:	ldr	x0, [sp, #88]
  402468:	bl	4017f0 <efi_tilt_backslashes@plt>
  40246c:	ldr	x19, [sp, #88]
  402470:	mov	x0, x19
  402474:	bl	4017b0 <path_is_normalized@plt>
  402478:	tst	w0, #0xff
  40247c:	b.ne	4024cc <acquire_boot_count_path.constprop.0+0x154>  // b.any
  402480:	mov	w0, #0x0                   	// #0
  402484:	bl	4019b0 <log_get_max_level_realm@plt>
  402488:	cmp	w0, #0x2
  40248c:	b.gt	402498 <acquire_boot_count_path.constprop.0+0x120>
  402490:	mov	w19, #0xffffffea            	// #-22
  402494:	b	402438 <acquire_boot_count_path.constprop.0+0xc0>
  402498:	adrp	x5, 403000 <verb_status+0x1ec>
  40249c:	adrp	x4, 403000 <verb_status+0x1ec>
  4024a0:	mov	x6, x19
  4024a4:	add	x5, x5, #0x6b2
  4024a8:	add	x4, x4, #0xc13
  4024ac:	mov	w3, #0xe0                  	// #224
  4024b0:	mov	w1, #0x16                  	// #22
  4024b4:	adrp	x2, 403000 <verb_status+0x1ec>
  4024b8:	movk	w1, #0x4000, lsl #16
  4024bc:	add	x2, x2, #0x2d7
  4024c0:	mov	w0, #0x3                   	// #3
  4024c4:	bl	4018a0 <log_internal_realm@plt>
  4024c8:	b	402424 <acquire_boot_count_path.constprop.0+0xac>
  4024cc:	mov	x0, x19
  4024d0:	bl	401780 <path_is_absolute@plt>
  4024d4:	tst	w0, #0xff
  4024d8:	b.ne	402508 <acquire_boot_count_path.constprop.0+0x190>  // b.any
  4024dc:	mov	w0, #0x0                   	// #0
  4024e0:	bl	4019b0 <log_get_max_level_realm@plt>
  4024e4:	cmp	w0, #0x2
  4024e8:	b.le	402490 <acquire_boot_count_path.constprop.0+0x118>
  4024ec:	adrp	x5, 403000 <verb_status+0x1ec>
  4024f0:	adrp	x4, 403000 <verb_status+0x1ec>
  4024f4:	mov	x6, x19
  4024f8:	add	x5, x5, #0x6f5
  4024fc:	add	x4, x4, #0xc13
  402500:	mov	w3, #0xe5                  	// #229
  402504:	b	4024b0 <acquire_boot_count_path.constprop.0+0x138>
  402508:	mov	x0, x19
  40250c:	bl	4016f0 <last_path_component@plt>
  402510:	mov	w1, #0x2b                  	// #43
  402514:	bl	401720 <strrchr@plt>
  402518:	str	x0, [sp, #112]
  40251c:	cbnz	x0, 402548 <acquire_boot_count_path.constprop.0+0x1d0>
  402520:	bl	4019b0 <log_get_max_level_realm@plt>
  402524:	cmp	w0, #0x2
  402528:	b.le	402490 <acquire_boot_count_path.constprop.0+0x118>
  40252c:	adrp	x5, 403000 <verb_status+0x1ec>
  402530:	adrp	x4, 403000 <verb_status+0x1ec>
  402534:	add	x5, x5, #0x736
  402538:	add	x4, x4, #0xc13
  40253c:	mov	w3, #0xec                  	// #236
  402540:	ldr	x6, [sp, #88]
  402544:	b	4024b0 <acquire_boot_count_path.constprop.0+0x138>
  402548:	ldr	x19, [sp, #88]
  40254c:	sub	x1, x0, x19
  402550:	mov	x0, x19
  402554:	bl	401840 <strndup@plt>
  402558:	str	x0, [sp, #96]
  40255c:	cbnz	x0, 40257c <acquire_boot_count_path.constprop.0+0x204>
  402560:	adrp	x3, 403000 <verb_status+0x1ec>
  402564:	add	x3, x3, #0xc13
  402568:	mov	w2, #0xf3                  	// #243
  40256c:	adrp	x1, 403000 <verb_status+0x1ec>
  402570:	add	x1, x1, #0x2d7
  402574:	bl	4019a0 <log_oom_internal@plt>
  402578:	b	402424 <acquire_boot_count_path.constprop.0+0xac>
  40257c:	mov	x0, x19
  402580:	add	x3, sp, #0x80
  402584:	add	x2, sp, #0x78
  402588:	add	x1, sp, #0x70
  40258c:	bl	401e4c <parse_counter>
  402590:	mov	w19, w0
  402594:	tbnz	w0, #31, 402438 <acquire_boot_count_path.constprop.0+0xc0>
  402598:	ldr	x0, [sp, #112]
  40259c:	bl	4018e0 <strdup@plt>
  4025a0:	str	x0, [sp, #104]
  4025a4:	cbnz	x0, 4025b8 <acquire_boot_count_path.constprop.0+0x240>
  4025a8:	adrp	x3, 403000 <verb_status+0x1ec>
  4025ac:	mov	w2, #0xfd                  	// #253
  4025b0:	add	x3, x3, #0xc13
  4025b4:	b	40256c <acquire_boot_count_path.constprop.0+0x1f4>
  4025b8:	str	x0, [x25]
  4025bc:	ldr	x0, [sp, #88]
  4025c0:	str	x0, [x24]
  4025c4:	ldr	x0, [sp, #96]
  4025c8:	str	x0, [x23]
  4025cc:	stp	xzr, xzr, [sp, #88]
  4025d0:	str	xzr, [sp, #104]
  4025d4:	cbz	x21, 4025e0 <acquire_boot_count_path.constprop.0+0x268>
  4025d8:	ldr	x0, [sp, #120]
  4025dc:	str	x0, [x21]
  4025e0:	ldr	x0, [sp, #128]
  4025e4:	mov	w19, #0x0                   	// #0
  4025e8:	str	x0, [x22]
  4025ec:	b	402438 <acquire_boot_count_path.constprop.0+0xc0>
  4025f0:	mov	w19, #0xffffffcf            	// #-49
  4025f4:	b	402438 <acquire_boot_count_path.constprop.0+0xc0>
  4025f8:	mov	w0, w19
  4025fc:	ldp	x19, x20, [sp, #16]
  402600:	ldp	x21, x22, [sp, #32]
  402604:	ldp	x23, x24, [sp, #48]
  402608:	ldr	x25, [sp, #64]
  40260c:	ldp	x29, x30, [sp], #144
  402610:	ret

0000000000402614 <acquire_path>:
  402614:	stp	x29, x30, [sp, #-80]!
  402618:	mov	x29, sp
  40261c:	stp	x19, x20, [sp, #16]
  402620:	adrp	x20, 415000 <saved_argv@@SD_SHARED>
  402624:	stp	x21, x22, [sp, #32]
  402628:	adrp	x21, 414000 <__FRAME_END__+0xfee0>
  40262c:	add	x21, x21, #0xbf0
  402630:	ldr	x0, [x21]
  402634:	str	x0, [sp, #72]
  402638:	mov	x0, #0x0                   	// #0
  40263c:	stp	xzr, xzr, [sp, #48]
  402640:	ldr	x0, [x20, #40]
  402644:	cbz	x0, 402658 <acquire_path+0x44>
  402648:	ldr	x0, [x0]
  40264c:	cbz	x0, 402658 <acquire_path+0x44>
  402650:	mov	w19, #0x0                   	// #0
  402654:	b	4026f8 <acquire_path+0xe4>
  402658:	add	x2, sp, #0x30
  40265c:	mov	x6, #0x0                   	// #0
  402660:	mov	x5, #0x0                   	// #0
  402664:	mov	x4, #0x0                   	// #0
  402668:	mov	x3, #0x0                   	// #0
  40266c:	mov	w1, #0x0                   	// #0
  402670:	mov	x0, #0x0                   	// #0
  402674:	bl	401980 <find_esp_and_warn@plt>
  402678:	cmp	w0, #0x0
  40267c:	mov	w22, #0xffffff82            	// #-126
  402680:	mov	w19, w0
  402684:	ccmp	w0, w22, #0x4, lt  // lt = tstop
  402688:	b.ne	4026f8 <acquire_path+0xe4>  // b.any
  40268c:	add	x2, sp, #0x38
  402690:	mov	x3, #0x0                   	// #0
  402694:	mov	w1, #0x0                   	// #0
  402698:	mov	x0, #0x0                   	// #0
  40269c:	bl	401820 <find_xbootldr_and_warn@plt>
  4026a0:	cmp	w0, #0x0
  4026a4:	mov	w19, w0
  4026a8:	ccmp	w0, w22, #0x4, lt  // lt = tstop
  4026ac:	b.ne	4026f8 <acquire_path+0xe4>  // b.any
  4026b0:	ldp	x3, x0, [sp, #48]
  4026b4:	cbnz	x3, 40271c <acquire_path+0x108>
  4026b8:	cbnz	x0, 402754 <acquire_path+0x140>
  4026bc:	bl	4019b0 <log_get_max_level_realm@plt>
  4026c0:	cmp	w0, #0x2
  4026c4:	b.le	4027e0 <acquire_path+0x1cc>
  4026c8:	mov	w1, #0x2                   	// #2
  4026cc:	adrp	x5, 403000 <verb_status+0x1ec>
  4026d0:	adrp	x4, 403000 <verb_status+0x1ec>
  4026d4:	adrp	x2, 403000 <verb_status+0x1ec>
  4026d8:	add	x5, x5, #0x782
  4026dc:	add	x4, x4, #0xbf8
  4026e0:	add	x2, x2, #0x2d7
  4026e4:	mov	w3, #0x73                  	// #115
  4026e8:	movk	w1, #0x4000, lsl #16
  4026ec:	mov	w0, #0x3                   	// #3
  4026f0:	bl	4018a0 <log_internal_realm@plt>
  4026f4:	mov	w19, w0
  4026f8:	add	x0, sp, #0x38
  4026fc:	bl	401d58 <freep>
  402700:	add	x0, sp, #0x30
  402704:	bl	401d58 <freep>
  402708:	ldr	x1, [sp, #72]
  40270c:	ldr	x0, [x21]
  402710:	eor	x0, x1, x0
  402714:	cbz	x0, 4027e8 <acquire_path+0x1d4>
  402718:	bl	401860 <__stack_chk_fail@plt>
  40271c:	mov	x1, x0
  402720:	mov	x2, #0x0                   	// #0
  402724:	mov	x0, x3
  402728:	bl	4017d0 <strv_new_internal@plt>
  40272c:	mov	x19, x0
  402730:	cbnz	x0, 402760 <acquire_path+0x14c>
  402734:	adrp	x3, 403000 <verb_status+0x1ec>
  402738:	mov	w2, #0x7c                  	// #124
  40273c:	add	x3, x3, #0xbf8
  402740:	adrp	x1, 403000 <verb_status+0x1ec>
  402744:	mov	w0, #0x0                   	// #0
  402748:	add	x1, x1, #0x2d7
  40274c:	bl	4019a0 <log_oom_internal@plt>
  402750:	b	4026f4 <acquire_path+0xe0>
  402754:	mov	x1, #0x0                   	// #0
  402758:	bl	4017d0 <strv_new_internal@plt>
  40275c:	b	40272c <acquire_path+0x118>
  402760:	ldr	x0, [x20, #40]
  402764:	bl	401810 <strv_free@plt>
  402768:	str	x19, [x20, #40]
  40276c:	mov	w0, #0x0                   	// #0
  402770:	bl	4019b0 <log_get_max_level_realm@plt>
  402774:	cmp	w0, #0x6
  402778:	b.le	402650 <acquire_path+0x3c>
  40277c:	adrp	x1, 403000 <verb_status+0x1ec>
  402780:	add	x1, x1, #0x804
  402784:	mov	x2, #0x0                   	// #0
  402788:	mov	x0, x19
  40278c:	bl	4018b0 <strv_join_prefix@plt>
  402790:	mov	x19, x0
  402794:	mov	w0, #0x0                   	// #0
  402798:	str	x19, [sp, #64]
  40279c:	bl	4019b0 <log_get_max_level_realm@plt>
  4027a0:	cmp	w0, #0x6
  4027a4:	b.le	4027d4 <acquire_path+0x1c0>
  4027a8:	adrp	x5, 403000 <verb_status+0x1ec>
  4027ac:	adrp	x4, 403000 <verb_status+0x1ec>
  4027b0:	adrp	x2, 403000 <verb_status+0x1ec>
  4027b4:	mov	x6, x19
  4027b8:	add	x5, x5, #0x806
  4027bc:	add	x4, x4, #0xbf8
  4027c0:	add	x2, x2, #0x2d7
  4027c4:	mov	w3, #0x84                  	// #132
  4027c8:	mov	w1, #0x0                   	// #0
  4027cc:	mov	w0, #0x7                   	// #7
  4027d0:	bl	4018a0 <log_internal_realm@plt>
  4027d4:	add	x0, sp, #0x40
  4027d8:	bl	401d58 <freep>
  4027dc:	b	402650 <acquire_path+0x3c>
  4027e0:	mov	w19, #0xfffffffe            	// #-2
  4027e4:	b	4026f8 <acquire_path+0xe4>
  4027e8:	mov	w0, w19
  4027ec:	ldp	x19, x20, [sp, #16]
  4027f0:	ldp	x21, x22, [sp, #32]
  4027f4:	ldp	x29, x30, [sp], #80
  4027f8:	ret

00000000004027fc <verb_set>:
  4027fc:	stp	x29, x30, [sp, #-176]!
  402800:	mov	x2, #0x0                   	// #0
  402804:	mov	x29, sp
  402808:	stp	x25, x26, [sp, #64]
  40280c:	adrp	x26, 414000 <__FRAME_END__+0xfee0>
  402810:	add	x26, x26, #0xbf0
  402814:	ldr	x0, [x26]
  402818:	str	x0, [sp, #168]
  40281c:	mov	x0, #0x0                   	// #0
  402820:	add	x4, sp, #0x80
  402824:	add	x3, sp, #0xa0
  402828:	add	x0, sp, #0x70
  40282c:	stp	x19, x20, [sp, #16]
  402830:	stp	x21, x22, [sp, #32]
  402834:	stp	x23, x24, [sp, #48]
  402838:	stp	x27, x28, [sp, #80]
  40283c:	mov	x27, x1
  402840:	add	x1, sp, #0x78
  402844:	stp	xzr, xzr, [sp, #112]
  402848:	stp	xzr, xzr, [sp, #128]
  40284c:	stp	xzr, xzr, [sp, #144]
  402850:	bl	402378 <acquire_boot_count_path.constprop.0>
  402854:	mov	w19, w0
  402858:	cmn	w0, #0x31
  40285c:	b.ne	4028e0 <verb_set+0xe4>  // b.any
  402860:	mov	w0, #0x0                   	// #0
  402864:	bl	4019b0 <log_get_max_level_realm@plt>
  402868:	cmp	w0, #0x2
  40286c:	b.le	40289c <verb_set+0xa0>
  402870:	adrp	x5, 403000 <verb_status+0x1ec>
  402874:	adrp	x4, 403000 <verb_status+0x1ec>
  402878:	adrp	x2, 403000 <verb_status+0x1ec>
  40287c:	add	x5, x5, #0x833
  402880:	add	x4, x4, #0xc37
  402884:	add	x2, x2, #0x2d7
  402888:	mov	w1, w19
  40288c:	mov	w3, #0x194                 	// #404
  402890:	mov	w0, #0x3                   	// #3
  402894:	bl	4018a0 <log_internal_realm@plt>
  402898:	mov	w19, w0
  40289c:	add	x0, sp, #0x98
  4028a0:	bl	401d58 <freep>
  4028a4:	add	x0, sp, #0x90
  4028a8:	bl	401d58 <freep>
  4028ac:	add	x0, sp, #0x88
  4028b0:	bl	401d58 <freep>
  4028b4:	add	x0, sp, #0x80
  4028b8:	bl	401d58 <freep>
  4028bc:	add	x0, sp, #0x78
  4028c0:	bl	401d58 <freep>
  4028c4:	add	x0, sp, #0x70
  4028c8:	bl	401d58 <freep>
  4028cc:	ldr	x1, [sp, #168]
  4028d0:	ldr	x0, [x26]
  4028d4:	eor	x0, x1, x0
  4028d8:	cbz	x0, 402df4 <verb_set+0x5f8>
  4028dc:	bl	401860 <__stack_chk_fail@plt>
  4028e0:	tbnz	w0, #31, 40289c <verb_set+0xa0>
  4028e4:	bl	402614 <acquire_path>
  4028e8:	mov	w19, w0
  4028ec:	tbnz	w0, #31, 40289c <verb_set+0xa0>
  4028f0:	ldp	x0, x1, [sp, #120]
  4028f4:	add	x2, sp, #0x88
  4028f8:	bl	4022b8 <make_good>
  4028fc:	tbz	w0, #31, 402920 <verb_set+0x124>
  402900:	adrp	x3, 403000 <verb_status+0x1ec>
  402904:	add	x3, x3, #0xc37
  402908:	mov	w2, #0x19e                 	// #414
  40290c:	adrp	x1, 403000 <verb_status+0x1ec>
  402910:	mov	w0, #0x0                   	// #0
  402914:	add	x1, x1, #0x2d7
  402918:	bl	4019a0 <log_oom_internal@plt>
  40291c:	b	402898 <verb_set+0x9c>
  402920:	ldp	x0, x2, [sp, #120]
  402924:	add	x3, sp, #0x90
  402928:	ldr	x1, [sp, #160]
  40292c:	bl	40214c <make_bad>
  402930:	tbz	w0, #31, 402944 <verb_set+0x148>
  402934:	adrp	x3, 403000 <verb_status+0x1ec>
  402938:	mov	w2, #0x1a2                 	// #418
  40293c:	add	x3, x3, #0xc37
  402940:	b	40290c <verb_set+0x110>
  402944:	ldr	x19, [x27]
  402948:	adrp	x1, 403000 <verb_status+0x1ec>
  40294c:	add	x1, x1, #0x85c
  402950:	mov	x0, x19
  402954:	bl	4018d0 <strcmp@plt>
  402958:	cbnz	w0, 40296c <verb_set+0x170>
  40295c:	ldr	x24, [sp, #112]
  402960:	ldr	x21, [sp, #136]
  402964:	ldr	x25, [sp, #144]
  402968:	b	402988 <verb_set+0x18c>
  40296c:	adrp	x1, 403000 <verb_status+0x1ec>
  402970:	mov	x0, x19
  402974:	add	x1, x1, #0x861
  402978:	bl	4018d0 <strcmp@plt>
  40297c:	cbnz	w0, 4029fc <verb_set+0x200>
  402980:	ldp	x25, x21, [sp, #136]
  402984:	ldr	x24, [sp, #112]
  402988:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40298c:	mov	w19, #0x4000                	// #16384
  402990:	adrp	x28, 403000 <verb_status+0x1ec>
  402994:	ldr	x23, [x0, #40]
  402998:	adrp	x22, 403000 <verb_status+0x1ec>
  40299c:	add	x28, x28, #0x995
  4029a0:	add	x22, x22, #0xc37
  4029a4:	movk	w19, #0x8, lsl #16
  4029a8:	cbz	x23, 4029b4 <verb_set+0x1b8>
  4029ac:	ldr	x0, [x23]
  4029b0:	cbnz	x0, 402a40 <verb_set+0x244>
  4029b4:	mov	w0, #0x0                   	// #0
  4029b8:	bl	4019b0 <log_get_max_level_realm@plt>
  4029bc:	cmp	w0, #0x2
  4029c0:	b.le	4029f4 <verb_set+0x1f8>
  4029c4:	mov	w1, #0x10                  	// #16
  4029c8:	adrp	x5, 403000 <verb_status+0x1ec>
  4029cc:	adrp	x4, 403000 <verb_status+0x1ec>
  4029d0:	adrp	x2, 403000 <verb_status+0x1ec>
  4029d4:	mov	x6, x21
  4029d8:	add	x5, x5, #0x9cc
  4029dc:	add	x4, x4, #0xc37
  4029e0:	add	x2, x2, #0x2d7
  4029e4:	mov	w3, #0x1e7                 	// #487
  4029e8:	movk	w1, #0x4000, lsl #16
  4029ec:	mov	w0, #0x3                   	// #3
  4029f0:	bl	4018a0 <log_internal_realm@plt>
  4029f4:	mov	w19, #0x1                   	// #1
  4029f8:	b	40289c <verb_set+0xa0>
  4029fc:	adrp	x1, 403000 <verb_status+0x1ec>
  402a00:	mov	x0, x19
  402a04:	add	x1, x1, #0x865
  402a08:	bl	4018d0 <strcmp@plt>
  402a0c:	cbz	w0, 402a34 <verb_set+0x238>
  402a10:	adrp	x4, 403000 <verb_status+0x1ec>
  402a14:	adrp	x2, 403000 <verb_status+0x1ec>
  402a18:	adrp	x1, 403000 <verb_status+0x1ec>
  402a1c:	add	x4, x4, #0xbdf
  402a20:	add	x2, x2, #0x2d7
  402a24:	add	x1, x1, #0x873
  402a28:	mov	w3, #0x1ae                 	// #430
  402a2c:	mov	w0, #0x0                   	// #0
  402a30:	bl	401730 <log_assert_failed_realm@plt>
  402a34:	ldr	x21, [sp, #112]
  402a38:	ldr	x24, [sp, #136]
  402a3c:	b	402964 <verb_set+0x168>
  402a40:	mov	w1, w19
  402a44:	bl	401970 <open64@plt>
  402a48:	mov	w20, w0
  402a4c:	tbz	w0, #31, 402ab8 <verb_set+0x2bc>
  402a50:	bl	401800 <__errno_location@plt>
  402a54:	ldr	w19, [x0]
  402a58:	mov	w0, #0x0                   	// #0
  402a5c:	bl	4019b0 <log_get_max_level_realm@plt>
  402a60:	cmp	w0, #0x2
  402a64:	b.le	402aa4 <verb_set+0x2a8>
  402a68:	ldr	x6, [x23]
  402a6c:	adrp	x5, 403000 <verb_status+0x1ec>
  402a70:	adrp	x4, 403000 <verb_status+0x1ec>
  402a74:	adrp	x2, 403000 <verb_status+0x1ec>
  402a78:	add	x5, x5, #0x893
  402a7c:	add	x4, x4, #0xc37
  402a80:	add	x2, x2, #0x2d7
  402a84:	mov	w1, w19
  402a88:	mov	w3, #0x1b9                 	// #441
  402a8c:	mov	w0, #0x3                   	// #3
  402a90:	bl	4018a0 <log_internal_realm@plt>
  402a94:	mov	w19, w0
  402a98:	mov	w0, w20
  402a9c:	bl	401710 <safe_close@plt>
  402aa0:	b	40289c <verb_set+0xa0>
  402aa4:	cmp	w19, #0x0
  402aa8:	cneg	w19, w19, lt  // lt = tstop
  402aac:	and	w0, w19, #0xff
  402ab0:	neg	w19, w0
  402ab4:	b	402a98 <verb_set+0x29c>
  402ab8:	mov	x0, x24
  402abc:	bl	402250 <skip_slash>
  402ac0:	mov	x1, x0
  402ac4:	mov	x0, x21
  402ac8:	str	x1, [sp, #104]
  402acc:	bl	402250 <skip_slash>
  402ad0:	mov	x3, x0
  402ad4:	ldr	x1, [sp, #104]
  402ad8:	mov	w2, w20
  402adc:	mov	w0, w20
  402ae0:	bl	401790 <rename_noreplace@plt>
  402ae4:	mov	w1, w0
  402ae8:	cmn	w0, #0x11
  402aec:	b.eq	402da8 <verb_set+0x5ac>  // b.none
  402af0:	cmn	w0, #0x2
  402af4:	b.ne	402c64 <verb_set+0x468>  // b.any
  402af8:	mov	x0, x25
  402afc:	bl	402250 <skip_slash>
  402b00:	mov	x1, x0
  402b04:	mov	x0, x21
  402b08:	str	x1, [sp, #104]
  402b0c:	bl	402250 <skip_slash>
  402b10:	mov	x3, x0
  402b14:	ldr	x1, [sp, #104]
  402b18:	mov	w2, w20
  402b1c:	mov	w0, w20
  402b20:	bl	401790 <rename_noreplace@plt>
  402b24:	mov	w1, w0
  402b28:	cmn	w0, #0x11
  402b2c:	b.eq	402da8 <verb_set+0x5ac>  // b.none
  402b30:	cmn	w0, #0x2
  402b34:	b.ne	402bb4 <verb_set+0x3b8>  // b.any
  402b38:	mov	x0, x21
  402b3c:	bl	402250 <skip_slash>
  402b40:	mov	w3, #0x0                   	// #0
  402b44:	mov	x1, x0
  402b48:	mov	w2, #0x0                   	// #0
  402b4c:	mov	w0, w20
  402b50:	bl	401740 <faccessat@plt>
  402b54:	tbz	w0, #31, 402da8 <verb_set+0x5ac>
  402b58:	bl	401800 <__errno_location@plt>
  402b5c:	ldr	w1, [x0]
  402b60:	str	w1, [sp, #104]
  402b64:	cmp	w1, #0x2
  402b68:	b.eq	402d98 <verb_set+0x59c>  // b.none
  402b6c:	mov	w0, #0x0                   	// #0
  402b70:	bl	4019b0 <log_get_max_level_realm@plt>
  402b74:	ldr	w1, [sp, #104]
  402b78:	cmp	w0, #0x2
  402b7c:	b.le	402ba4 <verb_set+0x3a8>
  402b80:	adrp	x5, 403000 <verb_status+0x1ec>
  402b84:	adrp	x4, 403000 <verb_status+0x1ec>
  402b88:	adrp	x2, 403000 <verb_status+0x1ec>
  402b8c:	mov	x6, x21
  402b90:	add	x5, x5, #0x8bb
  402b94:	add	x4, x4, #0xc37
  402b98:	add	x2, x2, #0x2d7
  402b9c:	mov	w3, #0x1c9                 	// #457
  402ba0:	b	402a8c <verb_set+0x290>
  402ba4:	cmp	w1, #0x0
  402ba8:	cneg	w1, w1, lt  // lt = tstop
  402bac:	and	w0, w1, #0xff
  402bb0:	b	402ab0 <verb_set+0x2b4>
  402bb4:	mov	w0, #0x0                   	// #0
  402bb8:	str	w1, [sp, #104]
  402bbc:	bl	4019b0 <log_get_max_level_realm@plt>
  402bc0:	ldr	w1, [sp, #104]
  402bc4:	tbz	w1, #31, 402c00 <verb_set+0x404>
  402bc8:	cmp	w0, #0x2
  402bcc:	b.le	402ca0 <verb_set+0x4a4>
  402bd0:	adrp	x5, 403000 <verb_status+0x1ec>
  402bd4:	adrp	x4, 403000 <verb_status+0x1ec>
  402bd8:	mov	x7, x21
  402bdc:	mov	x6, x25
  402be0:	add	x5, x5, #0x8e8
  402be4:	add	x4, x4, #0xc37
  402be8:	mov	w3, #0x1ce                 	// #462
  402bec:	adrp	x2, 403000 <verb_status+0x1ec>
  402bf0:	mov	w0, #0x3                   	// #3
  402bf4:	add	x2, x2, #0x2d7
  402bf8:	bl	4018a0 <log_internal_realm@plt>
  402bfc:	b	402a94 <verb_set+0x298>
  402c00:	cmp	w0, #0x6
  402c04:	b.le	402c34 <verb_set+0x438>
  402c08:	adrp	x5, 403000 <verb_status+0x1ec>
  402c0c:	mov	x7, x21
  402c10:	mov	x6, x25
  402c14:	add	x5, x5, #0x90a
  402c18:	mov	x4, x22
  402c1c:	mov	w3, #0x1d0                 	// #464
  402c20:	adrp	x2, 403000 <verb_status+0x1ec>
  402c24:	mov	w1, #0x0                   	// #0
  402c28:	add	x2, x2, #0x2d7
  402c2c:	mov	w0, #0x7                   	// #7
  402c30:	bl	4018a0 <log_internal_realm@plt>
  402c34:	mov	x0, x21
  402c38:	bl	401760 <dirname_malloc@plt>
  402c3c:	str	x0, [sp, #152]
  402c40:	cbnz	x0, 402cd0 <verb_set+0x4d4>
  402c44:	adrp	x3, 403000 <verb_status+0x1ec>
  402c48:	mov	w2, #0x1da                 	// #474
  402c4c:	add	x3, x3, #0xc37
  402c50:	adrp	x1, 403000 <verb_status+0x1ec>
  402c54:	mov	w0, #0x0                   	// #0
  402c58:	add	x1, x1, #0x2d7
  402c5c:	bl	4019a0 <log_oom_internal@plt>
  402c60:	b	402a94 <verb_set+0x298>
  402c64:	mov	w0, #0x0                   	// #0
  402c68:	str	w1, [sp, #104]
  402c6c:	bl	4019b0 <log_get_max_level_realm@plt>
  402c70:	ldr	w1, [sp, #104]
  402c74:	tbz	w1, #31, 402cac <verb_set+0x4b0>
  402c78:	cmp	w0, #0x2
  402c7c:	b.le	402ca0 <verb_set+0x4a4>
  402c80:	adrp	x5, 403000 <verb_status+0x1ec>
  402c84:	adrp	x4, 403000 <verb_status+0x1ec>
  402c88:	mov	x7, x21
  402c8c:	mov	x6, x24
  402c90:	add	x5, x5, #0x8e8
  402c94:	add	x4, x4, #0xc37
  402c98:	mov	w3, #0x1d3                 	// #467
  402c9c:	b	402bec <verb_set+0x3f0>
  402ca0:	neg	w0, w1
  402ca4:	and	w0, w0, #0xff
  402ca8:	b	402ab0 <verb_set+0x2b4>
  402cac:	cmp	w0, #0x6
  402cb0:	b.le	402c34 <verb_set+0x438>
  402cb4:	adrp	x5, 403000 <verb_status+0x1ec>
  402cb8:	mov	x7, x21
  402cbc:	mov	x6, x24
  402cc0:	add	x5, x5, #0x90a
  402cc4:	mov	x4, x22
  402cc8:	mov	w3, #0x1d5                 	// #469
  402ccc:	b	402c20 <verb_set+0x424>
  402cd0:	bl	402250 <skip_slash>
  402cd4:	mov	x1, x0
  402cd8:	mov	w0, w20
  402cdc:	bl	401930 <fsync_path_at@plt>
  402ce0:	tbz	w0, #31, 402d1c <verb_set+0x520>
  402ce4:	mov	w0, #0x0                   	// #0
  402ce8:	bl	4019b0 <log_get_max_level_realm@plt>
  402cec:	cmp	w0, #0x6
  402cf0:	b.le	402d1c <verb_set+0x520>
  402cf4:	bl	401800 <__errno_location@plt>
  402cf8:	ldr	w1, [x0]
  402cfc:	adrp	x5, 403000 <verb_status+0x1ec>
  402d00:	adrp	x2, 403000 <verb_status+0x1ec>
  402d04:	add	x5, x5, #0x92d
  402d08:	mov	x4, x22
  402d0c:	add	x2, x2, #0x2d7
  402d10:	mov	w3, #0x1de                 	// #478
  402d14:	mov	w0, #0x7                   	// #7
  402d18:	bl	4018a0 <log_internal_realm@plt>
  402d1c:	mov	w0, w20
  402d20:	bl	401950 <syncfs@plt>
  402d24:	tbz	w0, #31, 402d60 <verb_set+0x564>
  402d28:	mov	w0, #0x0                   	// #0
  402d2c:	bl	4019b0 <log_get_max_level_realm@plt>
  402d30:	cmp	w0, #0x6
  402d34:	b.le	402d60 <verb_set+0x564>
  402d38:	bl	401800 <__errno_location@plt>
  402d3c:	ldr	w1, [x0]
  402d40:	adrp	x5, 403000 <verb_status+0x1ec>
  402d44:	adrp	x2, 403000 <verb_status+0x1ec>
  402d48:	add	x5, x5, #0x961
  402d4c:	mov	x4, x22
  402d50:	add	x2, x2, #0x2d7
  402d54:	mov	w3, #0x1e2                 	// #482
  402d58:	mov	w0, #0x7                   	// #7
  402d5c:	bl	4018a0 <log_internal_realm@plt>
  402d60:	mov	w0, #0x0                   	// #0
  402d64:	bl	4019b0 <log_get_max_level_realm@plt>
  402d68:	cmp	w0, #0x5
  402d6c:	b.le	402d98 <verb_set+0x59c>
  402d70:	ldr	x6, [x27]
  402d74:	adrp	x2, 403000 <verb_status+0x1ec>
  402d78:	ldr	x7, [sp, #160]
  402d7c:	mov	x5, x28
  402d80:	mov	x4, x22
  402d84:	add	x2, x2, #0x2d7
  402d88:	mov	w3, #0x1e4                 	// #484
  402d8c:	mov	w1, #0x0                   	// #0
  402d90:	mov	w0, #0x6                   	// #6
  402d94:	bl	4018a0 <log_internal_realm@plt>
  402d98:	mov	w0, w20
  402d9c:	add	x23, x23, #0x8
  402da0:	bl	401710 <safe_close@plt>
  402da4:	b	4029a8 <verb_set+0x1ac>
  402da8:	mov	w0, w20
  402dac:	bl	401710 <safe_close@plt>
  402db0:	mov	w0, #0x0                   	// #0
  402db4:	bl	4019b0 <log_get_max_level_realm@plt>
  402db8:	cmp	w0, #0x6
  402dbc:	b.gt	402dc8 <verb_set+0x5cc>
  402dc0:	mov	w19, #0x0                   	// #0
  402dc4:	b	40289c <verb_set+0xa0>
  402dc8:	adrp	x5, 403000 <verb_status+0x1ec>
  402dcc:	adrp	x4, 403000 <verb_status+0x1ec>
  402dd0:	add	x5, x5, #0x9fd
  402dd4:	add	x4, x4, #0xc37
  402dd8:	mov	w3, #0x1eb                 	// #491
  402ddc:	adrp	x2, 403000 <verb_status+0x1ec>
  402de0:	mov	w1, #0x0                   	// #0
  402de4:	add	x2, x2, #0x2d7
  402de8:	mov	w0, #0x7                   	// #7
  402dec:	bl	4018a0 <log_internal_realm@plt>
  402df0:	b	402dc0 <verb_set+0x5c4>
  402df4:	mov	w0, w19
  402df8:	ldp	x19, x20, [sp, #16]
  402dfc:	ldp	x21, x22, [sp, #32]
  402e00:	ldp	x23, x24, [sp, #48]
  402e04:	ldp	x25, x26, [sp, #64]
  402e08:	ldp	x27, x28, [sp, #80]
  402e0c:	ldp	x29, x30, [sp], #176
  402e10:	ret

0000000000402e14 <verb_status>:
  402e14:	sub	sp, sp, #0x90
  402e18:	add	x4, sp, #0x60
  402e1c:	add	x3, sp, #0x80
  402e20:	add	x2, sp, #0x78
  402e24:	add	x1, sp, #0x58
  402e28:	stp	x29, x30, [sp, #16]
  402e2c:	add	x29, sp, #0x10
  402e30:	stp	x19, x20, [sp, #32]
  402e34:	adrp	x20, 414000 <__FRAME_END__+0xfee0>
  402e38:	add	x20, x20, #0xbf0
  402e3c:	ldr	x0, [x20]
  402e40:	str	x0, [sp, #136]
  402e44:	mov	x0, #0x0                   	// #0
  402e48:	stp	x21, x22, [sp, #48]
  402e4c:	add	x0, sp, #0x50
  402e50:	stp	x23, x24, [sp, #64]
  402e54:	stp	xzr, xzr, [sp, #80]
  402e58:	stp	xzr, xzr, [sp, #96]
  402e5c:	str	xzr, [sp, #112]
  402e60:	bl	402378 <acquire_boot_count_path.constprop.0>
  402e64:	cmn	w0, #0x31
  402e68:	b.ne	402eb8 <verb_status+0xa4>  // b.any
  402e6c:	mov	w19, #0x0                   	// #0
  402e70:	adrp	x0, 403000 <verb_status+0x1ec>
  402e74:	add	x0, x0, #0xa34
  402e78:	bl	401920 <puts@plt>
  402e7c:	add	x0, sp, #0x70
  402e80:	bl	401d58 <freep>
  402e84:	add	x0, sp, #0x68
  402e88:	bl	401d58 <freep>
  402e8c:	add	x0, sp, #0x60
  402e90:	bl	401d58 <freep>
  402e94:	add	x0, sp, #0x58
  402e98:	bl	401d58 <freep>
  402e9c:	add	x0, sp, #0x50
  402ea0:	bl	401d58 <freep>
  402ea4:	ldr	x1, [sp, #136]
  402ea8:	ldr	x0, [x20]
  402eac:	eor	x0, x1, x0
  402eb0:	cbz	x0, 4031e4 <verb_status+0x3d0>
  402eb4:	bl	401860 <__stack_chk_fail@plt>
  402eb8:	mov	w19, w0
  402ebc:	tbnz	w0, #31, 402e7c <verb_status+0x68>
  402ec0:	bl	402614 <acquire_path>
  402ec4:	mov	w19, w0
  402ec8:	tbnz	w0, #31, 402e7c <verb_status+0x68>
  402ecc:	ldp	x0, x1, [sp, #88]
  402ed0:	add	x2, sp, #0x68
  402ed4:	bl	4022b8 <make_good>
  402ed8:	tbz	w0, #31, 402f00 <verb_status+0xec>
  402edc:	adrp	x3, 403000 <verb_status+0x1ec>
  402ee0:	add	x3, x3, #0xc2b
  402ee4:	mov	w2, #0x153                 	// #339
  402ee8:	adrp	x1, 403000 <verb_status+0x1ec>
  402eec:	mov	w0, #0x0                   	// #0
  402ef0:	add	x1, x1, #0x2d7
  402ef4:	bl	4019a0 <log_oom_internal@plt>
  402ef8:	mov	w19, w0
  402efc:	b	402e7c <verb_status+0x68>
  402f00:	ldp	x0, x2, [sp, #88]
  402f04:	add	x3, sp, #0x70
  402f08:	ldr	x1, [sp, #128]
  402f0c:	bl	40214c <make_bad>
  402f10:	tbz	w0, #31, 402f24 <verb_status+0x110>
  402f14:	adrp	x3, 403000 <verb_status+0x1ec>
  402f18:	mov	w2, #0x157                 	// #343
  402f1c:	add	x3, x3, #0xc2b
  402f20:	b	402ee8 <verb_status+0xd4>
  402f24:	mov	w0, #0x0                   	// #0
  402f28:	bl	4019b0 <log_get_max_level_realm@plt>
  402f2c:	cmp	w0, #0x6
  402f30:	b.le	402fa0 <verb_status+0x18c>
  402f34:	ldp	x7, x0, [sp, #104]
  402f38:	adrp	x19, 403000 <verb_status+0x1ec>
  402f3c:	ldr	x6, [sp, #80]
  402f40:	add	x19, x19, #0xc2b
  402f44:	mov	x4, x19
  402f48:	adrp	x5, 403000 <verb_status+0x1ec>
  402f4c:	adrp	x21, 403000 <verb_status+0x1ec>
  402f50:	add	x5, x5, #0xa3a
  402f54:	add	x2, x21, #0x2d7
  402f58:	str	x0, [sp]
  402f5c:	mov	w3, #0x159                 	// #345
  402f60:	mov	w1, #0x0                   	// #0
  402f64:	mov	w0, #0x7                   	// #7
  402f68:	bl	4018a0 <log_internal_realm@plt>
  402f6c:	mov	w0, #0x0                   	// #0
  402f70:	bl	4019b0 <log_get_max_level_realm@plt>
  402f74:	cmp	w0, #0x6
  402f78:	b.le	402fa0 <verb_status+0x18c>
  402f7c:	ldp	x6, x7, [sp, #120]
  402f80:	adrp	x5, 403000 <verb_status+0x1ec>
  402f84:	mov	x4, x19
  402f88:	add	x5, x5, #0xa8d
  402f8c:	add	x2, x21, #0x2d7
  402f90:	mov	w3, #0x160                 	// #352
  402f94:	mov	w1, #0x0                   	// #0
  402f98:	mov	w0, #0x7                   	// #7
  402f9c:	bl	4018a0 <log_internal_realm@plt>
  402fa0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402fa4:	mov	w24, #0x4000                	// #16384
  402fa8:	movk	w24, #0x8, lsl #16
  402fac:	ldr	x22, [x0, #40]
  402fb0:	cbz	x22, 402fbc <verb_status+0x1a8>
  402fb4:	ldr	x0, [x22]
  402fb8:	cbnz	x0, 402ffc <verb_status+0x1e8>
  402fbc:	mov	w0, #0x0                   	// #0
  402fc0:	bl	4019b0 <log_get_max_level_realm@plt>
  402fc4:	cmp	w0, #0x2
  402fc8:	b.le	4031dc <verb_status+0x3c8>
  402fcc:	mov	w1, #0x10                  	// #16
  402fd0:	adrp	x5, 403000 <verb_status+0x1ec>
  402fd4:	adrp	x4, 403000 <verb_status+0x1ec>
  402fd8:	add	x5, x5, #0xad1
  402fdc:	add	x4, x4, #0xc2b
  402fe0:	mov	w3, #0x188                 	// #392
  402fe4:	adrp	x2, 403000 <verb_status+0x1ec>
  402fe8:	movk	w1, #0x4000, lsl #16
  402fec:	add	x2, x2, #0x2d7
  402ff0:	mov	w0, #0x3                   	// #3
  402ff4:	bl	4018a0 <log_internal_realm@plt>
  402ff8:	b	402ef8 <verb_status+0xe4>
  402ffc:	mov	w1, w24
  403000:	bl	401970 <open64@plt>
  403004:	mov	w21, w0
  403008:	tbz	w0, #31, 403078 <verb_status+0x264>
  40300c:	bl	401800 <__errno_location@plt>
  403010:	ldr	w19, [x0]
  403014:	cmp	w19, #0x2
  403018:	b.ne	40302c <verb_status+0x218>  // b.any
  40301c:	mov	w0, w21
  403020:	add	x22, x22, #0x8
  403024:	bl	401710 <safe_close@plt>
  403028:	b	402fb0 <verb_status+0x19c>
  40302c:	mov	w0, #0x0                   	// #0
  403030:	bl	4019b0 <log_get_max_level_realm@plt>
  403034:	cmp	w0, #0x2
  403038:	b.le	403150 <verb_status+0x33c>
  40303c:	ldr	x6, [x22]
  403040:	adrp	x5, 403000 <verb_status+0x1ec>
  403044:	adrp	x4, 403000 <verb_status+0x1ec>
  403048:	add	x5, x5, #0x893
  40304c:	add	x4, x4, #0xc2b
  403050:	mov	w3, #0x16c                 	// #364
  403054:	mov	w1, w19
  403058:	adrp	x2, 403000 <verb_status+0x1ec>
  40305c:	mov	w0, #0x3                   	// #3
  403060:	add	x2, x2, #0x2d7
  403064:	bl	4018a0 <log_internal_realm@plt>
  403068:	mov	w19, w0
  40306c:	mov	w0, w21
  403070:	bl	401710 <safe_close@plt>
  403074:	b	402e7c <verb_status+0x68>
  403078:	ldr	x0, [sp, #80]
  40307c:	bl	402250 <skip_slash>
  403080:	mov	x1, x0
  403084:	mov	w3, #0x0                   	// #0
  403088:	mov	w0, w21
  40308c:	mov	w2, #0x0                   	// #0
  403090:	bl	401740 <faccessat@plt>
  403094:	tbnz	w0, #31, 4030ac <verb_status+0x298>
  403098:	adrp	x0, 403000 <verb_status+0x1ec>
  40309c:	add	x0, x0, #0x865
  4030a0:	mov	w19, #0x0                   	// #0
  4030a4:	bl	401920 <puts@plt>
  4030a8:	b	40306c <verb_status+0x258>
  4030ac:	bl	401800 <__errno_location@plt>
  4030b0:	ldr	w19, [x0]
  4030b4:	mov	x23, x0
  4030b8:	cmp	w19, #0x2
  4030bc:	b.eq	4030ec <verb_status+0x2d8>  // b.none
  4030c0:	mov	w0, #0x0                   	// #0
  4030c4:	bl	4019b0 <log_get_max_level_realm@plt>
  4030c8:	cmp	w0, #0x2
  4030cc:	b.le	403150 <verb_status+0x33c>
  4030d0:	adrp	x5, 403000 <verb_status+0x1ec>
  4030d4:	adrp	x4, 403000 <verb_status+0x1ec>
  4030d8:	add	x5, x5, #0xaae
  4030dc:	add	x4, x4, #0xc2b
  4030e0:	mov	w3, #0x174                 	// #372
  4030e4:	ldr	x6, [sp, #80]
  4030e8:	b	403054 <verb_status+0x240>
  4030ec:	ldr	x0, [sp, #104]
  4030f0:	bl	402250 <skip_slash>
  4030f4:	mov	x1, x0
  4030f8:	mov	w3, #0x0                   	// #0
  4030fc:	mov	w0, w21
  403100:	mov	w2, #0x0                   	// #0
  403104:	bl	401740 <faccessat@plt>
  403108:	tbnz	w0, #31, 403118 <verb_status+0x304>
  40310c:	adrp	x0, 403000 <verb_status+0x1ec>
  403110:	add	x0, x0, #0x85c
  403114:	b	4030a0 <verb_status+0x28c>
  403118:	ldr	w19, [x23]
  40311c:	cmp	w19, #0x2
  403120:	b.eq	403164 <verb_status+0x350>  // b.none
  403124:	mov	w0, #0x0                   	// #0
  403128:	bl	4019b0 <log_get_max_level_realm@plt>
  40312c:	cmp	w0, #0x2
  403130:	b.le	403150 <verb_status+0x33c>
  403134:	adrp	x5, 403000 <verb_status+0x1ec>
  403138:	adrp	x4, 403000 <verb_status+0x1ec>
  40313c:	add	x5, x5, #0xaae
  403140:	add	x4, x4, #0xc2b
  403144:	mov	w3, #0x17c                 	// #380
  403148:	ldr	x6, [sp, #104]
  40314c:	b	403054 <verb_status+0x240>
  403150:	cmp	w19, #0x0
  403154:	cneg	w19, w19, lt  // lt = tstop
  403158:	and	w0, w19, #0xff
  40315c:	neg	w19, w0
  403160:	b	40306c <verb_status+0x258>
  403164:	ldr	x0, [sp, #112]
  403168:	bl	402250 <skip_slash>
  40316c:	mov	x1, x0
  403170:	mov	w3, #0x0                   	// #0
  403174:	mov	w0, w21
  403178:	mov	w2, #0x0                   	// #0
  40317c:	bl	401740 <faccessat@plt>
  403180:	tbnz	w0, #31, 403190 <verb_status+0x37c>
  403184:	adrp	x0, 403000 <verb_status+0x1ec>
  403188:	add	x0, x0, #0x861
  40318c:	b	4030a0 <verb_status+0x28c>
  403190:	ldr	w19, [x23]
  403194:	cmp	w19, #0x2
  403198:	b.eq	40301c <verb_status+0x208>  // b.none
  40319c:	mov	w0, #0x0                   	// #0
  4031a0:	bl	4019b0 <log_get_max_level_realm@plt>
  4031a4:	cmp	w0, #0x2
  4031a8:	b.le	4031c8 <verb_status+0x3b4>
  4031ac:	adrp	x5, 403000 <verb_status+0x1ec>
  4031b0:	adrp	x4, 403000 <verb_status+0x1ec>
  4031b4:	add	x5, x5, #0xaae
  4031b8:	add	x4, x4, #0xc2b
  4031bc:	mov	w3, #0x183                 	// #387
  4031c0:	ldr	x6, [sp, #112]
  4031c4:	b	403054 <verb_status+0x240>
  4031c8:	cmp	w19, #0x0
  4031cc:	cneg	w19, w19, lt  // lt = tstop
  4031d0:	and	w19, w19, #0xff
  4031d4:	neg	w19, w19
  4031d8:	b	40306c <verb_status+0x258>
  4031dc:	mov	w19, #0xfffffff0            	// #-16
  4031e0:	b	402e7c <verb_status+0x68>
  4031e4:	mov	w0, w19
  4031e8:	ldp	x29, x30, [sp, #16]
  4031ec:	ldp	x19, x20, [sp, #32]
  4031f0:	ldp	x21, x22, [sp, #48]
  4031f4:	ldp	x23, x24, [sp, #64]
  4031f8:	add	sp, sp, #0x90
  4031fc:	ret

0000000000403200 <__libc_csu_init>:
  403200:	stp	x29, x30, [sp, #-64]!
  403204:	mov	x29, sp
  403208:	stp	x19, x20, [sp, #16]
  40320c:	adrp	x20, 414000 <__FRAME_END__+0xfee0>
  403210:	add	x20, x20, #0xbe8
  403214:	stp	x21, x22, [sp, #32]
  403218:	adrp	x21, 414000 <__FRAME_END__+0xfee0>
  40321c:	add	x21, x21, #0xbe0
  403220:	sub	x20, x20, x21
  403224:	mov	w22, w0
  403228:	stp	x23, x24, [sp, #48]
  40322c:	mov	x23, x1
  403230:	mov	x24, x2
  403234:	bl	401620 <_init>
  403238:	cmp	xzr, x20, asr #3
  40323c:	b.eq	403268 <__libc_csu_init+0x68>  // b.none
  403240:	asr	x20, x20, #3
  403244:	mov	x19, #0x0                   	// #0
  403248:	ldr	x3, [x21, x19, lsl #3]
  40324c:	mov	x2, x24
  403250:	add	x19, x19, #0x1
  403254:	mov	x1, x23
  403258:	mov	w0, w22
  40325c:	blr	x3
  403260:	cmp	x20, x19
  403264:	b.ne	403248 <__libc_csu_init+0x48>  // b.any
  403268:	ldp	x19, x20, [sp, #16]
  40326c:	ldp	x21, x22, [sp, #32]
  403270:	ldp	x23, x24, [sp, #48]
  403274:	ldp	x29, x30, [sp], #64
  403278:	ret
  40327c:	nop

0000000000403280 <__libc_csu_fini>:
  403280:	ret

Disassembly of section .fini:

0000000000403284 <_fini>:
  403284:	stp	x29, x30, [sp, #-16]!
  403288:	mov	x29, sp
  40328c:	ldp	x29, x30, [sp], #16
  403290:	ret
