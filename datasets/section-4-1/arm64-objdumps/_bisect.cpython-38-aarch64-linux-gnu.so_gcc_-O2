
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0xfc38>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0x798>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	nop
     c48:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     c4c:	add	x0, x0, #0x228
     c50:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     c54:	add	x1, x1, #0x228
     c58:	cmp	x1, x0
     c5c:	b.eq	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>  // b.none
     c60:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     c64:	ldr	x1, [x1, #4016]
     c68:	cbz	x1, c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     c6c:	mov	x16, x1
     c70:	br	x16
     c74:	ret
     c78:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     c7c:	add	x0, x0, #0x228
     c80:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     c84:	add	x1, x1, #0x228
     c88:	sub	x1, x1, x0
     c8c:	lsr	x2, x1, #63
     c90:	add	x1, x2, x1, asr #3
     c94:	cmp	xzr, x1, asr #1
     c98:	asr	x1, x1, #1
     c9c:	b.eq	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>  // b.none
     ca0:	adrp	x2, 11000 <PyInit__bisect@@Base+0xfc38>
     ca4:	ldr	x2, [x2, #4056]
     ca8:	cbz	x2, cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     cac:	mov	x16, x2
     cb0:	br	x16
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-32]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	adrp	x19, 12000 <PyInit__bisect@@Base+0x10c38>
     cc8:	ldrb	w0, [x19, #552]
     ccc:	cbnz	w0, cf4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xd4>
     cd0:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     cd4:	ldr	x0, [x0, #4024]
     cd8:	cbz	x0, ce8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc8>
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
     ce0:	ldr	x0, [x0, #96]
     ce4:	bl	b80 <__cxa_finalize@plt>
     ce8:	bl	c48 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x28>
     cec:	mov	w0, #0x1                   	// #1
     cf0:	strb	w0, [x19, #552]
     cf4:	ldr	x19, [sp, #16]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ret
     d00:	b	c78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58>
     d04:	nop
     d08:	stp	x29, x30, [sp, #-112]!
     d0c:	mov	x0, #0xffffffffffffffff    	// #-1
     d10:	mov	x29, sp
     d14:	stp	x21, x22, [sp, #32]
     d18:	stp	x23, x24, [sp, #48]
     d1c:	str	x25, [sp, #64]
     d20:	stp	xzr, x0, [sp, #96]
     d24:	mov	x0, x1
     d28:	mov	x1, x2
     d2c:	cbz	x2, e8c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x26c>
     d30:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
     d34:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     d38:	add	x3, x3, #0x68
     d3c:	add	x2, x2, #0x3f0
     d40:	add	x7, sp, #0x68
     d44:	add	x6, sp, #0x60
     d48:	add	x5, sp, #0x58
     d4c:	add	x4, sp, #0x50
     d50:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     d54:	cbz	w0, e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     d58:	ldp	x21, x22, [sp, #96]
     d5c:	ldp	x24, x25, [sp, #80]
     d60:	tbnz	x21, #63, ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     d64:	cmn	x22, #0x1
     d68:	b.eq	ea4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x284>  // b.none
     d6c:	cmp	x21, x22
     d70:	b.ge	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>  // b.tcont
     d74:	stp	x19, x20, [sp, #16]
     d78:	b	d88 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x168>
     d7c:	add	x21, x19, #0x1
     d80:	cmp	x22, x21
     d84:	b.le	de0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c0>
     d88:	add	x19, x21, x22
     d8c:	mov	x0, x24
     d90:	lsr	x19, x19, #1
     d94:	mov	x1, x19
     d98:	bl	bb0 <PySequence_GetItem@plt>
     d9c:	mov	x20, x0
     da0:	mov	w2, #0x0                   	// #0
     da4:	mov	x0, x25
     da8:	mov	x1, x20
     dac:	cbz	x20, e70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x250>
     db0:	bl	bd0 <PyObject_RichCompareBool@plt>
     db4:	mov	w23, w0
     db8:	ldr	x1, [x20]
     dbc:	sub	x1, x1, #0x1
     dc0:	str	x1, [x20]
     dc4:	cbz	x1, e5c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x23c>
     dc8:	cmp	w23, #0x0
     dcc:	b.lt	e70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x250>  // b.tstop
     dd0:	b.eq	d7c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x15c>  // b.none
     dd4:	mov	x22, x19
     dd8:	cmp	x22, x21
     ddc:	b.gt	d88 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x168>
     de0:	tbnz	x21, #63, e70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x250>
     de4:	ldp	x19, x20, [sp, #16]
     de8:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     dec:	ldp	x0, x4, [sp, #80]
     df0:	ldr	x1, [x1, #4064]
     df4:	ldr	x2, [x0, #8]
     df8:	cmp	x2, x1
     dfc:	b.eq	eb8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x298>  // b.none
     e00:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     e04:	add	x1, x1, #0x68
     e08:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     e0c:	mov	x3, x21
     e10:	add	x1, x1, #0x28
     e14:	add	x2, x2, #0x420
     e18:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     e1c:	cbz	x0, e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     e20:	ldr	x2, [x0]
     e24:	sub	x2, x2, #0x1
     e28:	str	x2, [x0]
     e2c:	cbz	x2, ecc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2ac>
     e30:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     e34:	ldp	x21, x22, [sp, #32]
     e38:	ldr	x1, [x1, #4048]
     e3c:	ldp	x23, x24, [sp, #48]
     e40:	mov	x0, x1
     e44:	ldr	x2, [x1]
     e48:	ldr	x25, [sp, #64]
     e4c:	add	x2, x2, #0x1
     e50:	str	x2, [x1]
     e54:	ldp	x29, x30, [sp], #112
     e58:	ret
     e5c:	mov	x0, x20
     e60:	bl	b90 <_Py_Dealloc@plt>
     e64:	cmp	w23, #0x0
     e68:	b.ge	dd0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1b0>  // b.tcont
     e6c:	nop
     e70:	ldp	x19, x20, [sp, #16]
     e74:	mov	x0, #0x0                   	// #0
     e78:	ldp	x21, x22, [sp, #32]
     e7c:	ldp	x23, x24, [sp, #48]
     e80:	ldr	x25, [sp, #64]
     e84:	ldp	x29, x30, [sp], #112
     e88:	ret
     e8c:	ldr	x2, [x0, #16]
     e90:	cmp	x2, #0x2
     e94:	b.ne	d30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x110>  // b.any
     e98:	ldp	x24, x25, [x0, #24]
     e9c:	mov	x21, #0x0                   	// #0
     ea0:	stp	x24, x25, [sp, #80]
     ea4:	mov	x0, x24
     ea8:	bl	be0 <PySequence_Size@plt>
     eac:	mov	x22, x0
     eb0:	tbz	x0, #63, d6c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x14c>
     eb4:	b	e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     eb8:	mov	x2, x4
     ebc:	mov	x1, x21
     ec0:	bl	b70 <PyList_Insert@plt>
     ec4:	tbz	w0, #31, e30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x210>
     ec8:	b	e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     ecc:	bl	b90 <_Py_Dealloc@plt>
     ed0:	b	e30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x210>
     ed4:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
     ed8:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     edc:	add	x1, x1, #0x408
     ee0:	ldr	x0, [x0, #4032]
     ee4:	ldr	x0, [x0]
     ee8:	bl	ba0 <PyErr_SetString@plt>
     eec:	b	e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     ef0:	stp	x29, x30, [sp, #-112]!
     ef4:	mov	x0, #0xffffffffffffffff    	// #-1
     ef8:	mov	x29, sp
     efc:	stp	x21, x22, [sp, #32]
     f00:	stp	x23, x24, [sp, #48]
     f04:	str	x25, [sp, #64]
     f08:	stp	xzr, x0, [sp, #96]
     f0c:	mov	x0, x1
     f10:	mov	x1, x2
     f14:	cbz	x2, 1074 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x454>
     f18:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
     f1c:	add	x3, x3, #0x68
     f20:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f24:	add	x3, x3, #0x40
     f28:	add	x7, sp, #0x68
     f2c:	add	x2, x2, #0x428
     f30:	add	x6, sp, #0x60
     f34:	add	x5, sp, #0x58
     f38:	add	x4, sp, #0x50
     f3c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     f40:	cbz	w0, 105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
     f44:	ldp	x21, x22, [sp, #96]
     f48:	ldp	x24, x25, [sp, #80]
     f4c:	tbnz	x21, #63, 10bc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x49c>
     f50:	cmn	x22, #0x1
     f54:	b.eq	108c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x46c>  // b.none
     f58:	cmp	x21, x22
     f5c:	b.ge	fd0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3b0>  // b.tcont
     f60:	stp	x19, x20, [sp, #16]
     f64:	b	f74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x354>
     f68:	add	x21, x19, #0x1
     f6c:	cmp	x22, x21
     f70:	b.le	fc8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a8>
     f74:	add	x19, x21, x22
     f78:	mov	x0, x24
     f7c:	lsr	x19, x19, #1
     f80:	mov	x1, x19
     f84:	bl	bb0 <PySequence_GetItem@plt>
     f88:	mov	x1, x25
     f8c:	mov	x20, x0
     f90:	mov	w2, #0x0                   	// #0
     f94:	cbz	x0, 1058 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x438>
     f98:	bl	bd0 <PyObject_RichCompareBool@plt>
     f9c:	mov	w23, w0
     fa0:	ldr	x1, [x20]
     fa4:	sub	x1, x1, #0x1
     fa8:	str	x1, [x20]
     fac:	cbz	x1, 1044 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x424>
     fb0:	cmp	w23, #0x0
     fb4:	b.lt	1058 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x438>  // b.tstop
     fb8:	b.ne	f68 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x348>  // b.any
     fbc:	mov	x22, x19
     fc0:	cmp	x22, x21
     fc4:	b.gt	f74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x354>
     fc8:	tbnz	x21, #63, 1058 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x438>
     fcc:	ldp	x19, x20, [sp, #16]
     fd0:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
     fd4:	ldp	x0, x4, [sp, #80]
     fd8:	ldr	x1, [x1, #4064]
     fdc:	ldr	x2, [x0, #8]
     fe0:	cmp	x2, x1
     fe4:	b.eq	10a0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x480>  // b.none
     fe8:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c38>
     fec:	add	x1, x1, #0x68
     ff0:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     ff4:	mov	x3, x21
     ff8:	add	x1, x1, #0x28
     ffc:	add	x2, x2, #0x420
    1000:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    1004:	cbz	x0, 105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
    1008:	ldr	x2, [x0]
    100c:	sub	x2, x2, #0x1
    1010:	str	x2, [x0]
    1014:	cbz	x2, 10b4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x494>
    1018:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc38>
    101c:	ldp	x21, x22, [sp, #32]
    1020:	ldr	x1, [x1, #4048]
    1024:	ldp	x23, x24, [sp, #48]
    1028:	mov	x0, x1
    102c:	ldr	x2, [x1]
    1030:	ldr	x25, [sp, #64]
    1034:	add	x2, x2, #0x1
    1038:	str	x2, [x1]
    103c:	ldp	x29, x30, [sp], #112
    1040:	ret
    1044:	mov	x0, x20
    1048:	bl	b90 <_Py_Dealloc@plt>
    104c:	cmp	w23, #0x0
    1050:	b.ge	fb8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x398>  // b.tcont
    1054:	nop
    1058:	ldp	x19, x20, [sp, #16]
    105c:	mov	x0, #0x0                   	// #0
    1060:	ldp	x21, x22, [sp, #32]
    1064:	ldp	x23, x24, [sp, #48]
    1068:	ldr	x25, [sp, #64]
    106c:	ldp	x29, x30, [sp], #112
    1070:	ret
    1074:	ldr	x2, [x0, #16]
    1078:	cmp	x2, #0x2
    107c:	b.ne	f18 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2f8>  // b.any
    1080:	ldp	x24, x25, [x0, #24]
    1084:	mov	x21, #0x0                   	// #0
    1088:	stp	x24, x25, [sp, #80]
    108c:	mov	x0, x24
    1090:	bl	be0 <PySequence_Size@plt>
    1094:	mov	x22, x0
    1098:	tbz	x0, #63, f58 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x338>
    109c:	b	105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
    10a0:	mov	x2, x4
    10a4:	mov	x1, x21
    10a8:	bl	b70 <PyList_Insert@plt>
    10ac:	tbz	w0, #31, 1018 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3f8>
    10b0:	b	105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
    10b4:	bl	b90 <_Py_Dealloc@plt>
    10b8:	b	1018 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3f8>
    10bc:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    10c0:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    10c4:	add	x1, x1, #0x408
    10c8:	ldr	x0, [x0, #4032]
    10cc:	ldr	x0, [x0]
    10d0:	bl	ba0 <PyErr_SetString@plt>
    10d4:	b	105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
    10d8:	stp	x29, x30, [sp, #-112]!
    10dc:	mov	x0, #0xffffffffffffffff    	// #-1
    10e0:	mov	x29, sp
    10e4:	stp	x21, x22, [sp, #32]
    10e8:	stp	x23, x24, [sp, #48]
    10ec:	str	x25, [sp, #64]
    10f0:	stp	xzr, x0, [sp, #96]
    10f4:	mov	x0, x1
    10f8:	mov	x1, x2
    10fc:	cbz	x2, 1204 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5e4>
    1100:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
    1104:	add	x3, x3, #0x68
    1108:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    110c:	add	x3, x3, #0x68
    1110:	add	x7, sp, #0x68
    1114:	add	x2, x2, #0x440
    1118:	add	x6, sp, #0x60
    111c:	add	x5, sp, #0x58
    1120:	add	x4, sp, #0x50
    1124:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1128:	cbz	w0, 11ec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5cc>
    112c:	ldp	x21, x22, [sp, #96]
    1130:	ldp	x24, x25, [sp, #80]
    1134:	tbnz	x21, #63, 1230 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x610>
    1138:	cmn	x22, #0x1
    113c:	b.eq	121c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5fc>  // b.none
    1140:	cmp	x21, x22
    1144:	b.ge	11bc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x59c>  // b.tcont
    1148:	stp	x19, x20, [sp, #16]
    114c:	b	115c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x53c>
    1150:	add	x21, x19, #0x1
    1154:	cmp	x22, x21
    1158:	b.le	11b4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x594>
    115c:	add	x19, x21, x22
    1160:	mov	x0, x24
    1164:	lsr	x19, x19, #1
    1168:	mov	x1, x19
    116c:	bl	bb0 <PySequence_GetItem@plt>
    1170:	mov	x20, x0
    1174:	mov	w2, #0x0                   	// #0
    1178:	mov	x0, x25
    117c:	mov	x1, x20
    1180:	cbz	x20, 11e8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5c8>
    1184:	bl	bd0 <PyObject_RichCompareBool@plt>
    1188:	mov	w23, w0
    118c:	ldr	x1, [x20]
    1190:	sub	x1, x1, #0x1
    1194:	str	x1, [x20]
    1198:	cbz	x1, 11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    119c:	cmp	w23, #0x0
    11a0:	b.lt	11e8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5c8>  // b.tstop
    11a4:	b.eq	1150 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x530>  // b.none
    11a8:	mov	x22, x19
    11ac:	cmp	x22, x21
    11b0:	b.gt	115c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x53c>
    11b4:	tbnz	x21, #63, 11e8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5c8>
    11b8:	ldp	x19, x20, [sp, #16]
    11bc:	mov	x0, x21
    11c0:	bl	bc0 <PyLong_FromSsize_t@plt>
    11c4:	ldp	x21, x22, [sp, #32]
    11c8:	ldp	x23, x24, [sp, #48]
    11cc:	ldr	x25, [sp, #64]
    11d0:	ldp	x29, x30, [sp], #112
    11d4:	ret
    11d8:	mov	x0, x20
    11dc:	bl	b90 <_Py_Dealloc@plt>
    11e0:	cmp	w23, #0x0
    11e4:	b.ge	11a4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x584>  // b.tcont
    11e8:	ldp	x19, x20, [sp, #16]
    11ec:	mov	x0, #0x0                   	// #0
    11f0:	ldp	x21, x22, [sp, #32]
    11f4:	ldp	x23, x24, [sp, #48]
    11f8:	ldr	x25, [sp, #64]
    11fc:	ldp	x29, x30, [sp], #112
    1200:	ret
    1204:	ldr	x2, [x0, #16]
    1208:	cmp	x2, #0x2
    120c:	b.ne	1100 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4e0>  // b.any
    1210:	ldp	x24, x25, [x0, #24]
    1214:	mov	x21, #0x0                   	// #0
    1218:	stp	x24, x25, [sp, #80]
    121c:	mov	x0, x24
    1220:	bl	be0 <PySequence_Size@plt>
    1224:	mov	x22, x0
    1228:	tbz	x0, #63, 1140 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x520>
    122c:	b	11ec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5cc>
    1230:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    1234:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1238:	add	x1, x1, #0x408
    123c:	ldr	x0, [x0, #4032]
    1240:	ldr	x0, [x0]
    1244:	bl	ba0 <PyErr_SetString@plt>
    1248:	b	11ec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5cc>
    124c:	nop
    1250:	stp	x29, x30, [sp, #-112]!
    1254:	mov	x0, #0xffffffffffffffff    	// #-1
    1258:	mov	x29, sp
    125c:	stp	x21, x22, [sp, #32]
    1260:	stp	x23, x24, [sp, #48]
    1264:	str	x25, [sp, #64]
    1268:	stp	xzr, x0, [sp, #96]
    126c:	mov	x0, x1
    1270:	mov	x1, x2
    1274:	cbz	x2, 137c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x75c>
    1278:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c38>
    127c:	add	x3, x3, #0x68
    1280:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1284:	add	x3, x3, #0x90
    1288:	add	x7, sp, #0x68
    128c:	add	x2, x2, #0x458
    1290:	add	x6, sp, #0x60
    1294:	add	x5, sp, #0x58
    1298:	add	x4, sp, #0x50
    129c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    12a0:	cbz	w0, 1364 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x744>
    12a4:	ldp	x21, x22, [sp, #96]
    12a8:	ldp	x24, x25, [sp, #80]
    12ac:	tbnz	x21, #63, 13a8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x788>
    12b0:	cmn	x22, #0x1
    12b4:	b.eq	1394 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x774>  // b.none
    12b8:	cmp	x21, x22
    12bc:	b.ge	1330 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x710>  // b.tcont
    12c0:	stp	x19, x20, [sp, #16]
    12c4:	b	12d4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b4>
    12c8:	add	x21, x19, #0x1
    12cc:	cmp	x22, x21
    12d0:	b.le	1328 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x708>
    12d4:	add	x19, x21, x22
    12d8:	mov	x0, x24
    12dc:	lsr	x19, x19, #1
    12e0:	mov	x1, x19
    12e4:	bl	bb0 <PySequence_GetItem@plt>
    12e8:	mov	x1, x25
    12ec:	mov	x20, x0
    12f0:	mov	w2, #0x0                   	// #0
    12f4:	cbz	x0, 1360 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x740>
    12f8:	bl	bd0 <PyObject_RichCompareBool@plt>
    12fc:	mov	w23, w0
    1300:	ldr	x1, [x20]
    1304:	sub	x1, x1, #0x1
    1308:	str	x1, [x20]
    130c:	cbz	x1, 134c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x72c>
    1310:	cmp	w23, #0x0
    1314:	b.lt	1360 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x740>  // b.tstop
    1318:	b.ne	12c8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a8>  // b.any
    131c:	mov	x22, x19
    1320:	cmp	x22, x21
    1324:	b.gt	12d4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b4>
    1328:	tbnz	x21, #63, 1360 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x740>
    132c:	ldp	x19, x20, [sp, #16]
    1330:	mov	x0, x21
    1334:	bl	bc0 <PyLong_FromSsize_t@plt>
    1338:	ldp	x21, x22, [sp, #32]
    133c:	ldp	x23, x24, [sp, #48]
    1340:	ldr	x25, [sp, #64]
    1344:	ldp	x29, x30, [sp], #112
    1348:	ret
    134c:	mov	x0, x20
    1350:	bl	b90 <_Py_Dealloc@plt>
    1354:	cmp	w23, #0x0
    1358:	b.ge	1318 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6f8>  // b.tcont
    135c:	nop
    1360:	ldp	x19, x20, [sp, #16]
    1364:	mov	x0, #0x0                   	// #0
    1368:	ldp	x21, x22, [sp, #32]
    136c:	ldp	x23, x24, [sp, #48]
    1370:	ldr	x25, [sp, #64]
    1374:	ldp	x29, x30, [sp], #112
    1378:	ret
    137c:	ldr	x2, [x0, #16]
    1380:	cmp	x2, #0x2
    1384:	b.ne	1278 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x658>  // b.any
    1388:	ldp	x24, x25, [x0, #24]
    138c:	mov	x21, #0x0                   	// #0
    1390:	stp	x24, x25, [sp, #80]
    1394:	mov	x0, x24
    1398:	bl	be0 <PySequence_Size@plt>
    139c:	mov	x22, x0
    13a0:	tbz	x0, #63, 12b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x698>
    13a4:	b	1364 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x744>
    13a8:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc38>
    13ac:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    13b0:	add	x1, x1, #0x408
    13b4:	ldr	x0, [x0, #4032]
    13b8:	ldr	x0, [x0]
    13bc:	bl	ba0 <PyErr_SetString@plt>
    13c0:	b	1364 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x744>
    13c4:	nop

00000000000013c8 <PyInit__bisect@@Base>:
    13c8:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c38>
    13cc:	add	x0, x0, #0x68
    13d0:	add	x0, x0, #0xb8
    13d4:	mov	w1, #0x3f5                 	// #1013
    13d8:	b	c00 <PyModule_Create2@plt>

Disassembly of section .fini:

00000000000013dc <.fini>:
    13dc:	stp	x29, x30, [sp, #-16]!
    13e0:	mov	x29, sp
    13e4:	ldp	x29, x30, [sp], #16
    13e8:	ret
