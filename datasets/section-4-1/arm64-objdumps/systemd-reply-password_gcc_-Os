
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d88 <_init>:
  400d88:	stp	x29, x30, [sp, #-16]!
  400d8c:	mov	x29, sp
  400d90:	bl	40143c <call_weak_fn>
  400d94:	ldp	x29, x30, [sp], #16
  400d98:	ret

Disassembly of section .plt:

0000000000400da0 <.plt>:
  400da0:	stp	x16, x30, [sp, #-16]!
  400da4:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400da8:	ldr	x17, [x16, #3856]
  400dac:	add	x16, x16, #0xf10
  400db0:	br	x17
  400db4:	nop
  400db8:	nop
  400dbc:	nop

0000000000400dc0 <read_line_full@plt>:
  400dc0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400dc4:	ldr	x17, [x16, #3864]
  400dc8:	add	x16, x16, #0xf18
  400dcc:	br	x17

0000000000400dd0 <sendto@plt>:
  400dd0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400dd4:	ldr	x17, [x16, #3872]
  400dd8:	add	x16, x16, #0xf20
  400ddc:	br	x17

0000000000400de0 <__libc_start_main@plt>:
  400de0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400de4:	ldr	x17, [x16, #3880]
  400de8:	add	x16, x16, #0xf28
  400dec:	br	x17

0000000000400df0 <__gmon_start__@plt>:
  400df0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400df4:	ldr	x17, [x16, #3888]
  400df8:	add	x16, x16, #0xf30
  400dfc:	br	x17

0000000000400e00 <polkit_agent_close@plt>:
  400e00:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e04:	ldr	x17, [x16, #3896]
  400e08:	add	x16, x16, #0xf38
  400e0c:	br	x17

0000000000400e10 <socket@plt>:
  400e10:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e14:	ldr	x17, [x16, #3904]
  400e18:	add	x16, x16, #0xf40
  400e1c:	br	x17

0000000000400e20 <log_setup_service@plt>:
  400e20:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e24:	ldr	x17, [x16, #3912]
  400e28:	add	x16, x16, #0xf48
  400e2c:	br	x17

0000000000400e30 <strjoin_real@plt>:
  400e30:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e34:	ldr	x17, [x16, #3920]
  400e38:	add	x16, x16, #0xf50
  400e3c:	br	x17

0000000000400e40 <safe_close@plt>:
  400e40:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e44:	ldr	x17, [x16, #3928]
  400e48:	add	x16, x16, #0xf58
  400e4c:	br	x17

0000000000400e50 <log_assert_failed_realm@plt>:
  400e50:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e54:	ldr	x17, [x16, #3936]
  400e58:	add	x16, x16, #0xf60
  400e5c:	br	x17

0000000000400e60 <malloc_usable_size@plt>:
  400e60:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e64:	ldr	x17, [x16, #3944]
  400e68:	add	x16, x16, #0xf68
  400e6c:	br	x17

0000000000400e70 <abort@plt>:
  400e70:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e74:	ldr	x17, [x16, #3952]
  400e78:	add	x16, x16, #0xf70
  400e7c:	br	x17

0000000000400e80 <__errno_location@plt>:
  400e80:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e84:	ldr	x17, [x16, #3960]
  400e88:	add	x16, x16, #0xf78
  400e8c:	br	x17

0000000000400e90 <__stack_chk_fail@plt>:
  400e90:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400e94:	ldr	x17, [x16, #3968]
  400e98:	add	x16, x16, #0xf80
  400e9c:	br	x17

0000000000400ea0 <explicit_bzero@plt>:
  400ea0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400ea4:	ldr	x17, [x16, #3976]
  400ea8:	add	x16, x16, #0xf88
  400eac:	br	x17

0000000000400eb0 <ask_password_agent_close@plt>:
  400eb0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400eb4:	ldr	x17, [x16, #3984]
  400eb8:	add	x16, x16, #0xf90
  400ebc:	br	x17

0000000000400ec0 <pager_close@plt>:
  400ec0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400ec4:	ldr	x17, [x16, #3992]
  400ec8:	add	x16, x16, #0xf98
  400ecc:	br	x17

0000000000400ed0 <log_internal_realm@plt>:
  400ed0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400ed4:	ldr	x17, [x16, #4000]
  400ed8:	add	x16, x16, #0xfa0
  400edc:	br	x17

0000000000400ee0 <strcmp@plt>:
  400ee0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400ee4:	ldr	x17, [x16, #4008]
  400ee8:	add	x16, x16, #0xfa8
  400eec:	br	x17

0000000000400ef0 <strdup@plt>:
  400ef0:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400ef4:	ldr	x17, [x16, #4016]
  400ef8:	add	x16, x16, #0xfb0
  400efc:	br	x17

0000000000400f00 <sockaddr_un_set_path@plt>:
  400f00:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f04:	ldr	x17, [x16, #4024]
  400f08:	add	x16, x16, #0xfb8
  400f0c:	br	x17

0000000000400f10 <free@plt>:
  400f10:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f14:	ldr	x17, [x16, #4032]
  400f18:	add	x16, x16, #0xfc0
  400f1c:	br	x17

0000000000400f20 <mac_selinux_finish@plt>:
  400f20:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f24:	ldr	x17, [x16, #4040]
  400f28:	add	x16, x16, #0xfc8
  400f2c:	br	x17

0000000000400f30 <strlen@plt>:
  400f30:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f34:	ldr	x17, [x16, #4048]
  400f38:	add	x16, x16, #0xfd0
  400f3c:	br	x17

0000000000400f40 <log_oom_internal@plt>:
  400f40:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f44:	ldr	x17, [x16, #4056]
  400f48:	add	x16, x16, #0xfd8
  400f4c:	br	x17

0000000000400f50 <memset@plt>:
  400f50:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f54:	ldr	x17, [x16, #4064]
  400f58:	add	x16, x16, #0xfe0
  400f5c:	br	x17

0000000000400f60 <log_get_max_level_realm@plt>:
  400f60:	adrp	x16, 411000 <__FRAME_END__+0xf718>
  400f64:	ldr	x17, [x16, #4072]
  400f68:	add	x16, x16, #0xfe8
  400f6c:	br	x17

Disassembly of section .text:

0000000000400f70 <main>:
  400f70:	stp	x29, x30, [sp, #-224]!
  400f74:	mov	x29, sp
  400f78:	stp	x19, x20, [sp, #16]
  400f7c:	adrp	x20, 411000 <__FRAME_END__+0xf718>
  400f80:	add	x20, x20, #0xcc8
  400f84:	stp	x21, x22, [sp, #32]
  400f88:	mov	w21, w0
  400f8c:	ldr	x0, [x20]
  400f90:	str	x0, [sp, #216]
  400f94:	mov	x0, #0x0                   	// #0
  400f98:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400f9c:	mov	x22, x1
  400fa0:	stp	x23, x24, [sp, #48]
  400fa4:	str	w21, [x0, #16]
  400fa8:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  400fac:	str	xzr, [sp, #72]
  400fb0:	str	x1, [x0]
  400fb4:	bl	400e20 <log_setup_service@plt>
  400fb8:	cmp	w21, #0x3
  400fbc:	b.eq	401004 <main+0x94>  // b.none
  400fc0:	mov	w0, #0x0                   	// #0
  400fc4:	bl	400f60 <log_get_max_level_realm@plt>
  400fc8:	cmp	w0, #0x2
  400fcc:	b.le	40139c <main+0x42c>
  400fd0:	mov	w1, #0x16                  	// #22
  400fd4:	adrp	x5, 401000 <main+0x90>
  400fd8:	adrp	x4, 401000 <main+0x90>
  400fdc:	adrp	x2, 401000 <main+0x90>
  400fe0:	add	x5, x5, #0x608
  400fe4:	add	x4, x4, #0x756
  400fe8:	add	x2, x2, #0x626
  400fec:	mov	w3, #0x2d                  	// #45
  400ff0:	movk	w1, #0x4000, lsl #16
  400ff4:	mov	w0, #0x3                   	// #3
  400ff8:	bl	400ed0 <log_internal_realm@plt>
  400ffc:	mov	w19, w0
  401000:	b	401098 <main+0x128>
  401004:	ldr	x19, [x22, #8]
  401008:	adrp	x1, 401000 <main+0x90>
  40100c:	add	x1, x1, #0x64a
  401010:	mov	x0, x19
  401014:	bl	400ee0 <strcmp@plt>
  401018:	cbnz	w0, 4011cc <main+0x25c>
  40101c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  401020:	add	x3, sp, #0x50
  401024:	mov	w2, #0x0                   	// #0
  401028:	mov	x1, #0x100000              	// #1048576
  40102c:	ldr	x0, [x0, #8]
  401030:	str	xzr, [sp, #80]
  401034:	bl	400dc0 <read_line_full@plt>
  401038:	mov	w19, w0
  40103c:	cmp	w0, #0x0
  401040:	b.ge	4010e0 <main+0x170>  // b.tcont
  401044:	mov	w0, #0x0                   	// #0
  401048:	bl	400f60 <log_get_max_level_realm@plt>
  40104c:	cmp	w0, #0x2
  401050:	b.le	401084 <main+0x114>
  401054:	adrp	x5, 401000 <main+0x90>
  401058:	adrp	x4, 401000 <main+0x90>
  40105c:	adrp	x2, 401000 <main+0x90>
  401060:	add	x5, x5, #0x64c
  401064:	add	x4, x4, #0x756
  401068:	add	x2, x2, #0x626
  40106c:	mov	w1, w19
  401070:	mov	w3, #0x34                  	// #52
  401074:	mov	w0, w21
  401078:	bl	400ed0 <log_internal_realm@plt>
  40107c:	mov	w19, w0
  401080:	b	401090 <main+0x120>
  401084:	neg	w19, w19
  401088:	and	w0, w19, #0xff
  40108c:	neg	w19, w0
  401090:	add	x0, sp, #0x50
  401094:	bl	401518 <erase_and_freep>
  401098:	mov	w21, #0xffffffff            	// #-1
  40109c:	mov	w0, w21
  4010a0:	bl	400e40 <safe_close@plt>
  4010a4:	add	x0, sp, #0x48
  4010a8:	bl	401518 <erase_and_freep>
  4010ac:	bl	400eb0 <ask_password_agent_close@plt>
  4010b0:	bl	400e00 <polkit_agent_close@plt>
  4010b4:	bl	400ec0 <pager_close@plt>
  4010b8:	bl	400f20 <mac_selinux_finish@plt>
  4010bc:	adrp	x0, 401000 <main+0x90>
  4010c0:	ldr	x0, [x0, #1832]
  4010c4:	cbnz	x0, 4013a8 <main+0x438>
  4010c8:	lsr	w0, w19, #31
  4010cc:	ldr	x2, [sp, #216]
  4010d0:	ldr	x1, [x20]
  4010d4:	eor	x1, x2, x1
  4010d8:	cbz	x1, 4013d8 <main+0x468>
  4010dc:	bl	400e90 <__stack_chk_fail@plt>
  4010e0:	b.ne	401118 <main+0x1a8>  // b.any
  4010e4:	bl	400f60 <log_get_max_level_realm@plt>
  4010e8:	cmp	w0, #0x2
  4010ec:	b.le	4011c4 <main+0x254>
  4010f0:	mov	w1, #0x5                   	// #5
  4010f4:	adrp	x5, 401000 <main+0x90>
  4010f8:	adrp	x4, 401000 <main+0x90>
  4010fc:	adrp	x2, 401000 <main+0x90>
  401100:	add	x5, x5, #0x668
  401104:	add	x4, x4, #0x756
  401108:	add	x2, x2, #0x626
  40110c:	mov	w3, #0x36                  	// #54
  401110:	movk	w1, #0x4000, lsl #16
  401114:	b	401074 <main+0x104>
  401118:	ldr	x1, [sp, #80]
  40111c:	mov	x2, #0x0                   	// #0
  401120:	adrp	x0, 401000 <main+0x90>
  401124:	add	x0, x0, #0x688
  401128:	bl	400e30 <strjoin_real@plt>
  40112c:	str	x0, [sp, #72]
  401130:	cbnz	x0, 401150 <main+0x1e0>
  401134:	adrp	x3, 401000 <main+0x90>
  401138:	mov	w2, #0x3b                  	// #59
  40113c:	add	x3, x3, #0x756
  401140:	adrp	x1, 401000 <main+0x90>
  401144:	add	x1, x1, #0x626
  401148:	bl	400f40 <log_oom_internal@plt>
  40114c:	b	40107c <main+0x10c>
  401150:	ldr	x0, [sp, #80]
  401154:	bl	400f30 <strlen@plt>
  401158:	add	x23, x0, #0x2
  40115c:	add	x0, sp, #0x50
  401160:	bl	401518 <erase_and_freep>
  401164:	mov	w1, #0x802                 	// #2050
  401168:	mov	w2, #0x0                   	// #0
  40116c:	movk	w1, #0x8, lsl #16
  401170:	mov	w0, #0x1                   	// #1
  401174:	bl	400e10 <socket@plt>
  401178:	mov	w21, w0
  40117c:	tbz	w0, #31, 40126c <main+0x2fc>
  401180:	bl	400e80 <__errno_location@plt>
  401184:	ldr	w19, [x0]
  401188:	mov	w0, #0x0                   	// #0
  40118c:	bl	400f60 <log_get_max_level_realm@plt>
  401190:	cmp	w0, #0x2
  401194:	b.le	401258 <main+0x2e8>
  401198:	adrp	x5, 401000 <main+0x90>
  40119c:	adrp	x4, 401000 <main+0x90>
  4011a0:	add	x5, x5, #0x6a8
  4011a4:	add	x4, x4, #0x756
  4011a8:	mov	w3, #0x4c                  	// #76
  4011ac:	mov	w1, w19
  4011b0:	adrp	x2, 401000 <main+0x90>
  4011b4:	mov	w0, #0x3                   	// #3
  4011b8:	add	x2, x2, #0x626
  4011bc:	bl	400ed0 <log_internal_realm@plt>
  4011c0:	b	401320 <main+0x3b0>
  4011c4:	mov	w19, #0xfffffffb            	// #-5
  4011c8:	b	401090 <main+0x120>
  4011cc:	adrp	x1, 401000 <main+0x90>
  4011d0:	mov	x0, x19
  4011d4:	add	x1, x1, #0x68a
  4011d8:	bl	400ee0 <strcmp@plt>
  4011dc:	cbnz	w0, 401214 <main+0x2a4>
  4011e0:	adrp	x0, 401000 <main+0x90>
  4011e4:	add	x0, x0, #0x68c
  4011e8:	bl	400ef0 <strdup@plt>
  4011ec:	str	x0, [sp, #72]
  4011f0:	mov	x23, #0x1                   	// #1
  4011f4:	cbnz	x0, 401164 <main+0x1f4>
  4011f8:	adrp	x3, 401000 <main+0x90>
  4011fc:	mov	w2, #0x42                  	// #66
  401200:	add	x3, x3, #0x756
  401204:	adrp	x1, 401000 <main+0x90>
  401208:	add	x1, x1, #0x626
  40120c:	bl	400f40 <log_oom_internal@plt>
  401210:	b	400ffc <main+0x8c>
  401214:	mov	w0, #0x0                   	// #0
  401218:	bl	400f60 <log_get_max_level_realm@plt>
  40121c:	cmp	w0, #0x2
  401220:	b.le	40139c <main+0x42c>
  401224:	mov	w1, #0x16                  	// #22
  401228:	mov	x6, x19
  40122c:	mov	w0, w21
  401230:	adrp	x5, 401000 <main+0x90>
  401234:	adrp	x4, 401000 <main+0x90>
  401238:	add	x5, x5, #0x68e
  40123c:	add	x4, x4, #0x756
  401240:	mov	w3, #0x47                  	// #71
  401244:	adrp	x2, 401000 <main+0x90>
  401248:	movk	w1, #0x4000, lsl #16
  40124c:	add	x2, x2, #0x626
  401250:	bl	400ed0 <log_internal_realm@plt>
  401254:	b	400ffc <main+0x8c>
  401258:	cmp	w19, #0x0
  40125c:	cneg	w19, w19, lt  // lt = tstop
  401260:	and	w0, w19, #0xff
  401264:	neg	w19, w0
  401268:	b	40109c <main+0x12c>
  40126c:	ldr	x22, [x22, #16]
  401270:	add	x0, sp, #0x58
  401274:	mov	x2, #0x80                  	// #128
  401278:	mov	w1, #0x0                   	// #0
  40127c:	ldr	x24, [sp, #72]
  401280:	bl	400f50 <memset@plt>
  401284:	cbnz	x22, 4012ac <main+0x33c>
  401288:	adrp	x4, 401000 <main+0x90>
  40128c:	adrp	x2, 401000 <main+0x90>
  401290:	adrp	x1, 401000 <main+0x90>
  401294:	add	x4, x4, #0x738
  401298:	add	x2, x2, #0x626
  40129c:	add	x1, x1, #0x6bc
  4012a0:	mov	w3, #0x17                  	// #23
  4012a4:	mov	w0, #0x0                   	// #0
  4012a8:	bl	400e50 <log_assert_failed_realm@plt>
  4012ac:	cbnz	x24, 4012d0 <main+0x360>
  4012b0:	adrp	x4, 401000 <main+0x90>
  4012b4:	adrp	x2, 401000 <main+0x90>
  4012b8:	adrp	x1, 401000 <main+0x90>
  4012bc:	add	x4, x4, #0x738
  4012c0:	add	x2, x2, #0x626
  4012c4:	add	x1, x1, #0x6c8
  4012c8:	mov	w3, #0x18                  	// #24
  4012cc:	b	4012a4 <main+0x334>
  4012d0:	mov	x1, x22
  4012d4:	add	x0, sp, #0x58
  4012d8:	bl	400f00 <sockaddr_un_set_path@plt>
  4012dc:	mov	w19, w0
  4012e0:	tbz	w0, #31, 401330 <main+0x3c0>
  4012e4:	mov	w0, #0x0                   	// #0
  4012e8:	bl	400f60 <log_get_max_level_realm@plt>
  4012ec:	cmp	w0, #0x2
  4012f0:	b.le	401328 <main+0x3b8>
  4012f4:	adrp	x5, 401000 <main+0x90>
  4012f8:	adrp	x4, 401000 <main+0x90>
  4012fc:	adrp	x2, 401000 <main+0x90>
  401300:	mov	x6, x22
  401304:	add	x5, x5, #0x6cf
  401308:	add	x4, x4, #0x747
  40130c:	add	x2, x2, #0x626
  401310:	mov	w1, w19
  401314:	mov	w3, #0x1c                  	// #28
  401318:	mov	w0, #0x3                   	// #3
  40131c:	bl	400ed0 <log_internal_realm@plt>
  401320:	mov	w19, w0
  401324:	b	40109c <main+0x12c>
  401328:	neg	w19, w19
  40132c:	b	401260 <main+0x2f0>
  401330:	mov	w5, w0
  401334:	add	x4, sp, #0x58
  401338:	mov	x2, x23
  40133c:	mov	x1, x24
  401340:	mov	w0, w21
  401344:	mov	w3, #0x4000                	// #16384
  401348:	bl	400dd0 <sendto@plt>
  40134c:	tbz	x0, #63, 401394 <main+0x424>
  401350:	bl	400e80 <__errno_location@plt>
  401354:	ldr	w19, [x0]
  401358:	mov	w0, #0x0                   	// #0
  40135c:	bl	400f60 <log_get_max_level_realm@plt>
  401360:	cmp	w0, #0x2
  401364:	b.le	401380 <main+0x410>
  401368:	adrp	x5, 401000 <main+0x90>
  40136c:	adrp	x4, 401000 <main+0x90>
  401370:	add	x5, x5, #0x70e
  401374:	add	x4, x4, #0x747
  401378:	mov	w3, #0x1f                  	// #31
  40137c:	b	4011ac <main+0x23c>
  401380:	cmp	w19, #0x0
  401384:	cneg	w19, w19, lt  // lt = tstop
  401388:	and	w19, w19, #0xff
  40138c:	neg	w19, w19
  401390:	b	40109c <main+0x12c>
  401394:	mov	w19, #0x0                   	// #0
  401398:	b	40109c <main+0x12c>
  40139c:	mov	w21, #0xffffffff            	// #-1
  4013a0:	mov	w19, #0xffffffea            	// #-22
  4013a4:	b	40109c <main+0x12c>
  4013a8:	add	x0, x0, #0x7
  4013ac:	adrp	x22, 401000 <main+0x90>
  4013b0:	and	x0, x0, #0xfffffffffffffff8
  4013b4:	ldr	x1, [x22, #1840]
  4013b8:	cmp	x0, x1
  4013bc:	b.cs	4010c8 <main+0x158>  // b.hs, b.nlast
  4013c0:	mov	x21, x0
  4013c4:	ldr	x1, [x0, #8]
  4013c8:	ldr	x0, [x21], #23
  4013cc:	blr	x1
  4013d0:	and	x0, x21, #0xfffffffffffffff8
  4013d4:	b	4013b4 <main+0x444>
  4013d8:	ldp	x19, x20, [sp, #16]
  4013dc:	ldp	x21, x22, [sp, #32]
  4013e0:	ldp	x23, x24, [sp, #48]
  4013e4:	ldp	x29, x30, [sp], #224
  4013e8:	ret

00000000004013ec <_start>:
  4013ec:	mov	x29, #0x0                   	// #0
  4013f0:	mov	x30, #0x0                   	// #0
  4013f4:	mov	x5, x0
  4013f8:	ldr	x1, [sp]
  4013fc:	add	x2, sp, #0x8
  401400:	mov	x6, sp
  401404:	movz	x0, #0x0, lsl #48
  401408:	movk	x0, #0x0, lsl #32
  40140c:	movk	x0, #0x40, lsl #16
  401410:	movk	x0, #0xf70
  401414:	movz	x3, #0x0, lsl #48
  401418:	movk	x3, #0x0, lsl #32
  40141c:	movk	x3, #0x40, lsl #16
  401420:	movk	x3, #0x1560
  401424:	movz	x4, #0x0, lsl #48
  401428:	movk	x4, #0x0, lsl #32
  40142c:	movk	x4, #0x40, lsl #16
  401430:	movk	x4, #0x15e0
  401434:	bl	400de0 <__libc_start_main@plt>
  401438:	bl	400e70 <abort@plt>

000000000040143c <call_weak_fn>:
  40143c:	adrp	x0, 411000 <__FRAME_END__+0xf718>
  401440:	ldr	x0, [x0, #4088]
  401444:	cbz	x0, 40144c <call_weak_fn+0x10>
  401448:	b	400df0 <__gmon_start__@plt>
  40144c:	ret

0000000000401450 <deregister_tm_clones>:
  401450:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  401454:	add	x1, x0, #0x0
  401458:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  40145c:	add	x0, x0, #0x0
  401460:	cmp	x1, x0
  401464:	b.eq	401490 <deregister_tm_clones+0x40>  // b.none
  401468:	sub	sp, sp, #0x10
  40146c:	adrp	x1, 401000 <main+0x90>
  401470:	ldr	x1, [x1, #1528]
  401474:	str	x1, [sp, #8]
  401478:	cbz	x1, 401488 <deregister_tm_clones+0x38>
  40147c:	mov	x16, x1
  401480:	add	sp, sp, #0x10
  401484:	br	x16
  401488:	add	sp, sp, #0x10
  40148c:	ret
  401490:	ret

0000000000401494 <register_tm_clones>:
  401494:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  401498:	add	x1, x0, #0x0
  40149c:	adrp	x0, 412000 <saved_argv@@SD_SHARED>
  4014a0:	add	x0, x0, #0x0
  4014a4:	sub	x1, x1, x0
  4014a8:	mov	x2, #0x2                   	// #2
  4014ac:	asr	x1, x1, #3
  4014b0:	sdiv	x1, x1, x2
  4014b4:	cbz	x1, 4014e0 <register_tm_clones+0x4c>
  4014b8:	sub	sp, sp, #0x10
  4014bc:	adrp	x2, 401000 <main+0x90>
  4014c0:	ldr	x2, [x2, #1536]
  4014c4:	str	x2, [sp, #8]
  4014c8:	cbz	x2, 4014d8 <register_tm_clones+0x44>
  4014cc:	mov	x16, x2
  4014d0:	add	sp, sp, #0x10
  4014d4:	br	x16
  4014d8:	add	sp, sp, #0x10
  4014dc:	ret
  4014e0:	ret

00000000004014e4 <__do_global_dtors_aux>:
  4014e4:	stp	x29, x30, [sp, #-32]!
  4014e8:	mov	x29, sp
  4014ec:	str	x19, [sp, #16]
  4014f0:	adrp	x19, 412000 <saved_argv@@SD_SHARED>
  4014f4:	ldrb	w0, [x19, #20]
  4014f8:	cbnz	w0, 401508 <__do_global_dtors_aux+0x24>
  4014fc:	bl	401450 <deregister_tm_clones>
  401500:	mov	w0, #0x1                   	// #1
  401504:	strb	w0, [x19, #20]
  401508:	ldr	x19, [sp, #16]
  40150c:	ldp	x29, x30, [sp], #32
  401510:	ret

0000000000401514 <frame_dummy>:
  401514:	b	401494 <register_tm_clones>

0000000000401518 <erase_and_freep>:
  401518:	stp	x29, x30, [sp, #-32]!
  40151c:	mov	x29, sp
  401520:	str	x19, [sp, #16]
  401524:	ldr	x19, [x0]
  401528:	cbz	x19, 401554 <erase_and_freep+0x3c>
  40152c:	mov	x0, x19
  401530:	bl	400e60 <malloc_usable_size@plt>
  401534:	mov	x1, x0
  401538:	cbz	x0, 401544 <erase_and_freep+0x2c>
  40153c:	mov	x0, x19
  401540:	bl	400ea0 <explicit_bzero@plt>
  401544:	mov	x0, x19
  401548:	ldr	x19, [sp, #16]
  40154c:	ldp	x29, x30, [sp], #32
  401550:	b	400f10 <free@plt>
  401554:	ldr	x19, [sp, #16]
  401558:	ldp	x29, x30, [sp], #32
  40155c:	ret

0000000000401560 <__libc_csu_init>:
  401560:	stp	x29, x30, [sp, #-64]!
  401564:	mov	x29, sp
  401568:	stp	x19, x20, [sp, #16]
  40156c:	adrp	x20, 411000 <__FRAME_END__+0xf718>
  401570:	add	x20, x20, #0xcc0
  401574:	stp	x21, x22, [sp, #32]
  401578:	adrp	x21, 411000 <__FRAME_END__+0xf718>
  40157c:	add	x21, x21, #0xcb8
  401580:	sub	x20, x20, x21
  401584:	mov	w22, w0
  401588:	stp	x23, x24, [sp, #48]
  40158c:	mov	x23, x1
  401590:	mov	x24, x2
  401594:	bl	400d88 <_init>
  401598:	cmp	xzr, x20, asr #3
  40159c:	b.eq	4015c8 <__libc_csu_init+0x68>  // b.none
  4015a0:	asr	x20, x20, #3
  4015a4:	mov	x19, #0x0                   	// #0
  4015a8:	ldr	x3, [x21, x19, lsl #3]
  4015ac:	mov	x2, x24
  4015b0:	add	x19, x19, #0x1
  4015b4:	mov	x1, x23
  4015b8:	mov	w0, w22
  4015bc:	blr	x3
  4015c0:	cmp	x20, x19
  4015c4:	b.ne	4015a8 <__libc_csu_init+0x48>  // b.any
  4015c8:	ldp	x19, x20, [sp, #16]
  4015cc:	ldp	x21, x22, [sp, #32]
  4015d0:	ldp	x23, x24, [sp, #48]
  4015d4:	ldp	x29, x30, [sp], #64
  4015d8:	ret
  4015dc:	nop

00000000004015e0 <__libc_csu_fini>:
  4015e0:	ret

Disassembly of section .fini:

00000000004015e4 <_fini>:
  4015e4:	stp	x29, x30, [sp, #-16]!
  4015e8:	mov	x29, sp
  4015ec:	ldp	x29, x30, [sp], #16
  4015f0:	ret
