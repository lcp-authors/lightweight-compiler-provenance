
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-journald_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000405a98 <_init>:
  405a98:	stp	x29, x30, [sp, #-16]!
  405a9c:	mov	x29, sp
  405aa0:	bl	406c90 <call_weak_fn>
  405aa4:	ldp	x29, x30, [sp], #16
  405aa8:	ret

Disassembly of section .plt:

0000000000405ab0 <.plt>:
  405ab0:	stp	x16, x30, [sp, #-16]!
  405ab4:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ab8:	ldr	x17, [x16, #1800]
  405abc:	add	x16, x16, #0x708
  405ac0:	br	x17
  405ac4:	nop
  405ac8:	nop
  405acc:	nop

0000000000405ad0 <internal_hashmap_remove@plt>:
  405ad0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ad4:	ldr	x17, [x16, #1808]
  405ad8:	add	x16, x16, #0x710
  405adc:	br	x17

0000000000405ae0 <random_bytes@plt>:
  405ae0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ae4:	ldr	x17, [x16, #1816]
  405ae8:	add	x16, x16, #0x718
  405aec:	br	x17

0000000000405af0 <sd_event_run@plt>:
  405af0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405af4:	ldr	x17, [x16, #1824]
  405af8:	add	x16, x16, #0x720
  405afc:	br	x17

0000000000405b00 <prioq_peek_by_index@plt>:
  405b00:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b04:	ldr	x17, [x16, #1832]
  405b08:	add	x16, x16, #0x728
  405b0c:	br	x17

0000000000405b10 <safe_fclose@plt>:
  405b10:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b14:	ldr	x17, [x16, #1840]
  405b18:	add	x16, x16, #0x730
  405b1c:	br	x17

0000000000405b20 <filename_is_valid@plt>:
  405b20:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b24:	ldr	x17, [x16, #1848]
  405b28:	add	x16, x16, #0x738
  405b2c:	br	x17

0000000000405b30 <prioq_remove@plt>:
  405b30:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b34:	ldr	x17, [x16, #1856]
  405b38:	add	x16, x16, #0x740
  405b3c:	br	x17

0000000000405b40 <sd_event_source_set_time@plt>:
  405b40:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b44:	ldr	x17, [x16, #1864]
  405b48:	add	x16, x16, #0x748
  405b4c:	br	x17

0000000000405b50 <unlink@plt>:
  405b50:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b54:	ldr	x17, [x16, #1872]
  405b58:	add	x16, x16, #0x750
  405b5c:	br	x17

0000000000405b60 <openat64@plt>:
  405b60:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b64:	ldr	x17, [x16, #1880]
  405b68:	add	x16, x16, #0x758
  405b6c:	br	x17

0000000000405b70 <internal_hashmap_free@plt>:
  405b70:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b74:	ldr	x17, [x16, #1888]
  405b78:	add	x16, x16, #0x760
  405b7c:	br	x17

0000000000405b80 <unhexchar@plt>:
  405b80:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b84:	ldr	x17, [x16, #1896]
  405b88:	add	x16, x16, #0x768
  405b8c:	br	x17

0000000000405b90 <strcspn@plt>:
  405b90:	adrp	x16, 441000 <wordlist.9471+0x208>
  405b94:	ldr	x17, [x16, #1904]
  405b98:	add	x16, x16, #0x770
  405b9c:	br	x17

0000000000405ba0 <strcmp_ptr@plt>:
  405ba0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ba4:	ldr	x17, [x16, #1912]
  405ba8:	add	x16, x16, #0x778
  405bac:	br	x17

0000000000405bb0 <pread64@plt>:
  405bb0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405bb4:	ldr	x17, [x16, #1920]
  405bb8:	add	x16, x16, #0x780
  405bbc:	br	x17

0000000000405bc0 <stpcpy@plt>:
  405bc0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405bc4:	ldr	x17, [x16, #1928]
  405bc8:	add	x16, x16, #0x788
  405bcc:	br	x17

0000000000405bd0 <__libc_start_main@plt>:
  405bd0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405bd4:	ldr	x17, [x16, #1936]
  405bd8:	add	x16, x16, #0x790
  405bdc:	br	x17

0000000000405be0 <journal_file_archive@plt>:
  405be0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405be4:	ldr	x17, [x16, #1944]
  405be8:	add	x16, x16, #0x798
  405bec:	br	x17

0000000000405bf0 <format_timespan@plt>:
  405bf0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405bf4:	ldr	x17, [x16, #1952]
  405bf8:	add	x16, x16, #0x7a0
  405bfc:	br	x17

0000000000405c00 <journal_file_open_reliably@plt>:
  405c00:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c04:	ldr	x17, [x16, #1960]
  405c08:	add	x16, x16, #0x7a8
  405c0c:	br	x17

0000000000405c10 <safe_atollu@plt>:
  405c10:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c14:	ldr	x17, [x16, #1968]
  405c18:	add	x16, x16, #0x7b0
  405c1c:	br	x17

0000000000405c20 <config_parse_log_level@plt>:
  405c20:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c24:	ldr	x17, [x16, #1976]
  405c28:	add	x16, x16, #0x7b8
  405c2c:	br	x17

0000000000405c30 <clock_gettime@plt>:
  405c30:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c34:	ldr	x17, [x16, #1984]
  405c38:	add	x16, x16, #0x7c0
  405c3c:	br	x17

0000000000405c40 <parse_boolean@plt>:
  405c40:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c44:	ldr	x17, [x16, #1992]
  405c48:	add	x16, x16, #0x7c8
  405c4c:	br	x17

0000000000405c50 <sd_id128_from_string@plt>:
  405c50:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c54:	ldr	x17, [x16, #2000]
  405c58:	add	x16, x16, #0x7d0
  405c5c:	br	x17

0000000000405c60 <config_parse_sec@plt>:
  405c60:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c64:	ldr	x17, [x16, #2008]
  405c68:	add	x16, x16, #0x7d8
  405c6c:	br	x17

0000000000405c70 <journal_file_append_entry@plt>:
  405c70:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c74:	ldr	x17, [x16, #2016]
  405c78:	add	x16, x16, #0x7e0
  405c7c:	br	x17

0000000000405c80 <mempcpy@plt>:
  405c80:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c84:	ldr	x17, [x16, #2024]
  405c88:	add	x16, x16, #0x7e8
  405c8c:	br	x17

0000000000405c90 <fileno@plt>:
  405c90:	adrp	x16, 441000 <wordlist.9471+0x208>
  405c94:	ldr	x17, [x16, #2032]
  405c98:	add	x16, x16, #0x7f0
  405c9c:	br	x17

0000000000405ca0 <__gmon_start__@plt>:
  405ca0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ca4:	ldr	x17, [x16, #2040]
  405ca8:	add	x16, x16, #0x7f8
  405cac:	br	x17

0000000000405cb0 <cescape@plt>:
  405cb0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405cb4:	ldr	x17, [x16, #2048]
  405cb8:	add	x16, x16, #0x800
  405cbc:	br	x17

0000000000405cc0 <sd_journal_open@plt>:
  405cc0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405cc4:	ldr	x17, [x16, #2056]
  405cc8:	add	x16, x16, #0x808
  405ccc:	br	x17

0000000000405cd0 <journal_file_move_to_object@plt>:
  405cd0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405cd4:	ldr	x17, [x16, #2064]
  405cd8:	add	x16, x16, #0x810
  405cdc:	br	x17

0000000000405ce0 <sd_device_get_devname@plt>:
  405ce0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ce4:	ldr	x17, [x16, #2072]
  405ce8:	add	x16, x16, #0x818
  405cec:	br	x17

0000000000405cf0 <internal_ordered_hashmap_new@plt>:
  405cf0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405cf4:	ldr	x17, [x16, #2080]
  405cf8:	add	x16, x16, #0x820
  405cfc:	br	x17

0000000000405d00 <internal_hashmap_contains@plt>:
  405d00:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d04:	ldr	x17, [x16, #2088]
  405d08:	add	x16, x16, #0x828
  405d0c:	br	x17

0000000000405d10 <rename@plt>:
  405d10:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d14:	ldr	x17, [x16, #2096]
  405d18:	add	x16, x16, #0x830
  405d1c:	br	x17

0000000000405d20 <get_process_exe@plt>:
  405d20:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d24:	ldr	x17, [x16, #2104]
  405d28:	add	x16, x16, #0x838
  405d2c:	br	x17

0000000000405d30 <log_parse_environment_realm@plt>:
  405d30:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d34:	ldr	x17, [x16, #2112]
  405d38:	add	x16, x16, #0x840
  405d3c:	br	x17

0000000000405d40 <varlink_server_new@plt>:
  405d40:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d44:	ldr	x17, [x16, #2120]
  405d48:	add	x16, x16, #0x848
  405d4c:	br	x17

0000000000405d50 <sd_event_default@plt>:
  405d50:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d54:	ldr	x17, [x16, #2128]
  405d58:	add	x16, x16, #0x850
  405d5c:	br	x17

0000000000405d60 <strnlen@plt>:
  405d60:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d64:	ldr	x17, [x16, #2136]
  405d68:	add	x16, x16, #0x858
  405d6c:	br	x17

0000000000405d70 <prioq_reshuffle@plt>:
  405d70:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d74:	ldr	x17, [x16, #2144]
  405d78:	add	x16, x16, #0x860
  405d7c:	br	x17

0000000000405d80 <parse_size@plt>:
  405d80:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d84:	ldr	x17, [x16, #2152]
  405d88:	add	x16, x16, #0x868
  405d8c:	br	x17

0000000000405d90 <path_startswith_strv@plt>:
  405d90:	adrp	x16, 441000 <wordlist.9471+0x208>
  405d94:	ldr	x17, [x16, #2160]
  405d98:	add	x16, x16, #0x870
  405d9c:	br	x17

0000000000405da0 <hidden_or_backup_file@plt>:
  405da0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405da4:	ldr	x17, [x16, #2168]
  405da8:	add	x16, x16, #0x878
  405dac:	br	x17

0000000000405db0 <socket@plt>:
  405db0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405db4:	ldr	x17, [x16, #2176]
  405db8:	add	x16, x16, #0x880
  405dbc:	br	x17

0000000000405dc0 <cg_pid_get_path_shifted@plt>:
  405dc0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405dc4:	ldr	x17, [x16, #2184]
  405dc8:	add	x16, x16, #0x888
  405dcc:	br	x17

0000000000405dd0 <varlink_server_bind_method_many_internal@plt>:
  405dd0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405dd4:	ldr	x17, [x16, #2192]
  405dd8:	add	x16, x16, #0x890
  405ddc:	br	x17

0000000000405de0 <snprintf@plt>:
  405de0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405de4:	ldr	x17, [x16, #2200]
  405de8:	add	x16, x16, #0x898
  405dec:	br	x17

0000000000405df0 <journal_reset_metrics@plt>:
  405df0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405df4:	ldr	x17, [x16, #2208]
  405df8:	add	x16, x16, #0x8a0
  405dfc:	br	x17

0000000000405e00 <procfs_memory_get@plt>:
  405e00:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e04:	ldr	x17, [x16, #2216]
  405e08:	add	x16, x16, #0x8a8
  405e0c:	br	x17

0000000000405e10 <journal_field_valid@plt>:
  405e10:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e14:	ldr	x17, [x16, #2224]
  405e18:	add	x16, x16, #0x8b0
  405e1c:	br	x17

0000000000405e20 <getpid_cached@plt>:
  405e20:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e24:	ldr	x17, [x16, #2232]
  405e28:	add	x16, x16, #0x8b8
  405e2c:	br	x17

0000000000405e30 <proc_cmdline_key_streq@plt>:
  405e30:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e34:	ldr	x17, [x16, #2240]
  405e38:	add	x16, x16, #0x8c0
  405e3c:	br	x17

0000000000405e40 <fprintf@plt>:
  405e40:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e44:	ldr	x17, [x16, #2248]
  405e48:	add	x16, x16, #0x8c8
  405e4c:	br	x17

0000000000405e50 <sd_event_add_time@plt>:
  405e50:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e54:	ldr	x17, [x16, #2256]
  405e58:	add	x16, x16, #0x8d0
  405e5c:	br	x17

0000000000405e60 <fd_nonblock@plt>:
  405e60:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e64:	ldr	x17, [x16, #2264]
  405e68:	add	x16, x16, #0x8d8
  405e6c:	br	x17

0000000000405e70 <journal_file_set_offline@plt>:
  405e70:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e74:	ldr	x17, [x16, #2272]
  405e78:	add	x16, x16, #0x8e0
  405e7c:	br	x17

0000000000405e80 <__cmsg_nxthdr@plt>:
  405e80:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e84:	ldr	x17, [x16, #2280]
  405e88:	add	x16, x16, #0x8e8
  405e8c:	br	x17

0000000000405e90 <memcpy@plt>:
  405e90:	adrp	x16, 441000 <wordlist.9471+0x208>
  405e94:	ldr	x17, [x16, #2288]
  405e98:	add	x16, x16, #0x8f0
  405e9c:	br	x17

0000000000405ea0 <siphash24@plt>:
  405ea0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ea4:	ldr	x17, [x16, #2296]
  405ea8:	add	x16, x16, #0x8f8
  405eac:	br	x17

0000000000405eb0 <getgid@plt>:
  405eb0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405eb4:	ldr	x17, [x16, #2304]
  405eb8:	add	x16, x16, #0x900
  405ebc:	br	x17

0000000000405ec0 <sd_event_get_state@plt>:
  405ec0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ec4:	ldr	x17, [x16, #2312]
  405ec8:	add	x16, x16, #0x908
  405ecc:	br	x17

0000000000405ed0 <journal_file_rotate@plt>:
  405ed0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ed4:	ldr	x17, [x16, #2320]
  405ed8:	add	x16, x16, #0x910
  405edc:	br	x17

0000000000405ee0 <sd_event_source_unref@plt>:
  405ee0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ee4:	ldr	x17, [x16, #2328]
  405ee8:	add	x16, x16, #0x918
  405eec:	br	x17

0000000000405ef0 <write_timestamp_file_atomic@plt>:
  405ef0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ef4:	ldr	x17, [x16, #2336]
  405ef8:	add	x16, x16, #0x920
  405efc:	br	x17

0000000000405f00 <journal_file_open@plt>:
  405f00:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f04:	ldr	x17, [x16, #2344]
  405f08:	add	x16, x16, #0x928
  405f0c:	br	x17

0000000000405f10 <strjoin_real@plt>:
  405f10:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f14:	ldr	x17, [x16, #2352]
  405f18:	add	x16, x16, #0x930
  405f1c:	br	x17

0000000000405f20 <sd_id128_randomize@plt>:
  405f20:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f24:	ldr	x17, [x16, #2360]
  405f28:	add	x16, x16, #0x938
  405f2c:	br	x17

0000000000405f30 <cg_path_get_user_unit@plt>:
  405f30:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f34:	ldr	x17, [x16, #2368]
  405f38:	add	x16, x16, #0x940
  405f3c:	br	x17

0000000000405f40 <safe_close@plt>:
  405f40:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f44:	ldr	x17, [x16, #2376]
  405f48:	add	x16, x16, #0x948
  405f4c:	br	x17

0000000000405f50 <__libc_current_sigrtmin@plt>:
  405f50:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f54:	ldr	x17, [x16, #2384]
  405f58:	add	x16, x16, #0x950
  405f5c:	br	x17

0000000000405f60 <varlink_server_listen_address@plt>:
  405f60:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f64:	ldr	x17, [x16, #2392]
  405f68:	add	x16, x16, #0x958
  405f6c:	br	x17

0000000000405f70 <munmap@plt>:
  405f70:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f74:	ldr	x17, [x16, #2400]
  405f78:	add	x16, x16, #0x960
  405f7c:	br	x17

0000000000405f80 <strftime@plt>:
  405f80:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f84:	ldr	x17, [x16, #2408]
  405f88:	add	x16, x16, #0x968
  405f8c:	br	x17

0000000000405f90 <config_parse_path@plt>:
  405f90:	adrp	x16, 441000 <wordlist.9471+0x208>
  405f94:	ldr	x17, [x16, #2416]
  405f98:	add	x16, x16, #0x970
  405f9c:	br	x17

0000000000405fa0 <dirfd@plt>:
  405fa0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405fa4:	ldr	x17, [x16, #2424]
  405fa8:	add	x16, x16, #0x978
  405fac:	br	x17

0000000000405fb0 <sd_device_get_sysname@plt>:
  405fb0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405fb4:	ldr	x17, [x16, #2432]
  405fb8:	add	x16, x16, #0x980
  405fbc:	br	x17

0000000000405fc0 <localtime_r@plt>:
  405fc0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405fc4:	ldr	x17, [x16, #2440]
  405fc8:	add	x16, x16, #0x988
  405fcc:	br	x17

0000000000405fd0 <log_assert_failed_realm@plt>:
  405fd0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405fd4:	ldr	x17, [x16, #2448]
  405fd8:	add	x16, x16, #0x990
  405fdc:	br	x17

0000000000405fe0 <cg_path_get_slice@plt>:
  405fe0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405fe4:	ldr	x17, [x16, #2456]
  405fe8:	add	x16, x16, #0x998
  405fec:	br	x17

0000000000405ff0 <sd_is_socket@plt>:
  405ff0:	adrp	x16, 441000 <wordlist.9471+0x208>
  405ff4:	ldr	x17, [x16, #2464]
  405ff8:	add	x16, x16, #0x9a0
  405ffc:	br	x17

0000000000406000 <readdir64@plt>:
  406000:	adrp	x16, 441000 <wordlist.9471+0x208>
  406004:	ldr	x17, [x16, #2472]
  406008:	add	x16, x16, #0x9a8
  40600c:	br	x17

0000000000406010 <fdset_free@plt>:
  406010:	adrp	x16, 441000 <wordlist.9471+0x208>
  406014:	ldr	x17, [x16, #2480]
  406018:	add	x16, x16, #0x9b0
  40601c:	br	x17

0000000000406020 <shutdown@plt>:
  406020:	adrp	x16, 441000 <wordlist.9471+0x208>
  406024:	ldr	x17, [x16, #2488]
  406028:	add	x16, x16, #0x9b8
  40602c:	br	x17

0000000000406030 <journal_file_close@plt>:
  406030:	adrp	x16, 441000 <wordlist.9471+0x208>
  406034:	ldr	x17, [x16, #2496]
  406038:	add	x16, x16, #0x9c0
  40603c:	br	x17

0000000000406040 <sd_event_now@plt>:
  406040:	adrp	x16, 441000 <wordlist.9471+0x208>
  406044:	ldr	x17, [x16, #2504]
  406048:	add	x16, x16, #0x9c8
  40604c:	br	x17

0000000000406050 <varlink_unref@plt>:
  406050:	adrp	x16, 441000 <wordlist.9471+0x208>
  406054:	ldr	x17, [x16, #2512]
  406058:	add	x16, x16, #0x9d0
  40605c:	br	x17

0000000000406060 <log_assert_failed_unreachable_realm@plt>:
  406060:	adrp	x16, 441000 <wordlist.9471+0x208>
  406064:	ldr	x17, [x16, #2520]
  406068:	add	x16, x16, #0x9d8
  40606c:	br	x17

0000000000406070 <sd_listen_fds@plt>:
  406070:	adrp	x16, 441000 <wordlist.9471+0x208>
  406074:	ldr	x17, [x16, #2528]
  406078:	add	x16, x16, #0x9e0
  40607c:	br	x17

0000000000406080 <journal_file_rotate_suggested@plt>:
  406080:	adrp	x16, 441000 <wordlist.9471+0x208>
  406084:	ldr	x17, [x16, #2536]
  406088:	add	x16, x16, #0x9e8
  40608c:	br	x17

0000000000406090 <sd_event_source_set_enabled@plt>:
  406090:	adrp	x16, 441000 <wordlist.9471+0x208>
  406094:	ldr	x17, [x16, #2544]
  406098:	add	x16, x16, #0x9f0
  40609c:	br	x17

00000000004060a0 <umask@plt>:
  4060a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060a4:	ldr	x17, [x16, #2552]
  4060a8:	add	x16, x16, #0x9f8
  4060ac:	br	x17

00000000004060b0 <cg_path_get_unit@plt>:
  4060b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060b4:	ldr	x17, [x16, #2560]
  4060b8:	add	x16, x16, #0xa00
  4060bc:	br	x17

00000000004060c0 <journal_file_copy_entry@plt>:
  4060c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060c4:	ldr	x17, [x16, #2568]
  4060c8:	add	x16, x16, #0xa08
  4060cc:	br	x17

00000000004060d0 <sd_device_get_devlink_first@plt>:
  4060d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060d4:	ldr	x17, [x16, #2576]
  4060d8:	add	x16, x16, #0xa10
  4060dc:	br	x17

00000000004060e0 <closedir@plt>:
  4060e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060e4:	ldr	x17, [x16, #2584]
  4060e8:	add	x16, x16, #0xa18
  4060ec:	br	x17

00000000004060f0 <sd_id128_get_boot@plt>:
  4060f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4060f4:	ldr	x17, [x16, #2592]
  4060f8:	add	x16, x16, #0xa20
  4060fc:	br	x17

0000000000406100 <__isoc99_sscanf@plt>:
  406100:	adrp	x16, 441000 <wordlist.9471+0x208>
  406104:	ldr	x17, [x16, #2600]
  406108:	add	x16, x16, #0xa28
  40610c:	br	x17

0000000000406110 <strncmp@plt>:
  406110:	adrp	x16, 441000 <wordlist.9471+0x208>
  406114:	ldr	x17, [x16, #2608]
  406118:	add	x16, x16, #0xa30
  40611c:	br	x17

0000000000406120 <access@plt>:
  406120:	adrp	x16, 441000 <wordlist.9471+0x208>
  406124:	ldr	x17, [x16, #2616]
  406128:	add	x16, x16, #0xa38
  40612c:	br	x17

0000000000406130 <prioq_put@plt>:
  406130:	adrp	x16, 441000 <wordlist.9471+0x208>
  406134:	ldr	x17, [x16, #2624]
  406138:	add	x16, x16, #0xa40
  40613c:	br	x17

0000000000406140 <sigprocmask_many@plt>:
  406140:	adrp	x16, 441000 <wordlist.9471+0x208>
  406144:	ldr	x17, [x16, #2632]
  406148:	add	x16, x16, #0xa48
  40614c:	br	x17

0000000000406150 <abort@plt>:
  406150:	adrp	x16, 441000 <wordlist.9471+0x208>
  406154:	ldr	x17, [x16, #2640]
  406158:	add	x16, x16, #0xa50
  40615c:	br	x17

0000000000406160 <greedy_realloc@plt>:
  406160:	adrp	x16, 441000 <wordlist.9471+0x208>
  406164:	ldr	x17, [x16, #2648]
  406168:	add	x16, x16, #0xa58
  40616c:	br	x17

0000000000406170 <set_iterate@plt>:
  406170:	adrp	x16, 441000 <wordlist.9471+0x208>
  406174:	ldr	x17, [x16, #2656]
  406178:	add	x16, x16, #0xa60
  40617c:	br	x17

0000000000406180 <mmap_cache_unref@plt>:
  406180:	adrp	x16, 441000 <wordlist.9471+0x208>
  406184:	ldr	x17, [x16, #2664]
  406188:	add	x16, x16, #0xa68
  40618c:	br	x17

0000000000406190 <sd_journal_close@plt>:
  406190:	adrp	x16, 441000 <wordlist.9471+0x208>
  406194:	ldr	x17, [x16, #2672]
  406198:	add	x16, x16, #0xa70
  40619c:	br	x17

00000000004061a0 <journal_initiate_close@plt>:
  4061a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061a4:	ldr	x17, [x16, #2680]
  4061a8:	add	x16, x16, #0xa78
  4061ac:	br	x17

00000000004061b0 <log_received_signal@plt>:
  4061b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061b4:	ldr	x17, [x16, #2688]
  4061b8:	add	x16, x16, #0xa80
  4061bc:	br	x17

00000000004061c0 <uid_is_valid@plt>:
  4061c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061c4:	ldr	x17, [x16, #2696]
  4061c8:	add	x16, x16, #0xa88
  4061cc:	br	x17

00000000004061d0 <strspn@plt>:
  4061d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061d4:	ldr	x17, [x16, #2704]
  4061d8:	add	x16, x16, #0xa90
  4061dc:	br	x17

00000000004061e0 <internal_hashmap_get@plt>:
  4061e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061e4:	ldr	x17, [x16, #2712]
  4061e8:	add	x16, x16, #0xa98
  4061ec:	br	x17

00000000004061f0 <chmod@plt>:
  4061f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4061f4:	ldr	x17, [x16, #2720]
  4061f8:	add	x16, x16, #0xaa0
  4061fc:	br	x17

0000000000406200 <mmap64@plt>:
  406200:	adrp	x16, 441000 <wordlist.9471+0x208>
  406204:	ldr	x17, [x16, #2728]
  406208:	add	x16, x16, #0xaa8
  40620c:	br	x17

0000000000406210 <fopen_temporary@plt>:
  406210:	adrp	x16, 441000 <wordlist.9471+0x208>
  406214:	ldr	x17, [x16, #2736]
  406218:	add	x16, x16, #0xab0
  40621c:	br	x17

0000000000406220 <sd_journal_seek_head@plt>:
  406220:	adrp	x16, 441000 <wordlist.9471+0x208>
  406224:	ldr	x17, [x16, #2744]
  406228:	add	x16, x16, #0xab8
  40622c:	br	x17

0000000000406230 <sockaddr_un_unlink@plt>:
  406230:	adrp	x16, 441000 <wordlist.9471+0x208>
  406234:	ldr	x17, [x16, #2752]
  406238:	add	x16, x16, #0xac0
  40623c:	br	x17

0000000000406240 <journal_directory_vacuum@plt>:
  406240:	adrp	x16, 441000 <wordlist.9471+0x208>
  406244:	ldr	x17, [x16, #2760]
  406248:	add	x16, x16, #0xac8
  40624c:	br	x17

0000000000406250 <__fxstat64@plt>:
  406250:	adrp	x16, 441000 <wordlist.9471+0x208>
  406254:	ldr	x17, [x16, #2768]
  406258:	add	x16, x16, #0xad0
  40625c:	br	x17

0000000000406260 <__fxstatat64@plt>:
  406260:	adrp	x16, 441000 <wordlist.9471+0x208>
  406264:	ldr	x17, [x16, #2776]
  406268:	add	x16, x16, #0xad8
  40626c:	br	x17

0000000000406270 <parse_pid@plt>:
  406270:	adrp	x16, 441000 <wordlist.9471+0x208>
  406274:	ldr	x17, [x16, #2784]
  406278:	add	x16, x16, #0xae0
  40627c:	br	x17

0000000000406280 <get_process_comm@plt>:
  406280:	adrp	x16, 441000 <wordlist.9471+0x208>
  406284:	ldr	x17, [x16, #2792]
  406288:	add	x16, x16, #0xae8
  40628c:	br	x17

0000000000406290 <writev@plt>:
  406290:	adrp	x16, 441000 <wordlist.9471+0x208>
  406294:	ldr	x17, [x16, #2800]
  406298:	add	x16, x16, #0xaf0
  40629c:	br	x17

00000000004062a0 <touch@plt>:
  4062a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062a4:	ldr	x17, [x16, #2808]
  4062a8:	add	x16, x16, #0xaf8
  4062ac:	br	x17

00000000004062b0 <getuid@plt>:
  4062b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062b4:	ldr	x17, [x16, #2816]
  4062b8:	add	x16, x16, #0xb00
  4062bc:	br	x17

00000000004062c0 <pid_is_unwaited@plt>:
  4062c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062c4:	ldr	x17, [x16, #2824]
  4062c8:	add	x16, x16, #0xb08
  4062cc:	br	x17

00000000004062d0 <sd_event_source_set_floating@plt>:
  4062d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062d4:	ldr	x17, [x16, #2832]
  4062d8:	add	x16, x16, #0xb10
  4062dc:	br	x17

00000000004062e0 <__errno_location@plt>:
  4062e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062e4:	ldr	x17, [x16, #2840]
  4062e8:	add	x16, x16, #0xb18
  4062ec:	br	x17

00000000004062f0 <log_set_target@plt>:
  4062f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4062f4:	ldr	x17, [x16, #2848]
  4062f8:	add	x16, x16, #0xb20
  4062fc:	br	x17

0000000000406300 <fdset_size@plt>:
  406300:	adrp	x16, 441000 <wordlist.9471+0x208>
  406304:	ldr	x17, [x16, #2856]
  406308:	add	x16, x16, #0xb28
  40630c:	br	x17

0000000000406310 <fstatvfs64@plt>:
  406310:	adrp	x16, 441000 <wordlist.9471+0x208>
  406314:	ldr	x17, [x16, #2864]
  406318:	add	x16, x16, #0xb30
  40631c:	br	x17

0000000000406320 <sd_event_add_defer@plt>:
  406320:	adrp	x16, 441000 <wordlist.9471+0x208>
  406324:	ldr	x17, [x16, #2872]
  406328:	add	x16, x16, #0xb38
  40632c:	br	x17

0000000000406330 <read@plt>:
  406330:	adrp	x16, 441000 <wordlist.9471+0x208>
  406334:	ldr	x17, [x16, #2880]
  406338:	add	x16, x16, #0xb40
  40633c:	br	x17

0000000000406340 <safe_atoi@plt>:
  406340:	adrp	x16, 441000 <wordlist.9471+0x208>
  406344:	ldr	x17, [x16, #2888]
  406348:	add	x16, x16, #0xb48
  40634c:	br	x17

0000000000406350 <internal_set_new@plt>:
  406350:	adrp	x16, 441000 <wordlist.9471+0x208>
  406354:	ldr	x17, [x16, #2896]
  406358:	add	x16, x16, #0xb50
  40635c:	br	x17

0000000000406360 <get_process_gid@plt>:
  406360:	adrp	x16, 441000 <wordlist.9471+0x208>
  406364:	ldr	x17, [x16, #2904]
  406368:	add	x16, x16, #0xb58
  40636c:	br	x17

0000000000406370 <parse_env_file_sentinel@plt>:
  406370:	adrp	x16, 441000 <wordlist.9471+0x208>
  406374:	ldr	x17, [x16, #2912]
  406378:	add	x16, x16, #0xb60
  40637c:	br	x17

0000000000406380 <sd_event_source_set_priority@plt>:
  406380:	adrp	x16, 441000 <wordlist.9471+0x208>
  406384:	ldr	x17, [x16, #2920]
  406388:	add	x16, x16, #0xb68
  40638c:	br	x17

0000000000406390 <read_one_line_file@plt>:
  406390:	adrp	x16, 441000 <wordlist.9471+0x208>
  406394:	ldr	x17, [x16, #2928]
  406398:	add	x16, x16, #0xb70
  40639c:	br	x17

00000000004063a0 <strndup@plt>:
  4063a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063a4:	ldr	x17, [x16, #2936]
  4063a8:	add	x16, x16, #0xb78
  4063ac:	br	x17

00000000004063b0 <fdset_remove@plt>:
  4063b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063b4:	ldr	x17, [x16, #2944]
  4063b8:	add	x16, x16, #0xb80
  4063bc:	br	x17

00000000004063c0 <get_process_capeff@plt>:
  4063c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063c4:	ldr	x17, [x16, #2952]
  4063c8:	add	x16, x16, #0xb88
  4063cc:	br	x17

00000000004063d0 <listen@plt>:
  4063d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063d4:	ldr	x17, [x16, #2960]
  4063d8:	add	x16, x16, #0xb90
  4063dc:	br	x17

00000000004063e0 <__stack_chk_fail@plt>:
  4063e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063e4:	ldr	x17, [x16, #2968]
  4063e8:	add	x16, x16, #0xb98
  4063ec:	br	x17

00000000004063f0 <syslog_parse_priority@plt>:
  4063f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4063f4:	ldr	x17, [x16, #2976]
  4063f8:	add	x16, x16, #0xba0
  4063fc:	br	x17

0000000000406400 <sd_journal_next@plt>:
  406400:	adrp	x16, 441000 <wordlist.9471+0x208>
  406404:	ldr	x17, [x16, #2984]
  406408:	add	x16, x16, #0xba8
  40640c:	br	x17

0000000000406410 <prioq_size@plt>:
  406410:	adrp	x16, 441000 <wordlist.9471+0x208>
  406414:	ldr	x17, [x16, #2992]
  406418:	add	x16, x16, #0xbb0
  40641c:	br	x17

0000000000406420 <config_parse_uint64@plt>:
  406420:	adrp	x16, 441000 <wordlist.9471+0x208>
  406424:	ldr	x17, [x16, #3000]
  406428:	add	x16, x16, #0xbb8
  40642c:	br	x17

0000000000406430 <path_join_internal@plt>:
  406430:	adrp	x16, 441000 <wordlist.9471+0x208>
  406434:	ldr	x17, [x16, #3008]
  406438:	add	x16, x16, #0xbc0
  40643c:	br	x17

0000000000406440 <get_process_uid@plt>:
  406440:	adrp	x16, 441000 <wordlist.9471+0x208>
  406444:	ldr	x17, [x16, #3016]
  406448:	add	x16, x16, #0xbc8
  40644c:	br	x17

0000000000406450 <mac_selinux_use@plt>:
  406450:	adrp	x16, 441000 <wordlist.9471+0x208>
  406454:	ldr	x17, [x16, #3024]
  406458:	add	x16, x16, #0xbd0
  40645c:	br	x17

0000000000406460 <__xstat64@plt>:
  406460:	adrp	x16, 441000 <wordlist.9471+0x208>
  406464:	ldr	x17, [x16, #3032]
  406468:	add	x16, x16, #0xbd8
  40646c:	br	x17

0000000000406470 <log_set_prohibit_ipc@plt>:
  406470:	adrp	x16, 441000 <wordlist.9471+0x208>
  406474:	ldr	x17, [x16, #3040]
  406478:	add	x16, x16, #0xbe0
  40647c:	br	x17

0000000000406480 <sd_watchdog_enabled@plt>:
  406480:	adrp	x16, 441000 <wordlist.9471+0x208>
  406484:	ldr	x17, [x16, #3048]
  406488:	add	x16, x16, #0xbe8
  40648c:	br	x17

0000000000406490 <journal_file_dispose@plt>:
  406490:	adrp	x16, 441000 <wordlist.9471+0x208>
  406494:	ldr	x17, [x16, #3056]
  406498:	add	x16, x16, #0xbf0
  40649c:	br	x17

00000000004064a0 <cg_get_root_path@plt>:
  4064a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064a4:	ldr	x17, [x16, #3064]
  4064a8:	add	x16, x16, #0xbf8
  4064ac:	br	x17

00000000004064b0 <set_iovec_string_field@plt>:
  4064b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064b4:	ldr	x17, [x16, #3072]
  4064b8:	add	x16, x16, #0xc00
  4064bc:	br	x17

00000000004064c0 <varlink_server_unref@plt>:
  4064c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064c4:	ldr	x17, [x16, #3080]
  4064c8:	add	x16, x16, #0xc08
  4064cc:	br	x17

00000000004064d0 <log_level_from_string@plt>:
  4064d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064d4:	ldr	x17, [x16, #3088]
  4064d8:	add	x16, x16, #0xc10
  4064dc:	br	x17

00000000004064e0 <sigbus_install@plt>:
  4064e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064e4:	ldr	x17, [x16, #3096]
  4064e8:	add	x16, x16, #0xc18
  4064ec:	br	x17

00000000004064f0 <memcmp@plt>:
  4064f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4064f4:	ldr	x17, [x16, #3104]
  4064f8:	add	x16, x16, #0xc20
  4064fc:	br	x17

0000000000406500 <cmsg_close_all@plt>:
  406500:	adrp	x16, 441000 <wordlist.9471+0x208>
  406504:	ldr	x17, [x16, #3112]
  406508:	add	x16, x16, #0xc28
  40650c:	br	x17

0000000000406510 <sd_id128_get_machine@plt>:
  406510:	adrp	x16, 441000 <wordlist.9471+0x208>
  406514:	ldr	x17, [x16, #3120]
  406518:	add	x16, x16, #0xc30
  40651c:	br	x17

0000000000406520 <malloc@plt>:
  406520:	adrp	x16, 441000 <wordlist.9471+0x208>
  406524:	ldr	x17, [x16, #3128]
  406528:	add	x16, x16, #0xc38
  40652c:	br	x17

0000000000406530 <prioq_ensure_allocated@plt>:
  406530:	adrp	x16, 441000 <wordlist.9471+0x208>
  406534:	ldr	x17, [x16, #3136]
  406538:	add	x16, x16, #0xc40
  40653c:	br	x17

0000000000406540 <journal_file_is_offlining@plt>:
  406540:	adrp	x16, 441000 <wordlist.9471+0x208>
  406544:	ldr	x17, [x16, #3144]
  406548:	add	x16, x16, #0xc48
  40654c:	br	x17

0000000000406550 <close_many@plt>:
  406550:	adrp	x16, 441000 <wordlist.9471+0x208>
  406554:	ldr	x17, [x16, #3152]
  406558:	add	x16, x16, #0xc50
  40655c:	br	x17

0000000000406560 <safe_atou_full@plt>:
  406560:	adrp	x16, 441000 <wordlist.9471+0x208>
  406564:	ldr	x17, [x16, #3160]
  406568:	add	x16, x16, #0xc58
  40656c:	br	x17

0000000000406570 <open_terminal@plt>:
  406570:	adrp	x16, 441000 <wordlist.9471+0x208>
  406574:	ldr	x17, [x16, #3168]
  406578:	add	x16, x16, #0xc60
  40657c:	br	x17

0000000000406580 <internal_hashmap_size@plt>:
  406580:	adrp	x16, 441000 <wordlist.9471+0x208>
  406584:	ldr	x17, [x16, #3176]
  406588:	add	x16, x16, #0xc68
  40658c:	br	x17

0000000000406590 <log_internal_realm@plt>:
  406590:	adrp	x16, 441000 <wordlist.9471+0x208>
  406594:	ldr	x17, [x16, #3184]
  406598:	add	x16, x16, #0xc70
  40659c:	br	x17

00000000004065a0 <send@plt>:
  4065a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065a4:	ldr	x17, [x16, #3192]
  4065a8:	add	x16, x16, #0xc78
  4065ac:	br	x17

00000000004065b0 <bind@plt>:
  4065b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065b4:	ldr	x17, [x16, #3200]
  4065b8:	add	x16, x16, #0xc80
  4065bc:	br	x17

00000000004065c0 <audit_loginuid_from_pid@plt>:
  4065c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065c4:	ldr	x17, [x16, #3208]
  4065c8:	add	x16, x16, #0xc88
  4065cc:	br	x17

00000000004065d0 <sd_event_source_set_destroy_callback@plt>:
  4065d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065d4:	ldr	x17, [x16, #3216]
  4065d8:	add	x16, x16, #0xc90
  4065dc:	br	x17

00000000004065e0 <varlink_server_set_userdata@plt>:
  4065e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065e4:	ldr	x17, [x16, #3224]
  4065e8:	add	x16, x16, #0xc98
  4065ec:	br	x17

00000000004065f0 <hashmap_put@plt>:
  4065f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4065f4:	ldr	x17, [x16, #3232]
  4065f8:	add	x16, x16, #0xca0
  4065fc:	br	x17

0000000000406600 <utmp_wall@plt>:
  406600:	adrp	x16, 441000 <wordlist.9471+0x208>
  406604:	ldr	x17, [x16, #3240]
  406608:	add	x16, x16, #0xca8
  40660c:	br	x17

0000000000406610 <getpeercred@plt>:
  406610:	adrp	x16, 441000 <wordlist.9471+0x208>
  406614:	ldr	x17, [x16, #3248]
  406618:	add	x16, x16, #0xcb0
  40661c:	br	x17

0000000000406620 <fd_get_path@plt>:
  406620:	adrp	x16, 441000 <wordlist.9471+0x208>
  406624:	ldr	x17, [x16, #3256]
  406628:	add	x16, x16, #0xcb8
  40662c:	br	x17

0000000000406630 <fdset_new@plt>:
  406630:	adrp	x16, 441000 <wordlist.9471+0x208>
  406634:	ldr	x17, [x16, #3264]
  406638:	add	x16, x16, #0xcc0
  40663c:	br	x17

0000000000406640 <page_size@plt>:
  406640:	adrp	x16, 441000 <wordlist.9471+0x208>
  406644:	ldr	x17, [x16, #3272]
  406648:	add	x16, x16, #0xcc8
  40664c:	br	x17

0000000000406650 <ioctl@plt>:
  406650:	adrp	x16, 441000 <wordlist.9471+0x208>
  406654:	ldr	x17, [x16, #3280]
  406658:	add	x16, x16, #0xcd0
  40665c:	br	x17

0000000000406660 <now@plt>:
  406660:	adrp	x16, 441000 <wordlist.9471+0x208>
  406664:	ldr	x17, [x16, #3288]
  406668:	add	x16, x16, #0xcd8
  40666c:	br	x17

0000000000406670 <endswith@plt>:
  406670:	adrp	x16, 441000 <wordlist.9471+0x208>
  406674:	ldr	x17, [x16, #3296]
  406678:	add	x16, x16, #0xce0
  40667c:	br	x17

0000000000406680 <sd_event_add_io@plt>:
  406680:	adrp	x16, 441000 <wordlist.9471+0x208>
  406684:	ldr	x17, [x16, #3304]
  406688:	add	x16, x16, #0xce8
  40668c:	br	x17

0000000000406690 <log_syntax_internal@plt>:
  406690:	adrp	x16, 441000 <wordlist.9471+0x208>
  406694:	ldr	x17, [x16, #3312]
  406698:	add	x16, x16, #0xcf0
  40669c:	br	x17

00000000004066a0 <fd_inc_sndbuf@plt>:
  4066a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066a4:	ldr	x17, [x16, #3320]
  4066a8:	add	x16, x16, #0xcf8
  4066ac:	br	x17

00000000004066b0 <parse_uid@plt>:
  4066b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066b4:	ldr	x17, [x16, #3328]
  4066b8:	add	x16, x16, #0xd00
  4066bc:	br	x17

00000000004066c0 <string_table_lookup@plt>:
  4066c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066c4:	ldr	x17, [x16, #3336]
  4066c8:	add	x16, x16, #0xd08
  4066cc:	br	x17

00000000004066d0 <cg_path_get_owner_uid@plt>:
  4066d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066d4:	ldr	x17, [x16, #3344]
  4066d8:	add	x16, x16, #0xd10
  4066dc:	br	x17

00000000004066e0 <strcmp@plt>:
  4066e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066e4:	ldr	x17, [x16, #3352]
  4066e8:	add	x16, x16, #0xd18
  4066ec:	br	x17

00000000004066f0 <log_format_iovec@plt>:
  4066f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4066f4:	ldr	x17, [x16, #3360]
  4066f8:	add	x16, x16, #0xd20
  4066fc:	br	x17

0000000000406700 <json_variant_elements@plt>:
  406700:	adrp	x16, 441000 <wordlist.9471+0x208>
  406704:	ldr	x17, [x16, #3368]
  406708:	add	x16, x16, #0xd28
  40670c:	br	x17

0000000000406710 <recvmsg@plt>:
  406710:	adrp	x16, 441000 <wordlist.9471+0x208>
  406714:	ldr	x17, [x16, #3376]
  406718:	add	x16, x16, #0xd30
  40671c:	br	x17

0000000000406720 <get_process_cmdline@plt>:
  406720:	adrp	x16, 441000 <wordlist.9471+0x208>
  406724:	ldr	x17, [x16, #3384]
  406728:	add	x16, x16, #0xd38
  40672c:	br	x17

0000000000406730 <opendir@plt>:
  406730:	adrp	x16, 441000 <wordlist.9471+0x208>
  406734:	ldr	x17, [x16, #3392]
  406738:	add	x16, x16, #0xd40
  40673c:	br	x17

0000000000406740 <empty_or_root@plt>:
  406740:	adrp	x16, 441000 <wordlist.9471+0x208>
  406744:	ldr	x17, [x16, #3400]
  406748:	add	x16, x16, #0xd48
  40674c:	br	x17

0000000000406750 <memfd_get_sealed@plt>:
  406750:	adrp	x16, 441000 <wordlist.9471+0x208>
  406754:	ldr	x17, [x16, #3408]
  406758:	add	x16, x16, #0xd50
  40675c:	br	x17

0000000000406760 <internal_hashmap_iterate@plt>:
  406760:	adrp	x16, 441000 <wordlist.9471+0x208>
  406764:	ldr	x17, [x16, #3416]
  406768:	add	x16, x16, #0xd58
  40676c:	br	x17

0000000000406770 <strdup@plt>:
  406770:	adrp	x16, 441000 <wordlist.9471+0x208>
  406774:	ldr	x17, [x16, #3424]
  406778:	add	x16, x16, #0xd60
  40677c:	br	x17

0000000000406780 <calloc@plt>:
  406780:	adrp	x16, 441000 <wordlist.9471+0x208>
  406784:	ldr	x17, [x16, #3432]
  406788:	add	x16, x16, #0xd68
  40678c:	br	x17

0000000000406790 <getenv@plt>:
  406790:	adrp	x16, 441000 <wordlist.9471+0x208>
  406794:	ldr	x17, [x16, #3440]
  406798:	add	x16, x16, #0xd70
  40679c:	br	x17

00000000004067a0 <internal_hashmap_first_key_and_value@plt>:
  4067a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067a4:	ldr	x17, [x16, #3448]
  4067a8:	add	x16, x16, #0xd78
  4067ac:	br	x17

00000000004067b0 <cg_path_get_user_slice@plt>:
  4067b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067b4:	ldr	x17, [x16, #3456]
  4067b8:	add	x16, x16, #0xd80
  4067bc:	br	x17

00000000004067c0 <setsockopt@plt>:
  4067c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067c4:	ldr	x17, [x16, #3464]
  4067c8:	add	x16, x16, #0xd88
  4067cc:	br	x17

00000000004067d0 <hashmap_replace@plt>:
  4067d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067d4:	ldr	x17, [x16, #3472]
  4067d8:	add	x16, x16, #0xd90
  4067dc:	br	x17

00000000004067e0 <read_full_stream_full@plt>:
  4067e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067e4:	ldr	x17, [x16, #3480]
  4067e8:	add	x16, x16, #0xd98
  4067ec:	br	x17

00000000004067f0 <journal_file_post_change@plt>:
  4067f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4067f4:	ldr	x17, [x16, #3488]
  4067f8:	add	x16, x16, #0xda0
  4067fc:	br	x17

0000000000406800 <strchr@plt>:
  406800:	adrp	x16, 441000 <wordlist.9471+0x208>
  406804:	ldr	x17, [x16, #3496]
  406808:	add	x16, x16, #0xda8
  40680c:	br	x17

0000000000406810 <log_set_facility@plt>:
  406810:	adrp	x16, 441000 <wordlist.9471+0x208>
  406814:	ldr	x17, [x16, #3504]
  406818:	add	x16, x16, #0xdb0
  40681c:	br	x17

0000000000406820 <proc_cmdline_parse@plt>:
  406820:	adrp	x16, 441000 <wordlist.9471+0x208>
  406824:	ldr	x17, [x16, #3512]
  406828:	add	x16, x16, #0xdb8
  40682c:	br	x17

0000000000406830 <asprintf@plt>:
  406830:	adrp	x16, 441000 <wordlist.9471+0x208>
  406834:	ldr	x17, [x16, #3520]
  406838:	add	x16, x16, #0xdc0
  40683c:	br	x17

0000000000406840 <audit_session_from_pid@plt>:
  406840:	adrp	x16, 441000 <wordlist.9471+0x208>
  406844:	ldr	x17, [x16, #3528]
  406848:	add	x16, x16, #0xdc8
  40684c:	br	x17

0000000000406850 <timeval_load@plt>:
  406850:	adrp	x16, 441000 <wordlist.9471+0x208>
  406854:	ldr	x17, [x16, #3536]
  406858:	add	x16, x16, #0xdd0
  40685c:	br	x17

0000000000406860 <mkdir@plt>:
  406860:	adrp	x16, 441000 <wordlist.9471+0x208>
  406864:	ldr	x17, [x16, #3544]
  406868:	add	x16, x16, #0xdd8
  40686c:	br	x17

0000000000406870 <memchr@plt>:
  406870:	adrp	x16, 441000 <wordlist.9471+0x208>
  406874:	ldr	x17, [x16, #3552]
  406878:	add	x16, x16, #0xde0
  40687c:	br	x17

0000000000406880 <cg_path_get_session@plt>:
  406880:	adrp	x16, 441000 <wordlist.9471+0x208>
  406884:	ldr	x17, [x16, #3560]
  406888:	add	x16, x16, #0xde8
  40688c:	br	x17

0000000000406890 <sysconf@plt>:
  406890:	adrp	x16, 441000 <wordlist.9471+0x208>
  406894:	ldr	x17, [x16, #3568]
  406898:	add	x16, x16, #0xdf0
  40689c:	br	x17

00000000004068a0 <cunescape_length_with_prefix@plt>:
  4068a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068a4:	ldr	x17, [x16, #3576]
  4068a8:	add	x16, x16, #0xdf8
  4068ac:	br	x17

00000000004068b0 <getpeersec@plt>:
  4068b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068b4:	ldr	x17, [x16, #3584]
  4068b8:	add	x16, x16, #0xe00
  4068bc:	br	x17

00000000004068c0 <sd_id128_to_string@plt>:
  4068c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068c4:	ldr	x17, [x16, #3592]
  4068c8:	add	x16, x16, #0xe08
  4068cc:	br	x17

00000000004068d0 <accept4@plt>:
  4068d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068d4:	ldr	x17, [x16, #3600]
  4068d8:	add	x16, x16, #0xe10
  4068dc:	br	x17

00000000004068e0 <rm_rf@plt>:
  4068e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068e4:	ldr	x17, [x16, #3608]
  4068e8:	add	x16, x16, #0xe18
  4068ec:	br	x17

00000000004068f0 <prioq_free@plt>:
  4068f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4068f4:	ldr	x17, [x16, #3616]
  4068f8:	add	x16, x16, #0xe20
  4068fc:	br	x17

0000000000406900 <sockaddr_un_set_path@plt>:
  406900:	adrp	x16, 441000 <wordlist.9471+0x208>
  406904:	ldr	x17, [x16, #3624]
  406908:	add	x16, x16, #0xe28
  40690c:	br	x17

0000000000406910 <strstrip@plt>:
  406910:	adrp	x16, 441000 <wordlist.9471+0x208>
  406914:	ldr	x17, [x16, #3632]
  406918:	add	x16, x16, #0xe30
  40691c:	br	x17

0000000000406920 <unlinkat@plt>:
  406920:	adrp	x16, 441000 <wordlist.9471+0x208>
  406924:	ldr	x17, [x16, #3640]
  406928:	add	x16, x16, #0xe38
  40692c:	br	x17

0000000000406930 <free@plt>:
  406930:	adrp	x16, 441000 <wordlist.9471+0x208>
  406934:	ldr	x17, [x16, #3648]
  406938:	add	x16, x16, #0xe40
  40693c:	br	x17

0000000000406940 <varlink_server_attach_event@plt>:
  406940:	adrp	x16, 441000 <wordlist.9471+0x208>
  406944:	ldr	x17, [x16, #3656]
  406948:	add	x16, x16, #0xe48
  40694c:	br	x17

0000000000406950 <varlink_reply@plt>:
  406950:	adrp	x16, 441000 <wordlist.9471+0x208>
  406954:	ldr	x17, [x16, #3664]
  406958:	add	x16, x16, #0xe50
  40695c:	br	x17

0000000000406960 <sd_event_exit@plt>:
  406960:	adrp	x16, 441000 <wordlist.9471+0x208>
  406964:	ldr	x17, [x16, #3672]
  406968:	add	x16, x16, #0xe58
  40696c:	br	x17

0000000000406970 <fdset_put@plt>:
  406970:	adrp	x16, 441000 <wordlist.9471+0x208>
  406974:	ldr	x17, [x16, #3680]
  406978:	add	x16, x16, #0xe60
  40697c:	br	x17

0000000000406980 <sd_journal_set_data_threshold@plt>:
  406980:	adrp	x16, 441000 <wordlist.9471+0x208>
  406984:	ldr	x17, [x16, #3688]
  406988:	add	x16, x16, #0xe68
  40698c:	br	x17

0000000000406990 <memdup_suffix0@plt>:
  406990:	adrp	x16, 441000 <wordlist.9471+0x208>
  406994:	ldr	x17, [x16, #3696]
  406998:	add	x16, x16, #0xe70
  40699c:	br	x17

00000000004069a0 <strerror@plt>:
  4069a0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069a4:	ldr	x17, [x16, #3704]
  4069a8:	add	x16, x16, #0xe78
  4069ac:	br	x17

00000000004069b0 <sendmsg@plt>:
  4069b0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069b4:	ldr	x17, [x16, #3712]
  4069b8:	add	x16, x16, #0xe80
  4069bc:	br	x17

00000000004069c0 <sprintf@plt>:
  4069c0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069c4:	ldr	x17, [x16, #3720]
  4069c8:	add	x16, x16, #0xe88
  4069cc:	br	x17

00000000004069d0 <sd_device_unref@plt>:
  4069d0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069d4:	ldr	x17, [x16, #3728]
  4069d8:	add	x16, x16, #0xe90
  4069dc:	br	x17

00000000004069e0 <sd_is_socket_unix@plt>:
  4069e0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069e4:	ldr	x17, [x16, #3736]
  4069e8:	add	x16, x16, #0xe98
  4069ec:	br	x17

00000000004069f0 <config_parse_many_nulstr@plt>:
  4069f0:	adrp	x16, 441000 <wordlist.9471+0x208>
  4069f4:	ldr	x17, [x16, #3744]
  4069f8:	add	x16, x16, #0xea0
  4069fc:	br	x17

0000000000406a00 <internal_hashmap_ensure_allocated@plt>:
  406a00:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a04:	ldr	x17, [x16, #3752]
  406a08:	add	x16, x16, #0xea8
  406a0c:	br	x17

0000000000406a10 <gethostname_malloc@plt>:
  406a10:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a14:	ldr	x17, [x16, #3760]
  406a18:	add	x16, x16, #0xeb0
  406a1c:	br	x17

0000000000406a20 <config_parse_iec_uint64@plt>:
  406a20:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a24:	ldr	x17, [x16, #3768]
  406a28:	add	x16, x16, #0xeb8
  406a2c:	br	x17

0000000000406a30 <readlink_malloc@plt>:
  406a30:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a34:	ldr	x17, [x16, #3776]
  406a38:	add	x16, x16, #0xec0
  406a3c:	br	x17

0000000000406a40 <sd_event_unref@plt>:
  406a40:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a44:	ldr	x17, [x16, #3784]
  406a48:	add	x16, x16, #0xec8
  406a4c:	br	x17

0000000000406a50 <varlink_ref@plt>:
  406a50:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a54:	ldr	x17, [x16, #3792]
  406a58:	add	x16, x16, #0xed0
  406a5c:	br	x17

0000000000406a60 <mkdir_p@plt>:
  406a60:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a64:	ldr	x17, [x16, #3800]
  406a68:	add	x16, x16, #0xed8
  406a6c:	br	x17

0000000000406a70 <format_bytes_full@plt>:
  406a70:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a74:	ldr	x17, [x16, #3808]
  406a78:	add	x16, x16, #0xee0
  406a7c:	br	x17

0000000000406a80 <memmove@plt>:
  406a80:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a84:	ldr	x17, [x16, #3816]
  406a88:	add	x16, x16, #0xee8
  406a8c:	br	x17

0000000000406a90 <mmap_cache_new@plt>:
  406a90:	adrp	x16, 441000 <wordlist.9471+0x208>
  406a94:	ldr	x17, [x16, #3824]
  406a98:	add	x16, x16, #0xef0
  406a9c:	br	x17

0000000000406aa0 <fdset_iterate@plt>:
  406aa0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406aa4:	ldr	x17, [x16, #3832]
  406aa8:	add	x16, x16, #0xef8
  406aac:	br	x17

0000000000406ab0 <sd_event_add_signal@plt>:
  406ab0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406ab4:	ldr	x17, [x16, #3840]
  406ab8:	add	x16, x16, #0xf00
  406abc:	br	x17

0000000000406ac0 <connect@plt>:
  406ac0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406ac4:	ldr	x17, [x16, #3848]
  406ac8:	add	x16, x16, #0xf08
  406acc:	br	x17

0000000000406ad0 <open64@plt>:
  406ad0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406ad4:	ldr	x17, [x16, #3856]
  406ad8:	add	x16, x16, #0xf10
  406adc:	br	x17

0000000000406ae0 <sd_device_new_from_device_id@plt>:
  406ae0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406ae4:	ldr	x17, [x16, #3864]
  406ae8:	add	x16, x16, #0xf18
  406aec:	br	x17

0000000000406af0 <strlen@plt>:
  406af0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406af4:	ldr	x17, [x16, #3872]
  406af8:	add	x16, x16, #0xf20
  406afc:	br	x17

0000000000406b00 <mkdir_parents@plt>:
  406b00:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b04:	ldr	x17, [x16, #3880]
  406b08:	add	x16, x16, #0xf28
  406b0c:	br	x17

0000000000406b10 <config_parse_unsigned@plt>:
  406b10:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b14:	ldr	x17, [x16, #3888]
  406b18:	add	x16, x16, #0xf30
  406b1c:	br	x17

0000000000406b20 <fopen64@plt>:
  406b20:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b24:	ldr	x17, [x16, #3896]
  406b28:	add	x16, x16, #0xf38
  406b2c:	br	x17

0000000000406b30 <prioq_pop@plt>:
  406b30:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b34:	ldr	x17, [x16, #3904]
  406b38:	add	x16, x16, #0xf40
  406b3c:	br	x17

0000000000406b40 <audit_type_to_string@plt>:
  406b40:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b44:	ldr	x17, [x16, #3912]
  406b48:	add	x16, x16, #0xf48
  406b4c:	br	x17

0000000000406b50 <log_open@plt>:
  406b50:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b54:	ldr	x17, [x16, #3920]
  406b58:	add	x16, x16, #0xf50
  406b5c:	br	x17

0000000000406b60 <add_acls_for_user@plt>:
  406b60:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b64:	ldr	x17, [x16, #3928]
  406b68:	add	x16, x16, #0xf58
  406b6c:	br	x17

0000000000406b70 <log_oom_internal@plt>:
  406b70:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b74:	ldr	x17, [x16, #3936]
  406b78:	add	x16, x16, #0xf60
  406b7c:	br	x17

0000000000406b80 <config_parse_bool@plt>:
  406b80:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b84:	ldr	x17, [x16, #3944]
  406b88:	add	x16, x16, #0xf68
  406b8c:	br	x17

0000000000406b90 <fflush_and_check@plt>:
  406b90:	adrp	x16, 441000 <wordlist.9471+0x208>
  406b94:	ldr	x17, [x16, #3952]
  406b98:	add	x16, x16, #0xf70
  406b9c:	br	x17

0000000000406ba0 <journal_file_enable_post_change_timer@plt>:
  406ba0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406ba4:	ldr	x17, [x16, #3960]
  406ba8:	add	x16, x16, #0xf78
  406bac:	br	x17

0000000000406bb0 <sd_device_get_devlink_next@plt>:
  406bb0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406bb4:	ldr	x17, [x16, #3968]
  406bb8:	add	x16, x16, #0xf80
  406bbc:	br	x17

0000000000406bc0 <varlink_error_invalid_parameter@plt>:
  406bc0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406bc4:	ldr	x17, [x16, #3976]
  406bc8:	add	x16, x16, #0xf88
  406bcc:	br	x17

0000000000406bd0 <unit_name_is_valid@plt>:
  406bd0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406bd4:	ldr	x17, [x16, #3984]
  406bd8:	add	x16, x16, #0xf90
  406bdc:	br	x17

0000000000406be0 <timespec_load_nsec@plt>:
  406be0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406be4:	ldr	x17, [x16, #3992]
  406be8:	add	x16, x16, #0xf98
  406bec:	br	x17

0000000000406bf0 <sd_event_source_set_description@plt>:
  406bf0:	adrp	x16, 441000 <wordlist.9471+0x208>
  406bf4:	ldr	x17, [x16, #4000]
  406bf8:	add	x16, x16, #0xfa0
  406bfc:	br	x17

0000000000406c00 <varlink_get_userdata@plt>:
  406c00:	adrp	x16, 441000 <wordlist.9471+0x208>
  406c04:	ldr	x17, [x16, #4008]
  406c08:	add	x16, x16, #0xfa8
  406c0c:	br	x17

0000000000406c10 <posix_fallocate64@plt>:
  406c10:	adrp	x16, 441000 <wordlist.9471+0x208>
  406c14:	ldr	x17, [x16, #4016]
  406c18:	add	x16, x16, #0xfb0
  406c1c:	br	x17

0000000000406c20 <memset@plt>:
  406c20:	adrp	x16, 441000 <wordlist.9471+0x208>
  406c24:	ldr	x17, [x16, #4024]
  406c28:	add	x16, x16, #0xfb8
  406c2c:	br	x17

0000000000406c30 <log_get_max_level_realm@plt>:
  406c30:	adrp	x16, 441000 <wordlist.9471+0x208>
  406c34:	ldr	x17, [x16, #4032]
  406c38:	add	x16, x16, #0xfc0
  406c3c:	br	x17

Disassembly of section .text:

0000000000406c40 <_start>:
  406c40:	mov	x29, #0x0                   	// #0
  406c44:	mov	x30, #0x0                   	// #0
  406c48:	mov	x5, x0
  406c4c:	ldr	x1, [sp]
  406c50:	add	x2, sp, #0x8
  406c54:	mov	x6, sp
  406c58:	movz	x0, #0x0, lsl #48
  406c5c:	movk	x0, #0x0, lsl #32
  406c60:	movk	x0, #0x40, lsl #16
  406c64:	movk	x0, #0x6e08
  406c68:	movz	x3, #0x0, lsl #48
  406c6c:	movk	x3, #0x0, lsl #32
  406c70:	movk	x3, #0x42, lsl #16
  406c74:	movk	x3, #0x7558
  406c78:	movz	x4, #0x0, lsl #48
  406c7c:	movk	x4, #0x0, lsl #32
  406c80:	movk	x4, #0x42, lsl #16
  406c84:	movk	x4, #0x75d8
  406c88:	bl	405bd0 <__libc_start_main@plt>
  406c8c:	bl	406150 <abort@plt>

0000000000406c90 <call_weak_fn>:
  406c90:	adrp	x0, 441000 <wordlist.9471+0x208>
  406c94:	ldr	x0, [x0, #4048]
  406c98:	cbz	x0, 406ca0 <call_weak_fn+0x10>
  406c9c:	b	405ca0 <__gmon_start__@plt>
  406ca0:	ret

0000000000406ca4 <deregister_tm_clones>:
  406ca4:	stp	x29, x30, [sp, #-32]!
  406ca8:	mov	x29, sp
  406cac:	adrp	x0, 442000 <cached_printk_time.11702>
  406cb0:	add	x0, x0, #0x30
  406cb4:	str	x0, [sp, #24]
  406cb8:	ldr	x0, [sp, #24]
  406cbc:	str	x0, [sp, #24]
  406cc0:	ldr	x1, [sp, #24]
  406cc4:	adrp	x0, 442000 <cached_printk_time.11702>
  406cc8:	add	x0, x0, #0x30
  406ccc:	cmp	x1, x0
  406cd0:	b.eq	406d0c <deregister_tm_clones+0x68>  // b.none
  406cd4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406cd8:	add	x0, x0, #0x630
  406cdc:	ldr	x0, [x0]
  406ce0:	str	x0, [sp, #16]
  406ce4:	ldr	x0, [sp, #16]
  406ce8:	str	x0, [sp, #16]
  406cec:	ldr	x0, [sp, #16]
  406cf0:	cmp	x0, #0x0
  406cf4:	b.eq	406d10 <deregister_tm_clones+0x6c>  // b.none
  406cf8:	ldr	x1, [sp, #16]
  406cfc:	adrp	x0, 442000 <cached_printk_time.11702>
  406d00:	add	x0, x0, #0x30
  406d04:	blr	x1
  406d08:	b	406d10 <deregister_tm_clones+0x6c>
  406d0c:	nop
  406d10:	ldp	x29, x30, [sp], #32
  406d14:	ret

0000000000406d18 <register_tm_clones>:
  406d18:	stp	x29, x30, [sp, #-48]!
  406d1c:	mov	x29, sp
  406d20:	adrp	x0, 442000 <cached_printk_time.11702>
  406d24:	add	x0, x0, #0x30
  406d28:	str	x0, [sp, #40]
  406d2c:	ldr	x0, [sp, #40]
  406d30:	str	x0, [sp, #40]
  406d34:	ldr	x1, [sp, #40]
  406d38:	adrp	x0, 442000 <cached_printk_time.11702>
  406d3c:	add	x0, x0, #0x30
  406d40:	sub	x0, x1, x0
  406d44:	asr	x0, x0, #3
  406d48:	lsr	x1, x0, #63
  406d4c:	add	x0, x1, x0
  406d50:	asr	x0, x0, #1
  406d54:	str	x0, [sp, #32]
  406d58:	ldr	x0, [sp, #32]
  406d5c:	cmp	x0, #0x0
  406d60:	b.eq	406da0 <register_tm_clones+0x88>  // b.none
  406d64:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406d68:	add	x0, x0, #0x638
  406d6c:	ldr	x0, [x0]
  406d70:	str	x0, [sp, #24]
  406d74:	ldr	x0, [sp, #24]
  406d78:	str	x0, [sp, #24]
  406d7c:	ldr	x0, [sp, #24]
  406d80:	cmp	x0, #0x0
  406d84:	b.eq	406da4 <register_tm_clones+0x8c>  // b.none
  406d88:	ldr	x2, [sp, #24]
  406d8c:	ldr	x1, [sp, #32]
  406d90:	adrp	x0, 442000 <cached_printk_time.11702>
  406d94:	add	x0, x0, #0x30
  406d98:	blr	x2
  406d9c:	b	406da4 <register_tm_clones+0x8c>
  406da0:	nop
  406da4:	ldp	x29, x30, [sp], #48
  406da8:	ret

0000000000406dac <__do_global_dtors_aux>:
  406dac:	stp	x29, x30, [sp, #-16]!
  406db0:	mov	x29, sp
  406db4:	adrp	x0, 442000 <cached_printk_time.11702>
  406db8:	add	x0, x0, #0x30
  406dbc:	ldrb	w0, [x0]
  406dc0:	and	x0, x0, #0xff
  406dc4:	cmp	x0, #0x0
  406dc8:	b.ne	406de4 <__do_global_dtors_aux+0x38>  // b.any
  406dcc:	bl	406ca4 <deregister_tm_clones>
  406dd0:	adrp	x0, 442000 <cached_printk_time.11702>
  406dd4:	add	x0, x0, #0x30
  406dd8:	mov	w1, #0x1                   	// #1
  406ddc:	strb	w1, [x0]
  406de0:	b	406de8 <__do_global_dtors_aux+0x3c>
  406de4:	nop
  406de8:	ldp	x29, x30, [sp], #16
  406dec:	ret

0000000000406df0 <frame_dummy>:
  406df0:	stp	x29, x30, [sp, #-16]!
  406df4:	mov	x29, sp
  406df8:	bl	406d18 <register_tm_clones>
  406dfc:	nop
  406e00:	ldp	x29, x30, [sp], #16
  406e04:	ret

0000000000406e08 <main>:
  406e08:	sub	sp, sp, #0x390
  406e0c:	stp	x29, x30, [sp]
  406e10:	mov	x29, sp
  406e14:	stp	x19, x20, [sp, #16]
  406e18:	str	w0, [sp, #44]
  406e1c:	str	x1, [sp, #32]
  406e20:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  406e24:	add	x0, x0, #0xdf0
  406e28:	ldr	x1, [x0]
  406e2c:	str	x1, [sp, #904]
  406e30:	mov	x1, #0x0                   	// #0
  406e34:	ldr	w0, [sp, #44]
  406e38:	cmp	w0, #0x1
  406e3c:	b.le	406ebc <main+0xb4>
  406e40:	mov	w0, #0x3                   	// #3
  406e44:	str	w0, [sp, #108]
  406e48:	str	wzr, [sp, #112]
  406e4c:	str	wzr, [sp, #116]
  406e50:	ldr	w0, [sp, #116]
  406e54:	bl	406c30 <log_get_max_level_realm@plt>
  406e58:	mov	w1, w0
  406e5c:	ldr	w0, [sp, #108]
  406e60:	and	w0, w0, #0x7
  406e64:	cmp	w1, w0
  406e68:	b.lt	406eac <main+0xa4>  // b.tstop
  406e6c:	ldr	w0, [sp, #116]
  406e70:	lsl	w1, w0, #10
  406e74:	ldr	w0, [sp, #108]
  406e78:	orr	w6, w1, w0
  406e7c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406e80:	add	x1, x0, #0x643
  406e84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406e88:	add	x5, x0, #0x660
  406e8c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406e90:	add	x4, x0, #0x7a0
  406e94:	mov	w3, #0x15                  	// #21
  406e98:	mov	x2, x1
  406e9c:	ldr	w1, [sp, #112]
  406ea0:	mov	w0, w6
  406ea4:	bl	406590 <log_internal_realm@plt>
  406ea8:	b	406eb4 <main+0xac>
  406eac:	ldr	w0, [sp, #112]
  406eb0:	cmp	w0, #0x0
  406eb4:	mov	w0, #0x1                   	// #1
  406eb8:	b	40724c <main+0x444>
  406ebc:	mov	w0, #0x1                   	// #1
  406ec0:	bl	406470 <log_set_prohibit_ipc@plt>
  406ec4:	mov	w0, #0x7                   	// #7
  406ec8:	bl	4062f0 <log_set_target@plt>
  406ecc:	mov	w0, #0x28                  	// #40
  406ed0:	bl	406810 <log_set_facility@plt>
  406ed4:	mov	w0, #0x0                   	// #0
  406ed8:	bl	405d30 <log_parse_environment_realm@plt>
  406edc:	bl	406b50 <log_open@plt>
  406ee0:	mov	w0, #0x12                  	// #18
  406ee4:	bl	4060a0 <umask@plt>
  406ee8:	bl	4064e0 <sigbus_install@plt>
  406eec:	add	x0, sp, #0x88
  406ef0:	bl	415d60 <server_init>
  406ef4:	str	w0, [sp, #56]
  406ef8:	ldr	w0, [sp, #56]
  406efc:	cmp	w0, #0x0
  406f00:	b.lt	407230 <main+0x428>  // b.tstop
  406f04:	add	x0, sp, #0x88
  406f08:	mov	w1, #0x0                   	// #0
  406f0c:	bl	40c6e8 <server_vacuum>
  406f10:	add	x0, sp, #0x88
  406f14:	mov	w1, #0x1                   	// #1
  406f18:	bl	4119cc <server_flush_to_var>
  406f1c:	add	x0, sp, #0x88
  406f20:	bl	408768 <server_flush_dev_kmsg>
  406f24:	mov	w0, #0x7                   	// #7
  406f28:	str	w0, [sp, #60]
  406f2c:	str	wzr, [sp, #64]
  406f30:	str	wzr, [sp, #68]
  406f34:	ldr	w0, [sp, #68]
  406f38:	bl	406c30 <log_get_max_level_realm@plt>
  406f3c:	mov	w1, w0
  406f40:	ldr	w0, [sp, #60]
  406f44:	and	w0, w0, #0x7
  406f48:	cmp	w1, w0
  406f4c:	b.lt	406f98 <main+0x190>  // b.tstop
  406f50:	ldr	w0, [sp, #68]
  406f54:	lsl	w1, w0, #10
  406f58:	ldr	w0, [sp, #60]
  406f5c:	orr	w19, w1, w0
  406f60:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406f64:	add	x20, x0, #0x643
  406f68:	bl	405e20 <getpid_cached@plt>
  406f6c:	mov	w6, w0
  406f70:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406f74:	add	x5, x0, #0x688
  406f78:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406f7c:	add	x4, x0, #0x7a0
  406f80:	mov	w3, #0x2b                  	// #43
  406f84:	mov	x2, x20
  406f88:	ldr	w1, [sp, #64]
  406f8c:	mov	w0, w19
  406f90:	bl	406590 <log_internal_realm@plt>
  406f94:	b	406fa0 <main+0x198>
  406f98:	ldr	w0, [sp, #64]
  406f9c:	cmp	w0, #0x0
  406fa0:	add	x5, sp, #0x88
  406fa4:	mov	x4, #0x0                   	// #0
  406fa8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406fac:	add	x3, x0, #0x6b0
  406fb0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  406fb4:	add	x2, x0, #0x6c8
  406fb8:	mov	w1, #0x0                   	// #0
  406fbc:	mov	x0, x5
  406fc0:	bl	411278 <server_driver_message>
  406fc4:	add	x0, sp, #0x88
  406fc8:	mov	x1, #0x0                   	// #0
  406fcc:	bl	409f68 <server_space_usage_message>
  406fd0:	mov	x0, #0xffffffffffffffff    	// #-1
  406fd4:	str	x0, [sp, #120]
  406fd8:	ldr	x0, [sp, #168]
  406fdc:	bl	405ec0 <sd_event_get_state@plt>
  406fe0:	str	w0, [sp, #56]
  406fe4:	ldr	w0, [sp, #56]
  406fe8:	cmp	w0, #0x0
  406fec:	b.lt	407238 <main+0x430>  // b.tstop
  406ff0:	ldr	w0, [sp, #56]
  406ff4:	cmp	w0, #0x5
  406ff8:	b.eq	407188 <main+0x380>  // b.none
  406ffc:	mov	w0, #0x0                   	// #0
  407000:	bl	406660 <now@plt>
  407004:	str	x0, [sp, #128]
  407008:	ldr	x0, [sp, #616]
  40700c:	cmp	x0, #0x0
  407010:	b.eq	4070dc <main+0x2d4>  // b.none
  407014:	ldr	x0, [sp, #632]
  407018:	cmp	x0, #0x0
  40701c:	b.eq	4070dc <main+0x2d4>  // b.none
  407020:	ldr	x1, [sp, #632]
  407024:	ldr	x0, [sp, #616]
  407028:	add	x0, x1, x0
  40702c:	ldr	x1, [sp, #128]
  407030:	cmp	x1, x0
  407034:	b.ls	4070c4 <main+0x2bc>  // b.plast
  407038:	mov	w0, #0x6                   	// #6
  40703c:	str	w0, [sp, #72]
  407040:	str	wzr, [sp, #76]
  407044:	str	wzr, [sp, #80]
  407048:	ldr	w0, [sp, #80]
  40704c:	bl	406c30 <log_get_max_level_realm@plt>
  407050:	mov	w1, w0
  407054:	ldr	w0, [sp, #72]
  407058:	and	w0, w0, #0x7
  40705c:	cmp	w1, w0
  407060:	b.lt	4070a4 <main+0x29c>  // b.tstop
  407064:	ldr	w0, [sp, #80]
  407068:	lsl	w1, w0, #10
  40706c:	ldr	w0, [sp, #72]
  407070:	orr	w6, w1, w0
  407074:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407078:	add	x1, x0, #0x643
  40707c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407080:	add	x5, x0, #0x6f8
  407084:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407088:	add	x4, x0, #0x7a0
  40708c:	mov	w3, #0x45                  	// #69
  407090:	mov	x2, x1
  407094:	ldr	w1, [sp, #76]
  407098:	mov	w0, w6
  40709c:	bl	406590 <log_internal_realm@plt>
  4070a0:	b	4070ac <main+0x2a4>
  4070a4:	ldr	w0, [sp, #76]
  4070a8:	cmp	w0, #0x0
  4070ac:	add	x0, sp, #0x88
  4070b0:	bl	40b95c <server_rotate>
  4070b4:	add	x0, sp, #0x88
  4070b8:	mov	w1, #0x0                   	// #0
  4070bc:	bl	40c6e8 <server_vacuum>
  4070c0:	b	407184 <main+0x37c>
  4070c4:	ldr	x1, [sp, #632]
  4070c8:	ldr	x0, [sp, #616]
  4070cc:	add	x1, x1, x0
  4070d0:	ldr	x0, [sp, #128]
  4070d4:	sub	x0, x1, x0
  4070d8:	str	x0, [sp, #120]
  4070dc:	ldr	x0, [sp, #168]
  4070e0:	ldr	x1, [sp, #120]
  4070e4:	bl	405af0 <sd_event_run@plt>
  4070e8:	str	w0, [sp, #56]
  4070ec:	ldr	w0, [sp, #56]
  4070f0:	cmp	w0, #0x0
  4070f4:	b.ge	407174 <main+0x36c>  // b.tcont
  4070f8:	mov	w0, #0x3                   	// #3
  4070fc:	str	w0, [sp, #84]
  407100:	ldr	w0, [sp, #56]
  407104:	str	w0, [sp, #88]
  407108:	str	wzr, [sp, #92]
  40710c:	ldr	w0, [sp, #92]
  407110:	bl	406c30 <log_get_max_level_realm@plt>
  407114:	mov	w1, w0
  407118:	ldr	w0, [sp, #84]
  40711c:	and	w0, w0, #0x7
  407120:	cmp	w1, w0
  407124:	b.lt	407168 <main+0x360>  // b.tstop
  407128:	ldr	w0, [sp, #92]
  40712c:	lsl	w1, w0, #10
  407130:	ldr	w0, [sp, #84]
  407134:	orr	w6, w1, w0
  407138:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40713c:	add	x1, x0, #0x643
  407140:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407144:	add	x5, x0, #0x710
  407148:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40714c:	add	x4, x0, #0x7a0
  407150:	mov	w3, #0x5e                  	// #94
  407154:	mov	x2, x1
  407158:	ldr	w1, [sp, #88]
  40715c:	mov	w0, w6
  407160:	bl	406590 <log_internal_realm@plt>
  407164:	b	40723c <main+0x434>
  407168:	ldr	w0, [sp, #88]
  40716c:	cmp	w0, #0x0
  407170:	b	40723c <main+0x434>
  407174:	add	x0, sp, #0x88
  407178:	bl	416a8c <server_maybe_append_tags>
  40717c:	add	x0, sp, #0x88
  407180:	bl	41e248 <server_maybe_warn_forward_syslog_missed>
  407184:	b	406fd0 <main+0x1c8>
  407188:	nop
  40718c:	mov	w0, #0x7                   	// #7
  407190:	str	w0, [sp, #96]
  407194:	str	wzr, [sp, #100]
  407198:	str	wzr, [sp, #104]
  40719c:	ldr	w0, [sp, #104]
  4071a0:	bl	406c30 <log_get_max_level_realm@plt>
  4071a4:	mov	w1, w0
  4071a8:	ldr	w0, [sp, #96]
  4071ac:	and	w0, w0, #0x7
  4071b0:	cmp	w1, w0
  4071b4:	b.lt	407200 <main+0x3f8>  // b.tstop
  4071b8:	ldr	w0, [sp, #104]
  4071bc:	lsl	w1, w0, #10
  4071c0:	ldr	w0, [sp, #96]
  4071c4:	orr	w19, w1, w0
  4071c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4071cc:	add	x20, x0, #0x643
  4071d0:	bl	405e20 <getpid_cached@plt>
  4071d4:	mov	w6, w0
  4071d8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4071dc:	add	x5, x0, #0x730
  4071e0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4071e4:	add	x4, x0, #0x7a0
  4071e8:	mov	w3, #0x66                  	// #102
  4071ec:	mov	x2, x20
  4071f0:	ldr	w1, [sp, #100]
  4071f4:	mov	w0, w19
  4071f8:	bl	406590 <log_internal_realm@plt>
  4071fc:	b	407208 <main+0x400>
  407200:	ldr	w0, [sp, #100]
  407204:	cmp	w0, #0x0
  407208:	add	x5, sp, #0x88
  40720c:	mov	x4, #0x0                   	// #0
  407210:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407214:	add	x3, x0, #0x758
  407218:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40721c:	add	x2, x0, #0x770
  407220:	mov	w1, #0x0                   	// #0
  407224:	mov	x0, x5
  407228:	bl	411278 <server_driver_message>
  40722c:	b	40723c <main+0x434>
  407230:	nop
  407234:	b	40723c <main+0x434>
  407238:	nop
  40723c:	add	x0, sp, #0x88
  407240:	bl	416aa0 <server_done>
  407244:	ldr	w0, [sp, #56]
  407248:	lsr	w0, w0, #31
  40724c:	mov	w1, w0
  407250:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  407254:	add	x0, x0, #0xdf0
  407258:	ldr	x2, [sp, #904]
  40725c:	ldr	x0, [x0]
  407260:	eor	x0, x2, x0
  407264:	cmp	x0, #0x0
  407268:	b.eq	407270 <main+0x468>  // b.none
  40726c:	bl	4063e0 <__stack_chk_fail@plt>
  407270:	mov	w0, w1
  407274:	ldp	x19, x20, [sp, #16]
  407278:	ldp	x29, x30, [sp]
  40727c:	add	sp, sp, #0x390
  407280:	ret

0000000000407284 <sd_device_unrefp>:
  407284:	stp	x29, x30, [sp, #-32]!
  407288:	mov	x29, sp
  40728c:	str	x0, [sp, #24]
  407290:	ldr	x0, [sp, #24]
  407294:	ldr	x0, [x0]
  407298:	cmp	x0, #0x0
  40729c:	b.eq	4072ac <sd_device_unrefp+0x28>  // b.none
  4072a0:	ldr	x0, [sp, #24]
  4072a4:	ldr	x0, [x0]
  4072a8:	bl	4069d0 <sd_device_unref@plt>
  4072ac:	nop
  4072b0:	ldp	x29, x30, [sp], #32
  4072b4:	ret

00000000004072b8 <freep>:
  4072b8:	stp	x29, x30, [sp, #-32]!
  4072bc:	mov	x29, sp
  4072c0:	str	x0, [sp, #24]
  4072c4:	ldr	x0, [sp, #24]
  4072c8:	ldr	x0, [x0]
  4072cc:	bl	406930 <free@plt>
  4072d0:	nop
  4072d4:	ldp	x29, x30, [sp], #32
  4072d8:	ret

00000000004072dc <startswith>:
  4072dc:	stp	x29, x30, [sp, #-48]!
  4072e0:	mov	x29, sp
  4072e4:	str	x0, [sp, #24]
  4072e8:	str	x1, [sp, #16]
  4072ec:	ldr	x0, [sp, #16]
  4072f0:	bl	406af0 <strlen@plt>
  4072f4:	str	x0, [sp, #40]
  4072f8:	ldr	x2, [sp, #40]
  4072fc:	ldr	x1, [sp, #16]
  407300:	ldr	x0, [sp, #24]
  407304:	bl	406110 <strncmp@plt>
  407308:	cmp	w0, #0x0
  40730c:	b.ne	407320 <startswith+0x44>  // b.any
  407310:	ldr	x1, [sp, #24]
  407314:	ldr	x0, [sp, #40]
  407318:	add	x0, x1, x0
  40731c:	b	407324 <startswith+0x48>
  407320:	mov	x0, #0x0                   	// #0
  407324:	ldp	x29, x30, [sp], #48
  407328:	ret

000000000040732c <closep>:
  40732c:	stp	x29, x30, [sp, #-32]!
  407330:	mov	x29, sp
  407334:	str	x0, [sp, #24]
  407338:	ldr	x0, [sp, #24]
  40733c:	ldr	w0, [x0]
  407340:	bl	405f40 <safe_close@plt>
  407344:	nop
  407348:	ldp	x29, x30, [sp], #32
  40734c:	ret

0000000000407350 <safe_atou64>:
  407350:	stp	x29, x30, [sp, #-32]!
  407354:	mov	x29, sp
  407358:	str	x0, [sp, #24]
  40735c:	str	x1, [sp, #16]
  407360:	ldr	x1, [sp, #16]
  407364:	ldr	x0, [sp, #24]
  407368:	bl	405c10 <safe_atollu@plt>
  40736c:	ldp	x29, x30, [sp], #32
  407370:	ret

0000000000407374 <server_forward_kmsg>:
  407374:	stp	x29, x30, [sp, #-240]!
  407378:	mov	x29, sp
  40737c:	str	x19, [sp, #16]
  407380:	str	x0, [sp, #72]
  407384:	str	w1, [sp, #68]
  407388:	str	x2, [sp, #56]
  40738c:	str	x3, [sp, #48]
  407390:	str	x4, [sp, #40]
  407394:	adrp	x0, 441000 <wordlist.9471+0x208>
  407398:	ldr	x0, [x0, #4064]
  40739c:	ldr	x1, [x0]
  4073a0:	str	x1, [sp, #232]
  4073a4:	mov	x1, #0x0                   	// #0
  4073a8:	str	xzr, [sp, #104]
  4073ac:	str	wzr, [sp, #88]
  4073b0:	ldr	x0, [sp, #72]
  4073b4:	cmp	x0, #0x0
  4073b8:	cset	w0, eq  // eq = none
  4073bc:	and	w0, w0, #0xff
  4073c0:	and	x0, x0, #0xff
  4073c4:	cmp	x0, #0x0
  4073c8:	b.eq	4073f4 <server_forward_kmsg+0x80>  // b.none
  4073cc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4073d0:	add	x1, x0, #0x7ab
  4073d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4073d8:	add	x4, x0, #0xc60
  4073dc:	mov	w3, #0x27                  	// #39
  4073e0:	mov	x2, x1
  4073e4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4073e8:	add	x1, x0, #0x7c8
  4073ec:	mov	w0, #0x0                   	// #0
  4073f0:	bl	405fd0 <log_assert_failed_realm@plt>
  4073f4:	ldr	w0, [sp, #68]
  4073f8:	lsr	w0, w0, #31
  4073fc:	and	w0, w0, #0xff
  407400:	and	x0, x0, #0xff
  407404:	cmp	x0, #0x0
  407408:	b.eq	407434 <server_forward_kmsg+0xc0>  // b.none
  40740c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407410:	add	x1, x0, #0x7ab
  407414:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407418:	add	x4, x0, #0xc60
  40741c:	mov	w3, #0x28                  	// #40
  407420:	mov	x2, x1
  407424:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407428:	add	x1, x0, #0x7d0
  40742c:	mov	w0, #0x0                   	// #0
  407430:	bl	405fd0 <log_assert_failed_realm@plt>
  407434:	ldr	w0, [sp, #68]
  407438:	cmp	w0, #0x3e7
  40743c:	cset	w0, gt
  407440:	and	w0, w0, #0xff
  407444:	and	x0, x0, #0xff
  407448:	cmp	x0, #0x0
  40744c:	b.eq	407478 <server_forward_kmsg+0x104>  // b.none
  407450:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407454:	add	x1, x0, #0x7ab
  407458:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40745c:	add	x4, x0, #0xc60
  407460:	mov	w3, #0x29                  	// #41
  407464:	mov	x2, x1
  407468:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40746c:	add	x1, x0, #0x7e0
  407470:	mov	w0, #0x0                   	// #0
  407474:	bl	405fd0 <log_assert_failed_realm@plt>
  407478:	ldr	x0, [sp, #48]
  40747c:	cmp	x0, #0x0
  407480:	cset	w0, eq  // eq = none
  407484:	and	w0, w0, #0xff
  407488:	and	x0, x0, #0xff
  40748c:	cmp	x0, #0x0
  407490:	b.eq	4074bc <server_forward_kmsg+0x148>  // b.none
  407494:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407498:	add	x1, x0, #0x7ab
  40749c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4074a0:	add	x4, x0, #0xc60
  4074a4:	mov	w3, #0x2a                  	// #42
  4074a8:	mov	x2, x1
  4074ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4074b0:	add	x1, x0, #0x7f0
  4074b4:	mov	w0, #0x0                   	// #0
  4074b8:	bl	405fd0 <log_assert_failed_realm@plt>
  4074bc:	ldr	w0, [sp, #68]
  4074c0:	and	w1, w0, #0x7
  4074c4:	ldr	x0, [sp, #72]
  4074c8:	ldr	w0, [x0, #544]
  4074cc:	cmp	w1, w0
  4074d0:	cset	w0, gt
  4074d4:	and	w0, w0, #0xff
  4074d8:	and	x0, x0, #0xff
  4074dc:	cmp	x0, #0x0
  4074e0:	b.eq	4074ec <server_forward_kmsg+0x178>  // b.none
  4074e4:	mov	w19, #0x0                   	// #0
  4074e8:	b	407860 <server_forward_kmsg+0x4ec>
  4074ec:	ldr	x0, [sp, #72]
  4074f0:	ldr	w0, [x0, #12]
  4074f4:	lsr	w0, w0, #31
  4074f8:	and	w0, w0, #0xff
  4074fc:	and	x0, x0, #0xff
  407500:	cmp	x0, #0x0
  407504:	b.eq	407510 <server_forward_kmsg+0x19c>  // b.none
  407508:	mov	w19, #0x0                   	// #0
  40750c:	b	407860 <server_forward_kmsg+0x4ec>
  407510:	ldr	w0, [sp, #68]
  407514:	bl	41c8a8 <syslog_fixup_facility>
  407518:	str	w0, [sp, #68]
  40751c:	add	x4, sp, #0xc0
  407520:	ldr	w3, [sp, #68]
  407524:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407528:	add	x2, x0, #0x7f8
  40752c:	mov	x1, #0xf                   	// #15
  407530:	mov	x0, x4
  407534:	bl	405de0 <snprintf@plt>
  407538:	cmp	w0, #0xe
  40753c:	cset	w0, hi  // hi = pmore
  407540:	and	w0, w0, #0xff
  407544:	and	x0, x0, #0xff
  407548:	cmp	x0, #0x0
  40754c:	b.eq	407578 <server_forward_kmsg+0x204>  // b.none
  407550:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407554:	add	x1, x0, #0x7ab
  407558:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40755c:	add	x4, x0, #0xc60
  407560:	mov	w3, #0x37                  	// #55
  407564:	mov	x2, x1
  407568:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40756c:	add	x1, x0, #0x800
  407570:	mov	w0, #0x0                   	// #0
  407574:	bl	405fd0 <log_assert_failed_realm@plt>
  407578:	ldr	w19, [sp, #88]
  40757c:	add	w0, w19, #0x1
  407580:	str	w0, [sp, #88]
  407584:	add	x0, sp, #0xc0
  407588:	bl	406af0 <strlen@plt>
  40758c:	mov	x3, x0
  407590:	sxtw	x0, w19
  407594:	lsl	x0, x0, #4
  407598:	add	x1, sp, #0x70
  40759c:	add	x2, sp, #0xc0
  4075a0:	str	x2, [x1, x0]
  4075a4:	sxtw	x0, w19
  4075a8:	lsl	x0, x0, #4
  4075ac:	add	x1, sp, #0x78
  4075b0:	str	x3, [x1, x0]
  4075b4:	ldr	x0, [sp, #40]
  4075b8:	cmp	x0, #0x0
  4075bc:	b.eq	4076d0 <server_forward_kmsg+0x35c>  // b.none
  4075c0:	ldr	x0, [sp, #56]
  4075c4:	cmp	x0, #0x0
  4075c8:	b.ne	4075e4 <server_forward_kmsg+0x270>  // b.any
  4075cc:	ldr	x0, [sp, #40]
  4075d0:	ldr	w0, [x0]
  4075d4:	add	x1, sp, #0x68
  4075d8:	bl	406280 <get_process_comm@plt>
  4075dc:	ldr	x0, [sp, #104]
  4075e0:	str	x0, [sp, #56]
  4075e4:	ldr	x0, [sp, #40]
  4075e8:	ldr	w0, [x0]
  4075ec:	add	x4, sp, #0xd0
  4075f0:	mov	w3, w0
  4075f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4075f8:	add	x2, x0, #0x830
  4075fc:	mov	x1, #0x11                  	// #17
  407600:	mov	x0, x4
  407604:	bl	405de0 <snprintf@plt>
  407608:	cmp	w0, #0x10
  40760c:	cset	w0, hi  // hi = pmore
  407610:	and	w0, w0, #0xff
  407614:	and	x0, x0, #0xff
  407618:	cmp	x0, #0x0
  40761c:	b.eq	407648 <server_forward_kmsg+0x2d4>  // b.none
  407620:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407624:	add	x1, x0, #0x7ab
  407628:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40762c:	add	x4, x0, #0xc60
  407630:	mov	w3, #0x41                  	// #65
  407634:	mov	x2, x1
  407638:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40763c:	add	x1, x0, #0x838
  407640:	mov	w0, #0x0                   	// #0
  407644:	bl	405fd0 <log_assert_failed_realm@plt>
  407648:	ldr	x0, [sp, #56]
  40764c:	cmp	x0, #0x0
  407650:	b.eq	407690 <server_forward_kmsg+0x31c>  // b.none
  407654:	ldr	w19, [sp, #88]
  407658:	add	w0, w19, #0x1
  40765c:	str	w0, [sp, #88]
  407660:	ldr	x0, [sp, #56]
  407664:	bl	406af0 <strlen@plt>
  407668:	mov	x3, x0
  40766c:	sxtw	x0, w19
  407670:	lsl	x0, x0, #4
  407674:	add	x1, sp, #0x70
  407678:	ldr	x2, [sp, #56]
  40767c:	str	x2, [x1, x0]
  407680:	sxtw	x0, w19
  407684:	lsl	x0, x0, #4
  407688:	add	x1, sp, #0x78
  40768c:	str	x3, [x1, x0]
  407690:	ldr	w19, [sp, #88]
  407694:	add	w0, w19, #0x1
  407698:	str	w0, [sp, #88]
  40769c:	add	x0, sp, #0xd0
  4076a0:	bl	406af0 <strlen@plt>
  4076a4:	mov	x3, x0
  4076a8:	sxtw	x0, w19
  4076ac:	lsl	x0, x0, #4
  4076b0:	add	x1, sp, #0x70
  4076b4:	add	x2, sp, #0xd0
  4076b8:	str	x2, [x1, x0]
  4076bc:	sxtw	x0, w19
  4076c0:	lsl	x0, x0, #4
  4076c4:	add	x1, sp, #0x78
  4076c8:	str	x3, [x1, x0]
  4076cc:	b	407750 <server_forward_kmsg+0x3dc>
  4076d0:	ldr	x0, [sp, #56]
  4076d4:	cmp	x0, #0x0
  4076d8:	b.eq	407750 <server_forward_kmsg+0x3dc>  // b.none
  4076dc:	ldr	w19, [sp, #88]
  4076e0:	add	w0, w19, #0x1
  4076e4:	str	w0, [sp, #88]
  4076e8:	ldr	x0, [sp, #56]
  4076ec:	bl	406af0 <strlen@plt>
  4076f0:	mov	x3, x0
  4076f4:	sxtw	x0, w19
  4076f8:	lsl	x0, x0, #4
  4076fc:	add	x1, sp, #0x70
  407700:	ldr	x2, [sp, #56]
  407704:	str	x2, [x1, x0]
  407708:	sxtw	x0, w19
  40770c:	lsl	x0, x0, #4
  407710:	add	x1, sp, #0x78
  407714:	str	x3, [x1, x0]
  407718:	ldr	w0, [sp, #88]
  40771c:	add	w1, w0, #0x1
  407720:	str	w1, [sp, #88]
  407724:	sxtw	x1, w0
  407728:	lsl	x1, x1, #4
  40772c:	add	x2, sp, #0x70
  407730:	adrp	x3, 427000 <journal_ratelimit_group_new+0x94>
  407734:	add	x3, x3, #0x868
  407738:	str	x3, [x2, x1]
  40773c:	sxtw	x0, w0
  407740:	lsl	x0, x0, #4
  407744:	add	x1, sp, #0x78
  407748:	mov	x2, #0x2                   	// #2
  40774c:	str	x2, [x1, x0]
  407750:	ldr	w19, [sp, #88]
  407754:	add	w0, w19, #0x1
  407758:	str	w0, [sp, #88]
  40775c:	ldr	x0, [sp, #48]
  407760:	bl	406af0 <strlen@plt>
  407764:	mov	x3, x0
  407768:	sxtw	x0, w19
  40776c:	lsl	x0, x0, #4
  407770:	add	x1, sp, #0x70
  407774:	ldr	x2, [sp, #48]
  407778:	str	x2, [x1, x0]
  40777c:	sxtw	x0, w19
  407780:	lsl	x0, x0, #4
  407784:	add	x1, sp, #0x78
  407788:	str	x3, [x1, x0]
  40778c:	ldr	w0, [sp, #88]
  407790:	add	w1, w0, #0x1
  407794:	str	w1, [sp, #88]
  407798:	sxtw	x1, w0
  40779c:	lsl	x1, x1, #4
  4077a0:	add	x2, sp, #0x70
  4077a4:	adrp	x3, 427000 <journal_ratelimit_group_new+0x94>
  4077a8:	add	x3, x3, #0x870
  4077ac:	str	x3, [x2, x1]
  4077b0:	sxtw	x0, w0
  4077b4:	lsl	x0, x0, #4
  4077b8:	add	x1, sp, #0x78
  4077bc:	mov	x2, #0x1                   	// #1
  4077c0:	str	x2, [x1, x0]
  4077c4:	ldr	x0, [sp, #72]
  4077c8:	ldr	w0, [x0, #12]
  4077cc:	add	x1, sp, #0x70
  4077d0:	ldr	w2, [sp, #88]
  4077d4:	bl	406290 <writev@plt>
  4077d8:	cmp	x0, #0x0
  4077dc:	b.ge	40785c <server_forward_kmsg+0x4e8>  // b.tcont
  4077e0:	mov	w0, #0x7                   	// #7
  4077e4:	str	w0, [sp, #92]
  4077e8:	bl	4062e0 <__errno_location@plt>
  4077ec:	ldr	w0, [x0]
  4077f0:	str	w0, [sp, #96]
  4077f4:	str	wzr, [sp, #100]
  4077f8:	ldr	w0, [sp, #100]
  4077fc:	bl	406c30 <log_get_max_level_realm@plt>
  407800:	mov	w1, w0
  407804:	ldr	w0, [sp, #92]
  407808:	and	w0, w0, #0x7
  40780c:	cmp	w1, w0
  407810:	b.lt	407854 <server_forward_kmsg+0x4e0>  // b.tstop
  407814:	ldr	w0, [sp, #100]
  407818:	lsl	w1, w0, #10
  40781c:	ldr	w0, [sp, #92]
  407820:	orr	w6, w1, w0
  407824:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407828:	add	x1, x0, #0x7ab
  40782c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407830:	add	x5, x0, #0x878
  407834:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407838:	add	x4, x0, #0xc78
  40783c:	mov	w3, #0x51                  	// #81
  407840:	mov	x2, x1
  407844:	ldr	w1, [sp, #96]
  407848:	mov	w0, w6
  40784c:	bl	406590 <log_internal_realm@plt>
  407850:	b	40785c <server_forward_kmsg+0x4e8>
  407854:	ldr	w0, [sp, #96]
  407858:	cmp	w0, #0x0
  40785c:	mov	w19, #0x1                   	// #1
  407860:	add	x0, sp, #0x68
  407864:	bl	4072b8 <freep>
  407868:	cmp	w19, #0x1
  40786c:	b.ne	407874 <server_forward_kmsg+0x500>  // b.any
  407870:	nop
  407874:	adrp	x0, 441000 <wordlist.9471+0x208>
  407878:	ldr	x0, [x0, #4064]
  40787c:	ldr	x1, [sp, #232]
  407880:	ldr	x0, [x0]
  407884:	eor	x0, x1, x0
  407888:	cmp	x0, #0x0
  40788c:	b.eq	407894 <server_forward_kmsg+0x520>  // b.none
  407890:	bl	4063e0 <__stack_chk_fail@plt>
  407894:	ldr	x19, [sp, #16]
  407898:	ldp	x29, x30, [sp], #240
  40789c:	ret

00000000004078a0 <is_us>:
  4078a0:	stp	x29, x30, [sp, #-48]!
  4078a4:	mov	x29, sp
  4078a8:	str	x0, [sp, #24]
  4078ac:	str	x1, [sp, #16]
  4078b0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4078b4:	ldr	x0, [x0, #4064]
  4078b8:	ldr	x1, [x0]
  4078bc:	str	x1, [sp, #40]
  4078c0:	mov	x1, #0x0                   	// #0
  4078c4:	ldr	x0, [sp, #24]
  4078c8:	cmp	x0, #0x0
  4078cc:	b.eq	4078dc <is_us+0x3c>  // b.none
  4078d0:	ldr	x0, [sp, #16]
  4078d4:	cmp	x0, #0x0
  4078d8:	b.ne	4078e4 <is_us+0x44>  // b.any
  4078dc:	mov	w0, #0x0                   	// #0
  4078e0:	b	40794c <is_us+0xac>
  4078e4:	add	x0, sp, #0x24
  4078e8:	mov	x1, x0
  4078ec:	ldr	x0, [sp, #16]
  4078f0:	bl	406270 <parse_pid@plt>
  4078f4:	cmp	w0, #0x0
  4078f8:	b.ge	407904 <is_us+0x64>  // b.tcont
  4078fc:	mov	w0, #0x0                   	// #0
  407900:	b	40794c <is_us+0xac>
  407904:	bl	405e20 <getpid_cached@plt>
  407908:	mov	w1, w0
  40790c:	ldr	w0, [sp, #36]
  407910:	cmp	w1, w0
  407914:	b.ne	407940 <is_us+0xa0>  // b.any
  407918:	adrp	x0, 441000 <wordlist.9471+0x208>
  40791c:	ldr	x0, [x0, #4056]
  407920:	ldr	x0, [x0]
  407924:	mov	x1, x0
  407928:	ldr	x0, [sp, #24]
  40792c:	bl	4066e0 <strcmp@plt>
  407930:	cmp	w0, #0x0
  407934:	b.ne	407940 <is_us+0xa0>  // b.any
  407938:	mov	w0, #0x1                   	// #1
  40793c:	b	407944 <is_us+0xa4>
  407940:	mov	w0, #0x0                   	// #0
  407944:	and	w0, w0, #0x1
  407948:	and	w0, w0, #0xff
  40794c:	mov	w1, w0
  407950:	adrp	x0, 441000 <wordlist.9471+0x208>
  407954:	ldr	x0, [x0, #4064]
  407958:	ldr	x2, [sp, #40]
  40795c:	ldr	x0, [x0]
  407960:	eor	x0, x2, x0
  407964:	cmp	x0, #0x0
  407968:	b.eq	407970 <is_us+0xd0>  // b.none
  40796c:	bl	4063e0 <__stack_chk_fail@plt>
  407970:	mov	w0, w1
  407974:	ldp	x29, x30, [sp], #48
  407978:	ret

000000000040797c <dev_kmsg_record>:
  40797c:	sub	sp, sp, #0x8f0
  407980:	stp	x29, x30, [sp]
  407984:	mov	x29, sp
  407988:	stp	x19, x20, [sp, #16]
  40798c:	str	x0, [sp, #56]
  407990:	str	x1, [sp, #48]
  407994:	str	x2, [sp, #40]
  407998:	adrp	x0, 441000 <wordlist.9471+0x208>
  40799c:	ldr	x0, [x0, #4064]
  4079a0:	ldr	x1, [x0]
  4079a4:	str	x1, [sp, #2280]
  4079a8:	mov	x1, #0x0                   	// #0
  4079ac:	str	xzr, [sp, #80]
  4079b0:	str	xzr, [sp, #88]
  4079b4:	str	xzr, [sp, #96]
  4079b8:	str	xzr, [sp, #104]
  4079bc:	str	xzr, [sp, #112]
  4079c0:	str	xzr, [sp, #120]
  4079c4:	str	xzr, [sp, #128]
  4079c8:	str	xzr, [sp, #136]
  4079cc:	str	xzr, [sp, #176]
  4079d0:	str	xzr, [sp, #184]
  4079d4:	str	xzr, [sp, #192]
  4079d8:	ldr	x0, [sp, #56]
  4079dc:	cmp	x0, #0x0
  4079e0:	cset	w0, eq  // eq = none
  4079e4:	and	w0, w0, #0xff
  4079e8:	and	x0, x0, #0xff
  4079ec:	cmp	x0, #0x0
  4079f0:	b.eq	407a1c <dev_kmsg_record+0xa0>  // b.none
  4079f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4079f8:	add	x1, x0, #0x7ab
  4079fc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407a00:	add	x4, x0, #0xc90
  407a04:	mov	w3, #0x6d                  	// #109
  407a08:	mov	x2, x1
  407a0c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407a10:	add	x1, x0, #0x7c8
  407a14:	mov	w0, #0x0                   	// #0
  407a18:	bl	405fd0 <log_assert_failed_realm@plt>
  407a1c:	ldr	x0, [sp, #48]
  407a20:	cmp	x0, #0x0
  407a24:	cset	w0, eq  // eq = none
  407a28:	and	w0, w0, #0xff
  407a2c:	and	x0, x0, #0xff
  407a30:	cmp	x0, #0x0
  407a34:	b.eq	407a60 <dev_kmsg_record+0xe4>  // b.none
  407a38:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407a3c:	add	x1, x0, #0x7ab
  407a40:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407a44:	add	x4, x0, #0xc90
  407a48:	mov	w3, #0x6e                  	// #110
  407a4c:	mov	x2, x1
  407a50:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407a54:	add	x1, x0, #0x8a8
  407a58:	mov	w0, #0x0                   	// #0
  407a5c:	bl	405fd0 <log_assert_failed_realm@plt>
  407a60:	ldr	x0, [sp, #40]
  407a64:	cmp	x0, #0x0
  407a68:	b.ne	407a74 <dev_kmsg_record+0xf8>  // b.any
  407a6c:	mov	w19, #0x0                   	// #0
  407a70:	b	408400 <dev_kmsg_record+0xa84>
  407a74:	ldr	x0, [sp, #48]
  407a78:	ldr	x2, [sp, #40]
  407a7c:	mov	w1, #0x2c                  	// #44
  407a80:	bl	406870 <memchr@plt>
  407a84:	str	x0, [sp, #208]
  407a88:	ldr	x0, [sp, #208]
  407a8c:	cmp	x0, #0x0
  407a90:	b.ne	407a9c <dev_kmsg_record+0x120>  // b.any
  407a94:	mov	w19, #0x0                   	// #0
  407a98:	b	408400 <dev_kmsg_record+0xa84>
  407a9c:	ldr	x0, [sp, #208]
  407aa0:	strb	wzr, [x0]
  407aa4:	ldr	x0, [sp, #48]
  407aa8:	add	x1, sp, #0x48
  407aac:	bl	406340 <safe_atoi@plt>
  407ab0:	str	w0, [sp, #76]
  407ab4:	ldr	w0, [sp, #76]
  407ab8:	cmp	w0, #0x0
  407abc:	b.lt	407ad8 <dev_kmsg_record+0x15c>  // b.tstop
  407ac0:	ldr	w0, [sp, #72]
  407ac4:	cmp	w0, #0x0
  407ac8:	b.lt	407ad8 <dev_kmsg_record+0x15c>  // b.tstop
  407acc:	ldr	w0, [sp, #72]
  407ad0:	cmp	w0, #0x3e7
  407ad4:	b.le	407ae0 <dev_kmsg_record+0x164>
  407ad8:	mov	w19, #0x0                   	// #0
  407adc:	b	408400 <dev_kmsg_record+0xa84>
  407ae0:	ldr	x0, [sp, #56]
  407ae4:	ldrb	w0, [x0, #458]
  407ae8:	cmp	w0, #0x0
  407aec:	b.eq	407b0c <dev_kmsg_record+0x190>  // b.none
  407af0:	ldr	w0, [sp, #72]
  407af4:	asr	w0, w0, #3
  407af8:	and	w0, w0, #0x7f
  407afc:	cmp	w0, #0x0
  407b00:	b.eq	407b0c <dev_kmsg_record+0x190>  // b.none
  407b04:	mov	w19, #0x0                   	// #0
  407b08:	b	408400 <dev_kmsg_record+0xa84>
  407b0c:	ldr	x0, [sp, #48]
  407b10:	ldr	x1, [sp, #208]
  407b14:	sub	x0, x1, x0
  407b18:	mov	x1, x0
  407b1c:	ldr	x0, [sp, #40]
  407b20:	sub	x0, x0, x1
  407b24:	sub	x0, x0, #0x1
  407b28:	str	x0, [sp, #40]
  407b2c:	ldr	x0, [sp, #208]
  407b30:	add	x0, x0, #0x1
  407b34:	str	x0, [sp, #48]
  407b38:	ldr	x0, [sp, #48]
  407b3c:	ldr	x2, [sp, #40]
  407b40:	mov	w1, #0x2c                  	// #44
  407b44:	bl	406870 <memchr@plt>
  407b48:	str	x0, [sp, #208]
  407b4c:	ldr	x0, [sp, #208]
  407b50:	cmp	x0, #0x0
  407b54:	b.ne	407b60 <dev_kmsg_record+0x1e4>  // b.any
  407b58:	mov	w19, #0x0                   	// #0
  407b5c:	b	408400 <dev_kmsg_record+0xa84>
  407b60:	ldr	x0, [sp, #208]
  407b64:	strb	wzr, [x0]
  407b68:	ldr	x0, [sp, #48]
  407b6c:	add	x1, sp, #0x98
  407b70:	bl	407350 <safe_atou64>
  407b74:	str	w0, [sp, #76]
  407b78:	ldr	w0, [sp, #76]
  407b7c:	cmp	w0, #0x0
  407b80:	b.ge	407b8c <dev_kmsg_record+0x210>  // b.tcont
  407b84:	mov	w19, #0x0                   	// #0
  407b88:	b	408400 <dev_kmsg_record+0xa84>
  407b8c:	ldr	x0, [sp, #56]
  407b90:	ldr	x0, [x0, #584]
  407b94:	cmp	x0, #0x0
  407b98:	b.eq	407c20 <dev_kmsg_record+0x2a4>  // b.none
  407b9c:	ldr	x0, [sp, #56]
  407ba0:	ldr	x0, [x0, #584]
  407ba4:	ldr	x1, [x0]
  407ba8:	ldr	x0, [sp, #152]
  407bac:	cmp	x1, x0
  407bb0:	b.ls	407bbc <dev_kmsg_record+0x240>  // b.plast
  407bb4:	mov	w19, #0x0                   	// #0
  407bb8:	b	408400 <dev_kmsg_record+0xa84>
  407bbc:	ldr	x0, [sp, #56]
  407bc0:	ldr	x0, [x0, #584]
  407bc4:	ldr	x1, [x0]
  407bc8:	ldr	x0, [sp, #152]
  407bcc:	cmp	x1, x0
  407bd0:	b.cs	407c0c <dev_kmsg_record+0x290>  // b.hs, b.nlast
  407bd4:	ldr	x1, [sp, #152]
  407bd8:	ldr	x0, [sp, #56]
  407bdc:	ldr	x0, [x0, #584]
  407be0:	ldr	x0, [x0]
  407be4:	sub	x0, x1, x0
  407be8:	mov	x5, #0x0                   	// #0
  407bec:	mov	x4, x0
  407bf0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407bf4:	add	x3, x0, #0x8b0
  407bf8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407bfc:	add	x2, x0, #0x8d8
  407c00:	mov	w1, #0x0                   	// #0
  407c04:	ldr	x0, [sp, #56]
  407c08:	bl	411278 <server_driver_message>
  407c0c:	ldr	x1, [sp, #152]
  407c10:	ldr	x0, [sp, #56]
  407c14:	ldr	x0, [x0, #584]
  407c18:	add	x1, x1, #0x1
  407c1c:	str	x1, [x0]
  407c20:	ldr	x0, [sp, #48]
  407c24:	ldr	x1, [sp, #208]
  407c28:	sub	x0, x1, x0
  407c2c:	mov	x1, x0
  407c30:	ldr	x0, [sp, #40]
  407c34:	sub	x0, x0, x1
  407c38:	sub	x0, x0, #0x1
  407c3c:	str	x0, [sp, #40]
  407c40:	ldr	x0, [sp, #208]
  407c44:	add	x0, x0, #0x1
  407c48:	str	x0, [sp, #48]
  407c4c:	ldr	x0, [sp, #48]
  407c50:	ldr	x2, [sp, #40]
  407c54:	mov	w1, #0x3b                  	// #59
  407c58:	bl	406870 <memchr@plt>
  407c5c:	str	x0, [sp, #232]
  407c60:	ldr	x0, [sp, #232]
  407c64:	cmp	x0, #0x0
  407c68:	b.ne	407c74 <dev_kmsg_record+0x2f8>  // b.any
  407c6c:	mov	w19, #0x0                   	// #0
  407c70:	b	408400 <dev_kmsg_record+0xa84>
  407c74:	ldr	x0, [sp, #48]
  407c78:	ldr	x2, [sp, #40]
  407c7c:	mov	w1, #0x2c                  	// #44
  407c80:	bl	406870 <memchr@plt>
  407c84:	str	x0, [sp, #208]
  407c88:	ldr	x0, [sp, #208]
  407c8c:	cmp	x0, #0x0
  407c90:	b.eq	407ca4 <dev_kmsg_record+0x328>  // b.none
  407c94:	ldr	x1, [sp, #232]
  407c98:	ldr	x0, [sp, #208]
  407c9c:	cmp	x1, x0
  407ca0:	b.cs	407cac <dev_kmsg_record+0x330>  // b.hs, b.nlast
  407ca4:	ldr	x0, [sp, #232]
  407ca8:	str	x0, [sp, #208]
  407cac:	ldr	x0, [sp, #208]
  407cb0:	strb	wzr, [x0]
  407cb4:	ldr	x0, [sp, #48]
  407cb8:	add	x1, sp, #0x90
  407cbc:	bl	405c10 <safe_atollu@plt>
  407cc0:	str	w0, [sp, #76]
  407cc4:	ldr	w0, [sp, #76]
  407cc8:	cmp	w0, #0x0
  407ccc:	b.ge	407cd8 <dev_kmsg_record+0x35c>  // b.tcont
  407cd0:	mov	w19, #0x0                   	// #0
  407cd4:	b	408400 <dev_kmsg_record+0xa84>
  407cd8:	ldr	x0, [sp, #48]
  407cdc:	ldr	x1, [sp, #232]
  407ce0:	sub	x0, x1, x0
  407ce4:	mov	x1, x0
  407ce8:	ldr	x0, [sp, #40]
  407cec:	sub	x0, x0, x1
  407cf0:	sub	x0, x0, #0x1
  407cf4:	str	x0, [sp, #40]
  407cf8:	ldr	x0, [sp, #232]
  407cfc:	add	x0, x0, #0x1
  407d00:	str	x0, [sp, #48]
  407d04:	ldr	x0, [sp, #48]
  407d08:	ldr	x2, [sp, #40]
  407d0c:	mov	w1, #0xa                   	// #10
  407d10:	bl	406870 <memchr@plt>
  407d14:	str	x0, [sp, #208]
  407d18:	ldr	x0, [sp, #208]
  407d1c:	cmp	x0, #0x0
  407d20:	b.ne	407d2c <dev_kmsg_record+0x3b0>  // b.any
  407d24:	mov	w19, #0x0                   	// #0
  407d28:	b	408400 <dev_kmsg_record+0xa84>
  407d2c:	ldr	x0, [sp, #208]
  407d30:	strb	wzr, [x0]
  407d34:	ldr	x0, [sp, #48]
  407d38:	ldr	x1, [sp, #208]
  407d3c:	sub	x0, x1, x0
  407d40:	str	x0, [sp, #224]
  407d44:	ldr	x0, [sp, #48]
  407d48:	ldr	x1, [sp, #208]
  407d4c:	sub	x0, x1, x0
  407d50:	mov	x1, x0
  407d54:	ldr	x0, [sp, #40]
  407d58:	sub	x0, x0, x1
  407d5c:	sub	x0, x0, #0x1
  407d60:	str	x0, [sp, #40]
  407d64:	ldr	x0, [sp, #208]
  407d68:	add	x0, x0, #0x1
  407d6c:	str	x0, [sp, #216]
  407d70:	str	xzr, [sp, #200]
  407d74:	b	407eac <dev_kmsg_record+0x530>
  407d78:	ldr	x0, [sp, #216]
  407d7c:	ldrb	w0, [x0]
  407d80:	cmp	w0, #0x20
  407d84:	b.ne	407ec4 <dev_kmsg_record+0x548>  // b.any
  407d88:	ldr	x0, [sp, #216]
  407d8c:	add	x0, x0, #0x1
  407d90:	str	x0, [sp, #216]
  407d94:	ldr	x0, [sp, #40]
  407d98:	sub	x0, x0, #0x1
  407d9c:	str	x0, [sp, #40]
  407da0:	ldr	x2, [sp, #40]
  407da4:	mov	w1, #0xa                   	// #10
  407da8:	ldr	x0, [sp, #216]
  407dac:	bl	406870 <memchr@plt>
  407db0:	str	x0, [sp, #208]
  407db4:	ldr	x0, [sp, #208]
  407db8:	cmp	x0, #0x0
  407dbc:	b.ne	407dc4 <dev_kmsg_record+0x448>  // b.any
  407dc0:	b	4083c4 <dev_kmsg_record+0xa48>
  407dc4:	ldr	x0, [sp, #208]
  407dc8:	strb	wzr, [x0]
  407dcc:	ldr	x1, [sp, #208]
  407dd0:	ldr	x0, [sp, #216]
  407dd4:	sub	x0, x1, x0
  407dd8:	mov	x1, x0
  407ddc:	add	x0, sp, #0xa8
  407de0:	mov	x4, x0
  407de4:	mov	w3, #0x1                   	// #1
  407de8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407dec:	add	x2, x0, #0x908
  407df0:	ldr	x0, [sp, #216]
  407df4:	bl	4068a0 <cunescape_length_with_prefix@plt>
  407df8:	cmp	w0, #0x0
  407dfc:	b.lt	407ea4 <dev_kmsg_record+0x528>  // b.tstop
  407e00:	ldr	x2, [sp, #168]
  407e04:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407e08:	add	x1, x0, #0x918
  407e0c:	mov	x0, x2
  407e10:	bl	4072dc <startswith>
  407e14:	cmp	x0, #0x0
  407e18:	b.eq	407e28 <dev_kmsg_record+0x4ac>  // b.none
  407e1c:	ldr	x0, [sp, #168]
  407e20:	add	x0, x0, #0xf
  407e24:	str	x0, [sp, #176]
  407e28:	ldr	x19, [sp, #184]
  407e2c:	add	x0, x19, #0x1
  407e30:	str	x0, [sp, #184]
  407e34:	ldr	x20, [sp, #168]
  407e38:	ldr	x0, [sp, #168]
  407e3c:	bl	406af0 <strlen@plt>
  407e40:	mov	x2, x0
  407e44:	lsl	x0, x19, #4
  407e48:	add	x1, sp, #0xf8
  407e4c:	str	x20, [x1, x0]
  407e50:	lsl	x0, x19, #4
  407e54:	add	x1, sp, #0x100
  407e58:	str	x2, [x1, x0]
  407e5c:	ldr	x0, [sp, #192]
  407e60:	add	x0, x0, #0x1
  407e64:	str	x0, [sp, #192]
  407e68:	ldr	x1, [sp, #208]
  407e6c:	ldr	x0, [sp, #216]
  407e70:	sub	x0, x1, x0
  407e74:	mov	x1, x0
  407e78:	ldr	x0, [sp, #40]
  407e7c:	sub	x0, x0, x1
  407e80:	sub	x0, x0, #0x1
  407e84:	str	x0, [sp, #40]
  407e88:	ldr	x0, [sp, #208]
  407e8c:	add	x0, x0, #0x1
  407e90:	str	x0, [sp, #216]
  407e94:	ldr	x0, [sp, #200]
  407e98:	add	x0, x0, #0x1
  407e9c:	str	x0, [sp, #200]
  407ea0:	b	407eac <dev_kmsg_record+0x530>
  407ea4:	nop
  407ea8:	b	407ec4 <dev_kmsg_record+0x548>
  407eac:	ldr	x0, [sp, #40]
  407eb0:	cmp	x0, #0x0
  407eb4:	b.eq	407ec4 <dev_kmsg_record+0x548>  // b.none
  407eb8:	ldr	x0, [sp, #200]
  407ebc:	cmp	x0, #0x3f
  407ec0:	b.ls	407d78 <dev_kmsg_record+0x3fc>  // b.plast
  407ec4:	ldr	x0, [sp, #176]
  407ec8:	cmp	x0, #0x0
  407ecc:	b.eq	40809c <dev_kmsg_record+0x720>  // b.none
  407ed0:	str	xzr, [sp, #160]
  407ed4:	add	x0, sp, #0xa0
  407ed8:	ldr	x1, [sp, #176]
  407edc:	bl	406ae0 <sd_device_new_from_device_id@plt>
  407ee0:	cmp	w0, #0x0
  407ee4:	b.lt	408094 <dev_kmsg_record+0x718>  // b.tstop
  407ee8:	ldr	x0, [sp, #160]
  407eec:	add	x1, sp, #0xa8
  407ef0:	bl	405ce0 <sd_device_get_devname@plt>
  407ef4:	cmp	w0, #0x0
  407ef8:	b.lt	407f64 <dev_kmsg_record+0x5e8>  // b.tstop
  407efc:	ldr	x0, [sp, #168]
  407f00:	mov	x2, #0x0                   	// #0
  407f04:	mov	x1, x0
  407f08:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407f0c:	add	x0, x0, #0x928
  407f10:	bl	405f10 <strjoin_real@plt>
  407f14:	str	x0, [sp, #240]
  407f18:	ldr	x0, [sp, #240]
  407f1c:	cmp	x0, #0x0
  407f20:	b.eq	407f64 <dev_kmsg_record+0x5e8>  // b.none
  407f24:	ldr	x19, [sp, #184]
  407f28:	add	x0, x19, #0x1
  407f2c:	str	x0, [sp, #184]
  407f30:	ldr	x0, [sp, #240]
  407f34:	bl	406af0 <strlen@plt>
  407f38:	mov	x3, x0
  407f3c:	lsl	x0, x19, #4
  407f40:	add	x1, sp, #0xf8
  407f44:	ldr	x2, [sp, #240]
  407f48:	str	x2, [x1, x0]
  407f4c:	lsl	x0, x19, #4
  407f50:	add	x1, sp, #0x100
  407f54:	str	x3, [x1, x0]
  407f58:	ldr	x0, [sp, #192]
  407f5c:	add	x0, x0, #0x1
  407f60:	str	x0, [sp, #192]
  407f64:	ldr	x0, [sp, #160]
  407f68:	add	x1, sp, #0xa8
  407f6c:	bl	405fb0 <sd_device_get_sysname@plt>
  407f70:	cmp	w0, #0x0
  407f74:	b.lt	407fe0 <dev_kmsg_record+0x664>  // b.tstop
  407f78:	ldr	x0, [sp, #168]
  407f7c:	mov	x2, #0x0                   	// #0
  407f80:	mov	x1, x0
  407f84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  407f88:	add	x0, x0, #0x938
  407f8c:	bl	405f10 <strjoin_real@plt>
  407f90:	str	x0, [sp, #240]
  407f94:	ldr	x0, [sp, #240]
  407f98:	cmp	x0, #0x0
  407f9c:	b.eq	407fe0 <dev_kmsg_record+0x664>  // b.none
  407fa0:	ldr	x19, [sp, #184]
  407fa4:	add	x0, x19, #0x1
  407fa8:	str	x0, [sp, #184]
  407fac:	ldr	x0, [sp, #240]
  407fb0:	bl	406af0 <strlen@plt>
  407fb4:	mov	x3, x0
  407fb8:	lsl	x0, x19, #4
  407fbc:	add	x1, sp, #0xf8
  407fc0:	ldr	x2, [sp, #240]
  407fc4:	str	x2, [x1, x0]
  407fc8:	lsl	x0, x19, #4
  407fcc:	add	x1, sp, #0x100
  407fd0:	str	x3, [x1, x0]
  407fd4:	ldr	x0, [sp, #192]
  407fd8:	add	x0, x0, #0x1
  407fdc:	str	x0, [sp, #192]
  407fe0:	str	xzr, [sp, #200]
  407fe4:	ldr	x0, [sp, #160]
  407fe8:	bl	4060d0 <sd_device_get_devlink_first@plt>
  407fec:	str	x0, [sp, #168]
  407ff0:	b	408080 <dev_kmsg_record+0x704>
  407ff4:	ldr	x0, [sp, #200]
  407ff8:	cmp	x0, #0x1f
  407ffc:	b.hi	408090 <dev_kmsg_record+0x714>  // b.pmore
  408000:	ldr	x0, [sp, #168]
  408004:	mov	x2, #0x0                   	// #0
  408008:	mov	x1, x0
  40800c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408010:	add	x0, x0, #0x948
  408014:	bl	405f10 <strjoin_real@plt>
  408018:	str	x0, [sp, #240]
  40801c:	ldr	x0, [sp, #240]
  408020:	cmp	x0, #0x0
  408024:	b.eq	408068 <dev_kmsg_record+0x6ec>  // b.none
  408028:	ldr	x19, [sp, #184]
  40802c:	add	x0, x19, #0x1
  408030:	str	x0, [sp, #184]
  408034:	ldr	x0, [sp, #240]
  408038:	bl	406af0 <strlen@plt>
  40803c:	mov	x3, x0
  408040:	lsl	x0, x19, #4
  408044:	add	x1, sp, #0xf8
  408048:	ldr	x2, [sp, #240]
  40804c:	str	x2, [x1, x0]
  408050:	lsl	x0, x19, #4
  408054:	add	x1, sp, #0x100
  408058:	str	x3, [x1, x0]
  40805c:	ldr	x0, [sp, #192]
  408060:	add	x0, x0, #0x1
  408064:	str	x0, [sp, #192]
  408068:	ldr	x0, [sp, #200]
  40806c:	add	x0, x0, #0x1
  408070:	str	x0, [sp, #200]
  408074:	ldr	x0, [sp, #160]
  408078:	bl	406bb0 <sd_device_get_devlink_next@plt>
  40807c:	str	x0, [sp, #168]
  408080:	ldr	x0, [sp, #168]
  408084:	cmp	x0, #0x0
  408088:	b.ne	407ff4 <dev_kmsg_record+0x678>  // b.any
  40808c:	b	408094 <dev_kmsg_record+0x718>
  408090:	nop
  408094:	add	x0, sp, #0xa0
  408098:	bl	407284 <sd_device_unrefp>
  40809c:	ldr	x0, [sp, #144]
  4080a0:	add	x3, sp, #0x78
  4080a4:	mov	x2, x0
  4080a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4080ac:	add	x1, x0, #0x958
  4080b0:	mov	x0, x3
  4080b4:	bl	406830 <asprintf@plt>
  4080b8:	cmp	w0, #0x0
  4080bc:	b.lt	4080f4 <dev_kmsg_record+0x778>  // b.tstop
  4080c0:	ldr	x19, [sp, #184]
  4080c4:	add	x0, x19, #0x1
  4080c8:	str	x0, [sp, #184]
  4080cc:	ldr	x20, [sp, #120]
  4080d0:	ldr	x0, [sp, #120]
  4080d4:	bl	406af0 <strlen@plt>
  4080d8:	mov	x2, x0
  4080dc:	lsl	x0, x19, #4
  4080e0:	add	x1, sp, #0xf8
  4080e4:	str	x20, [x1, x0]
  4080e8:	lsl	x0, x19, #4
  4080ec:	add	x1, sp, #0x100
  4080f0:	str	x2, [x1, x0]
  4080f4:	ldr	x0, [sp, #184]
  4080f8:	add	x1, x0, #0x1
  4080fc:	str	x1, [sp, #184]
  408100:	lsl	x1, x0, #4
  408104:	add	x2, sp, #0xf8
  408108:	adrp	x3, 427000 <journal_ratelimit_group_new+0x94>
  40810c:	add	x3, x3, #0x980
  408110:	str	x3, [x2, x1]
  408114:	lsl	x0, x0, #4
  408118:	add	x1, sp, #0x100
  40811c:	mov	x2, #0x11                  	// #17
  408120:	str	x2, [x1, x0]
  408124:	ldr	w0, [sp, #72]
  408128:	and	w0, w0, #0x7
  40812c:	add	x3, sp, #0x58
  408130:	mov	w2, w0
  408134:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408138:	add	x1, x0, #0x998
  40813c:	mov	x0, x3
  408140:	bl	406830 <asprintf@plt>
  408144:	cmp	w0, #0x0
  408148:	b.lt	408180 <dev_kmsg_record+0x804>  // b.tstop
  40814c:	ldr	x19, [sp, #184]
  408150:	add	x0, x19, #0x1
  408154:	str	x0, [sp, #184]
  408158:	ldr	x20, [sp, #88]
  40815c:	ldr	x0, [sp, #88]
  408160:	bl	406af0 <strlen@plt>
  408164:	mov	x2, x0
  408168:	lsl	x0, x19, #4
  40816c:	add	x1, sp, #0xf8
  408170:	str	x20, [x1, x0]
  408174:	lsl	x0, x19, #4
  408178:	add	x1, sp, #0x100
  40817c:	str	x2, [x1, x0]
  408180:	ldr	w0, [sp, #72]
  408184:	asr	w0, w0, #3
  408188:	and	w0, w0, #0x7f
  40818c:	add	x3, sp, #0x68
  408190:	mov	w2, w0
  408194:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408198:	add	x1, x0, #0x9a8
  40819c:	mov	x0, x3
  4081a0:	bl	406830 <asprintf@plt>
  4081a4:	cmp	w0, #0x0
  4081a8:	b.lt	4081e0 <dev_kmsg_record+0x864>  // b.tstop
  4081ac:	ldr	x19, [sp, #184]
  4081b0:	add	x0, x19, #0x1
  4081b4:	str	x0, [sp, #184]
  4081b8:	ldr	x20, [sp, #104]
  4081bc:	ldr	x0, [sp, #104]
  4081c0:	bl	406af0 <strlen@plt>
  4081c4:	mov	x2, x0
  4081c8:	lsl	x0, x19, #4
  4081cc:	add	x1, sp, #0xf8
  4081d0:	str	x20, [x1, x0]
  4081d4:	lsl	x0, x19, #4
  4081d8:	add	x1, sp, #0x100
  4081dc:	str	x2, [x1, x0]
  4081e0:	ldr	w0, [sp, #72]
  4081e4:	asr	w0, w0, #3
  4081e8:	and	w0, w0, #0x7f
  4081ec:	cmp	w0, #0x0
  4081f0:	b.ne	408228 <dev_kmsg_record+0x8ac>  // b.any
  4081f4:	ldr	x0, [sp, #184]
  4081f8:	add	x1, x0, #0x1
  4081fc:	str	x1, [sp, #184]
  408200:	lsl	x1, x0, #4
  408204:	add	x2, sp, #0xf8
  408208:	adrp	x3, 427000 <journal_ratelimit_group_new+0x94>
  40820c:	add	x3, x3, #0x9c0
  408210:	str	x3, [x2, x1]
  408214:	lsl	x0, x0, #4
  408218:	add	x1, sp, #0x100
  40821c:	mov	x2, #0x18                  	// #24
  408220:	str	x2, [x1, x0]
  408224:	b	408330 <dev_kmsg_record+0x9b4>
  408228:	add	x2, sp, #0x88
  40822c:	add	x1, sp, #0x80
  408230:	add	x0, sp, #0x30
  408234:	bl	41c8dc <syslog_parse_identifier>
  408238:	mov	x1, x0
  40823c:	ldr	x0, [sp, #224]
  408240:	sub	x0, x0, x1
  408244:	str	x0, [sp, #224]
  408248:	ldr	x0, [sp, #128]
  40824c:	ldr	x1, [sp, #136]
  408250:	bl	4078a0 <is_us>
  408254:	and	w0, w0, #0xff
  408258:	cmp	w0, #0x0
  40825c:	b.ne	4083c0 <dev_kmsg_record+0xa44>  // b.any
  408260:	ldr	x0, [sp, #128]
  408264:	cmp	x0, #0x0
  408268:	b.eq	4082c8 <dev_kmsg_record+0x94c>  // b.none
  40826c:	ldr	x0, [sp, #128]
  408270:	mov	x2, #0x0                   	// #0
  408274:	mov	x1, x0
  408278:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40827c:	add	x0, x0, #0x9e0
  408280:	bl	405f10 <strjoin_real@plt>
  408284:	str	x0, [sp, #112]
  408288:	ldr	x0, [sp, #112]
  40828c:	cmp	x0, #0x0
  408290:	b.eq	4082c8 <dev_kmsg_record+0x94c>  // b.none
  408294:	ldr	x19, [sp, #184]
  408298:	add	x0, x19, #0x1
  40829c:	str	x0, [sp, #184]
  4082a0:	ldr	x20, [sp, #112]
  4082a4:	ldr	x0, [sp, #112]
  4082a8:	bl	406af0 <strlen@plt>
  4082ac:	mov	x2, x0
  4082b0:	lsl	x0, x19, #4
  4082b4:	add	x1, sp, #0xf8
  4082b8:	str	x20, [x1, x0]
  4082bc:	lsl	x0, x19, #4
  4082c0:	add	x1, sp, #0x100
  4082c4:	str	x2, [x1, x0]
  4082c8:	ldr	x0, [sp, #136]
  4082cc:	cmp	x0, #0x0
  4082d0:	b.eq	408330 <dev_kmsg_record+0x9b4>  // b.none
  4082d4:	ldr	x0, [sp, #136]
  4082d8:	mov	x2, #0x0                   	// #0
  4082dc:	mov	x1, x0
  4082e0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4082e4:	add	x0, x0, #0x9f8
  4082e8:	bl	405f10 <strjoin_real@plt>
  4082ec:	str	x0, [sp, #96]
  4082f0:	ldr	x0, [sp, #96]
  4082f4:	cmp	x0, #0x0
  4082f8:	b.eq	408330 <dev_kmsg_record+0x9b4>  // b.none
  4082fc:	ldr	x19, [sp, #184]
  408300:	add	x0, x19, #0x1
  408304:	str	x0, [sp, #184]
  408308:	ldr	x20, [sp, #96]
  40830c:	ldr	x0, [sp, #96]
  408310:	bl	406af0 <strlen@plt>
  408314:	mov	x2, x0
  408318:	lsl	x0, x19, #4
  40831c:	add	x1, sp, #0xf8
  408320:	str	x20, [x1, x0]
  408324:	lsl	x0, x19, #4
  408328:	add	x1, sp, #0x100
  40832c:	str	x2, [x1, x0]
  408330:	ldr	x5, [sp, #48]
  408334:	add	x0, sp, #0x50
  408338:	mov	x4, x0
  40833c:	mov	w3, #0x1                   	// #1
  408340:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408344:	add	x2, x0, #0xa08
  408348:	ldr	x1, [sp, #224]
  40834c:	mov	x0, x5
  408350:	bl	4068a0 <cunescape_length_with_prefix@plt>
  408354:	cmp	w0, #0x0
  408358:	b.lt	408390 <dev_kmsg_record+0xa14>  // b.tstop
  40835c:	ldr	x19, [sp, #184]
  408360:	add	x0, x19, #0x1
  408364:	str	x0, [sp, #184]
  408368:	ldr	x20, [sp, #80]
  40836c:	ldr	x0, [sp, #80]
  408370:	bl	406af0 <strlen@plt>
  408374:	mov	x2, x0
  408378:	lsl	x0, x19, #4
  40837c:	add	x1, sp, #0xf8
  408380:	str	x20, [x1, x0]
  408384:	lsl	x0, x19, #4
  408388:	add	x1, sp, #0x100
  40838c:	str	x2, [x1, x0]
  408390:	ldr	w1, [sp, #72]
  408394:	add	x0, sp, #0xf8
  408398:	mov	w7, #0x0                   	// #0
  40839c:	mov	w6, w1
  4083a0:	mov	x5, #0x0                   	// #0
  4083a4:	mov	x4, #0x0                   	// #0
  4083a8:	mov	x3, #0x7f                  	// #127
  4083ac:	ldr	x2, [sp, #184]
  4083b0:	mov	x1, x0
  4083b4:	ldr	x0, [sp, #56]
  4083b8:	bl	411768 <server_dispatch_message>
  4083bc:	b	4083c4 <dev_kmsg_record+0xa48>
  4083c0:	nop
  4083c4:	str	xzr, [sp, #200]
  4083c8:	b	4083ec <dev_kmsg_record+0xa70>
  4083cc:	ldr	x0, [sp, #200]
  4083d0:	lsl	x0, x0, #4
  4083d4:	add	x1, sp, #0xf8
  4083d8:	ldr	x0, [x1, x0]
  4083dc:	bl	406930 <free@plt>
  4083e0:	ldr	x0, [sp, #200]
  4083e4:	add	x0, x0, #0x1
  4083e8:	str	x0, [sp, #200]
  4083ec:	ldr	x1, [sp, #200]
  4083f0:	ldr	x0, [sp, #192]
  4083f4:	cmp	x1, x0
  4083f8:	b.cc	4083cc <dev_kmsg_record+0xa50>  // b.lo, b.ul, b.last
  4083fc:	mov	w19, #0x1                   	// #1
  408400:	add	x0, sp, #0x88
  408404:	bl	4072b8 <freep>
  408408:	cmp	w19, #0x1
  40840c:	b.eq	408418 <dev_kmsg_record+0xa9c>  // b.none
  408410:	mov	w19, #0x0                   	// #0
  408414:	b	40841c <dev_kmsg_record+0xaa0>
  408418:	mov	w19, #0x1                   	// #1
  40841c:	add	x0, sp, #0x80
  408420:	bl	4072b8 <freep>
  408424:	cmp	w19, #0x1
  408428:	b.eq	408434 <dev_kmsg_record+0xab8>  // b.none
  40842c:	mov	w19, #0x0                   	// #0
  408430:	b	408438 <dev_kmsg_record+0xabc>
  408434:	mov	w19, #0x1                   	// #1
  408438:	add	x0, sp, #0x78
  40843c:	bl	4072b8 <freep>
  408440:	cmp	w19, #0x1
  408444:	b.eq	408450 <dev_kmsg_record+0xad4>  // b.none
  408448:	mov	w19, #0x0                   	// #0
  40844c:	b	408454 <dev_kmsg_record+0xad8>
  408450:	mov	w19, #0x1                   	// #1
  408454:	add	x0, sp, #0x70
  408458:	bl	4072b8 <freep>
  40845c:	cmp	w19, #0x1
  408460:	b.eq	40846c <dev_kmsg_record+0xaf0>  // b.none
  408464:	mov	w19, #0x0                   	// #0
  408468:	b	408470 <dev_kmsg_record+0xaf4>
  40846c:	mov	w19, #0x1                   	// #1
  408470:	add	x0, sp, #0x68
  408474:	bl	4072b8 <freep>
  408478:	cmp	w19, #0x1
  40847c:	b.eq	408488 <dev_kmsg_record+0xb0c>  // b.none
  408480:	mov	w19, #0x0                   	// #0
  408484:	b	40848c <dev_kmsg_record+0xb10>
  408488:	mov	w19, #0x1                   	// #1
  40848c:	add	x0, sp, #0x60
  408490:	bl	4072b8 <freep>
  408494:	cmp	w19, #0x1
  408498:	b.eq	4084a4 <dev_kmsg_record+0xb28>  // b.none
  40849c:	mov	w19, #0x0                   	// #0
  4084a0:	b	4084a8 <dev_kmsg_record+0xb2c>
  4084a4:	mov	w19, #0x1                   	// #1
  4084a8:	add	x0, sp, #0x58
  4084ac:	bl	4072b8 <freep>
  4084b0:	cmp	w19, #0x1
  4084b4:	b.eq	4084c0 <dev_kmsg_record+0xb44>  // b.none
  4084b8:	mov	w19, #0x0                   	// #0
  4084bc:	b	4084c4 <dev_kmsg_record+0xb48>
  4084c0:	mov	w19, #0x1                   	// #1
  4084c4:	add	x0, sp, #0x50
  4084c8:	bl	4072b8 <freep>
  4084cc:	cmp	w19, #0x1
  4084d0:	b.ne	4084d8 <dev_kmsg_record+0xb5c>  // b.any
  4084d4:	nop
  4084d8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4084dc:	ldr	x0, [x0, #4064]
  4084e0:	ldr	x1, [sp, #2280]
  4084e4:	ldr	x0, [x0]
  4084e8:	eor	x0, x1, x0
  4084ec:	cmp	x0, #0x0
  4084f0:	b.eq	4084f8 <dev_kmsg_record+0xb7c>  // b.none
  4084f4:	bl	4063e0 <__stack_chk_fail@plt>
  4084f8:	ldp	x19, x20, [sp, #16]
  4084fc:	ldp	x29, x30, [sp]
  408500:	add	sp, sp, #0x8f0
  408504:	ret

0000000000408508 <server_read_dev_kmsg>:
  408508:	mov	x12, #0x2050                	// #8272
  40850c:	sub	sp, sp, x12
  408510:	stp	x29, x30, [sp]
  408514:	mov	x29, sp
  408518:	str	x0, [sp, #24]
  40851c:	adrp	x0, 441000 <wordlist.9471+0x208>
  408520:	ldr	x0, [x0, #4064]
  408524:	ldr	x1, [x0]
  408528:	str	x1, [sp, #8264]
  40852c:	mov	x1, #0x0                   	// #0
  408530:	ldr	x0, [sp, #24]
  408534:	cmp	x0, #0x0
  408538:	cset	w0, eq  // eq = none
  40853c:	and	w0, w0, #0xff
  408540:	and	x0, x0, #0xff
  408544:	cmp	x0, #0x0
  408548:	b.eq	408574 <server_read_dev_kmsg+0x6c>  // b.none
  40854c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408550:	add	x1, x0, #0x7ab
  408554:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408558:	add	x4, x0, #0xca0
  40855c:	mov	w3, #0x12c                 	// #300
  408560:	mov	x2, x1
  408564:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408568:	add	x1, x0, #0x7c8
  40856c:	mov	w0, #0x0                   	// #0
  408570:	bl	405fd0 <log_assert_failed_realm@plt>
  408574:	ldr	x0, [sp, #24]
  408578:	ldr	w0, [x0, #12]
  40857c:	lsr	w0, w0, #31
  408580:	and	w0, w0, #0xff
  408584:	and	x0, x0, #0xff
  408588:	cmp	x0, #0x0
  40858c:	b.eq	4085b8 <server_read_dev_kmsg+0xb0>  // b.none
  408590:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408594:	add	x1, x0, #0x7ab
  408598:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40859c:	add	x4, x0, #0xca0
  4085a0:	mov	w3, #0x12d                 	// #301
  4085a4:	mov	x2, x1
  4085a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4085ac:	add	x1, x0, #0xa18
  4085b0:	mov	w0, #0x0                   	// #0
  4085b4:	bl	405fd0 <log_assert_failed_realm@plt>
  4085b8:	ldr	x0, [sp, #24]
  4085bc:	ldr	w0, [x0, #12]
  4085c0:	add	x1, sp, #0x40
  4085c4:	mov	x2, #0x2000                	// #8192
  4085c8:	bl	406330 <read@plt>
  4085cc:	str	x0, [sp, #56]
  4085d0:	ldr	x0, [sp, #56]
  4085d4:	cmp	x0, #0x0
  4085d8:	b.ne	4085e4 <server_read_dev_kmsg+0xdc>  // b.any
  4085dc:	mov	w0, #0x0                   	// #0
  4085e0:	b	408730 <server_read_dev_kmsg+0x228>
  4085e4:	ldr	x0, [sp, #56]
  4085e8:	cmp	x0, #0x0
  4085ec:	b.ge	408714 <server_read_dev_kmsg+0x20c>  // b.tcont
  4085f0:	bl	4062e0 <__errno_location@plt>
  4085f4:	ldr	w0, [x0]
  4085f8:	cmp	w0, #0x16
  4085fc:	b.ne	408620 <server_read_dev_kmsg+0x118>  // b.any
  408600:	ldr	x0, [sp, #24]
  408604:	ldr	x0, [x0, #64]
  408608:	bl	405ee0 <sd_event_source_unref@plt>
  40860c:	mov	x1, x0
  408610:	ldr	x0, [sp, #24]
  408614:	str	x1, [x0, #64]
  408618:	mov	w0, #0x0                   	// #0
  40861c:	b	408730 <server_read_dev_kmsg+0x228>
  408620:	strb	wzr, [sp, #43]
  408624:	bl	4062e0 <__errno_location@plt>
  408628:	ldr	w0, [x0]
  40862c:	cmp	w0, #0x20
  408630:	cset	w1, hi  // hi = pmore
  408634:	and	w1, w1, #0xff
  408638:	cmp	w1, #0x0
  40863c:	b.ne	408670 <server_read_dev_kmsg+0x168>  // b.any
  408640:	mov	x1, #0x1                   	// #1
  408644:	lsl	x1, x1, x0
  408648:	mov	x0, #0x810                 	// #2064
  40864c:	movk	x0, #0x1, lsl #32
  408650:	and	x0, x1, x0
  408654:	cmp	x0, #0x0
  408658:	cset	w0, ne  // ne = any
  40865c:	and	w0, w0, #0xff
  408660:	cmp	w0, #0x0
  408664:	b.eq	408670 <server_read_dev_kmsg+0x168>  // b.none
  408668:	mov	w0, #0x1                   	// #1
  40866c:	strb	w0, [sp, #43]
  408670:	nop
  408674:	ldrb	w0, [sp, #43]
  408678:	cmp	w0, #0x0
  40867c:	b.eq	408688 <server_read_dev_kmsg+0x180>  // b.none
  408680:	mov	w0, #0x0                   	// #0
  408684:	b	408730 <server_read_dev_kmsg+0x228>
  408688:	mov	w0, #0x3                   	// #3
  40868c:	str	w0, [sp, #44]
  408690:	bl	4062e0 <__errno_location@plt>
  408694:	ldr	w0, [x0]
  408698:	str	w0, [sp, #48]
  40869c:	str	wzr, [sp, #52]
  4086a0:	ldr	w0, [sp, #52]
  4086a4:	bl	406c30 <log_get_max_level_realm@plt>
  4086a8:	mov	w1, w0
  4086ac:	ldr	w0, [sp, #44]
  4086b0:	and	w0, w0, #0x7
  4086b4:	cmp	w1, w0
  4086b8:	b.lt	4086fc <server_read_dev_kmsg+0x1f4>  // b.tstop
  4086bc:	ldr	w0, [sp, #52]
  4086c0:	lsl	w1, w0, #10
  4086c4:	ldr	w0, [sp, #44]
  4086c8:	orr	w6, w1, w0
  4086cc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4086d0:	add	x1, x0, #0x7ab
  4086d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4086d8:	add	x5, x0, #0xa30
  4086dc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4086e0:	add	x4, x0, #0xcb8
  4086e4:	mov	w3, #0x13e                 	// #318
  4086e8:	mov	x2, x1
  4086ec:	ldr	w1, [sp, #48]
  4086f0:	mov	w0, w6
  4086f4:	bl	406590 <log_internal_realm@plt>
  4086f8:	b	408730 <server_read_dev_kmsg+0x228>
  4086fc:	ldr	w0, [sp, #48]
  408700:	cmp	w0, #0x0
  408704:	cneg	w0, w0, lt  // lt = tstop
  408708:	and	w0, w0, #0xff
  40870c:	neg	w0, w0
  408710:	b	408730 <server_read_dev_kmsg+0x228>
  408714:	ldr	x1, [sp, #56]
  408718:	add	x0, sp, #0x40
  40871c:	mov	x2, x1
  408720:	mov	x1, x0
  408724:	ldr	x0, [sp, #24]
  408728:	bl	40797c <dev_kmsg_record>
  40872c:	mov	w0, #0x1                   	// #1
  408730:	mov	w1, w0
  408734:	adrp	x0, 441000 <wordlist.9471+0x208>
  408738:	ldr	x0, [x0, #4064]
  40873c:	ldr	x2, [sp, #8264]
  408740:	ldr	x0, [x0]
  408744:	eor	x0, x2, x0
  408748:	cmp	x0, #0x0
  40874c:	b.eq	408754 <server_read_dev_kmsg+0x24c>  // b.none
  408750:	bl	4063e0 <__stack_chk_fail@plt>
  408754:	mov	w0, w1
  408758:	ldp	x29, x30, [sp]
  40875c:	mov	x12, #0x2050                	// #8272
  408760:	add	sp, sp, x12
  408764:	ret

0000000000408768 <server_flush_dev_kmsg>:
  408768:	stp	x29, x30, [sp, #-48]!
  40876c:	mov	x29, sp
  408770:	str	x0, [sp, #24]
  408774:	ldr	x0, [sp, #24]
  408778:	cmp	x0, #0x0
  40877c:	cset	w0, eq  // eq = none
  408780:	and	w0, w0, #0xff
  408784:	and	x0, x0, #0xff
  408788:	cmp	x0, #0x0
  40878c:	b.eq	4087b8 <server_flush_dev_kmsg+0x50>  // b.none
  408790:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408794:	add	x1, x0, #0x7ab
  408798:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40879c:	add	x4, x0, #0xcd0
  4087a0:	mov	w3, #0x148                 	// #328
  4087a4:	mov	x2, x1
  4087a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4087ac:	add	x1, x0, #0x7c8
  4087b0:	mov	w0, #0x0                   	// #0
  4087b4:	bl	405fd0 <log_assert_failed_realm@plt>
  4087b8:	ldr	x0, [sp, #24]
  4087bc:	ldr	w0, [x0, #12]
  4087c0:	cmp	w0, #0x0
  4087c4:	b.ge	4087d0 <server_flush_dev_kmsg+0x68>  // b.tcont
  4087c8:	mov	w0, #0x0                   	// #0
  4087cc:	b	4088a4 <server_flush_dev_kmsg+0x13c>
  4087d0:	ldr	x0, [sp, #24]
  4087d4:	ldrb	w0, [x0, #592]
  4087d8:	ubfx	x0, x0, #0, #1
  4087dc:	and	w0, w0, #0xff
  4087e0:	eor	w0, w0, #0x1
  4087e4:	and	w0, w0, #0xff
  4087e8:	cmp	w0, #0x0
  4087ec:	b.eq	4087f8 <server_flush_dev_kmsg+0x90>  // b.none
  4087f0:	mov	w0, #0x0                   	// #0
  4087f4:	b	4088a4 <server_flush_dev_kmsg+0x13c>
  4087f8:	mov	w0, #0x7                   	// #7
  4087fc:	str	w0, [sp, #32]
  408800:	str	wzr, [sp, #36]
  408804:	str	wzr, [sp, #40]
  408808:	ldr	w0, [sp, #40]
  40880c:	bl	406c30 <log_get_max_level_realm@plt>
  408810:	mov	w1, w0
  408814:	ldr	w0, [sp, #32]
  408818:	and	w0, w0, #0x7
  40881c:	cmp	w1, w0
  408820:	b.lt	408864 <server_flush_dev_kmsg+0xfc>  // b.tstop
  408824:	ldr	w0, [sp, #40]
  408828:	lsl	w1, w0, #10
  40882c:	ldr	w0, [sp, #32]
  408830:	orr	w6, w1, w0
  408834:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408838:	add	x1, x0, #0x7ab
  40883c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408840:	add	x5, x0, #0xa50
  408844:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408848:	add	x4, x0, #0xce8
  40884c:	mov	w3, #0x150                 	// #336
  408850:	mov	x2, x1
  408854:	ldr	w1, [sp, #36]
  408858:	mov	w0, w6
  40885c:	bl	406590 <log_internal_realm@plt>
  408860:	b	40886c <server_flush_dev_kmsg+0x104>
  408864:	ldr	w0, [sp, #36]
  408868:	cmp	w0, #0x0
  40886c:	ldr	x0, [sp, #24]
  408870:	bl	408508 <server_read_dev_kmsg>
  408874:	str	w0, [sp, #44]
  408878:	ldr	w0, [sp, #44]
  40887c:	cmp	w0, #0x0
  408880:	b.ge	40888c <server_flush_dev_kmsg+0x124>  // b.tcont
  408884:	ldr	w0, [sp, #44]
  408888:	b	4088a4 <server_flush_dev_kmsg+0x13c>
  40888c:	ldr	w0, [sp, #44]
  408890:	cmp	w0, #0x0
  408894:	b.eq	40889c <server_flush_dev_kmsg+0x134>  // b.none
  408898:	b	40886c <server_flush_dev_kmsg+0x104>
  40889c:	nop
  4088a0:	mov	w0, #0x0                   	// #0
  4088a4:	ldp	x29, x30, [sp], #48
  4088a8:	ret

00000000004088ac <dispatch_dev_kmsg>:
  4088ac:	stp	x29, x30, [sp, #-80]!
  4088b0:	mov	x29, sp
  4088b4:	str	x0, [sp, #40]
  4088b8:	str	w1, [sp, #36]
  4088bc:	str	w2, [sp, #32]
  4088c0:	str	x3, [sp, #24]
  4088c4:	ldr	x0, [sp, #24]
  4088c8:	str	x0, [sp, #72]
  4088cc:	ldr	x0, [sp, #40]
  4088d0:	cmp	x0, #0x0
  4088d4:	cset	w0, eq  // eq = none
  4088d8:	and	w0, w0, #0xff
  4088dc:	and	x0, x0, #0xff
  4088e0:	cmp	x0, #0x0
  4088e4:	b.eq	408910 <dispatch_dev_kmsg+0x64>  // b.none
  4088e8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4088ec:	add	x1, x0, #0x7ab
  4088f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4088f4:	add	x4, x0, #0xd00
  4088f8:	mov	w3, #0x161                 	// #353
  4088fc:	mov	x2, x1
  408900:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408904:	add	x1, x0, #0xa68
  408908:	mov	w0, #0x0                   	// #0
  40890c:	bl	405fd0 <log_assert_failed_realm@plt>
  408910:	ldr	x0, [sp, #72]
  408914:	ldr	w0, [x0, #12]
  408918:	ldr	w1, [sp, #36]
  40891c:	cmp	w1, w0
  408920:	cset	w0, ne  // ne = any
  408924:	and	w0, w0, #0xff
  408928:	and	x0, x0, #0xff
  40892c:	cmp	x0, #0x0
  408930:	b.eq	40895c <dispatch_dev_kmsg+0xb0>  // b.none
  408934:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408938:	add	x1, x0, #0x7ab
  40893c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408940:	add	x4, x0, #0xd00
  408944:	mov	w3, #0x162                 	// #354
  408948:	mov	x2, x1
  40894c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408950:	add	x1, x0, #0xa70
  408954:	mov	w0, #0x0                   	// #0
  408958:	bl	405fd0 <log_assert_failed_realm@plt>
  40895c:	ldr	x0, [sp, #72]
  408960:	cmp	x0, #0x0
  408964:	cset	w0, eq  // eq = none
  408968:	and	w0, w0, #0xff
  40896c:	and	x0, x0, #0xff
  408970:	cmp	x0, #0x0
  408974:	b.eq	4089a0 <dispatch_dev_kmsg+0xf4>  // b.none
  408978:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40897c:	add	x1, x0, #0x7ab
  408980:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408984:	add	x4, x0, #0xd00
  408988:	mov	w3, #0x163                 	// #355
  40898c:	mov	x2, x1
  408990:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408994:	add	x1, x0, #0x7c8
  408998:	mov	w0, #0x0                   	// #0
  40899c:	bl	405fd0 <log_assert_failed_realm@plt>
  4089a0:	ldr	w0, [sp, #32]
  4089a4:	and	w0, w0, #0x8
  4089a8:	cmp	w0, #0x0
  4089ac:	b.eq	408a24 <dispatch_dev_kmsg+0x178>  // b.none
  4089b0:	mov	w0, #0x4                   	// #4
  4089b4:	str	w0, [sp, #48]
  4089b8:	str	wzr, [sp, #52]
  4089bc:	str	wzr, [sp, #56]
  4089c0:	ldr	w0, [sp, #56]
  4089c4:	bl	406c30 <log_get_max_level_realm@plt>
  4089c8:	mov	w1, w0
  4089cc:	ldr	w0, [sp, #48]
  4089d0:	and	w0, w0, #0x7
  4089d4:	cmp	w1, w0
  4089d8:	b.lt	408a1c <dispatch_dev_kmsg+0x170>  // b.tstop
  4089dc:	ldr	w0, [sp, #56]
  4089e0:	lsl	w1, w0, #10
  4089e4:	ldr	w0, [sp, #48]
  4089e8:	orr	w6, w1, w0
  4089ec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4089f0:	add	x1, x0, #0x7ab
  4089f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4089f8:	add	x5, x0, #0xa88
  4089fc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408a00:	add	x4, x0, #0xd18
  408a04:	mov	w3, #0x166                 	// #358
  408a08:	mov	x2, x1
  408a0c:	ldr	w1, [sp, #52]
  408a10:	mov	w0, w6
  408a14:	bl	406590 <log_internal_realm@plt>
  408a18:	b	408a24 <dispatch_dev_kmsg+0x178>
  408a1c:	ldr	w0, [sp, #52]
  408a20:	cmp	w0, #0x0
  408a24:	ldr	w0, [sp, #32]
  408a28:	and	w0, w0, #0x1
  408a2c:	cmp	w0, #0x0
  408a30:	b.ne	408aac <dispatch_dev_kmsg+0x200>  // b.any
  408a34:	mov	w0, #0x3                   	// #3
  408a38:	str	w0, [sp, #60]
  408a3c:	str	wzr, [sp, #64]
  408a40:	str	wzr, [sp, #68]
  408a44:	ldr	w0, [sp, #68]
  408a48:	bl	406c30 <log_get_max_level_realm@plt>
  408a4c:	mov	w1, w0
  408a50:	ldr	w0, [sp, #60]
  408a54:	and	w0, w0, #0x7
  408a58:	cmp	w1, w0
  408a5c:	b.lt	408aa4 <dispatch_dev_kmsg+0x1f8>  // b.tstop
  408a60:	ldr	w0, [sp, #68]
  408a64:	lsl	w1, w0, #10
  408a68:	ldr	w0, [sp, #60]
  408a6c:	orr	w7, w1, w0
  408a70:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408a74:	add	x1, x0, #0x7ab
  408a78:	ldr	w6, [sp, #32]
  408a7c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408a80:	add	x5, x0, #0xab8
  408a84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408a88:	add	x4, x0, #0xd18
  408a8c:	mov	w3, #0x169                 	// #361
  408a90:	mov	x2, x1
  408a94:	ldr	w1, [sp, #64]
  408a98:	mov	w0, w7
  408a9c:	bl	406590 <log_internal_realm@plt>
  408aa0:	b	408aac <dispatch_dev_kmsg+0x200>
  408aa4:	ldr	w0, [sp, #64]
  408aa8:	cmp	w0, #0x0
  408aac:	ldr	x0, [sp, #72]
  408ab0:	bl	408508 <server_read_dev_kmsg>
  408ab4:	ldp	x29, x30, [sp], #80
  408ab8:	ret

0000000000408abc <server_open_dev_kmsg>:
  408abc:	stp	x29, x30, [sp, #-80]!
  408ac0:	mov	x29, sp
  408ac4:	str	x0, [sp, #24]
  408ac8:	ldr	x0, [sp, #24]
  408acc:	cmp	x0, #0x0
  408ad0:	cset	w0, eq  // eq = none
  408ad4:	and	w0, w0, #0xff
  408ad8:	and	x0, x0, #0xff
  408adc:	cmp	x0, #0x0
  408ae0:	b.eq	408b0c <server_open_dev_kmsg+0x50>  // b.none
  408ae4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408ae8:	add	x1, x0, #0x7ab
  408aec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408af0:	add	x4, x0, #0xd30
  408af4:	mov	w3, #0x172                 	// #370
  408af8:	mov	x2, x1
  408afc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408b00:	add	x1, x0, #0x7c8
  408b04:	mov	w0, #0x0                   	// #0
  408b08:	bl	405fd0 <log_assert_failed_realm@plt>
  408b0c:	ldr	x0, [sp, #24]
  408b10:	ldrb	w0, [x0, #457]
  408b14:	cmp	w0, #0x0
  408b18:	b.eq	408b2c <server_open_dev_kmsg+0x70>  // b.none
  408b1c:	mov	w0, #0x902                 	// #2306
  408b20:	movk	w0, #0x8, lsl #16
  408b24:	str	w0, [sp, #36]
  408b28:	b	408b38 <server_open_dev_kmsg+0x7c>
  408b2c:	mov	w0, #0x901                 	// #2305
  408b30:	movk	w0, #0x8, lsl #16
  408b34:	str	w0, [sp, #36]
  408b38:	ldr	w0, [sp, #36]
  408b3c:	mov	w1, w0
  408b40:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408b44:	add	x0, x0, #0xae8
  408b48:	bl	406ad0 <open64@plt>
  408b4c:	mov	w1, w0
  408b50:	ldr	x0, [sp, #24]
  408b54:	str	w1, [x0, #12]
  408b58:	ldr	x0, [sp, #24]
  408b5c:	ldr	w0, [x0, #12]
  408b60:	cmp	w0, #0x0
  408b64:	b.ge	408bfc <server_open_dev_kmsg+0x140>  // b.tcont
  408b68:	bl	4062e0 <__errno_location@plt>
  408b6c:	ldr	w0, [x0]
  408b70:	cmp	w0, #0x2
  408b74:	b.ne	408b80 <server_open_dev_kmsg+0xc4>  // b.any
  408b78:	mov	w0, #0x7                   	// #7
  408b7c:	b	408b84 <server_open_dev_kmsg+0xc8>
  408b80:	mov	w0, #0x4                   	// #4
  408b84:	str	w0, [sp, #68]
  408b88:	str	wzr, [sp, #72]
  408b8c:	str	wzr, [sp, #76]
  408b90:	ldr	w0, [sp, #76]
  408b94:	bl	406c30 <log_get_max_level_realm@plt>
  408b98:	mov	w1, w0
  408b9c:	ldr	w0, [sp, #68]
  408ba0:	and	w0, w0, #0x7
  408ba4:	cmp	w1, w0
  408ba8:	b.lt	408bec <server_open_dev_kmsg+0x130>  // b.tstop
  408bac:	ldr	w0, [sp, #76]
  408bb0:	lsl	w1, w0, #10
  408bb4:	ldr	w0, [sp, #68]
  408bb8:	orr	w6, w1, w0
  408bbc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408bc0:	add	x1, x0, #0x7ab
  408bc4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408bc8:	add	x5, x0, #0xaf8
  408bcc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408bd0:	add	x4, x0, #0xd48
  408bd4:	mov	w3, #0x17b                 	// #379
  408bd8:	mov	x2, x1
  408bdc:	ldr	w1, [sp, #72]
  408be0:	mov	w0, w6
  408be4:	bl	406590 <log_internal_realm@plt>
  408be8:	b	408bf4 <server_open_dev_kmsg+0x138>
  408bec:	ldr	w0, [sp, #72]
  408bf0:	cmp	w0, #0x0
  408bf4:	mov	w0, #0x0                   	// #0
  408bf8:	b	408dd4 <server_open_dev_kmsg+0x318>
  408bfc:	ldr	x0, [sp, #24]
  408c00:	ldrb	w0, [x0, #457]
  408c04:	eor	w0, w0, #0x1
  408c08:	and	w0, w0, #0xff
  408c0c:	cmp	w0, #0x0
  408c10:	b.eq	408c1c <server_open_dev_kmsg+0x160>  // b.none
  408c14:	mov	w0, #0x0                   	// #0
  408c18:	b	408dd4 <server_open_dev_kmsg+0x318>
  408c1c:	ldr	x0, [sp, #24]
  408c20:	ldr	x6, [x0, #32]
  408c24:	ldr	x0, [sp, #24]
  408c28:	add	x1, x0, #0x40
  408c2c:	ldr	x0, [sp, #24]
  408c30:	ldr	w2, [x0, #12]
  408c34:	ldr	x5, [sp, #24]
  408c38:	adrp	x0, 408000 <dev_kmsg_record+0x684>
  408c3c:	add	x4, x0, #0x8ac
  408c40:	mov	w3, #0x1                   	// #1
  408c44:	mov	x0, x6
  408c48:	bl	406680 <sd_event_add_io@plt>
  408c4c:	str	w0, [sp, #40]
  408c50:	ldr	w0, [sp, #40]
  408c54:	cmp	w0, #0x0
  408c58:	b.ge	408cec <server_open_dev_kmsg+0x230>  // b.tcont
  408c5c:	ldr	w0, [sp, #40]
  408c60:	cmn	w0, #0x1
  408c64:	b.ne	408c70 <server_open_dev_kmsg+0x1b4>  // b.any
  408c68:	str	wzr, [sp, #40]
  408c6c:	b	408da0 <server_open_dev_kmsg+0x2e4>
  408c70:	mov	w0, #0x3                   	// #3
  408c74:	str	w0, [sp, #56]
  408c78:	ldr	w0, [sp, #40]
  408c7c:	str	w0, [sp, #60]
  408c80:	str	wzr, [sp, #64]
  408c84:	ldr	w0, [sp, #64]
  408c88:	bl	406c30 <log_get_max_level_realm@plt>
  408c8c:	mov	w1, w0
  408c90:	ldr	w0, [sp, #56]
  408c94:	and	w0, w0, #0x7
  408c98:	cmp	w1, w0
  408c9c:	b.lt	408ce0 <server_open_dev_kmsg+0x224>  // b.tstop
  408ca0:	ldr	w0, [sp, #64]
  408ca4:	lsl	w1, w0, #10
  408ca8:	ldr	w0, [sp, #56]
  408cac:	orr	w6, w1, w0
  408cb0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408cb4:	add	x1, x0, #0x7ab
  408cb8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408cbc:	add	x5, x0, #0xb20
  408cc0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408cc4:	add	x4, x0, #0xd48
  408cc8:	mov	w3, #0x18d                 	// #397
  408ccc:	mov	x2, x1
  408cd0:	ldr	w1, [sp, #60]
  408cd4:	mov	w0, w6
  408cd8:	bl	406590 <log_internal_realm@plt>
  408cdc:	b	408da0 <server_open_dev_kmsg+0x2e4>
  408ce0:	ldr	w0, [sp, #60]
  408ce4:	cmp	w0, #0x0
  408ce8:	b	408da0 <server_open_dev_kmsg+0x2e4>
  408cec:	ldr	x0, [sp, #24]
  408cf0:	ldr	x0, [x0, #64]
  408cf4:	mov	x1, #0xffffffffffffffa6    	// #-90
  408cf8:	bl	406380 <sd_event_source_set_priority@plt>
  408cfc:	str	w0, [sp, #40]
  408d00:	ldr	w0, [sp, #40]
  408d04:	cmp	w0, #0x0
  408d08:	b.ge	408d88 <server_open_dev_kmsg+0x2cc>  // b.tcont
  408d0c:	mov	w0, #0x3                   	// #3
  408d10:	str	w0, [sp, #44]
  408d14:	ldr	w0, [sp, #40]
  408d18:	str	w0, [sp, #48]
  408d1c:	str	wzr, [sp, #52]
  408d20:	ldr	w0, [sp, #52]
  408d24:	bl	406c30 <log_get_max_level_realm@plt>
  408d28:	mov	w1, w0
  408d2c:	ldr	w0, [sp, #44]
  408d30:	and	w0, w0, #0x7
  408d34:	cmp	w1, w0
  408d38:	b.lt	408d7c <server_open_dev_kmsg+0x2c0>  // b.tstop
  408d3c:	ldr	w0, [sp, #52]
  408d40:	lsl	w1, w0, #10
  408d44:	ldr	w0, [sp, #44]
  408d48:	orr	w6, w1, w0
  408d4c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408d50:	add	x1, x0, #0x7ab
  408d54:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408d58:	add	x5, x0, #0xb50
  408d5c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408d60:	add	x4, x0, #0xd48
  408d64:	mov	w3, #0x193                 	// #403
  408d68:	mov	x2, x1
  408d6c:	ldr	w1, [sp, #48]
  408d70:	mov	w0, w6
  408d74:	bl	406590 <log_internal_realm@plt>
  408d78:	b	408da0 <server_open_dev_kmsg+0x2e4>
  408d7c:	ldr	w0, [sp, #48]
  408d80:	cmp	w0, #0x0
  408d84:	b	408da0 <server_open_dev_kmsg+0x2e4>
  408d88:	ldr	x0, [sp, #24]
  408d8c:	ldrb	w1, [x0, #592]
  408d90:	orr	w1, w1, #0x1
  408d94:	strb	w1, [x0, #592]
  408d98:	mov	w0, #0x0                   	// #0
  408d9c:	b	408dd4 <server_open_dev_kmsg+0x318>
  408da0:	ldr	x0, [sp, #24]
  408da4:	ldr	x0, [x0, #64]
  408da8:	bl	405ee0 <sd_event_source_unref@plt>
  408dac:	mov	x1, x0
  408db0:	ldr	x0, [sp, #24]
  408db4:	str	x1, [x0, #64]
  408db8:	ldr	x0, [sp, #24]
  408dbc:	ldr	w0, [x0, #12]
  408dc0:	bl	405f40 <safe_close@plt>
  408dc4:	mov	w1, w0
  408dc8:	ldr	x0, [sp, #24]
  408dcc:	str	w1, [x0, #12]
  408dd0:	ldr	w0, [sp, #40]
  408dd4:	ldp	x29, x30, [sp], #80
  408dd8:	ret

0000000000408ddc <server_open_kernel_seqnum>:
  408ddc:	stp	x29, x30, [sp, #-112]!
  408de0:	mov	x29, sp
  408de4:	str	x19, [sp, #16]
  408de8:	str	x0, [sp, #40]
  408dec:	adrp	x0, 441000 <wordlist.9471+0x208>
  408df0:	ldr	x0, [x0, #4064]
  408df4:	ldr	x1, [x0]
  408df8:	str	x1, [sp, #104]
  408dfc:	mov	x1, #0x0                   	// #0
  408e00:	ldr	x0, [sp, #40]
  408e04:	cmp	x0, #0x0
  408e08:	cset	w0, eq  // eq = none
  408e0c:	and	w0, w0, #0xff
  408e10:	and	x0, x0, #0xff
  408e14:	cmp	x0, #0x0
  408e18:	b.eq	408e44 <server_open_kernel_seqnum+0x68>  // b.none
  408e1c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408e20:	add	x1, x0, #0x7ab
  408e24:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408e28:	add	x4, x0, #0xd60
  408e2c:	mov	w3, #0x1a7                 	// #423
  408e30:	mov	x2, x1
  408e34:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408e38:	add	x1, x0, #0x7c8
  408e3c:	mov	w0, #0x0                   	// #0
  408e40:	bl	405fd0 <log_assert_failed_realm@plt>
  408e44:	mov	w2, #0x1a4                 	// #420
  408e48:	mov	w1, #0x8142                	// #33090
  408e4c:	movk	w1, #0x8, lsl #16
  408e50:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408e54:	add	x0, x0, #0xb88
  408e58:	bl	406ad0 <open64@plt>
  408e5c:	str	w0, [sp, #52]
  408e60:	ldr	w0, [sp, #52]
  408e64:	cmp	w0, #0x0
  408e68:	b.ge	408ef0 <server_open_kernel_seqnum+0x114>  // b.tcont
  408e6c:	mov	w0, #0x3                   	// #3
  408e70:	str	w0, [sp, #84]
  408e74:	bl	4062e0 <__errno_location@plt>
  408e78:	ldr	w0, [x0]
  408e7c:	str	w0, [sp, #88]
  408e80:	str	wzr, [sp, #92]
  408e84:	ldr	w0, [sp, #92]
  408e88:	bl	406c30 <log_get_max_level_realm@plt>
  408e8c:	mov	w1, w0
  408e90:	ldr	w0, [sp, #84]
  408e94:	and	w0, w0, #0x7
  408e98:	cmp	w1, w0
  408e9c:	b.lt	408ee0 <server_open_kernel_seqnum+0x104>  // b.tstop
  408ea0:	ldr	w0, [sp, #92]
  408ea4:	lsl	w1, w0, #10
  408ea8:	ldr	w0, [sp, #84]
  408eac:	orr	w6, w1, w0
  408eb0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408eb4:	add	x1, x0, #0x7ab
  408eb8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408ebc:	add	x5, x0, #0xbb0
  408ec0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408ec4:	add	x4, x0, #0xd80
  408ec8:	mov	w3, #0x1af                 	// #431
  408ecc:	mov	x2, x1
  408ed0:	ldr	w1, [sp, #88]
  408ed4:	mov	w0, w6
  408ed8:	bl	406590 <log_internal_realm@plt>
  408edc:	b	408ee8 <server_open_kernel_seqnum+0x10c>
  408ee0:	ldr	w0, [sp, #88]
  408ee4:	cmp	w0, #0x0
  408ee8:	mov	w19, #0x0                   	// #0
  408eec:	b	409054 <server_open_kernel_seqnum+0x278>
  408ef0:	ldr	w0, [sp, #52]
  408ef4:	mov	x2, #0x8                   	// #8
  408ef8:	mov	x1, #0x0                   	// #0
  408efc:	bl	406c10 <posix_fallocate64@plt>
  408f00:	str	w0, [sp, #56]
  408f04:	ldr	w0, [sp, #56]
  408f08:	cmp	w0, #0x0
  408f0c:	b.eq	408f90 <server_open_kernel_seqnum+0x1b4>  // b.none
  408f10:	mov	w0, #0x3                   	// #3
  408f14:	str	w0, [sp, #72]
  408f18:	ldr	w0, [sp, #56]
  408f1c:	str	w0, [sp, #76]
  408f20:	str	wzr, [sp, #80]
  408f24:	ldr	w0, [sp, #80]
  408f28:	bl	406c30 <log_get_max_level_realm@plt>
  408f2c:	mov	w1, w0
  408f30:	ldr	w0, [sp, #72]
  408f34:	and	w0, w0, #0x7
  408f38:	cmp	w1, w0
  408f3c:	b.lt	408f80 <server_open_kernel_seqnum+0x1a4>  // b.tstop
  408f40:	ldr	w0, [sp, #80]
  408f44:	lsl	w1, w0, #10
  408f48:	ldr	w0, [sp, #72]
  408f4c:	orr	w6, w1, w0
  408f50:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408f54:	add	x1, x0, #0x7ab
  408f58:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408f5c:	add	x5, x0, #0xbf0
  408f60:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  408f64:	add	x4, x0, #0xd80
  408f68:	mov	w3, #0x1b5                 	// #437
  408f6c:	mov	x2, x1
  408f70:	ldr	w1, [sp, #76]
  408f74:	mov	w0, w6
  408f78:	bl	406590 <log_internal_realm@plt>
  408f7c:	b	408f88 <server_open_kernel_seqnum+0x1ac>
  408f80:	ldr	w0, [sp, #76]
  408f84:	cmp	w0, #0x0
  408f88:	mov	w19, #0x0                   	// #0
  408f8c:	b	409054 <server_open_kernel_seqnum+0x278>
  408f90:	ldr	w0, [sp, #52]
  408f94:	mov	x5, #0x0                   	// #0
  408f98:	mov	w4, w0
  408f9c:	mov	w3, #0x1                   	// #1
  408fa0:	mov	w2, #0x3                   	// #3
  408fa4:	mov	x1, #0x8                   	// #8
  408fa8:	mov	x0, #0x0                   	// #0
  408fac:	bl	406200 <mmap64@plt>
  408fb0:	str	x0, [sp, #96]
  408fb4:	ldr	x0, [sp, #96]
  408fb8:	cmn	x0, #0x1
  408fbc:	b.ne	409044 <server_open_kernel_seqnum+0x268>  // b.any
  408fc0:	mov	w0, #0x3                   	// #3
  408fc4:	str	w0, [sp, #60]
  408fc8:	bl	4062e0 <__errno_location@plt>
  408fcc:	ldr	w0, [x0]
  408fd0:	str	w0, [sp, #64]
  408fd4:	str	wzr, [sp, #68]
  408fd8:	ldr	w0, [sp, #68]
  408fdc:	bl	406c30 <log_get_max_level_realm@plt>
  408fe0:	mov	w1, w0
  408fe4:	ldr	w0, [sp, #60]
  408fe8:	and	w0, w0, #0x7
  408fec:	cmp	w1, w0
  408ff0:	b.lt	409034 <server_open_kernel_seqnum+0x258>  // b.tstop
  408ff4:	ldr	w0, [sp, #68]
  408ff8:	lsl	w1, w0, #10
  408ffc:	ldr	w0, [sp, #60]
  409000:	orr	w6, w1, w0
  409004:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409008:	add	x1, x0, #0x7ab
  40900c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409010:	add	x5, x0, #0xc28
  409014:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409018:	add	x4, x0, #0xd80
  40901c:	mov	w3, #0x1bb                 	// #443
  409020:	mov	x2, x1
  409024:	ldr	w1, [sp, #64]
  409028:	mov	w0, w6
  40902c:	bl	406590 <log_internal_realm@plt>
  409030:	b	40903c <server_open_kernel_seqnum+0x260>
  409034:	ldr	w0, [sp, #64]
  409038:	cmp	w0, #0x0
  40903c:	mov	w19, #0x0                   	// #0
  409040:	b	409054 <server_open_kernel_seqnum+0x278>
  409044:	ldr	x0, [sp, #40]
  409048:	ldr	x1, [sp, #96]
  40904c:	str	x1, [x0, #584]
  409050:	mov	w19, #0x0                   	// #0
  409054:	add	x0, sp, #0x34
  409058:	bl	40732c <closep>
  40905c:	mov	w1, w19
  409060:	adrp	x0, 441000 <wordlist.9471+0x208>
  409064:	ldr	x0, [x0, #4064]
  409068:	ldr	x2, [sp, #104]
  40906c:	ldr	x0, [x0]
  409070:	eor	x0, x2, x0
  409074:	cmp	x0, #0x0
  409078:	b.eq	409080 <server_open_kernel_seqnum+0x2a4>  // b.none
  40907c:	bl	4063e0 <__stack_chk_fail@plt>
  409080:	mov	w0, w1
  409084:	ldr	x19, [sp, #16]
  409088:	ldp	x29, x30, [sp], #112
  40908c:	ret

0000000000409090 <sd_id128_is_null>:
  409090:	sub	sp, sp, #0x10
  409094:	stp	x0, x1, [sp]
  409098:	ldr	x0, [sp]
  40909c:	cmp	x0, #0x0
  4090a0:	b.ne	4090b8 <sd_id128_is_null+0x28>  // b.any
  4090a4:	ldr	x0, [sp, #8]
  4090a8:	cmp	x0, #0x0
  4090ac:	b.ne	4090b8 <sd_id128_is_null+0x28>  // b.any
  4090b0:	mov	w0, #0x1                   	// #1
  4090b4:	b	4090bc <sd_id128_is_null+0x2c>
  4090b8:	mov	w0, #0x0                   	// #0
  4090bc:	add	sp, sp, #0x10
  4090c0:	ret

00000000004090c4 <ALIGN_TO>:
  4090c4:	sub	sp, sp, #0x10
  4090c8:	str	x0, [sp, #8]
  4090cc:	str	x1, [sp]
  4090d0:	ldr	x1, [sp, #8]
  4090d4:	ldr	x0, [sp]
  4090d8:	add	x0, x1, x0
  4090dc:	sub	x1, x0, #0x1
  4090e0:	ldr	x0, [sp]
  4090e4:	neg	x0, x0
  4090e8:	and	x0, x1, x0
  4090ec:	add	sp, sp, #0x10
  4090f0:	ret

00000000004090f4 <freep>:
  4090f4:	stp	x29, x30, [sp, #-32]!
  4090f8:	mov	x29, sp
  4090fc:	str	x0, [sp, #24]
  409100:	ldr	x0, [sp, #24]
  409104:	ldr	x0, [x0]
  409108:	bl	406930 <free@plt>
  40910c:	nop
  409110:	ldp	x29, x30, [sp], #32
  409114:	ret

0000000000409118 <size_multiply_overflow>:
  409118:	sub	sp, sp, #0x10
  40911c:	str	x0, [sp, #8]
  409120:	str	x1, [sp]
  409124:	ldr	x0, [sp]
  409128:	cmp	x0, #0x0
  40912c:	cset	w0, ne  // ne = any
  409130:	and	w0, w0, #0xff
  409134:	and	x0, x0, #0xff
  409138:	cmp	x0, #0x0
  40913c:	b.eq	409180 <size_multiply_overflow+0x68>  // b.none
  409140:	mov	x2, #0x0                   	// #0
  409144:	ldr	x1, [sp, #8]
  409148:	ldr	x0, [sp]
  40914c:	umulh	x0, x1, x0
  409150:	cmp	x0, #0x0
  409154:	b.eq	40915c <size_multiply_overflow+0x44>  // b.none
  409158:	mov	x2, #0x1                   	// #1
  40915c:	mov	x0, x2
  409160:	cmp	x0, #0x0
  409164:	cset	w0, ne  // ne = any
  409168:	and	w0, w0, #0xff
  40916c:	and	x0, x0, #0xff
  409170:	cmp	x0, #0x0
  409174:	b.eq	409180 <size_multiply_overflow+0x68>  // b.none
  409178:	mov	w0, #0x1                   	// #1
  40917c:	b	409184 <size_multiply_overflow+0x6c>
  409180:	mov	w0, #0x0                   	// #0
  409184:	and	w0, w0, #0x1
  409188:	and	w0, w0, #0xff
  40918c:	add	sp, sp, #0x10
  409190:	ret

0000000000409194 <audit_session_is_valid>:
  409194:	sub	sp, sp, #0x10
  409198:	str	w0, [sp, #12]
  40919c:	ldr	w0, [sp, #12]
  4091a0:	cmp	w0, #0x0
  4091a4:	b.eq	4091bc <audit_session_is_valid+0x28>  // b.none
  4091a8:	ldr	w0, [sp, #12]
  4091ac:	cmn	w0, #0x1
  4091b0:	b.eq	4091bc <audit_session_is_valid+0x28>  // b.none
  4091b4:	mov	w0, #0x1                   	// #1
  4091b8:	b	4091c0 <audit_session_is_valid+0x2c>
  4091bc:	mov	w0, #0x0                   	// #0
  4091c0:	and	w0, w0, #0x1
  4091c4:	and	w0, w0, #0xff
  4091c8:	add	sp, sp, #0x10
  4091cc:	ret

00000000004091d0 <ordered_hashmap_free>:
  4091d0:	stp	x29, x30, [sp, #-32]!
  4091d4:	mov	x29, sp
  4091d8:	str	x0, [sp, #24]
  4091dc:	mov	x2, #0x0                   	// #0
  4091e0:	mov	x1, #0x0                   	// #0
  4091e4:	ldr	x0, [sp, #24]
  4091e8:	bl	405b70 <internal_hashmap_free@plt>
  4091ec:	ldp	x29, x30, [sp], #32
  4091f0:	ret

00000000004091f4 <ordered_hashmap_put>:
  4091f4:	stp	x29, x30, [sp, #-48]!
  4091f8:	mov	x29, sp
  4091fc:	str	x0, [sp, #40]
  409200:	str	x1, [sp, #32]
  409204:	str	x2, [sp, #24]
  409208:	ldr	x2, [sp, #24]
  40920c:	ldr	x1, [sp, #32]
  409210:	ldr	x0, [sp, #40]
  409214:	bl	4065f0 <hashmap_put@plt>
  409218:	ldp	x29, x30, [sp], #48
  40921c:	ret

0000000000409220 <ordered_hashmap_replace>:
  409220:	stp	x29, x30, [sp, #-48]!
  409224:	mov	x29, sp
  409228:	str	x0, [sp, #40]
  40922c:	str	x1, [sp, #32]
  409230:	str	x2, [sp, #24]
  409234:	ldr	x2, [sp, #24]
  409238:	ldr	x1, [sp, #32]
  40923c:	ldr	x0, [sp, #40]
  409240:	bl	4067d0 <hashmap_replace@plt>
  409244:	ldp	x29, x30, [sp], #48
  409248:	ret

000000000040924c <ordered_hashmap_get>:
  40924c:	stp	x29, x30, [sp, #-32]!
  409250:	mov	x29, sp
  409254:	str	x0, [sp, #24]
  409258:	str	x1, [sp, #16]
  40925c:	ldr	x1, [sp, #16]
  409260:	ldr	x0, [sp, #24]
  409264:	bl	4061e0 <internal_hashmap_get@plt>
  409268:	ldp	x29, x30, [sp], #32
  40926c:	ret

0000000000409270 <ordered_hashmap_contains>:
  409270:	stp	x29, x30, [sp, #-32]!
  409274:	mov	x29, sp
  409278:	str	x0, [sp, #24]
  40927c:	str	x1, [sp, #16]
  409280:	ldr	x1, [sp, #16]
  409284:	ldr	x0, [sp, #24]
  409288:	bl	405d00 <internal_hashmap_contains@plt>
  40928c:	and	w0, w0, #0xff
  409290:	ldp	x29, x30, [sp], #32
  409294:	ret

0000000000409298 <ordered_hashmap_remove>:
  409298:	stp	x29, x30, [sp, #-32]!
  40929c:	mov	x29, sp
  4092a0:	str	x0, [sp, #24]
  4092a4:	str	x1, [sp, #16]
  4092a8:	ldr	x1, [sp, #16]
  4092ac:	ldr	x0, [sp, #24]
  4092b0:	bl	405ad0 <internal_hashmap_remove@plt>
  4092b4:	ldp	x29, x30, [sp], #32
  4092b8:	ret

00000000004092bc <ordered_hashmap_size>:
  4092bc:	stp	x29, x30, [sp, #-32]!
  4092c0:	mov	x29, sp
  4092c4:	str	x0, [sp, #24]
  4092c8:	ldr	x0, [sp, #24]
  4092cc:	bl	406580 <internal_hashmap_size@plt>
  4092d0:	ldp	x29, x30, [sp], #32
  4092d4:	ret

00000000004092d8 <ordered_hashmap_iterate>:
  4092d8:	stp	x29, x30, [sp, #-48]!
  4092dc:	mov	x29, sp
  4092e0:	str	x0, [sp, #40]
  4092e4:	str	x1, [sp, #32]
  4092e8:	str	x2, [sp, #24]
  4092ec:	str	x3, [sp, #16]
  4092f0:	ldr	x3, [sp, #16]
  4092f4:	ldr	x2, [sp, #24]
  4092f8:	ldr	x1, [sp, #32]
  4092fc:	ldr	x0, [sp, #40]
  409300:	bl	406760 <internal_hashmap_iterate@plt>
  409304:	and	w0, w0, #0xff
  409308:	ldp	x29, x30, [sp], #48
  40930c:	ret

0000000000409310 <ordered_hashmap_steal_first>:
  409310:	stp	x29, x30, [sp, #-32]!
  409314:	mov	x29, sp
  409318:	str	x0, [sp, #24]
  40931c:	mov	x2, #0x0                   	// #0
  409320:	mov	w1, #0x1                   	// #1
  409324:	ldr	x0, [sp, #24]
  409328:	bl	4067a0 <internal_hashmap_first_key_and_value@plt>
  40932c:	ldp	x29, x30, [sp], #32
  409330:	ret

0000000000409334 <set_free>:
  409334:	stp	x29, x30, [sp, #-32]!
  409338:	mov	x29, sp
  40933c:	str	x0, [sp, #24]
  409340:	mov	x2, #0x0                   	// #0
  409344:	mov	x1, #0x0                   	// #0
  409348:	ldr	x0, [sp, #24]
  40934c:	bl	405b70 <internal_hashmap_free@plt>
  409350:	ldp	x29, x30, [sp], #32
  409354:	ret

0000000000409358 <set_remove>:
  409358:	stp	x29, x30, [sp, #-32]!
  40935c:	mov	x29, sp
  409360:	str	x0, [sp, #24]
  409364:	str	x1, [sp, #16]
  409368:	ldr	x1, [sp, #16]
  40936c:	ldr	x0, [sp, #24]
  409370:	bl	405ad0 <internal_hashmap_remove@plt>
  409374:	ldp	x29, x30, [sp], #32
  409378:	ret

000000000040937c <set_size>:
  40937c:	stp	x29, x30, [sp, #-32]!
  409380:	mov	x29, sp
  409384:	str	x0, [sp, #24]
  409388:	ldr	x0, [sp, #24]
  40938c:	bl	406580 <internal_hashmap_size@plt>
  409390:	ldp	x29, x30, [sp], #32
  409394:	ret

0000000000409398 <set_steal_first>:
  409398:	stp	x29, x30, [sp, #-32]!
  40939c:	mov	x29, sp
  4093a0:	str	x0, [sp, #24]
  4093a4:	mov	x2, #0x0                   	// #0
  4093a8:	mov	w1, #0x1                   	// #1
  4093ac:	ldr	x0, [sp, #24]
  4093b0:	bl	4067a0 <internal_hashmap_first_key_and_value@plt>
  4093b4:	ldp	x29, x30, [sp], #32
  4093b8:	ret

00000000004093bc <isempty>:
  4093bc:	sub	sp, sp, #0x10
  4093c0:	str	x0, [sp, #8]
  4093c4:	ldr	x0, [sp, #8]
  4093c8:	cmp	x0, #0x0
  4093cc:	b.eq	4093e0 <isempty+0x24>  // b.none
  4093d0:	ldr	x0, [sp, #8]
  4093d4:	ldrb	w0, [x0]
  4093d8:	cmp	w0, #0x0
  4093dc:	b.ne	4093e8 <isempty+0x2c>  // b.any
  4093e0:	mov	w0, #0x1                   	// #1
  4093e4:	b	4093ec <isempty+0x30>
  4093e8:	mov	w0, #0x0                   	// #0
  4093ec:	and	w0, w0, #0x1
  4093f0:	and	w0, w0, #0xff
  4093f4:	add	sp, sp, #0x10
  4093f8:	ret

00000000004093fc <startswith>:
  4093fc:	stp	x29, x30, [sp, #-48]!
  409400:	mov	x29, sp
  409404:	str	x0, [sp, #24]
  409408:	str	x1, [sp, #16]
  40940c:	ldr	x0, [sp, #16]
  409410:	bl	406af0 <strlen@plt>
  409414:	str	x0, [sp, #40]
  409418:	ldr	x2, [sp, #40]
  40941c:	ldr	x1, [sp, #16]
  409420:	ldr	x0, [sp, #24]
  409424:	bl	406110 <strncmp@plt>
  409428:	cmp	w0, #0x0
  40942c:	b.ne	409440 <startswith+0x44>  // b.any
  409430:	ldr	x1, [sp, #24]
  409434:	ldr	x0, [sp, #40]
  409438:	add	x0, x1, x0
  40943c:	b	409444 <startswith+0x48>
  409440:	mov	x0, #0x0                   	// #0
  409444:	ldp	x29, x30, [sp], #48
  409448:	ret

000000000040944c <closep>:
  40944c:	stp	x29, x30, [sp, #-32]!
  409450:	mov	x29, sp
  409454:	str	x0, [sp, #24]
  409458:	ldr	x0, [sp, #24]
  40945c:	ldr	w0, [x0]
  409460:	bl	405f40 <safe_close@plt>
  409464:	nop
  409468:	ldp	x29, x30, [sp], #32
  40946c:	ret

0000000000409470 <closedirp>:
  409470:	stp	x29, x30, [sp, #-32]!
  409474:	mov	x29, sp
  409478:	str	x0, [sp, #24]
  40947c:	ldr	x0, [sp, #24]
  409480:	ldr	x0, [x0]
  409484:	cmp	x0, #0x0
  409488:	b.eq	409498 <closedirp+0x28>  // b.none
  40948c:	ldr	x0, [sp, #24]
  409490:	ldr	x0, [x0]
  409494:	bl	4060e0 <closedir@plt>
  409498:	nop
  40949c:	ldp	x29, x30, [sp], #32
  4094a0:	ret

00000000004094a4 <format_bytes>:
  4094a4:	stp	x29, x30, [sp, #-48]!
  4094a8:	mov	x29, sp
  4094ac:	str	x0, [sp, #40]
  4094b0:	str	x1, [sp, #32]
  4094b4:	str	x2, [sp, #24]
  4094b8:	mov	w3, #0x7                   	// #7
  4094bc:	ldr	x2, [sp, #24]
  4094c0:	ldr	x1, [sp, #32]
  4094c4:	ldr	x0, [sp, #40]
  4094c8:	bl	406a70 <format_bytes_full@plt>
  4094cc:	ldp	x29, x30, [sp], #48
  4094d0:	ret

00000000004094d4 <strerror_safe>:
  4094d4:	stp	x29, x30, [sp, #-32]!
  4094d8:	mov	x29, sp
  4094dc:	str	w0, [sp, #28]
  4094e0:	ldr	w0, [sp, #28]
  4094e4:	cmp	w0, #0x0
  4094e8:	cneg	w0, w0, lt  // lt = tstop
  4094ec:	bl	4069a0 <strerror@plt>
  4094f0:	ldp	x29, x30, [sp], #32
  4094f4:	ret

00000000004094f8 <IOVEC_TOTAL_SIZE>:
  4094f8:	sub	sp, sp, #0x20
  4094fc:	str	x0, [sp, #8]
  409500:	str	x1, [sp]
  409504:	str	xzr, [sp, #24]
  409508:	str	xzr, [sp, #16]
  40950c:	b	40953c <IOVEC_TOTAL_SIZE+0x44>
  409510:	ldr	x0, [sp, #16]
  409514:	lsl	x0, x0, #4
  409518:	ldr	x1, [sp, #8]
  40951c:	add	x0, x1, x0
  409520:	ldr	x0, [x0, #8]
  409524:	ldr	x1, [sp, #24]
  409528:	add	x0, x1, x0
  40952c:	str	x0, [sp, #24]
  409530:	ldr	x0, [sp, #16]
  409534:	add	x0, x0, #0x1
  409538:	str	x0, [sp, #16]
  40953c:	ldr	x1, [sp, #16]
  409540:	ldr	x0, [sp]
  409544:	cmp	x1, x0
  409548:	b.cc	409510 <IOVEC_TOTAL_SIZE+0x18>  // b.lo, b.ul, b.last
  40954c:	ldr	x0, [sp, #24]
  409550:	add	sp, sp, #0x20
  409554:	ret

0000000000409558 <sd_event_source_unrefp>:
  409558:	stp	x29, x30, [sp, #-32]!
  40955c:	mov	x29, sp
  409560:	str	x0, [sp, #24]
  409564:	ldr	x0, [sp, #24]
  409568:	ldr	x0, [x0]
  40956c:	cmp	x0, #0x0
  409570:	b.eq	409580 <sd_event_source_unrefp+0x28>  // b.none
  409574:	ldr	x0, [sp, #24]
  409578:	ldr	x0, [x0]
  40957c:	bl	405ee0 <sd_event_source_unref@plt>
  409580:	nop
  409584:	ldp	x29, x30, [sp], #32
  409588:	ret

000000000040958c <journal_file_closep>:
  40958c:	stp	x29, x30, [sp, #-32]!
  409590:	mov	x29, sp
  409594:	str	x0, [sp, #24]
  409598:	ldr	x0, [sp, #24]
  40959c:	ldr	x0, [x0]
  4095a0:	cmp	x0, #0x0
  4095a4:	b.eq	4095b4 <journal_file_closep+0x28>  // b.none
  4095a8:	ldr	x0, [sp, #24]
  4095ac:	ldr	x0, [x0]
  4095b0:	bl	406030 <journal_file_close@plt>
  4095b4:	nop
  4095b8:	ldp	x29, x30, [sp], #32
  4095bc:	ret

00000000004095c0 <client_context_extra_fields_n_iovec>:
  4095c0:	sub	sp, sp, #0x10
  4095c4:	str	x0, [sp, #8]
  4095c8:	ldr	x0, [sp, #8]
  4095cc:	cmp	x0, #0x0
  4095d0:	b.eq	4095e0 <client_context_extra_fields_n_iovec+0x20>  // b.none
  4095d4:	ldr	x0, [sp, #8]
  4095d8:	ldr	x0, [x0, #176]
  4095dc:	b	4095e4 <client_context_extra_fields_n_iovec+0x24>
  4095e0:	mov	x0, #0x0                   	// #0
  4095e4:	add	sp, sp, #0x10
  4095e8:	ret

00000000004095ec <fdset_freep>:
  4095ec:	stp	x29, x30, [sp, #-32]!
  4095f0:	mov	x29, sp
  4095f4:	str	x0, [sp, #24]
  4095f8:	ldr	x0, [sp, #24]
  4095fc:	ldr	x0, [x0]
  409600:	cmp	x0, #0x0
  409604:	b.eq	409614 <fdset_freep+0x28>  // b.none
  409608:	ldr	x0, [sp, #24]
  40960c:	ldr	x0, [x0]
  409610:	bl	406010 <fdset_free@plt>
  409614:	nop
  409618:	ldp	x29, x30, [sp], #32
  40961c:	ret

0000000000409620 <proc_cmdline_value_missing>:
  409620:	stp	x29, x30, [sp, #-48]!
  409624:	mov	x29, sp
  409628:	str	x0, [sp, #24]
  40962c:	str	x1, [sp, #16]
  409630:	ldr	x0, [sp, #16]
  409634:	cmp	x0, #0x0
  409638:	b.ne	4096bc <proc_cmdline_value_missing+0x9c>  // b.any
  40963c:	mov	w0, #0x4                   	// #4
  409640:	str	w0, [sp, #36]
  409644:	str	wzr, [sp, #40]
  409648:	str	wzr, [sp, #44]
  40964c:	ldr	w0, [sp, #44]
  409650:	bl	406c30 <log_get_max_level_realm@plt>
  409654:	mov	w1, w0
  409658:	ldr	w0, [sp, #36]
  40965c:	and	w0, w0, #0x7
  409660:	cmp	w1, w0
  409664:	b.lt	4096ac <proc_cmdline_value_missing+0x8c>  // b.tstop
  409668:	ldr	w0, [sp, #44]
  40966c:	lsl	w1, w0, #10
  409670:	ldr	w0, [sp, #36]
  409674:	orr	w7, w1, w0
  409678:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40967c:	add	x1, x0, #0xda3
  409680:	ldr	x6, [sp, #24]
  409684:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409688:	add	x5, x0, #0xdc0
  40968c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409690:	add	x4, x0, #0x770
  409694:	mov	w3, #0x21                  	// #33
  409698:	mov	x2, x1
  40969c:	ldr	w1, [sp, #40]
  4096a0:	mov	w0, w7
  4096a4:	bl	406590 <log_internal_realm@plt>
  4096a8:	b	4096b4 <proc_cmdline_value_missing+0x94>
  4096ac:	ldr	w0, [sp, #40]
  4096b0:	cmp	w0, #0x0
  4096b4:	mov	w0, #0x1                   	// #1
  4096b8:	b	4096c0 <proc_cmdline_value_missing+0xa0>
  4096bc:	mov	w0, #0x0                   	// #0
  4096c0:	ldp	x29, x30, [sp], #48
  4096c4:	ret

00000000004096c8 <pid_is_valid>:
  4096c8:	sub	sp, sp, #0x10
  4096cc:	str	w0, [sp, #12]
  4096d0:	ldr	w0, [sp, #12]
  4096d4:	cmp	w0, #0x0
  4096d8:	cset	w0, gt
  4096dc:	and	w0, w0, #0xff
  4096e0:	add	sp, sp, #0x10
  4096e4:	ret

00000000004096e8 <gid_is_valid>:
  4096e8:	stp	x29, x30, [sp, #-32]!
  4096ec:	mov	x29, sp
  4096f0:	str	w0, [sp, #28]
  4096f4:	ldr	w0, [sp, #28]
  4096f8:	bl	4061c0 <uid_is_valid@plt>
  4096fc:	and	w0, w0, #0xff
  409700:	ldp	x29, x30, [sp], #32
  409704:	ret

0000000000409708 <uid_is_dynamic>:
  409708:	sub	sp, sp, #0x10
  40970c:	str	w0, [sp, #12]
  409710:	ldr	w1, [sp, #12]
  409714:	mov	w0, #0xeeff                	// #61183
  409718:	cmp	w1, w0
  40971c:	b.ls	409738 <uid_is_dynamic+0x30>  // b.plast
  409720:	ldr	w1, [sp, #12]
  409724:	mov	w0, #0xffef                	// #65519
  409728:	cmp	w1, w0
  40972c:	b.hi	409738 <uid_is_dynamic+0x30>  // b.pmore
  409730:	mov	w0, #0x1                   	// #1
  409734:	b	40973c <uid_is_dynamic+0x34>
  409738:	mov	w0, #0x0                   	// #0
  40973c:	and	w0, w0, #0x1
  409740:	and	w0, w0, #0xff
  409744:	add	sp, sp, #0x10
  409748:	ret

000000000040974c <uid_is_system>:
  40974c:	sub	sp, sp, #0x10
  409750:	str	w0, [sp, #12]
  409754:	ldr	w0, [sp, #12]
  409758:	cmp	w0, #0x3e7
  40975c:	cset	w0, ls  // ls = plast
  409760:	and	w0, w0, #0xff
  409764:	add	sp, sp, #0x10
  409768:	ret

000000000040976c <determine_path_usage>:
  40976c:	stp	x29, x30, [sp, #-368]!
  409770:	mov	x29, sp
  409774:	str	x19, [sp, #16]
  409778:	str	x0, [sp, #56]
  40977c:	str	x1, [sp, #48]
  409780:	str	x2, [sp, #40]
  409784:	str	x3, [sp, #32]
  409788:	adrp	x0, 441000 <wordlist.9471+0x208>
  40978c:	ldr	x0, [x0, #4064]
  409790:	ldr	x1, [x0]
  409794:	str	x1, [sp, #360]
  409798:	mov	x1, #0x0                   	// #0
  40979c:	str	xzr, [sp, #104]
  4097a0:	ldr	x0, [sp, #40]
  4097a4:	cmp	x0, #0x0
  4097a8:	cset	w0, eq  // eq = none
  4097ac:	and	w0, w0, #0xff
  4097b0:	and	x0, x0, #0xff
  4097b4:	cmp	x0, #0x0
  4097b8:	b.eq	4097e4 <determine_path_usage+0x78>  // b.none
  4097bc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4097c0:	add	x1, x0, #0xe03
  4097c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4097c8:	add	x4, x0, #0x2c0
  4097cc:	mov	w3, #0x54                  	// #84
  4097d0:	mov	x2, x1
  4097d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4097d8:	add	x1, x0, #0xe28
  4097dc:	mov	w0, #0x0                   	// #0
  4097e0:	bl	405fd0 <log_assert_failed_realm@plt>
  4097e4:	ldr	x0, [sp, #32]
  4097e8:	cmp	x0, #0x0
  4097ec:	cset	w0, eq  // eq = none
  4097f0:	and	w0, w0, #0xff
  4097f4:	and	x0, x0, #0xff
  4097f8:	cmp	x0, #0x0
  4097fc:	b.eq	409828 <determine_path_usage+0xbc>  // b.none
  409800:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409804:	add	x1, x0, #0xe03
  409808:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40980c:	add	x4, x0, #0x2c0
  409810:	mov	w3, #0x55                  	// #85
  409814:	mov	x2, x1
  409818:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40981c:	add	x1, x0, #0xe38
  409820:	mov	w0, #0x0                   	// #0
  409824:	bl	405fd0 <log_assert_failed_realm@plt>
  409828:	ldr	x0, [sp, #48]
  40982c:	bl	406730 <opendir@plt>
  409830:	str	x0, [sp, #104]
  409834:	ldr	x0, [sp, #104]
  409838:	cmp	x0, #0x0
  40983c:	b.ne	4098ec <determine_path_usage+0x180>  // b.any
  409840:	bl	4062e0 <__errno_location@plt>
  409844:	ldr	w0, [x0]
  409848:	cmp	w0, #0x2
  40984c:	b.ne	409858 <determine_path_usage+0xec>  // b.any
  409850:	mov	w0, #0x7                   	// #7
  409854:	b	40985c <determine_path_usage+0xf0>
  409858:	mov	w0, #0x3                   	// #3
  40985c:	str	w0, [sp, #92]
  409860:	bl	4062e0 <__errno_location@plt>
  409864:	ldr	w0, [x0]
  409868:	str	w0, [sp, #96]
  40986c:	str	wzr, [sp, #100]
  409870:	ldr	w0, [sp, #100]
  409874:	bl	406c30 <log_get_max_level_realm@plt>
  409878:	mov	w1, w0
  40987c:	ldr	w0, [sp, #92]
  409880:	and	w0, w0, #0x7
  409884:	cmp	w1, w0
  409888:	b.lt	4098d4 <determine_path_usage+0x168>  // b.tstop
  40988c:	ldr	w0, [sp, #100]
  409890:	lsl	w1, w0, #10
  409894:	ldr	w0, [sp, #92]
  409898:	orr	w7, w1, w0
  40989c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4098a0:	add	x1, x0, #0xe03
  4098a4:	ldr	x6, [sp, #48]
  4098a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4098ac:	add	x5, x0, #0xe48
  4098b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4098b4:	add	x4, x0, #0x2d8
  4098b8:	mov	w3, #0x59                  	// #89
  4098bc:	mov	x2, x1
  4098c0:	ldr	w1, [sp, #96]
  4098c4:	mov	w0, w7
  4098c8:	bl	406590 <log_internal_realm@plt>
  4098cc:	mov	w19, w0
  4098d0:	b	409b50 <determine_path_usage+0x3e4>
  4098d4:	ldr	w0, [sp, #96]
  4098d8:	cmp	w0, #0x0
  4098dc:	cneg	w0, w0, lt  // lt = tstop
  4098e0:	and	w0, w0, #0xff
  4098e4:	neg	w19, w0
  4098e8:	b	409b50 <determine_path_usage+0x3e4>
  4098ec:	ldr	x0, [sp, #104]
  4098f0:	bl	405fa0 <dirfd@plt>
  4098f4:	mov	w2, w0
  4098f8:	add	x0, sp, #0x78
  4098fc:	mov	x1, x0
  409900:	mov	w0, w2
  409904:	bl	406310 <fstatvfs64@plt>
  409908:	cmp	w0, #0x0
  40990c:	b.ge	4099a4 <determine_path_usage+0x238>  // b.tcont
  409910:	mov	w0, #0x3                   	// #3
  409914:	str	w0, [sp, #80]
  409918:	bl	4062e0 <__errno_location@plt>
  40991c:	ldr	w0, [x0]
  409920:	str	w0, [sp, #84]
  409924:	str	wzr, [sp, #88]
  409928:	ldr	w0, [sp, #88]
  40992c:	bl	406c30 <log_get_max_level_realm@plt>
  409930:	mov	w1, w0
  409934:	ldr	w0, [sp, #80]
  409938:	and	w0, w0, #0x7
  40993c:	cmp	w1, w0
  409940:	b.lt	40998c <determine_path_usage+0x220>  // b.tstop
  409944:	ldr	w0, [sp, #88]
  409948:	lsl	w1, w0, #10
  40994c:	ldr	w0, [sp, #80]
  409950:	orr	w7, w1, w0
  409954:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409958:	add	x1, x0, #0xe03
  40995c:	ldr	x6, [sp, #48]
  409960:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409964:	add	x5, x0, #0xe60
  409968:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40996c:	add	x4, x0, #0x2d8
  409970:	mov	w3, #0x5d                  	// #93
  409974:	mov	x2, x1
  409978:	ldr	w1, [sp, #84]
  40997c:	mov	w0, w7
  409980:	bl	406590 <log_internal_realm@plt>
  409984:	mov	w19, w0
  409988:	b	409b50 <determine_path_usage+0x3e4>
  40998c:	ldr	w0, [sp, #84]
  409990:	cmp	w0, #0x0
  409994:	cneg	w0, w0, lt  // lt = tstop
  409998:	and	w0, w0, #0xff
  40999c:	neg	w19, w0
  4099a0:	b	409b50 <determine_path_usage+0x3e4>
  4099a4:	ldr	x1, [sp, #120]
  4099a8:	ldr	x0, [sp, #152]
  4099ac:	mul	x1, x1, x0
  4099b0:	ldr	x0, [sp, #32]
  4099b4:	str	x1, [x0]
  4099b8:	ldr	x0, [sp, #40]
  4099bc:	str	xzr, [x0]
  4099c0:	bl	4062e0 <__errno_location@plt>
  4099c4:	str	wzr, [x0]
  4099c8:	ldr	x0, [sp, #104]
  4099cc:	bl	406000 <readdir64@plt>
  4099d0:	str	x0, [sp, #112]
  4099d4:	ldr	x0, [sp, #112]
  4099d8:	cmp	x0, #0x0
  4099dc:	b.ne	4099f8 <determine_path_usage+0x28c>  // b.any
  4099e0:	bl	4062e0 <__errno_location@plt>
  4099e4:	ldr	w0, [x0]
  4099e8:	cmp	w0, #0x0
  4099ec:	nop
  4099f0:	mov	w19, #0x0                   	// #0
  4099f4:	b	409b50 <determine_path_usage+0x3e4>
  4099f8:	ldr	x0, [sp, #112]
  4099fc:	add	x2, x0, #0x13
  409a00:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409a04:	add	x1, x0, #0xe80
  409a08:	mov	x0, x2
  409a0c:	bl	406670 <endswith@plt>
  409a10:	cmp	x0, #0x0
  409a14:	b.ne	409a38 <determine_path_usage+0x2cc>  // b.any
  409a18:	ldr	x0, [sp, #112]
  409a1c:	add	x2, x0, #0x13
  409a20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409a24:	add	x1, x0, #0xe90
  409a28:	mov	x0, x2
  409a2c:	bl	406670 <endswith@plt>
  409a30:	cmp	x0, #0x0
  409a34:	b.eq	409b2c <determine_path_usage+0x3c0>  // b.none
  409a38:	ldr	x0, [sp, #104]
  409a3c:	bl	405fa0 <dirfd@plt>
  409a40:	mov	w4, w0
  409a44:	ldr	x0, [sp, #112]
  409a48:	add	x0, x0, #0x13
  409a4c:	add	x1, sp, #0xe8
  409a50:	mov	w3, #0x100                 	// #256
  409a54:	mov	x2, x1
  409a58:	mov	x1, x0
  409a5c:	mov	w0, w4
  409a60:	bl	427600 <fstatat64>
  409a64:	cmp	w0, #0x0
  409a68:	b.ge	409afc <determine_path_usage+0x390>  // b.tcont
  409a6c:	mov	w0, #0x7                   	// #7
  409a70:	str	w0, [sp, #68]
  409a74:	bl	4062e0 <__errno_location@plt>
  409a78:	ldr	w0, [x0]
  409a7c:	str	w0, [sp, #72]
  409a80:	str	wzr, [sp, #76]
  409a84:	ldr	w0, [sp, #76]
  409a88:	bl	406c30 <log_get_max_level_realm@plt>
  409a8c:	mov	w1, w0
  409a90:	ldr	w0, [sp, #68]
  409a94:	and	w0, w0, #0x7
  409a98:	cmp	w1, w0
  409a9c:	b.lt	409af0 <determine_path_usage+0x384>  // b.tstop
  409aa0:	ldr	w0, [sp, #76]
  409aa4:	lsl	w1, w0, #10
  409aa8:	ldr	w0, [sp, #68]
  409aac:	orr	w8, w1, w0
  409ab0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409ab4:	add	x1, x0, #0xe03
  409ab8:	ldr	x0, [sp, #112]
  409abc:	add	x0, x0, #0x13
  409ac0:	mov	x7, x0
  409ac4:	ldr	x6, [sp, #48]
  409ac8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409acc:	add	x5, x0, #0xea0
  409ad0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409ad4:	add	x4, x0, #0x2d8
  409ad8:	mov	w3, #0x69                  	// #105
  409adc:	mov	x2, x1
  409ae0:	ldr	w1, [sp, #72]
  409ae4:	mov	w0, w8
  409ae8:	bl	406590 <log_internal_realm@plt>
  409aec:	b	409b38 <determine_path_usage+0x3cc>
  409af0:	ldr	w0, [sp, #72]
  409af4:	cmp	w0, #0x0
  409af8:	b	409b38 <determine_path_usage+0x3cc>
  409afc:	ldr	w0, [sp, #248]
  409b00:	and	w0, w0, #0xf000
  409b04:	cmp	w0, #0x8, lsl #12
  409b08:	b.ne	409b34 <determine_path_usage+0x3c8>  // b.any
  409b0c:	ldr	x0, [sp, #40]
  409b10:	ldr	x1, [x0]
  409b14:	ldr	x0, [sp, #296]
  409b18:	lsl	x0, x0, #9
  409b1c:	add	x1, x1, x0
  409b20:	ldr	x0, [sp, #40]
  409b24:	str	x1, [x0]
  409b28:	b	409b38 <determine_path_usage+0x3cc>
  409b2c:	nop
  409b30:	b	409b38 <determine_path_usage+0x3cc>
  409b34:	nop
  409b38:	bl	4062e0 <__errno_location@plt>
  409b3c:	str	wzr, [x0]
  409b40:	ldr	x0, [sp, #104]
  409b44:	bl	406000 <readdir64@plt>
  409b48:	str	x0, [sp, #112]
  409b4c:	b	4099d4 <determine_path_usage+0x268>
  409b50:	add	x0, sp, #0x68
  409b54:	bl	409470 <closedirp>
  409b58:	mov	w1, w19
  409b5c:	adrp	x0, 441000 <wordlist.9471+0x208>
  409b60:	ldr	x0, [x0, #4064]
  409b64:	ldr	x2, [sp, #360]
  409b68:	ldr	x0, [x0]
  409b6c:	eor	x0, x2, x0
  409b70:	cmp	x0, #0x0
  409b74:	b.eq	409b7c <determine_path_usage+0x410>  // b.none
  409b78:	bl	4063e0 <__stack_chk_fail@plt>
  409b7c:	mov	w0, w1
  409b80:	ldr	x19, [sp, #16]
  409b84:	ldp	x29, x30, [sp], #368
  409b88:	ret

0000000000409b8c <cache_space_invalidate>:
  409b8c:	stp	x29, x30, [sp, #-48]!
  409b90:	mov	x29, sp
  409b94:	str	x0, [sp, #24]
  409b98:	mov	x0, #0x28                  	// #40
  409b9c:	str	x0, [sp, #40]
  409ba0:	ldr	x0, [sp, #40]
  409ba4:	cmp	x0, #0x0
  409ba8:	b.eq	409bbc <cache_space_invalidate+0x30>  // b.none
  409bac:	ldr	x2, [sp, #40]
  409bb0:	mov	w1, #0x0                   	// #0
  409bb4:	ldr	x0, [sp, #24]
  409bb8:	bl	406c20 <memset@plt>
  409bbc:	nop
  409bc0:	ldp	x29, x30, [sp], #48
  409bc4:	ret

0000000000409bc8 <cache_space_refresh>:
  409bc8:	stp	x29, x30, [sp, #-160]!
  409bcc:	mov	x29, sp
  409bd0:	str	x0, [sp, #24]
  409bd4:	str	x1, [sp, #16]
  409bd8:	adrp	x0, 441000 <wordlist.9471+0x208>
  409bdc:	ldr	x0, [x0, #4064]
  409be0:	ldr	x1, [x0]
  409be4:	str	x1, [sp, #152]
  409be8:	mov	x1, #0x0                   	// #0
  409bec:	ldr	x0, [sp, #24]
  409bf0:	cmp	x0, #0x0
  409bf4:	cset	w0, eq  // eq = none
  409bf8:	and	w0, w0, #0xff
  409bfc:	and	x0, x0, #0xff
  409c00:	cmp	x0, #0x0
  409c04:	b.eq	409c30 <cache_space_refresh+0x68>  // b.none
  409c08:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409c0c:	add	x1, x0, #0xe03
  409c10:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409c14:	add	x4, x0, #0x2f0
  409c18:	mov	w3, #0x81                  	// #129
  409c1c:	mov	x2, x1
  409c20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409c24:	add	x1, x0, #0xec8
  409c28:	mov	w0, #0x0                   	// #0
  409c2c:	bl	405fd0 <log_assert_failed_realm@plt>
  409c30:	ldr	x0, [sp, #16]
  409c34:	add	x0, x0, #0x10
  409c38:	str	x0, [sp, #56]
  409c3c:	ldr	x0, [sp, #16]
  409c40:	add	x0, x0, #0x40
  409c44:	str	x0, [sp, #64]
  409c48:	mov	w0, #0x1                   	// #1
  409c4c:	bl	406660 <now@plt>
  409c50:	str	x0, [sp, #72]
  409c54:	ldr	x0, [sp, #64]
  409c58:	ldr	x0, [x0]
  409c5c:	cmp	x0, #0x0
  409c60:	b.eq	409c8c <cache_space_refresh+0xc4>  // b.none
  409c64:	ldr	x0, [sp, #64]
  409c68:	ldr	x1, [x0]
  409c6c:	mov	x0, #0xc380                	// #50048
  409c70:	movk	x0, #0x1c9, lsl #16
  409c74:	add	x0, x1, x0
  409c78:	ldr	x1, [sp, #72]
  409c7c:	cmp	x1, x0
  409c80:	b.cs	409c8c <cache_space_refresh+0xc4>  // b.hs, b.nlast
  409c84:	mov	w0, #0x0                   	// #0
  409c88:	b	409dc8 <cache_space_refresh+0x200>
  409c8c:	ldr	x0, [sp, #16]
  409c90:	ldr	x0, [x0, #8]
  409c94:	add	x2, sp, #0x30
  409c98:	add	x1, sp, #0x28
  409c9c:	mov	x3, x2
  409ca0:	mov	x2, x1
  409ca4:	mov	x1, x0
  409ca8:	ldr	x0, [sp, #24]
  409cac:	bl	40976c <determine_path_usage>
  409cb0:	str	w0, [sp, #36]
  409cb4:	ldr	w0, [sp, #36]
  409cb8:	cmp	w0, #0x0
  409cbc:	b.ge	409cc8 <cache_space_refresh+0x100>  // b.tcont
  409cc0:	ldr	w0, [sp, #36]
  409cc4:	b	409dc8 <cache_space_refresh+0x200>
  409cc8:	ldr	x1, [sp, #40]
  409ccc:	ldr	x0, [sp, #64]
  409cd0:	str	x1, [x0, #24]
  409cd4:	ldr	x1, [sp, #48]
  409cd8:	ldr	x0, [sp, #64]
  409cdc:	str	x1, [x0, #32]
  409ce0:	ldr	x0, [sp, #48]
  409ce4:	str	x0, [sp, #80]
  409ce8:	ldr	x0, [sp, #56]
  409cec:	ldr	x0, [x0, #32]
  409cf0:	str	x0, [sp, #88]
  409cf4:	ldr	x1, [sp, #80]
  409cf8:	ldr	x0, [sp, #88]
  409cfc:	cmp	x1, x0
  409d00:	b.ls	409d14 <cache_space_refresh+0x14c>  // b.plast
  409d04:	ldr	x1, [sp, #80]
  409d08:	ldr	x0, [sp, #88]
  409d0c:	sub	x0, x1, x0
  409d10:	b	409d18 <cache_space_refresh+0x150>
  409d14:	mov	x0, #0x0                   	// #0
  409d18:	str	x0, [sp, #96]
  409d1c:	ldr	x0, [sp, #40]
  409d20:	ldr	x1, [sp, #96]
  409d24:	add	x0, x1, x0
  409d28:	str	x0, [sp, #104]
  409d2c:	ldr	x0, [sp, #56]
  409d30:	ldr	x0, [x0, #24]
  409d34:	str	x0, [sp, #112]
  409d38:	ldr	x0, [sp, #104]
  409d3c:	ldr	x2, [sp, #112]
  409d40:	ldr	x1, [sp, #112]
  409d44:	cmp	x2, x0
  409d48:	csel	x0, x1, x0, cs  // cs = hs, nlast
  409d4c:	str	x0, [sp, #120]
  409d50:	ldr	x0, [sp, #56]
  409d54:	ldr	x0, [x0, #16]
  409d58:	str	x0, [sp, #128]
  409d5c:	ldr	x0, [sp, #120]
  409d60:	ldr	x2, [sp, #128]
  409d64:	ldr	x1, [sp, #128]
  409d68:	cmp	x2, x0
  409d6c:	csel	x1, x1, x0, ls  // ls = plast
  409d70:	ldr	x0, [sp, #64]
  409d74:	str	x1, [x0, #16]
  409d78:	ldr	x0, [sp, #64]
  409d7c:	ldr	x0, [x0, #16]
  409d80:	str	x0, [sp, #136]
  409d84:	ldr	x0, [sp, #40]
  409d88:	str	x0, [sp, #144]
  409d8c:	ldr	x1, [sp, #136]
  409d90:	ldr	x0, [sp, #144]
  409d94:	cmp	x1, x0
  409d98:	b.ls	409dac <cache_space_refresh+0x1e4>  // b.plast
  409d9c:	ldr	x1, [sp, #136]
  409da0:	ldr	x0, [sp, #144]
  409da4:	sub	x0, x1, x0
  409da8:	b	409db0 <cache_space_refresh+0x1e8>
  409dac:	mov	x0, #0x0                   	// #0
  409db0:	ldr	x1, [sp, #64]
  409db4:	str	x0, [x1, #8]
  409db8:	ldr	x0, [sp, #64]
  409dbc:	ldr	x1, [sp, #72]
  409dc0:	str	x1, [x0]
  409dc4:	mov	w0, #0x1                   	// #1
  409dc8:	mov	w1, w0
  409dcc:	adrp	x0, 441000 <wordlist.9471+0x208>
  409dd0:	ldr	x0, [x0, #4064]
  409dd4:	ldr	x2, [sp, #152]
  409dd8:	ldr	x0, [x0]
  409ddc:	eor	x0, x2, x0
  409de0:	cmp	x0, #0x0
  409de4:	b.eq	409dec <cache_space_refresh+0x224>  // b.none
  409de8:	bl	4063e0 <__stack_chk_fail@plt>
  409dec:	mov	w0, w1
  409df0:	ldp	x29, x30, [sp], #160
  409df4:	ret

0000000000409df8 <patch_min_use>:
  409df8:	stp	x29, x30, [sp, #-48]!
  409dfc:	mov	x29, sp
  409e00:	str	x0, [sp, #24]
  409e04:	ldr	x0, [sp, #24]
  409e08:	cmp	x0, #0x0
  409e0c:	cset	w0, eq  // eq = none
  409e10:	and	w0, w0, #0xff
  409e14:	and	x0, x0, #0xff
  409e18:	cmp	x0, #0x0
  409e1c:	b.eq	409e48 <patch_min_use+0x50>  // b.none
  409e20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409e24:	add	x1, x0, #0xe03
  409e28:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409e2c:	add	x4, x0, #0x308
  409e30:	mov	w3, #0x9b                  	// #155
  409e34:	mov	x2, x1
  409e38:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409e3c:	add	x1, x0, #0xed0
  409e40:	mov	w0, #0x0                   	// #0
  409e44:	bl	405fd0 <log_assert_failed_realm@plt>
  409e48:	ldr	x0, [sp, #24]
  409e4c:	ldr	x0, [x0, #40]
  409e50:	str	x0, [sp, #32]
  409e54:	ldr	x0, [sp, #24]
  409e58:	ldr	x0, [x0, #88]
  409e5c:	str	x0, [sp, #40]
  409e60:	ldr	x0, [sp, #32]
  409e64:	ldr	x2, [sp, #40]
  409e68:	ldr	x1, [sp, #40]
  409e6c:	cmp	x2, x0
  409e70:	csel	x1, x1, x0, cs  // cs = hs, nlast
  409e74:	ldr	x0, [sp, #24]
  409e78:	str	x1, [x0, #40]
  409e7c:	nop
  409e80:	ldp	x29, x30, [sp], #48
  409e84:	ret

0000000000409e88 <determine_space>:
  409e88:	stp	x29, x30, [sp, #-64]!
  409e8c:	mov	x29, sp
  409e90:	str	x0, [sp, #40]
  409e94:	str	x1, [sp, #32]
  409e98:	str	x2, [sp, #24]
  409e9c:	ldr	x0, [sp, #40]
  409ea0:	cmp	x0, #0x0
  409ea4:	cset	w0, eq  // eq = none
  409ea8:	and	w0, w0, #0xff
  409eac:	and	x0, x0, #0xff
  409eb0:	cmp	x0, #0x0
  409eb4:	b.eq	409ee0 <determine_space+0x58>  // b.none
  409eb8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409ebc:	add	x1, x0, #0xe03
  409ec0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409ec4:	add	x4, x0, #0x318
  409ec8:	mov	w3, #0xaa                  	// #170
  409ecc:	mov	x2, x1
  409ed0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409ed4:	add	x1, x0, #0xec8
  409ed8:	mov	w0, #0x0                   	// #0
  409edc:	bl	405fd0 <log_assert_failed_realm@plt>
  409ee0:	ldr	x0, [sp, #40]
  409ee4:	ldr	x0, [x0, #160]
  409ee8:	cmp	x0, #0x0
  409eec:	b.eq	409efc <determine_space+0x74>  // b.none
  409ef0:	ldr	x0, [sp, #40]
  409ef4:	add	x0, x0, #0x150
  409ef8:	b	409f04 <determine_space+0x7c>
  409efc:	ldr	x0, [sp, #40]
  409f00:	add	x0, x0, #0xe8
  409f04:	str	x0, [sp, #56]
  409f08:	ldr	x1, [sp, #56]
  409f0c:	ldr	x0, [sp, #40]
  409f10:	bl	409bc8 <cache_space_refresh>
  409f14:	str	w0, [sp, #52]
  409f18:	ldr	w0, [sp, #52]
  409f1c:	cmp	w0, #0x0
  409f20:	b.lt	409f5c <determine_space+0xd4>  // b.tstop
  409f24:	ldr	x0, [sp, #32]
  409f28:	cmp	x0, #0x0
  409f2c:	b.eq	409f40 <determine_space+0xb8>  // b.none
  409f30:	ldr	x0, [sp, #56]
  409f34:	ldr	x1, [x0, #72]
  409f38:	ldr	x0, [sp, #32]
  409f3c:	str	x1, [x0]
  409f40:	ldr	x0, [sp, #24]
  409f44:	cmp	x0, #0x0
  409f48:	b.eq	409f5c <determine_space+0xd4>  // b.none
  409f4c:	ldr	x0, [sp, #56]
  409f50:	ldr	x1, [x0, #80]
  409f54:	ldr	x0, [sp, #24]
  409f58:	str	x1, [x0]
  409f5c:	ldr	w0, [sp, #52]
  409f60:	ldp	x29, x30, [sp], #64
  409f64:	ret

0000000000409f68 <server_space_usage_message>:
  409f68:	sub	sp, sp, #0x150
  409f6c:	stp	x29, x30, [sp, #240]
  409f70:	add	x29, sp, #0xf0
  409f74:	str	x0, [sp, #264]
  409f78:	str	x1, [sp, #256]
  409f7c:	adrp	x0, 441000 <wordlist.9471+0x208>
  409f80:	ldr	x0, [x0, #4064]
  409f84:	ldr	x1, [x0]
  409f88:	str	x1, [sp, #328]
  409f8c:	mov	x1, #0x0                   	// #0
  409f90:	ldr	x0, [sp, #264]
  409f94:	cmp	x0, #0x0
  409f98:	cset	w0, eq  // eq = none
  409f9c:	and	w0, w0, #0xff
  409fa0:	and	x0, x0, #0xff
  409fa4:	cmp	x0, #0x0
  409fa8:	b.eq	409fd4 <server_space_usage_message+0x6c>  // b.none
  409fac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409fb0:	add	x1, x0, #0xe03
  409fb4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  409fb8:	add	x4, x0, #0x328
  409fbc:	mov	w3, #0xbd                  	// #189
  409fc0:	mov	x2, x1
  409fc4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  409fc8:	add	x1, x0, #0xec8
  409fcc:	mov	w0, #0x0                   	// #0
  409fd0:	bl	405fd0 <log_assert_failed_realm@plt>
  409fd4:	ldr	x0, [sp, #256]
  409fd8:	cmp	x0, #0x0
  409fdc:	b.ne	40a008 <server_space_usage_message+0xa0>  // b.any
  409fe0:	ldr	x0, [sp, #264]
  409fe4:	ldr	x0, [x0, #160]
  409fe8:	cmp	x0, #0x0
  409fec:	b.eq	409ffc <server_space_usage_message+0x94>  // b.none
  409ff0:	ldr	x0, [sp, #264]
  409ff4:	add	x0, x0, #0x150
  409ff8:	b	40a004 <server_space_usage_message+0x9c>
  409ffc:	ldr	x0, [sp, #264]
  40a000:	add	x0, x0, #0xe8
  40a004:	str	x0, [sp, #256]
  40a008:	ldr	x1, [sp, #256]
  40a00c:	ldr	x0, [sp, #264]
  40a010:	bl	409bc8 <cache_space_refresh>
  40a014:	cmp	w0, #0x0
  40a018:	b.lt	40a244 <server_space_usage_message+0x2dc>  // b.tstop
  40a01c:	ldr	x0, [sp, #256]
  40a020:	add	x0, x0, #0x10
  40a024:	str	x0, [sp, #272]
  40a028:	ldr	x0, [sp, #256]
  40a02c:	ldr	x1, [x0, #88]
  40a030:	add	x0, sp, #0x118
  40a034:	mov	x2, x1
  40a038:	mov	x1, #0x8                   	// #8
  40a03c:	bl	4094a4 <format_bytes>
  40a040:	ldr	x0, [sp, #272]
  40a044:	ldr	x1, [x0, #16]
  40a048:	add	x0, sp, #0x120
  40a04c:	mov	x2, x1
  40a050:	mov	x1, #0x8                   	// #8
  40a054:	bl	4094a4 <format_bytes>
  40a058:	ldr	x0, [sp, #272]
  40a05c:	ldr	x1, [x0, #32]
  40a060:	add	x0, sp, #0x128
  40a064:	mov	x2, x1
  40a068:	mov	x1, #0x8                   	// #8
  40a06c:	bl	4094a4 <format_bytes>
  40a070:	ldr	x0, [sp, #256]
  40a074:	ldr	x1, [x0, #96]
  40a078:	add	x0, sp, #0x130
  40a07c:	mov	x2, x1
  40a080:	mov	x1, #0x8                   	// #8
  40a084:	bl	4094a4 <format_bytes>
  40a088:	ldr	x0, [sp, #256]
  40a08c:	ldr	x1, [x0, #80]
  40a090:	add	x0, sp, #0x138
  40a094:	mov	x2, x1
  40a098:	mov	x1, #0x8                   	// #8
  40a09c:	bl	4094a4 <format_bytes>
  40a0a0:	ldr	x0, [sp, #256]
  40a0a4:	ldr	x1, [x0, #72]
  40a0a8:	add	x0, sp, #0x140
  40a0ac:	mov	x2, x1
  40a0b0:	mov	x1, #0x8                   	// #8
  40a0b4:	bl	4094a4 <format_bytes>
  40a0b8:	ldr	x0, [sp, #256]
  40a0bc:	ldr	x9, [x0]
  40a0c0:	ldr	x0, [sp, #256]
  40a0c4:	ldr	x10, [x0, #8]
  40a0c8:	ldr	x0, [sp, #256]
  40a0cc:	ldr	x0, [x0]
  40a0d0:	ldr	x1, [sp, #256]
  40a0d4:	ldr	x1, [x1, #8]
  40a0d8:	ldr	x2, [sp, #256]
  40a0dc:	ldr	x2, [x2, #88]
  40a0e0:	ldr	x3, [sp, #272]
  40a0e4:	ldr	x3, [x3, #16]
  40a0e8:	ldr	x4, [sp, #272]
  40a0ec:	ldr	x4, [x4, #32]
  40a0f0:	ldr	x5, [sp, #256]
  40a0f4:	ldr	x5, [x5, #96]
  40a0f8:	ldr	x6, [sp, #256]
  40a0fc:	ldr	x6, [x6, #80]
  40a100:	ldr	x7, [sp, #256]
  40a104:	ldr	x7, [x7, #72]
  40a108:	add	x12, sp, #0x138
  40a10c:	add	x11, sp, #0x118
  40a110:	str	xzr, [sp, #232]
  40a114:	add	x8, sp, #0x140
  40a118:	str	x8, [sp, #224]
  40a11c:	adrp	x8, 427000 <journal_ratelimit_group_new+0x94>
  40a120:	add	x8, x8, #0xf30
  40a124:	str	x8, [sp, #216]
  40a128:	str	x7, [sp, #208]
  40a12c:	adrp	x7, 427000 <journal_ratelimit_group_new+0x94>
  40a130:	add	x7, x7, #0xf48
  40a134:	str	x7, [sp, #200]
  40a138:	add	x7, sp, #0x138
  40a13c:	str	x7, [sp, #192]
  40a140:	adrp	x7, 427000 <journal_ratelimit_group_new+0x94>
  40a144:	add	x7, x7, #0xf58
  40a148:	str	x7, [sp, #184]
  40a14c:	str	x6, [sp, #176]
  40a150:	adrp	x6, 427000 <journal_ratelimit_group_new+0x94>
  40a154:	add	x6, x6, #0xf68
  40a158:	str	x6, [sp, #168]
  40a15c:	add	x6, sp, #0x130
  40a160:	str	x6, [sp, #160]
  40a164:	adrp	x6, 427000 <journal_ratelimit_group_new+0x94>
  40a168:	add	x6, x6, #0xf78
  40a16c:	str	x6, [sp, #152]
  40a170:	str	x5, [sp, #144]
  40a174:	adrp	x5, 427000 <journal_ratelimit_group_new+0x94>
  40a178:	add	x5, x5, #0xf98
  40a17c:	str	x5, [sp, #136]
  40a180:	add	x5, sp, #0x128
  40a184:	str	x5, [sp, #128]
  40a188:	adrp	x5, 427000 <journal_ratelimit_group_new+0x94>
  40a18c:	add	x5, x5, #0xfb0
  40a190:	str	x5, [sp, #120]
  40a194:	str	x4, [sp, #112]
  40a198:	adrp	x4, 427000 <journal_ratelimit_group_new+0x94>
  40a19c:	add	x4, x4, #0xfd0
  40a1a0:	str	x4, [sp, #104]
  40a1a4:	add	x4, sp, #0x120
  40a1a8:	str	x4, [sp, #96]
  40a1ac:	adrp	x4, 427000 <journal_ratelimit_group_new+0x94>
  40a1b0:	add	x4, x4, #0xfe8
  40a1b4:	str	x4, [sp, #88]
  40a1b8:	str	x3, [sp, #80]
  40a1bc:	adrp	x3, 428000 <__func__.11909+0x280>
  40a1c0:	add	x3, x3, #0x0
  40a1c4:	str	x3, [sp, #72]
  40a1c8:	add	x3, sp, #0x118
  40a1cc:	str	x3, [sp, #64]
  40a1d0:	adrp	x3, 428000 <__func__.11909+0x280>
  40a1d4:	add	x3, x3, #0x10
  40a1d8:	str	x3, [sp, #56]
  40a1dc:	str	x2, [sp, #48]
  40a1e0:	adrp	x2, 428000 <__func__.11909+0x280>
  40a1e4:	add	x2, x2, #0x28
  40a1e8:	str	x2, [sp, #40]
  40a1ec:	str	x1, [sp, #32]
  40a1f0:	adrp	x1, 428000 <__func__.11909+0x280>
  40a1f4:	add	x1, x1, #0x38
  40a1f8:	str	x1, [sp, #24]
  40a1fc:	str	x0, [sp, #16]
  40a200:	adrp	x0, 428000 <__func__.11909+0x280>
  40a204:	add	x0, x0, #0x48
  40a208:	str	x0, [sp, #8]
  40a20c:	add	x0, sp, #0x140
  40a210:	str	x0, [sp]
  40a214:	mov	x7, x12
  40a218:	mov	x6, x11
  40a21c:	mov	x5, x10
  40a220:	mov	x4, x9
  40a224:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a228:	add	x3, x0, #0xed8
  40a22c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a230:	add	x2, x0, #0xf00
  40a234:	mov	w1, #0x0                   	// #0
  40a238:	ldr	x0, [sp, #264]
  40a23c:	bl	411278 <server_driver_message>
  40a240:	b	40a248 <server_space_usage_message+0x2e0>
  40a244:	nop
  40a248:	adrp	x0, 441000 <wordlist.9471+0x208>
  40a24c:	ldr	x0, [x0, #4064]
  40a250:	ldr	x1, [sp, #328]
  40a254:	ldr	x0, [x0]
  40a258:	eor	x0, x1, x0
  40a25c:	cmp	x0, #0x0
  40a260:	b.eq	40a268 <server_space_usage_message+0x300>  // b.none
  40a264:	bl	4063e0 <__stack_chk_fail@plt>
  40a268:	ldp	x29, x30, [sp, #240]
  40a26c:	add	sp, sp, #0x150
  40a270:	ret

000000000040a274 <uid_for_system_journal>:
  40a274:	stp	x29, x30, [sp, #-32]!
  40a278:	mov	x29, sp
  40a27c:	str	w0, [sp, #28]
  40a280:	ldr	w0, [sp, #28]
  40a284:	bl	40974c <uid_is_system>
  40a288:	and	w0, w0, #0xff
  40a28c:	cmp	w0, #0x0
  40a290:	b.ne	40a2b8 <uid_for_system_journal+0x44>  // b.any
  40a294:	ldr	w0, [sp, #28]
  40a298:	bl	409708 <uid_is_dynamic>
  40a29c:	and	w0, w0, #0xff
  40a2a0:	cmp	w0, #0x0
  40a2a4:	b.ne	40a2b8 <uid_for_system_journal+0x44>  // b.any
  40a2a8:	ldr	w1, [sp, #28]
  40a2ac:	mov	w0, #0xfffe                	// #65534
  40a2b0:	cmp	w1, w0
  40a2b4:	b.ne	40a2c0 <uid_for_system_journal+0x4c>  // b.any
  40a2b8:	mov	w0, #0x1                   	// #1
  40a2bc:	b	40a2c4 <uid_for_system_journal+0x50>
  40a2c0:	mov	w0, #0x0                   	// #0
  40a2c4:	and	w0, w0, #0x1
  40a2c8:	and	w0, w0, #0xff
  40a2cc:	ldp	x29, x30, [sp], #32
  40a2d0:	ret

000000000040a2d4 <server_add_acls>:
  40a2d4:	stp	x29, x30, [sp, #-48]!
  40a2d8:	mov	x29, sp
  40a2dc:	str	x0, [sp, #24]
  40a2e0:	str	w1, [sp, #20]
  40a2e4:	ldr	x0, [sp, #24]
  40a2e8:	cmp	x0, #0x0
  40a2ec:	cset	w0, eq  // eq = none
  40a2f0:	and	w0, w0, #0xff
  40a2f4:	and	x0, x0, #0xff
  40a2f8:	cmp	x0, #0x0
  40a2fc:	b.eq	40a328 <server_add_acls+0x54>  // b.none
  40a300:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a304:	add	x1, x0, #0xe03
  40a308:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a30c:	add	x4, x0, #0x348
  40a310:	mov	w3, #0xed                  	// #237
  40a314:	mov	x2, x1
  40a318:	adrp	x0, 428000 <__func__.11909+0x280>
  40a31c:	add	x1, x0, #0x58
  40a320:	mov	w0, #0x0                   	// #0
  40a324:	bl	405fd0 <log_assert_failed_realm@plt>
  40a328:	ldr	w0, [sp, #20]
  40a32c:	bl	40a274 <uid_for_system_journal>
  40a330:	and	w0, w0, #0xff
  40a334:	cmp	w0, #0x0
  40a338:	b.ne	40a3e4 <server_add_acls+0x110>  // b.any
  40a33c:	ldr	x0, [sp, #24]
  40a340:	ldr	w0, [x0]
  40a344:	ldr	w1, [sp, #20]
  40a348:	bl	406b60 <add_acls_for_user@plt>
  40a34c:	str	w0, [sp, #32]
  40a350:	ldr	w0, [sp, #32]
  40a354:	cmp	w0, #0x0
  40a358:	b.ge	40a3e8 <server_add_acls+0x114>  // b.tcont
  40a35c:	mov	w0, #0x4                   	// #4
  40a360:	str	w0, [sp, #36]
  40a364:	ldr	w0, [sp, #32]
  40a368:	str	w0, [sp, #40]
  40a36c:	str	wzr, [sp, #44]
  40a370:	ldr	w0, [sp, #44]
  40a374:	bl	406c30 <log_get_max_level_realm@plt>
  40a378:	mov	w1, w0
  40a37c:	ldr	w0, [sp, #36]
  40a380:	and	w0, w0, #0x7
  40a384:	cmp	w1, w0
  40a388:	b.lt	40a3d8 <server_add_acls+0x104>  // b.tstop
  40a38c:	ldr	w0, [sp, #44]
  40a390:	lsl	w1, w0, #10
  40a394:	ldr	w0, [sp, #36]
  40a398:	orr	w7, w1, w0
  40a39c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a3a0:	add	x1, x0, #0xe03
  40a3a4:	ldr	x0, [sp, #24]
  40a3a8:	ldr	x0, [x0, #48]
  40a3ac:	mov	x6, x0
  40a3b0:	adrp	x0, 428000 <__func__.11909+0x280>
  40a3b4:	add	x5, x0, #0x60
  40a3b8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a3bc:	add	x4, x0, #0x358
  40a3c0:	mov	w3, #0xf5                  	// #245
  40a3c4:	mov	x2, x1
  40a3c8:	ldr	w1, [sp, #40]
  40a3cc:	mov	w0, w7
  40a3d0:	bl	406590 <log_internal_realm@plt>
  40a3d4:	b	40a3e8 <server_add_acls+0x114>
  40a3d8:	ldr	w0, [sp, #40]
  40a3dc:	cmp	w0, #0x0
  40a3e0:	b	40a3e8 <server_add_acls+0x114>
  40a3e4:	nop
  40a3e8:	ldp	x29, x30, [sp], #48
  40a3ec:	ret

000000000040a3f0 <open_journal>:
  40a3f0:	sub	sp, sp, #0x90
  40a3f4:	stp	x29, x30, [sp, #32]
  40a3f8:	add	x29, sp, #0x20
  40a3fc:	str	x19, [sp, #48]
  40a400:	str	x0, [sp, #104]
  40a404:	strb	w1, [sp, #103]
  40a408:	str	x2, [sp, #88]
  40a40c:	str	w3, [sp, #96]
  40a410:	strb	w4, [sp, #102]
  40a414:	str	x5, [sp, #80]
  40a418:	str	x6, [sp, #72]
  40a41c:	adrp	x0, 441000 <wordlist.9471+0x208>
  40a420:	ldr	x0, [x0, #4064]
  40a424:	ldr	x1, [x0]
  40a428:	str	x1, [sp, #136]
  40a42c:	mov	x1, #0x0                   	// #0
  40a430:	str	xzr, [sp, #120]
  40a434:	ldr	x0, [sp, #104]
  40a438:	cmp	x0, #0x0
  40a43c:	cset	w0, eq  // eq = none
  40a440:	and	w0, w0, #0xff
  40a444:	and	x0, x0, #0xff
  40a448:	cmp	x0, #0x0
  40a44c:	b.eq	40a478 <open_journal+0x88>  // b.none
  40a450:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a454:	add	x1, x0, #0xe03
  40a458:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a45c:	add	x4, x0, #0x368
  40a460:	mov	w3, #0x105                 	// #261
  40a464:	mov	x2, x1
  40a468:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a46c:	add	x1, x0, #0xec8
  40a470:	mov	w0, #0x0                   	// #0
  40a474:	bl	405fd0 <log_assert_failed_realm@plt>
  40a478:	ldr	x0, [sp, #88]
  40a47c:	cmp	x0, #0x0
  40a480:	cset	w0, eq  // eq = none
  40a484:	and	w0, w0, #0xff
  40a488:	and	x0, x0, #0xff
  40a48c:	cmp	x0, #0x0
  40a490:	b.eq	40a4bc <open_journal+0xcc>  // b.none
  40a494:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a498:	add	x1, x0, #0xe03
  40a49c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a4a0:	add	x4, x0, #0x368
  40a4a4:	mov	w3, #0x106                 	// #262
  40a4a8:	mov	x2, x1
  40a4ac:	adrp	x0, 428000 <__func__.11909+0x280>
  40a4b0:	add	x1, x0, #0x88
  40a4b4:	mov	w0, #0x0                   	// #0
  40a4b8:	bl	405fd0 <log_assert_failed_realm@plt>
  40a4bc:	ldr	x0, [sp, #72]
  40a4c0:	cmp	x0, #0x0
  40a4c4:	cset	w0, eq  // eq = none
  40a4c8:	and	w0, w0, #0xff
  40a4cc:	and	x0, x0, #0xff
  40a4d0:	cmp	x0, #0x0
  40a4d4:	b.eq	40a500 <open_journal+0x110>  // b.none
  40a4d8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a4dc:	add	x1, x0, #0xe03
  40a4e0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a4e4:	add	x4, x0, #0x368
  40a4e8:	mov	w3, #0x107                 	// #263
  40a4ec:	mov	x2, x1
  40a4f0:	adrp	x0, 428000 <__func__.11909+0x280>
  40a4f4:	add	x1, x0, #0x90
  40a4f8:	mov	w0, #0x0                   	// #0
  40a4fc:	bl	405fd0 <log_assert_failed_realm@plt>
  40a500:	ldrb	w0, [sp, #103]
  40a504:	cmp	w0, #0x0
  40a508:	b.eq	40a568 <open_journal+0x178>  // b.none
  40a50c:	ldr	x0, [sp, #104]
  40a510:	ldrb	w8, [x0, #440]
  40a514:	ldr	x0, [sp, #104]
  40a518:	ldr	x2, [x0, #448]
  40a51c:	ldr	x0, [sp, #104]
  40a520:	ldr	x3, [x0, #568]
  40a524:	ldr	x0, [sp, #104]
  40a528:	ldr	x0, [x0, #576]
  40a52c:	add	x1, sp, #0x78
  40a530:	str	x1, [sp, #16]
  40a534:	str	xzr, [sp, #8]
  40a538:	str	x0, [sp]
  40a53c:	mov	x7, x3
  40a540:	ldr	x6, [sp, #80]
  40a544:	ldrb	w5, [sp, #102]
  40a548:	mov	x4, x2
  40a54c:	mov	w3, w8
  40a550:	mov	w2, #0x1a0                 	// #416
  40a554:	ldr	w1, [sp, #96]
  40a558:	ldr	x0, [sp, #88]
  40a55c:	bl	405c00 <journal_file_open_reliably@plt>
  40a560:	str	w0, [sp, #116]
  40a564:	b	40a5c0 <open_journal+0x1d0>
  40a568:	ldr	x0, [sp, #104]
  40a56c:	ldrb	w4, [x0, #440]
  40a570:	ldr	x0, [sp, #104]
  40a574:	ldr	x3, [x0, #448]
  40a578:	ldr	x0, [sp, #104]
  40a57c:	ldr	x0, [x0, #568]
  40a580:	ldr	x1, [sp, #104]
  40a584:	ldr	x1, [x1, #576]
  40a588:	add	x2, sp, #0x78
  40a58c:	str	x2, [sp, #24]
  40a590:	str	xzr, [sp, #16]
  40a594:	str	x1, [sp, #8]
  40a598:	str	x0, [sp]
  40a59c:	ldr	x7, [sp, #80]
  40a5a0:	ldrb	w6, [sp, #102]
  40a5a4:	mov	x5, x3
  40a5a8:	mov	w3, #0x1a0                 	// #416
  40a5ac:	ldr	w2, [sp, #96]
  40a5b0:	ldr	x1, [sp, #88]
  40a5b4:	mov	w0, #0xffffffff            	// #-1
  40a5b8:	bl	405f00 <journal_file_open@plt>
  40a5bc:	str	w0, [sp, #116]
  40a5c0:	ldr	w0, [sp, #116]
  40a5c4:	cmp	w0, #0x0
  40a5c8:	b.ge	40a5d4 <open_journal+0x1e4>  // b.tcont
  40a5cc:	ldr	w19, [sp, #116]
  40a5d0:	b	40a628 <open_journal+0x238>
  40a5d4:	ldr	x3, [sp, #120]
  40a5d8:	ldr	x0, [sp, #104]
  40a5dc:	ldr	x0, [x0, #32]
  40a5e0:	mov	x2, #0xd090                	// #53392
  40a5e4:	movk	x2, #0x3, lsl #16
  40a5e8:	mov	x1, x0
  40a5ec:	mov	x0, x3
  40a5f0:	bl	406ba0 <journal_file_enable_post_change_timer@plt>
  40a5f4:	str	w0, [sp, #116]
  40a5f8:	ldr	w0, [sp, #116]
  40a5fc:	cmp	w0, #0x0
  40a600:	b.ge	40a60c <open_journal+0x21c>  // b.tcont
  40a604:	ldr	w19, [sp, #116]
  40a608:	b	40a628 <open_journal+0x238>
  40a60c:	ldr	x0, [sp, #120]
  40a610:	str	x0, [sp, #128]
  40a614:	str	xzr, [sp, #120]
  40a618:	ldr	x1, [sp, #128]
  40a61c:	ldr	x0, [sp, #72]
  40a620:	str	x1, [x0]
  40a624:	ldr	w19, [sp, #116]
  40a628:	add	x0, sp, #0x78
  40a62c:	bl	40958c <journal_file_closep>
  40a630:	mov	w1, w19
  40a634:	adrp	x0, 441000 <wordlist.9471+0x208>
  40a638:	ldr	x0, [x0, #4064]
  40a63c:	ldr	x2, [sp, #136]
  40a640:	ldr	x0, [x0]
  40a644:	eor	x0, x2, x0
  40a648:	cmp	x0, #0x0
  40a64c:	b.eq	40a654 <open_journal+0x264>  // b.none
  40a650:	bl	4063e0 <__stack_chk_fail@plt>
  40a654:	mov	w0, w1
  40a658:	ldr	x19, [sp, #48]
  40a65c:	ldp	x29, x30, [sp, #32]
  40a660:	add	sp, sp, #0x90
  40a664:	ret

000000000040a668 <flushed_flag_is_set>:
  40a668:	stp	x29, x30, [sp, #-16]!
  40a66c:	mov	x29, sp
  40a670:	mov	w1, #0x0                   	// #0
  40a674:	adrp	x0, 428000 <__func__.11909+0x280>
  40a678:	add	x0, x0, #0x98
  40a67c:	bl	406120 <access@plt>
  40a680:	mvn	w0, w0
  40a684:	lsr	w0, w0, #31
  40a688:	and	w0, w0, #0xff
  40a68c:	ldp	x29, x30, [sp], #16
  40a690:	ret

000000000040a694 <system_journal_open>:
  40a694:	stp	x29, x30, [sp, #-192]!
  40a698:	mov	x29, sp
  40a69c:	str	x0, [x29, #24]
  40a6a0:	strb	w1, [x29, #23]
  40a6a4:	strb	w2, [x29, #22]
  40a6a8:	adrp	x0, 441000 <wordlist.9471+0x208>
  40a6ac:	ldr	x0, [x0, #4064]
  40a6b0:	ldr	x1, [x0]
  40a6b4:	str	x1, [x29, #184]
  40a6b8:	mov	x1, #0x0                   	// #0
  40a6bc:	str	wzr, [x29, #40]
  40a6c0:	ldr	x0, [x29, #24]
  40a6c4:	ldr	x0, [x0, #160]
  40a6c8:	cmp	x0, #0x0
  40a6cc:	b.ne	40aa5c <system_journal_open+0x3c8>  // b.any
  40a6d0:	strb	wzr, [x29, #38]
  40a6d4:	ldr	x0, [x29, #24]
  40a6d8:	ldr	w0, [x0, #556]
  40a6dc:	cmp	w0, #0x0
  40a6e0:	b.eq	40a6ec <system_journal_open+0x58>  // b.none
  40a6e4:	cmp	w0, #0x2
  40a6e8:	b.ne	40a6f4 <system_journal_open+0x60>  // b.any
  40a6ec:	mov	w0, #0x1                   	// #1
  40a6f0:	strb	w0, [x29, #38]
  40a6f4:	nop
  40a6f8:	ldrb	w0, [x29, #38]
  40a6fc:	cmp	w0, #0x0
  40a700:	b.eq	40aa5c <system_journal_open+0x3c8>  // b.none
  40a704:	ldrb	w0, [x29, #23]
  40a708:	cmp	w0, #0x0
  40a70c:	b.ne	40a720 <system_journal_open+0x8c>  // b.any
  40a710:	bl	40a668 <flushed_flag_is_set>
  40a714:	and	w0, w0, #0xff
  40a718:	cmp	w0, #0x0
  40a71c:	b.eq	40aa5c <system_journal_open+0x3c8>  // b.none
  40a720:	ldrb	w0, [x29, #22]
  40a724:	eor	w0, w0, #0x1
  40a728:	and	w0, w0, #0xff
  40a72c:	cmp	w0, #0x0
  40a730:	b.eq	40aa5c <system_journal_open+0x3c8>  // b.none
  40a734:	ldr	x0, [x29, #24]
  40a738:	ldr	w0, [x0, #556]
  40a73c:	cmp	w0, #0x2
  40a740:	b.ne	40a754 <system_journal_open+0xc0>  // b.any
  40a744:	mov	w1, #0x1ed                 	// #493
  40a748:	adrp	x0, 428000 <__func__.11909+0x280>
  40a74c:	add	x0, x0, #0xb8
  40a750:	bl	406a60 <mkdir_p@plt>
  40a754:	ldr	x0, [x29, #24]
  40a758:	ldr	x0, [x0, #344]
  40a75c:	mov	w1, #0x1ed                 	// #493
  40a760:	bl	406860 <mkdir@plt>
  40a764:	ldr	x0, [x29, #24]
  40a768:	ldr	x0, [x0, #344]
  40a76c:	str	x0, [x29, #168]
  40a770:	adrp	x0, 428000 <__func__.11909+0x280>
  40a774:	add	x0, x0, #0xd0
  40a778:	str	x0, [x29, #176]
  40a77c:	str	xzr, [x29, #88]
  40a780:	str	xzr, [x29, #96]
  40a784:	b	40a7b8 <system_journal_open+0x124>
  40a788:	ldr	x0, [x29, #96]
  40a78c:	lsl	x0, x0, #3
  40a790:	add	x1, x29, #0xa8
  40a794:	ldr	x0, [x1, x0]
  40a798:	bl	406af0 <strlen@plt>
  40a79c:	mov	x1, x0
  40a7a0:	ldr	x0, [x29, #88]
  40a7a4:	add	x0, x0, x1
  40a7a8:	str	x0, [x29, #88]
  40a7ac:	ldr	x0, [x29, #96]
  40a7b0:	add	x0, x0, #0x1
  40a7b4:	str	x0, [x29, #96]
  40a7b8:	ldr	x0, [x29, #96]
  40a7bc:	cmp	x0, #0x1
  40a7c0:	b.hi	40a7dc <system_journal_open+0x148>  // b.pmore
  40a7c4:	ldr	x0, [x29, #96]
  40a7c8:	lsl	x0, x0, #3
  40a7cc:	add	x1, x29, #0xa8
  40a7d0:	ldr	x0, [x1, x0]
  40a7d4:	cmp	x0, #0x0
  40a7d8:	b.ne	40a788 <system_journal_open+0xf4>  // b.any
  40a7dc:	ldr	x0, [x29, #88]
  40a7e0:	add	x0, x0, #0x1
  40a7e4:	str	x0, [x29, #128]
  40a7e8:	ldr	x1, [x29, #128]
  40a7ec:	mov	x0, #0x1                   	// #1
  40a7f0:	bl	409118 <size_multiply_overflow>
  40a7f4:	and	w0, w0, #0xff
  40a7f8:	and	x0, x0, #0xff
  40a7fc:	cmp	x0, #0x0
  40a800:	b.eq	40a82c <system_journal_open+0x198>  // b.none
  40a804:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a808:	add	x1, x0, #0xe03
  40a80c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a810:	add	x4, x0, #0x378
  40a814:	mov	w3, #0x133                 	// #307
  40a818:	mov	x2, x1
  40a81c:	adrp	x0, 428000 <__func__.11909+0x280>
  40a820:	add	x1, x0, #0xe0
  40a824:	mov	w0, #0x0                   	// #0
  40a828:	bl	405fd0 <log_assert_failed_realm@plt>
  40a82c:	ldr	x0, [x29, #128]
  40a830:	cmp	x0, #0x400, lsl #12
  40a834:	cset	w0, hi  // hi = pmore
  40a838:	and	w0, w0, #0xff
  40a83c:	and	x0, x0, #0xff
  40a840:	cmp	x0, #0x0
  40a844:	b.eq	40a870 <system_journal_open+0x1dc>  // b.none
  40a848:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40a84c:	add	x1, x0, #0xe03
  40a850:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40a854:	add	x4, x0, #0x378
  40a858:	mov	w3, #0x133                 	// #307
  40a85c:	mov	x2, x1
  40a860:	adrp	x0, 428000 <__func__.11909+0x280>
  40a864:	add	x1, x0, #0x110
  40a868:	mov	w0, #0x0                   	// #0
  40a86c:	bl	405fd0 <log_assert_failed_realm@plt>
  40a870:	ldr	x0, [x29, #128]
  40a874:	add	x0, x0, #0xf
  40a878:	lsr	x0, x0, #4
  40a87c:	lsl	x0, x0, #4
  40a880:	sub	sp, sp, x0
  40a884:	mov	x0, sp
  40a888:	add	x0, x0, #0xf
  40a88c:	lsr	x0, x0, #4
  40a890:	lsl	x0, x0, #4
  40a894:	str	x0, [x29, #136]
  40a898:	ldr	x0, [x29, #136]
  40a89c:	str	x0, [x29, #80]
  40a8a0:	str	xzr, [x29, #96]
  40a8a4:	b	40a8d4 <system_journal_open+0x240>
  40a8a8:	ldr	x0, [x29, #96]
  40a8ac:	lsl	x0, x0, #3
  40a8b0:	add	x1, x29, #0xa8
  40a8b4:	ldr	x0, [x1, x0]
  40a8b8:	mov	x1, x0
  40a8bc:	ldr	x0, [x29, #80]
  40a8c0:	bl	405bc0 <stpcpy@plt>
  40a8c4:	str	x0, [x29, #80]
  40a8c8:	ldr	x0, [x29, #96]
  40a8cc:	add	x0, x0, #0x1
  40a8d0:	str	x0, [x29, #96]
  40a8d4:	ldr	x0, [x29, #96]
  40a8d8:	cmp	x0, #0x1
  40a8dc:	b.hi	40a8f8 <system_journal_open+0x264>  // b.pmore
  40a8e0:	ldr	x0, [x29, #96]
  40a8e4:	lsl	x0, x0, #3
  40a8e8:	add	x1, x29, #0xa8
  40a8ec:	ldr	x0, [x1, x0]
  40a8f0:	cmp	x0, #0x0
  40a8f4:	b.ne	40a8a8 <system_journal_open+0x214>  // b.any
  40a8f8:	ldr	x0, [x29, #80]
  40a8fc:	strb	wzr, [x0]
  40a900:	ldr	x0, [x29, #136]
  40a904:	str	x0, [x29, #144]
  40a908:	ldr	x0, [x29, #24]
  40a90c:	ldrb	w2, [x0, #456]
  40a910:	ldr	x0, [x29, #24]
  40a914:	add	x1, x0, #0x160
  40a918:	ldr	x0, [x29, #24]
  40a91c:	add	x0, x0, #0xa0
  40a920:	mov	x6, x0
  40a924:	mov	x5, x1
  40a928:	mov	w4, w2
  40a92c:	mov	w3, #0x42                  	// #66
  40a930:	ldr	x2, [x29, #144]
  40a934:	mov	w1, #0x1                   	// #1
  40a938:	ldr	x0, [x29, #24]
  40a93c:	bl	40a3f0 <open_journal>
  40a940:	str	w0, [x29, #40]
  40a944:	ldr	w0, [x29, #40]
  40a948:	cmp	w0, #0x0
  40a94c:	b.lt	40a984 <system_journal_open+0x2f0>  // b.tstop
  40a950:	ldr	x0, [x29, #24]
  40a954:	ldr	x0, [x0, #160]
  40a958:	mov	w1, #0x0                   	// #0
  40a95c:	bl	40a2d4 <server_add_acls>
  40a960:	ldr	x0, [x29, #24]
  40a964:	add	x0, x0, #0x150
  40a968:	mov	x1, x0
  40a96c:	ldr	x0, [x29, #24]
  40a970:	bl	409bc8 <cache_space_refresh>
  40a974:	ldr	x0, [x29, #24]
  40a978:	add	x0, x0, #0x150
  40a97c:	bl	409df8 <patch_min_use>
  40a980:	b	40aa3c <system_journal_open+0x3a8>
  40a984:	strb	wzr, [x29, #39]
  40a988:	ldr	w0, [x29, #40]
  40a98c:	cmn	w0, #0x1e
  40a990:	b.eq	40a9a0 <system_journal_open+0x30c>  // b.none
  40a994:	ldr	w0, [x29, #40]
  40a998:	cmn	w0, #0x2
  40a99c:	b.ne	40a9a8 <system_journal_open+0x314>  // b.any
  40a9a0:	mov	w0, #0x1                   	// #1
  40a9a4:	strb	w0, [x29, #39]
  40a9a8:	nop
  40a9ac:	ldrb	w0, [x29, #39]
  40a9b0:	eor	w0, w0, #0x1
  40a9b4:	and	w0, w0, #0xff
  40a9b8:	cmp	w0, #0x0
  40a9bc:	b.eq	40aa38 <system_journal_open+0x3a4>  // b.none
  40a9c0:	mov	w0, #0x4                   	// #4
  40a9c4:	str	w0, [x29, #44]
  40a9c8:	ldr	w0, [x29, #40]
  40a9cc:	str	w0, [x29, #48]
  40a9d0:	str	wzr, [x29, #52]
  40a9d4:	ldr	w0, [x29, #52]
  40a9d8:	bl	406c30 <log_get_max_level_realm@plt>
  40a9dc:	mov	w1, w0
  40a9e0:	ldr	w0, [x29, #44]
  40a9e4:	and	w0, w0, #0x7
  40a9e8:	cmp	w1, w0
  40a9ec:	b.lt	40aa30 <system_journal_open+0x39c>  // b.tstop
  40a9f0:	ldr	w0, [x29, #52]
  40a9f4:	lsl	w1, w0, #10
  40a9f8:	ldr	w0, [x29, #44]
  40a9fc:	orr	w6, w1, w0
  40aa00:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40aa04:	add	x1, x0, #0xe03
  40aa08:	adrp	x0, 428000 <__func__.11909+0x280>
  40aa0c:	add	x5, x0, #0x130
  40aa10:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40aa14:	add	x4, x0, #0x390
  40aa18:	mov	w3, #0x13b                 	// #315
  40aa1c:	mov	x2, x1
  40aa20:	ldr	w1, [x29, #48]
  40aa24:	mov	w0, w6
  40aa28:	bl	406590 <log_internal_realm@plt>
  40aa2c:	b	40aa38 <system_journal_open+0x3a4>
  40aa30:	ldr	w0, [x29, #48]
  40aa34:	cmp	w0, #0x0
  40aa38:	str	wzr, [x29, #40]
  40aa3c:	ldrb	w0, [x29, #23]
  40aa40:	eor	w0, w0, #0x1
  40aa44:	and	w0, w0, #0xff
  40aa48:	cmp	w0, #0x0
  40aa4c:	b.eq	40aa5c <system_journal_open+0x3c8>  // b.none
  40aa50:	mov	w1, #0x1                   	// #1
  40aa54:	ldr	x0, [x29, #24]
  40aa58:	bl	4119cc <server_flush_to_var>
  40aa5c:	ldr	x0, [x29, #24]
  40aa60:	ldr	x0, [x0, #152]
  40aa64:	cmp	x0, #0x0
  40aa68:	b.ne	40ae44 <system_journal_open+0x7b0>  // b.any
  40aa6c:	ldr	x0, [x29, #24]
  40aa70:	ldr	w0, [x0, #556]
  40aa74:	cmp	w0, #0x3
  40aa78:	b.eq	40ae44 <system_journal_open+0x7b0>  // b.none
  40aa7c:	ldr	x0, [x29, #24]
  40aa80:	ldr	x0, [x0, #240]
  40aa84:	str	x0, [x29, #168]
  40aa88:	adrp	x0, 428000 <__func__.11909+0x280>
  40aa8c:	add	x0, x0, #0xd0
  40aa90:	str	x0, [x29, #176]
  40aa94:	str	xzr, [x29, #112]
  40aa98:	str	xzr, [x29, #120]
  40aa9c:	b	40aad0 <system_journal_open+0x43c>
  40aaa0:	ldr	x0, [x29, #120]
  40aaa4:	lsl	x0, x0, #3
  40aaa8:	add	x1, x29, #0xa8
  40aaac:	ldr	x0, [x1, x0]
  40aab0:	bl	406af0 <strlen@plt>
  40aab4:	mov	x1, x0
  40aab8:	ldr	x0, [x29, #112]
  40aabc:	add	x0, x0, x1
  40aac0:	str	x0, [x29, #112]
  40aac4:	ldr	x0, [x29, #120]
  40aac8:	add	x0, x0, #0x1
  40aacc:	str	x0, [x29, #120]
  40aad0:	ldr	x0, [x29, #120]
  40aad4:	cmp	x0, #0x1
  40aad8:	b.hi	40aaf4 <system_journal_open+0x460>  // b.pmore
  40aadc:	ldr	x0, [x29, #120]
  40aae0:	lsl	x0, x0, #3
  40aae4:	add	x1, x29, #0xa8
  40aae8:	ldr	x0, [x1, x0]
  40aaec:	cmp	x0, #0x0
  40aaf0:	b.ne	40aaa0 <system_journal_open+0x40c>  // b.any
  40aaf4:	ldr	x0, [x29, #112]
  40aaf8:	add	x0, x0, #0x1
  40aafc:	str	x0, [x29, #152]
  40ab00:	ldr	x1, [x29, #152]
  40ab04:	mov	x0, #0x1                   	// #1
  40ab08:	bl	409118 <size_multiply_overflow>
  40ab0c:	and	w0, w0, #0xff
  40ab10:	and	x0, x0, #0xff
  40ab14:	cmp	x0, #0x0
  40ab18:	b.eq	40ab44 <system_journal_open+0x4b0>  // b.none
  40ab1c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ab20:	add	x1, x0, #0xe03
  40ab24:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ab28:	add	x4, x0, #0x378
  40ab2c:	mov	w3, #0x14e                 	// #334
  40ab30:	mov	x2, x1
  40ab34:	adrp	x0, 428000 <__func__.11909+0x280>
  40ab38:	add	x1, x0, #0xe0
  40ab3c:	mov	w0, #0x0                   	// #0
  40ab40:	bl	405fd0 <log_assert_failed_realm@plt>
  40ab44:	ldr	x0, [x29, #152]
  40ab48:	cmp	x0, #0x400, lsl #12
  40ab4c:	cset	w0, hi  // hi = pmore
  40ab50:	and	w0, w0, #0xff
  40ab54:	and	x0, x0, #0xff
  40ab58:	cmp	x0, #0x0
  40ab5c:	b.eq	40ab88 <system_journal_open+0x4f4>  // b.none
  40ab60:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ab64:	add	x1, x0, #0xe03
  40ab68:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ab6c:	add	x4, x0, #0x378
  40ab70:	mov	w3, #0x14e                 	// #334
  40ab74:	mov	x2, x1
  40ab78:	adrp	x0, 428000 <__func__.11909+0x280>
  40ab7c:	add	x1, x0, #0x110
  40ab80:	mov	w0, #0x0                   	// #0
  40ab84:	bl	405fd0 <log_assert_failed_realm@plt>
  40ab88:	ldr	x0, [x29, #152]
  40ab8c:	add	x0, x0, #0xf
  40ab90:	lsr	x0, x0, #4
  40ab94:	lsl	x0, x0, #4
  40ab98:	sub	sp, sp, x0
  40ab9c:	mov	x0, sp
  40aba0:	add	x0, x0, #0xf
  40aba4:	lsr	x0, x0, #4
  40aba8:	lsl	x0, x0, #4
  40abac:	str	x0, [x29, #160]
  40abb0:	ldr	x0, [x29, #160]
  40abb4:	str	x0, [x29, #104]
  40abb8:	str	xzr, [x29, #120]
  40abbc:	b	40abec <system_journal_open+0x558>
  40abc0:	ldr	x0, [x29, #120]
  40abc4:	lsl	x0, x0, #3
  40abc8:	add	x1, x29, #0xa8
  40abcc:	ldr	x0, [x1, x0]
  40abd0:	mov	x1, x0
  40abd4:	ldr	x0, [x29, #104]
  40abd8:	bl	405bc0 <stpcpy@plt>
  40abdc:	str	x0, [x29, #104]
  40abe0:	ldr	x0, [x29, #120]
  40abe4:	add	x0, x0, #0x1
  40abe8:	str	x0, [x29, #120]
  40abec:	ldr	x0, [x29, #120]
  40abf0:	cmp	x0, #0x1
  40abf4:	b.hi	40ac10 <system_journal_open+0x57c>  // b.pmore
  40abf8:	ldr	x0, [x29, #120]
  40abfc:	lsl	x0, x0, #3
  40ac00:	add	x1, x29, #0xa8
  40ac04:	ldr	x0, [x1, x0]
  40ac08:	cmp	x0, #0x0
  40ac0c:	b.ne	40abc0 <system_journal_open+0x52c>  // b.any
  40ac10:	ldr	x0, [x29, #104]
  40ac14:	strb	wzr, [x0]
  40ac18:	ldr	x0, [x29, #160]
  40ac1c:	str	x0, [x29, #144]
  40ac20:	ldr	x0, [x29, #24]
  40ac24:	ldr	x0, [x0, #160]
  40ac28:	cmp	x0, #0x0
  40ac2c:	b.eq	40ad10 <system_journal_open+0x67c>  // b.none
  40ac30:	ldrb	w0, [x29, #22]
  40ac34:	eor	w0, w0, #0x1
  40ac38:	and	w0, w0, #0xff
  40ac3c:	cmp	w0, #0x0
  40ac40:	b.eq	40ad10 <system_journal_open+0x67c>  // b.none
  40ac44:	ldr	x0, [x29, #24]
  40ac48:	add	x1, x0, #0xf8
  40ac4c:	ldr	x0, [x29, #24]
  40ac50:	add	x0, x0, #0x98
  40ac54:	mov	x6, x0
  40ac58:	mov	x5, x1
  40ac5c:	mov	w4, #0x0                   	// #0
  40ac60:	mov	w3, #0x2                   	// #2
  40ac64:	ldr	x2, [x29, #144]
  40ac68:	mov	w1, #0x0                   	// #0
  40ac6c:	ldr	x0, [x29, #24]
  40ac70:	bl	40a3f0 <open_journal>
  40ac74:	str	w0, [x29, #40]
  40ac78:	ldr	w0, [x29, #40]
  40ac7c:	cmp	w0, #0x0
  40ac80:	b.ge	40ae04 <system_journal_open+0x770>  // b.tcont
  40ac84:	ldr	w0, [x29, #40]
  40ac88:	cmn	w0, #0x2
  40ac8c:	b.eq	40ad08 <system_journal_open+0x674>  // b.none
  40ac90:	mov	w0, #0x4                   	// #4
  40ac94:	str	w0, [x29, #56]
  40ac98:	ldr	w0, [x29, #40]
  40ac9c:	str	w0, [x29, #60]
  40aca0:	str	wzr, [x29, #64]
  40aca4:	ldr	w0, [x29, #64]
  40aca8:	bl	406c30 <log_get_max_level_realm@plt>
  40acac:	mov	w1, w0
  40acb0:	ldr	w0, [x29, #56]
  40acb4:	and	w0, w0, #0x7
  40acb8:	cmp	w1, w0
  40acbc:	b.lt	40ad00 <system_journal_open+0x66c>  // b.tstop
  40acc0:	ldr	w0, [x29, #64]
  40acc4:	lsl	w1, w0, #10
  40acc8:	ldr	w0, [x29, #56]
  40accc:	orr	w6, w1, w0
  40acd0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40acd4:	add	x1, x0, #0xe03
  40acd8:	adrp	x0, 428000 <__func__.11909+0x280>
  40acdc:	add	x5, x0, #0x158
  40ace0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ace4:	add	x4, x0, #0x390
  40ace8:	mov	w3, #0x159                 	// #345
  40acec:	mov	x2, x1
  40acf0:	ldr	w1, [x29, #60]
  40acf4:	mov	w0, w6
  40acf8:	bl	406590 <log_internal_realm@plt>
  40acfc:	b	40ad08 <system_journal_open+0x674>
  40ad00:	ldr	w0, [x29, #60]
  40ad04:	cmp	w0, #0x0
  40ad08:	str	wzr, [x29, #40]
  40ad0c:	b	40ae04 <system_journal_open+0x770>
  40ad10:	mov	w1, #0x1ed                 	// #493
  40ad14:	adrp	x0, 428000 <__func__.11909+0x280>
  40ad18:	add	x0, x0, #0x180
  40ad1c:	bl	406860 <mkdir@plt>
  40ad20:	mov	w1, #0x1ed                 	// #493
  40ad24:	adrp	x0, 428000 <__func__.11909+0x280>
  40ad28:	add	x0, x0, #0x190
  40ad2c:	bl	406860 <mkdir@plt>
  40ad30:	mov	w1, #0x1e8                 	// #488
  40ad34:	ldr	x0, [x29, #144]
  40ad38:	bl	406b00 <mkdir_parents@plt>
  40ad3c:	ldr	x0, [x29, #24]
  40ad40:	add	x1, x0, #0xf8
  40ad44:	ldr	x0, [x29, #24]
  40ad48:	add	x0, x0, #0x98
  40ad4c:	mov	x6, x0
  40ad50:	mov	x5, x1
  40ad54:	mov	w4, #0x0                   	// #0
  40ad58:	mov	w3, #0x42                  	// #66
  40ad5c:	ldr	x2, [x29, #144]
  40ad60:	mov	w1, #0x1                   	// #1
  40ad64:	ldr	x0, [x29, #24]
  40ad68:	bl	40a3f0 <open_journal>
  40ad6c:	str	w0, [x29, #40]
  40ad70:	ldr	w0, [x29, #40]
  40ad74:	cmp	w0, #0x0
  40ad78:	b.ge	40ae04 <system_journal_open+0x770>  // b.tcont
  40ad7c:	mov	w0, #0x3                   	// #3
  40ad80:	str	w0, [x29, #68]
  40ad84:	ldr	w0, [x29, #40]
  40ad88:	str	w0, [x29, #72]
  40ad8c:	str	wzr, [x29, #76]
  40ad90:	ldr	w0, [x29, #76]
  40ad94:	bl	406c30 <log_get_max_level_realm@plt>
  40ad98:	mov	w1, w0
  40ad9c:	ldr	w0, [x29, #68]
  40ada0:	and	w0, w0, #0x7
  40ada4:	cmp	w1, w0
  40ada8:	b.lt	40adec <system_journal_open+0x758>  // b.tstop
  40adac:	ldr	w0, [x29, #76]
  40adb0:	lsl	w1, w0, #10
  40adb4:	ldr	w0, [x29, #68]
  40adb8:	orr	w6, w1, w0
  40adbc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40adc0:	add	x1, x0, #0xe03
  40adc4:	adrp	x0, 428000 <__func__.11909+0x280>
  40adc8:	add	x5, x0, #0x158
  40adcc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40add0:	add	x4, x0, #0x390
  40add4:	mov	w3, #0x169                 	// #361
  40add8:	mov	x2, x1
  40addc:	ldr	w1, [x29, #72]
  40ade0:	mov	w0, w6
  40ade4:	bl	406590 <log_internal_realm@plt>
  40ade8:	b	40ae48 <system_journal_open+0x7b4>
  40adec:	ldr	w0, [x29, #72]
  40adf0:	cmp	w0, #0x0
  40adf4:	cneg	w0, w0, lt  // lt = tstop
  40adf8:	and	w0, w0, #0xff
  40adfc:	neg	w0, w0
  40ae00:	b	40ae48 <system_journal_open+0x7b4>
  40ae04:	ldr	x0, [x29, #24]
  40ae08:	ldr	x0, [x0, #152]
  40ae0c:	cmp	x0, #0x0
  40ae10:	b.eq	40ae44 <system_journal_open+0x7b0>  // b.none
  40ae14:	ldr	x0, [x29, #24]
  40ae18:	ldr	x0, [x0, #152]
  40ae1c:	mov	w1, #0x0                   	// #0
  40ae20:	bl	40a2d4 <server_add_acls>
  40ae24:	ldr	x0, [x29, #24]
  40ae28:	add	x0, x0, #0xe8
  40ae2c:	mov	x1, x0
  40ae30:	ldr	x0, [x29, #24]
  40ae34:	bl	409bc8 <cache_space_refresh>
  40ae38:	ldr	x0, [x29, #24]
  40ae3c:	add	x0, x0, #0xe8
  40ae40:	bl	409df8 <patch_min_use>
  40ae44:	ldr	w0, [x29, #40]
  40ae48:	mov	w1, w0
  40ae4c:	adrp	x0, 441000 <wordlist.9471+0x208>
  40ae50:	ldr	x0, [x0, #4064]
  40ae54:	ldr	x2, [x29, #184]
  40ae58:	ldr	x0, [x0]
  40ae5c:	eor	x0, x2, x0
  40ae60:	cmp	x0, #0x0
  40ae64:	b.eq	40ae6c <system_journal_open+0x7d8>  // b.none
  40ae68:	bl	4063e0 <__stack_chk_fail@plt>
  40ae6c:	mov	w0, w1
  40ae70:	mov	sp, x29
  40ae74:	ldp	x29, x30, [sp], #192
  40ae78:	ret

000000000040ae7c <find_journal>:
  40ae7c:	sub	sp, sp, #0xd0
  40ae80:	stp	x29, x30, [sp, #96]
  40ae84:	add	x29, sp, #0x60
  40ae88:	str	x19, [sp, #112]
  40ae8c:	str	x0, [sp, #136]
  40ae90:	str	w1, [sp, #132]
  40ae94:	adrp	x0, 441000 <wordlist.9471+0x208>
  40ae98:	ldr	x0, [x0, #4064]
  40ae9c:	ldr	x1, [x0]
  40aea0:	str	x1, [sp, #200]
  40aea4:	mov	x1, #0x0                   	// #0
  40aea8:	str	xzr, [sp, #168]
  40aeac:	ldr	x0, [sp, #136]
  40aeb0:	cmp	x0, #0x0
  40aeb4:	cset	w0, eq  // eq = none
  40aeb8:	and	w0, w0, #0xff
  40aebc:	and	x0, x0, #0xff
  40aec0:	cmp	x0, #0x0
  40aec4:	b.eq	40aef0 <find_journal+0x74>  // b.none
  40aec8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40aecc:	add	x1, x0, #0xe03
  40aed0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40aed4:	add	x4, x0, #0x3a8
  40aed8:	mov	w3, #0x17c                 	// #380
  40aedc:	mov	x2, x1
  40aee0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40aee4:	add	x1, x0, #0xec8
  40aee8:	mov	w0, #0x0                   	// #0
  40aeec:	bl	405fd0 <log_assert_failed_realm@plt>
  40aef0:	mov	w2, #0x0                   	// #0
  40aef4:	mov	w1, #0x0                   	// #0
  40aef8:	ldr	x0, [sp, #136]
  40aefc:	bl	40a694 <system_journal_open>
  40af00:	ldr	x0, [sp, #136]
  40af04:	ldr	x0, [x0, #152]
  40af08:	cmp	x0, #0x0
  40af0c:	b.eq	40af1c <find_journal+0xa0>  // b.none
  40af10:	ldr	x0, [sp, #136]
  40af14:	ldr	x19, [x0, #152]
  40af18:	b	40b234 <find_journal+0x3b8>
  40af1c:	ldr	w0, [sp, #132]
  40af20:	bl	40a274 <uid_for_system_journal>
  40af24:	and	w0, w0, #0xff
  40af28:	cmp	w0, #0x0
  40af2c:	b.eq	40af3c <find_journal+0xc0>  // b.none
  40af30:	ldr	x0, [sp, #136]
  40af34:	ldr	x19, [x0, #160]
  40af38:	b	40b234 <find_journal+0x3b8>
  40af3c:	ldr	x0, [sp, #136]
  40af40:	ldr	x2, [x0, #168]
  40af44:	ldr	w0, [sp, #132]
  40af48:	add	x0, x0, #0x1
  40af4c:	mov	x1, x0
  40af50:	mov	x0, x2
  40af54:	bl	40924c <ordered_hashmap_get>
  40af58:	str	x0, [sp, #176]
  40af5c:	ldr	x0, [sp, #176]
  40af60:	cmp	x0, #0x0
  40af64:	b.eq	40af70 <find_journal+0xf4>  // b.none
  40af68:	ldr	x19, [sp, #176]
  40af6c:	b	40b234 <find_journal+0x3b8>
  40af70:	add	x0, sp, #0xb8
  40af74:	bl	406510 <sd_id128_get_machine@plt>
  40af78:	str	w0, [sp, #152]
  40af7c:	ldr	w0, [sp, #152]
  40af80:	cmp	w0, #0x0
  40af84:	b.ge	40b00c <find_journal+0x190>  // b.tcont
  40af88:	mov	w0, #0x7                   	// #7
  40af8c:	str	w0, [sp, #156]
  40af90:	ldr	w0, [sp, #152]
  40af94:	str	w0, [sp, #160]
  40af98:	str	wzr, [sp, #164]
  40af9c:	ldr	w0, [sp, #164]
  40afa0:	bl	406c30 <log_get_max_level_realm@plt>
  40afa4:	mov	w1, w0
  40afa8:	ldr	w0, [sp, #156]
  40afac:	and	w0, w0, #0x7
  40afb0:	cmp	w1, w0
  40afb4:	b.lt	40aff8 <find_journal+0x17c>  // b.tstop
  40afb8:	ldr	w0, [sp, #164]
  40afbc:	lsl	w1, w0, #10
  40afc0:	ldr	w0, [sp, #156]
  40afc4:	orr	w6, w1, w0
  40afc8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40afcc:	add	x1, x0, #0xe03
  40afd0:	adrp	x0, 428000 <__func__.11909+0x280>
  40afd4:	add	x5, x0, #0x1a8
  40afd8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40afdc:	add	x4, x0, #0x3b8
  40afe0:	mov	w3, #0x19a                 	// #410
  40afe4:	mov	x2, x1
  40afe8:	ldr	w1, [sp, #160]
  40afec:	mov	w0, w6
  40aff0:	bl	406590 <log_internal_realm@plt>
  40aff4:	b	40b000 <find_journal+0x184>
  40aff8:	ldr	w0, [sp, #160]
  40affc:	cmp	w0, #0x0
  40b000:	ldr	x0, [sp, #136]
  40b004:	ldr	x19, [x0, #160]
  40b008:	b	40b234 <find_journal+0x3b8>
  40b00c:	ldrb	w0, [sp, #184]
  40b010:	mov	w12, w0
  40b014:	ldrb	w0, [sp, #185]
  40b018:	mov	w13, w0
  40b01c:	ldrb	w0, [sp, #186]
  40b020:	mov	w14, w0
  40b024:	ldrb	w0, [sp, #187]
  40b028:	mov	w15, w0
  40b02c:	ldrb	w0, [sp, #188]
  40b030:	mov	w16, w0
  40b034:	ldrb	w0, [sp, #189]
  40b038:	mov	w17, w0
  40b03c:	ldrb	w0, [sp, #190]
  40b040:	mov	w1, w0
  40b044:	ldrb	w0, [sp, #191]
  40b048:	mov	w2, w0
  40b04c:	ldrb	w0, [sp, #192]
  40b050:	mov	w3, w0
  40b054:	ldrb	w0, [sp, #193]
  40b058:	mov	w4, w0
  40b05c:	ldrb	w0, [sp, #194]
  40b060:	mov	w5, w0
  40b064:	ldrb	w0, [sp, #195]
  40b068:	mov	w6, w0
  40b06c:	ldrb	w0, [sp, #196]
  40b070:	mov	w7, w0
  40b074:	ldrb	w0, [sp, #197]
  40b078:	mov	w9, w0
  40b07c:	ldrb	w0, [sp, #198]
  40b080:	mov	w10, w0
  40b084:	ldrb	w0, [sp, #199]
  40b088:	mov	w11, w0
  40b08c:	add	x8, sp, #0xa8
  40b090:	ldr	w0, [sp, #132]
  40b094:	str	w0, [sp, #80]
  40b098:	str	w11, [sp, #72]
  40b09c:	str	w10, [sp, #64]
  40b0a0:	str	w9, [sp, #56]
  40b0a4:	str	w7, [sp, #48]
  40b0a8:	str	w6, [sp, #40]
  40b0ac:	str	w5, [sp, #32]
  40b0b0:	str	w4, [sp, #24]
  40b0b4:	str	w3, [sp, #16]
  40b0b8:	str	w2, [sp, #8]
  40b0bc:	str	w1, [sp]
  40b0c0:	mov	w7, w17
  40b0c4:	mov	w6, w16
  40b0c8:	mov	w5, w15
  40b0cc:	mov	w4, w14
  40b0d0:	mov	w3, w13
  40b0d4:	mov	w2, w12
  40b0d8:	adrp	x0, 428000 <__func__.11909+0x280>
  40b0dc:	add	x1, x0, #0x1e0
  40b0e0:	mov	x0, x8
  40b0e4:	bl	406830 <asprintf@plt>
  40b0e8:	cmp	w0, #0x0
  40b0ec:	b.ge	40b174 <find_journal+0x2f8>  // b.tcont
  40b0f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b0f4:	add	x1, x0, #0xe03
  40b0f8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b0fc:	add	x3, x0, #0x3b8
  40b100:	mov	w2, #0x1a0                 	// #416
  40b104:	mov	w0, #0x0                   	// #0
  40b108:	bl	406b70 <log_oom_internal@plt>
  40b10c:	ldr	x0, [sp, #136]
  40b110:	ldr	x19, [x0, #160]
  40b114:	b	40b234 <find_journal+0x3b8>
  40b118:	ldr	x0, [sp, #136]
  40b11c:	ldr	x0, [x0, #168]
  40b120:	bl	409310 <ordered_hashmap_steal_first>
  40b124:	str	x0, [sp, #176]
  40b128:	ldr	x0, [sp, #176]
  40b12c:	cmp	x0, #0x0
  40b130:	cset	w0, eq  // eq = none
  40b134:	and	w0, w0, #0xff
  40b138:	and	x0, x0, #0xff
  40b13c:	cmp	x0, #0x0
  40b140:	b.eq	40b16c <find_journal+0x2f0>  // b.none
  40b144:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b148:	add	x1, x0, #0xe03
  40b14c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b150:	add	x4, x0, #0x3a8
  40b154:	mov	w3, #0x1a7                 	// #423
  40b158:	mov	x2, x1
  40b15c:	adrp	x0, 428000 <__func__.11909+0x280>
  40b160:	add	x1, x0, #0x58
  40b164:	mov	w0, #0x0                   	// #0
  40b168:	bl	405fd0 <log_assert_failed_realm@plt>
  40b16c:	ldr	x0, [sp, #176]
  40b170:	bl	406030 <journal_file_close@plt>
  40b174:	ldr	x0, [sp, #136]
  40b178:	ldr	x0, [x0, #168]
  40b17c:	bl	4092bc <ordered_hashmap_size>
  40b180:	cmp	w0, #0x3ff
  40b184:	b.hi	40b118 <find_journal+0x29c>  // b.pmore
  40b188:	ldr	x1, [sp, #168]
  40b18c:	ldr	x0, [sp, #136]
  40b190:	ldrb	w3, [x0, #456]
  40b194:	ldr	x0, [sp, #136]
  40b198:	add	x0, x0, #0x160
  40b19c:	add	x2, sp, #0xb0
  40b1a0:	mov	x6, x2
  40b1a4:	mov	x5, x0
  40b1a8:	mov	w4, w3
  40b1ac:	mov	w3, #0x42                  	// #66
  40b1b0:	mov	x2, x1
  40b1b4:	mov	w1, #0x1                   	// #1
  40b1b8:	ldr	x0, [sp, #136]
  40b1bc:	bl	40a3f0 <open_journal>
  40b1c0:	str	w0, [sp, #152]
  40b1c4:	ldr	w0, [sp, #152]
  40b1c8:	cmp	w0, #0x0
  40b1cc:	b.ge	40b1dc <find_journal+0x360>  // b.tcont
  40b1d0:	ldr	x0, [sp, #136]
  40b1d4:	ldr	x19, [x0, #160]
  40b1d8:	b	40b234 <find_journal+0x3b8>
  40b1dc:	ldr	x0, [sp, #176]
  40b1e0:	ldr	w1, [sp, #132]
  40b1e4:	bl	40a2d4 <server_add_acls>
  40b1e8:	ldr	x0, [sp, #136]
  40b1ec:	ldr	x3, [x0, #168]
  40b1f0:	ldr	w0, [sp, #132]
  40b1f4:	add	x0, x0, #0x1
  40b1f8:	mov	x1, x0
  40b1fc:	ldr	x0, [sp, #176]
  40b200:	mov	x2, x0
  40b204:	mov	x0, x3
  40b208:	bl	4091f4 <ordered_hashmap_put>
  40b20c:	str	w0, [sp, #152]
  40b210:	ldr	w0, [sp, #152]
  40b214:	cmp	w0, #0x0
  40b218:	b.ge	40b230 <find_journal+0x3b4>  // b.tcont
  40b21c:	ldr	x0, [sp, #176]
  40b220:	bl	406030 <journal_file_close@plt>
  40b224:	ldr	x0, [sp, #136]
  40b228:	ldr	x19, [x0, #160]
  40b22c:	b	40b234 <find_journal+0x3b8>
  40b230:	ldr	x19, [sp, #176]
  40b234:	add	x0, sp, #0xa8
  40b238:	bl	4090f4 <freep>
  40b23c:	mov	x1, x19
  40b240:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b244:	ldr	x0, [x0, #4064]
  40b248:	ldr	x2, [sp, #200]
  40b24c:	ldr	x0, [x0]
  40b250:	eor	x0, x2, x0
  40b254:	cmp	x0, #0x0
  40b258:	b.eq	40b260 <find_journal+0x3e4>  // b.none
  40b25c:	bl	4063e0 <__stack_chk_fail@plt>
  40b260:	mov	x0, x1
  40b264:	ldr	x19, [sp, #112]
  40b268:	ldp	x29, x30, [sp, #96]
  40b26c:	add	sp, sp, #0xd0
  40b270:	ret

000000000040b274 <do_rotate>:
  40b274:	stp	x29, x30, [sp, #-80]!
  40b278:	mov	x29, sp
  40b27c:	str	x0, [sp, #40]
  40b280:	str	x1, [sp, #32]
  40b284:	str	x2, [sp, #24]
  40b288:	strb	w3, [sp, #23]
  40b28c:	str	w4, [sp, #16]
  40b290:	ldr	x0, [sp, #40]
  40b294:	cmp	x0, #0x0
  40b298:	cset	w0, eq  // eq = none
  40b29c:	and	w0, w0, #0xff
  40b2a0:	and	x0, x0, #0xff
  40b2a4:	cmp	x0, #0x0
  40b2a8:	b.eq	40b2d4 <do_rotate+0x60>  // b.none
  40b2ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b2b0:	add	x1, x0, #0xe03
  40b2b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b2b8:	add	x4, x0, #0x3c8
  40b2bc:	mov	w3, #0x1c2                 	// #450
  40b2c0:	mov	x2, x1
  40b2c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b2c8:	add	x1, x0, #0xec8
  40b2cc:	mov	w0, #0x0                   	// #0
  40b2d0:	bl	405fd0 <log_assert_failed_realm@plt>
  40b2d4:	ldr	x0, [sp, #32]
  40b2d8:	ldr	x0, [x0]
  40b2dc:	cmp	x0, #0x0
  40b2e0:	b.ne	40b2ec <do_rotate+0x78>  // b.any
  40b2e4:	mov	w0, #0xffffffea            	// #-22
  40b2e8:	b	40b474 <do_rotate+0x200>
  40b2ec:	ldr	x0, [sp, #40]
  40b2f0:	ldrb	w5, [x0, #440]
  40b2f4:	ldr	x0, [sp, #40]
  40b2f8:	ldr	x1, [x0, #448]
  40b2fc:	ldr	x0, [sp, #40]
  40b300:	ldr	x0, [x0, #576]
  40b304:	mov	x4, x0
  40b308:	ldrb	w3, [sp, #23]
  40b30c:	mov	x2, x1
  40b310:	mov	w1, w5
  40b314:	ldr	x0, [sp, #32]
  40b318:	bl	405ed0 <journal_file_rotate@plt>
  40b31c:	str	w0, [sp, #52]
  40b320:	ldr	w0, [sp, #52]
  40b324:	cmp	w0, #0x0
  40b328:	b.ge	40b460 <do_rotate+0x1ec>  // b.tcont
  40b32c:	ldr	x0, [sp, #32]
  40b330:	ldr	x0, [x0]
  40b334:	cmp	x0, #0x0
  40b338:	b.eq	40b3d4 <do_rotate+0x160>  // b.none
  40b33c:	mov	w0, #0x3                   	// #3
  40b340:	str	w0, [sp, #68]
  40b344:	ldr	w0, [sp, #52]
  40b348:	str	w0, [sp, #72]
  40b34c:	str	wzr, [sp, #76]
  40b350:	ldr	w0, [sp, #76]
  40b354:	bl	406c30 <log_get_max_level_realm@plt>
  40b358:	mov	w1, w0
  40b35c:	ldr	w0, [sp, #68]
  40b360:	and	w0, w0, #0x7
  40b364:	cmp	w1, w0
  40b368:	b.lt	40b3bc <do_rotate+0x148>  // b.tstop
  40b36c:	ldr	w0, [sp, #76]
  40b370:	lsl	w1, w0, #10
  40b374:	ldr	w0, [sp, #68]
  40b378:	orr	w7, w1, w0
  40b37c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b380:	add	x1, x0, #0xe03
  40b384:	ldr	x0, [sp, #32]
  40b388:	ldr	x0, [x0]
  40b38c:	ldr	x0, [x0, #48]
  40b390:	mov	x6, x0
  40b394:	adrp	x0, 428000 <__func__.11909+0x280>
  40b398:	add	x5, x0, #0x248
  40b39c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b3a0:	add	x4, x0, #0x3d8
  40b3a4:	mov	w3, #0x1ca                 	// #458
  40b3a8:	mov	x2, x1
  40b3ac:	ldr	w1, [sp, #72]
  40b3b0:	mov	w0, w7
  40b3b4:	bl	406590 <log_internal_realm@plt>
  40b3b8:	b	40b474 <do_rotate+0x200>
  40b3bc:	ldr	w0, [sp, #72]
  40b3c0:	cmp	w0, #0x0
  40b3c4:	cneg	w0, w0, lt  // lt = tstop
  40b3c8:	and	w0, w0, #0xff
  40b3cc:	neg	w0, w0
  40b3d0:	b	40b474 <do_rotate+0x200>
  40b3d4:	mov	w0, #0x3                   	// #3
  40b3d8:	str	w0, [sp, #56]
  40b3dc:	ldr	w0, [sp, #52]
  40b3e0:	str	w0, [sp, #60]
  40b3e4:	str	wzr, [sp, #64]
  40b3e8:	ldr	w0, [sp, #64]
  40b3ec:	bl	406c30 <log_get_max_level_realm@plt>
  40b3f0:	mov	w1, w0
  40b3f4:	ldr	w0, [sp, #56]
  40b3f8:	and	w0, w0, #0x7
  40b3fc:	cmp	w1, w0
  40b400:	b.lt	40b448 <do_rotate+0x1d4>  // b.tstop
  40b404:	ldr	w0, [sp, #64]
  40b408:	lsl	w1, w0, #10
  40b40c:	ldr	w0, [sp, #56]
  40b410:	orr	w7, w1, w0
  40b414:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b418:	add	x1, x0, #0xe03
  40b41c:	ldr	x6, [sp, #24]
  40b420:	adrp	x0, 428000 <__func__.11909+0x280>
  40b424:	add	x5, x0, #0x260
  40b428:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b42c:	add	x4, x0, #0x3d8
  40b430:	mov	w3, #0x1cc                 	// #460
  40b434:	mov	x2, x1
  40b438:	ldr	w1, [sp, #60]
  40b43c:	mov	w0, w7
  40b440:	bl	406590 <log_internal_realm@plt>
  40b444:	b	40b474 <do_rotate+0x200>
  40b448:	ldr	w0, [sp, #60]
  40b44c:	cmp	w0, #0x0
  40b450:	cneg	w0, w0, lt  // lt = tstop
  40b454:	and	w0, w0, #0xff
  40b458:	neg	w0, w0
  40b45c:	b	40b474 <do_rotate+0x200>
  40b460:	ldr	x0, [sp, #32]
  40b464:	ldr	x0, [x0]
  40b468:	ldr	w1, [sp, #16]
  40b46c:	bl	40a2d4 <server_add_acls>
  40b470:	ldr	w0, [sp, #52]
  40b474:	ldp	x29, x30, [sp], #80
  40b478:	ret

000000000040b47c <server_process_deferred_closes>:
  40b47c:	stp	x29, x30, [sp, #-64]!
  40b480:	mov	x29, sp
  40b484:	str	x0, [sp, #24]
  40b488:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b48c:	ldr	x0, [x0, #4064]
  40b490:	ldr	x1, [x0]
  40b494:	str	x1, [sp, #56]
  40b498:	mov	x1, #0x0                   	// #0
  40b49c:	mov	w0, #0xfffffffe            	// #-2
  40b4a0:	str	w0, [sp, #40]
  40b4a4:	str	xzr, [sp, #48]
  40b4a8:	b	40b4dc <server_process_deferred_closes+0x60>
  40b4ac:	ldr	x0, [sp, #32]
  40b4b0:	bl	406540 <journal_file_is_offlining@plt>
  40b4b4:	and	w0, w0, #0xff
  40b4b8:	cmp	w0, #0x0
  40b4bc:	b.eq	40b4c4 <server_process_deferred_closes+0x48>  // b.none
  40b4c0:	b	40b4dc <server_process_deferred_closes+0x60>
  40b4c4:	ldr	x0, [sp, #24]
  40b4c8:	ldr	x0, [x0, #576]
  40b4cc:	ldr	x1, [sp, #32]
  40b4d0:	bl	409358 <set_remove>
  40b4d4:	ldr	x0, [sp, #32]
  40b4d8:	bl	406030 <journal_file_close@plt>
  40b4dc:	ldr	x0, [sp, #24]
  40b4e0:	ldr	x0, [x0, #576]
  40b4e4:	add	x2, sp, #0x20
  40b4e8:	add	x1, sp, #0x28
  40b4ec:	bl	406170 <set_iterate@plt>
  40b4f0:	and	w0, w0, #0xff
  40b4f4:	cmp	w0, #0x0
  40b4f8:	b.ne	40b4ac <server_process_deferred_closes+0x30>  // b.any
  40b4fc:	nop
  40b500:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b504:	ldr	x0, [x0, #4064]
  40b508:	ldr	x1, [sp, #56]
  40b50c:	ldr	x0, [x0]
  40b510:	eor	x0, x1, x0
  40b514:	cmp	x0, #0x0
  40b518:	b.eq	40b520 <server_process_deferred_closes+0xa4>  // b.none
  40b51c:	bl	4063e0 <__stack_chk_fail@plt>
  40b520:	ldp	x29, x30, [sp], #64
  40b524:	ret

000000000040b528 <server_vacuum_deferred_closes>:
  40b528:	stp	x29, x30, [sp, #-48]!
  40b52c:	mov	x29, sp
  40b530:	str	x0, [sp, #24]
  40b534:	ldr	x0, [sp, #24]
  40b538:	cmp	x0, #0x0
  40b53c:	cset	w0, eq  // eq = none
  40b540:	and	w0, w0, #0xff
  40b544:	and	x0, x0, #0xff
  40b548:	cmp	x0, #0x0
  40b54c:	b.eq	40b578 <server_vacuum_deferred_closes+0x50>  // b.none
  40b550:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b554:	add	x1, x0, #0xe03
  40b558:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b55c:	add	x4, x0, #0x3e8
  40b560:	mov	w3, #0x1e3                 	// #483
  40b564:	mov	x2, x1
  40b568:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b56c:	add	x1, x0, #0xec8
  40b570:	mov	w0, #0x0                   	// #0
  40b574:	bl	405fd0 <log_assert_failed_realm@plt>
  40b578:	ldr	x0, [sp, #24]
  40b57c:	ldr	x0, [x0, #576]
  40b580:	bl	40937c <set_size>
  40b584:	cmp	w0, #0xfff
  40b588:	b.ls	40b60c <server_vacuum_deferred_closes+0xe4>  // b.plast
  40b58c:	ldr	x0, [sp, #24]
  40b590:	bl	40b47c <server_process_deferred_closes>
  40b594:	b	40b5f4 <server_vacuum_deferred_closes+0xcc>
  40b598:	ldr	x0, [sp, #24]
  40b59c:	ldr	x0, [x0, #576]
  40b5a0:	bl	409398 <set_steal_first>
  40b5a4:	str	x0, [sp, #40]
  40b5a8:	ldr	x0, [sp, #40]
  40b5ac:	cmp	x0, #0x0
  40b5b0:	cset	w0, eq  // eq = none
  40b5b4:	and	w0, w0, #0xff
  40b5b8:	and	x0, x0, #0xff
  40b5bc:	cmp	x0, #0x0
  40b5c0:	b.eq	40b5ec <server_vacuum_deferred_closes+0xc4>  // b.none
  40b5c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b5c8:	add	x1, x0, #0xe03
  40b5cc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b5d0:	add	x4, x0, #0x3e8
  40b5d4:	mov	w3, #0x1f0                 	// #496
  40b5d8:	mov	x2, x1
  40b5dc:	adrp	x0, 428000 <__func__.11909+0x280>
  40b5e0:	add	x1, x0, #0x288
  40b5e4:	mov	w0, #0x0                   	// #0
  40b5e8:	bl	405fd0 <log_assert_failed_realm@plt>
  40b5ec:	ldr	x0, [sp, #40]
  40b5f0:	bl	406030 <journal_file_close@plt>
  40b5f4:	ldr	x0, [sp, #24]
  40b5f8:	ldr	x0, [x0, #576]
  40b5fc:	bl	40937c <set_size>
  40b600:	cmp	w0, #0xfff
  40b604:	b.hi	40b598 <server_vacuum_deferred_closes+0x70>  // b.pmore
  40b608:	b	40b610 <server_vacuum_deferred_closes+0xe8>
  40b60c:	nop
  40b610:	ldp	x29, x30, [sp], #48
  40b614:	ret

000000000040b618 <open_user_journal_directory>:
  40b618:	sub	sp, sp, #0xf0
  40b61c:	stp	x29, x30, [sp, #80]
  40b620:	add	x29, sp, #0x50
  40b624:	str	x19, [sp, #96]
  40b628:	str	x0, [sp, #136]
  40b62c:	str	x1, [sp, #128]
  40b630:	str	x2, [sp, #120]
  40b634:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b638:	ldr	x0, [x0, #4064]
  40b63c:	ldr	x1, [x0]
  40b640:	str	x1, [sp, #232]
  40b644:	mov	x1, #0x0                   	// #0
  40b648:	str	xzr, [sp, #184]
  40b64c:	str	xzr, [sp, #192]
  40b650:	ldr	x0, [sp, #136]
  40b654:	cmp	x0, #0x0
  40b658:	cset	w0, eq  // eq = none
  40b65c:	and	w0, w0, #0xff
  40b660:	and	x0, x0, #0xff
  40b664:	cmp	x0, #0x0
  40b668:	b.eq	40b694 <open_user_journal_directory+0x7c>  // b.none
  40b66c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b670:	add	x1, x0, #0xe03
  40b674:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b678:	add	x4, x0, #0x408
  40b67c:	mov	w3, #0x1fb                 	// #507
  40b680:	mov	x2, x1
  40b684:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b688:	add	x1, x0, #0xec8
  40b68c:	mov	w0, #0x0                   	// #0
  40b690:	bl	405fd0 <log_assert_failed_realm@plt>
  40b694:	add	x0, sp, #0xd8
  40b698:	bl	406510 <sd_id128_get_machine@plt>
  40b69c:	str	w0, [sp, #156]
  40b6a0:	ldr	w0, [sp, #156]
  40b6a4:	cmp	w0, #0x0
  40b6a8:	b.ge	40b738 <open_user_journal_directory+0x120>  // b.tcont
  40b6ac:	mov	w0, #0x3                   	// #3
  40b6b0:	str	w0, [sp, #172]
  40b6b4:	ldr	w0, [sp, #156]
  40b6b8:	str	w0, [sp, #176]
  40b6bc:	str	wzr, [sp, #180]
  40b6c0:	ldr	w0, [sp, #180]
  40b6c4:	bl	406c30 <log_get_max_level_realm@plt>
  40b6c8:	mov	w1, w0
  40b6cc:	ldr	w0, [sp, #172]
  40b6d0:	and	w0, w0, #0x7
  40b6d4:	cmp	w1, w0
  40b6d8:	b.lt	40b720 <open_user_journal_directory+0x108>  // b.tstop
  40b6dc:	ldr	w0, [sp, #180]
  40b6e0:	lsl	w1, w0, #10
  40b6e4:	ldr	w0, [sp, #172]
  40b6e8:	orr	w6, w1, w0
  40b6ec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b6f0:	add	x1, x0, #0xe03
  40b6f4:	adrp	x0, 428000 <__func__.11909+0x280>
  40b6f8:	add	x5, x0, #0x2b0
  40b6fc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b700:	add	x4, x0, #0x428
  40b704:	mov	w3, #0x1ff                 	// #511
  40b708:	mov	x2, x1
  40b70c:	ldr	w1, [sp, #176]
  40b710:	mov	w0, w6
  40b714:	bl	406590 <log_internal_realm@plt>
  40b718:	mov	w19, w0
  40b71c:	b	40b914 <open_user_journal_directory+0x2fc>
  40b720:	ldr	w0, [sp, #176]
  40b724:	cmp	w0, #0x0
  40b728:	cneg	w0, w0, lt  // lt = tstop
  40b72c:	and	w0, w0, #0xff
  40b730:	neg	w19, w0
  40b734:	b	40b914 <open_user_journal_directory+0x2fc>
  40b738:	ldrb	w0, [sp, #216]
  40b73c:	mov	w11, w0
  40b740:	ldrb	w0, [sp, #217]
  40b744:	mov	w12, w0
  40b748:	ldrb	w0, [sp, #218]
  40b74c:	mov	w13, w0
  40b750:	ldrb	w0, [sp, #219]
  40b754:	mov	w14, w0
  40b758:	ldrb	w0, [sp, #220]
  40b75c:	mov	w15, w0
  40b760:	ldrb	w0, [sp, #221]
  40b764:	mov	w16, w0
  40b768:	ldrb	w0, [sp, #222]
  40b76c:	ldrb	w1, [sp, #223]
  40b770:	ldrb	w2, [sp, #224]
  40b774:	ldrb	w3, [sp, #225]
  40b778:	ldrb	w4, [sp, #226]
  40b77c:	ldrb	w5, [sp, #227]
  40b780:	ldrb	w6, [sp, #228]
  40b784:	ldrb	w7, [sp, #229]
  40b788:	ldrb	w8, [sp, #230]
  40b78c:	mov	w9, w8
  40b790:	ldrb	w8, [sp, #231]
  40b794:	mov	w10, w8
  40b798:	add	x8, sp, #0xc0
  40b79c:	str	w10, [sp, #72]
  40b7a0:	str	w9, [sp, #64]
  40b7a4:	str	w7, [sp, #56]
  40b7a8:	str	w6, [sp, #48]
  40b7ac:	str	w5, [sp, #40]
  40b7b0:	str	w4, [sp, #32]
  40b7b4:	str	w3, [sp, #24]
  40b7b8:	str	w2, [sp, #16]
  40b7bc:	str	w1, [sp, #8]
  40b7c0:	str	w0, [sp]
  40b7c4:	mov	w7, w16
  40b7c8:	mov	w6, w15
  40b7cc:	mov	w5, w14
  40b7d0:	mov	w4, w13
  40b7d4:	mov	w3, w12
  40b7d8:	mov	w2, w11
  40b7dc:	adrp	x0, 428000 <__func__.11909+0x280>
  40b7e0:	add	x1, x0, #0x2e0
  40b7e4:	mov	x0, x8
  40b7e8:	bl	406830 <asprintf@plt>
  40b7ec:	cmp	w0, #0x0
  40b7f0:	b.ge	40b818 <open_user_journal_directory+0x200>  // b.tcont
  40b7f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b7f8:	add	x1, x0, #0xe03
  40b7fc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b800:	add	x3, x0, #0x428
  40b804:	mov	w2, #0x202                 	// #514
  40b808:	mov	w0, #0x0                   	// #0
  40b80c:	bl	406b70 <log_oom_internal@plt>
  40b810:	mov	w19, w0
  40b814:	b	40b914 <open_user_journal_directory+0x2fc>
  40b818:	ldr	x0, [sp, #192]
  40b81c:	bl	406730 <opendir@plt>
  40b820:	str	x0, [sp, #184]
  40b824:	ldr	x0, [sp, #184]
  40b828:	cmp	x0, #0x0
  40b82c:	b.ne	40b8c8 <open_user_journal_directory+0x2b0>  // b.any
  40b830:	mov	w0, #0x3                   	// #3
  40b834:	str	w0, [sp, #160]
  40b838:	bl	4062e0 <__errno_location@plt>
  40b83c:	ldr	w0, [x0]
  40b840:	str	w0, [sp, #164]
  40b844:	str	wzr, [sp, #168]
  40b848:	ldr	w0, [sp, #168]
  40b84c:	bl	406c30 <log_get_max_level_realm@plt>
  40b850:	mov	w1, w0
  40b854:	ldr	w0, [sp, #160]
  40b858:	and	w0, w0, #0x7
  40b85c:	cmp	w1, w0
  40b860:	b.lt	40b8b0 <open_user_journal_directory+0x298>  // b.tstop
  40b864:	ldr	w0, [sp, #168]
  40b868:	lsl	w1, w0, #10
  40b86c:	ldr	w0, [sp, #160]
  40b870:	orr	w7, w1, w0
  40b874:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b878:	add	x1, x0, #0xe03
  40b87c:	ldr	x0, [sp, #192]
  40b880:	mov	x6, x0
  40b884:	adrp	x0, 428000 <__func__.11909+0x280>
  40b888:	add	x5, x0, #0x338
  40b88c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b890:	add	x4, x0, #0x428
  40b894:	mov	w3, #0x206                 	// #518
  40b898:	mov	x2, x1
  40b89c:	ldr	w1, [sp, #164]
  40b8a0:	mov	w0, w7
  40b8a4:	bl	406590 <log_internal_realm@plt>
  40b8a8:	mov	w19, w0
  40b8ac:	b	40b914 <open_user_journal_directory+0x2fc>
  40b8b0:	ldr	w0, [sp, #164]
  40b8b4:	cmp	w0, #0x0
  40b8b8:	cneg	w0, w0, lt  // lt = tstop
  40b8bc:	and	w0, w0, #0xff
  40b8c0:	neg	w19, w0
  40b8c4:	b	40b914 <open_user_journal_directory+0x2fc>
  40b8c8:	ldr	x0, [sp, #128]
  40b8cc:	cmp	x0, #0x0
  40b8d0:	b.eq	40b8ec <open_user_journal_directory+0x2d4>  // b.none
  40b8d4:	ldr	x0, [sp, #184]
  40b8d8:	str	x0, [sp, #200]
  40b8dc:	str	xzr, [sp, #184]
  40b8e0:	ldr	x1, [sp, #200]
  40b8e4:	ldr	x0, [sp, #128]
  40b8e8:	str	x1, [x0]
  40b8ec:	ldr	x0, [sp, #120]
  40b8f0:	cmp	x0, #0x0
  40b8f4:	b.eq	40b910 <open_user_journal_directory+0x2f8>  // b.none
  40b8f8:	ldr	x0, [sp, #192]
  40b8fc:	str	x0, [sp, #208]
  40b900:	str	xzr, [sp, #192]
  40b904:	ldr	x1, [sp, #208]
  40b908:	ldr	x0, [sp, #120]
  40b90c:	str	x1, [x0]
  40b910:	mov	w19, #0x0                   	// #0
  40b914:	add	x0, sp, #0xc0
  40b918:	bl	4090f4 <freep>
  40b91c:	add	x0, sp, #0xb8
  40b920:	bl	409470 <closedirp>
  40b924:	mov	w1, w19
  40b928:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b92c:	ldr	x0, [x0, #4064]
  40b930:	ldr	x2, [sp, #232]
  40b934:	ldr	x0, [x0]
  40b938:	eor	x0, x2, x0
  40b93c:	cmp	x0, #0x0
  40b940:	b.eq	40b948 <open_user_journal_directory+0x330>  // b.none
  40b944:	bl	4063e0 <__stack_chk_fail@plt>
  40b948:	mov	w0, w1
  40b94c:	ldr	x19, [sp, #96]
  40b950:	ldp	x29, x30, [sp, #80]
  40b954:	add	sp, sp, #0xf0
  40b958:	ret

000000000040b95c <server_rotate>:
  40b95c:	sub	sp, sp, #0x130
  40b960:	stp	x29, x30, [sp, #32]
  40b964:	add	x29, sp, #0x20
  40b968:	str	x19, [sp, #48]
  40b96c:	str	x0, [sp, #72]
  40b970:	adrp	x0, 441000 <wordlist.9471+0x208>
  40b974:	ldr	x0, [x0, #4064]
  40b978:	ldr	x1, [x0]
  40b97c:	str	x1, [sp, #296]
  40b980:	mov	x1, #0x0                   	// #0
  40b984:	str	xzr, [sp, #208]
  40b988:	str	xzr, [sp, #216]
  40b98c:	mov	w0, #0x7                   	// #7
  40b990:	str	w0, [sp, #104]
  40b994:	str	wzr, [sp, #108]
  40b998:	str	wzr, [sp, #112]
  40b99c:	ldr	w0, [sp, #112]
  40b9a0:	bl	406c30 <log_get_max_level_realm@plt>
  40b9a4:	mov	w1, w0
  40b9a8:	ldr	w0, [sp, #104]
  40b9ac:	and	w0, w0, #0x7
  40b9b0:	cmp	w1, w0
  40b9b4:	b.lt	40b9f8 <server_rotate+0x9c>  // b.tstop
  40b9b8:	ldr	w0, [sp, #112]
  40b9bc:	lsl	w1, w0, #10
  40b9c0:	ldr	w0, [sp, #104]
  40b9c4:	orr	w6, w1, w0
  40b9c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40b9cc:	add	x1, x0, #0xe03
  40b9d0:	adrp	x0, 428000 <__func__.11909+0x280>
  40b9d4:	add	x5, x0, #0x368
  40b9d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40b9dc:	add	x4, x0, #0x448
  40b9e0:	mov	w3, #0x218                 	// #536
  40b9e4:	mov	x2, x1
  40b9e8:	ldr	w1, [sp, #108]
  40b9ec:	mov	w0, w6
  40b9f0:	bl	406590 <log_internal_realm@plt>
  40b9f4:	b	40ba00 <server_rotate+0xa4>
  40b9f8:	ldr	w0, [sp, #108]
  40b9fc:	cmp	w0, #0x0
  40ba00:	ldr	x0, [sp, #72]
  40ba04:	add	x1, x0, #0x98
  40ba08:	mov	w4, #0x0                   	// #0
  40ba0c:	mov	w3, #0x0                   	// #0
  40ba10:	adrp	x0, 428000 <__func__.11909+0x280>
  40ba14:	add	x2, x0, #0x378
  40ba18:	ldr	x0, [sp, #72]
  40ba1c:	bl	40b274 <do_rotate>
  40ba20:	ldr	x0, [sp, #72]
  40ba24:	add	x1, x0, #0xa0
  40ba28:	ldr	x0, [sp, #72]
  40ba2c:	ldrb	w0, [x0, #456]
  40ba30:	mov	w4, #0x0                   	// #0
  40ba34:	mov	w3, w0
  40ba38:	adrp	x0, 428000 <__func__.11909+0x280>
  40ba3c:	add	x2, x0, #0x380
  40ba40:	ldr	x0, [sp, #72]
  40ba44:	bl	40b274 <do_rotate>
  40ba48:	mov	w0, #0xfffffffe            	// #-2
  40ba4c:	str	w0, [sp, #280]
  40ba50:	str	xzr, [sp, #288]
  40ba54:	b	40bac8 <server_rotate+0x16c>
  40ba58:	ldr	x0, [sp, #72]
  40ba5c:	ldrb	w2, [x0, #456]
  40ba60:	ldr	x0, [sp, #232]
  40ba64:	sub	w0, w0, #0x1
  40ba68:	add	x1, sp, #0xe0
  40ba6c:	mov	w4, w0
  40ba70:	mov	w3, w2
  40ba74:	adrp	x0, 428000 <__func__.11909+0x280>
  40ba78:	add	x2, x0, #0x388
  40ba7c:	ldr	x0, [sp, #72]
  40ba80:	bl	40b274 <do_rotate>
  40ba84:	str	w0, [sp, #116]
  40ba88:	ldr	w0, [sp, #116]
  40ba8c:	cmp	w0, #0x0
  40ba90:	b.lt	40baac <server_rotate+0x150>  // b.tstop
  40ba94:	ldr	x0, [sp, #72]
  40ba98:	ldr	x0, [x0, #168]
  40ba9c:	ldr	x1, [sp, #232]
  40baa0:	ldr	x2, [sp, #224]
  40baa4:	bl	409220 <ordered_hashmap_replace>
  40baa8:	b	40bac8 <server_rotate+0x16c>
  40baac:	ldr	x0, [sp, #224]
  40bab0:	cmp	x0, #0x0
  40bab4:	b.ne	40bac8 <server_rotate+0x16c>  // b.any
  40bab8:	ldr	x0, [sp, #72]
  40babc:	ldr	x0, [x0, #168]
  40bac0:	ldr	x1, [sp, #232]
  40bac4:	bl	409298 <ordered_hashmap_remove>
  40bac8:	ldr	x0, [sp, #72]
  40bacc:	ldr	x0, [x0, #168]
  40bad0:	add	x3, sp, #0xe8
  40bad4:	add	x2, sp, #0xe0
  40bad8:	add	x1, sp, #0x118
  40badc:	bl	4092d8 <ordered_hashmap_iterate>
  40bae0:	and	w0, w0, #0xff
  40bae4:	cmp	w0, #0x0
  40bae8:	b.ne	40ba58 <server_rotate+0xfc>  // b.any
  40baec:	ldr	x0, [sp, #72]
  40baf0:	ldr	x0, [x0, #152]
  40baf4:	cmp	x0, #0x0
  40baf8:	b.ne	40c278 <server_rotate+0x91c>  // b.any
  40bafc:	add	x1, sp, #0xd0
  40bb00:	add	x0, sp, #0xd8
  40bb04:	mov	x2, x1
  40bb08:	mov	x1, x0
  40bb0c:	ldr	x0, [sp, #72]
  40bb10:	bl	40b618 <open_user_journal_directory>
  40bb14:	cmp	w0, #0x0
  40bb18:	b.lt	40c278 <server_rotate+0x91c>  // b.tstop
  40bb1c:	bl	4062e0 <__errno_location@plt>
  40bb20:	str	wzr, [x0]
  40bb24:	ldr	x0, [sp, #216]
  40bb28:	bl	406000 <readdir64@plt>
  40bb2c:	str	x0, [sp, #256]
  40bb30:	ldr	x0, [sp, #256]
  40bb34:	cmp	x0, #0x0
  40bb38:	b.ne	40bbd4 <server_rotate+0x278>  // b.any
  40bb3c:	bl	4062e0 <__errno_location@plt>
  40bb40:	ldr	w0, [x0]
  40bb44:	cmp	w0, #0x0
  40bb48:	b.le	40c274 <server_rotate+0x918>
  40bb4c:	mov	w0, #0x4                   	// #4
  40bb50:	str	w0, [sp, #196]
  40bb54:	bl	4062e0 <__errno_location@plt>
  40bb58:	ldr	w0, [x0]
  40bb5c:	str	w0, [sp, #200]
  40bb60:	str	wzr, [sp, #204]
  40bb64:	ldr	w0, [sp, #204]
  40bb68:	bl	406c30 <log_get_max_level_realm@plt>
  40bb6c:	mov	w1, w0
  40bb70:	ldr	w0, [sp, #196]
  40bb74:	and	w0, w0, #0x7
  40bb78:	cmp	w1, w0
  40bb7c:	b.lt	40bbc8 <server_rotate+0x26c>  // b.tstop
  40bb80:	ldr	w0, [sp, #204]
  40bb84:	lsl	w1, w0, #10
  40bb88:	ldr	w0, [sp, #196]
  40bb8c:	orr	w7, w1, w0
  40bb90:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bb94:	add	x1, x0, #0xe03
  40bb98:	ldr	x0, [sp, #208]
  40bb9c:	mov	x6, x0
  40bba0:	adrp	x0, 428000 <__func__.11909+0x280>
  40bba4:	add	x5, x0, #0x390
  40bba8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bbac:	add	x4, x0, #0x448
  40bbb0:	mov	w3, #0x22f                 	// #559
  40bbb4:	mov	x2, x1
  40bbb8:	ldr	w1, [sp, #200]
  40bbbc:	mov	w0, w7
  40bbc0:	bl	406590 <log_internal_realm@plt>
  40bbc4:	b	40c274 <server_rotate+0x918>
  40bbc8:	ldr	w0, [sp, #200]
  40bbcc:	cmp	w0, #0x0
  40bbd0:	b	40c274 <server_rotate+0x918>
  40bbd4:	ldr	x0, [sp, #256]
  40bbd8:	add	x0, x0, #0x13
  40bbdc:	bl	405da0 <hidden_or_backup_file@plt>
  40bbe0:	and	w0, w0, #0xff
  40bbe4:	cmp	w0, #0x0
  40bbe8:	b.ne	40c258 <server_rotate+0x8fc>  // b.any
  40bbec:	str	xzr, [sp, #240]
  40bbf0:	str	xzr, [sp, #248]
  40bbf4:	mov	w0, #0xffffffff            	// #-1
  40bbf8:	str	w0, [sp, #96]
  40bbfc:	ldr	x0, [sp, #256]
  40bc00:	add	x2, x0, #0x13
  40bc04:	adrp	x0, 428000 <__func__.11909+0x280>
  40bc08:	add	x1, x0, #0x3b8
  40bc0c:	mov	x0, x2
  40bc10:	bl	4093fc <startswith>
  40bc14:	str	x0, [sp, #264]
  40bc18:	ldr	x0, [sp, #264]
  40bc1c:	cmp	x0, #0x0
  40bc20:	b.ne	40bc2c <server_rotate+0x2d0>  // b.any
  40bc24:	mov	w19, #0x0                   	// #0
  40bc28:	b	40c1dc <server_rotate+0x880>
  40bc2c:	ldr	x0, [sp, #256]
  40bc30:	add	x2, x0, #0x13
  40bc34:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bc38:	add	x1, x0, #0xe80
  40bc3c:	mov	x0, x2
  40bc40:	bl	406670 <endswith@plt>
  40bc44:	str	x0, [sp, #272]
  40bc48:	ldr	x0, [sp, #272]
  40bc4c:	cmp	x0, #0x0
  40bc50:	b.ne	40bc5c <server_rotate+0x300>  // b.any
  40bc54:	mov	w19, #0x0                   	// #0
  40bc58:	b	40c1dc <server_rotate+0x880>
  40bc5c:	ldr	x1, [sp, #272]
  40bc60:	ldr	x0, [sp, #264]
  40bc64:	sub	x0, x1, x0
  40bc68:	mov	x1, x0
  40bc6c:	ldr	x0, [sp, #264]
  40bc70:	bl	4063a0 <strndup@plt>
  40bc74:	str	x0, [sp, #240]
  40bc78:	ldr	x0, [sp, #240]
  40bc7c:	cmp	x0, #0x0
  40bc80:	b.ne	40bca8 <server_rotate+0x34c>  // b.any
  40bc84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bc88:	add	x1, x0, #0xe03
  40bc8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bc90:	add	x3, x0, #0x448
  40bc94:	mov	w2, #0x23e                 	// #574
  40bc98:	mov	w0, #0x0                   	// #0
  40bc9c:	bl	406b70 <log_oom_internal@plt>
  40bca0:	mov	w19, #0x1                   	// #1
  40bca4:	b	40c1dc <server_rotate+0x880>
  40bca8:	ldr	x0, [sp, #240]
  40bcac:	add	x1, sp, #0x64
  40bcb0:	bl	4066b0 <parse_uid@plt>
  40bcb4:	str	w0, [sp, #116]
  40bcb8:	ldr	w0, [sp, #116]
  40bcbc:	cmp	w0, #0x0
  40bcc0:	b.ge	40bd50 <server_rotate+0x3f4>  // b.tcont
  40bcc4:	mov	w0, #0x7                   	// #7
  40bcc8:	str	w0, [sp, #184]
  40bccc:	ldr	w0, [sp, #116]
  40bcd0:	str	w0, [sp, #188]
  40bcd4:	str	wzr, [sp, #192]
  40bcd8:	ldr	w0, [sp, #192]
  40bcdc:	bl	406c30 <log_get_max_level_realm@plt>
  40bce0:	mov	w1, w0
  40bce4:	ldr	w0, [sp, #184]
  40bce8:	and	w0, w0, #0x7
  40bcec:	cmp	w1, w0
  40bcf0:	b.lt	40bd40 <server_rotate+0x3e4>  // b.tstop
  40bcf4:	ldr	w0, [sp, #192]
  40bcf8:	lsl	w1, w0, #10
  40bcfc:	ldr	w0, [sp, #184]
  40bd00:	orr	w7, w1, w0
  40bd04:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bd08:	add	x1, x0, #0xe03
  40bd0c:	ldr	x0, [sp, #256]
  40bd10:	add	x0, x0, #0x13
  40bd14:	mov	x6, x0
  40bd18:	adrp	x0, 428000 <__func__.11909+0x280>
  40bd1c:	add	x5, x0, #0x3c0
  40bd20:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bd24:	add	x4, x0, #0x448
  40bd28:	mov	w3, #0x244                 	// #580
  40bd2c:	mov	x2, x1
  40bd30:	ldr	w1, [sp, #188]
  40bd34:	mov	w0, w7
  40bd38:	bl	406590 <log_internal_realm@plt>
  40bd3c:	b	40bd48 <server_rotate+0x3ec>
  40bd40:	ldr	w0, [sp, #188]
  40bd44:	cmp	w0, #0x0
  40bd48:	mov	w19, #0x0                   	// #0
  40bd4c:	b	40c1dc <server_rotate+0x880>
  40bd50:	ldr	x0, [sp, #72]
  40bd54:	ldr	x2, [x0, #168]
  40bd58:	ldr	w0, [sp, #100]
  40bd5c:	mov	w0, w0
  40bd60:	add	x0, x0, #0x1
  40bd64:	mov	x1, x0
  40bd68:	mov	x0, x2
  40bd6c:	bl	409270 <ordered_hashmap_contains>
  40bd70:	and	w0, w0, #0xff
  40bd74:	cmp	w0, #0x0
  40bd78:	b.eq	40bd84 <server_rotate+0x428>  // b.none
  40bd7c:	mov	w19, #0x0                   	// #0
  40bd80:	b	40c1dc <server_rotate+0x880>
  40bd84:	ldr	x3, [sp, #208]
  40bd88:	ldr	x0, [sp, #256]
  40bd8c:	add	x0, x0, #0x13
  40bd90:	mov	x2, #0x0                   	// #0
  40bd94:	mov	x1, x0
  40bd98:	mov	x0, x3
  40bd9c:	bl	405f10 <strjoin_real@plt>
  40bda0:	str	x0, [sp, #248]
  40bda4:	ldr	x0, [sp, #248]
  40bda8:	cmp	x0, #0x0
  40bdac:	b.ne	40bdd4 <server_rotate+0x478>  // b.any
  40bdb0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bdb4:	add	x1, x0, #0xe03
  40bdb8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bdbc:	add	x3, x0, #0x448
  40bdc0:	mov	w2, #0x24e                 	// #590
  40bdc4:	mov	w0, #0x0                   	// #0
  40bdc8:	bl	406b70 <log_oom_internal@plt>
  40bdcc:	mov	w19, #0x1                   	// #1
  40bdd0:	b	40c1dc <server_rotate+0x880>
  40bdd4:	ldr	x0, [sp, #216]
  40bdd8:	bl	405fa0 <dirfd@plt>
  40bddc:	mov	w3, w0
  40bde0:	ldr	x0, [sp, #256]
  40bde4:	add	x0, x0, #0x13
  40bde8:	mov	w2, #0x8902                	// #35074
  40bdec:	movk	w2, #0x8, lsl #16
  40bdf0:	mov	x1, x0
  40bdf4:	mov	w0, w3
  40bdf8:	bl	405b60 <openat64@plt>
  40bdfc:	str	w0, [sp, #96]
  40be00:	ldr	w0, [sp, #96]
  40be04:	cmp	w0, #0x0
  40be08:	b.ge	40bed4 <server_rotate+0x578>  // b.tcont
  40be0c:	strb	wzr, [sp, #95]
  40be10:	bl	4062e0 <__errno_location@plt>
  40be14:	ldr	w0, [x0]
  40be18:	cmp	w0, #0x2
  40be1c:	b.eq	40be28 <server_rotate+0x4cc>  // b.none
  40be20:	cmp	w0, #0x28
  40be24:	b.ne	40be30 <server_rotate+0x4d4>  // b.any
  40be28:	mov	w0, #0x1                   	// #1
  40be2c:	strb	w0, [sp, #95]
  40be30:	nop
  40be34:	ldrb	w0, [sp, #95]
  40be38:	cmp	w0, #0x0
  40be3c:	b.eq	40be48 <server_rotate+0x4ec>  // b.none
  40be40:	mov	w0, #0x7                   	// #7
  40be44:	b	40be4c <server_rotate+0x4f0>
  40be48:	mov	w0, #0x4                   	// #4
  40be4c:	str	w0, [sp, #172]
  40be50:	bl	4062e0 <__errno_location@plt>
  40be54:	ldr	w0, [x0]
  40be58:	str	w0, [sp, #176]
  40be5c:	str	wzr, [sp, #180]
  40be60:	ldr	w0, [sp, #180]
  40be64:	bl	406c30 <log_get_max_level_realm@plt>
  40be68:	mov	w1, w0
  40be6c:	ldr	w0, [sp, #172]
  40be70:	and	w0, w0, #0x7
  40be74:	cmp	w1, w0
  40be78:	b.lt	40bec4 <server_rotate+0x568>  // b.tstop
  40be7c:	ldr	w0, [sp, #180]
  40be80:	lsl	w1, w0, #10
  40be84:	ldr	w0, [sp, #172]
  40be88:	orr	w7, w1, w0
  40be8c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40be90:	add	x1, x0, #0xe03
  40be94:	ldr	x0, [sp, #248]
  40be98:	mov	x6, x0
  40be9c:	adrp	x0, 428000 <__func__.11909+0x280>
  40bea0:	add	x5, x0, #0x3f8
  40bea4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bea8:	add	x4, x0, #0x448
  40beac:	mov	w3, #0x254                 	// #596
  40beb0:	mov	x2, x1
  40beb4:	ldr	w1, [sp, #176]
  40beb8:	mov	w0, w7
  40bebc:	bl	406590 <log_internal_realm@plt>
  40bec0:	b	40becc <server_rotate+0x570>
  40bec4:	ldr	w0, [sp, #176]
  40bec8:	cmp	w0, #0x0
  40becc:	mov	w19, #0x0                   	// #0
  40bed0:	b	40c1dc <server_rotate+0x880>
  40bed4:	ldr	x0, [sp, #72]
  40bed8:	bl	40b528 <server_vacuum_deferred_closes>
  40bedc:	ldr	w8, [sp, #96]
  40bee0:	ldr	x9, [sp, #248]
  40bee4:	ldr	x0, [sp, #72]
  40bee8:	ldrb	w10, [x0, #440]
  40beec:	ldr	x0, [sp, #72]
  40bef0:	ldr	x3, [x0, #448]
  40bef4:	ldr	x0, [sp, #72]
  40bef8:	ldrb	w5, [x0, #456]
  40befc:	ldr	x0, [sp, #72]
  40bf00:	add	x4, x0, #0x160
  40bf04:	ldr	x0, [sp, #72]
  40bf08:	ldr	x0, [x0, #568]
  40bf0c:	ldr	x1, [sp, #72]
  40bf10:	ldr	x1, [x1, #576]
  40bf14:	add	x2, sp, #0xe0
  40bf18:	str	x2, [sp, #24]
  40bf1c:	str	xzr, [sp, #16]
  40bf20:	str	x1, [sp, #8]
  40bf24:	str	x0, [sp]
  40bf28:	mov	x7, x4
  40bf2c:	mov	w6, w5
  40bf30:	mov	x5, x3
  40bf34:	mov	w4, w10
  40bf38:	mov	w3, #0x1a0                 	// #416
  40bf3c:	mov	w2, #0x2                   	// #2
  40bf40:	mov	x1, x9
  40bf44:	mov	w0, w8
  40bf48:	bl	405f00 <journal_file_open@plt>
  40bf4c:	str	w0, [sp, #116]
  40bf50:	ldr	w0, [sp, #116]
  40bf54:	cmp	w0, #0x0
  40bf58:	b.ge	40c114 <server_rotate+0x7b8>  // b.tcont
  40bf5c:	mov	w0, #0x4                   	// #4
  40bf60:	str	w0, [sp, #136]
  40bf64:	ldr	w0, [sp, #116]
  40bf68:	str	w0, [sp, #140]
  40bf6c:	str	wzr, [sp, #144]
  40bf70:	ldr	w0, [sp, #144]
  40bf74:	bl	406c30 <log_get_max_level_realm@plt>
  40bf78:	mov	w1, w0
  40bf7c:	ldr	w0, [sp, #136]
  40bf80:	and	w0, w0, #0x7
  40bf84:	cmp	w1, w0
  40bf88:	b.lt	40bfd4 <server_rotate+0x678>  // b.tstop
  40bf8c:	ldr	w0, [sp, #144]
  40bf90:	lsl	w1, w0, #10
  40bf94:	ldr	w0, [sp, #136]
  40bf98:	orr	w7, w1, w0
  40bf9c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40bfa0:	add	x1, x0, #0xe03
  40bfa4:	ldr	x0, [sp, #248]
  40bfa8:	mov	x6, x0
  40bfac:	adrp	x0, 428000 <__func__.11909+0x280>
  40bfb0:	add	x5, x0, #0x430
  40bfb4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40bfb8:	add	x4, x0, #0x448
  40bfbc:	mov	w3, #0x26a                 	// #618
  40bfc0:	mov	x2, x1
  40bfc4:	ldr	w1, [sp, #140]
  40bfc8:	mov	w0, w7
  40bfcc:	bl	406590 <log_internal_realm@plt>
  40bfd0:	b	40bfdc <server_rotate+0x680>
  40bfd4:	ldr	w0, [sp, #140]
  40bfd8:	cmp	w0, #0x0
  40bfdc:	ldr	x0, [sp, #216]
  40bfe0:	bl	405fa0 <dirfd@plt>
  40bfe4:	mov	w2, w0
  40bfe8:	ldr	x0, [sp, #256]
  40bfec:	add	x0, x0, #0x13
  40bff0:	mov	x1, x0
  40bff4:	mov	w0, w2
  40bff8:	bl	406490 <journal_file_dispose@plt>
  40bffc:	str	w0, [sp, #116]
  40c000:	ldr	w0, [sp, #116]
  40c004:	cmp	w0, #0x0
  40c008:	b.ge	40c090 <server_rotate+0x734>  // b.tcont
  40c00c:	mov	w0, #0x4                   	// #4
  40c010:	str	w0, [sp, #160]
  40c014:	ldr	w0, [sp, #116]
  40c018:	str	w0, [sp, #164]
  40c01c:	str	wzr, [sp, #168]
  40c020:	ldr	w0, [sp, #168]
  40c024:	bl	406c30 <log_get_max_level_realm@plt>
  40c028:	mov	w1, w0
  40c02c:	ldr	w0, [sp, #160]
  40c030:	and	w0, w0, #0x7
  40c034:	cmp	w1, w0
  40c038:	b.lt	40c084 <server_rotate+0x728>  // b.tstop
  40c03c:	ldr	w0, [sp, #168]
  40c040:	lsl	w1, w0, #10
  40c044:	ldr	w0, [sp, #160]
  40c048:	orr	w7, w1, w0
  40c04c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c050:	add	x1, x0, #0xe03
  40c054:	ldr	x0, [sp, #248]
  40c058:	mov	x6, x0
  40c05c:	adrp	x0, 428000 <__func__.11909+0x280>
  40c060:	add	x5, x0, #0x488
  40c064:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c068:	add	x4, x0, #0x448
  40c06c:	mov	w3, #0x26e                 	// #622
  40c070:	mov	x2, x1
  40c074:	ldr	w1, [sp, #164]
  40c078:	mov	w0, w7
  40c07c:	bl	406590 <log_internal_realm@plt>
  40c080:	b	40c10c <server_rotate+0x7b0>
  40c084:	ldr	w0, [sp, #164]
  40c088:	cmp	w0, #0x0
  40c08c:	b	40c10c <server_rotate+0x7b0>
  40c090:	mov	w0, #0x7                   	// #7
  40c094:	str	w0, [sp, #148]
  40c098:	str	wzr, [sp, #152]
  40c09c:	str	wzr, [sp, #156]
  40c0a0:	ldr	w0, [sp, #156]
  40c0a4:	bl	406c30 <log_get_max_level_realm@plt>
  40c0a8:	mov	w1, w0
  40c0ac:	ldr	w0, [sp, #148]
  40c0b0:	and	w0, w0, #0x7
  40c0b4:	cmp	w1, w0
  40c0b8:	b.lt	40c104 <server_rotate+0x7a8>  // b.tstop
  40c0bc:	ldr	w0, [sp, #156]
  40c0c0:	lsl	w1, w0, #10
  40c0c4:	ldr	w0, [sp, #148]
  40c0c8:	orr	w7, w1, w0
  40c0cc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c0d0:	add	x1, x0, #0xe03
  40c0d4:	ldr	x0, [sp, #248]
  40c0d8:	mov	x6, x0
  40c0dc:	adrp	x0, 428000 <__func__.11909+0x280>
  40c0e0:	add	x5, x0, #0x4b8
  40c0e4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c0e8:	add	x4, x0, #0x448
  40c0ec:	mov	w3, #0x270                 	// #624
  40c0f0:	mov	x2, x1
  40c0f4:	ldr	w1, [sp, #152]
  40c0f8:	mov	w0, w7
  40c0fc:	bl	406590 <log_internal_realm@plt>
  40c100:	b	40c10c <server_rotate+0x7b0>
  40c104:	ldr	w0, [sp, #152]
  40c108:	cmp	w0, #0x0
  40c10c:	mov	w19, #0x0                   	// #0
  40c110:	b	40c1dc <server_rotate+0x880>
  40c114:	ldr	w0, [sp, #96]
  40c118:	str	w0, [sp, #120]
  40c11c:	mov	w0, #0xffffffff            	// #-1
  40c120:	str	w0, [sp, #96]
  40c124:	ldr	x0, [sp, #224]
  40c128:	bl	405be0 <journal_file_archive@plt>
  40c12c:	str	w0, [sp, #116]
  40c130:	ldr	w0, [sp, #116]
  40c134:	cmp	w0, #0x0
  40c138:	b.ge	40c1bc <server_rotate+0x860>  // b.tcont
  40c13c:	mov	w0, #0x7                   	// #7
  40c140:	str	w0, [sp, #124]
  40c144:	ldr	w0, [sp, #116]
  40c148:	str	w0, [sp, #128]
  40c14c:	str	wzr, [sp, #132]
  40c150:	ldr	w0, [sp, #132]
  40c154:	bl	406c30 <log_get_max_level_realm@plt>
  40c158:	mov	w1, w0
  40c15c:	ldr	w0, [sp, #124]
  40c160:	and	w0, w0, #0x7
  40c164:	cmp	w1, w0
  40c168:	b.lt	40c1b4 <server_rotate+0x858>  // b.tstop
  40c16c:	ldr	w0, [sp, #132]
  40c170:	lsl	w1, w0, #10
  40c174:	ldr	w0, [sp, #124]
  40c178:	orr	w7, w1, w0
  40c17c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c180:	add	x1, x0, #0xe03
  40c184:	ldr	x0, [sp, #248]
  40c188:	mov	x6, x0
  40c18c:	adrp	x0, 428000 <__func__.11909+0x280>
  40c190:	add	x5, x0, #0x4e0
  40c194:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c198:	add	x4, x0, #0x448
  40c19c:	mov	w3, #0x279                 	// #633
  40c1a0:	mov	x2, x1
  40c1a4:	ldr	w1, [sp, #128]
  40c1a8:	mov	w0, w7
  40c1ac:	bl	406590 <log_internal_realm@plt>
  40c1b0:	b	40c1bc <server_rotate+0x860>
  40c1b4:	ldr	w0, [sp, #128]
  40c1b8:	cmp	w0, #0x0
  40c1bc:	ldr	x2, [sp, #224]
  40c1c0:	ldr	x0, [sp, #72]
  40c1c4:	ldr	x0, [x0, #576]
  40c1c8:	mov	x1, x0
  40c1cc:	mov	x0, x2
  40c1d0:	bl	4061a0 <journal_initiate_close@plt>
  40c1d4:	str	x0, [sp, #224]
  40c1d8:	mov	w19, #0x2                   	// #2
  40c1dc:	add	x0, sp, #0x60
  40c1e0:	bl	40944c <closep>
  40c1e4:	cmp	w19, #0x0
  40c1e8:	b.eq	40c1f8 <server_rotate+0x89c>  // b.none
  40c1ec:	cmp	w19, #0x2
  40c1f0:	b.ne	40c200 <server_rotate+0x8a4>  // b.any
  40c1f4:	b	40c208 <server_rotate+0x8ac>
  40c1f8:	mov	w19, #0x0                   	// #0
  40c1fc:	b	40c20c <server_rotate+0x8b0>
  40c200:	mov	w19, #0x1                   	// #1
  40c204:	b	40c20c <server_rotate+0x8b0>
  40c208:	mov	w19, #0x2                   	// #2
  40c20c:	add	x0, sp, #0xf8
  40c210:	bl	4090f4 <freep>
  40c214:	cmp	w19, #0x0
  40c218:	b.eq	40c228 <server_rotate+0x8cc>  // b.none
  40c21c:	cmp	w19, #0x2
  40c220:	b.ne	40c230 <server_rotate+0x8d4>  // b.any
  40c224:	b	40c238 <server_rotate+0x8dc>
  40c228:	mov	w19, #0x0                   	// #0
  40c22c:	b	40c23c <server_rotate+0x8e0>
  40c230:	mov	w19, #0x1                   	// #1
  40c234:	b	40c23c <server_rotate+0x8e0>
  40c238:	mov	w19, #0x2                   	// #2
  40c23c:	add	x0, sp, #0xf0
  40c240:	bl	4090f4 <freep>
  40c244:	cmp	w19, #0x0
  40c248:	b.eq	40c25c <server_rotate+0x900>  // b.none
  40c24c:	cmp	w19, #0x2
  40c250:	b.ne	40c278 <server_rotate+0x91c>  // b.any
  40c254:	b	40c25c <server_rotate+0x900>
  40c258:	nop
  40c25c:	bl	4062e0 <__errno_location@plt>
  40c260:	str	wzr, [x0]
  40c264:	ldr	x0, [sp, #216]
  40c268:	bl	406000 <readdir64@plt>
  40c26c:	str	x0, [sp, #256]
  40c270:	b	40bb30 <server_rotate+0x1d4>
  40c274:	nop
  40c278:	ldr	x0, [sp, #72]
  40c27c:	bl	40b47c <server_process_deferred_closes>
  40c280:	add	x0, sp, #0xd8
  40c284:	bl	409470 <closedirp>
  40c288:	add	x0, sp, #0xd0
  40c28c:	bl	4090f4 <freep>
  40c290:	nop
  40c294:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c298:	ldr	x0, [x0, #4064]
  40c29c:	ldr	x1, [sp, #296]
  40c2a0:	ldr	x0, [x0]
  40c2a4:	eor	x0, x1, x0
  40c2a8:	cmp	x0, #0x0
  40c2ac:	b.eq	40c2b4 <server_rotate+0x958>  // b.none
  40c2b0:	bl	4063e0 <__stack_chk_fail@plt>
  40c2b4:	ldr	x19, [sp, #48]
  40c2b8:	ldp	x29, x30, [sp, #32]
  40c2bc:	add	sp, sp, #0x130
  40c2c0:	ret

000000000040c2c4 <server_sync>:
  40c2c4:	stp	x29, x30, [sp, #-112]!
  40c2c8:	mov	x29, sp
  40c2cc:	str	x0, [sp, #24]
  40c2d0:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c2d4:	ldr	x0, [x0, #4064]
  40c2d8:	ldr	x1, [x0]
  40c2dc:	str	x1, [sp, #104]
  40c2e0:	mov	x1, #0x0                   	// #0
  40c2e4:	ldr	x0, [sp, #24]
  40c2e8:	ldr	x0, [x0, #160]
  40c2ec:	cmp	x0, #0x0
  40c2f0:	b.eq	40c38c <server_sync+0xc8>  // b.none
  40c2f4:	ldr	x0, [sp, #24]
  40c2f8:	ldr	x0, [x0, #160]
  40c2fc:	mov	w1, #0x0                   	// #0
  40c300:	bl	405e70 <journal_file_set_offline@plt>
  40c304:	str	w0, [sp, #40]
  40c308:	ldr	w0, [sp, #40]
  40c30c:	cmp	w0, #0x0
  40c310:	b.ge	40c38c <server_sync+0xc8>  // b.tcont
  40c314:	mov	w0, #0x4                   	// #4
  40c318:	str	w0, [sp, #44]
  40c31c:	ldr	w0, [sp, #40]
  40c320:	str	w0, [sp, #48]
  40c324:	str	wzr, [sp, #52]
  40c328:	ldr	w0, [sp, #52]
  40c32c:	bl	406c30 <log_get_max_level_realm@plt>
  40c330:	mov	w1, w0
  40c334:	ldr	w0, [sp, #44]
  40c338:	and	w0, w0, #0x7
  40c33c:	cmp	w1, w0
  40c340:	b.lt	40c384 <server_sync+0xc0>  // b.tstop
  40c344:	ldr	w0, [sp, #52]
  40c348:	lsl	w1, w0, #10
  40c34c:	ldr	w0, [sp, #44]
  40c350:	orr	w6, w1, w0
  40c354:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c358:	add	x1, x0, #0xe03
  40c35c:	adrp	x0, 428000 <__func__.11909+0x280>
  40c360:	add	x5, x0, #0x518
  40c364:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c368:	add	x4, x0, #0x458
  40c36c:	mov	w3, #0x28a                 	// #650
  40c370:	mov	x2, x1
  40c374:	ldr	w1, [sp, #48]
  40c378:	mov	w0, w6
  40c37c:	bl	406590 <log_internal_realm@plt>
  40c380:	b	40c38c <server_sync+0xc8>
  40c384:	ldr	w0, [sp, #48]
  40c388:	cmp	w0, #0x0
  40c38c:	mov	w0, #0xfffffffe            	// #-2
  40c390:	str	w0, [sp, #88]
  40c394:	str	xzr, [sp, #96]
  40c398:	b	40c430 <server_sync+0x16c>
  40c39c:	ldr	x0, [sp, #80]
  40c3a0:	mov	w1, #0x0                   	// #0
  40c3a4:	bl	405e70 <journal_file_set_offline@plt>
  40c3a8:	str	w0, [sp, #40]
  40c3ac:	ldr	w0, [sp, #40]
  40c3b0:	cmp	w0, #0x0
  40c3b4:	b.ge	40c430 <server_sync+0x16c>  // b.tcont
  40c3b8:	mov	w0, #0x4                   	// #4
  40c3bc:	str	w0, [sp, #68]
  40c3c0:	ldr	w0, [sp, #40]
  40c3c4:	str	w0, [sp, #72]
  40c3c8:	str	wzr, [sp, #76]
  40c3cc:	ldr	w0, [sp, #76]
  40c3d0:	bl	406c30 <log_get_max_level_realm@plt>
  40c3d4:	mov	w1, w0
  40c3d8:	ldr	w0, [sp, #68]
  40c3dc:	and	w0, w0, #0x7
  40c3e0:	cmp	w1, w0
  40c3e4:	b.lt	40c428 <server_sync+0x164>  // b.tstop
  40c3e8:	ldr	w0, [sp, #76]
  40c3ec:	lsl	w1, w0, #10
  40c3f0:	ldr	w0, [sp, #68]
  40c3f4:	orr	w6, w1, w0
  40c3f8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c3fc:	add	x1, x0, #0xe03
  40c400:	adrp	x0, 428000 <__func__.11909+0x280>
  40c404:	add	x5, x0, #0x548
  40c408:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c40c:	add	x4, x0, #0x458
  40c410:	mov	w3, #0x290                 	// #656
  40c414:	mov	x2, x1
  40c418:	ldr	w1, [sp, #72]
  40c41c:	mov	w0, w6
  40c420:	bl	406590 <log_internal_realm@plt>
  40c424:	b	40c430 <server_sync+0x16c>
  40c428:	ldr	w0, [sp, #72]
  40c42c:	cmp	w0, #0x0
  40c430:	ldr	x0, [sp, #24]
  40c434:	ldr	x0, [x0, #168]
  40c438:	add	x2, sp, #0x50
  40c43c:	add	x1, sp, #0x58
  40c440:	mov	x3, #0x0                   	// #0
  40c444:	bl	4092d8 <ordered_hashmap_iterate>
  40c448:	and	w0, w0, #0xff
  40c44c:	cmp	w0, #0x0
  40c450:	b.ne	40c39c <server_sync+0xd8>  // b.any
  40c454:	ldr	x0, [sp, #24]
  40c458:	ldr	x0, [x0, #80]
  40c45c:	cmp	x0, #0x0
  40c460:	b.eq	40c4fc <server_sync+0x238>  // b.none
  40c464:	ldr	x0, [sp, #24]
  40c468:	ldr	x0, [x0, #80]
  40c46c:	mov	w1, #0x0                   	// #0
  40c470:	bl	406090 <sd_event_source_set_enabled@plt>
  40c474:	str	w0, [sp, #40]
  40c478:	ldr	w0, [sp, #40]
  40c47c:	cmp	w0, #0x0
  40c480:	b.ge	40c4fc <server_sync+0x238>  // b.tcont
  40c484:	mov	w0, #0x3                   	// #3
  40c488:	str	w0, [sp, #56]
  40c48c:	ldr	w0, [sp, #40]
  40c490:	str	w0, [sp, #60]
  40c494:	str	wzr, [sp, #64]
  40c498:	ldr	w0, [sp, #64]
  40c49c:	bl	406c30 <log_get_max_level_realm@plt>
  40c4a0:	mov	w1, w0
  40c4a4:	ldr	w0, [sp, #56]
  40c4a8:	and	w0, w0, #0x7
  40c4ac:	cmp	w1, w0
  40c4b0:	b.lt	40c4f4 <server_sync+0x230>  // b.tstop
  40c4b4:	ldr	w0, [sp, #64]
  40c4b8:	lsl	w1, w0, #10
  40c4bc:	ldr	w0, [sp, #56]
  40c4c0:	orr	w6, w1, w0
  40c4c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c4c8:	add	x1, x0, #0xe03
  40c4cc:	adrp	x0, 428000 <__func__.11909+0x280>
  40c4d0:	add	x5, x0, #0x578
  40c4d4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c4d8:	add	x4, x0, #0x458
  40c4dc:	mov	w3, #0x296                 	// #662
  40c4e0:	mov	x2, x1
  40c4e4:	ldr	w1, [sp, #60]
  40c4e8:	mov	w0, w6
  40c4ec:	bl	406590 <log_internal_realm@plt>
  40c4f0:	b	40c4fc <server_sync+0x238>
  40c4f4:	ldr	w0, [sp, #60]
  40c4f8:	cmp	w0, #0x0
  40c4fc:	ldr	x0, [sp, #24]
  40c500:	ldrb	w1, [x0, #592]
  40c504:	and	w1, w1, #0xfffffff7
  40c508:	strb	w1, [x0, #592]
  40c50c:	nop
  40c510:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c514:	ldr	x0, [x0, #4064]
  40c518:	ldr	x1, [sp, #104]
  40c51c:	ldr	x0, [x0]
  40c520:	eor	x0, x1, x0
  40c524:	cmp	x0, #0x0
  40c528:	b.eq	40c530 <server_sync+0x26c>  // b.none
  40c52c:	bl	4063e0 <__stack_chk_fail@plt>
  40c530:	ldp	x29, x30, [sp], #112
  40c534:	ret

000000000040c538 <do_vacuum>:
  40c538:	stp	x29, x30, [sp, #-64]!
  40c53c:	mov	x29, sp
  40c540:	str	x0, [sp, #40]
  40c544:	str	x1, [sp, #32]
  40c548:	strb	w2, [sp, #31]
  40c54c:	ldr	x0, [sp, #40]
  40c550:	cmp	x0, #0x0
  40c554:	cset	w0, eq  // eq = none
  40c558:	and	w0, w0, #0xff
  40c55c:	and	x0, x0, #0xff
  40c560:	cmp	x0, #0x0
  40c564:	b.eq	40c590 <do_vacuum+0x58>  // b.none
  40c568:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c56c:	add	x1, x0, #0xe03
  40c570:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c574:	add	x4, x0, #0x468
  40c578:	mov	w3, #0x2a0                 	// #672
  40c57c:	mov	x2, x1
  40c580:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c584:	add	x1, x0, #0xec8
  40c588:	mov	w0, #0x0                   	// #0
  40c58c:	bl	405fd0 <log_assert_failed_realm@plt>
  40c590:	ldr	x0, [sp, #32]
  40c594:	cmp	x0, #0x0
  40c598:	cset	w0, eq  // eq = none
  40c59c:	and	w0, w0, #0xff
  40c5a0:	and	x0, x0, #0xff
  40c5a4:	cmp	x0, #0x0
  40c5a8:	b.eq	40c5d4 <do_vacuum+0x9c>  // b.none
  40c5ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c5b0:	add	x1, x0, #0xe03
  40c5b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c5b8:	add	x4, x0, #0x468
  40c5bc:	mov	w3, #0x2a1                 	// #673
  40c5c0:	mov	x2, x1
  40c5c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c5c8:	add	x1, x0, #0xed0
  40c5cc:	mov	w0, #0x0                   	// #0
  40c5d0:	bl	405fd0 <log_assert_failed_realm@plt>
  40c5d4:	ldr	x1, [sp, #32]
  40c5d8:	ldr	x0, [sp, #40]
  40c5dc:	bl	409bc8 <cache_space_refresh>
  40c5e0:	ldrb	w0, [sp, #31]
  40c5e4:	cmp	w0, #0x0
  40c5e8:	b.eq	40c5f8 <do_vacuum+0xc0>  // b.none
  40c5ec:	ldr	x1, [sp, #32]
  40c5f0:	ldr	x0, [sp, #40]
  40c5f4:	bl	409f68 <server_space_usage_message>
  40c5f8:	ldr	x0, [sp, #32]
  40c5fc:	ldr	x6, [x0, #8]
  40c600:	ldr	x0, [sp, #32]
  40c604:	ldr	x1, [x0, #80]
  40c608:	ldr	x0, [sp, #32]
  40c60c:	ldr	x2, [x0, #56]
  40c610:	ldr	x0, [sp, #40]
  40c614:	ldr	x3, [x0, #480]
  40c618:	ldr	x0, [sp, #40]
  40c61c:	add	x0, x0, #0x1f0
  40c620:	ldrb	w5, [sp, #31]
  40c624:	mov	x4, x0
  40c628:	mov	x0, x6
  40c62c:	bl	406240 <journal_directory_vacuum@plt>
  40c630:	str	w0, [sp, #48]
  40c634:	ldr	w0, [sp, #48]
  40c638:	cmp	w0, #0x0
  40c63c:	b.ge	40c6d0 <do_vacuum+0x198>  // b.tcont
  40c640:	ldr	w0, [sp, #48]
  40c644:	cmn	w0, #0x2
  40c648:	b.eq	40c6d0 <do_vacuum+0x198>  // b.none
  40c64c:	mov	w0, #0x4                   	// #4
  40c650:	str	w0, [sp, #52]
  40c654:	ldr	w0, [sp, #48]
  40c658:	str	w0, [sp, #56]
  40c65c:	str	wzr, [sp, #60]
  40c660:	ldr	w0, [sp, #60]
  40c664:	bl	406c30 <log_get_max_level_realm@plt>
  40c668:	mov	w1, w0
  40c66c:	ldr	w0, [sp, #52]
  40c670:	and	w0, w0, #0x7
  40c674:	cmp	w1, w0
  40c678:	b.lt	40c6c8 <do_vacuum+0x190>  // b.tstop
  40c67c:	ldr	w0, [sp, #60]
  40c680:	lsl	w1, w0, #10
  40c684:	ldr	w0, [sp, #52]
  40c688:	orr	w7, w1, w0
  40c68c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c690:	add	x1, x0, #0xe03
  40c694:	ldr	x0, [sp, #32]
  40c698:	ldr	x0, [x0, #8]
  40c69c:	mov	x6, x0
  40c6a0:	adrp	x0, 428000 <__func__.11909+0x280>
  40c6a4:	add	x5, x0, #0x5a0
  40c6a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c6ac:	add	x4, x0, #0x478
  40c6b0:	mov	w3, #0x2ac                 	// #684
  40c6b4:	mov	x2, x1
  40c6b8:	ldr	w1, [sp, #56]
  40c6bc:	mov	w0, w7
  40c6c0:	bl	406590 <log_internal_realm@plt>
  40c6c4:	b	40c6d0 <do_vacuum+0x198>
  40c6c8:	ldr	w0, [sp, #56]
  40c6cc:	cmp	w0, #0x0
  40c6d0:	ldr	x0, [sp, #32]
  40c6d4:	add	x0, x0, #0x40
  40c6d8:	bl	409b8c <cache_space_invalidate>
  40c6dc:	nop
  40c6e0:	ldp	x29, x30, [sp], #64
  40c6e4:	ret

000000000040c6e8 <server_vacuum>:
  40c6e8:	stp	x29, x30, [sp, #-48]!
  40c6ec:	mov	x29, sp
  40c6f0:	str	x0, [sp, #24]
  40c6f4:	strb	w1, [sp, #23]
  40c6f8:	ldr	x0, [sp, #24]
  40c6fc:	cmp	x0, #0x0
  40c700:	cset	w0, eq  // eq = none
  40c704:	and	w0, w0, #0xff
  40c708:	and	x0, x0, #0xff
  40c70c:	cmp	x0, #0x0
  40c710:	b.eq	40c73c <server_vacuum+0x54>  // b.none
  40c714:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c718:	add	x1, x0, #0xe03
  40c71c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c720:	add	x4, x0, #0x488
  40c724:	mov	w3, #0x2b2                 	// #690
  40c728:	mov	x2, x1
  40c72c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c730:	add	x1, x0, #0xec8
  40c734:	mov	w0, #0x0                   	// #0
  40c738:	bl	405fd0 <log_assert_failed_realm@plt>
  40c73c:	mov	w0, #0x7                   	// #7
  40c740:	str	w0, [sp, #36]
  40c744:	str	wzr, [sp, #40]
  40c748:	str	wzr, [sp, #44]
  40c74c:	ldr	w0, [sp, #44]
  40c750:	bl	406c30 <log_get_max_level_realm@plt>
  40c754:	mov	w1, w0
  40c758:	ldr	w0, [sp, #36]
  40c75c:	and	w0, w0, #0x7
  40c760:	cmp	w1, w0
  40c764:	b.lt	40c7a8 <server_vacuum+0xc0>  // b.tstop
  40c768:	ldr	w0, [sp, #44]
  40c76c:	lsl	w1, w0, #10
  40c770:	ldr	w0, [sp, #36]
  40c774:	orr	w6, w1, w0
  40c778:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c77c:	add	x1, x0, #0xe03
  40c780:	adrp	x0, 428000 <__func__.11909+0x280>
  40c784:	add	x5, x0, #0x5c8
  40c788:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c78c:	add	x4, x0, #0x498
  40c790:	mov	w3, #0x2b4                 	// #692
  40c794:	mov	x2, x1
  40c798:	ldr	w1, [sp, #40]
  40c79c:	mov	w0, w6
  40c7a0:	bl	406590 <log_internal_realm@plt>
  40c7a4:	b	40c7b0 <server_vacuum+0xc8>
  40c7a8:	ldr	w0, [sp, #40]
  40c7ac:	cmp	w0, #0x0
  40c7b0:	ldr	x0, [sp, #24]
  40c7b4:	str	xzr, [x0, #496]
  40c7b8:	ldr	x0, [sp, #24]
  40c7bc:	ldr	x0, [x0, #160]
  40c7c0:	cmp	x0, #0x0
  40c7c4:	b.eq	40c7e0 <server_vacuum+0xf8>  // b.none
  40c7c8:	ldr	x0, [sp, #24]
  40c7cc:	add	x0, x0, #0x150
  40c7d0:	ldrb	w2, [sp, #23]
  40c7d4:	mov	x1, x0
  40c7d8:	ldr	x0, [sp, #24]
  40c7dc:	bl	40c538 <do_vacuum>
  40c7e0:	ldr	x0, [sp, #24]
  40c7e4:	ldr	x0, [x0, #152]
  40c7e8:	cmp	x0, #0x0
  40c7ec:	b.eq	40c808 <server_vacuum+0x120>  // b.none
  40c7f0:	ldr	x0, [sp, #24]
  40c7f4:	add	x0, x0, #0xe8
  40c7f8:	ldrb	w2, [sp, #23]
  40c7fc:	mov	x1, x0
  40c800:	ldr	x0, [sp, #24]
  40c804:	bl	40c538 <do_vacuum>
  40c808:	mov	w0, #0x0                   	// #0
  40c80c:	ldp	x29, x30, [sp], #48
  40c810:	ret

000000000040c814 <server_cache_machine_id>:
  40c814:	stp	x29, x30, [sp, #-64]!
  40c818:	mov	x29, sp
  40c81c:	str	x0, [sp, #24]
  40c820:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c824:	ldr	x0, [x0, #4064]
  40c828:	ldr	x1, [x0]
  40c82c:	str	x1, [sp, #56]
  40c830:	mov	x1, #0x0                   	// #0
  40c834:	ldr	x0, [sp, #24]
  40c838:	cmp	x0, #0x0
  40c83c:	cset	w0, eq  // eq = none
  40c840:	and	w0, w0, #0xff
  40c844:	and	x0, x0, #0xff
  40c848:	cmp	x0, #0x0
  40c84c:	b.eq	40c878 <server_cache_machine_id+0x64>  // b.none
  40c850:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c854:	add	x1, x0, #0xe03
  40c858:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c85c:	add	x4, x0, #0x4a8
  40c860:	mov	w3, #0x2c4                 	// #708
  40c864:	mov	x2, x1
  40c868:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c86c:	add	x1, x0, #0xec8
  40c870:	mov	w0, #0x0                   	// #0
  40c874:	bl	405fd0 <log_assert_failed_realm@plt>
  40c878:	add	x0, sp, #0x28
  40c87c:	bl	406510 <sd_id128_get_machine@plt>
  40c880:	str	w0, [sp, #36]
  40c884:	ldr	w0, [sp, #36]
  40c888:	cmp	w0, #0x0
  40c88c:	b.lt	40c8c8 <server_cache_machine_id+0xb4>  // b.tstop
  40c890:	ldr	x0, [sp, #24]
  40c894:	add	x0, x0, #0x251
  40c898:	adrp	x1, 428000 <__func__.11909+0x280>
  40c89c:	add	x2, x1, #0x5d8
  40c8a0:	mov	x1, x0
  40c8a4:	ldr	x3, [x2]
  40c8a8:	str	x3, [x1]
  40c8ac:	ldur	x2, [x2, #5]
  40c8b0:	stur	x2, [x1, #5]
  40c8b4:	add	x0, x0, #0xc
  40c8b8:	mov	x2, x0
  40c8bc:	ldp	x0, x1, [sp, #40]
  40c8c0:	bl	4068c0 <sd_id128_to_string@plt>
  40c8c4:	b	40c8cc <server_cache_machine_id+0xb8>
  40c8c8:	nop
  40c8cc:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c8d0:	ldr	x0, [x0, #4064]
  40c8d4:	ldr	x1, [sp, #56]
  40c8d8:	ldr	x0, [x0]
  40c8dc:	eor	x0, x1, x0
  40c8e0:	cmp	x0, #0x0
  40c8e4:	b.eq	40c8ec <server_cache_machine_id+0xd8>  // b.none
  40c8e8:	bl	4063e0 <__stack_chk_fail@plt>
  40c8ec:	ldp	x29, x30, [sp], #64
  40c8f0:	ret

000000000040c8f4 <server_cache_boot_id>:
  40c8f4:	stp	x29, x30, [sp, #-64]!
  40c8f8:	mov	x29, sp
  40c8fc:	str	x0, [sp, #24]
  40c900:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c904:	ldr	x0, [x0, #4064]
  40c908:	ldr	x1, [x0]
  40c90c:	str	x1, [sp, #56]
  40c910:	mov	x1, #0x0                   	// #0
  40c914:	ldr	x0, [sp, #24]
  40c918:	cmp	x0, #0x0
  40c91c:	cset	w0, eq  // eq = none
  40c920:	and	w0, w0, #0xff
  40c924:	and	x0, x0, #0xff
  40c928:	cmp	x0, #0x0
  40c92c:	b.eq	40c958 <server_cache_boot_id+0x64>  // b.none
  40c930:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c934:	add	x1, x0, #0xe03
  40c938:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40c93c:	add	x4, x0, #0x4c0
  40c940:	mov	w3, #0x2d1                 	// #721
  40c944:	mov	x2, x1
  40c948:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40c94c:	add	x1, x0, #0xec8
  40c950:	mov	w0, #0x0                   	// #0
  40c954:	bl	405fd0 <log_assert_failed_realm@plt>
  40c958:	add	x0, sp, #0x28
  40c95c:	bl	4060f0 <sd_id128_get_boot@plt>
  40c960:	str	w0, [sp, #36]
  40c964:	ldr	w0, [sp, #36]
  40c968:	cmp	w0, #0x0
  40c96c:	b.lt	40c9a8 <server_cache_boot_id+0xb4>  // b.tstop
  40c970:	ldr	x0, [sp, #24]
  40c974:	add	x0, x0, #0x27e
  40c978:	adrp	x1, 428000 <__func__.11909+0x280>
  40c97c:	add	x2, x1, #0x5e8
  40c980:	mov	x1, x0
  40c984:	ldr	x3, [x2]
  40c988:	str	x3, [x1]
  40c98c:	ldrh	w2, [x2, #8]
  40c990:	strh	w2, [x1, #8]
  40c994:	add	x0, x0, #0x9
  40c998:	mov	x2, x0
  40c99c:	ldp	x0, x1, [sp, #40]
  40c9a0:	bl	4068c0 <sd_id128_to_string@plt>
  40c9a4:	b	40c9ac <server_cache_boot_id+0xb8>
  40c9a8:	nop
  40c9ac:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c9b0:	ldr	x0, [x0, #4064]
  40c9b4:	ldr	x1, [sp, #56]
  40c9b8:	ldr	x0, [x0]
  40c9bc:	eor	x0, x1, x0
  40c9c0:	cmp	x0, #0x0
  40c9c4:	b.eq	40c9cc <server_cache_boot_id+0xd8>  // b.none
  40c9c8:	bl	4063e0 <__stack_chk_fail@plt>
  40c9cc:	ldp	x29, x30, [sp], #64
  40c9d0:	ret

000000000040c9d4 <server_cache_hostname>:
  40c9d4:	stp	x29, x30, [sp, #-80]!
  40c9d8:	mov	x29, sp
  40c9dc:	str	x19, [sp, #16]
  40c9e0:	str	x0, [sp, #40]
  40c9e4:	adrp	x0, 441000 <wordlist.9471+0x208>
  40c9e8:	ldr	x0, [x0, #4064]
  40c9ec:	ldr	x1, [x0]
  40c9f0:	str	x1, [sp, #72]
  40c9f4:	mov	x1, #0x0                   	// #0
  40c9f8:	str	xzr, [sp, #56]
  40c9fc:	ldr	x0, [sp, #40]
  40ca00:	cmp	x0, #0x0
  40ca04:	cset	w0, eq  // eq = none
  40ca08:	and	w0, w0, #0xff
  40ca0c:	and	x0, x0, #0xff
  40ca10:	cmp	x0, #0x0
  40ca14:	b.eq	40ca40 <server_cache_hostname+0x6c>  // b.none
  40ca18:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ca1c:	add	x1, x0, #0xe03
  40ca20:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ca24:	add	x4, x0, #0x4d8
  40ca28:	mov	w3, #0x2de                 	// #734
  40ca2c:	mov	x2, x1
  40ca30:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ca34:	add	x1, x0, #0xec8
  40ca38:	mov	w0, #0x0                   	// #0
  40ca3c:	bl	405fd0 <log_assert_failed_realm@plt>
  40ca40:	bl	406a10 <gethostname_malloc@plt>
  40ca44:	str	x0, [sp, #56]
  40ca48:	ldr	x0, [sp, #56]
  40ca4c:	cmp	x0, #0x0
  40ca50:	b.ne	40ca5c <server_cache_hostname+0x88>  // b.any
  40ca54:	mov	w19, #0x0                   	// #0
  40ca58:	b	40caa8 <server_cache_hostname+0xd4>
  40ca5c:	ldr	x0, [sp, #56]
  40ca60:	mov	x2, #0x0                   	// #0
  40ca64:	mov	x1, x0
  40ca68:	adrp	x0, 428000 <__func__.11909+0x280>
  40ca6c:	add	x0, x0, #0x5f8
  40ca70:	bl	405f10 <strjoin_real@plt>
  40ca74:	str	x0, [sp, #64]
  40ca78:	ldr	x0, [sp, #64]
  40ca7c:	cmp	x0, #0x0
  40ca80:	b.ne	40ca8c <server_cache_hostname+0xb8>  // b.any
  40ca84:	mov	w19, #0x0                   	// #0
  40ca88:	b	40caa8 <server_cache_hostname+0xd4>
  40ca8c:	ldr	x0, [sp, #40]
  40ca90:	ldr	x0, [x0, #680]
  40ca94:	bl	406930 <free@plt>
  40ca98:	ldr	x0, [sp, #40]
  40ca9c:	ldr	x1, [sp, #64]
  40caa0:	str	x1, [x0, #680]
  40caa4:	mov	w19, #0x1                   	// #1
  40caa8:	add	x0, sp, #0x38
  40caac:	bl	4090f4 <freep>
  40cab0:	cmp	w19, #0x1
  40cab4:	adrp	x0, 441000 <wordlist.9471+0x208>
  40cab8:	ldr	x0, [x0, #4064]
  40cabc:	ldr	x1, [sp, #72]
  40cac0:	ldr	x0, [x0]
  40cac4:	eor	x0, x1, x0
  40cac8:	cmp	x0, #0x0
  40cacc:	b.eq	40cad4 <server_cache_hostname+0x100>  // b.none
  40cad0:	bl	4063e0 <__stack_chk_fail@plt>
  40cad4:	ldr	x19, [sp, #16]
  40cad8:	ldp	x29, x30, [sp], #80
  40cadc:	ret

000000000040cae0 <shall_try_append_again>:
  40cae0:	stp	x29, x30, [sp, #-144]!
  40cae4:	mov	x29, sp
  40cae8:	str	x0, [sp, #24]
  40caec:	str	w1, [sp, #20]
  40caf0:	ldr	w0, [sp, #20]
  40caf4:	cmn	w0, #0x5
  40caf8:	b.eq	40cc9c <shall_try_append_again+0x1bc>  // b.none
  40cafc:	ldr	w0, [sp, #20]
  40cb00:	cmn	w0, #0x5
  40cb04:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb08:	ldr	w0, [sp, #20]
  40cb0c:	cmn	w0, #0x7
  40cb10:	b.eq	40cc14 <shall_try_append_again+0x134>  // b.none
  40cb14:	ldr	w0, [sp, #20]
  40cb18:	cmn	w0, #0x7
  40cb1c:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb20:	ldr	w0, [sp, #20]
  40cb24:	cmn	w0, #0x10
  40cb28:	b.eq	40cdac <shall_try_append_again+0x2cc>  // b.none
  40cb2c:	ldr	w0, [sp, #20]
  40cb30:	cmn	w0, #0x10
  40cb34:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb38:	ldr	w0, [sp, #20]
  40cb3c:	cmn	w0, #0x1a
  40cb40:	b.eq	40cfcc <shall_try_append_again+0x4ec>  // b.none
  40cb44:	ldr	w0, [sp, #20]
  40cb48:	cmn	w0, #0x1a
  40cb4c:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb50:	ldr	w0, [sp, #20]
  40cb54:	cmn	w0, #0x1b
  40cb58:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb5c:	ldr	w0, [sp, #20]
  40cb60:	cmn	w0, #0x1c
  40cb64:	b.ge	40cc14 <shall_try_append_again+0x134>  // b.tcont
  40cb68:	ldr	w0, [sp, #20]
  40cb6c:	cmn	w0, #0x2b
  40cb70:	b.eq	40cf44 <shall_try_append_again+0x464>  // b.none
  40cb74:	ldr	w0, [sp, #20]
  40cb78:	cmn	w0, #0x2b
  40cb7c:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb80:	ldr	w0, [sp, #20]
  40cb84:	cmn	w0, #0x3d
  40cb88:	b.eq	40cebc <shall_try_append_again+0x3dc>  // b.none
  40cb8c:	ldr	w0, [sp, #20]
  40cb90:	cmn	w0, #0x3d
  40cb94:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cb98:	ldr	w0, [sp, #20]
  40cb9c:	cmn	w0, #0x4a
  40cba0:	b.eq	40cebc <shall_try_append_again+0x3dc>  // b.none
  40cba4:	ldr	w0, [sp, #20]
  40cba8:	cmn	w0, #0x4a
  40cbac:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cbb0:	ldr	w0, [sp, #20]
  40cbb4:	cmn	w0, #0x5d
  40cbb8:	b.eq	40ce34 <shall_try_append_again+0x354>  // b.none
  40cbbc:	ldr	w0, [sp, #20]
  40cbc0:	cmn	w0, #0x5d
  40cbc4:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cbc8:	ldr	w0, [sp, #20]
  40cbcc:	cmn	w0, #0x61
  40cbd0:	b.eq	40d054 <shall_try_append_again+0x574>  // b.none
  40cbd4:	ldr	w0, [sp, #20]
  40cbd8:	cmn	w0, #0x61
  40cbdc:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cbe0:	ldr	w0, [sp, #20]
  40cbe4:	cmn	w0, #0x6c
  40cbe8:	b.eq	40cebc <shall_try_append_again+0x3dc>  // b.none
  40cbec:	ldr	w0, [sp, #20]
  40cbf0:	cmn	w0, #0x6c
  40cbf4:	b.gt	40d0dc <shall_try_append_again+0x5fc>
  40cbf8:	ldr	w0, [sp, #20]
  40cbfc:	cmn	w0, #0x7a
  40cc00:	b.eq	40cc14 <shall_try_append_again+0x134>  // b.none
  40cc04:	ldr	w0, [sp, #20]
  40cc08:	cmn	w0, #0x70
  40cc0c:	b.eq	40cd24 <shall_try_append_again+0x244>  // b.none
  40cc10:	b	40d0dc <shall_try_append_again+0x5fc>
  40cc14:	mov	w0, #0x7                   	// #7
  40cc18:	str	w0, [sp, #132]
  40cc1c:	str	wzr, [sp, #136]
  40cc20:	str	wzr, [sp, #140]
  40cc24:	ldr	w0, [sp, #140]
  40cc28:	bl	406c30 <log_get_max_level_realm@plt>
  40cc2c:	mov	w1, w0
  40cc30:	ldr	w0, [sp, #132]
  40cc34:	and	w0, w0, #0x7
  40cc38:	cmp	w1, w0
  40cc3c:	b.lt	40cc8c <shall_try_append_again+0x1ac>  // b.tstop
  40cc40:	ldr	w0, [sp, #140]
  40cc44:	lsl	w1, w0, #10
  40cc48:	ldr	w0, [sp, #132]
  40cc4c:	orr	w7, w1, w0
  40cc50:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40cc54:	add	x1, x0, #0xe03
  40cc58:	ldr	x0, [sp, #24]
  40cc5c:	ldr	x0, [x0, #48]
  40cc60:	mov	x6, x0
  40cc64:	adrp	x0, 428000 <__func__.11909+0x280>
  40cc68:	add	x5, x0, #0x608
  40cc6c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40cc70:	add	x4, x0, #0x4f0
  40cc74:	mov	w3, #0x2f3                 	// #755
  40cc78:	mov	x2, x1
  40cc7c:	ldr	w1, [sp, #136]
  40cc80:	mov	w0, w7
  40cc84:	bl	406590 <log_internal_realm@plt>
  40cc88:	b	40cc94 <shall_try_append_again+0x1b4>
  40cc8c:	ldr	w0, [sp, #136]
  40cc90:	cmp	w0, #0x0
  40cc94:	mov	w0, #0x1                   	// #1
  40cc98:	b	40d0e0 <shall_try_append_again+0x600>
  40cc9c:	mov	w0, #0x4                   	// #4
  40cca0:	str	w0, [sp, #36]
  40cca4:	str	wzr, [sp, #40]
  40cca8:	str	wzr, [sp, #44]
  40ccac:	ldr	w0, [sp, #44]
  40ccb0:	bl	406c30 <log_get_max_level_realm@plt>
  40ccb4:	mov	w1, w0
  40ccb8:	ldr	w0, [sp, #36]
  40ccbc:	and	w0, w0, #0x7
  40ccc0:	cmp	w1, w0
  40ccc4:	b.lt	40cd14 <shall_try_append_again+0x234>  // b.tstop
  40ccc8:	ldr	w0, [sp, #44]
  40cccc:	lsl	w1, w0, #10
  40ccd0:	ldr	w0, [sp, #36]
  40ccd4:	orr	w7, w1, w0
  40ccd8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ccdc:	add	x1, x0, #0xe03
  40cce0:	ldr	x0, [sp, #24]
  40cce4:	ldr	x0, [x0, #48]
  40cce8:	mov	x6, x0
  40ccec:	adrp	x0, 428000 <__func__.11909+0x280>
  40ccf0:	add	x5, x0, #0x630
  40ccf4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ccf8:	add	x4, x0, #0x4f0
  40ccfc:	mov	w3, #0x2f7                 	// #759
  40cd00:	mov	x2, x1
  40cd04:	ldr	w1, [sp, #40]
  40cd08:	mov	w0, w7
  40cd0c:	bl	406590 <log_internal_realm@plt>
  40cd10:	b	40cd1c <shall_try_append_again+0x23c>
  40cd14:	ldr	w0, [sp, #40]
  40cd18:	cmp	w0, #0x0
  40cd1c:	mov	w0, #0x1                   	// #1
  40cd20:	b	40d0e0 <shall_try_append_again+0x600>
  40cd24:	mov	w0, #0x6                   	// #6
  40cd28:	str	w0, [sp, #120]
  40cd2c:	str	wzr, [sp, #124]
  40cd30:	str	wzr, [sp, #128]
  40cd34:	ldr	w0, [sp, #128]
  40cd38:	bl	406c30 <log_get_max_level_realm@plt>
  40cd3c:	mov	w1, w0
  40cd40:	ldr	w0, [sp, #120]
  40cd44:	and	w0, w0, #0x7
  40cd48:	cmp	w1, w0
  40cd4c:	b.lt	40cd9c <shall_try_append_again+0x2bc>  // b.tstop
  40cd50:	ldr	w0, [sp, #128]
  40cd54:	lsl	w1, w0, #10
  40cd58:	ldr	w0, [sp, #120]
  40cd5c:	orr	w7, w1, w0
  40cd60:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40cd64:	add	x1, x0, #0xe03
  40cd68:	ldr	x0, [sp, #24]
  40cd6c:	ldr	x0, [x0, #48]
  40cd70:	mov	x6, x0
  40cd74:	adrp	x0, 428000 <__func__.11909+0x280>
  40cd78:	add	x5, x0, #0x648
  40cd7c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40cd80:	add	x4, x0, #0x4f0
  40cd84:	mov	w3, #0x2fb                 	// #763
  40cd88:	mov	x2, x1
  40cd8c:	ldr	w1, [sp, #124]
  40cd90:	mov	w0, w7
  40cd94:	bl	406590 <log_internal_realm@plt>
  40cd98:	b	40cda4 <shall_try_append_again+0x2c4>
  40cd9c:	ldr	w0, [sp, #124]
  40cda0:	cmp	w0, #0x0
  40cda4:	mov	w0, #0x1                   	// #1
  40cda8:	b	40d0e0 <shall_try_append_again+0x600>
  40cdac:	mov	w0, #0x6                   	// #6
  40cdb0:	str	w0, [sp, #48]
  40cdb4:	str	wzr, [sp, #52]
  40cdb8:	str	wzr, [sp, #56]
  40cdbc:	ldr	w0, [sp, #56]
  40cdc0:	bl	406c30 <log_get_max_level_realm@plt>
  40cdc4:	mov	w1, w0
  40cdc8:	ldr	w0, [sp, #48]
  40cdcc:	and	w0, w0, #0x7
  40cdd0:	cmp	w1, w0
  40cdd4:	b.lt	40ce24 <shall_try_append_again+0x344>  // b.tstop
  40cdd8:	ldr	w0, [sp, #56]
  40cddc:	lsl	w1, w0, #10
  40cde0:	ldr	w0, [sp, #48]
  40cde4:	orr	w7, w1, w0
  40cde8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40cdec:	add	x1, x0, #0xe03
  40cdf0:	ldr	x0, [sp, #24]
  40cdf4:	ldr	x0, [x0, #48]
  40cdf8:	mov	x6, x0
  40cdfc:	adrp	x0, 428000 <__func__.11909+0x280>
  40ce00:	add	x5, x0, #0x678
  40ce04:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ce08:	add	x4, x0, #0x4f0
  40ce0c:	mov	w3, #0x2ff                 	// #767
  40ce10:	mov	x2, x1
  40ce14:	ldr	w1, [sp, #52]
  40ce18:	mov	w0, w7
  40ce1c:	bl	406590 <log_internal_realm@plt>
  40ce20:	b	40ce2c <shall_try_append_again+0x34c>
  40ce24:	ldr	w0, [sp, #52]
  40ce28:	cmp	w0, #0x0
  40ce2c:	mov	w0, #0x1                   	// #1
  40ce30:	b	40d0e0 <shall_try_append_again+0x600>
  40ce34:	mov	w0, #0x6                   	// #6
  40ce38:	str	w0, [sp, #84]
  40ce3c:	str	wzr, [sp, #88]
  40ce40:	str	wzr, [sp, #92]
  40ce44:	ldr	w0, [sp, #92]
  40ce48:	bl	406c30 <log_get_max_level_realm@plt>
  40ce4c:	mov	w1, w0
  40ce50:	ldr	w0, [sp, #84]
  40ce54:	and	w0, w0, #0x7
  40ce58:	cmp	w1, w0
  40ce5c:	b.lt	40ceac <shall_try_append_again+0x3cc>  // b.tstop
  40ce60:	ldr	w0, [sp, #92]
  40ce64:	lsl	w1, w0, #10
  40ce68:	ldr	w0, [sp, #84]
  40ce6c:	orr	w7, w1, w0
  40ce70:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ce74:	add	x1, x0, #0xe03
  40ce78:	ldr	x0, [sp, #24]
  40ce7c:	ldr	x0, [x0, #48]
  40ce80:	mov	x6, x0
  40ce84:	adrp	x0, 428000 <__func__.11909+0x280>
  40ce88:	add	x5, x0, #0x698
  40ce8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ce90:	add	x4, x0, #0x4f0
  40ce94:	mov	w3, #0x303                 	// #771
  40ce98:	mov	x2, x1
  40ce9c:	ldr	w1, [sp, #88]
  40cea0:	mov	w0, w7
  40cea4:	bl	406590 <log_internal_realm@plt>
  40cea8:	b	40ceb4 <shall_try_append_again+0x3d4>
  40ceac:	ldr	w0, [sp, #88]
  40ceb0:	cmp	w0, #0x0
  40ceb4:	mov	w0, #0x1                   	// #1
  40ceb8:	b	40d0e0 <shall_try_append_again+0x600>
  40cebc:	mov	w0, #0x4                   	// #4
  40cec0:	str	w0, [sp, #108]
  40cec4:	str	wzr, [sp, #112]
  40cec8:	str	wzr, [sp, #116]
  40cecc:	ldr	w0, [sp, #116]
  40ced0:	bl	406c30 <log_get_max_level_realm@plt>
  40ced4:	mov	w1, w0
  40ced8:	ldr	w0, [sp, #108]
  40cedc:	and	w0, w0, #0x7
  40cee0:	cmp	w1, w0
  40cee4:	b.lt	40cf34 <shall_try_append_again+0x454>  // b.tstop
  40cee8:	ldr	w0, [sp, #116]
  40ceec:	lsl	w1, w0, #10
  40cef0:	ldr	w0, [sp, #108]
  40cef4:	orr	w7, w1, w0
  40cef8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40cefc:	add	x1, x0, #0xe03
  40cf00:	ldr	x0, [sp, #24]
  40cf04:	ldr	x0, [x0, #48]
  40cf08:	mov	x6, x0
  40cf0c:	adrp	x0, 428000 <__func__.11909+0x280>
  40cf10:	add	x5, x0, #0x6c0
  40cf14:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40cf18:	add	x4, x0, #0x4f0
  40cf1c:	mov	w3, #0x309                 	// #777
  40cf20:	mov	x2, x1
  40cf24:	ldr	w1, [sp, #112]
  40cf28:	mov	w0, w7
  40cf2c:	bl	406590 <log_internal_realm@plt>
  40cf30:	b	40cf3c <shall_try_append_again+0x45c>
  40cf34:	ldr	w0, [sp, #112]
  40cf38:	cmp	w0, #0x0
  40cf3c:	mov	w0, #0x1                   	// #1
  40cf40:	b	40d0e0 <shall_try_append_again+0x600>
  40cf44:	mov	w0, #0x4                   	// #4
  40cf48:	str	w0, [sp, #72]
  40cf4c:	str	wzr, [sp, #76]
  40cf50:	str	wzr, [sp, #80]
  40cf54:	ldr	w0, [sp, #80]
  40cf58:	bl	406c30 <log_get_max_level_realm@plt>
  40cf5c:	mov	w1, w0
  40cf60:	ldr	w0, [sp, #72]
  40cf64:	and	w0, w0, #0x7
  40cf68:	cmp	w1, w0
  40cf6c:	b.lt	40cfbc <shall_try_append_again+0x4dc>  // b.tstop
  40cf70:	ldr	w0, [sp, #80]
  40cf74:	lsl	w1, w0, #10
  40cf78:	ldr	w0, [sp, #72]
  40cf7c:	orr	w7, w1, w0
  40cf80:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40cf84:	add	x1, x0, #0xe03
  40cf88:	ldr	x0, [sp, #24]
  40cf8c:	ldr	x0, [x0, #48]
  40cf90:	mov	x6, x0
  40cf94:	adrp	x0, 428000 <__func__.11909+0x280>
  40cf98:	add	x5, x0, #0x6e8
  40cf9c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40cfa0:	add	x4, x0, #0x4f0
  40cfa4:	mov	w3, #0x30d                 	// #781
  40cfa8:	mov	x2, x1
  40cfac:	ldr	w1, [sp, #76]
  40cfb0:	mov	w0, w7
  40cfb4:	bl	406590 <log_internal_realm@plt>
  40cfb8:	b	40cfc4 <shall_try_append_again+0x4e4>
  40cfbc:	ldr	w0, [sp, #76]
  40cfc0:	cmp	w0, #0x0
  40cfc4:	mov	w0, #0x1                   	// #1
  40cfc8:	b	40d0e0 <shall_try_append_again+0x600>
  40cfcc:	mov	w0, #0x4                   	// #4
  40cfd0:	str	w0, [sp, #60]
  40cfd4:	str	wzr, [sp, #64]
  40cfd8:	str	wzr, [sp, #68]
  40cfdc:	ldr	w0, [sp, #68]
  40cfe0:	bl	406c30 <log_get_max_level_realm@plt>
  40cfe4:	mov	w1, w0
  40cfe8:	ldr	w0, [sp, #60]
  40cfec:	and	w0, w0, #0x7
  40cff0:	cmp	w1, w0
  40cff4:	b.lt	40d044 <shall_try_append_again+0x564>  // b.tstop
  40cff8:	ldr	w0, [sp, #68]
  40cffc:	lsl	w1, w0, #10
  40d000:	ldr	w0, [sp, #60]
  40d004:	orr	w7, w1, w0
  40d008:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d00c:	add	x1, x0, #0xe03
  40d010:	ldr	x0, [sp, #24]
  40d014:	ldr	x0, [x0, #48]
  40d018:	mov	x6, x0
  40d01c:	adrp	x0, 428000 <__func__.11909+0x280>
  40d020:	add	x5, x0, #0x718
  40d024:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d028:	add	x4, x0, #0x4f0
  40d02c:	mov	w3, #0x311                 	// #785
  40d030:	mov	x2, x1
  40d034:	ldr	w1, [sp, #64]
  40d038:	mov	w0, w7
  40d03c:	bl	406590 <log_internal_realm@plt>
  40d040:	b	40d04c <shall_try_append_again+0x56c>
  40d044:	ldr	w0, [sp, #64]
  40d048:	cmp	w0, #0x0
  40d04c:	mov	w0, #0x1                   	// #1
  40d050:	b	40d0e0 <shall_try_append_again+0x600>
  40d054:	mov	w0, #0x4                   	// #4
  40d058:	str	w0, [sp, #96]
  40d05c:	str	wzr, [sp, #100]
  40d060:	str	wzr, [sp, #104]
  40d064:	ldr	w0, [sp, #104]
  40d068:	bl	406c30 <log_get_max_level_realm@plt>
  40d06c:	mov	w1, w0
  40d070:	ldr	w0, [sp, #96]
  40d074:	and	w0, w0, #0x7
  40d078:	cmp	w1, w0
  40d07c:	b.lt	40d0cc <shall_try_append_again+0x5ec>  // b.tstop
  40d080:	ldr	w0, [sp, #104]
  40d084:	lsl	w1, w0, #10
  40d088:	ldr	w0, [sp, #96]
  40d08c:	orr	w7, w1, w0
  40d090:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d094:	add	x1, x0, #0xe03
  40d098:	ldr	x0, [sp, #24]
  40d09c:	ldr	x0, [x0, #48]
  40d0a0:	mov	x6, x0
  40d0a4:	adrp	x0, 428000 <__func__.11909+0x280>
  40d0a8:	add	x5, x0, #0x748
  40d0ac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d0b0:	add	x4, x0, #0x4f0
  40d0b4:	mov	w3, #0x315                 	// #789
  40d0b8:	mov	x2, x1
  40d0bc:	ldr	w1, [sp, #100]
  40d0c0:	mov	w0, w7
  40d0c4:	bl	406590 <log_internal_realm@plt>
  40d0c8:	b	40d0d4 <shall_try_append_again+0x5f4>
  40d0cc:	ldr	w0, [sp, #100]
  40d0d0:	cmp	w0, #0x0
  40d0d4:	mov	w0, #0x0                   	// #0
  40d0d8:	b	40d0e0 <shall_try_append_again+0x600>
  40d0dc:	mov	w0, #0x0                   	// #0
  40d0e0:	ldp	x29, x30, [sp], #144
  40d0e4:	ret

000000000040d0e8 <write_to_journal>:
  40d0e8:	stp	x29, x30, [sp, #-176]!
  40d0ec:	mov	x29, sp
  40d0f0:	stp	x19, x20, [sp, #16]
  40d0f4:	str	x0, [sp, #56]
  40d0f8:	str	w1, [sp, #52]
  40d0fc:	str	x2, [sp, #40]
  40d100:	str	x3, [sp, #32]
  40d104:	str	w4, [sp, #48]
  40d108:	adrp	x0, 441000 <wordlist.9471+0x208>
  40d10c:	ldr	x0, [x0, #4064]
  40d110:	ldr	x1, [x0]
  40d114:	str	x1, [sp, #168]
  40d118:	mov	x1, #0x0                   	// #0
  40d11c:	strb	wzr, [sp, #78]
  40d120:	strb	wzr, [sp, #79]
  40d124:	ldr	x0, [sp, #56]
  40d128:	cmp	x0, #0x0
  40d12c:	cset	w0, eq  // eq = none
  40d130:	and	w0, w0, #0xff
  40d134:	and	x0, x0, #0xff
  40d138:	cmp	x0, #0x0
  40d13c:	b.eq	40d168 <write_to_journal+0x80>  // b.none
  40d140:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d144:	add	x1, x0, #0xe03
  40d148:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d14c:	add	x4, x0, #0x508
  40d150:	mov	w3, #0x323                 	// #803
  40d154:	mov	x2, x1
  40d158:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d15c:	add	x1, x0, #0xec8
  40d160:	mov	w0, #0x0                   	// #0
  40d164:	bl	405fd0 <log_assert_failed_realm@plt>
  40d168:	ldr	x0, [sp, #40]
  40d16c:	cmp	x0, #0x0
  40d170:	cset	w0, eq  // eq = none
  40d174:	and	w0, w0, #0xff
  40d178:	and	x0, x0, #0xff
  40d17c:	cmp	x0, #0x0
  40d180:	b.eq	40d1ac <write_to_journal+0xc4>  // b.none
  40d184:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d188:	add	x1, x0, #0xe03
  40d18c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d190:	add	x4, x0, #0x508
  40d194:	mov	w3, #0x324                 	// #804
  40d198:	mov	x2, x1
  40d19c:	adrp	x0, 428000 <__func__.11909+0x280>
  40d1a0:	add	x1, x0, #0x7b0
  40d1a4:	mov	w0, #0x0                   	// #0
  40d1a8:	bl	405fd0 <log_assert_failed_realm@plt>
  40d1ac:	ldr	x0, [sp, #32]
  40d1b0:	cmp	x0, #0x0
  40d1b4:	cset	w0, eq  // eq = none
  40d1b8:	and	w0, w0, #0xff
  40d1bc:	and	x0, x0, #0xff
  40d1c0:	cmp	x0, #0x0
  40d1c4:	b.eq	40d1f0 <write_to_journal+0x108>  // b.none
  40d1c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d1cc:	add	x1, x0, #0xe03
  40d1d0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d1d4:	add	x4, x0, #0x508
  40d1d8:	mov	w3, #0x325                 	// #805
  40d1dc:	mov	x2, x1
  40d1e0:	adrp	x0, 428000 <__func__.11909+0x280>
  40d1e4:	add	x1, x0, #0x7b8
  40d1e8:	mov	w0, #0x0                   	// #0
  40d1ec:	bl	405fd0 <log_assert_failed_realm@plt>
  40d1f0:	ldr	x0, [sp, #56]
  40d1f4:	ldr	x0, [x0, #32]
  40d1f8:	add	x1, sp, #0x98
  40d1fc:	mov	x2, x1
  40d200:	mov	w1, #0x0                   	// #0
  40d204:	bl	406040 <sd_event_now@plt>
  40d208:	lsr	w0, w0, #31
  40d20c:	and	w0, w0, #0xff
  40d210:	and	x0, x0, #0xff
  40d214:	cmp	x0, #0x0
  40d218:	b.eq	40d244 <write_to_journal+0x15c>  // b.none
  40d21c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d220:	add	x1, x0, #0xe03
  40d224:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d228:	add	x4, x0, #0x508
  40d22c:	mov	w3, #0x32a                 	// #810
  40d230:	mov	x2, x1
  40d234:	adrp	x0, 428000 <__func__.11909+0x280>
  40d238:	add	x1, x0, #0x7c0
  40d23c:	mov	w0, #0x0                   	// #0
  40d240:	bl	405fd0 <log_assert_failed_realm@plt>
  40d244:	ldr	x0, [sp, #56]
  40d248:	ldr	x3, [x0, #32]
  40d24c:	add	x0, sp, #0x98
  40d250:	add	x0, x0, #0x8
  40d254:	mov	x2, x0
  40d258:	mov	w1, #0x1                   	// #1
  40d25c:	mov	x0, x3
  40d260:	bl	406040 <sd_event_now@plt>
  40d264:	lsr	w0, w0, #31
  40d268:	and	w0, w0, #0xff
  40d26c:	and	x0, x0, #0xff
  40d270:	cmp	x0, #0x0
  40d274:	b.eq	40d2a0 <write_to_journal+0x1b8>  // b.none
  40d278:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d27c:	add	x1, x0, #0xe03
  40d280:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d284:	add	x4, x0, #0x508
  40d288:	mov	w3, #0x32b                 	// #811
  40d28c:	mov	x2, x1
  40d290:	adrp	x0, 428000 <__func__.11909+0x280>
  40d294:	add	x1, x0, #0x800
  40d298:	mov	w0, #0x0                   	// #0
  40d29c:	bl	405fd0 <log_assert_failed_realm@plt>
  40d2a0:	ldr	x1, [sp, #152]
  40d2a4:	ldr	x0, [sp, #56]
  40d2a8:	ldr	x0, [x0, #704]
  40d2ac:	cmp	x1, x0
  40d2b0:	b.cs	40d334 <write_to_journal+0x24c>  // b.hs, b.nlast
  40d2b4:	mov	w0, #0x7                   	// #7
  40d2b8:	str	w0, [sp, #92]
  40d2bc:	str	wzr, [sp, #96]
  40d2c0:	str	wzr, [sp, #100]
  40d2c4:	ldr	w0, [sp, #100]
  40d2c8:	bl	406c30 <log_get_max_level_realm@plt>
  40d2cc:	mov	w1, w0
  40d2d0:	ldr	w0, [sp, #92]
  40d2d4:	and	w0, w0, #0x7
  40d2d8:	cmp	w1, w0
  40d2dc:	b.lt	40d320 <write_to_journal+0x238>  // b.tstop
  40d2e0:	ldr	w0, [sp, #100]
  40d2e4:	lsl	w1, w0, #10
  40d2e8:	ldr	w0, [sp, #92]
  40d2ec:	orr	w6, w1, w0
  40d2f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d2f4:	add	x1, x0, #0xe03
  40d2f8:	adrp	x0, 428000 <__func__.11909+0x280>
  40d2fc:	add	x5, x0, #0x840
  40d300:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d304:	add	x4, x0, #0x520
  40d308:	mov	w3, #0x333                 	// #819
  40d30c:	mov	x2, x1
  40d310:	ldr	w1, [sp, #96]
  40d314:	mov	w0, w6
  40d318:	bl	406590 <log_internal_realm@plt>
  40d31c:	b	40d328 <write_to_journal+0x240>
  40d320:	ldr	w0, [sp, #96]
  40d324:	cmp	w0, #0x0
  40d328:	mov	w0, #0x1                   	// #1
  40d32c:	strb	w0, [sp, #79]
  40d330:	b	40d3f8 <write_to_journal+0x310>
  40d334:	ldr	w1, [sp, #52]
  40d338:	ldr	x0, [sp, #56]
  40d33c:	bl	40ae7c <find_journal>
  40d340:	str	x0, [sp, #144]
  40d344:	ldr	x0, [sp, #144]
  40d348:	cmp	x0, #0x0
  40d34c:	b.eq	40d6e8 <write_to_journal+0x600>  // b.none
  40d350:	ldr	x0, [sp, #56]
  40d354:	ldr	x0, [x0, #488]
  40d358:	mov	x1, x0
  40d35c:	ldr	x0, [sp, #144]
  40d360:	bl	406080 <journal_file_rotate_suggested@plt>
  40d364:	and	w0, w0, #0xff
  40d368:	cmp	w0, #0x0
  40d36c:	b.eq	40d3f8 <write_to_journal+0x310>  // b.none
  40d370:	mov	w0, #0x7                   	// #7
  40d374:	str	w0, [sp, #80]
  40d378:	str	wzr, [sp, #84]
  40d37c:	str	wzr, [sp, #88]
  40d380:	ldr	w0, [sp, #88]
  40d384:	bl	406c30 <log_get_max_level_realm@plt>
  40d388:	mov	w1, w0
  40d38c:	ldr	w0, [sp, #80]
  40d390:	and	w0, w0, #0x7
  40d394:	cmp	w1, w0
  40d398:	b.lt	40d3e8 <write_to_journal+0x300>  // b.tstop
  40d39c:	ldr	w0, [sp, #88]
  40d3a0:	lsl	w1, w0, #10
  40d3a4:	ldr	w0, [sp, #80]
  40d3a8:	orr	w7, w1, w0
  40d3ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d3b0:	add	x1, x0, #0xe03
  40d3b4:	ldr	x0, [sp, #144]
  40d3b8:	ldr	x0, [x0, #48]
  40d3bc:	mov	x6, x0
  40d3c0:	adrp	x0, 428000 <__func__.11909+0x280>
  40d3c4:	add	x5, x0, #0x868
  40d3c8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d3cc:	add	x4, x0, #0x520
  40d3d0:	mov	w3, #0x33c                 	// #828
  40d3d4:	mov	x2, x1
  40d3d8:	ldr	w1, [sp, #84]
  40d3dc:	mov	w0, w7
  40d3e0:	bl	406590 <log_internal_realm@plt>
  40d3e4:	b	40d3f0 <write_to_journal+0x308>
  40d3e8:	ldr	w0, [sp, #84]
  40d3ec:	cmp	w0, #0x0
  40d3f0:	mov	w0, #0x1                   	// #1
  40d3f4:	strb	w0, [sp, #79]
  40d3f8:	ldrb	w0, [sp, #79]
  40d3fc:	cmp	w0, #0x0
  40d400:	b.eq	40d43c <write_to_journal+0x354>  // b.none
  40d404:	ldr	x0, [sp, #56]
  40d408:	bl	40b95c <server_rotate>
  40d40c:	mov	w1, #0x0                   	// #0
  40d410:	ldr	x0, [sp, #56]
  40d414:	bl	40c6e8 <server_vacuum>
  40d418:	mov	w0, #0x1                   	// #1
  40d41c:	strb	w0, [sp, #78]
  40d420:	ldr	w1, [sp, #52]
  40d424:	ldr	x0, [sp, #56]
  40d428:	bl	40ae7c <find_journal>
  40d42c:	str	x0, [sp, #144]
  40d430:	ldr	x0, [sp, #144]
  40d434:	cmp	x0, #0x0
  40d438:	b.eq	40d6f0 <write_to_journal+0x608>  // b.none
  40d43c:	ldr	x1, [sp, #152]
  40d440:	ldr	x0, [sp, #56]
  40d444:	str	x1, [x0, #704]
  40d448:	ldr	x0, [sp, #32]
  40d44c:	mov	w2, w0
  40d450:	ldr	x0, [sp, #56]
  40d454:	add	x1, x0, #0xb0
  40d458:	add	x0, sp, #0x98
  40d45c:	mov	x7, #0x0                   	// #0
  40d460:	mov	x6, #0x0                   	// #0
  40d464:	mov	x5, x1
  40d468:	mov	w4, w2
  40d46c:	ldr	x3, [sp, #40]
  40d470:	mov	x2, #0x0                   	// #0
  40d474:	mov	x1, x0
  40d478:	ldr	x0, [sp, #144]
  40d47c:	bl	405c70 <journal_file_append_entry@plt>
  40d480:	str	w0, [sp, #104]
  40d484:	ldr	w0, [sp, #104]
  40d488:	cmp	w0, #0x0
  40d48c:	b.lt	40d4a0 <write_to_journal+0x3b8>  // b.tstop
  40d490:	ldr	w1, [sp, #48]
  40d494:	ldr	x0, [sp, #56]
  40d498:	bl	413f2c <server_schedule_sync>
  40d49c:	b	40d6fc <write_to_journal+0x614>
  40d4a0:	ldrb	w0, [sp, #78]
  40d4a4:	cmp	w0, #0x0
  40d4a8:	b.ne	40d4cc <write_to_journal+0x3e4>  // b.any
  40d4ac:	ldr	w1, [sp, #104]
  40d4b0:	ldr	x0, [sp, #144]
  40d4b4:	bl	40cae0 <shall_try_append_again>
  40d4b8:	and	w0, w0, #0xff
  40d4bc:	eor	w0, w0, #0x1
  40d4c0:	and	w0, w0, #0xff
  40d4c4:	cmp	w0, #0x0
  40d4c8:	b.eq	40d55c <write_to_journal+0x474>  // b.none
  40d4cc:	mov	w0, #0x3                   	// #3
  40d4d0:	str	w0, [sp, #132]
  40d4d4:	ldr	w0, [sp, #104]
  40d4d8:	str	w0, [sp, #136]
  40d4dc:	str	wzr, [sp, #140]
  40d4e0:	ldr	w0, [sp, #140]
  40d4e4:	bl	406c30 <log_get_max_level_realm@plt>
  40d4e8:	mov	w1, w0
  40d4ec:	ldr	w0, [sp, #132]
  40d4f0:	and	w0, w0, #0x7
  40d4f4:	cmp	w1, w0
  40d4f8:	b.lt	40d550 <write_to_journal+0x468>  // b.tstop
  40d4fc:	ldr	w0, [sp, #140]
  40d500:	lsl	w1, w0, #10
  40d504:	ldr	w0, [sp, #132]
  40d508:	orr	w19, w1, w0
  40d50c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d510:	add	x20, x0, #0xe03
  40d514:	ldr	x1, [sp, #32]
  40d518:	ldr	x0, [sp, #40]
  40d51c:	bl	4094f8 <IOVEC_TOTAL_SIZE>
  40d520:	mov	x7, x0
  40d524:	ldr	x6, [sp, #32]
  40d528:	adrp	x0, 428000 <__func__.11909+0x280>
  40d52c:	add	x5, x0, #0x8b0
  40d530:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d534:	add	x4, x0, #0x520
  40d538:	mov	w3, #0x354                 	// #852
  40d53c:	mov	x2, x20
  40d540:	ldr	w1, [sp, #136]
  40d544:	mov	w0, w19
  40d548:	bl	406590 <log_internal_realm@plt>
  40d54c:	b	40d6fc <write_to_journal+0x614>
  40d550:	ldr	w0, [sp, #136]
  40d554:	cmp	w0, #0x0
  40d558:	b	40d6fc <write_to_journal+0x614>
  40d55c:	ldr	x0, [sp, #56]
  40d560:	bl	40b95c <server_rotate>
  40d564:	mov	w1, #0x0                   	// #0
  40d568:	ldr	x0, [sp, #56]
  40d56c:	bl	40c6e8 <server_vacuum>
  40d570:	ldr	w1, [sp, #52]
  40d574:	ldr	x0, [sp, #56]
  40d578:	bl	40ae7c <find_journal>
  40d57c:	str	x0, [sp, #144]
  40d580:	ldr	x0, [sp, #144]
  40d584:	cmp	x0, #0x0
  40d588:	b.eq	40d6f8 <write_to_journal+0x610>  // b.none
  40d58c:	mov	w0, #0x7                   	// #7
  40d590:	str	w0, [sp, #108]
  40d594:	str	wzr, [sp, #112]
  40d598:	str	wzr, [sp, #116]
  40d59c:	ldr	w0, [sp, #116]
  40d5a0:	bl	406c30 <log_get_max_level_realm@plt>
  40d5a4:	mov	w1, w0
  40d5a8:	ldr	w0, [sp, #108]
  40d5ac:	and	w0, w0, #0x7
  40d5b0:	cmp	w1, w0
  40d5b4:	b.lt	40d5f8 <write_to_journal+0x510>  // b.tstop
  40d5b8:	ldr	w0, [sp, #116]
  40d5bc:	lsl	w1, w0, #10
  40d5c0:	ldr	w0, [sp, #108]
  40d5c4:	orr	w6, w1, w0
  40d5c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d5cc:	add	x1, x0, #0xe03
  40d5d0:	adrp	x0, 428000 <__func__.11909+0x280>
  40d5d4:	add	x5, x0, #0x8f0
  40d5d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d5dc:	add	x4, x0, #0x520
  40d5e0:	mov	w3, #0x35f                 	// #863
  40d5e4:	mov	x2, x1
  40d5e8:	ldr	w1, [sp, #112]
  40d5ec:	mov	w0, w6
  40d5f0:	bl	406590 <log_internal_realm@plt>
  40d5f4:	b	40d600 <write_to_journal+0x518>
  40d5f8:	ldr	w0, [sp, #112]
  40d5fc:	cmp	w0, #0x0
  40d600:	ldr	x0, [sp, #32]
  40d604:	mov	w2, w0
  40d608:	ldr	x0, [sp, #56]
  40d60c:	add	x1, x0, #0xb0
  40d610:	add	x0, sp, #0x98
  40d614:	mov	x7, #0x0                   	// #0
  40d618:	mov	x6, #0x0                   	// #0
  40d61c:	mov	x5, x1
  40d620:	mov	w4, w2
  40d624:	ldr	x3, [sp, #40]
  40d628:	mov	x2, #0x0                   	// #0
  40d62c:	mov	x1, x0
  40d630:	ldr	x0, [sp, #144]
  40d634:	bl	405c70 <journal_file_append_entry@plt>
  40d638:	str	w0, [sp, #104]
  40d63c:	ldr	w0, [sp, #104]
  40d640:	cmp	w0, #0x0
  40d644:	b.ge	40d6d8 <write_to_journal+0x5f0>  // b.tcont
  40d648:	mov	w0, #0x3                   	// #3
  40d64c:	str	w0, [sp, #120]
  40d650:	ldr	w0, [sp, #104]
  40d654:	str	w0, [sp, #124]
  40d658:	str	wzr, [sp, #128]
  40d65c:	ldr	w0, [sp, #128]
  40d660:	bl	406c30 <log_get_max_level_realm@plt>
  40d664:	mov	w1, w0
  40d668:	ldr	w0, [sp, #120]
  40d66c:	and	w0, w0, #0x7
  40d670:	cmp	w1, w0
  40d674:	b.lt	40d6cc <write_to_journal+0x5e4>  // b.tstop
  40d678:	ldr	w0, [sp, #128]
  40d67c:	lsl	w1, w0, #10
  40d680:	ldr	w0, [sp, #120]
  40d684:	orr	w19, w1, w0
  40d688:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d68c:	add	x20, x0, #0xe03
  40d690:	ldr	x1, [sp, #32]
  40d694:	ldr	x0, [sp, #40]
  40d698:	bl	4094f8 <IOVEC_TOTAL_SIZE>
  40d69c:	mov	x7, x0
  40d6a0:	ldr	x6, [sp, #32]
  40d6a4:	adrp	x0, 428000 <__func__.11909+0x280>
  40d6a8:	add	x5, x0, #0x900
  40d6ac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d6b0:	add	x4, x0, #0x520
  40d6b4:	mov	w3, #0x362                 	// #866
  40d6b8:	mov	x2, x20
  40d6bc:	ldr	w1, [sp, #124]
  40d6c0:	mov	w0, w19
  40d6c4:	bl	406590 <log_internal_realm@plt>
  40d6c8:	b	40d6fc <write_to_journal+0x614>
  40d6cc:	ldr	w0, [sp, #124]
  40d6d0:	cmp	w0, #0x0
  40d6d4:	b	40d6fc <write_to_journal+0x614>
  40d6d8:	ldr	w1, [sp, #48]
  40d6dc:	ldr	x0, [sp, #56]
  40d6e0:	bl	413f2c <server_schedule_sync>
  40d6e4:	b	40d6fc <write_to_journal+0x614>
  40d6e8:	nop
  40d6ec:	b	40d6fc <write_to_journal+0x614>
  40d6f0:	nop
  40d6f4:	b	40d6fc <write_to_journal+0x614>
  40d6f8:	nop
  40d6fc:	adrp	x0, 441000 <wordlist.9471+0x208>
  40d700:	ldr	x0, [x0, #4064]
  40d704:	ldr	x1, [sp, #168]
  40d708:	ldr	x0, [x0]
  40d70c:	eor	x0, x1, x0
  40d710:	cmp	x0, #0x0
  40d714:	b.eq	40d71c <write_to_journal+0x634>  // b.none
  40d718:	bl	4063e0 <__stack_chk_fail@plt>
  40d71c:	ldp	x19, x20, [sp, #16]
  40d720:	ldp	x29, x30, [sp], #176
  40d724:	ret

000000000040d728 <dispatch_message_real>:
  40d728:	sub	sp, sp, #0x530
  40d72c:	stp	x29, x30, [sp]
  40d730:	mov	x29, sp
  40d734:	stp	x19, x20, [sp, #16]
  40d738:	str	x0, [x29, #88]
  40d73c:	str	x1, [x29, #80]
  40d740:	str	x2, [x29, #72]
  40d744:	str	x3, [x29, #64]
  40d748:	str	x4, [x29, #56]
  40d74c:	str	x5, [x29, #48]
  40d750:	str	w6, [x29, #44]
  40d754:	str	w7, [x29, #40]
  40d758:	adrp	x0, 441000 <wordlist.9471+0x208>
  40d75c:	ldr	x0, [x0, #4064]
  40d760:	ldr	x1, [x0]
  40d764:	str	x1, [x29, #1320]
  40d768:	mov	x1, #0x0                   	// #0
  40d76c:	str	xzr, [x29, #104]
  40d770:	str	xzr, [x29, #112]
  40d774:	ldr	x0, [x29, #88]
  40d778:	cmp	x0, #0x0
  40d77c:	cset	w0, eq  // eq = none
  40d780:	and	w0, w0, #0xff
  40d784:	and	x0, x0, #0xff
  40d788:	cmp	x0, #0x0
  40d78c:	b.eq	40d7b8 <dispatch_message_real+0x90>  // b.none
  40d790:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d794:	add	x1, x0, #0xe03
  40d798:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d79c:	add	x4, x0, #0x538
  40d7a0:	mov	w3, #0x393                 	// #915
  40d7a4:	mov	x2, x1
  40d7a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d7ac:	add	x1, x0, #0xec8
  40d7b0:	mov	w0, #0x0                   	// #0
  40d7b4:	bl	405fd0 <log_assert_failed_realm@plt>
  40d7b8:	ldr	x0, [x29, #80]
  40d7bc:	cmp	x0, #0x0
  40d7c0:	cset	w0, eq  // eq = none
  40d7c4:	and	w0, w0, #0xff
  40d7c8:	and	x0, x0, #0xff
  40d7cc:	cmp	x0, #0x0
  40d7d0:	b.eq	40d7fc <dispatch_message_real+0xd4>  // b.none
  40d7d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d7d8:	add	x1, x0, #0xe03
  40d7dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d7e0:	add	x4, x0, #0x538
  40d7e4:	mov	w3, #0x394                 	// #916
  40d7e8:	mov	x2, x1
  40d7ec:	adrp	x0, 428000 <__func__.11909+0x280>
  40d7f0:	add	x1, x0, #0x7b0
  40d7f4:	mov	w0, #0x0                   	// #0
  40d7f8:	bl	405fd0 <log_assert_failed_realm@plt>
  40d7fc:	ldr	x0, [x29, #72]
  40d800:	cmp	x0, #0x0
  40d804:	cset	w0, eq  // eq = none
  40d808:	and	w0, w0, #0xff
  40d80c:	and	x0, x0, #0xff
  40d810:	cmp	x0, #0x0
  40d814:	b.eq	40d840 <dispatch_message_real+0x118>  // b.none
  40d818:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d81c:	add	x1, x0, #0xe03
  40d820:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d824:	add	x4, x0, #0x538
  40d828:	mov	w3, #0x395                 	// #917
  40d82c:	mov	x2, x1
  40d830:	adrp	x0, 428000 <__func__.11909+0x280>
  40d834:	add	x1, x0, #0x7b8
  40d838:	mov	w0, #0x0                   	// #0
  40d83c:	bl	405fd0 <log_assert_failed_realm@plt>
  40d840:	ldr	w0, [x29, #40]
  40d844:	bl	4096c8 <pid_is_valid>
  40d848:	and	w0, w0, #0xff
  40d84c:	cmp	w0, #0x0
  40d850:	b.eq	40d85c <dispatch_message_real+0x134>  // b.none
  40d854:	mov	x0, #0x12                  	// #18
  40d858:	b	40d860 <dispatch_message_real+0x138>
  40d85c:	mov	x0, #0x0                   	// #0
  40d860:	ldr	x1, [x29, #72]
  40d864:	add	x19, x0, x1
  40d868:	ldr	x0, [x29, #56]
  40d86c:	bl	4095c0 <client_context_extra_fields_n_iovec>
  40d870:	add	x0, x19, x0
  40d874:	add	x0, x0, #0x16
  40d878:	ldr	x1, [x29, #64]
  40d87c:	cmp	x1, x0
  40d880:	cset	w0, cc  // cc = lo, ul, last
  40d884:	and	w0, w0, #0xff
  40d888:	and	x0, x0, #0xff
  40d88c:	cmp	x0, #0x0
  40d890:	b.eq	40d8bc <dispatch_message_real+0x194>  // b.none
  40d894:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d898:	add	x1, x0, #0xe03
  40d89c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d8a0:	add	x4, x0, #0x538
  40d8a4:	mov	w3, #0x396                 	// #918
  40d8a8:	mov	x2, x1
  40d8ac:	adrp	x0, 428000 <__func__.11909+0x280>
  40d8b0:	add	x1, x0, #0x950
  40d8b4:	mov	w0, #0x0                   	// #0
  40d8b8:	bl	405fd0 <log_assert_failed_realm@plt>
  40d8bc:	ldr	x0, [x29, #56]
  40d8c0:	cmp	x0, #0x0
  40d8c4:	b.eq	40f410 <dispatch_message_real+0x1ce8>  // b.none
  40d8c8:	ldr	x0, [x29, #56]
  40d8cc:	ldr	w0, [x0, #20]
  40d8d0:	bl	4096c8 <pid_is_valid>
  40d8d4:	and	w0, w0, #0xff
  40d8d8:	cmp	w0, #0x0
  40d8dc:	b.eq	40d9e4 <dispatch_message_real+0x2bc>  // b.none
  40d8e0:	mov	x0, #0x12                  	// #18
  40d8e4:	str	x0, [x29, #560]
  40d8e8:	ldr	x1, [x29, #560]
  40d8ec:	mov	x0, #0x1                   	// #1
  40d8f0:	bl	409118 <size_multiply_overflow>
  40d8f4:	and	w0, w0, #0xff
  40d8f8:	and	x0, x0, #0xff
  40d8fc:	cmp	x0, #0x0
  40d900:	b.eq	40d92c <dispatch_message_real+0x204>  // b.none
  40d904:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d908:	add	x1, x0, #0xe03
  40d90c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d910:	add	x4, x0, #0x538
  40d914:	mov	w3, #0x39c                 	// #924
  40d918:	mov	x2, x1
  40d91c:	adrp	x0, 428000 <__func__.11909+0x280>
  40d920:	add	x1, x0, #0xe0
  40d924:	mov	w0, #0x0                   	// #0
  40d928:	bl	405fd0 <log_assert_failed_realm@plt>
  40d92c:	ldr	x0, [x29, #560]
  40d930:	cmp	x0, #0x400, lsl #12
  40d934:	cset	w0, hi  // hi = pmore
  40d938:	and	w0, w0, #0xff
  40d93c:	and	x0, x0, #0xff
  40d940:	cmp	x0, #0x0
  40d944:	b.eq	40d970 <dispatch_message_real+0x248>  // b.none
  40d948:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40d94c:	add	x1, x0, #0xe03
  40d950:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40d954:	add	x4, x0, #0x538
  40d958:	mov	w3, #0x39c                 	// #924
  40d95c:	mov	x2, x1
  40d960:	adrp	x0, 428000 <__func__.11909+0x280>
  40d964:	add	x1, x0, #0x110
  40d968:	mov	w0, #0x0                   	// #0
  40d96c:	bl	405fd0 <log_assert_failed_realm@plt>
  40d970:	ldr	x0, [x29, #560]
  40d974:	add	x0, x0, #0xf
  40d978:	lsr	x0, x0, #4
  40d97c:	lsl	x0, x0, #4
  40d980:	sub	sp, sp, x0
  40d984:	mov	x0, sp
  40d988:	add	x0, x0, #0xf
  40d98c:	lsr	x0, x0, #4
  40d990:	lsl	x0, x0, #4
  40d994:	str	x0, [x29, #568]
  40d998:	ldr	x0, [x29, #56]
  40d99c:	ldr	w0, [x0, #20]
  40d9a0:	mov	w2, w0
  40d9a4:	adrp	x0, 428000 <__func__.11909+0x280>
  40d9a8:	add	x1, x0, #0x9d0
  40d9ac:	ldr	x0, [x29, #568]
  40d9b0:	bl	4069c0 <sprintf@plt>
  40d9b4:	ldr	x0, [x29, #72]
  40d9b8:	add	x1, x0, #0x1
  40d9bc:	str	x1, [x29, #72]
  40d9c0:	lsl	x0, x0, #4
  40d9c4:	ldr	x1, [x29, #80]
  40d9c8:	add	x19, x1, x0
  40d9cc:	ldr	x0, [x29, #568]
  40d9d0:	bl	406af0 <strlen@plt>
  40d9d4:	mov	x1, x0
  40d9d8:	ldr	x0, [x29, #568]
  40d9dc:	str	x0, [x19]
  40d9e0:	str	x1, [x19, #8]
  40d9e4:	ldr	x0, [x29, #56]
  40d9e8:	ldr	w0, [x0, #24]
  40d9ec:	bl	4061c0 <uid_is_valid@plt>
  40d9f0:	and	w0, w0, #0xff
  40d9f4:	cmp	w0, #0x0
  40d9f8:	b.eq	40db00 <dispatch_message_real+0x3d8>  // b.none
  40d9fc:	mov	x0, #0x12                  	// #18
  40da00:	str	x0, [x29, #576]
  40da04:	ldr	x1, [x29, #576]
  40da08:	mov	x0, #0x1                   	// #1
  40da0c:	bl	409118 <size_multiply_overflow>
  40da10:	and	w0, w0, #0xff
  40da14:	and	x0, x0, #0xff
  40da18:	cmp	x0, #0x0
  40da1c:	b.eq	40da48 <dispatch_message_real+0x320>  // b.none
  40da20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40da24:	add	x1, x0, #0xe03
  40da28:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40da2c:	add	x4, x0, #0x538
  40da30:	mov	w3, #0x39d                 	// #925
  40da34:	mov	x2, x1
  40da38:	adrp	x0, 428000 <__func__.11909+0x280>
  40da3c:	add	x1, x0, #0xe0
  40da40:	mov	w0, #0x0                   	// #0
  40da44:	bl	405fd0 <log_assert_failed_realm@plt>
  40da48:	ldr	x0, [x29, #576]
  40da4c:	cmp	x0, #0x400, lsl #12
  40da50:	cset	w0, hi  // hi = pmore
  40da54:	and	w0, w0, #0xff
  40da58:	and	x0, x0, #0xff
  40da5c:	cmp	x0, #0x0
  40da60:	b.eq	40da8c <dispatch_message_real+0x364>  // b.none
  40da64:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40da68:	add	x1, x0, #0xe03
  40da6c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40da70:	add	x4, x0, #0x538
  40da74:	mov	w3, #0x39d                 	// #925
  40da78:	mov	x2, x1
  40da7c:	adrp	x0, 428000 <__func__.11909+0x280>
  40da80:	add	x1, x0, #0x110
  40da84:	mov	w0, #0x0                   	// #0
  40da88:	bl	405fd0 <log_assert_failed_realm@plt>
  40da8c:	ldr	x0, [x29, #576]
  40da90:	add	x0, x0, #0xf
  40da94:	lsr	x0, x0, #4
  40da98:	lsl	x0, x0, #4
  40da9c:	sub	sp, sp, x0
  40daa0:	mov	x0, sp
  40daa4:	add	x0, x0, #0xf
  40daa8:	lsr	x0, x0, #4
  40daac:	lsl	x0, x0, #4
  40dab0:	str	x0, [x29, #584]
  40dab4:	ldr	x0, [x29, #56]
  40dab8:	ldr	w0, [x0, #24]
  40dabc:	mov	w2, w0
  40dac0:	adrp	x0, 428000 <__func__.11909+0x280>
  40dac4:	add	x1, x0, #0x9d8
  40dac8:	ldr	x0, [x29, #584]
  40dacc:	bl	4069c0 <sprintf@plt>
  40dad0:	ldr	x0, [x29, #72]
  40dad4:	add	x1, x0, #0x1
  40dad8:	str	x1, [x29, #72]
  40dadc:	lsl	x0, x0, #4
  40dae0:	ldr	x1, [x29, #80]
  40dae4:	add	x19, x1, x0
  40dae8:	ldr	x0, [x29, #584]
  40daec:	bl	406af0 <strlen@plt>
  40daf0:	mov	x1, x0
  40daf4:	ldr	x0, [x29, #584]
  40daf8:	str	x0, [x19]
  40dafc:	str	x1, [x19, #8]
  40db00:	ldr	x0, [x29, #56]
  40db04:	ldr	w0, [x0, #28]
  40db08:	bl	4096e8 <gid_is_valid>
  40db0c:	and	w0, w0, #0xff
  40db10:	cmp	w0, #0x0
  40db14:	b.eq	40dc1c <dispatch_message_real+0x4f4>  // b.none
  40db18:	mov	x0, #0x12                  	// #18
  40db1c:	str	x0, [x29, #592]
  40db20:	ldr	x1, [x29, #592]
  40db24:	mov	x0, #0x1                   	// #1
  40db28:	bl	409118 <size_multiply_overflow>
  40db2c:	and	w0, w0, #0xff
  40db30:	and	x0, x0, #0xff
  40db34:	cmp	x0, #0x0
  40db38:	b.eq	40db64 <dispatch_message_real+0x43c>  // b.none
  40db3c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40db40:	add	x1, x0, #0xe03
  40db44:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40db48:	add	x4, x0, #0x538
  40db4c:	mov	w3, #0x39e                 	// #926
  40db50:	mov	x2, x1
  40db54:	adrp	x0, 428000 <__func__.11909+0x280>
  40db58:	add	x1, x0, #0xe0
  40db5c:	mov	w0, #0x0                   	// #0
  40db60:	bl	405fd0 <log_assert_failed_realm@plt>
  40db64:	ldr	x0, [x29, #592]
  40db68:	cmp	x0, #0x400, lsl #12
  40db6c:	cset	w0, hi  // hi = pmore
  40db70:	and	w0, w0, #0xff
  40db74:	and	x0, x0, #0xff
  40db78:	cmp	x0, #0x0
  40db7c:	b.eq	40dba8 <dispatch_message_real+0x480>  // b.none
  40db80:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40db84:	add	x1, x0, #0xe03
  40db88:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40db8c:	add	x4, x0, #0x538
  40db90:	mov	w3, #0x39e                 	// #926
  40db94:	mov	x2, x1
  40db98:	adrp	x0, 428000 <__func__.11909+0x280>
  40db9c:	add	x1, x0, #0x110
  40dba0:	mov	w0, #0x0                   	// #0
  40dba4:	bl	405fd0 <log_assert_failed_realm@plt>
  40dba8:	ldr	x0, [x29, #592]
  40dbac:	add	x0, x0, #0xf
  40dbb0:	lsr	x0, x0, #4
  40dbb4:	lsl	x0, x0, #4
  40dbb8:	sub	sp, sp, x0
  40dbbc:	mov	x0, sp
  40dbc0:	add	x0, x0, #0xf
  40dbc4:	lsr	x0, x0, #4
  40dbc8:	lsl	x0, x0, #4
  40dbcc:	str	x0, [x29, #600]
  40dbd0:	ldr	x0, [x29, #56]
  40dbd4:	ldr	w0, [x0, #28]
  40dbd8:	mov	w2, w0
  40dbdc:	adrp	x0, 428000 <__func__.11909+0x280>
  40dbe0:	add	x1, x0, #0x9e0
  40dbe4:	ldr	x0, [x29, #600]
  40dbe8:	bl	4069c0 <sprintf@plt>
  40dbec:	ldr	x0, [x29, #72]
  40dbf0:	add	x1, x0, #0x1
  40dbf4:	str	x1, [x29, #72]
  40dbf8:	lsl	x0, x0, #4
  40dbfc:	ldr	x1, [x29, #80]
  40dc00:	add	x19, x1, x0
  40dc04:	ldr	x0, [x29, #600]
  40dc08:	bl	406af0 <strlen@plt>
  40dc0c:	mov	x1, x0
  40dc10:	ldr	x0, [x29, #600]
  40dc14:	str	x0, [x19]
  40dc18:	str	x1, [x19, #8]
  40dc1c:	ldr	x0, [x29, #56]
  40dc20:	ldr	x0, [x0, #32]
  40dc24:	bl	4093bc <isempty>
  40dc28:	and	w0, w0, #0xff
  40dc2c:	eor	w0, w0, #0x1
  40dc30:	and	w0, w0, #0xff
  40dc34:	cmp	w0, #0x0
  40dc38:	b.eq	40de10 <dispatch_message_real+0x6e8>  // b.none
  40dc3c:	adrp	x0, 428000 <__func__.11909+0x280>
  40dc40:	add	x0, x0, #0x9e8
  40dc44:	str	x0, [x29, #1248]
  40dc48:	ldr	x0, [x29, #56]
  40dc4c:	ldr	x0, [x0, #32]
  40dc50:	str	x0, [x29, #1256]
  40dc54:	str	xzr, [x29, #136]
  40dc58:	str	xzr, [x29, #144]
  40dc5c:	b	40dc90 <dispatch_message_real+0x568>
  40dc60:	ldr	x0, [x29, #144]
  40dc64:	lsl	x0, x0, #3
  40dc68:	add	x1, x29, #0x4e0
  40dc6c:	ldr	x0, [x1, x0]
  40dc70:	bl	406af0 <strlen@plt>
  40dc74:	mov	x1, x0
  40dc78:	ldr	x0, [x29, #136]
  40dc7c:	add	x0, x0, x1
  40dc80:	str	x0, [x29, #136]
  40dc84:	ldr	x0, [x29, #144]
  40dc88:	add	x0, x0, #0x1
  40dc8c:	str	x0, [x29, #144]
  40dc90:	ldr	x0, [x29, #144]
  40dc94:	cmp	x0, #0x1
  40dc98:	b.hi	40dcb4 <dispatch_message_real+0x58c>  // b.pmore
  40dc9c:	ldr	x0, [x29, #144]
  40dca0:	lsl	x0, x0, #3
  40dca4:	add	x1, x29, #0x4e0
  40dca8:	ldr	x0, [x1, x0]
  40dcac:	cmp	x0, #0x0
  40dcb0:	b.ne	40dc60 <dispatch_message_real+0x538>  // b.any
  40dcb4:	ldr	x0, [x29, #136]
  40dcb8:	add	x0, x0, #0x1
  40dcbc:	str	x0, [x29, #608]
  40dcc0:	ldr	x1, [x29, #608]
  40dcc4:	mov	x0, #0x1                   	// #1
  40dcc8:	bl	409118 <size_multiply_overflow>
  40dccc:	and	w0, w0, #0xff
  40dcd0:	and	x0, x0, #0xff
  40dcd4:	cmp	x0, #0x0
  40dcd8:	b.eq	40dd04 <dispatch_message_real+0x5dc>  // b.none
  40dcdc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40dce0:	add	x1, x0, #0xe03
  40dce4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40dce8:	add	x4, x0, #0x538
  40dcec:	mov	w3, #0x3a0                 	// #928
  40dcf0:	mov	x2, x1
  40dcf4:	adrp	x0, 428000 <__func__.11909+0x280>
  40dcf8:	add	x1, x0, #0xe0
  40dcfc:	mov	w0, #0x0                   	// #0
  40dd00:	bl	405fd0 <log_assert_failed_realm@plt>
  40dd04:	ldr	x0, [x29, #608]
  40dd08:	cmp	x0, #0x400, lsl #12
  40dd0c:	cset	w0, hi  // hi = pmore
  40dd10:	and	w0, w0, #0xff
  40dd14:	and	x0, x0, #0xff
  40dd18:	cmp	x0, #0x0
  40dd1c:	b.eq	40dd48 <dispatch_message_real+0x620>  // b.none
  40dd20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40dd24:	add	x1, x0, #0xe03
  40dd28:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40dd2c:	add	x4, x0, #0x538
  40dd30:	mov	w3, #0x3a0                 	// #928
  40dd34:	mov	x2, x1
  40dd38:	adrp	x0, 428000 <__func__.11909+0x280>
  40dd3c:	add	x1, x0, #0x110
  40dd40:	mov	w0, #0x0                   	// #0
  40dd44:	bl	405fd0 <log_assert_failed_realm@plt>
  40dd48:	ldr	x0, [x29, #608]
  40dd4c:	add	x0, x0, #0xf
  40dd50:	lsr	x0, x0, #4
  40dd54:	lsl	x0, x0, #4
  40dd58:	sub	sp, sp, x0
  40dd5c:	mov	x0, sp
  40dd60:	add	x0, x0, #0xf
  40dd64:	lsr	x0, x0, #4
  40dd68:	lsl	x0, x0, #4
  40dd6c:	str	x0, [x29, #616]
  40dd70:	ldr	x0, [x29, #616]
  40dd74:	str	x0, [x29, #128]
  40dd78:	str	xzr, [x29, #144]
  40dd7c:	b	40ddac <dispatch_message_real+0x684>
  40dd80:	ldr	x0, [x29, #144]
  40dd84:	lsl	x0, x0, #3
  40dd88:	add	x1, x29, #0x4e0
  40dd8c:	ldr	x0, [x1, x0]
  40dd90:	mov	x1, x0
  40dd94:	ldr	x0, [x29, #128]
  40dd98:	bl	405bc0 <stpcpy@plt>
  40dd9c:	str	x0, [x29, #128]
  40dda0:	ldr	x0, [x29, #144]
  40dda4:	add	x0, x0, #0x1
  40dda8:	str	x0, [x29, #144]
  40ddac:	ldr	x0, [x29, #144]
  40ddb0:	cmp	x0, #0x1
  40ddb4:	b.hi	40ddd0 <dispatch_message_real+0x6a8>  // b.pmore
  40ddb8:	ldr	x0, [x29, #144]
  40ddbc:	lsl	x0, x0, #3
  40ddc0:	add	x1, x29, #0x4e0
  40ddc4:	ldr	x0, [x1, x0]
  40ddc8:	cmp	x0, #0x0
  40ddcc:	b.ne	40dd80 <dispatch_message_real+0x658>  // b.any
  40ddd0:	ldr	x0, [x29, #128]
  40ddd4:	strb	wzr, [x0]
  40ddd8:	ldr	x0, [x29, #616]
  40dddc:	str	x0, [x29, #624]
  40dde0:	ldr	x0, [x29, #72]
  40dde4:	add	x1, x0, #0x1
  40dde8:	str	x1, [x29, #72]
  40ddec:	lsl	x0, x0, #4
  40ddf0:	ldr	x1, [x29, #80]
  40ddf4:	add	x19, x1, x0
  40ddf8:	ldr	x0, [x29, #624]
  40ddfc:	bl	406af0 <strlen@plt>
  40de00:	mov	x1, x0
  40de04:	ldr	x0, [x29, #624]
  40de08:	str	x0, [x19]
  40de0c:	str	x1, [x19, #8]
  40de10:	ldr	x0, [x29, #56]
  40de14:	ldr	x0, [x0, #40]
  40de18:	bl	4093bc <isempty>
  40de1c:	and	w0, w0, #0xff
  40de20:	eor	w0, w0, #0x1
  40de24:	and	w0, w0, #0xff
  40de28:	cmp	w0, #0x0
  40de2c:	b.eq	40e004 <dispatch_message_real+0x8dc>  // b.none
  40de30:	adrp	x0, 428000 <__func__.11909+0x280>
  40de34:	add	x0, x0, #0x9f0
  40de38:	str	x0, [x29, #1248]
  40de3c:	ldr	x0, [x29, #56]
  40de40:	ldr	x0, [x0, #40]
  40de44:	str	x0, [x29, #1256]
  40de48:	str	xzr, [x29, #160]
  40de4c:	str	xzr, [x29, #168]
  40de50:	b	40de84 <dispatch_message_real+0x75c>
  40de54:	ldr	x0, [x29, #168]
  40de58:	lsl	x0, x0, #3
  40de5c:	add	x1, x29, #0x4e0
  40de60:	ldr	x0, [x1, x0]
  40de64:	bl	406af0 <strlen@plt>
  40de68:	mov	x1, x0
  40de6c:	ldr	x0, [x29, #160]
  40de70:	add	x0, x0, x1
  40de74:	str	x0, [x29, #160]
  40de78:	ldr	x0, [x29, #168]
  40de7c:	add	x0, x0, #0x1
  40de80:	str	x0, [x29, #168]
  40de84:	ldr	x0, [x29, #168]
  40de88:	cmp	x0, #0x1
  40de8c:	b.hi	40dea8 <dispatch_message_real+0x780>  // b.pmore
  40de90:	ldr	x0, [x29, #168]
  40de94:	lsl	x0, x0, #3
  40de98:	add	x1, x29, #0x4e0
  40de9c:	ldr	x0, [x1, x0]
  40dea0:	cmp	x0, #0x0
  40dea4:	b.ne	40de54 <dispatch_message_real+0x72c>  // b.any
  40dea8:	ldr	x0, [x29, #160]
  40deac:	add	x0, x0, #0x1
  40deb0:	str	x0, [x29, #632]
  40deb4:	ldr	x1, [x29, #632]
  40deb8:	mov	x0, #0x1                   	// #1
  40debc:	bl	409118 <size_multiply_overflow>
  40dec0:	and	w0, w0, #0xff
  40dec4:	and	x0, x0, #0xff
  40dec8:	cmp	x0, #0x0
  40decc:	b.eq	40def8 <dispatch_message_real+0x7d0>  // b.none
  40ded0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ded4:	add	x1, x0, #0xe03
  40ded8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40dedc:	add	x4, x0, #0x538
  40dee0:	mov	w3, #0x3a1                 	// #929
  40dee4:	mov	x2, x1
  40dee8:	adrp	x0, 428000 <__func__.11909+0x280>
  40deec:	add	x1, x0, #0xe0
  40def0:	mov	w0, #0x0                   	// #0
  40def4:	bl	405fd0 <log_assert_failed_realm@plt>
  40def8:	ldr	x0, [x29, #632]
  40defc:	cmp	x0, #0x400, lsl #12
  40df00:	cset	w0, hi  // hi = pmore
  40df04:	and	w0, w0, #0xff
  40df08:	and	x0, x0, #0xff
  40df0c:	cmp	x0, #0x0
  40df10:	b.eq	40df3c <dispatch_message_real+0x814>  // b.none
  40df14:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40df18:	add	x1, x0, #0xe03
  40df1c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40df20:	add	x4, x0, #0x538
  40df24:	mov	w3, #0x3a1                 	// #929
  40df28:	mov	x2, x1
  40df2c:	adrp	x0, 428000 <__func__.11909+0x280>
  40df30:	add	x1, x0, #0x110
  40df34:	mov	w0, #0x0                   	// #0
  40df38:	bl	405fd0 <log_assert_failed_realm@plt>
  40df3c:	ldr	x0, [x29, #632]
  40df40:	add	x0, x0, #0xf
  40df44:	lsr	x0, x0, #4
  40df48:	lsl	x0, x0, #4
  40df4c:	sub	sp, sp, x0
  40df50:	mov	x0, sp
  40df54:	add	x0, x0, #0xf
  40df58:	lsr	x0, x0, #4
  40df5c:	lsl	x0, x0, #4
  40df60:	str	x0, [x29, #640]
  40df64:	ldr	x0, [x29, #640]
  40df68:	str	x0, [x29, #152]
  40df6c:	str	xzr, [x29, #168]
  40df70:	b	40dfa0 <dispatch_message_real+0x878>
  40df74:	ldr	x0, [x29, #168]
  40df78:	lsl	x0, x0, #3
  40df7c:	add	x1, x29, #0x4e0
  40df80:	ldr	x0, [x1, x0]
  40df84:	mov	x1, x0
  40df88:	ldr	x0, [x29, #152]
  40df8c:	bl	405bc0 <stpcpy@plt>
  40df90:	str	x0, [x29, #152]
  40df94:	ldr	x0, [x29, #168]
  40df98:	add	x0, x0, #0x1
  40df9c:	str	x0, [x29, #168]
  40dfa0:	ldr	x0, [x29, #168]
  40dfa4:	cmp	x0, #0x1
  40dfa8:	b.hi	40dfc4 <dispatch_message_real+0x89c>  // b.pmore
  40dfac:	ldr	x0, [x29, #168]
  40dfb0:	lsl	x0, x0, #3
  40dfb4:	add	x1, x29, #0x4e0
  40dfb8:	ldr	x0, [x1, x0]
  40dfbc:	cmp	x0, #0x0
  40dfc0:	b.ne	40df74 <dispatch_message_real+0x84c>  // b.any
  40dfc4:	ldr	x0, [x29, #152]
  40dfc8:	strb	wzr, [x0]
  40dfcc:	ldr	x0, [x29, #640]
  40dfd0:	str	x0, [x29, #648]
  40dfd4:	ldr	x0, [x29, #72]
  40dfd8:	add	x1, x0, #0x1
  40dfdc:	str	x1, [x29, #72]
  40dfe0:	lsl	x0, x0, #4
  40dfe4:	ldr	x1, [x29, #80]
  40dfe8:	add	x19, x1, x0
  40dfec:	ldr	x0, [x29, #648]
  40dff0:	bl	406af0 <strlen@plt>
  40dff4:	mov	x1, x0
  40dff8:	ldr	x0, [x29, #648]
  40dffc:	str	x0, [x19]
  40e000:	str	x1, [x19, #8]
  40e004:	ldr	x0, [x29, #56]
  40e008:	ldr	x0, [x0, #48]
  40e00c:	cmp	x0, #0x0
  40e010:	b.eq	40e038 <dispatch_message_real+0x910>  // b.none
  40e014:	ldr	x0, [x29, #56]
  40e018:	ldr	x0, [x0, #48]
  40e01c:	add	x1, x29, #0x48
  40e020:	mov	x3, x0
  40e024:	adrp	x0, 428000 <__func__.11909+0x280>
  40e028:	add	x2, x0, #0x9f8
  40e02c:	ldr	x0, [x29, #80]
  40e030:	bl	4064b0 <set_iovec_string_field@plt>
  40e034:	str	x0, [x29, #104]
  40e038:	ldr	x0, [x29, #56]
  40e03c:	ldr	x0, [x0, #56]
  40e040:	bl	4093bc <isempty>
  40e044:	and	w0, w0, #0xff
  40e048:	eor	w0, w0, #0x1
  40e04c:	and	w0, w0, #0xff
  40e050:	cmp	w0, #0x0
  40e054:	b.eq	40e22c <dispatch_message_real+0xb04>  // b.none
  40e058:	adrp	x0, 428000 <__func__.11909+0x280>
  40e05c:	add	x0, x0, #0xa08
  40e060:	str	x0, [x29, #1248]
  40e064:	ldr	x0, [x29, #56]
  40e068:	ldr	x0, [x0, #56]
  40e06c:	str	x0, [x29, #1256]
  40e070:	str	xzr, [x29, #184]
  40e074:	str	xzr, [x29, #192]
  40e078:	b	40e0ac <dispatch_message_real+0x984>
  40e07c:	ldr	x0, [x29, #192]
  40e080:	lsl	x0, x0, #3
  40e084:	add	x1, x29, #0x4e0
  40e088:	ldr	x0, [x1, x0]
  40e08c:	bl	406af0 <strlen@plt>
  40e090:	mov	x1, x0
  40e094:	ldr	x0, [x29, #184]
  40e098:	add	x0, x0, x1
  40e09c:	str	x0, [x29, #184]
  40e0a0:	ldr	x0, [x29, #192]
  40e0a4:	add	x0, x0, #0x1
  40e0a8:	str	x0, [x29, #192]
  40e0ac:	ldr	x0, [x29, #192]
  40e0b0:	cmp	x0, #0x1
  40e0b4:	b.hi	40e0d0 <dispatch_message_real+0x9a8>  // b.pmore
  40e0b8:	ldr	x0, [x29, #192]
  40e0bc:	lsl	x0, x0, #3
  40e0c0:	add	x1, x29, #0x4e0
  40e0c4:	ldr	x0, [x1, x0]
  40e0c8:	cmp	x0, #0x0
  40e0cc:	b.ne	40e07c <dispatch_message_real+0x954>  // b.any
  40e0d0:	ldr	x0, [x29, #184]
  40e0d4:	add	x0, x0, #0x1
  40e0d8:	str	x0, [x29, #656]
  40e0dc:	ldr	x1, [x29, #656]
  40e0e0:	mov	x0, #0x1                   	// #1
  40e0e4:	bl	409118 <size_multiply_overflow>
  40e0e8:	and	w0, w0, #0xff
  40e0ec:	and	x0, x0, #0xff
  40e0f0:	cmp	x0, #0x0
  40e0f4:	b.eq	40e120 <dispatch_message_real+0x9f8>  // b.none
  40e0f8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e0fc:	add	x1, x0, #0xe03
  40e100:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e104:	add	x4, x0, #0x538
  40e108:	mov	w3, #0x3a8                 	// #936
  40e10c:	mov	x2, x1
  40e110:	adrp	x0, 428000 <__func__.11909+0x280>
  40e114:	add	x1, x0, #0xe0
  40e118:	mov	w0, #0x0                   	// #0
  40e11c:	bl	405fd0 <log_assert_failed_realm@plt>
  40e120:	ldr	x0, [x29, #656]
  40e124:	cmp	x0, #0x400, lsl #12
  40e128:	cset	w0, hi  // hi = pmore
  40e12c:	and	w0, w0, #0xff
  40e130:	and	x0, x0, #0xff
  40e134:	cmp	x0, #0x0
  40e138:	b.eq	40e164 <dispatch_message_real+0xa3c>  // b.none
  40e13c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e140:	add	x1, x0, #0xe03
  40e144:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e148:	add	x4, x0, #0x538
  40e14c:	mov	w3, #0x3a8                 	// #936
  40e150:	mov	x2, x1
  40e154:	adrp	x0, 428000 <__func__.11909+0x280>
  40e158:	add	x1, x0, #0x110
  40e15c:	mov	w0, #0x0                   	// #0
  40e160:	bl	405fd0 <log_assert_failed_realm@plt>
  40e164:	ldr	x0, [x29, #656]
  40e168:	add	x0, x0, #0xf
  40e16c:	lsr	x0, x0, #4
  40e170:	lsl	x0, x0, #4
  40e174:	sub	sp, sp, x0
  40e178:	mov	x0, sp
  40e17c:	add	x0, x0, #0xf
  40e180:	lsr	x0, x0, #4
  40e184:	lsl	x0, x0, #4
  40e188:	str	x0, [x29, #664]
  40e18c:	ldr	x0, [x29, #664]
  40e190:	str	x0, [x29, #176]
  40e194:	str	xzr, [x29, #192]
  40e198:	b	40e1c8 <dispatch_message_real+0xaa0>
  40e19c:	ldr	x0, [x29, #192]
  40e1a0:	lsl	x0, x0, #3
  40e1a4:	add	x1, x29, #0x4e0
  40e1a8:	ldr	x0, [x1, x0]
  40e1ac:	mov	x1, x0
  40e1b0:	ldr	x0, [x29, #176]
  40e1b4:	bl	405bc0 <stpcpy@plt>
  40e1b8:	str	x0, [x29, #176]
  40e1bc:	ldr	x0, [x29, #192]
  40e1c0:	add	x0, x0, #0x1
  40e1c4:	str	x0, [x29, #192]
  40e1c8:	ldr	x0, [x29, #192]
  40e1cc:	cmp	x0, #0x1
  40e1d0:	b.hi	40e1ec <dispatch_message_real+0xac4>  // b.pmore
  40e1d4:	ldr	x0, [x29, #192]
  40e1d8:	lsl	x0, x0, #3
  40e1dc:	add	x1, x29, #0x4e0
  40e1e0:	ldr	x0, [x1, x0]
  40e1e4:	cmp	x0, #0x0
  40e1e8:	b.ne	40e19c <dispatch_message_real+0xa74>  // b.any
  40e1ec:	ldr	x0, [x29, #176]
  40e1f0:	strb	wzr, [x0]
  40e1f4:	ldr	x0, [x29, #664]
  40e1f8:	str	x0, [x29, #672]
  40e1fc:	ldr	x0, [x29, #72]
  40e200:	add	x1, x0, #0x1
  40e204:	str	x1, [x29, #72]
  40e208:	lsl	x0, x0, #4
  40e20c:	ldr	x1, [x29, #80]
  40e210:	add	x19, x1, x0
  40e214:	ldr	x0, [x29, #672]
  40e218:	bl	406af0 <strlen@plt>
  40e21c:	mov	x1, x0
  40e220:	ldr	x0, [x29, #672]
  40e224:	str	x0, [x19]
  40e228:	str	x1, [x19, #8]
  40e22c:	ldr	x0, [x29, #56]
  40e230:	ldr	x0, [x0, #152]
  40e234:	cmp	x0, #0x0
  40e238:	b.eq	40e378 <dispatch_message_real+0xc50>  // b.none
  40e23c:	ldr	x0, [x29, #56]
  40e240:	ldr	x0, [x0, #152]
  40e244:	add	x0, x0, #0x12
  40e248:	str	x0, [x29, #680]
  40e24c:	ldr	x1, [x29, #680]
  40e250:	mov	x0, #0x1                   	// #1
  40e254:	bl	409118 <size_multiply_overflow>
  40e258:	and	w0, w0, #0xff
  40e25c:	and	x0, x0, #0xff
  40e260:	cmp	x0, #0x0
  40e264:	b.eq	40e290 <dispatch_message_real+0xb68>  // b.none
  40e268:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e26c:	add	x1, x0, #0xe03
  40e270:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e274:	add	x4, x0, #0x538
  40e278:	mov	w3, #0x3a9                 	// #937
  40e27c:	mov	x2, x1
  40e280:	adrp	x0, 428000 <__func__.11909+0x280>
  40e284:	add	x1, x0, #0xe0
  40e288:	mov	w0, #0x0                   	// #0
  40e28c:	bl	405fd0 <log_assert_failed_realm@plt>
  40e290:	ldr	x0, [x29, #680]
  40e294:	cmp	x0, #0x400, lsl #12
  40e298:	cset	w0, hi  // hi = pmore
  40e29c:	and	w0, w0, #0xff
  40e2a0:	and	x0, x0, #0xff
  40e2a4:	cmp	x0, #0x0
  40e2a8:	b.eq	40e2d4 <dispatch_message_real+0xbac>  // b.none
  40e2ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e2b0:	add	x1, x0, #0xe03
  40e2b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e2b8:	add	x4, x0, #0x538
  40e2bc:	mov	w3, #0x3a9                 	// #937
  40e2c0:	mov	x2, x1
  40e2c4:	adrp	x0, 428000 <__func__.11909+0x280>
  40e2c8:	add	x1, x0, #0x110
  40e2cc:	mov	w0, #0x0                   	// #0
  40e2d0:	bl	405fd0 <log_assert_failed_realm@plt>
  40e2d4:	ldr	x0, [x29, #680]
  40e2d8:	add	x0, x0, #0xf
  40e2dc:	lsr	x0, x0, #4
  40e2e0:	lsl	x0, x0, #4
  40e2e4:	sub	sp, sp, x0
  40e2e8:	mov	x0, sp
  40e2ec:	add	x0, x0, #0xf
  40e2f0:	lsr	x0, x0, #4
  40e2f4:	lsl	x0, x0, #4
  40e2f8:	str	x0, [x29, #688]
  40e2fc:	ldr	x1, [x29, #688]
  40e300:	adrp	x0, 428000 <__func__.11909+0x280>
  40e304:	add	x0, x0, #0xa18
  40e308:	mov	x2, x1
  40e30c:	mov	x3, x0
  40e310:	ldp	x0, x1, [x3]
  40e314:	stp	x0, x1, [x2]
  40e318:	ldrh	w0, [x3, #16]
  40e31c:	strh	w0, [x2, #16]
  40e320:	ldr	x0, [x29, #688]
  40e324:	add	x3, x0, #0x11
  40e328:	ldr	x0, [x29, #56]
  40e32c:	ldr	x1, [x0, #144]
  40e330:	ldr	x0, [x29, #56]
  40e334:	ldr	x0, [x0, #152]
  40e338:	mov	x2, x0
  40e33c:	mov	x0, x3
  40e340:	bl	405c80 <mempcpy@plt>
  40e344:	strb	wzr, [x0]
  40e348:	ldr	x0, [x29, #72]
  40e34c:	add	x1, x0, #0x1
  40e350:	str	x1, [x29, #72]
  40e354:	lsl	x0, x0, #4
  40e358:	ldr	x1, [x29, #80]
  40e35c:	add	x19, x1, x0
  40e360:	ldr	x0, [x29, #688]
  40e364:	bl	406af0 <strlen@plt>
  40e368:	mov	x1, x0
  40e36c:	ldr	x0, [x29, #688]
  40e370:	str	x0, [x19]
  40e374:	str	x1, [x19, #8]
  40e378:	ldr	x0, [x29, #56]
  40e37c:	ldr	w0, [x0, #64]
  40e380:	bl	409194 <audit_session_is_valid>
  40e384:	and	w0, w0, #0xff
  40e388:	cmp	w0, #0x0
  40e38c:	b.eq	40e494 <dispatch_message_real+0xd6c>  // b.none
  40e390:	mov	x0, #0x1c                  	// #28
  40e394:	str	x0, [x29, #696]
  40e398:	ldr	x1, [x29, #696]
  40e39c:	mov	x0, #0x1                   	// #1
  40e3a0:	bl	409118 <size_multiply_overflow>
  40e3a4:	and	w0, w0, #0xff
  40e3a8:	and	x0, x0, #0xff
  40e3ac:	cmp	x0, #0x0
  40e3b0:	b.eq	40e3dc <dispatch_message_real+0xcb4>  // b.none
  40e3b4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e3b8:	add	x1, x0, #0xe03
  40e3bc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e3c0:	add	x4, x0, #0x538
  40e3c4:	mov	w3, #0x3aa                 	// #938
  40e3c8:	mov	x2, x1
  40e3cc:	adrp	x0, 428000 <__func__.11909+0x280>
  40e3d0:	add	x1, x0, #0xe0
  40e3d4:	mov	w0, #0x0                   	// #0
  40e3d8:	bl	405fd0 <log_assert_failed_realm@plt>
  40e3dc:	ldr	x0, [x29, #696]
  40e3e0:	cmp	x0, #0x400, lsl #12
  40e3e4:	cset	w0, hi  // hi = pmore
  40e3e8:	and	w0, w0, #0xff
  40e3ec:	and	x0, x0, #0xff
  40e3f0:	cmp	x0, #0x0
  40e3f4:	b.eq	40e420 <dispatch_message_real+0xcf8>  // b.none
  40e3f8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e3fc:	add	x1, x0, #0xe03
  40e400:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e404:	add	x4, x0, #0x538
  40e408:	mov	w3, #0x3aa                 	// #938
  40e40c:	mov	x2, x1
  40e410:	adrp	x0, 428000 <__func__.11909+0x280>
  40e414:	add	x1, x0, #0x110
  40e418:	mov	w0, #0x0                   	// #0
  40e41c:	bl	405fd0 <log_assert_failed_realm@plt>
  40e420:	ldr	x0, [x29, #696]
  40e424:	add	x0, x0, #0xf
  40e428:	lsr	x0, x0, #4
  40e42c:	lsl	x0, x0, #4
  40e430:	sub	sp, sp, x0
  40e434:	mov	x0, sp
  40e438:	add	x0, x0, #0xf
  40e43c:	lsr	x0, x0, #4
  40e440:	lsl	x0, x0, #4
  40e444:	str	x0, [x29, #704]
  40e448:	ldr	x0, [x29, #56]
  40e44c:	ldr	w0, [x0, #64]
  40e450:	mov	w2, w0
  40e454:	adrp	x0, 428000 <__func__.11909+0x280>
  40e458:	add	x1, x0, #0xa30
  40e45c:	ldr	x0, [x29, #704]
  40e460:	bl	4069c0 <sprintf@plt>
  40e464:	ldr	x0, [x29, #72]
  40e468:	add	x1, x0, #0x1
  40e46c:	str	x1, [x29, #72]
  40e470:	lsl	x0, x0, #4
  40e474:	ldr	x1, [x29, #80]
  40e478:	add	x19, x1, x0
  40e47c:	ldr	x0, [x29, #704]
  40e480:	bl	406af0 <strlen@plt>
  40e484:	mov	x1, x0
  40e488:	ldr	x0, [x29, #704]
  40e48c:	str	x0, [x19]
  40e490:	str	x1, [x19, #8]
  40e494:	ldr	x0, [x29, #56]
  40e498:	ldr	w0, [x0, #68]
  40e49c:	bl	4061c0 <uid_is_valid@plt>
  40e4a0:	and	w0, w0, #0xff
  40e4a4:	cmp	w0, #0x0
  40e4a8:	b.eq	40e5b0 <dispatch_message_real+0xe88>  // b.none
  40e4ac:	mov	x0, #0x1d                  	// #29
  40e4b0:	str	x0, [x29, #712]
  40e4b4:	ldr	x1, [x29, #712]
  40e4b8:	mov	x0, #0x1                   	// #1
  40e4bc:	bl	409118 <size_multiply_overflow>
  40e4c0:	and	w0, w0, #0xff
  40e4c4:	and	x0, x0, #0xff
  40e4c8:	cmp	x0, #0x0
  40e4cc:	b.eq	40e4f8 <dispatch_message_real+0xdd0>  // b.none
  40e4d0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e4d4:	add	x1, x0, #0xe03
  40e4d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e4dc:	add	x4, x0, #0x538
  40e4e0:	mov	w3, #0x3ab                 	// #939
  40e4e4:	mov	x2, x1
  40e4e8:	adrp	x0, 428000 <__func__.11909+0x280>
  40e4ec:	add	x1, x0, #0xe0
  40e4f0:	mov	w0, #0x0                   	// #0
  40e4f4:	bl	405fd0 <log_assert_failed_realm@plt>
  40e4f8:	ldr	x0, [x29, #712]
  40e4fc:	cmp	x0, #0x400, lsl #12
  40e500:	cset	w0, hi  // hi = pmore
  40e504:	and	w0, w0, #0xff
  40e508:	and	x0, x0, #0xff
  40e50c:	cmp	x0, #0x0
  40e510:	b.eq	40e53c <dispatch_message_real+0xe14>  // b.none
  40e514:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e518:	add	x1, x0, #0xe03
  40e51c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e520:	add	x4, x0, #0x538
  40e524:	mov	w3, #0x3ab                 	// #939
  40e528:	mov	x2, x1
  40e52c:	adrp	x0, 428000 <__func__.11909+0x280>
  40e530:	add	x1, x0, #0x110
  40e534:	mov	w0, #0x0                   	// #0
  40e538:	bl	405fd0 <log_assert_failed_realm@plt>
  40e53c:	ldr	x0, [x29, #712]
  40e540:	add	x0, x0, #0xf
  40e544:	lsr	x0, x0, #4
  40e548:	lsl	x0, x0, #4
  40e54c:	sub	sp, sp, x0
  40e550:	mov	x0, sp
  40e554:	add	x0, x0, #0xf
  40e558:	lsr	x0, x0, #4
  40e55c:	lsl	x0, x0, #4
  40e560:	str	x0, [x29, #720]
  40e564:	ldr	x0, [x29, #56]
  40e568:	ldr	w0, [x0, #68]
  40e56c:	mov	w2, w0
  40e570:	adrp	x0, 428000 <__func__.11909+0x280>
  40e574:	add	x1, x0, #0xa48
  40e578:	ldr	x0, [x29, #720]
  40e57c:	bl	4069c0 <sprintf@plt>
  40e580:	ldr	x0, [x29, #72]
  40e584:	add	x1, x0, #0x1
  40e588:	str	x1, [x29, #72]
  40e58c:	lsl	x0, x0, #4
  40e590:	ldr	x1, [x29, #80]
  40e594:	add	x19, x1, x0
  40e598:	ldr	x0, [x29, #720]
  40e59c:	bl	406af0 <strlen@plt>
  40e5a0:	mov	x1, x0
  40e5a4:	ldr	x0, [x29, #720]
  40e5a8:	str	x0, [x19]
  40e5ac:	str	x1, [x19, #8]
  40e5b0:	ldr	x0, [x29, #56]
  40e5b4:	ldr	x0, [x0, #72]
  40e5b8:	bl	4093bc <isempty>
  40e5bc:	and	w0, w0, #0xff
  40e5c0:	eor	w0, w0, #0x1
  40e5c4:	and	w0, w0, #0xff
  40e5c8:	cmp	w0, #0x0
  40e5cc:	b.eq	40e7a4 <dispatch_message_real+0x107c>  // b.none
  40e5d0:	adrp	x0, 428000 <__func__.11909+0x280>
  40e5d4:	add	x0, x0, #0xa60
  40e5d8:	str	x0, [x29, #1248]
  40e5dc:	ldr	x0, [x29, #56]
  40e5e0:	ldr	x0, [x0, #72]
  40e5e4:	str	x0, [x29, #1256]
  40e5e8:	str	xzr, [x29, #208]
  40e5ec:	str	xzr, [x29, #216]
  40e5f0:	b	40e624 <dispatch_message_real+0xefc>
  40e5f4:	ldr	x0, [x29, #216]
  40e5f8:	lsl	x0, x0, #3
  40e5fc:	add	x1, x29, #0x4e0
  40e600:	ldr	x0, [x1, x0]
  40e604:	bl	406af0 <strlen@plt>
  40e608:	mov	x1, x0
  40e60c:	ldr	x0, [x29, #208]
  40e610:	add	x0, x0, x1
  40e614:	str	x0, [x29, #208]
  40e618:	ldr	x0, [x29, #216]
  40e61c:	add	x0, x0, #0x1
  40e620:	str	x0, [x29, #216]
  40e624:	ldr	x0, [x29, #216]
  40e628:	cmp	x0, #0x1
  40e62c:	b.hi	40e648 <dispatch_message_real+0xf20>  // b.pmore
  40e630:	ldr	x0, [x29, #216]
  40e634:	lsl	x0, x0, #3
  40e638:	add	x1, x29, #0x4e0
  40e63c:	ldr	x0, [x1, x0]
  40e640:	cmp	x0, #0x0
  40e644:	b.ne	40e5f4 <dispatch_message_real+0xecc>  // b.any
  40e648:	ldr	x0, [x29, #208]
  40e64c:	add	x0, x0, #0x1
  40e650:	str	x0, [x29, #728]
  40e654:	ldr	x1, [x29, #728]
  40e658:	mov	x0, #0x1                   	// #1
  40e65c:	bl	409118 <size_multiply_overflow>
  40e660:	and	w0, w0, #0xff
  40e664:	and	x0, x0, #0xff
  40e668:	cmp	x0, #0x0
  40e66c:	b.eq	40e698 <dispatch_message_real+0xf70>  // b.none
  40e670:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e674:	add	x1, x0, #0xe03
  40e678:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e67c:	add	x4, x0, #0x538
  40e680:	mov	w3, #0x3ad                 	// #941
  40e684:	mov	x2, x1
  40e688:	adrp	x0, 428000 <__func__.11909+0x280>
  40e68c:	add	x1, x0, #0xe0
  40e690:	mov	w0, #0x0                   	// #0
  40e694:	bl	405fd0 <log_assert_failed_realm@plt>
  40e698:	ldr	x0, [x29, #728]
  40e69c:	cmp	x0, #0x400, lsl #12
  40e6a0:	cset	w0, hi  // hi = pmore
  40e6a4:	and	w0, w0, #0xff
  40e6a8:	and	x0, x0, #0xff
  40e6ac:	cmp	x0, #0x0
  40e6b0:	b.eq	40e6dc <dispatch_message_real+0xfb4>  // b.none
  40e6b4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e6b8:	add	x1, x0, #0xe03
  40e6bc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e6c0:	add	x4, x0, #0x538
  40e6c4:	mov	w3, #0x3ad                 	// #941
  40e6c8:	mov	x2, x1
  40e6cc:	adrp	x0, 428000 <__func__.11909+0x280>
  40e6d0:	add	x1, x0, #0x110
  40e6d4:	mov	w0, #0x0                   	// #0
  40e6d8:	bl	405fd0 <log_assert_failed_realm@plt>
  40e6dc:	ldr	x0, [x29, #728]
  40e6e0:	add	x0, x0, #0xf
  40e6e4:	lsr	x0, x0, #4
  40e6e8:	lsl	x0, x0, #4
  40e6ec:	sub	sp, sp, x0
  40e6f0:	mov	x0, sp
  40e6f4:	add	x0, x0, #0xf
  40e6f8:	lsr	x0, x0, #4
  40e6fc:	lsl	x0, x0, #4
  40e700:	str	x0, [x29, #736]
  40e704:	ldr	x0, [x29, #736]
  40e708:	str	x0, [x29, #200]
  40e70c:	str	xzr, [x29, #216]
  40e710:	b	40e740 <dispatch_message_real+0x1018>
  40e714:	ldr	x0, [x29, #216]
  40e718:	lsl	x0, x0, #3
  40e71c:	add	x1, x29, #0x4e0
  40e720:	ldr	x0, [x1, x0]
  40e724:	mov	x1, x0
  40e728:	ldr	x0, [x29, #200]
  40e72c:	bl	405bc0 <stpcpy@plt>
  40e730:	str	x0, [x29, #200]
  40e734:	ldr	x0, [x29, #216]
  40e738:	add	x0, x0, #0x1
  40e73c:	str	x0, [x29, #216]
  40e740:	ldr	x0, [x29, #216]
  40e744:	cmp	x0, #0x1
  40e748:	b.hi	40e764 <dispatch_message_real+0x103c>  // b.pmore
  40e74c:	ldr	x0, [x29, #216]
  40e750:	lsl	x0, x0, #3
  40e754:	add	x1, x29, #0x4e0
  40e758:	ldr	x0, [x1, x0]
  40e75c:	cmp	x0, #0x0
  40e760:	b.ne	40e714 <dispatch_message_real+0xfec>  // b.any
  40e764:	ldr	x0, [x29, #200]
  40e768:	strb	wzr, [x0]
  40e76c:	ldr	x0, [x29, #736]
  40e770:	str	x0, [x29, #744]
  40e774:	ldr	x0, [x29, #72]
  40e778:	add	x1, x0, #0x1
  40e77c:	str	x1, [x29, #72]
  40e780:	lsl	x0, x0, #4
  40e784:	ldr	x1, [x29, #80]
  40e788:	add	x19, x1, x0
  40e78c:	ldr	x0, [x29, #744]
  40e790:	bl	406af0 <strlen@plt>
  40e794:	mov	x1, x0
  40e798:	ldr	x0, [x29, #744]
  40e79c:	str	x0, [x19]
  40e7a0:	str	x1, [x19, #8]
  40e7a4:	ldr	x0, [x29, #56]
  40e7a8:	ldr	x0, [x0, #80]
  40e7ac:	bl	4093bc <isempty>
  40e7b0:	and	w0, w0, #0xff
  40e7b4:	eor	w0, w0, #0x1
  40e7b8:	and	w0, w0, #0xff
  40e7bc:	cmp	w0, #0x0
  40e7c0:	b.eq	40e998 <dispatch_message_real+0x1270>  // b.none
  40e7c4:	adrp	x0, 428000 <__func__.11909+0x280>
  40e7c8:	add	x0, x0, #0xa78
  40e7cc:	str	x0, [x29, #1248]
  40e7d0:	ldr	x0, [x29, #56]
  40e7d4:	ldr	x0, [x0, #80]
  40e7d8:	str	x0, [x29, #1256]
  40e7dc:	str	xzr, [x29, #232]
  40e7e0:	str	xzr, [x29, #240]
  40e7e4:	b	40e818 <dispatch_message_real+0x10f0>
  40e7e8:	ldr	x0, [x29, #240]
  40e7ec:	lsl	x0, x0, #3
  40e7f0:	add	x1, x29, #0x4e0
  40e7f4:	ldr	x0, [x1, x0]
  40e7f8:	bl	406af0 <strlen@plt>
  40e7fc:	mov	x1, x0
  40e800:	ldr	x0, [x29, #232]
  40e804:	add	x0, x0, x1
  40e808:	str	x0, [x29, #232]
  40e80c:	ldr	x0, [x29, #240]
  40e810:	add	x0, x0, #0x1
  40e814:	str	x0, [x29, #240]
  40e818:	ldr	x0, [x29, #240]
  40e81c:	cmp	x0, #0x1
  40e820:	b.hi	40e83c <dispatch_message_real+0x1114>  // b.pmore
  40e824:	ldr	x0, [x29, #240]
  40e828:	lsl	x0, x0, #3
  40e82c:	add	x1, x29, #0x4e0
  40e830:	ldr	x0, [x1, x0]
  40e834:	cmp	x0, #0x0
  40e838:	b.ne	40e7e8 <dispatch_message_real+0x10c0>  // b.any
  40e83c:	ldr	x0, [x29, #232]
  40e840:	add	x0, x0, #0x1
  40e844:	str	x0, [x29, #752]
  40e848:	ldr	x1, [x29, #752]
  40e84c:	mov	x0, #0x1                   	// #1
  40e850:	bl	409118 <size_multiply_overflow>
  40e854:	and	w0, w0, #0xff
  40e858:	and	x0, x0, #0xff
  40e85c:	cmp	x0, #0x0
  40e860:	b.eq	40e88c <dispatch_message_real+0x1164>  // b.none
  40e864:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e868:	add	x1, x0, #0xe03
  40e86c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e870:	add	x4, x0, #0x538
  40e874:	mov	w3, #0x3ae                 	// #942
  40e878:	mov	x2, x1
  40e87c:	adrp	x0, 428000 <__func__.11909+0x280>
  40e880:	add	x1, x0, #0xe0
  40e884:	mov	w0, #0x0                   	// #0
  40e888:	bl	405fd0 <log_assert_failed_realm@plt>
  40e88c:	ldr	x0, [x29, #752]
  40e890:	cmp	x0, #0x400, lsl #12
  40e894:	cset	w0, hi  // hi = pmore
  40e898:	and	w0, w0, #0xff
  40e89c:	and	x0, x0, #0xff
  40e8a0:	cmp	x0, #0x0
  40e8a4:	b.eq	40e8d0 <dispatch_message_real+0x11a8>  // b.none
  40e8a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e8ac:	add	x1, x0, #0xe03
  40e8b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e8b4:	add	x4, x0, #0x538
  40e8b8:	mov	w3, #0x3ae                 	// #942
  40e8bc:	mov	x2, x1
  40e8c0:	adrp	x0, 428000 <__func__.11909+0x280>
  40e8c4:	add	x1, x0, #0x110
  40e8c8:	mov	w0, #0x0                   	// #0
  40e8cc:	bl	405fd0 <log_assert_failed_realm@plt>
  40e8d0:	ldr	x0, [x29, #752]
  40e8d4:	add	x0, x0, #0xf
  40e8d8:	lsr	x0, x0, #4
  40e8dc:	lsl	x0, x0, #4
  40e8e0:	sub	sp, sp, x0
  40e8e4:	mov	x0, sp
  40e8e8:	add	x0, x0, #0xf
  40e8ec:	lsr	x0, x0, #4
  40e8f0:	lsl	x0, x0, #4
  40e8f4:	str	x0, [x29, #760]
  40e8f8:	ldr	x0, [x29, #760]
  40e8fc:	str	x0, [x29, #224]
  40e900:	str	xzr, [x29, #240]
  40e904:	b	40e934 <dispatch_message_real+0x120c>
  40e908:	ldr	x0, [x29, #240]
  40e90c:	lsl	x0, x0, #3
  40e910:	add	x1, x29, #0x4e0
  40e914:	ldr	x0, [x1, x0]
  40e918:	mov	x1, x0
  40e91c:	ldr	x0, [x29, #224]
  40e920:	bl	405bc0 <stpcpy@plt>
  40e924:	str	x0, [x29, #224]
  40e928:	ldr	x0, [x29, #240]
  40e92c:	add	x0, x0, #0x1
  40e930:	str	x0, [x29, #240]
  40e934:	ldr	x0, [x29, #240]
  40e938:	cmp	x0, #0x1
  40e93c:	b.hi	40e958 <dispatch_message_real+0x1230>  // b.pmore
  40e940:	ldr	x0, [x29, #240]
  40e944:	lsl	x0, x0, #3
  40e948:	add	x1, x29, #0x4e0
  40e94c:	ldr	x0, [x1, x0]
  40e950:	cmp	x0, #0x0
  40e954:	b.ne	40e908 <dispatch_message_real+0x11e0>  // b.any
  40e958:	ldr	x0, [x29, #224]
  40e95c:	strb	wzr, [x0]
  40e960:	ldr	x0, [x29, #760]
  40e964:	str	x0, [x29, #768]
  40e968:	ldr	x0, [x29, #72]
  40e96c:	add	x1, x0, #0x1
  40e970:	str	x1, [x29, #72]
  40e974:	lsl	x0, x0, #4
  40e978:	ldr	x1, [x29, #80]
  40e97c:	add	x19, x1, x0
  40e980:	ldr	x0, [x29, #768]
  40e984:	bl	406af0 <strlen@plt>
  40e988:	mov	x1, x0
  40e98c:	ldr	x0, [x29, #768]
  40e990:	str	x0, [x19]
  40e994:	str	x1, [x19, #8]
  40e998:	ldr	x0, [x29, #56]
  40e99c:	ldr	w0, [x0, #88]
  40e9a0:	bl	4061c0 <uid_is_valid@plt>
  40e9a4:	and	w0, w0, #0xff
  40e9a8:	cmp	w0, #0x0
  40e9ac:	b.eq	40eab4 <dispatch_message_real+0x138c>  // b.none
  40e9b0:	mov	x0, #0x20                  	// #32
  40e9b4:	str	x0, [x29, #776]
  40e9b8:	ldr	x1, [x29, #776]
  40e9bc:	mov	x0, #0x1                   	// #1
  40e9c0:	bl	409118 <size_multiply_overflow>
  40e9c4:	and	w0, w0, #0xff
  40e9c8:	and	x0, x0, #0xff
  40e9cc:	cmp	x0, #0x0
  40e9d0:	b.eq	40e9fc <dispatch_message_real+0x12d4>  // b.none
  40e9d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40e9d8:	add	x1, x0, #0xe03
  40e9dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40e9e0:	add	x4, x0, #0x538
  40e9e4:	mov	w3, #0x3af                 	// #943
  40e9e8:	mov	x2, x1
  40e9ec:	adrp	x0, 428000 <__func__.11909+0x280>
  40e9f0:	add	x1, x0, #0xe0
  40e9f4:	mov	w0, #0x0                   	// #0
  40e9f8:	bl	405fd0 <log_assert_failed_realm@plt>
  40e9fc:	ldr	x0, [x29, #776]
  40ea00:	cmp	x0, #0x400, lsl #12
  40ea04:	cset	w0, hi  // hi = pmore
  40ea08:	and	w0, w0, #0xff
  40ea0c:	and	x0, x0, #0xff
  40ea10:	cmp	x0, #0x0
  40ea14:	b.eq	40ea40 <dispatch_message_real+0x1318>  // b.none
  40ea18:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ea1c:	add	x1, x0, #0xe03
  40ea20:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ea24:	add	x4, x0, #0x538
  40ea28:	mov	w3, #0x3af                 	// #943
  40ea2c:	mov	x2, x1
  40ea30:	adrp	x0, 428000 <__func__.11909+0x280>
  40ea34:	add	x1, x0, #0x110
  40ea38:	mov	w0, #0x0                   	// #0
  40ea3c:	bl	405fd0 <log_assert_failed_realm@plt>
  40ea40:	ldr	x0, [x29, #776]
  40ea44:	add	x0, x0, #0xf
  40ea48:	lsr	x0, x0, #4
  40ea4c:	lsl	x0, x0, #4
  40ea50:	sub	sp, sp, x0
  40ea54:	mov	x0, sp
  40ea58:	add	x0, x0, #0xf
  40ea5c:	lsr	x0, x0, #4
  40ea60:	lsl	x0, x0, #4
  40ea64:	str	x0, [x29, #784]
  40ea68:	ldr	x0, [x29, #56]
  40ea6c:	ldr	w0, [x0, #88]
  40ea70:	mov	w2, w0
  40ea74:	adrp	x0, 428000 <__func__.11909+0x280>
  40ea78:	add	x1, x0, #0xa90
  40ea7c:	ldr	x0, [x29, #784]
  40ea80:	bl	4069c0 <sprintf@plt>
  40ea84:	ldr	x0, [x29, #72]
  40ea88:	add	x1, x0, #0x1
  40ea8c:	str	x1, [x29, #72]
  40ea90:	lsl	x0, x0, #4
  40ea94:	ldr	x1, [x29, #80]
  40ea98:	add	x19, x1, x0
  40ea9c:	ldr	x0, [x29, #784]
  40eaa0:	bl	406af0 <strlen@plt>
  40eaa4:	mov	x1, x0
  40eaa8:	ldr	x0, [x29, #784]
  40eaac:	str	x0, [x19]
  40eab0:	str	x1, [x19, #8]
  40eab4:	ldr	x0, [x29, #56]
  40eab8:	ldr	x0, [x0, #96]
  40eabc:	bl	4093bc <isempty>
  40eac0:	and	w0, w0, #0xff
  40eac4:	eor	w0, w0, #0x1
  40eac8:	and	w0, w0, #0xff
  40eacc:	cmp	w0, #0x0
  40ead0:	b.eq	40eca8 <dispatch_message_real+0x1580>  // b.none
  40ead4:	adrp	x0, 428000 <__func__.11909+0x280>
  40ead8:	add	x0, x0, #0xaa8
  40eadc:	str	x0, [x29, #1248]
  40eae0:	ldr	x0, [x29, #56]
  40eae4:	ldr	x0, [x0, #96]
  40eae8:	str	x0, [x29, #1256]
  40eaec:	str	xzr, [x29, #256]
  40eaf0:	str	xzr, [x29, #264]
  40eaf4:	b	40eb28 <dispatch_message_real+0x1400>
  40eaf8:	ldr	x0, [x29, #264]
  40eafc:	lsl	x0, x0, #3
  40eb00:	add	x1, x29, #0x4e0
  40eb04:	ldr	x0, [x1, x0]
  40eb08:	bl	406af0 <strlen@plt>
  40eb0c:	mov	x1, x0
  40eb10:	ldr	x0, [x29, #256]
  40eb14:	add	x0, x0, x1
  40eb18:	str	x0, [x29, #256]
  40eb1c:	ldr	x0, [x29, #264]
  40eb20:	add	x0, x0, #0x1
  40eb24:	str	x0, [x29, #264]
  40eb28:	ldr	x0, [x29, #264]
  40eb2c:	cmp	x0, #0x1
  40eb30:	b.hi	40eb4c <dispatch_message_real+0x1424>  // b.pmore
  40eb34:	ldr	x0, [x29, #264]
  40eb38:	lsl	x0, x0, #3
  40eb3c:	add	x1, x29, #0x4e0
  40eb40:	ldr	x0, [x1, x0]
  40eb44:	cmp	x0, #0x0
  40eb48:	b.ne	40eaf8 <dispatch_message_real+0x13d0>  // b.any
  40eb4c:	ldr	x0, [x29, #256]
  40eb50:	add	x0, x0, #0x1
  40eb54:	str	x0, [x29, #792]
  40eb58:	ldr	x1, [x29, #792]
  40eb5c:	mov	x0, #0x1                   	// #1
  40eb60:	bl	409118 <size_multiply_overflow>
  40eb64:	and	w0, w0, #0xff
  40eb68:	and	x0, x0, #0xff
  40eb6c:	cmp	x0, #0x0
  40eb70:	b.eq	40eb9c <dispatch_message_real+0x1474>  // b.none
  40eb74:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40eb78:	add	x1, x0, #0xe03
  40eb7c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40eb80:	add	x4, x0, #0x538
  40eb84:	mov	w3, #0x3b0                 	// #944
  40eb88:	mov	x2, x1
  40eb8c:	adrp	x0, 428000 <__func__.11909+0x280>
  40eb90:	add	x1, x0, #0xe0
  40eb94:	mov	w0, #0x0                   	// #0
  40eb98:	bl	405fd0 <log_assert_failed_realm@plt>
  40eb9c:	ldr	x0, [x29, #792]
  40eba0:	cmp	x0, #0x400, lsl #12
  40eba4:	cset	w0, hi  // hi = pmore
  40eba8:	and	w0, w0, #0xff
  40ebac:	and	x0, x0, #0xff
  40ebb0:	cmp	x0, #0x0
  40ebb4:	b.eq	40ebe0 <dispatch_message_real+0x14b8>  // b.none
  40ebb8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ebbc:	add	x1, x0, #0xe03
  40ebc0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ebc4:	add	x4, x0, #0x538
  40ebc8:	mov	w3, #0x3b0                 	// #944
  40ebcc:	mov	x2, x1
  40ebd0:	adrp	x0, 428000 <__func__.11909+0x280>
  40ebd4:	add	x1, x0, #0x110
  40ebd8:	mov	w0, #0x0                   	// #0
  40ebdc:	bl	405fd0 <log_assert_failed_realm@plt>
  40ebe0:	ldr	x0, [x29, #792]
  40ebe4:	add	x0, x0, #0xf
  40ebe8:	lsr	x0, x0, #4
  40ebec:	lsl	x0, x0, #4
  40ebf0:	sub	sp, sp, x0
  40ebf4:	mov	x0, sp
  40ebf8:	add	x0, x0, #0xf
  40ebfc:	lsr	x0, x0, #4
  40ec00:	lsl	x0, x0, #4
  40ec04:	str	x0, [x29, #800]
  40ec08:	ldr	x0, [x29, #800]
  40ec0c:	str	x0, [x29, #248]
  40ec10:	str	xzr, [x29, #264]
  40ec14:	b	40ec44 <dispatch_message_real+0x151c>
  40ec18:	ldr	x0, [x29, #264]
  40ec1c:	lsl	x0, x0, #3
  40ec20:	add	x1, x29, #0x4e0
  40ec24:	ldr	x0, [x1, x0]
  40ec28:	mov	x1, x0
  40ec2c:	ldr	x0, [x29, #248]
  40ec30:	bl	405bc0 <stpcpy@plt>
  40ec34:	str	x0, [x29, #248]
  40ec38:	ldr	x0, [x29, #264]
  40ec3c:	add	x0, x0, #0x1
  40ec40:	str	x0, [x29, #264]
  40ec44:	ldr	x0, [x29, #264]
  40ec48:	cmp	x0, #0x1
  40ec4c:	b.hi	40ec68 <dispatch_message_real+0x1540>  // b.pmore
  40ec50:	ldr	x0, [x29, #264]
  40ec54:	lsl	x0, x0, #3
  40ec58:	add	x1, x29, #0x4e0
  40ec5c:	ldr	x0, [x1, x0]
  40ec60:	cmp	x0, #0x0
  40ec64:	b.ne	40ec18 <dispatch_message_real+0x14f0>  // b.any
  40ec68:	ldr	x0, [x29, #248]
  40ec6c:	strb	wzr, [x0]
  40ec70:	ldr	x0, [x29, #800]
  40ec74:	str	x0, [x29, #808]
  40ec78:	ldr	x0, [x29, #72]
  40ec7c:	add	x1, x0, #0x1
  40ec80:	str	x1, [x29, #72]
  40ec84:	lsl	x0, x0, #4
  40ec88:	ldr	x1, [x29, #80]
  40ec8c:	add	x19, x1, x0
  40ec90:	ldr	x0, [x29, #808]
  40ec94:	bl	406af0 <strlen@plt>
  40ec98:	mov	x1, x0
  40ec9c:	ldr	x0, [x29, #808]
  40eca0:	str	x0, [x19]
  40eca4:	str	x1, [x19, #8]
  40eca8:	ldr	x0, [x29, #56]
  40ecac:	ldr	x0, [x0, #104]
  40ecb0:	bl	4093bc <isempty>
  40ecb4:	and	w0, w0, #0xff
  40ecb8:	eor	w0, w0, #0x1
  40ecbc:	and	w0, w0, #0xff
  40ecc0:	cmp	w0, #0x0
  40ecc4:	b.eq	40ee9c <dispatch_message_real+0x1774>  // b.none
  40ecc8:	adrp	x0, 428000 <__func__.11909+0x280>
  40eccc:	add	x0, x0, #0xab8
  40ecd0:	str	x0, [x29, #1248]
  40ecd4:	ldr	x0, [x29, #56]
  40ecd8:	ldr	x0, [x0, #104]
  40ecdc:	str	x0, [x29, #1256]
  40ece0:	str	xzr, [x29, #280]
  40ece4:	str	xzr, [x29, #288]
  40ece8:	b	40ed1c <dispatch_message_real+0x15f4>
  40ecec:	ldr	x0, [x29, #288]
  40ecf0:	lsl	x0, x0, #3
  40ecf4:	add	x1, x29, #0x4e0
  40ecf8:	ldr	x0, [x1, x0]
  40ecfc:	bl	406af0 <strlen@plt>
  40ed00:	mov	x1, x0
  40ed04:	ldr	x0, [x29, #280]
  40ed08:	add	x0, x0, x1
  40ed0c:	str	x0, [x29, #280]
  40ed10:	ldr	x0, [x29, #288]
  40ed14:	add	x0, x0, #0x1
  40ed18:	str	x0, [x29, #288]
  40ed1c:	ldr	x0, [x29, #288]
  40ed20:	cmp	x0, #0x1
  40ed24:	b.hi	40ed40 <dispatch_message_real+0x1618>  // b.pmore
  40ed28:	ldr	x0, [x29, #288]
  40ed2c:	lsl	x0, x0, #3
  40ed30:	add	x1, x29, #0x4e0
  40ed34:	ldr	x0, [x1, x0]
  40ed38:	cmp	x0, #0x0
  40ed3c:	b.ne	40ecec <dispatch_message_real+0x15c4>  // b.any
  40ed40:	ldr	x0, [x29, #280]
  40ed44:	add	x0, x0, #0x1
  40ed48:	str	x0, [x29, #816]
  40ed4c:	ldr	x1, [x29, #816]
  40ed50:	mov	x0, #0x1                   	// #1
  40ed54:	bl	409118 <size_multiply_overflow>
  40ed58:	and	w0, w0, #0xff
  40ed5c:	and	x0, x0, #0xff
  40ed60:	cmp	x0, #0x0
  40ed64:	b.eq	40ed90 <dispatch_message_real+0x1668>  // b.none
  40ed68:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ed6c:	add	x1, x0, #0xe03
  40ed70:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ed74:	add	x4, x0, #0x538
  40ed78:	mov	w3, #0x3b1                 	// #945
  40ed7c:	mov	x2, x1
  40ed80:	adrp	x0, 428000 <__func__.11909+0x280>
  40ed84:	add	x1, x0, #0xe0
  40ed88:	mov	w0, #0x0                   	// #0
  40ed8c:	bl	405fd0 <log_assert_failed_realm@plt>
  40ed90:	ldr	x0, [x29, #816]
  40ed94:	cmp	x0, #0x400, lsl #12
  40ed98:	cset	w0, hi  // hi = pmore
  40ed9c:	and	w0, w0, #0xff
  40eda0:	and	x0, x0, #0xff
  40eda4:	cmp	x0, #0x0
  40eda8:	b.eq	40edd4 <dispatch_message_real+0x16ac>  // b.none
  40edac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40edb0:	add	x1, x0, #0xe03
  40edb4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40edb8:	add	x4, x0, #0x538
  40edbc:	mov	w3, #0x3b1                 	// #945
  40edc0:	mov	x2, x1
  40edc4:	adrp	x0, 428000 <__func__.11909+0x280>
  40edc8:	add	x1, x0, #0x110
  40edcc:	mov	w0, #0x0                   	// #0
  40edd0:	bl	405fd0 <log_assert_failed_realm@plt>
  40edd4:	ldr	x0, [x29, #816]
  40edd8:	add	x0, x0, #0xf
  40eddc:	lsr	x0, x0, #4
  40ede0:	lsl	x0, x0, #4
  40ede4:	sub	sp, sp, x0
  40ede8:	mov	x0, sp
  40edec:	add	x0, x0, #0xf
  40edf0:	lsr	x0, x0, #4
  40edf4:	lsl	x0, x0, #4
  40edf8:	str	x0, [x29, #824]
  40edfc:	ldr	x0, [x29, #824]
  40ee00:	str	x0, [x29, #272]
  40ee04:	str	xzr, [x29, #288]
  40ee08:	b	40ee38 <dispatch_message_real+0x1710>
  40ee0c:	ldr	x0, [x29, #288]
  40ee10:	lsl	x0, x0, #3
  40ee14:	add	x1, x29, #0x4e0
  40ee18:	ldr	x0, [x1, x0]
  40ee1c:	mov	x1, x0
  40ee20:	ldr	x0, [x29, #272]
  40ee24:	bl	405bc0 <stpcpy@plt>
  40ee28:	str	x0, [x29, #272]
  40ee2c:	ldr	x0, [x29, #288]
  40ee30:	add	x0, x0, #0x1
  40ee34:	str	x0, [x29, #288]
  40ee38:	ldr	x0, [x29, #288]
  40ee3c:	cmp	x0, #0x1
  40ee40:	b.hi	40ee5c <dispatch_message_real+0x1734>  // b.pmore
  40ee44:	ldr	x0, [x29, #288]
  40ee48:	lsl	x0, x0, #3
  40ee4c:	add	x1, x29, #0x4e0
  40ee50:	ldr	x0, [x1, x0]
  40ee54:	cmp	x0, #0x0
  40ee58:	b.ne	40ee0c <dispatch_message_real+0x16e4>  // b.any
  40ee5c:	ldr	x0, [x29, #272]
  40ee60:	strb	wzr, [x0]
  40ee64:	ldr	x0, [x29, #824]
  40ee68:	str	x0, [x29, #832]
  40ee6c:	ldr	x0, [x29, #72]
  40ee70:	add	x1, x0, #0x1
  40ee74:	str	x1, [x29, #72]
  40ee78:	lsl	x0, x0, #4
  40ee7c:	ldr	x1, [x29, #80]
  40ee80:	add	x19, x1, x0
  40ee84:	ldr	x0, [x29, #832]
  40ee88:	bl	406af0 <strlen@plt>
  40ee8c:	mov	x1, x0
  40ee90:	ldr	x0, [x29, #832]
  40ee94:	str	x0, [x19]
  40ee98:	str	x1, [x19, #8]
  40ee9c:	ldr	x0, [x29, #56]
  40eea0:	ldr	x0, [x0, #112]
  40eea4:	bl	4093bc <isempty>
  40eea8:	and	w0, w0, #0xff
  40eeac:	eor	w0, w0, #0x1
  40eeb0:	and	w0, w0, #0xff
  40eeb4:	cmp	w0, #0x0
  40eeb8:	b.eq	40f090 <dispatch_message_real+0x1968>  // b.none
  40eebc:	adrp	x0, 428000 <__func__.11909+0x280>
  40eec0:	add	x0, x0, #0xad0
  40eec4:	str	x0, [x29, #1248]
  40eec8:	ldr	x0, [x29, #56]
  40eecc:	ldr	x0, [x0, #112]
  40eed0:	str	x0, [x29, #1256]
  40eed4:	str	xzr, [x29, #304]
  40eed8:	str	xzr, [x29, #312]
  40eedc:	b	40ef10 <dispatch_message_real+0x17e8>
  40eee0:	ldr	x0, [x29, #312]
  40eee4:	lsl	x0, x0, #3
  40eee8:	add	x1, x29, #0x4e0
  40eeec:	ldr	x0, [x1, x0]
  40eef0:	bl	406af0 <strlen@plt>
  40eef4:	mov	x1, x0
  40eef8:	ldr	x0, [x29, #304]
  40eefc:	add	x0, x0, x1
  40ef00:	str	x0, [x29, #304]
  40ef04:	ldr	x0, [x29, #312]
  40ef08:	add	x0, x0, #0x1
  40ef0c:	str	x0, [x29, #312]
  40ef10:	ldr	x0, [x29, #312]
  40ef14:	cmp	x0, #0x1
  40ef18:	b.hi	40ef34 <dispatch_message_real+0x180c>  // b.pmore
  40ef1c:	ldr	x0, [x29, #312]
  40ef20:	lsl	x0, x0, #3
  40ef24:	add	x1, x29, #0x4e0
  40ef28:	ldr	x0, [x1, x0]
  40ef2c:	cmp	x0, #0x0
  40ef30:	b.ne	40eee0 <dispatch_message_real+0x17b8>  // b.any
  40ef34:	ldr	x0, [x29, #304]
  40ef38:	add	x0, x0, #0x1
  40ef3c:	str	x0, [x29, #840]
  40ef40:	ldr	x1, [x29, #840]
  40ef44:	mov	x0, #0x1                   	// #1
  40ef48:	bl	409118 <size_multiply_overflow>
  40ef4c:	and	w0, w0, #0xff
  40ef50:	and	x0, x0, #0xff
  40ef54:	cmp	x0, #0x0
  40ef58:	b.eq	40ef84 <dispatch_message_real+0x185c>  // b.none
  40ef5c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ef60:	add	x1, x0, #0xe03
  40ef64:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ef68:	add	x4, x0, #0x538
  40ef6c:	mov	w3, #0x3b2                 	// #946
  40ef70:	mov	x2, x1
  40ef74:	adrp	x0, 428000 <__func__.11909+0x280>
  40ef78:	add	x1, x0, #0xe0
  40ef7c:	mov	w0, #0x0                   	// #0
  40ef80:	bl	405fd0 <log_assert_failed_realm@plt>
  40ef84:	ldr	x0, [x29, #840]
  40ef88:	cmp	x0, #0x400, lsl #12
  40ef8c:	cset	w0, hi  // hi = pmore
  40ef90:	and	w0, w0, #0xff
  40ef94:	and	x0, x0, #0xff
  40ef98:	cmp	x0, #0x0
  40ef9c:	b.eq	40efc8 <dispatch_message_real+0x18a0>  // b.none
  40efa0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40efa4:	add	x1, x0, #0xe03
  40efa8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40efac:	add	x4, x0, #0x538
  40efb0:	mov	w3, #0x3b2                 	// #946
  40efb4:	mov	x2, x1
  40efb8:	adrp	x0, 428000 <__func__.11909+0x280>
  40efbc:	add	x1, x0, #0x110
  40efc0:	mov	w0, #0x0                   	// #0
  40efc4:	bl	405fd0 <log_assert_failed_realm@plt>
  40efc8:	ldr	x0, [x29, #840]
  40efcc:	add	x0, x0, #0xf
  40efd0:	lsr	x0, x0, #4
  40efd4:	lsl	x0, x0, #4
  40efd8:	sub	sp, sp, x0
  40efdc:	mov	x0, sp
  40efe0:	add	x0, x0, #0xf
  40efe4:	lsr	x0, x0, #4
  40efe8:	lsl	x0, x0, #4
  40efec:	str	x0, [x29, #848]
  40eff0:	ldr	x0, [x29, #848]
  40eff4:	str	x0, [x29, #296]
  40eff8:	str	xzr, [x29, #312]
  40effc:	b	40f02c <dispatch_message_real+0x1904>
  40f000:	ldr	x0, [x29, #312]
  40f004:	lsl	x0, x0, #3
  40f008:	add	x1, x29, #0x4e0
  40f00c:	ldr	x0, [x1, x0]
  40f010:	mov	x1, x0
  40f014:	ldr	x0, [x29, #296]
  40f018:	bl	405bc0 <stpcpy@plt>
  40f01c:	str	x0, [x29, #296]
  40f020:	ldr	x0, [x29, #312]
  40f024:	add	x0, x0, #0x1
  40f028:	str	x0, [x29, #312]
  40f02c:	ldr	x0, [x29, #312]
  40f030:	cmp	x0, #0x1
  40f034:	b.hi	40f050 <dispatch_message_real+0x1928>  // b.pmore
  40f038:	ldr	x0, [x29, #312]
  40f03c:	lsl	x0, x0, #3
  40f040:	add	x1, x29, #0x4e0
  40f044:	ldr	x0, [x1, x0]
  40f048:	cmp	x0, #0x0
  40f04c:	b.ne	40f000 <dispatch_message_real+0x18d8>  // b.any
  40f050:	ldr	x0, [x29, #296]
  40f054:	strb	wzr, [x0]
  40f058:	ldr	x0, [x29, #848]
  40f05c:	str	x0, [x29, #856]
  40f060:	ldr	x0, [x29, #72]
  40f064:	add	x1, x0, #0x1
  40f068:	str	x1, [x29, #72]
  40f06c:	lsl	x0, x0, #4
  40f070:	ldr	x1, [x29, #80]
  40f074:	add	x19, x1, x0
  40f078:	ldr	x0, [x29, #856]
  40f07c:	bl	406af0 <strlen@plt>
  40f080:	mov	x1, x0
  40f084:	ldr	x0, [x29, #856]
  40f088:	str	x0, [x19]
  40f08c:	str	x1, [x19, #8]
  40f090:	ldr	x0, [x29, #56]
  40f094:	ldr	x0, [x0, #120]
  40f098:	bl	4093bc <isempty>
  40f09c:	and	w0, w0, #0xff
  40f0a0:	eor	w0, w0, #0x1
  40f0a4:	and	w0, w0, #0xff
  40f0a8:	cmp	w0, #0x0
  40f0ac:	b.eq	40f284 <dispatch_message_real+0x1b5c>  // b.none
  40f0b0:	adrp	x0, 428000 <__func__.11909+0x280>
  40f0b4:	add	x0, x0, #0xae0
  40f0b8:	str	x0, [x29, #1248]
  40f0bc:	ldr	x0, [x29, #56]
  40f0c0:	ldr	x0, [x0, #120]
  40f0c4:	str	x0, [x29, #1256]
  40f0c8:	str	xzr, [x29, #328]
  40f0cc:	str	xzr, [x29, #336]
  40f0d0:	b	40f104 <dispatch_message_real+0x19dc>
  40f0d4:	ldr	x0, [x29, #336]
  40f0d8:	lsl	x0, x0, #3
  40f0dc:	add	x1, x29, #0x4e0
  40f0e0:	ldr	x0, [x1, x0]
  40f0e4:	bl	406af0 <strlen@plt>
  40f0e8:	mov	x1, x0
  40f0ec:	ldr	x0, [x29, #328]
  40f0f0:	add	x0, x0, x1
  40f0f4:	str	x0, [x29, #328]
  40f0f8:	ldr	x0, [x29, #336]
  40f0fc:	add	x0, x0, #0x1
  40f100:	str	x0, [x29, #336]
  40f104:	ldr	x0, [x29, #336]
  40f108:	cmp	x0, #0x1
  40f10c:	b.hi	40f128 <dispatch_message_real+0x1a00>  // b.pmore
  40f110:	ldr	x0, [x29, #336]
  40f114:	lsl	x0, x0, #3
  40f118:	add	x1, x29, #0x4e0
  40f11c:	ldr	x0, [x1, x0]
  40f120:	cmp	x0, #0x0
  40f124:	b.ne	40f0d4 <dispatch_message_real+0x19ac>  // b.any
  40f128:	ldr	x0, [x29, #328]
  40f12c:	add	x0, x0, #0x1
  40f130:	str	x0, [x29, #864]
  40f134:	ldr	x1, [x29, #864]
  40f138:	mov	x0, #0x1                   	// #1
  40f13c:	bl	409118 <size_multiply_overflow>
  40f140:	and	w0, w0, #0xff
  40f144:	and	x0, x0, #0xff
  40f148:	cmp	x0, #0x0
  40f14c:	b.eq	40f178 <dispatch_message_real+0x1a50>  // b.none
  40f150:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f154:	add	x1, x0, #0xe03
  40f158:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f15c:	add	x4, x0, #0x538
  40f160:	mov	w3, #0x3b3                 	// #947
  40f164:	mov	x2, x1
  40f168:	adrp	x0, 428000 <__func__.11909+0x280>
  40f16c:	add	x1, x0, #0xe0
  40f170:	mov	w0, #0x0                   	// #0
  40f174:	bl	405fd0 <log_assert_failed_realm@plt>
  40f178:	ldr	x0, [x29, #864]
  40f17c:	cmp	x0, #0x400, lsl #12
  40f180:	cset	w0, hi  // hi = pmore
  40f184:	and	w0, w0, #0xff
  40f188:	and	x0, x0, #0xff
  40f18c:	cmp	x0, #0x0
  40f190:	b.eq	40f1bc <dispatch_message_real+0x1a94>  // b.none
  40f194:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f198:	add	x1, x0, #0xe03
  40f19c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f1a0:	add	x4, x0, #0x538
  40f1a4:	mov	w3, #0x3b3                 	// #947
  40f1a8:	mov	x2, x1
  40f1ac:	adrp	x0, 428000 <__func__.11909+0x280>
  40f1b0:	add	x1, x0, #0x110
  40f1b4:	mov	w0, #0x0                   	// #0
  40f1b8:	bl	405fd0 <log_assert_failed_realm@plt>
  40f1bc:	ldr	x0, [x29, #864]
  40f1c0:	add	x0, x0, #0xf
  40f1c4:	lsr	x0, x0, #4
  40f1c8:	lsl	x0, x0, #4
  40f1cc:	sub	sp, sp, x0
  40f1d0:	mov	x0, sp
  40f1d4:	add	x0, x0, #0xf
  40f1d8:	lsr	x0, x0, #4
  40f1dc:	lsl	x0, x0, #4
  40f1e0:	str	x0, [x29, #872]
  40f1e4:	ldr	x0, [x29, #872]
  40f1e8:	str	x0, [x29, #320]
  40f1ec:	str	xzr, [x29, #336]
  40f1f0:	b	40f220 <dispatch_message_real+0x1af8>
  40f1f4:	ldr	x0, [x29, #336]
  40f1f8:	lsl	x0, x0, #3
  40f1fc:	add	x1, x29, #0x4e0
  40f200:	ldr	x0, [x1, x0]
  40f204:	mov	x1, x0
  40f208:	ldr	x0, [x29, #320]
  40f20c:	bl	405bc0 <stpcpy@plt>
  40f210:	str	x0, [x29, #320]
  40f214:	ldr	x0, [x29, #336]
  40f218:	add	x0, x0, #0x1
  40f21c:	str	x0, [x29, #336]
  40f220:	ldr	x0, [x29, #336]
  40f224:	cmp	x0, #0x1
  40f228:	b.hi	40f244 <dispatch_message_real+0x1b1c>  // b.pmore
  40f22c:	ldr	x0, [x29, #336]
  40f230:	lsl	x0, x0, #3
  40f234:	add	x1, x29, #0x4e0
  40f238:	ldr	x0, [x1, x0]
  40f23c:	cmp	x0, #0x0
  40f240:	b.ne	40f1f4 <dispatch_message_real+0x1acc>  // b.any
  40f244:	ldr	x0, [x29, #320]
  40f248:	strb	wzr, [x0]
  40f24c:	ldr	x0, [x29, #872]
  40f250:	str	x0, [x29, #880]
  40f254:	ldr	x0, [x29, #72]
  40f258:	add	x1, x0, #0x1
  40f25c:	str	x1, [x29, #72]
  40f260:	lsl	x0, x0, #4
  40f264:	ldr	x1, [x29, #80]
  40f268:	add	x19, x1, x0
  40f26c:	ldr	x0, [x29, #880]
  40f270:	bl	406af0 <strlen@plt>
  40f274:	mov	x1, x0
  40f278:	ldr	x0, [x29, #880]
  40f27c:	str	x0, [x19]
  40f280:	str	x1, [x19, #8]
  40f284:	ldr	x0, [x29, #56]
  40f288:	ldp	x0, x1, [x0, #128]
  40f28c:	bl	409090 <sd_id128_is_null>
  40f290:	cmp	w0, #0x0
  40f294:	b.ne	40f3bc <dispatch_message_real+0x1c94>  // b.any
  40f298:	mov	x0, #0x38                  	// #56
  40f29c:	str	x0, [x29, #888]
  40f2a0:	ldr	x1, [x29, #888]
  40f2a4:	mov	x0, #0x1                   	// #1
  40f2a8:	bl	409118 <size_multiply_overflow>
  40f2ac:	and	w0, w0, #0xff
  40f2b0:	and	x0, x0, #0xff
  40f2b4:	cmp	x0, #0x0
  40f2b8:	b.eq	40f2e4 <dispatch_message_real+0x1bbc>  // b.none
  40f2bc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f2c0:	add	x1, x0, #0xe03
  40f2c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f2c8:	add	x4, x0, #0x538
  40f2cc:	mov	w3, #0x3b5                 	// #949
  40f2d0:	mov	x2, x1
  40f2d4:	adrp	x0, 428000 <__func__.11909+0x280>
  40f2d8:	add	x1, x0, #0xe0
  40f2dc:	mov	w0, #0x0                   	// #0
  40f2e0:	bl	405fd0 <log_assert_failed_realm@plt>
  40f2e4:	ldr	x0, [x29, #888]
  40f2e8:	cmp	x0, #0x400, lsl #12
  40f2ec:	cset	w0, hi  // hi = pmore
  40f2f0:	and	w0, w0, #0xff
  40f2f4:	and	x0, x0, #0xff
  40f2f8:	cmp	x0, #0x0
  40f2fc:	b.eq	40f328 <dispatch_message_real+0x1c00>  // b.none
  40f300:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f304:	add	x1, x0, #0xe03
  40f308:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f30c:	add	x4, x0, #0x538
  40f310:	mov	w3, #0x3b5                 	// #949
  40f314:	mov	x2, x1
  40f318:	adrp	x0, 428000 <__func__.11909+0x280>
  40f31c:	add	x1, x0, #0x110
  40f320:	mov	w0, #0x0                   	// #0
  40f324:	bl	405fd0 <log_assert_failed_realm@plt>
  40f328:	ldr	x0, [x29, #888]
  40f32c:	add	x0, x0, #0xf
  40f330:	lsr	x0, x0, #4
  40f334:	lsl	x0, x0, #4
  40f338:	sub	sp, sp, x0
  40f33c:	mov	x0, sp
  40f340:	add	x0, x0, #0xf
  40f344:	lsr	x0, x0, #4
  40f348:	lsl	x0, x0, #4
  40f34c:	str	x0, [x29, #896]
  40f350:	ldr	x1, [x29, #896]
  40f354:	adrp	x0, 428000 <__func__.11909+0x280>
  40f358:	add	x0, x0, #0xaf8
  40f35c:	mov	x2, x1
  40f360:	mov	x3, x0
  40f364:	ldp	x0, x1, [x3]
  40f368:	stp	x0, x1, [x2]
  40f36c:	ldr	x0, [x3, #16]
  40f370:	str	x0, [x2, #16]
  40f374:	ldr	x0, [x29, #896]
  40f378:	add	x1, x0, #0x17
  40f37c:	ldr	x0, [x29, #56]
  40f380:	mov	x2, x1
  40f384:	ldp	x0, x1, [x0, #128]
  40f388:	bl	4068c0 <sd_id128_to_string@plt>
  40f38c:	ldr	x0, [x29, #72]
  40f390:	add	x1, x0, #0x1
  40f394:	str	x1, [x29, #72]
  40f398:	lsl	x0, x0, #4
  40f39c:	ldr	x1, [x29, #80]
  40f3a0:	add	x19, x1, x0
  40f3a4:	ldr	x0, [x29, #896]
  40f3a8:	bl	406af0 <strlen@plt>
  40f3ac:	mov	x1, x0
  40f3b0:	ldr	x0, [x29, #896]
  40f3b4:	str	x0, [x19]
  40f3b8:	str	x1, [x19, #8]
  40f3bc:	ldr	x0, [x29, #56]
  40f3c0:	ldr	x0, [x0, #176]
  40f3c4:	cmp	x0, #0x0
  40f3c8:	b.eq	40f410 <dispatch_message_real+0x1ce8>  // b.none
  40f3cc:	ldr	x0, [x29, #72]
  40f3d0:	lsl	x0, x0, #4
  40f3d4:	ldr	x1, [x29, #80]
  40f3d8:	add	x3, x1, x0
  40f3dc:	ldr	x0, [x29, #56]
  40f3e0:	ldr	x1, [x0, #168]
  40f3e4:	ldr	x0, [x29, #56]
  40f3e8:	ldr	x0, [x0, #176]
  40f3ec:	lsl	x0, x0, #4
  40f3f0:	mov	x2, x0
  40f3f4:	mov	x0, x3
  40f3f8:	bl	405e90 <memcpy@plt>
  40f3fc:	ldr	x0, [x29, #56]
  40f400:	ldr	x1, [x0, #176]
  40f404:	ldr	x0, [x29, #72]
  40f408:	add	x0, x1, x0
  40f40c:	str	x0, [x29, #72]
  40f410:	ldr	x0, [x29, #72]
  40f414:	ldr	x1, [x29, #64]
  40f418:	cmp	x1, x0
  40f41c:	cset	w0, cc  // cc = lo, ul, last
  40f420:	and	w0, w0, #0xff
  40f424:	and	x0, x0, #0xff
  40f428:	cmp	x0, #0x0
  40f42c:	b.eq	40f458 <dispatch_message_real+0x1d30>  // b.none
  40f430:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f434:	add	x1, x0, #0xe03
  40f438:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f43c:	add	x4, x0, #0x538
  40f440:	mov	w3, #0x3bd                 	// #957
  40f444:	mov	x2, x1
  40f448:	adrp	x0, 428000 <__func__.11909+0x280>
  40f44c:	add	x1, x0, #0xb10
  40f450:	mov	w0, #0x0                   	// #0
  40f454:	bl	405fd0 <log_assert_failed_realm@plt>
  40f458:	ldr	w0, [x29, #40]
  40f45c:	bl	4096c8 <pid_is_valid>
  40f460:	and	w0, w0, #0xff
  40f464:	cmp	w0, #0x0
  40f468:	b.eq	410f90 <dispatch_message_real+0x3868>  // b.none
  40f46c:	add	x0, x29, #0x78
  40f470:	mov	x6, x0
  40f474:	mov	x5, #0x0                   	// #0
  40f478:	mov	x4, #0x0                   	// #0
  40f47c:	mov	x3, #0x0                   	// #0
  40f480:	mov	x2, #0x0                   	// #0
  40f484:	ldr	w1, [x29, #40]
  40f488:	ldr	x0, [x29, #88]
  40f48c:	bl	4241cc <client_context_get>
  40f490:	cmp	w0, #0x0
  40f494:	b.lt	410f90 <dispatch_message_real+0x3868>  // b.tstop
  40f498:	ldr	x0, [x29, #120]
  40f49c:	ldr	w0, [x0, #20]
  40f4a0:	bl	4096c8 <pid_is_valid>
  40f4a4:	and	w0, w0, #0xff
  40f4a8:	cmp	w0, #0x0
  40f4ac:	b.eq	40f5b4 <dispatch_message_real+0x1e8c>  // b.none
  40f4b0:	mov	x0, #0x18                  	// #24
  40f4b4:	str	x0, [x29, #904]
  40f4b8:	ldr	x1, [x29, #904]
  40f4bc:	mov	x0, #0x1                   	// #1
  40f4c0:	bl	409118 <size_multiply_overflow>
  40f4c4:	and	w0, w0, #0xff
  40f4c8:	and	x0, x0, #0xff
  40f4cc:	cmp	x0, #0x0
  40f4d0:	b.eq	40f4fc <dispatch_message_real+0x1dd4>  // b.none
  40f4d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f4d8:	add	x1, x0, #0xe03
  40f4dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f4e0:	add	x4, x0, #0x538
  40f4e4:	mov	w3, #0x3c1                 	// #961
  40f4e8:	mov	x2, x1
  40f4ec:	adrp	x0, 428000 <__func__.11909+0x280>
  40f4f0:	add	x1, x0, #0xe0
  40f4f4:	mov	w0, #0x0                   	// #0
  40f4f8:	bl	405fd0 <log_assert_failed_realm@plt>
  40f4fc:	ldr	x0, [x29, #904]
  40f500:	cmp	x0, #0x400, lsl #12
  40f504:	cset	w0, hi  // hi = pmore
  40f508:	and	w0, w0, #0xff
  40f50c:	and	x0, x0, #0xff
  40f510:	cmp	x0, #0x0
  40f514:	b.eq	40f540 <dispatch_message_real+0x1e18>  // b.none
  40f518:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f51c:	add	x1, x0, #0xe03
  40f520:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f524:	add	x4, x0, #0x538
  40f528:	mov	w3, #0x3c1                 	// #961
  40f52c:	mov	x2, x1
  40f530:	adrp	x0, 428000 <__func__.11909+0x280>
  40f534:	add	x1, x0, #0x110
  40f538:	mov	w0, #0x0                   	// #0
  40f53c:	bl	405fd0 <log_assert_failed_realm@plt>
  40f540:	ldr	x0, [x29, #904]
  40f544:	add	x0, x0, #0xf
  40f548:	lsr	x0, x0, #4
  40f54c:	lsl	x0, x0, #4
  40f550:	sub	sp, sp, x0
  40f554:	mov	x0, sp
  40f558:	add	x0, x0, #0xf
  40f55c:	lsr	x0, x0, #4
  40f560:	lsl	x0, x0, #4
  40f564:	str	x0, [x29, #912]
  40f568:	ldr	x0, [x29, #120]
  40f56c:	ldr	w0, [x0, #20]
  40f570:	mov	w2, w0
  40f574:	adrp	x0, 428000 <__func__.11909+0x280>
  40f578:	add	x1, x0, #0xb18
  40f57c:	ldr	x0, [x29, #912]
  40f580:	bl	4069c0 <sprintf@plt>
  40f584:	ldr	x0, [x29, #72]
  40f588:	add	x1, x0, #0x1
  40f58c:	str	x1, [x29, #72]
  40f590:	lsl	x0, x0, #4
  40f594:	ldr	x1, [x29, #80]
  40f598:	add	x19, x1, x0
  40f59c:	ldr	x0, [x29, #912]
  40f5a0:	bl	406af0 <strlen@plt>
  40f5a4:	mov	x1, x0
  40f5a8:	ldr	x0, [x29, #912]
  40f5ac:	str	x0, [x19]
  40f5b0:	str	x1, [x19, #8]
  40f5b4:	ldr	x0, [x29, #120]
  40f5b8:	ldr	w0, [x0, #24]
  40f5bc:	bl	4061c0 <uid_is_valid@plt>
  40f5c0:	and	w0, w0, #0xff
  40f5c4:	cmp	w0, #0x0
  40f5c8:	b.eq	40f6d0 <dispatch_message_real+0x1fa8>  // b.none
  40f5cc:	mov	x0, #0x18                  	// #24
  40f5d0:	str	x0, [x29, #920]
  40f5d4:	ldr	x1, [x29, #920]
  40f5d8:	mov	x0, #0x1                   	// #1
  40f5dc:	bl	409118 <size_multiply_overflow>
  40f5e0:	and	w0, w0, #0xff
  40f5e4:	and	x0, x0, #0xff
  40f5e8:	cmp	x0, #0x0
  40f5ec:	b.eq	40f618 <dispatch_message_real+0x1ef0>  // b.none
  40f5f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f5f4:	add	x1, x0, #0xe03
  40f5f8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f5fc:	add	x4, x0, #0x538
  40f600:	mov	w3, #0x3c2                 	// #962
  40f604:	mov	x2, x1
  40f608:	adrp	x0, 428000 <__func__.11909+0x280>
  40f60c:	add	x1, x0, #0xe0
  40f610:	mov	w0, #0x0                   	// #0
  40f614:	bl	405fd0 <log_assert_failed_realm@plt>
  40f618:	ldr	x0, [x29, #920]
  40f61c:	cmp	x0, #0x400, lsl #12
  40f620:	cset	w0, hi  // hi = pmore
  40f624:	and	w0, w0, #0xff
  40f628:	and	x0, x0, #0xff
  40f62c:	cmp	x0, #0x0
  40f630:	b.eq	40f65c <dispatch_message_real+0x1f34>  // b.none
  40f634:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f638:	add	x1, x0, #0xe03
  40f63c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f640:	add	x4, x0, #0x538
  40f644:	mov	w3, #0x3c2                 	// #962
  40f648:	mov	x2, x1
  40f64c:	adrp	x0, 428000 <__func__.11909+0x280>
  40f650:	add	x1, x0, #0x110
  40f654:	mov	w0, #0x0                   	// #0
  40f658:	bl	405fd0 <log_assert_failed_realm@plt>
  40f65c:	ldr	x0, [x29, #920]
  40f660:	add	x0, x0, #0xf
  40f664:	lsr	x0, x0, #4
  40f668:	lsl	x0, x0, #4
  40f66c:	sub	sp, sp, x0
  40f670:	mov	x0, sp
  40f674:	add	x0, x0, #0xf
  40f678:	lsr	x0, x0, #4
  40f67c:	lsl	x0, x0, #4
  40f680:	str	x0, [x29, #928]
  40f684:	ldr	x0, [x29, #120]
  40f688:	ldr	w0, [x0, #24]
  40f68c:	mov	w2, w0
  40f690:	adrp	x0, 428000 <__func__.11909+0x280>
  40f694:	add	x1, x0, #0xb28
  40f698:	ldr	x0, [x29, #928]
  40f69c:	bl	4069c0 <sprintf@plt>
  40f6a0:	ldr	x0, [x29, #72]
  40f6a4:	add	x1, x0, #0x1
  40f6a8:	str	x1, [x29, #72]
  40f6ac:	lsl	x0, x0, #4
  40f6b0:	ldr	x1, [x29, #80]
  40f6b4:	add	x19, x1, x0
  40f6b8:	ldr	x0, [x29, #928]
  40f6bc:	bl	406af0 <strlen@plt>
  40f6c0:	mov	x1, x0
  40f6c4:	ldr	x0, [x29, #928]
  40f6c8:	str	x0, [x19]
  40f6cc:	str	x1, [x19, #8]
  40f6d0:	ldr	x0, [x29, #120]
  40f6d4:	ldr	w0, [x0, #28]
  40f6d8:	bl	4096e8 <gid_is_valid>
  40f6dc:	and	w0, w0, #0xff
  40f6e0:	cmp	w0, #0x0
  40f6e4:	b.eq	40f7ec <dispatch_message_real+0x20c4>  // b.none
  40f6e8:	mov	x0, #0x18                  	// #24
  40f6ec:	str	x0, [x29, #936]
  40f6f0:	ldr	x1, [x29, #936]
  40f6f4:	mov	x0, #0x1                   	// #1
  40f6f8:	bl	409118 <size_multiply_overflow>
  40f6fc:	and	w0, w0, #0xff
  40f700:	and	x0, x0, #0xff
  40f704:	cmp	x0, #0x0
  40f708:	b.eq	40f734 <dispatch_message_real+0x200c>  // b.none
  40f70c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f710:	add	x1, x0, #0xe03
  40f714:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f718:	add	x4, x0, #0x538
  40f71c:	mov	w3, #0x3c3                 	// #963
  40f720:	mov	x2, x1
  40f724:	adrp	x0, 428000 <__func__.11909+0x280>
  40f728:	add	x1, x0, #0xe0
  40f72c:	mov	w0, #0x0                   	// #0
  40f730:	bl	405fd0 <log_assert_failed_realm@plt>
  40f734:	ldr	x0, [x29, #936]
  40f738:	cmp	x0, #0x400, lsl #12
  40f73c:	cset	w0, hi  // hi = pmore
  40f740:	and	w0, w0, #0xff
  40f744:	and	x0, x0, #0xff
  40f748:	cmp	x0, #0x0
  40f74c:	b.eq	40f778 <dispatch_message_real+0x2050>  // b.none
  40f750:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f754:	add	x1, x0, #0xe03
  40f758:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f75c:	add	x4, x0, #0x538
  40f760:	mov	w3, #0x3c3                 	// #963
  40f764:	mov	x2, x1
  40f768:	adrp	x0, 428000 <__func__.11909+0x280>
  40f76c:	add	x1, x0, #0x110
  40f770:	mov	w0, #0x0                   	// #0
  40f774:	bl	405fd0 <log_assert_failed_realm@plt>
  40f778:	ldr	x0, [x29, #936]
  40f77c:	add	x0, x0, #0xf
  40f780:	lsr	x0, x0, #4
  40f784:	lsl	x0, x0, #4
  40f788:	sub	sp, sp, x0
  40f78c:	mov	x0, sp
  40f790:	add	x0, x0, #0xf
  40f794:	lsr	x0, x0, #4
  40f798:	lsl	x0, x0, #4
  40f79c:	str	x0, [x29, #944]
  40f7a0:	ldr	x0, [x29, #120]
  40f7a4:	ldr	w0, [x0, #28]
  40f7a8:	mov	w2, w0
  40f7ac:	adrp	x0, 428000 <__func__.11909+0x280>
  40f7b0:	add	x1, x0, #0xb38
  40f7b4:	ldr	x0, [x29, #944]
  40f7b8:	bl	4069c0 <sprintf@plt>
  40f7bc:	ldr	x0, [x29, #72]
  40f7c0:	add	x1, x0, #0x1
  40f7c4:	str	x1, [x29, #72]
  40f7c8:	lsl	x0, x0, #4
  40f7cc:	ldr	x1, [x29, #80]
  40f7d0:	add	x19, x1, x0
  40f7d4:	ldr	x0, [x29, #944]
  40f7d8:	bl	406af0 <strlen@plt>
  40f7dc:	mov	x1, x0
  40f7e0:	ldr	x0, [x29, #944]
  40f7e4:	str	x0, [x19]
  40f7e8:	str	x1, [x19, #8]
  40f7ec:	ldr	x0, [x29, #120]
  40f7f0:	ldr	x0, [x0, #32]
  40f7f4:	bl	4093bc <isempty>
  40f7f8:	and	w0, w0, #0xff
  40f7fc:	eor	w0, w0, #0x1
  40f800:	and	w0, w0, #0xff
  40f804:	cmp	w0, #0x0
  40f808:	b.eq	40f9e0 <dispatch_message_real+0x22b8>  // b.none
  40f80c:	adrp	x0, 428000 <__func__.11909+0x280>
  40f810:	add	x0, x0, #0xb48
  40f814:	str	x0, [x29, #1248]
  40f818:	ldr	x0, [x29, #120]
  40f81c:	ldr	x0, [x0, #32]
  40f820:	str	x0, [x29, #1256]
  40f824:	str	xzr, [x29, #352]
  40f828:	str	xzr, [x29, #360]
  40f82c:	b	40f860 <dispatch_message_real+0x2138>
  40f830:	ldr	x0, [x29, #360]
  40f834:	lsl	x0, x0, #3
  40f838:	add	x1, x29, #0x4e0
  40f83c:	ldr	x0, [x1, x0]
  40f840:	bl	406af0 <strlen@plt>
  40f844:	mov	x1, x0
  40f848:	ldr	x0, [x29, #352]
  40f84c:	add	x0, x0, x1
  40f850:	str	x0, [x29, #352]
  40f854:	ldr	x0, [x29, #360]
  40f858:	add	x0, x0, #0x1
  40f85c:	str	x0, [x29, #360]
  40f860:	ldr	x0, [x29, #360]
  40f864:	cmp	x0, #0x1
  40f868:	b.hi	40f884 <dispatch_message_real+0x215c>  // b.pmore
  40f86c:	ldr	x0, [x29, #360]
  40f870:	lsl	x0, x0, #3
  40f874:	add	x1, x29, #0x4e0
  40f878:	ldr	x0, [x1, x0]
  40f87c:	cmp	x0, #0x0
  40f880:	b.ne	40f830 <dispatch_message_real+0x2108>  // b.any
  40f884:	ldr	x0, [x29, #352]
  40f888:	add	x0, x0, #0x1
  40f88c:	str	x0, [x29, #952]
  40f890:	ldr	x1, [x29, #952]
  40f894:	mov	x0, #0x1                   	// #1
  40f898:	bl	409118 <size_multiply_overflow>
  40f89c:	and	w0, w0, #0xff
  40f8a0:	and	x0, x0, #0xff
  40f8a4:	cmp	x0, #0x0
  40f8a8:	b.eq	40f8d4 <dispatch_message_real+0x21ac>  // b.none
  40f8ac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f8b0:	add	x1, x0, #0xe03
  40f8b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f8b8:	add	x4, x0, #0x538
  40f8bc:	mov	w3, #0x3c6                 	// #966
  40f8c0:	mov	x2, x1
  40f8c4:	adrp	x0, 428000 <__func__.11909+0x280>
  40f8c8:	add	x1, x0, #0xe0
  40f8cc:	mov	w0, #0x0                   	// #0
  40f8d0:	bl	405fd0 <log_assert_failed_realm@plt>
  40f8d4:	ldr	x0, [x29, #952]
  40f8d8:	cmp	x0, #0x400, lsl #12
  40f8dc:	cset	w0, hi  // hi = pmore
  40f8e0:	and	w0, w0, #0xff
  40f8e4:	and	x0, x0, #0xff
  40f8e8:	cmp	x0, #0x0
  40f8ec:	b.eq	40f918 <dispatch_message_real+0x21f0>  // b.none
  40f8f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40f8f4:	add	x1, x0, #0xe03
  40f8f8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40f8fc:	add	x4, x0, #0x538
  40f900:	mov	w3, #0x3c6                 	// #966
  40f904:	mov	x2, x1
  40f908:	adrp	x0, 428000 <__func__.11909+0x280>
  40f90c:	add	x1, x0, #0x110
  40f910:	mov	w0, #0x0                   	// #0
  40f914:	bl	405fd0 <log_assert_failed_realm@plt>
  40f918:	ldr	x0, [x29, #952]
  40f91c:	add	x0, x0, #0xf
  40f920:	lsr	x0, x0, #4
  40f924:	lsl	x0, x0, #4
  40f928:	sub	sp, sp, x0
  40f92c:	mov	x0, sp
  40f930:	add	x0, x0, #0xf
  40f934:	lsr	x0, x0, #4
  40f938:	lsl	x0, x0, #4
  40f93c:	str	x0, [x29, #960]
  40f940:	ldr	x0, [x29, #960]
  40f944:	str	x0, [x29, #344]
  40f948:	str	xzr, [x29, #360]
  40f94c:	b	40f97c <dispatch_message_real+0x2254>
  40f950:	ldr	x0, [x29, #360]
  40f954:	lsl	x0, x0, #3
  40f958:	add	x1, x29, #0x4e0
  40f95c:	ldr	x0, [x1, x0]
  40f960:	mov	x1, x0
  40f964:	ldr	x0, [x29, #344]
  40f968:	bl	405bc0 <stpcpy@plt>
  40f96c:	str	x0, [x29, #344]
  40f970:	ldr	x0, [x29, #360]
  40f974:	add	x0, x0, #0x1
  40f978:	str	x0, [x29, #360]
  40f97c:	ldr	x0, [x29, #360]
  40f980:	cmp	x0, #0x1
  40f984:	b.hi	40f9a0 <dispatch_message_real+0x2278>  // b.pmore
  40f988:	ldr	x0, [x29, #360]
  40f98c:	lsl	x0, x0, #3
  40f990:	add	x1, x29, #0x4e0
  40f994:	ldr	x0, [x1, x0]
  40f998:	cmp	x0, #0x0
  40f99c:	b.ne	40f950 <dispatch_message_real+0x2228>  // b.any
  40f9a0:	ldr	x0, [x29, #344]
  40f9a4:	strb	wzr, [x0]
  40f9a8:	ldr	x0, [x29, #960]
  40f9ac:	str	x0, [x29, #968]
  40f9b0:	ldr	x0, [x29, #72]
  40f9b4:	add	x1, x0, #0x1
  40f9b8:	str	x1, [x29, #72]
  40f9bc:	lsl	x0, x0, #4
  40f9c0:	ldr	x1, [x29, #80]
  40f9c4:	add	x19, x1, x0
  40f9c8:	ldr	x0, [x29, #968]
  40f9cc:	bl	406af0 <strlen@plt>
  40f9d0:	mov	x1, x0
  40f9d4:	ldr	x0, [x29, #968]
  40f9d8:	str	x0, [x19]
  40f9dc:	str	x1, [x19, #8]
  40f9e0:	ldr	x0, [x29, #120]
  40f9e4:	ldr	x0, [x0, #40]
  40f9e8:	bl	4093bc <isempty>
  40f9ec:	and	w0, w0, #0xff
  40f9f0:	eor	w0, w0, #0x1
  40f9f4:	and	w0, w0, #0xff
  40f9f8:	cmp	w0, #0x0
  40f9fc:	b.eq	40fbd4 <dispatch_message_real+0x24ac>  // b.none
  40fa00:	adrp	x0, 428000 <__func__.11909+0x280>
  40fa04:	add	x0, x0, #0xb58
  40fa08:	str	x0, [x29, #1248]
  40fa0c:	ldr	x0, [x29, #120]
  40fa10:	ldr	x0, [x0, #40]
  40fa14:	str	x0, [x29, #1256]
  40fa18:	str	xzr, [x29, #376]
  40fa1c:	str	xzr, [x29, #384]
  40fa20:	b	40fa54 <dispatch_message_real+0x232c>
  40fa24:	ldr	x0, [x29, #384]
  40fa28:	lsl	x0, x0, #3
  40fa2c:	add	x1, x29, #0x4e0
  40fa30:	ldr	x0, [x1, x0]
  40fa34:	bl	406af0 <strlen@plt>
  40fa38:	mov	x1, x0
  40fa3c:	ldr	x0, [x29, #376]
  40fa40:	add	x0, x0, x1
  40fa44:	str	x0, [x29, #376]
  40fa48:	ldr	x0, [x29, #384]
  40fa4c:	add	x0, x0, #0x1
  40fa50:	str	x0, [x29, #384]
  40fa54:	ldr	x0, [x29, #384]
  40fa58:	cmp	x0, #0x1
  40fa5c:	b.hi	40fa78 <dispatch_message_real+0x2350>  // b.pmore
  40fa60:	ldr	x0, [x29, #384]
  40fa64:	lsl	x0, x0, #3
  40fa68:	add	x1, x29, #0x4e0
  40fa6c:	ldr	x0, [x1, x0]
  40fa70:	cmp	x0, #0x0
  40fa74:	b.ne	40fa24 <dispatch_message_real+0x22fc>  // b.any
  40fa78:	ldr	x0, [x29, #376]
  40fa7c:	add	x0, x0, #0x1
  40fa80:	str	x0, [x29, #976]
  40fa84:	ldr	x1, [x29, #976]
  40fa88:	mov	x0, #0x1                   	// #1
  40fa8c:	bl	409118 <size_multiply_overflow>
  40fa90:	and	w0, w0, #0xff
  40fa94:	and	x0, x0, #0xff
  40fa98:	cmp	x0, #0x0
  40fa9c:	b.eq	40fac8 <dispatch_message_real+0x23a0>  // b.none
  40faa0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40faa4:	add	x1, x0, #0xe03
  40faa8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40faac:	add	x4, x0, #0x538
  40fab0:	mov	w3, #0x3c7                 	// #967
  40fab4:	mov	x2, x1
  40fab8:	adrp	x0, 428000 <__func__.11909+0x280>
  40fabc:	add	x1, x0, #0xe0
  40fac0:	mov	w0, #0x0                   	// #0
  40fac4:	bl	405fd0 <log_assert_failed_realm@plt>
  40fac8:	ldr	x0, [x29, #976]
  40facc:	cmp	x0, #0x400, lsl #12
  40fad0:	cset	w0, hi  // hi = pmore
  40fad4:	and	w0, w0, #0xff
  40fad8:	and	x0, x0, #0xff
  40fadc:	cmp	x0, #0x0
  40fae0:	b.eq	40fb0c <dispatch_message_real+0x23e4>  // b.none
  40fae4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40fae8:	add	x1, x0, #0xe03
  40faec:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40faf0:	add	x4, x0, #0x538
  40faf4:	mov	w3, #0x3c7                 	// #967
  40faf8:	mov	x2, x1
  40fafc:	adrp	x0, 428000 <__func__.11909+0x280>
  40fb00:	add	x1, x0, #0x110
  40fb04:	mov	w0, #0x0                   	// #0
  40fb08:	bl	405fd0 <log_assert_failed_realm@plt>
  40fb0c:	ldr	x0, [x29, #976]
  40fb10:	add	x0, x0, #0xf
  40fb14:	lsr	x0, x0, #4
  40fb18:	lsl	x0, x0, #4
  40fb1c:	sub	sp, sp, x0
  40fb20:	mov	x0, sp
  40fb24:	add	x0, x0, #0xf
  40fb28:	lsr	x0, x0, #4
  40fb2c:	lsl	x0, x0, #4
  40fb30:	str	x0, [x29, #984]
  40fb34:	ldr	x0, [x29, #984]
  40fb38:	str	x0, [x29, #368]
  40fb3c:	str	xzr, [x29, #384]
  40fb40:	b	40fb70 <dispatch_message_real+0x2448>
  40fb44:	ldr	x0, [x29, #384]
  40fb48:	lsl	x0, x0, #3
  40fb4c:	add	x1, x29, #0x4e0
  40fb50:	ldr	x0, [x1, x0]
  40fb54:	mov	x1, x0
  40fb58:	ldr	x0, [x29, #368]
  40fb5c:	bl	405bc0 <stpcpy@plt>
  40fb60:	str	x0, [x29, #368]
  40fb64:	ldr	x0, [x29, #384]
  40fb68:	add	x0, x0, #0x1
  40fb6c:	str	x0, [x29, #384]
  40fb70:	ldr	x0, [x29, #384]
  40fb74:	cmp	x0, #0x1
  40fb78:	b.hi	40fb94 <dispatch_message_real+0x246c>  // b.pmore
  40fb7c:	ldr	x0, [x29, #384]
  40fb80:	lsl	x0, x0, #3
  40fb84:	add	x1, x29, #0x4e0
  40fb88:	ldr	x0, [x1, x0]
  40fb8c:	cmp	x0, #0x0
  40fb90:	b.ne	40fb44 <dispatch_message_real+0x241c>  // b.any
  40fb94:	ldr	x0, [x29, #368]
  40fb98:	strb	wzr, [x0]
  40fb9c:	ldr	x0, [x29, #984]
  40fba0:	str	x0, [x29, #992]
  40fba4:	ldr	x0, [x29, #72]
  40fba8:	add	x1, x0, #0x1
  40fbac:	str	x1, [x29, #72]
  40fbb0:	lsl	x0, x0, #4
  40fbb4:	ldr	x1, [x29, #80]
  40fbb8:	add	x19, x1, x0
  40fbbc:	ldr	x0, [x29, #992]
  40fbc0:	bl	406af0 <strlen@plt>
  40fbc4:	mov	x1, x0
  40fbc8:	ldr	x0, [x29, #992]
  40fbcc:	str	x0, [x19]
  40fbd0:	str	x1, [x19, #8]
  40fbd4:	ldr	x0, [x29, #120]
  40fbd8:	ldr	x0, [x0, #48]
  40fbdc:	cmp	x0, #0x0
  40fbe0:	b.eq	40fc08 <dispatch_message_real+0x24e0>  // b.none
  40fbe4:	ldr	x0, [x29, #120]
  40fbe8:	ldr	x0, [x0, #48]
  40fbec:	add	x1, x29, #0x48
  40fbf0:	mov	x3, x0
  40fbf4:	adrp	x0, 428000 <__func__.11909+0x280>
  40fbf8:	add	x2, x0, #0xb68
  40fbfc:	ldr	x0, [x29, #80]
  40fc00:	bl	4064b0 <set_iovec_string_field@plt>
  40fc04:	str	x0, [x29, #112]
  40fc08:	ldr	x0, [x29, #120]
  40fc0c:	ldr	x0, [x0, #56]
  40fc10:	bl	4093bc <isempty>
  40fc14:	and	w0, w0, #0xff
  40fc18:	eor	w0, w0, #0x1
  40fc1c:	and	w0, w0, #0xff
  40fc20:	cmp	w0, #0x0
  40fc24:	b.eq	40fdfc <dispatch_message_real+0x26d4>  // b.none
  40fc28:	adrp	x0, 428000 <__func__.11909+0x280>
  40fc2c:	add	x0, x0, #0xb78
  40fc30:	str	x0, [x29, #1248]
  40fc34:	ldr	x0, [x29, #120]
  40fc38:	ldr	x0, [x0, #56]
  40fc3c:	str	x0, [x29, #1256]
  40fc40:	str	xzr, [x29, #400]
  40fc44:	str	xzr, [x29, #408]
  40fc48:	b	40fc7c <dispatch_message_real+0x2554>
  40fc4c:	ldr	x0, [x29, #408]
  40fc50:	lsl	x0, x0, #3
  40fc54:	add	x1, x29, #0x4e0
  40fc58:	ldr	x0, [x1, x0]
  40fc5c:	bl	406af0 <strlen@plt>
  40fc60:	mov	x1, x0
  40fc64:	ldr	x0, [x29, #400]
  40fc68:	add	x0, x0, x1
  40fc6c:	str	x0, [x29, #400]
  40fc70:	ldr	x0, [x29, #408]
  40fc74:	add	x0, x0, #0x1
  40fc78:	str	x0, [x29, #408]
  40fc7c:	ldr	x0, [x29, #408]
  40fc80:	cmp	x0, #0x1
  40fc84:	b.hi	40fca0 <dispatch_message_real+0x2578>  // b.pmore
  40fc88:	ldr	x0, [x29, #408]
  40fc8c:	lsl	x0, x0, #3
  40fc90:	add	x1, x29, #0x4e0
  40fc94:	ldr	x0, [x1, x0]
  40fc98:	cmp	x0, #0x0
  40fc9c:	b.ne	40fc4c <dispatch_message_real+0x2524>  // b.any
  40fca0:	ldr	x0, [x29, #400]
  40fca4:	add	x0, x0, #0x1
  40fca8:	str	x0, [x29, #1000]
  40fcac:	ldr	x1, [x29, #1000]
  40fcb0:	mov	x0, #0x1                   	// #1
  40fcb4:	bl	409118 <size_multiply_overflow>
  40fcb8:	and	w0, w0, #0xff
  40fcbc:	and	x0, x0, #0xff
  40fcc0:	cmp	x0, #0x0
  40fcc4:	b.eq	40fcf0 <dispatch_message_real+0x25c8>  // b.none
  40fcc8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40fccc:	add	x1, x0, #0xe03
  40fcd0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40fcd4:	add	x4, x0, #0x538
  40fcd8:	mov	w3, #0x3cb                 	// #971
  40fcdc:	mov	x2, x1
  40fce0:	adrp	x0, 428000 <__func__.11909+0x280>
  40fce4:	add	x1, x0, #0xe0
  40fce8:	mov	w0, #0x0                   	// #0
  40fcec:	bl	405fd0 <log_assert_failed_realm@plt>
  40fcf0:	ldr	x0, [x29, #1000]
  40fcf4:	cmp	x0, #0x400, lsl #12
  40fcf8:	cset	w0, hi  // hi = pmore
  40fcfc:	and	w0, w0, #0xff
  40fd00:	and	x0, x0, #0xff
  40fd04:	cmp	x0, #0x0
  40fd08:	b.eq	40fd34 <dispatch_message_real+0x260c>  // b.none
  40fd0c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40fd10:	add	x1, x0, #0xe03
  40fd14:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40fd18:	add	x4, x0, #0x538
  40fd1c:	mov	w3, #0x3cb                 	// #971
  40fd20:	mov	x2, x1
  40fd24:	adrp	x0, 428000 <__func__.11909+0x280>
  40fd28:	add	x1, x0, #0x110
  40fd2c:	mov	w0, #0x0                   	// #0
  40fd30:	bl	405fd0 <log_assert_failed_realm@plt>
  40fd34:	ldr	x0, [x29, #1000]
  40fd38:	add	x0, x0, #0xf
  40fd3c:	lsr	x0, x0, #4
  40fd40:	lsl	x0, x0, #4
  40fd44:	sub	sp, sp, x0
  40fd48:	mov	x0, sp
  40fd4c:	add	x0, x0, #0xf
  40fd50:	lsr	x0, x0, #4
  40fd54:	lsl	x0, x0, #4
  40fd58:	str	x0, [x29, #1008]
  40fd5c:	ldr	x0, [x29, #1008]
  40fd60:	str	x0, [x29, #392]
  40fd64:	str	xzr, [x29, #408]
  40fd68:	b	40fd98 <dispatch_message_real+0x2670>
  40fd6c:	ldr	x0, [x29, #408]
  40fd70:	lsl	x0, x0, #3
  40fd74:	add	x1, x29, #0x4e0
  40fd78:	ldr	x0, [x1, x0]
  40fd7c:	mov	x1, x0
  40fd80:	ldr	x0, [x29, #392]
  40fd84:	bl	405bc0 <stpcpy@plt>
  40fd88:	str	x0, [x29, #392]
  40fd8c:	ldr	x0, [x29, #408]
  40fd90:	add	x0, x0, #0x1
  40fd94:	str	x0, [x29, #408]
  40fd98:	ldr	x0, [x29, #408]
  40fd9c:	cmp	x0, #0x1
  40fda0:	b.hi	40fdbc <dispatch_message_real+0x2694>  // b.pmore
  40fda4:	ldr	x0, [x29, #408]
  40fda8:	lsl	x0, x0, #3
  40fdac:	add	x1, x29, #0x4e0
  40fdb0:	ldr	x0, [x1, x0]
  40fdb4:	cmp	x0, #0x0
  40fdb8:	b.ne	40fd6c <dispatch_message_real+0x2644>  // b.any
  40fdbc:	ldr	x0, [x29, #392]
  40fdc0:	strb	wzr, [x0]
  40fdc4:	ldr	x0, [x29, #1008]
  40fdc8:	str	x0, [x29, #1016]
  40fdcc:	ldr	x0, [x29, #72]
  40fdd0:	add	x1, x0, #0x1
  40fdd4:	str	x1, [x29, #72]
  40fdd8:	lsl	x0, x0, #4
  40fddc:	ldr	x1, [x29, #80]
  40fde0:	add	x19, x1, x0
  40fde4:	ldr	x0, [x29, #1016]
  40fde8:	bl	406af0 <strlen@plt>
  40fdec:	mov	x1, x0
  40fdf0:	ldr	x0, [x29, #1016]
  40fdf4:	str	x0, [x19]
  40fdf8:	str	x1, [x19, #8]
  40fdfc:	ldr	x0, [x29, #120]
  40fe00:	ldr	x0, [x0, #152]
  40fe04:	cmp	x0, #0x0
  40fe08:	b.eq	40ff48 <dispatch_message_real+0x2820>  // b.none
  40fe0c:	ldr	x0, [x29, #120]
  40fe10:	ldr	x0, [x0, #152]
  40fe14:	add	x0, x0, #0x18
  40fe18:	str	x0, [x29, #1024]
  40fe1c:	ldr	x1, [x29, #1024]
  40fe20:	mov	x0, #0x1                   	// #1
  40fe24:	bl	409118 <size_multiply_overflow>
  40fe28:	and	w0, w0, #0xff
  40fe2c:	and	x0, x0, #0xff
  40fe30:	cmp	x0, #0x0
  40fe34:	b.eq	40fe60 <dispatch_message_real+0x2738>  // b.none
  40fe38:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40fe3c:	add	x1, x0, #0xe03
  40fe40:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40fe44:	add	x4, x0, #0x538
  40fe48:	mov	w3, #0x3cc                 	// #972
  40fe4c:	mov	x2, x1
  40fe50:	adrp	x0, 428000 <__func__.11909+0x280>
  40fe54:	add	x1, x0, #0xe0
  40fe58:	mov	w0, #0x0                   	// #0
  40fe5c:	bl	405fd0 <log_assert_failed_realm@plt>
  40fe60:	ldr	x0, [x29, #1024]
  40fe64:	cmp	x0, #0x400, lsl #12
  40fe68:	cset	w0, hi  // hi = pmore
  40fe6c:	and	w0, w0, #0xff
  40fe70:	and	x0, x0, #0xff
  40fe74:	cmp	x0, #0x0
  40fe78:	b.eq	40fea4 <dispatch_message_real+0x277c>  // b.none
  40fe7c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40fe80:	add	x1, x0, #0xe03
  40fe84:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40fe88:	add	x4, x0, #0x538
  40fe8c:	mov	w3, #0x3cc                 	// #972
  40fe90:	mov	x2, x1
  40fe94:	adrp	x0, 428000 <__func__.11909+0x280>
  40fe98:	add	x1, x0, #0x110
  40fe9c:	mov	w0, #0x0                   	// #0
  40fea0:	bl	405fd0 <log_assert_failed_realm@plt>
  40fea4:	ldr	x0, [x29, #1024]
  40fea8:	add	x0, x0, #0xf
  40feac:	lsr	x0, x0, #4
  40feb0:	lsl	x0, x0, #4
  40feb4:	sub	sp, sp, x0
  40feb8:	mov	x0, sp
  40febc:	add	x0, x0, #0xf
  40fec0:	lsr	x0, x0, #4
  40fec4:	lsl	x0, x0, #4
  40fec8:	str	x0, [x29, #1032]
  40fecc:	ldr	x1, [x29, #1032]
  40fed0:	adrp	x0, 428000 <__func__.11909+0x280>
  40fed4:	add	x0, x0, #0xb90
  40fed8:	mov	x2, x1
  40fedc:	mov	x3, x0
  40fee0:	ldp	x0, x1, [x3]
  40fee4:	stp	x0, x1, [x2]
  40fee8:	ldr	x0, [x3, #16]
  40feec:	str	x0, [x2, #16]
  40fef0:	ldr	x0, [x29, #1032]
  40fef4:	add	x3, x0, #0x17
  40fef8:	ldr	x0, [x29, #120]
  40fefc:	ldr	x1, [x0, #144]
  40ff00:	ldr	x0, [x29, #120]
  40ff04:	ldr	x0, [x0, #152]
  40ff08:	mov	x2, x0
  40ff0c:	mov	x0, x3
  40ff10:	bl	405c80 <mempcpy@plt>
  40ff14:	strb	wzr, [x0]
  40ff18:	ldr	x0, [x29, #72]
  40ff1c:	add	x1, x0, #0x1
  40ff20:	str	x1, [x29, #72]
  40ff24:	lsl	x0, x0, #4
  40ff28:	ldr	x1, [x29, #80]
  40ff2c:	add	x19, x1, x0
  40ff30:	ldr	x0, [x29, #1032]
  40ff34:	bl	406af0 <strlen@plt>
  40ff38:	mov	x1, x0
  40ff3c:	ldr	x0, [x29, #1032]
  40ff40:	str	x0, [x19]
  40ff44:	str	x1, [x19, #8]
  40ff48:	ldr	x0, [x29, #120]
  40ff4c:	ldr	w0, [x0, #64]
  40ff50:	bl	409194 <audit_session_is_valid>
  40ff54:	and	w0, w0, #0xff
  40ff58:	cmp	w0, #0x0
  40ff5c:	b.eq	410064 <dispatch_message_real+0x293c>  // b.none
  40ff60:	mov	x0, #0x22                  	// #34
  40ff64:	str	x0, [x29, #1040]
  40ff68:	ldr	x1, [x29, #1040]
  40ff6c:	mov	x0, #0x1                   	// #1
  40ff70:	bl	409118 <size_multiply_overflow>
  40ff74:	and	w0, w0, #0xff
  40ff78:	and	x0, x0, #0xff
  40ff7c:	cmp	x0, #0x0
  40ff80:	b.eq	40ffac <dispatch_message_real+0x2884>  // b.none
  40ff84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ff88:	add	x1, x0, #0xe03
  40ff8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ff90:	add	x4, x0, #0x538
  40ff94:	mov	w3, #0x3cd                 	// #973
  40ff98:	mov	x2, x1
  40ff9c:	adrp	x0, 428000 <__func__.11909+0x280>
  40ffa0:	add	x1, x0, #0xe0
  40ffa4:	mov	w0, #0x0                   	// #0
  40ffa8:	bl	405fd0 <log_assert_failed_realm@plt>
  40ffac:	ldr	x0, [x29, #1040]
  40ffb0:	cmp	x0, #0x400, lsl #12
  40ffb4:	cset	w0, hi  // hi = pmore
  40ffb8:	and	w0, w0, #0xff
  40ffbc:	and	x0, x0, #0xff
  40ffc0:	cmp	x0, #0x0
  40ffc4:	b.eq	40fff0 <dispatch_message_real+0x28c8>  // b.none
  40ffc8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  40ffcc:	add	x1, x0, #0xe03
  40ffd0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  40ffd4:	add	x4, x0, #0x538
  40ffd8:	mov	w3, #0x3cd                 	// #973
  40ffdc:	mov	x2, x1
  40ffe0:	adrp	x0, 428000 <__func__.11909+0x280>
  40ffe4:	add	x1, x0, #0x110
  40ffe8:	mov	w0, #0x0                   	// #0
  40ffec:	bl	405fd0 <log_assert_failed_realm@plt>
  40fff0:	ldr	x0, [x29, #1040]
  40fff4:	add	x0, x0, #0xf
  40fff8:	lsr	x0, x0, #4
  40fffc:	lsl	x0, x0, #4
  410000:	sub	sp, sp, x0
  410004:	mov	x0, sp
  410008:	add	x0, x0, #0xf
  41000c:	lsr	x0, x0, #4
  410010:	lsl	x0, x0, #4
  410014:	str	x0, [x29, #1048]
  410018:	ldr	x0, [x29, #120]
  41001c:	ldr	w0, [x0, #64]
  410020:	mov	w2, w0
  410024:	adrp	x0, 428000 <__func__.11909+0x280>
  410028:	add	x1, x0, #0xba8
  41002c:	ldr	x0, [x29, #1048]
  410030:	bl	4069c0 <sprintf@plt>
  410034:	ldr	x0, [x29, #72]
  410038:	add	x1, x0, #0x1
  41003c:	str	x1, [x29, #72]
  410040:	lsl	x0, x0, #4
  410044:	ldr	x1, [x29, #80]
  410048:	add	x19, x1, x0
  41004c:	ldr	x0, [x29, #1048]
  410050:	bl	406af0 <strlen@plt>
  410054:	mov	x1, x0
  410058:	ldr	x0, [x29, #1048]
  41005c:	str	x0, [x19]
  410060:	str	x1, [x19, #8]
  410064:	ldr	x0, [x29, #120]
  410068:	ldr	w0, [x0, #68]
  41006c:	bl	4061c0 <uid_is_valid@plt>
  410070:	and	w0, w0, #0xff
  410074:	cmp	w0, #0x0
  410078:	b.eq	410180 <dispatch_message_real+0x2a58>  // b.none
  41007c:	mov	x0, #0x23                  	// #35
  410080:	str	x0, [x29, #1056]
  410084:	ldr	x1, [x29, #1056]
  410088:	mov	x0, #0x1                   	// #1
  41008c:	bl	409118 <size_multiply_overflow>
  410090:	and	w0, w0, #0xff
  410094:	and	x0, x0, #0xff
  410098:	cmp	x0, #0x0
  41009c:	b.eq	4100c8 <dispatch_message_real+0x29a0>  // b.none
  4100a0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4100a4:	add	x1, x0, #0xe03
  4100a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4100ac:	add	x4, x0, #0x538
  4100b0:	mov	w3, #0x3ce                 	// #974
  4100b4:	mov	x2, x1
  4100b8:	adrp	x0, 428000 <__func__.11909+0x280>
  4100bc:	add	x1, x0, #0xe0
  4100c0:	mov	w0, #0x0                   	// #0
  4100c4:	bl	405fd0 <log_assert_failed_realm@plt>
  4100c8:	ldr	x0, [x29, #1056]
  4100cc:	cmp	x0, #0x400, lsl #12
  4100d0:	cset	w0, hi  // hi = pmore
  4100d4:	and	w0, w0, #0xff
  4100d8:	and	x0, x0, #0xff
  4100dc:	cmp	x0, #0x0
  4100e0:	b.eq	41010c <dispatch_message_real+0x29e4>  // b.none
  4100e4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4100e8:	add	x1, x0, #0xe03
  4100ec:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4100f0:	add	x4, x0, #0x538
  4100f4:	mov	w3, #0x3ce                 	// #974
  4100f8:	mov	x2, x1
  4100fc:	adrp	x0, 428000 <__func__.11909+0x280>
  410100:	add	x1, x0, #0x110
  410104:	mov	w0, #0x0                   	// #0
  410108:	bl	405fd0 <log_assert_failed_realm@plt>
  41010c:	ldr	x0, [x29, #1056]
  410110:	add	x0, x0, #0xf
  410114:	lsr	x0, x0, #4
  410118:	lsl	x0, x0, #4
  41011c:	sub	sp, sp, x0
  410120:	mov	x0, sp
  410124:	add	x0, x0, #0xf
  410128:	lsr	x0, x0, #4
  41012c:	lsl	x0, x0, #4
  410130:	str	x0, [x29, #1064]
  410134:	ldr	x0, [x29, #120]
  410138:	ldr	w0, [x0, #68]
  41013c:	mov	w2, w0
  410140:	adrp	x0, 428000 <__func__.11909+0x280>
  410144:	add	x1, x0, #0xbc0
  410148:	ldr	x0, [x29, #1064]
  41014c:	bl	4069c0 <sprintf@plt>
  410150:	ldr	x0, [x29, #72]
  410154:	add	x1, x0, #0x1
  410158:	str	x1, [x29, #72]
  41015c:	lsl	x0, x0, #4
  410160:	ldr	x1, [x29, #80]
  410164:	add	x19, x1, x0
  410168:	ldr	x0, [x29, #1064]
  41016c:	bl	406af0 <strlen@plt>
  410170:	mov	x1, x0
  410174:	ldr	x0, [x29, #1064]
  410178:	str	x0, [x19]
  41017c:	str	x1, [x19, #8]
  410180:	ldr	x0, [x29, #120]
  410184:	ldr	x0, [x0, #72]
  410188:	bl	4093bc <isempty>
  41018c:	and	w0, w0, #0xff
  410190:	eor	w0, w0, #0x1
  410194:	and	w0, w0, #0xff
  410198:	cmp	w0, #0x0
  41019c:	b.eq	410374 <dispatch_message_real+0x2c4c>  // b.none
  4101a0:	adrp	x0, 428000 <__func__.11909+0x280>
  4101a4:	add	x0, x0, #0xbe0
  4101a8:	str	x0, [x29, #1248]
  4101ac:	ldr	x0, [x29, #120]
  4101b0:	ldr	x0, [x0, #72]
  4101b4:	str	x0, [x29, #1256]
  4101b8:	str	xzr, [x29, #424]
  4101bc:	str	xzr, [x29, #432]
  4101c0:	b	4101f4 <dispatch_message_real+0x2acc>
  4101c4:	ldr	x0, [x29, #432]
  4101c8:	lsl	x0, x0, #3
  4101cc:	add	x1, x29, #0x4e0
  4101d0:	ldr	x0, [x1, x0]
  4101d4:	bl	406af0 <strlen@plt>
  4101d8:	mov	x1, x0
  4101dc:	ldr	x0, [x29, #424]
  4101e0:	add	x0, x0, x1
  4101e4:	str	x0, [x29, #424]
  4101e8:	ldr	x0, [x29, #432]
  4101ec:	add	x0, x0, #0x1
  4101f0:	str	x0, [x29, #432]
  4101f4:	ldr	x0, [x29, #432]
  4101f8:	cmp	x0, #0x1
  4101fc:	b.hi	410218 <dispatch_message_real+0x2af0>  // b.pmore
  410200:	ldr	x0, [x29, #432]
  410204:	lsl	x0, x0, #3
  410208:	add	x1, x29, #0x4e0
  41020c:	ldr	x0, [x1, x0]
  410210:	cmp	x0, #0x0
  410214:	b.ne	4101c4 <dispatch_message_real+0x2a9c>  // b.any
  410218:	ldr	x0, [x29, #424]
  41021c:	add	x0, x0, #0x1
  410220:	str	x0, [x29, #1072]
  410224:	ldr	x1, [x29, #1072]
  410228:	mov	x0, #0x1                   	// #1
  41022c:	bl	409118 <size_multiply_overflow>
  410230:	and	w0, w0, #0xff
  410234:	and	x0, x0, #0xff
  410238:	cmp	x0, #0x0
  41023c:	b.eq	410268 <dispatch_message_real+0x2b40>  // b.none
  410240:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410244:	add	x1, x0, #0xe03
  410248:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41024c:	add	x4, x0, #0x538
  410250:	mov	w3, #0x3d0                 	// #976
  410254:	mov	x2, x1
  410258:	adrp	x0, 428000 <__func__.11909+0x280>
  41025c:	add	x1, x0, #0xe0
  410260:	mov	w0, #0x0                   	// #0
  410264:	bl	405fd0 <log_assert_failed_realm@plt>
  410268:	ldr	x0, [x29, #1072]
  41026c:	cmp	x0, #0x400, lsl #12
  410270:	cset	w0, hi  // hi = pmore
  410274:	and	w0, w0, #0xff
  410278:	and	x0, x0, #0xff
  41027c:	cmp	x0, #0x0
  410280:	b.eq	4102ac <dispatch_message_real+0x2b84>  // b.none
  410284:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410288:	add	x1, x0, #0xe03
  41028c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410290:	add	x4, x0, #0x538
  410294:	mov	w3, #0x3d0                 	// #976
  410298:	mov	x2, x1
  41029c:	adrp	x0, 428000 <__func__.11909+0x280>
  4102a0:	add	x1, x0, #0x110
  4102a4:	mov	w0, #0x0                   	// #0
  4102a8:	bl	405fd0 <log_assert_failed_realm@plt>
  4102ac:	ldr	x0, [x29, #1072]
  4102b0:	add	x0, x0, #0xf
  4102b4:	lsr	x0, x0, #4
  4102b8:	lsl	x0, x0, #4
  4102bc:	sub	sp, sp, x0
  4102c0:	mov	x0, sp
  4102c4:	add	x0, x0, #0xf
  4102c8:	lsr	x0, x0, #4
  4102cc:	lsl	x0, x0, #4
  4102d0:	str	x0, [x29, #1080]
  4102d4:	ldr	x0, [x29, #1080]
  4102d8:	str	x0, [x29, #416]
  4102dc:	str	xzr, [x29, #432]
  4102e0:	b	410310 <dispatch_message_real+0x2be8>
  4102e4:	ldr	x0, [x29, #432]
  4102e8:	lsl	x0, x0, #3
  4102ec:	add	x1, x29, #0x4e0
  4102f0:	ldr	x0, [x1, x0]
  4102f4:	mov	x1, x0
  4102f8:	ldr	x0, [x29, #416]
  4102fc:	bl	405bc0 <stpcpy@plt>
  410300:	str	x0, [x29, #416]
  410304:	ldr	x0, [x29, #432]
  410308:	add	x0, x0, #0x1
  41030c:	str	x0, [x29, #432]
  410310:	ldr	x0, [x29, #432]
  410314:	cmp	x0, #0x1
  410318:	b.hi	410334 <dispatch_message_real+0x2c0c>  // b.pmore
  41031c:	ldr	x0, [x29, #432]
  410320:	lsl	x0, x0, #3
  410324:	add	x1, x29, #0x4e0
  410328:	ldr	x0, [x1, x0]
  41032c:	cmp	x0, #0x0
  410330:	b.ne	4102e4 <dispatch_message_real+0x2bbc>  // b.any
  410334:	ldr	x0, [x29, #416]
  410338:	strb	wzr, [x0]
  41033c:	ldr	x0, [x29, #1080]
  410340:	str	x0, [x29, #1088]
  410344:	ldr	x0, [x29, #72]
  410348:	add	x1, x0, #0x1
  41034c:	str	x1, [x29, #72]
  410350:	lsl	x0, x0, #4
  410354:	ldr	x1, [x29, #80]
  410358:	add	x19, x1, x0
  41035c:	ldr	x0, [x29, #1088]
  410360:	bl	406af0 <strlen@plt>
  410364:	mov	x1, x0
  410368:	ldr	x0, [x29, #1088]
  41036c:	str	x0, [x19]
  410370:	str	x1, [x19, #8]
  410374:	ldr	x0, [x29, #120]
  410378:	ldr	x0, [x0, #80]
  41037c:	bl	4093bc <isempty>
  410380:	and	w0, w0, #0xff
  410384:	eor	w0, w0, #0x1
  410388:	and	w0, w0, #0xff
  41038c:	cmp	w0, #0x0
  410390:	b.eq	410568 <dispatch_message_real+0x2e40>  // b.none
  410394:	adrp	x0, 428000 <__func__.11909+0x280>
  410398:	add	x0, x0, #0xbf8
  41039c:	str	x0, [x29, #1248]
  4103a0:	ldr	x0, [x29, #120]
  4103a4:	ldr	x0, [x0, #80]
  4103a8:	str	x0, [x29, #1256]
  4103ac:	str	xzr, [x29, #448]
  4103b0:	str	xzr, [x29, #456]
  4103b4:	b	4103e8 <dispatch_message_real+0x2cc0>
  4103b8:	ldr	x0, [x29, #456]
  4103bc:	lsl	x0, x0, #3
  4103c0:	add	x1, x29, #0x4e0
  4103c4:	ldr	x0, [x1, x0]
  4103c8:	bl	406af0 <strlen@plt>
  4103cc:	mov	x1, x0
  4103d0:	ldr	x0, [x29, #448]
  4103d4:	add	x0, x0, x1
  4103d8:	str	x0, [x29, #448]
  4103dc:	ldr	x0, [x29, #456]
  4103e0:	add	x0, x0, #0x1
  4103e4:	str	x0, [x29, #456]
  4103e8:	ldr	x0, [x29, #456]
  4103ec:	cmp	x0, #0x1
  4103f0:	b.hi	41040c <dispatch_message_real+0x2ce4>  // b.pmore
  4103f4:	ldr	x0, [x29, #456]
  4103f8:	lsl	x0, x0, #3
  4103fc:	add	x1, x29, #0x4e0
  410400:	ldr	x0, [x1, x0]
  410404:	cmp	x0, #0x0
  410408:	b.ne	4103b8 <dispatch_message_real+0x2c90>  // b.any
  41040c:	ldr	x0, [x29, #448]
  410410:	add	x0, x0, #0x1
  410414:	str	x0, [x29, #1096]
  410418:	ldr	x1, [x29, #1096]
  41041c:	mov	x0, #0x1                   	// #1
  410420:	bl	409118 <size_multiply_overflow>
  410424:	and	w0, w0, #0xff
  410428:	and	x0, x0, #0xff
  41042c:	cmp	x0, #0x0
  410430:	b.eq	41045c <dispatch_message_real+0x2d34>  // b.none
  410434:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410438:	add	x1, x0, #0xe03
  41043c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410440:	add	x4, x0, #0x538
  410444:	mov	w3, #0x3d1                 	// #977
  410448:	mov	x2, x1
  41044c:	adrp	x0, 428000 <__func__.11909+0x280>
  410450:	add	x1, x0, #0xe0
  410454:	mov	w0, #0x0                   	// #0
  410458:	bl	405fd0 <log_assert_failed_realm@plt>
  41045c:	ldr	x0, [x29, #1096]
  410460:	cmp	x0, #0x400, lsl #12
  410464:	cset	w0, hi  // hi = pmore
  410468:	and	w0, w0, #0xff
  41046c:	and	x0, x0, #0xff
  410470:	cmp	x0, #0x0
  410474:	b.eq	4104a0 <dispatch_message_real+0x2d78>  // b.none
  410478:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41047c:	add	x1, x0, #0xe03
  410480:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410484:	add	x4, x0, #0x538
  410488:	mov	w3, #0x3d1                 	// #977
  41048c:	mov	x2, x1
  410490:	adrp	x0, 428000 <__func__.11909+0x280>
  410494:	add	x1, x0, #0x110
  410498:	mov	w0, #0x0                   	// #0
  41049c:	bl	405fd0 <log_assert_failed_realm@plt>
  4104a0:	ldr	x0, [x29, #1096]
  4104a4:	add	x0, x0, #0xf
  4104a8:	lsr	x0, x0, #4
  4104ac:	lsl	x0, x0, #4
  4104b0:	sub	sp, sp, x0
  4104b4:	mov	x0, sp
  4104b8:	add	x0, x0, #0xf
  4104bc:	lsr	x0, x0, #4
  4104c0:	lsl	x0, x0, #4
  4104c4:	str	x0, [x29, #1104]
  4104c8:	ldr	x0, [x29, #1104]
  4104cc:	str	x0, [x29, #440]
  4104d0:	str	xzr, [x29, #456]
  4104d4:	b	410504 <dispatch_message_real+0x2ddc>
  4104d8:	ldr	x0, [x29, #456]
  4104dc:	lsl	x0, x0, #3
  4104e0:	add	x1, x29, #0x4e0
  4104e4:	ldr	x0, [x1, x0]
  4104e8:	mov	x1, x0
  4104ec:	ldr	x0, [x29, #440]
  4104f0:	bl	405bc0 <stpcpy@plt>
  4104f4:	str	x0, [x29, #440]
  4104f8:	ldr	x0, [x29, #456]
  4104fc:	add	x0, x0, #0x1
  410500:	str	x0, [x29, #456]
  410504:	ldr	x0, [x29, #456]
  410508:	cmp	x0, #0x1
  41050c:	b.hi	410528 <dispatch_message_real+0x2e00>  // b.pmore
  410510:	ldr	x0, [x29, #456]
  410514:	lsl	x0, x0, #3
  410518:	add	x1, x29, #0x4e0
  41051c:	ldr	x0, [x1, x0]
  410520:	cmp	x0, #0x0
  410524:	b.ne	4104d8 <dispatch_message_real+0x2db0>  // b.any
  410528:	ldr	x0, [x29, #440]
  41052c:	strb	wzr, [x0]
  410530:	ldr	x0, [x29, #1104]
  410534:	str	x0, [x29, #1112]
  410538:	ldr	x0, [x29, #72]
  41053c:	add	x1, x0, #0x1
  410540:	str	x1, [x29, #72]
  410544:	lsl	x0, x0, #4
  410548:	ldr	x1, [x29, #80]
  41054c:	add	x19, x1, x0
  410550:	ldr	x0, [x29, #1112]
  410554:	bl	406af0 <strlen@plt>
  410558:	mov	x1, x0
  41055c:	ldr	x0, [x29, #1112]
  410560:	str	x0, [x19]
  410564:	str	x1, [x19, #8]
  410568:	ldr	x0, [x29, #120]
  41056c:	ldr	w0, [x0, #88]
  410570:	bl	4061c0 <uid_is_valid@plt>
  410574:	and	w0, w0, #0xff
  410578:	cmp	w0, #0x0
  41057c:	b.eq	410684 <dispatch_message_real+0x2f5c>  // b.none
  410580:	mov	x0, #0x26                  	// #38
  410584:	str	x0, [x29, #1120]
  410588:	ldr	x1, [x29, #1120]
  41058c:	mov	x0, #0x1                   	// #1
  410590:	bl	409118 <size_multiply_overflow>
  410594:	and	w0, w0, #0xff
  410598:	and	x0, x0, #0xff
  41059c:	cmp	x0, #0x0
  4105a0:	b.eq	4105cc <dispatch_message_real+0x2ea4>  // b.none
  4105a4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4105a8:	add	x1, x0, #0xe03
  4105ac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4105b0:	add	x4, x0, #0x538
  4105b4:	mov	w3, #0x3d2                 	// #978
  4105b8:	mov	x2, x1
  4105bc:	adrp	x0, 428000 <__func__.11909+0x280>
  4105c0:	add	x1, x0, #0xe0
  4105c4:	mov	w0, #0x0                   	// #0
  4105c8:	bl	405fd0 <log_assert_failed_realm@plt>
  4105cc:	ldr	x0, [x29, #1120]
  4105d0:	cmp	x0, #0x400, lsl #12
  4105d4:	cset	w0, hi  // hi = pmore
  4105d8:	and	w0, w0, #0xff
  4105dc:	and	x0, x0, #0xff
  4105e0:	cmp	x0, #0x0
  4105e4:	b.eq	410610 <dispatch_message_real+0x2ee8>  // b.none
  4105e8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4105ec:	add	x1, x0, #0xe03
  4105f0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4105f4:	add	x4, x0, #0x538
  4105f8:	mov	w3, #0x3d2                 	// #978
  4105fc:	mov	x2, x1
  410600:	adrp	x0, 428000 <__func__.11909+0x280>
  410604:	add	x1, x0, #0x110
  410608:	mov	w0, #0x0                   	// #0
  41060c:	bl	405fd0 <log_assert_failed_realm@plt>
  410610:	ldr	x0, [x29, #1120]
  410614:	add	x0, x0, #0xf
  410618:	lsr	x0, x0, #4
  41061c:	lsl	x0, x0, #4
  410620:	sub	sp, sp, x0
  410624:	mov	x0, sp
  410628:	add	x0, x0, #0xf
  41062c:	lsr	x0, x0, #4
  410630:	lsl	x0, x0, #4
  410634:	str	x0, [x29, #1128]
  410638:	ldr	x0, [x29, #120]
  41063c:	ldr	w0, [x0, #88]
  410640:	mov	w2, w0
  410644:	adrp	x0, 428000 <__func__.11909+0x280>
  410648:	add	x1, x0, #0xc10
  41064c:	ldr	x0, [x29, #1128]
  410650:	bl	4069c0 <sprintf@plt>
  410654:	ldr	x0, [x29, #72]
  410658:	add	x1, x0, #0x1
  41065c:	str	x1, [x29, #72]
  410660:	lsl	x0, x0, #4
  410664:	ldr	x1, [x29, #80]
  410668:	add	x19, x1, x0
  41066c:	ldr	x0, [x29, #1128]
  410670:	bl	406af0 <strlen@plt>
  410674:	mov	x1, x0
  410678:	ldr	x0, [x29, #1128]
  41067c:	str	x0, [x19]
  410680:	str	x1, [x19, #8]
  410684:	ldr	x0, [x29, #120]
  410688:	ldr	x0, [x0, #96]
  41068c:	bl	4093bc <isempty>
  410690:	and	w0, w0, #0xff
  410694:	eor	w0, w0, #0x1
  410698:	and	w0, w0, #0xff
  41069c:	cmp	w0, #0x0
  4106a0:	b.eq	410878 <dispatch_message_real+0x3150>  // b.none
  4106a4:	adrp	x0, 428000 <__func__.11909+0x280>
  4106a8:	add	x0, x0, #0xc30
  4106ac:	str	x0, [x29, #1248]
  4106b0:	ldr	x0, [x29, #120]
  4106b4:	ldr	x0, [x0, #96]
  4106b8:	str	x0, [x29, #1256]
  4106bc:	str	xzr, [x29, #472]
  4106c0:	str	xzr, [x29, #480]
  4106c4:	b	4106f8 <dispatch_message_real+0x2fd0>
  4106c8:	ldr	x0, [x29, #480]
  4106cc:	lsl	x0, x0, #3
  4106d0:	add	x1, x29, #0x4e0
  4106d4:	ldr	x0, [x1, x0]
  4106d8:	bl	406af0 <strlen@plt>
  4106dc:	mov	x1, x0
  4106e0:	ldr	x0, [x29, #472]
  4106e4:	add	x0, x0, x1
  4106e8:	str	x0, [x29, #472]
  4106ec:	ldr	x0, [x29, #480]
  4106f0:	add	x0, x0, #0x1
  4106f4:	str	x0, [x29, #480]
  4106f8:	ldr	x0, [x29, #480]
  4106fc:	cmp	x0, #0x1
  410700:	b.hi	41071c <dispatch_message_real+0x2ff4>  // b.pmore
  410704:	ldr	x0, [x29, #480]
  410708:	lsl	x0, x0, #3
  41070c:	add	x1, x29, #0x4e0
  410710:	ldr	x0, [x1, x0]
  410714:	cmp	x0, #0x0
  410718:	b.ne	4106c8 <dispatch_message_real+0x2fa0>  // b.any
  41071c:	ldr	x0, [x29, #472]
  410720:	add	x0, x0, #0x1
  410724:	str	x0, [x29, #1136]
  410728:	ldr	x1, [x29, #1136]
  41072c:	mov	x0, #0x1                   	// #1
  410730:	bl	409118 <size_multiply_overflow>
  410734:	and	w0, w0, #0xff
  410738:	and	x0, x0, #0xff
  41073c:	cmp	x0, #0x0
  410740:	b.eq	41076c <dispatch_message_real+0x3044>  // b.none
  410744:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410748:	add	x1, x0, #0xe03
  41074c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410750:	add	x4, x0, #0x538
  410754:	mov	w3, #0x3d3                 	// #979
  410758:	mov	x2, x1
  41075c:	adrp	x0, 428000 <__func__.11909+0x280>
  410760:	add	x1, x0, #0xe0
  410764:	mov	w0, #0x0                   	// #0
  410768:	bl	405fd0 <log_assert_failed_realm@plt>
  41076c:	ldr	x0, [x29, #1136]
  410770:	cmp	x0, #0x400, lsl #12
  410774:	cset	w0, hi  // hi = pmore
  410778:	and	w0, w0, #0xff
  41077c:	and	x0, x0, #0xff
  410780:	cmp	x0, #0x0
  410784:	b.eq	4107b0 <dispatch_message_real+0x3088>  // b.none
  410788:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41078c:	add	x1, x0, #0xe03
  410790:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410794:	add	x4, x0, #0x538
  410798:	mov	w3, #0x3d3                 	// #979
  41079c:	mov	x2, x1
  4107a0:	adrp	x0, 428000 <__func__.11909+0x280>
  4107a4:	add	x1, x0, #0x110
  4107a8:	mov	w0, #0x0                   	// #0
  4107ac:	bl	405fd0 <log_assert_failed_realm@plt>
  4107b0:	ldr	x0, [x29, #1136]
  4107b4:	add	x0, x0, #0xf
  4107b8:	lsr	x0, x0, #4
  4107bc:	lsl	x0, x0, #4
  4107c0:	sub	sp, sp, x0
  4107c4:	mov	x0, sp
  4107c8:	add	x0, x0, #0xf
  4107cc:	lsr	x0, x0, #4
  4107d0:	lsl	x0, x0, #4
  4107d4:	str	x0, [x29, #1144]
  4107d8:	ldr	x0, [x29, #1144]
  4107dc:	str	x0, [x29, #464]
  4107e0:	str	xzr, [x29, #480]
  4107e4:	b	410814 <dispatch_message_real+0x30ec>
  4107e8:	ldr	x0, [x29, #480]
  4107ec:	lsl	x0, x0, #3
  4107f0:	add	x1, x29, #0x4e0
  4107f4:	ldr	x0, [x1, x0]
  4107f8:	mov	x1, x0
  4107fc:	ldr	x0, [x29, #464]
  410800:	bl	405bc0 <stpcpy@plt>
  410804:	str	x0, [x29, #464]
  410808:	ldr	x0, [x29, #480]
  41080c:	add	x0, x0, #0x1
  410810:	str	x0, [x29, #480]
  410814:	ldr	x0, [x29, #480]
  410818:	cmp	x0, #0x1
  41081c:	b.hi	410838 <dispatch_message_real+0x3110>  // b.pmore
  410820:	ldr	x0, [x29, #480]
  410824:	lsl	x0, x0, #3
  410828:	add	x1, x29, #0x4e0
  41082c:	ldr	x0, [x1, x0]
  410830:	cmp	x0, #0x0
  410834:	b.ne	4107e8 <dispatch_message_real+0x30c0>  // b.any
  410838:	ldr	x0, [x29, #464]
  41083c:	strb	wzr, [x0]
  410840:	ldr	x0, [x29, #1144]
  410844:	str	x0, [x29, #1152]
  410848:	ldr	x0, [x29, #72]
  41084c:	add	x1, x0, #0x1
  410850:	str	x1, [x29, #72]
  410854:	lsl	x0, x0, #4
  410858:	ldr	x1, [x29, #80]
  41085c:	add	x19, x1, x0
  410860:	ldr	x0, [x29, #1152]
  410864:	bl	406af0 <strlen@plt>
  410868:	mov	x1, x0
  41086c:	ldr	x0, [x29, #1152]
  410870:	str	x0, [x19]
  410874:	str	x1, [x19, #8]
  410878:	ldr	x0, [x29, #120]
  41087c:	ldr	x0, [x0, #104]
  410880:	bl	4093bc <isempty>
  410884:	and	w0, w0, #0xff
  410888:	eor	w0, w0, #0x1
  41088c:	and	w0, w0, #0xff
  410890:	cmp	w0, #0x0
  410894:	b.eq	410a6c <dispatch_message_real+0x3344>  // b.none
  410898:	adrp	x0, 428000 <__func__.11909+0x280>
  41089c:	add	x0, x0, #0xc48
  4108a0:	str	x0, [x29, #1248]
  4108a4:	ldr	x0, [x29, #120]
  4108a8:	ldr	x0, [x0, #104]
  4108ac:	str	x0, [x29, #1256]
  4108b0:	str	xzr, [x29, #496]
  4108b4:	str	xzr, [x29, #504]
  4108b8:	b	4108ec <dispatch_message_real+0x31c4>
  4108bc:	ldr	x0, [x29, #504]
  4108c0:	lsl	x0, x0, #3
  4108c4:	add	x1, x29, #0x4e0
  4108c8:	ldr	x0, [x1, x0]
  4108cc:	bl	406af0 <strlen@plt>
  4108d0:	mov	x1, x0
  4108d4:	ldr	x0, [x29, #496]
  4108d8:	add	x0, x0, x1
  4108dc:	str	x0, [x29, #496]
  4108e0:	ldr	x0, [x29, #504]
  4108e4:	add	x0, x0, #0x1
  4108e8:	str	x0, [x29, #504]
  4108ec:	ldr	x0, [x29, #504]
  4108f0:	cmp	x0, #0x1
  4108f4:	b.hi	410910 <dispatch_message_real+0x31e8>  // b.pmore
  4108f8:	ldr	x0, [x29, #504]
  4108fc:	lsl	x0, x0, #3
  410900:	add	x1, x29, #0x4e0
  410904:	ldr	x0, [x1, x0]
  410908:	cmp	x0, #0x0
  41090c:	b.ne	4108bc <dispatch_message_real+0x3194>  // b.any
  410910:	ldr	x0, [x29, #496]
  410914:	add	x0, x0, #0x1
  410918:	str	x0, [x29, #1160]
  41091c:	ldr	x1, [x29, #1160]
  410920:	mov	x0, #0x1                   	// #1
  410924:	bl	409118 <size_multiply_overflow>
  410928:	and	w0, w0, #0xff
  41092c:	and	x0, x0, #0xff
  410930:	cmp	x0, #0x0
  410934:	b.eq	410960 <dispatch_message_real+0x3238>  // b.none
  410938:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41093c:	add	x1, x0, #0xe03
  410940:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410944:	add	x4, x0, #0x538
  410948:	mov	w3, #0x3d4                 	// #980
  41094c:	mov	x2, x1
  410950:	adrp	x0, 428000 <__func__.11909+0x280>
  410954:	add	x1, x0, #0xe0
  410958:	mov	w0, #0x0                   	// #0
  41095c:	bl	405fd0 <log_assert_failed_realm@plt>
  410960:	ldr	x0, [x29, #1160]
  410964:	cmp	x0, #0x400, lsl #12
  410968:	cset	w0, hi  // hi = pmore
  41096c:	and	w0, w0, #0xff
  410970:	and	x0, x0, #0xff
  410974:	cmp	x0, #0x0
  410978:	b.eq	4109a4 <dispatch_message_real+0x327c>  // b.none
  41097c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410980:	add	x1, x0, #0xe03
  410984:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410988:	add	x4, x0, #0x538
  41098c:	mov	w3, #0x3d4                 	// #980
  410990:	mov	x2, x1
  410994:	adrp	x0, 428000 <__func__.11909+0x280>
  410998:	add	x1, x0, #0x110
  41099c:	mov	w0, #0x0                   	// #0
  4109a0:	bl	405fd0 <log_assert_failed_realm@plt>
  4109a4:	ldr	x0, [x29, #1160]
  4109a8:	add	x0, x0, #0xf
  4109ac:	lsr	x0, x0, #4
  4109b0:	lsl	x0, x0, #4
  4109b4:	sub	sp, sp, x0
  4109b8:	mov	x0, sp
  4109bc:	add	x0, x0, #0xf
  4109c0:	lsr	x0, x0, #4
  4109c4:	lsl	x0, x0, #4
  4109c8:	str	x0, [x29, #1168]
  4109cc:	ldr	x0, [x29, #1168]
  4109d0:	str	x0, [x29, #488]
  4109d4:	str	xzr, [x29, #504]
  4109d8:	b	410a08 <dispatch_message_real+0x32e0>
  4109dc:	ldr	x0, [x29, #504]
  4109e0:	lsl	x0, x0, #3
  4109e4:	add	x1, x29, #0x4e0
  4109e8:	ldr	x0, [x1, x0]
  4109ec:	mov	x1, x0
  4109f0:	ldr	x0, [x29, #488]
  4109f4:	bl	405bc0 <stpcpy@plt>
  4109f8:	str	x0, [x29, #488]
  4109fc:	ldr	x0, [x29, #504]
  410a00:	add	x0, x0, #0x1
  410a04:	str	x0, [x29, #504]
  410a08:	ldr	x0, [x29, #504]
  410a0c:	cmp	x0, #0x1
  410a10:	b.hi	410a2c <dispatch_message_real+0x3304>  // b.pmore
  410a14:	ldr	x0, [x29, #504]
  410a18:	lsl	x0, x0, #3
  410a1c:	add	x1, x29, #0x4e0
  410a20:	ldr	x0, [x1, x0]
  410a24:	cmp	x0, #0x0
  410a28:	b.ne	4109dc <dispatch_message_real+0x32b4>  // b.any
  410a2c:	ldr	x0, [x29, #488]
  410a30:	strb	wzr, [x0]
  410a34:	ldr	x0, [x29, #1168]
  410a38:	str	x0, [x29, #1176]
  410a3c:	ldr	x0, [x29, #72]
  410a40:	add	x1, x0, #0x1
  410a44:	str	x1, [x29, #72]
  410a48:	lsl	x0, x0, #4
  410a4c:	ldr	x1, [x29, #80]
  410a50:	add	x19, x1, x0
  410a54:	ldr	x0, [x29, #1176]
  410a58:	bl	406af0 <strlen@plt>
  410a5c:	mov	x1, x0
  410a60:	ldr	x0, [x29, #1176]
  410a64:	str	x0, [x19]
  410a68:	str	x1, [x19, #8]
  410a6c:	ldr	x0, [x29, #120]
  410a70:	ldr	x0, [x0, #112]
  410a74:	bl	4093bc <isempty>
  410a78:	and	w0, w0, #0xff
  410a7c:	eor	w0, w0, #0x1
  410a80:	and	w0, w0, #0xff
  410a84:	cmp	w0, #0x0
  410a88:	b.eq	410c60 <dispatch_message_real+0x3538>  // b.none
  410a8c:	adrp	x0, 428000 <__func__.11909+0x280>
  410a90:	add	x0, x0, #0xc68
  410a94:	str	x0, [x29, #1248]
  410a98:	ldr	x0, [x29, #120]
  410a9c:	ldr	x0, [x0, #112]
  410aa0:	str	x0, [x29, #1256]
  410aa4:	str	xzr, [x29, #520]
  410aa8:	str	xzr, [x29, #528]
  410aac:	b	410ae0 <dispatch_message_real+0x33b8>
  410ab0:	ldr	x0, [x29, #528]
  410ab4:	lsl	x0, x0, #3
  410ab8:	add	x1, x29, #0x4e0
  410abc:	ldr	x0, [x1, x0]
  410ac0:	bl	406af0 <strlen@plt>
  410ac4:	mov	x1, x0
  410ac8:	ldr	x0, [x29, #520]
  410acc:	add	x0, x0, x1
  410ad0:	str	x0, [x29, #520]
  410ad4:	ldr	x0, [x29, #528]
  410ad8:	add	x0, x0, #0x1
  410adc:	str	x0, [x29, #528]
  410ae0:	ldr	x0, [x29, #528]
  410ae4:	cmp	x0, #0x1
  410ae8:	b.hi	410b04 <dispatch_message_real+0x33dc>  // b.pmore
  410aec:	ldr	x0, [x29, #528]
  410af0:	lsl	x0, x0, #3
  410af4:	add	x1, x29, #0x4e0
  410af8:	ldr	x0, [x1, x0]
  410afc:	cmp	x0, #0x0
  410b00:	b.ne	410ab0 <dispatch_message_real+0x3388>  // b.any
  410b04:	ldr	x0, [x29, #520]
  410b08:	add	x0, x0, #0x1
  410b0c:	str	x0, [x29, #1184]
  410b10:	ldr	x1, [x29, #1184]
  410b14:	mov	x0, #0x1                   	// #1
  410b18:	bl	409118 <size_multiply_overflow>
  410b1c:	and	w0, w0, #0xff
  410b20:	and	x0, x0, #0xff
  410b24:	cmp	x0, #0x0
  410b28:	b.eq	410b54 <dispatch_message_real+0x342c>  // b.none
  410b2c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410b30:	add	x1, x0, #0xe03
  410b34:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410b38:	add	x4, x0, #0x538
  410b3c:	mov	w3, #0x3d5                 	// #981
  410b40:	mov	x2, x1
  410b44:	adrp	x0, 428000 <__func__.11909+0x280>
  410b48:	add	x1, x0, #0xe0
  410b4c:	mov	w0, #0x0                   	// #0
  410b50:	bl	405fd0 <log_assert_failed_realm@plt>
  410b54:	ldr	x0, [x29, #1184]
  410b58:	cmp	x0, #0x400, lsl #12
  410b5c:	cset	w0, hi  // hi = pmore
  410b60:	and	w0, w0, #0xff
  410b64:	and	x0, x0, #0xff
  410b68:	cmp	x0, #0x0
  410b6c:	b.eq	410b98 <dispatch_message_real+0x3470>  // b.none
  410b70:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410b74:	add	x1, x0, #0xe03
  410b78:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410b7c:	add	x4, x0, #0x538
  410b80:	mov	w3, #0x3d5                 	// #981
  410b84:	mov	x2, x1
  410b88:	adrp	x0, 428000 <__func__.11909+0x280>
  410b8c:	add	x1, x0, #0x110
  410b90:	mov	w0, #0x0                   	// #0
  410b94:	bl	405fd0 <log_assert_failed_realm@plt>
  410b98:	ldr	x0, [x29, #1184]
  410b9c:	add	x0, x0, #0xf
  410ba0:	lsr	x0, x0, #4
  410ba4:	lsl	x0, x0, #4
  410ba8:	sub	sp, sp, x0
  410bac:	mov	x0, sp
  410bb0:	add	x0, x0, #0xf
  410bb4:	lsr	x0, x0, #4
  410bb8:	lsl	x0, x0, #4
  410bbc:	str	x0, [x29, #1192]
  410bc0:	ldr	x0, [x29, #1192]
  410bc4:	str	x0, [x29, #512]
  410bc8:	str	xzr, [x29, #528]
  410bcc:	b	410bfc <dispatch_message_real+0x34d4>
  410bd0:	ldr	x0, [x29, #528]
  410bd4:	lsl	x0, x0, #3
  410bd8:	add	x1, x29, #0x4e0
  410bdc:	ldr	x0, [x1, x0]
  410be0:	mov	x1, x0
  410be4:	ldr	x0, [x29, #512]
  410be8:	bl	405bc0 <stpcpy@plt>
  410bec:	str	x0, [x29, #512]
  410bf0:	ldr	x0, [x29, #528]
  410bf4:	add	x0, x0, #0x1
  410bf8:	str	x0, [x29, #528]
  410bfc:	ldr	x0, [x29, #528]
  410c00:	cmp	x0, #0x1
  410c04:	b.hi	410c20 <dispatch_message_real+0x34f8>  // b.pmore
  410c08:	ldr	x0, [x29, #528]
  410c0c:	lsl	x0, x0, #3
  410c10:	add	x1, x29, #0x4e0
  410c14:	ldr	x0, [x1, x0]
  410c18:	cmp	x0, #0x0
  410c1c:	b.ne	410bd0 <dispatch_message_real+0x34a8>  // b.any
  410c20:	ldr	x0, [x29, #512]
  410c24:	strb	wzr, [x0]
  410c28:	ldr	x0, [x29, #1192]
  410c2c:	str	x0, [x29, #1200]
  410c30:	ldr	x0, [x29, #72]
  410c34:	add	x1, x0, #0x1
  410c38:	str	x1, [x29, #72]
  410c3c:	lsl	x0, x0, #4
  410c40:	ldr	x1, [x29, #80]
  410c44:	add	x19, x1, x0
  410c48:	ldr	x0, [x29, #1200]
  410c4c:	bl	406af0 <strlen@plt>
  410c50:	mov	x1, x0
  410c54:	ldr	x0, [x29, #1200]
  410c58:	str	x0, [x19]
  410c5c:	str	x1, [x19, #8]
  410c60:	ldr	x0, [x29, #120]
  410c64:	ldr	x0, [x0, #120]
  410c68:	bl	4093bc <isempty>
  410c6c:	and	w0, w0, #0xff
  410c70:	eor	w0, w0, #0x1
  410c74:	and	w0, w0, #0xff
  410c78:	cmp	w0, #0x0
  410c7c:	b.eq	410e54 <dispatch_message_real+0x372c>  // b.none
  410c80:	adrp	x0, 428000 <__func__.11909+0x280>
  410c84:	add	x0, x0, #0xc80
  410c88:	str	x0, [x29, #1248]
  410c8c:	ldr	x0, [x29, #120]
  410c90:	ldr	x0, [x0, #120]
  410c94:	str	x0, [x29, #1256]
  410c98:	str	xzr, [x29, #544]
  410c9c:	str	xzr, [x29, #552]
  410ca0:	b	410cd4 <dispatch_message_real+0x35ac>
  410ca4:	ldr	x0, [x29, #552]
  410ca8:	lsl	x0, x0, #3
  410cac:	add	x1, x29, #0x4e0
  410cb0:	ldr	x0, [x1, x0]
  410cb4:	bl	406af0 <strlen@plt>
  410cb8:	mov	x1, x0
  410cbc:	ldr	x0, [x29, #544]
  410cc0:	add	x0, x0, x1
  410cc4:	str	x0, [x29, #544]
  410cc8:	ldr	x0, [x29, #552]
  410ccc:	add	x0, x0, #0x1
  410cd0:	str	x0, [x29, #552]
  410cd4:	ldr	x0, [x29, #552]
  410cd8:	cmp	x0, #0x1
  410cdc:	b.hi	410cf8 <dispatch_message_real+0x35d0>  // b.pmore
  410ce0:	ldr	x0, [x29, #552]
  410ce4:	lsl	x0, x0, #3
  410ce8:	add	x1, x29, #0x4e0
  410cec:	ldr	x0, [x1, x0]
  410cf0:	cmp	x0, #0x0
  410cf4:	b.ne	410ca4 <dispatch_message_real+0x357c>  // b.any
  410cf8:	ldr	x0, [x29, #544]
  410cfc:	add	x0, x0, #0x1
  410d00:	str	x0, [x29, #1208]
  410d04:	ldr	x1, [x29, #1208]
  410d08:	mov	x0, #0x1                   	// #1
  410d0c:	bl	409118 <size_multiply_overflow>
  410d10:	and	w0, w0, #0xff
  410d14:	and	x0, x0, #0xff
  410d18:	cmp	x0, #0x0
  410d1c:	b.eq	410d48 <dispatch_message_real+0x3620>  // b.none
  410d20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410d24:	add	x1, x0, #0xe03
  410d28:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410d2c:	add	x4, x0, #0x538
  410d30:	mov	w3, #0x3d6                 	// #982
  410d34:	mov	x2, x1
  410d38:	adrp	x0, 428000 <__func__.11909+0x280>
  410d3c:	add	x1, x0, #0xe0
  410d40:	mov	w0, #0x0                   	// #0
  410d44:	bl	405fd0 <log_assert_failed_realm@plt>
  410d48:	ldr	x0, [x29, #1208]
  410d4c:	cmp	x0, #0x400, lsl #12
  410d50:	cset	w0, hi  // hi = pmore
  410d54:	and	w0, w0, #0xff
  410d58:	and	x0, x0, #0xff
  410d5c:	cmp	x0, #0x0
  410d60:	b.eq	410d8c <dispatch_message_real+0x3664>  // b.none
  410d64:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410d68:	add	x1, x0, #0xe03
  410d6c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410d70:	add	x4, x0, #0x538
  410d74:	mov	w3, #0x3d6                 	// #982
  410d78:	mov	x2, x1
  410d7c:	adrp	x0, 428000 <__func__.11909+0x280>
  410d80:	add	x1, x0, #0x110
  410d84:	mov	w0, #0x0                   	// #0
  410d88:	bl	405fd0 <log_assert_failed_realm@plt>
  410d8c:	ldr	x0, [x29, #1208]
  410d90:	add	x0, x0, #0xf
  410d94:	lsr	x0, x0, #4
  410d98:	lsl	x0, x0, #4
  410d9c:	sub	sp, sp, x0
  410da0:	mov	x0, sp
  410da4:	add	x0, x0, #0xf
  410da8:	lsr	x0, x0, #4
  410dac:	lsl	x0, x0, #4
  410db0:	str	x0, [x29, #1216]
  410db4:	ldr	x0, [x29, #1216]
  410db8:	str	x0, [x29, #536]
  410dbc:	str	xzr, [x29, #552]
  410dc0:	b	410df0 <dispatch_message_real+0x36c8>
  410dc4:	ldr	x0, [x29, #552]
  410dc8:	lsl	x0, x0, #3
  410dcc:	add	x1, x29, #0x4e0
  410dd0:	ldr	x0, [x1, x0]
  410dd4:	mov	x1, x0
  410dd8:	ldr	x0, [x29, #536]
  410ddc:	bl	405bc0 <stpcpy@plt>
  410de0:	str	x0, [x29, #536]
  410de4:	ldr	x0, [x29, #552]
  410de8:	add	x0, x0, #0x1
  410dec:	str	x0, [x29, #552]
  410df0:	ldr	x0, [x29, #552]
  410df4:	cmp	x0, #0x1
  410df8:	b.hi	410e14 <dispatch_message_real+0x36ec>  // b.pmore
  410dfc:	ldr	x0, [x29, #552]
  410e00:	lsl	x0, x0, #3
  410e04:	add	x1, x29, #0x4e0
  410e08:	ldr	x0, [x1, x0]
  410e0c:	cmp	x0, #0x0
  410e10:	b.ne	410dc4 <dispatch_message_real+0x369c>  // b.any
  410e14:	ldr	x0, [x29, #536]
  410e18:	strb	wzr, [x0]
  410e1c:	ldr	x0, [x29, #1216]
  410e20:	str	x0, [x29, #1224]
  410e24:	ldr	x0, [x29, #72]
  410e28:	add	x1, x0, #0x1
  410e2c:	str	x1, [x29, #72]
  410e30:	lsl	x0, x0, #4
  410e34:	ldr	x1, [x29, #80]
  410e38:	add	x19, x1, x0
  410e3c:	ldr	x0, [x29, #1224]
  410e40:	bl	406af0 <strlen@plt>
  410e44:	mov	x1, x0
  410e48:	ldr	x0, [x29, #1224]
  410e4c:	str	x0, [x19]
  410e50:	str	x1, [x19, #8]
  410e54:	ldr	x0, [x29, #120]
  410e58:	ldp	x0, x1, [x0, #128]
  410e5c:	bl	409090 <sd_id128_is_null>
  410e60:	cmp	w0, #0x0
  410e64:	b.ne	410f90 <dispatch_message_real+0x3868>  // b.any
  410e68:	mov	x0, #0x3f                  	// #63
  410e6c:	str	x0, [x29, #1232]
  410e70:	ldr	x1, [x29, #1232]
  410e74:	mov	x0, #0x1                   	// #1
  410e78:	bl	409118 <size_multiply_overflow>
  410e7c:	and	w0, w0, #0xff
  410e80:	and	x0, x0, #0xff
  410e84:	cmp	x0, #0x0
  410e88:	b.eq	410eb4 <dispatch_message_real+0x378c>  // b.none
  410e8c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410e90:	add	x1, x0, #0xe03
  410e94:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410e98:	add	x4, x0, #0x538
  410e9c:	mov	w3, #0x3d8                 	// #984
  410ea0:	mov	x2, x1
  410ea4:	adrp	x0, 428000 <__func__.11909+0x280>
  410ea8:	add	x1, x0, #0xe0
  410eac:	mov	w0, #0x0                   	// #0
  410eb0:	bl	405fd0 <log_assert_failed_realm@plt>
  410eb4:	ldr	x0, [x29, #1232]
  410eb8:	cmp	x0, #0x400, lsl #12
  410ebc:	cset	w0, hi  // hi = pmore
  410ec0:	and	w0, w0, #0xff
  410ec4:	and	x0, x0, #0xff
  410ec8:	cmp	x0, #0x0
  410ecc:	b.eq	410ef8 <dispatch_message_real+0x37d0>  // b.none
  410ed0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410ed4:	add	x1, x0, #0xe03
  410ed8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410edc:	add	x4, x0, #0x538
  410ee0:	mov	w3, #0x3d8                 	// #984
  410ee4:	mov	x2, x1
  410ee8:	adrp	x0, 428000 <__func__.11909+0x280>
  410eec:	add	x1, x0, #0x110
  410ef0:	mov	w0, #0x0                   	// #0
  410ef4:	bl	405fd0 <log_assert_failed_realm@plt>
  410ef8:	ldr	x0, [x29, #1232]
  410efc:	add	x0, x0, #0xf
  410f00:	lsr	x0, x0, #4
  410f04:	lsl	x0, x0, #4
  410f08:	sub	sp, sp, x0
  410f0c:	mov	x0, sp
  410f10:	add	x0, x0, #0xf
  410f14:	lsr	x0, x0, #4
  410f18:	lsl	x0, x0, #4
  410f1c:	str	x0, [x29, #1240]
  410f20:	ldr	x4, [x29, #120]
  410f24:	ldr	x2, [x29, #1240]
  410f28:	adrp	x0, 428000 <__func__.11909+0x280>
  410f2c:	add	x1, x0, #0xca0
  410f30:	mov	x0, x2
  410f34:	ldp	x2, x3, [x1]
  410f38:	stp	x2, x3, [x0]
  410f3c:	ldr	x2, [x1, #16]
  410f40:	str	x2, [x0, #16]
  410f44:	ldur	x1, [x1, #23]
  410f48:	stur	x1, [x0, #23]
  410f4c:	ldr	x0, [x29, #1240]
  410f50:	add	x0, x0, #0x1e
  410f54:	mov	x2, x0
  410f58:	ldp	x0, x1, [x4, #128]
  410f5c:	bl	4068c0 <sd_id128_to_string@plt>
  410f60:	ldr	x0, [x29, #72]
  410f64:	add	x1, x0, #0x1
  410f68:	str	x1, [x29, #72]
  410f6c:	lsl	x0, x0, #4
  410f70:	ldr	x1, [x29, #80]
  410f74:	add	x19, x1, x0
  410f78:	ldr	x0, [x29, #1240]
  410f7c:	bl	406af0 <strlen@plt>
  410f80:	mov	x1, x0
  410f84:	ldr	x0, [x29, #1240]
  410f88:	str	x0, [x19]
  410f8c:	str	x1, [x19, #8]
  410f90:	ldr	x0, [x29, #72]
  410f94:	ldr	x1, [x29, #64]
  410f98:	cmp	x1, x0
  410f9c:	cset	w0, cc  // cc = lo, ul, last
  410fa0:	and	w0, w0, #0xff
  410fa4:	and	x0, x0, #0xff
  410fa8:	cmp	x0, #0x0
  410fac:	b.eq	410fd8 <dispatch_message_real+0x38b0>  // b.none
  410fb0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  410fb4:	add	x1, x0, #0xe03
  410fb8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  410fbc:	add	x4, x0, #0x538
  410fc0:	mov	w3, #0x3db                 	// #987
  410fc4:	mov	x2, x1
  410fc8:	adrp	x0, 428000 <__func__.11909+0x280>
  410fcc:	add	x1, x0, #0xb10
  410fd0:	mov	w0, #0x0                   	// #0
  410fd4:	bl	405fd0 <log_assert_failed_realm@plt>
  410fd8:	ldr	x0, [x29, #48]
  410fdc:	cmp	x0, #0x0
  410fe0:	b.eq	411034 <dispatch_message_real+0x390c>  // b.none
  410fe4:	ldr	x0, [x29, #48]
  410fe8:	bl	406850 <timeval_load@plt>
  410fec:	add	x3, x29, #0x4f0
  410ff0:	mov	x2, x0
  410ff4:	adrp	x0, 428000 <__func__.11909+0x280>
  410ff8:	add	x1, x0, #0xcc0
  410ffc:	mov	x0, x3
  411000:	bl	4069c0 <sprintf@plt>
  411004:	ldr	x0, [x29, #72]
  411008:	add	x1, x0, #0x1
  41100c:	str	x1, [x29, #72]
  411010:	lsl	x0, x0, #4
  411014:	ldr	x1, [x29, #80]
  411018:	add	x19, x1, x0
  41101c:	add	x0, x29, #0x4f0
  411020:	bl	406af0 <strlen@plt>
  411024:	mov	x1, x0
  411028:	add	x0, x29, #0x4f0
  41102c:	str	x0, [x19]
  411030:	str	x1, [x19, #8]
  411034:	ldr	x0, [x29, #88]
  411038:	add	x0, x0, #0x27e
  41103c:	bl	4093bc <isempty>
  411040:	and	w0, w0, #0xff
  411044:	eor	w0, w0, #0x1
  411048:	and	w0, w0, #0xff
  41104c:	cmp	w0, #0x0
  411050:	b.eq	411088 <dispatch_message_real+0x3960>  // b.none
  411054:	ldr	x0, [x29, #72]
  411058:	add	x1, x0, #0x1
  41105c:	str	x1, [x29, #72]
  411060:	lsl	x0, x0, #4
  411064:	ldr	x1, [x29, #80]
  411068:	add	x19, x1, x0
  41106c:	ldr	x0, [x29, #88]
  411070:	add	x20, x0, #0x27e
  411074:	ldr	x0, [x29, #88]
  411078:	add	x0, x0, #0x27e
  41107c:	bl	406af0 <strlen@plt>
  411080:	str	x20, [x19]
  411084:	str	x0, [x19, #8]
  411088:	ldr	x0, [x29, #88]
  41108c:	add	x0, x0, #0x251
  411090:	bl	4093bc <isempty>
  411094:	and	w0, w0, #0xff
  411098:	eor	w0, w0, #0x1
  41109c:	and	w0, w0, #0xff
  4110a0:	cmp	w0, #0x0
  4110a4:	b.eq	4110dc <dispatch_message_real+0x39b4>  // b.none
  4110a8:	ldr	x0, [x29, #72]
  4110ac:	add	x1, x0, #0x1
  4110b0:	str	x1, [x29, #72]
  4110b4:	lsl	x0, x0, #4
  4110b8:	ldr	x1, [x29, #80]
  4110bc:	add	x19, x1, x0
  4110c0:	ldr	x0, [x29, #88]
  4110c4:	add	x20, x0, #0x251
  4110c8:	ldr	x0, [x29, #88]
  4110cc:	add	x0, x0, #0x251
  4110d0:	bl	406af0 <strlen@plt>
  4110d4:	str	x20, [x19]
  4110d8:	str	x0, [x19, #8]
  4110dc:	ldr	x0, [x29, #88]
  4110e0:	ldr	x0, [x0, #680]
  4110e4:	bl	4093bc <isempty>
  4110e8:	and	w0, w0, #0xff
  4110ec:	eor	w0, w0, #0x1
  4110f0:	and	w0, w0, #0xff
  4110f4:	cmp	w0, #0x0
  4110f8:	b.eq	411130 <dispatch_message_real+0x3a08>  // b.none
  4110fc:	ldr	x0, [x29, #72]
  411100:	add	x1, x0, #0x1
  411104:	str	x1, [x29, #72]
  411108:	lsl	x0, x0, #4
  41110c:	ldr	x1, [x29, #80]
  411110:	add	x19, x1, x0
  411114:	ldr	x0, [x29, #88]
  411118:	ldr	x20, [x0, #680]
  41111c:	ldr	x0, [x29, #88]
  411120:	ldr	x0, [x0, #680]
  411124:	bl	406af0 <strlen@plt>
  411128:	str	x20, [x19]
  41112c:	str	x0, [x19, #8]
  411130:	ldr	x0, [x29, #72]
  411134:	ldr	x1, [x29, #64]
  411138:	cmp	x1, x0
  41113c:	cset	w0, cc  // cc = lo, ul, last
  411140:	and	w0, w0, #0xff
  411144:	and	x0, x0, #0xff
  411148:	cmp	x0, #0x0
  41114c:	b.eq	411178 <dispatch_message_real+0x3a50>  // b.none
  411150:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411154:	add	x1, x0, #0xe03
  411158:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41115c:	add	x4, x0, #0x538
  411160:	mov	w3, #0x3ee                 	// #1006
  411164:	mov	x2, x1
  411168:	adrp	x0, 428000 <__func__.11909+0x280>
  41116c:	add	x1, x0, #0xb10
  411170:	mov	w0, #0x0                   	// #0
  411174:	bl	405fd0 <log_assert_failed_realm@plt>
  411178:	ldr	x0, [x29, #88]
  41117c:	ldr	w0, [x0, #560]
  411180:	cmp	w0, #0x0
  411184:	b.ne	4111bc <dispatch_message_real+0x3a94>  // b.any
  411188:	ldr	x0, [x29, #56]
  41118c:	cmp	x0, #0x0
  411190:	b.eq	4111bc <dispatch_message_real+0x3a94>  // b.none
  411194:	ldr	x0, [x29, #56]
  411198:	ldr	w0, [x0, #24]
  41119c:	bl	4061c0 <uid_is_valid@plt>
  4111a0:	and	w0, w0, #0xff
  4111a4:	cmp	w0, #0x0
  4111a8:	b.eq	4111bc <dispatch_message_real+0x3a94>  // b.none
  4111ac:	ldr	x0, [x29, #56]
  4111b0:	ldr	w0, [x0, #24]
  4111b4:	str	w0, [x29, #100]
  4111b8:	b	411214 <dispatch_message_real+0x3aec>
  4111bc:	ldr	x0, [x29, #88]
  4111c0:	ldr	w0, [x0, #560]
  4111c4:	cmp	w0, #0x1
  4111c8:	b.ne	411210 <dispatch_message_real+0x3ae8>  // b.any
  4111cc:	ldr	x0, [x29, #56]
  4111d0:	cmp	x0, #0x0
  4111d4:	b.eq	411210 <dispatch_message_real+0x3ae8>  // b.none
  4111d8:	ldr	x0, [x29, #56]
  4111dc:	ldr	w0, [x0, #24]
  4111e0:	cmp	w0, #0x0
  4111e4:	b.eq	411210 <dispatch_message_real+0x3ae8>  // b.none
  4111e8:	ldr	x0, [x29, #56]
  4111ec:	ldr	w0, [x0, #88]
  4111f0:	bl	4061c0 <uid_is_valid@plt>
  4111f4:	and	w0, w0, #0xff
  4111f8:	cmp	w0, #0x0
  4111fc:	b.eq	411210 <dispatch_message_real+0x3ae8>  // b.none
  411200:	ldr	x0, [x29, #56]
  411204:	ldr	w0, [x0, #88]
  411208:	str	w0, [x29, #100]
  41120c:	b	411214 <dispatch_message_real+0x3aec>
  411210:	str	wzr, [x29, #100]
  411214:	ldr	x0, [x29, #72]
  411218:	ldr	w4, [x29, #44]
  41121c:	mov	x3, x0
  411220:	ldr	x2, [x29, #80]
  411224:	ldr	w1, [x29, #100]
  411228:	ldr	x0, [x29, #88]
  41122c:	bl	40d0e8 <write_to_journal>
  411230:	add	x0, x29, #0x70
  411234:	bl	4090f4 <freep>
  411238:	add	x0, x29, #0x68
  41123c:	bl	4090f4 <freep>
  411240:	nop
  411244:	adrp	x0, 441000 <wordlist.9471+0x208>
  411248:	ldr	x0, [x0, #4064]
  41124c:	ldr	x1, [x29, #1320]
  411250:	ldr	x0, [x0]
  411254:	eor	x0, x1, x0
  411258:	cmp	x0, #0x0
  41125c:	b.eq	411264 <dispatch_message_real+0x3b3c>  // b.none
  411260:	bl	4063e0 <__stack_chk_fail@plt>
  411264:	mov	sp, x29
  411268:	ldp	x19, x20, [sp, #16]
  41126c:	ldp	x29, x30, [sp]
  411270:	add	sp, sp, #0x530
  411274:	ret

0000000000411278 <server_driver_message>:
  411278:	sub	sp, sp, #0x960
  41127c:	stp	x29, x30, [sp]
  411280:	mov	x29, sp
  411284:	str	x19, [sp, #16]
  411288:	str	x0, [x29, #88]
  41128c:	str	w1, [x29, #84]
  411290:	str	x2, [x29, #72]
  411294:	str	x3, [x29, #64]
  411298:	str	x4, [x29, #2368]
  41129c:	str	x5, [x29, #2376]
  4112a0:	str	x6, [x29, #2384]
  4112a4:	str	x7, [x29, #2392]
  4112a8:	add	x0, x29, #0x800
  4112ac:	str	q0, [x0, #192]
  4112b0:	add	x0, x29, #0x800
  4112b4:	str	q1, [x0, #208]
  4112b8:	add	x0, x29, #0x800
  4112bc:	str	q2, [x0, #224]
  4112c0:	add	x0, x29, #0x800
  4112c4:	str	q3, [x0, #240]
  4112c8:	add	x0, x29, #0xa00
  4112cc:	stur	q4, [x0, #-256]
  4112d0:	add	x0, x29, #0xa00
  4112d4:	stur	q5, [x0, #-240]
  4112d8:	add	x0, x29, #0xa00
  4112dc:	stur	q6, [x0, #-224]
  4112e0:	add	x0, x29, #0xa00
  4112e4:	stur	q7, [x0, #-208]
  4112e8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4112ec:	ldr	x0, [x0, #4064]
  4112f0:	ldr	x1, [x0]
  4112f4:	str	x1, [x29, #2232]
  4112f8:	mov	x1, #0x0                   	// #0
  4112fc:	str	xzr, [x29, #112]
  411300:	ldr	x0, [x29, #88]
  411304:	cmp	x0, #0x0
  411308:	cset	w0, eq  // eq = none
  41130c:	and	w0, w0, #0xff
  411310:	and	x0, x0, #0xff
  411314:	cmp	x0, #0x0
  411318:	b.eq	411344 <server_driver_message+0xcc>  // b.none
  41131c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411320:	add	x1, x0, #0xe03
  411324:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411328:	add	x4, x0, #0x550
  41132c:	mov	w3, #0x407                 	// #1031
  411330:	mov	x2, x1
  411334:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411338:	add	x1, x0, #0xec8
  41133c:	mov	w0, #0x0                   	// #0
  411340:	bl	405fd0 <log_assert_failed_realm@plt>
  411344:	ldr	x0, [x29, #64]
  411348:	cmp	x0, #0x0
  41134c:	cset	w0, eq  // eq = none
  411350:	and	w0, w0, #0xff
  411354:	and	x0, x0, #0xff
  411358:	cmp	x0, #0x0
  41135c:	b.eq	411388 <server_driver_message+0x110>  // b.none
  411360:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411364:	add	x1, x0, #0xe03
  411368:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41136c:	add	x4, x0, #0x550
  411370:	mov	w3, #0x408                 	// #1032
  411374:	mov	x2, x1
  411378:	adrp	x0, 428000 <__func__.11909+0x280>
  41137c:	add	x1, x0, #0xce0
  411380:	mov	w0, #0x0                   	// #0
  411384:	bl	405fd0 <log_assert_failed_realm@plt>
  411388:	ldr	x0, [x29, #88]
  41138c:	ldr	x0, [x0, #744]
  411390:	bl	4095c0 <client_context_extra_fields_n_iovec>
  411394:	add	x0, x0, #0x3d
  411398:	str	x0, [x29, #128]
  41139c:	ldr	x0, [x29, #128]
  4113a0:	str	x0, [x29, #136]
  4113a4:	ldr	x1, [x29, #136]
  4113a8:	mov	x0, #0x10                  	// #16
  4113ac:	bl	409118 <size_multiply_overflow>
  4113b0:	and	w0, w0, #0xff
  4113b4:	and	x0, x0, #0xff
  4113b8:	cmp	x0, #0x0
  4113bc:	b.eq	4113e8 <server_driver_message+0x170>  // b.none
  4113c0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4113c4:	add	x1, x0, #0xe03
  4113c8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4113cc:	add	x4, x0, #0x550
  4113d0:	mov	w3, #0x40b                 	// #1035
  4113d4:	mov	x2, x1
  4113d8:	adrp	x0, 428000 <__func__.11909+0x280>
  4113dc:	add	x1, x0, #0xce8
  4113e0:	mov	w0, #0x0                   	// #0
  4113e4:	bl	405fd0 <log_assert_failed_realm@plt>
  4113e8:	ldr	x0, [x29, #136]
  4113ec:	lsl	x0, x0, #4
  4113f0:	cmp	x0, #0x400, lsl #12
  4113f4:	cset	w0, hi  // hi = pmore
  4113f8:	and	w0, w0, #0xff
  4113fc:	and	x0, x0, #0xff
  411400:	cmp	x0, #0x0
  411404:	b.eq	411430 <server_driver_message+0x1b8>  // b.none
  411408:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41140c:	add	x1, x0, #0xe03
  411410:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411414:	add	x4, x0, #0x550
  411418:	mov	w3, #0x40b                 	// #1035
  41141c:	mov	x2, x1
  411420:	adrp	x0, 428000 <__func__.11909+0x280>
  411424:	add	x1, x0, #0xd20
  411428:	mov	w0, #0x0                   	// #0
  41142c:	bl	405fd0 <log_assert_failed_realm@plt>
  411430:	ldr	x0, [x29, #136]
  411434:	lsl	x0, x0, #4
  411438:	add	x0, x0, #0xf
  41143c:	lsr	x0, x0, #4
  411440:	lsl	x0, x0, #4
  411444:	sub	sp, sp, x0
  411448:	mov	x0, sp
  41144c:	add	x0, x0, #0xf
  411450:	lsr	x0, x0, #4
  411454:	lsl	x0, x0, #4
  411458:	str	x0, [x29, #144]
  41145c:	ldr	x0, [x29, #112]
  411460:	add	x1, x0, #0x1
  411464:	str	x1, [x29, #112]
  411468:	lsl	x0, x0, #4
  41146c:	ldr	x1, [x29, #144]
  411470:	add	x0, x1, x0
  411474:	adrp	x1, 428000 <__func__.11909+0x280>
  411478:	add	x1, x1, #0xd48
  41147c:	str	x1, [x0]
  411480:	mov	x1, #0x11                  	// #17
  411484:	str	x1, [x0, #8]
  411488:	ldr	x0, [x29, #112]
  41148c:	add	x1, x0, #0x1
  411490:	str	x1, [x29, #112]
  411494:	lsl	x0, x0, #4
  411498:	ldr	x1, [x29, #144]
  41149c:	add	x0, x1, x0
  4114a0:	adrp	x1, 428000 <__func__.11909+0x280>
  4114a4:	add	x1, x1, #0xd60
  4114a8:	str	x1, [x0]
  4114ac:	mov	x1, #0x22                  	// #34
  4114b0:	str	x1, [x0, #8]
  4114b4:	ldr	x0, [x29, #112]
  4114b8:	add	x1, x0, #0x1
  4114bc:	str	x1, [x29, #112]
  4114c0:	lsl	x0, x0, #4
  4114c4:	ldr	x1, [x29, #144]
  4114c8:	add	x0, x1, x0
  4114cc:	adrp	x1, 428000 <__func__.11909+0x280>
  4114d0:	add	x1, x1, #0xd88
  4114d4:	str	x1, [x0]
  4114d8:	mov	x1, #0x11                  	// #17
  4114dc:	str	x1, [x0, #8]
  4114e0:	ldr	x0, [x29, #112]
  4114e4:	add	x1, x0, #0x1
  4114e8:	str	x1, [x29, #112]
  4114ec:	lsl	x0, x0, #4
  4114f0:	ldr	x1, [x29, #144]
  4114f4:	add	x0, x1, x0
  4114f8:	adrp	x1, 428000 <__func__.11909+0x280>
  4114fc:	add	x1, x1, #0xda0
  411500:	str	x1, [x0]
  411504:	mov	x1, #0xa                   	// #10
  411508:	str	x1, [x0, #8]
  41150c:	ldr	x0, [x29, #72]
  411510:	cmp	x0, #0x0
  411514:	b.eq	411548 <server_driver_message+0x2d0>  // b.none
  411518:	ldr	x0, [x29, #112]
  41151c:	add	x1, x0, #0x1
  411520:	str	x1, [x29, #112]
  411524:	lsl	x0, x0, #4
  411528:	ldr	x1, [x29, #144]
  41152c:	add	x19, x1, x0
  411530:	ldr	x0, [x29, #72]
  411534:	bl	406af0 <strlen@plt>
  411538:	mov	x1, x0
  41153c:	ldr	x0, [x29, #72]
  411540:	str	x0, [x19]
  411544:	str	x1, [x19, #8]
  411548:	ldr	x0, [x29, #112]
  41154c:	str	x0, [x29, #120]
  411550:	add	x0, x29, #0x960
  411554:	str	x0, [x29, #152]
  411558:	add	x0, x29, #0x960
  41155c:	str	x0, [x29, #160]
  411560:	add	x0, x29, #0x940
  411564:	str	x0, [x29, #168]
  411568:	mov	w0, #0xffffffe0            	// #-32
  41156c:	str	w0, [x29, #176]
  411570:	mov	w0, #0xffffff80            	// #-128
  411574:	str	w0, [x29, #180]
  411578:	add	x2, x29, #0x20
  41157c:	add	x3, x29, #0x98
  411580:	ldp	x0, x1, [x3]
  411584:	stp	x0, x1, [x2]
  411588:	ldp	x0, x1, [x3, #16]
  41158c:	stp	x0, x1, [x2, #16]
  411590:	add	x1, x29, #0x20
  411594:	add	x0, x29, #0x70
  411598:	mov	x6, x1
  41159c:	ldr	x5, [x29, #64]
  4115a0:	mov	w4, #0x0                   	// #0
  4115a4:	mov	w3, #0x0                   	// #0
  4115a8:	mov	x2, x0
  4115ac:	ldr	x1, [x29, #128]
  4115b0:	ldr	x0, [x29, #144]
  4115b4:	bl	4066f0 <log_format_iovec@plt>
  4115b8:	str	w0, [x29, #108]
  4115bc:	ldr	w0, [x29, #108]
  4115c0:	cmp	w0, #0x0
  4115c4:	b.lt	41161c <server_driver_message+0x3a4>  // b.tstop
  4115c8:	ldr	x1, [x29, #112]
  4115cc:	ldr	x0, [x29, #88]
  4115d0:	ldr	x0, [x0, #744]
  4115d4:	ldr	w7, [x29, #84]
  4115d8:	mov	w6, #0x6                   	// #6
  4115dc:	mov	x5, #0x0                   	// #0
  4115e0:	mov	x4, x0
  4115e4:	ldr	x3, [x29, #128]
  4115e8:	mov	x2, x1
  4115ec:	ldr	x1, [x29, #144]
  4115f0:	ldr	x0, [x29, #88]
  4115f4:	bl	40d728 <dispatch_message_real>
  4115f8:	b	41161c <server_driver_message+0x3a4>
  4115fc:	ldr	x0, [x29, #120]
  411600:	add	x1, x0, #0x1
  411604:	str	x1, [x29, #120]
  411608:	lsl	x0, x0, #4
  41160c:	ldr	x1, [x29, #144]
  411610:	add	x0, x1, x0
  411614:	ldr	x0, [x0]
  411618:	bl	406930 <free@plt>
  41161c:	ldr	x0, [x29, #112]
  411620:	ldr	x1, [x29, #120]
  411624:	cmp	x1, x0
  411628:	b.cc	4115fc <server_driver_message+0x384>  // b.lo, b.ul, b.last
  41162c:	ldr	w0, [x29, #108]
  411630:	cmp	w0, #0x0
  411634:	b.ge	411730 <server_driver_message+0x4b8>  // b.tcont
  411638:	ldr	w0, [x29, #108]
  41163c:	bl	4094d4 <strerror_safe>
  411640:	add	x4, x29, #0xb8
  411644:	mov	x3, x0
  411648:	adrp	x0, 428000 <__func__.11909+0x280>
  41164c:	add	x2, x0, #0xdb0
  411650:	mov	x1, #0x800                 	// #2048
  411654:	mov	x0, x4
  411658:	bl	405de0 <snprintf@plt>
  41165c:	cmp	w0, #0x7ff
  411660:	cset	w0, hi  // hi = pmore
  411664:	and	w0, w0, #0xff
  411668:	and	x0, x0, #0xff
  41166c:	cmp	x0, #0x0
  411670:	b.eq	41169c <server_driver_message+0x424>  // b.none
  411674:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411678:	add	x1, x0, #0xe03
  41167c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411680:	add	x4, x0, #0x550
  411684:	mov	w3, #0x428                 	// #1064
  411688:	mov	x2, x1
  41168c:	adrp	x0, 428000 <__func__.11909+0x280>
  411690:	add	x1, x0, #0xdd8
  411694:	mov	w0, #0x0                   	// #0
  411698:	bl	405fd0 <log_assert_failed_realm@plt>
  41169c:	mov	x0, #0x3                   	// #3
  4116a0:	str	x0, [x29, #112]
  4116a4:	ldr	x0, [x29, #112]
  4116a8:	add	x1, x0, #0x1
  4116ac:	str	x1, [x29, #112]
  4116b0:	lsl	x0, x0, #4
  4116b4:	ldr	x1, [x29, #144]
  4116b8:	add	x0, x1, x0
  4116bc:	adrp	x1, 428000 <__func__.11909+0x280>
  4116c0:	add	x1, x1, #0xe00
  4116c4:	str	x1, [x0]
  4116c8:	mov	x1, #0xa                   	// #10
  4116cc:	str	x1, [x0, #8]
  4116d0:	ldr	x0, [x29, #112]
  4116d4:	add	x1, x0, #0x1
  4116d8:	str	x1, [x29, #112]
  4116dc:	lsl	x0, x0, #4
  4116e0:	ldr	x1, [x29, #144]
  4116e4:	add	x19, x1, x0
  4116e8:	add	x0, x29, #0xb8
  4116ec:	bl	406af0 <strlen@plt>
  4116f0:	mov	x1, x0
  4116f4:	add	x0, x29, #0xb8
  4116f8:	str	x0, [x19]
  4116fc:	str	x1, [x19, #8]
  411700:	ldr	x1, [x29, #112]
  411704:	ldr	x0, [x29, #88]
  411708:	ldr	x0, [x0, #744]
  41170c:	ldr	w7, [x29, #84]
  411710:	mov	w6, #0x6                   	// #6
  411714:	mov	x5, #0x0                   	// #0
  411718:	mov	x4, x0
  41171c:	ldr	x3, [x29, #128]
  411720:	mov	x2, x1
  411724:	ldr	x1, [x29, #144]
  411728:	ldr	x0, [x29, #88]
  41172c:	bl	40d728 <dispatch_message_real>
  411730:	nop
  411734:	adrp	x0, 441000 <wordlist.9471+0x208>
  411738:	ldr	x0, [x0, #4064]
  41173c:	ldr	x1, [x29, #2232]
  411740:	ldr	x0, [x0]
  411744:	eor	x0, x1, x0
  411748:	cmp	x0, #0x0
  41174c:	b.eq	411754 <server_driver_message+0x4dc>  // b.none
  411750:	bl	4063e0 <__stack_chk_fail@plt>
  411754:	mov	sp, x29
  411758:	ldr	x19, [sp, #16]
  41175c:	ldp	x29, x30, [sp]
  411760:	add	sp, sp, #0x960
  411764:	ret

0000000000411768 <server_dispatch_message>:
  411768:	sub	sp, sp, #0x80
  41176c:	stp	x29, x30, [sp, #16]
  411770:	add	x29, sp, #0x10
  411774:	str	x0, [sp, #88]
  411778:	str	x1, [sp, #80]
  41177c:	str	x2, [sp, #72]
  411780:	str	x3, [sp, #64]
  411784:	str	x4, [sp, #56]
  411788:	str	x5, [sp, #48]
  41178c:	str	w6, [sp, #44]
  411790:	str	w7, [sp, #40]
  411794:	adrp	x0, 441000 <wordlist.9471+0x208>
  411798:	ldr	x0, [x0, #4064]
  41179c:	ldr	x1, [x0]
  4117a0:	str	x1, [sp, #120]
  4117a4:	mov	x1, #0x0                   	// #0
  4117a8:	str	xzr, [sp, #112]
  4117ac:	ldr	x0, [sp, #88]
  4117b0:	cmp	x0, #0x0
  4117b4:	cset	w0, eq  // eq = none
  4117b8:	and	w0, w0, #0xff
  4117bc:	and	x0, x0, #0xff
  4117c0:	cmp	x0, #0x0
  4117c4:	b.eq	4117f0 <server_dispatch_message+0x88>  // b.none
  4117c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4117cc:	add	x1, x0, #0xe03
  4117d0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4117d4:	add	x4, x0, #0x568
  4117d8:	mov	w3, #0x43c                 	// #1084
  4117dc:	mov	x2, x1
  4117e0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4117e4:	add	x1, x0, #0xec8
  4117e8:	mov	w0, #0x0                   	// #0
  4117ec:	bl	405fd0 <log_assert_failed_realm@plt>
  4117f0:	ldr	x0, [sp, #80]
  4117f4:	cmp	x0, #0x0
  4117f8:	cset	w0, eq  // eq = none
  4117fc:	and	w0, w0, #0xff
  411800:	and	x0, x0, #0xff
  411804:	cmp	x0, #0x0
  411808:	b.eq	411850 <server_dispatch_message+0xe8>  // b.none
  41180c:	ldr	x0, [sp, #72]
  411810:	cmp	x0, #0x0
  411814:	cset	w0, ne  // ne = any
  411818:	and	w0, w0, #0xff
  41181c:	and	x0, x0, #0xff
  411820:	cmp	x0, #0x0
  411824:	b.eq	411850 <server_dispatch_message+0xe8>  // b.none
  411828:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41182c:	add	x1, x0, #0xe03
  411830:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411834:	add	x4, x0, #0x568
  411838:	mov	w3, #0x43d                 	// #1085
  41183c:	mov	x2, x1
  411840:	adrp	x0, 428000 <__func__.11909+0x280>
  411844:	add	x1, x0, #0xe10
  411848:	mov	w0, #0x0                   	// #0
  41184c:	bl	405fd0 <log_assert_failed_realm@plt>
  411850:	ldr	x0, [sp, #72]
  411854:	cmp	x0, #0x0
  411858:	b.eq	411984 <server_dispatch_message+0x21c>  // b.none
  41185c:	ldr	w0, [sp, #44]
  411860:	and	w1, w0, #0x7
  411864:	ldr	x0, [sp, #88]
  411868:	ldr	w0, [x0, #536]
  41186c:	cmp	w1, w0
  411870:	b.gt	41198c <server_dispatch_message+0x224>
  411874:	ldr	x0, [sp, #88]
  411878:	ldr	w0, [x0, #556]
  41187c:	cmp	w0, #0x3
  411880:	b.eq	411994 <server_dispatch_message+0x22c>  // b.none
  411884:	ldr	x0, [sp, #56]
  411888:	cmp	x0, #0x0
  41188c:	b.eq	41195c <server_dispatch_message+0x1f4>  // b.none
  411890:	ldr	x0, [sp, #56]
  411894:	ldr	x0, [x0, #96]
  411898:	cmp	x0, #0x0
  41189c:	b.eq	41195c <server_dispatch_message+0x1f4>  // b.none
  4118a0:	add	x0, sp, #0x70
  4118a4:	mov	x2, #0x0                   	// #0
  4118a8:	mov	x1, x0
  4118ac:	ldr	x0, [sp, #88]
  4118b0:	bl	409e88 <determine_space>
  4118b4:	ldr	x0, [sp, #88]
  4118b8:	ldr	x6, [x0, #200]
  4118bc:	ldr	x0, [sp, #56]
  4118c0:	ldr	x1, [x0, #96]
  4118c4:	ldr	x0, [sp, #56]
  4118c8:	ldr	x2, [x0, #200]
  4118cc:	ldr	x0, [sp, #56]
  4118d0:	ldr	w3, [x0, #208]
  4118d4:	ldr	w0, [sp, #44]
  4118d8:	and	w0, w0, #0x7
  4118dc:	ldr	x4, [sp, #112]
  4118e0:	mov	x5, x4
  4118e4:	mov	w4, w0
  4118e8:	mov	x0, x6
  4118ec:	bl	4272bc <journal_ratelimit_test>
  4118f0:	str	w0, [sp, #108]
  4118f4:	ldr	w0, [sp, #108]
  4118f8:	cmp	w0, #0x0
  4118fc:	b.eq	41199c <server_dispatch_message+0x234>  // b.none
  411900:	ldr	w0, [sp, #108]
  411904:	cmp	w0, #0x1
  411908:	b.le	41195c <server_dispatch_message+0x1f4>
  41190c:	ldr	x0, [sp, #56]
  411910:	ldr	w1, [x0, #20]
  411914:	ldr	w0, [sp, #108]
  411918:	sub	w2, w0, #0x1
  41191c:	ldr	x0, [sp, #56]
  411920:	ldr	x3, [x0, #96]
  411924:	ldr	w0, [sp, #108]
  411928:	sub	w0, w0, #0x1
  41192c:	str	xzr, [sp]
  411930:	mov	w7, w0
  411934:	adrp	x0, 428000 <__func__.11909+0x280>
  411938:	add	x6, x0, #0xe20
  41193c:	mov	x5, x3
  411940:	mov	w4, w2
  411944:	adrp	x0, 428000 <__func__.11909+0x280>
  411948:	add	x3, x0, #0xe30
  41194c:	adrp	x0, 428000 <__func__.11909+0x280>
  411950:	add	x2, x0, #0xe58
  411954:	ldr	x0, [sp, #88]
  411958:	bl	411278 <server_driver_message>
  41195c:	ldr	w7, [sp, #40]
  411960:	ldr	w6, [sp, #44]
  411964:	ldr	x5, [sp, #48]
  411968:	ldr	x4, [sp, #56]
  41196c:	ldr	x3, [sp, #64]
  411970:	ldr	x2, [sp, #72]
  411974:	ldr	x1, [sp, #80]
  411978:	ldr	x0, [sp, #88]
  41197c:	bl	40d728 <dispatch_message_real>
  411980:	b	4119a0 <server_dispatch_message+0x238>
  411984:	nop
  411988:	b	4119a0 <server_dispatch_message+0x238>
  41198c:	nop
  411990:	b	4119a0 <server_dispatch_message+0x238>
  411994:	nop
  411998:	b	4119a0 <server_dispatch_message+0x238>
  41199c:	nop
  4119a0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4119a4:	ldr	x0, [x0, #4064]
  4119a8:	ldr	x1, [sp, #120]
  4119ac:	ldr	x0, [x0]
  4119b0:	eor	x0, x1, x0
  4119b4:	cmp	x0, #0x0
  4119b8:	b.eq	4119c0 <server_dispatch_message+0x258>  // b.none
  4119bc:	bl	4063e0 <__stack_chk_fail@plt>
  4119c0:	ldp	x29, x30, [sp, #16]
  4119c4:	add	sp, sp, #0x80
  4119c8:	ret

00000000004119cc <server_flush_to_var>:
  4119cc:	stp	x29, x30, [sp, #-256]!
  4119d0:	mov	x29, sp
  4119d4:	str	x0, [sp, #24]
  4119d8:	strb	w1, [sp, #23]
  4119dc:	adrp	x0, 441000 <wordlist.9471+0x208>
  4119e0:	ldr	x0, [x0, #4064]
  4119e4:	ldr	x1, [x0]
  4119e8:	str	x1, [sp, #248]
  4119ec:	mov	x1, #0x0                   	// #0
  4119f0:	str	xzr, [sp, #152]
  4119f4:	str	wzr, [sp, #44]
  4119f8:	ldr	x0, [sp, #24]
  4119fc:	cmp	x0, #0x0
  411a00:	cset	w0, eq  // eq = none
  411a04:	and	w0, w0, #0xff
  411a08:	and	x0, x0, #0xff
  411a0c:	cmp	x0, #0x0
  411a10:	b.eq	411a3c <server_flush_to_var+0x70>  // b.none
  411a14:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411a18:	add	x1, x0, #0xe03
  411a1c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411a20:	add	x4, x0, #0x580
  411a24:	mov	w3, #0x464                 	// #1124
  411a28:	mov	x2, x1
  411a2c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411a30:	add	x1, x0, #0xec8
  411a34:	mov	w0, #0x0                   	// #0
  411a38:	bl	405fd0 <log_assert_failed_realm@plt>
  411a3c:	strb	wzr, [sp, #43]
  411a40:	ldr	x0, [sp, #24]
  411a44:	ldr	w0, [x0, #556]
  411a48:	cmp	w0, #0x0
  411a4c:	b.eq	411a58 <server_flush_to_var+0x8c>  // b.none
  411a50:	cmp	w0, #0x2
  411a54:	b.ne	411a60 <server_flush_to_var+0x94>  // b.any
  411a58:	mov	w0, #0x1                   	// #1
  411a5c:	strb	w0, [sp, #43]
  411a60:	nop
  411a64:	ldrb	w0, [sp, #43]
  411a68:	eor	w0, w0, #0x1
  411a6c:	and	w0, w0, #0xff
  411a70:	cmp	w0, #0x0
  411a74:	b.eq	411a80 <server_flush_to_var+0xb4>  // b.none
  411a78:	mov	w0, #0x0                   	// #0
  411a7c:	b	412144 <server_flush_to_var+0x778>
  411a80:	ldr	x0, [sp, #24]
  411a84:	ldr	x0, [x0, #152]
  411a88:	cmp	x0, #0x0
  411a8c:	b.ne	411a98 <server_flush_to_var+0xcc>  // b.any
  411a90:	mov	w0, #0x0                   	// #0
  411a94:	b	412144 <server_flush_to_var+0x778>
  411a98:	ldrb	w0, [sp, #23]
  411a9c:	cmp	w0, #0x0
  411aa0:	b.eq	411ac4 <server_flush_to_var+0xf8>  // b.none
  411aa4:	bl	40a668 <flushed_flag_is_set>
  411aa8:	and	w0, w0, #0xff
  411aac:	eor	w0, w0, #0x1
  411ab0:	and	w0, w0, #0xff
  411ab4:	cmp	w0, #0x0
  411ab8:	b.eq	411ac4 <server_flush_to_var+0xf8>  // b.none
  411abc:	mov	w0, #0x0                   	// #0
  411ac0:	b	412144 <server_flush_to_var+0x778>
  411ac4:	mov	w2, #0x0                   	// #0
  411ac8:	mov	w1, #0x1                   	// #1
  411acc:	ldr	x0, [sp, #24]
  411ad0:	bl	40a694 <system_journal_open>
  411ad4:	ldr	x0, [sp, #24]
  411ad8:	ldr	x0, [x0, #160]
  411adc:	cmp	x0, #0x0
  411ae0:	b.ne	411aec <server_flush_to_var+0x120>  // b.any
  411ae4:	mov	w0, #0x0                   	// #0
  411ae8:	b	412144 <server_flush_to_var+0x778>
  411aec:	mov	w0, #0x7                   	// #7
  411af0:	str	w0, [sp, #52]
  411af4:	str	wzr, [sp, #56]
  411af8:	str	wzr, [sp, #60]
  411afc:	ldr	w0, [sp, #60]
  411b00:	bl	406c30 <log_get_max_level_realm@plt>
  411b04:	mov	w1, w0
  411b08:	ldr	w0, [sp, #52]
  411b0c:	and	w0, w0, #0x7
  411b10:	cmp	w1, w0
  411b14:	b.lt	411b58 <server_flush_to_var+0x18c>  // b.tstop
  411b18:	ldr	w0, [sp, #60]
  411b1c:	lsl	w1, w0, #10
  411b20:	ldr	w0, [sp, #52]
  411b24:	orr	w6, w1, w0
  411b28:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411b2c:	add	x1, x0, #0xe03
  411b30:	adrp	x0, 428000 <__func__.11909+0x280>
  411b34:	add	x5, x0, #0xe88
  411b38:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411b3c:	add	x4, x0, #0x598
  411b40:	mov	w3, #0x474                 	// #1140
  411b44:	mov	x2, x1
  411b48:	ldr	w1, [sp, #56]
  411b4c:	mov	w0, w6
  411b50:	bl	406590 <log_internal_realm@plt>
  411b54:	b	411b60 <server_flush_to_var+0x194>
  411b58:	ldr	w0, [sp, #56]
  411b5c:	cmp	w0, #0x0
  411b60:	mov	w0, #0x1                   	// #1
  411b64:	bl	406660 <now@plt>
  411b68:	str	x0, [sp, #168]
  411b6c:	add	x0, sp, #0x98
  411b70:	mov	w1, #0x2                   	// #2
  411b74:	bl	405cc0 <sd_journal_open@plt>
  411b78:	str	w0, [sp, #48]
  411b7c:	ldr	w0, [sp, #48]
  411b80:	cmp	w0, #0x0
  411b84:	b.ge	411c10 <server_flush_to_var+0x244>  // b.tcont
  411b88:	mov	w0, #0x3                   	// #3
  411b8c:	str	w0, [sp, #140]
  411b90:	ldr	w0, [sp, #48]
  411b94:	str	w0, [sp, #144]
  411b98:	str	wzr, [sp, #148]
  411b9c:	ldr	w0, [sp, #148]
  411ba0:	bl	406c30 <log_get_max_level_realm@plt>
  411ba4:	mov	w1, w0
  411ba8:	ldr	w0, [sp, #140]
  411bac:	and	w0, w0, #0x7
  411bb0:	cmp	w1, w0
  411bb4:	b.lt	411bf8 <server_flush_to_var+0x22c>  // b.tstop
  411bb8:	ldr	w0, [sp, #148]
  411bbc:	lsl	w1, w0, #10
  411bc0:	ldr	w0, [sp, #140]
  411bc4:	orr	w6, w1, w0
  411bc8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411bcc:	add	x1, x0, #0xe03
  411bd0:	adrp	x0, 428000 <__func__.11909+0x280>
  411bd4:	add	x5, x0, #0xea0
  411bd8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411bdc:	add	x4, x0, #0x598
  411be0:	mov	w3, #0x47a                 	// #1146
  411be4:	mov	x2, x1
  411be8:	ldr	w1, [sp, #144]
  411bec:	mov	w0, w6
  411bf0:	bl	406590 <log_internal_realm@plt>
  411bf4:	b	412144 <server_flush_to_var+0x778>
  411bf8:	ldr	w0, [sp, #144]
  411bfc:	cmp	w0, #0x0
  411c00:	cneg	w0, w0, lt  // lt = tstop
  411c04:	and	w0, w0, #0xff
  411c08:	neg	w0, w0
  411c0c:	b	412144 <server_flush_to_var+0x778>
  411c10:	ldr	x0, [sp, #152]
  411c14:	mov	x1, #0x0                   	// #0
  411c18:	bl	406980 <sd_journal_set_data_threshold@plt>
  411c1c:	ldr	x0, [sp, #152]
  411c20:	bl	406220 <sd_journal_seek_head@plt>
  411c24:	cmp	w0, #0x0
  411c28:	b.lt	412004 <server_flush_to_var+0x638>  // b.tstop
  411c2c:	b	411ff4 <server_flush_to_var+0x628>
  411c30:	str	xzr, [sp, #160]
  411c34:	ldr	x0, [sp, #152]
  411c38:	ldr	x0, [x0, #120]
  411c3c:	str	x0, [sp, #176]
  411c40:	ldr	x0, [sp, #176]
  411c44:	cmp	x0, #0x0
  411c48:	cset	w0, eq  // eq = none
  411c4c:	and	w0, w0, #0xff
  411c50:	and	x0, x0, #0xff
  411c54:	cmp	x0, #0x0
  411c58:	b.ne	411c7c <server_flush_to_var+0x2b0>  // b.any
  411c5c:	ldr	x0, [sp, #176]
  411c60:	ldr	x0, [x0, #216]
  411c64:	cmp	x0, #0x0
  411c68:	cset	w0, eq  // eq = none
  411c6c:	and	w0, w0, #0xff
  411c70:	and	x0, x0, #0xff
  411c74:	cmp	x0, #0x0
  411c78:	b.eq	411ca4 <server_flush_to_var+0x2d8>  // b.none
  411c7c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411c80:	add	x1, x0, #0xe03
  411c84:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411c88:	add	x4, x0, #0x580
  411c8c:	mov	w3, #0x483                 	// #1155
  411c90:	mov	x2, x1
  411c94:	adrp	x0, 428000 <__func__.11909+0x280>
  411c98:	add	x1, x0, #0xec8
  411c9c:	mov	w0, #0x0                   	// #0
  411ca0:	bl	405fd0 <log_assert_failed_realm@plt>
  411ca4:	ldr	w0, [sp, #44]
  411ca8:	add	w0, w0, #0x1
  411cac:	str	w0, [sp, #44]
  411cb0:	ldr	x0, [sp, #176]
  411cb4:	ldr	x0, [x0, #216]
  411cb8:	add	x1, sp, #0xa0
  411cbc:	mov	x3, x1
  411cc0:	mov	x2, x0
  411cc4:	mov	w1, #0x3                   	// #3
  411cc8:	ldr	x0, [sp, #176]
  411ccc:	bl	405cd0 <journal_file_move_to_object@plt>
  411cd0:	str	w0, [sp, #48]
  411cd4:	ldr	w0, [sp, #48]
  411cd8:	cmp	w0, #0x0
  411cdc:	b.ge	411d5c <server_flush_to_var+0x390>  // b.tcont
  411ce0:	mov	w0, #0x3                   	// #3
  411ce4:	str	w0, [sp, #112]
  411ce8:	ldr	w0, [sp, #48]
  411cec:	str	w0, [sp, #116]
  411cf0:	str	wzr, [sp, #120]
  411cf4:	ldr	w0, [sp, #120]
  411cf8:	bl	406c30 <log_get_max_level_realm@plt>
  411cfc:	mov	w1, w0
  411d00:	ldr	w0, [sp, #112]
  411d04:	and	w0, w0, #0x7
  411d08:	cmp	w1, w0
  411d0c:	b.lt	411d50 <server_flush_to_var+0x384>  // b.tstop
  411d10:	ldr	w0, [sp, #120]
  411d14:	lsl	w1, w0, #10
  411d18:	ldr	w0, [sp, #112]
  411d1c:	orr	w6, w1, w0
  411d20:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411d24:	add	x1, x0, #0xe03
  411d28:	adrp	x0, 428000 <__func__.11909+0x280>
  411d2c:	add	x5, x0, #0xee8
  411d30:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411d34:	add	x4, x0, #0x598
  411d38:	mov	w3, #0x489                 	// #1161
  411d3c:	mov	x2, x1
  411d40:	ldr	w1, [sp, #116]
  411d44:	mov	w0, w6
  411d48:	bl	406590 <log_internal_realm@plt>
  411d4c:	b	412008 <server_flush_to_var+0x63c>
  411d50:	ldr	w0, [sp, #116]
  411d54:	cmp	w0, #0x0
  411d58:	b	412008 <server_flush_to_var+0x63c>
  411d5c:	ldr	x0, [sp, #24]
  411d60:	ldr	x1, [x0, #160]
  411d64:	ldr	x2, [sp, #160]
  411d68:	ldr	x0, [sp, #176]
  411d6c:	ldr	x0, [x0, #216]
  411d70:	mov	x3, x0
  411d74:	ldr	x0, [sp, #176]
  411d78:	bl	4060c0 <journal_file_copy_entry@plt>
  411d7c:	str	w0, [sp, #48]
  411d80:	ldr	w0, [sp, #48]
  411d84:	cmp	w0, #0x0
  411d88:	b.lt	411d90 <server_flush_to_var+0x3c4>  // b.tstop
  411d8c:	b	411ff4 <server_flush_to_var+0x628>
  411d90:	ldr	x0, [sp, #24]
  411d94:	ldr	x0, [x0, #160]
  411d98:	ldr	w1, [sp, #48]
  411d9c:	bl	40cae0 <shall_try_append_again>
  411da0:	and	w0, w0, #0xff
  411da4:	eor	w0, w0, #0x1
  411da8:	and	w0, w0, #0xff
  411dac:	cmp	w0, #0x0
  411db0:	b.eq	411e30 <server_flush_to_var+0x464>  // b.none
  411db4:	mov	w0, #0x3                   	// #3
  411db8:	str	w0, [sp, #100]
  411dbc:	ldr	w0, [sp, #48]
  411dc0:	str	w0, [sp, #104]
  411dc4:	str	wzr, [sp, #108]
  411dc8:	ldr	w0, [sp, #108]
  411dcc:	bl	406c30 <log_get_max_level_realm@plt>
  411dd0:	mov	w1, w0
  411dd4:	ldr	w0, [sp, #100]
  411dd8:	and	w0, w0, #0x7
  411ddc:	cmp	w1, w0
  411de0:	b.lt	411e24 <server_flush_to_var+0x458>  // b.tstop
  411de4:	ldr	w0, [sp, #108]
  411de8:	lsl	w1, w0, #10
  411dec:	ldr	w0, [sp, #100]
  411df0:	orr	w6, w1, w0
  411df4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411df8:	add	x1, x0, #0xe03
  411dfc:	adrp	x0, 428000 <__func__.11909+0x280>
  411e00:	add	x5, x0, #0xf00
  411e04:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411e08:	add	x4, x0, #0x598
  411e0c:	mov	w3, #0x492                 	// #1170
  411e10:	mov	x2, x1
  411e14:	ldr	w1, [sp, #104]
  411e18:	mov	w0, w6
  411e1c:	bl	406590 <log_internal_realm@plt>
  411e20:	b	412008 <server_flush_to_var+0x63c>
  411e24:	ldr	w0, [sp, #104]
  411e28:	cmp	w0, #0x0
  411e2c:	b	412008 <server_flush_to_var+0x63c>
  411e30:	ldr	x0, [sp, #24]
  411e34:	bl	40b95c <server_rotate>
  411e38:	mov	w1, #0x0                   	// #0
  411e3c:	ldr	x0, [sp, #24]
  411e40:	bl	40c6e8 <server_vacuum>
  411e44:	ldr	x0, [sp, #24]
  411e48:	ldr	x0, [x0, #160]
  411e4c:	cmp	x0, #0x0
  411e50:	b.ne	411ed4 <server_flush_to_var+0x508>  // b.any
  411e54:	mov	w0, #0x5                   	// #5
  411e58:	str	w0, [sp, #88]
  411e5c:	str	wzr, [sp, #92]
  411e60:	str	wzr, [sp, #96]
  411e64:	ldr	w0, [sp, #96]
  411e68:	bl	406c30 <log_get_max_level_realm@plt>
  411e6c:	mov	w1, w0
  411e70:	ldr	w0, [sp, #88]
  411e74:	and	w0, w0, #0x7
  411e78:	cmp	w1, w0
  411e7c:	b.lt	411ec0 <server_flush_to_var+0x4f4>  // b.tstop
  411e80:	ldr	w0, [sp, #96]
  411e84:	lsl	w1, w0, #10
  411e88:	ldr	w0, [sp, #88]
  411e8c:	orr	w6, w1, w0
  411e90:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411e94:	add	x1, x0, #0xe03
  411e98:	adrp	x0, 428000 <__func__.11909+0x280>
  411e9c:	add	x5, x0, #0xf18
  411ea0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411ea4:	add	x4, x0, #0x598
  411ea8:	mov	w3, #0x49a                 	// #1178
  411eac:	mov	x2, x1
  411eb0:	ldr	w1, [sp, #92]
  411eb4:	mov	w0, w6
  411eb8:	bl	406590 <log_internal_realm@plt>
  411ebc:	b	411ec8 <server_flush_to_var+0x4fc>
  411ec0:	ldr	w0, [sp, #92]
  411ec4:	cmp	w0, #0x0
  411ec8:	mov	w0, #0xfffffffb            	// #-5
  411ecc:	str	w0, [sp, #48]
  411ed0:	b	412008 <server_flush_to_var+0x63c>
  411ed4:	mov	w0, #0x7                   	// #7
  411ed8:	str	w0, [sp, #64]
  411edc:	str	wzr, [sp, #68]
  411ee0:	str	wzr, [sp, #72]
  411ee4:	ldr	w0, [sp, #72]
  411ee8:	bl	406c30 <log_get_max_level_realm@plt>
  411eec:	mov	w1, w0
  411ef0:	ldr	w0, [sp, #64]
  411ef4:	and	w0, w0, #0x7
  411ef8:	cmp	w1, w0
  411efc:	b.lt	411f40 <server_flush_to_var+0x574>  // b.tstop
  411f00:	ldr	w0, [sp, #72]
  411f04:	lsl	w1, w0, #10
  411f08:	ldr	w0, [sp, #64]
  411f0c:	orr	w6, w1, w0
  411f10:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411f14:	add	x1, x0, #0xe03
  411f18:	adrp	x0, 428000 <__func__.11909+0x280>
  411f1c:	add	x5, x0, #0x8f0
  411f20:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411f24:	add	x4, x0, #0x598
  411f28:	mov	w3, #0x49f                 	// #1183
  411f2c:	mov	x2, x1
  411f30:	ldr	w1, [sp, #68]
  411f34:	mov	w0, w6
  411f38:	bl	406590 <log_internal_realm@plt>
  411f3c:	b	411f48 <server_flush_to_var+0x57c>
  411f40:	ldr	w0, [sp, #68]
  411f44:	cmp	w0, #0x0
  411f48:	ldr	x0, [sp, #24]
  411f4c:	ldr	x1, [x0, #160]
  411f50:	ldr	x2, [sp, #160]
  411f54:	ldr	x0, [sp, #176]
  411f58:	ldr	x0, [x0, #216]
  411f5c:	mov	x3, x0
  411f60:	ldr	x0, [sp, #176]
  411f64:	bl	4060c0 <journal_file_copy_entry@plt>
  411f68:	str	w0, [sp, #48]
  411f6c:	ldr	w0, [sp, #48]
  411f70:	cmp	w0, #0x0
  411f74:	b.ge	411ff4 <server_flush_to_var+0x628>  // b.tcont
  411f78:	mov	w0, #0x3                   	// #3
  411f7c:	str	w0, [sp, #76]
  411f80:	ldr	w0, [sp, #48]
  411f84:	str	w0, [sp, #80]
  411f88:	str	wzr, [sp, #84]
  411f8c:	ldr	w0, [sp, #84]
  411f90:	bl	406c30 <log_get_max_level_realm@plt>
  411f94:	mov	w1, w0
  411f98:	ldr	w0, [sp, #76]
  411f9c:	and	w0, w0, #0x7
  411fa0:	cmp	w1, w0
  411fa4:	b.lt	411fe8 <server_flush_to_var+0x61c>  // b.tstop
  411fa8:	ldr	w0, [sp, #84]
  411fac:	lsl	w1, w0, #10
  411fb0:	ldr	w0, [sp, #76]
  411fb4:	orr	w6, w1, w0
  411fb8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  411fbc:	add	x1, x0, #0xe03
  411fc0:	adrp	x0, 428000 <__func__.11909+0x280>
  411fc4:	add	x5, x0, #0xf00
  411fc8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  411fcc:	add	x4, x0, #0x598
  411fd0:	mov	w3, #0x4a2                 	// #1186
  411fd4:	mov	x2, x1
  411fd8:	ldr	w1, [sp, #80]
  411fdc:	mov	w0, w6
  411fe0:	bl	406590 <log_internal_realm@plt>
  411fe4:	b	412008 <server_flush_to_var+0x63c>
  411fe8:	ldr	w0, [sp, #80]
  411fec:	cmp	w0, #0x0
  411ff0:	b	412008 <server_flush_to_var+0x63c>
  411ff4:	ldr	x0, [sp, #152]
  411ff8:	bl	406400 <sd_journal_next@plt>
  411ffc:	cmp	w0, #0x0
  412000:	b.gt	411c30 <server_flush_to_var+0x264>
  412004:	str	wzr, [sp, #48]
  412008:	ldr	x0, [sp, #24]
  41200c:	ldr	x0, [x0, #160]
  412010:	cmp	x0, #0x0
  412014:	b.eq	412024 <server_flush_to_var+0x658>  // b.none
  412018:	ldr	x0, [sp, #24]
  41201c:	ldr	x0, [x0, #160]
  412020:	bl	4067f0 <journal_file_post_change@plt>
  412024:	ldr	x0, [sp, #24]
  412028:	ldr	x0, [x0, #152]
  41202c:	bl	406030 <journal_file_close@plt>
  412030:	mov	x1, x0
  412034:	ldr	x0, [sp, #24]
  412038:	str	x1, [x0, #152]
  41203c:	ldr	w0, [sp, #48]
  412040:	cmp	w0, #0x0
  412044:	b.lt	412058 <server_flush_to_var+0x68c>  // b.tstop
  412048:	mov	w1, #0x2                   	// #2
  41204c:	adrp	x0, 428000 <__func__.11909+0x280>
  412050:	add	x0, x0, #0x190
  412054:	bl	4068e0 <rm_rf@plt>
  412058:	ldr	x0, [sp, #152]
  41205c:	bl	406190 <sd_journal_close@plt>
  412060:	mov	w0, #0x1                   	// #1
  412064:	bl	406660 <now@plt>
  412068:	mov	x1, x0
  41206c:	ldr	x0, [sp, #168]
  412070:	sub	x1, x1, x0
  412074:	add	x0, sp, #0xb8
  412078:	mov	x3, #0x0                   	// #0
  41207c:	mov	x2, x1
  412080:	mov	x1, #0x40                  	// #64
  412084:	bl	405bf0 <format_timespan@plt>
  412088:	mov	x6, #0x0                   	// #0
  41208c:	ldr	w5, [sp, #44]
  412090:	mov	x4, x0
  412094:	adrp	x0, 428000 <__func__.11909+0x280>
  412098:	add	x3, x0, #0xf70
  41209c:	mov	x2, #0x0                   	// #0
  4120a0:	mov	w1, #0x0                   	// #0
  4120a4:	ldr	x0, [sp, #24]
  4120a8:	bl	411278 <server_driver_message>
  4120ac:	adrp	x0, 428000 <__func__.11909+0x280>
  4120b0:	add	x0, x0, #0x98
  4120b4:	bl	4062a0 <touch@plt>
  4120b8:	str	w0, [sp, #124]
  4120bc:	ldr	w0, [sp, #124]
  4120c0:	cmp	w0, #0x0
  4120c4:	b.ge	412140 <server_flush_to_var+0x774>  // b.tcont
  4120c8:	mov	w0, #0x4                   	// #4
  4120cc:	str	w0, [sp, #128]
  4120d0:	ldr	w0, [sp, #124]
  4120d4:	str	w0, [sp, #132]
  4120d8:	str	wzr, [sp, #136]
  4120dc:	ldr	w0, [sp, #136]
  4120e0:	bl	406c30 <log_get_max_level_realm@plt>
  4120e4:	mov	w1, w0
  4120e8:	ldr	w0, [sp, #128]
  4120ec:	and	w0, w0, #0x7
  4120f0:	cmp	w1, w0
  4120f4:	b.lt	412138 <server_flush_to_var+0x76c>  // b.tstop
  4120f8:	ldr	w0, [sp, #136]
  4120fc:	lsl	w1, w0, #10
  412100:	ldr	w0, [sp, #128]
  412104:	orr	w6, w1, w0
  412108:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41210c:	add	x1, x0, #0xe03
  412110:	adrp	x0, 428000 <__func__.11909+0x280>
  412114:	add	x5, x0, #0xfb0
  412118:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41211c:	add	x4, x0, #0x598
  412120:	mov	w3, #0x4bc                 	// #1212
  412124:	mov	x2, x1
  412128:	ldr	w1, [sp, #132]
  41212c:	mov	w0, w6
  412130:	bl	406590 <log_internal_realm@plt>
  412134:	b	412140 <server_flush_to_var+0x774>
  412138:	ldr	w0, [sp, #132]
  41213c:	cmp	w0, #0x0
  412140:	ldr	w0, [sp, #48]
  412144:	mov	w1, w0
  412148:	adrp	x0, 441000 <wordlist.9471+0x208>
  41214c:	ldr	x0, [x0, #4064]
  412150:	ldr	x2, [sp, #248]
  412154:	ldr	x0, [x0]
  412158:	eor	x0, x2, x0
  41215c:	cmp	x0, #0x0
  412160:	b.eq	412168 <server_flush_to_var+0x79c>  // b.none
  412164:	bl	4063e0 <__stack_chk_fail@plt>
  412168:	mov	w0, w1
  41216c:	ldp	x29, x30, [sp], #256
  412170:	ret

0000000000412174 <server_relinquish_var>:
  412174:	stp	x29, x30, [sp, #-80]!
  412178:	mov	x29, sp
  41217c:	str	x0, [sp, #24]
  412180:	ldr	x0, [sp, #24]
  412184:	cmp	x0, #0x0
  412188:	cset	w0, eq  // eq = none
  41218c:	and	w0, w0, #0xff
  412190:	and	x0, x0, #0xff
  412194:	cmp	x0, #0x0
  412198:	b.eq	4121c4 <server_relinquish_var+0x50>  // b.none
  41219c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4121a0:	add	x1, x0, #0xe03
  4121a4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4121a8:	add	x4, x0, #0x5b0
  4121ac:	mov	w3, #0x4c2                 	// #1218
  4121b0:	mov	x2, x1
  4121b4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4121b8:	add	x1, x0, #0xec8
  4121bc:	mov	w0, #0x0                   	// #0
  4121c0:	bl	405fd0 <log_assert_failed_realm@plt>
  4121c4:	ldr	x0, [sp, #24]
  4121c8:	ldr	w0, [x0, #556]
  4121cc:	cmp	w0, #0x3
  4121d0:	b.ne	4121dc <server_relinquish_var+0x68>  // b.any
  4121d4:	mov	w0, #0x0                   	// #0
  4121d8:	b	412394 <server_relinquish_var+0x220>
  4121dc:	ldr	x0, [sp, #24]
  4121e0:	ldr	x0, [x0, #152]
  4121e4:	cmp	x0, #0x0
  4121e8:	b.eq	412204 <server_relinquish_var+0x90>  // b.none
  4121ec:	ldr	x0, [sp, #24]
  4121f0:	ldr	x0, [x0, #160]
  4121f4:	cmp	x0, #0x0
  4121f8:	b.ne	412204 <server_relinquish_var+0x90>  // b.any
  4121fc:	mov	w0, #0x0                   	// #0
  412200:	b	412394 <server_relinquish_var+0x220>
  412204:	mov	w0, #0x7                   	// #7
  412208:	str	w0, [sp, #40]
  41220c:	str	wzr, [sp, #44]
  412210:	str	wzr, [sp, #48]
  412214:	ldr	w0, [sp, #48]
  412218:	bl	406c30 <log_get_max_level_realm@plt>
  41221c:	mov	w1, w0
  412220:	ldr	w0, [sp, #40]
  412224:	and	w0, w0, #0x7
  412228:	cmp	w1, w0
  41222c:	b.lt	412270 <server_relinquish_var+0xfc>  // b.tstop
  412230:	ldr	w0, [sp, #48]
  412234:	lsl	w1, w0, #10
  412238:	ldr	w0, [sp, #40]
  41223c:	orr	w6, w1, w0
  412240:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412244:	add	x1, x0, #0xe03
  412248:	adrp	x0, 428000 <__func__.11909+0x280>
  41224c:	add	x5, x0, #0xff0
  412250:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412254:	add	x4, x0, #0x5c8
  412258:	mov	w3, #0x4ca                 	// #1226
  41225c:	mov	x2, x1
  412260:	ldr	w1, [sp, #44]
  412264:	mov	w0, w6
  412268:	bl	406590 <log_internal_realm@plt>
  41226c:	b	412278 <server_relinquish_var+0x104>
  412270:	ldr	w0, [sp, #44]
  412274:	cmp	w0, #0x0
  412278:	mov	w2, #0x1                   	// #1
  41227c:	mov	w1, #0x0                   	// #0
  412280:	ldr	x0, [sp, #24]
  412284:	bl	40a694 <system_journal_open>
  412288:	ldr	x0, [sp, #24]
  41228c:	ldr	x0, [x0, #160]
  412290:	bl	406030 <journal_file_close@plt>
  412294:	mov	x1, x0
  412298:	ldr	x0, [sp, #24]
  41229c:	str	x1, [x0, #160]
  4122a0:	b	4122ac <server_relinquish_var+0x138>
  4122a4:	ldr	x0, [sp, #64]
  4122a8:	bl	406030 <journal_file_close@plt>
  4122ac:	ldr	x0, [sp, #24]
  4122b0:	ldr	x0, [x0, #168]
  4122b4:	bl	409310 <ordered_hashmap_steal_first>
  4122b8:	str	x0, [sp, #64]
  4122bc:	ldr	x0, [sp, #64]
  4122c0:	cmp	x0, #0x0
  4122c4:	b.ne	4122a4 <server_relinquish_var+0x130>  // b.any
  4122c8:	b	4122d4 <server_relinquish_var+0x160>
  4122cc:	ldr	x0, [sp, #72]
  4122d0:	bl	406030 <journal_file_close@plt>
  4122d4:	ldr	x0, [sp, #24]
  4122d8:	ldr	x0, [x0, #576]
  4122dc:	bl	409398 <set_steal_first>
  4122e0:	str	x0, [sp, #72]
  4122e4:	ldr	x0, [sp, #72]
  4122e8:	cmp	x0, #0x0
  4122ec:	b.ne	4122cc <server_relinquish_var+0x158>  // b.any
  4122f0:	adrp	x0, 428000 <__func__.11909+0x280>
  4122f4:	add	x0, x0, #0x98
  4122f8:	bl	405b50 <unlink@plt>
  4122fc:	cmp	w0, #0x0
  412300:	b.ge	412390 <server_relinquish_var+0x21c>  // b.tcont
  412304:	bl	4062e0 <__errno_location@plt>
  412308:	ldr	w0, [x0]
  41230c:	cmp	w0, #0x2
  412310:	b.eq	412390 <server_relinquish_var+0x21c>  // b.none
  412314:	mov	w0, #0x4                   	// #4
  412318:	str	w0, [sp, #52]
  41231c:	bl	4062e0 <__errno_location@plt>
  412320:	ldr	w0, [x0]
  412324:	str	w0, [sp, #56]
  412328:	str	wzr, [sp, #60]
  41232c:	ldr	w0, [sp, #60]
  412330:	bl	406c30 <log_get_max_level_realm@plt>
  412334:	mov	w1, w0
  412338:	ldr	w0, [sp, #52]
  41233c:	and	w0, w0, #0x7
  412340:	cmp	w1, w0
  412344:	b.lt	412388 <server_relinquish_var+0x214>  // b.tstop
  412348:	ldr	w0, [sp, #60]
  41234c:	lsl	w1, w0, #10
  412350:	ldr	w0, [sp, #52]
  412354:	orr	w6, w1, w0
  412358:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41235c:	add	x1, x0, #0xe03
  412360:	adrp	x0, 429000 <__func__.11909+0x1280>
  412364:	add	x5, x0, #0x8
  412368:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41236c:	add	x4, x0, #0x5c8
  412370:	mov	w3, #0x4d3                 	// #1235
  412374:	mov	x2, x1
  412378:	ldr	w1, [sp, #56]
  41237c:	mov	w0, w6
  412380:	bl	406590 <log_internal_realm@plt>
  412384:	b	412390 <server_relinquish_var+0x21c>
  412388:	ldr	w0, [sp, #56]
  41238c:	cmp	w0, #0x0
  412390:	mov	w0, #0x0                   	// #0
  412394:	ldp	x29, x30, [sp], #80
  412398:	ret

000000000041239c <server_process_datagram>:
  41239c:	sub	sp, sp, #0x340
  4123a0:	stp	x29, x30, [sp]
  4123a4:	mov	x29, sp
  4123a8:	str	x19, [sp, #16]
  4123ac:	str	x0, [sp, #56]
  4123b0:	str	w1, [sp, #52]
  4123b4:	str	w2, [sp, #48]
  4123b8:	str	x3, [sp, #40]
  4123bc:	adrp	x0, 441000 <wordlist.9471+0x208>
  4123c0:	ldr	x0, [x0, #4064]
  4123c4:	ldr	x1, [x0]
  4123c8:	str	x1, [sp, #824]
  4123cc:	mov	x1, #0x0                   	// #0
  4123d0:	ldr	x0, [sp, #40]
  4123d4:	str	x0, [sp, #200]
  4123d8:	str	xzr, [sp, #144]
  4123dc:	str	xzr, [sp, #152]
  4123e0:	str	xzr, [sp, #168]
  4123e4:	str	xzr, [sp, #176]
  4123e8:	str	xzr, [sp, #184]
  4123ec:	str	wzr, [sp, #80]
  4123f0:	str	xzr, [sp, #192]
  4123f4:	add	x0, sp, #0x1d0
  4123f8:	mov	x1, #0x168                 	// #360
  4123fc:	mov	x2, x1
  412400:	mov	w1, #0x0                   	// #0
  412404:	bl	406c20 <memset@plt>
  412408:	stp	xzr, xzr, [sp, #336]
  41240c:	stp	xzr, xzr, [sp, #352]
  412410:	stp	xzr, xzr, [sp, #368]
  412414:	stp	xzr, xzr, [sp, #384]
  412418:	stp	xzr, xzr, [sp, #400]
  41241c:	stp	xzr, xzr, [sp, #416]
  412420:	stp	xzr, xzr, [sp, #432]
  412424:	stp	xzr, xzr, [sp, #448]
  412428:	add	x0, sp, #0x200
  41242c:	stp	xzr, xzr, [x0, #-232]
  412430:	add	x0, sp, #0x200
  412434:	stp	xzr, xzr, [x0, #-216]
  412438:	add	x0, sp, #0x200
  41243c:	stp	xzr, xzr, [x0, #-200]
  412440:	str	xzr, [sp, #328]
  412444:	add	x0, sp, #0x150
  412448:	str	x0, [sp, #280]
  41244c:	mov	w0, #0x80                  	// #128
  412450:	str	w0, [sp, #288]
  412454:	add	x0, sp, #0x108
  412458:	str	x0, [sp, #296]
  41245c:	mov	x0, #0x1                   	// #1
  412460:	str	x0, [sp, #304]
  412464:	add	x0, sp, #0x1d0
  412468:	str	x0, [sp, #312]
  41246c:	mov	x0, #0x168                 	// #360
  412470:	str	x0, [sp, #320]
  412474:	ldr	x0, [sp, #200]
  412478:	cmp	x0, #0x0
  41247c:	cset	w0, eq  // eq = none
  412480:	and	w0, w0, #0xff
  412484:	and	x0, x0, #0xff
  412488:	cmp	x0, #0x0
  41248c:	b.eq	4124b8 <server_process_datagram+0x11c>  // b.none
  412490:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412494:	add	x1, x0, #0xe03
  412498:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41249c:	add	x4, x0, #0x5e0
  4124a0:	mov	w3, #0x4ff                 	// #1279
  4124a4:	mov	x2, x1
  4124a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4124ac:	add	x1, x0, #0xec8
  4124b0:	mov	w0, #0x0                   	// #0
  4124b4:	bl	405fd0 <log_assert_failed_realm@plt>
  4124b8:	ldr	x0, [sp, #200]
  4124bc:	ldr	w0, [x0, #4]
  4124c0:	ldr	w1, [sp, #52]
  4124c4:	cmp	w1, w0
  4124c8:	cset	w0, ne  // ne = any
  4124cc:	and	w0, w0, #0xff
  4124d0:	and	x0, x0, #0xff
  4124d4:	cmp	x0, #0x0
  4124d8:	b.eq	412508 <server_process_datagram+0x16c>  // b.none
  4124dc:	ldr	x0, [sp, #200]
  4124e0:	ldr	w0, [x0]
  4124e4:	ldr	w1, [sp, #52]
  4124e8:	cmp	w1, w0
  4124ec:	cset	w0, ne  // ne = any
  4124f0:	and	w0, w0, #0xff
  4124f4:	and	x0, x0, #0xff
  4124f8:	cmp	x0, #0x0
  4124fc:	b.eq	412508 <server_process_datagram+0x16c>  // b.none
  412500:	mov	w0, #0x1                   	// #1
  412504:	b	41250c <server_process_datagram+0x170>
  412508:	mov	w0, #0x0                   	// #0
  41250c:	cmp	w0, #0x0
  412510:	b.eq	412560 <server_process_datagram+0x1c4>  // b.none
  412514:	ldr	x0, [sp, #200]
  412518:	ldr	w0, [x0, #16]
  41251c:	ldr	w1, [sp, #52]
  412520:	cmp	w1, w0
  412524:	cset	w0, ne  // ne = any
  412528:	and	w0, w0, #0xff
  41252c:	and	x0, x0, #0xff
  412530:	cmp	x0, #0x0
  412534:	b.eq	412560 <server_process_datagram+0x1c4>  // b.none
  412538:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41253c:	add	x1, x0, #0xe03
  412540:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412544:	add	x4, x0, #0x5e0
  412548:	mov	w3, #0x500                 	// #1280
  41254c:	mov	x2, x1
  412550:	adrp	x0, 429000 <__func__.11909+0x1280>
  412554:	add	x1, x0, #0x48
  412558:	mov	w0, #0x0                   	// #0
  41255c:	bl	405fd0 <log_assert_failed_realm@plt>
  412560:	ldr	w0, [sp, #48]
  412564:	cmp	w0, #0x1
  412568:	b.eq	4125fc <server_process_datagram+0x260>  // b.none
  41256c:	mov	w0, #0x3                   	// #3
  412570:	str	w0, [sp, #132]
  412574:	mov	w0, #0x5                   	// #5
  412578:	movk	w0, #0x4000, lsl #16
  41257c:	str	w0, [sp, #136]
  412580:	str	wzr, [sp, #140]
  412584:	ldr	w0, [sp, #140]
  412588:	bl	406c30 <log_get_max_level_realm@plt>
  41258c:	mov	w1, w0
  412590:	ldr	w0, [sp, #132]
  412594:	and	w0, w0, #0x7
  412598:	cmp	w1, w0
  41259c:	b.lt	4125e4 <server_process_datagram+0x248>  // b.tstop
  4125a0:	ldr	w0, [sp, #140]
  4125a4:	lsl	w1, w0, #10
  4125a8:	ldr	w0, [sp, #132]
  4125ac:	orr	w7, w1, w0
  4125b0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4125b4:	add	x1, x0, #0xe03
  4125b8:	ldr	w6, [sp, #48]
  4125bc:	adrp	x0, 429000 <__func__.11909+0x1280>
  4125c0:	add	x5, x0, #0x88
  4125c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4125c8:	add	x4, x0, #0x5f8
  4125cc:	mov	w3, #0x503                 	// #1283
  4125d0:	mov	x2, x1
  4125d4:	ldr	w1, [sp, #136]
  4125d8:	mov	w0, w7
  4125dc:	bl	406590 <log_internal_realm@plt>
  4125e0:	b	412c4c <server_process_datagram+0x8b0>
  4125e4:	ldr	w0, [sp, #136]
  4125e8:	cmp	w0, #0x0
  4125ec:	cneg	w0, w0, lt  // lt = tstop
  4125f0:	and	w0, w0, #0xff
  4125f4:	neg	w0, w0
  4125f8:	b	412c4c <server_process_datagram+0x8b0>
  4125fc:	add	x0, sp, #0x50
  412600:	mov	x2, x0
  412604:	mov	x1, #0x541b                	// #21531
  412608:	ldr	w0, [sp, #52]
  41260c:	bl	406650 <ioctl@plt>
  412610:	ldr	w0, [sp, #80]
  412614:	sxtw	x0, w0
  412618:	add	x0, x0, #0x1
  41261c:	str	x0, [sp, #208]
  412620:	mov	x0, #0x800                 	// #2048
  412624:	str	x0, [sp, #216]
  412628:	ldr	x0, [sp, #208]
  41262c:	ldr	x2, [sp, #216]
  412630:	ldr	x1, [sp, #216]
  412634:	cmp	x2, x0
  412638:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41263c:	str	x0, [sp, #224]
  412640:	ldr	x0, [sp, #224]
  412644:	str	x0, [sp, #232]
  412648:	mov	x0, #0x2320                	// #8992
  41264c:	str	x0, [sp, #240]
  412650:	ldr	x0, [sp, #232]
  412654:	ldr	x2, [sp, #240]
  412658:	ldr	x1, [sp, #240]
  41265c:	cmp	x2, x0
  412660:	csel	x0, x1, x0, cs  // cs = hs, nlast
  412664:	add	x19, x0, #0x1
  412668:	bl	406640 <page_size@plt>
  41266c:	mov	x1, x0
  412670:	mov	x0, x19
  412674:	bl	4090c4 <ALIGN_TO>
  412678:	str	x0, [sp, #248]
  41267c:	ldr	x0, [sp, #200]
  412680:	add	x4, x0, #0xb8
  412684:	ldr	x0, [sp, #200]
  412688:	add	x0, x0, #0xc0
  41268c:	mov	x3, #0x1                   	// #1
  412690:	ldr	x2, [sp, #248]
  412694:	mov	x1, x0
  412698:	mov	x0, x4
  41269c:	bl	406160 <greedy_realloc@plt>
  4126a0:	cmp	x0, #0x0
  4126a4:	b.ne	4126c8 <server_process_datagram+0x32c>  // b.any
  4126a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4126ac:	add	x1, x0, #0xe03
  4126b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4126b4:	add	x3, x0, #0x5f8
  4126b8:	mov	w2, #0x511                 	// #1297
  4126bc:	mov	w0, #0x0                   	// #0
  4126c0:	bl	406b70 <log_oom_internal@plt>
  4126c4:	b	412c4c <server_process_datagram+0x8b0>
  4126c8:	ldr	x0, [sp, #200]
  4126cc:	ldr	x1, [x0, #184]
  4126d0:	ldr	x0, [sp, #200]
  4126d4:	ldr	x0, [x0, #192]
  4126d8:	sub	x0, x0, #0x1
  4126dc:	str	x1, [sp, #264]
  4126e0:	str	x0, [sp, #272]
  4126e4:	add	x0, sp, #0x118
  4126e8:	mov	w2, #0x40                  	// #64
  4126ec:	movk	w2, #0x4000, lsl #16
  4126f0:	mov	x1, x0
  4126f4:	ldr	w0, [sp, #52]
  4126f8:	bl	406710 <recvmsg@plt>
  4126fc:	str	x0, [sp, #256]
  412700:	ldr	x0, [sp, #256]
  412704:	cmp	x0, #0x0
  412708:	b.ge	4127d4 <server_process_datagram+0x438>  // b.tcont
  41270c:	strb	wzr, [sp, #79]
  412710:	bl	4062e0 <__errno_location@plt>
  412714:	ldr	w0, [x0]
  412718:	cmp	w0, #0x4
  41271c:	b.eq	412728 <server_process_datagram+0x38c>  // b.none
  412720:	cmp	w0, #0xb
  412724:	b.ne	412730 <server_process_datagram+0x394>  // b.any
  412728:	mov	w0, #0x1                   	// #1
  41272c:	strb	w0, [sp, #79]
  412730:	nop
  412734:	ldrb	w0, [sp, #79]
  412738:	cmp	w0, #0x0
  41273c:	b.eq	412748 <server_process_datagram+0x3ac>  // b.none
  412740:	mov	w0, #0x0                   	// #0
  412744:	b	412c4c <server_process_datagram+0x8b0>
  412748:	mov	w0, #0x3                   	// #3
  41274c:	str	w0, [sp, #120]
  412750:	bl	4062e0 <__errno_location@plt>
  412754:	ldr	w0, [x0]
  412758:	str	w0, [sp, #124]
  41275c:	str	wzr, [sp, #128]
  412760:	ldr	w0, [sp, #128]
  412764:	bl	406c30 <log_get_max_level_realm@plt>
  412768:	mov	w1, w0
  41276c:	ldr	w0, [sp, #120]
  412770:	and	w0, w0, #0x7
  412774:	cmp	w1, w0
  412778:	b.lt	4127bc <server_process_datagram+0x420>  // b.tstop
  41277c:	ldr	w0, [sp, #128]
  412780:	lsl	w1, w0, #10
  412784:	ldr	w0, [sp, #120]
  412788:	orr	w6, w1, w0
  41278c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412790:	add	x1, x0, #0xe03
  412794:	adrp	x0, 429000 <__func__.11909+0x1280>
  412798:	add	x5, x0, #0xc0
  41279c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4127a0:	add	x4, x0, #0x5f8
  4127a4:	mov	w3, #0x51a                 	// #1306
  4127a8:	mov	x2, x1
  4127ac:	ldr	w1, [sp, #124]
  4127b0:	mov	w0, w6
  4127b4:	bl	406590 <log_internal_realm@plt>
  4127b8:	b	412c4c <server_process_datagram+0x8b0>
  4127bc:	ldr	w0, [sp, #124]
  4127c0:	cmp	w0, #0x0
  4127c4:	cneg	w0, w0, lt  // lt = tstop
  4127c8:	and	w0, w0, #0xff
  4127cc:	neg	w0, w0
  4127d0:	b	412c4c <server_process_datagram+0x8b0>
  4127d4:	ldr	x0, [sp, #320]
  4127d8:	cmp	x0, #0xf
  4127dc:	b.ls	4127e8 <server_process_datagram+0x44c>  // b.plast
  4127e0:	ldr	x0, [sp, #312]
  4127e4:	b	4127ec <server_process_datagram+0x450>
  4127e8:	mov	x0, #0x0                   	// #0
  4127ec:	str	x0, [sp, #160]
  4127f0:	b	412904 <server_process_datagram+0x568>
  4127f4:	ldr	x0, [sp, #160]
  4127f8:	ldr	w0, [x0, #8]
  4127fc:	cmp	w0, #0x1
  412800:	b.ne	412834 <server_process_datagram+0x498>  // b.any
  412804:	ldr	x0, [sp, #160]
  412808:	ldr	w0, [x0, #12]
  41280c:	cmp	w0, #0x2
  412810:	b.ne	412834 <server_process_datagram+0x498>  // b.any
  412814:	ldr	x0, [sp, #160]
  412818:	ldr	x0, [x0]
  41281c:	cmp	x0, #0x1c
  412820:	b.ne	412834 <server_process_datagram+0x498>  // b.any
  412824:	ldr	x0, [sp, #160]
  412828:	add	x0, x0, #0x10
  41282c:	str	x0, [sp, #144]
  412830:	b	4128f4 <server_process_datagram+0x558>
  412834:	ldr	x0, [sp, #160]
  412838:	ldr	w0, [x0, #8]
  41283c:	cmp	w0, #0x1
  412840:	b.ne	412874 <server_process_datagram+0x4d8>  // b.any
  412844:	ldr	x0, [sp, #160]
  412848:	ldr	w0, [x0, #12]
  41284c:	cmp	w0, #0x3
  412850:	b.ne	412874 <server_process_datagram+0x4d8>  // b.any
  412854:	ldr	x0, [sp, #160]
  412858:	add	x0, x0, #0x10
  41285c:	str	x0, [sp, #168]
  412860:	ldr	x0, [sp, #160]
  412864:	ldr	x0, [x0]
  412868:	sub	x0, x0, #0x10
  41286c:	str	x0, [sp, #176]
  412870:	b	4128f4 <server_process_datagram+0x558>
  412874:	ldr	x0, [sp, #160]
  412878:	ldr	w0, [x0, #8]
  41287c:	cmp	w0, #0x1
  412880:	b.ne	4128b4 <server_process_datagram+0x518>  // b.any
  412884:	ldr	x0, [sp, #160]
  412888:	ldr	w0, [x0, #12]
  41288c:	cmp	w0, #0x1d
  412890:	b.ne	4128b4 <server_process_datagram+0x518>  // b.any
  412894:	ldr	x0, [sp, #160]
  412898:	ldr	x0, [x0]
  41289c:	cmp	x0, #0x20
  4128a0:	b.ne	4128b4 <server_process_datagram+0x518>  // b.any
  4128a4:	ldr	x0, [sp, #160]
  4128a8:	add	x0, x0, #0x10
  4128ac:	str	x0, [sp, #152]
  4128b0:	b	4128f4 <server_process_datagram+0x558>
  4128b4:	ldr	x0, [sp, #160]
  4128b8:	ldr	w0, [x0, #8]
  4128bc:	cmp	w0, #0x1
  4128c0:	b.ne	4128f4 <server_process_datagram+0x558>  // b.any
  4128c4:	ldr	x0, [sp, #160]
  4128c8:	ldr	w0, [x0, #12]
  4128cc:	cmp	w0, #0x1
  4128d0:	b.ne	4128f4 <server_process_datagram+0x558>  // b.any
  4128d4:	ldr	x0, [sp, #160]
  4128d8:	add	x0, x0, #0x10
  4128dc:	str	x0, [sp, #184]
  4128e0:	ldr	x0, [sp, #160]
  4128e4:	ldr	x0, [x0]
  4128e8:	sub	x0, x0, #0x10
  4128ec:	lsr	x0, x0, #2
  4128f0:	str	x0, [sp, #192]
  4128f4:	add	x0, sp, #0x118
  4128f8:	ldr	x1, [sp, #160]
  4128fc:	bl	405e80 <__cmsg_nxthdr@plt>
  412900:	str	x0, [sp, #160]
  412904:	ldr	x0, [sp, #160]
  412908:	cmp	x0, #0x0
  41290c:	b.ne	4127f4 <server_process_datagram+0x458>  // b.any
  412910:	ldr	x0, [sp, #200]
  412914:	ldr	x1, [x0, #184]
  412918:	ldr	x0, [sp, #256]
  41291c:	add	x0, x1, x0
  412920:	strb	wzr, [x0]
  412924:	ldr	x0, [sp, #200]
  412928:	ldr	w0, [x0]
  41292c:	ldr	w1, [sp, #52]
  412930:	cmp	w1, w0
  412934:	b.ne	412a04 <server_process_datagram+0x668>  // b.any
  412938:	ldr	x0, [sp, #256]
  41293c:	cmp	x0, #0x0
  412940:	b.le	412980 <server_process_datagram+0x5e4>
  412944:	ldr	x0, [sp, #192]
  412948:	cmp	x0, #0x0
  41294c:	b.ne	412980 <server_process_datagram+0x5e4>  // b.any
  412950:	ldr	x0, [sp, #200]
  412954:	ldr	x0, [x0, #184]
  412958:	ldr	x1, [sp, #256]
  41295c:	ldr	x6, [sp, #176]
  412960:	ldr	x5, [sp, #168]
  412964:	ldr	x4, [sp, #152]
  412968:	ldr	x3, [sp, #144]
  41296c:	mov	x2, x1
  412970:	mov	x1, x0
  412974:	ldr	x0, [sp, #200]
  412978:	bl	41ce54 <server_process_syslog_message>
  41297c:	b	412c3c <server_process_datagram+0x8a0>
  412980:	ldr	x0, [sp, #192]
  412984:	cmp	x0, #0x0
  412988:	b.eq	412c3c <server_process_datagram+0x8a0>  // b.none
  41298c:	mov	w0, #0x4                   	// #4
  412990:	str	w0, [sp, #108]
  412994:	str	wzr, [sp, #112]
  412998:	str	wzr, [sp, #116]
  41299c:	ldr	w0, [sp, #116]
  4129a0:	bl	406c30 <log_get_max_level_realm@plt>
  4129a4:	mov	w1, w0
  4129a8:	ldr	w0, [sp, #108]
  4129ac:	and	w0, w0, #0x7
  4129b0:	cmp	w1, w0
  4129b4:	b.lt	4129f8 <server_process_datagram+0x65c>  // b.tstop
  4129b8:	ldr	w0, [sp, #116]
  4129bc:	lsl	w1, w0, #10
  4129c0:	ldr	w0, [sp, #108]
  4129c4:	orr	w6, w1, w0
  4129c8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4129cc:	add	x1, x0, #0xe03
  4129d0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4129d4:	add	x5, x0, #0xd8
  4129d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4129dc:	add	x4, x0, #0x5f8
  4129e0:	mov	w3, #0x537                 	// #1335
  4129e4:	mov	x2, x1
  4129e8:	ldr	w1, [sp, #112]
  4129ec:	mov	w0, w6
  4129f0:	bl	406590 <log_internal_realm@plt>
  4129f4:	b	412c3c <server_process_datagram+0x8a0>
  4129f8:	ldr	w0, [sp, #112]
  4129fc:	cmp	w0, #0x0
  412a00:	b	412c3c <server_process_datagram+0x8a0>
  412a04:	ldr	x0, [sp, #200]
  412a08:	ldr	w0, [x0, #4]
  412a0c:	ldr	w1, [sp, #52]
  412a10:	cmp	w1, w0
  412a14:	b.ne	412b24 <server_process_datagram+0x788>  // b.any
  412a18:	ldr	x0, [sp, #256]
  412a1c:	cmp	x0, #0x0
  412a20:	b.le	412a60 <server_process_datagram+0x6c4>
  412a24:	ldr	x0, [sp, #192]
  412a28:	cmp	x0, #0x0
  412a2c:	b.ne	412a60 <server_process_datagram+0x6c4>  // b.any
  412a30:	ldr	x0, [sp, #200]
  412a34:	ldr	x0, [x0, #184]
  412a38:	ldr	x1, [sp, #256]
  412a3c:	ldr	x6, [sp, #176]
  412a40:	ldr	x5, [sp, #168]
  412a44:	ldr	x4, [sp, #152]
  412a48:	ldr	x3, [sp, #144]
  412a4c:	mov	x2, x1
  412a50:	mov	x1, x0
  412a54:	ldr	x0, [sp, #200]
  412a58:	bl	425834 <server_process_native_message>
  412a5c:	b	412c3c <server_process_datagram+0x8a0>
  412a60:	ldr	x0, [sp, #256]
  412a64:	cmp	x0, #0x0
  412a68:	b.ne	412aa0 <server_process_datagram+0x704>  // b.any
  412a6c:	ldr	x0, [sp, #192]
  412a70:	cmp	x0, #0x1
  412a74:	b.ne	412aa0 <server_process_datagram+0x704>  // b.any
  412a78:	ldr	x0, [sp, #184]
  412a7c:	ldr	w0, [x0]
  412a80:	ldr	x5, [sp, #176]
  412a84:	ldr	x4, [sp, #168]
  412a88:	ldr	x3, [sp, #152]
  412a8c:	ldr	x2, [sp, #144]
  412a90:	mov	w1, w0
  412a94:	ldr	x0, [sp, #200]
  412a98:	bl	425a7c <server_process_native_file>
  412a9c:	b	412c3c <server_process_datagram+0x8a0>
  412aa0:	ldr	x0, [sp, #192]
  412aa4:	cmp	x0, #0x0
  412aa8:	b.eq	412c3c <server_process_datagram+0x8a0>  // b.none
  412aac:	mov	w0, #0x4                   	// #4
  412ab0:	str	w0, [sp, #96]
  412ab4:	str	wzr, [sp, #100]
  412ab8:	str	wzr, [sp, #104]
  412abc:	ldr	w0, [sp, #104]
  412ac0:	bl	406c30 <log_get_max_level_realm@plt>
  412ac4:	mov	w1, w0
  412ac8:	ldr	w0, [sp, #96]
  412acc:	and	w0, w0, #0x7
  412ad0:	cmp	w1, w0
  412ad4:	b.lt	412b18 <server_process_datagram+0x77c>  // b.tstop
  412ad8:	ldr	w0, [sp, #104]
  412adc:	lsl	w1, w0, #10
  412ae0:	ldr	w0, [sp, #96]
  412ae4:	orr	w6, w1, w0
  412ae8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412aec:	add	x1, x0, #0xe03
  412af0:	adrp	x0, 429000 <__func__.11909+0x1280>
  412af4:	add	x5, x0, #0x110
  412af8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412afc:	add	x4, x0, #0x5f8
  412b00:	mov	w3, #0x53f                 	// #1343
  412b04:	mov	x2, x1
  412b08:	ldr	w1, [sp, #100]
  412b0c:	mov	w0, w6
  412b10:	bl	406590 <log_internal_realm@plt>
  412b14:	b	412c3c <server_process_datagram+0x8a0>
  412b18:	ldr	w0, [sp, #100]
  412b1c:	cmp	w0, #0x0
  412b20:	b	412c3c <server_process_datagram+0x8a0>
  412b24:	ldr	x0, [sp, #200]
  412b28:	ldr	w0, [x0, #16]
  412b2c:	ldr	w1, [sp, #52]
  412b30:	cmp	w1, w0
  412b34:	cset	w0, ne  // ne = any
  412b38:	and	w0, w0, #0xff
  412b3c:	and	x0, x0, #0xff
  412b40:	cmp	x0, #0x0
  412b44:	b.eq	412b70 <server_process_datagram+0x7d4>  // b.none
  412b48:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412b4c:	add	x1, x0, #0xe03
  412b50:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412b54:	add	x4, x0, #0x5e0
  412b58:	mov	w3, #0x542                 	// #1346
  412b5c:	mov	x2, x1
  412b60:	adrp	x0, 429000 <__func__.11909+0x1280>
  412b64:	add	x1, x0, #0x150
  412b68:	mov	w0, #0x0                   	// #0
  412b6c:	bl	405fd0 <log_assert_failed_realm@plt>
  412b70:	ldr	x0, [sp, #256]
  412b74:	cmp	x0, #0x0
  412b78:	b.le	412bbc <server_process_datagram+0x820>
  412b7c:	ldr	x0, [sp, #192]
  412b80:	cmp	x0, #0x0
  412b84:	b.ne	412bbc <server_process_datagram+0x820>  // b.any
  412b88:	ldr	x0, [sp, #200]
  412b8c:	ldr	x0, [x0, #184]
  412b90:	ldr	x1, [sp, #256]
  412b94:	ldr	w3, [sp, #288]
  412b98:	add	x2, sp, #0x150
  412b9c:	mov	w5, w3
  412ba0:	mov	x4, x2
  412ba4:	ldr	x3, [sp, #144]
  412ba8:	mov	x2, x1
  412bac:	mov	x1, x0
  412bb0:	ldr	x0, [sp, #200]
  412bb4:	bl	4202f4 <server_process_audit_message>
  412bb8:	b	412c3c <server_process_datagram+0x8a0>
  412bbc:	ldr	x0, [sp, #192]
  412bc0:	cmp	x0, #0x0
  412bc4:	b.eq	412c3c <server_process_datagram+0x8a0>  // b.none
  412bc8:	mov	w0, #0x4                   	// #4
  412bcc:	str	w0, [sp, #84]
  412bd0:	str	wzr, [sp, #88]
  412bd4:	str	wzr, [sp, #92]
  412bd8:	ldr	w0, [sp, #92]
  412bdc:	bl	406c30 <log_get_max_level_realm@plt>
  412be0:	mov	w1, w0
  412be4:	ldr	w0, [sp, #84]
  412be8:	and	w0, w0, #0x7
  412bec:	cmp	w1, w0
  412bf0:	b.lt	412c34 <server_process_datagram+0x898>  // b.tstop
  412bf4:	ldr	w0, [sp, #92]
  412bf8:	lsl	w1, w0, #10
  412bfc:	ldr	w0, [sp, #84]
  412c00:	orr	w6, w1, w0
  412c04:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412c08:	add	x1, x0, #0xe03
  412c0c:	adrp	x0, 429000 <__func__.11909+0x1280>
  412c10:	add	x5, x0, #0x168
  412c14:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412c18:	add	x4, x0, #0x5f8
  412c1c:	mov	w3, #0x547                 	// #1351
  412c20:	mov	x2, x1
  412c24:	ldr	w1, [sp, #88]
  412c28:	mov	w0, w6
  412c2c:	bl	406590 <log_internal_realm@plt>
  412c30:	b	412c3c <server_process_datagram+0x8a0>
  412c34:	ldr	w0, [sp, #88]
  412c38:	cmp	w0, #0x0
  412c3c:	ldr	x1, [sp, #192]
  412c40:	ldr	x0, [sp, #184]
  412c44:	bl	406550 <close_many@plt>
  412c48:	mov	w0, #0x0                   	// #0
  412c4c:	mov	w1, w0
  412c50:	adrp	x0, 441000 <wordlist.9471+0x208>
  412c54:	ldr	x0, [x0, #4064]
  412c58:	ldr	x2, [sp, #824]
  412c5c:	ldr	x0, [x0]
  412c60:	eor	x0, x2, x0
  412c64:	cmp	x0, #0x0
  412c68:	b.eq	412c70 <server_process_datagram+0x8d4>  // b.none
  412c6c:	bl	4063e0 <__stack_chk_fail@plt>
  412c70:	mov	w0, w1
  412c74:	ldr	x19, [sp, #16]
  412c78:	ldp	x29, x30, [sp]
  412c7c:	add	sp, sp, #0x340
  412c80:	ret

0000000000412c84 <server_full_flush>:
  412c84:	stp	x29, x30, [sp, #-32]!
  412c88:	mov	x29, sp
  412c8c:	str	x0, [sp, #24]
  412c90:	ldr	x0, [sp, #24]
  412c94:	cmp	x0, #0x0
  412c98:	cset	w0, eq  // eq = none
  412c9c:	and	w0, w0, #0xff
  412ca0:	and	x0, x0, #0xff
  412ca4:	cmp	x0, #0x0
  412ca8:	b.eq	412cd4 <server_full_flush+0x50>  // b.none
  412cac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412cb0:	add	x1, x0, #0xe03
  412cb4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412cb8:	add	x4, x0, #0x610
  412cbc:	mov	w3, #0x54f                 	// #1359
  412cc0:	mov	x2, x1
  412cc4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412cc8:	add	x1, x0, #0xec8
  412ccc:	mov	w0, #0x0                   	// #0
  412cd0:	bl	405fd0 <log_assert_failed_realm@plt>
  412cd4:	mov	w1, #0x0                   	// #0
  412cd8:	ldr	x0, [sp, #24]
  412cdc:	bl	4119cc <server_flush_to_var>
  412ce0:	ldr	x0, [sp, #24]
  412ce4:	bl	40c2c4 <server_sync>
  412ce8:	mov	w1, #0x0                   	// #0
  412cec:	ldr	x0, [sp, #24]
  412cf0:	bl	40c6e8 <server_vacuum>
  412cf4:	mov	x1, #0x0                   	// #0
  412cf8:	ldr	x0, [sp, #24]
  412cfc:	bl	409f68 <server_space_usage_message>
  412d00:	nop
  412d04:	ldp	x29, x30, [sp], #32
  412d08:	ret

0000000000412d0c <dispatch_sigusr1>:
  412d0c:	stp	x29, x30, [sp, #-80]!
  412d10:	mov	x29, sp
  412d14:	str	x0, [sp, #40]
  412d18:	str	x1, [sp, #32]
  412d1c:	str	x2, [sp, #24]
  412d20:	ldr	x0, [sp, #24]
  412d24:	str	x0, [sp, #72]
  412d28:	ldr	x0, [sp, #72]
  412d2c:	cmp	x0, #0x0
  412d30:	cset	w0, eq  // eq = none
  412d34:	and	w0, w0, #0xff
  412d38:	and	x0, x0, #0xff
  412d3c:	cmp	x0, #0x0
  412d40:	b.eq	412d6c <dispatch_sigusr1+0x60>  // b.none
  412d44:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412d48:	add	x1, x0, #0xe03
  412d4c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412d50:	add	x4, x0, #0x628
  412d54:	mov	w3, #0x55b                 	// #1371
  412d58:	mov	x2, x1
  412d5c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412d60:	add	x1, x0, #0xec8
  412d64:	mov	w0, #0x0                   	// #0
  412d68:	bl	405fd0 <log_assert_failed_realm@plt>
  412d6c:	mov	w0, #0x6                   	// #6
  412d70:	str	w0, [sp, #60]
  412d74:	str	wzr, [sp, #64]
  412d78:	str	wzr, [sp, #68]
  412d7c:	ldr	w0, [sp, #68]
  412d80:	bl	406c30 <log_get_max_level_realm@plt>
  412d84:	mov	w1, w0
  412d88:	ldr	w0, [sp, #60]
  412d8c:	and	w0, w0, #0x7
  412d90:	cmp	w1, w0
  412d94:	b.lt	412de4 <dispatch_sigusr1+0xd8>  // b.tstop
  412d98:	ldr	w0, [sp, #68]
  412d9c:	lsl	w1, w0, #10
  412da0:	ldr	w0, [sp, #60]
  412da4:	orr	w7, w1, w0
  412da8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412dac:	add	x1, x0, #0xe03
  412db0:	ldr	x0, [sp, #32]
  412db4:	ldr	w0, [x0, #12]
  412db8:	mov	w6, w0
  412dbc:	adrp	x0, 429000 <__func__.11909+0x1280>
  412dc0:	add	x5, x0, #0x1a0
  412dc4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412dc8:	add	x4, x0, #0x640
  412dcc:	mov	w3, #0x55d                 	// #1373
  412dd0:	mov	x2, x1
  412dd4:	ldr	w1, [sp, #64]
  412dd8:	mov	w0, w7
  412ddc:	bl	406590 <log_internal_realm@plt>
  412de0:	b	412dec <dispatch_sigusr1+0xe0>
  412de4:	ldr	w0, [sp, #64]
  412de8:	cmp	w0, #0x0
  412dec:	ldr	x0, [sp, #72]
  412df0:	bl	412c84 <server_full_flush>
  412df4:	mov	w0, #0x0                   	// #0
  412df8:	ldp	x29, x30, [sp], #80
  412dfc:	ret

0000000000412e00 <server_full_rotate>:
  412e00:	stp	x29, x30, [sp, #-48]!
  412e04:	mov	x29, sp
  412e08:	str	x0, [sp, #24]
  412e0c:	ldr	x0, [sp, #24]
  412e10:	cmp	x0, #0x0
  412e14:	cset	w0, eq  // eq = none
  412e18:	and	w0, w0, #0xff
  412e1c:	and	x0, x0, #0xff
  412e20:	cmp	x0, #0x0
  412e24:	b.eq	412e50 <server_full_rotate+0x50>  // b.none
  412e28:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412e2c:	add	x1, x0, #0xe03
  412e30:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412e34:	add	x4, x0, #0x658
  412e38:	mov	w3, #0x566                 	// #1382
  412e3c:	mov	x2, x1
  412e40:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412e44:	add	x1, x0, #0xec8
  412e48:	mov	w0, #0x0                   	// #0
  412e4c:	bl	405fd0 <log_assert_failed_realm@plt>
  412e50:	ldr	x0, [sp, #24]
  412e54:	bl	40b95c <server_rotate>
  412e58:	mov	w1, #0x1                   	// #1
  412e5c:	ldr	x0, [sp, #24]
  412e60:	bl	40c6e8 <server_vacuum>
  412e64:	ldr	x0, [sp, #24]
  412e68:	ldr	x0, [x0, #160]
  412e6c:	cmp	x0, #0x0
  412e70:	b.eq	412e80 <server_full_rotate+0x80>  // b.none
  412e74:	ldr	x0, [sp, #24]
  412e78:	add	x0, x0, #0x150
  412e7c:	bl	409df8 <patch_min_use>
  412e80:	ldr	x0, [sp, #24]
  412e84:	ldr	x0, [x0, #152]
  412e88:	cmp	x0, #0x0
  412e8c:	b.eq	412e9c <server_full_rotate+0x9c>  // b.none
  412e90:	ldr	x0, [sp, #24]
  412e94:	add	x0, x0, #0xe8
  412e98:	bl	409df8 <patch_min_use>
  412e9c:	mov	w0, #0x1                   	// #1
  412ea0:	bl	406660 <now@plt>
  412ea4:	mov	x1, x0
  412ea8:	adrp	x0, 429000 <__func__.11909+0x1280>
  412eac:	add	x0, x0, #0x1f0
  412eb0:	bl	405ef0 <write_timestamp_file_atomic@plt>
  412eb4:	str	w0, [sp, #32]
  412eb8:	ldr	w0, [sp, #32]
  412ebc:	cmp	w0, #0x0
  412ec0:	b.ge	412f3c <server_full_rotate+0x13c>  // b.tcont
  412ec4:	mov	w0, #0x4                   	// #4
  412ec8:	str	w0, [sp, #36]
  412ecc:	ldr	w0, [sp, #32]
  412ed0:	str	w0, [sp, #40]
  412ed4:	str	wzr, [sp, #44]
  412ed8:	ldr	w0, [sp, #44]
  412edc:	bl	406c30 <log_get_max_level_realm@plt>
  412ee0:	mov	w1, w0
  412ee4:	ldr	w0, [sp, #36]
  412ee8:	and	w0, w0, #0x7
  412eec:	cmp	w1, w0
  412ef0:	b.lt	412f34 <server_full_rotate+0x134>  // b.tstop
  412ef4:	ldr	w0, [sp, #44]
  412ef8:	lsl	w1, w0, #10
  412efc:	ldr	w0, [sp, #36]
  412f00:	orr	w6, w1, w0
  412f04:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412f08:	add	x1, x0, #0xe03
  412f0c:	adrp	x0, 429000 <__func__.11909+0x1280>
  412f10:	add	x5, x0, #0x210
  412f14:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412f18:	add	x4, x0, #0x670
  412f1c:	mov	w3, #0x573                 	// #1395
  412f20:	mov	x2, x1
  412f24:	ldr	w1, [sp, #40]
  412f28:	mov	w0, w6
  412f2c:	bl	406590 <log_internal_realm@plt>
  412f30:	b	412f3c <server_full_rotate+0x13c>
  412f34:	ldr	w0, [sp, #40]
  412f38:	cmp	w0, #0x0
  412f3c:	nop
  412f40:	ldp	x29, x30, [sp], #48
  412f44:	ret

0000000000412f48 <dispatch_sigusr2>:
  412f48:	stp	x29, x30, [sp, #-80]!
  412f4c:	mov	x29, sp
  412f50:	str	x0, [sp, #40]
  412f54:	str	x1, [sp, #32]
  412f58:	str	x2, [sp, #24]
  412f5c:	ldr	x0, [sp, #24]
  412f60:	str	x0, [sp, #72]
  412f64:	ldr	x0, [sp, #72]
  412f68:	cmp	x0, #0x0
  412f6c:	cset	w0, eq  // eq = none
  412f70:	and	w0, w0, #0xff
  412f74:	and	x0, x0, #0xff
  412f78:	cmp	x0, #0x0
  412f7c:	b.eq	412fa8 <dispatch_sigusr2+0x60>  // b.none
  412f80:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412f84:	add	x1, x0, #0xe03
  412f88:	adrp	x0, 42a000 <__func__.11909+0x2280>
  412f8c:	add	x4, x0, #0x688
  412f90:	mov	w3, #0x579                 	// #1401
  412f94:	mov	x2, x1
  412f98:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412f9c:	add	x1, x0, #0xec8
  412fa0:	mov	w0, #0x0                   	// #0
  412fa4:	bl	405fd0 <log_assert_failed_realm@plt>
  412fa8:	mov	w0, #0x6                   	// #6
  412fac:	str	w0, [sp, #60]
  412fb0:	str	wzr, [sp, #64]
  412fb4:	str	wzr, [sp, #68]
  412fb8:	ldr	w0, [sp, #68]
  412fbc:	bl	406c30 <log_get_max_level_realm@plt>
  412fc0:	mov	w1, w0
  412fc4:	ldr	w0, [sp, #60]
  412fc8:	and	w0, w0, #0x7
  412fcc:	cmp	w1, w0
  412fd0:	b.lt	413020 <dispatch_sigusr2+0xd8>  // b.tstop
  412fd4:	ldr	w0, [sp, #68]
  412fd8:	lsl	w1, w0, #10
  412fdc:	ldr	w0, [sp, #60]
  412fe0:	orr	w7, w1, w0
  412fe4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  412fe8:	add	x1, x0, #0xe03
  412fec:	ldr	x0, [sp, #32]
  412ff0:	ldr	w0, [x0, #12]
  412ff4:	mov	w6, w0
  412ff8:	adrp	x0, 429000 <__func__.11909+0x1280>
  412ffc:	add	x5, x0, #0x250
  413000:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413004:	add	x4, x0, #0x6a0
  413008:	mov	w3, #0x57b                 	// #1403
  41300c:	mov	x2, x1
  413010:	ldr	w1, [sp, #64]
  413014:	mov	w0, w7
  413018:	bl	406590 <log_internal_realm@plt>
  41301c:	b	413028 <dispatch_sigusr2+0xe0>
  413020:	ldr	w0, [sp, #64]
  413024:	cmp	w0, #0x0
  413028:	ldr	x0, [sp, #72]
  41302c:	bl	412e00 <server_full_rotate>
  413030:	mov	w0, #0x0                   	// #0
  413034:	ldp	x29, x30, [sp], #80
  413038:	ret

000000000041303c <dispatch_sigterm>:
  41303c:	stp	x29, x30, [sp, #-64]!
  413040:	mov	x29, sp
  413044:	str	x0, [sp, #40]
  413048:	str	x1, [sp, #32]
  41304c:	str	x2, [sp, #24]
  413050:	ldr	x0, [sp, #24]
  413054:	str	x0, [sp, #56]
  413058:	ldr	x0, [sp, #56]
  41305c:	cmp	x0, #0x0
  413060:	cset	w0, eq  // eq = none
  413064:	and	w0, w0, #0xff
  413068:	and	x0, x0, #0xff
  41306c:	cmp	x0, #0x0
  413070:	b.eq	41309c <dispatch_sigterm+0x60>  // b.none
  413074:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413078:	add	x1, x0, #0xe03
  41307c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413080:	add	x4, x0, #0x6b8
  413084:	mov	w3, #0x584                 	// #1412
  413088:	mov	x2, x1
  41308c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413090:	add	x1, x0, #0xec8
  413094:	mov	w0, #0x0                   	// #0
  413098:	bl	405fd0 <log_assert_failed_realm@plt>
  41309c:	ldr	x1, [sp, #32]
  4130a0:	mov	w0, #0x6                   	// #6
  4130a4:	bl	4061b0 <log_received_signal@plt>
  4130a8:	ldr	x0, [sp, #56]
  4130ac:	ldr	x0, [x0, #32]
  4130b0:	mov	w1, #0x0                   	// #0
  4130b4:	bl	406960 <sd_event_exit@plt>
  4130b8:	mov	w0, #0x0                   	// #0
  4130bc:	ldp	x29, x30, [sp], #64
  4130c0:	ret

00000000004130c4 <server_full_sync>:
  4130c4:	stp	x29, x30, [sp, #-48]!
  4130c8:	mov	x29, sp
  4130cc:	str	x0, [sp, #24]
  4130d0:	ldr	x0, [sp, #24]
  4130d4:	cmp	x0, #0x0
  4130d8:	cset	w0, eq  // eq = none
  4130dc:	and	w0, w0, #0xff
  4130e0:	and	x0, x0, #0xff
  4130e4:	cmp	x0, #0x0
  4130e8:	b.eq	413114 <server_full_sync+0x50>  // b.none
  4130ec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4130f0:	add	x1, x0, #0xe03
  4130f4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4130f8:	add	x4, x0, #0x6d0
  4130fc:	mov	w3, #0x58f                 	// #1423
  413100:	mov	x2, x1
  413104:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413108:	add	x1, x0, #0xec8
  41310c:	mov	w0, #0x0                   	// #0
  413110:	bl	405fd0 <log_assert_failed_realm@plt>
  413114:	ldr	x0, [sp, #24]
  413118:	bl	40c2c4 <server_sync>
  41311c:	mov	w0, #0x1                   	// #1
  413120:	bl	406660 <now@plt>
  413124:	mov	x1, x0
  413128:	adrp	x0, 429000 <__func__.11909+0x1280>
  41312c:	add	x0, x0, #0x298
  413130:	bl	405ef0 <write_timestamp_file_atomic@plt>
  413134:	str	w0, [sp, #32]
  413138:	ldr	w0, [sp, #32]
  41313c:	cmp	w0, #0x0
  413140:	b.ge	4131c0 <server_full_sync+0xfc>  // b.tcont
  413144:	mov	w0, #0x4                   	// #4
  413148:	str	w0, [sp, #36]
  41314c:	ldr	w0, [sp, #32]
  413150:	str	w0, [sp, #40]
  413154:	str	wzr, [sp, #44]
  413158:	ldr	w0, [sp, #44]
  41315c:	bl	406c30 <log_get_max_level_realm@plt>
  413160:	mov	w1, w0
  413164:	ldr	w0, [sp, #36]
  413168:	and	w0, w0, #0x7
  41316c:	cmp	w1, w0
  413170:	b.lt	4131b4 <server_full_sync+0xf0>  // b.tstop
  413174:	ldr	w0, [sp, #44]
  413178:	lsl	w1, w0, #10
  41317c:	ldr	w0, [sp, #36]
  413180:	orr	w6, w1, w0
  413184:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413188:	add	x1, x0, #0xe03
  41318c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413190:	add	x5, x0, #0x2b8
  413194:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413198:	add	x4, x0, #0x6e8
  41319c:	mov	w3, #0x596                 	// #1430
  4131a0:	mov	x2, x1
  4131a4:	ldr	w1, [sp, #40]
  4131a8:	mov	w0, w6
  4131ac:	bl	406590 <log_internal_realm@plt>
  4131b0:	b	4131c0 <server_full_sync+0xfc>
  4131b4:	ldr	w0, [sp, #40]
  4131b8:	cmp	w0, #0x0
  4131bc:	nop
  4131c0:	nop
  4131c4:	ldp	x29, x30, [sp], #48
  4131c8:	ret

00000000004131cc <dispatch_sigrtmin1>:
  4131cc:	stp	x29, x30, [sp, #-80]!
  4131d0:	mov	x29, sp
  4131d4:	str	x0, [sp, #40]
  4131d8:	str	x1, [sp, #32]
  4131dc:	str	x2, [sp, #24]
  4131e0:	ldr	x0, [sp, #24]
  4131e4:	str	x0, [sp, #72]
  4131e8:	ldr	x0, [sp, #72]
  4131ec:	cmp	x0, #0x0
  4131f0:	cset	w0, eq  // eq = none
  4131f4:	and	w0, w0, #0xff
  4131f8:	and	x0, x0, #0xff
  4131fc:	cmp	x0, #0x0
  413200:	b.eq	41322c <dispatch_sigrtmin1+0x60>  // b.none
  413204:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413208:	add	x1, x0, #0xe03
  41320c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413210:	add	x4, x0, #0x700
  413214:	mov	w3, #0x59e                 	// #1438
  413218:	mov	x2, x1
  41321c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413220:	add	x1, x0, #0xec8
  413224:	mov	w0, #0x0                   	// #0
  413228:	bl	405fd0 <log_assert_failed_realm@plt>
  41322c:	mov	w0, #0x7                   	// #7
  413230:	str	w0, [sp, #60]
  413234:	str	wzr, [sp, #64]
  413238:	str	wzr, [sp, #68]
  41323c:	ldr	w0, [sp, #68]
  413240:	bl	406c30 <log_get_max_level_realm@plt>
  413244:	mov	w1, w0
  413248:	ldr	w0, [sp, #60]
  41324c:	and	w0, w0, #0x7
  413250:	cmp	w1, w0
  413254:	b.lt	4132a4 <dispatch_sigrtmin1+0xd8>  // b.tstop
  413258:	ldr	w0, [sp, #68]
  41325c:	lsl	w1, w0, #10
  413260:	ldr	w0, [sp, #60]
  413264:	orr	w7, w1, w0
  413268:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41326c:	add	x1, x0, #0xe03
  413270:	ldr	x0, [sp, #32]
  413274:	ldr	w0, [x0, #12]
  413278:	mov	w6, w0
  41327c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413280:	add	x5, x0, #0x2f8
  413284:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413288:	add	x4, x0, #0x718
  41328c:	mov	w3, #0x5a0                 	// #1440
  413290:	mov	x2, x1
  413294:	ldr	w1, [sp, #64]
  413298:	mov	w0, w7
  41329c:	bl	406590 <log_internal_realm@plt>
  4132a0:	b	4132ac <dispatch_sigrtmin1+0xe0>
  4132a4:	ldr	w0, [sp, #64]
  4132a8:	cmp	w0, #0x0
  4132ac:	ldr	x0, [sp, #72]
  4132b0:	bl	4130c4 <server_full_sync>
  4132b4:	mov	w0, #0x0                   	// #0
  4132b8:	ldp	x29, x30, [sp], #80
  4132bc:	ret

00000000004132c0 <setup_signals>:
  4132c0:	stp	x29, x30, [sp, #-64]!
  4132c4:	mov	x29, sp
  4132c8:	stp	x19, x20, [sp, #16]
  4132cc:	str	x0, [sp, #40]
  4132d0:	ldr	x0, [sp, #40]
  4132d4:	cmp	x0, #0x0
  4132d8:	cset	w0, eq  // eq = none
  4132dc:	and	w0, w0, #0xff
  4132e0:	and	x0, x0, #0xff
  4132e4:	cmp	x0, #0x0
  4132e8:	b.eq	413314 <setup_signals+0x54>  // b.none
  4132ec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4132f0:	add	x1, x0, #0xe03
  4132f4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4132f8:	add	x4, x0, #0x730
  4132fc:	mov	w3, #0x5a9                 	// #1449
  413300:	mov	x2, x1
  413304:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413308:	add	x1, x0, #0xec8
  41330c:	mov	w0, #0x0                   	// #0
  413310:	bl	405fd0 <log_assert_failed_realm@plt>
  413314:	bl	405f50 <__libc_current_sigrtmin@plt>
  413318:	add	w0, w0, #0x1
  41331c:	mov	w7, #0xffffffff            	// #-1
  413320:	mov	w6, w0
  413324:	mov	w5, #0xc                   	// #12
  413328:	mov	w4, #0xa                   	// #10
  41332c:	mov	w3, #0xf                   	// #15
  413330:	mov	w2, #0x2                   	// #2
  413334:	mov	x1, #0x0                   	// #0
  413338:	mov	w0, #0x2                   	// #2
  41333c:	bl	406140 <sigprocmask_many@plt>
  413340:	lsr	w0, w0, #31
  413344:	and	w0, w0, #0xff
  413348:	and	x0, x0, #0xff
  41334c:	cmp	x0, #0x0
  413350:	b.eq	41337c <setup_signals+0xbc>  // b.none
  413354:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413358:	add	x1, x0, #0xe03
  41335c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413360:	add	x4, x0, #0x730
  413364:	mov	w3, #0x5ab                 	// #1451
  413368:	mov	x2, x1
  41336c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413370:	add	x1, x0, #0x338
  413374:	mov	w0, #0x0                   	// #0
  413378:	bl	405fd0 <log_assert_failed_realm@plt>
  41337c:	ldr	x0, [sp, #40]
  413380:	ldr	x5, [x0, #32]
  413384:	ldr	x0, [sp, #40]
  413388:	add	x1, x0, #0x58
  41338c:	ldr	x4, [sp, #40]
  413390:	adrp	x0, 412000 <server_flush_to_var+0x634>
  413394:	add	x3, x0, #0xd0c
  413398:	mov	w2, #0xa                   	// #10
  41339c:	mov	x0, x5
  4133a0:	bl	406ab0 <sd_event_add_signal@plt>
  4133a4:	str	w0, [sp, #60]
  4133a8:	ldr	w0, [sp, #60]
  4133ac:	cmp	w0, #0x0
  4133b0:	b.ge	4133bc <setup_signals+0xfc>  // b.tcont
  4133b4:	ldr	w0, [sp, #60]
  4133b8:	b	413544 <setup_signals+0x284>
  4133bc:	ldr	x0, [sp, #40]
  4133c0:	ldr	x5, [x0, #32]
  4133c4:	ldr	x0, [sp, #40]
  4133c8:	add	x1, x0, #0x60
  4133cc:	ldr	x4, [sp, #40]
  4133d0:	adrp	x0, 412000 <server_flush_to_var+0x634>
  4133d4:	add	x3, x0, #0xf48
  4133d8:	mov	w2, #0xc                   	// #12
  4133dc:	mov	x0, x5
  4133e0:	bl	406ab0 <sd_event_add_signal@plt>
  4133e4:	str	w0, [sp, #60]
  4133e8:	ldr	w0, [sp, #60]
  4133ec:	cmp	w0, #0x0
  4133f0:	b.ge	4133fc <setup_signals+0x13c>  // b.tcont
  4133f4:	ldr	w0, [sp, #60]
  4133f8:	b	413544 <setup_signals+0x284>
  4133fc:	ldr	x0, [sp, #40]
  413400:	ldr	x5, [x0, #32]
  413404:	ldr	x0, [sp, #40]
  413408:	add	x1, x0, #0x68
  41340c:	ldr	x4, [sp, #40]
  413410:	adrp	x0, 413000 <dispatch_sigusr2+0xb8>
  413414:	add	x3, x0, #0x3c
  413418:	mov	w2, #0xf                   	// #15
  41341c:	mov	x0, x5
  413420:	bl	406ab0 <sd_event_add_signal@plt>
  413424:	str	w0, [sp, #60]
  413428:	ldr	w0, [sp, #60]
  41342c:	cmp	w0, #0x0
  413430:	b.ge	41343c <setup_signals+0x17c>  // b.tcont
  413434:	ldr	w0, [sp, #60]
  413438:	b	413544 <setup_signals+0x284>
  41343c:	ldr	x0, [sp, #40]
  413440:	ldr	x0, [x0, #104]
  413444:	mov	x1, #0x14                  	// #20
  413448:	bl	406380 <sd_event_source_set_priority@plt>
  41344c:	str	w0, [sp, #60]
  413450:	ldr	w0, [sp, #60]
  413454:	cmp	w0, #0x0
  413458:	b.ge	413464 <setup_signals+0x1a4>  // b.tcont
  41345c:	ldr	w0, [sp, #60]
  413460:	b	413544 <setup_signals+0x284>
  413464:	ldr	x0, [sp, #40]
  413468:	ldr	x5, [x0, #32]
  41346c:	ldr	x0, [sp, #40]
  413470:	add	x1, x0, #0x70
  413474:	ldr	x4, [sp, #40]
  413478:	adrp	x0, 413000 <dispatch_sigusr2+0xb8>
  41347c:	add	x3, x0, #0x3c
  413480:	mov	w2, #0x2                   	// #2
  413484:	mov	x0, x5
  413488:	bl	406ab0 <sd_event_add_signal@plt>
  41348c:	str	w0, [sp, #60]
  413490:	ldr	w0, [sp, #60]
  413494:	cmp	w0, #0x0
  413498:	b.ge	4134a4 <setup_signals+0x1e4>  // b.tcont
  41349c:	ldr	w0, [sp, #60]
  4134a0:	b	413544 <setup_signals+0x284>
  4134a4:	ldr	x0, [sp, #40]
  4134a8:	ldr	x0, [x0, #112]
  4134ac:	mov	x1, #0x14                  	// #20
  4134b0:	bl	406380 <sd_event_source_set_priority@plt>
  4134b4:	str	w0, [sp, #60]
  4134b8:	ldr	w0, [sp, #60]
  4134bc:	cmp	w0, #0x0
  4134c0:	b.ge	4134cc <setup_signals+0x20c>  // b.tcont
  4134c4:	ldr	w0, [sp, #60]
  4134c8:	b	413544 <setup_signals+0x284>
  4134cc:	ldr	x0, [sp, #40]
  4134d0:	ldr	x19, [x0, #32]
  4134d4:	ldr	x0, [sp, #40]
  4134d8:	add	x20, x0, #0x78
  4134dc:	bl	405f50 <__libc_current_sigrtmin@plt>
  4134e0:	add	w1, w0, #0x1
  4134e4:	ldr	x4, [sp, #40]
  4134e8:	adrp	x0, 413000 <dispatch_sigusr2+0xb8>
  4134ec:	add	x3, x0, #0x1cc
  4134f0:	mov	w2, w1
  4134f4:	mov	x1, x20
  4134f8:	mov	x0, x19
  4134fc:	bl	406ab0 <sd_event_add_signal@plt>
  413500:	str	w0, [sp, #60]
  413504:	ldr	w0, [sp, #60]
  413508:	cmp	w0, #0x0
  41350c:	b.ge	413518 <setup_signals+0x258>  // b.tcont
  413510:	ldr	w0, [sp, #60]
  413514:	b	413544 <setup_signals+0x284>
  413518:	ldr	x0, [sp, #40]
  41351c:	ldr	x0, [x0, #120]
  413520:	mov	x1, #0xf                   	// #15
  413524:	bl	406380 <sd_event_source_set_priority@plt>
  413528:	str	w0, [sp, #60]
  41352c:	ldr	w0, [sp, #60]
  413530:	cmp	w0, #0x0
  413534:	b.ge	413540 <setup_signals+0x280>  // b.tcont
  413538:	ldr	w0, [sp, #60]
  41353c:	b	413544 <setup_signals+0x284>
  413540:	mov	w0, #0x0                   	// #0
  413544:	ldp	x19, x20, [sp, #16]
  413548:	ldp	x29, x30, [sp], #64
  41354c:	ret

0000000000413550 <parse_proc_cmdline_item>:
  413550:	stp	x29, x30, [sp, #-192]!
  413554:	mov	x29, sp
  413558:	str	x0, [sp, #40]
  41355c:	str	x1, [sp, #32]
  413560:	str	x2, [sp, #24]
  413564:	ldr	x0, [sp, #24]
  413568:	str	x0, [sp, #184]
  41356c:	ldr	x0, [sp, #184]
  413570:	cmp	x0, #0x0
  413574:	cset	w0, eq  // eq = none
  413578:	and	w0, w0, #0xff
  41357c:	and	x0, x0, #0xff
  413580:	cmp	x0, #0x0
  413584:	b.eq	4135b0 <parse_proc_cmdline_item+0x60>  // b.none
  413588:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41358c:	add	x1, x0, #0xe03
  413590:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413594:	add	x4, x0, #0x740
  413598:	mov	w3, #0x5da                 	// #1498
  41359c:	mov	x2, x1
  4135a0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4135a4:	add	x1, x0, #0xec8
  4135a8:	mov	w0, #0x0                   	// #0
  4135ac:	bl	405fd0 <log_assert_failed_realm@plt>
  4135b0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4135b4:	add	x1, x0, #0x398
  4135b8:	ldr	x0, [sp, #40]
  4135bc:	bl	405e30 <proc_cmdline_key_streq@plt>
  4135c0:	and	w0, w0, #0xff
  4135c4:	cmp	w0, #0x0
  4135c8:	b.eq	413690 <parse_proc_cmdline_item+0x140>  // b.none
  4135cc:	ldr	x0, [sp, #32]
  4135d0:	cmp	x0, #0x0
  4135d4:	b.eq	4135e4 <parse_proc_cmdline_item+0x94>  // b.none
  4135d8:	ldr	x0, [sp, #32]
  4135dc:	bl	405c40 <parse_boolean@plt>
  4135e0:	b	4135e8 <parse_proc_cmdline_item+0x98>
  4135e4:	mov	w0, #0x1                   	// #1
  4135e8:	str	w0, [sp, #72]
  4135ec:	ldr	w0, [sp, #72]
  4135f0:	cmp	w0, #0x0
  4135f4:	b.ge	413674 <parse_proc_cmdline_item+0x124>  // b.tcont
  4135f8:	mov	w0, #0x4                   	// #4
  4135fc:	str	w0, [sp, #172]
  413600:	str	wzr, [sp, #176]
  413604:	str	wzr, [sp, #180]
  413608:	ldr	w0, [sp, #180]
  41360c:	bl	406c30 <log_get_max_level_realm@plt>
  413610:	mov	w1, w0
  413614:	ldr	w0, [sp, #172]
  413618:	and	w0, w0, #0x7
  41361c:	cmp	w1, w0
  413620:	b.lt	413668 <parse_proc_cmdline_item+0x118>  // b.tstop
  413624:	ldr	w0, [sp, #180]
  413628:	lsl	w1, w0, #10
  41362c:	ldr	w0, [sp, #172]
  413630:	orr	w7, w1, w0
  413634:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413638:	add	x1, x0, #0xe03
  41363c:	ldr	x6, [sp, #32]
  413640:	adrp	x0, 429000 <__func__.11909+0x1280>
  413644:	add	x5, x0, #0x3c0
  413648:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41364c:	add	x4, x0, #0x758
  413650:	mov	w3, #0x5e0                 	// #1504
  413654:	mov	x2, x1
  413658:	ldr	w1, [sp, #176]
  41365c:	mov	w0, w7
  413660:	bl	406590 <log_internal_realm@plt>
  413664:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413668:	ldr	w0, [sp, #176]
  41366c:	cmp	w0, #0x0
  413670:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413674:	ldr	w0, [sp, #72]
  413678:	cmp	w0, #0x0
  41367c:	cset	w0, ne  // ne = any
  413680:	and	w1, w0, #0xff
  413684:	ldr	x0, [sp, #184]
  413688:	strb	w1, [x0, #459]
  41368c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413690:	adrp	x0, 429000 <__func__.11909+0x1280>
  413694:	add	x1, x0, #0x400
  413698:	ldr	x0, [sp, #40]
  41369c:	bl	405e30 <proc_cmdline_key_streq@plt>
  4136a0:	and	w0, w0, #0xff
  4136a4:	cmp	w0, #0x0
  4136a8:	b.eq	413770 <parse_proc_cmdline_item+0x220>  // b.none
  4136ac:	ldr	x0, [sp, #32]
  4136b0:	cmp	x0, #0x0
  4136b4:	b.eq	4136c4 <parse_proc_cmdline_item+0x174>  // b.none
  4136b8:	ldr	x0, [sp, #32]
  4136bc:	bl	405c40 <parse_boolean@plt>
  4136c0:	b	4136c8 <parse_proc_cmdline_item+0x178>
  4136c4:	mov	w0, #0x1                   	// #1
  4136c8:	str	w0, [sp, #72]
  4136cc:	ldr	w0, [sp, #72]
  4136d0:	cmp	w0, #0x0
  4136d4:	b.ge	413754 <parse_proc_cmdline_item+0x204>  // b.tcont
  4136d8:	mov	w0, #0x4                   	// #4
  4136dc:	str	w0, [sp, #160]
  4136e0:	str	wzr, [sp, #164]
  4136e4:	str	wzr, [sp, #168]
  4136e8:	ldr	w0, [sp, #168]
  4136ec:	bl	406c30 <log_get_max_level_realm@plt>
  4136f0:	mov	w1, w0
  4136f4:	ldr	w0, [sp, #160]
  4136f8:	and	w0, w0, #0x7
  4136fc:	cmp	w1, w0
  413700:	b.lt	413748 <parse_proc_cmdline_item+0x1f8>  // b.tstop
  413704:	ldr	w0, [sp, #168]
  413708:	lsl	w1, w0, #10
  41370c:	ldr	w0, [sp, #160]
  413710:	orr	w7, w1, w0
  413714:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413718:	add	x1, x0, #0xe03
  41371c:	ldr	x6, [sp, #32]
  413720:	adrp	x0, 429000 <__func__.11909+0x1280>
  413724:	add	x5, x0, #0x428
  413728:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41372c:	add	x4, x0, #0x758
  413730:	mov	w3, #0x5e8                 	// #1512
  413734:	mov	x2, x1
  413738:	ldr	w1, [sp, #164]
  41373c:	mov	w0, w7
  413740:	bl	406590 <log_internal_realm@plt>
  413744:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413748:	ldr	w0, [sp, #164]
  41374c:	cmp	w0, #0x0
  413750:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413754:	ldr	w0, [sp, #72]
  413758:	cmp	w0, #0x0
  41375c:	cset	w0, ne  // ne = any
  413760:	and	w1, w0, #0xff
  413764:	ldr	x0, [sp, #184]
  413768:	strb	w1, [x0, #458]
  41376c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413770:	adrp	x0, 429000 <__func__.11909+0x1280>
  413774:	add	x1, x0, #0x460
  413778:	ldr	x0, [sp, #40]
  41377c:	bl	405e30 <proc_cmdline_key_streq@plt>
  413780:	and	w0, w0, #0xff
  413784:	cmp	w0, #0x0
  413788:	b.eq	413850 <parse_proc_cmdline_item+0x300>  // b.none
  41378c:	ldr	x0, [sp, #32]
  413790:	cmp	x0, #0x0
  413794:	b.eq	4137a4 <parse_proc_cmdline_item+0x254>  // b.none
  413798:	ldr	x0, [sp, #32]
  41379c:	bl	405c40 <parse_boolean@plt>
  4137a0:	b	4137a8 <parse_proc_cmdline_item+0x258>
  4137a4:	mov	w0, #0x1                   	// #1
  4137a8:	str	w0, [sp, #72]
  4137ac:	ldr	w0, [sp, #72]
  4137b0:	cmp	w0, #0x0
  4137b4:	b.ge	413834 <parse_proc_cmdline_item+0x2e4>  // b.tcont
  4137b8:	mov	w0, #0x4                   	// #4
  4137bc:	str	w0, [sp, #148]
  4137c0:	str	wzr, [sp, #152]
  4137c4:	str	wzr, [sp, #156]
  4137c8:	ldr	w0, [sp, #156]
  4137cc:	bl	406c30 <log_get_max_level_realm@plt>
  4137d0:	mov	w1, w0
  4137d4:	ldr	w0, [sp, #148]
  4137d8:	and	w0, w0, #0x7
  4137dc:	cmp	w1, w0
  4137e0:	b.lt	413828 <parse_proc_cmdline_item+0x2d8>  // b.tstop
  4137e4:	ldr	w0, [sp, #156]
  4137e8:	lsl	w1, w0, #10
  4137ec:	ldr	w0, [sp, #148]
  4137f0:	orr	w7, w1, w0
  4137f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4137f8:	add	x1, x0, #0xe03
  4137fc:	ldr	x6, [sp, #32]
  413800:	adrp	x0, 429000 <__func__.11909+0x1280>
  413804:	add	x5, x0, #0x488
  413808:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41380c:	add	x4, x0, #0x758
  413810:	mov	w3, #0x5f0                 	// #1520
  413814:	mov	x2, x1
  413818:	ldr	w1, [sp, #152]
  41381c:	mov	w0, w7
  413820:	bl	406590 <log_internal_realm@plt>
  413824:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413828:	ldr	w0, [sp, #152]
  41382c:	cmp	w0, #0x0
  413830:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413834:	ldr	w0, [sp, #72]
  413838:	cmp	w0, #0x0
  41383c:	cset	w0, ne  // ne = any
  413840:	and	w1, w0, #0xff
  413844:	ldr	x0, [sp, #184]
  413848:	strb	w1, [x0, #460]
  41384c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413850:	adrp	x0, 429000 <__func__.11909+0x1280>
  413854:	add	x1, x0, #0x4c8
  413858:	ldr	x0, [sp, #40]
  41385c:	bl	405e30 <proc_cmdline_key_streq@plt>
  413860:	and	w0, w0, #0xff
  413864:	cmp	w0, #0x0
  413868:	b.eq	413930 <parse_proc_cmdline_item+0x3e0>  // b.none
  41386c:	ldr	x0, [sp, #32]
  413870:	cmp	x0, #0x0
  413874:	b.eq	413884 <parse_proc_cmdline_item+0x334>  // b.none
  413878:	ldr	x0, [sp, #32]
  41387c:	bl	405c40 <parse_boolean@plt>
  413880:	b	413888 <parse_proc_cmdline_item+0x338>
  413884:	mov	w0, #0x1                   	// #1
  413888:	str	w0, [sp, #72]
  41388c:	ldr	w0, [sp, #72]
  413890:	cmp	w0, #0x0
  413894:	b.ge	413914 <parse_proc_cmdline_item+0x3c4>  // b.tcont
  413898:	mov	w0, #0x4                   	// #4
  41389c:	str	w0, [sp, #136]
  4138a0:	str	wzr, [sp, #140]
  4138a4:	str	wzr, [sp, #144]
  4138a8:	ldr	w0, [sp, #144]
  4138ac:	bl	406c30 <log_get_max_level_realm@plt>
  4138b0:	mov	w1, w0
  4138b4:	ldr	w0, [sp, #136]
  4138b8:	and	w0, w0, #0x7
  4138bc:	cmp	w1, w0
  4138c0:	b.lt	413908 <parse_proc_cmdline_item+0x3b8>  // b.tstop
  4138c4:	ldr	w0, [sp, #144]
  4138c8:	lsl	w1, w0, #10
  4138cc:	ldr	w0, [sp, #136]
  4138d0:	orr	w7, w1, w0
  4138d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4138d8:	add	x1, x0, #0xe03
  4138dc:	ldr	x6, [sp, #32]
  4138e0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4138e4:	add	x5, x0, #0x4f0
  4138e8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4138ec:	add	x4, x0, #0x758
  4138f0:	mov	w3, #0x5f8                 	// #1528
  4138f4:	mov	x2, x1
  4138f8:	ldr	w1, [sp, #140]
  4138fc:	mov	w0, w7
  413900:	bl	406590 <log_internal_realm@plt>
  413904:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413908:	ldr	w0, [sp, #140]
  41390c:	cmp	w0, #0x0
  413910:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413914:	ldr	w0, [sp, #72]
  413918:	cmp	w0, #0x0
  41391c:	cset	w0, ne  // ne = any
  413920:	and	w1, w0, #0xff
  413924:	ldr	x0, [sp, #184]
  413928:	strb	w1, [x0, #461]
  41392c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413930:	adrp	x0, 429000 <__func__.11909+0x1280>
  413934:	add	x1, x0, #0x528
  413938:	ldr	x0, [sp, #40]
  41393c:	bl	405e30 <proc_cmdline_key_streq@plt>
  413940:	and	w0, w0, #0xff
  413944:	cmp	w0, #0x0
  413948:	b.eq	413a10 <parse_proc_cmdline_item+0x4c0>  // b.none
  41394c:	ldr	x1, [sp, #32]
  413950:	ldr	x0, [sp, #40]
  413954:	bl	409620 <proc_cmdline_value_missing>
  413958:	and	w0, w0, #0xff
  41395c:	cmp	w0, #0x0
  413960:	b.eq	41396c <parse_proc_cmdline_item+0x41c>  // b.none
  413964:	mov	w0, #0x0                   	// #0
  413968:	b	413e24 <parse_proc_cmdline_item+0x8d4>
  41396c:	ldr	x0, [sp, #32]
  413970:	bl	4064d0 <log_level_from_string@plt>
  413974:	str	w0, [sp, #72]
  413978:	ldr	w0, [sp, #72]
  41397c:	cmp	w0, #0x0
  413980:	b.ge	413a00 <parse_proc_cmdline_item+0x4b0>  // b.tcont
  413984:	mov	w0, #0x4                   	// #4
  413988:	str	w0, [sp, #124]
  41398c:	str	wzr, [sp, #128]
  413990:	str	wzr, [sp, #132]
  413994:	ldr	w0, [sp, #132]
  413998:	bl	406c30 <log_get_max_level_realm@plt>
  41399c:	mov	w1, w0
  4139a0:	ldr	w0, [sp, #124]
  4139a4:	and	w0, w0, #0x7
  4139a8:	cmp	w1, w0
  4139ac:	b.lt	4139f4 <parse_proc_cmdline_item+0x4a4>  // b.tstop
  4139b0:	ldr	w0, [sp, #132]
  4139b4:	lsl	w1, w0, #10
  4139b8:	ldr	w0, [sp, #124]
  4139bc:	orr	w7, w1, w0
  4139c0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4139c4:	add	x1, x0, #0xe03
  4139c8:	ldr	x6, [sp, #32]
  4139cc:	adrp	x0, 429000 <__func__.11909+0x1280>
  4139d0:	add	x5, x0, #0x550
  4139d4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4139d8:	add	x4, x0, #0x758
  4139dc:	mov	w3, #0x603                 	// #1539
  4139e0:	mov	x2, x1
  4139e4:	ldr	w1, [sp, #128]
  4139e8:	mov	w0, w7
  4139ec:	bl	406590 <log_internal_realm@plt>
  4139f0:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  4139f4:	ldr	w0, [sp, #128]
  4139f8:	cmp	w0, #0x0
  4139fc:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413a00:	ldr	x0, [sp, #184]
  413a04:	ldr	w1, [sp, #72]
  413a08:	str	w1, [x0, #548]
  413a0c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413a10:	adrp	x0, 429000 <__func__.11909+0x1280>
  413a14:	add	x1, x0, #0x588
  413a18:	ldr	x0, [sp, #40]
  413a1c:	bl	405e30 <proc_cmdline_key_streq@plt>
  413a20:	and	w0, w0, #0xff
  413a24:	cmp	w0, #0x0
  413a28:	b.eq	413af0 <parse_proc_cmdline_item+0x5a0>  // b.none
  413a2c:	ldr	x1, [sp, #32]
  413a30:	ldr	x0, [sp, #40]
  413a34:	bl	409620 <proc_cmdline_value_missing>
  413a38:	and	w0, w0, #0xff
  413a3c:	cmp	w0, #0x0
  413a40:	b.eq	413a4c <parse_proc_cmdline_item+0x4fc>  // b.none
  413a44:	mov	w0, #0x0                   	// #0
  413a48:	b	413e24 <parse_proc_cmdline_item+0x8d4>
  413a4c:	ldr	x0, [sp, #32]
  413a50:	bl	4064d0 <log_level_from_string@plt>
  413a54:	str	w0, [sp, #72]
  413a58:	ldr	w0, [sp, #72]
  413a5c:	cmp	w0, #0x0
  413a60:	b.ge	413ae0 <parse_proc_cmdline_item+0x590>  // b.tcont
  413a64:	mov	w0, #0x4                   	// #4
  413a68:	str	w0, [sp, #112]
  413a6c:	str	wzr, [sp, #116]
  413a70:	str	wzr, [sp, #120]
  413a74:	ldr	w0, [sp, #120]
  413a78:	bl	406c30 <log_get_max_level_realm@plt>
  413a7c:	mov	w1, w0
  413a80:	ldr	w0, [sp, #112]
  413a84:	and	w0, w0, #0x7
  413a88:	cmp	w1, w0
  413a8c:	b.lt	413ad4 <parse_proc_cmdline_item+0x584>  // b.tstop
  413a90:	ldr	w0, [sp, #120]
  413a94:	lsl	w1, w0, #10
  413a98:	ldr	w0, [sp, #112]
  413a9c:	orr	w7, w1, w0
  413aa0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413aa4:	add	x1, x0, #0xe03
  413aa8:	ldr	x6, [sp, #32]
  413aac:	adrp	x0, 429000 <__func__.11909+0x1280>
  413ab0:	add	x5, x0, #0x5b0
  413ab4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413ab8:	add	x4, x0, #0x758
  413abc:	mov	w3, #0x60e                 	// #1550
  413ac0:	mov	x2, x1
  413ac4:	ldr	w1, [sp, #116]
  413ac8:	mov	w0, w7
  413acc:	bl	406590 <log_internal_realm@plt>
  413ad0:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413ad4:	ldr	w0, [sp, #116]
  413ad8:	cmp	w0, #0x0
  413adc:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413ae0:	ldr	x0, [sp, #184]
  413ae4:	ldr	w1, [sp, #72]
  413ae8:	str	w1, [x0, #536]
  413aec:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413af0:	adrp	x0, 429000 <__func__.11909+0x1280>
  413af4:	add	x1, x0, #0x5e8
  413af8:	ldr	x0, [sp, #40]
  413afc:	bl	405e30 <proc_cmdline_key_streq@plt>
  413b00:	and	w0, w0, #0xff
  413b04:	cmp	w0, #0x0
  413b08:	b.eq	413bd0 <parse_proc_cmdline_item+0x680>  // b.none
  413b0c:	ldr	x1, [sp, #32]
  413b10:	ldr	x0, [sp, #40]
  413b14:	bl	409620 <proc_cmdline_value_missing>
  413b18:	and	w0, w0, #0xff
  413b1c:	cmp	w0, #0x0
  413b20:	b.eq	413b2c <parse_proc_cmdline_item+0x5dc>  // b.none
  413b24:	mov	w0, #0x0                   	// #0
  413b28:	b	413e24 <parse_proc_cmdline_item+0x8d4>
  413b2c:	ldr	x0, [sp, #32]
  413b30:	bl	4064d0 <log_level_from_string@plt>
  413b34:	str	w0, [sp, #72]
  413b38:	ldr	w0, [sp, #72]
  413b3c:	cmp	w0, #0x0
  413b40:	b.ge	413bc0 <parse_proc_cmdline_item+0x670>  // b.tcont
  413b44:	mov	w0, #0x4                   	// #4
  413b48:	str	w0, [sp, #100]
  413b4c:	str	wzr, [sp, #104]
  413b50:	str	wzr, [sp, #108]
  413b54:	ldr	w0, [sp, #108]
  413b58:	bl	406c30 <log_get_max_level_realm@plt>
  413b5c:	mov	w1, w0
  413b60:	ldr	w0, [sp, #100]
  413b64:	and	w0, w0, #0x7
  413b68:	cmp	w1, w0
  413b6c:	b.lt	413bb4 <parse_proc_cmdline_item+0x664>  // b.tstop
  413b70:	ldr	w0, [sp, #108]
  413b74:	lsl	w1, w0, #10
  413b78:	ldr	w0, [sp, #100]
  413b7c:	orr	w7, w1, w0
  413b80:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413b84:	add	x1, x0, #0xe03
  413b88:	ldr	x6, [sp, #32]
  413b8c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413b90:	add	x5, x0, #0x610
  413b94:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413b98:	add	x4, x0, #0x758
  413b9c:	mov	w3, #0x619                 	// #1561
  413ba0:	mov	x2, x1
  413ba4:	ldr	w1, [sp, #104]
  413ba8:	mov	w0, w7
  413bac:	bl	406590 <log_internal_realm@plt>
  413bb0:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413bb4:	ldr	w0, [sp, #104]
  413bb8:	cmp	w0, #0x0
  413bbc:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413bc0:	ldr	x0, [sp, #184]
  413bc4:	ldr	w1, [sp, #72]
  413bc8:	str	w1, [x0, #540]
  413bcc:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413bd0:	adrp	x0, 429000 <__func__.11909+0x1280>
  413bd4:	add	x1, x0, #0x648
  413bd8:	ldr	x0, [sp, #40]
  413bdc:	bl	405e30 <proc_cmdline_key_streq@plt>
  413be0:	and	w0, w0, #0xff
  413be4:	cmp	w0, #0x0
  413be8:	b.eq	413cb0 <parse_proc_cmdline_item+0x760>  // b.none
  413bec:	ldr	x1, [sp, #32]
  413bf0:	ldr	x0, [sp, #40]
  413bf4:	bl	409620 <proc_cmdline_value_missing>
  413bf8:	and	w0, w0, #0xff
  413bfc:	cmp	w0, #0x0
  413c00:	b.eq	413c0c <parse_proc_cmdline_item+0x6bc>  // b.none
  413c04:	mov	w0, #0x0                   	// #0
  413c08:	b	413e24 <parse_proc_cmdline_item+0x8d4>
  413c0c:	ldr	x0, [sp, #32]
  413c10:	bl	4064d0 <log_level_from_string@plt>
  413c14:	str	w0, [sp, #72]
  413c18:	ldr	w0, [sp, #72]
  413c1c:	cmp	w0, #0x0
  413c20:	b.ge	413ca0 <parse_proc_cmdline_item+0x750>  // b.tcont
  413c24:	mov	w0, #0x4                   	// #4
  413c28:	str	w0, [sp, #88]
  413c2c:	str	wzr, [sp, #92]
  413c30:	str	wzr, [sp, #96]
  413c34:	ldr	w0, [sp, #96]
  413c38:	bl	406c30 <log_get_max_level_realm@plt>
  413c3c:	mov	w1, w0
  413c40:	ldr	w0, [sp, #88]
  413c44:	and	w0, w0, #0x7
  413c48:	cmp	w1, w0
  413c4c:	b.lt	413c94 <parse_proc_cmdline_item+0x744>  // b.tstop
  413c50:	ldr	w0, [sp, #96]
  413c54:	lsl	w1, w0, #10
  413c58:	ldr	w0, [sp, #88]
  413c5c:	orr	w7, w1, w0
  413c60:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413c64:	add	x1, x0, #0xe03
  413c68:	ldr	x6, [sp, #32]
  413c6c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413c70:	add	x5, x0, #0x668
  413c74:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413c78:	add	x4, x0, #0x758
  413c7c:	mov	w3, #0x624                 	// #1572
  413c80:	mov	x2, x1
  413c84:	ldr	w1, [sp, #92]
  413c88:	mov	w0, w7
  413c8c:	bl	406590 <log_internal_realm@plt>
  413c90:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413c94:	ldr	w0, [sp, #92]
  413c98:	cmp	w0, #0x0
  413c9c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413ca0:	ldr	x0, [sp, #184]
  413ca4:	ldr	w1, [sp, #72]
  413ca8:	str	w1, [x0, #544]
  413cac:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413cb0:	adrp	x0, 429000 <__func__.11909+0x1280>
  413cb4:	add	x1, x0, #0x6a0
  413cb8:	ldr	x0, [sp, #40]
  413cbc:	bl	405e30 <proc_cmdline_key_streq@plt>
  413cc0:	and	w0, w0, #0xff
  413cc4:	cmp	w0, #0x0
  413cc8:	b.eq	413d90 <parse_proc_cmdline_item+0x840>  // b.none
  413ccc:	ldr	x1, [sp, #32]
  413cd0:	ldr	x0, [sp, #40]
  413cd4:	bl	409620 <proc_cmdline_value_missing>
  413cd8:	and	w0, w0, #0xff
  413cdc:	cmp	w0, #0x0
  413ce0:	b.eq	413cec <parse_proc_cmdline_item+0x79c>  // b.none
  413ce4:	mov	w0, #0x0                   	// #0
  413ce8:	b	413e24 <parse_proc_cmdline_item+0x8d4>
  413cec:	ldr	x0, [sp, #32]
  413cf0:	bl	4064d0 <log_level_from_string@plt>
  413cf4:	str	w0, [sp, #72]
  413cf8:	ldr	w0, [sp, #72]
  413cfc:	cmp	w0, #0x0
  413d00:	b.ge	413d80 <parse_proc_cmdline_item+0x830>  // b.tcont
  413d04:	mov	w0, #0x4                   	// #4
  413d08:	str	w0, [sp, #76]
  413d0c:	str	wzr, [sp, #80]
  413d10:	str	wzr, [sp, #84]
  413d14:	ldr	w0, [sp, #84]
  413d18:	bl	406c30 <log_get_max_level_realm@plt>
  413d1c:	mov	w1, w0
  413d20:	ldr	w0, [sp, #76]
  413d24:	and	w0, w0, #0x7
  413d28:	cmp	w1, w0
  413d2c:	b.lt	413d74 <parse_proc_cmdline_item+0x824>  // b.tstop
  413d30:	ldr	w0, [sp, #84]
  413d34:	lsl	w1, w0, #10
  413d38:	ldr	w0, [sp, #76]
  413d3c:	orr	w7, w1, w0
  413d40:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413d44:	add	x1, x0, #0xe03
  413d48:	ldr	x6, [sp, #32]
  413d4c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413d50:	add	x5, x0, #0x6c0
  413d54:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413d58:	add	x4, x0, #0x758
  413d5c:	mov	w3, #0x62f                 	// #1583
  413d60:	mov	x2, x1
  413d64:	ldr	w1, [sp, #80]
  413d68:	mov	w0, w7
  413d6c:	bl	406590 <log_internal_realm@plt>
  413d70:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413d74:	ldr	w0, [sp, #80]
  413d78:	cmp	w0, #0x0
  413d7c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413d80:	ldr	x0, [sp, #184]
  413d84:	ldr	w1, [sp, #72]
  413d88:	str	w1, [x0, #552]
  413d8c:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413d90:	adrp	x0, 429000 <__func__.11909+0x1280>
  413d94:	add	x1, x0, #0x6f8
  413d98:	ldr	x0, [sp, #40]
  413d9c:	bl	4093fc <startswith>
  413da0:	cmp	x0, #0x0
  413da4:	b.eq	413e20 <parse_proc_cmdline_item+0x8d0>  // b.none
  413da8:	mov	w0, #0x4                   	// #4
  413dac:	str	w0, [sp, #60]
  413db0:	str	wzr, [sp, #64]
  413db4:	str	wzr, [sp, #68]
  413db8:	ldr	w0, [sp, #68]
  413dbc:	bl	406c30 <log_get_max_level_realm@plt>
  413dc0:	mov	w1, w0
  413dc4:	ldr	w0, [sp, #60]
  413dc8:	and	w0, w0, #0x7
  413dcc:	cmp	w1, w0
  413dd0:	b.lt	413e18 <parse_proc_cmdline_item+0x8c8>  // b.tstop
  413dd4:	ldr	w0, [sp, #68]
  413dd8:	lsl	w1, w0, #10
  413ddc:	ldr	w0, [sp, #60]
  413de0:	orr	w7, w1, w0
  413de4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413de8:	add	x1, x0, #0xe03
  413dec:	ldr	x6, [sp, #40]
  413df0:	adrp	x0, 429000 <__func__.11909+0x1280>
  413df4:	add	x5, x0, #0x710
  413df8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413dfc:	add	x4, x0, #0x758
  413e00:	mov	w3, #0x634                 	// #1588
  413e04:	mov	x2, x1
  413e08:	ldr	w1, [sp, #64]
  413e0c:	mov	w0, w7
  413e10:	bl	406590 <log_internal_realm@plt>
  413e14:	b	413e20 <parse_proc_cmdline_item+0x8d0>
  413e18:	ldr	w0, [sp, #64]
  413e1c:	cmp	w0, #0x0
  413e20:	mov	w0, #0x0                   	// #0
  413e24:	ldp	x29, x30, [sp], #192
  413e28:	ret

0000000000413e2c <server_parse_config_file>:
  413e2c:	stp	x29, x30, [sp, #-32]!
  413e30:	mov	x29, sp
  413e34:	str	x0, [sp, #24]
  413e38:	ldr	x0, [sp, #24]
  413e3c:	cmp	x0, #0x0
  413e40:	cset	w0, eq  // eq = none
  413e44:	and	w0, w0, #0xff
  413e48:	and	x0, x0, #0xff
  413e4c:	cmp	x0, #0x0
  413e50:	b.eq	413e7c <server_parse_config_file+0x50>  // b.none
  413e54:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413e58:	add	x1, x0, #0xe03
  413e5c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413e60:	add	x4, x0, #0x790
  413e64:	mov	w3, #0x63b                 	// #1595
  413e68:	mov	x2, x1
  413e6c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413e70:	add	x1, x0, #0xec8
  413e74:	mov	w0, #0x0                   	// #0
  413e78:	bl	405fd0 <log_assert_failed_realm@plt>
  413e7c:	ldr	x6, [sp, #24]
  413e80:	mov	w5, #0x4                   	// #4
  413e84:	adrp	x0, 441000 <wordlist.9471+0x208>
  413e88:	ldr	x4, [x0, #4080]
  413e8c:	adrp	x0, 441000 <wordlist.9471+0x208>
  413e90:	ldr	x3, [x0, #4072]
  413e94:	adrp	x0, 429000 <__func__.11909+0x1280>
  413e98:	add	x2, x0, #0x750
  413e9c:	adrp	x0, 429000 <__func__.11909+0x1280>
  413ea0:	add	x1, x0, #0x760
  413ea4:	adrp	x0, 429000 <__func__.11909+0x1280>
  413ea8:	add	x0, x0, #0x800
  413eac:	bl	4069f0 <config_parse_many_nulstr@plt>
  413eb0:	ldp	x29, x30, [sp], #32
  413eb4:	ret

0000000000413eb8 <server_dispatch_sync>:
  413eb8:	stp	x29, x30, [sp, #-64]!
  413ebc:	mov	x29, sp
  413ec0:	str	x0, [sp, #40]
  413ec4:	str	x1, [sp, #32]
  413ec8:	str	x2, [sp, #24]
  413ecc:	ldr	x0, [sp, #24]
  413ed0:	str	x0, [sp, #56]
  413ed4:	ldr	x0, [sp, #56]
  413ed8:	cmp	x0, #0x0
  413edc:	cset	w0, eq  // eq = none
  413ee0:	and	w0, w0, #0xff
  413ee4:	and	x0, x0, #0xff
  413ee8:	cmp	x0, #0x0
  413eec:	b.eq	413f18 <server_dispatch_sync+0x60>  // b.none
  413ef0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413ef4:	add	x1, x0, #0xe03
  413ef8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413efc:	add	x4, x0, #0x7b0
  413f00:	mov	w3, #0x647                 	// #1607
  413f04:	mov	x2, x1
  413f08:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413f0c:	add	x1, x0, #0xec8
  413f10:	mov	w0, #0x0                   	// #0
  413f14:	bl	405fd0 <log_assert_failed_realm@plt>
  413f18:	ldr	x0, [sp, #56]
  413f1c:	bl	40c2c4 <server_sync>
  413f20:	mov	w0, #0x0                   	// #0
  413f24:	ldp	x29, x30, [sp], #64
  413f28:	ret

0000000000413f2c <server_schedule_sync>:
  413f2c:	stp	x29, x30, [sp, #-64]!
  413f30:	mov	x29, sp
  413f34:	str	x0, [sp, #24]
  413f38:	str	w1, [sp, #20]
  413f3c:	adrp	x0, 441000 <wordlist.9471+0x208>
  413f40:	ldr	x0, [x0, #4064]
  413f44:	ldr	x1, [x0]
  413f48:	str	x1, [sp, #56]
  413f4c:	mov	x1, #0x0                   	// #0
  413f50:	ldr	x0, [sp, #24]
  413f54:	cmp	x0, #0x0
  413f58:	cset	w0, eq  // eq = none
  413f5c:	and	w0, w0, #0xff
  413f60:	and	x0, x0, #0xff
  413f64:	cmp	x0, #0x0
  413f68:	b.eq	413f94 <server_schedule_sync+0x68>  // b.none
  413f6c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413f70:	add	x1, x0, #0xe03
  413f74:	adrp	x0, 42a000 <__func__.11909+0x2280>
  413f78:	add	x4, x0, #0x7c8
  413f7c:	mov	w3, #0x650                 	// #1616
  413f80:	mov	x2, x1
  413f84:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  413f88:	add	x1, x0, #0xec8
  413f8c:	mov	w0, #0x0                   	// #0
  413f90:	bl	405fd0 <log_assert_failed_realm@plt>
  413f94:	ldr	w0, [sp, #20]
  413f98:	cmp	w0, #0x2
  413f9c:	b.gt	413fb0 <server_schedule_sync+0x84>
  413fa0:	ldr	x0, [sp, #24]
  413fa4:	bl	40c2c4 <server_sync>
  413fa8:	mov	w0, #0x0                   	// #0
  413fac:	b	4140fc <server_schedule_sync+0x1d0>
  413fb0:	ldr	x0, [sp, #24]
  413fb4:	ldrb	w0, [x0, #592]
  413fb8:	and	w0, w0, #0x8
  413fbc:	and	w0, w0, #0xff
  413fc0:	cmp	w0, #0x0
  413fc4:	b.eq	413fd0 <server_schedule_sync+0xa4>  // b.none
  413fc8:	mov	w0, #0x0                   	// #0
  413fcc:	b	4140fc <server_schedule_sync+0x1d0>
  413fd0:	ldr	x0, [sp, #24]
  413fd4:	ldr	x0, [x0, #208]
  413fd8:	cmp	x0, #0x0
  413fdc:	b.eq	4140f8 <server_schedule_sync+0x1cc>  // b.none
  413fe0:	ldr	x0, [sp, #24]
  413fe4:	ldr	x0, [x0, #32]
  413fe8:	add	x1, sp, #0x30
  413fec:	mov	x2, x1
  413ff0:	mov	w1, #0x1                   	// #1
  413ff4:	bl	406040 <sd_event_now@plt>
  413ff8:	str	w0, [sp, #44]
  413ffc:	ldr	w0, [sp, #44]
  414000:	cmp	w0, #0x0
  414004:	b.ge	414010 <server_schedule_sync+0xe4>  // b.tcont
  414008:	ldr	w0, [sp, #44]
  41400c:	b	4140fc <server_schedule_sync+0x1d0>
  414010:	ldr	x0, [sp, #24]
  414014:	ldr	x1, [x0, #208]
  414018:	ldr	x0, [sp, #48]
  41401c:	add	x0, x1, x0
  414020:	str	x0, [sp, #48]
  414024:	ldr	x0, [sp, #24]
  414028:	ldr	x0, [x0, #80]
  41402c:	cmp	x0, #0x0
  414030:	b.ne	414098 <server_schedule_sync+0x16c>  // b.any
  414034:	ldr	x0, [sp, #24]
  414038:	ldr	x7, [x0, #32]
  41403c:	ldr	x0, [sp, #24]
  414040:	add	x1, x0, #0x50
  414044:	ldr	x2, [sp, #48]
  414048:	ldr	x6, [sp, #24]
  41404c:	adrp	x0, 413000 <dispatch_sigusr2+0xb8>
  414050:	add	x5, x0, #0xeb8
  414054:	mov	x4, #0x0                   	// #0
  414058:	mov	x3, x2
  41405c:	mov	w2, #0x1                   	// #1
  414060:	mov	x0, x7
  414064:	bl	405e50 <sd_event_add_time@plt>
  414068:	str	w0, [sp, #44]
  41406c:	ldr	w0, [sp, #44]
  414070:	cmp	w0, #0x0
  414074:	b.ge	414080 <server_schedule_sync+0x154>  // b.tcont
  414078:	ldr	w0, [sp, #44]
  41407c:	b	4140fc <server_schedule_sync+0x1d0>
  414080:	ldr	x0, [sp, #24]
  414084:	ldr	x0, [x0, #80]
  414088:	mov	x1, #0xffffffffffffff9c    	// #-100
  41408c:	bl	406380 <sd_event_source_set_priority@plt>
  414090:	str	w0, [sp, #44]
  414094:	b	4140d4 <server_schedule_sync+0x1a8>
  414098:	ldr	x0, [sp, #24]
  41409c:	ldr	x0, [x0, #80]
  4140a0:	ldr	x1, [sp, #48]
  4140a4:	bl	405b40 <sd_event_source_set_time@plt>
  4140a8:	str	w0, [sp, #44]
  4140ac:	ldr	w0, [sp, #44]
  4140b0:	cmp	w0, #0x0
  4140b4:	b.ge	4140c0 <server_schedule_sync+0x194>  // b.tcont
  4140b8:	ldr	w0, [sp, #44]
  4140bc:	b	4140fc <server_schedule_sync+0x1d0>
  4140c0:	ldr	x0, [sp, #24]
  4140c4:	ldr	x0, [x0, #80]
  4140c8:	mov	w1, #0xffffffff            	// #-1
  4140cc:	bl	406090 <sd_event_source_set_enabled@plt>
  4140d0:	str	w0, [sp, #44]
  4140d4:	ldr	w0, [sp, #44]
  4140d8:	cmp	w0, #0x0
  4140dc:	b.ge	4140e8 <server_schedule_sync+0x1bc>  // b.tcont
  4140e0:	ldr	w0, [sp, #44]
  4140e4:	b	4140fc <server_schedule_sync+0x1d0>
  4140e8:	ldr	x0, [sp, #24]
  4140ec:	ldrb	w1, [x0, #592]
  4140f0:	orr	w1, w1, #0x8
  4140f4:	strb	w1, [x0, #592]
  4140f8:	mov	w0, #0x0                   	// #0
  4140fc:	mov	w1, w0
  414100:	adrp	x0, 441000 <wordlist.9471+0x208>
  414104:	ldr	x0, [x0, #4064]
  414108:	ldr	x2, [sp, #56]
  41410c:	ldr	x0, [x0]
  414110:	eor	x0, x2, x0
  414114:	cmp	x0, #0x0
  414118:	b.eq	414120 <server_schedule_sync+0x1f4>  // b.none
  41411c:	bl	4063e0 <__stack_chk_fail@plt>
  414120:	mov	w0, w1
  414124:	ldp	x29, x30, [sp], #64
  414128:	ret

000000000041412c <dispatch_hostname_change>:
  41412c:	stp	x29, x30, [sp, #-64]!
  414130:	mov	x29, sp
  414134:	str	x0, [sp, #40]
  414138:	str	w1, [sp, #36]
  41413c:	str	w2, [sp, #32]
  414140:	str	x3, [sp, #24]
  414144:	ldr	x0, [sp, #24]
  414148:	str	x0, [sp, #56]
  41414c:	ldr	x0, [sp, #56]
  414150:	cmp	x0, #0x0
  414154:	cset	w0, eq  // eq = none
  414158:	and	w0, w0, #0xff
  41415c:	and	x0, x0, #0xff
  414160:	cmp	x0, #0x0
  414164:	b.eq	414190 <dispatch_hostname_change+0x64>  // b.none
  414168:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41416c:	add	x1, x0, #0xe03
  414170:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414174:	add	x4, x0, #0x7e0
  414178:	mov	w3, #0x682                 	// #1666
  41417c:	mov	x2, x1
  414180:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414184:	add	x1, x0, #0xec8
  414188:	mov	w0, #0x0                   	// #0
  41418c:	bl	405fd0 <log_assert_failed_realm@plt>
  414190:	ldr	x0, [sp, #56]
  414194:	bl	40c9d4 <server_cache_hostname>
  414198:	mov	w0, #0x0                   	// #0
  41419c:	ldp	x29, x30, [sp], #64
  4141a0:	ret

00000000004141a4 <server_open_hostname>:
  4141a4:	stp	x29, x30, [sp, #-96]!
  4141a8:	mov	x29, sp
  4141ac:	str	x0, [sp, #24]
  4141b0:	ldr	x0, [sp, #24]
  4141b4:	cmp	x0, #0x0
  4141b8:	cset	w0, eq  // eq = none
  4141bc:	and	w0, w0, #0xff
  4141c0:	and	x0, x0, #0xff
  4141c4:	cmp	x0, #0x0
  4141c8:	b.eq	4141f4 <server_open_hostname+0x50>  // b.none
  4141cc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4141d0:	add	x1, x0, #0xe03
  4141d4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4141d8:	add	x4, x0, #0x800
  4141dc:	mov	w3, #0x68b                 	// #1675
  4141e0:	mov	x2, x1
  4141e4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4141e8:	add	x1, x0, #0xec8
  4141ec:	mov	w0, #0x0                   	// #0
  4141f0:	bl	405fd0 <log_assert_failed_realm@plt>
  4141f4:	mov	w1, #0x900                 	// #2304
  4141f8:	movk	w1, #0x8, lsl #16
  4141fc:	adrp	x0, 429000 <__func__.11909+0x1280>
  414200:	add	x0, x0, #0x820
  414204:	bl	406ad0 <open64@plt>
  414208:	mov	w1, w0
  41420c:	ldr	x0, [sp, #24]
  414210:	str	w1, [x0, #20]
  414214:	ldr	x0, [sp, #24]
  414218:	ldr	w0, [x0, #20]
  41421c:	cmp	w0, #0x0
  414220:	b.ge	4142b0 <server_open_hostname+0x10c>  // b.tcont
  414224:	mov	w0, #0x3                   	// #3
  414228:	str	w0, [sp, #84]
  41422c:	bl	4062e0 <__errno_location@plt>
  414230:	ldr	w0, [x0]
  414234:	str	w0, [sp, #88]
  414238:	str	wzr, [sp, #92]
  41423c:	ldr	w0, [sp, #92]
  414240:	bl	406c30 <log_get_max_level_realm@plt>
  414244:	mov	w1, w0
  414248:	ldr	w0, [sp, #84]
  41424c:	and	w0, w0, #0x7
  414250:	cmp	w1, w0
  414254:	b.lt	414298 <server_open_hostname+0xf4>  // b.tstop
  414258:	ldr	w0, [sp, #92]
  41425c:	lsl	w1, w0, #10
  414260:	ldr	w0, [sp, #84]
  414264:	orr	w6, w1, w0
  414268:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41426c:	add	x1, x0, #0xe03
  414270:	adrp	x0, 429000 <__func__.11909+0x1280>
  414274:	add	x5, x0, #0x840
  414278:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41427c:	add	x4, x0, #0x818
  414280:	mov	w3, #0x690                 	// #1680
  414284:	mov	x2, x1
  414288:	ldr	w1, [sp, #88]
  41428c:	mov	w0, w6
  414290:	bl	406590 <log_internal_realm@plt>
  414294:	b	4144c8 <server_open_hostname+0x324>
  414298:	ldr	w0, [sp, #88]
  41429c:	cmp	w0, #0x0
  4142a0:	cneg	w0, w0, lt  // lt = tstop
  4142a4:	and	w0, w0, #0xff
  4142a8:	neg	w0, w0
  4142ac:	b	4144c8 <server_open_hostname+0x324>
  4142b0:	ldr	x0, [sp, #24]
  4142b4:	ldr	x6, [x0, #32]
  4142b8:	ldr	x0, [sp, #24]
  4142bc:	add	x1, x0, #0x80
  4142c0:	ldr	x0, [sp, #24]
  4142c4:	ldr	w2, [x0, #20]
  4142c8:	ldr	x5, [sp, #24]
  4142cc:	adrp	x0, 414000 <server_schedule_sync+0xd4>
  4142d0:	add	x4, x0, #0x12c
  4142d4:	mov	w3, #0x0                   	// #0
  4142d8:	mov	x0, x6
  4142dc:	bl	406680 <sd_event_add_io@plt>
  4142e0:	str	w0, [sp, #44]
  4142e4:	ldr	w0, [sp, #44]
  4142e8:	cmp	w0, #0x0
  4142ec:	b.ge	41441c <server_open_hostname+0x278>  // b.tcont
  4142f0:	ldr	w0, [sp, #44]
  4142f4:	cmn	w0, #0x1
  4142f8:	b.ne	414394 <server_open_hostname+0x1f0>  // b.any
  4142fc:	mov	w0, #0x4                   	// #4
  414300:	str	w0, [sp, #72]
  414304:	ldr	w0, [sp, #44]
  414308:	str	w0, [sp, #76]
  41430c:	str	wzr, [sp, #80]
  414310:	ldr	w0, [sp, #80]
  414314:	bl	406c30 <log_get_max_level_realm@plt>
  414318:	mov	w1, w0
  41431c:	ldr	w0, [sp, #72]
  414320:	and	w0, w0, #0x7
  414324:	cmp	w1, w0
  414328:	b.lt	41436c <server_open_hostname+0x1c8>  // b.tstop
  41432c:	ldr	w0, [sp, #80]
  414330:	lsl	w1, w0, #10
  414334:	ldr	w0, [sp, #72]
  414338:	orr	w6, w1, w0
  41433c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414340:	add	x1, x0, #0xe03
  414344:	adrp	x0, 429000 <__func__.11909+0x1280>
  414348:	add	x5, x0, #0x870
  41434c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414350:	add	x4, x0, #0x818
  414354:	mov	w3, #0x697                 	// #1687
  414358:	mov	x2, x1
  41435c:	ldr	w1, [sp, #76]
  414360:	mov	w0, w6
  414364:	bl	406590 <log_internal_realm@plt>
  414368:	b	414374 <server_open_hostname+0x1d0>
  41436c:	ldr	w0, [sp, #76]
  414370:	cmp	w0, #0x0
  414374:	ldr	x0, [sp, #24]
  414378:	ldr	w0, [x0, #20]
  41437c:	bl	405f40 <safe_close@plt>
  414380:	mov	w1, w0
  414384:	ldr	x0, [sp, #24]
  414388:	str	w1, [x0, #20]
  41438c:	mov	w0, #0x0                   	// #0
  414390:	b	4144c8 <server_open_hostname+0x324>
  414394:	mov	w0, #0x3                   	// #3
  414398:	str	w0, [sp, #60]
  41439c:	ldr	w0, [sp, #44]
  4143a0:	str	w0, [sp, #64]
  4143a4:	str	wzr, [sp, #68]
  4143a8:	ldr	w0, [sp, #68]
  4143ac:	bl	406c30 <log_get_max_level_realm@plt>
  4143b0:	mov	w1, w0
  4143b4:	ldr	w0, [sp, #60]
  4143b8:	and	w0, w0, #0x7
  4143bc:	cmp	w1, w0
  4143c0:	b.lt	414404 <server_open_hostname+0x260>  // b.tstop
  4143c4:	ldr	w0, [sp, #68]
  4143c8:	lsl	w1, w0, #10
  4143cc:	ldr	w0, [sp, #60]
  4143d0:	orr	w6, w1, w0
  4143d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4143d8:	add	x1, x0, #0xe03
  4143dc:	adrp	x0, 429000 <__func__.11909+0x1280>
  4143e0:	add	x5, x0, #0x8b0
  4143e4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4143e8:	add	x4, x0, #0x818
  4143ec:	mov	w3, #0x69c                 	// #1692
  4143f0:	mov	x2, x1
  4143f4:	ldr	w1, [sp, #64]
  4143f8:	mov	w0, w6
  4143fc:	bl	406590 <log_internal_realm@plt>
  414400:	b	4144c8 <server_open_hostname+0x324>
  414404:	ldr	w0, [sp, #64]
  414408:	cmp	w0, #0x0
  41440c:	cneg	w0, w0, lt  // lt = tstop
  414410:	and	w0, w0, #0xff
  414414:	neg	w0, w0
  414418:	b	4144c8 <server_open_hostname+0x324>
  41441c:	ldr	x0, [sp, #24]
  414420:	ldr	x0, [x0, #128]
  414424:	mov	x1, #0xffffffffffffff92    	// #-110
  414428:	bl	406380 <sd_event_source_set_priority@plt>
  41442c:	str	w0, [sp, #44]
  414430:	ldr	w0, [sp, #44]
  414434:	cmp	w0, #0x0
  414438:	b.ge	4144c4 <server_open_hostname+0x320>  // b.tcont
  41443c:	mov	w0, #0x3                   	// #3
  414440:	str	w0, [sp, #48]
  414444:	ldr	w0, [sp, #44]
  414448:	str	w0, [sp, #52]
  41444c:	str	wzr, [sp, #56]
  414450:	ldr	w0, [sp, #56]
  414454:	bl	406c30 <log_get_max_level_realm@plt>
  414458:	mov	w1, w0
  41445c:	ldr	w0, [sp, #48]
  414460:	and	w0, w0, #0x7
  414464:	cmp	w1, w0
  414468:	b.lt	4144ac <server_open_hostname+0x308>  // b.tstop
  41446c:	ldr	w0, [sp, #56]
  414470:	lsl	w1, w0, #10
  414474:	ldr	w0, [sp, #48]
  414478:	orr	w6, w1, w0
  41447c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414480:	add	x1, x0, #0xe03
  414484:	adrp	x0, 429000 <__func__.11909+0x1280>
  414488:	add	x5, x0, #0x8e8
  41448c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414490:	add	x4, x0, #0x818
  414494:	mov	w3, #0x6a1                 	// #1697
  414498:	mov	x2, x1
  41449c:	ldr	w1, [sp, #52]
  4144a0:	mov	w0, w6
  4144a4:	bl	406590 <log_internal_realm@plt>
  4144a8:	b	4144c8 <server_open_hostname+0x324>
  4144ac:	ldr	w0, [sp, #52]
  4144b0:	cmp	w0, #0x0
  4144b4:	cneg	w0, w0, lt  // lt = tstop
  4144b8:	and	w0, w0, #0xff
  4144bc:	neg	w0, w0
  4144c0:	b	4144c8 <server_open_hostname+0x324>
  4144c4:	mov	w0, #0x0                   	// #0
  4144c8:	ldp	x29, x30, [sp], #96
  4144cc:	ret

00000000004144d0 <dispatch_notify_event>:
  4144d0:	stp	x29, x30, [sp, #-160]!
  4144d4:	mov	x29, sp
  4144d8:	str	x19, [sp, #16]
  4144dc:	str	x0, [sp, #56]
  4144e0:	str	w1, [sp, #52]
  4144e4:	str	w2, [sp, #48]
  4144e8:	str	x3, [sp, #40]
  4144ec:	ldr	x0, [sp, #40]
  4144f0:	str	x0, [sp, #136]
  4144f4:	ldr	x0, [sp, #136]
  4144f8:	cmp	x0, #0x0
  4144fc:	cset	w0, eq  // eq = none
  414500:	and	w0, w0, #0xff
  414504:	and	x0, x0, #0xff
  414508:	cmp	x0, #0x0
  41450c:	b.eq	414538 <dispatch_notify_event+0x68>  // b.none
  414510:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414514:	add	x1, x0, #0xe03
  414518:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41451c:	add	x4, x0, #0x830
  414520:	mov	w3, #0x6aa                 	// #1706
  414524:	mov	x2, x1
  414528:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41452c:	add	x1, x0, #0xec8
  414530:	mov	w0, #0x0                   	// #0
  414534:	bl	405fd0 <log_assert_failed_realm@plt>
  414538:	ldr	x0, [sp, #136]
  41453c:	ldr	x0, [x0, #136]
  414540:	ldr	x1, [sp, #56]
  414544:	cmp	x1, x0
  414548:	cset	w0, ne  // ne = any
  41454c:	and	w0, w0, #0xff
  414550:	and	x0, x0, #0xff
  414554:	cmp	x0, #0x0
  414558:	b.eq	414584 <dispatch_notify_event+0xb4>  // b.none
  41455c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414560:	add	x1, x0, #0xe03
  414564:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414568:	add	x4, x0, #0x830
  41456c:	mov	w3, #0x6ab                 	// #1707
  414570:	mov	x2, x1
  414574:	adrp	x0, 429000 <__func__.11909+0x1280>
  414578:	add	x1, x0, #0x920
  41457c:	mov	w0, #0x0                   	// #0
  414580:	bl	405fd0 <log_assert_failed_realm@plt>
  414584:	ldr	x0, [sp, #136]
  414588:	ldr	w0, [x0, #24]
  41458c:	ldr	w1, [sp, #52]
  414590:	cmp	w1, w0
  414594:	cset	w0, ne  // ne = any
  414598:	and	w0, w0, #0xff
  41459c:	and	x0, x0, #0xff
  4145a0:	cmp	x0, #0x0
  4145a4:	b.eq	4145d0 <dispatch_notify_event+0x100>  // b.none
  4145a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4145ac:	add	x1, x0, #0xe03
  4145b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4145b4:	add	x4, x0, #0x830
  4145b8:	mov	w3, #0x6ac                 	// #1708
  4145bc:	mov	x2, x1
  4145c0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4145c4:	add	x1, x0, #0x940
  4145c8:	mov	w0, #0x0                   	// #0
  4145cc:	bl	405fd0 <log_assert_failed_realm@plt>
  4145d0:	ldr	x0, [sp, #136]
  4145d4:	ldrb	w0, [x0, #592]
  4145d8:	ubfx	x0, x0, #2, #1
  4145dc:	and	w0, w0, #0xff
  4145e0:	eor	w0, w0, #0x1
  4145e4:	and	w0, w0, #0xff
  4145e8:	cmp	w0, #0x0
  4145ec:	b.eq	414758 <dispatch_notify_event+0x288>  // b.none
  4145f0:	ldr	x0, [sp, #136]
  4145f4:	ldr	w19, [x0, #24]
  4145f8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4145fc:	add	x0, x0, #0x848
  414600:	bl	406af0 <strlen@plt>
  414604:	mov	w3, #0x40                  	// #64
  414608:	mov	x2, x0
  41460c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414610:	add	x1, x0, #0x848
  414614:	mov	w0, w19
  414618:	bl	4065a0 <send@plt>
  41461c:	str	x0, [sp, #152]
  414620:	ldr	x0, [sp, #152]
  414624:	cmp	x0, #0x0
  414628:	b.ge	4146d0 <dispatch_notify_event+0x200>  // b.tcont
  41462c:	bl	4062e0 <__errno_location@plt>
  414630:	ldr	w0, [x0]
  414634:	cmp	w0, #0xb
  414638:	b.ne	414644 <dispatch_notify_event+0x174>  // b.any
  41463c:	mov	w0, #0x0                   	// #0
  414640:	b	4149cc <dispatch_notify_event+0x4fc>
  414644:	mov	w0, #0x3                   	// #3
  414648:	str	w0, [sp, #108]
  41464c:	bl	4062e0 <__errno_location@plt>
  414650:	ldr	w0, [x0]
  414654:	str	w0, [sp, #112]
  414658:	str	wzr, [sp, #116]
  41465c:	ldr	w0, [sp, #116]
  414660:	bl	406c30 <log_get_max_level_realm@plt>
  414664:	mov	w1, w0
  414668:	ldr	w0, [sp, #108]
  41466c:	and	w0, w0, #0x7
  414670:	cmp	w1, w0
  414674:	b.lt	4146b8 <dispatch_notify_event+0x1e8>  // b.tstop
  414678:	ldr	w0, [sp, #116]
  41467c:	lsl	w1, w0, #10
  414680:	ldr	w0, [sp, #108]
  414684:	orr	w6, w1, w0
  414688:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41468c:	add	x1, x0, #0xe03
  414690:	adrp	x0, 429000 <__func__.11909+0x1280>
  414694:	add	x5, x0, #0x958
  414698:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41469c:	add	x4, x0, #0x870
  4146a0:	mov	w3, #0x6bf                 	// #1727
  4146a4:	mov	x2, x1
  4146a8:	ldr	w1, [sp, #112]
  4146ac:	mov	w0, w6
  4146b0:	bl	406590 <log_internal_realm@plt>
  4146b4:	b	4149cc <dispatch_notify_event+0x4fc>
  4146b8:	ldr	w0, [sp, #112]
  4146bc:	cmp	w0, #0x0
  4146c0:	cneg	w0, w0, lt  // lt = tstop
  4146c4:	and	w0, w0, #0xff
  4146c8:	neg	w0, w0
  4146cc:	b	4149cc <dispatch_notify_event+0x4fc>
  4146d0:	ldr	x0, [sp, #136]
  4146d4:	ldrb	w1, [x0, #592]
  4146d8:	orr	w1, w1, #0x4
  4146dc:	strb	w1, [x0, #592]
  4146e0:	mov	w0, #0x7                   	// #7
  4146e4:	str	w0, [sp, #96]
  4146e8:	str	wzr, [sp, #100]
  4146ec:	str	wzr, [sp, #104]
  4146f0:	ldr	w0, [sp, #104]
  4146f4:	bl	406c30 <log_get_max_level_realm@plt>
  4146f8:	mov	w1, w0
  4146fc:	ldr	w0, [sp, #96]
  414700:	and	w0, w0, #0x7
  414704:	cmp	w1, w0
  414708:	b.lt	41474c <dispatch_notify_event+0x27c>  // b.tstop
  41470c:	ldr	w0, [sp, #104]
  414710:	lsl	w1, w0, #10
  414714:	ldr	w0, [sp, #96]
  414718:	orr	w6, w1, w0
  41471c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414720:	add	x1, x0, #0xe03
  414724:	adrp	x0, 429000 <__func__.11909+0x1280>
  414728:	add	x5, x0, #0x988
  41472c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414730:	add	x4, x0, #0x870
  414734:	mov	w3, #0x6c3                 	// #1731
  414738:	mov	x2, x1
  41473c:	ldr	w1, [sp, #100]
  414740:	mov	w0, w6
  414744:	bl	406590 <log_internal_realm@plt>
  414748:	b	4148f4 <dispatch_notify_event+0x424>
  41474c:	ldr	w0, [sp, #100]
  414750:	cmp	w0, #0x0
  414754:	b	4148f4 <dispatch_notify_event+0x424>
  414758:	ldr	x0, [sp, #136]
  41475c:	ldrb	w0, [x0, #592]
  414760:	and	w0, w0, #0x2
  414764:	and	w0, w0, #0xff
  414768:	cmp	w0, #0x0
  41476c:	b.eq	4148d8 <dispatch_notify_event+0x408>  // b.none
  414770:	ldr	x0, [sp, #136]
  414774:	ldr	w19, [x0, #24]
  414778:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41477c:	add	x0, x0, #0x888
  414780:	bl	406af0 <strlen@plt>
  414784:	mov	w3, #0x40                  	// #64
  414788:	mov	x2, x0
  41478c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414790:	add	x1, x0, #0x888
  414794:	mov	w0, w19
  414798:	bl	4065a0 <send@plt>
  41479c:	str	x0, [sp, #144]
  4147a0:	ldr	x0, [sp, #144]
  4147a4:	cmp	x0, #0x0
  4147a8:	b.ge	414850 <dispatch_notify_event+0x380>  // b.tcont
  4147ac:	bl	4062e0 <__errno_location@plt>
  4147b0:	ldr	w0, [x0]
  4147b4:	cmp	w0, #0xb
  4147b8:	b.ne	4147c4 <dispatch_notify_event+0x2f4>  // b.any
  4147bc:	mov	w0, #0x0                   	// #0
  4147c0:	b	4149cc <dispatch_notify_event+0x4fc>
  4147c4:	mov	w0, #0x3                   	// #3
  4147c8:	str	w0, [sp, #84]
  4147cc:	bl	4062e0 <__errno_location@plt>
  4147d0:	ldr	w0, [x0]
  4147d4:	str	w0, [sp, #88]
  4147d8:	str	wzr, [sp, #92]
  4147dc:	ldr	w0, [sp, #92]
  4147e0:	bl	406c30 <log_get_max_level_realm@plt>
  4147e4:	mov	w1, w0
  4147e8:	ldr	w0, [sp, #84]
  4147ec:	and	w0, w0, #0x7
  4147f0:	cmp	w1, w0
  4147f4:	b.lt	414838 <dispatch_notify_event+0x368>  // b.tstop
  4147f8:	ldr	w0, [sp, #92]
  4147fc:	lsl	w1, w0, #10
  414800:	ldr	w0, [sp, #84]
  414804:	orr	w6, w1, w0
  414808:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41480c:	add	x1, x0, #0xe03
  414810:	adrp	x0, 429000 <__func__.11909+0x1280>
  414814:	add	x5, x0, #0x9a8
  414818:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41481c:	add	x4, x0, #0x870
  414820:	mov	w3, #0x6d1                 	// #1745
  414824:	mov	x2, x1
  414828:	ldr	w1, [sp, #88]
  41482c:	mov	w0, w6
  414830:	bl	406590 <log_internal_realm@plt>
  414834:	b	4149cc <dispatch_notify_event+0x4fc>
  414838:	ldr	w0, [sp, #88]
  41483c:	cmp	w0, #0x0
  414840:	cneg	w0, w0, lt  // lt = tstop
  414844:	and	w0, w0, #0xff
  414848:	neg	w0, w0
  41484c:	b	4149cc <dispatch_notify_event+0x4fc>
  414850:	ldr	x0, [sp, #136]
  414854:	ldrb	w1, [x0, #592]
  414858:	and	w1, w1, #0xfffffffd
  41485c:	strb	w1, [x0, #592]
  414860:	mov	w0, #0x7                   	// #7
  414864:	str	w0, [sp, #72]
  414868:	str	wzr, [sp, #76]
  41486c:	str	wzr, [sp, #80]
  414870:	ldr	w0, [sp, #80]
  414874:	bl	406c30 <log_get_max_level_realm@plt>
  414878:	mov	w1, w0
  41487c:	ldr	w0, [sp, #72]
  414880:	and	w0, w0, #0x7
  414884:	cmp	w1, w0
  414888:	b.lt	4148cc <dispatch_notify_event+0x3fc>  // b.tstop
  41488c:	ldr	w0, [sp, #80]
  414890:	lsl	w1, w0, #10
  414894:	ldr	w0, [sp, #72]
  414898:	orr	w6, w1, w0
  41489c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4148a0:	add	x1, x0, #0xe03
  4148a4:	adrp	x0, 429000 <__func__.11909+0x1280>
  4148a8:	add	x5, x0, #0x9e0
  4148ac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4148b0:	add	x4, x0, #0x870
  4148b4:	mov	w3, #0x6d5                 	// #1749
  4148b8:	mov	x2, x1
  4148bc:	ldr	w1, [sp, #76]
  4148c0:	mov	w0, w6
  4148c4:	bl	406590 <log_internal_realm@plt>
  4148c8:	b	4148f4 <dispatch_notify_event+0x424>
  4148cc:	ldr	w0, [sp, #76]
  4148d0:	cmp	w0, #0x0
  4148d4:	b	4148f4 <dispatch_notify_event+0x424>
  4148d8:	ldr	x0, [sp, #136]
  4148dc:	ldr	x0, [x0, #512]
  4148e0:	cmp	x0, #0x0
  4148e4:	b.eq	4148f4 <dispatch_notify_event+0x424>  // b.none
  4148e8:	ldr	x0, [sp, #136]
  4148ec:	ldr	x0, [x0, #512]
  4148f0:	bl	41b70c <stdout_stream_send_notify>
  4148f4:	ldr	x0, [sp, #136]
  4148f8:	ldrb	w0, [x0, #592]
  4148fc:	and	w0, w0, #0x2
  414900:	and	w0, w0, #0xff
  414904:	cmp	w0, #0x0
  414908:	b.ne	41491c <dispatch_notify_event+0x44c>  // b.any
  41490c:	ldr	x0, [sp, #136]
  414910:	ldr	x0, [x0, #512]
  414914:	cmp	x0, #0x0
  414918:	b.eq	414924 <dispatch_notify_event+0x454>  // b.none
  41491c:	mov	w0, #0x0                   	// #0
  414920:	b	4149cc <dispatch_notify_event+0x4fc>
  414924:	mov	w1, #0x0                   	// #0
  414928:	ldr	x0, [sp, #56]
  41492c:	bl	406090 <sd_event_source_set_enabled@plt>
  414930:	str	w0, [sp, #120]
  414934:	ldr	w0, [sp, #120]
  414938:	cmp	w0, #0x0
  41493c:	b.ge	4149c8 <dispatch_notify_event+0x4f8>  // b.tcont
  414940:	mov	w0, #0x3                   	// #3
  414944:	str	w0, [sp, #124]
  414948:	ldr	w0, [sp, #120]
  41494c:	str	w0, [sp, #128]
  414950:	str	wzr, [sp, #132]
  414954:	ldr	w0, [sp, #132]
  414958:	bl	406c30 <log_get_max_level_realm@plt>
  41495c:	mov	w1, w0
  414960:	ldr	w0, [sp, #124]
  414964:	and	w0, w0, #0x7
  414968:	cmp	w1, w0
  41496c:	b.lt	4149b0 <dispatch_notify_event+0x4e0>  // b.tstop
  414970:	ldr	w0, [sp, #132]
  414974:	lsl	w1, w0, #10
  414978:	ldr	w0, [sp, #124]
  41497c:	orr	w6, w1, w0
  414980:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414984:	add	x1, x0, #0xe03
  414988:	adrp	x0, 429000 <__func__.11909+0x1280>
  41498c:	add	x5, x0, #0xa00
  414990:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414994:	add	x4, x0, #0x870
  414998:	mov	w3, #0x6e2                 	// #1762
  41499c:	mov	x2, x1
  4149a0:	ldr	w1, [sp, #128]
  4149a4:	mov	w0, w6
  4149a8:	bl	406590 <log_internal_realm@plt>
  4149ac:	b	4149cc <dispatch_notify_event+0x4fc>
  4149b0:	ldr	w0, [sp, #128]
  4149b4:	cmp	w0, #0x0
  4149b8:	cneg	w0, w0, lt  // lt = tstop
  4149bc:	and	w0, w0, #0xff
  4149c0:	neg	w0, w0
  4149c4:	b	4149cc <dispatch_notify_event+0x4fc>
  4149c8:	mov	w0, #0x0                   	// #0
  4149cc:	ldr	x19, [sp, #16]
  4149d0:	ldp	x29, x30, [sp], #160
  4149d4:	ret

00000000004149d8 <dispatch_watchdog>:
  4149d8:	stp	x29, x30, [sp, #-96]!
  4149dc:	mov	x29, sp
  4149e0:	str	x0, [sp, #40]
  4149e4:	str	x1, [sp, #32]
  4149e8:	str	x2, [sp, #24]
  4149ec:	ldr	x0, [sp, #24]
  4149f0:	str	x0, [sp, #88]
  4149f4:	ldr	x0, [sp, #88]
  4149f8:	cmp	x0, #0x0
  4149fc:	cset	w0, eq  // eq = none
  414a00:	and	w0, w0, #0xff
  414a04:	and	x0, x0, #0xff
  414a08:	cmp	x0, #0x0
  414a0c:	b.eq	414a38 <dispatch_watchdog+0x60>  // b.none
  414a10:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414a14:	add	x1, x0, #0xe03
  414a18:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414a1c:	add	x4, x0, #0x898
  414a20:	mov	w3, #0x6eb                 	// #1771
  414a24:	mov	x2, x1
  414a28:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414a2c:	add	x1, x0, #0xec8
  414a30:	mov	w0, #0x0                   	// #0
  414a34:	bl	405fd0 <log_assert_failed_realm@plt>
  414a38:	ldr	x0, [sp, #88]
  414a3c:	ldrb	w1, [x0, #592]
  414a40:	orr	w1, w1, #0x2
  414a44:	strb	w1, [x0, #592]
  414a48:	ldr	x0, [sp, #88]
  414a4c:	ldr	x0, [x0, #136]
  414a50:	mov	w1, #0x1                   	// #1
  414a54:	bl	406090 <sd_event_source_set_enabled@plt>
  414a58:	str	w0, [sp, #48]
  414a5c:	ldr	w0, [sp, #48]
  414a60:	cmp	w0, #0x0
  414a64:	b.ge	414ae0 <dispatch_watchdog+0x108>  // b.tcont
  414a68:	mov	w0, #0x4                   	// #4
  414a6c:	str	w0, [sp, #52]
  414a70:	ldr	w0, [sp, #48]
  414a74:	str	w0, [sp, #56]
  414a78:	str	wzr, [sp, #60]
  414a7c:	ldr	w0, [sp, #60]
  414a80:	bl	406c30 <log_get_max_level_realm@plt>
  414a84:	mov	w1, w0
  414a88:	ldr	w0, [sp, #52]
  414a8c:	and	w0, w0, #0x7
  414a90:	cmp	w1, w0
  414a94:	b.lt	414ad8 <dispatch_watchdog+0x100>  // b.tstop
  414a98:	ldr	w0, [sp, #60]
  414a9c:	lsl	w1, w0, #10
  414aa0:	ldr	w0, [sp, #52]
  414aa4:	orr	w6, w1, w0
  414aa8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414aac:	add	x1, x0, #0xe03
  414ab0:	adrp	x0, 429000 <__func__.11909+0x1280>
  414ab4:	add	x5, x0, #0xa30
  414ab8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414abc:	add	x4, x0, #0x8b0
  414ac0:	mov	w3, #0x6f1                 	// #1777
  414ac4:	mov	x2, x1
  414ac8:	ldr	w1, [sp, #56]
  414acc:	mov	w0, w6
  414ad0:	bl	406590 <log_internal_realm@plt>
  414ad4:	b	414ae0 <dispatch_watchdog+0x108>
  414ad8:	ldr	w0, [sp, #56]
  414adc:	cmp	w0, #0x0
  414ae0:	ldr	x0, [sp, #88]
  414ae4:	ldr	x2, [x0, #144]
  414ae8:	ldr	x0, [sp, #88]
  414aec:	ldr	x0, [x0, #696]
  414af0:	lsr	x1, x0, #1
  414af4:	ldr	x0, [sp, #32]
  414af8:	add	x0, x1, x0
  414afc:	mov	x1, x0
  414b00:	mov	x0, x2
  414b04:	bl	405b40 <sd_event_source_set_time@plt>
  414b08:	str	w0, [sp, #48]
  414b0c:	ldr	w0, [sp, #48]
  414b10:	cmp	w0, #0x0
  414b14:	b.ge	414ba0 <dispatch_watchdog+0x1c8>  // b.tcont
  414b18:	mov	w0, #0x3                   	// #3
  414b1c:	str	w0, [sp, #76]
  414b20:	ldr	w0, [sp, #48]
  414b24:	str	w0, [sp, #80]
  414b28:	str	wzr, [sp, #84]
  414b2c:	ldr	w0, [sp, #84]
  414b30:	bl	406c30 <log_get_max_level_realm@plt>
  414b34:	mov	w1, w0
  414b38:	ldr	w0, [sp, #76]
  414b3c:	and	w0, w0, #0x7
  414b40:	cmp	w1, w0
  414b44:	b.lt	414b88 <dispatch_watchdog+0x1b0>  // b.tstop
  414b48:	ldr	w0, [sp, #84]
  414b4c:	lsl	w1, w0, #10
  414b50:	ldr	w0, [sp, #76]
  414b54:	orr	w6, w1, w0
  414b58:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414b5c:	add	x1, x0, #0xe03
  414b60:	adrp	x0, 429000 <__func__.11909+0x1280>
  414b64:	add	x5, x0, #0xa60
  414b68:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414b6c:	add	x4, x0, #0x8b0
  414b70:	mov	w3, #0x6f5                 	// #1781
  414b74:	mov	x2, x1
  414b78:	ldr	w1, [sp, #80]
  414b7c:	mov	w0, w6
  414b80:	bl	406590 <log_internal_realm@plt>
  414b84:	b	414c4c <dispatch_watchdog+0x274>
  414b88:	ldr	w0, [sp, #80]
  414b8c:	cmp	w0, #0x0
  414b90:	cneg	w0, w0, lt  // lt = tstop
  414b94:	and	w0, w0, #0xff
  414b98:	neg	w0, w0
  414b9c:	b	414c4c <dispatch_watchdog+0x274>
  414ba0:	ldr	x0, [sp, #88]
  414ba4:	ldr	x0, [x0, #144]
  414ba8:	mov	w1, #0x1                   	// #1
  414bac:	bl	406090 <sd_event_source_set_enabled@plt>
  414bb0:	str	w0, [sp, #48]
  414bb4:	ldr	w0, [sp, #48]
  414bb8:	cmp	w0, #0x0
  414bbc:	b.ge	414c48 <dispatch_watchdog+0x270>  // b.tcont
  414bc0:	mov	w0, #0x3                   	// #3
  414bc4:	str	w0, [sp, #64]
  414bc8:	ldr	w0, [sp, #48]
  414bcc:	str	w0, [sp, #68]
  414bd0:	str	wzr, [sp, #72]
  414bd4:	ldr	w0, [sp, #72]
  414bd8:	bl	406c30 <log_get_max_level_realm@plt>
  414bdc:	mov	w1, w0
  414be0:	ldr	w0, [sp, #64]
  414be4:	and	w0, w0, #0x7
  414be8:	cmp	w1, w0
  414bec:	b.lt	414c30 <dispatch_watchdog+0x258>  // b.tstop
  414bf0:	ldr	w0, [sp, #72]
  414bf4:	lsl	w1, w0, #10
  414bf8:	ldr	w0, [sp, #64]
  414bfc:	orr	w6, w1, w0
  414c00:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414c04:	add	x1, x0, #0xe03
  414c08:	adrp	x0, 429000 <__func__.11909+0x1280>
  414c0c:	add	x5, x0, #0xa90
  414c10:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414c14:	add	x4, x0, #0x8b0
  414c18:	mov	w3, #0x6f9                 	// #1785
  414c1c:	mov	x2, x1
  414c20:	ldr	w1, [sp, #68]
  414c24:	mov	w0, w6
  414c28:	bl	406590 <log_internal_realm@plt>
  414c2c:	b	414c4c <dispatch_watchdog+0x274>
  414c30:	ldr	w0, [sp, #68]
  414c34:	cmp	w0, #0x0
  414c38:	cneg	w0, w0, lt  // lt = tstop
  414c3c:	and	w0, w0, #0xff
  414c40:	neg	w0, w0
  414c44:	b	414c4c <dispatch_watchdog+0x274>
  414c48:	mov	w0, #0x0                   	// #0
  414c4c:	ldp	x29, x30, [sp], #96
  414c50:	ret

0000000000414c54 <server_connect_notify>:
  414c54:	stp	x29, x30, [sp, #-272]!
  414c58:	mov	x29, sp
  414c5c:	stp	x19, x20, [sp, #16]
  414c60:	str	x0, [sp, #40]
  414c64:	adrp	x0, 441000 <wordlist.9471+0x208>
  414c68:	ldr	x0, [x0, #4064]
  414c6c:	ldr	x1, [x0]
  414c70:	str	x1, [sp, #264]
  414c74:	mov	x1, #0x0                   	// #0
  414c78:	stp	xzr, xzr, [sp, #136]
  414c7c:	stp	xzr, xzr, [sp, #152]
  414c80:	stp	xzr, xzr, [sp, #168]
  414c84:	stp	xzr, xzr, [sp, #184]
  414c88:	stp	xzr, xzr, [sp, #200]
  414c8c:	stp	xzr, xzr, [sp, #216]
  414c90:	stp	xzr, xzr, [sp, #232]
  414c94:	stp	xzr, xzr, [sp, #248]
  414c98:	ldr	x0, [sp, #40]
  414c9c:	cmp	x0, #0x0
  414ca0:	cset	w0, eq  // eq = none
  414ca4:	and	w0, w0, #0xff
  414ca8:	and	x0, x0, #0xff
  414cac:	cmp	x0, #0x0
  414cb0:	b.eq	414cdc <server_connect_notify+0x88>  // b.none
  414cb4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414cb8:	add	x1, x0, #0xe03
  414cbc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414cc0:	add	x4, x0, #0x8c8
  414cc4:	mov	w3, #0x703                 	// #1795
  414cc8:	mov	x2, x1
  414ccc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414cd0:	add	x1, x0, #0xec8
  414cd4:	mov	w0, #0x0                   	// #0
  414cd8:	bl	405fd0 <log_assert_failed_realm@plt>
  414cdc:	ldr	x0, [sp, #40]
  414ce0:	ldr	w0, [x0, #24]
  414ce4:	mvn	w0, w0
  414ce8:	lsr	w0, w0, #31
  414cec:	and	w0, w0, #0xff
  414cf0:	and	x0, x0, #0xff
  414cf4:	cmp	x0, #0x0
  414cf8:	b.eq	414d24 <server_connect_notify+0xd0>  // b.none
  414cfc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414d00:	add	x1, x0, #0xe03
  414d04:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414d08:	add	x4, x0, #0x8c8
  414d0c:	mov	w3, #0x704                 	// #1796
  414d10:	mov	x2, x1
  414d14:	adrp	x0, 429000 <__func__.11909+0x1280>
  414d18:	add	x1, x0, #0xac0
  414d1c:	mov	w0, #0x0                   	// #0
  414d20:	bl	405fd0 <log_assert_failed_realm@plt>
  414d24:	ldr	x0, [sp, #40]
  414d28:	ldr	x0, [x0, #136]
  414d2c:	cmp	x0, #0x0
  414d30:	cset	w0, ne  // ne = any
  414d34:	and	w0, w0, #0xff
  414d38:	and	x0, x0, #0xff
  414d3c:	cmp	x0, #0x0
  414d40:	b.eq	414d6c <server_connect_notify+0x118>  // b.none
  414d44:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414d48:	add	x1, x0, #0xe03
  414d4c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414d50:	add	x4, x0, #0x8c8
  414d54:	mov	w3, #0x705                 	// #1797
  414d58:	mov	x2, x1
  414d5c:	adrp	x0, 429000 <__func__.11909+0x1280>
  414d60:	add	x1, x0, #0xad8
  414d64:	mov	w0, #0x0                   	// #0
  414d68:	bl	405fd0 <log_assert_failed_realm@plt>
  414d6c:	adrp	x0, 429000 <__func__.11909+0x1280>
  414d70:	add	x0, x0, #0xaf0
  414d74:	bl	406790 <getenv@plt>
  414d78:	str	x0, [sp, #128]
  414d7c:	ldr	x0, [sp, #128]
  414d80:	cmp	x0, #0x0
  414d84:	b.ne	414d90 <server_connect_notify+0x13c>  // b.any
  414d88:	mov	w0, #0x0                   	// #0
  414d8c:	b	4151ac <server_connect_notify+0x558>
  414d90:	add	x0, sp, #0x88
  414d94:	ldr	x1, [sp, #128]
  414d98:	bl	406900 <sockaddr_un_set_path@plt>
  414d9c:	str	w0, [sp, #60]
  414da0:	ldr	w0, [sp, #60]
  414da4:	cmp	w0, #0x0
  414da8:	b.ge	414e38 <server_connect_notify+0x1e4>  // b.tcont
  414dac:	mov	w0, #0x3                   	// #3
  414db0:	str	w0, [sp, #116]
  414db4:	ldr	w0, [sp, #60]
  414db8:	str	w0, [sp, #120]
  414dbc:	str	wzr, [sp, #124]
  414dc0:	ldr	w0, [sp, #124]
  414dc4:	bl	406c30 <log_get_max_level_realm@plt>
  414dc8:	mov	w1, w0
  414dcc:	ldr	w0, [sp, #116]
  414dd0:	and	w0, w0, #0x7
  414dd4:	cmp	w1, w0
  414dd8:	b.lt	414e20 <server_connect_notify+0x1cc>  // b.tstop
  414ddc:	ldr	w0, [sp, #124]
  414de0:	lsl	w1, w0, #10
  414de4:	ldr	w0, [sp, #116]
  414de8:	orr	w7, w1, w0
  414dec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414df0:	add	x1, x0, #0xe03
  414df4:	ldr	x6, [sp, #128]
  414df8:	adrp	x0, 429000 <__func__.11909+0x1280>
  414dfc:	add	x5, x0, #0xb00
  414e00:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414e04:	add	x4, x0, #0x8e0
  414e08:	mov	w3, #0x71a                 	// #1818
  414e0c:	mov	x2, x1
  414e10:	ldr	w1, [sp, #120]
  414e14:	mov	w0, w7
  414e18:	bl	406590 <log_internal_realm@plt>
  414e1c:	b	4151ac <server_connect_notify+0x558>
  414e20:	ldr	w0, [sp, #120]
  414e24:	cmp	w0, #0x0
  414e28:	cneg	w0, w0, lt  // lt = tstop
  414e2c:	and	w0, w0, #0xff
  414e30:	neg	w0, w0
  414e34:	b	4151ac <server_connect_notify+0x558>
  414e38:	mov	w2, #0x0                   	// #0
  414e3c:	mov	w1, #0x802                 	// #2050
  414e40:	movk	w1, #0x8, lsl #16
  414e44:	mov	w0, #0x1                   	// #1
  414e48:	bl	405db0 <socket@plt>
  414e4c:	mov	w1, w0
  414e50:	ldr	x0, [sp, #40]
  414e54:	str	w1, [x0, #24]
  414e58:	ldr	x0, [sp, #40]
  414e5c:	ldr	w0, [x0, #24]
  414e60:	cmp	w0, #0x0
  414e64:	b.ge	414ef4 <server_connect_notify+0x2a0>  // b.tcont
  414e68:	mov	w0, #0x3                   	// #3
  414e6c:	str	w0, [sp, #104]
  414e70:	bl	4062e0 <__errno_location@plt>
  414e74:	ldr	w0, [x0]
  414e78:	str	w0, [sp, #108]
  414e7c:	str	wzr, [sp, #112]
  414e80:	ldr	w0, [sp, #112]
  414e84:	bl	406c30 <log_get_max_level_realm@plt>
  414e88:	mov	w1, w0
  414e8c:	ldr	w0, [sp, #104]
  414e90:	and	w0, w0, #0x7
  414e94:	cmp	w1, w0
  414e98:	b.lt	414edc <server_connect_notify+0x288>  // b.tstop
  414e9c:	ldr	w0, [sp, #112]
  414ea0:	lsl	w1, w0, #10
  414ea4:	ldr	w0, [sp, #104]
  414ea8:	orr	w6, w1, w0
  414eac:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414eb0:	add	x1, x0, #0xe03
  414eb4:	adrp	x0, 429000 <__func__.11909+0x1280>
  414eb8:	add	x5, x0, #0xb30
  414ebc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414ec0:	add	x4, x0, #0x8e0
  414ec4:	mov	w3, #0x71e                 	// #1822
  414ec8:	mov	x2, x1
  414ecc:	ldr	w1, [sp, #108]
  414ed0:	mov	w0, w6
  414ed4:	bl	406590 <log_internal_realm@plt>
  414ed8:	b	4151ac <server_connect_notify+0x558>
  414edc:	ldr	w0, [sp, #108]
  414ee0:	cmp	w0, #0x0
  414ee4:	cneg	w0, w0, lt  // lt = tstop
  414ee8:	and	w0, w0, #0xff
  414eec:	neg	w0, w0
  414ef0:	b	4151ac <server_connect_notify+0x558>
  414ef4:	ldr	x0, [sp, #40]
  414ef8:	ldr	w0, [x0, #24]
  414efc:	mov	x1, #0x800000              	// #8388608
  414f00:	bl	4066a0 <fd_inc_sndbuf@plt>
  414f04:	ldr	x0, [sp, #40]
  414f08:	ldr	w0, [x0, #24]
  414f0c:	add	x1, sp, #0x88
  414f10:	mov	x3, x1
  414f14:	ldr	w1, [sp, #60]
  414f18:	mov	w2, w1
  414f1c:	mov	x1, x3
  414f20:	bl	406ac0 <connect@plt>
  414f24:	str	w0, [sp, #64]
  414f28:	ldr	w0, [sp, #64]
  414f2c:	cmp	w0, #0x0
  414f30:	b.ge	414fc0 <server_connect_notify+0x36c>  // b.tcont
  414f34:	mov	w0, #0x3                   	// #3
  414f38:	str	w0, [sp, #92]
  414f3c:	bl	4062e0 <__errno_location@plt>
  414f40:	ldr	w0, [x0]
  414f44:	str	w0, [sp, #96]
  414f48:	str	wzr, [sp, #100]
  414f4c:	ldr	w0, [sp, #100]
  414f50:	bl	406c30 <log_get_max_level_realm@plt>
  414f54:	mov	w1, w0
  414f58:	ldr	w0, [sp, #92]
  414f5c:	and	w0, w0, #0x7
  414f60:	cmp	w1, w0
  414f64:	b.lt	414fa8 <server_connect_notify+0x354>  // b.tstop
  414f68:	ldr	w0, [sp, #100]
  414f6c:	lsl	w1, w0, #10
  414f70:	ldr	w0, [sp, #92]
  414f74:	orr	w6, w1, w0
  414f78:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  414f7c:	add	x1, x0, #0xe03
  414f80:	adrp	x0, 429000 <__func__.11909+0x1280>
  414f84:	add	x5, x0, #0xb58
  414f88:	adrp	x0, 42a000 <__func__.11909+0x2280>
  414f8c:	add	x4, x0, #0x8e0
  414f90:	mov	w3, #0x724                 	// #1828
  414f94:	mov	x2, x1
  414f98:	ldr	w1, [sp, #96]
  414f9c:	mov	w0, w6
  414fa0:	bl	406590 <log_internal_realm@plt>
  414fa4:	b	4151ac <server_connect_notify+0x558>
  414fa8:	ldr	w0, [sp, #96]
  414fac:	cmp	w0, #0x0
  414fb0:	cneg	w0, w0, lt  // lt = tstop
  414fb4:	and	w0, w0, #0xff
  414fb8:	neg	w0, w0
  414fbc:	b	4151ac <server_connect_notify+0x558>
  414fc0:	ldr	x0, [sp, #40]
  414fc4:	ldr	x6, [x0, #32]
  414fc8:	ldr	x0, [sp, #40]
  414fcc:	add	x1, x0, #0x88
  414fd0:	ldr	x0, [sp, #40]
  414fd4:	ldr	w2, [x0, #24]
  414fd8:	ldr	x5, [sp, #40]
  414fdc:	adrp	x0, 414000 <server_schedule_sync+0xd4>
  414fe0:	add	x4, x0, #0x4d0
  414fe4:	mov	w3, #0x4                   	// #4
  414fe8:	mov	x0, x6
  414fec:	bl	406680 <sd_event_add_io@plt>
  414ff0:	str	w0, [sp, #64]
  414ff4:	ldr	w0, [sp, #64]
  414ff8:	cmp	w0, #0x0
  414ffc:	b.ge	415088 <server_connect_notify+0x434>  // b.tcont
  415000:	mov	w0, #0x3                   	// #3
  415004:	str	w0, [sp, #80]
  415008:	ldr	w0, [sp, #64]
  41500c:	str	w0, [sp, #84]
  415010:	str	wzr, [sp, #88]
  415014:	ldr	w0, [sp, #88]
  415018:	bl	406c30 <log_get_max_level_realm@plt>
  41501c:	mov	w1, w0
  415020:	ldr	w0, [sp, #80]
  415024:	and	w0, w0, #0x7
  415028:	cmp	w1, w0
  41502c:	b.lt	415070 <server_connect_notify+0x41c>  // b.tstop
  415030:	ldr	w0, [sp, #88]
  415034:	lsl	w1, w0, #10
  415038:	ldr	w0, [sp, #80]
  41503c:	orr	w6, w1, w0
  415040:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415044:	add	x1, x0, #0xe03
  415048:	adrp	x0, 429000 <__func__.11909+0x1280>
  41504c:	add	x5, x0, #0xb80
  415050:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415054:	add	x4, x0, #0x8e0
  415058:	mov	w3, #0x728                 	// #1832
  41505c:	mov	x2, x1
  415060:	ldr	w1, [sp, #84]
  415064:	mov	w0, w6
  415068:	bl	406590 <log_internal_realm@plt>
  41506c:	b	4151ac <server_connect_notify+0x558>
  415070:	ldr	w0, [sp, #84]
  415074:	cmp	w0, #0x0
  415078:	cneg	w0, w0, lt  // lt = tstop
  41507c:	and	w0, w0, #0xff
  415080:	neg	w0, w0
  415084:	b	4151ac <server_connect_notify+0x558>
  415088:	ldr	x0, [sp, #40]
  41508c:	add	x0, x0, #0x2b8
  415090:	mov	x1, x0
  415094:	mov	w0, #0x0                   	// #0
  415098:	bl	406480 <sd_watchdog_enabled@plt>
  41509c:	cmp	w0, #0x0
  4150a0:	b.le	4151a8 <server_connect_notify+0x554>
  4150a4:	ldr	x0, [sp, #40]
  4150a8:	ldrb	w1, [x0, #592]
  4150ac:	orr	w1, w1, #0x2
  4150b0:	strb	w1, [x0, #592]
  4150b4:	ldr	x0, [sp, #40]
  4150b8:	ldr	x19, [x0, #32]
  4150bc:	ldr	x0, [sp, #40]
  4150c0:	add	x20, x0, #0x90
  4150c4:	mov	w0, #0x1                   	// #1
  4150c8:	bl	406660 <now@plt>
  4150cc:	mov	x1, x0
  4150d0:	ldr	x0, [sp, #40]
  4150d4:	ldr	x0, [x0, #696]
  4150d8:	lsr	x0, x0, #1
  4150dc:	add	x1, x1, x0
  4150e0:	ldr	x0, [sp, #40]
  4150e4:	ldr	x0, [x0, #696]
  4150e8:	lsr	x2, x0, #2
  4150ec:	ldr	x6, [sp, #40]
  4150f0:	adrp	x0, 414000 <server_schedule_sync+0xd4>
  4150f4:	add	x5, x0, #0x9d8
  4150f8:	mov	x4, x2
  4150fc:	mov	x3, x1
  415100:	mov	w2, #0x1                   	// #1
  415104:	mov	x1, x20
  415108:	mov	x0, x19
  41510c:	bl	405e50 <sd_event_add_time@plt>
  415110:	str	w0, [sp, #64]
  415114:	ldr	w0, [sp, #64]
  415118:	cmp	w0, #0x0
  41511c:	b.ge	4151a8 <server_connect_notify+0x554>  // b.tcont
  415120:	mov	w0, #0x3                   	// #3
  415124:	str	w0, [sp, #68]
  415128:	ldr	w0, [sp, #64]
  41512c:	str	w0, [sp, #72]
  415130:	str	wzr, [sp, #76]
  415134:	ldr	w0, [sp, #76]
  415138:	bl	406c30 <log_get_max_level_realm@plt>
  41513c:	mov	w1, w0
  415140:	ldr	w0, [sp, #68]
  415144:	and	w0, w0, #0x7
  415148:	cmp	w1, w0
  41514c:	b.lt	415190 <server_connect_notify+0x53c>  // b.tstop
  415150:	ldr	w0, [sp, #76]
  415154:	lsl	w1, w0, #10
  415158:	ldr	w0, [sp, #68]
  41515c:	orr	w6, w1, w0
  415160:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415164:	add	x1, x0, #0xe03
  415168:	adrp	x0, 429000 <__func__.11909+0x1280>
  41516c:	add	x5, x0, #0xba8
  415170:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415174:	add	x4, x0, #0x8e0
  415178:	mov	w3, #0x72f                 	// #1839
  41517c:	mov	x2, x1
  415180:	ldr	w1, [sp, #72]
  415184:	mov	w0, w6
  415188:	bl	406590 <log_internal_realm@plt>
  41518c:	b	4151ac <server_connect_notify+0x558>
  415190:	ldr	w0, [sp, #72]
  415194:	cmp	w0, #0x0
  415198:	cneg	w0, w0, lt  // lt = tstop
  41519c:	and	w0, w0, #0xff
  4151a0:	neg	w0, w0
  4151a4:	b	4151ac <server_connect_notify+0x558>
  4151a8:	mov	w0, #0x0                   	// #0
  4151ac:	mov	w1, w0
  4151b0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4151b4:	ldr	x0, [x0, #4064]
  4151b8:	ldr	x2, [sp, #264]
  4151bc:	ldr	x0, [x0]
  4151c0:	eor	x0, x2, x0
  4151c4:	cmp	x0, #0x0
  4151c8:	b.eq	4151d0 <server_connect_notify+0x57c>  // b.none
  4151cc:	bl	4063e0 <__stack_chk_fail@plt>
  4151d0:	mov	w0, w1
  4151d4:	ldp	x19, x20, [sp, #16]
  4151d8:	ldp	x29, x30, [sp], #272
  4151dc:	ret

00000000004151e0 <synchronize_second_half>:
  4151e0:	stp	x29, x30, [sp, #-64]!
  4151e4:	mov	x29, sp
  4151e8:	str	x0, [sp, #24]
  4151ec:	str	x1, [sp, #16]
  4151f0:	ldr	x0, [sp, #16]
  4151f4:	str	x0, [sp, #48]
  4151f8:	ldr	x0, [sp, #48]
  4151fc:	cmp	x0, #0x0
  415200:	cset	w0, eq  // eq = none
  415204:	and	w0, w0, #0xff
  415208:	and	x0, x0, #0xff
  41520c:	cmp	x0, #0x0
  415210:	b.eq	41523c <synchronize_second_half+0x5c>  // b.none
  415214:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415218:	add	x1, x0, #0xe03
  41521c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415220:	add	x4, x0, #0x8f8
  415224:	mov	w3, #0x73c                 	// #1852
  415228:	mov	x2, x1
  41522c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415230:	add	x1, x0, #0xbd0
  415234:	mov	w0, #0x0                   	// #0
  415238:	bl	405fd0 <log_assert_failed_realm@plt>
  41523c:	ldr	x0, [sp, #48]
  415240:	bl	406c00 <varlink_get_userdata@plt>
  415244:	str	x0, [sp, #56]
  415248:	ldr	x0, [sp, #56]
  41524c:	cmp	x0, #0x0
  415250:	cset	w0, eq  // eq = none
  415254:	and	w0, w0, #0xff
  415258:	and	x0, x0, #0xff
  41525c:	cmp	x0, #0x0
  415260:	b.eq	41528c <synchronize_second_half+0xac>  // b.none
  415264:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415268:	add	x1, x0, #0xe03
  41526c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415270:	add	x4, x0, #0x8f8
  415274:	mov	w3, #0x73d                 	// #1853
  415278:	mov	x2, x1
  41527c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415280:	add	x1, x0, #0xbd8
  415284:	mov	w0, #0x0                   	// #0
  415288:	bl	405fd0 <log_assert_failed_realm@plt>
  41528c:	ldr	x0, [sp, #56]
  415290:	bl	4130c4 <server_full_sync>
  415294:	mov	w1, #0x0                   	// #0
  415298:	ldr	x0, [sp, #24]
  41529c:	bl	4062d0 <sd_event_source_set_floating@plt>
  4152a0:	str	w0, [sp, #32]
  4152a4:	ldr	w0, [sp, #32]
  4152a8:	cmp	w0, #0x0
  4152ac:	b.ge	415338 <synchronize_second_half+0x158>  // b.tcont
  4152b0:	mov	w0, #0x3                   	// #3
  4152b4:	str	w0, [sp, #36]
  4152b8:	ldr	w0, [sp, #32]
  4152bc:	str	w0, [sp, #40]
  4152c0:	str	wzr, [sp, #44]
  4152c4:	ldr	w0, [sp, #44]
  4152c8:	bl	406c30 <log_get_max_level_realm@plt>
  4152cc:	mov	w1, w0
  4152d0:	ldr	w0, [sp, #36]
  4152d4:	and	w0, w0, #0x7
  4152d8:	cmp	w1, w0
  4152dc:	b.lt	415320 <synchronize_second_half+0x140>  // b.tstop
  4152e0:	ldr	w0, [sp, #44]
  4152e4:	lsl	w1, w0, #10
  4152e8:	ldr	w0, [sp, #36]
  4152ec:	orr	w6, w1, w0
  4152f0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4152f4:	add	x1, x0, #0xe03
  4152f8:	adrp	x0, 429000 <__func__.11909+0x1280>
  4152fc:	add	x5, x0, #0xbf8
  415300:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415304:	add	x4, x0, #0x910
  415308:	mov	w3, #0x749                 	// #1865
  41530c:	mov	x2, x1
  415310:	ldr	w1, [sp, #40]
  415314:	mov	w0, w6
  415318:	bl	406590 <log_internal_realm@plt>
  41531c:	b	415344 <synchronize_second_half+0x164>
  415320:	ldr	w0, [sp, #40]
  415324:	cmp	w0, #0x0
  415328:	cneg	w0, w0, lt  // lt = tstop
  41532c:	and	w0, w0, #0xff
  415330:	neg	w0, w0
  415334:	b	415344 <synchronize_second_half+0x164>
  415338:	mov	x1, #0x0                   	// #0
  41533c:	ldr	x0, [sp, #48]
  415340:	bl	406950 <varlink_reply@plt>
  415344:	ldp	x29, x30, [sp], #64
  415348:	ret

000000000041534c <synchronize_destroy>:
  41534c:	stp	x29, x30, [sp, #-32]!
  415350:	mov	x29, sp
  415354:	str	x0, [sp, #24]
  415358:	ldr	x0, [sp, #24]
  41535c:	bl	406050 <varlink_unref@plt>
  415360:	nop
  415364:	ldp	x29, x30, [sp], #32
  415368:	ret

000000000041536c <vl_method_synchronize>:
  41536c:	stp	x29, x30, [sp, #-160]!
  415370:	mov	x29, sp
  415374:	str	x19, [sp, #16]
  415378:	str	x0, [sp, #56]
  41537c:	str	x1, [sp, #48]
  415380:	str	w2, [sp, #44]
  415384:	str	x3, [sp, #32]
  415388:	adrp	x0, 441000 <wordlist.9471+0x208>
  41538c:	ldr	x0, [x0, #4064]
  415390:	ldr	x1, [x0]
  415394:	str	x1, [sp, #152]
  415398:	mov	x1, #0x0                   	// #0
  41539c:	str	xzr, [sp, #136]
  4153a0:	ldr	x0, [sp, #32]
  4153a4:	str	x0, [sp, #144]
  4153a8:	ldr	x0, [sp, #56]
  4153ac:	cmp	x0, #0x0
  4153b0:	cset	w0, eq  // eq = none
  4153b4:	and	w0, w0, #0xff
  4153b8:	and	x0, x0, #0xff
  4153bc:	cmp	x0, #0x0
  4153c0:	b.eq	4153ec <vl_method_synchronize+0x80>  // b.none
  4153c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4153c8:	add	x1, x0, #0xe03
  4153cc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4153d0:	add	x4, x0, #0x928
  4153d4:	mov	w3, #0x757                 	// #1879
  4153d8:	mov	x2, x1
  4153dc:	adrp	x0, 429000 <__func__.11909+0x1280>
  4153e0:	add	x1, x0, #0xbd0
  4153e4:	mov	w0, #0x0                   	// #0
  4153e8:	bl	405fd0 <log_assert_failed_realm@plt>
  4153ec:	ldr	x0, [sp, #144]
  4153f0:	cmp	x0, #0x0
  4153f4:	cset	w0, eq  // eq = none
  4153f8:	and	w0, w0, #0xff
  4153fc:	and	x0, x0, #0xff
  415400:	cmp	x0, #0x0
  415404:	b.eq	415430 <vl_method_synchronize+0xc4>  // b.none
  415408:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41540c:	add	x1, x0, #0xe03
  415410:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415414:	add	x4, x0, #0x928
  415418:	mov	w3, #0x758                 	// #1880
  41541c:	mov	x2, x1
  415420:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415424:	add	x1, x0, #0xec8
  415428:	mov	w0, #0x0                   	// #0
  41542c:	bl	405fd0 <log_assert_failed_realm@plt>
  415430:	ldr	x0, [sp, #48]
  415434:	bl	406700 <json_variant_elements@plt>
  415438:	cmp	x0, #0x0
  41543c:	b.eq	415454 <vl_method_synchronize+0xe8>  // b.none
  415440:	ldr	x1, [sp, #48]
  415444:	ldr	x0, [sp, #56]
  415448:	bl	406bc0 <varlink_error_invalid_parameter@plt>
  41544c:	mov	w19, w0
  415450:	b	4157a4 <vl_method_synchronize+0x438>
  415454:	mov	w0, #0x6                   	// #6
  415458:	str	w0, [sp, #72]
  41545c:	str	wzr, [sp, #76]
  415460:	str	wzr, [sp, #80]
  415464:	ldr	w0, [sp, #80]
  415468:	bl	406c30 <log_get_max_level_realm@plt>
  41546c:	mov	w1, w0
  415470:	ldr	w0, [sp, #72]
  415474:	and	w0, w0, #0x7
  415478:	cmp	w1, w0
  41547c:	b.lt	4154c0 <vl_method_synchronize+0x154>  // b.tstop
  415480:	ldr	w0, [sp, #80]
  415484:	lsl	w1, w0, #10
  415488:	ldr	w0, [sp, #72]
  41548c:	orr	w6, w1, w0
  415490:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415494:	add	x1, x0, #0xe03
  415498:	adrp	x0, 429000 <__func__.11909+0x1280>
  41549c:	add	x5, x0, #0xc28
  4154a0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4154a4:	add	x4, x0, #0x940
  4154a8:	mov	w3, #0x75d                 	// #1885
  4154ac:	mov	x2, x1
  4154b0:	ldr	w1, [sp, #76]
  4154b4:	mov	w0, w6
  4154b8:	bl	406590 <log_internal_realm@plt>
  4154bc:	b	4154c8 <vl_method_synchronize+0x15c>
  4154c0:	ldr	w0, [sp, #76]
  4154c4:	cmp	w0, #0x0
  4154c8:	ldr	x0, [sp, #144]
  4154cc:	ldr	x4, [x0, #32]
  4154d0:	add	x1, sp, #0x88
  4154d4:	ldr	x3, [sp, #56]
  4154d8:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  4154dc:	add	x2, x0, #0x1e0
  4154e0:	mov	x0, x4
  4154e4:	bl	406320 <sd_event_add_defer@plt>
  4154e8:	str	w0, [sp, #84]
  4154ec:	ldr	w0, [sp, #84]
  4154f0:	cmp	w0, #0x0
  4154f4:	b.ge	415584 <vl_method_synchronize+0x218>  // b.tcont
  4154f8:	mov	w0, #0x3                   	// #3
  4154fc:	str	w0, [sp, #124]
  415500:	ldr	w0, [sp, #84]
  415504:	str	w0, [sp, #128]
  415508:	str	wzr, [sp, #132]
  41550c:	ldr	w0, [sp, #132]
  415510:	bl	406c30 <log_get_max_level_realm@plt>
  415514:	mov	w1, w0
  415518:	ldr	w0, [sp, #124]
  41551c:	and	w0, w0, #0x7
  415520:	cmp	w1, w0
  415524:	b.lt	41556c <vl_method_synchronize+0x200>  // b.tstop
  415528:	ldr	w0, [sp, #132]
  41552c:	lsl	w1, w0, #10
  415530:	ldr	w0, [sp, #124]
  415534:	orr	w6, w1, w0
  415538:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41553c:	add	x1, x0, #0xe03
  415540:	adrp	x0, 429000 <__func__.11909+0x1280>
  415544:	add	x5, x0, #0xc58
  415548:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41554c:	add	x4, x0, #0x940
  415550:	mov	w3, #0x765                 	// #1893
  415554:	mov	x2, x1
  415558:	ldr	w1, [sp, #128]
  41555c:	mov	w0, w6
  415560:	bl	406590 <log_internal_realm@plt>
  415564:	mov	w19, w0
  415568:	b	4157a4 <vl_method_synchronize+0x438>
  41556c:	ldr	w0, [sp, #128]
  415570:	cmp	w0, #0x0
  415574:	cneg	w0, w0, lt  // lt = tstop
  415578:	and	w0, w0, #0xff
  41557c:	neg	w19, w0
  415580:	b	4157a4 <vl_method_synchronize+0x438>
  415584:	ldr	x2, [sp, #136]
  415588:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  41558c:	add	x1, x0, #0x34c
  415590:	mov	x0, x2
  415594:	bl	4065d0 <sd_event_source_set_destroy_callback@plt>
  415598:	str	w0, [sp, #84]
  41559c:	ldr	w0, [sp, #84]
  4155a0:	cmp	w0, #0x0
  4155a4:	b.ge	415634 <vl_method_synchronize+0x2c8>  // b.tcont
  4155a8:	mov	w0, #0x3                   	// #3
  4155ac:	str	w0, [sp, #112]
  4155b0:	ldr	w0, [sp, #84]
  4155b4:	str	w0, [sp, #116]
  4155b8:	str	wzr, [sp, #120]
  4155bc:	ldr	w0, [sp, #120]
  4155c0:	bl	406c30 <log_get_max_level_realm@plt>
  4155c4:	mov	w1, w0
  4155c8:	ldr	w0, [sp, #112]
  4155cc:	and	w0, w0, #0x7
  4155d0:	cmp	w1, w0
  4155d4:	b.lt	41561c <vl_method_synchronize+0x2b0>  // b.tstop
  4155d8:	ldr	w0, [sp, #120]
  4155dc:	lsl	w1, w0, #10
  4155e0:	ldr	w0, [sp, #112]
  4155e4:	orr	w6, w1, w0
  4155e8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4155ec:	add	x1, x0, #0xe03
  4155f0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4155f4:	add	x5, x0, #0xc88
  4155f8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4155fc:	add	x4, x0, #0x940
  415600:	mov	w3, #0x769                 	// #1897
  415604:	mov	x2, x1
  415608:	ldr	w1, [sp, #116]
  41560c:	mov	w0, w6
  415610:	bl	406590 <log_internal_realm@plt>
  415614:	mov	w19, w0
  415618:	b	4157a4 <vl_method_synchronize+0x438>
  41561c:	ldr	w0, [sp, #116]
  415620:	cmp	w0, #0x0
  415624:	cneg	w0, w0, lt  // lt = tstop
  415628:	and	w0, w0, #0xff
  41562c:	neg	w19, w0
  415630:	b	4157a4 <vl_method_synchronize+0x438>
  415634:	ldr	x0, [sp, #56]
  415638:	bl	406a50 <varlink_ref@plt>
  41563c:	ldr	x0, [sp, #136]
  415640:	mov	x1, #0xf                   	// #15
  415644:	bl	406380 <sd_event_source_set_priority@plt>
  415648:	str	w0, [sp, #84]
  41564c:	ldr	w0, [sp, #84]
  415650:	cmp	w0, #0x0
  415654:	b.ge	4156e4 <vl_method_synchronize+0x378>  // b.tcont
  415658:	mov	w0, #0x3                   	// #3
  41565c:	str	w0, [sp, #100]
  415660:	ldr	w0, [sp, #84]
  415664:	str	w0, [sp, #104]
  415668:	str	wzr, [sp, #108]
  41566c:	ldr	w0, [sp, #108]
  415670:	bl	406c30 <log_get_max_level_realm@plt>
  415674:	mov	w1, w0
  415678:	ldr	w0, [sp, #100]
  41567c:	and	w0, w0, #0x7
  415680:	cmp	w1, w0
  415684:	b.lt	4156cc <vl_method_synchronize+0x360>  // b.tstop
  415688:	ldr	w0, [sp, #108]
  41568c:	lsl	w1, w0, #10
  415690:	ldr	w0, [sp, #100]
  415694:	orr	w6, w1, w0
  415698:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41569c:	add	x1, x0, #0xe03
  4156a0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4156a4:	add	x5, x0, #0xcb8
  4156a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4156ac:	add	x4, x0, #0x940
  4156b0:	mov	w3, #0x76f                 	// #1903
  4156b4:	mov	x2, x1
  4156b8:	ldr	w1, [sp, #104]
  4156bc:	mov	w0, w6
  4156c0:	bl	406590 <log_internal_realm@plt>
  4156c4:	mov	w19, w0
  4156c8:	b	4157a4 <vl_method_synchronize+0x438>
  4156cc:	ldr	w0, [sp, #104]
  4156d0:	cmp	w0, #0x0
  4156d4:	cneg	w0, w0, lt  // lt = tstop
  4156d8:	and	w0, w0, #0xff
  4156dc:	neg	w19, w0
  4156e0:	b	4157a4 <vl_method_synchronize+0x438>
  4156e4:	ldr	x0, [sp, #136]
  4156e8:	mov	w1, #0x1                   	// #1
  4156ec:	bl	4062d0 <sd_event_source_set_floating@plt>
  4156f0:	str	w0, [sp, #84]
  4156f4:	ldr	w0, [sp, #84]
  4156f8:	cmp	w0, #0x0
  4156fc:	b.ge	41578c <vl_method_synchronize+0x420>  // b.tcont
  415700:	mov	w0, #0x3                   	// #3
  415704:	str	w0, [sp, #88]
  415708:	ldr	w0, [sp, #84]
  41570c:	str	w0, [sp, #92]
  415710:	str	wzr, [sp, #96]
  415714:	ldr	w0, [sp, #96]
  415718:	bl	406c30 <log_get_max_level_realm@plt>
  41571c:	mov	w1, w0
  415720:	ldr	w0, [sp, #88]
  415724:	and	w0, w0, #0x7
  415728:	cmp	w1, w0
  41572c:	b.lt	415774 <vl_method_synchronize+0x408>  // b.tstop
  415730:	ldr	w0, [sp, #96]
  415734:	lsl	w1, w0, #10
  415738:	ldr	w0, [sp, #88]
  41573c:	orr	w6, w1, w0
  415740:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415744:	add	x1, x0, #0xe03
  415748:	adrp	x0, 429000 <__func__.11909+0x1280>
  41574c:	add	x5, x0, #0xce8
  415750:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415754:	add	x4, x0, #0x940
  415758:	mov	w3, #0x775                 	// #1909
  41575c:	mov	x2, x1
  415760:	ldr	w1, [sp, #92]
  415764:	mov	w0, w6
  415768:	bl	406590 <log_internal_realm@plt>
  41576c:	mov	w19, w0
  415770:	b	4157a4 <vl_method_synchronize+0x438>
  415774:	ldr	w0, [sp, #92]
  415778:	cmp	w0, #0x0
  41577c:	cneg	w0, w0, lt  // lt = tstop
  415780:	and	w0, w0, #0xff
  415784:	neg	w19, w0
  415788:	b	4157a4 <vl_method_synchronize+0x438>
  41578c:	ldr	x2, [sp, #136]
  415790:	adrp	x0, 429000 <__func__.11909+0x1280>
  415794:	add	x1, x0, #0xd18
  415798:	mov	x0, x2
  41579c:	bl	406bf0 <sd_event_source_set_description@plt>
  4157a0:	mov	w19, #0x0                   	// #0
  4157a4:	add	x0, sp, #0x88
  4157a8:	bl	409558 <sd_event_source_unrefp>
  4157ac:	mov	w1, w19
  4157b0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4157b4:	ldr	x0, [x0, #4064]
  4157b8:	ldr	x2, [sp, #152]
  4157bc:	ldr	x0, [x0]
  4157c0:	eor	x0, x2, x0
  4157c4:	cmp	x0, #0x0
  4157c8:	b.eq	4157d0 <vl_method_synchronize+0x464>  // b.none
  4157cc:	bl	4063e0 <__stack_chk_fail@plt>
  4157d0:	mov	w0, w1
  4157d4:	ldr	x19, [sp, #16]
  4157d8:	ldp	x29, x30, [sp], #160
  4157dc:	ret

00000000004157e0 <vl_method_rotate>:
  4157e0:	stp	x29, x30, [sp, #-80]!
  4157e4:	mov	x29, sp
  4157e8:	str	x0, [sp, #40]
  4157ec:	str	x1, [sp, #32]
  4157f0:	str	w2, [sp, #28]
  4157f4:	str	x3, [sp, #16]
  4157f8:	ldr	x0, [sp, #16]
  4157fc:	str	x0, [sp, #72]
  415800:	ldr	x0, [sp, #40]
  415804:	cmp	x0, #0x0
  415808:	cset	w0, eq  // eq = none
  41580c:	and	w0, w0, #0xff
  415810:	and	x0, x0, #0xff
  415814:	cmp	x0, #0x0
  415818:	b.eq	415844 <vl_method_rotate+0x64>  // b.none
  41581c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415820:	add	x1, x0, #0xe03
  415824:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415828:	add	x4, x0, #0x958
  41582c:	mov	w3, #0x77f                 	// #1919
  415830:	mov	x2, x1
  415834:	adrp	x0, 429000 <__func__.11909+0x1280>
  415838:	add	x1, x0, #0xbd0
  41583c:	mov	w0, #0x0                   	// #0
  415840:	bl	405fd0 <log_assert_failed_realm@plt>
  415844:	ldr	x0, [sp, #72]
  415848:	cmp	x0, #0x0
  41584c:	cset	w0, eq  // eq = none
  415850:	and	w0, w0, #0xff
  415854:	and	x0, x0, #0xff
  415858:	cmp	x0, #0x0
  41585c:	b.eq	415888 <vl_method_rotate+0xa8>  // b.none
  415860:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415864:	add	x1, x0, #0xe03
  415868:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41586c:	add	x4, x0, #0x958
  415870:	mov	w3, #0x780                 	// #1920
  415874:	mov	x2, x1
  415878:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41587c:	add	x1, x0, #0xec8
  415880:	mov	w0, #0x0                   	// #0
  415884:	bl	405fd0 <log_assert_failed_realm@plt>
  415888:	ldr	x0, [sp, #32]
  41588c:	bl	406700 <json_variant_elements@plt>
  415890:	cmp	x0, #0x0
  415894:	b.eq	4158a8 <vl_method_rotate+0xc8>  // b.none
  415898:	ldr	x1, [sp, #32]
  41589c:	ldr	x0, [sp, #40]
  4158a0:	bl	406bc0 <varlink_error_invalid_parameter@plt>
  4158a4:	b	415930 <vl_method_rotate+0x150>
  4158a8:	mov	w0, #0x6                   	// #6
  4158ac:	str	w0, [sp, #60]
  4158b0:	str	wzr, [sp, #64]
  4158b4:	str	wzr, [sp, #68]
  4158b8:	ldr	w0, [sp, #68]
  4158bc:	bl	406c30 <log_get_max_level_realm@plt>
  4158c0:	mov	w1, w0
  4158c4:	ldr	w0, [sp, #60]
  4158c8:	and	w0, w0, #0x7
  4158cc:	cmp	w1, w0
  4158d0:	b.lt	415914 <vl_method_rotate+0x134>  // b.tstop
  4158d4:	ldr	w0, [sp, #68]
  4158d8:	lsl	w1, w0, #10
  4158dc:	ldr	w0, [sp, #60]
  4158e0:	orr	w6, w1, w0
  4158e4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4158e8:	add	x1, x0, #0xe03
  4158ec:	adrp	x0, 429000 <__func__.11909+0x1280>
  4158f0:	add	x5, x0, #0xc28
  4158f4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4158f8:	add	x4, x0, #0x970
  4158fc:	mov	w3, #0x785                 	// #1925
  415900:	mov	x2, x1
  415904:	ldr	w1, [sp, #64]
  415908:	mov	w0, w6
  41590c:	bl	406590 <log_internal_realm@plt>
  415910:	b	41591c <vl_method_rotate+0x13c>
  415914:	ldr	w0, [sp, #64]
  415918:	cmp	w0, #0x0
  41591c:	ldr	x0, [sp, #72]
  415920:	bl	412e00 <server_full_rotate>
  415924:	mov	x1, #0x0                   	// #0
  415928:	ldr	x0, [sp, #40]
  41592c:	bl	406950 <varlink_reply@plt>
  415930:	ldp	x29, x30, [sp], #80
  415934:	ret

0000000000415938 <vl_method_flush_to_var>:
  415938:	stp	x29, x30, [sp, #-80]!
  41593c:	mov	x29, sp
  415940:	str	x0, [sp, #40]
  415944:	str	x1, [sp, #32]
  415948:	str	w2, [sp, #28]
  41594c:	str	x3, [sp, #16]
  415950:	ldr	x0, [sp, #16]
  415954:	str	x0, [sp, #72]
  415958:	ldr	x0, [sp, #40]
  41595c:	cmp	x0, #0x0
  415960:	cset	w0, eq  // eq = none
  415964:	and	w0, w0, #0xff
  415968:	and	x0, x0, #0xff
  41596c:	cmp	x0, #0x0
  415970:	b.eq	41599c <vl_method_flush_to_var+0x64>  // b.none
  415974:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415978:	add	x1, x0, #0xe03
  41597c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415980:	add	x4, x0, #0x988
  415984:	mov	w3, #0x78e                 	// #1934
  415988:	mov	x2, x1
  41598c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415990:	add	x1, x0, #0xbd0
  415994:	mov	w0, #0x0                   	// #0
  415998:	bl	405fd0 <log_assert_failed_realm@plt>
  41599c:	ldr	x0, [sp, #72]
  4159a0:	cmp	x0, #0x0
  4159a4:	cset	w0, eq  // eq = none
  4159a8:	and	w0, w0, #0xff
  4159ac:	and	x0, x0, #0xff
  4159b0:	cmp	x0, #0x0
  4159b4:	b.eq	4159e0 <vl_method_flush_to_var+0xa8>  // b.none
  4159b8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4159bc:	add	x1, x0, #0xe03
  4159c0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4159c4:	add	x4, x0, #0x988
  4159c8:	mov	w3, #0x78f                 	// #1935
  4159cc:	mov	x2, x1
  4159d0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4159d4:	add	x1, x0, #0xec8
  4159d8:	mov	w0, #0x0                   	// #0
  4159dc:	bl	405fd0 <log_assert_failed_realm@plt>
  4159e0:	ldr	x0, [sp, #32]
  4159e4:	bl	406700 <json_variant_elements@plt>
  4159e8:	cmp	x0, #0x0
  4159ec:	b.eq	415a00 <vl_method_flush_to_var+0xc8>  // b.none
  4159f0:	ldr	x1, [sp, #32]
  4159f4:	ldr	x0, [sp, #40]
  4159f8:	bl	406bc0 <varlink_error_invalid_parameter@plt>
  4159fc:	b	415a88 <vl_method_flush_to_var+0x150>
  415a00:	mov	w0, #0x6                   	// #6
  415a04:	str	w0, [sp, #60]
  415a08:	str	wzr, [sp, #64]
  415a0c:	str	wzr, [sp, #68]
  415a10:	ldr	w0, [sp, #68]
  415a14:	bl	406c30 <log_get_max_level_realm@plt>
  415a18:	mov	w1, w0
  415a1c:	ldr	w0, [sp, #60]
  415a20:	and	w0, w0, #0x7
  415a24:	cmp	w1, w0
  415a28:	b.lt	415a6c <vl_method_flush_to_var+0x134>  // b.tstop
  415a2c:	ldr	w0, [sp, #68]
  415a30:	lsl	w1, w0, #10
  415a34:	ldr	w0, [sp, #60]
  415a38:	orr	w6, w1, w0
  415a3c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415a40:	add	x1, x0, #0xe03
  415a44:	adrp	x0, 429000 <__func__.11909+0x1280>
  415a48:	add	x5, x0, #0xd28
  415a4c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415a50:	add	x4, x0, #0x9a0
  415a54:	mov	w3, #0x794                 	// #1940
  415a58:	mov	x2, x1
  415a5c:	ldr	w1, [sp, #64]
  415a60:	mov	w0, w6
  415a64:	bl	406590 <log_internal_realm@plt>
  415a68:	b	415a74 <vl_method_flush_to_var+0x13c>
  415a6c:	ldr	w0, [sp, #64]
  415a70:	cmp	w0, #0x0
  415a74:	ldr	x0, [sp, #72]
  415a78:	bl	412c84 <server_full_flush>
  415a7c:	mov	x1, #0x0                   	// #0
  415a80:	ldr	x0, [sp, #40]
  415a84:	bl	406950 <varlink_reply@plt>
  415a88:	ldp	x29, x30, [sp], #80
  415a8c:	ret

0000000000415a90 <vl_method_relinquish_var>:
  415a90:	stp	x29, x30, [sp, #-80]!
  415a94:	mov	x29, sp
  415a98:	str	x0, [sp, #40]
  415a9c:	str	x1, [sp, #32]
  415aa0:	str	w2, [sp, #28]
  415aa4:	str	x3, [sp, #16]
  415aa8:	ldr	x0, [sp, #16]
  415aac:	str	x0, [sp, #72]
  415ab0:	ldr	x0, [sp, #40]
  415ab4:	cmp	x0, #0x0
  415ab8:	cset	w0, eq  // eq = none
  415abc:	and	w0, w0, #0xff
  415ac0:	and	x0, x0, #0xff
  415ac4:	cmp	x0, #0x0
  415ac8:	b.eq	415af4 <vl_method_relinquish_var+0x64>  // b.none
  415acc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415ad0:	add	x1, x0, #0xe03
  415ad4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415ad8:	add	x4, x0, #0x9b8
  415adc:	mov	w3, #0x79d                 	// #1949
  415ae0:	mov	x2, x1
  415ae4:	adrp	x0, 429000 <__func__.11909+0x1280>
  415ae8:	add	x1, x0, #0xbd0
  415aec:	mov	w0, #0x0                   	// #0
  415af0:	bl	405fd0 <log_assert_failed_realm@plt>
  415af4:	ldr	x0, [sp, #72]
  415af8:	cmp	x0, #0x0
  415afc:	cset	w0, eq  // eq = none
  415b00:	and	w0, w0, #0xff
  415b04:	and	x0, x0, #0xff
  415b08:	cmp	x0, #0x0
  415b0c:	b.eq	415b38 <vl_method_relinquish_var+0xa8>  // b.none
  415b10:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415b14:	add	x1, x0, #0xe03
  415b18:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415b1c:	add	x4, x0, #0x9b8
  415b20:	mov	w3, #0x79e                 	// #1950
  415b24:	mov	x2, x1
  415b28:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415b2c:	add	x1, x0, #0xec8
  415b30:	mov	w0, #0x0                   	// #0
  415b34:	bl	405fd0 <log_assert_failed_realm@plt>
  415b38:	ldr	x0, [sp, #32]
  415b3c:	bl	406700 <json_variant_elements@plt>
  415b40:	cmp	x0, #0x0
  415b44:	b.eq	415b58 <vl_method_relinquish_var+0xc8>  // b.none
  415b48:	ldr	x1, [sp, #32]
  415b4c:	ldr	x0, [sp, #40]
  415b50:	bl	406bc0 <varlink_error_invalid_parameter@plt>
  415b54:	b	415be0 <vl_method_relinquish_var+0x150>
  415b58:	mov	w0, #0x6                   	// #6
  415b5c:	str	w0, [sp, #60]
  415b60:	str	wzr, [sp, #64]
  415b64:	str	wzr, [sp, #68]
  415b68:	ldr	w0, [sp, #68]
  415b6c:	bl	406c30 <log_get_max_level_realm@plt>
  415b70:	mov	w1, w0
  415b74:	ldr	w0, [sp, #60]
  415b78:	and	w0, w0, #0x7
  415b7c:	cmp	w1, w0
  415b80:	b.lt	415bc4 <vl_method_relinquish_var+0x134>  // b.tstop
  415b84:	ldr	w0, [sp, #68]
  415b88:	lsl	w1, w0, #10
  415b8c:	ldr	w0, [sp, #60]
  415b90:	orr	w6, w1, w0
  415b94:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415b98:	add	x1, x0, #0xe03
  415b9c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415ba0:	add	x5, x0, #0xd60
  415ba4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415ba8:	add	x4, x0, #0x9d8
  415bac:	mov	w3, #0x7a3                 	// #1955
  415bb0:	mov	x2, x1
  415bb4:	ldr	w1, [sp, #64]
  415bb8:	mov	w0, w6
  415bbc:	bl	406590 <log_internal_realm@plt>
  415bc0:	b	415bcc <vl_method_relinquish_var+0x13c>
  415bc4:	ldr	w0, [sp, #64]
  415bc8:	cmp	w0, #0x0
  415bcc:	ldr	x0, [sp, #72]
  415bd0:	bl	412174 <server_relinquish_var>
  415bd4:	mov	x1, #0x0                   	// #0
  415bd8:	ldr	x0, [sp, #40]
  415bdc:	bl	406950 <varlink_reply@plt>
  415be0:	ldp	x29, x30, [sp], #80
  415be4:	ret

0000000000415be8 <server_open_varlink>:
  415be8:	sub	sp, sp, #0x40
  415bec:	stp	x29, x30, [sp, #16]
  415bf0:	add	x29, sp, #0x10
  415bf4:	str	x0, [sp, #40]
  415bf8:	ldr	x0, [sp, #40]
  415bfc:	cmp	x0, #0x0
  415c00:	cset	w0, eq  // eq = none
  415c04:	and	w0, w0, #0xff
  415c08:	and	x0, x0, #0xff
  415c0c:	cmp	x0, #0x0
  415c10:	b.eq	415c3c <server_open_varlink+0x54>  // b.none
  415c14:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415c18:	add	x1, x0, #0xe03
  415c1c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415c20:	add	x4, x0, #0x9f8
  415c24:	mov	w3, #0x7ac                 	// #1964
  415c28:	mov	x2, x1
  415c2c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415c30:	add	x1, x0, #0xec8
  415c34:	mov	w0, #0x0                   	// #0
  415c38:	bl	405fd0 <log_assert_failed_realm@plt>
  415c3c:	ldr	x0, [sp, #40]
  415c40:	add	x0, x0, #0x2f8
  415c44:	mov	w1, #0x1                   	// #1
  415c48:	bl	405d40 <varlink_server_new@plt>
  415c4c:	str	w0, [sp, #60]
  415c50:	ldr	w0, [sp, #60]
  415c54:	cmp	w0, #0x0
  415c58:	b.ge	415c64 <server_open_varlink+0x7c>  // b.tcont
  415c5c:	ldr	w0, [sp, #60]
  415c60:	b	415d54 <server_open_varlink+0x16c>
  415c64:	ldr	x0, [sp, #40]
  415c68:	ldr	x0, [x0, #760]
  415c6c:	ldr	x1, [sp, #40]
  415c70:	bl	4065e0 <varlink_server_set_userdata@plt>
  415c74:	ldr	x0, [sp, #40]
  415c78:	ldr	x8, [x0, #760]
  415c7c:	str	xzr, [sp, #8]
  415c80:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  415c84:	add	x0, x0, #0xa90
  415c88:	str	x0, [sp]
  415c8c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415c90:	add	x7, x0, #0xd98
  415c94:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  415c98:	add	x6, x0, #0x938
  415c9c:	adrp	x0, 429000 <__func__.11909+0x1280>
  415ca0:	add	x5, x0, #0xdc0
  415ca4:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  415ca8:	add	x4, x0, #0x7e0
  415cac:	adrp	x0, 429000 <__func__.11909+0x1280>
  415cb0:	add	x3, x0, #0xde0
  415cb4:	adrp	x0, 415000 <server_connect_notify+0x3ac>
  415cb8:	add	x2, x0, #0x36c
  415cbc:	adrp	x0, 429000 <__func__.11909+0x1280>
  415cc0:	add	x1, x0, #0xe00
  415cc4:	mov	x0, x8
  415cc8:	bl	405dd0 <varlink_server_bind_method_many_internal@plt>
  415ccc:	str	w0, [sp, #60]
  415cd0:	ldr	w0, [sp, #60]
  415cd4:	cmp	w0, #0x0
  415cd8:	b.ge	415ce4 <server_open_varlink+0xfc>  // b.tcont
  415cdc:	ldr	w0, [sp, #60]
  415ce0:	b	415d54 <server_open_varlink+0x16c>
  415ce4:	ldr	x0, [sp, #40]
  415ce8:	ldr	x3, [x0, #760]
  415cec:	mov	w2, #0x180                 	// #384
  415cf0:	adrp	x0, 429000 <__func__.11909+0x1280>
  415cf4:	add	x1, x0, #0xe20
  415cf8:	mov	x0, x3
  415cfc:	bl	405f60 <varlink_server_listen_address@plt>
  415d00:	str	w0, [sp, #60]
  415d04:	ldr	w0, [sp, #60]
  415d08:	cmp	w0, #0x0
  415d0c:	b.ge	415d18 <server_open_varlink+0x130>  // b.tcont
  415d10:	ldr	w0, [sp, #60]
  415d14:	b	415d54 <server_open_varlink+0x16c>
  415d18:	ldr	x0, [sp, #40]
  415d1c:	ldr	x3, [x0, #760]
  415d20:	ldr	x0, [sp, #40]
  415d24:	ldr	x0, [x0, #32]
  415d28:	mov	x2, #0x0                   	// #0
  415d2c:	mov	x1, x0
  415d30:	mov	x0, x3
  415d34:	bl	406940 <varlink_server_attach_event@plt>
  415d38:	str	w0, [sp, #60]
  415d3c:	ldr	w0, [sp, #60]
  415d40:	cmp	w0, #0x0
  415d44:	b.ge	415d50 <server_open_varlink+0x168>  // b.tcont
  415d48:	ldr	w0, [sp, #60]
  415d4c:	b	415d54 <server_open_varlink+0x16c>
  415d50:	mov	w0, #0x0                   	// #0
  415d54:	ldp	x29, x30, [sp, #16]
  415d58:	add	sp, sp, #0x40
  415d5c:	ret

0000000000415d60 <server_init>:
  415d60:	sub	sp, sp, #0x3c0
  415d64:	stp	x29, x30, [sp]
  415d68:	mov	x29, sp
  415d6c:	stp	x19, x20, [sp, #16]
  415d70:	str	x0, [sp, #40]
  415d74:	adrp	x0, 441000 <wordlist.9471+0x208>
  415d78:	ldr	x0, [x0, #4064]
  415d7c:	ldr	x1, [x0]
  415d80:	str	x1, [sp, #952]
  415d84:	mov	x1, #0x0                   	// #0
  415d88:	str	xzr, [sp, #176]
  415d8c:	ldr	x0, [sp, #40]
  415d90:	cmp	x0, #0x0
  415d94:	cset	w0, eq  // eq = none
  415d98:	and	w0, w0, #0xff
  415d9c:	and	x0, x0, #0xff
  415da0:	cmp	x0, #0x0
  415da4:	b.eq	415dd0 <server_init+0x70>  // b.none
  415da8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415dac:	add	x1, x0, #0xe03
  415db0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415db4:	add	x4, x0, #0xa10
  415db8:	mov	w3, #0x7cd                 	// #1997
  415dbc:	mov	x2, x1
  415dc0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415dc4:	add	x1, x0, #0xec8
  415dc8:	mov	w0, #0x0                   	// #0
  415dcc:	bl	405fd0 <log_assert_failed_realm@plt>
  415dd0:	ldr	x0, [sp, #40]
  415dd4:	mov	x3, x0
  415dd8:	mov	x0, #0x300                 	// #768
  415ddc:	mov	x2, x0
  415de0:	mov	w1, #0x0                   	// #0
  415de4:	mov	x0, x3
  415de8:	bl	406c20 <memset@plt>
  415dec:	ldr	x0, [sp, #40]
  415df0:	mov	w1, #0xffffffff            	// #-1
  415df4:	str	w1, [x0]
  415df8:	ldr	x0, [sp, #40]
  415dfc:	mov	w1, #0xffffffff            	// #-1
  415e00:	str	w1, [x0, #4]
  415e04:	ldr	x0, [sp, #40]
  415e08:	mov	w1, #0xffffffff            	// #-1
  415e0c:	str	w1, [x0, #8]
  415e10:	ldr	x0, [sp, #40]
  415e14:	mov	w1, #0xffffffff            	// #-1
  415e18:	str	w1, [x0, #12]
  415e1c:	ldr	x0, [sp, #40]
  415e20:	mov	w1, #0xffffffff            	// #-1
  415e24:	str	w1, [x0, #16]
  415e28:	ldr	x0, [sp, #40]
  415e2c:	mov	w1, #0xffffffff            	// #-1
  415e30:	str	w1, [x0, #20]
  415e34:	ldr	x0, [sp, #40]
  415e38:	mov	w1, #0xffffffff            	// #-1
  415e3c:	str	w1, [x0, #24]
  415e40:	ldr	x0, [sp, #40]
  415e44:	mov	x1, #0xa300                	// #41728
  415e48:	movk	x1, #0x11e1, lsl #16
  415e4c:	str	x1, [x0, #208]
  415e50:	ldr	x0, [sp, #40]
  415e54:	mov	x1, #0xc380                	// #50048
  415e58:	movk	x1, #0x1c9, lsl #16
  415e5c:	str	x1, [x0, #216]
  415e60:	ldr	x0, [sp, #40]
  415e64:	mov	w1, #0x2710                	// #10000
  415e68:	str	w1, [x0, #224]
  415e6c:	ldr	x0, [sp, #40]
  415e70:	adrp	x1, 429000 <__func__.11909+0x1280>
  415e74:	add	x1, x1, #0xe48
  415e78:	str	x1, [x0, #232]
  415e7c:	ldr	x0, [sp, #40]
  415e80:	adrp	x1, 429000 <__func__.11909+0x1280>
  415e84:	add	x1, x1, #0xe58
  415e88:	str	x1, [x0, #336]
  415e8c:	ldr	x0, [sp, #40]
  415e90:	mov	w1, #0x1                   	// #1
  415e94:	strb	w1, [x0, #440]
  415e98:	ldr	x0, [sp, #40]
  415e9c:	mov	x1, #0xffffffffffffffff    	// #-1
  415ea0:	str	x1, [x0, #448]
  415ea4:	ldr	x0, [sp, #40]
  415ea8:	mov	w1, #0x1                   	// #1
  415eac:	strb	w1, [x0, #456]
  415eb0:	ldr	x0, [sp, #40]
  415eb4:	mov	w1, #0x1                   	// #1
  415eb8:	strb	w1, [x0, #457]
  415ebc:	ldr	x0, [sp, #40]
  415ec0:	mov	w1, #0x1                   	// #1
  415ec4:	strb	w1, [x0, #461]
  415ec8:	ldr	x0, [sp, #40]
  415ecc:	mov	x1, #0x7a00                	// #31232
  415ed0:	movk	x1, #0x4c4b, lsl #16
  415ed4:	movk	x1, #0x264, lsl #32
  415ed8:	str	x1, [x0, #488]
  415edc:	ldr	x0, [sp, #40]
  415ee0:	mov	w1, #0x7                   	// #7
  415ee4:	str	w1, [x0, #536]
  415ee8:	ldr	x0, [sp, #40]
  415eec:	mov	w1, #0x7                   	// #7
  415ef0:	str	w1, [x0, #540]
  415ef4:	ldr	x0, [sp, #40]
  415ef8:	mov	w1, #0x5                   	// #5
  415efc:	str	w1, [x0, #544]
  415f00:	ldr	x0, [sp, #40]
  415f04:	mov	w1, #0x6                   	// #6
  415f08:	str	w1, [x0, #548]
  415f0c:	ldr	x0, [sp, #40]
  415f10:	mov	x1, #0xffffffffffffffff    	// #-1
  415f14:	str	x1, [x0, #696]
  415f18:	ldr	x0, [sp, #40]
  415f1c:	mov	x1, #0xc000                	// #49152
  415f20:	str	x1, [x0, #712]
  415f24:	ldr	x0, [sp, #40]
  415f28:	add	x0, x0, #0x160
  415f2c:	bl	405df0 <journal_reset_metrics@plt>
  415f30:	ldr	x0, [sp, #40]
  415f34:	add	x0, x0, #0xf8
  415f38:	bl	405df0 <journal_reset_metrics@plt>
  415f3c:	ldr	x0, [sp, #40]
  415f40:	bl	413e2c <server_parse_config_file>
  415f44:	mov	w2, #0x1                   	// #1
  415f48:	ldr	x1, [sp, #40]
  415f4c:	adrp	x0, 413000 <dispatch_sigusr2+0xb8>
  415f50:	add	x0, x0, #0x550
  415f54:	bl	406820 <proc_cmdline_parse@plt>
  415f58:	str	w0, [sp, #60]
  415f5c:	ldr	w0, [sp, #60]
  415f60:	cmp	w0, #0x0
  415f64:	b.ge	415fe0 <server_init+0x280>  // b.tcont
  415f68:	mov	w0, #0x4                   	// #4
  415f6c:	str	w0, [sp, #64]
  415f70:	ldr	w0, [sp, #60]
  415f74:	str	w0, [sp, #68]
  415f78:	str	wzr, [sp, #72]
  415f7c:	ldr	w0, [sp, #72]
  415f80:	bl	406c30 <log_get_max_level_realm@plt>
  415f84:	mov	w1, w0
  415f88:	ldr	w0, [sp, #64]
  415f8c:	and	w0, w0, #0x7
  415f90:	cmp	w1, w0
  415f94:	b.lt	415fd8 <server_init+0x278>  // b.tstop
  415f98:	ldr	w0, [sp, #72]
  415f9c:	lsl	w1, w0, #10
  415fa0:	ldr	w0, [sp, #64]
  415fa4:	orr	w6, w1, w0
  415fa8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  415fac:	add	x1, x0, #0xe03
  415fb0:	adrp	x0, 429000 <__func__.11909+0x1280>
  415fb4:	add	x5, x0, #0xe68
  415fb8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  415fbc:	add	x4, x0, #0xa20
  415fc0:	mov	w3, #0x7fc                 	// #2044
  415fc4:	mov	x2, x1
  415fc8:	ldr	w1, [sp, #68]
  415fcc:	mov	w0, w6
  415fd0:	bl	406590 <log_internal_realm@plt>
  415fd4:	b	415fe0 <server_init+0x280>
  415fd8:	ldr	w0, [sp, #68]
  415fdc:	cmp	w0, #0x0
  415fe0:	ldr	x0, [sp, #40]
  415fe4:	ldr	x0, [x0, #216]
  415fe8:	cmp	x0, #0x0
  415fec:	cset	w0, ne  // ne = any
  415ff0:	and	w1, w0, #0xff
  415ff4:	ldr	x0, [sp, #40]
  415ff8:	ldr	w0, [x0, #224]
  415ffc:	cmp	w0, #0x0
  416000:	cset	w0, ne  // ne = any
  416004:	and	w0, w0, #0xff
  416008:	eor	w0, w1, w0
  41600c:	and	w0, w0, #0xff
  416010:	cmp	w0, #0x0
  416014:	b.eq	4160b4 <server_init+0x354>  // b.none
  416018:	mov	w0, #0x7                   	// #7
  41601c:	str	w0, [sp, #76]
  416020:	str	wzr, [sp, #80]
  416024:	str	wzr, [sp, #84]
  416028:	ldr	w0, [sp, #84]
  41602c:	bl	406c30 <log_get_max_level_realm@plt>
  416030:	mov	w1, w0
  416034:	ldr	w0, [sp, #76]
  416038:	and	w0, w0, #0x7
  41603c:	cmp	w1, w0
  416040:	b.lt	41609c <server_init+0x33c>  // b.tstop
  416044:	ldr	w0, [sp, #84]
  416048:	lsl	w1, w0, #10
  41604c:	ldr	w0, [sp, #76]
  416050:	orr	w8, w1, w0
  416054:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416058:	add	x1, x0, #0xe03
  41605c:	ldr	x0, [sp, #40]
  416060:	ldr	x2, [x0, #216]
  416064:	ldr	x0, [sp, #40]
  416068:	ldr	w0, [x0, #224]
  41606c:	mov	w7, w0
  416070:	mov	x6, x2
  416074:	adrp	x0, 429000 <__func__.11909+0x1280>
  416078:	add	x5, x0, #0xea0
  41607c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416080:	add	x4, x0, #0xa20
  416084:	mov	w3, #0x7ff                 	// #2047
  416088:	mov	x2, x1
  41608c:	ldr	w1, [sp, #80]
  416090:	mov	w0, w8
  416094:	bl	406590 <log_internal_realm@plt>
  416098:	b	4160a4 <server_init+0x344>
  41609c:	ldr	w0, [sp, #80]
  4160a0:	cmp	w0, #0x0
  4160a4:	ldr	x0, [sp, #40]
  4160a8:	str	wzr, [x0, #224]
  4160ac:	ldr	x0, [sp, #40]
  4160b0:	str	xzr, [x0, #216]
  4160b4:	mov	w1, #0x1ed                 	// #493
  4160b8:	adrp	x0, 429000 <__func__.11909+0x1280>
  4160bc:	add	x0, x0, #0xee0
  4160c0:	bl	406a60 <mkdir_p@plt>
  4160c4:	mov	x0, #0x0                   	// #0
  4160c8:	bl	405cf0 <internal_ordered_hashmap_new@plt>
  4160cc:	mov	x1, x0
  4160d0:	ldr	x0, [sp, #40]
  4160d4:	str	x1, [x0, #168]
  4160d8:	ldr	x0, [sp, #40]
  4160dc:	ldr	x0, [x0, #168]
  4160e0:	cmp	x0, #0x0
  4160e4:	b.ne	41610c <server_init+0x3ac>  // b.any
  4160e8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4160ec:	add	x1, x0, #0xe03
  4160f0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4160f4:	add	x3, x0, #0xa20
  4160f8:	mov	w2, #0x808                 	// #2056
  4160fc:	mov	w0, #0x0                   	// #0
  416100:	bl	406b70 <log_oom_internal@plt>
  416104:	mov	w19, w0
  416108:	b	416a4c <server_init+0xcec>
  41610c:	bl	406a90 <mmap_cache_new@plt>
  416110:	mov	x1, x0
  416114:	ldr	x0, [sp, #40]
  416118:	str	x1, [x0, #568]
  41611c:	ldr	x0, [sp, #40]
  416120:	ldr	x0, [x0, #568]
  416124:	cmp	x0, #0x0
  416128:	b.ne	416150 <server_init+0x3f0>  // b.any
  41612c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416130:	add	x1, x0, #0xe03
  416134:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416138:	add	x3, x0, #0xa20
  41613c:	mov	w2, #0x80c                 	// #2060
  416140:	mov	w0, #0x0                   	// #0
  416144:	bl	406b70 <log_oom_internal@plt>
  416148:	mov	w19, w0
  41614c:	b	416a4c <server_init+0xcec>
  416150:	mov	x0, #0x0                   	// #0
  416154:	bl	406350 <internal_set_new@plt>
  416158:	mov	x1, x0
  41615c:	ldr	x0, [sp, #40]
  416160:	str	x1, [x0, #576]
  416164:	ldr	x0, [sp, #40]
  416168:	ldr	x0, [x0, #576]
  41616c:	cmp	x0, #0x0
  416170:	b.ne	416198 <server_init+0x438>  // b.any
  416174:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416178:	add	x1, x0, #0xe03
  41617c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416180:	add	x3, x0, #0xa20
  416184:	mov	w2, #0x810                 	// #2064
  416188:	mov	w0, #0x0                   	// #0
  41618c:	bl	406b70 <log_oom_internal@plt>
  416190:	mov	w19, w0
  416194:	b	416a4c <server_init+0xcec>
  416198:	ldr	x0, [sp, #40]
  41619c:	add	x0, x0, #0x20
  4161a0:	bl	405d50 <sd_event_default@plt>
  4161a4:	str	w0, [sp, #60]
  4161a8:	ldr	w0, [sp, #60]
  4161ac:	cmp	w0, #0x0
  4161b0:	b.ge	416240 <server_init+0x4e0>  // b.tcont
  4161b4:	mov	w0, #0x3                   	// #3
  4161b8:	str	w0, [sp, #164]
  4161bc:	ldr	w0, [sp, #60]
  4161c0:	str	w0, [sp, #168]
  4161c4:	str	wzr, [sp, #172]
  4161c8:	ldr	w0, [sp, #172]
  4161cc:	bl	406c30 <log_get_max_level_realm@plt>
  4161d0:	mov	w1, w0
  4161d4:	ldr	w0, [sp, #164]
  4161d8:	and	w0, w0, #0x7
  4161dc:	cmp	w1, w0
  4161e0:	b.lt	416228 <server_init+0x4c8>  // b.tstop
  4161e4:	ldr	w0, [sp, #172]
  4161e8:	lsl	w1, w0, #10
  4161ec:	ldr	w0, [sp, #164]
  4161f0:	orr	w6, w1, w0
  4161f4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4161f8:	add	x1, x0, #0xe03
  4161fc:	adrp	x0, 429000 <__func__.11909+0x1280>
  416200:	add	x5, x0, #0xef8
  416204:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416208:	add	x4, x0, #0xa20
  41620c:	mov	w3, #0x814                 	// #2068
  416210:	mov	x2, x1
  416214:	ldr	w1, [sp, #168]
  416218:	mov	w0, w6
  41621c:	bl	406590 <log_internal_realm@plt>
  416220:	mov	w19, w0
  416224:	b	416a4c <server_init+0xcec>
  416228:	ldr	w0, [sp, #168]
  41622c:	cmp	w0, #0x0
  416230:	cneg	w0, w0, lt  // lt = tstop
  416234:	and	w0, w0, #0xff
  416238:	neg	w19, w0
  41623c:	b	416a4c <server_init+0xcec>
  416240:	mov	w0, #0x1                   	// #1
  416244:	bl	406070 <sd_listen_fds@plt>
  416248:	str	w0, [sp, #88]
  41624c:	ldr	w0, [sp, #88]
  416250:	cmp	w0, #0x0
  416254:	b.ge	4162e4 <server_init+0x584>  // b.tcont
  416258:	mov	w0, #0x3                   	// #3
  41625c:	str	w0, [sp, #152]
  416260:	ldr	w0, [sp, #88]
  416264:	str	w0, [sp, #156]
  416268:	str	wzr, [sp, #160]
  41626c:	ldr	w0, [sp, #160]
  416270:	bl	406c30 <log_get_max_level_realm@plt>
  416274:	mov	w1, w0
  416278:	ldr	w0, [sp, #152]
  41627c:	and	w0, w0, #0x7
  416280:	cmp	w1, w0
  416284:	b.lt	4162cc <server_init+0x56c>  // b.tstop
  416288:	ldr	w0, [sp, #160]
  41628c:	lsl	w1, w0, #10
  416290:	ldr	w0, [sp, #152]
  416294:	orr	w6, w1, w0
  416298:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41629c:	add	x1, x0, #0xe03
  4162a0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4162a4:	add	x5, x0, #0xf18
  4162a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4162ac:	add	x4, x0, #0xa20
  4162b0:	mov	w3, #0x818                 	// #2072
  4162b4:	mov	x2, x1
  4162b8:	ldr	w1, [sp, #156]
  4162bc:	mov	w0, w6
  4162c0:	bl	406590 <log_internal_realm@plt>
  4162c4:	mov	w19, w0
  4162c8:	b	416a4c <server_init+0xcec>
  4162cc:	ldr	w0, [sp, #156]
  4162d0:	cmp	w0, #0x0
  4162d4:	cneg	w0, w0, lt  // lt = tstop
  4162d8:	and	w0, w0, #0xff
  4162dc:	neg	w19, w0
  4162e0:	b	416a4c <server_init+0xcec>
  4162e4:	mov	w0, #0x3                   	// #3
  4162e8:	str	w0, [sp, #56]
  4162ec:	b	4166ec <server_init+0x98c>
  4162f0:	mov	x4, #0x0                   	// #0
  4162f4:	adrp	x0, 429000 <__func__.11909+0x1280>
  4162f8:	add	x3, x0, #0xf58
  4162fc:	mov	w2, #0xffffffff            	// #-1
  416300:	mov	w1, #0x2                   	// #2
  416304:	ldr	w0, [sp, #56]
  416308:	bl	4069e0 <sd_is_socket_unix@plt>
  41630c:	cmp	w0, #0x0
  416310:	b.le	4163c4 <server_init+0x664>
  416314:	ldr	x0, [sp, #40]
  416318:	ldr	w0, [x0, #4]
  41631c:	cmp	w0, #0x0
  416320:	b.lt	4163b4 <server_init+0x654>  // b.tstop
  416324:	mov	w0, #0x3                   	// #3
  416328:	str	w0, [sp, #140]
  41632c:	mov	w0, #0x16                  	// #22
  416330:	movk	w0, #0x4000, lsl #16
  416334:	str	w0, [sp, #144]
  416338:	str	wzr, [sp, #148]
  41633c:	ldr	w0, [sp, #148]
  416340:	bl	406c30 <log_get_max_level_realm@plt>
  416344:	mov	w1, w0
  416348:	ldr	w0, [sp, #140]
  41634c:	and	w0, w0, #0x7
  416350:	cmp	w1, w0
  416354:	b.lt	41639c <server_init+0x63c>  // b.tstop
  416358:	ldr	w0, [sp, #148]
  41635c:	lsl	w1, w0, #10
  416360:	ldr	w0, [sp, #140]
  416364:	orr	w6, w1, w0
  416368:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  41636c:	add	x1, x0, #0xe03
  416370:	adrp	x0, 429000 <__func__.11909+0x1280>
  416374:	add	x5, x0, #0xf78
  416378:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41637c:	add	x4, x0, #0xa20
  416380:	mov	w3, #0x81f                 	// #2079
  416384:	mov	x2, x1
  416388:	ldr	w1, [sp, #144]
  41638c:	mov	w0, w6
  416390:	bl	406590 <log_internal_realm@plt>
  416394:	mov	w19, w0
  416398:	b	416a4c <server_init+0xcec>
  41639c:	ldr	w0, [sp, #144]
  4163a0:	cmp	w0, #0x0
  4163a4:	cneg	w0, w0, lt  // lt = tstop
  4163a8:	and	w0, w0, #0xff
  4163ac:	neg	w19, w0
  4163b0:	b	416a4c <server_init+0xcec>
  4163b4:	ldr	x0, [sp, #40]
  4163b8:	ldr	w1, [sp, #56]
  4163bc:	str	w1, [x0, #4]
  4163c0:	b	4166e0 <server_init+0x980>
  4163c4:	mov	x4, #0x0                   	// #0
  4163c8:	adrp	x0, 429000 <__func__.11909+0x1280>
  4163cc:	add	x3, x0, #0xf98
  4163d0:	mov	w2, #0x1                   	// #1
  4163d4:	mov	w1, #0x1                   	// #1
  4163d8:	ldr	w0, [sp, #56]
  4163dc:	bl	4069e0 <sd_is_socket_unix@plt>
  4163e0:	cmp	w0, #0x0
  4163e4:	b.le	416498 <server_init+0x738>
  4163e8:	ldr	x0, [sp, #40]
  4163ec:	ldr	w0, [x0, #8]
  4163f0:	cmp	w0, #0x0
  4163f4:	b.lt	416488 <server_init+0x728>  // b.tstop
  4163f8:	mov	w0, #0x3                   	// #3
  4163fc:	str	w0, [sp, #128]
  416400:	mov	w0, #0x16                  	// #22
  416404:	movk	w0, #0x4000, lsl #16
  416408:	str	w0, [sp, #132]
  41640c:	str	wzr, [sp, #136]
  416410:	ldr	w0, [sp, #136]
  416414:	bl	406c30 <log_get_max_level_realm@plt>
  416418:	mov	w1, w0
  41641c:	ldr	w0, [sp, #128]
  416420:	and	w0, w0, #0x7
  416424:	cmp	w1, w0
  416428:	b.lt	416470 <server_init+0x710>  // b.tstop
  41642c:	ldr	w0, [sp, #136]
  416430:	lsl	w1, w0, #10
  416434:	ldr	w0, [sp, #128]
  416438:	orr	w6, w1, w0
  41643c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416440:	add	x1, x0, #0xe03
  416444:	adrp	x0, 429000 <__func__.11909+0x1280>
  416448:	add	x5, x0, #0xfb8
  41644c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416450:	add	x4, x0, #0xa20
  416454:	mov	w3, #0x827                 	// #2087
  416458:	mov	x2, x1
  41645c:	ldr	w1, [sp, #132]
  416460:	mov	w0, w6
  416464:	bl	406590 <log_internal_realm@plt>
  416468:	mov	w19, w0
  41646c:	b	416a4c <server_init+0xcec>
  416470:	ldr	w0, [sp, #132]
  416474:	cmp	w0, #0x0
  416478:	cneg	w0, w0, lt  // lt = tstop
  41647c:	and	w0, w0, #0xff
  416480:	neg	w19, w0
  416484:	b	416a4c <server_init+0xcec>
  416488:	ldr	x0, [sp, #40]
  41648c:	ldr	w1, [sp, #56]
  416490:	str	w1, [x0, #8]
  416494:	b	4166e0 <server_init+0x980>
  416498:	mov	x4, #0x0                   	// #0
  41649c:	adrp	x0, 429000 <__func__.11909+0x1280>
  4164a0:	add	x3, x0, #0xfd8
  4164a4:	mov	w2, #0xffffffff            	// #-1
  4164a8:	mov	w1, #0x2                   	// #2
  4164ac:	ldr	w0, [sp, #56]
  4164b0:	bl	4069e0 <sd_is_socket_unix@plt>
  4164b4:	cmp	w0, #0x0
  4164b8:	b.gt	4164e0 <server_init+0x780>
  4164bc:	mov	x4, #0x0                   	// #0
  4164c0:	adrp	x0, 429000 <__func__.11909+0x1280>
  4164c4:	add	x3, x0, #0xfe8
  4164c8:	mov	w2, #0xffffffff            	// #-1
  4164cc:	mov	w1, #0x2                   	// #2
  4164d0:	ldr	w0, [sp, #56]
  4164d4:	bl	4069e0 <sd_is_socket_unix@plt>
  4164d8:	cmp	w0, #0x0
  4164dc:	b.le	416590 <server_init+0x830>
  4164e0:	ldr	x0, [sp, #40]
  4164e4:	ldr	w0, [x0]
  4164e8:	cmp	w0, #0x0
  4164ec:	b.lt	416580 <server_init+0x820>  // b.tstop
  4164f0:	mov	w0, #0x3                   	// #3
  4164f4:	str	w0, [sp, #116]
  4164f8:	mov	w0, #0x16                  	// #22
  4164fc:	movk	w0, #0x4000, lsl #16
  416500:	str	w0, [sp, #120]
  416504:	str	wzr, [sp, #124]
  416508:	ldr	w0, [sp, #124]
  41650c:	bl	406c30 <log_get_max_level_realm@plt>
  416510:	mov	w1, w0
  416514:	ldr	w0, [sp, #116]
  416518:	and	w0, w0, #0x7
  41651c:	cmp	w1, w0
  416520:	b.lt	416568 <server_init+0x808>  // b.tstop
  416524:	ldr	w0, [sp, #124]
  416528:	lsl	w1, w0, #10
  41652c:	ldr	w0, [sp, #116]
  416530:	orr	w6, w1, w0
  416534:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416538:	add	x1, x0, #0xe03
  41653c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416540:	add	x5, x0, #0x8
  416544:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416548:	add	x4, x0, #0xa20
  41654c:	mov	w3, #0x830                 	// #2096
  416550:	mov	x2, x1
  416554:	ldr	w1, [sp, #120]
  416558:	mov	w0, w6
  41655c:	bl	406590 <log_internal_realm@plt>
  416560:	mov	w19, w0
  416564:	b	416a4c <server_init+0xcec>
  416568:	ldr	w0, [sp, #120]
  41656c:	cmp	w0, #0x0
  416570:	cneg	w0, w0, lt  // lt = tstop
  416574:	and	w0, w0, #0xff
  416578:	neg	w19, w0
  41657c:	b	416a4c <server_init+0xcec>
  416580:	ldr	x0, [sp, #40]
  416584:	ldr	w1, [sp, #56]
  416588:	str	w1, [x0]
  41658c:	b	4166e0 <server_init+0x980>
  416590:	mov	w3, #0xffffffff            	// #-1
  416594:	mov	w2, #0x3                   	// #3
  416598:	mov	w1, #0x10                  	// #16
  41659c:	ldr	w0, [sp, #56]
  4165a0:	bl	405ff0 <sd_is_socket@plt>
  4165a4:	cmp	w0, #0x0
  4165a8:	b.le	41665c <server_init+0x8fc>
  4165ac:	ldr	x0, [sp, #40]
  4165b0:	ldr	w0, [x0, #16]
  4165b4:	cmp	w0, #0x0
  4165b8:	b.lt	41664c <server_init+0x8ec>  // b.tstop
  4165bc:	mov	w0, #0x3                   	// #3
  4165c0:	str	w0, [sp, #104]
  4165c4:	mov	w0, #0x16                  	// #22
  4165c8:	movk	w0, #0x4000, lsl #16
  4165cc:	str	w0, [sp, #108]
  4165d0:	str	wzr, [sp, #112]
  4165d4:	ldr	w0, [sp, #112]
  4165d8:	bl	406c30 <log_get_max_level_realm@plt>
  4165dc:	mov	w1, w0
  4165e0:	ldr	w0, [sp, #104]
  4165e4:	and	w0, w0, #0x7
  4165e8:	cmp	w1, w0
  4165ec:	b.lt	416634 <server_init+0x8d4>  // b.tstop
  4165f0:	ldr	w0, [sp, #112]
  4165f4:	lsl	w1, w0, #10
  4165f8:	ldr	w0, [sp, #104]
  4165fc:	orr	w6, w1, w0
  416600:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416604:	add	x1, x0, #0xe03
  416608:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41660c:	add	x5, x0, #0x30
  416610:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416614:	add	x4, x0, #0xa20
  416618:	mov	w3, #0x838                 	// #2104
  41661c:	mov	x2, x1
  416620:	ldr	w1, [sp, #108]
  416624:	mov	w0, w6
  416628:	bl	406590 <log_internal_realm@plt>
  41662c:	mov	w19, w0
  416630:	b	416a4c <server_init+0xcec>
  416634:	ldr	w0, [sp, #108]
  416638:	cmp	w0, #0x0
  41663c:	cneg	w0, w0, lt  // lt = tstop
  416640:	and	w0, w0, #0xff
  416644:	neg	w19, w0
  416648:	b	416a4c <server_init+0xcec>
  41664c:	ldr	x0, [sp, #40]
  416650:	ldr	w1, [sp, #56]
  416654:	str	w1, [x0, #16]
  416658:	b	4166e0 <server_init+0x980>
  41665c:	ldr	x0, [sp, #176]
  416660:	cmp	x0, #0x0
  416664:	b.ne	4166a0 <server_init+0x940>  // b.any
  416668:	bl	406630 <fdset_new@plt>
  41666c:	str	x0, [sp, #176]
  416670:	ldr	x0, [sp, #176]
  416674:	cmp	x0, #0x0
  416678:	b.ne	4166a0 <server_init+0x940>  // b.any
  41667c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416680:	add	x1, x0, #0xe03
  416684:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416688:	add	x3, x0, #0xa20
  41668c:	mov	w2, #0x842                 	// #2114
  416690:	mov	w0, #0x0                   	// #0
  416694:	bl	406b70 <log_oom_internal@plt>
  416698:	mov	w19, w0
  41669c:	b	416a4c <server_init+0xcec>
  4166a0:	ldr	x0, [sp, #176]
  4166a4:	ldr	w1, [sp, #56]
  4166a8:	bl	406970 <fdset_put@plt>
  4166ac:	str	w0, [sp, #60]
  4166b0:	ldr	w0, [sp, #60]
  4166b4:	cmp	w0, #0x0
  4166b8:	b.ge	4166e0 <server_init+0x980>  // b.tcont
  4166bc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4166c0:	add	x1, x0, #0xe03
  4166c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4166c8:	add	x3, x0, #0xa20
  4166cc:	mov	w2, #0x847                 	// #2119
  4166d0:	mov	w0, #0x0                   	// #0
  4166d4:	bl	406b70 <log_oom_internal@plt>
  4166d8:	mov	w19, w0
  4166dc:	b	416a4c <server_init+0xcec>
  4166e0:	ldr	w0, [sp, #56]
  4166e4:	add	w0, w0, #0x1
  4166e8:	str	w0, [sp, #56]
  4166ec:	ldr	w0, [sp, #88]
  4166f0:	add	w0, w0, #0x2
  4166f4:	ldr	w1, [sp, #56]
  4166f8:	cmp	w1, w0
  4166fc:	b.le	4162f0 <server_init+0x590>
  416700:	ldr	x0, [sp, #176]
  416704:	mov	x1, x0
  416708:	ldr	x0, [sp, #40]
  41670c:	bl	41ad08 <server_restore_streams>
  416710:	ldr	x0, [sp, #176]
  416714:	bl	406300 <fdset_size@plt>
  416718:	cmp	w0, #0x0
  41671c:	b.eq	4167ac <server_init+0xa4c>  // b.none
  416720:	mov	w0, #0x4                   	// #4
  416724:	str	w0, [sp, #92]
  416728:	str	wzr, [sp, #96]
  41672c:	str	wzr, [sp, #100]
  416730:	ldr	w0, [sp, #100]
  416734:	bl	406c30 <log_get_max_level_realm@plt>
  416738:	mov	w1, w0
  41673c:	ldr	w0, [sp, #92]
  416740:	and	w0, w0, #0x7
  416744:	cmp	w1, w0
  416748:	b.lt	416798 <server_init+0xa38>  // b.tstop
  41674c:	ldr	w0, [sp, #100]
  416750:	lsl	w1, w0, #10
  416754:	ldr	w0, [sp, #92]
  416758:	orr	w19, w1, w0
  41675c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416760:	add	x20, x0, #0xe03
  416764:	ldr	x0, [sp, #176]
  416768:	bl	406300 <fdset_size@plt>
  41676c:	mov	w6, w0
  416770:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416774:	add	x5, x0, #0x50
  416778:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41677c:	add	x4, x0, #0xa20
  416780:	mov	w3, #0x84f                 	// #2127
  416784:	mov	x2, x20
  416788:	ldr	w1, [sp, #96]
  41678c:	mov	w0, w19
  416790:	bl	406590 <log_internal_realm@plt>
  416794:	b	4167a0 <server_init+0xa40>
  416798:	ldr	w0, [sp, #96]
  41679c:	cmp	w0, #0x0
  4167a0:	ldr	x0, [sp, #176]
  4167a4:	bl	406010 <fdset_free@plt>
  4167a8:	str	x0, [sp, #176]
  4167ac:	ldr	x0, [sp, #40]
  4167b0:	ldr	w0, [x0, #4]
  4167b4:	cmp	w0, #0x0
  4167b8:	b.ge	4167f4 <server_init+0xa94>  // b.tcont
  4167bc:	ldr	x0, [sp, #40]
  4167c0:	ldr	w0, [x0, #8]
  4167c4:	cmp	w0, #0x0
  4167c8:	b.ge	4167f4 <server_init+0xa94>  // b.tcont
  4167cc:	ldr	x0, [sp, #40]
  4167d0:	ldr	w0, [x0]
  4167d4:	cmp	w0, #0x0
  4167d8:	b.ge	4167f4 <server_init+0xa94>  // b.tcont
  4167dc:	ldr	x0, [sp, #40]
  4167e0:	ldr	w0, [x0, #16]
  4167e4:	cmp	w0, #0x0
  4167e8:	b.ge	4167f4 <server_init+0xa94>  // b.tcont
  4167ec:	mov	w0, #0x1                   	// #1
  4167f0:	b	4167f8 <server_init+0xa98>
  4167f4:	mov	w0, #0x0                   	// #0
  4167f8:	strb	w0, [sp, #55]
  4167fc:	ldrb	w0, [sp, #55]
  416800:	and	w0, w0, #0x1
  416804:	strb	w0, [sp, #55]
  416808:	ldr	x0, [sp, #40]
  41680c:	bl	41b23c <server_open_stdout_socket>
  416810:	str	w0, [sp, #60]
  416814:	ldr	w0, [sp, #60]
  416818:	cmp	w0, #0x0
  41681c:	b.ge	416828 <server_init+0xac8>  // b.tcont
  416820:	ldr	w19, [sp, #60]
  416824:	b	416a4c <server_init+0xcec>
  416828:	ldr	x0, [sp, #40]
  41682c:	bl	41dcc0 <server_open_syslog_socket>
  416830:	str	w0, [sp, #60]
  416834:	ldr	w0, [sp, #60]
  416838:	cmp	w0, #0x0
  41683c:	b.ge	416848 <server_init+0xae8>  // b.tcont
  416840:	ldr	w19, [sp, #60]
  416844:	b	416a4c <server_init+0xcec>
  416848:	ldr	x0, [sp, #40]
  41684c:	bl	4263d4 <server_open_native_socket>
  416850:	str	w0, [sp, #60]
  416854:	ldr	w0, [sp, #60]
  416858:	cmp	w0, #0x0
  41685c:	b.ge	416868 <server_init+0xb08>  // b.tcont
  416860:	ldr	w19, [sp, #60]
  416864:	b	416a4c <server_init+0xcec>
  416868:	ldr	x0, [sp, #40]
  41686c:	bl	408abc <server_open_dev_kmsg>
  416870:	str	w0, [sp, #60]
  416874:	ldr	w0, [sp, #60]
  416878:	cmp	w0, #0x0
  41687c:	b.ge	416888 <server_init+0xb28>  // b.tcont
  416880:	ldr	w19, [sp, #60]
  416884:	b	416a4c <server_init+0xcec>
  416888:	ldr	x0, [sp, #40]
  41688c:	ldr	w0, [x0, #16]
  416890:	cmp	w0, #0x0
  416894:	b.ge	4168a4 <server_init+0xb44>  // b.tcont
  416898:	ldrb	w0, [sp, #55]
  41689c:	cmp	w0, #0x0
  4168a0:	b.eq	4168c4 <server_init+0xb64>  // b.none
  4168a4:	ldr	x0, [sp, #40]
  4168a8:	bl	420798 <server_open_audit>
  4168ac:	str	w0, [sp, #60]
  4168b0:	ldr	w0, [sp, #60]
  4168b4:	cmp	w0, #0x0
  4168b8:	b.ge	4168c4 <server_init+0xb64>  // b.tcont
  4168bc:	ldr	w19, [sp, #60]
  4168c0:	b	416a4c <server_init+0xcec>
  4168c4:	ldr	x0, [sp, #40]
  4168c8:	bl	415be8 <server_open_varlink>
  4168cc:	str	w0, [sp, #60]
  4168d0:	ldr	w0, [sp, #60]
  4168d4:	cmp	w0, #0x0
  4168d8:	b.ge	4168e4 <server_init+0xb84>  // b.tcont
  4168dc:	ldr	w19, [sp, #60]
  4168e0:	b	416a4c <server_init+0xcec>
  4168e4:	ldr	x0, [sp, #40]
  4168e8:	bl	408ddc <server_open_kernel_seqnum>
  4168ec:	str	w0, [sp, #60]
  4168f0:	ldr	w0, [sp, #60]
  4168f4:	cmp	w0, #0x0
  4168f8:	b.ge	416904 <server_init+0xba4>  // b.tcont
  4168fc:	ldr	w19, [sp, #60]
  416900:	b	416a4c <server_init+0xcec>
  416904:	ldr	x0, [sp, #40]
  416908:	bl	4141a4 <server_open_hostname>
  41690c:	str	w0, [sp, #60]
  416910:	ldr	w0, [sp, #60]
  416914:	cmp	w0, #0x0
  416918:	b.ge	416924 <server_init+0xbc4>  // b.tcont
  41691c:	ldr	w19, [sp, #60]
  416920:	b	416a4c <server_init+0xcec>
  416924:	ldr	x0, [sp, #40]
  416928:	bl	4132c0 <setup_signals>
  41692c:	str	w0, [sp, #60]
  416930:	ldr	w0, [sp, #60]
  416934:	cmp	w0, #0x0
  416938:	b.ge	416944 <server_init+0xbe4>  // b.tcont
  41693c:	ldr	w19, [sp, #60]
  416940:	b	416a4c <server_init+0xcec>
  416944:	bl	4269c0 <journal_ratelimit_new>
  416948:	mov	x1, x0
  41694c:	ldr	x0, [sp, #40]
  416950:	str	x1, [x0, #200]
  416954:	ldr	x0, [sp, #40]
  416958:	ldr	x0, [x0, #200]
  41695c:	cmp	x0, #0x0
  416960:	b.ne	41696c <server_init+0xc0c>  // b.any
  416964:	mov	w19, #0xfffffff4            	// #-12
  416968:	b	416a4c <server_init+0xcec>
  41696c:	ldr	x0, [sp, #40]
  416970:	add	x0, x0, #0x2b0
  416974:	bl	4064a0 <cg_get_root_path@plt>
  416978:	str	w0, [sp, #60]
  41697c:	ldr	w0, [sp, #60]
  416980:	cmp	w0, #0x0
  416984:	b.ge	416990 <server_init+0xc30>  // b.tcont
  416988:	ldr	w19, [sp, #60]
  41698c:	b	416a4c <server_init+0xcec>
  416990:	ldr	x0, [sp, #40]
  416994:	bl	40c9d4 <server_cache_hostname>
  416998:	ldr	x0, [sp, #40]
  41699c:	bl	40c8f4 <server_cache_boot_id>
  4169a0:	ldr	x0, [sp, #40]
  4169a4:	bl	40c814 <server_cache_machine_id>
  4169a8:	ldr	x0, [sp, #40]
  4169ac:	add	x0, x0, #0x251
  4169b0:	add	x0, x0, #0xc
  4169b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4169b8:	mov	x1, x0
  4169bc:	adrp	x0, 428000 <__func__.11909+0x280>
  4169c0:	add	x0, x0, #0x190
  4169c4:	bl	406430 <path_join_internal@plt>
  4169c8:	mov	x1, x0
  4169cc:	ldr	x0, [sp, #40]
  4169d0:	str	x1, [x0, #240]
  4169d4:	ldr	x0, [sp, #40]
  4169d8:	add	x0, x0, #0x251
  4169dc:	add	x0, x0, #0xc
  4169e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4169e4:	mov	x1, x0
  4169e8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4169ec:	add	x0, x0, #0x80
  4169f0:	bl	406430 <path_join_internal@plt>
  4169f4:	mov	x1, x0
  4169f8:	ldr	x0, [sp, #40]
  4169fc:	str	x1, [x0, #344]
  416a00:	ldr	x0, [sp, #40]
  416a04:	ldr	x0, [x0, #240]
  416a08:	cmp	x0, #0x0
  416a0c:	b.eq	416a20 <server_init+0xcc0>  // b.none
  416a10:	ldr	x0, [sp, #40]
  416a14:	ldr	x0, [x0, #344]
  416a18:	cmp	x0, #0x0
  416a1c:	b.ne	416a28 <server_init+0xcc8>  // b.any
  416a20:	mov	w19, #0xfffffff4            	// #-12
  416a24:	b	416a4c <server_init+0xcec>
  416a28:	ldr	x0, [sp, #40]
  416a2c:	bl	414c54 <server_connect_notify>
  416a30:	ldr	x0, [sp, #40]
  416a34:	bl	4243d4 <client_context_acquire_default>
  416a38:	mov	w2, #0x0                   	// #0
  416a3c:	mov	w1, #0x0                   	// #0
  416a40:	ldr	x0, [sp, #40]
  416a44:	bl	40a694 <system_journal_open>
  416a48:	mov	w19, w0
  416a4c:	add	x0, sp, #0xb0
  416a50:	bl	4095ec <fdset_freep>
  416a54:	mov	w1, w19
  416a58:	adrp	x0, 441000 <wordlist.9471+0x208>
  416a5c:	ldr	x0, [x0, #4064]
  416a60:	ldr	x2, [sp, #952]
  416a64:	ldr	x0, [x0]
  416a68:	eor	x0, x2, x0
  416a6c:	cmp	x0, #0x0
  416a70:	b.eq	416a78 <server_init+0xd18>  // b.none
  416a74:	bl	4063e0 <__stack_chk_fail@plt>
  416a78:	mov	w0, w1
  416a7c:	ldp	x19, x20, [sp, #16]
  416a80:	ldp	x29, x30, [sp]
  416a84:	add	sp, sp, #0x3c0
  416a88:	ret

0000000000416a8c <server_maybe_append_tags>:
  416a8c:	sub	sp, sp, #0x10
  416a90:	str	x0, [sp, #8]
  416a94:	nop
  416a98:	add	sp, sp, #0x10
  416a9c:	ret

0000000000416aa0 <server_done>:
  416aa0:	stp	x29, x30, [sp, #-48]!
  416aa4:	mov	x29, sp
  416aa8:	str	x0, [sp, #24]
  416aac:	ldr	x0, [sp, #24]
  416ab0:	cmp	x0, #0x0
  416ab4:	cset	w0, eq  // eq = none
  416ab8:	and	w0, w0, #0xff
  416abc:	and	x0, x0, #0xff
  416ac0:	cmp	x0, #0x0
  416ac4:	b.eq	416af8 <server_done+0x58>  // b.none
  416ac8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416acc:	add	x1, x0, #0xe03
  416ad0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416ad4:	add	x4, x0, #0xa30
  416ad8:	mov	w3, #0x8ab                 	// #2219
  416adc:	mov	x2, x1
  416ae0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416ae4:	add	x1, x0, #0xec8
  416ae8:	mov	w0, #0x0                   	// #0
  416aec:	bl	405fd0 <log_assert_failed_realm@plt>
  416af0:	ldr	x0, [sp, #32]
  416af4:	bl	406030 <journal_file_close@plt>
  416af8:	ldr	x0, [sp, #24]
  416afc:	ldr	x0, [x0, #576]
  416b00:	bl	409398 <set_steal_first>
  416b04:	str	x0, [sp, #32]
  416b08:	ldr	x0, [sp, #32]
  416b0c:	cmp	x0, #0x0
  416b10:	b.ne	416af0 <server_done+0x50>  // b.any
  416b14:	ldr	x0, [sp, #24]
  416b18:	ldr	x0, [x0, #576]
  416b1c:	bl	409334 <set_free>
  416b20:	b	416b30 <server_done+0x90>
  416b24:	ldr	x0, [sp, #24]
  416b28:	ldr	x0, [x0, #504]
  416b2c:	bl	417b4c <stdout_stream_free>
  416b30:	ldr	x0, [sp, #24]
  416b34:	ldr	x0, [x0, #504]
  416b38:	cmp	x0, #0x0
  416b3c:	b.ne	416b24 <server_done+0x84>  // b.any
  416b40:	ldr	x0, [sp, #24]
  416b44:	bl	423d18 <client_context_flush_all>
  416b48:	ldr	x0, [sp, #24]
  416b4c:	ldr	x0, [x0, #160]
  416b50:	bl	406030 <journal_file_close@plt>
  416b54:	ldr	x0, [sp, #24]
  416b58:	ldr	x0, [x0, #152]
  416b5c:	bl	406030 <journal_file_close@plt>
  416b60:	b	416b6c <server_done+0xcc>
  416b64:	ldr	x0, [sp, #40]
  416b68:	bl	406030 <journal_file_close@plt>
  416b6c:	ldr	x0, [sp, #24]
  416b70:	ldr	x0, [x0, #168]
  416b74:	bl	409310 <ordered_hashmap_steal_first>
  416b78:	str	x0, [sp, #40]
  416b7c:	ldr	x0, [sp, #40]
  416b80:	cmp	x0, #0x0
  416b84:	b.ne	416b64 <server_done+0xc4>  // b.any
  416b88:	ldr	x0, [sp, #24]
  416b8c:	ldr	x0, [x0, #168]
  416b90:	bl	4091d0 <ordered_hashmap_free>
  416b94:	ldr	x0, [sp, #24]
  416b98:	ldr	x0, [x0, #760]
  416b9c:	bl	4064c0 <varlink_server_unref@plt>
  416ba0:	ldr	x0, [sp, #24]
  416ba4:	ldr	x0, [x0, #40]
  416ba8:	bl	405ee0 <sd_event_source_unref@plt>
  416bac:	ldr	x0, [sp, #24]
  416bb0:	ldr	x0, [x0, #48]
  416bb4:	bl	405ee0 <sd_event_source_unref@plt>
  416bb8:	ldr	x0, [sp, #24]
  416bbc:	ldr	x0, [x0, #56]
  416bc0:	bl	405ee0 <sd_event_source_unref@plt>
  416bc4:	ldr	x0, [sp, #24]
  416bc8:	ldr	x0, [x0, #64]
  416bcc:	bl	405ee0 <sd_event_source_unref@plt>
  416bd0:	ldr	x0, [sp, #24]
  416bd4:	ldr	x0, [x0, #72]
  416bd8:	bl	405ee0 <sd_event_source_unref@plt>
  416bdc:	ldr	x0, [sp, #24]
  416be0:	ldr	x0, [x0, #80]
  416be4:	bl	405ee0 <sd_event_source_unref@plt>
  416be8:	ldr	x0, [sp, #24]
  416bec:	ldr	x0, [x0, #88]
  416bf0:	bl	405ee0 <sd_event_source_unref@plt>
  416bf4:	ldr	x0, [sp, #24]
  416bf8:	ldr	x0, [x0, #96]
  416bfc:	bl	405ee0 <sd_event_source_unref@plt>
  416c00:	ldr	x0, [sp, #24]
  416c04:	ldr	x0, [x0, #104]
  416c08:	bl	405ee0 <sd_event_source_unref@plt>
  416c0c:	ldr	x0, [sp, #24]
  416c10:	ldr	x0, [x0, #112]
  416c14:	bl	405ee0 <sd_event_source_unref@plt>
  416c18:	ldr	x0, [sp, #24]
  416c1c:	ldr	x0, [x0, #120]
  416c20:	bl	405ee0 <sd_event_source_unref@plt>
  416c24:	ldr	x0, [sp, #24]
  416c28:	ldr	x0, [x0, #128]
  416c2c:	bl	405ee0 <sd_event_source_unref@plt>
  416c30:	ldr	x0, [sp, #24]
  416c34:	ldr	x0, [x0, #136]
  416c38:	bl	405ee0 <sd_event_source_unref@plt>
  416c3c:	ldr	x0, [sp, #24]
  416c40:	ldr	x0, [x0, #144]
  416c44:	bl	405ee0 <sd_event_source_unref@plt>
  416c48:	ldr	x0, [sp, #24]
  416c4c:	ldr	x0, [x0, #32]
  416c50:	bl	406a40 <sd_event_unref@plt>
  416c54:	ldr	x0, [sp, #24]
  416c58:	ldr	w0, [x0]
  416c5c:	bl	405f40 <safe_close@plt>
  416c60:	ldr	x0, [sp, #24]
  416c64:	ldr	w0, [x0, #4]
  416c68:	bl	405f40 <safe_close@plt>
  416c6c:	ldr	x0, [sp, #24]
  416c70:	ldr	w0, [x0, #8]
  416c74:	bl	405f40 <safe_close@plt>
  416c78:	ldr	x0, [sp, #24]
  416c7c:	ldr	w0, [x0, #12]
  416c80:	bl	405f40 <safe_close@plt>
  416c84:	ldr	x0, [sp, #24]
  416c88:	ldr	w0, [x0, #16]
  416c8c:	bl	405f40 <safe_close@plt>
  416c90:	ldr	x0, [sp, #24]
  416c94:	ldr	w0, [x0, #20]
  416c98:	bl	405f40 <safe_close@plt>
  416c9c:	ldr	x0, [sp, #24]
  416ca0:	ldr	w0, [x0, #24]
  416ca4:	bl	405f40 <safe_close@plt>
  416ca8:	ldr	x0, [sp, #24]
  416cac:	ldr	x0, [x0, #200]
  416cb0:	cmp	x0, #0x0
  416cb4:	b.eq	416cc4 <server_done+0x224>  // b.none
  416cb8:	ldr	x0, [sp, #24]
  416cbc:	ldr	x0, [x0, #200]
  416cc0:	bl	426d8c <journal_ratelimit_free>
  416cc4:	ldr	x0, [sp, #24]
  416cc8:	ldr	x0, [x0, #584]
  416ccc:	cmp	x0, #0x0
  416cd0:	b.eq	416ce4 <server_done+0x244>  // b.none
  416cd4:	ldr	x0, [sp, #24]
  416cd8:	ldr	x0, [x0, #584]
  416cdc:	mov	x1, #0x8                   	// #8
  416ce0:	bl	405f70 <munmap@plt>
  416ce4:	ldr	x0, [sp, #24]
  416ce8:	ldr	x0, [x0, #184]
  416cec:	bl	406930 <free@plt>
  416cf0:	ldr	x0, [sp, #24]
  416cf4:	ldr	x0, [x0, #528]
  416cf8:	bl	406930 <free@plt>
  416cfc:	ldr	x0, [sp, #24]
  416d00:	ldr	x0, [x0, #688]
  416d04:	bl	406930 <free@plt>
  416d08:	ldr	x0, [sp, #24]
  416d0c:	ldr	x0, [x0, #680]
  416d10:	bl	406930 <free@plt>
  416d14:	ldr	x0, [sp, #24]
  416d18:	ldr	x0, [x0, #240]
  416d1c:	bl	406930 <free@plt>
  416d20:	ldr	x0, [sp, #24]
  416d24:	ldr	x0, [x0, #344]
  416d28:	bl	406930 <free@plt>
  416d2c:	ldr	x0, [sp, #24]
  416d30:	ldr	x0, [x0, #568]
  416d34:	bl	406180 <mmap_cache_unref@plt>
  416d38:	nop
  416d3c:	ldp	x29, x30, [sp], #48
  416d40:	ret

0000000000416d44 <storage_from_string>:
  416d44:	stp	x29, x30, [sp, #-32]!
  416d48:	mov	x29, sp
  416d4c:	str	x0, [sp, #24]
  416d50:	ldr	x2, [sp, #24]
  416d54:	mov	x1, #0x4                   	// #4
  416d58:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  416d5c:	add	x0, x0, #0xb60
  416d60:	bl	4066c0 <string_table_lookup@plt>
  416d64:	ldp	x29, x30, [sp], #32
  416d68:	ret

0000000000416d6c <config_parse_storage>:
  416d6c:	sub	sp, sp, #0x80
  416d70:	stp	x29, x30, [sp, #16]
  416d74:	add	x29, sp, #0x10
  416d78:	str	x0, [sp, #88]
  416d7c:	str	x1, [sp, #80]
  416d80:	str	w2, [sp, #76]
  416d84:	str	x3, [sp, #64]
  416d88:	str	w4, [sp, #72]
  416d8c:	str	x5, [sp, #56]
  416d90:	str	w6, [sp, #52]
  416d94:	str	x7, [sp, #40]
  416d98:	ldr	x0, [sp, #128]
  416d9c:	str	x0, [sp, #120]
  416da0:	ldr	x0, [sp, #80]
  416da4:	cmp	x0, #0x0
  416da8:	cset	w0, eq  // eq = none
  416dac:	and	w0, w0, #0xff
  416db0:	and	x0, x0, #0xff
  416db4:	cmp	x0, #0x0
  416db8:	b.eq	416de4 <config_parse_storage+0x78>  // b.none
  416dbc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416dc0:	add	x1, x0, #0xe03
  416dc4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416dc8:	add	x4, x0, #0xa40
  416dcc:	mov	w3, #0x8eb                 	// #2283
  416dd0:	mov	x2, x1
  416dd4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416dd8:	add	x1, x0, #0xc8
  416ddc:	mov	w0, #0x0                   	// #0
  416de0:	bl	405fd0 <log_assert_failed_realm@plt>
  416de4:	ldr	x0, [sp, #56]
  416de8:	cmp	x0, #0x0
  416dec:	cset	w0, eq  // eq = none
  416df0:	and	w0, w0, #0xff
  416df4:	and	x0, x0, #0xff
  416df8:	cmp	x0, #0x0
  416dfc:	b.eq	416e28 <config_parse_storage+0xbc>  // b.none
  416e00:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416e04:	add	x1, x0, #0xe03
  416e08:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416e0c:	add	x4, x0, #0xa40
  416e10:	mov	w3, #0x8eb                 	// #2283
  416e14:	mov	x2, x1
  416e18:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416e1c:	add	x1, x0, #0xd8
  416e20:	mov	w0, #0x0                   	// #0
  416e24:	bl	405fd0 <log_assert_failed_realm@plt>
  416e28:	ldr	x0, [sp, #40]
  416e2c:	cmp	x0, #0x0
  416e30:	cset	w0, eq  // eq = none
  416e34:	and	w0, w0, #0xff
  416e38:	and	x0, x0, #0xff
  416e3c:	cmp	x0, #0x0
  416e40:	b.eq	416e6c <config_parse_storage+0x100>  // b.none
  416e44:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416e48:	add	x1, x0, #0xe03
  416e4c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416e50:	add	x4, x0, #0xa40
  416e54:	mov	w3, #0x8eb                 	// #2283
  416e58:	mov	x2, x1
  416e5c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416e60:	add	x1, x0, #0xe0
  416e64:	mov	w0, #0x0                   	// #0
  416e68:	bl	405fd0 <log_assert_failed_realm@plt>
  416e6c:	ldr	x0, [sp, #128]
  416e70:	cmp	x0, #0x0
  416e74:	cset	w0, eq  // eq = none
  416e78:	and	w0, w0, #0xff
  416e7c:	and	x0, x0, #0xff
  416e80:	cmp	x0, #0x0
  416e84:	b.eq	416eb0 <config_parse_storage+0x144>  // b.none
  416e88:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416e8c:	add	x1, x0, #0xe03
  416e90:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416e94:	add	x4, x0, #0xa40
  416e98:	mov	w3, #0x8eb                 	// #2283
  416e9c:	mov	x2, x1
  416ea0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416ea4:	add	x1, x0, #0xe8
  416ea8:	mov	w0, #0x0                   	// #0
  416eac:	bl	405fd0 <log_assert_failed_realm@plt>
  416eb0:	ldr	x0, [sp, #40]
  416eb4:	bl	416d44 <storage_from_string>
  416eb8:	str	w0, [sp, #108]
  416ebc:	ldr	w0, [sp, #108]
  416ec0:	cmp	w0, #0x0
  416ec4:	b.ge	416f48 <config_parse_storage+0x1dc>  // b.tcont
  416ec8:	mov	w0, #0x3                   	// #3
  416ecc:	str	w0, [sp, #112]
  416ed0:	str	wzr, [sp, #116]
  416ed4:	mov	w0, #0x0                   	// #0
  416ed8:	bl	406c30 <log_get_max_level_realm@plt>
  416edc:	mov	w1, w0
  416ee0:	ldr	w0, [sp, #112]
  416ee4:	and	w0, w0, #0x7
  416ee8:	cmp	w1, w0
  416eec:	b.lt	416f38 <config_parse_storage+0x1cc>  // b.tstop
  416ef0:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416ef4:	add	x1, x0, #0xe03
  416ef8:	ldr	x0, [sp, #40]
  416efc:	str	x0, [sp, #8]
  416f00:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416f04:	add	x0, x0, #0xf0
  416f08:	str	x0, [sp]
  416f0c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416f10:	add	x7, x0, #0xa58
  416f14:	mov	w6, #0x8eb                 	// #2283
  416f18:	mov	x5, x1
  416f1c:	ldr	w4, [sp, #116]
  416f20:	ldr	w3, [sp, #76]
  416f24:	ldr	x2, [sp, #80]
  416f28:	ldr	w1, [sp, #112]
  416f2c:	ldr	x0, [sp, #88]
  416f30:	bl	406690 <log_syntax_internal@plt>
  416f34:	b	416f40 <config_parse_storage+0x1d4>
  416f38:	ldr	w0, [sp, #116]
  416f3c:	cmp	w0, #0x0
  416f40:	mov	w0, #0x0                   	// #0
  416f44:	b	416f58 <config_parse_storage+0x1ec>
  416f48:	ldr	x0, [sp, #120]
  416f4c:	ldr	w1, [sp, #108]
  416f50:	str	w1, [x0]
  416f54:	mov	w0, #0x0                   	// #0
  416f58:	ldp	x29, x30, [sp, #16]
  416f5c:	add	sp, sp, #0x80
  416f60:	ret

0000000000416f64 <split_mode_from_string>:
  416f64:	stp	x29, x30, [sp, #-32]!
  416f68:	mov	x29, sp
  416f6c:	str	x0, [sp, #24]
  416f70:	ldr	x2, [sp, #24]
  416f74:	mov	x1, #0x3                   	// #3
  416f78:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  416f7c:	add	x0, x0, #0xb80
  416f80:	bl	4066c0 <string_table_lookup@plt>
  416f84:	ldp	x29, x30, [sp], #32
  416f88:	ret

0000000000416f8c <config_parse_split_mode>:
  416f8c:	sub	sp, sp, #0x80
  416f90:	stp	x29, x30, [sp, #16]
  416f94:	add	x29, sp, #0x10
  416f98:	str	x0, [sp, #88]
  416f9c:	str	x1, [sp, #80]
  416fa0:	str	w2, [sp, #76]
  416fa4:	str	x3, [sp, #64]
  416fa8:	str	w4, [sp, #72]
  416fac:	str	x5, [sp, #56]
  416fb0:	str	w6, [sp, #52]
  416fb4:	str	x7, [sp, #40]
  416fb8:	ldr	x0, [sp, #128]
  416fbc:	str	x0, [sp, #120]
  416fc0:	ldr	x0, [sp, #80]
  416fc4:	cmp	x0, #0x0
  416fc8:	cset	w0, eq  // eq = none
  416fcc:	and	w0, w0, #0xff
  416fd0:	and	x0, x0, #0xff
  416fd4:	cmp	x0, #0x0
  416fd8:	b.eq	417004 <config_parse_split_mode+0x78>  // b.none
  416fdc:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  416fe0:	add	x1, x0, #0xe03
  416fe4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416fe8:	add	x4, x0, #0xa70
  416fec:	mov	w3, #0x8f4                 	// #2292
  416ff0:	mov	x2, x1
  416ff4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  416ff8:	add	x1, x0, #0xc8
  416ffc:	mov	w0, #0x0                   	// #0
  417000:	bl	405fd0 <log_assert_failed_realm@plt>
  417004:	ldr	x0, [sp, #56]
  417008:	cmp	x0, #0x0
  41700c:	cset	w0, eq  // eq = none
  417010:	and	w0, w0, #0xff
  417014:	and	x0, x0, #0xff
  417018:	cmp	x0, #0x0
  41701c:	b.eq	417048 <config_parse_split_mode+0xbc>  // b.none
  417020:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417024:	add	x1, x0, #0xe03
  417028:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41702c:	add	x4, x0, #0xa70
  417030:	mov	w3, #0x8f4                 	// #2292
  417034:	mov	x2, x1
  417038:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41703c:	add	x1, x0, #0xd8
  417040:	mov	w0, #0x0                   	// #0
  417044:	bl	405fd0 <log_assert_failed_realm@plt>
  417048:	ldr	x0, [sp, #40]
  41704c:	cmp	x0, #0x0
  417050:	cset	w0, eq  // eq = none
  417054:	and	w0, w0, #0xff
  417058:	and	x0, x0, #0xff
  41705c:	cmp	x0, #0x0
  417060:	b.eq	41708c <config_parse_split_mode+0x100>  // b.none
  417064:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417068:	add	x1, x0, #0xe03
  41706c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417070:	add	x4, x0, #0xa70
  417074:	mov	w3, #0x8f4                 	// #2292
  417078:	mov	x2, x1
  41707c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417080:	add	x1, x0, #0xe0
  417084:	mov	w0, #0x0                   	// #0
  417088:	bl	405fd0 <log_assert_failed_realm@plt>
  41708c:	ldr	x0, [sp, #128]
  417090:	cmp	x0, #0x0
  417094:	cset	w0, eq  // eq = none
  417098:	and	w0, w0, #0xff
  41709c:	and	x0, x0, #0xff
  4170a0:	cmp	x0, #0x0
  4170a4:	b.eq	4170d0 <config_parse_split_mode+0x144>  // b.none
  4170a8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4170ac:	add	x1, x0, #0xe03
  4170b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4170b4:	add	x4, x0, #0xa70
  4170b8:	mov	w3, #0x8f4                 	// #2292
  4170bc:	mov	x2, x1
  4170c0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4170c4:	add	x1, x0, #0xe8
  4170c8:	mov	w0, #0x0                   	// #0
  4170cc:	bl	405fd0 <log_assert_failed_realm@plt>
  4170d0:	ldr	x0, [sp, #40]
  4170d4:	bl	416f64 <split_mode_from_string>
  4170d8:	str	w0, [sp, #108]
  4170dc:	ldr	w0, [sp, #108]
  4170e0:	cmp	w0, #0x0
  4170e4:	b.ge	417168 <config_parse_split_mode+0x1dc>  // b.tcont
  4170e8:	mov	w0, #0x3                   	// #3
  4170ec:	str	w0, [sp, #112]
  4170f0:	str	wzr, [sp, #116]
  4170f4:	mov	w0, #0x0                   	// #0
  4170f8:	bl	406c30 <log_get_max_level_realm@plt>
  4170fc:	mov	w1, w0
  417100:	ldr	w0, [sp, #112]
  417104:	and	w0, w0, #0x7
  417108:	cmp	w1, w0
  41710c:	b.lt	417158 <config_parse_split_mode+0x1cc>  // b.tstop
  417110:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417114:	add	x1, x0, #0xe03
  417118:	ldr	x0, [sp, #40]
  41711c:	str	x0, [sp, #8]
  417120:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417124:	add	x0, x0, #0x130
  417128:	str	x0, [sp]
  41712c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417130:	add	x7, x0, #0xa88
  417134:	mov	w6, #0x8f4                 	// #2292
  417138:	mov	x5, x1
  41713c:	ldr	w4, [sp, #116]
  417140:	ldr	w3, [sp, #76]
  417144:	ldr	x2, [sp, #80]
  417148:	ldr	w1, [sp, #112]
  41714c:	ldr	x0, [sp, #88]
  417150:	bl	406690 <log_syntax_internal@plt>
  417154:	b	417160 <config_parse_split_mode+0x1d4>
  417158:	ldr	w0, [sp, #116]
  41715c:	cmp	w0, #0x0
  417160:	mov	w0, #0x0                   	// #0
  417164:	b	417178 <config_parse_split_mode+0x1ec>
  417168:	ldr	x0, [sp, #120]
  41716c:	ldr	w1, [sp, #108]
  417170:	str	w1, [x0]
  417174:	mov	w0, #0x0                   	// #0
  417178:	ldp	x29, x30, [sp, #16]
  41717c:	add	sp, sp, #0x80
  417180:	ret

0000000000417184 <config_parse_line_max>:
  417184:	sub	sp, sp, #0xc0
  417188:	stp	x29, x30, [sp, #32]
  41718c:	add	x29, sp, #0x20
  417190:	str	x0, [sp, #120]
  417194:	str	x1, [sp, #112]
  417198:	str	w2, [sp, #108]
  41719c:	str	x3, [sp, #96]
  4171a0:	str	w4, [sp, #104]
  4171a4:	str	x5, [sp, #88]
  4171a8:	str	w6, [sp, #84]
  4171ac:	str	x7, [sp, #72]
  4171b0:	ldr	x0, [sp, #192]
  4171b4:	str	x0, [sp, #64]
  4171b8:	ldr	x0, [sp, #200]
  4171bc:	str	x0, [sp, #56]
  4171c0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4171c4:	ldr	x0, [x0, #4064]
  4171c8:	ldr	x1, [x0]
  4171cc:	str	x1, [sp, #184]
  4171d0:	mov	x1, #0x0                   	// #0
  4171d4:	ldr	x0, [sp, #64]
  4171d8:	str	x0, [sp, #176]
  4171dc:	ldr	x0, [sp, #112]
  4171e0:	cmp	x0, #0x0
  4171e4:	cset	w0, eq  // eq = none
  4171e8:	and	w0, w0, #0xff
  4171ec:	and	x0, x0, #0xff
  4171f0:	cmp	x0, #0x0
  4171f4:	b.eq	417220 <config_parse_line_max+0x9c>  // b.none
  4171f8:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4171fc:	add	x1, x0, #0xe03
  417200:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417204:	add	x4, x0, #0xaa0
  417208:	mov	w3, #0x905                 	// #2309
  41720c:	mov	x2, x1
  417210:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417214:	add	x1, x0, #0xc8
  417218:	mov	w0, #0x0                   	// #0
  41721c:	bl	405fd0 <log_assert_failed_realm@plt>
  417220:	ldr	x0, [sp, #88]
  417224:	cmp	x0, #0x0
  417228:	cset	w0, eq  // eq = none
  41722c:	and	w0, w0, #0xff
  417230:	and	x0, x0, #0xff
  417234:	cmp	x0, #0x0
  417238:	b.eq	417264 <config_parse_line_max+0xe0>  // b.none
  41723c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417240:	add	x1, x0, #0xe03
  417244:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417248:	add	x4, x0, #0xaa0
  41724c:	mov	w3, #0x906                 	// #2310
  417250:	mov	x2, x1
  417254:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417258:	add	x1, x0, #0xd8
  41725c:	mov	w0, #0x0                   	// #0
  417260:	bl	405fd0 <log_assert_failed_realm@plt>
  417264:	ldr	x0, [sp, #72]
  417268:	cmp	x0, #0x0
  41726c:	cset	w0, eq  // eq = none
  417270:	and	w0, w0, #0xff
  417274:	and	x0, x0, #0xff
  417278:	cmp	x0, #0x0
  41727c:	b.eq	4172a8 <config_parse_line_max+0x124>  // b.none
  417280:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417284:	add	x1, x0, #0xe03
  417288:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41728c:	add	x4, x0, #0xaa0
  417290:	mov	w3, #0x907                 	// #2311
  417294:	mov	x2, x1
  417298:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41729c:	add	x1, x0, #0xe0
  4172a0:	mov	w0, #0x0                   	// #0
  4172a4:	bl	405fd0 <log_assert_failed_realm@plt>
  4172a8:	ldr	x0, [sp, #64]
  4172ac:	cmp	x0, #0x0
  4172b0:	cset	w0, eq  // eq = none
  4172b4:	and	w0, w0, #0xff
  4172b8:	and	x0, x0, #0xff
  4172bc:	cmp	x0, #0x0
  4172c0:	b.eq	4172ec <config_parse_line_max+0x168>  // b.none
  4172c4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4172c8:	add	x1, x0, #0xe03
  4172cc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4172d0:	add	x4, x0, #0xaa0
  4172d4:	mov	w3, #0x908                 	// #2312
  4172d8:	mov	x2, x1
  4172dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4172e0:	add	x1, x0, #0xe8
  4172e4:	mov	w0, #0x0                   	// #0
  4172e8:	bl	405fd0 <log_assert_failed_realm@plt>
  4172ec:	ldr	x0, [sp, #72]
  4172f0:	bl	4093bc <isempty>
  4172f4:	and	w0, w0, #0xff
  4172f8:	cmp	w0, #0x0
  4172fc:	b.eq	417310 <config_parse_line_max+0x18c>  // b.none
  417300:	ldr	x0, [sp, #176]
  417304:	mov	x1, #0xc000                	// #49152
  417308:	str	x1, [x0]
  41730c:	b	4174f8 <config_parse_line_max+0x374>
  417310:	add	x0, sp, #0xa8
  417314:	mov	x2, x0
  417318:	mov	x1, #0x400                 	// #1024
  41731c:	ldr	x0, [sp, #72]
  417320:	bl	405d80 <parse_size@plt>
  417324:	str	w0, [sp, #140]
  417328:	ldr	w0, [sp, #140]
  41732c:	cmp	w0, #0x0
  417330:	b.ge	4173b8 <config_parse_line_max+0x234>  // b.tcont
  417334:	mov	w0, #0x3                   	// #3
  417338:	str	w0, [sp, #160]
  41733c:	ldr	w0, [sp, #140]
  417340:	str	w0, [sp, #164]
  417344:	mov	w0, #0x0                   	// #0
  417348:	bl	406c30 <log_get_max_level_realm@plt>
  41734c:	mov	w1, w0
  417350:	ldr	w0, [sp, #160]
  417354:	and	w0, w0, #0x7
  417358:	cmp	w1, w0
  41735c:	b.lt	4173a8 <config_parse_line_max+0x224>  // b.tstop
  417360:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417364:	add	x1, x0, #0xe03
  417368:	ldr	x0, [sp, #72]
  41736c:	str	x0, [sp, #8]
  417370:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417374:	add	x0, x0, #0x168
  417378:	str	x0, [sp]
  41737c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417380:	add	x7, x0, #0xab8
  417384:	mov	w6, #0x912                 	// #2322
  417388:	mov	x5, x1
  41738c:	ldr	w4, [sp, #164]
  417390:	ldr	w3, [sp, #108]
  417394:	ldr	x2, [sp, #112]
  417398:	ldr	w1, [sp, #160]
  41739c:	ldr	x0, [sp, #120]
  4173a0:	bl	406690 <log_syntax_internal@plt>
  4173a4:	b	4173b0 <config_parse_line_max+0x22c>
  4173a8:	ldr	w0, [sp, #164]
  4173ac:	cmp	w0, #0x0
  4173b0:	mov	w0, #0x0                   	// #0
  4173b4:	b	4174fc <config_parse_line_max+0x378>
  4173b8:	ldr	x0, [sp, #168]
  4173bc:	cmp	x0, #0x4e
  4173c0:	b.hi	41744c <config_parse_line_max+0x2c8>  // b.pmore
  4173c4:	mov	w0, #0x4                   	// #4
  4173c8:	str	w0, [sp, #152]
  4173cc:	str	wzr, [sp, #156]
  4173d0:	mov	w0, #0x0                   	// #0
  4173d4:	bl	406c30 <log_get_max_level_realm@plt>
  4173d8:	mov	w1, w0
  4173dc:	ldr	w0, [sp, #152]
  4173e0:	and	w0, w0, #0x7
  4173e4:	cmp	w1, w0
  4173e8:	b.lt	417434 <config_parse_line_max+0x2b0>  // b.tstop
  4173ec:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4173f0:	add	x1, x0, #0xe03
  4173f4:	ldr	x0, [sp, #72]
  4173f8:	str	x0, [sp, #8]
  4173fc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417400:	add	x0, x0, #0x198
  417404:	str	x0, [sp]
  417408:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41740c:	add	x7, x0, #0xab8
  417410:	mov	w6, #0x91a                 	// #2330
  417414:	mov	x5, x1
  417418:	ldr	w4, [sp, #156]
  41741c:	ldr	w3, [sp, #108]
  417420:	ldr	x2, [sp, #112]
  417424:	ldr	w1, [sp, #152]
  417428:	ldr	x0, [sp, #120]
  41742c:	bl	406690 <log_syntax_internal@plt>
  417430:	b	41743c <config_parse_line_max+0x2b8>
  417434:	ldr	w0, [sp, #156]
  417438:	cmp	w0, #0x0
  41743c:	ldr	x0, [sp, #176]
  417440:	mov	x1, #0x4f                  	// #79
  417444:	str	x1, [x0]
  417448:	b	4174f8 <config_parse_line_max+0x374>
  41744c:	ldr	x1, [sp, #168]
  417450:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
  417454:	cmp	x1, x0
  417458:	b.ls	4174ec <config_parse_line_max+0x368>  // b.plast
  41745c:	mov	w0, #0x4                   	// #4
  417460:	str	w0, [sp, #144]
  417464:	str	wzr, [sp, #148]
  417468:	mov	w0, #0x0                   	// #0
  41746c:	bl	406c30 <log_get_max_level_realm@plt>
  417470:	mov	w1, w0
  417474:	ldr	w0, [sp, #144]
  417478:	and	w0, w0, #0x7
  41747c:	cmp	w1, w0
  417480:	b.lt	4174d4 <config_parse_line_max+0x350>  // b.tstop
  417484:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417488:	add	x1, x0, #0xe03
  41748c:	ldr	x0, [sp, #72]
  417490:	str	x0, [sp, #16]
  417494:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
  417498:	str	x0, [sp, #8]
  41749c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4174a0:	add	x0, x0, #0x1c0
  4174a4:	str	x0, [sp]
  4174a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4174ac:	add	x7, x0, #0xab8
  4174b0:	mov	w6, #0x921                 	// #2337
  4174b4:	mov	x5, x1
  4174b8:	ldr	w4, [sp, #148]
  4174bc:	ldr	w3, [sp, #108]
  4174c0:	ldr	x2, [sp, #112]
  4174c4:	ldr	w1, [sp, #144]
  4174c8:	ldr	x0, [sp, #120]
  4174cc:	bl	406690 <log_syntax_internal@plt>
  4174d0:	b	4174dc <config_parse_line_max+0x358>
  4174d4:	ldr	w0, [sp, #148]
  4174d8:	cmp	w0, #0x0
  4174dc:	ldr	x0, [sp, #176]
  4174e0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
  4174e4:	str	x1, [x0]
  4174e8:	b	4174f8 <config_parse_line_max+0x374>
  4174ec:	ldr	x1, [sp, #168]
  4174f0:	ldr	x0, [sp, #176]
  4174f4:	str	x1, [x0]
  4174f8:	mov	w0, #0x0                   	// #0
  4174fc:	mov	w1, w0
  417500:	adrp	x0, 441000 <wordlist.9471+0x208>
  417504:	ldr	x0, [x0, #4064]
  417508:	ldr	x2, [sp, #184]
  41750c:	ldr	x0, [x0]
  417510:	eor	x0, x2, x0
  417514:	cmp	x0, #0x0
  417518:	b.eq	417520 <config_parse_line_max+0x39c>  // b.none
  41751c:	bl	4063e0 <__stack_chk_fail@plt>
  417520:	mov	w0, w1
  417524:	ldp	x29, x30, [sp, #32]
  417528:	add	sp, sp, #0xc0
  41752c:	ret

0000000000417530 <config_parse_compress>:
  417530:	sub	sp, sp, #0x90
  417534:	stp	x29, x30, [sp, #16]
  417538:	add	x29, sp, #0x10
  41753c:	str	x0, [sp, #88]
  417540:	str	x1, [sp, #80]
  417544:	str	w2, [sp, #76]
  417548:	str	x3, [sp, #64]
  41754c:	str	w4, [sp, #72]
  417550:	str	x5, [sp, #56]
  417554:	str	w6, [sp, #52]
  417558:	str	x7, [sp, #40]
  41755c:	ldr	x0, [sp, #144]
  417560:	str	x0, [sp, #136]
  417564:	ldr	x0, [sp, #40]
  417568:	bl	4093bc <isempty>
  41756c:	and	w0, w0, #0xff
  417570:	cmp	w0, #0x0
  417574:	b.eq	417594 <config_parse_compress+0x64>  // b.none
  417578:	ldr	x0, [sp, #136]
  41757c:	mov	w1, #0x1                   	// #1
  417580:	strb	w1, [x0]
  417584:	ldr	x0, [sp, #136]
  417588:	mov	x1, #0xffffffffffffffff    	// #-1
  41758c:	str	x1, [x0, #8]
  417590:	b	4177a8 <config_parse_compress+0x278>
  417594:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417598:	add	x1, x0, #0x1e8
  41759c:	ldr	x0, [sp, #40]
  4175a0:	bl	4066e0 <strcmp@plt>
  4175a4:	cmp	w0, #0x0
  4175a8:	b.ne	41762c <config_parse_compress+0xfc>  // b.any
  4175ac:	mov	w0, #0x4                   	// #4
  4175b0:	str	w0, [sp, #128]
  4175b4:	str	wzr, [sp, #132]
  4175b8:	mov	w0, #0x0                   	// #0
  4175bc:	bl	406c30 <log_get_max_level_realm@plt>
  4175c0:	mov	w1, w0
  4175c4:	ldr	w0, [sp, #128]
  4175c8:	and	w0, w0, #0x7
  4175cc:	cmp	w1, w0
  4175d0:	b.lt	417614 <config_parse_compress+0xe4>  // b.tstop
  4175d4:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  4175d8:	add	x1, x0, #0xe03
  4175dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4175e0:	add	x0, x0, #0x1f0
  4175e4:	str	x0, [sp]
  4175e8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4175ec:	add	x7, x0, #0xad0
  4175f0:	mov	w6, #0x93d                 	// #2365
  4175f4:	mov	x5, x1
  4175f8:	ldr	w4, [sp, #132]
  4175fc:	ldr	w3, [sp, #76]
  417600:	ldr	x2, [sp, #80]
  417604:	ldr	w1, [sp, #128]
  417608:	ldr	x0, [sp, #88]
  41760c:	bl	406690 <log_syntax_internal@plt>
  417610:	b	41761c <config_parse_compress+0xec>
  417614:	ldr	w0, [sp, #132]
  417618:	cmp	w0, #0x0
  41761c:	ldr	x0, [sp, #136]
  417620:	mov	w1, #0x1                   	// #1
  417624:	strb	w1, [x0]
  417628:	b	4177a8 <config_parse_compress+0x278>
  41762c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417630:	add	x1, x0, #0x248
  417634:	ldr	x0, [sp, #40]
  417638:	bl	4066e0 <strcmp@plt>
  41763c:	cmp	w0, #0x0
  417640:	b.ne	4176c0 <config_parse_compress+0x190>  // b.any
  417644:	mov	w0, #0x4                   	// #4
  417648:	str	w0, [sp, #120]
  41764c:	str	wzr, [sp, #124]
  417650:	mov	w0, #0x0                   	// #0
  417654:	bl	406c30 <log_get_max_level_realm@plt>
  417658:	mov	w1, w0
  41765c:	ldr	w0, [sp, #120]
  417660:	and	w0, w0, #0x7
  417664:	cmp	w1, w0
  417668:	b.lt	4176ac <config_parse_compress+0x17c>  // b.tstop
  41766c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417670:	add	x1, x0, #0xe03
  417674:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417678:	add	x0, x0, #0x250
  41767c:	str	x0, [sp]
  417680:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417684:	add	x7, x0, #0xad0
  417688:	mov	w6, #0x941                 	// #2369
  41768c:	mov	x5, x1
  417690:	ldr	w4, [sp, #124]
  417694:	ldr	w3, [sp, #76]
  417698:	ldr	x2, [sp, #80]
  41769c:	ldr	w1, [sp, #120]
  4176a0:	ldr	x0, [sp, #88]
  4176a4:	bl	406690 <log_syntax_internal@plt>
  4176a8:	b	4176b4 <config_parse_compress+0x184>
  4176ac:	ldr	w0, [sp, #124]
  4176b0:	cmp	w0, #0x0
  4176b4:	ldr	x0, [sp, #136]
  4176b8:	strb	wzr, [x0]
  4176bc:	b	4177a8 <config_parse_compress+0x278>
  4176c0:	ldr	x0, [sp, #40]
  4176c4:	bl	405c40 <parse_boolean@plt>
  4176c8:	str	w0, [sp, #108]
  4176cc:	ldr	w0, [sp, #108]
  4176d0:	cmp	w0, #0x0
  4176d4:	b.ge	417790 <config_parse_compress+0x260>  // b.tcont
  4176d8:	ldr	x0, [sp, #136]
  4176dc:	add	x0, x0, #0x8
  4176e0:	mov	x2, x0
  4176e4:	mov	x1, #0x400                 	// #1024
  4176e8:	ldr	x0, [sp, #40]
  4176ec:	bl	405d80 <parse_size@plt>
  4176f0:	str	w0, [sp, #108]
  4176f4:	ldr	w0, [sp, #108]
  4176f8:	cmp	w0, #0x0
  4176fc:	b.ge	417780 <config_parse_compress+0x250>  // b.tcont
  417700:	mov	w0, #0x3                   	// #3
  417704:	str	w0, [sp, #112]
  417708:	ldr	w0, [sp, #108]
  41770c:	str	w0, [sp, #116]
  417710:	mov	w0, #0x0                   	// #0
  417714:	bl	406c30 <log_get_max_level_realm@plt>
  417718:	mov	w1, w0
  41771c:	ldr	w0, [sp, #112]
  417720:	and	w0, w0, #0x7
  417724:	cmp	w1, w0
  417728:	b.lt	417774 <config_parse_compress+0x244>  // b.tstop
  41772c:	adrp	x0, 427000 <journal_ratelimit_group_new+0x94>
  417730:	add	x1, x0, #0xe03
  417734:	ldr	x0, [sp, #40]
  417738:	str	x0, [sp, #8]
  41773c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417740:	add	x0, x0, #0x290
  417744:	str	x0, [sp]
  417748:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41774c:	add	x7, x0, #0xad0
  417750:	mov	w6, #0x949                 	// #2377
  417754:	mov	x5, x1
  417758:	ldr	w4, [sp, #116]
  41775c:	ldr	w3, [sp, #76]
  417760:	ldr	x2, [sp, #80]
  417764:	ldr	w1, [sp, #112]
  417768:	ldr	x0, [sp, #88]
  41776c:	bl	406690 <log_syntax_internal@plt>
  417770:	b	4177a8 <config_parse_compress+0x278>
  417774:	ldr	w0, [sp, #116]
  417778:	cmp	w0, #0x0
  41777c:	b	4177a8 <config_parse_compress+0x278>
  417780:	ldr	x0, [sp, #136]
  417784:	mov	w1, #0x1                   	// #1
  417788:	strb	w1, [x0]
  41778c:	b	4177a8 <config_parse_compress+0x278>
  417790:	ldr	w0, [sp, #108]
  417794:	cmp	w0, #0x0
  417798:	cset	w0, ne  // ne = any
  41779c:	and	w1, w0, #0xff
  4177a0:	ldr	x0, [sp, #136]
  4177a4:	strb	w1, [x0]
  4177a8:	mov	w0, #0x0                   	// #0
  4177ac:	ldp	x29, x30, [sp, #16]
  4177b0:	add	sp, sp, #0x90
  4177b4:	ret

00000000004177b8 <freep>:
  4177b8:	stp	x29, x30, [sp, #-32]!
  4177bc:	mov	x29, sp
  4177c0:	str	x0, [sp, #24]
  4177c4:	ldr	x0, [sp, #24]
  4177c8:	ldr	x0, [x0]
  4177cc:	bl	406930 <free@plt>
  4177d0:	nop
  4177d4:	ldp	x29, x30, [sp], #32
  4177d8:	ret

00000000004177dc <size_multiply_overflow>:
  4177dc:	sub	sp, sp, #0x10
  4177e0:	str	x0, [sp, #8]
  4177e4:	str	x1, [sp]
  4177e8:	ldr	x0, [sp]
  4177ec:	cmp	x0, #0x0
  4177f0:	cset	w0, ne  // ne = any
  4177f4:	and	w0, w0, #0xff
  4177f8:	and	x0, x0, #0xff
  4177fc:	cmp	x0, #0x0
  417800:	b.eq	417844 <size_multiply_overflow+0x68>  // b.none
  417804:	mov	x2, #0x0                   	// #0
  417808:	ldr	x1, [sp, #8]
  41780c:	ldr	x0, [sp]
  417810:	umulh	x0, x1, x0
  417814:	cmp	x0, #0x0
  417818:	b.eq	417820 <size_multiply_overflow+0x44>  // b.none
  41781c:	mov	x2, #0x1                   	// #1
  417820:	mov	x0, x2
  417824:	cmp	x0, #0x0
  417828:	cset	w0, ne  // ne = any
  41782c:	and	w0, w0, #0xff
  417830:	and	x0, x0, #0xff
  417834:	cmp	x0, #0x0
  417838:	b.eq	417844 <size_multiply_overflow+0x68>  // b.none
  41783c:	mov	w0, #0x1                   	// #1
  417840:	b	417848 <size_multiply_overflow+0x6c>
  417844:	mov	w0, #0x0                   	// #0
  417848:	and	w0, w0, #0x1
  41784c:	and	w0, w0, #0xff
  417850:	add	sp, sp, #0x10
  417854:	ret

0000000000417858 <isempty>:
  417858:	sub	sp, sp, #0x10
  41785c:	str	x0, [sp, #8]
  417860:	ldr	x0, [sp, #8]
  417864:	cmp	x0, #0x0
  417868:	b.eq	41787c <isempty+0x24>  // b.none
  41786c:	ldr	x0, [sp, #8]
  417870:	ldrb	w0, [x0]
  417874:	cmp	w0, #0x0
  417878:	b.ne	417884 <isempty+0x2c>  // b.any
  41787c:	mov	w0, #0x1                   	// #1
  417880:	b	417888 <isempty+0x30>
  417884:	mov	w0, #0x0                   	// #0
  417888:	and	w0, w0, #0x1
  41788c:	and	w0, w0, #0xff
  417890:	add	sp, sp, #0x10
  417894:	ret

0000000000417898 <strlen_ptr>:
  417898:	stp	x29, x30, [sp, #-32]!
  41789c:	mov	x29, sp
  4178a0:	str	x0, [sp, #24]
  4178a4:	ldr	x0, [sp, #24]
  4178a8:	cmp	x0, #0x0
  4178ac:	b.ne	4178b8 <strlen_ptr+0x20>  // b.any
  4178b0:	mov	x0, #0x0                   	// #0
  4178b4:	b	4178c0 <strlen_ptr+0x28>
  4178b8:	ldr	x0, [sp, #24]
  4178bc:	bl	406af0 <strlen@plt>
  4178c0:	ldp	x29, x30, [sp], #32
  4178c4:	ret

00000000004178c8 <ERRNO_IS_DISCONNECT>:
  4178c8:	sub	sp, sp, #0x20
  4178cc:	str	w0, [sp, #12]
  4178d0:	strb	wzr, [sp, #31]
  4178d4:	ldr	w0, [sp, #12]
  4178d8:	cmp	w0, #0x0
  4178dc:	cneg	w0, w0, lt  // lt = tstop
  4178e0:	cmp	w0, #0x20
  4178e4:	b.eq	417934 <ERRNO_IS_DISCONNECT+0x6c>  // b.none
  4178e8:	cmp	w0, #0x20
  4178ec:	b.lt	41793c <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  4178f0:	cmp	w0, #0x71
  4178f4:	b.gt	41793c <ERRNO_IS_DISCONNECT+0x74>
  4178f8:	cmp	w0, #0x40
  4178fc:	b.lt	41793c <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  417900:	sub	w0, w0, #0x40
  417904:	mov	x1, #0x1                   	// #1
  417908:	lsl	x1, x1, x0
  41790c:	mov	x0, #0x81                  	// #129
  417910:	movk	x0, #0x1000, lsl #16
  417914:	movk	x0, #0x99f0, lsl #32
  417918:	movk	x0, #0x3, lsl #48
  41791c:	and	x0, x1, x0
  417920:	cmp	x0, #0x0
  417924:	cset	w0, ne  // ne = any
  417928:	and	w0, w0, #0xff
  41792c:	cmp	w0, #0x0
  417930:	b.eq	41793c <ERRNO_IS_DISCONNECT+0x74>  // b.none
  417934:	mov	w0, #0x1                   	// #1
  417938:	strb	w0, [sp, #31]
  41793c:	nop
  417940:	ldrb	w0, [sp, #31]
  417944:	add	sp, sp, #0x20
  417948:	ret

000000000041794c <ERRNO_IS_ACCEPT_AGAIN>:
  41794c:	stp	x29, x30, [sp, #-48]!
  417950:	mov	x29, sp
  417954:	str	w0, [sp, #28]
  417958:	ldr	w0, [sp, #28]
  41795c:	bl	4178c8 <ERRNO_IS_DISCONNECT>
  417960:	and	w0, w0, #0xff
  417964:	cmp	w0, #0x0
  417968:	b.ne	4179b4 <ERRNO_IS_ACCEPT_AGAIN+0x68>  // b.any
  41796c:	strb	wzr, [sp, #47]
  417970:	ldr	w0, [sp, #28]
  417974:	cmp	w0, #0x0
  417978:	cneg	w0, w0, lt  // lt = tstop
  41797c:	cmp	w0, #0x5f
  417980:	b.eq	41799c <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  417984:	cmp	w0, #0x5f
  417988:	b.gt	4179a4 <ERRNO_IS_ACCEPT_AGAIN+0x58>
  41798c:	cmp	w0, #0x4
  417990:	b.eq	41799c <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  417994:	cmp	w0, #0xb
  417998:	b.ne	4179a4 <ERRNO_IS_ACCEPT_AGAIN+0x58>  // b.any
  41799c:	mov	w0, #0x1                   	// #1
  4179a0:	strb	w0, [sp, #47]
  4179a4:	nop
  4179a8:	ldrb	w0, [sp, #47]
  4179ac:	cmp	w0, #0x0
  4179b0:	b.eq	4179bc <ERRNO_IS_ACCEPT_AGAIN+0x70>  // b.none
  4179b4:	mov	w0, #0x1                   	// #1
  4179b8:	b	4179c0 <ERRNO_IS_ACCEPT_AGAIN+0x74>
  4179bc:	mov	w0, #0x0                   	// #0
  4179c0:	and	w0, w0, #0x1
  4179c4:	and	w0, w0, #0xff
  4179c8:	ldp	x29, x30, [sp], #48
  4179cc:	ret

00000000004179d0 <closep>:
  4179d0:	stp	x29, x30, [sp, #-32]!
  4179d4:	mov	x29, sp
  4179d8:	str	x0, [sp, #24]
  4179dc:	ldr	x0, [sp, #24]
  4179e0:	ldr	w0, [x0]
  4179e4:	bl	405f40 <safe_close@plt>
  4179e8:	nop
  4179ec:	ldp	x29, x30, [sp], #32
  4179f0:	ret

00000000004179f4 <fclosep>:
  4179f4:	stp	x29, x30, [sp, #-32]!
  4179f8:	mov	x29, sp
  4179fc:	str	x0, [sp, #24]
  417a00:	ldr	x0, [sp, #24]
  417a04:	ldr	x0, [x0]
  417a08:	bl	405b10 <safe_fclose@plt>
  417a0c:	nop
  417a10:	ldp	x29, x30, [sp], #32
  417a14:	ret

0000000000417a18 <closedirp>:
  417a18:	stp	x29, x30, [sp, #-32]!
  417a1c:	mov	x29, sp
  417a20:	str	x0, [sp, #24]
  417a24:	ldr	x0, [sp, #24]
  417a28:	ldr	x0, [x0]
  417a2c:	cmp	x0, #0x0
  417a30:	b.eq	417a40 <closedirp+0x28>  // b.none
  417a34:	ldr	x0, [sp, #24]
  417a38:	ldr	x0, [x0]
  417a3c:	bl	4060e0 <closedir@plt>
  417a40:	nop
  417a44:	ldp	x29, x30, [sp], #32
  417a48:	ret

0000000000417a4c <client_context_extra_fields_n_iovec>:
  417a4c:	sub	sp, sp, #0x10
  417a50:	str	x0, [sp, #8]
  417a54:	ldr	x0, [sp, #8]
  417a58:	cmp	x0, #0x0
  417a5c:	b.eq	417a6c <client_context_extra_fields_n_iovec+0x20>  // b.none
  417a60:	ldr	x0, [sp, #8]
  417a64:	ldr	x0, [x0, #176]
  417a68:	b	417a70 <client_context_extra_fields_n_iovec+0x24>
  417a6c:	mov	x0, #0x0                   	// #0
  417a70:	add	sp, sp, #0x10
  417a74:	ret

0000000000417a78 <client_context_test_priority>:
  417a78:	sub	sp, sp, #0x10
  417a7c:	str	x0, [sp, #8]
  417a80:	str	w1, [sp, #4]
  417a84:	ldr	x0, [sp, #8]
  417a88:	cmp	x0, #0x0
  417a8c:	b.ne	417a98 <client_context_test_priority+0x20>  // b.any
  417a90:	mov	w0, #0x1                   	// #1
  417a94:	b	417acc <client_context_test_priority+0x54>
  417a98:	ldr	x0, [sp, #8]
  417a9c:	ldr	w0, [x0, #160]
  417aa0:	cmp	w0, #0x0
  417aa4:	b.ge	417ab0 <client_context_test_priority+0x38>  // b.tcont
  417aa8:	mov	w0, #0x1                   	// #1
  417aac:	b	417acc <client_context_test_priority+0x54>
  417ab0:	ldr	w0, [sp, #4]
  417ab4:	and	w1, w0, #0x7
  417ab8:	ldr	x0, [sp, #8]
  417abc:	ldr	w0, [x0, #160]
  417ac0:	cmp	w1, w0
  417ac4:	cset	w0, le
  417ac8:	and	w0, w0, #0xff
  417acc:	add	sp, sp, #0x10
  417ad0:	ret

0000000000417ad4 <pid_is_valid>:
  417ad4:	sub	sp, sp, #0x10
  417ad8:	str	w0, [sp, #12]
  417adc:	ldr	w0, [sp, #12]
  417ae0:	cmp	w0, #0x0
  417ae4:	cset	w0, gt
  417ae8:	and	w0, w0, #0xff
  417aec:	add	sp, sp, #0x10
  417af0:	ret

0000000000417af4 <setsockopt_int>:
  417af4:	stp	x29, x30, [sp, #-32]!
  417af8:	mov	x29, sp
  417afc:	str	w0, [sp, #28]
  417b00:	str	w1, [sp, #24]
  417b04:	str	w2, [sp, #20]
  417b08:	str	w3, [sp, #16]
  417b0c:	add	x0, sp, #0x10
  417b10:	mov	w4, #0x4                   	// #4
  417b14:	mov	x3, x0
  417b18:	ldr	w2, [sp, #20]
  417b1c:	ldr	w1, [sp, #24]
  417b20:	ldr	w0, [sp, #28]
  417b24:	bl	4067c0 <setsockopt@plt>
  417b28:	cmp	w0, #0x0
  417b2c:	b.ge	417b40 <setsockopt_int+0x4c>  // b.tcont
  417b30:	bl	4062e0 <__errno_location@plt>
  417b34:	ldr	w0, [x0]
  417b38:	neg	w0, w0
  417b3c:	b	417b44 <setsockopt_int+0x50>
  417b40:	mov	w0, #0x0                   	// #0
  417b44:	ldp	x29, x30, [sp], #32
  417b48:	ret

0000000000417b4c <stdout_stream_free>:
  417b4c:	stp	x29, x30, [sp, #-64]!
  417b50:	mov	x29, sp
  417b54:	str	x0, [sp, #24]
  417b58:	ldr	x0, [sp, #24]
  417b5c:	cmp	x0, #0x0
  417b60:	b.eq	417edc <stdout_stream_free+0x390>  // b.none
  417b64:	ldr	x0, [sp, #24]
  417b68:	ldr	x0, [x0]
  417b6c:	cmp	x0, #0x0
  417b70:	b.eq	417e50 <stdout_stream_free+0x304>  // b.none
  417b74:	ldr	x0, [sp, #24]
  417b78:	ldr	x0, [x0, #104]
  417b7c:	cmp	x0, #0x0
  417b80:	b.eq	417ba0 <stdout_stream_free+0x54>  // b.none
  417b84:	ldr	x0, [sp, #24]
  417b88:	ldr	x2, [x0]
  417b8c:	ldr	x0, [sp, #24]
  417b90:	ldr	x0, [x0, #104]
  417b94:	mov	x1, x0
  417b98:	mov	x0, x2
  417b9c:	bl	42426c <client_context_release>
  417ba0:	ldr	x0, [sp, #24]
  417ba4:	ldr	x0, [x0]
  417ba8:	ldr	w0, [x0, #520]
  417bac:	cmp	w0, #0x0
  417bb0:	cset	w0, eq  // eq = none
  417bb4:	and	w0, w0, #0xff
  417bb8:	and	x0, x0, #0xff
  417bbc:	cmp	x0, #0x0
  417bc0:	b.eq	417bec <stdout_stream_free+0xa0>  // b.none
  417bc4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417bc8:	add	x1, x0, #0xaeb
  417bcc:	adrp	x0, 42b000 <__func__.15991+0x530>
  417bd0:	add	x4, x0, #0x558
  417bd4:	mov	w3, #0x6a                  	// #106
  417bd8:	mov	x2, x1
  417bdc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417be0:	add	x1, x0, #0xb10
  417be4:	mov	w0, #0x0                   	// #0
  417be8:	bl	405fd0 <log_assert_failed_realm@plt>
  417bec:	ldr	x0, [sp, #24]
  417bf0:	ldr	x0, [x0]
  417bf4:	ldr	w1, [x0, #520]
  417bf8:	sub	w1, w1, #0x1
  417bfc:	str	w1, [x0, #520]
  417c00:	ldr	x0, [sp, #24]
  417c04:	ldr	x0, [x0]
  417c08:	add	x0, x0, #0x1f8
  417c0c:	str	x0, [sp, #32]
  417c10:	ldr	x0, [sp, #24]
  417c14:	str	x0, [sp, #40]
  417c18:	ldr	x0, [sp, #40]
  417c1c:	cmp	x0, #0x0
  417c20:	cset	w0, eq  // eq = none
  417c24:	and	w0, w0, #0xff
  417c28:	and	x0, x0, #0xff
  417c2c:	cmp	x0, #0x0
  417c30:	b.eq	417c5c <stdout_stream_free+0x110>  // b.none
  417c34:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417c38:	add	x1, x0, #0xaeb
  417c3c:	adrp	x0, 42b000 <__func__.15991+0x530>
  417c40:	add	x4, x0, #0x558
  417c44:	mov	w3, #0x6c                  	// #108
  417c48:	mov	x2, x1
  417c4c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417c50:	add	x1, x0, #0xb30
  417c54:	mov	w0, #0x0                   	// #0
  417c58:	bl	405fd0 <log_assert_failed_realm@plt>
  417c5c:	ldr	x0, [sp, #40]
  417c60:	ldr	x0, [x0, #112]
  417c64:	cmp	x0, #0x0
  417c68:	b.eq	417c80 <stdout_stream_free+0x134>  // b.none
  417c6c:	ldr	x0, [sp, #40]
  417c70:	ldr	x0, [x0, #112]
  417c74:	ldr	x1, [sp, #40]
  417c78:	ldr	x1, [x1, #120]
  417c7c:	str	x1, [x0, #120]
  417c80:	ldr	x0, [sp, #40]
  417c84:	ldr	x0, [x0, #120]
  417c88:	cmp	x0, #0x0
  417c8c:	b.eq	417ca8 <stdout_stream_free+0x15c>  // b.none
  417c90:	ldr	x0, [sp, #40]
  417c94:	ldr	x0, [x0, #120]
  417c98:	ldr	x1, [sp, #40]
  417c9c:	ldr	x1, [x1, #112]
  417ca0:	str	x1, [x0, #112]
  417ca4:	b	417d04 <stdout_stream_free+0x1b8>
  417ca8:	ldr	x0, [sp, #32]
  417cac:	ldr	x0, [x0]
  417cb0:	ldr	x1, [sp, #40]
  417cb4:	cmp	x1, x0
  417cb8:	cset	w0, ne  // ne = any
  417cbc:	and	w0, w0, #0xff
  417cc0:	and	x0, x0, #0xff
  417cc4:	cmp	x0, #0x0
  417cc8:	b.eq	417cf4 <stdout_stream_free+0x1a8>  // b.none
  417ccc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417cd0:	add	x1, x0, #0xaeb
  417cd4:	adrp	x0, 42b000 <__func__.15991+0x530>
  417cd8:	add	x4, x0, #0x558
  417cdc:	mov	w3, #0x6c                  	// #108
  417ce0:	mov	x2, x1
  417ce4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417ce8:	add	x1, x0, #0xb38
  417cec:	mov	w0, #0x0                   	// #0
  417cf0:	bl	405fd0 <log_assert_failed_realm@plt>
  417cf4:	ldr	x0, [sp, #40]
  417cf8:	ldr	x1, [x0, #112]
  417cfc:	ldr	x0, [sp, #32]
  417d00:	str	x1, [x0]
  417d04:	ldr	x0, [sp, #40]
  417d08:	str	xzr, [x0, #120]
  417d0c:	ldr	x0, [sp, #40]
  417d10:	ldr	x1, [x0, #120]
  417d14:	ldr	x0, [sp, #40]
  417d18:	str	x1, [x0, #112]
  417d1c:	ldr	x0, [sp, #24]
  417d20:	ldrb	w0, [x0, #60]
  417d24:	and	w0, w0, #0x20
  417d28:	and	w0, w0, #0xff
  417d2c:	cmp	w0, #0x0
  417d30:	b.eq	417e50 <stdout_stream_free+0x304>  // b.none
  417d34:	ldr	x0, [sp, #24]
  417d38:	ldr	x0, [x0]
  417d3c:	add	x0, x0, #0x200
  417d40:	str	x0, [sp, #48]
  417d44:	ldr	x0, [sp, #24]
  417d48:	str	x0, [sp, #56]
  417d4c:	ldr	x0, [sp, #56]
  417d50:	cmp	x0, #0x0
  417d54:	cset	w0, eq  // eq = none
  417d58:	and	w0, w0, #0xff
  417d5c:	and	x0, x0, #0xff
  417d60:	cmp	x0, #0x0
  417d64:	b.eq	417d90 <stdout_stream_free+0x244>  // b.none
  417d68:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417d6c:	add	x1, x0, #0xaeb
  417d70:	adrp	x0, 42b000 <__func__.15991+0x530>
  417d74:	add	x4, x0, #0x558
  417d78:	mov	w3, #0x6f                  	// #111
  417d7c:	mov	x2, x1
  417d80:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417d84:	add	x1, x0, #0xb30
  417d88:	mov	w0, #0x0                   	// #0
  417d8c:	bl	405fd0 <log_assert_failed_realm@plt>
  417d90:	ldr	x0, [sp, #56]
  417d94:	ldr	x0, [x0, #128]
  417d98:	cmp	x0, #0x0
  417d9c:	b.eq	417db4 <stdout_stream_free+0x268>  // b.none
  417da0:	ldr	x0, [sp, #56]
  417da4:	ldr	x0, [x0, #128]
  417da8:	ldr	x1, [sp, #56]
  417dac:	ldr	x1, [x1, #136]
  417db0:	str	x1, [x0, #136]
  417db4:	ldr	x0, [sp, #56]
  417db8:	ldr	x0, [x0, #136]
  417dbc:	cmp	x0, #0x0
  417dc0:	b.eq	417ddc <stdout_stream_free+0x290>  // b.none
  417dc4:	ldr	x0, [sp, #56]
  417dc8:	ldr	x0, [x0, #136]
  417dcc:	ldr	x1, [sp, #56]
  417dd0:	ldr	x1, [x1, #128]
  417dd4:	str	x1, [x0, #128]
  417dd8:	b	417e38 <stdout_stream_free+0x2ec>
  417ddc:	ldr	x0, [sp, #48]
  417de0:	ldr	x0, [x0]
  417de4:	ldr	x1, [sp, #56]
  417de8:	cmp	x1, x0
  417dec:	cset	w0, ne  // ne = any
  417df0:	and	w0, w0, #0xff
  417df4:	and	x0, x0, #0xff
  417df8:	cmp	x0, #0x0
  417dfc:	b.eq	417e28 <stdout_stream_free+0x2dc>  // b.none
  417e00:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417e04:	add	x1, x0, #0xaeb
  417e08:	adrp	x0, 42b000 <__func__.15991+0x530>
  417e0c:	add	x4, x0, #0x558
  417e10:	mov	w3, #0x6f                  	// #111
  417e14:	mov	x2, x1
  417e18:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417e1c:	add	x1, x0, #0xb38
  417e20:	mov	w0, #0x0                   	// #0
  417e24:	bl	405fd0 <log_assert_failed_realm@plt>
  417e28:	ldr	x0, [sp, #56]
  417e2c:	ldr	x1, [x0, #128]
  417e30:	ldr	x0, [sp, #48]
  417e34:	str	x1, [x0]
  417e38:	ldr	x0, [sp, #56]
  417e3c:	str	xzr, [x0, #136]
  417e40:	ldr	x0, [sp, #56]
  417e44:	ldr	x1, [x0, #136]
  417e48:	ldr	x0, [sp, #56]
  417e4c:	str	x1, [x0, #128]
  417e50:	ldr	x0, [sp, #24]
  417e54:	ldr	x0, [x0, #88]
  417e58:	cmp	x0, #0x0
  417e5c:	b.eq	417e88 <stdout_stream_free+0x33c>  // b.none
  417e60:	ldr	x0, [sp, #24]
  417e64:	ldr	x0, [x0, #88]
  417e68:	mov	w1, #0x0                   	// #0
  417e6c:	bl	406090 <sd_event_source_set_enabled@plt>
  417e70:	ldr	x0, [sp, #24]
  417e74:	ldr	x0, [x0, #88]
  417e78:	bl	405ee0 <sd_event_source_unref@plt>
  417e7c:	mov	x1, x0
  417e80:	ldr	x0, [sp, #24]
  417e84:	str	x1, [x0, #88]
  417e88:	ldr	x0, [sp, #24]
  417e8c:	ldr	w0, [x0, #12]
  417e90:	bl	405f40 <safe_close@plt>
  417e94:	ldr	x0, [sp, #24]
  417e98:	ldr	x0, [x0, #32]
  417e9c:	bl	406930 <free@plt>
  417ea0:	ldr	x0, [sp, #24]
  417ea4:	ldr	x0, [x0, #40]
  417ea8:	bl	406930 <free@plt>
  417eac:	ldr	x0, [sp, #24]
  417eb0:	ldr	x0, [x0, #48]
  417eb4:	bl	406930 <free@plt>
  417eb8:	ldr	x0, [sp, #24]
  417ebc:	ldr	x0, [x0, #96]
  417ec0:	bl	406930 <free@plt>
  417ec4:	ldr	x0, [sp, #24]
  417ec8:	ldr	x0, [x0, #64]
  417ecc:	bl	406930 <free@plt>
  417ed0:	ldr	x0, [sp, #24]
  417ed4:	bl	406930 <free@plt>
  417ed8:	b	417ee0 <stdout_stream_free+0x394>
  417edc:	nop
  417ee0:	ldp	x29, x30, [sp], #64
  417ee4:	ret

0000000000417ee8 <stdout_stream_freep>:
  417ee8:	stp	x29, x30, [sp, #-32]!
  417eec:	mov	x29, sp
  417ef0:	str	x0, [sp, #24]
  417ef4:	ldr	x0, [sp, #24]
  417ef8:	ldr	x0, [x0]
  417efc:	cmp	x0, #0x0
  417f00:	b.eq	417f10 <stdout_stream_freep+0x28>  // b.none
  417f04:	ldr	x0, [sp, #24]
  417f08:	ldr	x0, [x0]
  417f0c:	bl	417b4c <stdout_stream_free>
  417f10:	nop
  417f14:	ldp	x29, x30, [sp], #32
  417f18:	ret

0000000000417f1c <stdout_stream_destroy>:
  417f1c:	stp	x29, x30, [sp, #-32]!
  417f20:	mov	x29, sp
  417f24:	str	x0, [sp, #24]
  417f28:	ldr	x0, [sp, #24]
  417f2c:	cmp	x0, #0x0
  417f30:	b.eq	417f5c <stdout_stream_destroy+0x40>  // b.none
  417f34:	ldr	x0, [sp, #24]
  417f38:	ldr	x0, [x0, #96]
  417f3c:	cmp	x0, #0x0
  417f40:	b.eq	417f50 <stdout_stream_destroy+0x34>  // b.none
  417f44:	ldr	x0, [sp, #24]
  417f48:	ldr	x0, [x0, #96]
  417f4c:	bl	405b50 <unlink@plt>
  417f50:	ldr	x0, [sp, #24]
  417f54:	bl	417b4c <stdout_stream_free>
  417f58:	b	417f60 <stdout_stream_destroy+0x44>
  417f5c:	nop
  417f60:	ldp	x29, x30, [sp], #32
  417f64:	ret

0000000000417f68 <stdout_stream_save>:
  417f68:	stp	x29, x30, [sp, #-272]!
  417f6c:	mov	x29, sp
  417f70:	str	x19, [sp, #16]
  417f74:	str	x0, [sp, #40]
  417f78:	adrp	x0, 441000 <wordlist.9471+0x208>
  417f7c:	ldr	x0, [x0, #4064]
  417f80:	ldr	x1, [x0]
  417f84:	str	x1, [sp, #264]
  417f88:	mov	x1, #0x0                   	// #0
  417f8c:	str	xzr, [sp, #96]
  417f90:	str	xzr, [sp, #104]
  417f94:	ldr	x0, [sp, #40]
  417f98:	cmp	x0, #0x0
  417f9c:	cset	w0, eq  // eq = none
  417fa0:	and	w0, w0, #0xff
  417fa4:	and	x0, x0, #0xff
  417fa8:	cmp	x0, #0x0
  417fac:	b.eq	417fd8 <stdout_stream_save+0x70>  // b.none
  417fb0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417fb4:	add	x1, x0, #0xaeb
  417fb8:	adrp	x0, 42b000 <__func__.15991+0x530>
  417fbc:	add	x4, x0, #0x570
  417fc0:	mov	w3, #0x92                  	// #146
  417fc4:	mov	x2, x1
  417fc8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  417fcc:	add	x1, x0, #0xb48
  417fd0:	mov	w0, #0x0                   	// #0
  417fd4:	bl	405fd0 <log_assert_failed_realm@plt>
  417fd8:	ldr	x0, [sp, #40]
  417fdc:	ldr	w0, [x0, #8]
  417fe0:	cmp	w0, #0x7
  417fe4:	b.eq	417ff0 <stdout_stream_save+0x88>  // b.none
  417fe8:	mov	w19, #0x0                   	// #0
  417fec:	b	418578 <stdout_stream_save+0x610>
  417ff0:	ldr	x0, [sp, #40]
  417ff4:	ldr	x0, [x0, #96]
  417ff8:	cmp	x0, #0x0
  417ffc:	b.ne	418104 <stdout_stream_save+0x19c>  // b.any
  418000:	ldr	x0, [sp, #40]
  418004:	ldr	w0, [x0, #12]
  418008:	add	x1, sp, #0x88
  41800c:	bl	4275f0 <fstat64>
  418010:	str	w0, [sp, #56]
  418014:	ldr	w0, [sp, #56]
  418018:	cmp	w0, #0x0
  41801c:	b.ge	4180b0 <stdout_stream_save+0x148>  // b.tcont
  418020:	mov	w0, #0x4                   	// #4
  418024:	str	w0, [sp, #60]
  418028:	bl	4062e0 <__errno_location@plt>
  41802c:	ldr	w0, [x0]
  418030:	str	w0, [sp, #64]
  418034:	str	wzr, [sp, #68]
  418038:	ldr	w0, [sp, #68]
  41803c:	bl	406c30 <log_get_max_level_realm@plt>
  418040:	mov	w1, w0
  418044:	ldr	w0, [sp, #60]
  418048:	and	w0, w0, #0x7
  41804c:	cmp	w1, w0
  418050:	b.lt	418098 <stdout_stream_save+0x130>  // b.tstop
  418054:	ldr	w0, [sp, #68]
  418058:	lsl	w1, w0, #10
  41805c:	ldr	w0, [sp, #60]
  418060:	orr	w6, w1, w0
  418064:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418068:	add	x1, x0, #0xaeb
  41806c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418070:	add	x5, x0, #0xb50
  418074:	adrp	x0, 42b000 <__func__.15991+0x530>
  418078:	add	x4, x0, #0x588
  41807c:	mov	w3, #0x9c                  	// #156
  418080:	mov	x2, x1
  418084:	ldr	w1, [sp, #64]
  418088:	mov	w0, w6
  41808c:	bl	406590 <log_internal_realm@plt>
  418090:	mov	w19, w0
  418094:	b	418578 <stdout_stream_save+0x610>
  418098:	ldr	w0, [sp, #64]
  41809c:	cmp	w0, #0x0
  4180a0:	cneg	w0, w0, lt  // lt = tstop
  4180a4:	and	w0, w0, #0xff
  4180a8:	neg	w19, w0
  4180ac:	b	418578 <stdout_stream_save+0x610>
  4180b0:	ldr	x0, [sp, #40]
  4180b4:	add	x4, x0, #0x60
  4180b8:	ldr	x0, [sp, #136]
  4180bc:	ldr	x1, [sp, #144]
  4180c0:	mov	x3, x1
  4180c4:	mov	x2, x0
  4180c8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4180cc:	add	x1, x0, #0xb78
  4180d0:	mov	x0, x4
  4180d4:	bl	406830 <asprintf@plt>
  4180d8:	cmp	w0, #0x0
  4180dc:	b.ge	418104 <stdout_stream_save+0x19c>  // b.tcont
  4180e0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4180e4:	add	x1, x0, #0xaeb
  4180e8:	adrp	x0, 42b000 <__func__.15991+0x530>
  4180ec:	add	x3, x0, #0x588
  4180f0:	mov	w2, #0xa0                  	// #160
  4180f4:	mov	w0, #0x0                   	// #0
  4180f8:	bl	406b70 <log_oom_internal@plt>
  4180fc:	mov	w19, w0
  418100:	b	418578 <stdout_stream_save+0x610>
  418104:	mov	w1, #0x1ed                 	// #493
  418108:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41810c:	add	x0, x0, #0xba0
  418110:	bl	406a60 <mkdir_p@plt>
  418114:	ldr	x0, [sp, #40]
  418118:	ldr	x0, [x0, #96]
  41811c:	add	x2, sp, #0x60
  418120:	add	x1, sp, #0x68
  418124:	bl	406210 <fopen_temporary@plt>
  418128:	str	w0, [sp, #56]
  41812c:	ldr	w0, [sp, #56]
  418130:	cmp	w0, #0x0
  418134:	b.lt	4184b4 <stdout_stream_save+0x54c>  // b.tstop
  418138:	ldr	x8, [sp, #104]
  41813c:	ldr	x0, [sp, #40]
  418140:	ldr	w1, [x0, #56]
  418144:	ldr	x0, [sp, #40]
  418148:	ldrb	w0, [x0, #60]
  41814c:	ubfx	x0, x0, #0, #1
  418150:	and	w0, w0, #0xff
  418154:	mov	w2, w0
  418158:	ldr	x0, [sp, #40]
  41815c:	ldrb	w0, [x0, #60]
  418160:	ubfx	x0, x0, #1, #1
  418164:	and	w0, w0, #0xff
  418168:	mov	w3, w0
  41816c:	ldr	x0, [sp, #40]
  418170:	ldrb	w0, [x0, #60]
  418174:	ubfx	x0, x0, #2, #1
  418178:	and	w0, w0, #0xff
  41817c:	mov	w4, w0
  418180:	ldr	x0, [sp, #40]
  418184:	ldrb	w0, [x0, #60]
  418188:	ubfx	x0, x0, #3, #1
  41818c:	and	w0, w0, #0xff
  418190:	mov	w5, w0
  418194:	ldr	x0, [sp, #40]
  418198:	add	x0, x0, #0x90
  41819c:	add	x0, x0, #0xb
  4181a0:	mov	x7, x0
  4181a4:	mov	w6, w5
  4181a8:	mov	w5, w4
  4181ac:	mov	w4, w3
  4181b0:	mov	w3, w2
  4181b4:	mov	w2, w1
  4181b8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4181bc:	add	x1, x0, #0xbc0
  4181c0:	mov	x0, x8
  4181c4:	bl	405e40 <fprintf@plt>
  4181c8:	ldr	x0, [sp, #40]
  4181cc:	ldr	x0, [x0, #40]
  4181d0:	bl	417858 <isempty>
  4181d4:	and	w0, w0, #0xff
  4181d8:	eor	w0, w0, #0x1
  4181dc:	and	w0, w0, #0xff
  4181e0:	cmp	w0, #0x0
  4181e4:	b.eq	418244 <stdout_stream_save+0x2dc>  // b.none
  4181e8:	ldr	x0, [sp, #40]
  4181ec:	ldr	x0, [x0, #40]
  4181f0:	bl	405cb0 <cescape@plt>
  4181f4:	str	x0, [sp, #112]
  4181f8:	ldr	x0, [sp, #112]
  4181fc:	cmp	x0, #0x0
  418200:	b.ne	418214 <stdout_stream_save+0x2ac>  // b.any
  418204:	mov	w0, #0xfffffff4            	// #-12
  418208:	str	w0, [sp, #56]
  41820c:	mov	w19, #0x0                   	// #0
  418210:	b	418234 <stdout_stream_save+0x2cc>
  418214:	ldr	x3, [sp, #104]
  418218:	ldr	x0, [sp, #112]
  41821c:	mov	x2, x0
  418220:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418224:	add	x1, x0, #0xc50
  418228:	mov	x0, x3
  41822c:	bl	405e40 <fprintf@plt>
  418230:	mov	w19, #0x1                   	// #1
  418234:	add	x0, sp, #0x70
  418238:	bl	4177b8 <freep>
  41823c:	cmp	w19, #0x1
  418240:	b.ne	4184c0 <stdout_stream_save+0x558>  // b.any
  418244:	ldr	x0, [sp, #40]
  418248:	ldr	x0, [x0, #48]
  41824c:	bl	417858 <isempty>
  418250:	and	w0, w0, #0xff
  418254:	eor	w0, w0, #0x1
  418258:	and	w0, w0, #0xff
  41825c:	cmp	w0, #0x0
  418260:	b.eq	4182c0 <stdout_stream_save+0x358>  // b.none
  418264:	ldr	x0, [sp, #40]
  418268:	ldr	x0, [x0, #48]
  41826c:	bl	405cb0 <cescape@plt>
  418270:	str	x0, [sp, #112]
  418274:	ldr	x0, [sp, #112]
  418278:	cmp	x0, #0x0
  41827c:	b.ne	418290 <stdout_stream_save+0x328>  // b.any
  418280:	mov	w0, #0xfffffff4            	// #-12
  418284:	str	w0, [sp, #56]
  418288:	mov	w19, #0x0                   	// #0
  41828c:	b	4182b0 <stdout_stream_save+0x348>
  418290:	ldr	x3, [sp, #104]
  418294:	ldr	x0, [sp, #112]
  418298:	mov	x2, x0
  41829c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4182a0:	add	x1, x0, #0xc60
  4182a4:	mov	x0, x3
  4182a8:	bl	405e40 <fprintf@plt>
  4182ac:	mov	w19, #0x1                   	// #1
  4182b0:	add	x0, sp, #0x70
  4182b4:	bl	4177b8 <freep>
  4182b8:	cmp	w19, #0x1
  4182bc:	b.ne	4184c0 <stdout_stream_save+0x558>  // b.any
  4182c0:	ldr	x0, [sp, #104]
  4182c4:	bl	406b90 <fflush_and_check@plt>
  4182c8:	str	w0, [sp, #56]
  4182cc:	ldr	w0, [sp, #56]
  4182d0:	cmp	w0, #0x0
  4182d4:	b.lt	4184bc <stdout_stream_save+0x554>  // b.tstop
  4182d8:	ldr	x2, [sp, #96]
  4182dc:	ldr	x0, [sp, #40]
  4182e0:	ldr	x0, [x0, #96]
  4182e4:	mov	x1, x0
  4182e8:	mov	x0, x2
  4182ec:	bl	405d10 <rename@plt>
  4182f0:	cmp	w0, #0x0
  4182f4:	b.ge	41830c <stdout_stream_save+0x3a4>  // b.tcont
  4182f8:	bl	4062e0 <__errno_location@plt>
  4182fc:	ldr	w0, [x0]
  418300:	neg	w0, w0
  418304:	str	w0, [sp, #56]
  418308:	b	4184c0 <stdout_stream_save+0x558>
  41830c:	ldr	x0, [sp, #40]
  418310:	ldrb	w0, [x0, #60]
  418314:	ubfx	x0, x0, #4, #1
  418318:	and	w0, w0, #0xff
  41831c:	eor	w0, w0, #0x1
  418320:	and	w0, w0, #0xff
  418324:	cmp	w0, #0x0
  418328:	b.eq	4184ac <stdout_stream_save+0x544>  // b.none
  41832c:	ldr	x0, [sp, #40]
  418330:	ldrb	w0, [x0, #60]
  418334:	ubfx	x0, x0, #5, #1
  418338:	and	w0, w0, #0xff
  41833c:	eor	w0, w0, #0x1
  418340:	and	w0, w0, #0xff
  418344:	cmp	w0, #0x0
  418348:	b.eq	4184ac <stdout_stream_save+0x544>  // b.none
  41834c:	ldr	x0, [sp, #40]
  418350:	ldr	x0, [x0]
  418354:	add	x0, x0, #0x200
  418358:	str	x0, [sp, #120]
  41835c:	ldr	x0, [sp, #40]
  418360:	str	x0, [sp, #128]
  418364:	ldr	x0, [sp, #128]
  418368:	cmp	x0, #0x0
  41836c:	cset	w0, eq  // eq = none
  418370:	and	w0, w0, #0xff
  418374:	and	x0, x0, #0xff
  418378:	cmp	x0, #0x0
  41837c:	b.eq	4183a8 <stdout_stream_save+0x440>  // b.none
  418380:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418384:	add	x1, x0, #0xaeb
  418388:	adrp	x0, 42b000 <__func__.15991+0x530>
  41838c:	add	x4, x0, #0x570
  418390:	mov	w3, #0xda                  	// #218
  418394:	mov	x2, x1
  418398:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41839c:	add	x1, x0, #0xb30
  4183a0:	mov	w0, #0x0                   	// #0
  4183a4:	bl	405fd0 <log_assert_failed_realm@plt>
  4183a8:	ldr	x0, [sp, #120]
  4183ac:	ldr	x1, [x0]
  4183b0:	ldr	x0, [sp, #128]
  4183b4:	str	x1, [x0, #128]
  4183b8:	ldr	x0, [sp, #128]
  4183bc:	ldr	x0, [x0, #128]
  4183c0:	cmp	x0, #0x0
  4183c4:	b.eq	4183d8 <stdout_stream_save+0x470>  // b.none
  4183c8:	ldr	x0, [sp, #128]
  4183cc:	ldr	x0, [x0, #128]
  4183d0:	ldr	x1, [sp, #128]
  4183d4:	str	x1, [x0, #136]
  4183d8:	ldr	x0, [sp, #128]
  4183dc:	str	xzr, [x0, #136]
  4183e0:	ldr	x0, [sp, #120]
  4183e4:	ldr	x1, [sp, #128]
  4183e8:	str	x1, [x0]
  4183ec:	ldr	x0, [sp, #40]
  4183f0:	ldrb	w1, [x0, #60]
  4183f4:	orr	w1, w1, #0x20
  4183f8:	strb	w1, [x0, #60]
  4183fc:	ldr	x0, [sp, #40]
  418400:	ldr	x0, [x0]
  418404:	ldr	x0, [x0, #136]
  418408:	cmp	x0, #0x0
  41840c:	b.eq	4184ac <stdout_stream_save+0x544>  // b.none
  418410:	ldr	x0, [sp, #40]
  418414:	ldr	x0, [x0]
  418418:	ldr	x0, [x0, #136]
  41841c:	mov	w1, #0x1                   	// #1
  418420:	bl	406090 <sd_event_source_set_enabled@plt>
  418424:	str	w0, [sp, #56]
  418428:	ldr	w0, [sp, #56]
  41842c:	cmp	w0, #0x0
  418430:	b.ge	4184ac <stdout_stream_save+0x544>  // b.tcont
  418434:	mov	w0, #0x4                   	// #4
  418438:	str	w0, [sp, #72]
  41843c:	ldr	w0, [sp, #56]
  418440:	str	w0, [sp, #76]
  418444:	str	wzr, [sp, #80]
  418448:	ldr	w0, [sp, #80]
  41844c:	bl	406c30 <log_get_max_level_realm@plt>
  418450:	mov	w1, w0
  418454:	ldr	w0, [sp, #72]
  418458:	and	w0, w0, #0x7
  41845c:	cmp	w1, w0
  418460:	b.lt	4184a4 <stdout_stream_save+0x53c>  // b.tstop
  418464:	ldr	w0, [sp, #80]
  418468:	lsl	w1, w0, #10
  41846c:	ldr	w0, [sp, #72]
  418470:	orr	w6, w1, w0
  418474:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418478:	add	x1, x0, #0xaeb
  41847c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418480:	add	x5, x0, #0xc70
  418484:	adrp	x0, 42b000 <__func__.15991+0x530>
  418488:	add	x4, x0, #0x588
  41848c:	mov	w3, #0xe0                  	// #224
  418490:	mov	x2, x1
  418494:	ldr	w1, [sp, #76]
  418498:	mov	w0, w6
  41849c:	bl	406590 <log_internal_realm@plt>
  4184a0:	b	4184ac <stdout_stream_save+0x544>
  4184a4:	ldr	w0, [sp, #76]
  4184a8:	cmp	w0, #0x0
  4184ac:	mov	w19, #0x0                   	// #0
  4184b0:	b	418578 <stdout_stream_save+0x610>
  4184b4:	nop
  4184b8:	b	4184c0 <stdout_stream_save+0x558>
  4184bc:	nop
  4184c0:	ldr	x0, [sp, #40]
  4184c4:	ldr	x0, [x0, #96]
  4184c8:	bl	405b50 <unlink@plt>
  4184cc:	ldr	x0, [sp, #96]
  4184d0:	cmp	x0, #0x0
  4184d4:	b.eq	4184e0 <stdout_stream_save+0x578>  // b.none
  4184d8:	ldr	x0, [sp, #96]
  4184dc:	bl	405b50 <unlink@plt>
  4184e0:	mov	w0, #0x3                   	// #3
  4184e4:	str	w0, [sp, #84]
  4184e8:	ldr	w0, [sp, #56]
  4184ec:	str	w0, [sp, #88]
  4184f0:	str	wzr, [sp, #92]
  4184f4:	ldr	w0, [sp, #92]
  4184f8:	bl	406c30 <log_get_max_level_realm@plt>
  4184fc:	mov	w1, w0
  418500:	ldr	w0, [sp, #84]
  418504:	and	w0, w0, #0x7
  418508:	cmp	w1, w0
  41850c:	b.lt	418560 <stdout_stream_save+0x5f8>  // b.tstop
  418510:	ldr	w0, [sp, #92]
  418514:	lsl	w1, w0, #10
  418518:	ldr	w0, [sp, #84]
  41851c:	orr	w7, w1, w0
  418520:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418524:	add	x1, x0, #0xaeb
  418528:	ldr	x0, [sp, #40]
  41852c:	ldr	x0, [x0, #96]
  418530:	mov	x6, x0
  418534:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418538:	add	x5, x0, #0xca0
  41853c:	adrp	x0, 42b000 <__func__.15991+0x530>
  418540:	add	x4, x0, #0x588
  418544:	mov	w3, #0xec                  	// #236
  418548:	mov	x2, x1
  41854c:	ldr	w1, [sp, #88]
  418550:	mov	w0, w7
  418554:	bl	406590 <log_internal_realm@plt>
  418558:	mov	w19, w0
  41855c:	b	418574 <stdout_stream_save+0x60c>
  418560:	ldr	w0, [sp, #88]
  418564:	cmp	w0, #0x0
  418568:	cneg	w0, w0, lt  // lt = tstop
  41856c:	and	w0, w0, #0xff
  418570:	neg	w19, w0
  418574:	nop
  418578:	add	x0, sp, #0x68
  41857c:	bl	4179f4 <fclosep>
  418580:	add	x0, sp, #0x60
  418584:	bl	4177b8 <freep>
  418588:	mov	w1, w19
  41858c:	adrp	x0, 441000 <wordlist.9471+0x208>
  418590:	ldr	x0, [x0, #4064]
  418594:	ldr	x2, [sp, #264]
  418598:	ldr	x0, [x0]
  41859c:	eor	x0, x2, x0
  4185a0:	cmp	x0, #0x0
  4185a4:	b.eq	4185ac <stdout_stream_save+0x644>  // b.none
  4185a8:	bl	4063e0 <__stack_chk_fail@plt>
  4185ac:	mov	w0, w1
  4185b0:	ldr	x19, [sp, #16]
  4185b4:	ldp	x29, x30, [sp], #272
  4185b8:	ret

00000000004185bc <stdout_stream_log>:
  4185bc:	stp	x29, x30, [sp, #-224]!
  4185c0:	mov	x29, sp
  4185c4:	stp	x19, x20, [sp, #16]
  4185c8:	stp	x21, x22, [sp, #32]
  4185cc:	str	x0, [x29, #72]
  4185d0:	str	x1, [x29, #64]
  4185d4:	str	w2, [x29, #60]
  4185d8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4185dc:	ldr	x0, [x0, #4064]
  4185e0:	ldr	x1, [x0]
  4185e4:	str	x1, [x29, #216]
  4185e8:	mov	x1, #0x0                   	// #0
  4185ec:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4185f0:	add	x1, x0, #0xe20
  4185f4:	add	x0, x29, #0xa8
  4185f8:	ldr	x2, [x1]
  4185fc:	str	x2, [x0]
  418600:	ldur	w1, [x1, #7]
  418604:	stur	w1, [x0, #7]
  418608:	str	xzr, [x29, #112]
  41860c:	str	xzr, [x29, #120]
  418610:	str	xzr, [x29, #128]
  418614:	ldr	x0, [x29, #72]
  418618:	cmp	x0, #0x0
  41861c:	cset	w0, eq  // eq = none
  418620:	and	w0, w0, #0xff
  418624:	and	x0, x0, #0xff
  418628:	cmp	x0, #0x0
  41862c:	b.eq	418658 <stdout_stream_log+0x9c>  // b.none
  418630:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418634:	add	x1, x0, #0xaeb
  418638:	adrp	x0, 42b000 <__func__.15991+0x530>
  41863c:	add	x4, x0, #0x5a0
  418640:	mov	w3, #0xf8                  	// #248
  418644:	mov	x2, x1
  418648:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41864c:	add	x1, x0, #0xb48
  418650:	mov	w0, #0x0                   	// #0
  418654:	bl	405fd0 <log_assert_failed_realm@plt>
  418658:	ldr	x0, [x29, #64]
  41865c:	cmp	x0, #0x0
  418660:	cset	w0, eq  // eq = none
  418664:	and	w0, w0, #0xff
  418668:	and	x0, x0, #0xff
  41866c:	cmp	x0, #0x0
  418670:	b.eq	41869c <stdout_stream_log+0xe0>  // b.none
  418674:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418678:	add	x1, x0, #0xaeb
  41867c:	adrp	x0, 42b000 <__func__.15991+0x530>
  418680:	add	x4, x0, #0x5a0
  418684:	mov	w3, #0xf9                  	// #249
  418688:	mov	x2, x1
  41868c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418690:	add	x1, x0, #0xcc8
  418694:	mov	w0, #0x0                   	// #0
  418698:	bl	405fd0 <log_assert_failed_realm@plt>
  41869c:	ldr	x0, [x29, #72]
  4186a0:	ldr	x0, [x0, #104]
  4186a4:	cmp	x0, #0x0
  4186a8:	b.eq	4186e0 <stdout_stream_log+0x124>  // b.none
  4186ac:	ldr	x0, [x29, #72]
  4186b0:	ldr	x7, [x0]
  4186b4:	ldr	x0, [x29, #72]
  4186b8:	ldr	x0, [x0, #104]
  4186bc:	mov	x6, #0xffffffffffffffff    	// #-1
  4186c0:	mov	x5, #0x0                   	// #0
  4186c4:	mov	x4, #0x0                   	// #0
  4186c8:	mov	x3, #0x0                   	// #0
  4186cc:	mov	x2, #0x0                   	// #0
  4186d0:	mov	x1, x0
  4186d4:	mov	x0, x7
  4186d8:	bl	423888 <client_context_maybe_refresh>
  4186dc:	b	4187e0 <stdout_stream_log+0x224>
  4186e0:	ldr	x0, [x29, #72]
  4186e4:	ldr	w0, [x0, #16]
  4186e8:	bl	417ad4 <pid_is_valid>
  4186ec:	and	w0, w0, #0xff
  4186f0:	cmp	w0, #0x0
  4186f4:	b.eq	4187e0 <stdout_stream_log+0x224>  // b.none
  4186f8:	ldr	x0, [x29, #72]
  4186fc:	ldr	x19, [x0]
  418700:	ldr	x0, [x29, #72]
  418704:	ldr	w20, [x0, #16]
  418708:	ldr	x0, [x29, #72]
  41870c:	add	x21, x0, #0x10
  418710:	ldr	x0, [x29, #72]
  418714:	ldr	x22, [x0, #32]
  418718:	ldr	x0, [x29, #72]
  41871c:	ldr	x0, [x0, #32]
  418720:	bl	417898 <strlen_ptr>
  418724:	mov	x2, x0
  418728:	ldr	x0, [x29, #72]
  41872c:	ldr	x1, [x0, #48]
  418730:	ldr	x0, [x29, #72]
  418734:	add	x0, x0, #0x68
  418738:	mov	x6, x0
  41873c:	mov	x5, x1
  418740:	mov	x4, x2
  418744:	mov	x3, x22
  418748:	mov	x2, x21
  41874c:	mov	w1, w20
  418750:	mov	x0, x19
  418754:	bl	42421c <client_context_acquire>
  418758:	str	w0, [x29, #96]
  41875c:	ldr	w0, [x29, #96]
  418760:	cmp	w0, #0x0
  418764:	b.ge	4187e0 <stdout_stream_log+0x224>  // b.tcont
  418768:	mov	w0, #0x4                   	// #4
  41876c:	str	w0, [x29, #100]
  418770:	ldr	w0, [x29, #96]
  418774:	str	w0, [x29, #104]
  418778:	str	wzr, [x29, #108]
  41877c:	ldr	w0, [x29, #108]
  418780:	bl	406c30 <log_get_max_level_realm@plt>
  418784:	mov	w1, w0
  418788:	ldr	w0, [x29, #100]
  41878c:	and	w0, w0, #0x7
  418790:	cmp	w1, w0
  418794:	b.lt	4187d8 <stdout_stream_log+0x21c>  // b.tstop
  418798:	ldr	w0, [x29, #108]
  41879c:	lsl	w1, w0, #10
  4187a0:	ldr	w0, [x29, #100]
  4187a4:	orr	w6, w1, w0
  4187a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4187ac:	add	x1, x0, #0xaeb
  4187b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4187b4:	add	x5, x0, #0xcd0
  4187b8:	adrp	x0, 42b000 <__func__.15991+0x530>
  4187bc:	add	x4, x0, #0x5b8
  4187c0:	mov	w3, #0x100                 	// #256
  4187c4:	mov	x2, x1
  4187c8:	ldr	w1, [x29, #104]
  4187cc:	mov	w0, w6
  4187d0:	bl	406590 <log_internal_realm@plt>
  4187d4:	b	4187e0 <stdout_stream_log+0x224>
  4187d8:	ldr	w0, [x29, #104]
  4187dc:	cmp	w0, #0x0
  4187e0:	ldr	x0, [x29, #72]
  4187e4:	ldr	w0, [x0, #56]
  4187e8:	str	w0, [x29, #92]
  4187ec:	ldr	x0, [x29, #72]
  4187f0:	ldrb	w0, [x0, #60]
  4187f4:	and	w0, w0, #0x1
  4187f8:	and	w0, w0, #0xff
  4187fc:	cmp	w0, #0x0
  418800:	b.eq	418814 <stdout_stream_log+0x258>  // b.none
  418804:	add	x1, x29, #0x5c
  418808:	add	x0, x29, #0x40
  41880c:	mov	w2, #0x0                   	// #0
  418810:	bl	4063f0 <syslog_parse_priority@plt>
  418814:	ldr	x0, [x29, #72]
  418818:	ldr	x0, [x0, #104]
  41881c:	ldr	w1, [x29, #92]
  418820:	bl	417a78 <client_context_test_priority>
  418824:	and	w0, w0, #0xff
  418828:	eor	w0, w0, #0x1
  41882c:	and	w0, w0, #0xff
  418830:	cmp	w0, #0x0
  418834:	b.eq	418840 <stdout_stream_log+0x284>  // b.none
  418838:	mov	w19, #0x0                   	// #0
  41883c:	b	418d54 <stdout_stream_log+0x798>
  418840:	ldr	x0, [x29, #64]
  418844:	bl	417858 <isempty>
  418848:	and	w0, w0, #0xff
  41884c:	cmp	w0, #0x0
  418850:	b.eq	41885c <stdout_stream_log+0x2a0>  // b.none
  418854:	mov	w19, #0x0                   	// #0
  418858:	b	418d54 <stdout_stream_log+0x798>
  41885c:	ldr	x0, [x29, #72]
  418860:	ldrb	w0, [x0, #60]
  418864:	and	w0, w0, #0x2
  418868:	and	w0, w0, #0xff
  41886c:	cmp	w0, #0x0
  418870:	b.ne	418888 <stdout_stream_log+0x2cc>  // b.any
  418874:	ldr	x0, [x29, #72]
  418878:	ldr	x0, [x0]
  41887c:	ldrb	w0, [x0, #459]
  418880:	cmp	w0, #0x0
  418884:	b.eq	4188cc <stdout_stream_log+0x310>  // b.none
  418888:	ldr	x0, [x29, #72]
  41888c:	ldr	x19, [x0]
  418890:	ldr	w0, [x29, #92]
  418894:	bl	41c8a8 <syslog_fixup_facility>
  418898:	mov	w6, w0
  41889c:	ldr	x0, [x29, #72]
  4188a0:	ldr	x1, [x0, #40]
  4188a4:	ldr	x2, [x29, #64]
  4188a8:	ldr	x0, [x29, #72]
  4188ac:	add	x0, x0, #0x10
  4188b0:	mov	x5, #0x0                   	// #0
  4188b4:	mov	x4, x0
  4188b8:	mov	x3, x2
  4188bc:	mov	x2, x1
  4188c0:	mov	w1, w6
  4188c4:	mov	x0, x19
  4188c8:	bl	41c3a0 <server_forward_syslog>
  4188cc:	ldr	x0, [x29, #72]
  4188d0:	ldrb	w0, [x0, #60]
  4188d4:	and	w0, w0, #0x4
  4188d8:	and	w0, w0, #0xff
  4188dc:	cmp	w0, #0x0
  4188e0:	b.ne	4188f8 <stdout_stream_log+0x33c>  // b.any
  4188e4:	ldr	x0, [x29, #72]
  4188e8:	ldr	x0, [x0]
  4188ec:	ldrb	w0, [x0, #458]
  4188f0:	cmp	w0, #0x0
  4188f4:	b.eq	418924 <stdout_stream_log+0x368>  // b.none
  4188f8:	ldr	x0, [x29, #72]
  4188fc:	ldr	x5, [x0]
  418900:	ldr	w1, [x29, #92]
  418904:	ldr	x0, [x29, #72]
  418908:	ldr	x2, [x0, #40]
  41890c:	ldr	x3, [x29, #64]
  418910:	ldr	x0, [x29, #72]
  418914:	add	x0, x0, #0x10
  418918:	mov	x4, x0
  41891c:	mov	x0, x5
  418920:	bl	407374 <server_forward_kmsg>
  418924:	ldr	x0, [x29, #72]
  418928:	ldrb	w0, [x0, #60]
  41892c:	and	w0, w0, #0x8
  418930:	and	w0, w0, #0xff
  418934:	cmp	w0, #0x0
  418938:	b.ne	418950 <stdout_stream_log+0x394>  // b.any
  41893c:	ldr	x0, [x29, #72]
  418940:	ldr	x0, [x0]
  418944:	ldrb	w0, [x0, #460]
  418948:	cmp	w0, #0x0
  41894c:	b.eq	41897c <stdout_stream_log+0x3c0>  // b.none
  418950:	ldr	x0, [x29, #72]
  418954:	ldr	x5, [x0]
  418958:	ldr	w1, [x29, #92]
  41895c:	ldr	x0, [x29, #72]
  418960:	ldr	x2, [x0, #40]
  418964:	ldr	x3, [x29, #64]
  418968:	ldr	x0, [x29, #72]
  41896c:	add	x0, x0, #0x10
  418970:	mov	x4, x0
  418974:	mov	x0, x5
  418978:	bl	420d20 <server_forward_console>
  41897c:	ldr	x0, [x29, #72]
  418980:	ldr	x0, [x0]
  418984:	ldrb	w0, [x0, #461]
  418988:	cmp	w0, #0x0
  41898c:	b.eq	4189bc <stdout_stream_log+0x400>  // b.none
  418990:	ldr	x0, [x29, #72]
  418994:	ldr	x5, [x0]
  418998:	ldr	w1, [x29, #92]
  41899c:	ldr	x0, [x29, #72]
  4189a0:	ldr	x2, [x0, #40]
  4189a4:	ldr	x3, [x29, #64]
  4189a8:	ldr	x0, [x29, #72]
  4189ac:	add	x0, x0, #0x10
  4189b0:	mov	x4, x0
  4189b4:	mov	x0, x5
  4189b8:	bl	41e374 <server_forward_wall>
  4189bc:	ldr	x0, [x29, #72]
  4189c0:	ldr	x0, [x0, #104]
  4189c4:	bl	417a4c <client_context_extra_fields_n_iovec>
  4189c8:	add	x0, x0, #0x1d
  4189cc:	str	x0, [x29, #136]
  4189d0:	ldr	x0, [x29, #136]
  4189d4:	str	x0, [x29, #144]
  4189d8:	ldr	x1, [x29, #144]
  4189dc:	mov	x0, #0x10                  	// #16
  4189e0:	bl	4177dc <size_multiply_overflow>
  4189e4:	and	w0, w0, #0xff
  4189e8:	and	x0, x0, #0xff
  4189ec:	cmp	x0, #0x0
  4189f0:	b.eq	418a1c <stdout_stream_log+0x460>  // b.none
  4189f4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4189f8:	add	x1, x0, #0xaeb
  4189fc:	adrp	x0, 42b000 <__func__.15991+0x530>
  418a00:	add	x4, x0, #0x5a0
  418a04:	mov	w3, #0x11b                 	// #283
  418a08:	mov	x2, x1
  418a0c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418a10:	add	x1, x0, #0xd00
  418a14:	mov	w0, #0x0                   	// #0
  418a18:	bl	405fd0 <log_assert_failed_realm@plt>
  418a1c:	ldr	x0, [x29, #144]
  418a20:	lsl	x0, x0, #4
  418a24:	cmp	x0, #0x400, lsl #12
  418a28:	cset	w0, hi  // hi = pmore
  418a2c:	and	w0, w0, #0xff
  418a30:	and	x0, x0, #0xff
  418a34:	cmp	x0, #0x0
  418a38:	b.eq	418a64 <stdout_stream_log+0x4a8>  // b.none
  418a3c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418a40:	add	x1, x0, #0xaeb
  418a44:	adrp	x0, 42b000 <__func__.15991+0x530>
  418a48:	add	x4, x0, #0x5a0
  418a4c:	mov	w3, #0x11b                 	// #283
  418a50:	mov	x2, x1
  418a54:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418a58:	add	x1, x0, #0xd38
  418a5c:	mov	w0, #0x0                   	// #0
  418a60:	bl	405fd0 <log_assert_failed_realm@plt>
  418a64:	ldr	x0, [x29, #144]
  418a68:	lsl	x0, x0, #4
  418a6c:	add	x0, x0, #0xf
  418a70:	lsr	x0, x0, #4
  418a74:	lsl	x0, x0, #4
  418a78:	sub	sp, sp, x0
  418a7c:	mov	x0, sp
  418a80:	add	x0, x0, #0xf
  418a84:	lsr	x0, x0, #4
  418a88:	lsl	x0, x0, #4
  418a8c:	str	x0, [x29, #152]
  418a90:	ldr	x0, [x29, #128]
  418a94:	add	x1, x0, #0x1
  418a98:	str	x1, [x29, #128]
  418a9c:	lsl	x0, x0, #4
  418aa0:	ldr	x1, [x29, #152]
  418aa4:	add	x0, x1, x0
  418aa8:	adrp	x1, 42a000 <__func__.11909+0x2280>
  418aac:	add	x1, x1, #0xd60
  418ab0:	str	x1, [x0]
  418ab4:	mov	x1, #0x11                  	// #17
  418ab8:	str	x1, [x0, #8]
  418abc:	ldr	x0, [x29, #128]
  418ac0:	add	x1, x0, #0x1
  418ac4:	str	x1, [x29, #128]
  418ac8:	lsl	x0, x0, #4
  418acc:	ldr	x1, [x29, #152]
  418ad0:	add	x19, x1, x0
  418ad4:	ldr	x0, [x29, #72]
  418ad8:	add	x20, x0, #0x90
  418adc:	ldr	x0, [x29, #72]
  418ae0:	add	x0, x0, #0x90
  418ae4:	bl	406af0 <strlen@plt>
  418ae8:	str	x20, [x19]
  418aec:	str	x0, [x19, #8]
  418af0:	ldr	w0, [x29, #92]
  418af4:	and	w0, w0, #0xff
  418af8:	and	w0, w0, #0x7
  418afc:	and	w0, w0, #0xff
  418b00:	add	w0, w0, #0x30
  418b04:	and	w0, w0, #0xff
  418b08:	strb	w0, [x29, #177]
  418b0c:	ldr	x0, [x29, #128]
  418b10:	add	x1, x0, #0x1
  418b14:	str	x1, [x29, #128]
  418b18:	lsl	x0, x0, #4
  418b1c:	ldr	x1, [x29, #152]
  418b20:	add	x19, x1, x0
  418b24:	add	x0, x29, #0xa8
  418b28:	bl	406af0 <strlen@plt>
  418b2c:	mov	x1, x0
  418b30:	add	x0, x29, #0xa8
  418b34:	str	x0, [x19]
  418b38:	str	x1, [x19, #8]
  418b3c:	ldr	w0, [x29, #92]
  418b40:	and	w0, w0, #0x3f8
  418b44:	cmp	w0, #0x0
  418b48:	b.eq	418be4 <stdout_stream_log+0x628>  // b.none
  418b4c:	ldr	w0, [x29, #92]
  418b50:	asr	w0, w0, #3
  418b54:	and	w0, w0, #0x7f
  418b58:	add	x4, x29, #0xb8
  418b5c:	mov	w3, w0
  418b60:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418b64:	add	x2, x0, #0xd78
  418b68:	mov	x1, #0x1d                  	// #29
  418b6c:	mov	x0, x4
  418b70:	bl	405de0 <snprintf@plt>
  418b74:	cmp	w0, #0x1c
  418b78:	cset	w0, hi  // hi = pmore
  418b7c:	and	w0, w0, #0xff
  418b80:	and	x0, x0, #0xff
  418b84:	cmp	x0, #0x0
  418b88:	b.eq	418bb4 <stdout_stream_log+0x5f8>  // b.none
  418b8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418b90:	add	x1, x0, #0xaeb
  418b94:	adrp	x0, 42b000 <__func__.15991+0x530>
  418b98:	add	x4, x0, #0x5a0
  418b9c:	mov	w3, #0x124                 	// #292
  418ba0:	mov	x2, x1
  418ba4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418ba8:	add	x1, x0, #0xd90
  418bac:	mov	w0, #0x0                   	// #0
  418bb0:	bl	405fd0 <log_assert_failed_realm@plt>
  418bb4:	ldr	x0, [x29, #128]
  418bb8:	add	x1, x0, #0x1
  418bbc:	str	x1, [x29, #128]
  418bc0:	lsl	x0, x0, #4
  418bc4:	ldr	x1, [x29, #152]
  418bc8:	add	x19, x1, x0
  418bcc:	add	x0, x29, #0xb8
  418bd0:	bl	406af0 <strlen@plt>
  418bd4:	mov	x1, x0
  418bd8:	add	x0, x29, #0xb8
  418bdc:	str	x0, [x19]
  418be0:	str	x1, [x19, #8]
  418be4:	ldr	x0, [x29, #72]
  418be8:	ldr	x0, [x0, #40]
  418bec:	cmp	x0, #0x0
  418bf0:	b.eq	418c4c <stdout_stream_log+0x690>  // b.none
  418bf4:	ldr	x0, [x29, #72]
  418bf8:	ldr	x0, [x0, #40]
  418bfc:	mov	x2, #0x0                   	// #0
  418c00:	mov	x1, x0
  418c04:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418c08:	add	x0, x0, #0xdc0
  418c0c:	bl	405f10 <strjoin_real@plt>
  418c10:	str	x0, [x29, #120]
  418c14:	ldr	x0, [x29, #120]
  418c18:	cmp	x0, #0x0
  418c1c:	b.eq	418c4c <stdout_stream_log+0x690>  // b.none
  418c20:	ldr	x0, [x29, #128]
  418c24:	add	x1, x0, #0x1
  418c28:	str	x1, [x29, #128]
  418c2c:	lsl	x0, x0, #4
  418c30:	ldr	x1, [x29, #152]
  418c34:	add	x19, x1, x0
  418c38:	ldr	x20, [x29, #120]
  418c3c:	ldr	x0, [x29, #120]
  418c40:	bl	406af0 <strlen@plt>
  418c44:	str	x20, [x19]
  418c48:	str	x0, [x19, #8]
  418c4c:	ldr	w0, [x29, #60]
  418c50:	cmp	w0, #0x0
  418c54:	b.eq	418cc4 <stdout_stream_log+0x708>  // b.none
  418c58:	ldr	w0, [x29, #60]
  418c5c:	cmp	w0, #0x1
  418c60:	b.eq	418c88 <stdout_stream_log+0x6cc>  // b.none
  418c64:	ldr	w0, [x29, #60]
  418c68:	cmp	w0, #0x2
  418c6c:	b.ne	418c7c <stdout_stream_log+0x6c0>  // b.any
  418c70:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418c74:	add	x0, x0, #0xdd8
  418c78:	b	418c90 <stdout_stream_log+0x6d4>
  418c7c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418c80:	add	x0, x0, #0xdf0
  418c84:	b	418c90 <stdout_stream_log+0x6d4>
  418c88:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418c8c:	add	x0, x0, #0xe00
  418c90:	str	x0, [x29, #160]
  418c94:	ldr	x0, [x29, #128]
  418c98:	add	x1, x0, #0x1
  418c9c:	str	x1, [x29, #128]
  418ca0:	lsl	x0, x0, #4
  418ca4:	ldr	x1, [x29, #152]
  418ca8:	add	x19, x1, x0
  418cac:	ldr	x0, [x29, #160]
  418cb0:	bl	406af0 <strlen@plt>
  418cb4:	mov	x1, x0
  418cb8:	ldr	x0, [x29, #160]
  418cbc:	str	x0, [x19]
  418cc0:	str	x1, [x19, #8]
  418cc4:	ldr	x0, [x29, #64]
  418cc8:	mov	x2, #0x0                   	// #0
  418ccc:	mov	x1, x0
  418cd0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418cd4:	add	x0, x0, #0xe10
  418cd8:	bl	405f10 <strjoin_real@plt>
  418cdc:	str	x0, [x29, #112]
  418ce0:	ldr	x0, [x29, #112]
  418ce4:	cmp	x0, #0x0
  418ce8:	b.eq	418d18 <stdout_stream_log+0x75c>  // b.none
  418cec:	ldr	x0, [x29, #128]
  418cf0:	add	x1, x0, #0x1
  418cf4:	str	x1, [x29, #128]
  418cf8:	lsl	x0, x0, #4
  418cfc:	ldr	x1, [x29, #152]
  418d00:	add	x19, x1, x0
  418d04:	ldr	x20, [x29, #112]
  418d08:	ldr	x0, [x29, #112]
  418d0c:	bl	406af0 <strlen@plt>
  418d10:	str	x20, [x19]
  418d14:	str	x0, [x19, #8]
  418d18:	ldr	x0, [x29, #72]
  418d1c:	ldr	x8, [x0]
  418d20:	ldr	x0, [x29, #72]
  418d24:	ldr	x0, [x0, #104]
  418d28:	ldr	w1, [x29, #92]
  418d2c:	mov	w7, #0x0                   	// #0
  418d30:	mov	w6, w1
  418d34:	mov	x5, #0x0                   	// #0
  418d38:	mov	x4, x0
  418d3c:	ldr	x3, [x29, #136]
  418d40:	ldr	x2, [x29, #128]
  418d44:	ldr	x1, [x29, #152]
  418d48:	mov	x0, x8
  418d4c:	bl	411768 <server_dispatch_message>
  418d50:	mov	w19, #0x0                   	// #0
  418d54:	add	x0, x29, #0x78
  418d58:	bl	4177b8 <freep>
  418d5c:	add	x0, x29, #0x70
  418d60:	bl	4177b8 <freep>
  418d64:	mov	w1, w19
  418d68:	adrp	x0, 441000 <wordlist.9471+0x208>
  418d6c:	ldr	x0, [x0, #4064]
  418d70:	ldr	x2, [x29, #216]
  418d74:	ldr	x0, [x0]
  418d78:	eor	x0, x2, x0
  418d7c:	cmp	x0, #0x0
  418d80:	b.eq	418d88 <stdout_stream_log+0x7cc>  // b.none
  418d84:	bl	4063e0 <__stack_chk_fail@plt>
  418d88:	mov	w0, w1
  418d8c:	mov	sp, x29
  418d90:	ldp	x19, x20, [sp, #16]
  418d94:	ldp	x21, x22, [sp, #32]
  418d98:	ldp	x29, x30, [sp], #224
  418d9c:	ret

0000000000418da0 <stdout_stream_line>:
  418da0:	stp	x29, x30, [sp, #-144]!
  418da4:	mov	x29, sp
  418da8:	str	x0, [sp, #40]
  418dac:	str	x1, [sp, #32]
  418db0:	str	w2, [sp, #28]
  418db4:	ldr	x0, [sp, #40]
  418db8:	cmp	x0, #0x0
  418dbc:	cset	w0, eq  // eq = none
  418dc0:	and	w0, w0, #0xff
  418dc4:	and	x0, x0, #0xff
  418dc8:	cmp	x0, #0x0
  418dcc:	b.eq	418df8 <stdout_stream_line+0x58>  // b.none
  418dd0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418dd4:	add	x1, x0, #0xaeb
  418dd8:	adrp	x0, 42b000 <__func__.15991+0x530>
  418ddc:	add	x4, x0, #0x5d0
  418de0:	mov	w3, #0x146                 	// #326
  418de4:	mov	x2, x1
  418de8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418dec:	add	x1, x0, #0xb48
  418df0:	mov	w0, #0x0                   	// #0
  418df4:	bl	405fd0 <log_assert_failed_realm@plt>
  418df8:	ldr	x0, [sp, #32]
  418dfc:	cmp	x0, #0x0
  418e00:	cset	w0, eq  // eq = none
  418e04:	and	w0, w0, #0xff
  418e08:	and	x0, x0, #0xff
  418e0c:	cmp	x0, #0x0
  418e10:	b.eq	418e3c <stdout_stream_line+0x9c>  // b.none
  418e14:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418e18:	add	x1, x0, #0xaeb
  418e1c:	adrp	x0, 42b000 <__func__.15991+0x530>
  418e20:	add	x4, x0, #0x5d0
  418e24:	mov	w3, #0x147                 	// #327
  418e28:	mov	x2, x1
  418e2c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418e30:	add	x1, x0, #0xcc8
  418e34:	mov	w0, #0x0                   	// #0
  418e38:	bl	405fd0 <log_assert_failed_realm@plt>
  418e3c:	ldr	x0, [sp, #32]
  418e40:	str	x0, [sp, #136]
  418e44:	ldr	x0, [sp, #32]
  418e48:	bl	406910 <strstrip@plt>
  418e4c:	str	x0, [sp, #32]
  418e50:	ldr	w0, [sp, #28]
  418e54:	cmp	w0, #0x0
  418e58:	b.eq	418ee8 <stdout_stream_line+0x148>  // b.none
  418e5c:	ldr	x0, [sp, #40]
  418e60:	ldr	w0, [x0, #8]
  418e64:	cmp	w0, #0x7
  418e68:	b.eq	418ee8 <stdout_stream_line+0x148>  // b.none
  418e6c:	mov	w0, #0x4                   	// #4
  418e70:	str	w0, [sp, #60]
  418e74:	str	wzr, [sp, #64]
  418e78:	str	wzr, [sp, #68]
  418e7c:	ldr	w0, [sp, #68]
  418e80:	bl	406c30 <log_get_max_level_realm@plt>
  418e84:	mov	w1, w0
  418e88:	ldr	w0, [sp, #60]
  418e8c:	and	w0, w0, #0x7
  418e90:	cmp	w1, w0
  418e94:	b.lt	418ed8 <stdout_stream_line+0x138>  // b.tstop
  418e98:	ldr	w0, [sp, #68]
  418e9c:	lsl	w1, w0, #10
  418ea0:	ldr	w0, [sp, #60]
  418ea4:	orr	w6, w1, w0
  418ea8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418eac:	add	x1, x0, #0xaeb
  418eb0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418eb4:	add	x5, x0, #0xe30
  418eb8:	adrp	x0, 42b000 <__func__.15991+0x530>
  418ebc:	add	x4, x0, #0x5e8
  418ec0:	mov	w3, #0x14e                 	// #334
  418ec4:	mov	x2, x1
  418ec8:	ldr	w1, [sp, #64]
  418ecc:	mov	w0, w6
  418ed0:	bl	406590 <log_internal_realm@plt>
  418ed4:	b	418ee0 <stdout_stream_line+0x140>
  418ed8:	ldr	w0, [sp, #64]
  418edc:	cmp	w0, #0x0
  418ee0:	mov	w0, #0xffffffea            	// #-22
  418ee4:	b	419490 <stdout_stream_line+0x6f0>
  418ee8:	ldr	x0, [sp, #40]
  418eec:	ldr	w0, [x0, #8]
  418ef0:	cmp	w0, #0x7
  418ef4:	b.eq	419454 <stdout_stream_line+0x6b4>  // b.none
  418ef8:	cmp	w0, #0x7
  418efc:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f00:	cmp	w0, #0x6
  418f04:	b.eq	419384 <stdout_stream_line+0x5e4>  // b.none
  418f08:	cmp	w0, #0x6
  418f0c:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f10:	cmp	w0, #0x5
  418f14:	b.eq	4192bc <stdout_stream_line+0x51c>  // b.none
  418f18:	cmp	w0, #0x5
  418f1c:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f20:	cmp	w0, #0x4
  418f24:	b.eq	4191f4 <stdout_stream_line+0x454>  // b.none
  418f28:	cmp	w0, #0x4
  418f2c:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f30:	cmp	w0, #0x3
  418f34:	b.eq	41912c <stdout_stream_line+0x38c>  // b.none
  418f38:	cmp	w0, #0x3
  418f3c:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f40:	cmp	w0, #0x2
  418f44:	b.eq	419058 <stdout_stream_line+0x2b8>  // b.none
  418f48:	cmp	w0, #0x2
  418f4c:	b.hi	419468 <stdout_stream_line+0x6c8>  // b.pmore
  418f50:	cmp	w0, #0x0
  418f54:	b.eq	418f64 <stdout_stream_line+0x1c4>  // b.none
  418f58:	cmp	w0, #0x1
  418f5c:	b.eq	418fd8 <stdout_stream_line+0x238>  // b.none
  418f60:	b	419468 <stdout_stream_line+0x6c8>
  418f64:	ldr	x0, [sp, #32]
  418f68:	bl	417858 <isempty>
  418f6c:	and	w0, w0, #0xff
  418f70:	eor	w0, w0, #0x1
  418f74:	and	w0, w0, #0xff
  418f78:	cmp	w0, #0x0
  418f7c:	b.eq	418fc4 <stdout_stream_line+0x224>  // b.none
  418f80:	ldr	x0, [sp, #32]
  418f84:	bl	406770 <strdup@plt>
  418f88:	mov	x1, x0
  418f8c:	ldr	x0, [sp, #40]
  418f90:	str	x1, [x0, #40]
  418f94:	ldr	x0, [sp, #40]
  418f98:	ldr	x0, [x0, #40]
  418f9c:	cmp	x0, #0x0
  418fa0:	b.ne	418fc4 <stdout_stream_line+0x224>  // b.any
  418fa4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  418fa8:	add	x1, x0, #0xaeb
  418fac:	adrp	x0, 42b000 <__func__.15991+0x530>
  418fb0:	add	x3, x0, #0x5e8
  418fb4:	mov	w2, #0x158                 	// #344
  418fb8:	mov	w0, #0x0                   	// #0
  418fbc:	bl	406b70 <log_oom_internal@plt>
  418fc0:	b	419490 <stdout_stream_line+0x6f0>
  418fc4:	ldr	x0, [sp, #40]
  418fc8:	mov	w1, #0x1                   	// #1
  418fcc:	str	w1, [x0, #8]
  418fd0:	mov	w0, #0x0                   	// #0
  418fd4:	b	419490 <stdout_stream_line+0x6f0>
  418fd8:	ldr	x0, [sp, #40]
  418fdc:	ldr	w0, [x0, #20]
  418fe0:	cmp	w0, #0x0
  418fe4:	b.ne	419044 <stdout_stream_line+0x2a4>  // b.any
  418fe8:	mov	w1, #0x5                   	// #5
  418fec:	ldr	x0, [sp, #32]
  418ff0:	bl	406bd0 <unit_name_is_valid@plt>
  418ff4:	and	w0, w0, #0xff
  418ff8:	cmp	w0, #0x0
  418ffc:	b.eq	419044 <stdout_stream_line+0x2a4>  // b.none
  419000:	ldr	x0, [sp, #32]
  419004:	bl	406770 <strdup@plt>
  419008:	mov	x1, x0
  41900c:	ldr	x0, [sp, #40]
  419010:	str	x1, [x0, #48]
  419014:	ldr	x0, [sp, #40]
  419018:	ldr	x0, [x0, #48]
  41901c:	cmp	x0, #0x0
  419020:	b.ne	419044 <stdout_stream_line+0x2a4>  // b.any
  419024:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419028:	add	x1, x0, #0xaeb
  41902c:	adrp	x0, 42b000 <__func__.15991+0x530>
  419030:	add	x3, x0, #0x5e8
  419034:	mov	w2, #0x164                 	// #356
  419038:	mov	w0, #0x0                   	// #0
  41903c:	bl	406b70 <log_oom_internal@plt>
  419040:	b	419490 <stdout_stream_line+0x6f0>
  419044:	ldr	x0, [sp, #40]
  419048:	mov	w1, #0x2                   	// #2
  41904c:	str	w1, [x0, #8]
  419050:	mov	w0, #0x0                   	// #0
  419054:	b	419490 <stdout_stream_line+0x6f0>
  419058:	ldr	x0, [sp, #40]
  41905c:	add	x0, x0, #0x38
  419060:	mov	x1, x0
  419064:	ldr	x0, [sp, #32]
  419068:	bl	406340 <safe_atoi@plt>
  41906c:	str	w0, [sp, #72]
  419070:	ldr	w0, [sp, #72]
  419074:	cmp	w0, #0x0
  419078:	b.lt	41909c <stdout_stream_line+0x2fc>  // b.tstop
  41907c:	ldr	x0, [sp, #40]
  419080:	ldr	w0, [x0, #56]
  419084:	cmp	w0, #0x0
  419088:	b.lt	41909c <stdout_stream_line+0x2fc>  // b.tstop
  41908c:	ldr	x0, [sp, #40]
  419090:	ldr	w0, [x0, #56]
  419094:	cmp	w0, #0x3e7
  419098:	b.le	419118 <stdout_stream_line+0x378>
  41909c:	mov	w0, #0x4                   	// #4
  4190a0:	str	w0, [sp, #124]
  4190a4:	str	wzr, [sp, #128]
  4190a8:	str	wzr, [sp, #132]
  4190ac:	ldr	w0, [sp, #132]
  4190b0:	bl	406c30 <log_get_max_level_realm@plt>
  4190b4:	mov	w1, w0
  4190b8:	ldr	w0, [sp, #124]
  4190bc:	and	w0, w0, #0x7
  4190c0:	cmp	w1, w0
  4190c4:	b.lt	419108 <stdout_stream_line+0x368>  // b.tstop
  4190c8:	ldr	w0, [sp, #132]
  4190cc:	lsl	w1, w0, #10
  4190d0:	ldr	w0, [sp, #124]
  4190d4:	orr	w6, w1, w0
  4190d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4190dc:	add	x1, x0, #0xaeb
  4190e0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4190e4:	add	x5, x0, #0xe60
  4190e8:	adrp	x0, 42b000 <__func__.15991+0x530>
  4190ec:	add	x4, x0, #0x5e8
  4190f0:	mov	w3, #0x16d                 	// #365
  4190f4:	mov	x2, x1
  4190f8:	ldr	w1, [sp, #128]
  4190fc:	mov	w0, w6
  419100:	bl	406590 <log_internal_realm@plt>
  419104:	b	419110 <stdout_stream_line+0x370>
  419108:	ldr	w0, [sp, #128]
  41910c:	cmp	w0, #0x0
  419110:	mov	w0, #0xffffffea            	// #-22
  419114:	b	419490 <stdout_stream_line+0x6f0>
  419118:	ldr	x0, [sp, #40]
  41911c:	mov	w1, #0x3                   	// #3
  419120:	str	w1, [x0, #8]
  419124:	mov	w0, #0x0                   	// #0
  419128:	b	419490 <stdout_stream_line+0x6f0>
  41912c:	ldr	x0, [sp, #32]
  419130:	bl	405c40 <parse_boolean@plt>
  419134:	str	w0, [sp, #72]
  419138:	ldr	w0, [sp, #72]
  41913c:	cmp	w0, #0x0
  419140:	b.ge	4191c0 <stdout_stream_line+0x420>  // b.tcont
  419144:	mov	w0, #0x4                   	// #4
  419148:	str	w0, [sp, #112]
  41914c:	str	wzr, [sp, #116]
  419150:	str	wzr, [sp, #120]
  419154:	ldr	w0, [sp, #120]
  419158:	bl	406c30 <log_get_max_level_realm@plt>
  41915c:	mov	w1, w0
  419160:	ldr	w0, [sp, #112]
  419164:	and	w0, w0, #0x7
  419168:	cmp	w1, w0
  41916c:	b.lt	4191b0 <stdout_stream_line+0x410>  // b.tstop
  419170:	ldr	w0, [sp, #120]
  419174:	lsl	w1, w0, #10
  419178:	ldr	w0, [sp, #112]
  41917c:	orr	w6, w1, w0
  419180:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419184:	add	x1, x0, #0xaeb
  419188:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41918c:	add	x5, x0, #0xe88
  419190:	adrp	x0, 42b000 <__func__.15991+0x530>
  419194:	add	x4, x0, #0x5e8
  419198:	mov	w3, #0x177                 	// #375
  41919c:	mov	x2, x1
  4191a0:	ldr	w1, [sp, #116]
  4191a4:	mov	w0, w6
  4191a8:	bl	406590 <log_internal_realm@plt>
  4191ac:	b	4191b8 <stdout_stream_line+0x418>
  4191b0:	ldr	w0, [sp, #116]
  4191b4:	cmp	w0, #0x0
  4191b8:	mov	w0, #0xffffffea            	// #-22
  4191bc:	b	419490 <stdout_stream_line+0x6f0>
  4191c0:	ldr	w0, [sp, #72]
  4191c4:	cmp	w0, #0x0
  4191c8:	cset	w0, ne  // ne = any
  4191cc:	and	w2, w0, #0xff
  4191d0:	ldr	x1, [sp, #40]
  4191d4:	ldrb	w0, [x1, #60]
  4191d8:	bfxil	w0, w2, #0, #1
  4191dc:	strb	w0, [x1, #60]
  4191e0:	ldr	x0, [sp, #40]
  4191e4:	mov	w1, #0x4                   	// #4
  4191e8:	str	w1, [x0, #8]
  4191ec:	mov	w0, #0x0                   	// #0
  4191f0:	b	419490 <stdout_stream_line+0x6f0>
  4191f4:	ldr	x0, [sp, #32]
  4191f8:	bl	405c40 <parse_boolean@plt>
  4191fc:	str	w0, [sp, #72]
  419200:	ldr	w0, [sp, #72]
  419204:	cmp	w0, #0x0
  419208:	b.ge	419288 <stdout_stream_line+0x4e8>  // b.tcont
  41920c:	mov	w0, #0x4                   	// #4
  419210:	str	w0, [sp, #100]
  419214:	str	wzr, [sp, #104]
  419218:	str	wzr, [sp, #108]
  41921c:	ldr	w0, [sp, #108]
  419220:	bl	406c30 <log_get_max_level_realm@plt>
  419224:	mov	w1, w0
  419228:	ldr	w0, [sp, #100]
  41922c:	and	w0, w0, #0x7
  419230:	cmp	w1, w0
  419234:	b.lt	419278 <stdout_stream_line+0x4d8>  // b.tstop
  419238:	ldr	w0, [sp, #108]
  41923c:	lsl	w1, w0, #10
  419240:	ldr	w0, [sp, #100]
  419244:	orr	w6, w1, w0
  419248:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41924c:	add	x1, x0, #0xaeb
  419250:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419254:	add	x5, x0, #0xeb0
  419258:	adrp	x0, 42b000 <__func__.15991+0x530>
  41925c:	add	x4, x0, #0x5e8
  419260:	mov	w3, #0x182                 	// #386
  419264:	mov	x2, x1
  419268:	ldr	w1, [sp, #104]
  41926c:	mov	w0, w6
  419270:	bl	406590 <log_internal_realm@plt>
  419274:	b	419280 <stdout_stream_line+0x4e0>
  419278:	ldr	w0, [sp, #104]
  41927c:	cmp	w0, #0x0
  419280:	mov	w0, #0xffffffea            	// #-22
  419284:	b	419490 <stdout_stream_line+0x6f0>
  419288:	ldr	w0, [sp, #72]
  41928c:	cmp	w0, #0x0
  419290:	cset	w0, ne  // ne = any
  419294:	and	w2, w0, #0xff
  419298:	ldr	x1, [sp, #40]
  41929c:	ldrb	w0, [x1, #60]
  4192a0:	bfi	w0, w2, #1, #1
  4192a4:	strb	w0, [x1, #60]
  4192a8:	ldr	x0, [sp, #40]
  4192ac:	mov	w1, #0x5                   	// #5
  4192b0:	str	w1, [x0, #8]
  4192b4:	mov	w0, #0x0                   	// #0
  4192b8:	b	419490 <stdout_stream_line+0x6f0>
  4192bc:	ldr	x0, [sp, #32]
  4192c0:	bl	405c40 <parse_boolean@plt>
  4192c4:	str	w0, [sp, #72]
  4192c8:	ldr	w0, [sp, #72]
  4192cc:	cmp	w0, #0x0
  4192d0:	b.ge	419350 <stdout_stream_line+0x5b0>  // b.tcont
  4192d4:	mov	w0, #0x4                   	// #4
  4192d8:	str	w0, [sp, #88]
  4192dc:	str	wzr, [sp, #92]
  4192e0:	str	wzr, [sp, #96]
  4192e4:	ldr	w0, [sp, #96]
  4192e8:	bl	406c30 <log_get_max_level_realm@plt>
  4192ec:	mov	w1, w0
  4192f0:	ldr	w0, [sp, #88]
  4192f4:	and	w0, w0, #0x7
  4192f8:	cmp	w1, w0
  4192fc:	b.lt	419340 <stdout_stream_line+0x5a0>  // b.tstop
  419300:	ldr	w0, [sp, #96]
  419304:	lsl	w1, w0, #10
  419308:	ldr	w0, [sp, #88]
  41930c:	orr	w6, w1, w0
  419310:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419314:	add	x1, x0, #0xaeb
  419318:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41931c:	add	x5, x0, #0xed8
  419320:	adrp	x0, 42b000 <__func__.15991+0x530>
  419324:	add	x4, x0, #0x5e8
  419328:	mov	w3, #0x18d                 	// #397
  41932c:	mov	x2, x1
  419330:	ldr	w1, [sp, #92]
  419334:	mov	w0, w6
  419338:	bl	406590 <log_internal_realm@plt>
  41933c:	b	419348 <stdout_stream_line+0x5a8>
  419340:	ldr	w0, [sp, #92]
  419344:	cmp	w0, #0x0
  419348:	mov	w0, #0xffffffea            	// #-22
  41934c:	b	419490 <stdout_stream_line+0x6f0>
  419350:	ldr	w0, [sp, #72]
  419354:	cmp	w0, #0x0
  419358:	cset	w0, ne  // ne = any
  41935c:	and	w2, w0, #0xff
  419360:	ldr	x1, [sp, #40]
  419364:	ldrb	w0, [x1, #60]
  419368:	bfi	w0, w2, #2, #1
  41936c:	strb	w0, [x1, #60]
  419370:	ldr	x0, [sp, #40]
  419374:	mov	w1, #0x6                   	// #6
  419378:	str	w1, [x0, #8]
  41937c:	mov	w0, #0x0                   	// #0
  419380:	b	419490 <stdout_stream_line+0x6f0>
  419384:	ldr	x0, [sp, #32]
  419388:	bl	405c40 <parse_boolean@plt>
  41938c:	str	w0, [sp, #72]
  419390:	ldr	w0, [sp, #72]
  419394:	cmp	w0, #0x0
  419398:	b.ge	419418 <stdout_stream_line+0x678>  // b.tcont
  41939c:	mov	w0, #0x4                   	// #4
  4193a0:	str	w0, [sp, #76]
  4193a4:	str	wzr, [sp, #80]
  4193a8:	str	wzr, [sp, #84]
  4193ac:	ldr	w0, [sp, #84]
  4193b0:	bl	406c30 <log_get_max_level_realm@plt>
  4193b4:	mov	w1, w0
  4193b8:	ldr	w0, [sp, #76]
  4193bc:	and	w0, w0, #0x7
  4193c0:	cmp	w1, w0
  4193c4:	b.lt	419408 <stdout_stream_line+0x668>  // b.tstop
  4193c8:	ldr	w0, [sp, #84]
  4193cc:	lsl	w1, w0, #10
  4193d0:	ldr	w0, [sp, #76]
  4193d4:	orr	w6, w1, w0
  4193d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4193dc:	add	x1, x0, #0xaeb
  4193e0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4193e4:	add	x5, x0, #0xf00
  4193e8:	adrp	x0, 42b000 <__func__.15991+0x530>
  4193ec:	add	x4, x0, #0x5e8
  4193f0:	mov	w3, #0x198                 	// #408
  4193f4:	mov	x2, x1
  4193f8:	ldr	w1, [sp, #80]
  4193fc:	mov	w0, w6
  419400:	bl	406590 <log_internal_realm@plt>
  419404:	b	419410 <stdout_stream_line+0x670>
  419408:	ldr	w0, [sp, #80]
  41940c:	cmp	w0, #0x0
  419410:	mov	w0, #0xffffffea            	// #-22
  419414:	b	419490 <stdout_stream_line+0x6f0>
  419418:	ldr	w0, [sp, #72]
  41941c:	cmp	w0, #0x0
  419420:	cset	w0, ne  // ne = any
  419424:	and	w2, w0, #0xff
  419428:	ldr	x1, [sp, #40]
  41942c:	ldrb	w0, [x1, #60]
  419430:	bfi	w0, w2, #3, #1
  419434:	strb	w0, [x1, #60]
  419438:	ldr	x0, [sp, #40]
  41943c:	mov	w1, #0x7                   	// #7
  419440:	str	w1, [x0, #8]
  419444:	ldr	x0, [sp, #40]
  419448:	bl	417f68 <stdout_stream_save>
  41944c:	mov	w0, #0x0                   	// #0
  419450:	b	419490 <stdout_stream_line+0x6f0>
  419454:	ldr	w2, [sp, #28]
  419458:	ldr	x1, [sp, #136]
  41945c:	ldr	x0, [sp, #40]
  419460:	bl	4185bc <stdout_stream_log>
  419464:	b	419490 <stdout_stream_line+0x6f0>
  419468:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41946c:	add	x1, x0, #0xaeb
  419470:	adrp	x0, 42b000 <__func__.15991+0x530>
  419474:	add	x4, x0, #0x5d0
  419478:	mov	w3, #0x1a7                 	// #423
  41947c:	mov	x2, x1
  419480:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419484:	add	x1, x0, #0xf28
  419488:	mov	w0, #0x0                   	// #0
  41948c:	bl	406060 <log_assert_failed_unreachable_realm@plt>
  419490:	ldp	x29, x30, [sp], #144
  419494:	ret

0000000000419498 <stdout_stream_scan>:
  419498:	stp	x29, x30, [sp, #-80]!
  41949c:	mov	x29, sp
  4194a0:	str	x0, [sp, #24]
  4194a4:	strb	w1, [sp, #23]
  4194a8:	ldr	x0, [sp, #24]
  4194ac:	cmp	x0, #0x0
  4194b0:	cset	w0, eq  // eq = none
  4194b4:	and	w0, w0, #0xff
  4194b8:	and	x0, x0, #0xff
  4194bc:	cmp	x0, #0x0
  4194c0:	b.eq	4194ec <stdout_stream_scan+0x54>  // b.none
  4194c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4194c8:	add	x1, x0, #0xaeb
  4194cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  4194d0:	add	x4, x0, #0x600
  4194d4:	mov	w3, #0x1af                 	// #431
  4194d8:	mov	x2, x1
  4194dc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4194e0:	add	x1, x0, #0xb48
  4194e4:	mov	w0, #0x0                   	// #0
  4194e8:	bl	405fd0 <log_assert_failed_realm@plt>
  4194ec:	ldr	x0, [sp, #24]
  4194f0:	ldr	x0, [x0, #64]
  4194f4:	str	x0, [sp, #40]
  4194f8:	ldr	x0, [sp, #24]
  4194fc:	ldr	x0, [x0, #72]
  419500:	str	x0, [sp, #48]
  419504:	ldr	x2, [sp, #48]
  419508:	mov	w1, #0xa                   	// #10
  41950c:	ldr	x0, [sp, #40]
  419510:	bl	406870 <memchr@plt>
  419514:	str	x0, [sp, #64]
  419518:	ldr	x0, [sp, #64]
  41951c:	cmp	x0, #0x0
  419520:	b.eq	419534 <stdout_stream_scan+0x9c>  // b.none
  419524:	ldr	x1, [sp, #64]
  419528:	ldr	x0, [sp, #40]
  41952c:	sub	x0, x1, x0
  419530:	b	419538 <stdout_stream_scan+0xa0>
  419534:	ldr	x0, [sp, #48]
  419538:	mov	x2, x0
  41953c:	mov	w1, #0x0                   	// #0
  419540:	ldr	x0, [sp, #40]
  419544:	bl	406870 <memchr@plt>
  419548:	str	x0, [sp, #72]
  41954c:	ldr	x0, [sp, #72]
  419550:	cmp	x0, #0x0
  419554:	b.eq	419578 <stdout_stream_scan+0xe0>  // b.none
  419558:	ldr	x1, [sp, #72]
  41955c:	ldr	x0, [sp, #40]
  419560:	sub	x0, x1, x0
  419564:	add	x0, x0, #0x1
  419568:	str	x0, [sp, #56]
  41956c:	mov	w0, #0x1                   	// #1
  419570:	str	w0, [sp, #32]
  419574:	b	4195e8 <stdout_stream_scan+0x150>
  419578:	ldr	x0, [sp, #64]
  41957c:	cmp	x0, #0x0
  419580:	b.eq	4195a8 <stdout_stream_scan+0x110>  // b.none
  419584:	ldr	x0, [sp, #64]
  419588:	strb	wzr, [x0]
  41958c:	ldr	x1, [sp, #64]
  419590:	ldr	x0, [sp, #40]
  419594:	sub	x0, x1, x0
  419598:	add	x0, x0, #0x1
  41959c:	str	x0, [sp, #56]
  4195a0:	str	wzr, [sp, #32]
  4195a4:	b	4195e8 <stdout_stream_scan+0x150>
  4195a8:	ldr	x0, [sp, #24]
  4195ac:	ldr	x0, [x0]
  4195b0:	ldr	x0, [x0, #712]
  4195b4:	ldr	x1, [sp, #48]
  4195b8:	cmp	x1, x0
  4195bc:	b.cc	419634 <stdout_stream_scan+0x19c>  // b.lo, b.ul, b.last
  4195c0:	ldr	x0, [sp, #24]
  4195c4:	ldr	x0, [x0]
  4195c8:	ldr	x0, [x0, #712]
  4195cc:	ldr	x1, [sp, #40]
  4195d0:	add	x0, x1, x0
  4195d4:	strb	wzr, [x0]
  4195d8:	ldr	x0, [sp, #48]
  4195dc:	str	x0, [sp, #56]
  4195e0:	mov	w0, #0x2                   	// #2
  4195e4:	str	w0, [sp, #32]
  4195e8:	ldr	w2, [sp, #32]
  4195ec:	ldr	x1, [sp, #40]
  4195f0:	ldr	x0, [sp, #24]
  4195f4:	bl	418da0 <stdout_stream_line>
  4195f8:	str	w0, [sp, #36]
  4195fc:	ldr	w0, [sp, #36]
  419600:	cmp	w0, #0x0
  419604:	b.ge	419610 <stdout_stream_scan+0x178>  // b.tcont
  419608:	ldr	w0, [sp, #36]
  41960c:	b	4196d4 <stdout_stream_scan+0x23c>
  419610:	ldr	x1, [sp, #48]
  419614:	ldr	x0, [sp, #56]
  419618:	sub	x0, x1, x0
  41961c:	str	x0, [sp, #48]
  419620:	ldr	x1, [sp, #40]
  419624:	ldr	x0, [sp, #56]
  419628:	add	x0, x1, x0
  41962c:	str	x0, [sp, #40]
  419630:	b	419504 <stdout_stream_scan+0x6c>
  419634:	nop
  419638:	ldrb	w0, [sp, #23]
  41963c:	cmp	w0, #0x0
  419640:	b.eq	41969c <stdout_stream_scan+0x204>  // b.none
  419644:	ldr	x0, [sp, #48]
  419648:	cmp	x0, #0x0
  41964c:	b.eq	41969c <stdout_stream_scan+0x204>  // b.none
  419650:	ldr	x1, [sp, #40]
  419654:	ldr	x0, [sp, #48]
  419658:	add	x0, x1, x0
  41965c:	strb	wzr, [x0]
  419660:	mov	w2, #0x3                   	// #3
  419664:	ldr	x1, [sp, #40]
  419668:	ldr	x0, [sp, #24]
  41966c:	bl	418da0 <stdout_stream_line>
  419670:	str	w0, [sp, #36]
  419674:	ldr	w0, [sp, #36]
  419678:	cmp	w0, #0x0
  41967c:	b.ge	419688 <stdout_stream_scan+0x1f0>  // b.tcont
  419680:	ldr	w0, [sp, #36]
  419684:	b	4196d4 <stdout_stream_scan+0x23c>
  419688:	ldr	x1, [sp, #40]
  41968c:	ldr	x0, [sp, #48]
  419690:	add	x0, x1, x0
  419694:	str	x0, [sp, #40]
  419698:	str	xzr, [sp, #48]
  41969c:	ldr	x0, [sp, #24]
  4196a0:	ldr	x0, [x0, #64]
  4196a4:	ldr	x1, [sp, #40]
  4196a8:	cmp	x1, x0
  4196ac:	b.ls	4196d0 <stdout_stream_scan+0x238>  // b.plast
  4196b0:	ldr	x0, [sp, #24]
  4196b4:	ldr	x0, [x0, #64]
  4196b8:	ldr	x2, [sp, #48]
  4196bc:	ldr	x1, [sp, #40]
  4196c0:	bl	406a80 <memmove@plt>
  4196c4:	ldr	x0, [sp, #24]
  4196c8:	ldr	x1, [sp, #48]
  4196cc:	str	x1, [x0, #72]
  4196d0:	mov	w0, #0x0                   	// #0
  4196d4:	ldp	x29, x30, [sp], #80
  4196d8:	ret

00000000004196dc <stdout_stream_process>:
  4196dc:	stp	x29, x30, [sp, #-256]!
  4196e0:	mov	x29, sp
  4196e4:	str	x0, [sp, #40]
  4196e8:	str	w1, [sp, #36]
  4196ec:	str	w2, [sp, #32]
  4196f0:	str	x3, [sp, #24]
  4196f4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4196f8:	ldr	x0, [x0, #4064]
  4196fc:	ldr	x1, [x0]
  419700:	str	x1, [sp, #248]
  419704:	mov	x1, #0x0                   	// #0
  419708:	ldr	x0, [sp, #24]
  41970c:	str	x0, [sp, #104]
  419710:	str	xzr, [sp, #88]
  419714:	stp	xzr, xzr, [sp, #160]
  419718:	stp	xzr, xzr, [sp, #176]
  41971c:	stp	xzr, xzr, [sp, #192]
  419720:	str	xzr, [sp, #208]
  419724:	add	x0, sp, #0x90
  419728:	str	x0, [sp, #176]
  41972c:	mov	x0, #0x1                   	// #1
  419730:	str	x0, [sp, #184]
  419734:	add	x0, sp, #0xd8
  419738:	str	x0, [sp, #192]
  41973c:	mov	x0, #0x20                  	// #32
  419740:	str	x0, [sp, #200]
  419744:	ldr	x0, [sp, #104]
  419748:	cmp	x0, #0x0
  41974c:	cset	w0, eq  // eq = none
  419750:	and	w0, w0, #0xff
  419754:	and	x0, x0, #0xff
  419758:	cmp	x0, #0x0
  41975c:	b.eq	419788 <stdout_stream_process+0xac>  // b.none
  419760:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419764:	add	x1, x0, #0xaeb
  419768:	adrp	x0, 42b000 <__func__.15991+0x530>
  41976c:	add	x4, x0, #0x618
  419770:	mov	w3, #0x1fa                 	// #506
  419774:	mov	x2, x1
  419778:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41977c:	add	x1, x0, #0xb48
  419780:	mov	w0, #0x0                   	// #0
  419784:	bl	405fd0 <log_assert_failed_realm@plt>
  419788:	ldr	w1, [sp, #32]
  41978c:	mov	w0, #0x11                  	// #17
  419790:	orr	w0, w1, w0
  419794:	cmp	w0, #0x11
  419798:	b.eq	419818 <stdout_stream_process+0x13c>  // b.none
  41979c:	mov	w0, #0x3                   	// #3
  4197a0:	str	w0, [sp, #76]
  4197a4:	str	wzr, [sp, #80]
  4197a8:	str	wzr, [sp, #84]
  4197ac:	ldr	w0, [sp, #84]
  4197b0:	bl	406c30 <log_get_max_level_realm@plt>
  4197b4:	mov	w1, w0
  4197b8:	ldr	w0, [sp, #76]
  4197bc:	and	w0, w0, #0x7
  4197c0:	cmp	w1, w0
  4197c4:	b.lt	41980c <stdout_stream_process+0x130>  // b.tstop
  4197c8:	ldr	w0, [sp, #84]
  4197cc:	lsl	w1, w0, #10
  4197d0:	ldr	w0, [sp, #76]
  4197d4:	orr	w7, w1, w0
  4197d8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4197dc:	add	x1, x0, #0xaeb
  4197e0:	ldr	w6, [sp, #32]
  4197e4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4197e8:	add	x5, x0, #0xf40
  4197ec:	adrp	x0, 42b000 <__func__.15991+0x530>
  4197f0:	add	x4, x0, #0x630
  4197f4:	mov	w3, #0x1fd                 	// #509
  4197f8:	mov	x2, x1
  4197fc:	ldr	w1, [sp, #80]
  419800:	mov	w0, w7
  419804:	bl	406590 <log_internal_realm@plt>
  419808:	b	419b38 <stdout_stream_process+0x45c>
  41980c:	ldr	w0, [sp, #80]
  419810:	cmp	w0, #0x0
  419814:	b	419b38 <stdout_stream_process+0x45c>
  419818:	ldr	x0, [sp, #104]
  41981c:	ldr	x0, [x0, #72]
  419820:	add	x1, x0, #0x1
  419824:	ldr	x0, [sp, #104]
  419828:	ldr	x0, [x0, #80]
  41982c:	cmp	x1, x0
  419830:	b.cc	419888 <stdout_stream_process+0x1ac>  // b.lo, b.ul, b.last
  419834:	ldr	x0, [sp, #104]
  419838:	add	x4, x0, #0x40
  41983c:	ldr	x0, [sp, #104]
  419840:	add	x1, x0, #0x50
  419844:	ldr	x0, [sp, #104]
  419848:	ldr	x0, [x0, #72]
  41984c:	add	x0, x0, #0x401
  419850:	mov	x3, #0x1                   	// #1
  419854:	mov	x2, x0
  419858:	mov	x0, x4
  41985c:	bl	406160 <greedy_realloc@plt>
  419860:	cmp	x0, #0x0
  419864:	b.ne	419888 <stdout_stream_process+0x1ac>  // b.any
  419868:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41986c:	add	x1, x0, #0xaeb
  419870:	adrp	x0, 42b000 <__func__.15991+0x530>
  419874:	add	x3, x0, #0x630
  419878:	mov	w2, #0x204                 	// #516
  41987c:	mov	w0, #0x0                   	// #0
  419880:	bl	406b70 <log_oom_internal@plt>
  419884:	b	419b38 <stdout_stream_process+0x45c>
  419888:	ldr	x0, [sp, #104]
  41988c:	ldr	x0, [x0, #80]
  419890:	sub	x0, x0, #0x1
  419894:	str	x0, [sp, #112]
  419898:	ldr	x0, [sp, #104]
  41989c:	ldr	x0, [x0]
  4198a0:	ldr	x0, [x0, #712]
  4198a4:	str	x0, [sp, #120]
  4198a8:	ldr	x0, [sp, #112]
  4198ac:	ldr	x2, [sp, #120]
  4198b0:	ldr	x1, [sp, #120]
  4198b4:	cmp	x2, x0
  4198b8:	csel	x0, x1, x0, ls  // ls = plast
  4198bc:	str	x0, [sp, #128]
  4198c0:	ldr	x0, [sp, #104]
  4198c4:	ldr	x1, [x0, #64]
  4198c8:	ldr	x0, [sp, #104]
  4198cc:	ldr	x0, [x0, #72]
  4198d0:	add	x1, x1, x0
  4198d4:	ldr	x0, [sp, #104]
  4198d8:	ldr	x0, [x0, #72]
  4198dc:	ldr	x2, [sp, #128]
  4198e0:	sub	x0, x2, x0
  4198e4:	str	x1, [sp, #144]
  4198e8:	str	x0, [sp, #152]
  4198ec:	ldr	x0, [sp, #104]
  4198f0:	ldr	w0, [x0, #12]
  4198f4:	add	x1, sp, #0xa0
  4198f8:	mov	w2, #0x40                  	// #64
  4198fc:	movk	w2, #0x4000, lsl #16
  419900:	bl	406710 <recvmsg@plt>
  419904:	str	x0, [sp, #136]
  419908:	ldr	x0, [sp, #136]
  41990c:	cmp	x0, #0x0
  419910:	b.ge	4199d0 <stdout_stream_process+0x2f4>  // b.tcont
  419914:	strb	wzr, [sp, #59]
  419918:	bl	4062e0 <__errno_location@plt>
  41991c:	ldr	w0, [x0]
  419920:	cmp	w0, #0x4
  419924:	b.eq	419930 <stdout_stream_process+0x254>  // b.none
  419928:	cmp	w0, #0xb
  41992c:	b.ne	419938 <stdout_stream_process+0x25c>  // b.any
  419930:	mov	w0, #0x1                   	// #1
  419934:	strb	w0, [sp, #59]
  419938:	nop
  41993c:	ldrb	w0, [sp, #59]
  419940:	cmp	w0, #0x0
  419944:	b.eq	419950 <stdout_stream_process+0x274>  // b.none
  419948:	mov	w0, #0x0                   	// #0
  41994c:	b	419b44 <stdout_stream_process+0x468>
  419950:	mov	w0, #0x4                   	// #4
  419954:	str	w0, [sp, #64]
  419958:	bl	4062e0 <__errno_location@plt>
  41995c:	ldr	w0, [x0]
  419960:	str	w0, [sp, #68]
  419964:	str	wzr, [sp, #72]
  419968:	ldr	w0, [sp, #72]
  41996c:	bl	406c30 <log_get_max_level_realm@plt>
  419970:	mov	w1, w0
  419974:	ldr	w0, [sp, #64]
  419978:	and	w0, w0, #0x7
  41997c:	cmp	w1, w0
  419980:	b.lt	4199c4 <stdout_stream_process+0x2e8>  // b.tstop
  419984:	ldr	w0, [sp, #72]
  419988:	lsl	w1, w0, #10
  41998c:	ldr	w0, [sp, #64]
  419990:	orr	w6, w1, w0
  419994:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419998:	add	x1, x0, #0xaeb
  41999c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  4199a0:	add	x5, x0, #0xf78
  4199a4:	adrp	x0, 42b000 <__func__.15991+0x530>
  4199a8:	add	x4, x0, #0x630
  4199ac:	mov	w3, #0x214                 	// #532
  4199b0:	mov	x2, x1
  4199b4:	ldr	w1, [sp, #68]
  4199b8:	mov	w0, w6
  4199bc:	bl	406590 <log_internal_realm@plt>
  4199c0:	b	419b38 <stdout_stream_process+0x45c>
  4199c4:	ldr	w0, [sp, #68]
  4199c8:	cmp	w0, #0x0
  4199cc:	b	419b38 <stdout_stream_process+0x45c>
  4199d0:	add	x0, sp, #0xa0
  4199d4:	bl	406500 <cmsg_close_all@plt>
  4199d8:	ldr	x0, [sp, #136]
  4199dc:	cmp	x0, #0x0
  4199e0:	b.ne	4199f4 <stdout_stream_process+0x318>  // b.any
  4199e4:	mov	w1, #0x1                   	// #1
  4199e8:	ldr	x0, [sp, #104]
  4199ec:	bl	419498 <stdout_stream_scan>
  4199f0:	b	419b38 <stdout_stream_process+0x45c>
  4199f4:	ldr	x0, [sp, #200]
  4199f8:	cmp	x0, #0xf
  4199fc:	b.ls	419a08 <stdout_stream_process+0x32c>  // b.plast
  419a00:	ldr	x0, [sp, #192]
  419a04:	b	419a0c <stdout_stream_process+0x330>
  419a08:	mov	x0, #0x0                   	// #0
  419a0c:	str	x0, [sp, #96]
  419a10:	b	419a64 <stdout_stream_process+0x388>
  419a14:	ldr	x0, [sp, #96]
  419a18:	ldr	w0, [x0, #8]
  419a1c:	cmp	w0, #0x1
  419a20:	b.ne	419a54 <stdout_stream_process+0x378>  // b.any
  419a24:	ldr	x0, [sp, #96]
  419a28:	ldr	w0, [x0, #12]
  419a2c:	cmp	w0, #0x2
  419a30:	b.ne	419a54 <stdout_stream_process+0x378>  // b.any
  419a34:	ldr	x0, [sp, #96]
  419a38:	ldr	x0, [x0]
  419a3c:	cmp	x0, #0x1c
  419a40:	b.ne	419a54 <stdout_stream_process+0x378>  // b.any
  419a44:	ldr	x0, [sp, #96]
  419a48:	add	x0, x0, #0x10
  419a4c:	str	x0, [sp, #88]
  419a50:	b	419a70 <stdout_stream_process+0x394>
  419a54:	add	x0, sp, #0xa0
  419a58:	ldr	x1, [sp, #96]
  419a5c:	bl	405e80 <__cmsg_nxthdr@plt>
  419a60:	str	x0, [sp, #96]
  419a64:	ldr	x0, [sp, #96]
  419a68:	cmp	x0, #0x0
  419a6c:	b.ne	419a14 <stdout_stream_process+0x338>  // b.any
  419a70:	ldr	x0, [sp, #88]
  419a74:	cmp	x0, #0x0
  419a78:	b.eq	419af0 <stdout_stream_process+0x414>  // b.none
  419a7c:	ldr	x0, [sp, #88]
  419a80:	ldr	w1, [x0]
  419a84:	ldr	x0, [sp, #104]
  419a88:	ldr	w0, [x0, #16]
  419a8c:	cmp	w1, w0
  419a90:	b.eq	419af0 <stdout_stream_process+0x414>  // b.none
  419a94:	mov	w1, #0x1                   	// #1
  419a98:	ldr	x0, [sp, #104]
  419a9c:	bl	419498 <stdout_stream_scan>
  419aa0:	str	w0, [sp, #60]
  419aa4:	ldr	w0, [sp, #60]
  419aa8:	cmp	w0, #0x0
  419aac:	b.lt	419b2c <stdout_stream_process+0x450>  // b.tstop
  419ab0:	ldr	x0, [sp, #104]
  419ab4:	add	x0, x0, #0x10
  419ab8:	ldr	x1, [sp, #88]
  419abc:	ldr	x2, [x1]
  419ac0:	str	x2, [x0]
  419ac4:	ldr	w1, [x1, #8]
  419ac8:	str	w1, [x0, #8]
  419acc:	ldr	x0, [sp, #104]
  419ad0:	ldr	x2, [x0]
  419ad4:	ldr	x0, [sp, #104]
  419ad8:	ldr	x0, [x0, #104]
  419adc:	mov	x1, x0
  419ae0:	mov	x0, x2
  419ae4:	bl	42426c <client_context_release>
  419ae8:	ldr	x0, [sp, #104]
  419aec:	str	xzr, [x0, #104]
  419af0:	ldr	x0, [sp, #104]
  419af4:	ldr	x1, [x0, #72]
  419af8:	ldr	x0, [sp, #136]
  419afc:	add	x1, x1, x0
  419b00:	ldr	x0, [sp, #104]
  419b04:	str	x1, [x0, #72]
  419b08:	mov	w1, #0x0                   	// #0
  419b0c:	ldr	x0, [sp, #104]
  419b10:	bl	419498 <stdout_stream_scan>
  419b14:	str	w0, [sp, #60]
  419b18:	ldr	w0, [sp, #60]
  419b1c:	cmp	w0, #0x0
  419b20:	b.lt	419b34 <stdout_stream_process+0x458>  // b.tstop
  419b24:	mov	w0, #0x1                   	// #1
  419b28:	b	419b44 <stdout_stream_process+0x468>
  419b2c:	nop
  419b30:	b	419b38 <stdout_stream_process+0x45c>
  419b34:	nop
  419b38:	ldr	x0, [sp, #104]
  419b3c:	bl	417f1c <stdout_stream_destroy>
  419b40:	mov	w0, #0x0                   	// #0
  419b44:	mov	w1, w0
  419b48:	adrp	x0, 441000 <wordlist.9471+0x208>
  419b4c:	ldr	x0, [x0, #4064]
  419b50:	ldr	x2, [sp, #248]
  419b54:	ldr	x0, [x0]
  419b58:	eor	x0, x2, x0
  419b5c:	cmp	x0, #0x0
  419b60:	b.eq	419b68 <stdout_stream_process+0x48c>  // b.none
  419b64:	bl	4063e0 <__stack_chk_fail@plt>
  419b68:	mov	w0, w1
  419b6c:	ldp	x29, x30, [sp], #256
  419b70:	ret

0000000000419b74 <stdout_stream_install>:
  419b74:	sub	sp, sp, #0x120
  419b78:	stp	x29, x30, [sp, #96]
  419b7c:	add	x29, sp, #0x60
  419b80:	str	x19, [sp, #112]
  419b84:	str	x0, [sp, #152]
  419b88:	str	w1, [sp, #148]
  419b8c:	str	x2, [sp, #136]
  419b90:	adrp	x0, 441000 <wordlist.9471+0x208>
  419b94:	ldr	x0, [x0, #4064]
  419b98:	ldr	x1, [x0]
  419b9c:	str	x1, [sp, #280]
  419ba0:	mov	x1, #0x0                   	// #0
  419ba4:	str	xzr, [sp, #240]
  419ba8:	ldr	x0, [sp, #152]
  419bac:	cmp	x0, #0x0
  419bb0:	cset	w0, eq  // eq = none
  419bb4:	and	w0, w0, #0xff
  419bb8:	and	x0, x0, #0xff
  419bbc:	cmp	x0, #0x0
  419bc0:	b.eq	419bec <stdout_stream_install+0x78>  // b.none
  419bc4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419bc8:	add	x1, x0, #0xaeb
  419bcc:	adrp	x0, 42b000 <__func__.15991+0x530>
  419bd0:	add	x4, x0, #0x648
  419bd4:	mov	w3, #0x24a                 	// #586
  419bd8:	mov	x2, x1
  419bdc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419be0:	add	x1, x0, #0xb48
  419be4:	mov	w0, #0x0                   	// #0
  419be8:	bl	405fd0 <log_assert_failed_realm@plt>
  419bec:	ldr	w0, [sp, #148]
  419bf0:	lsr	w0, w0, #31
  419bf4:	and	w0, w0, #0xff
  419bf8:	and	x0, x0, #0xff
  419bfc:	cmp	x0, #0x0
  419c00:	b.eq	419c2c <stdout_stream_install+0xb8>  // b.none
  419c04:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419c08:	add	x1, x0, #0xaeb
  419c0c:	adrp	x0, 42b000 <__func__.15991+0x530>
  419c10:	add	x4, x0, #0x648
  419c14:	mov	w3, #0x24b                 	// #587
  419c18:	mov	x2, x1
  419c1c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419c20:	add	x1, x0, #0xf98
  419c24:	mov	w0, #0x0                   	// #0
  419c28:	bl	405fd0 <log_assert_failed_realm@plt>
  419c2c:	add	x0, sp, #0x108
  419c30:	bl	405f20 <sd_id128_randomize@plt>
  419c34:	str	w0, [sp, #164]
  419c38:	ldr	w0, [sp, #164]
  419c3c:	cmp	w0, #0x0
  419c40:	b.ge	419cd0 <stdout_stream_install+0x15c>  // b.tcont
  419c44:	mov	w0, #0x3                   	// #3
  419c48:	str	w0, [sp, #228]
  419c4c:	ldr	w0, [sp, #164]
  419c50:	str	w0, [sp, #232]
  419c54:	str	wzr, [sp, #236]
  419c58:	ldr	w0, [sp, #236]
  419c5c:	bl	406c30 <log_get_max_level_realm@plt>
  419c60:	mov	w1, w0
  419c64:	ldr	w0, [sp, #228]
  419c68:	and	w0, w0, #0x7
  419c6c:	cmp	w1, w0
  419c70:	b.lt	419cb8 <stdout_stream_install+0x144>  // b.tstop
  419c74:	ldr	w0, [sp, #236]
  419c78:	lsl	w1, w0, #10
  419c7c:	ldr	w0, [sp, #228]
  419c80:	orr	w6, w1, w0
  419c84:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419c88:	add	x1, x0, #0xaeb
  419c8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419c90:	add	x5, x0, #0xfa0
  419c94:	adrp	x0, 42b000 <__func__.15991+0x530>
  419c98:	add	x4, x0, #0x660
  419c9c:	mov	w3, #0x24f                 	// #591
  419ca0:	mov	x2, x1
  419ca4:	ldr	w1, [sp, #232]
  419ca8:	mov	w0, w6
  419cac:	bl	406590 <log_internal_realm@plt>
  419cb0:	mov	w19, w0
  419cb4:	b	41a29c <stdout_stream_install+0x728>
  419cb8:	ldr	w0, [sp, #232]
  419cbc:	cmp	w0, #0x0
  419cc0:	cneg	w0, w0, lt  // lt = tstop
  419cc4:	and	w0, w0, #0xff
  419cc8:	neg	w19, w0
  419ccc:	b	41a29c <stdout_stream_install+0x728>
  419cd0:	mov	x1, #0xc0                  	// #192
  419cd4:	mov	x0, #0x1                   	// #1
  419cd8:	bl	406780 <calloc@plt>
  419cdc:	str	x0, [sp, #240]
  419ce0:	ldr	x0, [sp, #240]
  419ce4:	cmp	x0, #0x0
  419ce8:	b.ne	419d10 <stdout_stream_install+0x19c>  // b.any
  419cec:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419cf0:	add	x1, x0, #0xaeb
  419cf4:	adrp	x0, 42b000 <__func__.15991+0x530>
  419cf8:	add	x3, x0, #0x660
  419cfc:	mov	w2, #0x253                 	// #595
  419d00:	mov	w0, #0x0                   	// #0
  419d04:	bl	406b70 <log_oom_internal@plt>
  419d08:	mov	w19, w0
  419d0c:	b	41a29c <stdout_stream_install+0x728>
  419d10:	ldr	x0, [sp, #240]
  419d14:	mov	w1, #0xffffffff            	// #-1
  419d18:	str	w1, [x0, #12]
  419d1c:	ldr	x0, [sp, #240]
  419d20:	mov	w1, #0x6                   	// #6
  419d24:	str	w1, [x0, #56]
  419d28:	ldr	x0, [sp, #240]
  419d2c:	add	x8, x0, #0x90
  419d30:	ldrb	w0, [sp, #264]
  419d34:	mov	w12, w0
  419d38:	ldrb	w0, [sp, #265]
  419d3c:	mov	w13, w0
  419d40:	ldrb	w0, [sp, #266]
  419d44:	mov	w14, w0
  419d48:	ldrb	w0, [sp, #267]
  419d4c:	mov	w15, w0
  419d50:	ldrb	w0, [sp, #268]
  419d54:	mov	w16, w0
  419d58:	ldrb	w0, [sp, #269]
  419d5c:	ldrb	w1, [sp, #270]
  419d60:	ldrb	w2, [sp, #271]
  419d64:	ldrb	w3, [sp, #272]
  419d68:	ldrb	w4, [sp, #273]
  419d6c:	ldrb	w5, [sp, #274]
  419d70:	ldrb	w6, [sp, #275]
  419d74:	ldrb	w7, [sp, #276]
  419d78:	ldrb	w9, [sp, #277]
  419d7c:	ldrb	w10, [sp, #278]
  419d80:	ldrb	w11, [sp, #279]
  419d84:	str	w11, [sp, #80]
  419d88:	str	w10, [sp, #72]
  419d8c:	str	w9, [sp, #64]
  419d90:	str	w7, [sp, #56]
  419d94:	str	w6, [sp, #48]
  419d98:	str	w5, [sp, #40]
  419d9c:	str	w4, [sp, #32]
  419da0:	str	w3, [sp, #24]
  419da4:	str	w2, [sp, #16]
  419da8:	str	w1, [sp, #8]
  419dac:	str	w0, [sp]
  419db0:	mov	w7, w16
  419db4:	mov	w6, w15
  419db8:	mov	w5, w14
  419dbc:	mov	w4, w13
  419dc0:	mov	w3, w12
  419dc4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419dc8:	add	x2, x0, #0xfc8
  419dcc:	mov	x1, #0x2c                  	// #44
  419dd0:	mov	x0, x8
  419dd4:	bl	405de0 <snprintf@plt>
  419dd8:	cmp	w0, #0x2b
  419ddc:	cset	w0, hi  // hi = pmore
  419de0:	and	w0, w0, #0xff
  419de4:	and	x0, x0, #0xff
  419de8:	cmp	x0, #0x0
  419dec:	b.eq	419e18 <stdout_stream_install+0x2a4>  // b.none
  419df0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419df4:	add	x1, x0, #0xaeb
  419df8:	adrp	x0, 42b000 <__func__.15991+0x530>
  419dfc:	add	x4, x0, #0x648
  419e00:	mov	w3, #0x258                 	// #600
  419e04:	mov	x2, x1
  419e08:	adrp	x0, 42b000 <__func__.15991+0x530>
  419e0c:	add	x1, x0, #0x18
  419e10:	mov	w0, #0x0                   	// #0
  419e14:	bl	405fd0 <log_assert_failed_realm@plt>
  419e18:	ldr	x0, [sp, #240]
  419e1c:	add	x0, x0, #0x10
  419e20:	mov	x1, x0
  419e24:	ldr	w0, [sp, #148]
  419e28:	bl	406610 <getpeercred@plt>
  419e2c:	str	w0, [sp, #164]
  419e30:	ldr	w0, [sp, #164]
  419e34:	cmp	w0, #0x0
  419e38:	b.ge	419ec8 <stdout_stream_install+0x354>  // b.tcont
  419e3c:	mov	w0, #0x3                   	// #3
  419e40:	str	w0, [sp, #216]
  419e44:	ldr	w0, [sp, #164]
  419e48:	str	w0, [sp, #220]
  419e4c:	str	wzr, [sp, #224]
  419e50:	ldr	w0, [sp, #224]
  419e54:	bl	406c30 <log_get_max_level_realm@plt>
  419e58:	mov	w1, w0
  419e5c:	ldr	w0, [sp, #216]
  419e60:	and	w0, w0, #0x7
  419e64:	cmp	w1, w0
  419e68:	b.lt	419eb0 <stdout_stream_install+0x33c>  // b.tstop
  419e6c:	ldr	w0, [sp, #224]
  419e70:	lsl	w1, w0, #10
  419e74:	ldr	w0, [sp, #216]
  419e78:	orr	w6, w1, w0
  419e7c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419e80:	add	x1, x0, #0xaeb
  419e84:	adrp	x0, 42b000 <__func__.15991+0x530>
  419e88:	add	x5, x0, #0x48
  419e8c:	adrp	x0, 42b000 <__func__.15991+0x530>
  419e90:	add	x4, x0, #0x660
  419e94:	mov	w3, #0x25c                 	// #604
  419e98:	mov	x2, x1
  419e9c:	ldr	w1, [sp, #220]
  419ea0:	mov	w0, w6
  419ea4:	bl	406590 <log_internal_realm@plt>
  419ea8:	mov	w19, w0
  419eac:	b	41a29c <stdout_stream_install+0x728>
  419eb0:	ldr	w0, [sp, #220]
  419eb4:	cmp	w0, #0x0
  419eb8:	cneg	w0, w0, lt  // lt = tstop
  419ebc:	and	w0, w0, #0xff
  419ec0:	neg	w19, w0
  419ec4:	b	41a29c <stdout_stream_install+0x728>
  419ec8:	mov	w3, #0x1                   	// #1
  419ecc:	mov	w2, #0x10                  	// #16
  419ed0:	mov	w1, #0x1                   	// #1
  419ed4:	ldr	w0, [sp, #148]
  419ed8:	bl	417af4 <setsockopt_int>
  419edc:	str	w0, [sp, #164]
  419ee0:	ldr	w0, [sp, #164]
  419ee4:	cmp	w0, #0x0
  419ee8:	b.ge	419f78 <stdout_stream_install+0x404>  // b.tcont
  419eec:	mov	w0, #0x3                   	// #3
  419ef0:	str	w0, [sp, #204]
  419ef4:	ldr	w0, [sp, #164]
  419ef8:	str	w0, [sp, #208]
  419efc:	str	wzr, [sp, #212]
  419f00:	ldr	w0, [sp, #212]
  419f04:	bl	406c30 <log_get_max_level_realm@plt>
  419f08:	mov	w1, w0
  419f0c:	ldr	w0, [sp, #204]
  419f10:	and	w0, w0, #0x7
  419f14:	cmp	w1, w0
  419f18:	b.lt	419f60 <stdout_stream_install+0x3ec>  // b.tstop
  419f1c:	ldr	w0, [sp, #212]
  419f20:	lsl	w1, w0, #10
  419f24:	ldr	w0, [sp, #204]
  419f28:	orr	w6, w1, w0
  419f2c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419f30:	add	x1, x0, #0xaeb
  419f34:	adrp	x0, 42b000 <__func__.15991+0x530>
  419f38:	add	x5, x0, #0x78
  419f3c:	adrp	x0, 42b000 <__func__.15991+0x530>
  419f40:	add	x4, x0, #0x660
  419f44:	mov	w3, #0x260                 	// #608
  419f48:	mov	x2, x1
  419f4c:	ldr	w1, [sp, #208]
  419f50:	mov	w0, w6
  419f54:	bl	406590 <log_internal_realm@plt>
  419f58:	mov	w19, w0
  419f5c:	b	41a29c <stdout_stream_install+0x728>
  419f60:	ldr	w0, [sp, #208]
  419f64:	cmp	w0, #0x0
  419f68:	cneg	w0, w0, lt  // lt = tstop
  419f6c:	and	w0, w0, #0xff
  419f70:	neg	w19, w0
  419f74:	b	41a29c <stdout_stream_install+0x728>
  419f78:	bl	406450 <mac_selinux_use@plt>
  419f7c:	and	w0, w0, #0xff
  419f80:	cmp	w0, #0x0
  419f84:	b.eq	41a030 <stdout_stream_install+0x4bc>  // b.none
  419f88:	ldr	x0, [sp, #240]
  419f8c:	add	x0, x0, #0x20
  419f90:	mov	x1, x0
  419f94:	ldr	w0, [sp, #148]
  419f98:	bl	4068b0 <getpeersec@plt>
  419f9c:	str	w0, [sp, #164]
  419fa0:	ldr	w0, [sp, #164]
  419fa4:	cmp	w0, #0x0
  419fa8:	b.ge	41a030 <stdout_stream_install+0x4bc>  // b.tcont
  419fac:	ldr	w0, [sp, #164]
  419fb0:	cmn	w0, #0x5f
  419fb4:	b.eq	41a030 <stdout_stream_install+0x4bc>  // b.none
  419fb8:	mov	w0, #0x4                   	// #4
  419fbc:	str	w0, [sp, #168]
  419fc0:	ldr	w0, [sp, #164]
  419fc4:	str	w0, [sp, #172]
  419fc8:	str	wzr, [sp, #176]
  419fcc:	ldr	w0, [sp, #176]
  419fd0:	bl	406c30 <log_get_max_level_realm@plt>
  419fd4:	mov	w1, w0
  419fd8:	ldr	w0, [sp, #168]
  419fdc:	and	w0, w0, #0x7
  419fe0:	cmp	w1, w0
  419fe4:	b.lt	41a028 <stdout_stream_install+0x4b4>  // b.tstop
  419fe8:	ldr	w0, [sp, #176]
  419fec:	lsl	w1, w0, #10
  419ff0:	ldr	w0, [sp, #168]
  419ff4:	orr	w6, w1, w0
  419ff8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  419ffc:	add	x1, x0, #0xaeb
  41a000:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a004:	add	x5, x0, #0x90
  41a008:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a00c:	add	x4, x0, #0x660
  41a010:	mov	w3, #0x265                 	// #613
  41a014:	mov	x2, x1
  41a018:	ldr	w1, [sp, #172]
  41a01c:	mov	w0, w6
  41a020:	bl	406590 <log_internal_realm@plt>
  41a024:	b	41a030 <stdout_stream_install+0x4bc>
  41a028:	ldr	w0, [sp, #172]
  41a02c:	cmp	w0, #0x0
  41a030:	mov	w1, #0x1                   	// #1
  41a034:	ldr	w0, [sp, #148]
  41a038:	bl	406020 <shutdown@plt>
  41a03c:	ldr	x0, [sp, #152]
  41a040:	ldr	x6, [x0, #32]
  41a044:	ldr	x0, [sp, #240]
  41a048:	add	x1, x0, #0x58
  41a04c:	ldr	x0, [sp, #240]
  41a050:	mov	x5, x0
  41a054:	adrp	x0, 419000 <stdout_stream_line+0x260>
  41a058:	add	x4, x0, #0x6dc
  41a05c:	mov	w3, #0x1                   	// #1
  41a060:	ldr	w2, [sp, #148]
  41a064:	mov	x0, x6
  41a068:	bl	406680 <sd_event_add_io@plt>
  41a06c:	str	w0, [sp, #164]
  41a070:	ldr	w0, [sp, #164]
  41a074:	cmp	w0, #0x0
  41a078:	b.ge	41a108 <stdout_stream_install+0x594>  // b.tcont
  41a07c:	mov	w0, #0x3                   	// #3
  41a080:	str	w0, [sp, #192]
  41a084:	ldr	w0, [sp, #164]
  41a088:	str	w0, [sp, #196]
  41a08c:	str	wzr, [sp, #200]
  41a090:	ldr	w0, [sp, #200]
  41a094:	bl	406c30 <log_get_max_level_realm@plt>
  41a098:	mov	w1, w0
  41a09c:	ldr	w0, [sp, #192]
  41a0a0:	and	w0, w0, #0x7
  41a0a4:	cmp	w1, w0
  41a0a8:	b.lt	41a0f0 <stdout_stream_install+0x57c>  // b.tstop
  41a0ac:	ldr	w0, [sp, #200]
  41a0b0:	lsl	w1, w0, #10
  41a0b4:	ldr	w0, [sp, #192]
  41a0b8:	orr	w6, w1, w0
  41a0bc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a0c0:	add	x1, x0, #0xaeb
  41a0c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a0c8:	add	x5, x0, #0xc0
  41a0cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a0d0:	add	x4, x0, #0x660
  41a0d4:	mov	w3, #0x26c                 	// #620
  41a0d8:	mov	x2, x1
  41a0dc:	ldr	w1, [sp, #196]
  41a0e0:	mov	w0, w6
  41a0e4:	bl	406590 <log_internal_realm@plt>
  41a0e8:	mov	w19, w0
  41a0ec:	b	41a29c <stdout_stream_install+0x728>
  41a0f0:	ldr	w0, [sp, #196]
  41a0f4:	cmp	w0, #0x0
  41a0f8:	cneg	w0, w0, lt  // lt = tstop
  41a0fc:	and	w0, w0, #0xff
  41a100:	neg	w19, w0
  41a104:	b	41a29c <stdout_stream_install+0x728>
  41a108:	ldr	x0, [sp, #240]
  41a10c:	ldr	x0, [x0, #88]
  41a110:	mov	x1, #0x5                   	// #5
  41a114:	bl	406380 <sd_event_source_set_priority@plt>
  41a118:	str	w0, [sp, #164]
  41a11c:	ldr	w0, [sp, #164]
  41a120:	cmp	w0, #0x0
  41a124:	b.ge	41a1b4 <stdout_stream_install+0x640>  // b.tcont
  41a128:	mov	w0, #0x3                   	// #3
  41a12c:	str	w0, [sp, #180]
  41a130:	ldr	w0, [sp, #164]
  41a134:	str	w0, [sp, #184]
  41a138:	str	wzr, [sp, #188]
  41a13c:	ldr	w0, [sp, #188]
  41a140:	bl	406c30 <log_get_max_level_realm@plt>
  41a144:	mov	w1, w0
  41a148:	ldr	w0, [sp, #180]
  41a14c:	and	w0, w0, #0x7
  41a150:	cmp	w1, w0
  41a154:	b.lt	41a19c <stdout_stream_install+0x628>  // b.tstop
  41a158:	ldr	w0, [sp, #188]
  41a15c:	lsl	w1, w0, #10
  41a160:	ldr	w0, [sp, #180]
  41a164:	orr	w6, w1, w0
  41a168:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a16c:	add	x1, x0, #0xaeb
  41a170:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a174:	add	x5, x0, #0xe8
  41a178:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a17c:	add	x4, x0, #0x660
  41a180:	mov	w3, #0x270                 	// #624
  41a184:	mov	x2, x1
  41a188:	ldr	w1, [sp, #184]
  41a18c:	mov	w0, w6
  41a190:	bl	406590 <log_internal_realm@plt>
  41a194:	mov	w19, w0
  41a198:	b	41a29c <stdout_stream_install+0x728>
  41a19c:	ldr	w0, [sp, #184]
  41a1a0:	cmp	w0, #0x0
  41a1a4:	cneg	w0, w0, lt  // lt = tstop
  41a1a8:	and	w0, w0, #0xff
  41a1ac:	neg	w19, w0
  41a1b0:	b	41a29c <stdout_stream_install+0x728>
  41a1b4:	ldr	x0, [sp, #240]
  41a1b8:	ldr	w1, [sp, #148]
  41a1bc:	str	w1, [x0, #12]
  41a1c0:	ldr	x0, [sp, #240]
  41a1c4:	ldr	x1, [sp, #152]
  41a1c8:	str	x1, [x0]
  41a1cc:	ldr	x0, [sp, #152]
  41a1d0:	add	x0, x0, #0x1f8
  41a1d4:	str	x0, [sp, #248]
  41a1d8:	ldr	x0, [sp, #240]
  41a1dc:	str	x0, [sp, #256]
  41a1e0:	ldr	x0, [sp, #256]
  41a1e4:	cmp	x0, #0x0
  41a1e8:	cset	w0, eq  // eq = none
  41a1ec:	and	w0, w0, #0xff
  41a1f0:	and	x0, x0, #0xff
  41a1f4:	cmp	x0, #0x0
  41a1f8:	b.eq	41a224 <stdout_stream_install+0x6b0>  // b.none
  41a1fc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a200:	add	x1, x0, #0xaeb
  41a204:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a208:	add	x4, x0, #0x648
  41a20c:	mov	w3, #0x275                 	// #629
  41a210:	mov	x2, x1
  41a214:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a218:	add	x1, x0, #0xb30
  41a21c:	mov	w0, #0x0                   	// #0
  41a220:	bl	405fd0 <log_assert_failed_realm@plt>
  41a224:	ldr	x0, [sp, #248]
  41a228:	ldr	x1, [x0]
  41a22c:	ldr	x0, [sp, #256]
  41a230:	str	x1, [x0, #112]
  41a234:	ldr	x0, [sp, #256]
  41a238:	ldr	x0, [x0, #112]
  41a23c:	cmp	x0, #0x0
  41a240:	b.eq	41a254 <stdout_stream_install+0x6e0>  // b.none
  41a244:	ldr	x0, [sp, #256]
  41a248:	ldr	x0, [x0, #112]
  41a24c:	ldr	x1, [sp, #256]
  41a250:	str	x1, [x0, #120]
  41a254:	ldr	x0, [sp, #256]
  41a258:	str	xzr, [x0, #120]
  41a25c:	ldr	x0, [sp, #248]
  41a260:	ldr	x1, [sp, #256]
  41a264:	str	x1, [x0]
  41a268:	ldr	x0, [sp, #152]
  41a26c:	ldr	w0, [x0, #520]
  41a270:	add	w1, w0, #0x1
  41a274:	ldr	x0, [sp, #152]
  41a278:	str	w1, [x0, #520]
  41a27c:	ldr	x0, [sp, #136]
  41a280:	cmp	x0, #0x0
  41a284:	b.eq	41a294 <stdout_stream_install+0x720>  // b.none
  41a288:	ldr	x1, [sp, #240]
  41a28c:	ldr	x0, [sp, #136]
  41a290:	str	x1, [x0]
  41a294:	str	xzr, [sp, #240]
  41a298:	mov	w19, #0x0                   	// #0
  41a29c:	add	x0, sp, #0xf0
  41a2a0:	bl	417ee8 <stdout_stream_freep>
  41a2a4:	mov	w1, w19
  41a2a8:	adrp	x0, 441000 <wordlist.9471+0x208>
  41a2ac:	ldr	x0, [x0, #4064]
  41a2b0:	ldr	x2, [sp, #280]
  41a2b4:	ldr	x0, [x0]
  41a2b8:	eor	x0, x2, x0
  41a2bc:	cmp	x0, #0x0
  41a2c0:	b.eq	41a2c8 <stdout_stream_install+0x754>  // b.none
  41a2c4:	bl	4063e0 <__stack_chk_fail@plt>
  41a2c8:	mov	w0, w1
  41a2cc:	ldr	x19, [sp, #112]
  41a2d0:	ldp	x29, x30, [sp, #96]
  41a2d4:	add	sp, sp, #0x120
  41a2d8:	ret

000000000041a2dc <stdout_stream_new>:
  41a2dc:	stp	x29, x30, [sp, #-128]!
  41a2e0:	mov	x29, sp
  41a2e4:	str	x19, [sp, #16]
  41a2e8:	str	x0, [sp, #56]
  41a2ec:	str	w1, [sp, #52]
  41a2f0:	str	w2, [sp, #48]
  41a2f4:	str	x3, [sp, #40]
  41a2f8:	adrp	x0, 441000 <wordlist.9471+0x208>
  41a2fc:	ldr	x0, [x0, #4064]
  41a300:	ldr	x1, [x0]
  41a304:	str	x1, [sp, #120]
  41a308:	mov	x1, #0x0                   	// #0
  41a30c:	mov	w0, #0xffffffff            	// #-1
  41a310:	str	w0, [sp, #64]
  41a314:	ldr	x0, [sp, #40]
  41a318:	str	x0, [sp, #96]
  41a31c:	ldr	x0, [sp, #96]
  41a320:	cmp	x0, #0x0
  41a324:	cset	w0, eq  // eq = none
  41a328:	and	w0, w0, #0xff
  41a32c:	and	x0, x0, #0xff
  41a330:	cmp	x0, #0x0
  41a334:	b.eq	41a360 <stdout_stream_new+0x84>  // b.none
  41a338:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a33c:	add	x1, x0, #0xaeb
  41a340:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a344:	add	x4, x0, #0x678
  41a348:	mov	w3, #0x285                 	// #645
  41a34c:	mov	x2, x1
  41a350:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a354:	add	x1, x0, #0xb48
  41a358:	mov	w0, #0x0                   	// #0
  41a35c:	bl	405fd0 <log_assert_failed_realm@plt>
  41a360:	ldr	w0, [sp, #48]
  41a364:	cmp	w0, #0x1
  41a368:	b.eq	41a400 <stdout_stream_new+0x124>  // b.none
  41a36c:	mov	w0, #0x3                   	// #3
  41a370:	str	w0, [sp, #84]
  41a374:	mov	w0, #0x5                   	// #5
  41a378:	movk	w0, #0x4000, lsl #16
  41a37c:	str	w0, [sp, #88]
  41a380:	str	wzr, [sp, #92]
  41a384:	ldr	w0, [sp, #92]
  41a388:	bl	406c30 <log_get_max_level_realm@plt>
  41a38c:	mov	w1, w0
  41a390:	ldr	w0, [sp, #84]
  41a394:	and	w0, w0, #0x7
  41a398:	cmp	w1, w0
  41a39c:	b.lt	41a3e8 <stdout_stream_new+0x10c>  // b.tstop
  41a3a0:	ldr	w0, [sp, #92]
  41a3a4:	lsl	w1, w0, #10
  41a3a8:	ldr	w0, [sp, #84]
  41a3ac:	orr	w7, w1, w0
  41a3b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a3b4:	add	x1, x0, #0xaeb
  41a3b8:	ldr	w6, [sp, #48]
  41a3bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a3c0:	add	x5, x0, #0x120
  41a3c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a3c8:	add	x4, x0, #0x690
  41a3cc:	mov	w3, #0x288                 	// #648
  41a3d0:	mov	x2, x1
  41a3d4:	ldr	w1, [sp, #88]
  41a3d8:	mov	w0, w7
  41a3dc:	bl	406590 <log_internal_realm@plt>
  41a3e0:	mov	w19, w0
  41a3e4:	b	41a57c <stdout_stream_new+0x2a0>
  41a3e8:	ldr	w0, [sp, #88]
  41a3ec:	cmp	w0, #0x0
  41a3f0:	cneg	w0, w0, lt  // lt = tstop
  41a3f4:	and	w0, w0, #0xff
  41a3f8:	neg	w19, w0
  41a3fc:	b	41a57c <stdout_stream_new+0x2a0>
  41a400:	ldr	x0, [sp, #96]
  41a404:	ldr	w0, [x0, #8]
  41a408:	mov	x1, #0x0                   	// #0
  41a40c:	mov	w3, #0x800                 	// #2048
  41a410:	movk	w3, #0x8, lsl #16
  41a414:	mov	x2, #0x0                   	// #0
  41a418:	bl	4068d0 <accept4@plt>
  41a41c:	str	w0, [sp, #64]
  41a420:	ldr	w0, [sp, #64]
  41a424:	cmp	w0, #0x0
  41a428:	b.ge	41a4dc <stdout_stream_new+0x200>  // b.tcont
  41a42c:	bl	4062e0 <__errno_location@plt>
  41a430:	ldr	w0, [x0]
  41a434:	bl	41794c <ERRNO_IS_ACCEPT_AGAIN>
  41a438:	and	w0, w0, #0xff
  41a43c:	cmp	w0, #0x0
  41a440:	b.eq	41a44c <stdout_stream_new+0x170>  // b.none
  41a444:	mov	w19, #0x0                   	// #0
  41a448:	b	41a57c <stdout_stream_new+0x2a0>
  41a44c:	mov	w0, #0x3                   	// #3
  41a450:	str	w0, [sp, #72]
  41a454:	bl	4062e0 <__errno_location@plt>
  41a458:	ldr	w0, [x0]
  41a45c:	str	w0, [sp, #76]
  41a460:	str	wzr, [sp, #80]
  41a464:	ldr	w0, [sp, #80]
  41a468:	bl	406c30 <log_get_max_level_realm@plt>
  41a46c:	mov	w1, w0
  41a470:	ldr	w0, [sp, #72]
  41a474:	and	w0, w0, #0x7
  41a478:	cmp	w1, w0
  41a47c:	b.lt	41a4c4 <stdout_stream_new+0x1e8>  // b.tstop
  41a480:	ldr	w0, [sp, #80]
  41a484:	lsl	w1, w0, #10
  41a488:	ldr	w0, [sp, #72]
  41a48c:	orr	w6, w1, w0
  41a490:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a494:	add	x1, x0, #0xaeb
  41a498:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a49c:	add	x5, x0, #0x158
  41a4a0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a4a4:	add	x4, x0, #0x690
  41a4a8:	mov	w3, #0x291                 	// #657
  41a4ac:	mov	x2, x1
  41a4b0:	ldr	w1, [sp, #76]
  41a4b4:	mov	w0, w6
  41a4b8:	bl	406590 <log_internal_realm@plt>
  41a4bc:	mov	w19, w0
  41a4c0:	b	41a57c <stdout_stream_new+0x2a0>
  41a4c4:	ldr	w0, [sp, #76]
  41a4c8:	cmp	w0, #0x0
  41a4cc:	cneg	w0, w0, lt  // lt = tstop
  41a4d0:	and	w0, w0, #0xff
  41a4d4:	neg	w19, w0
  41a4d8:	b	41a57c <stdout_stream_new+0x2a0>
  41a4dc:	ldr	x0, [sp, #96]
  41a4e0:	ldr	w0, [x0, #520]
  41a4e4:	cmp	w0, #0xfff
  41a4e8:	b.ls	41a544 <stdout_stream_new+0x268>  // b.plast
  41a4ec:	ldr	w0, [sp, #64]
  41a4f0:	add	x1, sp, #0x68
  41a4f4:	bl	406610 <getpeercred@plt>
  41a4f8:	str	w0, [sp, #68]
  41a4fc:	ldr	w0, [sp, #64]
  41a500:	bl	405f40 <safe_close@plt>
  41a504:	str	w0, [sp, #64]
  41a508:	ldr	w0, [sp, #68]
  41a50c:	cmp	w0, #0x0
  41a510:	b.lt	41a51c <stdout_stream_new+0x240>  // b.tstop
  41a514:	ldr	w0, [sp, #104]
  41a518:	b	41a520 <stdout_stream_new+0x244>
  41a51c:	mov	w0, #0x0                   	// #0
  41a520:	mov	x4, #0x0                   	// #0
  41a524:	adrp	x1, 42b000 <__func__.15991+0x530>
  41a528:	add	x3, x1, #0x180
  41a52c:	mov	x2, #0x0                   	// #0
  41a530:	mov	w1, w0
  41a534:	ldr	x0, [sp, #96]
  41a538:	bl	411278 <server_driver_message>
  41a53c:	mov	w19, #0x0                   	// #0
  41a540:	b	41a57c <stdout_stream_new+0x2a0>
  41a544:	ldr	w0, [sp, #64]
  41a548:	mov	x2, #0x0                   	// #0
  41a54c:	mov	w1, w0
  41a550:	ldr	x0, [sp, #96]
  41a554:	bl	419b74 <stdout_stream_install>
  41a558:	str	w0, [sp, #68]
  41a55c:	ldr	w0, [sp, #68]
  41a560:	cmp	w0, #0x0
  41a564:	b.ge	41a570 <stdout_stream_new+0x294>  // b.tcont
  41a568:	ldr	w19, [sp, #68]
  41a56c:	b	41a57c <stdout_stream_new+0x2a0>
  41a570:	mov	w0, #0xffffffff            	// #-1
  41a574:	str	w0, [sp, #64]
  41a578:	mov	w19, #0x0                   	// #0
  41a57c:	add	x0, sp, #0x40
  41a580:	bl	4179d0 <closep>
  41a584:	mov	w1, w19
  41a588:	adrp	x0, 441000 <wordlist.9471+0x208>
  41a58c:	ldr	x0, [x0, #4064]
  41a590:	ldr	x2, [sp, #120]
  41a594:	ldr	x0, [x0]
  41a598:	eor	x0, x2, x0
  41a59c:	cmp	x0, #0x0
  41a5a0:	b.eq	41a5a8 <stdout_stream_new+0x2cc>  // b.none
  41a5a4:	bl	4063e0 <__stack_chk_fail@plt>
  41a5a8:	mov	w0, w1
  41a5ac:	ldr	x19, [sp, #16]
  41a5b0:	ldp	x29, x30, [sp], #128
  41a5b4:	ret

000000000041a5b8 <stdout_stream_load>:
  41a5b8:	sub	sp, sp, #0xf0
  41a5bc:	stp	x29, x30, [sp, #96]
  41a5c0:	add	x29, sp, #0x60
  41a5c4:	str	x19, [sp, #112]
  41a5c8:	str	x0, [sp, #136]
  41a5cc:	str	x1, [sp, #128]
  41a5d0:	adrp	x0, 441000 <wordlist.9471+0x208>
  41a5d4:	ldr	x0, [x0, #4064]
  41a5d8:	ldr	x1, [x0]
  41a5dc:	str	x1, [sp, #232]
  41a5e0:	mov	x1, #0x0                   	// #0
  41a5e4:	str	xzr, [sp, #168]
  41a5e8:	str	xzr, [sp, #176]
  41a5ec:	str	xzr, [sp, #184]
  41a5f0:	str	xzr, [sp, #192]
  41a5f4:	str	xzr, [sp, #200]
  41a5f8:	str	xzr, [sp, #208]
  41a5fc:	ldr	x0, [sp, #136]
  41a600:	cmp	x0, #0x0
  41a604:	cset	w0, eq  // eq = none
  41a608:	and	w0, w0, #0xff
  41a60c:	and	x0, x0, #0xff
  41a610:	cmp	x0, #0x0
  41a614:	b.eq	41a640 <stdout_stream_load+0x88>  // b.none
  41a618:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a61c:	add	x1, x0, #0xaeb
  41a620:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a624:	add	x4, x0, #0x6a8
  41a628:	mov	w3, #0x2b5                 	// #693
  41a62c:	mov	x2, x1
  41a630:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a634:	add	x1, x0, #0x1b8
  41a638:	mov	w0, #0x0                   	// #0
  41a63c:	bl	405fd0 <log_assert_failed_realm@plt>
  41a640:	ldr	x0, [sp, #128]
  41a644:	cmp	x0, #0x0
  41a648:	cset	w0, eq  // eq = none
  41a64c:	and	w0, w0, #0xff
  41a650:	and	x0, x0, #0xff
  41a654:	cmp	x0, #0x0
  41a658:	b.eq	41a684 <stdout_stream_load+0xcc>  // b.none
  41a65c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a660:	add	x1, x0, #0xaeb
  41a664:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a668:	add	x4, x0, #0x6a8
  41a66c:	mov	w3, #0x2b6                 	// #694
  41a670:	mov	x2, x1
  41a674:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a678:	add	x1, x0, #0x1c0
  41a67c:	mov	w0, #0x0                   	// #0
  41a680:	bl	405fd0 <log_assert_failed_realm@plt>
  41a684:	ldr	x0, [sp, #136]
  41a688:	ldr	x0, [x0, #96]
  41a68c:	cmp	x0, #0x0
  41a690:	b.ne	41a6e8 <stdout_stream_load+0x130>  // b.any
  41a694:	mov	x2, #0xffffffffffffffff    	// #-1
  41a698:	ldr	x1, [sp, #128]
  41a69c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a6a0:	add	x0, x0, #0xba0
  41a6a4:	bl	406430 <path_join_internal@plt>
  41a6a8:	mov	x1, x0
  41a6ac:	ldr	x0, [sp, #136]
  41a6b0:	str	x1, [x0, #96]
  41a6b4:	ldr	x0, [sp, #136]
  41a6b8:	ldr	x0, [x0, #96]
  41a6bc:	cmp	x0, #0x0
  41a6c0:	b.ne	41a6e8 <stdout_stream_load+0x130>  // b.any
  41a6c4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a6c8:	add	x1, x0, #0xaeb
  41a6cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a6d0:	add	x3, x0, #0x6c0
  41a6d4:	mov	w2, #0x2bb                 	// #699
  41a6d8:	mov	w0, #0x0                   	// #0
  41a6dc:	bl	406b70 <log_oom_internal@plt>
  41a6e0:	mov	w19, w0
  41a6e4:	b	41aa9c <stdout_stream_load+0x4e4>
  41a6e8:	ldr	x0, [sp, #136]
  41a6ec:	ldr	x8, [x0, #96]
  41a6f0:	ldr	x0, [sp, #136]
  41a6f4:	add	x0, x0, #0x28
  41a6f8:	ldr	x1, [sp, #136]
  41a6fc:	add	x1, x1, #0x30
  41a700:	add	x5, sp, #0xb8
  41a704:	add	x4, sp, #0xb0
  41a708:	add	x3, sp, #0xa8
  41a70c:	str	xzr, [sp, #80]
  41a710:	add	x2, sp, #0xd0
  41a714:	str	x2, [sp, #72]
  41a718:	adrp	x2, 42b000 <__func__.15991+0x530>
  41a71c:	add	x2, x2, #0x200
  41a720:	str	x2, [sp, #64]
  41a724:	str	x1, [sp, #56]
  41a728:	adrp	x1, 42b000 <__func__.15991+0x530>
  41a72c:	add	x1, x1, #0x210
  41a730:	str	x1, [sp, #48]
  41a734:	str	x0, [sp, #40]
  41a738:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a73c:	add	x0, x0, #0x218
  41a740:	str	x0, [sp, #32]
  41a744:	add	x0, sp, #0xc8
  41a748:	str	x0, [sp, #24]
  41a74c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a750:	add	x0, x0, #0x228
  41a754:	str	x0, [sp, #16]
  41a758:	add	x0, sp, #0xc0
  41a75c:	str	x0, [sp, #8]
  41a760:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a764:	add	x0, x0, #0x240
  41a768:	str	x0, [sp]
  41a76c:	mov	x7, x5
  41a770:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a774:	add	x6, x0, #0x1c8
  41a778:	mov	x5, x4
  41a77c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a780:	add	x4, x0, #0x1e0
  41a784:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a788:	add	x2, x0, #0x1f0
  41a78c:	mov	x1, x8
  41a790:	mov	x0, #0x0                   	// #0
  41a794:	bl	406370 <parse_env_file_sentinel@plt>
  41a798:	str	w0, [sp, #148]
  41a79c:	ldr	w0, [sp, #148]
  41a7a0:	cmp	w0, #0x0
  41a7a4:	b.ge	41a840 <stdout_stream_load+0x288>  // b.tcont
  41a7a8:	mov	w0, #0x3                   	// #3
  41a7ac:	str	w0, [sp, #156]
  41a7b0:	ldr	w0, [sp, #148]
  41a7b4:	str	w0, [sp, #160]
  41a7b8:	str	wzr, [sp, #164]
  41a7bc:	ldr	w0, [sp, #164]
  41a7c0:	bl	406c30 <log_get_max_level_realm@plt>
  41a7c4:	mov	w1, w0
  41a7c8:	ldr	w0, [sp, #156]
  41a7cc:	and	w0, w0, #0x7
  41a7d0:	cmp	w1, w0
  41a7d4:	b.lt	41a828 <stdout_stream_load+0x270>  // b.tstop
  41a7d8:	ldr	w0, [sp, #164]
  41a7dc:	lsl	w1, w0, #10
  41a7e0:	ldr	w0, [sp, #156]
  41a7e4:	orr	w7, w1, w0
  41a7e8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41a7ec:	add	x1, x0, #0xaeb
  41a7f0:	ldr	x0, [sp, #136]
  41a7f4:	ldr	x0, [x0, #96]
  41a7f8:	mov	x6, x0
  41a7fc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a800:	add	x5, x0, #0x250
  41a804:	adrp	x0, 42b000 <__func__.15991+0x530>
  41a808:	add	x4, x0, #0x6c0
  41a80c:	mov	w3, #0x2c8                 	// #712
  41a810:	mov	x2, x1
  41a814:	ldr	w1, [sp, #160]
  41a818:	mov	w0, w7
  41a81c:	bl	406590 <log_internal_realm@plt>
  41a820:	mov	w19, w0
  41a824:	b	41aa9c <stdout_stream_load+0x4e4>
  41a828:	ldr	w0, [sp, #160]
  41a82c:	cmp	w0, #0x0
  41a830:	cneg	w0, w0, lt  // lt = tstop
  41a834:	and	w0, w0, #0xff
  41a838:	neg	w19, w0
  41a83c:	b	41aa9c <stdout_stream_load+0x4e4>
  41a840:	ldr	x0, [sp, #168]
  41a844:	cmp	x0, #0x0
  41a848:	b.eq	41a870 <stdout_stream_load+0x2b8>  // b.none
  41a84c:	ldr	x0, [sp, #168]
  41a850:	bl	4064d0 <log_level_from_string@plt>
  41a854:	str	w0, [sp, #152]
  41a858:	ldr	w0, [sp, #152]
  41a85c:	cmp	w0, #0x0
  41a860:	b.lt	41a870 <stdout_stream_load+0x2b8>  // b.tstop
  41a864:	ldr	x0, [sp, #136]
  41a868:	ldr	w1, [sp, #152]
  41a86c:	str	w1, [x0, #56]
  41a870:	ldr	x0, [sp, #176]
  41a874:	cmp	x0, #0x0
  41a878:	b.eq	41a8b4 <stdout_stream_load+0x2fc>  // b.none
  41a87c:	ldr	x0, [sp, #176]
  41a880:	bl	405c40 <parse_boolean@plt>
  41a884:	str	w0, [sp, #148]
  41a888:	ldr	w0, [sp, #148]
  41a88c:	cmp	w0, #0x0
  41a890:	b.lt	41a8b4 <stdout_stream_load+0x2fc>  // b.tstop
  41a894:	ldr	w0, [sp, #148]
  41a898:	cmp	w0, #0x0
  41a89c:	cset	w0, ne  // ne = any
  41a8a0:	and	w2, w0, #0xff
  41a8a4:	ldr	x1, [sp, #136]
  41a8a8:	ldrb	w0, [x1, #60]
  41a8ac:	bfxil	w0, w2, #0, #1
  41a8b0:	strb	w0, [x1, #60]
  41a8b4:	ldr	x0, [sp, #184]
  41a8b8:	cmp	x0, #0x0
  41a8bc:	b.eq	41a8f8 <stdout_stream_load+0x340>  // b.none
  41a8c0:	ldr	x0, [sp, #184]
  41a8c4:	bl	405c40 <parse_boolean@plt>
  41a8c8:	str	w0, [sp, #148]
  41a8cc:	ldr	w0, [sp, #148]
  41a8d0:	cmp	w0, #0x0
  41a8d4:	b.lt	41a8f8 <stdout_stream_load+0x340>  // b.tstop
  41a8d8:	ldr	w0, [sp, #148]
  41a8dc:	cmp	w0, #0x0
  41a8e0:	cset	w0, ne  // ne = any
  41a8e4:	and	w2, w0, #0xff
  41a8e8:	ldr	x1, [sp, #136]
  41a8ec:	ldrb	w0, [x1, #60]
  41a8f0:	bfi	w0, w2, #1, #1
  41a8f4:	strb	w0, [x1, #60]
  41a8f8:	ldr	x0, [sp, #192]
  41a8fc:	cmp	x0, #0x0
  41a900:	b.eq	41a93c <stdout_stream_load+0x384>  // b.none
  41a904:	ldr	x0, [sp, #192]
  41a908:	bl	405c40 <parse_boolean@plt>
  41a90c:	str	w0, [sp, #148]
  41a910:	ldr	w0, [sp, #148]
  41a914:	cmp	w0, #0x0
  41a918:	b.lt	41a93c <stdout_stream_load+0x384>  // b.tstop
  41a91c:	ldr	w0, [sp, #148]
  41a920:	cmp	w0, #0x0
  41a924:	cset	w0, ne  // ne = any
  41a928:	and	w2, w0, #0xff
  41a92c:	ldr	x1, [sp, #136]
  41a930:	ldrb	w0, [x1, #60]
  41a934:	bfi	w0, w2, #2, #1
  41a938:	strb	w0, [x1, #60]
  41a93c:	ldr	x0, [sp, #200]
  41a940:	cmp	x0, #0x0
  41a944:	b.eq	41a980 <stdout_stream_load+0x3c8>  // b.none
  41a948:	ldr	x0, [sp, #200]
  41a94c:	bl	405c40 <parse_boolean@plt>
  41a950:	str	w0, [sp, #148]
  41a954:	ldr	w0, [sp, #148]
  41a958:	cmp	w0, #0x0
  41a95c:	b.lt	41a980 <stdout_stream_load+0x3c8>  // b.tstop
  41a960:	ldr	w0, [sp, #148]
  41a964:	cmp	w0, #0x0
  41a968:	cset	w0, ne  // ne = any
  41a96c:	and	w2, w0, #0xff
  41a970:	ldr	x1, [sp, #136]
  41a974:	ldrb	w0, [x1, #60]
  41a978:	bfi	w0, w2, #3, #1
  41a97c:	strb	w0, [x1, #60]
  41a980:	ldr	x0, [sp, #208]
  41a984:	cmp	x0, #0x0
  41a988:	b.eq	41aa98 <stdout_stream_load+0x4e0>  // b.none
  41a98c:	ldr	x0, [sp, #208]
  41a990:	add	x1, sp, #0xd8
  41a994:	bl	405c50 <sd_id128_from_string@plt>
  41a998:	str	w0, [sp, #148]
  41a99c:	ldr	w0, [sp, #148]
  41a9a0:	cmp	w0, #0x0
  41a9a4:	b.lt	41aa98 <stdout_stream_load+0x4e0>  // b.tstop
  41a9a8:	ldr	x0, [sp, #136]
  41a9ac:	add	x8, x0, #0x90
  41a9b0:	ldrb	w0, [sp, #216]
  41a9b4:	mov	w12, w0
  41a9b8:	ldrb	w0, [sp, #217]
  41a9bc:	mov	w13, w0
  41a9c0:	ldrb	w0, [sp, #218]
  41a9c4:	mov	w14, w0
  41a9c8:	ldrb	w0, [sp, #219]
  41a9cc:	mov	w15, w0
  41a9d0:	ldrb	w0, [sp, #220]
  41a9d4:	mov	w16, w0
  41a9d8:	ldrb	w0, [sp, #221]
  41a9dc:	ldrb	w1, [sp, #222]
  41a9e0:	ldrb	w2, [sp, #223]
  41a9e4:	ldrb	w3, [sp, #224]
  41a9e8:	ldrb	w4, [sp, #225]
  41a9ec:	ldrb	w5, [sp, #226]
  41a9f0:	ldrb	w6, [sp, #227]
  41a9f4:	ldrb	w7, [sp, #228]
  41a9f8:	ldrb	w9, [sp, #229]
  41a9fc:	ldrb	w10, [sp, #230]
  41aa00:	ldrb	w11, [sp, #231]
  41aa04:	str	w11, [sp, #80]
  41aa08:	str	w10, [sp, #72]
  41aa0c:	str	w9, [sp, #64]
  41aa10:	str	w7, [sp, #56]
  41aa14:	str	w6, [sp, #48]
  41aa18:	str	w5, [sp, #40]
  41aa1c:	str	w4, [sp, #32]
  41aa20:	str	w3, [sp, #24]
  41aa24:	str	w2, [sp, #16]
  41aa28:	str	w1, [sp, #8]
  41aa2c:	str	w0, [sp]
  41aa30:	mov	w7, w16
  41aa34:	mov	w6, w15
  41aa38:	mov	w5, w14
  41aa3c:	mov	w4, w13
  41aa40:	mov	w3, w12
  41aa44:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41aa48:	add	x2, x0, #0xfc8
  41aa4c:	mov	x1, #0x2c                  	// #44
  41aa50:	mov	x0, x8
  41aa54:	bl	405de0 <snprintf@plt>
  41aa58:	cmp	w0, #0x2b
  41aa5c:	cset	w0, hi  // hi = pmore
  41aa60:	and	w0, w0, #0xff
  41aa64:	and	x0, x0, #0xff
  41aa68:	cmp	x0, #0x0
  41aa6c:	b.eq	41aa98 <stdout_stream_load+0x4e0>  // b.none
  41aa70:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41aa74:	add	x1, x0, #0xaeb
  41aa78:	adrp	x0, 42b000 <__func__.15991+0x530>
  41aa7c:	add	x4, x0, #0x6a8
  41aa80:	mov	w3, #0x2ef                 	// #751
  41aa84:	mov	x2, x1
  41aa88:	adrp	x0, 42b000 <__func__.15991+0x530>
  41aa8c:	add	x1, x0, #0x18
  41aa90:	mov	w0, #0x0                   	// #0
  41aa94:	bl	405fd0 <log_assert_failed_realm@plt>
  41aa98:	mov	w19, #0x0                   	// #0
  41aa9c:	add	x0, sp, #0xd0
  41aaa0:	bl	4177b8 <freep>
  41aaa4:	add	x0, sp, #0xc8
  41aaa8:	bl	4177b8 <freep>
  41aaac:	add	x0, sp, #0xc0
  41aab0:	bl	4177b8 <freep>
  41aab4:	add	x0, sp, #0xb8
  41aab8:	bl	4177b8 <freep>
  41aabc:	add	x0, sp, #0xb0
  41aac0:	bl	4177b8 <freep>
  41aac4:	add	x0, sp, #0xa8
  41aac8:	bl	4177b8 <freep>
  41aacc:	mov	w1, w19
  41aad0:	adrp	x0, 441000 <wordlist.9471+0x208>
  41aad4:	ldr	x0, [x0, #4064]
  41aad8:	ldr	x2, [sp, #232]
  41aadc:	ldr	x0, [x0]
  41aae0:	eor	x0, x2, x0
  41aae4:	cmp	x0, #0x0
  41aae8:	b.eq	41aaf0 <stdout_stream_load+0x538>  // b.none
  41aaec:	bl	4063e0 <__stack_chk_fail@plt>
  41aaf0:	mov	w0, w1
  41aaf4:	ldr	x19, [sp, #112]
  41aaf8:	ldp	x29, x30, [sp, #96]
  41aafc:	add	sp, sp, #0xf0
  41ab00:	ret

000000000041ab04 <stdout_stream_restore>:
  41ab04:	stp	x29, x30, [sp, #-80]!
  41ab08:	mov	x29, sp
  41ab0c:	str	x0, [sp, #40]
  41ab10:	str	x1, [sp, #32]
  41ab14:	str	w2, [sp, #28]
  41ab18:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ab1c:	ldr	x0, [x0, #4064]
  41ab20:	ldr	x1, [x0]
  41ab24:	str	x1, [sp, #72]
  41ab28:	mov	x1, #0x0                   	// #0
  41ab2c:	ldr	x0, [sp, #40]
  41ab30:	cmp	x0, #0x0
  41ab34:	cset	w0, eq  // eq = none
  41ab38:	and	w0, w0, #0xff
  41ab3c:	and	x0, x0, #0xff
  41ab40:	cmp	x0, #0x0
  41ab44:	b.eq	41ab70 <stdout_stream_restore+0x6c>  // b.none
  41ab48:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ab4c:	add	x1, x0, #0xaeb
  41ab50:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ab54:	add	x4, x0, #0x6d8
  41ab58:	mov	w3, #0x2f9                 	// #761
  41ab5c:	mov	x2, x1
  41ab60:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ab64:	add	x1, x0, #0xb48
  41ab68:	mov	w0, #0x0                   	// #0
  41ab6c:	bl	405fd0 <log_assert_failed_realm@plt>
  41ab70:	ldr	x0, [sp, #32]
  41ab74:	cmp	x0, #0x0
  41ab78:	cset	w0, eq  // eq = none
  41ab7c:	and	w0, w0, #0xff
  41ab80:	and	x0, x0, #0xff
  41ab84:	cmp	x0, #0x0
  41ab88:	b.eq	41abb4 <stdout_stream_restore+0xb0>  // b.none
  41ab8c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ab90:	add	x1, x0, #0xaeb
  41ab94:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ab98:	add	x4, x0, #0x6d8
  41ab9c:	mov	w3, #0x2fa                 	// #762
  41aba0:	mov	x2, x1
  41aba4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41aba8:	add	x1, x0, #0x1c0
  41abac:	mov	w0, #0x0                   	// #0
  41abb0:	bl	405fd0 <log_assert_failed_realm@plt>
  41abb4:	ldr	w0, [sp, #28]
  41abb8:	lsr	w0, w0, #31
  41abbc:	and	w0, w0, #0xff
  41abc0:	and	x0, x0, #0xff
  41abc4:	cmp	x0, #0x0
  41abc8:	b.eq	41abf4 <stdout_stream_restore+0xf0>  // b.none
  41abcc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41abd0:	add	x1, x0, #0xaeb
  41abd4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41abd8:	add	x4, x0, #0x6d8
  41abdc:	mov	w3, #0x2fb                 	// #763
  41abe0:	mov	x2, x1
  41abe4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41abe8:	add	x1, x0, #0xf98
  41abec:	mov	w0, #0x0                   	// #0
  41abf0:	bl	405fd0 <log_assert_failed_realm@plt>
  41abf4:	ldr	x0, [sp, #40]
  41abf8:	ldr	w0, [x0, #520]
  41abfc:	cmp	w0, #0xfff
  41ac00:	b.ls	41ac80 <stdout_stream_restore+0x17c>  // b.plast
  41ac04:	mov	w0, #0x4                   	// #4
  41ac08:	str	w0, [sp, #52]
  41ac0c:	str	wzr, [sp, #56]
  41ac10:	str	wzr, [sp, #60]
  41ac14:	ldr	w0, [sp, #60]
  41ac18:	bl	406c30 <log_get_max_level_realm@plt>
  41ac1c:	mov	w1, w0
  41ac20:	ldr	w0, [sp, #52]
  41ac24:	and	w0, w0, #0x7
  41ac28:	cmp	w1, w0
  41ac2c:	b.lt	41ac70 <stdout_stream_restore+0x16c>  // b.tstop
  41ac30:	ldr	w0, [sp, #60]
  41ac34:	lsl	w1, w0, #10
  41ac38:	ldr	w0, [sp, #52]
  41ac3c:	orr	w6, w1, w0
  41ac40:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ac44:	add	x1, x0, #0xaeb
  41ac48:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ac4c:	add	x5, x0, #0x268
  41ac50:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ac54:	add	x4, x0, #0x6f0
  41ac58:	mov	w3, #0x2fe                 	// #766
  41ac5c:	mov	x2, x1
  41ac60:	ldr	w1, [sp, #56]
  41ac64:	mov	w0, w6
  41ac68:	bl	406590 <log_internal_realm@plt>
  41ac6c:	b	41ac78 <stdout_stream_restore+0x174>
  41ac70:	ldr	w0, [sp, #56]
  41ac74:	cmp	w0, #0x0
  41ac78:	mov	w0, #0xffffff97            	// #-105
  41ac7c:	b	41acd8 <stdout_stream_restore+0x1d4>
  41ac80:	add	x0, sp, #0x40
  41ac84:	mov	x2, x0
  41ac88:	ldr	w1, [sp, #28]
  41ac8c:	ldr	x0, [sp, #40]
  41ac90:	bl	419b74 <stdout_stream_install>
  41ac94:	str	w0, [sp, #48]
  41ac98:	ldr	w0, [sp, #48]
  41ac9c:	cmp	w0, #0x0
  41aca0:	b.ge	41acac <stdout_stream_restore+0x1a8>  // b.tcont
  41aca4:	ldr	w0, [sp, #48]
  41aca8:	b	41acd8 <stdout_stream_restore+0x1d4>
  41acac:	ldr	x0, [sp, #64]
  41acb0:	mov	w1, #0x7                   	// #7
  41acb4:	str	w1, [x0, #8]
  41acb8:	ldr	x0, [sp, #64]
  41acbc:	ldrb	w1, [x0, #60]
  41acc0:	orr	w1, w1, #0x10
  41acc4:	strb	w1, [x0, #60]
  41acc8:	ldr	x0, [sp, #64]
  41accc:	ldr	x1, [sp, #32]
  41acd0:	bl	41a5b8 <stdout_stream_load>
  41acd4:	mov	w0, #0x0                   	// #0
  41acd8:	mov	w1, w0
  41acdc:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ace0:	ldr	x0, [x0, #4064]
  41ace4:	ldr	x2, [sp, #72]
  41ace8:	ldr	x0, [x0]
  41acec:	eor	x0, x2, x0
  41acf0:	cmp	x0, #0x0
  41acf4:	b.eq	41acfc <stdout_stream_restore+0x1f8>  // b.none
  41acf8:	bl	4063e0 <__stack_chk_fail@plt>
  41acfc:	mov	w0, w1
  41ad00:	ldp	x29, x30, [sp], #80
  41ad04:	ret

000000000041ad08 <server_restore_streams>:
  41ad08:	stp	x29, x30, [sp, #-304]!
  41ad0c:	mov	x29, sp
  41ad10:	str	x19, [sp, #16]
  41ad14:	str	x0, [sp, #40]
  41ad18:	str	x1, [sp, #32]
  41ad1c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ad20:	ldr	x0, [x0, #4064]
  41ad24:	ldr	x1, [x0]
  41ad28:	str	x1, [sp, #296]
  41ad2c:	mov	x1, #0x0                   	// #0
  41ad30:	str	xzr, [sp, #120]
  41ad34:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ad38:	add	x0, x0, #0xba0
  41ad3c:	bl	406730 <opendir@plt>
  41ad40:	str	x0, [sp, #120]
  41ad44:	ldr	x0, [sp, #120]
  41ad48:	cmp	x0, #0x0
  41ad4c:	b.ne	41adf8 <server_restore_streams+0xf0>  // b.any
  41ad50:	bl	4062e0 <__errno_location@plt>
  41ad54:	ldr	w0, [x0]
  41ad58:	cmp	w0, #0x2
  41ad5c:	b.ne	41ad68 <server_restore_streams+0x60>  // b.any
  41ad60:	mov	w19, #0x0                   	// #0
  41ad64:	b	41b200 <server_restore_streams+0x4f8>
  41ad68:	mov	w0, #0x4                   	// #4
  41ad6c:	str	w0, [sp, #108]
  41ad70:	bl	4062e0 <__errno_location@plt>
  41ad74:	ldr	w0, [x0]
  41ad78:	str	w0, [sp, #112]
  41ad7c:	str	wzr, [sp, #116]
  41ad80:	ldr	w0, [sp, #116]
  41ad84:	bl	406c30 <log_get_max_level_realm@plt>
  41ad88:	mov	w1, w0
  41ad8c:	ldr	w0, [sp, #108]
  41ad90:	and	w0, w0, #0x7
  41ad94:	cmp	w1, w0
  41ad98:	b.lt	41ade0 <server_restore_streams+0xd8>  // b.tstop
  41ad9c:	ldr	w0, [sp, #116]
  41ada0:	lsl	w1, w0, #10
  41ada4:	ldr	w0, [sp, #108]
  41ada8:	orr	w6, w1, w0
  41adac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41adb0:	add	x1, x0, #0xaeb
  41adb4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41adb8:	add	x5, x0, #0x2a0
  41adbc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41adc0:	add	x4, x0, #0x708
  41adc4:	mov	w3, #0x319                 	// #793
  41adc8:	mov	x2, x1
  41adcc:	ldr	w1, [sp, #112]
  41add0:	mov	w0, w6
  41add4:	bl	406590 <log_internal_realm@plt>
  41add8:	mov	w19, w0
  41addc:	b	41b200 <server_restore_streams+0x4f8>
  41ade0:	ldr	w0, [sp, #112]
  41ade4:	cmp	w0, #0x0
  41ade8:	cneg	w0, w0, lt  // lt = tstop
  41adec:	and	w0, w0, #0xff
  41adf0:	neg	w19, w0
  41adf4:	b	41b200 <server_restore_streams+0x4f8>
  41adf8:	bl	4062e0 <__errno_location@plt>
  41adfc:	str	wzr, [x0]
  41ae00:	ldr	x0, [sp, #120]
  41ae04:	bl	406000 <readdir64@plt>
  41ae08:	str	x0, [sp, #144]
  41ae0c:	ldr	x0, [sp, #144]
  41ae10:	cmp	x0, #0x0
  41ae14:	b.ne	41ae2c <server_restore_streams+0x124>  // b.any
  41ae18:	bl	4062e0 <__errno_location@plt>
  41ae1c:	ldr	w0, [x0]
  41ae20:	cmp	w0, #0x0
  41ae24:	b.le	41b164 <server_restore_streams+0x45c>
  41ae28:	b	41b170 <server_restore_streams+0x468>
  41ae2c:	ldr	x0, [sp, #144]
  41ae30:	add	x0, x0, #0x13
  41ae34:	bl	405da0 <hidden_or_backup_file@plt>
  41ae38:	and	w0, w0, #0xff
  41ae3c:	cmp	w0, #0x0
  41ae40:	b.ne	41b138 <server_restore_streams+0x430>  // b.any
  41ae44:	strb	wzr, [sp, #51]
  41ae48:	ldr	x0, [sp, #144]
  41ae4c:	add	x4, x0, #0x13
  41ae50:	add	x1, sp, #0x88
  41ae54:	add	x0, sp, #0x80
  41ae58:	mov	x3, x1
  41ae5c:	mov	x2, x0
  41ae60:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ae64:	add	x1, x0, #0x2d8
  41ae68:	mov	x0, x4
  41ae6c:	bl	406100 <__isoc99_sscanf@plt>
  41ae70:	cmp	w0, #0x2
  41ae74:	b.ne	41b140 <server_restore_streams+0x438>  // b.any
  41ae78:	mov	w0, #0xfffffffe            	// #-2
  41ae7c:	str	w0, [sp, #152]
  41ae80:	str	xzr, [sp, #160]
  41ae84:	add	x0, sp, #0x98
  41ae88:	mov	x1, x0
  41ae8c:	ldr	x0, [sp, #32]
  41ae90:	bl	406aa0 <fdset_iterate@plt>
  41ae94:	str	w0, [sp, #52]
  41ae98:	b	41afa0 <server_restore_streams+0x298>
  41ae9c:	add	x0, sp, #0xa8
  41aea0:	mov	x1, x0
  41aea4:	ldr	w0, [sp, #52]
  41aea8:	bl	4275f0 <fstat64>
  41aeac:	cmp	w0, #0x0
  41aeb0:	b.ge	41af50 <server_restore_streams+0x248>  // b.tcont
  41aeb4:	mov	w0, #0x3                   	// #3
  41aeb8:	str	w0, [sp, #56]
  41aebc:	bl	4062e0 <__errno_location@plt>
  41aec0:	ldr	w0, [x0]
  41aec4:	str	w0, [sp, #60]
  41aec8:	str	wzr, [sp, #64]
  41aecc:	ldr	w0, [sp, #64]
  41aed0:	bl	406c30 <log_get_max_level_realm@plt>
  41aed4:	mov	w1, w0
  41aed8:	ldr	w0, [sp, #56]
  41aedc:	and	w0, w0, #0x7
  41aee0:	cmp	w1, w0
  41aee4:	b.lt	41af38 <server_restore_streams+0x230>  // b.tstop
  41aee8:	ldr	w0, [sp, #64]
  41aeec:	lsl	w1, w0, #10
  41aef0:	ldr	w0, [sp, #56]
  41aef4:	orr	w7, w1, w0
  41aef8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41aefc:	add	x1, x0, #0xaeb
  41af00:	ldr	x0, [sp, #144]
  41af04:	add	x0, x0, #0x13
  41af08:	mov	x6, x0
  41af0c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41af10:	add	x5, x0, #0x2e0
  41af14:	adrp	x0, 42b000 <__func__.15991+0x530>
  41af18:	add	x4, x0, #0x708
  41af1c:	mov	w3, #0x329                 	// #809
  41af20:	mov	x2, x1
  41af24:	ldr	w1, [sp, #60]
  41af28:	mov	w0, w7
  41af2c:	bl	406590 <log_internal_realm@plt>
  41af30:	mov	w19, w0
  41af34:	b	41b200 <server_restore_streams+0x4f8>
  41af38:	ldr	w0, [sp, #60]
  41af3c:	cmp	w0, #0x0
  41af40:	cneg	w0, w0, lt  // lt = tstop
  41af44:	and	w0, w0, #0xff
  41af48:	neg	w19, w0
  41af4c:	b	41b200 <server_restore_streams+0x4f8>
  41af50:	ldr	w0, [sp, #184]
  41af54:	and	w0, w0, #0xf000
  41af58:	cmp	w0, #0xc, lsl #12
  41af5c:	b.ne	41af8c <server_restore_streams+0x284>  // b.any
  41af60:	ldr	x1, [sp, #168]
  41af64:	ldr	x0, [sp, #128]
  41af68:	cmp	x1, x0
  41af6c:	b.ne	41af8c <server_restore_streams+0x284>  // b.any
  41af70:	ldr	x1, [sp, #176]
  41af74:	ldr	x0, [sp, #136]
  41af78:	cmp	x1, x0
  41af7c:	b.ne	41af8c <server_restore_streams+0x284>  // b.any
  41af80:	mov	w0, #0x1                   	// #1
  41af84:	strb	w0, [sp, #51]
  41af88:	b	41afac <server_restore_streams+0x2a4>
  41af8c:	add	x0, sp, #0x98
  41af90:	mov	x1, x0
  41af94:	ldr	x0, [sp, #32]
  41af98:	bl	406aa0 <fdset_iterate@plt>
  41af9c:	str	w0, [sp, #52]
  41afa0:	ldr	w0, [sp, #52]
  41afa4:	cmp	w0, #0x0
  41afa8:	b.ge	41ae9c <server_restore_streams+0x194>  // b.tcont
  41afac:	ldrb	w0, [sp, #51]
  41afb0:	eor	w0, w0, #0x1
  41afb4:	and	w0, w0, #0xff
  41afb8:	cmp	w0, #0x0
  41afbc:	b.eq	41b0f8 <server_restore_streams+0x3f0>  // b.none
  41afc0:	mov	w0, #0x7                   	// #7
  41afc4:	str	w0, [sp, #72]
  41afc8:	str	wzr, [sp, #76]
  41afcc:	str	wzr, [sp, #80]
  41afd0:	ldr	w0, [sp, #80]
  41afd4:	bl	406c30 <log_get_max_level_realm@plt>
  41afd8:	mov	w1, w0
  41afdc:	ldr	w0, [sp, #72]
  41afe0:	and	w0, w0, #0x7
  41afe4:	cmp	w1, w0
  41afe8:	b.lt	41b038 <server_restore_streams+0x330>  // b.tstop
  41afec:	ldr	w0, [sp, #80]
  41aff0:	lsl	w1, w0, #10
  41aff4:	ldr	w0, [sp, #72]
  41aff8:	orr	w7, w1, w0
  41affc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b000:	add	x1, x0, #0xaeb
  41b004:	ldr	x0, [sp, #144]
  41b008:	add	x0, x0, #0x13
  41b00c:	mov	x6, x0
  41b010:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b014:	add	x5, x0, #0x2f8
  41b018:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b01c:	add	x4, x0, #0x708
  41b020:	mov	w3, #0x333                 	// #819
  41b024:	mov	x2, x1
  41b028:	ldr	w1, [sp, #76]
  41b02c:	mov	w0, w7
  41b030:	bl	406590 <log_internal_realm@plt>
  41b034:	b	41b040 <server_restore_streams+0x338>
  41b038:	ldr	w0, [sp, #76]
  41b03c:	cmp	w0, #0x0
  41b040:	ldr	x0, [sp, #120]
  41b044:	bl	405fa0 <dirfd@plt>
  41b048:	mov	w3, w0
  41b04c:	ldr	x0, [sp, #144]
  41b050:	add	x0, x0, #0x13
  41b054:	mov	w2, #0x0                   	// #0
  41b058:	mov	x1, x0
  41b05c:	mov	w0, w3
  41b060:	bl	406920 <unlinkat@plt>
  41b064:	cmp	w0, #0x0
  41b068:	b.ge	41b148 <server_restore_streams+0x440>  // b.tcont
  41b06c:	mov	w0, #0x4                   	// #4
  41b070:	str	w0, [sp, #84]
  41b074:	bl	4062e0 <__errno_location@plt>
  41b078:	ldr	w0, [x0]
  41b07c:	str	w0, [sp, #88]
  41b080:	str	wzr, [sp, #92]
  41b084:	ldr	w0, [sp, #92]
  41b088:	bl	406c30 <log_get_max_level_realm@plt>
  41b08c:	mov	w1, w0
  41b090:	ldr	w0, [sp, #84]
  41b094:	and	w0, w0, #0x7
  41b098:	cmp	w1, w0
  41b09c:	b.lt	41b0ec <server_restore_streams+0x3e4>  // b.tstop
  41b0a0:	ldr	w0, [sp, #92]
  41b0a4:	lsl	w1, w0, #10
  41b0a8:	ldr	w0, [sp, #84]
  41b0ac:	orr	w7, w1, w0
  41b0b0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b0b4:	add	x1, x0, #0xaeb
  41b0b8:	ldr	x0, [sp, #144]
  41b0bc:	add	x0, x0, #0x13
  41b0c0:	mov	x6, x0
  41b0c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b0c8:	add	x5, x0, #0x318
  41b0cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b0d0:	add	x4, x0, #0x708
  41b0d4:	mov	w3, #0x335                 	// #821
  41b0d8:	mov	x2, x1
  41b0dc:	ldr	w1, [sp, #88]
  41b0e0:	mov	w0, w7
  41b0e4:	bl	406590 <log_internal_realm@plt>
  41b0e8:	b	41b148 <server_restore_streams+0x440>
  41b0ec:	ldr	w0, [sp, #88]
  41b0f0:	cmp	w0, #0x0
  41b0f4:	b	41b148 <server_restore_streams+0x440>
  41b0f8:	ldr	w1, [sp, #52]
  41b0fc:	ldr	x0, [sp, #32]
  41b100:	bl	4063b0 <fdset_remove@plt>
  41b104:	ldr	x0, [sp, #144]
  41b108:	add	x0, x0, #0x13
  41b10c:	ldr	w2, [sp, #52]
  41b110:	mov	x1, x0
  41b114:	ldr	x0, [sp, #40]
  41b118:	bl	41ab04 <stdout_stream_restore>
  41b11c:	str	w0, [sp, #68]
  41b120:	ldr	w0, [sp, #68]
  41b124:	cmp	w0, #0x0
  41b128:	b.ge	41b14c <server_restore_streams+0x444>  // b.tcont
  41b12c:	ldr	w0, [sp, #52]
  41b130:	bl	405f40 <safe_close@plt>
  41b134:	b	41b14c <server_restore_streams+0x444>
  41b138:	nop
  41b13c:	b	41b14c <server_restore_streams+0x444>
  41b140:	nop
  41b144:	b	41b14c <server_restore_streams+0x444>
  41b148:	nop
  41b14c:	bl	4062e0 <__errno_location@plt>
  41b150:	str	wzr, [x0]
  41b154:	ldr	x0, [sp, #120]
  41b158:	bl	406000 <readdir64@plt>
  41b15c:	str	x0, [sp, #144]
  41b160:	b	41ae0c <server_restore_streams+0x104>
  41b164:	nop
  41b168:	mov	w19, #0x0                   	// #0
  41b16c:	b	41b200 <server_restore_streams+0x4f8>
  41b170:	mov	w0, #0x3                   	// #3
  41b174:	str	w0, [sp, #96]
  41b178:	bl	4062e0 <__errno_location@plt>
  41b17c:	ldr	w0, [x0]
  41b180:	str	w0, [sp, #100]
  41b184:	str	wzr, [sp, #104]
  41b188:	ldr	w0, [sp, #104]
  41b18c:	bl	406c30 <log_get_max_level_realm@plt>
  41b190:	mov	w1, w0
  41b194:	ldr	w0, [sp, #96]
  41b198:	and	w0, w0, #0x7
  41b19c:	cmp	w1, w0
  41b1a0:	b.lt	41b1e8 <server_restore_streams+0x4e0>  // b.tstop
  41b1a4:	ldr	w0, [sp, #104]
  41b1a8:	lsl	w1, w0, #10
  41b1ac:	ldr	w0, [sp, #96]
  41b1b0:	orr	w6, w1, w0
  41b1b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b1b8:	add	x1, x0, #0xaeb
  41b1bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b1c0:	add	x5, x0, #0x350
  41b1c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b1c8:	add	x4, x0, #0x708
  41b1cc:	mov	w3, #0x344                 	// #836
  41b1d0:	mov	x2, x1
  41b1d4:	ldr	w1, [sp, #100]
  41b1d8:	mov	w0, w6
  41b1dc:	bl	406590 <log_internal_realm@plt>
  41b1e0:	mov	w19, w0
  41b1e4:	b	41b1fc <server_restore_streams+0x4f4>
  41b1e8:	ldr	w0, [sp, #100]
  41b1ec:	cmp	w0, #0x0
  41b1f0:	cneg	w0, w0, lt  // lt = tstop
  41b1f4:	and	w0, w0, #0xff
  41b1f8:	neg	w19, w0
  41b1fc:	nop
  41b200:	add	x0, sp, #0x78
  41b204:	bl	417a18 <closedirp>
  41b208:	mov	w1, w19
  41b20c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41b210:	ldr	x0, [x0, #4064]
  41b214:	ldr	x2, [sp, #296]
  41b218:	ldr	x0, [x0]
  41b21c:	eor	x0, x2, x0
  41b220:	cmp	x0, #0x0
  41b224:	b.eq	41b22c <server_restore_streams+0x524>  // b.none
  41b228:	bl	4063e0 <__stack_chk_fail@plt>
  41b22c:	mov	w0, w1
  41b230:	ldr	x19, [sp, #16]
  41b234:	ldp	x29, x30, [sp], #304
  41b238:	ret

000000000041b23c <server_open_stdout_socket>:
  41b23c:	stp	x29, x30, [sp, #-128]!
  41b240:	mov	x29, sp
  41b244:	stp	x19, x20, [sp, #16]
  41b248:	str	x0, [sp, #40]
  41b24c:	ldr	x0, [sp, #40]
  41b250:	cmp	x0, #0x0
  41b254:	cset	w0, eq  // eq = none
  41b258:	and	w0, w0, #0xff
  41b25c:	and	x0, x0, #0xff
  41b260:	cmp	x0, #0x0
  41b264:	b.eq	41b290 <server_open_stdout_socket+0x54>  // b.none
  41b268:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b26c:	add	x1, x0, #0xaeb
  41b270:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b274:	add	x4, x0, #0x720
  41b278:	mov	w3, #0x34e                 	// #846
  41b27c:	mov	x2, x1
  41b280:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b284:	add	x1, x0, #0xb48
  41b288:	mov	w0, #0x0                   	// #0
  41b28c:	bl	405fd0 <log_assert_failed_realm@plt>
  41b290:	ldr	x0, [sp, #40]
  41b294:	ldr	w0, [x0, #8]
  41b298:	cmp	w0, #0x0
  41b29c:	b.ge	41b57c <server_open_stdout_socket+0x340>  // b.tcont
  41b2a0:	mov	w2, #0x0                   	// #0
  41b2a4:	mov	w1, #0x801                 	// #2049
  41b2a8:	movk	w1, #0x8, lsl #16
  41b2ac:	mov	w0, #0x1                   	// #1
  41b2b0:	bl	405db0 <socket@plt>
  41b2b4:	mov	w1, w0
  41b2b8:	ldr	x0, [sp, #40]
  41b2bc:	str	w1, [x0, #8]
  41b2c0:	ldr	x0, [sp, #40]
  41b2c4:	ldr	w0, [x0, #8]
  41b2c8:	cmp	w0, #0x0
  41b2cc:	b.ge	41b35c <server_open_stdout_socket+0x120>  // b.tcont
  41b2d0:	mov	w0, #0x3                   	// #3
  41b2d4:	str	w0, [sp, #84]
  41b2d8:	bl	4062e0 <__errno_location@plt>
  41b2dc:	ldr	w0, [x0]
  41b2e0:	str	w0, [sp, #88]
  41b2e4:	str	wzr, [sp, #92]
  41b2e8:	ldr	w0, [sp, #92]
  41b2ec:	bl	406c30 <log_get_max_level_realm@plt>
  41b2f0:	mov	w1, w0
  41b2f4:	ldr	w0, [sp, #84]
  41b2f8:	and	w0, w0, #0x7
  41b2fc:	cmp	w1, w0
  41b300:	b.lt	41b344 <server_open_stdout_socket+0x108>  // b.tstop
  41b304:	ldr	w0, [sp, #92]
  41b308:	lsl	w1, w0, #10
  41b30c:	ldr	w0, [sp, #84]
  41b310:	orr	w6, w1, w0
  41b314:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b318:	add	x1, x0, #0xaeb
  41b31c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b320:	add	x5, x0, #0x378
  41b324:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b328:	add	x4, x0, #0x740
  41b32c:	mov	w3, #0x353                 	// #851
  41b330:	mov	x2, x1
  41b334:	ldr	w1, [sp, #88]
  41b338:	mov	w0, w6
  41b33c:	bl	406590 <log_internal_realm@plt>
  41b340:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b344:	ldr	w0, [sp, #88]
  41b348:	cmp	w0, #0x0
  41b34c:	cneg	w0, w0, lt  // lt = tstop
  41b350:	and	w0, w0, #0xff
  41b354:	neg	w0, w0
  41b358:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b35c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b360:	add	x0, x0, #0x760
  41b364:	bl	406230 <sockaddr_un_unlink@plt>
  41b368:	ldr	x0, [sp, #40]
  41b36c:	ldr	w19, [x0, #8]
  41b370:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b374:	add	x20, x0, #0x760
  41b378:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b37c:	add	x0, x0, #0x760
  41b380:	str	x0, [sp, #120]
  41b384:	ldr	x0, [sp, #120]
  41b388:	ldrh	w0, [x0]
  41b38c:	cmp	w0, #0x1
  41b390:	cset	w0, ne  // ne = any
  41b394:	and	w0, w0, #0xff
  41b398:	and	x0, x0, #0xff
  41b39c:	cmp	x0, #0x0
  41b3a0:	b.eq	41b3cc <server_open_stdout_socket+0x190>  // b.none
  41b3a4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b3a8:	add	x1, x0, #0xaeb
  41b3ac:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b3b0:	add	x4, x0, #0x720
  41b3b4:	mov	w3, #0x357                 	// #855
  41b3b8:	mov	x2, x1
  41b3bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b3c0:	add	x1, x0, #0x390
  41b3c4:	mov	w0, #0x0                   	// #0
  41b3c8:	bl	405fd0 <log_assert_failed_realm@plt>
  41b3cc:	ldr	x0, [sp, #120]
  41b3d0:	ldrb	w0, [x0, #2]
  41b3d4:	cmp	w0, #0x0
  41b3d8:	b.ne	41b3f8 <server_open_stdout_socket+0x1bc>  // b.any
  41b3dc:	ldr	x0, [sp, #120]
  41b3e0:	add	x0, x0, #0x2
  41b3e4:	add	x0, x0, #0x1
  41b3e8:	mov	x1, #0x6b                  	// #107
  41b3ec:	bl	405d60 <strnlen@plt>
  41b3f0:	add	x0, x0, #0x3
  41b3f4:	b	41b40c <server_open_stdout_socket+0x1d0>
  41b3f8:	ldr	x0, [sp, #120]
  41b3fc:	add	x0, x0, #0x2
  41b400:	mov	x1, #0x6c                  	// #108
  41b404:	bl	405d60 <strnlen@plt>
  41b408:	add	x0, x0, #0x3
  41b40c:	mov	w2, w0
  41b410:	mov	x1, x20
  41b414:	mov	w0, w19
  41b418:	bl	4065b0 <bind@plt>
  41b41c:	str	w0, [sp, #56]
  41b420:	ldr	w0, [sp, #56]
  41b424:	cmp	w0, #0x0
  41b428:	b.ge	41b4c0 <server_open_stdout_socket+0x284>  // b.tcont
  41b42c:	mov	w0, #0x3                   	// #3
  41b430:	str	w0, [sp, #72]
  41b434:	bl	4062e0 <__errno_location@plt>
  41b438:	ldr	w0, [x0]
  41b43c:	str	w0, [sp, #76]
  41b440:	str	wzr, [sp, #80]
  41b444:	ldr	w0, [sp, #80]
  41b448:	bl	406c30 <log_get_max_level_realm@plt>
  41b44c:	mov	w1, w0
  41b450:	ldr	w0, [sp, #72]
  41b454:	and	w0, w0, #0x7
  41b458:	cmp	w1, w0
  41b45c:	b.lt	41b4a8 <server_open_stdout_socket+0x26c>  // b.tstop
  41b460:	ldr	w0, [sp, #80]
  41b464:	lsl	w1, w0, #10
  41b468:	ldr	w0, [sp, #72]
  41b46c:	orr	w7, w1, w0
  41b470:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b474:	add	x1, x0, #0xaeb
  41b478:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b47c:	add	x6, x0, #0x762
  41b480:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b484:	add	x5, x0, #0x3b0
  41b488:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b48c:	add	x4, x0, #0x740
  41b490:	mov	w3, #0x359                 	// #857
  41b494:	mov	x2, x1
  41b498:	ldr	w1, [sp, #76]
  41b49c:	mov	w0, w7
  41b4a0:	bl	406590 <log_internal_realm@plt>
  41b4a4:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b4a8:	ldr	w0, [sp, #76]
  41b4ac:	cmp	w0, #0x0
  41b4b0:	cneg	w0, w0, lt  // lt = tstop
  41b4b4:	and	w0, w0, #0xff
  41b4b8:	neg	w0, w0
  41b4bc:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b4c0:	mov	w1, #0x1b6                 	// #438
  41b4c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b4c8:	add	x0, x0, #0x762
  41b4cc:	bl	4061f0 <chmod@plt>
  41b4d0:	ldr	x0, [sp, #40]
  41b4d4:	ldr	w0, [x0, #8]
  41b4d8:	mov	w1, #0x1000                	// #4096
  41b4dc:	bl	4063d0 <listen@plt>
  41b4e0:	cmp	w0, #0x0
  41b4e4:	b.ge	41b58c <server_open_stdout_socket+0x350>  // b.tcont
  41b4e8:	mov	w0, #0x3                   	// #3
  41b4ec:	str	w0, [sp, #60]
  41b4f0:	bl	4062e0 <__errno_location@plt>
  41b4f4:	ldr	w0, [x0]
  41b4f8:	str	w0, [sp, #64]
  41b4fc:	str	wzr, [sp, #68]
  41b500:	ldr	w0, [sp, #68]
  41b504:	bl	406c30 <log_get_max_level_realm@plt>
  41b508:	mov	w1, w0
  41b50c:	ldr	w0, [sp, #60]
  41b510:	and	w0, w0, #0x7
  41b514:	cmp	w1, w0
  41b518:	b.lt	41b564 <server_open_stdout_socket+0x328>  // b.tstop
  41b51c:	ldr	w0, [sp, #68]
  41b520:	lsl	w1, w0, #10
  41b524:	ldr	w0, [sp, #60]
  41b528:	orr	w7, w1, w0
  41b52c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b530:	add	x1, x0, #0xaeb
  41b534:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b538:	add	x6, x0, #0x762
  41b53c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b540:	add	x5, x0, #0x3c8
  41b544:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b548:	add	x4, x0, #0x740
  41b54c:	mov	w3, #0x35e                 	// #862
  41b550:	mov	x2, x1
  41b554:	ldr	w1, [sp, #64]
  41b558:	mov	w0, w7
  41b55c:	bl	406590 <log_internal_realm@plt>
  41b560:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b564:	ldr	w0, [sp, #64]
  41b568:	cmp	w0, #0x0
  41b56c:	cneg	w0, w0, lt  // lt = tstop
  41b570:	and	w0, w0, #0xff
  41b574:	neg	w0, w0
  41b578:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b57c:	ldr	x0, [sp, #40]
  41b580:	ldr	w0, [x0, #8]
  41b584:	mov	w1, #0x1                   	// #1
  41b588:	bl	405e60 <fd_nonblock@plt>
  41b58c:	ldr	x0, [sp, #40]
  41b590:	ldr	x6, [x0, #32]
  41b594:	ldr	x0, [sp, #40]
  41b598:	add	x1, x0, #0x38
  41b59c:	ldr	x0, [sp, #40]
  41b5a0:	ldr	w2, [x0, #8]
  41b5a4:	ldr	x5, [sp, #40]
  41b5a8:	adrp	x0, 41a000 <stdout_stream_install+0x48c>
  41b5ac:	add	x4, x0, #0x2dc
  41b5b0:	mov	w3, #0x1                   	// #1
  41b5b4:	mov	x0, x6
  41b5b8:	bl	406680 <sd_event_add_io@plt>
  41b5bc:	str	w0, [sp, #56]
  41b5c0:	ldr	w0, [sp, #56]
  41b5c4:	cmp	w0, #0x0
  41b5c8:	b.ge	41b654 <server_open_stdout_socket+0x418>  // b.tcont
  41b5cc:	mov	w0, #0x3                   	// #3
  41b5d0:	str	w0, [sp, #108]
  41b5d4:	ldr	w0, [sp, #56]
  41b5d8:	str	w0, [sp, #112]
  41b5dc:	str	wzr, [sp, #116]
  41b5e0:	ldr	w0, [sp, #116]
  41b5e4:	bl	406c30 <log_get_max_level_realm@plt>
  41b5e8:	mov	w1, w0
  41b5ec:	ldr	w0, [sp, #108]
  41b5f0:	and	w0, w0, #0x7
  41b5f4:	cmp	w1, w0
  41b5f8:	b.lt	41b63c <server_open_stdout_socket+0x400>  // b.tstop
  41b5fc:	ldr	w0, [sp, #116]
  41b600:	lsl	w1, w0, #10
  41b604:	ldr	w0, [sp, #108]
  41b608:	orr	w6, w1, w0
  41b60c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b610:	add	x1, x0, #0xaeb
  41b614:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b618:	add	x5, x0, #0x3e0
  41b61c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b620:	add	x4, x0, #0x740
  41b624:	mov	w3, #0x364                 	// #868
  41b628:	mov	x2, x1
  41b62c:	ldr	w1, [sp, #112]
  41b630:	mov	w0, w6
  41b634:	bl	406590 <log_internal_realm@plt>
  41b638:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b63c:	ldr	w0, [sp, #112]
  41b640:	cmp	w0, #0x0
  41b644:	cneg	w0, w0, lt  // lt = tstop
  41b648:	and	w0, w0, #0xff
  41b64c:	neg	w0, w0
  41b650:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b654:	ldr	x0, [sp, #40]
  41b658:	ldr	x0, [x0, #56]
  41b65c:	mov	x1, #0x5                   	// #5
  41b660:	bl	406380 <sd_event_source_set_priority@plt>
  41b664:	str	w0, [sp, #56]
  41b668:	ldr	w0, [sp, #56]
  41b66c:	cmp	w0, #0x0
  41b670:	b.ge	41b6fc <server_open_stdout_socket+0x4c0>  // b.tcont
  41b674:	mov	w0, #0x3                   	// #3
  41b678:	str	w0, [sp, #96]
  41b67c:	ldr	w0, [sp, #56]
  41b680:	str	w0, [sp, #100]
  41b684:	str	wzr, [sp, #104]
  41b688:	ldr	w0, [sp, #104]
  41b68c:	bl	406c30 <log_get_max_level_realm@plt>
  41b690:	mov	w1, w0
  41b694:	ldr	w0, [sp, #96]
  41b698:	and	w0, w0, #0x7
  41b69c:	cmp	w1, w0
  41b6a0:	b.lt	41b6e4 <server_open_stdout_socket+0x4a8>  // b.tstop
  41b6a4:	ldr	w0, [sp, #104]
  41b6a8:	lsl	w1, w0, #10
  41b6ac:	ldr	w0, [sp, #96]
  41b6b0:	orr	w6, w1, w0
  41b6b4:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b6b8:	add	x1, x0, #0xaeb
  41b6bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b6c0:	add	x5, x0, #0x418
  41b6c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b6c8:	add	x4, x0, #0x740
  41b6cc:	mov	w3, #0x368                 	// #872
  41b6d0:	mov	x2, x1
  41b6d4:	ldr	w1, [sp, #100]
  41b6d8:	mov	w0, w6
  41b6dc:	bl	406590 <log_internal_realm@plt>
  41b6e0:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b6e4:	ldr	w0, [sp, #100]
  41b6e8:	cmp	w0, #0x0
  41b6ec:	cneg	w0, w0, lt  // lt = tstop
  41b6f0:	and	w0, w0, #0xff
  41b6f4:	neg	w0, w0
  41b6f8:	b	41b700 <server_open_stdout_socket+0x4c4>
  41b6fc:	mov	w0, #0x0                   	// #0
  41b700:	ldp	x19, x20, [sp, #16]
  41b704:	ldp	x29, x30, [sp], #128
  41b708:	ret

000000000041b70c <stdout_stream_send_notify>:
  41b70c:	stp	x29, x30, [sp, #-192]!
  41b710:	mov	x29, sp
  41b714:	str	x0, [x29, #24]
  41b718:	adrp	x0, 441000 <wordlist.9471+0x208>
  41b71c:	ldr	x0, [x0, #4064]
  41b720:	ldr	x1, [x0]
  41b724:	str	x1, [x29, #184]
  41b728:	mov	x1, #0x0                   	// #0
  41b72c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b730:	add	x0, x0, #0x458
  41b734:	str	x0, [x29, #112]
  41b738:	mov	x0, #0x9                   	// #9
  41b73c:	str	x0, [x29, #120]
  41b740:	stp	xzr, xzr, [x29, #128]
  41b744:	stp	xzr, xzr, [x29, #144]
  41b748:	stp	xzr, xzr, [x29, #160]
  41b74c:	str	xzr, [x29, #176]
  41b750:	add	x0, x29, #0x70
  41b754:	str	x0, [x29, #144]
  41b758:	mov	x0, #0x1                   	// #1
  41b75c:	str	x0, [x29, #152]
  41b760:	ldr	x0, [x29, #24]
  41b764:	cmp	x0, #0x0
  41b768:	cset	w0, eq  // eq = none
  41b76c:	and	w0, w0, #0xff
  41b770:	and	x0, x0, #0xff
  41b774:	cmp	x0, #0x0
  41b778:	b.eq	41b7a4 <stdout_stream_send_notify+0x98>  // b.none
  41b77c:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b780:	add	x1, x0, #0xaeb
  41b784:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b788:	add	x4, x0, #0x7e0
  41b78c:	mov	w3, #0x379                 	// #889
  41b790:	mov	x2, x1
  41b794:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b798:	add	x1, x0, #0xb48
  41b79c:	mov	w0, #0x0                   	// #0
  41b7a0:	bl	405fd0 <log_assert_failed_realm@plt>
  41b7a4:	ldr	x0, [x29, #24]
  41b7a8:	ldrb	w0, [x0, #60]
  41b7ac:	and	w0, w0, #0x10
  41b7b0:	and	w0, w0, #0xff
  41b7b4:	cmp	w0, #0x0
  41b7b8:	cset	w0, ne  // ne = any
  41b7bc:	and	w0, w0, #0xff
  41b7c0:	and	x0, x0, #0xff
  41b7c4:	cmp	x0, #0x0
  41b7c8:	b.eq	41b7f4 <stdout_stream_send_notify+0xe8>  // b.none
  41b7cc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b7d0:	add	x1, x0, #0xaeb
  41b7d4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b7d8:	add	x4, x0, #0x7e0
  41b7dc:	mov	w3, #0x37a                 	// #890
  41b7e0:	mov	x2, x1
  41b7e4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b7e8:	add	x1, x0, #0x468
  41b7ec:	mov	w0, #0x0                   	// #0
  41b7f0:	bl	405fd0 <log_assert_failed_realm@plt>
  41b7f4:	ldr	x0, [x29, #24]
  41b7f8:	ldrb	w0, [x0, #60]
  41b7fc:	ubfx	x0, x0, #5, #1
  41b800:	and	w0, w0, #0xff
  41b804:	eor	w0, w0, #0x1
  41b808:	and	w0, w0, #0xff
  41b80c:	and	x0, x0, #0xff
  41b810:	cmp	x0, #0x0
  41b814:	b.eq	41b840 <stdout_stream_send_notify+0x134>  // b.none
  41b818:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b81c:	add	x1, x0, #0xaeb
  41b820:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b824:	add	x4, x0, #0x7e0
  41b828:	mov	w3, #0x37b                 	// #891
  41b82c:	mov	x2, x1
  41b830:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b834:	add	x1, x0, #0x478
  41b838:	mov	w0, #0x0                   	// #0
  41b83c:	bl	405fd0 <log_assert_failed_realm@plt>
  41b840:	ldr	x0, [x29, #24]
  41b844:	ldr	x0, [x0]
  41b848:	cmp	x0, #0x0
  41b84c:	cset	w0, eq  // eq = none
  41b850:	and	w0, w0, #0xff
  41b854:	and	x0, x0, #0xff
  41b858:	cmp	x0, #0x0
  41b85c:	b.eq	41b888 <stdout_stream_send_notify+0x17c>  // b.none
  41b860:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b864:	add	x1, x0, #0xaeb
  41b868:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b86c:	add	x4, x0, #0x7e0
  41b870:	mov	w3, #0x37c                 	// #892
  41b874:	mov	x2, x1
  41b878:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b87c:	add	x1, x0, #0x490
  41b880:	mov	w0, #0x0                   	// #0
  41b884:	bl	405fd0 <log_assert_failed_realm@plt>
  41b888:	ldr	x0, [x29, #24]
  41b88c:	ldr	x0, [x0]
  41b890:	ldr	w0, [x0, #24]
  41b894:	lsr	w0, w0, #31
  41b898:	and	w0, w0, #0xff
  41b89c:	and	x0, x0, #0xff
  41b8a0:	cmp	x0, #0x0
  41b8a4:	b.eq	41b8d0 <stdout_stream_send_notify+0x1c4>  // b.none
  41b8a8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b8ac:	add	x1, x0, #0xaeb
  41b8b0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b8b4:	add	x4, x0, #0x7e0
  41b8b8:	mov	w3, #0x37d                 	// #893
  41b8bc:	mov	x2, x1
  41b8c0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b8c4:	add	x1, x0, #0x4a0
  41b8c8:	mov	w0, #0x0                   	// #0
  41b8cc:	bl	405fd0 <log_assert_failed_realm@plt>
  41b8d0:	mov	x0, #0x18                  	// #24
  41b8d4:	str	x0, [x29, #168]
  41b8d8:	ldr	x0, [x29, #168]
  41b8dc:	str	x0, [x29, #64]
  41b8e0:	ldr	x0, [x29, #64]
  41b8e4:	cmp	x0, #0x400, lsl #12
  41b8e8:	cset	w0, hi  // hi = pmore
  41b8ec:	and	w0, w0, #0xff
  41b8f0:	and	x0, x0, #0xff
  41b8f4:	cmp	x0, #0x0
  41b8f8:	b.eq	41b924 <stdout_stream_send_notify+0x218>  // b.none
  41b8fc:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41b900:	add	x1, x0, #0xaeb
  41b904:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b908:	add	x4, x0, #0x7e0
  41b90c:	mov	w3, #0x383                 	// #899
  41b910:	mov	x2, x1
  41b914:	adrp	x0, 42b000 <__func__.15991+0x530>
  41b918:	add	x1, x0, #0x4c0
  41b91c:	mov	w0, #0x0                   	// #0
  41b920:	bl	405fd0 <log_assert_failed_realm@plt>
  41b924:	ldr	x0, [x29, #64]
  41b928:	add	x0, x0, #0xf
  41b92c:	lsr	x0, x0, #4
  41b930:	lsl	x0, x0, #4
  41b934:	sub	sp, sp, x0
  41b938:	mov	x0, sp
  41b93c:	add	x0, x0, #0xf
  41b940:	lsr	x0, x0, #4
  41b944:	lsl	x0, x0, #4
  41b948:	str	x0, [x29, #72]
  41b94c:	ldr	x2, [x29, #64]
  41b950:	mov	w1, #0x0                   	// #0
  41b954:	ldr	x0, [x29, #72]
  41b958:	bl	406c20 <memset@plt>
  41b95c:	str	x0, [x29, #160]
  41b960:	ldr	x0, [x29, #168]
  41b964:	cmp	x0, #0xf
  41b968:	b.ls	41b974 <stdout_stream_send_notify+0x268>  // b.plast
  41b96c:	ldr	x0, [x29, #160]
  41b970:	b	41b978 <stdout_stream_send_notify+0x26c>
  41b974:	mov	x0, #0x0                   	// #0
  41b978:	str	x0, [x29, #80]
  41b97c:	ldr	x0, [x29, #80]
  41b980:	mov	w1, #0x1                   	// #1
  41b984:	str	w1, [x0, #8]
  41b988:	ldr	x0, [x29, #80]
  41b98c:	mov	w1, #0x1                   	// #1
  41b990:	str	w1, [x0, #12]
  41b994:	ldr	x0, [x29, #80]
  41b998:	mov	x1, #0x14                  	// #20
  41b99c:	str	x1, [x0]
  41b9a0:	ldr	x0, [x29, #80]
  41b9a4:	add	x0, x0, #0x10
  41b9a8:	ldr	x1, [x29, #24]
  41b9ac:	add	x1, x1, #0xc
  41b9b0:	ldr	w1, [x1]
  41b9b4:	str	w1, [x0]
  41b9b8:	ldr	x0, [x29, #24]
  41b9bc:	ldr	x0, [x0]
  41b9c0:	ldr	w0, [x0, #24]
  41b9c4:	add	x1, x29, #0x80
  41b9c8:	mov	w2, #0x4040                	// #16448
  41b9cc:	bl	4069b0 <sendmsg@plt>
  41b9d0:	str	x0, [x29, #88]
  41b9d4:	ldr	x0, [x29, #88]
  41b9d8:	cmp	x0, #0x0
  41b9dc:	b.ge	41ba70 <stdout_stream_send_notify+0x364>  // b.tcont
  41b9e0:	bl	4062e0 <__errno_location@plt>
  41b9e4:	ldr	w0, [x0]
  41b9e8:	cmp	w0, #0xb
  41b9ec:	b.eq	41bc24 <stdout_stream_send_notify+0x518>  // b.none
  41b9f0:	mov	w0, #0x3                   	// #3
  41b9f4:	str	w0, [x29, #52]
  41b9f8:	bl	4062e0 <__errno_location@plt>
  41b9fc:	ldr	w0, [x0]
  41ba00:	str	w0, [x29, #56]
  41ba04:	str	wzr, [x29, #60]
  41ba08:	ldr	w0, [x29, #60]
  41ba0c:	bl	406c30 <log_get_max_level_realm@plt>
  41ba10:	mov	w1, w0
  41ba14:	ldr	w0, [x29, #52]
  41ba18:	and	w0, w0, #0x7
  41ba1c:	cmp	w1, w0
  41ba20:	b.lt	41ba64 <stdout_stream_send_notify+0x358>  // b.tstop
  41ba24:	ldr	w0, [x29, #60]
  41ba28:	lsl	w1, w0, #10
  41ba2c:	ldr	w0, [x29, #52]
  41ba30:	orr	w6, w1, w0
  41ba34:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41ba38:	add	x1, x0, #0xaeb
  41ba3c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ba40:	add	x5, x0, #0x4d8
  41ba44:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ba48:	add	x4, x0, #0x800
  41ba4c:	mov	w3, #0x391                 	// #913
  41ba50:	mov	x2, x1
  41ba54:	ldr	w1, [x29, #56]
  41ba58:	mov	w0, w6
  41ba5c:	bl	406590 <log_internal_realm@plt>
  41ba60:	b	41baf4 <stdout_stream_send_notify+0x3e8>
  41ba64:	ldr	w0, [x29, #56]
  41ba68:	cmp	w0, #0x0
  41ba6c:	b	41baf4 <stdout_stream_send_notify+0x3e8>
  41ba70:	mov	w0, #0x7                   	// #7
  41ba74:	str	w0, [x29, #40]
  41ba78:	str	wzr, [x29, #44]
  41ba7c:	str	wzr, [x29, #48]
  41ba80:	ldr	w0, [x29, #48]
  41ba84:	bl	406c30 <log_get_max_level_realm@plt>
  41ba88:	mov	w1, w0
  41ba8c:	ldr	w0, [x29, #40]
  41ba90:	and	w0, w0, #0x7
  41ba94:	cmp	w1, w0
  41ba98:	b.lt	41badc <stdout_stream_send_notify+0x3d0>  // b.tstop
  41ba9c:	ldr	w0, [x29, #48]
  41baa0:	lsl	w1, w0, #10
  41baa4:	ldr	w0, [x29, #40]
  41baa8:	orr	w6, w1, w0
  41baac:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41bab0:	add	x1, x0, #0xaeb
  41bab4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bab8:	add	x5, x0, #0x518
  41babc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bac0:	add	x4, x0, #0x800
  41bac4:	mov	w3, #0x393                 	// #915
  41bac8:	mov	x2, x1
  41bacc:	ldr	w1, [x29, #44]
  41bad0:	mov	w0, w6
  41bad4:	bl	406590 <log_internal_realm@plt>
  41bad8:	b	41bae4 <stdout_stream_send_notify+0x3d8>
  41badc:	ldr	w0, [x29, #44]
  41bae0:	cmp	w0, #0x0
  41bae4:	ldr	x0, [x29, #24]
  41bae8:	ldrb	w1, [x0, #60]
  41baec:	orr	w1, w1, #0x10
  41baf0:	strb	w1, [x0, #60]
  41baf4:	ldr	x0, [x29, #24]
  41baf8:	ldr	x0, [x0]
  41bafc:	add	x0, x0, #0x200
  41bb00:	str	x0, [x29, #96]
  41bb04:	ldr	x0, [x29, #24]
  41bb08:	str	x0, [x29, #104]
  41bb0c:	ldr	x0, [x29, #104]
  41bb10:	cmp	x0, #0x0
  41bb14:	cset	w0, eq  // eq = none
  41bb18:	and	w0, w0, #0xff
  41bb1c:	and	x0, x0, #0xff
  41bb20:	cmp	x0, #0x0
  41bb24:	b.eq	41bb50 <stdout_stream_send_notify+0x444>  // b.none
  41bb28:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41bb2c:	add	x1, x0, #0xaeb
  41bb30:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bb34:	add	x4, x0, #0x7e0
  41bb38:	mov	w3, #0x397                 	// #919
  41bb3c:	mov	x2, x1
  41bb40:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41bb44:	add	x1, x0, #0xb30
  41bb48:	mov	w0, #0x0                   	// #0
  41bb4c:	bl	405fd0 <log_assert_failed_realm@plt>
  41bb50:	ldr	x0, [x29, #104]
  41bb54:	ldr	x0, [x0, #128]
  41bb58:	cmp	x0, #0x0
  41bb5c:	b.eq	41bb74 <stdout_stream_send_notify+0x468>  // b.none
  41bb60:	ldr	x0, [x29, #104]
  41bb64:	ldr	x0, [x0, #128]
  41bb68:	ldr	x1, [x29, #104]
  41bb6c:	ldr	x1, [x1, #136]
  41bb70:	str	x1, [x0, #136]
  41bb74:	ldr	x0, [x29, #104]
  41bb78:	ldr	x0, [x0, #136]
  41bb7c:	cmp	x0, #0x0
  41bb80:	b.eq	41bb9c <stdout_stream_send_notify+0x490>  // b.none
  41bb84:	ldr	x0, [x29, #104]
  41bb88:	ldr	x0, [x0, #136]
  41bb8c:	ldr	x1, [x29, #104]
  41bb90:	ldr	x1, [x1, #128]
  41bb94:	str	x1, [x0, #128]
  41bb98:	b	41bbf8 <stdout_stream_send_notify+0x4ec>
  41bb9c:	ldr	x0, [x29, #96]
  41bba0:	ldr	x0, [x0]
  41bba4:	ldr	x1, [x29, #104]
  41bba8:	cmp	x1, x0
  41bbac:	cset	w0, ne  // ne = any
  41bbb0:	and	w0, w0, #0xff
  41bbb4:	and	x0, x0, #0xff
  41bbb8:	cmp	x0, #0x0
  41bbbc:	b.eq	41bbe8 <stdout_stream_send_notify+0x4dc>  // b.none
  41bbc0:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41bbc4:	add	x1, x0, #0xaeb
  41bbc8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bbcc:	add	x4, x0, #0x7e0
  41bbd0:	mov	w3, #0x397                 	// #919
  41bbd4:	mov	x2, x1
  41bbd8:	adrp	x0, 42a000 <__func__.11909+0x2280>
  41bbdc:	add	x1, x0, #0xb38
  41bbe0:	mov	w0, #0x0                   	// #0
  41bbe4:	bl	405fd0 <log_assert_failed_realm@plt>
  41bbe8:	ldr	x0, [x29, #104]
  41bbec:	ldr	x1, [x0, #128]
  41bbf0:	ldr	x0, [x29, #96]
  41bbf4:	str	x1, [x0]
  41bbf8:	ldr	x0, [x29, #104]
  41bbfc:	str	xzr, [x0, #136]
  41bc00:	ldr	x0, [x29, #104]
  41bc04:	ldr	x1, [x0, #136]
  41bc08:	ldr	x0, [x29, #104]
  41bc0c:	str	x1, [x0, #128]
  41bc10:	ldr	x0, [x29, #24]
  41bc14:	ldrb	w1, [x0, #60]
  41bc18:	and	w1, w1, #0xffffffdf
  41bc1c:	strb	w1, [x0, #60]
  41bc20:	b	41bc28 <stdout_stream_send_notify+0x51c>
  41bc24:	nop
  41bc28:	adrp	x0, 441000 <wordlist.9471+0x208>
  41bc2c:	ldr	x0, [x0, #4064]
  41bc30:	ldr	x1, [x29, #184]
  41bc34:	ldr	x0, [x0]
  41bc38:	eor	x0, x1, x0
  41bc3c:	cmp	x0, #0x0
  41bc40:	b.eq	41bc48 <stdout_stream_send_notify+0x53c>  // b.none
  41bc44:	bl	4063e0 <__stack_chk_fail@plt>
  41bc48:	mov	sp, x29
  41bc4c:	ldp	x29, x30, [sp], #192
  41bc50:	ret

000000000041bc54 <freep>:
  41bc54:	stp	x29, x30, [sp, #-32]!
  41bc58:	mov	x29, sp
  41bc5c:	str	x0, [sp, #24]
  41bc60:	ldr	x0, [sp, #24]
  41bc64:	ldr	x0, [x0]
  41bc68:	bl	406930 <free@plt>
  41bc6c:	nop
  41bc70:	ldp	x29, x30, [sp], #32
  41bc74:	ret

000000000041bc78 <size_multiply_overflow>:
  41bc78:	sub	sp, sp, #0x10
  41bc7c:	str	x0, [sp, #8]
  41bc80:	str	x1, [sp]
  41bc84:	ldr	x0, [sp]
  41bc88:	cmp	x0, #0x0
  41bc8c:	cset	w0, ne  // ne = any
  41bc90:	and	w0, w0, #0xff
  41bc94:	and	x0, x0, #0xff
  41bc98:	cmp	x0, #0x0
  41bc9c:	b.eq	41bce0 <size_multiply_overflow+0x68>  // b.none
  41bca0:	mov	x2, #0x0                   	// #0
  41bca4:	ldr	x1, [sp, #8]
  41bca8:	ldr	x0, [sp]
  41bcac:	umulh	x0, x1, x0
  41bcb0:	cmp	x0, #0x0
  41bcb4:	b.eq	41bcbc <size_multiply_overflow+0x44>  // b.none
  41bcb8:	mov	x2, #0x1                   	// #1
  41bcbc:	mov	x0, x2
  41bcc0:	cmp	x0, #0x0
  41bcc4:	cset	w0, ne  // ne = any
  41bcc8:	and	w0, w0, #0xff
  41bccc:	and	x0, x0, #0xff
  41bcd0:	cmp	x0, #0x0
  41bcd4:	b.eq	41bce0 <size_multiply_overflow+0x68>  // b.none
  41bcd8:	mov	w0, #0x1                   	// #1
  41bcdc:	b	41bce4 <size_multiply_overflow+0x6c>
  41bce0:	mov	w0, #0x0                   	// #0
  41bce4:	and	w0, w0, #0x1
  41bce8:	and	w0, w0, #0xff
  41bcec:	add	sp, sp, #0x10
  41bcf0:	ret

000000000041bcf4 <malloc_multiply>:
  41bcf4:	stp	x29, x30, [sp, #-32]!
  41bcf8:	mov	x29, sp
  41bcfc:	str	x0, [sp, #24]
  41bd00:	str	x1, [sp, #16]
  41bd04:	ldr	x1, [sp, #16]
  41bd08:	ldr	x0, [sp, #24]
  41bd0c:	bl	41bc78 <size_multiply_overflow>
  41bd10:	and	w0, w0, #0xff
  41bd14:	cmp	w0, #0x0
  41bd18:	b.eq	41bd24 <malloc_multiply+0x30>  // b.none
  41bd1c:	mov	x0, #0x0                   	// #0
  41bd20:	b	41bd40 <malloc_multiply+0x4c>
  41bd24:	ldr	x1, [sp, #24]
  41bd28:	ldr	x0, [sp, #16]
  41bd2c:	mul	x0, x1, x0
  41bd30:	cmp	x0, #0x0
  41bd34:	b.ne	41bd3c <malloc_multiply+0x48>  // b.any
  41bd38:	mov	x0, #0x1                   	// #1
  41bd3c:	bl	406520 <malloc@plt>
  41bd40:	ldp	x29, x30, [sp], #32
  41bd44:	ret

000000000041bd48 <client_context_extra_fields_n_iovec>:
  41bd48:	sub	sp, sp, #0x10
  41bd4c:	str	x0, [sp, #8]
  41bd50:	ldr	x0, [sp, #8]
  41bd54:	cmp	x0, #0x0
  41bd58:	b.eq	41bd68 <client_context_extra_fields_n_iovec+0x20>  // b.none
  41bd5c:	ldr	x0, [sp, #8]
  41bd60:	ldr	x0, [x0, #176]
  41bd64:	b	41bd6c <client_context_extra_fields_n_iovec+0x24>
  41bd68:	mov	x0, #0x0                   	// #0
  41bd6c:	add	sp, sp, #0x10
  41bd70:	ret

000000000041bd74 <client_context_test_priority>:
  41bd74:	sub	sp, sp, #0x10
  41bd78:	str	x0, [sp, #8]
  41bd7c:	str	w1, [sp, #4]
  41bd80:	ldr	x0, [sp, #8]
  41bd84:	cmp	x0, #0x0
  41bd88:	b.ne	41bd94 <client_context_test_priority+0x20>  // b.any
  41bd8c:	mov	w0, #0x1                   	// #1
  41bd90:	b	41bdc8 <client_context_test_priority+0x54>
  41bd94:	ldr	x0, [sp, #8]
  41bd98:	ldr	w0, [x0, #160]
  41bd9c:	cmp	w0, #0x0
  41bda0:	b.ge	41bdac <client_context_test_priority+0x38>  // b.tcont
  41bda4:	mov	w0, #0x1                   	// #1
  41bda8:	b	41bdc8 <client_context_test_priority+0x54>
  41bdac:	ldr	w0, [sp, #4]
  41bdb0:	and	w1, w0, #0x7
  41bdb4:	ldr	x0, [sp, #8]
  41bdb8:	ldr	w0, [x0, #160]
  41bdbc:	cmp	w1, w0
  41bdc0:	cset	w0, le
  41bdc4:	and	w0, w0, #0xff
  41bdc8:	add	sp, sp, #0x10
  41bdcc:	ret

000000000041bdd0 <pid_is_valid>:
  41bdd0:	sub	sp, sp, #0x10
  41bdd4:	str	w0, [sp, #12]
  41bdd8:	ldr	w0, [sp, #12]
  41bddc:	cmp	w0, #0x0
  41bde0:	cset	w0, gt
  41bde4:	and	w0, w0, #0xff
  41bde8:	add	sp, sp, #0x10
  41bdec:	ret

000000000041bdf0 <setsockopt_int>:
  41bdf0:	stp	x29, x30, [sp, #-32]!
  41bdf4:	mov	x29, sp
  41bdf8:	str	w0, [sp, #28]
  41bdfc:	str	w1, [sp, #24]
  41be00:	str	w2, [sp, #20]
  41be04:	str	w3, [sp, #16]
  41be08:	add	x0, sp, #0x10
  41be0c:	mov	w4, #0x4                   	// #4
  41be10:	mov	x3, x0
  41be14:	ldr	w2, [sp, #20]
  41be18:	ldr	w1, [sp, #24]
  41be1c:	ldr	w0, [sp, #28]
  41be20:	bl	4067c0 <setsockopt@plt>
  41be24:	cmp	w0, #0x0
  41be28:	b.ge	41be3c <setsockopt_int+0x4c>  // b.tcont
  41be2c:	bl	4062e0 <__errno_location@plt>
  41be30:	ldr	w0, [x0]
  41be34:	neg	w0, w0
  41be38:	b	41be40 <setsockopt_int+0x50>
  41be3c:	mov	w0, #0x0                   	// #0
  41be40:	ldp	x29, x30, [sp], #32
  41be44:	ret

000000000041be48 <forward_syslog_iovec>:
  41be48:	stp	x29, x30, [sp, #-224]!
  41be4c:	mov	x29, sp
  41be50:	str	x0, [sp, #56]
  41be54:	str	x1, [sp, #48]
  41be58:	str	w2, [sp, #44]
  41be5c:	str	x3, [sp, #32]
  41be60:	str	x4, [sp, #24]
  41be64:	adrp	x0, 441000 <wordlist.9471+0x208>
  41be68:	ldr	x0, [x0, #4064]
  41be6c:	ldr	x1, [x0]
  41be70:	str	x1, [sp, #216]
  41be74:	mov	x1, #0x0                   	// #0
  41be78:	stp	xzr, xzr, [sp, #128]
  41be7c:	stp	xzr, xzr, [sp, #144]
  41be80:	stp	xzr, xzr, [sp, #160]
  41be84:	str	xzr, [sp, #176]
  41be88:	adrp	x0, 42b000 <__func__.15991+0x530>
  41be8c:	add	x0, x0, #0xd20
  41be90:	str	x0, [sp, #128]
  41be94:	adrp	x0, 42b000 <__func__.15991+0x530>
  41be98:	add	x0, x0, #0xd20
  41be9c:	str	x0, [sp, #96]
  41bea0:	ldr	x0, [sp, #96]
  41bea4:	ldrh	w0, [x0]
  41bea8:	cmp	w0, #0x1
  41beac:	cset	w0, ne  // ne = any
  41beb0:	and	w0, w0, #0xff
  41beb4:	and	x0, x0, #0xff
  41beb8:	cmp	x0, #0x0
  41bebc:	b.eq	41bee8 <forward_syslog_iovec+0xa0>  // b.none
  41bec0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bec4:	add	x1, x0, #0x823
  41bec8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41becc:	add	x4, x0, #0xda0
  41bed0:	mov	w3, #0x26                  	// #38
  41bed4:	mov	x2, x1
  41bed8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bedc:	add	x1, x0, #0x848
  41bee0:	mov	w0, #0x0                   	// #0
  41bee4:	bl	405fd0 <log_assert_failed_realm@plt>
  41bee8:	ldr	x0, [sp, #96]
  41beec:	ldrb	w0, [x0, #2]
  41bef0:	cmp	w0, #0x0
  41bef4:	b.ne	41bf14 <forward_syslog_iovec+0xcc>  // b.any
  41bef8:	ldr	x0, [sp, #96]
  41befc:	add	x0, x0, #0x2
  41bf00:	add	x0, x0, #0x1
  41bf04:	mov	x1, #0x6b                  	// #107
  41bf08:	bl	405d60 <strnlen@plt>
  41bf0c:	add	x0, x0, #0x3
  41bf10:	b	41bf28 <forward_syslog_iovec+0xe0>
  41bf14:	ldr	x0, [sp, #96]
  41bf18:	add	x0, x0, #0x2
  41bf1c:	mov	x1, #0x6c                  	// #108
  41bf20:	bl	405d60 <strnlen@plt>
  41bf24:	add	x0, x0, #0x3
  41bf28:	str	w0, [sp, #136]
  41bf2c:	ldr	x0, [sp, #48]
  41bf30:	str	x0, [sp, #144]
  41bf34:	ldr	w0, [sp, #44]
  41bf38:	str	x0, [sp, #152]
  41bf3c:	ldr	x0, [sp, #56]
  41bf40:	cmp	x0, #0x0
  41bf44:	cset	w0, eq  // eq = none
  41bf48:	and	w0, w0, #0xff
  41bf4c:	and	x0, x0, #0xff
  41bf50:	cmp	x0, #0x0
  41bf54:	b.eq	41bf80 <forward_syslog_iovec+0x138>  // b.none
  41bf58:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bf5c:	add	x1, x0, #0x823
  41bf60:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bf64:	add	x4, x0, #0xda0
  41bf68:	mov	w3, #0x2e                  	// #46
  41bf6c:	mov	x2, x1
  41bf70:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bf74:	add	x1, x0, #0x868
  41bf78:	mov	w0, #0x0                   	// #0
  41bf7c:	bl	405fd0 <log_assert_failed_realm@plt>
  41bf80:	ldr	x0, [sp, #48]
  41bf84:	cmp	x0, #0x0
  41bf88:	cset	w0, eq  // eq = none
  41bf8c:	and	w0, w0, #0xff
  41bf90:	and	x0, x0, #0xff
  41bf94:	cmp	x0, #0x0
  41bf98:	b.eq	41bfc4 <forward_syslog_iovec+0x17c>  // b.none
  41bf9c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bfa0:	add	x1, x0, #0x823
  41bfa4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bfa8:	add	x4, x0, #0xda0
  41bfac:	mov	w3, #0x2f                  	// #47
  41bfb0:	mov	x2, x1
  41bfb4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bfb8:	add	x1, x0, #0x870
  41bfbc:	mov	w0, #0x0                   	// #0
  41bfc0:	bl	405fd0 <log_assert_failed_realm@plt>
  41bfc4:	ldr	w0, [sp, #44]
  41bfc8:	cmp	w0, #0x0
  41bfcc:	cset	w0, eq  // eq = none
  41bfd0:	and	w0, w0, #0xff
  41bfd4:	and	x0, x0, #0xff
  41bfd8:	cmp	x0, #0x0
  41bfdc:	b.eq	41c008 <forward_syslog_iovec+0x1c0>  // b.none
  41bfe0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bfe4:	add	x1, x0, #0x823
  41bfe8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bfec:	add	x4, x0, #0xda0
  41bff0:	mov	w3, #0x30                  	// #48
  41bff4:	mov	x2, x1
  41bff8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41bffc:	add	x1, x0, #0x878
  41c000:	mov	w0, #0x0                   	// #0
  41c004:	bl	405fd0 <log_assert_failed_realm@plt>
  41c008:	ldr	x0, [sp, #32]
  41c00c:	cmp	x0, #0x0
  41c010:	b.eq	41c0a8 <forward_syslog_iovec+0x260>  // b.none
  41c014:	mov	x0, #0x20                  	// #32
  41c018:	str	x0, [sp, #104]
  41c01c:	ldr	x0, [sp, #104]
  41c020:	cmp	x0, #0x0
  41c024:	b.eq	41c038 <forward_syslog_iovec+0x1f0>  // b.none
  41c028:	add	x0, sp, #0xb8
  41c02c:	ldr	x2, [sp, #104]
  41c030:	mov	w1, #0x0                   	// #0
  41c034:	bl	406c20 <memset@plt>
  41c038:	add	x0, sp, #0xb8
  41c03c:	str	x0, [sp, #160]
  41c040:	mov	x0, #0x20                  	// #32
  41c044:	str	x0, [sp, #168]
  41c048:	ldr	x0, [sp, #168]
  41c04c:	cmp	x0, #0xf
  41c050:	b.ls	41c05c <forward_syslog_iovec+0x214>  // b.plast
  41c054:	ldr	x0, [sp, #160]
  41c058:	b	41c060 <forward_syslog_iovec+0x218>
  41c05c:	mov	x0, #0x0                   	// #0
  41c060:	str	x0, [sp, #88]
  41c064:	ldr	x0, [sp, #88]
  41c068:	mov	w1, #0x1                   	// #1
  41c06c:	str	w1, [x0, #8]
  41c070:	ldr	x0, [sp, #88]
  41c074:	mov	w1, #0x2                   	// #2
  41c078:	str	w1, [x0, #12]
  41c07c:	ldr	x0, [sp, #88]
  41c080:	mov	x1, #0x1c                  	// #28
  41c084:	str	x1, [x0]
  41c088:	ldr	x0, [sp, #88]
  41c08c:	add	x0, x0, #0x10
  41c090:	mov	x2, #0xc                   	// #12
  41c094:	ldr	x1, [sp, #32]
  41c098:	bl	405e90 <memcpy@plt>
  41c09c:	ldr	x0, [sp, #88]
  41c0a0:	ldr	x0, [x0]
  41c0a4:	str	x0, [sp, #168]
  41c0a8:	ldr	x0, [sp, #56]
  41c0ac:	ldr	w0, [x0]
  41c0b0:	add	x1, sp, #0x80
  41c0b4:	mov	w2, #0x4000                	// #16384
  41c0b8:	bl	4069b0 <sendmsg@plt>
  41c0bc:	cmp	x0, #0x0
  41c0c0:	b.ge	41c240 <forward_syslog_iovec+0x3f8>  // b.tcont
  41c0c4:	bl	4062e0 <__errno_location@plt>
  41c0c8:	ldr	w0, [x0]
  41c0cc:	cmp	w0, #0xb
  41c0d0:	b.ne	41c0ec <forward_syslog_iovec+0x2a4>  // b.any
  41c0d4:	ldr	x0, [sp, #56]
  41c0d8:	ldr	w0, [x0, #464]
  41c0dc:	add	w1, w0, #0x1
  41c0e0:	ldr	x0, [sp, #56]
  41c0e4:	str	w1, [x0, #464]
  41c0e8:	b	41c24c <forward_syslog_iovec+0x404>
  41c0ec:	ldr	x0, [sp, #32]
  41c0f0:	cmp	x0, #0x0
  41c0f4:	b.eq	41c1b0 <forward_syslog_iovec+0x368>  // b.none
  41c0f8:	strb	wzr, [sp, #75]
  41c0fc:	bl	4062e0 <__errno_location@plt>
  41c100:	ldr	w0, [x0]
  41c104:	cmp	w0, #0x1
  41c108:	b.eq	41c114 <forward_syslog_iovec+0x2cc>  // b.none
  41c10c:	cmp	w0, #0x3
  41c110:	b.ne	41c11c <forward_syslog_iovec+0x2d4>  // b.any
  41c114:	mov	w0, #0x1                   	// #1
  41c118:	strb	w0, [sp, #75]
  41c11c:	nop
  41c120:	ldrb	w0, [sp, #75]
  41c124:	cmp	w0, #0x0
  41c128:	b.eq	41c1b0 <forward_syslog_iovec+0x368>  // b.none
  41c12c:	ldr	x1, [sp, #32]
  41c130:	add	x0, sp, #0x70
  41c134:	ldr	x2, [x1]
  41c138:	str	x2, [x0]
  41c13c:	ldr	w1, [x1, #8]
  41c140:	str	w1, [x0, #8]
  41c144:	bl	405e20 <getpid_cached@plt>
  41c148:	str	w0, [sp, #112]
  41c14c:	ldr	x0, [sp, #88]
  41c150:	add	x0, x0, #0x10
  41c154:	mov	x1, x0
  41c158:	add	x0, sp, #0x70
  41c15c:	ldr	x2, [x0]
  41c160:	str	x2, [x1]
  41c164:	ldr	w0, [x0, #8]
  41c168:	str	w0, [x1, #8]
  41c16c:	ldr	x0, [sp, #56]
  41c170:	ldr	w0, [x0]
  41c174:	add	x1, sp, #0x80
  41c178:	mov	w2, #0x4000                	// #16384
  41c17c:	bl	4069b0 <sendmsg@plt>
  41c180:	cmp	x0, #0x0
  41c184:	b.ge	41c248 <forward_syslog_iovec+0x400>  // b.tcont
  41c188:	bl	4062e0 <__errno_location@plt>
  41c18c:	ldr	w0, [x0]
  41c190:	cmp	w0, #0xb
  41c194:	b.ne	41c1b0 <forward_syslog_iovec+0x368>  // b.any
  41c198:	ldr	x0, [sp, #56]
  41c19c:	ldr	w0, [x0, #464]
  41c1a0:	add	w1, w0, #0x1
  41c1a4:	ldr	x0, [sp, #56]
  41c1a8:	str	w1, [x0, #464]
  41c1ac:	b	41c24c <forward_syslog_iovec+0x404>
  41c1b0:	bl	4062e0 <__errno_location@plt>
  41c1b4:	ldr	w0, [x0]
  41c1b8:	cmp	w0, #0x2
  41c1bc:	b.eq	41c24c <forward_syslog_iovec+0x404>  // b.none
  41c1c0:	mov	w0, #0x7                   	// #7
  41c1c4:	str	w0, [sp, #76]
  41c1c8:	bl	4062e0 <__errno_location@plt>
  41c1cc:	ldr	w0, [x0]
  41c1d0:	str	w0, [sp, #80]
  41c1d4:	str	wzr, [sp, #84]
  41c1d8:	ldr	w0, [sp, #84]
  41c1dc:	bl	406c30 <log_get_max_level_realm@plt>
  41c1e0:	mov	w1, w0
  41c1e4:	ldr	w0, [sp, #76]
  41c1e8:	and	w0, w0, #0x7
  41c1ec:	cmp	w1, w0
  41c1f0:	b.lt	41c234 <forward_syslog_iovec+0x3ec>  // b.tstop
  41c1f4:	ldr	w0, [sp, #84]
  41c1f8:	lsl	w1, w0, #10
  41c1fc:	ldr	w0, [sp, #76]
  41c200:	orr	w6, w1, w0
  41c204:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c208:	add	x1, x0, #0x823
  41c20c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c210:	add	x5, x0, #0x888
  41c214:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c218:	add	x4, x0, #0xdb8
  41c21c:	mov	w3, #0x62                  	// #98
  41c220:	mov	x2, x1
  41c224:	ldr	w1, [sp, #80]
  41c228:	mov	w0, w6
  41c22c:	bl	406590 <log_internal_realm@plt>
  41c230:	b	41c24c <forward_syslog_iovec+0x404>
  41c234:	ldr	w0, [sp, #80]
  41c238:	cmp	w0, #0x0
  41c23c:	b	41c24c <forward_syslog_iovec+0x404>
  41c240:	nop
  41c244:	b	41c24c <forward_syslog_iovec+0x404>
  41c248:	nop
  41c24c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41c250:	ldr	x0, [x0, #4064]
  41c254:	ldr	x1, [sp, #216]
  41c258:	ldr	x0, [x0]
  41c25c:	eor	x0, x1, x0
  41c260:	cmp	x0, #0x0
  41c264:	b.eq	41c26c <forward_syslog_iovec+0x424>  // b.none
  41c268:	bl	4063e0 <__stack_chk_fail@plt>
  41c26c:	ldp	x29, x30, [sp], #224
  41c270:	ret

000000000041c274 <forward_syslog_raw>:
  41c274:	stp	x29, x30, [sp, #-96]!
  41c278:	mov	x29, sp
  41c27c:	str	x0, [sp, #56]
  41c280:	str	w1, [sp, #52]
  41c284:	str	x2, [sp, #40]
  41c288:	str	x3, [sp, #32]
  41c28c:	str	x4, [sp, #24]
  41c290:	str	x5, [sp, #16]
  41c294:	adrp	x0, 441000 <wordlist.9471+0x208>
  41c298:	ldr	x0, [x0, #4064]
  41c29c:	ldr	x1, [x0]
  41c2a0:	str	x1, [sp, #88]
  41c2a4:	mov	x1, #0x0                   	// #0
  41c2a8:	ldr	x0, [sp, #56]
  41c2ac:	cmp	x0, #0x0
  41c2b0:	cset	w0, eq  // eq = none
  41c2b4:	and	w0, w0, #0xff
  41c2b8:	and	x0, x0, #0xff
  41c2bc:	cmp	x0, #0x0
  41c2c0:	b.eq	41c2ec <forward_syslog_raw+0x78>  // b.none
  41c2c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c2c8:	add	x1, x0, #0x823
  41c2cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c2d0:	add	x4, x0, #0xdd0
  41c2d4:	mov	w3, #0x68                  	// #104
  41c2d8:	mov	x2, x1
  41c2dc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c2e0:	add	x1, x0, #0x868
  41c2e4:	mov	w0, #0x0                   	// #0
  41c2e8:	bl	405fd0 <log_assert_failed_realm@plt>
  41c2ec:	ldr	x0, [sp, #40]
  41c2f0:	cmp	x0, #0x0
  41c2f4:	cset	w0, eq  // eq = none
  41c2f8:	and	w0, w0, #0xff
  41c2fc:	and	x0, x0, #0xff
  41c300:	cmp	x0, #0x0
  41c304:	b.eq	41c330 <forward_syslog_raw+0xbc>  // b.none
  41c308:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c30c:	add	x1, x0, #0x823
  41c310:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c314:	add	x4, x0, #0xdd0
  41c318:	mov	w3, #0x69                  	// #105
  41c31c:	mov	x2, x1
  41c320:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c324:	add	x1, x0, #0x8b0
  41c328:	mov	w0, #0x0                   	// #0
  41c32c:	bl	405fd0 <log_assert_failed_realm@plt>
  41c330:	ldr	w0, [sp, #52]
  41c334:	and	w1, w0, #0x7
  41c338:	ldr	x0, [sp, #56]
  41c33c:	ldr	w0, [x0, #540]
  41c340:	cmp	w1, w0
  41c344:	b.le	41c34c <forward_syslog_raw+0xd8>
  41c348:	b	41c378 <forward_syslog_raw+0x104>
  41c34c:	ldr	x0, [sp, #40]
  41c350:	str	x0, [sp, #72]
  41c354:	ldr	x0, [sp, #32]
  41c358:	str	x0, [sp, #80]
  41c35c:	add	x0, sp, #0x48
  41c360:	ldr	x4, [sp, #16]
  41c364:	ldr	x3, [sp, #24]
  41c368:	mov	w2, #0x1                   	// #1
  41c36c:	mov	x1, x0
  41c370:	ldr	x0, [sp, #56]
  41c374:	bl	41be48 <forward_syslog_iovec>
  41c378:	adrp	x0, 441000 <wordlist.9471+0x208>
  41c37c:	ldr	x0, [x0, #4064]
  41c380:	ldr	x1, [sp, #88]
  41c384:	ldr	x0, [x0]
  41c388:	eor	x0, x1, x0
  41c38c:	cmp	x0, #0x0
  41c390:	b.eq	41c398 <forward_syslog_raw+0x124>  // b.none
  41c394:	bl	4063e0 <__stack_chk_fail@plt>
  41c398:	ldp	x29, x30, [sp], #96
  41c39c:	ret

000000000041c3a0 <server_forward_syslog>:
  41c3a0:	stp	x29, x30, [sp, #-352]!
  41c3a4:	mov	x29, sp
  41c3a8:	str	x19, [sp, #16]
  41c3ac:	str	x0, [sp, #72]
  41c3b0:	str	w1, [sp, #68]
  41c3b4:	str	x2, [sp, #56]
  41c3b8:	str	x3, [sp, #48]
  41c3bc:	str	x4, [sp, #40]
  41c3c0:	str	x5, [sp, #32]
  41c3c4:	adrp	x0, 441000 <wordlist.9471+0x208>
  41c3c8:	ldr	x0, [x0, #4064]
  41c3cc:	ldr	x1, [x0]
  41c3d0:	str	x1, [sp, #344]
  41c3d4:	mov	x1, #0x0                   	// #0
  41c3d8:	str	wzr, [sp, #84]
  41c3dc:	str	xzr, [sp, #96]
  41c3e0:	ldr	x0, [sp, #72]
  41c3e4:	cmp	x0, #0x0
  41c3e8:	cset	w0, eq  // eq = none
  41c3ec:	and	w0, w0, #0xff
  41c3f0:	and	x0, x0, #0xff
  41c3f4:	cmp	x0, #0x0
  41c3f8:	b.eq	41c424 <server_forward_syslog+0x84>  // b.none
  41c3fc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c400:	add	x1, x0, #0x823
  41c404:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c408:	add	x4, x0, #0xde8
  41c40c:	mov	w3, #0x7b                  	// #123
  41c410:	mov	x2, x1
  41c414:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c418:	add	x1, x0, #0x868
  41c41c:	mov	w0, #0x0                   	// #0
  41c420:	bl	405fd0 <log_assert_failed_realm@plt>
  41c424:	ldr	w0, [sp, #68]
  41c428:	lsr	w0, w0, #31
  41c42c:	and	w0, w0, #0xff
  41c430:	and	x0, x0, #0xff
  41c434:	cmp	x0, #0x0
  41c438:	b.eq	41c464 <server_forward_syslog+0xc4>  // b.none
  41c43c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c440:	add	x1, x0, #0x823
  41c444:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c448:	add	x4, x0, #0xde8
  41c44c:	mov	w3, #0x7c                  	// #124
  41c450:	mov	x2, x1
  41c454:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c458:	add	x1, x0, #0x8b8
  41c45c:	mov	w0, #0x0                   	// #0
  41c460:	bl	405fd0 <log_assert_failed_realm@plt>
  41c464:	ldr	w0, [sp, #68]
  41c468:	cmp	w0, #0x3e7
  41c46c:	cset	w0, gt
  41c470:	and	w0, w0, #0xff
  41c474:	and	x0, x0, #0xff
  41c478:	cmp	x0, #0x0
  41c47c:	b.eq	41c4a8 <server_forward_syslog+0x108>  // b.none
  41c480:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c484:	add	x1, x0, #0x823
  41c488:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c48c:	add	x4, x0, #0xde8
  41c490:	mov	w3, #0x7d                  	// #125
  41c494:	mov	x2, x1
  41c498:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c49c:	add	x1, x0, #0x8c8
  41c4a0:	mov	w0, #0x0                   	// #0
  41c4a4:	bl	405fd0 <log_assert_failed_realm@plt>
  41c4a8:	ldr	x0, [sp, #48]
  41c4ac:	cmp	x0, #0x0
  41c4b0:	cset	w0, eq  // eq = none
  41c4b4:	and	w0, w0, #0xff
  41c4b8:	and	x0, x0, #0xff
  41c4bc:	cmp	x0, #0x0
  41c4c0:	b.eq	41c4ec <server_forward_syslog+0x14c>  // b.none
  41c4c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c4c8:	add	x1, x0, #0x823
  41c4cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c4d0:	add	x4, x0, #0xde8
  41c4d4:	mov	w3, #0x7e                  	// #126
  41c4d8:	mov	x2, x1
  41c4dc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c4e0:	add	x1, x0, #0x8d8
  41c4e4:	mov	w0, #0x0                   	// #0
  41c4e8:	bl	405fd0 <log_assert_failed_realm@plt>
  41c4ec:	ldr	w0, [sp, #68]
  41c4f0:	and	w1, w0, #0x7
  41c4f4:	ldr	x0, [sp, #72]
  41c4f8:	ldr	w0, [x0, #540]
  41c4fc:	cmp	w1, w0
  41c500:	b.le	41c50c <server_forward_syslog+0x16c>
  41c504:	mov	w19, #0x0                   	// #0
  41c508:	b	41c868 <server_forward_syslog+0x4c8>
  41c50c:	add	x4, sp, #0xf0
  41c510:	ldr	w3, [sp, #68]
  41c514:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c518:	add	x2, x0, #0x8e0
  41c51c:	mov	x1, #0xf                   	// #15
  41c520:	mov	x0, x4
  41c524:	bl	405de0 <snprintf@plt>
  41c528:	cmp	w0, #0xe
  41c52c:	cset	w0, hi  // hi = pmore
  41c530:	and	w0, w0, #0xff
  41c534:	and	x0, x0, #0xff
  41c538:	cmp	x0, #0x0
  41c53c:	b.eq	41c568 <server_forward_syslog+0x1c8>  // b.none
  41c540:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c544:	add	x1, x0, #0x823
  41c548:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c54c:	add	x4, x0, #0xde8
  41c550:	mov	w3, #0x84                  	// #132
  41c554:	mov	x2, x1
  41c558:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c55c:	add	x1, x0, #0x8e8
  41c560:	mov	w0, #0x0                   	// #0
  41c564:	bl	405fd0 <log_assert_failed_realm@plt>
  41c568:	ldr	w19, [sp, #84]
  41c56c:	add	w0, w19, #0x1
  41c570:	str	w0, [sp, #84]
  41c574:	add	x0, sp, #0xf0
  41c578:	bl	406af0 <strlen@plt>
  41c57c:	mov	x3, x0
  41c580:	sxtw	x0, w19
  41c584:	lsl	x0, x0, #4
  41c588:	add	x1, sp, #0xa0
  41c58c:	add	x2, sp, #0xf0
  41c590:	str	x2, [x1, x0]
  41c594:	sxtw	x0, w19
  41c598:	lsl	x0, x0, #4
  41c59c:	add	x1, sp, #0xa8
  41c5a0:	str	x3, [x1, x0]
  41c5a4:	ldr	x0, [sp, #32]
  41c5a8:	cmp	x0, #0x0
  41c5ac:	b.eq	41c5bc <server_forward_syslog+0x21c>  // b.none
  41c5b0:	ldr	x0, [sp, #32]
  41c5b4:	ldr	x0, [x0]
  41c5b8:	b	41c5e0 <server_forward_syslog+0x240>
  41c5bc:	mov	w0, #0x0                   	// #0
  41c5c0:	bl	406660 <now@plt>
  41c5c4:	mov	x1, x0
  41c5c8:	mov	x0, #0x34db                	// #13531
  41c5cc:	movk	x0, #0xd7b6, lsl #16
  41c5d0:	movk	x0, #0xde82, lsl #32
  41c5d4:	movk	x0, #0x431b, lsl #48
  41c5d8:	umulh	x0, x1, x0
  41c5dc:	lsr	x0, x0, #18
  41c5e0:	str	x0, [sp, #88]
  41c5e4:	add	x1, sp, #0x68
  41c5e8:	add	x0, sp, #0x58
  41c5ec:	bl	405fc0 <localtime_r@plt>
  41c5f0:	cmp	x0, #0x0
  41c5f4:	b.ne	41c600 <server_forward_syslog+0x260>  // b.any
  41c5f8:	mov	w19, #0x0                   	// #0
  41c5fc:	b	41c868 <server_forward_syslog+0x4c8>
  41c600:	add	x0, sp, #0x68
  41c604:	add	x4, sp, #0x118
  41c608:	mov	x3, x0
  41c60c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c610:	add	x2, x0, #0x918
  41c614:	mov	x1, #0x40                  	// #64
  41c618:	mov	x0, x4
  41c61c:	bl	405f80 <strftime@plt>
  41c620:	cmp	x0, #0x0
  41c624:	b.ne	41c630 <server_forward_syslog+0x290>  // b.any
  41c628:	mov	w19, #0x0                   	// #0
  41c62c:	b	41c868 <server_forward_syslog+0x4c8>
  41c630:	ldr	w19, [sp, #84]
  41c634:	add	w0, w19, #0x1
  41c638:	str	w0, [sp, #84]
  41c63c:	add	x0, sp, #0x118
  41c640:	bl	406af0 <strlen@plt>
  41c644:	mov	x3, x0
  41c648:	sxtw	x0, w19
  41c64c:	lsl	x0, x0, #4
  41c650:	add	x1, sp, #0xa0
  41c654:	add	x2, sp, #0x118
  41c658:	str	x2, [x1, x0]
  41c65c:	sxtw	x0, w19
  41c660:	lsl	x0, x0, #4
  41c664:	add	x1, sp, #0xa8
  41c668:	str	x3, [x1, x0]
  41c66c:	ldr	x0, [sp, #40]
  41c670:	cmp	x0, #0x0
  41c674:	b.eq	41c788 <server_forward_syslog+0x3e8>  // b.none
  41c678:	ldr	x0, [sp, #56]
  41c67c:	cmp	x0, #0x0
  41c680:	b.ne	41c69c <server_forward_syslog+0x2fc>  // b.any
  41c684:	ldr	x0, [sp, #40]
  41c688:	ldr	w0, [x0]
  41c68c:	add	x1, sp, #0x60
  41c690:	bl	406280 <get_process_comm@plt>
  41c694:	ldr	x0, [sp, #96]
  41c698:	str	x0, [sp, #56]
  41c69c:	ldr	x0, [sp, #40]
  41c6a0:	ldr	w0, [x0]
  41c6a4:	add	x4, sp, #0x100
  41c6a8:	mov	w3, w0
  41c6ac:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c6b0:	add	x2, x0, #0x928
  41c6b4:	mov	x1, #0x11                  	// #17
  41c6b8:	mov	x0, x4
  41c6bc:	bl	405de0 <snprintf@plt>
  41c6c0:	cmp	w0, #0x10
  41c6c4:	cset	w0, hi  // hi = pmore
  41c6c8:	and	w0, w0, #0xff
  41c6cc:	and	x0, x0, #0xff
  41c6d0:	cmp	x0, #0x0
  41c6d4:	b.eq	41c700 <server_forward_syslog+0x360>  // b.none
  41c6d8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c6dc:	add	x1, x0, #0x823
  41c6e0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c6e4:	add	x4, x0, #0xde8
  41c6e8:	mov	w3, #0x96                  	// #150
  41c6ec:	mov	x2, x1
  41c6f0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c6f4:	add	x1, x0, #0x930
  41c6f8:	mov	w0, #0x0                   	// #0
  41c6fc:	bl	405fd0 <log_assert_failed_realm@plt>
  41c700:	ldr	x0, [sp, #56]
  41c704:	cmp	x0, #0x0
  41c708:	b.eq	41c748 <server_forward_syslog+0x3a8>  // b.none
  41c70c:	ldr	w19, [sp, #84]
  41c710:	add	w0, w19, #0x1
  41c714:	str	w0, [sp, #84]
  41c718:	ldr	x0, [sp, #56]
  41c71c:	bl	406af0 <strlen@plt>
  41c720:	mov	x3, x0
  41c724:	sxtw	x0, w19
  41c728:	lsl	x0, x0, #4
  41c72c:	add	x1, sp, #0xa0
  41c730:	ldr	x2, [sp, #56]
  41c734:	str	x2, [x1, x0]
  41c738:	sxtw	x0, w19
  41c73c:	lsl	x0, x0, #4
  41c740:	add	x1, sp, #0xa8
  41c744:	str	x3, [x1, x0]
  41c748:	ldr	w19, [sp, #84]
  41c74c:	add	w0, w19, #0x1
  41c750:	str	w0, [sp, #84]
  41c754:	add	x0, sp, #0x100
  41c758:	bl	406af0 <strlen@plt>
  41c75c:	mov	x3, x0
  41c760:	sxtw	x0, w19
  41c764:	lsl	x0, x0, #4
  41c768:	add	x1, sp, #0xa0
  41c76c:	add	x2, sp, #0x100
  41c770:	str	x2, [x1, x0]
  41c774:	sxtw	x0, w19
  41c778:	lsl	x0, x0, #4
  41c77c:	add	x1, sp, #0xa8
  41c780:	str	x3, [x1, x0]
  41c784:	b	41c808 <server_forward_syslog+0x468>
  41c788:	ldr	x0, [sp, #56]
  41c78c:	cmp	x0, #0x0
  41c790:	b.eq	41c808 <server_forward_syslog+0x468>  // b.none
  41c794:	ldr	w19, [sp, #84]
  41c798:	add	w0, w19, #0x1
  41c79c:	str	w0, [sp, #84]
  41c7a0:	ldr	x0, [sp, #56]
  41c7a4:	bl	406af0 <strlen@plt>
  41c7a8:	mov	x3, x0
  41c7ac:	sxtw	x0, w19
  41c7b0:	lsl	x0, x0, #4
  41c7b4:	add	x1, sp, #0xa0
  41c7b8:	ldr	x2, [sp, #56]
  41c7bc:	str	x2, [x1, x0]
  41c7c0:	sxtw	x0, w19
  41c7c4:	lsl	x0, x0, #4
  41c7c8:	add	x1, sp, #0xa8
  41c7cc:	str	x3, [x1, x0]
  41c7d0:	ldr	w0, [sp, #84]
  41c7d4:	add	w1, w0, #0x1
  41c7d8:	str	w1, [sp, #84]
  41c7dc:	sxtw	x1, w0
  41c7e0:	lsl	x1, x1, #4
  41c7e4:	add	x2, sp, #0xa0
  41c7e8:	adrp	x3, 42b000 <__func__.15991+0x530>
  41c7ec:	add	x3, x3, #0x960
  41c7f0:	str	x3, [x2, x1]
  41c7f4:	sxtw	x0, w0
  41c7f8:	lsl	x0, x0, #4
  41c7fc:	add	x1, sp, #0xa8
  41c800:	mov	x2, #0x2                   	// #2
  41c804:	str	x2, [x1, x0]
  41c808:	ldr	w19, [sp, #84]
  41c80c:	add	w0, w19, #0x1
  41c810:	str	w0, [sp, #84]
  41c814:	ldr	x0, [sp, #48]
  41c818:	bl	406af0 <strlen@plt>
  41c81c:	mov	x3, x0
  41c820:	sxtw	x0, w19
  41c824:	lsl	x0, x0, #4
  41c828:	add	x1, sp, #0xa0
  41c82c:	ldr	x2, [sp, #48]
  41c830:	str	x2, [x1, x0]
  41c834:	sxtw	x0, w19
  41c838:	lsl	x0, x0, #4
  41c83c:	add	x1, sp, #0xa8
  41c840:	str	x3, [x1, x0]
  41c844:	ldr	w1, [sp, #84]
  41c848:	add	x0, sp, #0xa0
  41c84c:	ldr	x4, [sp, #32]
  41c850:	ldr	x3, [sp, #40]
  41c854:	mov	w2, w1
  41c858:	mov	x1, x0
  41c85c:	ldr	x0, [sp, #72]
  41c860:	bl	41be48 <forward_syslog_iovec>
  41c864:	mov	w19, #0x1                   	// #1
  41c868:	add	x0, sp, #0x60
  41c86c:	bl	41bc54 <freep>
  41c870:	cmp	w19, #0x1
  41c874:	b.ne	41c87c <server_forward_syslog+0x4dc>  // b.any
  41c878:	nop
  41c87c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41c880:	ldr	x0, [x0, #4064]
  41c884:	ldr	x1, [sp, #344]
  41c888:	ldr	x0, [x0]
  41c88c:	eor	x0, x1, x0
  41c890:	cmp	x0, #0x0
  41c894:	b.eq	41c89c <server_forward_syslog+0x4fc>  // b.none
  41c898:	bl	4063e0 <__stack_chk_fail@plt>
  41c89c:	ldr	x19, [sp, #16]
  41c8a0:	ldp	x29, x30, [sp], #352
  41c8a4:	ret

000000000041c8a8 <syslog_fixup_facility>:
  41c8a8:	sub	sp, sp, #0x10
  41c8ac:	str	w0, [sp, #12]
  41c8b0:	ldr	w0, [sp, #12]
  41c8b4:	and	w0, w0, #0x3f8
  41c8b8:	cmp	w0, #0x0
  41c8bc:	b.ne	41c8d0 <syslog_fixup_facility+0x28>  // b.any
  41c8c0:	ldr	w0, [sp, #12]
  41c8c4:	and	w0, w0, #0x7
  41c8c8:	orr	w0, w0, #0x8
  41c8cc:	b	41c8d4 <syslog_fixup_facility+0x2c>
  41c8d0:	ldr	w0, [sp, #12]
  41c8d4:	add	sp, sp, #0x10
  41c8d8:	ret

000000000041c8dc <syslog_parse_identifier>:
  41c8dc:	stp	x29, x30, [sp, #-96]!
  41c8e0:	mov	x29, sp
  41c8e4:	str	x0, [sp, #40]
  41c8e8:	str	x1, [sp, #32]
  41c8ec:	str	x2, [sp, #24]
  41c8f0:	ldr	x0, [sp, #40]
  41c8f4:	cmp	x0, #0x0
  41c8f8:	cset	w0, eq  // eq = none
  41c8fc:	and	w0, w0, #0xff
  41c900:	and	x0, x0, #0xff
  41c904:	cmp	x0, #0x0
  41c908:	b.eq	41c934 <syslog_parse_identifier+0x58>  // b.none
  41c90c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c910:	add	x1, x0, #0x823
  41c914:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c918:	add	x4, x0, #0xe00
  41c91c:	mov	w3, #0xb4                  	// #180
  41c920:	mov	x2, x1
  41c924:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c928:	add	x1, x0, #0x968
  41c92c:	mov	w0, #0x0                   	// #0
  41c930:	bl	405fd0 <log_assert_failed_realm@plt>
  41c934:	ldr	x0, [sp, #32]
  41c938:	cmp	x0, #0x0
  41c93c:	cset	w0, eq  // eq = none
  41c940:	and	w0, w0, #0xff
  41c944:	and	x0, x0, #0xff
  41c948:	cmp	x0, #0x0
  41c94c:	b.eq	41c978 <syslog_parse_identifier+0x9c>  // b.none
  41c950:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c954:	add	x1, x0, #0x823
  41c958:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c95c:	add	x4, x0, #0xe00
  41c960:	mov	w3, #0xb5                  	// #181
  41c964:	mov	x2, x1
  41c968:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c96c:	add	x1, x0, #0x970
  41c970:	mov	w0, #0x0                   	// #0
  41c974:	bl	405fd0 <log_assert_failed_realm@plt>
  41c978:	ldr	x0, [sp, #24]
  41c97c:	cmp	x0, #0x0
  41c980:	cset	w0, eq  // eq = none
  41c984:	and	w0, w0, #0xff
  41c988:	and	x0, x0, #0xff
  41c98c:	cmp	x0, #0x0
  41c990:	b.eq	41c9bc <syslog_parse_identifier+0xe0>  // b.none
  41c994:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c998:	add	x1, x0, #0x823
  41c99c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c9a0:	add	x4, x0, #0xe00
  41c9a4:	mov	w3, #0xb6                  	// #182
  41c9a8:	mov	x2, x1
  41c9ac:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c9b0:	add	x1, x0, #0x980
  41c9b4:	mov	w0, #0x0                   	// #0
  41c9b8:	bl	405fd0 <log_assert_failed_realm@plt>
  41c9bc:	ldr	x0, [sp, #40]
  41c9c0:	ldr	x0, [x0]
  41c9c4:	str	x0, [sp, #80]
  41c9c8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c9cc:	add	x1, x0, #0x988
  41c9d0:	ldr	x0, [sp, #80]
  41c9d4:	bl	4061d0 <strspn@plt>
  41c9d8:	mov	x1, x0
  41c9dc:	ldr	x0, [sp, #80]
  41c9e0:	add	x0, x0, x1
  41c9e4:	str	x0, [sp, #80]
  41c9e8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41c9ec:	add	x1, x0, #0x988
  41c9f0:	ldr	x0, [sp, #80]
  41c9f4:	bl	405b90 <strcspn@plt>
  41c9f8:	str	x0, [sp, #56]
  41c9fc:	ldr	x0, [sp, #56]
  41ca00:	cmp	x0, #0x0
  41ca04:	b.eq	41ca24 <syslog_parse_identifier+0x148>  // b.none
  41ca08:	ldr	x0, [sp, #56]
  41ca0c:	sub	x0, x0, #0x1
  41ca10:	ldr	x1, [sp, #80]
  41ca14:	add	x0, x1, x0
  41ca18:	ldrb	w0, [x0]
  41ca1c:	cmp	w0, #0x3a
  41ca20:	b.eq	41ca2c <syslog_parse_identifier+0x150>  // b.none
  41ca24:	mov	x0, #0x0                   	// #0
  41ca28:	b	41cbac <syslog_parse_identifier+0x2d0>
  41ca2c:	ldr	x0, [sp, #56]
  41ca30:	str	x0, [sp, #64]
  41ca34:	ldr	x0, [sp, #56]
  41ca38:	sub	x0, x0, #0x1
  41ca3c:	str	x0, [sp, #56]
  41ca40:	ldr	x0, [sp, #56]
  41ca44:	cmp	x0, #0x0
  41ca48:	b.eq	41cb00 <syslog_parse_identifier+0x224>  // b.none
  41ca4c:	ldr	x0, [sp, #56]
  41ca50:	sub	x0, x0, #0x1
  41ca54:	ldr	x1, [sp, #80]
  41ca58:	add	x0, x1, x0
  41ca5c:	ldrb	w0, [x0]
  41ca60:	cmp	w0, #0x5d
  41ca64:	b.ne	41cb00 <syslog_parse_identifier+0x224>  // b.any
  41ca68:	ldr	x0, [sp, #56]
  41ca6c:	sub	x0, x0, #0x1
  41ca70:	str	x0, [sp, #72]
  41ca74:	ldr	x1, [sp, #80]
  41ca78:	ldr	x0, [sp, #72]
  41ca7c:	add	x0, x1, x0
  41ca80:	ldrb	w0, [x0]
  41ca84:	cmp	w0, #0x5b
  41ca88:	b.ne	41cae0 <syslog_parse_identifier+0x204>  // b.any
  41ca8c:	ldr	x0, [sp, #72]
  41ca90:	add	x0, x0, #0x1
  41ca94:	ldr	x1, [sp, #80]
  41ca98:	add	x2, x1, x0
  41ca9c:	ldr	x1, [sp, #56]
  41caa0:	ldr	x0, [sp, #72]
  41caa4:	sub	x0, x1, x0
  41caa8:	sub	x0, x0, #0x2
  41caac:	mov	x1, x0
  41cab0:	mov	x0, x2
  41cab4:	bl	4063a0 <strndup@plt>
  41cab8:	str	x0, [sp, #88]
  41cabc:	ldr	x0, [sp, #88]
  41cac0:	cmp	x0, #0x0
  41cac4:	b.eq	41cad4 <syslog_parse_identifier+0x1f8>  // b.none
  41cac8:	ldr	x0, [sp, #24]
  41cacc:	ldr	x1, [sp, #88]
  41cad0:	str	x1, [x0]
  41cad4:	ldr	x0, [sp, #72]
  41cad8:	str	x0, [sp, #56]
  41cadc:	b	41cb00 <syslog_parse_identifier+0x224>
  41cae0:	ldr	x0, [sp, #72]
  41cae4:	cmp	x0, #0x0
  41cae8:	b.eq	41cafc <syslog_parse_identifier+0x220>  // b.none
  41caec:	ldr	x0, [sp, #72]
  41caf0:	sub	x0, x0, #0x1
  41caf4:	str	x0, [sp, #72]
  41caf8:	b	41ca74 <syslog_parse_identifier+0x198>
  41cafc:	nop
  41cb00:	ldr	x1, [sp, #56]
  41cb04:	ldr	x0, [sp, #80]
  41cb08:	bl	4063a0 <strndup@plt>
  41cb0c:	str	x0, [sp, #88]
  41cb10:	ldr	x0, [sp, #88]
  41cb14:	cmp	x0, #0x0
  41cb18:	b.eq	41cb28 <syslog_parse_identifier+0x24c>  // b.none
  41cb1c:	ldr	x0, [sp, #32]
  41cb20:	ldr	x1, [sp, #88]
  41cb24:	str	x1, [x0]
  41cb28:	ldr	x1, [sp, #80]
  41cb2c:	ldr	x0, [sp, #64]
  41cb30:	add	x0, x1, x0
  41cb34:	ldrb	w0, [x0]
  41cb38:	cmp	w0, #0x0
  41cb3c:	b.eq	41cb74 <syslog_parse_identifier+0x298>  // b.none
  41cb40:	ldr	x1, [sp, #80]
  41cb44:	ldr	x0, [sp, #64]
  41cb48:	add	x0, x1, x0
  41cb4c:	ldrb	w0, [x0]
  41cb50:	mov	w1, w0
  41cb54:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cb58:	add	x0, x0, #0x988
  41cb5c:	bl	406800 <strchr@plt>
  41cb60:	cmp	x0, #0x0
  41cb64:	b.eq	41cb74 <syslog_parse_identifier+0x298>  // b.none
  41cb68:	ldr	x0, [sp, #64]
  41cb6c:	add	x0, x0, #0x1
  41cb70:	str	x0, [sp, #64]
  41cb74:	ldr	x0, [sp, #40]
  41cb78:	ldr	x0, [x0]
  41cb7c:	ldr	x1, [sp, #80]
  41cb80:	sub	x0, x1, x0
  41cb84:	mov	x1, x0
  41cb88:	ldr	x0, [sp, #64]
  41cb8c:	add	x0, x0, x1
  41cb90:	str	x0, [sp, #56]
  41cb94:	ldr	x1, [sp, #80]
  41cb98:	ldr	x0, [sp, #64]
  41cb9c:	add	x1, x1, x0
  41cba0:	ldr	x0, [sp, #40]
  41cba4:	str	x1, [x0]
  41cba8:	ldr	x0, [sp, #56]
  41cbac:	ldp	x29, x30, [sp], #96
  41cbb0:	ret

000000000041cbb4 <syslog_skip_timestamp>:
  41cbb4:	stp	x29, x30, [sp, #-128]!
  41cbb8:	mov	x29, sp
  41cbbc:	str	x0, [sp, #24]
  41cbc0:	adrp	x0, 441000 <wordlist.9471+0x208>
  41cbc4:	ldr	x0, [x0, #4064]
  41cbc8:	ldr	x1, [x0]
  41cbcc:	str	x1, [sp, #120]
  41cbd0:	mov	x1, #0x0                   	// #0
  41cbd4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cbd8:	add	x1, x0, #0x998
  41cbdc:	add	x0, sp, #0x38
  41cbe0:	ldp	x2, x3, [x1]
  41cbe4:	stp	x2, x3, [x0]
  41cbe8:	ldp	x2, x3, [x1, #16]
  41cbec:	stp	x2, x3, [x0, #16]
  41cbf0:	ldp	x2, x3, [x1, #32]
  41cbf4:	stp	x2, x3, [x0, #32]
  41cbf8:	ldp	x2, x3, [x1, #48]
  41cbfc:	stp	x2, x3, [x0, #48]
  41cc00:	ldr	x0, [sp, #24]
  41cc04:	cmp	x0, #0x0
  41cc08:	cset	w0, eq  // eq = none
  41cc0c:	and	w0, w0, #0xff
  41cc10:	and	x0, x0, #0xff
  41cc14:	cmp	x0, #0x0
  41cc18:	b.eq	41cc44 <syslog_skip_timestamp+0x90>  // b.none
  41cc1c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc20:	add	x1, x0, #0x823
  41cc24:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc28:	add	x4, x0, #0xe18
  41cc2c:	mov	w3, #0xfd                  	// #253
  41cc30:	mov	x2, x1
  41cc34:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc38:	add	x1, x0, #0x968
  41cc3c:	mov	w0, #0x0                   	// #0
  41cc40:	bl	405fd0 <log_assert_failed_realm@plt>
  41cc44:	ldr	x0, [sp, #24]
  41cc48:	ldr	x0, [x0]
  41cc4c:	cmp	x0, #0x0
  41cc50:	cset	w0, eq  // eq = none
  41cc54:	and	w0, w0, #0xff
  41cc58:	and	x0, x0, #0xff
  41cc5c:	cmp	x0, #0x0
  41cc60:	b.eq	41cc8c <syslog_skip_timestamp+0xd8>  // b.none
  41cc64:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc68:	add	x1, x0, #0x823
  41cc6c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc70:	add	x4, x0, #0xe18
  41cc74:	mov	w3, #0xfe                  	// #254
  41cc78:	mov	x2, x1
  41cc7c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cc80:	add	x1, x0, #0x990
  41cc84:	mov	w0, #0x0                   	// #0
  41cc88:	bl	405fd0 <log_assert_failed_realm@plt>
  41cc8c:	str	wzr, [sp, #36]
  41cc90:	ldr	x0, [sp, #24]
  41cc94:	ldr	x0, [x0]
  41cc98:	str	x0, [sp, #40]
  41cc9c:	b	41cdf4 <syslog_skip_timestamp+0x240>
  41cca0:	ldr	x0, [sp, #40]
  41cca4:	ldrb	w0, [x0]
  41cca8:	cmp	w0, #0x0
  41ccac:	b.ne	41ccb8 <syslog_skip_timestamp+0x104>  // b.any
  41ccb0:	mov	w0, #0x0                   	// #0
  41ccb4:	b	41ce24 <syslog_skip_timestamp+0x270>
  41ccb8:	ldr	w0, [sp, #36]
  41ccbc:	lsl	x0, x0, #2
  41ccc0:	add	x1, sp, #0x38
  41ccc4:	ldr	w0, [x1, x0]
  41ccc8:	cmp	w0, #0x4
  41cccc:	b.eq	41cda0 <syslog_skip_timestamp+0x1ec>  // b.none
  41ccd0:	cmp	w0, #0x4
  41ccd4:	b.hi	41cddc <syslog_skip_timestamp+0x228>  // b.pmore
  41ccd8:	cmp	w0, #0x3
  41ccdc:	b.eq	41cd20 <syslog_skip_timestamp+0x16c>  // b.none
  41cce0:	cmp	w0, #0x3
  41cce4:	b.hi	41cddc <syslog_skip_timestamp+0x228>  // b.pmore
  41cce8:	cmp	w0, #0x2
  41ccec:	b.eq	41cd30 <syslog_skip_timestamp+0x17c>  // b.none
  41ccf0:	cmp	w0, #0x2
  41ccf4:	b.hi	41cddc <syslog_skip_timestamp+0x228>  // b.pmore
  41ccf8:	cmp	w0, #0x0
  41ccfc:	b.eq	41cd58 <syslog_skip_timestamp+0x1a4>  // b.none
  41cd00:	cmp	w0, #0x1
  41cd04:	b.ne	41cddc <syslog_skip_timestamp+0x228>  // b.any
  41cd08:	ldr	x0, [sp, #40]
  41cd0c:	ldrb	w0, [x0]
  41cd10:	cmp	w0, #0x20
  41cd14:	b.eq	41cdb8 <syslog_skip_timestamp+0x204>  // b.none
  41cd18:	mov	w0, #0x0                   	// #0
  41cd1c:	b	41ce24 <syslog_skip_timestamp+0x270>
  41cd20:	ldr	x0, [sp, #40]
  41cd24:	ldrb	w0, [x0]
  41cd28:	cmp	w0, #0x20
  41cd2c:	b.eq	41cdc0 <syslog_skip_timestamp+0x20c>  // b.none
  41cd30:	ldr	x0, [sp, #40]
  41cd34:	ldrb	w0, [x0]
  41cd38:	cmp	w0, #0x2f
  41cd3c:	b.ls	41cd50 <syslog_skip_timestamp+0x19c>  // b.plast
  41cd40:	ldr	x0, [sp, #40]
  41cd44:	ldrb	w0, [x0]
  41cd48:	cmp	w0, #0x39
  41cd4c:	b.ls	41cdc8 <syslog_skip_timestamp+0x214>  // b.plast
  41cd50:	mov	w0, #0x0                   	// #0
  41cd54:	b	41ce24 <syslog_skip_timestamp+0x270>
  41cd58:	ldr	x0, [sp, #40]
  41cd5c:	ldrb	w0, [x0]
  41cd60:	cmp	w0, #0x40
  41cd64:	b.ls	41cd78 <syslog_skip_timestamp+0x1c4>  // b.plast
  41cd68:	ldr	x0, [sp, #40]
  41cd6c:	ldrb	w0, [x0]
  41cd70:	cmp	w0, #0x5a
  41cd74:	b.ls	41cdd0 <syslog_skip_timestamp+0x21c>  // b.plast
  41cd78:	ldr	x0, [sp, #40]
  41cd7c:	ldrb	w0, [x0]
  41cd80:	cmp	w0, #0x60
  41cd84:	b.ls	41cd98 <syslog_skip_timestamp+0x1e4>  // b.plast
  41cd88:	ldr	x0, [sp, #40]
  41cd8c:	ldrb	w0, [x0]
  41cd90:	cmp	w0, #0x7a
  41cd94:	b.ls	41cdd0 <syslog_skip_timestamp+0x21c>  // b.plast
  41cd98:	mov	w0, #0x0                   	// #0
  41cd9c:	b	41ce24 <syslog_skip_timestamp+0x270>
  41cda0:	ldr	x0, [sp, #40]
  41cda4:	ldrb	w0, [x0]
  41cda8:	cmp	w0, #0x3a
  41cdac:	b.eq	41cdd8 <syslog_skip_timestamp+0x224>  // b.none
  41cdb0:	mov	w0, #0x0                   	// #0
  41cdb4:	b	41ce24 <syslog_skip_timestamp+0x270>
  41cdb8:	nop
  41cdbc:	b	41cddc <syslog_skip_timestamp+0x228>
  41cdc0:	nop
  41cdc4:	b	41cddc <syslog_skip_timestamp+0x228>
  41cdc8:	nop
  41cdcc:	b	41cddc <syslog_skip_timestamp+0x228>
  41cdd0:	nop
  41cdd4:	b	41cddc <syslog_skip_timestamp+0x228>
  41cdd8:	nop
  41cddc:	ldr	w0, [sp, #36]
  41cde0:	add	w0, w0, #0x1
  41cde4:	str	w0, [sp, #36]
  41cde8:	ldr	x0, [sp, #40]
  41cdec:	add	x0, x0, #0x1
  41cdf0:	str	x0, [sp, #40]
  41cdf4:	ldr	w0, [sp, #36]
  41cdf8:	cmp	w0, #0xf
  41cdfc:	b.ls	41cca0 <syslog_skip_timestamp+0xec>  // b.plast
  41ce00:	ldr	x0, [sp, #24]
  41ce04:	ldr	x0, [x0]
  41ce08:	str	x0, [sp, #48]
  41ce0c:	ldr	x0, [sp, #24]
  41ce10:	ldr	x1, [sp, #40]
  41ce14:	str	x1, [x0]
  41ce18:	ldr	x1, [sp, #40]
  41ce1c:	ldr	x0, [sp, #48]
  41ce20:	sub	x0, x1, x0
  41ce24:	mov	w1, w0
  41ce28:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ce2c:	ldr	x0, [x0, #4064]
  41ce30:	ldr	x2, [sp, #120]
  41ce34:	ldr	x0, [x0]
  41ce38:	eor	x0, x2, x0
  41ce3c:	cmp	x0, #0x0
  41ce40:	b.eq	41ce48 <syslog_skip_timestamp+0x294>  // b.none
  41ce44:	bl	4063e0 <__stack_chk_fail@plt>
  41ce48:	mov	w0, w1
  41ce4c:	ldp	x29, x30, [sp], #128
  41ce50:	ret

000000000041ce54 <server_process_syslog_message>:
  41ce54:	stp	x29, x30, [sp, #-448]!
  41ce58:	mov	x29, sp
  41ce5c:	stp	x19, x20, [sp, #16]
  41ce60:	str	x0, [x29, #88]
  41ce64:	str	x1, [x29, #80]
  41ce68:	str	x2, [x29, #72]
  41ce6c:	str	x3, [x29, #64]
  41ce70:	str	x4, [x29, #56]
  41ce74:	str	x5, [x29, #48]
  41ce78:	str	x6, [x29, #40]
  41ce7c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ce80:	ldr	x0, [x0, #4064]
  41ce84:	ldr	x1, [x0]
  41ce88:	str	x1, [x29, #440]
  41ce8c:	mov	x1, #0x0                   	// #0
  41ce90:	str	xzr, [x29, #136]
  41ce94:	str	xzr, [x29, #144]
  41ce98:	str	xzr, [x29, #152]
  41ce9c:	str	xzr, [x29, #160]
  41cea0:	str	xzr, [x29, #168]
  41cea4:	mov	w0, #0xe                   	// #14
  41cea8:	str	w0, [x29, #108]
  41ceac:	str	xzr, [x29, #176]
  41ceb0:	str	xzr, [x29, #184]
  41ceb4:	ldr	x0, [x29, #88]
  41ceb8:	cmp	x0, #0x0
  41cebc:	cset	w0, eq  // eq = none
  41cec0:	and	w0, w0, #0xff
  41cec4:	and	x0, x0, #0xff
  41cec8:	cmp	x0, #0x0
  41cecc:	b.eq	41cef8 <server_process_syslog_message+0xa4>  // b.none
  41ced0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ced4:	add	x1, x0, #0x823
  41ced8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cedc:	add	x4, x0, #0xe30
  41cee0:	mov	w3, #0x13e                 	// #318
  41cee4:	mov	x2, x1
  41cee8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ceec:	add	x1, x0, #0x868
  41cef0:	mov	w0, #0x0                   	// #0
  41cef4:	bl	405fd0 <log_assert_failed_realm@plt>
  41cef8:	ldr	x0, [x29, #80]
  41cefc:	cmp	x0, #0x0
  41cf00:	cset	w0, eq  // eq = none
  41cf04:	and	w0, w0, #0xff
  41cf08:	and	x0, x0, #0xff
  41cf0c:	cmp	x0, #0x0
  41cf10:	b.eq	41cf3c <server_process_syslog_message+0xe8>  // b.none
  41cf14:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf18:	add	x1, x0, #0x823
  41cf1c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf20:	add	x4, x0, #0xe30
  41cf24:	mov	w3, #0x13f                 	// #319
  41cf28:	mov	x2, x1
  41cf2c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf30:	add	x1, x0, #0x968
  41cf34:	mov	w0, #0x0                   	// #0
  41cf38:	bl	405fd0 <log_assert_failed_realm@plt>
  41cf3c:	ldr	x0, [x29, #72]
  41cf40:	cmp	x0, #0x0
  41cf44:	cset	w0, eq  // eq = none
  41cf48:	and	w0, w0, #0xff
  41cf4c:	and	x0, x0, #0xff
  41cf50:	cmp	x0, #0x0
  41cf54:	b.eq	41cf80 <server_process_syslog_message+0x12c>  // b.none
  41cf58:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf5c:	add	x1, x0, #0x823
  41cf60:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf64:	add	x4, x0, #0xe30
  41cf68:	mov	w3, #0x141                 	// #321
  41cf6c:	mov	x2, x1
  41cf70:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cf74:	add	x1, x0, #0x9d8
  41cf78:	mov	w0, #0x0                   	// #0
  41cf7c:	bl	405fd0 <log_assert_failed_realm@plt>
  41cf80:	ldr	x1, [x29, #80]
  41cf84:	ldr	x0, [x29, #72]
  41cf88:	add	x0, x1, x0
  41cf8c:	ldrb	w0, [x0]
  41cf90:	cmp	w0, #0x0
  41cf94:	cset	w0, ne  // ne = any
  41cf98:	and	w0, w0, #0xff
  41cf9c:	and	x0, x0, #0xff
  41cfa0:	cmp	x0, #0x0
  41cfa4:	b.eq	41cfd0 <server_process_syslog_message+0x17c>  // b.none
  41cfa8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cfac:	add	x1, x0, #0x823
  41cfb0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cfb4:	add	x4, x0, #0xe30
  41cfb8:	mov	w3, #0x144                 	// #324
  41cfbc:	mov	x2, x1
  41cfc0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41cfc4:	add	x1, x0, #0x9e8
  41cfc8:	mov	w0, #0x0                   	// #0
  41cfcc:	bl	405fd0 <log_assert_failed_realm@plt>
  41cfd0:	ldr	x0, [x29, #64]
  41cfd4:	cmp	x0, #0x0
  41cfd8:	b.eq	41d0b4 <server_process_syslog_message+0x260>  // b.none
  41cfdc:	ldr	x0, [x29, #64]
  41cfe0:	ldr	w0, [x0]
  41cfe4:	bl	41bdd0 <pid_is_valid>
  41cfe8:	and	w0, w0, #0xff
  41cfec:	cmp	w0, #0x0
  41cff0:	b.eq	41d0b4 <server_process_syslog_message+0x260>  // b.none
  41cff4:	ldr	x0, [x29, #64]
  41cff8:	ldr	w0, [x0]
  41cffc:	add	x1, x29, #0xb0
  41d000:	mov	x6, x1
  41d004:	mov	x5, #0x0                   	// #0
  41d008:	ldr	x4, [x29, #40]
  41d00c:	ldr	x3, [x29, #48]
  41d010:	ldr	x2, [x29, #64]
  41d014:	mov	w1, w0
  41d018:	ldr	x0, [x29, #88]
  41d01c:	bl	4241cc <client_context_get>
  41d020:	str	w0, [x29, #112]
  41d024:	ldr	w0, [x29, #112]
  41d028:	cmp	w0, #0x0
  41d02c:	b.ge	41d0b4 <server_process_syslog_message+0x260>  // b.tcont
  41d030:	mov	w0, #0x4                   	// #4
  41d034:	str	w0, [x29, #116]
  41d038:	ldr	w0, [x29, #112]
  41d03c:	str	w0, [x29, #120]
  41d040:	str	wzr, [x29, #124]
  41d044:	ldr	w0, [x29, #124]
  41d048:	bl	406c30 <log_get_max_level_realm@plt>
  41d04c:	mov	w1, w0
  41d050:	ldr	w0, [x29, #116]
  41d054:	and	w0, w0, #0x7
  41d058:	cmp	w1, w0
  41d05c:	b.lt	41d0ac <server_process_syslog_message+0x258>  // b.tstop
  41d060:	ldr	w0, [x29, #124]
  41d064:	lsl	w1, w0, #10
  41d068:	ldr	w0, [x29, #116]
  41d06c:	orr	w7, w1, w0
  41d070:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d074:	add	x1, x0, #0x823
  41d078:	ldr	x0, [x29, #64]
  41d07c:	ldr	w0, [x0]
  41d080:	mov	w6, w0
  41d084:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d088:	add	x5, x0, #0xa00
  41d08c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d090:	add	x4, x0, #0xe50
  41d094:	mov	w3, #0x149                 	// #329
  41d098:	mov	x2, x1
  41d09c:	ldr	w1, [x29, #120]
  41d0a0:	mov	w0, w7
  41d0a4:	bl	406590 <log_internal_realm@plt>
  41d0a8:	b	41d0b4 <server_process_syslog_message+0x260>
  41d0ac:	ldr	w0, [x29, #120]
  41d0b0:	cmp	w0, #0x0
  41d0b4:	ldr	x0, [x29, #72]
  41d0b8:	str	x0, [x29, #192]
  41d0bc:	b	41d0f8 <server_process_syslog_message+0x2a4>
  41d0c0:	ldr	x0, [x29, #192]
  41d0c4:	sub	x0, x0, #0x1
  41d0c8:	ldr	x1, [x29, #80]
  41d0cc:	add	x0, x1, x0
  41d0d0:	ldrb	w0, [x0]
  41d0d4:	mov	w1, w0
  41d0d8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d0dc:	add	x0, x0, #0x988
  41d0e0:	bl	406800 <strchr@plt>
  41d0e4:	cmp	x0, #0x0
  41d0e8:	b.eq	41d108 <server_process_syslog_message+0x2b4>  // b.none
  41d0ec:	ldr	x0, [x29, #192]
  41d0f0:	sub	x0, x0, #0x1
  41d0f4:	str	x0, [x29, #192]
  41d0f8:	ldr	x0, [x29, #192]
  41d0fc:	cmp	x0, #0x0
  41d100:	b.ne	41d0c0 <server_process_syslog_message+0x26c>  // b.any
  41d104:	b	41d10c <server_process_syslog_message+0x2b8>
  41d108:	nop
  41d10c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d110:	add	x1, x0, #0x988
  41d114:	ldr	x0, [x29, #80]
  41d118:	bl	4061d0 <strspn@plt>
  41d11c:	str	x0, [x29, #248]
  41d120:	ldr	x0, [x29, #192]
  41d124:	cmp	x0, #0x0
  41d128:	b.ne	41d140 <server_process_syslog_message+0x2ec>  // b.any
  41d12c:	ldr	x1, [x29, #80]
  41d130:	ldr	x0, [x29, #72]
  41d134:	add	x0, x1, x0
  41d138:	str	x0, [x29, #128]
  41d13c:	b	41d200 <server_process_syslog_message+0x3ac>
  41d140:	ldr	x1, [x29, #192]
  41d144:	ldr	x0, [x29, #72]
  41d148:	cmp	x1, x0
  41d14c:	b.ne	41d164 <server_process_syslog_message+0x310>  // b.any
  41d150:	ldr	x1, [x29, #80]
  41d154:	ldr	x0, [x29, #248]
  41d158:	add	x0, x1, x0
  41d15c:	str	x0, [x29, #128]
  41d160:	b	41d200 <server_process_syslog_message+0x3ac>
  41d164:	ldr	x1, [x29, #192]
  41d168:	ldr	x0, [x29, #248]
  41d16c:	sub	x0, x1, x0
  41d170:	add	x0, x0, #0x1
  41d174:	mov	x1, x0
  41d178:	mov	x0, #0x1                   	// #1
  41d17c:	bl	41bcf4 <malloc_multiply>
  41d180:	str	x0, [x29, #152]
  41d184:	ldr	x0, [x29, #152]
  41d188:	str	x0, [x29, #128]
  41d18c:	ldr	x0, [x29, #152]
  41d190:	cmp	x0, #0x0
  41d194:	b.ne	41d1bc <server_process_syslog_message+0x368>  // b.any
  41d198:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d19c:	add	x1, x0, #0x823
  41d1a0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d1a4:	add	x3, x0, #0xe50
  41d1a8:	mov	w2, #0x15d                 	// #349
  41d1ac:	mov	w0, #0x0                   	// #0
  41d1b0:	bl	406b70 <log_oom_internal@plt>
  41d1b4:	mov	w19, #0x0                   	// #0
  41d1b8:	b	41dc0c <server_process_syslog_message+0xdb8>
  41d1bc:	ldr	x3, [x29, #152]
  41d1c0:	ldr	x1, [x29, #80]
  41d1c4:	ldr	x0, [x29, #248]
  41d1c8:	add	x4, x1, x0
  41d1cc:	ldr	x1, [x29, #192]
  41d1d0:	ldr	x0, [x29, #248]
  41d1d4:	sub	x0, x1, x0
  41d1d8:	mov	x2, x0
  41d1dc:	mov	x1, x4
  41d1e0:	mov	x0, x3
  41d1e4:	bl	405e90 <memcpy@plt>
  41d1e8:	ldr	x1, [x29, #152]
  41d1ec:	ldr	x2, [x29, #192]
  41d1f0:	ldr	x0, [x29, #248]
  41d1f4:	sub	x0, x2, x0
  41d1f8:	add	x0, x1, x0
  41d1fc:	strb	wzr, [x0]
  41d200:	ldr	x0, [x29, #128]
  41d204:	ldr	x1, [x29, #80]
  41d208:	cmp	x1, x0
  41d20c:	b.ne	41d228 <server_process_syslog_message+0x3d4>  // b.any
  41d210:	ldr	x0, [x29, #128]
  41d214:	bl	406af0 <strlen@plt>
  41d218:	mov	x1, x0
  41d21c:	ldr	x0, [x29, #72]
  41d220:	cmp	x0, x1
  41d224:	b.eq	41d230 <server_process_syslog_message+0x3dc>  // b.none
  41d228:	mov	w0, #0x1                   	// #1
  41d22c:	b	41d234 <server_process_syslog_message+0x3e0>
  41d230:	mov	w0, #0x0                   	// #0
  41d234:	strb	w0, [x29, #107]
  41d238:	ldrb	w0, [x29, #107]
  41d23c:	and	w0, w0, #0x1
  41d240:	strb	w0, [x29, #107]
  41d244:	add	x1, x29, #0x6c
  41d248:	add	x0, x29, #0x80
  41d24c:	mov	w2, #0x1                   	// #1
  41d250:	bl	4063f0 <syslog_parse_priority@plt>
  41d254:	ldr	x0, [x29, #176]
  41d258:	ldr	w1, [x29, #108]
  41d25c:	bl	41bd74 <client_context_test_priority>
  41d260:	and	w0, w0, #0xff
  41d264:	eor	w0, w0, #0x1
  41d268:	and	w0, w0, #0xff
  41d26c:	cmp	w0, #0x0
  41d270:	b.eq	41d27c <server_process_syslog_message+0x428>  // b.none
  41d274:	mov	w19, #0x0                   	// #0
  41d278:	b	41dc0c <server_process_syslog_message+0xdb8>
  41d27c:	ldr	x0, [x29, #128]
  41d280:	str	x0, [x29, #256]
  41d284:	add	x0, x29, #0x80
  41d288:	bl	41cbb4 <syslog_skip_timestamp>
  41d28c:	sxtw	x0, w0
  41d290:	str	x0, [x29, #264]
  41d294:	ldr	x0, [x29, #264]
  41d298:	cmp	x0, #0x0
  41d29c:	b.ne	41d2a8 <server_process_syslog_message+0x454>  // b.any
  41d2a0:	mov	w0, #0x1                   	// #1
  41d2a4:	strb	w0, [x29, #107]
  41d2a8:	add	x2, x29, #0x90
  41d2ac:	add	x1, x29, #0x88
  41d2b0:	add	x0, x29, #0x80
  41d2b4:	bl	41c8dc <syslog_parse_identifier>
  41d2b8:	ldr	x0, [x29, #88]
  41d2bc:	ldrb	w0, [x0, #459]
  41d2c0:	cmp	w0, #0x0
  41d2c4:	b.eq	41d2e8 <server_process_syslog_message+0x494>  // b.none
  41d2c8:	ldr	w0, [x29, #108]
  41d2cc:	ldr	x5, [x29, #56]
  41d2d0:	ldr	x4, [x29, #64]
  41d2d4:	ldr	x3, [x29, #72]
  41d2d8:	ldr	x2, [x29, #80]
  41d2dc:	mov	w1, w0
  41d2e0:	ldr	x0, [x29, #88]
  41d2e4:	bl	41c274 <forward_syslog_raw>
  41d2e8:	ldr	x0, [x29, #88]
  41d2ec:	ldrb	w0, [x0, #458]
  41d2f0:	cmp	w0, #0x0
  41d2f4:	b.eq	41d31c <server_process_syslog_message+0x4c8>  // b.none
  41d2f8:	ldr	w0, [x29, #108]
  41d2fc:	ldr	x1, [x29, #136]
  41d300:	ldr	x2, [x29, #128]
  41d304:	ldr	x4, [x29, #64]
  41d308:	mov	x3, x2
  41d30c:	mov	x2, x1
  41d310:	mov	w1, w0
  41d314:	ldr	x0, [x29, #88]
  41d318:	bl	407374 <server_forward_kmsg>
  41d31c:	ldr	x0, [x29, #88]
  41d320:	ldrb	w0, [x0, #460]
  41d324:	cmp	w0, #0x0
  41d328:	b.eq	41d350 <server_process_syslog_message+0x4fc>  // b.none
  41d32c:	ldr	w0, [x29, #108]
  41d330:	ldr	x1, [x29, #136]
  41d334:	ldr	x2, [x29, #128]
  41d338:	ldr	x4, [x29, #64]
  41d33c:	mov	x3, x2
  41d340:	mov	x2, x1
  41d344:	mov	w1, w0
  41d348:	ldr	x0, [x29, #88]
  41d34c:	bl	420d20 <server_forward_console>
  41d350:	ldr	x0, [x29, #88]
  41d354:	ldrb	w0, [x0, #461]
  41d358:	cmp	w0, #0x0
  41d35c:	b.eq	41d384 <server_process_syslog_message+0x530>  // b.none
  41d360:	ldr	w0, [x29, #108]
  41d364:	ldr	x1, [x29, #136]
  41d368:	ldr	x2, [x29, #128]
  41d36c:	ldr	x4, [x29, #64]
  41d370:	mov	x3, x2
  41d374:	mov	x2, x1
  41d378:	mov	w1, w0
  41d37c:	ldr	x0, [x29, #88]
  41d380:	bl	41e374 <server_forward_wall>
  41d384:	ldr	x0, [x29, #176]
  41d388:	bl	41bd48 <client_context_extra_fields_n_iovec>
  41d38c:	add	x0, x0, #0x1e
  41d390:	str	x0, [x29, #272]
  41d394:	ldr	x0, [x29, #272]
  41d398:	str	x0, [x29, #280]
  41d39c:	ldr	x1, [x29, #280]
  41d3a0:	mov	x0, #0x10                  	// #16
  41d3a4:	bl	41bc78 <size_multiply_overflow>
  41d3a8:	and	w0, w0, #0xff
  41d3ac:	and	x0, x0, #0xff
  41d3b0:	cmp	x0, #0x0
  41d3b4:	b.eq	41d3e0 <server_process_syslog_message+0x58c>  // b.none
  41d3b8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d3bc:	add	x1, x0, #0x823
  41d3c0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d3c4:	add	x4, x0, #0xe30
  41d3c8:	mov	w3, #0x183                 	// #387
  41d3cc:	mov	x2, x1
  41d3d0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d3d4:	add	x1, x0, #0xa38
  41d3d8:	mov	w0, #0x0                   	// #0
  41d3dc:	bl	405fd0 <log_assert_failed_realm@plt>
  41d3e0:	ldr	x0, [x29, #280]
  41d3e4:	lsl	x0, x0, #4
  41d3e8:	cmp	x0, #0x400, lsl #12
  41d3ec:	cset	w0, hi  // hi = pmore
  41d3f0:	and	w0, w0, #0xff
  41d3f4:	and	x0, x0, #0xff
  41d3f8:	cmp	x0, #0x0
  41d3fc:	b.eq	41d428 <server_process_syslog_message+0x5d4>  // b.none
  41d400:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d404:	add	x1, x0, #0x823
  41d408:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d40c:	add	x4, x0, #0xe30
  41d410:	mov	w3, #0x183                 	// #387
  41d414:	mov	x2, x1
  41d418:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d41c:	add	x1, x0, #0xa70
  41d420:	mov	w0, #0x0                   	// #0
  41d424:	bl	405fd0 <log_assert_failed_realm@plt>
  41d428:	ldr	x0, [x29, #280]
  41d42c:	lsl	x0, x0, #4
  41d430:	add	x0, x0, #0xf
  41d434:	lsr	x0, x0, #4
  41d438:	lsl	x0, x0, #4
  41d43c:	sub	sp, sp, x0
  41d440:	mov	x0, sp
  41d444:	add	x0, x0, #0xf
  41d448:	lsr	x0, x0, #4
  41d44c:	lsl	x0, x0, #4
  41d450:	str	x0, [x29, #288]
  41d454:	ldr	x0, [x29, #184]
  41d458:	add	x1, x0, #0x1
  41d45c:	str	x1, [x29, #184]
  41d460:	lsl	x0, x0, #4
  41d464:	ldr	x1, [x29, #288]
  41d468:	add	x0, x1, x0
  41d46c:	adrp	x1, 42b000 <__func__.15991+0x530>
  41d470:	add	x1, x1, #0xa98
  41d474:	str	x1, [x0]
  41d478:	mov	x1, #0x11                  	// #17
  41d47c:	str	x1, [x0, #8]
  41d480:	ldr	w0, [x29, #108]
  41d484:	and	w0, w0, #0x7
  41d488:	add	x4, x29, #0x180
  41d48c:	mov	w3, w0
  41d490:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d494:	add	x2, x0, #0xab0
  41d498:	mov	x1, #0x16                  	// #22
  41d49c:	mov	x0, x4
  41d4a0:	bl	405de0 <snprintf@plt>
  41d4a4:	cmp	w0, #0x15
  41d4a8:	cset	w0, hi  // hi = pmore
  41d4ac:	and	w0, w0, #0xff
  41d4b0:	and	x0, x0, #0xff
  41d4b4:	cmp	x0, #0x0
  41d4b8:	b.eq	41d4e4 <server_process_syslog_message+0x690>  // b.none
  41d4bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d4c0:	add	x1, x0, #0x823
  41d4c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d4c8:	add	x4, x0, #0xe30
  41d4cc:	mov	w3, #0x187                 	// #391
  41d4d0:	mov	x2, x1
  41d4d4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d4d8:	add	x1, x0, #0xac0
  41d4dc:	mov	w0, #0x0                   	// #0
  41d4e0:	bl	405fd0 <log_assert_failed_realm@plt>
  41d4e4:	ldr	x0, [x29, #184]
  41d4e8:	add	x1, x0, #0x1
  41d4ec:	str	x1, [x29, #184]
  41d4f0:	lsl	x0, x0, #4
  41d4f4:	ldr	x1, [x29, #288]
  41d4f8:	add	x19, x1, x0
  41d4fc:	add	x0, x29, #0x180
  41d500:	bl	406af0 <strlen@plt>
  41d504:	mov	x1, x0
  41d508:	add	x0, x29, #0x180
  41d50c:	str	x0, [x19]
  41d510:	str	x1, [x19, #8]
  41d514:	ldr	w0, [x29, #108]
  41d518:	and	w0, w0, #0x3f8
  41d51c:	cmp	w0, #0x0
  41d520:	b.eq	41d5bc <server_process_syslog_message+0x768>  // b.none
  41d524:	ldr	w0, [x29, #108]
  41d528:	asr	w0, w0, #3
  41d52c:	and	w0, w0, #0x7f
  41d530:	add	x4, x29, #0x198
  41d534:	mov	w3, w0
  41d538:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d53c:	add	x2, x0, #0xaf0
  41d540:	mov	x1, #0x1d                  	// #29
  41d544:	mov	x0, x4
  41d548:	bl	405de0 <snprintf@plt>
  41d54c:	cmp	w0, #0x1c
  41d550:	cset	w0, hi  // hi = pmore
  41d554:	and	w0, w0, #0xff
  41d558:	and	x0, x0, #0xff
  41d55c:	cmp	x0, #0x0
  41d560:	b.eq	41d58c <server_process_syslog_message+0x738>  // b.none
  41d564:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d568:	add	x1, x0, #0x823
  41d56c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d570:	add	x4, x0, #0xe30
  41d574:	mov	w3, #0x18b                 	// #395
  41d578:	mov	x2, x1
  41d57c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d580:	add	x1, x0, #0xb08
  41d584:	mov	w0, #0x0                   	// #0
  41d588:	bl	405fd0 <log_assert_failed_realm@plt>
  41d58c:	ldr	x0, [x29, #184]
  41d590:	add	x1, x0, #0x1
  41d594:	str	x1, [x29, #184]
  41d598:	lsl	x0, x0, #4
  41d59c:	ldr	x1, [x29, #288]
  41d5a0:	add	x19, x1, x0
  41d5a4:	add	x0, x29, #0x198
  41d5a8:	bl	406af0 <strlen@plt>
  41d5ac:	mov	x1, x0
  41d5b0:	add	x0, x29, #0x198
  41d5b4:	str	x0, [x19]
  41d5b8:	str	x1, [x19, #8]
  41d5bc:	ldr	x0, [x29, #136]
  41d5c0:	cmp	x0, #0x0
  41d5c4:	b.eq	41d798 <server_process_syslog_message+0x944>  // b.none
  41d5c8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d5cc:	add	x0, x0, #0xb38
  41d5d0:	str	x0, [x29, #368]
  41d5d4:	ldr	x0, [x29, #136]
  41d5d8:	str	x0, [x29, #376]
  41d5dc:	str	xzr, [x29, #208]
  41d5e0:	str	xzr, [x29, #216]
  41d5e4:	b	41d618 <server_process_syslog_message+0x7c4>
  41d5e8:	ldr	x0, [x29, #216]
  41d5ec:	lsl	x0, x0, #3
  41d5f0:	add	x1, x29, #0x170
  41d5f4:	ldr	x0, [x1, x0]
  41d5f8:	bl	406af0 <strlen@plt>
  41d5fc:	mov	x1, x0
  41d600:	ldr	x0, [x29, #208]
  41d604:	add	x0, x0, x1
  41d608:	str	x0, [x29, #208]
  41d60c:	ldr	x0, [x29, #216]
  41d610:	add	x0, x0, #0x1
  41d614:	str	x0, [x29, #216]
  41d618:	ldr	x0, [x29, #216]
  41d61c:	cmp	x0, #0x1
  41d620:	b.hi	41d63c <server_process_syslog_message+0x7e8>  // b.pmore
  41d624:	ldr	x0, [x29, #216]
  41d628:	lsl	x0, x0, #3
  41d62c:	add	x1, x29, #0x170
  41d630:	ldr	x0, [x1, x0]
  41d634:	cmp	x0, #0x0
  41d638:	b.ne	41d5e8 <server_process_syslog_message+0x794>  // b.any
  41d63c:	ldr	x0, [x29, #208]
  41d640:	add	x0, x0, #0x1
  41d644:	str	x0, [x29, #296]
  41d648:	ldr	x1, [x29, #296]
  41d64c:	mov	x0, #0x1                   	// #1
  41d650:	bl	41bc78 <size_multiply_overflow>
  41d654:	and	w0, w0, #0xff
  41d658:	and	x0, x0, #0xff
  41d65c:	cmp	x0, #0x0
  41d660:	b.eq	41d68c <server_process_syslog_message+0x838>  // b.none
  41d664:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d668:	add	x1, x0, #0x823
  41d66c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d670:	add	x4, x0, #0xe30
  41d674:	mov	w3, #0x190                 	// #400
  41d678:	mov	x2, x1
  41d67c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d680:	add	x1, x0, #0xb50
  41d684:	mov	w0, #0x0                   	// #0
  41d688:	bl	405fd0 <log_assert_failed_realm@plt>
  41d68c:	ldr	x0, [x29, #296]
  41d690:	cmp	x0, #0x400, lsl #12
  41d694:	cset	w0, hi  // hi = pmore
  41d698:	and	w0, w0, #0xff
  41d69c:	and	x0, x0, #0xff
  41d6a0:	cmp	x0, #0x0
  41d6a4:	b.eq	41d6d0 <server_process_syslog_message+0x87c>  // b.none
  41d6a8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d6ac:	add	x1, x0, #0x823
  41d6b0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d6b4:	add	x4, x0, #0xe30
  41d6b8:	mov	w3, #0x190                 	// #400
  41d6bc:	mov	x2, x1
  41d6c0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d6c4:	add	x1, x0, #0xb80
  41d6c8:	mov	w0, #0x0                   	// #0
  41d6cc:	bl	405fd0 <log_assert_failed_realm@plt>
  41d6d0:	ldr	x0, [x29, #296]
  41d6d4:	add	x0, x0, #0xf
  41d6d8:	lsr	x0, x0, #4
  41d6dc:	lsl	x0, x0, #4
  41d6e0:	sub	sp, sp, x0
  41d6e4:	mov	x0, sp
  41d6e8:	add	x0, x0, #0xf
  41d6ec:	lsr	x0, x0, #4
  41d6f0:	lsl	x0, x0, #4
  41d6f4:	str	x0, [x29, #304]
  41d6f8:	ldr	x0, [x29, #304]
  41d6fc:	str	x0, [x29, #200]
  41d700:	str	xzr, [x29, #216]
  41d704:	b	41d734 <server_process_syslog_message+0x8e0>
  41d708:	ldr	x0, [x29, #216]
  41d70c:	lsl	x0, x0, #3
  41d710:	add	x1, x29, #0x170
  41d714:	ldr	x0, [x1, x0]
  41d718:	mov	x1, x0
  41d71c:	ldr	x0, [x29, #200]
  41d720:	bl	405bc0 <stpcpy@plt>
  41d724:	str	x0, [x29, #200]
  41d728:	ldr	x0, [x29, #216]
  41d72c:	add	x0, x0, #0x1
  41d730:	str	x0, [x29, #216]
  41d734:	ldr	x0, [x29, #216]
  41d738:	cmp	x0, #0x1
  41d73c:	b.hi	41d758 <server_process_syslog_message+0x904>  // b.pmore
  41d740:	ldr	x0, [x29, #216]
  41d744:	lsl	x0, x0, #3
  41d748:	add	x1, x29, #0x170
  41d74c:	ldr	x0, [x1, x0]
  41d750:	cmp	x0, #0x0
  41d754:	b.ne	41d708 <server_process_syslog_message+0x8b4>  // b.any
  41d758:	ldr	x0, [x29, #200]
  41d75c:	strb	wzr, [x0]
  41d760:	ldr	x0, [x29, #304]
  41d764:	str	x0, [x29, #312]
  41d768:	ldr	x0, [x29, #184]
  41d76c:	add	x1, x0, #0x1
  41d770:	str	x1, [x29, #184]
  41d774:	lsl	x0, x0, #4
  41d778:	ldr	x1, [x29, #288]
  41d77c:	add	x19, x1, x0
  41d780:	ldr	x0, [x29, #312]
  41d784:	bl	406af0 <strlen@plt>
  41d788:	mov	x1, x0
  41d78c:	ldr	x0, [x29, #312]
  41d790:	str	x0, [x19]
  41d794:	str	x1, [x19, #8]
  41d798:	ldr	x0, [x29, #144]
  41d79c:	cmp	x0, #0x0
  41d7a0:	b.eq	41d974 <server_process_syslog_message+0xb20>  // b.none
  41d7a4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d7a8:	add	x0, x0, #0xba0
  41d7ac:	str	x0, [x29, #368]
  41d7b0:	ldr	x0, [x29, #144]
  41d7b4:	str	x0, [x29, #376]
  41d7b8:	str	xzr, [x29, #232]
  41d7bc:	str	xzr, [x29, #240]
  41d7c0:	b	41d7f4 <server_process_syslog_message+0x9a0>
  41d7c4:	ldr	x0, [x29, #240]
  41d7c8:	lsl	x0, x0, #3
  41d7cc:	add	x1, x29, #0x170
  41d7d0:	ldr	x0, [x1, x0]
  41d7d4:	bl	406af0 <strlen@plt>
  41d7d8:	mov	x1, x0
  41d7dc:	ldr	x0, [x29, #232]
  41d7e0:	add	x0, x0, x1
  41d7e4:	str	x0, [x29, #232]
  41d7e8:	ldr	x0, [x29, #240]
  41d7ec:	add	x0, x0, #0x1
  41d7f0:	str	x0, [x29, #240]
  41d7f4:	ldr	x0, [x29, #240]
  41d7f8:	cmp	x0, #0x1
  41d7fc:	b.hi	41d818 <server_process_syslog_message+0x9c4>  // b.pmore
  41d800:	ldr	x0, [x29, #240]
  41d804:	lsl	x0, x0, #3
  41d808:	add	x1, x29, #0x170
  41d80c:	ldr	x0, [x1, x0]
  41d810:	cmp	x0, #0x0
  41d814:	b.ne	41d7c4 <server_process_syslog_message+0x970>  // b.any
  41d818:	ldr	x0, [x29, #232]
  41d81c:	add	x0, x0, #0x1
  41d820:	str	x0, [x29, #320]
  41d824:	ldr	x1, [x29, #320]
  41d828:	mov	x0, #0x1                   	// #1
  41d82c:	bl	41bc78 <size_multiply_overflow>
  41d830:	and	w0, w0, #0xff
  41d834:	and	x0, x0, #0xff
  41d838:	cmp	x0, #0x0
  41d83c:	b.eq	41d868 <server_process_syslog_message+0xa14>  // b.none
  41d840:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d844:	add	x1, x0, #0x823
  41d848:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d84c:	add	x4, x0, #0xe30
  41d850:	mov	w3, #0x195                 	// #405
  41d854:	mov	x2, x1
  41d858:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d85c:	add	x1, x0, #0xb50
  41d860:	mov	w0, #0x0                   	// #0
  41d864:	bl	405fd0 <log_assert_failed_realm@plt>
  41d868:	ldr	x0, [x29, #320]
  41d86c:	cmp	x0, #0x400, lsl #12
  41d870:	cset	w0, hi  // hi = pmore
  41d874:	and	w0, w0, #0xff
  41d878:	and	x0, x0, #0xff
  41d87c:	cmp	x0, #0x0
  41d880:	b.eq	41d8ac <server_process_syslog_message+0xa58>  // b.none
  41d884:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d888:	add	x1, x0, #0x823
  41d88c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d890:	add	x4, x0, #0xe30
  41d894:	mov	w3, #0x195                 	// #405
  41d898:	mov	x2, x1
  41d89c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d8a0:	add	x1, x0, #0xb80
  41d8a4:	mov	w0, #0x0                   	// #0
  41d8a8:	bl	405fd0 <log_assert_failed_realm@plt>
  41d8ac:	ldr	x0, [x29, #320]
  41d8b0:	add	x0, x0, #0xf
  41d8b4:	lsr	x0, x0, #4
  41d8b8:	lsl	x0, x0, #4
  41d8bc:	sub	sp, sp, x0
  41d8c0:	mov	x0, sp
  41d8c4:	add	x0, x0, #0xf
  41d8c8:	lsr	x0, x0, #4
  41d8cc:	lsl	x0, x0, #4
  41d8d0:	str	x0, [x29, #328]
  41d8d4:	ldr	x0, [x29, #328]
  41d8d8:	str	x0, [x29, #224]
  41d8dc:	str	xzr, [x29, #240]
  41d8e0:	b	41d910 <server_process_syslog_message+0xabc>
  41d8e4:	ldr	x0, [x29, #240]
  41d8e8:	lsl	x0, x0, #3
  41d8ec:	add	x1, x29, #0x170
  41d8f0:	ldr	x0, [x1, x0]
  41d8f4:	mov	x1, x0
  41d8f8:	ldr	x0, [x29, #224]
  41d8fc:	bl	405bc0 <stpcpy@plt>
  41d900:	str	x0, [x29, #224]
  41d904:	ldr	x0, [x29, #240]
  41d908:	add	x0, x0, #0x1
  41d90c:	str	x0, [x29, #240]
  41d910:	ldr	x0, [x29, #240]
  41d914:	cmp	x0, #0x1
  41d918:	b.hi	41d934 <server_process_syslog_message+0xae0>  // b.pmore
  41d91c:	ldr	x0, [x29, #240]
  41d920:	lsl	x0, x0, #3
  41d924:	add	x1, x29, #0x170
  41d928:	ldr	x0, [x1, x0]
  41d92c:	cmp	x0, #0x0
  41d930:	b.ne	41d8e4 <server_process_syslog_message+0xa90>  // b.any
  41d934:	ldr	x0, [x29, #224]
  41d938:	strb	wzr, [x0]
  41d93c:	ldr	x0, [x29, #328]
  41d940:	str	x0, [x29, #312]
  41d944:	ldr	x0, [x29, #184]
  41d948:	add	x1, x0, #0x1
  41d94c:	str	x1, [x29, #184]
  41d950:	lsl	x0, x0, #4
  41d954:	ldr	x1, [x29, #288]
  41d958:	add	x19, x1, x0
  41d95c:	ldr	x0, [x29, #312]
  41d960:	bl	406af0 <strlen@plt>
  41d964:	mov	x1, x0
  41d968:	ldr	x0, [x29, #312]
  41d96c:	str	x0, [x19]
  41d970:	str	x1, [x19, #8]
  41d974:	ldr	x0, [x29, #264]
  41d978:	cmp	x0, #0x0
  41d97c:	b.eq	41daa4 <server_process_syslog_message+0xc50>  // b.none
  41d980:	mov	x0, #0x11                  	// #17
  41d984:	str	x0, [x29, #336]
  41d988:	ldr	x1, [x29, #336]
  41d98c:	ldr	x0, [x29, #264]
  41d990:	add	x0, x1, x0
  41d994:	str	x0, [x29, #344]
  41d998:	ldr	x1, [x29, #344]
  41d99c:	mov	x0, #0x1                   	// #1
  41d9a0:	bl	41bc78 <size_multiply_overflow>
  41d9a4:	and	w0, w0, #0xff
  41d9a8:	and	x0, x0, #0xff
  41d9ac:	cmp	x0, #0x0
  41d9b0:	b.eq	41d9dc <server_process_syslog_message+0xb88>  // b.none
  41d9b4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d9b8:	add	x1, x0, #0x823
  41d9bc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d9c0:	add	x4, x0, #0xe30
  41d9c4:	mov	w3, #0x19c                 	// #412
  41d9c8:	mov	x2, x1
  41d9cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d9d0:	add	x1, x0, #0xb50
  41d9d4:	mov	w0, #0x0                   	// #0
  41d9d8:	bl	405fd0 <log_assert_failed_realm@plt>
  41d9dc:	ldr	x0, [x29, #344]
  41d9e0:	cmp	x0, #0x400, lsl #12
  41d9e4:	cset	w0, hi  // hi = pmore
  41d9e8:	and	w0, w0, #0xff
  41d9ec:	and	x0, x0, #0xff
  41d9f0:	cmp	x0, #0x0
  41d9f4:	b.eq	41da20 <server_process_syslog_message+0xbcc>  // b.none
  41d9f8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41d9fc:	add	x1, x0, #0x823
  41da00:	adrp	x0, 42b000 <__func__.15991+0x530>
  41da04:	add	x4, x0, #0xe30
  41da08:	mov	w3, #0x19c                 	// #412
  41da0c:	mov	x2, x1
  41da10:	adrp	x0, 42b000 <__func__.15991+0x530>
  41da14:	add	x1, x0, #0xb80
  41da18:	mov	w0, #0x0                   	// #0
  41da1c:	bl	405fd0 <log_assert_failed_realm@plt>
  41da20:	ldr	x0, [x29, #344]
  41da24:	add	x0, x0, #0xf
  41da28:	lsr	x0, x0, #4
  41da2c:	lsl	x0, x0, #4
  41da30:	sub	sp, sp, x0
  41da34:	mov	x0, sp
  41da38:	add	x0, x0, #0xf
  41da3c:	lsr	x0, x0, #4
  41da40:	lsl	x0, x0, #4
  41da44:	str	x0, [x29, #352]
  41da48:	ldr	x2, [x29, #336]
  41da4c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41da50:	add	x1, x0, #0xbb0
  41da54:	ldr	x0, [x29, #352]
  41da58:	bl	405e90 <memcpy@plt>
  41da5c:	ldr	x1, [x29, #352]
  41da60:	ldr	x0, [x29, #336]
  41da64:	add	x0, x1, x0
  41da68:	ldr	x2, [x29, #264]
  41da6c:	ldr	x1, [x29, #256]
  41da70:	bl	405e90 <memcpy@plt>
  41da74:	ldr	x0, [x29, #184]
  41da78:	add	x1, x0, #0x1
  41da7c:	str	x1, [x29, #184]
  41da80:	lsl	x0, x0, #4
  41da84:	ldr	x1, [x29, #288]
  41da88:	add	x0, x1, x0
  41da8c:	ldr	x2, [x29, #336]
  41da90:	ldr	x1, [x29, #264]
  41da94:	add	x1, x2, x1
  41da98:	ldr	x2, [x29, #352]
  41da9c:	str	x2, [x0]
  41daa0:	str	x1, [x0, #8]
  41daa4:	ldr	x0, [x29, #128]
  41daa8:	mov	x2, #0x0                   	// #0
  41daac:	mov	x1, x0
  41dab0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dab4:	add	x0, x0, #0xbc8
  41dab8:	bl	405f10 <strjoin_real@plt>
  41dabc:	str	x0, [x29, #160]
  41dac0:	ldr	x0, [x29, #160]
  41dac4:	cmp	x0, #0x0
  41dac8:	b.ne	41daf0 <server_process_syslog_message+0xc9c>  // b.any
  41dacc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dad0:	add	x1, x0, #0x823
  41dad4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dad8:	add	x3, x0, #0xe50
  41dadc:	mov	w2, #0x1a5                 	// #421
  41dae0:	mov	w0, #0x0                   	// #0
  41dae4:	bl	406b70 <log_oom_internal@plt>
  41dae8:	mov	w19, #0x0                   	// #0
  41daec:	b	41dc0c <server_process_syslog_message+0xdb8>
  41daf0:	ldr	x0, [x29, #184]
  41daf4:	add	x1, x0, #0x1
  41daf8:	str	x1, [x29, #184]
  41dafc:	lsl	x0, x0, #4
  41db00:	ldr	x1, [x29, #288]
  41db04:	add	x19, x1, x0
  41db08:	ldr	x20, [x29, #160]
  41db0c:	ldr	x0, [x29, #160]
  41db10:	bl	406af0 <strlen@plt>
  41db14:	str	x20, [x19]
  41db18:	str	x0, [x19, #8]
  41db1c:	ldrb	w0, [x29, #107]
  41db20:	cmp	w0, #0x0
  41db24:	b.eq	41dbdc <server_process_syslog_message+0xd88>  // b.none
  41db28:	mov	x0, #0xb                   	// #11
  41db2c:	str	x0, [x29, #360]
  41db30:	ldr	x1, [x29, #360]
  41db34:	ldr	x0, [x29, #72]
  41db38:	add	x0, x1, x0
  41db3c:	mov	x1, x0
  41db40:	mov	x0, #0x1                   	// #1
  41db44:	bl	41bcf4 <malloc_multiply>
  41db48:	str	x0, [x29, #168]
  41db4c:	ldr	x0, [x29, #168]
  41db50:	cmp	x0, #0x0
  41db54:	b.ne	41db7c <server_process_syslog_message+0xd28>  // b.any
  41db58:	adrp	x0, 42b000 <__func__.15991+0x530>
  41db5c:	add	x1, x0, #0x823
  41db60:	adrp	x0, 42b000 <__func__.15991+0x530>
  41db64:	add	x3, x0, #0xe50
  41db68:	mov	w2, #0x1af                 	// #431
  41db6c:	mov	w0, #0x0                   	// #0
  41db70:	bl	406b70 <log_oom_internal@plt>
  41db74:	mov	w19, #0x0                   	// #0
  41db78:	b	41dc0c <server_process_syslog_message+0xdb8>
  41db7c:	ldr	x3, [x29, #168]
  41db80:	ldr	x2, [x29, #360]
  41db84:	adrp	x0, 42b000 <__func__.15991+0x530>
  41db88:	add	x1, x0, #0xbd8
  41db8c:	mov	x0, x3
  41db90:	bl	405e90 <memcpy@plt>
  41db94:	ldr	x1, [x29, #168]
  41db98:	ldr	x0, [x29, #360]
  41db9c:	add	x0, x1, x0
  41dba0:	ldr	x2, [x29, #72]
  41dba4:	ldr	x1, [x29, #80]
  41dba8:	bl	405e90 <memcpy@plt>
  41dbac:	ldr	x0, [x29, #184]
  41dbb0:	add	x1, x0, #0x1
  41dbb4:	str	x1, [x29, #184]
  41dbb8:	lsl	x0, x0, #4
  41dbbc:	ldr	x1, [x29, #288]
  41dbc0:	add	x0, x1, x0
  41dbc4:	ldr	x2, [x29, #168]
  41dbc8:	ldr	x3, [x29, #360]
  41dbcc:	ldr	x1, [x29, #72]
  41dbd0:	add	x1, x3, x1
  41dbd4:	str	x2, [x0]
  41dbd8:	str	x1, [x0, #8]
  41dbdc:	ldr	x0, [x29, #176]
  41dbe0:	ldr	w1, [x29, #108]
  41dbe4:	mov	w7, #0x0                   	// #0
  41dbe8:	mov	w6, w1
  41dbec:	ldr	x5, [x29, #56]
  41dbf0:	mov	x4, x0
  41dbf4:	ldr	x3, [x29, #272]
  41dbf8:	ldr	x2, [x29, #184]
  41dbfc:	ldr	x1, [x29, #288]
  41dc00:	ldr	x0, [x29, #88]
  41dc04:	bl	411768 <server_dispatch_message>
  41dc08:	mov	w19, #0x1                   	// #1
  41dc0c:	add	x0, x29, #0xa8
  41dc10:	bl	41bc54 <freep>
  41dc14:	cmp	w19, #0x1
  41dc18:	b.eq	41dc24 <server_process_syslog_message+0xdd0>  // b.none
  41dc1c:	mov	w19, #0x0                   	// #0
  41dc20:	b	41dc28 <server_process_syslog_message+0xdd4>
  41dc24:	mov	w19, #0x1                   	// #1
  41dc28:	add	x0, x29, #0xa0
  41dc2c:	bl	41bc54 <freep>
  41dc30:	cmp	w19, #0x1
  41dc34:	b.eq	41dc40 <server_process_syslog_message+0xdec>  // b.none
  41dc38:	mov	w19, #0x0                   	// #0
  41dc3c:	b	41dc44 <server_process_syslog_message+0xdf0>
  41dc40:	mov	w19, #0x1                   	// #1
  41dc44:	add	x0, x29, #0x98
  41dc48:	bl	41bc54 <freep>
  41dc4c:	cmp	w19, #0x1
  41dc50:	b.eq	41dc5c <server_process_syslog_message+0xe08>  // b.none
  41dc54:	mov	w19, #0x0                   	// #0
  41dc58:	b	41dc60 <server_process_syslog_message+0xe0c>
  41dc5c:	mov	w19, #0x1                   	// #1
  41dc60:	add	x0, x29, #0x90
  41dc64:	bl	41bc54 <freep>
  41dc68:	cmp	w19, #0x1
  41dc6c:	b.eq	41dc78 <server_process_syslog_message+0xe24>  // b.none
  41dc70:	mov	w19, #0x0                   	// #0
  41dc74:	b	41dc7c <server_process_syslog_message+0xe28>
  41dc78:	mov	w19, #0x1                   	// #1
  41dc7c:	add	x0, x29, #0x88
  41dc80:	bl	41bc54 <freep>
  41dc84:	cmp	w19, #0x1
  41dc88:	b.ne	41dc90 <server_process_syslog_message+0xe3c>  // b.any
  41dc8c:	nop
  41dc90:	adrp	x0, 441000 <wordlist.9471+0x208>
  41dc94:	ldr	x0, [x0, #4064]
  41dc98:	ldr	x1, [x29, #440]
  41dc9c:	ldr	x0, [x0]
  41dca0:	eor	x0, x1, x0
  41dca4:	cmp	x0, #0x0
  41dca8:	b.eq	41dcb0 <server_process_syslog_message+0xe5c>  // b.none
  41dcac:	bl	4063e0 <__stack_chk_fail@plt>
  41dcb0:	mov	sp, x29
  41dcb4:	ldp	x19, x20, [sp, #16]
  41dcb8:	ldp	x29, x30, [sp], #448
  41dcbc:	ret

000000000041dcc0 <server_open_syslog_socket>:
  41dcc0:	stp	x29, x30, [sp, #-144]!
  41dcc4:	mov	x29, sp
  41dcc8:	stp	x19, x20, [sp, #16]
  41dccc:	str	x0, [sp, #40]
  41dcd0:	ldr	x0, [sp, #40]
  41dcd4:	cmp	x0, #0x0
  41dcd8:	cset	w0, eq  // eq = none
  41dcdc:	and	w0, w0, #0xff
  41dce0:	and	x0, x0, #0xff
  41dce4:	cmp	x0, #0x0
  41dce8:	b.eq	41dd14 <server_open_syslog_socket+0x54>  // b.none
  41dcec:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dcf0:	add	x1, x0, #0x823
  41dcf4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dcf8:	add	x4, x0, #0xe70
  41dcfc:	mov	w3, #0x1c4                 	// #452
  41dd00:	mov	x2, x1
  41dd04:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dd08:	add	x1, x0, #0x868
  41dd0c:	mov	w0, #0x0                   	// #0
  41dd10:	bl	405fd0 <log_assert_failed_realm@plt>
  41dd14:	ldr	x0, [sp, #40]
  41dd18:	ldr	w0, [x0]
  41dd1c:	cmp	w0, #0x0
  41dd20:	b.ge	41df58 <server_open_syslog_socket+0x298>  // b.tcont
  41dd24:	mov	w2, #0x0                   	// #0
  41dd28:	mov	w1, #0x802                 	// #2050
  41dd2c:	movk	w1, #0x8, lsl #16
  41dd30:	mov	w0, #0x1                   	// #1
  41dd34:	bl	405db0 <socket@plt>
  41dd38:	mov	w1, w0
  41dd3c:	ldr	x0, [sp, #40]
  41dd40:	str	w1, [x0]
  41dd44:	ldr	x0, [sp, #40]
  41dd48:	ldr	w0, [x0]
  41dd4c:	cmp	w0, #0x0
  41dd50:	b.ge	41dde0 <server_open_syslog_socket+0x120>  // b.tcont
  41dd54:	mov	w0, #0x3                   	// #3
  41dd58:	str	w0, [sp, #76]
  41dd5c:	bl	4062e0 <__errno_location@plt>
  41dd60:	ldr	w0, [x0]
  41dd64:	str	w0, [sp, #80]
  41dd68:	str	wzr, [sp, #84]
  41dd6c:	ldr	w0, [sp, #84]
  41dd70:	bl	406c30 <log_get_max_level_realm@plt>
  41dd74:	mov	w1, w0
  41dd78:	ldr	w0, [sp, #76]
  41dd7c:	and	w0, w0, #0x7
  41dd80:	cmp	w1, w0
  41dd84:	b.lt	41ddc8 <server_open_syslog_socket+0x108>  // b.tstop
  41dd88:	ldr	w0, [sp, #84]
  41dd8c:	lsl	w1, w0, #10
  41dd90:	ldr	w0, [sp, #76]
  41dd94:	orr	w6, w1, w0
  41dd98:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dd9c:	add	x1, x0, #0x823
  41dda0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dda4:	add	x5, x0, #0xbe8
  41dda8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ddac:	add	x4, x0, #0xe90
  41ddb0:	mov	w3, #0x1c9                 	// #457
  41ddb4:	mov	x2, x1
  41ddb8:	ldr	w1, [sp, #80]
  41ddbc:	mov	w0, w6
  41ddc0:	bl	406590 <log_internal_realm@plt>
  41ddc4:	b	41e23c <server_open_syslog_socket+0x57c>
  41ddc8:	ldr	w0, [sp, #80]
  41ddcc:	cmp	w0, #0x0
  41ddd0:	cneg	w0, w0, lt  // lt = tstop
  41ddd4:	and	w0, w0, #0xff
  41ddd8:	neg	w0, w0
  41dddc:	b	41e23c <server_open_syslog_socket+0x57c>
  41dde0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dde4:	add	x0, x0, #0xeb0
  41dde8:	bl	406230 <sockaddr_un_unlink@plt>
  41ddec:	ldr	x0, [sp, #40]
  41ddf0:	ldr	w19, [x0]
  41ddf4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41ddf8:	add	x20, x0, #0xeb0
  41ddfc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41de00:	add	x0, x0, #0xeb0
  41de04:	str	x0, [sp, #136]
  41de08:	ldr	x0, [sp, #136]
  41de0c:	ldrh	w0, [x0]
  41de10:	cmp	w0, #0x1
  41de14:	cset	w0, ne  // ne = any
  41de18:	and	w0, w0, #0xff
  41de1c:	and	x0, x0, #0xff
  41de20:	cmp	x0, #0x0
  41de24:	b.eq	41de50 <server_open_syslog_socket+0x190>  // b.none
  41de28:	adrp	x0, 42b000 <__func__.15991+0x530>
  41de2c:	add	x1, x0, #0x823
  41de30:	adrp	x0, 42b000 <__func__.15991+0x530>
  41de34:	add	x4, x0, #0xe70
  41de38:	mov	w3, #0x1cd                 	// #461
  41de3c:	mov	x2, x1
  41de40:	adrp	x0, 42b000 <__func__.15991+0x530>
  41de44:	add	x1, x0, #0x848
  41de48:	mov	w0, #0x0                   	// #0
  41de4c:	bl	405fd0 <log_assert_failed_realm@plt>
  41de50:	ldr	x0, [sp, #136]
  41de54:	ldrb	w0, [x0, #2]
  41de58:	cmp	w0, #0x0
  41de5c:	b.ne	41de7c <server_open_syslog_socket+0x1bc>  // b.any
  41de60:	ldr	x0, [sp, #136]
  41de64:	add	x0, x0, #0x2
  41de68:	add	x0, x0, #0x1
  41de6c:	mov	x1, #0x6b                  	// #107
  41de70:	bl	405d60 <strnlen@plt>
  41de74:	add	x0, x0, #0x3
  41de78:	b	41de90 <server_open_syslog_socket+0x1d0>
  41de7c:	ldr	x0, [sp, #136]
  41de80:	add	x0, x0, #0x2
  41de84:	mov	x1, #0x6c                  	// #108
  41de88:	bl	405d60 <strnlen@plt>
  41de8c:	add	x0, x0, #0x3
  41de90:	mov	w2, w0
  41de94:	mov	x1, x20
  41de98:	mov	w0, w19
  41de9c:	bl	4065b0 <bind@plt>
  41dea0:	str	w0, [sp, #60]
  41dea4:	ldr	w0, [sp, #60]
  41dea8:	cmp	w0, #0x0
  41deac:	b.ge	41df44 <server_open_syslog_socket+0x284>  // b.tcont
  41deb0:	mov	w0, #0x3                   	// #3
  41deb4:	str	w0, [sp, #64]
  41deb8:	bl	4062e0 <__errno_location@plt>
  41debc:	ldr	w0, [x0]
  41dec0:	str	w0, [sp, #68]
  41dec4:	str	wzr, [sp, #72]
  41dec8:	ldr	w0, [sp, #72]
  41decc:	bl	406c30 <log_get_max_level_realm@plt>
  41ded0:	mov	w1, w0
  41ded4:	ldr	w0, [sp, #64]
  41ded8:	and	w0, w0, #0x7
  41dedc:	cmp	w1, w0
  41dee0:	b.lt	41df2c <server_open_syslog_socket+0x26c>  // b.tstop
  41dee4:	ldr	w0, [sp, #72]
  41dee8:	lsl	w1, w0, #10
  41deec:	ldr	w0, [sp, #64]
  41def0:	orr	w7, w1, w0
  41def4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41def8:	add	x1, x0, #0x823
  41defc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41df00:	add	x6, x0, #0xeb2
  41df04:	adrp	x0, 42b000 <__func__.15991+0x530>
  41df08:	add	x5, x0, #0xc00
  41df0c:	adrp	x0, 42b000 <__func__.15991+0x530>
  41df10:	add	x4, x0, #0xe90
  41df14:	mov	w3, #0x1cf                 	// #463
  41df18:	mov	x2, x1
  41df1c:	ldr	w1, [sp, #68]
  41df20:	mov	w0, w7
  41df24:	bl	406590 <log_internal_realm@plt>
  41df28:	b	41e23c <server_open_syslog_socket+0x57c>
  41df2c:	ldr	w0, [sp, #68]
  41df30:	cmp	w0, #0x0
  41df34:	cneg	w0, w0, lt  // lt = tstop
  41df38:	and	w0, w0, #0xff
  41df3c:	neg	w0, w0
  41df40:	b	41e23c <server_open_syslog_socket+0x57c>
  41df44:	mov	w1, #0x1b6                 	// #438
  41df48:	adrp	x0, 42b000 <__func__.15991+0x530>
  41df4c:	add	x0, x0, #0xeb2
  41df50:	bl	4061f0 <chmod@plt>
  41df54:	b	41df68 <server_open_syslog_socket+0x2a8>
  41df58:	ldr	x0, [sp, #40]
  41df5c:	ldr	w0, [x0]
  41df60:	mov	w1, #0x1                   	// #1
  41df64:	bl	405e60 <fd_nonblock@plt>
  41df68:	ldr	x0, [sp, #40]
  41df6c:	ldr	w0, [x0]
  41df70:	mov	w3, #0x1                   	// #1
  41df74:	mov	w2, #0x10                  	// #16
  41df78:	mov	w1, #0x1                   	// #1
  41df7c:	bl	41bdf0 <setsockopt_int>
  41df80:	str	w0, [sp, #60]
  41df84:	ldr	w0, [sp, #60]
  41df88:	cmp	w0, #0x0
  41df8c:	b.ge	41e018 <server_open_syslog_socket+0x358>  // b.tcont
  41df90:	mov	w0, #0x3                   	// #3
  41df94:	str	w0, [sp, #124]
  41df98:	ldr	w0, [sp, #60]
  41df9c:	str	w0, [sp, #128]
  41dfa0:	str	wzr, [sp, #132]
  41dfa4:	ldr	w0, [sp, #132]
  41dfa8:	bl	406c30 <log_get_max_level_realm@plt>
  41dfac:	mov	w1, w0
  41dfb0:	ldr	w0, [sp, #124]
  41dfb4:	and	w0, w0, #0x7
  41dfb8:	cmp	w1, w0
  41dfbc:	b.lt	41e000 <server_open_syslog_socket+0x340>  // b.tstop
  41dfc0:	ldr	w0, [sp, #132]
  41dfc4:	lsl	w1, w0, #10
  41dfc8:	ldr	w0, [sp, #124]
  41dfcc:	orr	w6, w1, w0
  41dfd0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dfd4:	add	x1, x0, #0x823
  41dfd8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dfdc:	add	x5, x0, #0xc18
  41dfe0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41dfe4:	add	x4, x0, #0xe90
  41dfe8:	mov	w3, #0x1d7                 	// #471
  41dfec:	mov	x2, x1
  41dff0:	ldr	w1, [sp, #128]
  41dff4:	mov	w0, w6
  41dff8:	bl	406590 <log_internal_realm@plt>
  41dffc:	b	41e23c <server_open_syslog_socket+0x57c>
  41e000:	ldr	w0, [sp, #128]
  41e004:	cmp	w0, #0x0
  41e008:	cneg	w0, w0, lt  // lt = tstop
  41e00c:	and	w0, w0, #0xff
  41e010:	neg	w0, w0
  41e014:	b	41e23c <server_open_syslog_socket+0x57c>
  41e018:	ldr	x0, [sp, #40]
  41e01c:	ldr	w0, [x0]
  41e020:	mov	w3, #0x1                   	// #1
  41e024:	mov	w2, #0x1d                  	// #29
  41e028:	mov	w1, #0x1                   	// #1
  41e02c:	bl	41bdf0 <setsockopt_int>
  41e030:	str	w0, [sp, #60]
  41e034:	ldr	w0, [sp, #60]
  41e038:	cmp	w0, #0x0
  41e03c:	b.ge	41e0c8 <server_open_syslog_socket+0x408>  // b.tcont
  41e040:	mov	w0, #0x3                   	// #3
  41e044:	str	w0, [sp, #112]
  41e048:	ldr	w0, [sp, #60]
  41e04c:	str	w0, [sp, #116]
  41e050:	str	wzr, [sp, #120]
  41e054:	ldr	w0, [sp, #120]
  41e058:	bl	406c30 <log_get_max_level_realm@plt>
  41e05c:	mov	w1, w0
  41e060:	ldr	w0, [sp, #112]
  41e064:	and	w0, w0, #0x7
  41e068:	cmp	w1, w0
  41e06c:	b.lt	41e0b0 <server_open_syslog_socket+0x3f0>  // b.tstop
  41e070:	ldr	w0, [sp, #120]
  41e074:	lsl	w1, w0, #10
  41e078:	ldr	w0, [sp, #112]
  41e07c:	orr	w6, w1, w0
  41e080:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e084:	add	x1, x0, #0x823
  41e088:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e08c:	add	x5, x0, #0xc30
  41e090:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e094:	add	x4, x0, #0xe90
  41e098:	mov	w3, #0x1e3                 	// #483
  41e09c:	mov	x2, x1
  41e0a0:	ldr	w1, [sp, #116]
  41e0a4:	mov	w0, w6
  41e0a8:	bl	406590 <log_internal_realm@plt>
  41e0ac:	b	41e23c <server_open_syslog_socket+0x57c>
  41e0b0:	ldr	w0, [sp, #116]
  41e0b4:	cmp	w0, #0x0
  41e0b8:	cneg	w0, w0, lt  // lt = tstop
  41e0bc:	and	w0, w0, #0xff
  41e0c0:	neg	w0, w0
  41e0c4:	b	41e23c <server_open_syslog_socket+0x57c>
  41e0c8:	ldr	x0, [sp, #40]
  41e0cc:	ldr	x6, [x0, #32]
  41e0d0:	ldr	x0, [sp, #40]
  41e0d4:	add	x1, x0, #0x28
  41e0d8:	ldr	x0, [sp, #40]
  41e0dc:	ldr	w2, [x0]
  41e0e0:	ldr	x5, [sp, #40]
  41e0e4:	adrp	x0, 441000 <wordlist.9471+0x208>
  41e0e8:	ldr	x4, [x0, #4088]
  41e0ec:	mov	w3, #0x1                   	// #1
  41e0f0:	mov	x0, x6
  41e0f4:	bl	406680 <sd_event_add_io@plt>
  41e0f8:	str	w0, [sp, #60]
  41e0fc:	ldr	w0, [sp, #60]
  41e100:	cmp	w0, #0x0
  41e104:	b.ge	41e190 <server_open_syslog_socket+0x4d0>  // b.tcont
  41e108:	mov	w0, #0x3                   	// #3
  41e10c:	str	w0, [sp, #100]
  41e110:	ldr	w0, [sp, #60]
  41e114:	str	w0, [sp, #104]
  41e118:	str	wzr, [sp, #108]
  41e11c:	ldr	w0, [sp, #108]
  41e120:	bl	406c30 <log_get_max_level_realm@plt>
  41e124:	mov	w1, w0
  41e128:	ldr	w0, [sp, #100]
  41e12c:	and	w0, w0, #0x7
  41e130:	cmp	w1, w0
  41e134:	b.lt	41e178 <server_open_syslog_socket+0x4b8>  // b.tstop
  41e138:	ldr	w0, [sp, #108]
  41e13c:	lsl	w1, w0, #10
  41e140:	ldr	w0, [sp, #100]
  41e144:	orr	w6, w1, w0
  41e148:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e14c:	add	x1, x0, #0x823
  41e150:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e154:	add	x5, x0, #0xc48
  41e158:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e15c:	add	x4, x0, #0xe90
  41e160:	mov	w3, #0x1e7                 	// #487
  41e164:	mov	x2, x1
  41e168:	ldr	w1, [sp, #104]
  41e16c:	mov	w0, w6
  41e170:	bl	406590 <log_internal_realm@plt>
  41e174:	b	41e23c <server_open_syslog_socket+0x57c>
  41e178:	ldr	w0, [sp, #104]
  41e17c:	cmp	w0, #0x0
  41e180:	cneg	w0, w0, lt  // lt = tstop
  41e184:	and	w0, w0, #0xff
  41e188:	neg	w0, w0
  41e18c:	b	41e23c <server_open_syslog_socket+0x57c>
  41e190:	ldr	x0, [sp, #40]
  41e194:	ldr	x0, [x0, #40]
  41e198:	mov	x1, #0x5                   	// #5
  41e19c:	bl	406380 <sd_event_source_set_priority@plt>
  41e1a0:	str	w0, [sp, #60]
  41e1a4:	ldr	w0, [sp, #60]
  41e1a8:	cmp	w0, #0x0
  41e1ac:	b.ge	41e238 <server_open_syslog_socket+0x578>  // b.tcont
  41e1b0:	mov	w0, #0x3                   	// #3
  41e1b4:	str	w0, [sp, #88]
  41e1b8:	ldr	w0, [sp, #60]
  41e1bc:	str	w0, [sp, #92]
  41e1c0:	str	wzr, [sp, #96]
  41e1c4:	ldr	w0, [sp, #96]
  41e1c8:	bl	406c30 <log_get_max_level_realm@plt>
  41e1cc:	mov	w1, w0
  41e1d0:	ldr	w0, [sp, #88]
  41e1d4:	and	w0, w0, #0x7
  41e1d8:	cmp	w1, w0
  41e1dc:	b.lt	41e220 <server_open_syslog_socket+0x560>  // b.tstop
  41e1e0:	ldr	w0, [sp, #96]
  41e1e4:	lsl	w1, w0, #10
  41e1e8:	ldr	w0, [sp, #88]
  41e1ec:	orr	w6, w1, w0
  41e1f0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e1f4:	add	x1, x0, #0x823
  41e1f8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e1fc:	add	x5, x0, #0xc80
  41e200:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e204:	add	x4, x0, #0xe90
  41e208:	mov	w3, #0x1eb                 	// #491
  41e20c:	mov	x2, x1
  41e210:	ldr	w1, [sp, #92]
  41e214:	mov	w0, w6
  41e218:	bl	406590 <log_internal_realm@plt>
  41e21c:	b	41e23c <server_open_syslog_socket+0x57c>
  41e220:	ldr	w0, [sp, #92]
  41e224:	cmp	w0, #0x0
  41e228:	cneg	w0, w0, lt  // lt = tstop
  41e22c:	and	w0, w0, #0xff
  41e230:	neg	w0, w0
  41e234:	b	41e23c <server_open_syslog_socket+0x57c>
  41e238:	mov	w0, #0x0                   	// #0
  41e23c:	ldp	x19, x20, [sp, #16]
  41e240:	ldp	x29, x30, [sp], #144
  41e244:	ret

000000000041e248 <server_maybe_warn_forward_syslog_missed>:
  41e248:	stp	x29, x30, [sp, #-48]!
  41e24c:	mov	x29, sp
  41e250:	str	x0, [sp, #24]
  41e254:	ldr	x0, [sp, #24]
  41e258:	cmp	x0, #0x0
  41e25c:	cset	w0, eq  // eq = none
  41e260:	and	w0, w0, #0xff
  41e264:	and	x0, x0, #0xff
  41e268:	cmp	x0, #0x0
  41e26c:	b.eq	41e298 <server_maybe_warn_forward_syslog_missed+0x50>  // b.none
  41e270:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e274:	add	x1, x0, #0x823
  41e278:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e27c:	add	x4, x0, #0xf30
  41e280:	mov	w3, #0x1f3                 	// #499
  41e284:	mov	x2, x1
  41e288:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e28c:	add	x1, x0, #0x868
  41e290:	mov	w0, #0x0                   	// #0
  41e294:	bl	405fd0 <log_assert_failed_realm@plt>
  41e298:	ldr	x0, [sp, #24]
  41e29c:	ldr	w0, [x0, #464]
  41e2a0:	cmp	w0, #0x0
  41e2a4:	b.eq	41e318 <server_maybe_warn_forward_syslog_missed+0xd0>  // b.none
  41e2a8:	mov	w0, #0x1                   	// #1
  41e2ac:	bl	406660 <now@plt>
  41e2b0:	str	x0, [sp, #40]
  41e2b4:	ldr	x0, [sp, #24]
  41e2b8:	ldr	x1, [x0, #472]
  41e2bc:	mov	x0, #0xc380                	// #50048
  41e2c0:	movk	x0, #0x1c9, lsl #16
  41e2c4:	add	x0, x1, x0
  41e2c8:	ldr	x1, [sp, #40]
  41e2cc:	cmp	x1, x0
  41e2d0:	b.cc	41e320 <server_maybe_warn_forward_syslog_missed+0xd8>  // b.lo, b.ul, b.last
  41e2d4:	ldr	x0, [sp, #24]
  41e2d8:	ldr	w0, [x0, #464]
  41e2dc:	mov	x5, #0x0                   	// #0
  41e2e0:	mov	w4, w0
  41e2e4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e2e8:	add	x3, x0, #0xcb8
  41e2ec:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e2f0:	add	x2, x0, #0xcf0
  41e2f4:	mov	w1, #0x0                   	// #0
  41e2f8:	ldr	x0, [sp, #24]
  41e2fc:	bl	411278 <server_driver_message>
  41e300:	ldr	x0, [sp, #24]
  41e304:	str	wzr, [x0, #464]
  41e308:	ldr	x0, [sp, #24]
  41e30c:	ldr	x1, [sp, #40]
  41e310:	str	x1, [x0, #472]
  41e314:	b	41e324 <server_maybe_warn_forward_syslog_missed+0xdc>
  41e318:	nop
  41e31c:	b	41e324 <server_maybe_warn_forward_syslog_missed+0xdc>
  41e320:	nop
  41e324:	ldp	x29, x30, [sp], #48
  41e328:	ret

000000000041e32c <freep>:
  41e32c:	stp	x29, x30, [sp, #-32]!
  41e330:	mov	x29, sp
  41e334:	str	x0, [sp, #24]
  41e338:	ldr	x0, [sp, #24]
  41e33c:	ldr	x0, [x0]
  41e340:	bl	406930 <free@plt>
  41e344:	nop
  41e348:	ldp	x29, x30, [sp], #32
  41e34c:	ret

000000000041e350 <strempty>:
  41e350:	sub	sp, sp, #0x10
  41e354:	str	x0, [sp, #8]
  41e358:	ldr	x0, [sp, #8]
  41e35c:	cmp	x0, #0x0
  41e360:	b.ne	41e36c <strempty+0x1c>  // b.any
  41e364:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e368:	add	x0, x0, #0xf58
  41e36c:	add	sp, sp, #0x10
  41e370:	ret

000000000041e374 <server_forward_wall>:
  41e374:	stp	x29, x30, [sp, #-128]!
  41e378:	mov	x29, sp
  41e37c:	str	x19, [sp, #16]
  41e380:	str	x0, [sp, #72]
  41e384:	str	w1, [sp, #68]
  41e388:	str	x2, [sp, #56]
  41e38c:	str	x3, [sp, #48]
  41e390:	str	x4, [sp, #40]
  41e394:	adrp	x0, 441000 <wordlist.9471+0x208>
  41e398:	ldr	x0, [x0, #4064]
  41e39c:	ldr	x1, [x0]
  41e3a0:	str	x1, [sp, #120]
  41e3a4:	mov	x1, #0x0                   	// #0
  41e3a8:	str	xzr, [sp, #96]
  41e3ac:	str	xzr, [sp, #104]
  41e3b0:	ldr	x0, [sp, #72]
  41e3b4:	cmp	x0, #0x0
  41e3b8:	cset	w0, eq  // eq = none
  41e3bc:	and	w0, w0, #0xff
  41e3c0:	and	x0, x0, #0xff
  41e3c4:	cmp	x0, #0x0
  41e3c8:	b.eq	41e3f4 <server_forward_wall+0x80>  // b.none
  41e3cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e3d0:	add	x1, x0, #0xf63
  41e3d4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e3d8:	add	x4, x0, #0xfe0
  41e3dc:	mov	w3, #0x16                  	// #22
  41e3e0:	mov	x2, x1
  41e3e4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e3e8:	add	x1, x0, #0xf80
  41e3ec:	mov	w0, #0x0                   	// #0
  41e3f0:	bl	405fd0 <log_assert_failed_realm@plt>
  41e3f4:	ldr	x0, [sp, #48]
  41e3f8:	cmp	x0, #0x0
  41e3fc:	cset	w0, eq  // eq = none
  41e400:	and	w0, w0, #0xff
  41e404:	and	x0, x0, #0xff
  41e408:	cmp	x0, #0x0
  41e40c:	b.eq	41e438 <server_forward_wall+0xc4>  // b.none
  41e410:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e414:	add	x1, x0, #0xf63
  41e418:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e41c:	add	x4, x0, #0xfe0
  41e420:	mov	w3, #0x17                  	// #23
  41e424:	mov	x2, x1
  41e428:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e42c:	add	x1, x0, #0xf88
  41e430:	mov	w0, #0x0                   	// #0
  41e434:	bl	405fd0 <log_assert_failed_realm@plt>
  41e438:	ldr	w0, [sp, #68]
  41e43c:	and	w1, w0, #0x7
  41e440:	ldr	x0, [sp, #72]
  41e444:	ldr	w0, [x0, #552]
  41e448:	cmp	w1, w0
  41e44c:	b.le	41e458 <server_forward_wall+0xe4>
  41e450:	mov	w19, #0x0                   	// #0
  41e454:	b	41e604 <server_forward_wall+0x290>
  41e458:	ldr	x0, [sp, #40]
  41e45c:	cmp	x0, #0x0
  41e460:	b.eq	41e4f4 <server_forward_wall+0x180>  // b.none
  41e464:	ldr	x0, [sp, #56]
  41e468:	cmp	x0, #0x0
  41e46c:	b.ne	41e488 <server_forward_wall+0x114>  // b.any
  41e470:	ldr	x0, [sp, #40]
  41e474:	ldr	w0, [x0]
  41e478:	add	x1, sp, #0x60
  41e47c:	bl	406280 <get_process_comm@plt>
  41e480:	ldr	x0, [sp, #96]
  41e484:	str	x0, [sp, #56]
  41e488:	ldr	x0, [sp, #56]
  41e48c:	bl	41e350 <strempty>
  41e490:	mov	x1, x0
  41e494:	ldr	x0, [sp, #40]
  41e498:	ldr	w0, [x0]
  41e49c:	add	x5, sp, #0x68
  41e4a0:	ldr	x4, [sp, #48]
  41e4a4:	mov	w3, w0
  41e4a8:	mov	x2, x1
  41e4ac:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e4b0:	add	x1, x0, #0xf90
  41e4b4:	mov	x0, x5
  41e4b8:	bl	406830 <asprintf@plt>
  41e4bc:	cmp	w0, #0x0
  41e4c0:	b.ge	41e4e8 <server_forward_wall+0x174>  // b.tcont
  41e4c4:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e4c8:	add	x1, x0, #0xf63
  41e4cc:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e4d0:	add	x3, x0, #0xff8
  41e4d4:	mov	w2, #0x23                  	// #35
  41e4d8:	mov	w0, #0x0                   	// #0
  41e4dc:	bl	406b70 <log_oom_internal@plt>
  41e4e0:	mov	w19, #0x0                   	// #0
  41e4e4:	b	41e604 <server_forward_wall+0x290>
  41e4e8:	ldr	x0, [sp, #104]
  41e4ec:	str	x0, [sp, #112]
  41e4f0:	b	41e55c <server_forward_wall+0x1e8>
  41e4f4:	ldr	x0, [sp, #56]
  41e4f8:	cmp	x0, #0x0
  41e4fc:	b.eq	41e554 <server_forward_wall+0x1e0>  // b.none
  41e500:	mov	x3, #0x0                   	// #0
  41e504:	ldr	x2, [sp, #48]
  41e508:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e50c:	add	x1, x0, #0xfa0
  41e510:	ldr	x0, [sp, #56]
  41e514:	bl	405f10 <strjoin_real@plt>
  41e518:	str	x0, [sp, #104]
  41e51c:	ldr	x0, [sp, #104]
  41e520:	str	x0, [sp, #112]
  41e524:	ldr	x0, [sp, #104]
  41e528:	cmp	x0, #0x0
  41e52c:	b.ne	41e55c <server_forward_wall+0x1e8>  // b.any
  41e530:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e534:	add	x1, x0, #0xf63
  41e538:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e53c:	add	x3, x0, #0xff8
  41e540:	mov	w2, #0x2d                  	// #45
  41e544:	mov	w0, #0x0                   	// #0
  41e548:	bl	406b70 <log_oom_internal@plt>
  41e54c:	mov	w19, #0x0                   	// #0
  41e550:	b	41e604 <server_forward_wall+0x290>
  41e554:	ldr	x0, [sp, #48]
  41e558:	str	x0, [sp, #112]
  41e55c:	mov	x4, #0x0                   	// #0
  41e560:	mov	x3, #0x0                   	// #0
  41e564:	mov	x2, #0x0                   	// #0
  41e568:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e56c:	add	x1, x0, #0xfa8
  41e570:	ldr	x0, [sp, #112]
  41e574:	bl	406600 <utmp_wall@plt>
  41e578:	str	w0, [sp, #80]
  41e57c:	ldr	w0, [sp, #80]
  41e580:	cmp	w0, #0x0
  41e584:	b.ge	41e600 <server_forward_wall+0x28c>  // b.tcont
  41e588:	mov	w0, #0x7                   	// #7
  41e58c:	str	w0, [sp, #84]
  41e590:	ldr	w0, [sp, #80]
  41e594:	str	w0, [sp, #88]
  41e598:	str	wzr, [sp, #92]
  41e59c:	ldr	w0, [sp, #92]
  41e5a0:	bl	406c30 <log_get_max_level_realm@plt>
  41e5a4:	mov	w1, w0
  41e5a8:	ldr	w0, [sp, #84]
  41e5ac:	and	w0, w0, #0x7
  41e5b0:	cmp	w1, w0
  41e5b4:	b.lt	41e5f8 <server_forward_wall+0x284>  // b.tstop
  41e5b8:	ldr	w0, [sp, #92]
  41e5bc:	lsl	w1, w0, #10
  41e5c0:	ldr	w0, [sp, #84]
  41e5c4:	orr	w6, w1, w0
  41e5c8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e5cc:	add	x1, x0, #0xf63
  41e5d0:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e5d4:	add	x5, x0, #0xfc0
  41e5d8:	adrp	x0, 42b000 <__func__.15991+0x530>
  41e5dc:	add	x4, x0, #0xff8
  41e5e0:	mov	w3, #0x35                  	// #53
  41e5e4:	mov	x2, x1
  41e5e8:	ldr	w1, [sp, #88]
  41e5ec:	mov	w0, w6
  41e5f0:	bl	406590 <log_internal_realm@plt>
  41e5f4:	b	41e600 <server_forward_wall+0x28c>
  41e5f8:	ldr	w0, [sp, #88]
  41e5fc:	cmp	w0, #0x0
  41e600:	mov	w19, #0x1                   	// #1
  41e604:	add	x0, sp, #0x68
  41e608:	bl	41e32c <freep>
  41e60c:	cmp	w19, #0x1
  41e610:	b.eq	41e61c <server_forward_wall+0x2a8>  // b.none
  41e614:	mov	w19, #0x0                   	// #0
  41e618:	b	41e620 <server_forward_wall+0x2ac>
  41e61c:	mov	w19, #0x1                   	// #1
  41e620:	add	x0, sp, #0x60
  41e624:	bl	41e32c <freep>
  41e628:	cmp	w19, #0x1
  41e62c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41e630:	ldr	x0, [x0, #4064]
  41e634:	ldr	x1, [sp, #120]
  41e638:	ldr	x0, [x0]
  41e63c:	eor	x0, x1, x0
  41e640:	cmp	x0, #0x0
  41e644:	b.eq	41e64c <server_forward_wall+0x2d8>  // b.none
  41e648:	bl	4063e0 <__stack_chk_fail@plt>
  41e64c:	ldr	x19, [sp, #16]
  41e650:	ldp	x29, x30, [sp], #128
  41e654:	ret

000000000041e658 <journald_gperf_hash>:
  41e658:	str	x19, [sp, #-16]!
  41e65c:	mov	w19, w1
  41e660:	sub	w1, w19, #0x9
  41e664:	cmp	w1, #0x8
  41e668:	b.ls	41e68c <journald_gperf_hash+0x34>  // b.plast
  41e66c:	add	x1, x0, #0x11
  41e670:	ldrb	w1, [x1]
  41e674:	mov	w3, w1
  41e678:	adrp	x1, 42c000 <__func__.10684+0x8>
  41e67c:	add	x2, x1, #0x2e8
  41e680:	sxtw	x1, w3
  41e684:	ldrb	w1, [x2, x1]
  41e688:	add	w19, w19, w1
  41e68c:	add	x0, x0, #0x8
  41e690:	ldrb	w0, [x0]
  41e694:	mov	w2, w0
  41e698:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e69c:	add	x1, x0, #0x2e8
  41e6a0:	sxtw	x0, w2
  41e6a4:	ldrb	w0, [x1, x0]
  41e6a8:	add	w19, w19, w0
  41e6ac:	nop
  41e6b0:	mov	w0, w19
  41e6b4:	ldr	x19, [sp], #16
  41e6b8:	ret

000000000041e6bc <journald_gperf_lookup>:
  41e6bc:	stp	x29, x30, [sp, #-48]!
  41e6c0:	mov	x29, sp
  41e6c4:	stp	x19, x20, [sp, #16]
  41e6c8:	str	x21, [sp, #32]
  41e6cc:	mov	x20, x0
  41e6d0:	mov	x0, x1
  41e6d4:	cmp	x0, #0x1c
  41e6d8:	b.hi	41e758 <journald_gperf_lookup+0x9c>  // b.pmore
  41e6dc:	cmp	x0, #0xb
  41e6e0:	b.ls	41e758 <journald_gperf_lookup+0x9c>  // b.plast
  41e6e4:	mov	x1, x0
  41e6e8:	mov	x0, x20
  41e6ec:	bl	41e658 <journald_gperf_hash>
  41e6f0:	mov	w21, w0
  41e6f4:	cmp	w21, #0x35
  41e6f8:	b.hi	41e758 <journald_gperf_lookup+0x9c>  // b.pmore
  41e6fc:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  41e700:	add	x1, x0, #0xdf8
  41e704:	mov	w0, w21
  41e708:	lsl	x0, x0, #5
  41e70c:	add	x0, x1, x0
  41e710:	ldr	x19, [x0]
  41e714:	cmp	x19, #0x0
  41e718:	b.eq	41e758 <journald_gperf_lookup+0x9c>  // b.none
  41e71c:	ldrb	w1, [x20]
  41e720:	ldrb	w0, [x19]
  41e724:	cmp	w1, w0
  41e728:	b.ne	41e758 <journald_gperf_lookup+0x9c>  // b.any
  41e72c:	add	x0, x20, #0x1
  41e730:	add	x1, x19, #0x1
  41e734:	bl	4066e0 <strcmp@plt>
  41e738:	cmp	w0, #0x0
  41e73c:	b.ne	41e758 <journald_gperf_lookup+0x9c>  // b.any
  41e740:	mov	w0, w21
  41e744:	lsl	x1, x0, #5
  41e748:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  41e74c:	add	x0, x0, #0xdf8
  41e750:	add	x0, x1, x0
  41e754:	b	41e75c <journald_gperf_lookup+0xa0>
  41e758:	mov	x0, #0x0                   	// #0
  41e75c:	ldp	x19, x20, [sp, #16]
  41e760:	ldr	x21, [sp, #32]
  41e764:	ldp	x29, x30, [sp], #48
  41e768:	ret

000000000041e76c <freep>:
  41e76c:	stp	x29, x30, [sp, #-32]!
  41e770:	mov	x29, sp
  41e774:	str	x0, [sp, #24]
  41e778:	ldr	x0, [sp, #24]
  41e77c:	ldr	x0, [x0]
  41e780:	bl	406930 <free@plt>
  41e784:	nop
  41e788:	ldp	x29, x30, [sp], #32
  41e78c:	ret

000000000041e790 <size_multiply_overflow>:
  41e790:	sub	sp, sp, #0x10
  41e794:	str	x0, [sp, #8]
  41e798:	str	x1, [sp]
  41e79c:	ldr	x0, [sp]
  41e7a0:	cmp	x0, #0x0
  41e7a4:	cset	w0, ne  // ne = any
  41e7a8:	and	w0, w0, #0xff
  41e7ac:	and	x0, x0, #0xff
  41e7b0:	cmp	x0, #0x0
  41e7b4:	b.eq	41e7f8 <size_multiply_overflow+0x68>  // b.none
  41e7b8:	mov	x2, #0x0                   	// #0
  41e7bc:	ldr	x1, [sp, #8]
  41e7c0:	ldr	x0, [sp]
  41e7c4:	umulh	x0, x1, x0
  41e7c8:	cmp	x0, #0x0
  41e7cc:	b.eq	41e7d4 <size_multiply_overflow+0x44>  // b.none
  41e7d0:	mov	x2, #0x1                   	// #1
  41e7d4:	mov	x0, x2
  41e7d8:	cmp	x0, #0x0
  41e7dc:	cset	w0, ne  // ne = any
  41e7e0:	and	w0, w0, #0xff
  41e7e4:	and	x0, x0, #0xff
  41e7e8:	cmp	x0, #0x0
  41e7ec:	b.eq	41e7f8 <size_multiply_overflow+0x68>  // b.none
  41e7f0:	mov	w0, #0x1                   	// #1
  41e7f4:	b	41e7fc <size_multiply_overflow+0x6c>
  41e7f8:	mov	w0, #0x0                   	// #0
  41e7fc:	and	w0, w0, #0x1
  41e800:	and	w0, w0, #0xff
  41e804:	add	sp, sp, #0x10
  41e808:	ret

000000000041e80c <malloc_multiply>:
  41e80c:	stp	x29, x30, [sp, #-32]!
  41e810:	mov	x29, sp
  41e814:	str	x0, [sp, #24]
  41e818:	str	x1, [sp, #16]
  41e81c:	ldr	x1, [sp, #16]
  41e820:	ldr	x0, [sp, #24]
  41e824:	bl	41e790 <size_multiply_overflow>
  41e828:	and	w0, w0, #0xff
  41e82c:	cmp	w0, #0x0
  41e830:	b.eq	41e83c <malloc_multiply+0x30>  // b.none
  41e834:	mov	x0, #0x0                   	// #0
  41e838:	b	41e858 <malloc_multiply+0x4c>
  41e83c:	ldr	x1, [sp, #24]
  41e840:	ldr	x0, [sp, #16]
  41e844:	mul	x0, x1, x0
  41e848:	cmp	x0, #0x0
  41e84c:	b.ne	41e854 <malloc_multiply+0x48>  // b.any
  41e850:	mov	x0, #0x1                   	// #1
  41e854:	bl	406520 <malloc@plt>
  41e858:	ldp	x29, x30, [sp], #32
  41e85c:	ret

000000000041e860 <isempty>:
  41e860:	sub	sp, sp, #0x10
  41e864:	str	x0, [sp, #8]
  41e868:	ldr	x0, [sp, #8]
  41e86c:	cmp	x0, #0x0
  41e870:	b.eq	41e884 <isempty+0x24>  // b.none
  41e874:	ldr	x0, [sp, #8]
  41e878:	ldrb	w0, [x0]
  41e87c:	cmp	w0, #0x0
  41e880:	b.ne	41e88c <isempty+0x2c>  // b.any
  41e884:	mov	w0, #0x1                   	// #1
  41e888:	b	41e890 <isempty+0x30>
  41e88c:	mov	w0, #0x0                   	// #0
  41e890:	and	w0, w0, #0x1
  41e894:	and	w0, w0, #0xff
  41e898:	add	sp, sp, #0x10
  41e89c:	ret

000000000041e8a0 <startswith>:
  41e8a0:	stp	x29, x30, [sp, #-48]!
  41e8a4:	mov	x29, sp
  41e8a8:	str	x0, [sp, #24]
  41e8ac:	str	x1, [sp, #16]
  41e8b0:	ldr	x0, [sp, #16]
  41e8b4:	bl	406af0 <strlen@plt>
  41e8b8:	str	x0, [sp, #40]
  41e8bc:	ldr	x2, [sp, #40]
  41e8c0:	ldr	x1, [sp, #16]
  41e8c4:	ldr	x0, [sp, #24]
  41e8c8:	bl	406110 <strncmp@plt>
  41e8cc:	cmp	w0, #0x0
  41e8d0:	b.ne	41e8e4 <startswith+0x44>  // b.any
  41e8d4:	ldr	x1, [sp, #24]
  41e8d8:	ldr	x0, [sp, #40]
  41e8dc:	add	x0, x1, x0
  41e8e0:	b	41e8e8 <startswith+0x48>
  41e8e4:	mov	x0, #0x0                   	// #0
  41e8e8:	ldp	x29, x30, [sp], #48
  41e8ec:	ret

000000000041e8f0 <setsockopt_int>:
  41e8f0:	stp	x29, x30, [sp, #-32]!
  41e8f4:	mov	x29, sp
  41e8f8:	str	w0, [sp, #28]
  41e8fc:	str	w1, [sp, #24]
  41e900:	str	w2, [sp, #20]
  41e904:	str	w3, [sp, #16]
  41e908:	add	x0, sp, #0x10
  41e90c:	mov	w4, #0x4                   	// #4
  41e910:	mov	x3, x0
  41e914:	ldr	w2, [sp, #20]
  41e918:	ldr	w1, [sp, #24]
  41e91c:	ldr	w0, [sp, #28]
  41e920:	bl	4067c0 <setsockopt@plt>
  41e924:	cmp	w0, #0x0
  41e928:	b.ge	41e93c <setsockopt_int+0x4c>  // b.tcont
  41e92c:	bl	4062e0 <__errno_location@plt>
  41e930:	ldr	w0, [x0]
  41e934:	neg	w0, w0
  41e938:	b	41e940 <setsockopt_int+0x50>
  41e93c:	mov	w0, #0x0                   	// #0
  41e940:	ldp	x29, x30, [sp], #32
  41e944:	ret

000000000041e948 <map_simple_field>:
  41e948:	stp	x29, x30, [sp, #-128]!
  41e94c:	mov	x29, sp
  41e950:	str	x19, [sp, #16]
  41e954:	str	x0, [sp, #72]
  41e958:	str	x1, [sp, #64]
  41e95c:	str	x2, [sp, #56]
  41e960:	str	x3, [sp, #48]
  41e964:	str	x4, [sp, #40]
  41e968:	adrp	x0, 441000 <wordlist.9471+0x208>
  41e96c:	ldr	x0, [x0, #4064]
  41e970:	ldr	x1, [x0]
  41e974:	str	x1, [sp, #120]
  41e978:	mov	x1, #0x0                   	// #0
  41e97c:	str	xzr, [sp, #88]
  41e980:	str	xzr, [sp, #104]
  41e984:	str	xzr, [sp, #96]
  41e988:	ldr	x0, [sp, #72]
  41e98c:	cmp	x0, #0x0
  41e990:	cset	w0, eq  // eq = none
  41e994:	and	w0, w0, #0xff
  41e998:	and	x0, x0, #0xff
  41e99c:	cmp	x0, #0x0
  41e9a0:	b.eq	41e9cc <map_simple_field+0x84>  // b.none
  41e9a4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e9a8:	add	x1, x0, #0x3eb
  41e9ac:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e9b0:	add	x4, x0, #0x9d8
  41e9b4:	mov	w3, #0x17                  	// #23
  41e9b8:	mov	x2, x1
  41e9bc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e9c0:	add	x1, x0, #0x408
  41e9c4:	mov	w0, #0x0                   	// #0
  41e9c8:	bl	405fd0 <log_assert_failed_realm@plt>
  41e9cc:	ldr	x0, [sp, #64]
  41e9d0:	cmp	x0, #0x0
  41e9d4:	cset	w0, eq  // eq = none
  41e9d8:	and	w0, w0, #0xff
  41e9dc:	and	x0, x0, #0xff
  41e9e0:	cmp	x0, #0x0
  41e9e4:	b.eq	41ea10 <map_simple_field+0xc8>  // b.none
  41e9e8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e9ec:	add	x1, x0, #0x3eb
  41e9f0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41e9f4:	add	x4, x0, #0x9d8
  41e9f8:	mov	w3, #0x18                  	// #24
  41e9fc:	mov	x2, x1
  41ea00:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea04:	add	x1, x0, #0x410
  41ea08:	mov	w0, #0x0                   	// #0
  41ea0c:	bl	405fd0 <log_assert_failed_realm@plt>
  41ea10:	ldr	x0, [sp, #56]
  41ea14:	cmp	x0, #0x0
  41ea18:	cset	w0, eq  // eq = none
  41ea1c:	and	w0, w0, #0xff
  41ea20:	and	x0, x0, #0xff
  41ea24:	cmp	x0, #0x0
  41ea28:	b.eq	41ea54 <map_simple_field+0x10c>  // b.none
  41ea2c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea30:	add	x1, x0, #0x3eb
  41ea34:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea38:	add	x4, x0, #0x9d8
  41ea3c:	mov	w3, #0x19                  	// #25
  41ea40:	mov	x2, x1
  41ea44:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea48:	add	x1, x0, #0x418
  41ea4c:	mov	w0, #0x0                   	// #0
  41ea50:	bl	405fd0 <log_assert_failed_realm@plt>
  41ea54:	ldr	x0, [sp, #40]
  41ea58:	cmp	x0, #0x0
  41ea5c:	cset	w0, eq  // eq = none
  41ea60:	and	w0, w0, #0xff
  41ea64:	and	x0, x0, #0xff
  41ea68:	cmp	x0, #0x0
  41ea6c:	b.eq	41ea98 <map_simple_field+0x150>  // b.none
  41ea70:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea74:	add	x1, x0, #0x3eb
  41ea78:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea7c:	add	x4, x0, #0x9d8
  41ea80:	mov	w3, #0x1a                  	// #26
  41ea84:	mov	x2, x1
  41ea88:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ea8c:	add	x1, x0, #0x420
  41ea90:	mov	w0, #0x0                   	// #0
  41ea94:	bl	405fd0 <log_assert_failed_realm@plt>
  41ea98:	ldr	x0, [sp, #72]
  41ea9c:	bl	406af0 <strlen@plt>
  41eaa0:	str	x0, [sp, #104]
  41eaa4:	ldr	x0, [sp, #104]
  41eaa8:	add	x0, x0, #0x1
  41eaac:	str	x0, [sp, #96]
  41eab0:	ldr	x0, [sp, #96]
  41eab4:	bl	406520 <malloc@plt>
  41eab8:	str	x0, [sp, #88]
  41eabc:	ldr	x0, [sp, #88]
  41eac0:	cmp	x0, #0x0
  41eac4:	b.ne	41ead0 <map_simple_field+0x188>  // b.any
  41eac8:	mov	w19, #0xfffffff4            	// #-12
  41eacc:	b	41ec08 <map_simple_field+0x2c0>
  41ead0:	ldr	x0, [sp, #88]
  41ead4:	ldr	x2, [sp, #104]
  41ead8:	ldr	x1, [sp, #72]
  41eadc:	bl	405e90 <memcpy@plt>
  41eae0:	ldr	x0, [sp, #64]
  41eae4:	ldr	x0, [x0]
  41eae8:	str	x0, [sp, #112]
  41eaec:	b	41eb44 <map_simple_field+0x1fc>
  41eaf0:	ldr	x0, [sp, #104]
  41eaf4:	add	x2, x0, #0x2
  41eaf8:	add	x1, sp, #0x60
  41eafc:	add	x0, sp, #0x58
  41eb00:	mov	x3, #0x1                   	// #1
  41eb04:	bl	406160 <greedy_realloc@plt>
  41eb08:	cmp	x0, #0x0
  41eb0c:	b.ne	41eb18 <map_simple_field+0x1d0>  // b.any
  41eb10:	mov	w19, #0xfffffff4            	// #-12
  41eb14:	b	41ec08 <map_simple_field+0x2c0>
  41eb18:	ldr	x1, [sp, #88]
  41eb1c:	ldr	x0, [sp, #104]
  41eb20:	add	x2, x0, #0x1
  41eb24:	str	x2, [sp, #104]
  41eb28:	add	x0, x1, x0
  41eb2c:	ldr	x1, [sp, #112]
  41eb30:	ldrb	w1, [x1]
  41eb34:	strb	w1, [x0]
  41eb38:	ldr	x0, [sp, #112]
  41eb3c:	add	x0, x0, #0x1
  41eb40:	str	x0, [sp, #112]
  41eb44:	strb	wzr, [sp, #87]
  41eb48:	ldr	x0, [sp, #112]
  41eb4c:	ldrb	w0, [x0]
  41eb50:	cmp	w0, #0x0
  41eb54:	b.eq	41eb60 <map_simple_field+0x218>  // b.none
  41eb58:	cmp	w0, #0x20
  41eb5c:	b.ne	41eb68 <map_simple_field+0x220>  // b.any
  41eb60:	mov	w0, #0x1                   	// #1
  41eb64:	strb	w0, [sp, #87]
  41eb68:	nop
  41eb6c:	ldrb	w0, [sp, #87]
  41eb70:	eor	w0, w0, #0x1
  41eb74:	and	w0, w0, #0xff
  41eb78:	cmp	w0, #0x0
  41eb7c:	b.ne	41eaf0 <map_simple_field+0x1a8>  // b.any
  41eb80:	ldr	x1, [sp, #88]
  41eb84:	ldr	x0, [sp, #104]
  41eb88:	add	x0, x1, x0
  41eb8c:	strb	wzr, [x0]
  41eb90:	ldr	x0, [sp, #40]
  41eb94:	ldr	x0, [x0]
  41eb98:	add	x0, x0, #0x1
  41eb9c:	mov	x3, #0x10                  	// #16
  41eba0:	mov	x2, x0
  41eba4:	ldr	x1, [sp, #48]
  41eba8:	ldr	x0, [sp, #56]
  41ebac:	bl	406160 <greedy_realloc@plt>
  41ebb0:	cmp	x0, #0x0
  41ebb4:	b.ne	41ebc0 <map_simple_field+0x278>  // b.any
  41ebb8:	mov	w19, #0xfffffff4            	// #-12
  41ebbc:	b	41ec08 <map_simple_field+0x2c0>
  41ebc0:	ldr	x0, [sp, #56]
  41ebc4:	ldr	x1, [x0]
  41ebc8:	ldr	x0, [sp, #40]
  41ebcc:	ldr	x0, [x0]
  41ebd0:	add	x3, x0, #0x1
  41ebd4:	ldr	x2, [sp, #40]
  41ebd8:	str	x3, [x2]
  41ebdc:	lsl	x0, x0, #4
  41ebe0:	add	x0, x1, x0
  41ebe4:	ldr	x1, [sp, #88]
  41ebe8:	str	x1, [x0]
  41ebec:	ldr	x1, [sp, #104]
  41ebf0:	str	x1, [x0, #8]
  41ebf4:	ldr	x0, [sp, #64]
  41ebf8:	ldr	x1, [sp, #112]
  41ebfc:	str	x1, [x0]
  41ec00:	str	xzr, [sp, #88]
  41ec04:	mov	w19, #0x1                   	// #1
  41ec08:	add	x0, sp, #0x58
  41ec0c:	bl	41e76c <freep>
  41ec10:	mov	w1, w19
  41ec14:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ec18:	ldr	x0, [x0, #4064]
  41ec1c:	ldr	x2, [sp, #120]
  41ec20:	ldr	x0, [x0]
  41ec24:	eor	x0, x2, x0
  41ec28:	cmp	x0, #0x0
  41ec2c:	b.eq	41ec34 <map_simple_field+0x2ec>  // b.none
  41ec30:	bl	4063e0 <__stack_chk_fail@plt>
  41ec34:	mov	w0, w1
  41ec38:	ldr	x19, [sp, #16]
  41ec3c:	ldp	x29, x30, [sp], #128
  41ec40:	ret

000000000041ec44 <map_string_field_internal>:
  41ec44:	stp	x29, x30, [sp, #-144]!
  41ec48:	mov	x29, sp
  41ec4c:	str	x19, [sp, #16]
  41ec50:	str	x0, [sp, #72]
  41ec54:	str	x1, [sp, #64]
  41ec58:	str	x2, [sp, #56]
  41ec5c:	str	x3, [sp, #48]
  41ec60:	str	x4, [sp, #40]
  41ec64:	strb	w5, [sp, #39]
  41ec68:	adrp	x0, 441000 <wordlist.9471+0x208>
  41ec6c:	ldr	x0, [x0, #4064]
  41ec70:	ldr	x1, [x0]
  41ec74:	str	x1, [sp, #136]
  41ec78:	mov	x1, #0x0                   	// #0
  41ec7c:	str	xzr, [sp, #96]
  41ec80:	ldr	x0, [sp, #72]
  41ec84:	cmp	x0, #0x0
  41ec88:	cset	w0, eq  // eq = none
  41ec8c:	and	w0, w0, #0xff
  41ec90:	and	x0, x0, #0xff
  41ec94:	cmp	x0, #0x0
  41ec98:	b.eq	41ecc4 <map_string_field_internal+0x80>  // b.none
  41ec9c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41eca0:	add	x1, x0, #0x3eb
  41eca4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41eca8:	add	x4, x0, #0x9f0
  41ecac:	mov	w3, #0x3c                  	// #60
  41ecb0:	mov	x2, x1
  41ecb4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ecb8:	add	x1, x0, #0x408
  41ecbc:	mov	w0, #0x0                   	// #0
  41ecc0:	bl	405fd0 <log_assert_failed_realm@plt>
  41ecc4:	ldr	x0, [sp, #64]
  41ecc8:	cmp	x0, #0x0
  41eccc:	cset	w0, eq  // eq = none
  41ecd0:	and	w0, w0, #0xff
  41ecd4:	and	x0, x0, #0xff
  41ecd8:	cmp	x0, #0x0
  41ecdc:	b.eq	41ed08 <map_string_field_internal+0xc4>  // b.none
  41ece0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ece4:	add	x1, x0, #0x3eb
  41ece8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ecec:	add	x4, x0, #0x9f0
  41ecf0:	mov	w3, #0x3d                  	// #61
  41ecf4:	mov	x2, x1
  41ecf8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ecfc:	add	x1, x0, #0x410
  41ed00:	mov	w0, #0x0                   	// #0
  41ed04:	bl	405fd0 <log_assert_failed_realm@plt>
  41ed08:	ldr	x0, [sp, #56]
  41ed0c:	cmp	x0, #0x0
  41ed10:	cset	w0, eq  // eq = none
  41ed14:	and	w0, w0, #0xff
  41ed18:	and	x0, x0, #0xff
  41ed1c:	cmp	x0, #0x0
  41ed20:	b.eq	41ed4c <map_string_field_internal+0x108>  // b.none
  41ed24:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed28:	add	x1, x0, #0x3eb
  41ed2c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed30:	add	x4, x0, #0x9f0
  41ed34:	mov	w3, #0x3e                  	// #62
  41ed38:	mov	x2, x1
  41ed3c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed40:	add	x1, x0, #0x418
  41ed44:	mov	w0, #0x0                   	// #0
  41ed48:	bl	405fd0 <log_assert_failed_realm@plt>
  41ed4c:	ldr	x0, [sp, #40]
  41ed50:	cmp	x0, #0x0
  41ed54:	cset	w0, eq  // eq = none
  41ed58:	and	w0, w0, #0xff
  41ed5c:	and	x0, x0, #0xff
  41ed60:	cmp	x0, #0x0
  41ed64:	b.eq	41ed90 <map_string_field_internal+0x14c>  // b.none
  41ed68:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed6c:	add	x1, x0, #0x3eb
  41ed70:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed74:	add	x4, x0, #0x9f0
  41ed78:	mov	w3, #0x3f                  	// #63
  41ed7c:	mov	x2, x1
  41ed80:	adrp	x0, 42c000 <__func__.10684+0x8>
  41ed84:	add	x1, x0, #0x420
  41ed88:	mov	w0, #0x0                   	// #0
  41ed8c:	bl	405fd0 <log_assert_failed_realm@plt>
  41ed90:	ldr	x0, [sp, #64]
  41ed94:	ldr	x0, [x0]
  41ed98:	ldrb	w0, [x0]
  41ed9c:	cmp	w0, #0x22
  41eda0:	b.ne	41ee5c <map_string_field_internal+0x218>  // b.any
  41eda4:	ldr	x0, [sp, #64]
  41eda8:	ldr	x0, [x0]
  41edac:	add	x0, x0, #0x1
  41edb0:	str	x0, [sp, #128]
  41edb4:	mov	w1, #0x22                  	// #34
  41edb8:	ldr	x0, [sp, #128]
  41edbc:	bl	406800 <strchr@plt>
  41edc0:	str	x0, [sp, #112]
  41edc4:	ldr	x0, [sp, #112]
  41edc8:	cmp	x0, #0x0
  41edcc:	b.ne	41edd8 <map_string_field_internal+0x194>  // b.any
  41edd0:	mov	w19, #0x0                   	// #0
  41edd4:	b	41f080 <map_string_field_internal+0x43c>
  41edd8:	ldr	x0, [sp, #72]
  41eddc:	bl	406af0 <strlen@plt>
  41ede0:	mov	x2, x0
  41ede4:	ldr	x1, [sp, #112]
  41ede8:	ldr	x0, [sp, #128]
  41edec:	sub	x0, x1, x0
  41edf0:	add	x0, x2, x0
  41edf4:	str	x0, [sp, #120]
  41edf8:	ldr	x0, [sp, #120]
  41edfc:	add	x0, x0, #0x1
  41ee00:	bl	406520 <malloc@plt>
  41ee04:	str	x0, [sp, #96]
  41ee08:	ldr	x0, [sp, #96]
  41ee0c:	cmp	x0, #0x0
  41ee10:	b.ne	41ee1c <map_string_field_internal+0x1d8>  // b.any
  41ee14:	mov	w19, #0xfffffff4            	// #-12
  41ee18:	b	41f080 <map_string_field_internal+0x43c>
  41ee1c:	ldr	x0, [sp, #96]
  41ee20:	ldr	x1, [sp, #72]
  41ee24:	bl	405bc0 <stpcpy@plt>
  41ee28:	mov	x3, x0
  41ee2c:	ldr	x1, [sp, #112]
  41ee30:	ldr	x0, [sp, #128]
  41ee34:	sub	x0, x1, x0
  41ee38:	mov	x2, x0
  41ee3c:	ldr	x1, [sp, #128]
  41ee40:	mov	x0, x3
  41ee44:	bl	405c80 <mempcpy@plt>
  41ee48:	strb	wzr, [x0]
  41ee4c:	ldr	x0, [sp, #112]
  41ee50:	add	x0, x0, #0x1
  41ee54:	str	x0, [sp, #112]
  41ee58:	b	41f008 <map_string_field_internal+0x3c4>
  41ee5c:	ldr	x0, [sp, #64]
  41ee60:	ldr	x0, [x0]
  41ee64:	ldrb	w0, [x0]
  41ee68:	bl	405b80 <unhexchar@plt>
  41ee6c:	cmp	w0, #0x0
  41ee70:	b.lt	41f000 <map_string_field_internal+0x3bc>  // b.tstop
  41ee74:	str	xzr, [sp, #104]
  41ee78:	ldr	x0, [sp, #72]
  41ee7c:	bl	406af0 <strlen@plt>
  41ee80:	str	x0, [sp, #120]
  41ee84:	ldr	x0, [sp, #120]
  41ee88:	add	x0, x0, #0x2
  41ee8c:	str	x0, [sp, #104]
  41ee90:	ldr	x0, [sp, #104]
  41ee94:	bl	406520 <malloc@plt>
  41ee98:	str	x0, [sp, #96]
  41ee9c:	ldr	x0, [sp, #96]
  41eea0:	cmp	x0, #0x0
  41eea4:	b.ne	41eeb0 <map_string_field_internal+0x26c>  // b.any
  41eea8:	mov	w19, #0xfffffff4            	// #-12
  41eeac:	b	41f080 <map_string_field_internal+0x43c>
  41eeb0:	ldr	x0, [sp, #96]
  41eeb4:	ldr	x2, [sp, #120]
  41eeb8:	ldr	x1, [sp, #72]
  41eebc:	bl	405e90 <memcpy@plt>
  41eec0:	ldr	x0, [sp, #64]
  41eec4:	ldr	x0, [x0]
  41eec8:	str	x0, [sp, #112]
  41eecc:	b	41efb0 <map_string_field_internal+0x36c>
  41eed0:	ldr	x0, [sp, #112]
  41eed4:	ldrb	w0, [x0]
  41eed8:	bl	405b80 <unhexchar@plt>
  41eedc:	str	w0, [sp, #88]
  41eee0:	ldr	w0, [sp, #88]
  41eee4:	cmp	w0, #0x0
  41eee8:	b.ge	41eef4 <map_string_field_internal+0x2b0>  // b.tcont
  41eeec:	mov	w19, #0x0                   	// #0
  41eef0:	b	41f080 <map_string_field_internal+0x43c>
  41eef4:	ldr	x0, [sp, #112]
  41eef8:	add	x0, x0, #0x1
  41eefc:	ldrb	w0, [x0]
  41ef00:	bl	405b80 <unhexchar@plt>
  41ef04:	str	w0, [sp, #92]
  41ef08:	ldr	w0, [sp, #92]
  41ef0c:	cmp	w0, #0x0
  41ef10:	b.ge	41ef1c <map_string_field_internal+0x2d8>  // b.tcont
  41ef14:	mov	w19, #0x0                   	// #0
  41ef18:	b	41f080 <map_string_field_internal+0x43c>
  41ef1c:	ldr	w0, [sp, #88]
  41ef20:	and	w0, w0, #0xff
  41ef24:	lsl	w0, w0, #4
  41ef28:	sxtb	w1, w0
  41ef2c:	ldr	w0, [sp, #92]
  41ef30:	sxtb	w0, w0
  41ef34:	orr	w0, w1, w0
  41ef38:	sxtb	w0, w0
  41ef3c:	strb	w0, [sp, #87]
  41ef40:	ldrb	w0, [sp, #39]
  41ef44:	cmp	w0, #0x0
  41ef48:	b.eq	41ef60 <map_string_field_internal+0x31c>  // b.none
  41ef4c:	ldrb	w0, [sp, #87]
  41ef50:	cmp	w0, #0x1f
  41ef54:	b.hi	41ef60 <map_string_field_internal+0x31c>  // b.pmore
  41ef58:	mov	w0, #0x20                  	// #32
  41ef5c:	strb	w0, [sp, #87]
  41ef60:	ldr	x0, [sp, #120]
  41ef64:	add	x2, x0, #0x2
  41ef68:	add	x1, sp, #0x68
  41ef6c:	add	x0, sp, #0x60
  41ef70:	mov	x3, #0x1                   	// #1
  41ef74:	bl	406160 <greedy_realloc@plt>
  41ef78:	cmp	x0, #0x0
  41ef7c:	b.ne	41ef88 <map_string_field_internal+0x344>  // b.any
  41ef80:	mov	w19, #0xfffffff4            	// #-12
  41ef84:	b	41f080 <map_string_field_internal+0x43c>
  41ef88:	ldr	x1, [sp, #96]
  41ef8c:	ldr	x0, [sp, #120]
  41ef90:	add	x2, x0, #0x1
  41ef94:	str	x2, [sp, #120]
  41ef98:	add	x0, x1, x0
  41ef9c:	ldrb	w1, [sp, #87]
  41efa0:	strb	w1, [x0]
  41efa4:	ldr	x0, [sp, #112]
  41efa8:	add	x0, x0, #0x2
  41efac:	str	x0, [sp, #112]
  41efb0:	strb	wzr, [sp, #86]
  41efb4:	ldr	x0, [sp, #112]
  41efb8:	ldrb	w0, [x0]
  41efbc:	cmp	w0, #0x0
  41efc0:	b.eq	41efcc <map_string_field_internal+0x388>  // b.none
  41efc4:	cmp	w0, #0x20
  41efc8:	b.ne	41efd4 <map_string_field_internal+0x390>  // b.any
  41efcc:	mov	w0, #0x1                   	// #1
  41efd0:	strb	w0, [sp, #86]
  41efd4:	nop
  41efd8:	ldrb	w0, [sp, #86]
  41efdc:	eor	w0, w0, #0x1
  41efe0:	and	w0, w0, #0xff
  41efe4:	cmp	w0, #0x0
  41efe8:	b.ne	41eed0 <map_string_field_internal+0x28c>  // b.any
  41efec:	ldr	x1, [sp, #96]
  41eff0:	ldr	x0, [sp, #120]
  41eff4:	add	x0, x1, x0
  41eff8:	strb	wzr, [x0]
  41effc:	b	41f008 <map_string_field_internal+0x3c4>
  41f000:	mov	w19, #0x0                   	// #0
  41f004:	b	41f080 <map_string_field_internal+0x43c>
  41f008:	ldr	x0, [sp, #40]
  41f00c:	ldr	x0, [x0]
  41f010:	add	x0, x0, #0x1
  41f014:	mov	x3, #0x10                  	// #16
  41f018:	mov	x2, x0
  41f01c:	ldr	x1, [sp, #48]
  41f020:	ldr	x0, [sp, #56]
  41f024:	bl	406160 <greedy_realloc@plt>
  41f028:	cmp	x0, #0x0
  41f02c:	b.ne	41f038 <map_string_field_internal+0x3f4>  // b.any
  41f030:	mov	w19, #0xfffffff4            	// #-12
  41f034:	b	41f080 <map_string_field_internal+0x43c>
  41f038:	ldr	x0, [sp, #56]
  41f03c:	ldr	x1, [x0]
  41f040:	ldr	x0, [sp, #40]
  41f044:	ldr	x0, [x0]
  41f048:	add	x3, x0, #0x1
  41f04c:	ldr	x2, [sp, #40]
  41f050:	str	x3, [x2]
  41f054:	lsl	x0, x0, #4
  41f058:	add	x0, x1, x0
  41f05c:	ldr	x1, [sp, #96]
  41f060:	str	x1, [x0]
  41f064:	ldr	x1, [sp, #120]
  41f068:	str	x1, [x0, #8]
  41f06c:	ldr	x0, [sp, #64]
  41f070:	ldr	x1, [sp, #112]
  41f074:	str	x1, [x0]
  41f078:	str	xzr, [sp, #96]
  41f07c:	mov	w19, #0x1                   	// #1
  41f080:	add	x0, sp, #0x60
  41f084:	bl	41e76c <freep>
  41f088:	mov	w1, w19
  41f08c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f090:	ldr	x0, [x0, #4064]
  41f094:	ldr	x2, [sp, #136]
  41f098:	ldr	x0, [x0]
  41f09c:	eor	x0, x2, x0
  41f0a0:	cmp	x0, #0x0
  41f0a4:	b.eq	41f0ac <map_string_field_internal+0x468>  // b.none
  41f0a8:	bl	4063e0 <__stack_chk_fail@plt>
  41f0ac:	mov	w0, w1
  41f0b0:	ldr	x19, [sp, #16]
  41f0b4:	ldp	x29, x30, [sp], #144
  41f0b8:	ret

000000000041f0bc <map_string_field>:
  41f0bc:	stp	x29, x30, [sp, #-64]!
  41f0c0:	mov	x29, sp
  41f0c4:	str	x0, [sp, #56]
  41f0c8:	str	x1, [sp, #48]
  41f0cc:	str	x2, [sp, #40]
  41f0d0:	str	x3, [sp, #32]
  41f0d4:	str	x4, [sp, #24]
  41f0d8:	mov	w5, #0x0                   	// #0
  41f0dc:	ldr	x4, [sp, #24]
  41f0e0:	ldr	x3, [sp, #32]
  41f0e4:	ldr	x2, [sp, #40]
  41f0e8:	ldr	x1, [sp, #48]
  41f0ec:	ldr	x0, [sp, #56]
  41f0f0:	bl	41ec44 <map_string_field_internal>
  41f0f4:	ldp	x29, x30, [sp], #64
  41f0f8:	ret

000000000041f0fc <map_string_field_printable>:
  41f0fc:	stp	x29, x30, [sp, #-64]!
  41f100:	mov	x29, sp
  41f104:	str	x0, [sp, #56]
  41f108:	str	x1, [sp, #48]
  41f10c:	str	x2, [sp, #40]
  41f110:	str	x3, [sp, #32]
  41f114:	str	x4, [sp, #24]
  41f118:	mov	w5, #0x1                   	// #1
  41f11c:	ldr	x4, [sp, #24]
  41f120:	ldr	x3, [sp, #32]
  41f124:	ldr	x2, [sp, #40]
  41f128:	ldr	x1, [sp, #48]
  41f12c:	ldr	x0, [sp, #56]
  41f130:	bl	41ec44 <map_string_field_internal>
  41f134:	ldp	x29, x30, [sp], #64
  41f138:	ret

000000000041f13c <map_generic_field>:
  41f13c:	stp	x29, x30, [sp, #-128]!
  41f140:	mov	x29, sp
  41f144:	str	x0, [x29, #56]
  41f148:	str	x1, [x29, #48]
  41f14c:	str	x2, [x29, #40]
  41f150:	str	x3, [x29, #32]
  41f154:	str	x4, [x29, #24]
  41f158:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f15c:	ldr	x0, [x0, #4064]
  41f160:	ldr	x1, [x0]
  41f164:	str	x1, [x29, #120]
  41f168:	mov	x1, #0x0                   	// #0
  41f16c:	ldr	x0, [x29, #48]
  41f170:	ldr	x0, [x0]
  41f174:	str	x0, [x29, #80]
  41f178:	b	41f278 <map_generic_field+0x13c>
  41f17c:	strb	wzr, [x29, #73]
  41f180:	ldr	x0, [x29, #80]
  41f184:	ldrb	w0, [x0]
  41f188:	cmp	w0, #0x0
  41f18c:	b.eq	41f198 <map_generic_field+0x5c>  // b.none
  41f190:	cmp	w0, #0x20
  41f194:	b.ne	41f1a0 <map_generic_field+0x64>  // b.any
  41f198:	mov	w0, #0x1                   	// #1
  41f19c:	strb	w0, [x29, #73]
  41f1a0:	nop
  41f1a4:	ldrb	w0, [x29, #73]
  41f1a8:	cmp	w0, #0x0
  41f1ac:	b.eq	41f1b8 <map_generic_field+0x7c>  // b.none
  41f1b0:	mov	w0, #0x0                   	// #0
  41f1b4:	b	41f4ac <map_generic_field+0x370>
  41f1b8:	ldr	x0, [x29, #80]
  41f1bc:	ldrb	w0, [x0]
  41f1c0:	cmp	w0, #0x3d
  41f1c4:	b.eq	41f294 <map_generic_field+0x158>  // b.none
  41f1c8:	ldr	x0, [x29, #80]
  41f1cc:	ldrb	w0, [x0]
  41f1d0:	cmp	w0, #0x60
  41f1d4:	b.ls	41f1e8 <map_generic_field+0xac>  // b.plast
  41f1d8:	ldr	x0, [x29, #80]
  41f1dc:	ldrb	w0, [x0]
  41f1e0:	cmp	w0, #0x7a
  41f1e4:	b.ls	41f26c <map_generic_field+0x130>  // b.plast
  41f1e8:	ldr	x0, [x29, #80]
  41f1ec:	ldrb	w0, [x0]
  41f1f0:	cmp	w0, #0x40
  41f1f4:	b.ls	41f208 <map_generic_field+0xcc>  // b.plast
  41f1f8:	ldr	x0, [x29, #80]
  41f1fc:	ldrb	w0, [x0]
  41f200:	cmp	w0, #0x5a
  41f204:	b.ls	41f26c <map_generic_field+0x130>  // b.plast
  41f208:	ldr	x0, [x29, #80]
  41f20c:	ldrb	w0, [x0]
  41f210:	cmp	w0, #0x2f
  41f214:	b.ls	41f228 <map_generic_field+0xec>  // b.plast
  41f218:	ldr	x0, [x29, #80]
  41f21c:	ldrb	w0, [x0]
  41f220:	cmp	w0, #0x39
  41f224:	b.ls	41f26c <map_generic_field+0x130>  // b.plast
  41f228:	strb	wzr, [x29, #74]
  41f22c:	ldr	x0, [x29, #80]
  41f230:	ldrb	w0, [x0]
  41f234:	cmp	w0, #0x2d
  41f238:	b.eq	41f244 <map_generic_field+0x108>  // b.none
  41f23c:	cmp	w0, #0x5f
  41f240:	b.ne	41f24c <map_generic_field+0x110>  // b.any
  41f244:	mov	w0, #0x1                   	// #1
  41f248:	strb	w0, [x29, #74]
  41f24c:	nop
  41f250:	ldrb	w0, [x29, #74]
  41f254:	eor	w0, w0, #0x1
  41f258:	and	w0, w0, #0xff
  41f25c:	cmp	w0, #0x0
  41f260:	b.eq	41f26c <map_generic_field+0x130>  // b.none
  41f264:	mov	w0, #0x0                   	// #0
  41f268:	b	41f4ac <map_generic_field+0x370>
  41f26c:	ldr	x0, [x29, #80]
  41f270:	add	x0, x0, #0x1
  41f274:	str	x0, [x29, #80]
  41f278:	ldr	x0, [x29, #48]
  41f27c:	ldr	x0, [x0]
  41f280:	add	x1, x0, #0x10
  41f284:	ldr	x0, [x29, #80]
  41f288:	cmp	x1, x0
  41f28c:	b.hi	41f17c <map_generic_field+0x40>  // b.pmore
  41f290:	b	41f298 <map_generic_field+0x15c>
  41f294:	nop
  41f298:	ldr	x0, [x29, #48]
  41f29c:	ldr	x1, [x0]
  41f2a0:	ldr	x0, [x29, #80]
  41f2a4:	cmp	x1, x0
  41f2a8:	b.cs	41f2c4 <map_generic_field+0x188>  // b.hs, b.nlast
  41f2ac:	ldr	x0, [x29, #48]
  41f2b0:	ldr	x0, [x0]
  41f2b4:	add	x1, x0, #0x10
  41f2b8:	ldr	x0, [x29, #80]
  41f2bc:	cmp	x1, x0
  41f2c0:	b.hi	41f2cc <map_generic_field+0x190>  // b.pmore
  41f2c4:	mov	w0, #0x0                   	// #0
  41f2c8:	b	41f4ac <map_generic_field+0x370>
  41f2cc:	ldr	x0, [x29, #56]
  41f2d0:	bl	406af0 <strlen@plt>
  41f2d4:	mov	x2, x0
  41f2d8:	ldr	x1, [x29, #80]
  41f2dc:	ldr	x0, [x29, #48]
  41f2e0:	ldr	x0, [x0]
  41f2e4:	sub	x0, x1, x0
  41f2e8:	add	x0, x2, x0
  41f2ec:	add	x0, x0, #0x2
  41f2f0:	str	x0, [x29, #104]
  41f2f4:	ldr	x1, [x29, #104]
  41f2f8:	mov	x0, #0x1                   	// #1
  41f2fc:	bl	41e790 <size_multiply_overflow>
  41f300:	and	w0, w0, #0xff
  41f304:	and	x0, x0, #0xff
  41f308:	cmp	x0, #0x0
  41f30c:	b.eq	41f338 <map_generic_field+0x1fc>  // b.none
  41f310:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f314:	add	x1, x0, #0x3eb
  41f318:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f31c:	add	x4, x0, #0xa10
  41f320:	mov	w3, #0xa5                  	// #165
  41f324:	mov	x2, x1
  41f328:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f32c:	add	x1, x0, #0x428
  41f330:	mov	w0, #0x0                   	// #0
  41f334:	bl	405fd0 <log_assert_failed_realm@plt>
  41f338:	ldr	x0, [x29, #104]
  41f33c:	cmp	x0, #0x400, lsl #12
  41f340:	cset	w0, hi  // hi = pmore
  41f344:	and	w0, w0, #0xff
  41f348:	and	x0, x0, #0xff
  41f34c:	cmp	x0, #0x0
  41f350:	b.eq	41f37c <map_generic_field+0x240>  // b.none
  41f354:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f358:	add	x1, x0, #0x3eb
  41f35c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f360:	add	x4, x0, #0xa10
  41f364:	mov	w3, #0xa5                  	// #165
  41f368:	mov	x2, x1
  41f36c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f370:	add	x1, x0, #0x458
  41f374:	mov	w0, #0x0                   	// #0
  41f378:	bl	405fd0 <log_assert_failed_realm@plt>
  41f37c:	ldr	x0, [x29, #104]
  41f380:	add	x0, x0, #0xf
  41f384:	lsr	x0, x0, #4
  41f388:	lsl	x0, x0, #4
  41f38c:	sub	sp, sp, x0
  41f390:	mov	x0, sp
  41f394:	add	x0, x0, #0xf
  41f398:	lsr	x0, x0, #4
  41f39c:	lsl	x0, x0, #4
  41f3a0:	str	x0, [x29, #112]
  41f3a4:	ldr	x1, [x29, #56]
  41f3a8:	ldr	x0, [x29, #112]
  41f3ac:	bl	405bc0 <stpcpy@plt>
  41f3b0:	str	x0, [x29, #96]
  41f3b4:	ldr	x0, [x29, #48]
  41f3b8:	ldr	x0, [x0]
  41f3bc:	str	x0, [x29, #88]
  41f3c0:	b	41f440 <map_generic_field+0x304>
  41f3c4:	ldr	x0, [x29, #88]
  41f3c8:	ldrb	w0, [x0]
  41f3cc:	cmp	w0, #0x60
  41f3d0:	b.ls	41f3f8 <map_generic_field+0x2bc>  // b.plast
  41f3d4:	ldr	x0, [x29, #88]
  41f3d8:	ldrb	w0, [x0]
  41f3dc:	cmp	w0, #0x7a
  41f3e0:	b.hi	41f3f8 <map_generic_field+0x2bc>  // b.pmore
  41f3e4:	ldr	x0, [x29, #88]
  41f3e8:	ldrb	w0, [x0]
  41f3ec:	sub	w0, w0, #0x20
  41f3f0:	strb	w0, [x29, #75]
  41f3f4:	b	41f420 <map_generic_field+0x2e4>
  41f3f8:	ldr	x0, [x29, #88]
  41f3fc:	ldrb	w0, [x0]
  41f400:	cmp	w0, #0x2d
  41f404:	b.ne	41f414 <map_generic_field+0x2d8>  // b.any
  41f408:	mov	w0, #0x5f                  	// #95
  41f40c:	strb	w0, [x29, #75]
  41f410:	b	41f420 <map_generic_field+0x2e4>
  41f414:	ldr	x0, [x29, #88]
  41f418:	ldrb	w0, [x0]
  41f41c:	strb	w0, [x29, #75]
  41f420:	ldr	x0, [x29, #96]
  41f424:	add	x1, x0, #0x1
  41f428:	str	x1, [x29, #96]
  41f42c:	ldrb	w1, [x29, #75]
  41f430:	strb	w1, [x0]
  41f434:	ldr	x0, [x29, #88]
  41f438:	add	x0, x0, #0x1
  41f43c:	str	x0, [x29, #88]
  41f440:	ldr	x0, [x29, #80]
  41f444:	ldr	x1, [x29, #88]
  41f448:	cmp	x1, x0
  41f44c:	b.cc	41f3c4 <map_generic_field+0x288>  // b.lo, b.ul, b.last
  41f450:	ldr	x0, [x29, #96]
  41f454:	mov	w1, #0x3d                  	// #61
  41f458:	strh	w1, [x0]
  41f45c:	ldr	x0, [x29, #80]
  41f460:	add	x0, x0, #0x1
  41f464:	str	x0, [x29, #80]
  41f468:	add	x0, x29, #0x50
  41f46c:	ldr	x4, [x29, #24]
  41f470:	ldr	x3, [x29, #32]
  41f474:	ldr	x2, [x29, #40]
  41f478:	mov	x1, x0
  41f47c:	ldr	x0, [x29, #112]
  41f480:	bl	41e948 <map_simple_field>
  41f484:	str	w0, [x29, #76]
  41f488:	ldr	w0, [x29, #76]
  41f48c:	cmp	w0, #0x0
  41f490:	b.ge	41f49c <map_generic_field+0x360>  // b.tcont
  41f494:	ldr	w0, [x29, #76]
  41f498:	b	41f4ac <map_generic_field+0x370>
  41f49c:	ldr	x1, [x29, #80]
  41f4a0:	ldr	x0, [x29, #48]
  41f4a4:	str	x1, [x0]
  41f4a8:	ldr	w0, [x29, #76]
  41f4ac:	mov	w1, w0
  41f4b0:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f4b4:	ldr	x0, [x0, #4064]
  41f4b8:	ldr	x2, [x29, #120]
  41f4bc:	ldr	x0, [x0]
  41f4c0:	eor	x0, x2, x0
  41f4c4:	cmp	x0, #0x0
  41f4c8:	b.eq	41f4d0 <map_generic_field+0x394>  // b.none
  41f4cc:	bl	4063e0 <__stack_chk_fail@plt>
  41f4d0:	mov	w0, w1
  41f4d4:	mov	sp, x29
  41f4d8:	ldp	x29, x30, [sp], #128
  41f4dc:	ret

000000000041f4e0 <map_all_fields>:
  41f4e0:	stp	x29, x30, [sp, #-176]!
  41f4e4:	mov	x29, sp
  41f4e8:	str	x19, [sp, #16]
  41f4ec:	str	x0, [sp, #88]
  41f4f0:	str	x1, [sp, #80]
  41f4f4:	str	x2, [sp, #72]
  41f4f8:	strb	w3, [sp, #71]
  41f4fc:	str	x4, [sp, #56]
  41f500:	str	x5, [sp, #48]
  41f504:	str	x6, [sp, #40]
  41f508:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f50c:	ldr	x0, [x0, #4064]
  41f510:	ldr	x1, [x0]
  41f514:	str	x1, [sp, #168]
  41f518:	mov	x1, #0x0                   	// #0
  41f51c:	ldr	x0, [sp, #88]
  41f520:	cmp	x0, #0x0
  41f524:	cset	w0, eq  // eq = none
  41f528:	and	w0, w0, #0xff
  41f52c:	and	x0, x0, #0xff
  41f530:	cmp	x0, #0x0
  41f534:	b.eq	41f560 <map_all_fields+0x80>  // b.none
  41f538:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f53c:	add	x1, x0, #0x3eb
  41f540:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f544:	add	x4, x0, #0xa28
  41f548:	mov	w3, #0xf9                  	// #249
  41f54c:	mov	x2, x1
  41f550:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f554:	add	x1, x0, #0x410
  41f558:	mov	w0, #0x0                   	// #0
  41f55c:	bl	405fd0 <log_assert_failed_realm@plt>
  41f560:	ldr	x0, [sp, #56]
  41f564:	cmp	x0, #0x0
  41f568:	cset	w0, eq  // eq = none
  41f56c:	and	w0, w0, #0xff
  41f570:	and	x0, x0, #0xff
  41f574:	cmp	x0, #0x0
  41f578:	b.eq	41f5a4 <map_all_fields+0xc4>  // b.none
  41f57c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f580:	add	x1, x0, #0x3eb
  41f584:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f588:	add	x4, x0, #0xa28
  41f58c:	mov	w3, #0xfa                  	// #250
  41f590:	mov	x2, x1
  41f594:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f598:	add	x1, x0, #0x418
  41f59c:	mov	w0, #0x0                   	// #0
  41f5a0:	bl	405fd0 <log_assert_failed_realm@plt>
  41f5a4:	ldr	x0, [sp, #48]
  41f5a8:	cmp	x0, #0x0
  41f5ac:	cset	w0, eq  // eq = none
  41f5b0:	and	w0, w0, #0xff
  41f5b4:	and	x0, x0, #0xff
  41f5b8:	cmp	x0, #0x0
  41f5bc:	b.eq	41f5e8 <map_all_fields+0x108>  // b.none
  41f5c0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f5c4:	add	x1, x0, #0x3eb
  41f5c8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f5cc:	add	x4, x0, #0xa28
  41f5d0:	mov	w3, #0xfb                  	// #251
  41f5d4:	mov	x2, x1
  41f5d8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f5dc:	add	x1, x0, #0x690
  41f5e0:	mov	w0, #0x0                   	// #0
  41f5e4:	bl	405fd0 <log_assert_failed_realm@plt>
  41f5e8:	ldr	x0, [sp, #40]
  41f5ec:	cmp	x0, #0x0
  41f5f0:	cset	w0, eq  // eq = none
  41f5f4:	and	w0, w0, #0xff
  41f5f8:	and	x0, x0, #0xff
  41f5fc:	cmp	x0, #0x0
  41f600:	b.eq	41f62c <map_all_fields+0x14c>  // b.none
  41f604:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f608:	add	x1, x0, #0x3eb
  41f60c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f610:	add	x4, x0, #0xa28
  41f614:	mov	w3, #0xfc                  	// #252
  41f618:	mov	x2, x1
  41f61c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f620:	add	x1, x0, #0x420
  41f624:	mov	w0, #0x0                   	// #0
  41f628:	bl	405fd0 <log_assert_failed_realm@plt>
  41f62c:	strb	wzr, [sp, #107]
  41f630:	ldr	x19, [sp, #88]
  41f634:	ldr	x2, [sp, #88]
  41f638:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f63c:	add	x1, x0, #0x6a0
  41f640:	mov	x0, x2
  41f644:	bl	4061d0 <strspn@plt>
  41f648:	add	x0, x19, x0
  41f64c:	str	x0, [sp, #88]
  41f650:	ldr	x0, [sp, #88]
  41f654:	ldrb	w0, [x0]
  41f658:	cmp	w0, #0x0
  41f65c:	b.ne	41f668 <map_all_fields+0x188>  // b.any
  41f660:	mov	w19, #0x0                   	// #0
  41f664:	b	41f968 <map_all_fields+0x488>
  41f668:	ldrb	w0, [sp, #71]
  41f66c:	cmp	w0, #0x0
  41f670:	b.eq	41f738 <map_all_fields+0x258>  // b.none
  41f674:	ldr	x2, [sp, #88]
  41f678:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f67c:	add	x1, x0, #0x6a8
  41f680:	mov	x0, x2
  41f684:	bl	41e8a0 <startswith>
  41f688:	str	x0, [sp, #136]
  41f68c:	ldr	x0, [sp, #136]
  41f690:	cmp	x0, #0x0
  41f694:	b.eq	41f738 <map_all_fields+0x258>  // b.none
  41f698:	str	xzr, [sp, #144]
  41f69c:	ldr	x2, [sp, #136]
  41f6a0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f6a4:	add	x1, x0, #0x6b0
  41f6a8:	mov	x0, x2
  41f6ac:	bl	406670 <endswith@plt>
  41f6b0:	str	x0, [sp, #160]
  41f6b4:	ldr	x0, [sp, #160]
  41f6b8:	cmp	x0, #0x0
  41f6bc:	b.ne	41f6c8 <map_all_fields+0x1e8>  // b.any
  41f6c0:	mov	w19, #0x0                   	// #0
  41f6c4:	b	41f72c <map_all_fields+0x24c>
  41f6c8:	ldr	x2, [sp, #136]
  41f6cc:	ldr	x0, [sp, #136]
  41f6d0:	ldr	x1, [sp, #160]
  41f6d4:	sub	x0, x1, x0
  41f6d8:	mov	x1, x0
  41f6dc:	mov	x0, x2
  41f6e0:	bl	4063a0 <strndup@plt>
  41f6e4:	str	x0, [sp, #144]
  41f6e8:	ldr	x0, [sp, #144]
  41f6ec:	cmp	x0, #0x0
  41f6f0:	b.ne	41f6fc <map_all_fields+0x21c>  // b.any
  41f6f4:	mov	w19, #0xfffffff4            	// #-12
  41f6f8:	b	41f72c <map_all_fields+0x24c>
  41f6fc:	ldr	x7, [sp, #144]
  41f700:	ldr	x6, [sp, #40]
  41f704:	ldr	x5, [sp, #48]
  41f708:	ldr	x4, [sp, #56]
  41f70c:	mov	w3, #0x0                   	// #0
  41f710:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f714:	add	x2, x0, #0x6b8
  41f718:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  41f71c:	add	x1, x0, #0xd60
  41f720:	mov	x0, x7
  41f724:	bl	41f4e0 <map_all_fields>
  41f728:	mov	w19, w0
  41f72c:	add	x0, sp, #0x90
  41f730:	bl	41e76c <freep>
  41f734:	b	41f968 <map_all_fields+0x488>
  41f738:	ldr	x0, [sp, #80]
  41f73c:	str	x0, [sp, #152]
  41f740:	b	41f85c <map_all_fields+0x37c>
  41f744:	ldr	x2, [sp, #88]
  41f748:	ldr	x0, [sp, #152]
  41f74c:	ldr	x0, [x0]
  41f750:	mov	x1, x0
  41f754:	mov	x0, x2
  41f758:	bl	41e8a0 <startswith>
  41f75c:	str	x0, [sp, #136]
  41f760:	ldr	x0, [sp, #136]
  41f764:	cmp	x0, #0x0
  41f768:	b.eq	41f84c <map_all_fields+0x36c>  // b.none
  41f76c:	ldr	x0, [sp, #152]
  41f770:	ldr	x5, [x0, #16]
  41f774:	ldr	x0, [sp, #152]
  41f778:	ldr	x0, [x0, #8]
  41f77c:	add	x1, sp, #0x88
  41f780:	ldr	x4, [sp, #40]
  41f784:	ldr	x3, [sp, #48]
  41f788:	ldr	x2, [sp, #56]
  41f78c:	blr	x5
  41f790:	str	w0, [sp, #108]
  41f794:	ldr	w0, [sp, #108]
  41f798:	cmp	w0, #0x0
  41f79c:	b.ge	41f82c <map_all_fields+0x34c>  // b.tcont
  41f7a0:	mov	w0, #0x7                   	// #7
  41f7a4:	str	w0, [sp, #112]
  41f7a8:	ldr	w0, [sp, #108]
  41f7ac:	str	w0, [sp, #116]
  41f7b0:	str	wzr, [sp, #120]
  41f7b4:	ldr	w0, [sp, #120]
  41f7b8:	bl	406c30 <log_get_max_level_realm@plt>
  41f7bc:	mov	w1, w0
  41f7c0:	ldr	w0, [sp, #112]
  41f7c4:	and	w0, w0, #0x7
  41f7c8:	cmp	w1, w0
  41f7cc:	b.lt	41f814 <map_all_fields+0x334>  // b.tstop
  41f7d0:	ldr	w0, [sp, #120]
  41f7d4:	lsl	w1, w0, #10
  41f7d8:	ldr	w0, [sp, #112]
  41f7dc:	orr	w6, w1, w0
  41f7e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f7e4:	add	x1, x0, #0x3eb
  41f7e8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f7ec:	add	x5, x0, #0x6c8
  41f7f0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f7f4:	add	x4, x0, #0xa38
  41f7f8:	mov	w3, #0x12a                 	// #298
  41f7fc:	mov	x2, x1
  41f800:	ldr	w1, [sp, #116]
  41f804:	mov	w0, w6
  41f808:	bl	406590 <log_internal_realm@plt>
  41f80c:	mov	w19, w0
  41f810:	b	41f968 <map_all_fields+0x488>
  41f814:	ldr	w0, [sp, #116]
  41f818:	cmp	w0, #0x0
  41f81c:	cneg	w0, w0, lt  // lt = tstop
  41f820:	and	w0, w0, #0xff
  41f824:	neg	w19, w0
  41f828:	b	41f968 <map_all_fields+0x488>
  41f82c:	ldr	w0, [sp, #108]
  41f830:	cmp	w0, #0x0
  41f834:	b.le	41f850 <map_all_fields+0x370>
  41f838:	mov	w0, #0x1                   	// #1
  41f83c:	strb	w0, [sp, #107]
  41f840:	ldr	x0, [sp, #136]
  41f844:	str	x0, [sp, #88]
  41f848:	b	41f86c <map_all_fields+0x38c>
  41f84c:	nop
  41f850:	ldr	x0, [sp, #152]
  41f854:	add	x0, x0, #0x18
  41f858:	str	x0, [sp, #152]
  41f85c:	ldr	x0, [sp, #152]
  41f860:	ldr	x0, [x0]
  41f864:	cmp	x0, #0x0
  41f868:	b.ne	41f744 <map_all_fields+0x264>  // b.any
  41f86c:	ldrb	w0, [sp, #107]
  41f870:	eor	w0, w0, #0x1
  41f874:	and	w0, w0, #0xff
  41f878:	cmp	w0, #0x0
  41f87c:	b.eq	41f62c <map_all_fields+0x14c>  // b.none
  41f880:	add	x0, sp, #0x58
  41f884:	ldr	x4, [sp, #40]
  41f888:	ldr	x3, [sp, #48]
  41f88c:	ldr	x2, [sp, #56]
  41f890:	mov	x1, x0
  41f894:	ldr	x0, [sp, #72]
  41f898:	bl	41f13c <map_generic_field>
  41f89c:	str	w0, [sp, #108]
  41f8a0:	ldr	w0, [sp, #108]
  41f8a4:	cmp	w0, #0x0
  41f8a8:	b.ge	41f938 <map_all_fields+0x458>  // b.tcont
  41f8ac:	mov	w0, #0x7                   	// #7
  41f8b0:	str	w0, [sp, #124]
  41f8b4:	ldr	w0, [sp, #108]
  41f8b8:	str	w0, [sp, #128]
  41f8bc:	str	wzr, [sp, #132]
  41f8c0:	ldr	w0, [sp, #132]
  41f8c4:	bl	406c30 <log_get_max_level_realm@plt>
  41f8c8:	mov	w1, w0
  41f8cc:	ldr	w0, [sp, #124]
  41f8d0:	and	w0, w0, #0x7
  41f8d4:	cmp	w1, w0
  41f8d8:	b.lt	41f920 <map_all_fields+0x440>  // b.tstop
  41f8dc:	ldr	w0, [sp, #132]
  41f8e0:	lsl	w1, w0, #10
  41f8e4:	ldr	w0, [sp, #124]
  41f8e8:	orr	w6, w1, w0
  41f8ec:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f8f0:	add	x1, x0, #0x3eb
  41f8f4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f8f8:	add	x5, x0, #0x6c8
  41f8fc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f900:	add	x4, x0, #0xa38
  41f904:	mov	w3, #0x136                 	// #310
  41f908:	mov	x2, x1
  41f90c:	ldr	w1, [sp, #128]
  41f910:	mov	w0, w6
  41f914:	bl	406590 <log_internal_realm@plt>
  41f918:	mov	w19, w0
  41f91c:	b	41f968 <map_all_fields+0x488>
  41f920:	ldr	w0, [sp, #128]
  41f924:	cmp	w0, #0x0
  41f928:	cneg	w0, w0, lt  // lt = tstop
  41f92c:	and	w0, w0, #0xff
  41f930:	neg	w19, w0
  41f934:	b	41f968 <map_all_fields+0x488>
  41f938:	ldr	w0, [sp, #108]
  41f93c:	cmp	w0, #0x0
  41f940:	b.ne	41f62c <map_all_fields+0x14c>  // b.any
  41f944:	ldr	x19, [sp, #88]
  41f948:	ldr	x2, [sp, #88]
  41f94c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f950:	add	x1, x0, #0x6a0
  41f954:	mov	x0, x2
  41f958:	bl	405b90 <strcspn@plt>
  41f95c:	add	x0, x19, x0
  41f960:	str	x0, [sp, #88]
  41f964:	b	41f62c <map_all_fields+0x14c>
  41f968:	mov	w1, w19
  41f96c:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f970:	ldr	x0, [x0, #4064]
  41f974:	ldr	x2, [sp, #168]
  41f978:	ldr	x0, [x0]
  41f97c:	eor	x0, x2, x0
  41f980:	cmp	x0, #0x0
  41f984:	b.eq	41f98c <map_all_fields+0x4ac>  // b.none
  41f988:	bl	4063e0 <__stack_chk_fail@plt>
  41f98c:	mov	w0, w1
  41f990:	ldr	x19, [sp, #16]
  41f994:	ldp	x29, x30, [sp], #176
  41f998:	ret

000000000041f99c <process_audit_string>:
  41f99c:	stp	x29, x30, [sp, #-432]!
  41f9a0:	mov	x29, sp
  41f9a4:	str	x19, [sp, #16]
  41f9a8:	str	x0, [x29, #56]
  41f9ac:	str	w1, [x29, #52]
  41f9b0:	str	x2, [x29, #40]
  41f9b4:	str	x3, [x29, #32]
  41f9b8:	adrp	x0, 441000 <wordlist.9471+0x208>
  41f9bc:	ldr	x0, [x0, #4064]
  41f9c0:	ldr	x1, [x0]
  41f9c4:	str	x1, [x29, #424]
  41f9c8:	mov	x1, #0x0                   	// #0
  41f9cc:	str	xzr, [x29, #80]
  41f9d0:	str	xzr, [x29, #88]
  41f9d4:	str	xzr, [x29, #96]
  41f9d8:	ldr	x0, [x29, #56]
  41f9dc:	cmp	x0, #0x0
  41f9e0:	cset	w0, eq  // eq = none
  41f9e4:	and	w0, w0, #0xff
  41f9e8:	and	x0, x0, #0xff
  41f9ec:	cmp	x0, #0x0
  41f9f0:	b.eq	41fa1c <process_audit_string+0x80>  // b.none
  41f9f4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41f9f8:	add	x1, x0, #0x3eb
  41f9fc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fa00:	add	x4, x0, #0xa48
  41fa04:	mov	w3, #0x14a                 	// #330
  41fa08:	mov	x2, x1
  41fa0c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fa10:	add	x1, x0, #0x6e8
  41fa14:	mov	w0, #0x0                   	// #0
  41fa18:	bl	405fd0 <log_assert_failed_realm@plt>
  41fa1c:	ldr	x0, [x29, #32]
  41fa20:	cmp	x0, #0x0
  41fa24:	b.ne	41fa30 <process_audit_string+0x94>  // b.any
  41fa28:	mov	w19, #0x0                   	// #0
  41fa2c:	b	4202b0 <process_audit_string+0x914>
  41fa30:	ldr	x0, [x29, #40]
  41fa34:	cmp	x0, #0x0
  41fa38:	b.ne	41fa44 <process_audit_string+0xa8>  // b.any
  41fa3c:	mov	w19, #0x0                   	// #0
  41fa40:	b	4202b0 <process_audit_string+0x914>
  41fa44:	ldr	x2, [x29, #32]
  41fa48:	mov	w1, #0x0                   	// #0
  41fa4c:	ldr	x0, [x29, #40]
  41fa50:	bl	406870 <memchr@plt>
  41fa54:	cmp	x0, #0x0
  41fa58:	b.eq	41fa64 <process_audit_string+0xc8>  // b.none
  41fa5c:	mov	w19, #0x0                   	// #0
  41fa60:	b	4202b0 <process_audit_string+0x914>
  41fa64:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fa68:	add	x1, x0, #0x6f0
  41fa6c:	ldr	x0, [x29, #40]
  41fa70:	bl	41e8a0 <startswith>
  41fa74:	str	x0, [x29, #192]
  41fa78:	ldr	x0, [x29, #192]
  41fa7c:	cmp	x0, #0x0
  41fa80:	b.ne	41fa8c <process_audit_string+0xf0>  // b.any
  41fa84:	mov	w19, #0x0                   	// #0
  41fa88:	b	4202b0 <process_audit_string+0x914>
  41fa8c:	str	wzr, [x29, #76]
  41fa90:	add	x3, x29, #0x4c
  41fa94:	add	x2, x29, #0x78
  41fa98:	add	x1, x29, #0x70
  41fa9c:	add	x0, x29, #0x68
  41faa0:	mov	x5, x3
  41faa4:	mov	x4, x2
  41faa8:	mov	x3, x1
  41faac:	mov	x2, x0
  41fab0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fab4:	add	x1, x0, #0x6f8
  41fab8:	ldr	x0, [x29, #192]
  41fabc:	bl	406100 <__isoc99_sscanf@plt>
  41fac0:	cmp	w0, #0x3
  41fac4:	b.ne	41fad4 <process_audit_string+0x138>  // b.any
  41fac8:	ldr	w0, [x29, #76]
  41facc:	cmp	w0, #0x0
  41fad0:	b.ne	41fadc <process_audit_string+0x140>  // b.any
  41fad4:	mov	w19, #0x0                   	// #0
  41fad8:	b	4202b0 <process_audit_string+0x914>
  41fadc:	ldr	w0, [x29, #76]
  41fae0:	sxtw	x0, w0
  41fae4:	ldr	x1, [x29, #192]
  41fae8:	add	x0, x1, x0
  41faec:	str	x0, [x29, #192]
  41faf0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41faf4:	add	x1, x0, #0x6a0
  41faf8:	ldr	x0, [x29, #192]
  41fafc:	bl	4061d0 <strspn@plt>
  41fb00:	mov	x1, x0
  41fb04:	ldr	x0, [x29, #192]
  41fb08:	add	x0, x0, x1
  41fb0c:	str	x0, [x29, #192]
  41fb10:	ldr	x0, [x29, #192]
  41fb14:	bl	41e860 <isempty>
  41fb18:	and	w0, w0, #0xff
  41fb1c:	cmp	w0, #0x0
  41fb20:	b.eq	41fb2c <process_audit_string+0x190>  // b.none
  41fb24:	mov	w19, #0x0                   	// #0
  41fb28:	b	4202b0 <process_audit_string+0x914>
  41fb2c:	mov	x0, #0x1e                  	// #30
  41fb30:	str	x0, [x29, #80]
  41fb34:	ldr	x0, [x29, #80]
  41fb38:	mov	x1, x0
  41fb3c:	mov	x0, #0x10                  	// #16
  41fb40:	bl	41e80c <malloc_multiply>
  41fb44:	str	x0, [x29, #96]
  41fb48:	ldr	x0, [x29, #96]
  41fb4c:	cmp	x0, #0x0
  41fb50:	b.ne	41fb78 <process_audit_string+0x1dc>  // b.any
  41fb54:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fb58:	add	x1, x0, #0x3eb
  41fb5c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fb60:	add	x3, x0, #0xa60
  41fb64:	mov	w2, #0x16c                 	// #364
  41fb68:	mov	w0, #0x0                   	// #0
  41fb6c:	bl	406b70 <log_oom_internal@plt>
  41fb70:	mov	w19, #0x0                   	// #0
  41fb74:	b	4202b0 <process_audit_string+0x914>
  41fb78:	ldr	x1, [x29, #96]
  41fb7c:	ldr	x0, [x29, #88]
  41fb80:	add	x2, x0, #0x1
  41fb84:	str	x2, [x29, #88]
  41fb88:	lsl	x0, x0, #4
  41fb8c:	add	x0, x1, x0
  41fb90:	adrp	x1, 42c000 <__func__.10684+0x8>
  41fb94:	add	x1, x1, #0x710
  41fb98:	str	x1, [x0]
  41fb9c:	mov	x1, #0x10                  	// #16
  41fba0:	str	x1, [x0, #8]
  41fba4:	ldr	x1, [x29, #104]
  41fba8:	mov	x0, #0x4240                	// #16960
  41fbac:	movk	x0, #0xf, lsl #16
  41fbb0:	mul	x2, x1, x0
  41fbb4:	ldr	x1, [x29, #112]
  41fbb8:	mov	x0, x1
  41fbbc:	lsl	x0, x0, #5
  41fbc0:	sub	x0, x0, x1
  41fbc4:	lsl	x0, x0, #2
  41fbc8:	add	x0, x0, x1
  41fbcc:	lsl	x0, x0, #3
  41fbd0:	add	x0, x2, x0
  41fbd4:	add	x3, x29, #0x170
  41fbd8:	mov	x2, x0
  41fbdc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fbe0:	add	x1, x0, #0x728
  41fbe4:	mov	x0, x3
  41fbe8:	bl	4069c0 <sprintf@plt>
  41fbec:	ldr	x1, [x29, #96]
  41fbf0:	ldr	x0, [x29, #88]
  41fbf4:	add	x2, x0, #0x1
  41fbf8:	str	x2, [x29, #88]
  41fbfc:	lsl	x0, x0, #4
  41fc00:	add	x19, x1, x0
  41fc04:	add	x0, x29, #0x170
  41fc08:	bl	406af0 <strlen@plt>
  41fc0c:	mov	x1, x0
  41fc10:	add	x0, x29, #0x170
  41fc14:	str	x0, [x19]
  41fc18:	str	x1, [x19, #8]
  41fc1c:	add	x3, x29, #0x128
  41fc20:	ldr	w2, [x29, #52]
  41fc24:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fc28:	add	x1, x0, #0x748
  41fc2c:	mov	x0, x3
  41fc30:	bl	4069c0 <sprintf@plt>
  41fc34:	ldr	x1, [x29, #96]
  41fc38:	ldr	x0, [x29, #88]
  41fc3c:	add	x2, x0, #0x1
  41fc40:	str	x2, [x29, #88]
  41fc44:	lsl	x0, x0, #4
  41fc48:	add	x19, x1, x0
  41fc4c:	add	x0, x29, #0x128
  41fc50:	bl	406af0 <strlen@plt>
  41fc54:	mov	x1, x0
  41fc58:	add	x0, x29, #0x128
  41fc5c:	str	x0, [x19]
  41fc60:	str	x1, [x19, #8]
  41fc64:	ldr	x0, [x29, #120]
  41fc68:	add	x3, x29, #0x148
  41fc6c:	mov	x2, x0
  41fc70:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fc74:	add	x1, x0, #0x758
  41fc78:	mov	x0, x3
  41fc7c:	bl	4069c0 <sprintf@plt>
  41fc80:	ldr	x1, [x29, #96]
  41fc84:	ldr	x0, [x29, #88]
  41fc88:	add	x2, x0, #0x1
  41fc8c:	str	x2, [x29, #88]
  41fc90:	lsl	x0, x0, #4
  41fc94:	add	x19, x1, x0
  41fc98:	add	x0, x29, #0x148
  41fc9c:	bl	406af0 <strlen@plt>
  41fca0:	mov	x1, x0
  41fca4:	add	x0, x29, #0x148
  41fca8:	str	x0, [x19]
  41fcac:	str	x1, [x19, #8]
  41fcb0:	ldr	x1, [x29, #96]
  41fcb4:	ldr	x0, [x29, #88]
  41fcb8:	add	x2, x0, #0x1
  41fcbc:	str	x2, [x29, #88]
  41fcc0:	lsl	x0, x0, #4
  41fcc4:	add	x0, x1, x0
  41fcc8:	adrp	x1, 42c000 <__func__.10684+0x8>
  41fccc:	add	x1, x1, #0x768
  41fcd0:	str	x1, [x0]
  41fcd4:	mov	x1, #0x11                  	// #17
  41fcd8:	str	x1, [x0, #8]
  41fcdc:	ldr	x1, [x29, #96]
  41fce0:	ldr	x0, [x29, #88]
  41fce4:	add	x2, x0, #0x1
  41fce8:	str	x2, [x29, #88]
  41fcec:	lsl	x0, x0, #4
  41fcf0:	add	x0, x1, x0
  41fcf4:	adrp	x1, 42c000 <__func__.10684+0x8>
  41fcf8:	add	x1, x1, #0x780
  41fcfc:	str	x1, [x0]
  41fd00:	mov	x1, #0x17                  	// #23
  41fd04:	str	x1, [x0, #8]
  41fd08:	ldr	w0, [x29, #52]
  41fd0c:	bl	406b40 <audit_type_to_string@plt>
  41fd10:	str	x0, [x29, #136]
  41fd14:	ldr	x0, [x29, #136]
  41fd18:	cmp	x0, #0x0
  41fd1c:	b.ne	41fdec <process_audit_string+0x450>  // b.any
  41fd20:	mov	x0, #0x11                  	// #17
  41fd24:	str	x0, [x29, #200]
  41fd28:	ldr	x1, [x29, #200]
  41fd2c:	mov	x0, #0x1                   	// #1
  41fd30:	bl	41e790 <size_multiply_overflow>
  41fd34:	and	w0, w0, #0xff
  41fd38:	and	x0, x0, #0xff
  41fd3c:	cmp	x0, #0x0
  41fd40:	b.eq	41fd6c <process_audit_string+0x3d0>  // b.none
  41fd44:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fd48:	add	x1, x0, #0x3eb
  41fd4c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fd50:	add	x4, x0, #0xa48
  41fd54:	mov	w3, #0x180                 	// #384
  41fd58:	mov	x2, x1
  41fd5c:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fd60:	add	x1, x0, #0x428
  41fd64:	mov	w0, #0x0                   	// #0
  41fd68:	bl	405fd0 <log_assert_failed_realm@plt>
  41fd6c:	ldr	x0, [x29, #200]
  41fd70:	cmp	x0, #0x400, lsl #12
  41fd74:	cset	w0, hi  // hi = pmore
  41fd78:	and	w0, w0, #0xff
  41fd7c:	and	x0, x0, #0xff
  41fd80:	cmp	x0, #0x0
  41fd84:	b.eq	41fdb0 <process_audit_string+0x414>  // b.none
  41fd88:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fd8c:	add	x1, x0, #0x3eb
  41fd90:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fd94:	add	x4, x0, #0xa48
  41fd98:	mov	w3, #0x180                 	// #384
  41fd9c:	mov	x2, x1
  41fda0:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fda4:	add	x1, x0, #0x458
  41fda8:	mov	w0, #0x0                   	// #0
  41fdac:	bl	405fd0 <log_assert_failed_realm@plt>
  41fdb0:	ldr	x0, [x29, #200]
  41fdb4:	add	x0, x0, #0xf
  41fdb8:	lsr	x0, x0, #4
  41fdbc:	lsl	x0, x0, #4
  41fdc0:	sub	sp, sp, x0
  41fdc4:	mov	x0, sp
  41fdc8:	add	x0, x0, #0xf
  41fdcc:	lsr	x0, x0, #4
  41fdd0:	lsl	x0, x0, #4
  41fdd4:	str	x0, [x29, #136]
  41fdd8:	ldr	w2, [x29, #52]
  41fddc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fde0:	add	x1, x0, #0x798
  41fde4:	ldr	x0, [x29, #136]
  41fde8:	bl	4069c0 <sprintf@plt>
  41fdec:	ldr	x0, [x29, #136]
  41fdf0:	str	x0, [x29, #208]
  41fdf4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fdf8:	add	x0, x0, #0x7a8
  41fdfc:	str	x0, [x29, #264]
  41fe00:	ldr	x0, [x29, #208]
  41fe04:	str	x0, [x29, #272]
  41fe08:	str	xzr, [x29, #152]
  41fe0c:	str	xzr, [x29, #160]
  41fe10:	b	41fe44 <process_audit_string+0x4a8>
  41fe14:	ldr	x0, [x29, #160]
  41fe18:	lsl	x0, x0, #3
  41fe1c:	add	x1, x29, #0x108
  41fe20:	ldr	x0, [x1, x0]
  41fe24:	bl	406af0 <strlen@plt>
  41fe28:	mov	x1, x0
  41fe2c:	ldr	x0, [x29, #152]
  41fe30:	add	x0, x0, x1
  41fe34:	str	x0, [x29, #152]
  41fe38:	ldr	x0, [x29, #160]
  41fe3c:	add	x0, x0, #0x1
  41fe40:	str	x0, [x29, #160]
  41fe44:	ldr	x0, [x29, #160]
  41fe48:	cmp	x0, #0x1
  41fe4c:	b.hi	41fe68 <process_audit_string+0x4cc>  // b.pmore
  41fe50:	ldr	x0, [x29, #160]
  41fe54:	lsl	x0, x0, #3
  41fe58:	add	x1, x29, #0x108
  41fe5c:	ldr	x0, [x1, x0]
  41fe60:	cmp	x0, #0x0
  41fe64:	b.ne	41fe14 <process_audit_string+0x478>  // b.any
  41fe68:	ldr	x0, [x29, #152]
  41fe6c:	add	x0, x0, #0x1
  41fe70:	str	x0, [x29, #216]
  41fe74:	ldr	x1, [x29, #216]
  41fe78:	mov	x0, #0x1                   	// #1
  41fe7c:	bl	41e790 <size_multiply_overflow>
  41fe80:	and	w0, w0, #0xff
  41fe84:	and	x0, x0, #0xff
  41fe88:	cmp	x0, #0x0
  41fe8c:	b.eq	41feb8 <process_audit_string+0x51c>  // b.none
  41fe90:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fe94:	add	x1, x0, #0x3eb
  41fe98:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fe9c:	add	x4, x0, #0xa48
  41fea0:	mov	w3, #0x182                 	// #386
  41fea4:	mov	x2, x1
  41fea8:	adrp	x0, 42c000 <__func__.10684+0x8>
  41feac:	add	x1, x0, #0x428
  41feb0:	mov	w0, #0x0                   	// #0
  41feb4:	bl	405fd0 <log_assert_failed_realm@plt>
  41feb8:	ldr	x0, [x29, #216]
  41febc:	cmp	x0, #0x400, lsl #12
  41fec0:	cset	w0, hi  // hi = pmore
  41fec4:	and	w0, w0, #0xff
  41fec8:	and	x0, x0, #0xff
  41fecc:	cmp	x0, #0x0
  41fed0:	b.eq	41fefc <process_audit_string+0x560>  // b.none
  41fed4:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fed8:	add	x1, x0, #0x3eb
  41fedc:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fee0:	add	x4, x0, #0xa48
  41fee4:	mov	w3, #0x182                 	// #386
  41fee8:	mov	x2, x1
  41feec:	adrp	x0, 42c000 <__func__.10684+0x8>
  41fef0:	add	x1, x0, #0x458
  41fef4:	mov	w0, #0x0                   	// #0
  41fef8:	bl	405fd0 <log_assert_failed_realm@plt>
  41fefc:	ldr	x0, [x29, #216]
  41ff00:	add	x0, x0, #0xf
  41ff04:	lsr	x0, x0, #4
  41ff08:	lsl	x0, x0, #4
  41ff0c:	sub	sp, sp, x0
  41ff10:	mov	x0, sp
  41ff14:	add	x0, x0, #0xf
  41ff18:	lsr	x0, x0, #4
  41ff1c:	lsl	x0, x0, #4
  41ff20:	str	x0, [x29, #224]
  41ff24:	ldr	x0, [x29, #224]
  41ff28:	str	x0, [x29, #144]
  41ff2c:	str	xzr, [x29, #160]
  41ff30:	b	41ff60 <process_audit_string+0x5c4>
  41ff34:	ldr	x0, [x29, #160]
  41ff38:	lsl	x0, x0, #3
  41ff3c:	add	x1, x29, #0x108
  41ff40:	ldr	x0, [x1, x0]
  41ff44:	mov	x1, x0
  41ff48:	ldr	x0, [x29, #144]
  41ff4c:	bl	405bc0 <stpcpy@plt>
  41ff50:	str	x0, [x29, #144]
  41ff54:	ldr	x0, [x29, #160]
  41ff58:	add	x0, x0, #0x1
  41ff5c:	str	x0, [x29, #160]
  41ff60:	ldr	x0, [x29, #160]
  41ff64:	cmp	x0, #0x1
  41ff68:	b.hi	41ff84 <process_audit_string+0x5e8>  // b.pmore
  41ff6c:	ldr	x0, [x29, #160]
  41ff70:	lsl	x0, x0, #3
  41ff74:	add	x1, x29, #0x108
  41ff78:	ldr	x0, [x1, x0]
  41ff7c:	cmp	x0, #0x0
  41ff80:	b.ne	41ff34 <process_audit_string+0x598>  // b.any
  41ff84:	ldr	x0, [x29, #144]
  41ff88:	strb	wzr, [x0]
  41ff8c:	ldr	x0, [x29, #224]
  41ff90:	str	x0, [x29, #232]
  41ff94:	ldr	x1, [x29, #96]
  41ff98:	ldr	x0, [x29, #88]
  41ff9c:	add	x2, x0, #0x1
  41ffa0:	str	x2, [x29, #88]
  41ffa4:	lsl	x0, x0, #4
  41ffa8:	add	x19, x1, x0
  41ffac:	ldr	x0, [x29, #232]
  41ffb0:	bl	406af0 <strlen@plt>
  41ffb4:	mov	x1, x0
  41ffb8:	ldr	x0, [x29, #232]
  41ffbc:	str	x0, [x19]
  41ffc0:	str	x1, [x19, #8]
  41ffc4:	add	x0, x29, #0x1b8
  41ffc8:	sub	x0, x0, #0xb0
  41ffcc:	adrp	x1, 42c000 <__func__.10684+0x8>
  41ffd0:	add	x1, x1, #0x7c0
  41ffd4:	str	x1, [x0]
  41ffd8:	add	x0, x29, #0x1b8
  41ffdc:	sub	x0, x0, #0xb0
  41ffe0:	ldr	x1, [x29, #208]
  41ffe4:	str	x1, [x0, #8]
  41ffe8:	add	x0, x29, #0x1b8
  41ffec:	sub	x0, x0, #0xb0
  41fff0:	adrp	x1, 42c000 <__func__.10684+0x8>
  41fff4:	add	x1, x1, #0x7d0
  41fff8:	str	x1, [x0, #16]
  41fffc:	add	x0, x29, #0x1b8
  420000:	sub	x0, x0, #0xb0
  420004:	ldr	x1, [x29, #192]
  420008:	str	x1, [x0, #24]
  42000c:	str	xzr, [x29, #176]
  420010:	str	xzr, [x29, #184]
  420014:	b	420048 <process_audit_string+0x6ac>
  420018:	add	x0, x29, #0x1b8
  42001c:	sub	x0, x0, #0xb0
  420020:	ldr	x1, [x29, #184]
  420024:	ldr	x0, [x0, x1, lsl #3]
  420028:	bl	406af0 <strlen@plt>
  42002c:	mov	x1, x0
  420030:	ldr	x0, [x29, #176]
  420034:	add	x0, x0, x1
  420038:	str	x0, [x29, #176]
  42003c:	ldr	x0, [x29, #184]
  420040:	add	x0, x0, #0x1
  420044:	str	x0, [x29, #184]
  420048:	ldr	x0, [x29, #184]
  42004c:	cmp	x0, #0x3
  420050:	b.hi	42006c <process_audit_string+0x6d0>  // b.pmore
  420054:	add	x0, x29, #0x1b8
  420058:	sub	x0, x0, #0xb0
  42005c:	ldr	x1, [x29, #184]
  420060:	ldr	x0, [x0, x1, lsl #3]
  420064:	cmp	x0, #0x0
  420068:	b.ne	420018 <process_audit_string+0x67c>  // b.any
  42006c:	ldr	x0, [x29, #176]
  420070:	add	x0, x0, #0x1
  420074:	str	x0, [x29, #240]
  420078:	ldr	x1, [x29, #240]
  42007c:	mov	x0, #0x1                   	// #1
  420080:	bl	41e790 <size_multiply_overflow>
  420084:	and	w0, w0, #0xff
  420088:	and	x0, x0, #0xff
  42008c:	cmp	x0, #0x0
  420090:	b.eq	4200bc <process_audit_string+0x720>  // b.none
  420094:	adrp	x0, 42c000 <__func__.10684+0x8>
  420098:	add	x1, x0, #0x3eb
  42009c:	adrp	x0, 42c000 <__func__.10684+0x8>
  4200a0:	add	x4, x0, #0xa48
  4200a4:	mov	w3, #0x185                 	// #389
  4200a8:	mov	x2, x1
  4200ac:	adrp	x0, 42c000 <__func__.10684+0x8>
  4200b0:	add	x1, x0, #0x428
  4200b4:	mov	w0, #0x0                   	// #0
  4200b8:	bl	405fd0 <log_assert_failed_realm@plt>
  4200bc:	ldr	x0, [x29, #240]
  4200c0:	cmp	x0, #0x400, lsl #12
  4200c4:	cset	w0, hi  // hi = pmore
  4200c8:	and	w0, w0, #0xff
  4200cc:	and	x0, x0, #0xff
  4200d0:	cmp	x0, #0x0
  4200d4:	b.eq	420100 <process_audit_string+0x764>  // b.none
  4200d8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4200dc:	add	x1, x0, #0x3eb
  4200e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4200e4:	add	x4, x0, #0xa48
  4200e8:	mov	w3, #0x185                 	// #389
  4200ec:	mov	x2, x1
  4200f0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4200f4:	add	x1, x0, #0x458
  4200f8:	mov	w0, #0x0                   	// #0
  4200fc:	bl	405fd0 <log_assert_failed_realm@plt>
  420100:	ldr	x0, [x29, #240]
  420104:	add	x0, x0, #0xf
  420108:	lsr	x0, x0, #4
  42010c:	lsl	x0, x0, #4
  420110:	sub	sp, sp, x0
  420114:	mov	x0, sp
  420118:	add	x0, x0, #0xf
  42011c:	lsr	x0, x0, #4
  420120:	lsl	x0, x0, #4
  420124:	str	x0, [x29, #248]
  420128:	ldr	x0, [x29, #248]
  42012c:	str	x0, [x29, #168]
  420130:	str	xzr, [x29, #184]
  420134:	b	420164 <process_audit_string+0x7c8>
  420138:	add	x0, x29, #0x1b8
  42013c:	sub	x0, x0, #0xb0
  420140:	ldr	x1, [x29, #184]
  420144:	ldr	x0, [x0, x1, lsl #3]
  420148:	mov	x1, x0
  42014c:	ldr	x0, [x29, #168]
  420150:	bl	405bc0 <stpcpy@plt>
  420154:	str	x0, [x29, #168]
  420158:	ldr	x0, [x29, #184]
  42015c:	add	x0, x0, #0x1
  420160:	str	x0, [x29, #184]
  420164:	ldr	x0, [x29, #184]
  420168:	cmp	x0, #0x3
  42016c:	b.hi	420188 <process_audit_string+0x7ec>  // b.pmore
  420170:	add	x0, x29, #0x1b8
  420174:	sub	x0, x0, #0xb0
  420178:	ldr	x1, [x29, #184]
  42017c:	ldr	x0, [x0, x1, lsl #3]
  420180:	cmp	x0, #0x0
  420184:	b.ne	420138 <process_audit_string+0x79c>  // b.any
  420188:	ldr	x0, [x29, #168]
  42018c:	strb	wzr, [x0]
  420190:	ldr	x0, [x29, #248]
  420194:	str	x0, [x29, #256]
  420198:	ldr	x1, [x29, #96]
  42019c:	ldr	x0, [x29, #88]
  4201a0:	add	x2, x0, #0x1
  4201a4:	str	x2, [x29, #88]
  4201a8:	lsl	x0, x0, #4
  4201ac:	add	x19, x1, x0
  4201b0:	ldr	x0, [x29, #256]
  4201b4:	bl	406af0 <strlen@plt>
  4201b8:	mov	x1, x0
  4201bc:	ldr	x0, [x29, #256]
  4201c0:	str	x0, [x19]
  4201c4:	str	x1, [x19, #8]
  4201c8:	ldr	x0, [x29, #88]
  4201cc:	str	x0, [x29, #128]
  4201d0:	add	x2, x29, #0x58
  4201d4:	add	x1, x29, #0x50
  4201d8:	add	x0, x29, #0x60
  4201dc:	mov	x6, x2
  4201e0:	mov	x5, x1
  4201e4:	mov	x4, x0
  4201e8:	mov	w3, #0x1                   	// #1
  4201ec:	adrp	x0, 42c000 <__func__.10684+0x8>
  4201f0:	add	x2, x0, #0x7d8
  4201f4:	adrp	x0, 440000 <__FRAME_END__+0xfafc>
  4201f8:	add	x1, x0, #0xb98
  4201fc:	ldr	x0, [x29, #192]
  420200:	bl	41f4e0 <map_all_fields>
  420204:	ldr	x0, [x29, #88]
  420208:	add	x2, x0, #0x16
  42020c:	add	x1, x29, #0x50
  420210:	add	x0, x29, #0x60
  420214:	mov	x3, #0x10                  	// #16
  420218:	bl	406160 <greedy_realloc@plt>
  42021c:	cmp	x0, #0x0
  420220:	b.ne	420244 <process_audit_string+0x8a8>  // b.any
  420224:	adrp	x0, 42c000 <__func__.10684+0x8>
  420228:	add	x1, x0, #0x3eb
  42022c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420230:	add	x3, x0, #0xa60
  420234:	mov	w2, #0x18d                 	// #397
  420238:	mov	w0, #0x0                   	// #0
  42023c:	bl	406b70 <log_oom_internal@plt>
  420240:	b	420274 <process_audit_string+0x8d8>
  420244:	ldr	x0, [x29, #96]
  420248:	ldr	x1, [x29, #88]
  42024c:	ldr	x2, [x29, #80]
  420250:	mov	w7, #0x0                   	// #0
  420254:	mov	w6, #0x5                   	// #5
  420258:	mov	x5, #0x0                   	// #0
  42025c:	mov	x4, #0x0                   	// #0
  420260:	mov	x3, x2
  420264:	mov	x2, x1
  420268:	mov	x1, x0
  42026c:	ldr	x0, [x29, #56]
  420270:	bl	411768 <server_dispatch_message>
  420274:	b	42029c <process_audit_string+0x900>
  420278:	ldr	x1, [x29, #96]
  42027c:	ldr	x0, [x29, #128]
  420280:	lsl	x0, x0, #4
  420284:	add	x0, x1, x0
  420288:	ldr	x0, [x0]
  42028c:	bl	406930 <free@plt>
  420290:	ldr	x0, [x29, #128]
  420294:	add	x0, x0, #0x1
  420298:	str	x0, [x29, #128]
  42029c:	ldr	x0, [x29, #88]
  4202a0:	ldr	x1, [x29, #128]
  4202a4:	cmp	x1, x0
  4202a8:	b.cc	420278 <process_audit_string+0x8dc>  // b.lo, b.ul, b.last
  4202ac:	mov	w19, #0x1                   	// #1
  4202b0:	add	x0, x29, #0x60
  4202b4:	bl	41e76c <freep>
  4202b8:	cmp	w19, #0x1
  4202bc:	b.ne	4202c4 <process_audit_string+0x928>  // b.any
  4202c0:	nop
  4202c4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4202c8:	ldr	x0, [x0, #4064]
  4202cc:	ldr	x1, [x29, #424]
  4202d0:	ldr	x0, [x0]
  4202d4:	eor	x0, x1, x0
  4202d8:	cmp	x0, #0x0
  4202dc:	b.eq	4202e4 <process_audit_string+0x948>  // b.none
  4202e0:	bl	4063e0 <__stack_chk_fail@plt>
  4202e4:	mov	sp, x29
  4202e8:	ldr	x19, [sp, #16]
  4202ec:	ldp	x29, x30, [sp], #432
  4202f0:	ret

00000000004202f4 <server_process_audit_message>:
  4202f4:	stp	x29, x30, [sp, #-112]!
  4202f8:	mov	x29, sp
  4202fc:	str	x0, [sp, #56]
  420300:	str	x1, [sp, #48]
  420304:	str	x2, [sp, #40]
  420308:	str	x3, [sp, #32]
  42030c:	str	x4, [sp, #24]
  420310:	str	w5, [sp, #20]
  420314:	ldr	x0, [sp, #48]
  420318:	str	x0, [sp, #104]
  42031c:	ldr	x0, [sp, #56]
  420320:	cmp	x0, #0x0
  420324:	cset	w0, eq  // eq = none
  420328:	and	w0, w0, #0xff
  42032c:	and	x0, x0, #0xff
  420330:	cmp	x0, #0x0
  420334:	b.eq	420360 <server_process_audit_message+0x6c>  // b.none
  420338:	adrp	x0, 42c000 <__func__.10684+0x8>
  42033c:	add	x1, x0, #0x3eb
  420340:	adrp	x0, 42c000 <__func__.10684+0x8>
  420344:	add	x4, x0, #0xa78
  420348:	mov	w3, #0x1a5                 	// #421
  42034c:	mov	x2, x1
  420350:	adrp	x0, 42c000 <__func__.10684+0x8>
  420354:	add	x1, x0, #0x6e8
  420358:	mov	w0, #0x0                   	// #0
  42035c:	bl	405fd0 <log_assert_failed_realm@plt>
  420360:	ldr	x0, [sp, #40]
  420364:	cmp	x0, #0xf
  420368:	b.ls	42062c <server_process_audit_message+0x338>  // b.plast
  42036c:	ldr	x0, [sp, #48]
  420370:	cmp	x0, #0x0
  420374:	cset	w0, eq  // eq = none
  420378:	and	w0, w0, #0xff
  42037c:	and	x0, x0, #0xff
  420380:	cmp	x0, #0x0
  420384:	b.eq	4203b0 <server_process_audit_message+0xbc>  // b.none
  420388:	adrp	x0, 42c000 <__func__.10684+0x8>
  42038c:	add	x1, x0, #0x3eb
  420390:	adrp	x0, 42c000 <__func__.10684+0x8>
  420394:	add	x4, x0, #0xa78
  420398:	mov	w3, #0x1aa                 	// #426
  42039c:	mov	x2, x1
  4203a0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4203a4:	add	x1, x0, #0x7e8
  4203a8:	mov	w0, #0x0                   	// #0
  4203ac:	bl	405fd0 <log_assert_failed_realm@plt>
  4203b0:	ldr	x0, [sp, #24]
  4203b4:	cmp	x0, #0x0
  4203b8:	b.eq	4203e8 <server_process_audit_message+0xf4>  // b.none
  4203bc:	ldr	w0, [sp, #20]
  4203c0:	cmp	w0, #0xc
  4203c4:	b.ne	4203e8 <server_process_audit_message+0xf4>  // b.any
  4203c8:	ldr	x0, [sp, #24]
  4203cc:	ldrh	w0, [x0]
  4203d0:	cmp	w0, #0x10
  4203d4:	b.ne	4203e8 <server_process_audit_message+0xf4>  // b.any
  4203d8:	ldr	x0, [sp, #24]
  4203dc:	ldr	w0, [x0, #4]
  4203e0:	cmp	w0, #0x0
  4203e4:	b.eq	420460 <server_process_audit_message+0x16c>  // b.none
  4203e8:	mov	w0, #0x7                   	// #7
  4203ec:	str	w0, [sp, #92]
  4203f0:	str	wzr, [sp, #96]
  4203f4:	str	wzr, [sp, #100]
  4203f8:	ldr	w0, [sp, #100]
  4203fc:	bl	406c30 <log_get_max_level_realm@plt>
  420400:	mov	w1, w0
  420404:	ldr	w0, [sp, #92]
  420408:	and	w0, w0, #0x7
  42040c:	cmp	w1, w0
  420410:	b.lt	420454 <server_process_audit_message+0x160>  // b.tstop
  420414:	ldr	w0, [sp, #100]
  420418:	lsl	w1, w0, #10
  42041c:	ldr	w0, [sp, #92]
  420420:	orr	w6, w1, w0
  420424:	adrp	x0, 42c000 <__func__.10684+0x8>
  420428:	add	x1, x0, #0x3eb
  42042c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420430:	add	x5, x0, #0x7f0
  420434:	adrp	x0, 42c000 <__func__.10684+0x8>
  420438:	add	x4, x0, #0xa98
  42043c:	mov	w3, #0x1b1                 	// #433
  420440:	mov	x2, x1
  420444:	ldr	w1, [sp, #96]
  420448:	mov	w0, w6
  42044c:	bl	406590 <log_internal_realm@plt>
  420450:	b	420640 <server_process_audit_message+0x34c>
  420454:	ldr	w0, [sp, #96]
  420458:	cmp	w0, #0x0
  42045c:	b	420640 <server_process_audit_message+0x34c>
  420460:	ldr	x0, [sp, #32]
  420464:	cmp	x0, #0x0
  420468:	b.eq	42047c <server_process_audit_message+0x188>  // b.none
  42046c:	ldr	x0, [sp, #32]
  420470:	ldr	w0, [x0]
  420474:	cmp	w0, #0x0
  420478:	b.eq	4204f4 <server_process_audit_message+0x200>  // b.none
  42047c:	mov	w0, #0x7                   	// #7
  420480:	str	w0, [sp, #80]
  420484:	str	wzr, [sp, #84]
  420488:	str	wzr, [sp, #88]
  42048c:	ldr	w0, [sp, #88]
  420490:	bl	406c30 <log_get_max_level_realm@plt>
  420494:	mov	w1, w0
  420498:	ldr	w0, [sp, #80]
  42049c:	and	w0, w0, #0x7
  4204a0:	cmp	w1, w0
  4204a4:	b.lt	4204e8 <server_process_audit_message+0x1f4>  // b.tstop
  4204a8:	ldr	w0, [sp, #88]
  4204ac:	lsl	w1, w0, #10
  4204b0:	ldr	w0, [sp, #80]
  4204b4:	orr	w6, w1, w0
  4204b8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4204bc:	add	x1, x0, #0x3eb
  4204c0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4204c4:	add	x5, x0, #0x820
  4204c8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4204cc:	add	x4, x0, #0xa98
  4204d0:	mov	w3, #0x1b6                 	// #438
  4204d4:	mov	x2, x1
  4204d8:	ldr	w1, [sp, #84]
  4204dc:	mov	w0, w6
  4204e0:	bl	406590 <log_internal_realm@plt>
  4204e4:	b	420640 <server_process_audit_message+0x34c>
  4204e8:	ldr	w0, [sp, #84]
  4204ec:	cmp	w0, #0x0
  4204f0:	b	420640 <server_process_audit_message+0x34c>
  4204f4:	ldr	x0, [sp, #40]
  4204f8:	cmp	x0, #0xf
  4204fc:	b.ls	420528 <server_process_audit_message+0x234>  // b.plast
  420500:	ldr	x0, [sp, #104]
  420504:	ldr	w0, [x0]
  420508:	cmp	w0, #0xf
  42050c:	b.ls	420528 <server_process_audit_message+0x234>  // b.plast
  420510:	ldr	x0, [sp, #104]
  420514:	ldr	w0, [x0]
  420518:	mov	w0, w0
  42051c:	ldr	x1, [sp, #40]
  420520:	cmp	x1, x0
  420524:	b.cs	4205a0 <server_process_audit_message+0x2ac>  // b.hs, b.nlast
  420528:	mov	w0, #0x3                   	// #3
  42052c:	str	w0, [sp, #68]
  420530:	str	wzr, [sp, #72]
  420534:	str	wzr, [sp, #76]
  420538:	ldr	w0, [sp, #76]
  42053c:	bl	406c30 <log_get_max_level_realm@plt>
  420540:	mov	w1, w0
  420544:	ldr	w0, [sp, #68]
  420548:	and	w0, w0, #0x7
  42054c:	cmp	w1, w0
  420550:	b.lt	420594 <server_process_audit_message+0x2a0>  // b.tstop
  420554:	ldr	w0, [sp, #76]
  420558:	lsl	w1, w0, #10
  42055c:	ldr	w0, [sp, #68]
  420560:	orr	w6, w1, w0
  420564:	adrp	x0, 42c000 <__func__.10684+0x8>
  420568:	add	x1, x0, #0x3eb
  42056c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420570:	add	x5, x0, #0x850
  420574:	adrp	x0, 42c000 <__func__.10684+0x8>
  420578:	add	x4, x0, #0xa98
  42057c:	mov	w3, #0x1bb                 	// #443
  420580:	mov	x2, x1
  420584:	ldr	w1, [sp, #72]
  420588:	mov	w0, w6
  42058c:	bl	406590 <log_internal_realm@plt>
  420590:	b	420640 <server_process_audit_message+0x34c>
  420594:	ldr	w0, [sp, #72]
  420598:	cmp	w0, #0x0
  42059c:	b	420640 <server_process_audit_message+0x34c>
  4205a0:	strb	wzr, [sp, #67]
  4205a4:	ldr	x0, [sp, #104]
  4205a8:	ldrh	w0, [x0, #4]
  4205ac:	sub	w0, w0, #0x1
  4205b0:	cmp	w0, #0x1
  4205b4:	b.hi	4205c0 <server_process_audit_message+0x2cc>  // b.pmore
  4205b8:	mov	w0, #0x1                   	// #1
  4205bc:	strb	w0, [sp, #67]
  4205c0:	nop
  4205c4:	ldrb	w0, [sp, #67]
  4205c8:	cmp	w0, #0x0
  4205cc:	b.ne	420634 <server_process_audit_message+0x340>  // b.any
  4205d0:	ldr	x0, [sp, #104]
  4205d4:	ldrh	w0, [x0, #4]
  4205d8:	cmp	w0, #0x44b
  4205dc:	b.hi	4205f0 <server_process_audit_message+0x2fc>  // b.pmore
  4205e0:	ldr	x0, [sp, #104]
  4205e4:	ldrh	w0, [x0, #4]
  4205e8:	cmp	w0, #0x3ed
  4205ec:	b.ne	42063c <server_process_audit_message+0x348>  // b.any
  4205f0:	ldr	x0, [sp, #104]
  4205f4:	ldrh	w0, [x0, #4]
  4205f8:	mov	w4, w0
  4205fc:	ldr	x0, [sp, #104]
  420600:	add	x1, x0, #0x10
  420604:	ldr	x0, [sp, #104]
  420608:	ldr	w0, [x0]
  42060c:	mov	w0, w0
  420610:	sub	x0, x0, #0x10
  420614:	mov	x3, x0
  420618:	mov	x2, x1
  42061c:	mov	w1, w4
  420620:	ldr	x0, [sp, #56]
  420624:	bl	41f99c <process_audit_string>
  420628:	b	420640 <server_process_audit_message+0x34c>
  42062c:	nop
  420630:	b	420640 <server_process_audit_message+0x34c>
  420634:	nop
  420638:	b	420640 <server_process_audit_message+0x34c>
  42063c:	nop
  420640:	ldp	x29, x30, [sp], #112
  420644:	ret

0000000000420648 <enable_audit>:
  420648:	stp	x29, x30, [sp, #-304]!
  42064c:	mov	x29, sp
  420650:	str	w0, [sp, #28]
  420654:	strb	w1, [sp, #27]
  420658:	adrp	x0, 441000 <wordlist.9471+0x208>
  42065c:	ldr	x0, [x0, #4064]
  420660:	ldr	x1, [x0]
  420664:	str	x1, [sp, #296]
  420668:	mov	x1, #0x0                   	// #0
  42066c:	stp	xzr, xzr, [sp, #112]
  420670:	stp	xzr, xzr, [sp, #128]
  420674:	stp	xzr, xzr, [sp, #144]
  420678:	str	xzr, [sp, #160]
  42067c:	mov	w0, #0x38                  	// #56
  420680:	str	w0, [sp, #112]
  420684:	mov	w0, #0x3e9                 	// #1001
  420688:	strh	w0, [sp, #116]
  42068c:	mov	w0, #0x1                   	// #1
  420690:	strh	w0, [sp, #118]
  420694:	mov	w0, #0x1                   	// #1
  420698:	str	w0, [sp, #120]
  42069c:	mov	w0, #0x1                   	// #1
  4206a0:	str	w0, [sp, #128]
  4206a4:	ldrb	w0, [sp, #27]
  4206a8:	str	w0, [sp, #132]
  4206ac:	stp	xzr, xzr, [sp, #168]
  4206b0:	stp	xzr, xzr, [sp, #184]
  4206b4:	stp	xzr, xzr, [sp, #200]
  4206b8:	stp	xzr, xzr, [sp, #216]
  4206bc:	stp	xzr, xzr, [sp, #232]
  4206c0:	stp	xzr, xzr, [sp, #248]
  4206c4:	add	x0, sp, #0x200
  4206c8:	stp	xzr, xzr, [x0, #-248]
  4206cc:	add	x0, sp, #0x200
  4206d0:	stp	xzr, xzr, [x0, #-232]
  4206d4:	mov	w0, #0x10                  	// #16
  4206d8:	strh	w0, [sp, #168]
  4206dc:	add	x0, sp, #0x70
  4206e0:	str	x0, [sp, #40]
  4206e4:	mov	x0, #0x38                  	// #56
  4206e8:	str	x0, [sp, #48]
  4206ec:	stp	xzr, xzr, [sp, #56]
  4206f0:	stp	xzr, xzr, [sp, #72]
  4206f4:	stp	xzr, xzr, [sp, #88]
  4206f8:	str	xzr, [sp, #104]
  4206fc:	add	x0, sp, #0xa8
  420700:	str	x0, [sp, #56]
  420704:	mov	w0, #0xc                   	// #12
  420708:	str	w0, [sp, #64]
  42070c:	add	x0, sp, #0x28
  420710:	str	x0, [sp, #72]
  420714:	mov	x0, #0x1                   	// #1
  420718:	str	x0, [sp, #80]
  42071c:	add	x0, sp, #0x38
  420720:	mov	w2, #0x4000                	// #16384
  420724:	mov	x1, x0
  420728:	ldr	w0, [sp, #28]
  42072c:	bl	4069b0 <sendmsg@plt>
  420730:	str	x0, [sp, #32]
  420734:	ldr	x0, [sp, #32]
  420738:	cmp	x0, #0x0
  42073c:	b.ge	420750 <enable_audit+0x108>  // b.tcont
  420740:	bl	4062e0 <__errno_location@plt>
  420744:	ldr	w0, [x0]
  420748:	neg	w0, w0
  42074c:	b	420768 <enable_audit+0x120>
  420750:	ldr	x0, [sp, #32]
  420754:	cmp	x0, #0x38
  420758:	b.eq	420764 <enable_audit+0x11c>  // b.none
  42075c:	mov	w0, #0xfffffffb            	// #-5
  420760:	b	420768 <enable_audit+0x120>
  420764:	mov	w0, #0x0                   	// #0
  420768:	mov	w1, w0
  42076c:	adrp	x0, 441000 <wordlist.9471+0x208>
  420770:	ldr	x0, [x0, #4064]
  420774:	ldr	x2, [sp, #296]
  420778:	ldr	x0, [x0]
  42077c:	eor	x0, x2, x0
  420780:	cmp	x0, #0x0
  420784:	b.eq	42078c <enable_audit+0x144>  // b.none
  420788:	bl	4063e0 <__stack_chk_fail@plt>
  42078c:	mov	w0, w1
  420790:	ldp	x29, x30, [sp], #304
  420794:	ret

0000000000420798 <server_open_audit>:
  420798:	stp	x29, x30, [sp, #-112]!
  42079c:	mov	x29, sp
  4207a0:	str	x0, [sp, #24]
  4207a4:	ldr	x0, [sp, #24]
  4207a8:	ldr	w0, [x0, #16]
  4207ac:	cmp	w0, #0x0
  4207b0:	b.ge	4209d8 <server_open_audit+0x240>  // b.tcont
  4207b4:	mov	w2, #0x9                   	// #9
  4207b8:	mov	w1, #0x803                 	// #2051
  4207bc:	movk	w1, #0x8, lsl #16
  4207c0:	mov	w0, #0x10                  	// #16
  4207c4:	bl	405db0 <socket@plt>
  4207c8:	mov	w1, w0
  4207cc:	ldr	x0, [sp, #24]
  4207d0:	str	w1, [x0, #16]
  4207d4:	ldr	x0, [sp, #24]
  4207d8:	ldr	w0, [x0, #16]
  4207dc:	cmp	w0, #0x0
  4207e0:	b.ge	420914 <server_open_audit+0x17c>  // b.tcont
  4207e4:	strb	wzr, [sp, #35]
  4207e8:	bl	4062e0 <__errno_location@plt>
  4207ec:	ldr	w0, [x0]
  4207f0:	cmp	w0, #0x5d
  4207f4:	b.eq	420800 <server_open_audit+0x68>  // b.none
  4207f8:	cmp	w0, #0x61
  4207fc:	b.ne	420808 <server_open_audit+0x70>  // b.any
  420800:	mov	w0, #0x1                   	// #1
  420804:	strb	w0, [sp, #35]
  420808:	nop
  42080c:	ldrb	w0, [sp, #35]
  420810:	cmp	w0, #0x0
  420814:	b.eq	420890 <server_open_audit+0xf8>  // b.none
  420818:	mov	w0, #0x7                   	// #7
  42081c:	str	w0, [sp, #60]
  420820:	str	wzr, [sp, #64]
  420824:	str	wzr, [sp, #68]
  420828:	ldr	w0, [sp, #68]
  42082c:	bl	406c30 <log_get_max_level_realm@plt>
  420830:	mov	w1, w0
  420834:	ldr	w0, [sp, #60]
  420838:	and	w0, w0, #0x7
  42083c:	cmp	w1, w0
  420840:	b.lt	420884 <server_open_audit+0xec>  // b.tstop
  420844:	ldr	w0, [sp, #68]
  420848:	lsl	w1, w0, #10
  42084c:	ldr	w0, [sp, #60]
  420850:	orr	w6, w1, w0
  420854:	adrp	x0, 42c000 <__func__.10684+0x8>
  420858:	add	x1, x0, #0x3eb
  42085c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420860:	add	x5, x0, #0x878
  420864:	adrp	x0, 42c000 <__func__.10684+0x8>
  420868:	add	x4, x0, #0xab8
  42086c:	mov	w3, #0x204                 	// #516
  420870:	mov	x2, x1
  420874:	ldr	w1, [sp, #64]
  420878:	mov	w0, w6
  42087c:	bl	406590 <log_internal_realm@plt>
  420880:	b	42090c <server_open_audit+0x174>
  420884:	ldr	w0, [sp, #64]
  420888:	cmp	w0, #0x0
  42088c:	b	42090c <server_open_audit+0x174>
  420890:	mov	w0, #0x4                   	// #4
  420894:	str	w0, [sp, #48]
  420898:	bl	4062e0 <__errno_location@plt>
  42089c:	ldr	w0, [x0]
  4208a0:	str	w0, [sp, #52]
  4208a4:	str	wzr, [sp, #56]
  4208a8:	ldr	w0, [sp, #56]
  4208ac:	bl	406c30 <log_get_max_level_realm@plt>
  4208b0:	mov	w1, w0
  4208b4:	ldr	w0, [sp, #48]
  4208b8:	and	w0, w0, #0x7
  4208bc:	cmp	w1, w0
  4208c0:	b.lt	420904 <server_open_audit+0x16c>  // b.tstop
  4208c4:	ldr	w0, [sp, #56]
  4208c8:	lsl	w1, w0, #10
  4208cc:	ldr	w0, [sp, #48]
  4208d0:	orr	w6, w1, w0
  4208d4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4208d8:	add	x1, x0, #0x3eb
  4208dc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4208e0:	add	x5, x0, #0x8a0
  4208e4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4208e8:	add	x4, x0, #0xab8
  4208ec:	mov	w3, #0x206                 	// #518
  4208f0:	mov	x2, x1
  4208f4:	ldr	w1, [sp, #52]
  4208f8:	mov	w0, w6
  4208fc:	bl	406590 <log_internal_realm@plt>
  420900:	b	42090c <server_open_audit+0x174>
  420904:	ldr	w0, [sp, #52]
  420908:	cmp	w0, #0x0
  42090c:	mov	w0, #0x0                   	// #0
  420910:	b	420bfc <server_open_audit+0x464>
  420914:	ldr	x0, [sp, #24]
  420918:	ldr	w3, [x0, #16]
  42091c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420920:	add	x0, x0, #0xad0
  420924:	mov	w2, #0xc                   	// #12
  420928:	mov	x1, x0
  42092c:	mov	w0, w3
  420930:	bl	4065b0 <bind@plt>
  420934:	cmp	w0, #0x0
  420938:	b.ge	4209e8 <server_open_audit+0x250>  // b.tcont
  42093c:	mov	w0, #0x4                   	// #4
  420940:	str	w0, [sp, #36]
  420944:	bl	4062e0 <__errno_location@plt>
  420948:	ldr	w0, [x0]
  42094c:	str	w0, [sp, #40]
  420950:	str	wzr, [sp, #44]
  420954:	ldr	w0, [sp, #44]
  420958:	bl	406c30 <log_get_max_level_realm@plt>
  42095c:	mov	w1, w0
  420960:	ldr	w0, [sp, #36]
  420964:	and	w0, w0, #0x7
  420968:	cmp	w1, w0
  42096c:	b.lt	4209b0 <server_open_audit+0x218>  // b.tstop
  420970:	ldr	w0, [sp, #44]
  420974:	lsl	w1, w0, #10
  420978:	ldr	w0, [sp, #36]
  42097c:	orr	w6, w1, w0
  420980:	adrp	x0, 42c000 <__func__.10684+0x8>
  420984:	add	x1, x0, #0x3eb
  420988:	adrp	x0, 42c000 <__func__.10684+0x8>
  42098c:	add	x5, x0, #0x8d0
  420990:	adrp	x0, 42c000 <__func__.10684+0x8>
  420994:	add	x4, x0, #0xab8
  420998:	mov	w3, #0x20c                 	// #524
  42099c:	mov	x2, x1
  4209a0:	ldr	w1, [sp, #40]
  4209a4:	mov	w0, w6
  4209a8:	bl	406590 <log_internal_realm@plt>
  4209ac:	b	4209b8 <server_open_audit+0x220>
  4209b0:	ldr	w0, [sp, #40]
  4209b4:	cmp	w0, #0x0
  4209b8:	ldr	x0, [sp, #24]
  4209bc:	ldr	w0, [x0, #16]
  4209c0:	bl	405f40 <safe_close@plt>
  4209c4:	mov	w1, w0
  4209c8:	ldr	x0, [sp, #24]
  4209cc:	str	w1, [x0, #16]
  4209d0:	mov	w0, #0x0                   	// #0
  4209d4:	b	420bfc <server_open_audit+0x464>
  4209d8:	ldr	x0, [sp, #24]
  4209dc:	ldr	w0, [x0, #16]
  4209e0:	mov	w1, #0x1                   	// #1
  4209e4:	bl	405e60 <fd_nonblock@plt>
  4209e8:	ldr	x0, [sp, #24]
  4209ec:	ldr	w0, [x0, #16]
  4209f0:	mov	w3, #0x1                   	// #1
  4209f4:	mov	w2, #0x10                  	// #16
  4209f8:	mov	w1, #0x1                   	// #1
  4209fc:	bl	41e8f0 <setsockopt_int>
  420a00:	str	w0, [sp, #72]
  420a04:	ldr	w0, [sp, #72]
  420a08:	cmp	w0, #0x0
  420a0c:	b.ge	420a98 <server_open_audit+0x300>  // b.tcont
  420a10:	mov	w0, #0x3                   	// #3
  420a14:	str	w0, [sp, #100]
  420a18:	ldr	w0, [sp, #72]
  420a1c:	str	w0, [sp, #104]
  420a20:	str	wzr, [sp, #108]
  420a24:	ldr	w0, [sp, #108]
  420a28:	bl	406c30 <log_get_max_level_realm@plt>
  420a2c:	mov	w1, w0
  420a30:	ldr	w0, [sp, #100]
  420a34:	and	w0, w0, #0x7
  420a38:	cmp	w1, w0
  420a3c:	b.lt	420a80 <server_open_audit+0x2e8>  // b.tstop
  420a40:	ldr	w0, [sp, #108]
  420a44:	lsl	w1, w0, #10
  420a48:	ldr	w0, [sp, #100]
  420a4c:	orr	w6, w1, w0
  420a50:	adrp	x0, 42c000 <__func__.10684+0x8>
  420a54:	add	x1, x0, #0x3eb
  420a58:	adrp	x0, 42c000 <__func__.10684+0x8>
  420a5c:	add	x5, x0, #0x950
  420a60:	adrp	x0, 42c000 <__func__.10684+0x8>
  420a64:	add	x4, x0, #0xab8
  420a68:	mov	w3, #0x218                 	// #536
  420a6c:	mov	x2, x1
  420a70:	ldr	w1, [sp, #104]
  420a74:	mov	w0, w6
  420a78:	bl	406590 <log_internal_realm@plt>
  420a7c:	b	420bfc <server_open_audit+0x464>
  420a80:	ldr	w0, [sp, #104]
  420a84:	cmp	w0, #0x0
  420a88:	cneg	w0, w0, lt  // lt = tstop
  420a8c:	and	w0, w0, #0xff
  420a90:	neg	w0, w0
  420a94:	b	420bfc <server_open_audit+0x464>
  420a98:	ldr	x0, [sp, #24]
  420a9c:	ldr	x6, [x0, #32]
  420aa0:	ldr	x0, [sp, #24]
  420aa4:	add	x1, x0, #0x48
  420aa8:	ldr	x0, [sp, #24]
  420aac:	ldr	w2, [x0, #16]
  420ab0:	ldr	x5, [sp, #24]
  420ab4:	adrp	x0, 441000 <wordlist.9471+0x208>
  420ab8:	ldr	x4, [x0, #4088]
  420abc:	mov	w3, #0x1                   	// #1
  420ac0:	mov	x0, x6
  420ac4:	bl	406680 <sd_event_add_io@plt>
  420ac8:	str	w0, [sp, #72]
  420acc:	ldr	w0, [sp, #72]
  420ad0:	cmp	w0, #0x0
  420ad4:	b.ge	420b60 <server_open_audit+0x3c8>  // b.tcont
  420ad8:	mov	w0, #0x3                   	// #3
  420adc:	str	w0, [sp, #88]
  420ae0:	ldr	w0, [sp, #72]
  420ae4:	str	w0, [sp, #92]
  420ae8:	str	wzr, [sp, #96]
  420aec:	ldr	w0, [sp, #96]
  420af0:	bl	406c30 <log_get_max_level_realm@plt>
  420af4:	mov	w1, w0
  420af8:	ldr	w0, [sp, #88]
  420afc:	and	w0, w0, #0x7
  420b00:	cmp	w1, w0
  420b04:	b.lt	420b48 <server_open_audit+0x3b0>  // b.tstop
  420b08:	ldr	w0, [sp, #96]
  420b0c:	lsl	w1, w0, #10
  420b10:	ldr	w0, [sp, #88]
  420b14:	orr	w6, w1, w0
  420b18:	adrp	x0, 42c000 <__func__.10684+0x8>
  420b1c:	add	x1, x0, #0x3eb
  420b20:	adrp	x0, 42c000 <__func__.10684+0x8>
  420b24:	add	x5, x0, #0x980
  420b28:	adrp	x0, 42c000 <__func__.10684+0x8>
  420b2c:	add	x4, x0, #0xab8
  420b30:	mov	w3, #0x21c                 	// #540
  420b34:	mov	x2, x1
  420b38:	ldr	w1, [sp, #92]
  420b3c:	mov	w0, w6
  420b40:	bl	406590 <log_internal_realm@plt>
  420b44:	b	420bfc <server_open_audit+0x464>
  420b48:	ldr	w0, [sp, #92]
  420b4c:	cmp	w0, #0x0
  420b50:	cneg	w0, w0, lt  // lt = tstop
  420b54:	and	w0, w0, #0xff
  420b58:	neg	w0, w0
  420b5c:	b	420bfc <server_open_audit+0x464>
  420b60:	ldr	x0, [sp, #24]
  420b64:	ldr	w0, [x0, #16]
  420b68:	mov	w1, #0x1                   	// #1
  420b6c:	bl	420648 <enable_audit>
  420b70:	str	w0, [sp, #72]
  420b74:	ldr	w0, [sp, #72]
  420b78:	cmp	w0, #0x0
  420b7c:	b.ge	420bf8 <server_open_audit+0x460>  // b.tcont
  420b80:	mov	w0, #0x4                   	// #4
  420b84:	str	w0, [sp, #76]
  420b88:	ldr	w0, [sp, #72]
  420b8c:	str	w0, [sp, #80]
  420b90:	str	wzr, [sp, #84]
  420b94:	ldr	w0, [sp, #84]
  420b98:	bl	406c30 <log_get_max_level_realm@plt>
  420b9c:	mov	w1, w0
  420ba0:	ldr	w0, [sp, #76]
  420ba4:	and	w0, w0, #0x7
  420ba8:	cmp	w1, w0
  420bac:	b.lt	420bf0 <server_open_audit+0x458>  // b.tstop
  420bb0:	ldr	w0, [sp, #84]
  420bb4:	lsl	w1, w0, #10
  420bb8:	ldr	w0, [sp, #76]
  420bbc:	orr	w6, w1, w0
  420bc0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420bc4:	add	x1, x0, #0x3eb
  420bc8:	adrp	x0, 42c000 <__func__.10684+0x8>
  420bcc:	add	x5, x0, #0x9b0
  420bd0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420bd4:	add	x4, x0, #0xab8
  420bd8:	mov	w3, #0x221                 	// #545
  420bdc:	mov	x2, x1
  420be0:	ldr	w1, [sp, #80]
  420be4:	mov	w0, w6
  420be8:	bl	406590 <log_internal_realm@plt>
  420bec:	b	420bf8 <server_open_audit+0x460>
  420bf0:	ldr	w0, [sp, #80]
  420bf4:	cmp	w0, #0x0
  420bf8:	mov	w0, #0x0                   	// #0
  420bfc:	ldp	x29, x30, [sp], #112
  420c00:	ret

0000000000420c04 <freep>:
  420c04:	stp	x29, x30, [sp, #-32]!
  420c08:	mov	x29, sp
  420c0c:	str	x0, [sp, #24]
  420c10:	ldr	x0, [sp, #24]
  420c14:	ldr	x0, [x0]
  420c18:	bl	406930 <free@plt>
  420c1c:	nop
  420c20:	ldp	x29, x30, [sp], #32
  420c24:	ret

0000000000420c28 <closep>:
  420c28:	stp	x29, x30, [sp, #-32]!
  420c2c:	mov	x29, sp
  420c30:	str	x0, [sp, #24]
  420c34:	ldr	x0, [sp, #24]
  420c38:	ldr	w0, [x0]
  420c3c:	bl	405f40 <safe_close@plt>
  420c40:	nop
  420c44:	ldp	x29, x30, [sp], #32
  420c48:	ret

0000000000420c4c <prefix_timestamp>:
  420c4c:	stp	x29, x30, [sp, #-32]!
  420c50:	mov	x29, sp
  420c54:	adrp	x0, 441000 <wordlist.9471+0x208>
  420c58:	ldr	x0, [x0, #4064]
  420c5c:	ldr	x1, [x0]
  420c60:	str	x1, [sp, #24]
  420c64:	mov	x1, #0x0                   	// #0
  420c68:	adrp	x0, 442000 <cached_printk_time.11702>
  420c6c:	add	x0, x0, #0x0
  420c70:	ldr	w0, [x0]
  420c74:	lsr	w0, w0, #31
  420c78:	and	w0, w0, #0xff
  420c7c:	and	x0, x0, #0xff
  420c80:	cmp	x0, #0x0
  420c84:	b.eq	420cd8 <prefix_timestamp+0x8c>  // b.none
  420c88:	str	xzr, [sp, #16]
  420c8c:	add	x0, sp, #0x10
  420c90:	mov	x1, x0
  420c94:	adrp	x0, 42c000 <__func__.10684+0x8>
  420c98:	add	x0, x0, #0xb50
  420c9c:	bl	406390 <read_one_line_file@plt>
  420ca0:	cmp	w0, #0x0
  420ca4:	b.lt	420cc0 <prefix_timestamp+0x74>  // b.tstop
  420ca8:	ldr	x0, [sp, #16]
  420cac:	bl	405c40 <parse_boolean@plt>
  420cb0:	cmp	w0, #0x0
  420cb4:	b.le	420cc0 <prefix_timestamp+0x74>
  420cb8:	mov	w0, #0x1                   	// #1
  420cbc:	b	420cc4 <prefix_timestamp+0x78>
  420cc0:	mov	w0, #0x0                   	// #0
  420cc4:	adrp	x1, 442000 <cached_printk_time.11702>
  420cc8:	add	x1, x1, #0x0
  420ccc:	str	w0, [x1]
  420cd0:	add	x0, sp, #0x10
  420cd4:	bl	420c04 <freep>
  420cd8:	adrp	x0, 442000 <cached_printk_time.11702>
  420cdc:	add	x0, x0, #0x0
  420ce0:	ldr	w0, [x0]
  420ce4:	cmp	w0, #0x0
  420ce8:	cset	w0, ne  // ne = any
  420cec:	and	w0, w0, #0xff
  420cf0:	mov	w1, w0
  420cf4:	adrp	x0, 441000 <wordlist.9471+0x208>
  420cf8:	ldr	x0, [x0, #4064]
  420cfc:	ldr	x2, [sp, #24]
  420d00:	ldr	x0, [x0]
  420d04:	eor	x0, x2, x0
  420d08:	cmp	x0, #0x0
  420d0c:	b.eq	420d14 <prefix_timestamp+0xc8>  // b.none
  420d10:	bl	4063e0 <__stack_chk_fail@plt>
  420d14:	mov	w0, w1
  420d18:	ldp	x29, x30, [sp], #32
  420d1c:	ret

0000000000420d20 <server_forward_console>:
  420d20:	stp	x29, x30, [sp, #-304]!
  420d24:	mov	x29, sp
  420d28:	str	x19, [sp, #16]
  420d2c:	str	x0, [sp, #72]
  420d30:	str	w1, [sp, #68]
  420d34:	str	x2, [sp, #56]
  420d38:	str	x3, [sp, #48]
  420d3c:	str	x4, [sp, #40]
  420d40:	adrp	x0, 441000 <wordlist.9471+0x208>
  420d44:	ldr	x0, [x0, #4064]
  420d48:	ldr	x1, [x0]
  420d4c:	str	x1, [sp, #296]
  420d50:	mov	x1, #0x0                   	// #0
  420d54:	str	xzr, [sp, #120]
  420d58:	mov	w0, #0xffffffff            	// #-1
  420d5c:	str	w0, [sp, #88]
  420d60:	str	wzr, [sp, #92]
  420d64:	ldr	x0, [sp, #72]
  420d68:	cmp	x0, #0x0
  420d6c:	cset	w0, eq  // eq = none
  420d70:	and	w0, w0, #0xff
  420d74:	and	x0, x0, #0xff
  420d78:	cmp	x0, #0x0
  420d7c:	b.eq	420da8 <server_forward_console+0x88>  // b.none
  420d80:	adrp	x0, 42c000 <__func__.10684+0x8>
  420d84:	add	x1, x0, #0xb7b
  420d88:	adrp	x0, 42c000 <__func__.10684+0x8>
  420d8c:	add	x4, x0, #0xcc0
  420d90:	mov	w3, #0x32                  	// #50
  420d94:	mov	x2, x1
  420d98:	adrp	x0, 42c000 <__func__.10684+0x8>
  420d9c:	add	x1, x0, #0xba0
  420da0:	mov	w0, #0x0                   	// #0
  420da4:	bl	405fd0 <log_assert_failed_realm@plt>
  420da8:	ldr	x0, [sp, #48]
  420dac:	cmp	x0, #0x0
  420db0:	cset	w0, eq  // eq = none
  420db4:	and	w0, w0, #0xff
  420db8:	and	x0, x0, #0xff
  420dbc:	cmp	x0, #0x0
  420dc0:	b.eq	420dec <server_forward_console+0xcc>  // b.none
  420dc4:	adrp	x0, 42c000 <__func__.10684+0x8>
  420dc8:	add	x1, x0, #0xb7b
  420dcc:	adrp	x0, 42c000 <__func__.10684+0x8>
  420dd0:	add	x4, x0, #0xcc0
  420dd4:	mov	w3, #0x33                  	// #51
  420dd8:	mov	x2, x1
  420ddc:	adrp	x0, 42c000 <__func__.10684+0x8>
  420de0:	add	x1, x0, #0xba8
  420de4:	mov	w0, #0x0                   	// #0
  420de8:	bl	405fd0 <log_assert_failed_realm@plt>
  420dec:	ldr	w0, [sp, #68]
  420df0:	and	w1, w0, #0x7
  420df4:	ldr	x0, [sp, #72]
  420df8:	ldr	w0, [x0, #548]
  420dfc:	cmp	w1, w0
  420e00:	b.le	420e0c <server_forward_console+0xec>
  420e04:	mov	w19, #0x0                   	// #0
  420e08:	b	421298 <server_forward_console+0x578>
  420e0c:	bl	420c4c <prefix_timestamp>
  420e10:	and	w0, w0, #0xff
  420e14:	cmp	w0, #0x0
  420e18:	b.eq	420f2c <server_forward_console+0x20c>  // b.none
  420e1c:	add	x0, sp, #0x88
  420e20:	mov	x1, x0
  420e24:	mov	w0, #0x1                   	// #1
  420e28:	bl	405c30 <clock_gettime@plt>
  420e2c:	cmp	w0, #0x0
  420e30:	cset	w0, ne  // ne = any
  420e34:	and	w0, w0, #0xff
  420e38:	and	x0, x0, #0xff
  420e3c:	cmp	x0, #0x0
  420e40:	b.eq	420e6c <server_forward_console+0x14c>  // b.none
  420e44:	adrp	x0, 42c000 <__func__.10684+0x8>
  420e48:	add	x1, x0, #0xb7b
  420e4c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420e50:	add	x4, x0, #0xcc0
  420e54:	mov	w3, #0x3a                  	// #58
  420e58:	mov	x2, x1
  420e5c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420e60:	add	x1, x0, #0xbb0
  420e64:	mov	w0, #0x0                   	// #0
  420e68:	bl	405fd0 <log_assert_failed_realm@plt>
  420e6c:	ldr	x2, [sp, #136]
  420e70:	ldr	x0, [sp, #144]
  420e74:	lsr	x1, x0, #3
  420e78:	mov	x0, #0xf7cf                	// #63439
  420e7c:	movk	x0, #0xe353, lsl #16
  420e80:	movk	x0, #0x9ba5, lsl #32
  420e84:	movk	x0, #0x20c4, lsl #48
  420e88:	umulh	x0, x1, x0
  420e8c:	lsr	x0, x0, #4
  420e90:	add	x5, sp, #0xf8
  420e94:	mov	x4, x0
  420e98:	mov	x3, x2
  420e9c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420ea0:	add	x2, x0, #0xbe0
  420ea4:	mov	x1, #0x2d                  	// #45
  420ea8:	mov	x0, x5
  420eac:	bl	405de0 <snprintf@plt>
  420eb0:	cmp	w0, #0x2c
  420eb4:	cset	w0, hi  // hi = pmore
  420eb8:	and	w0, w0, #0xff
  420ebc:	and	x0, x0, #0xff
  420ec0:	cmp	x0, #0x0
  420ec4:	b.eq	420ef0 <server_forward_console+0x1d0>  // b.none
  420ec8:	adrp	x0, 42c000 <__func__.10684+0x8>
  420ecc:	add	x1, x0, #0xb7b
  420ed0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420ed4:	add	x4, x0, #0xcc0
  420ed8:	mov	w3, #0x3b                  	// #59
  420edc:	mov	x2, x1
  420ee0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420ee4:	add	x1, x0, #0xbf0
  420ee8:	mov	w0, #0x0                   	// #0
  420eec:	bl	405fd0 <log_assert_failed_realm@plt>
  420ef0:	ldr	w19, [sp, #92]
  420ef4:	add	w0, w19, #0x1
  420ef8:	str	w0, [sp, #92]
  420efc:	add	x0, sp, #0xf8
  420f00:	bl	406af0 <strlen@plt>
  420f04:	mov	x3, x0
  420f08:	sxtw	x0, w19
  420f0c:	lsl	x0, x0, #4
  420f10:	add	x1, sp, #0x98
  420f14:	add	x2, sp, #0xf8
  420f18:	str	x2, [x1, x0]
  420f1c:	sxtw	x0, w19
  420f20:	lsl	x0, x0, #4
  420f24:	add	x1, sp, #0xa0
  420f28:	str	x3, [x1, x0]
  420f2c:	ldr	x0, [sp, #40]
  420f30:	cmp	x0, #0x0
  420f34:	b.eq	421048 <server_forward_console+0x328>  // b.none
  420f38:	ldr	x0, [sp, #56]
  420f3c:	cmp	x0, #0x0
  420f40:	b.ne	420f5c <server_forward_console+0x23c>  // b.any
  420f44:	ldr	x0, [sp, #40]
  420f48:	ldr	w0, [x0]
  420f4c:	add	x1, sp, #0x78
  420f50:	bl	406280 <get_process_comm@plt>
  420f54:	ldr	x0, [sp, #120]
  420f58:	str	x0, [sp, #56]
  420f5c:	ldr	x0, [sp, #40]
  420f60:	ldr	w0, [x0]
  420f64:	add	x4, sp, #0xe8
  420f68:	mov	w3, w0
  420f6c:	adrp	x0, 42c000 <__func__.10684+0x8>
  420f70:	add	x2, x0, #0xc18
  420f74:	mov	x1, #0x10                  	// #16
  420f78:	mov	x0, x4
  420f7c:	bl	405de0 <snprintf@plt>
  420f80:	cmp	w0, #0xf
  420f84:	cset	w0, hi  // hi = pmore
  420f88:	and	w0, w0, #0xff
  420f8c:	and	x0, x0, #0xff
  420f90:	cmp	x0, #0x0
  420f94:	b.eq	420fc0 <server_forward_console+0x2a0>  // b.none
  420f98:	adrp	x0, 42c000 <__func__.10684+0x8>
  420f9c:	add	x1, x0, #0xb7b
  420fa0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420fa4:	add	x4, x0, #0xcc0
  420fa8:	mov	w3, #0x49                  	// #73
  420fac:	mov	x2, x1
  420fb0:	adrp	x0, 42c000 <__func__.10684+0x8>
  420fb4:	add	x1, x0, #0xc20
  420fb8:	mov	w0, #0x0                   	// #0
  420fbc:	bl	405fd0 <log_assert_failed_realm@plt>
  420fc0:	ldr	x0, [sp, #56]
  420fc4:	cmp	x0, #0x0
  420fc8:	b.eq	421008 <server_forward_console+0x2e8>  // b.none
  420fcc:	ldr	w19, [sp, #92]
  420fd0:	add	w0, w19, #0x1
  420fd4:	str	w0, [sp, #92]
  420fd8:	ldr	x0, [sp, #56]
  420fdc:	bl	406af0 <strlen@plt>
  420fe0:	mov	x3, x0
  420fe4:	sxtw	x0, w19
  420fe8:	lsl	x0, x0, #4
  420fec:	add	x1, sp, #0x98
  420ff0:	ldr	x2, [sp, #56]
  420ff4:	str	x2, [x1, x0]
  420ff8:	sxtw	x0, w19
  420ffc:	lsl	x0, x0, #4
  421000:	add	x1, sp, #0xa0
  421004:	str	x3, [x1, x0]
  421008:	ldr	w19, [sp, #92]
  42100c:	add	w0, w19, #0x1
  421010:	str	w0, [sp, #92]
  421014:	add	x0, sp, #0xe8
  421018:	bl	406af0 <strlen@plt>
  42101c:	mov	x3, x0
  421020:	sxtw	x0, w19
  421024:	lsl	x0, x0, #4
  421028:	add	x1, sp, #0x98
  42102c:	add	x2, sp, #0xe8
  421030:	str	x2, [x1, x0]
  421034:	sxtw	x0, w19
  421038:	lsl	x0, x0, #4
  42103c:	add	x1, sp, #0xa0
  421040:	str	x3, [x1, x0]
  421044:	b	4210c8 <server_forward_console+0x3a8>
  421048:	ldr	x0, [sp, #56]
  42104c:	cmp	x0, #0x0
  421050:	b.eq	4210c8 <server_forward_console+0x3a8>  // b.none
  421054:	ldr	w19, [sp, #92]
  421058:	add	w0, w19, #0x1
  42105c:	str	w0, [sp, #92]
  421060:	ldr	x0, [sp, #56]
  421064:	bl	406af0 <strlen@plt>
  421068:	mov	x3, x0
  42106c:	sxtw	x0, w19
  421070:	lsl	x0, x0, #4
  421074:	add	x1, sp, #0x98
  421078:	ldr	x2, [sp, #56]
  42107c:	str	x2, [x1, x0]
  421080:	sxtw	x0, w19
  421084:	lsl	x0, x0, #4
  421088:	add	x1, sp, #0xa0
  42108c:	str	x3, [x1, x0]
  421090:	ldr	w0, [sp, #92]
  421094:	add	w1, w0, #0x1
  421098:	str	w1, [sp, #92]
  42109c:	sxtw	x1, w0
  4210a0:	lsl	x1, x1, #4
  4210a4:	add	x2, sp, #0x98
  4210a8:	adrp	x3, 42c000 <__func__.10684+0x8>
  4210ac:	add	x3, x3, #0xc50
  4210b0:	str	x3, [x2, x1]
  4210b4:	sxtw	x0, w0
  4210b8:	lsl	x0, x0, #4
  4210bc:	add	x1, sp, #0xa0
  4210c0:	mov	x2, #0x2                   	// #2
  4210c4:	str	x2, [x1, x0]
  4210c8:	ldr	w19, [sp, #92]
  4210cc:	add	w0, w19, #0x1
  4210d0:	str	w0, [sp, #92]
  4210d4:	ldr	x0, [sp, #48]
  4210d8:	bl	406af0 <strlen@plt>
  4210dc:	mov	x3, x0
  4210e0:	sxtw	x0, w19
  4210e4:	lsl	x0, x0, #4
  4210e8:	add	x1, sp, #0x98
  4210ec:	ldr	x2, [sp, #48]
  4210f0:	str	x2, [x1, x0]
  4210f4:	sxtw	x0, w19
  4210f8:	lsl	x0, x0, #4
  4210fc:	add	x1, sp, #0xa0
  421100:	str	x3, [x1, x0]
  421104:	ldr	w0, [sp, #92]
  421108:	add	w1, w0, #0x1
  42110c:	str	w1, [sp, #92]
  421110:	sxtw	x1, w0
  421114:	lsl	x1, x1, #4
  421118:	add	x2, sp, #0x98
  42111c:	adrp	x3, 42c000 <__func__.10684+0x8>
  421120:	add	x3, x3, #0xc58
  421124:	str	x3, [x2, x1]
  421128:	sxtw	x0, w0
  42112c:	lsl	x0, x0, #4
  421130:	add	x1, sp, #0xa0
  421134:	mov	x2, #0x1                   	// #1
  421138:	str	x2, [x1, x0]
  42113c:	ldr	x0, [sp, #72]
  421140:	ldr	x0, [x0, #528]
  421144:	cmp	x0, #0x0
  421148:	b.ne	421154 <server_forward_console+0x434>  // b.any
  42114c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421150:	add	x0, x0, #0xc60
  421154:	str	x0, [sp, #128]
  421158:	mov	w1, #0x101                 	// #257
  42115c:	movk	w1, #0x8, lsl #16
  421160:	ldr	x0, [sp, #128]
  421164:	bl	406570 <open_terminal@plt>
  421168:	str	w0, [sp, #88]
  42116c:	ldr	w0, [sp, #88]
  421170:	cmp	w0, #0x0
  421174:	b.ge	4211fc <server_forward_console+0x4dc>  // b.tcont
  421178:	mov	w0, #0x7                   	// #7
  42117c:	str	w0, [sp, #108]
  421180:	ldr	w0, [sp, #88]
  421184:	str	w0, [sp, #112]
  421188:	str	wzr, [sp, #116]
  42118c:	ldr	w0, [sp, #116]
  421190:	bl	406c30 <log_get_max_level_realm@plt>
  421194:	mov	w1, w0
  421198:	ldr	w0, [sp, #108]
  42119c:	and	w0, w0, #0x7
  4211a0:	cmp	w1, w0
  4211a4:	b.lt	4211ec <server_forward_console+0x4cc>  // b.tstop
  4211a8:	ldr	w0, [sp, #116]
  4211ac:	lsl	w1, w0, #10
  4211b0:	ldr	w0, [sp, #108]
  4211b4:	orr	w7, w1, w0
  4211b8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4211bc:	add	x1, x0, #0xb7b
  4211c0:	ldr	x6, [sp, #128]
  4211c4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4211c8:	add	x5, x0, #0xc70
  4211cc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4211d0:	add	x4, x0, #0xcd8
  4211d4:	mov	w3, #0x61                  	// #97
  4211d8:	mov	x2, x1
  4211dc:	ldr	w1, [sp, #112]
  4211e0:	mov	w0, w7
  4211e4:	bl	406590 <log_internal_realm@plt>
  4211e8:	b	4211f4 <server_forward_console+0x4d4>
  4211ec:	ldr	w0, [sp, #112]
  4211f0:	cmp	w0, #0x0
  4211f4:	mov	w19, #0x0                   	// #0
  4211f8:	b	421298 <server_forward_console+0x578>
  4211fc:	ldr	w0, [sp, #88]
  421200:	add	x1, sp, #0x98
  421204:	ldr	w2, [sp, #92]
  421208:	bl	406290 <writev@plt>
  42120c:	cmp	x0, #0x0
  421210:	b.ge	421294 <server_forward_console+0x574>  // b.tcont
  421214:	mov	w0, #0x7                   	// #7
  421218:	str	w0, [sp, #96]
  42121c:	bl	4062e0 <__errno_location@plt>
  421220:	ldr	w0, [x0]
  421224:	str	w0, [sp, #100]
  421228:	str	wzr, [sp, #104]
  42122c:	ldr	w0, [sp, #104]
  421230:	bl	406c30 <log_get_max_level_realm@plt>
  421234:	mov	w1, w0
  421238:	ldr	w0, [sp, #96]
  42123c:	and	w0, w0, #0x7
  421240:	cmp	w1, w0
  421244:	b.lt	42128c <server_forward_console+0x56c>  // b.tstop
  421248:	ldr	w0, [sp, #104]
  42124c:	lsl	w1, w0, #10
  421250:	ldr	w0, [sp, #96]
  421254:	orr	w7, w1, w0
  421258:	adrp	x0, 42c000 <__func__.10684+0x8>
  42125c:	add	x1, x0, #0xb7b
  421260:	ldr	x6, [sp, #128]
  421264:	adrp	x0, 42c000 <__func__.10684+0x8>
  421268:	add	x5, x0, #0xc98
  42126c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421270:	add	x4, x0, #0xcd8
  421274:	mov	w3, #0x66                  	// #102
  421278:	mov	x2, x1
  42127c:	ldr	w1, [sp, #100]
  421280:	mov	w0, w7
  421284:	bl	406590 <log_internal_realm@plt>
  421288:	b	421294 <server_forward_console+0x574>
  42128c:	ldr	w0, [sp, #100]
  421290:	cmp	w0, #0x0
  421294:	mov	w19, #0x1                   	// #1
  421298:	add	x0, sp, #0x58
  42129c:	bl	420c28 <closep>
  4212a0:	cmp	w19, #0x1
  4212a4:	b.eq	4212b0 <server_forward_console+0x590>  // b.none
  4212a8:	mov	w19, #0x0                   	// #0
  4212ac:	b	4212b4 <server_forward_console+0x594>
  4212b0:	mov	w19, #0x1                   	// #1
  4212b4:	add	x0, sp, #0x78
  4212b8:	bl	420c04 <freep>
  4212bc:	cmp	w19, #0x1
  4212c0:	b.ne	4212c8 <server_forward_console+0x5a8>  // b.any
  4212c4:	nop
  4212c8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4212cc:	ldr	x0, [x0, #4064]
  4212d0:	ldr	x1, [sp, #296]
  4212d4:	ldr	x0, [x0]
  4212d8:	eor	x0, x1, x0
  4212dc:	cmp	x0, #0x0
  4212e0:	b.eq	4212e8 <server_forward_console+0x5c8>  // b.none
  4212e4:	bl	4063e0 <__stack_chk_fail@plt>
  4212e8:	ldr	x19, [sp, #16]
  4212ec:	ldp	x29, x30, [sp], #304
  4212f0:	ret

00000000004212f4 <mfree>:
  4212f4:	stp	x29, x30, [sp, #-32]!
  4212f8:	mov	x29, sp
  4212fc:	str	x0, [sp, #24]
  421300:	ldr	x0, [sp, #24]
  421304:	bl	406930 <free@plt>
  421308:	mov	x0, #0x0                   	// #0
  42130c:	ldp	x29, x30, [sp], #32
  421310:	ret

0000000000421314 <freep>:
  421314:	stp	x29, x30, [sp, #-32]!
  421318:	mov	x29, sp
  42131c:	str	x0, [sp, #24]
  421320:	ldr	x0, [sp, #24]
  421324:	ldr	x0, [x0]
  421328:	bl	406930 <free@plt>
  42132c:	nop
  421330:	ldp	x29, x30, [sp], #32
  421334:	ret

0000000000421338 <size_multiply_overflow>:
  421338:	sub	sp, sp, #0x10
  42133c:	str	x0, [sp, #8]
  421340:	str	x1, [sp]
  421344:	ldr	x0, [sp]
  421348:	cmp	x0, #0x0
  42134c:	cset	w0, ne  // ne = any
  421350:	and	w0, w0, #0xff
  421354:	and	x0, x0, #0xff
  421358:	cmp	x0, #0x0
  42135c:	b.eq	4213a0 <size_multiply_overflow+0x68>  // b.none
  421360:	mov	x2, #0x0                   	// #0
  421364:	ldr	x1, [sp, #8]
  421368:	ldr	x0, [sp]
  42136c:	umulh	x0, x1, x0
  421370:	cmp	x0, #0x0
  421374:	b.eq	42137c <size_multiply_overflow+0x44>  // b.none
  421378:	mov	x2, #0x1                   	// #1
  42137c:	mov	x0, x2
  421380:	cmp	x0, #0x0
  421384:	cset	w0, ne  // ne = any
  421388:	and	w0, w0, #0xff
  42138c:	and	x0, x0, #0xff
  421390:	cmp	x0, #0x0
  421394:	b.eq	4213a0 <size_multiply_overflow+0x68>  // b.none
  421398:	mov	w0, #0x1                   	// #1
  42139c:	b	4213a4 <size_multiply_overflow+0x6c>
  4213a0:	mov	w0, #0x0                   	// #0
  4213a4:	and	w0, w0, #0x1
  4213a8:	and	w0, w0, #0xff
  4213ac:	add	sp, sp, #0x10
  4213b0:	ret

00000000004213b4 <memdup_suffix0_multiply>:
  4213b4:	stp	x29, x30, [sp, #-48]!
  4213b8:	mov	x29, sp
  4213bc:	str	x0, [sp, #40]
  4213c0:	str	x1, [sp, #32]
  4213c4:	str	x2, [sp, #24]
  4213c8:	ldr	x1, [sp, #24]
  4213cc:	ldr	x0, [sp, #32]
  4213d0:	bl	421338 <size_multiply_overflow>
  4213d4:	and	w0, w0, #0xff
  4213d8:	cmp	w0, #0x0
  4213dc:	b.eq	4213e8 <memdup_suffix0_multiply+0x34>  // b.none
  4213e0:	mov	x0, #0x0                   	// #0
  4213e4:	b	421400 <memdup_suffix0_multiply+0x4c>
  4213e8:	ldr	x1, [sp, #32]
  4213ec:	ldr	x0, [sp, #24]
  4213f0:	mul	x0, x1, x0
  4213f4:	mov	x1, x0
  4213f8:	ldr	x0, [sp, #40]
  4213fc:	bl	406990 <memdup_suffix0@plt>
  421400:	ldp	x29, x30, [sp], #48
  421404:	ret

0000000000421408 <hashmap_free>:
  421408:	stp	x29, x30, [sp, #-32]!
  42140c:	mov	x29, sp
  421410:	str	x0, [sp, #24]
  421414:	mov	x2, #0x0                   	// #0
  421418:	mov	x1, #0x0                   	// #0
  42141c:	ldr	x0, [sp, #24]
  421420:	bl	405b70 <internal_hashmap_free@plt>
  421424:	ldp	x29, x30, [sp], #32
  421428:	ret

000000000042142c <hashmap_get>:
  42142c:	stp	x29, x30, [sp, #-32]!
  421430:	mov	x29, sp
  421434:	str	x0, [sp, #24]
  421438:	str	x1, [sp, #16]
  42143c:	ldr	x1, [sp, #16]
  421440:	ldr	x0, [sp, #24]
  421444:	bl	4061e0 <internal_hashmap_get@plt>
  421448:	ldp	x29, x30, [sp], #32
  42144c:	ret

0000000000421450 <hashmap_remove>:
  421450:	stp	x29, x30, [sp, #-32]!
  421454:	mov	x29, sp
  421458:	str	x0, [sp, #24]
  42145c:	str	x1, [sp, #16]
  421460:	ldr	x1, [sp, #16]
  421464:	ldr	x0, [sp, #24]
  421468:	bl	405ad0 <internal_hashmap_remove@plt>
  42146c:	ldp	x29, x30, [sp], #32
  421470:	ret

0000000000421474 <hashmap_size>:
  421474:	stp	x29, x30, [sp, #-32]!
  421478:	mov	x29, sp
  42147c:	str	x0, [sp, #24]
  421480:	ldr	x0, [sp, #24]
  421484:	bl	406580 <internal_hashmap_size@plt>
  421488:	ldp	x29, x30, [sp], #32
  42148c:	ret

0000000000421490 <sc_arg_max>:
  421490:	stp	x29, x30, [sp, #-32]!
  421494:	mov	x29, sp
  421498:	mov	w0, #0x0                   	// #0
  42149c:	bl	406890 <sysconf@plt>
  4214a0:	str	x0, [sp, #24]
  4214a4:	ldr	x0, [sp, #24]
  4214a8:	cmp	x0, #0x0
  4214ac:	cset	w0, le
  4214b0:	and	w0, w0, #0xff
  4214b4:	and	x0, x0, #0xff
  4214b8:	cmp	x0, #0x0
  4214bc:	b.eq	4214e8 <sc_arg_max+0x58>  // b.none
  4214c0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4214c4:	add	x1, x0, #0xcf3
  4214c8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4214cc:	add	x4, x0, #0xb8
  4214d0:	mov	w3, #0xe                   	// #14
  4214d4:	mov	x2, x1
  4214d8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4214dc:	add	x1, x0, #0xd08
  4214e0:	mov	w0, #0x0                   	// #0
  4214e4:	bl	405fd0 <log_assert_failed_realm@plt>
  4214e8:	ldr	x0, [sp, #24]
  4214ec:	ldp	x29, x30, [sp], #32
  4214f0:	ret

00000000004214f4 <fclosep>:
  4214f4:	stp	x29, x30, [sp, #-32]!
  4214f8:	mov	x29, sp
  4214fc:	str	x0, [sp, #24]
  421500:	ldr	x0, [sp, #24]
  421504:	ldr	x0, [x0]
  421508:	bl	405b10 <safe_fclose@plt>
  42150c:	nop
  421510:	ldp	x29, x30, [sp], #32
  421514:	ret

0000000000421518 <read_full_stream>:
  421518:	stp	x29, x30, [sp, #-48]!
  42151c:	mov	x29, sp
  421520:	str	x0, [sp, #40]
  421524:	str	x1, [sp, #32]
  421528:	str	x2, [sp, #24]
  42152c:	ldr	x4, [sp, #24]
  421530:	ldr	x3, [sp, #32]
  421534:	mov	w2, #0x0                   	// #0
  421538:	mov	x1, #0x0                   	// #0
  42153c:	ldr	x0, [sp, #40]
  421540:	bl	4067e0 <read_full_stream_full@plt>
  421544:	ldp	x29, x30, [sp], #48
  421548:	ret

000000000042154c <le64toh>:
  42154c:	sub	sp, sp, #0x10
  421550:	str	x0, [sp, #8]
  421554:	ldr	x0, [sp, #8]
  421558:	add	sp, sp, #0x10
  42155c:	ret

0000000000421560 <streq_ptr>:
  421560:	stp	x29, x30, [sp, #-32]!
  421564:	mov	x29, sp
  421568:	str	x0, [sp, #24]
  42156c:	str	x1, [sp, #16]
  421570:	ldr	x1, [sp, #16]
  421574:	ldr	x0, [sp, #24]
  421578:	bl	405ba0 <strcmp_ptr@plt>
  42157c:	cmp	w0, #0x0
  421580:	cset	w0, eq  // eq = none
  421584:	and	w0, w0, #0xff
  421588:	ldp	x29, x30, [sp], #32
  42158c:	ret

0000000000421590 <safe_atou>:
  421590:	stp	x29, x30, [sp, #-32]!
  421594:	mov	x29, sp
  421598:	str	x0, [sp, #24]
  42159c:	str	x1, [sp, #16]
  4215a0:	ldr	x2, [sp, #16]
  4215a4:	mov	w1, #0x0                   	// #0
  4215a8:	ldr	x0, [sp, #24]
  4215ac:	bl	406560 <safe_atou_full@plt>
  4215b0:	ldp	x29, x30, [sp], #32
  4215b4:	ret

00000000004215b8 <safe_atou64>:
  4215b8:	stp	x29, x30, [sp, #-32]!
  4215bc:	mov	x29, sp
  4215c0:	str	x0, [sp, #24]
  4215c4:	str	x1, [sp, #16]
  4215c8:	ldr	x1, [sp, #16]
  4215cc:	ldr	x0, [sp, #24]
  4215d0:	bl	405c10 <safe_atollu@plt>
  4215d4:	ldp	x29, x30, [sp], #32
  4215d8:	ret

00000000004215dc <PID_TO_PTR>:
  4215dc:	sub	sp, sp, #0x10
  4215e0:	str	w0, [sp, #12]
  4215e4:	ldrsw	x0, [sp, #12]
  4215e8:	add	sp, sp, #0x10
  4215ec:	ret

00000000004215f0 <pid_is_valid>:
  4215f0:	sub	sp, sp, #0x10
  4215f4:	str	w0, [sp, #12]
  4215f8:	ldr	w0, [sp, #12]
  4215fc:	cmp	w0, #0x0
  421600:	cset	w0, gt
  421604:	and	w0, w0, #0xff
  421608:	add	sp, sp, #0x10
  42160c:	ret

0000000000421610 <unaligned_read_le64>:
  421610:	stp	x29, x30, [sp, #-48]!
  421614:	mov	x29, sp
  421618:	str	x0, [sp, #24]
  42161c:	ldr	x0, [sp, #24]
  421620:	str	x0, [sp, #40]
  421624:	ldr	x0, [sp, #40]
  421628:	ldr	x0, [x0]
  42162c:	bl	42154c <le64toh>
  421630:	ldp	x29, x30, [sp], #48
  421634:	ret

0000000000421638 <gid_is_valid>:
  421638:	stp	x29, x30, [sp, #-32]!
  42163c:	mov	x29, sp
  421640:	str	w0, [sp, #28]
  421644:	ldr	w0, [sp, #28]
  421648:	bl	4061c0 <uid_is_valid@plt>
  42164c:	and	w0, w0, #0xff
  421650:	ldp	x29, x30, [sp], #32
  421654:	ret

0000000000421658 <cache_max>:
  421658:	stp	x29, x30, [sp, #-80]!
  42165c:	mov	x29, sp
  421660:	str	x19, [sp, #16]
  421664:	adrp	x0, 441000 <wordlist.9471+0x208>
  421668:	ldr	x0, [x0, #4064]
  42166c:	ldr	x1, [x0]
  421670:	str	x1, [sp, #72]
  421674:	mov	x1, #0x0                   	// #0
  421678:	adrp	x0, 442000 <cached_printk_time.11702>
  42167c:	add	x0, x0, #0x8
  421680:	ldr	x0, [x0]
  421684:	cmn	x0, #0x1
  421688:	b.ne	421790 <cache_max+0x138>  // b.any
  42168c:	add	x0, sp, #0x38
  421690:	mov	x1, #0x0                   	// #0
  421694:	bl	405e00 <procfs_memory_get@plt>
  421698:	str	w0, [sp, #32]
  42169c:	ldr	w0, [sp, #32]
  4216a0:	cmp	w0, #0x0
  4216a4:	b.ge	421734 <cache_max+0xdc>  // b.tcont
  4216a8:	mov	w0, #0x4                   	// #4
  4216ac:	str	w0, [sp, #44]
  4216b0:	ldr	w0, [sp, #32]
  4216b4:	str	w0, [sp, #48]
  4216b8:	str	wzr, [sp, #52]
  4216bc:	ldr	w0, [sp, #52]
  4216c0:	bl	406c30 <log_get_max_level_realm@plt>
  4216c4:	mov	w1, w0
  4216c8:	ldr	w0, [sp, #44]
  4216cc:	and	w0, w0, #0x7
  4216d0:	cmp	w1, w0
  4216d4:	b.lt	421718 <cache_max+0xc0>  // b.tstop
  4216d8:	ldr	w0, [sp, #52]
  4216dc:	lsl	w1, w0, #10
  4216e0:	ldr	w0, [sp, #44]
  4216e4:	orr	w6, w1, w0
  4216e8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4216ec:	add	x1, x0, #0xd13
  4216f0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4216f4:	add	x5, x0, #0xd38
  4216f8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4216fc:	add	x4, x0, #0xa8
  421700:	mov	w3, #0x4e                  	// #78
  421704:	mov	x2, x1
  421708:	ldr	w1, [sp, #48]
  42170c:	mov	w0, w6
  421710:	bl	406590 <log_internal_realm@plt>
  421714:	b	421720 <cache_max+0xc8>
  421718:	ldr	w0, [sp, #48]
  42171c:	cmp	w0, #0x0
  421720:	adrp	x0, 442000 <cached_printk_time.11702>
  421724:	add	x0, x0, #0x8
  421728:	mov	x1, #0x80                  	// #128
  42172c:	str	x1, [x0]
  421730:	b	421790 <cache_max+0x138>
  421734:	ldr	x0, [sp, #56]
  421738:	lsr	x19, x0, #3
  42173c:	bl	421490 <sc_arg_max>
  421740:	udiv	x0, x19, x0
  421744:	str	x0, [sp, #64]
  421748:	mov	w0, #0x40                  	// #64
  42174c:	str	w0, [sp, #36]
  421750:	mov	w0, #0x4000                	// #16384
  421754:	str	w0, [sp, #40]
  421758:	ldr	w0, [sp, #40]
  42175c:	ldr	x1, [sp, #64]
  421760:	cmp	x1, x0
  421764:	b.ls	421770 <cache_max+0x118>  // b.plast
  421768:	ldr	w0, [sp, #40]
  42176c:	b	421784 <cache_max+0x12c>
  421770:	ldr	w0, [sp, #36]
  421774:	ldr	x2, [sp, #64]
  421778:	ldr	x1, [sp, #64]
  42177c:	cmp	x2, x0
  421780:	csel	x0, x1, x0, cs  // cs = hs, nlast
  421784:	adrp	x1, 442000 <cached_printk_time.11702>
  421788:	add	x1, x1, #0x8
  42178c:	str	x0, [x1]
  421790:	adrp	x0, 442000 <cached_printk_time.11702>
  421794:	add	x0, x0, #0x8
  421798:	ldr	x0, [x0]
  42179c:	mov	x1, x0
  4217a0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4217a4:	ldr	x0, [x0, #4064]
  4217a8:	ldr	x2, [sp, #72]
  4217ac:	ldr	x0, [x0]
  4217b0:	eor	x0, x2, x0
  4217b4:	cmp	x0, #0x0
  4217b8:	b.eq	4217c0 <cache_max+0x168>  // b.none
  4217bc:	bl	4063e0 <__stack_chk_fail@plt>
  4217c0:	mov	x0, x1
  4217c4:	ldr	x19, [sp, #16]
  4217c8:	ldp	x29, x30, [sp], #80
  4217cc:	ret

00000000004217d0 <client_context_compare>:
  4217d0:	sub	sp, sp, #0x40
  4217d4:	str	x0, [sp, #8]
  4217d8:	str	x1, [sp]
  4217dc:	ldr	x0, [sp, #8]
  4217e0:	str	x0, [sp, #32]
  4217e4:	ldr	x0, [sp]
  4217e8:	str	x0, [sp, #40]
  4217ec:	ldr	x0, [sp, #32]
  4217f0:	ldr	x0, [x0, #8]
  4217f4:	str	x0, [sp, #48]
  4217f8:	ldr	x0, [sp, #40]
  4217fc:	ldr	x0, [x0, #8]
  421800:	str	x0, [sp, #56]
  421804:	ldr	x1, [sp, #48]
  421808:	ldr	x0, [sp, #56]
  42180c:	cmp	x1, x0
  421810:	b.cc	42182c <client_context_compare+0x5c>  // b.lo, b.ul, b.last
  421814:	ldr	x1, [sp, #48]
  421818:	ldr	x0, [sp, #56]
  42181c:	cmp	x1, x0
  421820:	cset	w0, hi  // hi = pmore
  421824:	and	w0, w0, #0xff
  421828:	b	421830 <client_context_compare+0x60>
  42182c:	mov	w0, #0xffffffff            	// #-1
  421830:	str	w0, [sp, #20]
  421834:	ldr	w0, [sp, #20]
  421838:	cmp	w0, #0x0
  42183c:	b.eq	421848 <client_context_compare+0x78>  // b.none
  421840:	ldr	w0, [sp, #20]
  421844:	b	421890 <client_context_compare+0xc0>
  421848:	ldr	x0, [sp, #32]
  42184c:	ldr	w0, [x0, #20]
  421850:	str	w0, [sp, #24]
  421854:	ldr	x0, [sp, #40]
  421858:	ldr	w0, [x0, #20]
  42185c:	str	w0, [sp, #28]
  421860:	ldr	w1, [sp, #24]
  421864:	ldr	w0, [sp, #28]
  421868:	cmp	w1, w0
  42186c:	b.lt	421888 <client_context_compare+0xb8>  // b.tstop
  421870:	ldr	w1, [sp, #24]
  421874:	ldr	w0, [sp, #28]
  421878:	cmp	w1, w0
  42187c:	cset	w0, gt
  421880:	and	w0, w0, #0xff
  421884:	b	42188c <client_context_compare+0xbc>
  421888:	mov	w0, #0xffffffff            	// #-1
  42188c:	nop
  421890:	add	sp, sp, #0x40
  421894:	ret

0000000000421898 <client_context_new>:
  421898:	stp	x29, x30, [sp, #-80]!
  42189c:	mov	x29, sp
  4218a0:	str	x19, [sp, #16]
  4218a4:	str	x0, [sp, #56]
  4218a8:	str	w1, [sp, #52]
  4218ac:	str	x2, [sp, #40]
  4218b0:	ldr	x0, [sp, #56]
  4218b4:	cmp	x0, #0x0
  4218b8:	cset	w0, eq  // eq = none
  4218bc:	and	w0, w0, #0xff
  4218c0:	and	x0, x0, #0xff
  4218c4:	cmp	x0, #0x0
  4218c8:	b.eq	4218f4 <client_context_new+0x5c>  // b.none
  4218cc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4218d0:	add	x1, x0, #0xd13
  4218d4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4218d8:	add	x4, x0, #0xc8
  4218dc:	mov	w3, #0x6c                  	// #108
  4218e0:	mov	x2, x1
  4218e4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4218e8:	add	x1, x0, #0xd68
  4218ec:	mov	w0, #0x0                   	// #0
  4218f0:	bl	405fd0 <log_assert_failed_realm@plt>
  4218f4:	ldr	w0, [sp, #52]
  4218f8:	bl	4215f0 <pid_is_valid>
  4218fc:	and	w0, w0, #0xff
  421900:	eor	w0, w0, #0x1
  421904:	and	w0, w0, #0xff
  421908:	and	x0, x0, #0xff
  42190c:	cmp	x0, #0x0
  421910:	b.eq	42193c <client_context_new+0xa4>  // b.none
  421914:	adrp	x0, 42c000 <__func__.10684+0x8>
  421918:	add	x1, x0, #0xd13
  42191c:	adrp	x0, 42d000 <__func__.11730+0x328>
  421920:	add	x4, x0, #0xc8
  421924:	mov	w3, #0x6d                  	// #109
  421928:	mov	x2, x1
  42192c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421930:	add	x1, x0, #0xd70
  421934:	mov	w0, #0x0                   	// #0
  421938:	bl	405fd0 <log_assert_failed_realm@plt>
  42193c:	ldr	x0, [sp, #40]
  421940:	cmp	x0, #0x0
  421944:	cset	w0, eq  // eq = none
  421948:	and	w0, w0, #0xff
  42194c:	and	x0, x0, #0xff
  421950:	cmp	x0, #0x0
  421954:	b.eq	421980 <client_context_new+0xe8>  // b.none
  421958:	adrp	x0, 42c000 <__func__.10684+0x8>
  42195c:	add	x1, x0, #0xd13
  421960:	adrp	x0, 42d000 <__func__.11730+0x328>
  421964:	add	x4, x0, #0xc8
  421968:	mov	w3, #0x6e                  	// #110
  42196c:	mov	x2, x1
  421970:	adrp	x0, 42c000 <__func__.10684+0x8>
  421974:	add	x1, x0, #0xd88
  421978:	mov	w0, #0x0                   	// #0
  42197c:	bl	405fd0 <log_assert_failed_realm@plt>
  421980:	ldr	x0, [sp, #56]
  421984:	add	x0, x0, #0x2d0
  421988:	mov	x1, #0x0                   	// #0
  42198c:	bl	406a00 <internal_hashmap_ensure_allocated@plt>
  421990:	str	w0, [sp, #68]
  421994:	ldr	w0, [sp, #68]
  421998:	cmp	w0, #0x0
  42199c:	b.ge	4219a8 <client_context_new+0x110>  // b.tcont
  4219a0:	ldr	w0, [sp, #68]
  4219a4:	b	421ae4 <client_context_new+0x24c>
  4219a8:	ldr	x0, [sp, #56]
  4219ac:	add	x2, x0, #0x2d8
  4219b0:	adrp	x0, 421000 <server_forward_console+0x2e0>
  4219b4:	add	x1, x0, #0x7d0
  4219b8:	mov	x0, x2
  4219bc:	bl	406530 <prioq_ensure_allocated@plt>
  4219c0:	str	w0, [sp, #68]
  4219c4:	ldr	w0, [sp, #68]
  4219c8:	cmp	w0, #0x0
  4219cc:	b.ge	4219d8 <client_context_new+0x140>  // b.tcont
  4219d0:	ldr	w0, [sp, #68]
  4219d4:	b	421ae4 <client_context_new+0x24c>
  4219d8:	mov	x1, #0xd8                  	// #216
  4219dc:	mov	x0, #0x1                   	// #1
  4219e0:	bl	406780 <calloc@plt>
  4219e4:	str	x0, [sp, #72]
  4219e8:	ldr	x0, [sp, #72]
  4219ec:	cmp	x0, #0x0
  4219f0:	b.ne	4219fc <client_context_new+0x164>  // b.any
  4219f4:	mov	w0, #0xfffffff4            	// #-12
  4219f8:	b	421ae4 <client_context_new+0x24c>
  4219fc:	ldr	x0, [sp, #72]
  421a00:	ldr	w1, [sp, #52]
  421a04:	str	w1, [x0, #20]
  421a08:	ldr	x0, [sp, #72]
  421a0c:	mov	w1, #0xffffffff            	// #-1
  421a10:	str	w1, [x0, #24]
  421a14:	ldr	x0, [sp, #72]
  421a18:	mov	w1, #0xffffffff            	// #-1
  421a1c:	str	w1, [x0, #28]
  421a20:	ldr	x0, [sp, #72]
  421a24:	mov	w1, #0xffffffff            	// #-1
  421a28:	str	w1, [x0, #64]
  421a2c:	ldr	x0, [sp, #72]
  421a30:	mov	w1, #0xffffffff            	// #-1
  421a34:	str	w1, [x0, #68]
  421a38:	ldr	x0, [sp, #72]
  421a3c:	mov	w1, #0xffffffff            	// #-1
  421a40:	str	w1, [x0, #88]
  421a44:	ldr	x0, [sp, #72]
  421a48:	mov	w1, #0xffffffff            	// #-1
  421a4c:	str	w1, [x0, #4]
  421a50:	ldr	x0, [sp, #72]
  421a54:	mov	x1, #0xffffffffffffffff    	// #-1
  421a58:	str	x1, [x0, #8]
  421a5c:	ldr	x0, [sp, #72]
  421a60:	mov	x1, #0xffffffffffffffff    	// #-1
  421a64:	str	x1, [x0, #192]
  421a68:	ldr	x0, [sp, #72]
  421a6c:	mov	w1, #0xffffffff            	// #-1
  421a70:	str	w1, [x0, #160]
  421a74:	ldr	x0, [sp, #56]
  421a78:	ldr	x1, [x0, #216]
  421a7c:	ldr	x0, [sp, #72]
  421a80:	str	x1, [x0, #200]
  421a84:	ldr	x0, [sp, #56]
  421a88:	ldr	w1, [x0, #224]
  421a8c:	ldr	x0, [sp, #72]
  421a90:	str	w1, [x0, #208]
  421a94:	ldr	x0, [sp, #56]
  421a98:	ldr	x19, [x0, #720]
  421a9c:	ldr	w0, [sp, #52]
  421aa0:	bl	4215dc <PID_TO_PTR>
  421aa4:	ldr	x2, [sp, #72]
  421aa8:	mov	x1, x0
  421aac:	mov	x0, x19
  421ab0:	bl	4065f0 <hashmap_put@plt>
  421ab4:	str	w0, [sp, #68]
  421ab8:	ldr	w0, [sp, #68]
  421abc:	cmp	w0, #0x0
  421ac0:	b.ge	421ad4 <client_context_new+0x23c>  // b.tcont
  421ac4:	ldr	x0, [sp, #72]
  421ac8:	bl	406930 <free@plt>
  421acc:	ldr	w0, [sp, #68]
  421ad0:	b	421ae4 <client_context_new+0x24c>
  421ad4:	ldr	x0, [sp, #40]
  421ad8:	ldr	x1, [sp, #72]
  421adc:	str	x1, [x0]
  421ae0:	mov	w0, #0x0                   	// #0
  421ae4:	ldr	x19, [sp, #16]
  421ae8:	ldp	x29, x30, [sp], #80
  421aec:	ret

0000000000421af0 <client_context_reset>:
  421af0:	stp	x29, x30, [sp, #-48]!
  421af4:	mov	x29, sp
  421af8:	str	x0, [sp, #24]
  421afc:	str	x1, [sp, #16]
  421b00:	adrp	x0, 441000 <wordlist.9471+0x208>
  421b04:	ldr	x0, [x0, #4064]
  421b08:	ldr	x1, [x0]
  421b0c:	str	x1, [sp, #40]
  421b10:	mov	x1, #0x0                   	// #0
  421b14:	ldr	x0, [sp, #24]
  421b18:	cmp	x0, #0x0
  421b1c:	cset	w0, eq  // eq = none
  421b20:	and	w0, w0, #0xff
  421b24:	and	x0, x0, #0xff
  421b28:	cmp	x0, #0x0
  421b2c:	b.eq	421b58 <client_context_reset+0x68>  // b.none
  421b30:	adrp	x0, 42c000 <__func__.10684+0x8>
  421b34:	add	x1, x0, #0xd13
  421b38:	adrp	x0, 42d000 <__func__.11730+0x328>
  421b3c:	add	x4, x0, #0xe0
  421b40:	mov	w3, #0x95                  	// #149
  421b44:	mov	x2, x1
  421b48:	adrp	x0, 42c000 <__func__.10684+0x8>
  421b4c:	add	x1, x0, #0xd68
  421b50:	mov	w0, #0x0                   	// #0
  421b54:	bl	405fd0 <log_assert_failed_realm@plt>
  421b58:	ldr	x0, [sp, #16]
  421b5c:	cmp	x0, #0x0
  421b60:	cset	w0, eq  // eq = none
  421b64:	and	w0, w0, #0xff
  421b68:	and	x0, x0, #0xff
  421b6c:	cmp	x0, #0x0
  421b70:	b.eq	421b9c <client_context_reset+0xac>  // b.none
  421b74:	adrp	x0, 42c000 <__func__.10684+0x8>
  421b78:	add	x1, x0, #0xd13
  421b7c:	adrp	x0, 42d000 <__func__.11730+0x328>
  421b80:	add	x4, x0, #0xe0
  421b84:	mov	w3, #0x96                  	// #150
  421b88:	mov	x2, x1
  421b8c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421b90:	add	x1, x0, #0xd90
  421b94:	mov	w0, #0x0                   	// #0
  421b98:	bl	405fd0 <log_assert_failed_realm@plt>
  421b9c:	ldr	x0, [sp, #16]
  421ba0:	mov	x1, #0xffffffffffffffff    	// #-1
  421ba4:	str	x1, [x0, #8]
  421ba8:	ldr	x0, [sp, #16]
  421bac:	mov	w1, #0xffffffff            	// #-1
  421bb0:	str	w1, [x0, #24]
  421bb4:	ldr	x0, [sp, #16]
  421bb8:	mov	w1, #0xffffffff            	// #-1
  421bbc:	str	w1, [x0, #28]
  421bc0:	ldr	x0, [sp, #16]
  421bc4:	ldr	x0, [x0, #32]
  421bc8:	bl	4212f4 <mfree>
  421bcc:	mov	x1, x0
  421bd0:	ldr	x0, [sp, #16]
  421bd4:	str	x1, [x0, #32]
  421bd8:	ldr	x0, [sp, #16]
  421bdc:	ldr	x0, [x0, #40]
  421be0:	bl	4212f4 <mfree>
  421be4:	mov	x1, x0
  421be8:	ldr	x0, [sp, #16]
  421bec:	str	x1, [x0, #40]
  421bf0:	ldr	x0, [sp, #16]
  421bf4:	ldr	x0, [x0, #48]
  421bf8:	bl	4212f4 <mfree>
  421bfc:	mov	x1, x0
  421c00:	ldr	x0, [sp, #16]
  421c04:	str	x1, [x0, #48]
  421c08:	ldr	x0, [sp, #16]
  421c0c:	ldr	x0, [x0, #56]
  421c10:	bl	4212f4 <mfree>
  421c14:	mov	x1, x0
  421c18:	ldr	x0, [sp, #16]
  421c1c:	str	x1, [x0, #56]
  421c20:	ldr	x0, [sp, #16]
  421c24:	mov	w1, #0xffffffff            	// #-1
  421c28:	str	w1, [x0, #64]
  421c2c:	ldr	x0, [sp, #16]
  421c30:	mov	w1, #0xffffffff            	// #-1
  421c34:	str	w1, [x0, #68]
  421c38:	ldr	x0, [sp, #16]
  421c3c:	ldr	x0, [x0, #72]
  421c40:	bl	4212f4 <mfree>
  421c44:	mov	x1, x0
  421c48:	ldr	x0, [sp, #16]
  421c4c:	str	x1, [x0, #72]
  421c50:	ldr	x0, [sp, #16]
  421c54:	ldr	x0, [x0, #80]
  421c58:	bl	4212f4 <mfree>
  421c5c:	mov	x1, x0
  421c60:	ldr	x0, [sp, #16]
  421c64:	str	x1, [x0, #80]
  421c68:	ldr	x0, [sp, #16]
  421c6c:	mov	w1, #0xffffffff            	// #-1
  421c70:	str	w1, [x0, #88]
  421c74:	ldr	x0, [sp, #16]
  421c78:	ldr	x0, [x0, #96]
  421c7c:	bl	4212f4 <mfree>
  421c80:	mov	x1, x0
  421c84:	ldr	x0, [sp, #16]
  421c88:	str	x1, [x0, #96]
  421c8c:	ldr	x0, [sp, #16]
  421c90:	ldr	x0, [x0, #104]
  421c94:	bl	4212f4 <mfree>
  421c98:	mov	x1, x0
  421c9c:	ldr	x0, [sp, #16]
  421ca0:	str	x1, [x0, #104]
  421ca4:	ldr	x0, [sp, #16]
  421ca8:	ldr	x0, [x0, #112]
  421cac:	bl	4212f4 <mfree>
  421cb0:	mov	x1, x0
  421cb4:	ldr	x0, [sp, #16]
  421cb8:	str	x1, [x0, #112]
  421cbc:	ldr	x0, [sp, #16]
  421cc0:	ldr	x0, [x0, #120]
  421cc4:	bl	4212f4 <mfree>
  421cc8:	mov	x1, x0
  421ccc:	ldr	x0, [sp, #16]
  421cd0:	str	x1, [x0, #120]
  421cd4:	ldr	x0, [sp, #16]
  421cd8:	str	xzr, [x0, #128]
  421cdc:	ldr	x0, [sp, #16]
  421ce0:	str	xzr, [x0, #136]
  421ce4:	ldr	x0, [sp, #16]
  421ce8:	ldr	x0, [x0, #144]
  421cec:	bl	4212f4 <mfree>
  421cf0:	mov	x1, x0
  421cf4:	ldr	x0, [sp, #16]
  421cf8:	str	x1, [x0, #144]
  421cfc:	ldr	x0, [sp, #16]
  421d00:	str	xzr, [x0, #152]
  421d04:	ldr	x0, [sp, #16]
  421d08:	ldr	x0, [x0, #168]
  421d0c:	bl	4212f4 <mfree>
  421d10:	mov	x1, x0
  421d14:	ldr	x0, [sp, #16]
  421d18:	str	x1, [x0, #168]
  421d1c:	ldr	x0, [sp, #16]
  421d20:	str	xzr, [x0, #176]
  421d24:	ldr	x0, [sp, #16]
  421d28:	ldr	x0, [x0, #184]
  421d2c:	bl	4212f4 <mfree>
  421d30:	mov	x1, x0
  421d34:	ldr	x0, [sp, #16]
  421d38:	str	x1, [x0, #184]
  421d3c:	ldr	x0, [sp, #16]
  421d40:	mov	x1, #0xffffffffffffffff    	// #-1
  421d44:	str	x1, [x0, #192]
  421d48:	ldr	x0, [sp, #16]
  421d4c:	mov	w1, #0xffffffff            	// #-1
  421d50:	str	w1, [x0, #160]
  421d54:	ldr	x0, [sp, #24]
  421d58:	ldr	x1, [x0, #216]
  421d5c:	ldr	x0, [sp, #16]
  421d60:	str	x1, [x0, #200]
  421d64:	ldr	x0, [sp, #24]
  421d68:	ldr	w1, [x0, #224]
  421d6c:	ldr	x0, [sp, #16]
  421d70:	str	w1, [x0, #208]
  421d74:	nop
  421d78:	adrp	x0, 441000 <wordlist.9471+0x208>
  421d7c:	ldr	x0, [x0, #4064]
  421d80:	ldr	x1, [sp, #40]
  421d84:	ldr	x0, [x0]
  421d88:	eor	x0, x1, x0
  421d8c:	cmp	x0, #0x0
  421d90:	b.eq	421d98 <client_context_reset+0x2a8>  // b.none
  421d94:	bl	4063e0 <__stack_chk_fail@plt>
  421d98:	ldp	x29, x30, [sp], #48
  421d9c:	ret

0000000000421da0 <client_context_free>:
  421da0:	stp	x29, x30, [sp, #-48]!
  421da4:	mov	x29, sp
  421da8:	str	x19, [sp, #16]
  421dac:	str	x0, [sp, #40]
  421db0:	str	x1, [sp, #32]
  421db4:	ldr	x0, [sp, #40]
  421db8:	cmp	x0, #0x0
  421dbc:	cset	w0, eq  // eq = none
  421dc0:	and	w0, w0, #0xff
  421dc4:	and	x0, x0, #0xff
  421dc8:	cmp	x0, #0x0
  421dcc:	b.eq	421df8 <client_context_free+0x58>  // b.none
  421dd0:	adrp	x0, 42c000 <__func__.10684+0x8>
  421dd4:	add	x1, x0, #0xd13
  421dd8:	adrp	x0, 42d000 <__func__.11730+0x328>
  421ddc:	add	x4, x0, #0xf8
  421de0:	mov	w3, #0xbe                  	// #190
  421de4:	mov	x2, x1
  421de8:	adrp	x0, 42c000 <__func__.10684+0x8>
  421dec:	add	x1, x0, #0xd68
  421df0:	mov	w0, #0x0                   	// #0
  421df4:	bl	405fd0 <log_assert_failed_realm@plt>
  421df8:	ldr	x0, [sp, #32]
  421dfc:	cmp	x0, #0x0
  421e00:	b.ne	421e0c <client_context_free+0x6c>  // b.any
  421e04:	mov	x0, #0x0                   	// #0
  421e08:	b	421ef4 <client_context_free+0x154>
  421e0c:	ldr	x0, [sp, #40]
  421e10:	ldr	x19, [x0, #720]
  421e14:	ldr	x0, [sp, #32]
  421e18:	ldr	w0, [x0, #20]
  421e1c:	bl	4215dc <PID_TO_PTR>
  421e20:	mov	x1, x0
  421e24:	mov	x0, x19
  421e28:	bl	421450 <hashmap_remove>
  421e2c:	mov	x1, x0
  421e30:	ldr	x0, [sp, #32]
  421e34:	cmp	x0, x1
  421e38:	cset	w0, ne  // ne = any
  421e3c:	and	w0, w0, #0xff
  421e40:	and	x0, x0, #0xff
  421e44:	cmp	x0, #0x0
  421e48:	b.eq	421e74 <client_context_free+0xd4>  // b.none
  421e4c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421e50:	add	x1, x0, #0xd13
  421e54:	adrp	x0, 42d000 <__func__.11730+0x328>
  421e58:	add	x4, x0, #0xf8
  421e5c:	mov	w3, #0xc3                  	// #195
  421e60:	mov	x2, x1
  421e64:	adrp	x0, 42c000 <__func__.10684+0x8>
  421e68:	add	x1, x0, #0xd98
  421e6c:	mov	w0, #0x0                   	// #0
  421e70:	bl	405fd0 <log_assert_failed_realm@plt>
  421e74:	ldr	x0, [sp, #32]
  421e78:	ldrb	w0, [x0, #16]
  421e7c:	cmp	w0, #0x0
  421e80:	b.eq	421ee0 <client_context_free+0x140>  // b.none
  421e84:	ldr	x0, [sp, #40]
  421e88:	ldr	x3, [x0, #728]
  421e8c:	ldr	x0, [sp, #32]
  421e90:	add	x0, x0, #0x4
  421e94:	mov	x2, x0
  421e98:	ldr	x1, [sp, #32]
  421e9c:	mov	x0, x3
  421ea0:	bl	405b30 <prioq_remove@plt>
  421ea4:	lsr	w0, w0, #31
  421ea8:	and	w0, w0, #0xff
  421eac:	and	x0, x0, #0xff
  421eb0:	cmp	x0, #0x0
  421eb4:	b.eq	421ee0 <client_context_free+0x140>  // b.none
  421eb8:	adrp	x0, 42c000 <__func__.10684+0x8>
  421ebc:	add	x1, x0, #0xd13
  421ec0:	adrp	x0, 42d000 <__func__.11730+0x328>
  421ec4:	add	x4, x0, #0xf8
  421ec8:	mov	w3, #0xc6                  	// #198
  421ecc:	mov	x2, x1
  421ed0:	adrp	x0, 42c000 <__func__.10684+0x8>
  421ed4:	add	x1, x0, #0xdd8
  421ed8:	mov	w0, #0x0                   	// #0
  421edc:	bl	405fd0 <log_assert_failed_realm@plt>
  421ee0:	ldr	x1, [sp, #32]
  421ee4:	ldr	x0, [sp, #40]
  421ee8:	bl	421af0 <client_context_reset>
  421eec:	ldr	x0, [sp, #32]
  421ef0:	bl	4212f4 <mfree>
  421ef4:	ldr	x19, [sp, #16]
  421ef8:	ldp	x29, x30, [sp], #48
  421efc:	ret

0000000000421f00 <client_context_read_uid_gid>:
  421f00:	stp	x29, x30, [sp, #-32]!
  421f04:	mov	x29, sp
  421f08:	str	x0, [sp, #24]
  421f0c:	str	x1, [sp, #16]
  421f10:	ldr	x0, [sp, #24]
  421f14:	cmp	x0, #0x0
  421f18:	cset	w0, eq  // eq = none
  421f1c:	and	w0, w0, #0xff
  421f20:	and	x0, x0, #0xff
  421f24:	cmp	x0, #0x0
  421f28:	b.eq	421f54 <client_context_read_uid_gid+0x54>  // b.none
  421f2c:	adrp	x0, 42c000 <__func__.10684+0x8>
  421f30:	add	x1, x0, #0xd13
  421f34:	adrp	x0, 42d000 <__func__.11730+0x328>
  421f38:	add	x4, x0, #0x110
  421f3c:	mov	w3, #0xce                  	// #206
  421f40:	mov	x2, x1
  421f44:	adrp	x0, 42c000 <__func__.10684+0x8>
  421f48:	add	x1, x0, #0xd90
  421f4c:	mov	w0, #0x0                   	// #0
  421f50:	bl	405fd0 <log_assert_failed_realm@plt>
  421f54:	ldr	x0, [sp, #24]
  421f58:	ldr	w0, [x0, #20]
  421f5c:	bl	4215f0 <pid_is_valid>
  421f60:	and	w0, w0, #0xff
  421f64:	eor	w0, w0, #0x1
  421f68:	and	w0, w0, #0xff
  421f6c:	and	x0, x0, #0xff
  421f70:	cmp	x0, #0x0
  421f74:	b.eq	421fa0 <client_context_read_uid_gid+0xa0>  // b.none
  421f78:	adrp	x0, 42c000 <__func__.10684+0x8>
  421f7c:	add	x1, x0, #0xd13
  421f80:	adrp	x0, 42d000 <__func__.11730+0x328>
  421f84:	add	x4, x0, #0x110
  421f88:	mov	w3, #0xcf                  	// #207
  421f8c:	mov	x2, x1
  421f90:	adrp	x0, 42c000 <__func__.10684+0x8>
  421f94:	add	x1, x0, #0xe18
  421f98:	mov	w0, #0x0                   	// #0
  421f9c:	bl	405fd0 <log_assert_failed_realm@plt>
  421fa0:	ldr	x0, [sp, #16]
  421fa4:	cmp	x0, #0x0
  421fa8:	b.eq	421fd8 <client_context_read_uid_gid+0xd8>  // b.none
  421fac:	ldr	x0, [sp, #16]
  421fb0:	ldr	w0, [x0, #4]
  421fb4:	bl	4061c0 <uid_is_valid@plt>
  421fb8:	and	w0, w0, #0xff
  421fbc:	cmp	w0, #0x0
  421fc0:	b.eq	421fd8 <client_context_read_uid_gid+0xd8>  // b.none
  421fc4:	ldr	x0, [sp, #16]
  421fc8:	ldr	w1, [x0, #4]
  421fcc:	ldr	x0, [sp, #24]
  421fd0:	str	w1, [x0, #24]
  421fd4:	b	421ff4 <client_context_read_uid_gid+0xf4>
  421fd8:	ldr	x0, [sp, #24]
  421fdc:	ldr	w2, [x0, #20]
  421fe0:	ldr	x0, [sp, #24]
  421fe4:	add	x0, x0, #0x18
  421fe8:	mov	x1, x0
  421fec:	mov	w0, w2
  421ff0:	bl	406440 <get_process_uid@plt>
  421ff4:	ldr	x0, [sp, #16]
  421ff8:	cmp	x0, #0x0
  421ffc:	b.eq	42202c <client_context_read_uid_gid+0x12c>  // b.none
  422000:	ldr	x0, [sp, #16]
  422004:	ldr	w0, [x0, #8]
  422008:	bl	421638 <gid_is_valid>
  42200c:	and	w0, w0, #0xff
  422010:	cmp	w0, #0x0
  422014:	b.eq	42202c <client_context_read_uid_gid+0x12c>  // b.none
  422018:	ldr	x0, [sp, #16]
  42201c:	ldr	w1, [x0, #8]
  422020:	ldr	x0, [sp, #24]
  422024:	str	w1, [x0, #28]
  422028:	b	42204c <client_context_read_uid_gid+0x14c>
  42202c:	ldr	x0, [sp, #24]
  422030:	ldr	w2, [x0, #20]
  422034:	ldr	x0, [sp, #24]
  422038:	add	x0, x0, #0x1c
  42203c:	mov	x1, x0
  422040:	mov	w0, w2
  422044:	bl	406360 <get_process_gid@plt>
  422048:	nop
  42204c:	nop
  422050:	ldp	x29, x30, [sp], #32
  422054:	ret

0000000000422058 <client_context_read_basic>:
  422058:	stp	x29, x30, [sp, #-48]!
  42205c:	mov	x29, sp
  422060:	str	x0, [sp, #24]
  422064:	adrp	x0, 441000 <wordlist.9471+0x208>
  422068:	ldr	x0, [x0, #4064]
  42206c:	ldr	x1, [x0]
  422070:	str	x1, [sp, #40]
  422074:	mov	x1, #0x0                   	// #0
  422078:	ldr	x0, [sp, #24]
  42207c:	cmp	x0, #0x0
  422080:	cset	w0, eq  // eq = none
  422084:	and	w0, w0, #0xff
  422088:	and	x0, x0, #0xff
  42208c:	cmp	x0, #0x0
  422090:	b.eq	4220bc <client_context_read_basic+0x64>  // b.none
  422094:	adrp	x0, 42c000 <__func__.10684+0x8>
  422098:	add	x1, x0, #0xd13
  42209c:	adrp	x0, 42d000 <__func__.11730+0x328>
  4220a0:	add	x4, x0, #0x130
  4220a4:	mov	w3, #0xe0                  	// #224
  4220a8:	mov	x2, x1
  4220ac:	adrp	x0, 42c000 <__func__.10684+0x8>
  4220b0:	add	x1, x0, #0xd90
  4220b4:	mov	w0, #0x0                   	// #0
  4220b8:	bl	405fd0 <log_assert_failed_realm@plt>
  4220bc:	ldr	x0, [sp, #24]
  4220c0:	ldr	w0, [x0, #20]
  4220c4:	bl	4215f0 <pid_is_valid>
  4220c8:	and	w0, w0, #0xff
  4220cc:	eor	w0, w0, #0x1
  4220d0:	and	w0, w0, #0xff
  4220d4:	and	x0, x0, #0xff
  4220d8:	cmp	x0, #0x0
  4220dc:	b.eq	422108 <client_context_read_basic+0xb0>  // b.none
  4220e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4220e4:	add	x1, x0, #0xd13
  4220e8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4220ec:	add	x4, x0, #0x130
  4220f0:	mov	w3, #0xe1                  	// #225
  4220f4:	mov	x2, x1
  4220f8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4220fc:	add	x1, x0, #0xe18
  422100:	mov	w0, #0x0                   	// #0
  422104:	bl	405fd0 <log_assert_failed_realm@plt>
  422108:	ldr	x0, [sp, #24]
  42210c:	ldr	w0, [x0, #20]
  422110:	add	x1, sp, #0x20
  422114:	bl	406280 <get_process_comm@plt>
  422118:	cmp	w0, #0x0
  42211c:	b.lt	42213c <client_context_read_basic+0xe4>  // b.tstop
  422120:	ldr	x0, [sp, #24]
  422124:	ldr	x0, [x0, #32]
  422128:	bl	406930 <free@plt>
  42212c:	ldr	x1, [sp, #32]
  422130:	ldr	x0, [sp, #24]
  422134:	str	x1, [x0, #32]
  422138:	str	xzr, [sp, #32]
  42213c:	ldr	x0, [sp, #24]
  422140:	ldr	w0, [x0, #20]
  422144:	add	x1, sp, #0x20
  422148:	bl	405d20 <get_process_exe@plt>
  42214c:	cmp	w0, #0x0
  422150:	b.lt	422170 <client_context_read_basic+0x118>  // b.tstop
  422154:	ldr	x0, [sp, #24]
  422158:	ldr	x0, [x0, #40]
  42215c:	bl	406930 <free@plt>
  422160:	ldr	x1, [sp, #32]
  422164:	ldr	x0, [sp, #24]
  422168:	str	x1, [x0, #40]
  42216c:	str	xzr, [sp, #32]
  422170:	ldr	x0, [sp, #24]
  422174:	ldr	w0, [x0, #20]
  422178:	add	x1, sp, #0x20
  42217c:	mov	x3, x1
  422180:	mov	w2, #0x0                   	// #0
  422184:	mov	x1, #0xffffffffffffffff    	// #-1
  422188:	bl	406720 <get_process_cmdline@plt>
  42218c:	cmp	w0, #0x0
  422190:	b.lt	4221b0 <client_context_read_basic+0x158>  // b.tstop
  422194:	ldr	x0, [sp, #24]
  422198:	ldr	x0, [x0, #48]
  42219c:	bl	406930 <free@plt>
  4221a0:	ldr	x1, [sp, #32]
  4221a4:	ldr	x0, [sp, #24]
  4221a8:	str	x1, [x0, #48]
  4221ac:	str	xzr, [sp, #32]
  4221b0:	ldr	x0, [sp, #24]
  4221b4:	ldr	w0, [x0, #20]
  4221b8:	add	x1, sp, #0x20
  4221bc:	bl	4063c0 <get_process_capeff@plt>
  4221c0:	cmp	w0, #0x0
  4221c4:	b.lt	4221e4 <client_context_read_basic+0x18c>  // b.tstop
  4221c8:	ldr	x0, [sp, #24]
  4221cc:	ldr	x0, [x0, #56]
  4221d0:	bl	406930 <free@plt>
  4221d4:	ldr	x1, [sp, #32]
  4221d8:	ldr	x0, [sp, #24]
  4221dc:	str	x1, [x0, #56]
  4221e0:	str	xzr, [sp, #32]
  4221e4:	nop
  4221e8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4221ec:	ldr	x0, [x0, #4064]
  4221f0:	ldr	x1, [sp, #40]
  4221f4:	ldr	x0, [x0]
  4221f8:	eor	x0, x1, x0
  4221fc:	cmp	x0, #0x0
  422200:	b.eq	422208 <client_context_read_basic+0x1b0>  // b.none
  422204:	bl	4063e0 <__stack_chk_fail@plt>
  422208:	ldp	x29, x30, [sp], #48
  42220c:	ret

0000000000422210 <client_context_read_label>:
  422210:	stp	x29, x30, [sp, #-64]!
  422214:	mov	x29, sp
  422218:	str	x0, [sp, #40]
  42221c:	str	x1, [sp, #32]
  422220:	str	x2, [sp, #24]
  422224:	ldr	x0, [sp, #40]
  422228:	cmp	x0, #0x0
  42222c:	cset	w0, eq  // eq = none
  422230:	and	w0, w0, #0xff
  422234:	and	x0, x0, #0xff
  422238:	cmp	x0, #0x0
  42223c:	b.eq	422268 <client_context_read_label+0x58>  // b.none
  422240:	adrp	x0, 42c000 <__func__.10684+0x8>
  422244:	add	x1, x0, #0xd13
  422248:	adrp	x0, 42d000 <__func__.11730+0x328>
  42224c:	add	x4, x0, #0x150
  422250:	mov	w3, #0xf4                  	// #244
  422254:	mov	x2, x1
  422258:	adrp	x0, 42c000 <__func__.10684+0x8>
  42225c:	add	x1, x0, #0xd90
  422260:	mov	w0, #0x0                   	// #0
  422264:	bl	405fd0 <log_assert_failed_realm@plt>
  422268:	ldr	x0, [sp, #40]
  42226c:	ldr	w0, [x0, #20]
  422270:	bl	4215f0 <pid_is_valid>
  422274:	and	w0, w0, #0xff
  422278:	eor	w0, w0, #0x1
  42227c:	and	w0, w0, #0xff
  422280:	and	x0, x0, #0xff
  422284:	cmp	x0, #0x0
  422288:	b.eq	4222b4 <client_context_read_label+0xa4>  // b.none
  42228c:	adrp	x0, 42c000 <__func__.10684+0x8>
  422290:	add	x1, x0, #0xd13
  422294:	adrp	x0, 42d000 <__func__.11730+0x328>
  422298:	add	x4, x0, #0x150
  42229c:	mov	w3, #0xf5                  	// #245
  4222a0:	mov	x2, x1
  4222a4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4222a8:	add	x1, x0, #0xe18
  4222ac:	mov	w0, #0x0                   	// #0
  4222b0:	bl	405fd0 <log_assert_failed_realm@plt>
  4222b4:	ldr	x0, [sp, #24]
  4222b8:	cmp	x0, #0x0
  4222bc:	cset	w0, ne  // ne = any
  4222c0:	and	w0, w0, #0xff
  4222c4:	and	x0, x0, #0xff
  4222c8:	cmp	x0, #0x0
  4222cc:	b.eq	422314 <client_context_read_label+0x104>  // b.none
  4222d0:	ldr	x0, [sp, #32]
  4222d4:	cmp	x0, #0x0
  4222d8:	cset	w0, eq  // eq = none
  4222dc:	and	w0, w0, #0xff
  4222e0:	and	x0, x0, #0xff
  4222e4:	cmp	x0, #0x0
  4222e8:	b.eq	422314 <client_context_read_label+0x104>  // b.none
  4222ec:	adrp	x0, 42c000 <__func__.10684+0x8>
  4222f0:	add	x1, x0, #0xd13
  4222f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4222f8:	add	x4, x0, #0x150
  4222fc:	mov	w3, #0xf6                  	// #246
  422300:	mov	x2, x1
  422304:	adrp	x0, 42c000 <__func__.10684+0x8>
  422308:	add	x1, x0, #0xe30
  42230c:	mov	w0, #0x0                   	// #0
  422310:	bl	405fd0 <log_assert_failed_realm@plt>
  422314:	ldr	x0, [sp, #24]
  422318:	cmp	x0, #0x0
  42231c:	b.eq	422370 <client_context_read_label+0x160>  // b.none
  422320:	ldr	x2, [sp, #24]
  422324:	mov	x1, #0x1                   	// #1
  422328:	ldr	x0, [sp, #32]
  42232c:	bl	4213b4 <memdup_suffix0_multiply>
  422330:	str	x0, [sp, #56]
  422334:	ldr	x0, [sp, #56]
  422338:	cmp	x0, #0x0
  42233c:	b.ne	422348 <client_context_read_label+0x138>  // b.any
  422340:	mov	w0, #0xfffffff4            	// #-12
  422344:	b	422374 <client_context_read_label+0x164>
  422348:	ldr	x0, [sp, #40]
  42234c:	ldr	x0, [x0, #144]
  422350:	bl	406930 <free@plt>
  422354:	ldr	x0, [sp, #40]
  422358:	ldr	x1, [sp, #56]
  42235c:	str	x1, [x0, #144]
  422360:	str	xzr, [sp, #56]
  422364:	ldr	x0, [sp, #40]
  422368:	ldr	x1, [sp, #24]
  42236c:	str	x1, [x0, #152]
  422370:	mov	w0, #0x0                   	// #0
  422374:	ldp	x29, x30, [sp], #64
  422378:	ret

000000000042237c <client_context_read_cgroup>:
  42237c:	stp	x29, x30, [sp, #-96]!
  422380:	mov	x29, sp
  422384:	str	x19, [sp, #16]
  422388:	str	x0, [sp, #56]
  42238c:	str	x1, [sp, #48]
  422390:	str	x2, [sp, #40]
  422394:	adrp	x0, 441000 <wordlist.9471+0x208>
  422398:	ldr	x0, [x0, #4064]
  42239c:	ldr	x1, [x0]
  4223a0:	str	x1, [sp, #88]
  4223a4:	mov	x1, #0x0                   	// #0
  4223a8:	str	xzr, [sp, #80]
  4223ac:	ldr	x0, [sp, #48]
  4223b0:	cmp	x0, #0x0
  4223b4:	cset	w0, eq  // eq = none
  4223b8:	and	w0, w0, #0xff
  4223bc:	and	x0, x0, #0xff
  4223c0:	cmp	x0, #0x0
  4223c4:	b.eq	4223f0 <client_context_read_cgroup+0x74>  // b.none
  4223c8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4223cc:	add	x1, x0, #0xd13
  4223d0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4223d4:	add	x4, x0, #0x170
  4223d8:	mov	w3, #0x118                 	// #280
  4223dc:	mov	x2, x1
  4223e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4223e4:	add	x1, x0, #0xd90
  4223e8:	mov	w0, #0x0                   	// #0
  4223ec:	bl	405fd0 <log_assert_failed_realm@plt>
  4223f0:	ldr	x0, [sp, #48]
  4223f4:	ldr	w3, [x0, #20]
  4223f8:	ldr	x0, [sp, #56]
  4223fc:	ldr	x0, [x0, #688]
  422400:	add	x1, sp, #0x50
  422404:	mov	x2, x1
  422408:	mov	x1, x0
  42240c:	mov	w0, w3
  422410:	bl	405dc0 <cg_pid_get_path_shifted@plt>
  422414:	str	w0, [sp, #76]
  422418:	ldr	w0, [sp, #76]
  42241c:	cmp	w0, #0x0
  422420:	b.lt	422438 <client_context_read_cgroup+0xbc>  // b.tstop
  422424:	ldr	x0, [sp, #80]
  422428:	bl	406740 <empty_or_root@plt>
  42242c:	and	w0, w0, #0xff
  422430:	cmp	w0, #0x0
  422434:	b.eq	422488 <client_context_read_cgroup+0x10c>  // b.none
  422438:	ldr	x0, [sp, #40]
  42243c:	cmp	x0, #0x0
  422440:	b.eq	422480 <client_context_read_cgroup+0x104>  // b.none
  422444:	ldr	x0, [sp, #48]
  422448:	ldr	x0, [x0, #96]
  42244c:	cmp	x0, #0x0
  422450:	b.ne	422480 <client_context_read_cgroup+0x104>  // b.any
  422454:	ldr	x0, [sp, #40]
  422458:	bl	406770 <strdup@plt>
  42245c:	mov	x1, x0
  422460:	ldr	x0, [sp, #48]
  422464:	str	x1, [x0, #96]
  422468:	ldr	x0, [sp, #48]
  42246c:	ldr	x0, [x0, #96]
  422470:	cmp	x0, #0x0
  422474:	b.eq	422480 <client_context_read_cgroup+0x104>  // b.none
  422478:	mov	w19, #0x0                   	// #0
  42247c:	b	4225d8 <client_context_read_cgroup+0x25c>
  422480:	ldr	w19, [sp, #76]
  422484:	b	4225d8 <client_context_read_cgroup+0x25c>
  422488:	ldr	x0, [sp, #48]
  42248c:	ldr	x0, [x0, #72]
  422490:	ldr	x1, [sp, #80]
  422494:	bl	421560 <streq_ptr>
  422498:	and	w0, w0, #0xff
  42249c:	cmp	w0, #0x0
  4224a0:	b.eq	4224ac <client_context_read_cgroup+0x130>  // b.none
  4224a4:	mov	w19, #0x0                   	// #0
  4224a8:	b	4225d8 <client_context_read_cgroup+0x25c>
  4224ac:	ldr	x0, [sp, #48]
  4224b0:	ldr	x0, [x0, #72]
  4224b4:	bl	406930 <free@plt>
  4224b8:	ldr	x1, [sp, #80]
  4224bc:	ldr	x0, [sp, #48]
  4224c0:	str	x1, [x0, #72]
  4224c4:	str	xzr, [sp, #80]
  4224c8:	ldr	x0, [sp, #48]
  4224cc:	ldr	x0, [x0, #72]
  4224d0:	add	x1, sp, #0x50
  4224d4:	bl	406880 <cg_path_get_session@plt>
  4224d8:	ldr	x0, [sp, #48]
  4224dc:	ldr	x0, [x0, #80]
  4224e0:	bl	406930 <free@plt>
  4224e4:	ldr	x1, [sp, #80]
  4224e8:	ldr	x0, [sp, #48]
  4224ec:	str	x1, [x0, #80]
  4224f0:	str	xzr, [sp, #80]
  4224f4:	ldr	x0, [sp, #48]
  4224f8:	ldr	x2, [x0, #72]
  4224fc:	ldr	x0, [sp, #48]
  422500:	add	x0, x0, #0x58
  422504:	mov	x1, x0
  422508:	mov	x0, x2
  42250c:	bl	4066d0 <cg_path_get_owner_uid@plt>
  422510:	cmp	w0, #0x0
  422514:	b.ge	422524 <client_context_read_cgroup+0x1a8>  // b.tcont
  422518:	ldr	x0, [sp, #48]
  42251c:	mov	w1, #0xffffffff            	// #-1
  422520:	str	w1, [x0, #88]
  422524:	ldr	x0, [sp, #48]
  422528:	ldr	x0, [x0, #72]
  42252c:	add	x1, sp, #0x50
  422530:	bl	4060b0 <cg_path_get_unit@plt>
  422534:	ldr	x0, [sp, #48]
  422538:	ldr	x0, [x0, #96]
  42253c:	bl	406930 <free@plt>
  422540:	ldr	x1, [sp, #80]
  422544:	ldr	x0, [sp, #48]
  422548:	str	x1, [x0, #96]
  42254c:	str	xzr, [sp, #80]
  422550:	ldr	x0, [sp, #48]
  422554:	ldr	x0, [x0, #72]
  422558:	add	x1, sp, #0x50
  42255c:	bl	405f30 <cg_path_get_user_unit@plt>
  422560:	ldr	x0, [sp, #48]
  422564:	ldr	x0, [x0, #104]
  422568:	bl	406930 <free@plt>
  42256c:	ldr	x1, [sp, #80]
  422570:	ldr	x0, [sp, #48]
  422574:	str	x1, [x0, #104]
  422578:	str	xzr, [sp, #80]
  42257c:	ldr	x0, [sp, #48]
  422580:	ldr	x0, [x0, #72]
  422584:	add	x1, sp, #0x50
  422588:	bl	405fe0 <cg_path_get_slice@plt>
  42258c:	ldr	x0, [sp, #48]
  422590:	ldr	x0, [x0, #112]
  422594:	bl	406930 <free@plt>
  422598:	ldr	x1, [sp, #80]
  42259c:	ldr	x0, [sp, #48]
  4225a0:	str	x1, [x0, #112]
  4225a4:	str	xzr, [sp, #80]
  4225a8:	ldr	x0, [sp, #48]
  4225ac:	ldr	x0, [x0, #72]
  4225b0:	add	x1, sp, #0x50
  4225b4:	bl	4067b0 <cg_path_get_user_slice@plt>
  4225b8:	ldr	x0, [sp, #48]
  4225bc:	ldr	x0, [x0, #120]
  4225c0:	bl	406930 <free@plt>
  4225c4:	ldr	x1, [sp, #80]
  4225c8:	ldr	x0, [sp, #48]
  4225cc:	str	x1, [x0, #120]
  4225d0:	str	xzr, [sp, #80]
  4225d4:	mov	w19, #0x0                   	// #0
  4225d8:	add	x0, sp, #0x50
  4225dc:	bl	421314 <freep>
  4225e0:	mov	w1, w19
  4225e4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4225e8:	ldr	x0, [x0, #4064]
  4225ec:	ldr	x2, [sp, #88]
  4225f0:	ldr	x0, [x0]
  4225f4:	eor	x0, x2, x0
  4225f8:	cmp	x0, #0x0
  4225fc:	b.eq	422604 <client_context_read_cgroup+0x288>  // b.none
  422600:	bl	4063e0 <__stack_chk_fail@plt>
  422604:	mov	w0, w1
  422608:	ldr	x19, [sp, #16]
  42260c:	ldp	x29, x30, [sp], #96
  422610:	ret

0000000000422614 <client_context_read_invocation_id>:
  422614:	stp	x29, x30, [sp, #-144]!
  422618:	mov	x29, sp
  42261c:	str	x19, [sp, #16]
  422620:	str	x0, [x29, #40]
  422624:	str	x1, [x29, #32]
  422628:	adrp	x0, 441000 <wordlist.9471+0x208>
  42262c:	ldr	x0, [x0, #4064]
  422630:	ldr	x1, [x0]
  422634:	str	x1, [x29, #136]
  422638:	mov	x1, #0x0                   	// #0
  42263c:	str	xzr, [x29, #64]
  422640:	ldr	x0, [x29, #40]
  422644:	cmp	x0, #0x0
  422648:	cset	w0, eq  // eq = none
  42264c:	and	w0, w0, #0xff
  422650:	and	x0, x0, #0xff
  422654:	cmp	x0, #0x0
  422658:	b.eq	422684 <client_context_read_invocation_id+0x70>  // b.none
  42265c:	adrp	x0, 42c000 <__func__.10684+0x8>
  422660:	add	x1, x0, #0xd13
  422664:	adrp	x0, 42d000 <__func__.11730+0x328>
  422668:	add	x4, x0, #0x190
  42266c:	mov	w3, #0x14c                 	// #332
  422670:	mov	x2, x1
  422674:	adrp	x0, 42c000 <__func__.10684+0x8>
  422678:	add	x1, x0, #0xd68
  42267c:	mov	w0, #0x0                   	// #0
  422680:	bl	405fd0 <log_assert_failed_realm@plt>
  422684:	ldr	x0, [x29, #32]
  422688:	cmp	x0, #0x0
  42268c:	cset	w0, eq  // eq = none
  422690:	and	w0, w0, #0xff
  422694:	and	x0, x0, #0xff
  422698:	cmp	x0, #0x0
  42269c:	b.eq	4226c8 <client_context_read_invocation_id+0xb4>  // b.none
  4226a0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4226a4:	add	x1, x0, #0xd13
  4226a8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4226ac:	add	x4, x0, #0x190
  4226b0:	mov	w3, #0x14d                 	// #333
  4226b4:	mov	x2, x1
  4226b8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4226bc:	add	x1, x0, #0xd90
  4226c0:	mov	w0, #0x0                   	// #0
  4226c4:	bl	405fd0 <log_assert_failed_realm@plt>
  4226c8:	ldr	x0, [x29, #32]
  4226cc:	ldr	x0, [x0, #96]
  4226d0:	cmp	x0, #0x0
  4226d4:	b.ne	4226e0 <client_context_read_invocation_id+0xcc>  // b.any
  4226d8:	mov	w19, #0x0                   	// #0
  4226dc:	b	4228c8 <client_context_read_invocation_id+0x2b4>
  4226e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4226e4:	add	x0, x0, #0xe50
  4226e8:	str	x0, [x29, #120]
  4226ec:	ldr	x0, [x29, #32]
  4226f0:	ldr	x0, [x0, #96]
  4226f4:	str	x0, [x29, #128]
  4226f8:	str	xzr, [x29, #80]
  4226fc:	str	xzr, [x29, #88]
  422700:	b	422734 <client_context_read_invocation_id+0x120>
  422704:	ldr	x0, [x29, #88]
  422708:	lsl	x0, x0, #3
  42270c:	add	x1, x29, #0x78
  422710:	ldr	x0, [x1, x0]
  422714:	bl	406af0 <strlen@plt>
  422718:	mov	x1, x0
  42271c:	ldr	x0, [x29, #80]
  422720:	add	x0, x0, x1
  422724:	str	x0, [x29, #80]
  422728:	ldr	x0, [x29, #88]
  42272c:	add	x0, x0, #0x1
  422730:	str	x0, [x29, #88]
  422734:	ldr	x0, [x29, #88]
  422738:	cmp	x0, #0x1
  42273c:	b.hi	422758 <client_context_read_invocation_id+0x144>  // b.pmore
  422740:	ldr	x0, [x29, #88]
  422744:	lsl	x0, x0, #3
  422748:	add	x1, x29, #0x78
  42274c:	ldr	x0, [x1, x0]
  422750:	cmp	x0, #0x0
  422754:	b.ne	422704 <client_context_read_invocation_id+0xf0>  // b.any
  422758:	ldr	x0, [x29, #80]
  42275c:	add	x0, x0, #0x1
  422760:	str	x0, [x29, #96]
  422764:	ldr	x1, [x29, #96]
  422768:	mov	x0, #0x1                   	// #1
  42276c:	bl	421338 <size_multiply_overflow>
  422770:	and	w0, w0, #0xff
  422774:	and	x0, x0, #0xff
  422778:	cmp	x0, #0x0
  42277c:	b.eq	4227a8 <client_context_read_invocation_id+0x194>  // b.none
  422780:	adrp	x0, 42c000 <__func__.10684+0x8>
  422784:	add	x1, x0, #0xd13
  422788:	adrp	x0, 42d000 <__func__.11730+0x328>
  42278c:	add	x4, x0, #0x190
  422790:	mov	w3, #0x154                 	// #340
  422794:	mov	x2, x1
  422798:	adrp	x0, 42c000 <__func__.10684+0x8>
  42279c:	add	x1, x0, #0xe70
  4227a0:	mov	w0, #0x0                   	// #0
  4227a4:	bl	405fd0 <log_assert_failed_realm@plt>
  4227a8:	ldr	x0, [x29, #96]
  4227ac:	cmp	x0, #0x400, lsl #12
  4227b0:	cset	w0, hi  // hi = pmore
  4227b4:	and	w0, w0, #0xff
  4227b8:	and	x0, x0, #0xff
  4227bc:	cmp	x0, #0x0
  4227c0:	b.eq	4227ec <client_context_read_invocation_id+0x1d8>  // b.none
  4227c4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4227c8:	add	x1, x0, #0xd13
  4227cc:	adrp	x0, 42d000 <__func__.11730+0x328>
  4227d0:	add	x4, x0, #0x190
  4227d4:	mov	w3, #0x154                 	// #340
  4227d8:	mov	x2, x1
  4227dc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4227e0:	add	x1, x0, #0xea0
  4227e4:	mov	w0, #0x0                   	// #0
  4227e8:	bl	405fd0 <log_assert_failed_realm@plt>
  4227ec:	ldr	x0, [x29, #96]
  4227f0:	add	x0, x0, #0xf
  4227f4:	lsr	x0, x0, #4
  4227f8:	lsl	x0, x0, #4
  4227fc:	sub	sp, sp, x0
  422800:	mov	x0, sp
  422804:	add	x0, x0, #0xf
  422808:	lsr	x0, x0, #4
  42280c:	lsl	x0, x0, #4
  422810:	str	x0, [x29, #104]
  422814:	ldr	x0, [x29, #104]
  422818:	str	x0, [x29, #72]
  42281c:	str	xzr, [x29, #88]
  422820:	b	422850 <client_context_read_invocation_id+0x23c>
  422824:	ldr	x0, [x29, #88]
  422828:	lsl	x0, x0, #3
  42282c:	add	x1, x29, #0x78
  422830:	ldr	x0, [x1, x0]
  422834:	mov	x1, x0
  422838:	ldr	x0, [x29, #72]
  42283c:	bl	405bc0 <stpcpy@plt>
  422840:	str	x0, [x29, #72]
  422844:	ldr	x0, [x29, #88]
  422848:	add	x0, x0, #0x1
  42284c:	str	x0, [x29, #88]
  422850:	ldr	x0, [x29, #88]
  422854:	cmp	x0, #0x1
  422858:	b.hi	422874 <client_context_read_invocation_id+0x260>  // b.pmore
  42285c:	ldr	x0, [x29, #88]
  422860:	lsl	x0, x0, #3
  422864:	add	x1, x29, #0x78
  422868:	ldr	x0, [x1, x0]
  42286c:	cmp	x0, #0x0
  422870:	b.ne	422824 <client_context_read_invocation_id+0x210>  // b.any
  422874:	ldr	x0, [x29, #72]
  422878:	strb	wzr, [x0]
  42287c:	ldr	x0, [x29, #104]
  422880:	str	x0, [x29, #112]
  422884:	add	x0, x29, #0x40
  422888:	mov	x1, x0
  42288c:	ldr	x0, [x29, #112]
  422890:	bl	406a30 <readlink_malloc@plt>
  422894:	str	w0, [x29, #60]
  422898:	ldr	w0, [x29, #60]
  42289c:	cmp	w0, #0x0
  4228a0:	b.ge	4228ac <client_context_read_invocation_id+0x298>  // b.tcont
  4228a4:	ldr	w19, [x29, #60]
  4228a8:	b	4228c8 <client_context_read_invocation_id+0x2b4>
  4228ac:	ldr	x2, [x29, #64]
  4228b0:	ldr	x0, [x29, #32]
  4228b4:	add	x0, x0, #0x80
  4228b8:	mov	x1, x0
  4228bc:	mov	x0, x2
  4228c0:	bl	405c50 <sd_id128_from_string@plt>
  4228c4:	mov	w19, w0
  4228c8:	add	x0, x29, #0x40
  4228cc:	bl	421314 <freep>
  4228d0:	mov	w1, w19
  4228d4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4228d8:	ldr	x0, [x0, #4064]
  4228dc:	ldr	x2, [x29, #136]
  4228e0:	ldr	x0, [x0]
  4228e4:	eor	x0, x2, x0
  4228e8:	cmp	x0, #0x0
  4228ec:	b.eq	4228f4 <client_context_read_invocation_id+0x2e0>  // b.none
  4228f0:	bl	4063e0 <__stack_chk_fail@plt>
  4228f4:	mov	w0, w1
  4228f8:	mov	sp, x29
  4228fc:	ldr	x19, [sp, #16]
  422900:	ldp	x29, x30, [sp], #144
  422904:	ret

0000000000422908 <client_context_read_log_level_max>:
  422908:	stp	x29, x30, [sp, #-144]!
  42290c:	mov	x29, sp
  422910:	str	x19, [sp, #16]
  422914:	str	x0, [x29, #40]
  422918:	str	x1, [x29, #32]
  42291c:	adrp	x0, 441000 <wordlist.9471+0x208>
  422920:	ldr	x0, [x0, #4064]
  422924:	ldr	x1, [x0]
  422928:	str	x1, [x29, #136]
  42292c:	mov	x1, #0x0                   	// #0
  422930:	str	xzr, [x29, #64]
  422934:	ldr	x0, [x29, #32]
  422938:	ldr	x0, [x0, #96]
  42293c:	cmp	x0, #0x0
  422940:	b.ne	42294c <client_context_read_log_level_max+0x44>  // b.any
  422944:	mov	w19, #0x0                   	// #0
  422948:	b	422b48 <client_context_read_log_level_max+0x240>
  42294c:	adrp	x0, 42c000 <__func__.10684+0x8>
  422950:	add	x0, x0, #0xec0
  422954:	str	x0, [x29, #120]
  422958:	ldr	x0, [x29, #32]
  42295c:	ldr	x0, [x0, #96]
  422960:	str	x0, [x29, #128]
  422964:	str	xzr, [x29, #80]
  422968:	str	xzr, [x29, #88]
  42296c:	b	4229a0 <client_context_read_log_level_max+0x98>
  422970:	ldr	x0, [x29, #88]
  422974:	lsl	x0, x0, #3
  422978:	add	x1, x29, #0x78
  42297c:	ldr	x0, [x1, x0]
  422980:	bl	406af0 <strlen@plt>
  422984:	mov	x1, x0
  422988:	ldr	x0, [x29, #80]
  42298c:	add	x0, x0, x1
  422990:	str	x0, [x29, #80]
  422994:	ldr	x0, [x29, #88]
  422998:	add	x0, x0, #0x1
  42299c:	str	x0, [x29, #88]
  4229a0:	ldr	x0, [x29, #88]
  4229a4:	cmp	x0, #0x1
  4229a8:	b.hi	4229c4 <client_context_read_log_level_max+0xbc>  // b.pmore
  4229ac:	ldr	x0, [x29, #88]
  4229b0:	lsl	x0, x0, #3
  4229b4:	add	x1, x29, #0x78
  4229b8:	ldr	x0, [x1, x0]
  4229bc:	cmp	x0, #0x0
  4229c0:	b.ne	422970 <client_context_read_log_level_max+0x68>  // b.any
  4229c4:	ldr	x0, [x29, #80]
  4229c8:	add	x0, x0, #0x1
  4229cc:	str	x0, [x29, #96]
  4229d0:	ldr	x1, [x29, #96]
  4229d4:	mov	x0, #0x1                   	// #1
  4229d8:	bl	421338 <size_multiply_overflow>
  4229dc:	and	w0, w0, #0xff
  4229e0:	and	x0, x0, #0xff
  4229e4:	cmp	x0, #0x0
  4229e8:	b.eq	422a14 <client_context_read_log_level_max+0x10c>  // b.none
  4229ec:	adrp	x0, 42c000 <__func__.10684+0x8>
  4229f0:	add	x1, x0, #0xd13
  4229f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4229f8:	add	x4, x0, #0x1b8
  4229fc:	mov	w3, #0x167                 	// #359
  422a00:	mov	x2, x1
  422a04:	adrp	x0, 42c000 <__func__.10684+0x8>
  422a08:	add	x1, x0, #0xe70
  422a0c:	mov	w0, #0x0                   	// #0
  422a10:	bl	405fd0 <log_assert_failed_realm@plt>
  422a14:	ldr	x0, [x29, #96]
  422a18:	cmp	x0, #0x400, lsl #12
  422a1c:	cset	w0, hi  // hi = pmore
  422a20:	and	w0, w0, #0xff
  422a24:	and	x0, x0, #0xff
  422a28:	cmp	x0, #0x0
  422a2c:	b.eq	422a58 <client_context_read_log_level_max+0x150>  // b.none
  422a30:	adrp	x0, 42c000 <__func__.10684+0x8>
  422a34:	add	x1, x0, #0xd13
  422a38:	adrp	x0, 42d000 <__func__.11730+0x328>
  422a3c:	add	x4, x0, #0x1b8
  422a40:	mov	w3, #0x167                 	// #359
  422a44:	mov	x2, x1
  422a48:	adrp	x0, 42c000 <__func__.10684+0x8>
  422a4c:	add	x1, x0, #0xea0
  422a50:	mov	w0, #0x0                   	// #0
  422a54:	bl	405fd0 <log_assert_failed_realm@plt>
  422a58:	ldr	x0, [x29, #96]
  422a5c:	add	x0, x0, #0xf
  422a60:	lsr	x0, x0, #4
  422a64:	lsl	x0, x0, #4
  422a68:	sub	sp, sp, x0
  422a6c:	mov	x0, sp
  422a70:	add	x0, x0, #0xf
  422a74:	lsr	x0, x0, #4
  422a78:	lsl	x0, x0, #4
  422a7c:	str	x0, [x29, #104]
  422a80:	ldr	x0, [x29, #104]
  422a84:	str	x0, [x29, #72]
  422a88:	str	xzr, [x29, #88]
  422a8c:	b	422abc <client_context_read_log_level_max+0x1b4>
  422a90:	ldr	x0, [x29, #88]
  422a94:	lsl	x0, x0, #3
  422a98:	add	x1, x29, #0x78
  422a9c:	ldr	x0, [x1, x0]
  422aa0:	mov	x1, x0
  422aa4:	ldr	x0, [x29, #72]
  422aa8:	bl	405bc0 <stpcpy@plt>
  422aac:	str	x0, [x29, #72]
  422ab0:	ldr	x0, [x29, #88]
  422ab4:	add	x0, x0, #0x1
  422ab8:	str	x0, [x29, #88]
  422abc:	ldr	x0, [x29, #88]
  422ac0:	cmp	x0, #0x1
  422ac4:	b.hi	422ae0 <client_context_read_log_level_max+0x1d8>  // b.pmore
  422ac8:	ldr	x0, [x29, #88]
  422acc:	lsl	x0, x0, #3
  422ad0:	add	x1, x29, #0x78
  422ad4:	ldr	x0, [x1, x0]
  422ad8:	cmp	x0, #0x0
  422adc:	b.ne	422a90 <client_context_read_log_level_max+0x188>  // b.any
  422ae0:	ldr	x0, [x29, #72]
  422ae4:	strb	wzr, [x0]
  422ae8:	ldr	x0, [x29, #104]
  422aec:	str	x0, [x29, #112]
  422af0:	add	x0, x29, #0x40
  422af4:	mov	x1, x0
  422af8:	ldr	x0, [x29, #112]
  422afc:	bl	406a30 <readlink_malloc@plt>
  422b00:	str	w0, [x29, #56]
  422b04:	ldr	w0, [x29, #56]
  422b08:	cmp	w0, #0x0
  422b0c:	b.ge	422b18 <client_context_read_log_level_max+0x210>  // b.tcont
  422b10:	ldr	w19, [x29, #56]
  422b14:	b	422b48 <client_context_read_log_level_max+0x240>
  422b18:	ldr	x0, [x29, #64]
  422b1c:	bl	4064d0 <log_level_from_string@plt>
  422b20:	str	w0, [x29, #60]
  422b24:	ldr	w0, [x29, #60]
  422b28:	cmp	w0, #0x0
  422b2c:	b.ge	422b38 <client_context_read_log_level_max+0x230>  // b.tcont
  422b30:	mov	w19, #0xffffffea            	// #-22
  422b34:	b	422b48 <client_context_read_log_level_max+0x240>
  422b38:	ldr	x0, [x29, #32]
  422b3c:	ldr	w1, [x29, #60]
  422b40:	str	w1, [x0, #160]
  422b44:	mov	w19, #0x0                   	// #0
  422b48:	add	x0, x29, #0x40
  422b4c:	bl	421314 <freep>
  422b50:	mov	w1, w19
  422b54:	adrp	x0, 441000 <wordlist.9471+0x208>
  422b58:	ldr	x0, [x0, #4064]
  422b5c:	ldr	x2, [x29, #136]
  422b60:	ldr	x0, [x0]
  422b64:	eor	x0, x2, x0
  422b68:	cmp	x0, #0x0
  422b6c:	b.eq	422b74 <client_context_read_log_level_max+0x26c>  // b.none
  422b70:	bl	4063e0 <__stack_chk_fail@plt>
  422b74:	mov	w0, w1
  422b78:	mov	sp, x29
  422b7c:	ldr	x19, [sp, #16]
  422b80:	ldp	x29, x30, [sp], #144
  422b84:	ret

0000000000422b88 <client_context_read_extra_fields>:
  422b88:	stp	x29, x30, [sp, #-352]!
  422b8c:	mov	x29, sp
  422b90:	str	x19, [sp, #16]
  422b94:	str	x0, [x29, #40]
  422b98:	str	x1, [x29, #32]
  422b9c:	adrp	x0, 441000 <wordlist.9471+0x208>
  422ba0:	ldr	x0, [x0, #4064]
  422ba4:	ldr	x1, [x0]
  422ba8:	str	x1, [x29, #344]
  422bac:	mov	x1, #0x0                   	// #0
  422bb0:	str	xzr, [x29, #56]
  422bb4:	str	xzr, [x29, #96]
  422bb8:	str	xzr, [x29, #64]
  422bbc:	str	xzr, [x29, #72]
  422bc0:	str	xzr, [x29, #80]
  422bc4:	str	xzr, [x29, #88]
  422bc8:	ldr	x0, [x29, #32]
  422bcc:	ldr	x0, [x0, #96]
  422bd0:	cmp	x0, #0x0
  422bd4:	b.ne	422be0 <client_context_read_extra_fields+0x58>  // b.any
  422bd8:	mov	w19, #0x0                   	// #0
  422bdc:	b	423064 <client_context_read_extra_fields+0x4dc>
  422be0:	adrp	x0, 42c000 <__func__.10684+0x8>
  422be4:	add	x0, x0, #0xee8
  422be8:	str	x0, [x29, #216]
  422bec:	ldr	x0, [x29, #32]
  422bf0:	ldr	x0, [x0, #96]
  422bf4:	str	x0, [x29, #224]
  422bf8:	str	xzr, [x29, #128]
  422bfc:	str	xzr, [x29, #136]
  422c00:	b	422c34 <client_context_read_extra_fields+0xac>
  422c04:	ldr	x0, [x29, #136]
  422c08:	lsl	x0, x0, #3
  422c0c:	add	x1, x29, #0xd8
  422c10:	ldr	x0, [x1, x0]
  422c14:	bl	406af0 <strlen@plt>
  422c18:	mov	x1, x0
  422c1c:	ldr	x0, [x29, #128]
  422c20:	add	x0, x0, x1
  422c24:	str	x0, [x29, #128]
  422c28:	ldr	x0, [x29, #136]
  422c2c:	add	x0, x0, #0x1
  422c30:	str	x0, [x29, #136]
  422c34:	ldr	x0, [x29, #136]
  422c38:	cmp	x0, #0x1
  422c3c:	b.hi	422c58 <client_context_read_extra_fields+0xd0>  // b.pmore
  422c40:	ldr	x0, [x29, #136]
  422c44:	lsl	x0, x0, #3
  422c48:	add	x1, x29, #0xd8
  422c4c:	ldr	x0, [x1, x0]
  422c50:	cmp	x0, #0x0
  422c54:	b.ne	422c04 <client_context_read_extra_fields+0x7c>  // b.any
  422c58:	ldr	x0, [x29, #128]
  422c5c:	add	x0, x0, #0x1
  422c60:	str	x0, [x29, #144]
  422c64:	ldr	x1, [x29, #144]
  422c68:	mov	x0, #0x1                   	// #1
  422c6c:	bl	421338 <size_multiply_overflow>
  422c70:	and	w0, w0, #0xff
  422c74:	and	x0, x0, #0xff
  422c78:	cmp	x0, #0x0
  422c7c:	b.eq	422ca8 <client_context_read_extra_fields+0x120>  // b.none
  422c80:	adrp	x0, 42c000 <__func__.10684+0x8>
  422c84:	add	x1, x0, #0xd13
  422c88:	adrp	x0, 42d000 <__func__.11730+0x328>
  422c8c:	add	x4, x0, #0x1e0
  422c90:	mov	w3, #0x184                 	// #388
  422c94:	mov	x2, x1
  422c98:	adrp	x0, 42c000 <__func__.10684+0x8>
  422c9c:	add	x1, x0, #0xe70
  422ca0:	mov	w0, #0x0                   	// #0
  422ca4:	bl	405fd0 <log_assert_failed_realm@plt>
  422ca8:	ldr	x0, [x29, #144]
  422cac:	cmp	x0, #0x400, lsl #12
  422cb0:	cset	w0, hi  // hi = pmore
  422cb4:	and	w0, w0, #0xff
  422cb8:	and	x0, x0, #0xff
  422cbc:	cmp	x0, #0x0
  422cc0:	b.eq	422cec <client_context_read_extra_fields+0x164>  // b.none
  422cc4:	adrp	x0, 42c000 <__func__.10684+0x8>
  422cc8:	add	x1, x0, #0xd13
  422ccc:	adrp	x0, 42d000 <__func__.11730+0x328>
  422cd0:	add	x4, x0, #0x1e0
  422cd4:	mov	w3, #0x184                 	// #388
  422cd8:	mov	x2, x1
  422cdc:	adrp	x0, 42c000 <__func__.10684+0x8>
  422ce0:	add	x1, x0, #0xea0
  422ce4:	mov	w0, #0x0                   	// #0
  422ce8:	bl	405fd0 <log_assert_failed_realm@plt>
  422cec:	ldr	x0, [x29, #144]
  422cf0:	add	x0, x0, #0xf
  422cf4:	lsr	x0, x0, #4
  422cf8:	lsl	x0, x0, #4
  422cfc:	sub	sp, sp, x0
  422d00:	mov	x0, sp
  422d04:	add	x0, x0, #0xf
  422d08:	lsr	x0, x0, #4
  422d0c:	lsl	x0, x0, #4
  422d10:	str	x0, [x29, #152]
  422d14:	ldr	x0, [x29, #152]
  422d18:	str	x0, [x29, #120]
  422d1c:	str	xzr, [x29, #136]
  422d20:	b	422d50 <client_context_read_extra_fields+0x1c8>
  422d24:	ldr	x0, [x29, #136]
  422d28:	lsl	x0, x0, #3
  422d2c:	add	x1, x29, #0xd8
  422d30:	ldr	x0, [x1, x0]
  422d34:	mov	x1, x0
  422d38:	ldr	x0, [x29, #120]
  422d3c:	bl	405bc0 <stpcpy@plt>
  422d40:	str	x0, [x29, #120]
  422d44:	ldr	x0, [x29, #136]
  422d48:	add	x0, x0, #0x1
  422d4c:	str	x0, [x29, #136]
  422d50:	ldr	x0, [x29, #136]
  422d54:	cmp	x0, #0x1
  422d58:	b.hi	422d74 <client_context_read_extra_fields+0x1ec>  // b.pmore
  422d5c:	ldr	x0, [x29, #136]
  422d60:	lsl	x0, x0, #3
  422d64:	add	x1, x29, #0xd8
  422d68:	ldr	x0, [x1, x0]
  422d6c:	cmp	x0, #0x0
  422d70:	b.ne	422d24 <client_context_read_extra_fields+0x19c>  // b.any
  422d74:	ldr	x0, [x29, #120]
  422d78:	strb	wzr, [x0]
  422d7c:	ldr	x0, [x29, #152]
  422d80:	str	x0, [x29, #160]
  422d84:	ldr	x0, [x29, #32]
  422d88:	ldr	x0, [x0, #192]
  422d8c:	cmn	x0, #0x1
  422d90:	b.eq	422dfc <client_context_read_extra_fields+0x274>  // b.none
  422d94:	add	x0, x29, #0xd8
  422d98:	mov	x1, x0
  422d9c:	ldr	x0, [x29, #160]
  422da0:	bl	4275e0 <stat64>
  422da4:	cmp	w0, #0x0
  422da8:	b.ge	422dd4 <client_context_read_extra_fields+0x24c>  // b.tcont
  422dac:	bl	4062e0 <__errno_location@plt>
  422db0:	ldr	w0, [x0]
  422db4:	cmp	w0, #0x2
  422db8:	b.ne	422dc4 <client_context_read_extra_fields+0x23c>  // b.any
  422dbc:	mov	w19, #0x0                   	// #0
  422dc0:	b	423064 <client_context_read_extra_fields+0x4dc>
  422dc4:	bl	4062e0 <__errno_location@plt>
  422dc8:	ldr	w0, [x0]
  422dcc:	neg	w19, w0
  422dd0:	b	423064 <client_context_read_extra_fields+0x4dc>
  422dd4:	add	x0, x29, #0xd8
  422dd8:	add	x0, x0, #0x58
  422ddc:	bl	406be0 <timespec_load_nsec@plt>
  422de0:	mov	x1, x0
  422de4:	ldr	x0, [x29, #32]
  422de8:	ldr	x0, [x0, #192]
  422dec:	cmp	x1, x0
  422df0:	b.ne	422dfc <client_context_read_extra_fields+0x274>  // b.any
  422df4:	mov	w19, #0x0                   	// #0
  422df8:	b	423064 <client_context_read_extra_fields+0x4dc>
  422dfc:	adrp	x0, 42c000 <__func__.10684+0x8>
  422e00:	add	x1, x0, #0xf10
  422e04:	ldr	x0, [x29, #160]
  422e08:	bl	406b20 <fopen64@plt>
  422e0c:	str	x0, [x29, #88]
  422e10:	ldr	x0, [x29, #88]
  422e14:	cmp	x0, #0x0
  422e18:	b.ne	422e44 <client_context_read_extra_fields+0x2bc>  // b.any
  422e1c:	bl	4062e0 <__errno_location@plt>
  422e20:	ldr	w0, [x0]
  422e24:	cmp	w0, #0x2
  422e28:	b.ne	422e34 <client_context_read_extra_fields+0x2ac>  // b.any
  422e2c:	mov	w19, #0x0                   	// #0
  422e30:	b	423064 <client_context_read_extra_fields+0x4dc>
  422e34:	bl	4062e0 <__errno_location@plt>
  422e38:	ldr	w0, [x0]
  422e3c:	neg	w19, w0
  422e40:	b	423064 <client_context_read_extra_fields+0x4dc>
  422e44:	ldr	x0, [x29, #88]
  422e48:	bl	405c90 <fileno@plt>
  422e4c:	mov	w2, w0
  422e50:	add	x0, x29, #0xd8
  422e54:	mov	x1, x0
  422e58:	mov	w0, w2
  422e5c:	bl	4275f0 <fstat64>
  422e60:	cmp	w0, #0x0
  422e64:	b.ge	422e78 <client_context_read_extra_fields+0x2f0>  // b.tcont
  422e68:	bl	4062e0 <__errno_location@plt>
  422e6c:	ldr	w0, [x0]
  422e70:	neg	w19, w0
  422e74:	b	423064 <client_context_read_extra_fields+0x4dc>
  422e78:	ldr	x0, [x29, #88]
  422e7c:	add	x2, x29, #0x38
  422e80:	add	x1, x29, #0x50
  422e84:	bl	421518 <read_full_stream>
  422e88:	str	w0, [x29, #52]
  422e8c:	ldr	w0, [x29, #52]
  422e90:	cmp	w0, #0x0
  422e94:	b.ge	422ea0 <client_context_read_extra_fields+0x318>  // b.tcont
  422e98:	ldr	w19, [x29, #52]
  422e9c:	b	423064 <client_context_read_extra_fields+0x4dc>
  422ea0:	ldr	x0, [x29, #80]
  422ea4:	str	x0, [x29, #112]
  422ea8:	ldr	x0, [x29, #56]
  422eac:	str	x0, [x29, #104]
  422eb0:	b	422fe8 <client_context_read_extra_fields+0x460>
  422eb4:	ldr	x0, [x29, #104]
  422eb8:	cmp	x0, #0x7
  422ebc:	b.hi	422ec8 <client_context_read_extra_fields+0x340>  // b.pmore
  422ec0:	mov	w19, #0xffffffb6            	// #-74
  422ec4:	b	423064 <client_context_read_extra_fields+0x4dc>
  422ec8:	ldr	x0, [x29, #112]
  422ecc:	bl	421610 <unaligned_read_le64>
  422ed0:	str	x0, [x29, #184]
  422ed4:	ldr	x0, [x29, #184]
  422ed8:	cmp	x0, #0x1
  422edc:	b.hi	422ee8 <client_context_read_extra_fields+0x360>  // b.pmore
  422ee0:	mov	w19, #0xffffffb6            	// #-74
  422ee4:	b	423064 <client_context_read_extra_fields+0x4dc>
  422ee8:	ldr	x0, [x29, #184]
  422eec:	add	x0, x0, #0x8
  422ef0:	str	x0, [x29, #192]
  422ef4:	ldr	x1, [x29, #104]
  422ef8:	ldr	x0, [x29, #192]
  422efc:	cmp	x1, x0
  422f00:	b.cs	422f0c <client_context_read_extra_fields+0x384>  // b.hs, b.nlast
  422f04:	mov	w19, #0xffffffb6            	// #-74
  422f08:	b	423064 <client_context_read_extra_fields+0x4dc>
  422f0c:	ldr	x0, [x29, #112]
  422f10:	add	x0, x0, #0x8
  422f14:	str	x0, [x29, #200]
  422f18:	ldr	x2, [x29, #184]
  422f1c:	mov	w1, #0x3d                  	// #61
  422f20:	ldr	x0, [x29, #200]
  422f24:	bl	406870 <memchr@plt>
  422f28:	str	x0, [x29, #208]
  422f2c:	ldr	x0, [x29, #208]
  422f30:	cmp	x0, #0x0
  422f34:	b.ne	422f40 <client_context_read_extra_fields+0x3b8>  // b.any
  422f38:	mov	w19, #0xffffffb6            	// #-74
  422f3c:	b	423064 <client_context_read_extra_fields+0x4dc>
  422f40:	ldr	x1, [x29, #208]
  422f44:	ldr	x0, [x29, #200]
  422f48:	sub	x0, x1, x0
  422f4c:	mov	w2, #0x0                   	// #0
  422f50:	mov	x1, x0
  422f54:	ldr	x0, [x29, #200]
  422f58:	bl	405e10 <journal_field_valid@plt>
  422f5c:	and	w0, w0, #0xff
  422f60:	eor	w0, w0, #0x1
  422f64:	and	w0, w0, #0xff
  422f68:	cmp	w0, #0x0
  422f6c:	b.eq	422f78 <client_context_read_extra_fields+0x3f0>  // b.none
  422f70:	mov	w19, #0xffffffb6            	// #-74
  422f74:	b	423064 <client_context_read_extra_fields+0x4dc>
  422f78:	ldr	x0, [x29, #96]
  422f7c:	add	x2, x0, #0x1
  422f80:	add	x1, x29, #0x40
  422f84:	add	x0, x29, #0x48
  422f88:	mov	x3, #0x10                  	// #16
  422f8c:	bl	406160 <greedy_realloc@plt>
  422f90:	cmp	x0, #0x0
  422f94:	b.ne	422fa0 <client_context_read_extra_fields+0x418>  // b.any
  422f98:	mov	w19, #0xfffffff4            	// #-12
  422f9c:	b	423064 <client_context_read_extra_fields+0x4dc>
  422fa0:	ldr	x1, [x29, #72]
  422fa4:	ldr	x0, [x29, #96]
  422fa8:	add	x2, x0, #0x1
  422fac:	str	x2, [x29, #96]
  422fb0:	lsl	x0, x0, #4
  422fb4:	add	x0, x1, x0
  422fb8:	ldr	x1, [x29, #200]
  422fbc:	str	x1, [x0]
  422fc0:	ldr	x1, [x29, #184]
  422fc4:	str	x1, [x0, #8]
  422fc8:	ldr	x1, [x29, #104]
  422fcc:	ldr	x0, [x29, #192]
  422fd0:	sub	x0, x1, x0
  422fd4:	str	x0, [x29, #104]
  422fd8:	ldr	x1, [x29, #112]
  422fdc:	ldr	x0, [x29, #192]
  422fe0:	add	x0, x1, x0
  422fe4:	str	x0, [x29, #112]
  422fe8:	ldr	x0, [x29, #104]
  422fec:	cmp	x0, #0x0
  422ff0:	b.ne	422eb4 <client_context_read_extra_fields+0x32c>  // b.any
  422ff4:	ldr	x0, [x29, #32]
  422ff8:	ldr	x0, [x0, #168]
  422ffc:	bl	406930 <free@plt>
  423000:	ldr	x0, [x29, #32]
  423004:	ldr	x0, [x0, #184]
  423008:	bl	406930 <free@plt>
  42300c:	ldr	x0, [x29, #72]
  423010:	str	x0, [x29, #168]
  423014:	str	xzr, [x29, #72]
  423018:	ldr	x1, [x29, #168]
  42301c:	ldr	x0, [x29, #32]
  423020:	str	x1, [x0, #168]
  423024:	ldr	x0, [x29, #32]
  423028:	ldr	x1, [x29, #96]
  42302c:	str	x1, [x0, #176]
  423030:	ldr	x0, [x29, #80]
  423034:	str	x0, [x29, #176]
  423038:	str	xzr, [x29, #80]
  42303c:	ldr	x1, [x29, #176]
  423040:	ldr	x0, [x29, #32]
  423044:	str	x1, [x0, #184]
  423048:	add	x0, x29, #0xd8
  42304c:	add	x0, x0, #0x58
  423050:	bl	406be0 <timespec_load_nsec@plt>
  423054:	mov	x1, x0
  423058:	ldr	x0, [x29, #32]
  42305c:	str	x1, [x0, #192]
  423060:	mov	w19, #0x0                   	// #0
  423064:	add	x0, x29, #0x58
  423068:	bl	4214f4 <fclosep>
  42306c:	add	x0, x29, #0x50
  423070:	bl	421314 <freep>
  423074:	add	x0, x29, #0x48
  423078:	bl	421314 <freep>
  42307c:	mov	w1, w19
  423080:	adrp	x0, 441000 <wordlist.9471+0x208>
  423084:	ldr	x0, [x0, #4064]
  423088:	ldr	x2, [x29, #344]
  42308c:	ldr	x0, [x0]
  423090:	eor	x0, x2, x0
  423094:	cmp	x0, #0x0
  423098:	b.eq	4230a0 <client_context_read_extra_fields+0x518>  // b.none
  42309c:	bl	4063e0 <__stack_chk_fail@plt>
  4230a0:	mov	w0, w1
  4230a4:	mov	sp, x29
  4230a8:	ldr	x19, [sp, #16]
  4230ac:	ldp	x29, x30, [sp], #352
  4230b0:	ret

00000000004230b4 <client_context_read_log_ratelimit_interval>:
  4230b4:	stp	x29, x30, [sp, #-144]!
  4230b8:	mov	x29, sp
  4230bc:	str	x19, [sp, #16]
  4230c0:	str	x0, [x29, #40]
  4230c4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4230c8:	ldr	x0, [x0, #4064]
  4230cc:	ldr	x1, [x0]
  4230d0:	str	x1, [x29, #136]
  4230d4:	mov	x1, #0x0                   	// #0
  4230d8:	str	xzr, [x29, #64]
  4230dc:	ldr	x0, [x29, #40]
  4230e0:	cmp	x0, #0x0
  4230e4:	cset	w0, eq  // eq = none
  4230e8:	and	w0, w0, #0xff
  4230ec:	and	x0, x0, #0xff
  4230f0:	cmp	x0, #0x0
  4230f4:	b.eq	423120 <client_context_read_log_ratelimit_interval+0x6c>  // b.none
  4230f8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4230fc:	add	x1, x0, #0xd13
  423100:	adrp	x0, 42d000 <__func__.11730+0x328>
  423104:	add	x4, x0, #0x208
  423108:	mov	w3, #0x1d3                 	// #467
  42310c:	mov	x2, x1
  423110:	adrp	x0, 42c000 <__func__.10684+0x8>
  423114:	add	x1, x0, #0xd90
  423118:	mov	w0, #0x0                   	// #0
  42311c:	bl	405fd0 <log_assert_failed_realm@plt>
  423120:	ldr	x0, [x29, #40]
  423124:	ldr	x0, [x0, #96]
  423128:	cmp	x0, #0x0
  42312c:	b.ne	423138 <client_context_read_log_ratelimit_interval+0x84>  // b.any
  423130:	mov	w19, #0x0                   	// #0
  423134:	b	423320 <client_context_read_log_ratelimit_interval+0x26c>
  423138:	adrp	x0, 42c000 <__func__.10684+0x8>
  42313c:	add	x0, x0, #0xf18
  423140:	str	x0, [x29, #120]
  423144:	ldr	x0, [x29, #40]
  423148:	ldr	x0, [x0, #96]
  42314c:	str	x0, [x29, #128]
  423150:	str	xzr, [x29, #80]
  423154:	str	xzr, [x29, #88]
  423158:	b	42318c <client_context_read_log_ratelimit_interval+0xd8>
  42315c:	ldr	x0, [x29, #88]
  423160:	lsl	x0, x0, #3
  423164:	add	x1, x29, #0x78
  423168:	ldr	x0, [x1, x0]
  42316c:	bl	406af0 <strlen@plt>
  423170:	mov	x1, x0
  423174:	ldr	x0, [x29, #80]
  423178:	add	x0, x0, x1
  42317c:	str	x0, [x29, #80]
  423180:	ldr	x0, [x29, #88]
  423184:	add	x0, x0, #0x1
  423188:	str	x0, [x29, #88]
  42318c:	ldr	x0, [x29, #88]
  423190:	cmp	x0, #0x1
  423194:	b.hi	4231b0 <client_context_read_log_ratelimit_interval+0xfc>  // b.pmore
  423198:	ldr	x0, [x29, #88]
  42319c:	lsl	x0, x0, #3
  4231a0:	add	x1, x29, #0x78
  4231a4:	ldr	x0, [x1, x0]
  4231a8:	cmp	x0, #0x0
  4231ac:	b.ne	42315c <client_context_read_log_ratelimit_interval+0xa8>  // b.any
  4231b0:	ldr	x0, [x29, #80]
  4231b4:	add	x0, x0, #0x1
  4231b8:	str	x0, [x29, #96]
  4231bc:	ldr	x1, [x29, #96]
  4231c0:	mov	x0, #0x1                   	// #1
  4231c4:	bl	421338 <size_multiply_overflow>
  4231c8:	and	w0, w0, #0xff
  4231cc:	and	x0, x0, #0xff
  4231d0:	cmp	x0, #0x0
  4231d4:	b.eq	423200 <client_context_read_log_ratelimit_interval+0x14c>  // b.none
  4231d8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4231dc:	add	x1, x0, #0xd13
  4231e0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4231e4:	add	x4, x0, #0x208
  4231e8:	mov	w3, #0x1d8                 	// #472
  4231ec:	mov	x2, x1
  4231f0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4231f4:	add	x1, x0, #0xe70
  4231f8:	mov	w0, #0x0                   	// #0
  4231fc:	bl	405fd0 <log_assert_failed_realm@plt>
  423200:	ldr	x0, [x29, #96]
  423204:	cmp	x0, #0x400, lsl #12
  423208:	cset	w0, hi  // hi = pmore
  42320c:	and	w0, w0, #0xff
  423210:	and	x0, x0, #0xff
  423214:	cmp	x0, #0x0
  423218:	b.eq	423244 <client_context_read_log_ratelimit_interval+0x190>  // b.none
  42321c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423220:	add	x1, x0, #0xd13
  423224:	adrp	x0, 42d000 <__func__.11730+0x328>
  423228:	add	x4, x0, #0x208
  42322c:	mov	w3, #0x1d8                 	// #472
  423230:	mov	x2, x1
  423234:	adrp	x0, 42c000 <__func__.10684+0x8>
  423238:	add	x1, x0, #0xea0
  42323c:	mov	w0, #0x0                   	// #0
  423240:	bl	405fd0 <log_assert_failed_realm@plt>
  423244:	ldr	x0, [x29, #96]
  423248:	add	x0, x0, #0xf
  42324c:	lsr	x0, x0, #4
  423250:	lsl	x0, x0, #4
  423254:	sub	sp, sp, x0
  423258:	mov	x0, sp
  42325c:	add	x0, x0, #0xf
  423260:	lsr	x0, x0, #4
  423264:	lsl	x0, x0, #4
  423268:	str	x0, [x29, #104]
  42326c:	ldr	x0, [x29, #104]
  423270:	str	x0, [x29, #72]
  423274:	str	xzr, [x29, #88]
  423278:	b	4232a8 <client_context_read_log_ratelimit_interval+0x1f4>
  42327c:	ldr	x0, [x29, #88]
  423280:	lsl	x0, x0, #3
  423284:	add	x1, x29, #0x78
  423288:	ldr	x0, [x1, x0]
  42328c:	mov	x1, x0
  423290:	ldr	x0, [x29, #72]
  423294:	bl	405bc0 <stpcpy@plt>
  423298:	str	x0, [x29, #72]
  42329c:	ldr	x0, [x29, #88]
  4232a0:	add	x0, x0, #0x1
  4232a4:	str	x0, [x29, #88]
  4232a8:	ldr	x0, [x29, #88]
  4232ac:	cmp	x0, #0x1
  4232b0:	b.hi	4232cc <client_context_read_log_ratelimit_interval+0x218>  // b.pmore
  4232b4:	ldr	x0, [x29, #88]
  4232b8:	lsl	x0, x0, #3
  4232bc:	add	x1, x29, #0x78
  4232c0:	ldr	x0, [x1, x0]
  4232c4:	cmp	x0, #0x0
  4232c8:	b.ne	42327c <client_context_read_log_ratelimit_interval+0x1c8>  // b.any
  4232cc:	ldr	x0, [x29, #72]
  4232d0:	strb	wzr, [x0]
  4232d4:	ldr	x0, [x29, #104]
  4232d8:	str	x0, [x29, #112]
  4232dc:	add	x0, x29, #0x40
  4232e0:	mov	x1, x0
  4232e4:	ldr	x0, [x29, #112]
  4232e8:	bl	406a30 <readlink_malloc@plt>
  4232ec:	str	w0, [x29, #60]
  4232f0:	ldr	w0, [x29, #60]
  4232f4:	cmp	w0, #0x0
  4232f8:	b.ge	423304 <client_context_read_log_ratelimit_interval+0x250>  // b.tcont
  4232fc:	ldr	w19, [x29, #60]
  423300:	b	423320 <client_context_read_log_ratelimit_interval+0x26c>
  423304:	ldr	x2, [x29, #64]
  423308:	ldr	x0, [x29, #40]
  42330c:	add	x0, x0, #0xc8
  423310:	mov	x1, x0
  423314:	mov	x0, x2
  423318:	bl	4215b8 <safe_atou64>
  42331c:	mov	w19, w0
  423320:	add	x0, x29, #0x40
  423324:	bl	421314 <freep>
  423328:	mov	w1, w19
  42332c:	adrp	x0, 441000 <wordlist.9471+0x208>
  423330:	ldr	x0, [x0, #4064]
  423334:	ldr	x2, [x29, #136]
  423338:	ldr	x0, [x0]
  42333c:	eor	x0, x2, x0
  423340:	cmp	x0, #0x0
  423344:	b.eq	42334c <client_context_read_log_ratelimit_interval+0x298>  // b.none
  423348:	bl	4063e0 <__stack_chk_fail@plt>
  42334c:	mov	w0, w1
  423350:	mov	sp, x29
  423354:	ldr	x19, [sp, #16]
  423358:	ldp	x29, x30, [sp], #144
  42335c:	ret

0000000000423360 <client_context_read_log_ratelimit_burst>:
  423360:	stp	x29, x30, [sp, #-144]!
  423364:	mov	x29, sp
  423368:	str	x19, [sp, #16]
  42336c:	str	x0, [x29, #40]
  423370:	adrp	x0, 441000 <wordlist.9471+0x208>
  423374:	ldr	x0, [x0, #4064]
  423378:	ldr	x1, [x0]
  42337c:	str	x1, [x29, #136]
  423380:	mov	x1, #0x0                   	// #0
  423384:	str	xzr, [x29, #64]
  423388:	ldr	x0, [x29, #40]
  42338c:	cmp	x0, #0x0
  423390:	cset	w0, eq  // eq = none
  423394:	and	w0, w0, #0xff
  423398:	and	x0, x0, #0xff
  42339c:	cmp	x0, #0x0
  4233a0:	b.eq	4233cc <client_context_read_log_ratelimit_burst+0x6c>  // b.none
  4233a4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4233a8:	add	x1, x0, #0xd13
  4233ac:	adrp	x0, 42d000 <__func__.11730+0x328>
  4233b0:	add	x4, x0, #0x238
  4233b4:	mov	w3, #0x1e5                 	// #485
  4233b8:	mov	x2, x1
  4233bc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4233c0:	add	x1, x0, #0xd90
  4233c4:	mov	w0, #0x0                   	// #0
  4233c8:	bl	405fd0 <log_assert_failed_realm@plt>
  4233cc:	ldr	x0, [x29, #40]
  4233d0:	ldr	x0, [x0, #96]
  4233d4:	cmp	x0, #0x0
  4233d8:	b.ne	4233e4 <client_context_read_log_ratelimit_burst+0x84>  // b.any
  4233dc:	mov	w19, #0x0                   	// #0
  4233e0:	b	4235cc <client_context_read_log_ratelimit_burst+0x26c>
  4233e4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4233e8:	add	x0, x0, #0xf48
  4233ec:	str	x0, [x29, #120]
  4233f0:	ldr	x0, [x29, #40]
  4233f4:	ldr	x0, [x0, #96]
  4233f8:	str	x0, [x29, #128]
  4233fc:	str	xzr, [x29, #80]
  423400:	str	xzr, [x29, #88]
  423404:	b	423438 <client_context_read_log_ratelimit_burst+0xd8>
  423408:	ldr	x0, [x29, #88]
  42340c:	lsl	x0, x0, #3
  423410:	add	x1, x29, #0x78
  423414:	ldr	x0, [x1, x0]
  423418:	bl	406af0 <strlen@plt>
  42341c:	mov	x1, x0
  423420:	ldr	x0, [x29, #80]
  423424:	add	x0, x0, x1
  423428:	str	x0, [x29, #80]
  42342c:	ldr	x0, [x29, #88]
  423430:	add	x0, x0, #0x1
  423434:	str	x0, [x29, #88]
  423438:	ldr	x0, [x29, #88]
  42343c:	cmp	x0, #0x1
  423440:	b.hi	42345c <client_context_read_log_ratelimit_burst+0xfc>  // b.pmore
  423444:	ldr	x0, [x29, #88]
  423448:	lsl	x0, x0, #3
  42344c:	add	x1, x29, #0x78
  423450:	ldr	x0, [x1, x0]
  423454:	cmp	x0, #0x0
  423458:	b.ne	423408 <client_context_read_log_ratelimit_burst+0xa8>  // b.any
  42345c:	ldr	x0, [x29, #80]
  423460:	add	x0, x0, #0x1
  423464:	str	x0, [x29, #96]
  423468:	ldr	x1, [x29, #96]
  42346c:	mov	x0, #0x1                   	// #1
  423470:	bl	421338 <size_multiply_overflow>
  423474:	and	w0, w0, #0xff
  423478:	and	x0, x0, #0xff
  42347c:	cmp	x0, #0x0
  423480:	b.eq	4234ac <client_context_read_log_ratelimit_burst+0x14c>  // b.none
  423484:	adrp	x0, 42c000 <__func__.10684+0x8>
  423488:	add	x1, x0, #0xd13
  42348c:	adrp	x0, 42d000 <__func__.11730+0x328>
  423490:	add	x4, x0, #0x238
  423494:	mov	w3, #0x1ea                 	// #490
  423498:	mov	x2, x1
  42349c:	adrp	x0, 42c000 <__func__.10684+0x8>
  4234a0:	add	x1, x0, #0xe70
  4234a4:	mov	w0, #0x0                   	// #0
  4234a8:	bl	405fd0 <log_assert_failed_realm@plt>
  4234ac:	ldr	x0, [x29, #96]
  4234b0:	cmp	x0, #0x400, lsl #12
  4234b4:	cset	w0, hi  // hi = pmore
  4234b8:	and	w0, w0, #0xff
  4234bc:	and	x0, x0, #0xff
  4234c0:	cmp	x0, #0x0
  4234c4:	b.eq	4234f0 <client_context_read_log_ratelimit_burst+0x190>  // b.none
  4234c8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4234cc:	add	x1, x0, #0xd13
  4234d0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4234d4:	add	x4, x0, #0x238
  4234d8:	mov	w3, #0x1ea                 	// #490
  4234dc:	mov	x2, x1
  4234e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4234e4:	add	x1, x0, #0xea0
  4234e8:	mov	w0, #0x0                   	// #0
  4234ec:	bl	405fd0 <log_assert_failed_realm@plt>
  4234f0:	ldr	x0, [x29, #96]
  4234f4:	add	x0, x0, #0xf
  4234f8:	lsr	x0, x0, #4
  4234fc:	lsl	x0, x0, #4
  423500:	sub	sp, sp, x0
  423504:	mov	x0, sp
  423508:	add	x0, x0, #0xf
  42350c:	lsr	x0, x0, #4
  423510:	lsl	x0, x0, #4
  423514:	str	x0, [x29, #104]
  423518:	ldr	x0, [x29, #104]
  42351c:	str	x0, [x29, #72]
  423520:	str	xzr, [x29, #88]
  423524:	b	423554 <client_context_read_log_ratelimit_burst+0x1f4>
  423528:	ldr	x0, [x29, #88]
  42352c:	lsl	x0, x0, #3
  423530:	add	x1, x29, #0x78
  423534:	ldr	x0, [x1, x0]
  423538:	mov	x1, x0
  42353c:	ldr	x0, [x29, #72]
  423540:	bl	405bc0 <stpcpy@plt>
  423544:	str	x0, [x29, #72]
  423548:	ldr	x0, [x29, #88]
  42354c:	add	x0, x0, #0x1
  423550:	str	x0, [x29, #88]
  423554:	ldr	x0, [x29, #88]
  423558:	cmp	x0, #0x1
  42355c:	b.hi	423578 <client_context_read_log_ratelimit_burst+0x218>  // b.pmore
  423560:	ldr	x0, [x29, #88]
  423564:	lsl	x0, x0, #3
  423568:	add	x1, x29, #0x78
  42356c:	ldr	x0, [x1, x0]
  423570:	cmp	x0, #0x0
  423574:	b.ne	423528 <client_context_read_log_ratelimit_burst+0x1c8>  // b.any
  423578:	ldr	x0, [x29, #72]
  42357c:	strb	wzr, [x0]
  423580:	ldr	x0, [x29, #104]
  423584:	str	x0, [x29, #112]
  423588:	add	x0, x29, #0x40
  42358c:	mov	x1, x0
  423590:	ldr	x0, [x29, #112]
  423594:	bl	406a30 <readlink_malloc@plt>
  423598:	str	w0, [x29, #60]
  42359c:	ldr	w0, [x29, #60]
  4235a0:	cmp	w0, #0x0
  4235a4:	b.ge	4235b0 <client_context_read_log_ratelimit_burst+0x250>  // b.tcont
  4235a8:	ldr	w19, [x29, #60]
  4235ac:	b	4235cc <client_context_read_log_ratelimit_burst+0x26c>
  4235b0:	ldr	x2, [x29, #64]
  4235b4:	ldr	x0, [x29, #40]
  4235b8:	add	x0, x0, #0xd0
  4235bc:	mov	x1, x0
  4235c0:	mov	x0, x2
  4235c4:	bl	421590 <safe_atou>
  4235c8:	mov	w19, w0
  4235cc:	add	x0, x29, #0x40
  4235d0:	bl	421314 <freep>
  4235d4:	mov	w1, w19
  4235d8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4235dc:	ldr	x0, [x0, #4064]
  4235e0:	ldr	x2, [x29, #136]
  4235e4:	ldr	x0, [x0]
  4235e8:	eor	x0, x2, x0
  4235ec:	cmp	x0, #0x0
  4235f0:	b.eq	4235f8 <client_context_read_log_ratelimit_burst+0x298>  // b.none
  4235f4:	bl	4063e0 <__stack_chk_fail@plt>
  4235f8:	mov	w0, w1
  4235fc:	mov	sp, x29
  423600:	ldr	x19, [sp, #16]
  423604:	ldp	x29, x30, [sp], #144
  423608:	ret

000000000042360c <client_context_really_refresh>:
  42360c:	stp	x29, x30, [sp, #-80]!
  423610:	mov	x29, sp
  423614:	str	x0, [sp, #72]
  423618:	str	x1, [sp, #64]
  42361c:	str	x2, [sp, #56]
  423620:	str	x3, [sp, #48]
  423624:	str	x4, [sp, #40]
  423628:	str	x5, [sp, #32]
  42362c:	str	x6, [sp, #24]
  423630:	ldr	x0, [sp, #72]
  423634:	cmp	x0, #0x0
  423638:	cset	w0, eq  // eq = none
  42363c:	and	w0, w0, #0xff
  423640:	and	x0, x0, #0xff
  423644:	cmp	x0, #0x0
  423648:	b.eq	423674 <client_context_really_refresh+0x68>  // b.none
  42364c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423650:	add	x1, x0, #0xd13
  423654:	adrp	x0, 42d000 <__func__.11730+0x328>
  423658:	add	x4, x0, #0x260
  42365c:	mov	w3, #0x1fa                 	// #506
  423660:	mov	x2, x1
  423664:	adrp	x0, 42c000 <__func__.10684+0x8>
  423668:	add	x1, x0, #0xd68
  42366c:	mov	w0, #0x0                   	// #0
  423670:	bl	405fd0 <log_assert_failed_realm@plt>
  423674:	ldr	x0, [sp, #64]
  423678:	cmp	x0, #0x0
  42367c:	cset	w0, eq  // eq = none
  423680:	and	w0, w0, #0xff
  423684:	and	x0, x0, #0xff
  423688:	cmp	x0, #0x0
  42368c:	b.eq	4236b8 <client_context_really_refresh+0xac>  // b.none
  423690:	adrp	x0, 42c000 <__func__.10684+0x8>
  423694:	add	x1, x0, #0xd13
  423698:	adrp	x0, 42d000 <__func__.11730+0x328>
  42369c:	add	x4, x0, #0x260
  4236a0:	mov	w3, #0x1fb                 	// #507
  4236a4:	mov	x2, x1
  4236a8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4236ac:	add	x1, x0, #0xd90
  4236b0:	mov	w0, #0x0                   	// #0
  4236b4:	bl	405fd0 <log_assert_failed_realm@plt>
  4236b8:	ldr	x0, [sp, #64]
  4236bc:	ldr	w0, [x0, #20]
  4236c0:	bl	4215f0 <pid_is_valid>
  4236c4:	and	w0, w0, #0xff
  4236c8:	eor	w0, w0, #0x1
  4236cc:	and	w0, w0, #0xff
  4236d0:	and	x0, x0, #0xff
  4236d4:	cmp	x0, #0x0
  4236d8:	b.eq	423704 <client_context_really_refresh+0xf8>  // b.none
  4236dc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4236e0:	add	x1, x0, #0xd13
  4236e4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4236e8:	add	x4, x0, #0x260
  4236ec:	mov	w3, #0x1fc                 	// #508
  4236f0:	mov	x2, x1
  4236f4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4236f8:	add	x1, x0, #0xe18
  4236fc:	mov	w0, #0x0                   	// #0
  423700:	bl	405fd0 <log_assert_failed_realm@plt>
  423704:	ldr	x0, [sp, #24]
  423708:	cmn	x0, #0x1
  42370c:	b.ne	42371c <client_context_really_refresh+0x110>  // b.any
  423710:	mov	w0, #0x1                   	// #1
  423714:	bl	406660 <now@plt>
  423718:	str	x0, [sp, #24]
  42371c:	ldr	x1, [sp, #56]
  423720:	ldr	x0, [sp, #64]
  423724:	bl	421f00 <client_context_read_uid_gid>
  423728:	ldr	x0, [sp, #64]
  42372c:	bl	422058 <client_context_read_basic>
  423730:	ldr	x2, [sp, #40]
  423734:	ldr	x1, [sp, #48]
  423738:	ldr	x0, [sp, #64]
  42373c:	bl	422210 <client_context_read_label>
  423740:	ldr	x0, [sp, #64]
  423744:	ldr	w2, [x0, #20]
  423748:	ldr	x0, [sp, #64]
  42374c:	add	x0, x0, #0x40
  423750:	mov	x1, x0
  423754:	mov	w0, w2
  423758:	bl	406840 <audit_session_from_pid@plt>
  42375c:	ldr	x0, [sp, #64]
  423760:	ldr	w2, [x0, #20]
  423764:	ldr	x0, [sp, #64]
  423768:	add	x0, x0, #0x44
  42376c:	mov	x1, x0
  423770:	mov	w0, w2
  423774:	bl	4065c0 <audit_loginuid_from_pid@plt>
  423778:	ldr	x2, [sp, #32]
  42377c:	ldr	x1, [sp, #64]
  423780:	ldr	x0, [sp, #72]
  423784:	bl	42237c <client_context_read_cgroup>
  423788:	ldr	x1, [sp, #64]
  42378c:	ldr	x0, [sp, #72]
  423790:	bl	422614 <client_context_read_invocation_id>
  423794:	ldr	x1, [sp, #64]
  423798:	ldr	x0, [sp, #72]
  42379c:	bl	422908 <client_context_read_log_level_max>
  4237a0:	ldr	x1, [sp, #64]
  4237a4:	ldr	x0, [sp, #72]
  4237a8:	bl	422b88 <client_context_read_extra_fields>
  4237ac:	ldr	x0, [sp, #64]
  4237b0:	bl	4230b4 <client_context_read_log_ratelimit_interval>
  4237b4:	ldr	x0, [sp, #64]
  4237b8:	bl	423360 <client_context_read_log_ratelimit_burst>
  4237bc:	ldr	x0, [sp, #64]
  4237c0:	ldr	x1, [sp, #24]
  4237c4:	str	x1, [x0, #8]
  4237c8:	ldr	x0, [sp, #64]
  4237cc:	ldrb	w0, [x0, #16]
  4237d0:	cmp	w0, #0x0
  4237d4:	b.eq	42387c <client_context_really_refresh+0x270>  // b.none
  4237d8:	ldr	x0, [sp, #64]
  4237dc:	ldr	w0, [x0]
  4237e0:	cmp	w0, #0x0
  4237e4:	cset	w0, ne  // ne = any
  4237e8:	and	w0, w0, #0xff
  4237ec:	and	x0, x0, #0xff
  4237f0:	cmp	x0, #0x0
  4237f4:	b.eq	423820 <client_context_really_refresh+0x214>  // b.none
  4237f8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4237fc:	add	x1, x0, #0xd13
  423800:	adrp	x0, 42d000 <__func__.11730+0x328>
  423804:	add	x4, x0, #0x260
  423808:	mov	w3, #0x212                 	// #530
  42380c:	mov	x2, x1
  423810:	adrp	x0, 42c000 <__func__.10684+0x8>
  423814:	add	x1, x0, #0xf78
  423818:	mov	w0, #0x0                   	// #0
  42381c:	bl	405fd0 <log_assert_failed_realm@plt>
  423820:	ldr	x0, [sp, #72]
  423824:	ldr	x3, [x0, #728]
  423828:	ldr	x0, [sp, #64]
  42382c:	add	x0, x0, #0x4
  423830:	mov	x2, x0
  423834:	ldr	x1, [sp, #64]
  423838:	mov	x0, x3
  42383c:	bl	405d70 <prioq_reshuffle@plt>
  423840:	lsr	w0, w0, #31
  423844:	and	w0, w0, #0xff
  423848:	and	x0, x0, #0xff
  42384c:	cmp	x0, #0x0
  423850:	b.eq	42387c <client_context_really_refresh+0x270>  // b.none
  423854:	adrp	x0, 42c000 <__func__.10684+0x8>
  423858:	add	x1, x0, #0xd13
  42385c:	adrp	x0, 42d000 <__func__.11730+0x328>
  423860:	add	x4, x0, #0x260
  423864:	mov	w3, #0x213                 	// #531
  423868:	mov	x2, x1
  42386c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423870:	add	x1, x0, #0xf88
  423874:	mov	w0, #0x0                   	// #0
  423878:	bl	405fd0 <log_assert_failed_realm@plt>
  42387c:	nop
  423880:	ldp	x29, x30, [sp], #80
  423884:	ret

0000000000423888 <client_context_maybe_refresh>:
  423888:	stp	x29, x30, [sp, #-80]!
  42388c:	mov	x29, sp
  423890:	str	x0, [sp, #72]
  423894:	str	x1, [sp, #64]
  423898:	str	x2, [sp, #56]
  42389c:	str	x3, [sp, #48]
  4238a0:	str	x4, [sp, #40]
  4238a4:	str	x5, [sp, #32]
  4238a8:	str	x6, [sp, #24]
  4238ac:	ldr	x0, [sp, #72]
  4238b0:	cmp	x0, #0x0
  4238b4:	cset	w0, eq  // eq = none
  4238b8:	and	w0, w0, #0xff
  4238bc:	and	x0, x0, #0xff
  4238c0:	cmp	x0, #0x0
  4238c4:	b.eq	4238f0 <client_context_maybe_refresh+0x68>  // b.none
  4238c8:	adrp	x0, 42c000 <__func__.10684+0x8>
  4238cc:	add	x1, x0, #0xd13
  4238d0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4238d4:	add	x4, x0, #0x280
  4238d8:	mov	w3, #0x21f                 	// #543
  4238dc:	mov	x2, x1
  4238e0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4238e4:	add	x1, x0, #0xd68
  4238e8:	mov	w0, #0x0                   	// #0
  4238ec:	bl	405fd0 <log_assert_failed_realm@plt>
  4238f0:	ldr	x0, [sp, #64]
  4238f4:	cmp	x0, #0x0
  4238f8:	cset	w0, eq  // eq = none
  4238fc:	and	w0, w0, #0xff
  423900:	and	x0, x0, #0xff
  423904:	cmp	x0, #0x0
  423908:	b.eq	423934 <client_context_maybe_refresh+0xac>  // b.none
  42390c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423910:	add	x1, x0, #0xd13
  423914:	adrp	x0, 42d000 <__func__.11730+0x328>
  423918:	add	x4, x0, #0x280
  42391c:	mov	w3, #0x220                 	// #544
  423920:	mov	x2, x1
  423924:	adrp	x0, 42c000 <__func__.10684+0x8>
  423928:	add	x1, x0, #0xd90
  42392c:	mov	w0, #0x0                   	// #0
  423930:	bl	405fd0 <log_assert_failed_realm@plt>
  423934:	ldr	x0, [sp, #24]
  423938:	cmn	x0, #0x1
  42393c:	b.ne	42394c <client_context_maybe_refresh+0xc4>  // b.any
  423940:	mov	w0, #0x1                   	// #1
  423944:	bl	406660 <now@plt>
  423948:	str	x0, [sp, #24]
  42394c:	ldr	x0, [sp, #64]
  423950:	ldr	x0, [x0, #8]
  423954:	cmn	x0, #0x1
  423958:	b.eq	423a78 <client_context_maybe_refresh+0x1f0>  // b.none
  42395c:	ldr	x0, [sp, #64]
  423960:	ldr	w0, [x0]
  423964:	cmp	w0, #0x0
  423968:	b.ne	42399c <client_context_maybe_refresh+0x114>  // b.any
  42396c:	ldr	x0, [sp, #64]
  423970:	ldr	x1, [x0, #8]
  423974:	mov	x0, #0x4b40                	// #19264
  423978:	movk	x0, #0x4c, lsl #16
  42397c:	add	x0, x1, x0
  423980:	ldr	x1, [sp, #24]
  423984:	cmp	x1, x0
  423988:	b.ls	42399c <client_context_maybe_refresh+0x114>  // b.plast
  42398c:	ldr	x1, [sp, #64]
  423990:	ldr	x0, [sp, #72]
  423994:	bl	421af0 <client_context_reset>
  423998:	b	423a9c <client_context_maybe_refresh+0x214>
  42399c:	ldr	x0, [sp, #64]
  4239a0:	ldr	x1, [x0, #8]
  4239a4:	mov	x0, #0x4240                	// #16960
  4239a8:	movk	x0, #0xf, lsl #16
  4239ac:	add	x0, x1, x0
  4239b0:	ldr	x1, [sp, #24]
  4239b4:	cmp	x1, x0
  4239b8:	b.hi	423a80 <client_context_maybe_refresh+0x1f8>  // b.pmore
  4239bc:	ldr	x0, [sp, #56]
  4239c0:	cmp	x0, #0x0
  4239c4:	b.eq	4239f8 <client_context_maybe_refresh+0x170>  // b.none
  4239c8:	ldr	x0, [sp, #56]
  4239cc:	ldr	w0, [x0, #4]
  4239d0:	bl	4061c0 <uid_is_valid@plt>
  4239d4:	and	w0, w0, #0xff
  4239d8:	cmp	w0, #0x0
  4239dc:	b.eq	4239f8 <client_context_maybe_refresh+0x170>  // b.none
  4239e0:	ldr	x0, [sp, #64]
  4239e4:	ldr	w1, [x0, #24]
  4239e8:	ldr	x0, [sp, #56]
  4239ec:	ldr	w0, [x0, #4]
  4239f0:	cmp	w1, w0
  4239f4:	b.ne	423a88 <client_context_maybe_refresh+0x200>  // b.any
  4239f8:	ldr	x0, [sp, #56]
  4239fc:	cmp	x0, #0x0
  423a00:	b.eq	423a34 <client_context_maybe_refresh+0x1ac>  // b.none
  423a04:	ldr	x0, [sp, #56]
  423a08:	ldr	w0, [x0, #8]
  423a0c:	bl	421638 <gid_is_valid>
  423a10:	and	w0, w0, #0xff
  423a14:	cmp	w0, #0x0
  423a18:	b.eq	423a34 <client_context_maybe_refresh+0x1ac>  // b.none
  423a1c:	ldr	x0, [sp, #64]
  423a20:	ldr	w1, [x0, #28]
  423a24:	ldr	x0, [sp, #56]
  423a28:	ldr	w0, [x0, #8]
  423a2c:	cmp	w1, w0
  423a30:	b.ne	423a90 <client_context_maybe_refresh+0x208>  // b.any
  423a34:	ldr	x0, [sp, #40]
  423a38:	cmp	x0, #0x0
  423a3c:	b.eq	423ac0 <client_context_maybe_refresh+0x238>  // b.none
  423a40:	ldr	x0, [sp, #64]
  423a44:	ldr	x0, [x0, #152]
  423a48:	ldr	x1, [sp, #40]
  423a4c:	cmp	x1, x0
  423a50:	b.ne	423a98 <client_context_maybe_refresh+0x210>  // b.any
  423a54:	ldr	x0, [sp, #64]
  423a58:	ldr	x0, [x0, #144]
  423a5c:	ldr	x2, [sp, #40]
  423a60:	mov	x1, x0
  423a64:	ldr	x0, [sp, #48]
  423a68:	bl	4064f0 <memcmp@plt>
  423a6c:	cmp	w0, #0x0
  423a70:	b.eq	423ac0 <client_context_maybe_refresh+0x238>  // b.none
  423a74:	b	423a98 <client_context_maybe_refresh+0x210>
  423a78:	nop
  423a7c:	b	423a9c <client_context_maybe_refresh+0x214>
  423a80:	nop
  423a84:	b	423a9c <client_context_maybe_refresh+0x214>
  423a88:	nop
  423a8c:	b	423a9c <client_context_maybe_refresh+0x214>
  423a90:	nop
  423a94:	b	423a9c <client_context_maybe_refresh+0x214>
  423a98:	nop
  423a9c:	ldr	x6, [sp, #24]
  423aa0:	ldr	x5, [sp, #32]
  423aa4:	ldr	x4, [sp, #40]
  423aa8:	ldr	x3, [sp, #48]
  423aac:	ldr	x2, [sp, #56]
  423ab0:	ldr	x1, [sp, #64]
  423ab4:	ldr	x0, [sp, #72]
  423ab8:	bl	42360c <client_context_really_refresh>
  423abc:	b	423ac4 <client_context_maybe_refresh+0x23c>
  423ac0:	nop
  423ac4:	ldp	x29, x30, [sp], #80
  423ac8:	ret

0000000000423acc <client_context_try_shrink_to>:
  423acc:	stp	x29, x30, [sp, #-64]!
  423ad0:	mov	x29, sp
  423ad4:	str	x0, [sp, #24]
  423ad8:	str	x1, [sp, #16]
  423adc:	ldr	x0, [sp, #24]
  423ae0:	cmp	x0, #0x0
  423ae4:	cset	w0, eq  // eq = none
  423ae8:	and	w0, w0, #0xff
  423aec:	and	x0, x0, #0xff
  423af0:	cmp	x0, #0x0
  423af4:	b.eq	423b20 <client_context_try_shrink_to+0x54>  // b.none
  423af8:	adrp	x0, 42c000 <__func__.10684+0x8>
  423afc:	add	x1, x0, #0xd13
  423b00:	adrp	x0, 42d000 <__func__.11730+0x328>
  423b04:	add	x4, x0, #0x2a0
  423b08:	mov	w3, #0x248                 	// #584
  423b0c:	mov	x2, x1
  423b10:	adrp	x0, 42c000 <__func__.10684+0x8>
  423b14:	add	x1, x0, #0xd68
  423b18:	mov	w0, #0x0                   	// #0
  423b1c:	bl	405fd0 <log_assert_failed_realm@plt>
  423b20:	mov	w0, #0x1                   	// #1
  423b24:	bl	406660 <now@plt>
  423b28:	str	x0, [sp, #48]
  423b2c:	ldr	x0, [sp, #24]
  423b30:	ldr	x1, [x0, #736]
  423b34:	mov	x0, #0x4b40                	// #19264
  423b38:	movk	x0, #0x4c, lsl #16
  423b3c:	add	x0, x1, x0
  423b40:	ldr	x1, [sp, #48]
  423b44:	cmp	x1, x0
  423b48:	b.ls	423ce8 <client_context_try_shrink_to+0x21c>  // b.plast
  423b4c:	ldr	x0, [sp, #24]
  423b50:	ldr	x0, [x0, #728]
  423b54:	bl	406410 <prioq_size@plt>
  423b58:	str	w0, [sp, #44]
  423b5c:	str	wzr, [sp, #36]
  423b60:	str	wzr, [sp, #40]
  423b64:	b	423c0c <client_context_try_shrink_to+0x140>
  423b68:	ldr	x0, [sp, #24]
  423b6c:	ldr	x0, [x0, #728]
  423b70:	ldr	w1, [sp, #36]
  423b74:	bl	405b00 <prioq_peek_by_index@plt>
  423b78:	str	x0, [sp, #56]
  423b7c:	ldr	x0, [sp, #56]
  423b80:	ldr	w0, [x0]
  423b84:	cmp	w0, #0x0
  423b88:	cset	w0, ne  // ne = any
  423b8c:	and	w0, w0, #0xff
  423b90:	and	x0, x0, #0xff
  423b94:	cmp	x0, #0x0
  423b98:	b.eq	423bc4 <client_context_try_shrink_to+0xf8>  // b.none
  423b9c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423ba0:	add	x1, x0, #0xd13
  423ba4:	adrp	x0, 42d000 <__func__.11730+0x328>
  423ba8:	add	x4, x0, #0x2a0
  423bac:	mov	w3, #0x256                 	// #598
  423bb0:	mov	x2, x1
  423bb4:	adrp	x0, 42c000 <__func__.10684+0x8>
  423bb8:	add	x1, x0, #0xf78
  423bbc:	mov	w0, #0x0                   	// #0
  423bc0:	bl	405fd0 <log_assert_failed_realm@plt>
  423bc4:	ldr	x0, [sp, #56]
  423bc8:	ldr	w0, [x0, #20]
  423bcc:	bl	4062c0 <pid_is_unwaited@plt>
  423bd0:	and	w0, w0, #0xff
  423bd4:	eor	w0, w0, #0x1
  423bd8:	and	w0, w0, #0xff
  423bdc:	cmp	w0, #0x0
  423be0:	b.eq	423bf4 <client_context_try_shrink_to+0x128>  // b.none
  423be4:	ldr	x1, [sp, #56]
  423be8:	ldr	x0, [sp, #24]
  423bec:	bl	421da0 <client_context_free>
  423bf0:	b	423c00 <client_context_try_shrink_to+0x134>
  423bf4:	ldr	w0, [sp, #36]
  423bf8:	add	w0, w0, #0x1
  423bfc:	str	w0, [sp, #36]
  423c00:	ldr	w0, [sp, #40]
  423c04:	add	w0, w0, #0x1
  423c08:	str	w0, [sp, #40]
  423c0c:	ldr	w1, [sp, #40]
  423c10:	ldr	w0, [sp, #44]
  423c14:	cmp	w1, w0
  423c18:	b.cc	423b68 <client_context_try_shrink_to+0x9c>  // b.lo, b.ul, b.last
  423c1c:	ldr	x0, [sp, #24]
  423c20:	ldr	x1, [sp, #48]
  423c24:	str	x1, [x0, #736]
  423c28:	b	423ce8 <client_context_try_shrink_to+0x21c>
  423c2c:	ldr	x0, [sp, #24]
  423c30:	ldr	x0, [x0, #728]
  423c34:	bl	406b30 <prioq_pop@plt>
  423c38:	str	x0, [sp, #56]
  423c3c:	ldr	x0, [sp, #56]
  423c40:	cmp	x0, #0x0
  423c44:	b.eq	423d08 <client_context_try_shrink_to+0x23c>  // b.none
  423c48:	ldr	x0, [sp, #56]
  423c4c:	ldrb	w0, [x0, #16]
  423c50:	eor	w0, w0, #0x1
  423c54:	and	w0, w0, #0xff
  423c58:	and	x0, x0, #0xff
  423c5c:	cmp	x0, #0x0
  423c60:	b.eq	423c8c <client_context_try_shrink_to+0x1c0>  // b.none
  423c64:	adrp	x0, 42c000 <__func__.10684+0x8>
  423c68:	add	x1, x0, #0xd13
  423c6c:	adrp	x0, 42d000 <__func__.11730+0x328>
  423c70:	add	x4, x0, #0x2a0
  423c74:	mov	w3, #0x26a                 	// #618
  423c78:	mov	x2, x1
  423c7c:	adrp	x0, 42c000 <__func__.10684+0x8>
  423c80:	add	x1, x0, #0xfc8
  423c84:	mov	w0, #0x0                   	// #0
  423c88:	bl	405fd0 <log_assert_failed_realm@plt>
  423c8c:	ldr	x0, [sp, #56]
  423c90:	ldr	w0, [x0]
  423c94:	cmp	w0, #0x0
  423c98:	cset	w0, ne  // ne = any
  423c9c:	and	w0, w0, #0xff
  423ca0:	and	x0, x0, #0xff
  423ca4:	cmp	x0, #0x0
  423ca8:	b.eq	423cd4 <client_context_try_shrink_to+0x208>  // b.none
  423cac:	adrp	x0, 42c000 <__func__.10684+0x8>
  423cb0:	add	x1, x0, #0xd13
  423cb4:	adrp	x0, 42d000 <__func__.11730+0x328>
  423cb8:	add	x4, x0, #0x2a0
  423cbc:	mov	w3, #0x26b                 	// #619
  423cc0:	mov	x2, x1
  423cc4:	adrp	x0, 42c000 <__func__.10684+0x8>
  423cc8:	add	x1, x0, #0xf78
  423ccc:	mov	w0, #0x0                   	// #0
  423cd0:	bl	405fd0 <log_assert_failed_realm@plt>
  423cd4:	ldr	x0, [sp, #56]
  423cd8:	strb	wzr, [x0, #16]
  423cdc:	ldr	x1, [sp, #56]
  423ce0:	ldr	x0, [sp, #24]
  423ce4:	bl	421da0 <client_context_free>
  423ce8:	ldr	x0, [sp, #24]
  423cec:	ldr	x0, [x0, #720]
  423cf0:	bl	421474 <hashmap_size>
  423cf4:	mov	w0, w0
  423cf8:	ldr	x1, [sp, #16]
  423cfc:	cmp	x1, x0
  423d00:	b.cc	423c2c <client_context_try_shrink_to+0x160>  // b.lo, b.ul, b.last
  423d04:	b	423d0c <client_context_try_shrink_to+0x240>
  423d08:	nop
  423d0c:	nop
  423d10:	ldp	x29, x30, [sp], #64
  423d14:	ret

0000000000423d18 <client_context_flush_all>:
  423d18:	stp	x29, x30, [sp, #-32]!
  423d1c:	mov	x29, sp
  423d20:	str	x0, [sp, #24]
  423d24:	ldr	x0, [sp, #24]
  423d28:	cmp	x0, #0x0
  423d2c:	cset	w0, eq  // eq = none
  423d30:	and	w0, w0, #0xff
  423d34:	and	x0, x0, #0xff
  423d38:	cmp	x0, #0x0
  423d3c:	b.eq	423d68 <client_context_flush_all+0x50>  // b.none
  423d40:	adrp	x0, 42c000 <__func__.10684+0x8>
  423d44:	add	x1, x0, #0xd13
  423d48:	adrp	x0, 42d000 <__func__.11730+0x328>
  423d4c:	add	x4, x0, #0x2c0
  423d50:	mov	w3, #0x274                 	// #628
  423d54:	mov	x2, x1
  423d58:	adrp	x0, 42c000 <__func__.10684+0x8>
  423d5c:	add	x1, x0, #0xd68
  423d60:	mov	w0, #0x0                   	// #0
  423d64:	bl	405fd0 <log_assert_failed_realm@plt>
  423d68:	ldr	x0, [sp, #24]
  423d6c:	ldr	x0, [x0, #744]
  423d70:	mov	x1, x0
  423d74:	ldr	x0, [sp, #24]
  423d78:	bl	42426c <client_context_release>
  423d7c:	mov	x1, x0
  423d80:	ldr	x0, [sp, #24]
  423d84:	str	x1, [x0, #744]
  423d88:	ldr	x0, [sp, #24]
  423d8c:	ldr	x0, [x0, #752]
  423d90:	mov	x1, x0
  423d94:	ldr	x0, [sp, #24]
  423d98:	bl	42426c <client_context_release>
  423d9c:	mov	x1, x0
  423da0:	ldr	x0, [sp, #24]
  423da4:	str	x1, [x0, #752]
  423da8:	mov	x1, #0x0                   	// #0
  423dac:	ldr	x0, [sp, #24]
  423db0:	bl	423acc <client_context_try_shrink_to>
  423db4:	ldr	x0, [sp, #24]
  423db8:	ldr	x0, [x0, #728]
  423dbc:	bl	406410 <prioq_size@plt>
  423dc0:	cmp	w0, #0x0
  423dc4:	cset	w0, ne  // ne = any
  423dc8:	and	w0, w0, #0xff
  423dcc:	and	x0, x0, #0xff
  423dd0:	cmp	x0, #0x0
  423dd4:	b.eq	423e00 <client_context_flush_all+0xe8>  // b.none
  423dd8:	adrp	x0, 42c000 <__func__.10684+0x8>
  423ddc:	add	x1, x0, #0xd13
  423de0:	adrp	x0, 42d000 <__func__.11730+0x328>
  423de4:	add	x4, x0, #0x2c0
  423de8:	mov	w3, #0x27d                 	// #637
  423dec:	mov	x2, x1
  423df0:	adrp	x0, 42c000 <__func__.10684+0x8>
  423df4:	add	x1, x0, #0xfd8
  423df8:	mov	w0, #0x0                   	// #0
  423dfc:	bl	405fd0 <log_assert_failed_realm@plt>
  423e00:	ldr	x0, [sp, #24]
  423e04:	ldr	x0, [x0, #720]
  423e08:	bl	421474 <hashmap_size>
  423e0c:	cmp	w0, #0x0
  423e10:	cset	w0, ne  // ne = any
  423e14:	and	w0, w0, #0xff
  423e18:	and	x0, x0, #0xff
  423e1c:	cmp	x0, #0x0
  423e20:	b.eq	423e4c <client_context_flush_all+0x134>  // b.none
  423e24:	adrp	x0, 42c000 <__func__.10684+0x8>
  423e28:	add	x1, x0, #0xd13
  423e2c:	adrp	x0, 42d000 <__func__.11730+0x328>
  423e30:	add	x4, x0, #0x2c0
  423e34:	mov	w3, #0x27e                 	// #638
  423e38:	mov	x2, x1
  423e3c:	adrp	x0, 42d000 <__func__.11730+0x328>
  423e40:	add	x1, x0, #0x0
  423e44:	mov	w0, #0x0                   	// #0
  423e48:	bl	405fd0 <log_assert_failed_realm@plt>
  423e4c:	ldr	x0, [sp, #24]
  423e50:	ldr	x0, [x0, #728]
  423e54:	bl	4068f0 <prioq_free@plt>
  423e58:	mov	x1, x0
  423e5c:	ldr	x0, [sp, #24]
  423e60:	str	x1, [x0, #728]
  423e64:	ldr	x0, [sp, #24]
  423e68:	ldr	x0, [x0, #720]
  423e6c:	bl	421408 <hashmap_free>
  423e70:	mov	x1, x0
  423e74:	ldr	x0, [sp, #24]
  423e78:	str	x1, [x0, #720]
  423e7c:	nop
  423e80:	ldp	x29, x30, [sp], #32
  423e84:	ret

0000000000423e88 <client_context_get_internal>:
  423e88:	stp	x29, x30, [sp, #-128]!
  423e8c:	mov	x29, sp
  423e90:	str	x19, [sp, #16]
  423e94:	str	x0, [sp, #88]
  423e98:	str	w1, [sp, #84]
  423e9c:	str	x2, [sp, #72]
  423ea0:	str	x3, [sp, #64]
  423ea4:	str	x4, [sp, #56]
  423ea8:	str	x5, [sp, #48]
  423eac:	strb	w6, [sp, #83]
  423eb0:	str	x7, [sp, #40]
  423eb4:	adrp	x0, 441000 <wordlist.9471+0x208>
  423eb8:	ldr	x0, [x0, #4064]
  423ebc:	ldr	x1, [x0]
  423ec0:	str	x1, [sp, #120]
  423ec4:	mov	x1, #0x0                   	// #0
  423ec8:	ldr	x0, [sp, #88]
  423ecc:	cmp	x0, #0x0
  423ed0:	cset	w0, eq  // eq = none
  423ed4:	and	w0, w0, #0xff
  423ed8:	and	x0, x0, #0xff
  423edc:	cmp	x0, #0x0
  423ee0:	b.eq	423f0c <client_context_get_internal+0x84>  // b.none
  423ee4:	adrp	x0, 42c000 <__func__.10684+0x8>
  423ee8:	add	x1, x0, #0xd13
  423eec:	adrp	x0, 42d000 <__func__.11730+0x328>
  423ef0:	add	x4, x0, #0x2e0
  423ef4:	mov	w3, #0x290                 	// #656
  423ef8:	mov	x2, x1
  423efc:	adrp	x0, 42c000 <__func__.10684+0x8>
  423f00:	add	x1, x0, #0xd68
  423f04:	mov	w0, #0x0                   	// #0
  423f08:	bl	405fd0 <log_assert_failed_realm@plt>
  423f0c:	ldr	x0, [sp, #40]
  423f10:	cmp	x0, #0x0
  423f14:	cset	w0, eq  // eq = none
  423f18:	and	w0, w0, #0xff
  423f1c:	and	x0, x0, #0xff
  423f20:	cmp	x0, #0x0
  423f24:	b.eq	423f50 <client_context_get_internal+0xc8>  // b.none
  423f28:	adrp	x0, 42c000 <__func__.10684+0x8>
  423f2c:	add	x1, x0, #0xd13
  423f30:	adrp	x0, 42d000 <__func__.11730+0x328>
  423f34:	add	x4, x0, #0x2e0
  423f38:	mov	w3, #0x291                 	// #657
  423f3c:	mov	x2, x1
  423f40:	adrp	x0, 42c000 <__func__.10684+0x8>
  423f44:	add	x1, x0, #0xd88
  423f48:	mov	w0, #0x0                   	// #0
  423f4c:	bl	405fd0 <log_assert_failed_realm@plt>
  423f50:	ldr	w0, [sp, #84]
  423f54:	bl	4215f0 <pid_is_valid>
  423f58:	and	w0, w0, #0xff
  423f5c:	eor	w0, w0, #0x1
  423f60:	and	w0, w0, #0xff
  423f64:	cmp	w0, #0x0
  423f68:	b.eq	423f74 <client_context_get_internal+0xec>  // b.none
  423f6c:	mov	w0, #0xffffffea            	// #-22
  423f70:	b	424198 <client_context_get_internal+0x310>
  423f74:	ldr	x0, [sp, #88]
  423f78:	ldr	x19, [x0, #720]
  423f7c:	ldr	w0, [sp, #84]
  423f80:	bl	4215dc <PID_TO_PTR>
  423f84:	mov	x1, x0
  423f88:	mov	x0, x19
  423f8c:	bl	42142c <hashmap_get>
  423f90:	str	x0, [sp, #112]
  423f94:	ldr	x0, [sp, #112]
  423f98:	cmp	x0, #0x0
  423f9c:	b.eq	4240b0 <client_context_get_internal+0x228>  // b.none
  423fa0:	ldrb	w0, [sp, #83]
  423fa4:	cmp	w0, #0x0
  423fa8:	b.eq	424078 <client_context_get_internal+0x1f0>  // b.none
  423fac:	ldr	x0, [sp, #112]
  423fb0:	ldrb	w0, [x0, #16]
  423fb4:	cmp	w0, #0x0
  423fb8:	b.eq	424068 <client_context_get_internal+0x1e0>  // b.none
  423fbc:	ldr	x0, [sp, #112]
  423fc0:	ldr	w0, [x0]
  423fc4:	cmp	w0, #0x0
  423fc8:	cset	w0, ne  // ne = any
  423fcc:	and	w0, w0, #0xff
  423fd0:	and	x0, x0, #0xff
  423fd4:	cmp	x0, #0x0
  423fd8:	b.eq	424004 <client_context_get_internal+0x17c>  // b.none
  423fdc:	adrp	x0, 42c000 <__func__.10684+0x8>
  423fe0:	add	x1, x0, #0xd13
  423fe4:	adrp	x0, 42d000 <__func__.11730+0x328>
  423fe8:	add	x4, x0, #0x2e0
  423fec:	mov	w3, #0x29c                 	// #668
  423ff0:	mov	x2, x1
  423ff4:	adrp	x0, 42c000 <__func__.10684+0x8>
  423ff8:	add	x1, x0, #0xf78
  423ffc:	mov	w0, #0x0                   	// #0
  424000:	bl	405fd0 <log_assert_failed_realm@plt>
  424004:	ldr	x0, [sp, #88]
  424008:	ldr	x3, [x0, #728]
  42400c:	ldr	x1, [sp, #112]
  424010:	ldr	x0, [sp, #112]
  424014:	add	x0, x0, #0x4
  424018:	mov	x2, x0
  42401c:	mov	x0, x3
  424020:	bl	405b30 <prioq_remove@plt>
  424024:	lsr	w0, w0, #31
  424028:	and	w0, w0, #0xff
  42402c:	and	x0, x0, #0xff
  424030:	cmp	x0, #0x0
  424034:	b.eq	424060 <client_context_get_internal+0x1d8>  // b.none
  424038:	adrp	x0, 42c000 <__func__.10684+0x8>
  42403c:	add	x1, x0, #0xd13
  424040:	adrp	x0, 42d000 <__func__.11730+0x328>
  424044:	add	x4, x0, #0x2e0
  424048:	mov	w3, #0x29d                 	// #669
  42404c:	mov	x2, x1
  424050:	adrp	x0, 42c000 <__func__.10684+0x8>
  424054:	add	x1, x0, #0xdd8
  424058:	mov	w0, #0x0                   	// #0
  42405c:	bl	405fd0 <log_assert_failed_realm@plt>
  424060:	ldr	x0, [sp, #112]
  424064:	strb	wzr, [x0, #16]
  424068:	ldr	x0, [sp, #112]
  42406c:	ldr	w1, [x0]
  424070:	add	w1, w1, #0x1
  424074:	str	w1, [x0]
  424078:	ldr	x0, [sp, #112]
  42407c:	mov	x6, #0xffffffffffffffff    	// #-1
  424080:	ldr	x5, [sp, #48]
  424084:	ldr	x4, [sp, #56]
  424088:	ldr	x3, [sp, #64]
  42408c:	ldr	x2, [sp, #72]
  424090:	mov	x1, x0
  424094:	ldr	x0, [sp, #88]
  424098:	bl	423888 <client_context_maybe_refresh>
  42409c:	ldr	x1, [sp, #112]
  4240a0:	ldr	x0, [sp, #40]
  4240a4:	str	x1, [x0]
  4240a8:	mov	w0, #0x0                   	// #0
  4240ac:	b	424198 <client_context_get_internal+0x310>
  4240b0:	bl	421658 <cache_max>
  4240b4:	sub	x0, x0, #0x1
  4240b8:	mov	x1, x0
  4240bc:	ldr	x0, [sp, #88]
  4240c0:	bl	423acc <client_context_try_shrink_to>
  4240c4:	add	x0, sp, #0x70
  4240c8:	mov	x2, x0
  4240cc:	ldr	w1, [sp, #84]
  4240d0:	ldr	x0, [sp, #88]
  4240d4:	bl	421898 <client_context_new>
  4240d8:	str	w0, [sp, #108]
  4240dc:	ldr	w0, [sp, #108]
  4240e0:	cmp	w0, #0x0
  4240e4:	b.ge	4240f0 <client_context_get_internal+0x268>  // b.tcont
  4240e8:	ldr	w0, [sp, #108]
  4240ec:	b	424198 <client_context_get_internal+0x310>
  4240f0:	ldrb	w0, [sp, #83]
  4240f4:	cmp	w0, #0x0
  4240f8:	b.eq	424110 <client_context_get_internal+0x288>  // b.none
  4240fc:	ldr	x0, [sp, #112]
  424100:	ldr	w1, [x0]
  424104:	add	w1, w1, #0x1
  424108:	str	w1, [x0]
  42410c:	b	424164 <client_context_get_internal+0x2dc>
  424110:	ldr	x0, [sp, #88]
  424114:	ldr	x3, [x0, #728]
  424118:	ldr	x1, [sp, #112]
  42411c:	ldr	x0, [sp, #112]
  424120:	add	x0, x0, #0x4
  424124:	mov	x2, x0
  424128:	mov	x0, x3
  42412c:	bl	406130 <prioq_put@plt>
  424130:	str	w0, [sp, #108]
  424134:	ldr	w0, [sp, #108]
  424138:	cmp	w0, #0x0
  42413c:	b.ge	424158 <client_context_get_internal+0x2d0>  // b.tcont
  424140:	ldr	x0, [sp, #112]
  424144:	mov	x1, x0
  424148:	ldr	x0, [sp, #88]
  42414c:	bl	421da0 <client_context_free>
  424150:	ldr	w0, [sp, #108]
  424154:	b	424198 <client_context_get_internal+0x310>
  424158:	ldr	x0, [sp, #112]
  42415c:	mov	w1, #0x1                   	// #1
  424160:	strb	w1, [x0, #16]
  424164:	ldr	x0, [sp, #112]
  424168:	mov	x6, #0xffffffffffffffff    	// #-1
  42416c:	ldr	x5, [sp, #48]
  424170:	ldr	x4, [sp, #56]
  424174:	ldr	x3, [sp, #64]
  424178:	ldr	x2, [sp, #72]
  42417c:	mov	x1, x0
  424180:	ldr	x0, [sp, #88]
  424184:	bl	42360c <client_context_really_refresh>
  424188:	ldr	x1, [sp, #112]
  42418c:	ldr	x0, [sp, #40]
  424190:	str	x1, [x0]
  424194:	mov	w0, #0x0                   	// #0
  424198:	mov	w1, w0
  42419c:	adrp	x0, 441000 <wordlist.9471+0x208>
  4241a0:	ldr	x0, [x0, #4064]
  4241a4:	ldr	x2, [sp, #120]
  4241a8:	ldr	x0, [x0]
  4241ac:	eor	x0, x2, x0
  4241b0:	cmp	x0, #0x0
  4241b4:	b.eq	4241bc <client_context_get_internal+0x334>  // b.none
  4241b8:	bl	4063e0 <__stack_chk_fail@plt>
  4241bc:	mov	w0, w1
  4241c0:	ldr	x19, [sp, #16]
  4241c4:	ldp	x29, x30, [sp], #128
  4241c8:	ret

00000000004241cc <client_context_get>:
  4241cc:	stp	x29, x30, [sp, #-80]!
  4241d0:	mov	x29, sp
  4241d4:	str	x0, [sp, #72]
  4241d8:	str	w1, [sp, #68]
  4241dc:	str	x2, [sp, #56]
  4241e0:	str	x3, [sp, #48]
  4241e4:	str	x4, [sp, #40]
  4241e8:	str	x5, [sp, #32]
  4241ec:	str	x6, [sp, #24]
  4241f0:	ldr	x7, [sp, #24]
  4241f4:	mov	w6, #0x0                   	// #0
  4241f8:	ldr	x5, [sp, #32]
  4241fc:	ldr	x4, [sp, #40]
  424200:	ldr	x3, [sp, #48]
  424204:	ldr	x2, [sp, #56]
  424208:	ldr	w1, [sp, #68]
  42420c:	ldr	x0, [sp, #72]
  424210:	bl	423e88 <client_context_get_internal>
  424214:	ldp	x29, x30, [sp], #80
  424218:	ret

000000000042421c <client_context_acquire>:
  42421c:	stp	x29, x30, [sp, #-80]!
  424220:	mov	x29, sp
  424224:	str	x0, [sp, #72]
  424228:	str	w1, [sp, #68]
  42422c:	str	x2, [sp, #56]
  424230:	str	x3, [sp, #48]
  424234:	str	x4, [sp, #40]
  424238:	str	x5, [sp, #32]
  42423c:	str	x6, [sp, #24]
  424240:	ldr	x7, [sp, #24]
  424244:	mov	w6, #0x1                   	// #1
  424248:	ldr	x5, [sp, #32]
  42424c:	ldr	x4, [sp, #40]
  424250:	ldr	x3, [sp, #48]
  424254:	ldr	x2, [sp, #56]
  424258:	ldr	w1, [sp, #68]
  42425c:	ldr	x0, [sp, #72]
  424260:	bl	423e88 <client_context_get_internal>
  424264:	ldp	x29, x30, [sp], #80
  424268:	ret

000000000042426c <client_context_release>:
  42426c:	stp	x29, x30, [sp, #-32]!
  424270:	mov	x29, sp
  424274:	str	x0, [sp, #24]
  424278:	str	x1, [sp, #16]
  42427c:	ldr	x0, [sp, #24]
  424280:	cmp	x0, #0x0
  424284:	cset	w0, eq  // eq = none
  424288:	and	w0, w0, #0xff
  42428c:	and	x0, x0, #0xff
  424290:	cmp	x0, #0x0
  424294:	b.eq	4242c0 <client_context_release+0x54>  // b.none
  424298:	adrp	x0, 42c000 <__func__.10684+0x8>
  42429c:	add	x1, x0, #0xd13
  4242a0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4242a4:	add	x4, x0, #0x300
  4242a8:	mov	w3, #0x2d9                 	// #729
  4242ac:	mov	x2, x1
  4242b0:	adrp	x0, 42c000 <__func__.10684+0x8>
  4242b4:	add	x1, x0, #0xd68
  4242b8:	mov	w0, #0x0                   	// #0
  4242bc:	bl	405fd0 <log_assert_failed_realm@plt>
  4242c0:	ldr	x0, [sp, #16]
  4242c4:	cmp	x0, #0x0
  4242c8:	b.ne	4242d4 <client_context_release+0x68>  // b.any
  4242cc:	mov	x0, #0x0                   	// #0
  4242d0:	b	4243cc <client_context_release+0x160>
  4242d4:	ldr	x0, [sp, #16]
  4242d8:	ldr	w0, [x0]
  4242dc:	cmp	w0, #0x0
  4242e0:	cset	w0, eq  // eq = none
  4242e4:	and	w0, w0, #0xff
  4242e8:	and	x0, x0, #0xff
  4242ec:	cmp	x0, #0x0
  4242f0:	b.eq	42431c <client_context_release+0xb0>  // b.none
  4242f4:	adrp	x0, 42c000 <__func__.10684+0x8>
  4242f8:	add	x1, x0, #0xd13
  4242fc:	adrp	x0, 42d000 <__func__.11730+0x328>
  424300:	add	x4, x0, #0x300
  424304:	mov	w3, #0x2de                 	// #734
  424308:	mov	x2, x1
  42430c:	adrp	x0, 42d000 <__func__.11730+0x328>
  424310:	add	x1, x0, #0x28
  424314:	mov	w0, #0x0                   	// #0
  424318:	bl	405fd0 <log_assert_failed_realm@plt>
  42431c:	ldr	x0, [sp, #16]
  424320:	ldrb	w0, [x0, #16]
  424324:	and	x0, x0, #0xff
  424328:	cmp	x0, #0x0
  42432c:	b.eq	424358 <client_context_release+0xec>  // b.none
  424330:	adrp	x0, 42c000 <__func__.10684+0x8>
  424334:	add	x1, x0, #0xd13
  424338:	adrp	x0, 42d000 <__func__.11730+0x328>
  42433c:	add	x4, x0, #0x300
  424340:	mov	w3, #0x2df                 	// #735
  424344:	mov	x2, x1
  424348:	adrp	x0, 42d000 <__func__.11730+0x328>
  42434c:	add	x1, x0, #0x38
  424350:	mov	w0, #0x0                   	// #0
  424354:	bl	405fd0 <log_assert_failed_realm@plt>
  424358:	ldr	x0, [sp, #16]
  42435c:	ldr	w0, [x0]
  424360:	sub	w1, w0, #0x1
  424364:	ldr	x0, [sp, #16]
  424368:	str	w1, [x0]
  42436c:	ldr	x0, [sp, #16]
  424370:	ldr	w0, [x0]
  424374:	cmp	w0, #0x0
  424378:	b.eq	424384 <client_context_release+0x118>  // b.none
  42437c:	mov	x0, #0x0                   	// #0
  424380:	b	4243cc <client_context_release+0x160>
  424384:	ldr	x0, [sp, #24]
  424388:	ldr	x3, [x0, #728]
  42438c:	ldr	x0, [sp, #16]
  424390:	add	x0, x0, #0x4
  424394:	mov	x2, x0
  424398:	ldr	x1, [sp, #16]
  42439c:	mov	x0, x3
  4243a0:	bl	406130 <prioq_put@plt>
  4243a4:	cmp	w0, #0x0
  4243a8:	b.ge	4243bc <client_context_release+0x150>  // b.tcont
  4243ac:	ldr	x1, [sp, #16]
  4243b0:	ldr	x0, [sp, #24]
  4243b4:	bl	421da0 <client_context_free>
  4243b8:	b	4243c8 <client_context_release+0x15c>
  4243bc:	ldr	x0, [sp, #16]
  4243c0:	mov	w1, #0x1                   	// #1
  4243c4:	strb	w1, [x0, #16]
  4243c8:	mov	x0, #0x0                   	// #0
  4243cc:	ldp	x29, x30, [sp], #32
  4243d0:	ret

00000000004243d4 <client_context_acquire_default>:
  4243d4:	stp	x29, x30, [sp, #-96]!
  4243d8:	mov	x29, sp
  4243dc:	str	x0, [sp, #24]
  4243e0:	adrp	x0, 441000 <wordlist.9471+0x208>
  4243e4:	ldr	x0, [x0, #4064]
  4243e8:	ldr	x1, [x0]
  4243ec:	str	x1, [sp, #88]
  4243f0:	mov	x1, #0x0                   	// #0
  4243f4:	ldr	x0, [sp, #24]
  4243f8:	cmp	x0, #0x0
  4243fc:	cset	w0, eq  // eq = none
  424400:	and	w0, w0, #0xff
  424404:	and	x0, x0, #0xff
  424408:	cmp	x0, #0x0
  42440c:	b.eq	424438 <client_context_acquire_default+0x64>  // b.none
  424410:	adrp	x0, 42c000 <__func__.10684+0x8>
  424414:	add	x1, x0, #0xd13
  424418:	adrp	x0, 42d000 <__func__.11730+0x328>
  42441c:	add	x4, x0, #0x318
  424420:	mov	w3, #0x2f3                 	// #755
  424424:	mov	x2, x1
  424428:	adrp	x0, 42c000 <__func__.10684+0x8>
  42442c:	add	x1, x0, #0xd68
  424430:	mov	w0, #0x0                   	// #0
  424434:	bl	405fd0 <log_assert_failed_realm@plt>
  424438:	ldr	x0, [sp, #24]
  42443c:	ldr	x0, [x0, #744]
  424440:	cmp	x0, #0x0
  424444:	b.ne	424514 <client_context_acquire_default+0x140>  // b.any
  424448:	bl	405e20 <getpid_cached@plt>
  42444c:	str	w0, [sp, #72]
  424450:	bl	4062b0 <getuid@plt>
  424454:	str	w0, [sp, #76]
  424458:	bl	405eb0 <getgid@plt>
  42445c:	str	w0, [sp, #80]
  424460:	ldr	w1, [sp, #72]
  424464:	ldr	x0, [sp, #24]
  424468:	add	x2, x0, #0x2e8
  42446c:	add	x0, sp, #0x48
  424470:	mov	x6, x2
  424474:	mov	x5, #0x0                   	// #0
  424478:	mov	x4, #0x0                   	// #0
  42447c:	mov	x3, #0x0                   	// #0
  424480:	mov	x2, x0
  424484:	ldr	x0, [sp, #24]
  424488:	bl	42421c <client_context_acquire>
  42448c:	str	w0, [sp, #44]
  424490:	ldr	w0, [sp, #44]
  424494:	cmp	w0, #0x0
  424498:	b.ge	424514 <client_context_acquire_default+0x140>  // b.tcont
  42449c:	mov	w0, #0x4                   	// #4
  4244a0:	str	w0, [sp, #48]
  4244a4:	ldr	w0, [sp, #44]
  4244a8:	str	w0, [sp, #52]
  4244ac:	str	wzr, [sp, #56]
  4244b0:	ldr	w0, [sp, #56]
  4244b4:	bl	406c30 <log_get_max_level_realm@plt>
  4244b8:	mov	w1, w0
  4244bc:	ldr	w0, [sp, #48]
  4244c0:	and	w0, w0, #0x7
  4244c4:	cmp	w1, w0
  4244c8:	b.lt	42450c <client_context_acquire_default+0x138>  // b.tstop
  4244cc:	ldr	w0, [sp, #56]
  4244d0:	lsl	w1, w0, #10
  4244d4:	ldr	w0, [sp, #48]
  4244d8:	orr	w6, w1, w0
  4244dc:	adrp	x0, 42c000 <__func__.10684+0x8>
  4244e0:	add	x1, x0, #0xd13
  4244e4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4244e8:	add	x5, x0, #0x48
  4244ec:	adrp	x0, 42d000 <__func__.11730+0x328>
  4244f0:	add	x4, x0, #0x338
  4244f4:	mov	w3, #0x301                 	// #769
  4244f8:	mov	x2, x1
  4244fc:	ldr	w1, [sp, #52]
  424500:	mov	w0, w6
  424504:	bl	406590 <log_internal_realm@plt>
  424508:	b	424514 <client_context_acquire_default+0x140>
  42450c:	ldr	w0, [sp, #52]
  424510:	cmp	w0, #0x0
  424514:	ldr	x0, [sp, #24]
  424518:	ldr	x0, [x0, #752]
  42451c:	cmp	x0, #0x0
  424520:	b.ne	4245d4 <client_context_acquire_default+0x200>  // b.any
  424524:	ldr	x0, [sp, #24]
  424528:	add	x0, x0, #0x2f0
  42452c:	mov	x6, x0
  424530:	mov	x5, #0x0                   	// #0
  424534:	mov	x4, #0x0                   	// #0
  424538:	mov	x3, #0x0                   	// #0
  42453c:	mov	x2, #0x0                   	// #0
  424540:	mov	w1, #0x1                   	// #1
  424544:	ldr	x0, [sp, #24]
  424548:	bl	42421c <client_context_acquire>
  42454c:	str	w0, [sp, #44]
  424550:	ldr	w0, [sp, #44]
  424554:	cmp	w0, #0x0
  424558:	b.ge	4245d4 <client_context_acquire_default+0x200>  // b.tcont
  42455c:	mov	w0, #0x4                   	// #4
  424560:	str	w0, [sp, #60]
  424564:	ldr	w0, [sp, #44]
  424568:	str	w0, [sp, #64]
  42456c:	str	wzr, [sp, #68]
  424570:	ldr	w0, [sp, #68]
  424574:	bl	406c30 <log_get_max_level_realm@plt>
  424578:	mov	w1, w0
  42457c:	ldr	w0, [sp, #60]
  424580:	and	w0, w0, #0x7
  424584:	cmp	w1, w0
  424588:	b.lt	4245cc <client_context_acquire_default+0x1f8>  // b.tstop
  42458c:	ldr	w0, [sp, #68]
  424590:	lsl	w1, w0, #10
  424594:	ldr	w0, [sp, #60]
  424598:	orr	w6, w1, w0
  42459c:	adrp	x0, 42c000 <__func__.10684+0x8>
  4245a0:	add	x1, x0, #0xd13
  4245a4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4245a8:	add	x5, x0, #0x78
  4245ac:	adrp	x0, 42d000 <__func__.11730+0x328>
  4245b0:	add	x4, x0, #0x338
  4245b4:	mov	w3, #0x308                 	// #776
  4245b8:	mov	x2, x1
  4245bc:	ldr	w1, [sp, #64]
  4245c0:	mov	w0, w6
  4245c4:	bl	406590 <log_internal_realm@plt>
  4245c8:	b	4245d4 <client_context_acquire_default+0x200>
  4245cc:	ldr	w0, [sp, #64]
  4245d0:	cmp	w0, #0x0
  4245d4:	nop
  4245d8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4245dc:	ldr	x0, [x0, #4064]
  4245e0:	ldr	x1, [sp, #88]
  4245e4:	ldr	x0, [x0]
  4245e8:	eor	x0, x1, x0
  4245ec:	cmp	x0, #0x0
  4245f0:	b.eq	4245f8 <client_context_acquire_default+0x224>  // b.none
  4245f4:	bl	4063e0 <__stack_chk_fail@plt>
  4245f8:	ldp	x29, x30, [sp], #96
  4245fc:	ret

0000000000424600 <ALIGN_TO>:
  424600:	sub	sp, sp, #0x10
  424604:	str	x0, [sp, #8]
  424608:	str	x1, [sp]
  42460c:	ldr	x1, [sp, #8]
  424610:	ldr	x0, [sp]
  424614:	add	x0, x1, x0
  424618:	sub	x1, x0, #0x1
  42461c:	ldr	x0, [sp]
  424620:	neg	x0, x0
  424624:	and	x0, x1, x0
  424628:	add	sp, sp, #0x10
  42462c:	ret

0000000000424630 <freep>:
  424630:	stp	x29, x30, [sp, #-32]!
  424634:	mov	x29, sp
  424638:	str	x0, [sp, #24]
  42463c:	ldr	x0, [sp, #24]
  424640:	ldr	x0, [x0]
  424644:	bl	406930 <free@plt>
  424648:	nop
  42464c:	ldp	x29, x30, [sp], #32
  424650:	ret

0000000000424654 <le64toh>:
  424654:	sub	sp, sp, #0x10
  424658:	str	x0, [sp, #8]
  42465c:	ldr	x0, [sp, #8]
  424660:	add	sp, sp, #0x10
  424664:	ret

0000000000424668 <client_context_extra_fields_n_iovec>:
  424668:	sub	sp, sp, #0x10
  42466c:	str	x0, [sp, #8]
  424670:	ldr	x0, [sp, #8]
  424674:	cmp	x0, #0x0
  424678:	b.eq	424688 <client_context_extra_fields_n_iovec+0x20>  // b.none
  42467c:	ldr	x0, [sp, #8]
  424680:	ldr	x0, [x0, #176]
  424684:	b	42468c <client_context_extra_fields_n_iovec+0x24>
  424688:	mov	x0, #0x0                   	// #0
  42468c:	add	sp, sp, #0x10
  424690:	ret

0000000000424694 <client_context_test_priority>:
  424694:	sub	sp, sp, #0x10
  424698:	str	x0, [sp, #8]
  42469c:	str	w1, [sp, #4]
  4246a0:	ldr	x0, [sp, #8]
  4246a4:	cmp	x0, #0x0
  4246a8:	b.ne	4246b4 <client_context_test_priority+0x20>  // b.any
  4246ac:	mov	w0, #0x1                   	// #1
  4246b0:	b	4246e8 <client_context_test_priority+0x54>
  4246b4:	ldr	x0, [sp, #8]
  4246b8:	ldr	w0, [x0, #160]
  4246bc:	cmp	w0, #0x0
  4246c0:	b.ge	4246cc <client_context_test_priority+0x38>  // b.tcont
  4246c4:	mov	w0, #0x1                   	// #1
  4246c8:	b	4246e8 <client_context_test_priority+0x54>
  4246cc:	ldr	w0, [sp, #4]
  4246d0:	and	w1, w0, #0x7
  4246d4:	ldr	x0, [sp, #8]
  4246d8:	ldr	w0, [x0, #160]
  4246dc:	cmp	w1, w0
  4246e0:	cset	w0, le
  4246e4:	and	w0, w0, #0xff
  4246e8:	add	sp, sp, #0x10
  4246ec:	ret

00000000004246f0 <startswith>:
  4246f0:	stp	x29, x30, [sp, #-48]!
  4246f4:	mov	x29, sp
  4246f8:	str	x0, [sp, #24]
  4246fc:	str	x1, [sp, #16]
  424700:	ldr	x0, [sp, #16]
  424704:	bl	406af0 <strlen@plt>
  424708:	str	x0, [sp, #40]
  42470c:	ldr	x2, [sp, #40]
  424710:	ldr	x1, [sp, #16]
  424714:	ldr	x0, [sp, #24]
  424718:	bl	406110 <strncmp@plt>
  42471c:	cmp	w0, #0x0
  424720:	b.ne	424734 <startswith+0x44>  // b.any
  424724:	ldr	x1, [sp, #24]
  424728:	ldr	x0, [sp, #40]
  42472c:	add	x0, x1, x0
  424730:	b	424738 <startswith+0x48>
  424734:	mov	x0, #0x0                   	// #0
  424738:	ldp	x29, x30, [sp], #48
  42473c:	ret

0000000000424740 <pid_is_valid>:
  424740:	sub	sp, sp, #0x10
  424744:	str	w0, [sp, #12]
  424748:	ldr	w0, [sp, #12]
  42474c:	cmp	w0, #0x0
  424750:	cset	w0, gt
  424754:	and	w0, w0, #0xff
  424758:	add	sp, sp, #0x10
  42475c:	ret

0000000000424760 <setsockopt_int>:
  424760:	stp	x29, x30, [sp, #-32]!
  424764:	mov	x29, sp
  424768:	str	w0, [sp, #28]
  42476c:	str	w1, [sp, #24]
  424770:	str	w2, [sp, #20]
  424774:	str	w3, [sp, #16]
  424778:	add	x0, sp, #0x10
  42477c:	mov	w4, #0x4                   	// #4
  424780:	mov	x3, x0
  424784:	ldr	w2, [sp, #20]
  424788:	ldr	w1, [sp, #24]
  42478c:	ldr	w0, [sp, #28]
  424790:	bl	4067c0 <setsockopt@plt>
  424794:	cmp	w0, #0x0
  424798:	b.ge	4247ac <setsockopt_int+0x4c>  // b.tcont
  42479c:	bl	4062e0 <__errno_location@plt>
  4247a0:	ldr	w0, [x0]
  4247a4:	neg	w0, w0
  4247a8:	b	4247b0 <setsockopt_int+0x50>
  4247ac:	mov	w0, #0x0                   	// #0
  4247b0:	ldp	x29, x30, [sp], #32
  4247b4:	ret

00000000004247b8 <unaligned_read_le64>:
  4247b8:	stp	x29, x30, [sp, #-48]!
  4247bc:	mov	x29, sp
  4247c0:	str	x0, [sp, #24]
  4247c4:	ldr	x0, [sp, #24]
  4247c8:	str	x0, [sp, #40]
  4247cc:	ldr	x0, [sp, #40]
  4247d0:	ldr	x0, [x0]
  4247d4:	bl	424654 <le64toh>
  4247d8:	ldp	x29, x30, [sp], #48
  4247dc:	ret

00000000004247e0 <allow_object_pid>:
  4247e0:	sub	sp, sp, #0x10
  4247e4:	str	x0, [sp, #8]
  4247e8:	ldr	x0, [sp, #8]
  4247ec:	cmp	x0, #0x0
  4247f0:	b.eq	42480c <allow_object_pid+0x2c>  // b.none
  4247f4:	ldr	x0, [sp, #8]
  4247f8:	ldr	w0, [x0, #4]
  4247fc:	cmp	w0, #0x0
  424800:	b.ne	42480c <allow_object_pid+0x2c>  // b.any
  424804:	mov	w0, #0x1                   	// #1
  424808:	b	424810 <allow_object_pid+0x30>
  42480c:	mov	w0, #0x0                   	// #0
  424810:	and	w0, w0, #0x1
  424814:	and	w0, w0, #0xff
  424818:	add	sp, sp, #0x10
  42481c:	ret

0000000000424820 <server_process_entry_meta>:
  424820:	stp	x29, x30, [sp, #-128]!
  424824:	mov	x29, sp
  424828:	str	x0, [sp, #72]
  42482c:	str	x1, [sp, #64]
  424830:	str	x2, [sp, #56]
  424834:	str	x3, [sp, #48]
  424838:	str	x4, [sp, #40]
  42483c:	str	x5, [sp, #32]
  424840:	str	x6, [sp, #24]
  424844:	adrp	x0, 441000 <wordlist.9471+0x208>
  424848:	ldr	x0, [x0, #4064]
  42484c:	ldr	x1, [x0]
  424850:	str	x1, [sp, #120]
  424854:	mov	x1, #0x0                   	// #0
  424858:	ldr	x0, [sp, #64]
  42485c:	cmp	x0, #0xa
  424860:	b.ne	4248d0 <server_process_entry_meta+0xb0>  // b.any
  424864:	adrp	x0, 42d000 <__func__.11730+0x328>
  424868:	add	x1, x0, #0x380
  42486c:	ldr	x0, [sp, #72]
  424870:	bl	4246f0 <startswith>
  424874:	cmp	x0, #0x0
  424878:	b.eq	4248d0 <server_process_entry_meta+0xb0>  // b.none
  42487c:	ldr	x0, [sp, #72]
  424880:	add	x0, x0, #0x9
  424884:	ldrb	w0, [x0]
  424888:	cmp	w0, #0x2f
  42488c:	b.ls	4248d0 <server_process_entry_meta+0xb0>  // b.plast
  424890:	ldr	x0, [sp, #72]
  424894:	add	x0, x0, #0x9
  424898:	ldrb	w0, [x0]
  42489c:	cmp	w0, #0x39
  4248a0:	b.hi	4248d0 <server_process_entry_meta+0xb0>  // b.pmore
  4248a4:	ldr	x0, [sp, #48]
  4248a8:	ldr	w0, [x0]
  4248ac:	and	w1, w0, #0x3f8
  4248b0:	ldr	x0, [sp, #72]
  4248b4:	add	x0, x0, #0x9
  4248b8:	ldrb	w0, [x0]
  4248bc:	sub	w0, w0, #0x30
  4248c0:	orr	w1, w1, w0
  4248c4:	ldr	x0, [sp, #48]
  4248c8:	str	w1, [x0]
  4248cc:	b	424b78 <server_process_entry_meta+0x358>
  4248d0:	ldr	x0, [sp, #64]
  4248d4:	cmp	x0, #0x11
  4248d8:	b.ne	42494c <server_process_entry_meta+0x12c>  // b.any
  4248dc:	adrp	x0, 42d000 <__func__.11730+0x328>
  4248e0:	add	x1, x0, #0x390
  4248e4:	ldr	x0, [sp, #72]
  4248e8:	bl	4246f0 <startswith>
  4248ec:	cmp	x0, #0x0
  4248f0:	b.eq	42494c <server_process_entry_meta+0x12c>  // b.none
  4248f4:	ldr	x0, [sp, #72]
  4248f8:	add	x0, x0, #0x10
  4248fc:	ldrb	w0, [x0]
  424900:	cmp	w0, #0x2f
  424904:	b.ls	42494c <server_process_entry_meta+0x12c>  // b.plast
  424908:	ldr	x0, [sp, #72]
  42490c:	add	x0, x0, #0x10
  424910:	ldrb	w0, [x0]
  424914:	cmp	w0, #0x39
  424918:	b.hi	42494c <server_process_entry_meta+0x12c>  // b.pmore
  42491c:	ldr	x0, [sp, #48]
  424920:	ldr	w0, [x0]
  424924:	and	w1, w0, #0x7
  424928:	ldr	x0, [sp, #72]
  42492c:	add	x0, x0, #0x10
  424930:	ldrb	w0, [x0]
  424934:	sub	w0, w0, #0x30
  424938:	lsl	w0, w0, #3
  42493c:	orr	w1, w1, w0
  424940:	ldr	x0, [sp, #48]
  424944:	str	w1, [x0]
  424948:	b	424b78 <server_process_entry_meta+0x358>
  42494c:	ldr	x0, [sp, #64]
  424950:	cmp	x0, #0x12
  424954:	b.ne	424a18 <server_process_entry_meta+0x1f8>  // b.any
  424958:	adrp	x0, 42d000 <__func__.11730+0x328>
  42495c:	add	x1, x0, #0x390
  424960:	ldr	x0, [sp, #72]
  424964:	bl	4246f0 <startswith>
  424968:	cmp	x0, #0x0
  42496c:	b.eq	424a18 <server_process_entry_meta+0x1f8>  // b.none
  424970:	ldr	x0, [sp, #72]
  424974:	add	x0, x0, #0x10
  424978:	ldrb	w0, [x0]
  42497c:	cmp	w0, #0x2f
  424980:	b.ls	424a18 <server_process_entry_meta+0x1f8>  // b.plast
  424984:	ldr	x0, [sp, #72]
  424988:	add	x0, x0, #0x10
  42498c:	ldrb	w0, [x0]
  424990:	cmp	w0, #0x39
  424994:	b.hi	424a18 <server_process_entry_meta+0x1f8>  // b.pmore
  424998:	ldr	x0, [sp, #72]
  42499c:	add	x0, x0, #0x11
  4249a0:	ldrb	w0, [x0]
  4249a4:	cmp	w0, #0x2f
  4249a8:	b.ls	424a18 <server_process_entry_meta+0x1f8>  // b.plast
  4249ac:	ldr	x0, [sp, #72]
  4249b0:	add	x0, x0, #0x11
  4249b4:	ldrb	w0, [x0]
  4249b8:	cmp	w0, #0x39
  4249bc:	b.hi	424a18 <server_process_entry_meta+0x1f8>  // b.pmore
  4249c0:	ldr	x0, [sp, #48]
  4249c4:	ldr	w0, [x0]
  4249c8:	and	w2, w0, #0x7
  4249cc:	ldr	x0, [sp, #72]
  4249d0:	add	x0, x0, #0x10
  4249d4:	ldrb	w0, [x0]
  4249d8:	sub	w1, w0, #0x30
  4249dc:	mov	w0, w1
  4249e0:	lsl	w0, w0, #2
  4249e4:	add	w0, w0, w1
  4249e8:	lsl	w0, w0, #1
  4249ec:	mov	w1, w0
  4249f0:	ldr	x0, [sp, #72]
  4249f4:	add	x0, x0, #0x11
  4249f8:	ldrb	w0, [x0]
  4249fc:	sub	w0, w0, #0x30
  424a00:	add	w0, w1, w0
  424a04:	lsl	w0, w0, #3
  424a08:	orr	w1, w2, w0
  424a0c:	ldr	x0, [sp, #48]
  424a10:	str	w1, [x0]
  424a14:	b	424b78 <server_process_entry_meta+0x358>
  424a18:	ldr	x0, [sp, #64]
  424a1c:	cmp	x0, #0x12
  424a20:	b.ls	424a84 <server_process_entry_meta+0x264>  // b.plast
  424a24:	adrp	x0, 42d000 <__func__.11730+0x328>
  424a28:	add	x1, x0, #0x3a8
  424a2c:	ldr	x0, [sp, #72]
  424a30:	bl	4246f0 <startswith>
  424a34:	cmp	x0, #0x0
  424a38:	b.eq	424a84 <server_process_entry_meta+0x264>  // b.none
  424a3c:	ldr	x0, [sp, #72]
  424a40:	add	x2, x0, #0x12
  424a44:	ldr	x0, [sp, #64]
  424a48:	sub	x0, x0, #0x12
  424a4c:	mov	x1, x0
  424a50:	mov	x0, x2
  424a54:	bl	406990 <memdup_suffix0@plt>
  424a58:	str	x0, [sp, #88]
  424a5c:	ldr	x0, [sp, #88]
  424a60:	cmp	x0, #0x0
  424a64:	b.eq	424b6c <server_process_entry_meta+0x34c>  // b.none
  424a68:	ldr	x0, [sp, #40]
  424a6c:	ldr	x0, [x0]
  424a70:	bl	406930 <free@plt>
  424a74:	ldr	x0, [sp, #40]
  424a78:	ldr	x1, [sp, #88]
  424a7c:	str	x1, [x0]
  424a80:	b	424b6c <server_process_entry_meta+0x34c>
  424a84:	ldr	x0, [sp, #64]
  424a88:	cmp	x0, #0x7
  424a8c:	b.ls	424af0 <server_process_entry_meta+0x2d0>  // b.plast
  424a90:	adrp	x0, 42d000 <__func__.11730+0x328>
  424a94:	add	x1, x0, #0x3c0
  424a98:	ldr	x0, [sp, #72]
  424a9c:	bl	4246f0 <startswith>
  424aa0:	cmp	x0, #0x0
  424aa4:	b.eq	424af0 <server_process_entry_meta+0x2d0>  // b.none
  424aa8:	ldr	x0, [sp, #72]
  424aac:	add	x2, x0, #0x8
  424ab0:	ldr	x0, [sp, #64]
  424ab4:	sub	x0, x0, #0x8
  424ab8:	mov	x1, x0
  424abc:	mov	x0, x2
  424ac0:	bl	406990 <memdup_suffix0@plt>
  424ac4:	str	x0, [sp, #96]
  424ac8:	ldr	x0, [sp, #96]
  424acc:	cmp	x0, #0x0
  424ad0:	b.eq	424b74 <server_process_entry_meta+0x354>  // b.none
  424ad4:	ldr	x0, [sp, #32]
  424ad8:	ldr	x0, [x0]
  424adc:	bl	406930 <free@plt>
  424ae0:	ldr	x0, [sp, #32]
  424ae4:	ldr	x1, [sp, #96]
  424ae8:	str	x1, [x0]
  424aec:	b	424b74 <server_process_entry_meta+0x354>
  424af0:	ldr	x0, [sp, #64]
  424af4:	cmp	x0, #0xb
  424af8:	b.ls	424b78 <server_process_entry_meta+0x358>  // b.plast
  424afc:	ldr	x0, [sp, #64]
  424b00:	cmp	x0, #0x16
  424b04:	b.hi	424b78 <server_process_entry_meta+0x358>  // b.pmore
  424b08:	adrp	x0, 42d000 <__func__.11730+0x328>
  424b0c:	add	x1, x0, #0x3d0
  424b10:	ldr	x0, [sp, #72]
  424b14:	bl	4246f0 <startswith>
  424b18:	cmp	x0, #0x0
  424b1c:	b.eq	424b78 <server_process_entry_meta+0x358>  // b.none
  424b20:	ldr	x0, [sp, #56]
  424b24:	bl	4247e0 <allow_object_pid>
  424b28:	and	w0, w0, #0xff
  424b2c:	cmp	w0, #0x0
  424b30:	b.eq	424b78 <server_process_entry_meta+0x358>  // b.none
  424b34:	ldr	x0, [sp, #72]
  424b38:	add	x1, x0, #0xb
  424b3c:	ldr	x0, [sp, #64]
  424b40:	sub	x2, x0, #0xb
  424b44:	add	x0, sp, #0x68
  424b48:	bl	405e90 <memcpy@plt>
  424b4c:	ldr	x0, [sp, #64]
  424b50:	sub	x0, x0, #0xb
  424b54:	add	x1, sp, #0x68
  424b58:	strb	wzr, [x1, x0]
  424b5c:	add	x0, sp, #0x68
  424b60:	ldr	x1, [sp, #24]
  424b64:	bl	406270 <parse_pid@plt>
  424b68:	b	424b78 <server_process_entry_meta+0x358>
  424b6c:	nop
  424b70:	b	424b78 <server_process_entry_meta+0x358>
  424b74:	nop
  424b78:	nop
  424b7c:	adrp	x0, 441000 <wordlist.9471+0x208>
  424b80:	ldr	x0, [x0, #4064]
  424b84:	ldr	x1, [sp, #120]
  424b88:	ldr	x0, [x0]
  424b8c:	eor	x0, x1, x0
  424b90:	cmp	x0, #0x0
  424b94:	b.eq	424b9c <server_process_entry_meta+0x37c>  // b.none
  424b98:	bl	4063e0 <__stack_chk_fail@plt>
  424b9c:	ldp	x29, x30, [sp], #128
  424ba0:	ret

0000000000424ba4 <server_process_entry>:
  424ba4:	stp	x29, x30, [sp, #-336]!
  424ba8:	mov	x29, sp
  424bac:	str	x0, [sp, #72]
  424bb0:	str	x1, [sp, #64]
  424bb4:	str	x2, [sp, #56]
  424bb8:	str	x3, [sp, #48]
  424bbc:	str	x4, [sp, #40]
  424bc0:	str	x5, [sp, #32]
  424bc4:	str	x6, [sp, #24]
  424bc8:	str	x7, [sp, #16]
  424bcc:	adrp	x0, 441000 <wordlist.9471+0x208>
  424bd0:	ldr	x0, [x0, #4064]
  424bd4:	ldr	x1, [x0]
  424bd8:	str	x1, [sp, #328]
  424bdc:	mov	x1, #0x0                   	// #0
  424be0:	str	xzr, [sp, #240]
  424be4:	mov	x0, #0xffffffffffffffff    	// #-1
  424be8:	str	x0, [sp, #256]
  424bec:	str	xzr, [sp, #208]
  424bf0:	str	xzr, [sp, #264]
  424bf4:	str	xzr, [sp, #216]
  424bf8:	str	xzr, [sp, #224]
  424bfc:	str	xzr, [sp, #232]
  424c00:	mov	w0, #0x6                   	// #6
  424c04:	str	w0, [sp, #88]
  424c08:	str	wzr, [sp, #92]
  424c0c:	mov	w0, #0x1                   	// #1
  424c10:	str	w0, [sp, #96]
  424c14:	ldr	x0, [sp, #64]
  424c18:	str	x0, [sp, #272]
  424c1c:	b	4254fc <server_process_entry+0x958>
  424c20:	ldr	x0, [sp, #56]
  424c24:	ldr	x0, [x0]
  424c28:	mov	x2, x0
  424c2c:	mov	w1, #0xa                   	// #10
  424c30:	ldr	x0, [sp, #272]
  424c34:	bl	406870 <memchr@plt>
  424c38:	str	x0, [sp, #280]
  424c3c:	ldr	x0, [sp, #280]
  424c40:	cmp	x0, #0x0
  424c44:	b.ne	424cc0 <server_process_entry+0x11c>  // b.any
  424c48:	mov	w0, #0x7                   	// #7
  424c4c:	str	w0, [sp, #184]
  424c50:	str	wzr, [sp, #188]
  424c54:	str	wzr, [sp, #192]
  424c58:	ldr	w0, [sp, #192]
  424c5c:	bl	406c30 <log_get_max_level_realm@plt>
  424c60:	mov	w1, w0
  424c64:	ldr	w0, [sp, #184]
  424c68:	and	w0, w0, #0x7
  424c6c:	cmp	w1, w0
  424c70:	b.lt	424cb4 <server_process_entry+0x110>  // b.tstop
  424c74:	ldr	w0, [sp, #192]
  424c78:	lsl	w1, w0, #10
  424c7c:	ldr	w0, [sp, #184]
  424c80:	orr	w6, w1, w0
  424c84:	adrp	x0, 42d000 <__func__.11730+0x328>
  424c88:	add	x1, x0, #0x3e3
  424c8c:	adrp	x0, 42d000 <__func__.11730+0x328>
  424c90:	add	x5, x0, #0x408
  424c94:	adrp	x0, 42d000 <__func__.11730+0x328>
  424c98:	add	x4, x0, #0x9e8
  424c9c:	mov	w3, #0x7d                  	// #125
  424ca0:	mov	x2, x1
  424ca4:	ldr	w1, [sp, #188]
  424ca8:	mov	w0, w6
  424cac:	bl	406590 <log_internal_realm@plt>
  424cb0:	b	42550c <server_process_entry+0x968>
  424cb4:	ldr	w0, [sp, #188]
  424cb8:	cmp	w0, #0x0
  424cbc:	b	42550c <server_process_entry+0x968>
  424cc0:	ldr	x1, [sp, #280]
  424cc4:	ldr	x0, [sp, #272]
  424cc8:	cmp	x1, x0
  424ccc:	b.ne	424ce8 <server_process_entry+0x144>  // b.any
  424cd0:	ldr	x0, [sp, #56]
  424cd4:	ldr	x0, [x0]
  424cd8:	sub	x1, x0, #0x1
  424cdc:	ldr	x0, [sp, #56]
  424ce0:	str	x1, [x0]
  424ce4:	b	42550c <server_process_entry+0x968>
  424ce8:	strb	wzr, [sp, #87]
  424cec:	ldr	x0, [sp, #272]
  424cf0:	ldrb	w0, [x0]
  424cf4:	cmp	w0, #0x23
  424cf8:	b.eq	424d04 <server_process_entry+0x160>  // b.none
  424cfc:	cmp	w0, #0x2e
  424d00:	b.ne	424d0c <server_process_entry+0x168>  // b.any
  424d04:	mov	w0, #0x1                   	// #1
  424d08:	strb	w0, [sp, #87]
  424d0c:	nop
  424d10:	ldrb	w0, [sp, #87]
  424d14:	cmp	w0, #0x0
  424d18:	b.eq	424d50 <server_process_entry+0x1ac>  // b.none
  424d1c:	ldr	x0, [sp, #56]
  424d20:	ldr	x0, [x0]
  424d24:	ldr	x2, [sp, #280]
  424d28:	ldr	x1, [sp, #272]
  424d2c:	sub	x1, x2, x1
  424d30:	sub	x0, x0, x1
  424d34:	sub	x1, x0, #0x1
  424d38:	ldr	x0, [sp, #56]
  424d3c:	str	x1, [x0]
  424d40:	ldr	x0, [sp, #280]
  424d44:	add	x0, x0, #0x1
  424d48:	str	x0, [sp, #272]
  424d4c:	b	4254fc <server_process_entry+0x958>
  424d50:	ldr	x0, [sp, #240]
  424d54:	cmp	x0, #0x400
  424d58:	b.ls	424dd4 <server_process_entry+0x230>  // b.plast
  424d5c:	mov	w0, #0x7                   	// #7
  424d60:	str	w0, [sp, #172]
  424d64:	str	wzr, [sp, #176]
  424d68:	str	wzr, [sp, #180]
  424d6c:	ldr	w0, [sp, #180]
  424d70:	bl	406c30 <log_get_max_level_realm@plt>
  424d74:	mov	w1, w0
  424d78:	ldr	w0, [sp, #172]
  424d7c:	and	w0, w0, #0x7
  424d80:	cmp	w1, w0
  424d84:	b.lt	424dc8 <server_process_entry+0x224>  // b.tstop
  424d88:	ldr	w0, [sp, #180]
  424d8c:	lsl	w1, w0, #10
  424d90:	ldr	w0, [sp, #172]
  424d94:	orr	w6, w1, w0
  424d98:	adrp	x0, 42d000 <__func__.11730+0x328>
  424d9c:	add	x1, x0, #0x3e3
  424da0:	adrp	x0, 42d000 <__func__.11730+0x328>
  424da4:	add	x5, x0, #0x438
  424da8:	adrp	x0, 42d000 <__func__.11730+0x328>
  424dac:	add	x4, x0, #0x9e8
  424db0:	mov	w3, #0x90                  	// #144
  424db4:	mov	x2, x1
  424db8:	ldr	w1, [sp, #176]
  424dbc:	mov	w0, w6
  424dc0:	bl	406590 <log_internal_realm@plt>
  424dc4:	b	425748 <server_process_entry+0xba4>
  424dc8:	ldr	w0, [sp, #176]
  424dcc:	cmp	w0, #0x0
  424dd0:	b	425748 <server_process_entry+0xba4>
  424dd4:	ldr	x0, [sp, #48]
  424dd8:	bl	424668 <client_context_extra_fields_n_iovec>
  424ddc:	mov	x1, x0
  424de0:	ldr	x0, [sp, #240]
  424de4:	add	x0, x1, x0
  424de8:	add	x2, x0, #0x2a
  424dec:	add	x1, sp, #0xd0
  424df0:	add	x0, sp, #0xe8
  424df4:	mov	x3, #0x10                  	// #16
  424df8:	bl	406160 <greedy_realloc@plt>
  424dfc:	cmp	x0, #0x0
  424e00:	b.ne	424e28 <server_process_entry+0x284>  // b.any
  424e04:	adrp	x0, 42d000 <__func__.11730+0x328>
  424e08:	add	x1, x0, #0x3e3
  424e0c:	adrp	x0, 42d000 <__func__.11730+0x328>
  424e10:	add	x3, x0, #0x9e8
  424e14:	mov	w2, #0x99                  	// #153
  424e18:	mov	w0, #0x0                   	// #0
  424e1c:	bl	406b70 <log_oom_internal@plt>
  424e20:	str	w0, [sp, #96]
  424e24:	b	425748 <server_process_entry+0xba4>
  424e28:	ldr	x1, [sp, #280]
  424e2c:	ldr	x0, [sp, #272]
  424e30:	sub	x0, x1, x0
  424e34:	mov	x2, x0
  424e38:	mov	w1, #0x3d                  	// #61
  424e3c:	ldr	x0, [sp, #272]
  424e40:	bl	406870 <memchr@plt>
  424e44:	str	x0, [sp, #288]
  424e48:	ldr	x0, [sp, #288]
  424e4c:	cmp	x0, #0x0
  424e50:	b.eq	425068 <server_process_entry+0x4c4>  // b.none
  424e54:	ldr	x1, [sp, #288]
  424e58:	ldr	x0, [sp, #272]
  424e5c:	sub	x0, x1, x0
  424e60:	mov	w2, #0x0                   	// #0
  424e64:	mov	x1, x0
  424e68:	ldr	x0, [sp, #272]
  424e6c:	bl	405e10 <journal_field_valid@plt>
  424e70:	and	w0, w0, #0xff
  424e74:	cmp	w0, #0x0
  424e78:	b.eq	425034 <server_process_entry+0x490>  // b.none
  424e7c:	ldr	x1, [sp, #280]
  424e80:	ldr	x0, [sp, #272]
  424e84:	sub	x0, x1, x0
  424e88:	str	x0, [sp, #320]
  424e8c:	ldr	x1, [sp, #320]
  424e90:	mov	x0, #0x30000000            	// #805306368
  424e94:	cmp	x1, x0
  424e98:	b.ls	424f18 <server_process_entry+0x374>  // b.plast
  424e9c:	mov	w0, #0x7                   	// #7
  424ea0:	str	w0, [sp, #160]
  424ea4:	str	wzr, [sp, #164]
  424ea8:	str	wzr, [sp, #168]
  424eac:	ldr	w0, [sp, #168]
  424eb0:	bl	406c30 <log_get_max_level_realm@plt>
  424eb4:	mov	w1, w0
  424eb8:	ldr	w0, [sp, #160]
  424ebc:	and	w0, w0, #0x7
  424ec0:	cmp	w1, w0
  424ec4:	b.lt	424f0c <server_process_entry+0x368>  // b.tstop
  424ec8:	ldr	w0, [sp, #168]
  424ecc:	lsl	w1, w0, #10
  424ed0:	ldr	w0, [sp, #160]
  424ed4:	orr	w7, w1, w0
  424ed8:	adrp	x0, 42d000 <__func__.11730+0x328>
  424edc:	add	x1, x0, #0x3e3
  424ee0:	ldr	x6, [sp, #320]
  424ee4:	adrp	x0, 42d000 <__func__.11730+0x328>
  424ee8:	add	x5, x0, #0x480
  424eec:	adrp	x0, 42d000 <__func__.11730+0x328>
  424ef0:	add	x4, x0, #0x9e8
  424ef4:	mov	w3, #0xa4                  	// #164
  424ef8:	mov	x2, x1
  424efc:	ldr	w1, [sp, #164]
  424f00:	mov	w0, w7
  424f04:	bl	406590 <log_internal_realm@plt>
  424f08:	b	425748 <server_process_entry+0xba4>
  424f0c:	ldr	w0, [sp, #164]
  424f10:	cmp	w0, #0x0
  424f14:	b	425748 <server_process_entry+0xba4>
  424f18:	ldr	x1, [sp, #264]
  424f1c:	ldr	x0, [sp, #320]
  424f20:	add	x1, x1, x0
  424f24:	ldr	x0, [sp, #240]
  424f28:	add	x0, x1, x0
  424f2c:	add	x1, x0, #0x1
  424f30:	mov	x0, #0x30200000            	// #807403520
  424f34:	cmp	x1, x0
  424f38:	b.ls	424fcc <server_process_entry+0x428>  // b.plast
  424f3c:	mov	w0, #0x7                   	// #7
  424f40:	str	w0, [sp, #148]
  424f44:	str	wzr, [sp, #152]
  424f48:	str	wzr, [sp, #156]
  424f4c:	ldr	w0, [sp, #156]
  424f50:	bl	406c30 <log_get_max_level_realm@plt>
  424f54:	mov	w1, w0
  424f58:	ldr	w0, [sp, #148]
  424f5c:	and	w0, w0, #0x7
  424f60:	cmp	w1, w0
  424f64:	b.lt	424fc0 <server_process_entry+0x41c>  // b.tstop
  424f68:	ldr	w0, [sp, #156]
  424f6c:	lsl	w1, w0, #10
  424f70:	ldr	w0, [sp, #148]
  424f74:	orr	w8, w1, w0
  424f78:	adrp	x0, 42d000 <__func__.11730+0x328>
  424f7c:	add	x2, x0, #0x3e3
  424f80:	ldr	x1, [sp, #264]
  424f84:	ldr	x0, [sp, #320]
  424f88:	add	x1, x1, x0
  424f8c:	ldr	x0, [sp, #240]
  424f90:	add	x0, x0, #0x1
  424f94:	mov	x7, x0
  424f98:	mov	x6, x1
  424f9c:	adrp	x0, 42d000 <__func__.11730+0x328>
  424fa0:	add	x5, x0, #0x4c0
  424fa4:	adrp	x0, 42d000 <__func__.11730+0x328>
  424fa8:	add	x4, x0, #0x9e8
  424fac:	mov	w3, #0xa9                  	// #169
  424fb0:	ldr	w1, [sp, #152]
  424fb4:	mov	w0, w8
  424fb8:	bl	406590 <log_internal_realm@plt>
  424fbc:	b	425748 <server_process_entry+0xba4>
  424fc0:	ldr	w0, [sp, #152]
  424fc4:	cmp	w0, #0x0
  424fc8:	b	425748 <server_process_entry+0xba4>
  424fcc:	ldr	x1, [sp, #232]
  424fd0:	ldr	x0, [sp, #240]
  424fd4:	add	x2, x0, #0x1
  424fd8:	str	x2, [sp, #240]
  424fdc:	lsl	x0, x0, #4
  424fe0:	add	x0, x1, x0
  424fe4:	ldr	x1, [sp, #272]
  424fe8:	str	x1, [x0]
  424fec:	ldr	x1, [sp, #320]
  424ff0:	str	x1, [x0, #8]
  424ff4:	ldr	x1, [sp, #264]
  424ff8:	ldr	x0, [sp, #320]
  424ffc:	add	x0, x1, x0
  425000:	str	x0, [sp, #264]
  425004:	add	x3, sp, #0x5c
  425008:	add	x2, sp, #0xe0
  42500c:	add	x1, sp, #0xd8
  425010:	add	x0, sp, #0x58
  425014:	mov	x6, x3
  425018:	mov	x5, x2
  42501c:	mov	x4, x1
  425020:	mov	x3, x0
  425024:	ldr	x2, [sp, #40]
  425028:	ldr	x1, [sp, #320]
  42502c:	ldr	x0, [sp, #272]
  425030:	bl	424820 <server_process_entry_meta>
  425034:	ldr	x0, [sp, #56]
  425038:	ldr	x0, [x0]
  42503c:	ldr	x2, [sp, #280]
  425040:	ldr	x1, [sp, #272]
  425044:	sub	x1, x2, x1
  425048:	sub	x0, x0, x1
  42504c:	sub	x1, x0, #0x1
  425050:	ldr	x0, [sp, #56]
  425054:	str	x1, [x0]
  425058:	ldr	x0, [sp, #280]
  42505c:	add	x0, x0, #0x1
  425060:	str	x0, [sp, #272]
  425064:	b	4254fc <server_process_entry+0x958>
  425068:	ldr	x0, [sp, #56]
  42506c:	ldr	x1, [x0]
  425070:	ldr	x2, [sp, #280]
  425074:	ldr	x0, [sp, #272]
  425078:	sub	x0, x2, x0
  42507c:	add	x0, x0, #0xa
  425080:	cmp	x1, x0
  425084:	b.cs	425100 <server_process_entry+0x55c>  // b.hs, b.nlast
  425088:	mov	w0, #0x7                   	// #7
  42508c:	str	w0, [sp, #136]
  425090:	str	wzr, [sp, #140]
  425094:	str	wzr, [sp, #144]
  425098:	ldr	w0, [sp, #144]
  42509c:	bl	406c30 <log_get_max_level_realm@plt>
  4250a0:	mov	w1, w0
  4250a4:	ldr	w0, [sp, #136]
  4250a8:	and	w0, w0, #0x7
  4250ac:	cmp	w1, w0
  4250b0:	b.lt	4250f4 <server_process_entry+0x550>  // b.tstop
  4250b4:	ldr	w0, [sp, #144]
  4250b8:	lsl	w1, w0, #10
  4250bc:	ldr	w0, [sp, #136]
  4250c0:	orr	w6, w1, w0
  4250c4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4250c8:	add	x1, x0, #0x3e3
  4250cc:	adrp	x0, 42d000 <__func__.11730+0x328>
  4250d0:	add	x5, x0, #0x510
  4250d4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4250d8:	add	x4, x0, #0x9e8
  4250dc:	mov	w3, #0xc2                  	// #194
  4250e0:	mov	x2, x1
  4250e4:	ldr	w1, [sp, #140]
  4250e8:	mov	w0, w6
  4250ec:	bl	406590 <log_internal_realm@plt>
  4250f0:	b	42550c <server_process_entry+0x968>
  4250f4:	ldr	w0, [sp, #140]
  4250f8:	cmp	w0, #0x0
  4250fc:	b	42550c <server_process_entry+0x968>
  425100:	ldr	x0, [sp, #280]
  425104:	add	x0, x0, #0x1
  425108:	bl	4247b8 <unaligned_read_le64>
  42510c:	str	x0, [sp, #296]
  425110:	ldr	x1, [sp, #296]
  425114:	mov	x0, #0x30000000            	// #805306368
  425118:	cmp	x1, x0
  42511c:	b.ls	42519c <server_process_entry+0x5f8>  // b.plast
  425120:	mov	w0, #0x7                   	// #7
  425124:	str	w0, [sp, #124]
  425128:	str	wzr, [sp, #128]
  42512c:	str	wzr, [sp, #132]
  425130:	ldr	w0, [sp, #132]
  425134:	bl	406c30 <log_get_max_level_realm@plt>
  425138:	mov	w1, w0
  42513c:	ldr	w0, [sp, #124]
  425140:	and	w0, w0, #0x7
  425144:	cmp	w1, w0
  425148:	b.lt	425190 <server_process_entry+0x5ec>  // b.tstop
  42514c:	ldr	w0, [sp, #132]
  425150:	lsl	w1, w0, #10
  425154:	ldr	w0, [sp, #124]
  425158:	orr	w7, w1, w0
  42515c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425160:	add	x1, x0, #0x3e3
  425164:	ldr	x6, [sp, #296]
  425168:	adrp	x0, 42d000 <__func__.11730+0x328>
  42516c:	add	x5, x0, #0x538
  425170:	adrp	x0, 42d000 <__func__.11730+0x328>
  425174:	add	x4, x0, #0x9e8
  425178:	mov	w3, #0xc8                  	// #200
  42517c:	mov	x2, x1
  425180:	ldr	w1, [sp, #128]
  425184:	mov	w0, w7
  425188:	bl	406590 <log_internal_realm@plt>
  42518c:	b	425748 <server_process_entry+0xba4>
  425190:	ldr	w0, [sp, #128]
  425194:	cmp	w0, #0x0
  425198:	b	425748 <server_process_entry+0xba4>
  42519c:	ldr	x1, [sp, #280]
  4251a0:	ldr	x0, [sp, #272]
  4251a4:	sub	x0, x1, x0
  4251a8:	mov	x1, x0
  4251ac:	ldr	x0, [sp, #296]
  4251b0:	add	x0, x1, x0
  4251b4:	add	x0, x0, #0x1
  4251b8:	str	x0, [sp, #304]
  4251bc:	ldr	x1, [sp, #264]
  4251c0:	ldr	x0, [sp, #304]
  4251c4:	add	x1, x1, x0
  4251c8:	ldr	x0, [sp, #240]
  4251cc:	add	x0, x1, x0
  4251d0:	add	x1, x0, #0x1
  4251d4:	mov	x0, #0x30200000            	// #807403520
  4251d8:	cmp	x1, x0
  4251dc:	b.ls	425270 <server_process_entry+0x6cc>  // b.plast
  4251e0:	mov	w0, #0x7                   	// #7
  4251e4:	str	w0, [sp, #112]
  4251e8:	str	wzr, [sp, #116]
  4251ec:	str	wzr, [sp, #120]
  4251f0:	ldr	w0, [sp, #120]
  4251f4:	bl	406c30 <log_get_max_level_realm@plt>
  4251f8:	mov	w1, w0
  4251fc:	ldr	w0, [sp, #112]
  425200:	and	w0, w0, #0x7
  425204:	cmp	w1, w0
  425208:	b.lt	425264 <server_process_entry+0x6c0>  // b.tstop
  42520c:	ldr	w0, [sp, #120]
  425210:	lsl	w1, w0, #10
  425214:	ldr	w0, [sp, #112]
  425218:	orr	w8, w1, w0
  42521c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425220:	add	x2, x0, #0x3e3
  425224:	ldr	x1, [sp, #264]
  425228:	ldr	x0, [sp, #304]
  42522c:	add	x1, x1, x0
  425230:	ldr	x0, [sp, #240]
  425234:	add	x0, x0, #0x1
  425238:	mov	x7, x0
  42523c:	mov	x6, x1
  425240:	adrp	x0, 42d000 <__func__.11730+0x328>
  425244:	add	x5, x0, #0x580
  425248:	adrp	x0, 42d000 <__func__.11730+0x328>
  42524c:	add	x4, x0, #0x9e8
  425250:	mov	w3, #0xce                  	// #206
  425254:	ldr	w1, [sp, #116]
  425258:	mov	w0, w8
  42525c:	bl	406590 <log_internal_realm@plt>
  425260:	b	425748 <server_process_entry+0xba4>
  425264:	ldr	w0, [sp, #116]
  425268:	cmp	w0, #0x0
  42526c:	b	425748 <server_process_entry+0xba4>
  425270:	ldr	x0, [sp, #56]
  425274:	ldr	x1, [x0]
  425278:	ldr	x2, [sp, #280]
  42527c:	ldr	x0, [sp, #272]
  425280:	sub	x0, x2, x0
  425284:	mov	x2, x0
  425288:	ldr	x0, [sp, #296]
  42528c:	add	x0, x2, x0
  425290:	add	x0, x0, #0xa
  425294:	cmp	x1, x0
  425298:	b.cc	4252b8 <server_process_entry+0x714>  // b.lo, b.ul, b.last
  42529c:	ldr	x0, [sp, #296]
  4252a0:	add	x0, x0, #0x9
  4252a4:	ldr	x1, [sp, #280]
  4252a8:	add	x0, x1, x0
  4252ac:	ldrb	w0, [x0]
  4252b0:	cmp	w0, #0xa
  4252b4:	b.eq	425330 <server_process_entry+0x78c>  // b.none
  4252b8:	mov	w0, #0x7                   	// #7
  4252bc:	str	w0, [sp, #100]
  4252c0:	str	wzr, [sp, #104]
  4252c4:	str	wzr, [sp, #108]
  4252c8:	ldr	w0, [sp, #108]
  4252cc:	bl	406c30 <log_get_max_level_realm@plt>
  4252d0:	mov	w1, w0
  4252d4:	ldr	w0, [sp, #100]
  4252d8:	and	w0, w0, #0x7
  4252dc:	cmp	w1, w0
  4252e0:	b.lt	425324 <server_process_entry+0x780>  // b.tstop
  4252e4:	ldr	w0, [sp, #108]
  4252e8:	lsl	w1, w0, #10
  4252ec:	ldr	w0, [sp, #100]
  4252f0:	orr	w6, w1, w0
  4252f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4252f8:	add	x1, x0, #0x3e3
  4252fc:	adrp	x0, 42d000 <__func__.11730+0x328>
  425300:	add	x5, x0, #0x510
  425304:	adrp	x0, 42d000 <__func__.11730+0x328>
  425308:	add	x4, x0, #0x9e8
  42530c:	mov	w3, #0xd5                  	// #213
  425310:	mov	x2, x1
  425314:	ldr	w1, [sp, #104]
  425318:	mov	w0, w6
  42531c:	bl	406590 <log_internal_realm@plt>
  425320:	b	42550c <server_process_entry+0x968>
  425324:	ldr	w0, [sp, #104]
  425328:	cmp	w0, #0x0
  42532c:	b	42550c <server_process_entry+0x968>
  425330:	ldr	x0, [sp, #304]
  425334:	bl	406520 <malloc@plt>
  425338:	str	x0, [sp, #312]
  42533c:	ldr	x0, [sp, #312]
  425340:	cmp	x0, #0x0
  425344:	b.ne	425368 <server_process_entry+0x7c4>  // b.any
  425348:	adrp	x0, 42d000 <__func__.11730+0x328>
  42534c:	add	x1, x0, #0x3e3
  425350:	adrp	x0, 42d000 <__func__.11730+0x328>
  425354:	add	x3, x0, #0x9e8
  425358:	mov	w2, #0xdb                  	// #219
  42535c:	mov	w0, #0x0                   	// #0
  425360:	bl	406b70 <log_oom_internal@plt>
  425364:	b	42550c <server_process_entry+0x968>
  425368:	ldr	x1, [sp, #280]
  42536c:	ldr	x0, [sp, #272]
  425370:	sub	x0, x1, x0
  425374:	mov	x2, x0
  425378:	ldr	x1, [sp, #272]
  42537c:	ldr	x0, [sp, #312]
  425380:	bl	405e90 <memcpy@plt>
  425384:	ldr	x1, [sp, #280]
  425388:	ldr	x0, [sp, #272]
  42538c:	sub	x0, x1, x0
  425390:	mov	x1, x0
  425394:	ldr	x0, [sp, #312]
  425398:	add	x0, x0, x1
  42539c:	mov	w1, #0x3d                  	// #61
  4253a0:	strb	w1, [x0]
  4253a4:	ldr	x1, [sp, #280]
  4253a8:	ldr	x0, [sp, #272]
  4253ac:	sub	x0, x1, x0
  4253b0:	add	x0, x0, #0x1
  4253b4:	ldr	x1, [sp, #312]
  4253b8:	add	x3, x1, x0
  4253bc:	ldr	x0, [sp, #280]
  4253c0:	add	x0, x0, #0x9
  4253c4:	ldr	x2, [sp, #296]
  4253c8:	mov	x1, x0
  4253cc:	mov	x0, x3
  4253d0:	bl	405e90 <memcpy@plt>
  4253d4:	ldr	x1, [sp, #280]
  4253d8:	ldr	x0, [sp, #272]
  4253dc:	sub	x0, x1, x0
  4253e0:	mov	w2, #0x0                   	// #0
  4253e4:	mov	x1, x0
  4253e8:	ldr	x0, [sp, #272]
  4253ec:	bl	405e10 <journal_field_valid@plt>
  4253f0:	and	w0, w0, #0xff
  4253f4:	cmp	w0, #0x0
  4253f8:	b.eq	4254b0 <server_process_entry+0x90c>  // b.none
  4253fc:	ldr	x1, [sp, #232]
  425400:	ldr	x0, [sp, #240]
  425404:	lsl	x0, x0, #4
  425408:	add	x0, x1, x0
  42540c:	ldr	x2, [sp, #280]
  425410:	ldr	x1, [sp, #272]
  425414:	sub	x1, x2, x1
  425418:	mov	x2, x1
  42541c:	ldr	x1, [sp, #296]
  425420:	add	x1, x2, x1
  425424:	add	x1, x1, #0x1
  425428:	ldr	x2, [sp, #312]
  42542c:	str	x2, [x0]
  425430:	str	x1, [x0, #8]
  425434:	ldr	x1, [sp, #232]
  425438:	ldr	x0, [sp, #240]
  42543c:	lsl	x0, x0, #4
  425440:	add	x0, x1, x0
  425444:	ldr	x0, [x0, #8]
  425448:	ldr	x1, [sp, #264]
  42544c:	add	x0, x1, x0
  425450:	str	x0, [sp, #264]
  425454:	ldr	x0, [sp, #240]
  425458:	add	x0, x0, #0x1
  42545c:	str	x0, [sp, #240]
  425460:	ldr	x1, [sp, #280]
  425464:	ldr	x0, [sp, #272]
  425468:	sub	x0, x1, x0
  42546c:	mov	x1, x0
  425470:	ldr	x0, [sp, #296]
  425474:	add	x0, x1, x0
  425478:	add	x0, x0, #0x1
  42547c:	add	x4, sp, #0x5c
  425480:	add	x3, sp, #0xe0
  425484:	add	x2, sp, #0xd8
  425488:	add	x1, sp, #0x58
  42548c:	mov	x6, x4
  425490:	mov	x5, x3
  425494:	mov	x4, x2
  425498:	mov	x3, x1
  42549c:	ldr	x2, [sp, #40]
  4254a0:	mov	x1, x0
  4254a4:	ldr	x0, [sp, #312]
  4254a8:	bl	424820 <server_process_entry_meta>
  4254ac:	b	4254b8 <server_process_entry+0x914>
  4254b0:	ldr	x0, [sp, #312]
  4254b4:	bl	406930 <free@plt>
  4254b8:	ldr	x0, [sp, #56]
  4254bc:	ldr	x1, [x0]
  4254c0:	ldr	x2, [sp, #280]
  4254c4:	ldr	x0, [sp, #272]
  4254c8:	sub	x0, x2, x0
  4254cc:	mov	x2, x0
  4254d0:	ldr	x0, [sp, #296]
  4254d4:	add	x0, x2, x0
  4254d8:	sub	x0, x1, x0
  4254dc:	sub	x1, x0, #0xa
  4254e0:	ldr	x0, [sp, #56]
  4254e4:	str	x1, [x0]
  4254e8:	ldr	x0, [sp, #296]
  4254ec:	add	x0, x0, #0xa
  4254f0:	ldr	x1, [sp, #280]
  4254f4:	add	x0, x1, x0
  4254f8:	str	x0, [sp, #272]
  4254fc:	ldr	x0, [sp, #56]
  425500:	ldr	x0, [x0]
  425504:	cmp	x0, #0x0
  425508:	b.ne	424c20 <server_process_entry+0x7c>  // b.any
  42550c:	ldr	x0, [sp, #240]
  425510:	cmp	x0, #0x0
  425514:	b.eq	42573c <server_process_entry+0xb98>  // b.none
  425518:	ldr	x0, [sp, #240]
  42551c:	add	x1, x0, #0x1
  425520:	str	x1, [sp, #240]
  425524:	str	x0, [sp, #256]
  425528:	ldr	x1, [sp, #232]
  42552c:	ldr	x0, [sp, #256]
  425530:	lsl	x0, x0, #4
  425534:	add	x0, x1, x0
  425538:	adrp	x1, 42d000 <__func__.11730+0x328>
  42553c:	add	x1, x1, #0x5c8
  425540:	str	x1, [x0]
  425544:	mov	x1, #0x12                  	// #18
  425548:	str	x1, [x0, #8]
  42554c:	ldr	x0, [sp, #264]
  425550:	add	x0, x0, #0x12
  425554:	str	x0, [sp, #264]
  425558:	ldr	x1, [sp, #264]
  42555c:	ldr	x0, [sp, #240]
  425560:	add	x0, x1, x0
  425564:	add	x1, x0, #0x1
  425568:	mov	x0, #0x30200000            	// #807403520
  42556c:	cmp	x1, x0
  425570:	b.ls	4255f4 <server_process_entry+0xa50>  // b.plast
  425574:	mov	w0, #0x7                   	// #7
  425578:	str	w0, [sp, #196]
  42557c:	str	wzr, [sp, #200]
  425580:	str	wzr, [sp, #204]
  425584:	ldr	w0, [sp, #204]
  425588:	bl	406c30 <log_get_max_level_realm@plt>
  42558c:	mov	w1, w0
  425590:	ldr	w0, [sp, #196]
  425594:	and	w0, w0, #0x7
  425598:	cmp	w1, w0
  42559c:	b.lt	4255e8 <server_process_entry+0xa44>  // b.tstop
  4255a0:	ldr	w0, [sp, #204]
  4255a4:	lsl	w1, w0, #10
  4255a8:	ldr	w0, [sp, #196]
  4255ac:	orr	w8, w1, w0
  4255b0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4255b4:	add	x1, x0, #0x3e3
  4255b8:	ldr	x7, [sp, #264]
  4255bc:	ldr	x6, [sp, #240]
  4255c0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4255c4:	add	x5, x0, #0x5e0
  4255c8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4255cc:	add	x4, x0, #0x9e8
  4255d0:	mov	w3, #0xfd                  	// #253
  4255d4:	mov	x2, x1
  4255d8:	ldr	w1, [sp, #200]
  4255dc:	mov	w0, w8
  4255e0:	bl	406590 <log_internal_realm@plt>
  4255e4:	b	425748 <server_process_entry+0xba4>
  4255e8:	ldr	w0, [sp, #200]
  4255ec:	cmp	w0, #0x0
  4255f0:	b	425748 <server_process_entry+0xba4>
  4255f4:	str	wzr, [sp, #96]
  4255f8:	ldr	w0, [sp, #88]
  4255fc:	mov	w1, w0
  425600:	ldr	x0, [sp, #48]
  425604:	bl	424694 <client_context_test_priority>
  425608:	and	w0, w0, #0xff
  42560c:	eor	w0, w0, #0x1
  425610:	and	w0, w0, #0xff
  425614:	cmp	w0, #0x0
  425618:	b.ne	425744 <server_process_entry+0xba0>  // b.any
  42561c:	ldr	x0, [sp, #224]
  425620:	cmp	x0, #0x0
  425624:	b.eq	425704 <server_process_entry+0xb60>  // b.none
  425628:	ldr	x0, [sp, #72]
  42562c:	ldrb	w0, [x0, #459]
  425630:	cmp	w0, #0x0
  425634:	b.eq	425668 <server_process_entry+0xac4>  // b.none
  425638:	ldr	w0, [sp, #88]
  42563c:	bl	41c8a8 <syslog_fixup_facility>
  425640:	mov	w6, w0
  425644:	ldr	x0, [sp, #216]
  425648:	ldr	x1, [sp, #224]
  42564c:	ldr	x5, [sp, #32]
  425650:	ldr	x4, [sp, #40]
  425654:	mov	x3, x1
  425658:	mov	x2, x0
  42565c:	mov	w1, w6
  425660:	ldr	x0, [sp, #72]
  425664:	bl	41c3a0 <server_forward_syslog>
  425668:	ldr	x0, [sp, #72]
  42566c:	ldrb	w0, [x0, #458]
  425670:	cmp	w0, #0x0
  425674:	b.eq	42569c <server_process_entry+0xaf8>  // b.none
  425678:	ldr	w0, [sp, #88]
  42567c:	ldr	x1, [sp, #216]
  425680:	ldr	x2, [sp, #224]
  425684:	ldr	x4, [sp, #40]
  425688:	mov	x3, x2
  42568c:	mov	x2, x1
  425690:	mov	w1, w0
  425694:	ldr	x0, [sp, #72]
  425698:	bl	407374 <server_forward_kmsg>
  42569c:	ldr	x0, [sp, #72]
  4256a0:	ldrb	w0, [x0, #460]
  4256a4:	cmp	w0, #0x0
  4256a8:	b.eq	4256d0 <server_process_entry+0xb2c>  // b.none
  4256ac:	ldr	w0, [sp, #88]
  4256b0:	ldr	x1, [sp, #216]
  4256b4:	ldr	x2, [sp, #224]
  4256b8:	ldr	x4, [sp, #40]
  4256bc:	mov	x3, x2
  4256c0:	mov	x2, x1
  4256c4:	mov	w1, w0
  4256c8:	ldr	x0, [sp, #72]
  4256cc:	bl	420d20 <server_forward_console>
  4256d0:	ldr	x0, [sp, #72]
  4256d4:	ldrb	w0, [x0, #461]
  4256d8:	cmp	w0, #0x0
  4256dc:	b.eq	425704 <server_process_entry+0xb60>  // b.none
  4256e0:	ldr	w0, [sp, #88]
  4256e4:	ldr	x1, [sp, #216]
  4256e8:	ldr	x2, [sp, #224]
  4256ec:	ldr	x4, [sp, #40]
  4256f0:	mov	x3, x2
  4256f4:	mov	x2, x1
  4256f8:	mov	w1, w0
  4256fc:	ldr	x0, [sp, #72]
  425700:	bl	41e374 <server_forward_wall>
  425704:	ldr	x0, [sp, #232]
  425708:	ldr	x1, [sp, #208]
  42570c:	ldr	w2, [sp, #88]
  425710:	ldr	w3, [sp, #92]
  425714:	mov	w7, w3
  425718:	mov	w6, w2
  42571c:	ldr	x5, [sp, #32]
  425720:	ldr	x4, [sp, #48]
  425724:	mov	x3, x1
  425728:	ldr	x2, [sp, #240]
  42572c:	mov	x1, x0
  425730:	ldr	x0, [sp, #72]
  425734:	bl	411768 <server_dispatch_message>
  425738:	b	425748 <server_process_entry+0xba4>
  42573c:	nop
  425740:	b	425748 <server_process_entry+0xba4>
  425744:	nop
  425748:	str	xzr, [sp, #248]
  42574c:	b	4257d8 <server_process_entry+0xc34>
  425750:	ldr	x1, [sp, #248]
  425754:	ldr	x0, [sp, #256]
  425758:	cmp	x1, x0
  42575c:	b.eq	4257c8 <server_process_entry+0xc24>  // b.none
  425760:	ldr	x1, [sp, #232]
  425764:	ldr	x0, [sp, #248]
  425768:	lsl	x0, x0, #4
  42576c:	add	x0, x1, x0
  425770:	ldr	x0, [x0]
  425774:	ldr	x1, [sp, #64]
  425778:	cmp	x1, x0
  42577c:	b.hi	4257ac <server_process_entry+0xc08>  // b.pmore
  425780:	ldr	x1, [sp, #232]
  425784:	ldr	x0, [sp, #248]
  425788:	lsl	x0, x0, #4
  42578c:	add	x0, x1, x0
  425790:	ldr	x1, [x0]
  425794:	ldr	x0, [sp, #56]
  425798:	ldr	x0, [x0]
  42579c:	ldr	x2, [sp, #272]
  4257a0:	add	x0, x2, x0
  4257a4:	cmp	x1, x0
  4257a8:	b.cc	4257cc <server_process_entry+0xc28>  // b.lo, b.ul, b.last
  4257ac:	ldr	x1, [sp, #232]
  4257b0:	ldr	x0, [sp, #248]
  4257b4:	lsl	x0, x0, #4
  4257b8:	add	x0, x1, x0
  4257bc:	ldr	x0, [x0]
  4257c0:	bl	406930 <free@plt>
  4257c4:	b	4257cc <server_process_entry+0xc28>
  4257c8:	nop
  4257cc:	ldr	x0, [sp, #248]
  4257d0:	add	x0, x0, #0x1
  4257d4:	str	x0, [sp, #248]
  4257d8:	ldr	x1, [sp, #248]
  4257dc:	ldr	x0, [sp, #240]
  4257e0:	cmp	x1, x0
  4257e4:	b.cc	425750 <server_process_entry+0xbac>  // b.lo, b.ul, b.last
  4257e8:	ldr	x0, [sp, #232]
  4257ec:	bl	406930 <free@plt>
  4257f0:	ldr	x0, [sp, #216]
  4257f4:	bl	406930 <free@plt>
  4257f8:	ldr	x0, [sp, #224]
  4257fc:	bl	406930 <free@plt>
  425800:	ldr	w0, [sp, #96]
  425804:	mov	w1, w0
  425808:	adrp	x0, 441000 <wordlist.9471+0x208>
  42580c:	ldr	x0, [x0, #4064]
  425810:	ldr	x2, [sp, #328]
  425814:	ldr	x0, [x0]
  425818:	eor	x0, x2, x0
  42581c:	cmp	x0, #0x0
  425820:	b.eq	425828 <server_process_entry+0xc84>  // b.none
  425824:	bl	4063e0 <__stack_chk_fail@plt>
  425828:	mov	w0, w1
  42582c:	ldp	x29, x30, [sp], #336
  425830:	ret

0000000000425834 <server_process_native_message>:
  425834:	stp	x29, x30, [sp, #-128]!
  425838:	mov	x29, sp
  42583c:	str	x0, [sp, #72]
  425840:	str	x1, [sp, #64]
  425844:	str	x2, [sp, #56]
  425848:	str	x3, [sp, #48]
  42584c:	str	x4, [sp, #40]
  425850:	str	x5, [sp, #32]
  425854:	str	x6, [sp, #24]
  425858:	adrp	x0, 441000 <wordlist.9471+0x208>
  42585c:	ldr	x0, [x0, #4064]
  425860:	ldr	x1, [x0]
  425864:	str	x1, [sp, #120]
  425868:	mov	x1, #0x0                   	// #0
  42586c:	ldr	x0, [sp, #56]
  425870:	str	x0, [sp, #104]
  425874:	str	xzr, [sp, #112]
  425878:	ldr	x0, [sp, #72]
  42587c:	cmp	x0, #0x0
  425880:	cset	w0, eq  // eq = none
  425884:	and	w0, w0, #0xff
  425888:	and	x0, x0, #0xff
  42588c:	cmp	x0, #0x0
  425890:	b.eq	4258bc <server_process_native_message+0x88>  // b.none
  425894:	adrp	x0, 42d000 <__func__.11730+0x328>
  425898:	add	x1, x0, #0x3e3
  42589c:	adrp	x0, 42d000 <__func__.11730+0x328>
  4258a0:	add	x4, x0, #0xa00
  4258a4:	mov	w3, #0x132                 	// #306
  4258a8:	mov	x2, x1
  4258ac:	adrp	x0, 42d000 <__func__.11730+0x328>
  4258b0:	add	x1, x0, #0x620
  4258b4:	mov	w0, #0x0                   	// #0
  4258b8:	bl	405fd0 <log_assert_failed_realm@plt>
  4258bc:	ldr	x0, [sp, #64]
  4258c0:	cmp	x0, #0x0
  4258c4:	cset	w0, eq  // eq = none
  4258c8:	and	w0, w0, #0xff
  4258cc:	and	x0, x0, #0xff
  4258d0:	cmp	x0, #0x0
  4258d4:	b.eq	42591c <server_process_native_message+0xe8>  // b.none
  4258d8:	ldr	x0, [sp, #56]
  4258dc:	cmp	x0, #0x0
  4258e0:	cset	w0, ne  // ne = any
  4258e4:	and	w0, w0, #0xff
  4258e8:	and	x0, x0, #0xff
  4258ec:	cmp	x0, #0x0
  4258f0:	b.eq	42591c <server_process_native_message+0xe8>  // b.none
  4258f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4258f8:	add	x1, x0, #0x3e3
  4258fc:	adrp	x0, 42d000 <__func__.11730+0x328>
  425900:	add	x4, x0, #0xa00
  425904:	mov	w3, #0x133                 	// #307
  425908:	mov	x2, x1
  42590c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425910:	add	x1, x0, #0x628
  425914:	mov	w0, #0x0                   	// #0
  425918:	bl	405fd0 <log_assert_failed_realm@plt>
  42591c:	ldr	x0, [sp, #48]
  425920:	cmp	x0, #0x0
  425924:	b.eq	425a00 <server_process_native_message+0x1cc>  // b.none
  425928:	ldr	x0, [sp, #48]
  42592c:	ldr	w0, [x0]
  425930:	bl	424740 <pid_is_valid>
  425934:	and	w0, w0, #0xff
  425938:	cmp	w0, #0x0
  42593c:	b.eq	425a00 <server_process_native_message+0x1cc>  // b.none
  425940:	ldr	x0, [sp, #48]
  425944:	ldr	w0, [x0]
  425948:	add	x1, sp, #0x70
  42594c:	mov	x6, x1
  425950:	mov	x5, #0x0                   	// #0
  425954:	ldr	x4, [sp, #24]
  425958:	ldr	x3, [sp, #32]
  42595c:	ldr	x2, [sp, #48]
  425960:	mov	w1, w0
  425964:	ldr	x0, [sp, #72]
  425968:	bl	4241cc <client_context_get>
  42596c:	str	w0, [sp, #88]
  425970:	ldr	w0, [sp, #88]
  425974:	cmp	w0, #0x0
  425978:	b.ge	425a00 <server_process_native_message+0x1cc>  // b.tcont
  42597c:	mov	w0, #0x4                   	// #4
  425980:	str	w0, [sp, #92]
  425984:	ldr	w0, [sp, #88]
  425988:	str	w0, [sp, #96]
  42598c:	str	wzr, [sp, #100]
  425990:	ldr	w0, [sp, #100]
  425994:	bl	406c30 <log_get_max_level_realm@plt>
  425998:	mov	w1, w0
  42599c:	ldr	w0, [sp, #92]
  4259a0:	and	w0, w0, #0x7
  4259a4:	cmp	w1, w0
  4259a8:	b.lt	4259f8 <server_process_native_message+0x1c4>  // b.tstop
  4259ac:	ldr	w0, [sp, #100]
  4259b0:	lsl	w1, w0, #10
  4259b4:	ldr	w0, [sp, #92]
  4259b8:	orr	w7, w1, w0
  4259bc:	adrp	x0, 42d000 <__func__.11730+0x328>
  4259c0:	add	x1, x0, #0x3e3
  4259c4:	ldr	x0, [sp, #48]
  4259c8:	ldr	w0, [x0]
  4259cc:	mov	w6, w0
  4259d0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4259d4:	add	x5, x0, #0x648
  4259d8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4259dc:	add	x4, x0, #0xa20
  4259e0:	mov	w3, #0x138                 	// #312
  4259e4:	mov	x2, x1
  4259e8:	ldr	w1, [sp, #96]
  4259ec:	mov	w0, w7
  4259f0:	bl	406590 <log_internal_realm@plt>
  4259f4:	b	425a00 <server_process_native_message+0x1cc>
  4259f8:	ldr	w0, [sp, #96]
  4259fc:	cmp	w0, #0x0
  425a00:	ldr	x0, [sp, #104]
  425a04:	ldr	x1, [sp, #56]
  425a08:	sub	x0, x1, x0
  425a0c:	ldr	x1, [sp, #64]
  425a10:	add	x0, x1, x0
  425a14:	ldr	x2, [sp, #112]
  425a18:	add	x1, sp, #0x68
  425a1c:	ldr	x7, [sp, #24]
  425a20:	ldr	x6, [sp, #32]
  425a24:	ldr	x5, [sp, #40]
  425a28:	ldr	x4, [sp, #48]
  425a2c:	mov	x3, x2
  425a30:	mov	x2, x1
  425a34:	mov	x1, x0
  425a38:	ldr	x0, [sp, #72]
  425a3c:	bl	424ba4 <server_process_entry>
  425a40:	str	w0, [sp, #88]
  425a44:	ldr	w0, [sp, #88]
  425a48:	cmp	w0, #0x0
  425a4c:	b.eq	425a00 <server_process_native_message+0x1cc>  // b.none
  425a50:	nop
  425a54:	adrp	x0, 441000 <wordlist.9471+0x208>
  425a58:	ldr	x0, [x0, #4064]
  425a5c:	ldr	x1, [sp, #120]
  425a60:	ldr	x0, [x0]
  425a64:	eor	x0, x1, x0
  425a68:	cmp	x0, #0x0
  425a6c:	b.eq	425a74 <server_process_native_message+0x240>  // b.none
  425a70:	bl	4063e0 <__stack_chk_fail@plt>
  425a74:	ldp	x29, x30, [sp], #128
  425a78:	ret

0000000000425a7c <server_process_native_file>:
  425a7c:	sub	sp, sp, #0x200
  425a80:	stp	x29, x30, [sp]
  425a84:	mov	x29, sp
  425a88:	str	x19, [sp, #16]
  425a8c:	str	x0, [sp, #72]
  425a90:	str	w1, [sp, #68]
  425a94:	str	x2, [sp, #56]
  425a98:	str	x3, [sp, #48]
  425a9c:	str	x4, [sp, #40]
  425aa0:	str	x5, [sp, #32]
  425aa4:	adrp	x0, 441000 <wordlist.9471+0x208>
  425aa8:	ldr	x0, [x0, #4064]
  425aac:	ldr	x1, [x0]
  425ab0:	str	x1, [sp, #504]
  425ab4:	mov	x1, #0x0                   	// #0
  425ab8:	ldr	x0, [sp, #72]
  425abc:	cmp	x0, #0x0
  425ac0:	cset	w0, eq  // eq = none
  425ac4:	and	w0, w0, #0xff
  425ac8:	and	x0, x0, #0xff
  425acc:	cmp	x0, #0x0
  425ad0:	b.eq	425afc <server_process_native_file+0x80>  // b.none
  425ad4:	adrp	x0, 42d000 <__func__.11730+0x328>
  425ad8:	add	x1, x0, #0x3e3
  425adc:	adrp	x0, 42d000 <__func__.11730+0x328>
  425ae0:	add	x4, x0, #0xa40
  425ae4:	mov	w3, #0x14f                 	// #335
  425ae8:	mov	x2, x1
  425aec:	adrp	x0, 42d000 <__func__.11730+0x328>
  425af0:	add	x1, x0, #0x620
  425af4:	mov	w0, #0x0                   	// #0
  425af8:	bl	405fd0 <log_assert_failed_realm@plt>
  425afc:	ldr	w0, [sp, #68]
  425b00:	lsr	w0, w0, #31
  425b04:	and	w0, w0, #0xff
  425b08:	and	x0, x0, #0xff
  425b0c:	cmp	x0, #0x0
  425b10:	b.eq	425b3c <server_process_native_file+0xc0>  // b.none
  425b14:	adrp	x0, 42d000 <__func__.11730+0x328>
  425b18:	add	x1, x0, #0x3e3
  425b1c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425b20:	add	x4, x0, #0xa40
  425b24:	mov	w3, #0x150                 	// #336
  425b28:	mov	x2, x1
  425b2c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425b30:	add	x1, x0, #0x680
  425b34:	mov	w0, #0x0                   	// #0
  425b38:	bl	405fd0 <log_assert_failed_realm@plt>
  425b3c:	ldr	w0, [sp, #68]
  425b40:	bl	406750 <memfd_get_sealed@plt>
  425b44:	cmp	w0, #0x0
  425b48:	cset	w0, gt
  425b4c:	strb	w0, [sp, #87]
  425b50:	ldrb	w0, [sp, #87]
  425b54:	eor	w0, w0, #0x1
  425b58:	and	w0, w0, #0xff
  425b5c:	cmp	w0, #0x0
  425b60:	b.eq	425d8c <server_process_native_file+0x310>  // b.none
  425b64:	ldr	x0, [sp, #56]
  425b68:	cmp	x0, #0x0
  425b6c:	b.eq	425b80 <server_process_native_file+0x104>  // b.none
  425b70:	ldr	x0, [sp, #56]
  425b74:	ldr	w0, [x0, #4]
  425b78:	cmp	w0, #0x0
  425b7c:	b.eq	425d8c <server_process_native_file+0x310>  // b.none
  425b80:	str	xzr, [sp, #224]
  425b84:	add	x0, sp, #0xe0
  425b88:	mov	x1, x0
  425b8c:	ldr	w0, [sp, #68]
  425b90:	bl	406620 <fd_get_path@plt>
  425b94:	str	w0, [sp, #88]
  425b98:	ldr	w0, [sp, #88]
  425b9c:	cmp	w0, #0x0
  425ba0:	b.ge	425c28 <server_process_native_file+0x1ac>  // b.tcont
  425ba4:	mov	w0, #0x3                   	// #3
  425ba8:	str	w0, [sp, #116]
  425bac:	ldr	w0, [sp, #88]
  425bb0:	str	w0, [sp, #120]
  425bb4:	str	wzr, [sp, #124]
  425bb8:	ldr	w0, [sp, #124]
  425bbc:	bl	406c30 <log_get_max_level_realm@plt>
  425bc0:	mov	w1, w0
  425bc4:	ldr	w0, [sp, #116]
  425bc8:	and	w0, w0, #0x7
  425bcc:	cmp	w1, w0
  425bd0:	b.lt	425c18 <server_process_native_file+0x19c>  // b.tstop
  425bd4:	ldr	w0, [sp, #124]
  425bd8:	lsl	w1, w0, #10
  425bdc:	ldr	w0, [sp, #116]
  425be0:	orr	w7, w1, w0
  425be4:	adrp	x0, 42d000 <__func__.11730+0x328>
  425be8:	add	x1, x0, #0x3e3
  425bec:	ldr	w6, [sp, #68]
  425bf0:	adrp	x0, 42d000 <__func__.11730+0x328>
  425bf4:	add	x5, x0, #0x688
  425bf8:	adrp	x0, 42d000 <__func__.11730+0x328>
  425bfc:	add	x4, x0, #0xa60
  425c00:	mov	w3, #0x15f                 	// #351
  425c04:	mov	x2, x1
  425c08:	ldr	w1, [sp, #120]
  425c0c:	mov	w0, w7
  425c10:	bl	406590 <log_internal_realm@plt>
  425c14:	b	425c20 <server_process_native_file+0x1a4>
  425c18:	ldr	w0, [sp, #120]
  425c1c:	cmp	w0, #0x0
  425c20:	mov	w19, #0x0                   	// #0
  425c24:	b	425d7c <server_process_native_file+0x300>
  425c28:	ldr	x2, [sp, #224]
  425c2c:	add	x0, sp, #0x208
  425c30:	sub	x0, x0, #0x90
  425c34:	adrp	x1, 442000 <cached_printk_time.11702>
  425c38:	add	x1, x1, #0x10
  425c3c:	ld1	{v0.16b, v1.16b}, [x1]
  425c40:	st1	{v0.16b, v1.16b}, [x0]
  425c44:	add	x0, sp, #0x178
  425c48:	mov	x1, x0
  425c4c:	mov	x0, x2
  425c50:	bl	405d90 <path_startswith_strv@plt>
  425c54:	str	x0, [sp, #232]
  425c58:	ldr	x0, [sp, #232]
  425c5c:	cmp	x0, #0x0
  425c60:	b.ne	425ce0 <server_process_native_file+0x264>  // b.any
  425c64:	mov	w0, #0x3                   	// #3
  425c68:	str	w0, [sp, #104]
  425c6c:	str	wzr, [sp, #108]
  425c70:	str	wzr, [sp, #112]
  425c74:	ldr	w0, [sp, #112]
  425c78:	bl	406c30 <log_get_max_level_realm@plt>
  425c7c:	mov	w1, w0
  425c80:	ldr	w0, [sp, #104]
  425c84:	and	w0, w0, #0x7
  425c88:	cmp	w1, w0
  425c8c:	b.lt	425cd0 <server_process_native_file+0x254>  // b.tstop
  425c90:	ldr	w0, [sp, #112]
  425c94:	lsl	w1, w0, #10
  425c98:	ldr	w0, [sp, #104]
  425c9c:	orr	w6, w1, w0
  425ca0:	adrp	x0, 42d000 <__func__.11730+0x328>
  425ca4:	add	x1, x0, #0x3e3
  425ca8:	adrp	x0, 42d000 <__func__.11730+0x328>
  425cac:	add	x5, x0, #0x6b0
  425cb0:	adrp	x0, 42d000 <__func__.11730+0x328>
  425cb4:	add	x4, x0, #0xa60
  425cb8:	mov	w3, #0x165                 	// #357
  425cbc:	mov	x2, x1
  425cc0:	ldr	w1, [sp, #108]
  425cc4:	mov	w0, w6
  425cc8:	bl	406590 <log_internal_realm@plt>
  425ccc:	b	425cd8 <server_process_native_file+0x25c>
  425cd0:	ldr	w0, [sp, #108]
  425cd4:	cmp	w0, #0x0
  425cd8:	mov	w19, #0x0                   	// #0
  425cdc:	b	425d7c <server_process_native_file+0x300>
  425ce0:	ldr	x0, [sp, #232]
  425ce4:	bl	405b20 <filename_is_valid@plt>
  425ce8:	and	w0, w0, #0xff
  425cec:	eor	w0, w0, #0x1
  425cf0:	and	w0, w0, #0xff
  425cf4:	cmp	w0, #0x0
  425cf8:	b.eq	425d78 <server_process_native_file+0x2fc>  // b.none
  425cfc:	mov	w0, #0x3                   	// #3
  425d00:	str	w0, [sp, #92]
  425d04:	str	wzr, [sp, #96]
  425d08:	str	wzr, [sp, #100]
  425d0c:	ldr	w0, [sp, #100]
  425d10:	bl	406c30 <log_get_max_level_realm@plt>
  425d14:	mov	w1, w0
  425d18:	ldr	w0, [sp, #92]
  425d1c:	and	w0, w0, #0x7
  425d20:	cmp	w1, w0
  425d24:	b.lt	425d68 <server_process_native_file+0x2ec>  // b.tstop
  425d28:	ldr	w0, [sp, #100]
  425d2c:	lsl	w1, w0, #10
  425d30:	ldr	w0, [sp, #92]
  425d34:	orr	w6, w1, w0
  425d38:	adrp	x0, 42d000 <__func__.11730+0x328>
  425d3c:	add	x1, x0, #0x3e3
  425d40:	adrp	x0, 42d000 <__func__.11730+0x328>
  425d44:	add	x5, x0, #0x6e8
  425d48:	adrp	x0, 42d000 <__func__.11730+0x328>
  425d4c:	add	x4, x0, #0xa60
  425d50:	mov	w3, #0x16a                 	// #362
  425d54:	mov	x2, x1
  425d58:	ldr	w1, [sp, #96]
  425d5c:	mov	w0, w6
  425d60:	bl	406590 <log_internal_realm@plt>
  425d64:	b	425d70 <server_process_native_file+0x2f4>
  425d68:	ldr	w0, [sp, #96]
  425d6c:	cmp	w0, #0x0
  425d70:	mov	w19, #0x0                   	// #0
  425d74:	b	425d7c <server_process_native_file+0x300>
  425d78:	mov	w19, #0x1                   	// #1
  425d7c:	add	x0, sp, #0xe0
  425d80:	bl	424630 <freep>
  425d84:	cmp	w19, #0x1
  425d88:	b.ne	4263a4 <server_process_native_file+0x928>  // b.any
  425d8c:	add	x0, sp, #0x178
  425d90:	mov	x1, x0
  425d94:	ldr	w0, [sp, #68]
  425d98:	bl	4275f0 <fstat64>
  425d9c:	cmp	w0, #0x0
  425da0:	b.ge	425e24 <server_process_native_file+0x3a8>  // b.tcont
  425da4:	mov	w0, #0x3                   	// #3
  425da8:	str	w0, [sp, #212]
  425dac:	bl	4062e0 <__errno_location@plt>
  425db0:	ldr	w0, [x0]
  425db4:	str	w0, [sp, #216]
  425db8:	str	wzr, [sp, #220]
  425dbc:	ldr	w0, [sp, #220]
  425dc0:	bl	406c30 <log_get_max_level_realm@plt>
  425dc4:	mov	w1, w0
  425dc8:	ldr	w0, [sp, #212]
  425dcc:	and	w0, w0, #0x7
  425dd0:	cmp	w1, w0
  425dd4:	b.lt	425e18 <server_process_native_file+0x39c>  // b.tstop
  425dd8:	ldr	w0, [sp, #220]
  425ddc:	lsl	w1, w0, #10
  425de0:	ldr	w0, [sp, #212]
  425de4:	orr	w6, w1, w0
  425de8:	adrp	x0, 42d000 <__func__.11730+0x328>
  425dec:	add	x1, x0, #0x3e3
  425df0:	adrp	x0, 42d000 <__func__.11730+0x328>
  425df4:	add	x5, x0, #0x728
  425df8:	adrp	x0, 42d000 <__func__.11730+0x328>
  425dfc:	add	x4, x0, #0xa60
  425e00:	mov	w3, #0x170                 	// #368
  425e04:	mov	x2, x1
  425e08:	ldr	w1, [sp, #216]
  425e0c:	mov	w0, w6
  425e10:	bl	406590 <log_internal_realm@plt>
  425e14:	b	4263a4 <server_process_native_file+0x928>
  425e18:	ldr	w0, [sp, #216]
  425e1c:	cmp	w0, #0x0
  425e20:	b	4263a4 <server_process_native_file+0x928>
  425e24:	ldr	w0, [sp, #392]
  425e28:	and	w0, w0, #0xf000
  425e2c:	cmp	w0, #0x8, lsl #12
  425e30:	b.eq	425eac <server_process_native_file+0x430>  // b.none
  425e34:	mov	w0, #0x3                   	// #3
  425e38:	str	w0, [sp, #200]
  425e3c:	str	wzr, [sp, #204]
  425e40:	str	wzr, [sp, #208]
  425e44:	ldr	w0, [sp, #208]
  425e48:	bl	406c30 <log_get_max_level_realm@plt>
  425e4c:	mov	w1, w0
  425e50:	ldr	w0, [sp, #200]
  425e54:	and	w0, w0, #0x7
  425e58:	cmp	w1, w0
  425e5c:	b.lt	425ea0 <server_process_native_file+0x424>  // b.tstop
  425e60:	ldr	w0, [sp, #208]
  425e64:	lsl	w1, w0, #10
  425e68:	ldr	w0, [sp, #200]
  425e6c:	orr	w6, w1, w0
  425e70:	adrp	x0, 42d000 <__func__.11730+0x328>
  425e74:	add	x1, x0, #0x3e3
  425e78:	adrp	x0, 42d000 <__func__.11730+0x328>
  425e7c:	add	x5, x0, #0x758
  425e80:	adrp	x0, 42d000 <__func__.11730+0x328>
  425e84:	add	x4, x0, #0xa60
  425e88:	mov	w3, #0x175                 	// #373
  425e8c:	mov	x2, x1
  425e90:	ldr	w1, [sp, #204]
  425e94:	mov	w0, w6
  425e98:	bl	406590 <log_internal_realm@plt>
  425e9c:	b	4263a4 <server_process_native_file+0x928>
  425ea0:	ldr	w0, [sp, #204]
  425ea4:	cmp	w0, #0x0
  425ea8:	b	4263a4 <server_process_native_file+0x928>
  425eac:	ldr	x0, [sp, #424]
  425eb0:	cmp	x0, #0x0
  425eb4:	b.le	4263a0 <server_process_native_file+0x924>
  425eb8:	ldr	x1, [sp, #424]
  425ebc:	ldrb	w0, [sp, #87]
  425ec0:	cmp	w0, #0x0
  425ec4:	b.eq	425ed0 <server_process_native_file+0x454>  // b.none
  425ec8:	mov	w0, #0x1                   	// #1
  425ecc:	b	425ed4 <server_process_native_file+0x458>
  425ed0:	mov	w0, #0x2                   	// #2
  425ed4:	mov	w2, #0x30200000            	// #807403520
  425ed8:	udiv	w0, w2, w0
  425edc:	mov	w0, w0
  425ee0:	cmp	x1, x0
  425ee4:	b.le	425f68 <server_process_native_file+0x4ec>
  425ee8:	mov	w0, #0x3                   	// #3
  425eec:	str	w0, [sp, #188]
  425ef0:	str	wzr, [sp, #192]
  425ef4:	str	wzr, [sp, #196]
  425ef8:	ldr	w0, [sp, #196]
  425efc:	bl	406c30 <log_get_max_level_realm@plt>
  425f00:	mov	w1, w0
  425f04:	ldr	w0, [sp, #188]
  425f08:	and	w0, w0, #0x7
  425f0c:	cmp	w1, w0
  425f10:	b.lt	425f5c <server_process_native_file+0x4e0>  // b.tstop
  425f14:	ldr	w0, [sp, #196]
  425f18:	lsl	w1, w0, #10
  425f1c:	ldr	w0, [sp, #188]
  425f20:	orr	w7, w1, w0
  425f24:	adrp	x0, 42d000 <__func__.11730+0x328>
  425f28:	add	x1, x0, #0x3e3
  425f2c:	ldr	x0, [sp, #424]
  425f30:	mov	x6, x0
  425f34:	adrp	x0, 42d000 <__func__.11730+0x328>
  425f38:	add	x5, x0, #0x780
  425f3c:	adrp	x0, 42d000 <__func__.11730+0x328>
  425f40:	add	x4, x0, #0xa60
  425f44:	mov	w3, #0x17f                 	// #383
  425f48:	mov	x2, x1
  425f4c:	ldr	w1, [sp, #192]
  425f50:	mov	w0, w7
  425f54:	bl	406590 <log_internal_realm@plt>
  425f58:	b	4263a4 <server_process_native_file+0x928>
  425f5c:	ldr	w0, [sp, #192]
  425f60:	cmp	w0, #0x0
  425f64:	b	4263a4 <server_process_native_file+0x928>
  425f68:	ldrb	w0, [sp, #87]
  425f6c:	cmp	w0, #0x0
  425f70:	b.eq	4260a8 <server_process_native_file+0x62c>  // b.none
  425f74:	ldr	x0, [sp, #424]
  425f78:	mov	x19, x0
  425f7c:	bl	406640 <page_size@plt>
  425f80:	mov	x1, x0
  425f84:	mov	x0, x19
  425f88:	bl	424600 <ALIGN_TO>
  425f8c:	str	x0, [sp, #248]
  425f90:	mov	x5, #0x0                   	// #0
  425f94:	ldr	w4, [sp, #68]
  425f98:	mov	w3, #0x2                   	// #2
  425f9c:	mov	w2, #0x1                   	// #1
  425fa0:	ldr	x1, [sp, #248]
  425fa4:	mov	x0, #0x0                   	// #0
  425fa8:	bl	406200 <mmap64@plt>
  425fac:	str	x0, [sp, #256]
  425fb0:	ldr	x0, [sp, #256]
  425fb4:	cmn	x0, #0x1
  425fb8:	b.ne	42603c <server_process_native_file+0x5c0>  // b.any
  425fbc:	mov	w0, #0x3                   	// #3
  425fc0:	str	w0, [sp, #176]
  425fc4:	bl	4062e0 <__errno_location@plt>
  425fc8:	ldr	w0, [x0]
  425fcc:	str	w0, [sp, #180]
  425fd0:	str	wzr, [sp, #184]
  425fd4:	ldr	w0, [sp, #184]
  425fd8:	bl	406c30 <log_get_max_level_realm@plt>
  425fdc:	mov	w1, w0
  425fe0:	ldr	w0, [sp, #176]
  425fe4:	and	w0, w0, #0x7
  425fe8:	cmp	w1, w0
  425fec:	b.lt	426030 <server_process_native_file+0x5b4>  // b.tstop
  425ff0:	ldr	w0, [sp, #184]
  425ff4:	lsl	w1, w0, #10
  425ff8:	ldr	w0, [sp, #176]
  425ffc:	orr	w6, w1, w0
  426000:	adrp	x0, 42d000 <__func__.11730+0x328>
  426004:	add	x1, x0, #0x3e3
  426008:	adrp	x0, 42d000 <__func__.11730+0x328>
  42600c:	add	x5, x0, #0x7b0
  426010:	adrp	x0, 42d000 <__func__.11730+0x328>
  426014:	add	x4, x0, #0xa60
  426018:	mov	w3, #0x18c                 	// #396
  42601c:	mov	x2, x1
  426020:	ldr	w1, [sp, #180]
  426024:	mov	w0, w6
  426028:	bl	406590 <log_internal_realm@plt>
  42602c:	b	4263a4 <server_process_native_file+0x928>
  426030:	ldr	w0, [sp, #180]
  426034:	cmp	w0, #0x0
  426038:	b	4263a4 <server_process_native_file+0x928>
  42603c:	ldr	x0, [sp, #424]
  426040:	ldr	x6, [sp, #32]
  426044:	ldr	x5, [sp, #40]
  426048:	ldr	x4, [sp, #48]
  42604c:	ldr	x3, [sp, #56]
  426050:	mov	x2, x0
  426054:	ldr	x1, [sp, #256]
  426058:	ldr	x0, [sp, #72]
  42605c:	bl	425834 <server_process_native_message>
  426060:	ldr	x1, [sp, #248]
  426064:	ldr	x0, [sp, #256]
  426068:	bl	405f70 <munmap@plt>
  42606c:	lsr	w0, w0, #31
  426070:	and	w0, w0, #0xff
  426074:	and	x0, x0, #0xff
  426078:	cmp	x0, #0x0
  42607c:	b.eq	4263a4 <server_process_native_file+0x928>  // b.none
  426080:	adrp	x0, 42d000 <__func__.11730+0x328>
  426084:	add	x1, x0, #0x3e3
  426088:	adrp	x0, 42d000 <__func__.11730+0x328>
  42608c:	add	x4, x0, #0xa40
  426090:	mov	w3, #0x191                 	// #401
  426094:	mov	x2, x1
  426098:	adrp	x0, 42d000 <__func__.11730+0x328>
  42609c:	add	x1, x0, #0x7d8
  4260a0:	mov	w0, #0x0                   	// #0
  4260a4:	bl	405fd0 <log_assert_failed_realm@plt>
  4260a8:	str	xzr, [sp, #224]
  4260ac:	add	x0, sp, #0x108
  4260b0:	mov	x1, x0
  4260b4:	ldr	w0, [sp, #68]
  4260b8:	bl	406310 <fstatvfs64@plt>
  4260bc:	cmp	w0, #0x0
  4260c0:	b.ge	426148 <server_process_native_file+0x6cc>  // b.tcont
  4260c4:	mov	w0, #0x3                   	// #3
  4260c8:	str	w0, [sp, #164]
  4260cc:	bl	4062e0 <__errno_location@plt>
  4260d0:	ldr	w0, [x0]
  4260d4:	str	w0, [sp, #168]
  4260d8:	str	wzr, [sp, #172]
  4260dc:	ldr	w0, [sp, #172]
  4260e0:	bl	406c30 <log_get_max_level_realm@plt>
  4260e4:	mov	w1, w0
  4260e8:	ldr	w0, [sp, #164]
  4260ec:	and	w0, w0, #0x7
  4260f0:	cmp	w1, w0
  4260f4:	b.lt	426138 <server_process_native_file+0x6bc>  // b.tstop
  4260f8:	ldr	w0, [sp, #172]
  4260fc:	lsl	w1, w0, #10
  426100:	ldr	w0, [sp, #164]
  426104:	orr	w6, w1, w0
  426108:	adrp	x0, 42d000 <__func__.11730+0x328>
  42610c:	add	x1, x0, #0x3e3
  426110:	adrp	x0, 42d000 <__func__.11730+0x328>
  426114:	add	x5, x0, #0x7f0
  426118:	adrp	x0, 42d000 <__func__.11730+0x328>
  42611c:	add	x4, x0, #0xa60
  426120:	mov	w3, #0x198                 	// #408
  426124:	mov	x2, x1
  426128:	ldr	w1, [sp, #168]
  42612c:	mov	w0, w6
  426130:	bl	406590 <log_internal_realm@plt>
  426134:	b	426140 <server_process_native_file+0x6c4>
  426138:	ldr	w0, [sp, #168]
  42613c:	cmp	w0, #0x0
  426140:	mov	w19, #0x0                   	// #0
  426144:	b	426390 <server_process_native_file+0x914>
  426148:	ldr	x0, [sp, #336]
  42614c:	and	x0, x0, #0x40
  426150:	cmp	x0, #0x0
  426154:	b.eq	4261d4 <server_process_native_file+0x758>  // b.none
  426158:	mov	w0, #0x3                   	// #3
  42615c:	str	w0, [sp, #152]
  426160:	str	wzr, [sp, #156]
  426164:	str	wzr, [sp, #160]
  426168:	ldr	w0, [sp, #160]
  42616c:	bl	406c30 <log_get_max_level_realm@plt>
  426170:	mov	w1, w0
  426174:	ldr	w0, [sp, #152]
  426178:	and	w0, w0, #0x7
  42617c:	cmp	w1, w0
  426180:	b.lt	4261c4 <server_process_native_file+0x748>  // b.tstop
  426184:	ldr	w0, [sp, #160]
  426188:	lsl	w1, w0, #10
  42618c:	ldr	w0, [sp, #152]
  426190:	orr	w6, w1, w0
  426194:	adrp	x0, 42d000 <__func__.11730+0x328>
  426198:	add	x1, x0, #0x3e3
  42619c:	adrp	x0, 42d000 <__func__.11730+0x328>
  4261a0:	add	x5, x0, #0x838
  4261a4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4261a8:	add	x4, x0, #0xa60
  4261ac:	mov	w3, #0x1a2                 	// #418
  4261b0:	mov	x2, x1
  4261b4:	ldr	w1, [sp, #156]
  4261b8:	mov	w0, w6
  4261bc:	bl	406590 <log_internal_realm@plt>
  4261c0:	b	4261cc <server_process_native_file+0x750>
  4261c4:	ldr	w0, [sp, #156]
  4261c8:	cmp	w0, #0x0
  4261cc:	mov	w19, #0x0                   	// #0
  4261d0:	b	426390 <server_process_native_file+0x914>
  4261d4:	mov	w1, #0x1                   	// #1
  4261d8:	ldr	w0, [sp, #68]
  4261dc:	bl	405e60 <fd_nonblock@plt>
  4261e0:	str	w0, [sp, #88]
  4261e4:	ldr	w0, [sp, #88]
  4261e8:	cmp	w0, #0x0
  4261ec:	b.ge	426270 <server_process_native_file+0x7f4>  // b.tcont
  4261f0:	mov	w0, #0x3                   	// #3
  4261f4:	str	w0, [sp, #140]
  4261f8:	ldr	w0, [sp, #88]
  4261fc:	str	w0, [sp, #144]
  426200:	str	wzr, [sp, #148]
  426204:	ldr	w0, [sp, #148]
  426208:	bl	406c30 <log_get_max_level_realm@plt>
  42620c:	mov	w1, w0
  426210:	ldr	w0, [sp, #140]
  426214:	and	w0, w0, #0x7
  426218:	cmp	w1, w0
  42621c:	b.lt	426260 <server_process_native_file+0x7e4>  // b.tstop
  426220:	ldr	w0, [sp, #148]
  426224:	lsl	w1, w0, #10
  426228:	ldr	w0, [sp, #140]
  42622c:	orr	w6, w1, w0
  426230:	adrp	x0, 42d000 <__func__.11730+0x328>
  426234:	add	x1, x0, #0x3e3
  426238:	adrp	x0, 42d000 <__func__.11730+0x328>
  42623c:	add	x5, x0, #0x898
  426240:	adrp	x0, 42d000 <__func__.11730+0x328>
  426244:	add	x4, x0, #0xa60
  426248:	mov	w3, #0x1af                 	// #431
  42624c:	mov	x2, x1
  426250:	ldr	w1, [sp, #144]
  426254:	mov	w0, w6
  426258:	bl	406590 <log_internal_realm@plt>
  42625c:	b	426268 <server_process_native_file+0x7ec>
  426260:	ldr	w0, [sp, #144]
  426264:	cmp	w0, #0x0
  426268:	mov	w19, #0x0                   	// #0
  42626c:	b	426390 <server_process_native_file+0x914>
  426270:	ldr	x0, [sp, #424]
  426274:	bl	406520 <malloc@plt>
  426278:	str	x0, [sp, #224]
  42627c:	ldr	x0, [sp, #224]
  426280:	cmp	x0, #0x0
  426284:	b.ne	4262ac <server_process_native_file+0x830>  // b.any
  426288:	adrp	x0, 42d000 <__func__.11730+0x328>
  42628c:	add	x1, x0, #0x3e3
  426290:	adrp	x0, 42d000 <__func__.11730+0x328>
  426294:	add	x3, x0, #0xa60
  426298:	mov	w2, #0x1b9                 	// #441
  42629c:	mov	w0, #0x0                   	// #0
  4262a0:	bl	406b70 <log_oom_internal@plt>
  4262a4:	mov	w19, #0x0                   	// #0
  4262a8:	b	426390 <server_process_native_file+0x914>
  4262ac:	ldr	x0, [sp, #224]
  4262b0:	ldr	x1, [sp, #424]
  4262b4:	mov	x3, #0x0                   	// #0
  4262b8:	mov	x2, x1
  4262bc:	mov	x1, x0
  4262c0:	ldr	w0, [sp, #68]
  4262c4:	bl	405bb0 <pread64@plt>
  4262c8:	str	x0, [sp, #240]
  4262cc:	ldr	x0, [sp, #240]
  4262d0:	cmp	x0, #0x0
  4262d4:	b.ge	426358 <server_process_native_file+0x8dc>  // b.tcont
  4262d8:	mov	w0, #0x3                   	// #3
  4262dc:	str	w0, [sp, #128]
  4262e0:	bl	4062e0 <__errno_location@plt>
  4262e4:	ldr	w0, [x0]
  4262e8:	str	w0, [sp, #132]
  4262ec:	str	wzr, [sp, #136]
  4262f0:	ldr	w0, [sp, #136]
  4262f4:	bl	406c30 <log_get_max_level_realm@plt>
  4262f8:	mov	w1, w0
  4262fc:	ldr	w0, [sp, #128]
  426300:	and	w0, w0, #0x7
  426304:	cmp	w1, w0
  426308:	b.lt	42634c <server_process_native_file+0x8d0>  // b.tstop
  42630c:	ldr	w0, [sp, #136]
  426310:	lsl	w1, w0, #10
  426314:	ldr	w0, [sp, #128]
  426318:	orr	w6, w1, w0
  42631c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426320:	add	x1, x0, #0x3e3
  426324:	adrp	x0, 42d000 <__func__.11730+0x328>
  426328:	add	x5, x0, #0x8d0
  42632c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426330:	add	x4, x0, #0xa60
  426334:	mov	w3, #0x1bf                 	// #447
  426338:	mov	x2, x1
  42633c:	ldr	w1, [sp, #132]
  426340:	mov	w0, w6
  426344:	bl	406590 <log_internal_realm@plt>
  426348:	b	42638c <server_process_native_file+0x910>
  42634c:	ldr	w0, [sp, #132]
  426350:	cmp	w0, #0x0
  426354:	b	42638c <server_process_native_file+0x910>
  426358:	ldr	x0, [sp, #240]
  42635c:	cmp	x0, #0x0
  426360:	b.le	42638c <server_process_native_file+0x910>
  426364:	ldr	x0, [sp, #224]
  426368:	ldr	x1, [sp, #240]
  42636c:	ldr	x6, [sp, #32]
  426370:	ldr	x5, [sp, #40]
  426374:	ldr	x4, [sp, #48]
  426378:	ldr	x3, [sp, #56]
  42637c:	mov	x2, x1
  426380:	mov	x1, x0
  426384:	ldr	x0, [sp, #72]
  426388:	bl	425834 <server_process_native_message>
  42638c:	mov	w19, #0x1                   	// #1
  426390:	add	x0, sp, #0xe0
  426394:	bl	424630 <freep>
  426398:	cmp	w19, #0x1
  42639c:	b	4263a4 <server_process_native_file+0x928>
  4263a0:	nop
  4263a4:	adrp	x0, 441000 <wordlist.9471+0x208>
  4263a8:	ldr	x0, [x0, #4064]
  4263ac:	ldr	x1, [sp, #504]
  4263b0:	ldr	x0, [x0]
  4263b4:	eor	x0, x1, x0
  4263b8:	cmp	x0, #0x0
  4263bc:	b.eq	4263c4 <server_process_native_file+0x948>  // b.none
  4263c0:	bl	4063e0 <__stack_chk_fail@plt>
  4263c4:	ldr	x19, [sp, #16]
  4263c8:	ldp	x29, x30, [sp]
  4263cc:	add	sp, sp, #0x200
  4263d0:	ret

00000000004263d4 <server_open_native_socket>:
  4263d4:	stp	x29, x30, [sp, #-144]!
  4263d8:	mov	x29, sp
  4263dc:	stp	x19, x20, [sp, #16]
  4263e0:	str	x0, [sp, #40]
  4263e4:	ldr	x0, [sp, #40]
  4263e8:	cmp	x0, #0x0
  4263ec:	cset	w0, eq  // eq = none
  4263f0:	and	w0, w0, #0xff
  4263f4:	and	x0, x0, #0xff
  4263f8:	cmp	x0, #0x0
  4263fc:	b.eq	426428 <server_open_native_socket+0x54>  // b.none
  426400:	adrp	x0, 42d000 <__func__.11730+0x328>
  426404:	add	x1, x0, #0x3e3
  426408:	adrp	x0, 42d000 <__func__.11730+0x328>
  42640c:	add	x4, x0, #0xa80
  426410:	mov	w3, #0x1cd                 	// #461
  426414:	mov	x2, x1
  426418:	adrp	x0, 42d000 <__func__.11730+0x328>
  42641c:	add	x1, x0, #0x620
  426420:	mov	w0, #0x0                   	// #0
  426424:	bl	405fd0 <log_assert_failed_realm@plt>
  426428:	ldr	x0, [sp, #40]
  42642c:	ldr	w0, [x0, #4]
  426430:	cmp	w0, #0x0
  426434:	b.ge	42666c <server_open_native_socket+0x298>  // b.tcont
  426438:	mov	w2, #0x0                   	// #0
  42643c:	mov	w1, #0x802                 	// #2050
  426440:	movk	w1, #0x8, lsl #16
  426444:	mov	w0, #0x1                   	// #1
  426448:	bl	405db0 <socket@plt>
  42644c:	mov	w1, w0
  426450:	ldr	x0, [sp, #40]
  426454:	str	w1, [x0, #4]
  426458:	ldr	x0, [sp, #40]
  42645c:	ldr	w0, [x0, #4]
  426460:	cmp	w0, #0x0
  426464:	b.ge	4264f4 <server_open_native_socket+0x120>  // b.tcont
  426468:	mov	w0, #0x3                   	// #3
  42646c:	str	w0, [sp, #76]
  426470:	bl	4062e0 <__errno_location@plt>
  426474:	ldr	w0, [x0]
  426478:	str	w0, [sp, #80]
  42647c:	str	wzr, [sp, #84]
  426480:	ldr	w0, [sp, #84]
  426484:	bl	406c30 <log_get_max_level_realm@plt>
  426488:	mov	w1, w0
  42648c:	ldr	w0, [sp, #76]
  426490:	and	w0, w0, #0x7
  426494:	cmp	w1, w0
  426498:	b.lt	4264dc <server_open_native_socket+0x108>  // b.tstop
  42649c:	ldr	w0, [sp, #84]
  4264a0:	lsl	w1, w0, #10
  4264a4:	ldr	w0, [sp, #76]
  4264a8:	orr	w6, w1, w0
  4264ac:	adrp	x0, 42d000 <__func__.11730+0x328>
  4264b0:	add	x1, x0, #0x3e3
  4264b4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4264b8:	add	x5, x0, #0x8f8
  4264bc:	adrp	x0, 42d000 <__func__.11730+0x328>
  4264c0:	add	x4, x0, #0xaa0
  4264c4:	mov	w3, #0x1d2                 	// #466
  4264c8:	mov	x2, x1
  4264cc:	ldr	w1, [sp, #80]
  4264d0:	mov	w0, w6
  4264d4:	bl	406590 <log_internal_realm@plt>
  4264d8:	b	426950 <server_open_native_socket+0x57c>
  4264dc:	ldr	w0, [sp, #80]
  4264e0:	cmp	w0, #0x0
  4264e4:	cneg	w0, w0, lt  // lt = tstop
  4264e8:	and	w0, w0, #0xff
  4264ec:	neg	w0, w0
  4264f0:	b	426950 <server_open_native_socket+0x57c>
  4264f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4264f8:	add	x0, x0, #0xac0
  4264fc:	bl	406230 <sockaddr_un_unlink@plt>
  426500:	ldr	x0, [sp, #40]
  426504:	ldr	w19, [x0, #4]
  426508:	adrp	x0, 42d000 <__func__.11730+0x328>
  42650c:	add	x20, x0, #0xac0
  426510:	adrp	x0, 42d000 <__func__.11730+0x328>
  426514:	add	x0, x0, #0xac0
  426518:	str	x0, [sp, #136]
  42651c:	ldr	x0, [sp, #136]
  426520:	ldrh	w0, [x0]
  426524:	cmp	w0, #0x1
  426528:	cset	w0, ne  // ne = any
  42652c:	and	w0, w0, #0xff
  426530:	and	x0, x0, #0xff
  426534:	cmp	x0, #0x0
  426538:	b.eq	426564 <server_open_native_socket+0x190>  // b.none
  42653c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426540:	add	x1, x0, #0x3e3
  426544:	adrp	x0, 42d000 <__func__.11730+0x328>
  426548:	add	x4, x0, #0xa80
  42654c:	mov	w3, #0x1d6                 	// #470
  426550:	mov	x2, x1
  426554:	adrp	x0, 42d000 <__func__.11730+0x328>
  426558:	add	x1, x0, #0x910
  42655c:	mov	w0, #0x0                   	// #0
  426560:	bl	405fd0 <log_assert_failed_realm@plt>
  426564:	ldr	x0, [sp, #136]
  426568:	ldrb	w0, [x0, #2]
  42656c:	cmp	w0, #0x0
  426570:	b.ne	426590 <server_open_native_socket+0x1bc>  // b.any
  426574:	ldr	x0, [sp, #136]
  426578:	add	x0, x0, #0x2
  42657c:	add	x0, x0, #0x1
  426580:	mov	x1, #0x6b                  	// #107
  426584:	bl	405d60 <strnlen@plt>
  426588:	add	x0, x0, #0x3
  42658c:	b	4265a4 <server_open_native_socket+0x1d0>
  426590:	ldr	x0, [sp, #136]
  426594:	add	x0, x0, #0x2
  426598:	mov	x1, #0x6c                  	// #108
  42659c:	bl	405d60 <strnlen@plt>
  4265a0:	add	x0, x0, #0x3
  4265a4:	mov	w2, w0
  4265a8:	mov	x1, x20
  4265ac:	mov	w0, w19
  4265b0:	bl	4065b0 <bind@plt>
  4265b4:	str	w0, [sp, #60]
  4265b8:	ldr	w0, [sp, #60]
  4265bc:	cmp	w0, #0x0
  4265c0:	b.ge	426658 <server_open_native_socket+0x284>  // b.tcont
  4265c4:	mov	w0, #0x3                   	// #3
  4265c8:	str	w0, [sp, #64]
  4265cc:	bl	4062e0 <__errno_location@plt>
  4265d0:	ldr	w0, [x0]
  4265d4:	str	w0, [sp, #68]
  4265d8:	str	wzr, [sp, #72]
  4265dc:	ldr	w0, [sp, #72]
  4265e0:	bl	406c30 <log_get_max_level_realm@plt>
  4265e4:	mov	w1, w0
  4265e8:	ldr	w0, [sp, #64]
  4265ec:	and	w0, w0, #0x7
  4265f0:	cmp	w1, w0
  4265f4:	b.lt	426640 <server_open_native_socket+0x26c>  // b.tstop
  4265f8:	ldr	w0, [sp, #72]
  4265fc:	lsl	w1, w0, #10
  426600:	ldr	w0, [sp, #64]
  426604:	orr	w7, w1, w0
  426608:	adrp	x0, 42d000 <__func__.11730+0x328>
  42660c:	add	x1, x0, #0x3e3
  426610:	adrp	x0, 42d000 <__func__.11730+0x328>
  426614:	add	x6, x0, #0xac2
  426618:	adrp	x0, 42d000 <__func__.11730+0x328>
  42661c:	add	x5, x0, #0x930
  426620:	adrp	x0, 42d000 <__func__.11730+0x328>
  426624:	add	x4, x0, #0xaa0
  426628:	mov	w3, #0x1d8                 	// #472
  42662c:	mov	x2, x1
  426630:	ldr	w1, [sp, #68]
  426634:	mov	w0, w7
  426638:	bl	406590 <log_internal_realm@plt>
  42663c:	b	426950 <server_open_native_socket+0x57c>
  426640:	ldr	w0, [sp, #68]
  426644:	cmp	w0, #0x0
  426648:	cneg	w0, w0, lt  // lt = tstop
  42664c:	and	w0, w0, #0xff
  426650:	neg	w0, w0
  426654:	b	426950 <server_open_native_socket+0x57c>
  426658:	mov	w1, #0x1b6                 	// #438
  42665c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426660:	add	x0, x0, #0xac2
  426664:	bl	4061f0 <chmod@plt>
  426668:	b	42667c <server_open_native_socket+0x2a8>
  42666c:	ldr	x0, [sp, #40]
  426670:	ldr	w0, [x0, #4]
  426674:	mov	w1, #0x1                   	// #1
  426678:	bl	405e60 <fd_nonblock@plt>
  42667c:	ldr	x0, [sp, #40]
  426680:	ldr	w0, [x0, #4]
  426684:	mov	w3, #0x1                   	// #1
  426688:	mov	w2, #0x10                  	// #16
  42668c:	mov	w1, #0x1                   	// #1
  426690:	bl	424760 <setsockopt_int>
  426694:	str	w0, [sp, #60]
  426698:	ldr	w0, [sp, #60]
  42669c:	cmp	w0, #0x0
  4266a0:	b.ge	42672c <server_open_native_socket+0x358>  // b.tcont
  4266a4:	mov	w0, #0x3                   	// #3
  4266a8:	str	w0, [sp, #124]
  4266ac:	ldr	w0, [sp, #60]
  4266b0:	str	w0, [sp, #128]
  4266b4:	str	wzr, [sp, #132]
  4266b8:	ldr	w0, [sp, #132]
  4266bc:	bl	406c30 <log_get_max_level_realm@plt>
  4266c0:	mov	w1, w0
  4266c4:	ldr	w0, [sp, #124]
  4266c8:	and	w0, w0, #0x7
  4266cc:	cmp	w1, w0
  4266d0:	b.lt	426714 <server_open_native_socket+0x340>  // b.tstop
  4266d4:	ldr	w0, [sp, #132]
  4266d8:	lsl	w1, w0, #10
  4266dc:	ldr	w0, [sp, #124]
  4266e0:	orr	w6, w1, w0
  4266e4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4266e8:	add	x1, x0, #0x3e3
  4266ec:	adrp	x0, 42d000 <__func__.11730+0x328>
  4266f0:	add	x5, x0, #0x948
  4266f4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4266f8:	add	x4, x0, #0xaa0
  4266fc:	mov	w3, #0x1e0                 	// #480
  426700:	mov	x2, x1
  426704:	ldr	w1, [sp, #128]
  426708:	mov	w0, w6
  42670c:	bl	406590 <log_internal_realm@plt>
  426710:	b	426950 <server_open_native_socket+0x57c>
  426714:	ldr	w0, [sp, #128]
  426718:	cmp	w0, #0x0
  42671c:	cneg	w0, w0, lt  // lt = tstop
  426720:	and	w0, w0, #0xff
  426724:	neg	w0, w0
  426728:	b	426950 <server_open_native_socket+0x57c>
  42672c:	ldr	x0, [sp, #40]
  426730:	ldr	w0, [x0, #4]
  426734:	mov	w3, #0x1                   	// #1
  426738:	mov	w2, #0x1d                  	// #29
  42673c:	mov	w1, #0x1                   	// #1
  426740:	bl	424760 <setsockopt_int>
  426744:	str	w0, [sp, #60]
  426748:	ldr	w0, [sp, #60]
  42674c:	cmp	w0, #0x0
  426750:	b.ge	4267dc <server_open_native_socket+0x408>  // b.tcont
  426754:	mov	w0, #0x3                   	// #3
  426758:	str	w0, [sp, #112]
  42675c:	ldr	w0, [sp, #60]
  426760:	str	w0, [sp, #116]
  426764:	str	wzr, [sp, #120]
  426768:	ldr	w0, [sp, #120]
  42676c:	bl	406c30 <log_get_max_level_realm@plt>
  426770:	mov	w1, w0
  426774:	ldr	w0, [sp, #112]
  426778:	and	w0, w0, #0x7
  42677c:	cmp	w1, w0
  426780:	b.lt	4267c4 <server_open_native_socket+0x3f0>  // b.tstop
  426784:	ldr	w0, [sp, #120]
  426788:	lsl	w1, w0, #10
  42678c:	ldr	w0, [sp, #112]
  426790:	orr	w6, w1, w0
  426794:	adrp	x0, 42d000 <__func__.11730+0x328>
  426798:	add	x1, x0, #0x3e3
  42679c:	adrp	x0, 42d000 <__func__.11730+0x328>
  4267a0:	add	x5, x0, #0x960
  4267a4:	adrp	x0, 42d000 <__func__.11730+0x328>
  4267a8:	add	x4, x0, #0xaa0
  4267ac:	mov	w3, #0x1ec                 	// #492
  4267b0:	mov	x2, x1
  4267b4:	ldr	w1, [sp, #116]
  4267b8:	mov	w0, w6
  4267bc:	bl	406590 <log_internal_realm@plt>
  4267c0:	b	426950 <server_open_native_socket+0x57c>
  4267c4:	ldr	w0, [sp, #116]
  4267c8:	cmp	w0, #0x0
  4267cc:	cneg	w0, w0, lt  // lt = tstop
  4267d0:	and	w0, w0, #0xff
  4267d4:	neg	w0, w0
  4267d8:	b	426950 <server_open_native_socket+0x57c>
  4267dc:	ldr	x0, [sp, #40]
  4267e0:	ldr	x6, [x0, #32]
  4267e4:	ldr	x0, [sp, #40]
  4267e8:	add	x1, x0, #0x30
  4267ec:	ldr	x0, [sp, #40]
  4267f0:	ldr	w2, [x0, #4]
  4267f4:	ldr	x5, [sp, #40]
  4267f8:	adrp	x0, 441000 <wordlist.9471+0x208>
  4267fc:	ldr	x4, [x0, #4088]
  426800:	mov	w3, #0x1                   	// #1
  426804:	mov	x0, x6
  426808:	bl	406680 <sd_event_add_io@plt>
  42680c:	str	w0, [sp, #60]
  426810:	ldr	w0, [sp, #60]
  426814:	cmp	w0, #0x0
  426818:	b.ge	4268a4 <server_open_native_socket+0x4d0>  // b.tcont
  42681c:	mov	w0, #0x3                   	// #3
  426820:	str	w0, [sp, #100]
  426824:	ldr	w0, [sp, #60]
  426828:	str	w0, [sp, #104]
  42682c:	str	wzr, [sp, #108]
  426830:	ldr	w0, [sp, #108]
  426834:	bl	406c30 <log_get_max_level_realm@plt>
  426838:	mov	w1, w0
  42683c:	ldr	w0, [sp, #100]
  426840:	and	w0, w0, #0x7
  426844:	cmp	w1, w0
  426848:	b.lt	42688c <server_open_native_socket+0x4b8>  // b.tstop
  42684c:	ldr	w0, [sp, #108]
  426850:	lsl	w1, w0, #10
  426854:	ldr	w0, [sp, #100]
  426858:	orr	w6, w1, w0
  42685c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426860:	add	x1, x0, #0x3e3
  426864:	adrp	x0, 42d000 <__func__.11730+0x328>
  426868:	add	x5, x0, #0x978
  42686c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426870:	add	x4, x0, #0xaa0
  426874:	mov	w3, #0x1f0                 	// #496
  426878:	mov	x2, x1
  42687c:	ldr	w1, [sp, #104]
  426880:	mov	w0, w6
  426884:	bl	406590 <log_internal_realm@plt>
  426888:	b	426950 <server_open_native_socket+0x57c>
  42688c:	ldr	w0, [sp, #104]
  426890:	cmp	w0, #0x0
  426894:	cneg	w0, w0, lt  // lt = tstop
  426898:	and	w0, w0, #0xff
  42689c:	neg	w0, w0
  4268a0:	b	426950 <server_open_native_socket+0x57c>
  4268a4:	ldr	x0, [sp, #40]
  4268a8:	ldr	x0, [x0, #48]
  4268ac:	mov	x1, #0x5                   	// #5
  4268b0:	bl	406380 <sd_event_source_set_priority@plt>
  4268b4:	str	w0, [sp, #60]
  4268b8:	ldr	w0, [sp, #60]
  4268bc:	cmp	w0, #0x0
  4268c0:	b.ge	42694c <server_open_native_socket+0x578>  // b.tcont
  4268c4:	mov	w0, #0x3                   	// #3
  4268c8:	str	w0, [sp, #88]
  4268cc:	ldr	w0, [sp, #60]
  4268d0:	str	w0, [sp, #92]
  4268d4:	str	wzr, [sp, #96]
  4268d8:	ldr	w0, [sp, #96]
  4268dc:	bl	406c30 <log_get_max_level_realm@plt>
  4268e0:	mov	w1, w0
  4268e4:	ldr	w0, [sp, #88]
  4268e8:	and	w0, w0, #0x7
  4268ec:	cmp	w1, w0
  4268f0:	b.lt	426934 <server_open_native_socket+0x560>  // b.tstop
  4268f4:	ldr	w0, [sp, #96]
  4268f8:	lsl	w1, w0, #10
  4268fc:	ldr	w0, [sp, #88]
  426900:	orr	w6, w1, w0
  426904:	adrp	x0, 42d000 <__func__.11730+0x328>
  426908:	add	x1, x0, #0x3e3
  42690c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426910:	add	x5, x0, #0x9b0
  426914:	adrp	x0, 42d000 <__func__.11730+0x328>
  426918:	add	x4, x0, #0xaa0
  42691c:	mov	w3, #0x1f4                 	// #500
  426920:	mov	x2, x1
  426924:	ldr	w1, [sp, #92]
  426928:	mov	w0, w6
  42692c:	bl	406590 <log_internal_realm@plt>
  426930:	b	426950 <server_open_native_socket+0x57c>
  426934:	ldr	w0, [sp, #92]
  426938:	cmp	w0, #0x0
  42693c:	cneg	w0, w0, lt  // lt = tstop
  426940:	and	w0, w0, #0xff
  426944:	neg	w0, w0
  426948:	b	426950 <server_open_native_socket+0x57c>
  42694c:	mov	w0, #0x0                   	// #0
  426950:	ldp	x19, x20, [sp, #16]
  426954:	ldp	x29, x30, [sp], #144
  426958:	ret

000000000042695c <siphash24_string>:
  42695c:	stp	x29, x30, [sp, #-32]!
  426960:	mov	x29, sp
  426964:	str	x0, [sp, #24]
  426968:	str	x1, [sp, #16]
  42696c:	ldr	x0, [sp, #24]
  426970:	bl	406af0 <strlen@plt>
  426974:	add	x0, x0, #0x1
  426978:	ldr	x2, [sp, #16]
  42697c:	mov	x1, x0
  426980:	ldr	x0, [sp, #24]
  426984:	bl	405ea0 <siphash24@plt>
  426988:	ldp	x29, x30, [sp], #32
  42698c:	ret

0000000000426990 <u64log2>:
  426990:	sub	sp, sp, #0x10
  426994:	str	x0, [sp, #8]
  426998:	ldr	x0, [sp, #8]
  42699c:	cmp	x0, #0x1
  4269a0:	b.ls	4269b4 <u64log2+0x24>  // b.plast
  4269a4:	ldr	x0, [sp, #8]
  4269a8:	clz	x0, x0
  4269ac:	eor	w0, w0, #0x3f
  4269b0:	b	4269b8 <u64log2+0x28>
  4269b4:	mov	w0, #0x0                   	// #0
  4269b8:	add	sp, sp, #0x10
  4269bc:	ret

00000000004269c0 <journal_ratelimit_new>:
  4269c0:	stp	x29, x30, [sp, #-32]!
  4269c4:	mov	x29, sp
  4269c8:	mov	x1, #0x420                 	// #1056
  4269cc:	mov	x0, #0x1                   	// #1
  4269d0:	bl	406780 <calloc@plt>
  4269d4:	str	x0, [sp, #24]
  4269d8:	ldr	x0, [sp, #24]
  4269dc:	cmp	x0, #0x0
  4269e0:	b.ne	4269ec <journal_ratelimit_new+0x2c>  // b.any
  4269e4:	mov	x0, #0x0                   	// #0
  4269e8:	b	426a00 <journal_ratelimit_new+0x40>
  4269ec:	ldr	x0, [sp, #24]
  4269f0:	add	x0, x0, #0x40c
  4269f4:	mov	x1, #0x10                  	// #16
  4269f8:	bl	405ae0 <random_bytes@plt>
  4269fc:	ldr	x0, [sp, #24]
  426a00:	ldp	x29, x30, [sp], #32
  426a04:	ret

0000000000426a08 <journal_ratelimit_group_free>:
  426a08:	stp	x29, x30, [sp, #-64]!
  426a0c:	mov	x29, sp
  426a10:	str	x0, [sp, #24]
  426a14:	ldr	x0, [sp, #24]
  426a18:	cmp	x0, #0x0
  426a1c:	cset	w0, eq  // eq = none
  426a20:	and	w0, w0, #0xff
  426a24:	and	x0, x0, #0xff
  426a28:	cmp	x0, #0x0
  426a2c:	b.eq	426a58 <journal_ratelimit_group_free+0x50>  // b.none
  426a30:	adrp	x0, 42d000 <__func__.11730+0x328>
  426a34:	add	x1, x0, #0xb63
  426a38:	adrp	x0, 42d000 <__func__.11730+0x328>
  426a3c:	add	x4, x0, #0xbd0
  426a40:	mov	w3, #0x4b                  	// #75
  426a44:	mov	x2, x1
  426a48:	adrp	x0, 42d000 <__func__.11730+0x328>
  426a4c:	add	x1, x0, #0xb88
  426a50:	mov	w0, #0x0                   	// #0
  426a54:	bl	405fd0 <log_assert_failed_realm@plt>
  426a58:	ldr	x0, [sp, #24]
  426a5c:	ldr	x0, [x0]
  426a60:	cmp	x0, #0x0
  426a64:	b.eq	426d6c <journal_ratelimit_group_free+0x364>  // b.none
  426a68:	ldr	x0, [sp, #24]
  426a6c:	ldr	x0, [x0]
  426a70:	ldr	w0, [x0, #1032]
  426a74:	cmp	w0, #0x0
  426a78:	cset	w0, eq  // eq = none
  426a7c:	and	w0, w0, #0xff
  426a80:	and	x0, x0, #0xff
  426a84:	cmp	x0, #0x0
  426a88:	b.eq	426ab4 <journal_ratelimit_group_free+0xac>  // b.none
  426a8c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426a90:	add	x1, x0, #0xb63
  426a94:	adrp	x0, 42d000 <__func__.11730+0x328>
  426a98:	add	x4, x0, #0xbd0
  426a9c:	mov	w3, #0x4e                  	// #78
  426aa0:	mov	x2, x1
  426aa4:	adrp	x0, 42d000 <__func__.11730+0x328>
  426aa8:	add	x1, x0, #0xb90
  426aac:	mov	w0, #0x0                   	// #0
  426ab0:	bl	405fd0 <log_assert_failed_realm@plt>
  426ab4:	ldr	x0, [sp, #24]
  426ab8:	ldr	x0, [x0]
  426abc:	ldr	x0, [x0, #1024]
  426ac0:	ldr	x1, [sp, #24]
  426ac4:	cmp	x1, x0
  426ac8:	b.ne	426ae0 <journal_ratelimit_group_free+0xd8>  // b.any
  426acc:	ldr	x0, [sp, #24]
  426ad0:	ldr	x0, [x0]
  426ad4:	ldr	x1, [sp, #24]
  426ad8:	ldr	x1, [x1, #136]
  426adc:	str	x1, [x0, #1024]
  426ae0:	ldr	x0, [sp, #24]
  426ae4:	ldr	x0, [x0]
  426ae8:	add	x0, x0, #0x3f8
  426aec:	str	x0, [sp, #32]
  426af0:	ldr	x0, [sp, #24]
  426af4:	str	x0, [sp, #40]
  426af8:	ldr	x0, [sp, #40]
  426afc:	cmp	x0, #0x0
  426b00:	cset	w0, eq  // eq = none
  426b04:	and	w0, w0, #0xff
  426b08:	and	x0, x0, #0xff
  426b0c:	cmp	x0, #0x0
  426b10:	b.eq	426b3c <journal_ratelimit_group_free+0x134>  // b.none
  426b14:	adrp	x0, 42d000 <__func__.11730+0x328>
  426b18:	add	x1, x0, #0xb63
  426b1c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426b20:	add	x4, x0, #0xbd0
  426b24:	mov	w3, #0x53                  	// #83
  426b28:	mov	x2, x1
  426b2c:	adrp	x0, 42d000 <__func__.11730+0x328>
  426b30:	add	x1, x0, #0xba8
  426b34:	mov	w0, #0x0                   	// #0
  426b38:	bl	405fd0 <log_assert_failed_realm@plt>
  426b3c:	ldr	x0, [sp, #40]
  426b40:	ldr	x0, [x0, #128]
  426b44:	cmp	x0, #0x0
  426b48:	b.eq	426b60 <journal_ratelimit_group_free+0x158>  // b.none
  426b4c:	ldr	x0, [sp, #40]
  426b50:	ldr	x0, [x0, #128]
  426b54:	ldr	x1, [sp, #40]
  426b58:	ldr	x1, [x1, #136]
  426b5c:	str	x1, [x0, #136]
  426b60:	ldr	x0, [sp, #40]
  426b64:	ldr	x0, [x0, #136]
  426b68:	cmp	x0, #0x0
  426b6c:	b.eq	426b88 <journal_ratelimit_group_free+0x180>  // b.none
  426b70:	ldr	x0, [sp, #40]
  426b74:	ldr	x0, [x0, #136]
  426b78:	ldr	x1, [sp, #40]
  426b7c:	ldr	x1, [x1, #128]
  426b80:	str	x1, [x0, #128]
  426b84:	b	426be4 <journal_ratelimit_group_free+0x1dc>
  426b88:	ldr	x0, [sp, #32]
  426b8c:	ldr	x0, [x0]
  426b90:	ldr	x1, [sp, #40]
  426b94:	cmp	x1, x0
  426b98:	cset	w0, ne  // ne = any
  426b9c:	and	w0, w0, #0xff
  426ba0:	and	x0, x0, #0xff
  426ba4:	cmp	x0, #0x0
  426ba8:	b.eq	426bd4 <journal_ratelimit_group_free+0x1cc>  // b.none
  426bac:	adrp	x0, 42d000 <__func__.11730+0x328>
  426bb0:	add	x1, x0, #0xb63
  426bb4:	adrp	x0, 42d000 <__func__.11730+0x328>
  426bb8:	add	x4, x0, #0xbd0
  426bbc:	mov	w3, #0x53                  	// #83
  426bc0:	mov	x2, x1
  426bc4:	adrp	x0, 42d000 <__func__.11730+0x328>
  426bc8:	add	x1, x0, #0xbb0
  426bcc:	mov	w0, #0x0                   	// #0
  426bd0:	bl	405fd0 <log_assert_failed_realm@plt>
  426bd4:	ldr	x0, [sp, #40]
  426bd8:	ldr	x1, [x0, #128]
  426bdc:	ldr	x0, [sp, #32]
  426be0:	str	x1, [x0]
  426be4:	ldr	x0, [sp, #40]
  426be8:	str	xzr, [x0, #136]
  426bec:	ldr	x0, [sp, #40]
  426bf0:	ldr	x1, [x0, #136]
  426bf4:	ldr	x0, [sp, #40]
  426bf8:	str	x1, [x0, #128]
  426bfc:	ldr	x0, [sp, #24]
  426c00:	ldr	x3, [x0]
  426c04:	ldr	x0, [sp, #24]
  426c08:	ldr	x2, [x0, #104]
  426c0c:	mov	x0, #0x8103                	// #33027
  426c10:	movk	x0, #0x2040, lsl #16
  426c14:	movk	x0, #0x810, lsl #32
  426c18:	movk	x0, #0x204, lsl #48
  426c1c:	umulh	x0, x2, x0
  426c20:	sub	x1, x2, x0
  426c24:	lsr	x1, x1, #1
  426c28:	add	x0, x0, x1
  426c2c:	lsr	x1, x0, #6
  426c30:	mov	x0, x1
  426c34:	lsl	x0, x0, #7
  426c38:	sub	x0, x0, x1
  426c3c:	sub	x1, x2, x0
  426c40:	lsl	x0, x1, #3
  426c44:	add	x0, x3, x0
  426c48:	str	x0, [sp, #48]
  426c4c:	ldr	x0, [sp, #24]
  426c50:	str	x0, [sp, #56]
  426c54:	ldr	x0, [sp, #56]
  426c58:	cmp	x0, #0x0
  426c5c:	cset	w0, eq  // eq = none
  426c60:	and	w0, w0, #0xff
  426c64:	and	x0, x0, #0xff
  426c68:	cmp	x0, #0x0
  426c6c:	b.eq	426c98 <journal_ratelimit_group_free+0x290>  // b.none
  426c70:	adrp	x0, 42d000 <__func__.11730+0x328>
  426c74:	add	x1, x0, #0xb63
  426c78:	adrp	x0, 42d000 <__func__.11730+0x328>
  426c7c:	add	x4, x0, #0xbd0
  426c80:	mov	w3, #0x54                  	// #84
  426c84:	mov	x2, x1
  426c88:	adrp	x0, 42d000 <__func__.11730+0x328>
  426c8c:	add	x1, x0, #0xba8
  426c90:	mov	w0, #0x0                   	// #0
  426c94:	bl	405fd0 <log_assert_failed_realm@plt>
  426c98:	ldr	x0, [sp, #56]
  426c9c:	ldr	x0, [x0, #112]
  426ca0:	cmp	x0, #0x0
  426ca4:	b.eq	426cbc <journal_ratelimit_group_free+0x2b4>  // b.none
  426ca8:	ldr	x0, [sp, #56]
  426cac:	ldr	x0, [x0, #112]
  426cb0:	ldr	x1, [sp, #56]
  426cb4:	ldr	x1, [x1, #120]
  426cb8:	str	x1, [x0, #120]
  426cbc:	ldr	x0, [sp, #56]
  426cc0:	ldr	x0, [x0, #120]
  426cc4:	cmp	x0, #0x0
  426cc8:	b.eq	426ce4 <journal_ratelimit_group_free+0x2dc>  // b.none
  426ccc:	ldr	x0, [sp, #56]
  426cd0:	ldr	x0, [x0, #120]
  426cd4:	ldr	x1, [sp, #56]
  426cd8:	ldr	x1, [x1, #112]
  426cdc:	str	x1, [x0, #112]
  426ce0:	b	426d40 <journal_ratelimit_group_free+0x338>
  426ce4:	ldr	x0, [sp, #48]
  426ce8:	ldr	x0, [x0]
  426cec:	ldr	x1, [sp, #56]
  426cf0:	cmp	x1, x0
  426cf4:	cset	w0, ne  // ne = any
  426cf8:	and	w0, w0, #0xff
  426cfc:	and	x0, x0, #0xff
  426d00:	cmp	x0, #0x0
  426d04:	b.eq	426d30 <journal_ratelimit_group_free+0x328>  // b.none
  426d08:	adrp	x0, 42d000 <__func__.11730+0x328>
  426d0c:	add	x1, x0, #0xb63
  426d10:	adrp	x0, 42d000 <__func__.11730+0x328>
  426d14:	add	x4, x0, #0xbd0
  426d18:	mov	w3, #0x54                  	// #84
  426d1c:	mov	x2, x1
  426d20:	adrp	x0, 42d000 <__func__.11730+0x328>
  426d24:	add	x1, x0, #0xbb0
  426d28:	mov	w0, #0x0                   	// #0
  426d2c:	bl	405fd0 <log_assert_failed_realm@plt>
  426d30:	ldr	x0, [sp, #56]
  426d34:	ldr	x1, [x0, #112]
  426d38:	ldr	x0, [sp, #48]
  426d3c:	str	x1, [x0]
  426d40:	ldr	x0, [sp, #56]
  426d44:	str	xzr, [x0, #120]
  426d48:	ldr	x0, [sp, #56]
  426d4c:	ldr	x1, [x0, #120]
  426d50:	ldr	x0, [sp, #56]
  426d54:	str	x1, [x0, #112]
  426d58:	ldr	x0, [sp, #24]
  426d5c:	ldr	x0, [x0]
  426d60:	ldr	w1, [x0, #1032]
  426d64:	sub	w1, w1, #0x1
  426d68:	str	w1, [x0, #1032]
  426d6c:	ldr	x0, [sp, #24]
  426d70:	ldr	x0, [x0, #8]
  426d74:	bl	406930 <free@plt>
  426d78:	ldr	x0, [sp, #24]
  426d7c:	bl	406930 <free@plt>
  426d80:	nop
  426d84:	ldp	x29, x30, [sp], #64
  426d88:	ret

0000000000426d8c <journal_ratelimit_free>:
  426d8c:	stp	x29, x30, [sp, #-32]!
  426d90:	mov	x29, sp
  426d94:	str	x0, [sp, #24]
  426d98:	ldr	x0, [sp, #24]
  426d9c:	cmp	x0, #0x0
  426da0:	cset	w0, eq  // eq = none
  426da4:	and	w0, w0, #0xff
  426da8:	and	x0, x0, #0xff
  426dac:	cmp	x0, #0x0
  426db0:	b.eq	426de8 <journal_ratelimit_free+0x5c>  // b.none
  426db4:	adrp	x0, 42d000 <__func__.11730+0x328>
  426db8:	add	x1, x0, #0xb63
  426dbc:	adrp	x0, 42d000 <__func__.11730+0x328>
  426dc0:	add	x4, x0, #0xbf0
  426dc4:	mov	w3, #0x5e                  	// #94
  426dc8:	mov	x2, x1
  426dcc:	adrp	x0, 42d000 <__func__.11730+0x328>
  426dd0:	add	x1, x0, #0xbc0
  426dd4:	mov	w0, #0x0                   	// #0
  426dd8:	bl	405fd0 <log_assert_failed_realm@plt>
  426ddc:	ldr	x0, [sp, #24]
  426de0:	ldr	x0, [x0, #1016]
  426de4:	bl	426a08 <journal_ratelimit_group_free>
  426de8:	ldr	x0, [sp, #24]
  426dec:	ldr	x0, [x0, #1016]
  426df0:	cmp	x0, #0x0
  426df4:	b.ne	426ddc <journal_ratelimit_free+0x50>  // b.any
  426df8:	ldr	x0, [sp, #24]
  426dfc:	bl	406930 <free@plt>
  426e00:	nop
  426e04:	ldp	x29, x30, [sp], #32
  426e08:	ret

0000000000426e0c <journal_ratelimit_group_expired>:
  426e0c:	stp	x29, x30, [sp, #-48]!
  426e10:	mov	x29, sp
  426e14:	str	x0, [sp, #24]
  426e18:	str	x1, [sp, #16]
  426e1c:	ldr	x0, [sp, #24]
  426e20:	cmp	x0, #0x0
  426e24:	cset	w0, eq  // eq = none
  426e28:	and	w0, w0, #0xff
  426e2c:	and	x0, x0, #0xff
  426e30:	cmp	x0, #0x0
  426e34:	b.eq	426e60 <journal_ratelimit_group_expired+0x54>  // b.none
  426e38:	adrp	x0, 42d000 <__func__.11730+0x328>
  426e3c:	add	x1, x0, #0xb63
  426e40:	adrp	x0, 42d000 <__func__.11730+0x328>
  426e44:	add	x4, x0, #0xc08
  426e48:	mov	w3, #0x69                  	// #105
  426e4c:	mov	x2, x1
  426e50:	adrp	x0, 42d000 <__func__.11730+0x328>
  426e54:	add	x1, x0, #0xb88
  426e58:	mov	w0, #0x0                   	// #0
  426e5c:	bl	405fd0 <log_assert_failed_realm@plt>
  426e60:	str	wzr, [sp, #44]
  426e64:	b	426eac <journal_ratelimit_group_expired+0xa0>
  426e68:	ldr	x1, [sp, #24]
  426e6c:	ldr	w0, [sp, #44]
  426e70:	add	x0, x0, #0x1
  426e74:	lsl	x0, x0, #4
  426e78:	add	x0, x1, x0
  426e7c:	ldr	x1, [x0, #8]
  426e80:	ldr	x0, [sp, #24]
  426e84:	ldr	x0, [x0, #16]
  426e88:	add	x0, x1, x0
  426e8c:	ldr	x1, [sp, #16]
  426e90:	cmp	x1, x0
  426e94:	b.hi	426ea0 <journal_ratelimit_group_expired+0x94>  // b.pmore
  426e98:	mov	w0, #0x0                   	// #0
  426e9c:	b	426ebc <journal_ratelimit_group_expired+0xb0>
  426ea0:	ldr	w0, [sp, #44]
  426ea4:	add	w0, w0, #0x1
  426ea8:	str	w0, [sp, #44]
  426eac:	ldr	w0, [sp, #44]
  426eb0:	cmp	w0, #0x4
  426eb4:	b.ls	426e68 <journal_ratelimit_group_expired+0x5c>  // b.plast
  426eb8:	mov	w0, #0x1                   	// #1
  426ebc:	ldp	x29, x30, [sp], #48
  426ec0:	ret

0000000000426ec4 <journal_ratelimit_vacuum>:
  426ec4:	stp	x29, x30, [sp, #-32]!
  426ec8:	mov	x29, sp
  426ecc:	str	x0, [sp, #24]
  426ed0:	str	x1, [sp, #16]
  426ed4:	ldr	x0, [sp, #24]
  426ed8:	cmp	x0, #0x0
  426edc:	cset	w0, eq  // eq = none
  426ee0:	and	w0, w0, #0xff
  426ee4:	and	x0, x0, #0xff
  426ee8:	cmp	x0, #0x0
  426eec:	b.eq	426f24 <journal_ratelimit_vacuum+0x60>  // b.none
  426ef0:	adrp	x0, 42d000 <__func__.11730+0x328>
  426ef4:	add	x1, x0, #0xb63
  426ef8:	adrp	x0, 42d000 <__func__.11730+0x328>
  426efc:	add	x4, x0, #0xc28
  426f00:	mov	w3, #0x73                  	// #115
  426f04:	mov	x2, x1
  426f08:	adrp	x0, 42d000 <__func__.11730+0x328>
  426f0c:	add	x1, x0, #0xbc0
  426f10:	mov	w0, #0x0                   	// #0
  426f14:	bl	405fd0 <log_assert_failed_realm@plt>
  426f18:	ldr	x0, [sp, #24]
  426f1c:	ldr	x0, [x0, #1024]
  426f20:	bl	426a08 <journal_ratelimit_group_free>
  426f24:	ldr	x0, [sp, #24]
  426f28:	ldr	w0, [x0, #1032]
  426f2c:	cmp	w0, #0x7fe
  426f30:	b.hi	426f18 <journal_ratelimit_vacuum+0x54>  // b.pmore
  426f34:	ldr	x0, [sp, #24]
  426f38:	ldr	x0, [x0, #1024]
  426f3c:	cmp	x0, #0x0
  426f40:	b.eq	426f60 <journal_ratelimit_vacuum+0x9c>  // b.none
  426f44:	ldr	x0, [sp, #24]
  426f48:	ldr	x0, [x0, #1024]
  426f4c:	ldr	x1, [sp, #16]
  426f50:	bl	426e0c <journal_ratelimit_group_expired>
  426f54:	and	w0, w0, #0xff
  426f58:	cmp	w0, #0x0
  426f5c:	b.ne	426f18 <journal_ratelimit_vacuum+0x54>  // b.any
  426f60:	nop
  426f64:	ldp	x29, x30, [sp], #32
  426f68:	ret

0000000000426f6c <journal_ratelimit_group_new>:
  426f6c:	stp	x29, x30, [sp, #-96]!
  426f70:	mov	x29, sp
  426f74:	str	x0, [sp, #40]
  426f78:	str	x1, [sp, #32]
  426f7c:	str	x2, [sp, #24]
  426f80:	str	x3, [sp, #16]
  426f84:	ldr	x0, [sp, #40]
  426f88:	cmp	x0, #0x0
  426f8c:	cset	w0, eq  // eq = none
  426f90:	and	w0, w0, #0xff
  426f94:	and	x0, x0, #0xff
  426f98:	cmp	x0, #0x0
  426f9c:	b.eq	426fc8 <journal_ratelimit_group_new+0x5c>  // b.none
  426fa0:	adrp	x0, 42d000 <__func__.11730+0x328>
  426fa4:	add	x1, x0, #0xb63
  426fa8:	adrp	x0, 42d000 <__func__.11730+0x328>
  426fac:	add	x4, x0, #0xc48
  426fb0:	mov	w3, #0x80                  	// #128
  426fb4:	mov	x2, x1
  426fb8:	adrp	x0, 42d000 <__func__.11730+0x328>
  426fbc:	add	x1, x0, #0xbc0
  426fc0:	mov	w0, #0x0                   	// #0
  426fc4:	bl	405fd0 <log_assert_failed_realm@plt>
  426fc8:	ldr	x0, [sp, #32]
  426fcc:	cmp	x0, #0x0
  426fd0:	cset	w0, eq  // eq = none
  426fd4:	and	w0, w0, #0xff
  426fd8:	and	x0, x0, #0xff
  426fdc:	cmp	x0, #0x0
  426fe0:	b.eq	42700c <journal_ratelimit_group_new+0xa0>  // b.none
  426fe4:	adrp	x0, 42d000 <__func__.11730+0x328>
  426fe8:	add	x1, x0, #0xb63
  426fec:	adrp	x0, 42d000 <__func__.11730+0x328>
  426ff0:	add	x4, x0, #0xc48
  426ff4:	mov	w3, #0x81                  	// #129
  426ff8:	mov	x2, x1
  426ffc:	adrp	x0, 42d000 <__func__.11730+0x328>
  427000:	add	x1, x0, #0xbc8
  427004:	mov	w0, #0x0                   	// #0
  427008:	bl	405fd0 <log_assert_failed_realm@plt>
  42700c:	mov	x1, #0x90                  	// #144
  427010:	mov	x0, #0x1                   	// #1
  427014:	bl	406780 <calloc@plt>
  427018:	str	x0, [sp, #56]
  42701c:	ldr	x0, [sp, #56]
  427020:	cmp	x0, #0x0
  427024:	b.ne	427030 <journal_ratelimit_group_new+0xc4>  // b.any
  427028:	mov	x0, #0x0                   	// #0
  42702c:	b	427260 <journal_ratelimit_group_new+0x2f4>
  427030:	ldr	x0, [sp, #32]
  427034:	bl	406770 <strdup@plt>
  427038:	mov	x1, x0
  42703c:	ldr	x0, [sp, #56]
  427040:	str	x1, [x0, #8]
  427044:	ldr	x0, [sp, #56]
  427048:	ldr	x0, [x0, #8]
  42704c:	cmp	x0, #0x0
  427050:	b.eq	427250 <journal_ratelimit_group_new+0x2e4>  // b.none
  427054:	ldr	x0, [sp, #56]
  427058:	ldr	x2, [x0, #8]
  42705c:	ldr	x0, [sp, #40]
  427060:	add	x0, x0, #0x40c
  427064:	mov	x1, x0
  427068:	mov	x0, x2
  42706c:	bl	42695c <siphash24_string>
  427070:	mov	x1, x0
  427074:	ldr	x0, [sp, #56]
  427078:	str	x1, [x0, #104]
  42707c:	ldr	x0, [sp, #56]
  427080:	ldr	x1, [sp, #24]
  427084:	str	x1, [x0, #16]
  427088:	ldr	x1, [sp, #16]
  42708c:	ldr	x0, [sp, #40]
  427090:	bl	426ec4 <journal_ratelimit_vacuum>
  427094:	ldr	x0, [sp, #56]
  427098:	ldr	x2, [x0, #104]
  42709c:	mov	x0, #0x8103                	// #33027
  4270a0:	movk	x0, #0x2040, lsl #16
  4270a4:	movk	x0, #0x810, lsl #32
  4270a8:	movk	x0, #0x204, lsl #48
  4270ac:	umulh	x0, x2, x0
  4270b0:	sub	x1, x2, x0
  4270b4:	lsr	x1, x1, #1
  4270b8:	add	x0, x0, x1
  4270bc:	lsr	x1, x0, #6
  4270c0:	mov	x0, x1
  4270c4:	lsl	x0, x0, #7
  4270c8:	sub	x0, x0, x1
  4270cc:	sub	x1, x2, x0
  4270d0:	lsl	x0, x1, #3
  4270d4:	ldr	x1, [sp, #40]
  4270d8:	add	x0, x1, x0
  4270dc:	str	x0, [sp, #64]
  4270e0:	ldr	x0, [sp, #56]
  4270e4:	str	x0, [sp, #72]
  4270e8:	ldr	x0, [sp, #72]
  4270ec:	cmp	x0, #0x0
  4270f0:	cset	w0, eq  // eq = none
  4270f4:	and	w0, w0, #0xff
  4270f8:	and	x0, x0, #0xff
  4270fc:	cmp	x0, #0x0
  427100:	b.eq	42712c <journal_ratelimit_group_new+0x1c0>  // b.none
  427104:	adrp	x0, 42d000 <__func__.11730+0x328>
  427108:	add	x1, x0, #0xb63
  42710c:	adrp	x0, 42d000 <__func__.11730+0x328>
  427110:	add	x4, x0, #0xc48
  427114:	mov	w3, #0x91                  	// #145
  427118:	mov	x2, x1
  42711c:	adrp	x0, 42d000 <__func__.11730+0x328>
  427120:	add	x1, x0, #0xba8
  427124:	mov	w0, #0x0                   	// #0
  427128:	bl	405fd0 <log_assert_failed_realm@plt>
  42712c:	ldr	x0, [sp, #64]
  427130:	ldr	x1, [x0]
  427134:	ldr	x0, [sp, #72]
  427138:	str	x1, [x0, #112]
  42713c:	ldr	x0, [sp, #72]
  427140:	ldr	x0, [x0, #112]
  427144:	cmp	x0, #0x0
  427148:	b.eq	42715c <journal_ratelimit_group_new+0x1f0>  // b.none
  42714c:	ldr	x0, [sp, #72]
  427150:	ldr	x0, [x0, #112]
  427154:	ldr	x1, [sp, #72]
  427158:	str	x1, [x0, #120]
  42715c:	ldr	x0, [sp, #72]
  427160:	str	xzr, [x0, #120]
  427164:	ldr	x0, [sp, #64]
  427168:	ldr	x1, [sp, #72]
  42716c:	str	x1, [x0]
  427170:	ldr	x0, [sp, #40]
  427174:	add	x0, x0, #0x3f8
  427178:	str	x0, [sp, #80]
  42717c:	ldr	x0, [sp, #56]
  427180:	str	x0, [sp, #88]
  427184:	ldr	x0, [sp, #88]
  427188:	cmp	x0, #0x0
  42718c:	cset	w0, eq  // eq = none
  427190:	and	w0, w0, #0xff
  427194:	and	x0, x0, #0xff
  427198:	cmp	x0, #0x0
  42719c:	b.eq	4271c8 <journal_ratelimit_group_new+0x25c>  // b.none
  4271a0:	adrp	x0, 42d000 <__func__.11730+0x328>
  4271a4:	add	x1, x0, #0xb63
  4271a8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4271ac:	add	x4, x0, #0xc48
  4271b0:	mov	w3, #0x92                  	// #146
  4271b4:	mov	x2, x1
  4271b8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4271bc:	add	x1, x0, #0xba8
  4271c0:	mov	w0, #0x0                   	// #0
  4271c4:	bl	405fd0 <log_assert_failed_realm@plt>
  4271c8:	ldr	x0, [sp, #80]
  4271cc:	ldr	x1, [x0]
  4271d0:	ldr	x0, [sp, #88]
  4271d4:	str	x1, [x0, #128]
  4271d8:	ldr	x0, [sp, #88]
  4271dc:	ldr	x0, [x0, #128]
  4271e0:	cmp	x0, #0x0
  4271e4:	b.eq	4271f8 <journal_ratelimit_group_new+0x28c>  // b.none
  4271e8:	ldr	x0, [sp, #88]
  4271ec:	ldr	x0, [x0, #128]
  4271f0:	ldr	x1, [sp, #88]
  4271f4:	str	x1, [x0, #136]
  4271f8:	ldr	x0, [sp, #88]
  4271fc:	str	xzr, [x0, #136]
  427200:	ldr	x0, [sp, #80]
  427204:	ldr	x1, [sp, #88]
  427208:	str	x1, [x0]
  42720c:	ldr	x0, [sp, #56]
  427210:	ldr	x0, [x0, #128]
  427214:	cmp	x0, #0x0
  427218:	b.ne	427228 <journal_ratelimit_group_new+0x2bc>  // b.any
  42721c:	ldr	x0, [sp, #40]
  427220:	ldr	x1, [sp, #56]
  427224:	str	x1, [x0, #1024]
  427228:	ldr	x0, [sp, #40]
  42722c:	ldr	w0, [x0, #1032]
  427230:	add	w1, w0, #0x1
  427234:	ldr	x0, [sp, #40]
  427238:	str	w1, [x0, #1032]
  42723c:	ldr	x0, [sp, #56]
  427240:	ldr	x1, [sp, #40]
  427244:	str	x1, [x0]
  427248:	ldr	x0, [sp, #56]
  42724c:	b	427260 <journal_ratelimit_group_new+0x2f4>
  427250:	nop
  427254:	ldr	x0, [sp, #56]
  427258:	bl	426a08 <journal_ratelimit_group_free>
  42725c:	mov	x0, #0x0                   	// #0
  427260:	ldp	x29, x30, [sp], #96
  427264:	ret

0000000000427268 <burst_modulate>:
  427268:	stp	x29, x30, [sp, #-48]!
  42726c:	mov	x29, sp
  427270:	str	w0, [sp, #28]
  427274:	str	x1, [sp, #16]
  427278:	ldr	x0, [sp, #16]
  42727c:	bl	426990 <u64log2>
  427280:	str	w0, [sp, #44]
  427284:	ldr	w0, [sp, #44]
  427288:	cmp	w0, #0x14
  42728c:	b.hi	427298 <burst_modulate+0x30>  // b.pmore
  427290:	ldr	w0, [sp, #28]
  427294:	b	4272b4 <burst_modulate+0x4c>
  427298:	ldr	w0, [sp, #44]
  42729c:	sub	w1, w0, #0x10
  4272a0:	ldr	w0, [sp, #28]
  4272a4:	mul	w0, w1, w0
  4272a8:	lsr	w0, w0, #2
  4272ac:	str	w0, [sp, #28]
  4272b0:	ldr	w0, [sp, #28]
  4272b4:	ldp	x29, x30, [sp], #48
  4272b8:	ret

00000000004272bc <journal_ratelimit_test>:
  4272bc:	stp	x29, x30, [sp, #-112]!
  4272c0:	mov	x29, sp
  4272c4:	str	x0, [sp, #56]
  4272c8:	str	x1, [sp, #48]
  4272cc:	str	x2, [sp, #40]
  4272d0:	str	w3, [sp, #36]
  4272d4:	str	w4, [sp, #32]
  4272d8:	str	x5, [sp, #24]
  4272dc:	ldr	x0, [sp, #48]
  4272e0:	cmp	x0, #0x0
  4272e4:	cset	w0, eq  // eq = none
  4272e8:	and	w0, w0, #0xff
  4272ec:	and	x0, x0, #0xff
  4272f0:	cmp	x0, #0x0
  4272f4:	b.eq	427320 <journal_ratelimit_test+0x64>  // b.none
  4272f8:	adrp	x0, 42d000 <__func__.11730+0x328>
  4272fc:	add	x1, x0, #0xb63
  427300:	adrp	x0, 42d000 <__func__.11730+0x328>
  427304:	add	x4, x0, #0xc68
  427308:	mov	w3, #0xc2                  	// #194
  42730c:	mov	x2, x1
  427310:	adrp	x0, 42d000 <__func__.11730+0x328>
  427314:	add	x1, x0, #0xbc8
  427318:	mov	w0, #0x0                   	// #0
  42731c:	bl	405fd0 <log_assert_failed_realm@plt>
  427320:	ldr	x0, [sp, #56]
  427324:	cmp	x0, #0x0
  427328:	b.ne	427334 <journal_ratelimit_test+0x78>  // b.any
  42732c:	mov	w0, #0x1                   	// #1
  427330:	b	42754c <journal_ratelimit_test+0x290>
  427334:	mov	w0, #0x1                   	// #1
  427338:	bl	406660 <now@plt>
  42733c:	str	x0, [sp, #88]
  427340:	ldr	x0, [sp, #56]
  427344:	add	x0, x0, #0x40c
  427348:	mov	x1, x0
  42734c:	ldr	x0, [sp, #48]
  427350:	bl	42695c <siphash24_string>
  427354:	str	x0, [sp, #96]
  427358:	ldr	x2, [sp, #96]
  42735c:	mov	x0, #0x8103                	// #33027
  427360:	movk	x0, #0x2040, lsl #16
  427364:	movk	x0, #0x810, lsl #32
  427368:	movk	x0, #0x204, lsl #48
  42736c:	umulh	x0, x2, x0
  427370:	sub	x1, x2, x0
  427374:	lsr	x1, x1, #1
  427378:	add	x0, x0, x1
  42737c:	lsr	x1, x0, #6
  427380:	mov	x0, x1
  427384:	lsl	x0, x0, #7
  427388:	sub	x0, x0, x1
  42738c:	sub	x1, x2, x0
  427390:	ldr	x0, [sp, #56]
  427394:	ldr	x0, [x0, x1, lsl #3]
  427398:	str	x0, [sp, #80]
  42739c:	b	4273c4 <journal_ratelimit_test+0x108>
  4273a0:	ldr	x0, [sp, #80]
  4273a4:	ldr	x0, [x0, #8]
  4273a8:	ldr	x1, [sp, #48]
  4273ac:	bl	4066e0 <strcmp@plt>
  4273b0:	cmp	w0, #0x0
  4273b4:	b.eq	4273d4 <journal_ratelimit_test+0x118>  // b.none
  4273b8:	ldr	x0, [sp, #80]
  4273bc:	ldr	x0, [x0, #112]
  4273c0:	str	x0, [sp, #80]
  4273c4:	ldr	x0, [sp, #80]
  4273c8:	cmp	x0, #0x0
  4273cc:	b.ne	4273a0 <journal_ratelimit_test+0xe4>  // b.any
  4273d0:	b	4273d8 <journal_ratelimit_test+0x11c>
  4273d4:	nop
  4273d8:	ldr	x0, [sp, #80]
  4273dc:	cmp	x0, #0x0
  4273e0:	b.ne	427410 <journal_ratelimit_test+0x154>  // b.any
  4273e4:	ldr	x3, [sp, #88]
  4273e8:	ldr	x2, [sp, #40]
  4273ec:	ldr	x1, [sp, #48]
  4273f0:	ldr	x0, [sp, #56]
  4273f4:	bl	426f6c <journal_ratelimit_group_new>
  4273f8:	str	x0, [sp, #80]
  4273fc:	ldr	x0, [sp, #80]
  427400:	cmp	x0, #0x0
  427404:	b.ne	42741c <journal_ratelimit_test+0x160>  // b.any
  427408:	mov	w0, #0xfffffff4            	// #-12
  42740c:	b	42754c <journal_ratelimit_test+0x290>
  427410:	ldr	x0, [sp, #80]
  427414:	ldr	x1, [sp, #40]
  427418:	str	x1, [x0, #16]
  42741c:	ldr	x0, [sp, #40]
  427420:	cmp	x0, #0x0
  427424:	b.eq	427434 <journal_ratelimit_test+0x178>  // b.none
  427428:	ldr	w0, [sp, #36]
  42742c:	cmp	w0, #0x0
  427430:	b.ne	42743c <journal_ratelimit_test+0x180>  // b.any
  427434:	mov	w0, #0x1                   	// #1
  427438:	b	42754c <journal_ratelimit_test+0x290>
  42743c:	ldr	x1, [sp, #24]
  427440:	ldr	w0, [sp, #36]
  427444:	bl	427268 <burst_modulate>
  427448:	str	w0, [sp, #72]
  42744c:	adrp	x0, 42d000 <__func__.11730+0x328>
  427450:	add	x0, x0, #0xb40
  427454:	ldrsw	x1, [sp, #32]
  427458:	ldr	w0, [x0, x1, lsl #2]
  42745c:	sxtw	x0, w0
  427460:	add	x0, x0, #0x1
  427464:	lsl	x0, x0, #4
  427468:	ldr	x1, [sp, #80]
  42746c:	add	x0, x1, x0
  427470:	add	x0, x0, #0x8
  427474:	str	x0, [sp, #104]
  427478:	ldr	x0, [sp, #104]
  42747c:	ldr	x0, [x0]
  427480:	cmp	x0, #0x0
  427484:	b.ne	4274b0 <journal_ratelimit_test+0x1f4>  // b.any
  427488:	ldr	x0, [sp, #104]
  42748c:	str	wzr, [x0, #12]
  427490:	ldr	x0, [sp, #104]
  427494:	mov	w1, #0x1                   	// #1
  427498:	str	w1, [x0, #8]
  42749c:	ldr	x0, [sp, #104]
  4274a0:	ldr	x1, [sp, #88]
  4274a4:	str	x1, [x0]
  4274a8:	mov	w0, #0x1                   	// #1
  4274ac:	b	42754c <journal_ratelimit_test+0x290>
  4274b0:	ldr	x0, [sp, #104]
  4274b4:	ldr	x1, [x0]
  4274b8:	ldr	x0, [sp, #40]
  4274bc:	add	x0, x1, x0
  4274c0:	ldr	x1, [sp, #88]
  4274c4:	cmp	x1, x0
  4274c8:	b.ls	427504 <journal_ratelimit_test+0x248>  // b.plast
  4274cc:	ldr	x0, [sp, #104]
  4274d0:	ldr	w0, [x0, #12]
  4274d4:	str	w0, [sp, #76]
  4274d8:	ldr	x0, [sp, #104]
  4274dc:	str	wzr, [x0, #12]
  4274e0:	ldr	x0, [sp, #104]
  4274e4:	mov	w1, #0x1                   	// #1
  4274e8:	str	w1, [x0, #8]
  4274ec:	ldr	x0, [sp, #104]
  4274f0:	ldr	x1, [sp, #88]
  4274f4:	str	x1, [x0]
  4274f8:	ldr	w0, [sp, #76]
  4274fc:	add	w0, w0, #0x1
  427500:	b	42754c <journal_ratelimit_test+0x290>
  427504:	ldr	x0, [sp, #104]
  427508:	ldr	w0, [x0, #8]
  42750c:	ldr	w1, [sp, #72]
  427510:	cmp	w1, w0
  427514:	b.ls	427534 <journal_ratelimit_test+0x278>  // b.plast
  427518:	ldr	x0, [sp, #104]
  42751c:	ldr	w0, [x0, #8]
  427520:	add	w1, w0, #0x1
  427524:	ldr	x0, [sp, #104]
  427528:	str	w1, [x0, #8]
  42752c:	mov	w0, #0x1                   	// #1
  427530:	b	42754c <journal_ratelimit_test+0x290>
  427534:	ldr	x0, [sp, #104]
  427538:	ldr	w0, [x0, #12]
  42753c:	add	w1, w0, #0x1
  427540:	ldr	x0, [sp, #104]
  427544:	str	w1, [x0, #12]
  427548:	mov	w0, #0x0                   	// #0
  42754c:	ldp	x29, x30, [sp], #112
  427550:	ret
  427554:	nop

0000000000427558 <__libc_csu_init>:
  427558:	stp	x29, x30, [sp, #-64]!
  42755c:	mov	x29, sp
  427560:	stp	x19, x20, [sp, #16]
  427564:	adrp	x20, 440000 <__FRAME_END__+0xfafc>
  427568:	add	x20, x20, #0xb58
  42756c:	stp	x21, x22, [sp, #32]
  427570:	adrp	x21, 440000 <__FRAME_END__+0xfafc>
  427574:	add	x21, x21, #0xb50
  427578:	sub	x20, x20, x21
  42757c:	mov	w22, w0
  427580:	stp	x23, x24, [sp, #48]
  427584:	mov	x23, x1
  427588:	mov	x24, x2
  42758c:	bl	405a98 <_init>
  427590:	cmp	xzr, x20, asr #3
  427594:	b.eq	4275c0 <__libc_csu_init+0x68>  // b.none
  427598:	asr	x20, x20, #3
  42759c:	mov	x19, #0x0                   	// #0
  4275a0:	ldr	x3, [x21, x19, lsl #3]
  4275a4:	mov	x2, x24
  4275a8:	add	x19, x19, #0x1
  4275ac:	mov	x1, x23
  4275b0:	mov	w0, w22
  4275b4:	blr	x3
  4275b8:	cmp	x20, x19
  4275bc:	b.ne	4275a0 <__libc_csu_init+0x48>  // b.any
  4275c0:	ldp	x19, x20, [sp, #16]
  4275c4:	ldp	x21, x22, [sp, #32]
  4275c8:	ldp	x23, x24, [sp, #48]
  4275cc:	ldp	x29, x30, [sp], #64
  4275d0:	ret
  4275d4:	nop

00000000004275d8 <__libc_csu_fini>:
  4275d8:	ret
  4275dc:	nop

00000000004275e0 <stat64>:
  4275e0:	mov	x2, x1
  4275e4:	mov	x1, x0
  4275e8:	mov	w0, #0x0                   	// #0
  4275ec:	b	406460 <__xstat64@plt>

00000000004275f0 <fstat64>:
  4275f0:	mov	x2, x1
  4275f4:	mov	w1, w0
  4275f8:	mov	w0, #0x0                   	// #0
  4275fc:	b	406250 <__fxstat64@plt>

0000000000427600 <fstatat64>:
  427600:	mov	x4, x1
  427604:	mov	x5, x2
  427608:	mov	w1, w0
  42760c:	mov	x2, x4
  427610:	mov	w0, #0x0                   	// #0
  427614:	mov	w4, w3
  427618:	mov	x3, x5
  42761c:	b	406260 <__fxstatat64@plt>

Disassembly of section .fini:

0000000000427620 <_fini>:
  427620:	stp	x29, x30, [sp, #-16]!
  427624:	mov	x29, sp
  427628:	ldp	x29, x30, [sp], #16
  42762c:	ret
