
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM943.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 20000 <gconv@@Base+0x1f6d8>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 21000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x138>:
     760:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 21000 <gconv@@Base+0x206d8>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 21000 <gconv@@Base+0x206d8>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 20000 <gconv@@Base+0x1f6d8>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 21000 <gconv@@Base+0x206d8>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 21000 <gconv@@Base+0x206d8>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 20000 <gconv@@Base+0x1f6d8>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 21000 <gconv@@Base+0x206d8>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 21000 <gconv@@Base+0x206d8>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w1, w1, #0xff
     83c:	mov	w2, #0xdf                  	// #223
     840:	and	w3, w1, #0xffffffdf
     844:	mov	w0, #0xffffffff            	// #-1
     848:	cmp	w3, #0x80
     84c:	ccmp	w1, w2, #0x2, ne  // ne = any
     850:	b.hi	884 <__assert_fail@plt+0x134>  // b.pmore
     854:	adrp	x0, 1000 <gconv@@Base+0x6d8>
     858:	add	x0, x0, #0xd88
     85c:	ldrh	w0, [x0, w1, sxtw #1]
     860:	cmp	w0, #0x0
     864:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     868:	b.ne	888 <__assert_fail@plt+0x138>  // b.any
     86c:	cmp	w0, #0xa5
     870:	b.eq	890 <__assert_fail@plt+0x140>  // b.none
     874:	mov	w1, #0x203e                	// #8254
     878:	cmp	w0, w1
     87c:	mov	w1, #0x7e                  	// #126
     880:	csel	w0, w0, w1, ne  // ne = any
     884:	ret
     888:	mov	w0, #0xffffffff            	// #-1
     88c:	ret
     890:	mov	w0, #0x5c                  	// #92
     894:	ret

0000000000000898 <gconv_init@@Base>:
     898:	stp	x29, x30, [sp, #-32]!
     89c:	mov	x29, sp
     8a0:	stp	x19, x20, [sp, #16]
     8a4:	mov	x19, x0
     8a8:	adrp	x20, 1000 <gconv@@Base+0x6d8>
     8ac:	ldr	x0, [x0, #24]
     8b0:	add	x20, x20, #0xbd8
     8b4:	mov	x1, x20
     8b8:	bl	730 <strcmp@plt>
     8bc:	cbnz	w0, 8f4 <gconv_init@@Base+0x5c>
     8c0:	mov	x2, #0x1                   	// #1
     8c4:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     8c8:	movk	x2, #0x2, lsl #32
     8cc:	add	x0, x0, #0x838
     8d0:	mov	x1, #0x400000004           	// #17179869188
     8d4:	str	x0, [x19, #48]
     8d8:	stp	x2, x1, [x19, #72]
     8dc:	str	xzr, [x19, #96]
     8e0:	mov	w0, #0x0                   	// #0
     8e4:	str	wzr, [x19, #88]
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x29, x30, [sp], #32
     8f0:	ret
     8f4:	ldr	x0, [x19, #32]
     8f8:	mov	x1, x20
     8fc:	bl	730 <strcmp@plt>
     900:	cbnz	w0, 920 <gconv_init@@Base+0x88>
     904:	mov	x1, #0x1                   	// #1
     908:	mov	x0, #0xffffffffffffffff    	// #-1
     90c:	mov	x2, #0x400000004           	// #17179869188
     910:	movk	x1, #0x2, lsl #32
     914:	stp	x2, x1, [x19, #72]
     918:	str	x0, [x19, #96]
     91c:	b	8e0 <gconv_init@@Base+0x48>
     920:	mov	w0, #0x1                   	// #1
     924:	b	8e8 <gconv_init@@Base+0x50>

0000000000000928 <gconv@@Base>:
     928:	stp	x29, x30, [sp, #-224]!
     92c:	mov	x13, x0
     930:	mov	x11, x2
     934:	mov	x29, sp
     938:	stp	x21, x22, [sp, #32]
     93c:	mov	x21, x1
     940:	adrp	x1, 20000 <gconv@@Base+0x1f6d8>
     944:	stp	x23, x24, [sp, #48]
     948:	mov	x22, x3
     94c:	ldr	w24, [x21, #16]
     950:	ldr	x1, [x1, #4056]
     954:	stp	x25, x26, [sp, #64]
     958:	mov	x9, x4
     95c:	ldr	x0, [x1]
     960:	str	x0, [sp, #216]
     964:	mov	x0, #0x0                   	// #0
     968:	add	x1, x13, #0x68
     96c:	add	x0, x21, #0x30
     970:	stp	x27, x28, [sp, #80]
     974:	mov	x26, x5
     978:	stp	x1, x0, [sp, #144]
     97c:	mov	w27, w7
     980:	mov	x25, #0x0                   	// #0
     984:	tbnz	w24, #0, 9a4 <gconv@@Base+0x7c>
     988:	ldr	x0, [x13, #104]
     98c:	ldr	x25, [x13, #144]
     990:	cbz	x0, 9a4 <gconv@@Base+0x7c>
     994:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     998:	ldr	x0, [x0, #4040]
     99c:	ldr	x0, [x0]
     9a0:	eor	x25, x25, x0
     9a4:	cbnz	w6, 12d8 <gconv@@Base+0x9b0>
     9a8:	cmp	x9, #0x0
     9ac:	stp	x19, x20, [sp, #16]
     9b0:	csel	x0, x21, x9, eq  // eq = none
     9b4:	add	x12, sp, #0xb0
     9b8:	cmp	x26, #0x0
     9bc:	csel	x12, x12, xzr, ne  // ne = any
     9c0:	ldr	x8, [x0]
     9c4:	str	xzr, [sp, #176]
     9c8:	ldr	x23, [x11]
     9cc:	ldr	x28, [x21, #8]
     9d0:	cbnz	w27, d4c <gconv@@Base+0x424>
     9d4:	str	w27, [sp, #128]
     9d8:	mov	x27, x13
     9dc:	str	x9, [sp, #120]
     9e0:	mov	w7, w24
     9e4:	str	x26, [sp, #136]
     9e8:	adrp	x19, 2000 <gconv@@Base+0x16d8>
     9ec:	ldr	x0, [x27, #96]
     9f0:	mov	x26, x28
     9f4:	add	x19, x19, #0x268
     9f8:	mov	x28, x23
     9fc:	mov	x24, x12
     a00:	mov	x23, x8
     a04:	cbz	x0, b7c <gconv@@Base+0x254>
     a08:	stp	x28, x23, [sp, #192]
     a0c:	mov	x20, x23
     a10:	cmp	x22, x28
     a14:	b.eq	13f4 <gconv@@Base+0xacc>  // b.none
     a18:	mov	x0, x28
     a1c:	add	x5, sp, #0xc8
     a20:	mov	w10, #0x4                   	// #4
     a24:	add	x1, x0, #0x4
     a28:	cmp	x22, x1
     a2c:	b.cc	d14 <gconv@@Base+0x3ec>  // b.lo, b.ul, b.last
     a30:	cmp	x26, x20
     a34:	b.ls	cec <gconv@@Base+0x3c4>  // b.plast
     a38:	ldr	w3, [x0]
     a3c:	mov	w0, #0xfffe                	// #65534
     a40:	cmp	w3, w0
     a44:	b.hi	d2c <gconv@@Base+0x404>  // b.pmore
     a48:	mov	w0, w3
     a4c:	cmp	w3, #0xff
     a50:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     a54:	b.ls	a94 <gconv@@Base+0x16c>  // b.plast
     a58:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     a5c:	add	x8, x4, #0xd88
     a60:	add	x8, x8, #0x380
     a64:	mov	w1, #0x203e                	// #8254
     a68:	b	a74 <gconv@@Base+0x14c>
     a6c:	ldrh	w1, [x2, #10]
     a70:	mov	x8, x2
     a74:	cmp	w3, w1
     a78:	add	x2, x8, #0x8
     a7c:	b.hi	a6c <gconv@@Base+0x144>  // b.pmore
     a80:	ldrh	w0, [x2]
     a84:	cmp	w3, w0
     a88:	b.cc	c74 <gconv@@Base+0x34c>  // b.lo, b.ul, b.last
     a8c:	ldr	w0, [x8, #12]
     a90:	add	w0, w3, w0
     a94:	add	x4, x4, #0xd88
     a98:	cmp	w3, #0x0
     a9c:	add	x4, x4, #0x3a0
     aa0:	ldrb	w1, [x4, w0, uxtw]
     aa4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     aa8:	b.eq	c74 <gconv@@Base+0x34c>  // b.none
     aac:	add	x0, x20, #0x1
     ab0:	cmp	x26, x0
     ab4:	b.cc	cec <gconv@@Base+0x3c4>  // b.lo, b.ul, b.last
     ab8:	str	x0, [sp, #200]
     abc:	cmp	w3, #0x5c
     ac0:	b.eq	c6c <gconv@@Base+0x344>  // b.none
     ac4:	cmp	w3, #0x7e
     ac8:	b.eq	c6c <gconv@@Base+0x344>  // b.none
     acc:	strb	w1, [x20]
     ad0:	ldp	x0, x20, [sp, #192]
     ad4:	add	x0, x0, #0x4
     ad8:	str	x0, [sp, #192]
     adc:	cmp	x22, x0
     ae0:	b.ne	a24 <gconv@@Base+0xfc>  // b.any
     ae4:	nop
     ae8:	str	x0, [x11]
     aec:	ldr	x0, [sp, #120]
     af0:	cbnz	x0, c30 <gconv@@Base+0x308>
     af4:	ldp	w1, w0, [x21, #16]
     af8:	add	w0, w0, #0x1
     afc:	str	w0, [x21, #20]
     b00:	tbnz	w1, #0, 104c <gconv@@Base+0x724>
     b04:	cmp	x23, x20
     b08:	b.cs	1098 <gconv@@Base+0x770>  // b.hs, b.nlast
     b0c:	ldr	x1, [x21]
     b10:	mov	x0, x25
     b14:	str	x11, [sp, #104]
     b18:	str	w10, [sp, #112]
     b1c:	str	x1, [sp, #184]
     b20:	bl	740 <_dl_mcount_wrapper_check@plt>
     b24:	ldp	x5, x0, [sp, #136]
     b28:	mov	x3, x20
     b2c:	ldr	w7, [sp, #128]
     b30:	add	x2, sp, #0xb8
     b34:	ldr	x1, [sp, #152]
     b38:	mov	w6, #0x0                   	// #0
     b3c:	mov	x4, #0x0                   	// #0
     b40:	blr	x25
     b44:	mov	w15, w0
     b48:	ldr	w10, [sp, #112]
     b4c:	cmp	w0, #0x4
     b50:	ldr	x11, [sp, #104]
     b54:	b.eq	d04 <gconv@@Base+0x3dc>  // b.none
     b58:	ldr	x7, [sp, #184]
     b5c:	cmp	x7, x20
     b60:	b.ne	ed4 <gconv@@Base+0x5ac>  // b.any
     b64:	cbnz	w15, 1334 <gconv@@Base+0xa0c>
     b68:	ldr	x0, [x27, #96]
     b6c:	ldr	w7, [x21, #16]
     b70:	ldr	x28, [x11]
     b74:	ldr	x23, [x21]
     b78:	cbnz	x0, a08 <gconv@@Base+0xe0>
     b7c:	cmp	x22, x28
     b80:	b.eq	1610 <gconv@@Base+0xce8>  // b.none
     b84:	add	x0, x23, #0x4
     b88:	cmp	x26, x0
     b8c:	b.cc	12c4 <gconv@@Base+0x99c>  // b.lo, b.ul, b.last
     b90:	adrp	x17, 1000 <gconv@@Base+0x6d8>
     b94:	add	x6, x17, #0xd88
     b98:	adrp	x16, b000 <gconv@@Base+0xa6d8>
     b9c:	and	w7, w7, #0x2
     ba0:	add	x9, x6, #0x1c0
     ba4:	mov	x2, x28
     ba8:	add	x16, x16, #0x2f8
     bac:	mov	x20, x23
     bb0:	mov	w10, #0x4                   	// #4
     bb4:	mov	w4, #0xfc                  	// #252
     bb8:	mov	w30, #0x203e                	// #8254
     bbc:	mov	w18, #0x7e                  	// #126
     bc0:	mov	w8, #0x81fc                	// #33276
     bc4:	ldrb	w1, [x2]
     bc8:	and	w3, w1, #0xffffffdf
     bcc:	cmp	w3, #0x80
     bd0:	ccmp	w1, w4, #0x2, ne  // ne = any
     bd4:	b.hi	ccc <gconv@@Base+0x3a4>  // b.pmore
     bd8:	cmp	w1, #0xdf
     bdc:	add	x5, x2, #0x1
     be0:	b.hi	10a0 <gconv@@Base+0x778>  // b.pmore
     be4:	mov	w3, w1
     be8:	ldrh	w3, [x6, x3, lsl #1]
     bec:	cbz	w3, 128c <gconv@@Base+0x964>
     bf0:	cmp	w3, #0xa5
     bf4:	b.eq	d44 <gconv@@Base+0x41c>  // b.none
     bf8:	cmp	w3, w30
     bfc:	csel	w3, w3, w18, ne  // ne = any
     c00:	mov	x2, x5
     c04:	str	w3, [x20]
     c08:	mov	x20, x0
     c0c:	cmp	x22, x2
     c10:	b.eq	c24 <gconv@@Base+0x2fc>  // b.none
     c14:	add	x0, x20, #0x4
     c18:	cmp	x26, x0
     c1c:	b.cs	bc4 <gconv@@Base+0x29c>  // b.hs, b.nlast
     c20:	mov	w10, #0x5                   	// #5
     c24:	str	x2, [x11]
     c28:	ldr	x0, [sp, #120]
     c2c:	cbz	x0, af4 <gconv@@Base+0x1cc>
     c30:	str	x20, [x0]
     c34:	ldp	x19, x20, [sp, #16]
     c38:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     c3c:	ldr	x0, [x0, #4056]
     c40:	ldr	x1, [sp, #216]
     c44:	ldr	x0, [x0]
     c48:	eor	x0, x1, x0
     c4c:	cbnz	x0, 1ab4 <gconv@@Base+0x118c>
     c50:	mov	w0, w10
     c54:	ldp	x21, x22, [sp, #32]
     c58:	ldp	x23, x24, [sp, #48]
     c5c:	ldp	x25, x26, [sp, #64]
     c60:	ldp	x27, x28, [sp, #80]
     c64:	ldp	x29, x30, [sp], #224
     c68:	ret
     c6c:	strb	w3, [x20]
     c70:	b	ad0 <gconv@@Base+0x1a8>
     c74:	and	w3, w3, #0xffff
     c78:	mov	w1, #0x2423                	// #9251
     c7c:	mov	w4, #0x0                   	// #0
     c80:	b	ca8 <gconv@@Base+0x380>
     c84:	add	w8, w1, w4
     c88:	lsr	w2, w8, #1
     c8c:	lsr	w8, w8, #1
     c90:	lsl	x2, x2, #2
     c94:	add	x0, x19, x2
     c98:	ldrh	w2, [x19, x2]
     c9c:	cmp	w2, w3
     ca0:	b.ls	cf8 <gconv@@Base+0x3d0>  // b.plast
     ca4:	mov	w1, w8
     ca8:	cmp	w1, w4
     cac:	b.hi	c84 <gconv@@Base+0x35c>  // b.pmore
     cb0:	cbz	x24, 1624 <gconv@@Base+0xcfc>
     cb4:	ldr	w0, [x21, #16]
     cb8:	tbnz	w0, #3, 1004 <gconv@@Base+0x6dc>
     cbc:	ldr	x0, [sp, #192]
     cc0:	tbnz	w7, #1, 107c <gconv@@Base+0x754>
     cc4:	mov	w10, #0x6                   	// #6
     cc8:	b	ae8 <gconv@@Base+0x1c0>
     ccc:	cbz	x24, d20 <gconv@@Base+0x3f8>
     cd0:	cbz	w7, d20 <gconv@@Base+0x3f8>
     cd4:	ldr	x0, [x24]
     cd8:	add	x2, x2, #0x1
     cdc:	mov	w10, #0x6                   	// #6
     ce0:	add	x0, x0, #0x1
     ce4:	str	x0, [x24]
     ce8:	b	c0c <gconv@@Base+0x2e4>
     cec:	mov	w10, #0x5                   	// #5
     cf0:	ldr	x0, [sp, #192]
     cf4:	b	ae8 <gconv@@Base+0x1c0>
     cf8:	b.cs	13c0 <gconv@@Base+0xa98>  // b.hs, b.nlast
     cfc:	add	w4, w8, #0x1
     d00:	b	ca8 <gconv@@Base+0x380>
     d04:	mov	w15, w10
     d08:	cmp	w10, #0x5
     d0c:	b.ne	b64 <gconv@@Base+0x23c>  // b.any
     d10:	b	b68 <gconv@@Base+0x240>
     d14:	mov	w10, #0x7                   	// #7
     d18:	ldr	x0, [sp, #192]
     d1c:	b	ae8 <gconv@@Base+0x1c0>
     d20:	mov	w10, #0x6                   	// #6
     d24:	str	x2, [x11]
     d28:	b	c28 <gconv@@Base+0x300>
     d2c:	mov	w0, #0x1c00                	// #7168
     d30:	cmp	w0, w3, lsr #7
     d34:	b.ne	cb0 <gconv@@Base+0x388>  // b.any
     d38:	mov	x0, x1
     d3c:	str	x1, [sp, #192]
     d40:	b	adc <gconv@@Base+0x1b4>
     d44:	mov	w3, #0x5c                  	// #92
     d48:	b	c00 <gconv@@Base+0x2d8>
     d4c:	ldr	x7, [x21, #32]
     d50:	ldr	w1, [x7]
     d54:	ands	w0, w1, #0x7
     d58:	b.eq	9d4 <gconv@@Base+0xac>  // b.none
     d5c:	cbnz	x9, 1a94 <gconv@@Base+0x116c>
     d60:	ldr	x2, [x13, #96]
     d64:	mov	w4, w0
     d68:	cbz	x2, 1100 <gconv@@Base+0x7d8>
     d6c:	stp	x23, x8, [sp, #192]
     d70:	cmp	w4, #0x4
     d74:	b.hi	1b88 <gconv@@Base+0x1260>  // b.pmore
     d78:	mov	w20, w4
     d7c:	cbz	w4, 15dc <gconv@@Base+0xcb4>
     d80:	add	x19, sp, #0xd0
     d84:	add	x6, x7, #0x3
     d88:	mov	x0, #0x1                   	// #1
     d8c:	add	x2, x19, x0
     d90:	ldrb	w5, [x6, x0]
     d94:	cmp	x20, x0
     d98:	add	x0, x0, #0x1
     d9c:	sturb	w5, [x2, #-1]
     da0:	b.ne	d8c <gconv@@Base+0x464>  // b.any
     da4:	mov	x0, #0x4                   	// #4
     da8:	sub	x0, x0, x20
     dac:	add	x0, x23, x0
     db0:	cmp	x22, x0
     db4:	b.cc	16c8 <gconv@@Base+0xda0>  // b.lo, b.ul, b.last
     db8:	add	x0, x23, #0x1
     dbc:	add	x19, sp, #0xd0
     dc0:	cmp	x8, x28
     dc4:	b.cs	1448 <gconv@@Base+0xb20>  // b.hs, b.nlast
     dc8:	add	x20, x20, #0x1
     dcc:	str	x0, [sp, #192]
     dd0:	add	x2, x19, x20
     dd4:	cmp	x20, #0x3
     dd8:	ldurb	w3, [x0, #-1]
     ddc:	ccmp	x22, x0, #0x0, ls  // ls = plast
     de0:	add	x0, x0, #0x1
     de4:	sturb	w3, [x2, #-1]
     de8:	b.hi	dc8 <gconv@@Base+0x4a0>  // b.pmore
     dec:	ldr	w2, [sp, #208]
     df0:	mov	w0, #0xfffe                	// #65534
     df4:	str	x19, [sp, #192]
     df8:	cmp	w2, w0
     dfc:	b.hi	1704 <gconv@@Base+0xddc>  // b.pmore
     e00:	mov	w0, w2
     e04:	cmp	w2, #0xff
     e08:	adrp	x5, 1000 <gconv@@Base+0x6d8>
     e0c:	b.ls	e4c <gconv@@Base+0x524>  // b.plast
     e10:	adrp	x5, 1000 <gconv@@Base+0x6d8>
     e14:	add	x1, x5, #0xd88
     e18:	add	x1, x1, #0x380
     e1c:	mov	w3, #0x203e                	// #8254
     e20:	b	e2c <gconv@@Base+0x504>
     e24:	ldrh	w3, [x0, #10]
     e28:	mov	x1, x0
     e2c:	cmp	w2, w3
     e30:	add	x0, x1, #0x8
     e34:	b.hi	e24 <gconv@@Base+0x4fc>  // b.pmore
     e38:	ldrh	w0, [x0]
     e3c:	cmp	w2, w0
     e40:	b.cc	1650 <gconv@@Base+0xd28>  // b.lo, b.ul, b.last
     e44:	ldr	w0, [x1, #12]
     e48:	add	w0, w2, w0
     e4c:	add	x1, x5, #0xd88
     e50:	add	x1, x1, #0x3a0
     e54:	ldrb	w1, [x1, w0, uxtw]
     e58:	cmp	w1, #0x0
     e5c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     e60:	b.ne	1650 <gconv@@Base+0xd28>  // b.any
     e64:	add	x0, x8, #0x1
     e68:	cmp	x28, x0
     e6c:	b.cc	1448 <gconv@@Base+0xb20>  // b.lo, b.ul, b.last
     e70:	str	x0, [sp, #200]
     e74:	cmp	w2, #0x5c
     e78:	b.eq	146c <gconv@@Base+0xb44>  // b.none
     e7c:	cmp	w2, #0x7e
     e80:	b.eq	146c <gconv@@Base+0xb44>  // b.none
     e84:	strb	w1, [x8]
     e88:	ldr	x0, [sp, #192]
     e8c:	add	x0, x0, #0x4
     e90:	str	x0, [sp, #192]
     e94:	cmp	x0, x19
     e98:	b.eq	16bc <gconv@@Base+0xd94>  // b.none
     e9c:	ldr	w1, [x7]
     ea0:	sub	x19, x0, x19
     ea4:	and	w4, w1, #0x7
     ea8:	cmp	x4, x19
     eac:	b.ge	19e8 <gconv@@Base+0x10c0>  // b.tcont
     eb0:	ldr	x23, [x11]
     eb4:	sub	x19, x19, x4
     eb8:	ldr	w24, [x21, #16]
     ebc:	and	w1, w1, #0xfffffff8
     ec0:	add	x23, x23, x19
     ec4:	str	x23, [x11]
     ec8:	ldr	x8, [sp, #200]
     ecc:	str	w1, [x7]
     ed0:	b	9d4 <gconv@@Base+0xac>
     ed4:	ldr	w20, [x21, #16]
     ed8:	str	x28, [x11]
     edc:	ldr	x0, [x27, #96]
     ee0:	cbz	x0, 11d0 <gconv@@Base+0x8a8>
     ee4:	stp	x28, x23, [sp, #192]
     ee8:	cmp	x22, x28
     eec:	b.eq	18a0 <gconv@@Base+0xf78>  // b.none
     ef0:	mov	w1, w20
     ef4:	mov	x16, x23
     ef8:	mov	x0, x28
     efc:	mov	x10, x26
     f00:	mov	x20, x7
     f04:	mov	x26, x25
     f08:	mov	x7, x23
     f0c:	add	x5, sp, #0xc8
     f10:	mov	w28, w15
     f14:	mov	x25, x11
     f18:	mov	w23, w1
     f1c:	mov	w3, #0x4                   	// #4
     f20:	add	x1, x0, #0x4
     f24:	cmp	x22, x1
     f28:	b.cc	15b0 <gconv@@Base+0xc88>  // b.lo, b.ul, b.last
     f2c:	cmp	x20, x16
     f30:	b.ls	140c <gconv@@Base+0xae4>  // b.plast
     f34:	ldr	w2, [x0]
     f38:	mov	w0, #0xfffe                	// #65534
     f3c:	cmp	w2, w0
     f40:	b.hi	15c4 <gconv@@Base+0xc9c>  // b.pmore
     f44:	mov	w1, w2
     f48:	cmp	w2, #0xff
     f4c:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     f50:	b.ls	f90 <gconv@@Base+0x668>  // b.plast
     f54:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     f58:	add	x8, x4, #0xd88
     f5c:	add	x8, x8, #0x380
     f60:	mov	w1, #0x203e                	// #8254
     f64:	b	f70 <gconv@@Base+0x648>
     f68:	ldrh	w1, [x0, #10]
     f6c:	mov	x8, x0
     f70:	cmp	w2, w1
     f74:	add	x0, x8, #0x8
     f78:	b.hi	f68 <gconv@@Base+0x640>  // b.pmore
     f7c:	ldrh	w0, [x0]
     f80:	cmp	w2, w0
     f84:	b.cc	1340 <gconv@@Base+0xa18>  // b.lo, b.ul, b.last
     f88:	ldr	w1, [x8, #12]
     f8c:	add	w1, w2, w1
     f90:	add	x0, x4, #0xd88
     f94:	add	x0, x0, #0x3a0
     f98:	ldrb	w1, [x0, w1, uxtw]
     f9c:	cmp	w1, #0x0
     fa0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     fa4:	b.ne	1340 <gconv@@Base+0xa18>  // b.any
     fa8:	add	x0, x16, #0x1
     fac:	cmp	x20, x0
     fb0:	b.cc	140c <gconv@@Base+0xae4>  // b.lo, b.ul, b.last
     fb4:	str	x0, [sp, #200]
     fb8:	cmp	w2, #0x5c
     fbc:	b.eq	12bc <gconv@@Base+0x994>  // b.none
     fc0:	cmp	w2, #0x7e
     fc4:	b.eq	12bc <gconv@@Base+0x994>  // b.none
     fc8:	strb	w1, [x16]
     fcc:	ldp	x0, x16, [sp, #192]
     fd0:	add	x0, x0, #0x4
     fd4:	str	x0, [sp, #192]
     fd8:	cmp	x22, x0
     fdc:	b.ne	f20 <gconv@@Base+0x5f8>  // b.any
     fe0:	mov	x11, x25
     fe4:	mov	x23, x7
     fe8:	mov	x25, x26
     fec:	mov	w15, w28
     ff0:	mov	x26, x10
     ff4:	sxtw	x0, w3
     ff8:	str	x22, [x11]
     ffc:	ldr	x7, [sp, #184]
    1000:	b	1278 <gconv@@Base+0x950>
    1004:	ldr	x2, [x11]
    1008:	mov	x6, x24
    100c:	mov	x4, x22
    1010:	add	x3, sp, #0xc0
    1014:	mov	x1, x21
    1018:	mov	x0, x27
    101c:	stp	x5, x11, [sp, #104]
    1020:	str	w7, [sp, #160]
    1024:	bl	700 <__gconv_transliterate@plt>
    1028:	ldr	w7, [sp, #160]
    102c:	mov	w10, w0
    1030:	cmp	w0, #0x6
    1034:	ldp	x5, x11, [sp, #104]
    1038:	b.eq	12b4 <gconv@@Base+0x98c>  // b.none
    103c:	cmp	w0, #0x5
    1040:	ldp	x0, x20, [sp, #192]
    1044:	b.ne	adc <gconv@@Base+0x1b4>  // b.any
    1048:	b	ae8 <gconv@@Base+0x1c0>
    104c:	ldr	x26, [sp, #136]
    1050:	ldr	x1, [sp, #176]
    1054:	ldr	x0, [x26]
    1058:	str	x20, [x21]
    105c:	ldr	w27, [sp, #128]
    1060:	add	x0, x0, x1
    1064:	str	x0, [x26]
    1068:	cmp	w27, #0x0
    106c:	ccmp	w10, #0x7, #0x0, ne  // ne = any
    1070:	b.eq	1540 <gconv@@Base+0xc18>  // b.none
    1074:	ldp	x19, x20, [sp, #16]
    1078:	b	c38 <gconv@@Base+0x310>
    107c:	ldr	x1, [x24]
    1080:	add	x0, x0, #0x4
    1084:	mov	w10, #0x6                   	// #6
    1088:	str	x0, [sp, #192]
    108c:	add	x1, x1, #0x1
    1090:	str	x1, [x24]
    1094:	b	adc <gconv@@Base+0x1b4>
    1098:	mov	w15, w10
    109c:	b	b64 <gconv@@Base+0x23c>
    10a0:	cmp	x22, x5
    10a4:	b.ls	1474 <gconv@@Base+0xb4c>  // b.plast
    10a8:	ldrb	w3, [x2, #1]
    10ac:	add	w1, w3, w1, lsl #8
    10b0:	add	x5, x17, #0xd88
    10b4:	mov	w12, #0x82f1                	// #33521
    10b8:	add	x5, x5, #0x1c0
    10bc:	b	10c8 <gconv@@Base+0x7a0>
    10c0:	ldrh	w12, [x3, #10]
    10c4:	mov	x5, x3
    10c8:	cmp	w12, w1
    10cc:	add	x3, x5, #0x8
    10d0:	b.cc	10c0 <gconv@@Base+0x798>  // b.lo, b.ul, b.last
    10d4:	ldrh	w5, [x5, #8]
    10d8:	cmp	w5, w1
    10dc:	b.hi	15e8 <gconv@@Base+0xcc0>  // b.pmore
    10e0:	ldr	w3, [x3, #4]
    10e4:	add	w1, w1, w3
    10e8:	ldrh	w1, [x16, x1, lsl #1]
    10ec:	cbz	w1, 15e8 <gconv@@Base+0xcc0>
    10f0:	add	x2, x2, #0x2
    10f4:	str	w1, [x20]
    10f8:	mov	x20, x0
    10fc:	b	c0c <gconv@@Base+0x2e4>
    1100:	cmp	w0, #0x4
    1104:	b.hi	1a74 <gconv@@Base+0x114c>  // b.pmore
    1108:	add	x10, x8, #0x4
    110c:	cbz	w0, 150c <gconv@@Base+0xbe4>
    1110:	ldrb	w2, [x7, #4]
    1114:	tst	w1, #0x6
    1118:	strb	w2, [sp, #208]
    111c:	mov	x2, #0x1                   	// #1
    1120:	b.eq	1130 <gconv@@Base+0x808>  // b.none
    1124:	ldrb	w3, [x7, #5]
    1128:	mov	x2, #0x2                   	// #2
    112c:	strb	w3, [sp, #209]
    1130:	cmp	x28, x10
    1134:	b.cc	1448 <gconv@@Base+0xb20>  // b.lo, b.ul, b.last
    1138:	add	x19, sp, #0xd0
    113c:	ldrb	w3, [x23]
    1140:	add	x14, x2, #0x1
    1144:	strb	w3, [x19, x2]
    1148:	ldrb	w6, [sp, #208]
    114c:	mov	w2, #0xfc                  	// #252
    1150:	and	w3, w6, #0xffffffdf
    1154:	cmp	w3, #0x80
    1158:	ccmp	w6, w2, #0x2, ne  // ne = any
    115c:	b.hi	1630 <gconv@@Base+0xd08>  // b.pmore
    1160:	cmp	w6, #0xdf
    1164:	add	x15, x19, x14
    1168:	b.hi	1800 <gconv@@Base+0xed8>  // b.pmore
    116c:	mov	w3, w6
    1170:	adrp	x5, 1000 <gconv@@Base+0x6d8>
    1174:	add	x2, x5, #0xd88
    1178:	ldrh	w3, [x2, x3, lsl #1]
    117c:	cbz	w3, 1874 <gconv@@Base+0xf4c>
    1180:	cmp	w3, #0xa5
    1184:	b.eq	1720 <gconv@@Base+0xdf8>  // b.none
    1188:	mov	w0, #0x203e                	// #8254
    118c:	cmp	w3, w0
    1190:	mov	w0, #0x7e                  	// #126
    1194:	csel	w3, w3, w0, ne  // ne = any
    1198:	str	w3, [x8]
    119c:	mov	x8, x10
    11a0:	mov	x0, #0x1                   	// #1
    11a4:	ldr	w1, [x7]
    11a8:	and	w4, w1, #0x7
    11ac:	cmp	x4, x0
    11b0:	b.ge	1a64 <gconv@@Base+0x113c>  // b.tcont
    11b4:	sub	x0, x0, x4
    11b8:	ldr	w24, [x21, #16]
    11bc:	add	x23, x23, x0
    11c0:	str	x23, [x11]
    11c4:	and	w1, w1, #0xfffffff8
    11c8:	str	w1, [x7]
    11cc:	b	9d4 <gconv@@Base+0xac>
    11d0:	cmp	x22, x28
    11d4:	b.eq	18a0 <gconv@@Base+0xf78>  // b.none
    11d8:	add	x2, x23, #0x4
    11dc:	mov	x16, x23
    11e0:	cmp	x7, x2
    11e4:	mov	x0, #0x4                   	// #4
    11e8:	b.cc	17f4 <gconv@@Base+0xecc>  // b.lo, b.ul, b.last
    11ec:	adrp	x17, 1000 <gconv@@Base+0x6d8>
    11f0:	add	x10, x17, #0xd88
    11f4:	adrp	x5, b000 <gconv@@Base+0xa6d8>
    11f8:	and	w20, w20, #0x2
    11fc:	add	x30, x10, #0x1c0
    1200:	add	x5, x5, #0x2f8
    1204:	mov	w6, #0xfc                  	// #252
    1208:	mov	w12, #0x203e                	// #8254
    120c:	mov	w9, #0x7e                  	// #126
    1210:	mov	w8, #0x81fc                	// #33276
    1214:	ldrb	w1, [x28]
    1218:	and	w3, w1, #0xffffffdf
    121c:	cmp	w3, #0x80
    1220:	ccmp	w1, w6, #0x2, ne  // ne = any
    1224:	b.hi	1324 <gconv@@Base+0x9fc>  // b.pmore
    1228:	cmp	w1, #0xdf
    122c:	add	x4, x28, #0x1
    1230:	b.hi	1774 <gconv@@Base+0xe4c>  // b.pmore
    1234:	mov	w3, w1
    1238:	ldrh	w3, [x10, x3, lsl #1]
    123c:	cbz	w3, 1728 <gconv@@Base+0xe00>
    1240:	cmp	w3, #0xa5
    1244:	b.eq	1608 <gconv@@Base+0xce0>  // b.none
    1248:	cmp	w3, w12
    124c:	csel	w3, w3, w9, ne  // ne = any
    1250:	mov	x28, x4
    1254:	str	w3, [x16]
    1258:	mov	x16, x2
    125c:	cmp	x22, x28
    1260:	b.eq	1274 <gconv@@Base+0x94c>  // b.none
    1264:	add	x2, x16, #0x4
    1268:	cmp	x7, x2
    126c:	b.cs	1214 <gconv@@Base+0x8ec>  // b.hs, b.nlast
    1270:	mov	x0, #0x5                   	// #5
    1274:	str	x28, [x11]
    1278:	cmp	x16, x7
    127c:	b.ne	14ec <gconv@@Base+0xbc4>  // b.any
    1280:	cmp	x0, #0x5
    1284:	b.eq	1430 <gconv@@Base+0xb08>  // b.none
    1288:	b	13a0 <gconv@@Base+0xa78>
    128c:	cbz	w1, c00 <gconv@@Base+0x2d8>
    1290:	cmp	x22, x5
    1294:	b.ls	1474 <gconv@@Base+0xb4c>  // b.plast
    1298:	ldrb	w3, [x2, #1]
    129c:	add	w1, w3, w1, lsl #8
    12a0:	cmp	w1, w8
    12a4:	b.hi	10b0 <gconv@@Base+0x788>  // b.pmore
    12a8:	mov	x3, x9
    12ac:	mov	w5, #0x8140                	// #33088
    12b0:	b	10d8 <gconv@@Base+0x7b0>
    12b4:	ldr	x20, [sp, #200]
    12b8:	b	cbc <gconv@@Base+0x394>
    12bc:	strb	w2, [x16]
    12c0:	b	fcc <gconv@@Base+0x6a4>
    12c4:	mov	x2, x28
    12c8:	mov	x20, x23
    12cc:	mov	w10, #0x5                   	// #5
    12d0:	str	x2, [x11]
    12d4:	b	c28 <gconv@@Base+0x300>
    12d8:	cbnz	x9, 19c4 <gconv@@Base+0x109c>
    12dc:	ldr	x0, [x21, #32]
    12e0:	mov	w10, #0x0                   	// #0
    12e4:	str	xzr, [x0]
    12e8:	ldr	w0, [x21, #16]
    12ec:	tbnz	w0, #0, c38 <gconv@@Base+0x310>
    12f0:	mov	x0, x25
    12f4:	str	w6, [sp, #104]
    12f8:	bl	740 <_dl_mcount_wrapper_check@plt>
    12fc:	ldp	x0, x1, [sp, #144]
    1300:	mov	w7, w27
    1304:	ldr	w6, [sp, #104]
    1308:	mov	x5, x26
    130c:	mov	x4, #0x0                   	// #0
    1310:	mov	x3, #0x0                   	// #0
    1314:	mov	x2, #0x0                   	// #0
    1318:	blr	x25
    131c:	mov	w10, w0
    1320:	b	c38 <gconv@@Base+0x310>
    1324:	cbz	x24, 132c <gconv@@Base+0xa04>
    1328:	cbnz	w20, 1454 <gconv@@Base+0xb2c>
    132c:	mov	x0, #0x6                   	// #6
    1330:	b	1274 <gconv@@Base+0x94c>
    1334:	ldr	w27, [sp, #128]
    1338:	mov	w10, w15
    133c:	b	1068 <gconv@@Base+0x740>
    1340:	and	w2, w2, #0xffff
    1344:	mov	w4, #0x0                   	// #0
    1348:	mov	w1, #0x2423                	// #9251
    134c:	b	1374 <gconv@@Base+0xa4c>
    1350:	add	w0, w1, w4
    1354:	lsr	w8, w0, #1
    1358:	lsr	w0, w0, #1
    135c:	lsl	x8, x8, #2
    1360:	add	x9, x19, x8
    1364:	ldrh	w6, [x19, x8]
    1368:	cmp	w6, w2
    136c:	b.ls	1400 <gconv@@Base+0xad8>  // b.plast
    1370:	mov	w1, w0
    1374:	cmp	w1, w4
    1378:	b.hi	1350 <gconv@@Base+0xa28>  // b.pmore
    137c:	cbz	x24, 15b0 <gconv@@Base+0xc88>
    1380:	ldr	w0, [x21, #16]
    1384:	tbnz	w0, #3, 1480 <gconv@@Base+0xb58>
    1388:	ldr	x9, [sp, #192]
    138c:	tbnz	w23, #1, 1594 <gconv@@Base+0xc6c>
    1390:	ldr	x0, [sp, #184]
    1394:	str	x9, [x25]
    1398:	cmp	x16, x0
    139c:	b.ne	14ec <gconv@@Base+0xbc4>  // b.any
    13a0:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    13a4:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    13a8:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    13ac:	add	x3, x3, #0xd80
    13b0:	add	x1, x1, #0xbe8
    13b4:	add	x0, x0, #0xd18
    13b8:	mov	w2, #0x2eb                 	// #747
    13bc:	bl	750 <__assert_fail@plt>
    13c0:	add	x1, x20, #0x2
    13c4:	ldrh	w2, [x0, #2]
    13c8:	cmp	x26, x1
    13cc:	b.cc	cec <gconv@@Base+0x3c4>  // b.lo, b.ul, b.last
    13d0:	add	x0, x20, #0x1
    13d4:	str	x0, [sp, #200]
    13d8:	lsr	w0, w2, #8
    13dc:	strb	w0, [x20]
    13e0:	ldr	x0, [sp, #200]
    13e4:	add	x1, x0, #0x1
    13e8:	str	x1, [sp, #200]
    13ec:	strb	w2, [x0]
    13f0:	b	ad0 <gconv@@Base+0x1a8>
    13f4:	mov	x0, x22
    13f8:	mov	w10, #0x4                   	// #4
    13fc:	b	ae8 <gconv@@Base+0x1c0>
    1400:	b.cs	17b8 <gconv@@Base+0xe90>  // b.hs, b.nlast
    1404:	add	w4, w0, #0x1
    1408:	b	1374 <gconv@@Base+0xa4c>
    140c:	ldp	x0, x1, [sp, #184]
    1410:	mov	x11, x25
    1414:	mov	w15, w28
    1418:	mov	x25, x26
    141c:	mov	x23, x7
    1420:	mov	x26, x10
    1424:	str	x1, [x11]
    1428:	cmp	x0, x16
    142c:	b.ne	14ec <gconv@@Base+0xbc4>  // b.any
    1430:	cmp	x23, x16
    1434:	b.ne	b64 <gconv@@Base+0x23c>  // b.any
    1438:	ldr	w0, [x21, #20]
    143c:	sub	w0, w0, #0x1
    1440:	str	w0, [x21, #20]
    1444:	b	b64 <gconv@@Base+0x23c>
    1448:	mov	w10, #0x5                   	// #5
    144c:	ldp	x19, x20, [sp, #16]
    1450:	b	c38 <gconv@@Base+0x310>
    1454:	ldr	x1, [x24]
    1458:	add	x28, x28, #0x1
    145c:	mov	x0, #0x6                   	// #6
    1460:	add	x1, x1, #0x1
    1464:	str	x1, [x24]
    1468:	b	125c <gconv@@Base+0x934>
    146c:	strb	w2, [x8]
    1470:	b	e88 <gconv@@Base+0x560>
    1474:	mov	w10, #0x7                   	// #7
    1478:	str	x2, [x11]
    147c:	b	c28 <gconv@@Base+0x300>
    1480:	ldr	x2, [x25]
    1484:	add	x3, sp, #0xc0
    1488:	mov	x6, x24
    148c:	mov	x4, x22
    1490:	mov	x1, x21
    1494:	mov	x0, x27
    1498:	stp	x5, x7, [sp, #104]
    149c:	str	x10, [sp, #160]
    14a0:	bl	700 <__gconv_transliterate@plt>
    14a4:	mov	w3, w0
    14a8:	cmp	w0, #0x6
    14ac:	ldp	x5, x7, [sp, #104]
    14b0:	ldr	x10, [sp, #160]
    14b4:	b.eq	17b0 <gconv@@Base+0xe88>  // b.none
    14b8:	cmp	w0, #0x5
    14bc:	ldp	x0, x16, [sp, #192]
    14c0:	b.ne	fd8 <gconv@@Base+0x6b0>  // b.any
    14c4:	mov	x11, x25
    14c8:	mov	w15, w28
    14cc:	mov	x28, x0
    14d0:	mov	x25, x26
    14d4:	ldr	x0, [sp, #184]
    14d8:	str	x28, [x11]
    14dc:	mov	x23, x7
    14e0:	mov	x26, x10
    14e4:	cmp	x0, x16
    14e8:	b.eq	1430 <gconv@@Base+0xb08>  // b.none
    14ec:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    14f0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    14f4:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    14f8:	add	x3, x3, #0xd80
    14fc:	add	x1, x1, #0xbe8
    1500:	add	x0, x0, #0xd00
    1504:	mov	w2, #0x2ea                 	// #746
    1508:	bl	750 <__assert_fail@plt>
    150c:	cmp	x28, x10
    1510:	b.cc	1448 <gconv@@Base+0xb20>  // b.lo, b.ul, b.last
    1514:	mov	x3, x23
    1518:	add	x19, sp, #0xd0
    151c:	mov	x2, #0x0                   	// #0
    1520:	ldrb	w5, [x3], #1
    1524:	add	x14, x2, #0x1
    1528:	strb	w5, [x19, x2]
    152c:	cmp	x14, #0x1
    1530:	ccmp	x22, x3, #0x0, ls  // ls = plast
    1534:	mov	x2, #0x1                   	// #1
    1538:	b.hi	1520 <gconv@@Base+0xbf8>  // b.pmore
    153c:	b	1148 <gconv@@Base+0x820>
    1540:	ldr	x0, [x11]
    1544:	sub	x1, x22, x0
    1548:	cmp	x1, #0x3
    154c:	b.gt	19a4 <gconv@@Base+0x107c>
    1550:	ldr	x2, [x21, #32]
    1554:	cmp	x0, x22
    1558:	add	x0, x0, #0x1
    155c:	add	x3, x2, #0x4
    1560:	b.cs	17ec <gconv@@Base+0xec4>  // b.hs, b.nlast
    1564:	str	x0, [x11]
    1568:	cmp	x22, x0
    156c:	add	x0, x0, #0x1
    1570:	ldurb	w4, [x0, #-2]
    1574:	strb	w4, [x3], #1
    1578:	b.ne	1564 <gconv@@Base+0xc3c>  // b.any
    157c:	ldr	w0, [x2]
    1580:	ldp	x19, x20, [sp, #16]
    1584:	and	w0, w0, #0xfffffff8
    1588:	orr	w0, w0, w1
    158c:	str	w0, [x2]
    1590:	b	c38 <gconv@@Base+0x310>
    1594:	ldr	x1, [x24]
    1598:	add	x0, x9, #0x4
    159c:	mov	w3, #0x6                   	// #6
    15a0:	str	x0, [sp, #192]
    15a4:	add	x1, x1, #0x1
    15a8:	str	x1, [x24]
    15ac:	b	fd8 <gconv@@Base+0x6b0>
    15b0:	ldp	x0, x1, [sp, #184]
    15b4:	str	x1, [x25]
    15b8:	cmp	x0, x16
    15bc:	b.eq	13a0 <gconv@@Base+0xa78>  // b.none
    15c0:	b	14ec <gconv@@Base+0xbc4>
    15c4:	mov	w0, #0x1c00                	// #7168
    15c8:	cmp	w0, w2, lsr #7
    15cc:	b.ne	137c <gconv@@Base+0xa54>  // b.any
    15d0:	mov	x0, x1
    15d4:	str	x1, [sp, #192]
    15d8:	b	fd8 <gconv@@Base+0x6b0>
    15dc:	mov	x0, #0x4                   	// #4
    15e0:	mov	x20, #0x0                   	// #0
    15e4:	b	dac <gconv@@Base+0x484>
    15e8:	cbz	x24, d20 <gconv@@Base+0x3f8>
    15ec:	cbz	w7, d20 <gconv@@Base+0x3f8>
    15f0:	ldr	x0, [x24]
    15f4:	add	x2, x2, #0x2
    15f8:	mov	w10, #0x6                   	// #6
    15fc:	add	x0, x0, #0x1
    1600:	str	x0, [x24]
    1604:	b	c0c <gconv@@Base+0x2e4>
    1608:	mov	w3, #0x5c                  	// #92
    160c:	b	1250 <gconv@@Base+0x928>
    1610:	mov	x2, x22
    1614:	mov	x20, x23
    1618:	mov	w10, #0x4                   	// #4
    161c:	str	x2, [x11]
    1620:	b	c28 <gconv@@Base+0x300>
    1624:	mov	w10, #0x6                   	// #6
    1628:	ldr	x0, [sp, #192]
    162c:	b	ae8 <gconv@@Base+0x1c0>
    1630:	mov	w10, #0x6                   	// #6
    1634:	cbz	x12, 1074 <gconv@@Base+0x74c>
    1638:	tbz	w24, #1, 1074 <gconv@@Base+0x74c>
    163c:	ldr	x2, [x12]
    1640:	mov	x0, #0x1                   	// #1
    1644:	add	x2, x2, x0
    1648:	str	x2, [x12]
    164c:	b	11ac <gconv@@Base+0x884>
    1650:	adrp	x5, 2000 <gconv@@Base+0x16d8>
    1654:	and	w2, w2, #0xffff
    1658:	add	x5, x5, #0x268
    165c:	mov	w3, #0x2423                	// #9251
    1660:	mov	w4, #0x0                   	// #0
    1664:	b	168c <gconv@@Base+0xd64>
    1668:	add	w0, w3, w4
    166c:	lsr	w1, w0, #1
    1670:	lsr	w0, w0, #1
    1674:	lsl	x1, x1, #2
    1678:	add	x6, x5, x1
    167c:	ldrh	w1, [x5, x1]
    1680:	cmp	w1, w2
    1684:	b.ls	16ac <gconv@@Base+0xd84>  // b.plast
    1688:	mov	w3, w0
    168c:	cmp	w3, w4
    1690:	b.hi	1668 <gconv@@Base+0xd40>  // b.pmore
    1694:	cbz	x12, 16a0 <gconv@@Base+0xd78>
    1698:	tbnz	w24, #3, 18d0 <gconv@@Base+0xfa8>
    169c:	tbnz	w24, #1, 18ac <gconv@@Base+0xf84>
    16a0:	mov	w10, #0x6                   	// #6
    16a4:	ldp	x19, x20, [sp, #16]
    16a8:	b	c38 <gconv@@Base+0x310>
    16ac:	b.cs	1a08 <gconv@@Base+0x10e0>  // b.hs, b.nlast
    16b0:	add	w4, w0, #0x1
    16b4:	b	168c <gconv@@Base+0xd64>
    16b8:	cbnz	w10, 1074 <gconv@@Base+0x74c>
    16bc:	ldr	w24, [x21, #16]
    16c0:	ldr	x23, [x11]
    16c4:	b	9d4 <gconv@@Base+0xac>
    16c8:	str	x22, [x11]
    16cc:	cmp	x23, x22
    16d0:	b.cs	16f8 <gconv@@Base+0xdd0>  // b.hs, b.nlast
    16d4:	add	x23, x23, #0x1
    16d8:	add	x7, x7, x20
    16dc:	str	x23, [sp, #192]
    16e0:	cmp	x22, x23
    16e4:	add	x7, x7, #0x1
    16e8:	add	x23, x23, #0x1
    16ec:	ldurb	w0, [x23, #-2]
    16f0:	strb	w0, [x7, #3]
    16f4:	b.ne	16dc <gconv@@Base+0xdb4>  // b.any
    16f8:	mov	w10, #0x7                   	// #7
    16fc:	ldp	x19, x20, [sp, #16]
    1700:	b	c38 <gconv@@Base+0x310>
    1704:	mov	w0, #0x1c00                	// #7168
    1708:	cmp	w0, w2, lsr #7
    170c:	b.ne	1694 <gconv@@Base+0xd6c>  // b.any
    1710:	add	x0, x19, #0x4
    1714:	mov	x19, #0x4                   	// #4
    1718:	str	x0, [sp, #192]
    171c:	b	ea8 <gconv@@Base+0x580>
    1720:	mov	w3, #0x5c                  	// #92
    1724:	b	1198 <gconv@@Base+0x870>
    1728:	cbz	w1, 1250 <gconv@@Base+0x928>
    172c:	cmp	x22, x4
    1730:	b.ls	1a5c <gconv@@Base+0x1134>  // b.plast
    1734:	ldrb	w3, [x28, #1]
    1738:	add	w1, w3, w1, lsl #8
    173c:	cmp	w1, w8
    1740:	b.hi	1784 <gconv@@Base+0xe5c>  // b.pmore
    1744:	mov	x4, x30
    1748:	mov	w3, #0x8140                	// #33088
    174c:	cmp	w3, w1
    1750:	b.hi	1a3c <gconv@@Base+0x1114>  // b.pmore
    1754:	ldr	w3, [x4, #4]
    1758:	add	w1, w1, w3
    175c:	ldrh	w1, [x5, x1, lsl #1]
    1760:	cbz	w1, 1a3c <gconv@@Base+0x1114>
    1764:	add	x28, x28, #0x2
    1768:	str	w1, [x16]
    176c:	mov	x16, x2
    1770:	b	125c <gconv@@Base+0x934>
    1774:	cmp	x22, x4
    1778:	b.ls	1a5c <gconv@@Base+0x1134>  // b.plast
    177c:	ldrb	w3, [x28, #1]
    1780:	add	w1, w3, w1, lsl #8
    1784:	add	x3, x17, #0xd88
    1788:	mov	w13, #0x82f1                	// #33521
    178c:	add	x3, x3, #0x1c0
    1790:	b	179c <gconv@@Base+0xe74>
    1794:	ldrh	w13, [x4, #10]
    1798:	mov	x3, x4
    179c:	cmp	w13, w1
    17a0:	add	x4, x3, #0x8
    17a4:	b.cc	1794 <gconv@@Base+0xe6c>  // b.lo, b.ul, b.last
    17a8:	ldrh	w3, [x3, #8]
    17ac:	b	174c <gconv@@Base+0xe24>
    17b0:	ldr	x16, [sp, #200]
    17b4:	b	1388 <gconv@@Base+0xa60>
    17b8:	add	x0, x16, #0x2
    17bc:	ldrh	w1, [x9, #2]
    17c0:	cmp	x20, x0
    17c4:	b.cc	140c <gconv@@Base+0xae4>  // b.lo, b.ul, b.last
    17c8:	add	x0, x16, #0x1
    17cc:	str	x0, [sp, #200]
    17d0:	lsr	w0, w1, #8
    17d4:	strb	w0, [x16]
    17d8:	ldr	x0, [sp, #200]
    17dc:	add	x2, x0, #0x1
    17e0:	str	x2, [sp, #200]
    17e4:	strb	w1, [x0]
    17e8:	b	fcc <gconv@@Base+0x6a4>
    17ec:	mov	w1, #0x0                   	// #0
    17f0:	b	157c <gconv@@Base+0xc54>
    17f4:	cmp	x7, x23
    17f8:	b.eq	1438 <gconv@@Base+0xb10>  // b.none
    17fc:	b	14ec <gconv@@Base+0xbc4>
    1800:	add	x2, x19, #0x1
    1804:	cmp	x15, x2
    1808:	b.ls	1abc <gconv@@Base+0x1194>  // b.plast
    180c:	ldrb	w0, [sp, #209]
    1810:	adrp	x5, 1000 <gconv@@Base+0x6d8>
    1814:	add	w0, w0, w6, lsl #8
    1818:	add	x2, x5, #0xd88
    181c:	mov	w3, #0x82f1                	// #33521
    1820:	add	x2, x2, #0x1c0
    1824:	b	182c <gconv@@Base+0xf04>
    1828:	ldrh	w3, [x2, #10]
    182c:	add	x2, x2, #0x8
    1830:	cmp	w3, w0
    1834:	b.cc	1828 <gconv@@Base+0xf00>  // b.lo, b.ul, b.last
    1838:	ldrh	w3, [x2]
    183c:	cmp	w3, w0
    1840:	b.hi	1b0c <gconv@@Base+0x11e4>  // b.pmore
    1844:	ldr	w3, [x2, #4]
    1848:	adrp	x2, b000 <gconv@@Base+0xa6d8>
    184c:	add	x2, x2, #0x2f8
    1850:	add	w0, w0, w3
    1854:	ldrh	w0, [x2, x0, lsl #1]
    1858:	cbz	w0, 1b0c <gconv@@Base+0x11e4>
    185c:	str	w0, [x8]
    1860:	mov	x8, x10
    1864:	mov	x0, #0x2                   	// #2
    1868:	ldr	w1, [x7]
    186c:	and	w4, w1, #0x7
    1870:	b	11ac <gconv@@Base+0x884>
    1874:	cbz	w6, 1198 <gconv@@Base+0x870>
    1878:	add	x3, x19, #0x1
    187c:	cmp	x15, x3
    1880:	b.ls	1abc <gconv@@Base+0x1194>  // b.plast
    1884:	ldrb	w0, [sp, #209]
    1888:	mov	w3, #0x81fc                	// #33276
    188c:	add	x2, x2, #0x1c0
    1890:	add	w0, w0, w6, lsl #8
    1894:	cmp	w0, w3
    1898:	b.hi	1818 <gconv@@Base+0xef0>  // b.pmore
    189c:	b	1838 <gconv@@Base+0xf10>
    18a0:	cmp	x7, x23
    18a4:	b.eq	13a0 <gconv@@Base+0xa78>  // b.none
    18a8:	b	14ec <gconv@@Base+0xbc4>
    18ac:	mov	x0, x19
    18b0:	ldr	x1, [x12]
    18b4:	add	x0, x0, #0x4
    18b8:	str	x0, [sp, #192]
    18bc:	add	x1, x1, #0x1
    18c0:	str	x1, [x12]
    18c4:	cmp	x0, x19
    18c8:	b.ne	e9c <gconv@@Base+0x574>  // b.any
    18cc:	b	16a0 <gconv@@Base+0xd78>
    18d0:	add	x4, x19, x20
    18d4:	mov	x6, x12
    18d8:	mov	x0, x13
    18dc:	mov	x2, x23
    18e0:	add	x5, sp, #0xc8
    18e4:	add	x3, sp, #0xc0
    18e8:	mov	x1, x21
    18ec:	stp	x13, x12, [sp, #104]
    18f0:	stp	x4, x7, [sp, #120]
    18f4:	str	x8, [sp, #136]
    18f8:	stp	x11, x9, [sp, #160]
    18fc:	bl	700 <__gconv_transliterate@plt>
    1900:	mov	w10, w0
    1904:	cmp	w0, #0x6
    1908:	ldp	x13, x12, [sp, #104]
    190c:	ldr	x7, [sp, #128]
    1910:	ldp	x11, x9, [sp, #160]
    1914:	ldr	x0, [sp, #192]
    1918:	b.eq	199c <gconv@@Base+0x1074>  // b.none
    191c:	cmp	x0, x19
    1920:	ldr	x4, [sp, #120]
    1924:	ldr	x8, [sp, #136]
    1928:	b.ne	e9c <gconv@@Base+0x574>  // b.any
    192c:	cmp	w10, #0x7
    1930:	b.ne	16b8 <gconv@@Base+0xd90>  // b.any
    1934:	add	x0, x19, #0x4
    1938:	cmp	x4, x0
    193c:	b.eq	1bb8 <gconv@@Base+0x1290>  // b.none
    1940:	ldr	w0, [x7]
    1944:	ldr	x1, [x11]
    1948:	and	x2, x0, #0x7
    194c:	sub	x2, x20, x2
    1950:	and	w0, w0, #0xfffffff8
    1954:	add	x1, x1, x2
    1958:	str	x1, [x11]
    195c:	cmp	x20, w0, sxtw
    1960:	b.le	1ba8 <gconv@@Base+0x1280>
    1964:	cmp	x20, #0x4
    1968:	b.hi	1b98 <gconv@@Base+0x1270>  // b.pmore
    196c:	orr	w0, w0, w20
    1970:	str	w0, [x7]
    1974:	cmp	x4, x19
    1978:	b.ls	16f8 <gconv@@Base+0xdd0>  // b.plast
    197c:	add	x7, x7, #0x4
    1980:	add	x19, x19, #0x1
    1984:	str	x19, [sp, #192]
    1988:	cmp	x4, x19
    198c:	ldurb	w0, [x19, #-1]
    1990:	strb	w0, [x7], #1
    1994:	b.ne	1980 <gconv@@Base+0x1058>  // b.any
    1998:	b	16f8 <gconv@@Base+0xdd0>
    199c:	tbz	w24, #1, 18c4 <gconv@@Base+0xf9c>
    19a0:	b	18b0 <gconv@@Base+0xf88>
    19a4:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19a8:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19ac:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19b0:	add	x3, x3, #0xd80
    19b4:	add	x1, x1, #0xbe8
    19b8:	add	x0, x0, #0xd38
    19bc:	mov	w2, #0x31e                 	// #798
    19c0:	bl	750 <__assert_fail@plt>
    19c4:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19c8:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19cc:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19d0:	add	x3, x3, #0xd80
    19d4:	add	x1, x1, #0xbe8
    19d8:	add	x0, x0, #0xc00
    19dc:	mov	w2, #0x1a4                 	// #420
    19e0:	stp	x19, x20, [sp, #16]
    19e4:	bl	750 <__assert_fail@plt>
    19e8:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19ec:	add	x3, x3, #0xd50
    19f0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19f4:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19f8:	add	x1, x1, #0xc18
    19fc:	add	x0, x0, #0xc58
    1a00:	mov	w2, #0x1c9                 	// #457
    1a04:	bl	750 <__assert_fail@plt>
    1a08:	add	x0, x8, #0x2
    1a0c:	ldrh	w1, [x6, #2]
    1a10:	cmp	x28, x0
    1a14:	b.cc	1448 <gconv@@Base+0xb20>  // b.lo, b.ul, b.last
    1a18:	add	x0, x8, #0x1
    1a1c:	str	x0, [sp, #200]
    1a20:	lsr	w0, w1, #8
    1a24:	strb	w0, [x8]
    1a28:	ldr	x0, [sp, #200]
    1a2c:	add	x2, x0, #0x1
    1a30:	str	x2, [sp, #200]
    1a34:	strb	w1, [x0]
    1a38:	b	e88 <gconv@@Base+0x560>
    1a3c:	cbz	x24, 132c <gconv@@Base+0xa04>
    1a40:	cbz	w20, 132c <gconv@@Base+0xa04>
    1a44:	ldr	x1, [x24]
    1a48:	add	x28, x28, #0x2
    1a4c:	mov	x0, #0x6                   	// #6
    1a50:	add	x1, x1, #0x1
    1a54:	str	x1, [x24]
    1a58:	b	125c <gconv@@Base+0x934>
    1a5c:	mov	x0, #0x7                   	// #7
    1a60:	b	1274 <gconv@@Base+0x94c>
    1a64:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1a68:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1a6c:	add	x3, x3, #0xd68
    1a70:	b	19f4 <gconv@@Base+0x10cc>
    1a74:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1a78:	add	x3, x3, #0xd68
    1a7c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1a80:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1a84:	add	x1, x1, #0xc18
    1a88:	add	x0, x0, #0xc28
    1a8c:	mov	w2, #0x18b                 	// #395
    1a90:	bl	750 <__assert_fail@plt>
    1a94:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1a98:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1a9c:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1aa0:	add	x3, x3, #0xd80
    1aa4:	add	x1, x1, #0xbe8
    1aa8:	add	x0, x0, #0xc00
    1aac:	mov	w2, #0x234                 	// #564
    1ab0:	bl	750 <__assert_fail@plt>
    1ab4:	stp	x19, x20, [sp, #16]
    1ab8:	bl	710 <__stack_chk_fail@plt>
    1abc:	add	x2, x19, #0x2
    1ac0:	cmp	x15, x2
    1ac4:	b.eq	1b68 <gconv@@Base+0x1240>  // b.none
    1ac8:	mov	w0, w0
    1acc:	and	w1, w1, #0xfffffff8
    1ad0:	sub	x0, x14, x0
    1ad4:	add	x23, x23, x0
    1ad8:	str	x23, [x11]
    1adc:	cmp	x14, w1, sxtw
    1ae0:	b.le	1b48 <gconv@@Base+0x1220>
    1ae4:	cmp	x14, #0x4
    1ae8:	b.hi	1b28 <gconv@@Base+0x1200>  // b.pmore
    1aec:	orr	w1, w1, w14
    1af0:	str	w1, [x7]
    1af4:	cmp	x15, x19
    1af8:	mov	w10, #0x7                   	// #7
    1afc:	b.ls	1074 <gconv@@Base+0x74c>  // b.plast
    1b00:	strb	w6, [x7, #4]
    1b04:	ldp	x19, x20, [sp, #16]
    1b08:	b	c38 <gconv@@Base+0x310>
    1b0c:	cbz	x12, 16a0 <gconv@@Base+0xd78>
    1b10:	tbz	w24, #1, 16a0 <gconv@@Base+0xd78>
    1b14:	ldr	x2, [x12]
    1b18:	mov	x0, #0x2                   	// #2
    1b1c:	add	x2, x2, #0x1
    1b20:	str	x2, [x12]
    1b24:	b	11ac <gconv@@Base+0x884>
    1b28:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b2c:	add	x3, x3, #0xd68
    1b30:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1b34:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1b38:	add	x1, x1, #0xc18
    1b3c:	add	x0, x0, #0xcd0
    1b40:	mov	w2, #0x1e6                 	// #486
    1b44:	bl	750 <__assert_fail@plt>
    1b48:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b4c:	add	x3, x3, #0xd68
    1b50:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1b54:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1b58:	add	x1, x1, #0xc18
    1b5c:	add	x0, x0, #0xca8
    1b60:	mov	w2, #0x1e5                 	// #485
    1b64:	bl	750 <__assert_fail@plt>
    1b68:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b6c:	add	x3, x3, #0xd68
    1b70:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1b74:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1b78:	add	x1, x1, #0xc18
    1b7c:	add	x0, x0, #0xc80
    1b80:	mov	w2, #0x1db                 	// #475
    1b84:	bl	750 <__assert_fail@plt>
    1b88:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b8c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1b90:	add	x3, x3, #0xd50
    1b94:	b	1a80 <gconv@@Base+0x1158>
    1b98:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b9c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1ba0:	add	x3, x3, #0xd50
    1ba4:	b	1b34 <gconv@@Base+0x120c>
    1ba8:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1bac:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1bb0:	add	x3, x3, #0xd50
    1bb4:	b	1b54 <gconv@@Base+0x122c>
    1bb8:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1bbc:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1bc0:	add	x3, x3, #0xd50
    1bc4:	b	1b74 <gconv@@Base+0x124c>

Disassembly of section .fini:

0000000000001bc8 <.fini>:
    1bc8:	stp	x29, x30, [sp, #-16]!
    1bcc:	mov	x29, sp
    1bd0:	ldp	x29, x30, [sp], #16
    1bd4:	ret
