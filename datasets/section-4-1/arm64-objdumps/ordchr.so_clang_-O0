
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000658 <.init>:
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	700 <fprintf@plt+0x10>
 664:	ldp	x29, x30, [sp], #16
 668:	ret

Disassembly of section .plt:

0000000000000670 <memcpy@plt-0x20>:
 670:	stp	x16, x30, [sp, #-16]!
 674:	adrp	x16, 11000 <dl_load@@Base+0x1082c>
 678:	ldr	x17, [x16, #4088]
 67c:	add	x16, x16, #0xff8
 680:	br	x17
 684:	nop
 688:	nop
 68c:	nop

0000000000000690 <memcpy@plt>:
 690:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 694:	ldr	x17, [x16]
 698:	add	x16, x16, #0x0
 69c:	br	x17

00000000000006a0 <exit@plt>:
 6a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #8]
 6a8:	add	x16, x16, #0x8
 6ac:	br	x17

00000000000006b0 <__cxa_finalize@plt>:
 6b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #16]
 6b8:	add	x16, x16, #0x10
 6bc:	br	x17

00000000000006c0 <memset@plt>:
 6c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #24]
 6c8:	add	x16, x16, #0x18
 6cc:	br	x17

00000000000006d0 <__gmon_start__@plt>:
 6d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #32]
 6d8:	add	x16, x16, #0x20
 6dc:	br	x17

00000000000006e0 <gettext@plt>:
 6e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #40]
 6e8:	add	x16, x16, #0x28
 6ec:	br	x17

00000000000006f0 <fprintf@plt>:
 6f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 6f4:	ldr	x17, [x16, #48]
 6f8:	add	x16, x16, #0x30
 6fc:	br	x17

Disassembly of section .text:

0000000000000700 <dl_load@@Base-0xd4>:
 700:	adrp	x0, 11000 <dl_load@@Base+0x1082c>
 704:	ldr	x0, [x0, #4056]
 708:	cbz	x0, 710 <fprintf@plt+0x20>
 70c:	b	6d0 <__gmon_start__@plt>
 710:	ret
 714:	nop
 718:	adrp	x0, 12000 <dl_load@@Base+0x1182c>
 71c:	add	x0, x0, #0xa8
 720:	adrp	x1, 12000 <dl_load@@Base+0x1182c>
 724:	add	x1, x1, #0xa8
 728:	cmp	x1, x0
 72c:	b.eq	744 <fprintf@plt+0x54>  // b.none
 730:	adrp	x1, 11000 <dl_load@@Base+0x1082c>
 734:	ldr	x1, [x1, #4032]
 738:	cbz	x1, 744 <fprintf@plt+0x54>
 73c:	mov	x16, x1
 740:	br	x16
 744:	ret
 748:	adrp	x0, 12000 <dl_load@@Base+0x1182c>
 74c:	add	x0, x0, #0xa8
 750:	adrp	x1, 12000 <dl_load@@Base+0x1182c>
 754:	add	x1, x1, #0xa8
 758:	sub	x1, x1, x0
 75c:	lsr	x2, x1, #63
 760:	add	x1, x2, x1, asr #3
 764:	cmp	xzr, x1, asr #1
 768:	asr	x1, x1, #1
 76c:	b.eq	784 <fprintf@plt+0x94>  // b.none
 770:	adrp	x2, 11000 <dl_load@@Base+0x1082c>
 774:	ldr	x2, [x2, #4064]
 778:	cbz	x2, 784 <fprintf@plt+0x94>
 77c:	mov	x16, x2
 780:	br	x16
 784:	ret
 788:	stp	x29, x30, [sp, #-32]!
 78c:	mov	x29, sp
 790:	str	x19, [sp, #16]
 794:	adrp	x19, 12000 <dl_load@@Base+0x1182c>
 798:	ldrb	w0, [x19, #168]
 79c:	cbnz	w0, 7c4 <fprintf@plt+0xd4>
 7a0:	adrp	x0, 11000 <dl_load@@Base+0x1082c>
 7a4:	ldr	x0, [x0, #4040]
 7a8:	cbz	x0, 7b8 <fprintf@plt+0xc8>
 7ac:	adrp	x0, 12000 <dl_load@@Base+0x1182c>
 7b0:	ldr	x0, [x0, #56]
 7b4:	bl	6b0 <__cxa_finalize@plt>
 7b8:	bl	718 <fprintf@plt+0x28>
 7bc:	mov	w0, #0x1                   	// #1
 7c0:	strb	w0, [x19, #168]
 7c4:	ldr	x19, [sp, #16]
 7c8:	ldp	x29, x30, [sp], #32
 7cc:	ret
 7d0:	b	748 <fprintf@plt+0x58>

00000000000007d4 <dl_load@@Base>:
 7d4:	sub	sp, sp, #0x60
 7d8:	stp	x29, x30, [sp, #80]
 7dc:	add	x29, sp, #0x50
 7e0:	adrp	x8, 12000 <dl_load@@Base+0x1182c>
 7e4:	add	x8, x8, #0xb0
 7e8:	adrp	x9, 12000 <dl_load@@Base+0x1182c>
 7ec:	add	x9, x9, #0xb8
 7f0:	adrp	x10, 12000 <dl_load@@Base+0x1182c>
 7f4:	add	x10, x10, #0x40
 7f8:	stur	x0, [x29, #-8]
 7fc:	stur	x1, [x29, #-16]
 800:	stur	wzr, [x29, #-36]
 804:	ldur	x11, [x29, #-8]
 808:	str	x11, [x8]
 80c:	ldur	x11, [x29, #-16]
 810:	str	x11, [x9]
 814:	ldr	x11, [x8]
 818:	ldr	w12, [x11]
 81c:	cmp	w12, #0x2
 820:	str	x8, [sp, #32]
 824:	str	x9, [sp, #24]
 828:	str	x10, [sp, #16]
 82c:	b.ne	848 <dl_load@@Base+0x74>  // b.any
 830:	ldr	x8, [sp, #32]
 834:	ldr	x9, [x8]
 838:	ldr	w10, [x9, #4]
 83c:	cmp	w10, #0x0
 840:	cset	w10, ge  // ge = tcont
 844:	tbnz	w10, #0, 8a8 <dl_load@@Base+0xd4>
 848:	adrp	x8, 11000 <dl_load@@Base+0x1082c>
 84c:	ldr	x8, [x8, #4048]
 850:	ldr	x0, [x8]
 854:	adrp	x1, 0 <memcpy@plt-0x690>
 858:	add	x1, x1, #0xdb8
 85c:	str	x8, [sp, #8]
 860:	bl	6f0 <fprintf@plt>
 864:	ldr	x8, [sp, #8]
 868:	ldr	x9, [x8]
 86c:	ldr	x10, [sp, #32]
 870:	ldr	x11, [x10]
 874:	ldr	w4, [x11]
 878:	ldr	x11, [x10]
 87c:	ldr	w5, [x11, #4]
 880:	mov	x0, x9
 884:	adrp	x1, 0 <memcpy@plt-0x690>
 888:	add	x1, x1, #0xdde
 88c:	mov	w2, #0x2                   	// #2
 890:	mov	w12, wzr
 894:	mov	w3, w12
 898:	bl	6f0 <fprintf@plt>
 89c:	mov	w12, #0x1                   	// #1
 8a0:	mov	w0, w12
 8a4:	bl	6a0 <exit@plt>
 8a8:	stur	xzr, [x29, #-24]
 8ac:	mov	x8, #0x2                   	// #2
 8b0:	stur	x8, [x29, #-32]
 8b4:	ldur	x8, [x29, #-24]
 8b8:	ldur	x9, [x29, #-32]
 8bc:	cmp	x8, x9
 8c0:	b.cs	970 <dl_load@@Base+0x19c>  // b.hs, b.nlast
 8c4:	ldur	x8, [x29, #-24]
 8c8:	mov	x9, #0x30                  	// #48
 8cc:	mul	x8, x9, x8
 8d0:	ldr	x9, [sp, #16]
 8d4:	add	x8, x9, x8
 8d8:	ldr	x8, [x8]
 8dc:	cbnz	x8, 8e4 <dl_load@@Base+0x110>
 8e0:	b	970 <dl_load@@Base+0x19c>
 8e4:	ldr	x8, [sp, #32]
 8e8:	ldr	x9, [x8]
 8ec:	mov	x10, #0x30                  	// #48
 8f0:	ldr	x9, [x9, #48]
 8f4:	ldr	x11, [sp, #24]
 8f8:	ldr	x0, [x11]
 8fc:	ldur	x12, [x29, #-24]
 900:	mul	x10, x10, x12
 904:	ldr	x12, [sp, #16]
 908:	add	x2, x12, x10
 90c:	adrp	x1, 0 <memcpy@plt-0x690>
 910:	add	x1, x1, #0xddd
 914:	blr	x9
 918:	cbnz	w0, 960 <dl_load@@Base+0x18c>
 91c:	ldr	x8, [sp, #32]
 920:	ldr	x9, [x8]
 924:	ldr	x9, [x9, #104]
 928:	ldr	x10, [sp, #24]
 92c:	ldr	x0, [x10]
 930:	ldur	x11, [x29, #-24]
 934:	mov	x12, #0x30                  	// #48
 938:	mul	x11, x12, x11
 93c:	ldr	x12, [sp, #16]
 940:	add	x11, x12, x11
 944:	ldr	x2, [x11]
 948:	adrp	x1, 0 <memcpy@plt-0x690>
 94c:	add	x1, x1, #0xe11
 950:	blr	x9
 954:	ldur	w13, [x29, #-36]
 958:	add	w13, w13, #0x1
 95c:	stur	w13, [x29, #-36]
 960:	ldur	x8, [x29, #-24]
 964:	add	x8, x8, #0x1
 968:	stur	x8, [x29, #-24]
 96c:	b	8b4 <dl_load@@Base+0xe0>
 970:	adrp	x8, 12000 <dl_load@@Base+0x1182c>
 974:	add	x8, x8, #0xc0
 978:	ldr	x8, [x8]
 97c:	cbz	x8, 9c0 <dl_load@@Base+0x1ec>
 980:	adrp	x8, 12000 <dl_load@@Base+0x1182c>
 984:	add	x8, x8, #0xc0
 988:	ldr	x8, [x8]
 98c:	blr	x8
 990:	cbnz	w0, 9c0 <dl_load@@Base+0x1ec>
 994:	ldr	x8, [sp, #32]
 998:	ldr	x9, [x8]
 99c:	ldr	x9, [x9, #104]
 9a0:	ldr	x10, [sp, #24]
 9a4:	ldr	x0, [x10]
 9a8:	adrp	x1, 0 <memcpy@plt-0x690>
 9ac:	add	x1, x1, #0xe2b
 9b0:	blr	x9
 9b4:	ldur	w11, [x29, #-36]
 9b8:	add	w11, w11, #0x1
 9bc:	stur	w11, [x29, #-36]
 9c0:	adrp	x8, 12000 <dl_load@@Base+0x1182c>
 9c4:	add	x8, x8, #0xa0
 9c8:	ldr	x8, [x8]
 9cc:	cbz	x8, 9f4 <dl_load@@Base+0x220>
 9d0:	ldr	x8, [sp, #32]
 9d4:	ldr	x9, [x8]
 9d8:	ldr	x9, [x9, #88]
 9dc:	ldr	x10, [sp, #24]
 9e0:	ldr	x0, [x10]
 9e4:	adrp	x11, 12000 <dl_load@@Base+0x1182c>
 9e8:	add	x11, x11, #0xa0
 9ec:	ldr	x1, [x11]
 9f0:	blr	x9
 9f4:	ldur	w8, [x29, #-36]
 9f8:	cmp	w8, #0x0
 9fc:	cset	w8, eq  // eq = none
 a00:	and	w0, w8, #0x1
 a04:	ldp	x29, x30, [sp, #80]
 a08:	add	sp, sp, #0x60
 a0c:	ret
 a10:	sub	sp, sp, #0x70
 a14:	stp	x29, x30, [sp, #96]
 a18:	add	x29, sp, #0x60
 a1c:	fmov	d0, #-1.000000000000000000e+00
 a20:	adrp	x8, 12000 <dl_load@@Base+0x1182c>
 a24:	add	x8, x8, #0xb0
 a28:	adrp	x9, 12000 <dl_load@@Base+0x1182c>
 a2c:	add	x9, x9, #0xb8
 a30:	mov	x10, xzr
 a34:	mov	w11, #0x2                   	// #2
 a38:	add	x3, sp, #0x28
 a3c:	stur	w0, [x29, #-4]
 a40:	stur	x1, [x29, #-16]
 a44:	stur	x2, [x29, #-24]
 a48:	str	d0, [sp, #32]
 a4c:	ldr	x12, [x8]
 a50:	ldr	x12, [x12, #152]
 a54:	ldr	x0, [x9]
 a58:	mov	x1, x10
 a5c:	mov	w2, w11
 a60:	str	x8, [sp, #24]
 a64:	blr	x12
 a68:	cbz	w0, a84 <dl_load@@Base+0x2b0>
 a6c:	add	x8, sp, #0x28
 a70:	ldr	x8, [x8, #8]
 a74:	ldrb	w9, [x8]
 a78:	ucvtf	d0, w9
 a7c:	str	d0, [sp, #32]
 a80:	b	adc <dl_load@@Base+0x308>
 a84:	ldr	x8, [sp, #24]
 a88:	ldr	x9, [x8]
 a8c:	ldr	w10, [x9, #24]
 a90:	cbz	w10, adc <dl_load@@Base+0x308>
 a94:	ldr	x8, [sp, #24]
 a98:	ldr	x9, [x8]
 a9c:	ldr	x9, [x9, #112]
 aa0:	adrp	x10, 12000 <dl_load@@Base+0x1182c>
 aa4:	add	x10, x10, #0xb8
 aa8:	ldr	x0, [x10]
 aac:	adrp	x10, 0 <memcpy@plt-0x690>
 ab0:	add	x10, x10, #0xe5b
 ab4:	str	x0, [sp, #16]
 ab8:	mov	x0, x10
 abc:	str	x9, [sp, #8]
 ac0:	bl	6e0 <gettext@plt>
 ac4:	ldr	x8, [sp, #16]
 ac8:	str	x0, [sp]
 acc:	mov	x0, x8
 ad0:	ldr	x1, [sp]
 ad4:	ldr	x9, [sp, #8]
 ad8:	blr	x9
 adc:	ldr	d0, [sp, #32]
 ae0:	ldur	x0, [x29, #-16]
 ae4:	bl	c24 <dl_load@@Base+0x450>
 ae8:	ldp	x29, x30, [sp, #96]
 aec:	add	sp, sp, #0x70
 af0:	ret
 af4:	sub	sp, sp, #0x90
 af8:	stp	x29, x30, [sp, #128]
 afc:	add	x29, sp, #0x80
 b00:	fmov	d0, xzr
 b04:	mov	w8, #0x0                   	// #0
 b08:	adrp	x9, 12000 <dl_load@@Base+0x1182c>
 b0c:	add	x9, x9, #0xb0
 b10:	adrp	x10, 12000 <dl_load@@Base+0x1182c>
 b14:	add	x10, x10, #0xb8
 b18:	mov	x11, xzr
 b1c:	mov	w12, #0x1                   	// #1
 b20:	sub	x3, x29, #0x38
 b24:	add	x13, sp, #0x36
 b28:	stur	w0, [x29, #-4]
 b2c:	stur	x1, [x29, #-16]
 b30:	stur	x2, [x29, #-24]
 b34:	stur	wzr, [x29, #-60]
 b38:	str	d0, [sp, #56]
 b3c:	strb	w8, [x13, #1]
 b40:	strb	w8, [sp, #54]
 b44:	ldr	x13, [x9]
 b48:	ldr	x13, [x13, #152]
 b4c:	ldr	x0, [x10]
 b50:	mov	x1, x11
 b54:	mov	w2, w12
 b58:	str	x9, [sp, #40]
 b5c:	str	x10, [sp, #32]
 b60:	blr	x13
 b64:	cbz	w0, ba0 <dl_load@@Base+0x3cc>
 b68:	ldur	x8, [x29, #-48]
 b6c:	str	x8, [sp, #56]
 b70:	ldr	d0, [sp, #56]
 b74:	fcvtzu	w9, d0
 b78:	stur	w9, [x29, #-60]
 b7c:	ldur	w9, [x29, #-60]
 b80:	and	w9, w9, #0xff
 b84:	stur	w9, [x29, #-60]
 b88:	ldur	w9, [x29, #-60]
 b8c:	add	x8, sp, #0x36
 b90:	strb	w9, [sp, #54]
 b94:	mov	w9, #0x0                   	// #0
 b98:	strb	w9, [x8, #1]
 b9c:	b	bf4 <dl_load@@Base+0x420>
 ba0:	ldr	x8, [sp, #40]
 ba4:	ldr	x9, [x8]
 ba8:	ldr	w10, [x9, #24]
 bac:	cbz	w10, bf4 <dl_load@@Base+0x420>
 bb0:	ldr	x8, [sp, #40]
 bb4:	ldr	x9, [x8]
 bb8:	ldr	x9, [x9, #112]
 bbc:	ldr	x10, [sp, #32]
 bc0:	ldr	x0, [x10]
 bc4:	adrp	x11, 0 <memcpy@plt-0x690>
 bc8:	add	x11, x11, #0xe86
 bcc:	str	x0, [sp, #24]
 bd0:	mov	x0, x11
 bd4:	str	x9, [sp, #16]
 bd8:	bl	6e0 <gettext@plt>
 bdc:	ldr	x8, [sp, #24]
 be0:	str	x0, [sp, #8]
 be4:	mov	x0, x8
 be8:	ldr	x1, [sp, #8]
 bec:	ldr	x9, [sp, #16]
 bf0:	blr	x9
 bf4:	ldr	x8, [sp, #40]
 bf8:	ldr	x0, [x8]
 bfc:	ldr	x9, [sp, #32]
 c00:	ldr	x1, [x9]
 c04:	ldur	x5, [x29, #-16]
 c08:	add	x2, sp, #0x36
 c0c:	mov	x3, #0x1                   	// #1
 c10:	mov	w4, #0x1                   	// #1
 c14:	bl	c5c <dl_load@@Base+0x488>
 c18:	ldp	x29, x30, [sp, #128]
 c1c:	add	sp, sp, #0x90
 c20:	ret
 c24:	sub	sp, sp, #0x10
 c28:	mov	w8, #0x1                   	// #1
 c2c:	str	d0, [sp, #8]
 c30:	str	x0, [sp]
 c34:	ldr	x9, [sp]
 c38:	str	w8, [x9]
 c3c:	ldr	x9, [sp, #8]
 c40:	ldr	x10, [sp]
 c44:	str	x9, [x10, #8]
 c48:	ldr	x9, [sp]
 c4c:	str	wzr, [x9, #16]
 c50:	ldr	x0, [sp]
 c54:	add	sp, sp, #0x10
 c58:	ret
 c5c:	sub	sp, sp, #0x40
 c60:	stp	x29, x30, [sp, #48]
 c64:	add	x29, sp, #0x30
 c68:	mov	w6, #0x2                   	// #2
 c6c:	stur	x0, [x29, #-8]
 c70:	stur	x1, [x29, #-16]
 c74:	str	x2, [sp, #24]
 c78:	str	x3, [sp, #16]
 c7c:	str	w4, [sp, #12]
 c80:	str	x5, [sp]
 c84:	ldur	x0, [x29, #-8]
 c88:	ldur	x1, [x29, #-16]
 c8c:	ldr	x2, [sp, #24]
 c90:	ldr	x3, [sp, #16]
 c94:	ldr	w4, [sp, #12]
 c98:	ldr	x5, [sp]
 c9c:	bl	cac <dl_load@@Base+0x4d8>
 ca0:	ldp	x29, x30, [sp, #48]
 ca4:	add	sp, sp, #0x40
 ca8:	ret
 cac:	sub	sp, sp, #0x50
 cb0:	stp	x29, x30, [sp, #64]
 cb4:	add	x29, sp, #0x40
 cb8:	mov	x8, xzr
 cbc:	mov	x9, #0x20                  	// #32
 cc0:	mov	w10, wzr
 cc4:	stur	x0, [x29, #-8]
 cc8:	stur	x1, [x29, #-16]
 ccc:	stur	x2, [x29, #-24]
 cd0:	str	x3, [sp, #32]
 cd4:	str	w4, [sp, #28]
 cd8:	str	x5, [sp, #16]
 cdc:	str	w6, [sp, #12]
 ce0:	str	x8, [sp]
 ce4:	ldr	x0, [sp, #16]
 ce8:	mov	w1, w10
 cec:	mov	x2, x9
 cf0:	bl	6c0 <memset@plt>
 cf4:	ldr	w10, [sp, #12]
 cf8:	ldr	x8, [sp, #16]
 cfc:	str	w10, [x8]
 d00:	ldr	x8, [sp, #32]
 d04:	ldr	x9, [sp, #16]
 d08:	str	x8, [x9, #16]
 d0c:	ldr	w10, [sp, #28]
 d10:	cbz	w10, d8c <dl_load@@Base+0x5b8>
 d14:	ldur	x8, [x29, #-8]
 d18:	ldr	x8, [x8, #280]
 d1c:	ldr	x9, [sp, #32]
 d20:	add	x0, x9, #0x1
 d24:	blr	x8
 d28:	str	x0, [sp]
 d2c:	cbnz	x0, d58 <dl_load@@Base+0x584>
 d30:	ldur	x8, [x29, #-8]
 d34:	ldr	x8, [x8, #96]
 d38:	ldur	x0, [x29, #-16]
 d3c:	ldr	x9, [sp, #32]
 d40:	add	x3, x9, #0x1
 d44:	adrp	x1, 0 <memcpy@plt-0x690>
 d48:	add	x1, x1, #0xeb1
 d4c:	adrp	x2, 0 <memcpy@plt-0x690>
 d50:	add	x2, x2, #0xecf
 d54:	blr	x8
 d58:	ldr	x0, [sp]
 d5c:	ldur	x1, [x29, #-24]
 d60:	ldr	x2, [sp, #32]
 d64:	bl	690 <memcpy@plt>
 d68:	ldr	x8, [sp]
 d6c:	ldr	x9, [sp, #32]
 d70:	add	x8, x8, x9
 d74:	mov	w10, #0x0                   	// #0
 d78:	strb	w10, [x8]
 d7c:	ldr	x8, [sp]
 d80:	ldr	x9, [sp, #16]
 d84:	str	x8, [x9, #8]
 d88:	b	d98 <dl_load@@Base+0x5c4>
 d8c:	ldur	x8, [x29, #-24]
 d90:	ldr	x9, [sp, #16]
 d94:	str	x8, [x9, #8]
 d98:	ldr	x0, [sp, #16]
 d9c:	ldp	x29, x30, [sp, #64]
 da0:	add	sp, sp, #0x50
 da4:	ret

Disassembly of section .fini:

0000000000000da8 <.fini>:
 da8:	stp	x29, x30, [sp, #-16]!
 dac:	mov	x29, sp
 db0:	ldp	x29, x30, [sp], #16
 db4:	ret
