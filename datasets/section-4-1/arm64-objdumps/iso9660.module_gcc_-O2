
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//iso9660.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_iso9660_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	ldr	x19, [x0, #80]
      10:	ldr	x0, [x19, #872]
      14:	bl	0 <grub_free>
      18:	mov	x0, x19
      1c:	bl	0 <grub_free>
      20:	adrp	x0, 0 <grub_iso9660_close>
      24:	ldr	x0, [x0]
      28:	ldr	x0, [x0]
      2c:	bl	0 <grub_dl_unref>
      30:	mov	w0, #0x0                   	// #0
      34:	ldr	x19, [sp, #16]
      38:	ldp	x29, x30, [sp], #32
      3c:	ret
	...

0000000000000048 <susp_iterate_set_rockridge>:
      48:	stp	x29, x30, [sp, #-32]!
      4c:	adrp	x3, 0 <grub_iso9660_close>
      50:	mov	x2, #0x2                   	// #2
      54:	mov	x29, sp
      58:	str	x19, [sp, #16]
      5c:	mov	x19, x1
      60:	ldr	x1, [x3]
      64:	bl	0 <grub_strncmp>
      68:	cbz	w0, 7c <susp_iterate_set_rockridge+0x34>
      6c:	mov	w0, #0x0                   	// #0
      70:	ldr	x19, [sp, #16]
      74:	ldp	x29, x30, [sp], #32
      78:	ret
      7c:	mov	w1, #0x1                   	// #1
      80:	str	w1, [x19, #856]
      84:	mov	w0, w1
      88:	ldr	x19, [sp, #16]
      8c:	ldp	x29, x30, [sp], #32
      90:	ret
      94:	nop
	...

00000000000000a0 <grub_iso9660_convert_string>:
      a0:	stp	x29, x30, [sp, #-288]!
      a4:	mov	x29, sp
      a8:	stp	x19, x20, [sp, #16]
      ac:	mov	x20, x0
      b0:	lsl	w0, w1, #2
      b4:	add	w0, w0, #0x1
      b8:	mov	w19, w1
      bc:	sxtw	x0, w0
      c0:	bl	0 <grub_malloc>
      c4:	cbz	x0, 1b8 <grub_iso9660_convert_string+0x118>
      c8:	sxtw	x7, w19
      cc:	sub	x7, x7, #0x1
      d0:	cbz	w19, 260 <grub_iso9660_convert_string+0x1c0>
      d4:	sub	w3, w19, #0x1
      d8:	sub	x6, x20, #0x2
      dc:	add	x3, x3, #0x2
      e0:	mov	x1, #0x1                   	// #1
      e4:	nop
      e8:	ldrh	w2, [x6, x1, lsl #1]
      ec:	add	x4, sp, #0x20
      f0:	add	x4, x4, x1, lsl #1
      f4:	add	x1, x1, #0x1
      f8:	cmp	x3, x1
      fc:	lsr	w5, w2, #8
     100:	orr	w2, w5, w2, lsl #8
     104:	sturh	w2, [x4, #-2]
     108:	b.ne	e8 <grub_iso9660_convert_string+0x48>  // b.any
     10c:	add	x5, sp, #0x20
     110:	mov	x1, x0
     114:	mov	w6, #0x0                   	// #0
     118:	mov	w10, #0xffff2800            	// #-55296
     11c:	mov	w9, #0xffff2400            	// #-56320
     120:	mov	w11, #0x3f                  	// #63
     124:	mov	w12, #0x2400                	// #9216
     128:	b	18c <grub_iso9660_convert_string+0xec>
     12c:	add	w4, w2, w9
     130:	cmp	w4, #0x3ff
     134:	b.hi	1c4 <grub_iso9660_convert_string+0x124>  // b.pmore
     138:	add	w4, w6, w10
     13c:	mov	x5, x3
     140:	add	x1, x1, #0x4
     144:	mov	w6, #0x0                   	// #0
     148:	add	w2, w2, w4, lsl #10
     14c:	add	w2, w2, w12
     150:	and	w3, w2, #0x3f
     154:	lsr	w8, w2, #18
     158:	ubfx	x4, x2, #12, #6
     15c:	ubfx	x2, x2, #6, #6
     160:	orr	w8, w8, #0xfffffff0
     164:	orr	w4, w4, #0xffffff80
     168:	orr	w2, w2, #0xffffff80
     16c:	orr	w3, w3, #0xffffff80
     170:	sturb	w8, [x1, #-4]
     174:	sturb	w4, [x1, #-3]
     178:	sturb	w2, [x1, #-2]
     17c:	sturb	w3, [x1, #-1]
     180:	sub	x7, x7, #0x1
     184:	cmn	x7, #0x1
     188:	b.eq	1b4 <grub_iso9660_convert_string+0x114>  // b.none
     18c:	mov	x3, x5
     190:	ldrh	w2, [x3], #2
     194:	cbnz	w6, 12c <grub_iso9660_convert_string+0x8c>
     198:	cmp	w2, #0x7f
     19c:	b.hi	1d0 <grub_iso9660_convert_string+0x130>  // b.pmore
     1a0:	strb	w2, [x1], #1
     1a4:	sub	x7, x7, #0x1
     1a8:	mov	x5, x3
     1ac:	cmn	x7, #0x1
     1b0:	b.ne	18c <grub_iso9660_convert_string+0xec>  // b.any
     1b4:	strb	wzr, [x1]
     1b8:	ldp	x19, x20, [sp, #16]
     1bc:	ldp	x29, x30, [sp], #288
     1c0:	ret
     1c4:	mov	w6, #0x0                   	// #0
     1c8:	strb	w11, [x1], #1
     1cc:	b	180 <grub_iso9660_convert_string+0xe0>
     1d0:	cmp	w2, #0x7ff
     1d4:	b.hi	200 <grub_iso9660_convert_string+0x160>  // b.pmore
     1d8:	mov	x4, x1
     1dc:	lsr	w8, w2, #6
     1e0:	orr	w8, w8, #0xffffffc0
     1e4:	and	w2, w2, #0x3f
     1e8:	orr	w2, w2, #0xffffff80
     1ec:	mov	x5, x3
     1f0:	strb	w8, [x4], #2
     1f4:	strb	w2, [x1, #1]
     1f8:	mov	x1, x4
     1fc:	b	180 <grub_iso9660_convert_string+0xe0>
     200:	add	w4, w2, w10
     204:	cmp	w4, #0x3ff
     208:	b.ls	254 <grub_iso9660_convert_string+0x1b4>  // b.plast
     20c:	add	w4, w2, w9
     210:	cmp	w4, #0x3ff
     214:	b.hi	224 <grub_iso9660_convert_string+0x184>  // b.pmore
     218:	mov	x5, x3
     21c:	strb	w11, [x1], #1
     220:	b	180 <grub_iso9660_convert_string+0xe0>
     224:	lsr	w8, w2, #12
     228:	ubfx	x4, x2, #6, #6
     22c:	and	w2, w2, #0x3f
     230:	mov	x5, x3
     234:	orr	w8, w8, #0xffffffe0
     238:	orr	w3, w4, #0xffffff80
     23c:	orr	w2, w2, #0xffffff80
     240:	add	x1, x1, #0x3
     244:	sturb	w8, [x1, #-3]
     248:	sturb	w3, [x1, #-2]
     24c:	sturb	w2, [x1, #-1]
     250:	b	180 <grub_iso9660_convert_string+0xe0>
     254:	mov	w6, w2
     258:	mov	x5, x3
     25c:	b	180 <grub_iso9660_convert_string+0xe0>
     260:	mov	x1, x0
     264:	strb	wzr, [x1]
     268:	b	1b8 <grub_iso9660_convert_string+0x118>
     26c:	nop

0000000000000270 <read_node>:
     270:	cbz	x2, 370 <read_node+0x100>
     274:	stp	x29, x30, [sp, #-64]!
     278:	mov	x29, sp
     27c:	stp	x21, x22, [sp, #32]
     280:	mov	x21, x1
     284:	mov	x22, x2
     288:	stp	x23, x24, [sp, #48]
     28c:	mov	x23, x0
     290:	mov	x24, x3
     294:	stp	x19, x20, [sp, #16]
     298:	mov	x20, #0x0                   	// #0
     29c:	nop
     2a0:	ldr	x1, [x23, #8]
     2a4:	cmp	x20, x1
     2a8:	b.cs	338 <read_node+0xc8>  // b.hs, b.nlast
     2ac:	add	x5, x20, x20, lsl #5
     2b0:	add	x5, x23, x5
     2b4:	b	2c8 <read_node+0x58>
     2b8:	add	x20, x20, #0x1
     2bc:	sub	x21, x21, x3
     2c0:	cmp	x20, x1
     2c4:	b.eq	350 <read_node+0xe0>  // b.none
     2c8:	ldur	w3, [x5, #38]
     2cc:	add	x5, x5, #0x21
     2d0:	cmp	x3, x21
     2d4:	b.ls	2b8 <read_node+0x48>  // b.plast
     2d8:	lsl	x1, x20, #5
     2dc:	ldr	x0, [x23]
     2e0:	add	x1, x1, x20
     2e4:	add	x1, x23, x1
     2e8:	cmp	x3, x22
     2ec:	csel	x19, x3, x22, ls  // ls = plast
     2f0:	mov	x4, x24
     2f4:	ldr	x0, [x0, #848]
     2f8:	mov	x3, x19
     2fc:	ldur	w1, [x1, #30]
     300:	mov	x2, x21
     304:	lsl	x1, x1, #2
     308:	bl	0 <grub_disk_read>
     30c:	cbnz	w0, 324 <read_node+0xb4>
     310:	add	x21, x21, x19
     314:	add	x24, x24, x19
     318:	subs	x22, x22, x19
     31c:	b.ne	2a0 <read_node+0x30>  // b.any
     320:	mov	w0, #0x0                   	// #0
     324:	ldp	x19, x20, [sp, #16]
     328:	ldp	x21, x22, [sp, #32]
     32c:	ldp	x23, x24, [sp, #48]
     330:	ldp	x29, x30, [sp], #64
     334:	ret
     338:	b.eq	350 <read_node+0xe0>  // b.none
     33c:	lsl	x1, x20, #5
     340:	add	x0, x1, x20
     344:	add	x0, x23, x0
     348:	ldur	w3, [x0, #38]
     34c:	b	2dc <read_node+0x6c>
     350:	adrp	x1, 0 <grub_iso9660_close>
     354:	mov	w0, #0xb                   	// #11
     358:	ldp	x19, x20, [sp, #16]
     35c:	ldp	x21, x22, [sp, #32]
     360:	ldp	x23, x24, [sp, #48]
     364:	ldp	x29, x30, [sp], #64
     368:	ldr	x1, [x1]
     36c:	b	0 <grub_error>
     370:	mov	w0, #0x0                   	// #0
     374:	ret
	...

0000000000000380 <grub_iso9660_read>:
     380:	stp	x29, x30, [sp, #-32]!
     384:	mov	x3, x1
     388:	mov	x29, sp
     38c:	stp	x19, x20, [sp, #16]
     390:	mov	x19, x2
     394:	ldp	x20, x6, [x0, #80]
     398:	ldr	x1, [x0, #24]
     39c:	ldr	x4, [x0, #96]
     3a0:	ldr	x5, [x20, #848]
     3a4:	ldr	x0, [x20, #872]
     3a8:	stp	x6, x4, [x5, #48]
     3ac:	bl	270 <read_node>
     3b0:	adrp	x1, 0 <grub_iso9660_close>
     3b4:	ldr	x2, [x20, #848]
     3b8:	ldr	x1, [x1]
     3bc:	ldr	w1, [x1]
     3c0:	orr	w0, w0, w1
     3c4:	cmp	w0, #0x0
     3c8:	csinv	x0, x19, xzr, eq  // eq = none
     3cc:	ldp	x19, x20, [sp, #16]
     3d0:	str	xzr, [x2, #48]
     3d4:	ldp	x29, x30, [sp], #32
     3d8:	ret
     3dc:	nop
	...

00000000000003e8 <grub_iso9660_susp_iterate.part.0>:
     3e8:	stp	x29, x30, [sp, #-96]!
     3ec:	mov	x29, sp
     3f0:	stp	x19, x20, [sp, #16]
     3f4:	mov	x20, x2
     3f8:	stp	x21, x22, [sp, #32]
     3fc:	mov	x21, x1
     400:	mov	x22, x3
     404:	stp	x23, x24, [sp, #48]
     408:	mov	x23, x4
     40c:	stp	x25, x26, [sp, #64]
     410:	mov	x26, x0
     414:	mov	x0, x2
     418:	str	x27, [sp, #80]
     41c:	bl	0 <grub_malloc>
     420:	cbz	x0, 554 <grub_iso9660_susp_iterate.part.0+0x16c>
     424:	mov	x3, x0
     428:	mov	x19, x0
     42c:	mov	x1, x21
     430:	mov	x2, x20
     434:	mov	x0, x26
     438:	bl	270 <read_node>
     43c:	mov	w27, w0
     440:	cbnz	w0, 50c <grub_iso9660_susp_iterate.part.0+0x124>
     444:	sub	x0, x20, #0x1
     448:	mov	x21, x19
     44c:	add	x0, x19, x0
     450:	cmp	x19, x0
     454:	b.cs	52c <grub_iso9660_susp_iterate.part.0+0x144>  // b.hs, b.nlast
     458:	adrp	x24, 0 <grub_iso9660_close>
     45c:	adrp	x25, 0 <grub_iso9660_close>
     460:	b	48c <grub_iso9660_susp_iterate.part.0+0xa4>
     464:	mov	x1, x23
     468:	mov	x0, x19
     46c:	blr	x22
     470:	sub	x1, x20, #0x1
     474:	cbnz	w0, 52c <grub_iso9660_susp_iterate.part.0+0x144>
     478:	ldrb	w0, [x19, #2]
     47c:	add	x1, x21, x1
     480:	add	x19, x19, x0
     484:	cmp	x19, x1
     488:	b.cs	52c <grub_iso9660_susp_iterate.part.0+0x144>  // b.hs, b.nlast
     48c:	ldrb	w1, [x19, #2]
     490:	mov	x0, x19
     494:	mov	x2, #0x2                   	// #2
     498:	cbz	w1, 52c <grub_iso9660_susp_iterate.part.0+0x144>
     49c:	ldr	x1, [x24]
     4a0:	bl	0 <grub_strncmp>
     4a4:	cbz	w0, 52c <grub_iso9660_susp_iterate.part.0+0x144>
     4a8:	ldr	x1, [x25]
     4ac:	mov	x0, x19
     4b0:	mov	x2, #0x2                   	// #2
     4b4:	bl	0 <grub_strncmp>
     4b8:	cbnz	w0, 464 <grub_iso9660_susp_iterate.part.0+0x7c>
     4bc:	mov	x0, x21
     4c0:	ldr	w21, [x19, #4]
     4c4:	ldr	w20, [x19, #20]
     4c8:	ldr	w19, [x19, #12]
     4cc:	bl	0 <grub_free>
     4d0:	lsl	w21, w21, #2
     4d4:	mov	x0, x20
     4d8:	bl	0 <grub_malloc>
     4dc:	mov	x2, x19
     4e0:	mov	x3, x20
     4e4:	mov	x1, x21
     4e8:	mov	x19, x0
     4ec:	cbz	x0, 554 <grub_iso9660_susp_iterate.part.0+0x16c>
     4f0:	mov	x21, x0
     4f4:	mov	x4, x0
     4f8:	ldr	x0, [x26]
     4fc:	ldr	x0, [x0, #848]
     500:	bl	0 <grub_disk_read>
     504:	cbz	w0, 464 <grub_iso9660_susp_iterate.part.0+0x7c>
     508:	mov	w27, w0
     50c:	mov	w0, w27
     510:	ldp	x19, x20, [sp, #16]
     514:	ldp	x21, x22, [sp, #32]
     518:	ldp	x23, x24, [sp, #48]
     51c:	ldp	x25, x26, [sp, #64]
     520:	ldr	x27, [sp, #80]
     524:	ldp	x29, x30, [sp], #96
     528:	ret
     52c:	mov	x0, x21
     530:	bl	0 <grub_free>
     534:	mov	w0, w27
     538:	ldp	x19, x20, [sp, #16]
     53c:	ldp	x21, x22, [sp, #32]
     540:	ldp	x23, x24, [sp, #48]
     544:	ldp	x25, x26, [sp, #64]
     548:	ldr	x27, [sp, #80]
     54c:	ldp	x29, x30, [sp], #96
     550:	ret
     554:	adrp	x0, 0 <grub_iso9660_close>
     558:	ldp	x19, x20, [sp, #16]
     55c:	ldr	x0, [x0]
     560:	ldp	x21, x22, [sp, #32]
     564:	ldr	w27, [x0]
     568:	ldp	x23, x24, [sp, #48]
     56c:	mov	w0, w27
     570:	ldp	x25, x26, [sp, #64]
     574:	ldr	x27, [sp, #80]
     578:	ldp	x29, x30, [sp], #96
     57c:	ret
	...

0000000000000598 <grub_iso9660_mount>:
     598:	sub	sp, sp, #0x500
     59c:	stp	x29, x30, [sp]
     5a0:	mov	x29, sp
     5a4:	stp	x19, x20, [sp, #16]
     5a8:	stp	x21, x22, [sp, #32]
     5ac:	mov	x22, x0
     5b0:	mov	x0, #0x370                 	// #880
     5b4:	bl	0 <grub_zalloc>
     5b8:	mov	x20, x0
     5bc:	cbz	x0, 674 <grub_iso9660_mount+0xdc>
     5c0:	stp	x23, x24, [sp, #48]
     5c4:	mov	w19, #0x40                  	// #64
     5c8:	add	x24, sp, #0x1b1
     5cc:	stp	x25, x26, [sp, #64]
     5d0:	add	x4, sp, #0x1b0
     5d4:	sxtw	x1, w19
     5d8:	str	x22, [x0, #848]
     5dc:	adrp	x23, 0 <grub_iso9660_close>
     5e0:	mov	x0, x22
     5e4:	mov	x3, #0x34f                 	// #847
     5e8:	mov	x2, #0x0                   	// #0
     5ec:	bl	0 <grub_disk_read>
     5f0:	cbnz	w0, 650 <grub_iso9660_mount+0xb8>
     5f4:	nop
     5f8:	ldr	x1, [x23]
     5fc:	mov	x0, x24
     600:	mov	x2, #0x5                   	// #5
     604:	bl	0 <grub_strncmp>
     608:	cbnz	w0, 650 <grub_iso9660_mount+0xb8>
     60c:	ldrb	w1, [sp, #432]
     610:	cmp	w1, #0x1
     614:	b.eq	6c8 <grub_iso9660_mount+0x130>  // b.none
     618:	ldr	w2, [x20, #856]
     61c:	cmp	w2, #0x0
     620:	ccmp	w1, #0x2, #0x0, eq  // eq = none
     624:	b.eq	68c <grub_iso9660_mount+0xf4>  // b.none
     628:	cmp	w1, #0xff
     62c:	b.eq	7e4 <grub_iso9660_mount+0x24c>  // b.none
     630:	add	w19, w19, #0x4
     634:	add	x4, sp, #0x1b0
     638:	mov	x0, x22
     63c:	mov	x3, #0x34f                 	// #847
     640:	sxtw	x1, w19
     644:	mov	x2, #0x0                   	// #0
     648:	bl	0 <grub_disk_read>
     64c:	cbz	w0, 5f8 <grub_iso9660_mount+0x60>
     650:	adrp	x1, 0 <grub_iso9660_close>
     654:	mov	w0, #0x9                   	// #9
     658:	ldr	x1, [x1]
     65c:	bl	0 <grub_error>
     660:	mov	x0, x20
     664:	bl	0 <grub_free>
     668:	ldp	x23, x24, [sp, #48]
     66c:	mov	x20, #0x0                   	// #0
     670:	ldp	x25, x26, [sp, #64]
     674:	mov	x0, x20
     678:	ldp	x29, x30, [sp]
     67c:	ldp	x19, x20, [sp, #16]
     680:	ldp	x21, x22, [sp, #32]
     684:	add	sp, sp, #0x500
     688:	ret
     68c:	ldrb	w0, [sp, #520]
     690:	cmp	w0, #0x25
     694:	b.ne	630 <grub_iso9660_mount+0x98>  // b.any
     698:	ldrb	w0, [sp, #521]
     69c:	cmp	w0, #0x2f
     6a0:	b.ne	630 <grub_iso9660_mount+0x98>  // b.any
     6a4:	ldrb	w1, [sp, #522]
     6a8:	sub	w0, w1, #0x43
     6ac:	cmp	w1, #0x40
     6b0:	and	w0, w0, #0xfffffffd
     6b4:	and	w0, w0, #0xff
     6b8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     6bc:	b.ne	630 <grub_iso9660_mount+0x98>  // b.any
     6c0:	mov	w0, #0x1                   	// #1
     6c4:	str	w0, [x20, #864]
     6c8:	add	x1, sp, #0x1b0
     6cc:	mov	x2, #0x34f                 	// #847
     6d0:	mov	x0, x20
     6d4:	bl	0 <grub_memmove>
     6d8:	ldr	x0, [x20, #848]
     6dc:	str	wzr, [x20, #856]
     6e0:	ldur	w1, [x20, #158]
     6e4:	add	x4, sp, #0x60
     6e8:	mov	x3, #0x21                  	// #33
     6ec:	mov	x2, #0x0                   	// #0
     6f0:	lsl	w1, w1, #2
     6f4:	bl	0 <grub_disk_read>
     6f8:	cbnz	w0, 830 <grub_iso9660_mount+0x298>
     6fc:	ldrb	w21, [sp, #128]
     700:	ldrb	w0, [sp, #96]
     704:	add	w21, w21, #0x1
     708:	and	w21, w21, #0xfffffffe
     70c:	add	w21, w21, #0x20
     710:	subs	w25, w0, w21
     714:	b.eq	828 <grub_iso9660_mount+0x290>  // b.none
     718:	str	x27, [sp, #80]
     71c:	sxtw	x27, w25
     720:	mov	x0, x27
     724:	bl	0 <grub_malloc>
     728:	mov	x26, x0
     72c:	cbz	x0, 810 <grub_iso9660_mount+0x278>
     730:	mov	x4, x0
     734:	ldur	w1, [x20, #158]
     738:	ldr	x0, [x20, #848]
     73c:	mov	x2, x21
     740:	mov	x3, x27
     744:	lsl	w1, w1, #2
     748:	bl	0 <grub_disk_read>
     74c:	cbnz	w0, 848 <grub_iso9660_mount+0x2b0>
     750:	adrp	x1, 0 <grub_iso9660_close>
     754:	mov	x0, x26
     758:	mov	x2, #0x2                   	// #2
     75c:	ldr	x1, [x1]
     760:	bl	0 <grub_strncmp>
     764:	cbnz	w0, 7cc <grub_iso9660_mount+0x234>
     768:	add	x0, x20, #0x9c
     76c:	mov	x1, #0x8                   	// #8
     770:	str	x1, [sp, #152]
     774:	add	x1, sp, #0x4
     778:	mov	x2, #0x1                   	// #1
     77c:	stp	x20, x2, [sp, #136]
     780:	cmp	w25, #0x0
     784:	ldp	x4, x5, [x0]
     788:	str	wzr, [sp, #160]
     78c:	ldp	x2, x3, [x0, #16]
     790:	ldrb	w0, [x20, #188]
     794:	stp	x4, x5, [x1, #160]
     798:	stp	x2, x3, [x1, #176]
     79c:	strb	w0, [sp, #196]
     7a0:	ldrb	w0, [x26, #6]
     7a4:	str	w0, [x20, #860]
     7a8:	b.le	7cc <grub_iso9660_mount+0x234>
     7ac:	adrp	x0, 0 <grub_iso9660_close>
     7b0:	mov	x2, x27
     7b4:	mov	x1, x21
     7b8:	mov	x4, x20
     7bc:	ldr	x3, [x0]
     7c0:	add	x0, sp, #0x88
     7c4:	bl	3e8 <grub_iso9660_susp_iterate.part.0>
     7c8:	cbnz	w0, 804 <grub_iso9660_mount+0x26c>
     7cc:	mov	x0, x26
     7d0:	bl	0 <grub_free>
     7d4:	ldrb	w1, [sp, #432]
     7d8:	ldr	x27, [sp, #80]
     7dc:	cmp	w1, #0xff
     7e0:	b.ne	630 <grub_iso9660_mount+0x98>  // b.any
     7e4:	mov	x0, x20
     7e8:	ldp	x29, x30, [sp]
     7ec:	ldp	x19, x20, [sp, #16]
     7f0:	ldp	x21, x22, [sp, #32]
     7f4:	ldp	x23, x24, [sp, #48]
     7f8:	ldp	x25, x26, [sp, #64]
     7fc:	add	sp, sp, #0x500
     800:	ret
     804:	mov	x0, x26
     808:	bl	0 <grub_free>
     80c:	nop
     810:	adrp	x0, 0 <grub_iso9660_close>
     814:	ldr	x27, [sp, #80]
     818:	ldr	x0, [x0]
     81c:	ldr	w0, [x0]
     820:	cbnz	w0, 660 <grub_iso9660_mount+0xc8>
     824:	nop
     828:	ldrb	w1, [sp, #432]
     82c:	b	628 <grub_iso9660_mount+0x90>
     830:	adrp	x1, 0 <grub_iso9660_close>
     834:	mov	w0, #0x9                   	// #9
     838:	ldr	x1, [x1]
     83c:	bl	0 <grub_error>
     840:	cbz	w0, 828 <grub_iso9660_mount+0x290>
     844:	b	660 <grub_iso9660_mount+0xc8>
     848:	mov	x0, x26
     84c:	bl	0 <grub_free>
     850:	adrp	x1, 0 <grub_iso9660_close>
     854:	mov	w0, #0x9                   	// #9
     858:	ldr	x1, [x1]
     85c:	bl	0 <grub_error>
     860:	ldr	x27, [sp, #80]
     864:	cbz	w0, 828 <grub_iso9660_mount+0x290>
     868:	b	660 <grub_iso9660_mount+0xc8>
     86c:	nop
	...

0000000000000898 <grub_iso9660_uuid>:
     898:	sub	sp, sp, #0x80
     89c:	adrp	x2, 0 <grub_iso9660_close>
     8a0:	stp	x29, x30, [sp, #80]
     8a4:	add	x29, sp, #0x50
     8a8:	stp	x19, x20, [sp, #96]
     8ac:	mov	x20, x1
     8b0:	ldr	x19, [x0]
     8b4:	str	x21, [sp, #112]
     8b8:	ldr	x21, [x2]
     8bc:	ldr	x0, [x21]
     8c0:	bl	0 <grub_dl_ref>
     8c4:	mov	x0, x19
     8c8:	bl	598 <grub_iso9660_mount>
     8cc:	mov	x19, x0
     8d0:	cbz	x0, 994 <grub_iso9660_uuid+0xfc>
     8d4:	ldrh	w0, [x0, #830]
     8d8:	cbnz	w0, 8f0 <grub_iso9660_uuid+0x58>
     8dc:	ldr	x0, [x19, #832]
     8e0:	cbnz	x0, 8f0 <grub_iso9660_uuid+0x58>
     8e4:	ldr	x0, [x19, #840]
     8e8:	tst	x0, #0xffffffffffff
     8ec:	b.eq	99c <grub_iso9660_uuid+0x104>  // b.none
     8f0:	ldrb	w8, [x19, #845]
     8f4:	adrp	x0, 0 <grub_iso9660_close>
     8f8:	ldrb	w7, [x19, #836]
     8fc:	ldrb	w6, [x19, #835]
     900:	ldrb	w5, [x19, #834]
     904:	ldrb	w4, [x19, #833]
     908:	ldrb	w3, [x19, #832]
     90c:	ldrb	w2, [x19, #831]
     910:	ldrb	w1, [x19, #830]
     914:	str	w8, [sp, #64]
     918:	ldr	x0, [x0]
     91c:	ldrb	w8, [x19, #844]
     920:	str	w8, [sp, #56]
     924:	ldrb	w8, [x19, #843]
     928:	str	w8, [sp, #48]
     92c:	ldrb	w8, [x19, #842]
     930:	str	w8, [sp, #40]
     934:	ldrb	w8, [x19, #841]
     938:	str	w8, [sp, #32]
     93c:	ldrb	w8, [x19, #840]
     940:	str	w8, [sp, #24]
     944:	ldrb	w8, [x19, #839]
     948:	str	w8, [sp, #16]
     94c:	ldrb	w8, [x19, #838]
     950:	str	w8, [sp, #8]
     954:	ldrb	w8, [x19, #837]
     958:	str	w8, [sp]
     95c:	bl	0 <grub_xasprintf>
     960:	str	x0, [x20]
     964:	ldr	x0, [x21]
     968:	bl	0 <grub_dl_unref>
     96c:	mov	x0, x19
     970:	bl	0 <grub_free>
     974:	adrp	x0, 0 <grub_iso9660_close>
     978:	ldp	x29, x30, [sp, #80]
     97c:	ldr	x0, [x0]
     980:	ldp	x19, x20, [sp, #96]
     984:	ldr	w0, [x0]
     988:	ldr	x21, [sp, #112]
     98c:	add	sp, sp, #0x80
     990:	ret
     994:	str	xzr, [x20]
     998:	b	964 <grub_iso9660_uuid+0xcc>
     99c:	adrp	x1, 0 <grub_iso9660_close>
     9a0:	mov	w0, #0xa                   	// #10
     9a4:	ldr	x1, [x1]
     9a8:	bl	0 <grub_error>
     9ac:	str	xzr, [x20]
     9b0:	b	964 <grub_iso9660_uuid+0xcc>
     9b4:	nop
	...

00000000000009d8 <grub_iso9660_label>:
     9d8:	stp	x29, x30, [sp, #-32]!
     9dc:	mov	x29, sp
     9e0:	ldr	x0, [x0]
     9e4:	stp	x19, x20, [sp, #16]
     9e8:	mov	x19, x1
     9ec:	bl	598 <grub_iso9660_mount>
     9f0:	cbz	x0, a84 <grub_iso9660_label+0xac>
     9f4:	mov	x20, x0
     9f8:	add	x0, x0, #0x28
     9fc:	ldr	w1, [x20, #864]
     a00:	cbz	w1, a74 <grub_iso9660_label+0x9c>
     a04:	mov	w1, #0x10                  	// #16
     a08:	bl	a0 <grub_iso9660_convert_string>
     a0c:	str	x0, [x19]
     a10:	cbz	x0, a54 <grub_iso9660_label+0x7c>
     a14:	ldrb	w1, [x0]
     a18:	cbz	w1, aa0 <grub_iso9660_label+0xc8>
     a1c:	mov	x3, x0
     a20:	mov	x2, x3
     a24:	ldrb	w1, [x3, #1]!
     a28:	cbnz	w1, a20 <grub_iso9660_label+0x48>
     a2c:	cmp	x2, x0
     a30:	b.cs	a48 <grub_iso9660_label+0x70>  // b.hs, b.nlast
     a34:	b	a54 <grub_iso9660_label+0x7c>
     a38:	strb	wzr, [x2], #-1
     a3c:	ldr	x3, [x19]
     a40:	cmp	x3, x2
     a44:	b.hi	a54 <grub_iso9660_label+0x7c>  // b.pmore
     a48:	ldrb	w3, [x2]
     a4c:	cmp	w3, #0x20
     a50:	b.eq	a38 <grub_iso9660_label+0x60>  // b.none
     a54:	mov	x0, x20
     a58:	bl	0 <grub_free>
     a5c:	adrp	x0, 0 <grub_iso9660_close>
     a60:	ldp	x19, x20, [sp, #16]
     a64:	ldr	x0, [x0]
     a68:	ldp	x29, x30, [sp], #32
     a6c:	ldr	w0, [x0]
     a70:	ret
     a74:	mov	x1, #0x20                  	// #32
     a78:	bl	0 <grub_strndup>
     a7c:	str	x0, [x19]
     a80:	b	a10 <grub_iso9660_label+0x38>
     a84:	adrp	x0, 0 <grub_iso9660_close>
     a88:	str	xzr, [x19]
     a8c:	ldp	x19, x20, [sp, #16]
     a90:	ldr	x0, [x0]
     a94:	ldp	x29, x30, [sp], #32
     a98:	ldr	w0, [x0]
     a9c:	ret
     aa0:	sub	x2, x0, #0x1
     aa4:	b	a2c <grub_iso9660_label+0x54>
	...

0000000000000ab0 <grub_iso9660_open>:
     ab0:	stp	x29, x30, [sp, #-352]!
     ab4:	adrp	x2, 0 <grub_iso9660_close>
     ab8:	mov	x29, sp
     abc:	stp	x21, x22, [sp, #32]
     ac0:	mov	x21, x1
     ac4:	ldr	x22, [x2]
     ac8:	stp	x19, x20, [sp, #16]
     acc:	mov	x20, x0
     ad0:	ldr	x0, [x22]
     ad4:	bl	0 <grub_dl_ref>
     ad8:	ldr	x0, [x20, #8]
     adc:	ldr	x0, [x0]
     ae0:	bl	598 <grub_iso9660_mount>
     ae4:	mov	x19, x0
     ae8:	cbz	x0, b94 <grub_iso9660_open+0xe4>
     aec:	add	x6, x0, #0x9c
     af0:	adrp	x2, 0 <grub_iso9660_close>
     af4:	adrp	x1, 0 <grub_iso9660_close>
     af8:	mov	x7, #0x1                   	// #1
     afc:	ldr	x4, [x2]
     b00:	mov	w5, w7
     b04:	ldp	x10, x11, [x6]
     b08:	stp	x19, x7, [sp, #56]
     b0c:	add	x7, sp, #0x4
     b10:	ldp	x8, x9, [x6, #16]
     b14:	mov	x0, x21
     b18:	ldrb	w6, [x19, #188]
     b1c:	add	x2, sp, #0x30
     b20:	ldr	x3, [x1]
     b24:	add	x1, sp, #0x38
     b28:	str	xzr, [sp, #72]
     b2c:	str	wzr, [sp, #80]
     b30:	stp	x10, x11, [x7, #80]
     b34:	stp	x8, x9, [x7, #96]
     b38:	strb	w6, [sp, #116]
     b3c:	bl	0 <grub_fshelp_find_file>
     b40:	cbnz	w0, b94 <grub_iso9660_open+0xe4>
     b44:	ldr	x1, [sp, #48]
     b48:	ldr	x2, [x1, #8]
     b4c:	str	x1, [x19, #872]
     b50:	str	x19, [x20, #80]
     b54:	cbz	x2, b7c <grub_iso9660_open+0xcc>
     b58:	add	x2, x2, x2, lsl #5
     b5c:	add	x4, x1, x2
     b60:	mov	x2, #0x0                   	// #0
     b64:	nop
     b68:	ldur	w3, [x1, #38]
     b6c:	add	x1, x1, #0x21
     b70:	cmp	x1, x4
     b74:	add	x2, x2, x3
     b78:	b.ne	b68 <grub_iso9660_open+0xb8>  // b.any
     b7c:	str	xzr, [x20, #24]
     b80:	str	x2, [x20, #64]
     b84:	ldp	x19, x20, [sp, #16]
     b88:	ldp	x21, x22, [sp, #32]
     b8c:	ldp	x29, x30, [sp], #352
     b90:	ret
     b94:	ldr	x0, [x22]
     b98:	bl	0 <grub_dl_unref>
     b9c:	mov	x0, x19
     ba0:	bl	0 <grub_free>
     ba4:	adrp	x0, 0 <grub_iso9660_close>
     ba8:	ldp	x19, x20, [sp, #16]
     bac:	ldr	x0, [x0]
     bb0:	ldp	x21, x22, [sp, #32]
     bb4:	ldr	w0, [x0]
     bb8:	ldp	x29, x30, [sp], #352
     bbc:	ret
	...

0000000000000be0 <grub_iso9660_iterate_dir>:
     be0:	stp	x29, x30, [sp, #-432]!
     be4:	mov	x29, sp
     be8:	stp	x21, x22, [sp, #32]
     bec:	mov	x22, x2
     bf0:	ldr	x2, [x0, #8]
     bf4:	stp	x19, x20, [sp, #16]
     bf8:	cbz	x2, e20 <grub_iso9660_iterate_dir+0x240>
     bfc:	add	x2, x2, x2, lsl #5
     c00:	mov	x19, x0
     c04:	mov	x21, x1
     c08:	add	x2, x2, x0
     c0c:	mov	x20, #0x0                   	// #0
     c10:	ldur	w1, [x0, #38]
     c14:	add	x0, x0, #0x21
     c18:	cmp	x2, x0
     c1c:	add	x20, x20, x1
     c20:	b.ne	c10 <grub_iso9660_iterate_dir+0x30>  // b.any
     c24:	cbz	x20, e20 <grub_iso9660_iterate_dir+0x240>
     c28:	stp	x23, x24, [sp, #48]
     c2c:	add	x23, sp, #0xb0
     c30:	mov	x24, #0x8                   	// #8
     c34:	stp	x25, x26, [sp, #64]
     c38:	mov	x26, #0x0                   	// #0
     c3c:	add	x3, sp, #0x88
     c40:	mov	x1, x26
     c44:	mov	x0, x19
     c48:	mov	x2, #0x21                  	// #33
     c4c:	str	xzr, [sp, #120]
     c50:	str	wzr, [sp, #128]
     c54:	bl	270 <read_node>
     c58:	cbnz	w0, e18 <grub_iso9660_iterate_dir+0x238>
     c5c:	ldrb	w0, [sp, #136]
     c60:	cbz	w0, e04 <grub_iso9660_iterate_dir+0x224>
     c64:	ldr	x3, [x19]
     c68:	stp	xzr, xzr, [sp, #104]
     c6c:	ldrb	w2, [sp, #168]
     c70:	add	w25, w26, #0x21
     c74:	ldr	w4, [x3, #856]
     c78:	and	w1, w2, #0xfffffffe
     c7c:	add	w1, w1, #0x22
     c80:	ldr	w3, [x3, #860]
     c84:	sub	w0, w0, w1
     c88:	cbz	w4, cc0 <grub_iso9660_iterate_dir+0xe0>
     c8c:	cmp	w0, #0x0
     c90:	b.le	cc0 <grub_iso9660_iterate_dir+0xe0>
     c94:	adrp	x4, 0 <grub_iso9660_close>
     c98:	add	w1, w3, w1
     c9c:	add	w1, w1, w26
     ca0:	sxtw	x2, w0
     ca4:	ldr	x3, [x4]
     ca8:	sxtw	x1, w1
     cac:	add	x4, sp, #0x68
     cb0:	mov	x0, x19
     cb4:	bl	3e8 <grub_iso9660_susp_iterate.part.0>
     cb8:	cbnz	w0, f78 <grub_iso9660_iterate_dir+0x398>
     cbc:	ldrb	w2, [sp, #168]
     cc0:	and	x2, x2, #0xff
     cc4:	sxtw	x1, w25
     cc8:	mov	x3, x23
     ccc:	mov	x0, x19
     cd0:	bl	270 <read_node>
     cd4:	cbnz	w0, f78 <grub_iso9660_iterate_dir+0x398>
     cd8:	mov	x0, #0x128                 	// #296
     cdc:	bl	0 <grub_malloc>
     ce0:	mov	x25, x0
     ce4:	cbz	x0, f78 <grub_iso9660_iterate_dir+0x398>
     ce8:	ldr	w0, [sp, #116]
     cec:	mov	x1, #0x1                   	// #1
     cf0:	ldr	x2, [x19]
     cf4:	stp	x2, x1, [x25]
     cf8:	str	x24, [x25, #16]
     cfc:	str	wzr, [x25, #24]
     d00:	cbnz	w0, d18 <grub_iso9660_iterate_dir+0x138>
     d04:	ldrb	w0, [sp, #161]
     d08:	and	w0, w0, #0x3
     d0c:	cmp	w0, #0x2
     d10:	csel	w0, w0, w1, eq  // eq = none
     d14:	str	w0, [sp, #116]
     d18:	ldr	x0, [sp, #104]
     d1c:	cbz	x0, ef8 <grub_iso9660_iterate_dir+0x318>
     d20:	add	x0, x25, #0x1c
     d24:	ldrsb	w1, [sp, #161]
     d28:	ldp	x2, x3, [sp, #136]
     d2c:	ldp	x4, x5, [sp, #152]
     d30:	stp	x2, x3, [x0]
     d34:	ldrb	w2, [sp, #168]
     d38:	stp	x4, x5, [x0, #16]
     d3c:	strb	w2, [x25, #60]
     d40:	tbnz	w1, #31, d7c <grub_iso9660_iterate_dir+0x19c>
     d44:	b	e38 <grub_iso9660_iterate_dir+0x258>
     d48:	add	x3, x4, x4, lsl #5
     d4c:	ldrb	w1, [sp, #168]
     d50:	add	x3, x25, x3
     d54:	add	x4, x4, #0x1
     d58:	add	x3, x3, #0x1c
     d5c:	str	x4, [x25, #8]
     d60:	ldp	x4, x5, [sp, #136]
     d64:	ldrsb	w0, [sp, #161]
     d68:	stp	x4, x5, [x3]
     d6c:	ldp	x4, x5, [sp, #152]
     d70:	stp	x4, x5, [x3, #16]
     d74:	strb	w1, [x3, #32]
     d78:	tbz	w0, #31, e38 <grub_iso9660_iterate_dir+0x258>
     d7c:	ldrb	w1, [sp, #136]
     d80:	add	x3, sp, #0x88
     d84:	mov	x0, x19
     d88:	mov	x2, #0x21                  	// #33
     d8c:	add	x26, x26, x1
     d90:	mov	x1, x26
     d94:	bl	270 <read_node>
     d98:	cbnz	w0, dd4 <grub_iso9660_iterate_dir+0x1f4>
     d9c:	ldp	x4, x0, [x25, #8]
     da0:	cmp	x4, x0
     da4:	b.cc	d48 <grub_iso9660_iterate_dir+0x168>  // b.lo, b.ul, b.last
     da8:	add	x1, x0, x0, lsl #5
     dac:	lsl	x0, x0, #1
     db0:	str	x0, [x25, #16]
     db4:	mov	x0, x25
     db8:	lsl	x1, x1, #1
     dbc:	add	x1, x1, #0x20
     dc0:	bl	0 <grub_realloc>
     dc4:	cbz	x0, dd4 <grub_iso9660_iterate_dir+0x1f4>
     dc8:	mov	x25, x0
     dcc:	ldr	x4, [x0, #8]
     dd0:	b	d48 <grub_iso9660_iterate_dir+0x168>
     dd4:	ldr	w0, [sp, #112]
     dd8:	cbnz	w0, f3c <grub_iso9660_iterate_dir+0x35c>
     ddc:	mov	x0, x25
     de0:	bl	0 <grub_free>
     de4:	ldp	x23, x24, [sp, #48]
     de8:	mov	w19, #0x0                   	// #0
     dec:	ldp	x25, x26, [sp, #64]
     df0:	mov	w0, w19
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldp	x21, x22, [sp, #32]
     dfc:	ldp	x29, x30, [sp], #432
     e00:	ret
     e04:	and	x26, x26, #0xfffffffffffff800
     e08:	add	x26, x26, #0x800
     e0c:	add	x26, x26, w0, uxtb
     e10:	cmp	x26, x20
     e14:	b.cc	c3c <grub_iso9660_iterate_dir+0x5c>  // b.lo, b.ul, b.last
     e18:	ldp	x23, x24, [sp, #48]
     e1c:	ldp	x25, x26, [sp, #64]
     e20:	mov	w19, #0x0                   	// #0
     e24:	mov	w0, w19
     e28:	ldp	x19, x20, [sp, #16]
     e2c:	ldp	x21, x22, [sp, #32]
     e30:	ldp	x29, x30, [sp], #432
     e34:	ret
     e38:	ldr	x0, [sp, #120]
     e3c:	cbz	x0, ec0 <grub_iso9660_iterate_dir+0x2e0>
     e40:	ldp	x2, x1, [x25, #8]
     e44:	str	x27, [sp, #80]
     e48:	sub	x1, x1, x2
     e4c:	add	x27, x1, x1, lsl #5
     e50:	bl	0 <grub_strlen>
     e54:	add	x0, x0, #0x1
     e58:	cmp	x27, x0
     e5c:	b.cs	e8c <grub_iso9660_iterate_dir+0x2ac>  // b.hs, b.nlast
     e60:	ldr	x0, [sp, #120]
     e64:	ldr	x27, [x25, #16]
     e68:	bl	0 <grub_strlen>
     e6c:	mov	x1, x0
     e70:	add	x2, x27, #0x1
     e74:	mov	x0, x25
     e78:	add	x2, x2, x2, lsl #5
     e7c:	add	x1, x2, x1
     e80:	bl	0 <grub_realloc>
     e84:	cbz	x0, 100c <grub_iso9660_iterate_dir+0x42c>
     e88:	mov	x25, x0
     e8c:	ldr	x0, [x25, #8]
     e90:	mov	w2, #0x1                   	// #1
     e94:	ldr	x1, [sp, #120]
     e98:	str	w2, [x25, #24]
     e9c:	add	x0, x0, x0, lsl #5
     ea0:	add	x0, x25, x0
     ea4:	add	x0, x0, #0x1c
     ea8:	bl	0 <grub_strcpy>
     eac:	ldr	x0, [sp, #120]
     eb0:	bl	0 <grub_free>
     eb4:	str	xzr, [sp, #120]
     eb8:	ldr	x27, [sp, #80]
     ebc:	str	wzr, [sp, #128]
     ec0:	ldr	w1, [sp, #116]
     ec4:	mov	x2, x25
     ec8:	ldr	x0, [sp, #104]
     ecc:	mov	x3, x22
     ed0:	blr	x21
     ed4:	cbnz	w0, ff4 <grub_iso9660_iterate_dir+0x414>
     ed8:	ldr	w0, [sp, #112]
     edc:	cbnz	w0, ee8 <grub_iso9660_iterate_dir+0x308>
     ee0:	ldrb	w0, [sp, #136]
     ee4:	b	e0c <grub_iso9660_iterate_dir+0x22c>
     ee8:	ldr	x0, [sp, #104]
     eec:	bl	0 <grub_free>
     ef0:	ldrb	w0, [sp, #136]
     ef4:	b	e0c <grub_iso9660_iterate_dir+0x22c>
     ef8:	ldrb	w2, [sp, #168]
     efc:	cmp	w2, #0x1
     f00:	b.eq	f48 <grub_iso9660_iterate_dir+0x368>  // b.none
     f04:	ldr	x0, [x19]
     f08:	ldr	w0, [x0, #864]
     f0c:	cbz	w0, f88 <grub_iso9660_iterate_dir+0x3a8>
     f10:	lsr	w1, w2, #1
     f14:	mov	x0, x23
     f18:	bl	a0 <grub_iso9660_convert_string>
     f1c:	str	x0, [sp, #104]
     f20:	mov	w1, #0x3b                  	// #59
     f24:	bl	0 <grub_strrchr>
     f28:	cbz	x0, f30 <grub_iso9660_iterate_dir+0x350>
     f2c:	strb	wzr, [x0]
     f30:	mov	w0, #0x1                   	// #1
     f34:	str	w0, [sp, #112]
     f38:	b	d20 <grub_iso9660_iterate_dir+0x140>
     f3c:	ldr	x0, [sp, #104]
     f40:	bl	0 <grub_free>
     f44:	b	ddc <grub_iso9660_iterate_dir+0x1fc>
     f48:	ldrb	w0, [sp, #176]
     f4c:	cbnz	w0, f60 <grub_iso9660_iterate_dir+0x380>
     f50:	adrp	x0, 0 <grub_iso9660_close>
     f54:	ldr	x0, [x0]
     f58:	str	x0, [sp, #104]
     f5c:	b	d20 <grub_iso9660_iterate_dir+0x140>
     f60:	cmp	w0, #0x1
     f64:	b.ne	f04 <grub_iso9660_iterate_dir+0x324>  // b.any
     f68:	adrp	x0, 0 <grub_iso9660_close>
     f6c:	ldr	x0, [x0]
     f70:	str	x0, [sp, #104]
     f74:	b	d20 <grub_iso9660_iterate_dir+0x140>
     f78:	mov	w19, #0x0                   	// #0
     f7c:	ldp	x23, x24, [sp, #48]
     f80:	ldp	x25, x26, [sp, #64]
     f84:	b	df0 <grub_iso9660_iterate_dir+0x210>
     f88:	mov	x0, x23
     f8c:	mov	w1, #0x3b                  	// #59
     f90:	strb	wzr, [x23, w2, sxtw]
     f94:	bl	0 <grub_strrchr>
     f98:	cbz	x0, fa0 <grub_iso9660_iterate_dir+0x3c0>
     f9c:	strb	wzr, [x0]
     fa0:	ldr	w0, [sp, #116]
     fa4:	mov	x2, x23
     fa8:	ldrb	w1, [sp, #176]
     fac:	orr	w0, w0, #0x100
     fb0:	str	w0, [sp, #116]
     fb4:	cbz	w1, fec <grub_iso9660_iterate_dir+0x40c>
     fb8:	sub	w3, w1, #0x41
     fbc:	add	w0, w1, #0x20
     fc0:	cmp	w3, #0x1a
     fc4:	and	w0, w0, #0xff
     fc8:	csel	w0, w0, w1, cc  // cc = lo, ul, last
     fcc:	strb	w0, [x2]
     fd0:	ldrb	w1, [x2, #1]!
     fd4:	cbnz	w1, fb8 <grub_iso9660_iterate_dir+0x3d8>
     fd8:	cmp	x2, x23
     fdc:	b.eq	fec <grub_iso9660_iterate_dir+0x40c>  // b.none
     fe0:	cmp	w0, #0x2e
     fe4:	b.ne	fec <grub_iso9660_iterate_dir+0x40c>  // b.any
     fe8:	sturb	wzr, [x2, #-1]
     fec:	str	x23, [sp, #104]
     ff0:	b	d20 <grub_iso9660_iterate_dir+0x140>
     ff4:	ldr	w0, [sp, #112]
     ff8:	mov	w19, #0x1                   	// #1
     ffc:	cbnz	w0, 1030 <grub_iso9660_iterate_dir+0x450>
    1000:	ldp	x23, x24, [sp, #48]
    1004:	ldp	x25, x26, [sp, #64]
    1008:	b	df0 <grub_iso9660_iterate_dir+0x210>
    100c:	ldr	w0, [sp, #112]
    1010:	cbnz	w0, 1044 <grub_iso9660_iterate_dir+0x464>
    1014:	mov	x0, x25
    1018:	mov	w19, #0x0                   	// #0
    101c:	bl	0 <grub_free>
    1020:	ldp	x23, x24, [sp, #48]
    1024:	ldp	x25, x26, [sp, #64]
    1028:	ldr	x27, [sp, #80]
    102c:	b	df0 <grub_iso9660_iterate_dir+0x210>
    1030:	ldr	x0, [sp, #104]
    1034:	bl	0 <grub_free>
    1038:	ldp	x23, x24, [sp, #48]
    103c:	ldp	x25, x26, [sp, #64]
    1040:	b	df0 <grub_iso9660_iterate_dir+0x210>
    1044:	ldr	x0, [sp, #104]
    1048:	bl	0 <grub_free>
    104c:	b	1014 <grub_iso9660_iterate_dir+0x434>
	...

0000000000001068 <grub_iso9660_dir>:
    1068:	stp	x29, x30, [sp, #-368]!
    106c:	adrp	x4, 0 <grub_iso9660_close>
    1070:	mov	x29, sp
    1074:	stp	x21, x22, [sp, #32]
    1078:	ldr	x21, [x4]
    107c:	stp	x19, x20, [sp, #16]
    1080:	mov	x19, x0
    1084:	mov	x20, x1
    1088:	stp	x2, x3, [sp, #56]
    108c:	ldr	x0, [x21]
    1090:	bl	0 <grub_dl_ref>
    1094:	ldr	x0, [x19]
    1098:	bl	598 <grub_iso9660_mount>
    109c:	mov	x19, x0
    10a0:	cbz	x0, 1100 <grub_iso9660_dir+0x98>
    10a4:	add	x2, x19, #0x9c
    10a8:	adrp	x0, 0 <grub_iso9660_close>
    10ac:	adrp	x1, 0 <grub_iso9660_close>
    10b0:	ldrb	w6, [x19, #188]
    10b4:	mov	x7, #0x1                   	// #1
    10b8:	stp	x19, x7, [sp, #72]
    10bc:	add	x7, sp, #0x4
    10c0:	ldp	x10, x11, [x2]
    10c4:	add	x22, sp, #0x48
    10c8:	ldp	x8, x9, [x2, #16]
    10cc:	mov	w5, #0x2                   	// #2
    10d0:	ldr	x4, [x0]
    10d4:	add	x2, sp, #0x30
    10d8:	ldr	x3, [x1]
    10dc:	mov	x0, x20
    10e0:	mov	x1, x22
    10e4:	str	xzr, [sp, #88]
    10e8:	str	wzr, [sp, #96]
    10ec:	stp	x10, x11, [x7, #96]
    10f0:	stp	x8, x9, [x7, #112]
    10f4:	strb	w6, [sp, #132]
    10f8:	bl	0 <grub_fshelp_find_file>
    10fc:	cbz	w0, 112c <grub_iso9660_dir+0xc4>
    1100:	mov	x0, x19
    1104:	bl	0 <grub_free>
    1108:	ldr	x0, [x21]
    110c:	bl	0 <grub_dl_unref>
    1110:	adrp	x0, 0 <grub_iso9660_close>
    1114:	ldp	x19, x20, [sp, #16]
    1118:	ldr	x0, [x0]
    111c:	ldp	x21, x22, [sp, #32]
    1120:	ldr	w0, [x0]
    1124:	ldp	x29, x30, [sp], #368
    1128:	ret
    112c:	adrp	x1, 0 <grub_iso9660_close>
    1130:	add	x2, sp, #0x38
    1134:	ldr	x0, [sp, #48]
    1138:	ldr	x1, [x1]
    113c:	bl	be0 <grub_iso9660_iterate_dir>
    1140:	ldr	x0, [sp, #48]
    1144:	cmp	x0, x22
    1148:	b.eq	1100 <grub_iso9660_dir+0x98>  // b.none
    114c:	bl	0 <grub_free>
    1150:	b	1100 <grub_iso9660_dir+0x98>
    1154:	nop
	...

0000000000001180 <grub_iso9660_mtime>:
    1180:	stp	x29, x30, [sp, #-96]!
    1184:	adrp	x2, 0 <grub_iso9660_close>
    1188:	mov	x29, sp
    118c:	stp	x21, x22, [sp, #32]
    1190:	ldr	x21, [x2]
    1194:	stp	x19, x20, [sp, #16]
    1198:	mov	x20, x1
    119c:	ldr	x19, [x0]
    11a0:	ldr	x0, [x21]
    11a4:	bl	0 <grub_dl_ref>
    11a8:	mov	x0, x19
    11ac:	bl	598 <grub_iso9660_mount>
    11b0:	cbz	x0, 145c <grub_iso9660_mtime+0x2dc>
    11b4:	mov	x19, x0
    11b8:	ldrb	w2, [x0, #830]
    11bc:	ldrb	w12, [x0, #831]
    11c0:	add	x11, x0, #0x33e
    11c4:	ldrb	w1, [x0, #832]
    11c8:	ldrb	w13, [x0, #833]
    11cc:	orr	w6, w2, w12
    11d0:	ldrb	w3, [x0, #834]
    11d4:	ldrb	w5, [x0, #835]
    11d8:	orr	w0, w1, w13
    11dc:	ldrb	w4, [x19, #836]
    11e0:	orr	w0, w0, w6
    11e4:	ldrb	w8, [x19, #837]
    11e8:	orr	w7, w3, w5
    11ec:	ldrb	w6, [x19, #838]
    11f0:	orr	w0, w0, w7
    11f4:	ldrb	w10, [x19, #839]
    11f8:	orr	w7, w4, w8
    11fc:	orr	w0, w0, w7
    1200:	ldrb	w9, [x19, #840]
    1204:	orr	w15, w6, w10
    1208:	ldrb	w14, [x19, #841]
    120c:	orr	w0, w0, w15
    1210:	ldrb	w7, [x19, #842]
    1214:	ldrb	w15, [x19, #843]
    1218:	orr	w16, w9, w14
    121c:	orr	w0, w0, w16
    1220:	orr	w16, w7, w15
    1224:	orr	w0, w0, w16
    1228:	cbnz	w0, 1254 <grub_iso9660_mtime+0xd4>
    122c:	ldrb	w0, [x11, #14]
    1230:	cbnz	w0, 1254 <grub_iso9660_mtime+0xd4>
    1234:	ldrb	w0, [x11, #15]
    1238:	cbnz	w0, 1254 <grub_iso9660_mtime+0xd4>
    123c:	adrp	x1, 0 <grub_iso9660_close>
    1240:	mov	w0, #0xa                   	// #10
    1244:	ldr	x1, [x1]
    1248:	bl	0 <grub_error>
    124c:	mov	w22, w0
    1250:	b	1394 <grub_iso9660_mtime+0x214>
    1254:	sub	w12, w12, #0x30
    1258:	sub	w2, w2, #0x30
    125c:	mov	w18, #0x64                  	// #100
    1260:	mov	w17, #0x3e8                 	// #1000
    1264:	adrp	x16, 0 <grub_iso9660_close>
    1268:	sub	w0, w1, #0x30
    126c:	mul	w1, w12, w18
    1270:	adrp	x12, 0 <grub_iso9660_close>
    1274:	madd	w2, w2, w17, w1
    1278:	sub	w13, w13, #0x30
    127c:	ldr	x17, [x16]
    1280:	add	w0, w0, w0, lsl #2
    1284:	ldr	x16, [x12]
    1288:	add	w2, w2, w13
    128c:	ldp	x12, x13, [x17]
    1290:	add	w0, w2, w0, lsl #1
    1294:	and	w0, w0, #0xffff
    1298:	stp	x12, x13, [sp, #72]
    129c:	ldr	w12, [x16, #8]
    12a0:	ldr	x13, [x16]
    12a4:	sub	w1, w0, #0x76d
    12a8:	ldr	x2, [x17, #16]
    12ac:	str	x13, [sp, #56]
    12b0:	str	w12, [sp, #64]
    12b4:	and	w1, w1, #0xffff
    12b8:	str	x2, [sp, #88]
    12bc:	cmp	w1, #0x89
    12c0:	b.hi	1380 <grub_iso9660_mtime+0x200>  // b.pmore
    12c4:	add	w3, w3, w3, lsl #2
    12c8:	sub	w5, w5, #0x10
    12cc:	add	w3, w5, w3, lsl #1
    12d0:	and	w3, w3, #0xff
    12d4:	sub	w12, w3, #0x1
    12d8:	and	w1, w12, #0xff
    12dc:	cmp	w1, #0xb
    12e0:	b.hi	1380 <grub_iso9660_mtime+0x200>  // b.pmore
    12e4:	sub	w1, w0, #0x1
    12e8:	add	w4, w4, w4, lsl #2
    12ec:	sub	w8, w8, #0x10
    12f0:	sub	w2, w0, #0x7b5
    12f4:	asr	w1, w1, #2
    12f8:	add	w4, w8, w4, lsl #1
    12fc:	sub	w1, w1, #0x1ed
    1300:	add	x5, sp, #0x48
    1304:	mov	w16, #0x1f80                	// #8064
    1308:	mov	w8, #0xec00                	// #60416
    130c:	sub	w2, w2, w1, lsl #2
    1310:	movk	w16, #0x786, lsl #16
    1314:	movk	w8, #0x5a4, lsl #16
    1318:	mov	w13, #0x3380                	// #13184
    131c:	movk	w13, #0x1e1, lsl #16
    1320:	ldrh	w5, [x5, w12, sxtw #1]
    1324:	madd	w1, w1, w16, w8
    1328:	and	w4, w4, #0xff
    132c:	madd	w1, w2, w13, w1
    1330:	sub	w8, w4, #0x1
    1334:	add	x13, sp, #0x38
    1338:	mov	w16, #0x5180                	// #20864
    133c:	movk	w16, #0x1, lsl #16
    1340:	cmp	w3, #0x2
    1344:	ccmp	w2, #0x3, #0x0, hi  // hi = pmore
    1348:	madd	w1, w5, w16, w1
    134c:	ldrb	w12, [x13, w12, sxtw]
    1350:	mul	w5, w8, w16
    1354:	b.eq	13b8 <grub_iso9660_mtime+0x238>  // b.none
    1358:	add	w5, w1, w5
    135c:	cmp	w4, w12
    1360:	b.ls	13c8 <grub_iso9660_mtime+0x248>  // b.plast
    1364:	cbz	w2, 1380 <grub_iso9660_mtime+0x200>
    1368:	mov	x1, #0x0                   	// #0
    136c:	mov	w2, #0x1d02                	// #7426
    1370:	bfi	x1, x3, #16, #8
    1374:	bfi	x1, x4, #24, #8
    1378:	cmp	w2, w1, lsr #16
    137c:	b.eq	13c8 <grub_iso9660_mtime+0x248>  // b.none
    1380:	adrp	x1, 0 <grub_iso9660_close>
    1384:	mov	w0, #0xa                   	// #10
    1388:	ldr	x1, [x1]
    138c:	bl	0 <grub_error>
    1390:	mov	w22, w0
    1394:	ldr	x0, [x21]
    1398:	bl	0 <grub_dl_unref>
    139c:	mov	x0, x19
    13a0:	bl	0 <grub_free>
    13a4:	mov	w0, w22
    13a8:	ldp	x19, x20, [sp, #16]
    13ac:	ldp	x21, x22, [sp, #32]
    13b0:	ldp	x29, x30, [sp], #96
    13b4:	ret
    13b8:	add	w2, w1, w16
    13bc:	cmp	w4, w12
    13c0:	add	w5, w2, w5
    13c4:	b.hi	1368 <grub_iso9660_mtime+0x1e8>  // b.pmore
    13c8:	cbz	w4, 1380 <grub_iso9660_mtime+0x200>
    13cc:	add	w6, w6, w6, lsl #2
    13d0:	sub	w10, w10, #0x10
    13d4:	add	w6, w10, w6, lsl #1
    13d8:	and	w6, w6, #0xff
    13dc:	cmp	w6, #0x17
    13e0:	b.hi	1380 <grub_iso9660_mtime+0x200>  // b.pmore
    13e4:	add	w9, w9, w9, lsl #2
    13e8:	sub	w2, w14, #0x10
    13ec:	add	w2, w2, w9, lsl #1
    13f0:	and	w2, w2, #0xff
    13f4:	cmp	w2, #0x3b
    13f8:	b.hi	1380 <grub_iso9660_mtime+0x200>  // b.pmore
    13fc:	add	w1, w7, w7, lsl #2
    1400:	sub	w15, w15, #0x10
    1404:	add	w1, w15, w1, lsl #1
    1408:	and	w1, w1, #0xff
    140c:	cmp	w1, #0x3c
    1410:	b.hi	1380 <grub_iso9660_mtime+0x200>  // b.pmore
    1414:	mov	w4, #0xe10                 	// #3600
    1418:	lsl	w3, w2, #4
    141c:	sub	w2, w3, w2
    1420:	cmp	w0, #0x7bc
    1424:	madd	w6, w6, w4, w5
    1428:	add	w6, w6, w2, lsl #2
    142c:	add	w1, w1, w6
    1430:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
    1434:	b.lt	1380 <grub_iso9660_mtime+0x200>  // b.tstop
    1438:	cmp	w0, #0x7a7
    143c:	ccmp	w1, #0x0, #0x4, ls  // ls = plast
    1440:	b.gt	1380 <grub_iso9660_mtime+0x200>
    1444:	ldrb	w6, [x11, #16]
    1448:	mov	w0, #0xfffffc7c            	// #-900
    144c:	mov	w22, #0x0                   	// #0
    1450:	madd	w1, w6, w0, w1
    1454:	str	w1, [x20]
    1458:	b	1394 <grub_iso9660_mtime+0x214>
    145c:	ldr	x0, [x21]
    1460:	bl	0 <grub_dl_unref>
    1464:	adrp	x0, 0 <grub_iso9660_close>
    1468:	ldp	x19, x20, [sp, #16]
    146c:	ldr	x0, [x0]
    1470:	ldr	w22, [x0]
    1474:	mov	w0, w22
    1478:	ldp	x21, x22, [sp, #32]
    147c:	ldp	x29, x30, [sp], #96
    1480:	ret
    1484:	nop
	...

00000000000014b8 <grub_iso9660_read_symlink>:
    14b8:	ldr	w1, [x0, #24]
    14bc:	cbz	w1, 14d4 <grub_iso9660_read_symlink+0x1c>
    14c0:	ldr	x1, [x0, #8]
    14c4:	add	x1, x1, x1, lsl #5
    14c8:	add	x0, x0, x1
    14cc:	add	x0, x0, #0x1c
    14d0:	b	0 <grub_strdup>
    14d4:	adrp	x0, 0 <grub_iso9660_close>
    14d8:	ldr	x0, [x0]
    14dc:	b	0 <grub_strdup>
	...

00000000000014e8 <add_part.isra.0>:
    14e8:	stp	x29, x30, [sp, #-64]!
    14ec:	mov	x29, sp
    14f0:	stp	x19, x20, [sp, #16]
    14f4:	mov	x19, x0
    14f8:	ldr	x0, [x0]
    14fc:	stp	x21, x22, [sp, #32]
    1500:	mov	x22, x1
    1504:	str	x23, [sp, #48]
    1508:	mov	w21, w2
    150c:	cbz	x0, 1560 <add_part.isra.0+0x78>
    1510:	bl	0 <grub_strlen>
    1514:	mov	w23, w0
    1518:	add	w20, w21, w0
    151c:	ldr	x0, [x19]
    1520:	add	w1, w20, #0x1
    1524:	sxtw	x1, w1
    1528:	bl	0 <grub_realloc>
    152c:	str	x0, [x19]
    1530:	cbz	x0, 154c <add_part.isra.0+0x64>
    1534:	sxtw	x2, w21
    1538:	mov	x1, x22
    153c:	add	x0, x0, w23, sxtw
    1540:	bl	0 <grub_memmove>
    1544:	ldr	x0, [x19]
    1548:	strb	wzr, [x0, w20, sxtw]
    154c:	ldp	x19, x20, [sp, #16]
    1550:	ldp	x21, x22, [sp, #32]
    1554:	ldr	x23, [sp, #48]
    1558:	ldp	x29, x30, [sp], #64
    155c:	ret
    1560:	mov	w20, w2
    1564:	mov	w23, #0x0                   	// #0
    1568:	b	1520 <add_part.isra.0+0x38>
    156c:	nop

0000000000001570 <susp_iterate_dir>:
    1570:	stp	x29, x30, [sp, #-80]!
    1574:	adrp	x2, 0 <grub_iso9660_close>
    1578:	mov	x29, sp
    157c:	stp	x19, x20, [sp, #16]
    1580:	mov	x19, x0
    1584:	ldr	x0, [x2]
    1588:	mov	x2, #0x2                   	// #2
    158c:	stp	x21, x22, [sp, #32]
    1590:	mov	x21, x1
    1594:	mov	x1, x19
    1598:	bl	0 <grub_strncmp>
    159c:	cbnz	w0, 164c <susp_iterate_dir+0xdc>
    15a0:	ldrb	w0, [x19, #4]
    15a4:	tbz	w0, #1, 15c8 <susp_iterate_dir+0x58>
    15a8:	adrp	x1, 0 <grub_iso9660_close>
    15ac:	mov	w0, #0x0                   	// #0
    15b0:	ldr	x1, [x1]
    15b4:	str	x1, [x21]
    15b8:	ldp	x19, x20, [sp, #16]
    15bc:	ldp	x21, x22, [sp, #32]
    15c0:	ldp	x29, x30, [sp], #80
    15c4:	ret
    15c8:	tbnz	w0, #2, 1698 <susp_iterate_dir+0x128>
    15cc:	ldrb	w0, [x19, #2]
    15d0:	cmp	w0, #0x4
    15d4:	b.ls	16e8 <susp_iterate_dir+0x178>  // b.plast
    15d8:	ldr	w2, [x21, #8]
    15dc:	sub	w20, w0, #0x5
    15e0:	stp	x23, x24, [sp, #48]
    15e4:	sxtw	x23, w20
    15e8:	stp	x25, x26, [sp, #64]
    15ec:	add	x24, x23, #0x1
    15f0:	ldr	x25, [x21]
    15f4:	cbz	w2, 1824 <susp_iterate_dir+0x2b4>
    15f8:	mov	x0, x25
    15fc:	bl	0 <grub_strlen>
    1600:	add	x1, x0, x24
    1604:	mov	x22, x0
    1608:	ldr	x0, [x21]
    160c:	bl	0 <grub_realloc>
    1610:	str	x0, [x21]
    1614:	cbz	x0, 184c <susp_iterate_dir+0x2dc>
    1618:	mov	w1, #0x1                   	// #1
    161c:	str	w1, [x21, #8]
    1620:	mov	x2, x23
    1624:	add	x0, x0, x22
    1628:	add	x1, x19, #0x5
    162c:	bl	0 <grub_memmove>
    1630:	ldr	x1, [x21]
    1634:	mov	w0, #0x0                   	// #0
    1638:	add	x22, x1, x22
    163c:	strb	wzr, [x22, w20, sxtw]
    1640:	ldp	x23, x24, [sp, #48]
    1644:	ldp	x25, x26, [sp, #64]
    1648:	b	15b8 <susp_iterate_dir+0x48>
    164c:	adrp	x1, 0 <grub_iso9660_close>
    1650:	mov	x0, x19
    1654:	mov	x2, #0x2                   	// #2
    1658:	ldr	x1, [x1]
    165c:	bl	0 <grub_strncmp>
    1660:	cbnz	w0, 16fc <susp_iterate_dir+0x18c>
    1664:	ldrb	w0, [x19, #5]
    1668:	ldrb	w1, [x19, #4]
    166c:	add	w0, w1, w0, lsl #8
    1670:	and	w0, w0, #0xf000
    1674:	cmp	w0, #0x8, lsl #12
    1678:	b.eq	16d8 <susp_iterate_dir+0x168>  // b.none
    167c:	cmp	w0, #0xa, lsl #12
    1680:	b.eq	16b8 <susp_iterate_dir+0x148>  // b.none
    1684:	cmp	w0, #0x4, lsl #12
    1688:	b.eq	16c8 <susp_iterate_dir+0x158>  // b.none
    168c:	mov	w0, #0x0                   	// #0
    1690:	str	wzr, [x21, #12]
    1694:	b	15b8 <susp_iterate_dir+0x48>
    1698:	adrp	x1, 0 <grub_iso9660_close>
    169c:	mov	w0, #0x0                   	// #0
    16a0:	ldp	x19, x20, [sp, #16]
    16a4:	ldr	x1, [x1]
    16a8:	str	x1, [x21]
    16ac:	ldp	x21, x22, [sp, #32]
    16b0:	ldp	x29, x30, [sp], #80
    16b4:	ret
    16b8:	mov	w1, #0x3                   	// #3
    16bc:	mov	w0, #0x0                   	// #0
    16c0:	str	w1, [x21, #12]
    16c4:	b	15b8 <susp_iterate_dir+0x48>
    16c8:	mov	w1, #0x2                   	// #2
    16cc:	mov	w0, #0x0                   	// #0
    16d0:	str	w1, [x21, #12]
    16d4:	b	15b8 <susp_iterate_dir+0x48>
    16d8:	mov	w1, #0x1                   	// #1
    16dc:	mov	w0, #0x0                   	// #0
    16e0:	str	w1, [x21, #12]
    16e4:	b	15b8 <susp_iterate_dir+0x48>
    16e8:	mov	w0, #0x0                   	// #0
    16ec:	ldp	x19, x20, [sp, #16]
    16f0:	ldp	x21, x22, [sp, #32]
    16f4:	ldp	x29, x30, [sp], #80
    16f8:	ret
    16fc:	adrp	x0, 0 <grub_iso9660_close>
    1700:	mov	x1, x19
    1704:	mov	x2, #0x2                   	// #2
    1708:	ldr	x0, [x0]
    170c:	bl	0 <grub_strncmp>
    1710:	cbnz	w0, 16e8 <susp_iterate_dir+0x178>
    1714:	stp	x23, x24, [sp, #48]
    1718:	mov	w22, #0x1                   	// #1
    171c:	adrp	x24, 0 <grub_iso9660_close>
    1720:	stp	x25, x26, [sp, #64]
    1724:	adrp	x23, 0 <grub_iso9660_close>
    1728:	add	x25, x21, #0x10
    172c:	ldrb	w0, [x19, #2]
    1730:	mov	x26, #0x1                   	// #1
    1734:	cmp	w0, #0x5
    1738:	b.hi	1794 <susp_iterate_dir+0x224>  // b.pmore
    173c:	nop
    1740:	adrp	x0, 0 <grub_iso9660_close>
    1744:	ldp	x23, x24, [sp, #48]
    1748:	ldr	x0, [x0]
    174c:	ldp	x25, x26, [sp, #64]
    1750:	ldr	w0, [x0]
    1754:	b	15b8 <susp_iterate_dir+0x48>
    1758:	cmp	w2, #0x2
    175c:	b.ne	1770 <susp_iterate_dir+0x200>  // b.any
    1760:	adrp	x1, 0 <grub_iso9660_close>
    1764:	mov	x0, x25
    1768:	ldr	x1, [x1]
    176c:	bl	14e8 <add_part.isra.0>
    1770:	add	x20, x19, x20
    1774:	ldrb	w1, [x19, #2]
    1778:	ldrb	w0, [x20, #4]
    177c:	add	w0, w0, #0x2
    1780:	add	w26, w22, w0
    1784:	add	x0, x26, #0x4
    1788:	mov	x22, x26
    178c:	cmp	x0, x1
    1790:	b.cs	1740 <susp_iterate_dir+0x1d0>  // b.hs, b.nlast
    1794:	add	x0, x19, x26
    1798:	add	w20, w22, #0x1
    179c:	ldrb	w2, [x0, #4]
    17a0:	and	w2, w2, #0x1e
    17a4:	cmp	w2, #0x4
    17a8:	b.eq	1810 <susp_iterate_dir+0x2a0>  // b.none
    17ac:	b.hi	17f4 <susp_iterate_dir+0x284>  // b.pmore
    17b0:	cbnz	w2, 1758 <susp_iterate_dir+0x1e8>
    17b4:	ldr	x0, [x21, #16]
    17b8:	cbz	x0, 17c4 <susp_iterate_dir+0x254>
    17bc:	ldr	w0, [x21, #24]
    17c0:	cbz	w0, 1838 <susp_iterate_dir+0x2c8>
    17c4:	add	x2, x19, x20
    17c8:	add	w1, w22, #0x2
    17cc:	add	x26, x19, x26
    17d0:	add	x1, x1, #0x4
    17d4:	mov	x0, x25
    17d8:	add	x1, x19, x1
    17dc:	ldrb	w2, [x2, #4]
    17e0:	bl	14e8 <add_part.isra.0>
    17e4:	ldrb	w0, [x26, #4]
    17e8:	and	w0, w0, #0x1
    17ec:	str	w0, [x21, #24]
    17f0:	b	1770 <susp_iterate_dir+0x200>
    17f4:	cmp	w2, #0x8
    17f8:	b.ne	1770 <susp_iterate_dir+0x200>  // b.any
    17fc:	ldr	x1, [x23]
    1800:	mov	x0, x25
    1804:	mov	w2, #0x1                   	// #1
    1808:	bl	14e8 <add_part.isra.0>
    180c:	b	1770 <susp_iterate_dir+0x200>
    1810:	ldr	x1, [x24]
    1814:	mov	x0, x25
    1818:	mov	w2, #0x3                   	// #3
    181c:	bl	14e8 <add_part.isra.0>
    1820:	b	1770 <susp_iterate_dir+0x200>
    1824:	mov	x0, x24
    1828:	mov	x22, #0x0                   	// #0
    182c:	bl	0 <grub_zalloc>
    1830:	str	x0, [x21]
    1834:	b	1614 <susp_iterate_dir+0xa4>
    1838:	ldr	x1, [x23]
    183c:	mov	x0, x25
    1840:	mov	w2, #0x1                   	// #1
    1844:	bl	14e8 <add_part.isra.0>
    1848:	b	17c4 <susp_iterate_dir+0x254>
    184c:	adrp	x0, 0 <grub_iso9660_close>
    1850:	ldp	x23, x24, [sp, #48]
    1854:	ldr	x0, [x0]
    1858:	ldr	w0, [x0]
    185c:	str	x25, [x21]
    1860:	ldp	x25, x26, [sp, #64]
    1864:	b	15b8 <susp_iterate_dir+0x48>
	...

00000000000018b0 <grub_iso9660_dir_iter>:
    18b0:	stp	x29, x30, [sp, #-128]!
    18b4:	mov	x29, sp
    18b8:	stp	x19, x20, [sp, #16]
    18bc:	mov	x19, x2
    18c0:	mov	w20, w1
    18c4:	mov	x2, #0x10                  	// #16
    18c8:	mov	w1, #0x0                   	// #0
    18cc:	stp	x21, x22, [sp, #32]
    18d0:	mov	x21, x3
    18d4:	mov	x22, x0
    18d8:	add	x0, sp, #0x58
    18dc:	str	x3, [sp, #56]
    18e0:	bl	0 <grub_memset>
    18e4:	and	w20, w20, #0xff
    18e8:	adrp	x1, 0 <grub_iso9660_close>
    18ec:	adrp	x0, 0 <grub_iso9660_close>
    18f0:	cmp	w20, #0x2
    18f4:	ldrb	w2, [x19, #46]
    18f8:	ldr	x3, [x1]
    18fc:	ldr	x4, [x0]
    1900:	cset	w0, eq  // eq = none
    1904:	ldrb	w1, [sp, #88]
    1908:	ldp	x6, x7, [x3]
    190c:	stp	x6, x7, [sp, #104]
    1910:	bfxil	w1, w0, #0, #1
    1914:	ldr	x5, [x4]
    1918:	sub	w0, w2, #0x1
    191c:	ldr	w4, [x4, #8]
    1920:	and	w0, w0, #0xffff
    1924:	ldr	x3, [x3, #16]
    1928:	str	x5, [sp, #72]
    192c:	str	w4, [sp, #80]
    1930:	cmp	w0, #0x89
    1934:	strb	w1, [sp, #88]
    1938:	str	x3, [sp, #120]
    193c:	ldrb	w13, [x19, #49]
    1940:	ldrb	w14, [x19, #50]
    1944:	ldrb	w8, [x19, #51]
    1948:	ldrb	w5, [x19, #47]
    194c:	ldrb	w4, [x19, #48]
    1950:	b.hi	19f8 <grub_iso9660_dir_iter+0x148>  // b.pmore
    1954:	sub	w7, w5, #0x1
    1958:	and	w0, w7, #0xff
    195c:	cmp	w0, #0xb
    1960:	b.hi	19f8 <grub_iso9660_dir_iter+0x148>  // b.pmore
    1964:	add	w1, w2, #0x76b
    1968:	add	x0, sp, #0x68
    196c:	sub	w3, w2, #0x49
    1970:	mov	w16, #0x1f80                	// #8064
    1974:	asr	w1, w1, #2
    1978:	mov	w15, #0xec00                	// #60416
    197c:	ldrh	w10, [x0, w7, sxtw #1]
    1980:	sub	w0, w1, #0x1ed
    1984:	movk	w16, #0x786, lsl #16
    1988:	movk	w15, #0x5a4, lsl #16
    198c:	sub	w1, w3, w0, lsl #2
    1990:	mov	w11, #0x3380                	// #13184
    1994:	add	x3, sp, #0x48
    1998:	sub	w6, w4, #0x1
    199c:	movk	w11, #0x1e1, lsl #16
    19a0:	mov	w12, #0x5180                	// #20864
    19a4:	movk	w12, #0x1, lsl #16
    19a8:	madd	w0, w0, w16, w15
    19ac:	madd	w0, w1, w11, w0
    19b0:	cmp	w5, #0x2
    19b4:	ldrb	w7, [x3, w7, sxtw]
    19b8:	madd	w0, w10, w12, w0
    19bc:	mul	w3, w6, w12
    19c0:	add	x9, x19, #0x2e
    19c4:	ccmp	w1, #0x3, #0x0, hi  // hi = pmore
    19c8:	add	w2, w2, #0x76c
    19cc:	b.eq	1a30 <grub_iso9660_dir_iter+0x180>  // b.none
    19d0:	add	w3, w0, w3
    19d4:	cmp	w4, w7
    19d8:	b.ls	1a40 <grub_iso9660_dir_iter+0x190>  // b.plast
    19dc:	cbz	w1, 19f8 <grub_iso9660_dir_iter+0x148>
    19e0:	mov	x0, #0x0                   	// #0
    19e4:	mov	w1, #0x1d02                	// #7426
    19e8:	bfi	x0, x5, #16, #8
    19ec:	bfi	x0, x4, #24, #8
    19f0:	cmp	w1, w0, lsr #16
    19f4:	b.eq	1a40 <grub_iso9660_dir_iter+0x190>  // b.none
    19f8:	mov	w2, #0x0                   	// #0
    19fc:	ldrb	w1, [sp, #88]
    1a00:	mov	x0, x19
    1a04:	bfi	w1, w2, #1, #1
    1a08:	strb	w1, [sp, #88]
    1a0c:	bl	0 <grub_free>
    1a10:	ldp	x3, x2, [x21]
    1a14:	add	x1, sp, #0x58
    1a18:	mov	x0, x22
    1a1c:	blr	x3
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x21, x22, [sp, #32]
    1a28:	ldp	x29, x30, [sp], #128
    1a2c:	ret
    1a30:	add	w0, w0, w12
    1a34:	cmp	w4, w7
    1a38:	add	w3, w0, w3
    1a3c:	b.hi	19e0 <grub_iso9660_dir_iter+0x130>  // b.pmore
    1a40:	cbz	w4, 19f8 <grub_iso9660_dir_iter+0x148>
    1a44:	cmp	w13, #0x17
    1a48:	b.hi	19f8 <grub_iso9660_dir_iter+0x148>  // b.pmore
    1a4c:	cmp	w14, #0x3b
    1a50:	b.hi	19f8 <grub_iso9660_dir_iter+0x148>  // b.pmore
    1a54:	cmp	w8, #0x3c
    1a58:	b.hi	19f8 <grub_iso9660_dir_iter+0x148>  // b.pmore
    1a5c:	mov	w1, #0xe10                 	// #3600
    1a60:	lsl	w0, w14, #4
    1a64:	sub	w14, w0, w14
    1a68:	cmp	w2, #0x7bc
    1a6c:	madd	w3, w13, w1, w3
    1a70:	add	w3, w3, w14, lsl #2
    1a74:	add	w8, w8, w3
    1a78:	ccmp	w8, #0x0, #0x0, hi  // hi = pmore
    1a7c:	b.lt	19f8 <grub_iso9660_dir_iter+0x148>  // b.tstop
    1a80:	cmp	w2, #0x7a7
    1a84:	ccmp	w8, #0x0, #0x4, ls  // ls = plast
    1a88:	b.gt	19f8 <grub_iso9660_dir_iter+0x148>
    1a8c:	ldrb	w0, [x9, #6]
    1a90:	mov	w1, #0xfffffc7c            	// #-900
    1a94:	mov	w2, #0x1                   	// #1
    1a98:	madd	w0, w0, w1, w8
    1a9c:	str	w0, [sp, #92]
    1aa0:	b	19fc <grub_iso9660_dir_iter+0x14c>
    1aa4:	nop
	...

0000000000001ab8 <grub_mod_init>:
    1ab8:	stp	x29, x30, [sp, #-32]!
    1abc:	adrp	x2, 0 <grub_iso9660_close>
    1ac0:	adrp	x1, 0 <grub_iso9660_close>
    1ac4:	mov	x29, sp
    1ac8:	ldr	x1, [x1]
    1acc:	str	x19, [sp, #16]
    1ad0:	mov	x19, x0
    1ad4:	ldr	x0, [x2]
    1ad8:	bl	0 <grub_list_push>
    1adc:	adrp	x0, 0 <grub_iso9660_close>
    1ae0:	ldr	x0, [x0]
    1ae4:	str	x19, [x0]
    1ae8:	ldr	x19, [sp, #16]
    1aec:	ldp	x29, x30, [sp], #32
    1af0:	ret
    1af4:	nop
	...

0000000000001b10 <grub_mod_fini>:
    1b10:	adrp	x0, 0 <grub_iso9660_close>
    1b14:	ldr	x0, [x0]
    1b18:	b	0 <grub_list_remove>
    1b1c:	nop
	...
