
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//networkctl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403880 <.init>:
  403880:	stp	x29, x30, [sp, #-16]!
  403884:	mov	x29, sp
  403888:	bl	404358 <clock_supported@plt+0x60>
  40388c:	ldp	x29, x30, [sp], #16
  403890:	ret

Disassembly of section .plt:

0000000000403898 <__libc_start_main@plt-0x20>:
  403898:	stp	x16, x30, [sp, #-16]!
  40389c:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038a0:	ldr	x17, [x16, #2768]
  4038a4:	add	x16, x16, #0xad0
  4038a8:	br	x17
  4038ac:	nop
  4038b0:	nop
  4038b4:	nop

00000000004038b8 <__libc_start_main@plt>:
  4038b8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038bc:	ldr	x17, [x16, #2776]
  4038c0:	add	x16, x16, #0xad8
  4038c4:	br	x17

00000000004038c8 <abort@plt>:
  4038c8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038cc:	ldr	x17, [x16, #2784]
  4038d0:	add	x16, x16, #0xae0
  4038d4:	br	x17

00000000004038d8 <__gmon_start__@plt>:
  4038d8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038dc:	ldr	x17, [x16, #2792]
  4038e0:	add	x16, x16, #0xae8
  4038e4:	br	x17

00000000004038e8 <ask_password_agent_close@plt>:
  4038e8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038ec:	ldr	x17, [x16, #2800]
  4038f0:	add	x16, x16, #0xaf0
  4038f4:	br	x17

00000000004038f8 <polkit_agent_close@plt>:
  4038f8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4038fc:	ldr	x17, [x16, #2808]
  403900:	add	x16, x16, #0xaf8
  403904:	br	x17

0000000000403908 <pager_close@plt>:
  403908:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40390c:	ldr	x17, [x16, #2816]
  403910:	add	x16, x16, #0xb00
  403914:	br	x17

0000000000403918 <mac_selinux_finish@plt>:
  403918:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40391c:	ldr	x17, [x16, #2824]
  403920:	add	x16, x16, #0xb08
  403924:	br	x17

0000000000403928 <log_show_color@plt>:
  403928:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40392c:	ldr	x17, [x16, #2832]
  403930:	add	x16, x16, #0xb10
  403934:	br	x17

0000000000403938 <log_parse_environment_realm@plt>:
  403938:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40393c:	ldr	x17, [x16, #2840]
  403940:	add	x16, x16, #0xb18
  403944:	br	x17

0000000000403948 <log_open@plt>:
  403948:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40394c:	ldr	x17, [x16, #2848]
  403950:	add	x16, x16, #0xb20
  403954:	br	x17

0000000000403958 <log_assert_failed_realm@plt>:
  403958:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40395c:	ldr	x17, [x16, #2856]
  403960:	add	x16, x16, #0xb28
  403964:	br	x17

0000000000403968 <getopt_long@plt>:
  403968:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40396c:	ldr	x17, [x16, #2864]
  403970:	add	x16, x16, #0xb30
  403974:	br	x17

0000000000403978 <version@plt>:
  403978:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40397c:	ldr	x17, [x16, #2872]
  403980:	add	x16, x16, #0xb38
  403984:	br	x17

0000000000403988 <log_assert_failed_unreachable_realm@plt>:
  403988:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40398c:	ldr	x17, [x16, #2880]
  403990:	add	x16, x16, #0xb40
  403994:	br	x17

0000000000403998 <access@plt>:
  403998:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40399c:	ldr	x17, [x16, #2888]
  4039a0:	add	x16, x16, #0xb48
  4039a4:	br	x17

00000000004039a8 <fprintf@plt>:
  4039a8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039ac:	ldr	x17, [x16, #2896]
  4039b0:	add	x16, x16, #0xb50
  4039b4:	br	x17

00000000004039b8 <dispatch_verb@plt>:
  4039b8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039bc:	ldr	x17, [x16, #2904]
  4039c0:	add	x16, x16, #0xb58
  4039c4:	br	x17

00000000004039c8 <terminal_urlify_man@plt>:
  4039c8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039cc:	ldr	x17, [x16, #2912]
  4039d0:	add	x16, x16, #0xb60
  4039d4:	br	x17

00000000004039d8 <log_oom_internal@plt>:
  4039d8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039dc:	ldr	x17, [x16, #2920]
  4039e0:	add	x16, x16, #0xb68
  4039e4:	br	x17

00000000004039e8 <printf@plt>:
  4039e8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039ec:	ldr	x17, [x16, #2928]
  4039f0:	add	x16, x16, #0xb70
  4039f4:	br	x17

00000000004039f8 <free@plt>:
  4039f8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4039fc:	ldr	x17, [x16, #2936]
  403a00:	add	x16, x16, #0xb78
  403a04:	br	x17

0000000000403a08 <colors_enabled@plt>:
  403a08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a0c:	ldr	x17, [x16, #2944]
  403a10:	add	x16, x16, #0xb80
  403a14:	br	x17

0000000000403a18 <sd_netlink_open@plt>:
  403a18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a1c:	ldr	x17, [x16, #2952]
  403a20:	add	x16, x16, #0xb88
  403a24:	br	x17

0000000000403a28 <log_get_max_level_realm@plt>:
  403a28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a2c:	ldr	x17, [x16, #2960]
  403a30:	add	x16, x16, #0xb90
  403a34:	br	x17

0000000000403a38 <log_internal_realm@plt>:
  403a38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a3c:	ldr	x17, [x16, #2968]
  403a40:	add	x16, x16, #0xb98
  403a44:	br	x17

0000000000403a48 <abs@plt>:
  403a48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a4c:	ldr	x17, [x16, #2976]
  403a50:	add	x16, x16, #0xba0
  403a54:	br	x17

0000000000403a58 <pager_open@plt>:
  403a58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a5c:	ldr	x17, [x16, #2984]
  403a60:	add	x16, x16, #0xba8
  403a64:	br	x17

0000000000403a68 <table_new_internal@plt>:
  403a68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a6c:	ldr	x17, [x16, #2992]
  403a70:	add	x16, x16, #0xbb0
  403a74:	br	x17

0000000000403a78 <table_set_header@plt>:
  403a78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a7c:	ldr	x17, [x16, #3000]
  403a80:	add	x16, x16, #0xbb8
  403a84:	br	x17

0000000000403a88 <table_get_cell@plt>:
  403a88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a8c:	ldr	x17, [x16, #3008]
  403a90:	add	x16, x16, #0xbc0
  403a94:	br	x17

0000000000403a98 <table_set_minimum_width@plt>:
  403a98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403a9c:	ldr	x17, [x16, #3016]
  403aa0:	add	x16, x16, #0xbc8
  403aa4:	br	x17

0000000000403aa8 <table_set_weight@plt>:
  403aa8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403aac:	ldr	x17, [x16, #3024]
  403ab0:	add	x16, x16, #0xbd0
  403ab4:	br	x17

0000000000403ab8 <table_set_ellipsize_percent@plt>:
  403ab8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403abc:	ldr	x17, [x16, #3032]
  403ac0:	add	x16, x16, #0xbd8
  403ac4:	br	x17

0000000000403ac8 <table_set_align_percent@plt>:
  403ac8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403acc:	ldr	x17, [x16, #3040]
  403ad0:	add	x16, x16, #0xbe0
  403ad4:	br	x17

0000000000403ad8 <sd_network_link_get_operational_state@plt>:
  403ad8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403adc:	ldr	x17, [x16, #3048]
  403ae0:	add	x16, x16, #0xbe8
  403ae4:	br	x17

0000000000403ae8 <sd_network_link_get_setup_state@plt>:
  403ae8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403aec:	ldr	x17, [x16, #3056]
  403af0:	add	x16, x16, #0xbf0
  403af4:	br	x17

0000000000403af8 <strdup@plt>:
  403af8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403afc:	ldr	x17, [x16, #3064]
  403b00:	add	x16, x16, #0xbf8
  403b04:	br	x17

0000000000403b08 <table_add_many_internal@plt>:
  403b08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b0c:	ldr	x17, [x16, #3072]
  403b10:	add	x16, x16, #0xc00
  403b14:	br	x17

0000000000403b18 <table_print@plt>:
  403b18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b1c:	ldr	x17, [x16, #3080]
  403b20:	add	x16, x16, #0xc08
  403b24:	br	x17

0000000000403b28 <sd_bus_open_system@plt>:
  403b28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b2c:	ldr	x17, [x16, #3088]
  403b30:	add	x16, x16, #0xc10
  403b34:	br	x17

0000000000403b38 <sd_hwdb_new@plt>:
  403b38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b3c:	ldr	x17, [x16, #3096]
  403b40:	add	x16, x16, #0xc18
  403b44:	br	x17

0000000000403b48 <fputc@plt>:
  403b48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b4c:	ldr	x17, [x16, #3104]
  403b50:	add	x16, x16, #0xc20
  403b54:	br	x17

0000000000403b58 <internal_set_new@plt>:
  403b58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b5c:	ldr	x17, [x16, #3112]
  403b60:	add	x16, x16, #0xc28
  403b64:	br	x17

0000000000403b68 <parse_ifindex_or_ifname@plt>:
  403b68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b6c:	ldr	x17, [x16, #3120]
  403b70:	add	x16, x16, #0xc30
  403b74:	br	x17

0000000000403b78 <set_put@plt>:
  403b78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b7c:	ldr	x17, [x16, #3128]
  403b80:	add	x16, x16, #0xc38
  403b84:	br	x17

0000000000403b88 <set_iterate@plt>:
  403b88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b8c:	ldr	x17, [x16, #3136]
  403b90:	add	x16, x16, #0xc40
  403b94:	br	x17

0000000000403b98 <format_ifname_full@plt>:
  403b98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403b9c:	ldr	x17, [x16, #3144]
  403ba0:	add	x16, x16, #0xc48
  403ba4:	br	x17

0000000000403ba8 <sd_bus_call_method@plt>:
  403ba8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bac:	ldr	x17, [x16, #3152]
  403bb0:	add	x16, x16, #0xc50
  403bb4:	br	x17

0000000000403bb8 <sd_bus_error_free@plt>:
  403bb8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bbc:	ldr	x17, [x16, #3160]
  403bc0:	add	x16, x16, #0xc58
  403bc4:	br	x17

0000000000403bc8 <sd_netlink_unref@plt>:
  403bc8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bcc:	ldr	x17, [x16, #3168]
  403bd0:	add	x16, x16, #0xc60
  403bd4:	br	x17

0000000000403bd8 <table_unref@plt>:
  403bd8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bdc:	ldr	x17, [x16, #3176]
  403be0:	add	x16, x16, #0xc68
  403be4:	br	x17

0000000000403be8 <sd_rtnl_message_new_link@plt>:
  403be8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bec:	ldr	x17, [x16, #3184]
  403bf0:	add	x16, x16, #0xc70
  403bf4:	br	x17

0000000000403bf8 <rtnl_log_create_error@plt>:
  403bf8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403bfc:	ldr	x17, [x16, #3192]
  403c00:	add	x16, x16, #0xc78
  403c04:	br	x17

0000000000403c08 <sd_netlink_message_request_dump@plt>:
  403c08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c0c:	ldr	x17, [x16, #3200]
  403c10:	add	x16, x16, #0xc80
  403c14:	br	x17

0000000000403c18 <sd_netlink_call@plt>:
  403c18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c1c:	ldr	x17, [x16, #3208]
  403c20:	add	x16, x16, #0xc88
  403c24:	br	x17

0000000000403c28 <greedy_realloc0@plt>:
  403c28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c2c:	ldr	x17, [x16, #3216]
  403c30:	add	x16, x16, #0xc90
  403c34:	br	x17

0000000000403c38 <snprintf@plt>:
  403c38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c3c:	ldr	x17, [x16, #3224]
  403c40:	add	x16, x16, #0xc98
  403c44:	br	x17

0000000000403c48 <sd_device_new_from_device_id@plt>:
  403c48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c4c:	ldr	x17, [x16, #3232]
  403c50:	add	x16, x16, #0xca0
  403c54:	br	x17

0000000000403c58 <sd_netlink_message_next@plt>:
  403c58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c5c:	ldr	x17, [x16, #3240]
  403c60:	add	x16, x16, #0xca8
  403c64:	br	x17

0000000000403c68 <strv_find@plt>:
  403c68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c6c:	ldr	x17, [x16, #3248]
  403c70:	add	x16, x16, #0xcb0
  403c74:	br	x17

0000000000403c78 <sd_device_get_devtype@plt>:
  403c78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c7c:	ldr	x17, [x16, #3256]
  403c80:	add	x16, x16, #0xcb8
  403c84:	br	x17

0000000000403c88 <arphrd_to_name@plt>:
  403c88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c8c:	ldr	x17, [x16, #3264]
  403c90:	add	x16, x16, #0xcc0
  403c94:	br	x17

0000000000403c98 <ascii_strlower@plt>:
  403c98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403c9c:	ldr	x17, [x16, #3272]
  403ca0:	add	x16, x16, #0xcc8
  403ca4:	br	x17

0000000000403ca8 <sd_device_unref@plt>:
  403ca8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403cac:	ldr	x17, [x16, #3280]
  403cb0:	add	x16, x16, #0xcd0
  403cb4:	br	x17

0000000000403cb8 <sd_netlink_message_unref@plt>:
  403cb8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403cbc:	ldr	x17, [x16, #3288]
  403cc0:	add	x16, x16, #0xcd8
  403cc4:	br	x17

0000000000403cc8 <safe_close@plt>:
  403cc8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403ccc:	ldr	x17, [x16, #3296]
  403cd0:	add	x16, x16, #0xce0
  403cd4:	br	x17

0000000000403cd8 <sd_netlink_message_get_type@plt>:
  403cd8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403cdc:	ldr	x17, [x16, #3304]
  403ce0:	add	x16, x16, #0xce8
  403ce4:	br	x17

0000000000403ce8 <sd_rtnl_message_link_get_ifindex@plt>:
  403ce8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403cec:	ldr	x17, [x16, #3312]
  403cf0:	add	x16, x16, #0xcf0
  403cf4:	br	x17

0000000000403cf8 <sd_netlink_message_read_string@plt>:
  403cf8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403cfc:	ldr	x17, [x16, #3320]
  403d00:	add	x16, x16, #0xcf8
  403d04:	br	x17

0000000000403d08 <strv_fnmatch@plt>:
  403d08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d0c:	ldr	x17, [x16, #3328]
  403d10:	add	x16, x16, #0xd00
  403d14:	br	x17

0000000000403d18 <sd_rtnl_message_link_get_type@plt>:
  403d18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d1c:	ldr	x17, [x16, #3336]
  403d20:	add	x16, x16, #0xd08
  403d24:	br	x17

0000000000403d28 <strscpy@plt>:
  403d28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d2c:	ldr	x17, [x16, #3344]
  403d30:	add	x16, x16, #0xd10
  403d34:	br	x17

0000000000403d38 <sd_netlink_message_read_ether_addr@plt>:
  403d38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d3c:	ldr	x17, [x16, #3352]
  403d40:	add	x16, x16, #0xd18
  403d44:	br	x17

0000000000403d48 <memcmp@plt>:
  403d48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d4c:	ldr	x17, [x16, #3360]
  403d50:	add	x16, x16, #0xd20
  403d54:	br	x17

0000000000403d58 <sd_netlink_message_read_u32@plt>:
  403d58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d5c:	ldr	x17, [x16, #3368]
  403d60:	add	x16, x16, #0xd28
  403d64:	br	x17

0000000000403d68 <sd_netlink_message_read@plt>:
  403d68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d6c:	ldr	x17, [x16, #3376]
  403d70:	add	x16, x16, #0xd30
  403d74:	br	x17

0000000000403d78 <ethtool_get_link_info@plt>:
  403d78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d7c:	ldr	x17, [x16, #3384]
  403d80:	add	x16, x16, #0xd38
  403d84:	br	x17

0000000000403d88 <sd_genl_socket_open@plt>:
  403d88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d8c:	ldr	x17, [x16, #3392]
  403d90:	add	x16, x16, #0xd40
  403d94:	br	x17

0000000000403d98 <sd_netlink_inc_rcvbuf@plt>:
  403d98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403d9c:	ldr	x17, [x16, #3400]
  403da0:	add	x16, x16, #0xd48
  403da4:	br	x17

0000000000403da8 <wifi_get_interface@plt>:
  403da8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403dac:	ldr	x17, [x16, #3408]
  403db0:	add	x16, x16, #0xd50
  403db4:	br	x17

0000000000403db8 <wifi_get_station@plt>:
  403db8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403dbc:	ldr	x17, [x16, #3416]
  403dc0:	add	x16, x16, #0xd58
  403dc4:	br	x17

0000000000403dc8 <qsort@plt>:
  403dc8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403dcc:	ldr	x17, [x16, #3424]
  403dd0:	add	x16, x16, #0xd60
  403dd4:	br	x17

0000000000403dd8 <asprintf@plt>:
  403dd8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403ddc:	ldr	x17, [x16, #3432]
  403de0:	add	x16, x16, #0xd68
  403de4:	br	x17

0000000000403de8 <sd_bus_path_encode@plt>:
  403de8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403dec:	ldr	x17, [x16, #3440]
  403df0:	add	x16, x16, #0xd70
  403df4:	br	x17

0000000000403df8 <sd_bus_error_has_name@plt>:
  403df8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403dfc:	ldr	x17, [x16, #3448]
  403e00:	add	x16, x16, #0xd78
  403e04:	br	x17

0000000000403e08 <bus_error_message@plt>:
  403e08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e0c:	ldr	x17, [x16, #3456]
  403e10:	add	x16, x16, #0xd80
  403e14:	br	x17

0000000000403e18 <sd_bus_message_enter_container@plt>:
  403e18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e1c:	ldr	x17, [x16, #3464]
  403e20:	add	x16, x16, #0xd88
  403e24:	br	x17

0000000000403e28 <sd_bus_message_read@plt>:
  403e28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e2c:	ldr	x17, [x16, #3472]
  403e30:	add	x16, x16, #0xd90
  403e34:	br	x17

0000000000403e38 <sd_bus_message_exit_container@plt>:
  403e38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e3c:	ldr	x17, [x16, #3480]
  403e40:	add	x16, x16, #0xd98
  403e44:	br	x17

0000000000403e48 <sd_netlink_message_enter_container@plt>:
  403e48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e4c:	ldr	x17, [x16, #3488]
  403e50:	add	x16, x16, #0xda0
  403e54:	br	x17

0000000000403e58 <strcmp@plt>:
  403e58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e5c:	ldr	x17, [x16, #3496]
  403e60:	add	x16, x16, #0xda8
  403e64:	br	x17

0000000000403e68 <sd_netlink_message_read_u16@plt>:
  403e68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e6c:	ldr	x17, [x16, #3504]
  403e70:	add	x16, x16, #0xdb0
  403e74:	br	x17

0000000000403e78 <sd_netlink_message_read_u8@plt>:
  403e78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e7c:	ldr	x17, [x16, #3512]
  403e80:	add	x16, x16, #0xdb8
  403e84:	br	x17

0000000000403e88 <sd_netlink_message_read_in_addr@plt>:
  403e88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e8c:	ldr	x17, [x16, #3520]
  403e90:	add	x16, x16, #0xdc0
  403e94:	br	x17

0000000000403e98 <sd_netlink_message_read_in6_addr@plt>:
  403e98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403e9c:	ldr	x17, [x16, #3528]
  403ea0:	add	x16, x16, #0xdc8
  403ea4:	br	x17

0000000000403ea8 <strncpy@plt>:
  403ea8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403eac:	ldr	x17, [x16, #3536]
  403eb0:	add	x16, x16, #0xdd0
  403eb4:	br	x17

0000000000403eb8 <sd_netlink_message_exit_container@plt>:
  403eb8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403ebc:	ldr	x17, [x16, #3544]
  403ec0:	add	x16, x16, #0xdd8
  403ec4:	br	x17

0000000000403ec8 <strcmp_ptr@plt>:
  403ec8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403ecc:	ldr	x17, [x16, #3552]
  403ed0:	add	x16, x16, #0xde0
  403ed4:	br	x17

0000000000403ed8 <sd_bus_message_unref@plt>:
  403ed8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403edc:	ldr	x17, [x16, #3560]
  403ee0:	add	x16, x16, #0xde8
  403ee4:	br	x17

0000000000403ee8 <sd_bus_flush_close_unref@plt>:
  403ee8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403eec:	ldr	x17, [x16, #3568]
  403ef0:	add	x16, x16, #0xdf0
  403ef4:	br	x17

0000000000403ef8 <sd_hwdb_unref@plt>:
  403ef8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403efc:	ldr	x17, [x16, #3576]
  403f00:	add	x16, x16, #0xdf8
  403f04:	br	x17

0000000000403f08 <sd_network_get_operational_state@plt>:
  403f08:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f0c:	ldr	x17, [x16, #3584]
  403f10:	add	x16, x16, #0xe00
  403f14:	br	x17

0000000000403f18 <special_glyph@plt>:
  403f18:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f1c:	ldr	x17, [x16, #3592]
  403f20:	add	x16, x16, #0xe08
  403f24:	br	x17

0000000000403f28 <sd_network_get_dns@plt>:
  403f28:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f2c:	ldr	x17, [x16, #3600]
  403f30:	add	x16, x16, #0xe10
  403f34:	br	x17

0000000000403f38 <sd_network_get_search_domains@plt>:
  403f38:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f3c:	ldr	x17, [x16, #3608]
  403f40:	add	x16, x16, #0xe18
  403f44:	br	x17

0000000000403f48 <sd_network_get_route_domains@plt>:
  403f48:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f4c:	ldr	x17, [x16, #3616]
  403f50:	add	x16, x16, #0xe20
  403f54:	br	x17

0000000000403f58 <sd_network_get_ntp@plt>:
  403f58:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f5c:	ldr	x17, [x16, #3624]
  403f60:	add	x16, x16, #0xe28
  403f64:	br	x17

0000000000403f68 <sd_network_link_get_dns@plt>:
  403f68:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f6c:	ldr	x17, [x16, #3632]
  403f70:	add	x16, x16, #0xe30
  403f74:	br	x17

0000000000403f78 <sd_network_link_get_search_domains@plt>:
  403f78:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f7c:	ldr	x17, [x16, #3640]
  403f80:	add	x16, x16, #0xe38
  403f84:	br	x17

0000000000403f88 <sd_network_link_get_route_domains@plt>:
  403f88:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f8c:	ldr	x17, [x16, #3648]
  403f90:	add	x16, x16, #0xe40
  403f94:	br	x17

0000000000403f98 <sd_network_link_get_ntp@plt>:
  403f98:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403f9c:	ldr	x17, [x16, #3656]
  403fa0:	add	x16, x16, #0xe48
  403fa4:	br	x17

0000000000403fa8 <sd_device_get_property_value@plt>:
  403fa8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403fac:	ldr	x17, [x16, #3664]
  403fb0:	add	x16, x16, #0xe50
  403fb4:	br	x17

0000000000403fb8 <sd_network_link_get_network_file@plt>:
  403fb8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403fbc:	ldr	x17, [x16, #3672]
  403fc0:	add	x16, x16, #0xe58
  403fc4:	br	x17

0000000000403fc8 <sd_network_link_get_carrier_bound_to@plt>:
  403fc8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403fcc:	ldr	x17, [x16, #3680]
  403fd0:	add	x16, x16, #0xe60
  403fd4:	br	x17

0000000000403fd8 <sd_network_link_get_carrier_bound_by@plt>:
  403fd8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403fdc:	ldr	x17, [x16, #3688]
  403fe0:	add	x16, x16, #0xe68
  403fe4:	br	x17

0000000000403fe8 <table_add_cell_stringf@plt>:
  403fe8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403fec:	ldr	x17, [x16, #3696]
  403ff0:	add	x16, x16, #0xe70
  403ff4:	br	x17

0000000000403ff8 <ether_addr_to_string@plt>:
  403ff8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  403ffc:	ldr	x17, [x16, #3704]
  404000:	add	x16, x16, #0xe78
  404004:	br	x17

0000000000404008 <jiffies_to_usec@plt>:
  404008:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40400c:	ldr	x17, [x16, #3712]
  404010:	add	x16, x16, #0xe80
  404014:	br	x17

0000000000404018 <cescape@plt>:
  404018:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40401c:	ldr	x17, [x16, #3720]
  404020:	add	x16, x16, #0xe88
  404024:	br	x17

0000000000404028 <format_bytes_full@plt>:
  404028:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40402c:	ldr	x17, [x16, #3728]
  404030:	add	x16, x16, #0xe90
  404034:	br	x17

0000000000404038 <duplex_to_string@plt>:
  404038:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40403c:	ldr	x17, [x16, #3736]
  404040:	add	x16, x16, #0xe98
  404044:	br	x17

0000000000404048 <port_to_string@plt>:
  404048:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40404c:	ldr	x17, [x16, #3744]
  404050:	add	x16, x16, #0xea0
  404054:	br	x17

0000000000404058 <sd_network_link_get_timezone@plt>:
  404058:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40405c:	ldr	x17, [x16, #3752]
  404060:	add	x16, x16, #0xea8
  404064:	br	x17

0000000000404068 <strv_free@plt>:
  404068:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40406c:	ldr	x17, [x16, #3760]
  404070:	add	x16, x16, #0xeb0
  404074:	br	x17

0000000000404078 <local_addresses@plt>:
  404078:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40407c:	ldr	x17, [x16, #3768]
  404080:	add	x16, x16, #0xeb8
  404084:	br	x17

0000000000404088 <sd_network_link_get_dhcp4_address@plt>:
  404088:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40408c:	ldr	x17, [x16, #3776]
  404090:	add	x16, x16, #0xec0
  404094:	br	x17

0000000000404098 <in_addr_to_string@plt>:
  404098:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40409c:	ldr	x17, [x16, #3784]
  4040a0:	add	x16, x16, #0xec8
  4040a4:	br	x17

00000000004040a8 <strjoin_real@plt>:
  4040a8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040ac:	ldr	x17, [x16, #3792]
  4040b0:	add	x16, x16, #0xed0
  4040b4:	br	x17

00000000004040b8 <local_gateways@plt>:
  4040b8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040bc:	ldr	x17, [x16, #3800]
  4040c0:	add	x16, x16, #0xed8
  4040c4:	br	x17

00000000004040c8 <table_add_cell_full@plt>:
  4040c8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040cc:	ldr	x17, [x16, #3808]
  4040d0:	add	x16, x16, #0xee0
  4040d4:	br	x17

00000000004040d8 <sd_rtnl_message_new_neigh@plt>:
  4040d8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040dc:	ldr	x17, [x16, #3816]
  4040e0:	add	x16, x16, #0xee8
  4040e4:	br	x17

00000000004040e8 <sd_netlink_message_get_errno@plt>:
  4040e8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040ec:	ldr	x17, [x16, #3824]
  4040f0:	add	x16, x16, #0xef0
  4040f4:	br	x17

00000000004040f8 <sd_rtnl_message_neigh_get_family@plt>:
  4040f8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4040fc:	ldr	x17, [x16, #3832]
  404100:	add	x16, x16, #0xef8
  404104:	br	x17

0000000000404108 <sd_rtnl_message_neigh_get_ifindex@plt>:
  404108:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40410c:	ldr	x17, [x16, #3840]
  404110:	add	x16, x16, #0xf00
  404114:	br	x17

0000000000404118 <in_addr_equal@plt>:
  404118:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40411c:	ldr	x17, [x16, #3848]
  404120:	add	x16, x16, #0xf08
  404124:	br	x17

0000000000404128 <sd_hwdb_get@plt>:
  404128:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40412c:	ldr	x17, [x16, #3856]
  404130:	add	x16, x16, #0xf10
  404134:	br	x17

0000000000404138 <safe_fclose@plt>:
  404138:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40413c:	ldr	x17, [x16, #3864]
  404140:	add	x16, x16, #0xf18
  404144:	br	x17

0000000000404148 <fopen64@plt>:
  404148:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40414c:	ldr	x17, [x16, #3872]
  404150:	add	x16, x16, #0xf20
  404154:	br	x17

0000000000404158 <__errno_location@plt>:
  404158:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40415c:	ldr	x17, [x16, #3880]
  404160:	add	x16, x16, #0xf28
  404164:	br	x17

0000000000404168 <fread@plt>:
  404168:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40416c:	ldr	x17, [x16, #3888]
  404170:	add	x16, x16, #0xf30
  404174:	br	x17

0000000000404178 <feof@plt>:
  404178:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40417c:	ldr	x17, [x16, #3896]
  404180:	add	x16, x16, #0xf38
  404184:	br	x17

0000000000404188 <malloc@plt>:
  404188:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40418c:	ldr	x17, [x16, #3904]
  404190:	add	x16, x16, #0xf40
  404194:	br	x17

0000000000404198 <strlen@plt>:
  404198:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40419c:	ldr	x17, [x16, #3912]
  4041a0:	add	x16, x16, #0xf48
  4041a4:	br	x17

00000000004041a8 <ellipsize_mem@plt>:
  4041a8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041ac:	ldr	x17, [x16, #3920]
  4041b0:	add	x16, x16, #0xf50
  4041b4:	br	x17

00000000004041b8 <columns@plt>:
  4041b8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041bc:	ldr	x17, [x16, #3928]
  4041c0:	add	x16, x16, #0xf58
  4041c4:	br	x17

00000000004041c8 <puts@plt>:
  4041c8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041cc:	ldr	x17, [x16, #3936]
  4041d0:	add	x16, x16, #0xf60
  4041d4:	br	x17

00000000004041d8 <sd_rtnl_message_new_addrlabel@plt>:
  4041d8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041dc:	ldr	x17, [x16, #3944]
  4041e0:	add	x16, x16, #0xf68
  4041e4:	br	x17

00000000004041e8 <table_set_sort@plt>:
  4041e8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041ec:	ldr	x17, [x16, #3952]
  4041f0:	add	x16, x16, #0xf70
  4041f4:	br	x17

00000000004041f8 <sd_rtnl_message_addrlabel_get_prefixlen@plt>:
  4041f8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4041fc:	ldr	x17, [x16, #3960]
  404200:	add	x16, x16, #0xf78
  404204:	br	x17

0000000000404208 <internal_hashmap_free@plt>:
  404208:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40420c:	ldr	x17, [x16, #3968]
  404210:	add	x16, x16, #0xf80
  404214:	br	x17

0000000000404218 <siphash24_compress@plt>:
  404218:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40421c:	ldr	x17, [x16, #3976]
  404220:	add	x16, x16, #0xf88
  404224:	br	x17

0000000000404228 <prioq_remove@plt>:
  404228:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40422c:	ldr	x17, [x16, #3984]
  404230:	add	x16, x16, #0xf90
  404234:	br	x17

0000000000404238 <internal_hashmap_remove_value@plt>:
  404238:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40423c:	ldr	x17, [x16, #3992]
  404240:	add	x16, x16, #0xf98
  404244:	br	x17

0000000000404248 <calloc@plt>:
  404248:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40424c:	ldr	x17, [x16, #4000]
  404250:	add	x16, x16, #0xfa0
  404254:	br	x17

0000000000404258 <memdup@plt>:
  404258:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40425c:	ldr	x17, [x16, #4008]
  404260:	add	x16, x16, #0xfa8
  404264:	br	x17

0000000000404268 <memchr@plt>:
  404268:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40426c:	ldr	x17, [x16, #4016]
  404270:	add	x16, x16, #0xfb0
  404274:	br	x17

0000000000404278 <cescape_length@plt>:
  404278:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40427c:	ldr	x17, [x16, #4024]
  404280:	add	x16, x16, #0xfb8
  404284:	br	x17

0000000000404288 <clock_boottime_or_monotonic@plt>:
  404288:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40428c:	ldr	x17, [x16, #4032]
  404290:	add	x16, x16, #0xfc0
  404294:	br	x17

0000000000404298 <triple_timestamp_by_clock@plt>:
  404298:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  40429c:	ldr	x17, [x16, #4040]
  4042a0:	add	x16, x16, #0xfc8
  4042a4:	br	x17

00000000004042a8 <now@plt>:
  4042a8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042ac:	ldr	x17, [x16, #4048]
  4042b0:	add	x16, x16, #0xfd0
  4042b4:	br	x17

00000000004042b8 <prioq_reshuffle@plt>:
  4042b8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042bc:	ldr	x17, [x16, #4056]
  4042c0:	add	x16, x16, #0xfd8
  4042c4:	br	x17

00000000004042c8 <log_assert_failed_return_realm@plt>:
  4042c8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042cc:	ldr	x17, [x16, #4064]
  4042d0:	add	x16, x16, #0xfe0
  4042d4:	br	x17

00000000004042d8 <hexmem@plt>:
  4042d8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042dc:	ldr	x17, [x16, #4072]
  4042e0:	add	x16, x16, #0xfe8
  4042e4:	br	x17

00000000004042e8 <memcpy@plt>:
  4042e8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042ec:	ldr	x17, [x16, #4080]
  4042f0:	add	x16, x16, #0xff0
  4042f4:	br	x17

00000000004042f8 <clock_supported@plt>:
  4042f8:	adrp	x16, 42f000 <clock_supported@plt+0x2ad08>
  4042fc:	ldr	x17, [x16, #4088]
  404300:	add	x16, x16, #0xff8
  404304:	br	x17

Disassembly of section .text:

0000000000404308 <.text>:
  404308:	mov	x29, #0x0                   	// #0
  40430c:	mov	x30, #0x0                   	// #0
  404310:	mov	x5, x0
  404314:	ldr	x1, [sp]
  404318:	add	x2, sp, #0x8
  40431c:	mov	x6, sp
  404320:	movz	x0, #0x0, lsl #48
  404324:	movk	x0, #0x0, lsl #32
  404328:	movk	x0, #0x40, lsl #16
  40432c:	movk	x0, #0x44d0
  404330:	movz	x3, #0x0, lsl #48
  404334:	movk	x3, #0x0, lsl #32
  404338:	movk	x3, #0x41, lsl #16
  40433c:	movk	x3, #0x1f40
  404340:	movz	x4, #0x0, lsl #48
  404344:	movk	x4, #0x0, lsl #32
  404348:	movk	x4, #0x41, lsl #16
  40434c:	movk	x4, #0x1fc0
  404350:	bl	4038b8 <__libc_start_main@plt>
  404354:	bl	4038c8 <abort@plt>
  404358:	adrp	x0, 42f000 <clock_supported@plt+0x2ad08>
  40435c:	ldr	x0, [x0, #2728]
  404360:	cbz	x0, 404368 <clock_supported@plt+0x70>
  404364:	b	4038d8 <__gmon_start__@plt>
  404368:	ret
  40436c:	stp	x29, x30, [sp, #-32]!
  404370:	mov	x29, sp
  404374:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  404378:	add	x0, x0, #0x0
  40437c:	str	x0, [sp, #24]
  404380:	ldr	x0, [sp, #24]
  404384:	str	x0, [sp, #24]
  404388:	ldr	x1, [sp, #24]
  40438c:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  404390:	add	x0, x0, #0x0
  404394:	cmp	x1, x0
  404398:	b.eq	4043d4 <clock_supported@plt+0xdc>  // b.none
  40439c:	adrp	x0, 411000 <clock_supported@plt+0xcd08>
  4043a0:	add	x0, x0, #0xfe0
  4043a4:	ldr	x0, [x0]
  4043a8:	str	x0, [sp, #16]
  4043ac:	ldr	x0, [sp, #16]
  4043b0:	str	x0, [sp, #16]
  4043b4:	ldr	x0, [sp, #16]
  4043b8:	cmp	x0, #0x0
  4043bc:	b.eq	4043d8 <clock_supported@plt+0xe0>  // b.none
  4043c0:	ldr	x1, [sp, #16]
  4043c4:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  4043c8:	add	x0, x0, #0x0
  4043cc:	blr	x1
  4043d0:	b	4043d8 <clock_supported@plt+0xe0>
  4043d4:	nop
  4043d8:	ldp	x29, x30, [sp], #32
  4043dc:	ret
  4043e0:	stp	x29, x30, [sp, #-48]!
  4043e4:	mov	x29, sp
  4043e8:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  4043ec:	add	x0, x0, #0x0
  4043f0:	str	x0, [sp, #40]
  4043f4:	ldr	x0, [sp, #40]
  4043f8:	str	x0, [sp, #40]
  4043fc:	ldr	x1, [sp, #40]
  404400:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  404404:	add	x0, x0, #0x0
  404408:	sub	x0, x1, x0
  40440c:	asr	x0, x0, #3
  404410:	lsr	x1, x0, #63
  404414:	add	x0, x1, x0
  404418:	asr	x0, x0, #1
  40441c:	str	x0, [sp, #32]
  404420:	ldr	x0, [sp, #32]
  404424:	cmp	x0, #0x0
  404428:	b.eq	404468 <clock_supported@plt+0x170>  // b.none
  40442c:	adrp	x0, 411000 <clock_supported@plt+0xcd08>
  404430:	add	x0, x0, #0xfe8
  404434:	ldr	x0, [x0]
  404438:	str	x0, [sp, #24]
  40443c:	ldr	x0, [sp, #24]
  404440:	str	x0, [sp, #24]
  404444:	ldr	x0, [sp, #24]
  404448:	cmp	x0, #0x0
  40444c:	b.eq	40446c <clock_supported@plt+0x174>  // b.none
  404450:	ldr	x2, [sp, #24]
  404454:	ldr	x1, [sp, #32]
  404458:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  40445c:	add	x0, x0, #0x0
  404460:	blr	x2
  404464:	b	40446c <clock_supported@plt+0x174>
  404468:	nop
  40446c:	ldp	x29, x30, [sp], #48
  404470:	ret
  404474:	stp	x29, x30, [sp, #-16]!
  404478:	mov	x29, sp
  40447c:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  404480:	add	x0, x0, #0x38
  404484:	ldrb	w0, [x0]
  404488:	and	x0, x0, #0xff
  40448c:	cmp	x0, #0x0
  404490:	b.ne	4044ac <clock_supported@plt+0x1b4>  // b.any
  404494:	bl	40436c <clock_supported@plt+0x74>
  404498:	adrp	x0, 430000 <clock_supported@plt+0x2bd08>
  40449c:	add	x0, x0, #0x38
  4044a0:	mov	w1, #0x1                   	// #1
  4044a4:	strb	w1, [x0]
  4044a8:	b	4044b0 <clock_supported@plt+0x1b8>
  4044ac:	nop
  4044b0:	ldp	x29, x30, [sp], #16
  4044b4:	ret
  4044b8:	stp	x29, x30, [sp, #-16]!
  4044bc:	mov	x29, sp
  4044c0:	bl	4043e0 <clock_supported@plt+0xe8>
  4044c4:	nop
  4044c8:	ldp	x29, x30, [sp], #16
  4044cc:	ret
  4044d0:	sub	sp, sp, #0x30
  4044d4:	stp	x29, x30, [sp, #32]
  4044d8:	add	x29, sp, #0x20
  4044dc:	mov	w8, wzr
  4044e0:	mov	w9, #0x1                   	// #1
  4044e4:	stur	wzr, [x29, #-4]
  4044e8:	stur	w0, [x29, #-8]
  4044ec:	str	x1, [sp, #16]
  4044f0:	ldur	w0, [x29, #-8]
  4044f4:	ldr	x1, [sp, #16]
  4044f8:	str	w8, [sp, #8]
  4044fc:	str	w9, [sp, #4]
  404500:	bl	404548 <clock_supported@plt+0x250>
  404504:	ldur	w0, [x29, #-8]
  404508:	ldr	x1, [sp, #16]
  40450c:	bl	40457c <clock_supported@plt+0x284>
  404510:	str	w0, [sp, #12]
  404514:	bl	4038e8 <ask_password_agent_close@plt>
  404518:	bl	4038f8 <polkit_agent_close@plt>
  40451c:	bl	403908 <pager_close@plt>
  404520:	bl	403918 <mac_selinux_finish@plt>
  404524:	bl	404604 <clock_supported@plt+0x30c>
  404528:	ldr	w8, [sp, #12]
  40452c:	cmp	w8, #0x0
  404530:	ldr	w8, [sp, #4]
  404534:	ldr	w9, [sp, #8]
  404538:	csel	w0, w8, w9, lt  // lt = tstop
  40453c:	ldp	x29, x30, [sp, #32]
  404540:	add	sp, sp, #0x30
  404544:	ret
  404548:	sub	sp, sp, #0x10
  40454c:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404550:	add	x8, x8, #0x48
  404554:	adrp	x9, 430000 <clock_supported@plt+0x2bd08>
  404558:	add	x9, x9, #0x50
  40455c:	str	w0, [sp, #12]
  404560:	str	x1, [sp]
  404564:	ldr	w10, [sp, #12]
  404568:	str	w10, [x8]
  40456c:	ldr	x8, [sp]
  404570:	str	x8, [x9]
  404574:	add	sp, sp, #0x10
  404578:	ret
  40457c:	sub	sp, sp, #0x30
  404580:	stp	x29, x30, [sp, #32]
  404584:	add	x29, sp, #0x20
  404588:	mov	w8, wzr
  40458c:	stur	w0, [x29, #-8]
  404590:	str	x1, [sp, #16]
  404594:	mov	w9, #0x1                   	// #1
  404598:	and	w0, w9, #0x1
  40459c:	str	w8, [sp, #8]
  4045a0:	bl	403928 <log_show_color@plt>
  4045a4:	ldr	w0, [sp, #8]
  4045a8:	bl	403938 <log_parse_environment_realm@plt>
  4045ac:	bl	403948 <log_open@plt>
  4045b0:	ldur	w8, [x29, #-8]
  4045b4:	ldr	x1, [sp, #16]
  4045b8:	mov	w0, w8
  4045bc:	bl	404684 <clock_supported@plt+0x38c>
  4045c0:	str	w0, [sp, #12]
  4045c4:	ldr	w8, [sp, #12]
  4045c8:	cmp	w8, #0x0
  4045cc:	cset	w8, gt
  4045d0:	tbnz	w8, #0, 4045e0 <clock_supported@plt+0x2e8>
  4045d4:	ldr	w8, [sp, #12]
  4045d8:	stur	w8, [x29, #-4]
  4045dc:	b	4045f4 <clock_supported@plt+0x2fc>
  4045e0:	bl	4048a8 <clock_supported@plt+0x5b0>
  4045e4:	ldur	w0, [x29, #-8]
  4045e8:	ldr	x1, [sp, #16]
  4045ec:	bl	4048f4 <clock_supported@plt+0x5fc>
  4045f0:	stur	w0, [x29, #-4]
  4045f4:	ldur	w0, [x29, #-4]
  4045f8:	ldp	x29, x30, [sp, #32]
  4045fc:	add	sp, sp, #0x30
  404600:	ret
  404604:	sub	sp, sp, #0x20
  404608:	stp	x29, x30, [sp, #16]
  40460c:	add	x29, sp, #0x10
  404610:	adrp	x8, 42f000 <clock_supported@plt+0x2ad08>
  404614:	ldr	x8, [x8, #2736]
  404618:	str	x8, [sp]
  40461c:	cbnz	x8, 404624 <clock_supported@plt+0x32c>
  404620:	b	404678 <clock_supported@plt+0x380>
  404624:	ldr	x0, [sp]
  404628:	mov	x1, #0x8                   	// #8
  40462c:	bl	40e018 <clock_supported@plt+0x9d20>
  404630:	str	x0, [sp, #8]
  404634:	ldr	x8, [sp, #8]
  404638:	adrp	x9, 42f000 <clock_supported@plt+0x2ad08>
  40463c:	ldr	x9, [x9, #2744]
  404640:	cmp	x8, x9
  404644:	b.cs	404678 <clock_supported@plt+0x380>  // b.hs, b.nlast
  404648:	ldr	x8, [sp, #8]
  40464c:	ldr	x8, [x8, #8]
  404650:	ldr	x9, [sp, #8]
  404654:	ldr	x0, [x9]
  404658:	blr	x8
  40465c:	ldr	x8, [sp, #8]
  404660:	add	x8, x8, #0x10
  404664:	mov	x0, x8
  404668:	mov	x1, #0x8                   	// #8
  40466c:	bl	40e018 <clock_supported@plt+0x9d20>
  404670:	str	x0, [sp, #8]
  404674:	b	404634 <clock_supported@plt+0x33c>
  404678:	ldp	x29, x30, [sp, #16]
  40467c:	add	sp, sp, #0x20
  404680:	ret
  404684:	sub	sp, sp, #0x40
  404688:	stp	x29, x30, [sp, #48]
  40468c:	add	x29, sp, #0x30
  404690:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  404694:	add	x8, x8, #0x31c
  404698:	add	x8, x8, #0x3
  40469c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  4046a0:	add	x9, x9, #0x338
  4046a4:	stur	w0, [x29, #-8]
  4046a8:	stur	x1, [x29, #-16]
  4046ac:	str	x8, [sp, #16]
  4046b0:	str	x9, [sp, #8]
  4046b4:	ldur	w8, [x29, #-8]
  4046b8:	cmp	w8, #0x0
  4046bc:	cset	w8, ge  // ge = tcont
  4046c0:	mov	w9, #0x1                   	// #1
  4046c4:	eor	w8, w8, #0x1
  4046c8:	eor	w8, w8, w9
  4046cc:	eor	w8, w8, w9
  4046d0:	and	w8, w8, #0x1
  4046d4:	mov	w0, w8
  4046d8:	sxtw	x10, w0
  4046dc:	cbz	x10, 404700 <clock_supported@plt+0x408>
  4046e0:	mov	w8, wzr
  4046e4:	mov	w0, w8
  4046e8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4046ec:	add	x1, x1, #0x312
  4046f0:	ldr	x2, [sp, #16]
  4046f4:	mov	w3, #0x792                 	// #1938
  4046f8:	ldr	x4, [sp, #8]
  4046fc:	bl	403958 <log_assert_failed_realm@plt>
  404700:	ldur	x8, [x29, #-16]
  404704:	cmp	x8, #0x0
  404708:	cset	w9, ne  // ne = any
  40470c:	mov	w10, #0x1                   	// #1
  404710:	eor	w9, w9, #0x1
  404714:	eor	w9, w9, w10
  404718:	eor	w9, w9, w10
  40471c:	and	w9, w9, #0x1
  404720:	mov	w0, w9
  404724:	sxtw	x8, w0
  404728:	cbz	x8, 40474c <clock_supported@plt+0x454>
  40472c:	mov	w8, wzr
  404730:	mov	w0, w8
  404734:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  404738:	add	x1, x1, #0x355
  40473c:	ldr	x2, [sp, #16]
  404740:	mov	w3, #0x793                 	// #1939
  404744:	ldr	x4, [sp, #8]
  404748:	bl	403958 <log_assert_failed_realm@plt>
  40474c:	ldur	w0, [x29, #-8]
  404750:	ldur	x1, [x29, #-16]
  404754:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  404758:	add	x2, x2, #0x35a
  40475c:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  404760:	add	x3, x3, #0x0
  404764:	mov	x8, xzr
  404768:	mov	x4, x8
  40476c:	bl	403968 <getopt_long@plt>
  404770:	stur	w0, [x29, #-20]
  404774:	cmp	w0, #0x0
  404778:	cset	w9, lt  // lt = tstop
  40477c:	tbnz	w9, #0, 404890 <clock_supported@plt+0x598>
  404780:	ldur	w8, [x29, #-20]
  404784:	cmp	w8, #0x3f
  404788:	str	w8, [sp, #4]
  40478c:	b.eq	404860 <clock_supported@plt+0x568>  // b.none
  404790:	b	404794 <clock_supported@plt+0x49c>
  404794:	ldr	w8, [sp, #4]
  404798:	cmp	w8, #0x61
  40479c:	b.eq	404838 <clock_supported@plt+0x540>  // b.none
  4047a0:	b	4047a4 <clock_supported@plt+0x4ac>
  4047a4:	ldr	w8, [sp, #4]
  4047a8:	cmp	w8, #0x68
  4047ac:	b.eq	4047f4 <clock_supported@plt+0x4fc>  // b.none
  4047b0:	b	4047b4 <clock_supported@plt+0x4bc>
  4047b4:	ldr	w8, [sp, #4]
  4047b8:	cmp	w8, #0x73
  4047bc:	b.eq	40484c <clock_supported@plt+0x554>  // b.none
  4047c0:	b	4047c4 <clock_supported@plt+0x4cc>
  4047c4:	ldr	w8, [sp, #4]
  4047c8:	cmp	w8, #0x100
  4047cc:	b.eq	404800 <clock_supported@plt+0x508>  // b.none
  4047d0:	b	4047d4 <clock_supported@plt+0x4dc>
  4047d4:	ldr	w8, [sp, #4]
  4047d8:	cmp	w8, #0x101
  4047dc:	b.eq	40480c <clock_supported@plt+0x514>  // b.none
  4047e0:	b	4047e4 <clock_supported@plt+0x4ec>
  4047e4:	ldr	w8, [sp, #4]
  4047e8:	cmp	w8, #0x102
  4047ec:	b.eq	404824 <clock_supported@plt+0x52c>  // b.none
  4047f0:	b	40486c <clock_supported@plt+0x574>
  4047f4:	bl	404930 <clock_supported@plt+0x638>
  4047f8:	stur	w0, [x29, #-4]
  4047fc:	b	404898 <clock_supported@plt+0x5a0>
  404800:	bl	403978 <version@plt>
  404804:	stur	w0, [x29, #-4]
  404808:	b	404898 <clock_supported@plt+0x5a0>
  40480c:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404810:	add	x8, x8, #0x3c
  404814:	ldr	w9, [x8]
  404818:	orr	w9, w9, #0x1
  40481c:	str	w9, [x8]
  404820:	b	40488c <clock_supported@plt+0x594>
  404824:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404828:	add	x8, x8, #0x0
  40482c:	mov	w9, #0x0                   	// #0
  404830:	strb	w9, [x8]
  404834:	b	40488c <clock_supported@plt+0x594>
  404838:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  40483c:	add	x8, x8, #0x40
  404840:	mov	w9, #0x1                   	// #1
  404844:	strb	w9, [x8]
  404848:	b	40488c <clock_supported@plt+0x594>
  40484c:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404850:	add	x8, x8, #0x41
  404854:	mov	w9, #0x1                   	// #1
  404858:	strb	w9, [x8]
  40485c:	b	40488c <clock_supported@plt+0x594>
  404860:	mov	w8, #0xffffffea            	// #-22
  404864:	stur	w8, [x29, #-4]
  404868:	b	404898 <clock_supported@plt+0x5a0>
  40486c:	mov	w8, wzr
  404870:	mov	w0, w8
  404874:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  404878:	add	x1, x1, #0x35e
  40487c:	ldr	x2, [sp, #16]
  404880:	mov	w3, #0x7b3                 	// #1971
  404884:	ldr	x4, [sp, #8]
  404888:	bl	403988 <log_assert_failed_unreachable_realm@plt>
  40488c:	b	40474c <clock_supported@plt+0x454>
  404890:	mov	w8, #0x1                   	// #1
  404894:	stur	w8, [x29, #-4]
  404898:	ldur	w0, [x29, #-4]
  40489c:	ldp	x29, x30, [sp, #48]
  4048a0:	add	sp, sp, #0x40
  4048a4:	ret
  4048a8:	stp	x29, x30, [sp, #-16]!
  4048ac:	mov	x29, sp
  4048b0:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  4048b4:	add	x0, x0, #0x6cd
  4048b8:	mov	w8, wzr
  4048bc:	mov	w1, w8
  4048c0:	bl	403998 <access@plt>
  4048c4:	cmp	w0, #0x0
  4048c8:	cset	w8, lt  // lt = tstop
  4048cc:	tbnz	w8, #0, 4048d4 <clock_supported@plt+0x5dc>
  4048d0:	b	4048ec <clock_supported@plt+0x5f4>
  4048d4:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  4048d8:	add	x8, x8, #0x58
  4048dc:	ldr	x0, [x8]
  4048e0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4048e4:	add	x1, x1, #0x6e6
  4048e8:	bl	4039a8 <fprintf@plt>
  4048ec:	ldp	x29, x30, [sp], #16
  4048f0:	ret
  4048f4:	sub	sp, sp, #0x20
  4048f8:	stp	x29, x30, [sp, #16]
  4048fc:	add	x29, sp, #0x10
  404900:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  404904:	add	x2, x2, #0xe0
  404908:	mov	x8, xzr
  40490c:	stur	w0, [x29, #-4]
  404910:	str	x1, [sp]
  404914:	ldur	w0, [x29, #-4]
  404918:	ldr	x1, [sp]
  40491c:	mov	x3, x8
  404920:	bl	4039b8 <dispatch_verb@plt>
  404924:	ldp	x29, x30, [sp, #16]
  404928:	add	sp, sp, #0x20
  40492c:	ret
  404930:	sub	sp, sp, #0x50
  404934:	stp	x29, x30, [sp, #64]
  404938:	add	x29, sp, #0x40
  40493c:	mov	x8, xzr
  404940:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  404944:	add	x0, x0, #0x36f
  404948:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40494c:	add	x1, x1, #0x37a
  404950:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  404954:	add	x9, x9, #0x31c
  404958:	add	x9, x9, #0x3
  40495c:	sub	x2, x29, #0x10
  404960:	stur	x8, [x29, #-16]
  404964:	str	x9, [sp, #32]
  404968:	bl	4039c8 <terminal_urlify_man@plt>
  40496c:	stur	w0, [x29, #-20]
  404970:	ldur	w10, [x29, #-20]
  404974:	cmp	w10, #0x0
  404978:	cset	w10, ge  // ge = tcont
  40497c:	tbnz	w10, #0, 4049ac <clock_supported@plt+0x6b4>
  404980:	mov	w8, wzr
  404984:	mov	w0, w8
  404988:	ldr	x1, [sp, #32]
  40498c:	mov	w2, #0x760                 	// #1888
  404990:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  404994:	add	x3, x3, #0x2e8
  404998:	bl	4039d8 <log_oom_internal@plt>
  40499c:	stur	w0, [x29, #-4]
  4049a0:	mov	w8, #0x1                   	// #1
  4049a4:	stur	w8, [x29, #-24]
  4049a8:	b	4049f8 <clock_supported@plt+0x700>
  4049ac:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  4049b0:	add	x8, x8, #0x60
  4049b4:	ldr	x1, [x8]
  4049b8:	str	x1, [sp, #24]
  4049bc:	bl	404a38 <clock_supported@plt+0x740>
  4049c0:	str	x0, [sp, #16]
  4049c4:	bl	404a7c <clock_supported@plt+0x784>
  4049c8:	ldur	x4, [x29, #-16]
  4049cc:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  4049d0:	add	x8, x8, #0x37c
  4049d4:	str	x0, [sp, #8]
  4049d8:	mov	x0, x8
  4049dc:	ldr	x1, [sp, #24]
  4049e0:	ldr	x2, [sp, #16]
  4049e4:	ldr	x3, [sp, #8]
  4049e8:	bl	4039e8 <printf@plt>
  4049ec:	stur	wzr, [x29, #-4]
  4049f0:	mov	w9, #0x1                   	// #1
  4049f4:	stur	w9, [x29, #-24]
  4049f8:	sub	x0, x29, #0x10
  4049fc:	bl	404a10 <clock_supported@plt+0x718>
  404a00:	ldur	w0, [x29, #-4]
  404a04:	ldp	x29, x30, [sp, #64]
  404a08:	add	sp, sp, #0x50
  404a0c:	ret
  404a10:	sub	sp, sp, #0x20
  404a14:	stp	x29, x30, [sp, #16]
  404a18:	add	x29, sp, #0x10
  404a1c:	str	x0, [sp, #8]
  404a20:	ldr	x8, [sp, #8]
  404a24:	ldr	x0, [x8]
  404a28:	bl	4039f8 <free@plt>
  404a2c:	ldp	x29, x30, [sp, #16]
  404a30:	add	sp, sp, #0x20
  404a34:	ret
  404a38:	sub	sp, sp, #0x20
  404a3c:	stp	x29, x30, [sp, #16]
  404a40:	add	x29, sp, #0x10
  404a44:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  404a48:	add	x8, x8, #0x6bd
  404a4c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  404a50:	add	x9, x9, #0x6c7
  404a54:	str	x8, [sp, #8]
  404a58:	str	x9, [sp]
  404a5c:	bl	403a08 <colors_enabled@plt>
  404a60:	tst	w0, #0x1
  404a64:	ldr	x8, [sp, #8]
  404a68:	ldr	x9, [sp]
  404a6c:	csel	x0, x8, x9, ne  // ne = any
  404a70:	ldp	x29, x30, [sp, #16]
  404a74:	add	sp, sp, #0x20
  404a78:	ret
  404a7c:	sub	sp, sp, #0x20
  404a80:	stp	x29, x30, [sp, #16]
  404a84:	add	x29, sp, #0x10
  404a88:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  404a8c:	add	x8, x8, #0x6c8
  404a90:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  404a94:	add	x9, x9, #0x6c7
  404a98:	str	x8, [sp, #8]
  404a9c:	str	x9, [sp]
  404aa0:	bl	403a08 <colors_enabled@plt>
  404aa4:	tst	w0, #0x1
  404aa8:	ldr	x8, [sp, #8]
  404aac:	ldr	x9, [sp]
  404ab0:	csel	x0, x8, x9, ne  // ne = any
  404ab4:	ldp	x29, x30, [sp, #16]
  404ab8:	add	sp, sp, #0x20
  404abc:	ret
  404ac0:	sub	sp, sp, #0x190
  404ac4:	stp	x29, x30, [sp, #368]
  404ac8:	str	x28, [sp, #384]
  404acc:	add	x29, sp, #0x170
  404ad0:	mov	x8, xzr
  404ad4:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  404ad8:	add	x9, x9, #0x31c
  404adc:	add	x9, x9, #0x3
  404ae0:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  404ae4:	add	x10, x10, #0x764
  404ae8:	sub	x11, x29, #0x20
  404aec:	stur	w0, [x29, #-8]
  404af0:	stur	x1, [x29, #-16]
  404af4:	stur	x2, [x29, #-24]
  404af8:	stur	x8, [x29, #-32]
  404afc:	stur	x8, [x29, #-40]
  404b00:	stur	x8, [x29, #-48]
  404b04:	mov	x0, x11
  404b08:	stur	x9, [x29, #-168]
  404b0c:	stur	x10, [x29, #-176]
  404b10:	bl	403a18 <sd_netlink_open@plt>
  404b14:	stur	w0, [x29, #-68]
  404b18:	ldur	w12, [x29, #-68]
  404b1c:	cmp	w12, #0x0
  404b20:	cset	w12, ge  // ge = tcont
  404b24:	tbnz	w12, #0, 404bb4 <clock_supported@plt+0x8bc>
  404b28:	mov	w8, #0x3                   	// #3
  404b2c:	stur	w8, [x29, #-72]
  404b30:	ldur	w8, [x29, #-68]
  404b34:	stur	w8, [x29, #-76]
  404b38:	stur	wzr, [x29, #-80]
  404b3c:	ldur	w0, [x29, #-80]
  404b40:	bl	403a28 <log_get_max_level_realm@plt>
  404b44:	ldur	w8, [x29, #-72]
  404b48:	and	w8, w8, #0x7
  404b4c:	cmp	w0, w8
  404b50:	b.lt	404b84 <clock_supported@plt+0x88c>  // b.tstop
  404b54:	ldur	w8, [x29, #-80]
  404b58:	ldur	w9, [x29, #-72]
  404b5c:	orr	w0, w9, w8, lsl #10
  404b60:	ldur	w1, [x29, #-76]
  404b64:	ldur	x2, [x29, #-168]
  404b68:	mov	w3, #0x1e1                 	// #481
  404b6c:	ldur	x4, [x29, #-176]
  404b70:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  404b74:	add	x5, x5, #0x76f
  404b78:	bl	403a38 <log_internal_realm@plt>
  404b7c:	stur	w0, [x29, #-180]
  404b80:	b	404b98 <clock_supported@plt+0x8a0>
  404b84:	ldur	w0, [x29, #-76]
  404b88:	bl	403a48 <abs@plt>
  404b8c:	mov	w8, wzr
  404b90:	subs	w8, w8, w0, uxtb
  404b94:	stur	w8, [x29, #-180]
  404b98:	ldur	w8, [x29, #-180]
  404b9c:	stur	w8, [x29, #-84]
  404ba0:	ldur	w8, [x29, #-84]
  404ba4:	stur	w8, [x29, #-4]
  404ba8:	mov	w8, #0x1                   	// #1
  404bac:	stur	w8, [x29, #-88]
  404bb0:	b	405130 <clock_supported@plt+0xe38>
  404bb4:	ldur	x1, [x29, #-32]
  404bb8:	ldur	w8, [x29, #-8]
  404bbc:	cmp	w8, #0x1
  404bc0:	str	x1, [sp, #176]
  404bc4:	b.le	404bd8 <clock_supported@plt+0x8e0>
  404bc8:	ldur	x8, [x29, #-16]
  404bcc:	add	x8, x8, #0x8
  404bd0:	str	x8, [sp, #168]
  404bd4:	b	404be0 <clock_supported@plt+0x8e8>
  404bd8:	mov	x8, xzr
  404bdc:	str	x8, [sp, #168]
  404be0:	ldr	x8, [sp, #168]
  404be4:	mov	x9, xzr
  404be8:	mov	x0, x9
  404bec:	ldr	x1, [sp, #176]
  404bf0:	mov	x2, x8
  404bf4:	sub	x3, x29, #0x28
  404bf8:	bl	406d64 <clock_supported@plt+0x2a6c>
  404bfc:	stur	w0, [x29, #-60]
  404c00:	ldur	w10, [x29, #-60]
  404c04:	cmp	w10, #0x0
  404c08:	cset	w10, ge  // ge = tcont
  404c0c:	tbnz	w10, #0, 404c24 <clock_supported@plt+0x92c>
  404c10:	ldur	w8, [x29, #-60]
  404c14:	stur	w8, [x29, #-4]
  404c18:	mov	w8, #0x1                   	// #1
  404c1c:	stur	w8, [x29, #-88]
  404c20:	b	405130 <clock_supported@plt+0xe38>
  404c24:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404c28:	add	x8, x8, #0x3c
  404c2c:	ldr	w0, [x8]
  404c30:	bl	403a58 <pager_open@plt>
  404c34:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  404c38:	add	x8, x8, #0x790
  404c3c:	mov	x0, x8
  404c40:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  404c44:	add	x1, x1, #0x794
  404c48:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  404c4c:	add	x2, x2, #0x799
  404c50:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  404c54:	add	x3, x3, #0x79e
  404c58:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  404c5c:	add	x4, x4, #0x7aa
  404c60:	mov	x8, xzr
  404c64:	mov	x5, x8
  404c68:	bl	403a68 <table_new_internal@plt>
  404c6c:	stur	x0, [x29, #-48]
  404c70:	ldur	x8, [x29, #-48]
  404c74:	cbnz	x8, 404ca0 <clock_supported@plt+0x9a8>
  404c78:	mov	w8, wzr
  404c7c:	mov	w0, w8
  404c80:	ldur	x1, [x29, #-168]
  404c84:	mov	w2, #0x1eb                 	// #491
  404c88:	ldur	x3, [x29, #-176]
  404c8c:	bl	4039d8 <log_oom_internal@plt>
  404c90:	stur	w0, [x29, #-4]
  404c94:	mov	w8, #0x1                   	// #1
  404c98:	stur	w8, [x29, #-88]
  404c9c:	b	405130 <clock_supported@plt+0xe38>
  404ca0:	ldur	x0, [x29, #-48]
  404ca4:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  404ca8:	add	x8, x8, #0x0
  404cac:	ldrb	w9, [x8]
  404cb0:	and	w1, w9, #0x1
  404cb4:	bl	403a78 <table_set_header@plt>
  404cb8:	ldur	x0, [x29, #-48]
  404cbc:	mov	x8, xzr
  404cc0:	mov	x1, x8
  404cc4:	mov	x2, x8
  404cc8:	bl	403a88 <table_get_cell@plt>
  404ccc:	stur	x0, [x29, #-56]
  404cd0:	cmp	x0, #0x0
  404cd4:	cset	w9, ne  // ne = any
  404cd8:	mov	w10, #0x1                   	// #1
  404cdc:	eor	w9, w9, #0x1
  404ce0:	eor	w9, w9, w10
  404ce4:	eor	w9, w9, w10
  404ce8:	and	w9, w9, #0x1
  404cec:	mov	w0, w9
  404cf0:	sxtw	x8, w0
  404cf4:	cbz	x8, 404d1c <clock_supported@plt+0xa24>
  404cf8:	mov	w8, wzr
  404cfc:	mov	w0, w8
  404d00:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  404d04:	add	x1, x1, #0x7b0
  404d08:	ldur	x2, [x29, #-168]
  404d0c:	mov	w3, #0x1ef                 	// #495
  404d10:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  404d14:	add	x4, x4, #0x7d3
  404d18:	bl	403958 <log_assert_failed_realm@plt>
  404d1c:	ldur	x0, [x29, #-48]
  404d20:	ldur	x1, [x29, #-56]
  404d24:	mov	x2, #0x3                   	// #3
  404d28:	bl	403a98 <table_set_minimum_width@plt>
  404d2c:	ldur	x8, [x29, #-48]
  404d30:	ldur	x1, [x29, #-56]
  404d34:	mov	x0, x8
  404d38:	mov	w9, wzr
  404d3c:	mov	w2, w9
  404d40:	bl	403aa8 <table_set_weight@plt>
  404d44:	ldur	x8, [x29, #-48]
  404d48:	ldur	x1, [x29, #-56]
  404d4c:	mov	x0, x8
  404d50:	mov	w9, #0x64                  	// #100
  404d54:	mov	w2, w9
  404d58:	str	w9, [sp, #164]
  404d5c:	bl	403ab8 <table_set_ellipsize_percent@plt>
  404d60:	ldur	x8, [x29, #-48]
  404d64:	ldur	x1, [x29, #-56]
  404d68:	mov	x0, x8
  404d6c:	ldr	w2, [sp, #164]
  404d70:	bl	403ac8 <table_set_align_percent@plt>
  404d74:	ldur	x0, [x29, #-48]
  404d78:	mov	x8, xzr
  404d7c:	mov	x1, x8
  404d80:	mov	x2, #0x1                   	// #1
  404d84:	bl	403a88 <table_get_cell@plt>
  404d88:	stur	x0, [x29, #-56]
  404d8c:	cmp	x0, #0x0
  404d90:	cset	w9, ne  // ne = any
  404d94:	mov	w10, #0x1                   	// #1
  404d98:	eor	w9, w9, #0x1
  404d9c:	eor	w9, w9, w10
  404da0:	eor	w9, w9, w10
  404da4:	and	w9, w9, #0x1
  404da8:	mov	w0, w9
  404dac:	sxtw	x8, w0
  404db0:	cbz	x8, 404dd8 <clock_supported@plt+0xae0>
  404db4:	mov	w8, wzr
  404db8:	mov	w0, w8
  404dbc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  404dc0:	add	x1, x1, #0x7f8
  404dc4:	ldur	x2, [x29, #-168]
  404dc8:	mov	w3, #0x1f5                 	// #501
  404dcc:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  404dd0:	add	x4, x4, #0x7d3
  404dd4:	bl	403958 <log_assert_failed_realm@plt>
  404dd8:	ldur	x0, [x29, #-48]
  404ddc:	ldur	x1, [x29, #-56]
  404de0:	mov	w2, #0x64                  	// #100
  404de4:	bl	403ab8 <table_set_ellipsize_percent@plt>
  404de8:	stur	wzr, [x29, #-64]
  404dec:	ldur	w8, [x29, #-64]
  404df0:	ldur	w9, [x29, #-60]
  404df4:	cmp	w8, w9
  404df8:	b.ge	405050 <clock_supported@plt+0xd58>  // b.tcont
  404dfc:	sub	x1, x29, #0x60
  404e00:	mov	x8, xzr
  404e04:	stur	x8, [x29, #-96]
  404e08:	sub	x9, x29, #0x68
  404e0c:	stur	x8, [x29, #-104]
  404e10:	stur	x8, [x29, #-144]
  404e14:	ldur	x8, [x29, #-40]
  404e18:	ldursw	x10, [x29, #-64]
  404e1c:	mov	x11, #0x1c8                 	// #456
  404e20:	mul	x10, x11, x10
  404e24:	add	x8, x8, x10
  404e28:	ldr	w0, [x8, #96]
  404e2c:	str	x1, [sp, #152]
  404e30:	mov	x1, x9
  404e34:	str	x11, [sp, #144]
  404e38:	bl	403ad8 <sd_network_link_get_operational_state@plt>
  404e3c:	ldur	x8, [x29, #-40]
  404e40:	ldursw	x9, [x29, #-64]
  404e44:	ldr	x10, [sp, #144]
  404e48:	mul	x9, x10, x9
  404e4c:	add	x8, x8, x9
  404e50:	ldur	x1, [x29, #-104]
  404e54:	mov	x0, x8
  404e58:	sub	x2, x29, #0x70
  404e5c:	sub	x3, x29, #0x78
  404e60:	bl	407204 <clock_supported@plt+0x2f0c>
  404e64:	ldur	x8, [x29, #-40]
  404e68:	ldursw	x9, [x29, #-64]
  404e6c:	ldr	x10, [sp, #144]
  404e70:	mul	x9, x10, x9
  404e74:	add	x8, x8, x9
  404e78:	ldr	w0, [x8, #96]
  404e7c:	ldr	x1, [sp, #152]
  404e80:	bl	403ae8 <sd_network_link_get_setup_state@plt>
  404e84:	stur	w0, [x29, #-68]
  404e88:	ldur	w12, [x29, #-68]
  404e8c:	mov	w13, #0xffffffc3            	// #-61
  404e90:	cmp	w12, w13
  404e94:	b.ne	404ea8 <clock_supported@plt+0xbb0>  // b.any
  404e98:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  404e9c:	add	x0, x0, #0x81b
  404ea0:	bl	403af8 <strdup@plt>
  404ea4:	stur	x0, [x29, #-96]
  404ea8:	ldur	x0, [x29, #-96]
  404eac:	sub	x1, x29, #0x80
  404eb0:	sub	x2, x29, #0x88
  404eb4:	bl	4073dc <clock_supported@plt+0x30e4>
  404eb8:	ldur	x8, [x29, #-40]
  404ebc:	ldursw	x9, [x29, #-64]
  404ec0:	mov	x10, #0x1c8                 	// #456
  404ec4:	mul	x9, x10, x9
  404ec8:	add	x8, x8, x9
  404ecc:	ldrh	w0, [x8, #100]
  404ed0:	ldur	x8, [x29, #-40]
  404ed4:	ldursw	x9, [x29, #-64]
  404ed8:	mul	x9, x10, x9
  404edc:	add	x8, x8, x9
  404ee0:	ldr	x1, [x8, #88]
  404ee4:	str	x10, [sp, #136]
  404ee8:	bl	4075b4 <clock_supported@plt+0x32bc>
  404eec:	stur	x0, [x29, #-144]
  404ef0:	ldur	x0, [x29, #-48]
  404ef4:	ldur	x8, [x29, #-40]
  404ef8:	ldursw	x9, [x29, #-64]
  404efc:	ldr	x10, [sp, #136]
  404f00:	mul	x9, x10, x9
  404f04:	add	x8, x8, x9
  404f08:	ldr	w2, [x8, #96]
  404f0c:	ldur	x8, [x29, #-40]
  404f10:	ldursw	x9, [x29, #-64]
  404f14:	mul	x9, x10, x9
  404f18:	add	x4, x8, x9
  404f1c:	ldur	x8, [x29, #-144]
  404f20:	str	x0, [sp, #128]
  404f24:	mov	x0, x8
  404f28:	str	w2, [sp, #124]
  404f2c:	str	x4, [sp, #112]
  404f30:	bl	407664 <clock_supported@plt+0x336c>
  404f34:	ldur	x8, [x29, #-104]
  404f38:	str	x0, [sp, #104]
  404f3c:	mov	x0, x8
  404f40:	bl	407664 <clock_supported@plt+0x336c>
  404f44:	ldur	x8, [x29, #-112]
  404f48:	ldur	x9, [x29, #-96]
  404f4c:	str	x0, [sp, #96]
  404f50:	mov	x0, x9
  404f54:	str	x8, [sp, #88]
  404f58:	bl	407664 <clock_supported@plt+0x336c>
  404f5c:	ldur	x8, [x29, #-128]
  404f60:	ldr	x9, [sp, #128]
  404f64:	str	x0, [sp, #80]
  404f68:	mov	x0, x9
  404f6c:	mov	w1, #0xa                   	// #10
  404f70:	ldr	w2, [sp, #124]
  404f74:	mov	w11, #0x1                   	// #1
  404f78:	mov	w3, w11
  404f7c:	ldr	x4, [sp, #112]
  404f80:	mov	w5, w11
  404f84:	ldr	x6, [sp, #104]
  404f88:	mov	w7, w11
  404f8c:	mov	x10, sp
  404f90:	ldr	x12, [sp, #96]
  404f94:	str	x12, [x10]
  404f98:	mov	x10, sp
  404f9c:	mov	w13, #0x1e                  	// #30
  404fa0:	str	w13, [x10, #8]
  404fa4:	mov	x10, sp
  404fa8:	ldr	x14, [sp, #88]
  404fac:	str	x14, [x10, #16]
  404fb0:	mov	x10, sp
  404fb4:	str	w11, [x10, #24]
  404fb8:	mov	x10, sp
  404fbc:	ldr	x15, [sp, #80]
  404fc0:	str	x15, [x10, #32]
  404fc4:	mov	x10, sp
  404fc8:	str	w13, [x10, #40]
  404fcc:	mov	x10, sp
  404fd0:	str	x8, [x10, #48]
  404fd4:	mov	x8, sp
  404fd8:	mov	w11, #0x18                  	// #24
  404fdc:	str	w11, [x8, #56]
  404fe0:	bl	403b08 <table_add_many_internal@plt>
  404fe4:	stur	w0, [x29, #-68]
  404fe8:	ldur	w11, [x29, #-68]
  404fec:	cmp	w11, #0x0
  404ff0:	cset	w11, ge  // ge = tcont
  404ff4:	tbnz	w11, #0, 40500c <clock_supported@plt+0xd14>
  404ff8:	ldur	w8, [x29, #-68]
  404ffc:	stur	w8, [x29, #-4]
  405000:	mov	w8, #0x1                   	// #1
  405004:	stur	w8, [x29, #-88]
  405008:	b	405010 <clock_supported@plt+0xd18>
  40500c:	stur	wzr, [x29, #-88]
  405010:	sub	x0, x29, #0x90
  405014:	bl	404a10 <clock_supported@plt+0x718>
  405018:	sub	x0, x29, #0x68
  40501c:	bl	404a10 <clock_supported@plt+0x718>
  405020:	sub	x0, x29, #0x60
  405024:	bl	404a10 <clock_supported@plt+0x718>
  405028:	ldur	w8, [x29, #-88]
  40502c:	cmp	w8, #0x0
  405030:	cset	w8, eq  // eq = none
  405034:	eor	w8, w8, #0x1
  405038:	tbnz	w8, #0, 405130 <clock_supported@plt+0xe38>
  40503c:	b	405040 <clock_supported@plt+0xd48>
  405040:	ldur	w8, [x29, #-64]
  405044:	add	w8, w8, #0x1
  405048:	stur	w8, [x29, #-64]
  40504c:	b	404dec <clock_supported@plt+0xaf4>
  405050:	ldur	x0, [x29, #-48]
  405054:	mov	x8, xzr
  405058:	mov	x1, x8
  40505c:	bl	403b18 <table_print@plt>
  405060:	stur	w0, [x29, #-68]
  405064:	ldur	w9, [x29, #-68]
  405068:	cmp	w9, #0x0
  40506c:	cset	w9, ge  // ge = tcont
  405070:	tbnz	w9, #0, 405100 <clock_supported@plt+0xe08>
  405074:	mov	w8, #0x3                   	// #3
  405078:	stur	w8, [x29, #-148]
  40507c:	ldur	w8, [x29, #-68]
  405080:	stur	w8, [x29, #-152]
  405084:	stur	wzr, [x29, #-156]
  405088:	ldur	w0, [x29, #-156]
  40508c:	bl	403a28 <log_get_max_level_realm@plt>
  405090:	ldur	w8, [x29, #-148]
  405094:	and	w8, w8, #0x7
  405098:	cmp	w0, w8
  40509c:	b.lt	4050d0 <clock_supported@plt+0xdd8>  // b.tstop
  4050a0:	ldur	w8, [x29, #-156]
  4050a4:	ldur	w9, [x29, #-148]
  4050a8:	orr	w0, w9, w8, lsl #10
  4050ac:	ldur	w1, [x29, #-152]
  4050b0:	ldur	x2, [x29, #-168]
  4050b4:	mov	w3, #0x216                 	// #534
  4050b8:	ldur	x4, [x29, #-176]
  4050bc:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  4050c0:	add	x5, x5, #0x825
  4050c4:	bl	403a38 <log_internal_realm@plt>
  4050c8:	str	w0, [sp, #76]
  4050cc:	b	4050e4 <clock_supported@plt+0xdec>
  4050d0:	ldur	w0, [x29, #-152]
  4050d4:	bl	403a48 <abs@plt>
  4050d8:	mov	w8, wzr
  4050dc:	subs	w8, w8, w0, uxtb
  4050e0:	str	w8, [sp, #76]
  4050e4:	ldr	w8, [sp, #76]
  4050e8:	stur	w8, [x29, #-160]
  4050ec:	ldur	w8, [x29, #-160]
  4050f0:	stur	w8, [x29, #-4]
  4050f4:	mov	w8, #0x1                   	// #1
  4050f8:	stur	w8, [x29, #-88]
  4050fc:	b	405130 <clock_supported@plt+0xe38>
  405100:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  405104:	add	x8, x8, #0x0
  405108:	ldrb	w9, [x8]
  40510c:	tbnz	w9, #0, 405114 <clock_supported@plt+0xe1c>
  405110:	b	405124 <clock_supported@plt+0xe2c>
  405114:	ldur	w1, [x29, #-60]
  405118:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  40511c:	add	x0, x0, #0x83f
  405120:	bl	4039e8 <printf@plt>
  405124:	stur	wzr, [x29, #-4]
  405128:	mov	w8, #0x1                   	// #1
  40512c:	stur	w8, [x29, #-88]
  405130:	sub	x0, x29, #0x30
  405134:	bl	406d30 <clock_supported@plt+0x2a38>
  405138:	sub	x0, x29, #0x28
  40513c:	bl	406cfc <clock_supported@plt+0x2a04>
  405140:	sub	x0, x29, #0x20
  405144:	bl	406cc8 <clock_supported@plt+0x29d0>
  405148:	ldur	w0, [x29, #-4]
  40514c:	ldr	x28, [sp, #384]
  405150:	ldp	x29, x30, [sp, #368]
  405154:	add	sp, sp, #0x190
  405158:	ret
  40515c:	sub	sp, sp, #0xb0
  405160:	stp	x29, x30, [sp, #160]
  405164:	add	x29, sp, #0xa0
  405168:	mov	x8, xzr
  40516c:	adrp	x9, 430000 <clock_supported@plt+0x2bd08>
  405170:	add	x9, x9, #0x3c
  405174:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  405178:	add	x10, x10, #0x31c
  40517c:	add	x10, x10, #0x3
  405180:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  405184:	add	x11, x11, #0xccc
  405188:	sub	x12, x29, #0x20
  40518c:	stur	w0, [x29, #-8]
  405190:	stur	x1, [x29, #-16]
  405194:	stur	x2, [x29, #-24]
  405198:	stur	x8, [x29, #-32]
  40519c:	stur	x8, [x29, #-40]
  4051a0:	stur	x8, [x29, #-48]
  4051a4:	stur	x8, [x29, #-56]
  4051a8:	ldr	w0, [x9]
  4051ac:	str	x10, [sp, #32]
  4051b0:	str	x11, [sp, #24]
  4051b4:	str	x12, [sp, #16]
  4051b8:	bl	403a58 <pager_open@plt>
  4051bc:	ldr	x8, [sp, #16]
  4051c0:	mov	x0, x8
  4051c4:	bl	403b28 <sd_bus_open_system@plt>
  4051c8:	stur	w0, [x29, #-60]
  4051cc:	ldur	w13, [x29, #-60]
  4051d0:	cmp	w13, #0x0
  4051d4:	cset	w13, ge  // ge = tcont
  4051d8:	tbnz	w13, #0, 405268 <clock_supported@plt+0xf70>
  4051dc:	mov	w8, #0x3                   	// #3
  4051e0:	stur	w8, [x29, #-72]
  4051e4:	ldur	w8, [x29, #-60]
  4051e8:	stur	w8, [x29, #-76]
  4051ec:	str	wzr, [sp, #80]
  4051f0:	ldr	w0, [sp, #80]
  4051f4:	bl	403a28 <log_get_max_level_realm@plt>
  4051f8:	ldur	w8, [x29, #-72]
  4051fc:	and	w8, w8, #0x7
  405200:	cmp	w0, w8
  405204:	b.lt	405238 <clock_supported@plt+0xf40>  // b.tstop
  405208:	ldr	w8, [sp, #80]
  40520c:	ldur	w9, [x29, #-72]
  405210:	orr	w0, w9, w8, lsl #10
  405214:	ldur	w1, [x29, #-76]
  405218:	ldr	x2, [sp, #32]
  40521c:	mov	w3, #0x5e3                 	// #1507
  405220:	ldr	x4, [sp, #24]
  405224:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  405228:	add	x5, x5, #0xcd8
  40522c:	bl	403a38 <log_internal_realm@plt>
  405230:	str	w0, [sp, #12]
  405234:	b	40524c <clock_supported@plt+0xf54>
  405238:	ldur	w0, [x29, #-76]
  40523c:	bl	403a48 <abs@plt>
  405240:	mov	w8, wzr
  405244:	subs	w8, w8, w0, uxtb
  405248:	str	w8, [sp, #12]
  40524c:	ldr	w8, [sp, #12]
  405250:	str	w8, [sp, #76]
  405254:	ldr	w8, [sp, #76]
  405258:	stur	w8, [x29, #-4]
  40525c:	mov	w8, #0x1                   	// #1
  405260:	str	w8, [sp, #72]
  405264:	b	4054b4 <clock_supported@plt+0x11bc>
  405268:	sub	x0, x29, #0x28
  40526c:	bl	403a18 <sd_netlink_open@plt>
  405270:	stur	w0, [x29, #-60]
  405274:	ldur	w8, [x29, #-60]
  405278:	cmp	w8, #0x0
  40527c:	cset	w8, ge  // ge = tcont
  405280:	tbnz	w8, #0, 405310 <clock_supported@plt+0x1018>
  405284:	mov	w8, #0x3                   	// #3
  405288:	str	w8, [sp, #68]
  40528c:	ldur	w8, [x29, #-60]
  405290:	str	w8, [sp, #64]
  405294:	str	wzr, [sp, #60]
  405298:	ldr	w0, [sp, #60]
  40529c:	bl	403a28 <log_get_max_level_realm@plt>
  4052a0:	ldr	w8, [sp, #68]
  4052a4:	and	w8, w8, #0x7
  4052a8:	cmp	w0, w8
  4052ac:	b.lt	4052e0 <clock_supported@plt+0xfe8>  // b.tstop
  4052b0:	ldr	w8, [sp, #60]
  4052b4:	ldr	w9, [sp, #68]
  4052b8:	orr	w0, w9, w8, lsl #10
  4052bc:	ldr	w1, [sp, #64]
  4052c0:	ldr	x2, [sp, #32]
  4052c4:	mov	w3, #0x5e7                 	// #1511
  4052c8:	ldr	x4, [sp, #24]
  4052cc:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  4052d0:	add	x5, x5, #0x76f
  4052d4:	bl	403a38 <log_internal_realm@plt>
  4052d8:	str	w0, [sp, #8]
  4052dc:	b	4052f4 <clock_supported@plt+0xffc>
  4052e0:	ldr	w0, [sp, #64]
  4052e4:	bl	403a48 <abs@plt>
  4052e8:	mov	w8, wzr
  4052ec:	subs	w8, w8, w0, uxtb
  4052f0:	str	w8, [sp, #8]
  4052f4:	ldr	w8, [sp, #8]
  4052f8:	str	w8, [sp, #56]
  4052fc:	ldr	w8, [sp, #56]
  405300:	stur	w8, [x29, #-4]
  405304:	mov	w8, #0x1                   	// #1
  405308:	str	w8, [sp, #72]
  40530c:	b	4054b4 <clock_supported@plt+0x11bc>
  405310:	sub	x0, x29, #0x30
  405314:	bl	403b38 <sd_hwdb_new@plt>
  405318:	stur	w0, [x29, #-60]
  40531c:	ldur	w8, [x29, #-60]
  405320:	cmp	w8, #0x0
  405324:	cset	w8, ge  // ge = tcont
  405328:	tbnz	w8, #0, 4053a4 <clock_supported@plt+0x10ac>
  40532c:	mov	w8, #0x7                   	// #7
  405330:	str	w8, [sp, #52]
  405334:	ldur	w8, [x29, #-60]
  405338:	str	w8, [sp, #48]
  40533c:	str	wzr, [sp, #44]
  405340:	ldr	w0, [sp, #44]
  405344:	bl	403a28 <log_get_max_level_realm@plt>
  405348:	ldr	w8, [sp, #52]
  40534c:	and	w8, w8, #0x7
  405350:	cmp	w0, w8
  405354:	b.lt	405388 <clock_supported@plt+0x1090>  // b.tstop
  405358:	ldr	w8, [sp, #44]
  40535c:	ldr	w9, [sp, #52]
  405360:	orr	w0, w9, w8, lsl #10
  405364:	ldr	w1, [sp, #48]
  405368:	ldr	x2, [sp, #32]
  40536c:	mov	w3, #0x5eb                 	// #1515
  405370:	ldr	x4, [sp, #24]
  405374:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  405378:	add	x5, x5, #0xcf9
  40537c:	bl	403a38 <log_internal_realm@plt>
  405380:	str	w0, [sp, #4]
  405384:	b	40539c <clock_supported@plt+0x10a4>
  405388:	ldr	w0, [sp, #48]
  40538c:	bl	403a48 <abs@plt>
  405390:	mov	w8, wzr
  405394:	subs	w8, w8, w0, uxtb
  405398:	str	w8, [sp, #4]
  40539c:	ldr	w8, [sp, #4]
  4053a0:	str	w8, [sp, #40]
  4053a4:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  4053a8:	add	x8, x8, #0x40
  4053ac:	ldrb	w9, [x8]
  4053b0:	tbnz	w9, #0, 4053b8 <clock_supported@plt+0x10c0>
  4053b4:	b	4053d8 <clock_supported@plt+0x10e0>
  4053b8:	ldur	x0, [x29, #-32]
  4053bc:	ldur	x1, [x29, #-40]
  4053c0:	mov	x8, xzr
  4053c4:	mov	x2, x8
  4053c8:	sub	x3, x29, #0x38
  4053cc:	bl	406d64 <clock_supported@plt+0x2a6c>
  4053d0:	stur	w0, [x29, #-64]
  4053d4:	b	40541c <clock_supported@plt+0x1124>
  4053d8:	ldur	w8, [x29, #-8]
  4053dc:	cmp	w8, #0x1
  4053e0:	b.gt	405400 <clock_supported@plt+0x1108>
  4053e4:	ldur	x0, [x29, #-40]
  4053e8:	ldur	x1, [x29, #-48]
  4053ec:	bl	408aec <clock_supported@plt+0x47f4>
  4053f0:	stur	w0, [x29, #-4]
  4053f4:	mov	w8, #0x1                   	// #1
  4053f8:	str	w8, [sp, #72]
  4053fc:	b	4054b4 <clock_supported@plt+0x11bc>
  405400:	ldur	x0, [x29, #-32]
  405404:	ldur	x1, [x29, #-40]
  405408:	ldur	x8, [x29, #-16]
  40540c:	add	x2, x8, #0x8
  405410:	sub	x3, x29, #0x38
  405414:	bl	406d64 <clock_supported@plt+0x2a6c>
  405418:	stur	w0, [x29, #-64]
  40541c:	ldur	w8, [x29, #-64]
  405420:	cmp	w8, #0x0
  405424:	cset	w8, ge  // ge = tcont
  405428:	tbnz	w8, #0, 405440 <clock_supported@plt+0x1148>
  40542c:	ldur	w8, [x29, #-64]
  405430:	stur	w8, [x29, #-4]
  405434:	mov	w8, #0x1                   	// #1
  405438:	str	w8, [sp, #72]
  40543c:	b	4054b4 <clock_supported@plt+0x11bc>
  405440:	stur	wzr, [x29, #-68]
  405444:	ldur	w8, [x29, #-68]
  405448:	ldur	w9, [x29, #-64]
  40544c:	cmp	w8, w9
  405450:	b.ge	4054a8 <clock_supported@plt+0x11b0>  // b.tcont
  405454:	ldur	w8, [x29, #-68]
  405458:	cmp	w8, #0x0
  40545c:	cset	w8, le
  405460:	tbnz	w8, #0, 405478 <clock_supported@plt+0x1180>
  405464:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  405468:	add	x8, x8, #0x68
  40546c:	ldr	x1, [x8]
  405470:	mov	w0, #0xa                   	// #10
  405474:	bl	403b48 <fputc@plt>
  405478:	ldur	x0, [x29, #-40]
  40547c:	ldur	x1, [x29, #-48]
  405480:	ldur	x8, [x29, #-56]
  405484:	ldursw	x9, [x29, #-68]
  405488:	mov	x10, #0x1c8                 	// #456
  40548c:	mul	x9, x10, x9
  405490:	add	x2, x8, x9
  405494:	bl	408f84 <clock_supported@plt+0x4c8c>
  405498:	ldur	w8, [x29, #-68]
  40549c:	add	w8, w8, #0x1
  4054a0:	stur	w8, [x29, #-68]
  4054a4:	b	405444 <clock_supported@plt+0x114c>
  4054a8:	stur	wzr, [x29, #-4]
  4054ac:	mov	w8, #0x1                   	// #1
  4054b0:	str	w8, [sp, #72]
  4054b4:	sub	x0, x29, #0x38
  4054b8:	bl	406cfc <clock_supported@plt+0x2a04>
  4054bc:	sub	x0, x29, #0x30
  4054c0:	bl	408ab8 <clock_supported@plt+0x47c0>
  4054c4:	sub	x0, x29, #0x28
  4054c8:	bl	406cc8 <clock_supported@plt+0x29d0>
  4054cc:	sub	x0, x29, #0x20
  4054d0:	bl	408a84 <clock_supported@plt+0x478c>
  4054d4:	ldur	w0, [x29, #-4]
  4054d8:	ldp	x29, x30, [sp, #160]
  4054dc:	add	sp, sp, #0xb0
  4054e0:	ret
  4054e4:	sub	sp, sp, #0x1c0
  4054e8:	stp	x29, x30, [sp, #416]
  4054ec:	str	x28, [sp, #432]
  4054f0:	add	x29, sp, #0x1a0
  4054f4:	sub	x8, x29, #0x50
  4054f8:	mov	x9, xzr
  4054fc:	mov	w10, #0x0                   	// #0
  405500:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  405504:	add	x11, x11, #0x31c
  405508:	add	x11, x11, #0x3
  40550c:	adrp	x12, 413000 <clock_supported@plt+0xed08>
  405510:	add	x12, x12, #0x478
  405514:	adrp	x13, 413000 <clock_supported@plt+0xed08>
  405518:	add	x13, x13, #0x4be
  40551c:	sub	x14, x29, #0x20
  405520:	stur	w0, [x29, #-8]
  405524:	str	x1, [x8, #64]
  405528:	str	x2, [x8, #56]
  40552c:	str	x9, [x8, #48]
  405530:	str	x9, [x8, #40]
  405534:	str	x9, [x8, #32]
  405538:	stur	wzr, [x29, #-64]
  40553c:	sturh	w10, [x29, #-66]
  405540:	mov	x0, x14
  405544:	str	x8, [sp, #176]
  405548:	str	x11, [sp, #168]
  40554c:	str	x12, [sp, #160]
  405550:	str	x13, [sp, #152]
  405554:	bl	403a18 <sd_netlink_open@plt>
  405558:	stur	w0, [x29, #-56]
  40555c:	ldur	w10, [x29, #-56]
  405560:	cmp	w10, #0x0
  405564:	cset	w10, ge  // ge = tcont
  405568:	tbnz	w10, #0, 4055f8 <clock_supported@plt+0x1300>
  40556c:	mov	w8, #0x3                   	// #3
  405570:	stur	w8, [x29, #-84]
  405574:	ldur	w8, [x29, #-56]
  405578:	stur	w8, [x29, #-88]
  40557c:	stur	wzr, [x29, #-92]
  405580:	ldur	w0, [x29, #-92]
  405584:	bl	403a28 <log_get_max_level_realm@plt>
  405588:	ldur	w8, [x29, #-84]
  40558c:	and	w8, w8, #0x7
  405590:	cmp	w0, w8
  405594:	b.lt	4055c8 <clock_supported@plt+0x12d0>  // b.tstop
  405598:	ldur	w8, [x29, #-92]
  40559c:	ldur	w9, [x29, #-84]
  4055a0:	orr	w0, w9, w8, lsl #10
  4055a4:	ldur	w1, [x29, #-88]
  4055a8:	ldr	x2, [sp, #168]
  4055ac:	mov	w3, #0x63c                 	// #1596
  4055b0:	ldr	x4, [sp, #160]
  4055b4:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  4055b8:	add	x5, x5, #0x76f
  4055bc:	bl	403a38 <log_internal_realm@plt>
  4055c0:	str	w0, [sp, #148]
  4055c4:	b	4055dc <clock_supported@plt+0x12e4>
  4055c8:	ldur	w0, [x29, #-88]
  4055cc:	bl	403a48 <abs@plt>
  4055d0:	mov	w8, wzr
  4055d4:	subs	w8, w8, w0, uxtb
  4055d8:	str	w8, [sp, #148]
  4055dc:	ldr	w8, [sp, #148]
  4055e0:	stur	w8, [x29, #-96]
  4055e4:	ldur	w8, [x29, #-96]
  4055e8:	stur	w8, [x29, #-4]
  4055ec:	mov	w8, #0x1                   	// #1
  4055f0:	stur	w8, [x29, #-100]
  4055f4:	b	405f18 <clock_supported@plt+0x1c20>
  4055f8:	ldr	x8, [sp, #176]
  4055fc:	ldr	x1, [x8, #48]
  405600:	ldur	w9, [x29, #-8]
  405604:	cmp	w9, #0x1
  405608:	str	x1, [sp, #136]
  40560c:	b.le	405624 <clock_supported@plt+0x132c>
  405610:	ldr	x8, [sp, #176]
  405614:	ldr	x9, [x8, #64]
  405618:	add	x9, x9, #0x8
  40561c:	str	x9, [sp, #128]
  405620:	b	40562c <clock_supported@plt+0x1334>
  405624:	mov	x8, xzr
  405628:	str	x8, [sp, #128]
  40562c:	ldr	x8, [sp, #128]
  405630:	mov	x9, xzr
  405634:	mov	x0, x9
  405638:	ldr	x1, [sp, #136]
  40563c:	mov	x2, x8
  405640:	sub	x3, x29, #0x28
  405644:	bl	406d64 <clock_supported@plt+0x2a6c>
  405648:	stur	w0, [x29, #-60]
  40564c:	ldur	w10, [x29, #-60]
  405650:	cmp	w10, #0x0
  405654:	cset	w10, ge  // ge = tcont
  405658:	tbnz	w10, #0, 405670 <clock_supported@plt+0x1378>
  40565c:	ldur	w8, [x29, #-60]
  405660:	stur	w8, [x29, #-4]
  405664:	mov	w8, #0x1                   	// #1
  405668:	stur	w8, [x29, #-100]
  40566c:	b	405f18 <clock_supported@plt+0x1c20>
  405670:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  405674:	add	x8, x8, #0x3c
  405678:	ldr	w0, [x8]
  40567c:	bl	403a58 <pager_open@plt>
  405680:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  405684:	add	x8, x8, #0x794
  405688:	mov	x0, x8
  40568c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  405690:	add	x1, x1, #0x489
  405694:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  405698:	add	x2, x2, #0x494
  40569c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  4056a0:	add	x3, x3, #0x4a0
  4056a4:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  4056a8:	add	x4, x4, #0x4a5
  4056ac:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  4056b0:	add	x5, x5, #0x4ad
  4056b4:	mov	x8, xzr
  4056b8:	mov	x6, x8
  4056bc:	bl	403a68 <table_new_internal@plt>
  4056c0:	ldr	x8, [sp, #176]
  4056c4:	str	x0, [x8, #32]
  4056c8:	ldr	x9, [x8, #32]
  4056cc:	cbnz	x9, 4056e4 <clock_supported@plt+0x13ec>
  4056d0:	mov	w8, #0xfffffff4            	// #-12
  4056d4:	stur	w8, [x29, #-4]
  4056d8:	mov	w8, #0x1                   	// #1
  4056dc:	stur	w8, [x29, #-100]
  4056e0:	b	405f18 <clock_supported@plt+0x1c20>
  4056e4:	ldr	x8, [sp, #176]
  4056e8:	ldr	x0, [x8, #32]
  4056ec:	adrp	x9, 430000 <clock_supported@plt+0x2bd08>
  4056f0:	add	x9, x9, #0x0
  4056f4:	ldrb	w10, [x9]
  4056f8:	and	w1, w10, #0x1
  4056fc:	bl	403a78 <table_set_header@plt>
  405700:	ldr	x8, [sp, #176]
  405704:	ldr	x0, [x8, #32]
  405708:	mov	x9, xzr
  40570c:	mov	x1, x9
  405710:	mov	x2, x9
  405714:	bl	403a88 <table_get_cell@plt>
  405718:	ldr	x8, [sp, #176]
  40571c:	str	x0, [x8]
  405720:	cmp	x0, #0x0
  405724:	cset	w10, ne  // ne = any
  405728:	mov	w11, #0x1                   	// #1
  40572c:	eor	w10, w10, #0x1
  405730:	eor	w10, w10, w11
  405734:	eor	w10, w10, w11
  405738:	and	w10, w10, #0x1
  40573c:	mov	w0, w10
  405740:	sxtw	x9, w0
  405744:	cbz	x9, 405768 <clock_supported@plt+0x1470>
  405748:	mov	w8, wzr
  40574c:	mov	w0, w8
  405750:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  405754:	add	x1, x1, #0x7b0
  405758:	ldr	x2, [sp, #168]
  40575c:	mov	w3, #0x64f                 	// #1615
  405760:	ldr	x4, [sp, #152]
  405764:	bl	403958 <log_assert_failed_realm@plt>
  405768:	ldr	x8, [sp, #176]
  40576c:	ldr	x0, [x8, #32]
  405770:	ldr	x1, [x8]
  405774:	mov	x2, #0x10                  	// #16
  405778:	bl	403a98 <table_set_minimum_width@plt>
  40577c:	ldr	x8, [sp, #176]
  405780:	ldr	x0, [x8, #32]
  405784:	mov	x9, xzr
  405788:	mov	x1, x9
  40578c:	mov	x2, #0x1                   	// #1
  405790:	bl	403a88 <table_get_cell@plt>
  405794:	ldr	x8, [sp, #176]
  405798:	str	x0, [x8]
  40579c:	cmp	x0, #0x0
  4057a0:	cset	w10, ne  // ne = any
  4057a4:	mov	w11, #0x1                   	// #1
  4057a8:	eor	w10, w10, #0x1
  4057ac:	eor	w10, w10, w11
  4057b0:	eor	w10, w10, w11
  4057b4:	and	w10, w10, #0x1
  4057b8:	mov	w0, w10
  4057bc:	sxtw	x9, w0
  4057c0:	cbz	x9, 4057e4 <clock_supported@plt+0x14ec>
  4057c4:	mov	w8, wzr
  4057c8:	mov	w0, w8
  4057cc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4057d0:	add	x1, x1, #0x7f8
  4057d4:	ldr	x2, [sp, #168]
  4057d8:	mov	w3, #0x652                 	// #1618
  4057dc:	ldr	x4, [sp, #152]
  4057e0:	bl	403958 <log_assert_failed_realm@plt>
  4057e4:	ldr	x8, [sp, #176]
  4057e8:	ldr	x0, [x8, #32]
  4057ec:	ldr	x1, [x8]
  4057f0:	mov	x2, #0x11                  	// #17
  4057f4:	bl	403a98 <table_set_minimum_width@plt>
  4057f8:	ldr	x8, [sp, #176]
  4057fc:	ldr	x0, [x8, #32]
  405800:	mov	x9, xzr
  405804:	mov	x1, x9
  405808:	mov	x2, #0x2                   	// #2
  40580c:	bl	403a88 <table_get_cell@plt>
  405810:	ldr	x8, [sp, #176]
  405814:	str	x0, [x8]
  405818:	cmp	x0, #0x0
  40581c:	cset	w10, ne  // ne = any
  405820:	mov	w11, #0x1                   	// #1
  405824:	eor	w10, w10, #0x1
  405828:	eor	w10, w10, w11
  40582c:	eor	w10, w10, w11
  405830:	and	w10, w10, #0x1
  405834:	mov	w0, w10
  405838:	sxtw	x9, w0
  40583c:	cbz	x9, 405860 <clock_supported@plt+0x1568>
  405840:	mov	w8, wzr
  405844:	mov	w0, w8
  405848:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40584c:	add	x1, x1, #0x4e9
  405850:	ldr	x2, [sp, #168]
  405854:	mov	w3, #0x655                 	// #1621
  405858:	ldr	x4, [sp, #152]
  40585c:	bl	403958 <log_assert_failed_realm@plt>
  405860:	ldr	x8, [sp, #176]
  405864:	ldr	x0, [x8, #32]
  405868:	ldr	x1, [x8]
  40586c:	mov	x2, #0x10                  	// #16
  405870:	bl	403a98 <table_set_minimum_width@plt>
  405874:	ldr	x8, [sp, #176]
  405878:	ldr	x0, [x8, #32]
  40587c:	mov	x9, xzr
  405880:	mov	x1, x9
  405884:	mov	x2, #0x3                   	// #3
  405888:	bl	403a88 <table_get_cell@plt>
  40588c:	ldr	x8, [sp, #176]
  405890:	str	x0, [x8]
  405894:	cmp	x0, #0x0
  405898:	cset	w10, ne  // ne = any
  40589c:	mov	w11, #0x1                   	// #1
  4058a0:	eor	w10, w10, #0x1
  4058a4:	eor	w10, w10, w11
  4058a8:	eor	w10, w10, w11
  4058ac:	and	w10, w10, #0x1
  4058b0:	mov	w0, w10
  4058b4:	sxtw	x9, w0
  4058b8:	cbz	x9, 4058dc <clock_supported@plt+0x15e4>
  4058bc:	mov	w8, wzr
  4058c0:	mov	w0, w8
  4058c4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4058c8:	add	x1, x1, #0x50c
  4058cc:	ldr	x2, [sp, #168]
  4058d0:	mov	w3, #0x658                 	// #1624
  4058d4:	ldr	x4, [sp, #152]
  4058d8:	bl	403958 <log_assert_failed_realm@plt>
  4058dc:	ldr	x8, [sp, #176]
  4058e0:	ldr	x0, [x8, #32]
  4058e4:	ldr	x1, [x8]
  4058e8:	mov	x2, #0xb                   	// #11
  4058ec:	bl	403a98 <table_set_minimum_width@plt>
  4058f0:	ldr	x8, [sp, #176]
  4058f4:	ldr	x0, [x8, #32]
  4058f8:	mov	x9, xzr
  4058fc:	mov	x1, x9
  405900:	mov	x2, #0x4                   	// #4
  405904:	bl	403a88 <table_get_cell@plt>
  405908:	ldr	x8, [sp, #176]
  40590c:	str	x0, [x8]
  405910:	cmp	x0, #0x0
  405914:	cset	w10, ne  // ne = any
  405918:	mov	w11, #0x1                   	// #1
  40591c:	eor	w10, w10, #0x1
  405920:	eor	w10, w10, w11
  405924:	eor	w10, w10, w11
  405928:	and	w10, w10, #0x1
  40592c:	mov	w0, w10
  405930:	sxtw	x9, w0
  405934:	cbz	x9, 405958 <clock_supported@plt+0x1660>
  405938:	mov	w8, wzr
  40593c:	mov	w0, w8
  405940:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  405944:	add	x1, x1, #0x52f
  405948:	ldr	x2, [sp, #168]
  40594c:	mov	w3, #0x65b                 	// #1627
  405950:	ldr	x4, [sp, #152]
  405954:	bl	403958 <log_assert_failed_realm@plt>
  405958:	ldr	x8, [sp, #176]
  40595c:	ldr	x0, [x8, #32]
  405960:	ldr	x1, [x8]
  405964:	mov	x2, #0x11                  	// #17
  405968:	bl	403a98 <table_set_minimum_width@plt>
  40596c:	ldr	x8, [sp, #176]
  405970:	ldr	x0, [x8, #32]
  405974:	mov	x9, xzr
  405978:	mov	x1, x9
  40597c:	mov	x2, #0x5                   	// #5
  405980:	bl	403a88 <table_get_cell@plt>
  405984:	ldr	x8, [sp, #176]
  405988:	str	x0, [x8]
  40598c:	cmp	x0, #0x0
  405990:	cset	w10, ne  // ne = any
  405994:	mov	w11, #0x1                   	// #1
  405998:	eor	w10, w10, #0x1
  40599c:	eor	w10, w10, w11
  4059a0:	eor	w10, w10, w11
  4059a4:	and	w10, w10, #0x1
  4059a8:	mov	w0, w10
  4059ac:	sxtw	x9, w0
  4059b0:	cbz	x9, 4059d4 <clock_supported@plt+0x16dc>
  4059b4:	mov	w8, wzr
  4059b8:	mov	w0, w8
  4059bc:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4059c0:	add	x1, x1, #0x552
  4059c4:	ldr	x2, [sp, #168]
  4059c8:	mov	w3, #0x65e                 	// #1630
  4059cc:	ldr	x4, [sp, #152]
  4059d0:	bl	403958 <log_assert_failed_realm@plt>
  4059d4:	ldr	x8, [sp, #176]
  4059d8:	ldr	x0, [x8, #32]
  4059dc:	ldr	x1, [x8]
  4059e0:	mov	x2, #0x10                  	// #16
  4059e4:	bl	403a98 <table_set_minimum_width@plt>
  4059e8:	stur	wzr, [x29, #-52]
  4059ec:	ldur	w8, [x29, #-52]
  4059f0:	ldur	w9, [x29, #-60]
  4059f4:	cmp	w8, w9
  4059f8:	b.ge	405ea4 <clock_supported@plt+0x1bac>  // b.tcont
  4059fc:	sub	x1, x29, #0x70
  405a00:	mov	x8, xzr
  405a04:	stur	x8, [x29, #-112]
  405a08:	ldr	x8, [sp, #176]
  405a0c:	ldr	x9, [x8, #40]
  405a10:	ldursw	x10, [x29, #-52]
  405a14:	mov	x11, #0x1c8                 	// #456
  405a18:	mul	x10, x11, x10
  405a1c:	add	x9, x9, x10
  405a20:	ldr	w0, [x9, #96]
  405a24:	bl	40cfbc <clock_supported@plt+0x8cc4>
  405a28:	stur	w0, [x29, #-56]
  405a2c:	ldur	w12, [x29, #-56]
  405a30:	mov	w13, #0xfffffffe            	// #-2
  405a34:	cmp	w12, w13
  405a38:	b.ne	405a48 <clock_supported@plt+0x1750>  // b.any
  405a3c:	mov	w8, #0x10                  	// #16
  405a40:	stur	w8, [x29, #-100]
  405a44:	b	405e6c <clock_supported@plt+0x1b74>
  405a48:	ldur	w8, [x29, #-56]
  405a4c:	cmp	w8, #0x0
  405a50:	cset	w8, ge  // ge = tcont
  405a54:	tbnz	w8, #0, 405af8 <clock_supported@plt+0x1800>
  405a58:	mov	w8, #0x4                   	// #4
  405a5c:	stur	w8, [x29, #-116]
  405a60:	ldur	w8, [x29, #-56]
  405a64:	stur	w8, [x29, #-120]
  405a68:	stur	wzr, [x29, #-124]
  405a6c:	ldur	w0, [x29, #-124]
  405a70:	bl	403a28 <log_get_max_level_realm@plt>
  405a74:	ldur	w8, [x29, #-116]
  405a78:	and	w8, w8, #0x7
  405a7c:	cmp	w0, w8
  405a80:	b.lt	405ad0 <clock_supported@plt+0x17d8>  // b.tstop
  405a84:	ldur	w8, [x29, #-124]
  405a88:	ldur	w9, [x29, #-116]
  405a8c:	orr	w0, w9, w8, lsl #10
  405a90:	ldur	w1, [x29, #-120]
  405a94:	ldr	x10, [sp, #176]
  405a98:	ldr	x11, [x10, #40]
  405a9c:	ldursw	x12, [x29, #-52]
  405aa0:	mov	x13, #0x1c8                 	// #456
  405aa4:	mul	x12, x13, x12
  405aa8:	add	x11, x11, x12
  405aac:	ldr	w6, [x11, #96]
  405ab0:	ldr	x2, [sp, #168]
  405ab4:	mov	w3, #0x668                 	// #1640
  405ab8:	ldr	x4, [sp, #160]
  405abc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  405ac0:	add	x5, x5, #0x575
  405ac4:	bl	403a38 <log_internal_realm@plt>
  405ac8:	str	w0, [sp, #124]
  405acc:	b	405ae4 <clock_supported@plt+0x17ec>
  405ad0:	ldur	w0, [x29, #-120]
  405ad4:	bl	403a48 <abs@plt>
  405ad8:	mov	w8, wzr
  405adc:	subs	w8, w8, w0, uxtb
  405ae0:	str	w8, [sp, #124]
  405ae4:	ldr	w8, [sp, #124]
  405ae8:	stur	w8, [x29, #-128]
  405aec:	mov	w8, #0x10                  	// #16
  405af0:	stur	w8, [x29, #-100]
  405af4:	b	405e6c <clock_supported@plt+0x1b74>
  405af8:	mov	x8, xzr
  405afc:	stur	x8, [x29, #-136]
  405b00:	stur	x8, [x29, #-144]
  405b04:	stur	x8, [x29, #-152]
  405b08:	stur	x8, [x29, #-160]
  405b0c:	stur	x8, [x29, #-168]
  405b10:	stur	x8, [x29, #-176]
  405b14:	stur	x8, [x29, #-184]
  405b18:	stur	x8, [x29, #-192]
  405b1c:	stur	x8, [x29, #-200]
  405b20:	add	x1, sp, #0xd0
  405b24:	str	x8, [sp, #208]
  405b28:	ldur	x0, [x29, #-112]
  405b2c:	bl	40d0b4 <clock_supported@plt+0x8dbc>
  405b30:	stur	w0, [x29, #-56]
  405b34:	ldur	w9, [x29, #-56]
  405b38:	cmp	w9, #0x0
  405b3c:	cset	w9, ge  // ge = tcont
  405b40:	tbnz	w9, #0, 405bc8 <clock_supported@plt+0x18d0>
  405b44:	mov	w8, #0x4                   	// #4
  405b48:	str	w8, [sp, #200]
  405b4c:	ldur	w8, [x29, #-56]
  405b50:	str	w8, [sp, #196]
  405b54:	str	wzr, [sp, #192]
  405b58:	ldr	w0, [sp, #192]
  405b5c:	bl	403a28 <log_get_max_level_realm@plt>
  405b60:	ldr	w8, [sp, #200]
  405b64:	and	w8, w8, #0x7
  405b68:	cmp	w0, w8
  405b6c:	b.lt	405ba0 <clock_supported@plt+0x18a8>  // b.tstop
  405b70:	ldr	w8, [sp, #192]
  405b74:	ldr	w9, [sp, #200]
  405b78:	orr	w0, w9, w8, lsl #10
  405b7c:	ldr	w1, [sp, #196]
  405b80:	ldr	x2, [sp, #168]
  405b84:	mov	w3, #0x674                 	// #1652
  405b88:	ldr	x4, [sp, #160]
  405b8c:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  405b90:	add	x5, x5, #0x5a3
  405b94:	bl	403a38 <log_internal_realm@plt>
  405b98:	str	w0, [sp, #120]
  405b9c:	b	405bb4 <clock_supported@plt+0x18bc>
  405ba0:	ldr	w0, [sp, #196]
  405ba4:	bl	403a48 <abs@plt>
  405ba8:	mov	w8, wzr
  405bac:	subs	w8, w8, w0, uxtb
  405bb0:	str	w8, [sp, #120]
  405bb4:	ldr	w8, [sp, #120]
  405bb8:	str	w8, [sp, #188]
  405bbc:	mov	w8, #0x11                  	// #17
  405bc0:	stur	w8, [x29, #-100]
  405bc4:	b	405e14 <clock_supported@plt+0x1b1c>
  405bc8:	ldur	w8, [x29, #-56]
  405bcc:	cbnz	w8, 405bdc <clock_supported@plt+0x18e4>
  405bd0:	mov	w8, #0x11                  	// #17
  405bd4:	stur	w8, [x29, #-100]
  405bd8:	b	405e14 <clock_supported@plt+0x1b1c>
  405bdc:	ldr	x0, [sp, #208]
  405be0:	sub	x1, x29, #0xb0
  405be4:	bl	40fae0 <clock_supported@plt+0xb7e8>
  405be8:	ldr	x8, [sp, #208]
  405bec:	mov	x0, x8
  405bf0:	sub	x1, x29, #0xb8
  405bf4:	bl	410254 <clock_supported@plt+0xbf5c>
  405bf8:	ldr	x8, [sp, #208]
  405bfc:	mov	x0, x8
  405c00:	sub	x1, x29, #0xc0
  405c04:	bl	410698 <clock_supported@plt+0xc3a0>
  405c08:	ldr	x8, [sp, #208]
  405c0c:	mov	x0, x8
  405c10:	sub	x1, x29, #0xc8
  405c14:	bl	410928 <clock_supported@plt+0xc630>
  405c18:	ldur	x8, [x29, #-176]
  405c1c:	cbz	x8, 405c44 <clock_supported@plt+0x194c>
  405c20:	ldur	x0, [x29, #-176]
  405c24:	mov	x1, #0x11                  	// #17
  405c28:	mov	w2, #0x64                  	// #100
  405c2c:	bl	40d414 <clock_supported@plt+0x911c>
  405c30:	stur	x0, [x29, #-136]
  405c34:	ldur	x8, [x29, #-136]
  405c38:	cbz	x8, 405c44 <clock_supported@plt+0x194c>
  405c3c:	ldur	x8, [x29, #-136]
  405c40:	stur	x8, [x29, #-176]
  405c44:	ldur	x8, [x29, #-184]
  405c48:	cbz	x8, 405c70 <clock_supported@plt+0x1978>
  405c4c:	ldur	x0, [x29, #-184]
  405c50:	mov	x1, #0x11                  	// #17
  405c54:	mov	w2, #0x64                  	// #100
  405c58:	bl	40d414 <clock_supported@plt+0x911c>
  405c5c:	stur	x0, [x29, #-144]
  405c60:	ldur	x8, [x29, #-144]
  405c64:	cbz	x8, 405c70 <clock_supported@plt+0x1978>
  405c68:	ldur	x8, [x29, #-144]
  405c6c:	stur	x8, [x29, #-184]
  405c70:	ldur	x8, [x29, #-192]
  405c74:	cbz	x8, 405c9c <clock_supported@plt+0x19a4>
  405c78:	ldur	x0, [x29, #-192]
  405c7c:	mov	x1, #0x10                  	// #16
  405c80:	mov	w2, #0x64                  	// #100
  405c84:	bl	40d414 <clock_supported@plt+0x911c>
  405c88:	stur	x0, [x29, #-152]
  405c8c:	ldur	x8, [x29, #-152]
  405c90:	cbz	x8, 405c9c <clock_supported@plt+0x19a4>
  405c94:	ldur	x8, [x29, #-152]
  405c98:	stur	x8, [x29, #-192]
  405c9c:	ldur	x8, [x29, #-200]
  405ca0:	cbz	x8, 405cc8 <clock_supported@plt+0x19d0>
  405ca4:	ldur	x0, [x29, #-200]
  405ca8:	mov	x1, #0x10                  	// #16
  405cac:	mov	w2, #0x64                  	// #100
  405cb0:	bl	40d414 <clock_supported@plt+0x911c>
  405cb4:	stur	x0, [x29, #-160]
  405cb8:	ldur	x8, [x29, #-160]
  405cbc:	cbz	x8, 405cc8 <clock_supported@plt+0x19d0>
  405cc0:	ldur	x8, [x29, #-160]
  405cc4:	stur	x8, [x29, #-200]
  405cc8:	ldr	x0, [sp, #208]
  405ccc:	add	x1, sp, #0xce
  405cd0:	bl	410bc4 <clock_supported@plt+0xc8cc>
  405cd4:	cmp	w0, #0x0
  405cd8:	cset	w8, lt  // lt = tstop
  405cdc:	tbnz	w8, #0, 405cfc <clock_supported@plt+0x1a04>
  405ce0:	ldrh	w0, [sp, #206]
  405ce4:	bl	40d468 <clock_supported@plt+0x9170>
  405ce8:	stur	x0, [x29, #-168]
  405cec:	ldrh	w8, [sp, #206]
  405cf0:	ldurh	w9, [x29, #-66]
  405cf4:	orr	w8, w9, w8
  405cf8:	sturh	w8, [x29, #-66]
  405cfc:	ldr	x8, [sp, #176]
  405d00:	ldr	x0, [x8, #32]
  405d04:	ldr	x9, [x8, #40]
  405d08:	ldursw	x10, [x29, #-52]
  405d0c:	mov	x11, #0x1c8                 	// #456
  405d10:	mul	x10, x11, x10
  405d14:	add	x2, x9, x10
  405d18:	ldur	x9, [x29, #-176]
  405d1c:	str	x0, [sp, #112]
  405d20:	mov	x0, x9
  405d24:	str	x2, [sp, #104]
  405d28:	bl	407664 <clock_supported@plt+0x336c>
  405d2c:	ldur	x8, [x29, #-192]
  405d30:	str	x0, [sp, #96]
  405d34:	mov	x0, x8
  405d38:	bl	407664 <clock_supported@plt+0x336c>
  405d3c:	ldur	x8, [x29, #-168]
  405d40:	str	x0, [sp, #88]
  405d44:	mov	x0, x8
  405d48:	bl	407664 <clock_supported@plt+0x336c>
  405d4c:	ldur	x8, [x29, #-184]
  405d50:	str	x0, [sp, #80]
  405d54:	mov	x0, x8
  405d58:	bl	407664 <clock_supported@plt+0x336c>
  405d5c:	ldur	x8, [x29, #-200]
  405d60:	str	x0, [sp, #72]
  405d64:	mov	x0, x8
  405d68:	bl	407664 <clock_supported@plt+0x336c>
  405d6c:	ldr	x8, [sp, #112]
  405d70:	str	x0, [sp, #64]
  405d74:	mov	x0, x8
  405d78:	mov	w12, #0x1                   	// #1
  405d7c:	mov	w1, w12
  405d80:	ldr	x2, [sp, #104]
  405d84:	mov	w3, w12
  405d88:	ldr	x4, [sp, #96]
  405d8c:	mov	w5, w12
  405d90:	ldr	x6, [sp, #88]
  405d94:	mov	w7, w12
  405d98:	mov	x9, sp
  405d9c:	ldr	x10, [sp, #80]
  405da0:	str	x10, [x9]
  405da4:	mov	x9, sp
  405da8:	str	w12, [x9, #8]
  405dac:	mov	x9, sp
  405db0:	ldr	x11, [sp, #72]
  405db4:	str	x11, [x9, #16]
  405db8:	mov	x9, sp
  405dbc:	str	w12, [x9, #24]
  405dc0:	mov	x9, sp
  405dc4:	ldr	x13, [sp, #64]
  405dc8:	str	x13, [x9, #32]
  405dcc:	mov	x9, sp
  405dd0:	mov	w12, #0x18                  	// #24
  405dd4:	str	w12, [x9, #40]
  405dd8:	bl	403b08 <table_add_many_internal@plt>
  405ddc:	stur	w0, [x29, #-56]
  405de0:	ldur	w12, [x29, #-56]
  405de4:	cmp	w12, #0x0
  405de8:	cset	w12, ge  // ge = tcont
  405dec:	tbnz	w12, #0, 405e04 <clock_supported@plt+0x1b0c>
  405df0:	ldur	w8, [x29, #-56]
  405df4:	stur	w8, [x29, #-4]
  405df8:	mov	w8, #0x1                   	// #1
  405dfc:	stur	w8, [x29, #-100]
  405e00:	b	405e14 <clock_supported@plt+0x1b1c>
  405e04:	ldur	w8, [x29, #-64]
  405e08:	add	w8, w8, #0x1
  405e0c:	stur	w8, [x29, #-64]
  405e10:	stur	wzr, [x29, #-100]
  405e14:	add	x0, sp, #0xd0
  405e18:	bl	40d080 <clock_supported@plt+0x8d88>
  405e1c:	sub	x0, x29, #0xa8
  405e20:	bl	404a10 <clock_supported@plt+0x718>
  405e24:	sub	x0, x29, #0xa0
  405e28:	bl	404a10 <clock_supported@plt+0x718>
  405e2c:	sub	x0, x29, #0x98
  405e30:	bl	404a10 <clock_supported@plt+0x718>
  405e34:	sub	x0, x29, #0x90
  405e38:	bl	404a10 <clock_supported@plt+0x718>
  405e3c:	sub	x0, x29, #0x88
  405e40:	bl	404a10 <clock_supported@plt+0x718>
  405e44:	ldur	w8, [x29, #-100]
  405e48:	str	w8, [sp, #60]
  405e4c:	cbz	w8, 405e64 <clock_supported@plt+0x1b6c>
  405e50:	b	405e54 <clock_supported@plt+0x1b5c>
  405e54:	ldr	w8, [sp, #60]
  405e58:	cmp	w8, #0x11
  405e5c:	b.eq	405e68 <clock_supported@plt+0x1b70>  // b.none
  405e60:	b	405e6c <clock_supported@plt+0x1b74>
  405e64:	b	405af8 <clock_supported@plt+0x1800>
  405e68:	stur	wzr, [x29, #-100]
  405e6c:	sub	x0, x29, #0x70
  405e70:	bl	40cf94 <clock_supported@plt+0x8c9c>
  405e74:	ldur	w8, [x29, #-100]
  405e78:	str	w8, [sp, #56]
  405e7c:	cbz	w8, 405e94 <clock_supported@plt+0x1b9c>
  405e80:	b	405e84 <clock_supported@plt+0x1b8c>
  405e84:	ldr	w8, [sp, #56]
  405e88:	cmp	w8, #0x10
  405e8c:	b.eq	405e94 <clock_supported@plt+0x1b9c>  // b.none
  405e90:	b	405f18 <clock_supported@plt+0x1c20>
  405e94:	ldur	w8, [x29, #-52]
  405e98:	add	w8, w8, #0x1
  405e9c:	stur	w8, [x29, #-52]
  405ea0:	b	4059ec <clock_supported@plt+0x16f4>
  405ea4:	ldr	x8, [sp, #176]
  405ea8:	ldr	x0, [x8, #32]
  405eac:	mov	x9, xzr
  405eb0:	mov	x1, x9
  405eb4:	bl	403b18 <table_print@plt>
  405eb8:	stur	w0, [x29, #-56]
  405ebc:	ldur	w10, [x29, #-56]
  405ec0:	cmp	w10, #0x0
  405ec4:	cset	w10, ge  // ge = tcont
  405ec8:	tbnz	w10, #0, 405ee0 <clock_supported@plt+0x1be8>
  405ecc:	ldur	w8, [x29, #-56]
  405ed0:	stur	w8, [x29, #-4]
  405ed4:	mov	w8, #0x1                   	// #1
  405ed8:	stur	w8, [x29, #-100]
  405edc:	b	405f18 <clock_supported@plt+0x1c20>
  405ee0:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  405ee4:	add	x8, x8, #0x0
  405ee8:	ldrb	w9, [x8]
  405eec:	tbnz	w9, #0, 405ef4 <clock_supported@plt+0x1bfc>
  405ef0:	b	405f0c <clock_supported@plt+0x1c14>
  405ef4:	ldurh	w0, [x29, #-66]
  405ef8:	bl	40d548 <clock_supported@plt+0x9250>
  405efc:	ldur	w1, [x29, #-64]
  405f00:	adrp	x0, 413000 <clock_supported@plt+0xed08>
  405f04:	add	x0, x0, #0x5c4
  405f08:	bl	4039e8 <printf@plt>
  405f0c:	stur	wzr, [x29, #-4]
  405f10:	mov	w8, #0x1                   	// #1
  405f14:	stur	w8, [x29, #-100]
  405f18:	sub	x0, x29, #0x30
  405f1c:	bl	406d30 <clock_supported@plt+0x2a38>
  405f20:	sub	x0, x29, #0x28
  405f24:	bl	406cfc <clock_supported@plt+0x2a04>
  405f28:	sub	x0, x29, #0x20
  405f2c:	bl	406cc8 <clock_supported@plt+0x29d0>
  405f30:	ldur	w0, [x29, #-4]
  405f34:	ldr	x28, [sp, #432]
  405f38:	ldp	x29, x30, [sp, #416]
  405f3c:	add	sp, sp, #0x1c0
  405f40:	ret
  405f44:	sub	sp, sp, #0x60
  405f48:	stp	x29, x30, [sp, #80]
  405f4c:	add	x29, sp, #0x50
  405f50:	mov	x8, xzr
  405f54:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  405f58:	add	x9, x9, #0x31c
  405f5c:	add	x9, x9, #0x3
  405f60:	sub	x10, x29, #0x20
  405f64:	stur	w0, [x29, #-8]
  405f68:	stur	x1, [x29, #-16]
  405f6c:	stur	x2, [x29, #-24]
  405f70:	stur	x8, [x29, #-32]
  405f74:	mov	x0, x10
  405f78:	str	x9, [sp, #16]
  405f7c:	bl	403a18 <sd_netlink_open@plt>
  405f80:	stur	w0, [x29, #-36]
  405f84:	ldur	w11, [x29, #-36]
  405f88:	cmp	w11, #0x0
  405f8c:	cset	w11, ge  // ge = tcont
  405f90:	tbnz	w11, #0, 406024 <clock_supported@plt+0x1d2c>
  405f94:	mov	w8, #0x3                   	// #3
  405f98:	str	w8, [sp, #40]
  405f9c:	ldur	w8, [x29, #-36]
  405fa0:	str	w8, [sp, #36]
  405fa4:	str	wzr, [sp, #32]
  405fa8:	ldr	w0, [sp, #32]
  405fac:	bl	403a28 <log_get_max_level_realm@plt>
  405fb0:	ldr	w8, [sp, #40]
  405fb4:	and	w8, w8, #0x7
  405fb8:	cmp	w0, w8
  405fbc:	b.lt	405ff4 <clock_supported@plt+0x1cfc>  // b.tstop
  405fc0:	ldr	w8, [sp, #32]
  405fc4:	ldr	w9, [sp, #40]
  405fc8:	orr	w0, w9, w8, lsl #10
  405fcc:	ldr	w1, [sp, #36]
  405fd0:	ldr	x2, [sp, #16]
  405fd4:	mov	w3, #0x36a                 	// #874
  405fd8:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  405fdc:	add	x4, x4, #0x6b1
  405fe0:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  405fe4:	add	x5, x5, #0x76f
  405fe8:	bl	403a38 <log_internal_realm@plt>
  405fec:	str	w0, [sp, #12]
  405ff0:	b	406008 <clock_supported@plt+0x1d10>
  405ff4:	ldr	w0, [sp, #36]
  405ff8:	bl	403a48 <abs@plt>
  405ffc:	mov	w8, wzr
  406000:	subs	w8, w8, w0, uxtb
  406004:	str	w8, [sp, #12]
  406008:	ldr	w8, [sp, #12]
  40600c:	str	w8, [sp, #28]
  406010:	ldr	w8, [sp, #28]
  406014:	stur	w8, [x29, #-4]
  406018:	mov	w8, #0x1                   	// #1
  40601c:	str	w8, [sp, #24]
  406020:	b	406038 <clock_supported@plt+0x1d40>
  406024:	ldur	x0, [x29, #-32]
  406028:	bl	40d6c8 <clock_supported@plt+0x93d0>
  40602c:	stur	wzr, [x29, #-4]
  406030:	mov	w8, #0x1                   	// #1
  406034:	str	w8, [sp, #24]
  406038:	sub	x0, x29, #0x20
  40603c:	bl	406cc8 <clock_supported@plt+0x29d0>
  406040:	ldur	w0, [x29, #-4]
  406044:	ldp	x29, x30, [sp, #80]
  406048:	add	sp, sp, #0x60
  40604c:	ret
  406050:	sub	sp, sp, #0x100
  406054:	stp	x29, x30, [sp, #240]
  406058:	add	x29, sp, #0xf0
  40605c:	sub	x8, x29, #0x28
  406060:	mov	x9, xzr
  406064:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  406068:	add	x10, x10, #0x31c
  40606c:	add	x10, x10, #0x3
  406070:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  406074:	add	x11, x11, #0x76e
  406078:	sub	x12, x29, #0x20
  40607c:	stur	w0, [x29, #-8]
  406080:	str	x1, [x8, #24]
  406084:	str	x2, [x8, #16]
  406088:	str	x9, [x8, #8]
  40608c:	str	x9, [x8]
  406090:	mov	x0, x12
  406094:	str	x8, [sp, #48]
  406098:	str	x10, [sp, #40]
  40609c:	str	x11, [sp, #32]
  4060a0:	bl	403a18 <sd_netlink_open@plt>
  4060a4:	stur	w0, [x29, #-48]
  4060a8:	ldur	w13, [x29, #-48]
  4060ac:	cmp	w13, #0x0
  4060b0:	cset	w13, ge  // ge = tcont
  4060b4:	tbnz	w13, #0, 406144 <clock_supported@plt+0x1e4c>
  4060b8:	mov	w8, #0x3                   	// #3
  4060bc:	stur	w8, [x29, #-92]
  4060c0:	ldur	w8, [x29, #-48]
  4060c4:	stur	w8, [x29, #-96]
  4060c8:	stur	wzr, [x29, #-100]
  4060cc:	ldur	w0, [x29, #-100]
  4060d0:	bl	403a28 <log_get_max_level_realm@plt>
  4060d4:	ldur	w8, [x29, #-92]
  4060d8:	and	w8, w8, #0x7
  4060dc:	cmp	w0, w8
  4060e0:	b.lt	406114 <clock_supported@plt+0x1e1c>  // b.tstop
  4060e4:	ldur	w8, [x29, #-100]
  4060e8:	ldur	w9, [x29, #-92]
  4060ec:	orr	w0, w9, w8, lsl #10
  4060f0:	ldur	w1, [x29, #-96]
  4060f4:	ldr	x2, [sp, #40]
  4060f8:	mov	w3, #0x6d0                 	// #1744
  4060fc:	ldr	x4, [sp, #32]
  406100:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  406104:	add	x5, x5, #0x76f
  406108:	bl	403a38 <log_internal_realm@plt>
  40610c:	str	w0, [sp, #28]
  406110:	b	406128 <clock_supported@plt+0x1e30>
  406114:	ldur	w0, [x29, #-96]
  406118:	bl	403a48 <abs@plt>
  40611c:	mov	w8, wzr
  406120:	subs	w8, w8, w0, uxtb
  406124:	str	w8, [sp, #28]
  406128:	ldr	w8, [sp, #28]
  40612c:	stur	w8, [x29, #-104]
  406130:	ldur	w8, [x29, #-104]
  406134:	stur	w8, [x29, #-4]
  406138:	mov	w8, #0x1                   	// #1
  40613c:	stur	w8, [x29, #-108]
  406140:	b	406418 <clock_supported@plt+0x2120>
  406144:	mov	x8, xzr
  406148:	mov	x0, x8
  40614c:	bl	403b58 <internal_set_new@plt>
  406150:	ldr	x8, [sp, #48]
  406154:	str	x0, [x8]
  406158:	ldr	x9, [x8]
  40615c:	cbnz	x9, 406188 <clock_supported@plt+0x1e90>
  406160:	mov	w8, wzr
  406164:	mov	w0, w8
  406168:	ldr	x1, [sp, #40]
  40616c:	mov	w2, #0x6d4                 	// #1748
  406170:	ldr	x3, [sp, #32]
  406174:	bl	4039d8 <log_oom_internal@plt>
  406178:	stur	w0, [x29, #-4]
  40617c:	mov	w8, #0x1                   	// #1
  406180:	stur	w8, [x29, #-108]
  406184:	b	406418 <clock_supported@plt+0x2120>
  406188:	mov	w8, #0x1                   	// #1
  40618c:	stur	w8, [x29, #-52]
  406190:	ldur	w8, [x29, #-52]
  406194:	ldur	w9, [x29, #-8]
  406198:	cmp	w8, w9
  40619c:	b.ge	4062e0 <clock_supported@plt+0x1fe8>  // b.tcont
  4061a0:	ldr	x8, [sp, #48]
  4061a4:	ldr	x9, [x8, #24]
  4061a8:	ldursw	x10, [x29, #-52]
  4061ac:	mov	x11, #0x8                   	// #8
  4061b0:	mul	x10, x11, x10
  4061b4:	add	x9, x9, x10
  4061b8:	ldr	x0, [x9]
  4061bc:	sub	x1, x29, #0x2c
  4061c0:	bl	403b68 <parse_ifindex_or_ifname@plt>
  4061c4:	stur	w0, [x29, #-48]
  4061c8:	ldur	w12, [x29, #-48]
  4061cc:	cmp	w12, #0x0
  4061d0:	cset	w12, ge  // ge = tcont
  4061d4:	tbnz	w12, #0, 406280 <clock_supported@plt+0x1f88>
  4061d8:	mov	w8, #0x3                   	// #3
  4061dc:	stur	w8, [x29, #-112]
  4061e0:	ldur	w8, [x29, #-48]
  4061e4:	stur	w8, [x29, #-116]
  4061e8:	str	wzr, [sp, #120]
  4061ec:	ldr	w0, [sp, #120]
  4061f0:	bl	403a28 <log_get_max_level_realm@plt>
  4061f4:	ldur	w8, [x29, #-112]
  4061f8:	and	w8, w8, #0x7
  4061fc:	cmp	w0, w8
  406200:	b.lt	406250 <clock_supported@plt+0x1f58>  // b.tstop
  406204:	ldr	w8, [sp, #120]
  406208:	ldur	w9, [x29, #-112]
  40620c:	orr	w0, w9, w8, lsl #10
  406210:	ldur	w1, [x29, #-116]
  406214:	ldr	x10, [sp, #48]
  406218:	ldr	x11, [x10, #24]
  40621c:	ldursw	x12, [x29, #-52]
  406220:	mov	x13, #0x8                   	// #8
  406224:	mul	x12, x13, x12
  406228:	add	x11, x11, x12
  40622c:	ldr	x6, [x11]
  406230:	ldr	x2, [sp, #40]
  406234:	mov	w3, #0x6d9                 	// #1753
  406238:	ldr	x4, [sp, #32]
  40623c:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  406240:	add	x5, x5, #0x77a
  406244:	bl	403a38 <log_internal_realm@plt>
  406248:	str	w0, [sp, #24]
  40624c:	b	406264 <clock_supported@plt+0x1f6c>
  406250:	ldur	w0, [x29, #-116]
  406254:	bl	403a48 <abs@plt>
  406258:	mov	w8, wzr
  40625c:	subs	w8, w8, w0, uxtb
  406260:	str	w8, [sp, #24]
  406264:	ldr	w8, [sp, #24]
  406268:	str	w8, [sp, #116]
  40626c:	ldr	w8, [sp, #116]
  406270:	stur	w8, [x29, #-4]
  406274:	mov	w8, #0x1                   	// #1
  406278:	stur	w8, [x29, #-108]
  40627c:	b	406418 <clock_supported@plt+0x2120>
  406280:	ldr	x8, [sp, #48]
  406284:	ldr	x0, [x8]
  406288:	ldursw	x9, [x29, #-44]
  40628c:	mov	x1, x9
  406290:	bl	403b78 <set_put@plt>
  406294:	stur	w0, [x29, #-48]
  406298:	ldur	w10, [x29, #-48]
  40629c:	cmp	w10, #0x0
  4062a0:	cset	w10, ge  // ge = tcont
  4062a4:	tbnz	w10, #0, 4062d0 <clock_supported@plt+0x1fd8>
  4062a8:	mov	w8, wzr
  4062ac:	mov	w0, w8
  4062b0:	ldr	x1, [sp, #40]
  4062b4:	mov	w2, #0x6dd                 	// #1757
  4062b8:	ldr	x3, [sp, #32]
  4062bc:	bl	4039d8 <log_oom_internal@plt>
  4062c0:	stur	w0, [x29, #-4]
  4062c4:	mov	w8, #0x1                   	// #1
  4062c8:	stur	w8, [x29, #-108]
  4062cc:	b	406418 <clock_supported@plt+0x2120>
  4062d0:	ldur	w8, [x29, #-52]
  4062d4:	add	w8, w8, #0x1
  4062d8:	stur	w8, [x29, #-52]
  4062dc:	b	406190 <clock_supported@plt+0x1e98>
  4062e0:	add	x8, sp, #0x60
  4062e4:	mov	w9, #0xfffffffe            	// #-2
  4062e8:	str	w9, [sp, #96]
  4062ec:	mov	x10, xzr
  4062f0:	str	x10, [x8, #8]
  4062f4:	ldr	q0, [sp, #96]
  4062f8:	stur	q0, [x29, #-80]
  4062fc:	ldr	x8, [sp, #48]
  406300:	ldr	x0, [x8]
  406304:	sub	x1, x29, #0x50
  406308:	sub	x2, x29, #0x58
  40630c:	bl	403b88 <set_iterate@plt>
  406310:	tbnz	w0, #0, 406318 <clock_supported@plt+0x2020>
  406314:	b	406408 <clock_supported@plt+0x2110>
  406318:	ldur	x8, [x29, #-88]
  40631c:	stur	w8, [x29, #-44]
  406320:	ldr	x9, [sp, #48]
  406324:	ldr	x0, [x9, #8]
  406328:	ldur	w1, [x29, #-44]
  40632c:	bl	40dd40 <clock_supported@plt+0x9a48>
  406330:	stur	w0, [x29, #-48]
  406334:	ldur	w8, [x29, #-48]
  406338:	cmp	w8, #0x0
  40633c:	cset	w8, ge  // ge = tcont
  406340:	tbnz	w8, #0, 406404 <clock_supported@plt+0x210c>
  406344:	mov	w8, #0x3                   	// #3
  406348:	str	w8, [sp, #72]
  40634c:	ldur	w8, [x29, #-48]
  406350:	str	w8, [sp, #68]
  406354:	str	wzr, [sp, #64]
  406358:	ldr	w0, [sp, #64]
  40635c:	bl	403a28 <log_get_max_level_realm@plt>
  406360:	ldr	w8, [sp, #72]
  406364:	and	w8, w8, #0x7
  406368:	cmp	w0, w8
  40636c:	b.lt	4063d4 <clock_supported@plt+0x20dc>  // b.tstop
  406370:	ldr	w8, [sp, #64]
  406374:	ldr	w9, [sp, #72]
  406378:	orr	w0, w9, w8, lsl #10
  40637c:	ldr	w1, [sp, #68]
  406380:	ldur	w8, [x29, #-44]
  406384:	str	w0, [sp, #20]
  406388:	mov	w0, w8
  40638c:	add	x10, sp, #0x4f
  406390:	str	w1, [sp, #16]
  406394:	mov	x1, x10
  406398:	mov	w2, #0x1                   	// #1
  40639c:	bl	403b98 <format_ifname_full@plt>
  4063a0:	ldr	w8, [sp, #20]
  4063a4:	str	x0, [sp, #8]
  4063a8:	mov	w0, w8
  4063ac:	ldr	w1, [sp, #16]
  4063b0:	ldr	x2, [sp, #40]
  4063b4:	mov	w3, #0x6e7                 	// #1767
  4063b8:	ldr	x4, [sp, #32]
  4063bc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  4063c0:	add	x5, x5, #0x799
  4063c4:	ldr	x6, [sp, #8]
  4063c8:	bl	403a38 <log_internal_realm@plt>
  4063cc:	str	w0, [sp, #4]
  4063d0:	b	4063e8 <clock_supported@plt+0x20f0>
  4063d4:	ldr	w0, [sp, #68]
  4063d8:	bl	403a48 <abs@plt>
  4063dc:	mov	w8, wzr
  4063e0:	subs	w8, w8, w0, uxtb
  4063e4:	str	w8, [sp, #4]
  4063e8:	ldr	w8, [sp, #4]
  4063ec:	str	w8, [sp, #60]
  4063f0:	ldr	w8, [sp, #60]
  4063f4:	stur	w8, [x29, #-4]
  4063f8:	mov	w8, #0x1                   	// #1
  4063fc:	stur	w8, [x29, #-108]
  406400:	b	406418 <clock_supported@plt+0x2120>
  406404:	b	4062fc <clock_supported@plt+0x2004>
  406408:	ldur	w8, [x29, #-48]
  40640c:	stur	w8, [x29, #-4]
  406410:	mov	w8, #0x1                   	// #1
  406414:	stur	w8, [x29, #-108]
  406418:	sub	x0, x29, #0x28
  40641c:	bl	40dd0c <clock_supported@plt+0x9a14>
  406420:	sub	x0, x29, #0x20
  406424:	bl	406cc8 <clock_supported@plt+0x29d0>
  406428:	ldur	w0, [x29, #-4]
  40642c:	ldp	x29, x30, [sp, #240]
  406430:	add	sp, sp, #0x100
  406434:	ret
  406438:	sub	sp, sp, #0x80
  40643c:	stp	x29, x30, [sp, #112]
  406440:	add	x29, sp, #0x70
  406444:	mov	x8, xzr
  406448:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40644c:	add	x9, x9, #0x31c
  406450:	add	x9, x9, #0x3
  406454:	sub	x10, x29, #0x20
  406458:	stur	w0, [x29, #-8]
  40645c:	stur	x1, [x29, #-16]
  406460:	stur	x2, [x29, #-24]
  406464:	stur	x8, [x29, #-32]
  406468:	stur	wzr, [x29, #-44]
  40646c:	mov	x0, x10
  406470:	str	x9, [sp, #16]
  406474:	bl	403b28 <sd_bus_open_system@plt>
  406478:	stur	w0, [x29, #-48]
  40647c:	ldur	w11, [x29, #-48]
  406480:	cmp	w11, #0x0
  406484:	cset	w11, ge  // ge = tcont
  406488:	tbnz	w11, #0, 40651c <clock_supported@plt+0x2224>
  40648c:	mov	w8, #0x3                   	// #3
  406490:	stur	w8, [x29, #-52]
  406494:	ldur	w8, [x29, #-48]
  406498:	str	w8, [sp, #56]
  40649c:	str	wzr, [sp, #52]
  4064a0:	ldr	w0, [sp, #52]
  4064a4:	bl	403a28 <log_get_max_level_realm@plt>
  4064a8:	ldur	w8, [x29, #-52]
  4064ac:	and	w8, w8, #0x7
  4064b0:	cmp	w0, w8
  4064b4:	b.lt	4064ec <clock_supported@plt+0x21f4>  // b.tstop
  4064b8:	ldr	w8, [sp, #52]
  4064bc:	ldur	w9, [x29, #-52]
  4064c0:	orr	w0, w9, w8, lsl #10
  4064c4:	ldr	w1, [sp, #56]
  4064c8:	ldr	x2, [sp, #16]
  4064cc:	mov	w3, #0x708                 	// #1800
  4064d0:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  4064d4:	add	x4, x4, #0x7eb
  4064d8:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  4064dc:	add	x5, x5, #0xcd8
  4064e0:	bl	403a38 <log_internal_realm@plt>
  4064e4:	str	w0, [sp, #12]
  4064e8:	b	406500 <clock_supported@plt+0x2208>
  4064ec:	ldr	w0, [sp, #56]
  4064f0:	bl	403a48 <abs@plt>
  4064f4:	mov	w8, wzr
  4064f8:	subs	w8, w8, w0, uxtb
  4064fc:	str	w8, [sp, #12]
  406500:	ldr	w8, [sp, #12]
  406504:	str	w8, [sp, #48]
  406508:	ldr	w8, [sp, #48]
  40650c:	stur	w8, [x29, #-4]
  406510:	mov	w8, #0x1                   	// #1
  406514:	str	w8, [sp, #44]
  406518:	b	406680 <clock_supported@plt+0x2388>
  40651c:	mov	w8, #0x1                   	// #1
  406520:	stur	w8, [x29, #-40]
  406524:	ldur	w8, [x29, #-40]
  406528:	ldur	w9, [x29, #-8]
  40652c:	cmp	w8, w9
  406530:	b.ge	406670 <clock_supported@plt+0x2378>  // b.tcont
  406534:	ldur	x8, [x29, #-16]
  406538:	ldursw	x9, [x29, #-40]
  40653c:	mov	x10, #0x8                   	// #8
  406540:	mul	x9, x10, x9
  406544:	add	x8, x8, x9
  406548:	ldr	x0, [x8]
  40654c:	sub	x1, x29, #0x24
  406550:	bl	403b68 <parse_ifindex_or_ifname@plt>
  406554:	stur	w0, [x29, #-48]
  406558:	ldur	w11, [x29, #-48]
  40655c:	cmp	w11, #0x0
  406560:	cset	w11, ge  // ge = tcont
  406564:	tbnz	w11, #0, 406610 <clock_supported@plt+0x2318>
  406568:	mov	w8, #0x3                   	// #3
  40656c:	str	w8, [sp, #40]
  406570:	ldur	w8, [x29, #-48]
  406574:	str	w8, [sp, #36]
  406578:	str	wzr, [sp, #32]
  40657c:	ldr	w0, [sp, #32]
  406580:	bl	403a28 <log_get_max_level_realm@plt>
  406584:	ldr	w8, [sp, #40]
  406588:	and	w8, w8, #0x7
  40658c:	cmp	w0, w8
  406590:	b.lt	4065e0 <clock_supported@plt+0x22e8>  // b.tstop
  406594:	ldr	w8, [sp, #32]
  406598:	ldr	w9, [sp, #40]
  40659c:	orr	w0, w9, w8, lsl #10
  4065a0:	ldr	w1, [sp, #36]
  4065a4:	ldur	x10, [x29, #-16]
  4065a8:	ldursw	x11, [x29, #-40]
  4065ac:	mov	x12, #0x8                   	// #8
  4065b0:	mul	x11, x12, x11
  4065b4:	add	x10, x10, x11
  4065b8:	ldr	x6, [x10]
  4065bc:	ldr	x2, [sp, #16]
  4065c0:	mov	w3, #0x70d                 	// #1805
  4065c4:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  4065c8:	add	x4, x4, #0x7eb
  4065cc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  4065d0:	add	x5, x5, #0x77a
  4065d4:	bl	403a38 <log_internal_realm@plt>
  4065d8:	str	w0, [sp, #8]
  4065dc:	b	4065f4 <clock_supported@plt+0x22fc>
  4065e0:	ldr	w0, [sp, #36]
  4065e4:	bl	403a48 <abs@plt>
  4065e8:	mov	w8, wzr
  4065ec:	subs	w8, w8, w0, uxtb
  4065f0:	str	w8, [sp, #8]
  4065f4:	ldr	w8, [sp, #8]
  4065f8:	str	w8, [sp, #28]
  4065fc:	ldr	w8, [sp, #28]
  406600:	stur	w8, [x29, #-4]
  406604:	mov	w8, #0x1                   	// #1
  406608:	str	w8, [sp, #44]
  40660c:	b	406680 <clock_supported@plt+0x2388>
  406610:	ldur	x0, [x29, #-32]
  406614:	ldur	w1, [x29, #-36]
  406618:	ldur	x8, [x29, #-16]
  40661c:	ldursw	x9, [x29, #-40]
  406620:	mov	x10, #0x8                   	// #8
  406624:	mul	x9, x10, x9
  406628:	add	x8, x8, x9
  40662c:	ldr	x2, [x8]
  406630:	bl	40de90 <clock_supported@plt+0x9b98>
  406634:	stur	w0, [x29, #-48]
  406638:	ldur	w11, [x29, #-48]
  40663c:	cmp	w11, #0x0
  406640:	cset	w11, ge  // ge = tcont
  406644:	tbnz	w11, #0, 406660 <clock_supported@plt+0x2368>
  406648:	ldur	w8, [x29, #-44]
  40664c:	cmp	w8, #0x0
  406650:	cset	w8, lt  // lt = tstop
  406654:	tbnz	w8, #0, 406660 <clock_supported@plt+0x2368>
  406658:	ldur	w8, [x29, #-48]
  40665c:	stur	w8, [x29, #-44]
  406660:	ldur	w8, [x29, #-40]
  406664:	add	w8, w8, #0x1
  406668:	stur	w8, [x29, #-40]
  40666c:	b	406524 <clock_supported@plt+0x222c>
  406670:	ldur	w8, [x29, #-44]
  406674:	stur	w8, [x29, #-4]
  406678:	mov	w8, #0x1                   	// #1
  40667c:	str	w8, [sp, #44]
  406680:	sub	x0, x29, #0x20
  406684:	bl	408a84 <clock_supported@plt+0x478c>
  406688:	ldur	w0, [x29, #-4]
  40668c:	ldp	x29, x30, [sp, #112]
  406690:	add	sp, sp, #0x80
  406694:	ret
  406698:	sub	sp, sp, #0x130
  40669c:	stp	x29, x30, [sp, #272]
  4066a0:	str	x28, [sp, #288]
  4066a4:	add	x29, sp, #0x110
  4066a8:	sub	x8, x29, #0x40
  4066ac:	mov	x9, xzr
  4066b0:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  4066b4:	add	x10, x10, #0x31c
  4066b8:	add	x10, x10, #0x3
  4066bc:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  4066c0:	add	x11, x11, #0x886
  4066c4:	sub	x12, x29, #0x38
  4066c8:	stur	w0, [x29, #-8]
  4066cc:	str	x1, [x8, #48]
  4066d0:	str	x2, [x8, #40]
  4066d4:	str	xzr, [x8, #16]
  4066d8:	str	xzr, [x8, #24]
  4066dc:	str	xzr, [x8, #32]
  4066e0:	str	x9, [x8, #8]
  4066e4:	str	x9, [x8]
  4066e8:	mov	x0, x12
  4066ec:	str	x8, [sp, #64]
  4066f0:	str	x10, [sp, #56]
  4066f4:	str	x11, [sp, #48]
  4066f8:	bl	403b28 <sd_bus_open_system@plt>
  4066fc:	stur	w0, [x29, #-76]
  406700:	ldur	w13, [x29, #-76]
  406704:	cmp	w13, #0x0
  406708:	cset	w13, ge  // ge = tcont
  40670c:	tbnz	w13, #0, 40679c <clock_supported@plt+0x24a4>
  406710:	mov	w8, #0x3                   	// #3
  406714:	stur	w8, [x29, #-108]
  406718:	ldur	w8, [x29, #-76]
  40671c:	stur	w8, [x29, #-112]
  406720:	stur	wzr, [x29, #-116]
  406724:	ldur	w0, [x29, #-116]
  406728:	bl	403a28 <log_get_max_level_realm@plt>
  40672c:	ldur	w8, [x29, #-108]
  406730:	and	w8, w8, #0x7
  406734:	cmp	w0, w8
  406738:	b.lt	40676c <clock_supported@plt+0x2474>  // b.tstop
  40673c:	ldur	w8, [x29, #-116]
  406740:	ldur	w9, [x29, #-108]
  406744:	orr	w0, w9, w8, lsl #10
  406748:	ldur	w1, [x29, #-112]
  40674c:	ldr	x2, [sp, #56]
  406750:	mov	w3, #0x737                 	// #1847
  406754:	ldr	x4, [sp, #48]
  406758:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40675c:	add	x5, x5, #0xcd8
  406760:	bl	403a38 <log_internal_realm@plt>
  406764:	str	w0, [sp, #44]
  406768:	b	406780 <clock_supported@plt+0x2488>
  40676c:	ldur	w0, [x29, #-112]
  406770:	bl	403a48 <abs@plt>
  406774:	mov	w8, wzr
  406778:	subs	w8, w8, w0, uxtb
  40677c:	str	w8, [sp, #44]
  406780:	ldr	w8, [sp, #44]
  406784:	stur	w8, [x29, #-120]
  406788:	ldur	w8, [x29, #-120]
  40678c:	stur	w8, [x29, #-4]
  406790:	mov	w8, #0x1                   	// #1
  406794:	stur	w8, [x29, #-124]
  406798:	b	406aa8 <clock_supported@plt+0x27b0>
  40679c:	mov	x8, xzr
  4067a0:	mov	x0, x8
  4067a4:	bl	403b58 <internal_set_new@plt>
  4067a8:	ldr	x8, [sp, #64]
  4067ac:	str	x0, [x8]
  4067b0:	ldr	x9, [x8]
  4067b4:	cbnz	x9, 4067e0 <clock_supported@plt+0x24e8>
  4067b8:	mov	w8, wzr
  4067bc:	mov	w0, w8
  4067c0:	ldr	x1, [sp, #56]
  4067c4:	mov	w2, #0x73b                 	// #1851
  4067c8:	ldr	x3, [sp, #48]
  4067cc:	bl	4039d8 <log_oom_internal@plt>
  4067d0:	stur	w0, [x29, #-4]
  4067d4:	mov	w8, #0x1                   	// #1
  4067d8:	stur	w8, [x29, #-124]
  4067dc:	b	406aa8 <clock_supported@plt+0x27b0>
  4067e0:	mov	w8, #0x1                   	// #1
  4067e4:	stur	w8, [x29, #-72]
  4067e8:	ldur	w8, [x29, #-72]
  4067ec:	ldur	w9, [x29, #-8]
  4067f0:	cmp	w8, w9
  4067f4:	b.ge	406938 <clock_supported@plt+0x2640>  // b.tcont
  4067f8:	ldr	x8, [sp, #64]
  4067fc:	ldr	x9, [x8, #48]
  406800:	ldursw	x10, [x29, #-72]
  406804:	mov	x11, #0x8                   	// #8
  406808:	mul	x10, x11, x10
  40680c:	add	x9, x9, x10
  406810:	ldr	x0, [x9]
  406814:	sub	x1, x29, #0x44
  406818:	bl	403b68 <parse_ifindex_or_ifname@plt>
  40681c:	stur	w0, [x29, #-76]
  406820:	ldur	w12, [x29, #-76]
  406824:	cmp	w12, #0x0
  406828:	cset	w12, ge  // ge = tcont
  40682c:	tbnz	w12, #0, 4068d8 <clock_supported@plt+0x25e0>
  406830:	mov	w8, #0x3                   	// #3
  406834:	stur	w8, [x29, #-128]
  406838:	ldur	w8, [x29, #-76]
  40683c:	stur	w8, [x29, #-132]
  406840:	str	wzr, [sp, #136]
  406844:	ldr	w0, [sp, #136]
  406848:	bl	403a28 <log_get_max_level_realm@plt>
  40684c:	ldur	w8, [x29, #-128]
  406850:	and	w8, w8, #0x7
  406854:	cmp	w0, w8
  406858:	b.lt	4068a8 <clock_supported@plt+0x25b0>  // b.tstop
  40685c:	ldr	w8, [sp, #136]
  406860:	ldur	w9, [x29, #-128]
  406864:	orr	w0, w9, w8, lsl #10
  406868:	ldur	w1, [x29, #-132]
  40686c:	ldr	x10, [sp, #64]
  406870:	ldr	x11, [x10, #48]
  406874:	ldursw	x12, [x29, #-72]
  406878:	mov	x13, #0x8                   	// #8
  40687c:	mul	x12, x13, x12
  406880:	add	x11, x11, x12
  406884:	ldr	x6, [x11]
  406888:	ldr	x2, [sp, #56]
  40688c:	mov	w3, #0x740                 	// #1856
  406890:	ldr	x4, [sp, #48]
  406894:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  406898:	add	x5, x5, #0x77a
  40689c:	bl	403a38 <log_internal_realm@plt>
  4068a0:	str	w0, [sp, #40]
  4068a4:	b	4068bc <clock_supported@plt+0x25c4>
  4068a8:	ldur	w0, [x29, #-132]
  4068ac:	bl	403a48 <abs@plt>
  4068b0:	mov	w8, wzr
  4068b4:	subs	w8, w8, w0, uxtb
  4068b8:	str	w8, [sp, #40]
  4068bc:	ldr	w8, [sp, #40]
  4068c0:	str	w8, [sp, #132]
  4068c4:	ldr	w8, [sp, #132]
  4068c8:	stur	w8, [x29, #-4]
  4068cc:	mov	w8, #0x1                   	// #1
  4068d0:	stur	w8, [x29, #-124]
  4068d4:	b	406aa8 <clock_supported@plt+0x27b0>
  4068d8:	ldr	x8, [sp, #64]
  4068dc:	ldr	x0, [x8]
  4068e0:	ldursw	x9, [x29, #-68]
  4068e4:	mov	x1, x9
  4068e8:	bl	403b78 <set_put@plt>
  4068ec:	stur	w0, [x29, #-76]
  4068f0:	ldur	w10, [x29, #-76]
  4068f4:	cmp	w10, #0x0
  4068f8:	cset	w10, ge  // ge = tcont
  4068fc:	tbnz	w10, #0, 406928 <clock_supported@plt+0x2630>
  406900:	mov	w8, wzr
  406904:	mov	w0, w8
  406908:	ldr	x1, [sp, #56]
  40690c:	mov	w2, #0x744                 	// #1860
  406910:	ldr	x3, [sp, #48]
  406914:	bl	4039d8 <log_oom_internal@plt>
  406918:	stur	w0, [x29, #-4]
  40691c:	mov	w8, #0x1                   	// #1
  406920:	stur	w8, [x29, #-124]
  406924:	b	406aa8 <clock_supported@plt+0x27b0>
  406928:	ldur	w8, [x29, #-72]
  40692c:	add	w8, w8, #0x1
  406930:	stur	w8, [x29, #-72]
  406934:	b	4067e8 <clock_supported@plt+0x24f0>
  406938:	add	x8, sp, #0x70
  40693c:	mov	w9, #0xfffffffe            	// #-2
  406940:	str	w9, [sp, #112]
  406944:	mov	x10, xzr
  406948:	str	x10, [x8, #8]
  40694c:	ldr	q0, [sp, #112]
  406950:	stur	q0, [x29, #-96]
  406954:	ldr	x8, [sp, #64]
  406958:	ldr	x0, [x8]
  40695c:	sub	x1, x29, #0x60
  406960:	sub	x2, x29, #0x68
  406964:	bl	403b88 <set_iterate@plt>
  406968:	tbnz	w0, #0, 406970 <clock_supported@plt+0x2678>
  40696c:	b	406a9c <clock_supported@plt+0x27a4>
  406970:	ldur	x8, [x29, #-104]
  406974:	stur	w8, [x29, #-68]
  406978:	ldr	x9, [sp, #64]
  40697c:	ldr	x0, [x9, #8]
  406980:	ldur	w8, [x29, #-68]
  406984:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  406988:	add	x1, x1, #0xa96
  40698c:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  406990:	add	x2, x2, #0x7f6
  406994:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  406998:	add	x3, x3, #0x810
  40699c:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  4069a0:	add	x4, x4, #0x897
  4069a4:	sub	x5, x29, #0x30
  4069a8:	mov	x10, xzr
  4069ac:	mov	x6, x10
  4069b0:	adrp	x7, 413000 <clock_supported@plt+0xed08>
  4069b4:	add	x7, x7, #0x83b
  4069b8:	mov	x10, sp
  4069bc:	str	w8, [x10]
  4069c0:	bl	403ba8 <sd_bus_call_method@plt>
  4069c4:	stur	w0, [x29, #-76]
  4069c8:	ldur	w8, [x29, #-76]
  4069cc:	cmp	w8, #0x0
  4069d0:	cset	w8, ge  // ge = tcont
  4069d4:	tbnz	w8, #0, 406a98 <clock_supported@plt+0x27a0>
  4069d8:	mov	w8, #0x3                   	// #3
  4069dc:	str	w8, [sp, #88]
  4069e0:	ldur	w8, [x29, #-76]
  4069e4:	str	w8, [sp, #84]
  4069e8:	str	wzr, [sp, #80]
  4069ec:	ldr	w0, [sp, #80]
  4069f0:	bl	403a28 <log_get_max_level_realm@plt>
  4069f4:	ldr	w8, [sp, #88]
  4069f8:	and	w8, w8, #0x7
  4069fc:	cmp	w0, w8
  406a00:	b.lt	406a68 <clock_supported@plt+0x2770>  // b.tstop
  406a04:	ldr	w8, [sp, #80]
  406a08:	ldr	w9, [sp, #88]
  406a0c:	orr	w0, w9, w8, lsl #10
  406a10:	ldr	w1, [sp, #84]
  406a14:	ldur	w8, [x29, #-68]
  406a18:	str	w0, [sp, #36]
  406a1c:	mov	w0, w8
  406a20:	add	x10, sp, #0x5f
  406a24:	str	w1, [sp, #32]
  406a28:	mov	x1, x10
  406a2c:	mov	w2, #0x1                   	// #1
  406a30:	bl	403b98 <format_ifname_full@plt>
  406a34:	ldr	w8, [sp, #36]
  406a38:	str	x0, [sp, #24]
  406a3c:	mov	w0, w8
  406a40:	ldr	w1, [sp, #32]
  406a44:	ldr	x2, [sp, #56]
  406a48:	mov	w3, #0x753                 	// #1875
  406a4c:	ldr	x4, [sp, #48]
  406a50:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  406a54:	add	x5, x5, #0x8a7
  406a58:	ldr	x6, [sp, #24]
  406a5c:	bl	403a38 <log_internal_realm@plt>
  406a60:	str	w0, [sp, #20]
  406a64:	b	406a7c <clock_supported@plt+0x2784>
  406a68:	ldr	w0, [sp, #84]
  406a6c:	bl	403a48 <abs@plt>
  406a70:	mov	w8, wzr
  406a74:	subs	w8, w8, w0, uxtb
  406a78:	str	w8, [sp, #20]
  406a7c:	ldr	w8, [sp, #20]
  406a80:	str	w8, [sp, #76]
  406a84:	ldr	w8, [sp, #76]
  406a88:	stur	w8, [x29, #-4]
  406a8c:	mov	w8, #0x1                   	// #1
  406a90:	stur	w8, [x29, #-124]
  406a94:	b	406aa8 <clock_supported@plt+0x27b0>
  406a98:	b	406954 <clock_supported@plt+0x265c>
  406a9c:	stur	wzr, [x29, #-4]
  406aa0:	mov	w8, #0x1                   	// #1
  406aa4:	stur	w8, [x29, #-124]
  406aa8:	sub	x0, x29, #0x40
  406aac:	bl	40dd0c <clock_supported@plt+0x9a14>
  406ab0:	sub	x0, x29, #0x38
  406ab4:	bl	408a84 <clock_supported@plt+0x478c>
  406ab8:	sub	x0, x29, #0x30
  406abc:	bl	403bb8 <sd_bus_error_free@plt>
  406ac0:	ldur	w0, [x29, #-4]
  406ac4:	ldr	x28, [sp, #288]
  406ac8:	ldp	x29, x30, [sp, #272]
  406acc:	add	sp, sp, #0x130
  406ad0:	ret
  406ad4:	sub	sp, sp, #0x80
  406ad8:	stp	x29, x30, [sp, #112]
  406adc:	add	x29, sp, #0x70
  406ae0:	mov	x8, xzr
  406ae4:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  406ae8:	add	x9, x9, #0x31c
  406aec:	add	x9, x9, #0x3
  406af0:	add	x10, sp, #0x38
  406af4:	stur	w0, [x29, #-8]
  406af8:	stur	x1, [x29, #-16]
  406afc:	stur	x2, [x29, #-24]
  406b00:	stur	xzr, [x29, #-48]
  406b04:	stur	xzr, [x29, #-40]
  406b08:	stur	xzr, [x29, #-32]
  406b0c:	str	x8, [sp, #56]
  406b10:	mov	x0, x10
  406b14:	str	x9, [sp, #8]
  406b18:	bl	403b28 <sd_bus_open_system@plt>
  406b1c:	str	w0, [sp, #52]
  406b20:	ldr	w11, [sp, #52]
  406b24:	cmp	w11, #0x0
  406b28:	cset	w11, ge  // ge = tcont
  406b2c:	tbnz	w11, #0, 406bc0 <clock_supported@plt+0x28c8>
  406b30:	mov	w8, #0x3                   	// #3
  406b34:	str	w8, [sp, #48]
  406b38:	ldr	w8, [sp, #52]
  406b3c:	str	w8, [sp, #44]
  406b40:	str	wzr, [sp, #40]
  406b44:	ldr	w0, [sp, #40]
  406b48:	bl	403a28 <log_get_max_level_realm@plt>
  406b4c:	ldr	w8, [sp, #48]
  406b50:	and	w8, w8, #0x7
  406b54:	cmp	w0, w8
  406b58:	b.lt	406b90 <clock_supported@plt+0x2898>  // b.tstop
  406b5c:	ldr	w8, [sp, #40]
  406b60:	ldr	w9, [sp, #48]
  406b64:	orr	w0, w9, w8, lsl #10
  406b68:	ldr	w1, [sp, #44]
  406b6c:	ldr	x2, [sp, #8]
  406b70:	mov	w3, #0x71e                 	// #1822
  406b74:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  406b78:	add	x4, x4, #0x8d6
  406b7c:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  406b80:	add	x5, x5, #0xcd8
  406b84:	bl	403a38 <log_internal_realm@plt>
  406b88:	str	w0, [sp, #4]
  406b8c:	b	406ba4 <clock_supported@plt+0x28ac>
  406b90:	ldr	w0, [sp, #44]
  406b94:	bl	403a48 <abs@plt>
  406b98:	mov	w8, wzr
  406b9c:	subs	w8, w8, w0, uxtb
  406ba0:	str	w8, [sp, #4]
  406ba4:	ldr	w8, [sp, #4]
  406ba8:	str	w8, [sp, #36]
  406bac:	ldr	w8, [sp, #36]
  406bb0:	stur	w8, [x29, #-4]
  406bb4:	mov	w8, #0x1                   	// #1
  406bb8:	str	w8, [sp, #32]
  406bbc:	b	406ca8 <clock_supported@plt+0x29b0>
  406bc0:	ldr	x0, [sp, #56]
  406bc4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  406bc8:	add	x1, x1, #0xa96
  406bcc:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  406bd0:	add	x2, x2, #0x7f6
  406bd4:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  406bd8:	add	x3, x3, #0x810
  406bdc:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  406be0:	add	x4, x4, #0x8e2
  406be4:	sub	x5, x29, #0x30
  406be8:	mov	x8, xzr
  406bec:	mov	x6, x8
  406bf0:	mov	x7, x8
  406bf4:	bl	403ba8 <sd_bus_call_method@plt>
  406bf8:	str	w0, [sp, #52]
  406bfc:	ldr	w9, [sp, #52]
  406c00:	cmp	w9, #0x0
  406c04:	cset	w9, ge  // ge = tcont
  406c08:	tbnz	w9, #0, 406c9c <clock_supported@plt+0x29a4>
  406c0c:	mov	w8, #0x3                   	// #3
  406c10:	str	w8, [sp, #28]
  406c14:	ldr	w8, [sp, #52]
  406c18:	str	w8, [sp, #24]
  406c1c:	str	wzr, [sp, #20]
  406c20:	ldr	w0, [sp, #20]
  406c24:	bl	403a28 <log_get_max_level_realm@plt>
  406c28:	ldr	w8, [sp, #28]
  406c2c:	and	w8, w8, #0x7
  406c30:	cmp	w0, w8
  406c34:	b.lt	406c6c <clock_supported@plt+0x2974>  // b.tstop
  406c38:	ldr	w8, [sp, #20]
  406c3c:	ldr	w9, [sp, #28]
  406c40:	orr	w0, w9, w8, lsl #10
  406c44:	ldr	w1, [sp, #24]
  406c48:	ldr	x2, [sp, #8]
  406c4c:	mov	w3, #0x728                 	// #1832
  406c50:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  406c54:	add	x4, x4, #0x8d6
  406c58:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  406c5c:	add	x5, x5, #0x8e9
  406c60:	bl	403a38 <log_internal_realm@plt>
  406c64:	str	w0, [sp]
  406c68:	b	406c80 <clock_supported@plt+0x2988>
  406c6c:	ldr	w0, [sp, #24]
  406c70:	bl	403a48 <abs@plt>
  406c74:	mov	w8, wzr
  406c78:	subs	w8, w8, w0, uxtb
  406c7c:	str	w8, [sp]
  406c80:	ldr	w8, [sp]
  406c84:	str	w8, [sp, #16]
  406c88:	ldr	w8, [sp, #16]
  406c8c:	stur	w8, [x29, #-4]
  406c90:	mov	w8, #0x1                   	// #1
  406c94:	str	w8, [sp, #32]
  406c98:	b	406ca8 <clock_supported@plt+0x29b0>
  406c9c:	stur	wzr, [x29, #-4]
  406ca0:	mov	w8, #0x1                   	// #1
  406ca4:	str	w8, [sp, #32]
  406ca8:	add	x0, sp, #0x38
  406cac:	bl	408a84 <clock_supported@plt+0x478c>
  406cb0:	sub	x0, x29, #0x30
  406cb4:	bl	403bb8 <sd_bus_error_free@plt>
  406cb8:	ldur	w0, [x29, #-4]
  406cbc:	ldp	x29, x30, [sp, #112]
  406cc0:	add	sp, sp, #0x80
  406cc4:	ret
  406cc8:	sub	sp, sp, #0x20
  406ccc:	stp	x29, x30, [sp, #16]
  406cd0:	add	x29, sp, #0x10
  406cd4:	str	x0, [sp, #8]
  406cd8:	ldr	x8, [sp, #8]
  406cdc:	ldr	x8, [x8]
  406ce0:	cbz	x8, 406cf0 <clock_supported@plt+0x29f8>
  406ce4:	ldr	x8, [sp, #8]
  406ce8:	ldr	x0, [x8]
  406cec:	bl	403bc8 <sd_netlink_unref@plt>
  406cf0:	ldp	x29, x30, [sp, #16]
  406cf4:	add	sp, sp, #0x20
  406cf8:	ret
  406cfc:	sub	sp, sp, #0x20
  406d00:	stp	x29, x30, [sp, #16]
  406d04:	add	x29, sp, #0x10
  406d08:	str	x0, [sp, #8]
  406d0c:	ldr	x8, [sp, #8]
  406d10:	ldr	x8, [x8]
  406d14:	cbz	x8, 406d24 <clock_supported@plt+0x2a2c>
  406d18:	ldr	x8, [sp, #8]
  406d1c:	ldr	x0, [x8]
  406d20:	bl	4076a0 <clock_supported@plt+0x33a8>
  406d24:	ldp	x29, x30, [sp, #16]
  406d28:	add	sp, sp, #0x20
  406d2c:	ret
  406d30:	sub	sp, sp, #0x20
  406d34:	stp	x29, x30, [sp, #16]
  406d38:	add	x29, sp, #0x10
  406d3c:	str	x0, [sp, #8]
  406d40:	ldr	x8, [sp, #8]
  406d44:	ldr	x8, [x8]
  406d48:	cbz	x8, 406d58 <clock_supported@plt+0x2a60>
  406d4c:	ldr	x8, [sp, #8]
  406d50:	ldr	x0, [x8]
  406d54:	bl	403bd8 <table_unref@plt>
  406d58:	ldp	x29, x30, [sp, #16]
  406d5c:	add	sp, sp, #0x20
  406d60:	ret
  406d64:	sub	sp, sp, #0xe0
  406d68:	stp	x29, x30, [sp, #208]
  406d6c:	add	x29, sp, #0xd0
  406d70:	mov	x8, xzr
  406d74:	mov	w9, #0xffffffff            	// #-1
  406d78:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  406d7c:	add	x10, x10, #0x31c
  406d80:	add	x10, x10, #0x3
  406d84:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  406d88:	add	x11, x11, #0x857
  406d8c:	stur	x0, [x29, #-16]
  406d90:	stur	x1, [x29, #-24]
  406d94:	stur	x2, [x29, #-32]
  406d98:	stur	x3, [x29, #-40]
  406d9c:	stur	x8, [x29, #-48]
  406da0:	stur	x8, [x29, #-56]
  406da4:	stur	x8, [x29, #-64]
  406da8:	stur	w9, [x29, #-68]
  406dac:	stur	xzr, [x29, #-80]
  406db0:	stur	xzr, [x29, #-88]
  406db4:	str	x10, [sp, #32]
  406db8:	str	x11, [sp, #24]
  406dbc:	ldur	x8, [x29, #-24]
  406dc0:	cmp	x8, #0x0
  406dc4:	cset	w9, ne  // ne = any
  406dc8:	mov	w10, #0x1                   	// #1
  406dcc:	eor	w9, w9, #0x1
  406dd0:	eor	w9, w9, w10
  406dd4:	eor	w9, w9, w10
  406dd8:	and	w9, w9, #0x1
  406ddc:	mov	w0, w9
  406de0:	sxtw	x8, w0
  406de4:	cbz	x8, 406e08 <clock_supported@plt+0x2b10>
  406de8:	mov	w8, wzr
  406dec:	mov	w0, w8
  406df0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  406df4:	add	x1, x1, #0x852
  406df8:	ldr	x2, [sp, #32]
  406dfc:	mov	w3, #0x1a8                 	// #424
  406e00:	ldr	x4, [sp, #24]
  406e04:	bl	403958 <log_assert_failed_realm@plt>
  406e08:	ldur	x8, [x29, #-40]
  406e0c:	cmp	x8, #0x0
  406e10:	cset	w9, ne  // ne = any
  406e14:	mov	w10, #0x1                   	// #1
  406e18:	eor	w9, w9, #0x1
  406e1c:	eor	w9, w9, w10
  406e20:	eor	w9, w9, w10
  406e24:	and	w9, w9, #0x1
  406e28:	mov	w0, w9
  406e2c:	sxtw	x8, w0
  406e30:	cbz	x8, 406e54 <clock_supported@plt+0x2b5c>
  406e34:	mov	w8, wzr
  406e38:	mov	w0, w8
  406e3c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  406e40:	add	x1, x1, #0x89b
  406e44:	ldr	x2, [sp, #32]
  406e48:	mov	w3, #0x1a9                 	// #425
  406e4c:	ldr	x4, [sp, #24]
  406e50:	bl	403958 <log_assert_failed_realm@plt>
  406e54:	ldur	x0, [x29, #-24]
  406e58:	sub	x1, x29, #0x30
  406e5c:	mov	w2, #0x12                  	// #18
  406e60:	mov	w8, wzr
  406e64:	mov	w3, w8
  406e68:	bl	403be8 <sd_rtnl_message_new_link@plt>
  406e6c:	str	w0, [sp, #100]
  406e70:	ldr	w8, [sp, #100]
  406e74:	cmp	w8, #0x0
  406e78:	cset	w8, ge  // ge = tcont
  406e7c:	tbnz	w8, #0, 406e98 <clock_supported@plt+0x2ba0>
  406e80:	ldr	w0, [sp, #100]
  406e84:	bl	403bf8 <rtnl_log_create_error@plt>
  406e88:	stur	w0, [x29, #-4]
  406e8c:	mov	w8, #0x1                   	// #1
  406e90:	str	w8, [sp, #96]
  406e94:	b	4071d4 <clock_supported@plt+0x2edc>
  406e98:	ldur	x0, [x29, #-48]
  406e9c:	mov	w1, #0x1                   	// #1
  406ea0:	bl	403c08 <sd_netlink_message_request_dump@plt>
  406ea4:	str	w0, [sp, #100]
  406ea8:	ldr	w8, [sp, #100]
  406eac:	cmp	w8, #0x0
  406eb0:	cset	w8, ge  // ge = tcont
  406eb4:	tbnz	w8, #0, 406ed0 <clock_supported@plt+0x2bd8>
  406eb8:	ldr	w0, [sp, #100]
  406ebc:	bl	403bf8 <rtnl_log_create_error@plt>
  406ec0:	stur	w0, [x29, #-4]
  406ec4:	mov	w8, #0x1                   	// #1
  406ec8:	str	w8, [sp, #96]
  406ecc:	b	4071d4 <clock_supported@plt+0x2edc>
  406ed0:	ldur	x0, [x29, #-24]
  406ed4:	ldur	x1, [x29, #-48]
  406ed8:	mov	x8, xzr
  406edc:	mov	x2, x8
  406ee0:	sub	x3, x29, #0x38
  406ee4:	bl	403c18 <sd_netlink_call@plt>
  406ee8:	str	w0, [sp, #100]
  406eec:	ldr	w9, [sp, #100]
  406ef0:	cmp	w9, #0x0
  406ef4:	cset	w9, ge  // ge = tcont
  406ef8:	tbnz	w9, #0, 406f8c <clock_supported@plt+0x2c94>
  406efc:	mov	w8, #0x3                   	// #3
  406f00:	str	w8, [sp, #92]
  406f04:	ldr	w8, [sp, #100]
  406f08:	str	w8, [sp, #88]
  406f0c:	str	wzr, [sp, #84]
  406f10:	ldr	w0, [sp, #84]
  406f14:	bl	403a28 <log_get_max_level_realm@plt>
  406f18:	ldr	w8, [sp, #92]
  406f1c:	and	w8, w8, #0x7
  406f20:	cmp	w0, w8
  406f24:	b.lt	406f5c <clock_supported@plt+0x2c64>  // b.tstop
  406f28:	ldr	w8, [sp, #84]
  406f2c:	ldr	w9, [sp, #92]
  406f30:	orr	w0, w9, w8, lsl #10
  406f34:	ldr	w1, [sp, #88]
  406f38:	ldr	x2, [sp, #32]
  406f3c:	mov	w3, #0x1b5                 	// #437
  406f40:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  406f44:	add	x4, x4, #0x89f
  406f48:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  406f4c:	add	x5, x5, #0x8b1
  406f50:	bl	403a38 <log_internal_realm@plt>
  406f54:	str	w0, [sp, #20]
  406f58:	b	406f70 <clock_supported@plt+0x2c78>
  406f5c:	ldr	w0, [sp, #88]
  406f60:	bl	403a48 <abs@plt>
  406f64:	mov	w8, wzr
  406f68:	subs	w8, w8, w0, uxtb
  406f6c:	str	w8, [sp, #20]
  406f70:	ldr	w8, [sp, #20]
  406f74:	str	w8, [sp, #80]
  406f78:	ldr	w8, [sp, #80]
  406f7c:	stur	w8, [x29, #-4]
  406f80:	mov	w8, #0x1                   	// #1
  406f84:	str	w8, [sp, #96]
  406f88:	b	4071d4 <clock_supported@plt+0x2edc>
  406f8c:	ldur	x8, [x29, #-56]
  406f90:	str	x8, [sp, #104]
  406f94:	ldr	x8, [sp, #104]
  406f98:	cbz	x8, 407138 <clock_supported@plt+0x2e40>
  406f9c:	ldur	x8, [x29, #-88]
  406fa0:	add	x2, x8, #0x2
  406fa4:	sub	x0, x29, #0x40
  406fa8:	sub	x1, x29, #0x50
  406fac:	mov	x3, #0x1c8                 	// #456
  406fb0:	bl	403c28 <greedy_realloc0@plt>
  406fb4:	cbnz	x0, 406fcc <clock_supported@plt+0x2cd4>
  406fb8:	mov	w8, #0xfffffff4            	// #-12
  406fbc:	stur	w8, [x29, #-4]
  406fc0:	mov	w8, #0x1                   	// #1
  406fc4:	str	w8, [sp, #96]
  406fc8:	b	4071d4 <clock_supported@plt+0x2edc>
  406fcc:	ldr	x0, [sp, #104]
  406fd0:	ldur	x8, [x29, #-64]
  406fd4:	ldur	x9, [x29, #-88]
  406fd8:	mov	x10, #0x1c8                 	// #456
  406fdc:	mul	x9, x10, x9
  406fe0:	add	x1, x8, x9
  406fe4:	ldur	x2, [x29, #-32]
  406fe8:	bl	4077f4 <clock_supported@plt+0x34fc>
  406fec:	str	w0, [sp, #100]
  406ff0:	ldr	w11, [sp, #100]
  406ff4:	cmp	w11, #0x0
  406ff8:	cset	w11, ge  // ge = tcont
  406ffc:	tbnz	w11, #0, 407014 <clock_supported@plt+0x2d1c>
  407000:	ldr	w8, [sp, #100]
  407004:	stur	w8, [x29, #-4]
  407008:	mov	w8, #0x1                   	// #1
  40700c:	str	w8, [sp, #96]
  407010:	b	4071d4 <clock_supported@plt+0x2edc>
  407014:	ldr	w8, [sp, #100]
  407018:	cbnz	w8, 407020 <clock_supported@plt+0x2d28>
  40701c:	b	407128 <clock_supported@plt+0x2e30>
  407020:	ldur	x8, [x29, #-64]
  407024:	ldur	x9, [x29, #-88]
  407028:	mov	x10, #0x1c8                 	// #456
  40702c:	mul	x9, x10, x9
  407030:	add	x8, x8, x9
  407034:	ldrh	w11, [x8, #454]
  407038:	and	w11, w11, #0xfffffeff
  40703c:	orr	w11, w11, #0x100
  407040:	strh	w11, [x8, #454]
  407044:	ldur	x8, [x29, #-64]
  407048:	ldur	x9, [x29, #-88]
  40704c:	mov	x10, #0x1c8                 	// #456
  407050:	mul	x9, x10, x9
  407054:	add	x8, x8, x9
  407058:	ldr	w3, [x8, #96]
  40705c:	add	x0, sp, #0x42
  407060:	mov	x1, #0xe                   	// #14
  407064:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  407068:	add	x2, x2, #0x8cf
  40706c:	bl	403c38 <snprintf@plt>
  407070:	mov	w1, w0
  407074:	sxtw	x8, w1
  407078:	cmp	x8, #0xe
  40707c:	cset	w11, cc  // cc = lo, ul, last
  407080:	mov	w12, #0x1                   	// #1
  407084:	eor	w11, w11, #0x1
  407088:	eor	w11, w11, w12
  40708c:	eor	w11, w11, w12
  407090:	and	w11, w11, #0x1
  407094:	mov	w1, w11
  407098:	sxtw	x8, w1
  40709c:	cbz	x8, 4070c0 <clock_supported@plt+0x2dc8>
  4070a0:	mov	w8, wzr
  4070a4:	mov	w0, w8
  4070a8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4070ac:	add	x1, x1, #0x8d3
  4070b0:	ldr	x2, [sp, #32]
  4070b4:	mov	w3, #0x1c4                 	// #452
  4070b8:	ldr	x4, [sp, #24]
  4070bc:	bl	403958 <log_assert_failed_realm@plt>
  4070c0:	ldur	x8, [x29, #-64]
  4070c4:	ldur	x9, [x29, #-88]
  4070c8:	mov	x10, #0x1c8                 	// #456
  4070cc:	mul	x9, x10, x9
  4070d0:	add	x8, x8, x9
  4070d4:	add	x0, x8, #0x58
  4070d8:	add	x1, sp, #0x42
  4070dc:	str	x10, [sp, #8]
  4070e0:	bl	403c48 <sd_device_new_from_device_id@plt>
  4070e4:	ldur	x8, [x29, #-64]
  4070e8:	ldur	x9, [x29, #-88]
  4070ec:	ldr	x10, [sp, #8]
  4070f0:	mul	x9, x10, x9
  4070f4:	add	x1, x8, x9
  4070f8:	sub	x8, x29, #0x44
  4070fc:	mov	x0, x8
  407100:	bl	407c64 <clock_supported@plt+0x396c>
  407104:	ldur	x8, [x29, #-64]
  407108:	ldur	x9, [x29, #-88]
  40710c:	ldr	x10, [sp, #8]
  407110:	mul	x9, x10, x9
  407114:	add	x0, x8, x9
  407118:	bl	407cd0 <clock_supported@plt+0x39d8>
  40711c:	ldur	x8, [x29, #-88]
  407120:	add	x8, x8, #0x1
  407124:	stur	x8, [x29, #-88]
  407128:	ldr	x0, [sp, #104]
  40712c:	bl	403c58 <sd_netlink_message_next@plt>
  407130:	str	x0, [sp, #104]
  407134:	b	406f94 <clock_supported@plt+0x2c9c>
  407138:	adrp	x8, 407000 <clock_supported@plt+0x2d08>
  40713c:	add	x8, x8, #0xfc0
  407140:	str	x8, [sp, #56]
  407144:	ldur	x0, [x29, #-64]
  407148:	ldur	x1, [x29, #-88]
  40714c:	ldr	x3, [sp, #56]
  407150:	mov	x2, #0x1c8                 	// #456
  407154:	bl	408030 <clock_supported@plt+0x3d38>
  407158:	ldur	x8, [x29, #-16]
  40715c:	cbz	x8, 4071a0 <clock_supported@plt+0x2ea8>
  407160:	stur	xzr, [x29, #-96]
  407164:	ldur	x8, [x29, #-96]
  407168:	ldur	x9, [x29, #-88]
  40716c:	cmp	x8, x9
  407170:	b.cs	4071a0 <clock_supported@plt+0x2ea8>  // b.hs, b.nlast
  407174:	ldur	x0, [x29, #-16]
  407178:	ldur	x8, [x29, #-64]
  40717c:	ldur	x9, [x29, #-96]
  407180:	mov	x10, #0x1c8                 	// #456
  407184:	mul	x9, x10, x9
  407188:	add	x1, x8, x9
  40718c:	bl	4080dc <clock_supported@plt+0x3de4>
  407190:	ldur	x8, [x29, #-96]
  407194:	add	x8, x8, #0x1
  407198:	stur	x8, [x29, #-96]
  40719c:	b	407164 <clock_supported@plt+0x2e6c>
  4071a0:	ldur	x8, [x29, #-64]
  4071a4:	str	x8, [sp, #48]
  4071a8:	mov	x8, xzr
  4071ac:	stur	x8, [x29, #-64]
  4071b0:	ldr	x8, [sp, #48]
  4071b4:	str	x8, [sp, #40]
  4071b8:	ldr	x8, [sp, #40]
  4071bc:	ldur	x9, [x29, #-40]
  4071c0:	str	x8, [x9]
  4071c4:	ldur	x8, [x29, #-88]
  4071c8:	stur	w8, [x29, #-4]
  4071cc:	mov	w8, #0x1                   	// #1
  4071d0:	str	w8, [sp, #96]
  4071d4:	sub	x0, x29, #0x44
  4071d8:	bl	4077cc <clock_supported@plt+0x34d4>
  4071dc:	sub	x0, x29, #0x40
  4071e0:	bl	406cfc <clock_supported@plt+0x2a04>
  4071e4:	sub	x0, x29, #0x38
  4071e8:	bl	407798 <clock_supported@plt+0x34a0>
  4071ec:	sub	x0, x29, #0x30
  4071f0:	bl	407798 <clock_supported@plt+0x34a0>
  4071f4:	ldur	w0, [x29, #-4]
  4071f8:	ldp	x29, x30, [sp, #208]
  4071fc:	add	sp, sp, #0xe0
  407200:	ret
  407204:	sub	sp, sp, #0x70
  407208:	stp	x29, x30, [sp, #96]
  40720c:	add	x29, sp, #0x60
  407210:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  407214:	add	x8, x8, #0x31c
  407218:	add	x8, x8, #0x3
  40721c:	stur	x0, [x29, #-8]
  407220:	stur	x1, [x29, #-16]
  407224:	stur	x2, [x29, #-24]
  407228:	stur	x3, [x29, #-32]
  40722c:	str	x8, [sp, #8]
  407230:	ldur	x8, [x29, #-24]
  407234:	cmp	x8, #0x0
  407238:	cset	w9, ne  // ne = any
  40723c:	mov	w10, #0x1                   	// #1
  407240:	eor	w9, w9, #0x1
  407244:	eor	w9, w9, w10
  407248:	eor	w9, w9, w10
  40724c:	and	w9, w9, #0x1
  407250:	mov	w0, w9
  407254:	sxtw	x8, w0
  407258:	cbz	x8, 407280 <clock_supported@plt+0x2f88>
  40725c:	mov	w8, wzr
  407260:	mov	w0, w8
  407264:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  407268:	add	x1, x1, #0xbb2
  40726c:	ldr	x2, [sp, #8]
  407270:	mov	w3, #0x55                  	// #85
  407274:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  407278:	add	x4, x4, #0xbb5
  40727c:	bl	403958 <log_assert_failed_realm@plt>
  407280:	ldur	x8, [x29, #-32]
  407284:	cmp	x8, #0x0
  407288:	cset	w9, ne  // ne = any
  40728c:	mov	w10, #0x1                   	// #1
  407290:	eor	w9, w9, #0x1
  407294:	eor	w9, w9, w10
  407298:	eor	w9, w9, w10
  40729c:	and	w9, w9, #0x1
  4072a0:	mov	w0, w9
  4072a4:	sxtw	x8, w0
  4072a8:	cbz	x8, 4072d0 <clock_supported@plt+0x2fd8>
  4072ac:	mov	w8, wzr
  4072b0:	mov	w0, w8
  4072b4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4072b8:	add	x1, x1, #0xc0f
  4072bc:	ldr	x2, [sp, #8]
  4072c0:	mov	w3, #0x56                  	// #86
  4072c4:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  4072c8:	add	x4, x4, #0xbb5
  4072cc:	bl	403958 <log_assert_failed_realm@plt>
  4072d0:	ldur	x8, [x29, #-16]
  4072d4:	stur	x8, [x29, #-40]
  4072d8:	ldur	x8, [x29, #-40]
  4072dc:	mov	w9, #0x0                   	// #0
  4072e0:	str	w9, [sp, #4]
  4072e4:	cbz	x8, 407324 <clock_supported@plt+0x302c>
  4072e8:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  4072ec:	add	x8, x8, #0x8
  4072f0:	ldr	q0, [x8]
  4072f4:	add	x0, sp, #0x10
  4072f8:	str	q0, [sp, #16]
  4072fc:	ldr	x8, [x8, #16]
  407300:	str	x8, [sp, #32]
  407304:	ldur	x1, [x29, #-40]
  407308:	bl	403c68 <strv_find@plt>
  40730c:	cmp	x0, #0x0
  407310:	cset	w9, ne  // ne = any
  407314:	mov	w10, #0x1                   	// #1
  407318:	eor	w9, w9, #0x1
  40731c:	eor	w9, w9, w10
  407320:	str	w9, [sp, #4]
  407324:	ldr	w8, [sp, #4]
  407328:	and	w8, w8, #0x1
  40732c:	stur	w8, [x29, #-44]
  407330:	ldur	w8, [x29, #-44]
  407334:	cbnz	w8, 407368 <clock_supported@plt+0x3070>
  407338:	ldur	x0, [x29, #-8]
  40733c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  407340:	add	x1, x1, #0xc25
  407344:	bl	40890c <clock_supported@plt+0x4614>
  407348:	tbnz	w0, #0, 407350 <clock_supported@plt+0x3058>
  40734c:	b	407384 <clock_supported@plt+0x308c>
  407350:	ldur	x0, [x29, #-16]
  407354:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  407358:	add	x1, x1, #0xc28
  40735c:	bl	40890c <clock_supported@plt+0x4614>
  407360:	tbnz	w0, #0, 407368 <clock_supported@plt+0x3070>
  407364:	b	407384 <clock_supported@plt+0x308c>
  407368:	bl	408978 <clock_supported@plt+0x4680>
  40736c:	ldur	x8, [x29, #-24]
  407370:	str	x0, [x8]
  407374:	bl	404a7c <clock_supported@plt+0x784>
  407378:	ldur	x8, [x29, #-32]
  40737c:	str	x0, [x8]
  407380:	b	4073d0 <clock_supported@plt+0x30d8>
  407384:	ldur	x0, [x29, #-16]
  407388:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40738c:	add	x1, x1, #0xc30
  407390:	bl	40890c <clock_supported@plt+0x4614>
  407394:	tbnz	w0, #0, 40739c <clock_supported@plt+0x30a4>
  407398:	b	4073b8 <clock_supported@plt+0x30c0>
  40739c:	bl	4089bc <clock_supported@plt+0x46c4>
  4073a0:	ldur	x8, [x29, #-24]
  4073a4:	str	x0, [x8]
  4073a8:	bl	404a7c <clock_supported@plt+0x784>
  4073ac:	ldur	x8, [x29, #-32]
  4073b0:	str	x0, [x8]
  4073b4:	b	4073d0 <clock_supported@plt+0x30d8>
  4073b8:	ldur	x8, [x29, #-32]
  4073bc:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  4073c0:	add	x9, x9, #0x6c7
  4073c4:	str	x9, [x8]
  4073c8:	ldur	x8, [x29, #-24]
  4073cc:	str	x9, [x8]
  4073d0:	ldp	x29, x30, [sp, #96]
  4073d4:	add	sp, sp, #0x70
  4073d8:	ret
  4073dc:	sub	sp, sp, #0x60
  4073e0:	stp	x29, x30, [sp, #80]
  4073e4:	add	x29, sp, #0x50
  4073e8:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  4073ec:	add	x8, x8, #0x31c
  4073f0:	add	x8, x8, #0x3
  4073f4:	stur	x0, [x29, #-8]
  4073f8:	stur	x1, [x29, #-16]
  4073fc:	stur	x2, [x29, #-24]
  407400:	str	x8, [sp, #8]
  407404:	ldur	x8, [x29, #-16]
  407408:	cmp	x8, #0x0
  40740c:	cset	w9, ne  // ne = any
  407410:	mov	w10, #0x1                   	// #1
  407414:	eor	w9, w9, #0x1
  407418:	eor	w9, w9, w10
  40741c:	eor	w9, w9, w10
  407420:	and	w9, w9, #0x1
  407424:	mov	w0, w9
  407428:	sxtw	x8, w0
  40742c:	cbz	x8, 407454 <clock_supported@plt+0x315c>
  407430:	mov	w8, wzr
  407434:	mov	w0, w8
  407438:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40743c:	add	x1, x1, #0xbb2
  407440:	ldr	x2, [sp, #8]
  407444:	mov	w3, #0x64                  	// #100
  407448:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40744c:	add	x4, x4, #0xc53
  407450:	bl	403958 <log_assert_failed_realm@plt>
  407454:	ldur	x8, [x29, #-24]
  407458:	cmp	x8, #0x0
  40745c:	cset	w9, ne  // ne = any
  407460:	mov	w10, #0x1                   	// #1
  407464:	eor	w9, w9, #0x1
  407468:	eor	w9, w9, w10
  40746c:	eor	w9, w9, w10
  407470:	and	w9, w9, #0x1
  407474:	mov	w0, w9
  407478:	sxtw	x8, w0
  40747c:	cbz	x8, 4074a4 <clock_supported@plt+0x31ac>
  407480:	mov	w8, wzr
  407484:	mov	w0, w8
  407488:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40748c:	add	x1, x1, #0xc0f
  407490:	ldr	x2, [sp, #8]
  407494:	mov	w3, #0x65                  	// #101
  407498:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40749c:	add	x4, x4, #0xc53
  4074a0:	bl	403958 <log_assert_failed_realm@plt>
  4074a4:	ldur	x0, [x29, #-8]
  4074a8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4074ac:	add	x1, x1, #0xc99
  4074b0:	bl	40890c <clock_supported@plt+0x4614>
  4074b4:	tbnz	w0, #0, 4074bc <clock_supported@plt+0x31c4>
  4074b8:	b	4074d8 <clock_supported@plt+0x31e0>
  4074bc:	bl	408978 <clock_supported@plt+0x4680>
  4074c0:	ldur	x8, [x29, #-16]
  4074c4:	str	x0, [x8]
  4074c8:	bl	404a7c <clock_supported@plt+0x784>
  4074cc:	ldur	x8, [x29, #-24]
  4074d0:	str	x0, [x8]
  4074d4:	b	4075a8 <clock_supported@plt+0x32b0>
  4074d8:	ldur	x0, [x29, #-8]
  4074dc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4074e0:	add	x1, x1, #0xca4
  4074e4:	bl	40890c <clock_supported@plt+0x4614>
  4074e8:	tbnz	w0, #0, 4074f0 <clock_supported@plt+0x31f8>
  4074ec:	b	40750c <clock_supported@plt+0x3214>
  4074f0:	bl	4089bc <clock_supported@plt+0x46c4>
  4074f4:	ldur	x8, [x29, #-16]
  4074f8:	str	x0, [x8]
  4074fc:	bl	404a7c <clock_supported@plt+0x784>
  407500:	ldur	x8, [x29, #-24]
  407504:	str	x0, [x8]
  407508:	b	4075a8 <clock_supported@plt+0x32b0>
  40750c:	ldur	x8, [x29, #-8]
  407510:	stur	x8, [x29, #-32]
  407514:	ldur	x8, [x29, #-32]
  407518:	mov	w9, #0x0                   	// #0
  40751c:	str	w9, [sp, #4]
  407520:	cbz	x8, 407560 <clock_supported@plt+0x3268>
  407524:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  407528:	add	x8, x8, #0x20
  40752c:	ldr	q0, [x8]
  407530:	add	x0, sp, #0x10
  407534:	str	q0, [sp, #16]
  407538:	ldr	x8, [x8, #16]
  40753c:	str	x8, [sp, #32]
  407540:	ldur	x1, [x29, #-32]
  407544:	bl	403c68 <strv_find@plt>
  407548:	cmp	x0, #0x0
  40754c:	cset	w9, ne  // ne = any
  407550:	mov	w10, #0x1                   	// #1
  407554:	eor	w9, w9, #0x1
  407558:	eor	w9, w9, w10
  40755c:	str	w9, [sp, #4]
  407560:	ldr	w8, [sp, #4]
  407564:	and	w8, w8, #0x1
  407568:	stur	w8, [x29, #-36]
  40756c:	ldur	w8, [x29, #-36]
  407570:	cbz	w8, 407590 <clock_supported@plt+0x3298>
  407574:	bl	408a00 <clock_supported@plt+0x4708>
  407578:	ldur	x8, [x29, #-16]
  40757c:	str	x0, [x8]
  407580:	bl	404a7c <clock_supported@plt+0x784>
  407584:	ldur	x8, [x29, #-24]
  407588:	str	x0, [x8]
  40758c:	b	4075a8 <clock_supported@plt+0x32b0>
  407590:	ldur	x8, [x29, #-24]
  407594:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  407598:	add	x9, x9, #0x6c7
  40759c:	str	x9, [x8]
  4075a0:	ldur	x8, [x29, #-16]
  4075a4:	str	x9, [x8]
  4075a8:	ldp	x29, x30, [sp, #80]
  4075ac:	add	sp, sp, #0x60
  4075b0:	ret
  4075b4:	sub	sp, sp, #0x40
  4075b8:	stp	x29, x30, [sp, #48]
  4075bc:	add	x29, sp, #0x30
  4075c0:	sturh	w0, [x29, #-10]
  4075c4:	str	x1, [sp, #24]
  4075c8:	ldr	x8, [sp, #24]
  4075cc:	cbz	x8, 407604 <clock_supported@plt+0x330c>
  4075d0:	ldr	x0, [sp, #24]
  4075d4:	add	x1, sp, #0x8
  4075d8:	bl	403c78 <sd_device_get_devtype@plt>
  4075dc:	cmp	w0, #0x0
  4075e0:	cset	w8, lt  // lt = tstop
  4075e4:	tbnz	w8, #0, 407604 <clock_supported@plt+0x330c>
  4075e8:	ldr	x0, [sp, #8]
  4075ec:	bl	408a44 <clock_supported@plt+0x474c>
  4075f0:	tbnz	w0, #0, 407604 <clock_supported@plt+0x330c>
  4075f4:	ldr	x0, [sp, #8]
  4075f8:	bl	403af8 <strdup@plt>
  4075fc:	stur	x0, [x29, #-8]
  407600:	b	407654 <clock_supported@plt+0x335c>
  407604:	ldurh	w0, [x29, #-10]
  407608:	bl	403c88 <arphrd_to_name@plt>
  40760c:	str	x0, [sp, #16]
  407610:	ldr	x8, [sp, #16]
  407614:	cbnz	x8, 407624 <clock_supported@plt+0x332c>
  407618:	mov	x8, xzr
  40761c:	stur	x8, [x29, #-8]
  407620:	b	407654 <clock_supported@plt+0x335c>
  407624:	ldr	x0, [sp, #16]
  407628:	bl	403af8 <strdup@plt>
  40762c:	str	x0, [sp]
  407630:	ldr	x8, [sp]
  407634:	cbnz	x8, 407644 <clock_supported@plt+0x334c>
  407638:	mov	x8, xzr
  40763c:	stur	x8, [x29, #-8]
  407640:	b	407654 <clock_supported@plt+0x335c>
  407644:	ldr	x0, [sp]
  407648:	bl	403c98 <ascii_strlower@plt>
  40764c:	ldr	x8, [sp]
  407650:	stur	x8, [x29, #-8]
  407654:	ldur	x0, [x29, #-8]
  407658:	ldp	x29, x30, [sp, #48]
  40765c:	add	sp, sp, #0x40
  407660:	ret
  407664:	sub	sp, sp, #0x20
  407668:	str	x0, [sp, #24]
  40766c:	ldr	x8, [sp, #24]
  407670:	str	x8, [sp, #16]
  407674:	cbz	x8, 407684 <clock_supported@plt+0x338c>
  407678:	ldr	x8, [sp, #16]
  40767c:	str	x8, [sp, #8]
  407680:	b	407690 <clock_supported@plt+0x3398>
  407684:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  407688:	add	x8, x8, #0xcc8
  40768c:	str	x8, [sp, #8]
  407690:	ldr	x8, [sp, #8]
  407694:	mov	x0, x8
  407698:	add	sp, sp, #0x20
  40769c:	ret
  4076a0:	sub	sp, sp, #0x30
  4076a4:	stp	x29, x30, [sp, #32]
  4076a8:	add	x29, sp, #0x20
  4076ac:	stur	x0, [x29, #-8]
  4076b0:	stur	wzr, [x29, #-12]
  4076b4:	ldur	x8, [x29, #-8]
  4076b8:	mov	w9, #0x0                   	// #0
  4076bc:	str	w9, [sp, #16]
  4076c0:	cbz	x8, 4076f0 <clock_supported@plt+0x33f8>
  4076c4:	ldur	x8, [x29, #-8]
  4076c8:	ldur	w9, [x29, #-12]
  4076cc:	mov	w10, w9
  4076d0:	mov	x11, #0x1c8                 	// #456
  4076d4:	mul	x10, x11, x10
  4076d8:	add	x8, x8, x10
  4076dc:	ldrh	w9, [x8, #454]
  4076e0:	mov	w12, #0x8                   	// #8
  4076e4:	lsr	w9, w9, w12
  4076e8:	and	w9, w9, #0x1
  4076ec:	str	w9, [sp, #16]
  4076f0:	ldr	w8, [sp, #16]
  4076f4:	tbnz	w8, #0, 4076fc <clock_supported@plt+0x3404>
  4076f8:	b	407754 <clock_supported@plt+0x345c>
  4076fc:	ldur	x8, [x29, #-8]
  407700:	ldur	w9, [x29, #-12]
  407704:	mov	w10, w9
  407708:	mov	x11, #0x1c8                 	// #456
  40770c:	mul	x10, x11, x10
  407710:	add	x8, x8, x10
  407714:	ldr	x0, [x8, #88]
  407718:	str	x11, [sp, #8]
  40771c:	bl	403ca8 <sd_device_unref@plt>
  407720:	ldur	x8, [x29, #-8]
  407724:	ldur	w9, [x29, #-12]
  407728:	mov	w10, w9
  40772c:	ldr	x11, [sp, #8]
  407730:	mul	x10, x11, x10
  407734:	add	x8, x8, x10
  407738:	ldr	x8, [x8, #440]
  40773c:	mov	x0, x8
  407740:	bl	4039f8 <free@plt>
  407744:	ldur	w8, [x29, #-12]
  407748:	add	w8, w8, #0x1
  40774c:	stur	w8, [x29, #-12]
  407750:	b	4076b4 <clock_supported@plt+0x33bc>
  407754:	ldur	x0, [x29, #-8]
  407758:	bl	407768 <clock_supported@plt+0x3470>
  40775c:	ldp	x29, x30, [sp, #32]
  407760:	add	sp, sp, #0x30
  407764:	ret
  407768:	sub	sp, sp, #0x20
  40776c:	stp	x29, x30, [sp, #16]
  407770:	add	x29, sp, #0x10
  407774:	mov	x8, xzr
  407778:	str	x0, [sp, #8]
  40777c:	ldr	x0, [sp, #8]
  407780:	str	x8, [sp]
  407784:	bl	4039f8 <free@plt>
  407788:	ldr	x0, [sp]
  40778c:	ldp	x29, x30, [sp, #16]
  407790:	add	sp, sp, #0x20
  407794:	ret
  407798:	sub	sp, sp, #0x20
  40779c:	stp	x29, x30, [sp, #16]
  4077a0:	add	x29, sp, #0x10
  4077a4:	str	x0, [sp, #8]
  4077a8:	ldr	x8, [sp, #8]
  4077ac:	ldr	x8, [x8]
  4077b0:	cbz	x8, 4077c0 <clock_supported@plt+0x34c8>
  4077b4:	ldr	x8, [sp, #8]
  4077b8:	ldr	x0, [x8]
  4077bc:	bl	403cb8 <sd_netlink_message_unref@plt>
  4077c0:	ldp	x29, x30, [sp, #16]
  4077c4:	add	sp, sp, #0x20
  4077c8:	ret
  4077cc:	sub	sp, sp, #0x20
  4077d0:	stp	x29, x30, [sp, #16]
  4077d4:	add	x29, sp, #0x10
  4077d8:	str	x0, [sp, #8]
  4077dc:	ldr	x8, [sp, #8]
  4077e0:	ldr	w0, [x8]
  4077e4:	bl	403cc8 <safe_close@plt>
  4077e8:	ldp	x29, x30, [sp, #16]
  4077ec:	add	sp, sp, #0x20
  4077f0:	ret
  4077f4:	sub	sp, sp, #0x80
  4077f8:	stp	x29, x30, [sp, #112]
  4077fc:	add	x29, sp, #0x70
  407800:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  407804:	add	x8, x8, #0x31c
  407808:	add	x8, x8, #0x3
  40780c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  407810:	add	x9, x9, #0x8fa
  407814:	stur	x0, [x29, #-16]
  407818:	stur	x1, [x29, #-24]
  40781c:	stur	x2, [x29, #-32]
  407820:	str	x8, [sp, #32]
  407824:	str	x9, [sp, #24]
  407828:	ldur	x8, [x29, #-16]
  40782c:	cmp	x8, #0x0
  407830:	cset	w9, ne  // ne = any
  407834:	mov	w10, #0x1                   	// #1
  407838:	eor	w9, w9, #0x1
  40783c:	eor	w9, w9, w10
  407840:	eor	w9, w9, w10
  407844:	and	w9, w9, #0x1
  407848:	mov	w0, w9
  40784c:	sxtw	x8, w0
  407850:	cbz	x8, 407874 <clock_supported@plt+0x357c>
  407854:	mov	w8, wzr
  407858:	mov	w0, w8
  40785c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  407860:	add	x1, x1, #0x8f8
  407864:	ldr	x2, [sp, #32]
  407868:	mov	w3, #0x10a                 	// #266
  40786c:	ldr	x4, [sp, #24]
  407870:	bl	403958 <log_assert_failed_realm@plt>
  407874:	ldur	x8, [x29, #-24]
  407878:	cmp	x8, #0x0
  40787c:	cset	w9, ne  // ne = any
  407880:	mov	w10, #0x1                   	// #1
  407884:	eor	w9, w9, #0x1
  407888:	eor	w9, w9, w10
  40788c:	eor	w9, w9, w10
  407890:	and	w9, w9, #0x1
  407894:	mov	w0, w9
  407898:	sxtw	x8, w0
  40789c:	cbz	x8, 4078c0 <clock_supported@plt+0x35c8>
  4078a0:	mov	w8, wzr
  4078a4:	mov	w0, w8
  4078a8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4078ac:	add	x1, x1, #0x935
  4078b0:	ldr	x2, [sp, #32]
  4078b4:	mov	w3, #0x10b                 	// #267
  4078b8:	ldr	x4, [sp, #24]
  4078bc:	bl	403958 <log_assert_failed_realm@plt>
  4078c0:	ldur	x0, [x29, #-16]
  4078c4:	sub	x1, x29, #0x32
  4078c8:	bl	403cd8 <sd_netlink_message_get_type@plt>
  4078cc:	stur	w0, [x29, #-48]
  4078d0:	ldur	w8, [x29, #-48]
  4078d4:	cmp	w8, #0x0
  4078d8:	cset	w8, ge  // ge = tcont
  4078dc:	tbnz	w8, #0, 4078ec <clock_supported@plt+0x35f4>
  4078e0:	ldur	w8, [x29, #-48]
  4078e4:	stur	w8, [x29, #-4]
  4078e8:	b	407c54 <clock_supported@plt+0x395c>
  4078ec:	ldurh	w8, [x29, #-50]
  4078f0:	cmp	w8, #0x10
  4078f4:	b.eq	407900 <clock_supported@plt+0x3608>  // b.none
  4078f8:	stur	wzr, [x29, #-4]
  4078fc:	b	407c54 <clock_supported@plt+0x395c>
  407900:	ldur	x0, [x29, #-16]
  407904:	sub	x1, x29, #0x2c
  407908:	bl	403ce8 <sd_rtnl_message_link_get_ifindex@plt>
  40790c:	stur	w0, [x29, #-48]
  407910:	ldur	w8, [x29, #-48]
  407914:	cmp	w8, #0x0
  407918:	cset	w8, ge  // ge = tcont
  40791c:	tbnz	w8, #0, 40792c <clock_supported@plt+0x3634>
  407920:	ldur	w8, [x29, #-48]
  407924:	stur	w8, [x29, #-4]
  407928:	b	407c54 <clock_supported@plt+0x395c>
  40792c:	ldur	x0, [x29, #-16]
  407930:	mov	w1, #0x3                   	// #3
  407934:	sub	x2, x29, #0x28
  407938:	bl	403cf8 <sd_netlink_message_read_string@plt>
  40793c:	stur	w0, [x29, #-48]
  407940:	ldur	w8, [x29, #-48]
  407944:	cmp	w8, #0x0
  407948:	cset	w8, ge  // ge = tcont
  40794c:	tbnz	w8, #0, 40795c <clock_supported@plt+0x3664>
  407950:	ldur	w8, [x29, #-48]
  407954:	stur	w8, [x29, #-4]
  407958:	b	407c54 <clock_supported@plt+0x395c>
  40795c:	ldur	x8, [x29, #-32]
  407960:	cbz	x8, 407a04 <clock_supported@plt+0x370c>
  407964:	ldur	w3, [x29, #-44]
  407968:	add	x0, sp, #0x32
  40796c:	mov	x1, #0xc                   	// #12
  407970:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  407974:	add	x2, x2, #0x93a
  407978:	bl	403c38 <snprintf@plt>
  40797c:	mov	w1, w0
  407980:	sxtw	x8, w1
  407984:	cmp	x8, #0xc
  407988:	cset	w9, cc  // cc = lo, ul, last
  40798c:	mov	w10, #0x1                   	// #1
  407990:	eor	w9, w9, #0x1
  407994:	eor	w9, w9, w10
  407998:	eor	w9, w9, w10
  40799c:	and	w9, w9, #0x1
  4079a0:	mov	w1, w9
  4079a4:	sxtw	x8, w1
  4079a8:	cbz	x8, 4079cc <clock_supported@plt+0x36d4>
  4079ac:	mov	w8, wzr
  4079b0:	mov	w0, w8
  4079b4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4079b8:	add	x1, x1, #0x93d
  4079bc:	ldr	x2, [sp, #32]
  4079c0:	mov	w3, #0x11f                 	// #287
  4079c4:	ldr	x4, [sp, #24]
  4079c8:	bl	403958 <log_assert_failed_realm@plt>
  4079cc:	ldur	x0, [x29, #-32]
  4079d0:	add	x1, sp, #0x32
  4079d4:	mov	w8, wzr
  4079d8:	mov	w2, w8
  4079dc:	bl	403d08 <strv_fnmatch@plt>
  4079e0:	tbnz	w0, #0, 407a04 <clock_supported@plt+0x370c>
  4079e4:	ldur	x0, [x29, #-32]
  4079e8:	ldur	x1, [x29, #-40]
  4079ec:	mov	w8, wzr
  4079f0:	mov	w2, w8
  4079f4:	bl	403d08 <strv_fnmatch@plt>
  4079f8:	tbnz	w0, #0, 407a04 <clock_supported@plt+0x370c>
  4079fc:	stur	wzr, [x29, #-4]
  407a00:	b	407c54 <clock_supported@plt+0x395c>
  407a04:	ldur	x0, [x29, #-16]
  407a08:	ldur	x8, [x29, #-24]
  407a0c:	add	x1, x8, #0x64
  407a10:	bl	403d18 <sd_rtnl_message_link_get_type@plt>
  407a14:	stur	w0, [x29, #-48]
  407a18:	ldur	w9, [x29, #-48]
  407a1c:	cmp	w9, #0x0
  407a20:	cset	w9, ge  // ge = tcont
  407a24:	tbnz	w9, #0, 407a34 <clock_supported@plt+0x373c>
  407a28:	ldur	w8, [x29, #-48]
  407a2c:	stur	w8, [x29, #-4]
  407a30:	b	407c54 <clock_supported@plt+0x395c>
  407a34:	ldur	x0, [x29, #-24]
  407a38:	ldur	x2, [x29, #-40]
  407a3c:	mov	x1, #0x11                  	// #17
  407a40:	bl	403d28 <strscpy@plt>
  407a44:	ldur	w8, [x29, #-44]
  407a48:	ldur	x9, [x29, #-24]
  407a4c:	str	w8, [x9, #96]
  407a50:	ldur	x9, [x29, #-16]
  407a54:	ldur	x10, [x29, #-24]
  407a58:	add	x2, x10, #0x66
  407a5c:	mov	x0, x9
  407a60:	mov	w1, #0x1                   	// #1
  407a64:	bl	403d38 <sd_netlink_message_read_ether_addr@plt>
  407a68:	cmp	w0, #0x0
  407a6c:	cset	w8, lt  // lt = tstop
  407a70:	mov	w11, #0x0                   	// #0
  407a74:	str	w11, [sp, #20]
  407a78:	tbnz	w8, #0, 407aac <clock_supported@plt+0x37b4>
  407a7c:	ldur	x8, [x29, #-24]
  407a80:	add	x0, x8, #0x66
  407a84:	add	x8, sp, #0x2c
  407a88:	str	wzr, [sp, #44]
  407a8c:	mov	w9, #0x0                   	// #0
  407a90:	strh	w9, [x8, #4]
  407a94:	mov	x1, x8
  407a98:	mov	x2, #0x6                   	// #6
  407a9c:	bl	403d48 <memcmp@plt>
  407aa0:	cmp	w0, #0x0
  407aa4:	cset	w9, ne  // ne = any
  407aa8:	str	w9, [sp, #20]
  407aac:	ldr	w8, [sp, #20]
  407ab0:	ldur	x9, [x29, #-24]
  407ab4:	ldrh	w10, [x9, #454]
  407ab8:	and	w10, w10, #0xfffffffe
  407abc:	and	w8, w8, #0x1
  407ac0:	orr	w8, w10, w8
  407ac4:	strh	w8, [x9, #454]
  407ac8:	ldur	x0, [x29, #-16]
  407acc:	ldur	x9, [x29, #-24]
  407ad0:	add	x2, x9, #0x6c
  407ad4:	mov	w1, #0x4                   	// #4
  407ad8:	bl	403d58 <sd_netlink_message_read_u32@plt>
  407adc:	ldur	x9, [x29, #-16]
  407ae0:	ldur	x11, [x29, #-24]
  407ae4:	add	x2, x11, #0x70
  407ae8:	mov	x0, x9
  407aec:	mov	w1, #0x32                  	// #50
  407af0:	bl	403d58 <sd_netlink_message_read_u32@plt>
  407af4:	ldur	x9, [x29, #-16]
  407af8:	ldur	x11, [x29, #-24]
  407afc:	add	x2, x11, #0x74
  407b00:	mov	x0, x9
  407b04:	mov	w1, #0x33                  	// #51
  407b08:	bl	403d58 <sd_netlink_message_read_u32@plt>
  407b0c:	ldur	x9, [x29, #-16]
  407b10:	ldur	x11, [x29, #-24]
  407b14:	add	x2, x11, #0x7c
  407b18:	mov	x0, x9
  407b1c:	mov	w1, #0x20                  	// #32
  407b20:	bl	403d58 <sd_netlink_message_read_u32@plt>
  407b24:	cmp	w0, #0x0
  407b28:	cset	w8, lt  // lt = tstop
  407b2c:	mov	w10, #0x0                   	// #0
  407b30:	str	w10, [sp, #16]
  407b34:	tbnz	w8, #0, 407b4c <clock_supported@plt+0x3854>
  407b38:	ldur	x8, [x29, #-24]
  407b3c:	ldr	w9, [x8, #124]
  407b40:	cmp	w9, #0x0
  407b44:	cset	w9, hi  // hi = pmore
  407b48:	str	w9, [sp, #16]
  407b4c:	ldr	w8, [sp, #16]
  407b50:	ldur	x9, [x29, #-24]
  407b54:	ldrh	w10, [x9, #454]
  407b58:	and	w8, w8, #0x1
  407b5c:	lsl	w8, w8, #2
  407b60:	and	w10, w10, #0xfffffffb
  407b64:	orr	w8, w10, w8
  407b68:	strh	w8, [x9, #454]
  407b6c:	ldur	x0, [x29, #-16]
  407b70:	ldur	x9, [x29, #-24]
  407b74:	add	x2, x9, #0x78
  407b78:	mov	w1, #0x1f                  	// #31
  407b7c:	bl	403d58 <sd_netlink_message_read_u32@plt>
  407b80:	cmp	w0, #0x0
  407b84:	cset	w8, lt  // lt = tstop
  407b88:	mov	w10, #0x0                   	// #0
  407b8c:	str	w10, [sp, #12]
  407b90:	tbnz	w8, #0, 407ba8 <clock_supported@plt+0x38b0>
  407b94:	ldur	x8, [x29, #-24]
  407b98:	ldr	w9, [x8, #120]
  407b9c:	cmp	w9, #0x0
  407ba0:	cset	w9, hi  // hi = pmore
  407ba4:	str	w9, [sp, #12]
  407ba8:	ldr	w8, [sp, #12]
  407bac:	ldur	x9, [x29, #-24]
  407bb0:	ldrh	w10, [x9, #454]
  407bb4:	mov	w11, #0x1                   	// #1
  407bb8:	and	w8, w8, #0x1
  407bbc:	lsl	w8, w8, w11
  407bc0:	and	w10, w10, #0xfffffffd
  407bc4:	orr	w8, w10, w8
  407bc8:	strh	w8, [x9, #454]
  407bcc:	ldur	x0, [x29, #-16]
  407bd0:	ldur	x9, [x29, #-24]
  407bd4:	add	x3, x9, #0x80
  407bd8:	mov	w1, #0x17                  	// #23
  407bdc:	mov	x2, #0xc0                  	// #192
  407be0:	bl	403d68 <sd_netlink_message_read@plt>
  407be4:	cmp	w0, #0x0
  407be8:	cset	w8, lt  // lt = tstop
  407bec:	tbnz	w8, #0, 407c08 <clock_supported@plt+0x3910>
  407bf0:	ldur	x8, [x29, #-24]
  407bf4:	ldrh	w9, [x8, #454]
  407bf8:	and	w9, w9, #0xfffffff7
  407bfc:	orr	w9, w9, #0x8
  407c00:	strh	w9, [x8, #454]
  407c04:	b	407c40 <clock_supported@plt+0x3948>
  407c08:	ldur	x0, [x29, #-16]
  407c0c:	ldur	x8, [x29, #-24]
  407c10:	add	x3, x8, #0x80
  407c14:	mov	w1, #0x7                   	// #7
  407c18:	mov	x2, #0x60                  	// #96
  407c1c:	bl	403d68 <sd_netlink_message_read@plt>
  407c20:	cmp	w0, #0x0
  407c24:	cset	w9, lt  // lt = tstop
  407c28:	tbnz	w9, #0, 407c40 <clock_supported@plt+0x3948>
  407c2c:	ldur	x8, [x29, #-24]
  407c30:	ldrh	w9, [x8, #454]
  407c34:	and	w9, w9, #0xffffffef
  407c38:	orr	w9, w9, #0x10
  407c3c:	strh	w9, [x8, #454]
  407c40:	ldur	x0, [x29, #-16]
  407c44:	ldur	x1, [x29, #-24]
  407c48:	bl	408594 <clock_supported@plt+0x429c>
  407c4c:	mov	w8, #0x1                   	// #1
  407c50:	stur	w8, [x29, #-4]
  407c54:	ldur	w0, [x29, #-4]
  407c58:	ldp	x29, x30, [sp, #112]
  407c5c:	add	sp, sp, #0x80
  407c60:	ret
  407c64:	sub	sp, sp, #0x20
  407c68:	stp	x29, x30, [sp, #16]
  407c6c:	add	x29, sp, #0x10
  407c70:	str	x0, [sp, #8]
  407c74:	str	x1, [sp]
  407c78:	ldr	x0, [sp, #8]
  407c7c:	ldr	x1, [sp]
  407c80:	ldr	x8, [sp]
  407c84:	add	x2, x8, #0x19c
  407c88:	ldr	x8, [sp]
  407c8c:	add	x3, x8, #0x1a0
  407c90:	ldr	x8, [sp]
  407c94:	add	x4, x8, #0x1a8
  407c98:	ldr	x8, [sp]
  407c9c:	add	x5, x8, #0x1ac
  407ca0:	bl	403d78 <ethtool_get_link_info@plt>
  407ca4:	cmp	w0, #0x0
  407ca8:	cset	w9, lt  // lt = tstop
  407cac:	tbnz	w9, #0, 407cc4 <clock_supported@plt+0x39cc>
  407cb0:	ldr	x8, [sp]
  407cb4:	ldrh	w9, [x8, #454]
  407cb8:	and	w9, w9, #0xffffffbf
  407cbc:	orr	w9, w9, #0x40
  407cc0:	strh	w9, [x8, #454]
  407cc4:	ldp	x29, x30, [sp, #16]
  407cc8:	add	sp, sp, #0x20
  407ccc:	ret
  407cd0:	sub	sp, sp, #0x90
  407cd4:	stp	x29, x30, [sp, #128]
  407cd8:	add	x29, sp, #0x80
  407cdc:	mov	x8, xzr
  407ce0:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  407ce4:	add	x9, x9, #0x31c
  407ce8:	add	x9, x9, #0x3
  407cec:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  407cf0:	add	x10, x10, #0x9a6
  407cf4:	stur	x0, [x29, #-8]
  407cf8:	stur	x8, [x29, #-16]
  407cfc:	stur	x8, [x29, #-24]
  407d00:	stur	wzr, [x29, #-32]
  407d04:	ldur	x8, [x29, #-8]
  407d08:	ldr	x8, [x8, #88]
  407d0c:	str	x9, [sp, #32]
  407d10:	str	x10, [sp, #24]
  407d14:	cbz	x8, 407d28 <clock_supported@plt+0x3a30>
  407d18:	ldur	x8, [x29, #-8]
  407d1c:	ldr	x0, [x8, #88]
  407d20:	sub	x1, x29, #0x18
  407d24:	bl	403c78 <sd_device_get_devtype@plt>
  407d28:	ldur	x0, [x29, #-24]
  407d2c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  407d30:	add	x1, x1, #0x9a1
  407d34:	bl	40890c <clock_supported@plt+0x4614>
  407d38:	tbnz	w0, #0, 407d48 <clock_supported@plt+0x3a50>
  407d3c:	mov	w8, #0x1                   	// #1
  407d40:	stur	w8, [x29, #-36]
  407d44:	b	407fac <clock_supported@plt+0x3cb4>
  407d48:	sub	x0, x29, #0x10
  407d4c:	bl	403d88 <sd_genl_socket_open@plt>
  407d50:	stur	w0, [x29, #-28]
  407d54:	ldur	w8, [x29, #-28]
  407d58:	cmp	w8, #0x0
  407d5c:	cset	w8, ge  // ge = tcont
  407d60:	tbnz	w8, #0, 407de8 <clock_supported@plt+0x3af0>
  407d64:	mov	w8, #0x7                   	// #7
  407d68:	stur	w8, [x29, #-40]
  407d6c:	ldur	w8, [x29, #-28]
  407d70:	stur	w8, [x29, #-44]
  407d74:	stur	wzr, [x29, #-48]
  407d78:	ldur	w0, [x29, #-48]
  407d7c:	bl	403a28 <log_get_max_level_realm@plt>
  407d80:	ldur	w8, [x29, #-40]
  407d84:	and	w8, w8, #0x7
  407d88:	cmp	w0, w8
  407d8c:	b.lt	407dc0 <clock_supported@plt+0x3ac8>  // b.tstop
  407d90:	ldur	w8, [x29, #-48]
  407d94:	ldur	w9, [x29, #-40]
  407d98:	orr	w0, w9, w8, lsl #10
  407d9c:	ldur	w1, [x29, #-44]
  407da0:	ldr	x2, [sp, #32]
  407da4:	mov	w3, #0x18d                 	// #397
  407da8:	ldr	x4, [sp, #24]
  407dac:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  407db0:	add	x5, x5, #0x9bd
  407db4:	bl	403a38 <log_internal_realm@plt>
  407db8:	str	w0, [sp, #20]
  407dbc:	b	407dd4 <clock_supported@plt+0x3adc>
  407dc0:	ldur	w0, [x29, #-44]
  407dc4:	bl	403a48 <abs@plt>
  407dc8:	mov	w8, wzr
  407dcc:	subs	w8, w8, w0, uxtb
  407dd0:	str	w8, [sp, #20]
  407dd4:	ldr	w8, [sp, #20]
  407dd8:	stur	w8, [x29, #-52]
  407ddc:	mov	w8, #0x1                   	// #1
  407de0:	stur	w8, [x29, #-36]
  407de4:	b	407fac <clock_supported@plt+0x3cb4>
  407de8:	ldur	x0, [x29, #-16]
  407dec:	mov	x1, #0x20000               	// #131072
  407df0:	bl	403d98 <sd_netlink_inc_rcvbuf@plt>
  407df4:	ldur	x8, [x29, #-16]
  407df8:	ldur	x9, [x29, #-8]
  407dfc:	ldr	w1, [x9, #96]
  407e00:	ldur	x9, [x29, #-8]
  407e04:	add	x2, x9, #0x1b0
  407e08:	ldur	x9, [x29, #-8]
  407e0c:	add	x3, x9, #0x1b8
  407e10:	mov	x0, x8
  407e14:	bl	403da8 <wifi_get_interface@plt>
  407e18:	stur	w0, [x29, #-28]
  407e1c:	ldur	w10, [x29, #-28]
  407e20:	cmp	w10, #0x0
  407e24:	cset	w10, ge  // ge = tcont
  407e28:	tbnz	w10, #0, 407ea8 <clock_supported@plt+0x3bb0>
  407e2c:	mov	w8, #0x7                   	// #7
  407e30:	stur	w8, [x29, #-56]
  407e34:	ldur	w8, [x29, #-28]
  407e38:	stur	w8, [x29, #-60]
  407e3c:	str	wzr, [sp, #64]
  407e40:	ldr	w0, [sp, #64]
  407e44:	bl	403a28 <log_get_max_level_realm@plt>
  407e48:	ldur	w8, [x29, #-56]
  407e4c:	and	w8, w8, #0x7
  407e50:	cmp	w0, w8
  407e54:	b.lt	407e8c <clock_supported@plt+0x3b94>  // b.tstop
  407e58:	ldr	w8, [sp, #64]
  407e5c:	ldur	w9, [x29, #-56]
  407e60:	orr	w0, w9, w8, lsl #10
  407e64:	ldur	w1, [x29, #-60]
  407e68:	ldur	x6, [x29, #-8]
  407e6c:	ldr	x2, [sp, #32]
  407e70:	mov	w3, #0x195                 	// #405
  407e74:	ldr	x4, [sp, #24]
  407e78:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  407e7c:	add	x5, x5, #0x9e7
  407e80:	bl	403a38 <log_internal_realm@plt>
  407e84:	str	w0, [sp, #16]
  407e88:	b	407ea0 <clock_supported@plt+0x3ba8>
  407e8c:	ldur	w0, [x29, #-60]
  407e90:	bl	403a48 <abs@plt>
  407e94:	mov	w8, wzr
  407e98:	subs	w8, w8, w0, uxtb
  407e9c:	str	w8, [sp, #16]
  407ea0:	ldr	w8, [sp, #16]
  407ea4:	str	w8, [sp, #60]
  407ea8:	ldur	x8, [x29, #-8]
  407eac:	ldrh	w9, [x8, #100]
  407eb0:	cmp	w9, #0x2
  407eb4:	b.ne	407f60 <clock_supported@plt+0x3c68>  // b.any
  407eb8:	ldur	x0, [x29, #-16]
  407ebc:	ldur	x8, [x29, #-8]
  407ec0:	ldr	w1, [x8, #96]
  407ec4:	ldur	x8, [x29, #-8]
  407ec8:	add	x2, x8, #0x1c0
  407ecc:	bl	403db8 <wifi_get_station@plt>
  407ed0:	stur	w0, [x29, #-32]
  407ed4:	ldur	w9, [x29, #-32]
  407ed8:	cmp	w9, #0x0
  407edc:	cset	w9, ge  // ge = tcont
  407ee0:	tbnz	w9, #0, 407f60 <clock_supported@plt+0x3c68>
  407ee4:	mov	w8, #0x7                   	// #7
  407ee8:	str	w8, [sp, #56]
  407eec:	ldur	w8, [x29, #-32]
  407ef0:	str	w8, [sp, #52]
  407ef4:	str	wzr, [sp, #48]
  407ef8:	ldr	w0, [sp, #48]
  407efc:	bl	403a28 <log_get_max_level_realm@plt>
  407f00:	ldr	w8, [sp, #56]
  407f04:	and	w8, w8, #0x7
  407f08:	cmp	w0, w8
  407f0c:	b.lt	407f44 <clock_supported@plt+0x3c4c>  // b.tstop
  407f10:	ldr	w8, [sp, #48]
  407f14:	ldr	w9, [sp, #56]
  407f18:	orr	w0, w9, w8, lsl #10
  407f1c:	ldr	w1, [sp, #52]
  407f20:	ldur	x6, [x29, #-8]
  407f24:	ldr	x2, [sp, #32]
  407f28:	mov	w3, #0x19a                 	// #410
  407f2c:	ldr	x4, [sp, #24]
  407f30:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  407f34:	add	x5, x5, #0xa04
  407f38:	bl	403a38 <log_internal_realm@plt>
  407f3c:	str	w0, [sp, #12]
  407f40:	b	407f58 <clock_supported@plt+0x3c60>
  407f44:	ldr	w0, [sp, #52]
  407f48:	bl	403a48 <abs@plt>
  407f4c:	mov	w8, wzr
  407f50:	subs	w8, w8, w0, uxtb
  407f54:	str	w8, [sp, #12]
  407f58:	ldr	w8, [sp, #12]
  407f5c:	str	w8, [sp, #44]
  407f60:	ldur	w8, [x29, #-28]
  407f64:	cmp	w8, #0x0
  407f68:	cset	w8, gt
  407f6c:	mov	w9, #0x1                   	// #1
  407f70:	str	w9, [sp, #8]
  407f74:	tbnz	w8, #0, 407f88 <clock_supported@plt+0x3c90>
  407f78:	ldur	w8, [x29, #-32]
  407f7c:	cmp	w8, #0x0
  407f80:	cset	w8, gt
  407f84:	str	w8, [sp, #8]
  407f88:	ldr	w8, [sp, #8]
  407f8c:	ldur	x9, [x29, #-8]
  407f90:	ldrh	w10, [x9, #454]
  407f94:	and	w8, w8, #0x1
  407f98:	lsl	w8, w8, #7
  407f9c:	and	w10, w10, #0xffffff7f
  407fa0:	orr	w8, w10, w8
  407fa4:	strh	w8, [x9, #454]
  407fa8:	stur	wzr, [x29, #-36]
  407fac:	sub	x0, x29, #0x10
  407fb0:	bl	406cc8 <clock_supported@plt+0x29d0>
  407fb4:	ldp	x29, x30, [sp, #128]
  407fb8:	add	sp, sp, #0x90
  407fbc:	ret
  407fc0:	sub	sp, sp, #0x20
  407fc4:	str	x0, [sp, #24]
  407fc8:	str	x1, [sp, #16]
  407fcc:	ldr	x8, [sp, #24]
  407fd0:	ldr	w9, [x8, #96]
  407fd4:	str	w9, [sp, #12]
  407fd8:	ldr	x8, [sp, #16]
  407fdc:	ldr	w9, [x8, #96]
  407fe0:	str	w9, [sp, #8]
  407fe4:	ldr	w9, [sp, #12]
  407fe8:	ldr	w10, [sp, #8]
  407fec:	cmp	w9, w10
  407ff0:	b.ge	408000 <clock_supported@plt+0x3d08>  // b.tcont
  407ff4:	mov	w8, #0xffffffff            	// #-1
  407ff8:	str	w8, [sp]
  407ffc:	b	40801c <clock_supported@plt+0x3d24>
  408000:	ldr	w8, [sp, #12]
  408004:	ldr	w9, [sp, #8]
  408008:	mov	w10, wzr
  40800c:	mov	w11, #0x1                   	// #1
  408010:	cmp	w8, w9
  408014:	csel	w8, w11, w10, gt
  408018:	str	w8, [sp]
  40801c:	ldr	w8, [sp]
  408020:	str	w8, [sp, #4]
  408024:	ldr	w0, [sp, #4]
  408028:	add	sp, sp, #0x20
  40802c:	ret
  408030:	sub	sp, sp, #0x40
  408034:	stp	x29, x30, [sp, #48]
  408038:	add	x29, sp, #0x30
  40803c:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  408040:	add	x8, x8, #0xa27
  408044:	add	x8, x8, #0x3
  408048:	stur	x0, [x29, #-8]
  40804c:	stur	x1, [x29, #-16]
  408050:	str	x2, [sp, #24]
  408054:	str	x3, [sp, #16]
  408058:	ldur	x9, [x29, #-16]
  40805c:	cmp	x9, #0x1
  408060:	str	x8, [sp, #8]
  408064:	b.hi	40806c <clock_supported@plt+0x3d74>  // b.pmore
  408068:	b	4080d0 <clock_supported@plt+0x3dd8>
  40806c:	ldur	x8, [x29, #-8]
  408070:	cmp	x8, #0x0
  408074:	cset	w9, ne  // ne = any
  408078:	mov	w10, #0x1                   	// #1
  40807c:	eor	w9, w9, #0x1
  408080:	eor	w9, w9, w10
  408084:	eor	w9, w9, w10
  408088:	and	w9, w9, #0x1
  40808c:	mov	w0, w9
  408090:	sxtw	x8, w0
  408094:	cbz	x8, 4080bc <clock_supported@plt+0x3dc4>
  408098:	mov	w8, wzr
  40809c:	mov	w0, w8
  4080a0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4080a4:	add	x1, x1, #0xa22
  4080a8:	ldr	x2, [sp, #8]
  4080ac:	mov	w3, #0x2e                  	// #46
  4080b0:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  4080b4:	add	x4, x4, #0xa40
  4080b8:	bl	403958 <log_assert_failed_realm@plt>
  4080bc:	ldur	x0, [x29, #-8]
  4080c0:	ldur	x1, [x29, #-16]
  4080c4:	ldr	x2, [sp, #24]
  4080c8:	ldr	x3, [sp, #16]
  4080cc:	bl	403dc8 <qsort@plt>
  4080d0:	ldp	x29, x30, [sp, #48]
  4080d4:	add	sp, sp, #0x40
  4080d8:	ret
  4080dc:	sub	sp, sp, #0x100
  4080e0:	stp	x29, x30, [sp, #240]
  4080e4:	add	x29, sp, #0xf0
  4080e8:	sub	x8, x29, #0x10
  4080ec:	mov	x9, xzr
  4080f0:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  4080f4:	add	x10, x10, #0x93a
  4080f8:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  4080fc:	add	x11, x11, #0x31c
  408100:	add	x11, x11, #0x3
  408104:	adrp	x12, 412000 <clock_supported@plt+0xdd08>
  408108:	add	x12, x12, #0xb54
  40810c:	adrp	x13, 412000 <clock_supported@plt+0xdd08>
  408110:	add	x13, x13, #0xb92
  408114:	sub	x14, x29, #0x48
  408118:	str	x0, [x8]
  40811c:	stur	x1, [x29, #-24]
  408120:	stur	x9, [x29, #-32]
  408124:	stur	xzr, [x29, #-56]
  408128:	stur	xzr, [x29, #-48]
  40812c:	stur	xzr, [x29, #-40]
  408130:	stur	x9, [x29, #-64]
  408134:	stur	x9, [x29, #-72]
  408138:	ldur	x9, [x29, #-24]
  40813c:	ldr	w2, [x9, #96]
  408140:	mov	x0, x14
  408144:	mov	x1, x10
  408148:	str	x8, [sp, #80]
  40814c:	str	x11, [sp, #72]
  408150:	str	x12, [sp, #64]
  408154:	str	x13, [sp, #56]
  408158:	bl	403dd8 <asprintf@plt>
  40815c:	cmp	w0, #0x0
  408160:	cset	w15, ge  // ge = tcont
  408164:	tbnz	w15, #0, 40817c <clock_supported@plt+0x3e84>
  408168:	mov	w8, #0xfffffff4            	// #-12
  40816c:	stur	w8, [x29, #-4]
  408170:	mov	w8, #0x1                   	// #1
  408174:	stur	w8, [x29, #-80]
  408178:	b	408564 <clock_supported@plt+0x426c>
  40817c:	ldur	x1, [x29, #-72]
  408180:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  408184:	add	x0, x0, #0xa77
  408188:	sub	x2, x29, #0x40
  40818c:	bl	403de8 <sd_bus_path_encode@plt>
  408190:	stur	w0, [x29, #-76]
  408194:	ldur	w8, [x29, #-76]
  408198:	cmp	w8, #0x0
  40819c:	cset	w8, ge  // ge = tcont
  4081a0:	tbnz	w8, #0, 4081b8 <clock_supported@plt+0x3ec0>
  4081a4:	ldur	w8, [x29, #-76]
  4081a8:	stur	w8, [x29, #-4]
  4081ac:	mov	w8, #0x1                   	// #1
  4081b0:	stur	w8, [x29, #-80]
  4081b4:	b	408564 <clock_supported@plt+0x426c>
  4081b8:	ldr	x8, [sp, #80]
  4081bc:	ldr	x0, [x8]
  4081c0:	ldur	x2, [x29, #-64]
  4081c4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4081c8:	add	x1, x1, #0xa96
  4081cc:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  4081d0:	add	x3, x3, #0xaaf
  4081d4:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  4081d8:	add	x4, x4, #0xacf
  4081dc:	sub	x5, x29, #0x38
  4081e0:	sub	x6, x29, #0x20
  4081e4:	adrp	x7, 412000 <clock_supported@plt+0xdd08>
  4081e8:	add	x7, x7, #0xad3
  4081ec:	mov	x9, sp
  4081f0:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  4081f4:	add	x10, x10, #0xad6
  4081f8:	str	x10, [x9]
  4081fc:	mov	x9, sp
  408200:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  408204:	add	x10, x10, #0xaf4
  408208:	str	x10, [x9, #8]
  40820c:	bl	403ba8 <sd_bus_call_method@plt>
  408210:	stur	w0, [x29, #-76]
  408214:	ldur	w11, [x29, #-76]
  408218:	cmp	w11, #0x0
  40821c:	cset	w11, ge  // ge = tcont
  408220:	tbnz	w11, #0, 408334 <clock_supported@plt+0x403c>
  408224:	sub	x0, x29, #0x38
  408228:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40822c:	add	x1, x1, #0xafd
  408230:	bl	403df8 <sd_bus_error_has_name@plt>
  408234:	mov	w8, #0x1                   	// #1
  408238:	str	w8, [sp, #52]
  40823c:	cbnz	w0, 40825c <clock_supported@plt+0x3f64>
  408240:	sub	x0, x29, #0x38
  408244:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408248:	add	x1, x1, #0xb28
  40824c:	bl	403df8 <sd_bus_error_has_name@plt>
  408250:	cmp	w0, #0x0
  408254:	cset	w8, ne  // ne = any
  408258:	str	w8, [sp, #52]
  40825c:	ldr	w8, [sp, #52]
  408260:	and	w8, w8, #0x1
  408264:	sturb	w8, [x29, #-81]
  408268:	ldurb	w8, [x29, #-81]
  40826c:	mov	w9, #0x4                   	// #4
  408270:	mov	w10, #0x7                   	// #7
  408274:	tst	w8, #0x1
  408278:	csel	w8, w10, w9, ne  // ne = any
  40827c:	stur	w8, [x29, #-88]
  408280:	ldur	w8, [x29, #-76]
  408284:	stur	w8, [x29, #-92]
  408288:	stur	wzr, [x29, #-96]
  40828c:	ldur	w0, [x29, #-96]
  408290:	bl	403a28 <log_get_max_level_realm@plt>
  408294:	ldur	w8, [x29, #-88]
  408298:	and	w8, w8, #0x7
  40829c:	cmp	w0, w8
  4082a0:	b.lt	408304 <clock_supported@plt+0x400c>  // b.tstop
  4082a4:	ldur	w8, [x29, #-96]
  4082a8:	ldur	w9, [x29, #-88]
  4082ac:	orr	w0, w9, w8, lsl #10
  4082b0:	ldur	w1, [x29, #-92]
  4082b4:	ldur	w8, [x29, #-76]
  4082b8:	sub	x10, x29, #0x38
  4082bc:	str	w0, [sp, #48]
  4082c0:	mov	x0, x10
  4082c4:	str	w1, [sp, #44]
  4082c8:	mov	w1, w8
  4082cc:	bl	403e08 <bus_error_message@plt>
  4082d0:	ldr	w8, [sp, #48]
  4082d4:	str	x0, [sp, #32]
  4082d8:	mov	w0, w8
  4082dc:	ldr	w1, [sp, #44]
  4082e0:	ldr	x2, [sp, #72]
  4082e4:	mov	w3, #0x164                 	// #356
  4082e8:	ldr	x4, [sp, #64]
  4082ec:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  4082f0:	add	x5, x5, #0xb6a
  4082f4:	ldr	x6, [sp, #32]
  4082f8:	bl	403a38 <log_internal_realm@plt>
  4082fc:	str	w0, [sp, #28]
  408300:	b	408318 <clock_supported@plt+0x4020>
  408304:	ldur	w0, [x29, #-92]
  408308:	bl	403a48 <abs@plt>
  40830c:	mov	w8, wzr
  408310:	subs	w8, w8, w0, uxtb
  408314:	str	w8, [sp, #28]
  408318:	ldr	w8, [sp, #28]
  40831c:	stur	w8, [x29, #-100]
  408320:	ldur	w8, [x29, #-100]
  408324:	stur	w8, [x29, #-4]
  408328:	mov	w8, #0x1                   	// #1
  40832c:	stur	w8, [x29, #-80]
  408330:	b	408564 <clock_supported@plt+0x426c>
  408334:	ldur	x0, [x29, #-32]
  408338:	mov	w1, #0x76                  	// #118
  40833c:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  408340:	add	x2, x2, #0xb8d
  408344:	bl	403e18 <sd_bus_message_enter_container@plt>
  408348:	stur	w0, [x29, #-76]
  40834c:	ldur	w8, [x29, #-76]
  408350:	cmp	w8, #0x0
  408354:	cset	w8, ge  // ge = tcont
  408358:	tbnz	w8, #0, 4083e4 <clock_supported@plt+0x40ec>
  40835c:	mov	w8, #0x3                   	// #3
  408360:	stur	w8, [x29, #-104]
  408364:	ldur	w8, [x29, #-76]
  408368:	stur	w8, [x29, #-108]
  40836c:	stur	wzr, [x29, #-112]
  408370:	ldur	w0, [x29, #-112]
  408374:	bl	403a28 <log_get_max_level_realm@plt>
  408378:	ldur	w8, [x29, #-104]
  40837c:	and	w8, w8, #0x7
  408380:	cmp	w0, w8
  408384:	b.lt	4083b4 <clock_supported@plt+0x40bc>  // b.tstop
  408388:	ldur	w8, [x29, #-112]
  40838c:	ldur	w9, [x29, #-104]
  408390:	orr	w0, w9, w8, lsl #10
  408394:	ldur	w1, [x29, #-108]
  408398:	ldr	x2, [sp, #72]
  40839c:	mov	w3, #0x169                 	// #361
  4083a0:	ldr	x4, [sp, #64]
  4083a4:	ldr	x5, [sp, #56]
  4083a8:	bl	403a38 <log_internal_realm@plt>
  4083ac:	str	w0, [sp, #24]
  4083b0:	b	4083c8 <clock_supported@plt+0x40d0>
  4083b4:	ldur	w0, [x29, #-108]
  4083b8:	bl	403a48 <abs@plt>
  4083bc:	mov	w8, wzr
  4083c0:	subs	w8, w8, w0, uxtb
  4083c4:	str	w8, [sp, #24]
  4083c8:	ldr	w8, [sp, #24]
  4083cc:	stur	w8, [x29, #-116]
  4083d0:	ldur	w8, [x29, #-116]
  4083d4:	stur	w8, [x29, #-4]
  4083d8:	mov	w8, #0x1                   	// #1
  4083dc:	stur	w8, [x29, #-80]
  4083e0:	b	408564 <clock_supported@plt+0x426c>
  4083e4:	ldur	x0, [x29, #-32]
  4083e8:	ldur	x8, [x29, #-24]
  4083ec:	add	x2, x8, #0x140
  4083f0:	ldur	x8, [x29, #-24]
  4083f4:	add	x3, x8, #0x148
  4083f8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4083fc:	add	x1, x1, #0xb8d
  408400:	bl	403e28 <sd_bus_message_read@plt>
  408404:	stur	w0, [x29, #-76]
  408408:	ldur	w9, [x29, #-76]
  40840c:	cmp	w9, #0x0
  408410:	cset	w9, ge  // ge = tcont
  408414:	tbnz	w9, #0, 4084a0 <clock_supported@plt+0x41a8>
  408418:	mov	w8, #0x3                   	// #3
  40841c:	str	w8, [sp, #120]
  408420:	ldur	w8, [x29, #-76]
  408424:	str	w8, [sp, #116]
  408428:	str	wzr, [sp, #112]
  40842c:	ldr	w0, [sp, #112]
  408430:	bl	403a28 <log_get_max_level_realm@plt>
  408434:	ldr	w8, [sp, #120]
  408438:	and	w8, w8, #0x7
  40843c:	cmp	w0, w8
  408440:	b.lt	408470 <clock_supported@plt+0x4178>  // b.tstop
  408444:	ldr	w8, [sp, #112]
  408448:	ldr	w9, [sp, #120]
  40844c:	orr	w0, w9, w8, lsl #10
  408450:	ldr	w1, [sp, #116]
  408454:	ldr	x2, [sp, #72]
  408458:	mov	w3, #0x16d                 	// #365
  40845c:	ldr	x4, [sp, #64]
  408460:	ldr	x5, [sp, #56]
  408464:	bl	403a38 <log_internal_realm@plt>
  408468:	str	w0, [sp, #20]
  40846c:	b	408484 <clock_supported@plt+0x418c>
  408470:	ldr	w0, [sp, #116]
  408474:	bl	403a48 <abs@plt>
  408478:	mov	w8, wzr
  40847c:	subs	w8, w8, w0, uxtb
  408480:	str	w8, [sp, #20]
  408484:	ldr	w8, [sp, #20]
  408488:	str	w8, [sp, #108]
  40848c:	ldr	w8, [sp, #108]
  408490:	stur	w8, [x29, #-4]
  408494:	mov	w8, #0x1                   	// #1
  408498:	stur	w8, [x29, #-80]
  40849c:	b	408564 <clock_supported@plt+0x426c>
  4084a0:	ldur	x0, [x29, #-32]
  4084a4:	bl	403e38 <sd_bus_message_exit_container@plt>
  4084a8:	stur	w0, [x29, #-76]
  4084ac:	ldur	w8, [x29, #-76]
  4084b0:	cmp	w8, #0x0
  4084b4:	cset	w8, ge  // ge = tcont
  4084b8:	tbnz	w8, #0, 408544 <clock_supported@plt+0x424c>
  4084bc:	mov	w8, #0x3                   	// #3
  4084c0:	str	w8, [sp, #104]
  4084c4:	ldur	w8, [x29, #-76]
  4084c8:	str	w8, [sp, #100]
  4084cc:	str	wzr, [sp, #96]
  4084d0:	ldr	w0, [sp, #96]
  4084d4:	bl	403a28 <log_get_max_level_realm@plt>
  4084d8:	ldr	w8, [sp, #104]
  4084dc:	and	w8, w8, #0x7
  4084e0:	cmp	w0, w8
  4084e4:	b.lt	408514 <clock_supported@plt+0x421c>  // b.tstop
  4084e8:	ldr	w8, [sp, #96]
  4084ec:	ldr	w9, [sp, #104]
  4084f0:	orr	w0, w9, w8, lsl #10
  4084f4:	ldr	w1, [sp, #100]
  4084f8:	ldr	x2, [sp, #72]
  4084fc:	mov	w3, #0x171                 	// #369
  408500:	ldr	x4, [sp, #64]
  408504:	ldr	x5, [sp, #56]
  408508:	bl	403a38 <log_internal_realm@plt>
  40850c:	str	w0, [sp, #16]
  408510:	b	408528 <clock_supported@plt+0x4230>
  408514:	ldr	w0, [sp, #100]
  408518:	bl	403a48 <abs@plt>
  40851c:	mov	w8, wzr
  408520:	subs	w8, w8, w0, uxtb
  408524:	str	w8, [sp, #16]
  408528:	ldr	w8, [sp, #16]
  40852c:	str	w8, [sp, #92]
  408530:	ldr	w8, [sp, #92]
  408534:	stur	w8, [x29, #-4]
  408538:	mov	w8, #0x1                   	// #1
  40853c:	stur	w8, [x29, #-80]
  408540:	b	408564 <clock_supported@plt+0x426c>
  408544:	ldur	x8, [x29, #-24]
  408548:	ldrh	w9, [x8, #454]
  40854c:	and	w9, w9, #0xffffffdf
  408550:	orr	w9, w9, #0x20
  408554:	strh	w9, [x8, #454]
  408558:	stur	wzr, [x29, #-4]
  40855c:	mov	w9, #0x1                   	// #1
  408560:	stur	w9, [x29, #-80]
  408564:	sub	x0, x29, #0x48
  408568:	bl	404a10 <clock_supported@plt+0x718>
  40856c:	sub	x0, x29, #0x40
  408570:	bl	404a10 <clock_supported@plt+0x718>
  408574:	sub	x0, x29, #0x38
  408578:	bl	403bb8 <sd_bus_error_free@plt>
  40857c:	sub	x0, x29, #0x20
  408580:	bl	408944 <clock_supported@plt+0x464c>
  408584:	ldur	w0, [x29, #-4]
  408588:	ldp	x29, x30, [sp, #240]
  40858c:	add	sp, sp, #0x100
  408590:	ret
  408594:	sub	sp, sp, #0x40
  408598:	stp	x29, x30, [sp, #48]
  40859c:	add	x29, sp, #0x30
  4085a0:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  4085a4:	add	x8, x8, #0x31c
  4085a8:	add	x8, x8, #0x3
  4085ac:	stur	x0, [x29, #-16]
  4085b0:	str	x1, [sp, #24]
  4085b4:	str	x8, [sp]
  4085b8:	ldur	x8, [x29, #-16]
  4085bc:	cmp	x8, #0x0
  4085c0:	cset	w9, ne  // ne = any
  4085c4:	mov	w10, #0x1                   	// #1
  4085c8:	eor	w9, w9, #0x1
  4085cc:	eor	w9, w9, w10
  4085d0:	eor	w9, w9, w10
  4085d4:	and	w9, w9, #0x1
  4085d8:	mov	w0, w9
  4085dc:	sxtw	x8, w0
  4085e0:	cbz	x8, 408608 <clock_supported@plt+0x4310>
  4085e4:	mov	w8, wzr
  4085e8:	mov	w0, w8
  4085ec:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4085f0:	add	x1, x1, #0x8f8
  4085f4:	ldr	x2, [sp]
  4085f8:	mov	w3, #0xcc                  	// #204
  4085fc:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  408600:	add	x4, x4, #0x960
  408604:	bl	403958 <log_assert_failed_realm@plt>
  408608:	ldr	x8, [sp, #24]
  40860c:	cmp	x8, #0x0
  408610:	cset	w9, ne  // ne = any
  408614:	mov	w10, #0x1                   	// #1
  408618:	eor	w9, w9, #0x1
  40861c:	eor	w9, w9, w10
  408620:	eor	w9, w9, w10
  408624:	and	w9, w9, #0x1
  408628:	mov	w0, w9
  40862c:	sxtw	x8, w0
  408630:	cbz	x8, 408658 <clock_supported@plt+0x4360>
  408634:	mov	w8, wzr
  408638:	mov	w0, w8
  40863c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408640:	add	x1, x1, #0x935
  408644:	ldr	x2, [sp]
  408648:	mov	w3, #0xcd                  	// #205
  40864c:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  408650:	add	x4, x4, #0x960
  408654:	bl	403958 <log_assert_failed_realm@plt>
  408658:	ldur	x0, [x29, #-16]
  40865c:	mov	w1, #0x12                  	// #18
  408660:	bl	403e48 <sd_netlink_message_enter_container@plt>
  408664:	str	w0, [sp, #12]
  408668:	ldr	w8, [sp, #12]
  40866c:	cmp	w8, #0x0
  408670:	cset	w8, ge  // ge = tcont
  408674:	tbnz	w8, #0, 408684 <clock_supported@plt+0x438c>
  408678:	ldr	w8, [sp, #12]
  40867c:	stur	w8, [x29, #-4]
  408680:	b	4088fc <clock_supported@plt+0x4604>
  408684:	ldur	x0, [x29, #-16]
  408688:	mov	w1, #0x1                   	// #1
  40868c:	add	x2, sp, #0x10
  408690:	bl	403cf8 <sd_netlink_message_read_string@plt>
  408694:	str	w0, [sp, #12]
  408698:	ldr	w8, [sp, #12]
  40869c:	cmp	w8, #0x0
  4086a0:	cset	w8, ge  // ge = tcont
  4086a4:	tbnz	w8, #0, 4086b4 <clock_supported@plt+0x43bc>
  4086a8:	ldr	w8, [sp, #12]
  4086ac:	stur	w8, [x29, #-4]
  4086b0:	b	4088fc <clock_supported@plt+0x4604>
  4086b4:	ldur	x0, [x29, #-16]
  4086b8:	mov	w1, #0x2                   	// #2
  4086bc:	bl	403e48 <sd_netlink_message_enter_container@plt>
  4086c0:	str	w0, [sp, #12]
  4086c4:	ldr	w8, [sp, #12]
  4086c8:	cmp	w8, #0x0
  4086cc:	cset	w8, ge  // ge = tcont
  4086d0:	tbnz	w8, #0, 4086e0 <clock_supported@plt+0x43e8>
  4086d4:	ldr	w8, [sp, #12]
  4086d8:	stur	w8, [x29, #-4]
  4086dc:	b	4088fc <clock_supported@plt+0x4604>
  4086e0:	ldr	x0, [sp, #16]
  4086e4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4086e8:	add	x1, x1, #0x994
  4086ec:	bl	403e58 <strcmp@plt>
  4086f0:	cbnz	w0, 40879c <clock_supported@plt+0x44a4>
  4086f4:	ldur	x0, [x29, #-16]
  4086f8:	ldr	x8, [sp, #24]
  4086fc:	add	x2, x8, #0x150
  408700:	mov	w1, #0x1                   	// #1
  408704:	bl	403d58 <sd_netlink_message_read_u32@plt>
  408708:	ldur	x8, [x29, #-16]
  40870c:	ldr	x9, [sp, #24]
  408710:	add	x2, x9, #0x154
  408714:	mov	x0, x8
  408718:	mov	w1, #0x2                   	// #2
  40871c:	bl	403d58 <sd_netlink_message_read_u32@plt>
  408720:	ldur	x8, [x29, #-16]
  408724:	ldr	x9, [sp, #24]
  408728:	add	x2, x9, #0x158
  40872c:	mov	x0, x8
  408730:	mov	w1, #0x3                   	// #3
  408734:	bl	403d58 <sd_netlink_message_read_u32@plt>
  408738:	ldur	x8, [x29, #-16]
  40873c:	ldr	x9, [sp, #24]
  408740:	add	x2, x9, #0x15c
  408744:	mov	x0, x8
  408748:	mov	w1, #0x4                   	// #4
  40874c:	bl	403d58 <sd_netlink_message_read_u32@plt>
  408750:	ldur	x8, [x29, #-16]
  408754:	ldr	x9, [sp, #24]
  408758:	add	x2, x9, #0x160
  40875c:	mov	x0, x8
  408760:	mov	w1, #0x5                   	// #5
  408764:	bl	403d58 <sd_netlink_message_read_u32@plt>
  408768:	ldur	x8, [x29, #-16]
  40876c:	ldr	x9, [sp, #24]
  408770:	add	x2, x9, #0x164
  408774:	mov	x0, x8
  408778:	mov	w1, #0x6                   	// #6
  40877c:	bl	403e68 <sd_netlink_message_read_u16@plt>
  408780:	ldur	x8, [x29, #-16]
  408784:	ldr	x9, [sp, #24]
  408788:	add	x2, x9, #0x166
  40878c:	mov	x0, x8
  408790:	mov	w1, #0x2b                  	// #43
  408794:	bl	403e78 <sd_netlink_message_read_u8@plt>
  408798:	b	4088cc <clock_supported@plt+0x45d4>
  40879c:	ldr	x0, [sp, #16]
  4087a0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4087a4:	add	x1, x1, #0x99b
  4087a8:	bl	403e58 <strcmp@plt>
  4087ac:	cbnz	w0, 4088cc <clock_supported@plt+0x45d4>
  4087b0:	ldur	x0, [x29, #-16]
  4087b4:	ldr	x8, [sp, #24]
  4087b8:	add	x2, x8, #0x168
  4087bc:	mov	w1, #0x1                   	// #1
  4087c0:	bl	403d58 <sd_netlink_message_read_u32@plt>
  4087c4:	ldur	x8, [x29, #-16]
  4087c8:	ldr	x9, [sp, #24]
  4087cc:	add	x2, x9, #0x188
  4087d0:	mov	x0, x8
  4087d4:	mov	w1, #0x2                   	// #2
  4087d8:	bl	403e88 <sd_netlink_message_read_in_addr@plt>
  4087dc:	str	w0, [sp, #12]
  4087e0:	ldr	w10, [sp, #12]
  4087e4:	cmp	w10, #0x0
  4087e8:	cset	w10, lt  // lt = tstop
  4087ec:	tbnz	w10, #0, 408800 <clock_supported@plt+0x4508>
  4087f0:	ldr	x8, [sp, #24]
  4087f4:	mov	w9, #0x2                   	// #2
  4087f8:	str	w9, [x8, #372]
  4087fc:	b	408834 <clock_supported@plt+0x453c>
  408800:	ldur	x0, [x29, #-16]
  408804:	ldr	x8, [sp, #24]
  408808:	add	x2, x8, #0x188
  40880c:	mov	w1, #0x10                  	// #16
  408810:	bl	403e98 <sd_netlink_message_read_in6_addr@plt>
  408814:	str	w0, [sp, #12]
  408818:	ldr	w9, [sp, #12]
  40881c:	cmp	w9, #0x0
  408820:	cset	w9, lt  // lt = tstop
  408824:	tbnz	w9, #0, 408834 <clock_supported@plt+0x453c>
  408828:	ldr	x8, [sp, #24]
  40882c:	mov	w9, #0xa                   	// #10
  408830:	str	w9, [x8, #372]
  408834:	ldur	x0, [x29, #-16]
  408838:	ldr	x8, [sp, #24]
  40883c:	add	x2, x8, #0x178
  408840:	mov	w1, #0x4                   	// #4
  408844:	bl	403e88 <sd_netlink_message_read_in_addr@plt>
  408848:	str	w0, [sp, #12]
  40884c:	ldr	w9, [sp, #12]
  408850:	cmp	w9, #0x0
  408854:	cset	w9, lt  // lt = tstop
  408858:	tbnz	w9, #0, 40886c <clock_supported@plt+0x4574>
  40885c:	ldr	x8, [sp, #24]
  408860:	mov	w9, #0x2                   	// #2
  408864:	str	w9, [x8, #368]
  408868:	b	4088a0 <clock_supported@plt+0x45a8>
  40886c:	ldur	x0, [x29, #-16]
  408870:	ldr	x8, [sp, #24]
  408874:	add	x2, x8, #0x178
  408878:	mov	w1, #0x11                  	// #17
  40887c:	bl	403e98 <sd_netlink_message_read_in6_addr@plt>
  408880:	str	w0, [sp, #12]
  408884:	ldr	w9, [sp, #12]
  408888:	cmp	w9, #0x0
  40888c:	cset	w9, lt  // lt = tstop
  408890:	tbnz	w9, #0, 4088a0 <clock_supported@plt+0x45a8>
  408894:	ldr	x8, [sp, #24]
  408898:	mov	w9, #0xa                   	// #10
  40889c:	str	w9, [x8, #368]
  4088a0:	ldur	x0, [x29, #-16]
  4088a4:	ldr	x8, [sp, #24]
  4088a8:	add	x2, x8, #0x16c
  4088ac:	mov	w1, #0x3                   	// #3
  4088b0:	bl	403d58 <sd_netlink_message_read_u32@plt>
  4088b4:	ldur	x8, [x29, #-16]
  4088b8:	ldr	x9, [sp, #24]
  4088bc:	add	x2, x9, #0x198
  4088c0:	mov	x0, x8
  4088c4:	mov	w1, #0xf                   	// #15
  4088c8:	bl	403e68 <sd_netlink_message_read_u16@plt>
  4088cc:	ldr	x8, [sp, #24]
  4088d0:	add	x0, x8, #0x11
  4088d4:	ldr	x1, [sp, #16]
  4088d8:	mov	x2, #0x10                  	// #16
  4088dc:	bl	403ea8 <strncpy@plt>
  4088e0:	ldur	x8, [x29, #-16]
  4088e4:	mov	x0, x8
  4088e8:	bl	403eb8 <sd_netlink_message_exit_container@plt>
  4088ec:	ldur	x8, [x29, #-16]
  4088f0:	mov	x0, x8
  4088f4:	bl	403eb8 <sd_netlink_message_exit_container@plt>
  4088f8:	stur	wzr, [x29, #-4]
  4088fc:	ldur	w0, [x29, #-4]
  408900:	ldp	x29, x30, [sp, #48]
  408904:	add	sp, sp, #0x40
  408908:	ret
  40890c:	sub	sp, sp, #0x20
  408910:	stp	x29, x30, [sp, #16]
  408914:	add	x29, sp, #0x10
  408918:	str	x0, [sp, #8]
  40891c:	str	x1, [sp]
  408920:	ldr	x0, [sp, #8]
  408924:	ldr	x1, [sp]
  408928:	bl	403ec8 <strcmp_ptr@plt>
  40892c:	cmp	w0, #0x0
  408930:	cset	w8, eq  // eq = none
  408934:	and	w0, w8, #0x1
  408938:	ldp	x29, x30, [sp, #16]
  40893c:	add	sp, sp, #0x20
  408940:	ret
  408944:	sub	sp, sp, #0x20
  408948:	stp	x29, x30, [sp, #16]
  40894c:	add	x29, sp, #0x10
  408950:	str	x0, [sp, #8]
  408954:	ldr	x8, [sp, #8]
  408958:	ldr	x8, [x8]
  40895c:	cbz	x8, 40896c <clock_supported@plt+0x4674>
  408960:	ldr	x8, [sp, #8]
  408964:	ldr	x0, [x8]
  408968:	bl	403ed8 <sd_bus_message_unref@plt>
  40896c:	ldp	x29, x30, [sp, #16]
  408970:	add	sp, sp, #0x20
  408974:	ret
  408978:	sub	sp, sp, #0x20
  40897c:	stp	x29, x30, [sp, #16]
  408980:	add	x29, sp, #0x10
  408984:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  408988:	add	x8, x8, #0xc39
  40898c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  408990:	add	x9, x9, #0x6c7
  408994:	str	x8, [sp, #8]
  408998:	str	x9, [sp]
  40899c:	bl	403a08 <colors_enabled@plt>
  4089a0:	tst	w0, #0x1
  4089a4:	ldr	x8, [sp, #8]
  4089a8:	ldr	x9, [sp]
  4089ac:	csel	x0, x8, x9, ne  // ne = any
  4089b0:	ldp	x29, x30, [sp, #16]
  4089b4:	add	sp, sp, #0x20
  4089b8:	ret
  4089bc:	sub	sp, sp, #0x20
  4089c0:	stp	x29, x30, [sp, #16]
  4089c4:	add	x29, sp, #0x10
  4089c8:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  4089cc:	add	x8, x8, #0xc43
  4089d0:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  4089d4:	add	x9, x9, #0x6c7
  4089d8:	str	x8, [sp, #8]
  4089dc:	str	x9, [sp]
  4089e0:	bl	403a08 <colors_enabled@plt>
  4089e4:	tst	w0, #0x1
  4089e8:	ldr	x8, [sp, #8]
  4089ec:	ldr	x9, [sp]
  4089f0:	csel	x0, x8, x9, ne  // ne = any
  4089f4:	ldp	x29, x30, [sp, #16]
  4089f8:	add	sp, sp, #0x20
  4089fc:	ret
  408a00:	sub	sp, sp, #0x20
  408a04:	stp	x29, x30, [sp, #16]
  408a08:	add	x29, sp, #0x10
  408a0c:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  408a10:	add	x8, x8, #0xcbe
  408a14:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  408a18:	add	x9, x9, #0x6c7
  408a1c:	str	x8, [sp, #8]
  408a20:	str	x9, [sp]
  408a24:	bl	403a08 <colors_enabled@plt>
  408a28:	tst	w0, #0x1
  408a2c:	ldr	x8, [sp, #8]
  408a30:	ldr	x9, [sp]
  408a34:	csel	x0, x8, x9, ne  // ne = any
  408a38:	ldp	x29, x30, [sp, #16]
  408a3c:	add	sp, sp, #0x20
  408a40:	ret
  408a44:	sub	sp, sp, #0x10
  408a48:	str	x0, [sp, #8]
  408a4c:	ldr	x8, [sp, #8]
  408a50:	mov	w9, #0x1                   	// #1
  408a54:	str	w9, [sp, #4]
  408a58:	cbz	x8, 408a74 <clock_supported@plt+0x477c>
  408a5c:	ldr	x8, [sp, #8]
  408a60:	ldrb	w9, [x8]
  408a64:	cmp	w9, #0x0
  408a68:	cset	w9, ne  // ne = any
  408a6c:	eor	w9, w9, #0x1
  408a70:	str	w9, [sp, #4]
  408a74:	ldr	w8, [sp, #4]
  408a78:	and	w0, w8, #0x1
  408a7c:	add	sp, sp, #0x10
  408a80:	ret
  408a84:	sub	sp, sp, #0x20
  408a88:	stp	x29, x30, [sp, #16]
  408a8c:	add	x29, sp, #0x10
  408a90:	str	x0, [sp, #8]
  408a94:	ldr	x8, [sp, #8]
  408a98:	ldr	x8, [x8]
  408a9c:	cbz	x8, 408aac <clock_supported@plt+0x47b4>
  408aa0:	ldr	x8, [sp, #8]
  408aa4:	ldr	x0, [x8]
  408aa8:	bl	403ee8 <sd_bus_flush_close_unref@plt>
  408aac:	ldp	x29, x30, [sp, #16]
  408ab0:	add	sp, sp, #0x20
  408ab4:	ret
  408ab8:	sub	sp, sp, #0x20
  408abc:	stp	x29, x30, [sp, #16]
  408ac0:	add	x29, sp, #0x10
  408ac4:	str	x0, [sp, #8]
  408ac8:	ldr	x8, [sp, #8]
  408acc:	ldr	x8, [x8]
  408ad0:	cbz	x8, 408ae0 <clock_supported@plt+0x47e8>
  408ad4:	ldr	x8, [sp, #8]
  408ad8:	ldr	x0, [x8]
  408adc:	bl	403ef8 <sd_hwdb_unref@plt>
  408ae0:	ldp	x29, x30, [sp, #16]
  408ae4:	add	sp, sp, #0x20
  408ae8:	ret
  408aec:	sub	sp, sp, #0xe0
  408af0:	stp	x29, x30, [sp, #208]
  408af4:	add	x29, sp, #0xd0
  408af8:	mov	x8, xzr
  408afc:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  408b00:	add	x9, x9, #0x31c
  408b04:	add	x9, x9, #0x3
  408b08:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  408b0c:	add	x10, x10, #0xd1e
  408b10:	stur	x0, [x29, #-16]
  408b14:	stur	x1, [x29, #-24]
  408b18:	stur	x8, [x29, #-32]
  408b1c:	stur	x8, [x29, #-40]
  408b20:	stur	x8, [x29, #-48]
  408b24:	stur	x8, [x29, #-56]
  408b28:	stur	x8, [x29, #-64]
  408b2c:	stur	x8, [x29, #-88]
  408b30:	str	x9, [sp, #96]
  408b34:	str	x10, [sp, #88]
  408b38:	ldur	x8, [x29, #-16]
  408b3c:	cmp	x8, #0x0
  408b40:	cset	w9, ne  // ne = any
  408b44:	mov	w10, #0x1                   	// #1
  408b48:	eor	w9, w9, #0x1
  408b4c:	eor	w9, w9, w10
  408b50:	eor	w9, w9, w10
  408b54:	and	w9, w9, #0x1
  408b58:	mov	w0, w9
  408b5c:	sxtw	x8, w0
  408b60:	cbz	x8, 408b84 <clock_supported@plt+0x488c>
  408b64:	mov	w8, wzr
  408b68:	mov	w0, w8
  408b6c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408b70:	add	x1, x1, #0x852
  408b74:	ldr	x2, [sp, #96]
  408b78:	mov	w3, #0x5a1                 	// #1441
  408b7c:	ldr	x4, [sp, #88]
  408b80:	bl	403958 <log_assert_failed_realm@plt>
  408b84:	sub	x0, x29, #0x20
  408b88:	bl	403f08 <sd_network_get_operational_state@plt>
  408b8c:	ldur	x1, [x29, #-32]
  408b90:	mov	x8, xzr
  408b94:	mov	x0, x8
  408b98:	sub	x2, x29, #0x48
  408b9c:	sub	x3, x29, #0x50
  408ba0:	str	x8, [sp, #80]
  408ba4:	bl	407204 <clock_supported@plt+0x2f0c>
  408ba8:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  408bac:	add	x0, x0, #0xd49
  408bb0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408bb4:	add	x1, x1, #0xd4d
  408bb8:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  408bbc:	add	x2, x2, #0xd51
  408bc0:	ldr	x3, [sp, #80]
  408bc4:	bl	403a68 <table_new_internal@plt>
  408bc8:	stur	x0, [x29, #-88]
  408bcc:	ldur	x8, [x29, #-88]
  408bd0:	cbnz	x8, 408be8 <clock_supported@plt+0x48f0>
  408bd4:	mov	w8, #0xfffffff4            	// #-12
  408bd8:	stur	w8, [x29, #-4]
  408bdc:	mov	w8, #0x1                   	// #1
  408be0:	str	w8, [sp, #104]
  408be4:	b	408f44 <clock_supported@plt+0x4c4c>
  408be8:	ldur	x0, [x29, #-88]
  408bec:	mov	x8, xzr
  408bf0:	mov	x1, x8
  408bf4:	mov	x2, x8
  408bf8:	bl	403a88 <table_get_cell@plt>
  408bfc:	stur	x0, [x29, #-96]
  408c00:	cmp	x0, #0x0
  408c04:	cset	w9, ne  // ne = any
  408c08:	mov	w10, #0x1                   	// #1
  408c0c:	eor	w9, w9, #0x1
  408c10:	eor	w9, w9, w10
  408c14:	eor	w9, w9, w10
  408c18:	and	w9, w9, #0x1
  408c1c:	mov	w0, w9
  408c20:	sxtw	x8, w0
  408c24:	cbz	x8, 408c48 <clock_supported@plt+0x4950>
  408c28:	mov	w8, wzr
  408c2c:	mov	w0, w8
  408c30:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408c34:	add	x1, x1, #0x7b0
  408c38:	ldr	x2, [sp, #96]
  408c3c:	mov	w3, #0x5aa                 	// #1450
  408c40:	ldr	x4, [sp, #88]
  408c44:	bl	403958 <log_assert_failed_realm@plt>
  408c48:	ldur	x0, [x29, #-88]
  408c4c:	ldur	x1, [x29, #-96]
  408c50:	mov	w2, #0x64                  	// #100
  408c54:	bl	403ab8 <table_set_ellipsize_percent@plt>
  408c58:	ldur	x0, [x29, #-88]
  408c5c:	mov	x8, xzr
  408c60:	mov	x1, x8
  408c64:	mov	x2, #0x1                   	// #1
  408c68:	bl	403a88 <table_get_cell@plt>
  408c6c:	stur	x0, [x29, #-96]
  408c70:	cmp	x0, #0x0
  408c74:	cset	w9, ne  // ne = any
  408c78:	mov	w10, #0x1                   	// #1
  408c7c:	eor	w9, w9, #0x1
  408c80:	eor	w9, w9, w10
  408c84:	eor	w9, w9, w10
  408c88:	and	w9, w9, #0x1
  408c8c:	mov	w0, w9
  408c90:	sxtw	x8, w0
  408c94:	cbz	x8, 408cb8 <clock_supported@plt+0x49c0>
  408c98:	mov	w8, wzr
  408c9c:	mov	w0, w8
  408ca0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408ca4:	add	x1, x1, #0x7f8
  408ca8:	ldr	x2, [sp, #96]
  408cac:	mov	w3, #0x5ad                 	// #1453
  408cb0:	ldr	x4, [sp, #88]
  408cb4:	bl	403958 <log_assert_failed_realm@plt>
  408cb8:	ldur	x0, [x29, #-88]
  408cbc:	ldur	x1, [x29, #-96]
  408cc0:	mov	w8, #0x64                  	// #100
  408cc4:	mov	w2, w8
  408cc8:	str	w8, [sp, #76]
  408ccc:	bl	403ac8 <table_set_align_percent@plt>
  408cd0:	ldur	x9, [x29, #-88]
  408cd4:	ldur	x1, [x29, #-96]
  408cd8:	mov	x0, x9
  408cdc:	ldr	w2, [sp, #76]
  408ce0:	bl	403ab8 <table_set_ellipsize_percent@plt>
  408ce4:	ldur	x9, [x29, #-88]
  408ce8:	mov	x0, x9
  408cec:	mov	w8, wzr
  408cf0:	and	w1, w8, #0x1
  408cf4:	bl	403a78 <table_set_header@plt>
  408cf8:	ldur	x0, [x29, #-88]
  408cfc:	mov	w8, #0x5                   	// #5
  408d00:	str	x0, [sp, #64]
  408d04:	mov	w0, w8
  408d08:	bl	403f18 <special_glyph@plt>
  408d0c:	ldur	x4, [x29, #-72]
  408d10:	ldur	x9, [x29, #-32]
  408d14:	str	x0, [sp, #56]
  408d18:	mov	x0, x9
  408d1c:	str	x4, [sp, #48]
  408d20:	bl	407664 <clock_supported@plt+0x336c>
  408d24:	ldur	x9, [x29, #-72]
  408d28:	ldr	x10, [sp, #64]
  408d2c:	str	x0, [sp, #40]
  408d30:	mov	x0, x10
  408d34:	mov	w8, #0x1                   	// #1
  408d38:	mov	w1, w8
  408d3c:	ldr	x2, [sp, #56]
  408d40:	mov	w11, #0x1e                  	// #30
  408d44:	mov	w3, w11
  408d48:	ldr	x4, [sp, #48]
  408d4c:	mov	w5, w8
  408d50:	adrp	x6, 412000 <clock_supported@plt+0xdd08>
  408d54:	add	x6, x6, #0xd57
  408d58:	mov	w7, w8
  408d5c:	mov	x12, sp
  408d60:	ldr	x13, [sp, #40]
  408d64:	str	x13, [x12]
  408d68:	mov	x12, sp
  408d6c:	str	w11, [x12, #8]
  408d70:	mov	x12, sp
  408d74:	str	x9, [x12, #16]
  408d78:	mov	x9, sp
  408d7c:	mov	w8, #0x18                  	// #24
  408d80:	str	w8, [x9, #24]
  408d84:	bl	403b08 <table_add_many_internal@plt>
  408d88:	stur	w0, [x29, #-100]
  408d8c:	ldur	x0, [x29, #-16]
  408d90:	ldur	x1, [x29, #-88]
  408d94:	mov	w8, wzr
  408d98:	mov	w2, w8
  408d9c:	bl	40ac9c <clock_supported@plt+0x69a4>
  408da0:	stur	w0, [x29, #-100]
  408da4:	ldur	w8, [x29, #-100]
  408da8:	cmp	w8, #0x0
  408dac:	cset	w8, ge  // ge = tcont
  408db0:	tbnz	w8, #0, 408dc8 <clock_supported@plt+0x4ad0>
  408db4:	ldur	w8, [x29, #-100]
  408db8:	stur	w8, [x29, #-4]
  408dbc:	mov	w8, #0x1                   	// #1
  408dc0:	str	w8, [sp, #104]
  408dc4:	b	408f44 <clock_supported@plt+0x4c4c>
  408dc8:	ldur	x0, [x29, #-16]
  408dcc:	ldur	x1, [x29, #-24]
  408dd0:	ldur	x2, [x29, #-88]
  408dd4:	mov	w8, wzr
  408dd8:	mov	w3, w8
  408ddc:	bl	40b03c <clock_supported@plt+0x6d44>
  408de0:	stur	w0, [x29, #-100]
  408de4:	ldur	w8, [x29, #-100]
  408de8:	cmp	w8, #0x0
  408dec:	cset	w8, ge  // ge = tcont
  408df0:	tbnz	w8, #0, 408e08 <clock_supported@plt+0x4b10>
  408df4:	ldur	w8, [x29, #-100]
  408df8:	stur	w8, [x29, #-4]
  408dfc:	mov	w8, #0x1                   	// #1
  408e00:	str	w8, [sp, #104]
  408e04:	b	408f44 <clock_supported@plt+0x4c4c>
  408e08:	sub	x0, x29, #0x28
  408e0c:	bl	403f28 <sd_network_get_dns@plt>
  408e10:	ldur	x8, [x29, #-88]
  408e14:	ldur	x2, [x29, #-40]
  408e18:	mov	x0, x8
  408e1c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408e20:	add	x1, x1, #0xd5e
  408e24:	bl	40b4b8 <clock_supported@plt+0x71c0>
  408e28:	stur	w0, [x29, #-100]
  408e2c:	ldur	w9, [x29, #-100]
  408e30:	cmp	w9, #0x0
  408e34:	cset	w9, ge  // ge = tcont
  408e38:	tbnz	w9, #0, 408e50 <clock_supported@plt+0x4b58>
  408e3c:	ldur	w8, [x29, #-100]
  408e40:	stur	w8, [x29, #-4]
  408e44:	mov	w8, #0x1                   	// #1
  408e48:	str	w8, [sp, #104]
  408e4c:	b	408f44 <clock_supported@plt+0x4c4c>
  408e50:	sub	x0, x29, #0x38
  408e54:	bl	403f38 <sd_network_get_search_domains@plt>
  408e58:	ldur	x8, [x29, #-88]
  408e5c:	ldur	x2, [x29, #-56]
  408e60:	mov	x0, x8
  408e64:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408e68:	add	x1, x1, #0xd63
  408e6c:	bl	40b4b8 <clock_supported@plt+0x71c0>
  408e70:	stur	w0, [x29, #-100]
  408e74:	ldur	w9, [x29, #-100]
  408e78:	cmp	w9, #0x0
  408e7c:	cset	w9, ge  // ge = tcont
  408e80:	tbnz	w9, #0, 408e98 <clock_supported@plt+0x4ba0>
  408e84:	ldur	w8, [x29, #-100]
  408e88:	stur	w8, [x29, #-4]
  408e8c:	mov	w8, #0x1                   	// #1
  408e90:	str	w8, [sp, #104]
  408e94:	b	408f44 <clock_supported@plt+0x4c4c>
  408e98:	sub	x0, x29, #0x40
  408e9c:	bl	403f48 <sd_network_get_route_domains@plt>
  408ea0:	ldur	x8, [x29, #-88]
  408ea4:	ldur	x2, [x29, #-64]
  408ea8:	mov	x0, x8
  408eac:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408eb0:	add	x1, x1, #0xd73
  408eb4:	bl	40b4b8 <clock_supported@plt+0x71c0>
  408eb8:	stur	w0, [x29, #-100]
  408ebc:	ldur	w9, [x29, #-100]
  408ec0:	cmp	w9, #0x0
  408ec4:	cset	w9, ge  // ge = tcont
  408ec8:	tbnz	w9, #0, 408ee0 <clock_supported@plt+0x4be8>
  408ecc:	ldur	w8, [x29, #-100]
  408ed0:	stur	w8, [x29, #-4]
  408ed4:	mov	w8, #0x1                   	// #1
  408ed8:	str	w8, [sp, #104]
  408edc:	b	408f44 <clock_supported@plt+0x4c4c>
  408ee0:	sub	x0, x29, #0x30
  408ee4:	bl	403f58 <sd_network_get_ntp@plt>
  408ee8:	ldur	x8, [x29, #-88]
  408eec:	ldur	x2, [x29, #-48]
  408ef0:	mov	x0, x8
  408ef4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  408ef8:	add	x1, x1, #0xd82
  408efc:	bl	40b4b8 <clock_supported@plt+0x71c0>
  408f00:	stur	w0, [x29, #-100]
  408f04:	ldur	w9, [x29, #-100]
  408f08:	cmp	w9, #0x0
  408f0c:	cset	w9, ge  // ge = tcont
  408f10:	tbnz	w9, #0, 408f28 <clock_supported@plt+0x4c30>
  408f14:	ldur	w8, [x29, #-100]
  408f18:	stur	w8, [x29, #-4]
  408f1c:	mov	w8, #0x1                   	// #1
  408f20:	str	w8, [sp, #104]
  408f24:	b	408f44 <clock_supported@plt+0x4c4c>
  408f28:	ldur	x0, [x29, #-88]
  408f2c:	mov	x8, xzr
  408f30:	mov	x1, x8
  408f34:	bl	403b18 <table_print@plt>
  408f38:	stur	w0, [x29, #-4]
  408f3c:	mov	w9, #0x1                   	// #1
  408f40:	str	w9, [sp, #104]
  408f44:	sub	x0, x29, #0x58
  408f48:	bl	406d30 <clock_supported@plt+0x2a38>
  408f4c:	sub	x0, x29, #0x40
  408f50:	bl	40ac68 <clock_supported@plt+0x6970>
  408f54:	sub	x0, x29, #0x38
  408f58:	bl	40ac68 <clock_supported@plt+0x6970>
  408f5c:	sub	x0, x29, #0x30
  408f60:	bl	40ac68 <clock_supported@plt+0x6970>
  408f64:	sub	x0, x29, #0x28
  408f68:	bl	40ac68 <clock_supported@plt+0x6970>
  408f6c:	sub	x0, x29, #0x20
  408f70:	bl	404a10 <clock_supported@plt+0x718>
  408f74:	ldur	w0, [x29, #-4]
  408f78:	ldp	x29, x30, [sp, #208]
  408f7c:	add	sp, sp, #0xe0
  408f80:	ret
  408f84:	stp	x29, x30, [sp, #-48]!
  408f88:	str	x28, [sp, #16]
  408f8c:	stp	x20, x19, [sp, #32]
  408f90:	mov	x29, sp
  408f94:	sub	sp, sp, #0x3d0
  408f98:	sub	x8, x29, #0xd0
  408f9c:	mov	x9, xzr
  408fa0:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  408fa4:	add	x10, x10, #0x6c7
  408fa8:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  408fac:	add	x11, x11, #0x31c
  408fb0:	add	x11, x11, #0x3
  408fb4:	adrp	x12, 413000 <clock_supported@plt+0xed08>
  408fb8:	add	x12, x12, #0x43
  408fbc:	str	x0, [x8, #192]
  408fc0:	str	x1, [x8, #184]
  408fc4:	str	x2, [x8, #176]
  408fc8:	str	x9, [x8, #168]
  408fcc:	str	x9, [x8, #160]
  408fd0:	str	x9, [x8, #152]
  408fd4:	str	x9, [x8, #144]
  408fd8:	str	x9, [x8, #136]
  408fdc:	str	x9, [x8, #128]
  408fe0:	str	x9, [x8, #120]
  408fe4:	str	x9, [x8, #112]
  408fe8:	str	x9, [x8, #104]
  408fec:	str	x9, [x8, #96]
  408ff0:	str	x9, [x8, #88]
  408ff4:	str	x9, [x8, #80]
  408ff8:	str	x9, [x8, #72]
  408ffc:	str	x9, [x8, #64]
  409000:	str	x9, [x8, #24]
  409004:	str	x9, [x8, #16]
  409008:	str	x9, [x8, #8]
  40900c:	str	x8, [sp, #624]
  409010:	str	x10, [sp, #616]
  409014:	str	x11, [sp, #608]
  409018:	str	x12, [sp, #600]
  40901c:	ldr	x8, [sp, #624]
  409020:	ldr	x9, [x8, #192]
  409024:	cmp	x9, #0x0
  409028:	cset	w10, ne  // ne = any
  40902c:	mov	w11, #0x1                   	// #1
  409030:	eor	w10, w10, #0x1
  409034:	eor	w10, w10, w11
  409038:	eor	w10, w10, w11
  40903c:	and	w10, w10, #0x1
  409040:	mov	w0, w10
  409044:	sxtw	x9, w0
  409048:	cbz	x9, 40906c <clock_supported@plt+0x4d74>
  40904c:	mov	w8, wzr
  409050:	mov	w0, w8
  409054:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409058:	add	x1, x1, #0x852
  40905c:	ldr	x2, [sp, #608]
  409060:	mov	w3, #0x42d                 	// #1069
  409064:	ldr	x4, [sp, #600]
  409068:	bl	403958 <log_assert_failed_realm@plt>
  40906c:	ldr	x8, [sp, #624]
  409070:	ldr	x9, [x8, #176]
  409074:	cmp	x9, #0x0
  409078:	cset	w10, ne  // ne = any
  40907c:	mov	w11, #0x1                   	// #1
  409080:	eor	w10, w10, #0x1
  409084:	eor	w10, w10, w11
  409088:	eor	w10, w10, w11
  40908c:	and	w10, w10, #0x1
  409090:	mov	w0, w10
  409094:	sxtw	x9, w0
  409098:	cbz	x9, 4090bc <clock_supported@plt+0x4dc4>
  40909c:	mov	w8, wzr
  4090a0:	mov	w0, w8
  4090a4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4090a8:	add	x1, x1, #0x935
  4090ac:	ldr	x2, [sp, #608]
  4090b0:	mov	w3, #0x42e                 	// #1070
  4090b4:	ldr	x4, [sp, #600]
  4090b8:	bl	403958 <log_assert_failed_realm@plt>
  4090bc:	ldr	x8, [sp, #624]
  4090c0:	ldr	x9, [x8, #176]
  4090c4:	ldr	w0, [x9, #96]
  4090c8:	sub	x1, x29, #0x50
  4090cc:	bl	403ad8 <sd_network_link_get_operational_state@plt>
  4090d0:	ldr	x8, [sp, #624]
  4090d4:	ldr	x9, [x8, #176]
  4090d8:	ldr	x1, [x8, #128]
  4090dc:	mov	x0, x9
  4090e0:	sub	x2, x29, #0x98
  4090e4:	sub	x3, x29, #0xa0
  4090e8:	bl	407204 <clock_supported@plt+0x2f0c>
  4090ec:	ldr	x8, [sp, #624]
  4090f0:	ldr	x9, [x8, #176]
  4090f4:	ldr	w0, [x9, #96]
  4090f8:	sub	x1, x29, #0x48
  4090fc:	bl	403ae8 <sd_network_link_get_setup_state@plt>
  409100:	stur	w0, [x29, #-212]
  409104:	ldur	w10, [x29, #-212]
  409108:	mov	w11, #0xffffffc3            	// #-61
  40910c:	cmp	w10, w11
  409110:	b.ne	409128 <clock_supported@plt+0x4e30>  // b.any
  409114:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  409118:	add	x0, x0, #0x81b
  40911c:	bl	403af8 <strdup@plt>
  409120:	ldr	x8, [sp, #624]
  409124:	str	x0, [x8, #136]
  409128:	ldr	x8, [sp, #624]
  40912c:	ldr	x0, [x8, #136]
  409130:	sub	x1, x29, #0xa8
  409134:	sub	x2, x29, #0xb0
  409138:	bl	4073dc <clock_supported@plt+0x30e4>
  40913c:	ldr	x8, [sp, #624]
  409140:	ldr	x9, [x8, #176]
  409144:	ldr	w0, [x9, #96]
  409148:	sub	x1, x29, #0x28
  40914c:	bl	403f68 <sd_network_link_get_dns@plt>
  409150:	ldr	x8, [sp, #624]
  409154:	ldr	x9, [x8, #176]
  409158:	ldr	w10, [x9, #96]
  40915c:	mov	w0, w10
  409160:	sub	x1, x29, #0x38
  409164:	bl	403f78 <sd_network_link_get_search_domains@plt>
  409168:	ldr	x8, [sp, #624]
  40916c:	ldr	x9, [x8, #176]
  409170:	ldr	w10, [x9, #96]
  409174:	mov	w0, w10
  409178:	sub	x1, x29, #0x40
  40917c:	bl	403f88 <sd_network_link_get_route_domains@plt>
  409180:	ldr	x8, [sp, #624]
  409184:	ldr	x9, [x8, #176]
  409188:	ldr	w10, [x9, #96]
  40918c:	mov	w0, w10
  409190:	sub	x1, x29, #0x30
  409194:	bl	403f98 <sd_network_link_get_ntp@plt>
  409198:	ldr	x8, [sp, #624]
  40919c:	ldr	x9, [x8, #176]
  4091a0:	ldr	x9, [x9, #88]
  4091a4:	cbz	x9, 409290 <clock_supported@plt+0x4f98>
  4091a8:	ldr	x8, [sp, #624]
  4091ac:	ldr	x9, [x8, #176]
  4091b0:	ldr	x0, [x9, #88]
  4091b4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4091b8:	add	x1, x1, #0x82
  4091bc:	sub	x2, x29, #0x90
  4091c0:	bl	403fa8 <sd_device_get_property_value@plt>
  4091c4:	ldr	x8, [sp, #624]
  4091c8:	ldr	x9, [x8, #176]
  4091cc:	ldr	x9, [x9, #88]
  4091d0:	mov	x0, x9
  4091d4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4091d8:	add	x1, x1, #0x93
  4091dc:	sub	x2, x29, #0x70
  4091e0:	bl	403fa8 <sd_device_get_property_value@plt>
  4091e4:	ldr	x8, [sp, #624]
  4091e8:	ldr	x9, [x8, #176]
  4091ec:	ldr	x9, [x9, #88]
  4091f0:	mov	x0, x9
  4091f4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4091f8:	add	x1, x1, #0xa1
  4091fc:	sub	x2, x29, #0x78
  409200:	bl	403fa8 <sd_device_get_property_value@plt>
  409204:	ldr	x8, [sp, #624]
  409208:	ldr	x9, [x8, #176]
  40920c:	ldr	x9, [x9, #88]
  409210:	mov	x0, x9
  409214:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  409218:	add	x1, x1, #0xa9
  40921c:	sub	x2, x29, #0x80
  409220:	bl	403fa8 <sd_device_get_property_value@plt>
  409224:	cmp	w0, #0x0
  409228:	cset	w10, ge  // ge = tcont
  40922c:	tbnz	w10, #0, 40924c <clock_supported@plt+0x4f54>
  409230:	ldr	x8, [sp, #624]
  409234:	ldr	x9, [x8, #176]
  409238:	ldr	x0, [x9, #88]
  40923c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  409240:	add	x1, x1, #0xc1
  409244:	sub	x2, x29, #0x80
  409248:	bl	403fa8 <sd_device_get_property_value@plt>
  40924c:	ldr	x8, [sp, #624]
  409250:	ldr	x9, [x8, #176]
  409254:	ldr	x0, [x9, #88]
  409258:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40925c:	add	x1, x1, #0xcb
  409260:	sub	x2, x29, #0x88
  409264:	bl	403fa8 <sd_device_get_property_value@plt>
  409268:	cmp	w0, #0x0
  40926c:	cset	w10, ge  // ge = tcont
  409270:	tbnz	w10, #0, 409290 <clock_supported@plt+0x4f98>
  409274:	ldr	x8, [sp, #624]
  409278:	ldr	x9, [x8, #176]
  40927c:	ldr	x0, [x9, #88]
  409280:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  409284:	add	x1, x1, #0xe2
  409288:	sub	x2, x29, #0x88
  40928c:	bl	403fa8 <sd_device_get_property_value@plt>
  409290:	ldr	x8, [sp, #624]
  409294:	ldr	x9, [x8, #176]
  409298:	ldrh	w0, [x9, #100]
  40929c:	ldr	x9, [x8, #176]
  4092a0:	ldr	x1, [x9, #88]
  4092a4:	bl	4075b4 <clock_supported@plt+0x32bc>
  4092a8:	ldr	x8, [sp, #624]
  4092ac:	str	x0, [x8, #112]
  4092b0:	ldr	x9, [x8, #176]
  4092b4:	ldr	w0, [x9, #96]
  4092b8:	sub	x1, x29, #0x68
  4092bc:	bl	403fb8 <sd_network_link_get_network_file@plt>
  4092c0:	ldr	x8, [sp, #624]
  4092c4:	ldr	x9, [x8, #176]
  4092c8:	ldr	w10, [x9, #96]
  4092cc:	mov	w0, w10
  4092d0:	sub	x1, x29, #0xb8
  4092d4:	bl	403fc8 <sd_network_link_get_carrier_bound_to@plt>
  4092d8:	ldr	x8, [sp, #624]
  4092dc:	ldr	x9, [x8, #176]
  4092e0:	ldr	w10, [x9, #96]
  4092e4:	mov	w0, w10
  4092e8:	sub	x1, x29, #0xc0
  4092ec:	bl	403fd8 <sd_network_link_get_carrier_bound_by@plt>
  4092f0:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  4092f4:	add	x8, x8, #0xd49
  4092f8:	mov	x0, x8
  4092fc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409300:	add	x1, x1, #0xd4d
  409304:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  409308:	add	x2, x2, #0xd51
  40930c:	mov	x8, xzr
  409310:	mov	x3, x8
  409314:	bl	403a68 <table_new_internal@plt>
  409318:	ldr	x8, [sp, #624]
  40931c:	str	x0, [x8, #8]
  409320:	ldr	x9, [x8, #8]
  409324:	cbnz	x9, 409340 <clock_supported@plt+0x5048>
  409328:	mov	w8, #0xfffffff4            	// #-12
  40932c:	ldr	x9, [sp, #624]
  409330:	str	w8, [x9, #204]
  409334:	mov	w8, #0x1                   	// #1
  409338:	stur	w8, [x29, #-216]
  40933c:	b	40abec <clock_supported@plt+0x68f4>
  409340:	ldr	x8, [sp, #624]
  409344:	ldr	x0, [x8, #8]
  409348:	mov	x9, xzr
  40934c:	mov	x1, x9
  409350:	mov	x2, x9
  409354:	bl	403a88 <table_get_cell@plt>
  409358:	ldr	x8, [sp, #624]
  40935c:	str	x0, [x8]
  409360:	cmp	x0, #0x0
  409364:	cset	w10, ne  // ne = any
  409368:	mov	w11, #0x1                   	// #1
  40936c:	eor	w10, w10, #0x1
  409370:	eor	w10, w10, w11
  409374:	eor	w10, w10, w11
  409378:	and	w10, w10, #0x1
  40937c:	mov	w0, w10
  409380:	sxtw	x9, w0
  409384:	cbz	x9, 4093a8 <clock_supported@plt+0x50b0>
  409388:	mov	w8, wzr
  40938c:	mov	w0, w8
  409390:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409394:	add	x1, x1, #0x7b0
  409398:	ldr	x2, [sp, #608]
  40939c:	mov	w3, #0x454                 	// #1108
  4093a0:	ldr	x4, [sp, #600]
  4093a4:	bl	403958 <log_assert_failed_realm@plt>
  4093a8:	ldr	x8, [sp, #624]
  4093ac:	ldr	x0, [x8, #8]
  4093b0:	ldr	x1, [x8]
  4093b4:	mov	w2, #0x64                  	// #100
  4093b8:	bl	403ab8 <table_set_ellipsize_percent@plt>
  4093bc:	ldr	x8, [sp, #624]
  4093c0:	ldr	x0, [x8, #8]
  4093c4:	mov	x9, xzr
  4093c8:	mov	x1, x9
  4093cc:	mov	x2, #0x1                   	// #1
  4093d0:	bl	403a88 <table_get_cell@plt>
  4093d4:	ldr	x8, [sp, #624]
  4093d8:	str	x0, [x8]
  4093dc:	cmp	x0, #0x0
  4093e0:	cset	w10, ne  // ne = any
  4093e4:	mov	w11, #0x1                   	// #1
  4093e8:	eor	w10, w10, #0x1
  4093ec:	eor	w10, w10, w11
  4093f0:	eor	w10, w10, w11
  4093f4:	and	w10, w10, #0x1
  4093f8:	mov	w0, w10
  4093fc:	sxtw	x9, w0
  409400:	cbz	x9, 409424 <clock_supported@plt+0x512c>
  409404:	mov	w8, wzr
  409408:	mov	w0, w8
  40940c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409410:	add	x1, x1, #0x7f8
  409414:	ldr	x2, [sp, #608]
  409418:	mov	w3, #0x457                 	// #1111
  40941c:	ldr	x4, [sp, #600]
  409420:	bl	403958 <log_assert_failed_realm@plt>
  409424:	ldr	x8, [sp, #624]
  409428:	ldr	x0, [x8, #8]
  40942c:	ldr	x1, [x8]
  409430:	mov	w2, #0x64                  	// #100
  409434:	bl	403ab8 <table_set_ellipsize_percent@plt>
  409438:	ldr	x8, [sp, #624]
  40943c:	ldr	x9, [x8, #8]
  409440:	mov	x0, x9
  409444:	mov	w10, wzr
  409448:	and	w1, w10, #0x1
  40944c:	bl	403a78 <table_set_header@plt>
  409450:	ldr	x8, [sp, #624]
  409454:	ldr	x0, [x8, #8]
  409458:	mov	w10, #0x5                   	// #5
  40945c:	str	x0, [sp, #592]
  409460:	mov	w0, w10
  409464:	bl	403f18 <special_glyph@plt>
  409468:	ldr	x8, [sp, #624]
  40946c:	ldr	x4, [x8, #56]
  409470:	ldr	x9, [sp, #592]
  409474:	str	x0, [sp, #584]
  409478:	mov	x0, x9
  40947c:	mov	w1, #0x1                   	// #1
  409480:	ldr	x2, [sp, #584]
  409484:	mov	w3, #0x1e                  	// #30
  409488:	mov	w5, #0x18                  	// #24
  40948c:	bl	403b08 <table_add_many_internal@plt>
  409490:	stur	w0, [x29, #-212]
  409494:	ldur	w10, [x29, #-212]
  409498:	cmp	w10, #0x0
  40949c:	cset	w10, ge  // ge = tcont
  4094a0:	tbnz	w10, #0, 4094bc <clock_supported@plt+0x51c4>
  4094a4:	ldur	w8, [x29, #-212]
  4094a8:	ldr	x9, [sp, #624]
  4094ac:	str	w8, [x9, #204]
  4094b0:	mov	w8, #0x1                   	// #1
  4094b4:	stur	w8, [x29, #-216]
  4094b8:	b	40abec <clock_supported@plt+0x68f4>
  4094bc:	ldr	x8, [sp, #624]
  4094c0:	ldr	x0, [x8, #8]
  4094c4:	ldr	x9, [x8, #176]
  4094c8:	ldr	w3, [x9, #96]
  4094cc:	ldr	x4, [x8, #176]
  4094d0:	sub	x1, x29, #0xd0
  4094d4:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  4094d8:	add	x2, x2, #0xeb
  4094dc:	bl	403fe8 <table_add_cell_stringf@plt>
  4094e0:	stur	w0, [x29, #-212]
  4094e4:	ldur	w10, [x29, #-212]
  4094e8:	cmp	w10, #0x0
  4094ec:	cset	w10, ge  // ge = tcont
  4094f0:	tbnz	w10, #0, 40950c <clock_supported@plt+0x5214>
  4094f4:	ldur	w8, [x29, #-212]
  4094f8:	ldr	x9, [sp, #624]
  4094fc:	str	w8, [x9, #204]
  409500:	mov	w8, #0x1                   	// #1
  409504:	stur	w8, [x29, #-216]
  409508:	b	40abec <clock_supported@plt+0x68f4>
  40950c:	ldr	x8, [sp, #624]
  409510:	ldr	x0, [x8, #8]
  409514:	ldr	x1, [x8]
  409518:	mov	w9, wzr
  40951c:	mov	w2, w9
  409520:	str	w9, [sp, #580]
  409524:	bl	403ac8 <table_set_align_percent@plt>
  409528:	ldr	x8, [sp, #624]
  40952c:	ldr	x10, [x8, #8]
  409530:	ldr	x11, [x8, #64]
  409534:	mov	x0, x11
  409538:	str	x10, [sp, #568]
  40953c:	bl	407664 <clock_supported@plt+0x336c>
  409540:	ldr	x8, [sp, #624]
  409544:	ldr	x10, [x8, #104]
  409548:	str	x0, [sp, #560]
  40954c:	mov	x0, x10
  409550:	bl	407664 <clock_supported@plt+0x336c>
  409554:	ldr	x8, [sp, #624]
  409558:	ldr	x10, [x8, #112]
  40955c:	str	x0, [sp, #552]
  409560:	mov	x0, x10
  409564:	bl	407664 <clock_supported@plt+0x336c>
  409568:	ldr	x8, [sp, #568]
  40956c:	str	x0, [sp, #544]
  409570:	mov	x0, x8
  409574:	ldr	w1, [sp, #580]
  409578:	ldr	w2, [sp, #580]
  40957c:	mov	w9, #0x1                   	// #1
  409580:	mov	w3, w9
  409584:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  409588:	add	x4, x4, #0xf2
  40958c:	mov	w5, #0x1c                  	// #28
  409590:	mov	w6, #0x64                  	// #100
  409594:	mov	w7, w9
  409598:	mov	x10, sp
  40959c:	ldr	x11, [sp, #560]
  4095a0:	str	x11, [x10]
  4095a4:	mov	x10, sp
  4095a8:	str	wzr, [x10, #8]
  4095ac:	mov	x10, sp
  4095b0:	str	w9, [x10, #16]
  4095b4:	mov	x10, sp
  4095b8:	adrp	x12, 413000 <clock_supported@plt+0xed08>
  4095bc:	add	x12, x12, #0xfd
  4095c0:	str	x12, [x10, #24]
  4095c4:	mov	x10, sp
  4095c8:	str	w9, [x10, #32]
  4095cc:	mov	x10, sp
  4095d0:	ldr	x12, [sp, #552]
  4095d4:	str	x12, [x10, #40]
  4095d8:	mov	x10, sp
  4095dc:	str	wzr, [x10, #48]
  4095e0:	mov	x10, sp
  4095e4:	str	w9, [x10, #56]
  4095e8:	mov	x10, sp
  4095ec:	adrp	x13, 413000 <clock_supported@plt+0xed08>
  4095f0:	add	x13, x13, #0x10b
  4095f4:	str	x13, [x10, #64]
  4095f8:	mov	x10, sp
  4095fc:	str	w9, [x10, #72]
  409600:	mov	x10, sp
  409604:	ldr	x13, [sp, #544]
  409608:	str	x13, [x10, #80]
  40960c:	mov	x10, sp
  409610:	str	wzr, [x10, #88]
  409614:	mov	x10, sp
  409618:	str	w9, [x10, #96]
  40961c:	mov	x10, sp
  409620:	adrp	x14, 412000 <clock_supported@plt+0xdd08>
  409624:	add	x14, x14, #0xd57
  409628:	str	x14, [x10, #104]
  40962c:	mov	x10, sp
  409630:	mov	w9, #0x18                  	// #24
  409634:	str	w9, [x10, #112]
  409638:	bl	403b08 <table_add_many_internal@plt>
  40963c:	stur	w0, [x29, #-212]
  409640:	ldur	w9, [x29, #-212]
  409644:	cmp	w9, #0x0
  409648:	cset	w9, ge  // ge = tcont
  40964c:	tbnz	w9, #0, 409668 <clock_supported@plt+0x5370>
  409650:	ldur	w8, [x29, #-212]
  409654:	ldr	x9, [sp, #624]
  409658:	str	w8, [x9, #204]
  40965c:	mov	w8, #0x1                   	// #1
  409660:	stur	w8, [x29, #-216]
  409664:	b	40abec <clock_supported@plt+0x68f4>
  409668:	ldr	x8, [sp, #624]
  40966c:	ldr	x0, [x8, #8]
  409670:	ldr	x3, [x8, #56]
  409674:	ldr	x9, [x8, #128]
  409678:	str	x0, [sp, #536]
  40967c:	mov	x0, x9
  409680:	str	x3, [sp, #528]
  409684:	bl	407664 <clock_supported@plt+0x336c>
  409688:	ldr	x8, [sp, #624]
  40968c:	ldr	x5, [x8, #48]
  409690:	ldr	x6, [x8, #40]
  409694:	ldr	x9, [x8, #136]
  409698:	str	x0, [sp, #520]
  40969c:	mov	x0, x9
  4096a0:	str	x5, [sp, #512]
  4096a4:	str	x6, [sp, #504]
  4096a8:	bl	407664 <clock_supported@plt+0x336c>
  4096ac:	ldr	x8, [sp, #624]
  4096b0:	ldr	x9, [x8, #32]
  4096b4:	ldr	x10, [sp, #536]
  4096b8:	str	x0, [sp, #496]
  4096bc:	mov	x0, x10
  4096c0:	mov	x11, xzr
  4096c4:	mov	x1, x11
  4096c8:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  4096cc:	add	x2, x2, #0x111
  4096d0:	ldr	x3, [sp, #528]
  4096d4:	ldr	x4, [sp, #520]
  4096d8:	ldr	x5, [sp, #512]
  4096dc:	ldr	x6, [sp, #504]
  4096e0:	ldr	x7, [sp, #496]
  4096e4:	mov	x11, sp
  4096e8:	str	x9, [x11]
  4096ec:	bl	403fe8 <table_add_cell_stringf@plt>
  4096f0:	stur	w0, [x29, #-212]
  4096f4:	ldur	w12, [x29, #-212]
  4096f8:	cmp	w12, #0x0
  4096fc:	cset	w12, ge  // ge = tcont
  409700:	tbnz	w12, #0, 40971c <clock_supported@plt+0x5424>
  409704:	ldur	w8, [x29, #-212]
  409708:	ldr	x9, [sp, #624]
  40970c:	str	w8, [x9, #204]
  409710:	mov	w8, #0x1                   	// #1
  409714:	stur	w8, [x29, #-216]
  409718:	b	40abec <clock_supported@plt+0x68f4>
  40971c:	ldr	x8, [sp, #624]
  409720:	ldr	x9, [x8, #88]
  409724:	cbz	x9, 409784 <clock_supported@plt+0x548c>
  409728:	ldr	x8, [sp, #624]
  40972c:	ldr	x0, [x8, #8]
  409730:	ldr	x5, [x8, #88]
  409734:	mov	w9, wzr
  409738:	mov	w1, w9
  40973c:	mov	w9, #0x1                   	// #1
  409740:	mov	w2, w9
  409744:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409748:	add	x3, x3, #0x121
  40974c:	mov	w4, w9
  409750:	mov	w6, #0x18                  	// #24
  409754:	bl	403b08 <table_add_many_internal@plt>
  409758:	stur	w0, [x29, #-212]
  40975c:	ldur	w9, [x29, #-212]
  409760:	cmp	w9, #0x0
  409764:	cset	w9, ge  // ge = tcont
  409768:	tbnz	w9, #0, 409784 <clock_supported@plt+0x548c>
  40976c:	ldur	w8, [x29, #-212]
  409770:	ldr	x9, [sp, #624]
  409774:	str	w8, [x9, #204]
  409778:	mov	w8, #0x1                   	// #1
  40977c:	stur	w8, [x29, #-216]
  409780:	b	40abec <clock_supported@plt+0x68f4>
  409784:	ldr	x8, [sp, #624]
  409788:	ldr	x9, [x8, #96]
  40978c:	cbz	x9, 4097ec <clock_supported@plt+0x54f4>
  409790:	ldr	x8, [sp, #624]
  409794:	ldr	x0, [x8, #8]
  409798:	ldr	x5, [x8, #96]
  40979c:	mov	w9, wzr
  4097a0:	mov	w1, w9
  4097a4:	mov	w9, #0x1                   	// #1
  4097a8:	mov	w2, w9
  4097ac:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  4097b0:	add	x3, x3, #0x127
  4097b4:	mov	w4, w9
  4097b8:	mov	w6, #0x18                  	// #24
  4097bc:	bl	403b08 <table_add_many_internal@plt>
  4097c0:	stur	w0, [x29, #-212]
  4097c4:	ldur	w9, [x29, #-212]
  4097c8:	cmp	w9, #0x0
  4097cc:	cset	w9, ge  // ge = tcont
  4097d0:	tbnz	w9, #0, 4097ec <clock_supported@plt+0x54f4>
  4097d4:	ldur	w8, [x29, #-212]
  4097d8:	ldr	x9, [sp, #624]
  4097dc:	str	w8, [x9, #204]
  4097e0:	mov	w8, #0x1                   	// #1
  4097e4:	stur	w8, [x29, #-216]
  4097e8:	b	40abec <clock_supported@plt+0x68f4>
  4097ec:	ldr	x8, [sp, #624]
  4097f0:	ldr	x9, [x8, #80]
  4097f4:	cbz	x9, 409854 <clock_supported@plt+0x555c>
  4097f8:	ldr	x8, [sp, #624]
  4097fc:	ldr	x0, [x8, #8]
  409800:	ldr	x5, [x8, #80]
  409804:	mov	w9, wzr
  409808:	mov	w1, w9
  40980c:	mov	w9, #0x1                   	// #1
  409810:	mov	w2, w9
  409814:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409818:	add	x3, x3, #0x12f
  40981c:	mov	w4, w9
  409820:	mov	w6, #0x18                  	// #24
  409824:	bl	403b08 <table_add_many_internal@plt>
  409828:	stur	w0, [x29, #-212]
  40982c:	ldur	w9, [x29, #-212]
  409830:	cmp	w9, #0x0
  409834:	cset	w9, ge  // ge = tcont
  409838:	tbnz	w9, #0, 409854 <clock_supported@plt+0x555c>
  40983c:	ldur	w8, [x29, #-212]
  409840:	ldr	x9, [sp, #624]
  409844:	str	w8, [x9, #204]
  409848:	mov	w8, #0x1                   	// #1
  40984c:	stur	w8, [x29, #-216]
  409850:	b	40abec <clock_supported@plt+0x68f4>
  409854:	ldr	x8, [sp, #624]
  409858:	ldr	x9, [x8, #72]
  40985c:	cbz	x9, 4098bc <clock_supported@plt+0x55c4>
  409860:	ldr	x8, [sp, #624]
  409864:	ldr	x0, [x8, #8]
  409868:	ldr	x5, [x8, #72]
  40986c:	mov	w9, wzr
  409870:	mov	w1, w9
  409874:	mov	w9, #0x1                   	// #1
  409878:	mov	w2, w9
  40987c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409880:	add	x3, x3, #0x137
  409884:	mov	w4, w9
  409888:	mov	w6, #0x18                  	// #24
  40988c:	bl	403b08 <table_add_many_internal@plt>
  409890:	stur	w0, [x29, #-212]
  409894:	ldur	w9, [x29, #-212]
  409898:	cmp	w9, #0x0
  40989c:	cset	w9, ge  // ge = tcont
  4098a0:	tbnz	w9, #0, 4098bc <clock_supported@plt+0x55c4>
  4098a4:	ldur	w8, [x29, #-212]
  4098a8:	ldr	x9, [sp, #624]
  4098ac:	str	w8, [x9, #204]
  4098b0:	mov	w8, #0x1                   	// #1
  4098b4:	stur	w8, [x29, #-216]
  4098b8:	b	40abec <clock_supported@plt+0x68f4>
  4098bc:	ldr	x8, [sp, #624]
  4098c0:	ldr	x9, [x8, #176]
  4098c4:	ldrh	w10, [x9, #454]
  4098c8:	and	w10, w10, #0x1
  4098cc:	tbnz	w10, #0, 4098d4 <clock_supported@plt+0x55dc>
  4098d0:	b	409a30 <clock_supported@plt+0x5738>
  4098d4:	sub	x2, x29, #0xe0
  4098d8:	mov	x8, xzr
  4098dc:	stur	x8, [x29, #-224]
  4098e0:	ldr	x8, [sp, #624]
  4098e4:	ldr	x0, [x8, #184]
  4098e8:	ldr	x9, [x8, #176]
  4098ec:	add	x1, x9, #0x66
  4098f0:	bl	40be48 <clock_supported@plt+0x7b50>
  4098f4:	ldr	x8, [sp, #624]
  4098f8:	ldr	x9, [x8, #8]
  4098fc:	mov	x0, x9
  409900:	mov	w10, wzr
  409904:	mov	w1, w10
  409908:	mov	w2, #0x1                   	// #1
  40990c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409910:	add	x3, x3, #0x13e
  409914:	mov	w4, #0x18                  	// #24
  409918:	bl	403b08 <table_add_many_internal@plt>
  40991c:	stur	w0, [x29, #-212]
  409920:	ldur	w10, [x29, #-212]
  409924:	cmp	w10, #0x0
  409928:	cset	w10, ge  // ge = tcont
  40992c:	tbnz	w10, #0, 409948 <clock_supported@plt+0x5650>
  409930:	ldur	w8, [x29, #-212]
  409934:	ldr	x9, [sp, #624]
  409938:	str	w8, [x9, #204]
  40993c:	mov	w8, #0x1                   	// #1
  409940:	stur	w8, [x29, #-216]
  409944:	b	409a10 <clock_supported@plt+0x5718>
  409948:	ldr	x8, [sp, #624]
  40994c:	ldr	x0, [x8, #8]
  409950:	ldr	x9, [x8, #176]
  409954:	add	x9, x9, #0x66
  409958:	str	x0, [sp, #488]
  40995c:	mov	x0, x9
  409960:	sub	x1, x29, #0xf2
  409964:	bl	403ff8 <ether_addr_to_string@plt>
  409968:	ldur	x8, [x29, #-224]
  40996c:	mov	x9, xzr
  409970:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  409974:	add	x10, x10, #0xe5f
  409978:	cmp	x8, #0x0
  40997c:	ldr	x8, [sp, #616]
  409980:	csel	x4, x10, x8, ne  // ne = any
  409984:	ldur	x10, [x29, #-224]
  409988:	str	x0, [sp, #480]
  40998c:	mov	x0, x10
  409990:	str	x9, [sp, #472]
  409994:	str	x4, [sp, #464]
  409998:	bl	40c064 <clock_supported@plt+0x7d6c>
  40999c:	ldur	x8, [x29, #-224]
  4099a0:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  4099a4:	add	x9, x9, #0xe62
  4099a8:	cmp	x8, #0x0
  4099ac:	ldr	x8, [sp, #616]
  4099b0:	csel	x6, x9, x8, ne  // ne = any
  4099b4:	ldr	x9, [sp, #488]
  4099b8:	str	x0, [sp, #456]
  4099bc:	mov	x0, x9
  4099c0:	ldr	x10, [sp, #472]
  4099c4:	mov	x1, x10
  4099c8:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  4099cc:	add	x2, x2, #0x14a
  4099d0:	ldr	x3, [sp, #480]
  4099d4:	ldr	x4, [sp, #464]
  4099d8:	ldr	x5, [sp, #456]
  4099dc:	bl	403fe8 <table_add_cell_stringf@plt>
  4099e0:	stur	w0, [x29, #-212]
  4099e4:	ldur	w11, [x29, #-212]
  4099e8:	cmp	w11, #0x0
  4099ec:	cset	w11, ge  // ge = tcont
  4099f0:	tbnz	w11, #0, 409a0c <clock_supported@plt+0x5714>
  4099f4:	ldur	w8, [x29, #-212]
  4099f8:	ldr	x9, [sp, #624]
  4099fc:	str	w8, [x9, #204]
  409a00:	mov	w8, #0x1                   	// #1
  409a04:	stur	w8, [x29, #-216]
  409a08:	b	409a10 <clock_supported@plt+0x5718>
  409a0c:	stur	wzr, [x29, #-216]
  409a10:	sub	x0, x29, #0xe0
  409a14:	bl	404a10 <clock_supported@plt+0x718>
  409a18:	ldur	w8, [x29, #-216]
  409a1c:	cmp	w8, #0x0
  409a20:	cset	w8, eq  // eq = none
  409a24:	eor	w8, w8, #0x1
  409a28:	tbnz	w8, #0, 40abec <clock_supported@plt+0x68f4>
  409a2c:	b	409a30 <clock_supported@plt+0x5738>
  409a30:	ldr	x8, [sp, #624]
  409a34:	ldr	x9, [x8, #176]
  409a38:	ldr	w10, [x9, #108]
  409a3c:	cmp	w10, #0x0
  409a40:	cset	w10, ls  // ls = plast
  409a44:	tbnz	w10, #0, 409d9c <clock_supported@plt+0x5aa4>
  409a48:	ldr	x8, [sp, #624]
  409a4c:	ldr	x9, [x8, #176]
  409a50:	ldr	w3, [x9, #112]
  409a54:	sub	x0, x29, #0xfe
  409a58:	mov	x1, #0xc                   	// #12
  409a5c:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  409a60:	add	x2, x2, #0x153
  409a64:	bl	403c38 <snprintf@plt>
  409a68:	mov	w1, w0
  409a6c:	sxtw	x8, w1
  409a70:	cmp	x8, #0xc
  409a74:	cset	w10, cc  // cc = lo, ul, last
  409a78:	mov	w11, #0x1                   	// #1
  409a7c:	eor	w10, w10, #0x1
  409a80:	eor	w10, w10, w11
  409a84:	eor	w10, w10, w11
  409a88:	and	w10, w10, #0x1
  409a8c:	mov	w1, w10
  409a90:	sxtw	x8, w1
  409a94:	cbz	x8, 409ab8 <clock_supported@plt+0x57c0>
  409a98:	mov	w8, wzr
  409a9c:	mov	w0, w8
  409aa0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  409aa4:	add	x1, x1, #0x156
  409aa8:	ldr	x2, [sp, #608]
  409aac:	mov	w3, #0x4b4                 	// #1204
  409ab0:	ldr	x4, [sp, #600]
  409ab4:	bl	403958 <log_assert_failed_realm@plt>
  409ab8:	ldr	x8, [sp, #624]
  409abc:	ldr	x9, [x8, #176]
  409ac0:	ldr	w3, [x9, #116]
  409ac4:	add	x0, sp, #0x2c6
  409ac8:	mov	x1, #0xc                   	// #12
  409acc:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  409ad0:	add	x2, x2, #0x153
  409ad4:	bl	403c38 <snprintf@plt>
  409ad8:	mov	w1, w0
  409adc:	sxtw	x8, w1
  409ae0:	cmp	x8, #0xc
  409ae4:	cset	w10, cc  // cc = lo, ul, last
  409ae8:	mov	w11, #0x1                   	// #1
  409aec:	eor	w10, w10, #0x1
  409af0:	eor	w10, w10, w11
  409af4:	eor	w10, w10, w11
  409af8:	and	w10, w10, #0x1
  409afc:	mov	w1, w10
  409b00:	sxtw	x8, w1
  409b04:	cbz	x8, 409b28 <clock_supported@plt+0x5830>
  409b08:	mov	w8, wzr
  409b0c:	mov	w0, w8
  409b10:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  409b14:	add	x1, x1, #0x17d
  409b18:	ldr	x2, [sp, #608]
  409b1c:	mov	w3, #0x4b5                 	// #1205
  409b20:	ldr	x4, [sp, #600]
  409b24:	bl	403958 <log_assert_failed_realm@plt>
  409b28:	ldr	x8, [sp, #624]
  409b2c:	ldr	x0, [x8, #8]
  409b30:	mov	w9, wzr
  409b34:	mov	w1, w9
  409b38:	mov	w2, #0x1                   	// #1
  409b3c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409b40:	add	x3, x3, #0x1a4
  409b44:	mov	w4, #0x18                  	// #24
  409b48:	bl	403b08 <table_add_many_internal@plt>
  409b4c:	stur	w0, [x29, #-212]
  409b50:	ldur	w9, [x29, #-212]
  409b54:	cmp	w9, #0x0
  409b58:	cset	w9, ge  // ge = tcont
  409b5c:	tbnz	w9, #0, 409b78 <clock_supported@plt+0x5880>
  409b60:	ldur	w8, [x29, #-212]
  409b64:	ldr	x9, [sp, #624]
  409b68:	str	w8, [x9, #204]
  409b6c:	mov	w8, #0x1                   	// #1
  409b70:	stur	w8, [x29, #-216]
  409b74:	b	40abec <clock_supported@plt+0x68f4>
  409b78:	ldr	x8, [sp, #624]
  409b7c:	ldr	x0, [x8, #8]
  409b80:	ldr	x9, [x8, #176]
  409b84:	ldr	w3, [x9, #108]
  409b88:	ldr	x9, [x8, #176]
  409b8c:	ldr	w10, [x9, #112]
  409b90:	cmp	w10, #0x0
  409b94:	cset	w10, hi  // hi = pmore
  409b98:	mov	w11, #0x1                   	// #1
  409b9c:	str	x0, [sp, #448]
  409ba0:	str	w3, [sp, #444]
  409ba4:	str	w11, [sp, #440]
  409ba8:	tbnz	w10, #0, 409bc4 <clock_supported@plt+0x58cc>
  409bac:	ldr	x8, [sp, #624]
  409bb0:	ldr	x9, [x8, #176]
  409bb4:	ldr	w10, [x9, #116]
  409bb8:	cmp	w10, #0x0
  409bbc:	cset	w10, hi  // hi = pmore
  409bc0:	str	w10, [sp, #440]
  409bc4:	ldr	w8, [sp, #440]
  409bc8:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  409bcc:	add	x9, x9, #0xe5f
  409bd0:	tst	w8, #0x1
  409bd4:	ldr	x10, [sp, #616]
  409bd8:	csel	x4, x9, x10, ne  // ne = any
  409bdc:	ldr	x9, [sp, #624]
  409be0:	ldr	x11, [x9, #176]
  409be4:	ldr	w8, [x11, #112]
  409be8:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  409bec:	add	x11, x11, #0x1ba
  409bf0:	cmp	w8, #0x0
  409bf4:	csel	x5, x11, x10, hi  // hi = pmore
  409bf8:	ldr	x11, [x9, #176]
  409bfc:	ldr	w8, [x11, #112]
  409c00:	cmp	w8, #0x0
  409c04:	cset	w8, ls  // ls = plast
  409c08:	str	x4, [sp, #432]
  409c0c:	str	x5, [sp, #424]
  409c10:	tbnz	w8, #0, 409c20 <clock_supported@plt+0x5928>
  409c14:	sub	x8, x29, #0xfe
  409c18:	str	x8, [sp, #416]
  409c1c:	b	409c28 <clock_supported@plt+0x5930>
  409c20:	ldr	x8, [sp, #616]
  409c24:	str	x8, [sp, #416]
  409c28:	ldr	x8, [sp, #416]
  409c2c:	ldr	x9, [sp, #624]
  409c30:	ldr	x10, [x9, #176]
  409c34:	ldr	w11, [x10, #112]
  409c38:	cmp	w11, #0x0
  409c3c:	cset	w11, ls  // ls = plast
  409c40:	mov	w12, #0x0                   	// #0
  409c44:	str	x8, [sp, #408]
  409c48:	str	w12, [sp, #404]
  409c4c:	tbnz	w11, #0, 409c68 <clock_supported@plt+0x5970>
  409c50:	ldr	x8, [sp, #624]
  409c54:	ldr	x9, [x8, #176]
  409c58:	ldr	w10, [x9, #116]
  409c5c:	cmp	w10, #0x0
  409c60:	cset	w10, hi  // hi = pmore
  409c64:	str	w10, [sp, #404]
  409c68:	ldr	w8, [sp, #404]
  409c6c:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  409c70:	add	x9, x9, #0x1c0
  409c74:	tst	w8, #0x1
  409c78:	ldr	x10, [sp, #616]
  409c7c:	csel	x7, x9, x10, ne  // ne = any
  409c80:	ldr	x9, [sp, #624]
  409c84:	ldr	x11, [x9, #176]
  409c88:	ldr	w8, [x11, #116]
  409c8c:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  409c90:	add	x11, x11, #0x1c3
  409c94:	cmp	w8, #0x0
  409c98:	csel	x11, x11, x10, hi  // hi = pmore
  409c9c:	ldr	x12, [x9, #176]
  409ca0:	ldr	w8, [x12, #116]
  409ca4:	cmp	w8, #0x0
  409ca8:	cset	w8, ls  // ls = plast
  409cac:	str	x7, [sp, #392]
  409cb0:	str	x11, [sp, #384]
  409cb4:	tbnz	w8, #0, 409cc4 <clock_supported@plt+0x59cc>
  409cb8:	add	x8, sp, #0x2c6
  409cbc:	str	x8, [sp, #376]
  409cc0:	b	409ccc <clock_supported@plt+0x59d4>
  409cc4:	ldr	x8, [sp, #616]
  409cc8:	str	x8, [sp, #376]
  409ccc:	ldr	x8, [sp, #376]
  409cd0:	ldr	x9, [sp, #624]
  409cd4:	ldr	x10, [x9, #176]
  409cd8:	ldr	w11, [x10, #112]
  409cdc:	cmp	w11, #0x0
  409ce0:	cset	w11, hi  // hi = pmore
  409ce4:	mov	w12, #0x1                   	// #1
  409ce8:	str	x8, [sp, #368]
  409cec:	str	w12, [sp, #364]
  409cf0:	tbnz	w11, #0, 409d0c <clock_supported@plt+0x5a14>
  409cf4:	ldr	x8, [sp, #624]
  409cf8:	ldr	x9, [x8, #176]
  409cfc:	ldr	w10, [x9, #116]
  409d00:	cmp	w10, #0x0
  409d04:	cset	w10, hi  // hi = pmore
  409d08:	str	w10, [sp, #364]
  409d0c:	ldr	w8, [sp, #364]
  409d10:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  409d14:	add	x9, x9, #0xe62
  409d18:	tst	w8, #0x1
  409d1c:	ldr	x10, [sp, #616]
  409d20:	csel	x9, x9, x10, ne  // ne = any
  409d24:	ldr	x0, [sp, #448]
  409d28:	mov	x11, xzr
  409d2c:	mov	x1, x11
  409d30:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  409d34:	add	x2, x2, #0x1a9
  409d38:	ldr	w3, [sp, #444]
  409d3c:	ldr	x4, [sp, #432]
  409d40:	ldr	x5, [sp, #424]
  409d44:	ldr	x6, [sp, #408]
  409d48:	ldr	x7, [sp, #392]
  409d4c:	mov	x11, sp
  409d50:	ldr	x12, [sp, #384]
  409d54:	str	x12, [x11]
  409d58:	mov	x11, sp
  409d5c:	ldr	x13, [sp, #368]
  409d60:	str	x13, [x11, #8]
  409d64:	mov	x11, sp
  409d68:	str	x9, [x11, #16]
  409d6c:	bl	403fe8 <table_add_cell_stringf@plt>
  409d70:	stur	w0, [x29, #-212]
  409d74:	ldur	w8, [x29, #-212]
  409d78:	cmp	w8, #0x0
  409d7c:	cset	w8, ge  // ge = tcont
  409d80:	tbnz	w8, #0, 409d9c <clock_supported@plt+0x5aa4>
  409d84:	ldur	w8, [x29, #-212]
  409d88:	ldr	x9, [sp, #624]
  409d8c:	str	w8, [x9, #204]
  409d90:	mov	w8, #0x1                   	// #1
  409d94:	stur	w8, [x29, #-216]
  409d98:	b	40abec <clock_supported@plt+0x68f4>
  409d9c:	ldr	x8, [sp, #624]
  409da0:	ldr	x9, [x8, #176]
  409da4:	add	x0, x9, #0x11
  409da8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409dac:	add	x1, x1, #0x994
  409db0:	bl	40890c <clock_supported@plt+0x4614>
  409db4:	tbnz	w0, #0, 409dbc <clock_supported@plt+0x5ac4>
  409db8:	b	409fe8 <clock_supported@plt+0x5cf0>
  409dbc:	ldr	x8, [sp, #624]
  409dc0:	ldr	x0, [x8, #8]
  409dc4:	ldr	x9, [x8, #176]
  409dc8:	ldr	w10, [x9, #336]
  409dcc:	str	x0, [sp, #352]
  409dd0:	mov	w0, w10
  409dd4:	bl	404008 <jiffies_to_usec@plt>
  409dd8:	ldr	x8, [sp, #624]
  409ddc:	ldr	x9, [x8, #176]
  409de0:	ldr	w10, [x9, #340]
  409de4:	str	x0, [sp, #344]
  409de8:	mov	w0, w10
  409dec:	bl	404008 <jiffies_to_usec@plt>
  409df0:	ldr	x8, [sp, #624]
  409df4:	ldr	x9, [x8, #176]
  409df8:	ldr	w10, [x9, #344]
  409dfc:	str	x0, [sp, #336]
  409e00:	mov	w0, w10
  409e04:	bl	404008 <jiffies_to_usec@plt>
  409e08:	ldr	x8, [sp, #624]
  409e0c:	ldr	x9, [x8, #176]
  409e10:	ldr	w10, [x9, #348]
  409e14:	str	x0, [sp, #328]
  409e18:	mov	w0, w10
  409e1c:	bl	404008 <jiffies_to_usec@plt>
  409e20:	ldr	x8, [sp, #624]
  409e24:	ldr	x9, [x8, #176]
  409e28:	ldrh	w10, [x9, #356]
  409e2c:	ldr	x9, [x8, #176]
  409e30:	ldr	w11, [x9, #352]
  409e34:	mov	w12, wzr
  409e38:	cmp	w11, #0x0
  409e3c:	cset	w11, hi  // hi = pmore
  409e40:	and	w11, w11, #0x1
  409e44:	ldr	x9, [x8, #176]
  409e48:	ldrb	w13, [x9, #358]
  409e4c:	ldr	x9, [sp, #352]
  409e50:	str	x0, [sp, #320]
  409e54:	mov	x0, x9
  409e58:	mov	w1, w12
  409e5c:	mov	w14, #0x1                   	// #1
  409e60:	mov	w2, w14
  409e64:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  409e68:	add	x3, x3, #0x1c9
  409e6c:	mov	w15, #0x7                   	// #7
  409e70:	mov	w4, w15
  409e74:	ldr	x5, [sp, #344]
  409e78:	mov	w6, w12
  409e7c:	mov	w7, w14
  409e80:	mov	x16, sp
  409e84:	adrp	x17, 413000 <clock_supported@plt+0xed08>
  409e88:	add	x17, x17, #0x1d8
  409e8c:	str	x17, [x16]
  409e90:	mov	x16, sp
  409e94:	str	w15, [x16, #8]
  409e98:	mov	x16, sp
  409e9c:	ldr	x17, [sp, #336]
  409ea0:	str	x17, [x16, #16]
  409ea4:	mov	x16, sp
  409ea8:	str	wzr, [x16, #24]
  409eac:	mov	x16, sp
  409eb0:	str	w14, [x16, #32]
  409eb4:	mov	x16, sp
  409eb8:	adrp	x18, 413000 <clock_supported@plt+0xed08>
  409ebc:	add	x18, x18, #0x1e4
  409ec0:	str	x18, [x16, #40]
  409ec4:	mov	x16, sp
  409ec8:	str	w15, [x16, #48]
  409ecc:	mov	x16, sp
  409ed0:	ldr	x18, [sp, #328]
  409ed4:	str	x18, [x16, #56]
  409ed8:	mov	x16, sp
  409edc:	str	wzr, [x16, #64]
  409ee0:	mov	x16, sp
  409ee4:	str	w14, [x16, #72]
  409ee8:	mov	x16, sp
  409eec:	adrp	x19, 413000 <clock_supported@plt+0xed08>
  409ef0:	add	x19, x19, #0x1ed
  409ef4:	str	x19, [x16, #80]
  409ef8:	mov	x16, sp
  409efc:	str	w15, [x16, #88]
  409f00:	mov	x16, sp
  409f04:	ldr	x19, [sp, #320]
  409f08:	str	x19, [x16, #96]
  409f0c:	mov	x16, sp
  409f10:	str	wzr, [x16, #104]
  409f14:	mov	x16, sp
  409f18:	str	w14, [x16, #112]
  409f1c:	mov	x16, sp
  409f20:	adrp	x20, 413000 <clock_supported@plt+0xed08>
  409f24:	add	x20, x20, #0x1fa
  409f28:	str	x20, [x16, #120]
  409f2c:	mov	x16, sp
  409f30:	mov	w12, #0x11                  	// #17
  409f34:	str	w12, [x16, #128]
  409f38:	mov	x16, sp
  409f3c:	str	w10, [x16, #136]
  409f40:	mov	x16, sp
  409f44:	str	wzr, [x16, #144]
  409f48:	mov	x16, sp
  409f4c:	str	w14, [x16, #152]
  409f50:	mov	x16, sp
  409f54:	adrp	x20, 413000 <clock_supported@plt+0xed08>
  409f58:	add	x20, x20, #0x204
  409f5c:	str	x20, [x16, #160]
  409f60:	mov	x16, sp
  409f64:	mov	w10, #0x2                   	// #2
  409f68:	str	w10, [x16, #168]
  409f6c:	mov	x16, sp
  409f70:	str	w11, [x16, #176]
  409f74:	mov	x16, sp
  409f78:	str	wzr, [x16, #184]
  409f7c:	mov	x16, sp
  409f80:	str	w14, [x16, #192]
  409f84:	mov	x16, sp
  409f88:	adrp	x20, 413000 <clock_supported@plt+0xed08>
  409f8c:	add	x20, x20, #0x209
  409f90:	str	x20, [x16, #200]
  409f94:	mov	x16, sp
  409f98:	mov	w10, #0x10                  	// #16
  409f9c:	str	w10, [x16, #208]
  409fa0:	mov	x16, sp
  409fa4:	str	w13, [x16, #216]
  409fa8:	mov	x16, sp
  409fac:	mov	w10, #0x18                  	// #24
  409fb0:	str	w10, [x16, #224]
  409fb4:	bl	403b08 <table_add_many_internal@plt>
  409fb8:	stur	w0, [x29, #-212]
  409fbc:	ldur	w10, [x29, #-212]
  409fc0:	cmp	w10, #0x0
  409fc4:	cset	w10, ge  // ge = tcont
  409fc8:	tbnz	w10, #0, 409fe4 <clock_supported@plt+0x5cec>
  409fcc:	ldur	w8, [x29, #-212]
  409fd0:	ldr	x9, [sp, #624]
  409fd4:	str	w8, [x9, #204]
  409fd8:	mov	w8, #0x1                   	// #1
  409fdc:	stur	w8, [x29, #-216]
  409fe0:	b	40abec <clock_supported@plt+0x68f4>
  409fe4:	b	40a318 <clock_supported@plt+0x6020>
  409fe8:	ldr	x8, [sp, #624]
  409fec:	ldr	x9, [x8, #176]
  409ff0:	add	x0, x9, #0x11
  409ff4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  409ff8:	add	x1, x1, #0x99b
  409ffc:	bl	40890c <clock_supported@plt+0x4614>
  40a000:	tbnz	w0, #0, 40a008 <clock_supported@plt+0x5d10>
  40a004:	b	40a318 <clock_supported@plt+0x6020>
  40a008:	ldr	x8, [sp, #624]
  40a00c:	ldr	x9, [x8, #176]
  40a010:	ldr	w10, [x9, #360]
  40a014:	cmp	w10, #0x0
  40a018:	cset	w10, ls  // ls = plast
  40a01c:	tbnz	w10, #0, 40a07c <clock_supported@plt+0x5d84>
  40a020:	ldr	x8, [sp, #624]
  40a024:	ldr	x0, [x8, #8]
  40a028:	ldr	x9, [x8, #176]
  40a02c:	ldr	w5, [x9, #360]
  40a030:	mov	w10, wzr
  40a034:	mov	w1, w10
  40a038:	mov	w2, #0x1                   	// #1
  40a03c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a040:	add	x3, x3, #0x221
  40a044:	mov	w4, #0x12                  	// #18
  40a048:	mov	w6, #0x18                  	// #24
  40a04c:	bl	403b08 <table_add_many_internal@plt>
  40a050:	stur	w0, [x29, #-212]
  40a054:	ldur	w10, [x29, #-212]
  40a058:	cmp	w10, #0x0
  40a05c:	cset	w10, ge  // ge = tcont
  40a060:	tbnz	w10, #0, 40a07c <clock_supported@plt+0x5d84>
  40a064:	ldur	w8, [x29, #-212]
  40a068:	ldr	x9, [sp, #624]
  40a06c:	str	w8, [x9, #204]
  40a070:	mov	w8, #0x1                   	// #1
  40a074:	stur	w8, [x29, #-216]
  40a078:	b	40abec <clock_supported@plt+0x68f4>
  40a07c:	mov	w8, #0x0                   	// #0
  40a080:	strb	w8, [sp, #709]
  40a084:	ldr	x9, [sp, #624]
  40a088:	ldr	x10, [x9, #176]
  40a08c:	ldr	w8, [x10, #372]
  40a090:	cmp	w8, #0x2
  40a094:	str	w8, [sp, #316]
  40a098:	b.eq	40a0b8 <clock_supported@plt+0x5dc0>  // b.none
  40a09c:	b	40a0a0 <clock_supported@plt+0x5da8>
  40a0a0:	ldr	w8, [sp, #316]
  40a0a4:	cmp	w8, #0xa
  40a0a8:	cset	w9, eq  // eq = none
  40a0ac:	eor	w9, w9, #0x1
  40a0b0:	tbnz	w9, #0, 40a0c4 <clock_supported@plt+0x5dcc>
  40a0b4:	b	40a0b8 <clock_supported@plt+0x5dc0>
  40a0b8:	mov	w8, #0x1                   	// #1
  40a0bc:	strb	w8, [sp, #709]
  40a0c0:	b	40a0c4 <clock_supported@plt+0x5dcc>
  40a0c4:	ldrb	w8, [sp, #709]
  40a0c8:	and	w8, w8, #0x1
  40a0cc:	strb	w8, [sp, #708]
  40a0d0:	ldrb	w8, [sp, #708]
  40a0d4:	tbnz	w8, #0, 40a0dc <clock_supported@plt+0x5de4>
  40a0d8:	b	40a14c <clock_supported@plt+0x5e54>
  40a0dc:	ldr	x8, [sp, #624]
  40a0e0:	ldr	x0, [x8, #8]
  40a0e4:	ldr	x9, [x8, #176]
  40a0e8:	ldr	w10, [x9, #372]
  40a0ec:	mov	w11, #0x17                  	// #23
  40a0f0:	mov	w12, #0x16                  	// #22
  40a0f4:	cmp	w10, #0x2
  40a0f8:	csel	w4, w12, w11, eq  // eq = none
  40a0fc:	ldr	x9, [x8, #176]
  40a100:	add	x5, x9, #0x188
  40a104:	mov	w10, wzr
  40a108:	mov	w1, w10
  40a10c:	mov	w2, #0x1                   	// #1
  40a110:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a114:	add	x3, x3, #0x226
  40a118:	mov	w6, #0x18                  	// #24
  40a11c:	bl	403b08 <table_add_many_internal@plt>
  40a120:	stur	w0, [x29, #-212]
  40a124:	ldur	w10, [x29, #-212]
  40a128:	cmp	w10, #0x0
  40a12c:	cset	w10, ge  // ge = tcont
  40a130:	tbnz	w10, #0, 40a14c <clock_supported@plt+0x5e54>
  40a134:	ldur	w8, [x29, #-212]
  40a138:	ldr	x9, [sp, #624]
  40a13c:	str	w8, [x9, #204]
  40a140:	mov	w8, #0x1                   	// #1
  40a144:	stur	w8, [x29, #-216]
  40a148:	b	40abec <clock_supported@plt+0x68f4>
  40a14c:	mov	w8, #0x0                   	// #0
  40a150:	strb	w8, [sp, #707]
  40a154:	ldr	x9, [sp, #624]
  40a158:	ldr	x10, [x9, #176]
  40a15c:	ldr	w8, [x10, #368]
  40a160:	cmp	w8, #0x2
  40a164:	str	w8, [sp, #312]
  40a168:	b.eq	40a188 <clock_supported@plt+0x5e90>  // b.none
  40a16c:	b	40a170 <clock_supported@plt+0x5e78>
  40a170:	ldr	w8, [sp, #312]
  40a174:	cmp	w8, #0xa
  40a178:	cset	w9, eq  // eq = none
  40a17c:	eor	w9, w9, #0x1
  40a180:	tbnz	w9, #0, 40a194 <clock_supported@plt+0x5e9c>
  40a184:	b	40a188 <clock_supported@plt+0x5e90>
  40a188:	mov	w8, #0x1                   	// #1
  40a18c:	strb	w8, [sp, #707]
  40a190:	b	40a194 <clock_supported@plt+0x5e9c>
  40a194:	ldrb	w8, [sp, #707]
  40a198:	and	w8, w8, #0x1
  40a19c:	strb	w8, [sp, #706]
  40a1a0:	ldrb	w8, [sp, #706]
  40a1a4:	tbnz	w8, #0, 40a1ac <clock_supported@plt+0x5eb4>
  40a1a8:	b	40a21c <clock_supported@plt+0x5f24>
  40a1ac:	ldr	x8, [sp, #624]
  40a1b0:	ldr	x0, [x8, #8]
  40a1b4:	ldr	x9, [x8, #176]
  40a1b8:	ldr	w10, [x9, #368]
  40a1bc:	mov	w11, #0x17                  	// #23
  40a1c0:	mov	w12, #0x16                  	// #22
  40a1c4:	cmp	w10, #0x2
  40a1c8:	csel	w4, w12, w11, eq  // eq = none
  40a1cc:	ldr	x9, [x8, #176]
  40a1d0:	add	x5, x9, #0x178
  40a1d4:	mov	w10, wzr
  40a1d8:	mov	w1, w10
  40a1dc:	mov	w2, #0x1                   	// #1
  40a1e0:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a1e4:	add	x3, x3, #0x22d
  40a1e8:	mov	w6, #0x18                  	// #24
  40a1ec:	bl	403b08 <table_add_many_internal@plt>
  40a1f0:	stur	w0, [x29, #-212]
  40a1f4:	ldur	w10, [x29, #-212]
  40a1f8:	cmp	w10, #0x0
  40a1fc:	cset	w10, ge  // ge = tcont
  40a200:	tbnz	w10, #0, 40a21c <clock_supported@plt+0x5f24>
  40a204:	ldur	w8, [x29, #-212]
  40a208:	ldr	x9, [sp, #624]
  40a20c:	str	w8, [x9, #204]
  40a210:	mov	w8, #0x1                   	// #1
  40a214:	stur	w8, [x29, #-216]
  40a218:	b	40abec <clock_supported@plt+0x68f4>
  40a21c:	ldr	x8, [sp, #624]
  40a220:	ldr	x9, [x8, #176]
  40a224:	ldrh	w10, [x9, #408]
  40a228:	cmp	w10, #0x0
  40a22c:	cset	w10, le
  40a230:	tbnz	w10, #0, 40a2a4 <clock_supported@plt+0x5fac>
  40a234:	ldr	x8, [sp, #624]
  40a238:	ldr	x0, [x8, #8]
  40a23c:	ldr	x9, [x8, #176]
  40a240:	ldrh	w10, [x9, #408]
  40a244:	str	x0, [sp, #304]
  40a248:	mov	w0, w10
  40a24c:	bl	40c0a0 <clock_supported@plt+0x7da8>
  40a250:	and	w5, w0, #0xffff
  40a254:	ldr	x0, [sp, #304]
  40a258:	mov	w10, wzr
  40a25c:	mov	w1, w10
  40a260:	mov	w2, #0x1                   	// #1
  40a264:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a268:	add	x3, x3, #0x234
  40a26c:	mov	w4, #0x11                  	// #17
  40a270:	mov	w6, #0x18                  	// #24
  40a274:	bl	403b08 <table_add_many_internal@plt>
  40a278:	stur	w0, [x29, #-212]
  40a27c:	ldur	w10, [x29, #-212]
  40a280:	cmp	w10, #0x0
  40a284:	cset	w10, ge  // ge = tcont
  40a288:	tbnz	w10, #0, 40a2a4 <clock_supported@plt+0x5fac>
  40a28c:	ldur	w8, [x29, #-212]
  40a290:	ldr	x9, [sp, #624]
  40a294:	str	w8, [x9, #204]
  40a298:	mov	w8, #0x1                   	// #1
  40a29c:	stur	w8, [x29, #-216]
  40a2a0:	b	40abec <clock_supported@plt+0x68f4>
  40a2a4:	ldr	x8, [sp, #624]
  40a2a8:	ldr	x9, [x8, #176]
  40a2ac:	ldr	w10, [x9, #364]
  40a2b0:	cmp	w10, #0x0
  40a2b4:	cset	w10, ls  // ls = plast
  40a2b8:	tbnz	w10, #0, 40a318 <clock_supported@plt+0x6020>
  40a2bc:	ldr	x8, [sp, #624]
  40a2c0:	ldr	x0, [x8, #8]
  40a2c4:	ldr	x9, [x8, #176]
  40a2c8:	ldr	w5, [x9, #364]
  40a2cc:	mov	w10, wzr
  40a2d0:	mov	w1, w10
  40a2d4:	mov	w2, #0x1                   	// #1
  40a2d8:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a2dc:	add	x3, x3, #0x246
  40a2e0:	mov	w4, #0x15                  	// #21
  40a2e4:	mov	w6, #0x18                  	// #24
  40a2e8:	bl	403b08 <table_add_many_internal@plt>
  40a2ec:	stur	w0, [x29, #-212]
  40a2f0:	ldur	w10, [x29, #-212]
  40a2f4:	cmp	w10, #0x0
  40a2f8:	cset	w10, ge  // ge = tcont
  40a2fc:	tbnz	w10, #0, 40a318 <clock_supported@plt+0x6020>
  40a300:	ldur	w8, [x29, #-212]
  40a304:	ldr	x9, [sp, #624]
  40a308:	str	w8, [x9, #204]
  40a30c:	mov	w8, #0x1                   	// #1
  40a310:	stur	w8, [x29, #-216]
  40a314:	b	40abec <clock_supported@plt+0x68f4>
  40a318:	ldr	x8, [sp, #624]
  40a31c:	ldr	x9, [x8, #176]
  40a320:	ldrh	w10, [x9, #454]
  40a324:	mov	w11, #0x7                   	// #7
  40a328:	lsr	w10, w10, w11
  40a32c:	and	w10, w10, #0x1
  40a330:	tbnz	w10, #0, 40a338 <clock_supported@plt+0x6040>
  40a334:	b	40a460 <clock_supported@plt+0x6168>
  40a338:	mov	x8, xzr
  40a33c:	str	x8, [sp, #696]
  40a340:	ldr	x8, [sp, #624]
  40a344:	ldr	x0, [x8, #8]
  40a348:	mov	w9, wzr
  40a34c:	mov	w1, w9
  40a350:	mov	w2, #0x1                   	// #1
  40a354:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a358:	add	x3, x3, #0x259
  40a35c:	mov	w4, #0x18                  	// #24
  40a360:	bl	403b08 <table_add_many_internal@plt>
  40a364:	stur	w0, [x29, #-212]
  40a368:	ldur	w9, [x29, #-212]
  40a36c:	cmp	w9, #0x0
  40a370:	cset	w9, ge  // ge = tcont
  40a374:	tbnz	w9, #0, 40a390 <clock_supported@plt+0x6098>
  40a378:	ldur	w8, [x29, #-212]
  40a37c:	ldr	x9, [sp, #624]
  40a380:	str	w8, [x9, #204]
  40a384:	mov	w8, #0x1                   	// #1
  40a388:	stur	w8, [x29, #-216]
  40a38c:	b	40a440 <clock_supported@plt+0x6148>
  40a390:	ldr	x8, [sp, #624]
  40a394:	ldr	x9, [x8, #176]
  40a398:	ldr	x9, [x9, #440]
  40a39c:	cbz	x9, 40a3b4 <clock_supported@plt+0x60bc>
  40a3a0:	ldr	x8, [sp, #624]
  40a3a4:	ldr	x9, [x8, #176]
  40a3a8:	ldr	x0, [x9, #440]
  40a3ac:	bl	404018 <cescape@plt>
  40a3b0:	str	x0, [sp, #696]
  40a3b4:	ldr	x8, [sp, #624]
  40a3b8:	ldr	x0, [x8, #8]
  40a3bc:	ldr	x9, [sp, #696]
  40a3c0:	str	x0, [sp, #296]
  40a3c4:	mov	x0, x9
  40a3c8:	bl	40c0c4 <clock_supported@plt+0x7dcc>
  40a3cc:	ldr	x8, [sp, #624]
  40a3d0:	ldr	x9, [x8, #176]
  40a3d4:	add	x9, x9, #0x1c0
  40a3d8:	str	x0, [sp, #288]
  40a3dc:	mov	x0, x9
  40a3e0:	add	x1, sp, #0x2a6
  40a3e4:	bl	403ff8 <ether_addr_to_string@plt>
  40a3e8:	ldr	x8, [sp, #296]
  40a3ec:	str	x0, [sp, #280]
  40a3f0:	mov	x0, x8
  40a3f4:	mov	x9, xzr
  40a3f8:	mov	x1, x9
  40a3fc:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40a400:	add	x2, x2, #0x26c
  40a404:	ldr	x3, [sp, #288]
  40a408:	ldr	x4, [sp, #280]
  40a40c:	bl	403fe8 <table_add_cell_stringf@plt>
  40a410:	stur	w0, [x29, #-212]
  40a414:	ldur	w10, [x29, #-212]
  40a418:	cmp	w10, #0x0
  40a41c:	cset	w10, ge  // ge = tcont
  40a420:	tbnz	w10, #0, 40a43c <clock_supported@plt+0x6144>
  40a424:	ldur	w8, [x29, #-212]
  40a428:	ldr	x9, [sp, #624]
  40a42c:	str	w8, [x9, #204]
  40a430:	mov	w8, #0x1                   	// #1
  40a434:	stur	w8, [x29, #-216]
  40a438:	b	40a440 <clock_supported@plt+0x6148>
  40a43c:	stur	wzr, [x29, #-216]
  40a440:	add	x0, sp, #0x2b8
  40a444:	bl	404a10 <clock_supported@plt+0x718>
  40a448:	ldur	w8, [x29, #-216]
  40a44c:	cmp	w8, #0x0
  40a450:	cset	w8, eq  // eq = none
  40a454:	eor	w8, w8, #0x1
  40a458:	tbnz	w8, #0, 40abec <clock_supported@plt+0x68f4>
  40a45c:	b	40a460 <clock_supported@plt+0x6168>
  40a460:	ldr	x8, [sp, #624]
  40a464:	ldr	x9, [x8, #176]
  40a468:	ldrh	w10, [x9, #454]
  40a46c:	mov	w11, #0x5                   	// #5
  40a470:	lsr	w10, w10, w11
  40a474:	and	w10, w10, #0x1
  40a478:	tbnz	w10, #0, 40a480 <clock_supported@plt+0x6188>
  40a47c:	b	40a580 <clock_supported@plt+0x6288>
  40a480:	ldr	x8, [sp, #624]
  40a484:	ldr	x0, [x8, #8]
  40a488:	mov	w9, wzr
  40a48c:	mov	w1, w9
  40a490:	mov	w2, #0x1                   	// #1
  40a494:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a498:	add	x3, x3, #0x274
  40a49c:	mov	w4, #0x18                  	// #24
  40a4a0:	bl	403b08 <table_add_many_internal@plt>
  40a4a4:	stur	w0, [x29, #-212]
  40a4a8:	ldur	w9, [x29, #-212]
  40a4ac:	cmp	w9, #0x0
  40a4b0:	cset	w9, ge  // ge = tcont
  40a4b4:	tbnz	w9, #0, 40a4d0 <clock_supported@plt+0x61d8>
  40a4b8:	ldur	w8, [x29, #-212]
  40a4bc:	ldr	x9, [sp, #624]
  40a4c0:	str	w8, [x9, #204]
  40a4c4:	mov	w8, #0x1                   	// #1
  40a4c8:	stur	w8, [x29, #-216]
  40a4cc:	b	40abec <clock_supported@plt+0x68f4>
  40a4d0:	ldr	x8, [sp, #624]
  40a4d4:	ldr	x0, [x8, #8]
  40a4d8:	ldr	x9, [x8, #176]
  40a4dc:	ldr	x2, [x9, #320]
  40a4e0:	add	x9, sp, #0x29e
  40a4e4:	str	x0, [sp, #272]
  40a4e8:	mov	x0, x9
  40a4ec:	mov	x9, #0x8                   	// #8
  40a4f0:	mov	x1, x9
  40a4f4:	mov	w10, wzr
  40a4f8:	mov	w3, w10
  40a4fc:	str	x9, [sp, #264]
  40a500:	str	w10, [sp, #260]
  40a504:	bl	404028 <format_bytes_full@plt>
  40a508:	ldr	x8, [sp, #624]
  40a50c:	ldr	x9, [x8, #176]
  40a510:	ldr	x2, [x9, #328]
  40a514:	add	x9, sp, #0x296
  40a518:	str	x0, [sp, #248]
  40a51c:	mov	x0, x9
  40a520:	ldr	x1, [sp, #264]
  40a524:	ldr	w3, [sp, #260]
  40a528:	bl	404028 <format_bytes_full@plt>
  40a52c:	ldr	x8, [sp, #272]
  40a530:	str	x0, [sp, #240]
  40a534:	mov	x0, x8
  40a538:	mov	x9, xzr
  40a53c:	mov	x1, x9
  40a540:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40a544:	add	x2, x2, #0x286
  40a548:	ldr	x3, [sp, #248]
  40a54c:	ldr	x4, [sp, #240]
  40a550:	bl	403fe8 <table_add_cell_stringf@plt>
  40a554:	stur	w0, [x29, #-212]
  40a558:	ldur	w10, [x29, #-212]
  40a55c:	cmp	w10, #0x0
  40a560:	cset	w10, ge  // ge = tcont
  40a564:	tbnz	w10, #0, 40a580 <clock_supported@plt+0x6288>
  40a568:	ldur	w8, [x29, #-212]
  40a56c:	ldr	x9, [sp, #624]
  40a570:	str	w8, [x9, #204]
  40a574:	mov	w8, #0x1                   	// #1
  40a578:	stur	w8, [x29, #-216]
  40a57c:	b	40abec <clock_supported@plt+0x68f4>
  40a580:	ldr	x8, [sp, #624]
  40a584:	ldr	x9, [x8, #176]
  40a588:	ldrh	w10, [x9, #454]
  40a58c:	mov	w11, #0x1                   	// #1
  40a590:	lsr	w10, w10, w11
  40a594:	and	w10, w10, w11
  40a598:	tbnz	w10, #0, 40a5bc <clock_supported@plt+0x62c4>
  40a59c:	ldr	x8, [sp, #624]
  40a5a0:	ldr	x9, [x8, #176]
  40a5a4:	ldrh	w10, [x9, #454]
  40a5a8:	mov	w11, #0x2                   	// #2
  40a5ac:	lsr	w10, w10, w11
  40a5b0:	and	w10, w10, #0x1
  40a5b4:	tbnz	w10, #0, 40a5bc <clock_supported@plt+0x62c4>
  40a5b8:	b	40a664 <clock_supported@plt+0x636c>
  40a5bc:	ldr	x8, [sp, #624]
  40a5c0:	ldr	x0, [x8, #8]
  40a5c4:	mov	w9, wzr
  40a5c8:	mov	w1, w9
  40a5cc:	mov	w2, #0x1                   	// #1
  40a5d0:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a5d4:	add	x3, x3, #0x292
  40a5d8:	mov	w4, #0x18                  	// #24
  40a5dc:	bl	403b08 <table_add_many_internal@plt>
  40a5e0:	stur	w0, [x29, #-212]
  40a5e4:	ldur	w9, [x29, #-212]
  40a5e8:	cmp	w9, #0x0
  40a5ec:	cset	w9, ge  // ge = tcont
  40a5f0:	tbnz	w9, #0, 40a60c <clock_supported@plt+0x6314>
  40a5f4:	ldur	w8, [x29, #-212]
  40a5f8:	ldr	x9, [sp, #624]
  40a5fc:	str	w8, [x9, #204]
  40a600:	mov	w8, #0x1                   	// #1
  40a604:	stur	w8, [x29, #-216]
  40a608:	b	40abec <clock_supported@plt+0x68f4>
  40a60c:	ldr	x8, [sp, #624]
  40a610:	ldr	x0, [x8, #8]
  40a614:	ldr	x9, [x8, #176]
  40a618:	ldr	w3, [x9, #120]
  40a61c:	ldr	x9, [x8, #176]
  40a620:	ldr	w4, [x9, #124]
  40a624:	mov	x9, xzr
  40a628:	mov	x1, x9
  40a62c:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40a630:	add	x2, x2, #0x2a8
  40a634:	bl	403fe8 <table_add_cell_stringf@plt>
  40a638:	stur	w0, [x29, #-212]
  40a63c:	ldur	w10, [x29, #-212]
  40a640:	cmp	w10, #0x0
  40a644:	cset	w10, ge  // ge = tcont
  40a648:	tbnz	w10, #0, 40a664 <clock_supported@plt+0x636c>
  40a64c:	ldur	w8, [x29, #-212]
  40a650:	ldr	x9, [sp, #624]
  40a654:	str	w8, [x9, #204]
  40a658:	mov	w8, #0x1                   	// #1
  40a65c:	stur	w8, [x29, #-216]
  40a660:	b	40abec <clock_supported@plt+0x68f4>
  40a664:	ldr	x8, [sp, #624]
  40a668:	ldr	x9, [x8, #176]
  40a66c:	ldrh	w10, [x9, #454]
  40a670:	mov	w11, #0x6                   	// #6
  40a674:	lsr	w10, w10, w11
  40a678:	and	w10, w10, #0x1
  40a67c:	tbnz	w10, #0, 40a684 <clock_supported@plt+0x638c>
  40a680:	b	40a8a4 <clock_supported@plt+0x65ac>
  40a684:	ldr	x8, [sp, #624]
  40a688:	ldr	x9, [x8, #176]
  40a68c:	ldr	w0, [x9, #424]
  40a690:	bl	404038 <duplex_to_string@plt>
  40a694:	str	x0, [sp, #648]
  40a698:	ldr	x8, [sp, #624]
  40a69c:	ldr	x9, [x8, #176]
  40a6a0:	ldr	w0, [x9, #428]
  40a6a4:	bl	404048 <port_to_string@plt>
  40a6a8:	str	x0, [sp, #640]
  40a6ac:	mov	w10, #0x0                   	// #0
  40a6b0:	strb	w10, [sp, #639]
  40a6b4:	ldr	x8, [sp, #624]
  40a6b8:	ldr	x9, [x8, #176]
  40a6bc:	ldr	w10, [x9, #412]
  40a6c0:	subs	w10, w10, #0x0
  40a6c4:	mov	w11, #0x1                   	// #1
  40a6c8:	cmp	w10, #0x1
  40a6cc:	cset	w10, ls  // ls = plast
  40a6d0:	eor	w10, w10, w11
  40a6d4:	tbnz	w10, #0, 40a6e8 <clock_supported@plt+0x63f0>
  40a6d8:	b	40a6dc <clock_supported@plt+0x63e4>
  40a6dc:	mov	w8, #0x1                   	// #1
  40a6e0:	strb	w8, [sp, #639]
  40a6e4:	b	40a6e8 <clock_supported@plt+0x63f0>
  40a6e8:	ldrb	w8, [sp, #639]
  40a6ec:	and	w8, w8, #0x1
  40a6f0:	strb	w8, [sp, #638]
  40a6f4:	ldrb	w8, [sp, #638]
  40a6f8:	tbnz	w8, #0, 40a700 <clock_supported@plt+0x6408>
  40a6fc:	b	40a768 <clock_supported@plt+0x6470>
  40a700:	ldr	x8, [sp, #624]
  40a704:	ldr	x0, [x8, #8]
  40a708:	ldr	x9, [x8, #176]
  40a70c:	ldr	w10, [x9, #412]
  40a710:	mov	w2, #0x1                   	// #1
  40a714:	cmp	w10, #0x1
  40a718:	cset	w10, eq  // eq = none
  40a71c:	and	w5, w10, #0x1
  40a720:	mov	w10, wzr
  40a724:	mov	w1, w10
  40a728:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a72c:	add	x3, x3, #0x2ae
  40a730:	mov	w4, #0x2                   	// #2
  40a734:	mov	w6, #0x18                  	// #24
  40a738:	bl	403b08 <table_add_many_internal@plt>
  40a73c:	stur	w0, [x29, #-212]
  40a740:	ldur	w10, [x29, #-212]
  40a744:	cmp	w10, #0x0
  40a748:	cset	w10, ge  // ge = tcont
  40a74c:	tbnz	w10, #0, 40a768 <clock_supported@plt+0x6470>
  40a750:	ldur	w8, [x29, #-212]
  40a754:	ldr	x9, [sp, #624]
  40a758:	str	w8, [x9, #204]
  40a75c:	mov	w8, #0x1                   	// #1
  40a760:	stur	w8, [x29, #-216]
  40a764:	b	40abec <clock_supported@plt+0x68f4>
  40a768:	ldr	x8, [sp, #624]
  40a76c:	ldr	x9, [x8, #176]
  40a770:	ldr	x9, [x9, #416]
  40a774:	cmp	x9, #0x0
  40a778:	cset	w10, ls  // ls = plast
  40a77c:	tbnz	w10, #0, 40a7dc <clock_supported@plt+0x64e4>
  40a780:	ldr	x8, [sp, #624]
  40a784:	ldr	x0, [x8, #8]
  40a788:	ldr	x9, [x8, #176]
  40a78c:	ldr	x5, [x9, #416]
  40a790:	mov	w10, wzr
  40a794:	mov	w1, w10
  40a798:	mov	w2, #0x1                   	// #1
  40a79c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a7a0:	add	x3, x3, #0x2c0
  40a7a4:	mov	w4, #0x9                   	// #9
  40a7a8:	mov	w6, #0x18                  	// #24
  40a7ac:	bl	403b08 <table_add_many_internal@plt>
  40a7b0:	stur	w0, [x29, #-212]
  40a7b4:	ldur	w10, [x29, #-212]
  40a7b8:	cmp	w10, #0x0
  40a7bc:	cset	w10, ge  // ge = tcont
  40a7c0:	tbnz	w10, #0, 40a7dc <clock_supported@plt+0x64e4>
  40a7c4:	ldur	w8, [x29, #-212]
  40a7c8:	ldr	x9, [sp, #624]
  40a7cc:	str	w8, [x9, #204]
  40a7d0:	mov	w8, #0x1                   	// #1
  40a7d4:	stur	w8, [x29, #-216]
  40a7d8:	b	40abec <clock_supported@plt+0x68f4>
  40a7dc:	ldr	x8, [sp, #648]
  40a7e0:	cbz	x8, 40a840 <clock_supported@plt+0x6548>
  40a7e4:	ldr	x8, [sp, #624]
  40a7e8:	ldr	x0, [x8, #8]
  40a7ec:	ldr	x5, [sp, #648]
  40a7f0:	mov	w9, wzr
  40a7f4:	mov	w1, w9
  40a7f8:	mov	w9, #0x1                   	// #1
  40a7fc:	mov	w2, w9
  40a800:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a804:	add	x3, x3, #0x2c7
  40a808:	mov	w4, w9
  40a80c:	mov	w6, #0x18                  	// #24
  40a810:	bl	403b08 <table_add_many_internal@plt>
  40a814:	stur	w0, [x29, #-212]
  40a818:	ldur	w9, [x29, #-212]
  40a81c:	cmp	w9, #0x0
  40a820:	cset	w9, ge  // ge = tcont
  40a824:	tbnz	w9, #0, 40a840 <clock_supported@plt+0x6548>
  40a828:	ldur	w8, [x29, #-212]
  40a82c:	ldr	x9, [sp, #624]
  40a830:	str	w8, [x9, #204]
  40a834:	mov	w8, #0x1                   	// #1
  40a838:	stur	w8, [x29, #-216]
  40a83c:	b	40abec <clock_supported@plt+0x68f4>
  40a840:	ldr	x8, [sp, #640]
  40a844:	cbz	x8, 40a8a4 <clock_supported@plt+0x65ac>
  40a848:	ldr	x8, [sp, #624]
  40a84c:	ldr	x0, [x8, #8]
  40a850:	ldr	x5, [sp, #640]
  40a854:	mov	w9, wzr
  40a858:	mov	w1, w9
  40a85c:	mov	w9, #0x1                   	// #1
  40a860:	mov	w2, w9
  40a864:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40a868:	add	x3, x3, #0x2cf
  40a86c:	mov	w4, w9
  40a870:	mov	w6, #0x18                  	// #24
  40a874:	bl	403b08 <table_add_many_internal@plt>
  40a878:	stur	w0, [x29, #-212]
  40a87c:	ldur	w9, [x29, #-212]
  40a880:	cmp	w9, #0x0
  40a884:	cset	w9, ge  // ge = tcont
  40a888:	tbnz	w9, #0, 40a8a4 <clock_supported@plt+0x65ac>
  40a88c:	ldur	w8, [x29, #-212]
  40a890:	ldr	x9, [sp, #624]
  40a894:	str	w8, [x9, #204]
  40a898:	mov	w8, #0x1                   	// #1
  40a89c:	stur	w8, [x29, #-216]
  40a8a0:	b	40abec <clock_supported@plt+0x68f4>
  40a8a4:	ldr	x8, [sp, #624]
  40a8a8:	ldr	x0, [x8, #192]
  40a8ac:	ldr	x1, [x8, #8]
  40a8b0:	ldr	x9, [x8, #176]
  40a8b4:	ldr	w2, [x9, #96]
  40a8b8:	bl	40ac9c <clock_supported@plt+0x69a4>
  40a8bc:	stur	w0, [x29, #-212]
  40a8c0:	ldur	w10, [x29, #-212]
  40a8c4:	cmp	w10, #0x0
  40a8c8:	cset	w10, ge  // ge = tcont
  40a8cc:	tbnz	w10, #0, 40a8e8 <clock_supported@plt+0x65f0>
  40a8d0:	ldur	w8, [x29, #-212]
  40a8d4:	ldr	x9, [sp, #624]
  40a8d8:	str	w8, [x9, #204]
  40a8dc:	mov	w8, #0x1                   	// #1
  40a8e0:	stur	w8, [x29, #-216]
  40a8e4:	b	40abec <clock_supported@plt+0x68f4>
  40a8e8:	ldr	x8, [sp, #624]
  40a8ec:	ldr	x0, [x8, #192]
  40a8f0:	ldr	x1, [x8, #184]
  40a8f4:	ldr	x2, [x8, #8]
  40a8f8:	ldr	x9, [x8, #176]
  40a8fc:	ldr	w3, [x9, #96]
  40a900:	bl	40b03c <clock_supported@plt+0x6d44>
  40a904:	stur	w0, [x29, #-212]
  40a908:	ldur	w10, [x29, #-212]
  40a90c:	cmp	w10, #0x0
  40a910:	cset	w10, ge  // ge = tcont
  40a914:	tbnz	w10, #0, 40a930 <clock_supported@plt+0x6638>
  40a918:	ldur	w8, [x29, #-212]
  40a91c:	ldr	x9, [sp, #624]
  40a920:	str	w8, [x9, #204]
  40a924:	mov	w8, #0x1                   	// #1
  40a928:	stur	w8, [x29, #-216]
  40a92c:	b	40abec <clock_supported@plt+0x68f4>
  40a930:	ldr	x8, [sp, #624]
  40a934:	ldr	x0, [x8, #8]
  40a938:	ldr	x2, [x8, #168]
  40a93c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40a940:	add	x1, x1, #0xd5e
  40a944:	bl	40b4b8 <clock_supported@plt+0x71c0>
  40a948:	stur	w0, [x29, #-212]
  40a94c:	ldur	w9, [x29, #-212]
  40a950:	cmp	w9, #0x0
  40a954:	cset	w9, ge  // ge = tcont
  40a958:	tbnz	w9, #0, 40a974 <clock_supported@plt+0x667c>
  40a95c:	ldur	w8, [x29, #-212]
  40a960:	ldr	x9, [sp, #624]
  40a964:	str	w8, [x9, #204]
  40a968:	mov	w8, #0x1                   	// #1
  40a96c:	stur	w8, [x29, #-216]
  40a970:	b	40abec <clock_supported@plt+0x68f4>
  40a974:	ldr	x8, [sp, #624]
  40a978:	ldr	x0, [x8, #8]
  40a97c:	ldr	x2, [x8, #152]
  40a980:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40a984:	add	x1, x1, #0xd63
  40a988:	bl	40b4b8 <clock_supported@plt+0x71c0>
  40a98c:	stur	w0, [x29, #-212]
  40a990:	ldur	w9, [x29, #-212]
  40a994:	cmp	w9, #0x0
  40a998:	cset	w9, ge  // ge = tcont
  40a99c:	tbnz	w9, #0, 40a9b8 <clock_supported@plt+0x66c0>
  40a9a0:	ldur	w8, [x29, #-212]
  40a9a4:	ldr	x9, [sp, #624]
  40a9a8:	str	w8, [x9, #204]
  40a9ac:	mov	w8, #0x1                   	// #1
  40a9b0:	stur	w8, [x29, #-216]
  40a9b4:	b	40abec <clock_supported@plt+0x68f4>
  40a9b8:	ldr	x8, [sp, #624]
  40a9bc:	ldr	x0, [x8, #8]
  40a9c0:	ldr	x2, [x8, #144]
  40a9c4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40a9c8:	add	x1, x1, #0xd73
  40a9cc:	bl	40b4b8 <clock_supported@plt+0x71c0>
  40a9d0:	stur	w0, [x29, #-212]
  40a9d4:	ldur	w9, [x29, #-212]
  40a9d8:	cmp	w9, #0x0
  40a9dc:	cset	w9, ge  // ge = tcont
  40a9e0:	tbnz	w9, #0, 40a9fc <clock_supported@plt+0x6704>
  40a9e4:	ldur	w8, [x29, #-212]
  40a9e8:	ldr	x9, [sp, #624]
  40a9ec:	str	w8, [x9, #204]
  40a9f0:	mov	w8, #0x1                   	// #1
  40a9f4:	stur	w8, [x29, #-216]
  40a9f8:	b	40abec <clock_supported@plt+0x68f4>
  40a9fc:	ldr	x8, [sp, #624]
  40aa00:	ldr	x0, [x8, #8]
  40aa04:	ldr	x2, [x8, #160]
  40aa08:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40aa0c:	add	x1, x1, #0xd82
  40aa10:	bl	40b4b8 <clock_supported@plt+0x71c0>
  40aa14:	stur	w0, [x29, #-212]
  40aa18:	ldur	w9, [x29, #-212]
  40aa1c:	cmp	w9, #0x0
  40aa20:	cset	w9, ge  // ge = tcont
  40aa24:	tbnz	w9, #0, 40aa40 <clock_supported@plt+0x6748>
  40aa28:	ldur	w8, [x29, #-212]
  40aa2c:	ldr	x9, [sp, #624]
  40aa30:	str	w8, [x9, #204]
  40aa34:	mov	w8, #0x1                   	// #1
  40aa38:	stur	w8, [x29, #-216]
  40aa3c:	b	40abec <clock_supported@plt+0x68f4>
  40aa40:	ldr	x8, [sp, #624]
  40aa44:	ldr	x0, [x8, #8]
  40aa48:	ldr	x2, [x8, #24]
  40aa4c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40aa50:	add	x1, x1, #0x2d5
  40aa54:	bl	40c100 <clock_supported@plt+0x7e08>
  40aa58:	stur	w0, [x29, #-212]
  40aa5c:	ldur	w9, [x29, #-212]
  40aa60:	cmp	w9, #0x0
  40aa64:	cset	w9, ge  // ge = tcont
  40aa68:	tbnz	w9, #0, 40aa84 <clock_supported@plt+0x678c>
  40aa6c:	ldur	w8, [x29, #-212]
  40aa70:	ldr	x9, [sp, #624]
  40aa74:	str	w8, [x9, #204]
  40aa78:	mov	w8, #0x1                   	// #1
  40aa7c:	stur	w8, [x29, #-216]
  40aa80:	b	40abec <clock_supported@plt+0x68f4>
  40aa84:	ldr	x8, [sp, #624]
  40aa88:	ldr	x0, [x8, #8]
  40aa8c:	ldr	x2, [x8, #16]
  40aa90:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40aa94:	add	x1, x1, #0x2e7
  40aa98:	bl	40c100 <clock_supported@plt+0x7e08>
  40aa9c:	stur	w0, [x29, #-212]
  40aaa0:	ldur	w9, [x29, #-212]
  40aaa4:	cmp	w9, #0x0
  40aaa8:	cset	w9, ge  // ge = tcont
  40aaac:	tbnz	w9, #0, 40aac8 <clock_supported@plt+0x67d0>
  40aab0:	ldur	w8, [x29, #-212]
  40aab4:	ldr	x9, [sp, #624]
  40aab8:	str	w8, [x9, #204]
  40aabc:	mov	w8, #0x1                   	// #1
  40aac0:	stur	w8, [x29, #-216]
  40aac4:	b	40abec <clock_supported@plt+0x68f4>
  40aac8:	ldr	x8, [sp, #624]
  40aacc:	ldr	x9, [x8, #176]
  40aad0:	ldr	w0, [x9, #96]
  40aad4:	sub	x1, x29, #0x58
  40aad8:	bl	404058 <sd_network_link_get_timezone@plt>
  40aadc:	ldr	x8, [sp, #624]
  40aae0:	ldr	x9, [x8, #120]
  40aae4:	cbz	x9, 40ab44 <clock_supported@plt+0x684c>
  40aae8:	ldr	x8, [sp, #624]
  40aaec:	ldr	x0, [x8, #8]
  40aaf0:	ldr	x5, [x8, #120]
  40aaf4:	mov	w9, wzr
  40aaf8:	mov	w1, w9
  40aafc:	mov	w9, #0x1                   	// #1
  40ab00:	mov	w2, w9
  40ab04:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40ab08:	add	x3, x3, #0x2f9
  40ab0c:	mov	w4, w9
  40ab10:	mov	w6, #0x18                  	// #24
  40ab14:	bl	403b08 <table_add_many_internal@plt>
  40ab18:	stur	w0, [x29, #-212]
  40ab1c:	ldur	w9, [x29, #-212]
  40ab20:	cmp	w9, #0x0
  40ab24:	cset	w9, ge  // ge = tcont
  40ab28:	tbnz	w9, #0, 40ab44 <clock_supported@plt+0x684c>
  40ab2c:	ldur	w8, [x29, #-212]
  40ab30:	ldr	x9, [sp, #624]
  40ab34:	str	w8, [x9, #204]
  40ab38:	mov	w8, #0x1                   	// #1
  40ab3c:	stur	w8, [x29, #-216]
  40ab40:	b	40abec <clock_supported@plt+0x68f4>
  40ab44:	ldr	x8, [sp, #624]
  40ab48:	ldr	x0, [x8, #8]
  40ab4c:	ldr	x9, [x8, #176]
  40ab50:	ldr	w2, [x9, #96]
  40ab54:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40ab58:	add	x1, x1, #0x304
  40ab5c:	bl	40c25c <clock_supported@plt+0x7f64>
  40ab60:	stur	w0, [x29, #-212]
  40ab64:	ldur	w10, [x29, #-212]
  40ab68:	cmp	w10, #0x0
  40ab6c:	cset	w10, ge  // ge = tcont
  40ab70:	tbnz	w10, #0, 40ab8c <clock_supported@plt+0x6894>
  40ab74:	ldur	w8, [x29, #-212]
  40ab78:	ldr	x9, [sp, #624]
  40ab7c:	str	w8, [x9, #204]
  40ab80:	mov	w8, #0x1                   	// #1
  40ab84:	stur	w8, [x29, #-216]
  40ab88:	b	40abec <clock_supported@plt+0x68f4>
  40ab8c:	ldr	x8, [sp, #624]
  40ab90:	ldr	x0, [x8, #8]
  40ab94:	ldr	x1, [x8, #176]
  40ab98:	bl	40c600 <clock_supported@plt+0x8308>
  40ab9c:	stur	w0, [x29, #-212]
  40aba0:	ldur	w9, [x29, #-212]
  40aba4:	cmp	w9, #0x0
  40aba8:	cset	w9, ge  // ge = tcont
  40abac:	tbnz	w9, #0, 40abc8 <clock_supported@plt+0x68d0>
  40abb0:	ldur	w8, [x29, #-212]
  40abb4:	ldr	x9, [sp, #624]
  40abb8:	str	w8, [x9, #204]
  40abbc:	mov	w8, #0x1                   	// #1
  40abc0:	stur	w8, [x29, #-216]
  40abc4:	b	40abec <clock_supported@plt+0x68f4>
  40abc8:	ldr	x8, [sp, #624]
  40abcc:	ldr	x0, [x8, #8]
  40abd0:	mov	x9, xzr
  40abd4:	mov	x1, x9
  40abd8:	bl	403b18 <table_print@plt>
  40abdc:	ldr	x8, [sp, #624]
  40abe0:	str	w0, [x8, #204]
  40abe4:	mov	w10, #0x1                   	// #1
  40abe8:	stur	w10, [x29, #-216]
  40abec:	sub	x0, x29, #0xc8
  40abf0:	bl	406d30 <clock_supported@plt+0x2a38>
  40abf4:	sub	x0, x29, #0xc0
  40abf8:	bl	404a10 <clock_supported@plt+0x718>
  40abfc:	sub	x0, x29, #0xb8
  40ac00:	bl	404a10 <clock_supported@plt+0x718>
  40ac04:	sub	x0, x29, #0x68
  40ac08:	bl	404a10 <clock_supported@plt+0x718>
  40ac0c:	sub	x0, x29, #0x60
  40ac10:	bl	404a10 <clock_supported@plt+0x718>
  40ac14:	sub	x0, x29, #0x58
  40ac18:	bl	404a10 <clock_supported@plt+0x718>
  40ac1c:	sub	x0, x29, #0x50
  40ac20:	bl	404a10 <clock_supported@plt+0x718>
  40ac24:	sub	x0, x29, #0x48
  40ac28:	bl	404a10 <clock_supported@plt+0x718>
  40ac2c:	sub	x0, x29, #0x40
  40ac30:	bl	40ac68 <clock_supported@plt+0x6970>
  40ac34:	sub	x0, x29, #0x38
  40ac38:	bl	40ac68 <clock_supported@plt+0x6970>
  40ac3c:	sub	x0, x29, #0x30
  40ac40:	bl	40ac68 <clock_supported@plt+0x6970>
  40ac44:	sub	x0, x29, #0x28
  40ac48:	bl	40ac68 <clock_supported@plt+0x6970>
  40ac4c:	ldr	x8, [sp, #624]
  40ac50:	ldr	w0, [x8, #204]
  40ac54:	add	sp, sp, #0x3d0
  40ac58:	ldp	x20, x19, [sp, #32]
  40ac5c:	ldr	x28, [sp, #16]
  40ac60:	ldp	x29, x30, [sp], #48
  40ac64:	ret
  40ac68:	sub	sp, sp, #0x20
  40ac6c:	stp	x29, x30, [sp, #16]
  40ac70:	add	x29, sp, #0x10
  40ac74:	str	x0, [sp, #8]
  40ac78:	ldr	x8, [sp, #8]
  40ac7c:	ldr	x8, [x8]
  40ac80:	cbz	x8, 40ac90 <clock_supported@plt+0x6998>
  40ac84:	ldr	x8, [sp, #8]
  40ac88:	ldr	x0, [x8]
  40ac8c:	bl	404068 <strv_free@plt>
  40ac90:	ldp	x29, x30, [sp, #16]
  40ac94:	add	sp, sp, #0x20
  40ac98:	ret
  40ac9c:	sub	sp, sp, #0xa0
  40aca0:	stp	x29, x30, [sp, #144]
  40aca4:	add	x29, sp, #0x90
  40aca8:	mov	x8, xzr
  40acac:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40acb0:	add	x9, x9, #0x31c
  40acb4:	add	x9, x9, #0x3
  40acb8:	stur	x0, [x29, #-16]
  40acbc:	stur	x1, [x29, #-24]
  40acc0:	stur	w2, [x29, #-28]
  40acc4:	stur	x8, [x29, #-40]
  40acc8:	stur	x8, [x29, #-48]
  40accc:	str	x9, [sp, #32]
  40acd0:	ldur	x8, [x29, #-16]
  40acd4:	cmp	x8, #0x0
  40acd8:	cset	w9, ne  // ne = any
  40acdc:	mov	w10, #0x1                   	// #1
  40ace0:	eor	w9, w9, #0x1
  40ace4:	eor	w9, w9, w10
  40ace8:	eor	w9, w9, w10
  40acec:	and	w9, w9, #0x1
  40acf0:	mov	w0, w9
  40acf4:	sxtw	x8, w0
  40acf8:	cbz	x8, 40ad20 <clock_supported@plt+0x6a28>
  40acfc:	mov	w8, wzr
  40ad00:	mov	w0, w8
  40ad04:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40ad08:	add	x1, x1, #0x852
  40ad0c:	ldr	x2, [sp, #32]
  40ad10:	mov	w3, #0x2e9                 	// #745
  40ad14:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40ad18:	add	x4, x4, #0xd87
  40ad1c:	bl	403958 <log_assert_failed_realm@plt>
  40ad20:	ldur	x8, [x29, #-24]
  40ad24:	cmp	x8, #0x0
  40ad28:	cset	w9, ne  // ne = any
  40ad2c:	mov	w10, #0x1                   	// #1
  40ad30:	eor	w9, w9, #0x1
  40ad34:	eor	w9, w9, w10
  40ad38:	eor	w9, w9, w10
  40ad3c:	and	w9, w9, #0x1
  40ad40:	mov	w0, w9
  40ad44:	sxtw	x8, w0
  40ad48:	cbz	x8, 40ad70 <clock_supported@plt+0x6a78>
  40ad4c:	mov	w8, wzr
  40ad50:	mov	w0, w8
  40ad54:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40ad58:	add	x1, x1, #0xdb6
  40ad5c:	ldr	x2, [sp, #32]
  40ad60:	mov	w3, #0x2ea                 	// #746
  40ad64:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40ad68:	add	x4, x4, #0xd87
  40ad6c:	bl	403958 <log_assert_failed_realm@plt>
  40ad70:	ldur	x0, [x29, #-16]
  40ad74:	ldur	w1, [x29, #-28]
  40ad78:	mov	w8, wzr
  40ad7c:	mov	w2, w8
  40ad80:	sub	x3, x29, #0x28
  40ad84:	bl	404078 <local_addresses@plt>
  40ad88:	stur	w0, [x29, #-56]
  40ad8c:	ldur	w8, [x29, #-56]
  40ad90:	cmp	w8, #0x0
  40ad94:	cset	w8, ge  // ge = tcont
  40ad98:	tbnz	w8, #0, 40adb0 <clock_supported@plt+0x6ab8>
  40ad9c:	ldur	w8, [x29, #-56]
  40ada0:	stur	w8, [x29, #-4]
  40ada4:	mov	w8, #0x1                   	// #1
  40ada8:	stur	w8, [x29, #-64]
  40adac:	b	40b01c <clock_supported@plt+0x6d24>
  40adb0:	ldur	w0, [x29, #-28]
  40adb4:	sub	x1, x29, #0x30
  40adb8:	bl	404088 <sd_network_link_get_dhcp4_address@plt>
  40adbc:	stur	wzr, [x29, #-60]
  40adc0:	ldur	w8, [x29, #-60]
  40adc4:	ldur	w9, [x29, #-56]
  40adc8:	cmp	w8, w9
  40adcc:	b.ge	40b010 <clock_supported@plt+0x6d18>  // b.tcont
  40add0:	mov	x8, xzr
  40add4:	str	x8, [sp, #72]
  40add8:	ldur	x0, [x29, #-24]
  40addc:	ldur	w9, [x29, #-60]
  40ade0:	mov	w10, wzr
  40ade4:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40ade8:	add	x8, x8, #0x6c7
  40adec:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40adf0:	add	x11, x11, #0xdbc
  40adf4:	cmp	w9, #0x0
  40adf8:	csel	x3, x11, x8, eq  // eq = none
  40adfc:	mov	w1, w10
  40ae00:	mov	w2, #0x1                   	// #1
  40ae04:	mov	w4, #0x18                  	// #24
  40ae08:	bl	403b08 <table_add_many_internal@plt>
  40ae0c:	stur	w0, [x29, #-52]
  40ae10:	ldur	w9, [x29, #-52]
  40ae14:	cmp	w9, #0x0
  40ae18:	cset	w9, ge  // ge = tcont
  40ae1c:	tbnz	w9, #0, 40ae34 <clock_supported@plt+0x6b3c>
  40ae20:	ldur	w8, [x29, #-52]
  40ae24:	stur	w8, [x29, #-4]
  40ae28:	mov	w8, #0x1                   	// #1
  40ae2c:	stur	w8, [x29, #-64]
  40ae30:	b	40afe0 <clock_supported@plt+0x6ce8>
  40ae34:	ldur	x8, [x29, #-40]
  40ae38:	ldursw	x9, [x29, #-60]
  40ae3c:	mov	x10, #0x20                  	// #32
  40ae40:	mul	x9, x10, x9
  40ae44:	ldr	w0, [x8, x9]
  40ae48:	ldur	x8, [x29, #-40]
  40ae4c:	ldursw	x9, [x29, #-60]
  40ae50:	mul	x9, x10, x9
  40ae54:	add	x8, x8, x9
  40ae58:	add	x1, x8, #0x10
  40ae5c:	add	x2, sp, #0x48
  40ae60:	bl	404098 <in_addr_to_string@plt>
  40ae64:	stur	w0, [x29, #-52]
  40ae68:	ldur	w11, [x29, #-52]
  40ae6c:	cmp	w11, #0x0
  40ae70:	cset	w11, ge  // ge = tcont
  40ae74:	tbnz	w11, #0, 40ae8c <clock_supported@plt+0x6b94>
  40ae78:	ldur	w8, [x29, #-52]
  40ae7c:	stur	w8, [x29, #-4]
  40ae80:	mov	w8, #0x1                   	// #1
  40ae84:	stur	w8, [x29, #-64]
  40ae88:	b	40afe0 <clock_supported@plt+0x6ce8>
  40ae8c:	ldur	x8, [x29, #-48]
  40ae90:	cbz	x8, 40af24 <clock_supported@plt+0x6c2c>
  40ae94:	ldr	x0, [sp, #72]
  40ae98:	ldur	x1, [x29, #-48]
  40ae9c:	bl	403e58 <strcmp@plt>
  40aea0:	cbnz	w0, 40af24 <clock_supported@plt+0x6c2c>
  40aea4:	mov	x8, xzr
  40aea8:	str	x8, [sp, #64]
  40aeac:	ldr	x9, [sp, #72]
  40aeb0:	str	x9, [sp, #64]
  40aeb4:	ldr	x0, [sp, #72]
  40aeb8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40aebc:	add	x1, x1, #0xdc5
  40aec0:	mov	x2, x8
  40aec4:	bl	4040a8 <strjoin_real@plt>
  40aec8:	str	x0, [sp, #72]
  40aecc:	ldr	x8, [sp, #72]
  40aed0:	cbnz	x8, 40af00 <clock_supported@plt+0x6c08>
  40aed4:	mov	w8, wzr
  40aed8:	mov	w0, w8
  40aedc:	ldr	x1, [sp, #32]
  40aee0:	mov	w2, #0x305                 	// #773
  40aee4:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  40aee8:	add	x3, x3, #0xdce
  40aeec:	bl	4039d8 <log_oom_internal@plt>
  40aef0:	stur	w0, [x29, #-4]
  40aef4:	mov	w8, #0x1                   	// #1
  40aef8:	stur	w8, [x29, #-64]
  40aefc:	b	40af04 <clock_supported@plt+0x6c0c>
  40af00:	stur	wzr, [x29, #-64]
  40af04:	add	x0, sp, #0x40
  40af08:	bl	404a10 <clock_supported@plt+0x718>
  40af0c:	ldur	w8, [x29, #-64]
  40af10:	cmp	w8, #0x0
  40af14:	cset	w8, eq  // eq = none
  40af18:	eor	w8, w8, #0x1
  40af1c:	tbnz	w8, #0, 40afe0 <clock_supported@plt+0x6ce8>
  40af20:	b	40af24 <clock_supported@plt+0x6c2c>
  40af24:	ldur	w8, [x29, #-28]
  40af28:	cmp	w8, #0x0
  40af2c:	cset	w8, gt
  40af30:	tbnz	w8, #0, 40af9c <clock_supported@plt+0x6ca4>
  40af34:	ldur	x0, [x29, #-24]
  40af38:	ldr	x3, [sp, #72]
  40af3c:	ldur	x8, [x29, #-40]
  40af40:	ldursw	x9, [x29, #-60]
  40af44:	mov	x10, #0x20                  	// #32
  40af48:	mul	x9, x10, x9
  40af4c:	add	x8, x8, x9
  40af50:	ldr	w11, [x8, #4]
  40af54:	str	x0, [sp, #24]
  40af58:	mov	w0, w11
  40af5c:	add	x1, sp, #0x2f
  40af60:	mov	w2, #0x3                   	// #3
  40af64:	str	x3, [sp, #16]
  40af68:	bl	403b98 <format_ifname_full@plt>
  40af6c:	ldr	x8, [sp, #24]
  40af70:	str	x0, [sp, #8]
  40af74:	mov	x0, x8
  40af78:	mov	x9, xzr
  40af7c:	mov	x1, x9
  40af80:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  40af84:	add	x2, x2, #0xddd
  40af88:	ldr	x3, [sp, #16]
  40af8c:	ldr	x4, [sp, #8]
  40af90:	bl	403fe8 <table_add_cell_stringf@plt>
  40af94:	stur	w0, [x29, #-52]
  40af98:	b	40afb8 <clock_supported@plt+0x6cc0>
  40af9c:	ldur	x0, [x29, #-24]
  40afa0:	ldr	x3, [sp, #72]
  40afa4:	mov	x8, xzr
  40afa8:	mov	x1, x8
  40afac:	mov	w2, #0x1                   	// #1
  40afb0:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40afb4:	stur	w0, [x29, #-52]
  40afb8:	ldur	w8, [x29, #-52]
  40afbc:	cmp	w8, #0x0
  40afc0:	cset	w8, ge  // ge = tcont
  40afc4:	tbnz	w8, #0, 40afdc <clock_supported@plt+0x6ce4>
  40afc8:	ldur	w8, [x29, #-52]
  40afcc:	stur	w8, [x29, #-4]
  40afd0:	mov	w8, #0x1                   	// #1
  40afd4:	stur	w8, [x29, #-64]
  40afd8:	b	40afe0 <clock_supported@plt+0x6ce8>
  40afdc:	stur	wzr, [x29, #-64]
  40afe0:	add	x0, sp, #0x48
  40afe4:	bl	404a10 <clock_supported@plt+0x718>
  40afe8:	ldur	w8, [x29, #-64]
  40afec:	cmp	w8, #0x0
  40aff0:	cset	w8, eq  // eq = none
  40aff4:	eor	w8, w8, #0x1
  40aff8:	tbnz	w8, #0, 40b01c <clock_supported@plt+0x6d24>
  40affc:	b	40b000 <clock_supported@plt+0x6d08>
  40b000:	ldur	w8, [x29, #-60]
  40b004:	add	w8, w8, #0x1
  40b008:	stur	w8, [x29, #-60]
  40b00c:	b	40adc0 <clock_supported@plt+0x6ac8>
  40b010:	stur	wzr, [x29, #-4]
  40b014:	mov	w8, #0x1                   	// #1
  40b018:	stur	w8, [x29, #-64]
  40b01c:	sub	x0, x29, #0x30
  40b020:	bl	404a10 <clock_supported@plt+0x718>
  40b024:	sub	x0, x29, #0x28
  40b028:	bl	404a10 <clock_supported@plt+0x718>
  40b02c:	ldur	w0, [x29, #-4]
  40b030:	ldp	x29, x30, [sp, #144]
  40b034:	add	sp, sp, #0xa0
  40b038:	ret
  40b03c:	sub	sp, sp, #0xe0
  40b040:	stp	x29, x30, [sp, #208]
  40b044:	add	x29, sp, #0xd0
  40b048:	mov	x8, xzr
  40b04c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40b050:	add	x9, x9, #0x31c
  40b054:	add	x9, x9, #0x3
  40b058:	stur	x0, [x29, #-16]
  40b05c:	stur	x1, [x29, #-24]
  40b060:	stur	x2, [x29, #-32]
  40b064:	stur	w3, [x29, #-36]
  40b068:	stur	x8, [x29, #-48]
  40b06c:	str	x9, [sp, #72]
  40b070:	ldur	x8, [x29, #-16]
  40b074:	cmp	x8, #0x0
  40b078:	cset	w9, ne  // ne = any
  40b07c:	mov	w10, #0x1                   	// #1
  40b080:	eor	w9, w9, #0x1
  40b084:	eor	w9, w9, w10
  40b088:	eor	w9, w9, w10
  40b08c:	and	w9, w9, #0x1
  40b090:	mov	w0, w9
  40b094:	sxtw	x8, w0
  40b098:	cbz	x8, 40b0c0 <clock_supported@plt+0x6dc8>
  40b09c:	mov	w8, wzr
  40b0a0:	mov	w0, w8
  40b0a4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b0a8:	add	x1, x1, #0x852
  40b0ac:	ldr	x2, [sp, #72]
  40b0b0:	mov	w3, #0x2b2                 	// #690
  40b0b4:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40b0b8:	add	x4, x4, #0xde6
  40b0bc:	bl	403958 <log_assert_failed_realm@plt>
  40b0c0:	ldur	x8, [x29, #-32]
  40b0c4:	cmp	x8, #0x0
  40b0c8:	cset	w9, ne  // ne = any
  40b0cc:	mov	w10, #0x1                   	// #1
  40b0d0:	eor	w9, w9, #0x1
  40b0d4:	eor	w9, w9, w10
  40b0d8:	eor	w9, w9, w10
  40b0dc:	and	w9, w9, #0x1
  40b0e0:	mov	w0, w9
  40b0e4:	sxtw	x8, w0
  40b0e8:	cbz	x8, 40b110 <clock_supported@plt+0x6e18>
  40b0ec:	mov	w8, wzr
  40b0f0:	mov	w0, w8
  40b0f4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b0f8:	add	x1, x1, #0xdb6
  40b0fc:	ldr	x2, [sp, #72]
  40b100:	mov	w3, #0x2b3                 	// #691
  40b104:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40b108:	add	x4, x4, #0xde6
  40b10c:	bl	403958 <log_assert_failed_realm@plt>
  40b110:	ldur	x0, [x29, #-16]
  40b114:	ldur	w1, [x29, #-36]
  40b118:	mov	w8, wzr
  40b11c:	mov	w2, w8
  40b120:	sub	x3, x29, #0x30
  40b124:	bl	4040b8 <local_gateways@plt>
  40b128:	stur	w0, [x29, #-56]
  40b12c:	ldur	w8, [x29, #-56]
  40b130:	cmp	w8, #0x0
  40b134:	cset	w8, ge  // ge = tcont
  40b138:	tbnz	w8, #0, 40b150 <clock_supported@plt+0x6e58>
  40b13c:	ldur	w8, [x29, #-56]
  40b140:	stur	w8, [x29, #-4]
  40b144:	mov	w8, #0x1                   	// #1
  40b148:	stur	w8, [x29, #-64]
  40b14c:	b	40b4a0 <clock_supported@plt+0x71a8>
  40b150:	stur	wzr, [x29, #-60]
  40b154:	ldur	w8, [x29, #-60]
  40b158:	ldur	w9, [x29, #-56]
  40b15c:	cmp	w8, w9
  40b160:	b.ge	40b494 <clock_supported@plt+0x719c>  // b.tcont
  40b164:	mov	x8, xzr
  40b168:	stur	x8, [x29, #-72]
  40b16c:	stur	x8, [x29, #-80]
  40b170:	stur	x8, [x29, #-88]
  40b174:	ldur	x0, [x29, #-32]
  40b178:	ldur	w9, [x29, #-60]
  40b17c:	mov	w10, wzr
  40b180:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40b184:	add	x8, x8, #0x6c7
  40b188:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40b18c:	add	x11, x11, #0xe1f
  40b190:	cmp	w9, #0x0
  40b194:	csel	x3, x11, x8, eq  // eq = none
  40b198:	mov	w1, w10
  40b19c:	mov	w2, #0x1                   	// #1
  40b1a0:	mov	w4, #0x18                  	// #24
  40b1a4:	bl	403b08 <table_add_many_internal@plt>
  40b1a8:	stur	w0, [x29, #-52]
  40b1ac:	ldur	w9, [x29, #-52]
  40b1b0:	cmp	w9, #0x0
  40b1b4:	cset	w9, ge  // ge = tcont
  40b1b8:	tbnz	w9, #0, 40b1d0 <clock_supported@plt+0x6ed8>
  40b1bc:	ldur	w8, [x29, #-52]
  40b1c0:	stur	w8, [x29, #-4]
  40b1c4:	mov	w8, #0x1                   	// #1
  40b1c8:	stur	w8, [x29, #-64]
  40b1cc:	b	40b454 <clock_supported@plt+0x715c>
  40b1d0:	ldur	x8, [x29, #-48]
  40b1d4:	ldursw	x9, [x29, #-60]
  40b1d8:	mov	x10, #0x20                  	// #32
  40b1dc:	mul	x9, x10, x9
  40b1e0:	ldr	w0, [x8, x9]
  40b1e4:	ldur	x8, [x29, #-48]
  40b1e8:	ldursw	x9, [x29, #-60]
  40b1ec:	mul	x9, x10, x9
  40b1f0:	add	x8, x8, x9
  40b1f4:	add	x1, x8, #0x10
  40b1f8:	sub	x2, x29, #0x48
  40b1fc:	bl	404098 <in_addr_to_string@plt>
  40b200:	stur	w0, [x29, #-52]
  40b204:	ldur	w11, [x29, #-52]
  40b208:	cmp	w11, #0x0
  40b20c:	cset	w11, ge  // ge = tcont
  40b210:	tbnz	w11, #0, 40b228 <clock_supported@plt+0x6f30>
  40b214:	ldur	w8, [x29, #-52]
  40b218:	stur	w8, [x29, #-4]
  40b21c:	mov	w8, #0x1                   	// #1
  40b220:	stur	w8, [x29, #-64]
  40b224:	b	40b454 <clock_supported@plt+0x715c>
  40b228:	ldur	x0, [x29, #-16]
  40b22c:	ldur	x1, [x29, #-24]
  40b230:	ldur	x8, [x29, #-48]
  40b234:	ldursw	x9, [x29, #-60]
  40b238:	mov	x10, #0x20                  	// #32
  40b23c:	mul	x9, x10, x9
  40b240:	add	x8, x8, x9
  40b244:	ldr	w2, [x8, #4]
  40b248:	ldur	x8, [x29, #-48]
  40b24c:	ldursw	x9, [x29, #-60]
  40b250:	mul	x9, x10, x9
  40b254:	ldr	w3, [x8, x9]
  40b258:	ldur	x8, [x29, #-48]
  40b25c:	ldursw	x9, [x29, #-60]
  40b260:	mul	x9, x10, x9
  40b264:	add	x8, x8, x9
  40b268:	add	x4, x8, #0x10
  40b26c:	sub	x5, x29, #0x50
  40b270:	bl	40b620 <clock_supported@plt+0x7328>
  40b274:	stur	w0, [x29, #-52]
  40b278:	ldur	w11, [x29, #-52]
  40b27c:	cmp	w11, #0x0
  40b280:	cset	w11, ge  // ge = tcont
  40b284:	tbnz	w11, #0, 40b304 <clock_supported@plt+0x700c>
  40b288:	mov	w8, #0x7                   	// #7
  40b28c:	stur	w8, [x29, #-92]
  40b290:	ldur	w8, [x29, #-52]
  40b294:	stur	w8, [x29, #-96]
  40b298:	stur	wzr, [x29, #-100]
  40b29c:	ldur	w0, [x29, #-100]
  40b2a0:	bl	403a28 <log_get_max_level_realm@plt>
  40b2a4:	ldur	w8, [x29, #-92]
  40b2a8:	and	w8, w8, #0x7
  40b2ac:	cmp	w0, w8
  40b2b0:	b.lt	40b2e8 <clock_supported@plt+0x6ff0>  // b.tstop
  40b2b4:	ldur	w8, [x29, #-100]
  40b2b8:	ldur	w9, [x29, #-92]
  40b2bc:	orr	w0, w9, w8, lsl #10
  40b2c0:	ldur	w1, [x29, #-96]
  40b2c4:	ldr	x2, [sp, #72]
  40b2c8:	mov	w3, #0x2c8                 	// #712
  40b2cc:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40b2d0:	add	x4, x4, #0xe28
  40b2d4:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40b2d8:	add	x5, x5, #0xe36
  40b2dc:	bl	403a38 <log_internal_realm@plt>
  40b2e0:	str	w0, [sp, #68]
  40b2e4:	b	40b2fc <clock_supported@plt+0x7004>
  40b2e8:	ldur	w0, [x29, #-96]
  40b2ec:	bl	403a48 <abs@plt>
  40b2f0:	mov	w8, wzr
  40b2f4:	subs	w8, w8, w0, uxtb
  40b2f8:	str	w8, [sp, #68]
  40b2fc:	ldr	w8, [sp, #68]
  40b300:	str	w8, [sp, #104]
  40b304:	ldur	x8, [x29, #-80]
  40b308:	cbz	x8, 40b350 <clock_supported@plt+0x7058>
  40b30c:	ldur	x0, [x29, #-72]
  40b310:	ldur	x2, [x29, #-80]
  40b314:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b318:	add	x1, x1, #0xe5f
  40b31c:	adrp	x3, 412000 <clock_supported@plt+0xdd08>
  40b320:	add	x3, x3, #0xe62
  40b324:	mov	x8, xzr
  40b328:	mov	x4, x8
  40b32c:	bl	4040a8 <strjoin_real@plt>
  40b330:	stur	x0, [x29, #-88]
  40b334:	ldur	x8, [x29, #-88]
  40b338:	cbnz	x8, 40b350 <clock_supported@plt+0x7058>
  40b33c:	mov	w8, #0xfffffff4            	// #-12
  40b340:	stur	w8, [x29, #-4]
  40b344:	mov	w8, #0x1                   	// #1
  40b348:	stur	w8, [x29, #-64]
  40b34c:	b	40b454 <clock_supported@plt+0x715c>
  40b350:	ldur	w8, [x29, #-36]
  40b354:	cmp	w8, #0x0
  40b358:	cset	w8, gt
  40b35c:	tbnz	w8, #0, 40b3e4 <clock_supported@plt+0x70ec>
  40b360:	ldur	x0, [x29, #-32]
  40b364:	ldur	x8, [x29, #-88]
  40b368:	str	x0, [sp, #56]
  40b36c:	str	x8, [sp, #48]
  40b370:	cbz	x8, 40b380 <clock_supported@plt+0x7088>
  40b374:	ldr	x8, [sp, #48]
  40b378:	str	x8, [sp, #40]
  40b37c:	b	40b388 <clock_supported@plt+0x7090>
  40b380:	ldur	x8, [x29, #-72]
  40b384:	str	x8, [sp, #40]
  40b388:	ldr	x8, [sp, #40]
  40b38c:	ldur	x9, [x29, #-48]
  40b390:	ldursw	x10, [x29, #-60]
  40b394:	mov	x11, #0x20                  	// #32
  40b398:	mul	x10, x11, x10
  40b39c:	add	x9, x9, x10
  40b3a0:	ldr	w0, [x9, #4]
  40b3a4:	add	x1, sp, #0x57
  40b3a8:	mov	w2, #0x3                   	// #3
  40b3ac:	str	x8, [sp, #32]
  40b3b0:	bl	403b98 <format_ifname_full@plt>
  40b3b4:	ldr	x8, [sp, #56]
  40b3b8:	str	x0, [sp, #24]
  40b3bc:	mov	x0, x8
  40b3c0:	mov	x9, xzr
  40b3c4:	mov	x1, x9
  40b3c8:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  40b3cc:	add	x2, x2, #0xddd
  40b3d0:	ldr	x3, [sp, #32]
  40b3d4:	ldr	x4, [sp, #24]
  40b3d8:	bl	403fe8 <table_add_cell_stringf@plt>
  40b3dc:	stur	w0, [x29, #-52]
  40b3e0:	b	40b42c <clock_supported@plt+0x7134>
  40b3e4:	ldur	x0, [x29, #-32]
  40b3e8:	ldur	x8, [x29, #-88]
  40b3ec:	str	x0, [sp, #16]
  40b3f0:	str	x8, [sp, #8]
  40b3f4:	cbz	x8, 40b404 <clock_supported@plt+0x710c>
  40b3f8:	ldr	x8, [sp, #8]
  40b3fc:	str	x8, [sp]
  40b400:	b	40b40c <clock_supported@plt+0x7114>
  40b404:	ldur	x8, [x29, #-72]
  40b408:	str	x8, [sp]
  40b40c:	ldr	x8, [sp]
  40b410:	ldr	x0, [sp, #16]
  40b414:	mov	x9, xzr
  40b418:	mov	x1, x9
  40b41c:	mov	w2, #0x1                   	// #1
  40b420:	mov	x3, x8
  40b424:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40b428:	stur	w0, [x29, #-52]
  40b42c:	ldur	w8, [x29, #-52]
  40b430:	cmp	w8, #0x0
  40b434:	cset	w8, ge  // ge = tcont
  40b438:	tbnz	w8, #0, 40b450 <clock_supported@plt+0x7158>
  40b43c:	ldur	w8, [x29, #-52]
  40b440:	stur	w8, [x29, #-4]
  40b444:	mov	w8, #0x1                   	// #1
  40b448:	stur	w8, [x29, #-64]
  40b44c:	b	40b454 <clock_supported@plt+0x715c>
  40b450:	stur	wzr, [x29, #-64]
  40b454:	sub	x0, x29, #0x58
  40b458:	bl	404a10 <clock_supported@plt+0x718>
  40b45c:	sub	x0, x29, #0x50
  40b460:	bl	404a10 <clock_supported@plt+0x718>
  40b464:	sub	x0, x29, #0x48
  40b468:	bl	404a10 <clock_supported@plt+0x718>
  40b46c:	ldur	w8, [x29, #-64]
  40b470:	cmp	w8, #0x0
  40b474:	cset	w8, eq  // eq = none
  40b478:	eor	w8, w8, #0x1
  40b47c:	tbnz	w8, #0, 40b4a0 <clock_supported@plt+0x71a8>
  40b480:	b	40b484 <clock_supported@plt+0x718c>
  40b484:	ldur	w8, [x29, #-60]
  40b488:	add	w8, w8, #0x1
  40b48c:	stur	w8, [x29, #-60]
  40b490:	b	40b154 <clock_supported@plt+0x6e5c>
  40b494:	stur	wzr, [x29, #-4]
  40b498:	mov	w8, #0x1                   	// #1
  40b49c:	stur	w8, [x29, #-64]
  40b4a0:	sub	x0, x29, #0x30
  40b4a4:	bl	404a10 <clock_supported@plt+0x718>
  40b4a8:	ldur	w0, [x29, #-4]
  40b4ac:	ldp	x29, x30, [sp, #208]
  40b4b0:	add	sp, sp, #0xe0
  40b4b4:	ret
  40b4b8:	sub	sp, sp, #0x50
  40b4bc:	stp	x29, x30, [sp, #64]
  40b4c0:	add	x29, sp, #0x40
  40b4c4:	stur	x0, [x29, #-16]
  40b4c8:	stur	x1, [x29, #-24]
  40b4cc:	str	x2, [sp, #32]
  40b4d0:	ldr	x0, [sp, #32]
  40b4d4:	bl	40c024 <clock_supported@plt+0x7d2c>
  40b4d8:	tbnz	w0, #0, 40b4e0 <clock_supported@plt+0x71e8>
  40b4dc:	b	40b4e8 <clock_supported@plt+0x71f0>
  40b4e0:	stur	wzr, [x29, #-4]
  40b4e4:	b	40b5b4 <clock_supported@plt+0x72bc>
  40b4e8:	ldr	x8, [sp, #32]
  40b4ec:	str	x8, [sp, #24]
  40b4f0:	ldr	x8, [sp, #24]
  40b4f4:	mov	w9, #0x0                   	// #0
  40b4f8:	str	w9, [sp, #16]
  40b4fc:	cbz	x8, 40b514 <clock_supported@plt+0x721c>
  40b500:	ldr	x8, [sp, #24]
  40b504:	ldr	x8, [x8]
  40b508:	cmp	x8, #0x0
  40b50c:	cset	w9, ne  // ne = any
  40b510:	str	w9, [sp, #16]
  40b514:	ldr	w8, [sp, #16]
  40b518:	tbnz	w8, #0, 40b520 <clock_supported@plt+0x7228>
  40b51c:	b	40b5b0 <clock_supported@plt+0x72b8>
  40b520:	ldur	x0, [x29, #-16]
  40b524:	ldr	x8, [sp, #24]
  40b528:	ldr	x9, [sp, #32]
  40b52c:	cmp	x8, x9
  40b530:	str	x0, [sp, #8]
  40b534:	b.ne	40b544 <clock_supported@plt+0x724c>  // b.any
  40b538:	ldur	x8, [x29, #-24]
  40b53c:	str	x8, [sp]
  40b540:	b	40b550 <clock_supported@plt+0x7258>
  40b544:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40b548:	add	x8, x8, #0x6c7
  40b54c:	str	x8, [sp]
  40b550:	ldr	x8, [sp]
  40b554:	ldr	x9, [sp, #24]
  40b558:	ldr	x5, [x9]
  40b55c:	ldr	x0, [sp, #8]
  40b560:	mov	w10, wzr
  40b564:	mov	w1, w10
  40b568:	mov	w10, #0x1                   	// #1
  40b56c:	mov	w2, w10
  40b570:	mov	x3, x8
  40b574:	mov	w4, w10
  40b578:	mov	w6, #0x18                  	// #24
  40b57c:	bl	403b08 <table_add_many_internal@plt>
  40b580:	str	w0, [sp, #20]
  40b584:	ldr	w10, [sp, #20]
  40b588:	cmp	w10, #0x0
  40b58c:	cset	w10, ge  // ge = tcont
  40b590:	tbnz	w10, #0, 40b5a0 <clock_supported@plt+0x72a8>
  40b594:	ldr	w8, [sp, #20]
  40b598:	stur	w8, [x29, #-4]
  40b59c:	b	40b5b4 <clock_supported@plt+0x72bc>
  40b5a0:	ldr	x8, [sp, #24]
  40b5a4:	add	x8, x8, #0x8
  40b5a8:	str	x8, [sp, #24]
  40b5ac:	b	40b4f0 <clock_supported@plt+0x71f8>
  40b5b0:	stur	wzr, [x29, #-4]
  40b5b4:	ldur	w0, [x29, #-4]
  40b5b8:	ldp	x29, x30, [sp, #64]
  40b5bc:	add	sp, sp, #0x50
  40b5c0:	ret
  40b5c4:	sub	sp, sp, #0x40
  40b5c8:	stp	x29, x30, [sp, #48]
  40b5cc:	add	x29, sp, #0x30
  40b5d0:	mov	x8, #0xffffffffffffffff    	// #-1
  40b5d4:	mov	w9, #0xffffffff            	// #-1
  40b5d8:	stur	x0, [x29, #-8]
  40b5dc:	stur	x1, [x29, #-16]
  40b5e0:	stur	w2, [x29, #-20]
  40b5e4:	str	x3, [sp, #16]
  40b5e8:	ldur	x0, [x29, #-8]
  40b5ec:	ldur	x1, [x29, #-16]
  40b5f0:	ldur	w2, [x29, #-20]
  40b5f4:	ldr	x3, [sp, #16]
  40b5f8:	mov	x4, x8
  40b5fc:	mov	x5, x8
  40b600:	mov	w6, w9
  40b604:	mov	w7, w9
  40b608:	mov	x8, sp
  40b60c:	str	w9, [x8]
  40b610:	bl	4040c8 <table_add_cell_full@plt>
  40b614:	ldp	x29, x30, [sp, #48]
  40b618:	add	sp, sp, #0x40
  40b61c:	ret
  40b620:	sub	sp, sp, #0x140
  40b624:	stp	x29, x30, [sp, #288]
  40b628:	str	x28, [sp, #304]
  40b62c:	add	x29, sp, #0x120
  40b630:	sub	x8, x29, #0x48
  40b634:	mov	x9, xzr
  40b638:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  40b63c:	add	x10, x10, #0x31c
  40b640:	add	x10, x10, #0x3
  40b644:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40b648:	add	x11, x11, #0xf0e
  40b64c:	adrp	x12, 412000 <clock_supported@plt+0xdd08>
  40b650:	add	x12, x12, #0xe64
  40b654:	str	x0, [x8, #56]
  40b658:	str	x1, [x8, #48]
  40b65c:	stur	w2, [x29, #-28]
  40b660:	stur	w3, [x29, #-32]
  40b664:	str	x4, [x8, #32]
  40b668:	str	x5, [x8, #24]
  40b66c:	str	x9, [x8, #16]
  40b670:	str	x9, [x8, #8]
  40b674:	str	x8, [sp, #56]
  40b678:	str	x10, [sp, #48]
  40b67c:	str	x11, [sp, #40]
  40b680:	str	x12, [sp, #32]
  40b684:	ldr	x8, [sp, #56]
  40b688:	ldr	x9, [x8, #56]
  40b68c:	cmp	x9, #0x0
  40b690:	cset	w10, ne  // ne = any
  40b694:	mov	w11, #0x1                   	// #1
  40b698:	eor	w10, w10, #0x1
  40b69c:	eor	w10, w10, w11
  40b6a0:	eor	w10, w10, w11
  40b6a4:	and	w10, w10, #0x1
  40b6a8:	mov	w0, w10
  40b6ac:	sxtw	x9, w0
  40b6b0:	cbz	x9, 40b6d4 <clock_supported@plt+0x73dc>
  40b6b4:	mov	w8, wzr
  40b6b8:	mov	w0, w8
  40b6bc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b6c0:	add	x1, x1, #0x852
  40b6c4:	ldr	x2, [sp, #48]
  40b6c8:	mov	w3, #0x24b                 	// #587
  40b6cc:	ldr	x4, [sp, #32]
  40b6d0:	bl	403958 <log_assert_failed_realm@plt>
  40b6d4:	ldur	w8, [x29, #-28]
  40b6d8:	cmp	w8, #0x0
  40b6dc:	cset	w8, ge  // ge = tcont
  40b6e0:	mov	w9, #0x1                   	// #1
  40b6e4:	eor	w8, w8, #0x1
  40b6e8:	eor	w8, w8, w9
  40b6ec:	eor	w8, w8, w9
  40b6f0:	and	w8, w8, #0x1
  40b6f4:	mov	w0, w8
  40b6f8:	sxtw	x10, w0
  40b6fc:	cbz	x10, 40b720 <clock_supported@plt+0x7428>
  40b700:	mov	w8, wzr
  40b704:	mov	w0, w8
  40b708:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b70c:	add	x1, x1, #0xec3
  40b710:	ldr	x2, [sp, #48]
  40b714:	mov	w3, #0x24c                 	// #588
  40b718:	ldr	x4, [sp, #32]
  40b71c:	bl	403958 <log_assert_failed_realm@plt>
  40b720:	mov	w8, #0x0                   	// #0
  40b724:	sturb	w8, [x29, #-77]
  40b728:	ldur	w8, [x29, #-32]
  40b72c:	cmp	w8, #0x2
  40b730:	str	w8, [sp, #28]
  40b734:	b.eq	40b754 <clock_supported@plt+0x745c>  // b.none
  40b738:	b	40b73c <clock_supported@plt+0x7444>
  40b73c:	ldr	w8, [sp, #28]
  40b740:	cmp	w8, #0xa
  40b744:	cset	w9, eq  // eq = none
  40b748:	eor	w9, w9, #0x1
  40b74c:	tbnz	w9, #0, 40b760 <clock_supported@plt+0x7468>
  40b750:	b	40b754 <clock_supported@plt+0x745c>
  40b754:	mov	w8, #0x1                   	// #1
  40b758:	sturb	w8, [x29, #-77]
  40b75c:	b	40b760 <clock_supported@plt+0x7468>
  40b760:	ldurb	w8, [x29, #-77]
  40b764:	mov	w9, #0x1                   	// #1
  40b768:	and	w8, w8, w9
  40b76c:	sturb	w8, [x29, #-78]
  40b770:	ldurb	w8, [x29, #-78]
  40b774:	eor	w8, w8, #0x1
  40b778:	eor	w8, w8, w9
  40b77c:	eor	w8, w8, w9
  40b780:	and	w8, w8, #0x1
  40b784:	mov	w0, w8
  40b788:	sxtw	x10, w0
  40b78c:	cbz	x10, 40b7b0 <clock_supported@plt+0x74b8>
  40b790:	mov	w8, wzr
  40b794:	mov	w0, w8
  40b798:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b79c:	add	x1, x1, #0xed0
  40b7a0:	ldr	x2, [sp, #48]
  40b7a4:	mov	w3, #0x24d                 	// #589
  40b7a8:	ldr	x4, [sp, #32]
  40b7ac:	bl	403958 <log_assert_failed_realm@plt>
  40b7b0:	ldr	x8, [sp, #56]
  40b7b4:	ldr	x9, [x8, #32]
  40b7b8:	cmp	x9, #0x0
  40b7bc:	cset	w10, ne  // ne = any
  40b7c0:	mov	w11, #0x1                   	// #1
  40b7c4:	eor	w10, w10, #0x1
  40b7c8:	eor	w10, w10, w11
  40b7cc:	eor	w10, w10, w11
  40b7d0:	and	w10, w10, #0x1
  40b7d4:	mov	w0, w10
  40b7d8:	sxtw	x9, w0
  40b7dc:	cbz	x9, 40b800 <clock_supported@plt+0x7508>
  40b7e0:	mov	w8, wzr
  40b7e4:	mov	w0, w8
  40b7e8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b7ec:	add	x1, x1, #0xef2
  40b7f0:	ldr	x2, [sp, #48]
  40b7f4:	mov	w3, #0x24e                 	// #590
  40b7f8:	ldr	x4, [sp, #32]
  40b7fc:	bl	403958 <log_assert_failed_realm@plt>
  40b800:	ldr	x8, [sp, #56]
  40b804:	ldr	x9, [x8, #24]
  40b808:	cmp	x9, #0x0
  40b80c:	cset	w10, ne  // ne = any
  40b810:	mov	w11, #0x1                   	// #1
  40b814:	eor	w10, w10, #0x1
  40b818:	eor	w10, w10, w11
  40b81c:	eor	w10, w10, w11
  40b820:	and	w10, w10, #0x1
  40b824:	mov	w0, w10
  40b828:	sxtw	x9, w0
  40b82c:	cbz	x9, 40b850 <clock_supported@plt+0x7558>
  40b830:	mov	w8, wzr
  40b834:	mov	w0, w8
  40b838:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40b83c:	add	x1, x1, #0xefa
  40b840:	ldr	x2, [sp, #48]
  40b844:	mov	w3, #0x24f                 	// #591
  40b848:	ldr	x4, [sp, #32]
  40b84c:	bl	403958 <log_assert_failed_realm@plt>
  40b850:	ldr	x8, [sp, #56]
  40b854:	ldr	x0, [x8, #56]
  40b858:	ldur	w3, [x29, #-28]
  40b85c:	ldur	w4, [x29, #-32]
  40b860:	sub	x1, x29, #0x38
  40b864:	mov	w2, #0x1e                  	// #30
  40b868:	bl	4040d8 <sd_rtnl_message_new_neigh@plt>
  40b86c:	stur	w0, [x29, #-76]
  40b870:	ldur	w9, [x29, #-76]
  40b874:	cmp	w9, #0x0
  40b878:	cset	w9, ge  // ge = tcont
  40b87c:	tbnz	w9, #0, 40b894 <clock_supported@plt+0x759c>
  40b880:	ldur	w8, [x29, #-76]
  40b884:	stur	w8, [x29, #-4]
  40b888:	mov	w8, #0x1                   	// #1
  40b88c:	stur	w8, [x29, #-84]
  40b890:	b	40be24 <clock_supported@plt+0x7b2c>
  40b894:	ldr	x8, [sp, #56]
  40b898:	ldr	x0, [x8, #16]
  40b89c:	mov	w1, #0x1                   	// #1
  40b8a0:	bl	403c08 <sd_netlink_message_request_dump@plt>
  40b8a4:	stur	w0, [x29, #-76]
  40b8a8:	ldur	w9, [x29, #-76]
  40b8ac:	cmp	w9, #0x0
  40b8b0:	cset	w9, ge  // ge = tcont
  40b8b4:	tbnz	w9, #0, 40b8cc <clock_supported@plt+0x75d4>
  40b8b8:	ldur	w8, [x29, #-76]
  40b8bc:	stur	w8, [x29, #-4]
  40b8c0:	mov	w8, #0x1                   	// #1
  40b8c4:	stur	w8, [x29, #-84]
  40b8c8:	b	40be24 <clock_supported@plt+0x7b2c>
  40b8cc:	ldr	x8, [sp, #56]
  40b8d0:	ldr	x0, [x8, #56]
  40b8d4:	ldr	x1, [x8, #16]
  40b8d8:	mov	x9, xzr
  40b8dc:	mov	x2, x9
  40b8e0:	sub	x3, x29, #0x40
  40b8e4:	bl	403c18 <sd_netlink_call@plt>
  40b8e8:	stur	w0, [x29, #-76]
  40b8ec:	ldur	w10, [x29, #-76]
  40b8f0:	cmp	w10, #0x0
  40b8f4:	cset	w10, ge  // ge = tcont
  40b8f8:	tbnz	w10, #0, 40b910 <clock_supported@plt+0x7618>
  40b8fc:	ldur	w8, [x29, #-76]
  40b900:	stur	w8, [x29, #-4]
  40b904:	mov	w8, #0x1                   	// #1
  40b908:	stur	w8, [x29, #-84]
  40b90c:	b	40be24 <clock_supported@plt+0x7b2c>
  40b910:	ldr	x8, [sp, #56]
  40b914:	ldr	x9, [x8, #8]
  40b918:	str	x9, [x8]
  40b91c:	ldr	x8, [sp, #56]
  40b920:	ldr	x9, [x8]
  40b924:	cbz	x9, 40be14 <clock_supported@plt+0x7b1c>
  40b928:	stur	xzr, [x29, #-104]
  40b92c:	stur	xzr, [x29, #-96]
  40b930:	sub	x8, x29, #0x70
  40b934:	stur	wzr, [x29, #-112]
  40b938:	mov	w9, #0x0                   	// #0
  40b93c:	strh	w9, [x8, #4]
  40b940:	ldr	x8, [sp, #56]
  40b944:	ldr	x0, [x8]
  40b948:	bl	4040e8 <sd_netlink_message_get_errno@plt>
  40b94c:	stur	w0, [x29, #-76]
  40b950:	ldur	w9, [x29, #-76]
  40b954:	cmp	w9, #0x0
  40b958:	cset	w9, ge  // ge = tcont
  40b95c:	tbnz	w9, #0, 40b9dc <clock_supported@plt+0x76e4>
  40b960:	mov	w8, #0x3                   	// #3
  40b964:	stur	w8, [x29, #-128]
  40b968:	ldur	w8, [x29, #-76]
  40b96c:	stur	w8, [x29, #-132]
  40b970:	stur	wzr, [x29, #-136]
  40b974:	ldur	w0, [x29, #-136]
  40b978:	bl	403a28 <log_get_max_level_realm@plt>
  40b97c:	ldur	w8, [x29, #-128]
  40b980:	and	w8, w8, #0x7
  40b984:	cmp	w0, w8
  40b988:	b.lt	40b9bc <clock_supported@plt+0x76c4>  // b.tstop
  40b98c:	ldur	w8, [x29, #-136]
  40b990:	ldur	w9, [x29, #-128]
  40b994:	orr	w0, w9, w8, lsl #10
  40b998:	ldur	w1, [x29, #-132]
  40b99c:	ldr	x2, [sp, #48]
  40b9a0:	mov	w3, #0x265                 	// #613
  40b9a4:	ldr	x4, [sp, #40]
  40b9a8:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40b9ac:	add	x5, x5, #0xf26
  40b9b0:	bl	403a38 <log_internal_realm@plt>
  40b9b4:	str	w0, [sp, #24]
  40b9b8:	b	40b9d0 <clock_supported@plt+0x76d8>
  40b9bc:	ldur	w0, [x29, #-132]
  40b9c0:	bl	403a48 <abs@plt>
  40b9c4:	mov	w8, wzr
  40b9c8:	subs	w8, w8, w0, uxtb
  40b9cc:	str	w8, [sp, #24]
  40b9d0:	ldr	w8, [sp, #24]
  40b9d4:	stur	w8, [x29, #-140]
  40b9d8:	b	40bdfc <clock_supported@plt+0x7b04>
  40b9dc:	ldr	x8, [sp, #56]
  40b9e0:	ldr	x0, [x8]
  40b9e4:	sub	x1, x29, #0x72
  40b9e8:	bl	403cd8 <sd_netlink_message_get_type@plt>
  40b9ec:	stur	w0, [x29, #-76]
  40b9f0:	ldur	w9, [x29, #-76]
  40b9f4:	cmp	w9, #0x0
  40b9f8:	cset	w9, ge  // ge = tcont
  40b9fc:	tbnz	w9, #0, 40ba7c <clock_supported@plt+0x7784>
  40ba00:	mov	w8, #0x3                   	// #3
  40ba04:	str	w8, [sp, #144]
  40ba08:	ldur	w8, [x29, #-76]
  40ba0c:	str	w8, [sp, #140]
  40ba10:	str	wzr, [sp, #136]
  40ba14:	ldr	w0, [sp, #136]
  40ba18:	bl	403a28 <log_get_max_level_realm@plt>
  40ba1c:	ldr	w8, [sp, #144]
  40ba20:	and	w8, w8, #0x7
  40ba24:	cmp	w0, w8
  40ba28:	b.lt	40ba5c <clock_supported@plt+0x7764>  // b.tstop
  40ba2c:	ldr	w8, [sp, #136]
  40ba30:	ldr	w9, [sp, #144]
  40ba34:	orr	w0, w9, w8, lsl #10
  40ba38:	ldr	w1, [sp, #140]
  40ba3c:	ldr	x2, [sp, #48]
  40ba40:	mov	w3, #0x26b                 	// #619
  40ba44:	ldr	x4, [sp, #40]
  40ba48:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40ba4c:	add	x5, x5, #0xf34
  40ba50:	bl	403a38 <log_internal_realm@plt>
  40ba54:	str	w0, [sp, #20]
  40ba58:	b	40ba70 <clock_supported@plt+0x7778>
  40ba5c:	ldr	w0, [sp, #140]
  40ba60:	bl	403a48 <abs@plt>
  40ba64:	mov	w8, wzr
  40ba68:	subs	w8, w8, w0, uxtb
  40ba6c:	str	w8, [sp, #20]
  40ba70:	ldr	w8, [sp, #20]
  40ba74:	str	w8, [sp, #132]
  40ba78:	b	40bdfc <clock_supported@plt+0x7b04>
  40ba7c:	ldurh	w8, [x29, #-114]
  40ba80:	cmp	w8, #0x1c
  40ba84:	b.eq	40bb00 <clock_supported@plt+0x7808>  // b.none
  40ba88:	mov	w8, #0x3                   	// #3
  40ba8c:	str	w8, [sp, #128]
  40ba90:	str	wzr, [sp, #124]
  40ba94:	str	wzr, [sp, #120]
  40ba98:	ldr	w0, [sp, #120]
  40ba9c:	bl	403a28 <log_get_max_level_realm@plt>
  40baa0:	ldr	w8, [sp, #128]
  40baa4:	and	w8, w8, #0x7
  40baa8:	cmp	w0, w8
  40baac:	b.lt	40bae0 <clock_supported@plt+0x77e8>  // b.tstop
  40bab0:	ldr	w8, [sp, #120]
  40bab4:	ldr	w9, [sp, #128]
  40bab8:	orr	w0, w9, w8, lsl #10
  40babc:	ldr	w1, [sp, #124]
  40bac0:	ldr	x2, [sp, #48]
  40bac4:	mov	w3, #0x270                 	// #624
  40bac8:	ldr	x4, [sp, #40]
  40bacc:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40bad0:	add	x5, x5, #0xf4b
  40bad4:	bl	403a38 <log_internal_realm@plt>
  40bad8:	str	w0, [sp, #16]
  40badc:	b	40baf4 <clock_supported@plt+0x77fc>
  40bae0:	ldr	w0, [sp, #124]
  40bae4:	bl	403a48 <abs@plt>
  40bae8:	mov	w8, wzr
  40baec:	subs	w8, w8, w0, uxtb
  40baf0:	str	w8, [sp, #16]
  40baf4:	ldr	w8, [sp, #16]
  40baf8:	str	w8, [sp, #116]
  40bafc:	b	40bdfc <clock_supported@plt+0x7b04>
  40bb00:	ldr	x8, [sp, #56]
  40bb04:	ldr	x0, [x8]
  40bb08:	sub	x1, x29, #0x7c
  40bb0c:	bl	4040f8 <sd_rtnl_message_neigh_get_family@plt>
  40bb10:	stur	w0, [x29, #-76]
  40bb14:	ldur	w9, [x29, #-76]
  40bb18:	cmp	w9, #0x0
  40bb1c:	cset	w9, ge  // ge = tcont
  40bb20:	tbnz	w9, #0, 40bba0 <clock_supported@plt+0x78a8>
  40bb24:	mov	w8, #0x3                   	// #3
  40bb28:	str	w8, [sp, #112]
  40bb2c:	ldur	w8, [x29, #-76]
  40bb30:	str	w8, [sp, #108]
  40bb34:	str	wzr, [sp, #104]
  40bb38:	ldr	w0, [sp, #104]
  40bb3c:	bl	403a28 <log_get_max_level_realm@plt>
  40bb40:	ldr	w8, [sp, #112]
  40bb44:	and	w8, w8, #0x7
  40bb48:	cmp	w0, w8
  40bb4c:	b.lt	40bb80 <clock_supported@plt+0x7888>  // b.tstop
  40bb50:	ldr	w8, [sp, #104]
  40bb54:	ldr	w9, [sp, #112]
  40bb58:	orr	w0, w9, w8, lsl #10
  40bb5c:	ldr	w1, [sp, #108]
  40bb60:	ldr	x2, [sp, #48]
  40bb64:	mov	w3, #0x276                 	// #630
  40bb68:	ldr	x4, [sp, #40]
  40bb6c:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40bb70:	add	x5, x5, #0xf64
  40bb74:	bl	403a38 <log_internal_realm@plt>
  40bb78:	str	w0, [sp, #12]
  40bb7c:	b	40bb94 <clock_supported@plt+0x789c>
  40bb80:	ldr	w0, [sp, #108]
  40bb84:	bl	403a48 <abs@plt>
  40bb88:	mov	w8, wzr
  40bb8c:	subs	w8, w8, w0, uxtb
  40bb90:	str	w8, [sp, #12]
  40bb94:	ldr	w8, [sp, #12]
  40bb98:	str	w8, [sp, #100]
  40bb9c:	b	40bdfc <clock_supported@plt+0x7b04>
  40bba0:	ldur	w8, [x29, #-124]
  40bba4:	ldur	w9, [x29, #-32]
  40bba8:	cmp	w8, w9
  40bbac:	b.eq	40bc28 <clock_supported@plt+0x7930>  // b.none
  40bbb0:	mov	w8, #0x3                   	// #3
  40bbb4:	str	w8, [sp, #96]
  40bbb8:	str	wzr, [sp, #92]
  40bbbc:	str	wzr, [sp, #88]
  40bbc0:	ldr	w0, [sp, #88]
  40bbc4:	bl	403a28 <log_get_max_level_realm@plt>
  40bbc8:	ldr	w8, [sp, #96]
  40bbcc:	and	w8, w8, #0x7
  40bbd0:	cmp	w0, w8
  40bbd4:	b.lt	40bc08 <clock_supported@plt+0x7910>  // b.tstop
  40bbd8:	ldr	w8, [sp, #88]
  40bbdc:	ldr	w9, [sp, #96]
  40bbe0:	orr	w0, w9, w8, lsl #10
  40bbe4:	ldr	w1, [sp, #92]
  40bbe8:	ldr	x2, [sp, #48]
  40bbec:	mov	w3, #0x27b                 	// #635
  40bbf0:	ldr	x4, [sp, #40]
  40bbf4:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40bbf8:	add	x5, x5, #0xf7d
  40bbfc:	bl	403a38 <log_internal_realm@plt>
  40bc00:	str	w0, [sp, #8]
  40bc04:	b	40bc1c <clock_supported@plt+0x7924>
  40bc08:	ldr	w0, [sp, #92]
  40bc0c:	bl	403a48 <abs@plt>
  40bc10:	mov	w8, wzr
  40bc14:	subs	w8, w8, w0, uxtb
  40bc18:	str	w8, [sp, #8]
  40bc1c:	ldr	w8, [sp, #8]
  40bc20:	str	w8, [sp, #84]
  40bc24:	b	40bdfc <clock_supported@plt+0x7b04>
  40bc28:	ldr	x8, [sp, #56]
  40bc2c:	ldr	x0, [x8]
  40bc30:	sub	x1, x29, #0x78
  40bc34:	bl	404108 <sd_rtnl_message_neigh_get_ifindex@plt>
  40bc38:	stur	w0, [x29, #-76]
  40bc3c:	ldur	w9, [x29, #-76]
  40bc40:	cmp	w9, #0x0
  40bc44:	cset	w9, ge  // ge = tcont
  40bc48:	tbnz	w9, #0, 40bcc8 <clock_supported@plt+0x79d0>
  40bc4c:	mov	w8, #0x3                   	// #3
  40bc50:	str	w8, [sp, #80]
  40bc54:	ldur	w8, [x29, #-76]
  40bc58:	str	w8, [sp, #76]
  40bc5c:	str	wzr, [sp, #72]
  40bc60:	ldr	w0, [sp, #72]
  40bc64:	bl	403a28 <log_get_max_level_realm@plt>
  40bc68:	ldr	w8, [sp, #80]
  40bc6c:	and	w8, w8, #0x7
  40bc70:	cmp	w0, w8
  40bc74:	b.lt	40bca8 <clock_supported@plt+0x79b0>  // b.tstop
  40bc78:	ldr	w8, [sp, #72]
  40bc7c:	ldr	w9, [sp, #80]
  40bc80:	orr	w0, w9, w8, lsl #10
  40bc84:	ldr	w1, [sp, #76]
  40bc88:	ldr	x2, [sp, #48]
  40bc8c:	mov	w3, #0x281                 	// #641
  40bc90:	ldr	x4, [sp, #40]
  40bc94:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40bc98:	add	x5, x5, #0xf93
  40bc9c:	bl	403a38 <log_internal_realm@plt>
  40bca0:	str	w0, [sp, #4]
  40bca4:	b	40bcbc <clock_supported@plt+0x79c4>
  40bca8:	ldr	w0, [sp, #76]
  40bcac:	bl	403a48 <abs@plt>
  40bcb0:	mov	w8, wzr
  40bcb4:	subs	w8, w8, w0, uxtb
  40bcb8:	str	w8, [sp, #4]
  40bcbc:	ldr	w8, [sp, #4]
  40bcc0:	str	w8, [sp, #68]
  40bcc4:	b	40bdfc <clock_supported@plt+0x7b04>
  40bcc8:	ldur	w8, [x29, #-28]
  40bccc:	cmp	w8, #0x0
  40bcd0:	cset	w8, le
  40bcd4:	tbnz	w8, #0, 40bcec <clock_supported@plt+0x79f4>
  40bcd8:	ldur	w8, [x29, #-120]
  40bcdc:	ldur	w9, [x29, #-28]
  40bce0:	cmp	w8, w9
  40bce4:	b.eq	40bcec <clock_supported@plt+0x79f4>  // b.none
  40bce8:	b	40bdfc <clock_supported@plt+0x7b04>
  40bcec:	ldur	w8, [x29, #-124]
  40bcf0:	cmp	w8, #0x2
  40bcf4:	str	w8, [sp]
  40bcf8:	b.eq	40bd10 <clock_supported@plt+0x7a18>  // b.none
  40bcfc:	b	40bd00 <clock_supported@plt+0x7a08>
  40bd00:	ldr	w8, [sp]
  40bd04:	cmp	w8, #0xa
  40bd08:	b.eq	40bd40 <clock_supported@plt+0x7a48>  // b.none
  40bd0c:	b	40bd70 <clock_supported@plt+0x7a78>
  40bd10:	ldr	x8, [sp, #56]
  40bd14:	ldr	x0, [x8]
  40bd18:	mov	w1, #0x1                   	// #1
  40bd1c:	sub	x2, x29, #0x68
  40bd20:	bl	403e88 <sd_netlink_message_read_in_addr@plt>
  40bd24:	stur	w0, [x29, #-76]
  40bd28:	ldur	w9, [x29, #-76]
  40bd2c:	cmp	w9, #0x0
  40bd30:	cset	w9, ge  // ge = tcont
  40bd34:	tbnz	w9, #0, 40bd3c <clock_supported@plt+0x7a44>
  40bd38:	b	40bdfc <clock_supported@plt+0x7b04>
  40bd3c:	b	40bd74 <clock_supported@plt+0x7a7c>
  40bd40:	ldr	x8, [sp, #56]
  40bd44:	ldr	x0, [x8]
  40bd48:	mov	w1, #0x1                   	// #1
  40bd4c:	sub	x2, x29, #0x68
  40bd50:	bl	403e98 <sd_netlink_message_read_in6_addr@plt>
  40bd54:	stur	w0, [x29, #-76]
  40bd58:	ldur	w9, [x29, #-76]
  40bd5c:	cmp	w9, #0x0
  40bd60:	cset	w9, ge  // ge = tcont
  40bd64:	tbnz	w9, #0, 40bd6c <clock_supported@plt+0x7a74>
  40bd68:	b	40bdfc <clock_supported@plt+0x7b04>
  40bd6c:	b	40bd74 <clock_supported@plt+0x7a7c>
  40bd70:	b	40bdfc <clock_supported@plt+0x7b04>
  40bd74:	ldur	w0, [x29, #-124]
  40bd78:	ldr	x8, [sp, #56]
  40bd7c:	ldr	x2, [x8, #32]
  40bd80:	sub	x1, x29, #0x68
  40bd84:	bl	404118 <in_addr_equal@plt>
  40bd88:	cbnz	w0, 40bd90 <clock_supported@plt+0x7a98>
  40bd8c:	b	40bdfc <clock_supported@plt+0x7b04>
  40bd90:	ldr	x8, [sp, #56]
  40bd94:	ldr	x0, [x8]
  40bd98:	mov	w1, #0x2                   	// #2
  40bd9c:	mov	x2, #0x6                   	// #6
  40bda0:	sub	x3, x29, #0x70
  40bda4:	bl	403d68 <sd_netlink_message_read@plt>
  40bda8:	stur	w0, [x29, #-76]
  40bdac:	ldur	w9, [x29, #-76]
  40bdb0:	cmp	w9, #0x0
  40bdb4:	cset	w9, ge  // ge = tcont
  40bdb8:	tbnz	w9, #0, 40bdc0 <clock_supported@plt+0x7ac8>
  40bdbc:	b	40bdfc <clock_supported@plt+0x7b04>
  40bdc0:	ldr	x8, [sp, #56]
  40bdc4:	ldr	x0, [x8, #48]
  40bdc8:	ldr	x2, [x8, #24]
  40bdcc:	sub	x1, x29, #0x70
  40bdd0:	bl	40be48 <clock_supported@plt+0x7b50>
  40bdd4:	stur	w0, [x29, #-76]
  40bdd8:	ldur	w9, [x29, #-76]
  40bddc:	cmp	w9, #0x0
  40bde0:	cset	w9, ge  // ge = tcont
  40bde4:	tbnz	w9, #0, 40bdec <clock_supported@plt+0x7af4>
  40bde8:	b	40bdfc <clock_supported@plt+0x7b04>
  40bdec:	stur	wzr, [x29, #-4]
  40bdf0:	mov	w8, #0x1                   	// #1
  40bdf4:	stur	w8, [x29, #-84]
  40bdf8:	b	40be24 <clock_supported@plt+0x7b2c>
  40bdfc:	ldr	x8, [sp, #56]
  40be00:	ldr	x0, [x8]
  40be04:	bl	403c58 <sd_netlink_message_next@plt>
  40be08:	ldr	x8, [sp, #56]
  40be0c:	str	x0, [x8]
  40be10:	b	40b91c <clock_supported@plt+0x7624>
  40be14:	mov	w8, #0xffffffc3            	// #-61
  40be18:	stur	w8, [x29, #-4]
  40be1c:	mov	w8, #0x1                   	// #1
  40be20:	stur	w8, [x29, #-84]
  40be24:	sub	x0, x29, #0x40
  40be28:	bl	407798 <clock_supported@plt+0x34a0>
  40be2c:	sub	x0, x29, #0x38
  40be30:	bl	407798 <clock_supported@plt+0x34a0>
  40be34:	ldur	w0, [x29, #-4]
  40be38:	ldr	x28, [sp, #304]
  40be3c:	ldp	x29, x30, [sp, #288]
  40be40:	add	sp, sp, #0x140
  40be44:	ret
  40be48:	sub	sp, sp, #0x70
  40be4c:	stp	x29, x30, [sp, #96]
  40be50:	add	x29, sp, #0x60
  40be54:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40be58:	add	x8, x8, #0x31c
  40be5c:	add	x8, x8, #0x3
  40be60:	stur	x0, [x29, #-16]
  40be64:	stur	x1, [x29, #-24]
  40be68:	stur	x2, [x29, #-32]
  40be6c:	str	x8, [sp, #8]
  40be70:	ldur	x8, [x29, #-32]
  40be74:	cmp	x8, #0x0
  40be78:	cset	w9, ne  // ne = any
  40be7c:	mov	w10, #0x1                   	// #1
  40be80:	eor	w9, w9, #0x1
  40be84:	eor	w9, w9, w10
  40be88:	eor	w9, w9, w10
  40be8c:	and	w9, w9, #0x1
  40be90:	mov	w0, w9
  40be94:	sxtw	x8, w0
  40be98:	cbz	x8, 40bec0 <clock_supported@plt+0x7bc8>
  40be9c:	mov	w8, wzr
  40bea0:	mov	w0, w8
  40bea4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40bea8:	add	x1, x1, #0x89b
  40beac:	ldr	x2, [sp, #8]
  40beb0:	mov	w3, #0x224                 	// #548
  40beb4:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40beb8:	add	x4, x4, #0xfad
  40bebc:	bl	403958 <log_assert_failed_realm@plt>
  40bec0:	ldur	x8, [x29, #-16]
  40bec4:	cbnz	x8, 40bed4 <clock_supported@plt+0x7bdc>
  40bec8:	mov	w8, #0xffffffea            	// #-22
  40becc:	stur	w8, [x29, #-4]
  40bed0:	b	40c014 <clock_supported@plt+0x7d1c>
  40bed4:	ldur	x8, [x29, #-24]
  40bed8:	cbnz	x8, 40bee8 <clock_supported@plt+0x7bf0>
  40bedc:	mov	w8, #0xffffffea            	// #-22
  40bee0:	stur	w8, [x29, #-4]
  40bee4:	b	40c014 <clock_supported@plt+0x7d1c>
  40bee8:	ldur	x0, [x29, #-24]
  40beec:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  40bef0:	add	x1, x1, #0x622
  40bef4:	mov	x2, #0x3                   	// #3
  40bef8:	bl	403d48 <memcmp@plt>
  40befc:	cbnz	w0, 40bf0c <clock_supported@plt+0x7c14>
  40bf00:	mov	w8, #0xffffffea            	// #-22
  40bf04:	stur	w8, [x29, #-4]
  40bf08:	b	40c014 <clock_supported@plt+0x7d1c>
  40bf0c:	ldur	x8, [x29, #-24]
  40bf10:	ldrb	w3, [x8]
  40bf14:	ldur	x8, [x29, #-24]
  40bf18:	ldrb	w4, [x8, #1]
  40bf1c:	ldur	x8, [x29, #-24]
  40bf20:	ldrb	w5, [x8, #2]
  40bf24:	ldur	x8, [x29, #-24]
  40bf28:	ldrb	w6, [x8, #3]
  40bf2c:	ldur	x8, [x29, #-24]
  40bf30:	ldrb	w7, [x8, #4]
  40bf34:	ldur	x8, [x29, #-24]
  40bf38:	ldrb	w9, [x8, #5]
  40bf3c:	add	x0, sp, #0x27
  40bf40:	mov	x1, #0x11                  	// #17
  40bf44:	adrp	x2, 412000 <clock_supported@plt+0xdd08>
  40bf48:	add	x2, x2, #0xfe9
  40bf4c:	mov	x8, sp
  40bf50:	str	w9, [x8]
  40bf54:	bl	403c38 <snprintf@plt>
  40bf58:	mov	w1, w0
  40bf5c:	sxtw	x8, w1
  40bf60:	cmp	x8, #0x11
  40bf64:	cset	w9, cc  // cc = lo, ul, last
  40bf68:	mov	w10, #0x1                   	// #1
  40bf6c:	eor	w9, w9, #0x1
  40bf70:	eor	w9, w9, w10
  40bf74:	eor	w9, w9, w10
  40bf78:	and	w9, w9, #0x1
  40bf7c:	mov	w1, w9
  40bf80:	sxtw	x8, w1
  40bf84:	cbz	x8, 40bfac <clock_supported@plt+0x7cb4>
  40bf88:	mov	w8, wzr
  40bf8c:	mov	w0, w8
  40bf90:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40bf94:	add	x1, x1, #0x6
  40bf98:	ldr	x2, [sp, #8]
  40bf9c:	mov	w3, #0x231                 	// #561
  40bfa0:	adrp	x4, 412000 <clock_supported@plt+0xdd08>
  40bfa4:	add	x4, x4, #0xfad
  40bfa8:	bl	403958 <log_assert_failed_realm@plt>
  40bfac:	ldur	x0, [x29, #-16]
  40bfb0:	add	x1, sp, #0x27
  40bfb4:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40bfb8:	add	x2, x2, #0x2e
  40bfbc:	sub	x3, x29, #0x28
  40bfc0:	bl	404128 <sd_hwdb_get@plt>
  40bfc4:	str	w0, [sp, #20]
  40bfc8:	ldr	w8, [sp, #20]
  40bfcc:	cmp	w8, #0x0
  40bfd0:	cset	w8, ge  // ge = tcont
  40bfd4:	tbnz	w8, #0, 40bfe4 <clock_supported@plt+0x7cec>
  40bfd8:	ldr	w8, [sp, #20]
  40bfdc:	stur	w8, [x29, #-4]
  40bfe0:	b	40c014 <clock_supported@plt+0x7d1c>
  40bfe4:	ldur	x0, [x29, #-40]
  40bfe8:	bl	403af8 <strdup@plt>
  40bfec:	str	x0, [sp, #24]
  40bff0:	ldr	x8, [sp, #24]
  40bff4:	cbnz	x8, 40c004 <clock_supported@plt+0x7d0c>
  40bff8:	mov	w8, #0xfffffff4            	// #-12
  40bffc:	stur	w8, [x29, #-4]
  40c000:	b	40c014 <clock_supported@plt+0x7d1c>
  40c004:	ldr	x8, [sp, #24]
  40c008:	ldur	x9, [x29, #-32]
  40c00c:	str	x8, [x9]
  40c010:	stur	wzr, [x29, #-4]
  40c014:	ldur	w0, [x29, #-4]
  40c018:	ldp	x29, x30, [sp, #96]
  40c01c:	add	sp, sp, #0x70
  40c020:	ret
  40c024:	sub	sp, sp, #0x10
  40c028:	str	x0, [sp, #8]
  40c02c:	ldr	x8, [sp, #8]
  40c030:	mov	w9, #0x1                   	// #1
  40c034:	str	w9, [sp, #4]
  40c038:	cbz	x8, 40c054 <clock_supported@plt+0x7d5c>
  40c03c:	ldr	x8, [sp, #8]
  40c040:	ldr	x8, [x8]
  40c044:	cmp	x8, #0x0
  40c048:	cset	w9, ne  // ne = any
  40c04c:	eor	w9, w9, #0x1
  40c050:	str	w9, [sp, #4]
  40c054:	ldr	w8, [sp, #4]
  40c058:	and	w0, w8, #0x1
  40c05c:	add	sp, sp, #0x10
  40c060:	ret
  40c064:	sub	sp, sp, #0x20
  40c068:	str	x0, [sp, #24]
  40c06c:	ldr	x8, [sp, #24]
  40c070:	str	x8, [sp, #16]
  40c074:	cbz	x8, 40c084 <clock_supported@plt+0x7d8c>
  40c078:	ldr	x8, [sp, #16]
  40c07c:	str	x8, [sp, #8]
  40c080:	b	40c090 <clock_supported@plt+0x7d98>
  40c084:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40c088:	add	x8, x8, #0x6c7
  40c08c:	str	x8, [sp, #8]
  40c090:	ldr	x8, [sp, #8]
  40c094:	mov	x0, x8
  40c098:	add	sp, sp, #0x20
  40c09c:	ret
  40c0a0:	sub	sp, sp, #0x20
  40c0a4:	stp	x29, x30, [sp, #16]
  40c0a8:	add	x29, sp, #0x10
  40c0ac:	sturh	w0, [x29, #-2]
  40c0b0:	ldurh	w0, [x29, #-2]
  40c0b4:	bl	40cf68 <clock_supported@plt+0x8c70>
  40c0b8:	ldp	x29, x30, [sp, #16]
  40c0bc:	add	sp, sp, #0x20
  40c0c0:	ret
  40c0c4:	sub	sp, sp, #0x20
  40c0c8:	str	x0, [sp, #24]
  40c0cc:	ldr	x8, [sp, #24]
  40c0d0:	str	x8, [sp, #16]
  40c0d4:	cbz	x8, 40c0e4 <clock_supported@plt+0x7dec>
  40c0d8:	ldr	x8, [sp, #16]
  40c0dc:	str	x8, [sp, #8]
  40c0e0:	b	40c0f0 <clock_supported@plt+0x7df8>
  40c0e4:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40c0e8:	add	x8, x8, #0x312
  40c0ec:	str	x8, [sp, #8]
  40c0f0:	ldr	x8, [sp, #8]
  40c0f4:	mov	x0, x8
  40c0f8:	add	sp, sp, #0x20
  40c0fc:	ret
  40c100:	sub	sp, sp, #0x50
  40c104:	stp	x29, x30, [sp, #64]
  40c108:	add	x29, sp, #0x40
  40c10c:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40c110:	add	x8, x8, #0x31c
  40c114:	add	x8, x8, #0x3
  40c118:	stur	x0, [x29, #-16]
  40c11c:	stur	x1, [x29, #-24]
  40c120:	str	x2, [sp, #32]
  40c124:	str	x8, [sp, #16]
  40c128:	ldur	x8, [x29, #-24]
  40c12c:	cmp	x8, #0x0
  40c130:	cset	w9, ne  // ne = any
  40c134:	mov	w10, #0x1                   	// #1
  40c138:	eor	w9, w9, #0x1
  40c13c:	eor	w9, w9, w10
  40c140:	eor	w9, w9, w10
  40c144:	and	w9, w9, #0x1
  40c148:	mov	w0, w9
  40c14c:	sxtw	x8, w0
  40c150:	cbz	x8, 40c178 <clock_supported@plt+0x7e80>
  40c154:	mov	w8, wzr
  40c158:	mov	w0, w8
  40c15c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40c160:	add	x1, x1, #0x319
  40c164:	ldr	x2, [sp, #16]
  40c168:	mov	w3, #0x3d6                 	// #982
  40c16c:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40c170:	add	x4, x4, #0x320
  40c174:	bl	403958 <log_assert_failed_realm@plt>
  40c178:	ldr	x8, [sp, #32]
  40c17c:	cbz	x8, 40c194 <clock_supported@plt+0x7e9c>
  40c180:	ldr	x8, [sp, #32]
  40c184:	ldr	w9, [x8]
  40c188:	cmp	w9, #0x0
  40c18c:	cset	w9, gt
  40c190:	tbnz	w9, #0, 40c19c <clock_supported@plt+0x7ea4>
  40c194:	stur	wzr, [x29, #-4]
  40c198:	b	40c24c <clock_supported@plt+0x7f54>
  40c19c:	str	wzr, [sp, #28]
  40c1a0:	ldr	x8, [sp, #32]
  40c1a4:	ldr	w9, [sp, #28]
  40c1a8:	mov	w10, w9
  40c1ac:	ldr	w9, [x8, x10, lsl #2]
  40c1b0:	cmp	w9, #0x0
  40c1b4:	cset	w9, le
  40c1b8:	tbnz	w9, #0, 40c248 <clock_supported@plt+0x7f50>
  40c1bc:	ldur	x0, [x29, #-16]
  40c1c0:	ldr	w8, [sp, #28]
  40c1c4:	str	x0, [sp, #8]
  40c1c8:	cbnz	w8, 40c1d8 <clock_supported@plt+0x7ee0>
  40c1cc:	ldur	x8, [x29, #-24]
  40c1d0:	str	x8, [sp]
  40c1d4:	b	40c1e4 <clock_supported@plt+0x7eec>
  40c1d8:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40c1dc:	add	x8, x8, #0x6c7
  40c1e0:	str	x8, [sp]
  40c1e4:	ldr	x8, [sp]
  40c1e8:	ldr	x9, [sp, #32]
  40c1ec:	ldr	w10, [sp, #28]
  40c1f0:	mov	w11, w10
  40c1f4:	ldr	w5, [x9, x11, lsl #2]
  40c1f8:	ldr	x0, [sp, #8]
  40c1fc:	mov	w10, wzr
  40c200:	mov	w1, w10
  40c204:	mov	w2, #0x1                   	// #1
  40c208:	mov	x3, x8
  40c20c:	mov	w4, #0x15                  	// #21
  40c210:	mov	w6, #0x18                  	// #24
  40c214:	bl	403b08 <table_add_many_internal@plt>
  40c218:	str	w0, [sp, #24]
  40c21c:	ldr	w10, [sp, #24]
  40c220:	cmp	w10, #0x0
  40c224:	cset	w10, ge  // ge = tcont
  40c228:	tbnz	w10, #0, 40c238 <clock_supported@plt+0x7f40>
  40c22c:	ldr	w8, [sp, #24]
  40c230:	stur	w8, [x29, #-4]
  40c234:	b	40c24c <clock_supported@plt+0x7f54>
  40c238:	ldr	w8, [sp, #28]
  40c23c:	add	w8, w8, #0x1
  40c240:	str	w8, [sp, #28]
  40c244:	b	40c1a0 <clock_supported@plt+0x7ea8>
  40c248:	stur	wzr, [x29, #-4]
  40c24c:	ldur	w0, [x29, #-4]
  40c250:	ldp	x29, x30, [sp, #64]
  40c254:	add	sp, sp, #0x50
  40c258:	ret
  40c25c:	sub	sp, sp, #0xc0
  40c260:	stp	x29, x30, [sp, #176]
  40c264:	add	x29, sp, #0xb0
  40c268:	mov	x8, xzr
  40c26c:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40c270:	add	x9, x9, #0x6c7
  40c274:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  40c278:	add	x10, x10, #0x31c
  40c27c:	add	x10, x10, #0x3
  40c280:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  40c284:	add	x11, x11, #0x357
  40c288:	stur	x0, [x29, #-16]
  40c28c:	stur	x1, [x29, #-24]
  40c290:	stur	w2, [x29, #-28]
  40c294:	stur	x8, [x29, #-40]
  40c298:	stur	wzr, [x29, #-48]
  40c29c:	str	x9, [sp, #80]
  40c2a0:	str	x10, [sp, #72]
  40c2a4:	str	x11, [sp, #64]
  40c2a8:	ldur	x8, [x29, #-16]
  40c2ac:	cmp	x8, #0x0
  40c2b0:	cset	w9, ne  // ne = any
  40c2b4:	mov	w10, #0x1                   	// #1
  40c2b8:	eor	w9, w9, #0x1
  40c2bc:	eor	w9, w9, w10
  40c2c0:	eor	w9, w9, w10
  40c2c4:	and	w9, w9, #0x1
  40c2c8:	mov	w0, w9
  40c2cc:	sxtw	x8, w0
  40c2d0:	cbz	x8, 40c2f4 <clock_supported@plt+0x7ffc>
  40c2d4:	mov	w8, wzr
  40c2d8:	mov	w0, w8
  40c2dc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40c2e0:	add	x1, x1, #0xdb6
  40c2e4:	ldr	x2, [sp, #72]
  40c2e8:	mov	w3, #0x3a5                 	// #933
  40c2ec:	ldr	x4, [sp, #64]
  40c2f0:	bl	403958 <log_assert_failed_realm@plt>
  40c2f4:	ldur	x8, [x29, #-24]
  40c2f8:	cmp	x8, #0x0
  40c2fc:	cset	w9, ne  // ne = any
  40c300:	mov	w10, #0x1                   	// #1
  40c304:	eor	w9, w9, #0x1
  40c308:	eor	w9, w9, w10
  40c30c:	eor	w9, w9, w10
  40c310:	and	w9, w9, #0x1
  40c314:	mov	w0, w9
  40c318:	sxtw	x8, w0
  40c31c:	cbz	x8, 40c340 <clock_supported@plt+0x8048>
  40c320:	mov	w8, wzr
  40c324:	mov	w0, w8
  40c328:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40c32c:	add	x1, x1, #0x319
  40c330:	ldr	x2, [sp, #72]
  40c334:	mov	w3, #0x3a6                 	// #934
  40c338:	ldr	x4, [sp, #64]
  40c33c:	bl	403958 <log_assert_failed_realm@plt>
  40c340:	ldur	w8, [x29, #-28]
  40c344:	cmp	w8, #0x0
  40c348:	cset	w8, gt
  40c34c:	mov	w9, #0x1                   	// #1
  40c350:	eor	w8, w8, #0x1
  40c354:	eor	w8, w8, w9
  40c358:	eor	w8, w8, w9
  40c35c:	and	w8, w8, #0x1
  40c360:	mov	w0, w8
  40c364:	sxtw	x10, w0
  40c368:	cbz	x10, 40c38c <clock_supported@plt+0x8094>
  40c36c:	mov	w8, wzr
  40c370:	mov	w0, w8
  40c374:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40c378:	add	x1, x1, #0x38b
  40c37c:	ldr	x2, [sp, #72]
  40c380:	mov	w3, #0x3a7                 	// #935
  40c384:	ldr	x4, [sp, #64]
  40c388:	bl	403958 <log_assert_failed_realm@plt>
  40c38c:	ldur	w0, [x29, #-28]
  40c390:	sub	x1, x29, #0x28
  40c394:	bl	40cfbc <clock_supported@plt+0x8cc4>
  40c398:	stur	w0, [x29, #-44]
  40c39c:	ldur	w8, [x29, #-44]
  40c3a0:	mov	w9, #0xfffffffe            	// #-2
  40c3a4:	cmp	w8, w9
  40c3a8:	b.ne	40c3bc <clock_supported@plt+0x80c4>  // b.any
  40c3ac:	stur	wzr, [x29, #-4]
  40c3b0:	mov	w8, #0x1                   	// #1
  40c3b4:	stur	w8, [x29, #-52]
  40c3b8:	b	40c5e8 <clock_supported@plt+0x82f0>
  40c3bc:	ldur	w8, [x29, #-44]
  40c3c0:	cmp	w8, #0x0
  40c3c4:	cset	w8, ge  // ge = tcont
  40c3c8:	tbnz	w8, #0, 40c3e0 <clock_supported@plt+0x80e8>
  40c3cc:	ldur	w8, [x29, #-44]
  40c3d0:	stur	w8, [x29, #-4]
  40c3d4:	mov	w8, #0x1                   	// #1
  40c3d8:	stur	w8, [x29, #-52]
  40c3dc:	b	40c5e8 <clock_supported@plt+0x82f0>
  40c3e0:	mov	x8, xzr
  40c3e4:	stur	x8, [x29, #-64]
  40c3e8:	stur	x8, [x29, #-72]
  40c3ec:	stur	x8, [x29, #-80]
  40c3f0:	add	x1, sp, #0x58
  40c3f4:	str	x8, [sp, #88]
  40c3f8:	ldur	x0, [x29, #-40]
  40c3fc:	bl	40d0b4 <clock_supported@plt+0x8dbc>
  40c400:	stur	w0, [x29, #-44]
  40c404:	ldur	w9, [x29, #-44]
  40c408:	cmp	w9, #0x0
  40c40c:	cset	w9, ge  // ge = tcont
  40c410:	tbnz	w9, #0, 40c428 <clock_supported@plt+0x8130>
  40c414:	ldur	w8, [x29, #-44]
  40c418:	stur	w8, [x29, #-4]
  40c41c:	mov	w8, #0x1                   	// #1
  40c420:	stur	w8, [x29, #-52]
  40c424:	b	40c5ac <clock_supported@plt+0x82b4>
  40c428:	ldur	w8, [x29, #-44]
  40c42c:	cbnz	w8, 40c43c <clock_supported@plt+0x8144>
  40c430:	mov	w8, #0x8                   	// #8
  40c434:	stur	w8, [x29, #-52]
  40c438:	b	40c5ac <clock_supported@plt+0x82b4>
  40c43c:	ldur	x0, [x29, #-16]
  40c440:	ldur	w8, [x29, #-48]
  40c444:	str	x0, [sp, #56]
  40c448:	cbnz	w8, 40c458 <clock_supported@plt+0x8160>
  40c44c:	ldur	x8, [x29, #-24]
  40c450:	str	x8, [sp, #48]
  40c454:	b	40c460 <clock_supported@plt+0x8168>
  40c458:	ldr	x8, [sp, #80]
  40c45c:	str	x8, [sp, #48]
  40c460:	ldr	x8, [sp, #48]
  40c464:	ldr	x0, [sp, #56]
  40c468:	mov	w9, wzr
  40c46c:	mov	w1, w9
  40c470:	mov	w2, #0x1                   	// #1
  40c474:	mov	x3, x8
  40c478:	mov	w4, #0x18                  	// #24
  40c47c:	bl	403b08 <table_add_many_internal@plt>
  40c480:	stur	w0, [x29, #-44]
  40c484:	ldur	w9, [x29, #-44]
  40c488:	cmp	w9, #0x0
  40c48c:	cset	w9, ge  // ge = tcont
  40c490:	tbnz	w9, #0, 40c4a8 <clock_supported@plt+0x81b0>
  40c494:	ldur	w8, [x29, #-44]
  40c498:	stur	w8, [x29, #-4]
  40c49c:	mov	w8, #0x1                   	// #1
  40c4a0:	stur	w8, [x29, #-52]
  40c4a4:	b	40c5ac <clock_supported@plt+0x82b4>
  40c4a8:	ldr	x0, [sp, #88]
  40c4ac:	sub	x1, x29, #0x40
  40c4b0:	bl	410698 <clock_supported@plt+0xc3a0>
  40c4b4:	ldr	x8, [sp, #88]
  40c4b8:	mov	x0, x8
  40c4bc:	sub	x1, x29, #0x48
  40c4c0:	bl	410254 <clock_supported@plt+0xbf5c>
  40c4c4:	ldr	x8, [sp, #88]
  40c4c8:	mov	x0, x8
  40c4cc:	sub	x1, x29, #0x50
  40c4d0:	bl	410928 <clock_supported@plt+0xc630>
  40c4d4:	ldur	x8, [x29, #-16]
  40c4d8:	ldur	x9, [x29, #-64]
  40c4dc:	mov	x0, x9
  40c4e0:	str	x8, [sp, #40]
  40c4e4:	bl	407664 <clock_supported@plt+0x336c>
  40c4e8:	ldur	x8, [x29, #-72]
  40c4ec:	str	x0, [sp, #32]
  40c4f0:	mov	x0, x8
  40c4f4:	bl	407664 <clock_supported@plt+0x336c>
  40c4f8:	ldur	x8, [x29, #-80]
  40c4fc:	str	x0, [sp, #24]
  40c500:	mov	x0, x8
  40c504:	bl	408a44 <clock_supported@plt+0x474c>
  40c508:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40c50c:	add	x8, x8, #0xe5f
  40c510:	tst	w0, #0x1
  40c514:	ldr	x9, [sp, #80]
  40c518:	csel	x5, x9, x8, ne  // ne = any
  40c51c:	ldur	x0, [x29, #-80]
  40c520:	str	x5, [sp, #16]
  40c524:	bl	40c064 <clock_supported@plt+0x7d6c>
  40c528:	ldur	x8, [x29, #-80]
  40c52c:	str	x0, [sp, #8]
  40c530:	mov	x0, x8
  40c534:	bl	408a44 <clock_supported@plt+0x474c>
  40c538:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40c53c:	add	x8, x8, #0xe62
  40c540:	tst	w0, #0x1
  40c544:	ldr	x9, [sp, #80]
  40c548:	csel	x7, x9, x8, ne  // ne = any
  40c54c:	ldr	x0, [sp, #40]
  40c550:	mov	x8, xzr
  40c554:	mov	x1, x8
  40c558:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40c55c:	add	x2, x2, #0x397
  40c560:	ldr	x3, [sp, #32]
  40c564:	ldr	x4, [sp, #24]
  40c568:	ldr	x5, [sp, #16]
  40c56c:	ldr	x6, [sp, #8]
  40c570:	bl	403fe8 <table_add_cell_stringf@plt>
  40c574:	stur	w0, [x29, #-44]
  40c578:	ldur	w10, [x29, #-44]
  40c57c:	cmp	w10, #0x0
  40c580:	cset	w10, ge  // ge = tcont
  40c584:	tbnz	w10, #0, 40c59c <clock_supported@plt+0x82a4>
  40c588:	ldur	w8, [x29, #-44]
  40c58c:	stur	w8, [x29, #-4]
  40c590:	mov	w8, #0x1                   	// #1
  40c594:	stur	w8, [x29, #-52]
  40c598:	b	40c5ac <clock_supported@plt+0x82b4>
  40c59c:	ldur	w8, [x29, #-48]
  40c5a0:	add	w8, w8, #0x1
  40c5a4:	stur	w8, [x29, #-48]
  40c5a8:	stur	wzr, [x29, #-52]
  40c5ac:	add	x0, sp, #0x58
  40c5b0:	bl	40d080 <clock_supported@plt+0x8d88>
  40c5b4:	ldur	w8, [x29, #-52]
  40c5b8:	str	w8, [sp, #4]
  40c5bc:	cbz	w8, 40c5d4 <clock_supported@plt+0x82dc>
  40c5c0:	b	40c5c4 <clock_supported@plt+0x82cc>
  40c5c4:	ldr	w8, [sp, #4]
  40c5c8:	cmp	w8, #0x8
  40c5cc:	b.eq	40c5d8 <clock_supported@plt+0x82e0>  // b.none
  40c5d0:	b	40c5e8 <clock_supported@plt+0x82f0>
  40c5d4:	b	40c3e0 <clock_supported@plt+0x80e8>
  40c5d8:	ldur	w8, [x29, #-48]
  40c5dc:	stur	w8, [x29, #-4]
  40c5e0:	mov	w8, #0x1                   	// #1
  40c5e4:	stur	w8, [x29, #-52]
  40c5e8:	sub	x0, x29, #0x28
  40c5ec:	bl	40cf94 <clock_supported@plt+0x8c9c>
  40c5f0:	ldur	w0, [x29, #-4]
  40c5f4:	ldp	x29, x30, [sp, #176]
  40c5f8:	add	sp, sp, #0xc0
  40c5fc:	ret
  40c600:	sub	sp, sp, #0x130
  40c604:	stp	x29, x30, [sp, #272]
  40c608:	str	x28, [sp, #288]
  40c60c:	add	x29, sp, #0x110
  40c610:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  40c614:	add	x8, x8, #0x41
  40c618:	stur	x0, [x29, #-16]
  40c61c:	stur	x1, [x29, #-24]
  40c620:	ldrb	w9, [x8]
  40c624:	tbnz	w9, #0, 40c630 <clock_supported@plt+0x8338>
  40c628:	stur	wzr, [x29, #-4]
  40c62c:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c630:	ldur	x8, [x29, #-24]
  40c634:	ldrh	w9, [x8, #454]
  40c638:	mov	w10, #0x3                   	// #3
  40c63c:	lsr	w9, w9, w10
  40c640:	and	w9, w9, #0x1
  40c644:	tbnz	w9, #0, 40c668 <clock_supported@plt+0x8370>
  40c648:	ldur	x8, [x29, #-24]
  40c64c:	ldrh	w9, [x8, #454]
  40c650:	mov	w10, #0x4                   	// #4
  40c654:	lsr	w9, w9, w10
  40c658:	and	w9, w9, #0x1
  40c65c:	tbnz	w9, #0, 40c668 <clock_supported@plt+0x8370>
  40c660:	stur	wzr, [x29, #-4]
  40c664:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c668:	ldur	x0, [x29, #-16]
  40c66c:	mov	w8, wzr
  40c670:	mov	w1, w8
  40c674:	mov	w2, #0x1                   	// #1
  40c678:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40c67c:	add	x3, x3, #0x3ff
  40c680:	mov	w4, #0x18                  	// #24
  40c684:	bl	403b08 <table_add_many_internal@plt>
  40c688:	stur	w0, [x29, #-28]
  40c68c:	ldur	w8, [x29, #-28]
  40c690:	cmp	w8, #0x0
  40c694:	cset	w8, ge  // ge = tcont
  40c698:	tbnz	w8, #0, 40c6a8 <clock_supported@plt+0x83b0>
  40c69c:	ldur	w8, [x29, #-28]
  40c6a0:	stur	w8, [x29, #-4]
  40c6a4:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c6a8:	ldur	x0, [x29, #-16]
  40c6ac:	ldur	x8, [x29, #-24]
  40c6b0:	ldrh	w9, [x8, #454]
  40c6b4:	mov	w10, #0x3                   	// #3
  40c6b8:	lsr	w9, w9, w10
  40c6bc:	mov	w11, #0x1                   	// #1
  40c6c0:	and	w9, w9, #0x1
  40c6c4:	mov	w12, #0x12                  	// #18
  40c6c8:	mov	w13, #0x13                  	// #19
  40c6cc:	tst	w9, #0x1
  40c6d0:	csel	w2, w13, w12, ne  // ne = any
  40c6d4:	ldur	x8, [x29, #-24]
  40c6d8:	ldrh	w9, [x8, #454]
  40c6dc:	lsr	w9, w9, w10
  40c6e0:	and	w9, w9, w11
  40c6e4:	stur	x0, [x29, #-40]
  40c6e8:	stur	w2, [x29, #-44]
  40c6ec:	tbnz	w9, #0, 40c6f4 <clock_supported@plt+0x83fc>
  40c6f0:	b	40c704 <clock_supported@plt+0x840c>
  40c6f4:	ldur	x8, [x29, #-24]
  40c6f8:	add	x8, x8, #0x80
  40c6fc:	stur	x8, [x29, #-56]
  40c700:	b	40c710 <clock_supported@plt+0x8418>
  40c704:	ldur	x8, [x29, #-24]
  40c708:	add	x8, x8, #0x80
  40c70c:	stur	x8, [x29, #-56]
  40c710:	ldur	x8, [x29, #-56]
  40c714:	ldur	x0, [x29, #-40]
  40c718:	mov	x9, xzr
  40c71c:	mov	x1, x9
  40c720:	ldur	w2, [x29, #-44]
  40c724:	mov	x3, x8
  40c728:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40c72c:	stur	w0, [x29, #-28]
  40c730:	ldur	w10, [x29, #-28]
  40c734:	cmp	w10, #0x0
  40c738:	cset	w10, ge  // ge = tcont
  40c73c:	tbnz	w10, #0, 40c74c <clock_supported@plt+0x8454>
  40c740:	ldur	w8, [x29, #-28]
  40c744:	stur	w8, [x29, #-4]
  40c748:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c74c:	ldur	x0, [x29, #-16]
  40c750:	mov	w8, wzr
  40c754:	mov	w1, w8
  40c758:	mov	w2, #0x1                   	// #1
  40c75c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40c760:	add	x3, x3, #0x40b
  40c764:	mov	w4, #0x18                  	// #24
  40c768:	bl	403b08 <table_add_many_internal@plt>
  40c76c:	stur	w0, [x29, #-28]
  40c770:	ldur	w8, [x29, #-28]
  40c774:	cmp	w8, #0x0
  40c778:	cset	w8, ge  // ge = tcont
  40c77c:	tbnz	w8, #0, 40c78c <clock_supported@plt+0x8494>
  40c780:	ldur	w8, [x29, #-28]
  40c784:	stur	w8, [x29, #-4]
  40c788:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c78c:	ldur	x0, [x29, #-16]
  40c790:	ldur	x8, [x29, #-24]
  40c794:	ldrh	w9, [x8, #454]
  40c798:	mov	w10, #0x3                   	// #3
  40c79c:	lsr	w9, w9, w10
  40c7a0:	mov	w11, #0x1                   	// #1
  40c7a4:	and	w9, w9, #0x1
  40c7a8:	mov	w12, #0x12                  	// #18
  40c7ac:	mov	w13, #0x13                  	// #19
  40c7b0:	tst	w9, #0x1
  40c7b4:	csel	w2, w13, w12, ne  // ne = any
  40c7b8:	ldur	x8, [x29, #-24]
  40c7bc:	ldrh	w9, [x8, #454]
  40c7c0:	lsr	w9, w9, w10
  40c7c4:	and	w9, w9, w11
  40c7c8:	stur	x0, [x29, #-64]
  40c7cc:	stur	w2, [x29, #-68]
  40c7d0:	tbnz	w9, #0, 40c7d8 <clock_supported@plt+0x84e0>
  40c7d4:	b	40c7e8 <clock_supported@plt+0x84f0>
  40c7d8:	ldur	x8, [x29, #-24]
  40c7dc:	add	x8, x8, #0x88
  40c7e0:	stur	x8, [x29, #-80]
  40c7e4:	b	40c7f4 <clock_supported@plt+0x84fc>
  40c7e8:	ldur	x8, [x29, #-24]
  40c7ec:	add	x8, x8, #0x84
  40c7f0:	stur	x8, [x29, #-80]
  40c7f4:	ldur	x8, [x29, #-80]
  40c7f8:	ldur	x0, [x29, #-64]
  40c7fc:	mov	x9, xzr
  40c800:	mov	x1, x9
  40c804:	ldur	w2, [x29, #-68]
  40c808:	mov	x3, x8
  40c80c:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40c810:	stur	w0, [x29, #-28]
  40c814:	ldur	w10, [x29, #-28]
  40c818:	cmp	w10, #0x0
  40c81c:	cset	w10, ge  // ge = tcont
  40c820:	tbnz	w10, #0, 40c830 <clock_supported@plt+0x8538>
  40c824:	ldur	w8, [x29, #-28]
  40c828:	stur	w8, [x29, #-4]
  40c82c:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c830:	ldur	x0, [x29, #-16]
  40c834:	mov	w8, wzr
  40c838:	mov	w1, w8
  40c83c:	mov	w2, #0x1                   	// #1
  40c840:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40c844:	add	x3, x3, #0x417
  40c848:	mov	w4, #0x18                  	// #24
  40c84c:	bl	403b08 <table_add_many_internal@plt>
  40c850:	stur	w0, [x29, #-28]
  40c854:	ldur	w8, [x29, #-28]
  40c858:	cmp	w8, #0x0
  40c85c:	cset	w8, ge  // ge = tcont
  40c860:	tbnz	w8, #0, 40c870 <clock_supported@plt+0x8578>
  40c864:	ldur	w8, [x29, #-28]
  40c868:	stur	w8, [x29, #-4]
  40c86c:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c870:	ldur	x0, [x29, #-16]
  40c874:	ldur	x8, [x29, #-24]
  40c878:	ldrh	w9, [x8, #454]
  40c87c:	mov	w10, #0x3                   	// #3
  40c880:	lsr	w9, w9, w10
  40c884:	mov	w11, #0x1                   	// #1
  40c888:	and	w9, w9, #0x1
  40c88c:	mov	w12, #0x12                  	// #18
  40c890:	mov	w13, #0x13                  	// #19
  40c894:	tst	w9, #0x1
  40c898:	csel	w2, w13, w12, ne  // ne = any
  40c89c:	ldur	x8, [x29, #-24]
  40c8a0:	ldrh	w9, [x8, #454]
  40c8a4:	lsr	w9, w9, w10
  40c8a8:	and	w9, w9, w11
  40c8ac:	stur	x0, [x29, #-88]
  40c8b0:	stur	w2, [x29, #-92]
  40c8b4:	tbnz	w9, #0, 40c8bc <clock_supported@plt+0x85c4>
  40c8b8:	b	40c8cc <clock_supported@plt+0x85d4>
  40c8bc:	ldur	x8, [x29, #-24]
  40c8c0:	add	x8, x8, #0x90
  40c8c4:	stur	x8, [x29, #-104]
  40c8c8:	b	40c8d8 <clock_supported@plt+0x85e0>
  40c8cc:	ldur	x8, [x29, #-24]
  40c8d0:	add	x8, x8, #0x88
  40c8d4:	stur	x8, [x29, #-104]
  40c8d8:	ldur	x8, [x29, #-104]
  40c8dc:	ldur	x0, [x29, #-88]
  40c8e0:	mov	x9, xzr
  40c8e4:	mov	x1, x9
  40c8e8:	ldur	w2, [x29, #-92]
  40c8ec:	mov	x3, x8
  40c8f0:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40c8f4:	stur	w0, [x29, #-28]
  40c8f8:	ldur	w10, [x29, #-28]
  40c8fc:	cmp	w10, #0x0
  40c900:	cset	w10, ge  // ge = tcont
  40c904:	tbnz	w10, #0, 40c914 <clock_supported@plt+0x861c>
  40c908:	ldur	w8, [x29, #-28]
  40c90c:	stur	w8, [x29, #-4]
  40c910:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c914:	ldur	x0, [x29, #-16]
  40c918:	mov	w8, wzr
  40c91c:	mov	w1, w8
  40c920:	mov	w2, #0x1                   	// #1
  40c924:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40c928:	add	x3, x3, #0x421
  40c92c:	mov	w4, #0x18                  	// #24
  40c930:	bl	403b08 <table_add_many_internal@plt>
  40c934:	stur	w0, [x29, #-28]
  40c938:	ldur	w8, [x29, #-28]
  40c93c:	cmp	w8, #0x0
  40c940:	cset	w8, ge  // ge = tcont
  40c944:	tbnz	w8, #0, 40c954 <clock_supported@plt+0x865c>
  40c948:	ldur	w8, [x29, #-28]
  40c94c:	stur	w8, [x29, #-4]
  40c950:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c954:	ldur	x0, [x29, #-16]
  40c958:	ldur	x8, [x29, #-24]
  40c95c:	ldrh	w9, [x8, #454]
  40c960:	mov	w10, #0x3                   	// #3
  40c964:	lsr	w9, w9, w10
  40c968:	mov	w11, #0x1                   	// #1
  40c96c:	and	w9, w9, #0x1
  40c970:	mov	w12, #0x12                  	// #18
  40c974:	mov	w13, #0x13                  	// #19
  40c978:	tst	w9, #0x1
  40c97c:	csel	w2, w13, w12, ne  // ne = any
  40c980:	ldur	x8, [x29, #-24]
  40c984:	ldrh	w9, [x8, #454]
  40c988:	lsr	w9, w9, w10
  40c98c:	and	w9, w9, w11
  40c990:	stur	x0, [x29, #-112]
  40c994:	stur	w2, [x29, #-116]
  40c998:	tbnz	w9, #0, 40c9a0 <clock_supported@plt+0x86a8>
  40c99c:	b	40c9b0 <clock_supported@plt+0x86b8>
  40c9a0:	ldur	x8, [x29, #-24]
  40c9a4:	add	x8, x8, #0x98
  40c9a8:	stur	x8, [x29, #-128]
  40c9ac:	b	40c9bc <clock_supported@plt+0x86c4>
  40c9b0:	ldur	x8, [x29, #-24]
  40c9b4:	add	x8, x8, #0x8c
  40c9b8:	stur	x8, [x29, #-128]
  40c9bc:	ldur	x8, [x29, #-128]
  40c9c0:	ldur	x0, [x29, #-112]
  40c9c4:	mov	x9, xzr
  40c9c8:	mov	x1, x9
  40c9cc:	ldur	w2, [x29, #-116]
  40c9d0:	mov	x3, x8
  40c9d4:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40c9d8:	stur	w0, [x29, #-28]
  40c9dc:	ldur	w10, [x29, #-28]
  40c9e0:	cmp	w10, #0x0
  40c9e4:	cset	w10, ge  // ge = tcont
  40c9e8:	tbnz	w10, #0, 40c9f8 <clock_supported@plt+0x8700>
  40c9ec:	ldur	w8, [x29, #-28]
  40c9f0:	stur	w8, [x29, #-4]
  40c9f4:	b	40cf54 <clock_supported@plt+0x8c5c>
  40c9f8:	ldur	x0, [x29, #-16]
  40c9fc:	mov	w8, wzr
  40ca00:	mov	w1, w8
  40ca04:	mov	w2, #0x1                   	// #1
  40ca08:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40ca0c:	add	x3, x3, #0x42b
  40ca10:	mov	w4, #0x18                  	// #24
  40ca14:	bl	403b08 <table_add_many_internal@plt>
  40ca18:	stur	w0, [x29, #-28]
  40ca1c:	ldur	w8, [x29, #-28]
  40ca20:	cmp	w8, #0x0
  40ca24:	cset	w8, ge  // ge = tcont
  40ca28:	tbnz	w8, #0, 40ca38 <clock_supported@plt+0x8740>
  40ca2c:	ldur	w8, [x29, #-28]
  40ca30:	stur	w8, [x29, #-4]
  40ca34:	b	40cf54 <clock_supported@plt+0x8c5c>
  40ca38:	ldur	x0, [x29, #-16]
  40ca3c:	ldur	x8, [x29, #-24]
  40ca40:	ldrh	w9, [x8, #454]
  40ca44:	mov	w10, #0x3                   	// #3
  40ca48:	lsr	w9, w9, w10
  40ca4c:	mov	w11, #0x1                   	// #1
  40ca50:	and	w9, w9, #0x1
  40ca54:	mov	w12, #0x12                  	// #18
  40ca58:	mov	w13, #0x13                  	// #19
  40ca5c:	tst	w9, #0x1
  40ca60:	csel	w2, w13, w12, ne  // ne = any
  40ca64:	ldur	x8, [x29, #-24]
  40ca68:	ldrh	w9, [x8, #454]
  40ca6c:	lsr	w9, w9, w10
  40ca70:	and	w9, w9, w11
  40ca74:	str	x0, [sp, #136]
  40ca78:	str	w2, [sp, #132]
  40ca7c:	tbnz	w9, #0, 40ca84 <clock_supported@plt+0x878c>
  40ca80:	b	40ca94 <clock_supported@plt+0x879c>
  40ca84:	ldur	x8, [x29, #-24]
  40ca88:	add	x8, x8, #0xa0
  40ca8c:	str	x8, [sp, #120]
  40ca90:	b	40caa0 <clock_supported@plt+0x87a8>
  40ca94:	ldur	x8, [x29, #-24]
  40ca98:	add	x8, x8, #0x90
  40ca9c:	str	x8, [sp, #120]
  40caa0:	ldr	x8, [sp, #120]
  40caa4:	ldr	x0, [sp, #136]
  40caa8:	mov	x9, xzr
  40caac:	mov	x1, x9
  40cab0:	ldr	w2, [sp, #132]
  40cab4:	mov	x3, x8
  40cab8:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40cabc:	stur	w0, [x29, #-28]
  40cac0:	ldur	w10, [x29, #-28]
  40cac4:	cmp	w10, #0x0
  40cac8:	cset	w10, ge  // ge = tcont
  40cacc:	tbnz	w10, #0, 40cadc <clock_supported@plt+0x87e4>
  40cad0:	ldur	w8, [x29, #-28]
  40cad4:	stur	w8, [x29, #-4]
  40cad8:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cadc:	ldur	x0, [x29, #-16]
  40cae0:	mov	w8, wzr
  40cae4:	mov	w1, w8
  40cae8:	mov	w2, #0x1                   	// #1
  40caec:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40caf0:	add	x3, x3, #0x436
  40caf4:	mov	w4, #0x18                  	// #24
  40caf8:	bl	403b08 <table_add_many_internal@plt>
  40cafc:	stur	w0, [x29, #-28]
  40cb00:	ldur	w8, [x29, #-28]
  40cb04:	cmp	w8, #0x0
  40cb08:	cset	w8, ge  // ge = tcont
  40cb0c:	tbnz	w8, #0, 40cb1c <clock_supported@plt+0x8824>
  40cb10:	ldur	w8, [x29, #-28]
  40cb14:	stur	w8, [x29, #-4]
  40cb18:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cb1c:	ldur	x0, [x29, #-16]
  40cb20:	ldur	x8, [x29, #-24]
  40cb24:	ldrh	w9, [x8, #454]
  40cb28:	mov	w10, #0x3                   	// #3
  40cb2c:	lsr	w9, w9, w10
  40cb30:	mov	w11, #0x1                   	// #1
  40cb34:	and	w9, w9, #0x1
  40cb38:	mov	w12, #0x12                  	// #18
  40cb3c:	mov	w13, #0x13                  	// #19
  40cb40:	tst	w9, #0x1
  40cb44:	csel	w2, w13, w12, ne  // ne = any
  40cb48:	ldur	x8, [x29, #-24]
  40cb4c:	ldrh	w9, [x8, #454]
  40cb50:	lsr	w9, w9, w10
  40cb54:	and	w9, w9, w11
  40cb58:	str	x0, [sp, #112]
  40cb5c:	str	w2, [sp, #108]
  40cb60:	tbnz	w9, #0, 40cb68 <clock_supported@plt+0x8870>
  40cb64:	b	40cb78 <clock_supported@plt+0x8880>
  40cb68:	ldur	x8, [x29, #-24]
  40cb6c:	add	x8, x8, #0xa8
  40cb70:	str	x8, [sp, #96]
  40cb74:	b	40cb84 <clock_supported@plt+0x888c>
  40cb78:	ldur	x8, [x29, #-24]
  40cb7c:	add	x8, x8, #0x94
  40cb80:	str	x8, [sp, #96]
  40cb84:	ldr	x8, [sp, #96]
  40cb88:	ldr	x0, [sp, #112]
  40cb8c:	mov	x9, xzr
  40cb90:	mov	x1, x9
  40cb94:	ldr	w2, [sp, #108]
  40cb98:	mov	x3, x8
  40cb9c:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40cba0:	stur	w0, [x29, #-28]
  40cba4:	ldur	w10, [x29, #-28]
  40cba8:	cmp	w10, #0x0
  40cbac:	cset	w10, ge  // ge = tcont
  40cbb0:	tbnz	w10, #0, 40cbc0 <clock_supported@plt+0x88c8>
  40cbb4:	ldur	w8, [x29, #-28]
  40cbb8:	stur	w8, [x29, #-4]
  40cbbc:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cbc0:	ldur	x0, [x29, #-16]
  40cbc4:	mov	w8, wzr
  40cbc8:	mov	w1, w8
  40cbcc:	mov	w2, #0x1                   	// #1
  40cbd0:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40cbd4:	add	x3, x3, #0x441
  40cbd8:	mov	w4, #0x18                  	// #24
  40cbdc:	bl	403b08 <table_add_many_internal@plt>
  40cbe0:	stur	w0, [x29, #-28]
  40cbe4:	ldur	w8, [x29, #-28]
  40cbe8:	cmp	w8, #0x0
  40cbec:	cset	w8, ge  // ge = tcont
  40cbf0:	tbnz	w8, #0, 40cc00 <clock_supported@plt+0x8908>
  40cbf4:	ldur	w8, [x29, #-28]
  40cbf8:	stur	w8, [x29, #-4]
  40cbfc:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cc00:	ldur	x0, [x29, #-16]
  40cc04:	ldur	x8, [x29, #-24]
  40cc08:	ldrh	w9, [x8, #454]
  40cc0c:	mov	w10, #0x3                   	// #3
  40cc10:	lsr	w9, w9, w10
  40cc14:	mov	w11, #0x1                   	// #1
  40cc18:	and	w9, w9, #0x1
  40cc1c:	mov	w12, #0x12                  	// #18
  40cc20:	mov	w13, #0x13                  	// #19
  40cc24:	tst	w9, #0x1
  40cc28:	csel	w2, w13, w12, ne  // ne = any
  40cc2c:	ldur	x8, [x29, #-24]
  40cc30:	ldrh	w9, [x8, #454]
  40cc34:	lsr	w9, w9, w10
  40cc38:	and	w9, w9, w11
  40cc3c:	str	x0, [sp, #88]
  40cc40:	str	w2, [sp, #84]
  40cc44:	tbnz	w9, #0, 40cc4c <clock_supported@plt+0x8954>
  40cc48:	b	40cc5c <clock_supported@plt+0x8964>
  40cc4c:	ldur	x8, [x29, #-24]
  40cc50:	add	x8, x8, #0xb0
  40cc54:	str	x8, [sp, #72]
  40cc58:	b	40cc68 <clock_supported@plt+0x8970>
  40cc5c:	ldur	x8, [x29, #-24]
  40cc60:	add	x8, x8, #0x98
  40cc64:	str	x8, [sp, #72]
  40cc68:	ldr	x8, [sp, #72]
  40cc6c:	ldr	x0, [sp, #88]
  40cc70:	mov	x9, xzr
  40cc74:	mov	x1, x9
  40cc78:	ldr	w2, [sp, #84]
  40cc7c:	mov	x3, x8
  40cc80:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40cc84:	stur	w0, [x29, #-28]
  40cc88:	ldur	w10, [x29, #-28]
  40cc8c:	cmp	w10, #0x0
  40cc90:	cset	w10, ge  // ge = tcont
  40cc94:	tbnz	w10, #0, 40cca4 <clock_supported@plt+0x89ac>
  40cc98:	ldur	w8, [x29, #-28]
  40cc9c:	stur	w8, [x29, #-4]
  40cca0:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cca4:	ldur	x0, [x29, #-16]
  40cca8:	mov	w8, wzr
  40ccac:	mov	w1, w8
  40ccb0:	mov	w2, #0x1                   	// #1
  40ccb4:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40ccb8:	add	x3, x3, #0x44d
  40ccbc:	mov	w4, #0x18                  	// #24
  40ccc0:	bl	403b08 <table_add_many_internal@plt>
  40ccc4:	stur	w0, [x29, #-28]
  40ccc8:	ldur	w8, [x29, #-28]
  40cccc:	cmp	w8, #0x0
  40ccd0:	cset	w8, ge  // ge = tcont
  40ccd4:	tbnz	w8, #0, 40cce4 <clock_supported@plt+0x89ec>
  40ccd8:	ldur	w8, [x29, #-28]
  40ccdc:	stur	w8, [x29, #-4]
  40cce0:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cce4:	ldur	x0, [x29, #-16]
  40cce8:	ldur	x8, [x29, #-24]
  40ccec:	ldrh	w9, [x8, #454]
  40ccf0:	mov	w10, #0x3                   	// #3
  40ccf4:	lsr	w9, w9, w10
  40ccf8:	mov	w11, #0x1                   	// #1
  40ccfc:	and	w9, w9, #0x1
  40cd00:	mov	w12, #0x12                  	// #18
  40cd04:	mov	w13, #0x13                  	// #19
  40cd08:	tst	w9, #0x1
  40cd0c:	csel	w2, w13, w12, ne  // ne = any
  40cd10:	ldur	x8, [x29, #-24]
  40cd14:	ldrh	w9, [x8, #454]
  40cd18:	lsr	w9, w9, w10
  40cd1c:	and	w9, w9, w11
  40cd20:	str	x0, [sp, #64]
  40cd24:	str	w2, [sp, #60]
  40cd28:	tbnz	w9, #0, 40cd30 <clock_supported@plt+0x8a38>
  40cd2c:	b	40cd40 <clock_supported@plt+0x8a48>
  40cd30:	ldur	x8, [x29, #-24]
  40cd34:	add	x8, x8, #0xb8
  40cd38:	str	x8, [sp, #48]
  40cd3c:	b	40cd4c <clock_supported@plt+0x8a54>
  40cd40:	ldur	x8, [x29, #-24]
  40cd44:	add	x8, x8, #0x9c
  40cd48:	str	x8, [sp, #48]
  40cd4c:	ldr	x8, [sp, #48]
  40cd50:	ldr	x0, [sp, #64]
  40cd54:	mov	x9, xzr
  40cd58:	mov	x1, x9
  40cd5c:	ldr	w2, [sp, #60]
  40cd60:	mov	x3, x8
  40cd64:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40cd68:	stur	w0, [x29, #-28]
  40cd6c:	ldur	w10, [x29, #-28]
  40cd70:	cmp	w10, #0x0
  40cd74:	cset	w10, ge  // ge = tcont
  40cd78:	tbnz	w10, #0, 40cd88 <clock_supported@plt+0x8a90>
  40cd7c:	ldur	w8, [x29, #-28]
  40cd80:	stur	w8, [x29, #-4]
  40cd84:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cd88:	ldur	x0, [x29, #-16]
  40cd8c:	mov	w8, wzr
  40cd90:	mov	w1, w8
  40cd94:	mov	w2, #0x1                   	// #1
  40cd98:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40cd9c:	add	x3, x3, #0x459
  40cda0:	mov	w4, #0x18                  	// #24
  40cda4:	bl	403b08 <table_add_many_internal@plt>
  40cda8:	stur	w0, [x29, #-28]
  40cdac:	ldur	w8, [x29, #-28]
  40cdb0:	cmp	w8, #0x0
  40cdb4:	cset	w8, ge  // ge = tcont
  40cdb8:	tbnz	w8, #0, 40cdc8 <clock_supported@plt+0x8ad0>
  40cdbc:	ldur	w8, [x29, #-28]
  40cdc0:	stur	w8, [x29, #-4]
  40cdc4:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cdc8:	ldur	x0, [x29, #-16]
  40cdcc:	ldur	x8, [x29, #-24]
  40cdd0:	ldrh	w9, [x8, #454]
  40cdd4:	mov	w10, #0x3                   	// #3
  40cdd8:	lsr	w9, w9, w10
  40cddc:	mov	w11, #0x1                   	// #1
  40cde0:	and	w9, w9, #0x1
  40cde4:	mov	w12, #0x12                  	// #18
  40cde8:	mov	w13, #0x13                  	// #19
  40cdec:	tst	w9, #0x1
  40cdf0:	csel	w2, w13, w12, ne  // ne = any
  40cdf4:	ldur	x8, [x29, #-24]
  40cdf8:	ldrh	w9, [x8, #454]
  40cdfc:	lsr	w9, w9, w10
  40ce00:	and	w9, w9, w11
  40ce04:	str	x0, [sp, #40]
  40ce08:	str	w2, [sp, #36]
  40ce0c:	tbnz	w9, #0, 40ce14 <clock_supported@plt+0x8b1c>
  40ce10:	b	40ce24 <clock_supported@plt+0x8b2c>
  40ce14:	ldur	x8, [x29, #-24]
  40ce18:	add	x8, x8, #0xc0
  40ce1c:	str	x8, [sp, #24]
  40ce20:	b	40ce30 <clock_supported@plt+0x8b38>
  40ce24:	ldur	x8, [x29, #-24]
  40ce28:	add	x8, x8, #0xa0
  40ce2c:	str	x8, [sp, #24]
  40ce30:	ldr	x8, [sp, #24]
  40ce34:	ldr	x0, [sp, #40]
  40ce38:	mov	x9, xzr
  40ce3c:	mov	x1, x9
  40ce40:	ldr	w2, [sp, #36]
  40ce44:	mov	x3, x8
  40ce48:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40ce4c:	stur	w0, [x29, #-28]
  40ce50:	ldur	w10, [x29, #-28]
  40ce54:	cmp	w10, #0x0
  40ce58:	cset	w10, ge  // ge = tcont
  40ce5c:	tbnz	w10, #0, 40ce6c <clock_supported@plt+0x8b74>
  40ce60:	ldur	w8, [x29, #-28]
  40ce64:	stur	w8, [x29, #-4]
  40ce68:	b	40cf54 <clock_supported@plt+0x8c5c>
  40ce6c:	ldur	x0, [x29, #-16]
  40ce70:	mov	w8, wzr
  40ce74:	mov	w1, w8
  40ce78:	mov	w2, #0x1                   	// #1
  40ce7c:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40ce80:	add	x3, x3, #0x46c
  40ce84:	mov	w4, #0x18                  	// #24
  40ce88:	bl	403b08 <table_add_many_internal@plt>
  40ce8c:	stur	w0, [x29, #-28]
  40ce90:	ldur	w8, [x29, #-28]
  40ce94:	cmp	w8, #0x0
  40ce98:	cset	w8, ge  // ge = tcont
  40ce9c:	tbnz	w8, #0, 40ceac <clock_supported@plt+0x8bb4>
  40cea0:	ldur	w8, [x29, #-28]
  40cea4:	stur	w8, [x29, #-4]
  40cea8:	b	40cf54 <clock_supported@plt+0x8c5c>
  40ceac:	ldur	x0, [x29, #-16]
  40ceb0:	ldur	x8, [x29, #-24]
  40ceb4:	ldrh	w9, [x8, #454]
  40ceb8:	mov	w10, #0x3                   	// #3
  40cebc:	lsr	w9, w9, w10
  40cec0:	mov	w11, #0x1                   	// #1
  40cec4:	and	w9, w9, #0x1
  40cec8:	mov	w12, #0x12                  	// #18
  40cecc:	mov	w13, #0x13                  	// #19
  40ced0:	tst	w9, #0x1
  40ced4:	csel	w2, w13, w12, ne  // ne = any
  40ced8:	ldur	x8, [x29, #-24]
  40cedc:	ldrh	w9, [x8, #454]
  40cee0:	lsr	w9, w9, w10
  40cee4:	and	w9, w9, w11
  40cee8:	str	x0, [sp, #16]
  40ceec:	str	w2, [sp, #12]
  40cef0:	tbnz	w9, #0, 40cef8 <clock_supported@plt+0x8c00>
  40cef4:	b	40cf08 <clock_supported@plt+0x8c10>
  40cef8:	ldur	x8, [x29, #-24]
  40cefc:	add	x8, x8, #0xc8
  40cf00:	str	x8, [sp]
  40cf04:	b	40cf14 <clock_supported@plt+0x8c1c>
  40cf08:	ldur	x8, [x29, #-24]
  40cf0c:	add	x8, x8, #0xa4
  40cf10:	str	x8, [sp]
  40cf14:	ldr	x8, [sp]
  40cf18:	ldr	x0, [sp, #16]
  40cf1c:	mov	x9, xzr
  40cf20:	mov	x1, x9
  40cf24:	ldr	w2, [sp, #12]
  40cf28:	mov	x3, x8
  40cf2c:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40cf30:	stur	w0, [x29, #-28]
  40cf34:	ldur	w10, [x29, #-28]
  40cf38:	cmp	w10, #0x0
  40cf3c:	cset	w10, ge  // ge = tcont
  40cf40:	tbnz	w10, #0, 40cf50 <clock_supported@plt+0x8c58>
  40cf44:	ldur	w8, [x29, #-28]
  40cf48:	stur	w8, [x29, #-4]
  40cf4c:	b	40cf54 <clock_supported@plt+0x8c5c>
  40cf50:	stur	wzr, [x29, #-4]
  40cf54:	ldur	w0, [x29, #-4]
  40cf58:	ldr	x28, [sp, #288]
  40cf5c:	ldp	x29, x30, [sp, #272]
  40cf60:	add	sp, sp, #0x130
  40cf64:	ret
  40cf68:	sub	sp, sp, #0x10
  40cf6c:	strh	w0, [sp, #14]
  40cf70:	ldrh	w8, [sp, #14]
  40cf74:	asr	w8, w8, #8
  40cf78:	and	w8, w8, #0xff
  40cf7c:	ldrh	w9, [sp, #14]
  40cf80:	and	w9, w9, #0xff
  40cf84:	orr	w8, w8, w9, lsl #8
  40cf88:	mov	w0, w8
  40cf8c:	add	sp, sp, #0x10
  40cf90:	ret
  40cf94:	sub	sp, sp, #0x20
  40cf98:	stp	x29, x30, [sp, #16]
  40cf9c:	add	x29, sp, #0x10
  40cfa0:	str	x0, [sp, #8]
  40cfa4:	ldr	x8, [sp, #8]
  40cfa8:	ldr	x0, [x8]
  40cfac:	bl	404138 <safe_fclose@plt>
  40cfb0:	ldp	x29, x30, [sp, #16]
  40cfb4:	add	sp, sp, #0x20
  40cfb8:	ret
  40cfbc:	sub	sp, sp, #0x40
  40cfc0:	stp	x29, x30, [sp, #48]
  40cfc4:	add	x29, sp, #0x30
  40cfc8:	mov	x8, xzr
  40cfcc:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40cfd0:	add	x9, x9, #0x3ab
  40cfd4:	add	x10, sp, #0x18
  40cfd8:	stur	w0, [x29, #-8]
  40cfdc:	stur	x1, [x29, #-16]
  40cfe0:	str	x8, [sp, #24]
  40cfe4:	ldur	w2, [x29, #-8]
  40cfe8:	mov	x0, x10
  40cfec:	mov	x1, x9
  40cff0:	bl	403dd8 <asprintf@plt>
  40cff4:	cmp	w0, #0x0
  40cff8:	cset	w11, ge  // ge = tcont
  40cffc:	tbnz	w11, #0, 40d014 <clock_supported@plt+0x8d1c>
  40d000:	mov	w8, #0xfffffff4            	// #-12
  40d004:	stur	w8, [x29, #-4]
  40d008:	mov	w8, #0x1                   	// #1
  40d00c:	str	w8, [sp, #12]
  40d010:	b	40d068 <clock_supported@plt+0x8d70>
  40d014:	ldr	x0, [sp, #24]
  40d018:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40d01c:	add	x1, x1, #0x3c6
  40d020:	bl	404148 <fopen64@plt>
  40d024:	str	x0, [sp, #16]
  40d028:	ldr	x8, [sp, #16]
  40d02c:	cbnz	x8, 40d050 <clock_supported@plt+0x8d58>
  40d030:	bl	404158 <__errno_location@plt>
  40d034:	ldr	w8, [x0]
  40d038:	mov	w9, wzr
  40d03c:	subs	w8, w9, w8
  40d040:	stur	w8, [x29, #-4]
  40d044:	mov	w8, #0x1                   	// #1
  40d048:	str	w8, [sp, #12]
  40d04c:	b	40d068 <clock_supported@plt+0x8d70>
  40d050:	ldr	x8, [sp, #16]
  40d054:	ldur	x9, [x29, #-16]
  40d058:	str	x8, [x9]
  40d05c:	stur	wzr, [x29, #-4]
  40d060:	mov	w10, #0x1                   	// #1
  40d064:	str	w10, [sp, #12]
  40d068:	add	x0, sp, #0x18
  40d06c:	bl	404a10 <clock_supported@plt+0x718>
  40d070:	ldur	w0, [x29, #-4]
  40d074:	ldp	x29, x30, [sp, #48]
  40d078:	add	sp, sp, #0x40
  40d07c:	ret
  40d080:	sub	sp, sp, #0x20
  40d084:	stp	x29, x30, [sp, #16]
  40d088:	add	x29, sp, #0x10
  40d08c:	str	x0, [sp, #8]
  40d090:	ldr	x8, [sp, #8]
  40d094:	ldr	x8, [x8]
  40d098:	cbz	x8, 40d0a8 <clock_supported@plt+0x8db0>
  40d09c:	ldr	x8, [sp, #8]
  40d0a0:	ldr	x0, [x8]
  40d0a4:	bl	40e3c8 <clock_supported@plt+0xa0d0>
  40d0a8:	ldp	x29, x30, [sp, #16]
  40d0ac:	add	sp, sp, #0x20
  40d0b0:	ret
  40d0b4:	sub	sp, sp, #0x90
  40d0b8:	stp	x29, x30, [sp, #128]
  40d0bc:	add	x29, sp, #0x80
  40d0c0:	mov	x8, xzr
  40d0c4:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40d0c8:	add	x9, x9, #0x31c
  40d0cc:	add	x9, x9, #0x3
  40d0d0:	stur	x0, [x29, #-16]
  40d0d4:	stur	x1, [x29, #-24]
  40d0d8:	stur	x8, [x29, #-32]
  40d0dc:	str	x9, [sp, #64]
  40d0e0:	ldur	x8, [x29, #-16]
  40d0e4:	cmp	x8, #0x0
  40d0e8:	cset	w9, ne  // ne = any
  40d0ec:	mov	w10, #0x1                   	// #1
  40d0f0:	eor	w9, w9, #0x1
  40d0f4:	eor	w9, w9, w10
  40d0f8:	eor	w9, w9, w10
  40d0fc:	and	w9, w9, #0x1
  40d100:	mov	w0, w9
  40d104:	sxtw	x8, w0
  40d108:	cbz	x8, 40d130 <clock_supported@plt+0x8e38>
  40d10c:	mov	w8, wzr
  40d110:	mov	w0, w8
  40d114:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40d118:	add	x1, x1, #0x3c9
  40d11c:	ldr	x2, [sp, #64]
  40d120:	mov	w3, #0x386                 	// #902
  40d124:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40d128:	add	x4, x4, #0x3cb
  40d12c:	bl	403958 <log_assert_failed_realm@plt>
  40d130:	ldur	x8, [x29, #-24]
  40d134:	cmp	x8, #0x0
  40d138:	cset	w9, ne  // ne = any
  40d13c:	mov	w10, #0x1                   	// #1
  40d140:	eor	w9, w9, #0x1
  40d144:	eor	w9, w9, w10
  40d148:	eor	w9, w9, w10
  40d14c:	and	w9, w9, #0x1
  40d150:	mov	w0, w9
  40d154:	sxtw	x8, w0
  40d158:	cbz	x8, 40d180 <clock_supported@plt+0x8e88>
  40d15c:	mov	w8, wzr
  40d160:	mov	w0, w8
  40d164:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40d168:	add	x1, x1, #0x89b
  40d16c:	ldr	x2, [sp, #64]
  40d170:	mov	w3, #0x387                 	// #903
  40d174:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40d178:	add	x4, x4, #0x3cb
  40d17c:	bl	403958 <log_assert_failed_realm@plt>
  40d180:	ldur	x3, [x29, #-16]
  40d184:	sub	x0, x29, #0x30
  40d188:	mov	x1, #0x1                   	// #1
  40d18c:	mov	x2, #0x8                   	// #8
  40d190:	bl	404168 <fread@plt>
  40d194:	stur	x0, [x29, #-40]
  40d198:	ldur	x8, [x29, #-40]
  40d19c:	cbnz	x8, 40d1bc <clock_supported@plt+0x8ec4>
  40d1a0:	ldur	x0, [x29, #-16]
  40d1a4:	bl	404178 <feof@plt>
  40d1a8:	cbz	w0, 40d1bc <clock_supported@plt+0x8ec4>
  40d1ac:	stur	wzr, [x29, #-4]
  40d1b0:	mov	w8, #0x1                   	// #1
  40d1b4:	stur	w8, [x29, #-56]
  40d1b8:	b	40d304 <clock_supported@plt+0x900c>
  40d1bc:	ldur	x8, [x29, #-40]
  40d1c0:	cmp	x8, #0x8
  40d1c4:	b.eq	40d1dc <clock_supported@plt+0x8ee4>  // b.none
  40d1c8:	mov	w8, #0xffffffb6            	// #-74
  40d1cc:	stur	w8, [x29, #-4]
  40d1d0:	mov	w8, #0x1                   	// #1
  40d1d4:	stur	w8, [x29, #-56]
  40d1d8:	b	40d304 <clock_supported@plt+0x900c>
  40d1dc:	ldur	x0, [x29, #-48]
  40d1e0:	bl	40d31c <clock_supported@plt+0x9024>
  40d1e4:	cmp	x0, #0x1, lsl #12
  40d1e8:	b.cc	40d200 <clock_supported@plt+0x8f08>  // b.lo, b.ul, b.last
  40d1ec:	mov	w8, #0xffffffb6            	// #-74
  40d1f0:	stur	w8, [x29, #-4]
  40d1f4:	mov	w8, #0x1                   	// #1
  40d1f8:	stur	w8, [x29, #-56]
  40d1fc:	b	40d304 <clock_supported@plt+0x900c>
  40d200:	ldur	x0, [x29, #-48]
  40d204:	bl	40d31c <clock_supported@plt+0x9024>
  40d208:	mov	x8, #0x1                   	// #1
  40d20c:	str	x0, [sp, #56]
  40d210:	mov	x0, x8
  40d214:	ldr	x1, [sp, #56]
  40d218:	bl	40d330 <clock_supported@plt+0x9038>
  40d21c:	stur	x0, [x29, #-32]
  40d220:	ldur	x8, [x29, #-32]
  40d224:	cbnz	x8, 40d23c <clock_supported@plt+0x8f44>
  40d228:	mov	w8, #0xfffffff4            	// #-12
  40d22c:	stur	w8, [x29, #-4]
  40d230:	mov	w8, #0x1                   	// #1
  40d234:	stur	w8, [x29, #-56]
  40d238:	b	40d304 <clock_supported@plt+0x900c>
  40d23c:	ldur	x0, [x29, #-32]
  40d240:	ldur	x8, [x29, #-48]
  40d244:	str	x0, [sp, #48]
  40d248:	mov	x0, x8
  40d24c:	bl	40d31c <clock_supported@plt+0x9024>
  40d250:	ldur	x3, [x29, #-16]
  40d254:	ldr	x8, [sp, #48]
  40d258:	str	x0, [sp, #40]
  40d25c:	mov	x0, x8
  40d260:	mov	x1, #0x1                   	// #1
  40d264:	ldr	x2, [sp, #40]
  40d268:	bl	404168 <fread@plt>
  40d26c:	ldur	x8, [x29, #-48]
  40d270:	str	x0, [sp, #32]
  40d274:	mov	x0, x8
  40d278:	bl	40d31c <clock_supported@plt+0x9024>
  40d27c:	ldr	x8, [sp, #32]
  40d280:	cmp	x8, x0
  40d284:	b.eq	40d29c <clock_supported@plt+0x8fa4>  // b.none
  40d288:	mov	w8, #0xffffffb6            	// #-74
  40d28c:	stur	w8, [x29, #-4]
  40d290:	mov	w8, #0x1                   	// #1
  40d294:	stur	w8, [x29, #-56]
  40d298:	b	40d304 <clock_supported@plt+0x900c>
  40d29c:	ldur	x0, [x29, #-24]
  40d2a0:	ldur	x1, [x29, #-32]
  40d2a4:	ldur	x8, [x29, #-48]
  40d2a8:	str	x0, [sp, #24]
  40d2ac:	mov	x0, x8
  40d2b0:	str	x1, [sp, #16]
  40d2b4:	bl	40d31c <clock_supported@plt+0x9024>
  40d2b8:	ldr	x8, [sp, #24]
  40d2bc:	str	x0, [sp, #8]
  40d2c0:	mov	x0, x8
  40d2c4:	ldr	x1, [sp, #16]
  40d2c8:	ldr	x2, [sp, #8]
  40d2cc:	bl	410d18 <clock_supported@plt+0xca20>
  40d2d0:	stur	w0, [x29, #-52]
  40d2d4:	ldur	w9, [x29, #-52]
  40d2d8:	cmp	w9, #0x0
  40d2dc:	cset	w9, ge  // ge = tcont
  40d2e0:	tbnz	w9, #0, 40d2f8 <clock_supported@plt+0x9000>
  40d2e4:	ldur	w8, [x29, #-52]
  40d2e8:	stur	w8, [x29, #-4]
  40d2ec:	mov	w8, #0x1                   	// #1
  40d2f0:	stur	w8, [x29, #-56]
  40d2f4:	b	40d304 <clock_supported@plt+0x900c>
  40d2f8:	mov	w8, #0x1                   	// #1
  40d2fc:	stur	w8, [x29, #-4]
  40d300:	stur	w8, [x29, #-56]
  40d304:	sub	x0, x29, #0x20
  40d308:	bl	404a10 <clock_supported@plt+0x718>
  40d30c:	ldur	w0, [x29, #-4]
  40d310:	ldp	x29, x30, [sp, #128]
  40d314:	add	sp, sp, #0x90
  40d318:	ret
  40d31c:	sub	sp, sp, #0x10
  40d320:	str	x0, [sp, #8]
  40d324:	ldr	x0, [sp, #8]
  40d328:	add	sp, sp, #0x10
  40d32c:	ret
  40d330:	sub	sp, sp, #0x40
  40d334:	stp	x29, x30, [sp, #48]
  40d338:	add	x29, sp, #0x30
  40d33c:	stur	x0, [x29, #-16]
  40d340:	str	x1, [sp, #24]
  40d344:	ldur	x0, [x29, #-16]
  40d348:	ldr	x1, [sp, #24]
  40d34c:	bl	40d3ac <clock_supported@plt+0x90b4>
  40d350:	tbnz	w0, #0, 40d358 <clock_supported@plt+0x9060>
  40d354:	b	40d364 <clock_supported@plt+0x906c>
  40d358:	mov	x8, xzr
  40d35c:	stur	x8, [x29, #-8]
  40d360:	b	40d39c <clock_supported@plt+0x90a4>
  40d364:	ldur	x8, [x29, #-16]
  40d368:	ldr	x9, [sp, #24]
  40d36c:	mul	x8, x8, x9
  40d370:	str	x8, [sp, #16]
  40d374:	cbz	x8, 40d384 <clock_supported@plt+0x908c>
  40d378:	ldr	x8, [sp, #16]
  40d37c:	str	x8, [sp, #8]
  40d380:	b	40d38c <clock_supported@plt+0x9094>
  40d384:	mov	x8, #0x1                   	// #1
  40d388:	str	x8, [sp, #8]
  40d38c:	ldr	x8, [sp, #8]
  40d390:	mov	x0, x8
  40d394:	bl	404188 <malloc@plt>
  40d398:	stur	x0, [x29, #-8]
  40d39c:	ldur	x0, [x29, #-8]
  40d3a0:	ldp	x29, x30, [sp, #48]
  40d3a4:	add	sp, sp, #0x40
  40d3a8:	ret
  40d3ac:	sub	sp, sp, #0x20
  40d3b0:	str	x0, [sp, #24]
  40d3b4:	str	x1, [sp, #16]
  40d3b8:	ldr	x8, [sp, #16]
  40d3bc:	mov	w9, #0x0                   	// #0
  40d3c0:	str	w9, [sp, #12]
  40d3c4:	cbz	x8, 40d3e4 <clock_supported@plt+0x90ec>
  40d3c8:	ldr	x8, [sp, #24]
  40d3cc:	ldr	x9, [sp, #16]
  40d3d0:	mov	x10, #0xffffffffffffffff    	// #-1
  40d3d4:	udiv	x9, x10, x9
  40d3d8:	cmp	x8, x9
  40d3dc:	cset	w11, hi  // hi = pmore
  40d3e0:	str	w11, [sp, #12]
  40d3e4:	ldr	w8, [sp, #12]
  40d3e8:	mov	w9, #0x1                   	// #1
  40d3ec:	eor	w8, w8, #0x1
  40d3f0:	eor	w8, w8, w9
  40d3f4:	and	w8, w8, #0x1
  40d3f8:	mov	w0, w8
  40d3fc:	sxtw	x10, w0
  40d400:	cmp	x10, #0x0
  40d404:	cset	w8, ne  // ne = any
  40d408:	and	w0, w8, #0x1
  40d40c:	add	sp, sp, #0x20
  40d410:	ret
  40d414:	sub	sp, sp, #0x40
  40d418:	stp	x29, x30, [sp, #48]
  40d41c:	add	x29, sp, #0x30
  40d420:	stur	x0, [x29, #-8]
  40d424:	stur	x1, [x29, #-16]
  40d428:	stur	w2, [x29, #-20]
  40d42c:	ldur	x0, [x29, #-8]
  40d430:	ldur	x8, [x29, #-8]
  40d434:	str	x0, [sp, #16]
  40d438:	mov	x0, x8
  40d43c:	bl	404198 <strlen@plt>
  40d440:	ldur	x2, [x29, #-16]
  40d444:	ldur	w3, [x29, #-20]
  40d448:	ldr	x8, [sp, #16]
  40d44c:	str	x0, [sp, #8]
  40d450:	mov	x0, x8
  40d454:	ldr	x1, [sp, #8]
  40d458:	bl	4041a8 <ellipsize_mem@plt>
  40d45c:	ldp	x29, x30, [sp, #48]
  40d460:	add	sp, sp, #0x40
  40d464:	ret
  40d468:	sub	sp, sp, #0x30
  40d46c:	stp	x29, x30, [sp, #32]
  40d470:	add	x29, sp, #0x20
  40d474:	mov	x8, #0x1                   	// #1
  40d478:	mov	x1, #0xc                   	// #12
  40d47c:	sturh	w0, [x29, #-10]
  40d480:	mov	x0, x8
  40d484:	bl	40d330 <clock_supported@plt+0x9038>
  40d488:	str	x0, [sp, #8]
  40d48c:	ldr	x8, [sp, #8]
  40d490:	cbnz	x8, 40d4a0 <clock_supported@plt+0x91a8>
  40d494:	mov	x8, xzr
  40d498:	stur	x8, [x29, #-8]
  40d49c:	b	40d538 <clock_supported@plt+0x9240>
  40d4a0:	str	wzr, [sp, #4]
  40d4a4:	ldr	w8, [sp, #4]
  40d4a8:	mov	w9, w8
  40d4ac:	cmp	x9, #0xb
  40d4b0:	b.cs	40d518 <clock_supported@plt+0x9220>  // b.hs, b.nlast
  40d4b4:	ldurh	w8, [x29, #-10]
  40d4b8:	ldr	w9, [sp, #4]
  40d4bc:	mov	w10, #0x1                   	// #1
  40d4c0:	lsl	w9, w10, w9
  40d4c4:	and	w8, w8, w9
  40d4c8:	cbz	w8, 40d4e8 <clock_supported@plt+0x91f0>
  40d4cc:	ldr	w8, [sp, #4]
  40d4d0:	mov	w9, w8
  40d4d4:	adrp	x10, 412000 <clock_supported@plt+0xdd08>
  40d4d8:	add	x10, x10, #0x280
  40d4dc:	ldrb	w8, [x10, x9]
  40d4e0:	str	w8, [sp]
  40d4e4:	b	40d4f0 <clock_supported@plt+0x91f8>
  40d4e8:	mov	w8, #0x2e                  	// #46
  40d4ec:	str	w8, [sp]
  40d4f0:	ldr	w8, [sp]
  40d4f4:	ldr	x9, [sp, #8]
  40d4f8:	ldr	w10, [sp, #4]
  40d4fc:	mov	w11, w10
  40d500:	add	x9, x9, x11
  40d504:	strb	w8, [x9]
  40d508:	ldr	w8, [sp, #4]
  40d50c:	add	w8, w8, #0x1
  40d510:	str	w8, [sp, #4]
  40d514:	b	40d4a4 <clock_supported@plt+0x91ac>
  40d518:	ldr	x8, [sp, #8]
  40d51c:	ldr	w9, [sp, #4]
  40d520:	mov	w10, w9
  40d524:	add	x8, x8, x10
  40d528:	mov	w9, #0x0                   	// #0
  40d52c:	strb	w9, [x8]
  40d530:	ldr	x8, [sp, #8]
  40d534:	stur	x8, [x29, #-8]
  40d538:	ldur	x0, [x29, #-8]
  40d53c:	ldp	x29, x30, [sp, #32]
  40d540:	add	sp, sp, #0x30
  40d544:	ret
  40d548:	sub	sp, sp, #0x40
  40d54c:	stp	x29, x30, [sp, #48]
  40d550:	add	x29, sp, #0x30
  40d554:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40d558:	add	x8, x8, #0x6c7
  40d55c:	sturh	w0, [x29, #-2]
  40d560:	str	x8, [sp, #16]
  40d564:	bl	4041b8 <columns@plt>
  40d568:	stur	w0, [x29, #-16]
  40d56c:	ldurh	w9, [x29, #-2]
  40d570:	cbnz	w9, 40d578 <clock_supported@plt+0x9280>
  40d574:	b	40d6bc <clock_supported@plt+0x93c4>
  40d578:	adrp	x0, 413000 <clock_supported@plt+0xed08>
  40d57c:	add	x0, x0, #0x691
  40d580:	bl	4039e8 <printf@plt>
  40d584:	stur	wzr, [x29, #-8]
  40d588:	stur	wzr, [x29, #-12]
  40d58c:	ldur	w8, [x29, #-12]
  40d590:	mov	w9, w8
  40d594:	cmp	x9, #0xb
  40d598:	b.cs	40d6b4 <clock_supported@plt+0x93bc>  // b.hs, b.nlast
  40d59c:	ldurh	w8, [x29, #-2]
  40d5a0:	ldur	w9, [x29, #-12]
  40d5a4:	mov	w10, #0x1                   	// #1
  40d5a8:	lsl	w9, w10, w9
  40d5ac:	and	w8, w8, w9
  40d5b0:	cbnz	w8, 40d5c8 <clock_supported@plt+0x92d0>
  40d5b4:	adrp	x8, 430000 <clock_supported@plt+0x2bd08>
  40d5b8:	add	x8, x8, #0x40
  40d5bc:	ldrb	w9, [x8]
  40d5c0:	tbnz	w9, #0, 40d5c8 <clock_supported@plt+0x92d0>
  40d5c4:	b	40d6a4 <clock_supported@plt+0x93ac>
  40d5c8:	ldur	w8, [x29, #-8]
  40d5cc:	mov	w9, w8
  40d5d0:	ldur	w8, [x29, #-12]
  40d5d4:	mov	w10, w8
  40d5d8:	mov	x11, #0x8                   	// #8
  40d5dc:	mul	x10, x11, x10
  40d5e0:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40d5e4:	add	x11, x11, #0x290
  40d5e8:	add	x10, x11, x10
  40d5ec:	ldr	x0, [x10]
  40d5f0:	str	x9, [sp, #8]
  40d5f4:	bl	404198 <strlen@plt>
  40d5f8:	ldr	x9, [sp, #8]
  40d5fc:	add	x10, x9, x0
  40d600:	ldur	w8, [x29, #-8]
  40d604:	mov	w12, wzr
  40d608:	mov	w13, #0x2                   	// #2
  40d60c:	cmp	w8, #0x0
  40d610:	csel	w8, w12, w13, eq  // eq = none
  40d614:	add	x10, x10, w8, sxtw
  40d618:	ldur	w8, [x29, #-16]
  40d61c:	mov	w11, w8
  40d620:	cmp	x10, x11
  40d624:	cset	w8, hi  // hi = pmore
  40d628:	and	w8, w8, #0x1
  40d62c:	sturb	w8, [x29, #-17]
  40d630:	ldurb	w8, [x29, #-17]
  40d634:	tbnz	w8, #0, 40d63c <clock_supported@plt+0x9344>
  40d638:	b	40d640 <clock_supported@plt+0x9348>
  40d63c:	stur	wzr, [x29, #-8]
  40d640:	ldurb	w8, [x29, #-17]
  40d644:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40d648:	add	x9, x9, #0x6ac
  40d64c:	tst	w8, #0x1
  40d650:	ldr	x10, [sp, #16]
  40d654:	csel	x1, x9, x10, ne  // ne = any
  40d658:	ldur	w8, [x29, #-8]
  40d65c:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40d660:	add	x9, x9, #0x6ae
  40d664:	cmp	w8, #0x0
  40d668:	csel	x2, x10, x9, eq  // eq = none
  40d66c:	ldur	w8, [x29, #-12]
  40d670:	mov	w9, w8
  40d674:	mov	x11, #0x8                   	// #8
  40d678:	mul	x9, x11, x9
  40d67c:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40d680:	add	x11, x11, #0x290
  40d684:	add	x9, x11, x9
  40d688:	ldr	x3, [x9]
  40d68c:	adrp	x0, 413000 <clock_supported@plt+0xed08>
  40d690:	add	x0, x0, #0x6a5
  40d694:	bl	4039e8 <printf@plt>
  40d698:	ldur	w8, [x29, #-8]
  40d69c:	add	w8, w8, w0
  40d6a0:	stur	w8, [x29, #-8]
  40d6a4:	ldur	w8, [x29, #-12]
  40d6a8:	add	w8, w8, #0x1
  40d6ac:	stur	w8, [x29, #-12]
  40d6b0:	b	40d58c <clock_supported@plt+0x9294>
  40d6b4:	ldr	x0, [sp, #16]
  40d6b8:	bl	4041c8 <puts@plt>
  40d6bc:	ldp	x29, x30, [sp, #48]
  40d6c0:	add	sp, sp, #0x40
  40d6c4:	ret
  40d6c8:	sub	sp, sp, #0xd0
  40d6cc:	stp	x29, x30, [sp, #192]
  40d6d0:	add	x29, sp, #0xc0
  40d6d4:	mov	x8, xzr
  40d6d8:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40d6dc:	add	x9, x9, #0x31c
  40d6e0:	add	x9, x9, #0x3
  40d6e4:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  40d6e8:	add	x10, x10, #0x6eb
  40d6ec:	adrp	x11, 413000 <clock_supported@plt+0xed08>
  40d6f0:	add	x11, x11, #0x6c5
  40d6f4:	stur	x0, [x29, #-16]
  40d6f8:	stur	x8, [x29, #-24]
  40d6fc:	stur	x8, [x29, #-32]
  40d700:	stur	x8, [x29, #-40]
  40d704:	str	x9, [sp, #40]
  40d708:	str	x10, [sp, #32]
  40d70c:	str	x11, [sp, #24]
  40d710:	ldur	x8, [x29, #-16]
  40d714:	cmp	x8, #0x0
  40d718:	cset	w9, ne  // ne = any
  40d71c:	mov	w10, #0x1                   	// #1
  40d720:	eor	w9, w9, #0x1
  40d724:	eor	w9, w9, w10
  40d728:	eor	w9, w9, w10
  40d72c:	and	w9, w9, #0x1
  40d730:	mov	w0, w9
  40d734:	sxtw	x8, w0
  40d738:	cbz	x8, 40d75c <clock_supported@plt+0x9464>
  40d73c:	mov	w8, wzr
  40d740:	mov	w0, w8
  40d744:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40d748:	add	x1, x1, #0x852
  40d74c:	ldr	x2, [sp, #40]
  40d750:	mov	w3, #0x31d                 	// #797
  40d754:	ldr	x4, [sp, #24]
  40d758:	bl	403958 <log_assert_failed_realm@plt>
  40d75c:	ldur	x0, [x29, #-16]
  40d760:	sub	x1, x29, #0x18
  40d764:	mov	w2, #0x4a                  	// #74
  40d768:	mov	w8, wzr
  40d76c:	mov	w3, w8
  40d770:	mov	w4, #0xa                   	// #10
  40d774:	bl	4041d8 <sd_rtnl_message_new_addrlabel@plt>
  40d778:	stur	w0, [x29, #-60]
  40d77c:	ldur	w8, [x29, #-60]
  40d780:	cmp	w8, #0x0
  40d784:	cset	w8, ge  // ge = tcont
  40d788:	tbnz	w8, #0, 40d818 <clock_supported@plt+0x9520>
  40d78c:	mov	w8, #0x3                   	// #3
  40d790:	stur	w8, [x29, #-64]
  40d794:	ldur	w8, [x29, #-60]
  40d798:	stur	w8, [x29, #-68]
  40d79c:	stur	wzr, [x29, #-72]
  40d7a0:	ldur	w0, [x29, #-72]
  40d7a4:	bl	403a28 <log_get_max_level_realm@plt>
  40d7a8:	ldur	w8, [x29, #-64]
  40d7ac:	and	w8, w8, #0x7
  40d7b0:	cmp	w0, w8
  40d7b4:	b.lt	40d7e8 <clock_supported@plt+0x94f0>  // b.tstop
  40d7b8:	ldur	w8, [x29, #-72]
  40d7bc:	ldur	w9, [x29, #-64]
  40d7c0:	orr	w0, w9, w8, lsl #10
  40d7c4:	ldur	w1, [x29, #-68]
  40d7c8:	ldr	x2, [sp, #40]
  40d7cc:	mov	w3, #0x321                 	// #801
  40d7d0:	ldr	x4, [sp, #32]
  40d7d4:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40d7d8:	add	x5, x5, #0x6ff
  40d7dc:	bl	403a38 <log_internal_realm@plt>
  40d7e0:	str	w0, [sp, #20]
  40d7e4:	b	40d7fc <clock_supported@plt+0x9504>
  40d7e8:	ldur	w0, [x29, #-68]
  40d7ec:	bl	403a48 <abs@plt>
  40d7f0:	mov	w8, wzr
  40d7f4:	subs	w8, w8, w0, uxtb
  40d7f8:	str	w8, [sp, #20]
  40d7fc:	ldr	w8, [sp, #20]
  40d800:	stur	w8, [x29, #-76]
  40d804:	ldur	w8, [x29, #-76]
  40d808:	stur	w8, [x29, #-4]
  40d80c:	mov	w8, #0x1                   	// #1
  40d810:	stur	w8, [x29, #-80]
  40d814:	b	40dce4 <clock_supported@plt+0x99ec>
  40d818:	ldur	x0, [x29, #-24]
  40d81c:	mov	w1, #0x1                   	// #1
  40d820:	bl	403c08 <sd_netlink_message_request_dump@plt>
  40d824:	stur	w0, [x29, #-60]
  40d828:	ldur	w8, [x29, #-60]
  40d82c:	cmp	w8, #0x0
  40d830:	cset	w8, ge  // ge = tcont
  40d834:	tbnz	w8, #0, 40d84c <clock_supported@plt+0x9554>
  40d838:	ldur	w8, [x29, #-60]
  40d83c:	stur	w8, [x29, #-4]
  40d840:	mov	w8, #0x1                   	// #1
  40d844:	stur	w8, [x29, #-80]
  40d848:	b	40dce4 <clock_supported@plt+0x99ec>
  40d84c:	ldur	x0, [x29, #-16]
  40d850:	ldur	x1, [x29, #-24]
  40d854:	mov	x8, xzr
  40d858:	mov	x2, x8
  40d85c:	sub	x3, x29, #0x20
  40d860:	bl	403c18 <sd_netlink_call@plt>
  40d864:	stur	w0, [x29, #-60]
  40d868:	ldur	w9, [x29, #-60]
  40d86c:	cmp	w9, #0x0
  40d870:	cset	w9, ge  // ge = tcont
  40d874:	tbnz	w9, #0, 40d88c <clock_supported@plt+0x9594>
  40d878:	ldur	w8, [x29, #-60]
  40d87c:	stur	w8, [x29, #-4]
  40d880:	mov	w8, #0x1                   	// #1
  40d884:	stur	w8, [x29, #-80]
  40d888:	b	40dce4 <clock_supported@plt+0x99ec>
  40d88c:	adrp	x0, 412000 <clock_supported@plt+0xdd08>
  40d890:	add	x0, x0, #0x73e
  40d894:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40d898:	add	x1, x1, #0x72f
  40d89c:	mov	x8, xzr
  40d8a0:	mov	x2, x8
  40d8a4:	bl	403a68 <table_new_internal@plt>
  40d8a8:	stur	x0, [x29, #-40]
  40d8ac:	ldur	x8, [x29, #-40]
  40d8b0:	cbnz	x8, 40d8c8 <clock_supported@plt+0x95d0>
  40d8b4:	mov	w8, #0xfffffff4            	// #-12
  40d8b8:	stur	w8, [x29, #-4]
  40d8bc:	mov	w8, #0x1                   	// #1
  40d8c0:	stur	w8, [x29, #-80]
  40d8c4:	b	40dce4 <clock_supported@plt+0x99ec>
  40d8c8:	ldur	x0, [x29, #-40]
  40d8cc:	mov	x8, xzr
  40d8d0:	mov	x1, x8
  40d8d4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d8d8:	bl	4041e8 <table_set_sort@plt>
  40d8dc:	stur	w0, [x29, #-60]
  40d8e0:	ldur	w9, [x29, #-60]
  40d8e4:	cmp	w9, #0x0
  40d8e8:	cset	w9, ge  // ge = tcont
  40d8ec:	tbnz	w9, #0, 40d904 <clock_supported@plt+0x960c>
  40d8f0:	ldur	w8, [x29, #-60]
  40d8f4:	stur	w8, [x29, #-4]
  40d8f8:	mov	w8, #0x1                   	// #1
  40d8fc:	stur	w8, [x29, #-80]
  40d900:	b	40dce4 <clock_supported@plt+0x99ec>
  40d904:	ldur	x0, [x29, #-40]
  40d908:	mov	x8, xzr
  40d90c:	mov	x1, x8
  40d910:	mov	x2, x8
  40d914:	bl	403a88 <table_get_cell@plt>
  40d918:	stur	x0, [x29, #-56]
  40d91c:	cmp	x0, #0x0
  40d920:	cset	w9, ne  // ne = any
  40d924:	mov	w10, #0x1                   	// #1
  40d928:	eor	w9, w9, #0x1
  40d92c:	eor	w9, w9, w10
  40d930:	eor	w9, w9, w10
  40d934:	and	w9, w9, #0x1
  40d938:	mov	w0, w9
  40d93c:	sxtw	x8, w0
  40d940:	cbz	x8, 40d964 <clock_supported@plt+0x966c>
  40d944:	mov	w8, wzr
  40d948:	mov	w0, w8
  40d94c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40d950:	add	x1, x1, #0x7b0
  40d954:	ldr	x2, [sp, #40]
  40d958:	mov	w3, #0x333                 	// #819
  40d95c:	ldr	x4, [sp, #24]
  40d960:	bl	403958 <log_assert_failed_realm@plt>
  40d964:	ldur	x0, [x29, #-40]
  40d968:	ldur	x1, [x29, #-56]
  40d96c:	mov	w8, #0x64                  	// #100
  40d970:	mov	w2, w8
  40d974:	str	w8, [sp, #16]
  40d978:	bl	403ac8 <table_set_align_percent@plt>
  40d97c:	ldur	x9, [x29, #-40]
  40d980:	ldur	x1, [x29, #-56]
  40d984:	mov	x0, x9
  40d988:	ldr	w2, [sp, #16]
  40d98c:	bl	403ab8 <table_set_ellipsize_percent@plt>
  40d990:	ldur	x0, [x29, #-40]
  40d994:	mov	x8, xzr
  40d998:	mov	x1, x8
  40d99c:	mov	x2, #0x1                   	// #1
  40d9a0:	bl	403a88 <table_get_cell@plt>
  40d9a4:	stur	x0, [x29, #-56]
  40d9a8:	cmp	x0, #0x0
  40d9ac:	cset	w9, ne  // ne = any
  40d9b0:	mov	w10, #0x1                   	// #1
  40d9b4:	eor	w9, w9, #0x1
  40d9b8:	eor	w9, w9, w10
  40d9bc:	eor	w9, w9, w10
  40d9c0:	and	w9, w9, #0x1
  40d9c4:	mov	w0, w9
  40d9c8:	sxtw	x8, w0
  40d9cc:	cbz	x8, 40d9f0 <clock_supported@plt+0x96f8>
  40d9d0:	mov	w8, wzr
  40d9d4:	mov	w0, w8
  40d9d8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40d9dc:	add	x1, x1, #0x7f8
  40d9e0:	ldr	x2, [sp, #40]
  40d9e4:	mov	w3, #0x337                 	// #823
  40d9e8:	ldr	x4, [sp, #24]
  40d9ec:	bl	403958 <log_assert_failed_realm@plt>
  40d9f0:	ldur	x0, [x29, #-40]
  40d9f4:	ldur	x1, [x29, #-56]
  40d9f8:	mov	w2, #0x64                  	// #100
  40d9fc:	bl	403ac8 <table_set_align_percent@plt>
  40da00:	ldur	x8, [x29, #-32]
  40da04:	stur	x8, [x29, #-48]
  40da08:	ldur	x8, [x29, #-48]
  40da0c:	cbz	x8, 40dcc8 <clock_supported@plt+0x99d0>
  40da10:	mov	x8, xzr
  40da14:	stur	x8, [x29, #-88]
  40da18:	str	xzr, [sp, #88]
  40da1c:	str	xzr, [sp, #96]
  40da20:	ldur	x0, [x29, #-48]
  40da24:	bl	4040e8 <sd_netlink_message_get_errno@plt>
  40da28:	stur	w0, [x29, #-60]
  40da2c:	ldur	w9, [x29, #-60]
  40da30:	cmp	w9, #0x0
  40da34:	cset	w9, ge  // ge = tcont
  40da38:	tbnz	w9, #0, 40dac0 <clock_supported@plt+0x97c8>
  40da3c:	mov	w8, #0x3                   	// #3
  40da40:	str	w8, [sp, #76]
  40da44:	ldur	w8, [x29, #-60]
  40da48:	str	w8, [sp, #72]
  40da4c:	str	wzr, [sp, #68]
  40da50:	ldr	w0, [sp, #68]
  40da54:	bl	403a28 <log_get_max_level_realm@plt>
  40da58:	ldr	w8, [sp, #76]
  40da5c:	and	w8, w8, #0x7
  40da60:	cmp	w0, w8
  40da64:	b.lt	40da98 <clock_supported@plt+0x97a0>  // b.tstop
  40da68:	ldr	w8, [sp, #68]
  40da6c:	ldr	w9, [sp, #76]
  40da70:	orr	w0, w9, w8, lsl #10
  40da74:	ldr	w1, [sp, #72]
  40da78:	ldr	x2, [sp, #40]
  40da7c:	mov	w3, #0x342                 	// #834
  40da80:	ldr	x4, [sp, #32]
  40da84:	adrp	x5, 412000 <clock_supported@plt+0xdd08>
  40da88:	add	x5, x5, #0xf26
  40da8c:	bl	403a38 <log_internal_realm@plt>
  40da90:	str	w0, [sp, #12]
  40da94:	b	40daac <clock_supported@plt+0x97b4>
  40da98:	ldr	w0, [sp, #72]
  40da9c:	bl	403a48 <abs@plt>
  40daa0:	mov	w8, wzr
  40daa4:	subs	w8, w8, w0, uxtb
  40daa8:	str	w8, [sp, #12]
  40daac:	ldr	w8, [sp, #12]
  40dab0:	str	w8, [sp, #64]
  40dab4:	mov	w8, #0xa                   	// #10
  40dab8:	stur	w8, [x29, #-80]
  40dabc:	b	40dc90 <clock_supported@plt+0x9998>
  40dac0:	ldur	x0, [x29, #-48]
  40dac4:	mov	w1, #0x2                   	// #2
  40dac8:	add	x2, sp, #0x50
  40dacc:	bl	403d58 <sd_netlink_message_read_u32@plt>
  40dad0:	stur	w0, [x29, #-60]
  40dad4:	ldur	w8, [x29, #-60]
  40dad8:	cmp	w8, #0x0
  40dadc:	cset	w8, ge  // ge = tcont
  40dae0:	tbnz	w8, #0, 40db78 <clock_supported@plt+0x9880>
  40dae4:	ldur	w8, [x29, #-60]
  40dae8:	mov	w9, #0xffffffc3            	// #-61
  40daec:	cmp	w8, w9
  40daf0:	b.eq	40db78 <clock_supported@plt+0x9880>  // b.none
  40daf4:	mov	w8, #0x3                   	// #3
  40daf8:	str	w8, [sp, #60]
  40dafc:	ldur	w8, [x29, #-60]
  40db00:	str	w8, [sp, #56]
  40db04:	str	wzr, [sp, #52]
  40db08:	ldr	w0, [sp, #52]
  40db0c:	bl	403a28 <log_get_max_level_realm@plt>
  40db10:	ldr	w8, [sp, #60]
  40db14:	and	w8, w8, #0x7
  40db18:	cmp	w0, w8
  40db1c:	b.lt	40db50 <clock_supported@plt+0x9858>  // b.tstop
  40db20:	ldr	w8, [sp, #52]
  40db24:	ldr	w9, [sp, #60]
  40db28:	orr	w0, w9, w8, lsl #10
  40db2c:	ldr	w1, [sp, #56]
  40db30:	ldr	x2, [sp, #40]
  40db34:	mov	w3, #0x348                 	// #840
  40db38:	ldr	x4, [sp, #32]
  40db3c:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40db40:	add	x5, x5, #0x740
  40db44:	bl	403a38 <log_internal_realm@plt>
  40db48:	str	w0, [sp, #8]
  40db4c:	b	40db64 <clock_supported@plt+0x986c>
  40db50:	ldr	w0, [sp, #56]
  40db54:	bl	403a48 <abs@plt>
  40db58:	mov	w8, wzr
  40db5c:	subs	w8, w8, w0, uxtb
  40db60:	str	w8, [sp, #8]
  40db64:	ldr	w8, [sp, #8]
  40db68:	str	w8, [sp, #48]
  40db6c:	mov	w8, #0xa                   	// #10
  40db70:	stur	w8, [x29, #-80]
  40db74:	b	40dc90 <clock_supported@plt+0x9998>
  40db78:	ldur	x0, [x29, #-48]
  40db7c:	mov	w1, #0x1                   	// #1
  40db80:	add	x2, sp, #0x58
  40db84:	bl	403e98 <sd_netlink_message_read_in6_addr@plt>
  40db88:	stur	w0, [x29, #-60]
  40db8c:	ldur	w8, [x29, #-60]
  40db90:	cmp	w8, #0x0
  40db94:	cset	w8, ge  // ge = tcont
  40db98:	tbnz	w8, #0, 40dba8 <clock_supported@plt+0x98b0>
  40db9c:	mov	w8, #0xa                   	// #10
  40dba0:	stur	w8, [x29, #-80]
  40dba4:	b	40dc90 <clock_supported@plt+0x9998>
  40dba8:	mov	w0, #0xa                   	// #10
  40dbac:	add	x1, sp, #0x58
  40dbb0:	sub	x2, x29, #0x58
  40dbb4:	bl	404098 <in_addr_to_string@plt>
  40dbb8:	stur	w0, [x29, #-60]
  40dbbc:	ldur	w8, [x29, #-60]
  40dbc0:	cmp	w8, #0x0
  40dbc4:	cset	w8, ge  // ge = tcont
  40dbc8:	tbnz	w8, #0, 40dbd8 <clock_supported@plt+0x98e0>
  40dbcc:	mov	w8, #0xa                   	// #10
  40dbd0:	stur	w8, [x29, #-80]
  40dbd4:	b	40dc90 <clock_supported@plt+0x9998>
  40dbd8:	ldur	x0, [x29, #-48]
  40dbdc:	add	x1, sp, #0x57
  40dbe0:	bl	4041f8 <sd_rtnl_message_addrlabel_get_prefixlen@plt>
  40dbe4:	stur	w0, [x29, #-60]
  40dbe8:	ldur	w8, [x29, #-60]
  40dbec:	cmp	w8, #0x0
  40dbf0:	cset	w8, ge  // ge = tcont
  40dbf4:	tbnz	w8, #0, 40dc04 <clock_supported@plt+0x990c>
  40dbf8:	mov	w8, #0xa                   	// #10
  40dbfc:	stur	w8, [x29, #-80]
  40dc00:	b	40dc90 <clock_supported@plt+0x9998>
  40dc04:	ldur	x0, [x29, #-40]
  40dc08:	mov	x8, xzr
  40dc0c:	mov	x1, x8
  40dc10:	mov	w2, #0x12                  	// #18
  40dc14:	add	x3, sp, #0x50
  40dc18:	bl	40b5c4 <clock_supported@plt+0x72cc>
  40dc1c:	stur	w0, [x29, #-60]
  40dc20:	ldur	w9, [x29, #-60]
  40dc24:	cmp	w9, #0x0
  40dc28:	cset	w9, ge  // ge = tcont
  40dc2c:	tbnz	w9, #0, 40dc44 <clock_supported@plt+0x994c>
  40dc30:	ldur	w8, [x29, #-60]
  40dc34:	stur	w8, [x29, #-4]
  40dc38:	mov	w8, #0x1                   	// #1
  40dc3c:	stur	w8, [x29, #-80]
  40dc40:	b	40dc90 <clock_supported@plt+0x9998>
  40dc44:	ldur	x0, [x29, #-40]
  40dc48:	ldur	x3, [x29, #-88]
  40dc4c:	ldrb	w4, [sp, #87]
  40dc50:	mov	x8, xzr
  40dc54:	mov	x1, x8
  40dc58:	adrp	x2, 413000 <clock_supported@plt+0xed08>
  40dc5c:	add	x2, x2, #0x768
  40dc60:	bl	403fe8 <table_add_cell_stringf@plt>
  40dc64:	stur	w0, [x29, #-60]
  40dc68:	ldur	w9, [x29, #-60]
  40dc6c:	cmp	w9, #0x0
  40dc70:	cset	w9, ge  // ge = tcont
  40dc74:	tbnz	w9, #0, 40dc8c <clock_supported@plt+0x9994>
  40dc78:	ldur	w8, [x29, #-60]
  40dc7c:	stur	w8, [x29, #-4]
  40dc80:	mov	w8, #0x1                   	// #1
  40dc84:	stur	w8, [x29, #-80]
  40dc88:	b	40dc90 <clock_supported@plt+0x9998>
  40dc8c:	stur	wzr, [x29, #-80]
  40dc90:	sub	x0, x29, #0x58
  40dc94:	bl	404a10 <clock_supported@plt+0x718>
  40dc98:	ldur	w8, [x29, #-80]
  40dc9c:	str	w8, [sp, #4]
  40dca0:	cbz	w8, 40dcb8 <clock_supported@plt+0x99c0>
  40dca4:	b	40dca8 <clock_supported@plt+0x99b0>
  40dca8:	ldr	w8, [sp, #4]
  40dcac:	cmp	w8, #0xa
  40dcb0:	b.eq	40dcb8 <clock_supported@plt+0x99c0>  // b.none
  40dcb4:	b	40dce4 <clock_supported@plt+0x99ec>
  40dcb8:	ldur	x0, [x29, #-48]
  40dcbc:	bl	403c58 <sd_netlink_message_next@plt>
  40dcc0:	stur	x0, [x29, #-48]
  40dcc4:	b	40da08 <clock_supported@plt+0x9710>
  40dcc8:	ldur	x0, [x29, #-40]
  40dccc:	mov	x8, xzr
  40dcd0:	mov	x1, x8
  40dcd4:	bl	403b18 <table_print@plt>
  40dcd8:	stur	w0, [x29, #-4]
  40dcdc:	mov	w9, #0x1                   	// #1
  40dce0:	stur	w9, [x29, #-80]
  40dce4:	sub	x0, x29, #0x28
  40dce8:	bl	406d30 <clock_supported@plt+0x2a38>
  40dcec:	sub	x0, x29, #0x20
  40dcf0:	bl	407798 <clock_supported@plt+0x34a0>
  40dcf4:	sub	x0, x29, #0x18
  40dcf8:	bl	407798 <clock_supported@plt+0x34a0>
  40dcfc:	ldur	w0, [x29, #-4]
  40dd00:	ldp	x29, x30, [sp, #192]
  40dd04:	add	sp, sp, #0xd0
  40dd08:	ret
  40dd0c:	sub	sp, sp, #0x20
  40dd10:	stp	x29, x30, [sp, #16]
  40dd14:	add	x29, sp, #0x10
  40dd18:	str	x0, [sp, #8]
  40dd1c:	ldr	x8, [sp, #8]
  40dd20:	ldr	x8, [x8]
  40dd24:	cbz	x8, 40dd34 <clock_supported@plt+0x9a3c>
  40dd28:	ldr	x8, [sp, #8]
  40dd2c:	ldr	x0, [x8]
  40dd30:	bl	40de60 <clock_supported@plt+0x9b68>
  40dd34:	ldp	x29, x30, [sp, #16]
  40dd38:	add	sp, sp, #0x20
  40dd3c:	ret
  40dd40:	sub	sp, sp, #0x40
  40dd44:	stp	x29, x30, [sp, #48]
  40dd48:	add	x29, sp, #0x30
  40dd4c:	mov	x8, xzr
  40dd50:	adrp	x9, 412000 <clock_supported@plt+0xdd08>
  40dd54:	add	x9, x9, #0x31c
  40dd58:	add	x2, x9, #0x3
  40dd5c:	stur	x0, [x29, #-16]
  40dd60:	stur	w1, [x29, #-20]
  40dd64:	str	x8, [sp, #16]
  40dd68:	str	x2, [sp]
  40dd6c:	ldur	x8, [x29, #-16]
  40dd70:	cmp	x8, #0x0
  40dd74:	cset	w9, ne  // ne = any
  40dd78:	mov	w10, #0x1                   	// #1
  40dd7c:	eor	w9, w9, #0x1
  40dd80:	eor	w9, w9, w10
  40dd84:	eor	w9, w9, w10
  40dd88:	and	w9, w9, #0x1
  40dd8c:	mov	w0, w9
  40dd90:	sxtw	x8, w0
  40dd94:	cbz	x8, 40ddbc <clock_supported@plt+0x9ac4>
  40dd98:	mov	w8, wzr
  40dd9c:	mov	w0, w8
  40dda0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40dda4:	add	x1, x1, #0x852
  40dda8:	ldr	x2, [sp]
  40ddac:	mov	w3, #0x6ba                 	// #1722
  40ddb0:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40ddb4:	add	x4, x4, #0x7bb
  40ddb8:	bl	403958 <log_assert_failed_realm@plt>
  40ddbc:	ldur	x0, [x29, #-16]
  40ddc0:	ldur	w3, [x29, #-20]
  40ddc4:	add	x1, sp, #0x10
  40ddc8:	mov	w2, #0x11                  	// #17
  40ddcc:	bl	403be8 <sd_rtnl_message_new_link@plt>
  40ddd0:	str	w0, [sp, #12]
  40ddd4:	ldr	w8, [sp, #12]
  40ddd8:	cmp	w8, #0x0
  40dddc:	cset	w8, ge  // ge = tcont
  40dde0:	tbnz	w8, #0, 40ddfc <clock_supported@plt+0x9b04>
  40dde4:	ldr	w0, [sp, #12]
  40dde8:	bl	403bf8 <rtnl_log_create_error@plt>
  40ddec:	stur	w0, [x29, #-4]
  40ddf0:	mov	w8, #0x1                   	// #1
  40ddf4:	str	w8, [sp, #8]
  40ddf8:	b	40de48 <clock_supported@plt+0x9b50>
  40ddfc:	ldur	x0, [x29, #-16]
  40de00:	ldr	x1, [sp, #16]
  40de04:	mov	x8, xzr
  40de08:	mov	x2, x8
  40de0c:	mov	x3, x8
  40de10:	bl	403c18 <sd_netlink_call@plt>
  40de14:	str	w0, [sp, #12]
  40de18:	ldr	w9, [sp, #12]
  40de1c:	cmp	w9, #0x0
  40de20:	cset	w9, ge  // ge = tcont
  40de24:	tbnz	w9, #0, 40de3c <clock_supported@plt+0x9b44>
  40de28:	ldr	w8, [sp, #12]
  40de2c:	stur	w8, [x29, #-4]
  40de30:	mov	w8, #0x1                   	// #1
  40de34:	str	w8, [sp, #8]
  40de38:	b	40de48 <clock_supported@plt+0x9b50>
  40de3c:	stur	wzr, [x29, #-4]
  40de40:	mov	w8, #0x1                   	// #1
  40de44:	str	w8, [sp, #8]
  40de48:	add	x0, sp, #0x10
  40de4c:	bl	407798 <clock_supported@plt+0x34a0>
  40de50:	ldur	w0, [x29, #-4]
  40de54:	ldp	x29, x30, [sp, #48]
  40de58:	add	sp, sp, #0x40
  40de5c:	ret
  40de60:	sub	sp, sp, #0x20
  40de64:	stp	x29, x30, [sp, #16]
  40de68:	add	x29, sp, #0x10
  40de6c:	mov	x8, xzr
  40de70:	str	x0, [sp, #8]
  40de74:	ldr	x0, [sp, #8]
  40de78:	mov	x1, x8
  40de7c:	mov	x2, x8
  40de80:	bl	404208 <internal_hashmap_free@plt>
  40de84:	ldp	x29, x30, [sp, #16]
  40de88:	add	sp, sp, #0x20
  40de8c:	ret
  40de90:	sub	sp, sp, #0x90
  40de94:	stp	x29, x30, [sp, #128]
  40de98:	add	x29, sp, #0x80
  40de9c:	adrp	x8, 412000 <clock_supported@plt+0xdd08>
  40dea0:	add	x8, x8, #0xa96
  40dea4:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40dea8:	add	x9, x9, #0x7f6
  40deac:	adrp	x3, 413000 <clock_supported@plt+0xed08>
  40deb0:	add	x3, x3, #0x810
  40deb4:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40deb8:	add	x4, x4, #0x831
  40debc:	mov	x10, xzr
  40dec0:	adrp	x7, 413000 <clock_supported@plt+0xed08>
  40dec4:	add	x7, x7, #0x83b
  40dec8:	adrp	x11, 412000 <clock_supported@plt+0xdd08>
  40decc:	add	x11, x11, #0x31c
  40ded0:	add	x11, x11, #0x3
  40ded4:	sub	x5, x29, #0x38
  40ded8:	stur	x0, [x29, #-16]
  40dedc:	stur	w1, [x29, #-20]
  40dee0:	stur	x2, [x29, #-32]
  40dee4:	stur	xzr, [x29, #-56]
  40dee8:	stur	xzr, [x29, #-48]
  40deec:	stur	xzr, [x29, #-40]
  40def0:	ldur	x0, [x29, #-16]
  40def4:	ldur	w12, [x29, #-20]
  40def8:	mov	x1, x8
  40defc:	mov	x2, x9
  40df00:	mov	x6, x10
  40df04:	mov	x8, sp
  40df08:	str	w12, [x8]
  40df0c:	str	x11, [sp, #40]
  40df10:	bl	403ba8 <sd_bus_call_method@plt>
  40df14:	stur	w0, [x29, #-60]
  40df18:	ldur	w12, [x29, #-60]
  40df1c:	cmp	w12, #0x0
  40df20:	cset	w12, ge  // ge = tcont
  40df24:	tbnz	w12, #0, 40dff4 <clock_supported@plt+0x9cfc>
  40df28:	mov	w8, #0x3                   	// #3
  40df2c:	str	w8, [sp, #64]
  40df30:	ldur	w8, [x29, #-60]
  40df34:	str	w8, [sp, #60]
  40df38:	str	wzr, [sp, #56]
  40df3c:	ldr	w0, [sp, #56]
  40df40:	bl	403a28 <log_get_max_level_realm@plt>
  40df44:	ldr	w8, [sp, #64]
  40df48:	and	w8, w8, #0x7
  40df4c:	cmp	w0, w8
  40df50:	b.lt	40dfc4 <clock_supported@plt+0x9ccc>  // b.tstop
  40df54:	ldr	w8, [sp, #56]
  40df58:	ldr	w9, [sp, #64]
  40df5c:	orr	w0, w9, w8, lsl #10
  40df60:	ldr	w1, [sp, #60]
  40df64:	ldur	x6, [x29, #-32]
  40df68:	ldur	w8, [x29, #-60]
  40df6c:	sub	x10, x29, #0x38
  40df70:	str	w0, [sp, #36]
  40df74:	mov	x0, x10
  40df78:	str	w1, [sp, #32]
  40df7c:	mov	w1, w8
  40df80:	str	x6, [sp, #24]
  40df84:	bl	403e08 <bus_error_message@plt>
  40df88:	ldr	w8, [sp, #36]
  40df8c:	str	x0, [sp, #16]
  40df90:	mov	w0, w8
  40df94:	ldr	w1, [sp, #32]
  40df98:	ldr	x2, [sp, #40]
  40df9c:	mov	w3, #0x6fd                 	// #1789
  40dfa0:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40dfa4:	add	x4, x4, #0x83d
  40dfa8:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40dfac:	add	x5, x5, #0x84c
  40dfb0:	ldr	x6, [sp, #24]
  40dfb4:	ldr	x7, [sp, #16]
  40dfb8:	bl	403a38 <log_internal_realm@plt>
  40dfbc:	str	w0, [sp, #12]
  40dfc0:	b	40dfd8 <clock_supported@plt+0x9ce0>
  40dfc4:	ldr	w0, [sp, #60]
  40dfc8:	bl	403a48 <abs@plt>
  40dfcc:	mov	w8, wzr
  40dfd0:	subs	w8, w8, w0, uxtb
  40dfd4:	str	w8, [sp, #12]
  40dfd8:	ldr	w8, [sp, #12]
  40dfdc:	str	w8, [sp, #52]
  40dfe0:	ldr	w8, [sp, #52]
  40dfe4:	stur	w8, [x29, #-4]
  40dfe8:	mov	w8, #0x1                   	// #1
  40dfec:	str	w8, [sp, #48]
  40dff0:	b	40e000 <clock_supported@plt+0x9d08>
  40dff4:	stur	wzr, [x29, #-4]
  40dff8:	mov	w8, #0x1                   	// #1
  40dffc:	str	w8, [sp, #48]
  40e000:	sub	x0, x29, #0x38
  40e004:	bl	403bb8 <sd_bus_error_free@plt>
  40e008:	ldur	w0, [x29, #-4]
  40e00c:	ldp	x29, x30, [sp, #128]
  40e010:	add	sp, sp, #0x90
  40e014:	ret
  40e018:	sub	sp, sp, #0x10
  40e01c:	str	x0, [sp, #8]
  40e020:	str	x1, [sp]
  40e024:	ldr	x8, [sp, #8]
  40e028:	ldr	x9, [sp]
  40e02c:	add	x8, x8, x9
  40e030:	subs	x8, x8, #0x1
  40e034:	ldr	x9, [sp]
  40e038:	subs	x9, x9, #0x1
  40e03c:	bic	x0, x8, x9
  40e040:	add	sp, sp, #0x10
  40e044:	ret
  40e048:	sub	sp, sp, #0x30
  40e04c:	stp	x29, x30, [sp, #32]
  40e050:	add	x29, sp, #0x20
  40e054:	stur	x0, [x29, #-8]
  40e058:	str	x1, [sp, #16]
  40e05c:	ldur	x8, [x29, #-8]
  40e060:	ldr	x0, [x8]
  40e064:	ldur	x8, [x29, #-8]
  40e068:	ldr	x1, [x8, #8]
  40e06c:	ldr	x8, [sp, #16]
  40e070:	ldr	x2, [x8]
  40e074:	ldr	x8, [sp, #16]
  40e078:	ldr	x3, [x8, #8]
  40e07c:	bl	40e0d0 <clock_supported@plt+0x9dd8>
  40e080:	str	w0, [sp, #12]
  40e084:	cbz	w0, 40e094 <clock_supported@plt+0x9d9c>
  40e088:	ldr	w8, [sp, #12]
  40e08c:	str	w8, [sp, #8]
  40e090:	b	40e0bc <clock_supported@plt+0x9dc4>
  40e094:	ldur	x8, [x29, #-8]
  40e098:	ldr	x0, [x8, #16]
  40e09c:	ldur	x8, [x29, #-8]
  40e0a0:	ldr	x1, [x8, #24]
  40e0a4:	ldr	x8, [sp, #16]
  40e0a8:	ldr	x2, [x8, #16]
  40e0ac:	ldr	x8, [sp, #16]
  40e0b0:	ldr	x3, [x8, #24]
  40e0b4:	bl	40e0d0 <clock_supported@plt+0x9dd8>
  40e0b8:	str	w0, [sp, #8]
  40e0bc:	ldr	w8, [sp, #8]
  40e0c0:	mov	w0, w8
  40e0c4:	ldp	x29, x30, [sp, #32]
  40e0c8:	add	sp, sp, #0x30
  40e0cc:	ret
  40e0d0:	sub	sp, sp, #0x90
  40e0d4:	stp	x29, x30, [sp, #128]
  40e0d8:	add	x29, sp, #0x80
  40e0dc:	stur	x0, [x29, #-8]
  40e0e0:	stur	x1, [x29, #-16]
  40e0e4:	stur	x2, [x29, #-24]
  40e0e8:	stur	x3, [x29, #-32]
  40e0ec:	ldur	x0, [x29, #-8]
  40e0f0:	ldur	x1, [x29, #-24]
  40e0f4:	ldur	x8, [x29, #-16]
  40e0f8:	stur	x8, [x29, #-40]
  40e0fc:	ldur	x8, [x29, #-32]
  40e100:	stur	x8, [x29, #-48]
  40e104:	ldur	x8, [x29, #-40]
  40e108:	ldur	x9, [x29, #-48]
  40e10c:	cmp	x8, x9
  40e110:	str	x0, [sp, #40]
  40e114:	str	x1, [sp, #32]
  40e118:	b.cs	40e128 <clock_supported@plt+0x9e30>  // b.hs, b.nlast
  40e11c:	ldur	x8, [x29, #-40]
  40e120:	str	x8, [sp, #24]
  40e124:	b	40e130 <clock_supported@plt+0x9e38>
  40e128:	ldur	x8, [x29, #-48]
  40e12c:	str	x8, [sp, #24]
  40e130:	ldr	x8, [sp, #24]
  40e134:	stur	x8, [x29, #-56]
  40e138:	ldur	x2, [x29, #-56]
  40e13c:	ldr	x0, [sp, #40]
  40e140:	ldr	x1, [sp, #32]
  40e144:	bl	411d1c <clock_supported@plt+0xda24>
  40e148:	str	w0, [sp, #20]
  40e14c:	cbz	w0, 40e15c <clock_supported@plt+0x9e64>
  40e150:	ldr	w8, [sp, #20]
  40e154:	str	w8, [sp, #16]
  40e158:	b	40e1b4 <clock_supported@plt+0x9ebc>
  40e15c:	ldur	x8, [x29, #-16]
  40e160:	str	x8, [sp, #64]
  40e164:	ldur	x8, [x29, #-32]
  40e168:	str	x8, [sp, #56]
  40e16c:	ldr	x8, [sp, #64]
  40e170:	ldr	x9, [sp, #56]
  40e174:	cmp	x8, x9
  40e178:	b.cs	40e188 <clock_supported@plt+0x9e90>  // b.hs, b.nlast
  40e17c:	mov	w8, #0xffffffff            	// #-1
  40e180:	str	w8, [sp, #12]
  40e184:	b	40e1a4 <clock_supported@plt+0x9eac>
  40e188:	ldr	x8, [sp, #64]
  40e18c:	ldr	x9, [sp, #56]
  40e190:	mov	w10, #0x1                   	// #1
  40e194:	mov	w11, wzr
  40e198:	cmp	x8, x9
  40e19c:	csel	w10, w10, w11, hi  // hi = pmore
  40e1a0:	str	w10, [sp, #12]
  40e1a4:	ldr	w8, [sp, #12]
  40e1a8:	str	w8, [sp, #52]
  40e1ac:	ldr	w8, [sp, #52]
  40e1b0:	str	w8, [sp, #16]
  40e1b4:	ldr	w8, [sp, #16]
  40e1b8:	mov	w0, w8
  40e1bc:	ldp	x29, x30, [sp, #128]
  40e1c0:	add	sp, sp, #0x90
  40e1c4:	ret
  40e1c8:	sub	sp, sp, #0x30
  40e1cc:	stp	x29, x30, [sp, #32]
  40e1d0:	add	x29, sp, #0x20
  40e1d4:	mov	x8, #0x8                   	// #8
  40e1d8:	stur	x0, [x29, #-8]
  40e1dc:	str	x1, [sp, #16]
  40e1e0:	ldur	x9, [x29, #-8]
  40e1e4:	ldr	x0, [x9]
  40e1e8:	ldur	x9, [x29, #-8]
  40e1ec:	ldr	x1, [x9, #8]
  40e1f0:	ldr	x2, [sp, #16]
  40e1f4:	str	x8, [sp, #8]
  40e1f8:	bl	404218 <siphash24_compress@plt>
  40e1fc:	ldur	x8, [x29, #-8]
  40e200:	add	x0, x8, #0x8
  40e204:	ldr	x2, [sp, #16]
  40e208:	ldr	x1, [sp, #8]
  40e20c:	bl	404218 <siphash24_compress@plt>
  40e210:	ldur	x8, [x29, #-8]
  40e214:	ldr	x0, [x8, #16]
  40e218:	ldur	x8, [x29, #-8]
  40e21c:	ldr	x1, [x8, #24]
  40e220:	ldr	x2, [sp, #16]
  40e224:	bl	404218 <siphash24_compress@plt>
  40e228:	ldur	x8, [x29, #-8]
  40e22c:	add	x0, x8, #0x18
  40e230:	ldr	x2, [sp, #16]
  40e234:	ldr	x1, [sp, #8]
  40e238:	bl	404218 <siphash24_compress@plt>
  40e23c:	ldp	x29, x30, [sp, #32]
  40e240:	add	sp, sp, #0x30
  40e244:	ret
  40e248:	sub	sp, sp, #0x20
  40e24c:	stp	x29, x30, [sp, #16]
  40e250:	add	x29, sp, #0x10
  40e254:	str	x0, [sp, #8]
  40e258:	ldr	x8, [sp, #8]
  40e25c:	str	x8, [sp]
  40e260:	ldr	x0, [sp]
  40e264:	bl	40e578 <clock_supported@plt+0xa280>
  40e268:	ldp	x29, x30, [sp, #16]
  40e26c:	add	sp, sp, #0x20
  40e270:	ret
  40e274:	sub	sp, sp, #0x40
  40e278:	str	x0, [sp, #56]
  40e27c:	str	x1, [sp, #48]
  40e280:	ldr	x8, [sp, #56]
  40e284:	str	x8, [sp, #40]
  40e288:	ldr	x8, [sp, #48]
  40e28c:	str	x8, [sp, #32]
  40e290:	ldr	x8, [sp, #40]
  40e294:	ldr	x8, [x8, #40]
  40e298:	str	x8, [sp, #24]
  40e29c:	ldr	x8, [sp, #32]
  40e2a0:	ldr	x8, [x8, #40]
  40e2a4:	str	x8, [sp, #16]
  40e2a8:	ldr	x8, [sp, #24]
  40e2ac:	ldr	x9, [sp, #16]
  40e2b0:	cmp	x8, x9
  40e2b4:	b.cs	40e2c4 <clock_supported@plt+0x9fcc>  // b.hs, b.nlast
  40e2b8:	mov	w8, #0xffffffff            	// #-1
  40e2bc:	str	w8, [sp, #8]
  40e2c0:	b	40e2e0 <clock_supported@plt+0x9fe8>
  40e2c4:	ldr	x8, [sp, #24]
  40e2c8:	ldr	x9, [sp, #16]
  40e2cc:	mov	w10, wzr
  40e2d0:	mov	w11, #0x1                   	// #1
  40e2d4:	cmp	x8, x9
  40e2d8:	csel	w10, w11, w10, hi  // hi = pmore
  40e2dc:	str	w10, [sp, #8]
  40e2e0:	ldr	w8, [sp, #8]
  40e2e4:	str	w8, [sp, #12]
  40e2e8:	ldr	w0, [sp, #12]
  40e2ec:	add	sp, sp, #0x40
  40e2f0:	ret
  40e2f4:	sub	sp, sp, #0x30
  40e2f8:	stp	x29, x30, [sp, #32]
  40e2fc:	add	x29, sp, #0x20
  40e300:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40e304:	add	x8, x8, #0x927
  40e308:	add	x2, x8, #0x3
  40e30c:	str	x0, [sp, #16]
  40e310:	ldr	x8, [sp, #16]
  40e314:	str	x2, [sp, #8]
  40e318:	cbnz	x8, 40e328 <clock_supported@plt+0xa030>
  40e31c:	mov	x8, xzr
  40e320:	stur	x8, [x29, #-8]
  40e324:	b	40e3b8 <clock_supported@plt+0xa0c0>
  40e328:	ldr	x8, [sp, #16]
  40e32c:	ldr	w9, [x8, #8]
  40e330:	cmp	w9, #0x0
  40e334:	cset	w9, hi  // hi = pmore
  40e338:	mov	w10, #0x1                   	// #1
  40e33c:	str	w10, [sp, #4]
  40e340:	tbnz	w9, #0, 40e358 <clock_supported@plt+0xa060>
  40e344:	ldr	x8, [sp, #16]
  40e348:	ldr	x8, [x8]
  40e34c:	cmp	x8, #0x0
  40e350:	cset	w9, ne  // ne = any
  40e354:	str	w9, [sp, #4]
  40e358:	ldr	w8, [sp, #4]
  40e35c:	mov	w9, #0x1                   	// #1
  40e360:	eor	w8, w8, #0x1
  40e364:	eor	w8, w8, w9
  40e368:	eor	w8, w8, w9
  40e36c:	and	w8, w8, #0x1
  40e370:	mov	w0, w8
  40e374:	sxtw	x10, w0
  40e378:	cbz	x10, 40e3a0 <clock_supported@plt+0xa0a8>
  40e37c:	mov	w8, wzr
  40e380:	mov	w0, w8
  40e384:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40e388:	add	x1, x1, #0x90f
  40e38c:	ldr	x2, [sp, #8]
  40e390:	mov	w3, #0x27                  	// #39
  40e394:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40e398:	add	x4, x4, #0x951
  40e39c:	bl	403958 <log_assert_failed_realm@plt>
  40e3a0:	ldr	x8, [sp, #16]
  40e3a4:	ldr	w9, [x8, #8]
  40e3a8:	add	w9, w9, #0x1
  40e3ac:	str	w9, [x8, #8]
  40e3b0:	ldr	x8, [sp, #16]
  40e3b4:	stur	x8, [x29, #-8]
  40e3b8:	ldur	x0, [x29, #-8]
  40e3bc:	ldp	x29, x30, [sp, #32]
  40e3c0:	add	sp, sp, #0x30
  40e3c4:	ret
  40e3c8:	sub	sp, sp, #0x30
  40e3cc:	stp	x29, x30, [sp, #32]
  40e3d0:	add	x29, sp, #0x20
  40e3d4:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40e3d8:	add	x8, x8, #0x927
  40e3dc:	add	x2, x8, #0x3
  40e3e0:	str	x0, [sp, #16]
  40e3e4:	ldr	x8, [sp, #16]
  40e3e8:	str	x2, [sp, #8]
  40e3ec:	cbnz	x8, 40e3fc <clock_supported@plt+0xa104>
  40e3f0:	mov	x8, xzr
  40e3f4:	stur	x8, [x29, #-8]
  40e3f8:	b	40e490 <clock_supported@plt+0xa198>
  40e3fc:	ldr	x8, [sp, #16]
  40e400:	ldr	w9, [x8, #8]
  40e404:	cmp	w9, #0x0
  40e408:	cset	w9, hi  // hi = pmore
  40e40c:	mov	w10, #0x1                   	// #1
  40e410:	eor	w9, w9, #0x1
  40e414:	eor	w9, w9, w10
  40e418:	eor	w9, w9, w10
  40e41c:	and	w9, w9, #0x1
  40e420:	mov	w0, w9
  40e424:	sxtw	x8, w0
  40e428:	cbz	x8, 40e450 <clock_supported@plt+0xa158>
  40e42c:	mov	w8, wzr
  40e430:	mov	w0, w8
  40e434:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40e438:	add	x1, x1, #0x98c
  40e43c:	ldr	x2, [sp, #8]
  40e440:	mov	w3, #0x42                  	// #66
  40e444:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40e448:	add	x4, x4, #0x999
  40e44c:	bl	403958 <log_assert_failed_realm@plt>
  40e450:	ldr	x8, [sp, #16]
  40e454:	ldr	w9, [x8, #8]
  40e458:	subs	w9, w9, #0x1
  40e45c:	str	w9, [x8, #8]
  40e460:	ldr	x8, [sp, #16]
  40e464:	ldr	w9, [x8, #8]
  40e468:	cmp	w9, #0x0
  40e46c:	cset	w9, hi  // hi = pmore
  40e470:	tbnz	w9, #0, 40e488 <clock_supported@plt+0xa190>
  40e474:	ldr	x8, [sp, #16]
  40e478:	ldr	x8, [x8]
  40e47c:	cbnz	x8, 40e488 <clock_supported@plt+0xa190>
  40e480:	ldr	x0, [sp, #16]
  40e484:	bl	40e4a0 <clock_supported@plt+0xa1a8>
  40e488:	mov	x8, xzr
  40e48c:	stur	x8, [x29, #-8]
  40e490:	ldur	x0, [x29, #-8]
  40e494:	ldp	x29, x30, [sp, #32]
  40e498:	add	sp, sp, #0x30
  40e49c:	ret
  40e4a0:	sub	sp, sp, #0x20
  40e4a4:	stp	x29, x30, [sp, #16]
  40e4a8:	add	x29, sp, #0x10
  40e4ac:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40e4b0:	add	x8, x8, #0x927
  40e4b4:	add	x2, x8, #0x3
  40e4b8:	str	x0, [sp, #8]
  40e4bc:	str	x2, [sp]
  40e4c0:	ldr	x8, [sp, #8]
  40e4c4:	cmp	x8, #0x0
  40e4c8:	cset	w9, ne  // ne = any
  40e4cc:	mov	w10, #0x1                   	// #1
  40e4d0:	eor	w9, w9, #0x1
  40e4d4:	eor	w9, w9, w10
  40e4d8:	eor	w9, w9, w10
  40e4dc:	and	w9, w9, #0x1
  40e4e0:	mov	w0, w9
  40e4e4:	sxtw	x8, w0
  40e4e8:	cbz	x8, 40e510 <clock_supported@plt+0xa218>
  40e4ec:	mov	w8, wzr
  40e4f0:	mov	w0, w8
  40e4f4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40e4f8:	add	x1, x1, #0xa52
  40e4fc:	ldr	x2, [sp]
  40e500:	mov	w3, #0x2e                  	// #46
  40e504:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40e508:	add	x4, x4, #0x506
  40e50c:	bl	403958 <log_assert_failed_realm@plt>
  40e510:	ldr	x8, [sp, #8]
  40e514:	ldr	x0, [x8, #80]
  40e518:	bl	4039f8 <free@plt>
  40e51c:	ldr	x8, [sp, #8]
  40e520:	ldr	x0, [x8, #64]
  40e524:	bl	4039f8 <free@plt>
  40e528:	ldr	x8, [sp, #8]
  40e52c:	ldr	x0, [x8, #120]
  40e530:	bl	4039f8 <free@plt>
  40e534:	ldr	x8, [sp, #8]
  40e538:	ldr	x0, [x8, #128]
  40e53c:	bl	4039f8 <free@plt>
  40e540:	ldr	x8, [sp, #8]
  40e544:	ldr	x0, [x8, #136]
  40e548:	bl	4039f8 <free@plt>
  40e54c:	ldr	x8, [sp, #8]
  40e550:	ldr	x0, [x8, #152]
  40e554:	bl	4039f8 <free@plt>
  40e558:	ldr	x8, [sp, #8]
  40e55c:	ldr	x0, [x8, #160]
  40e560:	bl	4039f8 <free@plt>
  40e564:	ldr	x0, [sp, #8]
  40e568:	bl	4039f8 <free@plt>
  40e56c:	ldp	x29, x30, [sp, #16]
  40e570:	add	sp, sp, #0x20
  40e574:	ret
  40e578:	sub	sp, sp, #0x30
  40e57c:	stp	x29, x30, [sp, #32]
  40e580:	add	x29, sp, #0x20
  40e584:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40e588:	add	x8, x8, #0x927
  40e58c:	add	x2, x8, #0x3
  40e590:	str	x0, [sp, #16]
  40e594:	ldr	x8, [sp, #16]
  40e598:	str	x2, [sp, #8]
  40e59c:	cbnz	x8, 40e5ac <clock_supported@plt+0xa2b4>
  40e5a0:	mov	x8, xzr
  40e5a4:	stur	x8, [x29, #-8]
  40e5a8:	b	40e678 <clock_supported@plt+0xa380>
  40e5ac:	ldr	x8, [sp, #16]
  40e5b0:	ldr	x8, [x8]
  40e5b4:	cbnz	x8, 40e5c4 <clock_supported@plt+0xa2cc>
  40e5b8:	mov	x8, xzr
  40e5bc:	stur	x8, [x29, #-8]
  40e5c0:	b	40e678 <clock_supported@plt+0xa380>
  40e5c4:	ldr	x8, [sp, #16]
  40e5c8:	ldr	x8, [x8]
  40e5cc:	ldr	x0, [x8, #56]
  40e5d0:	ldr	x8, [sp, #16]
  40e5d4:	add	x1, x8, #0x40
  40e5d8:	ldr	x2, [sp, #16]
  40e5dc:	bl	40e688 <clock_supported@plt+0xa390>
  40e5e0:	ldr	x8, [sp, #16]
  40e5e4:	ldr	x8, [x8]
  40e5e8:	ldr	x0, [x8, #48]
  40e5ec:	ldr	x1, [sp, #16]
  40e5f0:	ldr	x8, [sp, #16]
  40e5f4:	add	x2, x8, #0x30
  40e5f8:	bl	404228 <prioq_remove@plt>
  40e5fc:	cmp	w0, #0x0
  40e600:	cset	w9, ge  // ge = tcont
  40e604:	mov	w10, #0x1                   	// #1
  40e608:	eor	w9, w9, #0x1
  40e60c:	eor	w9, w9, w10
  40e610:	eor	w9, w9, w10
  40e614:	and	w9, w9, #0x1
  40e618:	mov	w1, w9
  40e61c:	sxtw	x8, w1
  40e620:	cbz	x8, 40e648 <clock_supported@plt+0xa350>
  40e624:	mov	w8, wzr
  40e628:	mov	w0, w8
  40e62c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40e630:	add	x1, x1, #0x9d6
  40e634:	ldr	x2, [sp, #8]
  40e638:	mov	w3, #0x5b                  	// #91
  40e63c:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40e640:	add	x4, x4, #0xa17
  40e644:	bl	403958 <log_assert_failed_realm@plt>
  40e648:	ldr	x8, [sp, #16]
  40e64c:	mov	x9, xzr
  40e650:	str	x9, [x8]
  40e654:	ldr	x8, [sp, #16]
  40e658:	ldr	w10, [x8, #8]
  40e65c:	cmp	w10, #0x0
  40e660:	cset	w10, hi  // hi = pmore
  40e664:	tbnz	w10, #0, 40e670 <clock_supported@plt+0xa378>
  40e668:	ldr	x0, [sp, #16]
  40e66c:	bl	40e4a0 <clock_supported@plt+0xa1a8>
  40e670:	mov	x8, xzr
  40e674:	stur	x8, [x29, #-8]
  40e678:	ldur	x0, [x29, #-8]
  40e67c:	ldp	x29, x30, [sp, #32]
  40e680:	add	sp, sp, #0x30
  40e684:	ret
  40e688:	sub	sp, sp, #0x30
  40e68c:	stp	x29, x30, [sp, #32]
  40e690:	add	x29, sp, #0x20
  40e694:	stur	x0, [x29, #-8]
  40e698:	str	x1, [sp, #16]
  40e69c:	str	x2, [sp, #8]
  40e6a0:	ldur	x0, [x29, #-8]
  40e6a4:	ldr	x1, [sp, #16]
  40e6a8:	ldr	x2, [sp, #8]
  40e6ac:	bl	404238 <internal_hashmap_remove_value@plt>
  40e6b0:	ldp	x29, x30, [sp, #32]
  40e6b4:	add	sp, sp, #0x30
  40e6b8:	ret
  40e6bc:	sub	sp, sp, #0x30
  40e6c0:	stp	x29, x30, [sp, #32]
  40e6c4:	add	x29, sp, #0x20
  40e6c8:	mov	x8, #0x1                   	// #1
  40e6cc:	str	x0, [sp, #16]
  40e6d0:	ldr	x9, [sp, #16]
  40e6d4:	add	x1, x9, #0xa8
  40e6d8:	mov	x0, x8
  40e6dc:	bl	404248 <calloc@plt>
  40e6e0:	str	x0, [sp, #8]
  40e6e4:	ldr	x8, [sp, #8]
  40e6e8:	cbnz	x8, 40e6f8 <clock_supported@plt+0xa400>
  40e6ec:	mov	x8, xzr
  40e6f0:	stur	x8, [x29, #-8]
  40e6f4:	b	40e718 <clock_supported@plt+0xa420>
  40e6f8:	ldr	x8, [sp, #16]
  40e6fc:	ldr	x9, [sp, #8]
  40e700:	str	x8, [x9, #96]
  40e704:	ldr	x8, [sp, #8]
  40e708:	mov	w10, #0x1                   	// #1
  40e70c:	str	w10, [x8, #8]
  40e710:	ldr	x8, [sp, #8]
  40e714:	stur	x8, [x29, #-8]
  40e718:	ldur	x0, [x29, #-8]
  40e71c:	ldp	x29, x30, [sp, #32]
  40e720:	add	sp, sp, #0x30
  40e724:	ret
  40e728:	sub	sp, sp, #0x70
  40e72c:	stp	x29, x30, [sp, #96]
  40e730:	add	x29, sp, #0x60
  40e734:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40e738:	add	x8, x8, #0x927
  40e73c:	add	x8, x8, #0x3
  40e740:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40e744:	add	x9, x9, #0xa80
  40e748:	stur	x0, [x29, #-16]
  40e74c:	str	x8, [sp, #24]
  40e750:	str	x9, [sp, #16]
  40e754:	ldur	x8, [x29, #-16]
  40e758:	cmp	x8, #0x0
  40e75c:	cset	w9, ne  // ne = any
  40e760:	mov	w10, #0x1                   	// #1
  40e764:	eor	w9, w9, #0x1
  40e768:	eor	w9, w9, w10
  40e76c:	eor	w9, w9, w10
  40e770:	and	w9, w9, #0x1
  40e774:	mov	w0, w9
  40e778:	sxtw	x8, w0
  40e77c:	cbz	x8, 40e7a4 <clock_supported@plt+0xa4ac>
  40e780:	mov	w8, wzr
  40e784:	mov	w0, w8
  40e788:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40e78c:	add	x1, x1, #0xa52
  40e790:	ldr	x2, [sp, #24]
  40e794:	mov	w3, #0x9c                  	// #156
  40e798:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40e79c:	add	x4, x4, #0xa54
  40e7a0:	bl	403958 <log_assert_failed_realm@plt>
  40e7a4:	ldur	x8, [x29, #-16]
  40e7a8:	ldr	x8, [x8, #96]
  40e7ac:	cmp	x8, #0xe
  40e7b0:	b.cs	40e7e4 <clock_supported@plt+0xa4ec>  // b.hs, b.nlast
  40e7b4:	mov	w0, #0x7                   	// #7
  40e7b8:	mov	w8, wzr
  40e7bc:	mov	w1, w8
  40e7c0:	ldr	x2, [sp, #24]
  40e7c4:	mov	w3, #0x9f                  	// #159
  40e7c8:	ldr	x4, [sp, #16]
  40e7cc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40e7d0:	add	x5, x5, #0xa94
  40e7d4:	bl	403a38 <log_internal_realm@plt>
  40e7d8:	mov	w8, #0xffffffb6            	// #-74
  40e7dc:	stur	w8, [x29, #-4]
  40e7e0:	b	40ef1c <clock_supported@plt+0xac24>
  40e7e4:	ldur	x0, [x29, #-16]
  40e7e8:	bl	40ef2c <clock_supported@plt+0xac34>
  40e7ec:	ldr	x8, [x0]
  40e7f0:	sub	x9, x29, #0x20
  40e7f4:	stur	x8, [x29, #-32]
  40e7f8:	ldur	x8, [x0, #6]
  40e7fc:	stur	x8, [x9, #6]
  40e800:	ldurh	w10, [x29, #-20]
  40e804:	mov	w0, #0xffff88cc            	// #-30516
  40e808:	str	w10, [sp, #12]
  40e80c:	bl	40ef44 <clock_supported@plt+0xac4c>
  40e810:	and	w10, w0, #0xffff
  40e814:	ldr	w11, [sp, #12]
  40e818:	cmp	w11, w10
  40e81c:	b.eq	40e850 <clock_supported@plt+0xa558>  // b.none
  40e820:	mov	w0, #0x7                   	// #7
  40e824:	mov	w8, wzr
  40e828:	mov	w1, w8
  40e82c:	ldr	x2, [sp, #24]
  40e830:	mov	w3, #0xa6                  	// #166
  40e834:	ldr	x4, [sp, #16]
  40e838:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40e83c:	add	x5, x5, #0xabf
  40e840:	bl	403a38 <log_internal_realm@plt>
  40e844:	mov	w8, #0xffffffb6            	// #-74
  40e848:	stur	w8, [x29, #-4]
  40e84c:	b	40ef1c <clock_supported@plt+0xac24>
  40e850:	ldurb	w8, [x29, #-32]
  40e854:	cmp	w8, #0x1
  40e858:	b.ne	40e8e4 <clock_supported@plt+0xa5ec>  // b.any
  40e85c:	ldurb	w8, [x29, #-31]
  40e860:	cmp	w8, #0x80
  40e864:	b.ne	40e8e4 <clock_supported@plt+0xa5ec>  // b.any
  40e868:	ldurb	w8, [x29, #-30]
  40e86c:	cmp	w8, #0xc2
  40e870:	b.ne	40e8e4 <clock_supported@plt+0xa5ec>  // b.any
  40e874:	ldurb	w8, [x29, #-29]
  40e878:	cbnz	w8, 40e8e4 <clock_supported@plt+0xa5ec>
  40e87c:	ldurb	w8, [x29, #-28]
  40e880:	cbnz	w8, 40e8e4 <clock_supported@plt+0xa5ec>
  40e884:	mov	w8, #0x0                   	// #0
  40e888:	strb	w8, [sp, #43]
  40e88c:	ldurb	w8, [x29, #-27]
  40e890:	str	w8, [sp, #8]
  40e894:	cbz	w8, 40e8c4 <clock_supported@plt+0xa5cc>
  40e898:	b	40e89c <clock_supported@plt+0xa5a4>
  40e89c:	ldr	w8, [sp, #8]
  40e8a0:	cmp	w8, #0x3
  40e8a4:	b.eq	40e8c4 <clock_supported@plt+0xa5cc>  // b.none
  40e8a8:	b	40e8ac <clock_supported@plt+0xa5b4>
  40e8ac:	ldr	w8, [sp, #8]
  40e8b0:	cmp	w8, #0xe
  40e8b4:	cset	w9, eq  // eq = none
  40e8b8:	eor	w9, w9, #0x1
  40e8bc:	tbnz	w9, #0, 40e8d0 <clock_supported@plt+0xa5d8>
  40e8c0:	b	40e8c4 <clock_supported@plt+0xa5cc>
  40e8c4:	mov	w8, #0x1                   	// #1
  40e8c8:	strb	w8, [sp, #43]
  40e8cc:	b	40e8d0 <clock_supported@plt+0xa5d8>
  40e8d0:	ldrb	w8, [sp, #43]
  40e8d4:	and	w8, w8, #0x1
  40e8d8:	strb	w8, [sp, #42]
  40e8dc:	ldrb	w8, [sp, #42]
  40e8e0:	tbnz	w8, #0, 40e914 <clock_supported@plt+0xa61c>
  40e8e4:	mov	w0, #0x7                   	// #7
  40e8e8:	mov	w8, wzr
  40e8ec:	mov	w1, w8
  40e8f0:	ldr	x2, [sp, #24]
  40e8f4:	mov	w3, #0xb0                  	// #176
  40e8f8:	ldr	x4, [sp, #16]
  40e8fc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40e900:	add	x5, x5, #0xaf0
  40e904:	bl	403a38 <log_internal_realm@plt>
  40e908:	mov	w8, #0xffffffb6            	// #-74
  40e90c:	stur	w8, [x29, #-4]
  40e910:	b	40ef1c <clock_supported@plt+0xac24>
  40e914:	ldur	x8, [x29, #-16]
  40e918:	sub	x9, x29, #0x20
  40e91c:	ldur	w10, [x9, #6]
  40e920:	str	w10, [x8, #52]
  40e924:	ldrh	w10, [x9, #10]
  40e928:	strh	w10, [x8, #56]
  40e92c:	ldur	x8, [x29, #-16]
  40e930:	ldur	w10, [x29, #-32]
  40e934:	stur	w10, [x8, #58]
  40e938:	ldrh	w10, [x9, #4]
  40e93c:	strh	w10, [x8, #62]
  40e940:	ldur	x0, [x29, #-16]
  40e944:	bl	40ef2c <clock_supported@plt+0xac34>
  40e948:	add	x8, x0, #0xe
  40e94c:	stur	x8, [x29, #-40]
  40e950:	ldur	x8, [x29, #-16]
  40e954:	ldr	x8, [x8, #96]
  40e958:	subs	x8, x8, #0xe
  40e95c:	str	x8, [sp, #48]
  40e960:	ldr	x8, [sp, #48]
  40e964:	cmp	x8, #0x2
  40e968:	b.cs	40e99c <clock_supported@plt+0xa6a4>  // b.hs, b.nlast
  40e96c:	mov	w0, #0x7                   	// #7
  40e970:	mov	w8, wzr
  40e974:	mov	w1, w8
  40e978:	ldr	x2, [sp, #24]
  40e97c:	mov	w3, #0xbf                  	// #191
  40e980:	ldr	x4, [sp, #16]
  40e984:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40e988:	add	x5, x5, #0xb30
  40e98c:	bl	403a38 <log_internal_realm@plt>
  40e990:	mov	w8, #0xffffffb6            	// #-74
  40e994:	stur	w8, [x29, #-4]
  40e998:	b	40ef1c <clock_supported@plt+0xac24>
  40e99c:	ldur	x8, [x29, #-40]
  40e9a0:	ldrb	w9, [x8]
  40e9a4:	mov	x8, #0x1                   	// #1
  40e9a8:	asr	w8, w9, w8
  40e9ac:	strb	w8, [sp, #41]
  40e9b0:	ldur	x10, [x29, #-40]
  40e9b4:	ldrb	w8, [x10, #1]
  40e9b8:	ldur	x10, [x29, #-40]
  40e9bc:	ldrb	w9, [x10]
  40e9c0:	and	w9, w9, #0x1
  40e9c4:	and	w9, w9, #0xffff
  40e9c8:	add	w8, w8, w9, lsl #8
  40e9cc:	strh	w8, [sp, #38]
  40e9d0:	ldur	x10, [x29, #-40]
  40e9d4:	add	x10, x10, #0x2
  40e9d8:	stur	x10, [x29, #-40]
  40e9dc:	ldr	x10, [sp, #48]
  40e9e0:	subs	x10, x10, #0x2
  40e9e4:	str	x10, [sp, #48]
  40e9e8:	ldr	x10, [sp, #48]
  40e9ec:	ldrh	w8, [sp, #38]
  40e9f0:	mov	w11, w8
  40e9f4:	cmp	x10, x11
  40e9f8:	b.cs	40ea2c <clock_supported@plt+0xa734>  // b.hs, b.nlast
  40e9fc:	mov	w0, #0x7                   	// #7
  40ea00:	mov	w8, wzr
  40ea04:	mov	w1, w8
  40ea08:	ldr	x2, [sp, #24]
  40ea0c:	mov	w3, #0xc8                  	// #200
  40ea10:	ldr	x4, [sp, #16]
  40ea14:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ea18:	add	x5, x5, #0xb52
  40ea1c:	bl	403a38 <log_internal_realm@plt>
  40ea20:	mov	w8, #0xffffffb6            	// #-74
  40ea24:	stur	w8, [x29, #-4]
  40ea28:	b	40ef1c <clock_supported@plt+0xac24>
  40ea2c:	ldrb	w8, [sp, #41]
  40ea30:	str	w8, [sp, #4]
  40ea34:	cbz	w8, 40eabc <clock_supported@plt+0xa7c4>
  40ea38:	b	40ea3c <clock_supported@plt+0xa744>
  40ea3c:	ldr	w8, [sp, #4]
  40ea40:	cmp	w8, #0x1
  40ea44:	b.eq	40eaf8 <clock_supported@plt+0xa800>  // b.none
  40ea48:	b	40ea4c <clock_supported@plt+0xa754>
  40ea4c:	ldr	w8, [sp, #4]
  40ea50:	cmp	w8, #0x2
  40ea54:	b.eq	40ebc0 <clock_supported@plt+0xa8c8>  // b.none
  40ea58:	b	40ea5c <clock_supported@plt+0xa764>
  40ea5c:	ldr	w8, [sp, #4]
  40ea60:	cmp	w8, #0x3
  40ea64:	b.eq	40ec88 <clock_supported@plt+0xa990>  // b.none
  40ea68:	b	40ea6c <clock_supported@plt+0xa774>
  40ea6c:	ldr	w8, [sp, #4]
  40ea70:	cmp	w8, #0x4
  40ea74:	b.eq	40ed30 <clock_supported@plt+0xaa38>  // b.none
  40ea78:	b	40ea7c <clock_supported@plt+0xa784>
  40ea7c:	ldr	w8, [sp, #4]
  40ea80:	cmp	w8, #0x5
  40ea84:	b.eq	40ed6c <clock_supported@plt+0xaa74>  // b.none
  40ea88:	b	40ea8c <clock_supported@plt+0xa794>
  40ea8c:	ldr	w8, [sp, #4]
  40ea90:	cmp	w8, #0x6
  40ea94:	b.eq	40eda8 <clock_supported@plt+0xaab0>  // b.none
  40ea98:	b	40ea9c <clock_supported@plt+0xa7a4>
  40ea9c:	ldr	w8, [sp, #4]
  40eaa0:	cmp	w8, #0x7
  40eaa4:	b.eq	40ede4 <clock_supported@plt+0xaaec>  // b.none
  40eaa8:	b	40eaac <clock_supported@plt+0xa7b4>
  40eaac:	ldr	w8, [sp, #4]
  40eab0:	cmp	w8, #0x7f
  40eab4:	b.eq	40ee54 <clock_supported@plt+0xab5c>  // b.none
  40eab8:	b	40ee84 <clock_supported@plt+0xab8c>
  40eabc:	ldrh	w8, [sp, #38]
  40eac0:	cbz	w8, 40eaf4 <clock_supported@plt+0xa7fc>
  40eac4:	mov	w0, #0x7                   	// #7
  40eac8:	mov	w8, wzr
  40eacc:	mov	w1, w8
  40ead0:	ldr	x2, [sp, #24]
  40ead4:	mov	w3, #0xd0                  	// #208
  40ead8:	ldr	x4, [sp, #16]
  40eadc:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40eae0:	add	x5, x5, #0xb7a
  40eae4:	bl	403a38 <log_internal_realm@plt>
  40eae8:	mov	w8, #0xffffffb6            	// #-74
  40eaec:	stur	w8, [x29, #-4]
  40eaf0:	b	40ef1c <clock_supported@plt+0xac24>
  40eaf4:	b	40eeb4 <clock_supported@plt+0xabbc>
  40eaf8:	ldrh	w8, [sp, #38]
  40eafc:	cmp	w8, #0x2
  40eb00:	b.lt	40eb10 <clock_supported@plt+0xa818>  // b.tstop
  40eb04:	ldrh	w8, [sp, #38]
  40eb08:	cmp	w8, #0x100
  40eb0c:	b.le	40eb40 <clock_supported@plt+0xa848>
  40eb10:	mov	w0, #0x7                   	// #7
  40eb14:	mov	w8, wzr
  40eb18:	mov	w1, w8
  40eb1c:	ldr	x2, [sp, #24]
  40eb20:	mov	w3, #0xdb                  	// #219
  40eb24:	ldr	x4, [sp, #16]
  40eb28:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40eb2c:	add	x5, x5, #0xbb2
  40eb30:	bl	403a38 <log_internal_realm@plt>
  40eb34:	mov	w8, #0xffffffb6            	// #-74
  40eb38:	stur	w8, [x29, #-4]
  40eb3c:	b	40ef1c <clock_supported@plt+0xac24>
  40eb40:	ldur	x8, [x29, #-16]
  40eb44:	ldr	x8, [x8, #64]
  40eb48:	cbz	x8, 40eb7c <clock_supported@plt+0xa884>
  40eb4c:	mov	w0, #0x7                   	// #7
  40eb50:	mov	w8, wzr
  40eb54:	mov	w1, w8
  40eb58:	ldr	x2, [sp, #24]
  40eb5c:	mov	w3, #0xdf                  	// #223
  40eb60:	ldr	x4, [sp, #16]
  40eb64:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40eb68:	add	x5, x5, #0xbef
  40eb6c:	bl	403a38 <log_internal_realm@plt>
  40eb70:	mov	w8, #0xffffffb6            	// #-74
  40eb74:	stur	w8, [x29, #-4]
  40eb78:	b	40ef1c <clock_supported@plt+0xac24>
  40eb7c:	ldur	x0, [x29, #-40]
  40eb80:	ldrh	w8, [sp, #38]
  40eb84:	mov	w1, w8
  40eb88:	bl	404258 <memdup@plt>
  40eb8c:	ldur	x9, [x29, #-16]
  40eb90:	str	x0, [x9, #64]
  40eb94:	ldur	x9, [x29, #-16]
  40eb98:	ldr	x9, [x9, #64]
  40eb9c:	cbnz	x9, 40ebac <clock_supported@plt+0xa8b4>
  40eba0:	mov	w8, #0xfffffff4            	// #-12
  40eba4:	stur	w8, [x29, #-4]
  40eba8:	b	40ef1c <clock_supported@plt+0xac24>
  40ebac:	ldrh	w8, [sp, #38]
  40ebb0:	mov	w9, w8
  40ebb4:	ldur	x10, [x29, #-16]
  40ebb8:	str	x9, [x10, #72]
  40ebbc:	b	40ee84 <clock_supported@plt+0xab8c>
  40ebc0:	ldrh	w8, [sp, #38]
  40ebc4:	cmp	w8, #0x2
  40ebc8:	b.lt	40ebd8 <clock_supported@plt+0xa8e0>  // b.tstop
  40ebcc:	ldrh	w8, [sp, #38]
  40ebd0:	cmp	w8, #0x100
  40ebd4:	b.le	40ec08 <clock_supported@plt+0xa910>
  40ebd8:	mov	w0, #0x7                   	// #7
  40ebdc:	mov	w8, wzr
  40ebe0:	mov	w1, w8
  40ebe4:	ldr	x2, [sp, #24]
  40ebe8:	mov	w3, #0xec                  	// #236
  40ebec:	ldr	x4, [sp, #16]
  40ebf0:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ebf4:	add	x5, x5, #0xc24
  40ebf8:	bl	403a38 <log_internal_realm@plt>
  40ebfc:	mov	w8, #0xffffffb6            	// #-74
  40ec00:	stur	w8, [x29, #-4]
  40ec04:	b	40ef1c <clock_supported@plt+0xac24>
  40ec08:	ldur	x8, [x29, #-16]
  40ec0c:	ldr	x8, [x8, #80]
  40ec10:	cbz	x8, 40ec44 <clock_supported@plt+0xa94c>
  40ec14:	mov	w0, #0x7                   	// #7
  40ec18:	mov	w8, wzr
  40ec1c:	mov	w1, w8
  40ec20:	ldr	x2, [sp, #24]
  40ec24:	mov	w3, #0xf0                  	// #240
  40ec28:	ldr	x4, [sp, #16]
  40ec2c:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ec30:	add	x5, x5, #0xc5e
  40ec34:	bl	403a38 <log_internal_realm@plt>
  40ec38:	mov	w8, #0xffffffb6            	// #-74
  40ec3c:	stur	w8, [x29, #-4]
  40ec40:	b	40ef1c <clock_supported@plt+0xac24>
  40ec44:	ldur	x0, [x29, #-40]
  40ec48:	ldrh	w8, [sp, #38]
  40ec4c:	mov	w1, w8
  40ec50:	bl	404258 <memdup@plt>
  40ec54:	ldur	x9, [x29, #-16]
  40ec58:	str	x0, [x9, #80]
  40ec5c:	ldur	x9, [x29, #-16]
  40ec60:	ldr	x9, [x9, #80]
  40ec64:	cbnz	x9, 40ec74 <clock_supported@plt+0xa97c>
  40ec68:	mov	w8, #0xfffffff4            	// #-12
  40ec6c:	stur	w8, [x29, #-4]
  40ec70:	b	40ef1c <clock_supported@plt+0xac24>
  40ec74:	ldrh	w8, [sp, #38]
  40ec78:	mov	w9, w8
  40ec7c:	ldur	x10, [x29, #-16]
  40ec80:	str	x9, [x10, #88]
  40ec84:	b	40ee84 <clock_supported@plt+0xab8c>
  40ec88:	ldrh	w8, [sp, #38]
  40ec8c:	cmp	w8, #0x2
  40ec90:	b.eq	40ecc4 <clock_supported@plt+0xa9cc>  // b.none
  40ec94:	mov	w0, #0x7                   	// #7
  40ec98:	mov	w8, wzr
  40ec9c:	mov	w1, w8
  40eca0:	ldr	x2, [sp, #24]
  40eca4:	mov	w3, #0xfd                  	// #253
  40eca8:	ldr	x4, [sp, #16]
  40ecac:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ecb0:	add	x5, x5, #0xc90
  40ecb4:	bl	403a38 <log_internal_realm@plt>
  40ecb8:	mov	w8, #0xffffffb6            	// #-74
  40ecbc:	stur	w8, [x29, #-4]
  40ecc0:	b	40ef1c <clock_supported@plt+0xac24>
  40ecc4:	ldur	x8, [x29, #-16]
  40ecc8:	ldrb	w9, [x8, #112]
  40eccc:	and	w9, w9, #0x1
  40ecd0:	tbnz	w9, #0, 40ecd8 <clock_supported@plt+0xa9e0>
  40ecd4:	b	40ed08 <clock_supported@plt+0xaa10>
  40ecd8:	mov	w0, #0x7                   	// #7
  40ecdc:	mov	w8, wzr
  40ece0:	mov	w1, w8
  40ece4:	ldr	x2, [sp, #24]
  40ece8:	mov	w3, #0x102                 	// #258
  40ecec:	ldr	x4, [sp, #16]
  40ecf0:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ecf4:	add	x5, x5, #0xcc3
  40ecf8:	bl	403a38 <log_internal_realm@plt>
  40ecfc:	mov	w8, #0xffffffb6            	// #-74
  40ed00:	stur	w8, [x29, #-4]
  40ed04:	b	40ef1c <clock_supported@plt+0xac24>
  40ed08:	ldur	x0, [x29, #-40]
  40ed0c:	bl	40ef70 <clock_supported@plt+0xac78>
  40ed10:	ldur	x8, [x29, #-16]
  40ed14:	strh	w0, [x8, #114]
  40ed18:	ldur	x8, [x29, #-16]
  40ed1c:	ldrb	w9, [x8, #112]
  40ed20:	and	w9, w9, #0xfffffffe
  40ed24:	orr	w9, w9, #0x1
  40ed28:	strb	w9, [x8, #112]
  40ed2c:	b	40ee84 <clock_supported@plt+0xab8c>
  40ed30:	ldur	x8, [x29, #-16]
  40ed34:	add	x0, x8, #0x78
  40ed38:	ldur	x1, [x29, #-40]
  40ed3c:	ldrh	w9, [sp, #38]
  40ed40:	mov	w2, w9
  40ed44:	bl	40efa0 <clock_supported@plt+0xaca8>
  40ed48:	str	w0, [sp, #44]
  40ed4c:	ldr	w9, [sp, #44]
  40ed50:	cmp	w9, #0x0
  40ed54:	cset	w9, ge  // ge = tcont
  40ed58:	tbnz	w9, #0, 40ed68 <clock_supported@plt+0xaa70>
  40ed5c:	ldr	w8, [sp, #44]
  40ed60:	stur	w8, [x29, #-4]
  40ed64:	b	40ef1c <clock_supported@plt+0xac24>
  40ed68:	b	40ee84 <clock_supported@plt+0xab8c>
  40ed6c:	ldur	x8, [x29, #-16]
  40ed70:	add	x0, x8, #0x80
  40ed74:	ldur	x1, [x29, #-40]
  40ed78:	ldrh	w9, [sp, #38]
  40ed7c:	mov	w2, w9
  40ed80:	bl	40efa0 <clock_supported@plt+0xaca8>
  40ed84:	str	w0, [sp, #44]
  40ed88:	ldr	w9, [sp, #44]
  40ed8c:	cmp	w9, #0x0
  40ed90:	cset	w9, ge  // ge = tcont
  40ed94:	tbnz	w9, #0, 40eda4 <clock_supported@plt+0xaaac>
  40ed98:	ldr	w8, [sp, #44]
  40ed9c:	stur	w8, [x29, #-4]
  40eda0:	b	40ef1c <clock_supported@plt+0xac24>
  40eda4:	b	40ee84 <clock_supported@plt+0xab8c>
  40eda8:	ldur	x8, [x29, #-16]
  40edac:	add	x0, x8, #0x88
  40edb0:	ldur	x1, [x29, #-40]
  40edb4:	ldrh	w9, [sp, #38]
  40edb8:	mov	w2, w9
  40edbc:	bl	40efa0 <clock_supported@plt+0xaca8>
  40edc0:	str	w0, [sp, #44]
  40edc4:	ldr	w9, [sp, #44]
  40edc8:	cmp	w9, #0x0
  40edcc:	cset	w9, ge  // ge = tcont
  40edd0:	tbnz	w9, #0, 40ede0 <clock_supported@plt+0xaae8>
  40edd4:	ldr	w8, [sp, #44]
  40edd8:	stur	w8, [x29, #-4]
  40eddc:	b	40ef1c <clock_supported@plt+0xac24>
  40ede0:	b	40ee84 <clock_supported@plt+0xab8c>
  40ede4:	ldrh	w8, [sp, #38]
  40ede8:	cmp	w8, #0x4
  40edec:	b.eq	40ee18 <clock_supported@plt+0xab20>  // b.none
  40edf0:	mov	w0, #0x7                   	// #7
  40edf4:	mov	w8, wzr
  40edf8:	mov	w1, w8
  40edfc:	ldr	x2, [sp, #24]
  40ee00:	mov	w3, #0x11e                 	// #286
  40ee04:	ldr	x4, [sp, #16]
  40ee08:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ee0c:	add	x5, x5, #0xcf1
  40ee10:	bl	403a38 <log_internal_realm@plt>
  40ee14:	b	40ee50 <clock_supported@plt+0xab58>
  40ee18:	ldur	x0, [x29, #-40]
  40ee1c:	bl	40ef70 <clock_supported@plt+0xac78>
  40ee20:	ldur	x8, [x29, #-16]
  40ee24:	strh	w0, [x8, #116]
  40ee28:	ldur	x8, [x29, #-40]
  40ee2c:	add	x0, x8, #0x2
  40ee30:	bl	40ef70 <clock_supported@plt+0xac78>
  40ee34:	ldur	x8, [x29, #-16]
  40ee38:	strh	w0, [x8, #118]
  40ee3c:	ldur	x8, [x29, #-16]
  40ee40:	ldrb	w9, [x8, #112]
  40ee44:	and	w9, w9, #0xfffffffd
  40ee48:	orr	w9, w9, #0x2
  40ee4c:	strb	w9, [x8, #112]
  40ee50:	b	40ee84 <clock_supported@plt+0xab8c>
  40ee54:	ldrh	w8, [sp, #38]
  40ee58:	cmp	w8, #0x4
  40ee5c:	b.ge	40ee84 <clock_supported@plt+0xab8c>  // b.tcont
  40ee60:	mov	w0, #0x7                   	// #7
  40ee64:	mov	w8, wzr
  40ee68:	mov	w1, w8
  40ee6c:	ldr	x2, [sp, #24]
  40ee70:	mov	w3, #0x129                 	// #297
  40ee74:	ldr	x4, [sp, #16]
  40ee78:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40ee7c:	add	x5, x5, #0xd2b
  40ee80:	bl	403a38 <log_internal_realm@plt>
  40ee84:	ldrh	w8, [sp, #38]
  40ee88:	ldur	x9, [x29, #-40]
  40ee8c:	mov	w0, w8
  40ee90:	sxtw	x10, w0
  40ee94:	add	x9, x9, x10
  40ee98:	stur	x9, [x29, #-40]
  40ee9c:	ldrh	w8, [sp, #38]
  40eea0:	mov	w9, w8
  40eea4:	ldr	x10, [sp, #48]
  40eea8:	subs	x9, x10, x9
  40eeac:	str	x9, [sp, #48]
  40eeb0:	b	40e960 <clock_supported@plt+0xa668>
  40eeb4:	ldur	x8, [x29, #-16]
  40eeb8:	ldr	x8, [x8, #64]
  40eebc:	cbz	x8, 40eedc <clock_supported@plt+0xabe4>
  40eec0:	ldur	x8, [x29, #-16]
  40eec4:	ldr	x8, [x8, #80]
  40eec8:	cbz	x8, 40eedc <clock_supported@plt+0xabe4>
  40eecc:	ldur	x8, [x29, #-16]
  40eed0:	ldrb	w9, [x8, #112]
  40eed4:	and	w9, w9, #0x1
  40eed8:	tbnz	w9, #0, 40ef0c <clock_supported@plt+0xac14>
  40eedc:	mov	w0, #0x7                   	// #7
  40eee0:	mov	w8, wzr
  40eee4:	mov	w1, w8
  40eee8:	ldr	x2, [sp, #24]
  40eeec:	mov	w3, #0x133                 	// #307
  40eef0:	ldr	x4, [sp, #16]
  40eef4:	adrp	x5, 413000 <clock_supported@plt+0xed08>
  40eef8:	add	x5, x5, #0xd60
  40eefc:	bl	403a38 <log_internal_realm@plt>
  40ef00:	mov	w8, #0xffffffb6            	// #-74
  40ef04:	stur	w8, [x29, #-4]
  40ef08:	b	40ef1c <clock_supported@plt+0xac24>
  40ef0c:	ldur	x8, [x29, #-16]
  40ef10:	mov	x9, #0xe                   	// #14
  40ef14:	str	x9, [x8, #104]
  40ef18:	stur	wzr, [x29, #-4]
  40ef1c:	ldur	w0, [x29, #-4]
  40ef20:	ldp	x29, x30, [sp, #96]
  40ef24:	add	sp, sp, #0x70
  40ef28:	ret
  40ef2c:	sub	sp, sp, #0x10
  40ef30:	str	x0, [sp, #8]
  40ef34:	ldr	x8, [sp, #8]
  40ef38:	add	x0, x8, #0xa8
  40ef3c:	add	sp, sp, #0x10
  40ef40:	ret
  40ef44:	sub	sp, sp, #0x10
  40ef48:	strh	w0, [sp, #14]
  40ef4c:	ldrh	w8, [sp, #14]
  40ef50:	asr	w8, w8, #8
  40ef54:	and	w8, w8, #0xff
  40ef58:	ldrh	w9, [sp, #14]
  40ef5c:	and	w9, w9, #0xff
  40ef60:	orr	w8, w8, w9, lsl #8
  40ef64:	mov	w0, w8
  40ef68:	add	sp, sp, #0x10
  40ef6c:	ret
  40ef70:	sub	sp, sp, #0x20
  40ef74:	stp	x29, x30, [sp, #16]
  40ef78:	add	x29, sp, #0x10
  40ef7c:	str	x0, [sp, #8]
  40ef80:	ldr	x8, [sp, #8]
  40ef84:	str	x8, [sp]
  40ef88:	ldr	x8, [sp]
  40ef8c:	ldrh	w0, [x8]
  40ef90:	bl	40ef44 <clock_supported@plt+0xac4c>
  40ef94:	ldp	x29, x30, [sp, #16]
  40ef98:	add	sp, sp, #0x20
  40ef9c:	ret
  40efa0:	sub	sp, sp, #0x50
  40efa4:	stp	x29, x30, [sp, #64]
  40efa8:	add	x29, sp, #0x40
  40efac:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40efb0:	add	x8, x8, #0x927
  40efb4:	add	x8, x8, #0x3
  40efb8:	stur	x0, [x29, #-16]
  40efbc:	stur	x1, [x29, #-24]
  40efc0:	str	x2, [sp, #32]
  40efc4:	ldur	x9, [x29, #-24]
  40efc8:	str	x9, [sp, #24]
  40efcc:	str	x8, [sp, #8]
  40efd0:	ldur	x8, [x29, #-16]
  40efd4:	cmp	x8, #0x0
  40efd8:	cset	w9, ne  // ne = any
  40efdc:	mov	w10, #0x1                   	// #1
  40efe0:	eor	w9, w9, #0x1
  40efe4:	eor	w9, w9, w10
  40efe8:	eor	w9, w9, w10
  40efec:	and	w9, w9, #0x1
  40eff0:	mov	w0, w9
  40eff4:	sxtw	x8, w0
  40eff8:	cbz	x8, 40f020 <clock_supported@plt+0xad28>
  40effc:	mov	w8, wzr
  40f000:	mov	w0, w8
  40f004:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  40f008:	add	x1, x1, #0x532
  40f00c:	ldr	x2, [sp, #8]
  40f010:	mov	w3, #0x76                  	// #118
  40f014:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40f018:	add	x4, x4, #0x534
  40f01c:	bl	403958 <log_assert_failed_realm@plt>
  40f020:	ldr	x8, [sp, #24]
  40f024:	mov	w9, #0x1                   	// #1
  40f028:	str	w9, [sp, #4]
  40f02c:	cbnz	x8, 40f040 <clock_supported@plt+0xad48>
  40f030:	ldr	x8, [sp, #32]
  40f034:	cmp	x8, #0x0
  40f038:	cset	w9, eq  // eq = none
  40f03c:	str	w9, [sp, #4]
  40f040:	ldr	w8, [sp, #4]
  40f044:	mov	w9, #0x1                   	// #1
  40f048:	eor	w8, w8, #0x1
  40f04c:	eor	w8, w8, w9
  40f050:	eor	w8, w8, w9
  40f054:	and	w8, w8, #0x1
  40f058:	mov	w0, w8
  40f05c:	sxtw	x10, w0
  40f060:	cbz	x10, 40f088 <clock_supported@plt+0xad90>
  40f064:	mov	w8, wzr
  40f068:	mov	w0, w8
  40f06c:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  40f070:	add	x1, x1, #0x564
  40f074:	ldr	x2, [sp, #8]
  40f078:	mov	w3, #0x77                  	// #119
  40f07c:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40f080:	add	x4, x4, #0x534
  40f084:	bl	403958 <log_assert_failed_realm@plt>
  40f088:	ldur	x8, [x29, #-16]
  40f08c:	ldr	x8, [x8]
  40f090:	cbz	x8, 40f0c4 <clock_supported@plt+0xadcc>
  40f094:	mov	w0, #0x7                   	// #7
  40f098:	mov	w8, wzr
  40f09c:	mov	w1, w8
  40f0a0:	ldr	x2, [sp, #8]
  40f0a4:	mov	w3, #0x7a                  	// #122
  40f0a8:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40f0ac:	add	x4, x4, #0x570
  40f0b0:	adrp	x5, 414000 <clock_supported@plt+0xfd08>
  40f0b4:	add	x5, x5, #0x57d
  40f0b8:	bl	403a38 <log_internal_realm@plt>
  40f0bc:	stur	wzr, [x29, #-4]
  40f0c0:	b	40f1b8 <clock_supported@plt+0xaec0>
  40f0c4:	ldr	x8, [sp, #32]
  40f0c8:	cmp	x8, #0x0
  40f0cc:	cset	w9, ls  // ls = plast
  40f0d0:	mov	w10, #0x0                   	// #0
  40f0d4:	str	w10, [sp]
  40f0d8:	tbnz	w9, #0, 40f0f8 <clock_supported@plt+0xae00>
  40f0dc:	ldr	x8, [sp, #24]
  40f0e0:	ldr	x9, [sp, #32]
  40f0e4:	subs	x9, x9, #0x1
  40f0e8:	ldrb	w10, [x8, x9]
  40f0ec:	cmp	w10, #0x0
  40f0f0:	cset	w10, eq  // eq = none
  40f0f4:	str	w10, [sp]
  40f0f8:	ldr	w8, [sp]
  40f0fc:	tbnz	w8, #0, 40f104 <clock_supported@plt+0xae0c>
  40f100:	b	40f114 <clock_supported@plt+0xae1c>
  40f104:	ldr	x8, [sp, #32]
  40f108:	subs	x8, x8, #0x1
  40f10c:	str	x8, [sp, #32]
  40f110:	b	40f0c4 <clock_supported@plt+0xadcc>
  40f114:	ldr	x8, [sp, #32]
  40f118:	cmp	x8, #0x0
  40f11c:	cset	w9, hi  // hi = pmore
  40f120:	tbnz	w9, #0, 40f12c <clock_supported@plt+0xae34>
  40f124:	stur	wzr, [x29, #-4]
  40f128:	b	40f1b8 <clock_supported@plt+0xaec0>
  40f12c:	ldr	x0, [sp, #24]
  40f130:	ldr	x2, [sp, #32]
  40f134:	mov	w8, wzr
  40f138:	mov	w1, w8
  40f13c:	bl	404268 <memchr@plt>
  40f140:	cbz	x0, 40f174 <clock_supported@plt+0xae7c>
  40f144:	mov	w0, #0x7                   	// #7
  40f148:	mov	w8, wzr
  40f14c:	mov	w1, w8
  40f150:	ldr	x2, [sp, #8]
  40f154:	mov	w3, #0x87                  	// #135
  40f158:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40f15c:	add	x4, x4, #0x570
  40f160:	adrp	x5, 414000 <clock_supported@plt+0xfd08>
  40f164:	add	x5, x5, #0x5ab
  40f168:	bl	403a38 <log_internal_realm@plt>
  40f16c:	stur	wzr, [x29, #-4]
  40f170:	b	40f1b8 <clock_supported@plt+0xaec0>
  40f174:	ldr	x0, [sp, #24]
  40f178:	ldr	x1, [sp, #32]
  40f17c:	bl	404278 <cescape_length@plt>
  40f180:	str	x0, [sp, #16]
  40f184:	ldr	x8, [sp, #16]
  40f188:	cbnz	x8, 40f198 <clock_supported@plt+0xaea0>
  40f18c:	mov	w8, #0xfffffff4            	// #-12
  40f190:	stur	w8, [x29, #-4]
  40f194:	b	40f1b8 <clock_supported@plt+0xaec0>
  40f198:	ldur	x8, [x29, #-16]
  40f19c:	ldr	x0, [x8]
  40f1a0:	bl	4039f8 <free@plt>
  40f1a4:	ldr	x8, [sp, #16]
  40f1a8:	ldur	x9, [x29, #-16]
  40f1ac:	str	x8, [x9]
  40f1b0:	mov	w10, #0x1                   	// #1
  40f1b4:	stur	w10, [x29, #-4]
  40f1b8:	ldur	w0, [x29, #-4]
  40f1bc:	ldp	x29, x30, [sp, #64]
  40f1c0:	add	sp, sp, #0x50
  40f1c4:	ret
  40f1c8:	sub	sp, sp, #0x40
  40f1cc:	stp	x29, x30, [sp, #48]
  40f1d0:	add	x29, sp, #0x30
  40f1d4:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40f1d8:	add	x8, x8, #0x927
  40f1dc:	add	x2, x8, #0x3
  40f1e0:	stur	x0, [x29, #-8]
  40f1e4:	str	x2, [sp, #24]
  40f1e8:	ldur	x8, [x29, #-8]
  40f1ec:	cmp	x8, #0x0
  40f1f0:	cset	w9, ne  // ne = any
  40f1f4:	mov	w10, #0x1                   	// #1
  40f1f8:	eor	w9, w9, #0x1
  40f1fc:	eor	w9, w9, w10
  40f200:	eor	w9, w9, w10
  40f204:	and	w9, w9, #0x1
  40f208:	mov	w0, w9
  40f20c:	sxtw	x8, w0
  40f210:	cbz	x8, 40f238 <clock_supported@plt+0xaf40>
  40f214:	mov	w8, wzr
  40f218:	mov	w0, w8
  40f21c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f220:	add	x1, x1, #0xa52
  40f224:	ldr	x2, [sp, #24]
  40f228:	mov	w3, #0x13e                 	// #318
  40f22c:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40f230:	add	x4, x4, #0xd9f
  40f234:	bl	403958 <log_assert_failed_realm@plt>
  40f238:	ldur	x8, [x29, #-8]
  40f23c:	ldrh	w9, [x8, #114]
  40f240:	cmp	w9, #0x0
  40f244:	cset	w9, le
  40f248:	tbnz	w9, #0, 40f2cc <clock_supported@plt+0xafd4>
  40f24c:	ldur	x8, [x29, #-8]
  40f250:	add	x0, x8, #0x10
  40f254:	str	x0, [sp, #16]
  40f258:	bl	404288 <clock_boottime_or_monotonic@plt>
  40f25c:	ldr	x8, [sp, #16]
  40f260:	str	w0, [sp, #12]
  40f264:	mov	x0, x8
  40f268:	ldr	w1, [sp, #12]
  40f26c:	bl	404298 <triple_timestamp_by_clock@plt>
  40f270:	stur	x0, [x29, #-16]
  40f274:	ldur	x8, [x29, #-16]
  40f278:	cmp	x8, #0x0
  40f27c:	cset	w9, ls  // ls = plast
  40f280:	tbnz	w9, #0, 40f294 <clock_supported@plt+0xaf9c>
  40f284:	ldur	x8, [x29, #-16]
  40f288:	mov	x9, #0xffffffffffffffff    	// #-1
  40f28c:	cmp	x8, x9
  40f290:	b.ne	40f2a0 <clock_supported@plt+0xafa8>  // b.any
  40f294:	bl	404288 <clock_boottime_or_monotonic@plt>
  40f298:	bl	4042a8 <now@plt>
  40f29c:	stur	x0, [x29, #-16]
  40f2a0:	ldur	x0, [x29, #-16]
  40f2a4:	ldur	x8, [x29, #-8]
  40f2a8:	ldrh	w9, [x8, #114]
  40f2ac:	mov	w8, w9
  40f2b0:	mov	x10, #0x4240                	// #16960
  40f2b4:	movk	x10, #0xf, lsl #16
  40f2b8:	mul	x1, x8, x10
  40f2bc:	bl	40f308 <clock_supported@plt+0xb010>
  40f2c0:	ldur	x8, [x29, #-8]
  40f2c4:	str	x0, [x8, #40]
  40f2c8:	b	40f2d4 <clock_supported@plt+0xafdc>
  40f2cc:	ldur	x8, [x29, #-8]
  40f2d0:	str	xzr, [x8, #40]
  40f2d4:	ldur	x8, [x29, #-8]
  40f2d8:	ldr	x8, [x8]
  40f2dc:	cbz	x8, 40f2fc <clock_supported@plt+0xb004>
  40f2e0:	ldur	x8, [x29, #-8]
  40f2e4:	ldr	x8, [x8]
  40f2e8:	ldr	x0, [x8, #48]
  40f2ec:	ldur	x1, [x29, #-8]
  40f2f0:	ldur	x8, [x29, #-8]
  40f2f4:	add	x2, x8, #0x30
  40f2f8:	bl	4042b8 <prioq_reshuffle@plt>
  40f2fc:	ldp	x29, x30, [sp, #48]
  40f300:	add	sp, sp, #0x40
  40f304:	ret
  40f308:	sub	sp, sp, #0x20
  40f30c:	str	x0, [sp, #16]
  40f310:	str	x1, [sp, #8]
  40f314:	ldr	x8, [sp, #16]
  40f318:	ldr	x9, [sp, #8]
  40f31c:	add	x8, x8, x9
  40f320:	str	x8, [sp]
  40f324:	ldr	x8, [sp]
  40f328:	ldr	x9, [sp, #16]
  40f32c:	cmp	x8, x9
  40f330:	b.cc	40f344 <clock_supported@plt+0xb04c>  // b.lo, b.ul, b.last
  40f334:	ldr	x8, [sp]
  40f338:	ldr	x9, [sp, #8]
  40f33c:	cmp	x8, x9
  40f340:	b.cs	40f350 <clock_supported@plt+0xb058>  // b.hs, b.nlast
  40f344:	mov	x8, #0xffffffffffffffff    	// #-1
  40f348:	str	x8, [sp, #24]
  40f34c:	b	40f358 <clock_supported@plt+0xb060>
  40f350:	ldr	x8, [sp]
  40f354:	str	x8, [sp, #24]
  40f358:	ldr	x0, [sp, #24]
  40f35c:	add	sp, sp, #0x20
  40f360:	ret
  40f364:	sub	sp, sp, #0x40
  40f368:	stp	x29, x30, [sp, #48]
  40f36c:	add	x29, sp, #0x30
  40f370:	stur	x0, [x29, #-16]
  40f374:	str	x1, [sp, #24]
  40f378:	ldur	x8, [x29, #-16]
  40f37c:	ldr	x9, [sp, #24]
  40f380:	cmp	x8, x9
  40f384:	b.ne	40f398 <clock_supported@plt+0xb0a0>  // b.any
  40f388:	mov	w8, #0x1                   	// #1
  40f38c:	and	w8, w8, #0x1
  40f390:	sturb	w8, [x29, #-1]
  40f394:	b	40f424 <clock_supported@plt+0xb12c>
  40f398:	ldur	x8, [x29, #-16]
  40f39c:	cbz	x8, 40f3a8 <clock_supported@plt+0xb0b0>
  40f3a0:	ldr	x8, [sp, #24]
  40f3a4:	cbnz	x8, 40f3b8 <clock_supported@plt+0xb0c0>
  40f3a8:	mov	w8, wzr
  40f3ac:	and	w8, w8, #0x1
  40f3b0:	sturb	w8, [x29, #-1]
  40f3b4:	b	40f424 <clock_supported@plt+0xb12c>
  40f3b8:	ldur	x8, [x29, #-16]
  40f3bc:	ldr	x8, [x8, #96]
  40f3c0:	ldr	x9, [sp, #24]
  40f3c4:	ldr	x9, [x9, #96]
  40f3c8:	cmp	x8, x9
  40f3cc:	b.eq	40f3e0 <clock_supported@plt+0xb0e8>  // b.none
  40f3d0:	mov	w8, wzr
  40f3d4:	and	w8, w8, #0x1
  40f3d8:	sturb	w8, [x29, #-1]
  40f3dc:	b	40f424 <clock_supported@plt+0xb12c>
  40f3e0:	ldur	x0, [x29, #-16]
  40f3e4:	bl	40ef2c <clock_supported@plt+0xac34>
  40f3e8:	ldr	x8, [sp, #24]
  40f3ec:	str	x0, [sp, #16]
  40f3f0:	mov	x0, x8
  40f3f4:	bl	40ef2c <clock_supported@plt+0xac34>
  40f3f8:	ldur	x8, [x29, #-16]
  40f3fc:	ldr	x2, [x8, #96]
  40f400:	ldr	x1, [sp, #16]
  40f404:	str	x0, [sp, #8]
  40f408:	mov	x0, x1
  40f40c:	ldr	x1, [sp, #8]
  40f410:	bl	403d48 <memcmp@plt>
  40f414:	cmp	w0, #0x0
  40f418:	cset	w9, eq  // eq = none
  40f41c:	and	w9, w9, #0x1
  40f420:	sturb	w9, [x29, #-1]
  40f424:	ldurb	w8, [x29, #-1]
  40f428:	and	w0, w8, #0x1
  40f42c:	ldp	x29, x30, [sp, #48]
  40f430:	add	sp, sp, #0x40
  40f434:	ret
  40f438:	sub	sp, sp, #0x40
  40f43c:	stp	x29, x30, [sp, #48]
  40f440:	add	x29, sp, #0x30
  40f444:	mov	w8, #0x1                   	// #1
  40f448:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40f44c:	add	x9, x9, #0x927
  40f450:	add	x9, x9, #0x3
  40f454:	mov	w10, #0x0                   	// #0
  40f458:	stur	x0, [x29, #-16]
  40f45c:	str	x1, [sp, #24]
  40f460:	str	w8, [sp, #20]
  40f464:	str	x9, [sp, #8]
  40f468:	str	w10, [sp, #4]
  40f46c:	ldur	x8, [x29, #-16]
  40f470:	cmp	x8, #0x0
  40f474:	cset	w9, ne  // ne = any
  40f478:	mov	w10, #0x1                   	// #1
  40f47c:	eor	w9, w9, #0x1
  40f480:	eor	w9, w9, w10
  40f484:	and	w9, w9, #0x1
  40f488:	mov	w0, w9
  40f48c:	sxtw	x8, w0
  40f490:	cbz	x8, 40f4a0 <clock_supported@plt+0xb1a8>
  40f494:	ldr	w8, [sp, #20]
  40f498:	tbnz	w8, #0, 40f4d8 <clock_supported@plt+0xb1e0>
  40f49c:	b	40f4cc <clock_supported@plt+0xb1d4>
  40f4a0:	mov	w8, wzr
  40f4a4:	mov	w0, w8
  40f4a8:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f4ac:	add	x1, x1, #0xa52
  40f4b0:	ldr	x2, [sp, #8]
  40f4b4:	mov	w3, #0x15e                 	// #350
  40f4b8:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40f4bc:	add	x4, x4, #0xdd0
  40f4c0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f4c4:	ldr	w8, [sp, #4]
  40f4c8:	tbnz	w8, #0, 40f4d8 <clock_supported@plt+0xb1e0>
  40f4cc:	mov	w8, #0xffffffea            	// #-22
  40f4d0:	stur	w8, [x29, #-4]
  40f4d4:	b	40f560 <clock_supported@plt+0xb268>
  40f4d8:	ldr	x8, [sp, #24]
  40f4dc:	cmp	x8, #0x0
  40f4e0:	cset	w9, ne  // ne = any
  40f4e4:	mov	w10, #0x1                   	// #1
  40f4e8:	eor	w9, w9, #0x1
  40f4ec:	eor	w9, w9, w10
  40f4f0:	and	w9, w9, #0x1
  40f4f4:	mov	w0, w9
  40f4f8:	sxtw	x8, w0
  40f4fc:	cbz	x8, 40f50c <clock_supported@plt+0xb214>
  40f500:	ldr	w8, [sp, #20]
  40f504:	tbnz	w8, #0, 40f544 <clock_supported@plt+0xb24c>
  40f508:	b	40f538 <clock_supported@plt+0xb240>
  40f50c:	mov	w8, wzr
  40f510:	mov	w0, w8
  40f514:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f518:	add	x1, x1, #0xe21
  40f51c:	ldr	x2, [sp, #8]
  40f520:	mov	w3, #0x15f                 	// #351
  40f524:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40f528:	add	x4, x4, #0xdd0
  40f52c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f530:	ldr	w8, [sp, #4]
  40f534:	tbnz	w8, #0, 40f544 <clock_supported@plt+0xb24c>
  40f538:	mov	w8, #0xffffffea            	// #-22
  40f53c:	stur	w8, [x29, #-4]
  40f540:	b	40f560 <clock_supported@plt+0xb268>
  40f544:	ldr	x8, [sp, #24]
  40f548:	ldur	x9, [x29, #-16]
  40f54c:	ldr	w10, [x9, #52]
  40f550:	str	w10, [x8]
  40f554:	ldrh	w10, [x9, #56]
  40f558:	strh	w10, [x8, #4]
  40f55c:	stur	wzr, [x29, #-4]
  40f560:	ldur	w0, [x29, #-4]
  40f564:	ldp	x29, x30, [sp, #48]
  40f568:	add	sp, sp, #0x40
  40f56c:	ret
  40f570:	sub	sp, sp, #0x40
  40f574:	stp	x29, x30, [sp, #48]
  40f578:	add	x29, sp, #0x30
  40f57c:	mov	w8, #0x1                   	// #1
  40f580:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40f584:	add	x9, x9, #0x927
  40f588:	add	x9, x9, #0x3
  40f58c:	mov	w10, #0x0                   	// #0
  40f590:	stur	x0, [x29, #-16]
  40f594:	str	x1, [sp, #24]
  40f598:	str	w8, [sp, #20]
  40f59c:	str	x9, [sp, #8]
  40f5a0:	str	w10, [sp, #4]
  40f5a4:	ldur	x8, [x29, #-16]
  40f5a8:	cmp	x8, #0x0
  40f5ac:	cset	w9, ne  // ne = any
  40f5b0:	mov	w10, #0x1                   	// #1
  40f5b4:	eor	w9, w9, #0x1
  40f5b8:	eor	w9, w9, w10
  40f5bc:	and	w9, w9, #0x1
  40f5c0:	mov	w0, w9
  40f5c4:	sxtw	x8, w0
  40f5c8:	cbz	x8, 40f5d8 <clock_supported@plt+0xb2e0>
  40f5cc:	ldr	w8, [sp, #20]
  40f5d0:	tbnz	w8, #0, 40f610 <clock_supported@plt+0xb318>
  40f5d4:	b	40f604 <clock_supported@plt+0xb30c>
  40f5d8:	mov	w8, wzr
  40f5dc:	mov	w0, w8
  40f5e0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f5e4:	add	x1, x1, #0xa52
  40f5e8:	ldr	x2, [sp, #8]
  40f5ec:	mov	w3, #0x166                 	// #358
  40f5f0:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40f5f4:	add	x4, x4, #0xe29
  40f5f8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f5fc:	ldr	w8, [sp, #4]
  40f600:	tbnz	w8, #0, 40f610 <clock_supported@plt+0xb318>
  40f604:	mov	w8, #0xffffffea            	// #-22
  40f608:	stur	w8, [x29, #-4]
  40f60c:	b	40f698 <clock_supported@plt+0xb3a0>
  40f610:	ldr	x8, [sp, #24]
  40f614:	cmp	x8, #0x0
  40f618:	cset	w9, ne  // ne = any
  40f61c:	mov	w10, #0x1                   	// #1
  40f620:	eor	w9, w9, #0x1
  40f624:	eor	w9, w9, w10
  40f628:	and	w9, w9, #0x1
  40f62c:	mov	w0, w9
  40f630:	sxtw	x8, w0
  40f634:	cbz	x8, 40f644 <clock_supported@plt+0xb34c>
  40f638:	ldr	w8, [sp, #20]
  40f63c:	tbnz	w8, #0, 40f67c <clock_supported@plt+0xb384>
  40f640:	b	40f670 <clock_supported@plt+0xb378>
  40f644:	mov	w8, wzr
  40f648:	mov	w0, w8
  40f64c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f650:	add	x1, x1, #0xe21
  40f654:	ldr	x2, [sp, #8]
  40f658:	mov	w3, #0x167                 	// #359
  40f65c:	adrp	x4, 413000 <clock_supported@plt+0xed08>
  40f660:	add	x4, x4, #0xe29
  40f664:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f668:	ldr	w8, [sp, #4]
  40f66c:	tbnz	w8, #0, 40f67c <clock_supported@plt+0xb384>
  40f670:	mov	w8, #0xffffffea            	// #-22
  40f674:	stur	w8, [x29, #-4]
  40f678:	b	40f698 <clock_supported@plt+0xb3a0>
  40f67c:	ldr	x8, [sp, #24]
  40f680:	ldur	x9, [x29, #-16]
  40f684:	ldur	w10, [x9, #58]
  40f688:	str	w10, [x8]
  40f68c:	ldrh	w10, [x9, #62]
  40f690:	strh	w10, [x8, #4]
  40f694:	stur	wzr, [x29, #-4]
  40f698:	ldur	w0, [x29, #-4]
  40f69c:	ldp	x29, x30, [sp, #48]
  40f6a0:	add	sp, sp, #0x40
  40f6a4:	ret
  40f6a8:	sub	sp, sp, #0x50
  40f6ac:	stp	x29, x30, [sp, #64]
  40f6b0:	add	x29, sp, #0x40
  40f6b4:	mov	w8, #0x1                   	// #1
  40f6b8:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40f6bc:	add	x9, x9, #0x927
  40f6c0:	add	x9, x9, #0x3
  40f6c4:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  40f6c8:	add	x10, x10, #0xe7f
  40f6cc:	mov	w11, #0x0                   	// #0
  40f6d0:	stur	x0, [x29, #-16]
  40f6d4:	stur	x1, [x29, #-24]
  40f6d8:	str	x2, [sp, #32]
  40f6dc:	str	w8, [sp, #28]
  40f6e0:	str	x9, [sp, #16]
  40f6e4:	str	x10, [sp, #8]
  40f6e8:	str	w11, [sp, #4]
  40f6ec:	ldur	x8, [x29, #-16]
  40f6f0:	cmp	x8, #0x0
  40f6f4:	cset	w9, ne  // ne = any
  40f6f8:	mov	w10, #0x1                   	// #1
  40f6fc:	eor	w9, w9, #0x1
  40f700:	eor	w9, w9, w10
  40f704:	and	w9, w9, #0x1
  40f708:	mov	w0, w9
  40f70c:	sxtw	x8, w0
  40f710:	cbz	x8, 40f720 <clock_supported@plt+0xb428>
  40f714:	ldr	w8, [sp, #28]
  40f718:	tbnz	w8, #0, 40f754 <clock_supported@plt+0xb45c>
  40f71c:	b	40f748 <clock_supported@plt+0xb450>
  40f720:	mov	w8, wzr
  40f724:	mov	w0, w8
  40f728:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f72c:	add	x1, x1, #0xa52
  40f730:	ldr	x2, [sp, #16]
  40f734:	mov	w3, #0x16e                 	// #366
  40f738:	ldr	x4, [sp, #8]
  40f73c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f740:	ldr	w8, [sp, #4]
  40f744:	tbnz	w8, #0, 40f754 <clock_supported@plt+0xb45c>
  40f748:	mov	w8, #0xffffffea            	// #-22
  40f74c:	stur	w8, [x29, #-4]
  40f750:	b	40f848 <clock_supported@plt+0xb550>
  40f754:	ldur	x8, [x29, #-24]
  40f758:	cmp	x8, #0x0
  40f75c:	cset	w9, ne  // ne = any
  40f760:	mov	w10, #0x1                   	// #1
  40f764:	eor	w9, w9, #0x1
  40f768:	eor	w9, w9, w10
  40f76c:	and	w9, w9, #0x1
  40f770:	mov	w0, w9
  40f774:	sxtw	x8, w0
  40f778:	cbz	x8, 40f788 <clock_supported@plt+0xb490>
  40f77c:	ldr	w8, [sp, #28]
  40f780:	tbnz	w8, #0, 40f7bc <clock_supported@plt+0xb4c4>
  40f784:	b	40f7b0 <clock_supported@plt+0xb4b8>
  40f788:	mov	w8, wzr
  40f78c:	mov	w0, w8
  40f790:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40f794:	add	x1, x1, #0x89b
  40f798:	ldr	x2, [sp, #16]
  40f79c:	mov	w3, #0x16f                 	// #367
  40f7a0:	ldr	x4, [sp, #8]
  40f7a4:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f7a8:	ldr	w8, [sp, #4]
  40f7ac:	tbnz	w8, #0, 40f7bc <clock_supported@plt+0xb4c4>
  40f7b0:	mov	w8, #0xffffffea            	// #-22
  40f7b4:	stur	w8, [x29, #-4]
  40f7b8:	b	40f848 <clock_supported@plt+0xb550>
  40f7bc:	ldr	x8, [sp, #32]
  40f7c0:	cmp	x8, #0x0
  40f7c4:	cset	w9, ne  // ne = any
  40f7c8:	mov	w10, #0x1                   	// #1
  40f7cc:	eor	w9, w9, #0x1
  40f7d0:	eor	w9, w9, w10
  40f7d4:	and	w9, w9, #0x1
  40f7d8:	mov	w0, w9
  40f7dc:	sxtw	x8, w0
  40f7e0:	cbz	x8, 40f7f0 <clock_supported@plt+0xb4f8>
  40f7e4:	ldr	w8, [sp, #28]
  40f7e8:	tbnz	w8, #0, 40f824 <clock_supported@plt+0xb52c>
  40f7ec:	b	40f818 <clock_supported@plt+0xb520>
  40f7f0:	mov	w8, wzr
  40f7f4:	mov	w0, w8
  40f7f8:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f7fc:	add	x1, x1, #0xec9
  40f800:	ldr	x2, [sp, #16]
  40f804:	mov	w3, #0x170                 	// #368
  40f808:	ldr	x4, [sp, #8]
  40f80c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f810:	ldr	w8, [sp, #4]
  40f814:	tbnz	w8, #0, 40f824 <clock_supported@plt+0xb52c>
  40f818:	mov	w8, #0xffffffea            	// #-22
  40f81c:	stur	w8, [x29, #-4]
  40f820:	b	40f848 <clock_supported@plt+0xb550>
  40f824:	ldur	x0, [x29, #-16]
  40f828:	bl	40ef2c <clock_supported@plt+0xac34>
  40f82c:	ldur	x8, [x29, #-24]
  40f830:	str	x0, [x8]
  40f834:	ldur	x8, [x29, #-16]
  40f838:	ldr	x8, [x8, #96]
  40f83c:	ldr	x9, [sp, #32]
  40f840:	str	x8, [x9]
  40f844:	stur	wzr, [x29, #-4]
  40f848:	ldur	w0, [x29, #-4]
  40f84c:	ldp	x29, x30, [sp, #64]
  40f850:	add	sp, sp, #0x50
  40f854:	ret
  40f858:	sub	sp, sp, #0x60
  40f85c:	stp	x29, x30, [sp, #80]
  40f860:	add	x29, sp, #0x50
  40f864:	mov	w8, #0x1                   	// #1
  40f868:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40f86c:	add	x9, x9, #0x927
  40f870:	add	x9, x9, #0x3
  40f874:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  40f878:	add	x10, x10, #0xece
  40f87c:	mov	w11, #0x0                   	// #0
  40f880:	stur	x0, [x29, #-16]
  40f884:	stur	x1, [x29, #-24]
  40f888:	stur	x2, [x29, #-32]
  40f88c:	str	x3, [sp, #40]
  40f890:	str	w8, [sp, #36]
  40f894:	str	x9, [sp, #24]
  40f898:	str	x10, [sp, #16]
  40f89c:	str	w11, [sp, #12]
  40f8a0:	ldur	x8, [x29, #-16]
  40f8a4:	cmp	x8, #0x0
  40f8a8:	cset	w9, ne  // ne = any
  40f8ac:	mov	w10, #0x1                   	// #1
  40f8b0:	eor	w9, w9, #0x1
  40f8b4:	eor	w9, w9, w10
  40f8b8:	and	w9, w9, #0x1
  40f8bc:	mov	w0, w9
  40f8c0:	sxtw	x8, w0
  40f8c4:	cbz	x8, 40f8d4 <clock_supported@plt+0xb5dc>
  40f8c8:	ldr	w8, [sp, #36]
  40f8cc:	tbnz	w8, #0, 40f908 <clock_supported@plt+0xb610>
  40f8d0:	b	40f8fc <clock_supported@plt+0xb604>
  40f8d4:	mov	w8, wzr
  40f8d8:	mov	w0, w8
  40f8dc:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40f8e0:	add	x1, x1, #0xa52
  40f8e4:	ldr	x2, [sp, #24]
  40f8e8:	mov	w3, #0x179                 	// #377
  40f8ec:	ldr	x4, [sp, #16]
  40f8f0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f8f4:	ldr	w8, [sp, #12]
  40f8f8:	tbnz	w8, #0, 40f908 <clock_supported@plt+0xb610>
  40f8fc:	mov	w8, #0xffffffea            	// #-22
  40f900:	stur	w8, [x29, #-4]
  40f904:	b	40fad0 <clock_supported@plt+0xb7d8>
  40f908:	ldur	x8, [x29, #-24]
  40f90c:	cmp	x8, #0x0
  40f910:	cset	w9, ne  // ne = any
  40f914:	mov	w10, #0x1                   	// #1
  40f918:	eor	w9, w9, #0x1
  40f91c:	eor	w9, w9, w10
  40f920:	and	w9, w9, #0x1
  40f924:	mov	w0, w9
  40f928:	sxtw	x8, w0
  40f92c:	cbz	x8, 40f93c <clock_supported@plt+0xb644>
  40f930:	ldr	w8, [sp, #36]
  40f934:	tbnz	w8, #0, 40f970 <clock_supported@plt+0xb678>
  40f938:	b	40f964 <clock_supported@plt+0xb66c>
  40f93c:	mov	w8, wzr
  40f940:	mov	w0, w8
  40f944:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40f948:	add	x1, x1, #0x799
  40f94c:	ldr	x2, [sp, #24]
  40f950:	mov	w3, #0x17a                 	// #378
  40f954:	ldr	x4, [sp, #16]
  40f958:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f95c:	ldr	w8, [sp, #12]
  40f960:	tbnz	w8, #0, 40f970 <clock_supported@plt+0xb678>
  40f964:	mov	w8, #0xffffffea            	// #-22
  40f968:	stur	w8, [x29, #-4]
  40f96c:	b	40fad0 <clock_supported@plt+0xb7d8>
  40f970:	ldur	x8, [x29, #-32]
  40f974:	cmp	x8, #0x0
  40f978:	cset	w9, ne  // ne = any
  40f97c:	mov	w10, #0x1                   	// #1
  40f980:	eor	w9, w9, #0x1
  40f984:	eor	w9, w9, w10
  40f988:	and	w9, w9, #0x1
  40f98c:	mov	w0, w9
  40f990:	sxtw	x8, w0
  40f994:	cbz	x8, 40f9a4 <clock_supported@plt+0xb6ac>
  40f998:	ldr	w8, [sp, #36]
  40f99c:	tbnz	w8, #0, 40f9d8 <clock_supported@plt+0xb6e0>
  40f9a0:	b	40f9cc <clock_supported@plt+0xb6d4>
  40f9a4:	mov	w8, wzr
  40f9a8:	mov	w0, w8
  40f9ac:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40f9b0:	add	x1, x1, #0x89b
  40f9b4:	ldr	x2, [sp, #24]
  40f9b8:	mov	w3, #0x17b                 	// #379
  40f9bc:	ldr	x4, [sp, #16]
  40f9c0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40f9c4:	ldr	w8, [sp, #12]
  40f9c8:	tbnz	w8, #0, 40f9d8 <clock_supported@plt+0xb6e0>
  40f9cc:	mov	w8, #0xffffffea            	// #-22
  40f9d0:	stur	w8, [x29, #-4]
  40f9d4:	b	40fad0 <clock_supported@plt+0xb7d8>
  40f9d8:	ldr	x8, [sp, #40]
  40f9dc:	cmp	x8, #0x0
  40f9e0:	cset	w9, ne  // ne = any
  40f9e4:	mov	w10, #0x1                   	// #1
  40f9e8:	eor	w9, w9, #0x1
  40f9ec:	eor	w9, w9, w10
  40f9f0:	and	w9, w9, #0x1
  40f9f4:	mov	w0, w9
  40f9f8:	sxtw	x8, w0
  40f9fc:	cbz	x8, 40fa0c <clock_supported@plt+0xb714>
  40fa00:	ldr	w8, [sp, #36]
  40fa04:	tbnz	w8, #0, 40fa40 <clock_supported@plt+0xb748>
  40fa08:	b	40fa34 <clock_supported@plt+0xb73c>
  40fa0c:	mov	w8, wzr
  40fa10:	mov	w0, w8
  40fa14:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40fa18:	add	x1, x1, #0xec9
  40fa1c:	ldr	x2, [sp, #24]
  40fa20:	mov	w3, #0x17c                 	// #380
  40fa24:	ldr	x4, [sp, #16]
  40fa28:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40fa2c:	ldr	w8, [sp, #12]
  40fa30:	tbnz	w8, #0, 40fa40 <clock_supported@plt+0xb748>
  40fa34:	mov	w8, #0xffffffea            	// #-22
  40fa38:	stur	w8, [x29, #-4]
  40fa3c:	b	40fad0 <clock_supported@plt+0xb7d8>
  40fa40:	ldur	x8, [x29, #-16]
  40fa44:	ldr	x8, [x8, #72]
  40fa48:	cmp	x8, #0x0
  40fa4c:	cset	w9, hi  // hi = pmore
  40fa50:	mov	w10, #0x1                   	// #1
  40fa54:	eor	w9, w9, #0x1
  40fa58:	eor	w9, w9, w10
  40fa5c:	eor	w9, w9, w10
  40fa60:	and	w9, w9, #0x1
  40fa64:	mov	w0, w9
  40fa68:	sxtw	x8, w0
  40fa6c:	cbz	x8, 40fa90 <clock_supported@plt+0xb798>
  40fa70:	mov	w8, wzr
  40fa74:	mov	w0, w8
  40fa78:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40fa7c:	add	x1, x1, #0xf2a
  40fa80:	ldr	x2, [sp, #24]
  40fa84:	mov	w3, #0x17e                 	// #382
  40fa88:	ldr	x4, [sp, #16]
  40fa8c:	bl	403958 <log_assert_failed_realm@plt>
  40fa90:	ldur	x8, [x29, #-16]
  40fa94:	ldr	x8, [x8, #64]
  40fa98:	ldrb	w9, [x8]
  40fa9c:	ldur	x8, [x29, #-24]
  40faa0:	strb	w9, [x8]
  40faa4:	ldur	x8, [x29, #-16]
  40faa8:	ldr	x8, [x8, #64]
  40faac:	add	x8, x8, #0x1
  40fab0:	ldur	x10, [x29, #-32]
  40fab4:	str	x8, [x10]
  40fab8:	ldur	x8, [x29, #-16]
  40fabc:	ldr	x8, [x8, #72]
  40fac0:	subs	x8, x8, #0x1
  40fac4:	ldr	x10, [sp, #40]
  40fac8:	str	x8, [x10]
  40facc:	stur	wzr, [x29, #-4]
  40fad0:	ldur	w0, [x29, #-4]
  40fad4:	ldp	x29, x30, [sp, #80]
  40fad8:	add	sp, sp, #0x60
  40fadc:	ret
  40fae0:	sub	sp, sp, #0x50
  40fae4:	stp	x29, x30, [sp, #64]
  40fae8:	add	x29, sp, #0x40
  40faec:	mov	w8, #0x1                   	// #1
  40faf0:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40faf4:	add	x9, x9, #0x927
  40faf8:	add	x9, x9, #0x3
  40fafc:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  40fb00:	add	x10, x10, #0xf44
  40fb04:	mov	w11, #0x0                   	// #0
  40fb08:	stur	x0, [x29, #-16]
  40fb0c:	stur	x1, [x29, #-24]
  40fb10:	str	w8, [sp, #24]
  40fb14:	str	x9, [sp, #16]
  40fb18:	str	x10, [sp, #8]
  40fb1c:	str	w11, [sp, #4]
  40fb20:	ldur	x8, [x29, #-16]
  40fb24:	cmp	x8, #0x0
  40fb28:	cset	w9, ne  // ne = any
  40fb2c:	mov	w10, #0x1                   	// #1
  40fb30:	eor	w9, w9, #0x1
  40fb34:	eor	w9, w9, w10
  40fb38:	and	w9, w9, #0x1
  40fb3c:	mov	w0, w9
  40fb40:	sxtw	x8, w0
  40fb44:	cbz	x8, 40fb54 <clock_supported@plt+0xb85c>
  40fb48:	ldr	w8, [sp, #24]
  40fb4c:	tbnz	w8, #0, 40fb88 <clock_supported@plt+0xb890>
  40fb50:	b	40fb7c <clock_supported@plt+0xb884>
  40fb54:	mov	w8, wzr
  40fb58:	mov	w0, w8
  40fb5c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40fb60:	add	x1, x1, #0xa52
  40fb64:	ldr	x2, [sp, #16]
  40fb68:	mov	w3, #0x1b1                 	// #433
  40fb6c:	ldr	x4, [sp, #8]
  40fb70:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40fb74:	ldr	w8, [sp, #4]
  40fb78:	tbnz	w8, #0, 40fb88 <clock_supported@plt+0xb890>
  40fb7c:	mov	w8, #0xffffffea            	// #-22
  40fb80:	stur	w8, [x29, #-4]
  40fb84:	b	40fddc <clock_supported@plt+0xbae4>
  40fb88:	ldur	x8, [x29, #-24]
  40fb8c:	cmp	x8, #0x0
  40fb90:	cset	w9, ne  // ne = any
  40fb94:	mov	w10, #0x1                   	// #1
  40fb98:	eor	w9, w9, #0x1
  40fb9c:	eor	w9, w9, w10
  40fba0:	and	w9, w9, #0x1
  40fba4:	mov	w0, w9
  40fba8:	sxtw	x8, w0
  40fbac:	cbz	x8, 40fbbc <clock_supported@plt+0xb8c4>
  40fbb0:	ldr	w8, [sp, #24]
  40fbb4:	tbnz	w8, #0, 40fbf0 <clock_supported@plt+0xb8f8>
  40fbb8:	b	40fbe4 <clock_supported@plt+0xb8ec>
  40fbbc:	mov	w8, wzr
  40fbc0:	mov	w0, w8
  40fbc4:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  40fbc8:	add	x1, x1, #0x89b
  40fbcc:	ldr	x2, [sp, #16]
  40fbd0:	mov	w3, #0x1b2                 	// #434
  40fbd4:	ldr	x4, [sp, #8]
  40fbd8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  40fbdc:	ldr	w8, [sp, #4]
  40fbe0:	tbnz	w8, #0, 40fbf0 <clock_supported@plt+0xb8f8>
  40fbe4:	mov	w8, #0xffffffea            	// #-22
  40fbe8:	stur	w8, [x29, #-4]
  40fbec:	b	40fddc <clock_supported@plt+0xbae4>
  40fbf0:	ldur	x8, [x29, #-16]
  40fbf4:	ldr	x8, [x8, #152]
  40fbf8:	cbz	x8, 40fc14 <clock_supported@plt+0xb91c>
  40fbfc:	ldur	x8, [x29, #-16]
  40fc00:	ldr	x8, [x8, #152]
  40fc04:	ldur	x9, [x29, #-24]
  40fc08:	str	x8, [x9]
  40fc0c:	stur	wzr, [x29, #-4]
  40fc10:	b	40fddc <clock_supported@plt+0xbae4>
  40fc14:	ldur	x8, [x29, #-16]
  40fc18:	ldr	x8, [x8, #72]
  40fc1c:	cmp	x8, #0x0
  40fc20:	cset	w9, hi  // hi = pmore
  40fc24:	mov	w10, #0x1                   	// #1
  40fc28:	eor	w9, w9, #0x1
  40fc2c:	eor	w9, w9, w10
  40fc30:	eor	w9, w9, w10
  40fc34:	and	w9, w9, #0x1
  40fc38:	mov	w0, w9
  40fc3c:	sxtw	x8, w0
  40fc40:	cbz	x8, 40fc64 <clock_supported@plt+0xb96c>
  40fc44:	mov	w8, wzr
  40fc48:	mov	w0, w8
  40fc4c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  40fc50:	add	x1, x1, #0xf2a
  40fc54:	ldr	x2, [sp, #16]
  40fc58:	mov	w3, #0x1b9                 	// #441
  40fc5c:	ldr	x4, [sp, #8]
  40fc60:	bl	403958 <log_assert_failed_realm@plt>
  40fc64:	ldur	x8, [x29, #-16]
  40fc68:	ldr	x8, [x8, #64]
  40fc6c:	ldrb	w9, [x8]
  40fc70:	subs	w10, w9, #0x1
  40fc74:	cmp	w10, #0x2
  40fc78:	str	w9, [sp]
  40fc7c:	b.ls	40fcc4 <clock_supported@plt+0xb9cc>  // b.plast
  40fc80:	b	40fc84 <clock_supported@plt+0xb98c>
  40fc84:	ldr	w8, [sp]
  40fc88:	cmp	w8, #0x4
  40fc8c:	b.eq	40fcfc <clock_supported@plt+0xba04>  // b.none
  40fc90:	b	40fc94 <clock_supported@plt+0xb99c>
  40fc94:	ldr	w8, [sp]
  40fc98:	cmp	w8, #0x5
  40fc9c:	b.eq	40fd4c <clock_supported@plt+0xba54>  // b.none
  40fca0:	b	40fca4 <clock_supported@plt+0xb9ac>
  40fca4:	ldr	w8, [sp]
  40fca8:	subs	w9, w8, #0x6
  40fcac:	mov	w10, #0x1                   	// #1
  40fcb0:	cmp	w9, #0x1
  40fcb4:	cset	w9, ls  // ls = plast
  40fcb8:	eor	w9, w9, w10
  40fcbc:	tbnz	w9, #0, 40fd98 <clock_supported@plt+0xbaa0>
  40fcc0:	b	40fcc4 <clock_supported@plt+0xb9cc>
  40fcc4:	ldur	x8, [x29, #-16]
  40fcc8:	ldr	x8, [x8, #64]
  40fccc:	add	x0, x8, #0x1
  40fcd0:	ldur	x8, [x29, #-16]
  40fcd4:	ldr	x8, [x8, #72]
  40fcd8:	subs	x1, x8, #0x1
  40fcdc:	bl	404278 <cescape_length@plt>
  40fce0:	str	x0, [sp, #32]
  40fce4:	ldr	x8, [sp, #32]
  40fce8:	cbnz	x8, 40fcf8 <clock_supported@plt+0xba00>
  40fcec:	mov	w8, #0xfffffff4            	// #-12
  40fcf0:	stur	w8, [x29, #-4]
  40fcf4:	b	40fddc <clock_supported@plt+0xbae4>
  40fcf8:	b	40fdc4 <clock_supported@plt+0xbacc>
  40fcfc:	ldur	x8, [x29, #-16]
  40fd00:	ldr	x0, [x8, #64]
  40fd04:	ldur	x8, [x29, #-16]
  40fd08:	ldr	x1, [x8, #72]
  40fd0c:	add	x2, sp, #0x20
  40fd10:	bl	40fdec <clock_supported@plt+0xbaf4>
  40fd14:	str	w0, [sp, #28]
  40fd18:	ldr	w9, [sp, #28]
  40fd1c:	cmp	w9, #0x0
  40fd20:	cset	w9, ge  // ge = tcont
  40fd24:	tbnz	w9, #0, 40fd34 <clock_supported@plt+0xba3c>
  40fd28:	ldr	w8, [sp, #28]
  40fd2c:	stur	w8, [x29, #-4]
  40fd30:	b	40fddc <clock_supported@plt+0xbae4>
  40fd34:	ldr	w8, [sp, #28]
  40fd38:	cmp	w8, #0x0
  40fd3c:	cset	w8, le
  40fd40:	tbnz	w8, #0, 40fd48 <clock_supported@plt+0xba50>
  40fd44:	b	40fdc4 <clock_supported@plt+0xbacc>
  40fd48:	b	40fd98 <clock_supported@plt+0xbaa0>
  40fd4c:	ldur	x8, [x29, #-16]
  40fd50:	ldr	x0, [x8, #64]
  40fd54:	ldur	x8, [x29, #-16]
  40fd58:	ldr	x1, [x8, #72]
  40fd5c:	add	x2, sp, #0x20
  40fd60:	bl	40fefc <clock_supported@plt+0xbc04>
  40fd64:	str	w0, [sp, #28]
  40fd68:	ldr	w9, [sp, #28]
  40fd6c:	cmp	w9, #0x0
  40fd70:	cset	w9, ge  // ge = tcont
  40fd74:	tbnz	w9, #0, 40fd84 <clock_supported@plt+0xba8c>
  40fd78:	ldr	w8, [sp, #28]
  40fd7c:	stur	w8, [x29, #-4]
  40fd80:	b	40fddc <clock_supported@plt+0xbae4>
  40fd84:	ldr	w8, [sp, #28]
  40fd88:	cmp	w8, #0x0
  40fd8c:	cset	w8, le
  40fd90:	tbnz	w8, #0, 40fd98 <clock_supported@plt+0xbaa0>
  40fd94:	b	40fdc4 <clock_supported@plt+0xbacc>
  40fd98:	ldur	x8, [x29, #-16]
  40fd9c:	ldr	x0, [x8, #64]
  40fda0:	ldur	x8, [x29, #-16]
  40fda4:	ldr	x1, [x8, #72]
  40fda8:	bl	4042d8 <hexmem@plt>
  40fdac:	str	x0, [sp, #32]
  40fdb0:	ldr	x8, [sp, #32]
  40fdb4:	cbnz	x8, 40fdc4 <clock_supported@plt+0xbacc>
  40fdb8:	mov	w8, #0xfffffff4            	// #-12
  40fdbc:	stur	w8, [x29, #-4]
  40fdc0:	b	40fddc <clock_supported@plt+0xbae4>
  40fdc4:	ldr	x8, [sp, #32]
  40fdc8:	ldur	x9, [x29, #-16]
  40fdcc:	str	x8, [x9, #152]
  40fdd0:	ldur	x9, [x29, #-24]
  40fdd4:	str	x8, [x9]
  40fdd8:	stur	wzr, [x29, #-4]
  40fddc:	ldur	w0, [x29, #-4]
  40fde0:	ldp	x29, x30, [sp, #64]
  40fde4:	add	sp, sp, #0x50
  40fde8:	ret
  40fdec:	sub	sp, sp, #0x50
  40fdf0:	stp	x29, x30, [sp, #64]
  40fdf4:	add	x29, sp, #0x40
  40fdf8:	adrp	x8, 413000 <clock_supported@plt+0xed08>
  40fdfc:	add	x8, x8, #0x927
  40fe00:	add	x8, x8, #0x3
  40fe04:	stur	x0, [x29, #-16]
  40fe08:	stur	x1, [x29, #-24]
  40fe0c:	str	x2, [sp, #32]
  40fe10:	str	x8, [sp, #8]
  40fe14:	ldur	x8, [x29, #-16]
  40fe18:	mov	w9, #0x1                   	// #1
  40fe1c:	str	w9, [sp, #4]
  40fe20:	cbnz	x8, 40fe34 <clock_supported@plt+0xbb3c>
  40fe24:	ldur	x8, [x29, #-24]
  40fe28:	cmp	x8, #0x0
  40fe2c:	cset	w9, ls  // ls = plast
  40fe30:	str	w9, [sp, #4]
  40fe34:	ldr	w8, [sp, #4]
  40fe38:	mov	w9, #0x1                   	// #1
  40fe3c:	eor	w8, w8, #0x1
  40fe40:	eor	w8, w8, w9
  40fe44:	eor	w8, w8, w9
  40fe48:	and	w8, w8, #0x1
  40fe4c:	mov	w0, w8
  40fe50:	sxtw	x10, w0
  40fe54:	cbz	x10, 40fe7c <clock_supported@plt+0xbb84>
  40fe58:	mov	w8, wzr
  40fe5c:	mov	w0, w8
  40fe60:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  40fe64:	add	x1, x1, #0x5dc
  40fe68:	ldr	x2, [sp, #8]
  40fe6c:	mov	w3, #0x18b                 	// #395
  40fe70:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  40fe74:	add	x4, x4, #0x5ec
  40fe78:	bl	403958 <log_assert_failed_realm@plt>
  40fe7c:	ldur	x8, [x29, #-24]
  40fe80:	cmp	x8, #0x7
  40fe84:	b.eq	40fe90 <clock_supported@plt+0xbb98>  // b.none
  40fe88:	stur	wzr, [x29, #-4]
  40fe8c:	b	40feec <clock_supported@plt+0xbbf4>
  40fe90:	ldur	x8, [x29, #-16]
  40fe94:	ldur	w9, [x8, #1]
  40fe98:	add	x10, sp, #0x18
  40fe9c:	str	w9, [sp, #24]
  40fea0:	add	x8, x8, #0x5
  40fea4:	ldrh	w9, [x8]
  40fea8:	strh	w9, [x10, #4]
  40feac:	mov	x0, #0x1                   	// #1
  40feb0:	mov	x1, #0x12                  	// #18
  40feb4:	bl	411e18 <clock_supported@plt+0xdb20>
  40feb8:	str	x0, [sp, #16]
  40febc:	ldr	x8, [sp, #16]
  40fec0:	cbnz	x8, 40fed0 <clock_supported@plt+0xbbd8>
  40fec4:	mov	w8, #0xfffffff4            	// #-12
  40fec8:	stur	w8, [x29, #-4]
  40fecc:	b	40feec <clock_supported@plt+0xbbf4>
  40fed0:	ldr	x1, [sp, #16]
  40fed4:	add	x0, sp, #0x18
  40fed8:	bl	403ff8 <ether_addr_to_string@plt>
  40fedc:	ldr	x8, [sp, #32]
  40fee0:	str	x0, [x8]
  40fee4:	mov	w9, #0x1                   	// #1
  40fee8:	stur	w9, [x29, #-4]
  40feec:	ldur	w0, [x29, #-4]
  40fef0:	ldp	x29, x30, [sp, #64]
  40fef4:	add	sp, sp, #0x50
  40fef8:	ret
  40fefc:	sub	sp, sp, #0x50
  40ff00:	stp	x29, x30, [sp, #64]
  40ff04:	add	x29, sp, #0x40
  40ff08:	stur	x0, [x29, #-16]
  40ff0c:	stur	x1, [x29, #-24]
  40ff10:	str	x2, [sp, #32]
  40ff14:	ldur	x8, [x29, #-24]
  40ff18:	cmp	x8, #0x6
  40ff1c:	b.ne	40ff48 <clock_supported@plt+0xbc50>  // b.any
  40ff20:	ldur	x8, [x29, #-16]
  40ff24:	ldrb	w9, [x8, #1]
  40ff28:	cmp	w9, #0x1
  40ff2c:	b.ne	40ff48 <clock_supported@plt+0xbc50>  // b.any
  40ff30:	ldur	x8, [x29, #-16]
  40ff34:	ldur	w9, [x8, #2]
  40ff38:	str	w9, [sp, #16]
  40ff3c:	mov	w9, #0x2                   	// #2
  40ff40:	str	w9, [sp, #12]
  40ff44:	b	40ff84 <clock_supported@plt+0xbc8c>
  40ff48:	ldur	x8, [x29, #-24]
  40ff4c:	cmp	x8, #0x12
  40ff50:	b.ne	40ff7c <clock_supported@plt+0xbc84>  // b.any
  40ff54:	ldur	x8, [x29, #-16]
  40ff58:	ldrb	w9, [x8, #1]
  40ff5c:	cmp	w9, #0x2
  40ff60:	b.ne	40ff7c <clock_supported@plt+0xbc84>  // b.any
  40ff64:	ldur	x8, [x29, #-16]
  40ff68:	ldur	q0, [x8, #2]
  40ff6c:	str	q0, [sp, #16]
  40ff70:	mov	w9, #0xa                   	// #10
  40ff74:	str	w9, [sp, #12]
  40ff78:	b	40ff84 <clock_supported@plt+0xbc8c>
  40ff7c:	stur	wzr, [x29, #-4]
  40ff80:	b	40ffbc <clock_supported@plt+0xbcc4>
  40ff84:	ldr	w0, [sp, #12]
  40ff88:	ldr	x2, [sp, #32]
  40ff8c:	add	x1, sp, #0x10
  40ff90:	bl	404098 <in_addr_to_string@plt>
  40ff94:	str	w0, [sp, #8]
  40ff98:	ldr	w8, [sp, #8]
  40ff9c:	cmp	w8, #0x0
  40ffa0:	cset	w8, ge  // ge = tcont
  40ffa4:	tbnz	w8, #0, 40ffb4 <clock_supported@plt+0xbcbc>
  40ffa8:	ldr	w8, [sp, #8]
  40ffac:	stur	w8, [x29, #-4]
  40ffb0:	b	40ffbc <clock_supported@plt+0xbcc4>
  40ffb4:	mov	w8, #0x1                   	// #1
  40ffb8:	stur	w8, [x29, #-4]
  40ffbc:	ldur	w0, [x29, #-4]
  40ffc0:	ldp	x29, x30, [sp, #64]
  40ffc4:	add	sp, sp, #0x50
  40ffc8:	ret
  40ffcc:	sub	sp, sp, #0x60
  40ffd0:	stp	x29, x30, [sp, #80]
  40ffd4:	add	x29, sp, #0x50
  40ffd8:	mov	w8, #0x1                   	// #1
  40ffdc:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  40ffe0:	add	x9, x9, #0x927
  40ffe4:	add	x9, x9, #0x3
  40ffe8:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  40ffec:	add	x10, x10, #0xf95
  40fff0:	mov	w11, #0x0                   	// #0
  40fff4:	stur	x0, [x29, #-16]
  40fff8:	stur	x1, [x29, #-24]
  40fffc:	stur	x2, [x29, #-32]
  410000:	str	x3, [sp, #40]
  410004:	str	w8, [sp, #36]
  410008:	str	x9, [sp, #24]
  41000c:	str	x10, [sp, #16]
  410010:	str	w11, [sp, #12]
  410014:	ldur	x8, [x29, #-16]
  410018:	cmp	x8, #0x0
  41001c:	cset	w9, ne  // ne = any
  410020:	mov	w10, #0x1                   	// #1
  410024:	eor	w9, w9, #0x1
  410028:	eor	w9, w9, w10
  41002c:	and	w9, w9, #0x1
  410030:	mov	w0, w9
  410034:	sxtw	x8, w0
  410038:	cbz	x8, 410048 <clock_supported@plt+0xbd50>
  41003c:	ldr	w8, [sp, #36]
  410040:	tbnz	w8, #0, 41007c <clock_supported@plt+0xbd84>
  410044:	b	410070 <clock_supported@plt+0xbd78>
  410048:	mov	w8, wzr
  41004c:	mov	w0, w8
  410050:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  410054:	add	x1, x1, #0xa52
  410058:	ldr	x2, [sp, #24]
  41005c:	mov	w3, #0x1e6                 	// #486
  410060:	ldr	x4, [sp, #16]
  410064:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410068:	ldr	w8, [sp, #12]
  41006c:	tbnz	w8, #0, 41007c <clock_supported@plt+0xbd84>
  410070:	mov	w8, #0xffffffea            	// #-22
  410074:	stur	w8, [x29, #-4]
  410078:	b	410244 <clock_supported@plt+0xbf4c>
  41007c:	ldur	x8, [x29, #-24]
  410080:	cmp	x8, #0x0
  410084:	cset	w9, ne  // ne = any
  410088:	mov	w10, #0x1                   	// #1
  41008c:	eor	w9, w9, #0x1
  410090:	eor	w9, w9, w10
  410094:	and	w9, w9, #0x1
  410098:	mov	w0, w9
  41009c:	sxtw	x8, w0
  4100a0:	cbz	x8, 4100b0 <clock_supported@plt+0xbdb8>
  4100a4:	ldr	w8, [sp, #36]
  4100a8:	tbnz	w8, #0, 4100e4 <clock_supported@plt+0xbdec>
  4100ac:	b	4100d8 <clock_supported@plt+0xbde0>
  4100b0:	mov	w8, wzr
  4100b4:	mov	w0, w8
  4100b8:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4100bc:	add	x1, x1, #0x799
  4100c0:	ldr	x2, [sp, #24]
  4100c4:	mov	w3, #0x1e7                 	// #487
  4100c8:	ldr	x4, [sp, #16]
  4100cc:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4100d0:	ldr	w8, [sp, #12]
  4100d4:	tbnz	w8, #0, 4100e4 <clock_supported@plt+0xbdec>
  4100d8:	mov	w8, #0xffffffea            	// #-22
  4100dc:	stur	w8, [x29, #-4]
  4100e0:	b	410244 <clock_supported@plt+0xbf4c>
  4100e4:	ldur	x8, [x29, #-32]
  4100e8:	cmp	x8, #0x0
  4100ec:	cset	w9, ne  // ne = any
  4100f0:	mov	w10, #0x1                   	// #1
  4100f4:	eor	w9, w9, #0x1
  4100f8:	eor	w9, w9, w10
  4100fc:	and	w9, w9, #0x1
  410100:	mov	w0, w9
  410104:	sxtw	x8, w0
  410108:	cbz	x8, 410118 <clock_supported@plt+0xbe20>
  41010c:	ldr	w8, [sp, #36]
  410110:	tbnz	w8, #0, 41014c <clock_supported@plt+0xbe54>
  410114:	b	410140 <clock_supported@plt+0xbe48>
  410118:	mov	w8, wzr
  41011c:	mov	w0, w8
  410120:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410124:	add	x1, x1, #0x89b
  410128:	ldr	x2, [sp, #24]
  41012c:	mov	w3, #0x1e8                 	// #488
  410130:	ldr	x4, [sp, #16]
  410134:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410138:	ldr	w8, [sp, #12]
  41013c:	tbnz	w8, #0, 41014c <clock_supported@plt+0xbe54>
  410140:	mov	w8, #0xffffffea            	// #-22
  410144:	stur	w8, [x29, #-4]
  410148:	b	410244 <clock_supported@plt+0xbf4c>
  41014c:	ldr	x8, [sp, #40]
  410150:	cmp	x8, #0x0
  410154:	cset	w9, ne  // ne = any
  410158:	mov	w10, #0x1                   	// #1
  41015c:	eor	w9, w9, #0x1
  410160:	eor	w9, w9, w10
  410164:	and	w9, w9, #0x1
  410168:	mov	w0, w9
  41016c:	sxtw	x8, w0
  410170:	cbz	x8, 410180 <clock_supported@plt+0xbe88>
  410174:	ldr	w8, [sp, #36]
  410178:	tbnz	w8, #0, 4101b4 <clock_supported@plt+0xbebc>
  41017c:	b	4101a8 <clock_supported@plt+0xbeb0>
  410180:	mov	w8, wzr
  410184:	mov	w0, w8
  410188:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  41018c:	add	x1, x1, #0xec9
  410190:	ldr	x2, [sp, #24]
  410194:	mov	w3, #0x1e9                 	// #489
  410198:	ldr	x4, [sp, #16]
  41019c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4101a0:	ldr	w8, [sp, #12]
  4101a4:	tbnz	w8, #0, 4101b4 <clock_supported@plt+0xbebc>
  4101a8:	mov	w8, #0xffffffea            	// #-22
  4101ac:	stur	w8, [x29, #-4]
  4101b0:	b	410244 <clock_supported@plt+0xbf4c>
  4101b4:	ldur	x8, [x29, #-16]
  4101b8:	ldr	x8, [x8, #88]
  4101bc:	cmp	x8, #0x0
  4101c0:	cset	w9, hi  // hi = pmore
  4101c4:	mov	w10, #0x1                   	// #1
  4101c8:	eor	w9, w9, #0x1
  4101cc:	eor	w9, w9, w10
  4101d0:	eor	w9, w9, w10
  4101d4:	and	w9, w9, #0x1
  4101d8:	mov	w0, w9
  4101dc:	sxtw	x8, w0
  4101e0:	cbz	x8, 410204 <clock_supported@plt+0xbf0c>
  4101e4:	mov	w8, wzr
  4101e8:	mov	w0, w8
  4101ec:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4101f0:	add	x1, x1, #0xfee
  4101f4:	ldr	x2, [sp, #24]
  4101f8:	mov	w3, #0x1eb                 	// #491
  4101fc:	ldr	x4, [sp, #16]
  410200:	bl	403958 <log_assert_failed_realm@plt>
  410204:	ldur	x8, [x29, #-16]
  410208:	ldr	x8, [x8, #80]
  41020c:	ldrb	w9, [x8]
  410210:	ldur	x8, [x29, #-24]
  410214:	strb	w9, [x8]
  410218:	ldur	x8, [x29, #-16]
  41021c:	ldr	x8, [x8, #80]
  410220:	add	x8, x8, #0x1
  410224:	ldur	x10, [x29, #-32]
  410228:	str	x8, [x10]
  41022c:	ldur	x8, [x29, #-16]
  410230:	ldr	x8, [x8, #88]
  410234:	subs	x8, x8, #0x1
  410238:	ldr	x10, [sp, #40]
  41023c:	str	x8, [x10]
  410240:	stur	wzr, [x29, #-4]
  410244:	ldur	w0, [x29, #-4]
  410248:	ldp	x29, x30, [sp, #80]
  41024c:	add	sp, sp, #0x60
  410250:	ret
  410254:	sub	sp, sp, #0x50
  410258:	stp	x29, x30, [sp, #64]
  41025c:	add	x29, sp, #0x40
  410260:	mov	w8, #0x1                   	// #1
  410264:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  410268:	add	x9, x9, #0x927
  41026c:	add	x9, x9, #0x3
  410270:	adrp	x10, 414000 <clock_supported@plt+0xfd08>
  410274:	add	x10, x10, #0x5
  410278:	mov	w11, #0x0                   	// #0
  41027c:	stur	x0, [x29, #-16]
  410280:	stur	x1, [x29, #-24]
  410284:	str	w8, [sp, #24]
  410288:	str	x9, [sp, #16]
  41028c:	str	x10, [sp, #8]
  410290:	str	w11, [sp, #4]
  410294:	ldur	x8, [x29, #-16]
  410298:	cmp	x8, #0x0
  41029c:	cset	w9, ne  // ne = any
  4102a0:	mov	w10, #0x1                   	// #1
  4102a4:	eor	w9, w9, #0x1
  4102a8:	eor	w9, w9, w10
  4102ac:	and	w9, w9, #0x1
  4102b0:	mov	w0, w9
  4102b4:	sxtw	x8, w0
  4102b8:	cbz	x8, 4102c8 <clock_supported@plt+0xbfd0>
  4102bc:	ldr	w8, [sp, #24]
  4102c0:	tbnz	w8, #0, 4102fc <clock_supported@plt+0xc004>
  4102c4:	b	4102f0 <clock_supported@plt+0xbff8>
  4102c8:	mov	w8, wzr
  4102cc:	mov	w0, w8
  4102d0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4102d4:	add	x1, x1, #0xa52
  4102d8:	ldr	x2, [sp, #16]
  4102dc:	mov	w3, #0x1f8                 	// #504
  4102e0:	ldr	x4, [sp, #8]
  4102e4:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4102e8:	ldr	w8, [sp, #4]
  4102ec:	tbnz	w8, #0, 4102fc <clock_supported@plt+0xc004>
  4102f0:	mov	w8, #0xffffffea            	// #-22
  4102f4:	stur	w8, [x29, #-4]
  4102f8:	b	410558 <clock_supported@plt+0xc260>
  4102fc:	ldur	x8, [x29, #-24]
  410300:	cmp	x8, #0x0
  410304:	cset	w9, ne  // ne = any
  410308:	mov	w10, #0x1                   	// #1
  41030c:	eor	w9, w9, #0x1
  410310:	eor	w9, w9, w10
  410314:	and	w9, w9, #0x1
  410318:	mov	w0, w9
  41031c:	sxtw	x8, w0
  410320:	cbz	x8, 410330 <clock_supported@plt+0xc038>
  410324:	ldr	w8, [sp, #24]
  410328:	tbnz	w8, #0, 410364 <clock_supported@plt+0xc06c>
  41032c:	b	410358 <clock_supported@plt+0xc060>
  410330:	mov	w8, wzr
  410334:	mov	w0, w8
  410338:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  41033c:	add	x1, x1, #0x89b
  410340:	ldr	x2, [sp, #16]
  410344:	mov	w3, #0x1f9                 	// #505
  410348:	ldr	x4, [sp, #8]
  41034c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410350:	ldr	w8, [sp, #4]
  410354:	tbnz	w8, #0, 410364 <clock_supported@plt+0xc06c>
  410358:	mov	w8, #0xffffffea            	// #-22
  41035c:	stur	w8, [x29, #-4]
  410360:	b	410558 <clock_supported@plt+0xc260>
  410364:	ldur	x8, [x29, #-16]
  410368:	ldr	x8, [x8, #160]
  41036c:	cbz	x8, 410388 <clock_supported@plt+0xc090>
  410370:	ldur	x8, [x29, #-16]
  410374:	ldr	x8, [x8, #160]
  410378:	ldur	x9, [x29, #-24]
  41037c:	str	x8, [x9]
  410380:	stur	wzr, [x29, #-4]
  410384:	b	410558 <clock_supported@plt+0xc260>
  410388:	ldur	x8, [x29, #-16]
  41038c:	ldr	x8, [x8, #88]
  410390:	cmp	x8, #0x0
  410394:	cset	w9, hi  // hi = pmore
  410398:	mov	w10, #0x1                   	// #1
  41039c:	eor	w9, w9, #0x1
  4103a0:	eor	w9, w9, w10
  4103a4:	eor	w9, w9, w10
  4103a8:	and	w9, w9, #0x1
  4103ac:	mov	w0, w9
  4103b0:	sxtw	x8, w0
  4103b4:	cbz	x8, 4103d8 <clock_supported@plt+0xc0e0>
  4103b8:	mov	w8, wzr
  4103bc:	mov	w0, w8
  4103c0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4103c4:	add	x1, x1, #0xfee
  4103c8:	ldr	x2, [sp, #16]
  4103cc:	mov	w3, #0x200                 	// #512
  4103d0:	ldr	x4, [sp, #8]
  4103d4:	bl	403958 <log_assert_failed_realm@plt>
  4103d8:	ldur	x8, [x29, #-16]
  4103dc:	ldr	x8, [x8, #80]
  4103e0:	ldrb	w9, [x8]
  4103e4:	subs	w10, w9, #0x1
  4103e8:	cmp	w10, #0x1
  4103ec:	str	w9, [sp]
  4103f0:	b.ls	410440 <clock_supported@plt+0xc148>  // b.plast
  4103f4:	b	4103f8 <clock_supported@plt+0xc100>
  4103f8:	ldr	w8, [sp]
  4103fc:	cmp	w8, #0x3
  410400:	b.eq	410478 <clock_supported@plt+0xc180>  // b.none
  410404:	b	410408 <clock_supported@plt+0xc110>
  410408:	ldr	w8, [sp]
  41040c:	cmp	w8, #0x4
  410410:	b.eq	4104c8 <clock_supported@plt+0xc1d0>  // b.none
  410414:	b	410418 <clock_supported@plt+0xc120>
  410418:	ldr	w8, [sp]
  41041c:	cmp	w8, #0x5
  410420:	b.eq	410440 <clock_supported@plt+0xc148>  // b.none
  410424:	b	410428 <clock_supported@plt+0xc130>
  410428:	ldr	w8, [sp]
  41042c:	cmp	w8, #0x7
  410430:	cset	w9, eq  // eq = none
  410434:	eor	w9, w9, #0x1
  410438:	tbnz	w9, #0, 410514 <clock_supported@plt+0xc21c>
  41043c:	b	410440 <clock_supported@plt+0xc148>
  410440:	ldur	x8, [x29, #-16]
  410444:	ldr	x8, [x8, #80]
  410448:	add	x0, x8, #0x1
  41044c:	ldur	x8, [x29, #-16]
  410450:	ldr	x8, [x8, #88]
  410454:	subs	x1, x8, #0x1
  410458:	bl	404278 <cescape_length@plt>
  41045c:	str	x0, [sp, #32]
  410460:	ldr	x8, [sp, #32]
  410464:	cbnz	x8, 410474 <clock_supported@plt+0xc17c>
  410468:	mov	w8, #0xfffffff4            	// #-12
  41046c:	stur	w8, [x29, #-4]
  410470:	b	410558 <clock_supported@plt+0xc260>
  410474:	b	410540 <clock_supported@plt+0xc248>
  410478:	ldur	x8, [x29, #-16]
  41047c:	ldr	x0, [x8, #80]
  410480:	ldur	x8, [x29, #-16]
  410484:	ldr	x1, [x8, #88]
  410488:	add	x2, sp, #0x20
  41048c:	bl	40fdec <clock_supported@plt+0xbaf4>
  410490:	str	w0, [sp, #28]
  410494:	ldr	w9, [sp, #28]
  410498:	cmp	w9, #0x0
  41049c:	cset	w9, ge  // ge = tcont
  4104a0:	tbnz	w9, #0, 4104b0 <clock_supported@plt+0xc1b8>
  4104a4:	ldr	w8, [sp, #28]
  4104a8:	stur	w8, [x29, #-4]
  4104ac:	b	410558 <clock_supported@plt+0xc260>
  4104b0:	ldr	w8, [sp, #28]
  4104b4:	cmp	w8, #0x0
  4104b8:	cset	w8, le
  4104bc:	tbnz	w8, #0, 4104c4 <clock_supported@plt+0xc1cc>
  4104c0:	b	410540 <clock_supported@plt+0xc248>
  4104c4:	b	410514 <clock_supported@plt+0xc21c>
  4104c8:	ldur	x8, [x29, #-16]
  4104cc:	ldr	x0, [x8, #80]
  4104d0:	ldur	x8, [x29, #-16]
  4104d4:	ldr	x1, [x8, #88]
  4104d8:	add	x2, sp, #0x20
  4104dc:	bl	40fefc <clock_supported@plt+0xbc04>
  4104e0:	str	w0, [sp, #28]
  4104e4:	ldr	w9, [sp, #28]
  4104e8:	cmp	w9, #0x0
  4104ec:	cset	w9, ge  // ge = tcont
  4104f0:	tbnz	w9, #0, 410500 <clock_supported@plt+0xc208>
  4104f4:	ldr	w8, [sp, #28]
  4104f8:	stur	w8, [x29, #-4]
  4104fc:	b	410558 <clock_supported@plt+0xc260>
  410500:	ldr	w8, [sp, #28]
  410504:	cmp	w8, #0x0
  410508:	cset	w8, le
  41050c:	tbnz	w8, #0, 410514 <clock_supported@plt+0xc21c>
  410510:	b	410540 <clock_supported@plt+0xc248>
  410514:	ldur	x8, [x29, #-16]
  410518:	ldr	x0, [x8, #80]
  41051c:	ldur	x8, [x29, #-16]
  410520:	ldr	x1, [x8, #88]
  410524:	bl	4042d8 <hexmem@plt>
  410528:	str	x0, [sp, #32]
  41052c:	ldr	x8, [sp, #32]
  410530:	cbnz	x8, 410540 <clock_supported@plt+0xc248>
  410534:	mov	w8, #0xfffffff4            	// #-12
  410538:	stur	w8, [x29, #-4]
  41053c:	b	410558 <clock_supported@plt+0xc260>
  410540:	ldr	x8, [sp, #32]
  410544:	ldur	x9, [x29, #-16]
  410548:	str	x8, [x9, #160]
  41054c:	ldur	x9, [x29, #-24]
  410550:	str	x8, [x9]
  410554:	stur	wzr, [x29, #-4]
  410558:	ldur	w0, [x29, #-4]
  41055c:	ldp	x29, x30, [sp, #64]
  410560:	add	sp, sp, #0x50
  410564:	ret
  410568:	sub	sp, sp, #0x40
  41056c:	stp	x29, x30, [sp, #48]
  410570:	add	x29, sp, #0x30
  410574:	mov	w8, #0x1                   	// #1
  410578:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  41057c:	add	x9, x9, #0x927
  410580:	add	x9, x9, #0x3
  410584:	mov	w10, #0x0                   	// #0
  410588:	stur	x0, [x29, #-16]
  41058c:	str	x1, [sp, #24]
  410590:	str	w8, [sp, #20]
  410594:	str	x9, [sp, #8]
  410598:	str	w10, [sp, #4]
  41059c:	ldur	x8, [x29, #-16]
  4105a0:	cmp	x8, #0x0
  4105a4:	cset	w9, ne  // ne = any
  4105a8:	mov	w10, #0x1                   	// #1
  4105ac:	eor	w9, w9, #0x1
  4105b0:	eor	w9, w9, w10
  4105b4:	and	w9, w9, #0x1
  4105b8:	mov	w0, w9
  4105bc:	sxtw	x8, w0
  4105c0:	cbz	x8, 4105d0 <clock_supported@plt+0xc2d8>
  4105c4:	ldr	w8, [sp, #20]
  4105c8:	tbnz	w8, #0, 410608 <clock_supported@plt+0xc310>
  4105cc:	b	4105fc <clock_supported@plt+0xc304>
  4105d0:	mov	w8, wzr
  4105d4:	mov	w0, w8
  4105d8:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4105dc:	add	x1, x1, #0xa52
  4105e0:	ldr	x2, [sp, #8]
  4105e4:	mov	w3, #0x22c                 	// #556
  4105e8:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  4105ec:	add	x4, x4, #0x53
  4105f0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4105f4:	ldr	w8, [sp, #4]
  4105f8:	tbnz	w8, #0, 410608 <clock_supported@plt+0xc310>
  4105fc:	mov	w8, #0xffffffea            	// #-22
  410600:	stur	w8, [x29, #-4]
  410604:	b	410688 <clock_supported@plt+0xc390>
  410608:	ldr	x8, [sp, #24]
  41060c:	cmp	x8, #0x0
  410610:	cset	w9, ne  // ne = any
  410614:	mov	w10, #0x1                   	// #1
  410618:	eor	w9, w9, #0x1
  41061c:	eor	w9, w9, w10
  410620:	and	w9, w9, #0x1
  410624:	mov	w0, w9
  410628:	sxtw	x8, w0
  41062c:	cbz	x8, 41063c <clock_supported@plt+0xc344>
  410630:	ldr	w8, [sp, #20]
  410634:	tbnz	w8, #0, 410674 <clock_supported@plt+0xc37c>
  410638:	b	410668 <clock_supported@plt+0xc370>
  41063c:	mov	w8, wzr
  410640:	mov	w0, w8
  410644:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  410648:	add	x1, x1, #0x90
  41064c:	ldr	x2, [sp, #8]
  410650:	mov	w3, #0x22d                 	// #557
  410654:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410658:	add	x4, x4, #0x53
  41065c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410660:	ldr	w8, [sp, #4]
  410664:	tbnz	w8, #0, 410674 <clock_supported@plt+0xc37c>
  410668:	mov	w8, #0xffffffea            	// #-22
  41066c:	stur	w8, [x29, #-4]
  410670:	b	410688 <clock_supported@plt+0xc390>
  410674:	ldur	x8, [x29, #-16]
  410678:	ldrh	w9, [x8, #114]
  41067c:	ldr	x8, [sp, #24]
  410680:	strh	w9, [x8]
  410684:	stur	wzr, [x29, #-4]
  410688:	ldur	w0, [x29, #-4]
  41068c:	ldp	x29, x30, [sp, #48]
  410690:	add	sp, sp, #0x40
  410694:	ret
  410698:	sub	sp, sp, #0x40
  41069c:	stp	x29, x30, [sp, #48]
  4106a0:	add	x29, sp, #0x30
  4106a4:	mov	w8, #0x1                   	// #1
  4106a8:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  4106ac:	add	x9, x9, #0x927
  4106b0:	add	x9, x9, #0x3
  4106b4:	mov	w10, #0x0                   	// #0
  4106b8:	stur	x0, [x29, #-16]
  4106bc:	str	x1, [sp, #24]
  4106c0:	str	w8, [sp, #20]
  4106c4:	str	x9, [sp, #8]
  4106c8:	str	w10, [sp, #4]
  4106cc:	ldur	x8, [x29, #-16]
  4106d0:	cmp	x8, #0x0
  4106d4:	cset	w9, ne  // ne = any
  4106d8:	mov	w10, #0x1                   	// #1
  4106dc:	eor	w9, w9, #0x1
  4106e0:	eor	w9, w9, w10
  4106e4:	and	w9, w9, #0x1
  4106e8:	mov	w0, w9
  4106ec:	sxtw	x8, w0
  4106f0:	cbz	x8, 410700 <clock_supported@plt+0xc408>
  4106f4:	ldr	w8, [sp, #20]
  4106f8:	tbnz	w8, #0, 410738 <clock_supported@plt+0xc440>
  4106fc:	b	41072c <clock_supported@plt+0xc434>
  410700:	mov	w8, wzr
  410704:	mov	w0, w8
  410708:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  41070c:	add	x1, x1, #0xa52
  410710:	ldr	x2, [sp, #8]
  410714:	mov	w3, #0x234                 	// #564
  410718:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  41071c:	add	x4, x4, #0x98
  410720:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410724:	ldr	w8, [sp, #4]
  410728:	tbnz	w8, #0, 410738 <clock_supported@plt+0xc440>
  41072c:	mov	w8, #0xffffffea            	// #-22
  410730:	stur	w8, [x29, #-4]
  410734:	b	4107d0 <clock_supported@plt+0xc4d8>
  410738:	ldr	x8, [sp, #24]
  41073c:	cmp	x8, #0x0
  410740:	cset	w9, ne  // ne = any
  410744:	mov	w10, #0x1                   	// #1
  410748:	eor	w9, w9, #0x1
  41074c:	eor	w9, w9, w10
  410750:	and	w9, w9, #0x1
  410754:	mov	w0, w9
  410758:	sxtw	x8, w0
  41075c:	cbz	x8, 41076c <clock_supported@plt+0xc474>
  410760:	ldr	w8, [sp, #20]
  410764:	tbnz	w8, #0, 4107a4 <clock_supported@plt+0xc4ac>
  410768:	b	410798 <clock_supported@plt+0xc4a0>
  41076c:	mov	w8, wzr
  410770:	mov	w0, w8
  410774:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410778:	add	x1, x1, #0x89b
  41077c:	ldr	x2, [sp, #8]
  410780:	mov	w3, #0x235                 	// #565
  410784:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410788:	add	x4, x4, #0x98
  41078c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410790:	ldr	w8, [sp, #4]
  410794:	tbnz	w8, #0, 4107a4 <clock_supported@plt+0xc4ac>
  410798:	mov	w8, #0xffffffea            	// #-22
  41079c:	stur	w8, [x29, #-4]
  4107a0:	b	4107d0 <clock_supported@plt+0xc4d8>
  4107a4:	ldur	x8, [x29, #-16]
  4107a8:	ldr	x8, [x8, #128]
  4107ac:	cbnz	x8, 4107bc <clock_supported@plt+0xc4c4>
  4107b0:	mov	w8, #0xffffffc3            	// #-61
  4107b4:	stur	w8, [x29, #-4]
  4107b8:	b	4107d0 <clock_supported@plt+0xc4d8>
  4107bc:	ldur	x8, [x29, #-16]
  4107c0:	ldr	x8, [x8, #128]
  4107c4:	ldr	x9, [sp, #24]
  4107c8:	str	x8, [x9]
  4107cc:	stur	wzr, [x29, #-4]
  4107d0:	ldur	w0, [x29, #-4]
  4107d4:	ldp	x29, x30, [sp, #48]
  4107d8:	add	sp, sp, #0x40
  4107dc:	ret
  4107e0:	sub	sp, sp, #0x40
  4107e4:	stp	x29, x30, [sp, #48]
  4107e8:	add	x29, sp, #0x30
  4107ec:	mov	w8, #0x1                   	// #1
  4107f0:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  4107f4:	add	x9, x9, #0x927
  4107f8:	add	x9, x9, #0x3
  4107fc:	mov	w10, #0x0                   	// #0
  410800:	stur	x0, [x29, #-16]
  410804:	str	x1, [sp, #24]
  410808:	str	w8, [sp, #20]
  41080c:	str	x9, [sp, #8]
  410810:	str	w10, [sp, #4]
  410814:	ldur	x8, [x29, #-16]
  410818:	cmp	x8, #0x0
  41081c:	cset	w9, ne  // ne = any
  410820:	mov	w10, #0x1                   	// #1
  410824:	eor	w9, w9, #0x1
  410828:	eor	w9, w9, w10
  41082c:	and	w9, w9, #0x1
  410830:	mov	w0, w9
  410834:	sxtw	x8, w0
  410838:	cbz	x8, 410848 <clock_supported@plt+0xc550>
  41083c:	ldr	w8, [sp, #20]
  410840:	tbnz	w8, #0, 410880 <clock_supported@plt+0xc588>
  410844:	b	410874 <clock_supported@plt+0xc57c>
  410848:	mov	w8, wzr
  41084c:	mov	w0, w8
  410850:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  410854:	add	x1, x1, #0xa52
  410858:	ldr	x2, [sp, #8]
  41085c:	mov	w3, #0x23f                 	// #575
  410860:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410864:	add	x4, x4, #0xe0
  410868:	bl	4042c8 <log_assert_failed_return_realm@plt>
  41086c:	ldr	w8, [sp, #4]
  410870:	tbnz	w8, #0, 410880 <clock_supported@plt+0xc588>
  410874:	mov	w8, #0xffffffea            	// #-22
  410878:	stur	w8, [x29, #-4]
  41087c:	b	410918 <clock_supported@plt+0xc620>
  410880:	ldr	x8, [sp, #24]
  410884:	cmp	x8, #0x0
  410888:	cset	w9, ne  // ne = any
  41088c:	mov	w10, #0x1                   	// #1
  410890:	eor	w9, w9, #0x1
  410894:	eor	w9, w9, w10
  410898:	and	w9, w9, #0x1
  41089c:	mov	w0, w9
  4108a0:	sxtw	x8, w0
  4108a4:	cbz	x8, 4108b4 <clock_supported@plt+0xc5bc>
  4108a8:	ldr	w8, [sp, #20]
  4108ac:	tbnz	w8, #0, 4108ec <clock_supported@plt+0xc5f4>
  4108b0:	b	4108e0 <clock_supported@plt+0xc5e8>
  4108b4:	mov	w8, wzr
  4108b8:	mov	w0, w8
  4108bc:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  4108c0:	add	x1, x1, #0x89b
  4108c4:	ldr	x2, [sp, #8]
  4108c8:	mov	w3, #0x240                 	// #576
  4108cc:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  4108d0:	add	x4, x4, #0xe0
  4108d4:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4108d8:	ldr	w8, [sp, #4]
  4108dc:	tbnz	w8, #0, 4108ec <clock_supported@plt+0xc5f4>
  4108e0:	mov	w8, #0xffffffea            	// #-22
  4108e4:	stur	w8, [x29, #-4]
  4108e8:	b	410918 <clock_supported@plt+0xc620>
  4108ec:	ldur	x8, [x29, #-16]
  4108f0:	ldr	x8, [x8, #136]
  4108f4:	cbnz	x8, 410904 <clock_supported@plt+0xc60c>
  4108f8:	mov	w8, #0xffffffc3            	// #-61
  4108fc:	stur	w8, [x29, #-4]
  410900:	b	410918 <clock_supported@plt+0xc620>
  410904:	ldur	x8, [x29, #-16]
  410908:	ldr	x8, [x8, #136]
  41090c:	ldr	x9, [sp, #24]
  410910:	str	x8, [x9]
  410914:	stur	wzr, [x29, #-4]
  410918:	ldur	w0, [x29, #-4]
  41091c:	ldp	x29, x30, [sp, #48]
  410920:	add	sp, sp, #0x40
  410924:	ret
  410928:	sub	sp, sp, #0x40
  41092c:	stp	x29, x30, [sp, #48]
  410930:	add	x29, sp, #0x30
  410934:	mov	w8, #0x1                   	// #1
  410938:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  41093c:	add	x9, x9, #0x927
  410940:	add	x9, x9, #0x3
  410944:	mov	w10, #0x0                   	// #0
  410948:	stur	x0, [x29, #-16]
  41094c:	str	x1, [sp, #24]
  410950:	str	w8, [sp, #20]
  410954:	str	x9, [sp, #8]
  410958:	str	w10, [sp, #4]
  41095c:	ldur	x8, [x29, #-16]
  410960:	cmp	x8, #0x0
  410964:	cset	w9, ne  // ne = any
  410968:	mov	w10, #0x1                   	// #1
  41096c:	eor	w9, w9, #0x1
  410970:	eor	w9, w9, w10
  410974:	and	w9, w9, #0x1
  410978:	mov	w0, w9
  41097c:	sxtw	x8, w0
  410980:	cbz	x8, 410990 <clock_supported@plt+0xc698>
  410984:	ldr	w8, [sp, #20]
  410988:	tbnz	w8, #0, 4109c8 <clock_supported@plt+0xc6d0>
  41098c:	b	4109bc <clock_supported@plt+0xc6c4>
  410990:	mov	w8, wzr
  410994:	mov	w0, w8
  410998:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  41099c:	add	x1, x1, #0xa52
  4109a0:	ldr	x2, [sp, #8]
  4109a4:	mov	w3, #0x24a                 	// #586
  4109a8:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  4109ac:	add	x4, x4, #0x12f
  4109b0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4109b4:	ldr	w8, [sp, #4]
  4109b8:	tbnz	w8, #0, 4109c8 <clock_supported@plt+0xc6d0>
  4109bc:	mov	w8, #0xffffffea            	// #-22
  4109c0:	stur	w8, [x29, #-4]
  4109c4:	b	410a60 <clock_supported@plt+0xc768>
  4109c8:	ldr	x8, [sp, #24]
  4109cc:	cmp	x8, #0x0
  4109d0:	cset	w9, ne  // ne = any
  4109d4:	mov	w10, #0x1                   	// #1
  4109d8:	eor	w9, w9, #0x1
  4109dc:	eor	w9, w9, w10
  4109e0:	and	w9, w9, #0x1
  4109e4:	mov	w0, w9
  4109e8:	sxtw	x8, w0
  4109ec:	cbz	x8, 4109fc <clock_supported@plt+0xc704>
  4109f0:	ldr	w8, [sp, #20]
  4109f4:	tbnz	w8, #0, 410a34 <clock_supported@plt+0xc73c>
  4109f8:	b	410a28 <clock_supported@plt+0xc730>
  4109fc:	mov	w8, wzr
  410a00:	mov	w0, w8
  410a04:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410a08:	add	x1, x1, #0x89b
  410a0c:	ldr	x2, [sp, #8]
  410a10:	mov	w3, #0x24b                 	// #587
  410a14:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410a18:	add	x4, x4, #0x12f
  410a1c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410a20:	ldr	w8, [sp, #4]
  410a24:	tbnz	w8, #0, 410a34 <clock_supported@plt+0xc73c>
  410a28:	mov	w8, #0xffffffea            	// #-22
  410a2c:	stur	w8, [x29, #-4]
  410a30:	b	410a60 <clock_supported@plt+0xc768>
  410a34:	ldur	x8, [x29, #-16]
  410a38:	ldr	x8, [x8, #120]
  410a3c:	cbnz	x8, 410a4c <clock_supported@plt+0xc754>
  410a40:	mov	w8, #0xffffffc3            	// #-61
  410a44:	stur	w8, [x29, #-4]
  410a48:	b	410a60 <clock_supported@plt+0xc768>
  410a4c:	ldur	x8, [x29, #-16]
  410a50:	ldr	x8, [x8, #120]
  410a54:	ldr	x9, [sp, #24]
  410a58:	str	x8, [x9]
  410a5c:	stur	wzr, [x29, #-4]
  410a60:	ldur	w0, [x29, #-4]
  410a64:	ldp	x29, x30, [sp, #48]
  410a68:	add	sp, sp, #0x40
  410a6c:	ret
  410a70:	sub	sp, sp, #0x40
  410a74:	stp	x29, x30, [sp, #48]
  410a78:	add	x29, sp, #0x30
  410a7c:	mov	w8, #0x1                   	// #1
  410a80:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  410a84:	add	x9, x9, #0x927
  410a88:	add	x9, x9, #0x3
  410a8c:	mov	w10, #0x0                   	// #0
  410a90:	stur	x0, [x29, #-16]
  410a94:	str	x1, [sp, #24]
  410a98:	str	w8, [sp, #20]
  410a9c:	str	x9, [sp, #8]
  410aa0:	str	w10, [sp, #4]
  410aa4:	ldur	x8, [x29, #-16]
  410aa8:	cmp	x8, #0x0
  410aac:	cset	w9, ne  // ne = any
  410ab0:	mov	w10, #0x1                   	// #1
  410ab4:	eor	w9, w9, #0x1
  410ab8:	eor	w9, w9, w10
  410abc:	and	w9, w9, #0x1
  410ac0:	mov	w0, w9
  410ac4:	sxtw	x8, w0
  410ac8:	cbz	x8, 410ad8 <clock_supported@plt+0xc7e0>
  410acc:	ldr	w8, [sp, #20]
  410ad0:	tbnz	w8, #0, 410b10 <clock_supported@plt+0xc818>
  410ad4:	b	410b04 <clock_supported@plt+0xc80c>
  410ad8:	mov	w8, wzr
  410adc:	mov	w0, w8
  410ae0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  410ae4:	add	x1, x1, #0xa52
  410ae8:	ldr	x2, [sp, #8]
  410aec:	mov	w3, #0x255                 	// #597
  410af0:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410af4:	add	x4, x4, #0x17c
  410af8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410afc:	ldr	w8, [sp, #4]
  410b00:	tbnz	w8, #0, 410b10 <clock_supported@plt+0xc818>
  410b04:	mov	w8, #0xffffffea            	// #-22
  410b08:	stur	w8, [x29, #-4]
  410b0c:	b	410bb4 <clock_supported@plt+0xc8bc>
  410b10:	ldr	x8, [sp, #24]
  410b14:	cmp	x8, #0x0
  410b18:	cset	w9, ne  // ne = any
  410b1c:	mov	w10, #0x1                   	// #1
  410b20:	eor	w9, w9, #0x1
  410b24:	eor	w9, w9, w10
  410b28:	and	w9, w9, #0x1
  410b2c:	mov	w0, w9
  410b30:	sxtw	x8, w0
  410b34:	cbz	x8, 410b44 <clock_supported@plt+0xc84c>
  410b38:	ldr	w8, [sp, #20]
  410b3c:	tbnz	w8, #0, 410b7c <clock_supported@plt+0xc884>
  410b40:	b	410b70 <clock_supported@plt+0xc878>
  410b44:	mov	w8, wzr
  410b48:	mov	w0, w8
  410b4c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410b50:	add	x1, x1, #0x89b
  410b54:	ldr	x2, [sp, #8]
  410b58:	mov	w3, #0x256                 	// #598
  410b5c:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410b60:	add	x4, x4, #0x17c
  410b64:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410b68:	ldr	w8, [sp, #4]
  410b6c:	tbnz	w8, #0, 410b7c <clock_supported@plt+0xc884>
  410b70:	mov	w8, #0xffffffea            	// #-22
  410b74:	stur	w8, [x29, #-4]
  410b78:	b	410bb4 <clock_supported@plt+0xc8bc>
  410b7c:	ldur	x8, [x29, #-16]
  410b80:	ldrb	w9, [x8, #112]
  410b84:	mov	w10, #0x1                   	// #1
  410b88:	lsr	w9, w9, w10
  410b8c:	and	w9, w9, w10
  410b90:	tbnz	w9, #0, 410ba0 <clock_supported@plt+0xc8a8>
  410b94:	mov	w8, #0xffffffc3            	// #-61
  410b98:	stur	w8, [x29, #-4]
  410b9c:	b	410bb4 <clock_supported@plt+0xc8bc>
  410ba0:	ldur	x8, [x29, #-16]
  410ba4:	ldrh	w9, [x8, #116]
  410ba8:	ldr	x8, [sp, #24]
  410bac:	strh	w9, [x8]
  410bb0:	stur	wzr, [x29, #-4]
  410bb4:	ldur	w0, [x29, #-4]
  410bb8:	ldp	x29, x30, [sp, #48]
  410bbc:	add	sp, sp, #0x40
  410bc0:	ret
  410bc4:	sub	sp, sp, #0x40
  410bc8:	stp	x29, x30, [sp, #48]
  410bcc:	add	x29, sp, #0x30
  410bd0:	mov	w8, #0x1                   	// #1
  410bd4:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  410bd8:	add	x9, x9, #0x927
  410bdc:	add	x9, x9, #0x3
  410be0:	mov	w10, #0x0                   	// #0
  410be4:	stur	x0, [x29, #-16]
  410be8:	str	x1, [sp, #24]
  410bec:	str	w8, [sp, #20]
  410bf0:	str	x9, [sp, #8]
  410bf4:	str	w10, [sp, #4]
  410bf8:	ldur	x8, [x29, #-16]
  410bfc:	cmp	x8, #0x0
  410c00:	cset	w9, ne  // ne = any
  410c04:	mov	w10, #0x1                   	// #1
  410c08:	eor	w9, w9, #0x1
  410c0c:	eor	w9, w9, w10
  410c10:	and	w9, w9, #0x1
  410c14:	mov	w0, w9
  410c18:	sxtw	x8, w0
  410c1c:	cbz	x8, 410c2c <clock_supported@plt+0xc934>
  410c20:	ldr	w8, [sp, #20]
  410c24:	tbnz	w8, #0, 410c64 <clock_supported@plt+0xc96c>
  410c28:	b	410c58 <clock_supported@plt+0xc960>
  410c2c:	mov	w8, wzr
  410c30:	mov	w0, w8
  410c34:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  410c38:	add	x1, x1, #0xa52
  410c3c:	ldr	x2, [sp, #8]
  410c40:	mov	w3, #0x260                 	// #608
  410c44:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410c48:	add	x4, x4, #0x1c9
  410c4c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410c50:	ldr	w8, [sp, #4]
  410c54:	tbnz	w8, #0, 410c64 <clock_supported@plt+0xc96c>
  410c58:	mov	w8, #0xffffffea            	// #-22
  410c5c:	stur	w8, [x29, #-4]
  410c60:	b	410d08 <clock_supported@plt+0xca10>
  410c64:	ldr	x8, [sp, #24]
  410c68:	cmp	x8, #0x0
  410c6c:	cset	w9, ne  // ne = any
  410c70:	mov	w10, #0x1                   	// #1
  410c74:	eor	w9, w9, #0x1
  410c78:	eor	w9, w9, w10
  410c7c:	and	w9, w9, #0x1
  410c80:	mov	w0, w9
  410c84:	sxtw	x8, w0
  410c88:	cbz	x8, 410c98 <clock_supported@plt+0xc9a0>
  410c8c:	ldr	w8, [sp, #20]
  410c90:	tbnz	w8, #0, 410cd0 <clock_supported@plt+0xc9d8>
  410c94:	b	410cc4 <clock_supported@plt+0xc9cc>
  410c98:	mov	w8, wzr
  410c9c:	mov	w0, w8
  410ca0:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410ca4:	add	x1, x1, #0x89b
  410ca8:	ldr	x2, [sp, #8]
  410cac:	mov	w3, #0x261                 	// #609
  410cb0:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410cb4:	add	x4, x4, #0x1c9
  410cb8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410cbc:	ldr	w8, [sp, #4]
  410cc0:	tbnz	w8, #0, 410cd0 <clock_supported@plt+0xc9d8>
  410cc4:	mov	w8, #0xffffffea            	// #-22
  410cc8:	stur	w8, [x29, #-4]
  410ccc:	b	410d08 <clock_supported@plt+0xca10>
  410cd0:	ldur	x8, [x29, #-16]
  410cd4:	ldrb	w9, [x8, #112]
  410cd8:	mov	w10, #0x1                   	// #1
  410cdc:	lsr	w9, w9, w10
  410ce0:	and	w9, w9, w10
  410ce4:	tbnz	w9, #0, 410cf4 <clock_supported@plt+0xc9fc>
  410ce8:	mov	w8, #0xffffffc3            	// #-61
  410cec:	stur	w8, [x29, #-4]
  410cf0:	b	410d08 <clock_supported@plt+0xca10>
  410cf4:	ldur	x8, [x29, #-16]
  410cf8:	ldrh	w9, [x8, #118]
  410cfc:	ldr	x8, [sp, #24]
  410d00:	strh	w9, [x8]
  410d04:	stur	wzr, [x29, #-4]
  410d08:	ldur	w0, [x29, #-4]
  410d0c:	ldp	x29, x30, [sp, #48]
  410d10:	add	sp, sp, #0x40
  410d14:	ret
  410d18:	sub	sp, sp, #0x70
  410d1c:	stp	x29, x30, [sp, #96]
  410d20:	add	x29, sp, #0x60
  410d24:	mov	x8, xzr
  410d28:	mov	w9, #0x1                   	// #1
  410d2c:	adrp	x10, 413000 <clock_supported@plt+0xed08>
  410d30:	add	x10, x10, #0x927
  410d34:	add	x10, x10, #0x3
  410d38:	mov	w11, #0x0                   	// #0
  410d3c:	stur	x0, [x29, #-16]
  410d40:	stur	x1, [x29, #-24]
  410d44:	stur	x2, [x29, #-32]
  410d48:	stur	x8, [x29, #-40]
  410d4c:	str	w9, [sp, #28]
  410d50:	str	x10, [sp, #16]
  410d54:	str	w11, [sp, #12]
  410d58:	ldur	x8, [x29, #-16]
  410d5c:	cmp	x8, #0x0
  410d60:	cset	w9, ne  // ne = any
  410d64:	mov	w10, #0x1                   	// #1
  410d68:	eor	w9, w9, #0x1
  410d6c:	eor	w9, w9, w10
  410d70:	and	w9, w9, #0x1
  410d74:	mov	w0, w9
  410d78:	sxtw	x8, w0
  410d7c:	cbz	x8, 410d8c <clock_supported@plt+0xca94>
  410d80:	ldr	w8, [sp, #28]
  410d84:	tbnz	w8, #0, 410dcc <clock_supported@plt+0xcad4>
  410d88:	b	410db8 <clock_supported@plt+0xcac0>
  410d8c:	mov	w8, wzr
  410d90:	mov	w0, w8
  410d94:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  410d98:	add	x1, x1, #0x89b
  410d9c:	ldr	x2, [sp, #16]
  410da0:	mov	w3, #0x26e                 	// #622
  410da4:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410da8:	add	x4, x4, #0x217
  410dac:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410db0:	ldr	w8, [sp, #12]
  410db4:	tbnz	w8, #0, 410dcc <clock_supported@plt+0xcad4>
  410db8:	mov	w8, #0xffffffea            	// #-22
  410dbc:	stur	w8, [x29, #-4]
  410dc0:	mov	w8, #0x1                   	// #1
  410dc4:	str	w8, [sp, #48]
  410dc8:	b	410ef8 <clock_supported@plt+0xcc00>
  410dcc:	ldur	x8, [x29, #-24]
  410dd0:	mov	w9, #0x1                   	// #1
  410dd4:	str	w9, [sp, #8]
  410dd8:	cbnz	x8, 410dec <clock_supported@plt+0xcaf4>
  410ddc:	ldur	x8, [x29, #-32]
  410de0:	cmp	x8, #0x0
  410de4:	cset	w9, ls  // ls = plast
  410de8:	str	w9, [sp, #8]
  410dec:	ldr	w8, [sp, #8]
  410df0:	mov	w9, #0x1                   	// #1
  410df4:	eor	w8, w8, #0x1
  410df8:	eor	w8, w8, w9
  410dfc:	and	w8, w8, #0x1
  410e00:	mov	w0, w8
  410e04:	sxtw	x10, w0
  410e08:	cbz	x10, 410e18 <clock_supported@plt+0xcb20>
  410e0c:	ldr	w8, [sp, #28]
  410e10:	tbnz	w8, #0, 410e58 <clock_supported@plt+0xcb60>
  410e14:	b	410e44 <clock_supported@plt+0xcb4c>
  410e18:	mov	w8, wzr
  410e1c:	mov	w0, w8
  410e20:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  410e24:	add	x1, x1, #0x260
  410e28:	ldr	x2, [sp, #16]
  410e2c:	mov	w3, #0x26f                 	// #623
  410e30:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410e34:	add	x4, x4, #0x217
  410e38:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410e3c:	ldr	w8, [sp, #12]
  410e40:	tbnz	w8, #0, 410e58 <clock_supported@plt+0xcb60>
  410e44:	mov	w8, #0xffffffea            	// #-22
  410e48:	stur	w8, [x29, #-4]
  410e4c:	mov	w8, #0x1                   	// #1
  410e50:	str	w8, [sp, #48]
  410e54:	b	410ef8 <clock_supported@plt+0xcc00>
  410e58:	ldur	x0, [x29, #-32]
  410e5c:	bl	40e6bc <clock_supported@plt+0xa3c4>
  410e60:	stur	x0, [x29, #-40]
  410e64:	ldur	x8, [x29, #-40]
  410e68:	cbnz	x8, 410e80 <clock_supported@plt+0xcb88>
  410e6c:	mov	w8, #0xfffffff4            	// #-12
  410e70:	stur	w8, [x29, #-4]
  410e74:	mov	w8, #0x1                   	// #1
  410e78:	str	w8, [sp, #48]
  410e7c:	b	410ef8 <clock_supported@plt+0xcc00>
  410e80:	ldur	x0, [x29, #-40]
  410e84:	bl	40ef2c <clock_supported@plt+0xac34>
  410e88:	ldur	x1, [x29, #-24]
  410e8c:	ldur	x2, [x29, #-32]
  410e90:	bl	4042e8 <memcpy@plt>
  410e94:	ldur	x0, [x29, #-40]
  410e98:	bl	40e728 <clock_supported@plt+0xa430>
  410e9c:	stur	w0, [x29, #-44]
  410ea0:	ldur	w8, [x29, #-44]
  410ea4:	cmp	w8, #0x0
  410ea8:	cset	w8, ge  // ge = tcont
  410eac:	tbnz	w8, #0, 410ec4 <clock_supported@plt+0xcbcc>
  410eb0:	ldur	w8, [x29, #-44]
  410eb4:	stur	w8, [x29, #-4]
  410eb8:	mov	w8, #0x1                   	// #1
  410ebc:	str	w8, [sp, #48]
  410ec0:	b	410ef8 <clock_supported@plt+0xcc00>
  410ec4:	ldur	x8, [x29, #-40]
  410ec8:	str	x8, [sp, #40]
  410ecc:	mov	x8, xzr
  410ed0:	stur	x8, [x29, #-40]
  410ed4:	ldr	x8, [sp, #40]
  410ed8:	str	x8, [sp, #32]
  410edc:	ldr	x8, [sp, #32]
  410ee0:	ldur	x9, [x29, #-16]
  410ee4:	str	x8, [x9]
  410ee8:	ldur	w10, [x29, #-44]
  410eec:	stur	w10, [x29, #-4]
  410ef0:	mov	w10, #0x1                   	// #1
  410ef4:	str	w10, [sp, #48]
  410ef8:	sub	x0, x29, #0x28
  410efc:	bl	410f10 <clock_supported@plt+0xcc18>
  410f00:	ldur	w0, [x29, #-4]
  410f04:	ldp	x29, x30, [sp, #96]
  410f08:	add	sp, sp, #0x70
  410f0c:	ret
  410f10:	sub	sp, sp, #0x20
  410f14:	stp	x29, x30, [sp, #16]
  410f18:	add	x29, sp, #0x10
  410f1c:	str	x0, [sp, #8]
  410f20:	ldr	x8, [sp, #8]
  410f24:	ldr	x8, [x8]
  410f28:	cbz	x8, 410f38 <clock_supported@plt+0xcc40>
  410f2c:	ldr	x8, [sp, #8]
  410f30:	ldr	x0, [x8]
  410f34:	bl	40e3c8 <clock_supported@plt+0xa0d0>
  410f38:	ldp	x29, x30, [sp, #16]
  410f3c:	add	sp, sp, #0x20
  410f40:	ret
  410f44:	sub	sp, sp, #0x40
  410f48:	stp	x29, x30, [sp, #48]
  410f4c:	add	x29, sp, #0x30
  410f50:	mov	w8, #0x1                   	// #1
  410f54:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  410f58:	add	x9, x9, #0x927
  410f5c:	add	x9, x9, #0x3
  410f60:	mov	w10, #0x0                   	// #0
  410f64:	stur	x0, [x29, #-16]
  410f68:	stur	w8, [x29, #-20]
  410f6c:	str	x9, [sp, #16]
  410f70:	str	w10, [sp, #12]
  410f74:	ldur	x8, [x29, #-16]
  410f78:	cmp	x8, #0x0
  410f7c:	cset	w9, ne  // ne = any
  410f80:	mov	w10, #0x1                   	// #1
  410f84:	eor	w9, w9, #0x1
  410f88:	eor	w9, w9, w10
  410f8c:	and	w9, w9, #0x1
  410f90:	mov	w0, w9
  410f94:	sxtw	x8, w0
  410f98:	cbz	x8, 410fa8 <clock_supported@plt+0xccb0>
  410f9c:	ldur	w8, [x29, #-20]
  410fa0:	tbnz	w8, #0, 410fe0 <clock_supported@plt+0xcce8>
  410fa4:	b	410fd4 <clock_supported@plt+0xccdc>
  410fa8:	mov	w8, wzr
  410fac:	mov	w0, w8
  410fb0:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  410fb4:	add	x1, x1, #0xa52
  410fb8:	ldr	x2, [sp, #16]
  410fbc:	mov	w3, #0x280                 	// #640
  410fc0:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  410fc4:	add	x4, x4, #0x275
  410fc8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  410fcc:	ldr	w8, [sp, #12]
  410fd0:	tbnz	w8, #0, 410fe0 <clock_supported@plt+0xcce8>
  410fd4:	mov	w8, #0xffffffea            	// #-22
  410fd8:	stur	w8, [x29, #-4]
  410fdc:	b	411060 <clock_supported@plt+0xcd68>
  410fe0:	ldur	x8, [x29, #-16]
  410fe4:	ldr	x8, [x8, #96]
  410fe8:	cmp	x8, #0xe
  410fec:	cset	w9, cs  // cs = hs, nlast
  410ff0:	mov	w10, #0x1                   	// #1
  410ff4:	eor	w9, w9, #0x1
  410ff8:	eor	w9, w9, w10
  410ffc:	eor	w9, w9, w10
  411000:	and	w9, w9, #0x1
  411004:	mov	w0, w9
  411008:	sxtw	x8, w0
  41100c:	cbz	x8, 411034 <clock_supported@plt+0xcd3c>
  411010:	mov	w8, wzr
  411014:	mov	w0, w8
  411018:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  41101c:	add	x1, x1, #0x2a9
  411020:	ldr	x2, [sp, #16]
  411024:	mov	w3, #0x282                 	// #642
  411028:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  41102c:	add	x4, x4, #0x275
  411030:	bl	403958 <log_assert_failed_realm@plt>
  411034:	ldur	x8, [x29, #-16]
  411038:	mov	x9, #0xe                   	// #14
  41103c:	str	x9, [x8, #104]
  411040:	ldur	x8, [x29, #-16]
  411044:	ldr	x8, [x8, #104]
  411048:	ldur	x9, [x29, #-16]
  41104c:	ldr	x9, [x9, #96]
  411050:	cmp	x8, x9
  411054:	cset	w10, cc  // cc = lo, ul, last
  411058:	and	w10, w10, #0x1
  41105c:	stur	w10, [x29, #-4]
  411060:	ldur	w0, [x29, #-4]
  411064:	ldp	x29, x30, [sp, #48]
  411068:	add	sp, sp, #0x40
  41106c:	ret
  411070:	sub	sp, sp, #0x40
  411074:	stp	x29, x30, [sp, #48]
  411078:	add	x29, sp, #0x30
  41107c:	mov	w8, #0x1                   	// #1
  411080:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  411084:	add	x9, x9, #0x927
  411088:	add	x2, x9, #0x3
  41108c:	mov	w10, #0x0                   	// #0
  411090:	stur	x0, [x29, #-16]
  411094:	str	w8, [sp, #20]
  411098:	str	x2, [sp, #8]
  41109c:	str	w10, [sp, #4]
  4110a0:	ldur	x8, [x29, #-16]
  4110a4:	cmp	x8, #0x0
  4110a8:	cset	w9, ne  // ne = any
  4110ac:	mov	w10, #0x1                   	// #1
  4110b0:	eor	w9, w9, #0x1
  4110b4:	eor	w9, w9, w10
  4110b8:	and	w9, w9, #0x1
  4110bc:	mov	w0, w9
  4110c0:	sxtw	x8, w0
  4110c4:	cbz	x8, 4110d4 <clock_supported@plt+0xcddc>
  4110c8:	ldr	w8, [sp, #20]
  4110cc:	tbnz	w8, #0, 41110c <clock_supported@plt+0xce14>
  4110d0:	b	411100 <clock_supported@plt+0xce08>
  4110d4:	mov	w8, wzr
  4110d8:	mov	w0, w8
  4110dc:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4110e0:	add	x1, x1, #0xa52
  4110e4:	ldr	x2, [sp, #8]
  4110e8:	mov	w3, #0x28b                 	// #651
  4110ec:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  4110f0:	add	x4, x4, #0x2d4
  4110f4:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4110f8:	ldr	w8, [sp, #4]
  4110fc:	tbnz	w8, #0, 41110c <clock_supported@plt+0xce14>
  411100:	mov	w8, #0xffffffea            	// #-22
  411104:	stur	w8, [x29, #-4]
  411108:	b	4111cc <clock_supported@plt+0xced4>
  41110c:	ldur	x8, [x29, #-16]
  411110:	ldr	x8, [x8, #104]
  411114:	ldur	x9, [x29, #-16]
  411118:	ldr	x9, [x9, #96]
  41111c:	cmp	x8, x9
  411120:	b.ne	411130 <clock_supported@plt+0xce38>  // b.any
  411124:	mov	w8, #0xffffffe3            	// #-29
  411128:	stur	w8, [x29, #-4]
  41112c:	b	4111cc <clock_supported@plt+0xced4>
  411130:	ldur	x8, [x29, #-16]
  411134:	ldr	x8, [x8, #104]
  411138:	add	x8, x8, #0x2
  41113c:	ldur	x9, [x29, #-16]
  411140:	ldr	x9, [x9, #96]
  411144:	cmp	x8, x9
  411148:	b.ls	411158 <clock_supported@plt+0xce60>  // b.plast
  41114c:	mov	w8, #0xffffffb6            	// #-74
  411150:	stur	w8, [x29, #-4]
  411154:	b	4111cc <clock_supported@plt+0xced4>
  411158:	ldur	x0, [x29, #-16]
  41115c:	bl	4111dc <clock_supported@plt+0xcee4>
  411160:	str	x0, [sp, #24]
  411164:	ldur	x8, [x29, #-16]
  411168:	ldr	x8, [x8, #104]
  41116c:	add	x8, x8, #0x2
  411170:	ldr	x9, [sp, #24]
  411174:	add	x8, x8, x9
  411178:	ldur	x9, [x29, #-16]
  41117c:	ldr	x9, [x9, #96]
  411180:	cmp	x8, x9
  411184:	b.ls	411194 <clock_supported@plt+0xce9c>  // b.plast
  411188:	mov	w8, #0xffffffb6            	// #-74
  41118c:	stur	w8, [x29, #-4]
  411190:	b	4111cc <clock_supported@plt+0xced4>
  411194:	ldr	x8, [sp, #24]
  411198:	add	x8, x8, #0x2
  41119c:	ldur	x9, [x29, #-16]
  4111a0:	ldr	x10, [x9, #104]
  4111a4:	add	x8, x10, x8
  4111a8:	str	x8, [x9, #104]
  4111ac:	ldur	x8, [x29, #-16]
  4111b0:	ldr	x8, [x8, #104]
  4111b4:	ldur	x9, [x29, #-16]
  4111b8:	ldr	x9, [x9, #96]
  4111bc:	cmp	x8, x9
  4111c0:	cset	w11, cc  // cc = lo, ul, last
  4111c4:	and	w11, w11, #0x1
  4111c8:	stur	w11, [x29, #-4]
  4111cc:	ldur	w0, [x29, #-4]
  4111d0:	ldp	x29, x30, [sp, #48]
  4111d4:	add	sp, sp, #0x40
  4111d8:	ret
  4111dc:	sub	sp, sp, #0x20
  4111e0:	stp	x29, x30, [sp, #16]
  4111e4:	add	x29, sp, #0x10
  4111e8:	str	x0, [sp, #8]
  4111ec:	ldr	x0, [sp, #8]
  4111f0:	bl	40ef2c <clock_supported@plt+0xac34>
  4111f4:	ldr	x8, [sp, #8]
  4111f8:	ldr	x8, [x8, #104]
  4111fc:	add	x8, x0, x8
  411200:	str	x8, [sp]
  411204:	ldr	x8, [sp]
  411208:	ldrb	w9, [x8, #1]
  41120c:	mov	w8, w9
  411210:	ldr	x10, [sp]
  411214:	ldrb	w9, [x10]
  411218:	and	w9, w9, #0x1
  41121c:	mov	w0, w9
  411220:	sxtw	x10, w0
  411224:	add	x0, x8, x10, lsl #8
  411228:	ldp	x29, x30, [sp, #16]
  41122c:	add	sp, sp, #0x20
  411230:	ret
  411234:	sub	sp, sp, #0x40
  411238:	stp	x29, x30, [sp, #48]
  41123c:	add	x29, sp, #0x30
  411240:	mov	w8, #0x1                   	// #1
  411244:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  411248:	add	x9, x9, #0x927
  41124c:	add	x9, x9, #0x3
  411250:	mov	w10, #0x0                   	// #0
  411254:	stur	x0, [x29, #-16]
  411258:	str	x1, [sp, #24]
  41125c:	str	w8, [sp, #20]
  411260:	str	x9, [sp, #8]
  411264:	str	w10, [sp, #4]
  411268:	ldur	x8, [x29, #-16]
  41126c:	cmp	x8, #0x0
  411270:	cset	w9, ne  // ne = any
  411274:	mov	w10, #0x1                   	// #1
  411278:	eor	w9, w9, #0x1
  41127c:	eor	w9, w9, w10
  411280:	and	w9, w9, #0x1
  411284:	mov	w0, w9
  411288:	sxtw	x8, w0
  41128c:	cbz	x8, 41129c <clock_supported@plt+0xcfa4>
  411290:	ldr	w8, [sp, #20]
  411294:	tbnz	w8, #0, 4112d4 <clock_supported@plt+0xcfdc>
  411298:	b	4112c8 <clock_supported@plt+0xcfd0>
  41129c:	mov	w8, wzr
  4112a0:	mov	w0, w8
  4112a4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4112a8:	add	x1, x1, #0xa52
  4112ac:	ldr	x2, [sp, #8]
  4112b0:	mov	w3, #0x29c                 	// #668
  4112b4:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  4112b8:	add	x4, x4, #0x306
  4112bc:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4112c0:	ldr	w8, [sp, #4]
  4112c4:	tbnz	w8, #0, 4112d4 <clock_supported@plt+0xcfdc>
  4112c8:	mov	w8, #0xffffffea            	// #-22
  4112cc:	stur	w8, [x29, #-4]
  4112d0:	b	4113a0 <clock_supported@plt+0xd0a8>
  4112d4:	ldr	x8, [sp, #24]
  4112d8:	cmp	x8, #0x0
  4112dc:	cset	w9, ne  // ne = any
  4112e0:	mov	w10, #0x1                   	// #1
  4112e4:	eor	w9, w9, #0x1
  4112e8:	eor	w9, w9, w10
  4112ec:	and	w9, w9, #0x1
  4112f0:	mov	w0, w9
  4112f4:	sxtw	x8, w0
  4112f8:	cbz	x8, 411308 <clock_supported@plt+0xd010>
  4112fc:	ldr	w8, [sp, #20]
  411300:	tbnz	w8, #0, 411340 <clock_supported@plt+0xd048>
  411304:	b	411334 <clock_supported@plt+0xd03c>
  411308:	mov	w8, wzr
  41130c:	mov	w0, w8
  411310:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  411314:	add	x1, x1, #0x799
  411318:	ldr	x2, [sp, #8]
  41131c:	mov	w3, #0x29d                 	// #669
  411320:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  411324:	add	x4, x4, #0x306
  411328:	bl	4042c8 <log_assert_failed_return_realm@plt>
  41132c:	ldr	w8, [sp, #4]
  411330:	tbnz	w8, #0, 411340 <clock_supported@plt+0xd048>
  411334:	mov	w8, #0xffffffea            	// #-22
  411338:	stur	w8, [x29, #-4]
  41133c:	b	4113a0 <clock_supported@plt+0xd0a8>
  411340:	ldur	x8, [x29, #-16]
  411344:	ldr	x8, [x8, #104]
  411348:	ldur	x9, [x29, #-16]
  41134c:	ldr	x9, [x9, #96]
  411350:	cmp	x8, x9
  411354:	b.ne	411364 <clock_supported@plt+0xd06c>  // b.any
  411358:	mov	w8, #0xffffffe3            	// #-29
  41135c:	stur	w8, [x29, #-4]
  411360:	b	4113a0 <clock_supported@plt+0xd0a8>
  411364:	ldur	x8, [x29, #-16]
  411368:	ldr	x8, [x8, #104]
  41136c:	add	x8, x8, #0x2
  411370:	ldur	x9, [x29, #-16]
  411374:	ldr	x9, [x9, #96]
  411378:	cmp	x8, x9
  41137c:	b.ls	41138c <clock_supported@plt+0xd094>  // b.plast
  411380:	mov	w8, #0xffffffb6            	// #-74
  411384:	stur	w8, [x29, #-4]
  411388:	b	4113a0 <clock_supported@plt+0xd0a8>
  41138c:	ldur	x0, [x29, #-16]
  411390:	bl	4113b0 <clock_supported@plt+0xd0b8>
  411394:	ldr	x8, [sp, #24]
  411398:	strb	w0, [x8]
  41139c:	stur	wzr, [x29, #-4]
  4113a0:	ldur	w0, [x29, #-4]
  4113a4:	ldp	x29, x30, [sp, #48]
  4113a8:	add	sp, sp, #0x40
  4113ac:	ret
  4113b0:	sub	sp, sp, #0x20
  4113b4:	stp	x29, x30, [sp, #16]
  4113b8:	add	x29, sp, #0x10
  4113bc:	str	x0, [sp, #8]
  4113c0:	ldr	x0, [sp, #8]
  4113c4:	bl	40ef2c <clock_supported@plt+0xac34>
  4113c8:	ldr	x8, [sp, #8]
  4113cc:	ldr	x8, [x8, #104]
  4113d0:	ldrb	w9, [x0, x8]
  4113d4:	asr	w9, w9, #1
  4113d8:	mov	w0, w9
  4113dc:	ldp	x29, x30, [sp, #16]
  4113e0:	add	sp, sp, #0x20
  4113e4:	ret
  4113e8:	sub	sp, sp, #0x40
  4113ec:	stp	x29, x30, [sp, #48]
  4113f0:	add	x29, sp, #0x30
  4113f4:	mov	w8, #0x1                   	// #1
  4113f8:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  4113fc:	add	x9, x9, #0x927
  411400:	add	x2, x9, #0x3
  411404:	mov	w10, #0x0                   	// #0
  411408:	stur	x0, [x29, #-16]
  41140c:	sturb	w1, [x29, #-17]
  411410:	str	w8, [sp, #20]
  411414:	str	x2, [sp, #8]
  411418:	str	w10, [sp, #4]
  41141c:	ldur	x8, [x29, #-16]
  411420:	cmp	x8, #0x0
  411424:	cset	w9, ne  // ne = any
  411428:	mov	w10, #0x1                   	// #1
  41142c:	eor	w9, w9, #0x1
  411430:	eor	w9, w9, w10
  411434:	and	w9, w9, #0x1
  411438:	mov	w0, w9
  41143c:	sxtw	x8, w0
  411440:	cbz	x8, 411450 <clock_supported@plt+0xd158>
  411444:	ldr	w8, [sp, #20]
  411448:	tbnz	w8, #0, 411488 <clock_supported@plt+0xd190>
  41144c:	b	41147c <clock_supported@plt+0xd184>
  411450:	mov	w8, wzr
  411454:	mov	w0, w8
  411458:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  41145c:	add	x1, x1, #0xa52
  411460:	ldr	x2, [sp, #8]
  411464:	mov	w3, #0x2ad                 	// #685
  411468:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  41146c:	add	x4, x4, #0x347
  411470:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411474:	ldr	w8, [sp, #4]
  411478:	tbnz	w8, #0, 411488 <clock_supported@plt+0xd190>
  41147c:	mov	w8, #0xffffffea            	// #-22
  411480:	stur	w8, [x29, #-4]
  411484:	b	4114cc <clock_supported@plt+0xd1d4>
  411488:	ldur	x0, [x29, #-16]
  41148c:	sub	x1, x29, #0x12
  411490:	bl	411234 <clock_supported@plt+0xcf3c>
  411494:	str	w0, [sp, #24]
  411498:	ldr	w8, [sp, #24]
  41149c:	cmp	w8, #0x0
  4114a0:	cset	w8, ge  // ge = tcont
  4114a4:	tbnz	w8, #0, 4114b4 <clock_supported@plt+0xd1bc>
  4114a8:	ldr	w8, [sp, #24]
  4114ac:	stur	w8, [x29, #-4]
  4114b0:	b	4114cc <clock_supported@plt+0xd1d4>
  4114b4:	ldurb	w8, [x29, #-17]
  4114b8:	ldurb	w9, [x29, #-18]
  4114bc:	cmp	w8, w9
  4114c0:	cset	w8, eq  // eq = none
  4114c4:	and	w8, w8, #0x1
  4114c8:	stur	w8, [x29, #-4]
  4114cc:	ldur	w0, [x29, #-4]
  4114d0:	ldp	x29, x30, [sp, #48]
  4114d4:	add	sp, sp, #0x40
  4114d8:	ret
  4114dc:	sub	sp, sp, #0x60
  4114e0:	stp	x29, x30, [sp, #80]
  4114e4:	add	x29, sp, #0x50
  4114e8:	mov	w8, #0x1                   	// #1
  4114ec:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  4114f0:	add	x9, x9, #0x927
  4114f4:	add	x9, x9, #0x3
  4114f8:	adrp	x10, 414000 <clock_supported@plt+0xfd08>
  4114fc:	add	x10, x10, #0x385
  411500:	mov	w11, #0x0                   	// #0
  411504:	stur	x0, [x29, #-16]
  411508:	stur	x1, [x29, #-24]
  41150c:	stur	x2, [x29, #-32]
  411510:	str	w8, [sp, #24]
  411514:	str	x9, [sp, #16]
  411518:	str	x10, [sp, #8]
  41151c:	str	w11, [sp, #4]
  411520:	ldur	x8, [x29, #-16]
  411524:	cmp	x8, #0x0
  411528:	cset	w9, ne  // ne = any
  41152c:	mov	w10, #0x1                   	// #1
  411530:	eor	w9, w9, #0x1
  411534:	eor	w9, w9, w10
  411538:	and	w9, w9, #0x1
  41153c:	mov	w0, w9
  411540:	sxtw	x8, w0
  411544:	cbz	x8, 411554 <clock_supported@plt+0xd25c>
  411548:	ldr	w8, [sp, #24]
  41154c:	tbnz	w8, #0, 411588 <clock_supported@plt+0xd290>
  411550:	b	41157c <clock_supported@plt+0xd284>
  411554:	mov	w8, wzr
  411558:	mov	w0, w8
  41155c:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  411560:	add	x1, x1, #0xa52
  411564:	ldr	x2, [sp, #16]
  411568:	mov	w3, #0x2bb                 	// #699
  41156c:	ldr	x4, [sp, #8]
  411570:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411574:	ldr	w8, [sp, #4]
  411578:	tbnz	w8, #0, 411588 <clock_supported@plt+0xd290>
  41157c:	mov	w8, #0xffffffea            	// #-22
  411580:	stur	w8, [x29, #-4]
  411584:	b	411724 <clock_supported@plt+0xd42c>
  411588:	ldur	x8, [x29, #-24]
  41158c:	cmp	x8, #0x0
  411590:	cset	w9, ne  // ne = any
  411594:	mov	w10, #0x1                   	// #1
  411598:	eor	w9, w9, #0x1
  41159c:	eor	w9, w9, w10
  4115a0:	and	w9, w9, #0x1
  4115a4:	mov	w0, w9
  4115a8:	sxtw	x8, w0
  4115ac:	cbz	x8, 4115bc <clock_supported@plt+0xd2c4>
  4115b0:	ldr	w8, [sp, #24]
  4115b4:	tbnz	w8, #0, 4115f0 <clock_supported@plt+0xd2f8>
  4115b8:	b	4115e4 <clock_supported@plt+0xd2ec>
  4115bc:	mov	w8, wzr
  4115c0:	mov	w0, w8
  4115c4:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  4115c8:	add	x1, x1, #0x3d0
  4115cc:	ldr	x2, [sp, #16]
  4115d0:	mov	w3, #0x2bc                 	// #700
  4115d4:	ldr	x4, [sp, #8]
  4115d8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4115dc:	ldr	w8, [sp, #4]
  4115e0:	tbnz	w8, #0, 4115f0 <clock_supported@plt+0xd2f8>
  4115e4:	mov	w8, #0xffffffea            	// #-22
  4115e8:	stur	w8, [x29, #-4]
  4115ec:	b	411724 <clock_supported@plt+0xd42c>
  4115f0:	ldur	x8, [x29, #-32]
  4115f4:	cmp	x8, #0x0
  4115f8:	cset	w9, ne  // ne = any
  4115fc:	mov	w10, #0x1                   	// #1
  411600:	eor	w9, w9, #0x1
  411604:	eor	w9, w9, w10
  411608:	and	w9, w9, #0x1
  41160c:	mov	w0, w9
  411610:	sxtw	x8, w0
  411614:	cbz	x8, 411624 <clock_supported@plt+0xd32c>
  411618:	ldr	w8, [sp, #24]
  41161c:	tbnz	w8, #0, 411658 <clock_supported@plt+0xd360>
  411620:	b	41164c <clock_supported@plt+0xd354>
  411624:	mov	w8, wzr
  411628:	mov	w0, w8
  41162c:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  411630:	add	x1, x1, #0x3d4
  411634:	ldr	x2, [sp, #16]
  411638:	mov	w3, #0x2bd                 	// #701
  41163c:	ldr	x4, [sp, #8]
  411640:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411644:	ldr	w8, [sp, #4]
  411648:	tbnz	w8, #0, 411658 <clock_supported@plt+0xd360>
  41164c:	mov	w8, #0xffffffea            	// #-22
  411650:	stur	w8, [x29, #-4]
  411654:	b	411724 <clock_supported@plt+0xd42c>
  411658:	ldur	x0, [x29, #-16]
  41165c:	mov	w1, #0x7f                  	// #127
  411660:	bl	4113e8 <clock_supported@plt+0xd0f0>
  411664:	str	w0, [sp, #28]
  411668:	ldr	w8, [sp, #28]
  41166c:	cmp	w8, #0x0
  411670:	cset	w8, ge  // ge = tcont
  411674:	tbnz	w8, #0, 411684 <clock_supported@plt+0xd38c>
  411678:	ldr	w8, [sp, #28]
  41167c:	stur	w8, [x29, #-4]
  411680:	b	411724 <clock_supported@plt+0xd42c>
  411684:	ldr	w8, [sp, #28]
  411688:	cbnz	w8, 411698 <clock_supported@plt+0xd3a0>
  41168c:	mov	w8, #0xfffffffa            	// #-6
  411690:	stur	w8, [x29, #-4]
  411694:	b	411724 <clock_supported@plt+0xd42c>
  411698:	ldur	x0, [x29, #-16]
  41169c:	bl	4111dc <clock_supported@plt+0xcee4>
  4116a0:	str	x0, [sp, #32]
  4116a4:	ldr	x8, [sp, #32]
  4116a8:	cmp	x8, #0x4
  4116ac:	b.cs	4116bc <clock_supported@plt+0xd3c4>  // b.hs, b.nlast
  4116b0:	mov	w8, #0xffffffb6            	// #-74
  4116b4:	stur	w8, [x29, #-4]
  4116b8:	b	411724 <clock_supported@plt+0xd42c>
  4116bc:	ldur	x8, [x29, #-16]
  4116c0:	ldr	x8, [x8, #104]
  4116c4:	add	x8, x8, #0x2
  4116c8:	ldr	x9, [sp, #32]
  4116cc:	add	x8, x8, x9
  4116d0:	ldur	x9, [x29, #-16]
  4116d4:	ldr	x9, [x9, #96]
  4116d8:	cmp	x8, x9
  4116dc:	b.ls	4116ec <clock_supported@plt+0xd3f4>  // b.plast
  4116e0:	mov	w8, #0xffffffb6            	// #-74
  4116e4:	stur	w8, [x29, #-4]
  4116e8:	b	411724 <clock_supported@plt+0xd42c>
  4116ec:	ldur	x0, [x29, #-16]
  4116f0:	bl	411734 <clock_supported@plt+0xd43c>
  4116f4:	str	x0, [sp, #40]
  4116f8:	ldur	x8, [x29, #-24]
  4116fc:	ldr	x9, [sp, #40]
  411700:	ldrh	w10, [x9]
  411704:	strh	w10, [x8]
  411708:	ldrb	w10, [x9, #2]
  41170c:	strb	w10, [x8, #2]
  411710:	ldr	x8, [sp, #40]
  411714:	ldrb	w10, [x8, #3]
  411718:	ldur	x8, [x29, #-32]
  41171c:	strb	w10, [x8]
  411720:	stur	wzr, [x29, #-4]
  411724:	ldur	w0, [x29, #-4]
  411728:	ldp	x29, x30, [sp, #80]
  41172c:	add	sp, sp, #0x60
  411730:	ret
  411734:	sub	sp, sp, #0x20
  411738:	stp	x29, x30, [sp, #16]
  41173c:	add	x29, sp, #0x10
  411740:	str	x0, [sp, #8]
  411744:	ldr	x0, [sp, #8]
  411748:	bl	40ef2c <clock_supported@plt+0xac34>
  41174c:	ldr	x8, [sp, #8]
  411750:	ldr	x8, [x8, #104]
  411754:	add	x8, x0, x8
  411758:	add	x0, x8, #0x2
  41175c:	ldp	x29, x30, [sp, #16]
  411760:	add	sp, sp, #0x20
  411764:	ret
  411768:	sub	sp, sp, #0x40
  41176c:	stp	x29, x30, [sp, #48]
  411770:	add	x29, sp, #0x30
  411774:	mov	w8, #0xfffffffa            	// #-6
  411778:	add	x9, sp, #0x14
  41177c:	add	x10, sp, #0x13
  411780:	stur	x0, [x29, #-16]
  411784:	str	x1, [sp, #24]
  411788:	strb	w2, [sp, #23]
  41178c:	ldur	x0, [x29, #-16]
  411790:	mov	x1, x9
  411794:	mov	x2, x10
  411798:	str	w8, [sp, #8]
  41179c:	bl	4114dc <clock_supported@plt+0xd1e4>
  4117a0:	str	w0, [sp, #12]
  4117a4:	ldr	w8, [sp, #12]
  4117a8:	ldr	w11, [sp, #8]
  4117ac:	cmp	w8, w11
  4117b0:	b.ne	4117bc <clock_supported@plt+0xd4c4>  // b.any
  4117b4:	stur	wzr, [x29, #-4]
  4117b8:	b	411814 <clock_supported@plt+0xd51c>
  4117bc:	ldr	w8, [sp, #12]
  4117c0:	cmp	w8, #0x0
  4117c4:	cset	w8, ge  // ge = tcont
  4117c8:	tbnz	w8, #0, 4117d8 <clock_supported@plt+0xd4e0>
  4117cc:	ldr	w8, [sp, #12]
  4117d0:	stur	w8, [x29, #-4]
  4117d4:	b	411814 <clock_supported@plt+0xd51c>
  4117d8:	ldr	x1, [sp, #24]
  4117dc:	add	x0, sp, #0x14
  4117e0:	mov	x2, #0x3                   	// #3
  4117e4:	bl	403d48 <memcmp@plt>
  4117e8:	mov	w8, #0x0                   	// #0
  4117ec:	str	w8, [sp, #4]
  4117f0:	cbnz	w0, 411808 <clock_supported@plt+0xd510>
  4117f4:	ldrb	w8, [sp, #19]
  4117f8:	ldrb	w9, [sp, #23]
  4117fc:	cmp	w8, w9
  411800:	cset	w8, eq  // eq = none
  411804:	str	w8, [sp, #4]
  411808:	ldr	w8, [sp, #4]
  41180c:	and	w8, w8, #0x1
  411810:	stur	w8, [x29, #-4]
  411814:	ldur	w0, [x29, #-4]
  411818:	ldp	x29, x30, [sp, #48]
  41181c:	add	sp, sp, #0x40
  411820:	ret
  411824:	sub	sp, sp, #0x60
  411828:	stp	x29, x30, [sp, #80]
  41182c:	add	x29, sp, #0x50
  411830:	mov	w8, #0x1                   	// #1
  411834:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  411838:	add	x9, x9, #0x927
  41183c:	add	x9, x9, #0x3
  411840:	adrp	x10, 414000 <clock_supported@plt+0xfd08>
  411844:	add	x10, x10, #0x3dc
  411848:	mov	w11, #0x0                   	// #0
  41184c:	stur	x0, [x29, #-16]
  411850:	stur	x1, [x29, #-24]
  411854:	stur	x2, [x29, #-32]
  411858:	str	w8, [sp, #36]
  41185c:	str	x9, [sp, #24]
  411860:	str	x10, [sp, #16]
  411864:	str	w11, [sp, #12]
  411868:	ldur	x8, [x29, #-16]
  41186c:	cmp	x8, #0x0
  411870:	cset	w9, ne  // ne = any
  411874:	mov	w10, #0x1                   	// #1
  411878:	eor	w9, w9, #0x1
  41187c:	eor	w9, w9, w10
  411880:	and	w9, w9, #0x1
  411884:	mov	w0, w9
  411888:	sxtw	x8, w0
  41188c:	cbz	x8, 41189c <clock_supported@plt+0xd5a4>
  411890:	ldr	w8, [sp, #36]
  411894:	tbnz	w8, #0, 4118d0 <clock_supported@plt+0xd5d8>
  411898:	b	4118c4 <clock_supported@plt+0xd5cc>
  41189c:	mov	w8, wzr
  4118a0:	mov	w0, w8
  4118a4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  4118a8:	add	x1, x1, #0xa52
  4118ac:	ldr	x2, [sp, #24]
  4118b0:	mov	w3, #0x2e3                 	// #739
  4118b4:	ldr	x4, [sp, #16]
  4118b8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  4118bc:	ldr	w8, [sp, #12]
  4118c0:	tbnz	w8, #0, 4118d0 <clock_supported@plt+0xd5d8>
  4118c4:	mov	w8, #0xffffffea            	// #-22
  4118c8:	stur	w8, [x29, #-4]
  4118cc:	b	411a34 <clock_supported@plt+0xd73c>
  4118d0:	ldur	x8, [x29, #-24]
  4118d4:	cmp	x8, #0x0
  4118d8:	cset	w9, ne  // ne = any
  4118dc:	mov	w10, #0x1                   	// #1
  4118e0:	eor	w9, w9, #0x1
  4118e4:	eor	w9, w9, w10
  4118e8:	and	w9, w9, #0x1
  4118ec:	mov	w0, w9
  4118f0:	sxtw	x8, w0
  4118f4:	cbz	x8, 411904 <clock_supported@plt+0xd60c>
  4118f8:	ldr	w8, [sp, #36]
  4118fc:	tbnz	w8, #0, 411938 <clock_supported@plt+0xd640>
  411900:	b	41192c <clock_supported@plt+0xd634>
  411904:	mov	w8, wzr
  411908:	mov	w0, w8
  41190c:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  411910:	add	x1, x1, #0x89b
  411914:	ldr	x2, [sp, #24]
  411918:	mov	w3, #0x2e4                 	// #740
  41191c:	ldr	x4, [sp, #16]
  411920:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411924:	ldr	w8, [sp, #12]
  411928:	tbnz	w8, #0, 411938 <clock_supported@plt+0xd640>
  41192c:	mov	w8, #0xffffffea            	// #-22
  411930:	stur	w8, [x29, #-4]
  411934:	b	411a34 <clock_supported@plt+0xd73c>
  411938:	ldur	x8, [x29, #-32]
  41193c:	cmp	x8, #0x0
  411940:	cset	w9, ne  // ne = any
  411944:	mov	w10, #0x1                   	// #1
  411948:	eor	w9, w9, #0x1
  41194c:	eor	w9, w9, w10
  411950:	and	w9, w9, #0x1
  411954:	mov	w0, w9
  411958:	sxtw	x8, w0
  41195c:	cbz	x8, 41196c <clock_supported@plt+0xd674>
  411960:	ldr	w8, [sp, #36]
  411964:	tbnz	w8, #0, 4119a0 <clock_supported@plt+0xd6a8>
  411968:	b	411994 <clock_supported@plt+0xd69c>
  41196c:	mov	w8, wzr
  411970:	mov	w0, w8
  411974:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  411978:	add	x1, x1, #0xec9
  41197c:	ldr	x2, [sp, #24]
  411980:	mov	w3, #0x2e5                 	// #741
  411984:	ldr	x4, [sp, #16]
  411988:	bl	4042c8 <log_assert_failed_return_realm@plt>
  41198c:	ldr	w8, [sp, #12]
  411990:	tbnz	w8, #0, 4119a0 <clock_supported@plt+0xd6a8>
  411994:	mov	w8, #0xffffffea            	// #-22
  411998:	stur	w8, [x29, #-4]
  41199c:	b	411a34 <clock_supported@plt+0xd73c>
  4119a0:	ldur	x8, [x29, #-16]
  4119a4:	ldr	x8, [x8, #104]
  4119a8:	add	x8, x8, #0x2
  4119ac:	ldur	x9, [x29, #-16]
  4119b0:	ldr	x9, [x9, #96]
  4119b4:	cmp	x8, x9
  4119b8:	b.ls	4119c8 <clock_supported@plt+0xd6d0>  // b.plast
  4119bc:	mov	w8, #0xffffffb6            	// #-74
  4119c0:	stur	w8, [x29, #-4]
  4119c4:	b	411a34 <clock_supported@plt+0xd73c>
  4119c8:	ldur	x0, [x29, #-16]
  4119cc:	bl	4111dc <clock_supported@plt+0xcee4>
  4119d0:	str	x0, [sp, #40]
  4119d4:	ldur	x8, [x29, #-16]
  4119d8:	ldr	x8, [x8, #104]
  4119dc:	add	x8, x8, #0x2
  4119e0:	ldr	x9, [sp, #40]
  4119e4:	add	x8, x8, x9
  4119e8:	ldur	x9, [x29, #-16]
  4119ec:	ldr	x9, [x9, #96]
  4119f0:	cmp	x8, x9
  4119f4:	b.ls	411a04 <clock_supported@plt+0xd70c>  // b.plast
  4119f8:	mov	w8, #0xffffffb6            	// #-74
  4119fc:	stur	w8, [x29, #-4]
  411a00:	b	411a34 <clock_supported@plt+0xd73c>
  411a04:	ldur	x0, [x29, #-16]
  411a08:	bl	40ef2c <clock_supported@plt+0xac34>
  411a0c:	ldur	x8, [x29, #-16]
  411a10:	ldr	x8, [x8, #104]
  411a14:	add	x8, x0, x8
  411a18:	ldur	x9, [x29, #-24]
  411a1c:	str	x8, [x9]
  411a20:	ldr	x8, [sp, #40]
  411a24:	add	x8, x8, #0x2
  411a28:	ldur	x9, [x29, #-32]
  411a2c:	str	x8, [x9]
  411a30:	stur	wzr, [x29, #-4]
  411a34:	ldur	w0, [x29, #-4]
  411a38:	ldp	x29, x30, [sp, #80]
  411a3c:	add	sp, sp, #0x60
  411a40:	ret
  411a44:	sub	sp, sp, #0x50
  411a48:	stp	x29, x30, [sp, #64]
  411a4c:	add	x29, sp, #0x40
  411a50:	mov	w8, #0x1                   	// #1
  411a54:	adrp	x9, 413000 <clock_supported@plt+0xed08>
  411a58:	add	x9, x9, #0x927
  411a5c:	add	x9, x9, #0x3
  411a60:	adrp	x10, 414000 <clock_supported@plt+0xfd08>
  411a64:	add	x10, x10, #0x42a
  411a68:	mov	w11, #0x0                   	// #0
  411a6c:	stur	x0, [x29, #-16]
  411a70:	stur	w1, [x29, #-20]
  411a74:	str	x2, [sp, #32]
  411a78:	str	w8, [sp, #24]
  411a7c:	str	x9, [sp, #16]
  411a80:	str	x10, [sp, #8]
  411a84:	str	w11, [sp, #4]
  411a88:	ldur	x8, [x29, #-16]
  411a8c:	cmp	x8, #0x0
  411a90:	cset	w9, ne  // ne = any
  411a94:	mov	w10, #0x1                   	// #1
  411a98:	eor	w9, w9, #0x1
  411a9c:	eor	w9, w9, w10
  411aa0:	and	w9, w9, #0x1
  411aa4:	mov	w0, w9
  411aa8:	sxtw	x8, w0
  411aac:	cbz	x8, 411abc <clock_supported@plt+0xd7c4>
  411ab0:	ldr	w8, [sp, #24]
  411ab4:	tbnz	w8, #0, 411af0 <clock_supported@plt+0xd7f8>
  411ab8:	b	411ae4 <clock_supported@plt+0xd7ec>
  411abc:	mov	w8, wzr
  411ac0:	mov	w0, w8
  411ac4:	adrp	x1, 413000 <clock_supported@plt+0xed08>
  411ac8:	add	x1, x1, #0xa52
  411acc:	ldr	x2, [sp, #16]
  411ad0:	mov	w3, #0x2f7                 	// #759
  411ad4:	ldr	x4, [sp, #8]
  411ad8:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411adc:	ldr	w8, [sp, #4]
  411ae0:	tbnz	w8, #0, 411af0 <clock_supported@plt+0xd7f8>
  411ae4:	mov	w8, #0xffffffea            	// #-22
  411ae8:	stur	w8, [x29, #-4]
  411aec:	b	411ca8 <clock_supported@plt+0xd9b0>
  411af0:	mov	w8, #0x0                   	// #0
  411af4:	strb	w8, [sp, #31]
  411af8:	ldur	w8, [x29, #-20]
  411afc:	subs	w9, w8, #0x0
  411b00:	cmp	w9, #0x1
  411b04:	str	w8, [sp]
  411b08:	b.ls	411b2c <clock_supported@plt+0xd834>  // b.plast
  411b0c:	b	411b10 <clock_supported@plt+0xd818>
  411b10:	ldr	w8, [sp]
  411b14:	subs	w9, w8, #0x7
  411b18:	cmp	w9, #0x2
  411b1c:	cset	w9, ls  // ls = plast
  411b20:	eor	w9, w9, #0x1
  411b24:	tbnz	w9, #0, 411b38 <clock_supported@plt+0xd840>
  411b28:	b	411b2c <clock_supported@plt+0xd834>
  411b2c:	mov	w8, #0x1                   	// #1
  411b30:	strb	w8, [sp, #31]
  411b34:	b	411b38 <clock_supported@plt+0xd840>
  411b38:	ldrb	w8, [sp, #31]
  411b3c:	mov	w9, #0x1                   	// #1
  411b40:	and	w8, w8, w9
  411b44:	strb	w8, [sp, #30]
  411b48:	ldrb	w8, [sp, #30]
  411b4c:	eor	w8, w8, #0x1
  411b50:	eor	w8, w8, w9
  411b54:	and	w8, w8, #0x1
  411b58:	mov	w0, w8
  411b5c:	sxtw	x10, w0
  411b60:	cbz	x10, 411b70 <clock_supported@plt+0xd878>
  411b64:	ldr	w8, [sp, #24]
  411b68:	tbnz	w8, #0, 411ba4 <clock_supported@plt+0xd8ac>
  411b6c:	b	411b98 <clock_supported@plt+0xd8a0>
  411b70:	mov	w8, wzr
  411b74:	mov	w0, w8
  411b78:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  411b7c:	add	x1, x1, #0x478
  411b80:	ldr	x2, [sp, #16]
  411b84:	mov	w3, #0x2f8                 	// #760
  411b88:	ldr	x4, [sp, #8]
  411b8c:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411b90:	ldr	w8, [sp, #4]
  411b94:	tbnz	w8, #0, 411ba4 <clock_supported@plt+0xd8ac>
  411b98:	mov	w8, #0xffffffa1            	// #-95
  411b9c:	stur	w8, [x29, #-4]
  411ba0:	b	411ca8 <clock_supported@plt+0xd9b0>
  411ba4:	ldur	w0, [x29, #-20]
  411ba8:	bl	4042f8 <clock_supported@plt>
  411bac:	mov	w8, #0x1                   	// #1
  411bb0:	eor	w9, w0, #0x1
  411bb4:	eor	w8, w9, w8
  411bb8:	and	w8, w8, #0x1
  411bbc:	mov	w1, w8
  411bc0:	sxtw	x10, w1
  411bc4:	cbz	x10, 411bd4 <clock_supported@plt+0xd8dc>
  411bc8:	ldr	w8, [sp, #24]
  411bcc:	tbnz	w8, #0, 411c08 <clock_supported@plt+0xd910>
  411bd0:	b	411bfc <clock_supported@plt+0xd904>
  411bd4:	mov	w8, wzr
  411bd8:	mov	w0, w8
  411bdc:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  411be0:	add	x1, x1, #0x49a
  411be4:	ldr	x2, [sp, #16]
  411be8:	mov	w3, #0x2f9                 	// #761
  411bec:	ldr	x4, [sp, #8]
  411bf0:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411bf4:	ldr	w8, [sp, #4]
  411bf8:	tbnz	w8, #0, 411c08 <clock_supported@plt+0xd910>
  411bfc:	mov	w8, #0xffffffa1            	// #-95
  411c00:	stur	w8, [x29, #-4]
  411c04:	b	411ca8 <clock_supported@plt+0xd9b0>
  411c08:	ldr	x8, [sp, #32]
  411c0c:	cmp	x8, #0x0
  411c10:	cset	w9, ne  // ne = any
  411c14:	mov	w10, #0x1                   	// #1
  411c18:	eor	w9, w9, #0x1
  411c1c:	eor	w9, w9, w10
  411c20:	and	w9, w9, #0x1
  411c24:	mov	w0, w9
  411c28:	sxtw	x8, w0
  411c2c:	cbz	x8, 411c3c <clock_supported@plt+0xd944>
  411c30:	ldr	w8, [sp, #24]
  411c34:	tbnz	w8, #0, 411c70 <clock_supported@plt+0xd978>
  411c38:	b	411c64 <clock_supported@plt+0xd96c>
  411c3c:	mov	w8, wzr
  411c40:	mov	w0, w8
  411c44:	adrp	x1, 412000 <clock_supported@plt+0xdd08>
  411c48:	add	x1, x1, #0x89b
  411c4c:	ldr	x2, [sp, #16]
  411c50:	mov	w3, #0x2fa                 	// #762
  411c54:	ldr	x4, [sp, #8]
  411c58:	bl	4042c8 <log_assert_failed_return_realm@plt>
  411c5c:	ldr	w8, [sp, #4]
  411c60:	tbnz	w8, #0, 411c70 <clock_supported@plt+0xd978>
  411c64:	mov	w8, #0xffffffea            	// #-22
  411c68:	stur	w8, [x29, #-4]
  411c6c:	b	411ca8 <clock_supported@plt+0xd9b0>
  411c70:	ldur	x8, [x29, #-16]
  411c74:	add	x0, x8, #0x10
  411c78:	bl	411cb8 <clock_supported@plt+0xd9c0>
  411c7c:	tbnz	w0, #0, 411c8c <clock_supported@plt+0xd994>
  411c80:	mov	w8, #0xffffffc3            	// #-61
  411c84:	stur	w8, [x29, #-4]
  411c88:	b	411ca8 <clock_supported@plt+0xd9b0>
  411c8c:	ldur	x8, [x29, #-16]
  411c90:	add	x0, x8, #0x10
  411c94:	ldur	w1, [x29, #-20]
  411c98:	bl	404298 <triple_timestamp_by_clock@plt>
  411c9c:	ldr	x8, [sp, #32]
  411ca0:	str	x0, [x8]
  411ca4:	stur	wzr, [x29, #-4]
  411ca8:	ldur	w0, [x29, #-4]
  411cac:	ldp	x29, x30, [sp, #64]
  411cb0:	add	sp, sp, #0x50
  411cb4:	ret
  411cb8:	sub	sp, sp, #0x20
  411cbc:	stp	x29, x30, [sp, #16]
  411cc0:	add	x29, sp, #0x10
  411cc4:	str	x0, [sp, #8]
  411cc8:	ldr	x8, [sp, #8]
  411ccc:	ldr	x0, [x8]
  411cd0:	bl	411efc <clock_supported@plt+0xdc04>
  411cd4:	mov	w9, #0x1                   	// #1
  411cd8:	str	w9, [sp, #4]
  411cdc:	tbnz	w0, #0, 411d08 <clock_supported@plt+0xda10>
  411ce0:	ldr	x8, [sp, #8]
  411ce4:	ldr	x0, [x8, #8]
  411ce8:	bl	411efc <clock_supported@plt+0xdc04>
  411cec:	mov	w9, #0x1                   	// #1
  411cf0:	str	w9, [sp, #4]
  411cf4:	tbnz	w0, #0, 411d08 <clock_supported@plt+0xda10>
  411cf8:	ldr	x8, [sp, #8]
  411cfc:	ldr	x0, [x8, #16]
  411d00:	bl	411efc <clock_supported@plt+0xdc04>
  411d04:	str	w0, [sp, #4]
  411d08:	ldr	w8, [sp, #4]
  411d0c:	and	w0, w8, #0x1
  411d10:	ldp	x29, x30, [sp, #16]
  411d14:	add	sp, sp, #0x20
  411d18:	ret
  411d1c:	sub	sp, sp, #0x40
  411d20:	stp	x29, x30, [sp, #48]
  411d24:	add	x29, sp, #0x30
  411d28:	adrp	x8, 414000 <clock_supported@plt+0xfd08>
  411d2c:	add	x8, x8, #0x4b4
  411d30:	add	x8, x8, #0x3
  411d34:	stur	x0, [x29, #-16]
  411d38:	str	x1, [sp, #24]
  411d3c:	str	x2, [sp, #16]
  411d40:	ldr	x9, [sp, #16]
  411d44:	str	x8, [sp, #8]
  411d48:	cbnz	x9, 411d54 <clock_supported@plt+0xda5c>
  411d4c:	stur	wzr, [x29, #-4]
  411d50:	b	411e08 <clock_supported@plt+0xdb10>
  411d54:	ldur	x8, [x29, #-16]
  411d58:	cmp	x8, #0x0
  411d5c:	cset	w9, ne  // ne = any
  411d60:	mov	w10, #0x1                   	// #1
  411d64:	eor	w9, w9, #0x1
  411d68:	eor	w9, w9, w10
  411d6c:	eor	w9, w9, w10
  411d70:	and	w9, w9, #0x1
  411d74:	mov	w0, w9
  411d78:	sxtw	x8, w0
  411d7c:	cbz	x8, 411da4 <clock_supported@plt+0xdaac>
  411d80:	mov	w8, wzr
  411d84:	mov	w0, w8
  411d88:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  411d8c:	add	x1, x1, #0x4b1
  411d90:	ldr	x2, [sp, #8]
  411d94:	mov	w3, #0x1c                  	// #28
  411d98:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  411d9c:	add	x4, x4, #0x4cf
  411da0:	bl	403958 <log_assert_failed_realm@plt>
  411da4:	ldr	x8, [sp, #24]
  411da8:	cmp	x8, #0x0
  411dac:	cset	w9, ne  // ne = any
  411db0:	mov	w10, #0x1                   	// #1
  411db4:	eor	w9, w9, #0x1
  411db8:	eor	w9, w9, w10
  411dbc:	eor	w9, w9, w10
  411dc0:	and	w9, w9, #0x1
  411dc4:	mov	w0, w9
  411dc8:	sxtw	x8, w0
  411dcc:	cbz	x8, 411df4 <clock_supported@plt+0xdafc>
  411dd0:	mov	w8, wzr
  411dd4:	mov	w0, w8
  411dd8:	adrp	x1, 414000 <clock_supported@plt+0xfd08>
  411ddc:	add	x1, x1, #0x503
  411de0:	ldr	x2, [sp, #8]
  411de4:	mov	w3, #0x1d                  	// #29
  411de8:	adrp	x4, 414000 <clock_supported@plt+0xfd08>
  411dec:	add	x4, x4, #0x4cf
  411df0:	bl	403958 <log_assert_failed_realm@plt>
  411df4:	ldur	x0, [x29, #-16]
  411df8:	ldr	x1, [sp, #24]
  411dfc:	ldr	x2, [sp, #16]
  411e00:	bl	403d48 <memcmp@plt>
  411e04:	stur	w0, [x29, #-4]
  411e08:	ldur	w0, [x29, #-4]
  411e0c:	ldp	x29, x30, [sp, #48]
  411e10:	add	sp, sp, #0x40
  411e14:	ret
  411e18:	sub	sp, sp, #0x40
  411e1c:	stp	x29, x30, [sp, #48]
  411e20:	add	x29, sp, #0x30
  411e24:	stur	x0, [x29, #-16]
  411e28:	str	x1, [sp, #24]
  411e2c:	ldur	x0, [x29, #-16]
  411e30:	ldr	x1, [sp, #24]
  411e34:	bl	411e94 <clock_supported@plt+0xdb9c>
  411e38:	tbnz	w0, #0, 411e40 <clock_supported@plt+0xdb48>
  411e3c:	b	411e4c <clock_supported@plt+0xdb54>
  411e40:	mov	x8, xzr
  411e44:	stur	x8, [x29, #-8]
  411e48:	b	411e84 <clock_supported@plt+0xdb8c>
  411e4c:	ldur	x8, [x29, #-16]
  411e50:	ldr	x9, [sp, #24]
  411e54:	mul	x8, x8, x9
  411e58:	str	x8, [sp, #16]
  411e5c:	cbz	x8, 411e6c <clock_supported@plt+0xdb74>
  411e60:	ldr	x8, [sp, #16]
  411e64:	str	x8, [sp, #8]
  411e68:	b	411e74 <clock_supported@plt+0xdb7c>
  411e6c:	mov	x8, #0x1                   	// #1
  411e70:	str	x8, [sp, #8]
  411e74:	ldr	x8, [sp, #8]
  411e78:	mov	x0, x8
  411e7c:	bl	404188 <malloc@plt>
  411e80:	stur	x0, [x29, #-8]
  411e84:	ldur	x0, [x29, #-8]
  411e88:	ldp	x29, x30, [sp, #48]
  411e8c:	add	sp, sp, #0x40
  411e90:	ret
  411e94:	sub	sp, sp, #0x20
  411e98:	str	x0, [sp, #24]
  411e9c:	str	x1, [sp, #16]
  411ea0:	ldr	x8, [sp, #16]
  411ea4:	mov	w9, #0x0                   	// #0
  411ea8:	str	w9, [sp, #12]
  411eac:	cbz	x8, 411ecc <clock_supported@plt+0xdbd4>
  411eb0:	ldr	x8, [sp, #24]
  411eb4:	ldr	x9, [sp, #16]
  411eb8:	mov	x10, #0xffffffffffffffff    	// #-1
  411ebc:	udiv	x9, x10, x9
  411ec0:	cmp	x8, x9
  411ec4:	cset	w11, hi  // hi = pmore
  411ec8:	str	w11, [sp, #12]
  411ecc:	ldr	w8, [sp, #12]
  411ed0:	mov	w9, #0x1                   	// #1
  411ed4:	eor	w8, w8, #0x1
  411ed8:	eor	w8, w8, w9
  411edc:	and	w8, w8, #0x1
  411ee0:	mov	w0, w8
  411ee4:	sxtw	x10, w0
  411ee8:	cmp	x10, #0x0
  411eec:	cset	w8, ne  // ne = any
  411ef0:	and	w0, w8, #0x1
  411ef4:	add	sp, sp, #0x20
  411ef8:	ret
  411efc:	sub	sp, sp, #0x10
  411f00:	str	x0, [sp, #8]
  411f04:	ldr	x8, [sp, #8]
  411f08:	cmp	x8, #0x0
  411f0c:	cset	w9, ls  // ls = plast
  411f10:	mov	w10, #0x0                   	// #0
  411f14:	str	w10, [sp, #4]
  411f18:	tbnz	w9, #0, 411f30 <clock_supported@plt+0xdc38>
  411f1c:	ldr	x8, [sp, #8]
  411f20:	mov	x9, #0xffffffffffffffff    	// #-1
  411f24:	cmp	x8, x9
  411f28:	cset	w10, ne  // ne = any
  411f2c:	str	w10, [sp, #4]
  411f30:	ldr	w8, [sp, #4]
  411f34:	and	w0, w8, #0x1
  411f38:	add	sp, sp, #0x10
  411f3c:	ret
  411f40:	stp	x29, x30, [sp, #-64]!
  411f44:	mov	x29, sp
  411f48:	stp	x19, x20, [sp, #16]
  411f4c:	adrp	x20, 42f000 <clock_supported@plt+0x2ad08>
  411f50:	add	x20, x20, #0x880
  411f54:	stp	x21, x22, [sp, #32]
  411f58:	adrp	x21, 42f000 <clock_supported@plt+0x2ad08>
  411f5c:	add	x21, x21, #0x878
  411f60:	sub	x20, x20, x21
  411f64:	mov	w22, w0
  411f68:	stp	x23, x24, [sp, #48]
  411f6c:	mov	x23, x1
  411f70:	mov	x24, x2
  411f74:	bl	403880 <__libc_start_main@plt-0x38>
  411f78:	cmp	xzr, x20, asr #3
  411f7c:	b.eq	411fa8 <clock_supported@plt+0xdcb0>  // b.none
  411f80:	asr	x20, x20, #3
  411f84:	mov	x19, #0x0                   	// #0
  411f88:	ldr	x3, [x21, x19, lsl #3]
  411f8c:	mov	x2, x24
  411f90:	add	x19, x19, #0x1
  411f94:	mov	x1, x23
  411f98:	mov	w0, w22
  411f9c:	blr	x3
  411fa0:	cmp	x20, x19
  411fa4:	b.ne	411f88 <clock_supported@plt+0xdc90>  // b.any
  411fa8:	ldp	x19, x20, [sp, #16]
  411fac:	ldp	x21, x22, [sp, #32]
  411fb0:	ldp	x23, x24, [sp, #48]
  411fb4:	ldp	x29, x30, [sp], #64
  411fb8:	ret
  411fbc:	nop
  411fc0:	ret

Disassembly of section .fini:

0000000000411fc4 <.fini>:
  411fc4:	stp	x29, x30, [sp, #-16]!
  411fc8:	mov	x29, sp
  411fcc:	ldp	x29, x30, [sp], #16
  411fd0:	ret
