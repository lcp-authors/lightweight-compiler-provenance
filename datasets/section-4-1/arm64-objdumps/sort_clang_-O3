
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402710 <.init>:
  402710:	stp	x29, x30, [sp, #-16]!
  402714:	mov	x29, sp
  402718:	bl	402ef0 <ferror@plt+0x60>
  40271c:	ldp	x29, x30, [sp], #16
  402720:	ret

Disassembly of section .plt:

0000000000402730 <mbrtowc@plt-0x20>:
  402730:	stp	x16, x30, [sp, #-16]!
  402734:	adrp	x16, 426000 <_obstack_memory_used@@Base+0x135ec>
  402738:	ldr	x17, [x16, #4088]
  40273c:	add	x16, x16, #0xff8
  402740:	br	x17
  402744:	nop
  402748:	nop
  40274c:	nop

0000000000402750 <mbrtowc@plt>:
  402750:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16]
  402758:	add	x16, x16, #0x0
  40275c:	br	x17

0000000000402760 <memcpy@plt>:
  402760:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #8]
  402768:	add	x16, x16, #0x8
  40276c:	br	x17

0000000000402770 <memmove@plt>:
  402770:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #16]
  402778:	add	x16, x16, #0x10
  40277c:	br	x17

0000000000402780 <pthread_sigmask@plt>:
  402780:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #24]
  402788:	add	x16, x16, #0x18
  40278c:	br	x17

0000000000402790 <_exit@plt>:
  402790:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #32]
  402798:	add	x16, x16, #0x20
  40279c:	br	x17

00000000004027a0 <fwrite_unlocked@plt>:
  4027a0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #40]
  4027a8:	add	x16, x16, #0x28
  4027ac:	br	x17

00000000004027b0 <strtoul@plt>:
  4027b0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #48]
  4027b8:	add	x16, x16, #0x30
  4027bc:	br	x17

00000000004027c0 <strlen@plt>:
  4027c0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #56]
  4027c8:	add	x16, x16, #0x38
  4027cc:	br	x17

00000000004027d0 <exit@plt>:
  4027d0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #64]
  4027d8:	add	x16, x16, #0x40
  4027dc:	br	x17

00000000004027e0 <raise@plt>:
  4027e0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #72]
  4027e8:	add	x16, x16, #0x48
  4027ec:	br	x17

00000000004027f0 <error@plt>:
  4027f0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #80]
  4027f8:	add	x16, x16, #0x50
  4027fc:	br	x17

0000000000402800 <sysinfo@plt>:
  402800:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #88]
  402808:	add	x16, x16, #0x58
  40280c:	br	x17

0000000000402810 <getuid@plt>:
  402810:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #96]
  402818:	add	x16, x16, #0x60
  40281c:	br	x17

0000000000402820 <pipe@plt>:
  402820:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #104]
  402828:	add	x16, x16, #0x68
  40282c:	br	x17

0000000000402830 <__cxa_atexit@plt>:
  402830:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #112]
  402838:	add	x16, x16, #0x70
  40283c:	br	x17

0000000000402840 <iswcntrl@plt>:
  402840:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #120]
  402848:	add	x16, x16, #0x78
  40284c:	br	x17

0000000000402850 <qsort@plt>:
  402850:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #128]
  402858:	add	x16, x16, #0x80
  40285c:	br	x17

0000000000402860 <setvbuf@plt>:
  402860:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #136]
  402868:	add	x16, x16, #0x88
  40286c:	br	x17

0000000000402870 <euidaccess@plt>:
  402870:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #144]
  402878:	add	x16, x16, #0x90
  40287c:	br	x17

0000000000402880 <fork@plt>:
  402880:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #152]
  402888:	add	x16, x16, #0x98
  40288c:	br	x17

0000000000402890 <lseek@plt>:
  402890:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #160]
  402898:	add	x16, x16, #0xa0
  40289c:	br	x17

00000000004028a0 <__fpending@plt>:
  4028a0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #168]
  4028a8:	add	x16, x16, #0xa8
  4028ac:	br	x17

00000000004028b0 <localeconv@plt>:
  4028b0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #176]
  4028b8:	add	x16, x16, #0xb0
  4028bc:	br	x17

00000000004028c0 <stpcpy@plt>:
  4028c0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #184]
  4028c8:	add	x16, x16, #0xb8
  4028cc:	br	x17

00000000004028d0 <fileno@plt>:
  4028d0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #192]
  4028d8:	add	x16, x16, #0xc0
  4028dc:	br	x17

00000000004028e0 <signal@plt>:
  4028e0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #200]
  4028e8:	add	x16, x16, #0xc8
  4028ec:	br	x17

00000000004028f0 <fclose@plt>:
  4028f0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #208]
  4028f8:	add	x16, x16, #0xd0
  4028fc:	br	x17

0000000000402900 <getpid@plt>:
  402900:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #216]
  402908:	add	x16, x16, #0xd8
  40290c:	br	x17

0000000000402910 <nl_langinfo@plt>:
  402910:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #224]
  402918:	add	x16, x16, #0xe0
  40291c:	br	x17

0000000000402920 <fopen@plt>:
  402920:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #232]
  402928:	add	x16, x16, #0xe8
  40292c:	br	x17

0000000000402930 <malloc@plt>:
  402930:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #240]
  402938:	add	x16, x16, #0xf0
  40293c:	br	x17

0000000000402940 <wcwidth@plt>:
  402940:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #248]
  402948:	add	x16, x16, #0xf8
  40294c:	br	x17

0000000000402950 <open@plt>:
  402950:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #256]
  402958:	add	x16, x16, #0x100
  40295c:	br	x17

0000000000402960 <getppid@plt>:
  402960:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #264]
  402968:	add	x16, x16, #0x108
  40296c:	br	x17

0000000000402970 <sigemptyset@plt>:
  402970:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #272]
  402978:	add	x16, x16, #0x110
  40297c:	br	x17

0000000000402980 <pthread_cond_signal@plt>:
  402980:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #280]
  402988:	add	x16, x16, #0x118
  40298c:	br	x17

0000000000402990 <strncmp@plt>:
  402990:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #288]
  402998:	add	x16, x16, #0x120
  40299c:	br	x17

00000000004029a0 <bindtextdomain@plt>:
  4029a0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #296]
  4029a8:	add	x16, x16, #0x128
  4029ac:	br	x17

00000000004029b0 <__libc_start_main@plt>:
  4029b0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #304]
  4029b8:	add	x16, x16, #0x130
  4029bc:	br	x17

00000000004029c0 <fgetc@plt>:
  4029c0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #312]
  4029c8:	add	x16, x16, #0x138
  4029cc:	br	x17

00000000004029d0 <__printf_chk@plt>:
  4029d0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #320]
  4029d8:	add	x16, x16, #0x140
  4029dc:	br	x17

00000000004029e0 <memset@plt>:
  4029e0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #328]
  4029e8:	add	x16, x16, #0x148
  4029ec:	br	x17

00000000004029f0 <fdopen@plt>:
  4029f0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #336]
  4029f8:	add	x16, x16, #0x150
  4029fc:	br	x17

0000000000402a00 <gettimeofday@plt>:
  402a00:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #344]
  402a08:	add	x16, x16, #0x158
  402a0c:	br	x17

0000000000402a10 <__strtoul_internal@plt>:
  402a10:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #352]
  402a18:	add	x16, x16, #0x160
  402a1c:	br	x17

0000000000402a20 <calloc@plt>:
  402a20:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #360]
  402a28:	add	x16, x16, #0x168
  402a2c:	br	x17

0000000000402a30 <bcmp@plt>:
  402a30:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #368]
  402a38:	add	x16, x16, #0x170
  402a3c:	br	x17

0000000000402a40 <realloc@plt>:
  402a40:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #376]
  402a48:	add	x16, x16, #0x178
  402a4c:	br	x17

0000000000402a50 <__ctype_toupper_loc@plt>:
  402a50:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #384]
  402a58:	add	x16, x16, #0x180
  402a5c:	br	x17

0000000000402a60 <pthread_mutex_init@plt>:
  402a60:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #392]
  402a68:	add	x16, x16, #0x188
  402a6c:	br	x17

0000000000402a70 <close@plt>:
  402a70:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #400]
  402a78:	add	x16, x16, #0x190
  402a7c:	br	x17

0000000000402a80 <sigaction@plt>:
  402a80:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #408]
  402a88:	add	x16, x16, #0x198
  402a8c:	br	x17

0000000000402a90 <strrchr@plt>:
  402a90:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #416]
  402a98:	add	x16, x16, #0x1a0
  402a9c:	br	x17

0000000000402aa0 <pthread_create@plt>:
  402aa0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #424]
  402aa8:	add	x16, x16, #0x1a8
  402aac:	br	x17

0000000000402ab0 <__gmon_start__@plt>:
  402ab0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #432]
  402ab8:	add	x16, x16, #0x1b0
  402abc:	br	x17

0000000000402ac0 <write@plt>:
  402ac0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #440]
  402ac8:	add	x16, x16, #0x1b8
  402acc:	br	x17

0000000000402ad0 <pthread_join@plt>:
  402ad0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #448]
  402ad8:	add	x16, x16, #0x1c0
  402adc:	br	x17

0000000000402ae0 <abort@plt>:
  402ae0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #456]
  402ae8:	add	x16, x16, #0x1c8
  402aec:	br	x17

0000000000402af0 <mkostemp@plt>:
  402af0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #464]
  402af8:	add	x16, x16, #0x1d0
  402afc:	br	x17

0000000000402b00 <sched_getaffinity@plt>:
  402b00:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #472]
  402b08:	add	x16, x16, #0x1d8
  402b0c:	br	x17

0000000000402b10 <posix_fadvise@plt>:
  402b10:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #480]
  402b18:	add	x16, x16, #0x1e0
  402b1c:	br	x17

0000000000402b20 <mbsinit@plt>:
  402b20:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #488]
  402b28:	add	x16, x16, #0x1e8
  402b2c:	br	x17

0000000000402b30 <__overflow@plt>:
  402b30:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #496]
  402b38:	add	x16, x16, #0x1f0
  402b3c:	br	x17

0000000000402b40 <pipe2@plt>:
  402b40:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #504]
  402b48:	add	x16, x16, #0x1f8
  402b4c:	br	x17

0000000000402b50 <fread_unlocked@plt>:
  402b50:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #512]
  402b58:	add	x16, x16, #0x200
  402b5c:	br	x17

0000000000402b60 <memcmp@plt>:
  402b60:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #520]
  402b68:	add	x16, x16, #0x208
  402b6c:	br	x17

0000000000402b70 <textdomain@plt>:
  402b70:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #528]
  402b78:	add	x16, x16, #0x210
  402b7c:	br	x17

0000000000402b80 <getopt_long@plt>:
  402b80:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #536]
  402b88:	add	x16, x16, #0x218
  402b8c:	br	x17

0000000000402b90 <__fprintf_chk@plt>:
  402b90:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #544]
  402b98:	add	x16, x16, #0x220
  402b9c:	br	x17

0000000000402ba0 <sigismember@plt>:
  402ba0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #552]
  402ba8:	add	x16, x16, #0x228
  402bac:	br	x17

0000000000402bb0 <strcmp@plt>:
  402bb0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #560]
  402bb8:	add	x16, x16, #0x230
  402bbc:	br	x17

0000000000402bc0 <__ctype_b_loc@plt>:
  402bc0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #568]
  402bc8:	add	x16, x16, #0x238
  402bcc:	br	x17

0000000000402bd0 <strtol@plt>:
  402bd0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #576]
  402bd8:	add	x16, x16, #0x240
  402bdc:	br	x17

0000000000402be0 <fseeko@plt>:
  402be0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #584]
  402be8:	add	x16, x16, #0x248
  402bec:	br	x17

0000000000402bf0 <strtold@plt>:
  402bf0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #592]
  402bf8:	add	x16, x16, #0x250
  402bfc:	br	x17

0000000000402c00 <free@plt>:
  402c00:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #600]
  402c08:	add	x16, x16, #0x258
  402c0c:	br	x17

0000000000402c10 <__ctype_get_mb_cur_max@plt>:
  402c10:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #608]
  402c18:	add	x16, x16, #0x260
  402c1c:	br	x17

0000000000402c20 <getgid@plt>:
  402c20:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #616]
  402c28:	add	x16, x16, #0x268
  402c2c:	br	x17

0000000000402c30 <pthread_cond_wait@plt>:
  402c30:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #624]
  402c38:	add	x16, x16, #0x270
  402c3c:	br	x17

0000000000402c40 <nanosleep@plt>:
  402c40:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #632]
  402c48:	add	x16, x16, #0x278
  402c4c:	br	x17

0000000000402c50 <__stpcpy_chk@plt>:
  402c50:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #640]
  402c58:	add	x16, x16, #0x280
  402c5c:	br	x17

0000000000402c60 <strchr@plt>:
  402c60:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #648]
  402c68:	add	x16, x16, #0x288
  402c6c:	br	x17

0000000000402c70 <fwrite@plt>:
  402c70:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #656]
  402c78:	add	x16, x16, #0x290
  402c7c:	br	x17

0000000000402c80 <fflush_unlocked@plt>:
  402c80:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #664]
  402c88:	add	x16, x16, #0x298
  402c8c:	br	x17

0000000000402c90 <__sched_cpucount@plt>:
  402c90:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #672]
  402c98:	add	x16, x16, #0x2a0
  402c9c:	br	x17

0000000000402ca0 <fcntl@plt>:
  402ca0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #680]
  402ca8:	add	x16, x16, #0x2a8
  402cac:	br	x17

0000000000402cb0 <strxfrm@plt>:
  402cb0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #688]
  402cb8:	add	x16, x16, #0x2b0
  402cbc:	br	x17

0000000000402cc0 <dcngettext@plt>:
  402cc0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #696]
  402cc8:	add	x16, x16, #0x2b8
  402ccc:	br	x17

0000000000402cd0 <fflush@plt>:
  402cd0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #704]
  402cd8:	add	x16, x16, #0x2c0
  402cdc:	br	x17

0000000000402ce0 <pthread_cond_init@plt>:
  402ce0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #712]
  402ce8:	add	x16, x16, #0x2c8
  402cec:	br	x17

0000000000402cf0 <getrlimit@plt>:
  402cf0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #720]
  402cf8:	add	x16, x16, #0x2d0
  402cfc:	br	x17

0000000000402d00 <clearerr_unlocked@plt>:
  402d00:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #728]
  402d08:	add	x16, x16, #0x2d8
  402d0c:	br	x17

0000000000402d10 <__explicit_bzero_chk@plt>:
  402d10:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #736]
  402d18:	add	x16, x16, #0x2e0
  402d1c:	br	x17

0000000000402d20 <read@plt>:
  402d20:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #744]
  402d28:	add	x16, x16, #0x2e8
  402d2c:	br	x17

0000000000402d30 <memchr@plt>:
  402d30:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #752]
  402d38:	add	x16, x16, #0x2f0
  402d3c:	br	x17

0000000000402d40 <mkstemp@plt>:
  402d40:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #760]
  402d48:	add	x16, x16, #0x2f8
  402d4c:	br	x17

0000000000402d50 <sysconf@plt>:
  402d50:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #768]
  402d58:	add	x16, x16, #0x300
  402d5c:	br	x17

0000000000402d60 <__fxstat@plt>:
  402d60:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #776]
  402d68:	add	x16, x16, #0x308
  402d6c:	br	x17

0000000000402d70 <dcgettext@plt>:
  402d70:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #784]
  402d78:	add	x16, x16, #0x310
  402d7c:	br	x17

0000000000402d80 <fputs_unlocked@plt>:
  402d80:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #792]
  402d88:	add	x16, x16, #0x318
  402d8c:	br	x17

0000000000402d90 <strcoll@plt>:
  402d90:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #800]
  402d98:	add	x16, x16, #0x320
  402d9c:	br	x17

0000000000402da0 <__freading@plt>:
  402da0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #808]
  402da8:	add	x16, x16, #0x328
  402dac:	br	x17

0000000000402db0 <ftruncate@plt>:
  402db0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #816]
  402db8:	add	x16, x16, #0x330
  402dbc:	br	x17

0000000000402dc0 <dup2@plt>:
  402dc0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #824]
  402dc8:	add	x16, x16, #0x338
  402dcc:	br	x17

0000000000402dd0 <sigaddset@plt>:
  402dd0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #832]
  402dd8:	add	x16, x16, #0x340
  402ddc:	br	x17

0000000000402de0 <iswprint@plt>:
  402de0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #840]
  402de8:	add	x16, x16, #0x348
  402dec:	br	x17

0000000000402df0 <__assert_fail@plt>:
  402df0:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #848]
  402df8:	add	x16, x16, #0x350
  402dfc:	br	x17

0000000000402e00 <__errno_location@plt>:
  402e00:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #856]
  402e08:	add	x16, x16, #0x358
  402e0c:	br	x17

0000000000402e10 <execlp@plt>:
  402e10:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #864]
  402e18:	add	x16, x16, #0x360
  402e1c:	br	x17

0000000000402e20 <getenv@plt>:
  402e20:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #872]
  402e28:	add	x16, x16, #0x368
  402e2c:	br	x17

0000000000402e30 <__xstat@plt>:
  402e30:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #880]
  402e38:	add	x16, x16, #0x370
  402e3c:	br	x17

0000000000402e40 <pthread_mutex_lock@plt>:
  402e40:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #888]
  402e48:	add	x16, x16, #0x378
  402e4c:	br	x17

0000000000402e50 <pthread_mutex_unlock@plt>:
  402e50:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #896]
  402e58:	add	x16, x16, #0x380
  402e5c:	br	x17

0000000000402e60 <waitpid@plt>:
  402e60:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #904]
  402e68:	add	x16, x16, #0x388
  402e6c:	br	x17

0000000000402e70 <unlink@plt>:
  402e70:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #912]
  402e78:	add	x16, x16, #0x390
  402e7c:	br	x17

0000000000402e80 <setlocale@plt>:
  402e80:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #920]
  402e88:	add	x16, x16, #0x398
  402e8c:	br	x17

0000000000402e90 <ferror@plt>:
  402e90:	adrp	x16, 427000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #928]
  402e98:	add	x16, x16, #0x3a0
  402e9c:	br	x17

Disassembly of section .text:

0000000000402ea0 <_obstack_begin@@Base-0xf7fc>:
  402ea0:	mov	x29, #0x0                   	// #0
  402ea4:	mov	x30, #0x0                   	// #0
  402ea8:	mov	x5, x0
  402eac:	ldr	x1, [sp]
  402eb0:	add	x2, sp, #0x8
  402eb4:	mov	x6, sp
  402eb8:	movz	x0, #0x0, lsl #48
  402ebc:	movk	x0, #0x0, lsl #32
  402ec0:	movk	x0, #0x40, lsl #16
  402ec4:	movk	x0, #0x33cc
  402ec8:	movz	x3, #0x0, lsl #48
  402ecc:	movk	x3, #0x0, lsl #32
  402ed0:	movk	x3, #0x41, lsl #16
  402ed4:	movk	x3, #0x3558
  402ed8:	movz	x4, #0x0, lsl #48
  402edc:	movk	x4, #0x0, lsl #32
  402ee0:	movk	x4, #0x41, lsl #16
  402ee4:	movk	x4, #0x35d8
  402ee8:	bl	4029b0 <__libc_start_main@plt>
  402eec:	bl	402ae0 <abort@plt>
  402ef0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x135ec>
  402ef4:	ldr	x0, [x0, #4064]
  402ef8:	cbz	x0, 402f00 <ferror@plt+0x70>
  402efc:	b	402ab0 <__gmon_start__@plt>
  402f00:	ret
  402f04:	nop
  402f08:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  402f0c:	add	x0, x0, #0x520
  402f10:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  402f14:	add	x1, x1, #0x520
  402f18:	cmp	x1, x0
  402f1c:	b.eq	402f34 <ferror@plt+0xa4>  // b.none
  402f20:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x5ec>
  402f24:	ldr	x1, [x1, #1544]
  402f28:	cbz	x1, 402f34 <ferror@plt+0xa4>
  402f2c:	mov	x16, x1
  402f30:	br	x16
  402f34:	ret
  402f38:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  402f3c:	add	x0, x0, #0x520
  402f40:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  402f44:	add	x1, x1, #0x520
  402f48:	sub	x1, x1, x0
  402f4c:	lsr	x2, x1, #63
  402f50:	add	x1, x2, x1, asr #3
  402f54:	cmp	xzr, x1, asr #1
  402f58:	asr	x1, x1, #1
  402f5c:	b.eq	402f74 <ferror@plt+0xe4>  // b.none
  402f60:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x5ec>
  402f64:	ldr	x2, [x2, #1552]
  402f68:	cbz	x2, 402f74 <ferror@plt+0xe4>
  402f6c:	mov	x16, x2
  402f70:	br	x16
  402f74:	ret
  402f78:	stp	x29, x30, [sp, #-32]!
  402f7c:	mov	x29, sp
  402f80:	str	x19, [sp, #16]
  402f84:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  402f88:	ldrb	w0, [x19, #1368]
  402f8c:	cbnz	w0, 402f9c <ferror@plt+0x10c>
  402f90:	bl	402f08 <ferror@plt+0x78>
  402f94:	mov	w0, #0x1                   	// #1
  402f98:	strb	w0, [x19, #1368]
  402f9c:	ldr	x19, [sp, #16]
  402fa0:	ldp	x29, x30, [sp], #32
  402fa4:	ret
  402fa8:	b	402f38 <ferror@plt+0xa8>
  402fac:	sub	sp, sp, #0xa0
  402fb0:	stp	x20, x19, [sp, #144]
  402fb4:	mov	w19, w0
  402fb8:	stp	x29, x30, [sp, #112]
  402fbc:	stp	x22, x21, [sp, #128]
  402fc0:	add	x29, sp, #0x70
  402fc4:	cbnz	w0, 403390 <ferror@plt+0x500>
  402fc8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  402fcc:	add	x1, x1, #0x6b
  402fd0:	mov	w2, #0x5                   	// #5
  402fd4:	mov	x0, xzr
  402fd8:	bl	402d70 <dcgettext@plt>
  402fdc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  402fe0:	ldr	x2, [x8, #2984]
  402fe4:	mov	x1, x0
  402fe8:	mov	w0, #0x1                   	// #1
  402fec:	mov	x3, x2
  402ff0:	bl	4029d0 <__printf_chk@plt>
  402ff4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  402ff8:	add	x1, x1, #0xb2
  402ffc:	mov	w2, #0x5                   	// #5
  403000:	mov	x0, xzr
  403004:	bl	402d70 <dcgettext@plt>
  403008:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  40300c:	ldr	x1, [x22, #1344]
  403010:	bl	402d80 <fputs_unlocked@plt>
  403014:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403018:	add	x1, x1, #0x282
  40301c:	mov	w2, #0x5                   	// #5
  403020:	mov	x0, xzr
  403024:	bl	402d70 <dcgettext@plt>
  403028:	ldr	x1, [x22, #1344]
  40302c:	bl	402d80 <fputs_unlocked@plt>
  403030:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403034:	add	x1, x1, #0x2ba
  403038:	mov	w2, #0x5                   	// #5
  40303c:	mov	x0, xzr
  403040:	bl	402d70 <dcgettext@plt>
  403044:	ldr	x1, [x22, #1344]
  403048:	bl	402d80 <fputs_unlocked@plt>
  40304c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403050:	add	x1, x1, #0xf1
  403054:	mov	w2, #0x5                   	// #5
  403058:	mov	x0, xzr
  40305c:	bl	402d70 <dcgettext@plt>
  403060:	ldr	x1, [x22, #1344]
  403064:	bl	402d80 <fputs_unlocked@plt>
  403068:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  40306c:	add	x1, x1, #0x105
  403070:	mov	w2, #0x5                   	// #5
  403074:	mov	x0, xzr
  403078:	bl	402d70 <dcgettext@plt>
  40307c:	ldr	x1, [x22, #1344]
  403080:	bl	402d80 <fputs_unlocked@plt>
  403084:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403088:	add	x1, x1, #0x1d1
  40308c:	mov	w2, #0x5                   	// #5
  403090:	mov	x0, xzr
  403094:	bl	402d70 <dcgettext@plt>
  403098:	ldr	x1, [x22, #1344]
  40309c:	bl	402d80 <fputs_unlocked@plt>
  4030a0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4030a4:	add	x1, x1, #0x2a4
  4030a8:	mov	w2, #0x5                   	// #5
  4030ac:	mov	x0, xzr
  4030b0:	bl	402d70 <dcgettext@plt>
  4030b4:	ldr	x1, [x22, #1344]
  4030b8:	bl	402d80 <fputs_unlocked@plt>
  4030bc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4030c0:	add	x1, x1, #0x2f0
  4030c4:	mov	w2, #0x5                   	// #5
  4030c8:	mov	x0, xzr
  4030cc:	bl	402d70 <dcgettext@plt>
  4030d0:	ldr	x1, [x22, #1344]
  4030d4:	bl	402d80 <fputs_unlocked@plt>
  4030d8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4030dc:	add	x1, x1, #0x402
  4030e0:	mov	w2, #0x5                   	// #5
  4030e4:	mov	x0, xzr
  4030e8:	bl	402d70 <dcgettext@plt>
  4030ec:	ldr	x1, [x22, #1344]
  4030f0:	bl	402d80 <fputs_unlocked@plt>
  4030f4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4030f8:	add	x1, x1, #0x518
  4030fc:	mov	w2, #0x5                   	// #5
  403100:	mov	x0, xzr
  403104:	bl	402d70 <dcgettext@plt>
  403108:	ldr	x1, [x22, #1344]
  40310c:	bl	402d80 <fputs_unlocked@plt>
  403110:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403114:	add	x1, x1, #0x529
  403118:	mov	w2, #0x5                   	// #5
  40311c:	mov	x0, xzr
  403120:	bl	402d70 <dcgettext@plt>
  403124:	ldr	x1, [x22, #1344]
  403128:	bl	402d80 <fputs_unlocked@plt>
  40312c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403130:	add	x1, x1, #0x59f
  403134:	mov	w2, #0x5                   	// #5
  403138:	mov	x0, xzr
  40313c:	bl	402d70 <dcgettext@plt>
  403140:	ldr	x1, [x22, #1344]
  403144:	bl	402d80 <fputs_unlocked@plt>
  403148:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  40314c:	add	x1, x1, #0x6b4
  403150:	mov	w2, #0x5                   	// #5
  403154:	mov	x0, xzr
  403158:	bl	402d70 <dcgettext@plt>
  40315c:	ldr	x1, [x22, #1344]
  403160:	bl	402d80 <fputs_unlocked@plt>
  403164:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403168:	add	x1, x1, #0x810
  40316c:	mov	w2, #0x5                   	// #5
  403170:	mov	x0, xzr
  403174:	bl	402d70 <dcgettext@plt>
  403178:	ldr	x1, [x22, #1344]
  40317c:	bl	402d80 <fputs_unlocked@plt>
  403180:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403184:	add	x1, x1, #0x8a0
  403188:	mov	w2, #0x5                   	// #5
  40318c:	mov	x0, xzr
  403190:	bl	402d70 <dcgettext@plt>
  403194:	ldr	x1, [x22, #1344]
  403198:	bl	402d80 <fputs_unlocked@plt>
  40319c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4031a0:	add	x1, x1, #0x978
  4031a4:	mov	w2, #0x5                   	// #5
  4031a8:	mov	x0, xzr
  4031ac:	bl	402d70 <dcgettext@plt>
  4031b0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  4031b4:	mov	x1, x0
  4031b8:	add	x2, x2, #0xb3d
  4031bc:	mov	w0, #0x1                   	// #1
  4031c0:	bl	4029d0 <__printf_chk@plt>
  4031c4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4031c8:	add	x1, x1, #0xb42
  4031cc:	mov	w2, #0x5                   	// #5
  4031d0:	mov	x0, xzr
  4031d4:	bl	402d70 <dcgettext@plt>
  4031d8:	ldr	x1, [x22, #1344]
  4031dc:	bl	402d80 <fputs_unlocked@plt>
  4031e0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4031e4:	add	x1, x1, #0xb82
  4031e8:	mov	w2, #0x5                   	// #5
  4031ec:	mov	x0, xzr
  4031f0:	bl	402d70 <dcgettext@plt>
  4031f4:	ldr	x1, [x22, #1344]
  4031f8:	bl	402d80 <fputs_unlocked@plt>
  4031fc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403200:	add	x1, x1, #0xbaf
  403204:	mov	w2, #0x5                   	// #5
  403208:	mov	x0, xzr
  40320c:	bl	402d70 <dcgettext@plt>
  403210:	ldr	x1, [x22, #1344]
  403214:	bl	402d80 <fputs_unlocked@plt>
  403218:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  40321c:	add	x1, x1, #0xbe5
  403220:	mov	w2, #0x5                   	// #5
  403224:	mov	x0, xzr
  403228:	bl	402d70 <dcgettext@plt>
  40322c:	ldr	x1, [x22, #1344]
  403230:	bl	402d80 <fputs_unlocked@plt>
  403234:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403238:	add	x1, x1, #0xe41
  40323c:	mov	w2, #0x5                   	// #5
  403240:	mov	x0, xzr
  403244:	bl	402d70 <dcgettext@plt>
  403248:	ldr	x1, [x22, #1344]
  40324c:	bl	402d80 <fputs_unlocked@plt>
  403250:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x5ec>
  403254:	add	x8, x8, #0xec8
  403258:	ldp	q0, q1, [x8, #48]
  40325c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403260:	adrp	x20, 414000 <_obstack_memory_used@@Base+0x15ec>
  403264:	add	x1, x1, #0x305
  403268:	str	q0, [sp, #48]
  40326c:	ldp	q2, q0, [x8, #80]
  403270:	mov	x21, sp
  403274:	add	x20, x20, #0xfbc
  403278:	stp	q1, q2, [sp, #64]
  40327c:	ldr	q1, [x8]
  403280:	str	q0, [sp, #96]
  403284:	ldp	q0, q3, [x8, #16]
  403288:	stp	q1, q0, [sp]
  40328c:	str	q3, [sp, #32]
  403290:	mov	x0, x20
  403294:	bl	402bb0 <strcmp@plt>
  403298:	cbz	w0, 4032a4 <ferror@plt+0x414>
  40329c:	ldr	x1, [x21, #16]!
  4032a0:	cbnz	x1, 403290 <ferror@plt+0x400>
  4032a4:	ldr	x8, [x21, #8]
  4032a8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4032ac:	add	x1, x1, #0x364
  4032b0:	mov	w2, #0x5                   	// #5
  4032b4:	cmp	x8, #0x0
  4032b8:	mov	x0, xzr
  4032bc:	csel	x21, x20, x8, eq  // eq = none
  4032c0:	bl	402d70 <dcgettext@plt>
  4032c4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  4032c8:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x25ec>
  4032cc:	mov	x1, x0
  4032d0:	add	x2, x2, #0xce
  4032d4:	add	x3, x3, #0x37b
  4032d8:	mov	w0, #0x1                   	// #1
  4032dc:	bl	4029d0 <__printf_chk@plt>
  4032e0:	mov	w0, #0x5                   	// #5
  4032e4:	mov	x1, xzr
  4032e8:	bl	402e80 <setlocale@plt>
  4032ec:	cbz	x0, 403320 <ferror@plt+0x490>
  4032f0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4032f4:	add	x1, x1, #0x3a3
  4032f8:	mov	w2, #0x3                   	// #3
  4032fc:	bl	402990 <strncmp@plt>
  403300:	cbz	w0, 403320 <ferror@plt+0x490>
  403304:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403308:	add	x1, x1, #0x3a7
  40330c:	mov	w2, #0x5                   	// #5
  403310:	mov	x0, xzr
  403314:	bl	402d70 <dcgettext@plt>
  403318:	ldr	x1, [x22, #1344]
  40331c:	bl	402d80 <fputs_unlocked@plt>
  403320:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403324:	add	x1, x1, #0x3ee
  403328:	mov	w2, #0x5                   	// #5
  40332c:	mov	x0, xzr
  403330:	bl	402d70 <dcgettext@plt>
  403334:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  403338:	mov	x1, x0
  40333c:	add	x2, x2, #0x37b
  403340:	mov	w0, #0x1                   	// #1
  403344:	mov	x3, x20
  403348:	bl	4029d0 <__printf_chk@plt>
  40334c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403350:	add	x1, x1, #0x409
  403354:	mov	w2, #0x5                   	// #5
  403358:	mov	x0, xzr
  40335c:	bl	402d70 <dcgettext@plt>
  403360:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  403364:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  403368:	add	x8, x8, #0xfb8
  40336c:	add	x9, x9, #0x321
  403370:	cmp	x21, x20
  403374:	mov	x1, x0
  403378:	csel	x3, x9, x8, eq  // eq = none
  40337c:	mov	w0, #0x1                   	// #1
  403380:	mov	x2, x21
  403384:	bl	4029d0 <__printf_chk@plt>
  403388:	mov	w0, w19
  40338c:	bl	4027d0 <exit@plt>
  403390:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403394:	ldr	x20, [x8, #1320]
  403398:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  40339c:	add	x1, x1, #0x44
  4033a0:	mov	w2, #0x5                   	// #5
  4033a4:	mov	x0, xzr
  4033a8:	bl	402d70 <dcgettext@plt>
  4033ac:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4033b0:	ldr	x3, [x8, #2984]
  4033b4:	mov	x2, x0
  4033b8:	mov	w1, #0x1                   	// #1
  4033bc:	mov	x0, x20
  4033c0:	bl	402b90 <__fprintf_chk@plt>
  4033c4:	mov	w0, w19
  4033c8:	bl	4027d0 <exit@plt>
  4033cc:	str	d10, [sp, #-128]!
  4033d0:	stp	d9, d8, [sp, #16]
  4033d4:	stp	x29, x30, [sp, #32]
  4033d8:	stp	x28, x27, [sp, #48]
  4033dc:	stp	x26, x25, [sp, #64]
  4033e0:	stp	x24, x23, [sp, #80]
  4033e4:	stp	x22, x21, [sp, #96]
  4033e8:	stp	x20, x19, [sp, #112]
  4033ec:	mov	x29, sp
  4033f0:	sub	sp, sp, #0x320
  4033f4:	mov	w25, w0
  4033f8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x15ec>
  4033fc:	add	x0, x0, #0xf26
  403400:	mov	x24, x1
  403404:	bl	402e20 <getenv@plt>
  403408:	mov	x26, x0
  40340c:	bl	40dec4 <ferror@plt+0xb034>
  403410:	mov	w9, #0xf250                	// #62032
  403414:	ldr	x8, [x24]
  403418:	movk	w9, #0xfffc, lsl #16
  40341c:	add	w9, w0, w9
  403420:	cmp	w9, #0x2b8
  403424:	cset	w9, hi  // hi = pmore
  403428:	mov	x0, x8
  40342c:	str	w9, [x29, #8]
  403430:	bl	40df5c <ferror@plt+0xb0cc>
  403434:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403438:	add	x1, x1, #0xfb8
  40343c:	mov	w0, #0x6                   	// #6
  403440:	bl	402e80 <setlocale@plt>
  403444:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x25ec>
  403448:	add	x19, x19, #0xd2
  40344c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  403450:	str	x0, [sp, #112]
  403454:	add	x1, x1, #0xf36
  403458:	mov	x0, x19
  40345c:	bl	4029a0 <bindtextdomain@plt>
  403460:	mov	x0, x19
  403464:	bl	402b70 <textdomain@plt>
  403468:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40346c:	mov	w9, #0x2                   	// #2
  403470:	mov	w0, #0x3                   	// #3
  403474:	str	w9, [x8, #1208]
  403478:	bl	40c12c <ferror@plt+0x929c>
  40347c:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  403480:	and	w8, w0, #0x1
  403484:	add	x22, x22, #0x560
  403488:	mov	w0, #0x2                   	// #2
  40348c:	strb	w8, [x22]
  403490:	bl	40c12c <ferror@plt+0x929c>
  403494:	and	w8, w0, #0x1
  403498:	strb	w8, [x22, #4]
  40349c:	bl	4028b0 <localeconv@plt>
  4034a0:	ldr	x8, [x0]
  4034a4:	ldrb	w9, [x8]
  4034a8:	str	w9, [x22, #16]
  4034ac:	cbz	w9, 4034b8 <ferror@plt+0x628>
  4034b0:	ldrb	w8, [x8, #1]
  4034b4:	cbz	w8, 4034c4 <ferror@plt+0x634>
  4034b8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4034bc:	mov	w9, #0x2e                  	// #46
  4034c0:	str	w9, [x8, #1392]
  4034c4:	ldr	x9, [x0, #8]
  4034c8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4034cc:	ldrb	w10, [x9]
  4034d0:	str	w10, [x8, #1396]
  4034d4:	cbz	w10, 4034e0 <ferror@plt+0x650>
  4034d8:	ldrb	w9, [x9, #1]
  4034dc:	cbz	w9, 4034e8 <ferror@plt+0x658>
  4034e0:	mov	w9, #0xffffffff            	// #-1
  4034e4:	str	w9, [x8, #1396]
  4034e8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4034ec:	strb	wzr, [x8, #1381]
  4034f0:	bl	402bc0 <__ctype_b_loc@plt>
  4034f4:	mov	x19, x0
  4034f8:	bl	402a50 <__ctype_toupper_loc@plt>
  4034fc:	mov	x8, xzr
  403500:	mov	w9, #0x1                   	// #1
  403504:	ldr	x10, [x19]
  403508:	add	x11, x22, x8
  40350c:	ldrh	w10, [x10, x8, lsl #1]
  403510:	tst	w10, #0x1
  403514:	bic	w13, w9, w10, lsr #14
  403518:	cset	w14, eq  // eq = none
  40351c:	cmp	x8, #0xa
  403520:	and	w12, w10, #0x1
  403524:	strb	w13, [x11, #812]
  403528:	cset	w13, ne  // ne = any
  40352c:	cset	w15, eq  // eq = none
  403530:	tst	w10, #0x8
  403534:	orr	w10, w12, w15
  403538:	cset	w12, eq  // eq = none
  40353c:	and	w13, w13, w14
  403540:	strb	w10, [x11, #556]
  403544:	and	w10, w12, w13
  403548:	strb	w10, [x11, #1068]
  40354c:	ldr	x10, [x0]
  403550:	ldr	w10, [x10, x8, lsl #2]
  403554:	add	x8, x8, #0x1
  403558:	cmp	x8, #0x100
  40355c:	strb	w10, [x11, #1324]
  403560:	b.ne	403504 <ferror@plt+0x674>  // b.any
  403564:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403568:	ldrb	w8, [x8, #1380]
  40356c:	cbz	w8, 40361c <ferror@plt+0x78c>
  403570:	mov	w27, #0xe                   	// #14
  403574:	adrp	x28, 427000 <_obstack_memory_used@@Base+0x145ec>
  403578:	mov	x23, xzr
  40357c:	movk	w27, #0x2, lsl #16
  403580:	add	x28, x28, #0x3c0
  403584:	b	403594 <ferror@plt+0x704>
  403588:	cmp	x23, #0xc
  40358c:	strb	wzr, [x0, x8]
  403590:	b.eq	403600 <ferror@plt+0x770>  // b.none
  403594:	add	w0, w23, w27
  403598:	bl	402910 <nl_langinfo@plt>
  40359c:	mov	x20, x0
  4035a0:	bl	4027c0 <strlen@plt>
  4035a4:	mov	x21, x0
  4035a8:	add	x0, x0, #0x1
  4035ac:	bl	4112fc <ferror@plt+0xe46c>
  4035b0:	add	x8, x28, x23, lsl #4
  4035b4:	add	x23, x23, #0x1
  4035b8:	str	x0, [x8, #40]
  4035bc:	str	w23, [x8, #48]
  4035c0:	mov	x8, xzr
  4035c4:	cbnz	x21, 4035d8 <ferror@plt+0x748>
  4035c8:	b	403588 <ferror@plt+0x6f8>
  4035cc:	subs	x21, x21, #0x1
  4035d0:	add	x20, x20, #0x1
  4035d4:	b.eq	403588 <ferror@plt+0x6f8>  // b.none
  4035d8:	ldr	x10, [x19]
  4035dc:	ldrb	w9, [x20]
  4035e0:	ldrh	w10, [x10, x9, lsl #1]
  4035e4:	tbnz	w10, #0, 4035cc <ferror@plt+0x73c>
  4035e8:	add	x9, x22, x9
  4035ec:	ldrb	w9, [x9, #1324]
  4035f0:	add	x10, x8, #0x1
  4035f4:	strb	w9, [x0, x8]
  4035f8:	mov	x8, x10
  4035fc:	b	4035cc <ferror@plt+0x73c>
  403600:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403604:	adrp	x3, 406000 <ferror@plt+0x3170>
  403608:	add	x0, x0, #0x3e8
  40360c:	add	x3, x3, #0xcb8
  403610:	mov	w1, #0xc                   	// #12
  403614:	mov	w2, #0x10                  	// #16
  403618:	bl	402850 <qsort@plt>
  40361c:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  403620:	add	x19, x19, #0x5f0
  403624:	mov	x0, x19
  403628:	bl	402970 <sigemptyset@plt>
  40362c:	add	x2, sp, #0x88
  403630:	mov	w0, #0xe                   	// #14
  403634:	mov	x1, xzr
  403638:	bl	402a80 <sigaction@plt>
  40363c:	ldr	x8, [sp, #136]
  403640:	cmp	x8, #0x1
  403644:	b.eq	403658 <ferror@plt+0x7c8>  // b.none
  403648:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  40364c:	add	x0, x0, #0x5f0
  403650:	mov	w1, #0xe                   	// #14
  403654:	bl	402dd0 <sigaddset@plt>
  403658:	add	x2, sp, #0x88
  40365c:	mov	w0, #0x1                   	// #1
  403660:	mov	x1, xzr
  403664:	bl	402a80 <sigaction@plt>
  403668:	ldr	x8, [sp, #136]
  40366c:	cmp	x8, #0x1
  403670:	b.eq	403684 <ferror@plt+0x7f4>  // b.none
  403674:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403678:	add	x0, x0, #0x5f0
  40367c:	mov	w1, #0x1                   	// #1
  403680:	bl	402dd0 <sigaddset@plt>
  403684:	add	x2, sp, #0x88
  403688:	mov	w0, #0x2                   	// #2
  40368c:	mov	x1, xzr
  403690:	bl	402a80 <sigaction@plt>
  403694:	ldr	x8, [sp, #136]
  403698:	cmp	x8, #0x1
  40369c:	b.eq	4036b0 <ferror@plt+0x820>  // b.none
  4036a0:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4036a4:	add	x0, x0, #0x5f0
  4036a8:	mov	w1, #0x2                   	// #2
  4036ac:	bl	402dd0 <sigaddset@plt>
  4036b0:	add	x2, sp, #0x88
  4036b4:	mov	w0, #0xd                   	// #13
  4036b8:	mov	x1, xzr
  4036bc:	bl	402a80 <sigaction@plt>
  4036c0:	ldr	x8, [sp, #136]
  4036c4:	cmp	x8, #0x1
  4036c8:	b.eq	4036dc <ferror@plt+0x84c>  // b.none
  4036cc:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4036d0:	add	x0, x0, #0x5f0
  4036d4:	mov	w1, #0xd                   	// #13
  4036d8:	bl	402dd0 <sigaddset@plt>
  4036dc:	add	x2, sp, #0x88
  4036e0:	mov	w0, #0x3                   	// #3
  4036e4:	mov	x1, xzr
  4036e8:	bl	402a80 <sigaction@plt>
  4036ec:	ldr	x8, [sp, #136]
  4036f0:	cmp	x8, #0x1
  4036f4:	b.eq	403708 <ferror@plt+0x878>  // b.none
  4036f8:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4036fc:	add	x0, x0, #0x5f0
  403700:	mov	w1, #0x3                   	// #3
  403704:	bl	402dd0 <sigaddset@plt>
  403708:	add	x2, sp, #0x88
  40370c:	mov	w0, #0xf                   	// #15
  403710:	mov	x1, xzr
  403714:	bl	402a80 <sigaction@plt>
  403718:	ldr	x8, [sp, #136]
  40371c:	cmp	x8, #0x1
  403720:	b.eq	403734 <ferror@plt+0x8a4>  // b.none
  403724:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403728:	add	x0, x0, #0x5f0
  40372c:	mov	w1, #0xf                   	// #15
  403730:	bl	402dd0 <sigaddset@plt>
  403734:	add	x2, sp, #0x88
  403738:	mov	w0, #0x1d                  	// #29
  40373c:	mov	x1, xzr
  403740:	bl	402a80 <sigaction@plt>
  403744:	ldr	x8, [sp, #136]
  403748:	cmp	x8, #0x1
  40374c:	b.eq	403760 <ferror@plt+0x8d0>  // b.none
  403750:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403754:	add	x0, x0, #0x5f0
  403758:	mov	w1, #0x1d                  	// #29
  40375c:	bl	402dd0 <sigaddset@plt>
  403760:	add	x2, sp, #0x88
  403764:	mov	w0, #0x1b                  	// #27
  403768:	mov	x1, xzr
  40376c:	bl	402a80 <sigaction@plt>
  403770:	ldr	x8, [sp, #136]
  403774:	cmp	x8, #0x1
  403778:	b.eq	40378c <ferror@plt+0x8fc>  // b.none
  40377c:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403780:	add	x0, x0, #0x5f0
  403784:	mov	w1, #0x1b                  	// #27
  403788:	bl	402dd0 <sigaddset@plt>
  40378c:	add	x2, sp, #0x88
  403790:	mov	w0, #0x1a                  	// #26
  403794:	mov	x1, xzr
  403798:	bl	402a80 <sigaction@plt>
  40379c:	ldr	x8, [sp, #136]
  4037a0:	cmp	x8, #0x1
  4037a4:	b.eq	4037b8 <ferror@plt+0x928>  // b.none
  4037a8:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4037ac:	add	x0, x0, #0x5f0
  4037b0:	mov	w1, #0x1a                  	// #26
  4037b4:	bl	402dd0 <sigaddset@plt>
  4037b8:	add	x2, sp, #0x88
  4037bc:	mov	w0, #0x18                  	// #24
  4037c0:	mov	x1, xzr
  4037c4:	bl	402a80 <sigaction@plt>
  4037c8:	ldr	x8, [sp, #136]
  4037cc:	cmp	x8, #0x1
  4037d0:	b.eq	4037e4 <ferror@plt+0x954>  // b.none
  4037d4:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4037d8:	add	x0, x0, #0x5f0
  4037dc:	mov	w1, #0x18                  	// #24
  4037e0:	bl	402dd0 <sigaddset@plt>
  4037e4:	add	x2, sp, #0x88
  4037e8:	mov	w0, #0x19                  	// #25
  4037ec:	mov	x1, xzr
  4037f0:	bl	402a80 <sigaction@plt>
  4037f4:	ldr	x8, [sp, #136]
  4037f8:	cmp	x8, #0x1
  4037fc:	b.eq	403810 <ferror@plt+0x980>  // b.none
  403800:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403804:	add	x0, x0, #0x5f0
  403808:	mov	w1, #0x19                  	// #25
  40380c:	bl	402dd0 <sigaddset@plt>
  403810:	ldp	q0, q1, [x19, #64]
  403814:	add	x8, sp, #0x1
  403818:	mov	w1, #0xe                   	// #14
  40381c:	mov	x0, x19
  403820:	stur	q0, [sp, #208]
  403824:	ldp	q2, q0, [x19, #96]
  403828:	stp	q1, q2, [sp, #224]
  40382c:	ldp	q1, q2, [x19]
  403830:	stur	q0, [x8, #255]
  403834:	adrp	x8, 406000 <ferror@plt+0x3170>
  403838:	add	x8, x8, #0x328
  40383c:	stp	q1, q2, [sp, #144]
  403840:	ldp	q0, q1, [x19, #32]
  403844:	str	x8, [sp, #136]
  403848:	str	wzr, [sp, #272]
  40384c:	stp	q0, q1, [sp, #176]
  403850:	bl	402ba0 <sigismember@plt>
  403854:	cbz	w0, 403868 <ferror@plt+0x9d8>
  403858:	add	x1, sp, #0x88
  40385c:	mov	w0, #0xe                   	// #14
  403860:	mov	x2, xzr
  403864:	bl	402a80 <sigaction@plt>
  403868:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  40386c:	add	x0, x0, #0x5f0
  403870:	mov	w1, #0x1                   	// #1
  403874:	bl	402ba0 <sigismember@plt>
  403878:	cbz	w0, 40388c <ferror@plt+0x9fc>
  40387c:	add	x1, sp, #0x88
  403880:	mov	w0, #0x1                   	// #1
  403884:	mov	x2, xzr
  403888:	bl	402a80 <sigaction@plt>
  40388c:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403890:	add	x0, x0, #0x5f0
  403894:	mov	w1, #0x2                   	// #2
  403898:	bl	402ba0 <sigismember@plt>
  40389c:	cbz	w0, 4038b0 <ferror@plt+0xa20>
  4038a0:	add	x1, sp, #0x88
  4038a4:	mov	w0, #0x2                   	// #2
  4038a8:	mov	x2, xzr
  4038ac:	bl	402a80 <sigaction@plt>
  4038b0:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4038b4:	add	x0, x0, #0x5f0
  4038b8:	mov	w1, #0xd                   	// #13
  4038bc:	bl	402ba0 <sigismember@plt>
  4038c0:	cbz	w0, 4038d4 <ferror@plt+0xa44>
  4038c4:	add	x1, sp, #0x88
  4038c8:	mov	w0, #0xd                   	// #13
  4038cc:	mov	x2, xzr
  4038d0:	bl	402a80 <sigaction@plt>
  4038d4:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4038d8:	add	x0, x0, #0x5f0
  4038dc:	mov	w1, #0x3                   	// #3
  4038e0:	bl	402ba0 <sigismember@plt>
  4038e4:	cbz	w0, 4038f8 <ferror@plt+0xa68>
  4038e8:	add	x1, sp, #0x88
  4038ec:	mov	w0, #0x3                   	// #3
  4038f0:	mov	x2, xzr
  4038f4:	bl	402a80 <sigaction@plt>
  4038f8:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4038fc:	add	x0, x0, #0x5f0
  403900:	mov	w1, #0xf                   	// #15
  403904:	bl	402ba0 <sigismember@plt>
  403908:	cbz	w0, 40391c <ferror@plt+0xa8c>
  40390c:	add	x1, sp, #0x88
  403910:	mov	w0, #0xf                   	// #15
  403914:	mov	x2, xzr
  403918:	bl	402a80 <sigaction@plt>
  40391c:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403920:	add	x0, x0, #0x5f0
  403924:	mov	w1, #0x1d                  	// #29
  403928:	bl	402ba0 <sigismember@plt>
  40392c:	cbz	w0, 403940 <ferror@plt+0xab0>
  403930:	add	x1, sp, #0x88
  403934:	mov	w0, #0x1d                  	// #29
  403938:	mov	x2, xzr
  40393c:	bl	402a80 <sigaction@plt>
  403940:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403944:	add	x0, x0, #0x5f0
  403948:	mov	w1, #0x1b                  	// #27
  40394c:	bl	402ba0 <sigismember@plt>
  403950:	cbz	w0, 403964 <ferror@plt+0xad4>
  403954:	add	x1, sp, #0x88
  403958:	mov	w0, #0x1b                  	// #27
  40395c:	mov	x2, xzr
  403960:	bl	402a80 <sigaction@plt>
  403964:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  403968:	add	x0, x0, #0x5f0
  40396c:	mov	w1, #0x1a                  	// #26
  403970:	bl	402ba0 <sigismember@plt>
  403974:	cbz	w0, 403988 <ferror@plt+0xaf8>
  403978:	add	x1, sp, #0x88
  40397c:	mov	w0, #0x1a                  	// #26
  403980:	mov	x2, xzr
  403984:	bl	402a80 <sigaction@plt>
  403988:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  40398c:	add	x0, x0, #0x5f0
  403990:	mov	w1, #0x18                  	// #24
  403994:	bl	402ba0 <sigismember@plt>
  403998:	cbz	w0, 4039ac <ferror@plt+0xb1c>
  40399c:	add	x1, sp, #0x88
  4039a0:	mov	w0, #0x18                  	// #24
  4039a4:	mov	x2, xzr
  4039a8:	bl	402a80 <sigaction@plt>
  4039ac:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  4039b0:	add	x0, x0, #0x5f0
  4039b4:	mov	w1, #0x19                  	// #25
  4039b8:	bl	402ba0 <sigismember@plt>
  4039bc:	cbz	w0, 4039d0 <ferror@plt+0xb40>
  4039c0:	add	x1, sp, #0x88
  4039c4:	mov	w0, #0x19                  	// #25
  4039c8:	mov	x2, xzr
  4039cc:	bl	402a80 <sigaction@plt>
  4039d0:	mov	w0, #0x11                  	// #17
  4039d4:	mov	x1, xzr
  4039d8:	bl	4028e0 <signal@plt>
  4039dc:	adrp	x0, 406000 <ferror@plt+0x3170>
  4039e0:	add	x0, x0, #0x37c
  4039e4:	bl	4135e0 <_obstack_memory_used@@Base+0xbcc>
  4039e8:	movi	v0.2d, #0x0
  4039ec:	mov	x8, #0xffffffffffffffff    	// #-1
  4039f0:	add	x9, sp, #0x1a8
  4039f4:	stur	q0, [x9, #8]
  4039f8:	stur	q0, [x9, #24]
  4039fc:	stur	q0, [x9, #40]
  403a00:	stur	q0, [x9, #56]
  403a04:	str	x8, [sp, #440]
  403a08:	str	x8, [sp, #424]
  403a0c:	tbnz	w25, #31, 40539c <ferror@plt+0x250c>
  403a10:	cmp	x26, #0x0
  403a14:	mov	w8, w25
  403a18:	cset	w9, eq  // eq = none
  403a1c:	lsl	x0, x8, #3
  403a20:	str	w9, [sp, #96]
  403a24:	bl	4112fc <ferror@plt+0xe46c>
  403a28:	add	x8, sp, #0x1f0
  403a2c:	add	x10, x8, #0x10
  403a30:	add	x9, sp, #0x88
  403a34:	str	x10, [sp, #104]
  403a38:	add	x10, x8, #0x8
  403a3c:	add	x8, x8, #0x18
  403a40:	mov	x28, x0
  403a44:	mov	x20, xzr
  403a48:	mov	w19, wzr
  403a4c:	mov	w21, wzr
  403a50:	mov	w0, wzr
  403a54:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x145ec>
  403a58:	stp	x8, x10, [sp, #80]
  403a5c:	orr	x8, x9, #0x1
  403a60:	str	xzr, [sp, #8]
  403a64:	str	xzr, [sp, #64]
  403a68:	str	xzr, [sp, #24]
  403a6c:	stp	xzr, x8, [sp, #120]
  403a70:	mov	w8, #0xffffffff            	// #-1
  403a74:	cmn	w0, #0x1
  403a78:	stur	w8, [x29, #-40]
  403a7c:	b.eq	403b4c <ferror@plt+0xcbc>  // b.none
  403a80:	cbz	x26, 403ad8 <ferror@plt+0xc48>
  403a84:	cbz	x20, 403ad8 <ferror@plt+0xc48>
  403a88:	tst	w21, #0xff
  403a8c:	b.ne	403b4c <ferror@plt+0xcbc>  // b.any
  403a90:	ldr	w8, [x29, #8]
  403a94:	eor	w8, w8, #0x1
  403a98:	tbnz	w8, #0, 403b4c <ferror@plt+0xcbc>
  403a9c:	ldrsw	x8, [x13, #1336]
  403aa0:	cmp	w8, w25
  403aa4:	b.eq	403b4c <ferror@plt+0xcbc>  // b.none
  403aa8:	ldr	x9, [x24, x8, lsl #3]
  403aac:	ldrb	w10, [x9]
  403ab0:	cmp	w10, #0x2d
  403ab4:	b.ne	403b4c <ferror@plt+0xcbc>  // b.any
  403ab8:	ldrb	w10, [x9, #1]
  403abc:	cmp	w10, #0x6f
  403ac0:	b.ne	403b4c <ferror@plt+0xcbc>  // b.any
  403ac4:	add	w8, w8, #0x1
  403ac8:	cmp	w8, w25
  403acc:	b.ne	403ad8 <ferror@plt+0xc48>  // b.any
  403ad0:	ldrb	w8, [x9, #2]
  403ad4:	cbz	w8, 403b4c <ferror@plt+0xcbc>
  403ad8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x5ec>
  403adc:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x5ec>
  403ae0:	sub	x4, x29, #0x28
  403ae4:	mov	w0, w25
  403ae8:	mov	x1, x24
  403aec:	add	x2, x2, #0xa61
  403af0:	add	x3, x3, #0xa80
  403af4:	mov	x23, x13
  403af8:	bl	402b80 <getopt_long@plt>
  403afc:	add	w9, w0, #0x3
  403b00:	cmp	w9, #0x10a
  403b04:	b.hi	405e38 <ferror@plt+0x2fa8>  // b.pmore
  403b08:	adrp	x12, 413000 <_obstack_memory_used@@Base+0x5ec>
  403b0c:	add	x12, x12, #0x650
  403b10:	adr	x10, 403b38 <ferror@plt+0xca8>
  403b14:	ldrh	w11, [x12, x9, lsl #1]
  403b18:	add	x10, x10, x11, lsl #2
  403b1c:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  403b20:	adrp	x27, 427000 <_obstack_memory_used@@Base+0x145ec>
  403b24:	mov	x13, x23
  403b28:	mov	w8, #0x1                   	// #1
  403b2c:	add	x22, x22, #0xa8c
  403b30:	add	x27, x27, #0x98c
  403b34:	br	x10
  403b38:	ldr	x8, [sp, #128]
  403b3c:	mov	w9, w0
  403b40:	strb	w0, [sp, #136]
  403b44:	strb	wzr, [sp, #137]
  403b48:	b	403b88 <ferror@plt+0xcf8>
  403b4c:	ldrsw	x8, [x13, #1336]
  403b50:	cmp	w8, w25
  403b54:	b.ge	404890 <ferror@plt+0x1a00>  // b.tcont
  403b58:	add	w9, w8, #0x1
  403b5c:	str	w9, [x13, #1336]
  403b60:	ldr	x8, [x24, x8, lsl #3]
  403b64:	add	x9, x20, #0x1
  403b68:	str	x8, [x28, x20, lsl #3]
  403b6c:	mov	x20, x9
  403b70:	mov	w8, w19
  403b74:	mov	w19, w8
  403b78:	b	403a70 <ferror@plt+0xbe0>
  403b7c:	mov	w9, #0x1                   	// #1
  403b80:	strb	w9, [sp, #477]
  403b84:	ldrb	w9, [x8], #1
  403b88:	and	w9, w9, #0xff
  403b8c:	sub	w9, w9, #0x4d
  403b90:	cmp	w9, #0x25
  403b94:	b.hi	403b70 <ferror@plt+0xce0>  // b.pmore
  403b98:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  403b9c:	add	x10, x10, #0x8d3
  403ba0:	adr	x11, 403b70 <ferror@plt+0xce0>
  403ba4:	ldrb	w12, [x10, x9]
  403ba8:	add	x11, x11, x12, lsl #2
  403bac:	br	x11
  403bb0:	mov	w9, #0x1                   	// #1
  403bb4:	strb	w9, [sp, #478]
  403bb8:	ldrb	w9, [x8], #1
  403bbc:	b	403b88 <ferror@plt+0xcf8>
  403bc0:	ldr	x9, [sp, #456]
  403bc4:	cbnz	x9, 403c10 <ferror@plt+0xd80>
  403bc8:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403bcc:	add	x9, x9, #0x88c
  403bd0:	str	x9, [sp, #456]
  403bd4:	ldrb	w9, [x8], #1
  403bd8:	b	403b88 <ferror@plt+0xcf8>
  403bdc:	str	x22, [sp, #464]
  403be0:	ldrb	w9, [x8], #1
  403be4:	b	403b88 <ferror@plt+0xcf8>
  403be8:	mov	w9, #0x101                 	// #257
  403bec:	strh	w9, [sp, #472]
  403bf0:	ldrb	w9, [x8], #1
  403bf4:	b	403b88 <ferror@plt+0xcf8>
  403bf8:	mov	w9, #0x1                   	// #1
  403bfc:	strb	w9, [sp, #476]
  403c00:	ldrb	w9, [x8], #1
  403c04:	b	403b88 <ferror@plt+0xcf8>
  403c08:	mov	w9, #0x1                   	// #1
  403c0c:	strb	w9, [sp, #480]
  403c10:	ldrb	w9, [x8], #1
  403c14:	b	403b88 <ferror@plt+0xcf8>
  403c18:	str	x27, [sp, #456]
  403c1c:	ldrb	w9, [x8], #1
  403c20:	b	403b88 <ferror@plt+0xcf8>
  403c24:	mov	w9, #0x1                   	// #1
  403c28:	strb	w9, [sp, #475]
  403c2c:	ldrb	w9, [x8], #1
  403c30:	b	403b88 <ferror@plt+0xcf8>
  403c34:	mov	w9, #0x1                   	// #1
  403c38:	strb	w9, [sp, #479]
  403c3c:	ldrb	w9, [x8], #1
  403c40:	b	403b88 <ferror@plt+0xcf8>
  403c44:	mov	w9, #0x1                   	// #1
  403c48:	strb	w9, [sp, #474]
  403c4c:	ldrb	w9, [x8], #1
  403c50:	b	403b88 <ferror@plt+0xcf8>
  403c54:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403c58:	ldr	x1, [x8, #1328]
  403c5c:	cbz	x1, 404438 <ferror@plt+0x15a8>
  403c60:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403c64:	ldr	x5, [x8, #1200]
  403c68:	mov	w22, w19
  403c6c:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x5ec>
  403c70:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x15ec>
  403c74:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x5ec>
  403c78:	add	x19, x19, #0xea0
  403c7c:	add	x0, x0, #0xfc1
  403c80:	add	x2, x2, #0xea8
  403c84:	mov	w4, #0x1                   	// #1
  403c88:	mov	x3, x19
  403c8c:	bl	40acc4 <ferror@plt+0x7e34>
  403c90:	ldrb	w0, [x19, x0]
  403c94:	mov	x13, x23
  403c98:	mov	w19, w22
  403c9c:	ands	w8, w21, #0xff
  403ca0:	b.eq	403cac <ferror@plt+0xe1c>  // b.none
  403ca4:	cmp	w0, w8
  403ca8:	b.ne	405f14 <ferror@plt+0x3084>  // b.any
  403cac:	mov	w8, w19
  403cb0:	mov	w21, w0
  403cb4:	b	403a70 <ferror@plt+0xbe0>
  403cb8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403cbc:	mov	w9, #0x1                   	// #1
  403cc0:	strb	w9, [x8, #1385]
  403cc4:	mov	w0, #0x7a                  	// #122
  403cc8:	b	403b70 <ferror@plt+0xce0>
  403ccc:	mov	x22, x20
  403cd0:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x145ec>
  403cd4:	add	x20, x20, #0x590
  403cd8:	ldr	x8, [x20]
  403cdc:	ldr	x9, [x20, #24]
  403ce0:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  403ce4:	mov	w27, w19
  403ce8:	ldr	x19, [x10, #1328]
  403cec:	cmp	x8, x9
  403cf0:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403cf4:	b.ne	40412c <ferror@plt+0x129c>  // b.any
  403cf8:	ldr	x0, [x9, #1456]
  403cfc:	cbz	x0, 404510 <ferror@plt+0x1680>
  403d00:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403d04:	movk	x9, #0xaaa, lsl #48
  403d08:	cmp	x8, x9
  403d0c:	b.cs	40539c <ferror@plt+0x250c>  // b.hs, b.nlast
  403d10:	add	x8, x8, x8, lsr #1
  403d14:	add	x8, x8, #0x1
  403d18:	b	4045b0 <ferror@plt+0x1720>
  403d1c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403d20:	mov	w9, #0x1                   	// #1
  403d24:	strb	w9, [x8, #1383]
  403d28:	mov	w0, #0x73                  	// #115
  403d2c:	b	403b70 <ferror@plt+0xce0>
  403d30:	mov	w22, w19
  403d34:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  403d38:	ldr	x0, [x19, #1328]
  403d3c:	ldrb	w8, [x0]
  403d40:	cbz	w8, 405f20 <ferror@plt+0x3090>
  403d44:	ldrb	w9, [x0, #1]
  403d48:	cbz	w9, 403d64 <ferror@plt+0xed4>
  403d4c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  403d50:	add	x1, x1, #0xa2
  403d54:	bl	402bb0 <strcmp@plt>
  403d58:	cbnz	w0, 405f2c <ferror@plt+0x309c>
  403d5c:	mov	w8, wzr
  403d60:	mov	x13, x23
  403d64:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403d68:	ldr	w10, [x9, #964]
  403d6c:	mov	w11, w22
  403d70:	cmp	w10, #0x100
  403d74:	b.eq	403d80 <ferror@plt+0xef0>  // b.none
  403d78:	cmp	w10, w8
  403d7c:	b.ne	405f54 <ferror@plt+0x30c4>  // b.any
  403d80:	str	w8, [x9, #964]
  403d84:	mov	w0, #0x74                  	// #116
  403d88:	mov	w8, w11
  403d8c:	mov	w19, w11
  403d90:	b	403a70 <ferror@plt+0xbe0>
  403d94:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403d98:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403d9c:	ldr	x1, [x8, #1328]
  403da0:	ldr	x5, [x9, #1200]
  403da4:	str	w21, [sp, #44]
  403da8:	mov	x21, x26
  403dac:	mov	w26, w19
  403db0:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x5ec>
  403db4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x15ec>
  403db8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x5ec>
  403dbc:	add	x19, x19, #0xe60
  403dc0:	add	x0, x0, #0xfba
  403dc4:	add	x2, x2, #0xe68
  403dc8:	mov	w4, #0x1                   	// #1
  403dcc:	mov	x3, x19
  403dd0:	str	x24, [sp, #72]
  403dd4:	bl	40acc4 <ferror@plt+0x7e34>
  403dd8:	ldrb	w0, [x19, x0]
  403ddc:	mov	w19, w26
  403de0:	mov	x26, x21
  403de4:	ldr	x24, [sp, #72]
  403de8:	ldr	w21, [sp, #44]
  403dec:	mov	x13, x23
  403df0:	b	403b38 <ferror@plt+0xca8>
  403df4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403df8:	ldr	x0, [x9, #1328]
  403dfc:	movi	v0.2d, #0x0
  403e00:	add	x8, sp, #0x1a8
  403e04:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  403e08:	stur	q0, [x8, #88]
  403e0c:	stur	q0, [x8, #120]
  403e10:	stur	q0, [x8, #104]
  403e14:	stur	q0, [x8, #72]
  403e18:	mov	x8, #0xffffffffffffffff    	// #-1
  403e1c:	add	x2, x2, #0xff1
  403e20:	add	x1, sp, #0x1f0
  403e24:	str	xzr, [sp, #560]
  403e28:	str	x8, [sp, #512]
  403e2c:	bl	406414 <ferror@plt+0x3584>
  403e30:	ldr	x9, [sp, #496]
  403e34:	sub	x8, x9, #0x1
  403e38:	str	x8, [sp, #496]
  403e3c:	cbz	x9, 4060c4 <ferror@plt+0x3234>
  403e40:	ldrb	w9, [x0]
  403e44:	cmp	w9, #0x2e
  403e48:	b.ne	404134 <ferror@plt+0x12a4>  // b.any
  403e4c:	ldr	x1, [sp, #88]
  403e50:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  403e54:	add	x0, x0, #0x1
  403e58:	add	x2, x2, #0xf83
  403e5c:	bl	406414 <ferror@plt+0x3584>
  403e60:	ldr	x8, [sp, #504]
  403e64:	sub	x9, x8, #0x1
  403e68:	str	x9, [sp, #504]
  403e6c:	cbz	x8, 405f60 <ferror@plt+0x30d0>
  403e70:	ldr	x8, [sp, #496]
  403e74:	orr	x8, x8, x9
  403e78:	cbnz	x8, 404154 <ferror@plt+0x12c4>
  403e7c:	b	404140 <ferror@plt+0x12b0>
  403e80:	str	w19, [sp, #20]
  403e84:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  403e88:	ldr	x8, [x19, #1328]
  403e8c:	ldrb	w9, [x8]
  403e90:	cmp	w9, #0x2b
  403e94:	b.ne	404618 <ferror@plt+0x1788>  // b.any
  403e98:	ldrsw	x9, [x13, #1336]
  403e9c:	str	x20, [sp, #32]
  403ea0:	cmp	w9, w25
  403ea4:	b.eq	404448 <ferror@plt+0x15b8>  // b.none
  403ea8:	ldr	x9, [x24, x9, lsl #3]
  403eac:	ldrb	w10, [x9]
  403eb0:	cmp	w10, #0x2d
  403eb4:	b.ne	404448 <ferror@plt+0x15b8>  // b.any
  403eb8:	ldrb	w9, [x9, #1]
  403ebc:	sub	w9, w9, #0x30
  403ec0:	cmp	w9, #0xa
  403ec4:	cset	w20, cc  // cc = lo, ul, last
  403ec8:	b	40444c <ferror@plt+0x15bc>
  403ecc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403ed0:	mov	w22, w19
  403ed4:	ldr	x19, [x8, #1328]
  403ed8:	ldr	x0, [sp, #24]
  403edc:	cbz	x0, 4044cc <ferror@plt+0x163c>
  403ee0:	mov	x1, x19
  403ee4:	bl	402bb0 <strcmp@plt>
  403ee8:	cbnz	w0, 405f74 <ferror@plt+0x30e4>
  403eec:	mov	w0, #0x105                 	// #261
  403ef0:	str	x19, [sp, #24]
  403ef4:	b	403f7c <ferror@plt+0x10ec>
  403ef8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403efc:	ldr	x22, [x8, #1328]
  403f00:	mov	w27, w19
  403f04:	ldur	w19, [x29, #-40]
  403f08:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  403f0c:	add	x4, x4, #0xfb8
  403f10:	add	x3, sp, #0x88
  403f14:	mov	w2, #0xa                   	// #10
  403f18:	mov	x0, x22
  403f1c:	mov	x1, xzr
  403f20:	bl	411908 <ferror@plt+0xea78>
  403f24:	cbz	w0, 40436c <ferror@plt+0x14dc>
  403f28:	cmp	w0, #0x1
  403f2c:	b.ne	405f80 <ferror@plt+0x30f0>  // b.any
  403f30:	mov	x8, #0xffffffffffffffff    	// #-1
  403f34:	mov	x13, x23
  403f38:	str	x8, [sp, #8]
  403f3c:	b	40437c <ferror@plt+0x14ec>
  403f40:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403f44:	mov	w9, #0x1                   	// #1
  403f48:	strb	w9, [x8, #1384]
  403f4c:	mov	w0, #0x75                  	// #117
  403f50:	b	403b70 <ferror@plt+0xce0>
  403f54:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403f58:	mov	w22, w19
  403f5c:	ldr	x19, [x8, #1328]
  403f60:	ldr	x0, [sp, #64]
  403f64:	cbz	x0, 4044e0 <ferror@plt+0x1650>
  403f68:	mov	x1, x19
  403f6c:	bl	402bb0 <strcmp@plt>
  403f70:	cbnz	w0, 405f90 <ferror@plt+0x3100>
  403f74:	mov	w0, #0x6f                  	// #111
  403f78:	str	x19, [sp, #64]
  403f7c:	mov	w8, w22
  403f80:	mov	x13, x23
  403f84:	mov	w19, w22
  403f88:	b	403a70 <ferror@plt+0xbe0>
  403f8c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  403f90:	ldr	x22, [x8, #1328]
  403f94:	mov	w27, w19
  403f98:	ldur	w19, [x29, #-40]
  403f9c:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  403fa0:	add	x4, x4, #0x6c9
  403fa4:	sub	x1, x29, #0xa8
  403fa8:	add	x3, sp, #0x88
  403fac:	mov	w2, #0xa                   	// #10
  403fb0:	mov	x0, x22
  403fb4:	bl	411d68 <ferror@plt+0xeed8>
  403fb8:	cmp	w0, #0x2
  403fbc:	b.eq	40438c <ferror@plt+0x14fc>  // b.none
  403fc0:	cbnz	w0, 406100 <ferror@plt+0x3270>
  403fc4:	ldur	x8, [x29, #-168]
  403fc8:	mov	x13, x23
  403fcc:	ldurb	w8, [x8, #-1]
  403fd0:	sub	w8, w8, #0x30
  403fd4:	cmp	w8, #0x9
  403fd8:	b.hi	4043f8 <ferror@plt+0x1568>  // b.pmore
  403fdc:	ldr	x8, [sp, #136]
  403fe0:	lsr	x9, x8, #54
  403fe4:	cbnz	x9, 4060fc <ferror@plt+0x326c>
  403fe8:	lsl	x8, x8, #10
  403fec:	b	4043f4 <ferror@plt+0x1564>
  403ff0:	ldr	w8, [x13, #1336]
  403ff4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  403ff8:	ldr	x9, [x9, #1328]
  403ffc:	sub	w10, w8, #0x1
  404000:	ldr	x10, [x24, w10, sxtw #3]
  404004:	cmp	x9, x10
  404008:	b.eq	404014 <ferror@plt+0x1184>  // b.none
  40400c:	mov	w0, #0x79                  	// #121
  404010:	b	403b70 <ferror@plt+0xce0>
  404014:	ldrb	w10, [x9], #1
  404018:	sub	w11, w10, #0x30
  40401c:	cmp	w11, #0xa
  404020:	b.cc	404014 <ferror@plt+0x1184>  // b.lo, b.ul, b.last
  404024:	cmp	w10, #0x0
  404028:	cset	w9, ne  // ne = any
  40402c:	sub	w8, w8, w9
  404030:	str	w8, [x13, #1336]
  404034:	mov	w0, #0x79                  	// #121
  404038:	b	403b70 <ferror@plt+0xce0>
  40403c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404040:	ldr	x8, [x8, #1328]
  404044:	mov	w0, #0x103                 	// #259
  404048:	str	x8, [sp, #120]
  40404c:	b	403b70 <ferror@plt+0xce0>
  404050:	ldursw	x8, [x29, #-40]
  404054:	sub	x3, x29, #0xe0
  404058:	mov	w2, #0xa                   	// #10
  40405c:	mov	x1, xzr
  404060:	str	x8, [sp, #72]
  404064:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404068:	ldr	x27, [x8, #1328]
  40406c:	mov	x4, xzr
  404070:	mov	w22, w21
  404074:	mov	x21, x20
  404078:	mov	x0, x27
  40407c:	mov	x20, x28
  404080:	bl	411d68 <ferror@plt+0xeed8>
  404084:	mov	w28, w0
  404088:	add	x1, sp, #0x88
  40408c:	mov	w0, #0x7                   	// #7
  404090:	bl	402cf0 <getrlimit@plt>
  404094:	ldr	w8, [sp, #136]
  404098:	cmp	w0, #0x0
  40409c:	mov	w9, #0x11                  	// #17
  4040a0:	sub	w8, w8, #0x3
  4040a4:	csel	w11, w8, w9, eq  // eq = none
  4040a8:	cbnz	w28, 405f9c <ferror@plt+0x310c>
  4040ac:	ldur	x8, [x29, #-224]
  4040b0:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  4040b4:	lsr	x10, x8, #32
  4040b8:	str	w8, [x9, #968]
  4040bc:	cbnz	x10, 405fa4 <ferror@plt+0x3114>
  4040c0:	cmp	w8, #0x1
  4040c4:	b.ls	40601c <ferror@plt+0x318c>  // b.plast
  4040c8:	cmp	w11, w8
  4040cc:	b.cc	405fa4 <ferror@plt+0x3114>  // b.lo, b.ul, b.last
  4040d0:	mov	x28, x20
  4040d4:	mov	x20, x21
  4040d8:	mov	w21, w22
  4040dc:	mov	x13, x23
  4040e0:	mov	w0, #0x104                 	// #260
  4040e4:	b	403b70 <ferror@plt+0xce0>
  4040e8:	mov	x22, x20
  4040ec:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x145ec>
  4040f0:	ldr	x0, [x20, #1408]
  4040f4:	mov	w27, w19
  4040f8:	cbz	x0, 4044f4 <ferror@plt+0x1664>
  4040fc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404100:	ldr	x19, [x8, #1328]
  404104:	mov	x1, x19
  404108:	bl	402bb0 <strcmp@plt>
  40410c:	mov	x13, x23
  404110:	cbz	w0, 4044fc <ferror@plt+0x166c>
  404114:	b	4060a4 <ferror@plt+0x3214>
  404118:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40411c:	mov	w9, #0x1                   	// #1
  404120:	mov	w0, #0x102                 	// #258
  404124:	strb	w9, [x8, #1382]
  404128:	b	403b70 <ferror@plt+0xce0>
  40412c:	ldr	x0, [x9, #1456]
  404130:	b	4045c8 <ferror@plt+0x1738>
  404134:	ldr	x9, [sp, #504]
  404138:	orr	x8, x8, x9
  40413c:	cbnz	x8, 404154 <ferror@plt+0x12c4>
  404140:	mov	x8, #0xffffffffffffffff    	// #-1
  404144:	str	x8, [sp, #496]
  404148:	b	404154 <ferror@plt+0x12c4>
  40414c:	mov	w8, #0x1                   	// #1
  404150:	strb	w8, [sp, #549]
  404154:	add	x0, x0, #0x1
  404158:	ldurb	w8, [x0, #-1]
  40415c:	sub	w8, w8, #0x2c
  404160:	cmp	w8, #0x46
  404164:	b.hi	4041fc <ferror@plt+0x136c>  // b.pmore
  404168:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  40416c:	add	x9, x9, #0x866
  404170:	adr	x10, 40414c <ferror@plt+0x12bc>
  404174:	ldrb	w11, [x9, x8]
  404178:	add	x10, x10, x11, lsl #2
  40417c:	br	x10
  404180:	mov	w8, #0x1                   	// #1
  404184:	strb	w8, [sp, #550]
  404188:	b	404154 <ferror@plt+0x12c4>
  40418c:	ldr	x8, [sp, #528]
  404190:	cbnz	x8, 404154 <ferror@plt+0x12c4>
  404194:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404198:	add	x8, x8, #0x88c
  40419c:	str	x8, [sp, #528]
  4041a0:	b	404154 <ferror@plt+0x12c4>
  4041a4:	mov	w8, #0x1                   	// #1
  4041a8:	strb	w8, [sp, #547]
  4041ac:	b	404154 <ferror@plt+0x12c4>
  4041b0:	mov	w8, #0x1                   	// #1
  4041b4:	strb	w8, [sp, #544]
  4041b8:	b	404154 <ferror@plt+0x12c4>
  4041bc:	str	x27, [sp, #528]
  4041c0:	b	404154 <ferror@plt+0x12c4>
  4041c4:	mov	w8, #0x1                   	// #1
  4041c8:	strb	w8, [sp, #552]
  4041cc:	b	404154 <ferror@plt+0x12c4>
  4041d0:	str	x22, [sp, #536]
  4041d4:	b	404154 <ferror@plt+0x12c4>
  4041d8:	mov	w8, #0x1                   	// #1
  4041dc:	strb	w8, [sp, #548]
  4041e0:	b	404154 <ferror@plt+0x12c4>
  4041e4:	mov	w8, #0x1                   	// #1
  4041e8:	strb	w8, [sp, #546]
  4041ec:	b	404154 <ferror@plt+0x12c4>
  4041f0:	mov	w8, #0x1                   	// #1
  4041f4:	strb	w8, [sp, #551]
  4041f8:	b	404154 <ferror@plt+0x12c4>
  4041fc:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x5ec>
  404200:	ldr	q0, [x8, #1568]
  404204:	add	x8, sp, #0x1a8
  404208:	stur	q0, [x8, #88]
  40420c:	ldurb	w8, [x0, #-1]
  404210:	cbnz	w8, 4060b0 <ferror@plt+0x3220>
  404214:	add	x0, sp, #0x1f0
  404218:	mov	w1, #0x48                  	// #72
  40421c:	bl	41158c <ferror@plt+0xe6fc>
  404220:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404224:	add	x8, x8, #0x588
  404228:	ldr	x10, [x8]
  40422c:	mov	x9, x8
  404230:	add	x8, x10, #0x40
  404234:	cbnz	x10, 404228 <ferror@plt+0x1398>
  404238:	str	x0, [x9]
  40423c:	str	xzr, [x0, #64]
  404240:	mov	w0, #0x6b                  	// #107
  404244:	mov	w8, w19
  404248:	mov	x13, x23
  40424c:	b	403a70 <ferror@plt+0xbe0>
  404250:	ldr	x1, [sp, #104]
  404254:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  404258:	add	x2, x2, #0x3d
  40425c:	bl	406414 <ferror@plt+0x3584>
  404260:	ldr	x8, [sp, #512]
  404264:	sub	x9, x8, #0x1
  404268:	str	x9, [sp, #512]
  40426c:	cbz	x8, 4060c4 <ferror@plt+0x3234>
  404270:	ldrb	w8, [x0]
  404274:	cmp	w8, #0x2e
  404278:	b.ne	4042a0 <ferror@plt+0x1410>  // b.any
  40427c:	ldr	x1, [sp, #80]
  404280:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  404284:	add	x0, x0, #0x1
  404288:	add	x2, x2, #0xf83
  40428c:	bl	406414 <ferror@plt+0x3584>
  404290:	b	4042a0 <ferror@plt+0x1410>
  404294:	mov	w8, #0x1                   	// #1
  404298:	strb	w8, [sp, #549]
  40429c:	add	x0, x0, #0x1
  4042a0:	ldrb	w8, [x0]
  4042a4:	sub	w9, w8, #0x4d
  4042a8:	cmp	w9, #0x25
  4042ac:	b.hi	404210 <ferror@plt+0x1380>  // b.pmore
  4042b0:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  4042b4:	add	x10, x10, #0x8ad
  4042b8:	adr	x11, 404210 <ferror@plt+0x1380>
  4042bc:	ldrb	w12, [x10, x9]
  4042c0:	add	x11, x11, x12, lsl #2
  4042c4:	br	x11
  4042c8:	mov	w8, #0x1                   	// #1
  4042cc:	strb	w8, [sp, #550]
  4042d0:	add	x0, x0, #0x1
  4042d4:	b	4042a0 <ferror@plt+0x1410>
  4042d8:	ldr	x8, [sp, #528]
  4042dc:	cbnz	x8, 404328 <ferror@plt+0x1498>
  4042e0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4042e4:	add	x8, x8, #0x88c
  4042e8:	str	x8, [sp, #528]
  4042ec:	add	x0, x0, #0x1
  4042f0:	b	4042a0 <ferror@plt+0x1410>
  4042f4:	str	x22, [sp, #536]
  4042f8:	add	x0, x0, #0x1
  4042fc:	b	4042a0 <ferror@plt+0x1410>
  404300:	mov	w8, #0x1                   	// #1
  404304:	strb	w8, [sp, #545]
  404308:	add	x0, x0, #0x1
  40430c:	b	4042a0 <ferror@plt+0x1410>
  404310:	mov	w8, #0x1                   	// #1
  404314:	strb	w8, [sp, #548]
  404318:	add	x0, x0, #0x1
  40431c:	b	4042a0 <ferror@plt+0x1410>
  404320:	mov	w8, #0x1                   	// #1
  404324:	strb	w8, [sp, #552]
  404328:	add	x0, x0, #0x1
  40432c:	b	4042a0 <ferror@plt+0x1410>
  404330:	str	x27, [sp, #528]
  404334:	add	x0, x0, #0x1
  404338:	b	4042a0 <ferror@plt+0x1410>
  40433c:	mov	w8, #0x1                   	// #1
  404340:	strb	w8, [sp, #547]
  404344:	add	x0, x0, #0x1
  404348:	b	4042a0 <ferror@plt+0x1410>
  40434c:	mov	w8, #0x1                   	// #1
  404350:	strb	w8, [sp, #551]
  404354:	add	x0, x0, #0x1
  404358:	b	4042a0 <ferror@plt+0x1410>
  40435c:	mov	w8, #0x1                   	// #1
  404360:	strb	w8, [sp, #546]
  404364:	add	x0, x0, #0x1
  404368:	b	4042a0 <ferror@plt+0x1410>
  40436c:	ldr	x8, [sp, #136]
  404370:	mov	x13, x23
  404374:	str	x8, [sp, #8]
  404378:	cbz	x8, 4060d8 <ferror@plt+0x3248>
  40437c:	mov	w0, #0x107                 	// #263
  404380:	mov	w8, w27
  404384:	mov	w19, w27
  404388:	b	403a70 <ferror@plt+0xbe0>
  40438c:	ldur	x8, [x29, #-168]
  404390:	ldurb	w9, [x8, #-1]
  404394:	sub	w9, w9, #0x30
  404398:	cmp	w9, #0x9
  40439c:	b.hi	405ed8 <ferror@plt+0x3048>  // b.pmore
  4043a0:	ldrb	w9, [x8, #1]
  4043a4:	cbnz	w9, 405ed8 <ferror@plt+0x3048>
  4043a8:	ldrb	w8, [x8]
  4043ac:	mov	x13, x23
  4043b0:	cmp	w8, #0x62
  4043b4:	b.eq	4043f8 <ferror@plt+0x1568>  // b.none
  4043b8:	cmp	w8, #0x25
  4043bc:	b.ne	405ed8 <ferror@plt+0x3048>  // b.any
  4043c0:	bl	40dbac <ferror@plt+0xad1c>
  4043c4:	ldr	d1, [sp, #136]
  4043c8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  4043cc:	fmov	d2, x8
  4043d0:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  4043d4:	ucvtf	d1, d1
  4043d8:	fmul	d0, d0, d1
  4043dc:	fdiv	d0, d0, d2
  4043e0:	fmov	d1, x8
  4043e4:	fcmp	d0, d1
  4043e8:	b.pl	4060fc <ferror@plt+0x326c>  // b.nfrst
  4043ec:	fcvtzu	x8, d0
  4043f0:	mov	x13, x23
  4043f4:	str	x8, [sp, #136]
  4043f8:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  4043fc:	ldr	x8, [sp, #136]
  404400:	ldr	x10, [x9, #1432]
  404404:	cmp	x8, x10
  404408:	b.cc	404428 <ferror@plt+0x1598>  // b.lo, b.ul, b.last
  40440c:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  404410:	ldr	w10, [x10, #968]
  404414:	add	x10, x10, x10, lsl #4
  404418:	lsl	x10, x10, #1
  40441c:	cmp	x8, x10
  404420:	csel	x8, x8, x10, hi  // hi = pmore
  404424:	str	x8, [x9, #1432]
  404428:	mov	w0, #0x53                  	// #83
  40442c:	mov	w8, w27
  404430:	mov	w19, w27
  404434:	b	403a70 <ferror@plt+0xbe0>
  404438:	mov	w0, #0x63                  	// #99
  40443c:	ands	w8, w21, #0xff
  404440:	b.ne	403ca4 <ferror@plt+0xe14>  // b.any
  404444:	b	403cac <ferror@plt+0xe1c>
  404448:	mov	w20, wzr
  40444c:	ldr	w9, [sp, #96]
  404450:	ldr	w10, [x29, #8]
  404454:	and	w9, w20, w9
  404458:	orr	w9, w10, w9
  40445c:	tbz	w9, #0, 404508 <ferror@plt+0x1678>
  404460:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  404464:	movi	v0.2d, #0x0
  404468:	mov	x9, #0xffffffffffffffff    	// #-1
  40446c:	add	x10, sp, #0x1a8
  404470:	add	x0, x8, #0x1
  404474:	add	x4, x4, #0xfb8
  404478:	add	x1, sp, #0x88
  40447c:	sub	x3, x29, #0xa8
  404480:	mov	w2, #0xa                   	// #10
  404484:	str	xzr, [sp, #560]
  404488:	stur	q0, [x10, #88]
  40448c:	stur	q0, [x10, #120]
  404490:	stur	q0, [x10, #104]
  404494:	stur	q0, [x10, #72]
  404498:	str	x9, [sp, #512]
  40449c:	bl	411d68 <ferror@plt+0xeed8>
  4044a0:	cmp	w0, #0x4
  4044a4:	b.hi	404528 <ferror@plt+0x1698>  // b.pmore
  4044a8:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  4044ac:	mov	w8, w0
  4044b0:	add	x9, x9, #0x8f9
  4044b4:	adr	x10, 4044c4 <ferror@plt+0x1634>
  4044b8:	ldrb	w11, [x9, x8]
  4044bc:	add	x10, x10, x11, lsl #2
  4044c0:	br	x10
  4044c4:	ldur	x8, [x29, #-168]
  4044c8:	b	404524 <ferror@plt+0x1694>
  4044cc:	mov	w0, #0x105                 	// #261
  4044d0:	str	x19, [sp, #24]
  4044d4:	mov	w8, w22
  4044d8:	mov	w19, w22
  4044dc:	b	403a70 <ferror@plt+0xbe0>
  4044e0:	mov	w0, #0x6f                  	// #111
  4044e4:	str	x19, [sp, #64]
  4044e8:	mov	w8, w22
  4044ec:	mov	w19, w22
  4044f0:	b	403a70 <ferror@plt+0xbe0>
  4044f4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4044f8:	ldr	x19, [x8, #1328]
  4044fc:	mov	w0, #0x101                 	// #257
  404500:	str	x19, [x20, #1408]
  404504:	b	4045dc <ferror@plt+0x174c>
  404508:	str	wzr, [x29, #8]
  40450c:	b	404614 <ferror@plt+0x1784>
  404510:	cbz	x8, 4045ac <ferror@plt+0x171c>
  404514:	lsr	x9, x8, #60
  404518:	cbz	x9, 4045b0 <ferror@plt+0x1720>
  40451c:	b	40539c <ferror@plt+0x250c>
  404520:	mov	x8, #0xffffffffffffffff    	// #-1
  404524:	str	x8, [sp, #496]
  404528:	ldr	x8, [sp, #136]
  40452c:	cbz	x8, 4045f0 <ferror@plt+0x1760>
  404530:	ldrb	w9, [x8]
  404534:	mov	x13, x23
  404538:	cmp	w9, #0x2e
  40453c:	b.ne	404598 <ferror@plt+0x1708>  // b.any
  404540:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  404544:	add	x0, x8, #0x1
  404548:	add	x4, x4, #0xfb8
  40454c:	add	x1, sp, #0x88
  404550:	sub	x3, x29, #0xa8
  404554:	mov	w2, #0xa                   	// #10
  404558:	bl	411d68 <ferror@plt+0xeed8>
  40455c:	cmp	w0, #0x4
  404560:	b.hi	404590 <ferror@plt+0x1700>  // b.pmore
  404564:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  404568:	mov	w9, w0
  40456c:	add	x10, x10, #0x8fe
  404570:	adr	x11, 404588 <ferror@plt+0x16f8>
  404574:	ldrb	w12, [x10, x9]
  404578:	add	x11, x11, x12, lsl #2
  40457c:	mov	x8, xzr
  404580:	mov	x9, #0xffffffffffffffff    	// #-1
  404584:	br	x11
  404588:	ldur	x9, [x29, #-168]
  40458c:	str	x9, [sp, #504]
  404590:	ldr	x8, [sp, #136]
  404594:	b	4045f0 <ferror@plt+0x1760>
  404598:	ldp	x9, x10, [sp, #496]
  40459c:	orr	x9, x9, x10
  4045a0:	cbz	x9, 404600 <ferror@plt+0x1770>
  4045a4:	cbnz	x8, 40463c <ferror@plt+0x17ac>
  4045a8:	b	40460c <ferror@plt+0x177c>
  4045ac:	mov	w8, #0x10                  	// #16
  4045b0:	lsl	x1, x8, #3
  4045b4:	str	x8, [x20, #24]
  4045b8:	bl	41137c <ferror@plt+0xe4ec>
  4045bc:	ldr	x8, [x20]
  4045c0:	mov	x13, x23
  4045c4:	str	x0, [x20, #32]
  4045c8:	add	x9, x8, #0x1
  4045cc:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4045d0:	str	x9, [x10, #1424]
  4045d4:	str	x19, [x0, x8, lsl #3]
  4045d8:	mov	w0, #0x54                  	// #84
  4045dc:	mov	w8, w27
  4045e0:	mov	x20, x22
  4045e4:	mov	w19, w27
  4045e8:	b	403a70 <ferror@plt+0xbe0>
  4045ec:	mov	x8, xzr
  4045f0:	mov	x13, x23
  4045f4:	ldp	x9, x10, [sp, #496]
  4045f8:	orr	x9, x9, x10
  4045fc:	cbnz	x9, 4045a4 <ferror@plt+0x1714>
  404600:	mov	x9, #0xffffffffffffffff    	// #-1
  404604:	str	x9, [sp, #496]
  404608:	cbnz	x8, 40463c <ferror@plt+0x17ac>
  40460c:	mov	w8, #0x1                   	// #1
  404610:	str	w8, [x29, #8]
  404614:	ldr	x20, [sp, #32]
  404618:	ldr	x8, [x19, #1328]
  40461c:	ldr	w19, [sp, #20]
  404620:	mov	w0, #0x1                   	// #1
  404624:	str	x8, [x28, x20, lsl #3]
  404628:	add	x20, x20, #0x1
  40462c:	b	403a70 <ferror@plt+0xbe0>
  404630:	mov	w9, #0x1                   	// #1
  404634:	strb	w9, [sp, #549]
  404638:	add	x8, x8, #0x1
  40463c:	ldrb	w9, [x8]
  404640:	cmp	w9, #0x72
  404644:	b.hi	40460c <ferror@plt+0x177c>  // b.pmore
  404648:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  40464c:	add	x10, x10, #0x903
  404650:	adr	x11, 40460c <ferror@plt+0x177c>
  404654:	ldrb	w12, [x10, x9]
  404658:	add	x11, x11, x12, lsl #2
  40465c:	br	x11
  404660:	mov	w9, #0x1                   	// #1
  404664:	strb	w9, [sp, #550]
  404668:	add	x8, x8, #0x1
  40466c:	b	40463c <ferror@plt+0x17ac>
  404670:	ldr	x9, [sp, #528]
  404674:	cbnz	x9, 4046c0 <ferror@plt+0x1830>
  404678:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40467c:	add	x9, x9, #0x88c
  404680:	str	x9, [sp, #528]
  404684:	add	x8, x8, #0x1
  404688:	b	40463c <ferror@plt+0x17ac>
  40468c:	mov	w9, #0x1                   	// #1
  404690:	strb	w9, [sp, #547]
  404694:	add	x8, x8, #0x1
  404698:	b	40463c <ferror@plt+0x17ac>
  40469c:	mov	w9, #0x1                   	// #1
  4046a0:	strb	w9, [sp, #544]
  4046a4:	add	x8, x8, #0x1
  4046a8:	b	40463c <ferror@plt+0x17ac>
  4046ac:	str	x27, [sp, #528]
  4046b0:	add	x8, x8, #0x1
  4046b4:	b	40463c <ferror@plt+0x17ac>
  4046b8:	mov	w9, #0x1                   	// #1
  4046bc:	strb	w9, [sp, #552]
  4046c0:	add	x8, x8, #0x1
  4046c4:	b	40463c <ferror@plt+0x17ac>
  4046c8:	str	x22, [sp, #536]
  4046cc:	add	x8, x8, #0x1
  4046d0:	b	40463c <ferror@plt+0x17ac>
  4046d4:	mov	w9, #0x1                   	// #1
  4046d8:	strb	w9, [sp, #548]
  4046dc:	add	x8, x8, #0x1
  4046e0:	b	40463c <ferror@plt+0x17ac>
  4046e4:	mov	w9, #0x1                   	// #1
  4046e8:	strb	w9, [sp, #546]
  4046ec:	add	x8, x8, #0x1
  4046f0:	b	40463c <ferror@plt+0x17ac>
  4046f4:	mov	w9, #0x1                   	// #1
  4046f8:	strb	w9, [sp, #551]
  4046fc:	add	x8, x8, #0x1
  404700:	b	40463c <ferror@plt+0x17ac>
  404704:	cbz	w20, 404840 <ferror@plt+0x19b0>
  404708:	ldrsw	x8, [x13, #1336]
  40470c:	ldr	x1, [sp, #104]
  404710:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  404714:	add	x2, x2, #0xf48
  404718:	add	w9, w8, #0x1
  40471c:	str	w9, [x13, #1336]
  404720:	ldr	x19, [x24, x8, lsl #3]
  404724:	add	x0, x19, #0x1
  404728:	bl	406414 <ferror@plt+0x3584>
  40472c:	cbz	x0, 406118 <ferror@plt+0x3288>
  404730:	ldrb	w8, [x0]
  404734:	cmp	w8, #0x2e
  404738:	b.ne	404750 <ferror@plt+0x18c0>  // b.any
  40473c:	ldr	x1, [sp, #80]
  404740:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x15ec>
  404744:	add	x0, x0, #0x1
  404748:	add	x2, x2, #0xf83
  40474c:	bl	406414 <ferror@plt+0x3584>
  404750:	ldr	x8, [sp, #520]
  404754:	cbnz	x8, 404778 <ferror@plt+0x18e8>
  404758:	ldr	x8, [sp, #512]
  40475c:	cbz	x8, 404778 <ferror@plt+0x18e8>
  404760:	sub	x8, x8, #0x1
  404764:	str	x8, [sp, #512]
  404768:	b	404778 <ferror@plt+0x18e8>
  40476c:	mov	w8, #0x1                   	// #1
  404770:	strb	w8, [sp, #551]
  404774:	add	x0, x0, #0x1
  404778:	ldrb	w8, [x0]
  40477c:	cmp	w8, #0x72
  404780:	b.hi	406138 <ferror@plt+0x32a8>  // b.pmore
  404784:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  404788:	add	x9, x9, #0x976
  40478c:	adr	x10, 40476c <ferror@plt+0x18dc>
  404790:	ldrh	w11, [x9, x8, lsl #1]
  404794:	add	x10, x10, x11, lsl #2
  404798:	br	x10
  40479c:	mov	w8, #0x1                   	// #1
  4047a0:	strb	w8, [sp, #550]
  4047a4:	add	x0, x0, #0x1
  4047a8:	b	404778 <ferror@plt+0x18e8>
  4047ac:	ldr	x8, [sp, #528]
  4047b0:	cbnz	x8, 404838 <ferror@plt+0x19a8>
  4047b4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4047b8:	add	x8, x8, #0x88c
  4047bc:	str	x8, [sp, #528]
  4047c0:	add	x0, x0, #0x1
  4047c4:	b	404778 <ferror@plt+0x18e8>
  4047c8:	mov	w8, #0x1                   	// #1
  4047cc:	strb	w8, [sp, #548]
  4047d0:	add	x0, x0, #0x1
  4047d4:	b	404778 <ferror@plt+0x18e8>
  4047d8:	mov	w8, #0x1                   	// #1
  4047dc:	strb	w8, [sp, #547]
  4047e0:	add	x0, x0, #0x1
  4047e4:	b	404778 <ferror@plt+0x18e8>
  4047e8:	mov	w8, #0x1                   	// #1
  4047ec:	strb	w8, [sp, #545]
  4047f0:	add	x0, x0, #0x1
  4047f4:	b	404778 <ferror@plt+0x18e8>
  4047f8:	str	x27, [sp, #528]
  4047fc:	add	x0, x0, #0x1
  404800:	b	404778 <ferror@plt+0x18e8>
  404804:	str	x22, [sp, #536]
  404808:	add	x0, x0, #0x1
  40480c:	b	404778 <ferror@plt+0x18e8>
  404810:	mov	w8, #0x1                   	// #1
  404814:	strb	w8, [sp, #549]
  404818:	add	x0, x0, #0x1
  40481c:	b	404778 <ferror@plt+0x18e8>
  404820:	mov	w8, #0x1                   	// #1
  404824:	strb	w8, [sp, #546]
  404828:	add	x0, x0, #0x1
  40482c:	b	404778 <ferror@plt+0x18e8>
  404830:	mov	w8, #0x1                   	// #1
  404834:	strb	w8, [sp, #552]
  404838:	add	x0, x0, #0x1
  40483c:	b	404778 <ferror@plt+0x18e8>
  404840:	mov	w8, #0x1                   	// #1
  404844:	add	x0, sp, #0x1f0
  404848:	mov	w1, #0x48                  	// #72
  40484c:	strb	w8, [sp, #553]
  404850:	bl	41158c <ferror@plt+0xe6fc>
  404854:	ldr	x20, [sp, #32]
  404858:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40485c:	add	x8, x8, #0x588
  404860:	ldr	x10, [x8]
  404864:	mov	x9, x8
  404868:	add	x8, x10, #0x40
  40486c:	cbnz	x10, 404860 <ferror@plt+0x19d0>
  404870:	ldr	w19, [sp, #20]
  404874:	mov	w8, #0x1                   	// #1
  404878:	str	x0, [x9]
  40487c:	str	xzr, [x0, #64]
  404880:	str	w8, [x29, #8]
  404884:	mov	w0, #0x1                   	// #1
  404888:	mov	x13, x23
  40488c:	b	403a70 <ferror@plt+0xbe0>
  404890:	ldr	x25, [sp, #120]
  404894:	cbz	x25, 404968 <ferror@plt+0x1ad8>
  404898:	cbnz	x20, 406164 <ferror@plt+0x32d4>
  40489c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4048a0:	add	x1, x1, #0x4a8
  4048a4:	mov	x0, x25
  4048a8:	mov	w24, w19
  4048ac:	bl	406cc4 <ferror@plt+0x3e34>
  4048b0:	cbz	x0, 4061d8 <ferror@plt+0x3348>
  4048b4:	mov	x19, x0
  4048b8:	add	x0, sp, #0x88
  4048bc:	bl	41034c <ferror@plt+0xd4bc>
  4048c0:	add	x1, sp, #0x88
  4048c4:	mov	x0, x19
  4048c8:	bl	410408 <ferror@plt+0xd578>
  4048cc:	tbz	w0, #0, 4061f0 <ferror@plt+0x3360>
  4048d0:	mov	x0, x19
  4048d4:	mov	x1, x25
  4048d8:	bl	406588 <ferror@plt+0x36f8>
  4048dc:	ldr	x8, [sp, #136]
  4048e0:	cbz	x8, 4061fc <ferror@plt+0x336c>
  4048e4:	mov	x0, x28
  4048e8:	bl	402c00 <free@plt>
  4048ec:	ldp	x20, x28, [sp, #136]
  4048f0:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x25ec>
  4048f4:	mov	x19, xzr
  4048f8:	add	x22, x22, #0x780
  4048fc:	cmp	x20, x19
  404900:	b.eq	404964 <ferror@plt+0x1ad4>  // b.none
  404904:	ldr	x23, [x28, x19, lsl #3]
  404908:	mov	x1, x22
  40490c:	mov	x0, x23
  404910:	bl	402bb0 <strcmp@plt>
  404914:	cbz	w0, 405e40 <ferror@plt+0x2fb0>
  404918:	ldrb	w8, [x23]
  40491c:	add	x19, x19, #0x1
  404920:	cbnz	w8, 4048fc <ferror@plt+0x1a6c>
  404924:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404928:	add	x1, x1, #0x198
  40492c:	mov	w2, #0x5                   	// #5
  404930:	mov	x0, xzr
  404934:	bl	402d70 <dcgettext@plt>
  404938:	mov	x20, x0
  40493c:	mov	w1, #0x3                   	// #3
  404940:	mov	w0, wzr
  404944:	mov	x2, x25
  404948:	bl	40f84c <ferror@plt+0xc9bc>
  40494c:	mov	x3, x0
  404950:	mov	w0, #0x2                   	// #2
  404954:	mov	w1, wzr
  404958:	mov	x2, x20
  40495c:	mov	x4, x19
  404960:	bl	4027f0 <error@plt>
  404964:	mov	w19, w24
  404968:	adrp	x24, 427000 <_obstack_memory_used@@Base+0x145ec>
  40496c:	ldr	x8, [sp, #64]
  404970:	ldr	x0, [x24, #1416]
  404974:	mov	w22, wzr
  404978:	str	x20, [sp, #32]
  40497c:	str	x8, [sp, #64]
  404980:	str	w21, [sp, #44]
  404984:	cbz	x0, 404a68 <ferror@plt+0x1bd8>
  404988:	mov	x8, x0
  40498c:	b	4049ac <ferror@plt+0x1b1c>
  404990:	ldrb	w9, [x8, #51]
  404994:	ldr	x8, [x8, #64]
  404998:	and	w10, w22, #0x1
  40499c:	orr	w9, w9, w10
  4049a0:	cmp	w9, #0x0
  4049a4:	cset	w22, ne  // ne = any
  4049a8:	cbz	x8, 404a5c <ferror@plt+0x1bcc>
  4049ac:	ldr	x9, [x8, #32]
  4049b0:	cbnz	x9, 404990 <ferror@plt+0x1b00>
  4049b4:	ldr	x9, [x8, #40]
  4049b8:	cbnz	x9, 404990 <ferror@plt+0x1b00>
  4049bc:	ldrb	w9, [x8, #48]
  4049c0:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049c4:	ldrb	w9, [x8, #49]
  4049c8:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049cc:	ldrb	w9, [x8, #50]
  4049d0:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049d4:	ldrb	w9, [x8, #52]
  4049d8:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049dc:	ldrb	w9, [x8, #53]
  4049e0:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049e4:	ldrb	w9, [x8, #54]
  4049e8:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049ec:	ldrb	w9, [x8, #56]
  4049f0:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049f4:	ldrb	w9, [x8, #51]
  4049f8:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  4049fc:	ldrb	w9, [x8, #55]
  404a00:	cbnz	w9, 404990 <ferror@plt+0x1b00>
  404a04:	add	x9, sp, #0xc9
  404a08:	ldur	q0, [x9, #255]
  404a0c:	str	q0, [x8, #32]
  404a10:	ldrb	w9, [sp, #472]
  404a14:	strb	w9, [x8, #48]
  404a18:	ldrb	w9, [sp, #473]
  404a1c:	strb	w9, [x8, #49]
  404a20:	ldrb	w9, [sp, #478]
  404a24:	strb	w9, [x8, #54]
  404a28:	ldrb	w9, [sp, #474]
  404a2c:	strb	w9, [x8, #50]
  404a30:	ldrb	w9, [sp, #476]
  404a34:	strb	w9, [x8, #52]
  404a38:	ldrb	w9, [sp, #477]
  404a3c:	strb	w9, [x8, #53]
  404a40:	ldrb	w9, [sp, #480]
  404a44:	strb	w9, [x8, #56]
  404a48:	ldrb	w9, [sp, #475]
  404a4c:	strb	w9, [x8, #51]
  404a50:	ldrb	w9, [sp, #479]
  404a54:	strb	w9, [x8, #55]
  404a58:	b	404990 <ferror@plt+0x1b00>
  404a5c:	cbz	x0, 404a68 <ferror@plt+0x1bd8>
  404a60:	str	wzr, [sp, #104]
  404a64:	b	404b0c <ferror@plt+0x1c7c>
  404a68:	ldrb	w8, [sp, #472]
  404a6c:	ldrb	w9, [sp, #473]
  404a70:	ldrb	w10, [sp, #474]
  404a74:	ldrb	w11, [sp, #476]
  404a78:	ldrb	w12, [sp, #477]
  404a7c:	ldrb	w13, [sp, #478]
  404a80:	orr	w8, w8, w9
  404a84:	ldrb	w14, [sp, #480]
  404a88:	orr	w8, w8, w10
  404a8c:	orr	w8, w8, w11
  404a90:	ldrb	w9, [sp, #475]
  404a94:	orr	w8, w8, w12
  404a98:	orr	w8, w8, w13
  404a9c:	orr	w8, w8, w14
  404aa0:	orr	w8, w8, w9
  404aa4:	cbnz	w8, 404ac0 <ferror@plt+0x1c30>
  404aa8:	ldr	x8, [sp, #456]
  404aac:	cbnz	x8, 404ac0 <ferror@plt+0x1c30>
  404ab0:	ldr	x8, [sp, #464]
  404ab4:	cbnz	x8, 404ac0 <ferror@plt+0x1c30>
  404ab8:	str	wzr, [sp, #104]
  404abc:	b	404b58 <ferror@plt+0x1cc8>
  404ac0:	add	x0, sp, #0x1a8
  404ac4:	mov	w1, #0x48                  	// #72
  404ac8:	bl	41158c <ferror@plt+0xe6fc>
  404acc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404ad0:	add	x8, x8, #0x588
  404ad4:	ldr	x10, [x8]
  404ad8:	mov	x9, x8
  404adc:	add	x8, x10, #0x40
  404ae0:	cbnz	x10, 404ad4 <ferror@plt+0x1c44>
  404ae4:	str	x0, [x9]
  404ae8:	str	xzr, [x0, #64]
  404aec:	ldrb	w8, [sp, #475]
  404af0:	ldr	x0, [x24, #1416]
  404af4:	orr	w8, w8, w22
  404af8:	cmp	w8, #0x0
  404afc:	cset	w22, ne  // ne = any
  404b00:	mov	w8, #0x1                   	// #1
  404b04:	str	w8, [sp, #104]
  404b08:	cbz	x0, 404b58 <ferror@plt+0x1cc8>
  404b0c:	ldrb	w8, [x0, #50]
  404b10:	ldrb	w9, [x0, #52]
  404b14:	ldrb	w10, [x0, #53]
  404b18:	ldr	x13, [x0, #32]
  404b1c:	ldrb	w11, [x0, #56]
  404b20:	ldrb	w12, [x0, #51]
  404b24:	add	w8, w9, w8
  404b28:	ldrb	w9, [x0, #54]
  404b2c:	cmp	x13, #0x0
  404b30:	add	w8, w8, w10
  404b34:	orr	w11, w12, w11
  404b38:	add	w8, w8, w9
  404b3c:	cset	w9, ne  // ne = any
  404b40:	orr	w9, w9, w11
  404b44:	add	w8, w9, w8
  404b48:	cmp	w8, #0x2
  404b4c:	b.cs	405e78 <ferror@plt+0x2fe8>  // b.hs, b.nlast
  404b50:	ldr	x0, [x0, #64]
  404b54:	cbnz	x0, 404b0c <ferror@plt+0x1c7c>
  404b58:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404b5c:	ldrb	w8, [x8, #1382]
  404b60:	str	w19, [sp, #20]
  404b64:	cmp	w8, #0x1
  404b68:	b.ne	405284 <ferror@plt+0x23f4>  // b.any
  404b6c:	ldr	x8, [sp, #64]
  404b70:	ldr	w9, [sp, #44]
  404b74:	cbnz	x8, 406148 <ferror@plt+0x32b8>
  404b78:	tst	w9, #0xff
  404b7c:	b.ne	406148 <ferror@plt+0x32b8>  // b.any
  404b80:	ldr	x8, [sp, #112]
  404b84:	cbz	x8, 404be8 <ferror@plt+0x1d58>
  404b88:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404b8c:	add	x1, x1, #0xfb8
  404b90:	mov	w0, #0x3                   	// #3
  404b94:	bl	402e80 <setlocale@plt>
  404b98:	cbz	x0, 404be8 <ferror@plt+0x1d58>
  404b9c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404ba0:	ldrb	w8, [x8, #1376]
  404ba4:	str	w22, [sp, #4]
  404ba8:	cbz	w8, 404c24 <ferror@plt+0x1d94>
  404bac:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404bb0:	add	x1, x1, #0x1e4
  404bb4:	mov	w2, #0x5                   	// #5
  404bb8:	mov	x0, xzr
  404bbc:	bl	402d70 <dcgettext@plt>
  404bc0:	mov	x19, x0
  404bc4:	mov	w0, #0x3                   	// #3
  404bc8:	mov	x1, xzr
  404bcc:	bl	402e80 <setlocale@plt>
  404bd0:	bl	40fa8c <ferror@plt+0xcbfc>
  404bd4:	mov	x3, x0
  404bd8:	mov	w0, wzr
  404bdc:	mov	w1, wzr
  404be0:	mov	x2, x19
  404be4:	b	404c4c <ferror@plt+0x1dbc>
  404be8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404bec:	add	x1, x1, #0x1cf
  404bf0:	mov	w2, #0x5                   	// #5
  404bf4:	mov	x0, xzr
  404bf8:	bl	402d70 <dcgettext@plt>
  404bfc:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  404c00:	mov	x3, x0
  404c04:	add	x2, x2, #0xb02
  404c08:	mov	w0, wzr
  404c0c:	mov	w1, wzr
  404c10:	bl	4027f0 <error@plt>
  404c14:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404c18:	ldrb	w8, [x8, #1376]
  404c1c:	str	w22, [sp, #4]
  404c20:	cbnz	w8, 404bac <ferror@plt+0x1d1c>
  404c24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404c28:	add	x1, x1, #0x213
  404c2c:	mov	w2, #0x5                   	// #5
  404c30:	mov	x0, xzr
  404c34:	bl	402d70 <dcgettext@plt>
  404c38:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  404c3c:	mov	x3, x0
  404c40:	add	x2, x2, #0xb02
  404c44:	mov	w0, wzr
  404c48:	mov	w1, wzr
  404c4c:	bl	4027f0 <error@plt>
  404c50:	ldp	x8, x15, [sp, #456]
  404c54:	ldrb	w19, [sp, #472]
  404c58:	ldrb	w20, [sp, #473]
  404c5c:	ldrb	w25, [sp, #477]
  404c60:	str	x8, [x29, #8]
  404c64:	ldrb	w8, [sp, #474]
  404c68:	ldrb	w23, [sp, #478]
  404c6c:	ldrb	w22, [sp, #479]
  404c70:	ldr	x27, [x24, #1416]
  404c74:	str	w8, [sp, #128]
  404c78:	ldrb	w8, [sp, #475]
  404c7c:	ldrb	w24, [sp, #480]
  404c80:	str	w8, [sp, #120]
  404c84:	ldrb	w8, [sp, #476]
  404c88:	str	w8, [sp, #112]
  404c8c:	cbz	x27, 405070 <ferror@plt+0x21e0>
  404c90:	sub	x8, x29, #0xe0
  404c94:	sub	x9, x29, #0xa8
  404c98:	orr	x8, x8, #0x1
  404c9c:	mov	w26, #0x1                   	// #1
  404ca0:	str	x8, [sp, #56]
  404ca4:	orr	x8, x9, #0x3
  404ca8:	str	x8, [sp, #48]
  404cac:	str	x28, [sp, #96]
  404cb0:	b	404d44 <ferror@plt+0x1eb4>
  404cb4:	ldrb	w8, [x27, #48]
  404cb8:	ldrb	w9, [x27, #49]
  404cbc:	ldr	w10, [sp, #128]
  404cc0:	add	x26, x26, #0x1
  404cc4:	eor	w8, w8, #0x1
  404cc8:	eor	w9, w9, #0x1
  404ccc:	and	w19, w8, w19
  404cd0:	ldrb	w8, [x27, #54]
  404cd4:	and	w20, w9, w20
  404cd8:	ldrb	w9, [x27, #50]
  404cdc:	eor	w8, w8, #0x1
  404ce0:	and	w23, w8, w23
  404ce4:	eor	w9, w9, #0x1
  404ce8:	ldrb	w8, [x27, #52]
  404cec:	and	w10, w9, w10
  404cf0:	str	w10, [sp, #128]
  404cf4:	ldr	w10, [sp, #112]
  404cf8:	eor	w8, w8, #0x1
  404cfc:	ldrb	w9, [x27, #53]
  404d00:	and	w10, w8, w10
  404d04:	ldrb	w8, [x27, #51]
  404d08:	str	w10, [sp, #112]
  404d0c:	ldr	w10, [sp, #120]
  404d10:	eor	w9, w9, #0x1
  404d14:	eor	w8, w8, #0x1
  404d18:	and	w25, w9, w25
  404d1c:	ldrb	w9, [x27, #56]
  404d20:	and	w10, w8, w10
  404d24:	ldrb	w8, [x27, #55]
  404d28:	ldr	x27, [x27, #64]
  404d2c:	eor	w9, w9, #0x1
  404d30:	and	w24, w9, w24
  404d34:	eor	w8, w8, #0x1
  404d38:	and	w22, w8, w22
  404d3c:	str	w10, [sp, #120]
  404d40:	cbz	x27, 405070 <ferror@plt+0x21e0>
  404d44:	ldrb	w8, [x27, #57]
  404d48:	cbz	w8, 404e74 <ferror@plt+0x1fe4>
  404d4c:	ldr	x8, [x27]
  404d50:	ldr	x28, [x27, #16]
  404d54:	str	w24, [sp, #80]
  404d58:	sub	x1, x29, #0x28
  404d5c:	cmn	x8, #0x1
  404d60:	csel	x24, xzr, x8, eq  // eq = none
  404d64:	mov	w8, #0x2b                  	// #43
  404d68:	mov	x0, x24
  404d6c:	str	x15, [sp, #72]
  404d70:	str	w22, [sp, #88]
  404d74:	sturh	w8, [x29, #-224]
  404d78:	bl	40d69c <ferror@plt+0xa80c>
  404d7c:	mov	x1, x0
  404d80:	ldr	x0, [sp, #56]
  404d84:	mov	w2, #0x2d                  	// #45
  404d88:	bl	402c50 <__stpcpy_chk@plt>
  404d8c:	mov	w8, #0x6b2d                	// #27437
  404d90:	mov	x22, x0
  404d94:	movk	w8, #0x20, lsl #16
  404d98:	add	x0, x24, #0x1
  404d9c:	sub	x1, x29, #0x28
  404da0:	stur	w8, [x29, #-168]
  404da4:	bl	40d69c <ferror@plt+0xa80c>
  404da8:	mov	x1, x0
  404dac:	ldr	x0, [sp, #48]
  404db0:	mov	w2, #0x2c                  	// #44
  404db4:	bl	402c50 <__stpcpy_chk@plt>
  404db8:	ldr	x8, [x27, #16]
  404dbc:	cmn	x8, #0x1
  404dc0:	b.eq	404e18 <ferror@plt+0x1f88>  // b.none
  404dc4:	mov	x24, x0
  404dc8:	mov	w8, #0x2d20                	// #11552
  404dcc:	add	x0, x28, #0x1
  404dd0:	sub	x1, x29, #0x28
  404dd4:	strh	w8, [x22]
  404dd8:	strb	wzr, [x22, #2]!
  404ddc:	bl	40d69c <ferror@plt+0xa80c>
  404de0:	mov	x1, x0
  404de4:	mov	x0, x22
  404de8:	bl	4028c0 <stpcpy@plt>
  404dec:	mov	w8, #0x2c                  	// #44
  404df0:	strh	w8, [x24], #1
  404df4:	ldr	x8, [x27, #24]
  404df8:	sub	x1, x29, #0x28
  404dfc:	cmn	x8, #0x1
  404e00:	add	x8, x28, #0x2
  404e04:	csinc	x0, x8, x28, eq  // eq = none
  404e08:	bl	40d69c <ferror@plt+0xa80c>
  404e0c:	mov	x1, x0
  404e10:	mov	x0, x24
  404e14:	bl	4028c0 <stpcpy@plt>
  404e18:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404e1c:	mov	w2, #0x5                   	// #5
  404e20:	mov	x0, xzr
  404e24:	add	x1, x1, #0x782
  404e28:	bl	402d70 <dcgettext@plt>
  404e2c:	mov	x22, x0
  404e30:	sub	x1, x29, #0xe0
  404e34:	mov	w0, wzr
  404e38:	bl	40fa7c <ferror@plt+0xcbec>
  404e3c:	mov	x24, x0
  404e40:	sub	x1, x29, #0xa8
  404e44:	mov	w0, #0x1                   	// #1
  404e48:	bl	40fa7c <ferror@plt+0xcbec>
  404e4c:	mov	x4, x0
  404e50:	mov	w0, wzr
  404e54:	mov	w1, wzr
  404e58:	mov	x2, x22
  404e5c:	mov	x3, x24
  404e60:	bl	4027f0 <error@plt>
  404e64:	ldr	x28, [sp, #96]
  404e68:	ldr	w22, [sp, #88]
  404e6c:	ldr	w24, [sp, #80]
  404e70:	ldr	x15, [sp, #72]
  404e74:	ldr	x8, [x27]
  404e78:	cmn	x8, #0x1
  404e7c:	b.eq	404edc <ferror@plt+0x204c>  // b.none
  404e80:	ldr	x9, [x27, #16]
  404e84:	cmp	x9, x8
  404e88:	b.cs	404edc <ferror@plt+0x204c>  // b.hs, b.nlast
  404e8c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404e90:	mov	w2, #0x5                   	// #5
  404e94:	mov	x0, xzr
  404e98:	add	x1, x1, #0x7af
  404e9c:	mov	w21, w19
  404ea0:	mov	x19, x28
  404ea4:	mov	x28, x15
  404ea8:	bl	402d70 <dcgettext@plt>
  404eac:	mov	x2, x0
  404eb0:	mov	w0, wzr
  404eb4:	mov	w1, wzr
  404eb8:	mov	x3, x26
  404ebc:	bl	4027f0 <error@plt>
  404ec0:	mov	x15, x28
  404ec4:	mov	x28, x19
  404ec8:	mov	w19, w21
  404ecc:	mov	w8, #0x1                   	// #1
  404ed0:	ldrb	w9, [x27, #50]
  404ed4:	cbnz	w9, 404ef8 <ferror@plt+0x2068>
  404ed8:	b	404ee8 <ferror@plt+0x2058>
  404edc:	mov	w8, wzr
  404ee0:	ldrb	w9, [x27, #50]
  404ee4:	cbnz	w9, 404ef8 <ferror@plt+0x2068>
  404ee8:	ldrb	w9, [x27, #52]
  404eec:	cbnz	w9, 404ef8 <ferror@plt+0x2068>
  404ef0:	ldrb	w9, [x27, #53]
  404ef4:	cbz	w9, 404f10 <ferror@plt+0x2080>
  404ef8:	mov	w9, #0x1                   	// #1
  404efc:	ldr	x10, [x27, #16]
  404f00:	cbz	x10, 404f24 <ferror@plt+0x2094>
  404f04:	mov	w10, wzr
  404f08:	tbz	w8, #0, 404f34 <ferror@plt+0x20a4>
  404f0c:	b	404fcc <ferror@plt+0x213c>
  404f10:	ldrb	w9, [x27, #54]
  404f14:	cmp	w9, #0x0
  404f18:	cset	w9, ne  // ne = any
  404f1c:	ldr	x10, [x27, #16]
  404f20:	cbnz	x10, 404f04 <ferror@plt+0x2074>
  404f24:	ldr	x10, [x27, #24]
  404f28:	cmp	x10, #0x0
  404f2c:	cset	w10, ne  // ne = any
  404f30:	tbnz	w8, #0, 404fcc <ferror@plt+0x213c>
  404f34:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  404f38:	ldr	w8, [x8, #964]
  404f3c:	ldr	w11, [sp, #104]
  404f40:	cmp	w8, #0x100
  404f44:	cset	w8, ne  // ne = any
  404f48:	orr	w8, w11, w8
  404f4c:	orr	w8, w10, w8
  404f50:	tbnz	w8, #0, 404fcc <ferror@plt+0x213c>
  404f54:	ldrb	w8, [x27, #48]
  404f58:	cmp	w8, #0x0
  404f5c:	cset	w10, ne  // ne = any
  404f60:	orr	w9, w9, w10
  404f64:	cmp	w9, #0x1
  404f68:	b.ne	404f8c <ferror@plt+0x20fc>  // b.any
  404f6c:	cbz	w8, 404f84 <ferror@plt+0x20f4>
  404f70:	ldrb	w8, [x27, #49]
  404f74:	cbnz	w8, 404fcc <ferror@plt+0x213c>
  404f78:	ldr	x8, [x27, #24]
  404f7c:	cbnz	x8, 404f8c <ferror@plt+0x20fc>
  404f80:	b	404fcc <ferror@plt+0x213c>
  404f84:	ldr	x8, [x27, #8]
  404f88:	cbz	x8, 404f70 <ferror@plt+0x20e0>
  404f8c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  404f90:	mov	w2, #0x5                   	// #5
  404f94:	mov	x0, xzr
  404f98:	add	x1, x1, #0x7da
  404f9c:	mov	w21, w19
  404fa0:	mov	x19, x28
  404fa4:	mov	x28, x15
  404fa8:	bl	402d70 <dcgettext@plt>
  404fac:	mov	x2, x0
  404fb0:	mov	w0, wzr
  404fb4:	mov	w1, wzr
  404fb8:	mov	x3, x26
  404fbc:	bl	4027f0 <error@plt>
  404fc0:	mov	x15, x28
  404fc4:	mov	x28, x19
  404fc8:	mov	w19, w21
  404fcc:	ldr	w8, [sp, #104]
  404fd0:	tbnz	w8, #0, 405044 <ferror@plt+0x21b4>
  404fd4:	ldrb	w8, [x27, #50]
  404fd8:	cbnz	w8, 404fec <ferror@plt+0x215c>
  404fdc:	ldrb	w8, [x27, #52]
  404fe0:	cbnz	w8, 404fec <ferror@plt+0x215c>
  404fe4:	ldrb	w8, [x27, #53]
  404fe8:	cbz	w8, 405044 <ferror@plt+0x21b4>
  404fec:	ldr	x8, [x27]
  404ff0:	ldr	x9, [x27, #16]
  404ff4:	adds	x8, x8, #0x1
  404ff8:	csinc	x8, x8, xzr, cc  // cc = lo, ul, last
  404ffc:	cmp	x9, x8
  405000:	b.cc	405044 <ferror@plt+0x21b4>  // b.lo, b.ul, b.last
  405004:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405008:	mov	w2, #0x5                   	// #5
  40500c:	mov	x0, xzr
  405010:	add	x1, x1, #0x822
  405014:	mov	w21, w19
  405018:	mov	x19, x28
  40501c:	mov	x28, x15
  405020:	bl	402d70 <dcgettext@plt>
  405024:	mov	x2, x0
  405028:	mov	w0, wzr
  40502c:	mov	w1, wzr
  405030:	mov	x3, x26
  405034:	bl	4027f0 <error@plt>
  405038:	mov	x15, x28
  40503c:	mov	x28, x19
  405040:	mov	w19, w21
  405044:	ldr	x9, [x29, #8]
  405048:	cbz	x9, 405058 <ferror@plt+0x21c8>
  40504c:	ldr	x8, [x27, #32]
  405050:	cmp	x9, x8
  405054:	csel	x9, xzr, x9, eq  // eq = none
  405058:	str	x9, [x29, #8]
  40505c:	cbz	x15, 404cb4 <ferror@plt+0x1e24>
  405060:	ldr	x8, [x27, #40]
  405064:	cmp	x15, x8
  405068:	csel	x15, xzr, x15, eq  // eq = none
  40506c:	b	404cb4 <ferror@plt+0x1e24>
  405070:	orr	w8, w19, w20
  405074:	ldr	w20, [sp, #120]
  405078:	ldr	w21, [sp, #128]
  40507c:	ldr	w26, [sp, #112]
  405080:	cbnz	x15, 4050f0 <ferror@plt+0x2260>
  405084:	ldr	x9, [x29, #8]
  405088:	cbnz	x9, 4050f0 <ferror@plt+0x2260>
  40508c:	orr	w9, w23, w24
  405090:	orr	w9, w9, w25
  405094:	orr	w9, w9, w26
  405098:	orr	w9, w9, w20
  40509c:	orr	w9, w9, w21
  4050a0:	orr	w9, w9, w8
  4050a4:	tst	w9, #0xff
  4050a8:	b.ne	4050f0 <ferror@plt+0x2260>  // b.any
  4050ac:	mov	w12, w22
  4050b0:	tst	w22, #0xff
  4050b4:	ldr	w22, [sp, #4]
  4050b8:	mov	w13, w24
  4050bc:	adrp	x24, 427000 <_obstack_memory_used@@Base+0x145ec>
  4050c0:	b.eq	405284 <ferror@plt+0x23f4>  // b.none
  4050c4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  4050c8:	ldrb	w9, [x9, #1383]
  4050cc:	tbnz	w9, #0, 4050e0 <ferror@plt+0x2250>
  4050d0:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4050d4:	ldrb	w10, [x10, #1384]
  4050d8:	cmp	w10, #0x1
  4050dc:	b.ne	405250 <ferror@plt+0x23c0>  // b.any
  4050e0:	ldr	x10, [x24, #1416]
  4050e4:	cbnz	x10, 405108 <ferror@plt+0x2278>
  4050e8:	tbz	w9, #0, 40523c <ferror@plt+0x23ac>
  4050ec:	b	405284 <ferror@plt+0x23f4>
  4050f0:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  4050f4:	mov	w12, w22
  4050f8:	ldrb	w9, [x9, #1383]
  4050fc:	ldr	w22, [sp, #4]
  405100:	mov	w13, w24
  405104:	adrp	x24, 427000 <_obstack_memory_used@@Base+0x145ec>
  405108:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  40510c:	ldrb	w10, [x10, #1384]
  405110:	tst	w8, #0xff
  405114:	sub	x8, x29, #0xa8
  405118:	b.eq	405128 <ferror@plt+0x2298>  // b.none
  40511c:	orr	x8, x8, #0x1
  405120:	mov	w11, #0x62                  	// #98
  405124:	sturb	w11, [x29, #-168]
  405128:	ldr	x14, [x29, #8]
  40512c:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  405130:	add	x11, x11, #0x98c
  405134:	cmp	x14, x11
  405138:	b.ne	405144 <ferror@plt+0x22b4>  // b.any
  40513c:	mov	w11, #0x64                  	// #100
  405140:	strb	w11, [x8], #1
  405144:	cbz	x15, 405150 <ferror@plt+0x22c0>
  405148:	mov	w11, #0x66                  	// #102
  40514c:	strb	w11, [x8], #1
  405150:	tst	w26, #0xff
  405154:	b.eq	405160 <ferror@plt+0x22d0>  // b.none
  405158:	mov	w11, #0x67                  	// #103
  40515c:	strb	w11, [x8], #1
  405160:	tst	w25, #0xff
  405164:	b.eq	405170 <ferror@plt+0x22e0>  // b.none
  405168:	mov	w11, #0x68                  	// #104
  40516c:	strb	w11, [x8], #1
  405170:	ldr	x14, [x29, #8]
  405174:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  405178:	add	x11, x11, #0x88c
  40517c:	cmp	x14, x11
  405180:	b.ne	40518c <ferror@plt+0x22fc>  // b.any
  405184:	mov	w11, #0x69                  	// #105
  405188:	strb	w11, [x8], #1
  40518c:	tst	w23, #0xff
  405190:	b.eq	40519c <ferror@plt+0x230c>  // b.none
  405194:	mov	w11, #0x4d                  	// #77
  405198:	strb	w11, [x8], #1
  40519c:	tst	w21, #0xff
  4051a0:	b.eq	4051ac <ferror@plt+0x231c>  // b.none
  4051a4:	mov	w11, #0x6e                  	// #110
  4051a8:	strb	w11, [x8], #1
  4051ac:	tst	w20, #0xff
  4051b0:	b.eq	4051bc <ferror@plt+0x232c>  // b.none
  4051b4:	mov	w11, #0x52                  	// #82
  4051b8:	strb	w11, [x8], #1
  4051bc:	tst	w12, #0xff
  4051c0:	b.eq	4051d8 <ferror@plt+0x2348>  // b.none
  4051c4:	orr	w9, w9, w10
  4051c8:	eor	w9, w9, #0x1
  4051cc:	tbnz	w9, #0, 4051d8 <ferror@plt+0x2348>
  4051d0:	mov	w9, #0x72                  	// #114
  4051d4:	strb	w9, [x8], #1
  4051d8:	tst	w13, #0xff
  4051dc:	b.eq	4051e8 <ferror@plt+0x2358>  // b.none
  4051e0:	mov	w9, #0x56                  	// #86
  4051e4:	strb	w9, [x8], #1
  4051e8:	sub	x0, x29, #0xa8
  4051ec:	and	w19, w12, #0xff
  4051f0:	strb	wzr, [x8]
  4051f4:	bl	4027c0 <strlen@plt>
  4051f8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4051fc:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  405200:	mov	x3, x0
  405204:	add	x1, x1, #0x84f
  405208:	add	x2, x2, #0x867
  40520c:	mov	w4, #0x5                   	// #5
  405210:	mov	x0, xzr
  405214:	bl	402cc0 <dcngettext@plt>
  405218:	mov	x2, x0
  40521c:	sub	x3, x29, #0xa8
  405220:	mov	w0, wzr
  405224:	mov	w1, wzr
  405228:	bl	4027f0 <error@plt>
  40522c:	cbz	w19, 405284 <ferror@plt+0x23f4>
  405230:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405234:	ldrb	w8, [x8, #1383]
  405238:	tbnz	w8, #0, 405284 <ferror@plt+0x23f4>
  40523c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405240:	ldrb	w8, [x8, #1384]
  405244:	eor	w8, w8, #0x1
  405248:	tbnz	w8, #0, 405258 <ferror@plt+0x23c8>
  40524c:	b	405284 <ferror@plt+0x23f4>
  405250:	mov	w8, #0x1                   	// #1
  405254:	tbz	w8, #0, 405284 <ferror@plt+0x23f4>
  405258:	ldr	x8, [x24, #1416]
  40525c:	cbz	x8, 405284 <ferror@plt+0x23f4>
  405260:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405264:	add	x1, x1, #0x881
  405268:	mov	w2, #0x5                   	// #5
  40526c:	mov	x0, xzr
  405270:	bl	402d70 <dcgettext@plt>
  405274:	mov	x2, x0
  405278:	mov	w0, wzr
  40527c:	mov	w1, wzr
  405280:	bl	4027f0 <error@plt>
  405284:	ldrb	w8, [sp, #479]
  405288:	ldr	x21, [sp, #32]
  40528c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  405290:	strb	w8, [x9, #1388]
  405294:	cbz	w22, 4052e4 <ferror@plt+0x2454>
  405298:	ldr	x0, [sp, #24]
  40529c:	mov	w1, #0x10                  	// #16
  4052a0:	bl	40faa4 <ferror@plt+0xcc14>
  4052a4:	cbz	x0, 40628c <ferror@plt+0x33fc>
  4052a8:	sub	x1, x29, #0xa8
  4052ac:	mov	w2, #0x10                  	// #16
  4052b0:	mov	x19, x0
  4052b4:	bl	40fcf4 <ferror@plt+0xce64>
  4052b8:	mov	x0, x19
  4052bc:	bl	40fe48 <ferror@plt+0xcfb8>
  4052c0:	cbnz	w0, 40629c <ferror@plt+0x340c>
  4052c4:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  4052c8:	add	x19, x19, #0x6f0
  4052cc:	mov	x0, x19
  4052d0:	bl	40af0c <ferror@plt+0x807c>
  4052d4:	sub	x0, x29, #0xa8
  4052d8:	mov	w1, #0x10                  	// #16
  4052dc:	mov	x2, x19
  4052e0:	bl	40bb20 <ferror@plt+0x8c90>
  4052e4:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  4052e8:	ldr	x8, [x19, #1424]
  4052ec:	cbz	x8, 4054cc <ferror@plt+0x263c>
  4052f0:	cbz	x21, 405c88 <ferror@plt+0x2df8>
  4052f4:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  4052f8:	ldr	x10, [sp, #64]
  4052fc:	ldr	x8, [x11, #1432]
  405300:	cbz	x8, 405320 <ferror@plt+0x2490>
  405304:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  405308:	ldr	w9, [x9, #968]
  40530c:	add	x9, x9, x9, lsl #4
  405310:	lsl	x9, x9, #1
  405314:	cmp	x8, x9
  405318:	csel	x8, x8, x9, hi  // hi = pmore
  40531c:	str	x8, [x11, #1432]
  405320:	ldr	w8, [sp, #44]
  405324:	tst	w8, #0xff
  405328:	b.eq	405508 <ferror@plt+0x2678>  // b.none
  40532c:	cmp	x21, #0x2
  405330:	b.cs	406220 <ferror@plt+0x3390>  // b.hs, b.nlast
  405334:	cbnz	x10, 406260 <ferror@plt+0x33d0>
  405338:	ldr	x19, [x28]
  40533c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405340:	add	x1, x1, #0x4a8
  405344:	mov	x0, x19
  405348:	bl	406cc4 <ferror@plt+0x3e34>
  40534c:	cbz	x0, 406274 <ferror@plt+0x33e4>
  405350:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405354:	add	x8, x8, #0x568
  405358:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40535c:	ldr	x9, [x9, #976]
  405360:	ldr	x11, [x8, #48]
  405364:	ldrb	w10, [x8]
  405368:	ldr	x22, [x8, #32]
  40536c:	mov	x20, x0
  405370:	cmp	x9, x11
  405374:	eor	w23, w10, #0x1
  405378:	csel	x8, x9, x11, hi  // hi = pmore
  40537c:	and	x8, x8, #0xffffffffffffffe0
  405380:	add	x21, x8, #0x20
  405384:	mov	x0, x21
  405388:	bl	402930 <malloc@plt>
  40538c:	cbnz	x0, 4053a0 <ferror@plt+0x2510>
  405390:	cmp	x21, #0x43
  405394:	lsr	x8, x21, #1
  405398:	b.hi	40537c <ferror@plt+0x24ec>  // b.pmore
  40539c:	bl	411638 <ferror@plt+0xe7a8>
  4053a0:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x5ec>
  4053a4:	ldr	q0, [x8, #1584]
  4053a8:	stp	x0, xzr, [x29, #-168]
  4053ac:	sub	x0, x29, #0xa8
  4053b0:	mov	x1, x20
  4053b4:	mov	x2, x19
  4053b8:	sturb	wzr, [x29, #-120]
  4053bc:	stp	xzr, x21, [x29, #-152]
  4053c0:	stur	q0, [x29, #-136]
  4053c4:	stur	xzr, [x29, #-224]
  4053c8:	bl	406f24 <ferror@plt+0x4094>
  4053cc:	tbz	w0, #0, 4055f0 <ferror@plt+0x2760>
  4053d0:	and	w26, w23, #0x1
  4053d4:	mov	x21, xzr
  4053d8:	cbz	x22, 405cc0 <ferror@plt+0x2e30>
  4053dc:	mov	x22, xzr
  4053e0:	mov	x25, xzr
  4053e4:	ldp	x24, x8, [x29, #-152]
  4053e8:	ldur	x9, [x29, #-168]
  4053ec:	add	x27, x9, x8
  4053f0:	cbz	x22, 405408 <ferror@plt+0x2578>
  4053f4:	sub	x1, x27, #0x20
  4053f8:	sub	x0, x29, #0xe0
  4053fc:	bl	407298 <ferror@plt+0x4408>
  405400:	cmp	w0, w26
  405404:	b.ge	405e20 <ferror@plt+0x2f90>  // b.tcont
  405408:	sub	x28, x27, x24, lsl #5
  40540c:	sub	x23, x27, #0x40
  405410:	add	x0, x23, #0x20
  405414:	cmp	x28, x0
  405418:	b.cs	405434 <ferror@plt+0x25a4>  // b.hs, b.nlast
  40541c:	mov	x1, x23
  405420:	bl	407298 <ferror@plt+0x4408>
  405424:	cmp	w0, w26
  405428:	sub	x23, x23, #0x20
  40542c:	b.lt	405410 <ferror@plt+0x2580>  // b.tstop
  405430:	b	405b4c <ferror@plt+0x2cbc>
  405434:	ldr	x2, [x23, #40]
  405438:	add	x25, x24, x25
  40543c:	cmp	x22, x2
  405440:	b.cs	405478 <ferror@plt+0x25e8>  // b.hs, b.nlast
  405444:	lsl	x22, x22, #1
  405448:	cbz	x22, 405458 <ferror@plt+0x25c8>
  40544c:	cmp	x22, x2
  405450:	b.cc	405444 <ferror@plt+0x25b4>  // b.lo, b.ul, b.last
  405454:	b	40545c <ferror@plt+0x25cc>
  405458:	mov	x22, x2
  40545c:	mov	x0, x21
  405460:	bl	402c00 <free@plt>
  405464:	mov	x0, x22
  405468:	bl	4112fc <ferror@plt+0xe46c>
  40546c:	stur	x0, [x29, #-224]
  405470:	ldr	x2, [x23, #40]
  405474:	mov	x21, x0
  405478:	ldr	x1, [x23, #32]
  40547c:	mov	x0, x21
  405480:	bl	402760 <memcpy@plt>
  405484:	ldr	x8, [x23, #40]
  405488:	sub	x0, x29, #0xa8
  40548c:	mov	x1, x20
  405490:	mov	x2, x19
  405494:	stur	x8, [x29, #-216]
  405498:	ldr	x8, [x23, #48]
  40549c:	ldr	x9, [x23, #32]
  4054a0:	sub	x8, x8, x9
  4054a4:	add	x8, x21, x8
  4054a8:	stur	x8, [x29, #-208]
  4054ac:	ldr	x8, [x23, #56]
  4054b0:	sub	x8, x8, x9
  4054b4:	add	x8, x21, x8
  4054b8:	stur	x8, [x29, #-200]
  4054bc:	bl	406f24 <ferror@plt+0x4094>
  4054c0:	mov	w23, wzr
  4054c4:	tbnz	w0, #0, 4053e4 <ferror@plt+0x2554>
  4054c8:	b	405dd8 <ferror@plt+0x2f48>
  4054cc:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  4054d0:	add	x0, x0, #0x248
  4054d4:	mov	x22, x21
  4054d8:	bl	402e20 <getenv@plt>
  4054dc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4054e0:	ldr	x8, [x8, #1448]
  4054e4:	adrp	x9, 414000 <_obstack_memory_used@@Base+0x15ec>
  4054e8:	add	x9, x9, #0xb3d
  4054ec:	cmp	x0, #0x0
  4054f0:	csel	x20, x9, x0, eq  // eq = none
  4054f4:	cbz	x8, 405c48 <ferror@plt+0x2db8>
  4054f8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4054fc:	ldr	x0, [x8, #1456]
  405500:	mov	x8, xzr
  405504:	b	405c74 <ferror@plt+0x2de4>
  405508:	adrp	x19, 415000 <_obstack_memory_used@@Base+0x25ec>
  40550c:	add	x19, x19, #0x780
  405510:	mov	x26, x21
  405514:	mov	x20, x28
  405518:	b	405528 <ferror@plt+0x2698>
  40551c:	subs	x21, x21, #0x1
  405520:	add	x20, x20, #0x8
  405524:	b.eq	405568 <ferror@plt+0x26d8>  // b.none
  405528:	ldr	x22, [x20]
  40552c:	mov	x1, x19
  405530:	mov	x0, x22
  405534:	bl	402bb0 <strcmp@plt>
  405538:	cbz	w0, 40551c <ferror@plt+0x268c>
  40553c:	mov	w1, #0x4                   	// #4
  405540:	mov	x0, x22
  405544:	bl	402870 <euidaccess@plt>
  405548:	cbz	w0, 40551c <ferror@plt+0x268c>
  40554c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405550:	add	x1, x1, #0x96d
  405554:	mov	w2, #0x5                   	// #5
  405558:	mov	x0, xzr
  40555c:	bl	402d70 <dcgettext@plt>
  405560:	ldr	x1, [x20]
  405564:	bl	406c50 <ferror@plt+0x3dc0>
  405568:	ldr	x20, [sp, #64]
  40556c:	cbz	x20, 4055a8 <ferror@plt+0x2718>
  405570:	mov	w1, #0x41                  	// #65
  405574:	movk	w1, #0x8, lsl #16
  405578:	mov	w2, #0x1b6                 	// #438
  40557c:	mov	x0, x20
  405580:	bl	402950 <open@plt>
  405584:	tbnz	w0, #31, 4062ec <ferror@plt+0x345c>
  405588:	mov	w19, w0
  40558c:	cmp	w0, #0x1
  405590:	b.eq	4055a8 <ferror@plt+0x2718>  // b.none
  405594:	mov	w1, #0x1                   	// #1
  405598:	mov	w0, w19
  40559c:	bl	402dc0 <dup2@plt>
  4055a0:	mov	w0, w19
  4055a4:	bl	402a70 <close@plt>
  4055a8:	ldr	w8, [sp, #20]
  4055ac:	tbz	w8, #0, 4055fc <ferror@plt+0x276c>
  4055b0:	mov	w1, #0x10                  	// #16
  4055b4:	mov	x0, x26
  4055b8:	bl	411560 <ferror@plt+0xe6d0>
  4055bc:	cbz	x26, 4055dc <ferror@plt+0x274c>
  4055c0:	mov	x8, xzr
  4055c4:	mov	x9, x0
  4055c8:	ldr	x10, [x28, x8, lsl #3]
  4055cc:	add	x8, x8, #0x1
  4055d0:	cmp	x8, x26
  4055d4:	str	x10, [x9], #16
  4055d8:	b.cc	4055c8 <ferror@plt+0x2738>  // b.lo, b.ul, b.last
  4055dc:	mov	x1, xzr
  4055e0:	mov	x2, x26
  4055e4:	mov	x3, x20
  4055e8:	bl	406610 <ferror@plt+0x3780>
  4055ec:	b	405c1c <ferror@plt+0x2d8c>
  4055f0:	mov	x21, xzr
  4055f4:	mov	w23, wzr
  4055f8:	b	405dd8 <ferror@plt+0x2f48>
  4055fc:	ldr	x11, [sp, #8]
  405600:	cbnz	x11, 405618 <ferror@plt+0x2788>
  405604:	mov	w0, #0x2                   	// #2
  405608:	bl	40d998 <ferror@plt+0xab08>
  40560c:	cmp	x0, #0x8
  405610:	mov	w8, #0x8                   	// #8
  405614:	csel	x11, x0, x8, cc  // cc = lo, ul, last
  405618:	mov	x8, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  40561c:	sub	x9, x29, #0xe0
  405620:	movk	x8, #0xf0, lsl #48
  405624:	sub	x10, x29, #0xa8
  405628:	add	x9, x9, #0x8
  40562c:	cmp	x11, x8
  405630:	str	x9, [sp, #48]
  405634:	add	x9, x10, #0x8
  405638:	str	x9, [sp, #88]
  40563c:	add	x9, x10, #0x38
  405640:	csel	x8, x11, x8, cc  // cc = lo, ul, last
  405644:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405648:	str	x9, [sp, #80]
  40564c:	lsl	x9, x8, #1
  405650:	str	x8, [sp, #104]
  405654:	add	x8, x8, x8, lsl #4
  405658:	add	x1, x1, #0x4a8
  40565c:	fmov	d9, #1.250000000000000000e-01
  405660:	fmov	d10, #7.500000000000000000e-01
  405664:	lsl	x8, x8, #4
  405668:	str	xzr, [sp, #120]
  40566c:	stur	xzr, [x29, #-200]
  405670:	str	x9, [sp, #72]
  405674:	str	x8, [sp, #56]
  405678:	ldr	x0, [x28]
  40567c:	str	x0, [sp, #128]
  405680:	bl	406cc4 <ferror@plt+0x3e34>
  405684:	cbz	x0, 4062d4 <ferror@plt+0x3444>
  405688:	ldr	x9, [sp, #104]
  40568c:	mov	x27, x0
  405690:	mov	x20, x26
  405694:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  405698:	cmp	x9, #0x2
  40569c:	b.cc	4056cc <ferror@plt+0x283c>  // b.lo, b.ul, b.last
  4056a0:	mov	w21, #0x20                  	// #32
  4056a4:	mov	w8, #0x1                   	// #1
  4056a8:	lsl	x8, x8, #1
  4056ac:	cmp	x8, x9
  4056b0:	add	x21, x21, #0x20
  4056b4:	b.cc	4056a8 <ferror@plt+0x2818>  // b.lo, b.ul, b.last
  4056b8:	ldur	x8, [x29, #-200]
  4056bc:	orr	x9, x21, #0x1
  4056c0:	str	x9, [x29, #8]
  4056c4:	cbnz	x8, 4058d4 <ferror@plt+0x2a44>
  4056c8:	b	4056e0 <ferror@plt+0x2850>
  4056cc:	mov	w21, #0x30                  	// #48
  4056d0:	ldur	x8, [x29, #-200]
  4056d4:	orr	x9, x21, #0x1
  4056d8:	str	x9, [x29, #8]
  4056dc:	cbnz	x8, 4058d4 <ferror@plt+0x2a44>
  4056e0:	mov	x22, xzr
  4056e4:	orr	x20, x21, #0x2
  4056e8:	cbz	x22, 40571c <ferror@plt+0x288c>
  4056ec:	ldr	x19, [x28, x22, lsl #3]
  4056f0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4056f4:	add	x1, x1, #0x780
  4056f8:	mov	x0, x19
  4056fc:	bl	402bb0 <strcmp@plt>
  405700:	sub	x2, x29, #0xa8
  405704:	cbz	w0, 40573c <ferror@plt+0x28ac>
  405708:	mov	w0, wzr
  40570c:	mov	x1, x19
  405710:	bl	402e30 <__xstat@plt>
  405714:	cbz	w0, 405748 <ferror@plt+0x28b8>
  405718:	b	405ef8 <ferror@plt+0x3068>
  40571c:	mov	x0, x27
  405720:	bl	4028d0 <fileno@plt>
  405724:	mov	w1, w0
  405728:	sub	x2, x29, #0xa8
  40572c:	mov	w0, wzr
  405730:	bl	402d60 <__fxstat@plt>
  405734:	cbz	w0, 405748 <ferror@plt+0x28b8>
  405738:	b	405ef8 <ferror@plt+0x3068>
  40573c:	mov	w1, wzr
  405740:	bl	402d60 <__fxstat@plt>
  405744:	cbnz	w0, 405ef8 <ferror@plt+0x3068>
  405748:	ldur	w8, [x29, #-152]
  40574c:	and	w8, w8, #0xf000
  405750:	cmp	w8, #0x8, lsl #12
  405754:	b.ne	40576c <ferror@plt+0x28dc>  // b.any
  405758:	ldur	x19, [x29, #-120]
  40575c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405760:	ldr	x8, [x8, #1480]
  405764:	cbnz	x8, 405854 <ferror@plt+0x29c4>
  405768:	b	405784 <ferror@plt+0x28f4>
  40576c:	ldr	x8, [x23, #1432]
  405770:	cbnz	x8, 40588c <ferror@plt+0x29fc>
  405774:	mov	w19, #0x20000               	// #131072
  405778:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40577c:	ldr	x8, [x8, #1480]
  405780:	cbnz	x8, 405854 <ferror@plt+0x29c4>
  405784:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  405788:	add	x9, x9, #0x598
  40578c:	ldr	x8, [x9]
  405790:	str	x8, [x9, #48]
  405794:	cbnz	x8, 405854 <ferror@plt+0x29c4>
  405798:	sub	x1, x29, #0x28
  40579c:	mov	w0, #0x2                   	// #2
  4057a0:	bl	402cf0 <getrlimit@plt>
  4057a4:	ldur	x8, [x29, #-40]
  4057a8:	cmp	w0, #0x0
  4057ac:	sub	x1, x29, #0x28
  4057b0:	mov	w0, #0x9                   	// #9
  4057b4:	csinv	x24, x8, xzr, eq  // eq = none
  4057b8:	bl	402cf0 <getrlimit@plt>
  4057bc:	ldur	x8, [x29, #-40]
  4057c0:	sub	x1, x29, #0x28
  4057c4:	cmp	x8, x24
  4057c8:	ccmp	w0, #0x0, #0x0, cc  // cc = lo, ul, last
  4057cc:	csel	x8, x8, x24, eq  // eq = none
  4057d0:	mov	w0, #0x5                   	// #5
  4057d4:	lsr	x24, x8, #1
  4057d8:	bl	402cf0 <getrlimit@plt>
  4057dc:	cbnz	w0, 4057f8 <ferror@plt+0x2968>
  4057e0:	ldur	x8, [x29, #-40]
  4057e4:	lsr	x8, x8, #4
  4057e8:	lsl	x9, x8, #4
  4057ec:	sub	x8, x9, x8
  4057f0:	cmp	x8, x24
  4057f4:	csel	x24, x8, x24, cc  // cc = lo, ul, last
  4057f8:	bl	40dc3c <ferror@plt+0xadac>
  4057fc:	mov	v8.16b, v0.16b
  405800:	bl	40dbac <ferror@plt+0xad1c>
  405804:	fmul	d1, d0, d9
  405808:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40580c:	fmul	d0, d0, d10
  405810:	fcmp	d8, d1
  405814:	ucvtf	d2, x24
  405818:	ldr	w8, [x8, #968]
  40581c:	fcsel	d1, d8, d1, gt
  405820:	fcvtzu	x9, d0
  405824:	fcmp	d0, d2
  405828:	csel	x9, x9, x24, mi  // mi = first
  40582c:	ucvtf	d0, x9
  405830:	fcvtzu	x10, d1
  405834:	fcmp	d1, d0
  405838:	add	x8, x8, x8, lsl #4
  40583c:	csel	x9, x10, x9, mi  // mi = first
  405840:	lsl	x8, x8, #1
  405844:	cmp	x9, x8
  405848:	csel	x8, x9, x8, hi  // hi = pmore
  40584c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  405850:	str	x8, [x9, #1480]
  405854:	ldr	x10, [x29, #8]
  405858:	orr	x9, xzr, #0x1
  40585c:	madd	x9, x19, x10, x9
  405860:	udiv	x10, x9, x10
  405864:	cmp	x19, x10
  405868:	b.ne	40588c <ferror@plt+0x29fc>  // b.any
  40586c:	sub	x10, x8, x20
  405870:	cmp	x10, x9
  405874:	b.ls	40588c <ferror@plt+0x29fc>  // b.plast
  405878:	add	x22, x22, #0x1
  40587c:	cmp	x26, x22
  405880:	add	x20, x9, x20
  405884:	b.ne	4056e8 <ferror@plt+0x2858>  // b.any
  405888:	b	405890 <ferror@plt+0x2a00>
  40588c:	mov	x20, x8
  405890:	and	x8, x20, #0xffffffffffffffe0
  405894:	add	x19, x8, #0x20
  405898:	mov	x0, x19
  40589c:	bl	402930 <malloc@plt>
  4058a0:	cbnz	x0, 4058b8 <ferror@plt+0x2a28>
  4058a4:	ldr	x8, [x29, #8]
  4058a8:	lsr	x20, x19, #1
  4058ac:	cmp	x20, x8
  4058b0:	b.hi	405890 <ferror@plt+0x2a00>  // b.pmore
  4058b4:	b	40539c <ferror@plt+0x250c>
  4058b8:	ldr	x8, [sp, #48]
  4058bc:	mov	x20, x26
  4058c0:	stur	x0, [x29, #-224]
  4058c4:	stp	x19, xzr, [x29, #-200]
  4058c8:	stur	x21, [x29, #-184]
  4058cc:	sturb	wzr, [x29, #-176]
  4058d0:	stp	xzr, xzr, [x8]
  4058d4:	add	x28, x28, #0x8
  4058d8:	sub	x20, x20, #0x1
  4058dc:	sturb	wzr, [x29, #-176]
  4058e0:	str	x28, [sp, #96]
  4058e4:	b	4059ac <ferror@plt+0x2b1c>
  4058e8:	ldr	x1, [sp, #72]
  4058ec:	adrp	x0, 40a000 <ferror@plt+0x7170>
  4058f0:	add	x0, x0, #0x6c0
  4058f4:	bl	40d360 <ferror@plt+0xa4d0>
  4058f8:	stur	x0, [x29, #-168]
  4058fc:	ldr	x0, [sp, #88]
  405900:	mov	x1, xzr
  405904:	bl	402a60 <pthread_mutex_init@plt>
  405908:	ldr	x0, [sp, #80]
  40590c:	mov	x1, xzr
  405910:	bl	402ce0 <pthread_cond_init@plt>
  405914:	ldr	x0, [sp, #56]
  405918:	bl	4112fc <ferror@plt+0xe46c>
  40591c:	movi	v0.2d, #0x0
  405920:	mov	x22, x0
  405924:	stp	q0, q0, [x0]
  405928:	stp	xzr, x19, [x0, #32]
  40592c:	stp	x19, xzr, [x0, #48]
  405930:	str	wzr, [x0, #80]
  405934:	strb	wzr, [x0, #84]
  405938:	add	x0, x0, #0x58
  40593c:	mov	x1, xzr
  405940:	bl	402a60 <pthread_mutex_init@plt>
  405944:	mov	x23, x27
  405948:	ldr	x27, [sp, #104]
  40594c:	add	x20, x22, #0x88
  405950:	mov	x0, x22
  405954:	mov	x1, x20
  405958:	mov	x2, x24
  40595c:	mov	x3, x27
  405960:	mov	x4, x19
  405964:	mov	w5, wzr
  405968:	bl	40a6ec <ferror@plt+0x785c>
  40596c:	ldur	x22, [x29, #-232]
  405970:	sub	x4, x29, #0xa8
  405974:	mov	x0, x24
  405978:	mov	x1, x27
  40597c:	mov	x2, x19
  405980:	mov	x3, x20
  405984:	mov	x5, x22
  405988:	mov	x6, x28
  40598c:	mov	x27, x23
  405990:	bl	409e48 <ferror@plt+0x6fb8>
  405994:	mov	x20, x26
  405998:	mov	x0, x22
  40599c:	mov	x1, x28
  4059a0:	bl	406588 <ferror@plt+0x36f8>
  4059a4:	ldr	x28, [sp, #96]
  4059a8:	cbnz	w25, 405bec <ferror@plt+0x2d5c>
  4059ac:	ldr	x2, [sp, #128]
  4059b0:	sub	x0, x29, #0xe0
  4059b4:	mov	x1, x27
  4059b8:	mov	x26, x20
  4059bc:	bl	406f24 <ferror@plt+0x4094>
  4059c0:	tbz	w0, #0, 405ad4 <ferror@plt+0x2c44>
  4059c4:	ldurb	w8, [x29, #-176]
  4059c8:	ldur	x20, [x29, #-200]
  4059cc:	cbz	x26, 4059ec <ferror@plt+0x2b5c>
  4059d0:	cbz	w8, 4059ec <ferror@plt+0x2b5c>
  4059d4:	ldp	x9, x10, [x29, #-216]
  4059d8:	sub	x11, x20, x9
  4059dc:	msub	x10, x10, x21, x11
  4059e0:	ldr	x11, [x29, #8]
  4059e4:	cmp	x11, x10
  4059e8:	b.cc	405ad0 <ferror@plt+0x2c40>  // b.lo, b.ul, b.last
  4059ec:	ldur	x23, [x29, #-224]
  4059f0:	ldr	x10, [sp, #120]
  4059f4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  4059f8:	str	xzr, [x9, #1488]
  4059fc:	cbz	w8, 405a40 <ferror@plt+0x2bb0>
  405a00:	ldur	x8, [x29, #-192]
  405a04:	orr	x9, x10, x26
  405a08:	orr	x8, x9, x8
  405a0c:	cbnz	x8, 405a40 <ferror@plt+0x2bb0>
  405a10:	ldr	x1, [sp, #128]
  405a14:	mov	x0, x27
  405a18:	bl	406588 <ferror@plt+0x36f8>
  405a1c:	ldr	x28, [sp, #64]
  405a20:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405a24:	add	x1, x1, #0x979
  405a28:	mov	x0, x28
  405a2c:	bl	406cc4 <ferror@plt+0x3e34>
  405a30:	cbz	x0, 405ee0 <ferror@plt+0x3050>
  405a34:	stur	x0, [x29, #-232]
  405a38:	mov	w25, #0x1                   	// #1
  405a3c:	b	405a5c <ferror@plt+0x2bcc>
  405a40:	add	x10, x10, #0x1
  405a44:	sub	x0, x29, #0xe8
  405a48:	mov	w1, wzr
  405a4c:	str	x10, [sp, #120]
  405a50:	bl	40970c <ferror@plt+0x687c>
  405a54:	mov	w25, wzr
  405a58:	add	x28, x0, #0xd
  405a5c:	ldur	x19, [x29, #-208]
  405a60:	add	x24, x23, x20
  405a64:	str	x23, [sp, #112]
  405a68:	cmp	x19, #0x2
  405a6c:	b.cs	4058e8 <ferror@plt+0x2a58>  // b.hs, b.nlast
  405a70:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405a74:	ldrb	w8, [x8, #1384]
  405a78:	ldur	x22, [x29, #-232]
  405a7c:	sub	x19, x24, #0x20
  405a80:	mov	x20, x26
  405a84:	cmp	w8, #0x1
  405a88:	b.ne	405abc <ferror@plt+0x2c2c>  // b.any
  405a8c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405a90:	ldr	x8, [x8, #1488]
  405a94:	cbz	x8, 405aac <ferror@plt+0x2c1c>
  405a98:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  405a9c:	mov	x0, x19
  405aa0:	add	x1, x1, #0x5d0
  405aa4:	bl	407298 <ferror@plt+0x4408>
  405aa8:	cbz	w0, 405998 <ferror@plt+0x2b08>
  405aac:	ldp	q1, q0, [x19]
  405ab0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405ab4:	add	x8, x8, #0x5d0
  405ab8:	stp	q1, q0, [x8]
  405abc:	mov	x0, x19
  405ac0:	mov	x1, x22
  405ac4:	mov	x2, x28
  405ac8:	bl	408370 <ferror@plt+0x54e0>
  405acc:	b	405998 <ferror@plt+0x2b08>
  405ad0:	stur	x9, [x29, #-192]
  405ad4:	ldr	x1, [sp, #128]
  405ad8:	mov	x0, x27
  405adc:	bl	406588 <ferror@plt+0x36f8>
  405ae0:	ldr	x20, [sp, #64]
  405ae4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405ae8:	add	x1, x1, #0x4a8
  405aec:	cbnz	x26, 405678 <ferror@plt+0x27e8>
  405af0:	ldur	x0, [x29, #-224]
  405af4:	bl	402c00 <free@plt>
  405af8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405afc:	ldr	x19, [x8, #1440]
  405b00:	ldr	x21, [sp, #120]
  405b04:	lsr	x8, x21, #59
  405b08:	cbnz	x8, 40539c <ferror@plt+0x250c>
  405b0c:	lsl	x0, x21, #4
  405b10:	bl	4112fc <ferror@plt+0xe46c>
  405b14:	mov	x22, x0
  405b18:	cbz	x19, 405b34 <ferror@plt+0x2ca4>
  405b1c:	add	x8, x22, #0x8
  405b20:	add	x9, x19, #0xd
  405b24:	stp	x9, x19, [x8, #-8]
  405b28:	ldr	x19, [x19]
  405b2c:	add	x8, x8, #0x10
  405b30:	cbnz	x19, 405b20 <ferror@plt+0x2c90>
  405b34:	mov	x0, x22
  405b38:	mov	x1, x21
  405b3c:	mov	x2, x21
  405b40:	mov	x3, x20
  405b44:	bl	406610 <ferror@plt+0x3780>
  405b48:	b	405bf0 <ferror@plt+0x2d60>
  405b4c:	add	x8, x23, #0x40
  405b50:	ldr	w9, [sp, #44]
  405b54:	and	w9, w9, #0xff
  405b58:	cmp	w9, #0x63
  405b5c:	b.ne	405dd4 <ferror@plt+0x2f44>  // b.any
  405b60:	adrp	x28, 427000 <_obstack_memory_used@@Base+0x145ec>
  405b64:	ldr	x22, [x28, #1320]
  405b68:	sub	x24, x8, #0x20
  405b6c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405b70:	sub	x8, x27, x24
  405b74:	add	x1, x1, #0x8b4
  405b78:	mov	w2, #0x5                   	// #5
  405b7c:	mov	x0, xzr
  405b80:	add	x23, x25, x8, asr #5
  405b84:	bl	402d70 <dcgettext@plt>
  405b88:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405b8c:	ldr	x25, [x8, #2984]
  405b90:	mov	x26, x0
  405b94:	sub	x1, x29, #0x28
  405b98:	mov	x0, x23
  405b9c:	bl	40d69c <ferror@plt+0xa80c>
  405ba0:	mov	x5, x0
  405ba4:	mov	w1, #0x1                   	// #1
  405ba8:	mov	x0, x22
  405bac:	mov	x2, x26
  405bb0:	mov	x3, x25
  405bb4:	mov	x4, x19
  405bb8:	mov	w23, #0x1                   	// #1
  405bbc:	bl	402b90 <__fprintf_chk@plt>
  405bc0:	ldr	x22, [x28, #1320]
  405bc4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405bc8:	add	x1, x1, #0x8ca
  405bcc:	mov	w2, #0x5                   	// #5
  405bd0:	mov	x0, xzr
  405bd4:	bl	402d70 <dcgettext@plt>
  405bd8:	mov	x2, x0
  405bdc:	mov	x0, x24
  405be0:	mov	x1, x22
  405be4:	bl	408370 <ferror@plt+0x54e0>
  405be8:	b	405dd8 <ferror@plt+0x2f48>
  405bec:	ldr	x22, [sp, #112]
  405bf0:	mov	x0, x22
  405bf4:	bl	402c00 <free@plt>
  405bf8:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  405bfc:	ldr	w8, [x19, #1404]
  405c00:	cmp	w8, #0x1
  405c04:	b.lt	405c1c <ferror@plt+0x2d8c>  // b.tstop
  405c08:	mov	w0, #0xffffffff            	// #-1
  405c0c:	bl	409bd8 <ferror@plt+0x6d48>
  405c10:	ldr	w8, [x19, #1404]
  405c14:	cmp	w8, #0x0
  405c18:	b.gt	405c08 <ferror@plt+0x2d78>
  405c1c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405c20:	ldrb	w8, [x8, #1381]
  405c24:	cmp	w8, #0x1
  405c28:	b.ne	405c40 <ferror@plt+0x2db0>  // b.any
  405c2c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405c30:	ldr	x0, [x8, #1352]
  405c34:	bl	412154 <ferror@plt+0xf2c4>
  405c38:	cmn	w0, #0x1
  405c3c:	b.eq	406308 <ferror@plt+0x3478>  // b.none
  405c40:	mov	w23, wzr
  405c44:	b	405df4 <ferror@plt+0x2f64>
  405c48:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x145ec>
  405c4c:	add	x21, x21, #0x590
  405c50:	ldr	x0, [x21, #32]
  405c54:	mov	w8, #0x10                  	// #16
  405c58:	cmp	x0, #0x0
  405c5c:	csinc	x8, x8, xzr, eq  // eq = none
  405c60:	lsl	x1, x8, #3
  405c64:	str	x8, [x21, #24]
  405c68:	bl	41137c <ferror@plt+0xe4ec>
  405c6c:	ldr	x8, [x21]
  405c70:	str	x0, [x21, #32]
  405c74:	add	x9, x8, #0x1
  405c78:	mov	x21, x22
  405c7c:	str	x9, [x19, #1424]
  405c80:	str	x20, [x0, x8, lsl #3]
  405c84:	cbnz	x21, 4052f4 <ferror@plt+0x2464>
  405c88:	mov	x0, x28
  405c8c:	bl	402c00 <free@plt>
  405c90:	mov	w0, #0x8                   	// #8
  405c94:	bl	4112fc <ferror@plt+0xe46c>
  405c98:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  405c9c:	mov	x28, x0
  405ca0:	add	x8, x8, #0x780
  405ca4:	mov	w21, #0x1                   	// #1
  405ca8:	str	x8, [x0]
  405cac:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  405cb0:	ldr	x10, [sp, #64]
  405cb4:	ldr	x8, [x11, #1432]
  405cb8:	cbnz	x8, 405304 <ferror@plt+0x2474>
  405cbc:	b	405320 <ferror@plt+0x2490>
  405cc0:	mov	x25, xzr
  405cc4:	ldp	x28, x8, [x29, #-152]
  405cc8:	ldur	x9, [x29, #-168]
  405ccc:	add	x27, x9, x8
  405cd0:	cbz	x22, 405ce8 <ferror@plt+0x2e58>
  405cd4:	sub	x1, x27, #0x20
  405cd8:	sub	x0, x29, #0xe0
  405cdc:	bl	407298 <ferror@plt+0x4408>
  405ce0:	cmp	w0, w26
  405ce4:	b.ge	405e20 <ferror@plt+0x2f90>  // b.tcont
  405ce8:	str	x21, [x29, #8]
  405cec:	mov	x21, x19
  405cf0:	mov	x19, x20
  405cf4:	mov	x20, x25
  405cf8:	sub	x25, x27, x28, lsl #5
  405cfc:	sub	x23, x27, #0x20
  405d00:	cmp	x25, x23
  405d04:	b.cs	405d28 <ferror@plt+0x2e98>  // b.hs, b.nlast
  405d08:	sub	x24, x23, #0x20
  405d0c:	mov	x0, x23
  405d10:	mov	x1, x24
  405d14:	bl	407298 <ferror@plt+0x4408>
  405d18:	cmp	w0, w26
  405d1c:	mov	x23, x24
  405d20:	b.lt	405d00 <ferror@plt+0x2e70>  // b.tstop
  405d24:	b	405db0 <ferror@plt+0x2f20>
  405d28:	ldr	x2, [x23, #8]
  405d2c:	mov	x25, x20
  405d30:	add	x25, x28, x20
  405d34:	mov	x20, x19
  405d38:	cmp	x22, x2
  405d3c:	mov	x19, x21
  405d40:	b.cs	405d5c <ferror@plt+0x2ecc>  // b.hs, b.nlast
  405d44:	ldr	x0, [x29, #8]
  405d48:	lsl	x22, x22, #1
  405d4c:	cbz	x22, 405d64 <ferror@plt+0x2ed4>
  405d50:	cmp	x22, x2
  405d54:	b.cc	405d48 <ferror@plt+0x2eb8>  // b.lo, b.ul, b.last
  405d58:	b	405d68 <ferror@plt+0x2ed8>
  405d5c:	ldr	x21, [x29, #8]
  405d60:	b	405d80 <ferror@plt+0x2ef0>
  405d64:	mov	x22, x2
  405d68:	bl	402c00 <free@plt>
  405d6c:	mov	x0, x22
  405d70:	bl	4112fc <ferror@plt+0xe46c>
  405d74:	stur	x0, [x29, #-224]
  405d78:	ldr	x2, [x23, #8]
  405d7c:	mov	x21, x0
  405d80:	ldr	x1, [x23]
  405d84:	mov	x0, x21
  405d88:	bl	402760 <memcpy@plt>
  405d8c:	ldr	x8, [x23, #8]
  405d90:	sub	x0, x29, #0xa8
  405d94:	mov	x1, x20
  405d98:	mov	x2, x19
  405d9c:	stur	x8, [x29, #-216]
  405da0:	bl	406f24 <ferror@plt+0x4094>
  405da4:	mov	w23, wzr
  405da8:	tbnz	w0, #0, 405cc4 <ferror@plt+0x2e34>
  405dac:	b	405dd8 <ferror@plt+0x2f48>
  405db0:	mov	x25, x20
  405db4:	mov	x20, x19
  405db8:	mov	x19, x21
  405dbc:	ldr	x21, [x29, #8]
  405dc0:	add	x8, x24, #0x20
  405dc4:	ldr	w9, [sp, #44]
  405dc8:	and	w9, w9, #0xff
  405dcc:	cmp	w9, #0x63
  405dd0:	b.eq	405b60 <ferror@plt+0x2cd0>  // b.none
  405dd4:	mov	w23, #0x1                   	// #1
  405dd8:	mov	x0, x20
  405ddc:	mov	x1, x19
  405de0:	bl	406588 <ferror@plt+0x36f8>
  405de4:	ldur	x0, [x29, #-168]
  405de8:	bl	402c00 <free@plt>
  405dec:	mov	x0, x21
  405df0:	bl	402c00 <free@plt>
  405df4:	mov	w0, w23
  405df8:	add	sp, sp, #0x320
  405dfc:	ldp	x20, x19, [sp, #112]
  405e00:	ldp	x22, x21, [sp, #96]
  405e04:	ldp	x24, x23, [sp, #80]
  405e08:	ldp	x26, x25, [sp, #64]
  405e0c:	ldp	x28, x27, [sp, #48]
  405e10:	ldp	x29, x30, [sp, #32]
  405e14:	ldp	d9, d8, [sp, #16]
  405e18:	ldr	d10, [sp], #128
  405e1c:	ret
  405e20:	mov	x8, x27
  405e24:	ldr	w9, [sp, #44]
  405e28:	and	w9, w9, #0xff
  405e2c:	cmp	w9, #0x63
  405e30:	b.eq	405b60 <ferror@plt+0x2cd0>  // b.none
  405e34:	b	405dd4 <ferror@plt+0x2f44>
  405e38:	mov	w0, #0x2                   	// #2
  405e3c:	bl	402fac <ferror@plt+0x11c>
  405e40:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405e44:	add	x1, x1, #0x159
  405e48:	mov	w2, #0x5                   	// #5
  405e4c:	mov	x0, xzr
  405e50:	bl	402d70 <dcgettext@plt>
  405e54:	ldr	x1, [x28, x19, lsl #3]
  405e58:	mov	x19, x0
  405e5c:	mov	w0, #0x4                   	// #4
  405e60:	bl	40f628 <ferror@plt+0xc798>
  405e64:	mov	x3, x0
  405e68:	mov	w0, #0x2                   	// #2
  405e6c:	mov	w1, wzr
  405e70:	mov	x2, x19
  405e74:	bl	4027f0 <error@plt>
  405e78:	sub	x1, x29, #0xa8
  405e7c:	strb	wzr, [x0, #55]
  405e80:	strh	wzr, [x0, #48]
  405e84:	bl	406e34 <ferror@plt+0x3fa4>
  405e88:	sub	x0, x29, #0xa8
  405e8c:	bl	406550 <ferror@plt+0x36c0>
  405e90:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405e94:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  405e98:	ldr	x0, [x8, #1344]
  405e9c:	ldr	x3, [x9, #1192]
  405ea0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  405ea4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  405ea8:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  405eac:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x25ec>
  405eb0:	add	x1, x1, #0xfbc
  405eb4:	add	x2, x2, #0xce
  405eb8:	add	x4, x4, #0xdc
  405ebc:	add	x5, x5, #0xe9
  405ec0:	mov	x6, xzr
  405ec4:	bl	4111d4 <ferror@plt+0xe344>
  405ec8:	mov	w0, wzr
  405ecc:	bl	4027d0 <exit@plt>
  405ed0:	mov	w0, wzr
  405ed4:	bl	402fac <ferror@plt+0x11c>
  405ed8:	mov	w0, #0x2                   	// #2
  405edc:	b	406100 <ferror@plt+0x3270>
  405ee0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405ee4:	add	x1, x1, #0x6f9
  405ee8:	mov	w2, #0x5                   	// #5
  405eec:	bl	402d70 <dcgettext@plt>
  405ef0:	mov	x1, x28
  405ef4:	bl	406c50 <ferror@plt+0x3dc0>
  405ef8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405efc:	add	x1, x1, #0xa83
  405f00:	mov	w2, #0x5                   	// #5
  405f04:	mov	x0, xzr
  405f08:	bl	402d70 <dcgettext@plt>
  405f0c:	ldr	x1, [x28, x22, lsl #3]
  405f10:	bl	406c50 <ferror@plt+0x3dc0>
  405f14:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x15ec>
  405f18:	add	x0, x0, #0xfc9
  405f1c:	bl	406550 <ferror@plt+0x36c0>
  405f20:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f24:	add	x1, x1, #0x98
  405f28:	b	4060e0 <ferror@plt+0x3250>
  405f2c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f30:	add	x1, x1, #0xa5
  405f34:	mov	w2, #0x5                   	// #5
  405f38:	mov	x0, xzr
  405f3c:	bl	402d70 <dcgettext@plt>
  405f40:	ldr	x8, [x19, #1328]
  405f44:	mov	x19, x0
  405f48:	mov	x0, x8
  405f4c:	bl	40fa8c <ferror@plt+0xcbfc>
  405f50:	b	405e64 <ferror@plt+0x2fd4>
  405f54:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f58:	add	x1, x1, #0xbc
  405f5c:	b	4060e0 <ferror@plt+0x3250>
  405f60:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  405f64:	ldr	x0, [x8, #1328]
  405f68:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f6c:	add	x1, x1, #0x24
  405f70:	bl	4064ec <ferror@plt+0x365c>
  405f74:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f78:	add	x1, x1, #0x76
  405f7c:	b	4060e0 <ferror@plt+0x3250>
  405f80:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x5ec>
  405f84:	add	x3, x3, #0xa80
  405f88:	mov	w2, #0x7                   	// #7
  405f8c:	b	40610c <ferror@plt+0x327c>
  405f90:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405f94:	add	x1, x1, #0x56
  405f98:	b	4060e0 <ferror@plt+0x3250>
  405f9c:	cmp	w28, #0x1
  405fa0:	b.ne	4062b8 <ferror@plt+0x3428>  // b.any
  405fa4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405fa8:	add	x1, x1, #0x67e
  405fac:	mov	w2, #0x5                   	// #5
  405fb0:	mov	x0, xzr
  405fb4:	mov	w22, w11
  405fb8:	bl	402d70 <dcgettext@plt>
  405fbc:	ldr	x8, [sp, #72]
  405fc0:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  405fc4:	add	x9, x9, #0xa80
  405fc8:	mov	x21, x0
  405fcc:	lsl	x8, x8, #5
  405fd0:	ldr	x20, [x9, x8]
  405fd4:	mov	x0, x27
  405fd8:	bl	40fa8c <ferror@plt+0xcbfc>
  405fdc:	mov	x4, x0
  405fe0:	mov	w0, wzr
  405fe4:	mov	w1, wzr
  405fe8:	mov	x2, x21
  405fec:	mov	x3, x20
  405ff0:	bl	4027f0 <error@plt>
  405ff4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  405ff8:	add	x1, x1, #0x699
  405ffc:	mov	w2, #0x5                   	// #5
  406000:	mov	x0, xzr
  406004:	bl	402d70 <dcgettext@plt>
  406008:	mov	x19, x0
  40600c:	sub	x1, x29, #0xa8
  406010:	mov	w0, w22
  406014:	bl	40d664 <ferror@plt+0xa7d4>
  406018:	b	40608c <ferror@plt+0x31fc>
  40601c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406020:	add	x1, x1, #0x647
  406024:	mov	w2, #0x5                   	// #5
  406028:	mov	x0, xzr
  40602c:	bl	402d70 <dcgettext@plt>
  406030:	ldr	x8, [sp, #72]
  406034:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  406038:	add	x9, x9, #0xa80
  40603c:	mov	x21, x0
  406040:	lsl	x8, x8, #5
  406044:	ldr	x20, [x9, x8]
  406048:	mov	x0, x27
  40604c:	bl	40fa8c <ferror@plt+0xcbfc>
  406050:	mov	x4, x0
  406054:	mov	w0, wzr
  406058:	mov	w1, wzr
  40605c:	mov	x2, x21
  406060:	mov	x3, x20
  406064:	bl	4027f0 <error@plt>
  406068:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40606c:	add	x1, x1, #0x660
  406070:	mov	w2, #0x5                   	// #5
  406074:	mov	x0, xzr
  406078:	bl	402d70 <dcgettext@plt>
  40607c:	mov	x19, x0
  406080:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  406084:	add	x0, x0, #0x67c
  406088:	bl	40fa8c <ferror@plt+0xcbfc>
  40608c:	mov	x4, x0
  406090:	mov	w0, #0x2                   	// #2
  406094:	mov	w1, wzr
  406098:	mov	x2, x19
  40609c:	mov	x3, x20
  4060a0:	bl	4027f0 <error@plt>
  4060a4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4060a8:	add	x1, x1, #0xfcc
  4060ac:	b	4060e0 <ferror@plt+0x3250>
  4060b0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4060b4:	ldr	x0, [x8, #1328]
  4060b8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  4060bc:	add	x1, x1, #0xf9c
  4060c0:	bl	4064ec <ferror@plt+0x365c>
  4060c4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4060c8:	ldr	x0, [x8, #1328]
  4060cc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4060d0:	add	x1, x1, #0xf
  4060d4:	bl	4064ec <ferror@plt+0x365c>
  4060d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4060dc:	add	x1, x1, #0x6d6
  4060e0:	mov	w2, #0x5                   	// #5
  4060e4:	mov	x0, xzr
  4060e8:	bl	402d70 <dcgettext@plt>
  4060ec:	mov	x2, x0
  4060f0:	mov	w0, #0x2                   	// #2
  4060f4:	mov	w1, wzr
  4060f8:	bl	4027f0 <error@plt>
  4060fc:	mov	w0, #0x1                   	// #1
  406100:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x5ec>
  406104:	add	x3, x3, #0xa80
  406108:	mov	w2, #0x53                  	// #83
  40610c:	mov	w1, w19
  406110:	mov	x4, x22
  406114:	bl	411ca4 <ferror@plt+0xee14>
  406118:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40611c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  406120:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x15ec>
  406124:	add	x0, x0, #0xb03
  406128:	add	x1, x1, #0xf61
  40612c:	add	x3, x3, #0xf6c
  406130:	mov	w2, #0x1112                	// #4370
  406134:	bl	402df0 <__assert_fail@plt>
  406138:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  40613c:	add	x1, x1, #0xf9c
  406140:	mov	x0, x19
  406144:	bl	4064ec <ferror@plt+0x365c>
  406148:	tst	w9, #0xff
  40614c:	mov	w8, #0x6f                  	// #111
  406150:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  406154:	csel	w8, w9, w8, ne  // ne = any
  406158:	add	x0, x0, #0x3d8
  40615c:	strb	w8, [x0]
  406160:	bl	406550 <ferror@plt+0x36c0>
  406164:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406168:	add	x1, x1, #0xf5
  40616c:	mov	w2, #0x5                   	// #5
  406170:	mov	x0, xzr
  406174:	bl	402d70 <dcgettext@plt>
  406178:	ldr	x1, [x28]
  40617c:	mov	x19, x0
  406180:	mov	w0, #0x4                   	// #4
  406184:	bl	40f628 <ferror@plt+0xc798>
  406188:	mov	x3, x0
  40618c:	mov	w0, wzr
  406190:	mov	w1, wzr
  406194:	mov	x2, x19
  406198:	bl	4027f0 <error@plt>
  40619c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4061a0:	ldr	x19, [x8, #1320]
  4061a4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4061a8:	add	x1, x1, #0x106
  4061ac:	mov	w2, #0x5                   	// #5
  4061b0:	mov	x0, xzr
  4061b4:	bl	402d70 <dcgettext@plt>
  4061b8:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  4061bc:	mov	x3, x0
  4061c0:	add	x2, x2, #0xede
  4061c4:	mov	w1, #0x1                   	// #1
  4061c8:	mov	x0, x19
  4061cc:	bl	402b90 <__fprintf_chk@plt>
  4061d0:	mov	w0, #0x2                   	// #2
  4061d4:	bl	402fac <ferror@plt+0x11c>
  4061d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4061dc:	add	x1, x1, #0x6f9
  4061e0:	mov	w2, #0x5                   	// #5
  4061e4:	bl	402d70 <dcgettext@plt>
  4061e8:	mov	x1, x25
  4061ec:	bl	406c50 <ferror@plt+0x3dc0>
  4061f0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4061f4:	add	x1, x1, #0x13a
  4061f8:	b	406204 <ferror@plt+0x3374>
  4061fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406200:	add	x1, x1, #0x1be
  406204:	mov	w2, #0x5                   	// #5
  406208:	mov	x0, xzr
  40620c:	bl	402d70 <dcgettext@plt>
  406210:	mov	x19, x0
  406214:	mov	w0, #0x4                   	// #4
  406218:	mov	x1, x25
  40621c:	b	405e60 <ferror@plt+0x2fd0>
  406220:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406224:	add	x1, x1, #0x24f
  406228:	mov	w2, #0x5                   	// #5
  40622c:	mov	x0, xzr
  406230:	bl	402d70 <dcgettext@plt>
  406234:	ldr	x1, [x28, #8]
  406238:	mov	x19, x0
  40623c:	mov	w0, #0x4                   	// #4
  406240:	bl	40f628 <ferror@plt+0xc798>
  406244:	ldr	w8, [sp, #44]
  406248:	mov	x3, x0
  40624c:	mov	w0, #0x2                   	// #2
  406250:	mov	w1, wzr
  406254:	and	w4, w8, #0xff
  406258:	mov	x2, x19
  40625c:	bl	4027f0 <error@plt>
  406260:	ldr	w8, [sp, #44]
  406264:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x145ec>
  406268:	add	x0, x0, #0x3c0
  40626c:	strb	w8, [x0]
  406270:	bl	406550 <ferror@plt+0x36c0>
  406274:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406278:	add	x1, x1, #0x6f9
  40627c:	mov	w2, #0x5                   	// #5
  406280:	bl	402d70 <dcgettext@plt>
  406284:	mov	x1, x19
  406288:	bl	406c50 <ferror@plt+0x3dc0>
  40628c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406290:	add	x1, x1, #0x6f9
  406294:	mov	w2, #0x5                   	// #5
  406298:	b	4062ac <ferror@plt+0x341c>
  40629c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4062a0:	add	x1, x1, #0x275
  4062a4:	mov	w2, #0x5                   	// #5
  4062a8:	mov	x0, xzr
  4062ac:	bl	402d70 <dcgettext@plt>
  4062b0:	ldr	x1, [sp, #24]
  4062b4:	bl	406c50 <ferror@plt+0x3dc0>
  4062b8:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x5ec>
  4062bc:	add	x3, x3, #0xa80
  4062c0:	mov	w2, #0x4                   	// #4
  4062c4:	mov	w0, w28
  4062c8:	ldr	x1, [sp, #72]
  4062cc:	mov	x4, x27
  4062d0:	bl	411ca4 <ferror@plt+0xee14>
  4062d4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4062d8:	add	x1, x1, #0x6f9
  4062dc:	mov	w2, #0x5                   	// #5
  4062e0:	bl	402d70 <dcgettext@plt>
  4062e4:	ldr	x1, [sp, #128]
  4062e8:	bl	406c50 <ferror@plt+0x3dc0>
  4062ec:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4062f0:	add	x1, x1, #0x6f9
  4062f4:	mov	w2, #0x5                   	// #5
  4062f8:	mov	x0, xzr
  4062fc:	bl	402d70 <dcgettext@plt>
  406300:	mov	x1, x20
  406304:	bl	406c50 <ferror@plt+0x3dc0>
  406308:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40630c:	add	x1, x1, #0x275
  406310:	mov	w2, #0x5                   	// #5
  406314:	mov	x0, xzr
  406318:	bl	402d70 <dcgettext@plt>
  40631c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406320:	add	x1, x1, #0x780
  406324:	bl	406c50 <ferror@plt+0x3dc0>
  406328:	stp	x29, x30, [sp, #-48]!
  40632c:	str	x21, [sp, #16]
  406330:	stp	x20, x19, [sp, #32]
  406334:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x145ec>
  406338:	ldr	x21, [x20, #1440]
  40633c:	mov	w19, w0
  406340:	mov	x29, sp
  406344:	cbz	x21, 406358 <ferror@plt+0x34c8>
  406348:	add	x0, x21, #0xd
  40634c:	bl	402e70 <unlink@plt>
  406350:	ldr	x21, [x21]
  406354:	cbnz	x21, 406348 <ferror@plt+0x34b8>
  406358:	mov	w0, w19
  40635c:	mov	x1, xzr
  406360:	str	xzr, [x20, #1440]
  406364:	bl	4028e0 <signal@plt>
  406368:	mov	w0, w19
  40636c:	ldp	x20, x19, [sp, #32]
  406370:	ldr	x21, [sp, #16]
  406374:	ldp	x29, x30, [sp], #48
  406378:	b	4027e0 <raise@plt>
  40637c:	sub	sp, sp, #0xc0
  406380:	stp	x29, x30, [sp, #144]
  406384:	str	x21, [sp, #160]
  406388:	stp	x20, x19, [sp, #176]
  40638c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x145ec>
  406390:	ldr	x8, [x20, #1440]
  406394:	add	x29, sp, #0x90
  406398:	cbz	x8, 4063fc <ferror@plt+0x356c>
  40639c:	add	x8, sp, #0x8
  4063a0:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x145ec>
  4063a4:	add	x19, x8, #0x8
  4063a8:	add	x21, x21, #0x5a0
  4063ac:	add	x1, x21, #0x50
  4063b0:	mov	w0, wzr
  4063b4:	mov	x2, x19
  4063b8:	bl	402780 <pthread_sigmask@plt>
  4063bc:	cmp	w0, #0x0
  4063c0:	cset	w8, eq  // eq = none
  4063c4:	strb	w8, [sp, #8]
  4063c8:	ldr	x21, [x21]
  4063cc:	cbz	x21, 4063e4 <ferror@plt+0x3554>
  4063d0:	add	x0, x21, #0xd
  4063d4:	bl	402e70 <unlink@plt>
  4063d8:	ldr	x21, [x21]
  4063dc:	cbnz	x21, 4063d0 <ferror@plt+0x3540>
  4063e0:	ldrb	w8, [sp, #8]
  4063e4:	str	xzr, [x20, #1440]
  4063e8:	cbz	w8, 4063fc <ferror@plt+0x356c>
  4063ec:	mov	w0, #0x2                   	// #2
  4063f0:	mov	x1, x19
  4063f4:	mov	x2, xzr
  4063f8:	bl	402780 <pthread_sigmask@plt>
  4063fc:	bl	40ae38 <ferror@plt+0x7fa8>
  406400:	ldp	x20, x19, [sp, #176]
  406404:	ldr	x21, [sp, #160]
  406408:	ldp	x29, x30, [sp, #144]
  40640c:	add	sp, sp, #0xc0
  406410:	ret
  406414:	sub	sp, sp, #0x40
  406418:	stp	x29, x30, [sp, #16]
  40641c:	add	x29, sp, #0x10
  406420:	adrp	x4, 415000 <_obstack_memory_used@@Base+0x25ec>
  406424:	str	x21, [sp, #32]
  406428:	stp	x20, x19, [sp, #48]
  40642c:	mov	x20, x2
  406430:	mov	x21, x1
  406434:	add	x4, x4, #0xfb8
  406438:	add	x1, x29, #0x18
  40643c:	add	x3, sp, #0x8
  406440:	mov	w2, #0xa                   	// #10
  406444:	mov	x19, x0
  406448:	bl	411d68 <ferror@plt+0xeed8>
  40644c:	cmp	w0, #0x4
  406450:	b.hi	40647c <ferror@plt+0x35ec>  // b.pmore
  406454:	adrp	x9, 413000 <_obstack_memory_used@@Base+0x5ec>
  406458:	mov	w8, w0
  40645c:	add	x9, x9, #0xa5c
  406460:	adr	x10, 406474 <ferror@plt+0x35e4>
  406464:	ldrb	w11, [x9, x8]
  406468:	add	x10, x10, x11, lsl #2
  40646c:	mov	x8, #0xffffffffffffffff    	// #-1
  406470:	br	x10
  406474:	ldr	x8, [sp, #8]
  406478:	str	x8, [x21]
  40647c:	ldr	x0, [x29, #24]
  406480:	ldp	x20, x19, [sp, #48]
  406484:	ldr	x21, [sp, #32]
  406488:	ldp	x29, x30, [sp, #16]
  40648c:	add	sp, sp, #0x40
  406490:	ret
  406494:	cbnz	x20, 4064a0 <ferror@plt+0x3610>
  406498:	mov	x0, xzr
  40649c:	b	406480 <ferror@plt+0x35f0>
  4064a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4064a4:	add	x1, x1, #0x5a4
  4064a8:	mov	w2, #0x5                   	// #5
  4064ac:	mov	x0, xzr
  4064b0:	bl	402d70 <dcgettext@plt>
  4064b4:	mov	x21, x0
  4064b8:	mov	w2, #0x5                   	// #5
  4064bc:	mov	x0, xzr
  4064c0:	mov	x1, x20
  4064c4:	bl	402d70 <dcgettext@plt>
  4064c8:	mov	x20, x0
  4064cc:	mov	x0, x19
  4064d0:	bl	40fa8c <ferror@plt+0xcbfc>
  4064d4:	mov	x4, x0
  4064d8:	mov	w0, #0x2                   	// #2
  4064dc:	mov	w1, wzr
  4064e0:	mov	x2, x21
  4064e4:	mov	x3, x20
  4064e8:	bl	4027f0 <error@plt>
  4064ec:	stp	x29, x30, [sp, #-48]!
  4064f0:	stp	x20, x19, [sp, #32]
  4064f4:	mov	x19, x1
  4064f8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4064fc:	mov	x20, x0
  406500:	add	x1, x1, #0x5c5
  406504:	mov	w2, #0x5                   	// #5
  406508:	mov	x0, xzr
  40650c:	str	x21, [sp, #16]
  406510:	mov	x29, sp
  406514:	bl	402d70 <dcgettext@plt>
  406518:	mov	x21, x0
  40651c:	mov	w2, #0x5                   	// #5
  406520:	mov	x0, xzr
  406524:	mov	x1, x19
  406528:	bl	402d70 <dcgettext@plt>
  40652c:	mov	x19, x0
  406530:	mov	x0, x20
  406534:	bl	40fa8c <ferror@plt+0xcbfc>
  406538:	mov	x4, x0
  40653c:	mov	w0, #0x2                   	// #2
  406540:	mov	w1, wzr
  406544:	mov	x2, x21
  406548:	mov	x3, x19
  40654c:	bl	4027f0 <error@plt>
  406550:	stp	x29, x30, [sp, #-32]!
  406554:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406558:	str	x19, [sp, #16]
  40655c:	mov	x19, x0
  406560:	add	x1, x1, #0x628
  406564:	mov	w2, #0x5                   	// #5
  406568:	mov	x0, xzr
  40656c:	mov	x29, sp
  406570:	bl	402d70 <dcgettext@plt>
  406574:	mov	x2, x0
  406578:	mov	w0, #0x2                   	// #2
  40657c:	mov	w1, wzr
  406580:	mov	x3, x19
  406584:	bl	4027f0 <error@plt>
  406588:	stp	x29, x30, [sp, #-32]!
  40658c:	stp	x20, x19, [sp, #16]
  406590:	mov	x29, sp
  406594:	mov	x19, x1
  406598:	mov	x20, x0
  40659c:	bl	4028d0 <fileno@plt>
  4065a0:	cmp	w0, #0x1
  4065a4:	b.eq	4065c4 <ferror@plt+0x3734>  // b.none
  4065a8:	cbnz	w0, 4065dc <ferror@plt+0x374c>
  4065ac:	ldrb	w8, [x20]
  4065b0:	tbz	w8, #4, 4065e8 <ferror@plt+0x3758>
  4065b4:	mov	x0, x20
  4065b8:	ldp	x20, x19, [sp, #16]
  4065bc:	ldp	x29, x30, [sp], #32
  4065c0:	b	402d00 <clearerr_unlocked@plt>
  4065c4:	mov	x0, x20
  4065c8:	bl	402c80 <fflush_unlocked@plt>
  4065cc:	cbz	w0, 4065e8 <ferror@plt+0x3758>
  4065d0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4065d4:	add	x1, x1, #0x771
  4065d8:	b	4065fc <ferror@plt+0x376c>
  4065dc:	mov	x0, x20
  4065e0:	bl	412154 <ferror@plt+0xf2c4>
  4065e4:	cbnz	w0, 4065f4 <ferror@plt+0x3764>
  4065e8:	ldp	x20, x19, [sp, #16]
  4065ec:	ldp	x29, x30, [sp], #32
  4065f0:	ret
  4065f4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4065f8:	add	x1, x1, #0x275
  4065fc:	mov	w2, #0x5                   	// #5
  406600:	mov	x0, xzr
  406604:	bl	402d70 <dcgettext@plt>
  406608:	mov	x1, x19
  40660c:	bl	406c50 <ferror@plt+0x3dc0>
  406610:	sub	sp, sp, #0x120
  406614:	stp	x26, x25, [sp, #224]
  406618:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  40661c:	ldr	w8, [x25, #968]
  406620:	stp	x28, x27, [sp, #208]
  406624:	stp	x22, x21, [sp, #256]
  406628:	mov	x28, x2
  40662c:	mov	x22, x1
  406630:	cmp	x8, x2
  406634:	stp	x29, x30, [sp, #192]
  406638:	stp	x24, x23, [sp, #240]
  40663c:	stp	x20, x19, [sp, #272]
  406640:	add	x29, sp, #0xc0
  406644:	str	x3, [sp, #16]
  406648:	str	x0, [sp, #32]
  40664c:	b.cs	40681c <ferror@plt+0x398c>  // b.hs, b.nlast
  406650:	add	x9, x0, #0x8
  406654:	str	x9, [sp, #8]
  406658:	b	40668c <ferror@plt+0x37fc>
  40665c:	ldr	x10, [sp, #32]
  406660:	sub	x8, x28, x21
  406664:	add	x0, x10, x19, lsl #4
  406668:	add	x1, x10, x21, lsl #4
  40666c:	lsl	x2, x8, #4
  406670:	bl	402770 <memmove@plt>
  406674:	ldr	w8, [x25, #968]
  406678:	add	x9, x19, x28
  40667c:	sub	x28, x9, x21
  406680:	add	x22, x22, x19
  406684:	cmp	x28, x8
  406688:	b.ls	40681c <ferror@plt+0x398c>  // b.plast
  40668c:	mov	w8, w8
  406690:	cmp	x28, x8
  406694:	b.cs	406750 <ferror@plt+0x38c0>  // b.hs, b.nlast
  406698:	mov	x19, xzr
  40669c:	mov	x21, xzr
  4066a0:	mov	x9, x28
  4066a4:	udiv	x10, x19, x8
  4066a8:	neg	x11, x19
  4066ac:	madd	x10, x10, x8, x11
  4066b0:	add	x8, x8, x10
  4066b4:	subs	x8, x9, x8
  4066b8:	b.ls	40665c <ferror@plt+0x37cc>  // b.plast
  4066bc:	sub	x0, x29, #0x10
  4066c0:	mov	w1, wzr
  4066c4:	mov	x20, x28
  4066c8:	add	x26, x8, #0x1
  4066cc:	bl	40970c <ferror@plt+0x687c>
  4066d0:	ldr	x8, [sp, #32]
  4066d4:	ldur	x27, [x29, #-16]
  4066d8:	mov	x24, x0
  4066dc:	add	x2, sp, #0x30
  4066e0:	add	x25, x8, x21, lsl #4
  4066e4:	mov	x0, x25
  4066e8:	mov	x1, x26
  4066ec:	bl	408d00 <ferror@plt+0x5e70>
  4066f0:	mov	x23, x0
  4066f4:	cmp	x0, x26
  4066f8:	b.cs	406704 <ferror@plt+0x3874>  // b.hs, b.nlast
  4066fc:	cmp	x23, #0x1
  406700:	b.ls	4067fc <ferror@plt+0x396c>  // b.plast
  406704:	ldr	x5, [sp, #48]
  406708:	add	x28, x24, #0xd
  40670c:	cmp	x22, x26
  406710:	csel	x1, x22, x26, cc  // cc = lo, ul, last
  406714:	mov	x0, x25
  406718:	mov	x2, x23
  40671c:	mov	x3, x27
  406720:	mov	x4, x28
  406724:	bl	408f6c <ferror@plt+0x60dc>
  406728:	ldr	x10, [sp, #32]
  40672c:	subs	x8, x22, x23
  406730:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  406734:	add	x21, x23, x21
  406738:	add	x9, x10, x19, lsl #4
  40673c:	add	x19, x19, #0x1
  406740:	stp	x28, x24, [x9]
  406744:	mov	x28, x20
  406748:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  40674c:	b	406660 <ferror@plt+0x37d0>
  406750:	ldr	x20, [sp, #8]
  406754:	mov	x21, xzr
  406758:	mov	x19, xzr
  40675c:	str	x28, [sp, #24]
  406760:	b	4067b8 <ferror@plt+0x3928>
  406764:	ldr	x5, [sp, #48]
  406768:	add	x28, x24, #0xd
  40676c:	cmp	x22, x27
  406770:	csel	x1, x22, x27, cc  // cc = lo, ul, last
  406774:	mov	x0, x25
  406778:	mov	x2, x23
  40677c:	mov	x3, x26
  406780:	mov	x4, x28
  406784:	bl	408f6c <ferror@plt+0x60dc>
  406788:	stp	x28, x24, [x20, #-8]
  40678c:	subs	x8, x22, x23
  406790:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  406794:	ldr	x28, [sp, #24]
  406798:	csel	x22, xzr, x8, cc  // cc = lo, ul, last
  40679c:	ldr	w8, [x25, #968]
  4067a0:	add	x21, x23, x21
  4067a4:	sub	x9, x28, x21
  4067a8:	add	x19, x19, #0x1
  4067ac:	cmp	x9, x8
  4067b0:	add	x20, x20, #0x10
  4067b4:	b.cc	4066a4 <ferror@plt+0x3814>  // b.lo, b.ul, b.last
  4067b8:	sub	x0, x29, #0x10
  4067bc:	mov	w1, wzr
  4067c0:	bl	40970c <ferror@plt+0x687c>
  4067c4:	ldr	x8, [sp, #32]
  4067c8:	ldr	w27, [x25, #968]
  4067cc:	ldur	x26, [x29, #-16]
  4067d0:	mov	x24, x0
  4067d4:	add	x25, x8, x21, lsl #4
  4067d8:	add	x2, sp, #0x30
  4067dc:	mov	x0, x25
  4067e0:	mov	x1, x27
  4067e4:	bl	408d00 <ferror@plt+0x5e70>
  4067e8:	mov	x23, x0
  4067ec:	cmp	x0, x27
  4067f0:	b.cs	406764 <ferror@plt+0x38d4>  // b.hs, b.nlast
  4067f4:	cmp	x23, #0x1
  4067f8:	b.hi	406764 <ferror@plt+0x38d4>  // b.pmore
  4067fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406800:	add	x1, x1, #0x6f9
  406804:	mov	w2, #0x5                   	// #5
  406808:	mov	x0, xzr
  40680c:	bl	402d70 <dcgettext@plt>
  406810:	lsl	x8, x23, #4
  406814:	ldr	x1, [x25, x8]
  406818:	bl	406c50 <ferror@plt+0x3dc0>
  40681c:	ldr	x21, [sp, #32]
  406820:	cmp	x22, x28
  406824:	b.cs	406acc <ferror@plt+0x3c3c>  // b.hs, b.nlast
  406828:	ldr	x8, [sp, #16]
  40682c:	cbz	x8, 406990 <ferror@plt+0x3b00>
  406830:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x25ec>
  406834:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  406838:	mov	x26, xzr
  40683c:	add	x23, x21, x22, lsl #4
  406840:	add	x24, x24, #0x780
  406844:	add	x25, x25, #0x670
  406848:	mov	x20, x22
  40684c:	b	406868 <ferror@plt+0x39d8>
  406850:	add	x8, x26, #0xd
  406854:	stp	x8, x26, [x23]
  406858:	add	x20, x20, #0x1
  40685c:	cmp	x28, x20
  406860:	add	x23, x23, #0x10
  406864:	b.eq	406acc <ferror@plt+0x3c3c>  // b.none
  406868:	mov	x19, x22
  40686c:	mov	x22, x28
  406870:	ldr	x28, [x23]
  406874:	mov	x1, x24
  406878:	mov	x0, x28
  40687c:	bl	402bb0 <strcmp@plt>
  406880:	mov	w27, w0
  406884:	ldr	x0, [sp, #16]
  406888:	mov	x1, x28
  40688c:	mov	x28, x22
  406890:	mov	x22, x19
  406894:	bl	402bb0 <strcmp@plt>
  406898:	cbz	w27, 4068ec <ferror@plt+0x3a5c>
  40689c:	cbnz	w0, 4068ec <ferror@plt+0x3a5c>
  4068a0:	cbnz	x26, 406850 <ferror@plt+0x39c0>
  4068a4:	add	x0, sp, #0x28
  4068a8:	mov	w1, wzr
  4068ac:	bl	40970c <ferror@plt+0x687c>
  4068b0:	ldr	x27, [sp, #40]
  4068b4:	mov	x26, x0
  4068b8:	sub	x2, x29, #0x10
  4068bc:	mov	w1, #0x1                   	// #1
  4068c0:	mov	x0, x23
  4068c4:	bl	408d00 <ferror@plt+0x5e70>
  4068c8:	cbz	x0, 406c2c <ferror@plt+0x3d9c>
  4068cc:	ldur	x5, [x29, #-16]
  4068d0:	mov	x2, x0
  4068d4:	add	x4, x26, #0xd
  4068d8:	mov	x0, x23
  4068dc:	mov	x1, xzr
  4068e0:	mov	x3, x27
  4068e4:	bl	408f6c <ferror@plt+0x60dc>
  4068e8:	b	406850 <ferror@plt+0x39c0>
  4068ec:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4068f0:	ldr	w8, [x8, #1400]
  4068f4:	cbnz	w8, 406924 <ferror@plt+0x3a94>
  4068f8:	mov	w1, #0x1                   	// #1
  4068fc:	mov	w0, wzr
  406900:	mov	x2, x25
  406904:	bl	402d60 <__fxstat@plt>
  406908:	cbz	w0, 406918 <ferror@plt+0x3a88>
  40690c:	bl	402e00 <__errno_location@plt>
  406910:	ldr	w8, [x0]
  406914:	b	40691c <ferror@plt+0x3a8c>
  406918:	mov	w8, #0xffffffff            	// #-1
  40691c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  406920:	str	w8, [x9, #1400]
  406924:	cmp	w8, #0x0
  406928:	csel	x21, x25, xzr, lt  // lt = tstop
  40692c:	tbz	w8, #31, 406ac8 <ferror@plt+0x3c38>
  406930:	cbz	w27, 40694c <ferror@plt+0x3abc>
  406934:	ldr	x1, [x23]
  406938:	add	x2, sp, #0x30
  40693c:	mov	w0, wzr
  406940:	bl	402e30 <__xstat@plt>
  406944:	cbnz	w0, 406988 <ferror@plt+0x3af8>
  406948:	b	406960 <ferror@plt+0x3ad0>
  40694c:	add	x2, sp, #0x30
  406950:	mov	w0, wzr
  406954:	mov	w1, wzr
  406958:	bl	402d60 <__fxstat@plt>
  40695c:	cbnz	w0, 406988 <ferror@plt+0x3af8>
  406960:	ldr	x8, [sp, #56]
  406964:	ldr	x9, [x21, #8]
  406968:	cmp	x8, x9
  40696c:	b.ne	406988 <ferror@plt+0x3af8>  // b.any
  406970:	ldr	x8, [sp, #48]
  406974:	ldr	x9, [x21]
  406978:	ldr	x21, [sp, #32]
  40697c:	cmp	x8, x9
  406980:	b.ne	406858 <ferror@plt+0x39c8>  // b.any
  406984:	b	4068a0 <ferror@plt+0x3a10>
  406988:	ldr	x21, [sp, #32]
  40698c:	b	406858 <ferror@plt+0x39c8>
  406990:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x25ec>
  406994:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  406998:	mov	x26, xzr
  40699c:	add	x23, x21, x22, lsl #4
  4069a0:	add	x24, x24, #0x780
  4069a4:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  4069a8:	add	x25, x25, #0x670
  4069ac:	mov	x20, x22
  4069b0:	ldr	x0, [x23]
  4069b4:	mov	x1, x24
  4069b8:	bl	402bb0 <strcmp@plt>
  4069bc:	ldr	w8, [x19, #1400]
  4069c0:	mov	w27, w0
  4069c4:	cbnz	w8, 4069f0 <ferror@plt+0x3b60>
  4069c8:	mov	w1, #0x1                   	// #1
  4069cc:	mov	w0, wzr
  4069d0:	mov	x2, x25
  4069d4:	bl	402d60 <__fxstat@plt>
  4069d8:	cbz	w0, 4069e8 <ferror@plt+0x3b58>
  4069dc:	bl	402e00 <__errno_location@plt>
  4069e0:	ldr	w8, [x0]
  4069e4:	b	4069ec <ferror@plt+0x3b5c>
  4069e8:	mov	w8, #0xffffffff            	// #-1
  4069ec:	str	w8, [x19, #1400]
  4069f0:	cmp	w8, #0x0
  4069f4:	csel	x21, x25, xzr, lt  // lt = tstop
  4069f8:	tbz	w8, #31, 406ac8 <ferror@plt+0x3c38>
  4069fc:	cbz	w27, 406a18 <ferror@plt+0x3b88>
  406a00:	ldr	x1, [x23]
  406a04:	add	x2, sp, #0x30
  406a08:	mov	w0, wzr
  406a0c:	bl	402e30 <__xstat@plt>
  406a10:	cbnz	w0, 406ab0 <ferror@plt+0x3c20>
  406a14:	b	406a2c <ferror@plt+0x3b9c>
  406a18:	add	x2, sp, #0x30
  406a1c:	mov	w0, wzr
  406a20:	mov	w1, wzr
  406a24:	bl	402d60 <__fxstat@plt>
  406a28:	cbnz	w0, 406ab0 <ferror@plt+0x3c20>
  406a2c:	ldr	x8, [sp, #56]
  406a30:	ldr	x9, [x21, #8]
  406a34:	cmp	x8, x9
  406a38:	b.ne	406ab0 <ferror@plt+0x3c20>  // b.any
  406a3c:	ldr	x8, [sp, #48]
  406a40:	ldr	x9, [x21]
  406a44:	cmp	x8, x9
  406a48:	b.ne	406ab0 <ferror@plt+0x3c20>  // b.any
  406a4c:	ldr	x21, [sp, #32]
  406a50:	cbnz	x26, 406a98 <ferror@plt+0x3c08>
  406a54:	add	x0, sp, #0x28
  406a58:	mov	w1, wzr
  406a5c:	bl	40970c <ferror@plt+0x687c>
  406a60:	ldr	x27, [sp, #40]
  406a64:	mov	x26, x0
  406a68:	sub	x2, x29, #0x10
  406a6c:	mov	w1, #0x1                   	// #1
  406a70:	mov	x0, x23
  406a74:	bl	408d00 <ferror@plt+0x5e70>
  406a78:	cbz	x0, 406c2c <ferror@plt+0x3d9c>
  406a7c:	ldur	x5, [x29, #-16]
  406a80:	mov	x2, x0
  406a84:	add	x4, x26, #0xd
  406a88:	mov	x0, x23
  406a8c:	mov	x1, xzr
  406a90:	mov	x3, x27
  406a94:	bl	408f6c <ferror@plt+0x60dc>
  406a98:	add	x8, x26, #0xd
  406a9c:	stp	x8, x26, [x23], #16
  406aa0:	add	x20, x20, #0x1
  406aa4:	cmp	x28, x20
  406aa8:	b.ne	4069b0 <ferror@plt+0x3b20>  // b.any
  406aac:	b	406acc <ferror@plt+0x3c3c>
  406ab0:	ldr	x21, [sp, #32]
  406ab4:	add	x20, x20, #0x1
  406ab8:	cmp	x28, x20
  406abc:	add	x23, x23, #0x10
  406ac0:	b.ne	4069b0 <ferror@plt+0x3b20>  // b.any
  406ac4:	b	406acc <ferror@plt+0x3c3c>
  406ac8:	ldr	x21, [sp, #32]
  406acc:	add	x8, x21, #0x10
  406ad0:	str	x8, [sp, #32]
  406ad4:	add	x2, sp, #0x30
  406ad8:	mov	x0, x21
  406adc:	mov	x1, x28
  406ae0:	bl	408d00 <ferror@plt+0x5e70>
  406ae4:	mov	x25, x0
  406ae8:	cmp	x0, x28
  406aec:	b.ne	406b24 <ferror@plt+0x3c94>  // b.any
  406af0:	ldr	x0, [sp, #16]
  406af4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406af8:	add	x1, x1, #0x979
  406afc:	bl	406cc4 <ferror@plt+0x3e34>
  406b00:	cbnz	x0, 406bb4 <ferror@plt+0x3d24>
  406b04:	bl	402e00 <__errno_location@plt>
  406b08:	cmp	x28, #0x3
  406b0c:	b.cc	406bf0 <ferror@plt+0x3d60>  // b.lo, b.ul, b.last
  406b10:	ldr	w8, [x0]
  406b14:	mov	x23, x28
  406b18:	cmp	w8, #0x18
  406b1c:	b.eq	406b30 <ferror@plt+0x3ca0>  // b.none
  406b20:	b	406bf0 <ferror@plt+0x3d60>
  406b24:	mov	x23, x28
  406b28:	cmp	x25, #0x2
  406b2c:	b.ls	406c0c <ferror@plt+0x3d7c>  // b.plast
  406b30:	ldr	x27, [sp, #48]
  406b34:	add	x26, x21, x25, lsl #4
  406b38:	sub	x19, x27, #0x8
  406b3c:	ldr	x0, [x19, x25, lsl #3]
  406b40:	ldr	x1, [x26, #-16]!
  406b44:	sub	x25, x25, #0x1
  406b48:	bl	406588 <ferror@plt+0x36f8>
  406b4c:	cmp	x25, #0x2
  406b50:	cset	w1, hi  // hi = pmore
  406b54:	sub	x0, x29, #0x10
  406b58:	bl	40970c <ferror@plt+0x687c>
  406b5c:	cbz	x0, 406b3c <ferror@plt+0x3cac>
  406b60:	ldur	x3, [x29, #-16]
  406b64:	cmp	x22, x25
  406b68:	csel	x20, x22, x25, cc  // cc = lo, ul, last
  406b6c:	add	x24, x0, #0xd
  406b70:	mov	x28, x0
  406b74:	mov	x0, x21
  406b78:	mov	x1, x20
  406b7c:	mov	x2, x25
  406b80:	mov	x4, x24
  406b84:	mov	x5, x27
  406b88:	bl	408f6c <ferror@plt+0x60dc>
  406b8c:	stp	x24, x28, [x21]
  406b90:	ldr	x0, [sp, #32]
  406b94:	sub	x19, x23, x25
  406b98:	lsl	x2, x19, #4
  406b9c:	mov	x1, x26
  406ba0:	bl	402770 <memmove@plt>
  406ba4:	sub	x8, x22, x20
  406ba8:	add	x22, x8, #0x1
  406bac:	add	x28, x19, #0x1
  406bb0:	b	406ad4 <ferror@plt+0x3c44>
  406bb4:	ldr	x5, [sp, #48]
  406bb8:	ldr	x4, [sp, #16]
  406bbc:	mov	x3, x0
  406bc0:	mov	x0, x21
  406bc4:	mov	x1, x22
  406bc8:	mov	x2, x28
  406bcc:	bl	408f6c <ferror@plt+0x60dc>
  406bd0:	ldp	x20, x19, [sp, #272]
  406bd4:	ldp	x22, x21, [sp, #256]
  406bd8:	ldp	x24, x23, [sp, #240]
  406bdc:	ldp	x26, x25, [sp, #224]
  406be0:	ldp	x28, x27, [sp, #208]
  406be4:	ldp	x29, x30, [sp, #192]
  406be8:	add	sp, sp, #0x120
  406bec:	ret
  406bf0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406bf4:	add	x1, x1, #0x6f9
  406bf8:	mov	w2, #0x5                   	// #5
  406bfc:	mov	x0, xzr
  406c00:	bl	402d70 <dcgettext@plt>
  406c04:	ldr	x1, [sp, #16]
  406c08:	bl	406c50 <ferror@plt+0x3dc0>
  406c0c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406c10:	add	x1, x1, #0x6f9
  406c14:	mov	w2, #0x5                   	// #5
  406c18:	mov	x0, xzr
  406c1c:	bl	402d70 <dcgettext@plt>
  406c20:	lsl	x8, x25, #4
  406c24:	ldr	x1, [x21, x8]
  406c28:	bl	406c50 <ferror@plt+0x3dc0>
  406c2c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406c30:	add	x1, x1, #0x6f9
  406c34:	mov	w2, #0x5                   	// #5
  406c38:	mov	x0, xzr
  406c3c:	bl	402d70 <dcgettext@plt>
  406c40:	ldr	x9, [sp, #32]
  406c44:	lsl	x8, x20, #4
  406c48:	ldr	x1, [x9, x8]
  406c4c:	bl	406c50 <ferror@plt+0x3dc0>
  406c50:	stp	x29, x30, [sp, #-48]!
  406c54:	str	x21, [sp, #16]
  406c58:	stp	x20, x19, [sp, #32]
  406c5c:	mov	x29, sp
  406c60:	mov	x21, x1
  406c64:	mov	x19, x0
  406c68:	bl	402e00 <__errno_location@plt>
  406c6c:	ldr	w20, [x0]
  406c70:	cbnz	x21, 406c8c <ferror@plt+0x3dfc>
  406c74:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406c78:	add	x1, x1, #0xa96
  406c7c:	mov	w2, #0x5                   	// #5
  406c80:	mov	x0, xzr
  406c84:	bl	402d70 <dcgettext@plt>
  406c88:	mov	x21, x0
  406c8c:	mov	w1, #0x3                   	// #3
  406c90:	mov	w0, wzr
  406c94:	mov	x2, x21
  406c98:	bl	40f84c <ferror@plt+0xc9bc>
  406c9c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  406ca0:	mov	x4, x0
  406ca4:	add	x2, x2, #0xa8f
  406ca8:	mov	w0, #0x2                   	// #2
  406cac:	mov	w1, w20
  406cb0:	mov	x3, x19
  406cb4:	bl	4027f0 <error@plt>
  406cb8:	ldr	x0, [x0]
  406cbc:	ldr	x1, [x1]
  406cc0:	b	402bb0 <strcmp@plt>
  406cc4:	stp	x29, x30, [sp, #-48]!
  406cc8:	stp	x22, x21, [sp, #16]
  406ccc:	stp	x20, x19, [sp, #32]
  406cd0:	ldrb	w8, [x1]
  406cd4:	mov	x19, x0
  406cd8:	mov	x29, sp
  406cdc:	cmp	w8, #0x77
  406ce0:	b.eq	406d24 <ferror@plt+0x3e94>  // b.none
  406ce4:	cmp	w8, #0x72
  406ce8:	b.ne	406dd8 <ferror@plt+0x3f48>  // b.any
  406cec:	mov	x20, x1
  406cf0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406cf4:	add	x1, x1, #0x780
  406cf8:	mov	x0, x19
  406cfc:	bl	402bb0 <strcmp@plt>
  406d00:	cbz	w0, 406d70 <ferror@plt+0x3ee0>
  406d04:	mov	w1, #0x80000               	// #524288
  406d08:	mov	x0, x19
  406d0c:	bl	402950 <open@plt>
  406d10:	tbnz	w0, #31, 406d88 <ferror@plt+0x3ef8>
  406d14:	mov	x1, x20
  406d18:	bl	4029f0 <fdopen@plt>
  406d1c:	mov	x19, x0
  406d20:	b	406d8c <ferror@plt+0x3efc>
  406d24:	cbz	x19, 406dbc <ferror@plt+0x3f2c>
  406d28:	mov	w0, #0x1                   	// #1
  406d2c:	mov	x1, xzr
  406d30:	bl	402db0 <ftruncate@plt>
  406d34:	cbz	w0, 406dbc <ferror@plt+0x3f2c>
  406d38:	bl	402e00 <__errno_location@plt>
  406d3c:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  406d40:	ldr	w8, [x22, #1400]
  406d44:	ldr	w20, [x0]
  406d48:	cbnz	w8, 406da4 <ferror@plt+0x3f14>
  406d4c:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x145ec>
  406d50:	mov	x21, x0
  406d54:	add	x2, x2, #0x670
  406d58:	mov	w1, #0x1                   	// #1
  406d5c:	mov	w0, wzr
  406d60:	bl	402d60 <__fxstat@plt>
  406d64:	cbz	w0, 406d9c <ferror@plt+0x3f0c>
  406d68:	ldr	w8, [x21]
  406d6c:	b	406da0 <ferror@plt+0x3f10>
  406d70:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  406d74:	ldr	x19, [x8, #1352]
  406d78:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  406d7c:	mov	w9, #0x1                   	// #1
  406d80:	strb	w9, [x8, #1381]
  406d84:	b	406d8c <ferror@plt+0x3efc>
  406d88:	mov	x19, xzr
  406d8c:	mov	w1, #0x2                   	// #2
  406d90:	mov	x0, x19
  406d94:	bl	40bcec <ferror@plt+0x8e5c>
  406d98:	b	406dc4 <ferror@plt+0x3f34>
  406d9c:	mov	w8, #0xffffffff            	// #-1
  406da0:	str	w8, [x22, #1400]
  406da4:	tbz	w8, #31, 406df8 <ferror@plt+0x3f68>
  406da8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  406dac:	ldr	w8, [x8, #1664]
  406db0:	and	w8, w8, #0xf000
  406db4:	cmp	w8, #0x8, lsl #12
  406db8:	b.eq	406df8 <ferror@plt+0x3f68>  // b.none
  406dbc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  406dc0:	ldr	x19, [x8, #1344]
  406dc4:	mov	x0, x19
  406dc8:	ldp	x20, x19, [sp, #32]
  406dcc:	ldp	x22, x21, [sp, #16]
  406dd0:	ldp	x29, x30, [sp], #48
  406dd4:	ret
  406dd8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  406ddc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x15ec>
  406de0:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x25ec>
  406de4:	add	x0, x0, #0x71a
  406de8:	add	x1, x1, #0xf61
  406dec:	add	x3, x3, #0x743
  406df0:	mov	w2, #0x3d6                 	// #982
  406df4:	bl	402df0 <__assert_fail@plt>
  406df8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  406dfc:	add	x1, x1, #0x705
  406e00:	mov	w2, #0x5                   	// #5
  406e04:	mov	x0, xzr
  406e08:	bl	402d70 <dcgettext@plt>
  406e0c:	mov	x21, x0
  406e10:	mov	w1, #0x3                   	// #3
  406e14:	mov	w0, wzr
  406e18:	mov	x2, x19
  406e1c:	bl	40f84c <ferror@plt+0xc9bc>
  406e20:	mov	x3, x0
  406e24:	mov	w0, #0x2                   	// #2
  406e28:	mov	w1, w20
  406e2c:	mov	x2, x21
  406e30:	bl	4027f0 <error@plt>
  406e34:	ldrb	w8, [x0, #48]
  406e38:	cbnz	w8, 406e44 <ferror@plt+0x3fb4>
  406e3c:	ldrb	w8, [x0, #49]
  406e40:	cbz	w8, 406e4c <ferror@plt+0x3fbc>
  406e44:	mov	w8, #0x62                  	// #98
  406e48:	strb	w8, [x1], #1
  406e4c:	ldr	x8, [x0, #32]
  406e50:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  406e54:	add	x9, x9, #0x98c
  406e58:	cmp	x8, x9
  406e5c:	b.eq	406efc <ferror@plt+0x406c>  // b.none
  406e60:	ldr	x8, [x0, #40]
  406e64:	cbz	x8, 406e70 <ferror@plt+0x3fe0>
  406e68:	mov	w8, #0x66                  	// #102
  406e6c:	strb	w8, [x1], #1
  406e70:	ldrb	w8, [x0, #52]
  406e74:	cbz	w8, 406e80 <ferror@plt+0x3ff0>
  406e78:	mov	w8, #0x67                  	// #103
  406e7c:	strb	w8, [x1], #1
  406e80:	ldrb	w8, [x0, #53]
  406e84:	cbz	w8, 406e90 <ferror@plt+0x4000>
  406e88:	mov	w8, #0x68                  	// #104
  406e8c:	strb	w8, [x1], #1
  406e90:	ldr	x8, [x0, #32]
  406e94:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  406e98:	add	x9, x9, #0x88c
  406e9c:	cmp	x8, x9
  406ea0:	b.eq	406f10 <ferror@plt+0x4080>  // b.none
  406ea4:	ldrb	w8, [x0, #54]
  406ea8:	cbz	w8, 406eb4 <ferror@plt+0x4024>
  406eac:	mov	w8, #0x4d                  	// #77
  406eb0:	strb	w8, [x1], #1
  406eb4:	ldrb	w8, [x0, #50]
  406eb8:	cbz	w8, 406ec4 <ferror@plt+0x4034>
  406ebc:	mov	w8, #0x6e                  	// #110
  406ec0:	strb	w8, [x1], #1
  406ec4:	ldrb	w8, [x0, #51]
  406ec8:	cbz	w8, 406ed4 <ferror@plt+0x4044>
  406ecc:	mov	w8, #0x52                  	// #82
  406ed0:	strb	w8, [x1], #1
  406ed4:	ldrb	w8, [x0, #55]
  406ed8:	cbz	w8, 406ee4 <ferror@plt+0x4054>
  406edc:	mov	w8, #0x72                  	// #114
  406ee0:	strb	w8, [x1], #1
  406ee4:	ldrb	w8, [x0, #56]
  406ee8:	cbz	w8, 406ef4 <ferror@plt+0x4064>
  406eec:	mov	w8, #0x56                  	// #86
  406ef0:	strb	w8, [x1], #1
  406ef4:	strb	wzr, [x1]
  406ef8:	ret
  406efc:	mov	w8, #0x64                  	// #100
  406f00:	strb	w8, [x1], #1
  406f04:	ldr	x8, [x0, #40]
  406f08:	cbnz	x8, 406e68 <ferror@plt+0x3fd8>
  406f0c:	b	406e70 <ferror@plt+0x3fe0>
  406f10:	mov	w8, #0x69                  	// #105
  406f14:	strb	w8, [x1], #1
  406f18:	ldrb	w8, [x0, #54]
  406f1c:	cbnz	w8, 406eac <ferror@plt+0x401c>
  406f20:	b	406eb4 <ferror@plt+0x4024>
  406f24:	sub	sp, sp, #0x90
  406f28:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  406f2c:	add	x9, x9, #0x569
  406f30:	ldrb	w8, [x9]
  406f34:	stp	x29, x30, [sp, #48]
  406f38:	stp	x28, x27, [sp, #64]
  406f3c:	stp	x26, x25, [sp, #80]
  406f40:	stp	x24, x23, [sp, #96]
  406f44:	stp	x22, x21, [sp, #112]
  406f48:	stp	x20, x19, [sp, #128]
  406f4c:	mov	x20, x0
  406f50:	ldrb	w10, [x20, #48]
  406f54:	cmp	w8, #0x0
  406f58:	mov	w8, #0xa                   	// #10
  406f5c:	mov	w0, wzr
  406f60:	csel	w26, wzr, w8, ne  // ne = any
  406f64:	add	x29, sp, #0x30
  406f68:	cbnz	w10, 40725c <ferror@plt+0x43cc>
  406f6c:	str	x2, [sp]
  406f70:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  406f74:	ldr	x8, [x20, #8]
  406f78:	ldp	x2, x11, [x20, #32]
  406f7c:	ldr	x10, [x10, #976]
  406f80:	ldur	x23, [x9, #31]
  406f84:	mov	x19, x1
  406f88:	cmp	x8, x2
  406f8c:	sub	x28, x10, #0x22
  406f90:	stur	x11, [x29, #-8]
  406f94:	b.eq	406fb0 <ferror@plt+0x4120>  // b.none
  406f98:	ldr	x0, [x20]
  406f9c:	add	x8, x0, x8
  406fa0:	sub	x1, x8, x2
  406fa4:	bl	402770 <memmove@plt>
  406fa8:	ldr	x8, [x20, #32]
  406fac:	stp	x8, xzr, [x20, #8]
  406fb0:	ldur	x9, [x29, #-8]
  406fb4:	ldr	x24, [x20]
  406fb8:	ldr	x25, [x20, #24]
  406fbc:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x145ec>
  406fc0:	add	x9, x9, #0x1
  406fc4:	add	x21, x21, #0x560
  406fc8:	stp	x19, x9, [sp, #16]
  406fcc:	str	x20, [sp, #8]
  406fd0:	stur	w26, [x29, #-12]
  406fd4:	b	406ff8 <ferror@plt+0x4168>
  406fd8:	mov	w9, #0x4                   	// #4
  406fdc:	lsl	x25, x9, #5
  406fe0:	mov	x1, x25
  406fe4:	bl	41137c <ferror@plt+0xe4ec>
  406fe8:	ldr	x8, [x20, #8]
  406fec:	mov	x24, x0
  406ff0:	str	x0, [x20]
  406ff4:	str	x25, [x20, #24]
  406ff8:	ldr	x9, [x20, #16]
  406ffc:	ldur	x10, [x29, #-8]
  407000:	add	x27, x24, x8
  407004:	add	x8, x24, x25
  407008:	sub	x22, x8, x9, lsl #5
  40700c:	msub	x10, x10, x9, x8
  407010:	sub	x19, x10, x27
  407014:	cbz	x9, 407044 <ferror@plt+0x41b4>
  407018:	neg	x9, x9
  40701c:	add	x8, x8, x9, lsl #5
  407020:	ldr	x10, [x22]
  407024:	ldr	x8, [x8, #8]
  407028:	add	x24, x10, x8
  40702c:	b	407044 <ferror@plt+0x41b4>
  407030:	mov	x25, x24
  407034:	ldr	x20, [sp, #8]
  407038:	mov	x24, x25
  40703c:	ldrb	w8, [x20, #48]
  407040:	cbnz	w8, 4071ec <ferror@plt+0x435c>
  407044:	ldr	x9, [sp, #24]
  407048:	mov	x25, x27
  40704c:	cmp	x9, x19
  407050:	b.cs	4071e4 <ferror@plt+0x4354>  // b.hs, b.nlast
  407054:	ldr	x27, [sp, #16]
  407058:	sub	x8, x19, #0x1
  40705c:	udiv	x26, x8, x9
  407060:	mov	w1, #0x1                   	// #1
  407064:	mov	x0, x25
  407068:	mov	x2, x26
  40706c:	mov	x3, x27
  407070:	bl	402b50 <fread_unlocked@plt>
  407074:	cmp	x0, x26
  407078:	add	x8, x25, x0
  40707c:	b.ne	407088 <ferror@plt+0x41f8>  // b.any
  407080:	ldur	w26, [x29, #-12]
  407084:	b	4070c8 <ferror@plt+0x4238>
  407088:	ldr	w9, [x27]
  40708c:	tbnz	w9, #5, 40727c <ferror@plt+0x43ec>
  407090:	ldur	w26, [x29, #-12]
  407094:	tbz	w9, #4, 4070c8 <ferror@plt+0x4238>
  407098:	ldr	x9, [x20]
  40709c:	cmp	x9, x8
  4070a0:	mov	w9, #0x1                   	// #1
  4070a4:	strb	w9, [x20, #48]
  4070a8:	b.eq	40723c <ferror@plt+0x43ac>  // b.none
  4070ac:	cmp	x24, x8
  4070b0:	mov	x27, x24
  4070b4:	b.eq	4070cc <ferror@plt+0x423c>  // b.none
  4070b8:	ldurb	w9, [x8, #-1]
  4070bc:	cmp	w9, w26
  4070c0:	b.eq	4070c8 <ferror@plt+0x4238>  // b.none
  4070c4:	strb	w26, [x8], #1
  4070c8:	mov	x27, x8
  4070cc:	sub	x19, x19, x0
  4070d0:	sub	x2, x27, x25
  4070d4:	mov	x0, x25
  4070d8:	mov	w1, w26
  4070dc:	bl	402d30 <memchr@plt>
  4070e0:	cbz	x0, 407030 <ferror@plt+0x41a0>
  4070e4:	cbz	x23, 4071a8 <ferror@plt+0x4318>
  4070e8:	mov	x25, x24
  4070ec:	mov	x20, x22
  4070f0:	b	407128 <ferror@plt+0x4298>
  4070f4:	mov	x0, x24
  4070f8:	mov	x1, x26
  4070fc:	mov	x2, x23
  407100:	bl	408ab0 <ferror@plt+0x5c20>
  407104:	ldur	w26, [x29, #-12]
  407108:	mov	x24, x0
  40710c:	sub	x2, x27, x25
  407110:	mov	x0, x25
  407114:	mov	w1, w26
  407118:	stur	x24, [x20, #-16]
  40711c:	bl	402d30 <memchr@plt>
  407120:	mov	x20, x22
  407124:	cbz	x0, 407034 <ferror@plt+0x41a4>
  407128:	mov	x24, x25
  40712c:	mov	x25, x0
  407130:	strb	wzr, [x25], #1
  407134:	str	x24, [x22, #-32]!
  407138:	sub	x26, x25, x24
  40713c:	str	x26, [x22, #8]
  407140:	ldr	x8, [x23, #16]
  407144:	cmp	x28, x26
  407148:	csel	x28, x28, x26, hi  // hi = pmore
  40714c:	cmn	x8, #0x1
  407150:	b.eq	407164 <ferror@plt+0x42d4>  // b.none
  407154:	mov	x0, x24
  407158:	mov	x1, x26
  40715c:	mov	x2, x23
  407160:	bl	408978 <ferror@plt+0x5ae8>
  407164:	stur	x0, [x20, #-8]
  407168:	ldr	x8, [x23]
  40716c:	cmn	x8, #0x1
  407170:	ldur	x8, [x29, #-8]
  407174:	sub	x19, x19, x8
  407178:	b.ne	4070f4 <ferror@plt+0x4264>  // b.any
  40717c:	ldrb	w8, [x23, #48]
  407180:	cbz	w8, 4071a0 <ferror@plt+0x4310>
  407184:	ldur	w26, [x29, #-12]
  407188:	sub	x24, x24, #0x1
  40718c:	ldrb	w8, [x24, #1]!
  407190:	add	x8, x21, x8
  407194:	ldrb	w8, [x8, #556]
  407198:	cbnz	w8, 40718c <ferror@plt+0x42fc>
  40719c:	b	40710c <ferror@plt+0x427c>
  4071a0:	ldur	w26, [x29, #-12]
  4071a4:	b	40710c <ferror@plt+0x427c>
  4071a8:	ldur	x8, [x29, #-8]
  4071ac:	strb	wzr, [x0], #1
  4071b0:	str	x24, [x22, #-32]!
  4071b4:	sub	x2, x27, x0
  4071b8:	sub	x19, x19, x8
  4071bc:	sub	x8, x0, x24
  4071c0:	cmp	x28, x8
  4071c4:	mov	w1, w26
  4071c8:	mov	x25, x0
  4071cc:	str	x8, [x22, #8]
  4071d0:	csel	x28, x28, x8, hi  // hi = pmore
  4071d4:	bl	402d30 <memchr@plt>
  4071d8:	mov	x24, x25
  4071dc:	cbnz	x0, 4071a8 <ferror@plt+0x4318>
  4071e0:	b	407034 <ferror@plt+0x41a4>
  4071e4:	mov	x27, x25
  4071e8:	mov	x25, x24
  4071ec:	ldr	x0, [x20]
  4071f0:	ldr	x8, [x20, #24]
  4071f4:	sub	x9, x27, x0
  4071f8:	add	x10, x0, x8
  4071fc:	subs	x10, x10, x22
  407200:	asr	x10, x10, #5
  407204:	stp	x9, x10, [x20, #8]
  407208:	b.ne	407244 <ferror@plt+0x43b4>  // b.any
  40720c:	lsr	x9, x8, #5
  407210:	cbz	x0, 407230 <ferror@plt+0x43a0>
  407214:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  407218:	movk	x10, #0x5540
  40721c:	cmp	x8, x10
  407220:	b.cs	407238 <ferror@plt+0x43a8>  // b.hs, b.nlast
  407224:	add	x8, x9, x8, lsr #6
  407228:	add	x9, x8, #0x1
  40722c:	b	406fdc <ferror@plt+0x414c>
  407230:	cbz	x9, 406fd8 <ferror@plt+0x4148>
  407234:	tbz	x8, #63, 406fdc <ferror@plt+0x414c>
  407238:	bl	411638 <ferror@plt+0xe7a8>
  40723c:	mov	w0, wzr
  407240:	b	40725c <ferror@plt+0x43cc>
  407244:	sub	x8, x27, x25
  407248:	add	x9, x28, #0x22
  40724c:	str	x8, [x20, #32]
  407250:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  407254:	mov	w0, #0x1                   	// #1
  407258:	str	x9, [x8, #976]
  40725c:	ldp	x20, x19, [sp, #128]
  407260:	ldp	x22, x21, [sp, #112]
  407264:	ldp	x24, x23, [sp, #96]
  407268:	ldp	x26, x25, [sp, #80]
  40726c:	ldp	x28, x27, [sp, #64]
  407270:	ldp	x29, x30, [sp, #48]
  407274:	add	sp, sp, #0x90
  407278:	ret
  40727c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  407280:	add	x1, x1, #0x8d9
  407284:	mov	w2, #0x5                   	// #5
  407288:	mov	x0, xzr
  40728c:	bl	402d70 <dcgettext@plt>
  407290:	ldr	x1, [sp]
  407294:	bl	406c50 <ferror@plt+0x3dc0>
  407298:	stp	x29, x30, [sp, #-96]!
  40729c:	stp	x28, x27, [sp, #16]
  4072a0:	stp	x26, x25, [sp, #32]
  4072a4:	stp	x24, x23, [sp, #48]
  4072a8:	stp	x22, x21, [sp, #64]
  4072ac:	stp	x20, x19, [sp, #80]
  4072b0:	mov	x29, sp
  4072b4:	sub	sp, sp, #0x2, lsl #12
  4072b8:	sub	sp, sp, #0x150
  4072bc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4072c0:	ldr	x21, [x8, #1416]
  4072c4:	cbz	x21, 4082c4 <ferror@plt+0x5434>
  4072c8:	ldp	x28, x19, [x0, #16]
  4072cc:	stp	x0, x1, [sp, #120]
  4072d0:	add	x8, sp, #0x1, lsl #12
  4072d4:	ldp	x27, x20, [x1, #16]
  4072d8:	add	x8, x8, #0x40
  4072dc:	add	x9, sp, #0x1, lsl #12
  4072e0:	add	x9, x9, #0x180
  4072e4:	add	x8, x8, #0x9c
  4072e8:	adrp	x24, 427000 <_obstack_memory_used@@Base+0x145ec>
  4072ec:	str	x8, [sp, #48]
  4072f0:	add	x8, x9, #0x10
  4072f4:	add	x24, x24, #0x560
  4072f8:	str	x8, [sp, #8]
  4072fc:	b	40734c <ferror@plt+0x44bc>
  407300:	ldr	x8, [sp, #128]
  407304:	ldp	x27, x23, [x8]
  407308:	add	x8, x28, x22
  40730c:	sub	x19, x8, #0x1
  407310:	add	x8, x27, x23
  407314:	sub	x20, x8, #0x1
  407318:	ldr	x8, [x21]
  40731c:	cmn	x8, #0x1
  407320:	b.eq	4077f4 <ferror@plt+0x4964>  // b.none
  407324:	mov	x0, x28
  407328:	mov	x1, x22
  40732c:	mov	x2, x21
  407330:	bl	408ab0 <ferror@plt+0x5c20>
  407334:	mov	x28, x0
  407338:	mov	x0, x27
  40733c:	mov	x1, x23
  407340:	mov	x2, x21
  407344:	bl	408ab0 <ferror@plt+0x5c20>
  407348:	mov	x27, x0
  40734c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  407350:	ldp	x22, x26, [x21, #32]
  407354:	cmp	x28, x19
  407358:	ldrb	w8, [x8, #1376]
  40735c:	csel	x14, x28, x19, hi  // hi = pmore
  407360:	cmp	x27, x20
  407364:	csel	x25, x27, x20, hi  // hi = pmore
  407368:	sub	x23, x14, x28
  40736c:	sub	x19, x25, x27
  407370:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  407374:	ldrb	w8, [x21, #50]
  407378:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  40737c:	ldrb	w8, [x21, #52]
  407380:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  407384:	ldrb	w8, [x21, #53]
  407388:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  40738c:	ldrb	w8, [x21, #54]
  407390:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  407394:	ldrb	w8, [x21, #51]
  407398:	cbnz	w8, 4073a4 <ferror@plt+0x4514>
  40739c:	ldrb	w8, [x21, #56]
  4073a0:	cbz	w8, 4080f4 <ferror@plt+0x5264>
  4073a4:	orr	x8, x26, x22
  4073a8:	cmp	x8, #0x0
  4073ac:	cset	w9, ne  // ne = any
  4073b0:	str	w9, [sp, #156]
  4073b4:	cbz	x8, 407448 <ferror@plt+0x45b8>
  4073b8:	add	x8, x19, x23
  4073bc:	add	x0, x8, #0x2
  4073c0:	cmp	x0, #0xfa1
  4073c4:	b.cs	4074c8 <ferror@plt+0x4638>  // b.hs, b.nlast
  4073c8:	str	xzr, [sp, #104]
  4073cc:	add	x20, sp, #0xa0
  4073d0:	add	x8, x20, x23
  4073d4:	add	x12, x8, #0x1
  4073d8:	cbz	x23, 4074e8 <ferror@plt+0x4658>
  4073dc:	cbz	x22, 40755c <ferror@plt+0x46cc>
  4073e0:	mov	x13, xzr
  4073e4:	mov	x8, x28
  4073e8:	mov	x9, x23
  4073ec:	cbnz	x26, 407400 <ferror@plt+0x4570>
  4073f0:	b	40742c <ferror@plt+0x459c>
  4073f4:	subs	x9, x9, #0x1
  4073f8:	add	x8, x8, #0x1
  4073fc:	b.eq	4074ec <ferror@plt+0x465c>  // b.none
  407400:	ldrb	w10, [x8]
  407404:	ldrb	w11, [x22, x10]
  407408:	cbnz	w11, 4073f4 <ferror@plt+0x4564>
  40740c:	ldrb	w10, [x26, x10]
  407410:	add	x11, x13, #0x1
  407414:	strb	w10, [x20, x13]
  407418:	mov	x13, x11
  40741c:	b	4073f4 <ferror@plt+0x4564>
  407420:	subs	x9, x9, #0x1
  407424:	add	x8, x8, #0x1
  407428:	b.eq	4074ec <ferror@plt+0x465c>  // b.none
  40742c:	ldrb	w10, [x8]
  407430:	ldrb	w11, [x22, x10]
  407434:	cbnz	w11, 407420 <ferror@plt+0x4590>
  407438:	add	x11, x13, #0x1
  40743c:	strb	w10, [x20, x13]
  407440:	mov	x13, x11
  407444:	b	407420 <ferror@plt+0x4590>
  407448:	ldrb	w8, [x14]
  40744c:	strb	wzr, [x14]
  407450:	mov	x20, x28
  407454:	mov	x28, x27
  407458:	str	w8, [sp, #116]
  40745c:	ldrb	w8, [x25]
  407460:	mov	x13, x23
  407464:	str	w8, [sp, #112]
  407468:	strb	wzr, [x25]
  40746c:	ldrb	w8, [x21, #50]
  407470:	stp	x13, x20, [sp, #136]
  407474:	cbz	w8, 407618 <ferror@plt+0x4788>
  407478:	sub	x0, x20, #0x1
  40747c:	ldrb	w8, [x0, #1]!
  407480:	add	x8, x24, x8
  407484:	ldrb	w8, [x8, #556]
  407488:	cbnz	w8, 40747c <ferror@plt+0x45ec>
  40748c:	sub	x1, x28, #0x1
  407490:	ldrb	w8, [x1, #1]!
  407494:	add	x8, x24, x8
  407498:	ldrb	w8, [x8, #556]
  40749c:	cbnz	w8, 407490 <ferror@plt+0x4600>
  4074a0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4074a4:	add	x8, x8, #0x570
  4074a8:	ldp	w2, w3, [x8]
  4074ac:	bl	4106d4 <ferror@plt+0xd844>
  4074b0:	mov	w20, w0
  4074b4:	ldr	w8, [sp, #156]
  4074b8:	cbz	w8, 407784 <ferror@plt+0x48f4>
  4074bc:	ldr	x0, [sp, #104]
  4074c0:	bl	402c00 <free@plt>
  4074c4:	b	407798 <ferror@plt+0x4908>
  4074c8:	mov	x20, x14
  4074cc:	bl	4112fc <ferror@plt+0xe46c>
  4074d0:	mov	x14, x20
  4074d4:	mov	x20, x0
  4074d8:	str	x0, [sp, #104]
  4074dc:	add	x8, x20, x23
  4074e0:	add	x12, x8, #0x1
  4074e4:	cbnz	x23, 4073dc <ferror@plt+0x454c>
  4074e8:	mov	x13, xzr
  4074ec:	strb	wzr, [x20, x13]
  4074f0:	cbz	x19, 4075f8 <ferror@plt+0x4768>
  4074f4:	cbz	x22, 407584 <ferror@plt+0x46f4>
  4074f8:	mov	x8, xzr
  4074fc:	mov	x28, x12
  407500:	cbnz	x26, 407514 <ferror@plt+0x4684>
  407504:	b	407540 <ferror@plt+0x46b0>
  407508:	subs	x19, x19, #0x1
  40750c:	add	x27, x27, #0x1
  407510:	b.eq	407600 <ferror@plt+0x4770>  // b.none
  407514:	ldrb	w9, [x27]
  407518:	ldrb	w10, [x22, x9]
  40751c:	cbnz	w10, 407508 <ferror@plt+0x4678>
  407520:	ldrb	w9, [x26, x9]
  407524:	add	x10, x8, #0x1
  407528:	strb	w9, [x28, x8]
  40752c:	mov	x8, x10
  407530:	b	407508 <ferror@plt+0x4678>
  407534:	subs	x19, x19, #0x1
  407538:	add	x27, x27, #0x1
  40753c:	b.eq	407600 <ferror@plt+0x4770>  // b.none
  407540:	ldrb	w9, [x27]
  407544:	ldrb	w10, [x22, x9]
  407548:	cbnz	w10, 407534 <ferror@plt+0x46a4>
  40754c:	add	x10, x8, #0x1
  407550:	strb	w9, [x28, x8]
  407554:	mov	x8, x10
  407558:	b	407534 <ferror@plt+0x46a4>
  40755c:	mov	x8, x28
  407560:	mov	x9, x23
  407564:	mov	x10, x20
  407568:	cbz	x26, 4075b0 <ferror@plt+0x4720>
  40756c:	ldrb	w11, [x8], #1
  407570:	subs	x9, x9, #0x1
  407574:	ldrb	w11, [x26, x11]
  407578:	strb	w11, [x10], #1
  40757c:	b.ne	40756c <ferror@plt+0x46dc>  // b.any
  407580:	b	4075ec <ferror@plt+0x475c>
  407584:	cbz	x26, 407908 <ferror@plt+0x4a78>
  407588:	mov	x8, x19
  40758c:	mov	x28, x12
  407590:	mov	x9, x12
  407594:	ldrb	w10, [x27], #1
  407598:	subs	x8, x8, #0x1
  40759c:	ldrb	w10, [x26, x10]
  4075a0:	strb	w10, [x9], #1
  4075a4:	b.ne	407594 <ferror@plt+0x4704>  // b.any
  4075a8:	mov	x8, x19
  4075ac:	b	407600 <ferror@plt+0x4770>
  4075b0:	cmp	x23, #0x1f
  4075b4:	b.ls	4075cc <ferror@plt+0x473c>  // b.plast
  4075b8:	cmp	x20, x14
  4075bc:	b.cs	407ed0 <ferror@plt+0x5040>  // b.hs, b.nlast
  4075c0:	add	x8, x20, x23
  4075c4:	cmp	x28, x8
  4075c8:	b.cs	407ed0 <ferror@plt+0x5040>  // b.hs, b.nlast
  4075cc:	mov	x8, xzr
  4075d0:	add	x9, x20, x8
  4075d4:	add	x8, x8, x28
  4075d8:	sub	x10, x8, x14
  4075dc:	ldrb	w11, [x8], #1
  4075e0:	adds	x10, x10, #0x1
  4075e4:	strb	w11, [x9], #1
  4075e8:	b.cc	4075dc <ferror@plt+0x474c>  // b.lo, b.ul, b.last
  4075ec:	mov	x13, x23
  4075f0:	strb	wzr, [x20, x13]
  4075f4:	cbnz	x19, 4074f4 <ferror@plt+0x4664>
  4075f8:	mov	x8, xzr
  4075fc:	mov	x28, x12
  407600:	add	x25, x28, x8
  407604:	mov	x19, x8
  407608:	strb	wzr, [x25]
  40760c:	ldrb	w8, [x21, #50]
  407610:	stp	x13, x20, [sp, #136]
  407614:	cbnz	w8, 407478 <ferror@plt+0x45e8>
  407618:	ldrb	w8, [x21, #52]
  40761c:	cbz	w8, 40767c <ferror@plt+0x47ec>
  407620:	add	x1, sp, #0x1, lsl #12
  407624:	add	x1, x1, #0x180
  407628:	mov	x0, x20
  40762c:	bl	402bf0 <strtold@plt>
  407630:	sub	x1, x29, #0x10
  407634:	mov	x0, x28
  407638:	str	q0, [sp, #80]
  40763c:	bl	402bf0 <strtold@plt>
  407640:	ldr	x9, [sp, #4480]
  407644:	ldur	x8, [x29, #-16]
  407648:	cmp	x9, x20
  40764c:	b.eq	407774 <ferror@plt+0x48e4>  // b.none
  407650:	cmp	x8, x28
  407654:	b.eq	4078f8 <ferror@plt+0x4a68>  // b.none
  407658:	mov	v1.16b, v0.16b
  40765c:	ldr	q0, [sp, #80]
  407660:	str	q1, [sp, #64]
  407664:	bl	4132d8 <_obstack_memory_used@@Base+0x8c4>
  407668:	tbz	w0, #31, 4078e8 <ferror@plt+0x4a58>
  40766c:	mov	w20, #0xffffffff            	// #-1
  407670:	ldr	w8, [sp, #156]
  407674:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407678:	b	407784 <ferror@plt+0x48f4>
  40767c:	ldrb	w8, [x21, #53]
  407680:	cbz	w8, 407850 <ferror@plt+0x49c0>
  407684:	sub	x0, x20, #0x1
  407688:	ldrb	w9, [x0, #1]!
  40768c:	add	x8, x24, x9
  407690:	ldrb	w8, [x8, #556]
  407694:	cbnz	w8, 407688 <ferror@plt+0x47f8>
  407698:	sub	x1, x28, #0x1
  40769c:	ldrb	w8, [x1, #1]!
  4076a0:	add	x10, x24, x8
  4076a4:	ldrb	w10, [x10, #556]
  4076a8:	cbnz	w10, 40769c <ferror@plt+0x480c>
  4076ac:	cmp	w9, #0x2d
  4076b0:	cinc	x14, x0, eq  // eq = none
  4076b4:	mov	x11, x14
  4076b8:	ldrb	w13, [x11], #1
  4076bc:	sub	w10, w13, #0x30
  4076c0:	cmp	w10, #0x9
  4076c4:	b.hi	407968 <ferror@plt+0x4ad8>  // b.pmore
  4076c8:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4076cc:	ldr	w15, [x10, #1396]
  4076d0:	mov	w10, wzr
  4076d4:	ldrb	w16, [x11]
  4076d8:	and	w12, w10, #0xff
  4076dc:	cmp	w12, w13, uxtb
  4076e0:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  4076e4:	add	x12, x14, #0x2
  4076e8:	cmp	w15, w16
  4076ec:	csel	x14, x12, x11, eq  // eq = none
  4076f0:	mov	x11, x14
  4076f4:	ldrb	w13, [x11], #1
  4076f8:	sub	w17, w13, #0x30
  4076fc:	cmp	w17, #0xa
  407700:	b.cc	4076d4 <ferror@plt+0x4844>  // b.lo, b.ul, b.last
  407704:	cmp	w15, w16
  407708:	b.eq	40774c <ferror@plt+0x48bc>  // b.none
  40770c:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x145ec>
  407710:	ldr	w12, [x12, #1392]
  407714:	cmp	w12, w13
  407718:	b.ne	40797c <ferror@plt+0x4aec>  // b.any
  40771c:	ldrb	w13, [x11], #1
  407720:	sub	w12, w13, #0x30
  407724:	cmp	w12, #0x9
  407728:	mov	x12, x11
  40772c:	b.hi	40774c <ferror@plt+0x48bc>  // b.pmore
  407730:	and	w11, w10, #0xff
  407734:	cmp	w11, w13, uxtb
  407738:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  40773c:	ldrb	w13, [x12], #1
  407740:	sub	w11, w13, #0x30
  407744:	cmp	w11, #0xa
  407748:	b.cc	407730 <ferror@plt+0x48a0>  // b.lo, b.ul, b.last
  40774c:	and	w10, w10, #0xff
  407750:	cmp	w10, #0x31
  407754:	b.cc	40798c <ferror@plt+0x4afc>  // b.lo, b.ul, b.last
  407758:	ldurb	w10, [x12, #-1]
  40775c:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x5ec>
  407760:	add	x11, x11, #0xf38
  407764:	cmp	w9, #0x2d
  407768:	ldrb	w10, [x11, x10]
  40776c:	cneg	w9, w10, eq  // eq = none
  407770:	b	407990 <ferror@plt+0x4b00>
  407774:	cmp	x8, x28
  407778:	csetm	w20, ne  // ne = any
  40777c:	ldr	w8, [sp, #156]
  407780:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407784:	ldr	w8, [sp, #116]
  407788:	ldp	x10, x9, [sp, #136]
  40778c:	strb	w8, [x9, x10]
  407790:	ldr	w8, [sp, #112]
  407794:	strb	w8, [x28, x19]
  407798:	cbnz	w20, 408290 <ferror@plt+0x5400>
  40779c:	ldr	x21, [x21, #64]
  4077a0:	cbz	x21, 4082a0 <ferror@plt+0x5410>
  4077a4:	ldr	x9, [sp, #120]
  4077a8:	ldr	x8, [x21, #16]
  4077ac:	ldp	x28, x22, [x9]
  4077b0:	cmn	x8, #0x1
  4077b4:	b.eq	407300 <ferror@plt+0x4470>  // b.none
  4077b8:	mov	x0, x28
  4077bc:	mov	x1, x22
  4077c0:	mov	x2, x21
  4077c4:	bl	408978 <ferror@plt+0x5ae8>
  4077c8:	ldr	x8, [sp, #128]
  4077cc:	mov	x19, x0
  4077d0:	mov	x2, x21
  4077d4:	ldp	x27, x23, [x8]
  4077d8:	mov	x0, x27
  4077dc:	mov	x1, x23
  4077e0:	bl	408978 <ferror@plt+0x5ae8>
  4077e4:	mov	x20, x0
  4077e8:	ldr	x8, [x21]
  4077ec:	cmn	x8, #0x1
  4077f0:	b.ne	407324 <ferror@plt+0x4494>  // b.any
  4077f4:	ldrb	w8, [x21, #48]
  4077f8:	cbz	w8, 40734c <ferror@plt+0x44bc>
  4077fc:	cmp	x28, x19
  407800:	b.cs	407824 <ferror@plt+0x4994>  // b.hs, b.nlast
  407804:	ldrb	w8, [x28]
  407808:	add	x8, x24, x8
  40780c:	ldrb	w8, [x8, #556]
  407810:	cbz	w8, 407824 <ferror@plt+0x4994>
  407814:	add	x28, x28, #0x1
  407818:	cmp	x19, x28
  40781c:	b.ne	407804 <ferror@plt+0x4974>  // b.any
  407820:	mov	x28, x19
  407824:	cmp	x27, x20
  407828:	b.cs	40734c <ferror@plt+0x44bc>  // b.hs, b.nlast
  40782c:	ldrb	w8, [x27]
  407830:	add	x8, x24, x8
  407834:	ldrb	w8, [x8, #556]
  407838:	cbz	w8, 40734c <ferror@plt+0x44bc>
  40783c:	add	x27, x27, #0x1
  407840:	cmp	x20, x27
  407844:	b.ne	40782c <ferror@plt+0x499c>  // b.any
  407848:	mov	x27, x20
  40784c:	b	40734c <ferror@plt+0x44bc>
  407850:	ldrb	w8, [x21, #54]
  407854:	cbz	w8, 407b64 <ferror@plt+0x4cd4>
  407858:	sub	x8, x20, #0x1
  40785c:	ldrb	w9, [x8, #1]!
  407860:	add	x9, x24, x9
  407864:	ldrb	w9, [x9, #556]
  407868:	cbnz	w9, 40785c <ferror@plt+0x49cc>
  40786c:	mov	x9, xzr
  407870:	mov	w10, #0xc                   	// #12
  407874:	add	x11, x10, x9
  407878:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x145ec>
  40787c:	lsr	x11, x11, #1
  407880:	add	x12, x12, #0x3c0
  407884:	add	x12, x12, x11, lsl #4
  407888:	ldr	x14, [x12, #40]
  40788c:	ldrb	w15, [x14]
  407890:	cbz	w15, 407a94 <ferror@plt+0x4c04>
  407894:	mov	x13, xzr
  407898:	add	x14, x14, #0x1
  40789c:	ldrb	w16, [x8, x13]
  4078a0:	add	x16, x24, x16
  4078a4:	ldrb	w16, [x16, #1324]
  4078a8:	cmp	w16, w15, uxtb
  4078ac:	b.cc	4078c4 <ferror@plt+0x4a34>  // b.lo, b.ul, b.last
  4078b0:	b.hi	4078d4 <ferror@plt+0x4a44>  // b.pmore
  4078b4:	ldrb	w15, [x14, x13]
  4078b8:	add	x13, x13, #0x1
  4078bc:	cbnz	w15, 40789c <ferror@plt+0x4a0c>
  4078c0:	b	407a94 <ferror@plt+0x4c04>
  4078c4:	mov	x10, x11
  4078c8:	cmp	x9, x10
  4078cc:	b.cc	407874 <ferror@plt+0x49e4>  // b.lo, b.ul, b.last
  4078d0:	b	4078e0 <ferror@plt+0x4a50>
  4078d4:	add	x9, x11, #0x1
  4078d8:	cmp	x9, x10
  4078dc:	b.cc	407874 <ferror@plt+0x49e4>  // b.lo, b.ul, b.last
  4078e0:	mov	w8, wzr
  4078e4:	b	407a98 <ferror@plt+0x4c08>
  4078e8:	ldp	q1, q0, [sp, #64]
  4078ec:	bl	413190 <_obstack_memory_used@@Base+0x77c>
  4078f0:	cmp	w0, #0x0
  4078f4:	b.le	407b48 <ferror@plt+0x4cb8>
  4078f8:	mov	w20, #0x1                   	// #1
  4078fc:	ldr	w8, [sp, #156]
  407900:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407904:	b	407784 <ferror@plt+0x48f4>
  407908:	cmp	x19, #0x1f
  40790c:	b.ls	407934 <ferror@plt+0x4aa4>  // b.plast
  407910:	cmp	x12, x25
  407914:	b.cs	407f04 <ferror@plt+0x5074>  // b.hs, b.nlast
  407918:	add	x8, x25, x14
  40791c:	sub	x8, x8, x27
  407920:	sub	x8, x8, x28
  407924:	add	x8, x20, x8
  407928:	add	x8, x8, #0x1
  40792c:	cmp	x27, x8
  407930:	b.cs	407f04 <ferror@plt+0x5074>  // b.hs, b.nlast
  407934:	mov	x8, xzr
  407938:	add	x9, x8, x14
  40793c:	sub	x9, x9, x28
  407940:	add	x8, x8, x27
  407944:	add	x9, x20, x9
  407948:	add	x9, x9, #0x1
  40794c:	sub	x10, x8, x25
  407950:	ldrb	w11, [x8], #1
  407954:	adds	x10, x10, #0x1
  407958:	strb	w11, [x9], #1
  40795c:	b.cc	407950 <ferror@plt+0x4ac0>  // b.lo, b.ul, b.last
  407960:	mov	x8, x19
  407964:	b	4075fc <ferror@plt+0x476c>
  407968:	mov	w10, wzr
  40796c:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x145ec>
  407970:	ldr	w12, [x12, #1392]
  407974:	cmp	w12, w13
  407978:	b.eq	40771c <ferror@plt+0x488c>  // b.none
  40797c:	mov	x12, x11
  407980:	and	w10, w10, #0xff
  407984:	cmp	w10, #0x31
  407988:	b.cs	407758 <ferror@plt+0x48c8>  // b.hs, b.nlast
  40798c:	mov	w9, wzr
  407990:	cmp	w8, #0x2d
  407994:	cinc	x14, x1, eq  // eq = none
  407998:	mov	x11, x14
  40799c:	ldrb	w13, [x11], #1
  4079a0:	sub	w10, w13, #0x30
  4079a4:	cmp	w10, #0x9
  4079a8:	b.hi	407a60 <ferror@plt+0x4bd0>  // b.pmore
  4079ac:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4079b0:	ldr	w15, [x10, #1396]
  4079b4:	mov	w10, wzr
  4079b8:	ldrb	w16, [x11]
  4079bc:	and	w12, w10, #0xff
  4079c0:	cmp	w12, w13, uxtb
  4079c4:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  4079c8:	add	x12, x14, #0x2
  4079cc:	cmp	w15, w16
  4079d0:	csel	x14, x12, x11, eq  // eq = none
  4079d4:	mov	x11, x14
  4079d8:	ldrb	w13, [x11], #1
  4079dc:	sub	w17, w13, #0x30
  4079e0:	cmp	w17, #0xa
  4079e4:	b.cc	4079b8 <ferror@plt+0x4b28>  // b.lo, b.ul, b.last
  4079e8:	cmp	w15, w16
  4079ec:	b.eq	407a30 <ferror@plt+0x4ba0>  // b.none
  4079f0:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x145ec>
  4079f4:	ldr	w12, [x12, #1392]
  4079f8:	cmp	w12, w13
  4079fc:	b.ne	407a74 <ferror@plt+0x4be4>  // b.any
  407a00:	ldrb	w13, [x11], #1
  407a04:	sub	w12, w13, #0x30
  407a08:	cmp	w12, #0x9
  407a0c:	mov	x12, x11
  407a10:	b.hi	407a30 <ferror@plt+0x4ba0>  // b.pmore
  407a14:	and	w11, w10, #0xff
  407a18:	cmp	w11, w13, uxtb
  407a1c:	csel	w10, w13, w10, cc  // cc = lo, ul, last
  407a20:	ldrb	w13, [x12], #1
  407a24:	sub	w11, w13, #0x30
  407a28:	cmp	w11, #0xa
  407a2c:	b.cc	407a14 <ferror@plt+0x4b84>  // b.lo, b.ul, b.last
  407a30:	and	w10, w10, #0xff
  407a34:	cmp	w10, #0x31
  407a38:	b.cc	407a84 <ferror@plt+0x4bf4>  // b.lo, b.ul, b.last
  407a3c:	ldurb	w10, [x12, #-1]
  407a40:	adrp	x11, 413000 <_obstack_memory_used@@Base+0x5ec>
  407a44:	add	x11, x11, #0xf38
  407a48:	cmp	w8, #0x2d
  407a4c:	ldrb	w10, [x11, x10]
  407a50:	cneg	w8, w10, eq  // eq = none
  407a54:	subs	w20, w9, w8
  407a58:	b.ne	4074b4 <ferror@plt+0x4624>  // b.any
  407a5c:	b	4074a0 <ferror@plt+0x4610>
  407a60:	mov	w10, wzr
  407a64:	adrp	x12, 427000 <_obstack_memory_used@@Base+0x145ec>
  407a68:	ldr	w12, [x12, #1392]
  407a6c:	cmp	w12, w13
  407a70:	b.eq	407a00 <ferror@plt+0x4b70>  // b.none
  407a74:	mov	x12, x11
  407a78:	and	w10, w10, #0xff
  407a7c:	cmp	w10, #0x31
  407a80:	b.cs	407a3c <ferror@plt+0x4bac>  // b.hs, b.nlast
  407a84:	mov	w8, wzr
  407a88:	subs	w20, w9, w8
  407a8c:	b.ne	4074b4 <ferror@plt+0x4624>  // b.any
  407a90:	b	4074a0 <ferror@plt+0x4610>
  407a94:	ldr	w8, [x12, #48]
  407a98:	sub	x9, x28, #0x1
  407a9c:	ldrb	w10, [x9, #1]!
  407aa0:	add	x10, x24, x10
  407aa4:	ldrb	w10, [x10, #556]
  407aa8:	cbnz	w10, 407a9c <ferror@plt+0x4c0c>
  407aac:	mov	x10, xzr
  407ab0:	mov	w11, #0xc                   	// #12
  407ab4:	add	x12, x11, x10
  407ab8:	adrp	x13, 427000 <_obstack_memory_used@@Base+0x145ec>
  407abc:	lsr	x12, x12, #1
  407ac0:	add	x13, x13, #0x3c0
  407ac4:	add	x13, x13, x12, lsl #4
  407ac8:	ldr	x15, [x13, #40]
  407acc:	ldrb	w16, [x15]
  407ad0:	cbz	w16, 407b34 <ferror@plt+0x4ca4>
  407ad4:	mov	x14, xzr
  407ad8:	add	x15, x15, #0x1
  407adc:	ldrb	w17, [x9, x14]
  407ae0:	add	x17, x24, x17
  407ae4:	ldrb	w17, [x17, #1324]
  407ae8:	cmp	w17, w16, uxtb
  407aec:	b.cc	407b04 <ferror@plt+0x4c74>  // b.lo, b.ul, b.last
  407af0:	b.hi	407b14 <ferror@plt+0x4c84>  // b.pmore
  407af4:	ldrb	w16, [x15, x14]
  407af8:	add	x14, x14, #0x1
  407afc:	cbnz	w16, 407adc <ferror@plt+0x4c4c>
  407b00:	b	407b34 <ferror@plt+0x4ca4>
  407b04:	mov	x11, x12
  407b08:	cmp	x10, x11
  407b0c:	b.cc	407ab4 <ferror@plt+0x4c24>  // b.lo, b.ul, b.last
  407b10:	b	407b20 <ferror@plt+0x4c90>
  407b14:	add	x10, x12, #0x1
  407b18:	cmp	x10, x11
  407b1c:	b.cc	407ab4 <ferror@plt+0x4c24>  // b.lo, b.ul, b.last
  407b20:	mov	w9, wzr
  407b24:	sub	w20, w8, wzr
  407b28:	ldr	w8, [sp, #156]
  407b2c:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407b30:	b	407784 <ferror@plt+0x48f4>
  407b34:	ldr	w9, [x13, #48]
  407b38:	sub	w20, w8, w9
  407b3c:	ldr	w8, [sp, #156]
  407b40:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407b44:	b	407784 <ferror@plt+0x48f4>
  407b48:	ldp	q1, q0, [sp, #64]
  407b4c:	bl	413088 <_obstack_memory_used@@Base+0x674>
  407b50:	cbnz	w0, 407f3c <ferror@plt+0x50ac>
  407b54:	mov	w20, wzr
  407b58:	ldr	w8, [sp, #156]
  407b5c:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407b60:	b	407784 <ferror@plt+0x48f4>
  407b64:	ldrb	w8, [x21, #51]
  407b68:	cbz	w8, 407fc4 <ferror@plt+0x5134>
  407b6c:	ldp	q0, q2, [x24, #400]
  407b70:	ldp	q3, q1, [x24, #416]
  407b74:	ldp	q16, q7, [x24, #464]
  407b78:	ldr	x9, [sp, #48]
  407b7c:	add	x8, x24, #0x190
  407b80:	ldp	q6, q5, [x24, #480]
  407b84:	ldr	q4, [x24, #400]
  407b88:	stp	q0, q3, [x9]
  407b8c:	ldp	q17, q3, [x24, #448]
  407b90:	str	q7, [x9, #80]
  407b94:	ldp	q7, q0, [x24, #432]
  407b98:	str	q1, [x9, #32]
  407b9c:	ldur	q1, [x8, #140]
  407ba0:	str	x28, [sp]
  407ba4:	stp	q0, q3, [x9, #48]
  407ba8:	ldp	q3, q0, [x24, #496]
  407bac:	stur	q1, [x9, #140]
  407bb0:	stp	q5, q0, [x9, #96]
  407bb4:	ldp	q1, q0, [x24, #512]
  407bb8:	str	q0, [x9, #128]
  407bbc:	str	q2, [sp, #4176]
  407bc0:	ldr	q0, [x24, #528]
  407bc4:	ldur	q2, [x8, #140]
  407bc8:	ldrb	w8, [x24]
  407bcc:	add	x9, sp, #0xfcd
  407bd0:	str	q4, [sp, #4160]
  407bd4:	str	q6, [sp, #4240]
  407bd8:	str	q16, [sp, #4224]
  407bdc:	str	q17, [sp, #4208]
  407be0:	str	q7, [sp, #4192]
  407be4:	stur	q2, [x9, #255]
  407be8:	str	q0, [sp, #4288]
  407bec:	str	q1, [sp, #4272]
  407bf0:	str	q3, [sp, #4256]
  407bf4:	cbz	w8, 407fdc <ferror@plt+0x514c>
  407bf8:	add	x8, x20, x13
  407bfc:	str	x8, [sp, #32]
  407c00:	add	x8, x28, x19
  407c04:	str	x8, [sp, #24]
  407c08:	add	x8, x19, x13
  407c0c:	add	x26, sp, #0x1, lsl #12
  407c10:	add	x8, x8, x8, lsl #1
  407c14:	mov	x22, xzr
  407c18:	add	x26, x26, #0x1a0
  407c1c:	add	x23, x8, #0x2
  407c20:	mov	x25, x20
  407c24:	mov	w9, #0xfa0                 	// #4000
  407c28:	str	wzr, [sp, #44]
  407c2c:	str	x9, [sp, #56]
  407c30:	str	x28, [sp, #80]
  407c34:	str	x23, [sp, #16]
  407c38:	mov	x20, x9
  407c3c:	cmp	x20, x23
  407c40:	b.cc	407c98 <ferror@plt+0x4e08>  // b.lo, b.ul, b.last
  407c44:	b	407d50 <ferror@plt+0x4ec0>
  407c48:	ldr	x22, [sp, #64]
  407c4c:	add	x2, sp, #0x1, lsl #12
  407c50:	str	x0, [sp, #80]
  407c54:	add	x2, x2, #0x40
  407c58:	mov	x0, x27
  407c5c:	mov	x1, x20
  407c60:	mov	x25, x8
  407c64:	bl	40bb20 <ferror@plt+0x8c90>
  407c68:	ldr	x2, [sp, #48]
  407c6c:	mov	x26, x27
  407c70:	add	x27, x27, x20
  407c74:	mov	x0, x27
  407c78:	mov	x1, x28
  407c7c:	bl	40bb20 <ferror@plt+0x8c90>
  407c80:	ldr	w8, [sp, #44]
  407c84:	ldr	x23, [sp, #16]
  407c88:	cbz	w8, 407d10 <ferror@plt+0x4e80>
  407c8c:	ldr	x20, [sp, #56]
  407c90:	cmp	x20, x23
  407c94:	b.cs	407d50 <ferror@plt+0x4ec0>  // b.hs, b.nlast
  407c98:	add	x8, x20, x20, lsl #1
  407c9c:	lsr	x8, x8, #1
  407ca0:	cmp	x23, x8
  407ca4:	mov	x0, x22
  407ca8:	csel	x20, x23, x8, hi  // hi = pmore
  407cac:	bl	402c00 <free@plt>
  407cb0:	mov	x0, x20
  407cb4:	bl	402930 <malloc@plt>
  407cb8:	cmp	x0, #0x0
  407cbc:	mov	w8, #0xfa0                 	// #4000
  407cc0:	csel	x20, x8, x20, eq  // eq = none
  407cc4:	add	x8, sp, #0x1, lsl #12
  407cc8:	add	x8, x8, #0x1a0
  407ccc:	mov	x27, x0
  407cd0:	csel	x22, x8, x0, eq  // eq = none
  407cd4:	ldp	x26, x23, [sp, #24]
  407cd8:	mov	x1, x25
  407cdc:	cmp	x25, x23
  407ce0:	b.cc	407d68 <ferror@plt+0x4ed8>  // b.lo, b.ul, b.last
  407ce4:	mov	x28, xzr
  407ce8:	ldr	x1, [sp, #80]
  407cec:	str	x27, [sp, #64]
  407cf0:	cmp	x1, x26
  407cf4:	b.cc	407d88 <ferror@plt+0x4ef8>  // b.lo, b.ul, b.last
  407cf8:	mov	x27, x22
  407cfc:	mov	x22, xzr
  407d00:	add	x8, x22, x28
  407d04:	cmp	x8, x20
  407d08:	b.ls	407db0 <ferror@plt+0x4f20>  // b.plast
  407d0c:	b	407dc0 <ferror@plt+0x4f30>
  407d10:	cmp	x20, x28
  407d14:	cset	w8, cc  // cc = lo, ul, last
  407d18:	csel	x2, x20, x28, cc  // cc = lo, ul, last
  407d1c:	mov	x0, x26
  407d20:	mov	x1, x27
  407d24:	str	w8, [sp, #44]
  407d28:	cset	w28, hi  // hi = pmore
  407d2c:	bl	402b60 <memcmp@plt>
  407d30:	ldr	w8, [sp, #44]
  407d34:	cmp	w0, #0x0
  407d38:	sub	w8, w28, w8
  407d3c:	csel	w8, w8, w0, eq  // eq = none
  407d40:	str	w8, [sp, #44]
  407d44:	ldr	x20, [sp, #56]
  407d48:	cmp	x20, x23
  407d4c:	b.cc	407c98 <ferror@plt+0x4e08>  // b.lo, b.ul, b.last
  407d50:	mov	x27, x22
  407d54:	mov	x22, x26
  407d58:	ldp	x26, x23, [sp, #24]
  407d5c:	mov	x1, x25
  407d60:	cmp	x25, x23
  407d64:	b.cs	407ce4 <ferror@plt+0x4e54>  // b.hs, b.nlast
  407d68:	mov	x0, x22
  407d6c:	mov	x2, x20
  407d70:	bl	408bfc <ferror@plt+0x5d6c>
  407d74:	add	x28, x0, #0x1
  407d78:	ldr	x1, [sp, #80]
  407d7c:	str	x27, [sp, #64]
  407d80:	cmp	x1, x26
  407d84:	b.cs	407cf8 <ferror@plt+0x4e68>  // b.hs, b.nlast
  407d88:	add	x8, x22, x28
  407d8c:	subs	x9, x20, x28
  407d90:	csel	x0, x8, xzr, cs  // cs = hs, nlast
  407d94:	csel	x2, xzr, x9, cc  // cc = lo, ul, last
  407d98:	mov	x27, x22
  407d9c:	bl	408bfc <ferror@plt+0x5d6c>
  407da0:	add	x22, x0, #0x1
  407da4:	add	x8, x22, x28
  407da8:	cmp	x8, x20
  407dac:	b.hi	407dc0 <ferror@plt+0x4f30>  // b.pmore
  407db0:	cmp	x20, x28
  407db4:	b.cc	407dc0 <ferror@plt+0x4f30>  // b.lo, b.ul, b.last
  407db8:	str	x20, [sp, #56]
  407dbc:	b	407e70 <ferror@plt+0x4fe0>
  407dc0:	ldr	x0, [sp, #64]
  407dc4:	add	x9, x8, x8, lsl #1
  407dc8:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  407dcc:	lsr	x9, x9, #1
  407dd0:	cmp	x8, x10
  407dd4:	csel	x20, x9, x8, cc  // cc = lo, ul, last
  407dd8:	bl	402c00 <free@plt>
  407ddc:	mov	x0, x20
  407de0:	bl	4112fc <ferror@plt+0xe46c>
  407de4:	mov	x8, x25
  407de8:	cmp	x25, x23
  407dec:	mov	x27, x0
  407df0:	b.cs	407e54 <ferror@plt+0x4fc4>  // b.hs, b.nlast
  407df4:	mov	x0, x27
  407df8:	mov	x1, x8
  407dfc:	mov	x2, x28
  407e00:	bl	402cb0 <strxfrm@plt>
  407e04:	mov	x8, x25
  407e08:	ldr	x1, [sp, #80]
  407e0c:	stp	x20, x27, [sp, #56]
  407e10:	cmp	x1, x26
  407e14:	b.cc	407e64 <ferror@plt+0x4fd4>  // b.lo, b.ul, b.last
  407e18:	mov	x20, x28
  407e1c:	mov	x28, x22
  407e20:	cmp	x8, x23
  407e24:	b.cs	407e84 <ferror@plt+0x4ff4>  // b.hs, b.nlast
  407e28:	mov	x0, x8
  407e2c:	mov	x22, x8
  407e30:	bl	4027c0 <strlen@plt>
  407e34:	add	x8, x0, x22
  407e38:	add	x8, x8, #0x1
  407e3c:	ldr	x0, [sp, #80]
  407e40:	cmp	x0, x26
  407e44:	b.cc	407e90 <ferror@plt+0x5000>  // b.lo, b.ul, b.last
  407e48:	cmp	x8, x23
  407e4c:	b.cs	407eb0 <ferror@plt+0x5020>  // b.hs, b.nlast
  407e50:	b	407c48 <ferror@plt+0x4db8>
  407e54:	ldr	x1, [sp, #80]
  407e58:	stp	x20, x27, [sp, #56]
  407e5c:	cmp	x1, x26
  407e60:	b.cs	407e18 <ferror@plt+0x4f88>  // b.hs, b.nlast
  407e64:	add	x0, x27, x28
  407e68:	mov	x2, x22
  407e6c:	bl	402cb0 <strxfrm@plt>
  407e70:	mov	x8, x25
  407e74:	mov	x20, x28
  407e78:	mov	x28, x22
  407e7c:	cmp	x8, x23
  407e80:	b.cc	407e28 <ferror@plt+0x4f98>  // b.lo, b.ul, b.last
  407e84:	ldr	x0, [sp, #80]
  407e88:	cmp	x0, x26
  407e8c:	b.cs	407e48 <ferror@plt+0x4fb8>  // b.hs, b.nlast
  407e90:	mov	x25, x0
  407e94:	mov	x22, x8
  407e98:	bl	4027c0 <strlen@plt>
  407e9c:	add	x8, x0, x25
  407ea0:	add	x0, x8, #0x1
  407ea4:	mov	x8, x22
  407ea8:	cmp	x8, x23
  407eac:	b.cc	407c48 <ferror@plt+0x4db8>  // b.lo, b.ul, b.last
  407eb0:	cmp	x0, x26
  407eb4:	b.cc	407c48 <ferror@plt+0x4db8>  // b.lo, b.ul, b.last
  407eb8:	add	x25, x27, x20
  407ebc:	mov	x0, x27
  407ec0:	ldr	x27, [sp, #64]
  407ec4:	mov	x22, x28
  407ec8:	mov	x23, x20
  407ecc:	b	407ff4 <ferror@plt+0x5164>
  407ed0:	and	x8, x23, #0xffffffffffffffe0
  407ed4:	add	x9, x28, #0x10
  407ed8:	add	x10, x20, #0x10
  407edc:	mov	x11, x8
  407ee0:	ldp	q0, q1, [x9, #-16]
  407ee4:	add	x9, x9, #0x20
  407ee8:	subs	x11, x11, #0x20
  407eec:	stp	q0, q1, [x10, #-16]
  407ef0:	add	x10, x10, #0x20
  407ef4:	b.ne	407ee0 <ferror@plt+0x5050>  // b.any
  407ef8:	cmp	x23, x8
  407efc:	b.ne	4075d0 <ferror@plt+0x4740>  // b.any
  407f00:	b	4075ec <ferror@plt+0x475c>
  407f04:	and	x8, x19, #0xffffffffffffffe0
  407f08:	add	x10, x20, x23
  407f0c:	add	x9, x27, #0x10
  407f10:	add	x10, x10, #0x11
  407f14:	mov	x11, x8
  407f18:	ldp	q0, q1, [x9, #-16]
  407f1c:	subs	x11, x11, #0x20
  407f20:	add	x9, x9, #0x20
  407f24:	stp	q0, q1, [x10, #-16]
  407f28:	add	x10, x10, #0x20
  407f2c:	b.ne	407f18 <ferror@plt+0x5088>  // b.any
  407f30:	cmp	x19, x8
  407f34:	b.ne	407938 <ferror@plt+0x4aa8>  // b.any
  407f38:	b	407960 <ferror@plt+0x4ad0>
  407f3c:	ldr	q0, [sp, #64]
  407f40:	mov	v1.16b, v0.16b
  407f44:	bl	413418 <_obstack_memory_used@@Base+0xa04>
  407f48:	cbz	w0, 40766c <ferror@plt+0x47dc>
  407f4c:	ldr	q0, [sp, #80]
  407f50:	mov	v1.16b, v0.16b
  407f54:	bl	413418 <_obstack_memory_used@@Base+0xa04>
  407f58:	cbz	w0, 4078f8 <ferror@plt+0x4a68>
  407f5c:	ldr	x0, [sp, #144]
  407f60:	mov	x1, xzr
  407f64:	bl	402bf0 <strtold@plt>
  407f68:	mov	x0, x28
  407f6c:	mov	x1, xzr
  407f70:	str	q0, [sp, #4512]
  407f74:	bl	402bf0 <strtold@plt>
  407f78:	str	q0, [sp, #4160]
  407f7c:	ldr	x8, [sp, #4512]
  407f80:	ldr	x9, [sp, #4160]
  407f84:	rev	x8, x8
  407f88:	rev	x9, x9
  407f8c:	cmp	x8, x9
  407f90:	b.ne	407fac <ferror@plt+0x511c>  // b.any
  407f94:	ldr	x8, [sp, #4520]
  407f98:	ldr	x9, [sp, #4168]
  407f9c:	rev	x8, x8
  407fa0:	rev	x9, x9
  407fa4:	cmp	x8, x9
  407fa8:	b.eq	407b54 <ferror@plt+0x4cc4>  // b.none
  407fac:	cmp	x8, x9
  407fb0:	mov	w8, #0xffffffff            	// #-1
  407fb4:	cneg	w20, w8, cs  // cs = hs, nlast
  407fb8:	ldr	w8, [sp, #156]
  407fbc:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  407fc0:	b	407784 <ferror@plt+0x48f4>
  407fc4:	ldrb	w8, [x21, #56]
  407fc8:	cbz	w8, 4080d4 <ferror@plt+0x5244>
  407fcc:	mov	x0, x20
  407fd0:	mov	x1, x28
  407fd4:	bl	40bd20 <ferror@plt+0x8e90>
  407fd8:	b	4074b0 <ferror@plt+0x4620>
  407fdc:	mov	x27, xzr
  407fe0:	str	wzr, [sp, #44]
  407fe4:	mov	x22, x19
  407fe8:	mov	x25, x28
  407fec:	mov	x23, x13
  407ff0:	mov	x0, x20
  407ff4:	add	x2, sp, #0x1, lsl #12
  407ff8:	add	x2, x2, #0x40
  407ffc:	mov	x1, x23
  408000:	mov	x26, x0
  408004:	bl	40bb20 <ferror@plt+0x8c90>
  408008:	add	x0, sp, #0x1, lsl #12
  40800c:	add	x1, sp, #0x1, lsl #12
  408010:	add	x0, x0, #0x40
  408014:	add	x1, x1, #0x180
  408018:	bl	40af4c <ferror@plt+0x80bc>
  40801c:	ldr	x20, [sp, #48]
  408020:	mov	x0, x25
  408024:	mov	x1, x22
  408028:	mov	x2, x20
  40802c:	bl	40bb20 <ferror@plt+0x8c90>
  408030:	ldr	x1, [sp, #8]
  408034:	mov	x0, x20
  408038:	bl	40af4c <ferror@plt+0x80bc>
  40803c:	ldr	x8, [sp, #4480]
  408040:	ldr	x9, [sp, #4496]
  408044:	rev	x8, x8
  408048:	rev	x9, x9
  40804c:	cmp	x8, x9
  408050:	b.ne	408074 <ferror@plt+0x51e4>  // b.any
  408054:	ldr	x8, [sp, #4488]
  408058:	ldr	x9, [sp, #4504]
  40805c:	rev	x8, x8
  408060:	rev	x9, x9
  408064:	cmp	x8, x9
  408068:	b.ne	408074 <ferror@plt+0x51e4>  // b.any
  40806c:	mov	w20, wzr
  408070:	b	408080 <ferror@plt+0x51f0>
  408074:	cmp	x8, x9
  408078:	mov	w8, #0xffffffff            	// #-1
  40807c:	cneg	w20, w8, cs  // cs = hs, nlast
  408080:	cbnz	w20, 4080bc <ferror@plt+0x522c>
  408084:	ldr	w8, [sp, #44]
  408088:	mov	w20, w8
  40808c:	cbnz	w8, 4080bc <ferror@plt+0x522c>
  408090:	cmp	x23, x22
  408094:	csel	x2, x23, x22, cc  // cc = lo, ul, last
  408098:	mov	x0, x26
  40809c:	mov	x1, x25
  4080a0:	bl	402b60 <memcmp@plt>
  4080a4:	mov	w20, w0
  4080a8:	cbnz	w0, 4080bc <ferror@plt+0x522c>
  4080ac:	cmp	x23, x22
  4080b0:	cset	w8, cc  // cc = lo, ul, last
  4080b4:	cset	w9, hi  // hi = pmore
  4080b8:	sub	w20, w9, w8
  4080bc:	mov	x0, x27
  4080c0:	bl	402c00 <free@plt>
  4080c4:	ldr	w8, [sp, #156]
  4080c8:	ldr	x28, [sp]
  4080cc:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  4080d0:	b	407784 <ferror@plt+0x48f4>
  4080d4:	cbz	x13, 4081e8 <ferror@plt+0x5358>
  4080d8:	cbz	x19, 4078f8 <ferror@plt+0x4a68>
  4080dc:	add	x1, x13, #0x1
  4080e0:	add	x3, x19, #0x1
  4080e4:	mov	x0, x20
  4080e8:	mov	x2, x28
  4080ec:	bl	411780 <ferror@plt+0xe8f0>
  4080f0:	b	4074b0 <ferror@plt+0x4620>
  4080f4:	cbz	x22, 408208 <ferror@plt+0x5378>
  4080f8:	cbz	x26, 408184 <ferror@plt+0x52f4>
  4080fc:	cmp	x28, x14
  408100:	b.cs	408118 <ferror@plt+0x5288>  // b.hs, b.nlast
  408104:	ldrb	w8, [x28]
  408108:	ldrb	w8, [x22, x8]
  40810c:	cbz	w8, 408128 <ferror@plt+0x5298>
  408110:	add	x28, x28, #0x1
  408114:	b	4080fc <ferror@plt+0x526c>
  408118:	mov	w8, wzr
  40811c:	cmp	x27, x25
  408120:	b.cc	408134 <ferror@plt+0x52a4>  // b.lo, b.ul, b.last
  408124:	b	4081fc <ferror@plt+0x536c>
  408128:	mov	w8, #0x1                   	// #1
  40812c:	cmp	x27, x25
  408130:	b.cs	4081fc <ferror@plt+0x536c>  // b.hs, b.nlast
  408134:	ldrb	w9, [x27]
  408138:	ldrb	w10, [x22, x9]
  40813c:	cbz	w10, 408150 <ferror@plt+0x52c0>
  408140:	add	x27, x27, #0x1
  408144:	cmp	x27, x25
  408148:	b.cc	408134 <ferror@plt+0x52a4>  // b.lo, b.ul, b.last
  40814c:	b	4081fc <ferror@plt+0x536c>
  408150:	cbz	w8, 408274 <ferror@plt+0x53e4>
  408154:	ldrb	w8, [x28]
  408158:	ldrb	w9, [x26, x9]
  40815c:	ldrb	w8, [x26, x8]
  408160:	subs	w20, w8, w9
  408164:	b.ne	408290 <ferror@plt+0x5400>  // b.any
  408168:	add	x28, x28, #0x1
  40816c:	add	x27, x27, #0x1
  408170:	b	4080fc <ferror@plt+0x526c>
  408174:	ldrb	w8, [x28]
  408178:	ldrb	w8, [x22, x8]
  40817c:	cbz	w8, 40819c <ferror@plt+0x530c>
  408180:	add	x28, x28, #0x1
  408184:	cmp	x28, x14
  408188:	b.cc	408174 <ferror@plt+0x52e4>  // b.lo, b.ul, b.last
  40818c:	mov	w8, wzr
  408190:	cmp	x27, x25
  408194:	b.cc	4081a8 <ferror@plt+0x5318>  // b.lo, b.ul, b.last
  408198:	b	4081fc <ferror@plt+0x536c>
  40819c:	mov	w8, #0x1                   	// #1
  4081a0:	cmp	x27, x25
  4081a4:	b.cs	4081fc <ferror@plt+0x536c>  // b.hs, b.nlast
  4081a8:	ldrb	w9, [x27]
  4081ac:	ldrb	w10, [x22, x9]
  4081b0:	cbz	w10, 4081c4 <ferror@plt+0x5334>
  4081b4:	add	x27, x27, #0x1
  4081b8:	cmp	x27, x25
  4081bc:	b.cc	4081a8 <ferror@plt+0x5318>  // b.lo, b.ul, b.last
  4081c0:	b	4081fc <ferror@plt+0x536c>
  4081c4:	cbz	w8, 408274 <ferror@plt+0x53e4>
  4081c8:	ldrb	w8, [x28]
  4081cc:	subs	w20, w8, w9
  4081d0:	b.ne	408290 <ferror@plt+0x5400>  // b.any
  4081d4:	add	x28, x28, #0x1
  4081d8:	add	x27, x27, #0x1
  4081dc:	cmp	x28, x14
  4081e0:	b.cc	408174 <ferror@plt+0x52e4>  // b.lo, b.ul, b.last
  4081e4:	b	40818c <ferror@plt+0x52fc>
  4081e8:	cmp	x19, #0x0
  4081ec:	csetm	w20, ne  // ne = any
  4081f0:	ldr	w8, [sp, #156]
  4081f4:	cbnz	w8, 4074bc <ferror@plt+0x462c>
  4081f8:	b	407784 <ferror@plt+0x48f4>
  4081fc:	mov	w9, wzr
  408200:	add	w20, w9, w8
  408204:	b	407798 <ferror@plt+0x4908>
  408208:	cbz	x23, 408240 <ferror@plt+0x53b0>
  40820c:	cbz	x19, 40827c <ferror@plt+0x53ec>
  408210:	cbz	x26, 40824c <ferror@plt+0x53bc>
  408214:	cmp	x27, x25
  408218:	b.cs	408264 <ferror@plt+0x53d4>  // b.hs, b.nlast
  40821c:	cmp	x28, x14
  408220:	b.cs	408264 <ferror@plt+0x53d4>  // b.hs, b.nlast
  408224:	ldrb	w8, [x28], #1
  408228:	ldrb	w8, [x26, x8]
  40822c:	ldrb	w9, [x27], #1
  408230:	ldrb	w9, [x26, x9]
  408234:	subs	w20, w8, w9
  408238:	b.eq	408214 <ferror@plt+0x5384>  // b.none
  40823c:	b	408290 <ferror@plt+0x5400>
  408240:	cmp	x19, #0x0
  408244:	csetm	w20, ne  // ne = any
  408248:	b	407798 <ferror@plt+0x4908>
  40824c:	cmp	x23, x19
  408250:	csel	x2, x23, x19, cc  // cc = lo, ul, last
  408254:	mov	x0, x28
  408258:	mov	x1, x27
  40825c:	bl	402b60 <memcmp@plt>
  408260:	cbnz	w0, 40828c <ferror@plt+0x53fc>
  408264:	cmp	x23, x19
  408268:	cset	w20, ne  // ne = any
  40826c:	b.cs	407798 <ferror@plt+0x4908>  // b.hs, b.nlast
  408270:	b	408284 <ferror@plt+0x53f4>
  408274:	mov	w9, #0xffffffff            	// #-1
  408278:	b	408200 <ferror@plt+0x5370>
  40827c:	mov	w20, #0x1                   	// #1
  408280:	b	408290 <ferror@plt+0x5400>
  408284:	mov	w20, #0xffffffff            	// #-1
  408288:	b	408290 <ferror@plt+0x5400>
  40828c:	mov	w20, w0
  408290:	ldrb	w8, [x21, #55]
  408294:	cmp	w8, #0x0
  408298:	cneg	w0, w20, ne  // ne = any
  40829c:	cbnz	w0, 40834c <ferror@plt+0x54bc>
  4082a0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4082a4:	ldrb	w8, [x8, #1384]
  4082a8:	tbnz	w8, #0, 4082bc <ferror@plt+0x542c>
  4082ac:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4082b0:	ldrb	w8, [x8, #1383]
  4082b4:	ldp	x0, x1, [sp, #120]
  4082b8:	tbz	w8, #0, 4082c4 <ferror@plt+0x5434>
  4082bc:	mov	w0, wzr
  4082c0:	b	40834c <ferror@plt+0x54bc>
  4082c4:	ldr	x19, [x0, #8]
  4082c8:	ldr	x20, [x1, #8]
  4082cc:	sub	x22, x19, #0x1
  4082d0:	sub	x21, x20, #0x1
  4082d4:	cbz	x22, 408300 <ferror@plt+0x5470>
  4082d8:	cbz	x21, 40830c <ferror@plt+0x547c>
  4082dc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4082e0:	ldrb	w8, [x8, #1376]
  4082e4:	ldr	x0, [x0]
  4082e8:	ldr	x2, [x1]
  4082ec:	cbz	w8, 408314 <ferror@plt+0x5484>
  4082f0:	mov	x1, x19
  4082f4:	mov	x3, x20
  4082f8:	bl	411780 <ferror@plt+0xe8f0>
  4082fc:	b	40833c <ferror@plt+0x54ac>
  408300:	cmp	x21, #0x0
  408304:	csetm	w0, ne  // ne = any
  408308:	b	40833c <ferror@plt+0x54ac>
  40830c:	mov	w0, #0x1                   	// #1
  408310:	b	40833c <ferror@plt+0x54ac>
  408314:	cmp	x22, x21
  408318:	csel	x8, x22, x21, cc  // cc = lo, ul, last
  40831c:	mov	x1, x2
  408320:	mov	x2, x8
  408324:	bl	402b60 <memcmp@plt>
  408328:	cbnz	w0, 40833c <ferror@plt+0x54ac>
  40832c:	cmp	x19, x20
  408330:	cset	w8, ne  // ne = any
  408334:	cmp	x22, x21
  408338:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  40833c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408340:	ldrb	w8, [x8, #1388]
  408344:	cmp	w8, #0x0
  408348:	cneg	w0, w0, ne  // ne = any
  40834c:	add	sp, sp, #0x2, lsl #12
  408350:	add	sp, sp, #0x150
  408354:	ldp	x20, x19, [sp, #80]
  408358:	ldp	x22, x21, [sp, #64]
  40835c:	ldp	x24, x23, [sp, #48]
  408360:	ldp	x26, x25, [sp, #32]
  408364:	ldp	x28, x27, [sp, #16]
  408368:	ldp	x29, x30, [sp], #96
  40836c:	ret
  408370:	sub	sp, sp, #0x70
  408374:	stp	x29, x30, [sp, #16]
  408378:	stp	x28, x27, [sp, #32]
  40837c:	stp	x26, x25, [sp, #48]
  408380:	stp	x24, x23, [sp, #64]
  408384:	stp	x22, x21, [sp, #80]
  408388:	stp	x20, x19, [sp, #96]
  40838c:	ldp	x21, x23, [x0]
  408390:	mov	x22, x2
  408394:	mov	x20, x1
  408398:	add	x29, sp, #0x10
  40839c:	add	x24, x21, x23
  4083a0:	str	x0, [sp]
  4083a4:	cbnz	x2, 40843c <ferror@plt+0x55ac>
  4083a8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4083ac:	ldrb	w8, [x8, #1382]
  4083b0:	cmp	w8, #0x1
  4083b4:	b.ne	40843c <ferror@plt+0x55ac>  // b.any
  4083b8:	sub	x22, x23, #0x1
  4083bc:	mov	w23, #0xa                   	// #10
  4083c0:	mov	w25, #0x3e                  	// #62
  4083c4:	cmp	x21, x24
  4083c8:	b.cs	408494 <ferror@plt+0x5604>  // b.hs, b.nlast
  4083cc:	ldrb	w9, [x21], #1
  4083d0:	ldp	x8, x10, [x20, #40]
  4083d4:	cmp	x22, #0x0
  4083d8:	csel	w11, w23, w9, eq  // eq = none
  4083dc:	cmp	w9, #0x9
  4083e0:	csel	w1, w25, w11, eq  // eq = none
  4083e4:	cmp	x8, x10
  4083e8:	b.cs	408408 <ferror@plt+0x5578>  // b.hs, b.nlast
  4083ec:	add	x9, x8, #0x1
  4083f0:	str	x9, [x20, #40]
  4083f4:	strb	w1, [x8]
  4083f8:	cmn	w1, #0x1
  4083fc:	sub	x22, x22, #0x1
  408400:	b.ne	4083c4 <ferror@plt+0x5534>  // b.any
  408404:	b	408420 <ferror@plt+0x5590>
  408408:	mov	x0, x20
  40840c:	bl	402b30 <__overflow@plt>
  408410:	mov	w1, w0
  408414:	cmn	w1, #0x1
  408418:	sub	x22, x22, #0x1
  40841c:	b.ne	4083c4 <ferror@plt+0x5534>  // b.any
  408420:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408424:	add	x1, x1, #0x94c
  408428:	mov	w2, #0x5                   	// #5
  40842c:	mov	x0, xzr
  408430:	bl	402d70 <dcgettext@plt>
  408434:	mov	x1, xzr
  408438:	bl	406c50 <ferror@plt+0x3dc0>
  40843c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408440:	ldrb	w8, [x8, #1385]
  408444:	mov	w1, #0x1                   	// #1
  408448:	mov	x0, x21
  40844c:	mov	x2, x23
  408450:	cmp	w8, #0x0
  408454:	mov	w8, #0xa                   	// #10
  408458:	csel	w8, wzr, w8, ne  // ne = any
  40845c:	mov	x3, x20
  408460:	sturb	w8, [x24, #-1]
  408464:	bl	4027a0 <fwrite_unlocked@plt>
  408468:	cmp	x0, x23
  40846c:	b.ne	40895c <ferror@plt+0x5acc>  // b.any
  408470:	sturb	wzr, [x24, #-1]
  408474:	ldp	x20, x19, [sp, #96]
  408478:	ldp	x22, x21, [sp, #80]
  40847c:	ldp	x24, x23, [sp, #64]
  408480:	ldp	x26, x25, [sp, #48]
  408484:	ldp	x28, x27, [sp, #32]
  408488:	ldp	x29, x30, [sp, #16]
  40848c:	add	sp, sp, #0x70
  408490:	ret
  408494:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408498:	ldr	x21, [x8, #1416]
  40849c:	adrp	x26, 427000 <_obstack_memory_used@@Base+0x145ec>
  4084a0:	adrp	x27, 427000 <_obstack_memory_used@@Base+0x145ec>
  4084a4:	mov	w28, #0x5f                  	// #95
  4084a8:	mov	w20, #0x20                  	// #32
  4084ac:	add	x26, x26, #0x560
  4084b0:	ldr	x8, [sp]
  4084b4:	ldp	x24, x25, [x8]
  4084b8:	add	x8, x24, x25
  4084bc:	sub	x22, x8, #0x1
  4084c0:	cbz	x21, 408570 <ferror@plt+0x56e0>
  4084c4:	ldr	x19, [x21]
  4084c8:	mov	x23, x24
  4084cc:	cmn	x19, #0x1
  4084d0:	b.eq	4084e8 <ferror@plt+0x5658>  // b.none
  4084d4:	mov	x0, x24
  4084d8:	mov	x1, x25
  4084dc:	mov	x2, x21
  4084e0:	bl	408ab0 <ferror@plt+0x5c20>
  4084e4:	mov	x23, x0
  4084e8:	ldr	x8, [x21, #16]
  4084ec:	cmn	x8, #0x1
  4084f0:	b.eq	408508 <ferror@plt+0x5678>  // b.none
  4084f4:	mov	x0, x24
  4084f8:	mov	x1, x25
  4084fc:	mov	x2, x21
  408500:	bl	408978 <ferror@plt+0x5ae8>
  408504:	mov	x22, x0
  408508:	ldrb	w8, [x21, #48]
  40850c:	cbz	w8, 408518 <ferror@plt+0x5688>
  408510:	cmn	x19, #0x1
  408514:	b.eq	408538 <ferror@plt+0x56a8>  // b.none
  408518:	ldrb	w8, [x21, #54]
  40851c:	cbnz	w8, 408538 <ferror@plt+0x56a8>
  408520:	ldrb	w8, [x21, #50]
  408524:	cbnz	w8, 408538 <ferror@plt+0x56a8>
  408528:	ldrb	w8, [x21, #52]
  40852c:	cbnz	w8, 408538 <ferror@plt+0x56a8>
  408530:	ldrb	w8, [x21, #53]
  408534:	cbz	w8, 408760 <ferror@plt+0x58d0>
  408538:	ldrb	w25, [x22]
  40853c:	sub	x23, x23, #0x1
  408540:	strb	wzr, [x22]
  408544:	mov	x8, x23
  408548:	ldrb	w9, [x23, #1]!
  40854c:	add	x9, x26, x9
  408550:	ldrb	w9, [x9, #556]
  408554:	cbnz	w9, 408544 <ferror@plt+0x56b4>
  408558:	cmp	x22, x23
  40855c:	str	x23, [sp, #8]
  408560:	b.cs	408578 <ferror@plt+0x56e8>  // b.hs, b.nlast
  408564:	mov	x11, x22
  408568:	str	x22, [sp, #8]
  40856c:	b	408758 <ferror@plt+0x58c8>
  408570:	mov	x23, x24
  408574:	b	408760 <ferror@plt+0x58d0>
  408578:	ldrb	w9, [x21, #54]
  40857c:	cbz	w9, 40860c <ferror@plt+0x577c>
  408580:	ldrb	w9, [x8, #1]!
  408584:	add	x9, x26, x9
  408588:	ldrb	w9, [x9, #556]
  40858c:	cbnz	w9, 408580 <ferror@plt+0x56f0>
  408590:	mov	x9, xzr
  408594:	mov	w10, #0xc                   	// #12
  408598:	add	x11, x10, x9
  40859c:	lsr	x12, x11, #1
  4085a0:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  4085a4:	add	x11, x11, #0x3c0
  4085a8:	add	x11, x11, x12, lsl #4
  4085ac:	ldr	x11, [x11, #40]
  4085b0:	ldrb	w14, [x11]
  4085b4:	cbz	w14, 408744 <ferror@plt+0x58b4>
  4085b8:	add	x13, x11, #0x1
  4085bc:	mov	x11, x8
  4085c0:	ldrb	w15, [x11]
  4085c4:	add	x15, x26, x15
  4085c8:	ldrb	w15, [x15, #1324]
  4085cc:	cmp	w15, w14, uxtb
  4085d0:	b.cc	4085e8 <ferror@plt+0x5758>  // b.lo, b.ul, b.last
  4085d4:	b.hi	4085f8 <ferror@plt+0x5768>  // b.pmore
  4085d8:	ldrb	w14, [x13], #1
  4085dc:	add	x11, x11, #0x1
  4085e0:	cbnz	w14, 4085c0 <ferror@plt+0x5730>
  4085e4:	b	408754 <ferror@plt+0x58c4>
  4085e8:	mov	x10, x12
  4085ec:	cmp	x9, x10
  4085f0:	b.cc	408598 <ferror@plt+0x5708>  // b.lo, b.ul, b.last
  4085f4:	b	408604 <ferror@plt+0x5774>
  4085f8:	add	x9, x12, #0x1
  4085fc:	cmp	x9, x10
  408600:	b.cc	408598 <ferror@plt+0x5708>  // b.lo, b.ul, b.last
  408604:	mov	x11, x23
  408608:	b	408758 <ferror@plt+0x58c8>
  40860c:	ldrb	w8, [x21, #52]
  408610:	cbz	w8, 408628 <ferror@plt+0x5798>
  408614:	add	x1, sp, #0x8
  408618:	mov	x0, x23
  40861c:	bl	402bf0 <strtold@plt>
  408620:	ldr	x11, [sp, #8]
  408624:	b	408758 <ferror@plt+0x58c8>
  408628:	ldrb	w8, [x21, #50]
  40862c:	cbnz	w8, 408638 <ferror@plt+0x57a8>
  408630:	ldrb	w8, [x21, #53]
  408634:	cbz	w8, 408564 <ferror@plt+0x56d4>
  408638:	cmp	x23, x22
  40863c:	b.cs	408650 <ferror@plt+0x57c0>  // b.hs, b.nlast
  408640:	ldrb	w8, [x23]
  408644:	cmp	w8, #0x2d
  408648:	cset	w8, eq  // eq = none
  40864c:	b	408654 <ferror@plt+0x57c4>
  408650:	mov	x8, xzr
  408654:	add	x12, x23, x8
  408658:	mov	x9, x12
  40865c:	ldrb	w11, [x9], #1
  408660:	sub	w8, w11, #0x30
  408664:	cmp	w8, #0x9
  408668:	b.hi	4086f4 <ferror@plt+0x5864>  // b.pmore
  40866c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408670:	ldr	w13, [x8, #1396]
  408674:	mov	w8, wzr
  408678:	ldrb	w14, [x9]
  40867c:	and	w10, w8, #0xff
  408680:	cmp	w10, w11, uxtb
  408684:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  408688:	add	x10, x12, #0x2
  40868c:	cmp	w13, w14
  408690:	csel	x12, x10, x9, eq  // eq = none
  408694:	mov	x9, x12
  408698:	ldrb	w11, [x9], #1
  40869c:	sub	w15, w11, #0x30
  4086a0:	cmp	w15, #0xa
  4086a4:	b.cc	408678 <ferror@plt+0x57e8>  // b.lo, b.ul, b.last
  4086a8:	cmp	w13, w14
  4086ac:	b.eq	40870c <ferror@plt+0x587c>  // b.none
  4086b0:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4086b4:	ldr	w10, [x10, #1392]
  4086b8:	cmp	w10, w11
  4086bc:	b.ne	408708 <ferror@plt+0x5878>  // b.any
  4086c0:	ldrb	w11, [x9], #1
  4086c4:	sub	w10, w11, #0x30
  4086c8:	cmp	w10, #0x9
  4086cc:	mov	x10, x9
  4086d0:	b.hi	40870c <ferror@plt+0x587c>  // b.pmore
  4086d4:	and	w9, w8, #0xff
  4086d8:	cmp	w9, w11, uxtb
  4086dc:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  4086e0:	ldrb	w11, [x10], #1
  4086e4:	sub	w9, w11, #0x30
  4086e8:	cmp	w9, #0xa
  4086ec:	b.cc	4086d4 <ferror@plt+0x5844>  // b.lo, b.ul, b.last
  4086f0:	b	40870c <ferror@plt+0x587c>
  4086f4:	mov	w8, wzr
  4086f8:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  4086fc:	ldr	w10, [x10, #1392]
  408700:	cmp	w10, w11
  408704:	b.eq	4086c0 <ferror@plt+0x5830>  // b.none
  408708:	mov	x10, x9
  40870c:	and	w8, w8, #0xff
  408710:	cmp	w8, #0x30
  408714:	mov	x11, x23
  408718:	b.cc	408758 <ferror@plt+0x58c8>  // b.lo, b.ul, b.last
  40871c:	ldrb	w9, [x21, #53]
  408720:	sub	x8, x10, #0x1
  408724:	cbz	w9, 40874c <ferror@plt+0x58bc>
  408728:	ldrb	w9, [x8]
  40872c:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  408730:	add	x10, x10, #0xf38
  408734:	ldrb	w9, [x10, x9]
  408738:	cmp	w9, #0x0
  40873c:	cset	w9, ne  // ne = any
  408740:	b	408750 <ferror@plt+0x58c0>
  408744:	mov	x11, x8
  408748:	b	408754 <ferror@plt+0x58c4>
  40874c:	mov	x9, xzr
  408750:	add	x11, x8, x9
  408754:	str	x11, [sp, #8]
  408758:	strb	w25, [x22]
  40875c:	mov	x22, x11
  408760:	subs	x1, x23, x24
  408764:	mov	x0, x24
  408768:	mov	w2, wzr
  40876c:	bl	40d704 <ferror@plt+0xa874>
  408770:	subs	x9, x23, x24
  408774:	sxtw	x25, w0
  408778:	b.ls	4087e0 <ferror@plt+0x5950>  // b.plast
  40877c:	cmp	x9, #0x2
  408780:	b.cs	40878c <ferror@plt+0x58fc>  // b.hs, b.nlast
  408784:	mov	x8, x24
  408788:	b	4087cc <ferror@plt+0x593c>
  40878c:	and	x11, x9, #0xfffffffffffffffe
  408790:	mov	x10, xzr
  408794:	add	x8, x24, x11
  408798:	add	x12, x24, #0x1
  40879c:	mov	x13, x11
  4087a0:	ldurb	w14, [x12, #-1]
  4087a4:	ldrb	w15, [x12], #2
  4087a8:	cmp	w14, #0x9
  4087ac:	cinc	x25, x25, eq  // eq = none
  4087b0:	cmp	w15, #0x9
  4087b4:	cinc	x10, x10, eq  // eq = none
  4087b8:	subs	x13, x13, #0x2
  4087bc:	b.ne	4087a0 <ferror@plt+0x5910>  // b.any
  4087c0:	cmp	x11, x9
  4087c4:	add	x25, x10, x25
  4087c8:	b.eq	4087e0 <ferror@plt+0x5950>  // b.none
  4087cc:	ldrb	w9, [x8], #1
  4087d0:	cmp	w9, #0x9
  4087d4:	cinc	x25, x25, eq  // eq = none
  4087d8:	cmp	x23, x8
  4087dc:	b.ne	4087cc <ferror@plt+0x593c>  // b.any
  4087e0:	subs	x1, x22, x23
  4087e4:	mov	x0, x23
  4087e8:	mov	w2, wzr
  4087ec:	bl	40d704 <ferror@plt+0xa874>
  4087f0:	subs	x9, x22, x23
  4087f4:	sxtw	x24, w0
  4087f8:	b.ls	408860 <ferror@plt+0x59d0>  // b.plast
  4087fc:	cmp	x9, #0x2
  408800:	b.cs	40880c <ferror@plt+0x597c>  // b.hs, b.nlast
  408804:	mov	x8, x23
  408808:	b	40884c <ferror@plt+0x59bc>
  40880c:	and	x11, x9, #0xfffffffffffffffe
  408810:	mov	x10, xzr
  408814:	add	x8, x23, x11
  408818:	add	x12, x23, #0x1
  40881c:	mov	x13, x11
  408820:	ldurb	w14, [x12, #-1]
  408824:	ldrb	w15, [x12], #2
  408828:	cmp	w14, #0x9
  40882c:	cinc	x24, x24, eq  // eq = none
  408830:	cmp	w15, #0x9
  408834:	cinc	x10, x10, eq  // eq = none
  408838:	subs	x13, x13, #0x2
  40883c:	b.ne	408820 <ferror@plt+0x5990>  // b.any
  408840:	cmp	x11, x9
  408844:	add	x24, x10, x24
  408848:	b.eq	408860 <ferror@plt+0x59d0>  // b.none
  40884c:	ldrb	w9, [x8], #1
  408850:	cmp	w9, #0x9
  408854:	cinc	x24, x24, eq  // eq = none
  408858:	cmp	x22, x8
  40885c:	b.ne	40884c <ferror@plt+0x59bc>  // b.any
  408860:	cbz	x25, 408898 <ferror@plt+0x5a08>
  408864:	ldr	x0, [x27, #1344]
  408868:	sub	x25, x25, #0x1
  40886c:	ldp	x8, x9, [x0, #40]
  408870:	cmp	x8, x9
  408874:	b.cs	40888c <ferror@plt+0x59fc>  // b.hs, b.nlast
  408878:	add	x9, x8, #0x1
  40887c:	str	x9, [x0, #40]
  408880:	strb	w20, [x8]
  408884:	cbnz	x25, 408864 <ferror@plt+0x59d4>
  408888:	b	408898 <ferror@plt+0x5a08>
  40888c:	mov	w1, #0x20                  	// #32
  408890:	bl	402b30 <__overflow@plt>
  408894:	cbnz	x25, 408864 <ferror@plt+0x59d4>
  408898:	cbz	x24, 4088fc <ferror@plt+0x5a6c>
  40889c:	ldr	x0, [x27, #1344]
  4088a0:	ldp	x8, x9, [x0, #40]
  4088a4:	cmp	x8, x9
  4088a8:	b.cs	4088c4 <ferror@plt+0x5a34>  // b.hs, b.nlast
  4088ac:	add	x9, x8, #0x1
  4088b0:	str	x9, [x0, #40]
  4088b4:	strb	w28, [x8]
  4088b8:	subs	x24, x24, #0x1
  4088bc:	b.ne	40889c <ferror@plt+0x5a0c>  // b.any
  4088c0:	b	4088d4 <ferror@plt+0x5a44>
  4088c4:	mov	w1, #0x5f                  	// #95
  4088c8:	bl	402b30 <__overflow@plt>
  4088cc:	subs	x24, x24, #0x1
  4088d0:	b.ne	40889c <ferror@plt+0x5a0c>  // b.any
  4088d4:	ldr	x0, [x27, #1344]
  4088d8:	ldp	x8, x9, [x0, #40]
  4088dc:	cmp	x8, x9
  4088e0:	b.cs	40894c <ferror@plt+0x5abc>  // b.hs, b.nlast
  4088e4:	add	x9, x8, #0x1
  4088e8:	str	x9, [x0, #40]
  4088ec:	mov	w9, #0xa                   	// #10
  4088f0:	strb	w9, [x8]
  4088f4:	cbnz	x21, 408920 <ferror@plt+0x5a90>
  4088f8:	b	408474 <ferror@plt+0x55e4>
  4088fc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408900:	mov	w2, #0x5                   	// #5
  408904:	mov	x0, xzr
  408908:	add	x1, x1, #0x959
  40890c:	bl	402d70 <dcgettext@plt>
  408910:	mov	x1, x0
  408914:	mov	w0, #0x1                   	// #1
  408918:	bl	4029d0 <__printf_chk@plt>
  40891c:	cbz	x21, 408474 <ferror@plt+0x55e4>
  408920:	ldr	x21, [x21, #64]
  408924:	cbnz	x21, 4084b0 <ferror@plt+0x5620>
  408928:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40892c:	add	x8, x8, #0x567
  408930:	ldrb	w8, [x8, #1]
  408934:	tbnz	w8, #0, 408474 <ferror@plt+0x55e4>
  408938:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40893c:	add	x8, x8, #0x567
  408940:	ldrb	w8, [x8]
  408944:	tbz	w8, #0, 4084b0 <ferror@plt+0x5620>
  408948:	b	408474 <ferror@plt+0x55e4>
  40894c:	mov	w1, #0xa                   	// #10
  408950:	bl	402b30 <__overflow@plt>
  408954:	cbnz	x21, 408920 <ferror@plt+0x5a90>
  408958:	b	408474 <ferror@plt+0x55e4>
  40895c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408960:	add	x1, x1, #0x94c
  408964:	mov	w2, #0x5                   	// #5
  408968:	mov	x0, xzr
  40896c:	bl	402d70 <dcgettext@plt>
  408970:	mov	x1, x22
  408974:	bl	406c50 <ferror@plt+0x3dc0>
  408978:	ldp	x9, x8, [x2, #16]
  40897c:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  408980:	ldr	w11, [x10, #964]
  408984:	add	x12, x0, x1
  408988:	cmp	x8, #0x0
  40898c:	cinc	x10, x9, eq  // eq = none
  408990:	cmp	w11, #0x100
  408994:	sub	x9, x12, #0x1
  408998:	b.ne	4089b0 <ferror@plt+0x5b20>  // b.any
  40899c:	cmp	x9, x0
  4089a0:	b.ls	408a64 <ferror@plt+0x5bd4>  // b.plast
  4089a4:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  4089a8:	add	x11, x11, #0x560
  4089ac:	b	4089c8 <ferror@plt+0x5b38>
  4089b0:	cmp	x9, x0
  4089b4:	b.hi	408a38 <ferror@plt+0x5ba8>  // b.pmore
  4089b8:	b	408a64 <ferror@plt+0x5bd4>
  4089bc:	cmp	x0, x9
  4089c0:	sub	x10, x10, #0x1
  4089c4:	b.cs	408a64 <ferror@plt+0x5bd4>  // b.hs, b.nlast
  4089c8:	cbz	x10, 408a64 <ferror@plt+0x5bd4>
  4089cc:	cmp	x0, x9
  4089d0:	b.cs	4089f4 <ferror@plt+0x5b64>  // b.hs, b.nlast
  4089d4:	ldrb	w12, [x0]
  4089d8:	add	x12, x11, x12
  4089dc:	ldrb	w12, [x12, #556]
  4089e0:	cbz	w12, 4089f4 <ferror@plt+0x5b64>
  4089e4:	add	x0, x0, #0x1
  4089e8:	cmp	x9, x0
  4089ec:	b.ne	4089d4 <ferror@plt+0x5b44>  // b.any
  4089f0:	b	408a18 <ferror@plt+0x5b88>
  4089f4:	cmp	x0, x9
  4089f8:	b.cs	4089bc <ferror@plt+0x5b2c>  // b.hs, b.nlast
  4089fc:	ldrb	w12, [x0]
  408a00:	add	x12, x11, x12
  408a04:	ldrb	w12, [x12, #556]
  408a08:	cbnz	w12, 4089bc <ferror@plt+0x5b2c>
  408a0c:	add	x0, x0, #0x1
  408a10:	cmp	x9, x0
  408a14:	b.ne	4089fc <ferror@plt+0x5b6c>  // b.any
  408a18:	mov	x0, x9
  408a1c:	cbnz	x8, 408a68 <ferror@plt+0x5bd8>
  408a20:	ret
  408a24:	orr	x12, x10, x8
  408a28:	cmp	x12, #0x0
  408a2c:	cinc	x0, x0, ne  // ne = any
  408a30:	cmp	x0, x9
  408a34:	b.cs	408a64 <ferror@plt+0x5bd4>  // b.hs, b.nlast
  408a38:	cbz	x10, 408a64 <ferror@plt+0x5bd4>
  408a3c:	cmp	x0, x9
  408a40:	sub	x10, x10, #0x1
  408a44:	b.cs	408a30 <ferror@plt+0x5ba0>  // b.hs, b.nlast
  408a48:	ldrb	w12, [x0]
  408a4c:	cmp	w11, w12
  408a50:	b.eq	408a24 <ferror@plt+0x5b94>  // b.none
  408a54:	add	x0, x0, #0x1
  408a58:	cmp	x9, x0
  408a5c:	b.ne	408a48 <ferror@plt+0x5bb8>  // b.any
  408a60:	mov	x0, x9
  408a64:	cbz	x8, 408a20 <ferror@plt+0x5b90>
  408a68:	ldrb	w10, [x2, #49]
  408a6c:	cbz	w10, 408aa0 <ferror@plt+0x5c10>
  408a70:	cmp	x0, x9
  408a74:	b.cs	408aa0 <ferror@plt+0x5c10>  // b.hs, b.nlast
  408a78:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  408a7c:	add	x10, x10, #0x560
  408a80:	ldrb	w11, [x0]
  408a84:	add	x11, x10, x11
  408a88:	ldrb	w11, [x11, #556]
  408a8c:	cbz	w11, 408aa0 <ferror@plt+0x5c10>
  408a90:	add	x0, x0, #0x1
  408a94:	cmp	x9, x0
  408a98:	b.ne	408a80 <ferror@plt+0x5bf0>  // b.any
  408a9c:	mov	x0, x9
  408aa0:	add	x8, x0, x8
  408aa4:	cmp	x9, x8
  408aa8:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  408aac:	ret
  408ab0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408ab4:	ldr	w11, [x8, #964]
  408ab8:	ldp	x10, x9, [x2]
  408abc:	add	x8, x0, x1
  408ac0:	sub	x8, x8, #0x1
  408ac4:	cmp	w11, #0x100
  408ac8:	b.ne	408b40 <ferror@plt+0x5cb0>  // b.any
  408acc:	cmp	x8, x0
  408ad0:	b.ls	408bb4 <ferror@plt+0x5d24>  // b.plast
  408ad4:	adrp	x11, 427000 <_obstack_memory_used@@Base+0x145ec>
  408ad8:	add	x11, x11, #0x560
  408adc:	cbz	x10, 408bb4 <ferror@plt+0x5d24>
  408ae0:	cmp	x0, x8
  408ae4:	b.cs	408b08 <ferror@plt+0x5c78>  // b.hs, b.nlast
  408ae8:	ldrb	w12, [x0]
  408aec:	add	x12, x11, x12
  408af0:	ldrb	w12, [x12, #556]
  408af4:	cbz	w12, 408b08 <ferror@plt+0x5c78>
  408af8:	add	x0, x0, #0x1
  408afc:	cmp	x8, x0
  408b00:	b.ne	408ae8 <ferror@plt+0x5c58>  // b.any
  408b04:	b	408be8 <ferror@plt+0x5d58>
  408b08:	cmp	x0, x8
  408b0c:	b.cs	408b30 <ferror@plt+0x5ca0>  // b.hs, b.nlast
  408b10:	ldrb	w12, [x0]
  408b14:	add	x12, x11, x12
  408b18:	ldrb	w12, [x12, #556]
  408b1c:	cbnz	w12, 408b30 <ferror@plt+0x5ca0>
  408b20:	add	x0, x0, #0x1
  408b24:	cmp	x8, x0
  408b28:	b.ne	408b10 <ferror@plt+0x5c80>  // b.any
  408b2c:	b	408be8 <ferror@plt+0x5d58>
  408b30:	cmp	x0, x8
  408b34:	sub	x10, x10, #0x1
  408b38:	b.cc	408adc <ferror@plt+0x5c4c>  // b.lo, b.ul, b.last
  408b3c:	b	408bb4 <ferror@plt+0x5d24>
  408b40:	cmp	x8, x0
  408b44:	b.ls	408bb4 <ferror@plt+0x5d24>  // b.plast
  408b48:	add	x12, x1, x0
  408b4c:	sub	x12, x12, #0x2
  408b50:	b	408b68 <ferror@plt+0x5cd8>
  408b54:	mov	w13, #0x1                   	// #1
  408b58:	cmp	w13, #0x0
  408b5c:	cinc	x0, x0, ne  // ne = any
  408b60:	cmp	x0, x8
  408b64:	b.cs	408bb4 <ferror@plt+0x5d24>  // b.hs, b.nlast
  408b68:	cbz	x10, 408bb4 <ferror@plt+0x5d24>
  408b6c:	cmp	x0, x8
  408b70:	sub	x10, x10, #0x1
  408b74:	b.cs	408b60 <ferror@plt+0x5cd0>  // b.hs, b.nlast
  408b78:	ldrb	w13, [x0]
  408b7c:	cmp	w11, w13
  408b80:	b.eq	408b54 <ferror@plt+0x5cc4>  // b.none
  408b84:	cmp	x12, x0
  408b88:	add	x13, x0, #0x1
  408b8c:	b.eq	408ba4 <ferror@plt+0x5d14>  // b.none
  408b90:	ldrb	w14, [x0, #1]
  408b94:	mov	x0, x13
  408b98:	cmp	w11, w14
  408b9c:	b.ne	408b84 <ferror@plt+0x5cf4>  // b.any
  408ba0:	b	408ba8 <ferror@plt+0x5d18>
  408ba4:	mov	x0, x8
  408ba8:	cmp	x13, x8
  408bac:	cset	w13, cc  // cc = lo, ul, last
  408bb0:	b	408b58 <ferror@plt+0x5cc8>
  408bb4:	ldrb	w10, [x2, #48]
  408bb8:	cbz	w10, 408bec <ferror@plt+0x5d5c>
  408bbc:	cmp	x0, x8
  408bc0:	b.cs	408bec <ferror@plt+0x5d5c>  // b.hs, b.nlast
  408bc4:	adrp	x10, 427000 <_obstack_memory_used@@Base+0x145ec>
  408bc8:	add	x10, x10, #0x560
  408bcc:	ldrb	w11, [x0]
  408bd0:	add	x11, x10, x11
  408bd4:	ldrb	w11, [x11, #556]
  408bd8:	cbz	w11, 408bec <ferror@plt+0x5d5c>
  408bdc:	add	x0, x0, #0x1
  408be0:	cmp	x8, x0
  408be4:	b.ne	408bcc <ferror@plt+0x5d3c>  // b.any
  408be8:	mov	x0, x8
  408bec:	add	x9, x0, x9
  408bf0:	cmp	x8, x9
  408bf4:	csel	x0, x8, x9, cc  // cc = lo, ul, last
  408bf8:	ret
  408bfc:	stp	x29, x30, [sp, #-48]!
  408c00:	stp	x22, x21, [sp, #16]
  408c04:	stp	x20, x19, [sp, #32]
  408c08:	mov	x29, sp
  408c0c:	mov	x20, x2
  408c10:	mov	x19, x1
  408c14:	mov	x21, x0
  408c18:	bl	402e00 <__errno_location@plt>
  408c1c:	mov	x22, x0
  408c20:	str	wzr, [x0]
  408c24:	mov	x0, x21
  408c28:	mov	x1, x19
  408c2c:	mov	x2, x20
  408c30:	bl	402cb0 <strxfrm@plt>
  408c34:	ldr	w20, [x22]
  408c38:	cbnz	w20, 408c4c <ferror@plt+0x5dbc>
  408c3c:	ldp	x20, x19, [sp, #32]
  408c40:	ldp	x22, x21, [sp, #16]
  408c44:	ldp	x29, x30, [sp], #48
  408c48:	ret
  408c4c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408c50:	add	x1, x1, #0x8e5
  408c54:	mov	w2, #0x5                   	// #5
  408c58:	mov	x0, xzr
  408c5c:	bl	402d70 <dcgettext@plt>
  408c60:	mov	x2, x0
  408c64:	mov	w0, wzr
  408c68:	mov	w1, w20
  408c6c:	bl	4027f0 <error@plt>
  408c70:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408c74:	add	x1, x1, #0x902
  408c78:	mov	w2, #0x5                   	// #5
  408c7c:	mov	x0, xzr
  408c80:	bl	402d70 <dcgettext@plt>
  408c84:	mov	x2, x0
  408c88:	mov	w0, wzr
  408c8c:	mov	w1, wzr
  408c90:	bl	4027f0 <error@plt>
  408c94:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408c98:	add	x1, x1, #0x92c
  408c9c:	mov	w2, #0x5                   	// #5
  408ca0:	mov	x0, xzr
  408ca4:	bl	402d70 <dcgettext@plt>
  408ca8:	mov	x20, x0
  408cac:	mov	w1, #0x8                   	// #8
  408cb0:	mov	w0, wzr
  408cb4:	mov	x2, x19
  408cb8:	bl	40f590 <ferror@plt+0xc700>
  408cbc:	mov	x3, x0
  408cc0:	mov	w0, #0x2                   	// #2
  408cc4:	mov	w1, wzr
  408cc8:	mov	x2, x20
  408ccc:	bl	4027f0 <error@plt>
  408cd0:	cmp	w0, w1
  408cd4:	b.ne	408cdc <ferror@plt+0x5e4c>  // b.any
  408cd8:	ret
  408cdc:	stp	x29, x30, [sp, #-32]!
  408ce0:	str	x19, [sp, #16]
  408ce4:	mov	x29, sp
  408ce8:	mov	w19, w0
  408cec:	bl	402dc0 <dup2@plt>
  408cf0:	mov	w0, w19
  408cf4:	ldr	x19, [sp, #16]
  408cf8:	ldp	x29, x30, [sp], #32
  408cfc:	b	402a70 <close@plt>
  408d00:	sub	sp, sp, #0x70
  408d04:	lsr	x8, x1, #60
  408d08:	stp	x29, x30, [sp, #16]
  408d0c:	stp	x28, x27, [sp, #32]
  408d10:	stp	x26, x25, [sp, #48]
  408d14:	stp	x24, x23, [sp, #64]
  408d18:	stp	x22, x21, [sp, #80]
  408d1c:	stp	x20, x19, [sp, #96]
  408d20:	add	x29, sp, #0x10
  408d24:	cbnz	x8, 408edc <ferror@plt+0x604c>
  408d28:	mov	x22, x0
  408d2c:	lsl	x0, x1, #3
  408d30:	mov	x20, x2
  408d34:	mov	x19, x1
  408d38:	bl	4112fc <ferror@plt+0xe46c>
  408d3c:	str	x0, [x20]
  408d40:	cbz	x19, 408eac <ferror@plt+0x601c>
  408d44:	add	x28, x22, #0x8
  408d48:	adrp	x22, 415000 <_obstack_memory_used@@Base+0x25ec>
  408d4c:	mov	x21, x0
  408d50:	mov	x20, xzr
  408d54:	add	x22, x22, #0x4a8
  408d58:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  408d5c:	mov	w24, #0x1                   	// #1
  408d60:	ldr	x25, [x28]
  408d64:	cbz	x25, 408e50 <ferror@plt+0x5fc0>
  408d68:	ldrb	w8, [x25, #12]
  408d6c:	cbz	w8, 408e50 <ferror@plt+0x5fc0>
  408d70:	cmp	w8, #0x1
  408d74:	b.ne	408da0 <ferror@plt+0x5f10>  // b.any
  408d78:	ldr	w26, [x25, #8]
  408d7c:	ldr	x0, [x23, #1464]
  408d80:	mov	x1, sp
  408d84:	str	w26, [sp, #8]
  408d88:	bl	40d128 <ferror@plt+0xa298>
  408d8c:	cbz	x0, 408da0 <ferror@plt+0x5f10>
  408d90:	mov	w8, #0x2                   	// #2
  408d94:	strb	w8, [x0, #12]
  408d98:	mov	w0, w26
  408d9c:	bl	409bd8 <ferror@plt+0x6d48>
  408da0:	add	x0, x25, #0xd
  408da4:	mov	w1, wzr
  408da8:	bl	402950 <open@plt>
  408dac:	tbnz	w0, #31, 408e78 <ferror@plt+0x5fe8>
  408db0:	mov	w26, w0
  408db4:	mov	x0, sp
  408db8:	mov	w1, #0x9                   	// #9
  408dbc:	bl	4099a0 <ferror@plt+0x6b10>
  408dc0:	cmn	w0, #0x1
  408dc4:	b.eq	408e80 <ferror@plt+0x5ff0>  // b.none
  408dc8:	cbz	w0, 408ee0 <ferror@plt+0x6050>
  408dcc:	str	w0, [x25, #8]
  408dd0:	ldr	x0, [x23, #1464]
  408dd4:	cbnz	x0, 408e00 <ferror@plt+0x5f70>
  408dd8:	adrp	x2, 409000 <ferror@plt+0x6170>
  408ddc:	adrp	x3, 409000 <ferror@plt+0x6170>
  408de0:	mov	w0, #0x2f                  	// #47
  408de4:	mov	x1, xzr
  408de8:	add	x2, x2, #0xce4
  408dec:	add	x3, x3, #0xcf4
  408df0:	mov	x4, xzr
  408df4:	bl	40c650 <ferror@plt+0x97c0>
  408df8:	str	x0, [x23, #1464]
  408dfc:	cbz	x0, 408edc <ferror@plt+0x604c>
  408e00:	mov	x1, x25
  408e04:	strb	w24, [x25, #12]
  408e08:	bl	40d0f0 <ferror@plt+0xa260>
  408e0c:	cbz	x0, 408edc <ferror@plt+0x604c>
  408e10:	mov	w0, w26
  408e14:	bl	402a70 <close@plt>
  408e18:	ldr	w0, [sp, #4]
  408e1c:	bl	402a70 <close@plt>
  408e20:	ldr	w0, [sp]
  408e24:	mov	x1, x22
  408e28:	bl	4029f0 <fdopen@plt>
  408e2c:	cbnz	x0, 408e5c <ferror@plt+0x5fcc>
  408e30:	bl	402e00 <__errno_location@plt>
  408e34:	mov	x25, x0
  408e38:	ldr	w26, [x0]
  408e3c:	ldr	w0, [sp]
  408e40:	bl	402a70 <close@plt>
  408e44:	mov	x0, xzr
  408e48:	str	w26, [x25]
  408e4c:	b	408e5c <ferror@plt+0x5fcc>
  408e50:	ldur	x0, [x28, #-8]
  408e54:	mov	x1, x22
  408e58:	bl	406cc4 <ferror@plt+0x3e34>
  408e5c:	str	x0, [x21, x20, lsl #3]
  408e60:	cbz	x0, 408eb8 <ferror@plt+0x6028>
  408e64:	add	x20, x20, #0x1
  408e68:	cmp	x19, x20
  408e6c:	add	x28, x28, #0x10
  408e70:	b.ne	408d60 <ferror@plt+0x5ed0>  // b.any
  408e74:	b	408eb4 <ferror@plt+0x6024>
  408e78:	mov	x0, xzr
  408e7c:	b	408e5c <ferror@plt+0x5fcc>
  408e80:	bl	402e00 <__errno_location@plt>
  408e84:	ldr	w25, [x0]
  408e88:	cmp	w25, #0x18
  408e8c:	b.ne	408f30 <ferror@plt+0x60a0>  // b.any
  408e90:	mov	x27, x0
  408e94:	mov	w0, w26
  408e98:	bl	402a70 <close@plt>
  408e9c:	mov	w8, #0x18                  	// #24
  408ea0:	mov	x0, xzr
  408ea4:	str	w8, [x27]
  408ea8:	b	408e5c <ferror@plt+0x5fcc>
  408eac:	mov	x20, xzr
  408eb0:	b	408eb8 <ferror@plt+0x6028>
  408eb4:	and	x20, x19, #0xffffffff
  408eb8:	mov	x0, x20
  408ebc:	ldp	x20, x19, [sp, #96]
  408ec0:	ldp	x22, x21, [sp, #80]
  408ec4:	ldp	x24, x23, [sp, #64]
  408ec8:	ldp	x26, x25, [sp, #48]
  408ecc:	ldp	x28, x27, [sp, #32]
  408ed0:	ldp	x29, x30, [sp, #16]
  408ed4:	add	sp, sp, #0x70
  408ed8:	ret
  408edc:	bl	411638 <ferror@plt+0xe7a8>
  408ee0:	ldr	w0, [sp]
  408ee4:	bl	402a70 <close@plt>
  408ee8:	mov	w0, w26
  408eec:	mov	w1, wzr
  408ef0:	bl	408cd0 <ferror@plt+0x5e40>
  408ef4:	ldr	w0, [sp, #4]
  408ef8:	mov	w1, #0x1                   	// #1
  408efc:	bl	408cd0 <ferror@plt+0x5e40>
  408f00:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408f04:	ldr	x0, [x8, #1408]
  408f08:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  408f0c:	add	x2, x2, #0x99a
  408f10:	mov	x3, xzr
  408f14:	mov	x1, x0
  408f18:	bl	402e10 <execlp@plt>
  408f1c:	bl	402e00 <__errno_location@plt>
  408f20:	ldr	w0, [x0]
  408f24:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408f28:	add	x1, x1, #0x99d
  408f2c:	bl	409b4c <ferror@plt+0x6cbc>
  408f30:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  408f34:	add	x1, x1, #0x97b
  408f38:	mov	w2, #0x5                   	// #5
  408f3c:	mov	x0, xzr
  408f40:	bl	402d70 <dcgettext@plt>
  408f44:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408f48:	ldr	x1, [x8, #1408]
  408f4c:	mov	x19, x0
  408f50:	mov	w0, #0x4                   	// #4
  408f54:	bl	40f628 <ferror@plt+0xc798>
  408f58:	mov	x3, x0
  408f5c:	mov	w0, #0x2                   	// #2
  408f60:	mov	w1, w25
  408f64:	mov	x2, x19
  408f68:	bl	4027f0 <error@plt>
  408f6c:	sub	sp, sp, #0x120
  408f70:	mov	x8, #0x924a                	// #37450
  408f74:	movk	x8, #0x4924, lsl #16
  408f78:	movk	x8, #0x2492, lsl #32
  408f7c:	movk	x8, #0x249, lsl #48
  408f80:	stp	x29, x30, [sp, #192]
  408f84:	add	x29, sp, #0xc0
  408f88:	cmp	x2, x8
  408f8c:	stp	x28, x27, [sp, #208]
  408f90:	stp	x26, x25, [sp, #224]
  408f94:	stp	x24, x23, [sp, #240]
  408f98:	stp	x22, x21, [sp, #256]
  408f9c:	stp	x20, x19, [sp, #272]
  408fa0:	str	x3, [sp, #80]
  408fa4:	str	x1, [sp, #96]
  408fa8:	stur	x0, [x29, #-56]
  408fac:	b.cs	4091d4 <ferror@plt+0x6344>  // b.hs, b.nlast
  408fb0:	mov	w8, #0x38                  	// #56
  408fb4:	mul	x0, x2, x8
  408fb8:	mov	x21, x5
  408fbc:	mov	x26, x4
  408fc0:	mov	x28, x2
  408fc4:	bl	4112fc <ferror@plt+0xe46c>
  408fc8:	lsl	x20, x28, #3
  408fcc:	mov	x27, x0
  408fd0:	mov	x0, x20
  408fd4:	bl	4112fc <ferror@plt+0xe46c>
  408fd8:	stur	x0, [x29, #-48]
  408fdc:	mov	x0, x20
  408fe0:	bl	4112fc <ferror@plt+0xe46c>
  408fe4:	stur	x0, [x29, #-88]
  408fe8:	mov	x0, x20
  408fec:	bl	4112fc <ferror@plt+0xe46c>
  408ff0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  408ff4:	ldr	x8, [x8, #1416]
  408ff8:	mov	x25, x0
  408ffc:	stur	xzr, [x29, #-40]
  409000:	str	x8, [sp, #48]
  409004:	cbz	x28, 4096b8 <ferror@plt+0x6828>
  409008:	add	x8, x21, #0x8
  40900c:	str	x8, [sp, #72]
  409010:	ldur	x8, [x29, #-56]
  409014:	str	x26, [sp, #56]
  409018:	mov	x24, xzr
  40901c:	mov	w26, #0x38                  	// #56
  409020:	add	x8, x8, #0x10
  409024:	str	x8, [sp, #64]
  409028:	adrp	x8, 413000 <_obstack_memory_used@@Base+0x5ec>
  40902c:	ldr	q0, [x8, #1584]
  409030:	str	x27, [sp, #88]
  409034:	stur	q0, [x29, #-80]
  409038:	b	40907c <ferror@plt+0x61ec>
  40903c:	ldr	x8, [x20]
  409040:	ldr	x9, [x19]
  409044:	madd	x10, x24, x26, x23
  409048:	ldr	x10, [x10, #16]
  40904c:	lsl	x11, x24, #3
  409050:	add	x8, x8, x9
  409054:	sub	x9, x8, #0x20
  409058:	sub	x8, x8, x10, lsl #5
  40905c:	ldur	x10, [x29, #-48]
  409060:	add	x24, x24, #0x1
  409064:	mov	x27, x23
  409068:	str	x9, [x10, x11]
  40906c:	ldur	x9, [x29, #-88]
  409070:	str	x8, [x9, x11]
  409074:	cmp	x24, x28
  409078:	b.cs	40917c <ferror@plt+0x62ec>  // b.hs, b.nlast
  40907c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409080:	ldr	x8, [x8, #1432]
  409084:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  409088:	ldr	x9, [x9, #976]
  40908c:	mov	x22, x21
  409090:	udiv	x8, x8, x28
  409094:	madd	x20, x24, x26, x27
  409098:	cmp	x9, x8
  40909c:	csel	x8, x9, x8, hi  // hi = pmore
  4090a0:	and	x8, x8, #0xffffffffffffffe0
  4090a4:	add	x21, x8, #0x20
  4090a8:	mov	x0, x21
  4090ac:	bl	402930 <malloc@plt>
  4090b0:	str	x0, [x20]
  4090b4:	cbnz	x0, 4090c8 <ferror@plt+0x6238>
  4090b8:	cmp	x21, #0x43
  4090bc:	lsr	x8, x21, #1
  4090c0:	b.hi	4090a0 <ferror@plt+0x6210>  // b.pmore
  4090c4:	b	4091d4 <ferror@plt+0x6344>
  4090c8:	ldur	x8, [x29, #-56]
  4090cc:	ldur	q0, [x29, #-80]
  4090d0:	madd	x19, x24, x26, x27
  4090d4:	str	x21, [x19, #24]!
  4090d8:	mov	x23, x27
  4090dc:	add	x27, x8, x24, lsl #4
  4090e0:	stur	q0, [x19, #8]
  4090e4:	strb	wzr, [x19, #24]
  4090e8:	stp	xzr, xzr, [x19, #-16]
  4090ec:	ldr	x1, [x22, x24, lsl #3]
  4090f0:	ldr	x2, [x27]
  4090f4:	mov	x0, x20
  4090f8:	mov	x21, x22
  4090fc:	bl	406f24 <ferror@plt+0x4094>
  409100:	tbnz	w0, #0, 40903c <ferror@plt+0x61ac>
  409104:	ldr	x0, [x21, x24, lsl #3]
  409108:	ldr	x1, [x27]
  40910c:	bl	406588 <ferror@plt+0x36f8>
  409110:	ldr	x8, [sp, #96]
  409114:	cmp	x24, x8
  409118:	b.cs	40912c <ferror@plt+0x629c>  // b.hs, b.nlast
  40911c:	ldr	x0, [x27]
  409120:	sub	x8, x8, #0x1
  409124:	str	x8, [sp, #96]
  409128:	bl	409d08 <ferror@plt+0x6e78>
  40912c:	ldr	x0, [x20]
  409130:	ldr	x27, [sp, #88]
  409134:	bl	402c00 <free@plt>
  409138:	sub	x28, x28, #0x1
  40913c:	cmp	x24, x28
  409140:	b.cs	409074 <ferror@plt+0x61e4>  // b.hs, b.nlast
  409144:	ldp	x9, x8, [sp, #64]
  409148:	mov	x10, x28
  40914c:	add	x8, x8, x24, lsl #3
  409150:	add	x9, x9, x24, lsl #4
  409154:	ldr	q0, [x9]
  409158:	sub	x10, x10, #0x1
  40915c:	cmp	x24, x10
  409160:	stur	q0, [x9, #-16]
  409164:	ldr	x11, [x8]
  409168:	add	x9, x9, #0x10
  40916c:	stur	x11, [x8, #-8]
  409170:	add	x8, x8, #0x8
  409174:	b.ne	409154 <ferror@plt+0x62c4>  // b.any
  409178:	b	409074 <ferror@plt+0x61e4>
  40917c:	ldr	x26, [sp, #56]
  409180:	cbz	x28, 4096b8 <ferror@plt+0x6828>
  409184:	cmp	x28, #0x3
  409188:	b.hi	409194 <ferror@plt+0x6304>  // b.pmore
  40918c:	mov	x8, xzr
  409190:	b	4091d8 <ferror@plt+0x6348>
  409194:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x5ec>
  409198:	ldr	q0, [x10, #1600]
  40919c:	mov	w10, #0x2                   	// #2
  4091a0:	and	x8, x28, #0xfffffffffffffffc
  4091a4:	dup	v1.2d, x10
  4091a8:	mov	w10, #0x4                   	// #4
  4091ac:	add	x9, x25, #0x10
  4091b0:	dup	v2.2d, x10
  4091b4:	mov	x10, x8
  4091b8:	add	v3.2d, v0.2d, v1.2d
  4091bc:	stp	q0, q3, [x9, #-16]
  4091c0:	add	v0.2d, v0.2d, v2.2d
  4091c4:	subs	x10, x10, #0x4
  4091c8:	add	x9, x9, #0x20
  4091cc:	b.ne	4091b8 <ferror@plt+0x6328>  // b.any
  4091d0:	b	4091e0 <ferror@plt+0x6350>
  4091d4:	bl	411638 <ferror@plt+0xe7a8>
  4091d8:	str	x8, [x25, x8, lsl #3]
  4091dc:	add	x8, x8, #0x1
  4091e0:	cmp	x28, x8
  4091e4:	b.ne	4091d8 <ferror@plt+0x6348>  // b.any
  4091e8:	cmp	x28, #0x2
  4091ec:	b.cc	409238 <ferror@plt+0x63a8>  // b.lo, b.ul, b.last
  4091f0:	mov	w19, #0x1                   	// #1
  4091f4:	b	409204 <ferror@plt+0x6374>
  4091f8:	add	x19, x19, #0x1
  4091fc:	cmp	x19, x28
  409200:	b.cs	409238 <ferror@plt+0x63a8>  // b.hs, b.nlast
  409204:	sub	x20, x19, #0x1
  409208:	ldr	x21, [x25, x20, lsl #3]
  40920c:	ldr	x24, [x25, x19, lsl #3]
  409210:	ldur	x8, [x29, #-48]
  409214:	ldr	x0, [x8, x21, lsl #3]
  409218:	ldr	x1, [x8, x24, lsl #3]
  40921c:	bl	407298 <ferror@plt+0x4408>
  409220:	cmp	w0, #0x1
  409224:	b.lt	4091f8 <ferror@plt+0x6368>  // b.tstop
  409228:	str	x24, [x25, x20, lsl #3]
  40922c:	str	x21, [x25, x19, lsl #3]
  409230:	mov	x19, xzr
  409234:	b	4091f8 <ferror@plt+0x6368>
  409238:	mov	x21, x22
  40923c:	cbz	x28, 4096b8 <ferror@plt+0x6828>
  409240:	add	x8, x25, #0x8
  409244:	str	x8, [sp, #72]
  409248:	ldur	x8, [x29, #-88]
  40924c:	mov	x20, xzr
  409250:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  409254:	stur	xzr, [x29, #-80]
  409258:	add	x8, x8, #0x8
  40925c:	str	x8, [sp, #32]
  409260:	ldur	x8, [x29, #-48]
  409264:	str	x21, [sp, #40]
  409268:	add	x8, x8, #0x8
  40926c:	str	x8, [sp, #24]
  409270:	ldur	x8, [x29, #-56]
  409274:	add	x8, x8, #0x10
  409278:	str	x8, [sp, #16]
  40927c:	add	x8, x21, #0x8
  409280:	str	x8, [sp, #8]
  409284:	add	x8, x25, #0x10
  409288:	str	x8, [sp, #64]
  40928c:	b	4092a0 <ferror@plt+0x6410>
  409290:	mov	x8, xzr
  409294:	mov	x21, x22
  409298:	str	x24, [x25, x8, lsl #3]
  40929c:	cbz	x28, 409690 <ferror@plt+0x6800>
  4092a0:	ldr	x24, [x25]
  4092a4:	ldur	x9, [x29, #-48]
  4092a8:	ldrb	w8, [x23, #1384]
  4092ac:	mov	x22, x21
  4092b0:	ldr	x21, [x9, x24, lsl #3]
  4092b4:	cmp	w8, #0x1
  4092b8:	b.ne	409300 <ferror@plt+0x6470>  // b.any
  4092bc:	ldur	x0, [x29, #-80]
  4092c0:	cbz	x0, 4092e0 <ferror@plt+0x6450>
  4092c4:	mov	x1, x21
  4092c8:	bl	407298 <ferror@plt+0x4408>
  4092cc:	cbz	w0, 409310 <ferror@plt+0x6480>
  4092d0:	ldr	x1, [sp, #80]
  4092d4:	sub	x0, x29, #0x28
  4092d8:	mov	x2, x26
  4092dc:	bl	408370 <ferror@plt+0x54e0>
  4092e0:	ldr	x2, [x21, #8]
  4092e4:	cmp	x20, x2
  4092e8:	b.cs	409338 <ferror@plt+0x64a8>  // b.hs, b.nlast
  4092ec:	cbz	x20, 409340 <ferror@plt+0x64b0>
  4092f0:	lsl	x20, x20, #1
  4092f4:	cmp	x20, x2
  4092f8:	b.cc	4092ec <ferror@plt+0x645c>  // b.lo, b.ul, b.last
  4092fc:	b	409344 <ferror@plt+0x64b4>
  409300:	ldr	x1, [sp, #80]
  409304:	mov	x0, x21
  409308:	mov	x2, x26
  40930c:	bl	408370 <ferror@plt+0x54e0>
  409310:	ldur	x8, [x29, #-88]
  409314:	ldr	x8, [x8, x24, lsl #3]
  409318:	cmp	x8, x21
  40931c:	b.cs	4093b0 <ferror@plt+0x6520>  // b.hs, b.nlast
  409320:	ldur	x8, [x29, #-48]
  409324:	sub	x21, x21, #0x20
  409328:	str	x21, [x8, x24, lsl #3]
  40932c:	cmp	x28, #0x2
  409330:	b.cc	409290 <ferror@plt+0x6400>  // b.lo, b.ul, b.last
  409334:	b	409408 <ferror@plt+0x6578>
  409338:	ldur	x0, [x29, #-40]
  40933c:	b	40935c <ferror@plt+0x64cc>
  409340:	mov	x20, x2
  409344:	ldur	x0, [x29, #-40]
  409348:	bl	402c00 <free@plt>
  40934c:	mov	x0, x20
  409350:	bl	4112fc <ferror@plt+0xe46c>
  409354:	stur	x0, [x29, #-40]
  409358:	ldr	x2, [x21, #8]
  40935c:	stur	x2, [x29, #-32]
  409360:	ldr	x1, [x21]
  409364:	bl	402760 <memcpy@plt>
  409368:	ldr	x8, [sp, #48]
  40936c:	cbz	x8, 409398 <ferror@plt+0x6508>
  409370:	ldr	x8, [x21, #16]
  409374:	ldr	x9, [x21]
  409378:	ldur	x10, [x29, #-40]
  40937c:	sub	x8, x8, x9
  409380:	add	x8, x10, x8
  409384:	stur	x8, [x29, #-24]
  409388:	ldr	x8, [x21, #24]
  40938c:	sub	x8, x8, x9
  409390:	add	x8, x10, x8
  409394:	stur	x8, [x29, #-16]
  409398:	sub	x8, x29, #0x28
  40939c:	stur	x8, [x29, #-80]
  4093a0:	ldur	x8, [x29, #-88]
  4093a4:	ldr	x8, [x8, x24, lsl #3]
  4093a8:	cmp	x8, x21
  4093ac:	b.cc	409320 <ferror@plt+0x6490>  // b.lo, b.ul, b.last
  4093b0:	ldur	x9, [x29, #-56]
  4093b4:	lsl	x8, x24, #4
  4093b8:	ldr	x1, [x22, x24, lsl #3]
  4093bc:	mov	w19, #0x38                  	// #56
  4093c0:	ldr	x2, [x9, x8]
  4093c4:	madd	x21, x24, x19, x27
  4093c8:	mov	x0, x21
  4093cc:	bl	406f24 <ferror@plt+0x4094>
  4093d0:	tbz	w0, #0, 40948c <ferror@plt+0x65fc>
  4093d4:	madd	x9, x24, x19, x27
  4093d8:	ldr	x8, [x21]
  4093dc:	ldp	x9, x10, [x9, #16]
  4093e0:	lsl	x11, x24, #3
  4093e4:	add	x8, x8, x10
  4093e8:	sub	x21, x8, #0x20
  4093ec:	sub	x8, x8, x9, lsl #5
  4093f0:	ldur	x9, [x29, #-48]
  4093f4:	str	x21, [x9, x11]
  4093f8:	ldur	x9, [x29, #-88]
  4093fc:	str	x8, [x9, x11]
  409400:	cmp	x28, #0x2
  409404:	b.cc	409290 <ferror@plt+0x6400>  // b.lo, b.ul, b.last
  409408:	ldur	x22, [x29, #-48]
  40940c:	mov	w26, #0x1                   	// #1
  409410:	mov	x27, x28
  409414:	mov	w19, #0x1                   	// #1
  409418:	b	409430 <ferror@plt+0x65a0>
  40941c:	add	x8, x26, x19
  409420:	mov	x27, x26
  409424:	cmp	x19, x26
  409428:	lsr	x26, x8, #1
  40942c:	b.cs	409464 <ferror@plt+0x65d4>  // b.hs, b.nlast
  409430:	ldr	x23, [x25, x26, lsl #3]
  409434:	mov	x0, x21
  409438:	ldr	x1, [x22, x23, lsl #3]
  40943c:	bl	407298 <ferror@plt+0x4408>
  409440:	tbnz	w0, #31, 40941c <ferror@plt+0x658c>
  409444:	cmp	w0, #0x0
  409448:	cset	w8, eq  // eq = none
  40944c:	cmp	x24, x23
  409450:	cset	w9, cc  // cc = lo, ul, last
  409454:	tst	w9, w8
  409458:	csinc	x19, x19, x26, ne  // ne = any
  40945c:	csel	x26, x26, x27, ne  // ne = any
  409460:	b	40941c <ferror@plt+0x658c>
  409464:	subs	x8, x19, #0x1
  409468:	b.eq	4094cc <ferror@plt+0x663c>  // b.none
  40946c:	ldr	x21, [sp, #40]
  409470:	cmp	x8, #0x4
  409474:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  409478:	b.cs	409634 <ferror@plt+0x67a4>  // b.hs, b.nlast
  40947c:	ldr	x26, [sp, #56]
  409480:	ldr	x27, [sp, #88]
  409484:	mov	x9, xzr
  409488:	b	409668 <ferror@plt+0x67d8>
  40948c:	cmp	x28, #0x2
  409490:	b.cc	4094e8 <ferror@plt+0x6658>  // b.lo, b.ul, b.last
  409494:	ldr	x9, [sp, #72]
  409498:	sub	x8, x28, #0x1
  40949c:	mov	x11, x22
  4094a0:	b	4094b4 <ferror@plt+0x6624>
  4094a4:	ldr	x24, [x25]
  4094a8:	subs	x8, x8, #0x1
  4094ac:	add	x9, x9, #0x8
  4094b0:	b.eq	4094ec <ferror@plt+0x665c>  // b.none
  4094b4:	ldr	x10, [x9]
  4094b8:	cmp	x10, x24
  4094bc:	b.ls	4094a4 <ferror@plt+0x6614>  // b.plast
  4094c0:	sub	x10, x10, #0x1
  4094c4:	str	x10, [x9]
  4094c8:	b	4094a4 <ferror@plt+0x6614>
  4094cc:	ldr	x21, [sp, #40]
  4094d0:	ldr	x26, [sp, #56]
  4094d4:	ldr	x27, [sp, #88]
  4094d8:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  4094dc:	str	x24, [x25, x8, lsl #3]
  4094e0:	cbnz	x28, 4092a0 <ferror@plt+0x6410>
  4094e4:	b	409690 <ferror@plt+0x6800>
  4094e8:	mov	x11, x22
  4094ec:	ldur	x8, [x29, #-56]
  4094f0:	ldr	x0, [x11, x24, lsl #3]
  4094f4:	sub	x19, x28, #0x1
  4094f8:	add	x21, x8, x24, lsl #4
  4094fc:	ldr	x1, [x21]
  409500:	bl	406588 <ferror@plt+0x36f8>
  409504:	ldr	x8, [sp, #96]
  409508:	cmp	x24, x8
  40950c:	b.cs	409520 <ferror@plt+0x6690>  // b.hs, b.nlast
  409510:	ldr	x0, [x21]
  409514:	sub	x8, x8, #0x1
  409518:	str	x8, [sp, #96]
  40951c:	bl	409d08 <ferror@plt+0x6e78>
  409520:	mov	w8, #0x38                  	// #56
  409524:	mul	x8, x24, x8
  409528:	ldr	x0, [x27, x8]
  40952c:	bl	402c00 <free@plt>
  409530:	cmp	x24, x19
  409534:	mov	x21, x22
  409538:	b.cs	4095c4 <ferror@plt+0x6734>  // b.hs, b.nlast
  40953c:	mov	w8, #0x38                  	// #56
  409540:	madd	x10, x24, x8, x27
  409544:	ldp	x8, x11, [sp, #16]
  409548:	ldr	x9, [sp, #32]
  40954c:	ldr	x14, [sp, #8]
  409550:	lsl	x12, x24, #3
  409554:	mvn	x13, x24
  409558:	add	x8, x8, x24, lsl #4
  40955c:	add	x9, x9, x12
  409560:	add	x11, x11, x12
  409564:	add	x12, x14, x12
  409568:	add	x13, x13, x28
  40956c:	ldr	x14, [x12]
  409570:	subs	x13, x13, #0x1
  409574:	stur	x14, [x12, #-8]
  409578:	ldr	q0, [x8]
  40957c:	add	x12, x12, #0x8
  409580:	stur	q0, [x8, #-16]
  409584:	ldur	q0, [x10, #56]
  409588:	ldur	q1, [x10, #72]
  40958c:	ldr	x14, [x10, #104]
  409590:	ldr	x15, [x11]
  409594:	add	x8, x8, #0x10
  409598:	stp	q0, q1, [x10]
  40959c:	ldur	q0, [x10, #88]
  4095a0:	str	x14, [x10, #48]
  4095a4:	ldr	x14, [x9]
  4095a8:	stur	x15, [x11, #-8]
  4095ac:	str	q0, [x10, #32]
  4095b0:	add	x10, x10, #0x38
  4095b4:	stur	x14, [x9, #-8]
  4095b8:	add	x9, x9, #0x8
  4095bc:	add	x11, x11, #0x8
  4095c0:	b.ne	40956c <ferror@plt+0x66dc>  // b.any
  4095c4:	cbz	x19, 409690 <ferror@plt+0x6800>
  4095c8:	cmp	x19, #0x3
  4095cc:	b.hi	4095d8 <ferror@plt+0x6748>  // b.pmore
  4095d0:	mov	x8, xzr
  4095d4:	b	409604 <ferror@plt+0x6774>
  4095d8:	ldr	x10, [sp, #64]
  4095dc:	and	x8, x19, #0xfffffffffffffffc
  4095e0:	mov	x9, x8
  4095e4:	ldur	q0, [x10, #-8]
  4095e8:	ldur	q1, [x10, #8]
  4095ec:	subs	x9, x9, #0x4
  4095f0:	stp	q0, q1, [x10, #-16]
  4095f4:	add	x10, x10, #0x20
  4095f8:	b.ne	4095e4 <ferror@plt+0x6754>  // b.any
  4095fc:	cmp	x19, x8
  409600:	b.eq	409628 <ferror@plt+0x6798>  // b.none
  409604:	ldr	x9, [sp, #72]
  409608:	add	x9, x9, x8, lsl #3
  40960c:	mvn	x8, x8
  409610:	add	x8, x8, x28
  409614:	ldr	x10, [x9]
  409618:	subs	x8, x8, #0x1
  40961c:	stur	x10, [x9, #-8]
  409620:	add	x9, x9, #0x8
  409624:	b.ne	409614 <ferror@plt+0x6784>  // b.any
  409628:	mov	x28, x19
  40962c:	cbnz	x28, 4092a0 <ferror@plt+0x6410>
  409630:	b	409690 <ferror@plt+0x6800>
  409634:	ldr	x11, [sp, #64]
  409638:	and	x9, x8, #0xfffffffffffffffc
  40963c:	mov	x10, x9
  409640:	ldur	q0, [x11, #-8]
  409644:	ldur	q1, [x11, #8]
  409648:	subs	x10, x10, #0x4
  40964c:	stp	q0, q1, [x11, #-16]
  409650:	add	x11, x11, #0x20
  409654:	b.ne	409640 <ferror@plt+0x67b0>  // b.any
  409658:	ldr	x26, [sp, #56]
  40965c:	ldr	x27, [sp, #88]
  409660:	cmp	x8, x9
  409664:	b.eq	409298 <ferror@plt+0x6408>  // b.none
  409668:	ldr	x10, [sp, #72]
  40966c:	add	x10, x10, x9, lsl #3
  409670:	mvn	x9, x9
  409674:	add	x9, x9, x19
  409678:	ldr	x11, [x10]
  40967c:	subs	x9, x9, #0x1
  409680:	stur	x11, [x10, #-8]
  409684:	add	x10, x10, #0x8
  409688:	b.ne	409678 <ferror@plt+0x67e8>  // b.any
  40968c:	b	409298 <ferror@plt+0x6408>
  409690:	ldur	x8, [x29, #-80]
  409694:	cbz	x8, 4096b8 <ferror@plt+0x6828>
  409698:	ldrb	w8, [x23, #1384]
  40969c:	cbz	w8, 4096b8 <ferror@plt+0x6828>
  4096a0:	ldr	x1, [sp, #80]
  4096a4:	sub	x0, x29, #0x28
  4096a8:	mov	x2, x26
  4096ac:	bl	408370 <ferror@plt+0x54e0>
  4096b0:	ldur	x0, [x29, #-40]
  4096b4:	bl	402c00 <free@plt>
  4096b8:	ldr	x0, [sp, #80]
  4096bc:	mov	x1, x26
  4096c0:	bl	406588 <ferror@plt+0x36f8>
  4096c4:	mov	x0, x21
  4096c8:	bl	402c00 <free@plt>
  4096cc:	mov	x0, x27
  4096d0:	bl	402c00 <free@plt>
  4096d4:	mov	x0, x25
  4096d8:	bl	402c00 <free@plt>
  4096dc:	ldur	x0, [x29, #-88]
  4096e0:	bl	402c00 <free@plt>
  4096e4:	ldur	x0, [x29, #-48]
  4096e8:	bl	402c00 <free@plt>
  4096ec:	ldp	x20, x19, [sp, #272]
  4096f0:	ldp	x22, x21, [sp, #256]
  4096f4:	ldp	x24, x23, [sp, #240]
  4096f8:	ldp	x26, x25, [sp, #224]
  4096fc:	ldp	x28, x27, [sp, #208]
  409700:	ldp	x29, x30, [sp, #192]
  409704:	add	sp, sp, #0x120
  409708:	ret
  40970c:	sub	sp, sp, #0xf0
  409710:	stp	x26, x25, [sp, #176]
  409714:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  409718:	add	x25, x25, #0x590
  40971c:	ldr	x8, [x25, #32]
  409720:	ldr	x9, [x25, #48]
  409724:	stp	x29, x30, [sp, #144]
  409728:	stp	x24, x23, [sp, #192]
  40972c:	stp	x22, x21, [sp, #208]
  409730:	stp	x20, x19, [sp, #224]
  409734:	ldr	x23, [x8, x9, lsl #3]
  409738:	mov	x21, x0
  40973c:	str	x27, [sp, #160]
  409740:	add	x29, sp, #0x90
  409744:	mov	x0, x23
  409748:	mov	w24, w1
  40974c:	bl	4027c0 <strlen@plt>
  409750:	add	x8, x0, #0x20
  409754:	mov	x22, x0
  409758:	and	x0, x8, #0xfffffffffffffff8
  40975c:	bl	4112fc <ferror@plt+0xe46c>
  409760:	add	x20, x0, #0xd
  409764:	mov	x19, x0
  409768:	mov	x0, x20
  40976c:	mov	x1, x23
  409770:	mov	x2, x22
  409774:	bl	402760 <memcpy@plt>
  409778:	adrp	x8, 414000 <_obstack_memory_used@@Base+0x15ec>
  40977c:	add	x8, x8, #0x38
  409780:	ldr	x8, [x8]
  409784:	mov	w10, #0x5858                	// #22616
  409788:	add	x9, x20, x22
  40978c:	movk	w10, #0x58, lsl #16
  409790:	str	w10, [x9, #8]
  409794:	str	x8, [x9]
  409798:	str	xzr, [x19]
  40979c:	ldr	x8, [x25, #48]
  4097a0:	ldr	x9, [x25]
  4097a4:	add	x10, sp, #0x8
  4097a8:	add	x27, x10, #0x8
  4097ac:	add	x11, x8, #0x1
  4097b0:	cmp	x11, x9
  4097b4:	csinc	x8, xzr, x8, eq  // eq = none
  4097b8:	add	x1, x25, #0x60
  4097bc:	mov	w0, wzr
  4097c0:	mov	x2, x27
  4097c4:	str	x8, [x25, #48]
  4097c8:	bl	402780 <pthread_sigmask@plt>
  4097cc:	cmp	w0, #0x0
  4097d0:	cset	w8, eq  // eq = none
  4097d4:	mov	w1, #0x80000               	// #524288
  4097d8:	mov	x0, x20
  4097dc:	strb	w8, [sp, #8]
  4097e0:	bl	4106b0 <ferror@plt+0xd820>
  4097e4:	mov	w22, w0
  4097e8:	tbnz	w0, #31, 4097fc <ferror@plt+0x696c>
  4097ec:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4097f0:	ldr	x9, [x8, #952]
  4097f4:	str	x19, [x9]
  4097f8:	str	x19, [x8, #952]
  4097fc:	bl	402e00 <__errno_location@plt>
  409800:	ldrb	w8, [sp, #8]
  409804:	ldr	w26, [x0]
  409808:	mov	x25, x0
  40980c:	cbz	w8, 409820 <ferror@plt+0x6990>
  409810:	mov	w0, #0x2                   	// #2
  409814:	mov	x1, x27
  409818:	mov	x2, xzr
  40981c:	bl	402780 <pthread_sigmask@plt>
  409820:	str	w26, [x25]
  409824:	tbnz	w22, #31, 4098b4 <ferror@plt+0x6a24>
  409828:	cbz	x19, 4098ec <ferror@plt+0x6a5c>
  40982c:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  409830:	ldr	x8, [x23, #1408]
  409834:	strb	wzr, [x19, #12]
  409838:	cbz	x8, 4098d4 <ferror@plt+0x6a44>
  40983c:	add	x0, sp, #0x8
  409840:	mov	w1, #0x4                   	// #4
  409844:	bl	4099a0 <ferror@plt+0x6b10>
  409848:	cmp	w0, #0x1
  40984c:	str	w0, [x19, #8]
  409850:	b.lt	4098d0 <ferror@plt+0x6a40>  // b.tstop
  409854:	mov	w0, w22
  409858:	bl	402a70 <close@plt>
  40985c:	ldr	w0, [sp, #8]
  409860:	bl	402a70 <close@plt>
  409864:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  409868:	ldr	x0, [x23, #1464]
  40986c:	ldr	w22, [sp, #12]
  409870:	cbnz	x0, 40989c <ferror@plt+0x6a0c>
  409874:	adrp	x2, 409000 <ferror@plt+0x6170>
  409878:	adrp	x3, 409000 <ferror@plt+0x6170>
  40987c:	add	x2, x2, #0xce4
  409880:	add	x3, x3, #0xcf4
  409884:	mov	w0, #0x2f                  	// #47
  409888:	mov	x1, xzr
  40988c:	mov	x4, xzr
  409890:	bl	40c650 <ferror@plt+0x97c0>
  409894:	str	x0, [x23, #1464]
  409898:	cbz	x0, 4098b0 <ferror@plt+0x6a20>
  40989c:	mov	w8, #0x1                   	// #1
  4098a0:	mov	x1, x19
  4098a4:	strb	w8, [x19, #12]
  4098a8:	bl	40d0f0 <ferror@plt+0xa260>
  4098ac:	cbnz	x0, 4098d4 <ferror@plt+0x6a44>
  4098b0:	bl	411638 <ferror@plt+0xe7a8>
  4098b4:	cmp	w26, #0x18
  4098b8:	b.ne	409910 <ferror@plt+0x6a80>  // b.any
  4098bc:	tbz	w24, #0, 409910 <ferror@plt+0x6a80>
  4098c0:	mov	x0, x19
  4098c4:	bl	402c00 <free@plt>
  4098c8:	mov	x19, xzr
  4098cc:	b	4098ec <ferror@plt+0x6a5c>
  4098d0:	cbz	w0, 409960 <ferror@plt+0x6ad0>
  4098d4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  4098d8:	add	x1, x1, #0x979
  4098dc:	mov	w0, w22
  4098e0:	bl	4029f0 <fdopen@plt>
  4098e4:	str	x0, [x21]
  4098e8:	cbz	x0, 409948 <ferror@plt+0x6ab8>
  4098ec:	mov	x0, x19
  4098f0:	ldp	x20, x19, [sp, #224]
  4098f4:	ldp	x22, x21, [sp, #208]
  4098f8:	ldp	x24, x23, [sp, #192]
  4098fc:	ldp	x26, x25, [sp, #176]
  409900:	ldr	x27, [sp, #160]
  409904:	ldp	x29, x30, [sp, #144]
  409908:	add	sp, sp, #0xf0
  40990c:	ret
  409910:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409914:	add	x1, x1, #0xa60
  409918:	mov	w2, #0x5                   	// #5
  40991c:	mov	x0, xzr
  409920:	bl	402d70 <dcgettext@plt>
  409924:	mov	x19, x0
  409928:	mov	w0, #0x4                   	// #4
  40992c:	mov	x1, x23
  409930:	bl	40f628 <ferror@plt+0xc798>
  409934:	mov	x3, x0
  409938:	mov	w0, #0x2                   	// #2
  40993c:	mov	w1, w26
  409940:	mov	x2, x19
  409944:	bl	4027f0 <error@plt>
  409948:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40994c:	add	x1, x1, #0xa41
  409950:	mov	w2, #0x5                   	// #5
  409954:	bl	402d70 <dcgettext@plt>
  409958:	mov	x1, x20
  40995c:	bl	406c50 <ferror@plt+0x3dc0>
  409960:	ldr	w0, [sp, #12]
  409964:	bl	402a70 <close@plt>
  409968:	mov	w1, #0x1                   	// #1
  40996c:	mov	w0, w22
  409970:	bl	408cd0 <ferror@plt+0x5e40>
  409974:	ldr	w0, [sp, #8]
  409978:	mov	w1, wzr
  40997c:	bl	408cd0 <ferror@plt+0x5e40>
  409980:	ldr	x0, [x23, #1408]
  409984:	mov	x2, xzr
  409988:	mov	x1, x0
  40998c:	bl	402e10 <execlp@plt>
  409990:	ldr	w0, [x25]
  409994:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409998:	add	x1, x1, #0xa1f
  40999c:	bl	409b4c <ferror@plt+0x6cbc>
  4099a0:	sub	sp, sp, #0x100
  4099a4:	stp	x20, x19, [sp, #240]
  4099a8:	mov	x20, x1
  4099ac:	mov	w1, #0x80000               	// #524288
  4099b0:	str	d8, [sp, #144]
  4099b4:	stp	x29, x30, [sp, #160]
  4099b8:	stp	x28, x27, [sp, #176]
  4099bc:	stp	x26, x25, [sp, #192]
  4099c0:	stp	x24, x23, [sp, #208]
  4099c4:	stp	x22, x21, [sp, #224]
  4099c8:	add	x29, sp, #0x90
  4099cc:	mov	x19, x0
  4099d0:	bl	40dd20 <ferror@plt+0xae90>
  4099d4:	tbnz	w0, #31, 409ae4 <ferror@plt+0x6c54>
  4099d8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4099dc:	ldr	w8, [x8, #968]
  4099e0:	adrp	x24, 427000 <_obstack_memory_used@@Base+0x145ec>
  4099e4:	ldr	w9, [x24, #1404]
  4099e8:	add	w8, w8, #0x1
  4099ec:	cmp	w8, w9
  4099f0:	b.cs	409a14 <ferror@plt+0x6b84>  // b.hs, b.nlast
  4099f4:	mov	w0, #0xffffffff            	// #-1
  4099f8:	bl	409bd8 <ferror@plt+0x6d48>
  4099fc:	ldr	w8, [x24, #1404]
  409a00:	cmp	w8, #0x1
  409a04:	b.lt	409a14 <ferror@plt+0x6b84>  // b.tstop
  409a08:	mov	w0, wzr
  409a0c:	bl	409bd8 <ferror@plt+0x6d48>
  409a10:	cbnz	w0, 4099fc <ferror@plt+0x6b6c>
  409a14:	cbz	x20, 409aec <ferror@plt+0x6c5c>
  409a18:	add	x8, sp, #0x8
  409a1c:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  409a20:	fmov	d8, #2.500000000000000000e-01
  409a24:	add	x25, x25, #0x5a0
  409a28:	add	x22, x8, #0x8
  409a2c:	adrp	x26, 427000 <_obstack_memory_used@@Base+0x145ec>
  409a30:	b	409a38 <ferror@plt+0x6ba8>
  409a34:	cbz	x20, 409acc <ferror@plt+0x6c3c>
  409a38:	add	x1, x25, #0x50
  409a3c:	mov	w0, wzr
  409a40:	mov	x2, x22
  409a44:	bl	402780 <pthread_sigmask@plt>
  409a48:	cmp	w0, #0x0
  409a4c:	cset	w8, eq  // eq = none
  409a50:	strb	w8, [sp, #8]
  409a54:	ldr	x28, [x25]
  409a58:	str	xzr, [x25]
  409a5c:	bl	402880 <fork@plt>
  409a60:	mov	w21, w0
  409a64:	bl	402e00 <__errno_location@plt>
  409a68:	ldr	w27, [x0]
  409a6c:	mov	x23, x0
  409a70:	cbz	w21, 409a78 <ferror@plt+0x6be8>
  409a74:	str	x28, [x26, #1440]
  409a78:	ldrb	w8, [sp, #8]
  409a7c:	cbz	w8, 409a90 <ferror@plt+0x6c00>
  409a80:	mov	w0, #0x2                   	// #2
  409a84:	mov	x1, x22
  409a88:	mov	x2, xzr
  409a8c:	bl	402780 <pthread_sigmask@plt>
  409a90:	str	w27, [x23]
  409a94:	tbz	w21, #31, 409acc <ferror@plt+0x6c3c>
  409a98:	cmp	w27, #0xb
  409a9c:	b.ne	409acc <ferror@plt+0x6c3c>  // b.any
  409aa0:	mov	v0.16b, v8.16b
  409aa4:	sub	x20, x20, #0x1
  409aa8:	bl	41188c <ferror@plt+0xe9fc>
  409aac:	fadd	d8, d8, d8
  409ab0:	ldr	w8, [x24, #1404]
  409ab4:	cmp	w8, #0x1
  409ab8:	b.lt	409a34 <ferror@plt+0x6ba4>  // b.tstop
  409abc:	mov	w0, wzr
  409ac0:	bl	409bd8 <ferror@plt+0x6d48>
  409ac4:	cbnz	w0, 409ab0 <ferror@plt+0x6c20>
  409ac8:	b	409a34 <ferror@plt+0x6ba4>
  409acc:	tbnz	w21, #31, 409b04 <ferror@plt+0x6c74>
  409ad0:	cbz	w21, 409aec <ferror@plt+0x6c5c>
  409ad4:	ldr	w8, [x24, #1404]
  409ad8:	add	w8, w8, #0x1
  409adc:	str	w8, [x24, #1404]
  409ae0:	b	409b24 <ferror@plt+0x6c94>
  409ae4:	mov	w21, #0xffffffff            	// #-1
  409ae8:	b	409b24 <ferror@plt+0x6c94>
  409aec:	mov	w0, wzr
  409af0:	bl	402a70 <close@plt>
  409af4:	mov	w0, #0x1                   	// #1
  409af8:	bl	402a70 <close@plt>
  409afc:	mov	w21, wzr
  409b00:	b	409b24 <ferror@plt+0x6c94>
  409b04:	bl	402e00 <__errno_location@plt>
  409b08:	mov	x20, x0
  409b0c:	ldr	w22, [x0]
  409b10:	ldr	w0, [x19]
  409b14:	bl	402a70 <close@plt>
  409b18:	ldr	w0, [x19, #4]
  409b1c:	bl	402a70 <close@plt>
  409b20:	str	w22, [x20]
  409b24:	mov	w0, w21
  409b28:	ldp	x20, x19, [sp, #240]
  409b2c:	ldp	x22, x21, [sp, #224]
  409b30:	ldp	x24, x23, [sp, #208]
  409b34:	ldp	x26, x25, [sp, #192]
  409b38:	ldp	x28, x27, [sp, #176]
  409b3c:	ldp	x29, x30, [sp, #160]
  409b40:	ldr	d8, [sp, #144]
  409b44:	add	sp, sp, #0x100
  409b48:	ret
  409b4c:	sub	sp, sp, #0x30
  409b50:	stp	x20, x19, [sp, #32]
  409b54:	mov	w19, w0
  409b58:	mov	x0, x1
  409b5c:	stp	x29, x30, [sp, #16]
  409b60:	add	x29, sp, #0x10
  409b64:	mov	x20, x1
  409b68:	bl	4027c0 <strlen@plt>
  409b6c:	mov	x2, x0
  409b70:	mov	w0, #0x2                   	// #2
  409b74:	mov	x1, x20
  409b78:	bl	402ac0 <write@plt>
  409b7c:	cbz	w19, 409bbc <ferror@plt+0x6d2c>
  409b80:	add	x1, sp, #0x4
  409b84:	mov	w0, w19
  409b88:	bl	40d5cc <ferror@plt+0xa73c>
  409b8c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409b90:	mov	x19, x0
  409b94:	add	x1, x1, #0x9fb
  409b98:	mov	w0, #0x2                   	// #2
  409b9c:	mov	w2, #0x8                   	// #8
  409ba0:	bl	402ac0 <write@plt>
  409ba4:	mov	x0, x19
  409ba8:	bl	4027c0 <strlen@plt>
  409bac:	mov	x2, x0
  409bb0:	mov	w0, #0x2                   	// #2
  409bb4:	mov	x1, x19
  409bb8:	bl	402ac0 <write@plt>
  409bbc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409bc0:	add	x1, x1, #0xfb7
  409bc4:	mov	w0, #0x2                   	// #2
  409bc8:	mov	w2, #0x1                   	// #1
  409bcc:	bl	402ac0 <write@plt>
  409bd0:	mov	w0, #0x2                   	// #2
  409bd4:	bl	402790 <_exit@plt>
  409bd8:	sub	sp, sp, #0x40
  409bdc:	cmp	w0, #0x0
  409be0:	stp	x20, x19, [sp, #48]
  409be4:	mov	w20, w0
  409be8:	cset	w2, eq  // eq = none
  409bec:	csinv	w0, w0, wzr, ne  // ne = any
  409bf0:	add	x1, sp, #0xc
  409bf4:	stp	x29, x30, [sp, #32]
  409bf8:	add	x29, sp, #0x20
  409bfc:	bl	402e60 <waitpid@plt>
  409c00:	tbnz	w0, #31, 409c64 <ferror@plt+0x6dd4>
  409c04:	mov	w19, w0
  409c08:	cbz	w0, 409c50 <ferror@plt+0x6dc0>
  409c0c:	cmp	w20, #0x0
  409c10:	b.gt	409c34 <ferror@plt+0x6da4>
  409c14:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409c18:	ldr	x0, [x8, #1464]
  409c1c:	add	x1, sp, #0x10
  409c20:	str	w19, [sp, #24]
  409c24:	bl	40d128 <ferror@plt+0xa298>
  409c28:	cbz	x0, 409c50 <ferror@plt+0x6dc0>
  409c2c:	mov	w8, #0x2                   	// #2
  409c30:	strb	w8, [x0, #12]
  409c34:	ldrh	w8, [sp, #12]
  409c38:	tst	w8, #0xffffff7f
  409c3c:	b.ne	409ca8 <ferror@plt+0x6e18>  // b.any
  409c40:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409c44:	ldr	w9, [x8, #1404]
  409c48:	sub	w9, w9, #0x1
  409c4c:	str	w9, [x8, #1404]
  409c50:	mov	w0, w19
  409c54:	ldp	x20, x19, [sp, #48]
  409c58:	ldp	x29, x30, [sp, #32]
  409c5c:	add	sp, sp, #0x40
  409c60:	ret
  409c64:	bl	402e00 <__errno_location@plt>
  409c68:	ldr	w19, [x0]
  409c6c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409c70:	add	x1, x1, #0x9c9
  409c74:	mov	w2, #0x5                   	// #5
  409c78:	mov	x0, xzr
  409c7c:	bl	402d70 <dcgettext@plt>
  409c80:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409c84:	ldr	x1, [x8, #1408]
  409c88:	mov	x20, x0
  409c8c:	mov	w0, #0x4                   	// #4
  409c90:	bl	40f628 <ferror@plt+0xc798>
  409c94:	mov	x3, x0
  409c98:	mov	w0, #0x2                   	// #2
  409c9c:	mov	w1, w19
  409ca0:	mov	x2, x20
  409ca4:	bl	4027f0 <error@plt>
  409ca8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409cac:	add	x1, x1, #0x9dd
  409cb0:	mov	w2, #0x5                   	// #5
  409cb4:	mov	x0, xzr
  409cb8:	bl	402d70 <dcgettext@plt>
  409cbc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409cc0:	ldr	x1, [x8, #1408]
  409cc4:	mov	x19, x0
  409cc8:	mov	w0, #0x4                   	// #4
  409ccc:	bl	40f628 <ferror@plt+0xc798>
  409cd0:	mov	x3, x0
  409cd4:	mov	w0, #0x2                   	// #2
  409cd8:	mov	w1, wzr
  409cdc:	mov	x2, x19
  409ce0:	bl	4027f0 <error@plt>
  409ce4:	ldrsw	x8, [x0, #8]
  409ce8:	udiv	x9, x8, x1
  409cec:	msub	x0, x9, x1, x8
  409cf0:	ret
  409cf4:	ldr	w8, [x0, #8]
  409cf8:	ldr	w9, [x1, #8]
  409cfc:	cmp	w8, w9
  409d00:	cset	w0, eq  // eq = none
  409d04:	ret
  409d08:	sub	sp, sp, #0xe0
  409d0c:	stp	x20, x19, [sp, #208]
  409d10:	adrp	x19, 427000 <_obstack_memory_used@@Base+0x145ec>
  409d14:	mov	x20, x0
  409d18:	add	x19, x19, #0x5a0
  409d1c:	stp	x29, x30, [sp, #144]
  409d20:	str	x25, [sp, #160]
  409d24:	stp	x24, x23, [sp, #176]
  409d28:	stp	x22, x21, [sp, #192]
  409d2c:	add	x29, sp, #0x90
  409d30:	mov	x24, x19
  409d34:	ldr	x19, [x19]
  409d38:	add	x8, x19, #0xd
  409d3c:	cmp	x8, x20
  409d40:	b.ne	409d30 <ferror@plt+0x6ea0>  // b.any
  409d44:	ldrb	w8, [x19, #12]
  409d48:	cmp	w8, #0x1
  409d4c:	b.ne	409d7c <ferror@plt+0x6eec>  // b.any
  409d50:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409d54:	ldr	w21, [x19, #8]
  409d58:	ldr	x0, [x8, #1464]
  409d5c:	add	x1, sp, #0x8
  409d60:	str	w21, [sp, #16]
  409d64:	bl	40d128 <ferror@plt+0xa298>
  409d68:	cbz	x0, 409d7c <ferror@plt+0x6eec>
  409d6c:	mov	w8, #0x2                   	// #2
  409d70:	strb	w8, [x0, #12]
  409d74:	mov	w0, w21
  409d78:	bl	409bd8 <ferror@plt+0x6d48>
  409d7c:	ldr	x25, [x19]
  409d80:	add	x8, sp, #0x8
  409d84:	add	x22, x8, #0x8
  409d88:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  409d8c:	add	x1, x1, #0x5f0
  409d90:	mov	w0, wzr
  409d94:	mov	x2, x22
  409d98:	bl	402780 <pthread_sigmask@plt>
  409d9c:	cmp	w0, #0x0
  409da0:	cset	w8, eq  // eq = none
  409da4:	mov	x0, x20
  409da8:	strb	w8, [sp, #8]
  409dac:	bl	402e70 <unlink@plt>
  409db0:	mov	w23, w0
  409db4:	bl	402e00 <__errno_location@plt>
  409db8:	ldr	w21, [x0]
  409dbc:	str	x25, [x24]
  409dc0:	ldrb	w8, [sp, #8]
  409dc4:	cbz	w8, 409dd8 <ferror@plt+0x6f48>
  409dc8:	mov	w0, #0x2                   	// #2
  409dcc:	mov	x1, x22
  409dd0:	mov	x2, xzr
  409dd4:	bl	402780 <pthread_sigmask@plt>
  409dd8:	cbz	w23, 409e18 <ferror@plt+0x6f88>
  409ddc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  409de0:	add	x1, x1, #0xa04
  409de4:	mov	w2, #0x5                   	// #5
  409de8:	mov	x0, xzr
  409dec:	bl	402d70 <dcgettext@plt>
  409df0:	mov	x22, x0
  409df4:	mov	w1, #0x3                   	// #3
  409df8:	mov	w0, wzr
  409dfc:	mov	x2, x20
  409e00:	bl	40f84c <ferror@plt+0xc9bc>
  409e04:	mov	x3, x0
  409e08:	mov	w0, wzr
  409e0c:	mov	w1, w21
  409e10:	mov	x2, x22
  409e14:	bl	4027f0 <error@plt>
  409e18:	cbnz	x25, 409e24 <ferror@plt+0x6f94>
  409e1c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  409e20:	str	x24, [x8, #952]
  409e24:	mov	x0, x19
  409e28:	bl	402c00 <free@plt>
  409e2c:	ldp	x20, x19, [sp, #208]
  409e30:	ldp	x22, x21, [sp, #192]
  409e34:	ldp	x24, x23, [sp, #176]
  409e38:	ldr	x25, [sp, #160]
  409e3c:	ldp	x29, x30, [sp, #144]
  409e40:	add	sp, sp, #0xe0
  409e44:	ret
  409e48:	sub	sp, sp, #0x110
  409e4c:	stp	x29, x30, [sp, #176]
  409e50:	stp	x28, x27, [sp, #192]
  409e54:	stp	x26, x25, [sp, #208]
  409e58:	stp	x24, x23, [sp, #224]
  409e5c:	stp	x22, x21, [sp, #240]
  409e60:	stp	x20, x19, [sp, #256]
  409e64:	add	x29, sp, #0xb0
  409e68:	lsr	x19, x1, #1
  409e6c:	ldp	x24, x26, [x3, #40]
  409e70:	stp	x19, x2, [x29, #-64]
  409e74:	ldr	x8, [x3, #64]
  409e78:	mov	x21, x6
  409e7c:	mov	x25, x3
  409e80:	mov	x23, x0
  409e84:	cmp	x1, #0x2
  409e88:	str	x2, [sp, #32]
  409e8c:	stp	x8, x4, [x29, #-48]
  409e90:	str	x4, [sp]
  409e94:	stp	x5, x0, [x29, #-80]
  409e98:	stp	x5, x6, [x29, #-32]
  409e9c:	b.cc	409ed4 <ferror@plt+0x7044>  // b.lo, b.ul, b.last
  409ea0:	add	x8, x26, x24
  409ea4:	cmp	x8, #0x20, lsl #12
  409ea8:	b.cc	409ed4 <ferror@plt+0x7044>  // b.lo, b.ul, b.last
  409eac:	adrp	x2, 40a000 <ferror@plt+0x7170>
  409eb0:	mov	x22, x1
  409eb4:	add	x2, x2, #0x7e4
  409eb8:	sub	x0, x29, #0x10
  409ebc:	sub	x3, x29, #0x48
  409ec0:	mov	x1, xzr
  409ec4:	bl	402aa0 <pthread_create@plt>
  409ec8:	ldr	x24, [x25, #40]
  409ecc:	cbz	w0, 40a690 <ferror@plt+0x7800>
  409ed0:	ldr	x26, [x25, #48]
  409ed4:	ldr	x8, [sp, #32]
  409ed8:	cmp	x26, #0x2
  409edc:	sub	x22, x23, x8, lsl #5
  409ee0:	b.cc	409f00 <ferror@plt+0x7070>  // b.lo, b.ul, b.last
  409ee4:	lsl	x8, x24, #4
  409ee8:	and	x8, x8, #0xffffffffffffffe0
  409eec:	sub	x0, x23, x24, lsl #5
  409ef0:	sub	x2, x22, x8
  409ef4:	mov	x1, x26
  409ef8:	mov	w3, wzr
  409efc:	bl	40a810 <ferror@plt+0x7980>
  409f00:	cmp	x24, #0x2
  409f04:	b.cc	409f1c <ferror@plt+0x708c>  // b.lo, b.ul, b.last
  409f08:	mov	x0, x23
  409f0c:	mov	x1, x24
  409f10:	mov	x2, x22
  409f14:	mov	w3, wzr
  409f18:	bl	40a810 <ferror@plt+0x7980>
  409f1c:	sub	x8, x23, x24, lsl #5
  409f20:	sub	x9, x8, x26, lsl #5
  409f24:	stp	x23, x8, [x25]
  409f28:	stp	x8, x9, [x25, #16]
  409f2c:	ldr	x24, [sp]
  409f30:	add	x23, x24, #0x8
  409f34:	mov	x0, x23
  409f38:	bl	402e40 <pthread_mutex_lock@plt>
  409f3c:	mov	x19, x24
  409f40:	ldr	x0, [x19], #56
  409f44:	mov	x1, x25
  409f48:	bl	40d400 <ferror@plt+0xa570>
  409f4c:	mov	w8, #0x1                   	// #1
  409f50:	mov	x0, x19
  409f54:	strb	w8, [x25, #84]
  409f58:	bl	402980 <pthread_cond_signal@plt>
  409f5c:	mov	x25, x23
  409f60:	str	x19, [sp, #16]
  409f64:	str	x21, [sp, #72]
  409f68:	b	409f8c <ferror@plt+0x70fc>
  409f6c:	ldr	x8, [x27, #56]
  409f70:	add	x0, x8, #0x58
  409f74:	bl	402e40 <pthread_mutex_lock@plt>
  409f78:	ldr	x22, [x27, #56]
  409f7c:	ldrb	w8, [x22, #84]
  409f80:	cbz	w8, 40a210 <ferror@plt+0x7380>
  409f84:	add	x0, x22, #0x58
  409f88:	bl	402e50 <pthread_mutex_unlock@plt>
  409f8c:	mov	x0, x25
  409f90:	bl	402e50 <pthread_mutex_unlock@plt>
  409f94:	mov	x0, x23
  409f98:	bl	402e40 <pthread_mutex_lock@plt>
  409f9c:	ldr	x0, [x24]
  409fa0:	bl	40d4f0 <ferror@plt+0xa660>
  409fa4:	mov	x27, x0
  409fa8:	cbnz	x0, 409fc8 <ferror@plt+0x7138>
  409fac:	mov	x0, x19
  409fb0:	mov	x1, x23
  409fb4:	bl	402c30 <pthread_cond_wait@plt>
  409fb8:	ldr	x0, [x24]
  409fbc:	bl	40d4f0 <ferror@plt+0xa660>
  409fc0:	cbz	x0, 409fac <ferror@plt+0x711c>
  409fc4:	mov	x27, x0
  409fc8:	mov	x0, x23
  409fcc:	bl	402e50 <pthread_mutex_unlock@plt>
  409fd0:	add	x22, x27, #0x58
  409fd4:	mov	x0, x22
  409fd8:	bl	402e40 <pthread_mutex_lock@plt>
  409fdc:	ldr	w9, [x27, #80]
  409fe0:	strb	wzr, [x27, #84]
  409fe4:	cbz	w9, 40a63c <ferror@plt+0x77ac>
  409fe8:	ldr	x10, [sp, #32]
  409fec:	ldp	x11, x26, [x27]
  409ff0:	lsl	w8, w9, #1
  409ff4:	add	w8, w8, #0x2
  409ff8:	lsr	x8, x10, x8
  409ffc:	cmp	w9, #0x1
  40a000:	add	x21, x8, #0x1
  40a004:	stp	x11, x26, [sp, #56]
  40a008:	str	x22, [sp, #48]
  40a00c:	b.ne	40a140 <ferror@plt+0x72b0>  // b.any
  40a010:	ldr	x24, [x27, #16]
  40a014:	cmp	x11, x24
  40a018:	b.eq	40a238 <ferror@plt+0x73a8>  // b.none
  40a01c:	ldr	x25, [x27, #24]
  40a020:	mov	x19, x26
  40a024:	mov	x20, x11
  40a028:	stp	x11, x26, [sp, #80]
  40a02c:	str	x11, [sp, #40]
  40a030:	cmp	x26, x25
  40a034:	b.eq	40a2e0 <ferror@plt+0x7450>  // b.none
  40a038:	cbz	x21, 40a2e8 <ferror@plt+0x7458>
  40a03c:	sub	x28, x20, #0x20
  40a040:	sub	x22, x26, #0x20
  40a044:	mov	x0, x28
  40a048:	mov	x1, x22
  40a04c:	sub	x21, x21, #0x1
  40a050:	bl	407298 <ferror@plt+0x4408>
  40a054:	cmp	w0, #0x0
  40a058:	b.le	40a0d0 <ferror@plt+0x7240>
  40a05c:	str	x22, [x27, #8]
  40a060:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a064:	ldrb	w8, [x8, #1384]
  40a068:	cmp	w8, #0x1
  40a06c:	b.ne	40a0a0 <ferror@plt+0x7210>  // b.any
  40a070:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a074:	ldr	x8, [x8, #1488]
  40a078:	cbz	x8, 40a090 <ferror@plt+0x7200>
  40a07c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a080:	mov	x0, x22
  40a084:	add	x1, x1, #0x5d0
  40a088:	bl	407298 <ferror@plt+0x4408>
  40a08c:	cbz	w0, 40a0b0 <ferror@plt+0x7220>
  40a090:	ldp	q1, q0, [x22]
  40a094:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a098:	add	x8, x8, #0x5d0
  40a09c:	stp	q1, q0, [x8]
  40a0a0:	ldur	x1, [x29, #-80]
  40a0a4:	ldr	x2, [sp, #72]
  40a0a8:	mov	x0, x22
  40a0ac:	bl	408370 <ferror@plt+0x54e0>
  40a0b0:	mov	x19, x22
  40a0b4:	mov	x28, x20
  40a0b8:	mov	x26, x22
  40a0bc:	str	x22, [sp, #88]
  40a0c0:	cmp	x28, x24
  40a0c4:	mov	x20, x28
  40a0c8:	b.ne	40a030 <ferror@plt+0x71a0>  // b.any
  40a0cc:	b	40a138 <ferror@plt+0x72a8>
  40a0d0:	str	x28, [x27]
  40a0d4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a0d8:	ldrb	w8, [x8, #1384]
  40a0dc:	cmp	w8, #0x1
  40a0e0:	b.ne	40a114 <ferror@plt+0x7284>  // b.any
  40a0e4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a0e8:	ldr	x8, [x8, #1488]
  40a0ec:	cbz	x8, 40a104 <ferror@plt+0x7274>
  40a0f0:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a0f4:	mov	x0, x28
  40a0f8:	add	x1, x1, #0x5d0
  40a0fc:	bl	407298 <ferror@plt+0x4408>
  40a100:	cbz	w0, 40a124 <ferror@plt+0x7294>
  40a104:	ldp	q1, q0, [x28]
  40a108:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a10c:	add	x8, x8, #0x5d0
  40a110:	stp	q1, q0, [x8]
  40a114:	ldur	x1, [x29, #-80]
  40a118:	ldr	x2, [sp, #72]
  40a11c:	mov	x0, x28
  40a120:	bl	408370 <ferror@plt+0x54e0>
  40a124:	str	x28, [sp, #80]
  40a128:	str	x28, [sp, #40]
  40a12c:	cmp	x28, x24
  40a130:	mov	x20, x28
  40a134:	b.ne	40a030 <ferror@plt+0x71a0>  // b.any
  40a138:	mov	x20, x24
  40a13c:	b	40a2ec <ferror@plt+0x745c>
  40a140:	ldr	x9, [x27, #32]
  40a144:	ldr	x10, [x27, #16]
  40a148:	ldr	x20, [x9]
  40a14c:	cmp	x11, x10
  40a150:	str	x9, [sp, #24]
  40a154:	b.eq	40a254 <ferror@plt+0x73c4>  // b.none
  40a158:	ldr	x12, [x27, #24]
  40a15c:	str	x10, [sp, #8]
  40a160:	cmp	x26, x12
  40a164:	str	x12, [sp, #40]
  40a168:	b.eq	40a4c0 <ferror@plt+0x7630>  // b.none
  40a16c:	cbz	x21, 40a4bc <ferror@plt+0x762c>
  40a170:	neg	x21, x8
  40a174:	sub	x8, x20, #0x20
  40a178:	stp	x11, x26, [sp, #80]
  40a17c:	mov	x25, x26
  40a180:	mov	x26, x11
  40a184:	sub	x22, x26, #0x20
  40a188:	sub	x28, x25, #0x20
  40a18c:	mov	x0, x22
  40a190:	mov	x1, x28
  40a194:	mov	x19, x10
  40a198:	mov	x20, x8
  40a19c:	bl	407298 <ferror@plt+0x4408>
  40a1a0:	cmp	w0, #0x0
  40a1a4:	b.le	40a1cc <ferror@plt+0x733c>
  40a1a8:	str	x28, [x27, #8]
  40a1ac:	ldp	q1, q0, [x28]
  40a1b0:	mov	x25, x28
  40a1b4:	stp	q1, q0, [x20]
  40a1b8:	str	x28, [sp, #88]
  40a1bc:	mov	x10, x19
  40a1c0:	cmp	x26, x19
  40a1c4:	b.ne	40a1ec <ferror@plt+0x735c>  // b.any
  40a1c8:	b	40a624 <ferror@plt+0x7794>
  40a1cc:	str	x22, [x27]
  40a1d0:	ldp	q1, q0, [x22]
  40a1d4:	mov	x26, x22
  40a1d8:	stp	q1, q0, [x20]
  40a1dc:	str	x22, [sp, #80]
  40a1e0:	mov	x10, x19
  40a1e4:	cmp	x26, x19
  40a1e8:	b.eq	40a624 <ferror@plt+0x7794>  // b.none
  40a1ec:	ldr	x8, [sp, #40]
  40a1f0:	cmp	x25, x8
  40a1f4:	b.eq	40a630 <ferror@plt+0x77a0>  // b.none
  40a1f8:	add	x21, x21, #0x1
  40a1fc:	cmp	x21, #0x1
  40a200:	sub	x8, x20, #0x20
  40a204:	b.ne	40a184 <ferror@plt+0x72f4>  // b.any
  40a208:	mov	x21, #0xffffffffffffffff    	// #-1
  40a20c:	b	40a4cc <ferror@plt+0x763c>
  40a210:	ldp	x8, x10, [x22, #8]
  40a214:	ldr	x11, [x22]
  40a218:	ldr	x9, [x22, #24]
  40a21c:	cmp	x11, x10
  40a220:	b.ne	40a478 <ferror@plt+0x75e8>  // b.any
  40a224:	cmp	x8, x9
  40a228:	b.eq	409f84 <ferror@plt+0x70f4>  // b.none
  40a22c:	ldr	x8, [x22, #40]
  40a230:	cbnz	x8, 409f84 <ferror@plt+0x70f4>
  40a234:	b	40a488 <ferror@plt+0x75f8>
  40a238:	stp	x11, x26, [sp, #80]
  40a23c:	mov	x20, x11
  40a240:	mov	x8, x26
  40a244:	str	x11, [sp, #40]
  40a248:	mov	x19, x26
  40a24c:	mov	x24, x11
  40a250:	b	40a2f0 <ferror@plt+0x7460>
  40a254:	mov	x8, x26
  40a258:	stp	x11, x26, [sp, #80]
  40a25c:	str	x11, [sp, #8]
  40a260:	mov	x26, x11
  40a264:	mov	x25, x8
  40a268:	ldr	x28, [x27, #48]
  40a26c:	sub	x8, x8, x25
  40a270:	cmp	x28, x8, asr #5
  40a274:	b.eq	40a4e4 <ferror@plt+0x7654>  // b.none
  40a278:	ldr	x9, [sp, #56]
  40a27c:	ldr	x8, [x27, #40]
  40a280:	sub	x9, x9, x26
  40a284:	cmp	x8, x9, asr #5
  40a288:	b.ne	40a2d8 <ferror@plt+0x7448>  // b.any
  40a28c:	ldr	x26, [sp, #64]
  40a290:	cbz	x21, 40a2d0 <ferror@plt+0x7440>
  40a294:	ldr	x8, [x27, #24]
  40a298:	cmp	x25, x8
  40a29c:	b.eq	40a2d0 <ferror@plt+0x7440>  // b.none
  40a2a0:	add	x8, x8, #0x20
  40a2a4:	sub	x9, x21, #0x1
  40a2a8:	ldp	q1, q0, [x25, #-32]
  40a2ac:	cmp	x8, x25
  40a2b0:	sub	x25, x25, #0x20
  40a2b4:	stp	q1, q0, [x20, #-32]!
  40a2b8:	b.eq	40a2c8 <ferror@plt+0x7438>  // b.none
  40a2bc:	mov	x10, x9
  40a2c0:	sub	x9, x9, #0x1
  40a2c4:	cbnz	x10, 40a2a8 <ferror@plt+0x7418>
  40a2c8:	str	x25, [x27, #8]
  40a2cc:	str	x25, [sp, #88]
  40a2d0:	ldr	x25, [sp, #48]
  40a2d4:	b	40a52c <ferror@plt+0x769c>
  40a2d8:	ldr	x25, [sp, #48]
  40a2dc:	b	40a528 <ferror@plt+0x7698>
  40a2e0:	mov	x26, x25
  40a2e4:	b	40a2ec <ferror@plt+0x745c>
  40a2e8:	mov	x21, #0xffffffffffffffff    	// #-1
  40a2ec:	ldr	x8, [sp, #64]
  40a2f0:	ldr	x25, [x27, #48]
  40a2f4:	sub	x8, x8, x19
  40a2f8:	asr	x28, x8, #5
  40a2fc:	cmp	x25, x28
  40a300:	b.ne	40a3ac <ferror@plt+0x751c>  // b.any
  40a304:	cmp	x20, x24
  40a308:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a30c:	b.eq	40a600 <ferror@plt+0x7770>  // b.none
  40a310:	ldr	x26, [sp, #64]
  40a314:	cbz	x21, 40a614 <ferror@plt+0x7784>
  40a318:	sub	x22, x20, #0x20
  40a31c:	sub	x8, x21, #0x1
  40a320:	ldr	x21, [sp, #72]
  40a324:	ldr	x20, [sp, #88]
  40a328:	str	x22, [x27]
  40a32c:	ldrb	w9, [x25, #1384]
  40a330:	mov	x19, x8
  40a334:	cmp	w9, #0x1
  40a338:	b.ne	40a36c <ferror@plt+0x74dc>  // b.any
  40a33c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a340:	ldr	x8, [x8, #1488]
  40a344:	cbz	x8, 40a35c <ferror@plt+0x74cc>
  40a348:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a34c:	mov	x0, x22
  40a350:	add	x1, x1, #0x5d0
  40a354:	bl	407298 <ferror@plt+0x4408>
  40a358:	cbz	w0, 40a37c <ferror@plt+0x74ec>
  40a35c:	ldp	q1, q0, [x22]
  40a360:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a364:	add	x8, x8, #0x5d0
  40a368:	stp	q1, q0, [x8]
  40a36c:	ldur	x1, [x29, #-80]
  40a370:	mov	x0, x22
  40a374:	mov	x2, x21
  40a378:	bl	408370 <ferror@plt+0x54e0>
  40a37c:	cmp	x24, x22
  40a380:	sub	x9, x22, #0x20
  40a384:	b.eq	40a394 <ferror@plt+0x7504>  // b.none
  40a388:	sub	x8, x19, #0x1
  40a38c:	mov	x22, x9
  40a390:	cbnz	x19, 40a328 <ferror@plt+0x7498>
  40a394:	ldr	x24, [sp]
  40a398:	ldr	x19, [sp, #16]
  40a39c:	ldr	x25, [sp, #48]
  40a3a0:	add	x8, x9, #0x20
  40a3a4:	str	x8, [sp, #80]
  40a3a8:	b	40a538 <ferror@plt+0x76a8>
  40a3ac:	ldr	x9, [sp, #56]
  40a3b0:	ldr	x10, [sp, #40]
  40a3b4:	ldr	x8, [x27, #40]
  40a3b8:	ldr	x20, [sp, #88]
  40a3bc:	sub	x9, x9, x10
  40a3c0:	cmp	x8, x9, asr #5
  40a3c4:	b.ne	40a460 <ferror@plt+0x75d0>  // b.any
  40a3c8:	ldr	x24, [sp]
  40a3cc:	cbz	x21, 40a464 <ferror@plt+0x75d4>
  40a3d0:	ldr	x19, [x27, #24]
  40a3d4:	cmp	x26, x19
  40a3d8:	b.eq	40a464 <ferror@plt+0x75d4>  // b.none
  40a3dc:	sub	x8, x21, #0x1
  40a3e0:	ldr	x21, [sp, #72]
  40a3e4:	sub	x22, x26, #0x20
  40a3e8:	adrp	x26, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a3ec:	str	x22, [x27, #8]
  40a3f0:	ldrb	w9, [x26, #1384]
  40a3f4:	mov	x20, x8
  40a3f8:	cmp	w9, #0x1
  40a3fc:	b.ne	40a430 <ferror@plt+0x75a0>  // b.any
  40a400:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a404:	ldr	x8, [x8, #1488]
  40a408:	cbz	x8, 40a420 <ferror@plt+0x7590>
  40a40c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a410:	mov	x0, x22
  40a414:	add	x1, x1, #0x5d0
  40a418:	bl	407298 <ferror@plt+0x4408>
  40a41c:	cbz	w0, 40a440 <ferror@plt+0x75b0>
  40a420:	ldp	q1, q0, [x22]
  40a424:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40a428:	add	x8, x8, #0x5d0
  40a42c:	stp	q1, q0, [x8]
  40a430:	ldur	x1, [x29, #-80]
  40a434:	mov	x0, x22
  40a438:	mov	x2, x21
  40a43c:	bl	408370 <ferror@plt+0x54e0>
  40a440:	cmp	x19, x22
  40a444:	sub	x9, x22, #0x20
  40a448:	b.eq	40a458 <ferror@plt+0x75c8>  // b.none
  40a44c:	sub	x8, x20, #0x1
  40a450:	mov	x22, x9
  40a454:	cbnz	x20, 40a3ec <ferror@plt+0x755c>
  40a458:	add	x20, x9, #0x20
  40a45c:	b	40a464 <ferror@plt+0x75d4>
  40a460:	ldr	x24, [sp]
  40a464:	mov	x28, x25
  40a468:	ldr	x19, [sp, #16]
  40a46c:	ldr	x25, [sp, #48]
  40a470:	ldr	x26, [sp, #64]
  40a474:	b	40a538 <ferror@plt+0x76a8>
  40a478:	cmp	x8, x9
  40a47c:	b.ne	40a488 <ferror@plt+0x75f8>  // b.any
  40a480:	ldr	x8, [x22, #48]
  40a484:	cbnz	x8, 409f84 <ferror@plt+0x70f4>
  40a488:	mov	x0, x23
  40a48c:	bl	402e40 <pthread_mutex_lock@plt>
  40a490:	ldr	x0, [x24]
  40a494:	mov	x1, x22
  40a498:	bl	40d400 <ferror@plt+0xa570>
  40a49c:	mov	w8, #0x1                   	// #1
  40a4a0:	mov	x0, x19
  40a4a4:	strb	w8, [x22, #84]
  40a4a8:	bl	402980 <pthread_cond_signal@plt>
  40a4ac:	mov	x0, x23
  40a4b0:	bl	402e50 <pthread_mutex_unlock@plt>
  40a4b4:	ldr	x22, [x27, #56]
  40a4b8:	b	409f84 <ferror@plt+0x70f4>
  40a4bc:	mov	x21, #0xffffffffffffffff    	// #-1
  40a4c0:	stp	x11, x26, [sp, #80]
  40a4c4:	mov	x25, x26
  40a4c8:	mov	x26, x11
  40a4cc:	ldr	x19, [sp, #16]
  40a4d0:	ldr	x8, [sp, #64]
  40a4d4:	ldr	x28, [x27, #48]
  40a4d8:	sub	x8, x8, x25
  40a4dc:	cmp	x28, x8, asr #5
  40a4e0:	b.ne	40a278 <ferror@plt+0x73e8>  // b.any
  40a4e4:	ldr	x8, [sp, #8]
  40a4e8:	ldr	x25, [sp, #48]
  40a4ec:	cmp	x26, x8
  40a4f0:	b.eq	40a528 <ferror@plt+0x7698>  // b.none
  40a4f4:	cbz	x21, 40a528 <ferror@plt+0x7698>
  40a4f8:	add	x8, x10, #0x20
  40a4fc:	sub	x9, x21, #0x1
  40a500:	ldp	q1, q0, [x26, #-32]
  40a504:	cmp	x8, x26
  40a508:	sub	x26, x26, #0x20
  40a50c:	stp	q1, q0, [x20, #-32]!
  40a510:	b.eq	40a520 <ferror@plt+0x7690>  // b.none
  40a514:	mov	x10, x9
  40a518:	sub	x9, x9, #0x1
  40a51c:	cbnz	x10, 40a500 <ferror@plt+0x7670>
  40a520:	str	x26, [x27]
  40a524:	str	x26, [sp, #80]
  40a528:	ldr	x26, [sp, #64]
  40a52c:	ldr	x8, [sp, #24]
  40a530:	str	x20, [x8]
  40a534:	ldr	x20, [sp, #88]
  40a538:	ldr	x8, [sp, #56]
  40a53c:	ldr	x9, [sp, #80]
  40a540:	ldrb	w12, [x27, #84]
  40a544:	sub	x10, x26, x20
  40a548:	sub	x10, x28, x10, asr #5
  40a54c:	sub	x8, x8, x9
  40a550:	ldr	x9, [x27, #40]
  40a554:	sub	x11, x9, x8, asr #5
  40a558:	stp	x11, x10, [x27, #40]
  40a55c:	cbnz	w12, 40a5b4 <ferror@plt+0x7724>
  40a560:	ldp	x8, x12, [x27, #8]
  40a564:	ldr	x13, [x27]
  40a568:	ldr	x9, [x27, #24]
  40a56c:	cmp	x13, x12
  40a570:	b.ne	40a57c <ferror@plt+0x76ec>  // b.any
  40a574:	cbz	x11, 40a580 <ferror@plt+0x76f0>
  40a578:	b	40a5b4 <ferror@plt+0x7724>
  40a57c:	cbz	x10, 40a588 <ferror@plt+0x76f8>
  40a580:	cmp	x8, x9
  40a584:	b.eq	40a5b4 <ferror@plt+0x7724>  // b.none
  40a588:	mov	x0, x23
  40a58c:	bl	402e40 <pthread_mutex_lock@plt>
  40a590:	ldr	x0, [x24]
  40a594:	mov	x1, x27
  40a598:	bl	40d400 <ferror@plt+0xa570>
  40a59c:	mov	w8, #0x1                   	// #1
  40a5a0:	mov	x0, x19
  40a5a4:	strb	w8, [x27, #84]
  40a5a8:	bl	402980 <pthread_cond_signal@plt>
  40a5ac:	mov	x0, x23
  40a5b0:	bl	402e50 <pthread_mutex_unlock@plt>
  40a5b4:	ldr	w8, [x27, #80]
  40a5b8:	cmp	w8, #0x2
  40a5bc:	b.cs	409f6c <ferror@plt+0x70dc>  // b.hs, b.nlast
  40a5c0:	ldp	x8, x9, [x27, #40]
  40a5c4:	cmn	x8, x9
  40a5c8:	b.ne	409f8c <ferror@plt+0x70fc>  // b.any
  40a5cc:	ldr	x22, [x27, #56]
  40a5d0:	mov	x0, x23
  40a5d4:	bl	402e40 <pthread_mutex_lock@plt>
  40a5d8:	ldr	x0, [x24]
  40a5dc:	mov	x1, x22
  40a5e0:	bl	40d400 <ferror@plt+0xa570>
  40a5e4:	mov	w8, #0x1                   	// #1
  40a5e8:	mov	x0, x19
  40a5ec:	strb	w8, [x22, #84]
  40a5f0:	bl	402980 <pthread_cond_signal@plt>
  40a5f4:	mov	x0, x23
  40a5f8:	bl	402e50 <pthread_mutex_unlock@plt>
  40a5fc:	b	409f8c <ferror@plt+0x70fc>
  40a600:	ldr	x24, [sp]
  40a604:	ldr	x19, [sp, #16]
  40a608:	ldr	x25, [sp, #48]
  40a60c:	ldr	x26, [sp, #64]
  40a610:	b	40a534 <ferror@plt+0x76a4>
  40a614:	ldr	x24, [sp]
  40a618:	ldr	x19, [sp, #16]
  40a61c:	ldr	x25, [sp, #48]
  40a620:	b	40a534 <ferror@plt+0x76a4>
  40a624:	ldr	x26, [sp, #8]
  40a628:	neg	x21, x21
  40a62c:	b	40a4cc <ferror@plt+0x763c>
  40a630:	ldr	x25, [sp, #40]
  40a634:	neg	x21, x21
  40a638:	b	40a4cc <ferror@plt+0x763c>
  40a63c:	mov	x0, x22
  40a640:	bl	402e50 <pthread_mutex_unlock@plt>
  40a644:	mov	x0, x23
  40a648:	bl	402e40 <pthread_mutex_lock@plt>
  40a64c:	ldr	x0, [x24]
  40a650:	mov	x1, x27
  40a654:	bl	40d400 <ferror@plt+0xa570>
  40a658:	mov	w8, #0x1                   	// #1
  40a65c:	mov	x0, x19
  40a660:	strb	w8, [x27, #84]
  40a664:	bl	402980 <pthread_cond_signal@plt>
  40a668:	mov	x0, x23
  40a66c:	bl	402e50 <pthread_mutex_unlock@plt>
  40a670:	ldp	x20, x19, [sp, #256]
  40a674:	ldp	x22, x21, [sp, #240]
  40a678:	ldp	x24, x23, [sp, #224]
  40a67c:	ldp	x26, x25, [sp, #208]
  40a680:	ldp	x28, x27, [sp, #192]
  40a684:	ldp	x29, x30, [sp, #176]
  40a688:	add	sp, sp, #0x110
  40a68c:	ret
  40a690:	ldr	x3, [x25, #72]
  40a694:	ldr	x2, [sp, #32]
  40a698:	ldr	x4, [sp]
  40a69c:	ldur	x5, [x29, #-80]
  40a6a0:	sub	x1, x22, x19
  40a6a4:	sub	x0, x23, x24, lsl #5
  40a6a8:	mov	x6, x21
  40a6ac:	bl	409e48 <ferror@plt+0x6fb8>
  40a6b0:	ldur	x0, [x29, #-16]
  40a6b4:	mov	x1, xzr
  40a6b8:	bl	402ad0 <pthread_join@plt>
  40a6bc:	b	40a670 <ferror@plt+0x77e0>
  40a6c0:	ldr	w8, [x0, #80]
  40a6c4:	ldr	w9, [x1, #80]
  40a6c8:	cmp	w8, w9
  40a6cc:	b.ne	40a6e4 <ferror@plt+0x7854>  // b.any
  40a6d0:	ldp	x8, x9, [x0, #40]
  40a6d4:	ldp	x10, x11, [x1, #40]
  40a6d8:	add	x8, x9, x8
  40a6dc:	add	x9, x11, x10
  40a6e0:	cmp	x8, x9
  40a6e4:	cset	w0, cc  // cc = lo, ul, last
  40a6e8:	ret
  40a6ec:	stp	x29, x30, [sp, #-96]!
  40a6f0:	str	x27, [sp, #16]
  40a6f4:	stp	x26, x25, [sp, #32]
  40a6f8:	stp	x22, x21, [sp, #64]
  40a6fc:	stp	x20, x19, [sp, #80]
  40a700:	mov	x19, x4
  40a704:	mov	x21, x3
  40a708:	mov	x22, x2
  40a70c:	mov	x20, x1
  40a710:	neg	x25, x4
  40a714:	mov	w26, #0x30                  	// #48
  40a718:	mov	w27, #0x28                  	// #40
  40a71c:	stp	x24, x23, [sp, #48]
  40a720:	mov	x29, sp
  40a724:	tst	w5, #0x1
  40a728:	csel	x8, x27, x26, ne  // ne = any
  40a72c:	ldr	x8, [x0, x8]
  40a730:	add	x9, x0, #0x10
  40a734:	add	x10, x0, #0x18
  40a738:	add	x23, x22, x25, lsl #5
  40a73c:	csel	x9, x9, x10, ne  // ne = any
  40a740:	lsr	x10, x8, #1
  40a744:	sub	x8, x8, x10
  40a748:	sub	x22, x23, x10, lsl #5
  40a74c:	stp	x9, x10, [x20, #32]
  40a750:	stp	x23, x22, [x20, #16]
  40a754:	stp	x23, x22, [x20]
  40a758:	stp	x8, x0, [x20, #48]
  40a75c:	ldr	w8, [x0, #80]
  40a760:	add	x0, x20, #0x58
  40a764:	mov	x1, xzr
  40a768:	add	x24, x20, #0x88
  40a76c:	add	w8, w8, #0x1
  40a770:	strb	wzr, [x20, #84]
  40a774:	str	w8, [x20, #80]
  40a778:	bl	402a60 <pthread_mutex_init@plt>
  40a77c:	cmp	x21, #0x2
  40a780:	b.cc	40a7c0 <ferror@plt+0x7930>  // b.lo, b.ul, b.last
  40a784:	lsr	x3, x21, #1
  40a788:	mov	w5, #0x1                   	// #1
  40a78c:	mov	x0, x20
  40a790:	mov	x1, x24
  40a794:	mov	x2, x23
  40a798:	mov	x4, x19
  40a79c:	sub	x21, x21, x3
  40a7a0:	str	x24, [x20, #64]
  40a7a4:	bl	40a6ec <ferror@plt+0x785c>
  40a7a8:	mov	x8, x0
  40a7ac:	mov	w5, wzr
  40a7b0:	str	x0, [x20, #72]
  40a7b4:	mov	x0, x20
  40a7b8:	mov	x20, x8
  40a7bc:	b	40a724 <ferror@plt+0x7894>
  40a7c0:	stp	xzr, xzr, [x20, #64]
  40a7c4:	mov	x0, x24
  40a7c8:	ldp	x20, x19, [sp, #80]
  40a7cc:	ldp	x22, x21, [sp, #64]
  40a7d0:	ldp	x24, x23, [sp, #48]
  40a7d4:	ldp	x26, x25, [sp, #32]
  40a7d8:	ldr	x27, [sp, #16]
  40a7dc:	ldp	x29, x30, [sp], #96
  40a7e0:	ret
  40a7e4:	stp	x29, x30, [sp, #-16]!
  40a7e8:	ldp	x8, x1, [x0]
  40a7ec:	ldp	x2, x3, [x0, #16]
  40a7f0:	ldp	x4, x5, [x0, #32]
  40a7f4:	ldr	x6, [x0, #48]
  40a7f8:	mov	x0, x8
  40a7fc:	mov	x29, sp
  40a800:	bl	409e48 <ferror@plt+0x6fb8>
  40a804:	mov	x0, xzr
  40a808:	ldp	x29, x30, [sp], #16
  40a80c:	ret
  40a810:	stp	x29, x30, [sp, #-80]!
  40a814:	stp	x24, x23, [sp, #32]
  40a818:	stp	x22, x21, [sp, #48]
  40a81c:	mov	w23, w3
  40a820:	mov	x21, x2
  40a824:	cmp	x1, #0x2
  40a828:	mov	x22, x0
  40a82c:	str	x25, [sp, #16]
  40a830:	stp	x20, x19, [sp, #64]
  40a834:	mov	x29, sp
  40a838:	b.ne	40a88c <ferror@plt+0x79fc>  // b.any
  40a83c:	sub	x19, x22, #0x20
  40a840:	sub	x20, x22, #0x40
  40a844:	mov	x0, x19
  40a848:	mov	x1, x20
  40a84c:	bl	407298 <ferror@plt+0x4408>
  40a850:	tbz	w23, #0, 40a8dc <ferror@plt+0x7a4c>
  40a854:	cmp	w0, #0x0
  40a858:	mov	x8, #0xffffffffffffffc0    	// #-64
  40a85c:	mov	x9, #0xffffffffffffffe0    	// #-32
  40a860:	csel	x8, x9, x8, gt
  40a864:	cset	w9, gt
  40a868:	mvn	x9, x9
  40a86c:	add	x8, x22, x8
  40a870:	add	x9, x22, x9, lsl #5
  40a874:	ldp	q3, q0, [x8]
  40a878:	ldp	q2, q1, [x9]
  40a87c:	stur	q3, [x21, #-64]
  40a880:	stp	q0, q2, [x21, #-48]
  40a884:	stur	q1, [x21, #-16]
  40a888:	b	40a994 <ferror@plt+0x7b04>
  40a88c:	lsr	x19, x1, #1
  40a890:	tst	w23, #0x1
  40a894:	sub	x20, x1, x19
  40a898:	csneg	x8, xzr, x19, eq  // eq = none
  40a89c:	mov	x24, x1
  40a8a0:	sub	x0, x22, x19, lsl #5
  40a8a4:	add	x2, x21, x8, lsl #5
  40a8a8:	and	w3, w23, #0x1
  40a8ac:	mov	x1, x20
  40a8b0:	neg	x25, x19
  40a8b4:	bl	40a810 <ferror@plt+0x7980>
  40a8b8:	cmp	x24, #0x4
  40a8bc:	b.cc	40a900 <ferror@plt+0x7a70>  // b.lo, b.ul, b.last
  40a8c0:	mvn	w8, w23
  40a8c4:	and	w3, w8, #0x1
  40a8c8:	mov	x0, x22
  40a8cc:	mov	x1, x19
  40a8d0:	mov	x2, x21
  40a8d4:	bl	40a810 <ferror@plt+0x7980>
  40a8d8:	b	40a90c <ferror@plt+0x7a7c>
  40a8dc:	cmp	w0, #0x1
  40a8e0:	b.lt	40a994 <ferror@plt+0x7b04>  // b.tstop
  40a8e4:	ldp	q1, q0, [x19]
  40a8e8:	ldp	q2, q3, [x20]
  40a8ec:	stp	q1, q0, [x21, #-32]
  40a8f0:	ldp	q1, q0, [x21, #-32]
  40a8f4:	stp	q2, q3, [x19]
  40a8f8:	stp	q1, q0, [x20]
  40a8fc:	b	40a994 <ferror@plt+0x7b04>
  40a900:	tbnz	w23, #0, 40a90c <ferror@plt+0x7a7c>
  40a904:	ldp	q1, q0, [x22, #-32]
  40a908:	stp	q1, q0, [x21, #-32]
  40a90c:	tst	w23, #0x1
  40a910:	csel	x23, x21, x22, ne  // ne = any
  40a914:	csel	x24, x22, x21, ne  // ne = any
  40a918:	add	x25, x23, x25, lsl #5
  40a91c:	sub	x21, x24, #0x20
  40a920:	sub	x22, x25, #0x20
  40a924:	mov	x0, x21
  40a928:	mov	x1, x22
  40a92c:	bl	407298 <ferror@plt+0x4408>
  40a930:	cmp	w0, #0x0
  40a934:	sub	x23, x23, #0x20
  40a938:	b.le	40a954 <ferror@plt+0x7ac4>
  40a93c:	ldp	q1, q0, [x22]
  40a940:	subs	x20, x20, #0x1
  40a944:	mov	x25, x22
  40a948:	stp	q1, q0, [x23]
  40a94c:	b.ne	40a920 <ferror@plt+0x7a90>  // b.any
  40a950:	b	40a96c <ferror@plt+0x7adc>
  40a954:	ldp	q1, q0, [x21]
  40a958:	subs	x19, x19, #0x1
  40a95c:	mov	x24, x21
  40a960:	stp	q1, q0, [x23]
  40a964:	b.ne	40a91c <ferror@plt+0x7a8c>  // b.any
  40a968:	b	40a994 <ferror@plt+0x7b04>
  40a96c:	mov	x8, xzr
  40a970:	mov	x9, #0xffffffffffffffe0    	// #-32
  40a974:	add	x10, x24, x9
  40a978:	ldp	q0, q1, [x10]
  40a97c:	add	x8, x8, #0x1
  40a980:	add	x10, x23, x9
  40a984:	cmp	x19, x8
  40a988:	sub	x9, x9, #0x20
  40a98c:	stp	q0, q1, [x10]
  40a990:	b.ne	40a974 <ferror@plt+0x7ae4>  // b.any
  40a994:	ldp	x20, x19, [sp, #64]
  40a998:	ldp	x22, x21, [sp, #48]
  40a99c:	ldp	x24, x23, [sp, #32]
  40a9a0:	ldr	x25, [sp, #16]
  40a9a4:	ldp	x29, x30, [sp], #80
  40a9a8:	ret
  40a9ac:	mov	w0, #0x1                   	// #1
  40a9b0:	b	402fac <ferror@plt+0x11c>
  40a9b4:	stp	x29, x30, [sp, #-96]!
  40a9b8:	stp	x28, x27, [sp, #16]
  40a9bc:	stp	x26, x25, [sp, #32]
  40a9c0:	stp	x24, x23, [sp, #48]
  40a9c4:	stp	x22, x21, [sp, #64]
  40a9c8:	stp	x20, x19, [sp, #80]
  40a9cc:	mov	x29, sp
  40a9d0:	mov	x22, x3
  40a9d4:	mov	x23, x2
  40a9d8:	mov	x25, x1
  40a9dc:	mov	x19, x0
  40a9e0:	bl	4027c0 <strlen@plt>
  40a9e4:	ldr	x24, [x25]
  40a9e8:	cbz	x24, 40aa6c <ferror@plt+0x7bdc>
  40a9ec:	mov	x20, x0
  40a9f0:	mov	w26, wzr
  40a9f4:	mov	x21, xzr
  40a9f8:	cbz	x23, 40aa78 <ferror@plt+0x7be8>
  40a9fc:	add	x28, x25, #0x8
  40aa00:	mov	x27, #0xffffffffffffffff    	// #-1
  40aa04:	mov	x25, x23
  40aa08:	b	40aa38 <ferror@plt+0x7ba8>
  40aa0c:	madd	x0, x27, x22, x23
  40aa10:	mov	x1, x25
  40aa14:	mov	x2, x22
  40aa18:	bl	402a30 <bcmp@plt>
  40aa1c:	cmp	w0, #0x0
  40aa20:	cset	w8, ne  // ne = any
  40aa24:	orr	w26, w26, w8
  40aa28:	ldr	x24, [x28, x21, lsl #3]
  40aa2c:	add	x21, x21, #0x1
  40aa30:	add	x25, x25, x22
  40aa34:	cbz	x24, 40aac8 <ferror@plt+0x7c38>
  40aa38:	mov	x0, x24
  40aa3c:	mov	x1, x19
  40aa40:	mov	x2, x20
  40aa44:	bl	402990 <strncmp@plt>
  40aa48:	cbnz	w0, 40aa28 <ferror@plt+0x7b98>
  40aa4c:	mov	x0, x24
  40aa50:	bl	4027c0 <strlen@plt>
  40aa54:	cmp	x0, x20
  40aa58:	b.eq	40aa70 <ferror@plt+0x7be0>  // b.none
  40aa5c:	cmn	x27, #0x1
  40aa60:	b.ne	40aa0c <ferror@plt+0x7b7c>  // b.any
  40aa64:	mov	x27, x21
  40aa68:	b	40aa28 <ferror@plt+0x7b98>
  40aa6c:	mov	x21, #0xffffffffffffffff    	// #-1
  40aa70:	mov	x0, x21
  40aa74:	b	40aad4 <ferror@plt+0x7c44>
  40aa78:	add	x22, x25, #0x8
  40aa7c:	mov	x27, #0xffffffffffffffff    	// #-1
  40aa80:	b	40aaa0 <ferror@plt+0x7c10>
  40aa84:	cmn	x27, #0x1
  40aa88:	cset	w8, ne  // ne = any
  40aa8c:	csel	x27, x21, x27, eq  // eq = none
  40aa90:	orr	w26, w26, w8
  40aa94:	ldr	x24, [x22, x21, lsl #3]
  40aa98:	add	x21, x21, #0x1
  40aa9c:	cbz	x24, 40aac8 <ferror@plt+0x7c38>
  40aaa0:	mov	x0, x24
  40aaa4:	mov	x1, x19
  40aaa8:	mov	x2, x20
  40aaac:	bl	402990 <strncmp@plt>
  40aab0:	cbnz	w0, 40aa94 <ferror@plt+0x7c04>
  40aab4:	mov	x0, x24
  40aab8:	bl	4027c0 <strlen@plt>
  40aabc:	cmp	x0, x20
  40aac0:	b.ne	40aa84 <ferror@plt+0x7bf4>  // b.any
  40aac4:	b	40aa70 <ferror@plt+0x7be0>
  40aac8:	tst	w26, #0x1
  40aacc:	mov	x8, #0xfffffffffffffffe    	// #-2
  40aad0:	csel	x0, x8, x27, ne  // ne = any
  40aad4:	ldp	x20, x19, [sp, #80]
  40aad8:	ldp	x22, x21, [sp, #64]
  40aadc:	ldp	x24, x23, [sp, #48]
  40aae0:	ldp	x26, x25, [sp, #32]
  40aae4:	ldp	x28, x27, [sp, #16]
  40aae8:	ldp	x29, x30, [sp], #96
  40aaec:	ret
  40aaf0:	stp	x29, x30, [sp, #-48]!
  40aaf4:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40aaf8:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40aafc:	add	x8, x8, #0xac6
  40ab00:	add	x9, x9, #0xaab
  40ab04:	cmn	x2, #0x1
  40ab08:	stp	x20, x19, [sp, #32]
  40ab0c:	mov	x19, x1
  40ab10:	mov	x20, x0
  40ab14:	csel	x1, x9, x8, eq  // eq = none
  40ab18:	mov	w2, #0x5                   	// #5
  40ab1c:	mov	x0, xzr
  40ab20:	str	x21, [sp, #16]
  40ab24:	mov	x29, sp
  40ab28:	bl	402d70 <dcgettext@plt>
  40ab2c:	mov	x21, x0
  40ab30:	mov	w1, #0x8                   	// #8
  40ab34:	mov	w0, wzr
  40ab38:	mov	x2, x19
  40ab3c:	bl	40f590 <ferror@plt+0xc700>
  40ab40:	mov	x19, x0
  40ab44:	mov	w0, #0x1                   	// #1
  40ab48:	mov	x1, x20
  40ab4c:	bl	40fa7c <ferror@plt+0xcbec>
  40ab50:	mov	x2, x21
  40ab54:	mov	x3, x19
  40ab58:	ldp	x20, x19, [sp, #32]
  40ab5c:	ldr	x21, [sp, #16]
  40ab60:	mov	x4, x0
  40ab64:	mov	w0, wzr
  40ab68:	mov	w1, wzr
  40ab6c:	ldp	x29, x30, [sp], #48
  40ab70:	b	4027f0 <error@plt>
  40ab74:	stp	x29, x30, [sp, #-96]!
  40ab78:	stp	x20, x19, [sp, #80]
  40ab7c:	mov	x20, x1
  40ab80:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ab84:	stp	x22, x21, [sp, #64]
  40ab88:	mov	x19, x2
  40ab8c:	mov	x21, x0
  40ab90:	add	x1, x1, #0xae3
  40ab94:	mov	w2, #0x5                   	// #5
  40ab98:	mov	x0, xzr
  40ab9c:	stp	x28, x27, [sp, #16]
  40aba0:	stp	x26, x25, [sp, #32]
  40aba4:	stp	x24, x23, [sp, #48]
  40aba8:	mov	x29, sp
  40abac:	bl	402d70 <dcgettext@plt>
  40abb0:	adrp	x26, 427000 <_obstack_memory_used@@Base+0x145ec>
  40abb4:	ldr	x1, [x26, #1320]
  40abb8:	bl	402d80 <fputs_unlocked@plt>
  40abbc:	ldr	x24, [x21]
  40abc0:	cbz	x24, 40ac68 <ferror@plt+0x7dd8>
  40abc4:	add	x28, x21, #0x8
  40abc8:	adrp	x21, 415000 <_obstack_memory_used@@Base+0x25ec>
  40abcc:	mov	x27, xzr
  40abd0:	mov	x23, xzr
  40abd4:	mov	x22, xzr
  40abd8:	add	x21, x21, #0xaf8
  40abdc:	b	40ac18 <ferror@plt+0x7d88>
  40abe0:	mov	x25, xzr
  40abe4:	ldr	x23, [x26, #1320]
  40abe8:	mov	x0, x24
  40abec:	bl	40fa8c <ferror@plt+0xcbfc>
  40abf0:	mov	x3, x0
  40abf4:	mov	w1, #0x1                   	// #1
  40abf8:	mov	x0, x23
  40abfc:	mov	x2, x21
  40ac00:	bl	402b90 <__fprintf_chk@plt>
  40ac04:	add	x23, x20, x25
  40ac08:	ldr	x24, [x28, x22, lsl #3]
  40ac0c:	add	x22, x22, #0x1
  40ac10:	add	x27, x27, x19
  40ac14:	cbz	x24, 40ac68 <ferror@plt+0x7dd8>
  40ac18:	cbz	x22, 40abe0 <ferror@plt+0x7d50>
  40ac1c:	add	x1, x20, x27
  40ac20:	mov	x0, x23
  40ac24:	mov	x2, x19
  40ac28:	bl	402a30 <bcmp@plt>
  40ac2c:	mov	x25, x27
  40ac30:	cbnz	w0, 40abe4 <ferror@plt+0x7d54>
  40ac34:	ldr	x25, [x26, #1320]
  40ac38:	mov	x0, x24
  40ac3c:	bl	40fa8c <ferror@plt+0xcbfc>
  40ac40:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ac44:	mov	x3, x0
  40ac48:	mov	w1, #0x1                   	// #1
  40ac4c:	mov	x0, x25
  40ac50:	add	x2, x2, #0xb00
  40ac54:	bl	402b90 <__fprintf_chk@plt>
  40ac58:	ldr	x24, [x28, x22, lsl #3]
  40ac5c:	add	x22, x22, #0x1
  40ac60:	add	x27, x27, x19
  40ac64:	cbnz	x24, 40ac18 <ferror@plt+0x7d88>
  40ac68:	ldr	x0, [x26, #1320]
  40ac6c:	ldp	x8, x9, [x0, #40]
  40ac70:	cmp	x8, x9
  40ac74:	b.cs	40aca4 <ferror@plt+0x7e14>  // b.hs, b.nlast
  40ac78:	add	x9, x8, #0x1
  40ac7c:	mov	w10, #0xa                   	// #10
  40ac80:	str	x9, [x0, #40]
  40ac84:	strb	w10, [x8]
  40ac88:	ldp	x20, x19, [sp, #80]
  40ac8c:	ldp	x22, x21, [sp, #64]
  40ac90:	ldp	x24, x23, [sp, #48]
  40ac94:	ldp	x26, x25, [sp, #32]
  40ac98:	ldp	x28, x27, [sp, #16]
  40ac9c:	ldp	x29, x30, [sp], #96
  40aca0:	ret
  40aca4:	ldp	x20, x19, [sp, #80]
  40aca8:	ldp	x22, x21, [sp, #64]
  40acac:	ldp	x24, x23, [sp, #48]
  40acb0:	ldp	x26, x25, [sp, #32]
  40acb4:	ldp	x28, x27, [sp, #16]
  40acb8:	mov	w1, #0xa                   	// #10
  40acbc:	ldp	x29, x30, [sp], #96
  40acc0:	b	402b30 <__overflow@plt>
  40acc4:	stp	x29, x30, [sp, #-80]!
  40acc8:	stp	x24, x23, [sp, #32]
  40accc:	stp	x22, x21, [sp, #48]
  40acd0:	mov	x21, x3
  40acd4:	mov	x22, x2
  40acd8:	mov	x24, x1
  40acdc:	mov	x23, x0
  40ace0:	mov	x0, x1
  40ace4:	mov	x1, x2
  40ace8:	mov	x2, x3
  40acec:	mov	x3, x4
  40acf0:	str	x25, [sp, #16]
  40acf4:	stp	x20, x19, [sp, #64]
  40acf8:	mov	x29, sp
  40acfc:	mov	x19, x5
  40ad00:	mov	x20, x4
  40ad04:	bl	40a9b4 <ferror@plt+0x7b24>
  40ad08:	tbz	x0, #63, 40ad84 <ferror@plt+0x7ef4>
  40ad0c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ad10:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ad14:	add	x8, x8, #0xac6
  40ad18:	add	x9, x9, #0xaab
  40ad1c:	cmn	x0, #0x1
  40ad20:	csel	x1, x9, x8, eq  // eq = none
  40ad24:	mov	w2, #0x5                   	// #5
  40ad28:	mov	x0, xzr
  40ad2c:	bl	402d70 <dcgettext@plt>
  40ad30:	mov	x25, x0
  40ad34:	mov	w1, #0x8                   	// #8
  40ad38:	mov	w0, wzr
  40ad3c:	mov	x2, x24
  40ad40:	bl	40f590 <ferror@plt+0xc700>
  40ad44:	mov	x24, x0
  40ad48:	mov	w0, #0x1                   	// #1
  40ad4c:	mov	x1, x23
  40ad50:	bl	40fa7c <ferror@plt+0xcbec>
  40ad54:	mov	x4, x0
  40ad58:	mov	w0, wzr
  40ad5c:	mov	w1, wzr
  40ad60:	mov	x2, x25
  40ad64:	mov	x3, x24
  40ad68:	bl	4027f0 <error@plt>
  40ad6c:	mov	x0, x22
  40ad70:	mov	x1, x21
  40ad74:	mov	x2, x20
  40ad78:	bl	40ab74 <ferror@plt+0x7ce4>
  40ad7c:	blr	x19
  40ad80:	mov	x0, #0xffffffffffffffff    	// #-1
  40ad84:	ldp	x20, x19, [sp, #64]
  40ad88:	ldp	x22, x21, [sp, #48]
  40ad8c:	ldp	x24, x23, [sp, #32]
  40ad90:	ldr	x25, [sp, #16]
  40ad94:	ldp	x29, x30, [sp], #80
  40ad98:	ret
  40ad9c:	stp	x29, x30, [sp, #-64]!
  40ada0:	stp	x22, x21, [sp, #32]
  40ada4:	stp	x20, x19, [sp, #48]
  40ada8:	ldr	x20, [x1]
  40adac:	str	x23, [sp, #16]
  40adb0:	mov	x29, sp
  40adb4:	cbz	x20, 40ae04 <ferror@plt+0x7f74>
  40adb8:	mov	x22, x2
  40adbc:	mov	x23, x1
  40adc0:	mov	x1, x2
  40adc4:	mov	x2, x3
  40adc8:	mov	x19, x3
  40adcc:	mov	x21, x0
  40add0:	bl	402a30 <bcmp@plt>
  40add4:	cbz	w0, 40ae04 <ferror@plt+0x7f74>
  40add8:	add	x22, x22, x19
  40addc:	add	x23, x23, #0x8
  40ade0:	ldr	x20, [x23]
  40ade4:	cbz	x20, 40ae04 <ferror@plt+0x7f74>
  40ade8:	mov	x0, x21
  40adec:	mov	x1, x22
  40adf0:	mov	x2, x19
  40adf4:	bl	402a30 <bcmp@plt>
  40adf8:	add	x22, x22, x19
  40adfc:	add	x23, x23, #0x8
  40ae00:	cbnz	w0, 40ade0 <ferror@plt+0x7f50>
  40ae04:	mov	x0, x20
  40ae08:	ldp	x20, x19, [sp, #48]
  40ae0c:	ldp	x22, x21, [sp, #32]
  40ae10:	ldr	x23, [sp, #16]
  40ae14:	ldp	x29, x30, [sp], #64
  40ae18:	ret
  40ae1c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40ae20:	str	x0, [x8, #2968]
  40ae24:	ret
  40ae28:	and	w8, w0, #0x1
  40ae2c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40ae30:	strb	w8, [x9, #2960]
  40ae34:	ret
  40ae38:	stp	x29, x30, [sp, #-48]!
  40ae3c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40ae40:	ldr	x0, [x8, #1344]
  40ae44:	str	x21, [sp, #16]
  40ae48:	stp	x20, x19, [sp, #32]
  40ae4c:	mov	x29, sp
  40ae50:	bl	412c2c <_obstack_memory_used@@Base+0x218>
  40ae54:	cbz	w0, 40ae74 <ferror@plt+0x7fe4>
  40ae58:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40ae5c:	ldrb	w8, [x8, #2960]
  40ae60:	cbz	w8, 40ae94 <ferror@plt+0x8004>
  40ae64:	bl	402e00 <__errno_location@plt>
  40ae68:	ldr	w8, [x0]
  40ae6c:	cmp	w8, #0x20
  40ae70:	b.ne	40ae94 <ferror@plt+0x8004>  // b.any
  40ae74:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40ae78:	ldr	x0, [x8, #1320]
  40ae7c:	bl	412c2c <_obstack_memory_used@@Base+0x218>
  40ae80:	cbnz	w0, 40af00 <ferror@plt+0x8070>
  40ae84:	ldp	x20, x19, [sp, #32]
  40ae88:	ldr	x21, [sp, #16]
  40ae8c:	ldp	x29, x30, [sp], #48
  40ae90:	ret
  40ae94:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ae98:	add	x1, x1, #0xb05
  40ae9c:	mov	w2, #0x5                   	// #5
  40aea0:	mov	x0, xzr
  40aea4:	bl	402d70 <dcgettext@plt>
  40aea8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40aeac:	ldr	x21, [x8, #2968]
  40aeb0:	mov	x19, x0
  40aeb4:	bl	402e00 <__errno_location@plt>
  40aeb8:	ldr	w20, [x0]
  40aebc:	cbnz	x21, 40aedc <ferror@plt+0x804c>
  40aec0:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40aec4:	add	x2, x2, #0xb02
  40aec8:	mov	w0, wzr
  40aecc:	mov	w1, w20
  40aed0:	mov	x3, x19
  40aed4:	bl	4027f0 <error@plt>
  40aed8:	b	40af00 <ferror@plt+0x8070>
  40aedc:	mov	x0, x21
  40aee0:	bl	40f7a4 <ferror@plt+0xc914>
  40aee4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40aee8:	mov	x3, x0
  40aeec:	add	x2, x2, #0xa8f
  40aef0:	mov	w0, wzr
  40aef4:	mov	w1, w20
  40aef8:	mov	x4, x19
  40aefc:	bl	4027f0 <error@plt>
  40af00:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40af04:	ldr	w0, [x8, #1208]
  40af08:	bl	402790 <_exit@plt>
  40af0c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40af10:	ldr	q0, [x8, #2848]
  40af14:	str	xzr, [x0, #16]
  40af18:	str	wzr, [x0, #24]
  40af1c:	str	q0, [x0]
  40af20:	ret
  40af24:	ldr	w8, [x0]
  40af28:	str	w8, [x1]
  40af2c:	ldr	w8, [x0, #4]
  40af30:	str	w8, [x1, #4]
  40af34:	ldr	w8, [x0, #8]
  40af38:	str	w8, [x1, #8]
  40af3c:	ldr	w8, [x0, #12]
  40af40:	mov	x0, x1
  40af44:	str	w8, [x1, #12]
  40af48:	ret
  40af4c:	stp	x29, x30, [sp, #-48]!
  40af50:	stp	x22, x21, [sp, #16]
  40af54:	stp	x20, x19, [sp, #32]
  40af58:	ldr	w8, [x0, #24]
  40af5c:	ldr	w11, [x0, #16]
  40af60:	mov	w9, #0x20                  	// #32
  40af64:	mov	w10, #0x10                  	// #16
  40af68:	cmp	w8, #0x38
  40af6c:	mov	x19, x1
  40af70:	mov	x20, x0
  40af74:	csel	x10, x10, x9, cc  // cc = lo, ul, last
  40af78:	adds	w9, w11, w8
  40af7c:	mov	x29, sp
  40af80:	str	w9, [x0, #16]
  40af84:	b.cc	40af94 <ferror@plt+0x8104>  // b.lo, b.ul, b.last
  40af88:	ldr	w11, [x20, #20]
  40af8c:	add	w11, w11, #0x1
  40af90:	str	w11, [x20, #20]
  40af94:	lsl	x22, x10, #2
  40af98:	lsl	w11, w9, #3
  40af9c:	add	x21, x20, #0x1c
  40afa0:	sub	x10, x22, #0x8
  40afa4:	str	w11, [x21, x10]
  40afa8:	ldr	w11, [x20, #20]
  40afac:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40afb0:	add	x12, x22, x21
  40afb4:	add	x0, x21, x8
  40afb8:	extr	w9, w11, w9, #29
  40afbc:	sub	x2, x10, x8
  40afc0:	add	x1, x1, #0xb30
  40afc4:	stur	w9, [x12, #-4]
  40afc8:	bl	402760 <memcpy@plt>
  40afcc:	mov	x0, x21
  40afd0:	mov	x1, x22
  40afd4:	mov	x2, x20
  40afd8:	bl	40b010 <ferror@plt+0x8180>
  40afdc:	ldr	w8, [x20]
  40afe0:	mov	x0, x19
  40afe4:	str	w8, [x19]
  40afe8:	ldr	w8, [x20, #4]
  40afec:	str	w8, [x19, #4]
  40aff0:	ldr	w8, [x20, #8]
  40aff4:	str	w8, [x19, #8]
  40aff8:	ldr	w8, [x20, #12]
  40affc:	str	w8, [x19, #12]
  40b000:	ldp	x20, x19, [sp, #32]
  40b004:	ldp	x22, x21, [sp, #16]
  40b008:	ldp	x29, x30, [sp], #48
  40b00c:	ret
  40b010:	stp	x29, x30, [sp, #-96]!
  40b014:	stp	x28, x27, [sp, #16]
  40b018:	stp	x26, x25, [sp, #32]
  40b01c:	stp	x24, x23, [sp, #48]
  40b020:	stp	x22, x21, [sp, #64]
  40b024:	stp	x20, x19, [sp, #80]
  40b028:	ldp	w10, w13, [x2, #16]
  40b02c:	ldp	w8, w9, [x2]
  40b030:	and	x12, x1, #0xfffffffffffffffc
  40b034:	lsr	x14, x1, #32
  40b038:	adds	w10, w10, w1
  40b03c:	str	w10, [x2, #16]
  40b040:	ldp	w11, w10, [x2, #8]
  40b044:	add	x12, x0, x12
  40b048:	cinc	w14, w14, cs  // cs = hs, nlast
  40b04c:	add	w13, w13, w14
  40b050:	cmp	x12, x0
  40b054:	str	w13, [x2, #20]
  40b058:	b.ls	40ba10 <ferror@plt+0x8b80>  // b.plast
  40b05c:	mov	w22, #0xd391                	// #54161
  40b060:	movk	w22, #0xeb86, lsl #16
  40b064:	ldp	w29, w25, [x0]
  40b068:	bic	w4, w10, w9
  40b06c:	and	w5, w11, w9
  40b070:	orr	w4, w5, w4
  40b074:	add	w4, w8, w4
  40b078:	mov	w19, #0xa478                	// #42104
  40b07c:	add	w4, w4, w29
  40b080:	movk	w19, #0xd76a, lsl #16
  40b084:	add	w4, w4, w19
  40b088:	ror	w4, w4, #25
  40b08c:	add	w4, w4, w9
  40b090:	bic	w19, w11, w4
  40b094:	and	w20, w9, w4
  40b098:	add	w5, w10, w25
  40b09c:	orr	w19, w20, w19
  40b0a0:	add	w5, w5, w19
  40b0a4:	mov	w19, #0xb756                	// #46934
  40b0a8:	movk	w19, #0xe8c7, lsl #16
  40b0ac:	ldp	w23, w28, [x0, #8]
  40b0b0:	add	w5, w5, w19
  40b0b4:	ror	w5, w5, #20
  40b0b8:	add	w5, w5, w4
  40b0bc:	bic	w19, w9, w5
  40b0c0:	and	w20, w4, w5
  40b0c4:	add	w6, w11, w23
  40b0c8:	orr	w19, w20, w19
  40b0cc:	add	w6, w6, w19
  40b0d0:	mov	w19, #0x70db                	// #28891
  40b0d4:	ldp	w24, w14, [x0, #16]
  40b0d8:	movk	w19, #0x2420, lsl #16
  40b0dc:	add	w6, w6, w19
  40b0e0:	ror	w6, w6, #15
  40b0e4:	add	w6, w6, w5
  40b0e8:	add	w20, w24, w4
  40b0ec:	bic	w4, w4, w6
  40b0f0:	and	w19, w5, w6
  40b0f4:	add	w7, w9, w28
  40b0f8:	orr	w4, w19, w4
  40b0fc:	add	w4, w7, w4
  40b100:	mov	w7, #0xceee                	// #52974
  40b104:	movk	w7, #0xc1bd, lsl #16
  40b108:	add	w4, w4, w7
  40b10c:	ror	w4, w4, #10
  40b110:	add	w4, w4, w6
  40b114:	add	w19, w14, w5
  40b118:	bic	w5, w5, w4
  40b11c:	and	w7, w6, w4
  40b120:	orr	w5, w7, w5
  40b124:	add	w5, w20, w5
  40b128:	mov	w20, #0xfaf                 	// #4015
  40b12c:	ldp	w27, w17, [x0, #24]
  40b130:	movk	w20, #0xf57c, lsl #16
  40b134:	add	w5, w5, w20
  40b138:	ror	w5, w5, #25
  40b13c:	add	w5, w5, w4
  40b140:	add	w7, w27, w6
  40b144:	bic	w6, w6, w5
  40b148:	and	w20, w4, w5
  40b14c:	orr	w6, w20, w6
  40b150:	add	w6, w19, w6
  40b154:	mov	w19, #0xc62a                	// #50730
  40b158:	movk	w19, #0x4787, lsl #16
  40b15c:	add	w6, w6, w19
  40b160:	ror	w6, w6, #20
  40b164:	add	w6, w6, w5
  40b168:	add	w20, w17, w4
  40b16c:	bic	w4, w4, w6
  40b170:	and	w19, w5, w6
  40b174:	orr	w4, w19, w4
  40b178:	add	w4, w7, w4
  40b17c:	mov	w7, #0x4613                	// #17939
  40b180:	ldp	w13, w26, [x0, #32]
  40b184:	movk	w7, #0xa830, lsl #16
  40b188:	add	w4, w4, w7
  40b18c:	ror	w4, w4, #15
  40b190:	add	w4, w4, w6
  40b194:	add	w19, w13, w5
  40b198:	bic	w5, w5, w4
  40b19c:	and	w7, w6, w4
  40b1a0:	orr	w5, w7, w5
  40b1a4:	add	w5, w20, w5
  40b1a8:	mov	w20, #0x9501                	// #38145
  40b1ac:	movk	w20, #0xfd46, lsl #16
  40b1b0:	add	w5, w5, w20
  40b1b4:	ror	w5, w5, #10
  40b1b8:	add	w5, w5, w4
  40b1bc:	add	w7, w26, w6
  40b1c0:	bic	w6, w6, w5
  40b1c4:	and	w20, w4, w5
  40b1c8:	orr	w6, w20, w6
  40b1cc:	add	w6, w19, w6
  40b1d0:	mov	w19, #0x98d8                	// #39128
  40b1d4:	ldp	w16, w30, [x0, #40]
  40b1d8:	movk	w19, #0x6980, lsl #16
  40b1dc:	add	w6, w6, w19
  40b1e0:	ror	w6, w6, #25
  40b1e4:	add	w6, w6, w5
  40b1e8:	add	w20, w16, w4
  40b1ec:	bic	w4, w4, w6
  40b1f0:	and	w19, w5, w6
  40b1f4:	orr	w4, w19, w4
  40b1f8:	add	w4, w7, w4
  40b1fc:	mov	w7, #0xf7af                	// #63407
  40b200:	movk	w7, #0x8b44, lsl #16
  40b204:	add	w4, w4, w7
  40b208:	ror	w4, w4, #20
  40b20c:	add	w4, w4, w6
  40b210:	add	w19, w30, w5
  40b214:	bic	w5, w5, w4
  40b218:	and	w7, w6, w4
  40b21c:	orr	w5, w7, w5
  40b220:	ldp	w1, w15, [x0, #48]
  40b224:	add	w5, w20, w5
  40b228:	mov	w20, #0xffff5bb1            	// #-42063
  40b22c:	add	w5, w5, w20
  40b230:	ror	w5, w5, #15
  40b234:	add	w5, w5, w4
  40b238:	add	w7, w1, w6
  40b23c:	bic	w6, w6, w5
  40b240:	and	w20, w4, w5
  40b244:	orr	w6, w20, w6
  40b248:	add	w6, w19, w6
  40b24c:	mov	w19, #0xd7be                	// #55230
  40b250:	movk	w19, #0x895c, lsl #16
  40b254:	add	w6, w6, w19
  40b258:	ror	w6, w6, #10
  40b25c:	add	w6, w6, w5
  40b260:	add	w20, w15, w4
  40b264:	bic	w4, w4, w6
  40b268:	and	w19, w5, w6
  40b26c:	orr	w4, w19, w4
  40b270:	add	w4, w7, w4
  40b274:	mov	w7, #0x1122                	// #4386
  40b278:	ldp	w3, w18, [x0, #56]
  40b27c:	movk	w7, #0x6b90, lsl #16
  40b280:	add	w4, w4, w7
  40b284:	ror	w4, w4, #25
  40b288:	add	w4, w4, w6
  40b28c:	add	w19, w3, w5
  40b290:	bic	w5, w5, w4
  40b294:	and	w7, w6, w4
  40b298:	orr	w5, w7, w5
  40b29c:	add	w5, w20, w5
  40b2a0:	mov	w20, #0x7193                	// #29075
  40b2a4:	movk	w20, #0xfd98, lsl #16
  40b2a8:	add	w5, w5, w20
  40b2ac:	ror	w5, w5, #20
  40b2b0:	add	w5, w5, w4
  40b2b4:	add	w7, w18, w6
  40b2b8:	bic	w6, w6, w5
  40b2bc:	and	w20, w4, w5
  40b2c0:	orr	w6, w20, w6
  40b2c4:	add	w6, w19, w6
  40b2c8:	mov	w19, #0x438e                	// #17294
  40b2cc:	movk	w19, #0xa679, lsl #16
  40b2d0:	add	w6, w6, w19
  40b2d4:	ror	w6, w6, #15
  40b2d8:	add	w6, w6, w5
  40b2dc:	add	w20, w25, w4
  40b2e0:	bic	w4, w4, w6
  40b2e4:	and	w19, w5, w6
  40b2e8:	orr	w4, w19, w4
  40b2ec:	mov	w21, #0x821                 	// #2081
  40b2f0:	add	w4, w7, w4
  40b2f4:	movk	w21, #0x49b4, lsl #16
  40b2f8:	add	w4, w4, w21
  40b2fc:	ror	w4, w4, #10
  40b300:	add	w4, w4, w6
  40b304:	add	w19, w27, w5
  40b308:	bic	w7, w6, w5
  40b30c:	and	w5, w4, w5
  40b310:	orr	w5, w5, w7
  40b314:	mov	w21, #0x2562                	// #9570
  40b318:	add	w5, w20, w5
  40b31c:	movk	w21, #0xf61e, lsl #16
  40b320:	add	w5, w5, w21
  40b324:	ror	w5, w5, #27
  40b328:	add	w5, w5, w4
  40b32c:	add	w7, w30, w6
  40b330:	bic	w20, w4, w6
  40b334:	and	w6, w5, w6
  40b338:	orr	w6, w6, w20
  40b33c:	mov	w21, #0xb340                	// #45888
  40b340:	add	w6, w19, w6
  40b344:	movk	w21, #0xc040, lsl #16
  40b348:	add	w6, w6, w21
  40b34c:	ror	w6, w6, #23
  40b350:	add	w6, w6, w5
  40b354:	add	w20, w29, w4
  40b358:	bic	w19, w5, w4
  40b35c:	and	w4, w6, w4
  40b360:	orr	w4, w4, w19
  40b364:	mov	w21, #0x5a51                	// #23121
  40b368:	add	w4, w7, w4
  40b36c:	movk	w21, #0x265e, lsl #16
  40b370:	add	w4, w4, w21
  40b374:	ror	w4, w4, #18
  40b378:	add	w4, w4, w6
  40b37c:	add	w19, w14, w5
  40b380:	bic	w7, w6, w5
  40b384:	and	w5, w4, w5
  40b388:	orr	w5, w5, w7
  40b38c:	mov	w21, #0xc7aa                	// #51114
  40b390:	add	w5, w20, w5
  40b394:	movk	w21, #0xe9b6, lsl #16
  40b398:	add	w5, w5, w21
  40b39c:	ror	w5, w5, #12
  40b3a0:	add	w5, w5, w4
  40b3a4:	add	w7, w16, w6
  40b3a8:	bic	w20, w4, w6
  40b3ac:	and	w6, w5, w6
  40b3b0:	orr	w6, w6, w20
  40b3b4:	mov	w21, #0x105d                	// #4189
  40b3b8:	add	w6, w19, w6
  40b3bc:	movk	w21, #0xd62f, lsl #16
  40b3c0:	add	w6, w6, w21
  40b3c4:	ror	w6, w6, #27
  40b3c8:	add	w6, w6, w5
  40b3cc:	add	w20, w18, w4
  40b3d0:	bic	w19, w5, w4
  40b3d4:	and	w4, w6, w4
  40b3d8:	orr	w4, w4, w19
  40b3dc:	mov	w21, #0x1453                	// #5203
  40b3e0:	add	w4, w7, w4
  40b3e4:	movk	w21, #0x244, lsl #16
  40b3e8:	add	w4, w4, w21
  40b3ec:	ror	w4, w4, #23
  40b3f0:	add	w4, w4, w6
  40b3f4:	add	w19, w24, w5
  40b3f8:	bic	w7, w6, w5
  40b3fc:	and	w5, w4, w5
  40b400:	orr	w5, w5, w7
  40b404:	mov	w21, #0xe681                	// #59009
  40b408:	add	w5, w20, w5
  40b40c:	movk	w21, #0xd8a1, lsl #16
  40b410:	add	w5, w5, w21
  40b414:	ror	w5, w5, #18
  40b418:	add	w5, w5, w4
  40b41c:	add	w7, w26, w6
  40b420:	bic	w20, w4, w6
  40b424:	and	w6, w5, w6
  40b428:	orr	w6, w6, w20
  40b42c:	mov	w21, #0xfbc8                	// #64456
  40b430:	add	w6, w19, w6
  40b434:	movk	w21, #0xe7d3, lsl #16
  40b438:	add	w6, w6, w21
  40b43c:	ror	w6, w6, #12
  40b440:	add	w6, w6, w5
  40b444:	add	w20, w3, w4
  40b448:	bic	w19, w5, w4
  40b44c:	and	w4, w6, w4
  40b450:	orr	w4, w4, w19
  40b454:	mov	w21, #0xcde6                	// #52710
  40b458:	add	w4, w7, w4
  40b45c:	movk	w21, #0x21e1, lsl #16
  40b460:	add	w4, w4, w21
  40b464:	ror	w4, w4, #27
  40b468:	add	w4, w4, w6
  40b46c:	add	w19, w28, w5
  40b470:	bic	w7, w6, w5
  40b474:	and	w5, w4, w5
  40b478:	orr	w5, w5, w7
  40b47c:	mov	w21, #0x7d6                 	// #2006
  40b480:	add	w5, w20, w5
  40b484:	movk	w21, #0xc337, lsl #16
  40b488:	add	w5, w5, w21
  40b48c:	ror	w5, w5, #23
  40b490:	add	w5, w5, w4
  40b494:	add	w7, w13, w6
  40b498:	bic	w20, w4, w6
  40b49c:	and	w6, w5, w6
  40b4a0:	orr	w6, w6, w20
  40b4a4:	mov	w21, #0xd87                 	// #3463
  40b4a8:	add	w6, w19, w6
  40b4ac:	movk	w21, #0xf4d5, lsl #16
  40b4b0:	add	w6, w6, w21
  40b4b4:	ror	w6, w6, #18
  40b4b8:	add	w6, w6, w5
  40b4bc:	add	w20, w15, w4
  40b4c0:	bic	w19, w5, w4
  40b4c4:	and	w4, w6, w4
  40b4c8:	orr	w4, w4, w19
  40b4cc:	mov	w21, #0x14ed                	// #5357
  40b4d0:	add	w4, w7, w4
  40b4d4:	movk	w21, #0x455a, lsl #16
  40b4d8:	add	w4, w4, w21
  40b4dc:	ror	w4, w4, #12
  40b4e0:	add	w4, w4, w6
  40b4e4:	add	w19, w23, w5
  40b4e8:	bic	w7, w6, w5
  40b4ec:	and	w5, w4, w5
  40b4f0:	orr	w5, w5, w7
  40b4f4:	mov	w21, #0xe905                	// #59653
  40b4f8:	add	w5, w20, w5
  40b4fc:	movk	w21, #0xa9e3, lsl #16
  40b500:	add	w5, w5, w21
  40b504:	ror	w5, w5, #27
  40b508:	add	w5, w5, w4
  40b50c:	add	w7, w17, w6
  40b510:	bic	w20, w4, w6
  40b514:	and	w6, w5, w6
  40b518:	orr	w6, w6, w20
  40b51c:	mov	w21, #0xa3f8                	// #41976
  40b520:	add	w6, w19, w6
  40b524:	movk	w21, #0xfcef, lsl #16
  40b528:	add	w6, w6, w21
  40b52c:	ror	w6, w6, #23
  40b530:	add	w6, w6, w5
  40b534:	add	w20, w1, w4
  40b538:	bic	w19, w5, w4
  40b53c:	and	w4, w6, w4
  40b540:	orr	w4, w4, w19
  40b544:	add	w4, w7, w4
  40b548:	mov	w7, #0x2d9                 	// #729
  40b54c:	movk	w7, #0x676f, lsl #16
  40b550:	add	w4, w4, w7
  40b554:	ror	w4, w4, #18
  40b558:	add	w4, w4, w6
  40b55c:	eor	w7, w4, w6
  40b560:	and	w19, w7, w5
  40b564:	eor	w19, w19, w6
  40b568:	add	w19, w20, w19
  40b56c:	mov	w20, #0x4c8a                	// #19594
  40b570:	movk	w20, #0x8d2a, lsl #16
  40b574:	add	w19, w19, w20
  40b578:	ror	w19, w19, #12
  40b57c:	add	w19, w19, w4
  40b580:	add	w5, w14, w5
  40b584:	eor	w7, w7, w19
  40b588:	mov	w20, #0x3942                	// #14658
  40b58c:	add	w5, w5, w7
  40b590:	movk	w20, #0xfffa, lsl #16
  40b594:	add	w5, w5, w20
  40b598:	ror	w5, w5, #28
  40b59c:	add	w7, w30, w4
  40b5a0:	eor	w4, w19, w4
  40b5a4:	add	w5, w5, w19
  40b5a8:	add	w6, w13, w6
  40b5ac:	eor	w4, w4, w5
  40b5b0:	mov	w20, #0xf681                	// #63105
  40b5b4:	add	w4, w6, w4
  40b5b8:	movk	w20, #0x8771, lsl #16
  40b5bc:	add	w4, w4, w20
  40b5c0:	ror	w4, w4, #21
  40b5c4:	add	w6, w3, w19
  40b5c8:	eor	w19, w5, w19
  40b5cc:	add	w4, w4, w5
  40b5d0:	eor	w19, w19, w4
  40b5d4:	mov	w20, #0x6122                	// #24866
  40b5d8:	add	w7, w7, w19
  40b5dc:	movk	w20, #0x6d9d, lsl #16
  40b5e0:	add	w7, w7, w20
  40b5e4:	ror	w7, w7, #16
  40b5e8:	add	w19, w25, w5
  40b5ec:	eor	w5, w4, w5
  40b5f0:	add	w7, w7, w4
  40b5f4:	eor	w5, w5, w7
  40b5f8:	mov	w20, #0x380c                	// #14348
  40b5fc:	add	w5, w6, w5
  40b600:	movk	w20, #0xfde5, lsl #16
  40b604:	add	w5, w5, w20
  40b608:	ror	w5, w5, #9
  40b60c:	add	w6, w24, w4
  40b610:	eor	w4, w7, w4
  40b614:	add	w5, w5, w7
  40b618:	eor	w4, w4, w5
  40b61c:	mov	w20, #0xea44                	// #59972
  40b620:	add	w4, w19, w4
  40b624:	movk	w20, #0xa4be, lsl #16
  40b628:	add	w4, w4, w20
  40b62c:	ror	w4, w4, #28
  40b630:	add	w19, w17, w7
  40b634:	eor	w7, w5, w7
  40b638:	add	w4, w4, w5
  40b63c:	eor	w7, w7, w4
  40b640:	mov	w20, #0xcfa9                	// #53161
  40b644:	add	w6, w6, w7
  40b648:	movk	w20, #0x4bde, lsl #16
  40b64c:	add	w6, w6, w20
  40b650:	ror	w6, w6, #21
  40b654:	add	w7, w16, w5
  40b658:	eor	w5, w4, w5
  40b65c:	add	w6, w6, w4
  40b660:	eor	w5, w5, w6
  40b664:	mov	w20, #0x4b60                	// #19296
  40b668:	add	w5, w19, w5
  40b66c:	movk	w20, #0xf6bb, lsl #16
  40b670:	add	w5, w5, w20
  40b674:	ror	w5, w5, #16
  40b678:	add	w19, w15, w4
  40b67c:	eor	w4, w6, w4
  40b680:	add	w5, w5, w6
  40b684:	eor	w4, w4, w5
  40b688:	mov	w20, #0xbc70                	// #48240
  40b68c:	add	w4, w7, w4
  40b690:	movk	w20, #0xbebf, lsl #16
  40b694:	add	w4, w4, w20
  40b698:	ror	w4, w4, #9
  40b69c:	add	w7, w29, w6
  40b6a0:	eor	w6, w5, w6
  40b6a4:	add	w4, w4, w5
  40b6a8:	eor	w6, w6, w4
  40b6ac:	mov	w20, #0x7ec6                	// #32454
  40b6b0:	add	w6, w19, w6
  40b6b4:	movk	w20, #0x289b, lsl #16
  40b6b8:	add	w6, w6, w20
  40b6bc:	ror	w6, w6, #28
  40b6c0:	add	w19, w28, w5
  40b6c4:	eor	w5, w4, w5
  40b6c8:	add	w6, w6, w4
  40b6cc:	eor	w5, w5, w6
  40b6d0:	mov	w20, #0x27fa                	// #10234
  40b6d4:	add	w5, w7, w5
  40b6d8:	movk	w20, #0xeaa1, lsl #16
  40b6dc:	add	w5, w5, w20
  40b6e0:	ror	w5, w5, #21
  40b6e4:	add	w7, w27, w4
  40b6e8:	eor	w4, w6, w4
  40b6ec:	add	w5, w5, w6
  40b6f0:	eor	w4, w4, w5
  40b6f4:	mov	w20, #0x3085                	// #12421
  40b6f8:	add	w4, w19, w4
  40b6fc:	movk	w20, #0xd4ef, lsl #16
  40b700:	add	w4, w4, w20
  40b704:	ror	w4, w4, #16
  40b708:	add	w19, w26, w6
  40b70c:	eor	w6, w5, w6
  40b710:	add	w4, w4, w5
  40b714:	eor	w6, w6, w4
  40b718:	mov	w20, #0x1d05                	// #7429
  40b71c:	add	w6, w7, w6
  40b720:	movk	w20, #0x488, lsl #16
  40b724:	add	w6, w6, w20
  40b728:	ror	w6, w6, #9
  40b72c:	add	w7, w1, w5
  40b730:	eor	w5, w4, w5
  40b734:	add	w6, w6, w4
  40b738:	eor	w5, w5, w6
  40b73c:	mov	w20, #0xd039                	// #53305
  40b740:	add	w5, w19, w5
  40b744:	movk	w20, #0xd9d4, lsl #16
  40b748:	add	w5, w5, w20
  40b74c:	ror	w5, w5, #28
  40b750:	add	w19, w18, w4
  40b754:	eor	w4, w6, w4
  40b758:	add	w5, w5, w6
  40b75c:	eor	w4, w4, w5
  40b760:	mov	w20, #0x99e5                	// #39397
  40b764:	add	w4, w7, w4
  40b768:	movk	w20, #0xe6db, lsl #16
  40b76c:	add	w4, w4, w20
  40b770:	ror	w4, w4, #21
  40b774:	eor	w7, w5, w6
  40b778:	add	w4, w4, w5
  40b77c:	eor	w7, w7, w4
  40b780:	mov	w20, #0x7cf8                	// #31992
  40b784:	add	w7, w19, w7
  40b788:	movk	w20, #0x1fa2, lsl #16
  40b78c:	add	w7, w7, w20
  40b790:	ror	w7, w7, #16
  40b794:	add	w19, w29, w5
  40b798:	eor	w5, w4, w5
  40b79c:	add	w7, w7, w4
  40b7a0:	add	w6, w23, w6
  40b7a4:	eor	w5, w5, w7
  40b7a8:	add	w5, w6, w5
  40b7ac:	mov	w6, #0x5665                	// #22117
  40b7b0:	movk	w6, #0xc4ac, lsl #16
  40b7b4:	add	w5, w5, w6
  40b7b8:	ror	w5, w5, #9
  40b7bc:	add	w5, w5, w7
  40b7c0:	add	w17, w17, w4
  40b7c4:	orn	w4, w5, w4
  40b7c8:	eor	w4, w4, w7
  40b7cc:	mov	w6, #0x2244                	// #8772
  40b7d0:	add	w4, w19, w4
  40b7d4:	movk	w6, #0xf429, lsl #16
  40b7d8:	add	w4, w4, w6
  40b7dc:	ror	w4, w4, #26
  40b7e0:	add	w4, w4, w5
  40b7e4:	orn	w6, w4, w7
  40b7e8:	eor	w6, w6, w5
  40b7ec:	add	w17, w17, w6
  40b7f0:	mov	w6, #0xff97                	// #65431
  40b7f4:	movk	w6, #0x432a, lsl #16
  40b7f8:	add	w17, w17, w6
  40b7fc:	ror	w17, w17, #22
  40b800:	add	w17, w17, w4
  40b804:	add	w14, w14, w5
  40b808:	orn	w5, w17, w5
  40b80c:	add	w3, w3, w7
  40b810:	eor	w5, w5, w4
  40b814:	add	w3, w3, w5
  40b818:	mov	w5, #0x23a7                	// #9127
  40b81c:	movk	w5, #0xab94, lsl #16
  40b820:	add	w3, w3, w5
  40b824:	ror	w3, w3, #17
  40b828:	add	w3, w3, w17
  40b82c:	add	w1, w1, w4
  40b830:	orn	w4, w3, w4
  40b834:	eor	w4, w4, w17
  40b838:	mov	w5, #0xa039                	// #41017
  40b83c:	add	w14, w14, w4
  40b840:	movk	w5, #0xfc93, lsl #16
  40b844:	add	w14, w14, w5
  40b848:	ror	w14, w14, #11
  40b84c:	add	w14, w14, w3
  40b850:	add	w4, w28, w17
  40b854:	orn	w17, w14, w17
  40b858:	eor	w17, w17, w3
  40b85c:	add	w17, w1, w17
  40b860:	mov	w1, #0x59c3                	// #22979
  40b864:	movk	w1, #0x655b, lsl #16
  40b868:	add	w17, w17, w1
  40b86c:	ror	w17, w17, #26
  40b870:	add	w17, w17, w14
  40b874:	orn	w1, w17, w3
  40b878:	eor	w1, w1, w14
  40b87c:	add	w1, w4, w1
  40b880:	mov	w4, #0xcc92                	// #52370
  40b884:	movk	w4, #0x8f0c, lsl #16
  40b888:	add	w1, w1, w4
  40b88c:	ror	w1, w1, #22
  40b890:	add	w1, w1, w17
  40b894:	add	w16, w16, w3
  40b898:	add	w3, w25, w14
  40b89c:	orn	w14, w1, w14
  40b8a0:	eor	w14, w14, w17
  40b8a4:	add	w14, w16, w14
  40b8a8:	mov	w16, #0xf47d                	// #62589
  40b8ac:	movk	w16, #0xffef, lsl #16
  40b8b0:	add	w14, w14, w16
  40b8b4:	ror	w14, w14, #17
  40b8b8:	add	w14, w14, w1
  40b8bc:	orn	w16, w14, w17
  40b8c0:	add	w13, w13, w17
  40b8c4:	eor	w16, w16, w1
  40b8c8:	add	w17, w18, w1
  40b8cc:	mov	w18, #0x5dd1                	// #24017
  40b8d0:	add	w16, w3, w16
  40b8d4:	movk	w18, #0x8584, lsl #16
  40b8d8:	add	w16, w16, w18
  40b8dc:	ror	w16, w16, #11
  40b8e0:	add	w16, w16, w14
  40b8e4:	orn	w18, w16, w1
  40b8e8:	eor	w18, w18, w14
  40b8ec:	mov	w1, #0x7e4f                	// #32335
  40b8f0:	add	w13, w13, w18
  40b8f4:	movk	w1, #0x6fa8, lsl #16
  40b8f8:	add	w13, w13, w1
  40b8fc:	ror	w13, w13, #26
  40b900:	add	w13, w13, w16
  40b904:	add	w18, w27, w14
  40b908:	orn	w14, w13, w14
  40b90c:	eor	w14, w14, w16
  40b910:	add	w14, w17, w14
  40b914:	mov	w17, #0xe6e0                	// #59104
  40b918:	movk	w17, #0xfe2c, lsl #16
  40b91c:	add	w14, w14, w17
  40b920:	ror	w14, w14, #22
  40b924:	add	w14, w14, w13
  40b928:	add	w15, w15, w16
  40b92c:	orn	w16, w14, w16
  40b930:	eor	w16, w16, w13
  40b934:	add	w16, w18, w16
  40b938:	mov	w18, #0x4314                	// #17172
  40b93c:	movk	w18, #0xa301, lsl #16
  40b940:	add	w16, w16, w18
  40b944:	ror	w16, w16, #17
  40b948:	add	w16, w16, w14
  40b94c:	add	w17, w24, w13
  40b950:	orn	w13, w16, w13
  40b954:	eor	w13, w13, w14
  40b958:	mov	w18, #0x11a1                	// #4513
  40b95c:	add	w13, w15, w13
  40b960:	movk	w18, #0x4e08, lsl #16
  40b964:	add	w13, w13, w18
  40b968:	ror	w13, w13, #11
  40b96c:	add	w13, w13, w16
  40b970:	add	w15, w30, w14
  40b974:	orn	w14, w13, w14
  40b978:	eor	w14, w14, w16
  40b97c:	mov	w18, #0x7e82                	// #32386
  40b980:	add	w14, w17, w14
  40b984:	movk	w18, #0xf753, lsl #16
  40b988:	add	w14, w14, w18
  40b98c:	ror	w14, w14, #26
  40b990:	add	w14, w14, w13
  40b994:	add	w17, w23, w16
  40b998:	orn	w16, w14, w16
  40b99c:	eor	w16, w16, w13
  40b9a0:	mov	w18, #0xf235                	// #62005
  40b9a4:	add	w15, w15, w16
  40b9a8:	movk	w18, #0xbd3a, lsl #16
  40b9ac:	add	w15, w15, w18
  40b9b0:	ror	w15, w15, #22
  40b9b4:	add	w15, w15, w14
  40b9b8:	add	w16, w26, w13
  40b9bc:	orn	w13, w15, w13
  40b9c0:	eor	w13, w13, w14
  40b9c4:	add	w13, w17, w13
  40b9c8:	mov	w17, #0xd2bb                	// #53947
  40b9cc:	movk	w17, #0x2ad7, lsl #16
  40b9d0:	add	w13, w13, w17
  40b9d4:	ror	w13, w13, #17
  40b9d8:	add	w13, w13, w15
  40b9dc:	add	w8, w14, w8
  40b9e0:	orn	w14, w13, w14
  40b9e4:	add	w9, w13, w9
  40b9e8:	add	w11, w13, w11
  40b9ec:	eor	w13, w14, w15
  40b9f0:	add	w13, w16, w13
  40b9f4:	add	w13, w13, w22
  40b9f8:	ror	w13, w13, #11
  40b9fc:	add	x0, x0, #0x40
  40ba00:	add	w9, w9, w13
  40ba04:	cmp	x0, x12
  40ba08:	add	w10, w15, w10
  40ba0c:	b.cc	40b064 <ferror@plt+0x81d4>  // b.lo, b.ul, b.last
  40ba10:	stp	w8, w9, [x2]
  40ba14:	stp	w11, w10, [x2, #8]
  40ba18:	ldp	x20, x19, [sp, #80]
  40ba1c:	ldp	x22, x21, [sp, #64]
  40ba20:	ldp	x24, x23, [sp, #48]
  40ba24:	ldp	x26, x25, [sp, #32]
  40ba28:	ldp	x28, x27, [sp, #16]
  40ba2c:	ldp	x29, x30, [sp], #96
  40ba30:	ret
  40ba34:	sub	sp, sp, #0xe0
  40ba38:	stp	x22, x21, [sp, #192]
  40ba3c:	mov	x21, x0
  40ba40:	mov	w0, #0x8048                	// #32840
  40ba44:	stp	x29, x30, [sp, #160]
  40ba48:	str	x23, [sp, #176]
  40ba4c:	stp	x20, x19, [sp, #208]
  40ba50:	add	x29, sp, #0xa0
  40ba54:	mov	x19, x1
  40ba58:	bl	402930 <malloc@plt>
  40ba5c:	cbz	x0, 40bb04 <ferror@plt+0x8c74>
  40ba60:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40ba64:	ldr	q0, [x8, #2848]
  40ba68:	mov	x20, x0
  40ba6c:	mov	x22, xzr
  40ba70:	mov	w23, #0x8000                	// #32768
  40ba74:	str	xzr, [sp, #16]
  40ba78:	str	wzr, [sp, #24]
  40ba7c:	str	q0, [sp]
  40ba80:	b	40ba98 <ferror@plt+0x8c08>
  40ba84:	mov	x2, sp
  40ba88:	mov	w1, #0x8000                	// #32768
  40ba8c:	mov	x0, x20
  40ba90:	bl	40b010 <ferror@plt+0x8180>
  40ba94:	mov	x22, xzr
  40ba98:	ldrb	w8, [x21]
  40ba9c:	tbnz	w8, #4, 40bacc <ferror@plt+0x8c3c>
  40baa0:	add	x0, x20, x22
  40baa4:	sub	x2, x23, x22
  40baa8:	mov	w1, #0x1                   	// #1
  40baac:	mov	x3, x21
  40bab0:	bl	402b50 <fread_unlocked@plt>
  40bab4:	add	x22, x0, x22
  40bab8:	cmp	x22, #0x8, lsl #12
  40babc:	b.eq	40ba84 <ferror@plt+0x8bf4>  // b.none
  40bac0:	cbnz	x0, 40ba98 <ferror@plt+0x8c08>
  40bac4:	ldrb	w8, [x21]
  40bac8:	tbnz	w8, #5, 40bafc <ferror@plt+0x8c6c>
  40bacc:	cbz	x22, 40bae0 <ferror@plt+0x8c50>
  40bad0:	mov	x2, sp
  40bad4:	mov	x0, x20
  40bad8:	mov	x1, x22
  40badc:	bl	40bb20 <ferror@plt+0x8c90>
  40bae0:	mov	x0, sp
  40bae4:	mov	x1, x19
  40bae8:	bl	40af4c <ferror@plt+0x80bc>
  40baec:	mov	x0, x20
  40baf0:	bl	402c00 <free@plt>
  40baf4:	mov	w0, wzr
  40baf8:	b	40bb08 <ferror@plt+0x8c78>
  40bafc:	mov	x0, x20
  40bb00:	bl	402c00 <free@plt>
  40bb04:	mov	w0, #0x1                   	// #1
  40bb08:	ldp	x20, x19, [sp, #208]
  40bb0c:	ldp	x22, x21, [sp, #192]
  40bb10:	ldr	x23, [sp, #176]
  40bb14:	ldp	x29, x30, [sp, #160]
  40bb18:	add	sp, sp, #0xe0
  40bb1c:	ret
  40bb20:	stp	x29, x30, [sp, #-64]!
  40bb24:	stp	x24, x23, [sp, #16]
  40bb28:	stp	x22, x21, [sp, #32]
  40bb2c:	stp	x20, x19, [sp, #48]
  40bb30:	ldr	w24, [x2, #24]
  40bb34:	mov	x19, x2
  40bb38:	mov	x20, x1
  40bb3c:	mov	x21, x0
  40bb40:	mov	x29, sp
  40bb44:	cbz	w24, 40bbb8 <ferror@plt+0x8d28>
  40bb48:	mov	w8, #0x80                  	// #128
  40bb4c:	sub	x8, x8, x24
  40bb50:	cmp	x8, x20
  40bb54:	add	x23, x19, #0x1c
  40bb58:	csel	x22, x20, x8, hi  // hi = pmore
  40bb5c:	add	x0, x23, x24
  40bb60:	mov	x1, x21
  40bb64:	mov	x2, x22
  40bb68:	bl	402760 <memcpy@plt>
  40bb6c:	ldr	w8, [x19, #24]
  40bb70:	add	w8, w8, w22
  40bb74:	cmp	w8, #0x41
  40bb78:	str	w8, [x19, #24]
  40bb7c:	b.cc	40bbb0 <ferror@plt+0x8d20>  // b.lo, b.ul, b.last
  40bb80:	and	w1, w8, #0xffffffc0
  40bb84:	mov	x0, x23
  40bb88:	mov	x2, x19
  40bb8c:	bl	40b010 <ferror@plt+0x8180>
  40bb90:	ldr	w8, [x19, #24]
  40bb94:	add	x9, x22, x24
  40bb98:	and	x9, x9, #0xffffffffffffffc0
  40bb9c:	add	x1, x23, x9
  40bba0:	and	x2, x8, #0x3f
  40bba4:	mov	x0, x23
  40bba8:	str	w2, [x19, #24]
  40bbac:	bl	402760 <memcpy@plt>
  40bbb0:	add	x21, x21, x22
  40bbb4:	sub	x20, x20, x22
  40bbb8:	cmp	x20, #0x40
  40bbbc:	b.cc	40bc30 <ferror@plt+0x8da0>  // b.lo, b.ul, b.last
  40bbc0:	tst	x21, #0x3
  40bbc4:	b.eq	40bc14 <ferror@plt+0x8d84>  // b.none
  40bbc8:	subs	x8, x20, #0x41
  40bbcc:	b.cc	40bc38 <ferror@plt+0x8da8>  // b.lo, b.ul, b.last
  40bbd0:	add	x22, x19, #0x1c
  40bbd4:	and	x23, x8, #0xffffffffffffffc0
  40bbd8:	mov	x24, x20
  40bbdc:	ldp	q1, q0, [x21, #32]
  40bbe0:	ldp	q3, q2, [x21], #64
  40bbe4:	mov	w1, #0x40                  	// #64
  40bbe8:	mov	x0, x22
  40bbec:	mov	x2, x19
  40bbf0:	stp	q1, q0, [x22, #32]
  40bbf4:	stp	q3, q2, [x22]
  40bbf8:	bl	40b010 <ferror@plt+0x8180>
  40bbfc:	sub	x24, x24, #0x40
  40bc00:	cmp	x24, #0x40
  40bc04:	b.hi	40bbdc <ferror@plt+0x8d4c>  // b.pmore
  40bc08:	sub	x8, x20, x23
  40bc0c:	sub	x20, x8, #0x40
  40bc10:	b	40bc3c <ferror@plt+0x8dac>
  40bc14:	and	x22, x20, #0xffffffffffffffc0
  40bc18:	mov	x0, x21
  40bc1c:	mov	x1, x22
  40bc20:	mov	x2, x19
  40bc24:	bl	40b010 <ferror@plt+0x8180>
  40bc28:	add	x21, x21, x22
  40bc2c:	and	x20, x20, #0x3f
  40bc30:	cbnz	x20, 40bc3c <ferror@plt+0x8dac>
  40bc34:	b	40bc88 <ferror@plt+0x8df8>
  40bc38:	mov	w20, #0x40                  	// #64
  40bc3c:	ldr	w23, [x19, #24]
  40bc40:	add	x22, x19, #0x1c
  40bc44:	mov	x1, x21
  40bc48:	mov	x2, x20
  40bc4c:	add	x0, x22, x23
  40bc50:	bl	402760 <memcpy@plt>
  40bc54:	add	x8, x20, x23
  40bc58:	subs	x20, x8, #0x40
  40bc5c:	b.cc	40bc84 <ferror@plt+0x8df4>  // b.lo, b.ul, b.last
  40bc60:	mov	w1, #0x40                  	// #64
  40bc64:	mov	x0, x22
  40bc68:	mov	x2, x19
  40bc6c:	bl	40b010 <ferror@plt+0x8180>
  40bc70:	add	x1, x19, #0x5c
  40bc74:	mov	x0, x22
  40bc78:	mov	x2, x20
  40bc7c:	bl	402760 <memcpy@plt>
  40bc80:	mov	x8, x20
  40bc84:	str	w8, [x19, #24]
  40bc88:	ldp	x20, x19, [sp, #48]
  40bc8c:	ldp	x22, x21, [sp, #32]
  40bc90:	ldp	x24, x23, [sp, #16]
  40bc94:	ldp	x29, x30, [sp], #64
  40bc98:	ret
  40bc9c:	sub	sp, sp, #0xc0
  40bca0:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40bca4:	ldr	q0, [x8, #2848]
  40bca8:	str	x19, [sp, #176]
  40bcac:	mov	x19, x2
  40bcb0:	mov	x2, sp
  40bcb4:	stp	x29, x30, [sp, #160]
  40bcb8:	add	x29, sp, #0xa0
  40bcbc:	str	xzr, [sp, #16]
  40bcc0:	str	q0, [sp]
  40bcc4:	str	wzr, [sp, #24]
  40bcc8:	bl	40bb20 <ferror@plt+0x8c90>
  40bccc:	mov	x0, sp
  40bcd0:	mov	x1, x19
  40bcd4:	bl	40af4c <ferror@plt+0x80bc>
  40bcd8:	ldr	x19, [sp, #176]
  40bcdc:	ldp	x29, x30, [sp, #160]
  40bce0:	add	sp, sp, #0xc0
  40bce4:	ret
  40bce8:	b	402b10 <posix_fadvise@plt>
  40bcec:	cbz	x0, 40bd1c <ferror@plt+0x8e8c>
  40bcf0:	stp	x29, x30, [sp, #-32]!
  40bcf4:	str	x19, [sp, #16]
  40bcf8:	mov	x29, sp
  40bcfc:	mov	w19, w1
  40bd00:	bl	4028d0 <fileno@plt>
  40bd04:	mov	w3, w19
  40bd08:	ldr	x19, [sp, #16]
  40bd0c:	mov	x1, xzr
  40bd10:	mov	x2, xzr
  40bd14:	ldp	x29, x30, [sp], #32
  40bd18:	b	402b10 <posix_fadvise@plt>
  40bd1c:	ret
  40bd20:	stp	x29, x30, [sp, #-80]!
  40bd24:	stp	x26, x25, [sp, #16]
  40bd28:	stp	x24, x23, [sp, #32]
  40bd2c:	stp	x22, x21, [sp, #48]
  40bd30:	stp	x20, x19, [sp, #64]
  40bd34:	mov	x29, sp
  40bd38:	mov	x19, x1
  40bd3c:	mov	x21, x0
  40bd40:	bl	402bb0 <strcmp@plt>
  40bd44:	cbz	w0, 40be7c <ferror@plt+0x8fec>
  40bd48:	ldrb	w24, [x21]
  40bd4c:	cbz	w24, 40bdbc <ferror@plt+0x8f2c>
  40bd50:	ldrb	w22, [x19]
  40bd54:	cbz	w22, 40be78 <ferror@plt+0x8fe8>
  40bd58:	mov	w20, w0
  40bd5c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40bd60:	add	x0, x0, #0xb71
  40bd64:	mov	x1, x21
  40bd68:	bl	402bb0 <strcmp@plt>
  40bd6c:	cbz	w0, 40bdbc <ferror@plt+0x8f2c>
  40bd70:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40bd74:	add	x0, x0, #0xb71
  40bd78:	mov	x1, x19
  40bd7c:	bl	402bb0 <strcmp@plt>
  40bd80:	cbz	w0, 40be78 <ferror@plt+0x8fe8>
  40bd84:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40bd88:	add	x0, x0, #0xb70
  40bd8c:	mov	x1, x21
  40bd90:	bl	402bb0 <strcmp@plt>
  40bd94:	cbz	w0, 40bdbc <ferror@plt+0x8f2c>
  40bd98:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40bd9c:	add	x0, x0, #0xb70
  40bda0:	mov	x1, x19
  40bda4:	bl	402bb0 <strcmp@plt>
  40bda8:	cbz	w0, 40be78 <ferror@plt+0x8fe8>
  40bdac:	cmp	w24, #0x2e
  40bdb0:	b.ne	40bdc4 <ferror@plt+0x8f34>  // b.any
  40bdb4:	cmp	w22, #0x2e
  40bdb8:	b.eq	40bdc4 <ferror@plt+0x8f34>  // b.none
  40bdbc:	mov	w0, #0xffffffff            	// #-1
  40bdc0:	b	40be7c <ferror@plt+0x8fec>
  40bdc4:	cmp	w24, #0x2e
  40bdc8:	b.ne	40be70 <ferror@plt+0x8fe0>  // b.any
  40bdcc:	cmp	w22, #0x2e
  40bdd0:	b.ne	40c0a8 <ferror@plt+0x9218>  // b.any
  40bdd4:	ldrb	w24, [x21, #1]!
  40bdd8:	add	x19, x19, #0x1
  40bddc:	cbnz	w24, 40c0ac <ferror@plt+0x921c>
  40bde0:	mov	x22, xzr
  40bde4:	mov	x23, x21
  40bde8:	ldrb	w9, [x19]
  40bdec:	cbz	w9, 40be94 <ferror@plt+0x9004>
  40bdf0:	mov	w8, wzr
  40bdf4:	mov	x25, xzr
  40bdf8:	mov	w26, #0x1                   	// #1
  40bdfc:	mov	x24, x19
  40be00:	b	40be18 <ferror@plt+0x8f88>
  40be04:	cmp	x25, #0x0
  40be08:	csel	x25, x24, x25, eq  // eq = none
  40be0c:	mov	w8, #0x1                   	// #1
  40be10:	ldrb	w9, [x24, #1]!
  40be14:	cbz	w9, 40be9c <ferror@plt+0x900c>
  40be18:	tbz	w8, #0, 40be40 <ferror@plt+0x8fb0>
  40be1c:	and	w9, w9, #0xff
  40be20:	sub	w8, w9, #0x41
  40be24:	cmp	w8, #0x39
  40be28:	b.hi	40be68 <ferror@plt+0x8fd8>  // b.pmore
  40be2c:	lsl	x8, x26, x8
  40be30:	tst	x8, #0x3ffffff03ffffff
  40be34:	b.eq	40be68 <ferror@plt+0x8fd8>  // b.none
  40be38:	mov	w8, wzr
  40be3c:	b	40be10 <ferror@plt+0x8f80>
  40be40:	and	w0, w9, #0xff
  40be44:	cmp	w0, #0x2e
  40be48:	b.eq	40be04 <ferror@plt+0x8f74>  // b.none
  40be4c:	bl	412a88 <_obstack_memory_used@@Base+0x74>
  40be50:	mov	w8, wzr
  40be54:	tbnz	w0, #0, 40be10 <ferror@plt+0x8f80>
  40be58:	ldrb	w9, [x24]
  40be5c:	cmp	w9, #0x7e
  40be60:	csel	x25, x25, xzr, eq  // eq = none
  40be64:	b	40be10 <ferror@plt+0x8f80>
  40be68:	mov	w8, wzr
  40be6c:	b	40be5c <ferror@plt+0x8fcc>
  40be70:	cmp	w22, #0x2e
  40be74:	b.ne	40c0ac <ferror@plt+0x921c>  // b.any
  40be78:	mov	w0, #0x1                   	// #1
  40be7c:	ldp	x20, x19, [sp, #64]
  40be80:	ldp	x22, x21, [sp, #48]
  40be84:	ldp	x24, x23, [sp, #32]
  40be88:	ldp	x26, x25, [sp, #16]
  40be8c:	ldp	x29, x30, [sp], #80
  40be90:	ret
  40be94:	mov	x25, xzr
  40be98:	mov	x24, x19
  40be9c:	cmp	x22, #0x0
  40bea0:	csel	x8, x22, x23, ne  // ne = any
  40bea4:	cmp	x25, #0x0
  40bea8:	orr	x9, x22, x25
  40beac:	sub	x22, x8, x21
  40beb0:	csel	x8, x25, x24, ne  // ne = any
  40beb4:	sub	x8, x8, x19
  40beb8:	cbz	x9, 40bee4 <ferror@plt+0x9054>
  40bebc:	cmp	x22, x8
  40bec0:	b.ne	40bee4 <ferror@plt+0x9054>  // b.any
  40bec4:	mov	x0, x21
  40bec8:	mov	x1, x19
  40becc:	mov	x2, x22
  40bed0:	bl	402990 <strncmp@plt>
  40bed4:	mov	x8, x22
  40bed8:	cbnz	w0, 40bee4 <ferror@plt+0x9054>
  40bedc:	sub	x22, x23, x21
  40bee0:	sub	x8, x24, x19
  40bee4:	mov	x9, xzr
  40bee8:	mov	x11, xzr
  40beec:	mov	w10, #0x1                   	// #1
  40bef0:	cmp	x9, x8
  40bef4:	b.cc	40bf00 <ferror@plt+0x9070>  // b.lo, b.ul, b.last
  40bef8:	cmp	x11, x22
  40befc:	b.cs	40c0a0 <ferror@plt+0x9210>  // b.hs, b.nlast
  40bf00:	cmp	x11, x22
  40bf04:	b.cs	40bf18 <ferror@plt+0x9088>  // b.hs, b.nlast
  40bf08:	ldrb	w12, [x21, x11]
  40bf0c:	sub	w12, w12, #0x30
  40bf10:	cmp	w12, #0x9
  40bf14:	b.hi	40bf30 <ferror@plt+0x90a0>  // b.pmore
  40bf18:	cmp	x9, x8
  40bf1c:	b.cs	40bffc <ferror@plt+0x916c>  // b.hs, b.nlast
  40bf20:	ldrb	w12, [x19, x9]
  40bf24:	sub	w12, w12, #0x30
  40bf28:	cmp	w12, #0xa
  40bf2c:	b.cc	40bffc <ferror@plt+0x916c>  // b.lo, b.ul, b.last
  40bf30:	cmp	x22, x11
  40bf34:	b.eq	40bf48 <ferror@plt+0x90b8>  // b.none
  40bf38:	ldrb	w12, [x21, x11]
  40bf3c:	sub	w13, w12, #0x30
  40bf40:	cmp	w13, #0xa
  40bf44:	b.cs	40bf58 <ferror@plt+0x90c8>  // b.hs, b.nlast
  40bf48:	mov	w12, wzr
  40bf4c:	cmp	x8, x9
  40bf50:	b.eq	40bf88 <ferror@plt+0x90f8>  // b.none
  40bf54:	b	40bf78 <ferror@plt+0x90e8>
  40bf58:	sub	w13, w12, #0x41
  40bf5c:	cmp	w13, #0x39
  40bf60:	b.hi	40bfcc <ferror@plt+0x913c>  // b.pmore
  40bf64:	lsl	x13, x10, x13
  40bf68:	tst	x13, #0x3ffffff03ffffff
  40bf6c:	b.eq	40bfcc <ferror@plt+0x913c>  // b.none
  40bf70:	cmp	x8, x9
  40bf74:	b.eq	40bf88 <ferror@plt+0x90f8>  // b.none
  40bf78:	ldrb	w13, [x19, x9]
  40bf7c:	sub	w14, w13, #0x30
  40bf80:	cmp	w14, #0xa
  40bf84:	b.cs	40bf98 <ferror@plt+0x9108>  // b.hs, b.nlast
  40bf88:	mov	w13, wzr
  40bf8c:	subs	w0, w12, w13
  40bf90:	b.eq	40bfb8 <ferror@plt+0x9128>  // b.none
  40bf94:	b	40c09c <ferror@plt+0x920c>
  40bf98:	sub	w14, w13, #0x41
  40bf9c:	cmp	w14, #0x39
  40bfa0:	b.hi	40bfe4 <ferror@plt+0x9154>  // b.pmore
  40bfa4:	lsl	x14, x10, x14
  40bfa8:	tst	x14, #0x3ffffff03ffffff
  40bfac:	b.eq	40bfe4 <ferror@plt+0x9154>  // b.none
  40bfb0:	subs	w0, w12, w13
  40bfb4:	b.ne	40c09c <ferror@plt+0x920c>  // b.any
  40bfb8:	add	x11, x11, #0x1
  40bfbc:	add	x9, x9, #0x1
  40bfc0:	cmp	x11, x22
  40bfc4:	b.cc	40bf08 <ferror@plt+0x9078>  // b.lo, b.ul, b.last
  40bfc8:	b	40bf18 <ferror@plt+0x9088>
  40bfcc:	orr	w13, w12, #0x100
  40bfd0:	cmp	w12, #0x7e
  40bfd4:	csinv	w12, w13, wzr, ne  // ne = any
  40bfd8:	cmp	x8, x9
  40bfdc:	b.eq	40bf88 <ferror@plt+0x90f8>  // b.none
  40bfe0:	b	40bf78 <ferror@plt+0x90e8>
  40bfe4:	orr	w14, w13, #0x100
  40bfe8:	cmp	w13, #0x7e
  40bfec:	csinv	w13, w14, wzr, ne  // ne = any
  40bff0:	subs	w0, w12, w13
  40bff4:	b.eq	40bfb8 <ferror@plt+0x9128>  // b.none
  40bff8:	b	40c09c <ferror@plt+0x920c>
  40bffc:	mov	x12, x11
  40c000:	ldrb	w13, [x21, x12]
  40c004:	add	x12, x12, #0x1
  40c008:	subs	w16, w13, #0x30
  40c00c:	b.eq	40c000 <ferror@plt+0x9170>  // b.none
  40c010:	sub	x11, x12, #0x1
  40c014:	ldrb	w15, [x19, x9]
  40c018:	add	x9, x9, #0x1
  40c01c:	subs	w14, w15, #0x30
  40c020:	b.eq	40c014 <ferror@plt+0x9184>  // b.none
  40c024:	cmp	w14, #0xa
  40c028:	cset	w14, cc  // cc = lo, ul, last
  40c02c:	cmp	w16, #0x9
  40c030:	b.hi	40c088 <ferror@plt+0x91f8>  // b.pmore
  40c034:	mov	x11, xzr
  40c038:	mov	w0, wzr
  40c03c:	add	x16, x21, x12
  40c040:	add	x17, x19, x9
  40c044:	tbz	w14, #0, 40be78 <ferror@plt+0x8fe8>
  40c048:	sub	w14, w13, w15
  40c04c:	ldrb	w15, [x17, x11]
  40c050:	ldrb	w13, [x16, x11]
  40c054:	cmp	w0, #0x0
  40c058:	csel	w0, w14, w0, eq  // eq = none
  40c05c:	sub	w14, w15, #0x30
  40c060:	sub	w18, w13, #0x30
  40c064:	cmp	w14, #0xa
  40c068:	cset	w14, cc  // cc = lo, ul, last
  40c06c:	cmp	w18, #0xa
  40c070:	add	x11, x11, #0x1
  40c074:	b.cc	40c044 <ferror@plt+0x91b4>  // b.lo, b.ul, b.last
  40c078:	add	x12, x12, x11
  40c07c:	add	x9, x9, x11
  40c080:	sub	x11, x12, #0x1
  40c084:	b	40c08c <ferror@plt+0x91fc>
  40c088:	mov	w0, wzr
  40c08c:	sub	x9, x9, #0x1
  40c090:	tbnz	w14, #0, 40bdbc <ferror@plt+0x8f2c>
  40c094:	cbz	w0, 40bef0 <ferror@plt+0x9060>
  40c098:	b	40be7c <ferror@plt+0x8fec>
  40c09c:	b.ne	40be7c <ferror@plt+0x8fec>  // b.any
  40c0a0:	mov	w0, w20
  40c0a4:	b	40be7c <ferror@plt+0x8fec>
  40c0a8:	mov	w24, #0x2e                  	// #46
  40c0ac:	mov	w8, wzr
  40c0b0:	mov	x22, xzr
  40c0b4:	mov	w25, #0x1                   	// #1
  40c0b8:	mov	x23, x21
  40c0bc:	b	40c0d4 <ferror@plt+0x9244>
  40c0c0:	cmp	x22, #0x0
  40c0c4:	csel	x22, x23, x22, eq  // eq = none
  40c0c8:	mov	w8, #0x1                   	// #1
  40c0cc:	ldrb	w24, [x23, #1]!
  40c0d0:	cbz	w24, 40bde8 <ferror@plt+0x8f58>
  40c0d4:	tbz	w8, #0, 40c0fc <ferror@plt+0x926c>
  40c0d8:	and	w9, w24, #0xff
  40c0dc:	sub	w8, w9, #0x41
  40c0e0:	cmp	w8, #0x39
  40c0e4:	b.hi	40c124 <ferror@plt+0x9294>  // b.pmore
  40c0e8:	lsl	x8, x25, x8
  40c0ec:	tst	x8, #0x3ffffff03ffffff
  40c0f0:	b.eq	40c124 <ferror@plt+0x9294>  // b.none
  40c0f4:	mov	w8, wzr
  40c0f8:	b	40c0cc <ferror@plt+0x923c>
  40c0fc:	and	w0, w24, #0xff
  40c100:	cmp	w0, #0x2e
  40c104:	b.eq	40c0c0 <ferror@plt+0x9230>  // b.none
  40c108:	bl	412a88 <_obstack_memory_used@@Base+0x74>
  40c10c:	mov	w8, wzr
  40c110:	tbnz	w0, #0, 40c0cc <ferror@plt+0x923c>
  40c114:	ldrb	w9, [x23]
  40c118:	cmp	w9, #0x7e
  40c11c:	csel	x22, x22, xzr, eq  // eq = none
  40c120:	b	40c0cc <ferror@plt+0x923c>
  40c124:	mov	w8, wzr
  40c128:	b	40c118 <ferror@plt+0x9288>
  40c12c:	stp	x29, x30, [sp, #-32]!
  40c130:	mov	x1, xzr
  40c134:	str	x19, [sp, #16]
  40c138:	mov	x29, sp
  40c13c:	bl	402e80 <setlocale@plt>
  40c140:	cbz	x0, 40c16c <ferror@plt+0x92dc>
  40c144:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c148:	add	x1, x1, #0x446
  40c14c:	mov	x19, x0
  40c150:	bl	402bb0 <strcmp@plt>
  40c154:	cbz	w0, 40c17c <ferror@plt+0x92ec>
  40c158:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c15c:	add	x1, x1, #0xb73
  40c160:	mov	x0, x19
  40c164:	bl	402bb0 <strcmp@plt>
  40c168:	cbz	w0, 40c17c <ferror@plt+0x92ec>
  40c16c:	mov	w0, #0x1                   	// #1
  40c170:	ldr	x19, [sp, #16]
  40c174:	ldp	x29, x30, [sp], #32
  40c178:	ret
  40c17c:	mov	w0, wzr
  40c180:	ldr	x19, [sp, #16]
  40c184:	ldp	x29, x30, [sp], #32
  40c188:	ret
  40c18c:	ldr	x0, [x0, #16]
  40c190:	ret
  40c194:	ldr	x0, [x0, #24]
  40c198:	ret
  40c19c:	ldr	x0, [x0, #32]
  40c1a0:	ret
  40c1a4:	ldp	x8, x9, [x0]
  40c1a8:	cmp	x8, x9
  40c1ac:	b.cs	40c1ec <ferror@plt+0x935c>  // b.hs, b.nlast
  40c1b0:	mov	x0, xzr
  40c1b4:	b	40c1c4 <ferror@plt+0x9334>
  40c1b8:	add	x8, x8, #0x10
  40c1bc:	cmp	x8, x9
  40c1c0:	b.cs	40c1f0 <ferror@plt+0x9360>  // b.hs, b.nlast
  40c1c4:	ldr	x10, [x8]
  40c1c8:	cbz	x10, 40c1b8 <ferror@plt+0x9328>
  40c1cc:	mov	x10, xzr
  40c1d0:	mov	x11, x8
  40c1d4:	ldr	x11, [x11, #8]
  40c1d8:	add	x10, x10, #0x1
  40c1dc:	cbnz	x11, 40c1d4 <ferror@plt+0x9344>
  40c1e0:	cmp	x10, x0
  40c1e4:	csel	x0, x10, x0, hi  // hi = pmore
  40c1e8:	b	40c1b8 <ferror@plt+0x9328>
  40c1ec:	mov	x0, xzr
  40c1f0:	ret
  40c1f4:	ldp	x9, x10, [x0]
  40c1f8:	cmp	x9, x10
  40c1fc:	b.cs	40c238 <ferror@plt+0x93a8>  // b.hs, b.nlast
  40c200:	mov	x8, xzr
  40c204:	mov	x11, xzr
  40c208:	b	40c218 <ferror@plt+0x9388>
  40c20c:	add	x9, x9, #0x10
  40c210:	cmp	x9, x10
  40c214:	b.cs	40c240 <ferror@plt+0x93b0>  // b.hs, b.nlast
  40c218:	ldr	x12, [x9]
  40c21c:	cbz	x12, 40c20c <ferror@plt+0x937c>
  40c220:	mov	x12, x9
  40c224:	ldr	x12, [x12, #8]
  40c228:	add	x8, x8, #0x1
  40c22c:	cbnz	x12, 40c224 <ferror@plt+0x9394>
  40c230:	add	x11, x11, #0x1
  40c234:	b	40c20c <ferror@plt+0x937c>
  40c238:	mov	x11, xzr
  40c23c:	mov	x8, xzr
  40c240:	ldr	x9, [x0, #24]
  40c244:	cmp	x11, x9
  40c248:	b.ne	40c260 <ferror@plt+0x93d0>  // b.any
  40c24c:	ldr	x9, [x0, #32]
  40c250:	cmp	x8, x9
  40c254:	b.ne	40c260 <ferror@plt+0x93d0>  // b.any
  40c258:	mov	w0, #0x1                   	// #1
  40c25c:	ret
  40c260:	mov	w0, wzr
  40c264:	ret
  40c268:	stp	x29, x30, [sp, #-48]!
  40c26c:	stp	x22, x21, [sp, #16]
  40c270:	stp	x20, x19, [sp, #32]
  40c274:	ldp	x8, x9, [x0]
  40c278:	ldp	x20, x3, [x0, #24]
  40c27c:	ldr	x22, [x0, #16]
  40c280:	mov	x19, x1
  40c284:	cmp	x8, x9
  40c288:	mov	x21, xzr
  40c28c:	mov	x29, sp
  40c290:	b.cc	40c320 <ferror@plt+0x9490>  // b.lo, b.ul, b.last
  40c294:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c298:	add	x2, x2, #0xb79
  40c29c:	mov	w1, #0x1                   	// #1
  40c2a0:	mov	x0, x19
  40c2a4:	bl	402b90 <__fprintf_chk@plt>
  40c2a8:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c2ac:	add	x2, x2, #0xb91
  40c2b0:	mov	w1, #0x1                   	// #1
  40c2b4:	mov	x0, x19
  40c2b8:	mov	x3, x22
  40c2bc:	bl	402b90 <__fprintf_chk@plt>
  40c2c0:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40c2c4:	ucvtf	d0, x20
  40c2c8:	fmov	d1, x8
  40c2cc:	fmul	d0, d0, d1
  40c2d0:	ucvtf	d1, x22
  40c2d4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c2d8:	fdiv	d0, d0, d1
  40c2dc:	add	x2, x2, #0xba9
  40c2e0:	mov	w1, #0x1                   	// #1
  40c2e4:	mov	x0, x19
  40c2e8:	mov	x3, x20
  40c2ec:	bl	402b90 <__fprintf_chk@plt>
  40c2f0:	mov	x0, x19
  40c2f4:	mov	x3, x21
  40c2f8:	ldp	x20, x19, [sp, #32]
  40c2fc:	ldp	x22, x21, [sp, #16]
  40c300:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c304:	add	x2, x2, #0xbca
  40c308:	mov	w1, #0x1                   	// #1
  40c30c:	ldp	x29, x30, [sp], #48
  40c310:	b	402b90 <__fprintf_chk@plt>
  40c314:	add	x8, x8, #0x10
  40c318:	cmp	x8, x9
  40c31c:	b.cs	40c294 <ferror@plt+0x9404>  // b.hs, b.nlast
  40c320:	ldr	x10, [x8]
  40c324:	cbz	x10, 40c314 <ferror@plt+0x9484>
  40c328:	mov	x10, xzr
  40c32c:	mov	x11, x8
  40c330:	ldr	x11, [x11, #8]
  40c334:	add	x10, x10, #0x1
  40c338:	cbnz	x11, 40c330 <ferror@plt+0x94a0>
  40c33c:	cmp	x10, x21
  40c340:	csel	x21, x10, x21, hi  // hi = pmore
  40c344:	b	40c314 <ferror@plt+0x9484>
  40c348:	stp	x29, x30, [sp, #-48]!
  40c34c:	stp	x20, x19, [sp, #32]
  40c350:	ldr	x8, [x0, #16]
  40c354:	ldr	x9, [x0, #48]
  40c358:	mov	x19, x0
  40c35c:	mov	x20, x1
  40c360:	mov	x0, x1
  40c364:	mov	x1, x8
  40c368:	str	x21, [sp, #16]
  40c36c:	mov	x29, sp
  40c370:	blr	x9
  40c374:	ldr	x8, [x19, #16]
  40c378:	cmp	x0, x8
  40c37c:	b.cs	40c400 <ferror@plt+0x9570>  // b.hs, b.nlast
  40c380:	ldr	x8, [x19]
  40c384:	add	x21, x8, x0, lsl #4
  40c388:	ldr	x1, [x21]
  40c38c:	mov	x0, xzr
  40c390:	cbz	x1, 40c3c8 <ferror@plt+0x9538>
  40c394:	cbz	x8, 40c3c8 <ferror@plt+0x9538>
  40c398:	cmp	x1, x20
  40c39c:	b.eq	40c3c4 <ferror@plt+0x9534>  // b.none
  40c3a0:	ldr	x8, [x19, #56]
  40c3a4:	mov	x0, x20
  40c3a8:	blr	x8
  40c3ac:	tbnz	w0, #0, 40c3d8 <ferror@plt+0x9548>
  40c3b0:	ldr	x21, [x21, #8]
  40c3b4:	cbz	x21, 40c3ec <ferror@plt+0x955c>
  40c3b8:	ldr	x1, [x21]
  40c3bc:	cmp	x1, x20
  40c3c0:	b.ne	40c3a0 <ferror@plt+0x9510>  // b.any
  40c3c4:	mov	x0, x20
  40c3c8:	ldp	x20, x19, [sp, #32]
  40c3cc:	ldr	x21, [sp, #16]
  40c3d0:	ldp	x29, x30, [sp], #48
  40c3d4:	ret
  40c3d8:	ldr	x0, [x21]
  40c3dc:	ldp	x20, x19, [sp, #32]
  40c3e0:	ldr	x21, [sp, #16]
  40c3e4:	ldp	x29, x30, [sp], #48
  40c3e8:	ret
  40c3ec:	mov	x0, xzr
  40c3f0:	ldp	x20, x19, [sp, #32]
  40c3f4:	ldr	x21, [sp, #16]
  40c3f8:	ldp	x29, x30, [sp], #48
  40c3fc:	ret
  40c400:	bl	402ae0 <abort@plt>
  40c404:	stp	x29, x30, [sp, #-16]!
  40c408:	ldr	x8, [x0, #32]
  40c40c:	mov	x29, sp
  40c410:	cbz	x8, 40c430 <ferror@plt+0x95a0>
  40c414:	ldp	x8, x9, [x0]
  40c418:	cmp	x8, x9
  40c41c:	b.cs	40c43c <ferror@plt+0x95ac>  // b.hs, b.nlast
  40c420:	ldr	x0, [x8], #16
  40c424:	cbz	x0, 40c418 <ferror@plt+0x9588>
  40c428:	ldp	x29, x30, [sp], #16
  40c42c:	ret
  40c430:	mov	x0, xzr
  40c434:	ldp	x29, x30, [sp], #16
  40c438:	ret
  40c43c:	bl	402ae0 <abort@plt>
  40c440:	stp	x29, x30, [sp, #-32]!
  40c444:	stp	x20, x19, [sp, #16]
  40c448:	ldr	x8, [x0, #16]
  40c44c:	ldr	x9, [x0, #48]
  40c450:	mov	x19, x0
  40c454:	mov	x20, x1
  40c458:	mov	x0, x1
  40c45c:	mov	x1, x8
  40c460:	mov	x29, sp
  40c464:	blr	x9
  40c468:	ldr	x8, [x19, #16]
  40c46c:	cmp	x0, x8
  40c470:	b.cs	40c4d4 <ferror@plt+0x9644>  // b.hs, b.nlast
  40c474:	ldr	x8, [x19]
  40c478:	add	x9, x8, x0, lsl #4
  40c47c:	ldp	x10, x9, [x9]
  40c480:	cmp	x10, x20
  40c484:	b.eq	40c490 <ferror@plt+0x9600>  // b.none
  40c488:	cbnz	x9, 40c47c <ferror@plt+0x95ec>
  40c48c:	b	40c4a4 <ferror@plt+0x9614>
  40c490:	cbz	x9, 40c4a4 <ferror@plt+0x9614>
  40c494:	ldr	x0, [x9]
  40c498:	ldp	x20, x19, [sp, #16]
  40c49c:	ldp	x29, x30, [sp], #32
  40c4a0:	ret
  40c4a4:	ldr	x9, [x19, #8]
  40c4a8:	add	x8, x8, x0, lsl #4
  40c4ac:	add	x8, x8, #0x10
  40c4b0:	cmp	x8, x9
  40c4b4:	b.cs	40c4c4 <ferror@plt+0x9634>  // b.hs, b.nlast
  40c4b8:	ldr	x0, [x8], #16
  40c4bc:	cbz	x0, 40c4b0 <ferror@plt+0x9620>
  40c4c0:	b	40c498 <ferror@plt+0x9608>
  40c4c4:	mov	x0, xzr
  40c4c8:	ldp	x20, x19, [sp, #16]
  40c4cc:	ldp	x29, x30, [sp], #32
  40c4d0:	ret
  40c4d4:	bl	402ae0 <abort@plt>
  40c4d8:	ldp	x9, x10, [x0]
  40c4dc:	cmp	x9, x10
  40c4e0:	b.cs	40c54c <ferror@plt+0x96bc>  // b.hs, b.nlast
  40c4e4:	mov	x11, xzr
  40c4e8:	ldr	x8, [x9]
  40c4ec:	cbz	x8, 40c530 <ferror@plt+0x96a0>
  40c4f0:	cbz	x9, 40c530 <ferror@plt+0x96a0>
  40c4f4:	mov	x10, x9
  40c4f8:	cmp	x11, x2
  40c4fc:	b.cs	40c554 <ferror@plt+0x96c4>  // b.hs, b.nlast
  40c500:	ldr	x8, [x10]
  40c504:	str	x8, [x1, x11, lsl #3]
  40c508:	ldr	x10, [x10, #8]
  40c50c:	add	x8, x11, #0x1
  40c510:	mov	x11, x8
  40c514:	cbnz	x10, 40c4f8 <ferror@plt+0x9668>
  40c518:	ldr	x10, [x0, #8]
  40c51c:	add	x9, x9, #0x10
  40c520:	cmp	x9, x10
  40c524:	mov	x11, x8
  40c528:	b.cc	40c4e8 <ferror@plt+0x9658>  // b.lo, b.ul, b.last
  40c52c:	b	40c544 <ferror@plt+0x96b4>
  40c530:	mov	x8, x11
  40c534:	add	x9, x9, #0x10
  40c538:	cmp	x9, x10
  40c53c:	mov	x11, x8
  40c540:	b.cc	40c4e8 <ferror@plt+0x9658>  // b.lo, b.ul, b.last
  40c544:	mov	x0, x8
  40c548:	ret
  40c54c:	mov	x0, xzr
  40c550:	ret
  40c554:	mov	x0, x11
  40c558:	ret
  40c55c:	stp	x29, x30, [sp, #-64]!
  40c560:	stp	x24, x23, [sp, #16]
  40c564:	stp	x22, x21, [sp, #32]
  40c568:	stp	x20, x19, [sp, #48]
  40c56c:	ldp	x23, x8, [x0]
  40c570:	mov	x29, sp
  40c574:	cmp	x23, x8
  40c578:	b.cs	40c590 <ferror@plt+0x9700>  // b.hs, b.nlast
  40c57c:	mov	x19, x2
  40c580:	mov	x20, x0
  40c584:	mov	x21, x1
  40c588:	mov	x22, xzr
  40c58c:	b	40c5a8 <ferror@plt+0x9718>
  40c590:	mov	x22, xzr
  40c594:	b	40c5e0 <ferror@plt+0x9750>
  40c598:	ldr	x8, [x20, #8]
  40c59c:	add	x23, x23, #0x10
  40c5a0:	cmp	x23, x8
  40c5a4:	b.cs	40c5e0 <ferror@plt+0x9750>  // b.hs, b.nlast
  40c5a8:	ldr	x0, [x23]
  40c5ac:	cbz	x0, 40c59c <ferror@plt+0x970c>
  40c5b0:	cbz	x23, 40c59c <ferror@plt+0x970c>
  40c5b4:	mov	x1, x19
  40c5b8:	blr	x21
  40c5bc:	tbz	w0, #0, 40c5e0 <ferror@plt+0x9750>
  40c5c0:	mov	x24, x23
  40c5c4:	ldr	x24, [x24, #8]
  40c5c8:	add	x22, x22, #0x1
  40c5cc:	cbz	x24, 40c598 <ferror@plt+0x9708>
  40c5d0:	ldr	x0, [x24]
  40c5d4:	mov	x1, x19
  40c5d8:	blr	x21
  40c5dc:	tbnz	w0, #0, 40c5c4 <ferror@plt+0x9734>
  40c5e0:	mov	x0, x22
  40c5e4:	ldp	x20, x19, [sp, #48]
  40c5e8:	ldp	x22, x21, [sp, #32]
  40c5ec:	ldp	x24, x23, [sp, #16]
  40c5f0:	ldp	x29, x30, [sp], #64
  40c5f4:	ret
  40c5f8:	ldrb	w9, [x0]
  40c5fc:	cbz	w9, 40c62c <ferror@plt+0x979c>
  40c600:	mov	x8, x0
  40c604:	mov	x0, xzr
  40c608:	add	x8, x8, #0x1
  40c60c:	lsl	x10, x0, #5
  40c610:	sub	x10, x10, x0
  40c614:	add	x10, x10, w9, uxtb
  40c618:	ldrb	w9, [x8], #1
  40c61c:	udiv	x11, x10, x1
  40c620:	msub	x0, x11, x1, x10
  40c624:	cbnz	w9, 40c60c <ferror@plt+0x977c>
  40c628:	ret
  40c62c:	mov	x0, xzr
  40c630:	ret
  40c634:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c638:	add	x8, x8, #0xbe4
  40c63c:	ldr	w9, [x8, #16]
  40c640:	ldr	q0, [x8]
  40c644:	str	w9, [x0, #16]
  40c648:	str	q0, [x0]
  40c64c:	ret
  40c650:	stp	x29, x30, [sp, #-64]!
  40c654:	adrp	x8, 40c000 <ferror@plt+0x9170>
  40c658:	add	x8, x8, #0x838
  40c65c:	cmp	x2, #0x0
  40c660:	adrp	x9, 40c000 <ferror@plt+0x9170>
  40c664:	stp	x24, x23, [sp, #16]
  40c668:	stp	x22, x21, [sp, #32]
  40c66c:	mov	x21, x0
  40c670:	add	x9, x9, #0x848
  40c674:	csel	x23, x8, x2, eq  // eq = none
  40c678:	cmp	x3, #0x0
  40c67c:	mov	w0, #0x50                  	// #80
  40c680:	stp	x20, x19, [sp, #48]
  40c684:	mov	x29, sp
  40c688:	mov	x19, x4
  40c68c:	mov	x22, x1
  40c690:	csel	x24, x9, x3, eq  // eq = none
  40c694:	bl	402930 <malloc@plt>
  40c698:	mov	x20, x0
  40c69c:	cbz	x0, 40c820 <ferror@plt+0x9990>
  40c6a0:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40c6a4:	add	x9, x9, #0xbe4
  40c6a8:	cmp	x22, #0x0
  40c6ac:	csel	x8, x9, x22, eq  // eq = none
  40c6b0:	cmp	x8, x9
  40c6b4:	str	x8, [x20, #40]
  40c6b8:	b.eq	40c73c <ferror@plt+0x98ac>  // b.none
  40c6bc:	ldr	s0, [x8, #8]
  40c6c0:	mov	w9, #0xcccd                	// #52429
  40c6c4:	movk	w9, #0x3dcc, lsl #16
  40c6c8:	fmov	s1, w9
  40c6cc:	fcmp	s0, s1
  40c6d0:	b.le	40c814 <ferror@plt+0x9984>
  40c6d4:	mov	w9, #0x6666                	// #26214
  40c6d8:	movk	w9, #0x3f66, lsl #16
  40c6dc:	fmov	s1, w9
  40c6e0:	fcmp	s0, s1
  40c6e4:	b.pl	40c814 <ferror@plt+0x9984>  // b.nfrst
  40c6e8:	ldr	s1, [x8, #12]
  40c6ec:	mov	w9, #0xcccd                	// #52429
  40c6f0:	movk	w9, #0x3f8c, lsl #16
  40c6f4:	fmov	s2, w9
  40c6f8:	fcmp	s1, s2
  40c6fc:	b.le	40c814 <ferror@plt+0x9984>
  40c700:	ldr	s1, [x8]
  40c704:	fcmp	s1, #0.0
  40c708:	b.lt	40c814 <ferror@plt+0x9984>  // b.tstop
  40c70c:	mov	w9, #0xcccd                	// #52429
  40c710:	movk	w9, #0x3dcc, lsl #16
  40c714:	fmov	s2, w9
  40c718:	fadd	s1, s1, s2
  40c71c:	fcmp	s1, s0
  40c720:	b.pl	40c814 <ferror@plt+0x9984>  // b.nfrst
  40c724:	ldr	s0, [x8, #4]
  40c728:	fmov	s2, #1.000000000000000000e+00
  40c72c:	fcmp	s0, s2
  40c730:	b.hi	40c814 <ferror@plt+0x9984>  // b.pmore
  40c734:	fcmp	s1, s0
  40c738:	b.pl	40c814 <ferror@plt+0x9984>  // b.nfrst
  40c73c:	ldrb	w9, [x8, #16]
  40c740:	cbnz	w9, 40c764 <ferror@plt+0x98d4>
  40c744:	ldr	s0, [x8, #8]
  40c748:	ucvtf	s1, x21
  40c74c:	mov	w8, #0x5f800000            	// #1602224128
  40c750:	fdiv	s0, s1, s0
  40c754:	fmov	s1, w8
  40c758:	fcmp	s0, s1
  40c75c:	b.ge	40c814 <ferror@plt+0x9984>  // b.tcont
  40c760:	fcvtzu	x21, s0
  40c764:	cmp	x21, #0xa
  40c768:	mov	w8, #0xa                   	// #10
  40c76c:	csel	x8, x21, x8, hi  // hi = pmore
  40c770:	orr	x21, x8, #0x1
  40c774:	cmn	x21, #0x1
  40c778:	b.eq	40c814 <ferror@plt+0x9984>  // b.none
  40c77c:	cmp	x21, #0xa
  40c780:	b.cc	40c7b8 <ferror@plt+0x9928>  // b.lo, b.ul, b.last
  40c784:	mov	w9, #0xc                   	// #12
  40c788:	mov	w10, #0x9                   	// #9
  40c78c:	mov	w8, #0x3                   	// #3
  40c790:	udiv	x11, x21, x8
  40c794:	msub	x11, x11, x8, x21
  40c798:	cbz	x11, 40c7bc <ferror@plt+0x992c>
  40c79c:	add	x10, x10, x9
  40c7a0:	add	x10, x10, #0x4
  40c7a4:	add	x8, x8, #0x2
  40c7a8:	cmp	x10, x21
  40c7ac:	add	x9, x9, #0x8
  40c7b0:	b.cc	40c790 <ferror@plt+0x9900>  // b.lo, b.ul, b.last
  40c7b4:	b	40c7bc <ferror@plt+0x992c>
  40c7b8:	mov	w8, #0x3                   	// #3
  40c7bc:	udiv	x9, x21, x8
  40c7c0:	msub	x8, x9, x8, x21
  40c7c4:	cbnz	x8, 40c7d8 <ferror@plt+0x9948>
  40c7c8:	add	x21, x21, #0x2
  40c7cc:	cmn	x21, #0x1
  40c7d0:	b.ne	40c77c <ferror@plt+0x98ec>  // b.any
  40c7d4:	b	40c814 <ferror@plt+0x9984>
  40c7d8:	lsr	x8, x21, #60
  40c7dc:	cbnz	x8, 40c814 <ferror@plt+0x9984>
  40c7e0:	str	x21, [x20, #16]
  40c7e4:	cbz	x21, 40c814 <ferror@plt+0x9984>
  40c7e8:	mov	w1, #0x10                  	// #16
  40c7ec:	mov	x0, x21
  40c7f0:	bl	412108 <ferror@plt+0xf278>
  40c7f4:	str	x0, [x20]
  40c7f8:	cbz	x0, 40c814 <ferror@plt+0x9984>
  40c7fc:	add	x8, x0, x21, lsl #4
  40c800:	stp	xzr, xzr, [x20, #24]
  40c804:	stp	x23, x24, [x20, #48]
  40c808:	str	x8, [x20, #8]
  40c80c:	stp	x19, xzr, [x20, #64]
  40c810:	b	40c820 <ferror@plt+0x9990>
  40c814:	mov	x0, x20
  40c818:	bl	402c00 <free@plt>
  40c81c:	mov	x20, xzr
  40c820:	mov	x0, x20
  40c824:	ldp	x20, x19, [sp, #48]
  40c828:	ldp	x22, x21, [sp, #32]
  40c82c:	ldp	x24, x23, [sp, #16]
  40c830:	ldp	x29, x30, [sp], #64
  40c834:	ret
  40c838:	ror	x8, x0, #3
  40c83c:	udiv	x9, x8, x1
  40c840:	msub	x0, x9, x1, x8
  40c844:	ret
  40c848:	cmp	x0, x1
  40c84c:	cset	w0, eq  // eq = none
  40c850:	ret
  40c854:	stp	x29, x30, [sp, #-48]!
  40c858:	str	x21, [sp, #16]
  40c85c:	stp	x20, x19, [sp, #32]
  40c860:	ldp	x20, x8, [x0]
  40c864:	mov	x19, x0
  40c868:	mov	x29, sp
  40c86c:	b	40c87c <ferror@plt+0x99ec>
  40c870:	stp	xzr, xzr, [x20]
  40c874:	ldr	x8, [x19, #8]
  40c878:	add	x20, x20, #0x10
  40c87c:	cmp	x20, x8
  40c880:	b.cs	40c8e8 <ferror@plt+0x9a58>  // b.hs, b.nlast
  40c884:	ldr	x9, [x20]
  40c888:	cbz	x9, 40c878 <ferror@plt+0x99e8>
  40c88c:	ldr	x8, [x19, #64]
  40c890:	ldr	x21, [x20, #8]
  40c894:	cmp	x8, #0x0
  40c898:	cset	w9, ne  // ne = any
  40c89c:	cbnz	x21, 40c8d4 <ferror@plt+0x9a44>
  40c8a0:	cbz	w9, 40c870 <ferror@plt+0x99e0>
  40c8a4:	ldr	x0, [x20]
  40c8a8:	blr	x8
  40c8ac:	b	40c870 <ferror@plt+0x99e0>
  40c8b0:	str	xzr, [x21]
  40c8b4:	ldr	x9, [x19, #72]
  40c8b8:	ldr	x10, [x21, #8]
  40c8bc:	cmp	x8, #0x0
  40c8c0:	str	x9, [x21, #8]
  40c8c4:	str	x21, [x19, #72]
  40c8c8:	cset	w9, ne  // ne = any
  40c8cc:	mov	x21, x10
  40c8d0:	cbz	x10, 40c8a0 <ferror@plt+0x9a10>
  40c8d4:	tbz	w9, #0, 40c8b0 <ferror@plt+0x9a20>
  40c8d8:	ldr	x0, [x21]
  40c8dc:	blr	x8
  40c8e0:	ldr	x8, [x19, #64]
  40c8e4:	b	40c8b0 <ferror@plt+0x9a20>
  40c8e8:	stp	xzr, xzr, [x19, #24]
  40c8ec:	ldp	x20, x19, [sp, #32]
  40c8f0:	ldr	x21, [sp, #16]
  40c8f4:	ldp	x29, x30, [sp], #48
  40c8f8:	ret
  40c8fc:	stp	x29, x30, [sp, #-48]!
  40c900:	stp	x20, x19, [sp, #32]
  40c904:	ldr	x8, [x0, #64]
  40c908:	mov	x19, x0
  40c90c:	str	x21, [sp, #16]
  40c910:	mov	x29, sp
  40c914:	cbz	x8, 40c96c <ferror@plt+0x9adc>
  40c918:	ldr	x8, [x19, #32]
  40c91c:	cbz	x8, 40c96c <ferror@plt+0x9adc>
  40c920:	ldp	x20, x8, [x19]
  40c924:	b	40c930 <ferror@plt+0x9aa0>
  40c928:	ldr	x8, [x19, #8]
  40c92c:	add	x20, x20, #0x10
  40c930:	cmp	x20, x8
  40c934:	b.cs	40c96c <ferror@plt+0x9adc>  // b.hs, b.nlast
  40c938:	ldr	x0, [x20]
  40c93c:	cbz	x0, 40c92c <ferror@plt+0x9a9c>
  40c940:	cbz	x20, 40c92c <ferror@plt+0x9a9c>
  40c944:	ldr	x8, [x19, #64]
  40c948:	blr	x8
  40c94c:	ldr	x21, [x20, #8]
  40c950:	cbz	x21, 40c928 <ferror@plt+0x9a98>
  40c954:	ldr	x0, [x21]
  40c958:	ldr	x8, [x19, #64]
  40c95c:	blr	x8
  40c960:	ldr	x21, [x21, #8]
  40c964:	cbnz	x21, 40c954 <ferror@plt+0x9ac4>
  40c968:	b	40c928 <ferror@plt+0x9a98>
  40c96c:	ldp	x20, x8, [x19]
  40c970:	b	40c978 <ferror@plt+0x9ae8>
  40c974:	add	x20, x20, #0x10
  40c978:	cmp	x20, x8
  40c97c:	b.cs	40c9a0 <ferror@plt+0x9b10>  // b.hs, b.nlast
  40c980:	ldr	x0, [x20, #8]
  40c984:	cbz	x0, 40c974 <ferror@plt+0x9ae4>
  40c988:	ldr	x21, [x0, #8]
  40c98c:	bl	402c00 <free@plt>
  40c990:	mov	x0, x21
  40c994:	cbnz	x21, 40c988 <ferror@plt+0x9af8>
  40c998:	ldr	x8, [x19, #8]
  40c99c:	b	40c974 <ferror@plt+0x9ae4>
  40c9a0:	ldr	x0, [x19, #72]
  40c9a4:	cbz	x0, 40c9b8 <ferror@plt+0x9b28>
  40c9a8:	ldr	x20, [x0, #8]
  40c9ac:	bl	402c00 <free@plt>
  40c9b0:	mov	x0, x20
  40c9b4:	cbnz	x20, 40c9a8 <ferror@plt+0x9b18>
  40c9b8:	ldr	x0, [x19]
  40c9bc:	bl	402c00 <free@plt>
  40c9c0:	mov	x0, x19
  40c9c4:	ldp	x20, x19, [sp, #32]
  40c9c8:	ldr	x21, [sp, #16]
  40c9cc:	ldp	x29, x30, [sp], #48
  40c9d0:	b	402c00 <free@plt>
  40c9d4:	sub	sp, sp, #0x90
  40c9d8:	stp	x29, x30, [sp, #80]
  40c9dc:	stp	x24, x23, [sp, #96]
  40c9e0:	stp	x22, x21, [sp, #112]
  40c9e4:	stp	x20, x19, [sp, #128]
  40c9e8:	ldr	x8, [x0, #40]
  40c9ec:	mov	x19, x0
  40c9f0:	add	x29, sp, #0x50
  40c9f4:	ldrb	w9, [x8, #16]
  40c9f8:	cbnz	w9, 40ca1c <ferror@plt+0x9b8c>
  40c9fc:	ldr	s0, [x8, #8]
  40ca00:	ucvtf	s1, x1
  40ca04:	mov	w8, #0x5f800000            	// #1602224128
  40ca08:	fdiv	s0, s1, s0
  40ca0c:	fmov	s1, w8
  40ca10:	fcmp	s0, s1
  40ca14:	b.ge	40caa0 <ferror@plt+0x9c10>  // b.tcont
  40ca18:	fcvtzu	x1, s0
  40ca1c:	cmp	x1, #0xa
  40ca20:	mov	w8, #0xa                   	// #10
  40ca24:	csel	x8, x1, x8, hi  // hi = pmore
  40ca28:	orr	x20, x8, #0x1
  40ca2c:	cmn	x20, #0x1
  40ca30:	b.eq	40caa0 <ferror@plt+0x9c10>  // b.none
  40ca34:	cmp	x20, #0xa
  40ca38:	b.cc	40ca70 <ferror@plt+0x9be0>  // b.lo, b.ul, b.last
  40ca3c:	mov	w9, #0xc                   	// #12
  40ca40:	mov	w10, #0x9                   	// #9
  40ca44:	mov	w8, #0x3                   	// #3
  40ca48:	udiv	x11, x20, x8
  40ca4c:	msub	x11, x11, x8, x20
  40ca50:	cbz	x11, 40ca74 <ferror@plt+0x9be4>
  40ca54:	add	x10, x10, x9
  40ca58:	add	x10, x10, #0x4
  40ca5c:	add	x8, x8, #0x2
  40ca60:	cmp	x10, x20
  40ca64:	add	x9, x9, #0x8
  40ca68:	b.cc	40ca48 <ferror@plt+0x9bb8>  // b.lo, b.ul, b.last
  40ca6c:	b	40ca74 <ferror@plt+0x9be4>
  40ca70:	mov	w8, #0x3                   	// #3
  40ca74:	udiv	x9, x20, x8
  40ca78:	msub	x8, x9, x8, x20
  40ca7c:	cbnz	x8, 40ca90 <ferror@plt+0x9c00>
  40ca80:	add	x20, x20, #0x2
  40ca84:	cmn	x20, #0x1
  40ca88:	b.ne	40ca34 <ferror@plt+0x9ba4>  // b.any
  40ca8c:	b	40caa0 <ferror@plt+0x9c10>
  40ca90:	sub	x8, x20, #0x1
  40ca94:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  40ca98:	cmp	x8, x9
  40ca9c:	b.ls	40cabc <ferror@plt+0x9c2c>  // b.plast
  40caa0:	mov	w0, wzr
  40caa4:	ldp	x20, x19, [sp, #128]
  40caa8:	ldp	x22, x21, [sp, #112]
  40caac:	ldp	x24, x23, [sp, #96]
  40cab0:	ldp	x29, x30, [sp, #80]
  40cab4:	add	sp, sp, #0x90
  40cab8:	ret
  40cabc:	ldr	x8, [x19, #16]
  40cac0:	cmp	x20, x8
  40cac4:	b.ne	40cad0 <ferror@plt+0x9c40>  // b.any
  40cac8:	mov	w0, #0x1                   	// #1
  40cacc:	b	40caa4 <ferror@plt+0x9c14>
  40cad0:	mov	w1, #0x10                  	// #16
  40cad4:	mov	x0, x20
  40cad8:	bl	412108 <ferror@plt+0xf278>
  40cadc:	str	x0, [sp]
  40cae0:	cbz	x0, 40caa4 <ferror@plt+0x9c14>
  40cae4:	add	x8, x0, x20, lsl #4
  40cae8:	stp	x8, x20, [sp, #8]
  40caec:	stp	xzr, xzr, [sp, #24]
  40caf0:	ldur	q0, [x19, #40]
  40caf4:	mov	x21, x19
  40caf8:	mov	x0, sp
  40cafc:	mov	x1, x19
  40cb00:	stur	q0, [sp, #40]
  40cb04:	ldur	q0, [x19, #56]
  40cb08:	mov	w2, wzr
  40cb0c:	stur	q0, [sp, #56]
  40cb10:	ldr	x8, [x21, #72]!
  40cb14:	str	x8, [sp, #72]
  40cb18:	bl	40cc08 <ferror@plt+0x9d78>
  40cb1c:	tbz	w0, #0, 40cb48 <ferror@plt+0x9cb8>
  40cb20:	ldr	x0, [x19]
  40cb24:	bl	402c00 <free@plt>
  40cb28:	ldr	q0, [sp]
  40cb2c:	mov	w0, #0x1                   	// #1
  40cb30:	str	q0, [x19]
  40cb34:	ldr	q0, [sp, #16]
  40cb38:	str	q0, [x19, #16]
  40cb3c:	ldr	x8, [sp, #72]
  40cb40:	str	x8, [x19, #72]
  40cb44:	b	40caa4 <ferror@plt+0x9c14>
  40cb48:	ldr	x8, [sp, #72]
  40cb4c:	str	x8, [x21]
  40cb50:	ldp	x22, x23, [sp]
  40cb54:	b	40cb60 <ferror@plt+0x9cd0>
  40cb58:	str	xzr, [x22, #8]
  40cb5c:	add	x22, x22, #0x10
  40cb60:	cmp	x22, x23
  40cb64:	b.cs	40cbe4 <ferror@plt+0x9d54>  // b.hs, b.nlast
  40cb68:	ldr	x8, [x22]
  40cb6c:	cbz	x8, 40cb5c <ferror@plt+0x9ccc>
  40cb70:	ldr	x24, [x22, #8]
  40cb74:	cbz	x24, 40cb58 <ferror@plt+0x9cc8>
  40cb78:	ldr	x1, [x19, #16]
  40cb7c:	b	40cbac <ferror@plt+0x9d1c>
  40cb80:	str	x20, [x9]
  40cb84:	ldr	x9, [x19, #24]
  40cb88:	add	x9, x9, #0x1
  40cb8c:	str	x9, [x19, #24]
  40cb90:	mov	x9, x21
  40cb94:	str	xzr, [x24]
  40cb98:	ldr	x10, [x9]
  40cb9c:	str	x10, [x24, #8]
  40cba0:	str	x24, [x9]
  40cba4:	mov	x24, x8
  40cba8:	cbz	x8, 40cb58 <ferror@plt+0x9cc8>
  40cbac:	ldr	x20, [x24]
  40cbb0:	ldr	x8, [x19, #48]
  40cbb4:	mov	x0, x20
  40cbb8:	blr	x8
  40cbbc:	ldr	x1, [x19, #16]
  40cbc0:	cmp	x0, x1
  40cbc4:	b.cs	40cc04 <ferror@plt+0x9d74>  // b.hs, b.nlast
  40cbc8:	ldr	x8, [x19]
  40cbcc:	add	x9, x8, x0, lsl #4
  40cbd0:	ldr	x10, [x9]
  40cbd4:	ldr	x8, [x24, #8]
  40cbd8:	cbz	x10, 40cb80 <ferror@plt+0x9cf0>
  40cbdc:	add	x9, x9, #0x8
  40cbe0:	b	40cb98 <ferror@plt+0x9d08>
  40cbe4:	mov	x1, sp
  40cbe8:	mov	x0, x19
  40cbec:	mov	w2, wzr
  40cbf0:	bl	40cc08 <ferror@plt+0x9d78>
  40cbf4:	tbz	w0, #0, 40cc04 <ferror@plt+0x9d74>
  40cbf8:	ldr	x0, [sp]
  40cbfc:	bl	402c00 <free@plt>
  40cc00:	b	40caa0 <ferror@plt+0x9c10>
  40cc04:	bl	402ae0 <abort@plt>
  40cc08:	stp	x29, x30, [sp, #-80]!
  40cc0c:	str	x25, [sp, #16]
  40cc10:	stp	x24, x23, [sp, #32]
  40cc14:	stp	x22, x21, [sp, #48]
  40cc18:	stp	x20, x19, [sp, #64]
  40cc1c:	ldp	x23, x8, [x1]
  40cc20:	mov	x29, sp
  40cc24:	cmp	x23, x8
  40cc28:	b.cs	40cde8 <ferror@plt+0x9f58>  // b.hs, b.nlast
  40cc2c:	mov	x19, x1
  40cc30:	mov	x20, x0
  40cc34:	add	x24, x0, #0x48
  40cc38:	tbz	w2, #0, 40cd00 <ferror@plt+0x9e70>
  40cc3c:	b	40cc54 <ferror@plt+0x9dc4>
  40cc40:	ldr	x8, [x19, #8]
  40cc44:	str	xzr, [x23, #8]
  40cc48:	add	x23, x23, #0x10
  40cc4c:	cmp	x23, x8
  40cc50:	b.cs	40cde8 <ferror@plt+0x9f58>  // b.hs, b.nlast
  40cc54:	ldr	x9, [x23]
  40cc58:	cbz	x9, 40cc48 <ferror@plt+0x9db8>
  40cc5c:	ldr	x22, [x23, #8]
  40cc60:	cbz	x22, 40cc44 <ferror@plt+0x9db4>
  40cc64:	ldr	x1, [x20, #16]
  40cc68:	b	40cc98 <ferror@plt+0x9e08>
  40cc6c:	str	x21, [x9]
  40cc70:	ldr	x9, [x20, #24]
  40cc74:	add	x9, x9, #0x1
  40cc78:	str	x9, [x20, #24]
  40cc7c:	mov	x9, x24
  40cc80:	str	xzr, [x22]
  40cc84:	ldr	x10, [x9]
  40cc88:	str	x10, [x22, #8]
  40cc8c:	str	x22, [x9]
  40cc90:	mov	x22, x8
  40cc94:	cbz	x8, 40cc40 <ferror@plt+0x9db0>
  40cc98:	ldr	x21, [x22]
  40cc9c:	ldr	x8, [x20, #48]
  40cca0:	mov	x0, x21
  40cca4:	blr	x8
  40cca8:	ldr	x1, [x20, #16]
  40ccac:	cmp	x0, x1
  40ccb0:	b.cs	40ce04 <ferror@plt+0x9f74>  // b.hs, b.nlast
  40ccb4:	ldr	x8, [x20]
  40ccb8:	add	x9, x8, x0, lsl #4
  40ccbc:	ldr	x10, [x9]
  40ccc0:	ldr	x8, [x22, #8]
  40ccc4:	cbz	x10, 40cc6c <ferror@plt+0x9ddc>
  40ccc8:	add	x9, x9, #0x8
  40cccc:	b	40cc84 <ferror@plt+0x9df4>
  40ccd0:	str	x21, [x8]
  40ccd4:	ldr	x8, [x20, #24]
  40ccd8:	add	x8, x8, #0x1
  40ccdc:	str	x8, [x20, #24]
  40cce0:	str	xzr, [x23]
  40cce4:	ldr	x9, [x19, #24]
  40cce8:	ldr	x8, [x19, #8]
  40ccec:	sub	x9, x9, #0x1
  40ccf0:	str	x9, [x19, #24]
  40ccf4:	add	x23, x23, #0x10
  40ccf8:	cmp	x23, x8
  40ccfc:	b.cs	40cde8 <ferror@plt+0x9f58>  // b.hs, b.nlast
  40cd00:	ldr	x21, [x23]
  40cd04:	cbz	x21, 40ccf4 <ferror@plt+0x9e64>
  40cd08:	ldr	x22, [x23, #8]
  40cd0c:	ldr	x1, [x20, #16]
  40cd10:	cbnz	x22, 40cd30 <ferror@plt+0x9ea0>
  40cd14:	b	40cd80 <ferror@plt+0x9ef0>
  40cd18:	add	x9, x9, #0x8
  40cd1c:	ldr	x10, [x9]
  40cd20:	str	x10, [x22, #8]
  40cd24:	str	x22, [x9]
  40cd28:	mov	x22, x8
  40cd2c:	cbz	x8, 40cd7c <ferror@plt+0x9eec>
  40cd30:	ldr	x21, [x22]
  40cd34:	ldr	x8, [x20, #48]
  40cd38:	mov	x0, x21
  40cd3c:	blr	x8
  40cd40:	ldr	x1, [x20, #16]
  40cd44:	cmp	x0, x1
  40cd48:	b.cs	40ce04 <ferror@plt+0x9f74>  // b.hs, b.nlast
  40cd4c:	ldr	x8, [x20]
  40cd50:	add	x9, x8, x0, lsl #4
  40cd54:	ldr	x10, [x9]
  40cd58:	ldr	x8, [x22, #8]
  40cd5c:	cbnz	x10, 40cd18 <ferror@plt+0x9e88>
  40cd60:	str	x21, [x9]
  40cd64:	ldr	x9, [x20, #24]
  40cd68:	add	x9, x9, #0x1
  40cd6c:	str	x9, [x20, #24]
  40cd70:	mov	x9, x24
  40cd74:	str	xzr, [x22]
  40cd78:	b	40cd1c <ferror@plt+0x9e8c>
  40cd7c:	ldr	x21, [x23]
  40cd80:	str	xzr, [x23, #8]
  40cd84:	ldr	x8, [x20, #48]
  40cd88:	mov	x0, x21
  40cd8c:	blr	x8
  40cd90:	ldr	x8, [x20, #16]
  40cd94:	cmp	x0, x8
  40cd98:	b.cs	40ce04 <ferror@plt+0x9f74>  // b.hs, b.nlast
  40cd9c:	ldr	x25, [x20]
  40cda0:	mov	x22, x0
  40cda4:	add	x8, x25, x0, lsl #4
  40cda8:	ldr	x9, [x8]
  40cdac:	cbz	x9, 40ccd0 <ferror@plt+0x9e40>
  40cdb0:	ldr	x0, [x24]
  40cdb4:	cbz	x0, 40cdc4 <ferror@plt+0x9f34>
  40cdb8:	ldr	x8, [x0, #8]
  40cdbc:	str	x8, [x24]
  40cdc0:	b	40cdd0 <ferror@plt+0x9f40>
  40cdc4:	mov	w0, #0x10                  	// #16
  40cdc8:	bl	402930 <malloc@plt>
  40cdcc:	cbz	x0, 40cdec <ferror@plt+0x9f5c>
  40cdd0:	str	x21, [x0]
  40cdd4:	add	x8, x25, x22, lsl #4
  40cdd8:	ldr	x9, [x8, #8]
  40cddc:	str	x9, [x0, #8]
  40cde0:	str	x0, [x8, #8]
  40cde4:	b	40cce0 <ferror@plt+0x9e50>
  40cde8:	mov	w0, #0x1                   	// #1
  40cdec:	ldp	x20, x19, [sp, #64]
  40cdf0:	ldp	x22, x21, [sp, #48]
  40cdf4:	ldp	x24, x23, [sp, #32]
  40cdf8:	ldr	x25, [sp, #16]
  40cdfc:	ldp	x29, x30, [sp], #80
  40ce00:	ret
  40ce04:	bl	402ae0 <abort@plt>
  40ce08:	stp	x29, x30, [sp, #-80]!
  40ce0c:	str	x25, [sp, #16]
  40ce10:	stp	x24, x23, [sp, #32]
  40ce14:	stp	x22, x21, [sp, #48]
  40ce18:	stp	x20, x19, [sp, #64]
  40ce1c:	mov	x29, sp
  40ce20:	cbz	x1, 40d0ec <ferror@plt+0xa25c>
  40ce24:	mov	x20, x1
  40ce28:	ldr	x8, [x0, #48]
  40ce2c:	ldr	x1, [x0, #16]
  40ce30:	mov	x19, x0
  40ce34:	mov	x0, x20
  40ce38:	mov	x21, x2
  40ce3c:	blr	x8
  40ce40:	ldr	x8, [x19, #16]
  40ce44:	cmp	x0, x8
  40ce48:	b.cs	40d0ec <ferror@plt+0xa25c>  // b.hs, b.nlast
  40ce4c:	ldr	x25, [x19]
  40ce50:	mov	x22, x0
  40ce54:	add	x23, x25, x0, lsl #4
  40ce58:	ldr	x1, [x23]
  40ce5c:	cbz	x1, 40ce84 <ferror@plt+0x9ff4>
  40ce60:	cmp	x1, x20
  40ce64:	b.eq	40cff8 <ferror@plt+0xa168>  // b.none
  40ce68:	ldr	x8, [x19, #56]
  40ce6c:	mov	x0, x20
  40ce70:	blr	x8
  40ce74:	mov	x24, x23
  40ce78:	tbz	w0, #0, 40d00c <ferror@plt+0xa17c>
  40ce7c:	ldr	x8, [x24]
  40ce80:	cbnz	x8, 40cffc <ferror@plt+0xa16c>
  40ce84:	ldr	x8, [x19, #40]
  40ce88:	ldp	x10, x9, [x19, #16]
  40ce8c:	ldr	s1, [x8, #8]
  40ce90:	ucvtf	s0, x10
  40ce94:	ucvtf	s2, x9
  40ce98:	fmul	s3, s1, s0
  40ce9c:	fcmp	s3, s2
  40cea0:	b.pl	40cfdc <ferror@plt+0xa14c>  // b.nfrst
  40cea4:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40cea8:	add	x9, x9, #0xbe4
  40ceac:	cmp	x8, x9
  40ceb0:	b.eq	40cf40 <ferror@plt+0xa0b0>  // b.none
  40ceb4:	mov	w10, #0xcccd                	// #52429
  40ceb8:	movk	w10, #0x3dcc, lsl #16
  40cebc:	fmov	s3, w10
  40cec0:	fcmp	s1, s3
  40cec4:	b.le	40cf30 <ferror@plt+0xa0a0>
  40cec8:	mov	w10, #0x6666                	// #26214
  40cecc:	movk	w10, #0x3f66, lsl #16
  40ced0:	fmov	s3, w10
  40ced4:	fcmp	s1, s3
  40ced8:	b.pl	40cf30 <ferror@plt+0xa0a0>  // b.nfrst
  40cedc:	ldr	s3, [x8, #12]
  40cee0:	mov	w10, #0xcccd                	// #52429
  40cee4:	movk	w10, #0x3f8c, lsl #16
  40cee8:	fmov	s4, w10
  40ceec:	fcmp	s3, s4
  40cef0:	b.le	40cf30 <ferror@plt+0xa0a0>
  40cef4:	ldr	s3, [x8]
  40cef8:	fcmp	s3, #0.0
  40cefc:	b.lt	40cf30 <ferror@plt+0xa0a0>  // b.tstop
  40cf00:	mov	w10, #0xcccd                	// #52429
  40cf04:	movk	w10, #0x3dcc, lsl #16
  40cf08:	fmov	s4, w10
  40cf0c:	fadd	s3, s3, s4
  40cf10:	fcmp	s3, s1
  40cf14:	b.pl	40cf30 <ferror@plt+0xa0a0>  // b.nfrst
  40cf18:	ldr	s4, [x8, #4]
  40cf1c:	fmov	s5, #1.000000000000000000e+00
  40cf20:	fcmp	s4, s5
  40cf24:	b.hi	40cf30 <ferror@plt+0xa0a0>  // b.pmore
  40cf28:	fcmp	s3, s4
  40cf2c:	b.mi	40cf44 <ferror@plt+0xa0b4>  // b.first
  40cf30:	mov	w8, #0xcccd                	// #52429
  40cf34:	movk	w8, #0x3f4c, lsl #16
  40cf38:	fmov	s1, w8
  40cf3c:	str	x9, [x19, #40]
  40cf40:	mov	x8, x9
  40cf44:	fmul	s3, s1, s0
  40cf48:	fcmp	s3, s2
  40cf4c:	b.pl	40cfdc <ferror@plt+0xa14c>  // b.nfrst
  40cf50:	ldr	s2, [x8, #12]
  40cf54:	ldrb	w8, [x8, #16]
  40cf58:	fmul	s0, s2, s0
  40cf5c:	cmp	w8, #0x0
  40cf60:	fmul	s1, s1, s0
  40cf64:	mov	w8, #0x5f800000            	// #1602224128
  40cf68:	fcsel	s0, s1, s0, eq  // eq = none
  40cf6c:	fmov	s1, w8
  40cf70:	fcmp	s0, s1
  40cf74:	b.ge	40d088 <ferror@plt+0xa1f8>  // b.tcont
  40cf78:	fcvtzu	x1, s0
  40cf7c:	mov	x0, x19
  40cf80:	bl	40c9d4 <ferror@plt+0x9b44>
  40cf84:	tbz	w0, #0, 40d088 <ferror@plt+0xa1f8>
  40cf88:	ldr	x8, [x19, #48]
  40cf8c:	ldr	x1, [x19, #16]
  40cf90:	mov	x0, x20
  40cf94:	blr	x8
  40cf98:	ldr	x8, [x19, #16]
  40cf9c:	cmp	x0, x8
  40cfa0:	b.cs	40d0ec <ferror@plt+0xa25c>  // b.hs, b.nlast
  40cfa4:	ldr	x22, [x19]
  40cfa8:	mov	x21, x0
  40cfac:	add	x23, x22, x0, lsl #4
  40cfb0:	ldr	x1, [x23]
  40cfb4:	cbz	x1, 40cfdc <ferror@plt+0xa14c>
  40cfb8:	cmp	x1, x20
  40cfbc:	mov	x8, x20
  40cfc0:	b.eq	40cfd8 <ferror@plt+0xa148>  // b.none
  40cfc4:	ldr	x8, [x19, #56]
  40cfc8:	mov	x0, x20
  40cfcc:	blr	x8
  40cfd0:	tbz	w0, #0, 40d0b0 <ferror@plt+0xa220>
  40cfd4:	ldr	x8, [x23]
  40cfd8:	cbnz	x8, 40d0ec <ferror@plt+0xa25c>
  40cfdc:	ldr	x8, [x23]
  40cfe0:	cbz	x8, 40d03c <ferror@plt+0xa1ac>
  40cfe4:	ldr	x0, [x19, #72]
  40cfe8:	cbz	x0, 40d058 <ferror@plt+0xa1c8>
  40cfec:	ldr	x8, [x0, #8]
  40cff0:	str	x8, [x19, #72]
  40cff4:	b	40d064 <ferror@plt+0xa1d4>
  40cff8:	mov	x8, x20
  40cffc:	mov	w0, wzr
  40d000:	cbz	x21, 40d08c <ferror@plt+0xa1fc>
  40d004:	str	x8, [x21]
  40d008:	b	40d08c <ferror@plt+0xa1fc>
  40d00c:	add	x24, x25, x22, lsl #4
  40d010:	ldr	x8, [x24, #8]!
  40d014:	cbz	x8, 40ce84 <ferror@plt+0x9ff4>
  40d018:	ldr	x1, [x8]
  40d01c:	cmp	x1, x20
  40d020:	b.eq	40d0a4 <ferror@plt+0xa214>  // b.none
  40d024:	ldr	x8, [x19, #56]
  40d028:	mov	x0, x20
  40d02c:	blr	x8
  40d030:	ldr	x24, [x24]
  40d034:	tbz	w0, #0, 40d010 <ferror@plt+0xa180>
  40d038:	b	40ce7c <ferror@plt+0x9fec>
  40d03c:	str	x20, [x23]
  40d040:	ldur	q0, [x19, #24]
  40d044:	mov	w0, #0x1                   	// #1
  40d048:	dup	v1.2d, x0
  40d04c:	add	v0.2d, v0.2d, v1.2d
  40d050:	stur	q0, [x19, #24]
  40d054:	b	40d08c <ferror@plt+0xa1fc>
  40d058:	mov	w0, #0x10                  	// #16
  40d05c:	bl	402930 <malloc@plt>
  40d060:	cbz	x0, 40d088 <ferror@plt+0xa1f8>
  40d064:	str	x20, [x0]
  40d068:	ldr	x8, [x23, #8]
  40d06c:	str	x8, [x0, #8]
  40d070:	str	x0, [x23, #8]
  40d074:	ldr	x8, [x19, #32]
  40d078:	mov	w0, #0x1                   	// #1
  40d07c:	add	x8, x8, #0x1
  40d080:	str	x8, [x19, #32]
  40d084:	b	40d08c <ferror@plt+0xa1fc>
  40d088:	mov	w0, #0xffffffff            	// #-1
  40d08c:	ldp	x20, x19, [sp, #64]
  40d090:	ldp	x22, x21, [sp, #48]
  40d094:	ldp	x24, x23, [sp, #32]
  40d098:	ldr	x25, [sp, #16]
  40d09c:	ldp	x29, x30, [sp], #80
  40d0a0:	ret
  40d0a4:	mov	x8, x20
  40d0a8:	cbnz	x8, 40cffc <ferror@plt+0xa16c>
  40d0ac:	b	40ce84 <ferror@plt+0x9ff4>
  40d0b0:	add	x21, x22, x21, lsl #4
  40d0b4:	ldr	x8, [x21, #8]!
  40d0b8:	cbz	x8, 40cfdc <ferror@plt+0xa14c>
  40d0bc:	ldr	x1, [x8]
  40d0c0:	cmp	x1, x20
  40d0c4:	b.eq	40d0e4 <ferror@plt+0xa254>  // b.none
  40d0c8:	ldr	x8, [x19, #56]
  40d0cc:	mov	x0, x20
  40d0d0:	blr	x8
  40d0d4:	ldr	x21, [x21]
  40d0d8:	tbz	w0, #0, 40d0b4 <ferror@plt+0xa224>
  40d0dc:	ldr	x8, [x21]
  40d0e0:	b	40cfd8 <ferror@plt+0xa148>
  40d0e4:	mov	x8, x20
  40d0e8:	b	40cfd8 <ferror@plt+0xa148>
  40d0ec:	bl	402ae0 <abort@plt>
  40d0f0:	stp	x29, x30, [sp, #-32]!
  40d0f4:	mov	x29, sp
  40d0f8:	add	x2, x29, #0x18
  40d0fc:	str	x19, [sp, #16]
  40d100:	mov	x19, x1
  40d104:	bl	40ce08 <ferror@plt+0x9f78>
  40d108:	ldr	x8, [x29, #24]
  40d10c:	cmp	w0, #0x0
  40d110:	csel	x8, x8, x19, eq  // eq = none
  40d114:	ldr	x19, [sp, #16]
  40d118:	cmn	w0, #0x1
  40d11c:	csel	x0, xzr, x8, eq  // eq = none
  40d120:	ldp	x29, x30, [sp], #32
  40d124:	ret
  40d128:	stp	x29, x30, [sp, #-64]!
  40d12c:	stp	x22, x21, [sp, #32]
  40d130:	stp	x20, x19, [sp, #48]
  40d134:	ldr	x8, [x0, #16]
  40d138:	ldr	x9, [x0, #48]
  40d13c:	mov	x20, x0
  40d140:	mov	x19, x1
  40d144:	mov	x0, x1
  40d148:	mov	x1, x8
  40d14c:	str	x23, [sp, #16]
  40d150:	mov	x29, sp
  40d154:	blr	x9
  40d158:	ldr	x8, [x20, #16]
  40d15c:	cmp	x0, x8
  40d160:	b.cs	40d35c <ferror@plt+0xa4cc>  // b.hs, b.nlast
  40d164:	ldr	x23, [x20]
  40d168:	mov	x21, x0
  40d16c:	add	x22, x23, x0, lsl #4
  40d170:	ldr	x1, [x22]
  40d174:	cbz	x1, 40d1e4 <ferror@plt+0xa354>
  40d178:	cmp	x1, x19
  40d17c:	b.eq	40d194 <ferror@plt+0xa304>  // b.none
  40d180:	ldr	x8, [x20, #56]
  40d184:	mov	x0, x19
  40d188:	blr	x8
  40d18c:	tbz	w0, #0, 40d1ac <ferror@plt+0xa31c>
  40d190:	ldr	x19, [x22]
  40d194:	add	x8, x23, x21, lsl #4
  40d198:	ldr	x8, [x8, #8]
  40d19c:	cbz	x8, 40d1ec <ferror@plt+0xa35c>
  40d1a0:	ldr	q0, [x8]
  40d1a4:	str	q0, [x22]
  40d1a8:	b	40d20c <ferror@plt+0xa37c>
  40d1ac:	add	x21, x23, x21, lsl #4
  40d1b0:	ldr	x9, [x21, #8]!
  40d1b4:	cbz	x9, 40d1e4 <ferror@plt+0xa354>
  40d1b8:	ldr	x1, [x9]
  40d1bc:	cmp	x1, x19
  40d1c0:	b.eq	40d1f8 <ferror@plt+0xa368>  // b.none
  40d1c4:	ldr	x8, [x20, #56]
  40d1c8:	mov	x0, x19
  40d1cc:	blr	x8
  40d1d0:	ldr	x8, [x21]
  40d1d4:	tbnz	w0, #0, 40d200 <ferror@plt+0xa370>
  40d1d8:	ldr	x9, [x8, #8]!
  40d1dc:	mov	x21, x8
  40d1e0:	cbnz	x9, 40d1b8 <ferror@plt+0xa328>
  40d1e4:	mov	x19, xzr
  40d1e8:	b	40d344 <ferror@plt+0xa4b4>
  40d1ec:	str	xzr, [x22]
  40d1f0:	cbnz	x19, 40d220 <ferror@plt+0xa390>
  40d1f4:	b	40d344 <ferror@plt+0xa4b4>
  40d1f8:	mov	x8, x9
  40d1fc:	b	40d204 <ferror@plt+0xa374>
  40d200:	ldr	x19, [x8]
  40d204:	ldr	x9, [x8, #8]
  40d208:	str	x9, [x21]
  40d20c:	str	xzr, [x8]
  40d210:	ldr	x9, [x20, #72]
  40d214:	str	x9, [x8, #8]
  40d218:	str	x8, [x20, #72]
  40d21c:	cbz	x19, 40d344 <ferror@plt+0xa4b4>
  40d220:	ldr	x8, [x20, #32]
  40d224:	sub	x8, x8, #0x1
  40d228:	str	x8, [x20, #32]
  40d22c:	ldr	x8, [x22]
  40d230:	cbnz	x8, 40d344 <ferror@plt+0xa4b4>
  40d234:	ldp	x10, x9, [x20, #16]
  40d238:	ldr	x8, [x20, #40]
  40d23c:	sub	x9, x9, #0x1
  40d240:	str	x9, [x20, #24]
  40d244:	ldr	s2, [x8]
  40d248:	ucvtf	s0, x10
  40d24c:	ucvtf	s1, x9
  40d250:	fmul	s3, s2, s0
  40d254:	fcmp	s3, s1
  40d258:	b.le	40d344 <ferror@plt+0xa4b4>
  40d25c:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40d260:	add	x9, x9, #0xbe4
  40d264:	cmp	x8, x9
  40d268:	b.eq	40d2f0 <ferror@plt+0xa460>  // b.none
  40d26c:	ldr	s3, [x8, #8]
  40d270:	mov	w10, #0xcccd                	// #52429
  40d274:	movk	w10, #0x3dcc, lsl #16
  40d278:	fmov	s4, w10
  40d27c:	fcmp	s3, s4
  40d280:	b.le	40d2e8 <ferror@plt+0xa458>
  40d284:	mov	w10, #0x6666                	// #26214
  40d288:	movk	w10, #0x3f66, lsl #16
  40d28c:	fmov	s4, w10
  40d290:	fcmp	s3, s4
  40d294:	b.pl	40d2e8 <ferror@plt+0xa458>  // b.nfrst
  40d298:	fcmp	s2, #0.0
  40d29c:	b.lt	40d2e8 <ferror@plt+0xa458>  // b.tstop
  40d2a0:	ldr	s4, [x8, #12]
  40d2a4:	mov	w10, #0xcccd                	// #52429
  40d2a8:	movk	w10, #0x3f8c, lsl #16
  40d2ac:	fmov	s5, w10
  40d2b0:	fcmp	s4, s5
  40d2b4:	b.le	40d2e8 <ferror@plt+0xa458>
  40d2b8:	mov	w10, #0xcccd                	// #52429
  40d2bc:	movk	w10, #0x3dcc, lsl #16
  40d2c0:	fmov	s4, w10
  40d2c4:	fadd	s4, s2, s4
  40d2c8:	fcmp	s4, s3
  40d2cc:	b.pl	40d2e8 <ferror@plt+0xa458>  // b.nfrst
  40d2d0:	ldr	s3, [x8, #4]
  40d2d4:	fmov	s5, #1.000000000000000000e+00
  40d2d8:	fcmp	s3, s5
  40d2dc:	b.hi	40d2e8 <ferror@plt+0xa458>  // b.pmore
  40d2e0:	fcmp	s4, s3
  40d2e4:	b.mi	40d2f4 <ferror@plt+0xa464>  // b.first
  40d2e8:	fmov	s2, wzr
  40d2ec:	str	x9, [x20, #40]
  40d2f0:	mov	x8, x9
  40d2f4:	fmul	s2, s2, s0
  40d2f8:	fcmp	s2, s1
  40d2fc:	b.le	40d344 <ferror@plt+0xa4b4>
  40d300:	ldr	s1, [x8, #4]
  40d304:	ldrb	w9, [x8, #16]
  40d308:	fmul	s0, s1, s0
  40d30c:	cbnz	w9, 40d318 <ferror@plt+0xa488>
  40d310:	ldr	s1, [x8, #8]
  40d314:	fmul	s0, s0, s1
  40d318:	fcvtzu	x1, s0
  40d31c:	mov	x0, x20
  40d320:	bl	40c9d4 <ferror@plt+0x9b44>
  40d324:	tbnz	w0, #0, 40d344 <ferror@plt+0xa4b4>
  40d328:	ldr	x0, [x20, #72]
  40d32c:	cbz	x0, 40d340 <ferror@plt+0xa4b0>
  40d330:	ldr	x21, [x0, #8]
  40d334:	bl	402c00 <free@plt>
  40d338:	mov	x0, x21
  40d33c:	cbnz	x21, 40d330 <ferror@plt+0xa4a0>
  40d340:	str	xzr, [x20, #72]
  40d344:	mov	x0, x19
  40d348:	ldp	x20, x19, [sp, #48]
  40d34c:	ldp	x22, x21, [sp, #32]
  40d350:	ldr	x23, [sp, #16]
  40d354:	ldp	x29, x30, [sp], #64
  40d358:	ret
  40d35c:	bl	402ae0 <abort@plt>
  40d360:	stp	x29, x30, [sp, #-48]!
  40d364:	stp	x20, x19, [sp, #32]
  40d368:	mov	x19, x0
  40d36c:	mov	w0, #0x20                  	// #32
  40d370:	str	x21, [sp, #16]
  40d374:	mov	x29, sp
  40d378:	mov	x20, x1
  40d37c:	bl	4112fc <ferror@plt+0xe46c>
  40d380:	cmp	x20, #0x0
  40d384:	csinc	x21, x20, xzr, ne  // ne = any
  40d388:	lsr	x8, x21, #60
  40d38c:	cbnz	x8, 40d3cc <ferror@plt+0xa53c>
  40d390:	mov	x20, x0
  40d394:	lsl	x0, x21, #3
  40d398:	bl	4112fc <ferror@plt+0xe46c>
  40d39c:	adrp	x8, 40d000 <ferror@plt+0xa170>
  40d3a0:	add	x8, x8, #0x3d0
  40d3a4:	cmp	x19, #0x0
  40d3a8:	csel	x8, x8, x19, eq  // eq = none
  40d3ac:	str	xzr, [x0]
  40d3b0:	stp	x0, x21, [x20]
  40d3b4:	stp	xzr, x8, [x20, #16]
  40d3b8:	mov	x0, x20
  40d3bc:	ldp	x20, x19, [sp, #32]
  40d3c0:	ldr	x21, [sp, #16]
  40d3c4:	ldp	x29, x30, [sp], #48
  40d3c8:	ret
  40d3cc:	bl	411638 <ferror@plt+0xe7a8>
  40d3d0:	mov	w0, wzr
  40d3d4:	ret
  40d3d8:	stp	x29, x30, [sp, #-32]!
  40d3dc:	str	x19, [sp, #16]
  40d3e0:	mov	x19, x0
  40d3e4:	ldr	x0, [x0]
  40d3e8:	mov	x29, sp
  40d3ec:	bl	402c00 <free@plt>
  40d3f0:	mov	x0, x19
  40d3f4:	ldr	x19, [sp, #16]
  40d3f8:	ldp	x29, x30, [sp], #32
  40d3fc:	b	402c00 <free@plt>
  40d400:	stp	x29, x30, [sp, #-64]!
  40d404:	str	x23, [sp, #16]
  40d408:	stp	x22, x21, [sp, #32]
  40d40c:	stp	x20, x19, [sp, #48]
  40d410:	ldp	x8, x9, [x0, #8]
  40d414:	mov	x19, x0
  40d418:	mov	x20, x1
  40d41c:	mov	x29, sp
  40d420:	sub	x10, x8, #0x1
  40d424:	cmp	x10, x9
  40d428:	b.ls	40d434 <ferror@plt+0xa5a4>  // b.plast
  40d42c:	ldr	x0, [x19]
  40d430:	b	40d480 <ferror@plt+0xa5f0>
  40d434:	ldr	x0, [x19]
  40d438:	cbz	x0, 40d458 <ferror@plt+0xa5c8>
  40d43c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40d440:	movk	x9, #0xaaa, lsl #48
  40d444:	cmp	x8, x9
  40d448:	b.cs	40d464 <ferror@plt+0xa5d4>  // b.hs, b.nlast
  40d44c:	add	x8, x8, x8, lsr #1
  40d450:	add	x8, x8, #0x1
  40d454:	b	40d46c <ferror@plt+0xa5dc>
  40d458:	cbz	x8, 40d468 <ferror@plt+0xa5d8>
  40d45c:	lsr	x9, x8, #60
  40d460:	cbz	x9, 40d46c <ferror@plt+0xa5dc>
  40d464:	bl	411638 <ferror@plt+0xe7a8>
  40d468:	mov	w8, #0x10                  	// #16
  40d46c:	lsl	x1, x8, #3
  40d470:	str	x8, [x19, #8]
  40d474:	bl	41137c <ferror@plt+0xe4ec>
  40d478:	ldr	x9, [x19, #16]
  40d47c:	str	x0, [x19]
  40d480:	add	x21, x9, #0x1
  40d484:	lsl	x8, x21, #3
  40d488:	str	x21, [x19, #16]
  40d48c:	str	x20, [x0, x8]
  40d490:	ldr	x22, [x19]
  40d494:	ldr	x20, [x22, x8]
  40d498:	cbz	x9, 40d4d0 <ferror@plt+0xa640>
  40d49c:	ldr	x19, [x19, #24]
  40d4a0:	lsr	x23, x21, #1
  40d4a4:	ldr	x0, [x22, x23, lsl #3]
  40d4a8:	mov	x1, x20
  40d4ac:	blr	x19
  40d4b0:	cmp	w0, #0x0
  40d4b4:	b.gt	40d4d4 <ferror@plt+0xa644>
  40d4b8:	ldr	x8, [x22, x23, lsl #3]
  40d4bc:	cmp	x23, #0x1
  40d4c0:	str	x8, [x22, x21, lsl #3]
  40d4c4:	mov	x21, x23
  40d4c8:	b.ne	40d4a0 <ferror@plt+0xa610>  // b.any
  40d4cc:	b	40d4d4 <ferror@plt+0xa644>
  40d4d0:	mov	w21, #0x1                   	// #1
  40d4d4:	str	x20, [x22, x21, lsl #3]
  40d4d8:	ldp	x20, x19, [sp, #48]
  40d4dc:	ldp	x22, x21, [sp, #32]
  40d4e0:	ldr	x23, [sp, #16]
  40d4e4:	mov	w0, wzr
  40d4e8:	ldp	x29, x30, [sp], #64
  40d4ec:	ret
  40d4f0:	stp	x29, x30, [sp, #-96]!
  40d4f4:	stp	x26, x25, [sp, #32]
  40d4f8:	stp	x24, x23, [sp, #48]
  40d4fc:	stp	x22, x21, [sp, #64]
  40d500:	stp	x20, x19, [sp, #80]
  40d504:	ldr	x8, [x0, #16]
  40d508:	str	x27, [sp, #16]
  40d50c:	mov	x29, sp
  40d510:	cbz	x8, 40d594 <ferror@plt+0xa704>
  40d514:	ldr	x9, [x0]
  40d518:	sub	x22, x8, #0x1
  40d51c:	lsr	x23, x22, #1
  40d520:	ldr	x19, [x9, #8]
  40d524:	str	x22, [x0, #16]
  40d528:	ldr	x8, [x9, x8, lsl #3]
  40d52c:	str	x8, [x9, #8]
  40d530:	ldr	x21, [x0]
  40d534:	ldr	x20, [x21, #8]
  40d538:	cbz	x23, 40d59c <ferror@plt+0xa70c>
  40d53c:	ldr	x25, [x0, #24]
  40d540:	mov	w26, #0x1                   	// #1
  40d544:	lsl	x24, x26, #1
  40d548:	cmp	x24, x22
  40d54c:	b.cs	40d568 <ferror@plt+0xa6d8>  // b.hs, b.nlast
  40d550:	orr	x27, x24, #0x1
  40d554:	ldr	x0, [x21, x24, lsl #3]
  40d558:	ldr	x1, [x21, x27, lsl #3]
  40d55c:	blr	x25
  40d560:	cmp	w0, #0x0
  40d564:	csel	x24, x27, x24, lt  // lt = tstop
  40d568:	ldr	x0, [x21, x24, lsl #3]
  40d56c:	mov	x1, x20
  40d570:	blr	x25
  40d574:	cmp	w0, #0x1
  40d578:	b.lt	40d5a4 <ferror@plt+0xa714>  // b.tstop
  40d57c:	ldr	x8, [x21, x24, lsl #3]
  40d580:	cmp	x24, x23
  40d584:	str	x8, [x21, x26, lsl #3]
  40d588:	mov	x26, x24
  40d58c:	b.ls	40d544 <ferror@plt+0xa6b4>  // b.plast
  40d590:	b	40d5a8 <ferror@plt+0xa718>
  40d594:	mov	x19, xzr
  40d598:	b	40d5ac <ferror@plt+0xa71c>
  40d59c:	mov	w24, #0x1                   	// #1
  40d5a0:	b	40d5a8 <ferror@plt+0xa718>
  40d5a4:	mov	x24, x26
  40d5a8:	str	x20, [x21, x24, lsl #3]
  40d5ac:	mov	x0, x19
  40d5b0:	ldp	x20, x19, [sp, #80]
  40d5b4:	ldp	x22, x21, [sp, #64]
  40d5b8:	ldp	x24, x23, [sp, #48]
  40d5bc:	ldp	x26, x25, [sp, #32]
  40d5c0:	ldr	x27, [sp, #16]
  40d5c4:	ldp	x29, x30, [sp], #96
  40d5c8:	ret
  40d5cc:	mov	w8, w0
  40d5d0:	mov	x0, x1
  40d5d4:	strb	wzr, [x0, #11]!
  40d5d8:	tbnz	w8, #31, 40d618 <ferror@plt+0xa788>
  40d5dc:	mov	w9, #0x6667                	// #26215
  40d5e0:	movk	w9, #0x6666, lsl #16
  40d5e4:	mov	w10, #0xa                   	// #10
  40d5e8:	smull	x11, w8, w9
  40d5ec:	lsr	x13, x11, #63
  40d5f0:	asr	x11, x11, #34
  40d5f4:	add	w11, w11, w13
  40d5f8:	add	w12, w8, #0x9
  40d5fc:	msub	w8, w11, w10, w8
  40d600:	add	w8, w8, #0x30
  40d604:	cmp	w12, #0x12
  40d608:	strb	w8, [x0, #-1]!
  40d60c:	mov	w8, w11
  40d610:	b.hi	40d5e8 <ferror@plt+0xa758>  // b.pmore
  40d614:	ret
  40d618:	mov	w9, #0x6667                	// #26215
  40d61c:	add	x0, x1, #0xa
  40d620:	movk	w9, #0x6666, lsl #16
  40d624:	mov	w10, #0xa                   	// #10
  40d628:	smull	x11, w8, w9
  40d62c:	lsr	x13, x11, #63
  40d630:	asr	x11, x11, #34
  40d634:	neg	w12, w8
  40d638:	add	w11, w11, w13
  40d63c:	madd	w12, w11, w10, w12
  40d640:	add	w8, w8, #0x9
  40d644:	add	w12, w12, #0x30
  40d648:	cmp	w8, #0x12
  40d64c:	strb	w12, [x0], #-1
  40d650:	mov	w8, w11
  40d654:	b.hi	40d628 <ferror@plt+0xa798>  // b.pmore
  40d658:	mov	w8, #0x2d                  	// #45
  40d65c:	strb	w8, [x0]
  40d660:	ret
  40d664:	mov	w8, #0xcccd                	// #52429
  40d668:	movk	w8, #0xcccc, lsl #16
  40d66c:	strb	wzr, [x1, #10]!
  40d670:	mov	w9, #0xa                   	// #10
  40d674:	umull	x10, w0, w8
  40d678:	lsr	x10, x10, #35
  40d67c:	msub	w11, w10, w9, w0
  40d680:	orr	w11, w11, #0x30
  40d684:	cmp	w0, #0x9
  40d688:	strb	w11, [x1, #-1]!
  40d68c:	mov	w0, w10
  40d690:	b.hi	40d674 <ferror@plt+0xa7e4>  // b.pmore
  40d694:	mov	x0, x1
  40d698:	ret
  40d69c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40d6a0:	movk	x8, #0xcccd
  40d6a4:	strb	wzr, [x1, #20]!
  40d6a8:	mov	w9, #0xa                   	// #10
  40d6ac:	umulh	x10, x0, x8
  40d6b0:	lsr	x10, x10, #3
  40d6b4:	msub	w11, w10, w9, w0
  40d6b8:	orr	w11, w11, #0x30
  40d6bc:	cmp	x0, #0x9
  40d6c0:	strb	w11, [x1, #-1]!
  40d6c4:	mov	x0, x10
  40d6c8:	b.hi	40d6ac <ferror@plt+0xa81c>  // b.pmore
  40d6cc:	mov	x0, x1
  40d6d0:	ret
  40d6d4:	stp	x29, x30, [sp, #-32]!
  40d6d8:	stp	x20, x19, [sp, #16]
  40d6dc:	mov	x29, sp
  40d6e0:	mov	w19, w1
  40d6e4:	mov	x20, x0
  40d6e8:	bl	4027c0 <strlen@plt>
  40d6ec:	mov	x1, x0
  40d6f0:	mov	x0, x20
  40d6f4:	mov	w2, w19
  40d6f8:	ldp	x20, x19, [sp, #16]
  40d6fc:	ldp	x29, x30, [sp], #32
  40d700:	b	40d704 <ferror@plt+0xa874>
  40d704:	sub	sp, sp, #0x60
  40d708:	stp	x29, x30, [sp, #16]
  40d70c:	str	x25, [sp, #32]
  40d710:	stp	x24, x23, [sp, #48]
  40d714:	stp	x22, x21, [sp, #64]
  40d718:	stp	x20, x19, [sp, #80]
  40d71c:	add	x29, sp, #0x10
  40d720:	mov	w21, w2
  40d724:	mov	x20, x1
  40d728:	mov	x19, x0
  40d72c:	add	x23, x0, x1
  40d730:	bl	402c10 <__ctype_get_mb_cur_max@plt>
  40d734:	cmp	x0, #0x1
  40d738:	b.ls	40d834 <ferror@plt+0xa9a4>  // b.plast
  40d73c:	cmp	x20, #0x1
  40d740:	b.lt	40d87c <ferror@plt+0xa9ec>  // b.tstop
  40d744:	mov	w20, wzr
  40d748:	mov	w24, #0x7fffffff            	// #2147483647
  40d74c:	tbnz	w21, #1, 40d8a0 <ferror@plt+0xaa10>
  40d750:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x25ec>
  40d754:	add	x25, x25, #0xc57
  40d758:	ldrb	w8, [x19]
  40d75c:	sub	w8, w8, #0x20
  40d760:	cmp	w8, #0x5e
  40d764:	b.hi	40d78c <ferror@plt+0xa8fc>  // b.pmore
  40d768:	adr	x9, 40d778 <ferror@plt+0xa8e8>
  40d76c:	ldrb	w10, [x25, x8]
  40d770:	add	x9, x9, x10, lsl #2
  40d774:	br	x9
  40d778:	add	x19, x19, #0x1
  40d77c:	add	w20, w20, #0x1
  40d780:	cmp	x19, x23
  40d784:	b.cc	40d758 <ferror@plt+0xa8c8>  // b.lo, b.ul, b.last
  40d788:	b	40d880 <ferror@plt+0xa9f0>
  40d78c:	str	xzr, [x29, #24]
  40d790:	b	40d7b0 <ferror@plt+0xa920>
  40d794:	ldur	w0, [x29, #-4]
  40d798:	bl	402840 <iswcntrl@plt>
  40d79c:	cbz	w0, 40d810 <ferror@plt+0xa980>
  40d7a0:	add	x0, x29, #0x18
  40d7a4:	add	x19, x19, x22
  40d7a8:	bl	402b20 <mbsinit@plt>
  40d7ac:	cbnz	w0, 40d780 <ferror@plt+0xa8f0>
  40d7b0:	sub	x2, x23, x19
  40d7b4:	sub	x0, x29, #0x4
  40d7b8:	add	x3, x29, #0x18
  40d7bc:	mov	x1, x19
  40d7c0:	bl	412578 <ferror@plt+0xf6e8>
  40d7c4:	cbz	x0, 40d7ec <ferror@plt+0xa95c>
  40d7c8:	mov	x22, x0
  40d7cc:	cmn	x0, #0x2
  40d7d0:	b.eq	40d820 <ferror@plt+0xa990>  // b.none
  40d7d4:	cmn	x22, #0x1
  40d7d8:	b.eq	40d82c <ferror@plt+0xa99c>  // b.none
  40d7dc:	ldur	w0, [x29, #-4]
  40d7e0:	bl	402940 <wcwidth@plt>
  40d7e4:	tbz	w0, #31, 40d7fc <ferror@plt+0xa96c>
  40d7e8:	b	40d794 <ferror@plt+0xa904>
  40d7ec:	mov	w22, #0x1                   	// #1
  40d7f0:	ldur	w0, [x29, #-4]
  40d7f4:	bl	402940 <wcwidth@plt>
  40d7f8:	tbnz	w0, #31, 40d794 <ferror@plt+0xa904>
  40d7fc:	sub	w8, w24, w20
  40d800:	cmp	w0, w8
  40d804:	b.gt	40d990 <ferror@plt+0xab00>
  40d808:	add	w20, w0, w20
  40d80c:	b	40d7a0 <ferror@plt+0xa910>
  40d810:	cmp	w20, w24
  40d814:	b.eq	40d990 <ferror@plt+0xab00>  // b.none
  40d818:	add	w20, w20, #0x1
  40d81c:	b	40d7a0 <ferror@plt+0xa910>
  40d820:	mov	x19, x23
  40d824:	tbz	w21, #0, 40d77c <ferror@plt+0xa8ec>
  40d828:	b	40d954 <ferror@plt+0xaac4>
  40d82c:	tbz	w21, #0, 40d778 <ferror@plt+0xa8e8>
  40d830:	b	40d954 <ferror@plt+0xaac4>
  40d834:	cmp	x20, #0x1
  40d838:	b.lt	40d87c <ferror@plt+0xa9ec>  // b.tstop
  40d83c:	bl	402bc0 <__ctype_b_loc@plt>
  40d840:	ldr	x8, [x0]
  40d844:	tbnz	w21, #1, 40d95c <ferror@plt+0xaacc>
  40d848:	mov	w20, wzr
  40d84c:	b	40d868 <ferror@plt+0xa9d8>
  40d850:	mov	w9, #0x7fffffff            	// #2147483647
  40d854:	cmp	w20, w9
  40d858:	b.eq	40d990 <ferror@plt+0xab00>  // b.none
  40d85c:	add	w20, w20, #0x1
  40d860:	cmp	x19, x23
  40d864:	b.cs	40d880 <ferror@plt+0xa9f0>  // b.hs, b.nlast
  40d868:	ldrb	w9, [x19], #1
  40d86c:	ldrh	w9, [x8, x9, lsl #1]
  40d870:	tbnz	w9, #14, 40d850 <ferror@plt+0xa9c0>
  40d874:	tbz	w9, #1, 40d850 <ferror@plt+0xa9c0>
  40d878:	b	40d860 <ferror@plt+0xa9d0>
  40d87c:	mov	w20, wzr
  40d880:	mov	w0, w20
  40d884:	ldp	x20, x19, [sp, #80]
  40d888:	ldp	x22, x21, [sp, #64]
  40d88c:	ldp	x24, x23, [sp, #48]
  40d890:	ldr	x25, [sp, #32]
  40d894:	ldp	x29, x30, [sp, #16]
  40d898:	add	sp, sp, #0x60
  40d89c:	ret
  40d8a0:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x25ec>
  40d8a4:	add	x25, x25, #0xbf8
  40d8a8:	ldrb	w8, [x19]
  40d8ac:	sub	w8, w8, #0x20
  40d8b0:	cmp	w8, #0x5e
  40d8b4:	b.hi	40d8dc <ferror@plt+0xaa4c>  // b.pmore
  40d8b8:	adr	x9, 40d8c8 <ferror@plt+0xaa38>
  40d8bc:	ldrb	w10, [x25, x8]
  40d8c0:	add	x9, x9, x10, lsl #2
  40d8c4:	br	x9
  40d8c8:	add	x19, x19, #0x1
  40d8cc:	add	w20, w20, #0x1
  40d8d0:	cmp	x19, x23
  40d8d4:	b.cc	40d8a8 <ferror@plt+0xaa18>  // b.lo, b.ul, b.last
  40d8d8:	b	40d880 <ferror@plt+0xa9f0>
  40d8dc:	str	xzr, [x29, #24]
  40d8e0:	sub	x2, x23, x19
  40d8e4:	sub	x0, x29, #0x4
  40d8e8:	add	x3, x29, #0x18
  40d8ec:	mov	x1, x19
  40d8f0:	bl	412578 <ferror@plt+0xf6e8>
  40d8f4:	cbz	x0, 40d910 <ferror@plt+0xaa80>
  40d8f8:	mov	x22, x0
  40d8fc:	cmn	x0, #0x2
  40d900:	b.eq	40d944 <ferror@plt+0xaab4>  // b.none
  40d904:	cmn	x22, #0x1
  40d908:	b.ne	40d914 <ferror@plt+0xaa84>  // b.any
  40d90c:	b	40d950 <ferror@plt+0xaac0>
  40d910:	mov	w22, #0x1                   	// #1
  40d914:	ldur	w0, [x29, #-4]
  40d918:	bl	402940 <wcwidth@plt>
  40d91c:	tbnz	w0, #31, 40d954 <ferror@plt+0xaac4>
  40d920:	sub	w8, w24, w20
  40d924:	cmp	w0, w8
  40d928:	b.gt	40d990 <ferror@plt+0xab00>
  40d92c:	add	w20, w0, w20
  40d930:	add	x0, x29, #0x18
  40d934:	add	x19, x19, x22
  40d938:	bl	402b20 <mbsinit@plt>
  40d93c:	cbz	w0, 40d8e0 <ferror@plt+0xaa50>
  40d940:	b	40d8d0 <ferror@plt+0xaa40>
  40d944:	mov	x19, x23
  40d948:	tbz	w21, #0, 40d8cc <ferror@plt+0xaa3c>
  40d94c:	b	40d954 <ferror@plt+0xaac4>
  40d950:	tbz	w21, #0, 40d8c8 <ferror@plt+0xaa38>
  40d954:	mov	w20, #0xffffffff            	// #-1
  40d958:	b	40d880 <ferror@plt+0xa9f0>
  40d95c:	mov	x9, xzr
  40d960:	mov	w20, #0x7fffffff            	// #2147483647
  40d964:	ldrb	w10, [x19, x9]
  40d968:	ldrh	w10, [x8, x10, lsl #1]
  40d96c:	tbz	w10, #14, 40d954 <ferror@plt+0xaac4>
  40d970:	cmp	w9, w20
  40d974:	b.eq	40d880 <ferror@plt+0xa9f0>  // b.none
  40d978:	add	x9, x9, #0x1
  40d97c:	add	x10, x19, x9
  40d980:	cmp	x10, x23
  40d984:	b.cc	40d964 <ferror@plt+0xaad4>  // b.lo, b.ul, b.last
  40d988:	mov	w20, w9
  40d98c:	b	40d880 <ferror@plt+0xa9f0>
  40d990:	mov	w20, #0x7fffffff            	// #2147483647
  40d994:	b	40d880 <ferror@plt+0xa9f0>
  40d998:	sub	sp, sp, #0xa0
  40d99c:	cmp	w0, #0x1
  40d9a0:	stp	x29, x30, [sp, #128]
  40d9a4:	stp	x20, x19, [sp, #144]
  40d9a8:	add	x29, sp, #0x80
  40d9ac:	b.eq	40dae8 <ferror@plt+0xac58>  // b.none
  40d9b0:	cmp	w0, #0x2
  40d9b4:	b.ne	40daf0 <ferror@plt+0xac60>  // b.any
  40d9b8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40d9bc:	add	x0, x0, #0xcb6
  40d9c0:	bl	402e20 <getenv@plt>
  40d9c4:	cbnz	x0, 40d9d0 <ferror@plt+0xab40>
  40d9c8:	b	40da40 <ferror@plt+0xabb0>
  40d9cc:	add	x0, x0, #0x1
  40d9d0:	ldrb	w8, [x0]
  40d9d4:	sub	w9, w8, #0x9
  40d9d8:	cmp	w9, #0x5
  40d9dc:	b.cc	40d9cc <ferror@plt+0xab3c>  // b.lo, b.ul, b.last
  40d9e0:	cmp	w8, #0x20
  40d9e4:	b.eq	40d9cc <ferror@plt+0xab3c>  // b.none
  40d9e8:	sub	w8, w8, #0x30
  40d9ec:	cmp	w8, #0x9
  40d9f0:	b.hi	40da40 <ferror@plt+0xabb0>  // b.pmore
  40d9f4:	mov	x1, sp
  40d9f8:	mov	w2, #0xa                   	// #10
  40d9fc:	str	xzr, [sp]
  40da00:	bl	4027b0 <strtoul@plt>
  40da04:	ldr	x8, [sp]
  40da08:	cbz	x8, 40da40 <ferror@plt+0xabb0>
  40da0c:	mov	x19, x0
  40da10:	b	40da18 <ferror@plt+0xab88>
  40da14:	add	x8, x8, #0x1
  40da18:	ldrb	w9, [x8]
  40da1c:	sub	w10, w9, #0x9
  40da20:	cmp	w10, #0x5
  40da24:	b.cc	40da14 <ferror@plt+0xab84>  // b.lo, b.ul, b.last
  40da28:	cmp	w9, #0x20
  40da2c:	b.eq	40da14 <ferror@plt+0xab84>  // b.none
  40da30:	cbz	w9, 40da44 <ferror@plt+0xabb4>
  40da34:	cmp	w9, #0x2c
  40da38:	b.eq	40da44 <ferror@plt+0xabb4>  // b.none
  40da3c:	str	x8, [sp]
  40da40:	mov	x19, xzr
  40da44:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40da48:	add	x0, x0, #0xcc6
  40da4c:	bl	402e20 <getenv@plt>
  40da50:	cbnz	x0, 40da5c <ferror@plt+0xabcc>
  40da54:	b	40db44 <ferror@plt+0xacb4>
  40da58:	add	x0, x0, #0x1
  40da5c:	ldrb	w8, [x0]
  40da60:	sub	w9, w8, #0x9
  40da64:	cmp	w9, #0x5
  40da68:	b.cc	40da58 <ferror@plt+0xabc8>  // b.lo, b.ul, b.last
  40da6c:	cmp	w8, #0x20
  40da70:	b.eq	40da58 <ferror@plt+0xabc8>  // b.none
  40da74:	sub	w8, w8, #0x30
  40da78:	cmp	w8, #0x9
  40da7c:	b.hi	40db44 <ferror@plt+0xacb4>  // b.pmore
  40da80:	mov	x1, sp
  40da84:	mov	w2, #0xa                   	// #10
  40da88:	str	xzr, [sp]
  40da8c:	bl	4027b0 <strtoul@plt>
  40da90:	ldr	x8, [sp]
  40da94:	cbz	x8, 40db44 <ferror@plt+0xacb4>
  40da98:	mov	x20, x0
  40da9c:	b	40daa4 <ferror@plt+0xac14>
  40daa0:	add	x8, x8, #0x1
  40daa4:	ldrb	w9, [x8]
  40daa8:	sub	w10, w9, #0x9
  40daac:	cmp	w10, #0x5
  40dab0:	b.cc	40daa0 <ferror@plt+0xac10>  // b.lo, b.ul, b.last
  40dab4:	cmp	w9, #0x20
  40dab8:	b.eq	40daa0 <ferror@plt+0xac10>  // b.none
  40dabc:	cbz	w9, 40dac8 <ferror@plt+0xac38>
  40dac0:	cmp	w9, #0x2c
  40dac4:	b.ne	40db40 <ferror@plt+0xacb0>  // b.any
  40dac8:	cbz	x20, 40db44 <ferror@plt+0xacb4>
  40dacc:	cmp	x19, x20
  40dad0:	csel	x0, x19, x20, cc  // cc = lo, ul, last
  40dad4:	cbz	x19, 40db54 <ferror@plt+0xacc4>
  40dad8:	ldp	x20, x19, [sp, #144]
  40dadc:	ldp	x29, x30, [sp, #128]
  40dae0:	add	sp, sp, #0xa0
  40dae4:	ret
  40dae8:	mov	x20, #0xffffffffffffffff    	// #-1
  40daec:	b	40db54 <ferror@plt+0xacc4>
  40daf0:	mov	w0, #0x53                  	// #83
  40daf4:	bl	402d50 <sysconf@plt>
  40daf8:	cmp	x0, #0x1
  40dafc:	b.ne	40db30 <ferror@plt+0xaca0>  // b.any
  40db00:	mov	x2, sp
  40db04:	mov	w1, #0x80                  	// #128
  40db08:	mov	w0, wzr
  40db0c:	bl	402b00 <sched_getaffinity@plt>
  40db10:	cbz	w0, 40db1c <ferror@plt+0xac8c>
  40db14:	mov	x20, #0xffffffffffffffff    	// #-1
  40db18:	b	40db78 <ferror@plt+0xace8>
  40db1c:	mov	x1, sp
  40db20:	mov	w0, #0x80                  	// #128
  40db24:	bl	402c90 <__sched_cpucount@plt>
  40db28:	cbz	w0, 40db14 <ferror@plt+0xac84>
  40db2c:	sxtw	x0, w0
  40db30:	cmp	x0, #0x0
  40db34:	mov	x20, #0xffffffffffffffff    	// #-1
  40db38:	b.gt	40db94 <ferror@plt+0xad04>
  40db3c:	b	40db78 <ferror@plt+0xace8>
  40db40:	str	x8, [sp]
  40db44:	mov	x20, #0xffffffffffffffff    	// #-1
  40db48:	cmp	x19, x20
  40db4c:	csel	x0, x19, x20, cc  // cc = lo, ul, last
  40db50:	cbnz	x19, 40dad8 <ferror@plt+0xac48>
  40db54:	mov	x2, sp
  40db58:	mov	w1, #0x80                  	// #128
  40db5c:	mov	w0, wzr
  40db60:	bl	402b00 <sched_getaffinity@plt>
  40db64:	cbz	w0, 40db80 <ferror@plt+0xacf0>
  40db68:	mov	w0, #0x54                  	// #84
  40db6c:	bl	402d50 <sysconf@plt>
  40db70:	cmp	x0, #0x0
  40db74:	b.gt	40db94 <ferror@plt+0xad04>
  40db78:	mov	w0, #0x1                   	// #1
  40db7c:	b	40db94 <ferror@plt+0xad04>
  40db80:	mov	x1, sp
  40db84:	mov	w0, #0x80                  	// #128
  40db88:	bl	402c90 <__sched_cpucount@plt>
  40db8c:	cbz	w0, 40db68 <ferror@plt+0xacd8>
  40db90:	sxtw	x0, w0
  40db94:	cmp	x0, x20
  40db98:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  40db9c:	ldp	x20, x19, [sp, #144]
  40dba0:	ldp	x29, x30, [sp, #128]
  40dba4:	add	sp, sp, #0xa0
  40dba8:	ret
  40dbac:	sub	sp, sp, #0x90
  40dbb0:	mov	w0, #0x55                  	// #85
  40dbb4:	stp	x29, x30, [sp, #112]
  40dbb8:	str	x19, [sp, #128]
  40dbbc:	add	x29, sp, #0x70
  40dbc0:	bl	402d50 <sysconf@plt>
  40dbc4:	mov	x19, x0
  40dbc8:	mov	w0, #0x1e                  	// #30
  40dbcc:	bl	402d50 <sysconf@plt>
  40dbd0:	orr	x8, x0, x19
  40dbd4:	tbnz	x8, #63, 40dbf4 <ferror@plt+0xad64>
  40dbd8:	scvtf	d0, x0
  40dbdc:	scvtf	d1, x19
  40dbe0:	fmul	d0, d1, d0
  40dbe4:	ldr	x19, [sp, #128]
  40dbe8:	ldp	x29, x30, [sp, #112]
  40dbec:	add	sp, sp, #0x90
  40dbf0:	ret
  40dbf4:	mov	x0, sp
  40dbf8:	bl	402800 <sysinfo@plt>
  40dbfc:	cbz	w0, 40dc18 <ferror@plt+0xad88>
  40dc00:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40dc04:	fmov	d0, x8
  40dc08:	ldr	x19, [sp, #128]
  40dc0c:	ldp	x29, x30, [sp, #112]
  40dc10:	add	sp, sp, #0x90
  40dc14:	ret
  40dc18:	ldr	d0, [sp, #32]
  40dc1c:	ldr	s1, [sp, #104]
  40dc20:	ucvtf	d0, d0
  40dc24:	ucvtf	d1, d1
  40dc28:	fmul	d0, d0, d1
  40dc2c:	ldr	x19, [sp, #128]
  40dc30:	ldp	x29, x30, [sp, #112]
  40dc34:	add	sp, sp, #0x90
  40dc38:	ret
  40dc3c:	sub	sp, sp, #0x90
  40dc40:	mov	w0, #0x56                  	// #86
  40dc44:	stp	x29, x30, [sp, #112]
  40dc48:	str	x19, [sp, #128]
  40dc4c:	add	x29, sp, #0x70
  40dc50:	bl	402d50 <sysconf@plt>
  40dc54:	mov	x19, x0
  40dc58:	mov	w0, #0x1e                  	// #30
  40dc5c:	bl	402d50 <sysconf@plt>
  40dc60:	orr	x8, x0, x19
  40dc64:	tbnz	x8, #63, 40dc84 <ferror@plt+0xadf4>
  40dc68:	scvtf	d0, x0
  40dc6c:	scvtf	d1, x19
  40dc70:	fmul	d0, d1, d0
  40dc74:	ldr	x19, [sp, #128]
  40dc78:	ldp	x29, x30, [sp, #112]
  40dc7c:	add	sp, sp, #0x90
  40dc80:	ret
  40dc84:	mov	x0, sp
  40dc88:	bl	402800 <sysinfo@plt>
  40dc8c:	cbz	w0, 40dcbc <ferror@plt+0xae2c>
  40dc90:	mov	w0, #0x55                  	// #85
  40dc94:	bl	402d50 <sysconf@plt>
  40dc98:	mov	x19, x0
  40dc9c:	mov	w0, #0x1e                  	// #30
  40dca0:	bl	402d50 <sysconf@plt>
  40dca4:	orr	x8, x0, x19
  40dca8:	tbnz	x8, #63, 40dcdc <ferror@plt+0xae4c>
  40dcac:	scvtf	d0, x0
  40dcb0:	scvtf	d1, x19
  40dcb4:	fmul	d0, d1, d0
  40dcb8:	b	40dd08 <ferror@plt+0xae78>
  40dcbc:	ldr	d0, [sp, #40]
  40dcc0:	ldr	d1, [sp, #56]
  40dcc4:	ldr	s2, [sp, #104]
  40dcc8:	ucvtf	d0, d0
  40dccc:	ucvtf	d1, d1
  40dcd0:	fadd	d0, d0, d1
  40dcd4:	ucvtf	d1, d2
  40dcd8:	b	40dd0c <ferror@plt+0xae7c>
  40dcdc:	mov	x0, sp
  40dce0:	bl	402800 <sysinfo@plt>
  40dce4:	cbz	w0, 40dcf4 <ferror@plt+0xae64>
  40dce8:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  40dcec:	fmov	d0, x8
  40dcf0:	b	40dd08 <ferror@plt+0xae78>
  40dcf4:	ldr	d0, [sp, #32]
  40dcf8:	ldr	s1, [sp, #104]
  40dcfc:	ucvtf	d0, d0
  40dd00:	ucvtf	d1, d1
  40dd04:	fmul	d0, d0, d1
  40dd08:	fmov	d1, #2.500000000000000000e-01
  40dd0c:	fmul	d0, d0, d1
  40dd10:	ldr	x19, [sp, #128]
  40dd14:	ldp	x29, x30, [sp, #112]
  40dd18:	add	sp, sp, #0x90
  40dd1c:	ret
  40dd20:	stp	x29, x30, [sp, #-64]!
  40dd24:	str	x23, [sp, #16]
  40dd28:	stp	x22, x21, [sp, #32]
  40dd2c:	stp	x20, x19, [sp, #48]
  40dd30:	adrp	x23, 427000 <_obstack_memory_used@@Base+0x145ec>
  40dd34:	ldr	w8, [x23, #2976]
  40dd38:	ldr	x22, [x0]
  40dd3c:	mov	x19, x0
  40dd40:	mov	w20, w1
  40dd44:	mov	x29, sp
  40dd48:	tbnz	w8, #31, 40dd78 <ferror@plt+0xaee8>
  40dd4c:	mov	x0, x19
  40dd50:	mov	w1, w20
  40dd54:	bl	402b40 <pipe2@plt>
  40dd58:	mov	w21, w0
  40dd5c:	tbz	w0, #31, 40dd9c <ferror@plt+0xaf0c>
  40dd60:	bl	402e00 <__errno_location@plt>
  40dd64:	ldr	w8, [x0]
  40dd68:	cmp	w8, #0x26
  40dd6c:	b.ne	40dd9c <ferror@plt+0xaf0c>  // b.any
  40dd70:	mov	w8, #0xffffffff            	// #-1
  40dd74:	str	w8, [x23, #2976]
  40dd78:	mov	w8, #0xf7ff                	// #63487
  40dd7c:	movk	w8, #0xfff7, lsl #16
  40dd80:	tst	w20, w8
  40dd84:	b.eq	40ddbc <ferror@plt+0xaf2c>  // b.none
  40dd88:	bl	402e00 <__errno_location@plt>
  40dd8c:	mov	w8, #0x16                  	// #22
  40dd90:	str	w8, [x0]
  40dd94:	mov	w21, #0xffffffff            	// #-1
  40dd98:	b	40dda4 <ferror@plt+0xaf14>
  40dd9c:	mov	w8, #0x1                   	// #1
  40dda0:	str	w8, [x23, #2976]
  40dda4:	mov	w0, w21
  40dda8:	ldp	x20, x19, [sp, #48]
  40ddac:	ldp	x22, x21, [sp, #32]
  40ddb0:	ldr	x23, [sp, #16]
  40ddb4:	ldp	x29, x30, [sp], #64
  40ddb8:	ret
  40ddbc:	mov	x0, x19
  40ddc0:	bl	402820 <pipe@plt>
  40ddc4:	tbnz	w0, #31, 40dd94 <ferror@plt+0xaf04>
  40ddc8:	tbnz	w20, #11, 40ddd8 <ferror@plt+0xaf48>
  40ddcc:	tbnz	w20, #19, 40de3c <ferror@plt+0xafac>
  40ddd0:	mov	w21, wzr
  40ddd4:	b	40dda4 <ferror@plt+0xaf14>
  40ddd8:	ldr	w0, [x19, #4]
  40dddc:	mov	w1, #0x3                   	// #3
  40dde0:	mov	w2, wzr
  40dde4:	bl	4121e8 <ferror@plt+0xf358>
  40dde8:	tbnz	w0, #31, 40de9c <ferror@plt+0xb00c>
  40ddec:	ldr	w8, [x19, #4]
  40ddf0:	orr	w2, w0, #0x800
  40ddf4:	mov	w1, #0x4                   	// #4
  40ddf8:	mov	w0, w8
  40ddfc:	bl	4121e8 <ferror@plt+0xf358>
  40de00:	cmn	w0, #0x1
  40de04:	b.eq	40de9c <ferror@plt+0xb00c>  // b.none
  40de08:	ldr	w0, [x19]
  40de0c:	mov	w1, #0x3                   	// #3
  40de10:	mov	w2, wzr
  40de14:	bl	4121e8 <ferror@plt+0xf358>
  40de18:	tbnz	w0, #31, 40de9c <ferror@plt+0xb00c>
  40de1c:	ldr	w8, [x19]
  40de20:	orr	w2, w0, #0x800
  40de24:	mov	w1, #0x4                   	// #4
  40de28:	mov	w0, w8
  40de2c:	bl	4121e8 <ferror@plt+0xf358>
  40de30:	cmn	w0, #0x1
  40de34:	b.ne	40ddcc <ferror@plt+0xaf3c>  // b.any
  40de38:	b	40de9c <ferror@plt+0xb00c>
  40de3c:	ldr	w0, [x19, #4]
  40de40:	mov	w1, #0x1                   	// #1
  40de44:	mov	w2, wzr
  40de48:	bl	4121e8 <ferror@plt+0xf358>
  40de4c:	tbnz	w0, #31, 40de9c <ferror@plt+0xb00c>
  40de50:	ldr	w8, [x19, #4]
  40de54:	orr	w2, w0, #0x1
  40de58:	mov	w1, #0x2                   	// #2
  40de5c:	mov	w0, w8
  40de60:	bl	4121e8 <ferror@plt+0xf358>
  40de64:	cmn	w0, #0x1
  40de68:	b.eq	40de9c <ferror@plt+0xb00c>  // b.none
  40de6c:	ldr	w0, [x19]
  40de70:	mov	w1, #0x1                   	// #1
  40de74:	mov	w2, wzr
  40de78:	bl	4121e8 <ferror@plt+0xf358>
  40de7c:	tbnz	w0, #31, 40de9c <ferror@plt+0xb00c>
  40de80:	ldr	w8, [x19]
  40de84:	orr	w2, w0, #0x1
  40de88:	mov	w1, #0x2                   	// #2
  40de8c:	mov	w0, w8
  40de90:	bl	4121e8 <ferror@plt+0xf358>
  40de94:	cmn	w0, #0x1
  40de98:	b.ne	40ddd0 <ferror@plt+0xaf40>  // b.any
  40de9c:	bl	402e00 <__errno_location@plt>
  40dea0:	mov	x20, x0
  40dea4:	ldr	w21, [x0]
  40dea8:	ldr	w0, [x19]
  40deac:	bl	402a70 <close@plt>
  40deb0:	ldr	w0, [x19, #4]
  40deb4:	bl	402a70 <close@plt>
  40deb8:	str	x22, [x19]
  40debc:	str	w21, [x20]
  40dec0:	b	40dd94 <ferror@plt+0xaf04>
  40dec4:	stp	x29, x30, [sp, #-32]!
  40dec8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40decc:	str	x19, [sp, #16]
  40ded0:	mov	w19, #0x1069                	// #4201
  40ded4:	add	x0, x0, #0xcd7
  40ded8:	mov	x29, sp
  40dedc:	movk	w19, #0x3, lsl #16
  40dee0:	bl	402e20 <getenv@plt>
  40dee4:	cbz	x0, 40df08 <ferror@plt+0xb078>
  40dee8:	ldrb	w8, [x0]
  40deec:	cbz	w8, 40df08 <ferror@plt+0xb078>
  40def0:	add	x1, x29, #0x18
  40def4:	mov	w2, #0xa                   	// #10
  40def8:	bl	402bd0 <strtol@plt>
  40defc:	ldr	x8, [x29, #24]
  40df00:	ldrb	w8, [x8]
  40df04:	cbz	w8, 40df18 <ferror@plt+0xb088>
  40df08:	mov	w0, w19
  40df0c:	ldr	x19, [sp, #16]
  40df10:	ldp	x29, x30, [sp], #32
  40df14:	ret
  40df18:	mov	w8, #0x7ffffffe            	// #2147483646
  40df1c:	cmp	x0, x8
  40df20:	b.gt	40df48 <ferror@plt+0xb0b8>
  40df24:	mov	x8, #0xffffffff80000001    	// #-2147483647
  40df28:	cmp	x0, x8
  40df2c:	mov	x19, x0
  40df30:	b.ge	40df08 <ferror@plt+0xb078>  // b.tcont
  40df34:	mov	x19, #0xffffffff80000000    	// #-2147483648
  40df38:	mov	w0, w19
  40df3c:	ldr	x19, [sp, #16]
  40df40:	ldp	x29, x30, [sp], #32
  40df44:	ret
  40df48:	mov	w19, #0x7fffffff            	// #2147483647
  40df4c:	mov	w0, w19
  40df50:	ldr	x19, [sp, #16]
  40df54:	ldp	x29, x30, [sp], #32
  40df58:	ret
  40df5c:	stp	x29, x30, [sp, #-32]!
  40df60:	stp	x20, x19, [sp, #16]
  40df64:	mov	x29, sp
  40df68:	cbz	x0, 40dfe8 <ferror@plt+0xb158>
  40df6c:	mov	w1, #0x2f                  	// #47
  40df70:	mov	x19, x0
  40df74:	bl	402a90 <strrchr@plt>
  40df78:	cmp	x0, #0x0
  40df7c:	csinc	x20, x19, x0, eq  // eq = none
  40df80:	sub	x8, x20, x19
  40df84:	cmp	x8, #0x7
  40df88:	b.lt	40dfcc <ferror@plt+0xb13c>  // b.tstop
  40df8c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40df90:	sub	x0, x20, #0x7
  40df94:	add	x1, x1, #0xd1f
  40df98:	mov	w2, #0x7                   	// #7
  40df9c:	bl	402990 <strncmp@plt>
  40dfa0:	cbnz	w0, 40dfcc <ferror@plt+0xb13c>
  40dfa4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40dfa8:	add	x1, x1, #0xd27
  40dfac:	mov	w2, #0x3                   	// #3
  40dfb0:	mov	x0, x20
  40dfb4:	bl	402990 <strncmp@plt>
  40dfb8:	mov	x19, x20
  40dfbc:	cbnz	w0, 40dfcc <ferror@plt+0xb13c>
  40dfc0:	add	x19, x20, #0x3
  40dfc4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40dfc8:	str	x19, [x8, #1360]
  40dfcc:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40dfd0:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40dfd4:	str	x19, [x8, #2984]
  40dfd8:	str	x19, [x9, #1312]
  40dfdc:	ldp	x20, x19, [sp, #16]
  40dfe0:	ldp	x29, x30, [sp], #32
  40dfe4:	ret
  40dfe8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40dfec:	ldr	x3, [x8, #1320]
  40dff0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40dff4:	add	x0, x0, #0xce7
  40dff8:	mov	w1, #0x37                  	// #55
  40dffc:	mov	w2, #0x1                   	// #1
  40e000:	bl	402c70 <fwrite@plt>
  40e004:	bl	402ae0 <abort@plt>
  40e008:	stp	x29, x30, [sp, #-48]!
  40e00c:	str	x21, [sp, #16]
  40e010:	stp	x20, x19, [sp, #32]
  40e014:	mov	x29, sp
  40e018:	mov	x19, x0
  40e01c:	bl	402e00 <__errno_location@plt>
  40e020:	ldr	w21, [x0]
  40e024:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e028:	add	x8, x8, #0xbb0
  40e02c:	cmp	x19, #0x0
  40e030:	mov	x20, x0
  40e034:	csel	x0, x8, x19, eq  // eq = none
  40e038:	mov	w1, #0x38                  	// #56
  40e03c:	bl	41158c <ferror@plt+0xe6fc>
  40e040:	str	w21, [x20]
  40e044:	ldp	x20, x19, [sp, #32]
  40e048:	ldr	x21, [sp, #16]
  40e04c:	ldp	x29, x30, [sp], #48
  40e050:	ret
  40e054:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e058:	add	x8, x8, #0xbb0
  40e05c:	cmp	x0, #0x0
  40e060:	csel	x8, x8, x0, eq  // eq = none
  40e064:	ldr	w0, [x8]
  40e068:	ret
  40e06c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e070:	add	x8, x8, #0xbb0
  40e074:	cmp	x0, #0x0
  40e078:	csel	x8, x8, x0, eq  // eq = none
  40e07c:	str	w1, [x8]
  40e080:	ret
  40e084:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e088:	add	x8, x8, #0xbb0
  40e08c:	cmp	x0, #0x0
  40e090:	ubfx	w9, w1, #5, #3
  40e094:	csel	x8, x8, x0, eq  // eq = none
  40e098:	add	x8, x8, w9, uxtw #2
  40e09c:	ldr	w9, [x8, #8]
  40e0a0:	lsr	w10, w9, w1
  40e0a4:	and	w0, w10, #0x1
  40e0a8:	and	w10, w2, #0x1
  40e0ac:	eor	w10, w0, w10
  40e0b0:	lsl	w10, w10, w1
  40e0b4:	eor	w9, w10, w9
  40e0b8:	str	w9, [x8, #8]
  40e0bc:	ret
  40e0c0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e0c4:	add	x8, x8, #0xbb0
  40e0c8:	cmp	x0, #0x0
  40e0cc:	csel	x8, x8, x0, eq  // eq = none
  40e0d0:	ldr	w0, [x8, #4]
  40e0d4:	str	w1, [x8, #4]
  40e0d8:	ret
  40e0dc:	stp	x29, x30, [sp, #-16]!
  40e0e0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e0e4:	add	x8, x8, #0xbb0
  40e0e8:	cmp	x0, #0x0
  40e0ec:	csel	x8, x8, x0, eq  // eq = none
  40e0f0:	mov	w9, #0xa                   	// #10
  40e0f4:	mov	x29, sp
  40e0f8:	str	w9, [x8]
  40e0fc:	cbz	x1, 40e110 <ferror@plt+0xb280>
  40e100:	cbz	x2, 40e110 <ferror@plt+0xb280>
  40e104:	stp	x1, x2, [x8, #40]
  40e108:	ldp	x29, x30, [sp], #16
  40e10c:	ret
  40e110:	bl	402ae0 <abort@plt>
  40e114:	sub	sp, sp, #0x60
  40e118:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40e11c:	add	x8, x8, #0xbb0
  40e120:	cmp	x4, #0x0
  40e124:	stp	x29, x30, [sp, #16]
  40e128:	str	x25, [sp, #32]
  40e12c:	stp	x24, x23, [sp, #48]
  40e130:	stp	x22, x21, [sp, #64]
  40e134:	stp	x20, x19, [sp, #80]
  40e138:	add	x29, sp, #0x10
  40e13c:	mov	x19, x3
  40e140:	mov	x20, x2
  40e144:	mov	x21, x1
  40e148:	mov	x22, x0
  40e14c:	csel	x24, x8, x4, eq  // eq = none
  40e150:	bl	402e00 <__errno_location@plt>
  40e154:	ldp	w4, w5, [x24]
  40e158:	ldp	x7, x8, [x24, #40]
  40e15c:	ldr	w25, [x0]
  40e160:	mov	x23, x0
  40e164:	add	x6, x24, #0x8
  40e168:	mov	x0, x22
  40e16c:	mov	x1, x21
  40e170:	mov	x2, x20
  40e174:	mov	x3, x19
  40e178:	str	x8, [sp]
  40e17c:	bl	40e1a0 <ferror@plt+0xb310>
  40e180:	str	w25, [x23]
  40e184:	ldp	x20, x19, [sp, #80]
  40e188:	ldp	x22, x21, [sp, #64]
  40e18c:	ldp	x24, x23, [sp, #48]
  40e190:	ldr	x25, [sp, #32]
  40e194:	ldp	x29, x30, [sp, #16]
  40e198:	add	sp, sp, #0x60
  40e19c:	ret
  40e1a0:	sub	sp, sp, #0x120
  40e1a4:	stp	x29, x30, [sp, #192]
  40e1a8:	add	x29, sp, #0xc0
  40e1ac:	ldr	x8, [x29, #96]
  40e1b0:	stp	x28, x27, [sp, #208]
  40e1b4:	stp	x26, x25, [sp, #224]
  40e1b8:	stp	x24, x23, [sp, #240]
  40e1bc:	stp	x22, x21, [sp, #256]
  40e1c0:	stp	x20, x19, [sp, #272]
  40e1c4:	str	x7, [sp, #96]
  40e1c8:	stur	x6, [x29, #-40]
  40e1cc:	mov	w20, w5
  40e1d0:	mov	w24, w4
  40e1d4:	mov	x22, x3
  40e1d8:	mov	x19, x2
  40e1dc:	mov	x23, x1
  40e1e0:	stur	x8, [x29, #-88]
  40e1e4:	mov	x28, x0
  40e1e8:	bl	402c10 <__ctype_get_mb_cur_max@plt>
  40e1ec:	mov	w8, wzr
  40e1f0:	mov	w15, wzr
  40e1f4:	stp	wzr, w20, [sp, #84]
  40e1f8:	ubfx	w21, w20, #1, #1
  40e1fc:	mov	w20, w24
  40e200:	add	x9, x19, #0x1
  40e204:	mov	w14, #0x1                   	// #1
  40e208:	str	x0, [sp, #32]
  40e20c:	str	xzr, [sp, #72]
  40e210:	stur	xzr, [x29, #-64]
  40e214:	stur	xzr, [x29, #-32]
  40e218:	stur	x9, [x29, #-80]
  40e21c:	cmp	w20, #0xa
  40e220:	b.hi	40f14c <ferror@plt+0xc2bc>  // b.pmore
  40e224:	adrp	x12, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e228:	mov	w9, w20
  40e22c:	add	x12, x12, #0xd30
  40e230:	adr	x10, 40e254 <ferror@plt+0xb3c4>
  40e234:	ldrb	w11, [x12, x9]
  40e238:	add	x10, x10, x11, lsl #2
  40e23c:	mov	x24, x23
  40e240:	mov	x27, xzr
  40e244:	mov	w17, wzr
  40e248:	mov	w16, #0x1                   	// #1
  40e24c:	mov	x23, x22
  40e250:	br	x10
  40e254:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e258:	add	x25, x25, #0xe8c
  40e25c:	mov	w2, #0x5                   	// #5
  40e260:	mov	x0, xzr
  40e264:	mov	x1, x25
  40e268:	mov	w27, w15
  40e26c:	mov	w26, w14
  40e270:	mov	w22, w20
  40e274:	bl	402d70 <dcgettext@plt>
  40e278:	mov	x20, x0
  40e27c:	cmp	x0, x25
  40e280:	b.ne	40e450 <ferror@plt+0xb5c0>  // b.any
  40e284:	bl	412e64 <_obstack_memory_used@@Base+0x450>
  40e288:	ldrb	w8, [x0]
  40e28c:	and	w8, w8, #0xffffffdf
  40e290:	cmp	w8, #0x47
  40e294:	b.eq	40e3e0 <ferror@plt+0xb550>  // b.none
  40e298:	cmp	w8, #0x55
  40e29c:	mov	w9, w22
  40e2a0:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e2a4:	ldrb	w8, [x0, #1]
  40e2a8:	and	w8, w8, #0xffffffdf
  40e2ac:	cmp	w8, #0x54
  40e2b0:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e2b4:	ldrb	w8, [x0, #2]
  40e2b8:	and	w8, w8, #0xffffffdf
  40e2bc:	cmp	w8, #0x46
  40e2c0:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e2c4:	ldrb	w8, [x0, #3]
  40e2c8:	cmp	w8, #0x2d
  40e2cc:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e2d0:	ldrb	w8, [x0, #4]
  40e2d4:	cmp	w8, #0x38
  40e2d8:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e2dc:	ldrb	w8, [x0, #5]
  40e2e0:	cbnz	w8, 40e438 <ferror@plt+0xb5a8>
  40e2e4:	adrp	x20, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e2e8:	add	x20, x20, #0xe8e
  40e2ec:	b	40e450 <ferror@plt+0xb5c0>
  40e2f0:	mov	w8, #0x1                   	// #1
  40e2f4:	b	40e374 <ferror@plt+0xb4e4>
  40e2f8:	tbnz	w21, #0, 40e374 <ferror@plt+0xb4e4>
  40e2fc:	mov	w16, w8
  40e300:	mov	w17, wzr
  40e304:	cbz	x24, 40e310 <ferror@plt+0xb480>
  40e308:	mov	w8, #0x27                  	// #39
  40e30c:	strb	w8, [x28]
  40e310:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e314:	add	x8, x8, #0x54
  40e318:	stur	x8, [x29, #-64]
  40e31c:	mov	w8, #0x1                   	// #1
  40e320:	mov	w20, #0x2                   	// #2
  40e324:	mov	w27, #0x1                   	// #1
  40e328:	stur	x8, [x29, #-32]
  40e32c:	b	40e5e0 <ferror@plt+0xb750>
  40e330:	tbz	w21, #0, 40e39c <ferror@plt+0xb50c>
  40e334:	mov	w8, #0x1                   	// #1
  40e338:	stur	x8, [x29, #-32]
  40e33c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e340:	add	x8, x8, #0x741
  40e344:	mov	x27, xzr
  40e348:	mov	w20, #0x5                   	// #5
  40e34c:	stur	x8, [x29, #-64]
  40e350:	mov	w16, #0x1                   	// #1
  40e354:	mov	w17, #0x1                   	// #1
  40e358:	b	40e5e0 <ferror@plt+0xb750>
  40e35c:	mov	w20, wzr
  40e360:	mov	x27, xzr
  40e364:	mov	w17, wzr
  40e368:	mov	w16, w8
  40e36c:	b	40e5e0 <ferror@plt+0xb750>
  40e370:	tbz	w21, #0, 40e3d0 <ferror@plt+0xb540>
  40e374:	mov	w9, #0x1                   	// #1
  40e378:	stur	x9, [x29, #-32]
  40e37c:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e380:	add	x9, x9, #0x54
  40e384:	mov	x27, xzr
  40e388:	mov	w20, #0x2                   	// #2
  40e38c:	stur	x9, [x29, #-64]
  40e390:	mov	w16, w8
  40e394:	mov	w17, #0x1                   	// #1
  40e398:	b	40e5e0 <ferror@plt+0xb750>
  40e39c:	mov	w17, wzr
  40e3a0:	cbz	x24, 40e3ac <ferror@plt+0xb51c>
  40e3a4:	mov	w8, #0x22                  	// #34
  40e3a8:	strb	w8, [x28]
  40e3ac:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e3b0:	add	x8, x8, #0x741
  40e3b4:	stur	x8, [x29, #-64]
  40e3b8:	mov	w8, #0x1                   	// #1
  40e3bc:	mov	w27, #0x1                   	// #1
  40e3c0:	mov	w20, #0x5                   	// #5
  40e3c4:	stur	x8, [x29, #-32]
  40e3c8:	mov	w16, #0x1                   	// #1
  40e3cc:	b	40e5e0 <ferror@plt+0xb750>
  40e3d0:	mov	w16, #0x1                   	// #1
  40e3d4:	mov	w17, wzr
  40e3d8:	cbnz	x24, 40e308 <ferror@plt+0xb478>
  40e3dc:	b	40e310 <ferror@plt+0xb480>
  40e3e0:	ldrb	w8, [x0, #1]
  40e3e4:	mov	w9, w22
  40e3e8:	and	w8, w8, #0xffffffdf
  40e3ec:	cmp	w8, #0x42
  40e3f0:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e3f4:	ldrb	w8, [x0, #2]
  40e3f8:	cmp	w8, #0x31
  40e3fc:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e400:	ldrb	w8, [x0, #3]
  40e404:	cmp	w8, #0x38
  40e408:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e40c:	ldrb	w8, [x0, #4]
  40e410:	cmp	w8, #0x30
  40e414:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e418:	ldrb	w8, [x0, #5]
  40e41c:	cmp	w8, #0x33
  40e420:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e424:	ldrb	w8, [x0, #6]
  40e428:	cmp	w8, #0x30
  40e42c:	b.ne	40e438 <ferror@plt+0xb5a8>  // b.any
  40e430:	ldrb	w8, [x0, #7]
  40e434:	cbz	w8, 40f018 <ferror@plt+0xc188>
  40e438:	cmp	w9, #0x9
  40e43c:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e440:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e444:	add	x8, x8, #0x54
  40e448:	add	x9, x9, #0x741
  40e44c:	csel	x20, x9, x8, eq  // eq = none
  40e450:	adrp	x25, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e454:	add	x25, x25, #0x54
  40e458:	mov	w2, #0x5                   	// #5
  40e45c:	mov	x0, xzr
  40e460:	mov	x1, x25
  40e464:	bl	402d70 <dcgettext@plt>
  40e468:	cmp	x0, x25
  40e46c:	stur	x0, [x29, #-88]
  40e470:	str	x20, [sp, #96]
  40e474:	b.eq	40e480 <ferror@plt+0xb5f0>  // b.none
  40e478:	mov	w20, w22
  40e47c:	b	40e564 <ferror@plt+0xb6d4>
  40e480:	bl	412e64 <_obstack_memory_used@@Base+0x450>
  40e484:	ldrb	w8, [x0]
  40e488:	and	w8, w8, #0xffffffdf
  40e48c:	cmp	w8, #0x47
  40e490:	b.eq	40e4f0 <ferror@plt+0xb660>  // b.none
  40e494:	cmp	w8, #0x55
  40e498:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e49c:	ldrb	w8, [x0, #1]
  40e4a0:	and	w8, w8, #0xffffffdf
  40e4a4:	cmp	w8, #0x54
  40e4a8:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e4ac:	ldrb	w8, [x0, #2]
  40e4b0:	and	w8, w8, #0xffffffdf
  40e4b4:	cmp	w8, #0x46
  40e4b8:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e4bc:	ldrb	w8, [x0, #3]
  40e4c0:	cmp	w8, #0x2d
  40e4c4:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e4c8:	ldrb	w8, [x0, #4]
  40e4cc:	cmp	w8, #0x38
  40e4d0:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e4d4:	ldrb	w8, [x0, #5]
  40e4d8:	cbnz	w8, 40e544 <ferror@plt+0xb6b4>
  40e4dc:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e4e0:	add	x8, x8, #0xe92
  40e4e4:	stur	x8, [x29, #-88]
  40e4e8:	mov	w20, w22
  40e4ec:	b	40e564 <ferror@plt+0xb6d4>
  40e4f0:	ldrb	w8, [x0, #1]
  40e4f4:	and	w8, w8, #0xffffffdf
  40e4f8:	cmp	w8, #0x42
  40e4fc:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e500:	ldrb	w8, [x0, #2]
  40e504:	cmp	w8, #0x31
  40e508:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e50c:	ldrb	w8, [x0, #3]
  40e510:	cmp	w8, #0x38
  40e514:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e518:	ldrb	w8, [x0, #4]
  40e51c:	cmp	w8, #0x30
  40e520:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e524:	ldrb	w8, [x0, #5]
  40e528:	cmp	w8, #0x33
  40e52c:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e530:	ldrb	w8, [x0, #6]
  40e534:	cmp	w8, #0x30
  40e538:	b.ne	40e544 <ferror@plt+0xb6b4>  // b.any
  40e53c:	ldrb	w8, [x0, #7]
  40e540:	cbz	w8, 40f024 <ferror@plt+0xc194>
  40e544:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e548:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e54c:	cmp	w22, #0x9
  40e550:	add	x8, x8, #0x54
  40e554:	add	x9, x9, #0x741
  40e558:	mov	w20, w22
  40e55c:	csel	x8, x9, x8, eq  // eq = none
  40e560:	stur	x8, [x29, #-88]
  40e564:	mov	w14, w26
  40e568:	mov	w15, w27
  40e56c:	tbnz	w21, #0, 40e5b0 <ferror@plt+0xb720>
  40e570:	ldr	x8, [sp, #96]
  40e574:	ldrb	w9, [x8]
  40e578:	cbz	w9, 40e5b0 <ferror@plt+0xb720>
  40e57c:	mov	w26, w15
  40e580:	mov	w22, w14
  40e584:	mov	x10, xzr
  40e588:	add	x8, x8, #0x1
  40e58c:	b	40e5a0 <ferror@plt+0xb710>
  40e590:	ldrb	w9, [x8, x10]
  40e594:	add	x27, x10, #0x1
  40e598:	mov	x10, x27
  40e59c:	cbz	w9, 40e5bc <ferror@plt+0xb72c>
  40e5a0:	cmp	x10, x24
  40e5a4:	b.cs	40e590 <ferror@plt+0xb700>  // b.hs, b.nlast
  40e5a8:	strb	w9, [x28, x10]
  40e5ac:	b	40e590 <ferror@plt+0xb700>
  40e5b0:	mov	w26, w15
  40e5b4:	mov	w22, w14
  40e5b8:	mov	x27, xzr
  40e5bc:	ldur	x25, [x29, #-88]
  40e5c0:	mov	x0, x25
  40e5c4:	bl	4027c0 <strlen@plt>
  40e5c8:	stur	x0, [x29, #-32]
  40e5cc:	mov	w16, #0x1                   	// #1
  40e5d0:	stur	x25, [x29, #-64]
  40e5d4:	mov	w17, w21
  40e5d8:	mov	w14, w22
  40e5dc:	mov	w15, w26
  40e5e0:	ldp	x8, x9, [x29, #-40]
  40e5e4:	eor	w18, w17, #0x1
  40e5e8:	stur	w18, [x29, #-68]
  40e5ec:	mov	x22, xzr
  40e5f0:	cmp	x8, #0x0
  40e5f4:	cset	w8, eq  // eq = none
  40e5f8:	cmp	x9, #0x0
  40e5fc:	cset	w9, ne  // ne = any
  40e600:	cmp	w20, #0x2
  40e604:	cset	w10, ne  // ne = any
  40e608:	and	w13, w10, w16
  40e60c:	and	w12, w9, w17
  40e610:	orr	w10, w10, w18
  40e614:	and	w18, w9, w13
  40e618:	orr	w9, w13, w17
  40e61c:	eor	w9, w9, #0x1
  40e620:	cset	w11, eq  // eq = none
  40e624:	orr	w8, w8, w9
  40e628:	and	w12, w16, w12
  40e62c:	str	w10, [sp, #92]
  40e630:	and	w10, w11, w17
  40e634:	stur	w8, [x29, #-24]
  40e638:	eor	w8, w16, #0x1
  40e63c:	stp	w10, w12, [sp, #60]
  40e640:	stur	w16, [x29, #-72]
  40e644:	str	w8, [sp, #68]
  40e648:	stp	w17, w20, [x29, #-48]
  40e64c:	stur	w18, [x29, #-52]
  40e650:	cmn	x23, #0x1
  40e654:	b.eq	40e664 <ferror@plt+0xb7d4>  // b.none
  40e658:	cmp	x22, x23
  40e65c:	b.ne	40e66c <ferror@plt+0xb7dc>  // b.any
  40e660:	b	40efa8 <ferror@plt+0xc118>
  40e664:	ldrb	w8, [x19, x22]
  40e668:	cbz	w8, 40efb0 <ferror@plt+0xc120>
  40e66c:	cbz	w18, 40e6b4 <ferror@plt+0xb824>
  40e670:	ldur	x8, [x29, #-32]
  40e674:	cmp	x8, #0x2
  40e678:	add	x20, x22, x8
  40e67c:	b.cc	40e6a8 <ferror@plt+0xb818>  // b.lo, b.ul, b.last
  40e680:	cmn	x23, #0x1
  40e684:	b.ne	40e6a8 <ferror@plt+0xb818>  // b.any
  40e688:	mov	x0, x19
  40e68c:	mov	w21, w14
  40e690:	mov	w25, w15
  40e694:	bl	4027c0 <strlen@plt>
  40e698:	ldp	w18, w17, [x29, #-52]
  40e69c:	mov	x23, x0
  40e6a0:	mov	w15, w25
  40e6a4:	mov	w14, w21
  40e6a8:	cmp	x20, x23
  40e6ac:	b.ls	40e6c8 <ferror@plt+0xb838>  // b.plast
  40e6b0:	ldur	w20, [x29, #-44]
  40e6b4:	mov	w25, wzr
  40e6b8:	ldrb	w21, [x19, x22]
  40e6bc:	cmp	w21, #0x7e
  40e6c0:	b.ls	40e714 <ferror@plt+0xb884>  // b.plast
  40e6c4:	b	40e964 <ferror@plt+0xbad4>
  40e6c8:	ldur	x1, [x29, #-64]
  40e6cc:	ldur	x2, [x29, #-32]
  40e6d0:	add	x0, x19, x22
  40e6d4:	mov	w26, w15
  40e6d8:	mov	w21, w14
  40e6dc:	bl	402a30 <bcmp@plt>
  40e6e0:	ldur	w9, [x29, #-68]
  40e6e4:	ldur	w20, [x29, #-44]
  40e6e8:	cmp	w0, #0x0
  40e6ec:	cset	w8, ne  // ne = any
  40e6f0:	orr	w8, w8, w9
  40e6f4:	cset	w25, eq  // eq = none
  40e6f8:	tbz	w8, #0, 40f070 <ferror@plt+0xc1e0>
  40e6fc:	ldp	w18, w17, [x29, #-52]
  40e700:	mov	w14, w21
  40e704:	mov	w15, w26
  40e708:	ldrb	w21, [x19, x22]
  40e70c:	cmp	w21, #0x7e
  40e710:	b.hi	40e964 <ferror@plt+0xbad4>  // b.pmore
  40e714:	adrp	x13, 415000 <_obstack_memory_used@@Base+0x25ec>
  40e718:	add	x13, x13, #0xd3b
  40e71c:	adr	x12, 40e740 <ferror@plt+0xb8b0>
  40e720:	ldrb	w9, [x13, x21]
  40e724:	add	x12, x12, x9, lsl #2
  40e728:	mov	w10, wzr
  40e72c:	mov	w8, wzr
  40e730:	mov	w26, #0x1                   	// #1
  40e734:	mov	w11, #0x6e                  	// #110
  40e738:	mov	w9, #0x61                  	// #97
  40e73c:	br	x12
  40e740:	ldur	w9, [x29, #-24]
  40e744:	tbnz	w9, #0, 40e764 <ferror@plt+0xb8d4>
  40e748:	ldur	x10, [x29, #-40]
  40e74c:	lsr	w9, w21, #5
  40e750:	ldr	w9, [x10, w9, uxtw #2]
  40e754:	lsr	w9, w9, w21
  40e758:	tbz	w9, #0, 40e764 <ferror@plt+0xb8d4>
  40e75c:	mov	w9, w21
  40e760:	b	40e76c <ferror@plt+0xb8dc>
  40e764:	mov	w9, w21
  40e768:	cbz	w25, 40e9a4 <ferror@plt+0xbb14>
  40e76c:	tbnz	w17, #0, 40f030 <ferror@plt+0xc1a0>
  40e770:	cmp	w20, #0x2
  40e774:	cset	w8, ne  // ne = any
  40e778:	orr	w8, w8, w15
  40e77c:	tbnz	w8, #0, 40e7b8 <ferror@plt+0xb928>
  40e780:	cmp	x27, x24
  40e784:	b.cs	40e7f0 <ferror@plt+0xb960>  // b.hs, b.nlast
  40e788:	mov	w8, #0x27                  	// #39
  40e78c:	strb	w8, [x28, x27]
  40e790:	add	x8, x27, #0x1
  40e794:	cmp	x8, x24
  40e798:	b.cc	40e7fc <ferror@plt+0xb96c>  // b.lo, b.ul, b.last
  40e79c:	add	x8, x27, #0x2
  40e7a0:	cmp	x8, x24
  40e7a4:	b.cs	40e7b0 <ferror@plt+0xb920>  // b.hs, b.nlast
  40e7a8:	mov	w10, #0x27                  	// #39
  40e7ac:	strb	w10, [x28, x8]
  40e7b0:	add	x27, x27, #0x3
  40e7b4:	mov	w15, #0x1                   	// #1
  40e7b8:	cmp	x27, x24
  40e7bc:	b.cs	40e7c8 <ferror@plt+0xb938>  // b.hs, b.nlast
  40e7c0:	mov	w8, #0x5c                  	// #92
  40e7c4:	strb	w8, [x28, x27]
  40e7c8:	add	x27, x27, #0x1
  40e7cc:	cmp	x27, x24
  40e7d0:	b.cs	40e7d8 <ferror@plt+0xb948>  // b.hs, b.nlast
  40e7d4:	strb	w9, [x28, x27]
  40e7d8:	add	x27, x27, #0x1
  40e7dc:	and	w14, w14, w26
  40e7e0:	add	x22, x22, #0x1
  40e7e4:	cmn	x23, #0x1
  40e7e8:	b.ne	40e658 <ferror@plt+0xb7c8>  // b.any
  40e7ec:	b	40e664 <ferror@plt+0xb7d4>
  40e7f0:	add	x8, x27, #0x1
  40e7f4:	cmp	x8, x24
  40e7f8:	b.cs	40e79c <ferror@plt+0xb90c>  // b.hs, b.nlast
  40e7fc:	mov	w10, #0x24                  	// #36
  40e800:	strb	w10, [x28, x8]
  40e804:	add	x8, x27, #0x2
  40e808:	cmp	x8, x24
  40e80c:	b.cc	40e7a8 <ferror@plt+0xb918>  // b.lo, b.ul, b.last
  40e810:	b	40e7b0 <ferror@plt+0xb920>
  40e814:	cmp	x23, #0x1
  40e818:	b.eq	40e83c <ferror@plt+0xb9ac>  // b.none
  40e81c:	cmn	x23, #0x1
  40e820:	b.ne	40e840 <ferror@plt+0xb9b0>  // b.any
  40e824:	ldrb	w8, [x19, #1]
  40e828:	cbz	w8, 40e83c <ferror@plt+0xb9ac>
  40e82c:	mov	w8, wzr
  40e830:	mov	w26, wzr
  40e834:	mov	x23, #0xffffffffffffffff    	// #-1
  40e838:	b	40e740 <ferror@plt+0xb8b0>
  40e83c:	cbz	x22, 40e84c <ferror@plt+0xb9bc>
  40e840:	mov	w8, wzr
  40e844:	mov	w26, wzr
  40e848:	b	40e740 <ferror@plt+0xb8b0>
  40e84c:	mov	w10, #0x1                   	// #1
  40e850:	cmp	w20, #0x2
  40e854:	b.ne	40e85c <ferror@plt+0xb9cc>  // b.any
  40e858:	tbnz	w17, #0, 40f030 <ferror@plt+0xc1a0>
  40e85c:	mov	w8, wzr
  40e860:	mov	w26, w10
  40e864:	b	40e740 <ferror@plt+0xb8b0>
  40e868:	cmp	w20, #0x2
  40e86c:	b.ne	40e98c <ferror@plt+0xbafc>  // b.any
  40e870:	tbz	w17, #0, 40e998 <ferror@plt+0xbb08>
  40e874:	b	40f030 <ferror@plt+0xc1a0>
  40e878:	mov	w9, #0x66                  	// #102
  40e87c:	b	40e9e8 <ferror@plt+0xbb58>
  40e880:	mov	w11, #0x74                  	// #116
  40e884:	b	40e894 <ferror@plt+0xba04>
  40e888:	mov	w9, #0x62                  	// #98
  40e88c:	b	40e9e8 <ferror@plt+0xbb58>
  40e890:	mov	w11, #0x72                  	// #114
  40e894:	ldr	w8, [sp, #92]
  40e898:	mov	w9, w11
  40e89c:	tbnz	w8, #0, 40e9e8 <ferror@plt+0xbb58>
  40e8a0:	b	40f030 <ferror@plt+0xc1a0>
  40e8a4:	ldur	w8, [x29, #-72]
  40e8a8:	tbz	w8, #0, 40e9fc <ferror@plt+0xbb6c>
  40e8ac:	cmp	w20, #0x2
  40e8b0:	tbnz	w17, #0, 40f140 <ferror@plt+0xc2b0>
  40e8b4:	cset	w8, ne  // ne = any
  40e8b8:	orr	w8, w8, w15
  40e8bc:	tbz	w8, #0, 40ebd0 <ferror@plt+0xbd40>
  40e8c0:	mov	x8, x27
  40e8c4:	cmp	x8, x24
  40e8c8:	b.cc	40ec10 <ferror@plt+0xbd80>  // b.lo, b.ul, b.last
  40e8cc:	b	40ec18 <ferror@plt+0xbd88>
  40e8d0:	cmp	w20, #0x5
  40e8d4:	b.eq	40eb30 <ferror@plt+0xbca0>  // b.none
  40e8d8:	cmp	w20, #0x2
  40e8dc:	b.ne	40ebc0 <ferror@plt+0xbd30>  // b.any
  40e8e0:	tbz	w17, #0, 40ebc0 <ferror@plt+0xbd30>
  40e8e4:	b	40f030 <ferror@plt+0xc1a0>
  40e8e8:	mov	w9, #0x76                  	// #118
  40e8ec:	b	40e9e8 <ferror@plt+0xbb58>
  40e8f0:	cmp	w20, #0x2
  40e8f4:	b.ne	40ea0c <ferror@plt+0xbb7c>  // b.any
  40e8f8:	tbnz	w17, #0, 40f030 <ferror@plt+0xc1a0>
  40e8fc:	ldr	x10, [sp, #72]
  40e900:	cmp	x24, #0x0
  40e904:	cset	w8, eq  // eq = none
  40e908:	cmp	x10, #0x0
  40e90c:	cset	w9, ne  // ne = any
  40e910:	orr	w8, w9, w8
  40e914:	cmp	w8, #0x0
  40e918:	csel	x10, x10, x24, ne  // ne = any
  40e91c:	csel	x24, x24, xzr, ne  // ne = any
  40e920:	cmp	x27, x24
  40e924:	str	x10, [sp, #72]
  40e928:	b.cs	40eb0c <ferror@plt+0xbc7c>  // b.hs, b.nlast
  40e92c:	mov	w8, #0x27                  	// #39
  40e930:	strb	w8, [x28, x27]
  40e934:	add	x8, x27, #0x1
  40e938:	cmp	x8, x24
  40e93c:	b.cc	40eb18 <ferror@plt+0xbc88>  // b.lo, b.ul, b.last
  40e940:	add	x8, x27, #0x2
  40e944:	cmp	x8, x24
  40e948:	b.cs	40e954 <ferror@plt+0xbac4>  // b.hs, b.nlast
  40e94c:	mov	w9, #0x27                  	// #39
  40e950:	strb	w9, [x28, x8]
  40e954:	mov	w15, wzr
  40e958:	mov	w8, wzr
  40e95c:	add	x27, x27, #0x3
  40e960:	b	40ea10 <ferror@plt+0xbb80>
  40e964:	ldr	x8, [sp, #32]
  40e968:	stp	w15, w14, [sp, #24]
  40e96c:	cmp	x8, #0x1
  40e970:	b.ne	40ea24 <ferror@plt+0xbb94>  // b.any
  40e974:	bl	402bc0 <__ctype_b_loc@plt>
  40e978:	ldr	x8, [x0]
  40e97c:	mov	w20, #0x1                   	// #1
  40e980:	ldrh	w8, [x8, x21, lsl #1]
  40e984:	ubfx	w26, w8, #14, #1
  40e988:	b	40ed80 <ferror@plt+0xbef0>
  40e98c:	ldr	w8, [sp, #64]
  40e990:	mov	w9, #0x5c                  	// #92
  40e994:	tbz	w8, #0, 40e9e8 <ferror@plt+0xbb58>
  40e998:	mov	w8, wzr
  40e99c:	mov	w26, wzr
  40e9a0:	mov	w21, #0x5c                  	// #92
  40e9a4:	tbnz	w8, #0, 40e9d8 <ferror@plt+0xbb48>
  40e9a8:	tbz	w15, #0, 40e9d8 <ferror@plt+0xbb48>
  40e9ac:	cmp	x27, x24
  40e9b0:	b.cs	40e9bc <ferror@plt+0xbb2c>  // b.hs, b.nlast
  40e9b4:	mov	w8, #0x27                  	// #39
  40e9b8:	strb	w8, [x28, x27]
  40e9bc:	add	x8, x27, #0x1
  40e9c0:	cmp	x8, x24
  40e9c4:	b.cs	40e9d0 <ferror@plt+0xbb40>  // b.hs, b.nlast
  40e9c8:	mov	w9, #0x27                  	// #39
  40e9cc:	strb	w9, [x28, x8]
  40e9d0:	mov	w15, wzr
  40e9d4:	add	x27, x27, #0x2
  40e9d8:	mov	w9, w21
  40e9dc:	cmp	x27, x24
  40e9e0:	b.cc	40e7d4 <ferror@plt+0xb944>  // b.lo, b.ul, b.last
  40e9e4:	b	40e7d8 <ferror@plt+0xb948>
  40e9e8:	ldur	w10, [x29, #-72]
  40e9ec:	mov	w8, wzr
  40e9f0:	mov	w26, wzr
  40e9f4:	tbz	w10, #0, 40e740 <ferror@plt+0xb8b0>
  40e9f8:	b	40e76c <ferror@plt+0xb8dc>
  40e9fc:	ldr	w8, [sp, #88]
  40ea00:	tbnz	w8, #0, 40e7e0 <ferror@plt+0xb950>
  40ea04:	mov	w21, wzr
  40ea08:	b	40e840 <ferror@plt+0xb9b0>
  40ea0c:	mov	w8, wzr
  40ea10:	mov	w9, #0x1                   	// #1
  40ea14:	mov	w21, #0x27                  	// #39
  40ea18:	str	w9, [sp, #84]
  40ea1c:	mov	w26, #0x1                   	// #1
  40ea20:	b	40e740 <ferror@plt+0xb8b0>
  40ea24:	cmn	x23, #0x1
  40ea28:	stur	xzr, [x29, #-16]
  40ea2c:	b.eq	40eca4 <ferror@plt+0xbe14>  // b.none
  40ea30:	ldr	w8, [sp, #60]
  40ea34:	stp	x23, x19, [sp, #40]
  40ea38:	tbz	w8, #0, 40ecbc <ferror@plt+0xbe2c>
  40ea3c:	ldur	x8, [x29, #-80]
  40ea40:	mov	x20, xzr
  40ea44:	mov	w26, #0x1                   	// #1
  40ea48:	add	x8, x8, x22
  40ea4c:	str	x8, [sp, #16]
  40ea50:	b	40ea7c <ferror@plt+0xbbec>
  40ea54:	ldur	w0, [x29, #-20]
  40ea58:	bl	402de0 <iswprint@plt>
  40ea5c:	cmp	w0, #0x0
  40ea60:	cset	w8, ne  // ne = any
  40ea64:	sub	x0, x29, #0x10
  40ea68:	and	w26, w26, w8
  40ea6c:	add	x20, x23, x20
  40ea70:	bl	402b20 <mbsinit@plt>
  40ea74:	ldr	x23, [sp, #40]
  40ea78:	cbnz	w0, 40ed7c <ferror@plt+0xbeec>
  40ea7c:	ldr	x8, [sp, #48]
  40ea80:	mov	x19, x28
  40ea84:	add	x28, x20, x22
  40ea88:	sub	x2, x23, x28
  40ea8c:	add	x1, x8, x28
  40ea90:	sub	x0, x29, #0x14
  40ea94:	sub	x3, x29, #0x10
  40ea98:	bl	412578 <ferror@plt+0xf6e8>
  40ea9c:	cmn	x0, #0x2
  40eaa0:	b.eq	40ed3c <ferror@plt+0xbeac>  // b.none
  40eaa4:	mov	x23, x0
  40eaa8:	cmn	x0, #0x1
  40eaac:	b.eq	40ed2c <ferror@plt+0xbe9c>  // b.none
  40eab0:	mov	x28, x19
  40eab4:	cbz	x23, 40ed34 <ferror@plt+0xbea4>
  40eab8:	ldr	x19, [sp, #48]
  40eabc:	cmp	x23, #0x2
  40eac0:	b.cc	40ea54 <ferror@plt+0xbbc4>  // b.lo, b.ul, b.last
  40eac4:	ldr	x9, [sp, #16]
  40eac8:	sub	x8, x23, #0x1
  40eacc:	add	x9, x9, x20
  40ead0:	b	40eae0 <ferror@plt+0xbc50>
  40ead4:	subs	x8, x8, #0x1
  40ead8:	add	x9, x9, #0x1
  40eadc:	b.eq	40ea54 <ferror@plt+0xbbc4>  // b.none
  40eae0:	ldrb	w10, [x9]
  40eae4:	sub	w10, w10, #0x5b
  40eae8:	cmp	w10, #0x21
  40eaec:	b.hi	40ead4 <ferror@plt+0xbc44>  // b.pmore
  40eaf0:	mov	w11, #0x1                   	// #1
  40eaf4:	lsl	x10, x11, x10
  40eaf8:	mov	x11, #0x2b                  	// #43
  40eafc:	movk	x11, #0x2, lsl #32
  40eb00:	tst	x10, x11
  40eb04:	b.eq	40ead4 <ferror@plt+0xbc44>  // b.none
  40eb08:	b	40f058 <ferror@plt+0xc1c8>
  40eb0c:	add	x8, x27, #0x1
  40eb10:	cmp	x8, x24
  40eb14:	b.cs	40e940 <ferror@plt+0xbab0>  // b.hs, b.nlast
  40eb18:	mov	w9, #0x5c                  	// #92
  40eb1c:	strb	w9, [x28, x8]
  40eb20:	add	x8, x27, #0x2
  40eb24:	cmp	x8, x24
  40eb28:	b.cc	40e94c <ferror@plt+0xbabc>  // b.lo, b.ul, b.last
  40eb2c:	b	40e954 <ferror@plt+0xbac4>
  40eb30:	ldr	w8, [sp, #88]
  40eb34:	tbz	w8, #2, 40ebc0 <ferror@plt+0xbd30>
  40eb38:	add	x9, x22, #0x2
  40eb3c:	cmp	x9, x23
  40eb40:	b.cs	40ebc0 <ferror@plt+0xbd30>  // b.hs, b.nlast
  40eb44:	add	x8, x22, x19
  40eb48:	ldrb	w8, [x8, #1]
  40eb4c:	cmp	w8, #0x3f
  40eb50:	b.ne	40ebc0 <ferror@plt+0xbd30>  // b.any
  40eb54:	ldrb	w21, [x19, x9]
  40eb58:	mov	w8, wzr
  40eb5c:	cmp	w21, #0x3e
  40eb60:	b.hi	40ef9c <ferror@plt+0xc10c>  // b.pmore
  40eb64:	mov	w10, #0x1                   	// #1
  40eb68:	mov	x11, #0xa38200000000        	// #179778741075968
  40eb6c:	lsl	x10, x10, x21
  40eb70:	movk	x11, #0x7000, lsl #48
  40eb74:	tst	x10, x11
  40eb78:	b.eq	40ef9c <ferror@plt+0xc10c>  // b.none
  40eb7c:	tbnz	w17, #0, 40f030 <ferror@plt+0xc1a0>
  40eb80:	cmp	x27, x24
  40eb84:	b.cs	40ef54 <ferror@plt+0xc0c4>  // b.hs, b.nlast
  40eb88:	mov	w8, #0x3f                  	// #63
  40eb8c:	strb	w8, [x28, x27]
  40eb90:	add	x8, x27, #0x1
  40eb94:	cmp	x8, x24
  40eb98:	b.cc	40ef60 <ferror@plt+0xc0d0>  // b.lo, b.ul, b.last
  40eb9c:	add	x8, x27, #0x2
  40eba0:	cmp	x8, x24
  40eba4:	b.cs	40ef74 <ferror@plt+0xc0e4>  // b.hs, b.nlast
  40eba8:	mov	w10, #0x22                  	// #34
  40ebac:	strb	w10, [x28, x8]
  40ebb0:	add	x8, x27, #0x3
  40ebb4:	cmp	x8, x24
  40ebb8:	b.cc	40ef80 <ferror@plt+0xc0f0>  // b.lo, b.ul, b.last
  40ebbc:	b	40ef88 <ferror@plt+0xc0f8>
  40ebc0:	mov	w8, wzr
  40ebc4:	mov	w26, wzr
  40ebc8:	mov	w21, #0x3f                  	// #63
  40ebcc:	b	40e740 <ferror@plt+0xb8b0>
  40ebd0:	cmp	x27, x24
  40ebd4:	b.cs	40ec80 <ferror@plt+0xbdf0>  // b.hs, b.nlast
  40ebd8:	mov	w8, #0x27                  	// #39
  40ebdc:	strb	w8, [x28, x27]
  40ebe0:	add	x8, x27, #0x1
  40ebe4:	cmp	x8, x24
  40ebe8:	b.cc	40ec8c <ferror@plt+0xbdfc>  // b.lo, b.ul, b.last
  40ebec:	add	x8, x27, #0x2
  40ebf0:	cmp	x8, x24
  40ebf4:	b.cs	40ec00 <ferror@plt+0xbd70>  // b.hs, b.nlast
  40ebf8:	mov	w9, #0x27                  	// #39
  40ebfc:	strb	w9, [x28, x8]
  40ec00:	add	x8, x27, #0x3
  40ec04:	mov	w15, #0x1                   	// #1
  40ec08:	cmp	x8, x24
  40ec0c:	b.cs	40ec18 <ferror@plt+0xbd88>  // b.hs, b.nlast
  40ec10:	mov	w9, #0x5c                  	// #92
  40ec14:	strb	w9, [x28, x8]
  40ec18:	cmp	w20, #0x2
  40ec1c:	add	x27, x8, #0x1
  40ec20:	b.eq	40ec70 <ferror@plt+0xbde0>  // b.none
  40ec24:	add	x9, x22, #0x1
  40ec28:	cmp	x9, x23
  40ec2c:	b.cs	40ec70 <ferror@plt+0xbde0>  // b.hs, b.nlast
  40ec30:	ldrb	w9, [x19, x9]
  40ec34:	sub	w9, w9, #0x30
  40ec38:	cmp	w9, #0x9
  40ec3c:	b.hi	40ec70 <ferror@plt+0xbde0>  // b.pmore
  40ec40:	cmp	x27, x24
  40ec44:	b.cs	40ec50 <ferror@plt+0xbdc0>  // b.hs, b.nlast
  40ec48:	mov	w9, #0x30                  	// #48
  40ec4c:	strb	w9, [x28, x27]
  40ec50:	add	x9, x8, #0x2
  40ec54:	cmp	x9, x24
  40ec58:	b.cs	40ec64 <ferror@plt+0xbdd4>  // b.hs, b.nlast
  40ec5c:	mov	w10, #0x30                  	// #48
  40ec60:	strb	w10, [x28, x9]
  40ec64:	mov	w26, wzr
  40ec68:	add	x27, x8, #0x3
  40ec6c:	b	40ec74 <ferror@plt+0xbde4>
  40ec70:	mov	w26, wzr
  40ec74:	mov	w8, #0x1                   	// #1
  40ec78:	mov	w21, #0x30                  	// #48
  40ec7c:	b	40e740 <ferror@plt+0xb8b0>
  40ec80:	add	x8, x27, #0x1
  40ec84:	cmp	x8, x24
  40ec88:	b.cs	40ebec <ferror@plt+0xbd5c>  // b.hs, b.nlast
  40ec8c:	mov	w9, #0x24                  	// #36
  40ec90:	strb	w9, [x28, x8]
  40ec94:	add	x8, x27, #0x2
  40ec98:	cmp	x8, x24
  40ec9c:	b.cc	40ebf8 <ferror@plt+0xbd68>  // b.lo, b.ul, b.last
  40eca0:	b	40ec00 <ferror@plt+0xbd70>
  40eca4:	mov	x0, x19
  40eca8:	bl	4027c0 <strlen@plt>
  40ecac:	mov	x23, x0
  40ecb0:	ldr	w8, [sp, #60]
  40ecb4:	stp	x23, x19, [sp, #40]
  40ecb8:	tbnz	w8, #0, 40ea3c <ferror@plt+0xbbac>
  40ecbc:	mov	x20, xzr
  40ecc0:	mov	w26, #0x1                   	// #1
  40ecc4:	ldr	x8, [sp, #48]
  40ecc8:	mov	x19, x28
  40eccc:	add	x28, x20, x22
  40ecd0:	sub	x2, x23, x28
  40ecd4:	add	x1, x8, x28
  40ecd8:	sub	x0, x29, #0x14
  40ecdc:	sub	x3, x29, #0x10
  40ece0:	bl	412578 <ferror@plt+0xf6e8>
  40ece4:	cmn	x0, #0x2
  40ece8:	b.eq	40ed3c <ferror@plt+0xbeac>  // b.none
  40ecec:	mov	x23, x0
  40ecf0:	cmn	x0, #0x1
  40ecf4:	b.eq	40ed2c <ferror@plt+0xbe9c>  // b.none
  40ecf8:	mov	x28, x19
  40ecfc:	cbz	x23, 40ed34 <ferror@plt+0xbea4>
  40ed00:	ldur	w0, [x29, #-20]
  40ed04:	bl	402de0 <iswprint@plt>
  40ed08:	cmp	w0, #0x0
  40ed0c:	cset	w8, ne  // ne = any
  40ed10:	sub	x0, x29, #0x10
  40ed14:	and	w26, w26, w8
  40ed18:	add	x20, x23, x20
  40ed1c:	bl	402b20 <mbsinit@plt>
  40ed20:	ldr	x23, [sp, #40]
  40ed24:	cbz	w0, 40ecc4 <ferror@plt+0xbe34>
  40ed28:	b	40ed7c <ferror@plt+0xbeec>
  40ed2c:	mov	w26, wzr
  40ed30:	mov	x28, x19
  40ed34:	ldr	x23, [sp, #40]
  40ed38:	b	40ed7c <ferror@plt+0xbeec>
  40ed3c:	ldr	x23, [sp, #40]
  40ed40:	cmp	x28, x23
  40ed44:	b.cs	40ed74 <ferror@plt+0xbee4>  // b.hs, b.nlast
  40ed48:	sub	x8, x23, x22
  40ed4c:	ldr	x9, [sp, #48]
  40ed50:	ldrb	w9, [x9, x28]
  40ed54:	cbz	w9, 40ed74 <ferror@plt+0xbee4>
  40ed58:	add	x20, x20, #0x1
  40ed5c:	add	x28, x20, x22
  40ed60:	cmp	x28, x23
  40ed64:	b.cc	40ed4c <ferror@plt+0xbebc>  // b.lo, b.ul, b.last
  40ed68:	mov	w26, wzr
  40ed6c:	mov	x20, x8
  40ed70:	b	40ed78 <ferror@plt+0xbee8>
  40ed74:	mov	w26, wzr
  40ed78:	mov	x28, x19
  40ed7c:	ldr	x19, [sp, #48]
  40ed80:	ldr	w8, [sp, #68]
  40ed84:	ldp	w15, w14, [sp, #24]
  40ed88:	ldp	w18, w17, [x29, #-52]
  40ed8c:	cmp	x20, #0x1
  40ed90:	orr	w8, w26, w8
  40ed94:	b.hi	40eda8 <ferror@plt+0xbf18>  // b.pmore
  40ed98:	tbz	w8, #0, 40eda8 <ferror@plt+0xbf18>
  40ed9c:	ldur	w20, [x29, #-44]
  40eda0:	mov	w8, wzr
  40eda4:	b	40e740 <ferror@plt+0xb8b0>
  40eda8:	add	x9, x20, x22
  40edac:	ldur	w20, [x29, #-44]
  40edb0:	mov	w10, wzr
  40edb4:	b	40edc8 <ferror@plt+0xbf38>
  40edb8:	ldur	x12, [x29, #-80]
  40edbc:	add	x27, x27, #0x1
  40edc0:	ldrb	w21, [x12, x22]
  40edc4:	mov	x22, x11
  40edc8:	tbz	w8, #0, 40edf8 <ferror@plt+0xbf68>
  40edcc:	tbz	w25, #0, 40ee64 <ferror@plt+0xbfd4>
  40edd0:	cmp	x27, x24
  40edd4:	b.cs	40ede0 <ferror@plt+0xbf50>  // b.hs, b.nlast
  40edd8:	mov	w11, #0x5c                  	// #92
  40eddc:	strb	w11, [x28, x27]
  40ede0:	mov	w25, wzr
  40ede4:	add	x27, x27, #0x1
  40ede8:	add	x11, x22, #0x1
  40edec:	cmp	x9, x11
  40edf0:	b.hi	40ee74 <ferror@plt+0xbfe4>  // b.pmore
  40edf4:	b	40ef48 <ferror@plt+0xc0b8>
  40edf8:	tbnz	w17, #0, 40f030 <ferror@plt+0xc1a0>
  40edfc:	cmp	w20, #0x2
  40ee00:	cset	w10, ne  // ne = any
  40ee04:	orr	w10, w10, w15
  40ee08:	tbz	w10, #0, 40eebc <ferror@plt+0xc02c>
  40ee0c:	cmp	x27, x24
  40ee10:	b.cs	40eefc <ferror@plt+0xc06c>  // b.hs, b.nlast
  40ee14:	mov	w10, #0x5c                  	// #92
  40ee18:	strb	w10, [x28, x27]
  40ee1c:	add	x10, x27, #0x1
  40ee20:	cmp	x10, x24
  40ee24:	b.cc	40ef08 <ferror@plt+0xc078>  // b.lo, b.ul, b.last
  40ee28:	add	x10, x27, #0x2
  40ee2c:	cmp	x10, x24
  40ee30:	b.cs	40ee40 <ferror@plt+0xbfb0>  // b.hs, b.nlast
  40ee34:	mov	w11, #0x30                  	// #48
  40ee38:	bfxil	w11, w21, #3, #3
  40ee3c:	strb	w11, [x28, x10]
  40ee40:	mov	w11, #0x30                  	// #48
  40ee44:	bfxil	w11, w21, #0, #3
  40ee48:	add	x27, x27, #0x3
  40ee4c:	mov	w10, #0x1                   	// #1
  40ee50:	mov	w21, w11
  40ee54:	add	x11, x22, #0x1
  40ee58:	cmp	x9, x11
  40ee5c:	b.hi	40ee74 <ferror@plt+0xbfe4>  // b.pmore
  40ee60:	b	40ef48 <ferror@plt+0xc0b8>
  40ee64:	mov	w25, wzr
  40ee68:	add	x11, x22, #0x1
  40ee6c:	cmp	x9, x11
  40ee70:	b.ls	40ef48 <ferror@plt+0xc0b8>  // b.plast
  40ee74:	and	w12, w10, #0x1
  40ee78:	orn	w12, w12, w15
  40ee7c:	tbnz	w12, #0, 40eeac <ferror@plt+0xc01c>
  40ee80:	cmp	x27, x24
  40ee84:	b.cs	40ee90 <ferror@plt+0xc000>  // b.hs, b.nlast
  40ee88:	mov	w12, #0x27                  	// #39
  40ee8c:	strb	w12, [x28, x27]
  40ee90:	add	x12, x27, #0x1
  40ee94:	cmp	x12, x24
  40ee98:	b.cs	40eea4 <ferror@plt+0xc014>  // b.hs, b.nlast
  40ee9c:	mov	w13, #0x27                  	// #39
  40eea0:	strb	w13, [x28, x12]
  40eea4:	mov	w15, wzr
  40eea8:	add	x27, x27, #0x2
  40eeac:	cmp	x27, x24
  40eeb0:	b.cs	40edb8 <ferror@plt+0xbf28>  // b.hs, b.nlast
  40eeb4:	strb	w21, [x28, x27]
  40eeb8:	b	40edb8 <ferror@plt+0xbf28>
  40eebc:	cmp	x27, x24
  40eec0:	b.cs	40ef24 <ferror@plt+0xc094>  // b.hs, b.nlast
  40eec4:	mov	w10, #0x27                  	// #39
  40eec8:	strb	w10, [x28, x27]
  40eecc:	add	x10, x27, #0x1
  40eed0:	cmp	x10, x24
  40eed4:	b.cc	40ef30 <ferror@plt+0xc0a0>  // b.lo, b.ul, b.last
  40eed8:	add	x10, x27, #0x2
  40eedc:	cmp	x10, x24
  40eee0:	b.cs	40eeec <ferror@plt+0xc05c>  // b.hs, b.nlast
  40eee4:	mov	w11, #0x27                  	// #39
  40eee8:	strb	w11, [x28, x10]
  40eeec:	add	x27, x27, #0x3
  40eef0:	mov	w15, #0x1                   	// #1
  40eef4:	cmp	x27, x24
  40eef8:	b.cc	40ee14 <ferror@plt+0xbf84>  // b.lo, b.ul, b.last
  40eefc:	add	x10, x27, #0x1
  40ef00:	cmp	x10, x24
  40ef04:	b.cs	40ee28 <ferror@plt+0xbf98>  // b.hs, b.nlast
  40ef08:	mov	w11, #0x30                  	// #48
  40ef0c:	bfxil	w11, w21, #6, #2
  40ef10:	strb	w11, [x28, x10]
  40ef14:	add	x10, x27, #0x2
  40ef18:	cmp	x10, x24
  40ef1c:	b.cc	40ee34 <ferror@plt+0xbfa4>  // b.lo, b.ul, b.last
  40ef20:	b	40ee40 <ferror@plt+0xbfb0>
  40ef24:	add	x10, x27, #0x1
  40ef28:	cmp	x10, x24
  40ef2c:	b.cs	40eed8 <ferror@plt+0xc048>  // b.hs, b.nlast
  40ef30:	mov	w11, #0x24                  	// #36
  40ef34:	strb	w11, [x28, x10]
  40ef38:	add	x10, x27, #0x2
  40ef3c:	cmp	x10, x24
  40ef40:	b.cc	40eee4 <ferror@plt+0xc054>  // b.lo, b.ul, b.last
  40ef44:	b	40eeec <ferror@plt+0xc05c>
  40ef48:	and	w8, w10, #0x1
  40ef4c:	tbz	w8, #0, 40e9a8 <ferror@plt+0xbb18>
  40ef50:	b	40e9d8 <ferror@plt+0xbb48>
  40ef54:	add	x8, x27, #0x1
  40ef58:	cmp	x8, x24
  40ef5c:	b.cs	40eb9c <ferror@plt+0xbd0c>  // b.hs, b.nlast
  40ef60:	mov	w10, #0x22                  	// #34
  40ef64:	strb	w10, [x28, x8]
  40ef68:	add	x8, x27, #0x2
  40ef6c:	cmp	x8, x24
  40ef70:	b.cc	40eba8 <ferror@plt+0xbd18>  // b.lo, b.ul, b.last
  40ef74:	add	x8, x27, #0x3
  40ef78:	cmp	x8, x24
  40ef7c:	b.cs	40ef88 <ferror@plt+0xc0f8>  // b.hs, b.nlast
  40ef80:	mov	w10, #0x3f                  	// #63
  40ef84:	strb	w10, [x28, x8]
  40ef88:	mov	w8, wzr
  40ef8c:	mov	w26, wzr
  40ef90:	add	x27, x27, #0x4
  40ef94:	mov	x22, x9
  40ef98:	b	40e740 <ferror@plt+0xb8b0>
  40ef9c:	mov	w21, #0x3f                  	// #63
  40efa0:	mov	w26, w8
  40efa4:	b	40e740 <ferror@plt+0xb8b0>
  40efa8:	mov	x23, x22
  40efac:	b	40efb4 <ferror@plt+0xc124>
  40efb0:	mov	x23, #0xffffffffffffffff    	// #-1
  40efb4:	cmp	w20, #0x2
  40efb8:	cset	w8, eq  // eq = none
  40efbc:	cmp	x27, #0x0
  40efc0:	cset	w9, eq  // eq = none
  40efc4:	and	w8, w8, w9
  40efc8:	and	w8, w17, w8
  40efcc:	tbnz	w8, #0, 40f030 <ferror@plt+0xc1a0>
  40efd0:	cmp	w20, #0x2
  40efd4:	cset	w8, ne  // ne = any
  40efd8:	orr	w8, w17, w8
  40efdc:	tbnz	w8, #0, 40f0f8 <ferror@plt+0xc268>
  40efe0:	ldr	w8, [sp, #84]
  40efe4:	eor	w8, w8, #0x1
  40efe8:	tbnz	w8, #0, 40f0f8 <ferror@plt+0xc268>
  40efec:	mov	x22, x23
  40eff0:	tbnz	w14, #0, 40f0c8 <ferror@plt+0xc238>
  40eff4:	ldr	x23, [sp, #72]
  40eff8:	mov	w21, wzr
  40effc:	cbz	x23, 40f0f4 <ferror@plt+0xc264>
  40f000:	ldur	w8, [x29, #-72]
  40f004:	mov	w20, #0x2                   	// #2
  40f008:	mov	w14, w21
  40f00c:	mov	w17, w21
  40f010:	cbz	x24, 40e21c <ferror@plt+0xb38c>
  40f014:	b	40f0f8 <ferror@plt+0xc268>
  40f018:	adrp	x20, 415000 <_obstack_memory_used@@Base+0x25ec>
  40f01c:	add	x20, x20, #0xe96
  40f020:	b	40e450 <ferror@plt+0xb5c0>
  40f024:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40f028:	add	x8, x8, #0xe9a
  40f02c:	b	40e4e4 <ferror@plt+0xb654>
  40f030:	ldur	w8, [x29, #-72]
  40f034:	ldr	x7, [sp, #96]
  40f038:	mov	w9, #0x4                   	// #4
  40f03c:	tst	w8, #0x1
  40f040:	mov	w8, #0x2                   	// #2
  40f044:	csel	w8, w9, w8, ne  // ne = any
  40f048:	cmp	w20, #0x2
  40f04c:	b.ne	40f074 <ferror@plt+0xc1e4>  // b.any
  40f050:	mov	w20, w8
  40f054:	b	40f074 <ferror@plt+0xc1e4>
  40f058:	ldur	w8, [x29, #-72]
  40f05c:	ldr	x23, [sp, #40]
  40f060:	mov	w9, #0x4                   	// #4
  40f064:	tst	w8, #0x1
  40f068:	mov	w8, #0x2                   	// #2
  40f06c:	csel	w20, w9, w8, ne  // ne = any
  40f070:	ldr	x7, [sp, #96]
  40f074:	ldr	w8, [sp, #88]
  40f078:	mov	x0, x28
  40f07c:	mov	x1, x24
  40f080:	mov	x2, x19
  40f084:	and	w5, w8, #0xfffffffd
  40f088:	ldur	x8, [x29, #-88]
  40f08c:	mov	x3, x23
  40f090:	mov	w4, w20
  40f094:	mov	x6, xzr
  40f098:	str	x8, [sp]
  40f09c:	bl	40e1a0 <ferror@plt+0xb310>
  40f0a0:	mov	x27, x0
  40f0a4:	mov	x0, x27
  40f0a8:	ldp	x20, x19, [sp, #272]
  40f0ac:	ldp	x22, x21, [sp, #256]
  40f0b0:	ldp	x24, x23, [sp, #240]
  40f0b4:	ldp	x26, x25, [sp, #224]
  40f0b8:	ldp	x28, x27, [sp, #208]
  40f0bc:	ldp	x29, x30, [sp, #192]
  40f0c0:	add	sp, sp, #0x120
  40f0c4:	ret
  40f0c8:	ldur	x8, [x29, #-88]
  40f0cc:	ldr	x1, [sp, #72]
  40f0d0:	ldr	w5, [sp, #88]
  40f0d4:	ldur	x6, [x29, #-40]
  40f0d8:	ldr	x7, [sp, #96]
  40f0dc:	mov	w4, #0x5                   	// #5
  40f0e0:	str	x8, [sp]
  40f0e4:	mov	x0, x28
  40f0e8:	mov	x2, x19
  40f0ec:	mov	x3, x22
  40f0f0:	b	40f09c <ferror@plt+0xc20c>
  40f0f4:	mov	w17, w21
  40f0f8:	ldur	x8, [x29, #-64]
  40f0fc:	cbz	x8, 40f130 <ferror@plt+0xc2a0>
  40f100:	tbnz	w17, #0, 40f130 <ferror@plt+0xc2a0>
  40f104:	ldrb	w9, [x8]
  40f108:	cbz	w9, 40f130 <ferror@plt+0xc2a0>
  40f10c:	add	x8, x8, #0x1
  40f110:	b	40f120 <ferror@plt+0xc290>
  40f114:	ldrb	w9, [x8], #1
  40f118:	add	x27, x27, #0x1
  40f11c:	cbz	w9, 40f130 <ferror@plt+0xc2a0>
  40f120:	cmp	x27, x24
  40f124:	b.cs	40f114 <ferror@plt+0xc284>  // b.hs, b.nlast
  40f128:	strb	w9, [x28, x27]
  40f12c:	b	40f114 <ferror@plt+0xc284>
  40f130:	cmp	x27, x24
  40f134:	b.cs	40f0a4 <ferror@plt+0xc214>  // b.hs, b.nlast
  40f138:	strb	wzr, [x28, x27]
  40f13c:	b	40f0a4 <ferror@plt+0xc214>
  40f140:	b.ne	40f070 <ferror@plt+0xc1e0>  // b.any
  40f144:	mov	w20, #0x4                   	// #4
  40f148:	b	40f070 <ferror@plt+0xc1e0>
  40f14c:	bl	402ae0 <abort@plt>
  40f150:	sub	sp, sp, #0x60
  40f154:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f158:	add	x8, x8, #0xbb0
  40f15c:	cmp	x2, #0x0
  40f160:	stp	x29, x30, [sp, #16]
  40f164:	stp	x26, x25, [sp, #32]
  40f168:	stp	x24, x23, [sp, #48]
  40f16c:	stp	x22, x21, [sp, #64]
  40f170:	stp	x20, x19, [sp, #80]
  40f174:	add	x29, sp, #0x10
  40f178:	mov	x19, x1
  40f17c:	mov	x20, x0
  40f180:	csel	x25, x8, x2, eq  // eq = none
  40f184:	bl	402e00 <__errno_location@plt>
  40f188:	ldp	w4, w8, [x25]
  40f18c:	ldp	x7, x9, [x25, #40]
  40f190:	ldr	w26, [x0]
  40f194:	add	x23, x25, #0x8
  40f198:	orr	w22, w8, #0x1
  40f19c:	mov	x21, x0
  40f1a0:	mov	x0, xzr
  40f1a4:	mov	x1, xzr
  40f1a8:	mov	x2, x20
  40f1ac:	mov	x3, x19
  40f1b0:	mov	w5, w22
  40f1b4:	mov	x6, x23
  40f1b8:	str	x9, [sp]
  40f1bc:	bl	40e1a0 <ferror@plt+0xb310>
  40f1c0:	add	x24, x0, #0x1
  40f1c4:	mov	x0, x24
  40f1c8:	bl	4112fc <ferror@plt+0xe46c>
  40f1cc:	ldr	w4, [x25]
  40f1d0:	ldp	x7, x8, [x25, #40]
  40f1d4:	mov	x1, x24
  40f1d8:	mov	x2, x20
  40f1dc:	mov	x3, x19
  40f1e0:	mov	w5, w22
  40f1e4:	mov	x6, x23
  40f1e8:	mov	x25, x0
  40f1ec:	str	x8, [sp]
  40f1f0:	bl	40e1a0 <ferror@plt+0xb310>
  40f1f4:	str	w26, [x21]
  40f1f8:	mov	x0, x25
  40f1fc:	ldp	x20, x19, [sp, #80]
  40f200:	ldp	x22, x21, [sp, #64]
  40f204:	ldp	x24, x23, [sp, #48]
  40f208:	ldp	x26, x25, [sp, #32]
  40f20c:	ldp	x29, x30, [sp, #16]
  40f210:	add	sp, sp, #0x60
  40f214:	ret
  40f218:	sub	sp, sp, #0x70
  40f21c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f220:	add	x8, x8, #0xbb0
  40f224:	cmp	x3, #0x0
  40f228:	stp	x29, x30, [sp, #16]
  40f22c:	stp	x28, x27, [sp, #32]
  40f230:	stp	x26, x25, [sp, #48]
  40f234:	stp	x24, x23, [sp, #64]
  40f238:	stp	x22, x21, [sp, #80]
  40f23c:	stp	x20, x19, [sp, #96]
  40f240:	add	x29, sp, #0x10
  40f244:	mov	x19, x2
  40f248:	mov	x22, x1
  40f24c:	mov	x23, x0
  40f250:	csel	x21, x8, x3, eq  // eq = none
  40f254:	bl	402e00 <__errno_location@plt>
  40f258:	ldp	w4, w8, [x21]
  40f25c:	cmp	x19, #0x0
  40f260:	ldp	x7, x9, [x21, #40]
  40f264:	ldr	w28, [x0]
  40f268:	cset	w10, eq  // eq = none
  40f26c:	orr	w25, w8, w10
  40f270:	add	x26, x21, #0x8
  40f274:	mov	x24, x0
  40f278:	mov	x0, xzr
  40f27c:	mov	x1, xzr
  40f280:	mov	x2, x23
  40f284:	mov	x3, x22
  40f288:	mov	w5, w25
  40f28c:	mov	x6, x26
  40f290:	str	x9, [sp]
  40f294:	bl	40e1a0 <ferror@plt+0xb310>
  40f298:	add	x27, x0, #0x1
  40f29c:	mov	x20, x0
  40f2a0:	mov	x0, x27
  40f2a4:	bl	4112fc <ferror@plt+0xe46c>
  40f2a8:	ldr	w4, [x21]
  40f2ac:	ldp	x7, x8, [x21, #40]
  40f2b0:	mov	x1, x27
  40f2b4:	mov	x2, x23
  40f2b8:	mov	x3, x22
  40f2bc:	mov	w5, w25
  40f2c0:	mov	x6, x26
  40f2c4:	mov	x21, x0
  40f2c8:	str	x8, [sp]
  40f2cc:	bl	40e1a0 <ferror@plt+0xb310>
  40f2d0:	str	w28, [x24]
  40f2d4:	cbz	x19, 40f2dc <ferror@plt+0xc44c>
  40f2d8:	str	x20, [x19]
  40f2dc:	mov	x0, x21
  40f2e0:	ldp	x20, x19, [sp, #96]
  40f2e4:	ldp	x22, x21, [sp, #80]
  40f2e8:	ldp	x24, x23, [sp, #64]
  40f2ec:	ldp	x26, x25, [sp, #48]
  40f2f0:	ldp	x28, x27, [sp, #32]
  40f2f4:	ldp	x29, x30, [sp, #16]
  40f2f8:	add	sp, sp, #0x70
  40f2fc:	ret
  40f300:	stp	x29, x30, [sp, #-48]!
  40f304:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f308:	add	x8, x8, #0x4f8
  40f30c:	ldr	w9, [x8]
  40f310:	stp	x20, x19, [sp, #32]
  40f314:	ldr	x19, [x8, #8]
  40f318:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f31c:	cmp	w9, #0x2
  40f320:	stp	x22, x21, [sp, #16]
  40f324:	mov	x29, sp
  40f328:	b.lt	40f34c <ferror@plt+0xc4bc>  // b.tstop
  40f32c:	add	x21, x19, #0x18
  40f330:	mov	w22, #0x1                   	// #1
  40f334:	ldr	x0, [x21], #16
  40f338:	bl	402c00 <free@plt>
  40f33c:	ldrsw	x8, [x20, #1272]
  40f340:	add	x22, x22, #0x1
  40f344:	cmp	x22, x8
  40f348:	b.lt	40f334 <ferror@plt+0xc4a4>  // b.tstop
  40f34c:	ldr	x0, [x19, #8]
  40f350:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f354:	add	x21, x21, #0xbe8
  40f358:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f35c:	cmp	x0, x21
  40f360:	add	x22, x22, #0x508
  40f364:	b.eq	40f374 <ferror@plt+0xc4e4>  // b.none
  40f368:	bl	402c00 <free@plt>
  40f36c:	mov	w8, #0x100                 	// #256
  40f370:	stp	x8, x21, [x22]
  40f374:	cmp	x19, x22
  40f378:	b.eq	40f394 <ferror@plt+0xc504>  // b.none
  40f37c:	mov	x0, x19
  40f380:	bl	402c00 <free@plt>
  40f384:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f388:	add	x8, x8, #0x500
  40f38c:	add	x9, x8, #0x8
  40f390:	str	x9, [x8]
  40f394:	mov	w8, #0x1                   	// #1
  40f398:	str	w8, [x20, #1272]
  40f39c:	ldp	x20, x19, [sp, #32]
  40f3a0:	ldp	x22, x21, [sp, #16]
  40f3a4:	ldp	x29, x30, [sp], #48
  40f3a8:	ret
  40f3ac:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f3b0:	add	x3, x3, #0xbb0
  40f3b4:	mov	x2, #0xffffffffffffffff    	// #-1
  40f3b8:	b	40f3bc <ferror@plt+0xc52c>
  40f3bc:	sub	sp, sp, #0x80
  40f3c0:	stp	x29, x30, [sp, #32]
  40f3c4:	add	x29, sp, #0x20
  40f3c8:	stp	x28, x27, [sp, #48]
  40f3cc:	stp	x26, x25, [sp, #64]
  40f3d0:	stp	x24, x23, [sp, #80]
  40f3d4:	stp	x22, x21, [sp, #96]
  40f3d8:	stp	x20, x19, [sp, #112]
  40f3dc:	mov	x22, x3
  40f3e0:	stur	x2, [x29, #-8]
  40f3e4:	mov	x21, x1
  40f3e8:	mov	w23, w0
  40f3ec:	bl	402e00 <__errno_location@plt>
  40f3f0:	tbnz	w23, #31, 40f54c <ferror@plt+0xc6bc>
  40f3f4:	adrp	x25, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f3f8:	ldr	w8, [x25, #1272]
  40f3fc:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f400:	ldr	w20, [x0]
  40f404:	ldr	x27, [x9, #1280]
  40f408:	mov	x19, x0
  40f40c:	cmp	w8, w23
  40f410:	b.gt	40f488 <ferror@plt+0xc5f8>
  40f414:	mov	w8, #0x7fffffff            	// #2147483647
  40f418:	cmp	w23, w8
  40f41c:	stur	w20, [x29, #-12]
  40f420:	b.eq	40f550 <ferror@plt+0xc6c0>  // b.none
  40f424:	adrp	x28, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f428:	add	x28, x28, #0x500
  40f42c:	add	x20, x28, #0x8
  40f430:	add	w26, w23, #0x1
  40f434:	cmp	x27, x20
  40f438:	csel	x0, xzr, x27, eq  // eq = none
  40f43c:	sbfiz	x1, x26, #4, #32
  40f440:	bl	41137c <ferror@plt+0xe4ec>
  40f444:	mov	x24, x0
  40f448:	cmp	x27, x20
  40f44c:	str	x0, [x28]
  40f450:	b.ne	40f464 <ferror@plt+0xc5d4>  // b.any
  40f454:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f458:	add	x8, x8, #0x508
  40f45c:	ldr	q0, [x8]
  40f460:	str	q0, [x24]
  40f464:	ldrsw	x8, [x25, #1272]
  40f468:	mov	w1, wzr
  40f46c:	add	x0, x24, x8, lsl #4
  40f470:	sub	w8, w26, w8
  40f474:	sbfiz	x2, x8, #4, #32
  40f478:	bl	4029e0 <memset@plt>
  40f47c:	ldur	w20, [x29, #-12]
  40f480:	mov	x27, x24
  40f484:	str	w26, [x25, #1272]
  40f488:	add	x28, x27, w23, uxtw #4
  40f48c:	mov	x27, x28
  40f490:	ldr	x26, [x28]
  40f494:	ldr	x23, [x27, #8]!
  40f498:	ldp	w4, w8, [x22]
  40f49c:	ldp	x7, x9, [x22, #40]
  40f4a0:	ldur	x3, [x29, #-8]
  40f4a4:	add	x24, x22, #0x8
  40f4a8:	orr	w25, w8, #0x1
  40f4ac:	mov	x0, x23
  40f4b0:	mov	x1, x26
  40f4b4:	mov	x2, x21
  40f4b8:	mov	w5, w25
  40f4bc:	mov	x6, x24
  40f4c0:	str	x9, [sp]
  40f4c4:	bl	40e1a0 <ferror@plt+0xb310>
  40f4c8:	cmp	x26, x0
  40f4cc:	b.hi	40f524 <ferror@plt+0xc694>  // b.pmore
  40f4d0:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f4d4:	add	x8, x8, #0xbe8
  40f4d8:	add	x26, x0, #0x1
  40f4dc:	cmp	x23, x8
  40f4e0:	str	x26, [x28]
  40f4e4:	b.eq	40f4f0 <ferror@plt+0xc660>  // b.none
  40f4e8:	mov	x0, x23
  40f4ec:	bl	402c00 <free@plt>
  40f4f0:	mov	x0, x26
  40f4f4:	bl	4112fc <ferror@plt+0xe46c>
  40f4f8:	str	x0, [x27]
  40f4fc:	ldr	w4, [x22]
  40f500:	ldp	x7, x8, [x22, #40]
  40f504:	ldur	x3, [x29, #-8]
  40f508:	mov	x1, x26
  40f50c:	mov	x2, x21
  40f510:	mov	w5, w25
  40f514:	mov	x6, x24
  40f518:	mov	x23, x0
  40f51c:	str	x8, [sp]
  40f520:	bl	40e1a0 <ferror@plt+0xb310>
  40f524:	str	w20, [x19]
  40f528:	mov	x0, x23
  40f52c:	ldp	x20, x19, [sp, #112]
  40f530:	ldp	x22, x21, [sp, #96]
  40f534:	ldp	x24, x23, [sp, #80]
  40f538:	ldp	x26, x25, [sp, #64]
  40f53c:	ldp	x28, x27, [sp, #48]
  40f540:	ldp	x29, x30, [sp, #32]
  40f544:	add	sp, sp, #0x80
  40f548:	ret
  40f54c:	bl	402ae0 <abort@plt>
  40f550:	bl	411638 <ferror@plt+0xe7a8>
  40f554:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f558:	add	x3, x3, #0xbb0
  40f55c:	b	40f3bc <ferror@plt+0xc52c>
  40f560:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f564:	add	x3, x3, #0xbb0
  40f568:	mov	x2, #0xffffffffffffffff    	// #-1
  40f56c:	mov	x1, x0
  40f570:	mov	w0, wzr
  40f574:	b	40f3bc <ferror@plt+0xc52c>
  40f578:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f57c:	mov	x2, x1
  40f580:	add	x3, x3, #0xbb0
  40f584:	mov	x1, x0
  40f588:	mov	w0, wzr
  40f58c:	b	40f3bc <ferror@plt+0xc52c>
  40f590:	sub	sp, sp, #0x50
  40f594:	movi	v0.2d, #0x0
  40f598:	cmp	w1, #0xa
  40f59c:	stp	x29, x30, [sp, #64]
  40f5a0:	add	x29, sp, #0x40
  40f5a4:	str	xzr, [sp, #48]
  40f5a8:	stp	q0, q0, [sp, #16]
  40f5ac:	str	q0, [sp]
  40f5b0:	b.eq	40f5d8 <ferror@plt+0xc748>  // b.none
  40f5b4:	mov	x8, x2
  40f5b8:	str	w1, [sp]
  40f5bc:	mov	x3, sp
  40f5c0:	mov	x2, #0xffffffffffffffff    	// #-1
  40f5c4:	mov	x1, x8
  40f5c8:	bl	40f3bc <ferror@plt+0xc52c>
  40f5cc:	ldp	x29, x30, [sp, #64]
  40f5d0:	add	sp, sp, #0x50
  40f5d4:	ret
  40f5d8:	bl	402ae0 <abort@plt>
  40f5dc:	sub	sp, sp, #0x50
  40f5e0:	movi	v0.2d, #0x0
  40f5e4:	cmp	w1, #0xa
  40f5e8:	stp	x29, x30, [sp, #64]
  40f5ec:	add	x29, sp, #0x40
  40f5f0:	str	xzr, [sp, #48]
  40f5f4:	stp	q0, q0, [sp, #16]
  40f5f8:	str	q0, [sp]
  40f5fc:	b.eq	40f624 <ferror@plt+0xc794>  // b.none
  40f600:	mov	x8, x3
  40f604:	str	w1, [sp]
  40f608:	mov	x3, sp
  40f60c:	mov	x1, x2
  40f610:	mov	x2, x8
  40f614:	bl	40f3bc <ferror@plt+0xc52c>
  40f618:	ldp	x29, x30, [sp, #64]
  40f61c:	add	sp, sp, #0x50
  40f620:	ret
  40f624:	bl	402ae0 <abort@plt>
  40f628:	sub	sp, sp, #0x50
  40f62c:	movi	v0.2d, #0x0
  40f630:	cmp	w0, #0xa
  40f634:	stp	x29, x30, [sp, #64]
  40f638:	add	x29, sp, #0x40
  40f63c:	str	xzr, [sp, #48]
  40f640:	stp	q0, q0, [sp, #16]
  40f644:	str	q0, [sp]
  40f648:	b.eq	40f66c <ferror@plt+0xc7dc>  // b.none
  40f64c:	str	w0, [sp]
  40f650:	mov	x3, sp
  40f654:	mov	x2, #0xffffffffffffffff    	// #-1
  40f658:	mov	w0, wzr
  40f65c:	bl	40f3bc <ferror@plt+0xc52c>
  40f660:	ldp	x29, x30, [sp, #64]
  40f664:	add	sp, sp, #0x50
  40f668:	ret
  40f66c:	bl	402ae0 <abort@plt>
  40f670:	sub	sp, sp, #0x50
  40f674:	movi	v0.2d, #0x0
  40f678:	cmp	w0, #0xa
  40f67c:	stp	x29, x30, [sp, #64]
  40f680:	add	x29, sp, #0x40
  40f684:	str	xzr, [sp, #48]
  40f688:	stp	q0, q0, [sp, #16]
  40f68c:	str	q0, [sp]
  40f690:	b.eq	40f6b0 <ferror@plt+0xc820>  // b.none
  40f694:	str	w0, [sp]
  40f698:	mov	x3, sp
  40f69c:	mov	w0, wzr
  40f6a0:	bl	40f3bc <ferror@plt+0xc52c>
  40f6a4:	ldp	x29, x30, [sp, #64]
  40f6a8:	add	sp, sp, #0x50
  40f6ac:	ret
  40f6b0:	bl	402ae0 <abort@plt>
  40f6b4:	sub	sp, sp, #0x50
  40f6b8:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f6bc:	add	x9, x9, #0xbb0
  40f6c0:	ldp	q0, q1, [x9]
  40f6c4:	ubfx	w10, w2, #5, #3
  40f6c8:	mov	x11, sp
  40f6cc:	mov	x8, x1
  40f6d0:	stp	q0, q1, [sp]
  40f6d4:	ldr	q0, [x9, #32]
  40f6d8:	ldr	x9, [x9, #48]
  40f6dc:	mov	x1, x0
  40f6e0:	mov	x3, sp
  40f6e4:	str	q0, [sp, #32]
  40f6e8:	str	x9, [sp, #48]
  40f6ec:	add	x9, x11, w10, uxtw #2
  40f6f0:	ldr	w10, [x9, #8]
  40f6f4:	mov	w0, wzr
  40f6f8:	stp	x29, x30, [sp, #64]
  40f6fc:	add	x29, sp, #0x40
  40f700:	lsr	w11, w10, w2
  40f704:	mvn	w11, w11
  40f708:	and	w11, w11, #0x1
  40f70c:	lsl	w11, w11, w2
  40f710:	eor	w10, w11, w10
  40f714:	mov	x2, x8
  40f718:	str	w10, [x9, #8]
  40f71c:	bl	40f3bc <ferror@plt+0xc52c>
  40f720:	ldp	x29, x30, [sp, #64]
  40f724:	add	sp, sp, #0x50
  40f728:	ret
  40f72c:	sub	sp, sp, #0x50
  40f730:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f734:	add	x9, x9, #0xbb0
  40f738:	ldp	q0, q1, [x9]
  40f73c:	ubfx	w10, w1, #5, #3
  40f740:	mov	x11, sp
  40f744:	mov	x8, x0
  40f748:	stp	q0, q1, [sp]
  40f74c:	ldr	q0, [x9, #32]
  40f750:	ldr	x9, [x9, #48]
  40f754:	mov	x3, sp
  40f758:	mov	x2, #0xffffffffffffffff    	// #-1
  40f75c:	str	q0, [sp, #32]
  40f760:	str	x9, [sp, #48]
  40f764:	add	x9, x11, w10, uxtw #2
  40f768:	ldr	w10, [x9, #8]
  40f76c:	mov	w0, wzr
  40f770:	stp	x29, x30, [sp, #64]
  40f774:	add	x29, sp, #0x40
  40f778:	lsr	w11, w10, w1
  40f77c:	mvn	w11, w11
  40f780:	and	w11, w11, #0x1
  40f784:	lsl	w11, w11, w1
  40f788:	eor	w10, w11, w10
  40f78c:	mov	x1, x8
  40f790:	str	w10, [x9, #8]
  40f794:	bl	40f3bc <ferror@plt+0xc52c>
  40f798:	ldp	x29, x30, [sp, #64]
  40f79c:	add	sp, sp, #0x50
  40f7a0:	ret
  40f7a4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f7a8:	add	x8, x8, #0xbb0
  40f7ac:	ldp	q0, q1, [x8]
  40f7b0:	ldr	q2, [x8, #32]
  40f7b4:	ldr	x8, [x8, #48]
  40f7b8:	mov	x1, x0
  40f7bc:	stp	q0, q1, [sp, #-80]!
  40f7c0:	ldr	w9, [sp, #12]
  40f7c4:	str	x8, [sp, #48]
  40f7c8:	mov	x3, sp
  40f7cc:	mov	x2, #0xffffffffffffffff    	// #-1
  40f7d0:	orr	w8, w9, #0x4000000
  40f7d4:	mov	w0, wzr
  40f7d8:	stp	x29, x30, [sp, #64]
  40f7dc:	add	x29, sp, #0x40
  40f7e0:	str	q2, [sp, #32]
  40f7e4:	str	w8, [sp, #12]
  40f7e8:	bl	40f3bc <ferror@plt+0xc52c>
  40f7ec:	ldp	x29, x30, [sp, #64]
  40f7f0:	add	sp, sp, #0x50
  40f7f4:	ret
  40f7f8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f7fc:	add	x8, x8, #0xbb0
  40f800:	ldp	q0, q1, [x8]
  40f804:	ldr	q2, [x8, #32]
  40f808:	ldr	x8, [x8, #48]
  40f80c:	mov	x2, x1
  40f810:	stp	q0, q1, [sp, #-80]!
  40f814:	ldr	w9, [sp, #12]
  40f818:	mov	x1, x0
  40f81c:	str	x8, [sp, #48]
  40f820:	mov	x3, sp
  40f824:	orr	w8, w9, #0x4000000
  40f828:	mov	w0, wzr
  40f82c:	stp	x29, x30, [sp, #64]
  40f830:	add	x29, sp, #0x40
  40f834:	str	q2, [sp, #32]
  40f838:	str	w8, [sp, #12]
  40f83c:	bl	40f3bc <ferror@plt+0xc52c>
  40f840:	ldp	x29, x30, [sp, #64]
  40f844:	add	sp, sp, #0x50
  40f848:	ret
  40f84c:	sub	sp, sp, #0x80
  40f850:	movi	v0.2d, #0x0
  40f854:	cmp	w1, #0xa
  40f858:	stp	x29, x30, [sp, #112]
  40f85c:	add	x29, sp, #0x70
  40f860:	str	wzr, [sp, #48]
  40f864:	stp	q0, q0, [sp, #16]
  40f868:	str	q0, [sp]
  40f86c:	b.eq	40f8bc <ferror@plt+0xca2c>  // b.none
  40f870:	ldp	q0, q1, [sp]
  40f874:	ldr	w9, [sp, #48]
  40f878:	ldr	q2, [sp, #32]
  40f87c:	mov	x8, x2
  40f880:	stur	q0, [sp, #60]
  40f884:	ldr	w10, [sp, #68]
  40f888:	str	w1, [sp, #56]
  40f88c:	str	w9, [sp, #108]
  40f890:	add	x3, sp, #0x38
  40f894:	orr	w9, w10, #0x4000000
  40f898:	mov	x2, #0xffffffffffffffff    	// #-1
  40f89c:	mov	x1, x8
  40f8a0:	stur	q1, [sp, #76]
  40f8a4:	stur	q2, [sp, #92]
  40f8a8:	str	w9, [sp, #68]
  40f8ac:	bl	40f3bc <ferror@plt+0xc52c>
  40f8b0:	ldp	x29, x30, [sp, #112]
  40f8b4:	add	sp, sp, #0x80
  40f8b8:	ret
  40f8bc:	bl	402ae0 <abort@plt>
  40f8c0:	sub	sp, sp, #0x50
  40f8c4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f8c8:	add	x9, x9, #0xbb0
  40f8cc:	ldp	q0, q1, [x9]
  40f8d0:	ldr	q2, [x9, #32]
  40f8d4:	ldr	x9, [x9, #48]
  40f8d8:	mov	w10, #0xa                   	// #10
  40f8dc:	stp	x29, x30, [sp, #64]
  40f8e0:	add	x29, sp, #0x40
  40f8e4:	stp	q0, q1, [sp]
  40f8e8:	str	q2, [sp, #32]
  40f8ec:	str	x9, [sp, #48]
  40f8f0:	str	w10, [sp]
  40f8f4:	cbz	x1, 40f920 <ferror@plt+0xca90>
  40f8f8:	cbz	x2, 40f920 <ferror@plt+0xca90>
  40f8fc:	mov	x8, x3
  40f900:	stp	x1, x2, [sp, #40]
  40f904:	mov	x3, sp
  40f908:	mov	x2, #0xffffffffffffffff    	// #-1
  40f90c:	mov	x1, x8
  40f910:	bl	40f3bc <ferror@plt+0xc52c>
  40f914:	ldp	x29, x30, [sp, #64]
  40f918:	add	sp, sp, #0x50
  40f91c:	ret
  40f920:	bl	402ae0 <abort@plt>
  40f924:	sub	sp, sp, #0x50
  40f928:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f92c:	add	x9, x9, #0xbb0
  40f930:	ldp	q0, q1, [x9]
  40f934:	ldr	x10, [x9, #48]
  40f938:	stp	x29, x30, [sp, #64]
  40f93c:	add	x29, sp, #0x40
  40f940:	stp	q0, q1, [sp]
  40f944:	ldr	q0, [x9, #32]
  40f948:	mov	w9, #0xa                   	// #10
  40f94c:	str	x10, [sp, #48]
  40f950:	str	w9, [sp]
  40f954:	str	q0, [sp, #32]
  40f958:	cbz	x1, 40f984 <ferror@plt+0xcaf4>
  40f95c:	cbz	x2, 40f984 <ferror@plt+0xcaf4>
  40f960:	mov	x8, x3
  40f964:	stp	x1, x2, [sp, #40]
  40f968:	mov	x3, sp
  40f96c:	mov	x1, x8
  40f970:	mov	x2, x4
  40f974:	bl	40f3bc <ferror@plt+0xc52c>
  40f978:	ldp	x29, x30, [sp, #64]
  40f97c:	add	sp, sp, #0x50
  40f980:	ret
  40f984:	bl	402ae0 <abort@plt>
  40f988:	sub	sp, sp, #0x50
  40f98c:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f990:	add	x9, x9, #0xbb0
  40f994:	ldp	q0, q1, [x9]
  40f998:	ldr	q2, [x9, #32]
  40f99c:	ldr	x9, [x9, #48]
  40f9a0:	mov	w10, #0xa                   	// #10
  40f9a4:	stp	x29, x30, [sp, #64]
  40f9a8:	add	x29, sp, #0x40
  40f9ac:	stp	q0, q1, [sp]
  40f9b0:	str	q2, [sp, #32]
  40f9b4:	str	x9, [sp, #48]
  40f9b8:	str	w10, [sp]
  40f9bc:	cbz	x0, 40f9ec <ferror@plt+0xcb5c>
  40f9c0:	cbz	x1, 40f9ec <ferror@plt+0xcb5c>
  40f9c4:	mov	x8, x2
  40f9c8:	stp	x0, x1, [sp, #40]
  40f9cc:	mov	x3, sp
  40f9d0:	mov	x2, #0xffffffffffffffff    	// #-1
  40f9d4:	mov	w0, wzr
  40f9d8:	mov	x1, x8
  40f9dc:	bl	40f3bc <ferror@plt+0xc52c>
  40f9e0:	ldp	x29, x30, [sp, #64]
  40f9e4:	add	sp, sp, #0x50
  40f9e8:	ret
  40f9ec:	bl	402ae0 <abort@plt>
  40f9f0:	sub	sp, sp, #0x50
  40f9f4:	adrp	x9, 427000 <_obstack_memory_used@@Base+0x145ec>
  40f9f8:	add	x9, x9, #0xbb0
  40f9fc:	ldp	q0, q1, [x9]
  40fa00:	ldr	q2, [x9, #32]
  40fa04:	ldr	x9, [x9, #48]
  40fa08:	mov	w10, #0xa                   	// #10
  40fa0c:	stp	x29, x30, [sp, #64]
  40fa10:	add	x29, sp, #0x40
  40fa14:	stp	q0, q1, [sp]
  40fa18:	str	q2, [sp, #32]
  40fa1c:	str	x9, [sp, #48]
  40fa20:	str	w10, [sp]
  40fa24:	cbz	x0, 40fa54 <ferror@plt+0xcbc4>
  40fa28:	cbz	x1, 40fa54 <ferror@plt+0xcbc4>
  40fa2c:	mov	x8, x3
  40fa30:	stp	x0, x1, [sp, #40]
  40fa34:	mov	x3, sp
  40fa38:	mov	w0, wzr
  40fa3c:	mov	x1, x2
  40fa40:	mov	x2, x8
  40fa44:	bl	40f3bc <ferror@plt+0xc52c>
  40fa48:	ldp	x29, x30, [sp, #64]
  40fa4c:	add	sp, sp, #0x50
  40fa50:	ret
  40fa54:	bl	402ae0 <abort@plt>
  40fa58:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40fa5c:	add	x3, x3, #0x4c0
  40fa60:	b	40f3bc <ferror@plt+0xc52c>
  40fa64:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40fa68:	mov	x2, x1
  40fa6c:	add	x3, x3, #0x4c0
  40fa70:	mov	x1, x0
  40fa74:	mov	w0, wzr
  40fa78:	b	40f3bc <ferror@plt+0xc52c>
  40fa7c:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40fa80:	add	x3, x3, #0x4c0
  40fa84:	mov	x2, #0xffffffffffffffff    	// #-1
  40fa88:	b	40f3bc <ferror@plt+0xc52c>
  40fa8c:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x145ec>
  40fa90:	add	x3, x3, #0x4c0
  40fa94:	mov	x2, #0xffffffffffffffff    	// #-1
  40fa98:	mov	x1, x0
  40fa9c:	mov	w0, wzr
  40faa0:	b	40f3bc <ferror@plt+0xc52c>
  40faa4:	sub	sp, sp, #0x40
  40faa8:	stp	x29, x30, [sp, #16]
  40faac:	stp	x22, x21, [sp, #32]
  40fab0:	stp	x20, x19, [sp, #48]
  40fab4:	add	x29, sp, #0x10
  40fab8:	cbz	x1, 40fb1c <ferror@plt+0xcc8c>
  40fabc:	mov	x21, x1
  40fac0:	mov	x20, x0
  40fac4:	cbz	x0, 40fb3c <ferror@plt+0xccac>
  40fac8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  40facc:	add	x1, x1, #0xe9d
  40fad0:	mov	x0, x20
  40fad4:	bl	412db8 <_obstack_memory_used@@Base+0x3a4>
  40fad8:	cbz	x0, 40fba8 <ferror@plt+0xcd18>
  40fadc:	mov	x22, x0
  40fae0:	mov	w0, #0x1038                	// #4152
  40fae4:	bl	4112fc <ferror@plt+0xe46c>
  40fae8:	adrp	x8, 40f000 <ferror@plt+0xc170>
  40faec:	add	x8, x8, #0xe94
  40faf0:	cmp	x21, #0x1, lsl #12
  40faf4:	mov	w9, #0x1000                	// #4096
  40faf8:	mov	x19, x0
  40fafc:	stp	x8, x20, [x0, #8]
  40fb00:	add	x1, x0, #0x18
  40fb04:	str	x22, [x0]
  40fb08:	csel	x3, x21, x9, cc  // cc = lo, ul, last
  40fb0c:	mov	x0, x22
  40fb10:	mov	w2, wzr
  40fb14:	bl	402860 <setvbuf@plt>
  40fb18:	b	40fccc <ferror@plt+0xce3c>
  40fb1c:	mov	w0, #0x1038                	// #4152
  40fb20:	bl	4112fc <ferror@plt+0xe46c>
  40fb24:	adrp	x8, 40f000 <ferror@plt+0xc170>
  40fb28:	add	x8, x8, #0xe94
  40fb2c:	mov	x19, x0
  40fb30:	stp	xzr, x8, [x0]
  40fb34:	str	xzr, [x0, #16]
  40fb38:	b	40fccc <ferror@plt+0xce3c>
  40fb3c:	mov	w0, #0x1038                	// #4152
  40fb40:	bl	4112fc <ferror@plt+0xe46c>
  40fb44:	adrp	x8, 40f000 <ferror@plt+0xc170>
  40fb48:	add	x8, x8, #0xe94
  40fb4c:	mov	x19, x0
  40fb50:	add	x20, x0, #0x20
  40fb54:	stp	xzr, x8, [x0]
  40fb58:	stp	xzr, xzr, [x0, #16]
  40fb5c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x25ec>
  40fb60:	add	x0, x0, #0xebf
  40fb64:	mov	w1, wzr
  40fb68:	bl	402950 <open@plt>
  40fb6c:	tbnz	w0, #31, 40fbb0 <ferror@plt+0xcd20>
  40fb70:	cmp	x21, #0x800
  40fb74:	mov	w8, #0x800                 	// #2048
  40fb78:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40fb7c:	mov	x1, x20
  40fb80:	mov	w22, w0
  40fb84:	bl	402d20 <read@plt>
  40fb88:	mov	x21, x0
  40fb8c:	mov	w0, w22
  40fb90:	bl	402a70 <close@plt>
  40fb94:	cmp	x21, #0x1
  40fb98:	b.lt	40fbb0 <ferror@plt+0xcd20>  // b.tstop
  40fb9c:	cmp	x21, #0x7ff
  40fba0:	b.ls	40fbb4 <ferror@plt+0xcd24>  // b.plast
  40fba4:	b	40fcc4 <ferror@plt+0xce34>
  40fba8:	mov	x19, xzr
  40fbac:	b	40fccc <ferror@plt+0xce3c>
  40fbb0:	mov	x21, xzr
  40fbb4:	mov	w8, #0x800                 	// #2048
  40fbb8:	sub	x8, x8, x21
  40fbbc:	cmp	x8, #0x10
  40fbc0:	mov	w9, #0x10                  	// #16
  40fbc4:	mov	x0, sp
  40fbc8:	mov	x1, xzr
  40fbcc:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  40fbd0:	bl	402a00 <gettimeofday@plt>
  40fbd4:	add	x0, x20, x21
  40fbd8:	mov	x1, sp
  40fbdc:	mov	x2, x22
  40fbe0:	bl	402760 <memcpy@plt>
  40fbe4:	add	x22, x22, x21
  40fbe8:	cmp	x22, #0x7ff
  40fbec:	b.hi	40fcc4 <ferror@plt+0xce34>  // b.pmore
  40fbf0:	mov	w8, #0x800                 	// #2048
  40fbf4:	sub	x8, x8, x22
  40fbf8:	cmp	x8, #0x4
  40fbfc:	mov	w9, #0x4                   	// #4
  40fc00:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40fc04:	bl	402900 <getpid@plt>
  40fc08:	str	w0, [sp]
  40fc0c:	add	x0, x20, x22
  40fc10:	mov	x1, sp
  40fc14:	mov	x2, x21
  40fc18:	bl	402760 <memcpy@plt>
  40fc1c:	add	x22, x21, x22
  40fc20:	cmp	x22, #0x7ff
  40fc24:	b.hi	40fcc4 <ferror@plt+0xce34>  // b.pmore
  40fc28:	mov	w8, #0x800                 	// #2048
  40fc2c:	sub	x8, x8, x22
  40fc30:	cmp	x8, #0x4
  40fc34:	mov	w9, #0x4                   	// #4
  40fc38:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40fc3c:	bl	402960 <getppid@plt>
  40fc40:	str	w0, [sp]
  40fc44:	add	x0, x20, x22
  40fc48:	mov	x1, sp
  40fc4c:	mov	x2, x21
  40fc50:	bl	402760 <memcpy@plt>
  40fc54:	add	x22, x21, x22
  40fc58:	cmp	x22, #0x7ff
  40fc5c:	b.hi	40fcc4 <ferror@plt+0xce34>  // b.pmore
  40fc60:	mov	w8, #0x800                 	// #2048
  40fc64:	sub	x8, x8, x22
  40fc68:	cmp	x8, #0x4
  40fc6c:	mov	w9, #0x4                   	// #4
  40fc70:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40fc74:	bl	402810 <getuid@plt>
  40fc78:	str	w0, [sp]
  40fc7c:	add	x0, x20, x22
  40fc80:	mov	x1, sp
  40fc84:	mov	x2, x21
  40fc88:	bl	402760 <memcpy@plt>
  40fc8c:	add	x22, x21, x22
  40fc90:	cmp	x22, #0x7ff
  40fc94:	b.hi	40fcc4 <ferror@plt+0xce34>  // b.pmore
  40fc98:	mov	w8, #0x800                 	// #2048
  40fc9c:	sub	x8, x8, x22
  40fca0:	cmp	x8, #0x4
  40fca4:	mov	w9, #0x4                   	// #4
  40fca8:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  40fcac:	bl	402c20 <getgid@plt>
  40fcb0:	str	w0, [sp]
  40fcb4:	add	x0, x20, x22
  40fcb8:	mov	x1, sp
  40fcbc:	mov	x2, x21
  40fcc0:	bl	402760 <memcpy@plt>
  40fcc4:	mov	x0, x20
  40fcc8:	bl	41014c <ferror@plt+0xd2bc>
  40fccc:	mov	x0, x19
  40fcd0:	ldp	x20, x19, [sp, #48]
  40fcd4:	ldp	x22, x21, [sp, #32]
  40fcd8:	ldp	x29, x30, [sp, #16]
  40fcdc:	add	sp, sp, #0x40
  40fce0:	ret
  40fce4:	str	x1, [x0, #8]
  40fce8:	ret
  40fcec:	str	x1, [x0, #16]
  40fcf0:	ret
  40fcf4:	stp	x29, x30, [sp, #-80]!
  40fcf8:	stp	x24, x23, [sp, #32]
  40fcfc:	stp	x22, x21, [sp, #48]
  40fd00:	stp	x20, x19, [sp, #64]
  40fd04:	ldr	x3, [x0]
  40fd08:	mov	x21, x2
  40fd0c:	mov	x19, x0
  40fd10:	mov	x20, x1
  40fd14:	str	x25, [sp, #16]
  40fd18:	mov	x29, sp
  40fd1c:	cbz	x3, 40fd8c <ferror@plt+0xcefc>
  40fd20:	mov	w1, #0x1                   	// #1
  40fd24:	mov	x0, x20
  40fd28:	mov	x2, x21
  40fd2c:	bl	402b50 <fread_unlocked@plt>
  40fd30:	mov	x23, x0
  40fd34:	bl	402e00 <__errno_location@plt>
  40fd38:	subs	x21, x21, x23
  40fd3c:	b.eq	40fe30 <ferror@plt+0xcfa0>  // b.none
  40fd40:	mov	x22, x0
  40fd44:	ldr	x8, [x19]
  40fd48:	ldr	w9, [x22]
  40fd4c:	add	x20, x20, x23
  40fd50:	ldr	w8, [x8]
  40fd54:	lsl	w8, w8, #26
  40fd58:	and	w8, w9, w8, asr #31
  40fd5c:	str	w8, [x22]
  40fd60:	ldp	x8, x0, [x19, #8]
  40fd64:	blr	x8
  40fd68:	ldr	x3, [x19]
  40fd6c:	mov	w1, #0x1                   	// #1
  40fd70:	mov	x0, x20
  40fd74:	mov	x2, x21
  40fd78:	bl	402b50 <fread_unlocked@plt>
  40fd7c:	mov	x23, x0
  40fd80:	subs	x21, x21, x0
  40fd84:	b.ne	40fd44 <ferror@plt+0xceb4>  // b.any
  40fd88:	b	40fe30 <ferror@plt+0xcfa0>
  40fd8c:	ldr	x24, [x19, #24]
  40fd90:	add	x22, x19, #0x838
  40fd94:	sub	x8, x22, x24
  40fd98:	cmp	x24, x21
  40fd9c:	add	x1, x8, #0x800
  40fda0:	b.cs	40fe10 <ferror@plt+0xcf80>  // b.hs, b.nlast
  40fda4:	add	x23, x19, #0x20
  40fda8:	mov	w25, #0x800                 	// #2048
  40fdac:	b	40fdcc <ferror@plt+0xcf3c>
  40fdb0:	mov	x0, x23
  40fdb4:	mov	x1, x22
  40fdb8:	bl	40ff04 <ferror@plt+0xd074>
  40fdbc:	cmp	x21, #0x800
  40fdc0:	mov	x1, x22
  40fdc4:	mov	w24, #0x800                 	// #2048
  40fdc8:	b.ls	40fe18 <ferror@plt+0xcf88>  // b.plast
  40fdcc:	mov	x0, x20
  40fdd0:	mov	x2, x24
  40fdd4:	bl	402760 <memcpy@plt>
  40fdd8:	add	x20, x20, x24
  40fddc:	tst	x20, #0x7
  40fde0:	sub	x21, x21, x24
  40fde4:	b.ne	40fdb0 <ferror@plt+0xcf20>  // b.any
  40fde8:	cmp	x21, #0x800
  40fdec:	b.cc	40fdb0 <ferror@plt+0xcf20>  // b.lo, b.ul, b.last
  40fdf0:	mov	x0, x23
  40fdf4:	mov	x1, x20
  40fdf8:	bl	40ff04 <ferror@plt+0xd074>
  40fdfc:	subs	x21, x21, #0x800
  40fe00:	add	x20, x20, #0x800
  40fe04:	b.ne	40fde8 <ferror@plt+0xcf58>  // b.any
  40fe08:	mov	x8, xzr
  40fe0c:	b	40fe2c <ferror@plt+0xcf9c>
  40fe10:	mov	x25, x24
  40fe14:	mov	x22, x1
  40fe18:	mov	x0, x20
  40fe1c:	mov	x1, x22
  40fe20:	mov	x2, x21
  40fe24:	bl	402760 <memcpy@plt>
  40fe28:	sub	x8, x25, x21
  40fe2c:	str	x8, [x19, #24]
  40fe30:	ldp	x20, x19, [sp, #64]
  40fe34:	ldp	x22, x21, [sp, #48]
  40fe38:	ldp	x24, x23, [sp, #32]
  40fe3c:	ldr	x25, [sp, #16]
  40fe40:	ldp	x29, x30, [sp], #80
  40fe44:	ret
  40fe48:	stp	x29, x30, [sp, #-32]!
  40fe4c:	stp	x20, x19, [sp, #16]
  40fe50:	ldr	x19, [x0]
  40fe54:	mov	w1, #0x1038                	// #4152
  40fe58:	mov	x2, #0xffffffffffffffff    	// #-1
  40fe5c:	mov	x29, sp
  40fe60:	mov	x20, x0
  40fe64:	bl	402d10 <__explicit_bzero_chk@plt>
  40fe68:	mov	x0, x20
  40fe6c:	bl	402c00 <free@plt>
  40fe70:	cbz	x19, 40fe84 <ferror@plt+0xcff4>
  40fe74:	mov	x0, x19
  40fe78:	ldp	x20, x19, [sp, #16]
  40fe7c:	ldp	x29, x30, [sp], #32
  40fe80:	b	412154 <ferror@plt+0xf2c4>
  40fe84:	ldp	x20, x19, [sp, #16]
  40fe88:	mov	w0, wzr
  40fe8c:	ldp	x29, x30, [sp], #32
  40fe90:	ret
  40fe94:	stp	x29, x30, [sp, #-48]!
  40fe98:	stp	x22, x21, [sp, #16]
  40fe9c:	stp	x20, x19, [sp, #32]
  40fea0:	mov	x29, sp
  40fea4:	cbz	x0, 40ff00 <ferror@plt+0xd070>
  40fea8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  40feac:	ldr	w20, [x8, #1208]
  40feb0:	mov	x19, x0
  40feb4:	bl	402e00 <__errno_location@plt>
  40feb8:	ldr	w21, [x0]
  40febc:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  40fec0:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x25ec>
  40fec4:	add	x8, x8, #0xeb0
  40fec8:	add	x9, x9, #0xea0
  40fecc:	cmp	w21, #0x0
  40fed0:	csel	x1, x9, x8, eq  // eq = none
  40fed4:	mov	w2, #0x5                   	// #5
  40fed8:	mov	x0, xzr
  40fedc:	bl	402d70 <dcgettext@plt>
  40fee0:	mov	x22, x0
  40fee4:	mov	x0, x19
  40fee8:	bl	40fa8c <ferror@plt+0xcbfc>
  40feec:	mov	x3, x0
  40fef0:	mov	w0, w20
  40fef4:	mov	w1, w21
  40fef8:	mov	x2, x22
  40fefc:	bl	4027f0 <error@plt>
  40ff00:	bl	402ae0 <abort@plt>
  40ff04:	ldr	x9, [x0, #2064]
  40ff08:	ldr	x10, [x0, #2056]
  40ff0c:	ldr	x13, [x0, #2048]
  40ff10:	mov	x8, xzr
  40ff14:	add	x9, x9, #0x1
  40ff18:	add	x15, x9, x10
  40ff1c:	add	x10, x0, #0x400
  40ff20:	str	x9, [x0, #2064]
  40ff24:	add	x9, x0, x8
  40ff28:	ldr	x11, [x9]
  40ff2c:	ldr	x12, [x9, #1024]
  40ff30:	eon	x13, x13, x13, lsl #21
  40ff34:	and	x14, x11, #0x7f8
  40ff38:	ldr	x14, [x0, x14]
  40ff3c:	add	x12, x13, x12
  40ff40:	add	x13, x12, x15
  40ff44:	eor	x12, x12, x12, lsr #5
  40ff48:	add	x13, x13, x14
  40ff4c:	str	x13, [x9]
  40ff50:	lsr	x13, x13, #8
  40ff54:	and	x13, x13, #0x7f8
  40ff58:	ldr	x13, [x0, x13]
  40ff5c:	add	x14, x1, x8
  40ff60:	add	x8, x8, #0x20
  40ff64:	add	x11, x13, x11
  40ff68:	str	x11, [x14]
  40ff6c:	ldr	x13, [x9, #8]
  40ff70:	ldr	x15, [x9, #1032]
  40ff74:	and	x16, x13, #0x7f8
  40ff78:	ldr	x16, [x0, x16]
  40ff7c:	add	x12, x15, x12
  40ff80:	add	x11, x12, x11
  40ff84:	eor	x12, x12, x12, lsl #12
  40ff88:	add	x11, x11, x16
  40ff8c:	str	x11, [x9, #8]
  40ff90:	lsr	x11, x11, #8
  40ff94:	and	x11, x11, #0x7f8
  40ff98:	ldr	x11, [x0, x11]
  40ff9c:	add	x11, x11, x13
  40ffa0:	str	x11, [x14, #8]
  40ffa4:	ldr	x13, [x9, #16]
  40ffa8:	ldr	x15, [x9, #1040]
  40ffac:	and	x16, x13, #0x7f8
  40ffb0:	ldr	x16, [x0, x16]
  40ffb4:	add	x12, x15, x12
  40ffb8:	add	x11, x12, x11
  40ffbc:	eor	x12, x12, x12, lsr #33
  40ffc0:	add	x11, x11, x16
  40ffc4:	str	x11, [x9, #16]
  40ffc8:	lsr	x11, x11, #8
  40ffcc:	and	x11, x11, #0x7f8
  40ffd0:	ldr	x11, [x0, x11]
  40ffd4:	add	x11, x11, x13
  40ffd8:	str	x11, [x14, #16]
  40ffdc:	ldr	x15, [x9, #24]
  40ffe0:	ldr	x13, [x9, #1048]
  40ffe4:	and	x16, x15, #0x7f8
  40ffe8:	ldr	x16, [x0, x16]
  40ffec:	add	x13, x13, x12
  40fff0:	add	x11, x13, x11
  40fff4:	add	x11, x11, x16
  40fff8:	str	x11, [x9, #24]
  40fffc:	lsr	x9, x11, #8
  410000:	and	x9, x9, #0x7f8
  410004:	ldr	x11, [x0, x9]
  410008:	add	x9, x0, x8
  41000c:	cmp	x9, x10
  410010:	add	x15, x11, x15
  410014:	str	x15, [x14, #24]
  410018:	b.cc	40ff24 <ferror@plt+0xd094>  // b.lo, b.ul, b.last
  41001c:	mov	x10, xzr
  410020:	add	x11, x0, #0x800
  410024:	add	x12, x1, x8
  410028:	ldr	x16, [x9, x10]
  41002c:	add	x14, x9, x10
  410030:	sub	x17, x14, #0x400
  410034:	ldr	x17, [x17]
  410038:	and	x18, x16, #0x7f8
  41003c:	ldr	x18, [x0, x18]
  410040:	eon	x13, x13, x13, lsl #21
  410044:	add	x13, x13, x17
  410048:	add	x15, x13, x15
  41004c:	add	x15, x15, x18
  410050:	str	x15, [x9, x10]
  410054:	lsr	x15, x15, #8
  410058:	and	x15, x15, #0x7f8
  41005c:	ldr	x15, [x0, x15]
  410060:	add	x17, x0, x10
  410064:	add	x17, x17, x8
  410068:	sub	x18, x14, #0x3f8
  41006c:	add	x15, x15, x16
  410070:	str	x15, [x12, x10]
  410074:	ldr	x16, [x17, #8]
  410078:	ldr	x18, [x18]
  41007c:	eor	x13, x13, x13, lsr #5
  410080:	and	x2, x16, #0x7f8
  410084:	ldr	x2, [x0, x2]
  410088:	add	x13, x18, x13
  41008c:	add	x15, x13, x15
  410090:	add	x18, x1, x10
  410094:	add	x15, x15, x2
  410098:	str	x15, [x17, #8]
  41009c:	lsr	x15, x15, #8
  4100a0:	and	x15, x15, #0x7f8
  4100a4:	ldr	x15, [x0, x15]
  4100a8:	add	x18, x18, x8
  4100ac:	sub	x2, x14, #0x3f0
  4100b0:	eor	x13, x13, x13, lsl #12
  4100b4:	add	x15, x15, x16
  4100b8:	str	x15, [x18, #8]
  4100bc:	ldr	x16, [x17, #16]
  4100c0:	ldr	x2, [x2]
  4100c4:	and	x3, x16, #0x7f8
  4100c8:	ldr	x3, [x0, x3]
  4100cc:	add	x13, x2, x13
  4100d0:	add	x15, x13, x15
  4100d4:	eor	x13, x13, x13, lsr #33
  4100d8:	add	x15, x15, x3
  4100dc:	str	x15, [x17, #16]
  4100e0:	lsr	x15, x15, #8
  4100e4:	and	x15, x15, #0x7f8
  4100e8:	ldr	x15, [x0, x15]
  4100ec:	add	x15, x15, x16
  4100f0:	str	x15, [x18, #16]
  4100f4:	ldr	x16, [x17, #24]
  4100f8:	sub	x18, x14, #0x3e8
  4100fc:	ldr	x18, [x18]
  410100:	add	x14, x14, #0x20
  410104:	and	x2, x16, #0x7f8
  410108:	ldr	x2, [x0, x2]
  41010c:	add	x13, x18, x13
  410110:	add	x15, x13, x15
  410114:	cmp	x14, x11
  410118:	add	x15, x15, x2
  41011c:	str	x15, [x17, #24]
  410120:	lsr	x15, x15, #8
  410124:	and	x15, x15, #0x7f8
  410128:	ldr	x15, [x0, x15]
  41012c:	add	x17, x12, x10
  410130:	add	x10, x10, #0x20
  410134:	add	x15, x15, x16
  410138:	str	x15, [x17, #24]
  41013c:	b.cc	410028 <ferror@plt+0xd198>  // b.lo, b.ul, b.last
  410140:	str	x13, [x0, #2048]
  410144:	str	x15, [x0, #2056]
  410148:	ret
  41014c:	mov	x11, #0x4b7c                	// #19324
  410150:	mov	x12, #0xc862                	// #51298
  410154:	mov	x15, #0x12a0                	// #4768
  410158:	mov	x13, #0x5524                	// #21796
  41015c:	mov	x16, #0xe0ce                	// #57550
  410160:	mov	x14, #0x9315                	// #37653
  410164:	mov	x17, #0x89ed                	// #35309
  410168:	mov	x8, #0xc0ab                	// #49323
  41016c:	movk	x11, #0xa288, lsl #16
  410170:	movk	x12, #0xc73a, lsl #16
  410174:	movk	x15, #0x3d47, lsl #16
  410178:	movk	x13, #0x4a59, lsl #16
  41017c:	movk	x16, #0x8355, lsl #16
  410180:	movk	x14, #0xa5a0, lsl #16
  410184:	movk	x17, #0xcbfc, lsl #16
  410188:	movk	x8, #0x6c44, lsl #16
  41018c:	movk	x11, #0x4677, lsl #32
  410190:	movk	x12, #0xb322, lsl #32
  410194:	movk	x15, #0xa505, lsl #32
  410198:	movk	x13, #0x2e82, lsl #32
  41019c:	movk	x16, #0x53db, lsl #32
  4101a0:	movk	x14, #0x4a0f, lsl #32
  4101a4:	movk	x17, #0x5bf2, lsl #32
  4101a8:	movk	x8, #0x704f, lsl #32
  4101ac:	add	x9, x0, #0x20
  4101b0:	movk	x11, #0x647c, lsl #48
  4101b4:	movk	x12, #0xb9f8, lsl #48
  4101b8:	movk	x15, #0x8c0e, lsl #48
  4101bc:	movk	x13, #0xb29b, lsl #48
  4101c0:	movk	x16, #0x82f0, lsl #48
  4101c4:	movk	x14, #0x48fe, lsl #48
  4101c8:	movk	x17, #0xae98, lsl #48
  4101cc:	movk	x8, #0x98f5, lsl #48
  4101d0:	mov	x10, #0xfffffffffffffff8    	// #-8
  4101d4:	ldp	x18, x1, [x9, #-32]
  4101d8:	add	x10, x10, #0x8
  4101dc:	cmp	x10, #0xf8
  4101e0:	add	x11, x18, x11
  4101e4:	ldp	x2, x18, [x9, #-16]
  4101e8:	add	x12, x1, x12
  4101ec:	add	x15, x2, x15
  4101f0:	ldp	x1, x2, [x9]
  4101f4:	add	x13, x18, x13
  4101f8:	add	x16, x1, x16
  4101fc:	ldp	x18, x1, [x9, #16]
  410200:	add	x14, x2, x14
  410204:	sub	x11, x11, x16
  410208:	add	x8, x1, x8
  41020c:	add	x17, x18, x17
  410210:	eor	x14, x14, x8, lsr #9
  410214:	add	x8, x8, x11
  410218:	sub	x12, x12, x14
  41021c:	eor	x17, x17, x11, lsl #9
  410220:	add	x11, x12, x11
  410224:	sub	x15, x15, x17
  410228:	eor	x8, x8, x12, lsr #23
  41022c:	add	x12, x12, x15
  410230:	sub	x13, x13, x8
  410234:	eor	x11, x11, x15, lsl #15
  410238:	sub	x16, x16, x11
  41023c:	eor	x12, x12, x13, lsr #14
  410240:	add	x15, x13, x15
  410244:	add	x13, x13, x16
  410248:	sub	x14, x14, x12
  41024c:	eor	x15, x15, x16, lsl #20
  410250:	eor	x13, x13, x14, lsr #17
  410254:	add	x16, x14, x16
  410258:	sub	x17, x17, x15
  41025c:	sub	x8, x8, x13
  410260:	add	x14, x14, x17
  410264:	eor	x16, x16, x17, lsl #14
  410268:	add	x17, x8, x17
  41026c:	stp	x11, x12, [x9, #-32]
  410270:	stp	x15, x13, [x9, #-16]
  410274:	stp	x16, x14, [x9]
  410278:	stp	x17, x8, [x9, #16]
  41027c:	add	x9, x9, #0x40
  410280:	b.cc	4101d4 <ferror@plt+0xd344>  // b.lo, b.ul, b.last
  410284:	add	x9, x0, #0x20
  410288:	mov	x10, #0xfffffffffffffff8    	// #-8
  41028c:	ldp	x18, x1, [x9, #-32]
  410290:	add	x10, x10, #0x8
  410294:	cmp	x10, #0xf8
  410298:	add	x11, x18, x11
  41029c:	ldp	x2, x18, [x9, #-16]
  4102a0:	add	x12, x1, x12
  4102a4:	add	x15, x2, x15
  4102a8:	ldp	x1, x2, [x9]
  4102ac:	add	x13, x18, x13
  4102b0:	add	x16, x1, x16
  4102b4:	ldp	x18, x1, [x9, #16]
  4102b8:	add	x14, x2, x14
  4102bc:	sub	x11, x11, x16
  4102c0:	add	x8, x1, x8
  4102c4:	add	x17, x18, x17
  4102c8:	eor	x14, x14, x8, lsr #9
  4102cc:	add	x8, x8, x11
  4102d0:	sub	x12, x12, x14
  4102d4:	eor	x17, x17, x11, lsl #9
  4102d8:	add	x11, x12, x11
  4102dc:	sub	x15, x15, x17
  4102e0:	eor	x8, x8, x12, lsr #23
  4102e4:	add	x12, x12, x15
  4102e8:	sub	x13, x13, x8
  4102ec:	eor	x11, x11, x15, lsl #15
  4102f0:	sub	x16, x16, x11
  4102f4:	eor	x12, x12, x13, lsr #14
  4102f8:	add	x15, x13, x15
  4102fc:	add	x13, x13, x16
  410300:	sub	x14, x14, x12
  410304:	eor	x15, x15, x16, lsl #20
  410308:	eor	x13, x13, x14, lsr #17
  41030c:	add	x16, x14, x16
  410310:	sub	x17, x17, x15
  410314:	sub	x8, x8, x13
  410318:	add	x14, x14, x17
  41031c:	eor	x16, x16, x17, lsl #14
  410320:	add	x17, x8, x17
  410324:	stp	x11, x12, [x9, #-32]
  410328:	stp	x15, x13, [x9, #-16]
  41032c:	stp	x16, x14, [x9]
  410330:	stp	x17, x8, [x9, #16]
  410334:	add	x9, x9, #0x40
  410338:	b.cc	41028c <ferror@plt+0xd3fc>  // b.lo, b.ul, b.last
  41033c:	movi	v0.2d, #0x0
  410340:	str	xzr, [x0, #2064]
  410344:	str	q0, [x0, #2048]
  410348:	ret
  41034c:	stp	x29, x30, [sp, #-48]!
  410350:	str	x21, [sp, #16]
  410354:	stp	x20, x19, [sp, #32]
  410358:	adrp	x20, 402000 <mbrtowc@plt-0x750>
  41035c:	adrp	x21, 402000 <mbrtowc@plt-0x750>
  410360:	add	x20, x20, #0x930
  410364:	add	x21, x21, #0xc00
  410368:	mov	x19, x0
  41036c:	add	x0, x0, #0x18
  410370:	mov	x1, xzr
  410374:	mov	x2, xzr
  410378:	mov	x3, x20
  41037c:	mov	x4, x21
  410380:	mov	x29, sp
  410384:	stp	xzr, xzr, [x19]
  410388:	str	xzr, [x19, #16]
  41038c:	bl	41269c <_obstack_begin@@Base>
  410390:	add	x0, x19, #0x70
  410394:	mov	x1, xzr
  410398:	mov	x2, xzr
  41039c:	mov	x3, x20
  4103a0:	mov	x4, x21
  4103a4:	bl	41269c <_obstack_begin@@Base>
  4103a8:	add	x0, x19, #0xc8
  4103ac:	mov	x3, x20
  4103b0:	mov	x4, x21
  4103b4:	ldp	x20, x19, [sp, #32]
  4103b8:	ldr	x21, [sp, #16]
  4103bc:	mov	x1, xzr
  4103c0:	mov	x2, xzr
  4103c4:	ldp	x29, x30, [sp], #48
  4103c8:	b	41269c <_obstack_begin@@Base>
  4103cc:	stp	x29, x30, [sp, #-32]!
  4103d0:	str	x19, [sp, #16]
  4103d4:	mov	x19, x0
  4103d8:	add	x0, x0, #0x18
  4103dc:	mov	x1, xzr
  4103e0:	mov	x29, sp
  4103e4:	bl	412968 <_obstack_free@@Base>
  4103e8:	add	x0, x19, #0x70
  4103ec:	mov	x1, xzr
  4103f0:	bl	412968 <_obstack_free@@Base>
  4103f4:	add	x0, x19, #0xc8
  4103f8:	ldr	x19, [sp, #16]
  4103fc:	mov	x1, xzr
  410400:	ldp	x29, x30, [sp], #32
  410404:	b	412968 <_obstack_free@@Base>
  410408:	stp	x29, x30, [sp, #-48]!
  41040c:	stp	x22, x21, [sp, #16]
  410410:	stp	x20, x19, [sp, #32]
  410414:	mov	x29, sp
  410418:	mov	x20, x1
  41041c:	mov	x19, x0
  410420:	bl	4029c0 <fgetc@plt>
  410424:	cmn	w0, #0x1
  410428:	b.eq	410488 <ferror@plt+0xd5f8>  // b.none
  41042c:	mov	w22, w0
  410430:	add	x21, x20, #0x18
  410434:	b	41045c <ferror@plt+0xd5cc>
  410438:	add	x9, x8, #0x1
  41043c:	str	x9, [x20, #48]
  410440:	strb	w22, [x8]
  410444:	cbz	w22, 41047c <ferror@plt+0xd5ec>
  410448:	mov	x0, x19
  41044c:	bl	4029c0 <fgetc@plt>
  410450:	mov	w22, w0
  410454:	cmn	w0, #0x1
  410458:	b.eq	410488 <ferror@plt+0xd5f8>  // b.none
  41045c:	ldp	x8, x9, [x20, #48]
  410460:	cmp	x9, x8
  410464:	b.ne	410438 <ferror@plt+0xd5a8>  // b.any
  410468:	mov	w1, #0x1                   	// #1
  41046c:	mov	x0, x21
  410470:	bl	4127f0 <_obstack_newchunk@@Base>
  410474:	ldr	x8, [x20, #48]
  410478:	b	410438 <ferror@plt+0xd5a8>
  41047c:	mov	x0, x20
  410480:	bl	4105b0 <ferror@plt+0xd720>
  410484:	b	410448 <ferror@plt+0xd5b8>
  410488:	ldp	x9, x8, [x20, #40]
  41048c:	cmp	x8, x9
  410490:	b.eq	4104c4 <ferror@plt+0xd634>  // b.none
  410494:	ldr	x9, [x20, #56]
  410498:	cmp	x9, x8
  41049c:	b.ne	4104b0 <ferror@plt+0xd620>  // b.any
  4104a0:	add	x0, x20, #0x18
  4104a4:	mov	w1, #0x1                   	// #1
  4104a8:	bl	4127f0 <_obstack_newchunk@@Base>
  4104ac:	ldr	x8, [x20, #48]
  4104b0:	add	x9, x8, #0x1
  4104b4:	mov	x0, x20
  4104b8:	str	x9, [x20, #48]
  4104bc:	strb	wzr, [x8]
  4104c0:	bl	4105b0 <ferror@plt+0xd720>
  4104c4:	ldp	x8, x9, [x20, #136]
  4104c8:	sub	x9, x9, x8
  4104cc:	cmp	x9, #0x8
  4104d0:	b.cs	4104e4 <ferror@plt+0xd654>  // b.hs, b.nlast
  4104d4:	add	x0, x20, #0x70
  4104d8:	mov	w1, #0x8                   	// #8
  4104dc:	bl	4127f0 <_obstack_newchunk@@Base>
  4104e0:	ldr	x8, [x20, #136]
  4104e4:	str	xzr, [x8]
  4104e8:	ldp	x8, x9, [x20, #128]
  4104ec:	add	x9, x9, #0x8
  4104f0:	cmp	x9, x8
  4104f4:	str	x9, [x20, #136]
  4104f8:	b.ne	410508 <ferror@plt+0xd678>  // b.any
  4104fc:	ldrb	w10, [x20, #192]
  410500:	orr	w10, w10, #0x2
  410504:	strb	w10, [x20, #192]
  410508:	ldr	x11, [x20, #160]
  41050c:	ldr	x12, [x20, #120]
  410510:	ldr	x10, [x20, #144]
  410514:	add	x9, x11, x9
  410518:	bic	x11, x9, x11
  41051c:	sub	x9, x11, x12
  410520:	sub	x12, x10, x12
  410524:	cmp	x9, x12
  410528:	str	x11, [x20, #136]
  41052c:	b.ls	410538 <ferror@plt+0xd6a8>  // b.plast
  410530:	mov	x11, x10
  410534:	str	x10, [x20, #136]
  410538:	ldp	x9, x10, [x20, #216]
  41053c:	str	x11, [x20, #128]
  410540:	str	x8, [x20, #8]
  410544:	cmp	x10, x9
  410548:	b.ne	410558 <ferror@plt+0xd6c8>  // b.any
  41054c:	ldrb	w8, [x20, #280]
  410550:	orr	w8, w8, #0x2
  410554:	strb	w8, [x20, #280]
  410558:	ldr	x11, [x20, #248]
  41055c:	ldr	x12, [x20, #208]
  410560:	ldr	x8, [x20, #232]
  410564:	add	x10, x11, x10
  410568:	bic	x10, x10, x11
  41056c:	sub	x11, x10, x12
  410570:	sub	x12, x8, x12
  410574:	cmp	x11, x12
  410578:	str	x10, [x20, #224]
  41057c:	b.ls	410588 <ferror@plt+0xd6f8>  // b.plast
  410580:	mov	x10, x8
  410584:	str	x8, [x20, #224]
  410588:	mov	x0, x19
  41058c:	str	x10, [x20, #216]
  410590:	str	x9, [x20, #16]
  410594:	bl	402e90 <ferror@plt>
  410598:	ldp	x20, x19, [sp, #32]
  41059c:	ldp	x22, x21, [sp, #16]
  4105a0:	cmp	w0, #0x0
  4105a4:	cset	w0, eq  // eq = none
  4105a8:	ldp	x29, x30, [sp], #48
  4105ac:	ret
  4105b0:	sub	sp, sp, #0x30
  4105b4:	stp	x29, x30, [sp, #16]
  4105b8:	stp	x20, x19, [sp, #32]
  4105bc:	ldp	x20, x8, [x0, #40]
  4105c0:	mov	x19, x0
  4105c4:	add	x29, sp, #0x10
  4105c8:	mvn	x9, x20
  4105cc:	add	x9, x8, x9
  4105d0:	cmp	x8, x20
  4105d4:	str	x9, [sp, #8]
  4105d8:	b.ne	4105e8 <ferror@plt+0xd758>  // b.any
  4105dc:	ldrb	w9, [x19, #104]
  4105e0:	orr	w9, w9, #0x2
  4105e4:	strb	w9, [x19, #104]
  4105e8:	ldr	x9, [x19, #72]
  4105ec:	ldr	x11, [x19, #32]
  4105f0:	ldr	x10, [x19, #56]
  4105f4:	add	x8, x9, x8
  4105f8:	bic	x9, x8, x9
  4105fc:	sub	x8, x9, x11
  410600:	sub	x11, x10, x11
  410604:	cmp	x8, x11
  410608:	str	x9, [x19, #48]
  41060c:	b.ls	410618 <ferror@plt+0xd788>  // b.plast
  410610:	mov	x9, x10
  410614:	str	x10, [x19, #48]
  410618:	ldp	x8, x10, [x19, #136]
  41061c:	str	x9, [x19, #40]
  410620:	sub	x10, x10, x8
  410624:	cmp	x10, #0x8
  410628:	b.cs	41063c <ferror@plt+0xd7ac>  // b.hs, b.nlast
  41062c:	add	x0, x19, #0x70
  410630:	mov	w1, #0x8                   	// #8
  410634:	bl	4127f0 <_obstack_newchunk@@Base>
  410638:	ldr	x8, [x19, #136]
  41063c:	str	x20, [x8]
  410640:	ldp	x8, x10, [x19, #224]
  410644:	ldr	x9, [x19, #136]
  410648:	sub	x10, x10, x8
  41064c:	add	x9, x9, #0x8
  410650:	cmp	x10, #0x7
  410654:	str	x9, [x19, #136]
  410658:	b.hi	41066c <ferror@plt+0xd7dc>  // b.pmore
  41065c:	add	x0, x19, #0xc8
  410660:	mov	w1, #0x8                   	// #8
  410664:	bl	4127f0 <_obstack_newchunk@@Base>
  410668:	ldr	x8, [x19, #224]
  41066c:	ldr	x9, [sp, #8]
  410670:	str	x9, [x8]
  410674:	ldr	x8, [x19, #224]
  410678:	ldr	x9, [x19]
  41067c:	add	x8, x8, #0x8
  410680:	add	x9, x9, #0x1
  410684:	str	x8, [x19, #224]
  410688:	str	x9, [x19]
  41068c:	ldp	x20, x19, [sp, #32]
  410690:	ldp	x29, x30, [sp, #16]
  410694:	add	sp, sp, #0x30
  410698:	ret
  41069c:	stp	x29, x30, [sp, #-16]!
  4106a0:	mov	x29, sp
  4106a4:	bl	402d40 <mkstemp@plt>
  4106a8:	ldp	x29, x30, [sp], #16
  4106ac:	b	410b54 <ferror@plt+0xdcc4>
  4106b0:	stp	x29, x30, [sp, #-32]!
  4106b4:	str	x19, [sp, #16]
  4106b8:	mov	x29, sp
  4106bc:	mov	w19, w1
  4106c0:	bl	402af0 <mkostemp@plt>
  4106c4:	mov	w1, w19
  4106c8:	ldr	x19, [sp, #16]
  4106cc:	ldp	x29, x30, [sp], #32
  4106d0:	b	412d3c <_obstack_memory_used@@Base+0x328>
  4106d4:	ldrb	w8, [x0]
  4106d8:	ldrb	w9, [x1]
  4106dc:	cmp	w8, #0x2d
  4106e0:	b.ne	4107e0 <ferror@plt+0xd950>  // b.any
  4106e4:	ldrb	w8, [x0, #1]!
  4106e8:	subs	w11, w8, #0x30
  4106ec:	b.eq	4106e4 <ferror@plt+0xd854>  // b.none
  4106f0:	cmp	w8, w3
  4106f4:	b.eq	4106e4 <ferror@plt+0xd854>  // b.none
  4106f8:	cmp	w9, #0x2d
  4106fc:	b.ne	410960 <ferror@plt+0xdad0>  // b.any
  410700:	ldrb	w9, [x1, #1]!
  410704:	cmp	w9, #0x30
  410708:	b.eq	410700 <ferror@plt+0xd870>  // b.none
  41070c:	cmp	w9, w3
  410710:	b.eq	410700 <ferror@plt+0xd870>  // b.none
  410714:	b	410734 <ferror@plt+0xd8a4>
  410718:	ldrb	w8, [x0, #1]!
  41071c:	cmp	w8, w3
  410720:	b.eq	410718 <ferror@plt+0xd888>  // b.none
  410724:	ldrb	w9, [x1, #1]!
  410728:	cmp	w9, w3
  41072c:	b.eq	410724 <ferror@plt+0xd894>  // b.none
  410730:	sub	w11, w8, #0x30
  410734:	cmp	w11, #0xa
  410738:	cset	w10, cc  // cc = lo, ul, last
  41073c:	cmp	w11, #0x9
  410740:	b.hi	41074c <ferror@plt+0xd8bc>  // b.pmore
  410744:	cmp	w9, w8
  410748:	b.eq	410718 <ferror@plt+0xd888>  // b.none
  41074c:	cmp	w8, w2
  410750:	sub	w11, w9, #0x30
  410754:	cset	w12, ne  // ne = any
  410758:	cmp	w11, #0xa
  41075c:	cset	w13, cc  // cc = lo, ul, last
  410760:	cmp	w9, w2
  410764:	cset	w14, eq  // eq = none
  410768:	eor	w10, w10, #0x1
  41076c:	and	w10, w14, w10
  410770:	tbnz	w10, #0, 4109cc <ferror@plt+0xdb3c>
  410774:	orr	w10, w13, w12
  410778:	tbz	w10, #0, 4109cc <ferror@plt+0xdb3c>
  41077c:	sub	w10, w8, #0x30
  410780:	cmp	w10, #0x9
  410784:	b.hi	410a4c <ferror@plt+0xdbbc>  // b.pmore
  410788:	mov	x10, xzr
  41078c:	ldrb	w12, [x0, #1]!
  410790:	cmp	w12, w3
  410794:	b.eq	41078c <ferror@plt+0xd8fc>  // b.none
  410798:	sub	w12, w12, #0x30
  41079c:	cmp	w12, #0xa
  4107a0:	add	x10, x10, #0x1
  4107a4:	b.cc	41078c <ferror@plt+0xd8fc>  // b.lo, b.ul, b.last
  4107a8:	cmp	w11, #0x9
  4107ac:	b.hi	410a58 <ferror@plt+0xdbc8>  // b.pmore
  4107b0:	mov	x11, xzr
  4107b4:	ldrb	w12, [x1, #1]!
  4107b8:	cmp	w12, w3
  4107bc:	b.eq	4107b4 <ferror@plt+0xd924>  // b.none
  4107c0:	sub	w12, w12, #0x30
  4107c4:	cmp	w12, #0xa
  4107c8:	add	x11, x11, #0x1
  4107cc:	b.cc	4107b4 <ferror@plt+0xd924>  // b.lo, b.ul, b.last
  4107d0:	cmp	x10, x11
  4107d4:	b.ne	410a64 <ferror@plt+0xdbd4>  // b.any
  4107d8:	sub	w8, w9, w8
  4107dc:	b	410920 <ferror@plt+0xda90>
  4107e0:	cmp	w9, #0x2d
  4107e4:	b.ne	410830 <ferror@plt+0xd9a0>  // b.any
  4107e8:	ldrb	w9, [x1, #1]!
  4107ec:	cmp	w9, #0x30
  4107f0:	b.eq	4107e8 <ferror@plt+0xd958>  // b.none
  4107f4:	cmp	w9, w3
  4107f8:	b.eq	4107e8 <ferror@plt+0xd958>  // b.none
  4107fc:	cmp	w9, w2
  410800:	b.ne	410818 <ferror@plt+0xd988>  // b.any
  410804:	mov	w10, #0x1                   	// #1
  410808:	ldrb	w9, [x1, x10]
  41080c:	add	x10, x10, #0x1
  410810:	cmp	w9, #0x30
  410814:	b.eq	410808 <ferror@plt+0xd978>  // b.none
  410818:	sub	w9, w9, #0x30
  41081c:	cmp	w9, #0xa
  410820:	b.cs	410930 <ferror@plt+0xdaa0>  // b.hs, b.nlast
  410824:	mov	w0, #0x1                   	// #1
  410828:	ret
  41082c:	ldrb	w8, [x0, #1]!
  410830:	cmp	w8, #0x30
  410834:	b.eq	41082c <ferror@plt+0xd99c>  // b.none
  410838:	cmp	w8, w3
  41083c:	b.eq	41082c <ferror@plt+0xd99c>  // b.none
  410840:	b	410848 <ferror@plt+0xd9b8>
  410844:	ldrb	w9, [x1, #1]!
  410848:	cmp	w9, #0x30
  41084c:	b.eq	410844 <ferror@plt+0xd9b4>  // b.none
  410850:	cmp	w9, w3
  410854:	b.eq	410844 <ferror@plt+0xd9b4>  // b.none
  410858:	b	410874 <ferror@plt+0xd9e4>
  41085c:	ldrb	w8, [x0, #1]!
  410860:	cmp	w8, w3
  410864:	b.eq	41085c <ferror@plt+0xd9cc>  // b.none
  410868:	ldrb	w9, [x1, #1]!
  41086c:	cmp	w9, w3
  410870:	b.eq	410868 <ferror@plt+0xd9d8>  // b.none
  410874:	sub	w11, w8, #0x30
  410878:	cmp	w11, #0xa
  41087c:	cset	w10, cc  // cc = lo, ul, last
  410880:	cmp	w11, #0x9
  410884:	b.hi	410890 <ferror@plt+0xda00>  // b.pmore
  410888:	cmp	w8, w9
  41088c:	b.eq	41085c <ferror@plt+0xd9cc>  // b.none
  410890:	cmp	w8, w2
  410894:	sub	w11, w9, #0x30
  410898:	cset	w12, ne  // ne = any
  41089c:	cmp	w11, #0xa
  4108a0:	cset	w13, cc  // cc = lo, ul, last
  4108a4:	cmp	w9, w2
  4108a8:	cset	w14, eq  // eq = none
  4108ac:	eor	w10, w10, #0x1
  4108b0:	and	w10, w14, w10
  4108b4:	tbnz	w10, #0, 410a0c <ferror@plt+0xdb7c>
  4108b8:	orr	w10, w13, w12
  4108bc:	tbz	w10, #0, 410a0c <ferror@plt+0xdb7c>
  4108c0:	sub	w10, w8, #0x30
  4108c4:	cmp	w10, #0x9
  4108c8:	b.hi	410a70 <ferror@plt+0xdbe0>  // b.pmore
  4108cc:	mov	x10, xzr
  4108d0:	ldrb	w12, [x0, #1]!
  4108d4:	cmp	w12, w3
  4108d8:	b.eq	4108d0 <ferror@plt+0xda40>  // b.none
  4108dc:	sub	w12, w12, #0x30
  4108e0:	cmp	w12, #0xa
  4108e4:	add	x10, x10, #0x1
  4108e8:	b.cc	4108d0 <ferror@plt+0xda40>  // b.lo, b.ul, b.last
  4108ec:	cmp	w11, #0x9
  4108f0:	b.hi	410a7c <ferror@plt+0xdbec>  // b.pmore
  4108f4:	mov	x11, xzr
  4108f8:	ldrb	w12, [x1, #1]!
  4108fc:	cmp	w12, w3
  410900:	b.eq	4108f8 <ferror@plt+0xda68>  // b.none
  410904:	sub	w12, w12, #0x30
  410908:	cmp	w12, #0xa
  41090c:	add	x11, x11, #0x1
  410910:	b.cc	4108f8 <ferror@plt+0xda68>  // b.lo, b.ul, b.last
  410914:	cmp	x10, x11
  410918:	b.ne	410a88 <ferror@plt+0xdbf8>  // b.any
  41091c:	sub	w8, w8, w9
  410920:	cmp	x10, #0x0
  410924:	csel	w0, wzr, w8, eq  // eq = none
  410928:	ret
  41092c:	ldrb	w8, [x0, #1]!
  410930:	cmp	w8, #0x30
  410934:	b.eq	41092c <ferror@plt+0xda9c>  // b.none
  410938:	cmp	w8, w3
  41093c:	b.eq	41092c <ferror@plt+0xda9c>  // b.none
  410940:	cmp	w8, w2
  410944:	b.ne	410958 <ferror@plt+0xdac8>  // b.any
  410948:	add	x9, x0, #0x1
  41094c:	ldrb	w8, [x9], #1
  410950:	cmp	w8, #0x30
  410954:	b.eq	41094c <ferror@plt+0xdabc>  // b.none
  410958:	sub	w8, w8, #0x30
  41095c:	b	410b10 <ferror@plt+0xdc80>
  410960:	cmp	w8, w2
  410964:	b.ne	41097c <ferror@plt+0xdaec>  // b.any
  410968:	mov	w10, #0x1                   	// #1
  41096c:	ldrb	w8, [x0, x10]
  410970:	add	x10, x10, #0x1
  410974:	cmp	w8, #0x30
  410978:	b.eq	41096c <ferror@plt+0xdadc>  // b.none
  41097c:	sub	w8, w8, #0x30
  410980:	cmp	w8, #0xa
  410984:	b.cs	410994 <ferror@plt+0xdb04>  // b.hs, b.nlast
  410988:	mov	w0, #0xffffffff            	// #-1
  41098c:	ret
  410990:	ldrb	w9, [x1, #1]!
  410994:	cmp	w9, #0x30
  410998:	b.eq	410990 <ferror@plt+0xdb00>  // b.none
  41099c:	cmp	w9, w3
  4109a0:	b.eq	410990 <ferror@plt+0xdb00>  // b.none
  4109a4:	cmp	w9, w2
  4109a8:	b.ne	4109bc <ferror@plt+0xdb2c>  // b.any
  4109ac:	add	x8, x1, #0x1
  4109b0:	ldrb	w9, [x8], #1
  4109b4:	cmp	w9, #0x30
  4109b8:	b.eq	4109b0 <ferror@plt+0xdb20>  // b.none
  4109bc:	sub	w8, w9, #0x30
  4109c0:	cmp	w8, #0xa
  4109c4:	csetm	w0, cc  // cc = lo, ul, last
  4109c8:	ret
  4109cc:	cmp	w9, w2, uxtb
  4109d0:	b.ne	410a94 <ferror@plt+0xdc04>  // b.any
  4109d4:	add	x9, x1, #0x1
  4109d8:	cmp	w8, w2, uxtb
  4109dc:	b.ne	410b04 <ferror@plt+0xdc74>  // b.any
  4109e0:	add	x8, x0, #0x1
  4109e4:	ldrb	w10, [x9]
  4109e8:	ldrb	w11, [x8]
  4109ec:	subs	w0, w10, w11
  4109f0:	sub	w10, w10, #0x30
  4109f4:	b.ne	410ae8 <ferror@plt+0xdc58>  // b.any
  4109f8:	add	x9, x9, #0x1
  4109fc:	cmp	w10, #0xa
  410a00:	add	x8, x8, #0x1
  410a04:	b.cc	4109e4 <ferror@plt+0xdb54>  // b.lo, b.ul, b.last
  410a08:	b	410928 <ferror@plt+0xda98>
  410a0c:	cmp	w8, w2, uxtb
  410a10:	b.ne	410ab0 <ferror@plt+0xdc20>  // b.any
  410a14:	cmp	w9, w8
  410a18:	b.ne	410ad4 <ferror@plt+0xdc44>  // b.any
  410a1c:	add	x9, x0, #0x1
  410a20:	add	x8, x1, #0x1
  410a24:	ldrb	w10, [x9]
  410a28:	ldrb	w11, [x8]
  410a2c:	subs	w0, w10, w11
  410a30:	sub	w10, w10, #0x30
  410a34:	b.ne	410b1c <ferror@plt+0xdc8c>  // b.any
  410a38:	add	x9, x9, #0x1
  410a3c:	cmp	w10, #0xa
  410a40:	add	x8, x8, #0x1
  410a44:	b.cc	410a24 <ferror@plt+0xdb94>  // b.lo, b.ul, b.last
  410a48:	b	410928 <ferror@plt+0xda98>
  410a4c:	mov	x10, xzr
  410a50:	cmp	w11, #0x9
  410a54:	b.ls	4107b0 <ferror@plt+0xd920>  // b.plast
  410a58:	mov	x11, xzr
  410a5c:	cmp	x10, x11
  410a60:	b.eq	4107d8 <ferror@plt+0xd948>  // b.none
  410a64:	mov	w8, #0x1                   	// #1
  410a68:	cneg	w0, w8, cs  // cs = hs, nlast
  410a6c:	ret
  410a70:	mov	x10, xzr
  410a74:	cmp	w11, #0x9
  410a78:	b.ls	4108f4 <ferror@plt+0xda64>  // b.plast
  410a7c:	mov	x11, xzr
  410a80:	cmp	x10, x11
  410a84:	b.eq	41091c <ferror@plt+0xda8c>  // b.none
  410a88:	mov	w8, #0xffffffff            	// #-1
  410a8c:	cneg	w0, w8, cs  // cs = hs, nlast
  410a90:	ret
  410a94:	cmp	w8, w2, uxtb
  410a98:	b.ne	410b4c <ferror@plt+0xdcbc>  // b.any
  410a9c:	add	x8, x0, #0x1
  410aa0:	ldrb	w9, [x8], #1
  410aa4:	subs	w9, w9, #0x30
  410aa8:	b.eq	410aa0 <ferror@plt+0xdc10>  // b.none
  410aac:	b	410ac8 <ferror@plt+0xdc38>
  410ab0:	cmp	w9, w2, uxtb
  410ab4:	b.ne	410b4c <ferror@plt+0xdcbc>  // b.any
  410ab8:	add	x8, x1, #0x1
  410abc:	ldrb	w9, [x8], #1
  410ac0:	subs	w9, w9, #0x30
  410ac4:	b.eq	410abc <ferror@plt+0xdc2c>  // b.none
  410ac8:	cmp	w9, #0xa
  410acc:	csetm	w0, cc  // cc = lo, ul, last
  410ad0:	ret
  410ad4:	add	x9, x0, #0x1
  410ad8:	ldrb	w8, [x9], #1
  410adc:	subs	w8, w8, #0x30
  410ae0:	b.eq	410ad8 <ferror@plt+0xdc48>  // b.none
  410ae4:	b	410b10 <ferror@plt+0xdc80>
  410ae8:	cmp	w10, #0x9
  410aec:	sub	w11, w11, #0x30
  410af0:	b.hi	410afc <ferror@plt+0xdc6c>  // b.pmore
  410af4:	cmp	w11, #0x9
  410af8:	b.ls	410928 <ferror@plt+0xda98>  // b.plast
  410afc:	cmp	w10, #0xa
  410b00:	b.cs	410b44 <ferror@plt+0xdcb4>  // b.hs, b.nlast
  410b04:	ldrb	w8, [x9], #1
  410b08:	subs	w8, w8, #0x30
  410b0c:	b.eq	410b04 <ferror@plt+0xdc74>  // b.none
  410b10:	cmp	w8, #0xa
  410b14:	cset	w0, cc  // cc = lo, ul, last
  410b18:	ret
  410b1c:	cmp	w10, #0x9
  410b20:	sub	w11, w11, #0x30
  410b24:	b.hi	410b30 <ferror@plt+0xdca0>  // b.pmore
  410b28:	cmp	w11, #0x9
  410b2c:	b.ls	410928 <ferror@plt+0xda98>  // b.plast
  410b30:	cmp	w10, #0xa
  410b34:	b.cc	410ad8 <ferror@plt+0xdc48>  // b.lo, b.ul, b.last
  410b38:	cmp	w11, #0xa
  410b3c:	b.cc	410abc <ferror@plt+0xdc2c>  // b.lo, b.ul, b.last
  410b40:	b	410b4c <ferror@plt+0xdcbc>
  410b44:	cmp	w11, #0xa
  410b48:	b.cc	410aa0 <ferror@plt+0xdc10>  // b.lo, b.ul, b.last
  410b4c:	mov	w0, wzr
  410b50:	ret
  410b54:	stp	x29, x30, [sp, #-48]!
  410b58:	stp	x20, x19, [sp, #32]
  410b5c:	mov	w19, w0
  410b60:	cmp	w0, #0x2
  410b64:	stp	x22, x21, [sp, #16]
  410b68:	mov	x29, sp
  410b6c:	b.hi	410ba8 <ferror@plt+0xdd18>  // b.pmore
  410b70:	mov	w0, w19
  410b74:	bl	413078 <_obstack_memory_used@@Base+0x664>
  410b78:	mov	w20, w0
  410b7c:	bl	402e00 <__errno_location@plt>
  410b80:	ldr	w22, [x0]
  410b84:	mov	x21, x0
  410b88:	mov	w0, w19
  410b8c:	bl	402a70 <close@plt>
  410b90:	str	w22, [x21]
  410b94:	mov	w0, w20
  410b98:	ldp	x20, x19, [sp, #32]
  410b9c:	ldp	x22, x21, [sp, #16]
  410ba0:	ldp	x29, x30, [sp], #48
  410ba4:	ret
  410ba8:	mov	w0, w19
  410bac:	ldp	x20, x19, [sp, #32]
  410bb0:	ldp	x22, x21, [sp, #16]
  410bb4:	ldp	x29, x30, [sp], #48
  410bb8:	ret
  410bbc:	sub	sp, sp, #0x50
  410bc0:	str	x21, [sp, #48]
  410bc4:	stp	x20, x19, [sp, #64]
  410bc8:	mov	x21, x5
  410bcc:	mov	x20, x4
  410bd0:	mov	x5, x3
  410bd4:	mov	x4, x2
  410bd8:	mov	x19, x0
  410bdc:	stp	x29, x30, [sp, #32]
  410be0:	add	x29, sp, #0x20
  410be4:	cbz	x1, 410c04 <ferror@plt+0xdd74>
  410be8:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  410bec:	mov	x3, x1
  410bf0:	add	x2, x2, #0xed6
  410bf4:	mov	w1, #0x1                   	// #1
  410bf8:	mov	x0, x19
  410bfc:	bl	402b90 <__fprintf_chk@plt>
  410c00:	b	410c20 <ferror@plt+0xdd90>
  410c04:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  410c08:	add	x2, x2, #0xee2
  410c0c:	mov	w1, #0x1                   	// #1
  410c10:	mov	x0, x19
  410c14:	mov	x3, x4
  410c18:	mov	x4, x5
  410c1c:	bl	402b90 <__fprintf_chk@plt>
  410c20:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410c24:	add	x1, x1, #0xee9
  410c28:	mov	w2, #0x5                   	// #5
  410c2c:	mov	x0, xzr
  410c30:	bl	402d70 <dcgettext@plt>
  410c34:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x35ec>
  410c38:	mov	x3, x0
  410c3c:	add	x2, x2, #0x1b4
  410c40:	mov	w1, #0x1                   	// #1
  410c44:	mov	w4, #0x7e3                 	// #2019
  410c48:	mov	x0, x19
  410c4c:	bl	402b90 <__fprintf_chk@plt>
  410c50:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410c54:	add	x1, x1, #0xeed
  410c58:	mov	w2, #0x5                   	// #5
  410c5c:	mov	x0, xzr
  410c60:	bl	402d70 <dcgettext@plt>
  410c64:	mov	x1, x19
  410c68:	bl	402d80 <fputs_unlocked@plt>
  410c6c:	cmp	x21, #0x9
  410c70:	b.hi	410cc4 <ferror@plt+0xde34>  // b.pmore
  410c74:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  410c78:	add	x8, x8, #0xecc
  410c7c:	adr	x9, 410c8c <ferror@plt+0xddfc>
  410c80:	ldrb	w10, [x8, x21]
  410c84:	add	x9, x9, x10, lsl #2
  410c88:	br	x9
  410c8c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410c90:	add	x1, x1, #0xfb9
  410c94:	mov	w2, #0x5                   	// #5
  410c98:	mov	x0, xzr
  410c9c:	bl	402d70 <dcgettext@plt>
  410ca0:	ldr	x3, [x20]
  410ca4:	mov	x2, x0
  410ca8:	mov	x0, x19
  410cac:	ldp	x20, x19, [sp, #64]
  410cb0:	ldr	x21, [sp, #48]
  410cb4:	ldp	x29, x30, [sp, #32]
  410cb8:	mov	w1, #0x1                   	// #1
  410cbc:	add	sp, sp, #0x50
  410cc0:	b	402b90 <__fprintf_chk@plt>
  410cc4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410cc8:	add	x1, x1, #0xf8
  410ccc:	b	410e28 <ferror@plt+0xdf98>
  410cd0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410cd4:	add	x1, x1, #0xfc9
  410cd8:	mov	w2, #0x5                   	// #5
  410cdc:	mov	x0, xzr
  410ce0:	bl	402d70 <dcgettext@plt>
  410ce4:	ldp	x3, x4, [x20]
  410ce8:	mov	x2, x0
  410cec:	mov	x0, x19
  410cf0:	ldp	x20, x19, [sp, #64]
  410cf4:	ldr	x21, [sp, #48]
  410cf8:	ldp	x29, x30, [sp, #32]
  410cfc:	mov	w1, #0x1                   	// #1
  410d00:	add	sp, sp, #0x50
  410d04:	b	402b90 <__fprintf_chk@plt>
  410d08:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410d0c:	add	x1, x1, #0xfe0
  410d10:	mov	w2, #0x5                   	// #5
  410d14:	mov	x0, xzr
  410d18:	bl	402d70 <dcgettext@plt>
  410d1c:	ldp	x3, x4, [x20]
  410d20:	ldr	x5, [x20, #16]
  410d24:	mov	x2, x0
  410d28:	mov	x0, x19
  410d2c:	ldp	x20, x19, [sp, #64]
  410d30:	ldr	x21, [sp, #48]
  410d34:	ldp	x29, x30, [sp, #32]
  410d38:	mov	w1, #0x1                   	// #1
  410d3c:	add	sp, sp, #0x50
  410d40:	b	402b90 <__fprintf_chk@plt>
  410d44:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x25ec>
  410d48:	add	x1, x1, #0xffc
  410d4c:	mov	w2, #0x5                   	// #5
  410d50:	mov	x0, xzr
  410d54:	bl	402d70 <dcgettext@plt>
  410d58:	ldp	x3, x4, [x20]
  410d5c:	ldp	x5, x6, [x20, #16]
  410d60:	mov	x2, x0
  410d64:	mov	x0, x19
  410d68:	ldp	x20, x19, [sp, #64]
  410d6c:	ldr	x21, [sp, #48]
  410d70:	ldp	x29, x30, [sp, #32]
  410d74:	mov	w1, #0x1                   	// #1
  410d78:	add	sp, sp, #0x50
  410d7c:	b	402b90 <__fprintf_chk@plt>
  410d80:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410d84:	add	x1, x1, #0x1c
  410d88:	mov	w2, #0x5                   	// #5
  410d8c:	mov	x0, xzr
  410d90:	bl	402d70 <dcgettext@plt>
  410d94:	ldp	x3, x4, [x20]
  410d98:	ldp	x5, x6, [x20, #16]
  410d9c:	ldr	x7, [x20, #32]
  410da0:	mov	x2, x0
  410da4:	mov	x0, x19
  410da8:	ldp	x20, x19, [sp, #64]
  410dac:	ldr	x21, [sp, #48]
  410db0:	ldp	x29, x30, [sp, #32]
  410db4:	mov	w1, #0x1                   	// #1
  410db8:	add	sp, sp, #0x50
  410dbc:	b	402b90 <__fprintf_chk@plt>
  410dc0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410dc4:	add	x1, x1, #0x40
  410dc8:	mov	w2, #0x5                   	// #5
  410dcc:	mov	x0, xzr
  410dd0:	bl	402d70 <dcgettext@plt>
  410dd4:	ldp	x3, x4, [x20]
  410dd8:	ldp	x5, x6, [x20, #16]
  410ddc:	ldp	x7, x8, [x20, #32]
  410de0:	mov	x2, x0
  410de4:	b	410e14 <ferror@plt+0xdf84>
  410de8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410dec:	add	x1, x1, #0x68
  410df0:	mov	w2, #0x5                   	// #5
  410df4:	mov	x0, xzr
  410df8:	bl	402d70 <dcgettext@plt>
  410dfc:	ldr	x9, [x20, #48]
  410e00:	ldp	x3, x4, [x20]
  410e04:	ldp	x5, x6, [x20, #16]
  410e08:	ldp	x7, x8, [x20, #32]
  410e0c:	mov	x2, x0
  410e10:	str	x9, [sp, #8]
  410e14:	mov	w1, #0x1                   	// #1
  410e18:	str	x8, [sp]
  410e1c:	b	410e8c <ferror@plt+0xdffc>
  410e20:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410e24:	add	x1, x1, #0xc4
  410e28:	mov	w2, #0x5                   	// #5
  410e2c:	mov	x0, xzr
  410e30:	bl	402d70 <dcgettext@plt>
  410e34:	ldp	x8, x9, [x20, #56]
  410e38:	ldp	x3, x4, [x20]
  410e3c:	ldp	x5, x6, [x20, #16]
  410e40:	ldr	x7, [x20, #32]
  410e44:	ldur	q0, [x20, #40]
  410e48:	mov	x2, x0
  410e4c:	str	x9, [sp, #24]
  410e50:	b	410e80 <ferror@plt+0xdff0>
  410e54:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  410e58:	add	x1, x1, #0x94
  410e5c:	mov	w2, #0x5                   	// #5
  410e60:	mov	x0, xzr
  410e64:	bl	402d70 <dcgettext@plt>
  410e68:	ldp	x3, x4, [x20]
  410e6c:	ldp	x5, x6, [x20, #16]
  410e70:	ldr	x7, [x20, #32]
  410e74:	ldur	q0, [x20, #40]
  410e78:	ldr	x8, [x20, #56]
  410e7c:	mov	x2, x0
  410e80:	str	x8, [sp, #16]
  410e84:	mov	w1, #0x1                   	// #1
  410e88:	str	q0, [sp]
  410e8c:	mov	x0, x19
  410e90:	bl	402b90 <__fprintf_chk@plt>
  410e94:	ldp	x20, x19, [sp, #64]
  410e98:	ldr	x21, [sp, #48]
  410e9c:	ldp	x29, x30, [sp, #32]
  410ea0:	add	sp, sp, #0x50
  410ea4:	ret
  410ea8:	mov	x8, xzr
  410eac:	ldr	x9, [x4, x8, lsl #3]
  410eb0:	add	x8, x8, #0x1
  410eb4:	cbnz	x9, 410eac <ferror@plt+0xe01c>
  410eb8:	sub	x5, x8, #0x1
  410ebc:	b	410bbc <ferror@plt+0xdd2c>
  410ec0:	sub	sp, sp, #0x60
  410ec4:	stp	x29, x30, [sp, #80]
  410ec8:	ldr	w9, [x4, #24]
  410ecc:	add	x29, sp, #0x50
  410ed0:	mov	w8, w9
  410ed4:	tbz	w9, #31, 410f08 <ferror@plt+0xe078>
  410ed8:	add	w8, w9, #0x8
  410edc:	cmn	w9, #0x8
  410ee0:	str	w8, [x4, #24]
  410ee4:	b.gt	410f08 <ferror@plt+0xe078>
  410ee8:	ldr	x10, [x4, #8]
  410eec:	sxtw	x9, w9
  410ef0:	add	x9, x10, x9
  410ef4:	ldr	x9, [x9]
  410ef8:	str	x9, [sp]
  410efc:	cbnz	x9, 410f20 <ferror@plt+0xe090>
  410f00:	mov	x5, xzr
  410f04:	b	4111c0 <ferror@plt+0xe330>
  410f08:	ldr	x9, [x4]
  410f0c:	add	x10, x9, #0x8
  410f10:	str	x10, [x4]
  410f14:	ldr	x9, [x9]
  410f18:	str	x9, [sp]
  410f1c:	cbz	x9, 410f00 <ferror@plt+0xe070>
  410f20:	tbnz	w8, #31, 410f2c <ferror@plt+0xe09c>
  410f24:	mov	w9, w8
  410f28:	b	410f58 <ferror@plt+0xe0c8>
  410f2c:	add	w9, w8, #0x8
  410f30:	cmn	w8, #0x8
  410f34:	str	w9, [x4, #24]
  410f38:	b.gt	410f58 <ferror@plt+0xe0c8>
  410f3c:	ldr	x10, [x4, #8]
  410f40:	add	x8, x10, w8, sxtw
  410f44:	ldr	x8, [x8]
  410f48:	str	x8, [sp, #8]
  410f4c:	cbnz	x8, 410f70 <ferror@plt+0xe0e0>
  410f50:	mov	w5, #0x1                   	// #1
  410f54:	b	4111c0 <ferror@plt+0xe330>
  410f58:	ldr	x8, [x4]
  410f5c:	add	x10, x8, #0x8
  410f60:	str	x10, [x4]
  410f64:	ldr	x8, [x8]
  410f68:	str	x8, [sp, #8]
  410f6c:	cbz	x8, 410f50 <ferror@plt+0xe0c0>
  410f70:	tbnz	w9, #31, 410f7c <ferror@plt+0xe0ec>
  410f74:	mov	w8, w9
  410f78:	b	410fa8 <ferror@plt+0xe118>
  410f7c:	add	w8, w9, #0x8
  410f80:	cmn	w9, #0x8
  410f84:	str	w8, [x4, #24]
  410f88:	b.gt	410fa8 <ferror@plt+0xe118>
  410f8c:	ldr	x10, [x4, #8]
  410f90:	add	x9, x10, w9, sxtw
  410f94:	ldr	x9, [x9]
  410f98:	str	x9, [sp, #16]
  410f9c:	cbnz	x9, 410fc0 <ferror@plt+0xe130>
  410fa0:	mov	w5, #0x2                   	// #2
  410fa4:	b	4111c0 <ferror@plt+0xe330>
  410fa8:	ldr	x9, [x4]
  410fac:	add	x10, x9, #0x8
  410fb0:	str	x10, [x4]
  410fb4:	ldr	x9, [x9]
  410fb8:	str	x9, [sp, #16]
  410fbc:	cbz	x9, 410fa0 <ferror@plt+0xe110>
  410fc0:	tbnz	w8, #31, 410fcc <ferror@plt+0xe13c>
  410fc4:	mov	w9, w8
  410fc8:	b	410ff8 <ferror@plt+0xe168>
  410fcc:	add	w9, w8, #0x8
  410fd0:	cmn	w8, #0x8
  410fd4:	str	w9, [x4, #24]
  410fd8:	b.gt	410ff8 <ferror@plt+0xe168>
  410fdc:	ldr	x10, [x4, #8]
  410fe0:	add	x8, x10, w8, sxtw
  410fe4:	ldr	x8, [x8]
  410fe8:	str	x8, [sp, #24]
  410fec:	cbnz	x8, 411010 <ferror@plt+0xe180>
  410ff0:	mov	w5, #0x3                   	// #3
  410ff4:	b	4111c0 <ferror@plt+0xe330>
  410ff8:	ldr	x8, [x4]
  410ffc:	add	x10, x8, #0x8
  411000:	str	x10, [x4]
  411004:	ldr	x8, [x8]
  411008:	str	x8, [sp, #24]
  41100c:	cbz	x8, 410ff0 <ferror@plt+0xe160>
  411010:	tbnz	w9, #31, 41101c <ferror@plt+0xe18c>
  411014:	mov	w8, w9
  411018:	b	411048 <ferror@plt+0xe1b8>
  41101c:	add	w8, w9, #0x8
  411020:	cmn	w9, #0x8
  411024:	str	w8, [x4, #24]
  411028:	b.gt	411048 <ferror@plt+0xe1b8>
  41102c:	ldr	x10, [x4, #8]
  411030:	add	x9, x10, w9, sxtw
  411034:	ldr	x9, [x9]
  411038:	str	x9, [sp, #32]
  41103c:	cbnz	x9, 411060 <ferror@plt+0xe1d0>
  411040:	mov	w5, #0x4                   	// #4
  411044:	b	4111c0 <ferror@plt+0xe330>
  411048:	ldr	x9, [x4]
  41104c:	add	x10, x9, #0x8
  411050:	str	x10, [x4]
  411054:	ldr	x9, [x9]
  411058:	str	x9, [sp, #32]
  41105c:	cbz	x9, 411040 <ferror@plt+0xe1b0>
  411060:	tbnz	w8, #31, 41106c <ferror@plt+0xe1dc>
  411064:	mov	w9, w8
  411068:	b	411088 <ferror@plt+0xe1f8>
  41106c:	add	w9, w8, #0x8
  411070:	cmn	w8, #0x8
  411074:	str	w9, [x4, #24]
  411078:	b.gt	411088 <ferror@plt+0xe1f8>
  41107c:	ldr	x10, [x4, #8]
  411080:	add	x8, x10, w8, sxtw
  411084:	b	411094 <ferror@plt+0xe204>
  411088:	ldr	x8, [x4]
  41108c:	add	x10, x8, #0x8
  411090:	str	x10, [x4]
  411094:	ldr	x8, [x8]
  411098:	str	x8, [sp, #40]
  41109c:	cbz	x8, 4110ac <ferror@plt+0xe21c>
  4110a0:	tbnz	w9, #31, 4110b4 <ferror@plt+0xe224>
  4110a4:	mov	w8, w9
  4110a8:	b	4110d0 <ferror@plt+0xe240>
  4110ac:	mov	w5, #0x5                   	// #5
  4110b0:	b	4111c0 <ferror@plt+0xe330>
  4110b4:	add	w8, w9, #0x8
  4110b8:	cmn	w9, #0x8
  4110bc:	str	w8, [x4, #24]
  4110c0:	b.gt	4110d0 <ferror@plt+0xe240>
  4110c4:	ldr	x10, [x4, #8]
  4110c8:	add	x9, x10, w9, sxtw
  4110cc:	b	4110dc <ferror@plt+0xe24c>
  4110d0:	ldr	x9, [x4]
  4110d4:	add	x10, x9, #0x8
  4110d8:	str	x10, [x4]
  4110dc:	ldr	x9, [x9]
  4110e0:	str	x9, [sp, #48]
  4110e4:	cbz	x9, 4110f4 <ferror@plt+0xe264>
  4110e8:	tbnz	w8, #31, 4110fc <ferror@plt+0xe26c>
  4110ec:	mov	w9, w8
  4110f0:	b	411118 <ferror@plt+0xe288>
  4110f4:	mov	w5, #0x6                   	// #6
  4110f8:	b	4111c0 <ferror@plt+0xe330>
  4110fc:	add	w9, w8, #0x8
  411100:	cmn	w8, #0x8
  411104:	str	w9, [x4, #24]
  411108:	b.gt	411118 <ferror@plt+0xe288>
  41110c:	ldr	x10, [x4, #8]
  411110:	add	x8, x10, w8, sxtw
  411114:	b	411124 <ferror@plt+0xe294>
  411118:	ldr	x8, [x4]
  41111c:	add	x10, x8, #0x8
  411120:	str	x10, [x4]
  411124:	ldr	x8, [x8]
  411128:	str	x8, [sp, #56]
  41112c:	cbz	x8, 41113c <ferror@plt+0xe2ac>
  411130:	tbnz	w9, #31, 411144 <ferror@plt+0xe2b4>
  411134:	mov	w8, w9
  411138:	b	411160 <ferror@plt+0xe2d0>
  41113c:	mov	w5, #0x7                   	// #7
  411140:	b	4111c0 <ferror@plt+0xe330>
  411144:	add	w8, w9, #0x8
  411148:	cmn	w9, #0x8
  41114c:	str	w8, [x4, #24]
  411150:	b.gt	411160 <ferror@plt+0xe2d0>
  411154:	ldr	x10, [x4, #8]
  411158:	add	x9, x10, w9, sxtw
  41115c:	b	41116c <ferror@plt+0xe2dc>
  411160:	ldr	x9, [x4]
  411164:	add	x10, x9, #0x8
  411168:	str	x10, [x4]
  41116c:	ldr	x9, [x9]
  411170:	str	x9, [sp, #64]
  411174:	cbz	x9, 4111bc <ferror@plt+0xe32c>
  411178:	tbz	w8, #31, 411198 <ferror@plt+0xe308>
  41117c:	add	w9, w8, #0x8
  411180:	cmn	w8, #0x8
  411184:	str	w9, [x4, #24]
  411188:	b.gt	411198 <ferror@plt+0xe308>
  41118c:	ldr	x9, [x4, #8]
  411190:	add	x8, x9, w8, sxtw
  411194:	b	4111a4 <ferror@plt+0xe314>
  411198:	ldr	x8, [x4]
  41119c:	add	x9, x8, #0x8
  4111a0:	str	x9, [x4]
  4111a4:	ldr	x8, [x8]
  4111a8:	str	x8, [sp, #72]
  4111ac:	cmp	x8, #0x0
  4111b0:	mov	w8, #0x9                   	// #9
  4111b4:	cinc	x5, x8, ne  // ne = any
  4111b8:	b	4111c0 <ferror@plt+0xe330>
  4111bc:	mov	w5, #0x8                   	// #8
  4111c0:	mov	x4, sp
  4111c4:	bl	410bbc <ferror@plt+0xdd2c>
  4111c8:	ldp	x29, x30, [sp, #80]
  4111cc:	add	sp, sp, #0x60
  4111d0:	ret
  4111d4:	sub	sp, sp, #0xf0
  4111d8:	stp	x29, x30, [sp, #224]
  4111dc:	add	x29, sp, #0xe0
  4111e0:	mov	x8, #0xffffffffffffffe0    	// #-32
  4111e4:	mov	x9, sp
  4111e8:	sub	x10, x29, #0x60
  4111ec:	movk	x8, #0xff80, lsl #32
  4111f0:	add	x11, x29, #0x10
  4111f4:	add	x9, x9, #0x80
  4111f8:	add	x10, x10, #0x20
  4111fc:	stp	x9, x8, [x29, #-16]
  411200:	stp	x11, x10, [x29, #-32]
  411204:	stp	x4, x5, [x29, #-96]
  411208:	stp	x6, x7, [x29, #-80]
  41120c:	stp	q0, q1, [sp]
  411210:	ldp	q0, q1, [x29, #-32]
  411214:	sub	x4, x29, #0x40
  411218:	stp	q2, q3, [sp, #32]
  41121c:	stp	q4, q5, [sp, #64]
  411220:	stp	q6, q7, [sp, #96]
  411224:	stp	q0, q1, [x29, #-64]
  411228:	bl	410ec0 <ferror@plt+0xe030>
  41122c:	ldp	x29, x30, [sp, #224]
  411230:	add	sp, sp, #0xf0
  411234:	ret
  411238:	stp	x29, x30, [sp, #-16]!
  41123c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  411240:	add	x1, x1, #0x134
  411244:	mov	w2, #0x5                   	// #5
  411248:	mov	x0, xzr
  41124c:	mov	x29, sp
  411250:	bl	402d70 <dcgettext@plt>
  411254:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x35ec>
  411258:	mov	x1, x0
  41125c:	add	x2, x2, #0x149
  411260:	mov	w0, #0x1                   	// #1
  411264:	bl	4029d0 <__printf_chk@plt>
  411268:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  41126c:	add	x1, x1, #0x15f
  411270:	mov	w2, #0x5                   	// #5
  411274:	mov	x0, xzr
  411278:	bl	402d70 <dcgettext@plt>
  41127c:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  411280:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x25ec>
  411284:	mov	x1, x0
  411288:	add	x2, x2, #0xce
  41128c:	add	x3, x3, #0x37b
  411290:	mov	w0, #0x1                   	// #1
  411294:	bl	4029d0 <__printf_chk@plt>
  411298:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  41129c:	add	x1, x1, #0x173
  4112a0:	mov	w2, #0x5                   	// #5
  4112a4:	mov	x0, xzr
  4112a8:	bl	402d70 <dcgettext@plt>
  4112ac:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4112b0:	ldr	x1, [x8, #1344]
  4112b4:	ldp	x29, x30, [sp], #16
  4112b8:	b	402d80 <fputs_unlocked@plt>
  4112bc:	stp	x29, x30, [sp, #-32]!
  4112c0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4112c4:	udiv	x8, x8, x1
  4112c8:	cmp	x8, x0
  4112cc:	str	x19, [sp, #16]
  4112d0:	mov	x29, sp
  4112d4:	b.cc	4112f8 <ferror@plt+0xe468>  // b.lo, b.ul, b.last
  4112d8:	mul	x19, x1, x0
  4112dc:	mov	x0, x19
  4112e0:	bl	402930 <malloc@plt>
  4112e4:	cbz	x19, 4112ec <ferror@plt+0xe45c>
  4112e8:	cbz	x0, 4112f8 <ferror@plt+0xe468>
  4112ec:	ldr	x19, [sp, #16]
  4112f0:	ldp	x29, x30, [sp], #32
  4112f4:	ret
  4112f8:	bl	411638 <ferror@plt+0xe7a8>
  4112fc:	stp	x29, x30, [sp, #-32]!
  411300:	str	x19, [sp, #16]
  411304:	mov	x29, sp
  411308:	mov	x19, x0
  41130c:	bl	402930 <malloc@plt>
  411310:	cbz	x19, 411318 <ferror@plt+0xe488>
  411314:	cbz	x0, 411324 <ferror@plt+0xe494>
  411318:	ldr	x19, [sp, #16]
  41131c:	ldp	x29, x30, [sp], #32
  411320:	ret
  411324:	bl	411638 <ferror@plt+0xe7a8>
  411328:	stp	x29, x30, [sp, #-32]!
  41132c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411330:	udiv	x8, x8, x2
  411334:	cmp	x8, x1
  411338:	str	x19, [sp, #16]
  41133c:	mov	x29, sp
  411340:	b.cc	411378 <ferror@plt+0xe4e8>  // b.lo, b.ul, b.last
  411344:	mul	x19, x2, x1
  411348:	cbz	x0, 41135c <ferror@plt+0xe4cc>
  41134c:	cbnz	x19, 41135c <ferror@plt+0xe4cc>
  411350:	bl	402c00 <free@plt>
  411354:	mov	x0, xzr
  411358:	b	41136c <ferror@plt+0xe4dc>
  41135c:	mov	x1, x19
  411360:	bl	402a40 <realloc@plt>
  411364:	cbz	x19, 41136c <ferror@plt+0xe4dc>
  411368:	cbz	x0, 411378 <ferror@plt+0xe4e8>
  41136c:	ldr	x19, [sp, #16]
  411370:	ldp	x29, x30, [sp], #32
  411374:	ret
  411378:	bl	411638 <ferror@plt+0xe7a8>
  41137c:	stp	x29, x30, [sp, #-32]!
  411380:	str	x19, [sp, #16]
  411384:	mov	x19, x1
  411388:	mov	x29, sp
  41138c:	cbz	x0, 4113a0 <ferror@plt+0xe510>
  411390:	cbnz	x19, 4113a0 <ferror@plt+0xe510>
  411394:	bl	402c00 <free@plt>
  411398:	mov	x0, xzr
  41139c:	b	4113b0 <ferror@plt+0xe520>
  4113a0:	mov	x1, x19
  4113a4:	bl	402a40 <realloc@plt>
  4113a8:	cbz	x19, 4113b0 <ferror@plt+0xe520>
  4113ac:	cbz	x0, 4113bc <ferror@plt+0xe52c>
  4113b0:	ldr	x19, [sp, #16]
  4113b4:	ldp	x29, x30, [sp], #32
  4113b8:	ret
  4113bc:	bl	411638 <ferror@plt+0xe7a8>
  4113c0:	stp	x29, x30, [sp, #-32]!
  4113c4:	ldr	x8, [x1]
  4113c8:	str	x19, [sp, #16]
  4113cc:	mov	x29, sp
  4113d0:	cbz	x0, 411414 <ferror@plt+0xe584>
  4113d4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4113d8:	movk	x9, #0x5554
  4113dc:	udiv	x9, x9, x2
  4113e0:	cmp	x9, x8
  4113e4:	b.ls	411450 <ferror@plt+0xe5c0>  // b.plast
  4113e8:	add	x8, x8, x8, lsr #1
  4113ec:	add	x9, x8, #0x1
  4113f0:	mul	x8, x9, x2
  4113f4:	str	x9, [x1]
  4113f8:	cbz	x8, 411454 <ferror@plt+0xe5c4>
  4113fc:	mov	x1, x8
  411400:	bl	402a40 <realloc@plt>
  411404:	cbz	x0, 411450 <ferror@plt+0xe5c0>
  411408:	ldr	x19, [sp, #16]
  41140c:	ldp	x29, x30, [sp], #32
  411410:	ret
  411414:	cbnz	x8, 411428 <ferror@plt+0xe598>
  411418:	mov	w8, #0x80                  	// #128
  41141c:	udiv	x8, x8, x2
  411420:	cmp	x2, #0x80
  411424:	cinc	x8, x8, hi  // hi = pmore
  411428:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41142c:	udiv	x9, x9, x2
  411430:	cmp	x9, x8
  411434:	b.cc	411450 <ferror@plt+0xe5c0>  // b.lo, b.ul, b.last
  411438:	mul	x19, x8, x2
  41143c:	mov	x0, x19
  411440:	str	x8, [x1]
  411444:	bl	402930 <malloc@plt>
  411448:	cbz	x19, 411408 <ferror@plt+0xe578>
  41144c:	cbnz	x0, 411408 <ferror@plt+0xe578>
  411450:	bl	411638 <ferror@plt+0xe7a8>
  411454:	bl	402c00 <free@plt>
  411458:	mov	x0, xzr
  41145c:	ldr	x19, [sp, #16]
  411460:	ldp	x29, x30, [sp], #32
  411464:	ret
  411468:	stp	x29, x30, [sp, #-32]!
  41146c:	str	x19, [sp, #16]
  411470:	mov	x29, sp
  411474:	mov	x19, x0
  411478:	bl	402930 <malloc@plt>
  41147c:	cbz	x19, 411484 <ferror@plt+0xe5f4>
  411480:	cbz	x0, 411490 <ferror@plt+0xe600>
  411484:	ldr	x19, [sp, #16]
  411488:	ldp	x29, x30, [sp], #32
  41148c:	ret
  411490:	bl	411638 <ferror@plt+0xe7a8>
  411494:	stp	x29, x30, [sp, #-16]!
  411498:	ldr	x8, [x1]
  41149c:	mov	x29, sp
  4114a0:	cbz	x0, 4114d4 <ferror@plt+0xe644>
  4114a4:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4114a8:	movk	x9, #0x5554
  4114ac:	cmp	x8, x9
  4114b0:	b.cs	411518 <ferror@plt+0xe688>  // b.hs, b.nlast
  4114b4:	add	x8, x8, x8, lsr #1
  4114b8:	adds	x8, x8, #0x1
  4114bc:	str	x8, [x1]
  4114c0:	b.eq	4114f4 <ferror@plt+0xe664>  // b.none
  4114c4:	mov	x1, x8
  4114c8:	bl	402a40 <realloc@plt>
  4114cc:	cbnz	x0, 4114ec <ferror@plt+0xe65c>
  4114d0:	b	411518 <ferror@plt+0xe688>
  4114d4:	cbz	x8, 411504 <ferror@plt+0xe674>
  4114d8:	tbnz	x8, #63, 411518 <ferror@plt+0xe688>
  4114dc:	mov	x0, x8
  4114e0:	str	x8, [x1]
  4114e4:	bl	402930 <malloc@plt>
  4114e8:	cbz	x0, 411518 <ferror@plt+0xe688>
  4114ec:	ldp	x29, x30, [sp], #16
  4114f0:	ret
  4114f4:	bl	402c00 <free@plt>
  4114f8:	mov	x0, xzr
  4114fc:	ldp	x29, x30, [sp], #16
  411500:	ret
  411504:	mov	w8, #0x80                  	// #128
  411508:	mov	x0, x8
  41150c:	str	x8, [x1]
  411510:	bl	402930 <malloc@plt>
  411514:	cbnz	x0, 4114ec <ferror@plt+0xe65c>
  411518:	bl	411638 <ferror@plt+0xe7a8>
  41151c:	stp	x29, x30, [sp, #-32]!
  411520:	stp	x20, x19, [sp, #16]
  411524:	mov	x29, sp
  411528:	mov	x19, x0
  41152c:	bl	402930 <malloc@plt>
  411530:	mov	x20, x0
  411534:	cbz	x19, 41153c <ferror@plt+0xe6ac>
  411538:	cbz	x20, 41155c <ferror@plt+0xe6cc>
  41153c:	mov	x0, x20
  411540:	mov	w1, wzr
  411544:	mov	x2, x19
  411548:	bl	4029e0 <memset@plt>
  41154c:	mov	x0, x20
  411550:	ldp	x20, x19, [sp, #16]
  411554:	ldp	x29, x30, [sp], #32
  411558:	ret
  41155c:	bl	411638 <ferror@plt+0xe7a8>
  411560:	stp	x29, x30, [sp, #-16]!
  411564:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411568:	udiv	x8, x8, x1
  41156c:	cmp	x8, x0
  411570:	mov	x29, sp
  411574:	b.cc	411588 <ferror@plt+0xe6f8>  // b.lo, b.ul, b.last
  411578:	bl	412108 <ferror@plt+0xf278>
  41157c:	cbz	x0, 411588 <ferror@plt+0xe6f8>
  411580:	ldp	x29, x30, [sp], #16
  411584:	ret
  411588:	bl	411638 <ferror@plt+0xe7a8>
  41158c:	stp	x29, x30, [sp, #-48]!
  411590:	stp	x20, x19, [sp, #32]
  411594:	mov	x20, x0
  411598:	mov	x0, x1
  41159c:	str	x21, [sp, #16]
  4115a0:	mov	x29, sp
  4115a4:	mov	x19, x1
  4115a8:	bl	402930 <malloc@plt>
  4115ac:	mov	x21, x0
  4115b0:	cbz	x19, 4115b8 <ferror@plt+0xe728>
  4115b4:	cbz	x21, 4115dc <ferror@plt+0xe74c>
  4115b8:	mov	x0, x21
  4115bc:	mov	x1, x20
  4115c0:	mov	x2, x19
  4115c4:	bl	402760 <memcpy@plt>
  4115c8:	mov	x0, x21
  4115cc:	ldp	x20, x19, [sp, #32]
  4115d0:	ldr	x21, [sp, #16]
  4115d4:	ldp	x29, x30, [sp], #48
  4115d8:	ret
  4115dc:	bl	411638 <ferror@plt+0xe7a8>
  4115e0:	stp	x29, x30, [sp, #-48]!
  4115e4:	str	x21, [sp, #16]
  4115e8:	stp	x20, x19, [sp, #32]
  4115ec:	mov	x29, sp
  4115f0:	mov	x19, x0
  4115f4:	bl	4027c0 <strlen@plt>
  4115f8:	add	x20, x0, #0x1
  4115fc:	mov	x0, x20
  411600:	bl	402930 <malloc@plt>
  411604:	mov	x21, x0
  411608:	cbz	x20, 411610 <ferror@plt+0xe780>
  41160c:	cbz	x21, 411634 <ferror@plt+0xe7a4>
  411610:	mov	x0, x21
  411614:	mov	x1, x19
  411618:	mov	x2, x20
  41161c:	bl	402760 <memcpy@plt>
  411620:	mov	x0, x21
  411624:	ldp	x20, x19, [sp, #32]
  411628:	ldr	x21, [sp, #16]
  41162c:	ldp	x29, x30, [sp], #48
  411630:	ret
  411634:	bl	411638 <ferror@plt+0xe7a8>
  411638:	stp	x29, x30, [sp, #-32]!
  41163c:	str	x19, [sp, #16]
  411640:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  411644:	ldr	w19, [x8, #1208]
  411648:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  41164c:	add	x1, x1, #0x1e3
  411650:	mov	w2, #0x5                   	// #5
  411654:	mov	x0, xzr
  411658:	mov	x29, sp
  41165c:	bl	402d70 <dcgettext@plt>
  411660:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  411664:	mov	x3, x0
  411668:	add	x2, x2, #0xb02
  41166c:	mov	w0, w19
  411670:	mov	w1, wzr
  411674:	bl	4027f0 <error@plt>
  411678:	bl	402ae0 <abort@plt>
  41167c:	stp	x29, x30, [sp, #-80]!
  411680:	str	x25, [sp, #16]
  411684:	stp	x24, x23, [sp, #32]
  411688:	stp	x22, x21, [sp, #48]
  41168c:	stp	x20, x19, [sp, #64]
  411690:	mov	x29, sp
  411694:	mov	x20, x3
  411698:	mov	x21, x2
  41169c:	mov	x22, x1
  4116a0:	mov	x23, x0
  4116a4:	bl	412ea0 <_obstack_memory_used@@Base+0x48c>
  4116a8:	mov	w19, w0
  4116ac:	bl	402e00 <__errno_location@plt>
  4116b0:	ldr	w24, [x0]
  4116b4:	cbz	w24, 411764 <ferror@plt+0xe8d4>
  4116b8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  4116bc:	add	x1, x1, #0x1f4
  4116c0:	mov	w2, #0x5                   	// #5
  4116c4:	mov	x0, xzr
  4116c8:	bl	402d70 <dcgettext@plt>
  4116cc:	mov	x2, x0
  4116d0:	mov	w0, wzr
  4116d4:	mov	w1, w24
  4116d8:	bl	4027f0 <error@plt>
  4116dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  4116e0:	add	x1, x1, #0x20d
  4116e4:	mov	w2, #0x5                   	// #5
  4116e8:	mov	x0, xzr
  4116ec:	bl	402d70 <dcgettext@plt>
  4116f0:	mov	x2, x0
  4116f4:	mov	w0, wzr
  4116f8:	mov	w1, wzr
  4116fc:	bl	4027f0 <error@plt>
  411700:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  411704:	ldr	w24, [x8, #1208]
  411708:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  41170c:	add	x1, x1, #0x238
  411710:	mov	w2, #0x5                   	// #5
  411714:	mov	x0, xzr
  411718:	bl	402d70 <dcgettext@plt>
  41171c:	mov	x25, x0
  411720:	mov	w1, #0x8                   	// #8
  411724:	mov	w0, wzr
  411728:	mov	x2, x23
  41172c:	mov	x3, x22
  411730:	bl	40f5dc <ferror@plt+0xc74c>
  411734:	mov	x22, x0
  411738:	mov	w0, #0x1                   	// #1
  41173c:	mov	w1, #0x8                   	// #8
  411740:	mov	x2, x21
  411744:	mov	x3, x20
  411748:	bl	40f5dc <ferror@plt+0xc74c>
  41174c:	mov	x4, x0
  411750:	mov	w0, w24
  411754:	mov	w1, wzr
  411758:	mov	x2, x25
  41175c:	mov	x3, x22
  411760:	bl	4027f0 <error@plt>
  411764:	mov	w0, w19
  411768:	ldp	x20, x19, [sp, #64]
  41176c:	ldp	x22, x21, [sp, #48]
  411770:	ldp	x24, x23, [sp, #32]
  411774:	ldr	x25, [sp, #16]
  411778:	ldp	x29, x30, [sp], #80
  41177c:	ret
  411780:	stp	x29, x30, [sp, #-80]!
  411784:	str	x25, [sp, #16]
  411788:	stp	x24, x23, [sp, #32]
  41178c:	stp	x22, x21, [sp, #48]
  411790:	stp	x20, x19, [sp, #64]
  411794:	mov	x29, sp
  411798:	mov	x22, x3
  41179c:	mov	x20, x2
  4117a0:	mov	x24, x1
  4117a4:	mov	x21, x0
  4117a8:	bl	412fb4 <_obstack_memory_used@@Base+0x5a0>
  4117ac:	mov	w19, w0
  4117b0:	bl	402e00 <__errno_location@plt>
  4117b4:	ldr	w23, [x0]
  4117b8:	cbz	w23, 411870 <ferror@plt+0xe9e0>
  4117bc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  4117c0:	add	x1, x1, #0x1f4
  4117c4:	mov	w2, #0x5                   	// #5
  4117c8:	mov	x0, xzr
  4117cc:	sub	x24, x24, #0x1
  4117d0:	sub	x22, x22, #0x1
  4117d4:	bl	402d70 <dcgettext@plt>
  4117d8:	mov	x2, x0
  4117dc:	mov	w0, wzr
  4117e0:	mov	w1, w23
  4117e4:	bl	4027f0 <error@plt>
  4117e8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  4117ec:	add	x1, x1, #0x20d
  4117f0:	mov	w2, #0x5                   	// #5
  4117f4:	mov	x0, xzr
  4117f8:	bl	402d70 <dcgettext@plt>
  4117fc:	mov	x2, x0
  411800:	mov	w0, wzr
  411804:	mov	w1, wzr
  411808:	bl	4027f0 <error@plt>
  41180c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  411810:	ldr	w23, [x8, #1208]
  411814:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  411818:	add	x1, x1, #0x238
  41181c:	mov	w2, #0x5                   	// #5
  411820:	mov	x0, xzr
  411824:	bl	402d70 <dcgettext@plt>
  411828:	mov	x25, x0
  41182c:	mov	w1, #0x8                   	// #8
  411830:	mov	w0, wzr
  411834:	mov	x2, x21
  411838:	mov	x3, x24
  41183c:	bl	40f5dc <ferror@plt+0xc74c>
  411840:	mov	x21, x0
  411844:	mov	w0, #0x1                   	// #1
  411848:	mov	w1, #0x8                   	// #8
  41184c:	mov	x2, x20
  411850:	mov	x3, x22
  411854:	bl	40f5dc <ferror@plt+0xc74c>
  411858:	mov	x4, x0
  41185c:	mov	w0, w23
  411860:	mov	w1, wzr
  411864:	mov	x2, x25
  411868:	mov	x3, x21
  41186c:	bl	4027f0 <error@plt>
  411870:	mov	w0, w19
  411874:	ldp	x20, x19, [sp, #64]
  411878:	ldp	x22, x21, [sp, #48]
  41187c:	ldp	x24, x23, [sp, #32]
  411880:	ldr	x25, [sp, #16]
  411884:	ldp	x29, x30, [sp], #80
  411888:	ret
  41188c:	sub	sp, sp, #0x30
  411890:	stp	x29, x30, [sp, #16]
  411894:	str	x19, [sp, #32]
  411898:	add	x29, sp, #0x10
  41189c:	bl	412cac <_obstack_memory_used@@Base+0x298>
  4118a0:	stp	x0, x1, [sp]
  4118a4:	bl	402e00 <__errno_location@plt>
  4118a8:	mov	x19, x0
  4118ac:	str	wzr, [x0]
  4118b0:	mov	x0, sp
  4118b4:	mov	x1, xzr
  4118b8:	bl	4125e8 <ferror@plt+0xf758>
  4118bc:	cbz	w0, 4118e4 <ferror@plt+0xea54>
  4118c0:	ldr	w8, [x19]
  4118c4:	orr	w8, w8, #0x4
  4118c8:	cmp	w8, #0x4
  4118cc:	b.ne	4118f4 <ferror@plt+0xea64>  // b.any
  4118d0:	str	wzr, [x19]
  4118d4:	mov	x0, sp
  4118d8:	mov	x1, xzr
  4118dc:	bl	4125e8 <ferror@plt+0xf758>
  4118e0:	cbnz	w0, 4118c0 <ferror@plt+0xea30>
  4118e4:	ldr	x19, [sp, #32]
  4118e8:	ldp	x29, x30, [sp, #16]
  4118ec:	add	sp, sp, #0x30
  4118f0:	ret
  4118f4:	mov	w0, #0xffffffff            	// #-1
  4118f8:	ldr	x19, [sp, #32]
  4118fc:	ldp	x29, x30, [sp, #16]
  411900:	add	sp, sp, #0x30
  411904:	ret
  411908:	stp	x29, x30, [sp, #-80]!
  41190c:	cmp	w2, #0x25
  411910:	str	x25, [sp, #16]
  411914:	stp	x24, x23, [sp, #32]
  411918:	stp	x22, x21, [sp, #48]
  41191c:	stp	x20, x19, [sp, #64]
  411920:	mov	x29, sp
  411924:	b.cs	411c84 <ferror@plt+0xedf4>  // b.hs, b.nlast
  411928:	mov	x23, x4
  41192c:	mov	x19, x3
  411930:	mov	w22, w2
  411934:	mov	x21, x1
  411938:	mov	x20, x0
  41193c:	bl	402e00 <__errno_location@plt>
  411940:	mov	x24, x0
  411944:	str	wzr, [x0]
  411948:	bl	402bc0 <__ctype_b_loc@plt>
  41194c:	ldr	x8, [x0]
  411950:	mov	x10, x20
  411954:	ldrb	w9, [x10], #1
  411958:	ldrh	w11, [x8, x9, lsl #1]
  41195c:	tbnz	w11, #13, 411954 <ferror@plt+0xeac4>
  411960:	cmp	x21, #0x0
  411964:	add	x8, x29, #0x18
  411968:	csel	x21, x8, x21, eq  // eq = none
  41196c:	cmp	w9, #0x2d
  411970:	b.ne	41197c <ferror@plt+0xeaec>  // b.any
  411974:	mov	w20, #0x4                   	// #4
  411978:	b	411c54 <ferror@plt+0xedc4>
  41197c:	mov	x0, x20
  411980:	mov	x1, x21
  411984:	mov	w2, w22
  411988:	bl	4027b0 <strtoul@plt>
  41198c:	ldr	x25, [x21]
  411990:	cmp	x25, x20
  411994:	b.eq	4119c0 <ferror@plt+0xeb30>  // b.none
  411998:	ldr	w20, [x24]
  41199c:	mov	x22, x0
  4119a0:	cbz	w20, 4119b0 <ferror@plt+0xeb20>
  4119a4:	cmp	w20, #0x22
  4119a8:	b.ne	411974 <ferror@plt+0xeae4>  // b.any
  4119ac:	mov	w20, #0x1                   	// #1
  4119b0:	cbz	x23, 411c50 <ferror@plt+0xedc0>
  4119b4:	ldrb	w24, [x25]
  4119b8:	cbnz	w24, 4119e8 <ferror@plt+0xeb58>
  4119bc:	b	411c50 <ferror@plt+0xedc0>
  4119c0:	cbz	x23, 411974 <ferror@plt+0xeae4>
  4119c4:	ldrb	w1, [x20]
  4119c8:	cbz	w1, 411974 <ferror@plt+0xeae4>
  4119cc:	mov	x0, x23
  4119d0:	bl	402c60 <strchr@plt>
  4119d4:	cbz	x0, 411974 <ferror@plt+0xeae4>
  4119d8:	mov	w20, wzr
  4119dc:	mov	w22, #0x1                   	// #1
  4119e0:	ldrb	w24, [x25]
  4119e4:	cbz	w24, 411c50 <ferror@plt+0xedc0>
  4119e8:	mov	x0, x23
  4119ec:	mov	w1, w24
  4119f0:	bl	402c60 <strchr@plt>
  4119f4:	cbz	x0, 411ac0 <ferror@plt+0xec30>
  4119f8:	sub	w10, w24, #0x45
  4119fc:	mov	w8, #0x1                   	// #1
  411a00:	cmp	w10, #0x2f
  411a04:	mov	w9, #0x400                 	// #1024
  411a08:	b.hi	411a80 <ferror@plt+0xebf0>  // b.pmore
  411a0c:	mov	w11, #0x1                   	// #1
  411a10:	lsl	x10, x11, x10
  411a14:	mov	x11, #0x8945                	// #35141
  411a18:	movk	x11, #0x30, lsl #16
  411a1c:	movk	x11, #0x8144, lsl #32
  411a20:	tst	x10, x11
  411a24:	b.eq	411a80 <ferror@plt+0xebf0>  // b.none
  411a28:	mov	w1, #0x30                  	// #48
  411a2c:	mov	x0, x23
  411a30:	bl	402c60 <strchr@plt>
  411a34:	cbz	x0, 411a6c <ferror@plt+0xebdc>
  411a38:	ldrb	w8, [x25, #1]
  411a3c:	cmp	w8, #0x42
  411a40:	b.eq	411a78 <ferror@plt+0xebe8>  // b.none
  411a44:	cmp	w8, #0x44
  411a48:	b.eq	411a78 <ferror@plt+0xebe8>  // b.none
  411a4c:	cmp	w8, #0x69
  411a50:	b.ne	411a6c <ferror@plt+0xebdc>  // b.any
  411a54:	ldrb	w8, [x25, #2]
  411a58:	mov	w9, #0x3                   	// #3
  411a5c:	cmp	w8, #0x42
  411a60:	csinc	x8, x9, xzr, eq  // eq = none
  411a64:	mov	w9, #0x400                 	// #1024
  411a68:	b	411a80 <ferror@plt+0xebf0>
  411a6c:	mov	w8, #0x1                   	// #1
  411a70:	mov	w9, #0x400                 	// #1024
  411a74:	b	411a80 <ferror@plt+0xebf0>
  411a78:	mov	w8, #0x2                   	// #2
  411a7c:	mov	w9, #0x3e8                 	// #1000
  411a80:	sub	w10, w24, #0x42
  411a84:	cmp	w10, #0x35
  411a88:	b.hi	411ac0 <ferror@plt+0xec30>  // b.pmore
  411a8c:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x35ec>
  411a90:	add	x11, x11, #0x25d
  411a94:	adr	x12, 411aa8 <ferror@plt+0xec18>
  411a98:	ldrb	w13, [x11, x10]
  411a9c:	add	x12, x12, x13, lsl #2
  411aa0:	mov	w10, wzr
  411aa4:	br	x12
  411aa8:	umulh	x10, x9, x22
  411aac:	mul	x11, x22, x9
  411ab0:	cmp	xzr, x10
  411ab4:	cset	w10, ne  // ne = any
  411ab8:	csinv	x11, x11, xzr, eq  // eq = none
  411abc:	b	411bec <ferror@plt+0xed5c>
  411ac0:	str	x22, [x19]
  411ac4:	orr	w20, w20, #0x2
  411ac8:	b	411c54 <ferror@plt+0xedc4>
  411acc:	umulh	x10, x9, x22
  411ad0:	mul	x9, x22, x9
  411ad4:	cmp	xzr, x10
  411ad8:	b	411c28 <ferror@plt+0xed98>
  411adc:	umulh	x10, x9, x22
  411ae0:	mul	x11, x22, x9
  411ae4:	cmp	xzr, x10
  411ae8:	cset	w10, ne  // ne = any
  411aec:	csinv	x11, x11, xzr, eq  // eq = none
  411af0:	b	411c04 <ferror@plt+0xed74>
  411af4:	umulh	x10, x9, x22
  411af8:	mul	x11, x22, x9
  411afc:	cmp	xzr, x10
  411b00:	cset	w10, ne  // ne = any
  411b04:	csinv	x11, x11, xzr, eq  // eq = none
  411b08:	b	411bd4 <ferror@plt+0xed44>
  411b0c:	umulh	x10, x9, x22
  411b10:	mul	x11, x22, x9
  411b14:	cmp	xzr, x10
  411b18:	cset	w10, ne  // ne = any
  411b1c:	csinv	x11, x11, xzr, eq  // eq = none
  411b20:	b	411b8c <ferror@plt+0xecfc>
  411b24:	cmp	xzr, x22, lsr #54
  411b28:	lsl	x9, x22, #10
  411b2c:	b	411c28 <ferror@plt+0xed98>
  411b30:	umulh	x10, x9, x22
  411b34:	mul	x11, x22, x9
  411b38:	cmp	xzr, x10
  411b3c:	cset	w10, ne  // ne = any
  411b40:	csinv	x11, x11, xzr, eq  // eq = none
  411b44:	b	411ba4 <ferror@plt+0xed14>
  411b48:	umulh	x10, x9, x22
  411b4c:	mul	x11, x22, x9
  411b50:	cmp	xzr, x10
  411b54:	cset	w10, ne  // ne = any
  411b58:	csinv	x11, x11, xzr, eq  // eq = none
  411b5c:	b	411bbc <ferror@plt+0xed2c>
  411b60:	umulh	x10, x9, x22
  411b64:	mul	x11, x22, x9
  411b68:	cmp	xzr, x10
  411b6c:	csinv	x11, x11, xzr, eq  // eq = none
  411b70:	umulh	x12, x9, x11
  411b74:	cset	w10, ne  // ne = any
  411b78:	cmp	xzr, x12
  411b7c:	mul	x11, x11, x9
  411b80:	cset	w12, ne  // ne = any
  411b84:	csinv	x11, x11, xzr, eq  // eq = none
  411b88:	orr	w10, w10, w12
  411b8c:	umulh	x12, x9, x11
  411b90:	cmp	xzr, x12
  411b94:	mul	x11, x11, x9
  411b98:	cset	w12, ne  // ne = any
  411b9c:	csinv	x11, x11, xzr, eq  // eq = none
  411ba0:	orr	w10, w10, w12
  411ba4:	umulh	x12, x9, x11
  411ba8:	cmp	xzr, x12
  411bac:	mul	x11, x11, x9
  411bb0:	cset	w12, ne  // ne = any
  411bb4:	csinv	x11, x11, xzr, eq  // eq = none
  411bb8:	orr	w10, w10, w12
  411bbc:	umulh	x12, x9, x11
  411bc0:	cmp	xzr, x12
  411bc4:	mul	x11, x11, x9
  411bc8:	cset	w12, ne  // ne = any
  411bcc:	csinv	x11, x11, xzr, eq  // eq = none
  411bd0:	orr	w10, w10, w12
  411bd4:	umulh	x12, x9, x11
  411bd8:	cmp	xzr, x12
  411bdc:	mul	x11, x11, x9
  411be0:	cset	w12, ne  // ne = any
  411be4:	csinv	x11, x11, xzr, eq  // eq = none
  411be8:	orr	w10, w10, w12
  411bec:	umulh	x12, x9, x11
  411bf0:	cmp	xzr, x12
  411bf4:	mul	x11, x11, x9
  411bf8:	cset	w12, ne  // ne = any
  411bfc:	csinv	x11, x11, xzr, eq  // eq = none
  411c00:	orr	w10, w10, w12
  411c04:	umulh	x12, x9, x11
  411c08:	cmp	xzr, x12
  411c0c:	mul	x9, x11, x9
  411c10:	cset	w11, ne  // ne = any
  411c14:	csinv	x22, x9, xzr, eq  // eq = none
  411c18:	orr	w10, w10, w11
  411c1c:	b	411c30 <ferror@plt+0xeda0>
  411c20:	cmp	xzr, x22, lsr #55
  411c24:	lsl	x9, x22, #9
  411c28:	cset	w10, ne  // ne = any
  411c2c:	csinv	x22, x9, xzr, eq  // eq = none
  411c30:	add	x9, x25, x8
  411c34:	str	x9, [x21]
  411c38:	ldrb	w8, [x25, x8]
  411c3c:	and	w9, w10, #0x1
  411c40:	orr	w9, w20, w9
  411c44:	orr	w10, w9, #0x2
  411c48:	cmp	w8, #0x0
  411c4c:	csel	w20, w9, w10, eq  // eq = none
  411c50:	str	x22, [x19]
  411c54:	mov	w0, w20
  411c58:	ldp	x20, x19, [sp, #64]
  411c5c:	ldp	x22, x21, [sp, #48]
  411c60:	ldp	x24, x23, [sp, #32]
  411c64:	ldr	x25, [sp, #16]
  411c68:	ldp	x29, x30, [sp], #80
  411c6c:	ret
  411c70:	cmn	x22, x22
  411c74:	lsl	x9, x22, #1
  411c78:	cset	w10, cs  // cs = hs, nlast
  411c7c:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  411c80:	b	411c30 <ferror@plt+0xeda0>
  411c84:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x35ec>
  411c88:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  411c8c:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x35ec>
  411c90:	add	x0, x0, #0x293
  411c94:	add	x1, x1, #0x2b9
  411c98:	add	x3, x3, #0x2c9
  411c9c:	mov	w2, #0x54                  	// #84
  411ca0:	bl	402df0 <__assert_fail@plt>
  411ca4:	stp	x29, x30, [sp, #-16]!
  411ca8:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  411cac:	ldr	w5, [x8, #1208]
  411cb0:	mov	x29, sp
  411cb4:	bl	411cbc <ferror@plt+0xee2c>
  411cb8:	bl	402ae0 <abort@plt>
  411cbc:	sub	sp, sp, #0x40
  411cc0:	sub	w9, w0, #0x1
  411cc4:	cmp	w9, #0x4
  411cc8:	stp	x29, x30, [sp, #16]
  411ccc:	stp	x22, x21, [sp, #32]
  411cd0:	stp	x20, x19, [sp, #48]
  411cd4:	add	x29, sp, #0x10
  411cd8:	b.cs	411d64 <ferror@plt+0xeed4>  // b.hs, b.nlast
  411cdc:	adrp	x10, 416000 <_obstack_memory_used@@Base+0x35ec>
  411ce0:	add	x10, x10, #0x380
  411ce4:	mov	w8, w1
  411ce8:	ldr	x1, [x10, w9, sxtw #3]
  411cec:	mov	w20, w5
  411cf0:	mov	x19, x4
  411cf4:	sxtw	x9, w8
  411cf8:	tbnz	w8, #31, 411d10 <ferror@plt+0xee80>
  411cfc:	lsl	x8, x9, #5
  411d00:	ldr	x21, [x3, x8]
  411d04:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x35ec>
  411d08:	add	x22, x22, #0x31a
  411d0c:	b	411d28 <ferror@plt+0xee98>
  411d10:	adrp	x8, 416000 <_obstack_memory_used@@Base+0x35ec>
  411d14:	add	x8, x8, #0x31a
  411d18:	sub	x21, x29, #0x4
  411d1c:	sturb	w2, [x29, #-4]
  411d20:	sub	x22, x8, x9
  411d24:	sturb	wzr, [x29, #-3]
  411d28:	mov	w2, #0x5                   	// #5
  411d2c:	mov	x0, xzr
  411d30:	bl	402d70 <dcgettext@plt>
  411d34:	mov	x2, x0
  411d38:	mov	w0, w20
  411d3c:	mov	w1, wzr
  411d40:	mov	x3, x22
  411d44:	mov	x4, x21
  411d48:	mov	x5, x19
  411d4c:	bl	4027f0 <error@plt>
  411d50:	ldp	x20, x19, [sp, #48]
  411d54:	ldp	x22, x21, [sp, #32]
  411d58:	ldp	x29, x30, [sp, #16]
  411d5c:	add	sp, sp, #0x40
  411d60:	ret
  411d64:	bl	402ae0 <abort@plt>
  411d68:	stp	x29, x30, [sp, #-80]!
  411d6c:	cmp	w2, #0x25
  411d70:	str	x25, [sp, #16]
  411d74:	stp	x24, x23, [sp, #32]
  411d78:	stp	x22, x21, [sp, #48]
  411d7c:	stp	x20, x19, [sp, #64]
  411d80:	mov	x29, sp
  411d84:	b.cs	4120e8 <ferror@plt+0xf258>  // b.hs, b.nlast
  411d88:	mov	x23, x4
  411d8c:	mov	x19, x3
  411d90:	mov	w22, w2
  411d94:	mov	x21, x1
  411d98:	mov	x20, x0
  411d9c:	bl	402e00 <__errno_location@plt>
  411da0:	mov	x24, x0
  411da4:	str	wzr, [x0]
  411da8:	bl	402bc0 <__ctype_b_loc@plt>
  411dac:	ldr	x8, [x0]
  411db0:	mov	x10, x20
  411db4:	ldrb	w9, [x10], #1
  411db8:	ldrh	w11, [x8, x9, lsl #1]
  411dbc:	tbnz	w11, #13, 411db4 <ferror@plt+0xef24>
  411dc0:	cmp	x21, #0x0
  411dc4:	add	x8, x29, #0x18
  411dc8:	csel	x21, x8, x21, eq  // eq = none
  411dcc:	cmp	w9, #0x2d
  411dd0:	b.ne	411ddc <ferror@plt+0xef4c>  // b.any
  411dd4:	mov	w20, #0x4                   	// #4
  411dd8:	b	4120b8 <ferror@plt+0xf228>
  411ddc:	mov	x0, x20
  411de0:	mov	x1, x21
  411de4:	mov	w2, w22
  411de8:	mov	w3, wzr
  411dec:	bl	402a10 <__strtoul_internal@plt>
  411df0:	ldr	x25, [x21]
  411df4:	cmp	x25, x20
  411df8:	b.eq	411e24 <ferror@plt+0xef94>  // b.none
  411dfc:	ldr	w20, [x24]
  411e00:	mov	x22, x0
  411e04:	cbz	w20, 411e14 <ferror@plt+0xef84>
  411e08:	cmp	w20, #0x22
  411e0c:	b.ne	411dd4 <ferror@plt+0xef44>  // b.any
  411e10:	mov	w20, #0x1                   	// #1
  411e14:	cbz	x23, 4120b4 <ferror@plt+0xf224>
  411e18:	ldrb	w24, [x25]
  411e1c:	cbnz	w24, 411e4c <ferror@plt+0xefbc>
  411e20:	b	4120b4 <ferror@plt+0xf224>
  411e24:	cbz	x23, 411dd4 <ferror@plt+0xef44>
  411e28:	ldrb	w1, [x20]
  411e2c:	cbz	w1, 411dd4 <ferror@plt+0xef44>
  411e30:	mov	x0, x23
  411e34:	bl	402c60 <strchr@plt>
  411e38:	cbz	x0, 411dd4 <ferror@plt+0xef44>
  411e3c:	mov	w20, wzr
  411e40:	mov	w22, #0x1                   	// #1
  411e44:	ldrb	w24, [x25]
  411e48:	cbz	w24, 4120b4 <ferror@plt+0xf224>
  411e4c:	mov	x0, x23
  411e50:	mov	w1, w24
  411e54:	bl	402c60 <strchr@plt>
  411e58:	cbz	x0, 411f24 <ferror@plt+0xf094>
  411e5c:	sub	w10, w24, #0x45
  411e60:	mov	w8, #0x1                   	// #1
  411e64:	cmp	w10, #0x2f
  411e68:	mov	w9, #0x400                 	// #1024
  411e6c:	b.hi	411ee4 <ferror@plt+0xf054>  // b.pmore
  411e70:	mov	w11, #0x1                   	// #1
  411e74:	lsl	x10, x11, x10
  411e78:	mov	x11, #0x8945                	// #35141
  411e7c:	movk	x11, #0x30, lsl #16
  411e80:	movk	x11, #0x8144, lsl #32
  411e84:	tst	x10, x11
  411e88:	b.eq	411ee4 <ferror@plt+0xf054>  // b.none
  411e8c:	mov	w1, #0x30                  	// #48
  411e90:	mov	x0, x23
  411e94:	bl	402c60 <strchr@plt>
  411e98:	cbz	x0, 411ed0 <ferror@plt+0xf040>
  411e9c:	ldrb	w8, [x25, #1]
  411ea0:	cmp	w8, #0x42
  411ea4:	b.eq	411edc <ferror@plt+0xf04c>  // b.none
  411ea8:	cmp	w8, #0x44
  411eac:	b.eq	411edc <ferror@plt+0xf04c>  // b.none
  411eb0:	cmp	w8, #0x69
  411eb4:	b.ne	411ed0 <ferror@plt+0xf040>  // b.any
  411eb8:	ldrb	w8, [x25, #2]
  411ebc:	mov	w9, #0x3                   	// #3
  411ec0:	cmp	w8, #0x42
  411ec4:	csinc	x8, x9, xzr, eq  // eq = none
  411ec8:	mov	w9, #0x400                 	// #1024
  411ecc:	b	411ee4 <ferror@plt+0xf054>
  411ed0:	mov	w8, #0x1                   	// #1
  411ed4:	mov	w9, #0x400                 	// #1024
  411ed8:	b	411ee4 <ferror@plt+0xf054>
  411edc:	mov	w8, #0x2                   	// #2
  411ee0:	mov	w9, #0x3e8                 	// #1000
  411ee4:	sub	w10, w24, #0x42
  411ee8:	cmp	w10, #0x35
  411eec:	b.hi	411f24 <ferror@plt+0xf094>  // b.pmore
  411ef0:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x35ec>
  411ef4:	add	x11, x11, #0x3a0
  411ef8:	adr	x12, 411f0c <ferror@plt+0xf07c>
  411efc:	ldrb	w13, [x11, x10]
  411f00:	add	x12, x12, x13, lsl #2
  411f04:	mov	w10, wzr
  411f08:	br	x12
  411f0c:	umulh	x10, x9, x22
  411f10:	mul	x11, x22, x9
  411f14:	cmp	xzr, x10
  411f18:	cset	w10, ne  // ne = any
  411f1c:	csinv	x11, x11, xzr, eq  // eq = none
  411f20:	b	412050 <ferror@plt+0xf1c0>
  411f24:	str	x22, [x19]
  411f28:	orr	w20, w20, #0x2
  411f2c:	b	4120b8 <ferror@plt+0xf228>
  411f30:	umulh	x10, x9, x22
  411f34:	mul	x9, x22, x9
  411f38:	cmp	xzr, x10
  411f3c:	b	41208c <ferror@plt+0xf1fc>
  411f40:	umulh	x10, x9, x22
  411f44:	mul	x11, x22, x9
  411f48:	cmp	xzr, x10
  411f4c:	cset	w10, ne  // ne = any
  411f50:	csinv	x11, x11, xzr, eq  // eq = none
  411f54:	b	412068 <ferror@plt+0xf1d8>
  411f58:	umulh	x10, x9, x22
  411f5c:	mul	x11, x22, x9
  411f60:	cmp	xzr, x10
  411f64:	cset	w10, ne  // ne = any
  411f68:	csinv	x11, x11, xzr, eq  // eq = none
  411f6c:	b	412038 <ferror@plt+0xf1a8>
  411f70:	umulh	x10, x9, x22
  411f74:	mul	x11, x22, x9
  411f78:	cmp	xzr, x10
  411f7c:	cset	w10, ne  // ne = any
  411f80:	csinv	x11, x11, xzr, eq  // eq = none
  411f84:	b	411ff0 <ferror@plt+0xf160>
  411f88:	cmp	xzr, x22, lsr #54
  411f8c:	lsl	x9, x22, #10
  411f90:	b	41208c <ferror@plt+0xf1fc>
  411f94:	umulh	x10, x9, x22
  411f98:	mul	x11, x22, x9
  411f9c:	cmp	xzr, x10
  411fa0:	cset	w10, ne  // ne = any
  411fa4:	csinv	x11, x11, xzr, eq  // eq = none
  411fa8:	b	412008 <ferror@plt+0xf178>
  411fac:	umulh	x10, x9, x22
  411fb0:	mul	x11, x22, x9
  411fb4:	cmp	xzr, x10
  411fb8:	cset	w10, ne  // ne = any
  411fbc:	csinv	x11, x11, xzr, eq  // eq = none
  411fc0:	b	412020 <ferror@plt+0xf190>
  411fc4:	umulh	x10, x9, x22
  411fc8:	mul	x11, x22, x9
  411fcc:	cmp	xzr, x10
  411fd0:	csinv	x11, x11, xzr, eq  // eq = none
  411fd4:	umulh	x12, x9, x11
  411fd8:	cset	w10, ne  // ne = any
  411fdc:	cmp	xzr, x12
  411fe0:	mul	x11, x11, x9
  411fe4:	cset	w12, ne  // ne = any
  411fe8:	csinv	x11, x11, xzr, eq  // eq = none
  411fec:	orr	w10, w10, w12
  411ff0:	umulh	x12, x9, x11
  411ff4:	cmp	xzr, x12
  411ff8:	mul	x11, x11, x9
  411ffc:	cset	w12, ne  // ne = any
  412000:	csinv	x11, x11, xzr, eq  // eq = none
  412004:	orr	w10, w10, w12
  412008:	umulh	x12, x9, x11
  41200c:	cmp	xzr, x12
  412010:	mul	x11, x11, x9
  412014:	cset	w12, ne  // ne = any
  412018:	csinv	x11, x11, xzr, eq  // eq = none
  41201c:	orr	w10, w10, w12
  412020:	umulh	x12, x9, x11
  412024:	cmp	xzr, x12
  412028:	mul	x11, x11, x9
  41202c:	cset	w12, ne  // ne = any
  412030:	csinv	x11, x11, xzr, eq  // eq = none
  412034:	orr	w10, w10, w12
  412038:	umulh	x12, x9, x11
  41203c:	cmp	xzr, x12
  412040:	mul	x11, x11, x9
  412044:	cset	w12, ne  // ne = any
  412048:	csinv	x11, x11, xzr, eq  // eq = none
  41204c:	orr	w10, w10, w12
  412050:	umulh	x12, x9, x11
  412054:	cmp	xzr, x12
  412058:	mul	x11, x11, x9
  41205c:	cset	w12, ne  // ne = any
  412060:	csinv	x11, x11, xzr, eq  // eq = none
  412064:	orr	w10, w10, w12
  412068:	umulh	x12, x9, x11
  41206c:	cmp	xzr, x12
  412070:	mul	x9, x11, x9
  412074:	cset	w11, ne  // ne = any
  412078:	csinv	x22, x9, xzr, eq  // eq = none
  41207c:	orr	w10, w10, w11
  412080:	b	412094 <ferror@plt+0xf204>
  412084:	cmp	xzr, x22, lsr #55
  412088:	lsl	x9, x22, #9
  41208c:	cset	w10, ne  // ne = any
  412090:	csinv	x22, x9, xzr, eq  // eq = none
  412094:	add	x9, x25, x8
  412098:	str	x9, [x21]
  41209c:	ldrb	w8, [x25, x8]
  4120a0:	and	w9, w10, #0x1
  4120a4:	orr	w9, w20, w9
  4120a8:	orr	w10, w9, #0x2
  4120ac:	cmp	w8, #0x0
  4120b0:	csel	w20, w9, w10, eq  // eq = none
  4120b4:	str	x22, [x19]
  4120b8:	mov	w0, w20
  4120bc:	ldp	x20, x19, [sp, #64]
  4120c0:	ldp	x22, x21, [sp, #48]
  4120c4:	ldp	x24, x23, [sp, #32]
  4120c8:	ldr	x25, [sp, #16]
  4120cc:	ldp	x29, x30, [sp], #80
  4120d0:	ret
  4120d4:	cmn	x22, x22
  4120d8:	lsl	x9, x22, #1
  4120dc:	cset	w10, cs  // cs = hs, nlast
  4120e0:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4120e4:	b	412094 <ferror@plt+0xf204>
  4120e8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x35ec>
  4120ec:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  4120f0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x35ec>
  4120f4:	add	x0, x0, #0x293
  4120f8:	add	x1, x1, #0x2b9
  4120fc:	add	x3, x3, #0x3d6
  412100:	mov	w2, #0x54                  	// #84
  412104:	bl	402df0 <__assert_fail@plt>
  412108:	mov	x8, x1
  41210c:	mov	w1, #0x1                   	// #1
  412110:	mov	w9, #0x1                   	// #1
  412114:	cbz	x0, 41214c <ferror@plt+0xf2bc>
  412118:	cbz	x8, 41214c <ferror@plt+0xf2bc>
  41211c:	umulh	x10, x8, x0
  412120:	mov	x1, x8
  412124:	mov	x9, x0
  412128:	cbz	x10, 41214c <ferror@plt+0xf2bc>
  41212c:	stp	x29, x30, [sp, #-16]!
  412130:	mov	x29, sp
  412134:	bl	402e00 <__errno_location@plt>
  412138:	mov	w8, #0xc                   	// #12
  41213c:	str	w8, [x0]
  412140:	mov	x0, xzr
  412144:	ldp	x29, x30, [sp], #16
  412148:	ret
  41214c:	mov	x0, x9
  412150:	b	402a20 <calloc@plt>
  412154:	stp	x29, x30, [sp, #-48]!
  412158:	str	x21, [sp, #16]
  41215c:	stp	x20, x19, [sp, #32]
  412160:	mov	x29, sp
  412164:	mov	x19, x0
  412168:	bl	4028d0 <fileno@plt>
  41216c:	tbnz	w0, #31, 4121d4 <ferror@plt+0xf344>
  412170:	mov	x0, x19
  412174:	bl	402da0 <__freading@plt>
  412178:	cbz	w0, 412198 <ferror@plt+0xf308>
  41217c:	mov	x0, x19
  412180:	bl	4028d0 <fileno@plt>
  412184:	mov	w2, #0x1                   	// #1
  412188:	mov	x1, xzr
  41218c:	bl	402890 <lseek@plt>
  412190:	cmn	x0, #0x1
  412194:	b.eq	4121d4 <ferror@plt+0xf344>  // b.none
  412198:	mov	x0, x19
  41219c:	bl	412494 <ferror@plt+0xf604>
  4121a0:	cbz	w0, 4121d4 <ferror@plt+0xf344>
  4121a4:	bl	402e00 <__errno_location@plt>
  4121a8:	ldr	w21, [x0]
  4121ac:	mov	x20, x0
  4121b0:	mov	x0, x19
  4121b4:	bl	4028f0 <fclose@plt>
  4121b8:	cbz	w21, 4121c4 <ferror@plt+0xf334>
  4121bc:	mov	w0, #0xffffffff            	// #-1
  4121c0:	str	w21, [x20]
  4121c4:	ldp	x20, x19, [sp, #32]
  4121c8:	ldr	x21, [sp, #16]
  4121cc:	ldp	x29, x30, [sp], #48
  4121d0:	ret
  4121d4:	mov	x0, x19
  4121d8:	ldp	x20, x19, [sp, #32]
  4121dc:	ldr	x21, [sp, #16]
  4121e0:	ldp	x29, x30, [sp], #48
  4121e4:	b	4028f0 <fclose@plt>
  4121e8:	sub	sp, sp, #0x100
  4121ec:	stp	x29, x30, [sp, #208]
  4121f0:	add	x29, sp, #0xd0
  4121f4:	mov	x8, #0xffffffffffffffd0    	// #-48
  4121f8:	mov	x9, sp
  4121fc:	sub	x10, x29, #0x50
  412200:	stp	x20, x19, [sp, #240]
  412204:	mov	w19, w0
  412208:	movk	x8, #0xff80, lsl #32
  41220c:	add	x11, x29, #0x30
  412210:	cmp	w1, #0xb
  412214:	add	x9, x9, #0x80
  412218:	add	x10, x10, #0x30
  41221c:	stp	x22, x21, [sp, #224]
  412220:	stp	x2, x3, [x29, #-80]
  412224:	stp	x4, x5, [x29, #-64]
  412228:	stp	x6, x7, [x29, #-48]
  41222c:	stp	q1, q2, [sp, #16]
  412230:	stp	q3, q4, [sp, #48]
  412234:	str	q0, [sp]
  412238:	stp	q5, q6, [sp, #80]
  41223c:	str	q7, [sp, #112]
  412240:	stp	x9, x8, [x29, #-16]
  412244:	stp	x11, x10, [x29, #-32]
  412248:	b.hi	412294 <ferror@plt+0xf404>  // b.pmore
  41224c:	mov	w8, #0x1                   	// #1
  412250:	lsl	w8, w8, w1
  412254:	mov	w9, #0x514                 	// #1300
  412258:	tst	w8, w9
  41225c:	b.ne	4122cc <ferror@plt+0xf43c>  // b.any
  412260:	mov	w9, #0xa0a                 	// #2570
  412264:	tst	w8, w9
  412268:	b.ne	4122c0 <ferror@plt+0xf430>  // b.any
  41226c:	cbnz	w1, 412294 <ferror@plt+0xf404>
  412270:	ldursw	x8, [x29, #-8]
  412274:	tbz	w8, #31, 412374 <ferror@plt+0xf4e4>
  412278:	add	w9, w8, #0x8
  41227c:	cmn	w8, #0x8
  412280:	stur	w9, [x29, #-8]
  412284:	b.gt	412374 <ferror@plt+0xf4e4>
  412288:	ldur	x9, [x29, #-24]
  41228c:	add	x8, x9, x8
  412290:	b	412380 <ferror@plt+0xf4f0>
  412294:	sub	w8, w1, #0x400
  412298:	cmp	w8, #0xa
  41229c:	b.hi	412350 <ferror@plt+0xf4c0>  // b.pmore
  4122a0:	mov	w9, #0x1                   	// #1
  4122a4:	lsl	w9, w9, w8
  4122a8:	mov	w10, #0x285                 	// #645
  4122ac:	tst	w9, w10
  4122b0:	b.ne	4122cc <ferror@plt+0xf43c>  // b.any
  4122b4:	mov	w10, #0x502                 	// #1282
  4122b8:	tst	w9, w10
  4122bc:	b.eq	412324 <ferror@plt+0xf494>  // b.none
  4122c0:	mov	w0, w19
  4122c4:	bl	402ca0 <fcntl@plt>
  4122c8:	b	412308 <ferror@plt+0xf478>
  4122cc:	ldursw	x8, [x29, #-8]
  4122d0:	tbz	w8, #31, 4122f0 <ferror@plt+0xf460>
  4122d4:	add	w9, w8, #0x8
  4122d8:	cmn	w8, #0x8
  4122dc:	stur	w9, [x29, #-8]
  4122e0:	b.gt	4122f0 <ferror@plt+0xf460>
  4122e4:	ldur	x9, [x29, #-24]
  4122e8:	add	x8, x9, x8
  4122ec:	b	4122fc <ferror@plt+0xf46c>
  4122f0:	ldur	x8, [x29, #-32]
  4122f4:	add	x9, x8, #0x8
  4122f8:	stur	x9, [x29, #-32]
  4122fc:	ldr	w2, [x8]
  412300:	mov	w0, w19
  412304:	bl	402ca0 <fcntl@plt>
  412308:	mov	w20, w0
  41230c:	mov	w0, w20
  412310:	ldp	x20, x19, [sp, #240]
  412314:	ldp	x22, x21, [sp, #224]
  412318:	ldp	x29, x30, [sp, #208]
  41231c:	add	sp, sp, #0x100
  412320:	ret
  412324:	cmp	w8, #0x6
  412328:	b.ne	412350 <ferror@plt+0xf4c0>  // b.any
  41232c:	ldursw	x8, [x29, #-8]
  412330:	tbz	w8, #31, 412390 <ferror@plt+0xf500>
  412334:	add	w9, w8, #0x8
  412338:	cmn	w8, #0x8
  41233c:	stur	w9, [x29, #-8]
  412340:	b.gt	412390 <ferror@plt+0xf500>
  412344:	ldur	x9, [x29, #-24]
  412348:	add	x8, x9, x8
  41234c:	b	41239c <ferror@plt+0xf50c>
  412350:	ldursw	x8, [x29, #-8]
  412354:	tbz	w8, #31, 4123fc <ferror@plt+0xf56c>
  412358:	add	w9, w8, #0x8
  41235c:	cmn	w8, #0x8
  412360:	stur	w9, [x29, #-8]
  412364:	b.gt	4123fc <ferror@plt+0xf56c>
  412368:	ldur	x9, [x29, #-24]
  41236c:	add	x8, x9, x8
  412370:	b	412408 <ferror@plt+0xf578>
  412374:	ldur	x8, [x29, #-32]
  412378:	add	x9, x8, #0x8
  41237c:	stur	x9, [x29, #-32]
  412380:	ldr	w2, [x8]
  412384:	mov	w0, w19
  412388:	mov	w1, wzr
  41238c:	b	412304 <ferror@plt+0xf474>
  412390:	ldur	x8, [x29, #-32]
  412394:	add	x9, x8, #0x8
  412398:	stur	x9, [x29, #-32]
  41239c:	adrp	x22, 427000 <_obstack_memory_used@@Base+0x145ec>
  4123a0:	ldr	w9, [x22, #3304]
  4123a4:	ldr	w21, [x8]
  4123a8:	tbnz	w9, #31, 412424 <ferror@plt+0xf594>
  4123ac:	mov	w1, #0x406                 	// #1030
  4123b0:	mov	w0, w19
  4123b4:	mov	w2, w21
  4123b8:	bl	402ca0 <fcntl@plt>
  4123bc:	mov	w20, w0
  4123c0:	tbz	w0, #31, 412418 <ferror@plt+0xf588>
  4123c4:	bl	402e00 <__errno_location@plt>
  4123c8:	ldr	w8, [x0]
  4123cc:	cmp	w8, #0x16
  4123d0:	b.ne	412418 <ferror@plt+0xf588>  // b.any
  4123d4:	mov	w0, w19
  4123d8:	mov	w1, wzr
  4123dc:	mov	w2, w21
  4123e0:	bl	402ca0 <fcntl@plt>
  4123e4:	mov	w20, w0
  4123e8:	tbnz	w0, #31, 41230c <ferror@plt+0xf47c>
  4123ec:	mov	w8, #0xffffffff            	// #-1
  4123f0:	str	w8, [x22, #3304]
  4123f4:	mov	w8, #0x1                   	// #1
  4123f8:	b	412444 <ferror@plt+0xf5b4>
  4123fc:	ldur	x8, [x29, #-32]
  412400:	add	x9, x8, #0x8
  412404:	stur	x9, [x29, #-32]
  412408:	ldr	x2, [x8]
  41240c:	mov	w0, w19
  412410:	bl	402ca0 <fcntl@plt>
  412414:	b	412308 <ferror@plt+0xf478>
  412418:	mov	w8, #0x1                   	// #1
  41241c:	str	w8, [x22, #3304]
  412420:	b	41230c <ferror@plt+0xf47c>
  412424:	mov	w0, w19
  412428:	mov	w1, wzr
  41242c:	mov	w2, w21
  412430:	bl	402ca0 <fcntl@plt>
  412434:	ldr	w8, [x22, #3304]
  412438:	mov	w20, w0
  41243c:	cmn	w8, #0x1
  412440:	cset	w8, eq  // eq = none
  412444:	cbz	w8, 41230c <ferror@plt+0xf47c>
  412448:	tbnz	w20, #31, 41230c <ferror@plt+0xf47c>
  41244c:	mov	w1, #0x1                   	// #1
  412450:	mov	w0, w20
  412454:	bl	402ca0 <fcntl@plt>
  412458:	tbnz	w0, #31, 412474 <ferror@plt+0xf5e4>
  41245c:	orr	w2, w0, #0x1
  412460:	mov	w1, #0x2                   	// #2
  412464:	mov	w0, w20
  412468:	bl	402ca0 <fcntl@plt>
  41246c:	cmn	w0, #0x1
  412470:	b.ne	41230c <ferror@plt+0xf47c>  // b.any
  412474:	bl	402e00 <__errno_location@plt>
  412478:	ldr	w21, [x0]
  41247c:	mov	x19, x0
  412480:	mov	w0, w20
  412484:	bl	402a70 <close@plt>
  412488:	str	w21, [x19]
  41248c:	mov	w20, #0xffffffff            	// #-1
  412490:	b	41230c <ferror@plt+0xf47c>
  412494:	stp	x29, x30, [sp, #-32]!
  412498:	str	x19, [sp, #16]
  41249c:	mov	x19, x0
  4124a0:	mov	x29, sp
  4124a4:	cbz	x0, 4124cc <ferror@plt+0xf63c>
  4124a8:	mov	x0, x19
  4124ac:	bl	402da0 <__freading@plt>
  4124b0:	cbz	w0, 4124cc <ferror@plt+0xf63c>
  4124b4:	ldrb	w8, [x19, #1]
  4124b8:	tbz	w8, #0, 4124cc <ferror@plt+0xf63c>
  4124bc:	mov	w2, #0x1                   	// #1
  4124c0:	mov	x0, x19
  4124c4:	mov	x1, xzr
  4124c8:	bl	4124dc <ferror@plt+0xf64c>
  4124cc:	mov	x0, x19
  4124d0:	ldr	x19, [sp, #16]
  4124d4:	ldp	x29, x30, [sp], #32
  4124d8:	b	402cd0 <fflush@plt>
  4124dc:	stp	x29, x30, [sp, #-48]!
  4124e0:	str	x21, [sp, #16]
  4124e4:	stp	x20, x19, [sp, #32]
  4124e8:	ldp	x9, x8, [x0, #8]
  4124ec:	mov	w20, w2
  4124f0:	mov	x19, x0
  4124f4:	mov	x21, x1
  4124f8:	cmp	x8, x9
  4124fc:	mov	x29, sp
  412500:	b.ne	412518 <ferror@plt+0xf688>  // b.any
  412504:	ldp	x9, x8, [x19, #32]
  412508:	cmp	x8, x9
  41250c:	b.ne	412518 <ferror@plt+0xf688>  // b.any
  412510:	ldr	x8, [x19, #72]
  412514:	cbz	x8, 412534 <ferror@plt+0xf6a4>
  412518:	mov	x0, x19
  41251c:	mov	x1, x21
  412520:	mov	w2, w20
  412524:	ldp	x20, x19, [sp, #32]
  412528:	ldr	x21, [sp, #16]
  41252c:	ldp	x29, x30, [sp], #48
  412530:	b	402be0 <fseeko@plt>
  412534:	mov	x0, x19
  412538:	bl	4028d0 <fileno@plt>
  41253c:	mov	x1, x21
  412540:	mov	w2, w20
  412544:	bl	402890 <lseek@plt>
  412548:	cmn	x0, #0x1
  41254c:	b.eq	412568 <ferror@plt+0xf6d8>  // b.none
  412550:	ldr	w9, [x19]
  412554:	mov	x8, x0
  412558:	mov	w0, wzr
  41255c:	str	x8, [x19, #144]
  412560:	and	w9, w9, #0xffffffef
  412564:	str	w9, [x19]
  412568:	ldp	x20, x19, [sp, #32]
  41256c:	ldr	x21, [sp, #16]
  412570:	ldp	x29, x30, [sp], #48
  412574:	ret
  412578:	sub	sp, sp, #0x40
  41257c:	stp	x29, x30, [sp, #16]
  412580:	add	x29, sp, #0x10
  412584:	cmp	x0, #0x0
  412588:	sub	x8, x29, #0x4
  41258c:	stp	x20, x19, [sp, #48]
  412590:	csel	x20, x8, x0, eq  // eq = none
  412594:	mov	x0, x20
  412598:	stp	x22, x21, [sp, #32]
  41259c:	mov	x22, x2
  4125a0:	mov	x19, x1
  4125a4:	bl	402750 <mbrtowc@plt>
  4125a8:	mov	x21, x0
  4125ac:	cbz	x22, 4125d0 <ferror@plt+0xf740>
  4125b0:	cmn	x21, #0x2
  4125b4:	b.cc	4125d0 <ferror@plt+0xf740>  // b.lo, b.ul, b.last
  4125b8:	mov	w0, wzr
  4125bc:	bl	40c12c <ferror@plt+0x929c>
  4125c0:	tbnz	w0, #0, 4125d0 <ferror@plt+0xf740>
  4125c4:	ldrb	w8, [x19]
  4125c8:	mov	w21, #0x1                   	// #1
  4125cc:	str	w8, [x20]
  4125d0:	mov	x0, x21
  4125d4:	ldp	x20, x19, [sp, #48]
  4125d8:	ldp	x22, x21, [sp, #32]
  4125dc:	ldp	x29, x30, [sp, #16]
  4125e0:	add	sp, sp, #0x40
  4125e4:	ret
  4125e8:	sub	sp, sp, #0x40
  4125ec:	stp	x29, x30, [sp, #16]
  4125f0:	stp	x22, x21, [sp, #32]
  4125f4:	stp	x20, x19, [sp, #48]
  4125f8:	ldr	x8, [x0, #8]
  4125fc:	mov	w9, #0xca00                	// #51712
  412600:	movk	w9, #0x3b9a, lsl #16
  412604:	add	x29, sp, #0x10
  412608:	cmp	x8, x9
  41260c:	b.cc	412624 <ferror@plt+0xf794>  // b.lo, b.ul, b.last
  412610:	bl	402e00 <__errno_location@plt>
  412614:	mov	w8, #0x16                  	// #22
  412618:	str	w8, [x0]
  41261c:	mov	w0, #0xffffffff            	// #-1
  412620:	b	412688 <ferror@plt+0xf7f8>
  412624:	ldr	x20, [x0]
  412628:	mov	w21, #0xa400                	// #41984
  41262c:	mov	x22, #0xffffffffffff5c00    	// #-41984
  412630:	mov	x19, x1
  412634:	movk	w21, #0x1f, lsl #16
  412638:	movk	x22, #0xffe0, lsl #16
  41263c:	cmp	x20, x21
  412640:	str	x8, [sp, #8]
  412644:	b.le	412678 <ferror@plt+0xf7e8>
  412648:	mov	x0, sp
  41264c:	mov	x1, x19
  412650:	str	x21, [sp]
  412654:	bl	402c40 <nanosleep@plt>
  412658:	mov	x8, xzr
  41265c:	add	x20, x20, x22
  412660:	cbz	w0, 41263c <ferror@plt+0xf7ac>
  412664:	cbz	x19, 412688 <ferror@plt+0xf7f8>
  412668:	ldr	x8, [x19]
  41266c:	add	x8, x8, x20
  412670:	str	x8, [x19]
  412674:	b	412688 <ferror@plt+0xf7f8>
  412678:	mov	x0, sp
  41267c:	mov	x1, x19
  412680:	str	x20, [sp]
  412684:	bl	402c40 <nanosleep@plt>
  412688:	ldp	x20, x19, [sp, #48]
  41268c:	ldp	x22, x21, [sp, #32]
  412690:	ldp	x29, x30, [sp, #16]
  412694:	add	sp, sp, #0x40
  412698:	ret

000000000041269c <_obstack_begin@@Base>:
  41269c:	stp	x29, x30, [sp, #-48]!
  4126a0:	stp	x20, x19, [sp, #32]
  4126a4:	ldrb	w8, [x0, #80]
  4126a8:	cmp	x2, #0x0
  4126ac:	mov	w9, #0x10                  	// #16
  4126b0:	csel	x20, x9, x2, eq  // eq = none
  4126b4:	mov	w9, #0xfe0                 	// #4064
  4126b8:	cmp	x1, #0x0
  4126bc:	str	x21, [sp, #16]
  4126c0:	mov	x19, x0
  4126c4:	str	x4, [x0, #64]
  4126c8:	csel	x0, x9, x1, eq  // eq = none
  4126cc:	and	w8, w8, #0xfe
  4126d0:	sub	x21, x20, #0x1
  4126d4:	mov	x29, sp
  4126d8:	strb	w8, [x19, #80]
  4126dc:	str	x0, [x19]
  4126e0:	stp	x21, x3, [x19, #48]
  4126e4:	blr	x3
  4126e8:	str	x0, [x19, #8]
  4126ec:	cbz	x0, 412738 <_obstack_begin@@Base+0x9c>
  4126f0:	ldr	x10, [x19]
  4126f4:	add	x8, x0, x21
  4126f8:	neg	x9, x20
  4126fc:	add	x8, x8, #0x10
  412700:	and	x8, x8, x9
  412704:	stp	x8, x8, [x19, #16]
  412708:	add	x8, x0, x10
  41270c:	str	x8, [x0]
  412710:	str	x8, [x19, #32]
  412714:	str	xzr, [x0, #8]
  412718:	ldrb	w8, [x19, #80]
  41271c:	ldr	x21, [sp, #16]
  412720:	mov	w0, #0x1                   	// #1
  412724:	and	w8, w8, #0xfffffff9
  412728:	strb	w8, [x19, #80]
  41272c:	ldp	x20, x19, [sp, #32]
  412730:	ldp	x29, x30, [sp], #48
  412734:	ret
  412738:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  41273c:	ldr	x8, [x8, #1304]
  412740:	blr	x8

0000000000412744 <_obstack_begin_1@@Base>:
  412744:	stp	x29, x30, [sp, #-48]!
  412748:	stp	x20, x19, [sp, #32]
  41274c:	ldrb	w8, [x0, #80]
  412750:	cmp	x2, #0x0
  412754:	mov	w9, #0x10                  	// #16
  412758:	csel	x20, x9, x2, eq  // eq = none
  41275c:	mov	w9, #0xfe0                 	// #4064
  412760:	cmp	x1, #0x0
  412764:	str	x21, [sp, #16]
  412768:	csel	x1, x9, x1, eq  // eq = none
  41276c:	orr	w8, w8, #0x1
  412770:	sub	x21, x20, #0x1
  412774:	mov	x19, x0
  412778:	stp	x4, x5, [x0, #64]
  41277c:	strb	w8, [x0, #80]
  412780:	str	x1, [x0]
  412784:	stp	x21, x3, [x0, #48]
  412788:	mov	x0, x5
  41278c:	mov	x29, sp
  412790:	blr	x3
  412794:	str	x0, [x19, #8]
  412798:	cbz	x0, 4127e4 <_obstack_begin_1@@Base+0xa0>
  41279c:	ldr	x10, [x19]
  4127a0:	add	x8, x0, x21
  4127a4:	neg	x9, x20
  4127a8:	add	x8, x8, #0x10
  4127ac:	and	x8, x8, x9
  4127b0:	stp	x8, x8, [x19, #16]
  4127b4:	add	x8, x0, x10
  4127b8:	str	x8, [x0]
  4127bc:	str	x8, [x19, #32]
  4127c0:	str	xzr, [x0, #8]
  4127c4:	ldrb	w8, [x19, #80]
  4127c8:	ldr	x21, [sp, #16]
  4127cc:	mov	w0, #0x1                   	// #1
  4127d0:	and	w8, w8, #0xfffffff9
  4127d4:	strb	w8, [x19, #80]
  4127d8:	ldp	x20, x19, [sp, #32]
  4127dc:	ldp	x29, x30, [sp], #48
  4127e0:	ret
  4127e4:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  4127e8:	ldr	x8, [x8, #1304]
  4127ec:	blr	x8

00000000004127f0 <_obstack_newchunk@@Base>:
  4127f0:	stp	x29, x30, [sp, #-64]!
  4127f4:	str	x23, [sp, #16]
  4127f8:	stp	x22, x21, [sp, #32]
  4127fc:	stp	x20, x19, [sp, #48]
  412800:	ldp	x9, x8, [x0, #16]
  412804:	ldr	x10, [x0, #48]
  412808:	ldr	x11, [x0]
  41280c:	mov	x29, sp
  412810:	sub	x20, x8, x9
  412814:	adds	x8, x20, x1
  412818:	lsr	x9, x20, #3
  41281c:	cset	w12, cs  // cs = hs, nlast
  412820:	adds	x10, x8, x10
  412824:	add	x9, x9, #0x64
  412828:	cset	w8, cs  // cs = hs, nlast
  41282c:	adds	x9, x9, x10
  412830:	csel	x9, x10, x9, cs  // cs = hs, nlast
  412834:	cmp	x9, x11
  412838:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  41283c:	tbnz	w12, #0, 412928 <_obstack_newchunk@@Base+0x138>
  412840:	tbnz	w8, #0, 412928 <_obstack_newchunk@@Base+0x138>
  412844:	ldrb	w8, [x0, #80]
  412848:	ldr	x21, [x0, #8]
  41284c:	mov	x19, x0
  412850:	tbnz	w8, #0, 412864 <_obstack_newchunk@@Base+0x74>
  412854:	ldr	x8, [x19, #56]
  412858:	mov	x0, x23
  41285c:	blr	x8
  412860:	b	412874 <_obstack_newchunk@@Base+0x84>
  412864:	ldr	x8, [x19, #56]
  412868:	ldr	x0, [x19, #72]
  41286c:	mov	x1, x23
  412870:	blr	x8
  412874:	mov	x22, x0
  412878:	cbz	x0, 412928 <_obstack_newchunk@@Base+0x138>
  41287c:	add	x8, x22, x23
  412880:	str	x22, [x19, #8]
  412884:	str	x21, [x22, #8]
  412888:	str	x8, [x19, #32]
  41288c:	str	x8, [x22]
  412890:	ldr	x8, [x19, #48]
  412894:	ldr	x1, [x19, #16]
  412898:	mov	x2, x20
  41289c:	add	x9, x22, x8
  4128a0:	add	x9, x9, #0x10
  4128a4:	bic	x23, x9, x8
  4128a8:	mov	x0, x23
  4128ac:	bl	402760 <memcpy@plt>
  4128b0:	ldrb	w8, [x19, #80]
  4128b4:	tbnz	w8, #1, 412900 <_obstack_newchunk@@Base+0x110>
  4128b8:	ldr	x8, [x19, #48]
  4128bc:	ldr	x9, [x19, #16]
  4128c0:	add	x10, x21, x8
  4128c4:	add	x10, x10, #0x10
  4128c8:	bic	x8, x10, x8
  4128cc:	cmp	x9, x8
  4128d0:	b.ne	412900 <_obstack_newchunk@@Base+0x110>  // b.any
  4128d4:	ldr	x8, [x21, #8]
  4128d8:	str	x8, [x22, #8]
  4128dc:	ldrb	w8, [x19, #80]
  4128e0:	tbnz	w8, #0, 4128f4 <_obstack_newchunk@@Base+0x104>
  4128e4:	ldr	x8, [x19, #64]
  4128e8:	mov	x0, x21
  4128ec:	blr	x8
  4128f0:	b	412900 <_obstack_newchunk@@Base+0x110>
  4128f4:	ldp	x8, x0, [x19, #64]
  4128f8:	mov	x1, x21
  4128fc:	blr	x8
  412900:	ldrb	w8, [x19, #80]
  412904:	add	x9, x23, x20
  412908:	stp	x23, x9, [x19, #16]
  41290c:	ldr	x23, [sp, #16]
  412910:	and	w8, w8, #0xfffffffd
  412914:	strb	w8, [x19, #80]
  412918:	ldp	x20, x19, [sp, #48]
  41291c:	ldp	x22, x21, [sp, #32]
  412920:	ldp	x29, x30, [sp], #64
  412924:	ret
  412928:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  41292c:	ldr	x8, [x8, #1304]
  412930:	blr	x8

0000000000412934 <_obstack_allocated_p@@Base>:
  412934:	ldr	x8, [x0, #8]
  412938:	cbnz	x8, 41294c <_obstack_allocated_p@@Base+0x18>
  41293c:	mov	w0, wzr
  412940:	ret
  412944:	ldr	x8, [x8, #8]
  412948:	cbz	x8, 41293c <_obstack_allocated_p@@Base+0x8>
  41294c:	cmp	x8, x1
  412950:	b.cs	412944 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  412954:	ldr	x9, [x8]
  412958:	cmp	x9, x1
  41295c:	b.cc	412944 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  412960:	mov	w0, #0x1                   	// #1
  412964:	ret

0000000000412968 <_obstack_free@@Base>:
  412968:	stp	x29, x30, [sp, #-48]!
  41296c:	stp	x20, x19, [sp, #32]
  412970:	ldr	x8, [x0, #8]
  412974:	mov	x20, x1
  412978:	str	x21, [sp, #16]
  41297c:	mov	x29, sp
  412980:	cbz	x8, 4129dc <_obstack_free@@Base+0x74>
  412984:	mov	x19, x0
  412988:	b	4129ac <_obstack_free@@Base+0x44>
  41298c:	ldr	x9, [x19, #64]
  412990:	mov	x0, x8
  412994:	blr	x9
  412998:	ldrb	w8, [x19, #80]
  41299c:	orr	w8, w8, #0x2
  4129a0:	strb	w8, [x19, #80]
  4129a4:	mov	x8, x21
  4129a8:	cbz	x21, 4129dc <_obstack_free@@Base+0x74>
  4129ac:	cmp	x8, x20
  4129b0:	b.cs	4129c0 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  4129b4:	ldr	x9, [x8]
  4129b8:	cmp	x9, x20
  4129bc:	b.cs	4129f0 <_obstack_free@@Base+0x88>  // b.hs, b.nlast
  4129c0:	ldrb	w9, [x19, #80]
  4129c4:	ldr	x21, [x8, #8]
  4129c8:	tbz	w9, #0, 41298c <_obstack_free@@Base+0x24>
  4129cc:	ldp	x9, x0, [x19, #64]
  4129d0:	mov	x1, x8
  4129d4:	blr	x9
  4129d8:	b	412998 <_obstack_free@@Base+0x30>
  4129dc:	cbnz	x20, 412a10 <_obstack_free@@Base+0xa8>
  4129e0:	ldp	x20, x19, [sp, #32]
  4129e4:	ldr	x21, [sp, #16]
  4129e8:	ldp	x29, x30, [sp], #48
  4129ec:	ret
  4129f0:	stp	x20, x20, [x19, #16]
  4129f4:	ldr	x9, [x8]
  4129f8:	str	x8, [x19, #8]
  4129fc:	str	x9, [x19, #32]
  412a00:	ldp	x20, x19, [sp, #32]
  412a04:	ldr	x21, [sp, #16]
  412a08:	ldp	x29, x30, [sp], #48
  412a0c:	ret
  412a10:	bl	402ae0 <abort@plt>

0000000000412a14 <_obstack_memory_used@@Base>:
  412a14:	ldr	x8, [x0, #8]
  412a18:	cbz	x8, 412a34 <_obstack_memory_used@@Base+0x20>
  412a1c:	mov	x0, xzr
  412a20:	sub	x10, x0, x8
  412a24:	ldp	x9, x8, [x8]
  412a28:	add	x0, x10, x9
  412a2c:	cbnz	x8, 412a20 <_obstack_memory_used@@Base+0xc>
  412a30:	ret
  412a34:	mov	x0, xzr
  412a38:	ret
  412a3c:	stp	x29, x30, [sp, #-32]!
  412a40:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  412a44:	str	x19, [sp, #16]
  412a48:	ldr	x19, [x8, #1320]
  412a4c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x35ec>
  412a50:	add	x1, x1, #0x1e3
  412a54:	mov	w2, #0x5                   	// #5
  412a58:	mov	x0, xzr
  412a5c:	mov	x29, sp
  412a60:	bl	402d70 <dcgettext@plt>
  412a64:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x25ec>
  412a68:	mov	x3, x0
  412a6c:	add	x2, x2, #0xede
  412a70:	mov	w1, #0x1                   	// #1
  412a74:	mov	x0, x19
  412a78:	bl	402b90 <__fprintf_chk@plt>
  412a7c:	adrp	x8, 427000 <_obstack_memory_used@@Base+0x145ec>
  412a80:	ldr	w0, [x8, #1208]
  412a84:	bl	4027d0 <exit@plt>
  412a88:	sub	w9, w0, #0x41
  412a8c:	mov	w8, w0
  412a90:	cmp	w9, #0x39
  412a94:	mov	w0, #0x1                   	// #1
  412a98:	b.hi	412ab0 <_obstack_memory_used@@Base+0x9c>  // b.pmore
  412a9c:	mov	w10, #0x1                   	// #1
  412aa0:	lsl	x9, x10, x9
  412aa4:	tst	x9, #0x3ffffff03ffffff
  412aa8:	b.eq	412ab0 <_obstack_memory_used@@Base+0x9c>  // b.none
  412aac:	ret
  412ab0:	sub	w8, w8, #0x30
  412ab4:	cmp	w8, #0xa
  412ab8:	b.cc	412aac <_obstack_memory_used@@Base+0x98>  // b.lo, b.ul, b.last
  412abc:	mov	w0, wzr
  412ac0:	ret
  412ac4:	sub	w8, w0, #0x41
  412ac8:	cmp	w8, #0x39
  412acc:	b.hi	412ae0 <_obstack_memory_used@@Base+0xcc>  // b.pmore
  412ad0:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  412ad4:	lsr	x8, x9, x8
  412ad8:	and	w0, w8, #0x1
  412adc:	ret
  412ae0:	mov	w0, wzr
  412ae4:	ret
  412ae8:	cmp	w0, #0x80
  412aec:	cset	w0, cc  // cc = lo, ul, last
  412af0:	ret
  412af4:	cmp	w0, #0x20
  412af8:	cset	w8, eq  // eq = none
  412afc:	cmp	w0, #0x9
  412b00:	cset	w9, eq  // eq = none
  412b04:	orr	w0, w8, w9
  412b08:	ret
  412b0c:	mov	w8, w0
  412b10:	cmp	w0, #0x20
  412b14:	mov	w0, #0x1                   	// #1
  412b18:	b.cs	412b20 <_obstack_memory_used@@Base+0x10c>  // b.hs, b.nlast
  412b1c:	ret
  412b20:	cmp	w8, #0x7f
  412b24:	b.eq	412b1c <_obstack_memory_used@@Base+0x108>  // b.none
  412b28:	mov	w0, wzr
  412b2c:	ret
  412b30:	sub	w8, w0, #0x30
  412b34:	cmp	w8, #0xa
  412b38:	cset	w0, cc  // cc = lo, ul, last
  412b3c:	ret
  412b40:	sub	w8, w0, #0x21
  412b44:	cmp	w8, #0x5e
  412b48:	cset	w0, cc  // cc = lo, ul, last
  412b4c:	ret
  412b50:	sub	w8, w0, #0x61
  412b54:	cmp	w8, #0x1a
  412b58:	cset	w0, cc  // cc = lo, ul, last
  412b5c:	ret
  412b60:	sub	w8, w0, #0x20
  412b64:	cmp	w8, #0x5f
  412b68:	cset	w0, cc  // cc = lo, ul, last
  412b6c:	ret
  412b70:	sub	w8, w0, #0x21
  412b74:	cmp	w8, #0x5d
  412b78:	b.hi	412b9c <_obstack_memory_used@@Base+0x188>  // b.pmore
  412b7c:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x35ec>
  412b80:	add	x9, x9, #0x425
  412b84:	adr	x10, 412b98 <_obstack_memory_used@@Base+0x184>
  412b88:	ldrb	w11, [x9, x8]
  412b8c:	add	x10, x10, x11, lsl #2
  412b90:	mov	w0, #0x1                   	// #1
  412b94:	br	x10
  412b98:	ret
  412b9c:	mov	w0, wzr
  412ba0:	ret
  412ba4:	sub	w8, w0, #0x9
  412ba8:	cmp	w8, #0x17
  412bac:	b.hi	412bc4 <_obstack_memory_used@@Base+0x1b0>  // b.pmore
  412bb0:	mov	w9, #0x1f                  	// #31
  412bb4:	movk	w9, #0x80, lsl #16
  412bb8:	lsr	w8, w9, w8
  412bbc:	and	w0, w8, #0x1
  412bc0:	ret
  412bc4:	mov	w0, wzr
  412bc8:	ret
  412bcc:	sub	w8, w0, #0x41
  412bd0:	cmp	w8, #0x1a
  412bd4:	cset	w0, cc  // cc = lo, ul, last
  412bd8:	ret
  412bdc:	sub	w8, w0, #0x30
  412be0:	cmp	w8, #0x36
  412be4:	b.hi	412bfc <_obstack_memory_used@@Base+0x1e8>  // b.pmore
  412be8:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  412bec:	movk	x9, #0x3ff
  412bf0:	lsr	x8, x9, x8
  412bf4:	and	w0, w8, #0x1
  412bf8:	ret
  412bfc:	mov	w0, wzr
  412c00:	ret
  412c04:	sub	w8, w0, #0x41
  412c08:	add	w9, w0, #0x20
  412c0c:	cmp	w8, #0x1a
  412c10:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  412c14:	ret
  412c18:	sub	w8, w0, #0x61
  412c1c:	sub	w9, w0, #0x20
  412c20:	cmp	w8, #0x1a
  412c24:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  412c28:	ret
  412c2c:	stp	x29, x30, [sp, #-48]!
  412c30:	str	x21, [sp, #16]
  412c34:	stp	x20, x19, [sp, #32]
  412c38:	mov	x29, sp
  412c3c:	mov	x20, x0
  412c40:	bl	4028a0 <__fpending@plt>
  412c44:	ldr	w21, [x20]
  412c48:	mov	x19, x0
  412c4c:	mov	x0, x20
  412c50:	bl	412154 <ferror@plt+0xf2c4>
  412c54:	mov	w8, w0
  412c58:	tbnz	w21, #5, 412c8c <_obstack_memory_used@@Base+0x278>
  412c5c:	cmp	w8, #0x0
  412c60:	csetm	w0, ne  // ne = any
  412c64:	cbnz	x19, 412c7c <_obstack_memory_used@@Base+0x268>
  412c68:	cbz	w8, 412c7c <_obstack_memory_used@@Base+0x268>
  412c6c:	bl	402e00 <__errno_location@plt>
  412c70:	ldr	w8, [x0]
  412c74:	cmp	w8, #0x9
  412c78:	csetm	w0, ne  // ne = any
  412c7c:	ldp	x20, x19, [sp, #32]
  412c80:	ldr	x21, [sp, #16]
  412c84:	ldp	x29, x30, [sp], #48
  412c88:	ret
  412c8c:	cbnz	w8, 412c98 <_obstack_memory_used@@Base+0x284>
  412c90:	bl	402e00 <__errno_location@plt>
  412c94:	str	wzr, [x0]
  412c98:	mov	w0, #0xffffffff            	// #-1
  412c9c:	ldp	x20, x19, [sp, #32]
  412ca0:	ldr	x21, [sp, #16]
  412ca4:	ldp	x29, x30, [sp], #48
  412ca8:	ret
  412cac:	mov	x8, #0xc3e0000000000000    	// #-4332462841530417152
  412cb0:	fmov	d1, x8
  412cb4:	fcmp	d0, d1
  412cb8:	b.le	412d24 <_obstack_memory_used@@Base+0x310>
  412cbc:	mov	x8, #0x43e0000000000000    	// #4890909195324358656
  412cc0:	fmov	d1, x8
  412cc4:	mov	w8, #0xca00                	// #51712
  412cc8:	fcmp	d0, d1
  412ccc:	movk	w8, #0x3b9a, lsl #16
  412cd0:	b.pl	412d30 <_obstack_memory_used@@Base+0x31c>  // b.nfrst
  412cd4:	fcvtzs	x9, d0
  412cd8:	mov	x10, #0xcd6500000000        	// #225833675390976
  412cdc:	movk	x10, #0x41cd, lsl #48
  412ce0:	scvtf	d1, x9
  412ce4:	fsub	d0, d0, d1
  412ce8:	fmov	d1, x10
  412cec:	fmul	d0, d0, d1
  412cf0:	fcvtzs	x10, d0
  412cf4:	scvtf	d1, x10
  412cf8:	fcmp	d0, d1
  412cfc:	cset	w11, gt
  412d00:	add	x10, x11, x10
  412d04:	sdiv	x11, x10, x8
  412d08:	msub	x10, x11, x8, x10
  412d0c:	add	x9, x11, x9
  412d10:	add	x8, x10, x8
  412d14:	cmp	x10, #0x0
  412d18:	add	x0, x9, x10, asr #63
  412d1c:	csel	x1, x8, x10, lt  // lt = tstop
  412d20:	ret
  412d24:	mov	x1, xzr
  412d28:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  412d2c:	ret
  412d30:	sub	x1, x8, #0x1
  412d34:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  412d38:	ret
  412d3c:	stp	x29, x30, [sp, #-48]!
  412d40:	stp	x20, x19, [sp, #32]
  412d44:	mov	w19, w0
  412d48:	cmp	w0, #0x2
  412d4c:	stp	x22, x21, [sp, #16]
  412d50:	mov	x29, sp
  412d54:	b.hi	412d90 <_obstack_memory_used@@Base+0x37c>  // b.pmore
  412d58:	mov	w0, w19
  412d5c:	bl	412da4 <_obstack_memory_used@@Base+0x390>
  412d60:	mov	w20, w0
  412d64:	bl	402e00 <__errno_location@plt>
  412d68:	ldr	w22, [x0]
  412d6c:	mov	x21, x0
  412d70:	mov	w0, w19
  412d74:	bl	402a70 <close@plt>
  412d78:	str	w22, [x21]
  412d7c:	mov	w0, w20
  412d80:	ldp	x20, x19, [sp, #32]
  412d84:	ldp	x22, x21, [sp, #16]
  412d88:	ldp	x29, x30, [sp], #48
  412d8c:	ret
  412d90:	mov	w0, w19
  412d94:	ldp	x20, x19, [sp, #32]
  412d98:	ldp	x22, x21, [sp, #16]
  412d9c:	ldp	x29, x30, [sp], #48
  412da0:	ret
  412da4:	lsl	w8, w1, #12
  412da8:	mov	w9, #0x406                 	// #1030
  412dac:	and	w1, w9, w8, asr #31
  412db0:	mov	w2, #0x3                   	// #3
  412db4:	b	4121e8 <ferror@plt+0xf358>
  412db8:	stp	x29, x30, [sp, #-48]!
  412dbc:	stp	x22, x21, [sp, #16]
  412dc0:	stp	x20, x19, [sp, #32]
  412dc4:	mov	x29, sp
  412dc8:	mov	x20, x1
  412dcc:	bl	402920 <fopen@plt>
  412dd0:	mov	x19, x0
  412dd4:	cbz	x0, 412e50 <_obstack_memory_used@@Base+0x43c>
  412dd8:	mov	x0, x19
  412ddc:	bl	4028d0 <fileno@plt>
  412de0:	cmp	w0, #0x2
  412de4:	b.hi	412e50 <_obstack_memory_used@@Base+0x43c>  // b.pmore
  412de8:	bl	413078 <_obstack_memory_used@@Base+0x664>
  412dec:	tbnz	w0, #31, 412e34 <_obstack_memory_used@@Base+0x420>
  412df0:	mov	w21, w0
  412df4:	mov	x0, x19
  412df8:	bl	412154 <ferror@plt+0xf2c4>
  412dfc:	cbnz	w0, 412e14 <_obstack_memory_used@@Base+0x400>
  412e00:	mov	w0, w21
  412e04:	mov	x1, x20
  412e08:	bl	4029f0 <fdopen@plt>
  412e0c:	mov	x19, x0
  412e10:	cbnz	x0, 412e50 <_obstack_memory_used@@Base+0x43c>
  412e14:	bl	402e00 <__errno_location@plt>
  412e18:	ldr	w22, [x0]
  412e1c:	mov	x20, x0
  412e20:	mov	w0, w21
  412e24:	bl	402a70 <close@plt>
  412e28:	mov	x19, xzr
  412e2c:	str	w22, [x20]
  412e30:	b	412e50 <_obstack_memory_used@@Base+0x43c>
  412e34:	bl	402e00 <__errno_location@plt>
  412e38:	ldr	w21, [x0]
  412e3c:	mov	x20, x0
  412e40:	mov	x0, x19
  412e44:	bl	412154 <ferror@plt+0xf2c4>
  412e48:	mov	x19, xzr
  412e4c:	str	w21, [x20]
  412e50:	mov	x0, x19
  412e54:	ldp	x20, x19, [sp, #32]
  412e58:	ldp	x22, x21, [sp, #16]
  412e5c:	ldp	x29, x30, [sp], #48
  412e60:	ret
  412e64:	stp	x29, x30, [sp, #-16]!
  412e68:	mov	w0, #0xe                   	// #14
  412e6c:	mov	x29, sp
  412e70:	bl	402910 <nl_langinfo@plt>
  412e74:	adrp	x8, 415000 <_obstack_memory_used@@Base+0x25ec>
  412e78:	add	x8, x8, #0xfb8
  412e7c:	cmp	x0, #0x0
  412e80:	csel	x8, x8, x0, eq  // eq = none
  412e84:	ldrb	w9, [x8]
  412e88:	adrp	x10, 416000 <_obstack_memory_used@@Base+0x35ec>
  412e8c:	add	x10, x10, #0x483
  412e90:	cmp	w9, #0x0
  412e94:	csel	x0, x10, x8, eq  // eq = none
  412e98:	ldp	x29, x30, [sp], #16
  412e9c:	ret
  412ea0:	sub	sp, sp, #0x70
  412ea4:	stp	x22, x21, [sp, #80]
  412ea8:	stp	x20, x19, [sp, #96]
  412eac:	mov	x19, x3
  412eb0:	mov	x20, x2
  412eb4:	mov	x21, x1
  412eb8:	cmp	x1, x3
  412ebc:	mov	x22, x0
  412ec0:	stp	x29, x30, [sp, #16]
  412ec4:	stp	x28, x27, [sp, #32]
  412ec8:	stp	x26, x25, [sp, #48]
  412ecc:	stp	x24, x23, [sp, #64]
  412ed0:	add	x29, sp, #0x10
  412ed4:	b.ne	412eec <_obstack_memory_used@@Base+0x4d8>  // b.any
  412ed8:	mov	x0, x22
  412edc:	mov	x1, x20
  412ee0:	mov	x2, x21
  412ee4:	bl	402a30 <bcmp@plt>
  412ee8:	cbz	w0, 412f84 <_obstack_memory_used@@Base+0x570>
  412eec:	ldrb	w8, [x22, x21]
  412ef0:	add	x28, x21, #0x1
  412ef4:	add	x26, x19, #0x1
  412ef8:	stur	w8, [x29, #-4]
  412efc:	ldrb	w8, [x20, x19]
  412f00:	strb	wzr, [x22, x21]
  412f04:	strb	wzr, [x20, x19]
  412f08:	str	w8, [sp, #8]
  412f0c:	bl	402e00 <__errno_location@plt>
  412f10:	mov	x23, x0
  412f14:	mov	x24, x20
  412f18:	mov	x25, x22
  412f1c:	mov	x0, x25
  412f20:	mov	x1, x24
  412f24:	str	wzr, [x23]
  412f28:	bl	402d90 <strcoll@plt>
  412f2c:	cbnz	w0, 412f70 <_obstack_memory_used@@Base+0x55c>
  412f30:	mov	x0, x25
  412f34:	bl	4027c0 <strlen@plt>
  412f38:	add	x27, x0, #0x1
  412f3c:	mov	x0, x24
  412f40:	bl	4027c0 <strlen@plt>
  412f44:	add	x8, x0, #0x1
  412f48:	sub	x28, x28, x27
  412f4c:	sub	x26, x26, x8
  412f50:	cbz	x28, 412f68 <_obstack_memory_used@@Base+0x554>
  412f54:	add	x24, x24, x8
  412f58:	add	x25, x25, x27
  412f5c:	cbnz	x26, 412f1c <_obstack_memory_used@@Base+0x508>
  412f60:	mov	w0, #0x1                   	// #1
  412f64:	b	412f70 <_obstack_memory_used@@Base+0x55c>
  412f68:	cmp	x26, #0x0
  412f6c:	csetm	w0, ne  // ne = any
  412f70:	ldur	w8, [x29, #-4]
  412f74:	ldr	w9, [sp, #8]
  412f78:	strb	w8, [x22, x21]
  412f7c:	strb	w9, [x20, x19]
  412f80:	b	412f94 <_obstack_memory_used@@Base+0x580>
  412f84:	bl	402e00 <__errno_location@plt>
  412f88:	mov	x8, x0
  412f8c:	mov	w0, wzr
  412f90:	str	wzr, [x8]
  412f94:	ldp	x20, x19, [sp, #96]
  412f98:	ldp	x22, x21, [sp, #80]
  412f9c:	ldp	x24, x23, [sp, #64]
  412fa0:	ldp	x26, x25, [sp, #48]
  412fa4:	ldp	x28, x27, [sp, #32]
  412fa8:	ldp	x29, x30, [sp, #16]
  412fac:	add	sp, sp, #0x70
  412fb0:	ret
  412fb4:	stp	x29, x30, [sp, #-64]!
  412fb8:	stp	x22, x21, [sp, #32]
  412fbc:	stp	x20, x19, [sp, #48]
  412fc0:	mov	x19, x3
  412fc4:	mov	x20, x2
  412fc8:	mov	x21, x1
  412fcc:	cmp	x1, x3
  412fd0:	mov	x22, x0
  412fd4:	stp	x24, x23, [sp, #16]
  412fd8:	mov	x29, sp
  412fdc:	b.ne	412ff4 <_obstack_memory_used@@Base+0x5e0>  // b.any
  412fe0:	mov	x0, x22
  412fe4:	mov	x1, x20
  412fe8:	mov	x2, x21
  412fec:	bl	402a30 <bcmp@plt>
  412ff0:	cbz	w0, 413054 <_obstack_memory_used@@Base+0x640>
  412ff4:	bl	402e00 <__errno_location@plt>
  412ff8:	mov	x23, x0
  412ffc:	mov	x0, x22
  413000:	mov	x1, x20
  413004:	str	wzr, [x23]
  413008:	bl	402d90 <strcoll@plt>
  41300c:	cbnz	w0, 413064 <_obstack_memory_used@@Base+0x650>
  413010:	mov	x0, x22
  413014:	bl	4027c0 <strlen@plt>
  413018:	add	x24, x0, #0x1
  41301c:	mov	x0, x20
  413020:	bl	4027c0 <strlen@plt>
  413024:	add	x8, x0, #0x1
  413028:	sub	x21, x21, x24
  41302c:	sub	x19, x19, x8
  413030:	cbz	x21, 413048 <_obstack_memory_used@@Base+0x634>
  413034:	add	x20, x20, x8
  413038:	add	x22, x22, x24
  41303c:	cbnz	x19, 412ffc <_obstack_memory_used@@Base+0x5e8>
  413040:	mov	w0, #0x1                   	// #1
  413044:	b	413064 <_obstack_memory_used@@Base+0x650>
  413048:	cmp	x19, #0x0
  41304c:	csetm	w0, ne  // ne = any
  413050:	b	413064 <_obstack_memory_used@@Base+0x650>
  413054:	bl	402e00 <__errno_location@plt>
  413058:	mov	x8, x0
  41305c:	mov	w0, wzr
  413060:	str	wzr, [x8]
  413064:	ldp	x20, x19, [sp, #48]
  413068:	ldp	x22, x21, [sp, #32]
  41306c:	ldp	x24, x23, [sp, #16]
  413070:	ldp	x29, x30, [sp], #64
  413074:	ret
  413078:	mov	w2, #0x3                   	// #3
  41307c:	mov	w1, wzr
  413080:	b	4121e8 <ferror@plt+0xf358>
  413084:	nop
  413088:	stp	x29, x30, [sp, #-48]!
  41308c:	mov	x29, sp
  413090:	str	q0, [sp, #16]
  413094:	str	q1, [sp, #32]
  413098:	ldp	x6, x1, [sp, #16]
  41309c:	ldp	x7, x0, [sp, #32]
  4130a0:	mrs	x2, fpcr
  4130a4:	ubfx	x4, x1, #48, #15
  4130a8:	lsr	x2, x1, #63
  4130ac:	lsr	x3, x0, #63
  4130b0:	ubfx	x9, x0, #0, #48
  4130b4:	mov	x5, #0x7fff                	// #32767
  4130b8:	mov	x10, x6
  4130bc:	cmp	x4, x5
  4130c0:	and	w2, w2, #0xff
  4130c4:	ubfx	x1, x1, #0, #48
  4130c8:	and	w3, w3, #0xff
  4130cc:	ubfx	x0, x0, #48, #15
  4130d0:	b.eq	413104 <_obstack_memory_used@@Base+0x6f0>  // b.none
  4130d4:	cmp	x0, x5
  4130d8:	b.eq	4130f0 <_obstack_memory_used@@Base+0x6dc>  // b.none
  4130dc:	cmp	x4, x0
  4130e0:	mov	w0, #0x1                   	// #1
  4130e4:	b.eq	41311c <_obstack_memory_used@@Base+0x708>  // b.none
  4130e8:	ldp	x29, x30, [sp], #48
  4130ec:	ret
  4130f0:	orr	x8, x9, x7
  4130f4:	cbnz	x8, 413180 <_obstack_memory_used@@Base+0x76c>
  4130f8:	mov	w0, #0x1                   	// #1
  4130fc:	ldp	x29, x30, [sp], #48
  413100:	ret
  413104:	orr	x5, x1, x6
  413108:	cbnz	x5, 413150 <_obstack_memory_used@@Base+0x73c>
  41310c:	cmp	x0, x4
  413110:	b.ne	4130f8 <_obstack_memory_used@@Base+0x6e4>  // b.any
  413114:	orr	x8, x9, x7
  413118:	cbnz	x8, 413180 <_obstack_memory_used@@Base+0x76c>
  41311c:	cmp	x1, x9
  413120:	mov	w0, #0x1                   	// #1
  413124:	ccmp	x6, x7, #0x0, eq  // eq = none
  413128:	b.ne	4130e8 <_obstack_memory_used@@Base+0x6d4>  // b.any
  41312c:	cmp	w2, w3
  413130:	mov	w0, #0x0                   	// #0
  413134:	b.eq	4130e8 <_obstack_memory_used@@Base+0x6d4>  // b.none
  413138:	mov	w0, #0x1                   	// #1
  41313c:	cbnz	x4, 4130e8 <_obstack_memory_used@@Base+0x6d4>
  413140:	orr	x1, x1, x10
  413144:	cmp	x1, #0x0
  413148:	cset	w0, ne  // ne = any
  41314c:	b	4130e8 <_obstack_memory_used@@Base+0x6d4>
  413150:	tst	x1, #0x800000000000
  413154:	b.ne	41316c <_obstack_memory_used@@Base+0x758>  // b.any
  413158:	mov	w0, #0x1                   	// #1
  41315c:	bl	4134e8 <_obstack_memory_used@@Base+0xad4>
  413160:	mov	w0, #0x1                   	// #1
  413164:	ldp	x29, x30, [sp], #48
  413168:	ret
  41316c:	cmp	x0, x4
  413170:	mov	w0, #0x1                   	// #1
  413174:	b.ne	4130e8 <_obstack_memory_used@@Base+0x6d4>  // b.any
  413178:	orr	x8, x9, x7
  41317c:	cbz	x8, 4130e8 <_obstack_memory_used@@Base+0x6d4>
  413180:	tst	x9, #0x800000000000
  413184:	b.eq	413158 <_obstack_memory_used@@Base+0x744>  // b.none
  413188:	b	4130f8 <_obstack_memory_used@@Base+0x6e4>
  41318c:	nop
  413190:	stp	x29, x30, [sp, #-48]!
  413194:	mov	x29, sp
  413198:	str	q0, [sp, #16]
  41319c:	str	q1, [sp, #32]
  4131a0:	ldp	x8, x1, [sp, #16]
  4131a4:	ldp	x9, x0, [sp, #32]
  4131a8:	mrs	x2, fpcr
  4131ac:	ubfx	x4, x1, #48, #15
  4131b0:	ubfx	x10, x1, #0, #48
  4131b4:	lsr	x2, x1, #63
  4131b8:	mov	x7, #0x7fff                	// #32767
  4131bc:	mov	x5, x8
  4131c0:	cmp	x4, x7
  4131c4:	ubfx	x11, x0, #0, #48
  4131c8:	ubfx	x6, x0, #48, #15
  4131cc:	lsr	x1, x0, #63
  4131d0:	mov	x3, x9
  4131d4:	b.eq	413210 <_obstack_memory_used@@Base+0x7fc>  // b.none
  4131d8:	cmp	x6, x7
  4131dc:	b.eq	413220 <_obstack_memory_used@@Base+0x80c>  // b.none
  4131e0:	cbnz	x4, 413248 <_obstack_memory_used@@Base+0x834>
  4131e4:	orr	x5, x10, x8
  4131e8:	cmp	x5, #0x0
  4131ec:	cset	w0, eq  // eq = none
  4131f0:	cbnz	x6, 4131fc <_obstack_memory_used@@Base+0x7e8>
  4131f4:	orr	x3, x11, x9
  4131f8:	cbz	x3, 413268 <_obstack_memory_used@@Base+0x854>
  4131fc:	cbz	w0, 41322c <_obstack_memory_used@@Base+0x818>
  413200:	cmp	x1, #0x0
  413204:	csinv	w0, w0, wzr, ne  // ne = any
  413208:	ldp	x29, x30, [sp], #48
  41320c:	ret
  413210:	orr	x0, x10, x8
  413214:	cbnz	x0, 413274 <_obstack_memory_used@@Base+0x860>
  413218:	cmp	x6, x4
  41321c:	b.ne	413248 <_obstack_memory_used@@Base+0x834>  // b.any
  413220:	orr	x3, x11, x3
  413224:	cbnz	x3, 413274 <_obstack_memory_used@@Base+0x860>
  413228:	cbz	x4, 413258 <_obstack_memory_used@@Base+0x844>
  41322c:	cmp	x2, x1
  413230:	b.eq	413288 <_obstack_memory_used@@Base+0x874>  // b.none
  413234:	cmp	x2, #0x0
  413238:	mov	w0, #0xffffffff            	// #-1
  41323c:	cneg	w0, w0, eq  // eq = none
  413240:	ldp	x29, x30, [sp], #48
  413244:	ret
  413248:	cbnz	x6, 41322c <_obstack_memory_used@@Base+0x818>
  41324c:	orr	x3, x11, x3
  413250:	cbnz	x3, 41322c <_obstack_memory_used@@Base+0x818>
  413254:	b	413234 <_obstack_memory_used@@Base+0x820>
  413258:	orr	x5, x10, x5
  41325c:	cmp	x5, #0x0
  413260:	cset	w0, eq  // eq = none
  413264:	b	4131fc <_obstack_memory_used@@Base+0x7e8>
  413268:	mov	w0, #0x0                   	// #0
  41326c:	cbz	x5, 413208 <_obstack_memory_used@@Base+0x7f4>
  413270:	b	413234 <_obstack_memory_used@@Base+0x820>
  413274:	mov	w0, #0x1                   	// #1
  413278:	bl	4134e8 <_obstack_memory_used@@Base+0xad4>
  41327c:	mov	w0, #0xfffffffe            	// #-2
  413280:	ldp	x29, x30, [sp], #48
  413284:	ret
  413288:	cmp	x4, x6
  41328c:	b.gt	413234 <_obstack_memory_used@@Base+0x820>
  413290:	b.lt	4132c8 <_obstack_memory_used@@Base+0x8b4>  // b.tstop
  413294:	cmp	x10, x11
  413298:	b.hi	413234 <_obstack_memory_used@@Base+0x820>  // b.pmore
  41329c:	cset	w0, eq  // eq = none
  4132a0:	cmp	w0, #0x0
  4132a4:	ccmp	x8, x9, #0x0, ne  // ne = any
  4132a8:	b.hi	413234 <_obstack_memory_used@@Base+0x820>  // b.pmore
  4132ac:	cmp	x10, x11
  4132b0:	b.cc	4132c8 <_obstack_memory_used@@Base+0x8b4>  // b.lo, b.ul, b.last
  4132b4:	cmp	w0, #0x0
  4132b8:	mov	w0, #0x0                   	// #0
  4132bc:	ccmp	x8, x9, #0x2, ne  // ne = any
  4132c0:	b.cs	413208 <_obstack_memory_used@@Base+0x7f4>  // b.hs, b.nlast
  4132c4:	nop
  4132c8:	cmp	x2, #0x0
  4132cc:	mov	w0, #0x1                   	// #1
  4132d0:	cneg	w0, w0, eq  // eq = none
  4132d4:	b	413208 <_obstack_memory_used@@Base+0x7f4>
  4132d8:	stp	x29, x30, [sp, #-48]!
  4132dc:	mov	x29, sp
  4132e0:	str	q0, [sp, #16]
  4132e4:	str	q1, [sp, #32]
  4132e8:	ldp	x8, x1, [sp, #16]
  4132ec:	ldp	x9, x0, [sp, #32]
  4132f0:	mrs	x2, fpcr
  4132f4:	ubfx	x4, x1, #48, #15
  4132f8:	ubfx	x10, x1, #0, #48
  4132fc:	lsr	x2, x1, #63
  413300:	mov	x5, #0x7fff                	// #32767
  413304:	mov	x6, x8
  413308:	cmp	x4, x5
  41330c:	ubfx	x11, x0, #0, #48
  413310:	ubfx	x7, x0, #48, #15
  413314:	lsr	x1, x0, #63
  413318:	mov	x3, x9
  41331c:	b.eq	413354 <_obstack_memory_used@@Base+0x940>  // b.none
  413320:	cmp	x7, x5
  413324:	b.eq	413364 <_obstack_memory_used@@Base+0x950>  // b.none
  413328:	cbnz	x4, 413390 <_obstack_memory_used@@Base+0x97c>
  41332c:	orr	x6, x10, x8
  413330:	cmp	x6, #0x0
  413334:	cset	w0, eq  // eq = none
  413338:	cbnz	x7, 41337c <_obstack_memory_used@@Base+0x968>
  41333c:	orr	x3, x11, x9
  413340:	cbnz	x3, 41337c <_obstack_memory_used@@Base+0x968>
  413344:	mov	w0, #0x0                   	// #0
  413348:	cbnz	x6, 4133a4 <_obstack_memory_used@@Base+0x990>
  41334c:	ldp	x29, x30, [sp], #48
  413350:	ret
  413354:	orr	x0, x10, x8
  413358:	cbnz	x0, 4133b8 <_obstack_memory_used@@Base+0x9a4>
  41335c:	cmp	x7, x4
  413360:	b.ne	413390 <_obstack_memory_used@@Base+0x97c>  // b.any
  413364:	orr	x3, x11, x3
  413368:	cbnz	x3, 4133b8 <_obstack_memory_used@@Base+0x9a4>
  41336c:	cbnz	x4, 41339c <_obstack_memory_used@@Base+0x988>
  413370:	orr	x6, x10, x6
  413374:	cmp	x6, #0x0
  413378:	cset	w0, eq  // eq = none
  41337c:	cbz	w0, 41339c <_obstack_memory_used@@Base+0x988>
  413380:	cmp	x1, #0x0
  413384:	csinv	w0, w0, wzr, ne  // ne = any
  413388:	ldp	x29, x30, [sp], #48
  41338c:	ret
  413390:	cbnz	x7, 41339c <_obstack_memory_used@@Base+0x988>
  413394:	orr	x3, x11, x3
  413398:	cbz	x3, 4133a4 <_obstack_memory_used@@Base+0x990>
  41339c:	cmp	x2, x1
  4133a0:	b.eq	4133cc <_obstack_memory_used@@Base+0x9b8>  // b.none
  4133a4:	cmp	x2, #0x0
  4133a8:	mov	w0, #0xffffffff            	// #-1
  4133ac:	cneg	w0, w0, eq  // eq = none
  4133b0:	ldp	x29, x30, [sp], #48
  4133b4:	ret
  4133b8:	mov	w0, #0x1                   	// #1
  4133bc:	bl	4134e8 <_obstack_memory_used@@Base+0xad4>
  4133c0:	mov	w0, #0x2                   	// #2
  4133c4:	ldp	x29, x30, [sp], #48
  4133c8:	ret
  4133cc:	cmp	x4, x7
  4133d0:	b.gt	4133a4 <_obstack_memory_used@@Base+0x990>
  4133d4:	b.lt	413408 <_obstack_memory_used@@Base+0x9f4>  // b.tstop
  4133d8:	cmp	x10, x11
  4133dc:	b.hi	4133a4 <_obstack_memory_used@@Base+0x990>  // b.pmore
  4133e0:	cset	w0, eq  // eq = none
  4133e4:	cmp	w0, #0x0
  4133e8:	ccmp	x8, x9, #0x0, ne  // ne = any
  4133ec:	b.hi	4133a4 <_obstack_memory_used@@Base+0x990>  // b.pmore
  4133f0:	cmp	x10, x11
  4133f4:	b.cc	413408 <_obstack_memory_used@@Base+0x9f4>  // b.lo, b.ul, b.last
  4133f8:	cmp	w0, #0x0
  4133fc:	mov	w0, #0x0                   	// #0
  413400:	ccmp	x8, x9, #0x2, ne  // ne = any
  413404:	b.cs	41334c <_obstack_memory_used@@Base+0x938>  // b.hs, b.nlast
  413408:	cmp	x2, #0x0
  41340c:	mov	w0, #0x1                   	// #1
  413410:	cneg	w0, w0, eq  // eq = none
  413414:	b	41334c <_obstack_memory_used@@Base+0x938>
  413418:	stp	x29, x30, [sp, #-48]!
  41341c:	mov	x29, sp
  413420:	str	q0, [sp, #16]
  413424:	str	q1, [sp, #32]
  413428:	ldp	x3, x1, [sp, #16]
  41342c:	ldp	x2, x0, [sp, #32]
  413430:	mrs	x4, fpcr
  413434:	ubfx	x5, x1, #48, #15
  413438:	mov	x4, x3
  41343c:	mov	x3, x2
  413440:	ubfx	x2, x1, #0, #48
  413444:	mov	x1, #0x7fff                	// #32767
  413448:	ubfx	x7, x0, #0, #48
  41344c:	cmp	x5, x1
  413450:	ubfx	x1, x0, #48, #15
  413454:	b.eq	413470 <_obstack_memory_used@@Base+0xa5c>  // b.none
  413458:	mov	x6, #0x7fff                	// #32767
  41345c:	mov	w0, #0x0                   	// #0
  413460:	cmp	x1, x6
  413464:	b.eq	413494 <_obstack_memory_used@@Base+0xa80>  // b.none
  413468:	ldp	x29, x30, [sp], #48
  41346c:	ret
  413470:	orr	x0, x4, x2
  413474:	cbz	x0, 413458 <_obstack_memory_used@@Base+0xa44>
  413478:	tst	x2, #0x800000000000
  41347c:	b.ne	4134b4 <_obstack_memory_used@@Base+0xaa0>  // b.any
  413480:	mov	w0, #0x1                   	// #1
  413484:	bl	4134e8 <_obstack_memory_used@@Base+0xad4>
  413488:	mov	w0, #0x1                   	// #1
  41348c:	ldp	x29, x30, [sp], #48
  413490:	ret
  413494:	orr	x3, x7, x3
  413498:	cbz	x3, 413468 <_obstack_memory_used@@Base+0xa54>
  41349c:	cmp	x5, x1
  4134a0:	b.eq	4134c8 <_obstack_memory_used@@Base+0xab4>  // b.none
  4134a4:	tst	x7, #0x800000000000
  4134a8:	mov	w0, #0x1                   	// #1
  4134ac:	b.ne	413468 <_obstack_memory_used@@Base+0xa54>  // b.any
  4134b0:	b	413480 <_obstack_memory_used@@Base+0xa6c>
  4134b4:	cmp	x1, x5
  4134b8:	mov	w0, #0x1                   	// #1
  4134bc:	b.ne	413468 <_obstack_memory_used@@Base+0xa54>  // b.any
  4134c0:	orr	x3, x7, x3
  4134c4:	b	4134d8 <_obstack_memory_used@@Base+0xac4>
  4134c8:	orr	x4, x4, x2
  4134cc:	cbz	x4, 4134a4 <_obstack_memory_used@@Base+0xa90>
  4134d0:	tst	x2, #0x800000000000
  4134d4:	b.eq	413480 <_obstack_memory_used@@Base+0xa6c>  // b.none
  4134d8:	mov	w0, #0x1                   	// #1
  4134dc:	cbz	x3, 413468 <_obstack_memory_used@@Base+0xa54>
  4134e0:	b	4134a4 <_obstack_memory_used@@Base+0xa90>
  4134e4:	nop
  4134e8:	tbz	w0, #0, 4134f8 <_obstack_memory_used@@Base+0xae4>
  4134ec:	movi	v1.2s, #0x0
  4134f0:	fdiv	s0, s1, s1
  4134f4:	mrs	x1, fpsr
  4134f8:	tbz	w0, #1, 41350c <_obstack_memory_used@@Base+0xaf8>
  4134fc:	fmov	s1, #1.000000000000000000e+00
  413500:	movi	v2.2s, #0x0
  413504:	fdiv	s0, s1, s2
  413508:	mrs	x1, fpsr
  41350c:	tbz	w0, #2, 41352c <_obstack_memory_used@@Base+0xb18>
  413510:	mov	w2, #0xc5ae                	// #50606
  413514:	mov	w1, #0x7f7fffff            	// #2139095039
  413518:	movk	w2, #0x749d, lsl #16
  41351c:	fmov	s1, w1
  413520:	fmov	s2, w2
  413524:	fadd	s0, s1, s2
  413528:	mrs	x1, fpsr
  41352c:	tbz	w0, #3, 41353c <_obstack_memory_used@@Base+0xb28>
  413530:	movi	v1.2s, #0x80, lsl #16
  413534:	fmul	s0, s1, s1
  413538:	mrs	x1, fpsr
  41353c:	tbz	w0, #4, 413554 <_obstack_memory_used@@Base+0xb40>
  413540:	mov	w0, #0x7f7fffff            	// #2139095039
  413544:	fmov	s2, #1.000000000000000000e+00
  413548:	fmov	s1, w0
  41354c:	fsub	s0, s1, s2
  413550:	mrs	x0, fpsr
  413554:	ret
  413558:	stp	x29, x30, [sp, #-64]!
  41355c:	mov	x29, sp
  413560:	stp	x19, x20, [sp, #16]
  413564:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x135ec>
  413568:	add	x20, x20, #0xde0
  41356c:	stp	x21, x22, [sp, #32]
  413570:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x135ec>
  413574:	add	x21, x21, #0xdd8
  413578:	sub	x20, x20, x21
  41357c:	mov	w22, w0
  413580:	stp	x23, x24, [sp, #48]
  413584:	mov	x23, x1
  413588:	mov	x24, x2
  41358c:	bl	402710 <mbrtowc@plt-0x40>
  413590:	cmp	xzr, x20, asr #3
  413594:	b.eq	4135c0 <_obstack_memory_used@@Base+0xbac>  // b.none
  413598:	asr	x20, x20, #3
  41359c:	mov	x19, #0x0                   	// #0
  4135a0:	ldr	x3, [x21, x19, lsl #3]
  4135a4:	mov	x2, x24
  4135a8:	add	x19, x19, #0x1
  4135ac:	mov	x1, x23
  4135b0:	mov	w0, w22
  4135b4:	blr	x3
  4135b8:	cmp	x20, x19
  4135bc:	b.ne	4135a0 <_obstack_memory_used@@Base+0xb8c>  // b.any
  4135c0:	ldp	x19, x20, [sp, #16]
  4135c4:	ldp	x21, x22, [sp, #32]
  4135c8:	ldp	x23, x24, [sp, #48]
  4135cc:	ldp	x29, x30, [sp], #64
  4135d0:	ret
  4135d4:	nop
  4135d8:	ret
  4135dc:	nop
  4135e0:	adrp	x2, 427000 <_obstack_memory_used@@Base+0x145ec>
  4135e4:	mov	x1, #0x0                   	// #0
  4135e8:	ldr	x2, [x2, #944]
  4135ec:	b	402830 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004135f0 <.fini>:
  4135f0:	stp	x29, x30, [sp, #-16]!
  4135f4:	mov	x29, sp
  4135f8:	ldp	x29, x30, [sp], #16
  4135fc:	ret
