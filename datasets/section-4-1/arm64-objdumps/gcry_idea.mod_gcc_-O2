
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_idea.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x6a8>:
   0:	and	w1, w0, #0xffff
   4:	mov	w0, w1
   8:	cmp	w1, #0x1
   c:	b.ls	70 <grub_mod_init-0x638>  // b.plast
  10:	and	x4, x1, #0xffff
  14:	mov	w3, #0x10001               	// #65537
  18:	mov	w0, #0x1                   	// #1
  1c:	udiv	x2, x3, x4
  20:	msub	x4, x2, x4, x3
  24:	and	w3, w2, #0xffff
  28:	cmp	x4, #0x1
  2c:	and	w2, w4, #0xffff
  30:	b.ne	54 <grub_mod_init-0x654>  // b.any
  34:	b	80 <grub_mod_init-0x628>
  38:	udiv	w4, w2, w1
  3c:	msub	w2, w4, w1, w2
  40:	madd	w3, w0, w4, w3
  44:	and	w2, w2, #0xffff
  48:	cmp	w2, #0x1
  4c:	and	w3, w3, #0xffff
  50:	b.eq	74 <grub_mod_init-0x634>  // b.none
  54:	udiv	w4, w1, w2
  58:	msub	w1, w4, w2, w1
  5c:	madd	w0, w3, w4, w0
  60:	and	w1, w1, #0xffff
  64:	cmp	w1, #0x1
  68:	and	w0, w0, #0xffff
  6c:	b.ne	38 <grub_mod_init-0x670>  // b.any
  70:	ret
  74:	sub	w2, w2, w3
  78:	and	w0, w2, #0xffff
  7c:	ret
  80:	sub	w2, w4, w3
  84:	and	w0, w2, #0xffff
  88:	ret
  8c:	nop
  90:	stp	x29, x30, [sp, #-128]!
  94:	mov	x10, x0
  98:	add	x5, x0, #0x8
  9c:	mov	x29, sp
  a0:	add	x11, x0, #0x5c
  a4:	ldrh	w0, [x0]
  a8:	mov	x12, x1
  ac:	add	x6, sp, #0x78
  b0:	bl	0 <grub_mod_init-0x6a8>
  b4:	ldrh	w8, [x10, #2]
  b8:	ldrh	w7, [x10, #4]
  bc:	mov	w9, w0
  c0:	neg	w8, w8
  c4:	ldrh	w0, [x10, #6]
  c8:	neg	w7, w7
  cc:	and	w8, w8, #0xffff
  d0:	and	w7, w7, #0xffff
  d4:	bl	0 <grub_mod_init-0x6a8>
  d8:	strh	w9, [sp, #120]
  dc:	strh	w8, [sp, #122]
  e0:	strh	w7, [sp, #124]
  e4:	strh	w0, [sp, #126]
  e8:	ldrh	w3, [x5]
  ec:	ldrh	w2, [x5, #2]
  f0:	ldrh	w0, [x5, #4]
  f4:	sturh	w3, [x6, #-4]
  f8:	sturh	w2, [x6, #-2]
  fc:	bl	0 <grub_mod_init-0x6a8>
 100:	ldrh	w7, [x5, #6]
 104:	ldrh	w8, [x5, #8]
 108:	add	x5, x5, #0xc
 10c:	mov	w9, w0
 110:	neg	w7, w7
 114:	neg	w8, w8
 118:	and	w7, w7, #0xffff
 11c:	and	w8, w8, #0xffff
 120:	ldurh	w0, [x5, #-2]
 124:	bl	0 <grub_mod_init-0x6a8>
 128:	sturh	w8, [x6, #-10]
 12c:	sturh	w7, [x6, #-8]
 130:	cmp	x11, x5
 134:	sturh	w0, [x6, #-6]
 138:	strh	w9, [x6, #-12]!
 13c:	b.ne	e8 <grub_mod_init-0x5c0>  // b.any
 140:	ldr	w1, [x10, #92]
 144:	ldrh	w0, [x10, #96]
 148:	str	w1, [sp, #32]
 14c:	bl	0 <grub_mod_init-0x6a8>
 150:	ldrh	w6, [x10, #98]
 154:	ldrh	w5, [x10, #100]
 158:	mov	w7, w0
 15c:	neg	w6, w6
 160:	ldrh	w0, [x10, #102]
 164:	neg	w5, w5
 168:	and	w6, w6, #0xffff
 16c:	and	w5, w5, #0xffff
 170:	bl	0 <grub_mod_init-0x6a8>
 174:	mov	w3, w0
 178:	add	x1, sp, #0x18
 17c:	mov	x0, x12
 180:	mov	x2, #0x68                  	// #104
 184:	strh	w7, [sp, #24]
 188:	strh	w6, [sp, #26]
 18c:	strh	w5, [sp, #28]
 190:	strh	w3, [sp, #30]
 194:	bl	0 <grub_memmove>
 198:	add	x0, sp, #0x18
 19c:	mov	x2, #0x68                  	// #104
 1a0:	mov	w1, #0x0                   	// #0
 1a4:	bl	0 <grub_memset>
 1a8:	ldp	x29, x30, [sp], #128
 1ac:	ret
 1b0:	stp	x29, x30, [sp, #-48]!
 1b4:	mov	x29, sp
 1b8:	stp	x19, x20, [sp, #16]
 1bc:	mov	x20, x2
 1c0:	mov	x19, x0
 1c4:	mov	x2, #0x8                   	// #8
 1c8:	add	x0, sp, #0x28
 1cc:	bl	0 <grub_memmove>
 1d0:	ldrh	w7, [sp, #40]
 1d4:	add	x8, x20, #0x60
 1d8:	ldrh	w3, [sp, #42]
 1dc:	mov	x0, x20
 1e0:	ldrh	w10, [sp, #44]
 1e4:	mov	w2, #0x1                   	// #1
 1e8:	ldrh	w1, [sp, #46]
 1ec:	lsl	w4, w7, #8
 1f0:	lsl	w11, w3, #8
 1f4:	orr	w7, w4, w7, lsr #8
 1f8:	lsl	w6, w10, #8
 1fc:	orr	w3, w11, w3, lsr #8
 200:	lsl	w9, w1, #8
 204:	orr	w10, w6, w10, lsr #8
 208:	orr	w1, w9, w1, lsr #8
 20c:	and	w7, w7, #0xffff
 210:	and	w11, w3, #0xffff
 214:	and	w10, w10, #0xffff
 218:	and	w9, w1, #0xffff
 21c:	b	2f8 <grub_mod_init-0x3b0>
 220:	cbz	w7, 450 <grub_mod_init-0x258>
 224:	mul	w7, w7, w4
 228:	and	w4, w7, #0xffff
 22c:	lsr	w7, w7, #16
 230:	subs	w4, w4, w7
 234:	cinc	w4, w4, cc  // cc = lo, ul, last
 238:	and	w4, w4, #0xffff
 23c:	ldrh	w1, [x0, #6]
 240:	ldrh	w3, [x0, #2]
 244:	ldrh	w6, [x0, #4]
 248:	add	w3, w11, w3
 24c:	add	w6, w10, w6
 250:	and	w10, w3, #0xffff
 254:	and	w6, w6, #0xffff
 258:	cbz	w1, 328 <grub_mod_init-0x380>
 25c:	cbz	w9, 474 <grub_mod_init-0x234>
 260:	mul	w1, w9, w1
 264:	and	w5, w1, #0xffff
 268:	lsr	w1, w1, #16
 26c:	subs	w5, w5, w1
 270:	cinc	w5, w5, cc  // cc = lo, ul, last
 274:	and	w5, w5, #0xffff
 278:	ldrh	w1, [x0, #8]
 27c:	eor	w3, w4, w6
 280:	cbz	w1, 33c <grub_mod_init-0x36c>
 284:	cmp	w4, w6
 288:	b.eq	468 <grub_mod_init-0x240>  // b.none
 28c:	mul	w3, w3, w1
 290:	and	w1, w3, #0xffff
 294:	lsr	w3, w3, #16
 298:	subs	w3, w1, w3
 29c:	cinc	w3, w3, cc  // cc = lo, ul, last
 2a0:	and	w3, w3, #0xffff
 2a4:	ldrh	w7, [x0, #10]
 2a8:	eor	w1, w10, w5
 2ac:	add	w1, w3, w1
 2b0:	add	x0, x0, #0xc
 2b4:	and	w1, w1, #0xffff
 2b8:	cbz	w7, 35c <grub_mod_init-0x34c>
 2bc:	cbz	w1, 45c <grub_mod_init-0x24c>
 2c0:	mul	w1, w1, w7
 2c4:	and	w7, w1, #0xffff
 2c8:	lsr	w1, w1, #16
 2cc:	subs	w1, w7, w1
 2d0:	cinc	w1, w1, cc  // cc = lo, ul, last
 2d4:	and	w1, w1, #0xffff
 2d8:	add	w3, w1, w3
 2dc:	eor	w11, w1, w6
 2e0:	and	w3, w3, #0xffff
 2e4:	cmp	x8, x0
 2e8:	eor	w10, w10, w3
 2ec:	eor	w9, w3, w5
 2f0:	eor	w7, w1, w4
 2f4:	b.eq	384 <grub_mod_init-0x324>  // b.none
 2f8:	ldrh	w4, [x0]
 2fc:	cbnz	w4, 220 <grub_mod_init-0x488>
 300:	ldrh	w1, [x0, #6]
 304:	sub	w4, w2, w7
 308:	ldrh	w3, [x0, #2]
 30c:	and	w4, w4, #0xffff
 310:	ldrh	w6, [x0, #4]
 314:	add	w3, w11, w3
 318:	add	w6, w10, w6
 31c:	and	w10, w3, #0xffff
 320:	and	w6, w6, #0xffff
 324:	cbnz	w1, 25c <grub_mod_init-0x44c>
 328:	sub	w1, w2, w9
 32c:	eor	w3, w4, w6
 330:	and	w5, w1, #0xffff
 334:	ldrh	w1, [x0, #8]
 338:	cbnz	w1, 284 <grub_mod_init-0x424>
 33c:	ldrh	w7, [x0, #10]
 340:	sub	w3, w2, w3
 344:	and	w3, w3, #0xffff
 348:	eor	w1, w10, w5
 34c:	add	w1, w3, w1
 350:	add	x0, x0, #0xc
 354:	and	w1, w1, #0xffff
 358:	cbnz	w7, 2bc <grub_mod_init-0x3ec>
 35c:	sub	w1, w2, w1
 360:	cmp	x8, x0
 364:	and	w1, w1, #0xffff
 368:	add	w3, w1, w3
 36c:	eor	w11, w1, w6
 370:	and	w3, w3, #0xffff
 374:	eor	w7, w1, w4
 378:	eor	w10, w10, w3
 37c:	eor	w9, w3, w5
 380:	b.ne	2f8 <grub_mod_init-0x3b0>  // b.any
 384:	ldrh	w0, [x20, #96]
 388:	cbz	w0, 480 <grub_mod_init-0x228>
 38c:	cmp	w1, w4
 390:	b.eq	4e0 <grub_mod_init-0x1c8>  // b.none
 394:	mul	w0, w7, w0
 398:	ldrh	w6, [x20, #98]
 39c:	ldrh	w4, [x20, #100]
 3a0:	and	w1, w0, #0xffff
 3a4:	add	w10, w10, w6
 3a8:	lsr	w0, w0, #16
 3ac:	add	w4, w11, w4
 3b0:	subs	w7, w1, w0
 3b4:	ldrh	w0, [x20, #102]
 3b8:	cinc	w7, w7, cc  // cc = lo, ul, last
 3bc:	and	w10, w10, #0xffff
 3c0:	and	w7, w7, #0xffff
 3c4:	and	w4, w4, #0xffff
 3c8:	cbnz	w0, 4ac <grub_mod_init-0x1fc>
 3cc:	mov	w1, #0x1                   	// #1
 3d0:	sub	w1, w1, w9
 3d4:	and	w1, w1, #0xffff
 3d8:	lsl	w0, w7, #8
 3dc:	lsl	w9, w1, #8
 3e0:	orr	w7, w0, w7, lsr #8
 3e4:	orr	w9, w9, w1, lsr #8
 3e8:	rev16	w4, w4
 3ec:	rev16	w3, w10
 3f0:	add	x1, sp, #0x28
 3f4:	mov	x0, x19
 3f8:	mov	x2, #0x2                   	// #2
 3fc:	strh	w7, [sp, #40]
 400:	strh	w4, [sp, #42]
 404:	strh	w3, [sp, #44]
 408:	strh	w9, [sp, #46]
 40c:	bl	0 <grub_memmove>
 410:	add	x1, sp, #0x2c
 414:	mov	x2, #0x2                   	// #2
 418:	add	x0, x19, x2
 41c:	bl	0 <grub_memmove>
 420:	add	x0, sp, #0x28
 424:	mov	x2, #0x2                   	// #2
 428:	add	x1, x0, x2
 42c:	add	x0, x19, #0x4
 430:	bl	0 <grub_memmove>
 434:	add	x1, sp, #0x2e
 438:	add	x0, x19, #0x6
 43c:	mov	x2, #0x2                   	// #2
 440:	bl	0 <grub_memmove>
 444:	ldp	x19, x20, [sp, #16]
 448:	ldp	x29, x30, [sp], #48
 44c:	ret
 450:	sub	w4, w2, w4
 454:	and	w4, w4, #0xffff
 458:	b	23c <grub_mod_init-0x46c>
 45c:	sub	w1, w2, w7
 460:	and	w1, w1, #0xffff
 464:	b	2d8 <grub_mod_init-0x3d0>
 468:	sub	w3, w2, w1
 46c:	and	w3, w3, #0xffff
 470:	b	2a4 <grub_mod_init-0x404>
 474:	sub	w5, w2, w1
 478:	and	w5, w5, #0xffff
 47c:	b	278 <grub_mod_init-0x430>
 480:	mov	w0, #0x1                   	// #1
 484:	sub	w7, w0, w7
 488:	and	w7, w7, #0xffff
 48c:	ldrh	w0, [x20, #102]
 490:	ldrh	w6, [x20, #98]
 494:	ldrh	w4, [x20, #100]
 498:	add	w10, w10, w6
 49c:	add	w4, w11, w4
 4a0:	and	w10, w10, #0xffff
 4a4:	and	w4, w4, #0xffff
 4a8:	cbz	w0, 3cc <grub_mod_init-0x2dc>
 4ac:	cmp	w3, w5
 4b0:	b.eq	4d0 <grub_mod_init-0x1d8>  // b.none
 4b4:	mul	w1, w9, w0
 4b8:	and	w0, w1, #0xffff
 4bc:	lsr	w1, w1, #16
 4c0:	subs	w1, w0, w1
 4c4:	cinc	w1, w1, cc  // cc = lo, ul, last
 4c8:	and	w1, w1, #0xffff
 4cc:	b	3d8 <grub_mod_init-0x2d0>
 4d0:	mov	w1, #0x1                   	// #1
 4d4:	sub	w1, w1, w0
 4d8:	and	w1, w1, #0xffff
 4dc:	b	3d8 <grub_mod_init-0x2d0>
 4e0:	mov	w7, #0x1                   	// #1
 4e4:	sub	w7, w7, w0
 4e8:	and	w7, w7, #0xffff
 4ec:	b	48c <grub_mod_init-0x21c>
 4f0:	stp	x29, x30, [sp, #-48]!
 4f4:	mov	x29, sp
 4f8:	stp	x19, x20, [sp, #16]
 4fc:	mov	x19, x1
 500:	ldr	w1, [x0, #208]
 504:	str	x21, [sp, #32]
 508:	mov	x20, x2
 50c:	add	x21, x0, #0x68
 510:	cbz	w1, 538 <grub_mod_init-0x170>
 514:	mov	x2, x21
 518:	mov	x1, x20
 51c:	mov	x0, x19
 520:	bl	1b0 <grub_mod_init-0x4f8>
 524:	ldp	x19, x20, [sp, #16]
 528:	mov	w0, #0x30                  	// #48
 52c:	ldr	x21, [sp, #32]
 530:	ldp	x29, x30, [sp], #48
 534:	b	0 <_gcry_burn_stack>
 538:	mov	w1, #0x1                   	// #1
 53c:	str	w1, [x0, #208]
 540:	mov	x1, x21
 544:	bl	90 <grub_mod_init-0x618>
 548:	b	514 <grub_mod_init-0x194>
 54c:	nop
 550:	mov	x3, x0
 554:	stp	x29, x30, [sp, #-16]!
 558:	mov	x0, x1
 55c:	mov	x29, sp
 560:	mov	x1, x2
 564:	mov	x2, x3
 568:	bl	1b0 <grub_mod_init-0x4f8>
 56c:	ldp	x29, x30, [sp], #16
 570:	mov	w0, #0x30                  	// #48
 574:	b	0 <_gcry_burn_stack>
 578:	stp	x29, x30, [sp, #-32]!
 57c:	adrp	x3, 0 <grub_mod_init-0x6a8>
 580:	mov	x29, sp
 584:	ldr	x3, [x3]
 588:	ldr	w4, [x3]
 58c:	str	x19, [sp, #16]
 590:	cbnz	w4, 644 <grub_mod_init-0x64>
 594:	mov	w4, #0x1                   	// #1
 598:	str	w4, [x3]
 59c:	str	xzr, [x3, #8]
 5a0:	cmp	w2, #0x10
 5a4:	b.ne	668 <grub_mod_init-0x40>  // b.any
 5a8:	add	x5, x1, #0x1
 5ac:	mov	x2, #0x0                   	// #0
 5b0:	str	wzr, [x0, #208]
 5b4:	nop
 5b8:	ldrb	w3, [x1, x2]
 5bc:	ldrb	w4, [x5, x2]
 5c0:	ubfiz	w3, w3, #8, #8
 5c4:	add	w3, w3, w4
 5c8:	strh	w3, [x0, x2]
 5cc:	add	x2, x2, #0x2
 5d0:	cmp	x2, #0x10
 5d4:	b.ne	5b8 <grub_mod_init-0xf0>  // b.any
 5d8:	mov	x2, x0
 5dc:	mov	w19, #0x2c                  	// #44
 5e0:	mov	w1, #0x0                   	// #0
 5e4:	nop
 5e8:	add	w3, w1, #0x1
 5ec:	add	w1, w1, #0x2
 5f0:	and	w5, w3, #0x8
 5f4:	subs	w19, w19, #0x1
 5f8:	ubfiz	x4, x3, #1, #3
 5fc:	ubfiz	x7, x1, #1, #3
 600:	add	x6, x2, w3, sxtw #1
 604:	and	w1, w3, #0x7
 608:	ldrh	w4, [x2, x4]
 60c:	ldrh	w3, [x2, x7]
 610:	add	x2, x2, x5, lsl #1
 614:	lsl	w4, w4, #9
 618:	orr	w3, w4, w3, lsr #7
 61c:	strh	w3, [x6, #14]
 620:	b.ne	5e8 <grub_mod_init-0xc0>  // b.any
 624:	add	x1, x0, #0x68
 628:	bl	90 <grub_mod_init-0x618>
 62c:	mov	w0, #0x47                  	// #71
 630:	bl	0 <_gcry_burn_stack>
 634:	mov	w0, w19
 638:	ldr	x19, [sp, #16]
 63c:	ldp	x29, x30, [sp], #32
 640:	ret
 644:	ldr	x3, [x3, #8]
 648:	mov	w19, #0x1c                  	// #28
 64c:	cbz	x3, 5a0 <grub_mod_init-0x108>
 650:	mov	w0, #0x47                  	// #71
 654:	bl	0 <_gcry_burn_stack>
 658:	mov	w0, w19
 65c:	ldr	x19, [sp, #16]
 660:	ldp	x29, x30, [sp], #32
 664:	ret
 668:	adrp	x3, 0 <grub_mod_init-0x6a8>
 66c:	adrp	x1, 0 <grub_mod_init-0x6a8>
 670:	adrp	x0, 0 <grub_mod_init-0x6a8>
 674:	mov	w2, #0xfb                  	// #251
 678:	ldr	x3, [x3]
 67c:	ldr	x1, [x1]
 680:	ldr	x0, [x0]
 684:	bl	0 <_gcry_assert_failed>
	...

00000000000006a8 <grub_mod_init>:
 6a8:	adrp	x0, 0 <grub_mod_init-0x6a8>
 6ac:	ldr	x0, [x0]
 6b0:	b	0 <grub_cipher_register>
 6b4:	nop
	...

00000000000006c0 <grub_mod_fini>:
 6c0:	adrp	x0, 0 <grub_mod_init-0x6a8>
 6c4:	ldr	x0, [x0]
 6c8:	b	0 <grub_cipher_unregister>
 6cc:	nop
	...
