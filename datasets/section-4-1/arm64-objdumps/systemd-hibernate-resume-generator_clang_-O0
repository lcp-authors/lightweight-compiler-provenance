
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400bc8 <_init>:
  400bc8:	stp	x29, x30, [sp, #-16]!
  400bcc:	mov	x29, sp
  400bd0:	bl	400dd0 <call_weak_fn>
  400bd4:	ldp	x29, x30, [sp], #16
  400bd8:	ret

Disassembly of section .plt:

0000000000400be0 <__libc_start_main@plt-0x20>:
  400be0:	stp	x16, x30, [sp, #-16]!
  400be4:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400be8:	ldr	x17, [x16, #3896]
  400bec:	add	x16, x16, #0xf38
  400bf0:	br	x17
  400bf4:	nop
  400bf8:	nop
  400bfc:	nop

0000000000400c00 <__libc_start_main@plt>:
  400c00:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c04:	ldr	x17, [x16, #3904]
  400c08:	add	x16, x16, #0xf40
  400c0c:	br	x17

0000000000400c10 <abort@plt>:
  400c10:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c14:	ldr	x17, [x16, #3912]
  400c18:	add	x16, x16, #0xf48
  400c1c:	br	x17

0000000000400c20 <__gmon_start__@plt>:
  400c20:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c24:	ldr	x17, [x16, #3920]
  400c28:	add	x16, x16, #0xf50
  400c2c:	br	x17

0000000000400c30 <ask_password_agent_close@plt>:
  400c30:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c34:	ldr	x17, [x16, #3928]
  400c38:	add	x16, x16, #0xf58
  400c3c:	br	x17

0000000000400c40 <polkit_agent_close@plt>:
  400c40:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c44:	ldr	x17, [x16, #3936]
  400c48:	add	x16, x16, #0xf60
  400c4c:	br	x17

0000000000400c50 <pager_close@plt>:
  400c50:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c54:	ldr	x17, [x16, #3944]
  400c58:	add	x16, x16, #0xf68
  400c5c:	br	x17

0000000000400c60 <mac_selinux_finish@plt>:
  400c60:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c64:	ldr	x17, [x16, #3952]
  400c68:	add	x16, x16, #0xf70
  400c6c:	br	x17

0000000000400c70 <log_setup_generator@plt>:
  400c70:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c74:	ldr	x17, [x16, #3960]
  400c78:	add	x16, x16, #0xf78
  400c7c:	br	x17

0000000000400c80 <log_get_max_level_realm@plt>:
  400c80:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c84:	ldr	x17, [x16, #3968]
  400c88:	add	x16, x16, #0xf80
  400c8c:	br	x17

0000000000400c90 <log_internal_realm@plt>:
  400c90:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400c94:	ldr	x17, [x16, #3976]
  400c98:	add	x16, x16, #0xf88
  400c9c:	br	x17

0000000000400ca0 <abs@plt>:
  400ca0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400ca4:	ldr	x17, [x16, #3984]
  400ca8:	add	x16, x16, #0xf90
  400cac:	br	x17

0000000000400cb0 <in_initrd@plt>:
  400cb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400cb4:	ldr	x17, [x16, #3992]
  400cb8:	add	x16, x16, #0xf98
  400cbc:	br	x17

0000000000400cc0 <proc_cmdline_parse@plt>:
  400cc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400cc4:	ldr	x17, [x16, #4000]
  400cc8:	add	x16, x16, #0xfa0
  400ccc:	br	x17

0000000000400cd0 <free@plt>:
  400cd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400cd4:	ldr	x17, [x16, #4008]
  400cd8:	add	x16, x16, #0xfa8
  400cdc:	br	x17

0000000000400ce0 <strcmp@plt>:
  400ce0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400ce4:	ldr	x17, [x16, #4016]
  400ce8:	add	x16, x16, #0xfb0
  400cec:	br	x17

0000000000400cf0 <fstab_node_to_udev_node@plt>:
  400cf0:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400cf4:	ldr	x17, [x16, #4024]
  400cf8:	add	x16, x16, #0xfb8
  400cfc:	br	x17

0000000000400d00 <log_oom_internal@plt>:
  400d00:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d04:	ldr	x17, [x16, #4032]
  400d08:	add	x16, x16, #0xfc0
  400d0c:	br	x17

0000000000400d10 <strextend_with_separator@plt>:
  400d10:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d14:	ldr	x17, [x16, #4040]
  400d18:	add	x16, x16, #0xfc8
  400d1c:	br	x17

0000000000400d20 <unit_name_from_path_instance@plt>:
  400d20:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d24:	ldr	x17, [x16, #4048]
  400d28:	add	x16, x16, #0xfd0
  400d2c:	br	x17

0000000000400d30 <strjoin_real@plt>:
  400d30:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d34:	ldr	x17, [x16, #4056]
  400d38:	add	x16, x16, #0xfd8
  400d3c:	br	x17

0000000000400d40 <mkdir_parents_label@plt>:
  400d40:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d44:	ldr	x17, [x16, #4064]
  400d48:	add	x16, x16, #0xfe0
  400d4c:	br	x17

0000000000400d50 <symlink@plt>:
  400d50:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d54:	ldr	x17, [x16, #4072]
  400d58:	add	x16, x16, #0xfe8
  400d5c:	br	x17

0000000000400d60 <__errno_location@plt>:
  400d60:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d64:	ldr	x17, [x16, #4080]
  400d68:	add	x16, x16, #0xff0
  400d6c:	br	x17

0000000000400d70 <generator_write_timeouts@plt>:
  400d70:	adrp	x16, 41f000 <__FRAME_END__+0x1d130>
  400d74:	ldr	x17, [x16, #4088]
  400d78:	add	x16, x16, #0xff8
  400d7c:	br	x17

Disassembly of section .text:

0000000000400d80 <_start>:
  400d80:	mov	x29, #0x0                   	// #0
  400d84:	mov	x30, #0x0                   	// #0
  400d88:	mov	x5, x0
  400d8c:	ldr	x1, [sp]
  400d90:	add	x2, sp, #0x8
  400d94:	mov	x6, sp
  400d98:	movz	x0, #0x0, lsl #48
  400d9c:	movk	x0, #0x0, lsl #32
  400da0:	movk	x0, #0x40, lsl #16
  400da4:	movk	x0, #0xfcc
  400da8:	movz	x3, #0x0, lsl #48
  400dac:	movk	x3, #0x0, lsl #32
  400db0:	movk	x3, #0x40, lsl #16
  400db4:	movk	x3, #0x1a50
  400db8:	movz	x4, #0x0, lsl #48
  400dbc:	movk	x4, #0x0, lsl #32
  400dc0:	movk	x4, #0x40, lsl #16
  400dc4:	movk	x4, #0x1ad0
  400dc8:	bl	400c00 <__libc_start_main@plt>
  400dcc:	bl	400c10 <abort@plt>

0000000000400dd0 <call_weak_fn>:
  400dd0:	adrp	x0, 41f000 <__FRAME_END__+0x1d130>
  400dd4:	ldr	x0, [x0, #3856]
  400dd8:	cbz	x0, 400de0 <call_weak_fn+0x10>
  400ddc:	b	400c20 <__gmon_start__@plt>
  400de0:	ret

0000000000400de4 <deregister_tm_clones>:
  400de4:	stp	x29, x30, [sp, #-32]!
  400de8:	mov	x29, sp
  400dec:	adrp	x0, 420000 <arg_dest>
  400df0:	add	x0, x0, #0x0
  400df4:	str	x0, [sp, #24]
  400df8:	ldr	x0, [sp, #24]
  400dfc:	str	x0, [sp, #24]
  400e00:	ldr	x1, [sp, #24]
  400e04:	adrp	x0, 420000 <arg_dest>
  400e08:	add	x0, x0, #0x0
  400e0c:	cmp	x1, x0
  400e10:	b.eq	400e4c <deregister_tm_clones+0x68>  // b.none
  400e14:	adrp	x0, 401000 <main+0x34>
  400e18:	add	x0, x0, #0xae8
  400e1c:	ldr	x0, [x0]
  400e20:	str	x0, [sp, #16]
  400e24:	ldr	x0, [sp, #16]
  400e28:	str	x0, [sp, #16]
  400e2c:	ldr	x0, [sp, #16]
  400e30:	cmp	x0, #0x0
  400e34:	b.eq	400e50 <deregister_tm_clones+0x6c>  // b.none
  400e38:	ldr	x1, [sp, #16]
  400e3c:	adrp	x0, 420000 <arg_dest>
  400e40:	add	x0, x0, #0x0
  400e44:	blr	x1
  400e48:	b	400e50 <deregister_tm_clones+0x6c>
  400e4c:	nop
  400e50:	ldp	x29, x30, [sp], #32
  400e54:	ret

0000000000400e58 <register_tm_clones>:
  400e58:	stp	x29, x30, [sp, #-48]!
  400e5c:	mov	x29, sp
  400e60:	adrp	x0, 420000 <arg_dest>
  400e64:	add	x0, x0, #0x0
  400e68:	str	x0, [sp, #40]
  400e6c:	ldr	x0, [sp, #40]
  400e70:	str	x0, [sp, #40]
  400e74:	ldr	x1, [sp, #40]
  400e78:	adrp	x0, 420000 <arg_dest>
  400e7c:	add	x0, x0, #0x0
  400e80:	sub	x0, x1, x0
  400e84:	asr	x0, x0, #3
  400e88:	lsr	x1, x0, #63
  400e8c:	add	x0, x1, x0
  400e90:	asr	x0, x0, #1
  400e94:	str	x0, [sp, #32]
  400e98:	ldr	x0, [sp, #32]
  400e9c:	cmp	x0, #0x0
  400ea0:	b.eq	400ee0 <register_tm_clones+0x88>  // b.none
  400ea4:	adrp	x0, 401000 <main+0x34>
  400ea8:	add	x0, x0, #0xaf0
  400eac:	ldr	x0, [x0]
  400eb0:	str	x0, [sp, #24]
  400eb4:	ldr	x0, [sp, #24]
  400eb8:	str	x0, [sp, #24]
  400ebc:	ldr	x0, [sp, #24]
  400ec0:	cmp	x0, #0x0
  400ec4:	b.eq	400ee4 <register_tm_clones+0x8c>  // b.none
  400ec8:	ldr	x2, [sp, #24]
  400ecc:	ldr	x1, [sp, #32]
  400ed0:	adrp	x0, 420000 <arg_dest>
  400ed4:	add	x0, x0, #0x0
  400ed8:	blr	x2
  400edc:	b	400ee4 <register_tm_clones+0x8c>
  400ee0:	nop
  400ee4:	ldp	x29, x30, [sp], #48
  400ee8:	ret

0000000000400eec <__do_global_dtors_aux>:
  400eec:	stp	x29, x30, [sp, #-16]!
  400ef0:	mov	x29, sp
  400ef4:	adrp	x0, 420000 <arg_dest>
  400ef8:	add	x0, x0, #0x8
  400efc:	ldrb	w0, [x0]
  400f00:	and	x0, x0, #0xff
  400f04:	cmp	x0, #0x0
  400f08:	b.ne	400f24 <__do_global_dtors_aux+0x38>  // b.any
  400f0c:	bl	400de4 <deregister_tm_clones>
  400f10:	adrp	x0, 420000 <arg_dest>
  400f14:	add	x0, x0, #0x8
  400f18:	mov	w1, #0x1                   	// #1
  400f1c:	strb	w1, [x0]
  400f20:	b	400f28 <__do_global_dtors_aux+0x3c>
  400f24:	nop
  400f28:	ldp	x29, x30, [sp], #16
  400f2c:	ret

0000000000400f30 <frame_dummy>:
  400f30:	stp	x29, x30, [sp, #-16]!
  400f34:	mov	x29, sp
  400f38:	bl	400e58 <register_tm_clones>
  400f3c:	nop
  400f40:	ldp	x29, x30, [sp], #16
  400f44:	ret

0000000000400f48 <__unique_prefix_static_destructor_wrapper0>:
  400f48:	sub	sp, sp, #0x20
  400f4c:	stp	x29, x30, [sp, #16]
  400f50:	add	x29, sp, #0x10
  400f54:	str	x0, [sp, #8]
  400f58:	ldr	x8, [sp, #8]
  400f5c:	str	x8, [sp]
  400f60:	ldr	x0, [sp]
  400f64:	bl	4013c4 <freep>
  400f68:	ldp	x29, x30, [sp, #16]
  400f6c:	add	sp, sp, #0x20
  400f70:	ret

0000000000400f74 <__unique_prefix_static_destructor_wrapper1>:
  400f74:	sub	sp, sp, #0x20
  400f78:	stp	x29, x30, [sp, #16]
  400f7c:	add	x29, sp, #0x10
  400f80:	str	x0, [sp, #8]
  400f84:	ldr	x8, [sp, #8]
  400f88:	str	x8, [sp]
  400f8c:	ldr	x0, [sp]
  400f90:	bl	4013c4 <freep>
  400f94:	ldp	x29, x30, [sp, #16]
  400f98:	add	sp, sp, #0x20
  400f9c:	ret

0000000000400fa0 <__unique_prefix_static_destructor_wrapper2>:
  400fa0:	sub	sp, sp, #0x20
  400fa4:	stp	x29, x30, [sp, #16]
  400fa8:	add	x29, sp, #0x10
  400fac:	str	x0, [sp, #8]
  400fb0:	ldr	x8, [sp, #8]
  400fb4:	str	x8, [sp]
  400fb8:	ldr	x0, [sp]
  400fbc:	bl	4013c4 <freep>
  400fc0:	ldp	x29, x30, [sp, #16]
  400fc4:	add	sp, sp, #0x20
  400fc8:	ret

0000000000400fcc <main>:
  400fcc:	sub	sp, sp, #0x30
  400fd0:	stp	x29, x30, [sp, #32]
  400fd4:	add	x29, sp, #0x20
  400fd8:	mov	w8, wzr
  400fdc:	mov	w9, #0x1                   	// #1
  400fe0:	stur	wzr, [x29, #-4]
  400fe4:	stur	w0, [x29, #-8]
  400fe8:	str	x1, [sp, #16]
  400fec:	ldur	w0, [x29, #-8]
  400ff0:	ldr	x1, [sp, #16]
  400ff4:	str	w8, [sp, #8]
  400ff8:	str	w9, [sp, #4]
  400ffc:	bl	401044 <save_argc_argv>
  401000:	ldur	w0, [x29, #-8]
  401004:	ldr	x1, [sp, #16]
  401008:	bl	401078 <run>
  40100c:	str	w0, [sp, #12]
  401010:	bl	400c30 <ask_password_agent_close@plt>
  401014:	bl	400c40 <polkit_agent_close@plt>
  401018:	bl	400c50 <pager_close@plt>
  40101c:	bl	400c60 <mac_selinux_finish@plt>
  401020:	bl	401344 <static_destruct>
  401024:	ldr	w8, [sp, #12]
  401028:	cmp	w8, #0x0
  40102c:	ldr	w8, [sp, #4]
  401030:	ldr	w9, [sp, #8]
  401034:	csel	w0, w8, w9, lt  // lt = tstop
  401038:	ldp	x29, x30, [sp, #32]
  40103c:	add	sp, sp, #0x30
  401040:	ret

0000000000401044 <save_argc_argv>:
  401044:	sub	sp, sp, #0x10
  401048:	adrp	x8, 420000 <arg_dest>
  40104c:	add	x8, x8, #0x30
  401050:	adrp	x9, 420000 <arg_dest>
  401054:	add	x9, x9, #0x38
  401058:	str	w0, [sp, #12]
  40105c:	str	x1, [sp]
  401060:	ldr	w10, [sp, #12]
  401064:	str	w10, [x8]
  401068:	ldr	x8, [sp]
  40106c:	str	x8, [x9]
  401070:	add	sp, sp, #0x10
  401074:	ret

0000000000401078 <run>:
  401078:	sub	sp, sp, #0x90
  40107c:	stp	x29, x30, [sp, #128]
  401080:	add	x29, sp, #0x80
  401084:	adrp	x8, 401000 <main+0x34>
  401088:	add	x8, x8, #0xaf8
  40108c:	add	x8, x8, #0x3
  401090:	adrp	x9, 401000 <main+0x34>
  401094:	add	x9, x9, #0xb2d
  401098:	stur	w0, [x29, #-8]
  40109c:	stur	x1, [x29, #-16]
  4010a0:	stur	wzr, [x29, #-20]
  4010a4:	str	x8, [sp, #32]
  4010a8:	str	x9, [sp, #24]
  4010ac:	bl	400c70 <log_setup_generator@plt>
  4010b0:	ldur	w10, [x29, #-8]
  4010b4:	cmp	w10, #0x1
  4010b8:	b.le	401150 <run+0xd8>
  4010bc:	ldur	w8, [x29, #-8]
  4010c0:	cmp	w8, #0x4
  4010c4:	b.eq	401150 <run+0xd8>  // b.none
  4010c8:	mov	w8, #0x3                   	// #3
  4010cc:	stur	w8, [x29, #-24]
  4010d0:	mov	w8, #0x16                  	// #22
  4010d4:	movk	w8, #0x4000, lsl #16
  4010d8:	stur	w8, [x29, #-28]
  4010dc:	stur	wzr, [x29, #-32]
  4010e0:	ldur	w0, [x29, #-32]
  4010e4:	bl	400c80 <log_get_max_level_realm@plt>
  4010e8:	ldur	w8, [x29, #-24]
  4010ec:	and	w8, w8, #0x7
  4010f0:	cmp	w0, w8
  4010f4:	b.lt	401128 <run+0xb0>  // b.tstop
  4010f8:	ldur	w8, [x29, #-32]
  4010fc:	ldur	w9, [x29, #-24]
  401100:	orr	w0, w9, w8, lsl #10
  401104:	ldur	w1, [x29, #-28]
  401108:	ldr	x2, [sp, #32]
  40110c:	mov	w3, #0x6d                  	// #109
  401110:	ldr	x4, [sp, #24]
  401114:	adrp	x5, 401000 <main+0x34>
  401118:	add	x5, x5, #0xb31
  40111c:	bl	400c90 <log_internal_realm@plt>
  401120:	str	w0, [sp, #20]
  401124:	b	40113c <run+0xc4>
  401128:	ldur	w0, [x29, #-28]
  40112c:	bl	400ca0 <abs@plt>
  401130:	mov	w8, wzr
  401134:	subs	w8, w8, w0, uxtb
  401138:	str	w8, [sp, #20]
  40113c:	ldr	w8, [sp, #20]
  401140:	stur	w8, [x29, #-36]
  401144:	ldur	w8, [x29, #-36]
  401148:	stur	w8, [x29, #-4]
  40114c:	b	401334 <run+0x2bc>
  401150:	ldur	w8, [x29, #-8]
  401154:	cmp	w8, #0x1
  401158:	b.le	401170 <run+0xf8>
  40115c:	ldur	x8, [x29, #-16]
  401160:	ldr	x8, [x8, #8]
  401164:	adrp	x9, 420000 <arg_dest>
  401168:	add	x9, x9, #0x0
  40116c:	str	x8, [x9]
  401170:	bl	400cb0 <in_initrd@plt>
  401174:	tbnz	w0, #0, 4011f4 <run+0x17c>
  401178:	mov	w8, #0x7                   	// #7
  40117c:	stur	w8, [x29, #-40]
  401180:	stur	wzr, [x29, #-44]
  401184:	stur	wzr, [x29, #-48]
  401188:	ldur	w0, [x29, #-48]
  40118c:	bl	400c80 <log_get_max_level_realm@plt>
  401190:	ldur	w8, [x29, #-40]
  401194:	and	w8, w8, #0x7
  401198:	cmp	w0, w8
  40119c:	b.lt	4011d0 <run+0x158>  // b.tstop
  4011a0:	ldur	w8, [x29, #-48]
  4011a4:	ldur	w9, [x29, #-40]
  4011a8:	orr	w0, w9, w8, lsl #10
  4011ac:	ldur	w1, [x29, #-44]
  4011b0:	ldr	x2, [sp, #32]
  4011b4:	mov	w3, #0x74                  	// #116
  4011b8:	ldr	x4, [sp, #24]
  4011bc:	adrp	x5, 401000 <main+0x34>
  4011c0:	add	x5, x5, #0xb5b
  4011c4:	bl	400c90 <log_internal_realm@plt>
  4011c8:	str	w0, [sp, #16]
  4011cc:	b	4011e4 <run+0x16c>
  4011d0:	ldur	w0, [x29, #-44]
  4011d4:	bl	400ca0 <abs@plt>
  4011d8:	mov	w8, wzr
  4011dc:	subs	w8, w8, w0, uxtb
  4011e0:	str	w8, [sp, #16]
  4011e4:	ldr	w8, [sp, #16]
  4011e8:	stur	w8, [x29, #-52]
  4011ec:	stur	wzr, [x29, #-4]
  4011f0:	b	401334 <run+0x2bc>
  4011f4:	adrp	x0, 401000 <main+0x34>
  4011f8:	add	x0, x0, #0x3ec
  4011fc:	mov	x8, xzr
  401200:	mov	x1, x8
  401204:	mov	w9, wzr
  401208:	mov	w2, w9
  40120c:	bl	400cc0 <proc_cmdline_parse@plt>
  401210:	stur	w0, [x29, #-20]
  401214:	ldur	w9, [x29, #-20]
  401218:	cmp	w9, #0x0
  40121c:	cset	w9, ge  // ge = tcont
  401220:	tbnz	w9, #0, 40129c <run+0x224>
  401224:	mov	w8, #0x4                   	// #4
  401228:	stur	w8, [x29, #-56]
  40122c:	ldur	w8, [x29, #-20]
  401230:	stur	w8, [x29, #-60]
  401234:	str	wzr, [sp, #64]
  401238:	ldr	w0, [sp, #64]
  40123c:	bl	400c80 <log_get_max_level_realm@plt>
  401240:	ldur	w8, [x29, #-56]
  401244:	and	w8, w8, #0x7
  401248:	cmp	w0, w8
  40124c:	b.lt	401280 <run+0x208>  // b.tstop
  401250:	ldr	w8, [sp, #64]
  401254:	ldur	w9, [x29, #-56]
  401258:	orr	w0, w9, w8, lsl #10
  40125c:	ldur	w1, [x29, #-60]
  401260:	ldr	x2, [sp, #32]
  401264:	mov	w3, #0x7a                  	// #122
  401268:	ldr	x4, [sp, #24]
  40126c:	adrp	x5, 401000 <main+0x34>
  401270:	add	x5, x5, #0xb7f
  401274:	bl	400c90 <log_internal_realm@plt>
  401278:	str	w0, [sp, #12]
  40127c:	b	401294 <run+0x21c>
  401280:	ldur	w0, [x29, #-60]
  401284:	bl	400ca0 <abs@plt>
  401288:	mov	w8, wzr
  40128c:	subs	w8, w8, w0, uxtb
  401290:	str	w8, [sp, #12]
  401294:	ldr	w8, [sp, #12]
  401298:	str	w8, [sp, #60]
  40129c:	adrp	x8, 420000 <arg_dest>
  4012a0:	add	x8, x8, #0x28
  4012a4:	ldrb	w9, [x8]
  4012a8:	tbnz	w9, #0, 4012b0 <run+0x238>
  4012ac:	b	40132c <run+0x2b4>
  4012b0:	mov	w8, #0x5                   	// #5
  4012b4:	str	w8, [sp, #56]
  4012b8:	str	wzr, [sp, #52]
  4012bc:	str	wzr, [sp, #48]
  4012c0:	ldr	w0, [sp, #48]
  4012c4:	bl	400c80 <log_get_max_level_realm@plt>
  4012c8:	ldr	w8, [sp, #56]
  4012cc:	and	w8, w8, #0x7
  4012d0:	cmp	w0, w8
  4012d4:	b.lt	401308 <run+0x290>  // b.tstop
  4012d8:	ldr	w8, [sp, #48]
  4012dc:	ldr	w9, [sp, #56]
  4012e0:	orr	w0, w9, w8, lsl #10
  4012e4:	ldr	w1, [sp, #52]
  4012e8:	ldr	x2, [sp, #32]
  4012ec:	mov	w3, #0x7d                  	// #125
  4012f0:	ldr	x4, [sp, #24]
  4012f4:	adrp	x5, 401000 <main+0x34>
  4012f8:	add	x5, x5, #0xbb1
  4012fc:	bl	400c90 <log_internal_realm@plt>
  401300:	str	w0, [sp, #8]
  401304:	b	40131c <run+0x2a4>
  401308:	ldr	w0, [sp, #52]
  40130c:	bl	400ca0 <abs@plt>
  401310:	mov	w8, wzr
  401314:	subs	w8, w8, w0, uxtb
  401318:	str	w8, [sp, #8]
  40131c:	ldr	w8, [sp, #8]
  401320:	str	w8, [sp, #44]
  401324:	stur	wzr, [x29, #-4]
  401328:	b	401334 <run+0x2bc>
  40132c:	bl	401664 <process_resume>
  401330:	stur	w0, [x29, #-4]
  401334:	ldur	w0, [x29, #-4]
  401338:	ldp	x29, x30, [sp, #128]
  40133c:	add	sp, sp, #0x90
  401340:	ret

0000000000401344 <static_destruct>:
  401344:	sub	sp, sp, #0x20
  401348:	stp	x29, x30, [sp, #16]
  40134c:	add	x29, sp, #0x10
  401350:	adrp	x8, 41f000 <__FRAME_END__+0x1d130>
  401354:	ldr	x8, [x8, #3864]
  401358:	str	x8, [sp]
  40135c:	cbnz	x8, 401364 <static_destruct+0x20>
  401360:	b	4013b8 <static_destruct+0x74>
  401364:	ldr	x0, [sp]
  401368:	mov	x1, #0x8                   	// #8
  40136c:	bl	401a1c <ALIGN_TO>
  401370:	str	x0, [sp, #8]
  401374:	ldr	x8, [sp, #8]
  401378:	adrp	x9, 41f000 <__FRAME_END__+0x1d130>
  40137c:	ldr	x9, [x9, #3872]
  401380:	cmp	x8, x9
  401384:	b.cs	4013b8 <static_destruct+0x74>  // b.hs, b.nlast
  401388:	ldr	x8, [sp, #8]
  40138c:	ldr	x8, [x8, #8]
  401390:	ldr	x9, [sp, #8]
  401394:	ldr	x0, [x9]
  401398:	blr	x8
  40139c:	ldr	x8, [sp, #8]
  4013a0:	add	x8, x8, #0x10
  4013a4:	mov	x0, x8
  4013a8:	mov	x1, #0x8                   	// #8
  4013ac:	bl	401a1c <ALIGN_TO>
  4013b0:	str	x0, [sp, #8]
  4013b4:	b	401374 <static_destruct+0x30>
  4013b8:	ldp	x29, x30, [sp, #16]
  4013bc:	add	sp, sp, #0x20
  4013c0:	ret

00000000004013c4 <freep>:
  4013c4:	sub	sp, sp, #0x20
  4013c8:	stp	x29, x30, [sp, #16]
  4013cc:	add	x29, sp, #0x10
  4013d0:	str	x0, [sp, #8]
  4013d4:	ldr	x8, [sp, #8]
  4013d8:	ldr	x0, [x8]
  4013dc:	bl	400cd0 <free@plt>
  4013e0:	ldp	x29, x30, [sp, #16]
  4013e4:	add	sp, sp, #0x20
  4013e8:	ret

00000000004013ec <parse_proc_cmdline_item>:
  4013ec:	sub	sp, sp, #0x70
  4013f0:	stp	x29, x30, [sp, #96]
  4013f4:	add	x29, sp, #0x60
  4013f8:	adrp	x8, 401000 <main+0x34>
  4013fc:	add	x8, x8, #0xbed
  401400:	adrp	x9, 401000 <main+0x34>
  401404:	add	x9, x9, #0xaf8
  401408:	add	x9, x9, #0x3
  40140c:	adrp	x10, 401000 <main+0x34>
  401410:	add	x10, x10, #0xbf4
  401414:	stur	x0, [x29, #-16]
  401418:	stur	x1, [x29, #-24]
  40141c:	stur	x2, [x29, #-32]
  401420:	ldur	x0, [x29, #-16]
  401424:	mov	x1, x8
  401428:	str	x9, [sp, #24]
  40142c:	str	x10, [sp, #16]
  401430:	bl	400ce0 <strcmp@plt>
  401434:	cbnz	w0, 4014b8 <parse_proc_cmdline_item+0xcc>
  401438:	ldur	x0, [x29, #-16]
  40143c:	ldur	x1, [x29, #-24]
  401440:	bl	401944 <proc_cmdline_value_missing>
  401444:	tbnz	w0, #0, 40144c <parse_proc_cmdline_item+0x60>
  401448:	b	401454 <parse_proc_cmdline_item+0x68>
  40144c:	stur	wzr, [x29, #-4]
  401450:	b	401654 <parse_proc_cmdline_item+0x268>
  401454:	ldur	x0, [x29, #-24]
  401458:	bl	400cf0 <fstab_node_to_udev_node@plt>
  40145c:	stur	x0, [x29, #-40]
  401460:	ldur	x8, [x29, #-40]
  401464:	cbnz	x8, 401488 <parse_proc_cmdline_item+0x9c>
  401468:	mov	w8, wzr
  40146c:	mov	w0, w8
  401470:	ldr	x1, [sp, #24]
  401474:	mov	w2, #0x26                  	// #38
  401478:	ldr	x3, [sp, #16]
  40147c:	bl	400d00 <log_oom_internal@plt>
  401480:	stur	w0, [x29, #-4]
  401484:	b	401654 <parse_proc_cmdline_item+0x268>
  401488:	adrp	x8, 420000 <arg_dest>
  40148c:	add	x8, x8, #0x10
  401490:	ldr	x0, [x8]
  401494:	str	x8, [sp, #8]
  401498:	bl	400cd0 <free@plt>
  40149c:	ldur	x8, [x29, #-40]
  4014a0:	ldr	x9, [sp, #8]
  4014a4:	str	x8, [x9]
  4014a8:	mov	x8, xzr
  4014ac:	stur	x8, [x29, #-40]
  4014b0:	stur	wzr, [x29, #-44]
  4014b4:	b	401650 <parse_proc_cmdline_item+0x264>
  4014b8:	ldur	x0, [x29, #-16]
  4014bc:	adrp	x1, 401000 <main+0x34>
  4014c0:	add	x1, x1, #0xc0c
  4014c4:	bl	400ce0 <strcmp@plt>
  4014c8:	cbnz	w0, 401530 <parse_proc_cmdline_item+0x144>
  4014cc:	ldur	x0, [x29, #-16]
  4014d0:	ldur	x1, [x29, #-24]
  4014d4:	bl	401944 <proc_cmdline_value_missing>
  4014d8:	tbnz	w0, #0, 4014e0 <parse_proc_cmdline_item+0xf4>
  4014dc:	b	4014e8 <parse_proc_cmdline_item+0xfc>
  4014e0:	stur	wzr, [x29, #-4]
  4014e4:	b	401654 <parse_proc_cmdline_item+0x268>
  4014e8:	ldur	x2, [x29, #-24]
  4014ec:	adrp	x0, 420000 <arg_dest>
  4014f0:	add	x0, x0, #0x18
  4014f4:	adrp	x1, 401000 <main+0x34>
  4014f8:	add	x1, x1, #0xc18
  4014fc:	mov	x8, xzr
  401500:	mov	x3, x8
  401504:	bl	400d10 <strextend_with_separator@plt>
  401508:	cbnz	x0, 40152c <parse_proc_cmdline_item+0x140>
  40150c:	mov	w8, wzr
  401510:	mov	w0, w8
  401514:	ldr	x1, [sp, #24]
  401518:	mov	w2, #0x30                  	// #48
  40151c:	ldr	x3, [sp, #16]
  401520:	bl	400d00 <log_oom_internal@plt>
  401524:	stur	w0, [x29, #-4]
  401528:	b	401654 <parse_proc_cmdline_item+0x268>
  40152c:	b	401650 <parse_proc_cmdline_item+0x264>
  401530:	ldur	x0, [x29, #-16]
  401534:	adrp	x1, 401000 <main+0x34>
  401538:	add	x1, x1, #0xc1a
  40153c:	bl	400ce0 <strcmp@plt>
  401540:	cbnz	w0, 4015a8 <parse_proc_cmdline_item+0x1bc>
  401544:	ldur	x0, [x29, #-16]
  401548:	ldur	x1, [x29, #-24]
  40154c:	bl	401944 <proc_cmdline_value_missing>
  401550:	tbnz	w0, #0, 401558 <parse_proc_cmdline_item+0x16c>
  401554:	b	401560 <parse_proc_cmdline_item+0x174>
  401558:	stur	wzr, [x29, #-4]
  40155c:	b	401654 <parse_proc_cmdline_item+0x268>
  401560:	ldur	x2, [x29, #-24]
  401564:	adrp	x0, 420000 <arg_dest>
  401568:	add	x0, x0, #0x20
  40156c:	adrp	x1, 401000 <main+0x34>
  401570:	add	x1, x1, #0xc18
  401574:	mov	x8, xzr
  401578:	mov	x3, x8
  40157c:	bl	400d10 <strextend_with_separator@plt>
  401580:	cbnz	x0, 4015a4 <parse_proc_cmdline_item+0x1b8>
  401584:	mov	w8, wzr
  401588:	mov	w0, w8
  40158c:	ldr	x1, [sp, #24]
  401590:	mov	w2, #0x38                  	// #56
  401594:	ldr	x3, [sp, #16]
  401598:	bl	400d00 <log_oom_internal@plt>
  40159c:	stur	w0, [x29, #-4]
  4015a0:	b	401654 <parse_proc_cmdline_item+0x268>
  4015a4:	b	401650 <parse_proc_cmdline_item+0x264>
  4015a8:	ldur	x0, [x29, #-16]
  4015ac:	adrp	x1, 401000 <main+0x34>
  4015b0:	add	x1, x1, #0xc24
  4015b4:	bl	400ce0 <strcmp@plt>
  4015b8:	cbnz	w0, 401650 <parse_proc_cmdline_item+0x264>
  4015bc:	ldur	x8, [x29, #-24]
  4015c0:	cbz	x8, 401640 <parse_proc_cmdline_item+0x254>
  4015c4:	mov	w8, #0x4                   	// #4
  4015c8:	str	w8, [sp, #48]
  4015cc:	str	wzr, [sp, #44]
  4015d0:	str	wzr, [sp, #40]
  4015d4:	ldr	w0, [sp, #40]
  4015d8:	bl	400c80 <log_get_max_level_realm@plt>
  4015dc:	ldr	w8, [sp, #48]
  4015e0:	and	w8, w8, #0x7
  4015e4:	cmp	w0, w8
  4015e8:	b.lt	40161c <parse_proc_cmdline_item+0x230>  // b.tstop
  4015ec:	ldr	w8, [sp, #40]
  4015f0:	ldr	w9, [sp, #48]
  4015f4:	orr	w0, w9, w8, lsl #10
  4015f8:	ldr	w1, [sp, #44]
  4015fc:	ldr	x2, [sp, #24]
  401600:	mov	w3, #0x3c                  	// #60
  401604:	ldr	x4, [sp, #16]
  401608:	adrp	x5, 401000 <main+0x34>
  40160c:	add	x5, x5, #0xc2d
  401610:	bl	400c90 <log_internal_realm@plt>
  401614:	str	w0, [sp, #4]
  401618:	b	401630 <parse_proc_cmdline_item+0x244>
  40161c:	ldr	w0, [sp, #44]
  401620:	bl	400ca0 <abs@plt>
  401624:	mov	w8, wzr
  401628:	subs	w8, w8, w0, uxtb
  40162c:	str	w8, [sp, #4]
  401630:	ldr	w8, [sp, #4]
  401634:	str	w8, [sp, #36]
  401638:	stur	wzr, [x29, #-4]
  40163c:	b	401654 <parse_proc_cmdline_item+0x268>
  401640:	adrp	x8, 420000 <arg_dest>
  401644:	add	x8, x8, #0x28
  401648:	mov	w9, #0x1                   	// #1
  40164c:	strb	w9, [x8]
  401650:	stur	wzr, [x29, #-4]
  401654:	ldur	w0, [x29, #-4]
  401658:	ldp	x29, x30, [sp, #96]
  40165c:	add	sp, sp, #0x70
  401660:	ret

0000000000401664 <process_resume>:
  401664:	sub	sp, sp, #0x80
  401668:	stp	x29, x30, [sp, #112]
  40166c:	add	x29, sp, #0x70
  401670:	mov	x8, xzr
  401674:	adrp	x9, 420000 <arg_dest>
  401678:	add	x9, x9, #0x10
  40167c:	adrp	x10, 401000 <main+0x34>
  401680:	add	x10, x10, #0xaf8
  401684:	add	x10, x10, #0x3
  401688:	adrp	x11, 401000 <main+0x34>
  40168c:	add	x11, x11, #0xd11
  401690:	stur	x8, [x29, #-16]
  401694:	stur	x8, [x29, #-24]
  401698:	ldr	x8, [x9]
  40169c:	str	x9, [sp, #32]
  4016a0:	str	x10, [sp, #24]
  4016a4:	str	x11, [sp, #16]
  4016a8:	cbnz	x8, 4016bc <process_resume+0x58>
  4016ac:	stur	wzr, [x29, #-4]
  4016b0:	mov	w8, #0x1                   	// #1
  4016b4:	stur	w8, [x29, #-40]
  4016b8:	b	401924 <process_resume+0x2c0>
  4016bc:	ldr	x8, [sp, #32]
  4016c0:	ldr	x1, [x8]
  4016c4:	adrp	x0, 401000 <main+0x34>
  4016c8:	add	x0, x0, #0xcef
  4016cc:	adrp	x2, 401000 <main+0x34>
  4016d0:	add	x2, x2, #0xd08
  4016d4:	sub	x3, x29, #0x10
  4016d8:	bl	400d20 <unit_name_from_path_instance@plt>
  4016dc:	stur	w0, [x29, #-36]
  4016e0:	ldur	w9, [x29, #-36]
  4016e4:	cmp	w9, #0x0
  4016e8:	cset	w9, ge  // ge = tcont
  4016ec:	tbnz	w9, #0, 40177c <process_resume+0x118>
  4016f0:	mov	w8, #0x3                   	// #3
  4016f4:	stur	w8, [x29, #-44]
  4016f8:	ldur	w8, [x29, #-36]
  4016fc:	stur	w8, [x29, #-48]
  401700:	stur	wzr, [x29, #-52]
  401704:	ldur	w0, [x29, #-52]
  401708:	bl	400c80 <log_get_max_level_realm@plt>
  40170c:	ldur	w8, [x29, #-44]
  401710:	and	w8, w8, #0x7
  401714:	cmp	w0, w8
  401718:	b.lt	40174c <process_resume+0xe8>  // b.tstop
  40171c:	ldur	w8, [x29, #-52]
  401720:	ldur	w9, [x29, #-44]
  401724:	orr	w0, w9, w8, lsl #10
  401728:	ldur	w1, [x29, #-48]
  40172c:	ldr	x2, [sp, #24]
  401730:	mov	w3, #0x50                  	// #80
  401734:	ldr	x4, [sp, #16]
  401738:	adrp	x5, 401000 <main+0x34>
  40173c:	add	x5, x5, #0xd20
  401740:	bl	400c90 <log_internal_realm@plt>
  401744:	str	w0, [sp, #12]
  401748:	b	401760 <process_resume+0xfc>
  40174c:	ldur	w0, [x29, #-48]
  401750:	bl	400ca0 <abs@plt>
  401754:	mov	w8, wzr
  401758:	subs	w8, w8, w0, uxtb
  40175c:	str	w8, [sp, #12]
  401760:	ldr	w8, [sp, #12]
  401764:	str	w8, [sp, #56]
  401768:	ldr	w8, [sp, #56]
  40176c:	stur	w8, [x29, #-4]
  401770:	mov	w8, #0x1                   	// #1
  401774:	stur	w8, [x29, #-40]
  401778:	b	401924 <process_resume+0x2c0>
  40177c:	adrp	x8, 420000 <arg_dest>
  401780:	add	x8, x8, #0x0
  401784:	ldr	x0, [x8]
  401788:	ldur	x2, [x29, #-16]
  40178c:	adrp	x1, 401000 <main+0x34>
  401790:	add	x1, x1, #0xd41
  401794:	mov	x8, xzr
  401798:	mov	x3, x8
  40179c:	bl	400d30 <strjoin_real@plt>
  4017a0:	stur	x0, [x29, #-24]
  4017a4:	ldur	x8, [x29, #-24]
  4017a8:	cbnz	x8, 4017d4 <process_resume+0x170>
  4017ac:	mov	w8, wzr
  4017b0:	mov	w0, w8
  4017b4:	ldr	x1, [sp, #24]
  4017b8:	mov	w2, #0x54                  	// #84
  4017bc:	ldr	x3, [sp, #16]
  4017c0:	bl	400d00 <log_oom_internal@plt>
  4017c4:	stur	w0, [x29, #-4]
  4017c8:	mov	w8, #0x1                   	// #1
  4017cc:	stur	w8, [x29, #-40]
  4017d0:	b	401924 <process_resume+0x2c0>
  4017d4:	ldur	x0, [x29, #-24]
  4017d8:	mov	w1, #0x1ed                 	// #493
  4017dc:	bl	400d40 <mkdir_parents_label@plt>
  4017e0:	ldur	x1, [x29, #-24]
  4017e4:	adrp	x8, 401000 <main+0x34>
  4017e8:	add	x8, x8, #0xd58
  4017ec:	mov	x0, x8
  4017f0:	bl	400d50 <symlink@plt>
  4017f4:	cmp	w0, #0x0
  4017f8:	cset	w9, ge  // ge = tcont
  4017fc:	tbnz	w9, #0, 401894 <process_resume+0x230>
  401800:	mov	w8, #0x3                   	// #3
  401804:	str	w8, [sp, #52]
  401808:	bl	400d60 <__errno_location@plt>
  40180c:	ldr	w8, [x0]
  401810:	str	w8, [sp, #48]
  401814:	str	wzr, [sp, #44]
  401818:	ldr	w0, [sp, #44]
  40181c:	bl	400c80 <log_get_max_level_realm@plt>
  401820:	ldr	w8, [sp, #52]
  401824:	and	w8, w8, #0x7
  401828:	cmp	w0, w8
  40182c:	b.lt	401864 <process_resume+0x200>  // b.tstop
  401830:	ldr	w8, [sp, #44]
  401834:	ldr	w9, [sp, #52]
  401838:	orr	w0, w9, w8, lsl #10
  40183c:	ldr	w1, [sp, #48]
  401840:	ldur	x6, [x29, #-24]
  401844:	ldr	x2, [sp, #24]
  401848:	mov	w3, #0x58                  	// #88
  40184c:	ldr	x4, [sp, #16]
  401850:	adrp	x5, 401000 <main+0x34>
  401854:	add	x5, x5, #0xd8e
  401858:	bl	400c90 <log_internal_realm@plt>
  40185c:	str	w0, [sp, #8]
  401860:	b	401878 <process_resume+0x214>
  401864:	ldr	w0, [sp, #48]
  401868:	bl	400ca0 <abs@plt>
  40186c:	mov	w8, wzr
  401870:	subs	w8, w8, w0, uxtb
  401874:	str	w8, [sp, #8]
  401878:	ldr	w8, [sp, #8]
  40187c:	str	w8, [sp, #40]
  401880:	ldr	w8, [sp, #40]
  401884:	stur	w8, [x29, #-4]
  401888:	mov	w8, #0x1                   	// #1
  40188c:	stur	w8, [x29, #-40]
  401890:	b	401924 <process_resume+0x2c0>
  401894:	adrp	x8, 420000 <arg_dest>
  401898:	add	x8, x8, #0x18
  40189c:	ldr	x8, [x8]
  4018a0:	cbz	x8, 4018b8 <process_resume+0x254>
  4018a4:	adrp	x8, 420000 <arg_dest>
  4018a8:	add	x8, x8, #0x18
  4018ac:	ldr	x8, [x8]
  4018b0:	stur	x8, [x29, #-32]
  4018b4:	b	4018c8 <process_resume+0x264>
  4018b8:	adrp	x8, 420000 <arg_dest>
  4018bc:	add	x8, x8, #0x20
  4018c0:	ldr	x8, [x8]
  4018c4:	stur	x8, [x29, #-32]
  4018c8:	adrp	x8, 420000 <arg_dest>
  4018cc:	add	x8, x8, #0x0
  4018d0:	ldr	x0, [x8]
  4018d4:	ldr	x8, [sp, #32]
  4018d8:	ldr	x1, [x8]
  4018dc:	ldr	x2, [x8]
  4018e0:	ldur	x3, [x29, #-32]
  4018e4:	mov	x9, xzr
  4018e8:	mov	x4, x9
  4018ec:	bl	400d70 <generator_write_timeouts@plt>
  4018f0:	stur	w0, [x29, #-36]
  4018f4:	ldur	w10, [x29, #-36]
  4018f8:	cmp	w10, #0x0
  4018fc:	cset	w10, ge  // ge = tcont
  401900:	tbnz	w10, #0, 401918 <process_resume+0x2b4>
  401904:	ldur	w8, [x29, #-36]
  401908:	stur	w8, [x29, #-4]
  40190c:	mov	w8, #0x1                   	// #1
  401910:	stur	w8, [x29, #-40]
  401914:	b	401924 <process_resume+0x2c0>
  401918:	stur	wzr, [x29, #-4]
  40191c:	mov	w8, #0x1                   	// #1
  401920:	stur	w8, [x29, #-40]
  401924:	sub	x0, x29, #0x18
  401928:	bl	4013c4 <freep>
  40192c:	sub	x0, x29, #0x10
  401930:	bl	4013c4 <freep>
  401934:	ldur	w0, [x29, #-4]
  401938:	ldp	x29, x30, [sp, #112]
  40193c:	add	sp, sp, #0x80
  401940:	ret

0000000000401944 <proc_cmdline_value_missing>:
  401944:	sub	sp, sp, #0x50
  401948:	stp	x29, x30, [sp, #64]
  40194c:	add	x29, sp, #0x40
  401950:	adrp	x8, 401000 <main+0x34>
  401954:	add	x8, x8, #0xc79
  401958:	add	x2, x8, #0x3
  40195c:	stur	x0, [x29, #-16]
  401960:	stur	x1, [x29, #-24]
  401964:	ldur	x8, [x29, #-24]
  401968:	str	x2, [sp, #16]
  40196c:	cbnz	x8, 4019fc <proc_cmdline_value_missing+0xb8>
  401970:	mov	w8, #0x4                   	// #4
  401974:	stur	w8, [x29, #-28]
  401978:	str	wzr, [sp, #32]
  40197c:	str	wzr, [sp, #28]
  401980:	ldr	w0, [sp, #28]
  401984:	bl	400c80 <log_get_max_level_realm@plt>
  401988:	ldur	w8, [x29, #-28]
  40198c:	and	w8, w8, #0x7
  401990:	cmp	w0, w8
  401994:	b.lt	4019d0 <proc_cmdline_value_missing+0x8c>  // b.tstop
  401998:	ldr	w8, [sp, #28]
  40199c:	ldur	w9, [x29, #-28]
  4019a0:	orr	w0, w9, w8, lsl #10
  4019a4:	ldr	w1, [sp, #32]
  4019a8:	ldur	x6, [x29, #-16]
  4019ac:	ldr	x2, [sp, #16]
  4019b0:	mov	w3, #0x21                  	// #33
  4019b4:	adrp	x4, 401000 <main+0x34>
  4019b8:	add	x4, x4, #0xc95
  4019bc:	adrp	x5, 401000 <main+0x34>
  4019c0:	add	x5, x5, #0xcb0
  4019c4:	bl	400c90 <log_internal_realm@plt>
  4019c8:	str	w0, [sp, #12]
  4019cc:	b	4019e4 <proc_cmdline_value_missing+0xa0>
  4019d0:	ldr	w0, [sp, #32]
  4019d4:	bl	400ca0 <abs@plt>
  4019d8:	mov	w8, wzr
  4019dc:	subs	w8, w8, w0, uxtb
  4019e0:	str	w8, [sp, #12]
  4019e4:	ldr	w8, [sp, #12]
  4019e8:	str	w8, [sp, #24]
  4019ec:	mov	w8, #0x1                   	// #1
  4019f0:	and	w8, w8, #0x1
  4019f4:	sturb	w8, [x29, #-1]
  4019f8:	b	401a08 <proc_cmdline_value_missing+0xc4>
  4019fc:	mov	w8, wzr
  401a00:	and	w8, w8, #0x1
  401a04:	sturb	w8, [x29, #-1]
  401a08:	ldurb	w8, [x29, #-1]
  401a0c:	and	w0, w8, #0x1
  401a10:	ldp	x29, x30, [sp, #64]
  401a14:	add	sp, sp, #0x50
  401a18:	ret

0000000000401a1c <ALIGN_TO>:
  401a1c:	sub	sp, sp, #0x10
  401a20:	str	x0, [sp, #8]
  401a24:	str	x1, [sp]
  401a28:	ldr	x8, [sp, #8]
  401a2c:	ldr	x9, [sp]
  401a30:	add	x8, x8, x9
  401a34:	subs	x8, x8, #0x1
  401a38:	ldr	x9, [sp]
  401a3c:	subs	x9, x9, #0x1
  401a40:	bic	x0, x8, x9
  401a44:	add	sp, sp, #0x10
  401a48:	ret
  401a4c:	udf	#0

0000000000401a50 <__libc_csu_init>:
  401a50:	stp	x29, x30, [sp, #-64]!
  401a54:	mov	x29, sp
  401a58:	stp	x19, x20, [sp, #16]
  401a5c:	adrp	x20, 41f000 <__FRAME_END__+0x1d130>
  401a60:	add	x20, x20, #0xce8
  401a64:	stp	x21, x22, [sp, #32]
  401a68:	adrp	x21, 41f000 <__FRAME_END__+0x1d130>
  401a6c:	add	x21, x21, #0xce0
  401a70:	sub	x20, x20, x21
  401a74:	mov	w22, w0
  401a78:	stp	x23, x24, [sp, #48]
  401a7c:	mov	x23, x1
  401a80:	mov	x24, x2
  401a84:	bl	400bc8 <_init>
  401a88:	cmp	xzr, x20, asr #3
  401a8c:	b.eq	401ab8 <__libc_csu_init+0x68>  // b.none
  401a90:	asr	x20, x20, #3
  401a94:	mov	x19, #0x0                   	// #0
  401a98:	ldr	x3, [x21, x19, lsl #3]
  401a9c:	mov	x2, x24
  401aa0:	add	x19, x19, #0x1
  401aa4:	mov	x1, x23
  401aa8:	mov	w0, w22
  401aac:	blr	x3
  401ab0:	cmp	x20, x19
  401ab4:	b.ne	401a98 <__libc_csu_init+0x48>  // b.any
  401ab8:	ldp	x19, x20, [sp, #16]
  401abc:	ldp	x21, x22, [sp, #32]
  401ac0:	ldp	x23, x24, [sp, #48]
  401ac4:	ldp	x29, x30, [sp], #64
  401ac8:	ret
  401acc:	nop

0000000000401ad0 <__libc_csu_fini>:
  401ad0:	ret

Disassembly of section .fini:

0000000000401ad4 <_fini>:
  401ad4:	stp	x29, x30, [sp, #-16]!
  401ad8:	mov	x29, sp
  401adc:	ldp	x29, x30, [sp], #16
  401ae0:	ret
