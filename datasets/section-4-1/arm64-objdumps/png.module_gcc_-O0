
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//png.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes32>:
       0:	sub	sp, sp, #0x10
       4:	str	w0, [sp, #12]
       8:	ldr	w0, [sp, #12]
       c:	rev	w0, w0
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <grub_memcpy>:
      18:	stp	x29, x30, [sp, #-48]!
      1c:	mov	x29, sp
      20:	str	x0, [sp, #40]
      24:	str	x1, [sp, #32]
      28:	str	x2, [sp, #24]
      2c:	ldr	x2, [sp, #24]
      30:	ldr	x1, [sp, #32]
      34:	ldr	x0, [sp, #40]
      38:	bl	0 <grub_memmove>
      3c:	ldp	x29, x30, [sp], #48
      40:	ret

0000000000000044 <grub_png_get_dword>:
      44:	stp	x29, x30, [sp, #-48]!
      48:	mov	x29, sp
      4c:	str	x0, [sp, #24]
      50:	str	wzr, [sp, #44]
      54:	ldr	x0, [sp, #24]
      58:	ldr	x0, [x0]
      5c:	add	x1, sp, #0x2c
      60:	mov	x2, #0x4                   	// #4
      64:	bl	0 <grub_file_read>
      68:	ldr	w0, [sp, #44]
      6c:	bl	0 <grub_swap_bytes32>
      70:	ldp	x29, x30, [sp], #48
      74:	ret

0000000000000078 <grub_png_get_byte>:
      78:	stp	x29, x30, [sp, #-48]!
      7c:	mov	x29, sp
      80:	str	x0, [sp, #24]
      84:	ldr	x0, [sp, #24]
      88:	ldr	w0, [x0, #80]
      8c:	cmp	w0, #0x0
      90:	b.eq	16c <grub_png_get_byte+0xf4>  // b.none
      94:	ldr	x0, [sp, #24]
      98:	ldr	w0, [x0, #84]
      9c:	cmp	w0, #0x0
      a0:	b.ne	16c <grub_png_get_byte+0xf4>  // b.any
      a4:	ldr	x0, [sp, #24]
      a8:	bl	44 <grub_png_get_dword>
      ac:	ldr	x0, [sp, #24]
      b0:	ldr	x0, [x0]
      b4:	ldr	x1, [x0, #24]
      b8:	ldr	x0, [sp, #24]
      bc:	ldr	w0, [x0, #24]
      c0:	mov	w0, w0
      c4:	cmp	x1, x0
      c8:	b.eq	e8 <grub_png_get_byte+0x70>  // b.none
      cc:	adrp	x0, 0 <grub_swap_bytes32>
      d0:	add	x0, x0, #0x0
      d4:	ldr	x1, [x0]
      d8:	mov	w0, #0x4                   	// #4
      dc:	bl	0 <grub_error>
      e0:	mov	w0, #0x0                   	// #0
      e4:	b	1ac <grub_png_get_byte+0x134>
      e8:	ldr	x0, [sp, #24]
      ec:	bl	44 <grub_png_get_dword>
      f0:	str	w0, [sp, #44]
      f4:	ldr	x0, [sp, #24]
      f8:	bl	44 <grub_png_get_dword>
      fc:	str	w0, [sp, #40]
     100:	ldr	w1, [sp, #40]
     104:	mov	w0, #0x4154                	// #16724
     108:	movk	w0, #0x4944, lsl #16
     10c:	cmp	w1, w0
     110:	b.eq	130 <grub_png_get_byte+0xb8>  // b.none
     114:	adrp	x0, 0 <grub_swap_bytes32>
     118:	add	x0, x0, #0x0
     11c:	ldr	x1, [x0]
     120:	mov	w0, #0x4                   	// #4
     124:	bl	0 <grub_error>
     128:	mov	w0, #0x0                   	// #0
     12c:	b	1ac <grub_png_get_byte+0x134>
     130:	ldr	x0, [sp, #24]
     134:	ldr	x0, [x0]
     138:	ldr	x0, [x0, #24]
     13c:	mov	w1, w0
     140:	ldr	w0, [sp, #44]
     144:	add	w0, w1, w0
     148:	add	w1, w0, #0x4
     14c:	ldr	x0, [sp, #24]
     150:	str	w1, [x0, #24]
     154:	ldr	w0, [sp, #44]
     158:	cmp	w0, #0x0
     15c:	b.eq	a4 <grub_png_get_byte+0x2c>  // b.none
     160:	ldr	w1, [sp, #44]
     164:	ldr	x0, [sp, #24]
     168:	str	w1, [x0, #84]
     16c:	strb	wzr, [sp, #39]
     170:	ldr	x0, [sp, #24]
     174:	ldr	x0, [x0]
     178:	add	x1, sp, #0x27
     17c:	mov	x2, #0x1                   	// #1
     180:	bl	0 <grub_file_read>
     184:	ldr	x0, [sp, #24]
     188:	ldr	w0, [x0, #80]
     18c:	cmp	w0, #0x0
     190:	b.eq	1a8 <grub_png_get_byte+0x130>  // b.none
     194:	ldr	x0, [sp, #24]
     198:	ldr	w0, [x0, #84]
     19c:	sub	w1, w0, #0x1
     1a0:	ldr	x0, [sp, #24]
     1a4:	str	w1, [x0, #84]
     1a8:	ldrb	w0, [sp, #39]
     1ac:	ldp	x29, x30, [sp], #48
     1b0:	ret
     1b4:	nop
	...

00000000000001c8 <grub_png_get_bits>:
     1c8:	stp	x29, x30, [sp, #-48]!
     1cc:	mov	x29, sp
     1d0:	str	x0, [sp, #24]
     1d4:	str	w1, [sp, #20]
     1d8:	ldr	x0, [sp, #24]
     1dc:	ldr	w0, [x0, #16]
     1e0:	cmp	w0, #0x0
     1e4:	b.ne	20c <grub_png_get_bits+0x44>  // b.any
     1e8:	ldr	x0, [sp, #24]
     1ec:	bl	78 <grub_png_get_byte>
     1f0:	and	w0, w0, #0xff
     1f4:	mov	w1, w0
     1f8:	ldr	x0, [sp, #24]
     1fc:	str	w1, [x0, #20]
     200:	ldr	x0, [sp, #24]
     204:	mov	w1, #0x8                   	// #8
     208:	str	w1, [x0, #16]
     20c:	str	wzr, [sp, #44]
     210:	str	wzr, [sp, #40]
     214:	b	2f0 <grub_png_get_bits+0x128>
     218:	ldr	x0, [sp, #24]
     21c:	ldr	w0, [x0, #16]
     220:	str	w0, [sp, #36]
     224:	ldr	w1, [sp, #36]
     228:	ldr	w0, [sp, #20]
     22c:	cmp	w1, w0
     230:	b.le	23c <grub_png_get_bits+0x74>
     234:	ldr	w0, [sp, #20]
     238:	str	w0, [sp, #36]
     23c:	ldr	x0, [sp, #24]
     240:	ldr	w1, [x0, #20]
     244:	ldr	w0, [sp, #36]
     248:	mov	w2, #0x1                   	// #1
     24c:	lsl	w0, w2, w0
     250:	sub	w0, w0, #0x1
     254:	and	w1, w1, w0
     258:	ldr	w0, [sp, #40]
     25c:	lsl	w0, w1, w0
     260:	ldr	w1, [sp, #44]
     264:	add	w0, w1, w0
     268:	str	w0, [sp, #44]
     26c:	ldr	w1, [sp, #20]
     270:	ldr	w0, [sp, #36]
     274:	sub	w0, w1, w0
     278:	str	w0, [sp, #20]
     27c:	ldr	w0, [sp, #20]
     280:	cmp	w0, #0x0
     284:	b.ne	2bc <grub_png_get_bits+0xf4>  // b.any
     288:	ldr	x0, [sp, #24]
     28c:	ldr	w1, [x0, #16]
     290:	ldr	w0, [sp, #36]
     294:	sub	w1, w1, w0
     298:	ldr	x0, [sp, #24]
     29c:	str	w1, [x0, #16]
     2a0:	ldr	x0, [sp, #24]
     2a4:	ldr	w1, [x0, #20]
     2a8:	ldr	w0, [sp, #36]
     2ac:	asr	w1, w1, w0
     2b0:	ldr	x0, [sp, #24]
     2b4:	str	w1, [x0, #20]
     2b8:	b	308 <grub_png_get_bits+0x140>
     2bc:	ldr	w1, [sp, #40]
     2c0:	ldr	w0, [sp, #36]
     2c4:	add	w0, w1, w0
     2c8:	str	w0, [sp, #40]
     2cc:	ldr	x0, [sp, #24]
     2d0:	bl	78 <grub_png_get_byte>
     2d4:	and	w0, w0, #0xff
     2d8:	mov	w1, w0
     2dc:	ldr	x0, [sp, #24]
     2e0:	str	w1, [x0, #20]
     2e4:	ldr	x0, [sp, #24]
     2e8:	mov	w1, #0x8                   	// #8
     2ec:	str	w1, [x0, #16]
     2f0:	adrp	x0, 0 <grub_swap_bytes32>
     2f4:	add	x0, x0, #0x0
     2f8:	ldr	x0, [x0]
     2fc:	ldr	w0, [x0]
     300:	cmp	w0, #0x0
     304:	b.eq	218 <grub_png_get_bits+0x50>  // b.none
     308:	ldr	w0, [sp, #44]
     30c:	ldp	x29, x30, [sp], #48
     310:	ret
     314:	nop
	...

0000000000000320 <grub_png_decode_image_palette>:
     320:	stp	x29, x30, [sp, #-48]!
     324:	mov	x29, sp
     328:	str	x0, [sp, #24]
     32c:	str	w1, [sp, #20]
     330:	str	wzr, [sp, #44]
     334:	ldr	w0, [sp, #20]
     338:	cmp	w0, #0x0
     33c:	b.ne	348 <grub_png_decode_image_palette+0x28>  // b.any
     340:	mov	w0, #0x0                   	// #0
     344:	b	420 <grub_png_decode_image_palette+0x100>
     348:	str	wzr, [sp, #44]
     34c:	b	3b0 <grub_png_decode_image_palette+0x90>
     350:	str	wzr, [sp, #40]
     354:	b	398 <grub_png_decode_image_palette+0x78>
     358:	ldr	x0, [sp, #24]
     35c:	bl	78 <grub_png_get_byte>
     360:	and	w4, w0, #0xff
     364:	ldr	x3, [sp, #24]
     368:	ldr	w2, [sp, #40]
     36c:	ldr	w1, [sp, #44]
     370:	mov	x0, x1
     374:	lsl	x0, x0, #1
     378:	add	x0, x0, x1
     37c:	add	x0, x3, x0
     380:	add	x0, x0, x2
     384:	mov	w1, w4
     388:	strb	w1, [x0, #1616]
     38c:	ldr	w0, [sp, #40]
     390:	add	w0, w0, #0x1
     394:	str	w0, [sp, #40]
     398:	ldr	w0, [sp, #40]
     39c:	cmp	w0, #0x2
     3a0:	b.ls	358 <grub_png_decode_image_palette+0x38>  // b.plast
     3a4:	ldr	w0, [sp, #44]
     3a8:	add	w0, w0, #0x1
     3ac:	str	w0, [sp, #44]
     3b0:	ldr	w1, [sp, #44]
     3b4:	mov	w0, w1
     3b8:	lsl	w0, w0, #1
     3bc:	add	w0, w0, w1
     3c0:	ldr	w1, [sp, #20]
     3c4:	cmp	w1, w0
     3c8:	b.ls	3d8 <grub_png_decode_image_palette+0xb8>  // b.plast
     3cc:	ldr	w0, [sp, #44]
     3d0:	cmp	w0, #0xff
     3d4:	b.ls	350 <grub_png_decode_image_palette+0x30>  // b.plast
     3d8:	ldr	w1, [sp, #44]
     3dc:	mov	w0, w1
     3e0:	lsl	w0, w0, #1
     3e4:	add	w0, w0, w1
     3e8:	str	w0, [sp, #44]
     3ec:	b	404 <grub_png_decode_image_palette+0xe4>
     3f0:	ldr	x0, [sp, #24]
     3f4:	bl	78 <grub_png_get_byte>
     3f8:	ldr	w0, [sp, #44]
     3fc:	add	w0, w0, #0x1
     400:	str	w0, [sp, #44]
     404:	ldr	w1, [sp, #44]
     408:	ldr	w0, [sp, #20]
     40c:	cmp	w1, w0
     410:	b.cc	3f0 <grub_png_decode_image_palette+0xd0>  // b.lo, b.ul, b.last
     414:	ldr	x0, [sp, #24]
     418:	bl	44 <grub_png_get_dword>
     41c:	mov	w0, #0x0                   	// #0
     420:	ldp	x29, x30, [sp], #48
     424:	ret

0000000000000428 <grub_png_decode_image_header>:
     428:	stp	x29, x30, [sp, #-48]!
     42c:	mov	x29, sp
     430:	str	x0, [sp, #24]
     434:	ldr	x0, [sp, #24]
     438:	bl	44 <grub_png_get_dword>
     43c:	mov	w1, w0
     440:	ldr	x0, [sp, #24]
     444:	str	w1, [x0, #28]
     448:	ldr	x0, [sp, #24]
     44c:	bl	44 <grub_png_get_dword>
     450:	mov	w1, w0
     454:	ldr	x0, [sp, #24]
     458:	str	w1, [x0, #32]
     45c:	ldr	x0, [sp, #24]
     460:	ldr	w0, [x0, #32]
     464:	cmp	w0, #0x0
     468:	b.eq	47c <grub_png_decode_image_header+0x54>  // b.none
     46c:	ldr	x0, [sp, #24]
     470:	ldr	w0, [x0, #28]
     474:	cmp	w0, #0x0
     478:	b.ne	494 <grub_png_decode_image_header+0x6c>  // b.any
     47c:	adrp	x0, 0 <grub_swap_bytes32>
     480:	add	x0, x0, #0x0
     484:	ldr	x1, [x0]
     488:	mov	w0, #0x4                   	// #4
     48c:	bl	0 <grub_error>
     490:	b	8b8 <grub_png_decode_image_header+0x490>
     494:	ldr	x0, [sp, #24]
     498:	bl	78 <grub_png_get_byte>
     49c:	and	w0, w0, #0xff
     4a0:	str	w0, [sp, #40]
     4a4:	ldr	w0, [sp, #40]
     4a8:	cmp	w0, #0x10
     4ac:	cset	w0, eq  // eq = none
     4b0:	and	w0, w0, #0xff
     4b4:	mov	w1, w0
     4b8:	ldr	x0, [sp, #24]
     4bc:	str	w1, [x0, #40]
     4c0:	ldr	x0, [sp, #24]
     4c4:	bl	78 <grub_png_get_byte>
     4c8:	and	w0, w0, #0xff
     4cc:	str	w0, [sp, #36]
     4d0:	ldr	w0, [sp, #36]
     4d4:	and	w0, w0, #0xfffffff9
     4d8:	cmp	w0, #0x0
     4dc:	b.eq	504 <grub_png_decode_image_header+0xdc>  // b.none
     4e0:	ldr	w0, [sp, #36]
     4e4:	cmp	w0, #0x3
     4e8:	b.eq	504 <grub_png_decode_image_header+0xdc>  // b.none
     4ec:	adrp	x0, 0 <grub_swap_bytes32>
     4f0:	add	x0, x0, #0x0
     4f4:	ldr	x1, [x0]
     4f8:	mov	w0, #0x4                   	// #4
     4fc:	bl	0 <grub_error>
     500:	b	8b8 <grub_png_decode_image_header+0x490>
     504:	ldr	w0, [sp, #36]
     508:	cmp	w0, #0x3
     50c:	b.ne	51c <grub_png_decode_image_header+0xf4>  // b.any
     510:	ldr	x0, [sp, #24]
     514:	mov	w1, #0x1                   	// #1
     518:	str	w1, [x0, #56]
     51c:	ldr	x0, [sp, #24]
     520:	ldr	w0, [x0, #40]
     524:	cmp	w0, #0x0
     528:	b.eq	554 <grub_png_decode_image_header+0x12c>  // b.none
     52c:	ldr	x0, [sp, #24]
     530:	ldr	w0, [x0, #56]
     534:	cmp	w0, #0x0
     538:	b.eq	554 <grub_png_decode_image_header+0x12c>  // b.none
     53c:	adrp	x0, 0 <grub_swap_bytes32>
     540:	add	x0, x0, #0x0
     544:	ldr	x1, [x0]
     548:	mov	w0, #0x4                   	// #4
     54c:	bl	0 <grub_error>
     550:	b	8b8 <grub_png_decode_image_header+0x490>
     554:	ldr	w0, [sp, #36]
     558:	and	w0, w0, #0x4
     55c:	cmp	w0, #0x0
     560:	b.eq	570 <grub_png_decode_image_header+0x148>  // b.none
     564:	mov	w0, #0x1                   	// #1
     568:	str	w0, [sp, #44]
     56c:	b	578 <grub_png_decode_image_header+0x150>
     570:	mov	w0, #0x4                   	// #4
     574:	str	w0, [sp, #44]
     578:	ldr	x0, [sp, #24]
     57c:	ldr	w0, [x0, #56]
     580:	cmp	w0, #0x0
     584:	b.eq	598 <grub_png_decode_image_header+0x170>  // b.none
     588:	ldr	x0, [sp, #24]
     58c:	mov	w1, #0x1                   	// #1
     590:	str	w1, [x0, #36]
     594:	b	5d0 <grub_png_decode_image_header+0x1a8>
     598:	ldr	w0, [sp, #36]
     59c:	and	w0, w0, #0x2
     5a0:	cmp	w0, #0x0
     5a4:	b.eq	5b8 <grub_png_decode_image_header+0x190>  // b.none
     5a8:	ldr	x0, [sp, #24]
     5ac:	mov	w1, #0x3                   	// #3
     5b0:	str	w1, [x0, #36]
     5b4:	b	5d0 <grub_png_decode_image_header+0x1a8>
     5b8:	ldr	x0, [sp, #24]
     5bc:	mov	w1, #0x1                   	// #1
     5c0:	str	w1, [x0, #48]
     5c4:	ldr	x0, [sp, #24]
     5c8:	mov	w1, #0x1                   	// #1
     5cc:	str	w1, [x0, #36]
     5d0:	ldr	w0, [sp, #40]
     5d4:	cmp	w0, #0x8
     5d8:	b.eq	62c <grub_png_decode_image_header+0x204>  // b.none
     5dc:	ldr	w0, [sp, #40]
     5e0:	cmp	w0, #0x10
     5e4:	b.eq	62c <grub_png_decode_image_header+0x204>  // b.none
     5e8:	ldr	w0, [sp, #40]
     5ec:	cmp	w0, #0x4
     5f0:	b.ne	614 <grub_png_decode_image_header+0x1ec>  // b.any
     5f4:	ldr	x0, [sp, #24]
     5f8:	ldr	w0, [x0, #48]
     5fc:	cmp	w0, #0x0
     600:	b.ne	62c <grub_png_decode_image_header+0x204>  // b.any
     604:	ldr	x0, [sp, #24]
     608:	ldr	w0, [x0, #56]
     60c:	cmp	w0, #0x0
     610:	b.ne	62c <grub_png_decode_image_header+0x204>  // b.any
     614:	adrp	x0, 0 <grub_swap_bytes32>
     618:	add	x0, x0, #0x0
     61c:	ldr	x1, [x0]
     620:	mov	w0, #0x4                   	// #4
     624:	bl	0 <grub_error>
     628:	b	8b8 <grub_png_decode_image_header+0x490>
     62c:	ldr	w0, [sp, #36]
     630:	and	w0, w0, #0x4
     634:	cmp	w0, #0x0
     638:	b.eq	650 <grub_png_decode_image_header+0x228>  // b.none
     63c:	ldr	x0, [sp, #24]
     640:	ldr	w0, [x0, #36]
     644:	add	w1, w0, #0x1
     648:	ldr	x0, [sp, #24]
     64c:	str	w1, [x0, #36]
     650:	ldr	x0, [sp, #24]
     654:	ldr	x4, [x0, #8]
     658:	ldr	x0, [sp, #24]
     65c:	ldr	w1, [x0, #28]
     660:	ldr	x0, [sp, #24]
     664:	ldr	w0, [x0, #32]
     668:	ldr	w3, [sp, #44]
     66c:	mov	w2, w0
     670:	mov	x0, x4
     674:	bl	0 <grub_video_bitmap_create>
     678:	cmp	w0, #0x0
     67c:	b.eq	694 <grub_png_decode_image_header+0x26c>  // b.none
     680:	adrp	x0, 0 <grub_swap_bytes32>
     684:	add	x0, x0, #0x0
     688:	ldr	x0, [x0]
     68c:	ldr	w0, [x0]
     690:	b	8b8 <grub_png_decode_image_header+0x490>
     694:	ldr	x0, [sp, #24]
     698:	ldr	w0, [x0, #40]
     69c:	cmp	w0, #0x0
     6a0:	b.eq	6b8 <grub_png_decode_image_header+0x290>  // b.none
     6a4:	ldr	x0, [sp, #24]
     6a8:	ldr	w0, [x0, #36]
     6ac:	lsl	w1, w0, #1
     6b0:	ldr	x0, [sp, #24]
     6b4:	str	w1, [x0, #36]
     6b8:	ldr	x0, [sp, #24]
     6bc:	ldr	w1, [sp, #40]
     6c0:	str	w1, [x0, #64]
     6c4:	ldr	x0, [sp, #24]
     6c8:	ldr	w0, [x0, #28]
     6cc:	ldr	x1, [sp, #24]
     6d0:	ldr	w1, [x1, #36]
     6d4:	mul	w0, w0, w1
     6d8:	mov	w1, w0
     6dc:	ldr	x0, [sp, #24]
     6e0:	str	w1, [x0, #60]
     6e4:	ldr	x0, [sp, #24]
     6e8:	ldr	w0, [x0, #64]
     6ec:	cmp	w0, #0x4
     6f0:	b.gt	71c <grub_png_decode_image_header+0x2f4>
     6f4:	ldr	x0, [sp, #24]
     6f8:	ldr	w0, [x0, #28]
     6fc:	ldr	x1, [sp, #24]
     700:	ldr	w1, [x1, #64]
     704:	mul	w0, w0, w1
     708:	add	w0, w0, #0x7
     70c:	lsr	w0, w0, #3
     710:	mov	w1, w0
     714:	ldr	x0, [sp, #24]
     718:	str	w1, [x0, #60]
     71c:	ldr	x0, [sp, #24]
     720:	ldr	w0, [x0, #40]
     724:	cmp	w0, #0x0
     728:	b.ne	74c <grub_png_decode_image_header+0x324>  // b.any
     72c:	ldr	x0, [sp, #24]
     730:	ldr	w0, [x0, #48]
     734:	cmp	w0, #0x0
     738:	b.ne	74c <grub_png_decode_image_header+0x324>  // b.any
     73c:	ldr	x0, [sp, #24]
     740:	ldr	w0, [x0, #56]
     744:	cmp	w0, #0x0
     748:	b.eq	7b8 <grub_png_decode_image_header+0x390>  // b.none
     74c:	ldr	x0, [sp, #24]
     750:	ldr	w0, [x0, #32]
     754:	ldr	x1, [sp, #24]
     758:	ldr	w1, [x1, #60]
     75c:	mul	w0, w0, w1
     760:	mov	w0, w0
     764:	bl	0 <grub_malloc>
     768:	mov	x1, x0
     76c:	ldr	x0, [sp, #24]
     770:	str	x1, [x0, #72]
     774:	adrp	x0, 0 <grub_swap_bytes32>
     778:	add	x0, x0, #0x0
     77c:	ldr	x0, [x0]
     780:	ldr	w0, [x0]
     784:	cmp	w0, #0x0
     788:	b.eq	7a0 <grub_png_decode_image_header+0x378>  // b.none
     78c:	adrp	x0, 0 <grub_swap_bytes32>
     790:	add	x0, x0, #0x0
     794:	ldr	x0, [x0]
     798:	ldr	w0, [x0]
     79c:	b	8b8 <grub_png_decode_image_header+0x490>
     7a0:	ldr	x0, [sp, #24]
     7a4:	ldr	x1, [x0, #72]
     7a8:	ldr	x0, [sp, #24]
     7ac:	add	x0, x0, #0x8, lsl #12
     7b0:	str	x1, [x0, #2456]
     7b4:	b	7dc <grub_png_decode_image_header+0x3b4>
     7b8:	ldr	x0, [sp, #24]
     7bc:	str	xzr, [x0, #72]
     7c0:	ldr	x0, [sp, #24]
     7c4:	ldr	x0, [x0, #8]
     7c8:	ldr	x0, [x0]
     7cc:	ldr	x1, [x0, #80]
     7d0:	ldr	x0, [sp, #24]
     7d4:	add	x0, x0, #0x8, lsl #12
     7d8:	str	x1, [x0, #2456]
     7dc:	ldr	x0, [sp, #24]
     7e0:	ldr	w0, [x0, #32]
     7e4:	ldr	x1, [sp, #24]
     7e8:	ldr	w1, [x1, #60]
     7ec:	add	w1, w1, #0x1
     7f0:	mul	w0, w0, w1
     7f4:	mov	w1, w0
     7f8:	ldr	x0, [sp, #24]
     7fc:	str	w1, [x0, #44]
     800:	ldr	x0, [sp, #24]
     804:	add	x0, x0, #0x8, lsl #12
     808:	str	wzr, [x0, #2464]
     80c:	ldr	x0, [sp, #24]
     810:	add	x0, x0, #0x8, lsl #12
     814:	mov	w1, #0x1                   	// #1
     818:	str	w1, [x0, #2472]
     81c:	ldr	x0, [sp, #24]
     820:	bl	78 <grub_png_get_byte>
     824:	and	w0, w0, #0xff
     828:	cmp	w0, #0x0
     82c:	b.eq	848 <grub_png_decode_image_header+0x420>  // b.none
     830:	adrp	x0, 0 <grub_swap_bytes32>
     834:	add	x0, x0, #0x0
     838:	ldr	x1, [x0]
     83c:	mov	w0, #0x4                   	// #4
     840:	bl	0 <grub_error>
     844:	b	8b8 <grub_png_decode_image_header+0x490>
     848:	ldr	x0, [sp, #24]
     84c:	bl	78 <grub_png_get_byte>
     850:	and	w0, w0, #0xff
     854:	cmp	w0, #0x0
     858:	b.eq	874 <grub_png_decode_image_header+0x44c>  // b.none
     85c:	adrp	x0, 0 <grub_swap_bytes32>
     860:	add	x0, x0, #0x0
     864:	ldr	x1, [x0]
     868:	mov	w0, #0x4                   	// #4
     86c:	bl	0 <grub_error>
     870:	b	8b8 <grub_png_decode_image_header+0x490>
     874:	ldr	x0, [sp, #24]
     878:	bl	78 <grub_png_get_byte>
     87c:	and	w0, w0, #0xff
     880:	cmp	w0, #0x0
     884:	b.eq	8a0 <grub_png_decode_image_header+0x478>  // b.none
     888:	adrp	x0, 0 <grub_swap_bytes32>
     88c:	add	x0, x0, #0x0
     890:	ldr	x1, [x0]
     894:	mov	w0, #0x4                   	// #4
     898:	bl	0 <grub_error>
     89c:	b	8b8 <grub_png_decode_image_header+0x490>
     8a0:	ldr	x0, [sp, #24]
     8a4:	bl	44 <grub_png_get_dword>
     8a8:	adrp	x0, 0 <grub_swap_bytes32>
     8ac:	add	x0, x0, #0x0
     8b0:	ldr	x0, [x0]
     8b4:	ldr	w0, [x0]
     8b8:	ldp	x29, x30, [sp], #48
     8bc:	ret
	...

00000000000008f8 <grub_png_init_huff_table>:
     8f8:	stp	x29, x30, [sp, #-64]!
     8fc:	mov	x29, sp
     900:	str	x0, [sp, #56]
     904:	str	w1, [sp, #52]
     908:	str	x2, [sp, #40]
     90c:	str	x3, [sp, #32]
     910:	str	x4, [sp, #24]
     914:	ldr	x0, [sp, #56]
     918:	ldr	x1, [sp, #40]
     91c:	str	x1, [x0]
     920:	ldr	x0, [sp, #56]
     924:	ldr	x1, [sp, #32]
     928:	str	x1, [x0, #8]
     92c:	ldr	x0, [sp, #56]
     930:	ldr	x1, [sp, #24]
     934:	str	x1, [x0, #16]
     938:	ldr	x0, [sp, #56]
     93c:	str	wzr, [x0, #24]
     940:	ldr	x0, [sp, #56]
     944:	ldr	w1, [sp, #52]
     948:	str	w1, [x0, #28]
     94c:	ldrsw	x0, [sp, #52]
     950:	lsl	x0, x0, #2
     954:	mov	x2, x0
     958:	mov	w1, #0x0                   	// #0
     95c:	ldr	x0, [sp, #32]
     960:	bl	0 <grub_memset>
     964:	nop
     968:	ldp	x29, x30, [sp], #64
     96c:	ret

0000000000000970 <grub_png_insert_huff_item>:
     970:	stp	x29, x30, [sp, #-48]!
     974:	mov	x29, sp
     978:	str	x0, [sp, #24]
     97c:	str	w1, [sp, #20]
     980:	str	w2, [sp, #16]
     984:	ldr	w0, [sp, #16]
     988:	cmp	w0, #0x0
     98c:	b.eq	af0 <grub_png_insert_huff_item+0x180>  // b.none
     990:	ldr	x0, [sp, #24]
     994:	ldr	w0, [x0, #28]
     998:	ldr	w1, [sp, #16]
     99c:	cmp	w1, w0
     9a0:	b.le	9bc <grub_png_insert_huff_item+0x4c>
     9a4:	adrp	x0, 0 <grub_swap_bytes32>
     9a8:	add	x0, x0, #0x0
     9ac:	ldr	x1, [x0]
     9b0:	mov	w0, #0x4                   	// #4
     9b4:	bl	0 <grub_error>
     9b8:	b	af4 <grub_png_insert_huff_item+0x184>
     9bc:	str	wzr, [sp, #40]
     9c0:	ldr	w0, [sp, #16]
     9c4:	str	w0, [sp, #44]
     9c8:	b	9fc <grub_png_insert_huff_item+0x8c>
     9cc:	ldr	x0, [sp, #24]
     9d0:	ldr	x1, [x0, #8]
     9d4:	ldrsw	x0, [sp, #44]
     9d8:	lsl	x0, x0, #2
     9dc:	add	x0, x1, x0
     9e0:	ldr	w0, [x0]
     9e4:	ldr	w1, [sp, #40]
     9e8:	add	w0, w1, w0
     9ec:	str	w0, [sp, #40]
     9f0:	ldr	w0, [sp, #44]
     9f4:	add	w0, w0, #0x1
     9f8:	str	w0, [sp, #44]
     9fc:	ldr	x0, [sp, #24]
     a00:	ldr	w0, [x0, #28]
     a04:	ldr	w1, [sp, #44]
     a08:	cmp	w1, w0
     a0c:	b.lt	9cc <grub_png_insert_huff_item+0x5c>  // b.tstop
     a10:	str	wzr, [sp, #44]
     a14:	b	a78 <grub_png_insert_huff_item+0x108>
     a18:	ldr	x0, [sp, #24]
     a1c:	ldr	x1, [x0]
     a20:	ldr	x0, [sp, #24]
     a24:	ldr	w2, [x0, #24]
     a28:	ldr	w0, [sp, #44]
     a2c:	sub	w0, w2, w0
     a30:	sxtw	x0, w0
     a34:	lsl	x0, x0, #2
     a38:	sub	x0, x0, #0x4
     a3c:	add	x1, x1, x0
     a40:	ldr	x0, [sp, #24]
     a44:	ldr	x2, [x0]
     a48:	ldr	x0, [sp, #24]
     a4c:	ldr	w3, [x0, #24]
     a50:	ldr	w0, [sp, #44]
     a54:	sub	w0, w3, w0
     a58:	sxtw	x0, w0
     a5c:	lsl	x0, x0, #2
     a60:	add	x0, x2, x0
     a64:	ldr	w1, [x1]
     a68:	str	w1, [x0]
     a6c:	ldr	w0, [sp, #44]
     a70:	add	w0, w0, #0x1
     a74:	str	w0, [sp, #44]
     a78:	ldr	w1, [sp, #44]
     a7c:	ldr	w0, [sp, #40]
     a80:	cmp	w1, w0
     a84:	b.lt	a18 <grub_png_insert_huff_item+0xa8>  // b.tstop
     a88:	ldr	x0, [sp, #24]
     a8c:	ldr	x1, [x0]
     a90:	ldr	x0, [sp, #24]
     a94:	ldr	w2, [x0, #24]
     a98:	ldr	w0, [sp, #40]
     a9c:	sub	w0, w2, w0
     aa0:	sxtw	x0, w0
     aa4:	lsl	x0, x0, #2
     aa8:	add	x0, x1, x0
     aac:	ldr	w1, [sp, #20]
     ab0:	str	w1, [x0]
     ab4:	ldr	x0, [sp, #24]
     ab8:	ldr	w0, [x0, #24]
     abc:	add	w1, w0, #0x1
     ac0:	ldr	x0, [sp, #24]
     ac4:	str	w1, [x0, #24]
     ac8:	ldr	x0, [sp, #24]
     acc:	ldr	x1, [x0, #8]
     ad0:	ldrsw	x0, [sp, #16]
     ad4:	lsl	x0, x0, #2
     ad8:	sub	x0, x0, #0x4
     adc:	add	x0, x1, x0
     ae0:	ldr	w1, [x0]
     ae4:	add	w1, w1, #0x1
     ae8:	str	w1, [x0]
     aec:	b	af4 <grub_png_insert_huff_item+0x184>
     af0:	nop
     af4:	ldp	x29, x30, [sp], #48
     af8:	ret
     afc:	nop
	...

0000000000000b08 <grub_png_build_huff_table>:
     b08:	sub	sp, sp, #0x20
     b0c:	str	x0, [sp, #8]
     b10:	str	wzr, [sp, #28]
     b14:	str	wzr, [sp, #24]
     b18:	str	wzr, [sp, #20]
     b1c:	b	bc0 <grub_png_build_huff_table+0xb8>
     b20:	ldr	x0, [sp, #8]
     b24:	ldr	x1, [x0, #8]
     b28:	ldrsw	x0, [sp, #20]
     b2c:	lsl	x0, x0, #2
     b30:	add	x0, x1, x0
     b34:	ldr	w0, [x0]
     b38:	ldr	w1, [sp, #28]
     b3c:	add	w0, w1, w0
     b40:	str	w0, [sp, #28]
     b44:	ldr	x0, [sp, #8]
     b48:	ldr	x1, [x0, #8]
     b4c:	ldrsw	x0, [sp, #20]
     b50:	lsl	x0, x0, #2
     b54:	add	x0, x1, x0
     b58:	ldr	w0, [x0]
     b5c:	ldr	w1, [sp, #24]
     b60:	add	w0, w1, w0
     b64:	str	w0, [sp, #24]
     b68:	ldr	x0, [sp, #8]
     b6c:	ldr	x1, [x0, #8]
     b70:	ldrsw	x0, [sp, #20]
     b74:	lsl	x0, x0, #2
     b78:	add	x0, x1, x0
     b7c:	ldr	w1, [sp, #28]
     b80:	str	w1, [x0]
     b84:	ldr	x0, [sp, #8]
     b88:	ldr	x1, [x0, #16]
     b8c:	ldrsw	x0, [sp, #20]
     b90:	lsl	x0, x0, #2
     b94:	add	x0, x1, x0
     b98:	ldr	w2, [sp, #24]
     b9c:	ldr	w1, [sp, #28]
     ba0:	sub	w1, w2, w1
     ba4:	str	w1, [x0]
     ba8:	ldr	w0, [sp, #28]
     bac:	lsl	w0, w0, #1
     bb0:	str	w0, [sp, #28]
     bb4:	ldr	w0, [sp, #20]
     bb8:	add	w0, w0, #0x1
     bbc:	str	w0, [sp, #20]
     bc0:	ldr	x0, [sp, #8]
     bc4:	ldr	w0, [x0, #28]
     bc8:	ldr	w1, [sp, #20]
     bcc:	cmp	w1, w0
     bd0:	b.lt	b20 <grub_png_build_huff_table+0x18>  // b.tstop
     bd4:	nop
     bd8:	nop
     bdc:	add	sp, sp, #0x20
     be0:	ret

0000000000000be4 <grub_png_get_huff_code>:
     be4:	stp	x29, x30, [sp, #-64]!
     be8:	mov	x29, sp
     bec:	str	x19, [sp, #16]
     bf0:	str	x0, [sp, #40]
     bf4:	str	x1, [sp, #32]
     bf8:	str	wzr, [sp, #60]
     bfc:	str	wzr, [sp, #56]
     c00:	b	c8c <grub_png_get_huff_code+0xa8>
     c04:	ldr	w0, [sp, #60]
     c08:	lsl	w19, w0, #1
     c0c:	mov	w1, #0x1                   	// #1
     c10:	ldr	x0, [sp, #40]
     c14:	bl	1c8 <grub_png_get_bits>
     c18:	add	w0, w19, w0
     c1c:	str	w0, [sp, #60]
     c20:	ldr	x0, [sp, #32]
     c24:	ldr	x1, [x0, #8]
     c28:	ldrsw	x0, [sp, #56]
     c2c:	lsl	x0, x0, #2
     c30:	add	x0, x1, x0
     c34:	ldr	w0, [x0]
     c38:	ldr	w1, [sp, #60]
     c3c:	cmp	w1, w0
     c40:	b.ge	c80 <grub_png_get_huff_code+0x9c>  // b.tcont
     c44:	ldr	x0, [sp, #32]
     c48:	ldr	x1, [x0]
     c4c:	ldr	x0, [sp, #32]
     c50:	ldr	x2, [x0, #16]
     c54:	ldrsw	x0, [sp, #56]
     c58:	lsl	x0, x0, #2
     c5c:	add	x0, x2, x0
     c60:	ldr	w2, [x0]
     c64:	ldr	w0, [sp, #60]
     c68:	add	w0, w2, w0
     c6c:	sxtw	x0, w0
     c70:	lsl	x0, x0, #2
     c74:	add	x0, x1, x0
     c78:	ldr	w0, [x0]
     c7c:	b	ca4 <grub_png_get_huff_code+0xc0>
     c80:	ldr	w0, [sp, #56]
     c84:	add	w0, w0, #0x1
     c88:	str	w0, [sp, #56]
     c8c:	ldr	x0, [sp, #32]
     c90:	ldr	w0, [x0, #28]
     c94:	ldr	w1, [sp, #56]
     c98:	cmp	w1, w0
     c9c:	b.lt	c04 <grub_png_get_huff_code+0x20>  // b.tstop
     ca0:	mov	w0, #0x0                   	// #0
     ca4:	ldr	x19, [sp, #16]
     ca8:	ldp	x29, x30, [sp], #64
     cac:	ret

0000000000000cb0 <grub_png_init_fixed_block>:
     cb0:	stp	x29, x30, [sp, #-48]!
     cb4:	mov	x29, sp
     cb8:	str	x0, [sp, #24]
     cbc:	ldr	x0, [sp, #24]
     cc0:	add	x5, x0, #0x950
     cc4:	ldr	x0, [sp, #24]
     cc8:	add	x1, x0, #0x58
     ccc:	ldr	x0, [sp, #24]
     cd0:	add	x2, x0, #0x4d8
     cd4:	ldr	x0, [sp, #24]
     cd8:	add	x0, x0, #0x518
     cdc:	mov	x4, x0
     ce0:	mov	x3, x2
     ce4:	mov	x2, x1
     ce8:	mov	w1, #0x10                  	// #16
     cec:	mov	x0, x5
     cf0:	bl	8f8 <grub_png_init_huff_table>
     cf4:	str	wzr, [sp, #44]
     cf8:	b	d1c <grub_png_init_fixed_block+0x6c>
     cfc:	ldr	x0, [sp, #24]
     d00:	add	x0, x0, #0x950
     d04:	mov	w2, #0x8                   	// #8
     d08:	ldr	w1, [sp, #44]
     d0c:	bl	970 <grub_png_insert_huff_item>
     d10:	ldr	w0, [sp, #44]
     d14:	add	w0, w0, #0x1
     d18:	str	w0, [sp, #44]
     d1c:	ldr	w0, [sp, #44]
     d20:	cmp	w0, #0x8f
     d24:	b.le	cfc <grub_png_init_fixed_block+0x4c>
     d28:	b	d4c <grub_png_init_fixed_block+0x9c>
     d2c:	ldr	x0, [sp, #24]
     d30:	add	x0, x0, #0x950
     d34:	mov	w2, #0x9                   	// #9
     d38:	ldr	w1, [sp, #44]
     d3c:	bl	970 <grub_png_insert_huff_item>
     d40:	ldr	w0, [sp, #44]
     d44:	add	w0, w0, #0x1
     d48:	str	w0, [sp, #44]
     d4c:	ldr	w0, [sp, #44]
     d50:	cmp	w0, #0xff
     d54:	b.le	d2c <grub_png_init_fixed_block+0x7c>
     d58:	b	d7c <grub_png_init_fixed_block+0xcc>
     d5c:	ldr	x0, [sp, #24]
     d60:	add	x0, x0, #0x950
     d64:	mov	w2, #0x7                   	// #7
     d68:	ldr	w1, [sp, #44]
     d6c:	bl	970 <grub_png_insert_huff_item>
     d70:	ldr	w0, [sp, #44]
     d74:	add	w0, w0, #0x1
     d78:	str	w0, [sp, #44]
     d7c:	ldr	w0, [sp, #44]
     d80:	cmp	w0, #0x117
     d84:	b.le	d5c <grub_png_init_fixed_block+0xac>
     d88:	b	dac <grub_png_init_fixed_block+0xfc>
     d8c:	ldr	x0, [sp, #24]
     d90:	add	x0, x0, #0x950
     d94:	mov	w2, #0x8                   	// #8
     d98:	ldr	w1, [sp, #44]
     d9c:	bl	970 <grub_png_insert_huff_item>
     da0:	ldr	w0, [sp, #44]
     da4:	add	w0, w0, #0x1
     da8:	str	w0, [sp, #44]
     dac:	ldr	w0, [sp, #44]
     db0:	cmp	w0, #0x11f
     db4:	b.le	d8c <grub_png_init_fixed_block+0xdc>
     db8:	ldr	x0, [sp, #24]
     dbc:	add	x0, x0, #0x950
     dc0:	bl	b08 <grub_png_build_huff_table>
     dc4:	ldr	x0, [sp, #24]
     dc8:	add	x5, x0, #0x970
     dcc:	ldr	x0, [sp, #24]
     dd0:	add	x1, x0, #0x558
     dd4:	ldr	x0, [sp, #24]
     dd8:	add	x2, x0, #0x5d0
     ddc:	ldr	x0, [sp, #24]
     de0:	add	x0, x0, #0x610
     de4:	mov	x4, x0
     de8:	mov	x3, x2
     dec:	mov	x2, x1
     df0:	mov	w1, #0x10                  	// #16
     df4:	mov	x0, x5
     df8:	bl	8f8 <grub_png_init_huff_table>
     dfc:	str	wzr, [sp, #44]
     e00:	b	e24 <grub_png_init_fixed_block+0x174>
     e04:	ldr	x0, [sp, #24]
     e08:	add	x0, x0, #0x970
     e0c:	mov	w2, #0x5                   	// #5
     e10:	ldr	w1, [sp, #44]
     e14:	bl	970 <grub_png_insert_huff_item>
     e18:	ldr	w0, [sp, #44]
     e1c:	add	w0, w0, #0x1
     e20:	str	w0, [sp, #44]
     e24:	ldr	w0, [sp, #44]
     e28:	cmp	w0, #0x1d
     e2c:	b.le	e04 <grub_png_init_fixed_block+0x154>
     e30:	ldr	x0, [sp, #24]
     e34:	add	x0, x0, #0x970
     e38:	bl	b08 <grub_png_build_huff_table>
     e3c:	adrp	x0, 0 <grub_swap_bytes32>
     e40:	add	x0, x0, #0x0
     e44:	ldr	x0, [x0]
     e48:	ldr	w0, [x0]
     e4c:	ldp	x29, x30, [sp], #48
     e50:	ret
     e54:	nop
	...

0000000000000e60 <grub_png_init_dynamic_block>:
     e60:	stp	x29, x30, [sp, #-288]!
     e64:	mov	x29, sp
     e68:	str	x0, [sp, #24]
     e6c:	mov	w1, #0x5                   	// #5
     e70:	ldr	x0, [sp, #24]
     e74:	bl	1c8 <grub_png_get_bits>
     e78:	add	w0, w0, #0x101
     e7c:	str	w0, [sp, #256]
     e80:	mov	w1, #0x5                   	// #5
     e84:	ldr	x0, [sp, #24]
     e88:	bl	1c8 <grub_png_get_bits>
     e8c:	add	w0, w0, #0x1
     e90:	str	w0, [sp, #252]
     e94:	mov	w1, #0x4                   	// #4
     e98:	ldr	x0, [sp, #24]
     e9c:	bl	1c8 <grub_png_get_bits>
     ea0:	add	w0, w0, #0x4
     ea4:	str	w0, [sp, #248]
     ea8:	ldr	w0, [sp, #256]
     eac:	cmp	w0, #0x120
     eb0:	b.gt	ecc <grub_png_init_dynamic_block+0x6c>
     eb4:	ldr	w0, [sp, #252]
     eb8:	cmp	w0, #0x1e
     ebc:	b.gt	ecc <grub_png_init_dynamic_block+0x6c>
     ec0:	ldr	w0, [sp, #248]
     ec4:	cmp	w0, #0x13
     ec8:	b.le	ee4 <grub_png_init_dynamic_block+0x84>
     ecc:	adrp	x0, 0 <grub_swap_bytes32>
     ed0:	add	x0, x0, #0x0
     ed4:	ldr	x1, [x0]
     ed8:	mov	w0, #0x4                   	// #4
     edc:	bl	0 <grub_error>
     ee0:	b	1214 <grub_png_init_dynamic_block+0x3b4>
     ee4:	add	x3, sp, #0x40
     ee8:	add	x2, sp, #0x60
     eec:	add	x1, sp, #0x80
     ef0:	add	x0, sp, #0xd0
     ef4:	mov	x4, x3
     ef8:	mov	x3, x2
     efc:	mov	x2, x1
     f00:	mov	w1, #0x8                   	// #8
     f04:	bl	8f8 <grub_png_init_huff_table>
     f08:	str	wzr, [sp, #284]
     f0c:	b	f50 <grub_png_init_dynamic_block+0xf0>
     f10:	mov	w1, #0x3                   	// #3
     f14:	ldr	x0, [sp, #24]
     f18:	bl	1c8 <grub_png_get_bits>
     f1c:	mov	w2, w0
     f20:	adrp	x0, 0 <grub_swap_bytes32>
     f24:	add	x0, x0, #0x0
     f28:	ldr	x1, [x0]
     f2c:	ldrsw	x0, [sp, #284]
     f30:	ldrb	w0, [x1, x0]
     f34:	and	w2, w2, #0xff
     f38:	sxtw	x0, w0
     f3c:	add	x1, sp, #0x28
     f40:	strb	w2, [x1, x0]
     f44:	ldr	w0, [sp, #284]
     f48:	add	w0, w0, #0x1
     f4c:	str	w0, [sp, #284]
     f50:	ldr	w1, [sp, #284]
     f54:	ldr	w0, [sp, #248]
     f58:	cmp	w1, w0
     f5c:	b.lt	f10 <grub_png_init_dynamic_block+0xb0>  // b.tstop
     f60:	b	f90 <grub_png_init_dynamic_block+0x130>
     f64:	adrp	x0, 0 <grub_swap_bytes32>
     f68:	add	x0, x0, #0x0
     f6c:	ldr	x1, [x0]
     f70:	ldrsw	x0, [sp, #284]
     f74:	ldrb	w0, [x1, x0]
     f78:	sxtw	x0, w0
     f7c:	add	x1, sp, #0x28
     f80:	strb	wzr, [x1, x0]
     f84:	ldr	w0, [sp, #284]
     f88:	add	w0, w0, #0x1
     f8c:	str	w0, [sp, #284]
     f90:	ldr	w0, [sp, #284]
     f94:	cmp	w0, #0x12
     f98:	b.le	f64 <grub_png_init_dynamic_block+0x104>
     f9c:	str	wzr, [sp, #284]
     fa0:	b	fd0 <grub_png_init_dynamic_block+0x170>
     fa4:	ldrsw	x0, [sp, #284]
     fa8:	add	x1, sp, #0x28
     fac:	ldrb	w0, [x1, x0]
     fb0:	mov	w1, w0
     fb4:	add	x0, sp, #0xd0
     fb8:	mov	w2, w1
     fbc:	ldr	w1, [sp, #284]
     fc0:	bl	970 <grub_png_insert_huff_item>
     fc4:	ldr	w0, [sp, #284]
     fc8:	add	w0, w0, #0x1
     fcc:	str	w0, [sp, #284]
     fd0:	ldr	w0, [sp, #284]
     fd4:	cmp	w0, #0x12
     fd8:	b.le	fa4 <grub_png_init_dynamic_block+0x144>
     fdc:	add	x0, sp, #0xd0
     fe0:	bl	b08 <grub_png_build_huff_table>
     fe4:	ldr	x0, [sp, #24]
     fe8:	add	x5, x0, #0x950
     fec:	ldr	x0, [sp, #24]
     ff0:	add	x1, x0, #0x58
     ff4:	ldr	x0, [sp, #24]
     ff8:	add	x2, x0, #0x4d8
     ffc:	ldr	x0, [sp, #24]
    1000:	add	x0, x0, #0x518
    1004:	mov	x4, x0
    1008:	mov	x3, x2
    100c:	mov	x2, x1
    1010:	mov	w1, #0x10                  	// #16
    1014:	mov	x0, x5
    1018:	bl	8f8 <grub_png_init_huff_table>
    101c:	ldr	x0, [sp, #24]
    1020:	add	x5, x0, #0x970
    1024:	ldr	x0, [sp, #24]
    1028:	add	x1, x0, #0x558
    102c:	ldr	x0, [sp, #24]
    1030:	add	x2, x0, #0x5d0
    1034:	ldr	x0, [sp, #24]
    1038:	add	x0, x0, #0x610
    103c:	mov	x4, x0
    1040:	mov	x3, x2
    1044:	mov	x2, x1
    1048:	mov	w1, #0x10                  	// #16
    104c:	mov	x0, x5
    1050:	bl	8f8 <grub_png_init_huff_table>
    1054:	str	wzr, [sp, #280]
    1058:	str	wzr, [sp, #284]
    105c:	b	11d4 <grub_png_init_dynamic_block+0x374>
    1060:	adrp	x0, 0 <grub_swap_bytes32>
    1064:	add	x0, x0, #0x0
    1068:	ldr	x0, [x0]
    106c:	ldr	w0, [x0]
    1070:	cmp	w0, #0x0
    1074:	b.eq	108c <grub_png_init_dynamic_block+0x22c>  // b.none
    1078:	adrp	x0, 0 <grub_swap_bytes32>
    107c:	add	x0, x0, #0x0
    1080:	ldr	x0, [x0]
    1084:	ldr	w0, [x0]
    1088:	b	1214 <grub_png_init_dynamic_block+0x3b4>
    108c:	ldr	w1, [sp, #284]
    1090:	ldr	w0, [sp, #256]
    1094:	cmp	w1, w0
    1098:	b.ge	10b4 <grub_png_init_dynamic_block+0x254>  // b.tcont
    109c:	ldr	x0, [sp, #24]
    10a0:	add	x0, x0, #0x950
    10a4:	str	x0, [sp, #264]
    10a8:	ldr	w0, [sp, #284]
    10ac:	str	w0, [sp, #276]
    10b0:	b	10d0 <grub_png_init_dynamic_block+0x270>
    10b4:	ldr	x0, [sp, #24]
    10b8:	add	x0, x0, #0x970
    10bc:	str	x0, [sp, #264]
    10c0:	ldr	w1, [sp, #284]
    10c4:	ldr	w0, [sp, #256]
    10c8:	sub	w0, w1, w0
    10cc:	str	w0, [sp, #276]
    10d0:	add	x0, sp, #0xd0
    10d4:	mov	x1, x0
    10d8:	ldr	x0, [sp, #24]
    10dc:	bl	be4 <grub_png_get_huff_code>
    10e0:	str	w0, [sp, #244]
    10e4:	ldr	w0, [sp, #244]
    10e8:	cmp	w0, #0xf
    10ec:	b.gt	110c <grub_png_init_dynamic_block+0x2ac>
    10f0:	ldr	w2, [sp, #244]
    10f4:	ldr	w1, [sp, #276]
    10f8:	ldr	x0, [sp, #264]
    10fc:	bl	970 <grub_png_insert_huff_item>
    1100:	ldr	w0, [sp, #244]
    1104:	str	w0, [sp, #280]
    1108:	b	11c8 <grub_png_init_dynamic_block+0x368>
    110c:	ldr	w0, [sp, #244]
    1110:	cmp	w0, #0x10
    1114:	b.ne	1180 <grub_png_init_dynamic_block+0x320>  // b.any
    1118:	mov	w1, #0x2                   	// #2
    111c:	ldr	x0, [sp, #24]
    1120:	bl	1c8 <grub_png_get_bits>
    1124:	add	w0, w0, #0x3
    1128:	str	w0, [sp, #260]
    112c:	b	1164 <grub_png_init_dynamic_block+0x304>
    1130:	ldr	w0, [sp, #276]
    1134:	add	w1, w0, #0x1
    1138:	str	w1, [sp, #276]
    113c:	ldr	w2, [sp, #280]
    1140:	mov	w1, w0
    1144:	ldr	x0, [sp, #264]
    1148:	bl	970 <grub_png_insert_huff_item>
    114c:	ldr	w0, [sp, #284]
    1150:	add	w0, w0, #0x1
    1154:	str	w0, [sp, #284]
    1158:	ldr	w0, [sp, #260]
    115c:	sub	w0, w0, #0x1
    1160:	str	w0, [sp, #260]
    1164:	ldr	w0, [sp, #260]
    1168:	cmp	w0, #0x0
    116c:	b.gt	1130 <grub_png_init_dynamic_block+0x2d0>
    1170:	ldr	w0, [sp, #284]
    1174:	sub	w0, w0, #0x1
    1178:	str	w0, [sp, #284]
    117c:	b	11c8 <grub_png_init_dynamic_block+0x368>
    1180:	ldr	w0, [sp, #244]
    1184:	cmp	w0, #0x11
    1188:	b.ne	11ac <grub_png_init_dynamic_block+0x34c>  // b.any
    118c:	mov	w1, #0x3                   	// #3
    1190:	ldr	x0, [sp, #24]
    1194:	bl	1c8 <grub_png_get_bits>
    1198:	add	w0, w0, #0x2
    119c:	ldr	w1, [sp, #284]
    11a0:	add	w0, w1, w0
    11a4:	str	w0, [sp, #284]
    11a8:	b	11c8 <grub_png_init_dynamic_block+0x368>
    11ac:	mov	w1, #0x7                   	// #7
    11b0:	ldr	x0, [sp, #24]
    11b4:	bl	1c8 <grub_png_get_bits>
    11b8:	add	w0, w0, #0xa
    11bc:	ldr	w1, [sp, #284]
    11c0:	add	w0, w1, w0
    11c4:	str	w0, [sp, #284]
    11c8:	ldr	w0, [sp, #284]
    11cc:	add	w0, w0, #0x1
    11d0:	str	w0, [sp, #284]
    11d4:	ldr	w1, [sp, #256]
    11d8:	ldr	w0, [sp, #252]
    11dc:	add	w0, w1, w0
    11e0:	ldr	w1, [sp, #284]
    11e4:	cmp	w1, w0
    11e8:	b.lt	1060 <grub_png_init_dynamic_block+0x200>  // b.tstop
    11ec:	ldr	x0, [sp, #24]
    11f0:	add	x0, x0, #0x950
    11f4:	bl	b08 <grub_png_build_huff_table>
    11f8:	ldr	x0, [sp, #24]
    11fc:	add	x0, x0, #0x970
    1200:	bl	b08 <grub_png_build_huff_table>
    1204:	adrp	x0, 0 <grub_swap_bytes32>
    1208:	add	x0, x0, #0x0
    120c:	ldr	x0, [x0]
    1210:	ldr	w0, [x0]
    1214:	ldp	x29, x30, [sp], #288
    1218:	ret
    121c:	nop
	...

0000000000001238 <grub_png_output_byte>:
    1238:	stp	x29, x30, [sp, #-112]!
    123c:	mov	x29, sp
    1240:	str	x0, [sp, #24]
    1244:	strb	w1, [sp, #23]
    1248:	ldr	x0, [sp, #24]
    124c:	ldr	w0, [x0, #44]
    1250:	sub	w1, w0, #0x1
    1254:	ldr	x0, [sp, #24]
    1258:	str	w1, [x0, #44]
    125c:	ldr	x0, [sp, #24]
    1260:	ldr	w0, [x0, #44]
    1264:	cmp	w0, #0x0
    1268:	b.ge	1284 <grub_png_output_byte+0x4c>  // b.tcont
    126c:	adrp	x0, 0 <grub_swap_bytes32>
    1270:	add	x0, x0, #0x0
    1274:	ldr	x1, [x0]
    1278:	mov	w0, #0x4                   	// #4
    127c:	bl	0 <grub_error>
    1280:	b	17d4 <grub_png_output_byte+0x59c>
    1284:	ldr	x0, [sp, #24]
    1288:	add	x0, x0, #0x8, lsl #12
    128c:	ldr	w0, [x0, #2464]
    1290:	cmp	w0, #0x0
    1294:	b.ne	12d0 <grub_png_output_byte+0x98>  // b.any
    1298:	ldrb	w0, [sp, #23]
    129c:	cmp	w0, #0x4
    12a0:	b.ls	12bc <grub_png_output_byte+0x84>  // b.plast
    12a4:	adrp	x0, 0 <grub_swap_bytes32>
    12a8:	add	x0, x0, #0x0
    12ac:	ldr	x1, [x0]
    12b0:	mov	w0, #0x4                   	// #4
    12b4:	bl	0 <grub_error>
    12b8:	b	17d4 <grub_png_output_byte+0x59c>
    12bc:	ldrb	w1, [sp, #23]
    12c0:	ldr	x0, [sp, #24]
    12c4:	add	x0, x0, #0x8, lsl #12
    12c8:	str	w1, [x0, #2468]
    12cc:	b	12f4 <grub_png_output_byte+0xbc>
    12d0:	ldr	x0, [sp, #24]
    12d4:	add	x0, x0, #0x8, lsl #12
    12d8:	ldr	x0, [x0, #2456]
    12dc:	add	x2, x0, #0x1
    12e0:	ldr	x1, [sp, #24]
    12e4:	add	x1, x1, #0x8, lsl #12
    12e8:	str	x2, [x1, #2456]
    12ec:	ldrb	w1, [sp, #23]
    12f0:	strb	w1, [x0]
    12f4:	ldr	x0, [sp, #24]
    12f8:	add	x0, x0, #0x8, lsl #12
    12fc:	ldr	w0, [x0, #2464]
    1300:	add	w1, w0, #0x1
    1304:	ldr	x0, [sp, #24]
    1308:	add	x0, x0, #0x8, lsl #12
    130c:	str	w1, [x0, #2464]
    1310:	ldr	x0, [sp, #24]
    1314:	add	x0, x0, #0x8, lsl #12
    1318:	ldr	w1, [x0, #2464]
    131c:	ldr	x0, [sp, #24]
    1320:	ldr	w0, [x0, #60]
    1324:	add	w0, w0, #0x1
    1328:	cmp	w1, w0
    132c:	b.ne	17c4 <grub_png_output_byte+0x58c>  // b.any
    1330:	str	xzr, [sp, #104]
    1334:	ldr	x0, [sp, #24]
    1338:	add	x0, x0, #0x8, lsl #12
    133c:	ldr	x1, [x0, #2456]
    1340:	ldr	x0, [sp, #24]
    1344:	ldr	w0, [x0, #60]
    1348:	sxtw	x0, w0
    134c:	neg	x0, x0
    1350:	add	x0, x1, x0
    1354:	str	x0, [sp, #96]
    1358:	ldr	x0, [sp, #96]
    135c:	str	x0, [sp, #88]
    1360:	ldr	x0, [sp, #24]
    1364:	add	x0, x0, #0x8, lsl #12
    1368:	ldr	w0, [x0, #2472]
    136c:	cmp	w0, #0x0
    1370:	b.eq	13b4 <grub_png_output_byte+0x17c>  // b.none
    1374:	ldr	x0, [sp, #24]
    1378:	ldr	w0, [x0, #60]
    137c:	sxtw	x0, w0
    1380:	bl	0 <grub_zalloc>
    1384:	str	x0, [sp, #104]
    1388:	ldr	x0, [sp, #104]
    138c:	cmp	x0, #0x0
    1390:	b.ne	13a8 <grub_png_output_byte+0x170>  // b.any
    1394:	adrp	x0, 0 <grub_swap_bytes32>
    1398:	add	x0, x0, #0x0
    139c:	ldr	x0, [x0]
    13a0:	ldr	w0, [x0]
    13a4:	b	17d4 <grub_png_output_byte+0x59c>
    13a8:	ldr	x0, [sp, #104]
    13ac:	str	x0, [sp, #80]
    13b0:	b	13d0 <grub_png_output_byte+0x198>
    13b4:	ldr	x0, [sp, #24]
    13b8:	ldr	w0, [x0, #60]
    13bc:	sxtw	x0, w0
    13c0:	neg	x0, x0
    13c4:	ldr	x1, [sp, #96]
    13c8:	add	x0, x1, x0
    13cc:	str	x0, [sp, #80]
    13d0:	ldr	x0, [sp, #24]
    13d4:	add	x0, x0, #0x8, lsl #12
    13d8:	ldr	w0, [x0, #2468]
    13dc:	cmp	w0, #0x4
    13e0:	b.eq	15e4 <grub_png_output_byte+0x3ac>  // b.none
    13e4:	cmp	w0, #0x4
    13e8:	b.gt	17a4 <grub_png_output_byte+0x56c>
    13ec:	cmp	w0, #0x3
    13f0:	b.eq	14f8 <grub_png_output_byte+0x2c0>  // b.none
    13f4:	cmp	w0, #0x3
    13f8:	b.gt	17a4 <grub_png_output_byte+0x56c>
    13fc:	cmp	w0, #0x1
    1400:	b.eq	1410 <grub_png_output_byte+0x1d8>  // b.none
    1404:	cmp	w0, #0x2
    1408:	b.eq	1494 <grub_png_output_byte+0x25c>  // b.none
    140c:	b	17a4 <grub_png_output_byte+0x56c>
    1410:	ldr	x0, [sp, #24]
    1414:	ldr	w0, [x0, #36]
    1418:	sxtw	x0, w0
    141c:	ldr	x1, [sp, #96]
    1420:	add	x0, x1, x0
    1424:	str	x0, [sp, #96]
    1428:	ldr	x0, [sp, #24]
    142c:	ldr	w0, [x0, #36]
    1430:	str	w0, [sp, #76]
    1434:	b	147c <grub_png_output_byte+0x244>
    1438:	ldr	x0, [sp, #96]
    143c:	ldrb	w1, [x0]
    1440:	ldr	x0, [sp, #88]
    1444:	ldrb	w0, [x0]
    1448:	add	w0, w1, w0
    144c:	and	w1, w0, #0xff
    1450:	ldr	x0, [sp, #96]
    1454:	strb	w1, [x0]
    1458:	ldr	w0, [sp, #76]
    145c:	add	w0, w0, #0x1
    1460:	str	w0, [sp, #76]
    1464:	ldr	x0, [sp, #96]
    1468:	add	x0, x0, #0x1
    146c:	str	x0, [sp, #96]
    1470:	ldr	x0, [sp, #88]
    1474:	add	x0, x0, #0x1
    1478:	str	x0, [sp, #88]
    147c:	ldr	x0, [sp, #24]
    1480:	ldr	w0, [x0, #60]
    1484:	ldr	w1, [sp, #76]
    1488:	cmp	w1, w0
    148c:	b.lt	1438 <grub_png_output_byte+0x200>  // b.tstop
    1490:	b	17a4 <grub_png_output_byte+0x56c>
    1494:	str	wzr, [sp, #72]
    1498:	b	14e0 <grub_png_output_byte+0x2a8>
    149c:	ldr	x0, [sp, #96]
    14a0:	ldrb	w1, [x0]
    14a4:	ldr	x0, [sp, #80]
    14a8:	ldrb	w0, [x0]
    14ac:	add	w0, w1, w0
    14b0:	and	w1, w0, #0xff
    14b4:	ldr	x0, [sp, #96]
    14b8:	strb	w1, [x0]
    14bc:	ldr	w0, [sp, #72]
    14c0:	add	w0, w0, #0x1
    14c4:	str	w0, [sp, #72]
    14c8:	ldr	x0, [sp, #96]
    14cc:	add	x0, x0, #0x1
    14d0:	str	x0, [sp, #96]
    14d4:	ldr	x0, [sp, #80]
    14d8:	add	x0, x0, #0x1
    14dc:	str	x0, [sp, #80]
    14e0:	ldr	x0, [sp, #24]
    14e4:	ldr	w0, [x0, #60]
    14e8:	ldr	w1, [sp, #72]
    14ec:	cmp	w1, w0
    14f0:	b.lt	149c <grub_png_output_byte+0x264>  // b.tstop
    14f4:	b	17a4 <grub_png_output_byte+0x56c>
    14f8:	str	wzr, [sp, #68]
    14fc:	b	154c <grub_png_output_byte+0x314>
    1500:	ldr	x0, [sp, #96]
    1504:	ldrb	w1, [x0]
    1508:	ldr	x0, [sp, #80]
    150c:	ldrb	w0, [x0]
    1510:	lsr	w0, w0, #1
    1514:	and	w0, w0, #0xff
    1518:	add	w0, w1, w0
    151c:	and	w1, w0, #0xff
    1520:	ldr	x0, [sp, #96]
    1524:	strb	w1, [x0]
    1528:	ldr	w0, [sp, #68]
    152c:	add	w0, w0, #0x1
    1530:	str	w0, [sp, #68]
    1534:	ldr	x0, [sp, #96]
    1538:	add	x0, x0, #0x1
    153c:	str	x0, [sp, #96]
    1540:	ldr	x0, [sp, #80]
    1544:	add	x0, x0, #0x1
    1548:	str	x0, [sp, #80]
    154c:	ldr	x0, [sp, #24]
    1550:	ldr	w0, [x0, #36]
    1554:	ldr	w1, [sp, #68]
    1558:	cmp	w1, w0
    155c:	b.lt	1500 <grub_png_output_byte+0x2c8>  // b.tstop
    1560:	b	15cc <grub_png_output_byte+0x394>
    1564:	ldr	x0, [sp, #96]
    1568:	ldrb	w1, [x0]
    156c:	ldr	x0, [sp, #80]
    1570:	ldrb	w0, [x0]
    1574:	mov	w2, w0
    1578:	ldr	x0, [sp, #88]
    157c:	ldrb	w0, [x0]
    1580:	add	w0, w2, w0
    1584:	asr	w0, w0, #1
    1588:	and	w0, w0, #0xff
    158c:	add	w0, w1, w0
    1590:	and	w1, w0, #0xff
    1594:	ldr	x0, [sp, #96]
    1598:	strb	w1, [x0]
    159c:	ldr	w0, [sp, #68]
    15a0:	add	w0, w0, #0x1
    15a4:	str	w0, [sp, #68]
    15a8:	ldr	x0, [sp, #96]
    15ac:	add	x0, x0, #0x1
    15b0:	str	x0, [sp, #96]
    15b4:	ldr	x0, [sp, #80]
    15b8:	add	x0, x0, #0x1
    15bc:	str	x0, [sp, #80]
    15c0:	ldr	x0, [sp, #88]
    15c4:	add	x0, x0, #0x1
    15c8:	str	x0, [sp, #88]
    15cc:	ldr	x0, [sp, #24]
    15d0:	ldr	w0, [x0, #60]
    15d4:	ldr	w1, [sp, #68]
    15d8:	cmp	w1, w0
    15dc:	b.lt	1564 <grub_png_output_byte+0x32c>  // b.tstop
    15e0:	b	17a4 <grub_png_output_byte+0x56c>
    15e4:	ldr	x0, [sp, #80]
    15e8:	str	x0, [sp, #56]
    15ec:	str	wzr, [sp, #64]
    15f0:	b	1638 <grub_png_output_byte+0x400>
    15f4:	ldr	x0, [sp, #96]
    15f8:	ldrb	w1, [x0]
    15fc:	ldr	x0, [sp, #80]
    1600:	ldrb	w0, [x0]
    1604:	add	w0, w1, w0
    1608:	and	w1, w0, #0xff
    160c:	ldr	x0, [sp, #96]
    1610:	strb	w1, [x0]
    1614:	ldr	w0, [sp, #64]
    1618:	add	w0, w0, #0x1
    161c:	str	w0, [sp, #64]
    1620:	ldr	x0, [sp, #96]
    1624:	add	x0, x0, #0x1
    1628:	str	x0, [sp, #96]
    162c:	ldr	x0, [sp, #80]
    1630:	add	x0, x0, #0x1
    1634:	str	x0, [sp, #80]
    1638:	ldr	x0, [sp, #24]
    163c:	ldr	w0, [x0, #36]
    1640:	ldr	w1, [sp, #64]
    1644:	cmp	w1, w0
    1648:	b.lt	15f4 <grub_png_output_byte+0x3bc>  // b.tstop
    164c:	b	1790 <grub_png_output_byte+0x558>
    1650:	ldr	x0, [sp, #88]
    1654:	ldrb	w0, [x0]
    1658:	str	w0, [sp, #40]
    165c:	ldr	x0, [sp, #80]
    1660:	ldrb	w0, [x0]
    1664:	str	w0, [sp, #36]
    1668:	ldr	x0, [sp, #56]
    166c:	ldrb	w0, [x0]
    1670:	str	w0, [sp, #32]
    1674:	ldr	w1, [sp, #36]
    1678:	ldr	w0, [sp, #32]
    167c:	sub	w0, w1, w0
    1680:	str	w0, [sp, #52]
    1684:	ldr	w1, [sp, #40]
    1688:	ldr	w0, [sp, #32]
    168c:	sub	w0, w1, w0
    1690:	str	w0, [sp, #48]
    1694:	ldr	w1, [sp, #52]
    1698:	ldr	w0, [sp, #48]
    169c:	add	w0, w1, w0
    16a0:	str	w0, [sp, #44]
    16a4:	ldr	w0, [sp, #52]
    16a8:	cmp	w0, #0x0
    16ac:	b.ge	16bc <grub_png_output_byte+0x484>  // b.tcont
    16b0:	ldr	w0, [sp, #52]
    16b4:	neg	w0, w0
    16b8:	str	w0, [sp, #52]
    16bc:	ldr	w0, [sp, #48]
    16c0:	cmp	w0, #0x0
    16c4:	b.ge	16d4 <grub_png_output_byte+0x49c>  // b.tcont
    16c8:	ldr	w0, [sp, #48]
    16cc:	neg	w0, w0
    16d0:	str	w0, [sp, #48]
    16d4:	ldr	w0, [sp, #44]
    16d8:	cmp	w0, #0x0
    16dc:	b.ge	16ec <grub_png_output_byte+0x4b4>  // b.tcont
    16e0:	ldr	w0, [sp, #44]
    16e4:	neg	w0, w0
    16e8:	str	w0, [sp, #44]
    16ec:	ldr	x0, [sp, #96]
    16f0:	ldrb	w1, [x0]
    16f4:	ldr	w2, [sp, #52]
    16f8:	ldr	w0, [sp, #48]
    16fc:	cmp	w2, w0
    1700:	b.gt	1714 <grub_png_output_byte+0x4dc>
    1704:	ldr	w2, [sp, #52]
    1708:	ldr	w0, [sp, #44]
    170c:	cmp	w2, w0
    1710:	b.le	173c <grub_png_output_byte+0x504>
    1714:	ldr	w2, [sp, #48]
    1718:	ldr	w0, [sp, #44]
    171c:	cmp	w2, w0
    1720:	b.gt	1730 <grub_png_output_byte+0x4f8>
    1724:	ldr	w0, [sp, #36]
    1728:	and	w0, w0, #0xff
    172c:	b	1744 <grub_png_output_byte+0x50c>
    1730:	ldr	w0, [sp, #32]
    1734:	and	w0, w0, #0xff
    1738:	b	1744 <grub_png_output_byte+0x50c>
    173c:	ldr	w0, [sp, #40]
    1740:	and	w0, w0, #0xff
    1744:	add	w0, w0, w1
    1748:	and	w1, w0, #0xff
    174c:	ldr	x0, [sp, #96]
    1750:	strb	w1, [x0]
    1754:	ldr	w0, [sp, #64]
    1758:	add	w0, w0, #0x1
    175c:	str	w0, [sp, #64]
    1760:	ldr	x0, [sp, #96]
    1764:	add	x0, x0, #0x1
    1768:	str	x0, [sp, #96]
    176c:	ldr	x0, [sp, #80]
    1770:	add	x0, x0, #0x1
    1774:	str	x0, [sp, #80]
    1778:	ldr	x0, [sp, #88]
    177c:	add	x0, x0, #0x1
    1780:	str	x0, [sp, #88]
    1784:	ldr	x0, [sp, #56]
    1788:	add	x0, x0, #0x1
    178c:	str	x0, [sp, #56]
    1790:	ldr	x0, [sp, #24]
    1794:	ldr	w0, [x0, #60]
    1798:	ldr	w1, [sp, #64]
    179c:	cmp	w1, w0
    17a0:	b.lt	1650 <grub_png_output_byte+0x418>  // b.tstop
    17a4:	ldr	x0, [sp, #104]
    17a8:	bl	0 <grub_free>
    17ac:	ldr	x0, [sp, #24]
    17b0:	add	x0, x0, #0x8, lsl #12
    17b4:	str	wzr, [x0, #2464]
    17b8:	ldr	x0, [sp, #24]
    17bc:	add	x0, x0, #0x8, lsl #12
    17c0:	str	wzr, [x0, #2472]
    17c4:	adrp	x0, 0 <grub_swap_bytes32>
    17c8:	add	x0, x0, #0x0
    17cc:	ldr	x0, [x0]
    17d0:	ldr	w0, [x0]
    17d4:	ldp	x29, x30, [sp], #112
    17d8:	ret
    17dc:	nop
	...

00000000000017f8 <grub_png_read_dynamic_block>:
    17f8:	stp	x29, x30, [sp, #-48]!
    17fc:	mov	x29, sp
    1800:	str	x0, [sp, #24]
    1804:	b	1aa8 <grub_png_read_dynamic_block+0x2b0>
    1808:	ldr	x0, [sp, #24]
    180c:	add	x0, x0, #0x950
    1810:	mov	x1, x0
    1814:	ldr	x0, [sp, #24]
    1818:	bl	be4 <grub_png_get_huff_code>
    181c:	str	w0, [sp, #32]
    1820:	ldr	w0, [sp, #32]
    1824:	cmp	w0, #0xff
    1828:	b.gt	18ac <grub_png_read_dynamic_block+0xb4>
    182c:	ldr	x0, [sp, #24]
    1830:	add	x0, x0, #0x8, lsl #12
    1834:	ldr	w0, [x0, #2448]
    1838:	ldr	w1, [sp, #32]
    183c:	and	w2, w1, #0xff
    1840:	ldr	x1, [sp, #24]
    1844:	sxtw	x0, w0
    1848:	add	x0, x1, x0
    184c:	mov	w1, w2
    1850:	strb	w1, [x0, #2448]
    1854:	ldr	w0, [sp, #32]
    1858:	and	w0, w0, #0xff
    185c:	mov	w1, w0
    1860:	ldr	x0, [sp, #24]
    1864:	bl	1238 <grub_png_output_byte>
    1868:	ldr	x0, [sp, #24]
    186c:	add	x0, x0, #0x8, lsl #12
    1870:	ldr	w0, [x0, #2448]
    1874:	add	w1, w0, #0x1
    1878:	ldr	x0, [sp, #24]
    187c:	add	x0, x0, #0x8, lsl #12
    1880:	str	w1, [x0, #2448]
    1884:	ldr	x0, [sp, #24]
    1888:	add	x0, x0, #0x8, lsl #12
    188c:	ldr	w1, [x0, #2448]
    1890:	mov	w0, #0x7fff                	// #32767
    1894:	cmp	w1, w0
    1898:	b.le	1aa8 <grub_png_read_dynamic_block+0x2b0>
    189c:	ldr	x0, [sp, #24]
    18a0:	add	x0, x0, #0x8, lsl #12
    18a4:	str	wzr, [x0, #2448]
    18a8:	b	1aa8 <grub_png_read_dynamic_block+0x2b0>
    18ac:	ldr	w0, [sp, #32]
    18b0:	cmp	w0, #0x100
    18b4:	b.eq	1ac4 <grub_png_read_dynamic_block+0x2cc>  // b.none
    18b8:	ldr	w0, [sp, #32]
    18bc:	sub	w0, w0, #0x101
    18c0:	str	w0, [sp, #32]
    18c4:	adrp	x0, 0 <grub_swap_bytes32>
    18c8:	add	x0, x0, #0x0
    18cc:	ldr	x0, [x0]
    18d0:	ldrsw	x1, [sp, #32]
    18d4:	ldr	w0, [x0, x1, lsl #2]
    18d8:	str	w0, [sp, #44]
    18dc:	adrp	x0, 0 <grub_swap_bytes32>
    18e0:	add	x0, x0, #0x0
    18e4:	ldr	x1, [x0]
    18e8:	ldrsw	x0, [sp, #32]
    18ec:	ldrb	w0, [x1, x0]
    18f0:	cmp	w0, #0x0
    18f4:	b.eq	1928 <grub_png_read_dynamic_block+0x130>  // b.none
    18f8:	adrp	x0, 0 <grub_swap_bytes32>
    18fc:	add	x0, x0, #0x0
    1900:	ldr	x1, [x0]
    1904:	ldrsw	x0, [sp, #32]
    1908:	ldrb	w0, [x1, x0]
    190c:	mov	w1, w0
    1910:	ldr	x0, [sp, #24]
    1914:	bl	1c8 <grub_png_get_bits>
    1918:	mov	w1, w0
    191c:	ldr	w0, [sp, #44]
    1920:	add	w0, w0, w1
    1924:	str	w0, [sp, #44]
    1928:	ldr	x0, [sp, #24]
    192c:	add	x0, x0, #0x970
    1930:	mov	x1, x0
    1934:	ldr	x0, [sp, #24]
    1938:	bl	be4 <grub_png_get_huff_code>
    193c:	str	w0, [sp, #32]
    1940:	adrp	x0, 0 <grub_swap_bytes32>
    1944:	add	x0, x0, #0x0
    1948:	ldr	x0, [x0]
    194c:	ldrsw	x1, [sp, #32]
    1950:	ldr	w0, [x0, x1, lsl #2]
    1954:	str	w0, [sp, #40]
    1958:	adrp	x0, 0 <grub_swap_bytes32>
    195c:	add	x0, x0, #0x0
    1960:	ldr	x1, [x0]
    1964:	ldrsw	x0, [sp, #32]
    1968:	ldrb	w0, [x1, x0]
    196c:	cmp	w0, #0x0
    1970:	b.eq	19a4 <grub_png_read_dynamic_block+0x1ac>  // b.none
    1974:	adrp	x0, 0 <grub_swap_bytes32>
    1978:	add	x0, x0, #0x0
    197c:	ldr	x1, [x0]
    1980:	ldrsw	x0, [sp, #32]
    1984:	ldrb	w0, [x1, x0]
    1988:	mov	w1, w0
    198c:	ldr	x0, [sp, #24]
    1990:	bl	1c8 <grub_png_get_bits>
    1994:	mov	w1, w0
    1998:	ldr	w0, [sp, #40]
    199c:	add	w0, w0, w1
    19a0:	str	w0, [sp, #40]
    19a4:	ldr	x0, [sp, #24]
    19a8:	add	x0, x0, #0x8, lsl #12
    19ac:	ldr	w1, [x0, #2448]
    19b0:	ldr	w0, [sp, #40]
    19b4:	sub	w0, w1, w0
    19b8:	str	w0, [sp, #36]
    19bc:	ldr	w0, [sp, #36]
    19c0:	cmp	w0, #0x0
    19c4:	b.ge	1a9c <grub_png_read_dynamic_block+0x2a4>  // b.tcont
    19c8:	ldr	w0, [sp, #36]
    19cc:	add	w0, w0, #0x8, lsl #12
    19d0:	str	w0, [sp, #36]
    19d4:	b	1a9c <grub_png_read_dynamic_block+0x2a4>
    19d8:	ldr	x0, [sp, #24]
    19dc:	add	x0, x0, #0x8, lsl #12
    19e0:	ldr	w3, [x0, #2448]
    19e4:	ldr	x1, [sp, #24]
    19e8:	ldrsw	x0, [sp, #36]
    19ec:	add	x0, x1, x0
    19f0:	ldrb	w2, [x0, #2448]
    19f4:	ldr	x1, [sp, #24]
    19f8:	sxtw	x0, w3
    19fc:	add	x0, x1, x0
    1a00:	mov	w1, w2
    1a04:	strb	w1, [x0, #2448]
    1a08:	ldr	x0, [sp, #24]
    1a0c:	add	x0, x0, #0x8, lsl #12
    1a10:	ldr	w0, [x0, #2448]
    1a14:	ldr	x1, [sp, #24]
    1a18:	sxtw	x0, w0
    1a1c:	add	x0, x1, x0
    1a20:	ldrb	w0, [x0, #2448]
    1a24:	mov	w1, w0
    1a28:	ldr	x0, [sp, #24]
    1a2c:	bl	1238 <grub_png_output_byte>
    1a30:	ldr	x0, [sp, #24]
    1a34:	add	x0, x0, #0x8, lsl #12
    1a38:	ldr	w0, [x0, #2448]
    1a3c:	add	w1, w0, #0x1
    1a40:	ldr	x0, [sp, #24]
    1a44:	add	x0, x0, #0x8, lsl #12
    1a48:	str	w1, [x0, #2448]
    1a4c:	ldr	x0, [sp, #24]
    1a50:	add	x0, x0, #0x8, lsl #12
    1a54:	ldr	w1, [x0, #2448]
    1a58:	mov	w0, #0x7fff                	// #32767
    1a5c:	cmp	w1, w0
    1a60:	b.le	1a70 <grub_png_read_dynamic_block+0x278>
    1a64:	ldr	x0, [sp, #24]
    1a68:	add	x0, x0, #0x8, lsl #12
    1a6c:	str	wzr, [x0, #2448]
    1a70:	ldr	w0, [sp, #36]
    1a74:	add	w0, w0, #0x1
    1a78:	str	w0, [sp, #36]
    1a7c:	ldr	w1, [sp, #36]
    1a80:	mov	w0, #0x7fff                	// #32767
    1a84:	cmp	w1, w0
    1a88:	b.le	1a90 <grub_png_read_dynamic_block+0x298>
    1a8c:	str	wzr, [sp, #36]
    1a90:	ldr	w0, [sp, #44]
    1a94:	sub	w0, w0, #0x1
    1a98:	str	w0, [sp, #44]
    1a9c:	ldr	w0, [sp, #44]
    1aa0:	cmp	w0, #0x0
    1aa4:	b.gt	19d8 <grub_png_read_dynamic_block+0x1e0>
    1aa8:	adrp	x0, 0 <grub_swap_bytes32>
    1aac:	add	x0, x0, #0x0
    1ab0:	ldr	x0, [x0]
    1ab4:	ldr	w0, [x0]
    1ab8:	cmp	w0, #0x0
    1abc:	b.eq	1808 <grub_png_read_dynamic_block+0x10>  // b.none
    1ac0:	b	1ac8 <grub_png_read_dynamic_block+0x2d0>
    1ac4:	nop
    1ac8:	adrp	x0, 0 <grub_swap_bytes32>
    1acc:	add	x0, x0, #0x0
    1ad0:	ldr	x0, [x0]
    1ad4:	ldr	w0, [x0]
    1ad8:	ldp	x29, x30, [sp], #48
    1adc:	ret
	...

0000000000001b08 <grub_png_decode_image_data>:
    1b08:	stp	x29, x30, [sp, #-48]!
    1b0c:	mov	x29, sp
    1b10:	str	x0, [sp, #24]
    1b14:	ldr	x0, [sp, #24]
    1b18:	bl	78 <grub_png_get_byte>
    1b1c:	strb	w0, [sp, #45]
    1b20:	ldr	x0, [sp, #24]
    1b24:	bl	78 <grub_png_get_byte>
    1b28:	strb	w0, [sp, #44]
    1b2c:	ldrb	w0, [sp, #45]
    1b30:	and	w0, w0, #0xf
    1b34:	cmp	w0, #0x8
    1b38:	b.eq	1b54 <grub_png_decode_image_data+0x4c>  // b.none
    1b3c:	adrp	x0, 0 <grub_swap_bytes32>
    1b40:	add	x0, x0, #0x0
    1b44:	ldr	x1, [x0]
    1b48:	mov	w0, #0x4                   	// #4
    1b4c:	bl	0 <grub_error>
    1b50:	b	1cdc <grub_png_decode_image_data+0x1d4>
    1b54:	ldrb	w0, [sp, #44]
    1b58:	and	w0, w0, #0x20
    1b5c:	cmp	w0, #0x0
    1b60:	b.eq	1b7c <grub_png_decode_image_data+0x74>  // b.none
    1b64:	adrp	x0, 0 <grub_swap_bytes32>
    1b68:	add	x0, x0, #0x0
    1b6c:	ldr	x1, [x0]
    1b70:	mov	w0, #0x4                   	// #4
    1b74:	bl	0 <grub_error>
    1b78:	b	1cdc <grub_png_decode_image_data+0x1d4>
    1b7c:	mov	w1, #0x1                   	// #1
    1b80:	ldr	x0, [sp, #24]
    1b84:	bl	1c8 <grub_png_get_bits>
    1b88:	str	w0, [sp, #40]
    1b8c:	mov	w1, #0x2                   	// #2
    1b90:	ldr	x0, [sp, #24]
    1b94:	bl	1c8 <grub_png_get_bits>
    1b98:	str	w0, [sp, #36]
    1b9c:	ldr	w0, [sp, #36]
    1ba0:	cmp	w0, #0x2
    1ba4:	b.eq	1c6c <grub_png_decode_image_data+0x164>  // b.none
    1ba8:	ldr	w0, [sp, #36]
    1bac:	cmp	w0, #0x2
    1bb0:	b.gt	1c80 <grub_png_decode_image_data+0x178>
    1bb4:	ldr	w0, [sp, #36]
    1bb8:	cmp	w0, #0x0
    1bbc:	b.eq	1bd0 <grub_png_decode_image_data+0xc8>  // b.none
    1bc0:	ldr	w0, [sp, #36]
    1bc4:	cmp	w0, #0x1
    1bc8:	b.eq	1c58 <grub_png_decode_image_data+0x150>  // b.none
    1bcc:	b	1c80 <grub_png_decode_image_data+0x178>
    1bd0:	ldr	x0, [sp, #24]
    1bd4:	str	wzr, [x0, #16]
    1bd8:	ldr	x0, [sp, #24]
    1bdc:	bl	78 <grub_png_get_byte>
    1be0:	and	w0, w0, #0xff
    1be4:	strh	w0, [sp, #34]
    1be8:	ldr	x0, [sp, #24]
    1bec:	bl	78 <grub_png_get_byte>
    1bf0:	and	w0, w0, #0xff
    1bf4:	lsl	w0, w0, #8
    1bf8:	and	w0, w0, #0xffff
    1bfc:	ldrh	w1, [sp, #34]
    1c00:	add	w0, w0, w1
    1c04:	strh	w0, [sp, #34]
    1c08:	ldr	x0, [sp, #24]
    1c0c:	bl	78 <grub_png_get_byte>
    1c10:	ldr	x0, [sp, #24]
    1c14:	bl	78 <grub_png_get_byte>
    1c18:	strh	wzr, [sp, #46]
    1c1c:	b	1c44 <grub_png_decode_image_data+0x13c>
    1c20:	ldr	x0, [sp, #24]
    1c24:	bl	78 <grub_png_get_byte>
    1c28:	and	w0, w0, #0xff
    1c2c:	mov	w1, w0
    1c30:	ldr	x0, [sp, #24]
    1c34:	bl	1238 <grub_png_output_byte>
    1c38:	ldrh	w0, [sp, #46]
    1c3c:	add	w0, w0, #0x1
    1c40:	strh	w0, [sp, #46]
    1c44:	ldrh	w1, [sp, #46]
    1c48:	ldrh	w0, [sp, #34]
    1c4c:	cmp	w1, w0
    1c50:	b.cc	1c20 <grub_png_decode_image_data+0x118>  // b.lo, b.ul, b.last
    1c54:	b	1c98 <grub_png_decode_image_data+0x190>
    1c58:	ldr	x0, [sp, #24]
    1c5c:	bl	cb0 <grub_png_init_fixed_block>
    1c60:	ldr	x0, [sp, #24]
    1c64:	bl	17f8 <grub_png_read_dynamic_block>
    1c68:	b	1c98 <grub_png_decode_image_data+0x190>
    1c6c:	ldr	x0, [sp, #24]
    1c70:	bl	e60 <grub_png_init_dynamic_block>
    1c74:	ldr	x0, [sp, #24]
    1c78:	bl	17f8 <grub_png_read_dynamic_block>
    1c7c:	b	1c98 <grub_png_decode_image_data+0x190>
    1c80:	adrp	x0, 0 <grub_swap_bytes32>
    1c84:	add	x0, x0, #0x0
    1c88:	ldr	x1, [x0]
    1c8c:	mov	w0, #0x4                   	// #4
    1c90:	bl	0 <grub_error>
    1c94:	b	1cdc <grub_png_decode_image_data+0x1d4>
    1c98:	ldr	w0, [sp, #40]
    1c9c:	cmp	w0, #0x0
    1ca0:	b.ne	1cbc <grub_png_decode_image_data+0x1b4>  // b.any
    1ca4:	adrp	x0, 0 <grub_swap_bytes32>
    1ca8:	add	x0, x0, #0x0
    1cac:	ldr	x0, [x0]
    1cb0:	ldr	w0, [x0]
    1cb4:	cmp	w0, #0x0
    1cb8:	b.eq	1b7c <grub_png_decode_image_data+0x74>  // b.none
    1cbc:	ldr	x0, [sp, #24]
    1cc0:	bl	44 <grub_png_get_dword>
    1cc4:	ldr	x0, [sp, #24]
    1cc8:	bl	44 <grub_png_get_dword>
    1ccc:	adrp	x0, 0 <grub_swap_bytes32>
    1cd0:	add	x0, x0, #0x0
    1cd4:	ldr	x0, [x0]
    1cd8:	ldr	w0, [x0]
    1cdc:	ldp	x29, x30, [sp], #48
    1ce0:	ret
    1ce4:	nop
	...

0000000000001d08 <grub_png_convert_image>:
    1d08:	stp	x29, x30, [sp, #-144]!
    1d0c:	mov	x29, sp
    1d10:	str	x0, [sp, #24]
    1d14:	ldr	x0, [sp, #24]
    1d18:	ldr	x0, [x0, #8]
    1d1c:	ldr	x0, [x0]
    1d20:	ldr	x0, [x0, #80]
    1d24:	str	x0, [sp, #128]
    1d28:	ldr	x0, [sp, #24]
    1d2c:	ldr	x1, [x0, #72]
    1d30:	ldr	x0, [sp, #24]
    1d34:	ldr	w0, [x0, #40]
    1d38:	sxtw	x0, w0
    1d3c:	add	x0, x1, x0
    1d40:	str	x0, [sp, #120]
    1d44:	ldr	x0, [sp, #24]
    1d48:	ldr	w0, [x0, #64]
    1d4c:	cmp	w0, #0x4
    1d50:	b.gt	2028 <grub_png_convert_image+0x320>
    1d54:	ldr	x0, [sp, #24]
    1d58:	ldr	w0, [x0, #64]
    1d5c:	mov	w1, #0x1                   	// #1
    1d60:	lsl	w0, w1, w0
    1d64:	sub	w0, w0, #0x1
    1d68:	str	w0, [sp, #92]
    1d6c:	ldr	x0, [sp, #24]
    1d70:	ldr	w0, [x0, #48]
    1d74:	cmp	w0, #0x0
    1d78:	b.eq	1e48 <grub_png_convert_image+0x140>  // b.none
    1d7c:	adrp	x0, 0 <grub_swap_bytes32>
    1d80:	add	x0, x0, #0x0
    1d84:	ldr	x1, [x0]
    1d88:	add	x0, sp, #0x50
    1d8c:	ldr	w2, [x1]
    1d90:	str	w2, [x0]
    1d94:	ldrb	w1, [x1, #4]
    1d98:	strb	w1, [x0, #4]
    1d9c:	str	wzr, [sp, #140]
    1da0:	b	1e28 <grub_png_convert_image+0x120>
    1da4:	ldr	x0, [sp, #24]
    1da8:	ldr	w0, [x0, #64]
    1dac:	sxtw	x0, w0
    1db0:	add	x1, sp, #0x50
    1db4:	ldrb	w1, [x1, x0]
    1db8:	ldr	w0, [sp, #140]
    1dbc:	and	w0, w0, #0xff
    1dc0:	mul	w0, w1, w0
    1dc4:	strb	w0, [sp, #91]
    1dc8:	ldr	w1, [sp, #140]
    1dcc:	mov	x0, x1
    1dd0:	lsl	x0, x0, #1
    1dd4:	add	x0, x0, x1
    1dd8:	add	x1, sp, #0x20
    1ddc:	ldrb	w2, [sp, #91]
    1de0:	strb	w2, [x1, x0]
    1de4:	ldr	w1, [sp, #140]
    1de8:	mov	x0, x1
    1dec:	lsl	x0, x0, #1
    1df0:	add	x0, x0, x1
    1df4:	add	x1, sp, #0x21
    1df8:	ldrb	w2, [sp, #91]
    1dfc:	strb	w2, [x1, x0]
    1e00:	ldr	w1, [sp, #140]
    1e04:	mov	x0, x1
    1e08:	lsl	x0, x0, #1
    1e0c:	add	x0, x0, x1
    1e10:	add	x1, sp, #0x22
    1e14:	ldrb	w2, [sp, #91]
    1e18:	strb	w2, [x1, x0]
    1e1c:	ldr	w0, [sp, #140]
    1e20:	add	w0, w0, #0x1
    1e24:	str	w0, [sp, #140]
    1e28:	ldr	x0, [sp, #24]
    1e2c:	ldr	w0, [x0, #64]
    1e30:	mov	w1, #0x1                   	// #1
    1e34:	lsl	w0, w1, w0
    1e38:	ldr	w1, [sp, #140]
    1e3c:	cmp	w1, w0
    1e40:	b.cc	1da4 <grub_png_convert_image+0x9c>  // b.lo, b.ul, b.last
    1e44:	b	1e74 <grub_png_convert_image+0x16c>
    1e48:	ldr	x0, [sp, #24]
    1e4c:	add	x3, x0, #0x650
    1e50:	ldr	x0, [sp, #24]
    1e54:	ldr	w0, [x0, #64]
    1e58:	mov	w1, #0x3                   	// #3
    1e5c:	lsl	w0, w1, w0
    1e60:	sxtw	x1, w0
    1e64:	add	x0, sp, #0x20
    1e68:	mov	x2, x1
    1e6c:	mov	x1, x3
    1e70:	bl	18 <grub_memcpy>
    1e74:	ldr	x0, [sp, #128]
    1e78:	str	x0, [sp, #112]
    1e7c:	ldr	x0, [sp, #120]
    1e80:	str	x0, [sp, #104]
    1e84:	str	wzr, [sp, #96]
    1e88:	b	2010 <grub_png_convert_image+0x308>
    1e8c:	ldr	x0, [sp, #112]
    1e90:	str	x0, [sp, #128]
    1e94:	ldr	x0, [sp, #104]
    1e98:	str	x0, [sp, #120]
    1e9c:	ldr	x0, [sp, #24]
    1ea0:	ldr	w0, [x0, #64]
    1ea4:	mov	w1, #0x8                   	// #8
    1ea8:	sub	w0, w1, w0
    1eac:	str	w0, [sp, #100]
    1eb0:	str	wzr, [sp, #140]
    1eb4:	b	1fb4 <grub_png_convert_image+0x2ac>
    1eb8:	ldr	x0, [sp, #120]
    1ebc:	ldrb	w0, [x0]
    1ec0:	mov	w1, w0
    1ec4:	ldr	w0, [sp, #100]
    1ec8:	asr	w0, w1, w0
    1ecc:	sxtb	w1, w0
    1ed0:	ldr	w0, [sp, #92]
    1ed4:	sxtb	w0, w0
    1ed8:	and	w0, w1, w0
    1edc:	sxtb	w0, w0
    1ee0:	strb	w0, [sp, #90]
    1ee4:	ldrb	w1, [sp, #90]
    1ee8:	ldr	x0, [sp, #128]
    1eec:	add	x2, x0, #0x2
    1ef0:	ldr	x3, [sp, #24]
    1ef4:	sxtw	x1, w1
    1ef8:	mov	x0, x1
    1efc:	lsl	x0, x0, #1
    1f00:	add	x0, x0, x1
    1f04:	add	x0, x3, x0
    1f08:	ldrb	w0, [x0, #1618]
    1f0c:	strb	w0, [x2]
    1f10:	ldrb	w1, [sp, #90]
    1f14:	ldr	x0, [sp, #128]
    1f18:	add	x2, x0, #0x1
    1f1c:	ldr	x3, [sp, #24]
    1f20:	sxtw	x1, w1
    1f24:	mov	x0, x1
    1f28:	lsl	x0, x0, #1
    1f2c:	add	x0, x0, x1
    1f30:	add	x0, x3, x0
    1f34:	ldrb	w0, [x0, #1617]
    1f38:	strb	w0, [x2]
    1f3c:	ldrb	w0, [sp, #90]
    1f40:	ldr	x2, [sp, #24]
    1f44:	sxtw	x1, w0
    1f48:	mov	x0, x1
    1f4c:	lsl	x0, x0, #1
    1f50:	add	x0, x0, x1
    1f54:	add	x0, x2, x0
    1f58:	ldrb	w1, [x0, #1616]
    1f5c:	ldr	x0, [sp, #128]
    1f60:	strb	w1, [x0]
    1f64:	ldr	x0, [sp, #24]
    1f68:	ldr	w0, [x0, #64]
    1f6c:	ldr	w1, [sp, #100]
    1f70:	sub	w0, w1, w0
    1f74:	str	w0, [sp, #100]
    1f78:	ldr	w0, [sp, #100]
    1f7c:	cmp	w0, #0x0
    1f80:	b.ge	1f9c <grub_png_convert_image+0x294>  // b.tcont
    1f84:	ldr	x0, [sp, #120]
    1f88:	add	x0, x0, #0x1
    1f8c:	str	x0, [sp, #120]
    1f90:	ldr	w0, [sp, #100]
    1f94:	add	w0, w0, #0x8
    1f98:	str	w0, [sp, #100]
    1f9c:	ldr	w0, [sp, #140]
    1fa0:	add	w0, w0, #0x1
    1fa4:	str	w0, [sp, #140]
    1fa8:	ldr	x0, [sp, #128]
    1fac:	add	x0, x0, #0x3
    1fb0:	str	x0, [sp, #128]
    1fb4:	ldr	x0, [sp, #24]
    1fb8:	ldr	w0, [x0, #28]
    1fbc:	ldr	w1, [sp, #140]
    1fc0:	cmp	w1, w0
    1fc4:	b.cc	1eb8 <grub_png_convert_image+0x1b0>  // b.lo, b.ul, b.last
    1fc8:	ldr	w0, [sp, #96]
    1fcc:	add	w0, w0, #0x1
    1fd0:	str	w0, [sp, #96]
    1fd4:	ldr	x0, [sp, #24]
    1fd8:	ldr	w1, [x0, #28]
    1fdc:	mov	w0, w1
    1fe0:	lsl	w0, w0, #1
    1fe4:	add	w0, w0, w1
    1fe8:	mov	w0, w0
    1fec:	ldr	x1, [sp, #112]
    1ff0:	add	x0, x1, x0
    1ff4:	str	x0, [sp, #112]
    1ff8:	ldr	x0, [sp, #24]
    1ffc:	ldr	w0, [x0, #60]
    2000:	sxtw	x0, w0
    2004:	ldr	x1, [sp, #104]
    2008:	add	x0, x1, x0
    200c:	str	x0, [sp, #104]
    2010:	ldr	x0, [sp, #24]
    2014:	ldr	w0, [x0, #32]
    2018:	ldr	w1, [sp, #96]
    201c:	cmp	w1, w0
    2020:	b.cc	1e8c <grub_png_convert_image+0x184>  // b.lo, b.ul, b.last
    2024:	b	2428 <grub_png_convert_image+0x720>
    2028:	ldr	x0, [sp, #24]
    202c:	ldr	w0, [x0, #56]
    2030:	cmp	w0, #0x0
    2034:	b.eq	211c <grub_png_convert_image+0x414>  // b.none
    2038:	str	wzr, [sp, #140]
    203c:	b	20f8 <grub_png_convert_image+0x3f0>
    2040:	ldr	x0, [sp, #120]
    2044:	ldrb	w0, [x0]
    2048:	mov	w1, w0
    204c:	ldr	x0, [sp, #128]
    2050:	add	x2, x0, #0x2
    2054:	ldr	x3, [sp, #24]
    2058:	sxtw	x1, w1
    205c:	mov	x0, x1
    2060:	lsl	x0, x0, #1
    2064:	add	x0, x0, x1
    2068:	add	x0, x3, x0
    206c:	ldrb	w0, [x0, #1618]
    2070:	strb	w0, [x2]
    2074:	ldr	x0, [sp, #120]
    2078:	ldrb	w0, [x0]
    207c:	mov	w1, w0
    2080:	ldr	x0, [sp, #128]
    2084:	add	x2, x0, #0x1
    2088:	ldr	x3, [sp, #24]
    208c:	sxtw	x1, w1
    2090:	mov	x0, x1
    2094:	lsl	x0, x0, #1
    2098:	add	x0, x0, x1
    209c:	add	x0, x3, x0
    20a0:	ldrb	w0, [x0, #1617]
    20a4:	strb	w0, [x2]
    20a8:	ldr	x0, [sp, #120]
    20ac:	ldrb	w0, [x0]
    20b0:	ldr	x2, [sp, #24]
    20b4:	sxtw	x1, w0
    20b8:	mov	x0, x1
    20bc:	lsl	x0, x0, #1
    20c0:	add	x0, x0, x1
    20c4:	add	x0, x2, x0
    20c8:	ldrb	w1, [x0, #1616]
    20cc:	ldr	x0, [sp, #128]
    20d0:	strb	w1, [x0]
    20d4:	ldr	w0, [sp, #140]
    20d8:	add	w0, w0, #0x1
    20dc:	str	w0, [sp, #140]
    20e0:	ldr	x0, [sp, #128]
    20e4:	add	x0, x0, #0x3
    20e8:	str	x0, [sp, #128]
    20ec:	ldr	x0, [sp, #120]
    20f0:	add	x0, x0, #0x1
    20f4:	str	x0, [sp, #120]
    20f8:	ldr	x0, [sp, #24]
    20fc:	ldr	w1, [x0, #28]
    2100:	ldr	x0, [sp, #24]
    2104:	ldr	w0, [x0, #32]
    2108:	mul	w0, w1, w0
    210c:	ldr	w1, [sp, #140]
    2110:	cmp	w1, w0
    2114:	b.cc	2040 <grub_png_convert_image+0x338>  // b.lo, b.ul, b.last
    2118:	b	2428 <grub_png_convert_image+0x720>
    211c:	ldr	x0, [sp, #24]
    2120:	ldr	w0, [x0, #48]
    2124:	cmp	w0, #0x0
    2128:	b.eq	23b4 <grub_png_convert_image+0x6ac>  // b.none
    212c:	ldr	x0, [sp, #24]
    2130:	ldr	w0, [x0, #36]
    2134:	cmp	w0, #0x4
    2138:	b.eq	2158 <grub_png_convert_image+0x450>  // b.none
    213c:	cmp	w0, #0x4
    2140:	b.gt	2424 <grub_png_convert_image+0x71c>
    2144:	cmp	w0, #0x1
    2148:	b.eq	2328 <grub_png_convert_image+0x620>  // b.none
    214c:	cmp	w0, #0x2
    2150:	b.eq	21f4 <grub_png_convert_image+0x4ec>  // b.none
    2154:	b	2424 <grub_png_convert_image+0x71c>
    2158:	str	wzr, [sp, #140]
    215c:	b	21d0 <grub_png_convert_image+0x4c8>
    2160:	ldr	x0, [sp, #128]
    2164:	add	x0, x0, #0x3
    2168:	ldr	x1, [sp, #120]
    216c:	ldrb	w1, [x1, #3]
    2170:	strb	w1, [x0]
    2174:	ldr	x0, [sp, #128]
    2178:	add	x0, x0, #0x2
    217c:	ldr	x1, [sp, #120]
    2180:	ldrb	w1, [x1, #3]
    2184:	strb	w1, [x0]
    2188:	ldr	x0, [sp, #128]
    218c:	add	x0, x0, #0x1
    2190:	ldr	x1, [sp, #120]
    2194:	ldrb	w1, [x1, #3]
    2198:	strb	w1, [x0]
    219c:	ldr	x0, [sp, #120]
    21a0:	ldrb	w1, [x0, #1]
    21a4:	ldr	x0, [sp, #128]
    21a8:	strb	w1, [x0]
    21ac:	ldr	w0, [sp, #140]
    21b0:	add	w0, w0, #0x1
    21b4:	str	w0, [sp, #140]
    21b8:	ldr	x0, [sp, #128]
    21bc:	add	x0, x0, #0x4
    21c0:	str	x0, [sp, #128]
    21c4:	ldr	x0, [sp, #120]
    21c8:	add	x0, x0, #0x4
    21cc:	str	x0, [sp, #120]
    21d0:	ldr	x0, [sp, #24]
    21d4:	ldr	w1, [x0, #28]
    21d8:	ldr	x0, [sp, #24]
    21dc:	ldr	w0, [x0, #32]
    21e0:	mul	w0, w1, w0
    21e4:	ldr	w1, [sp, #140]
    21e8:	cmp	w1, w0
    21ec:	b.cc	2160 <grub_png_convert_image+0x458>  // b.lo, b.ul, b.last
    21f0:	b	23b0 <grub_png_convert_image+0x6a8>
    21f4:	ldr	x0, [sp, #24]
    21f8:	ldr	w0, [x0, #40]
    21fc:	cmp	w0, #0x0
    2200:	b.eq	228c <grub_png_convert_image+0x584>  // b.none
    2204:	str	wzr, [sp, #140]
    2208:	b	2268 <grub_png_convert_image+0x560>
    220c:	ldr	x0, [sp, #128]
    2210:	add	x0, x0, #0x2
    2214:	ldr	x1, [sp, #120]
    2218:	ldrb	w1, [x1, #1]
    221c:	strb	w1, [x0]
    2220:	ldr	x0, [sp, #128]
    2224:	add	x0, x0, #0x1
    2228:	ldr	x1, [sp, #120]
    222c:	ldrb	w1, [x1, #1]
    2230:	strb	w1, [x0]
    2234:	ldr	x0, [sp, #120]
    2238:	ldrb	w1, [x0, #1]
    223c:	ldr	x0, [sp, #128]
    2240:	strb	w1, [x0]
    2244:	ldr	w0, [sp, #140]
    2248:	add	w0, w0, #0x1
    224c:	str	w0, [sp, #140]
    2250:	ldr	x0, [sp, #128]
    2254:	add	x0, x0, #0x4
    2258:	str	x0, [sp, #128]
    225c:	ldr	x0, [sp, #120]
    2260:	add	x0, x0, #0x2
    2264:	str	x0, [sp, #120]
    2268:	ldr	x0, [sp, #24]
    226c:	ldr	w1, [x0, #28]
    2270:	ldr	x0, [sp, #24]
    2274:	ldr	w0, [x0, #32]
    2278:	mul	w0, w1, w0
    227c:	ldr	w1, [sp, #140]
    2280:	cmp	w1, w0
    2284:	b.cc	220c <grub_png_convert_image+0x504>  // b.lo, b.ul, b.last
    2288:	b	23b0 <grub_png_convert_image+0x6a8>
    228c:	str	wzr, [sp, #140]
    2290:	b	2304 <grub_png_convert_image+0x5fc>
    2294:	ldr	x0, [sp, #128]
    2298:	add	x0, x0, #0x3
    229c:	ldr	x1, [sp, #120]
    22a0:	ldrb	w1, [x1, #1]
    22a4:	strb	w1, [x0]
    22a8:	ldr	x0, [sp, #128]
    22ac:	add	x0, x0, #0x2
    22b0:	ldr	x1, [sp, #120]
    22b4:	ldrb	w1, [x1, #1]
    22b8:	strb	w1, [x0]
    22bc:	ldr	x0, [sp, #128]
    22c0:	add	x0, x0, #0x1
    22c4:	ldr	x1, [sp, #120]
    22c8:	ldrb	w1, [x1, #1]
    22cc:	strb	w1, [x0]
    22d0:	ldr	x0, [sp, #120]
    22d4:	ldrb	w1, [x0]
    22d8:	ldr	x0, [sp, #128]
    22dc:	strb	w1, [x0]
    22e0:	ldr	w0, [sp, #140]
    22e4:	add	w0, w0, #0x1
    22e8:	str	w0, [sp, #140]
    22ec:	ldr	x0, [sp, #128]
    22f0:	add	x0, x0, #0x4
    22f4:	str	x0, [sp, #128]
    22f8:	ldr	x0, [sp, #120]
    22fc:	add	x0, x0, #0x2
    2300:	str	x0, [sp, #120]
    2304:	ldr	x0, [sp, #24]
    2308:	ldr	w1, [x0, #28]
    230c:	ldr	x0, [sp, #24]
    2310:	ldr	w0, [x0, #32]
    2314:	mul	w0, w1, w0
    2318:	ldr	w1, [sp, #140]
    231c:	cmp	w1, w0
    2320:	b.cc	2294 <grub_png_convert_image+0x58c>  // b.lo, b.ul, b.last
    2324:	b	23b0 <grub_png_convert_image+0x6a8>
    2328:	str	wzr, [sp, #140]
    232c:	b	238c <grub_png_convert_image+0x684>
    2330:	ldr	x0, [sp, #128]
    2334:	add	x0, x0, #0x2
    2338:	ldr	x1, [sp, #120]
    233c:	ldrb	w1, [x1]
    2340:	strb	w1, [x0]
    2344:	ldr	x0, [sp, #128]
    2348:	add	x0, x0, #0x1
    234c:	ldr	x1, [sp, #120]
    2350:	ldrb	w1, [x1]
    2354:	strb	w1, [x0]
    2358:	ldr	x0, [sp, #120]
    235c:	ldrb	w1, [x0]
    2360:	ldr	x0, [sp, #128]
    2364:	strb	w1, [x0]
    2368:	ldr	w0, [sp, #140]
    236c:	add	w0, w0, #0x1
    2370:	str	w0, [sp, #140]
    2374:	ldr	x0, [sp, #128]
    2378:	add	x0, x0, #0x3
    237c:	str	x0, [sp, #128]
    2380:	ldr	x0, [sp, #120]
    2384:	add	x0, x0, #0x1
    2388:	str	x0, [sp, #120]
    238c:	ldr	x0, [sp, #24]
    2390:	ldr	w1, [x0, #28]
    2394:	ldr	x0, [sp, #24]
    2398:	ldr	w0, [x0, #32]
    239c:	mul	w0, w1, w0
    23a0:	ldr	w1, [sp, #140]
    23a4:	cmp	w1, w0
    23a8:	b.cc	2330 <grub_png_convert_image+0x628>  // b.lo, b.ul, b.last
    23ac:	nop
    23b0:	b	2424 <grub_png_convert_image+0x71c>
    23b4:	str	wzr, [sp, #140]
    23b8:	b	23f0 <grub_png_convert_image+0x6e8>
    23bc:	ldr	x0, [sp, #120]
    23c0:	ldrb	w1, [x0]
    23c4:	ldr	x0, [sp, #128]
    23c8:	strb	w1, [x0]
    23cc:	ldr	w0, [sp, #140]
    23d0:	add	w0, w0, #0x1
    23d4:	str	w0, [sp, #140]
    23d8:	ldr	x0, [sp, #128]
    23dc:	add	x0, x0, #0x1
    23e0:	str	x0, [sp, #128]
    23e4:	ldr	x0, [sp, #120]
    23e8:	add	x0, x0, #0x2
    23ec:	str	x0, [sp, #120]
    23f0:	ldr	x0, [sp, #24]
    23f4:	ldr	w1, [x0, #28]
    23f8:	ldr	x0, [sp, #24]
    23fc:	ldr	w0, [x0, #32]
    2400:	mul	w0, w1, w0
    2404:	ldr	x1, [sp, #24]
    2408:	ldr	w1, [x1, #36]
    240c:	mul	w0, w0, w1
    2410:	lsr	w0, w0, #1
    2414:	ldr	w1, [sp, #140]
    2418:	cmp	w1, w0
    241c:	b.cc	23bc <grub_png_convert_image+0x6b4>  // b.lo, b.ul, b.last
    2420:	b	2428 <grub_png_convert_image+0x720>
    2424:	nop
    2428:	ldp	x29, x30, [sp], #144
    242c:	ret
	...

0000000000002438 <grub_png_decode_png>:
    2438:	stp	x29, x30, [sp, #-48]!
    243c:	mov	x29, sp
    2440:	str	x0, [sp, #24]
    2444:	ldr	x0, [sp, #24]
    2448:	ldr	x0, [x0]
    244c:	add	x1, sp, #0x20
    2450:	mov	x2, #0x8                   	// #8
    2454:	bl	0 <grub_file_read>
    2458:	cmp	x0, #0x8
    245c:	b.eq	2474 <grub_png_decode_png+0x3c>  // b.none
    2460:	adrp	x0, 0 <grub_swap_bytes32>
    2464:	add	x0, x0, #0x0
    2468:	ldr	x0, [x0]
    246c:	ldr	w0, [x0]
    2470:	b	2674 <grub_png_decode_png+0x23c>
    2474:	add	x3, sp, #0x20
    2478:	mov	x2, #0x8                   	// #8
    247c:	adrp	x0, 0 <grub_swap_bytes32>
    2480:	add	x0, x0, #0x0
    2484:	ldr	x1, [x0]
    2488:	mov	x0, x3
    248c:	bl	0 <grub_memcmp>
    2490:	cmp	w0, #0x0
    2494:	b.eq	24b0 <grub_png_decode_png+0x78>  // b.none
    2498:	adrp	x0, 0 <grub_swap_bytes32>
    249c:	add	x0, x0, #0x0
    24a0:	ldr	x1, [x0]
    24a4:	mov	w0, #0x4                   	// #4
    24a8:	bl	0 <grub_error>
    24ac:	b	2674 <grub_png_decode_png+0x23c>
    24b0:	ldr	x0, [sp, #24]
    24b4:	bl	44 <grub_png_get_dword>
    24b8:	str	w0, [sp, #44]
    24bc:	ldr	x0, [sp, #24]
    24c0:	bl	44 <grub_png_get_dword>
    24c4:	str	w0, [sp, #40]
    24c8:	ldr	x0, [sp, #24]
    24cc:	ldr	x0, [x0]
    24d0:	ldr	x0, [x0, #24]
    24d4:	mov	w1, w0
    24d8:	ldr	w0, [sp, #44]
    24dc:	add	w0, w1, w0
    24e0:	add	w1, w0, #0x4
    24e4:	ldr	x0, [sp, #24]
    24e8:	str	w1, [x0, #24]
    24ec:	ldr	w1, [sp, #40]
    24f0:	mov	w0, #0x5445                	// #21573
    24f4:	movk	w0, #0x504c, lsl #16
    24f8:	cmp	w1, w0
    24fc:	b.eq	2574 <grub_png_decode_png+0x13c>  // b.none
    2500:	ldr	w1, [sp, #40]
    2504:	mov	w0, #0x5445                	// #21573
    2508:	movk	w0, #0x504c, lsl #16
    250c:	cmp	w1, w0
    2510:	b.hi	25e4 <grub_png_decode_png+0x1ac>  // b.pmore
    2514:	ldr	w1, [sp, #40]
    2518:	mov	w0, #0x4452                	// #17490
    251c:	movk	w0, #0x4948, lsl #16
    2520:	cmp	w1, w0
    2524:	b.eq	2568 <grub_png_decode_png+0x130>  // b.none
    2528:	ldr	w1, [sp, #40]
    252c:	mov	w0, #0x4452                	// #17490
    2530:	movk	w0, #0x4948, lsl #16
    2534:	cmp	w1, w0
    2538:	b.hi	25e4 <grub_png_decode_png+0x1ac>  // b.pmore
    253c:	ldr	w1, [sp, #40]
    2540:	mov	w0, #0x4154                	// #16724
    2544:	movk	w0, #0x4944, lsl #16
    2548:	cmp	w1, w0
    254c:	b.eq	2584 <grub_png_decode_png+0x14c>  // b.none
    2550:	ldr	w1, [sp, #40]
    2554:	mov	w0, #0x4e44                	// #20036
    2558:	movk	w0, #0x4945, lsl #16
    255c:	cmp	w1, w0
    2560:	b.eq	25b8 <grub_png_decode_png+0x180>  // b.none
    2564:	b	25e4 <grub_png_decode_png+0x1ac>
    2568:	ldr	x0, [sp, #24]
    256c:	bl	428 <grub_png_decode_image_header>
    2570:	b	2610 <grub_png_decode_png+0x1d8>
    2574:	ldr	w1, [sp, #44]
    2578:	ldr	x0, [sp, #24]
    257c:	bl	320 <grub_png_decode_image_palette>
    2580:	b	2610 <grub_png_decode_png+0x1d8>
    2584:	ldr	x0, [sp, #24]
    2588:	mov	w1, #0x1                   	// #1
    258c:	str	w1, [x0, #80]
    2590:	ldr	w1, [sp, #44]
    2594:	ldr	x0, [sp, #24]
    2598:	str	w1, [x0, #84]
    259c:	ldr	x0, [sp, #24]
    25a0:	str	wzr, [x0, #16]
    25a4:	ldr	x0, [sp, #24]
    25a8:	bl	1b08 <grub_png_decode_image_data>
    25ac:	ldr	x0, [sp, #24]
    25b0:	str	wzr, [x0, #80]
    25b4:	b	2610 <grub_png_decode_png+0x1d8>
    25b8:	ldr	x0, [sp, #24]
    25bc:	ldr	x0, [x0, #72]
    25c0:	cmp	x0, #0x0
    25c4:	b.eq	25d0 <grub_png_decode_png+0x198>  // b.none
    25c8:	ldr	x0, [sp, #24]
    25cc:	bl	1d08 <grub_png_convert_image>
    25d0:	adrp	x0, 0 <grub_swap_bytes32>
    25d4:	add	x0, x0, #0x0
    25d8:	ldr	x0, [x0]
    25dc:	ldr	w0, [x0]
    25e0:	b	2674 <grub_png_decode_png+0x23c>
    25e4:	ldr	x0, [sp, #24]
    25e8:	ldr	x2, [x0]
    25ec:	ldr	x0, [sp, #24]
    25f0:	ldr	x0, [x0]
    25f4:	ldr	x1, [x0, #24]
    25f8:	ldr	w0, [sp, #44]
    25fc:	add	x0, x1, x0
    2600:	add	x0, x0, #0x4
    2604:	mov	x1, x0
    2608:	mov	x0, x2
    260c:	bl	0 <grub_file_seek>
    2610:	adrp	x0, 0 <grub_swap_bytes32>
    2614:	add	x0, x0, #0x0
    2618:	ldr	x0, [x0]
    261c:	ldr	w0, [x0]
    2620:	cmp	w0, #0x0
    2624:	b.ne	2660 <grub_png_decode_png+0x228>  // b.any
    2628:	ldr	x0, [sp, #24]
    262c:	ldr	x0, [x0]
    2630:	ldr	x1, [x0, #24]
    2634:	ldr	x0, [sp, #24]
    2638:	ldr	w0, [x0, #24]
    263c:	mov	w0, w0
    2640:	cmp	x1, x0
    2644:	b.eq	24b0 <grub_png_decode_png+0x78>  // b.none
    2648:	adrp	x0, 0 <grub_swap_bytes32>
    264c:	add	x0, x0, #0x0
    2650:	ldr	x1, [x0]
    2654:	mov	w0, #0x4                   	// #4
    2658:	bl	0 <grub_error>
    265c:	b	2674 <grub_png_decode_png+0x23c>
    2660:	nop
    2664:	adrp	x0, 0 <grub_swap_bytes32>
    2668:	add	x0, x0, #0x0
    266c:	ldr	x0, [x0]
    2670:	ldr	w0, [x0]
    2674:	ldp	x29, x30, [sp], #48
    2678:	ret
    267c:	nop
	...

00000000000026a0 <grub_video_reader_png>:
    26a0:	stp	x29, x30, [sp, #-48]!
    26a4:	mov	x29, sp
    26a8:	str	x0, [sp, #24]
    26ac:	str	x1, [sp, #16]
    26b0:	mov	x2, #0x0                   	// #0
    26b4:	mov	w1, #0x31                  	// #49
    26b8:	ldr	x0, [sp, #16]
    26bc:	bl	0 <grub_buffile_open>
    26c0:	str	x0, [sp, #40]
    26c4:	ldr	x0, [sp, #40]
    26c8:	cmp	x0, #0x0
    26cc:	b.ne	26e4 <grub_video_reader_png+0x44>  // b.any
    26d0:	adrp	x0, 0 <grub_swap_bytes32>
    26d4:	add	x0, x0, #0x0
    26d8:	ldr	x0, [x0]
    26dc:	ldr	w0, [x0]
    26e0:	b	2774 <grub_video_reader_png+0xd4>
    26e4:	mov	x0, #0x89b0                	// #35248
    26e8:	bl	0 <grub_zalloc>
    26ec:	str	x0, [sp, #32]
    26f0:	ldr	x0, [sp, #32]
    26f4:	cmp	x0, #0x0
    26f8:	b.eq	2730 <grub_video_reader_png+0x90>  // b.none
    26fc:	ldr	x0, [sp, #32]
    2700:	ldr	x1, [sp, #40]
    2704:	str	x1, [x0]
    2708:	ldr	x0, [sp, #32]
    270c:	ldr	x1, [sp, #24]
    2710:	str	x1, [x0, #8]
    2714:	ldr	x0, [sp, #32]
    2718:	bl	2438 <grub_png_decode_png>
    271c:	ldr	x0, [sp, #32]
    2720:	ldr	x0, [x0, #72]
    2724:	bl	0 <grub_free>
    2728:	ldr	x0, [sp, #32]
    272c:	bl	0 <grub_free>
    2730:	adrp	x0, 0 <grub_swap_bytes32>
    2734:	add	x0, x0, #0x0
    2738:	ldr	x0, [x0]
    273c:	ldr	w0, [x0]
    2740:	cmp	w0, #0x0
    2744:	b.eq	275c <grub_video_reader_png+0xbc>  // b.none
    2748:	ldr	x0, [sp, #24]
    274c:	ldr	x0, [x0]
    2750:	bl	0 <grub_video_bitmap_destroy>
    2754:	ldr	x0, [sp, #24]
    2758:	str	xzr, [x0]
    275c:	ldr	x0, [sp, #40]
    2760:	bl	0 <grub_file_close>
    2764:	adrp	x0, 0 <grub_swap_bytes32>
    2768:	add	x0, x0, #0x0
    276c:	ldr	x0, [x0]
    2770:	ldr	w0, [x0]
    2774:	ldp	x29, x30, [sp], #48
    2778:	ret
    277c:	nop
	...

0000000000002788 <grub_mod_init>:
    2788:	stp	x29, x30, [sp, #-32]!
    278c:	mov	x29, sp
    2790:	str	x0, [sp, #24]
    2794:	adrp	x0, 0 <grub_swap_bytes32>
    2798:	add	x0, x0, #0x0
    279c:	ldr	x0, [x0]
    27a0:	bl	0 <grub_video_bitmap_reader_register>
    27a4:	nop
    27a8:	ldp	x29, x30, [sp], #32
    27ac:	ret
	...

00000000000027b8 <grub_mod_fini>:
    27b8:	stp	x29, x30, [sp, #-16]!
    27bc:	mov	x29, sp
    27c0:	adrp	x0, 0 <grub_swap_bytes32>
    27c4:	add	x0, x0, #0x0
    27c8:	ldr	x0, [x0]
    27cc:	bl	0 <grub_video_bitmap_reader_unregister>
    27d0:	nop
    27d4:	ldp	x29, x30, [sp], #16
    27d8:	ret
    27dc:	nop
	...
