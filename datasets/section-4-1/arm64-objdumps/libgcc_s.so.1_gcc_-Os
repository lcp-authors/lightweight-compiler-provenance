
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcc_s.so.1_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002a98 <.init>:
    2a98:	stp	x29, x30, [sp, #-16]!
    2a9c:	mov	x29, sp
    2aa0:	bl	2e00 <_Unwind_GetDataRelBase@plt+0x10>
    2aa4:	ldp	x29, x30, [sp], #16
    2aa8:	ret

Disassembly of section .plt:

0000000000002ab0 <memcpy@plt-0x20>:
    2ab0:	stp	x16, x30, [sp, #-16]!
    2ab4:	adrp	x16, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    2ab8:	ldr	x17, [x16, #4088]
    2abc:	add	x16, x16, #0xff8
    2ac0:	br	x17
    2ac4:	nop
    2ac8:	nop
    2acc:	nop

0000000000002ad0 <memcpy@plt>:
    2ad0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16]
    2ad8:	add	x16, x16, #0x0
    2adc:	br	x17

0000000000002ae0 <_Unwind_GetRegionStart@plt>:
    2ae0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #8]
    2ae8:	add	x16, x16, #0x8
    2aec:	br	x17

0000000000002af0 <strlen@plt>:
    2af0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #16]
    2af8:	add	x16, x16, #0x10
    2afc:	br	x17

0000000000002b00 <_Unwind_RaiseException@plt>:
    2b00:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #24]
    2b08:	add	x16, x16, #0x18
    2b0c:	br	x17

0000000000002b10 <_Unwind_SetIP@plt>:
    2b10:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #32]
    2b18:	add	x16, x16, #0x20
    2b1c:	br	x17

0000000000002b20 <_Unwind_GetLanguageSpecificData@plt>:
    2b20:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #40]
    2b28:	add	x16, x16, #0x28
    2b2c:	br	x17

0000000000002b30 <__floatunditf@plt>:
    2b30:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #48]
    2b38:	add	x16, x16, #0x30
    2b3c:	br	x17

0000000000002b40 <__multf3@plt>:
    2b40:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #56]
    2b48:	add	x16, x16, #0x38
    2b4c:	br	x17

0000000000002b50 <__cxa_finalize@plt>:
    2b50:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #64]
    2b58:	add	x16, x16, #0x40
    2b5c:	br	x17

0000000000002b60 <__eqtf2@plt>:
    2b60:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #72]
    2b68:	add	x16, x16, #0x48
    2b6c:	br	x17

0000000000002b70 <__lshrti3@plt>:
    2b70:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #80]
    2b78:	add	x16, x16, #0x50
    2b7c:	br	x17

0000000000002b80 <__floatditf@plt>:
    2b80:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #88]
    2b88:	add	x16, x16, #0x58
    2b8c:	br	x17

0000000000002b90 <_Unwind_GetTextRelBase@plt>:
    2b90:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #96]
    2b98:	add	x16, x16, #0x60
    2b9c:	br	x17

0000000000002ba0 <__deregister_frame_info_bases@plt>:
    2ba0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #104]
    2ba8:	add	x16, x16, #0x68
    2bac:	br	x17

0000000000002bb0 <malloc@plt>:
    2bb0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #112]
    2bb8:	add	x16, x16, #0x70
    2bbc:	br	x17

0000000000002bc0 <pthread_getspecific@plt>:
    2bc0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #120]
    2bc8:	add	x16, x16, #0x78
    2bcc:	br	x17

0000000000002bd0 <_Unwind_GetCFA@plt>:
    2bd0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #128]
    2bd8:	add	x16, x16, #0x80
    2bdc:	br	x17

0000000000002be0 <memset@plt>:
    2be0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #136]
    2be8:	add	x16, x16, #0x88
    2bec:	br	x17

0000000000002bf0 <__fixunssfti@plt>:
    2bf0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #144]
    2bf8:	add	x16, x16, #0x90
    2bfc:	br	x17

0000000000002c00 <__letf2@plt>:
    2c00:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #152]
    2c08:	add	x16, x16, #0x98
    2c0c:	br	x17

0000000000002c10 <__register_frame_info_table_bases@plt>:
    2c10:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #160]
    2c18:	add	x16, x16, #0xa0
    2c1c:	br	x17

0000000000002c20 <calloc@plt>:
    2c20:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #168]
    2c28:	add	x16, x16, #0xa8
    2c2c:	br	x17

0000000000002c30 <__gttf2@plt>:
    2c30:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #176]
    2c38:	add	x16, x16, #0xb0
    2c3c:	br	x17

0000000000002c40 <_Unwind_GetIPInfo@plt>:
    2c40:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #184]
    2c48:	add	x16, x16, #0xb8
    2c4c:	br	x17

0000000000002c50 <realloc@plt>:
    2c50:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #192]
    2c58:	add	x16, x16, #0xc0
    2c5c:	br	x17

0000000000002c60 <__addtf3@plt>:
    2c60:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #200]
    2c68:	add	x16, x16, #0xc8
    2c6c:	br	x17

0000000000002c70 <pthread_key_create@plt>:
    2c70:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #208]
    2c78:	add	x16, x16, #0xd0
    2c7c:	br	x17

0000000000002c80 <__gmon_start__@plt>:
    2c80:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #216]
    2c88:	add	x16, x16, #0xd8
    2c8c:	br	x17

0000000000002c90 <abort@plt>:
    2c90:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #224]
    2c98:	add	x16, x16, #0xe0
    2c9c:	br	x17

0000000000002ca0 <__divtf3@plt>:
    2ca0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #232]
    2ca8:	add	x16, x16, #0xe8
    2cac:	br	x17

0000000000002cb0 <pthread_once@plt>:
    2cb0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #240]
    2cb8:	add	x16, x16, #0xf0
    2cbc:	br	x17

0000000000002cc0 <dl_iterate_phdr@plt>:
    2cc0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #248]
    2cc8:	add	x16, x16, #0xf8
    2ccc:	br	x17

0000000000002cd0 <__trunctfdf2@plt>:
    2cd0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #256]
    2cd8:	add	x16, x16, #0x100
    2cdc:	br	x17

0000000000002ce0 <__ashlti3@plt>:
    2ce0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #264]
    2ce8:	add	x16, x16, #0x108
    2cec:	br	x17

0000000000002cf0 <pthread_setspecific@plt>:
    2cf0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #272]
    2cf8:	add	x16, x16, #0x110
    2cfc:	br	x17

0000000000002d00 <_Unwind_Find_FDE@plt>:
    2d00:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #280]
    2d08:	add	x16, x16, #0x118
    2d0c:	br	x17

0000000000002d10 <free@plt>:
    2d10:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #288]
    2d18:	add	x16, x16, #0x120
    2d1c:	br	x17

0000000000002d20 <__register_frame_info_table@plt>:
    2d20:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #296]
    2d28:	add	x16, x16, #0x128
    2d2c:	br	x17

0000000000002d30 <__deregister_frame_info@plt>:
    2d30:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #304]
    2d38:	add	x16, x16, #0x130
    2d3c:	br	x17

0000000000002d40 <__lttf2@plt>:
    2d40:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #312]
    2d48:	add	x16, x16, #0x138
    2d4c:	br	x17

0000000000002d50 <__register_frame_info@plt>:
    2d50:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #320]
    2d58:	add	x16, x16, #0x140
    2d5c:	br	x17

0000000000002d60 <__register_frame_info_bases@plt>:
    2d60:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #328]
    2d68:	add	x16, x16, #0x148
    2d6c:	br	x17

0000000000002d70 <__fixunsdfti@plt>:
    2d70:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #336]
    2d78:	add	x16, x16, #0x150
    2d7c:	br	x17

0000000000002d80 <__unordtf2@plt>:
    2d80:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #344]
    2d88:	add	x16, x16, #0x158
    2d8c:	br	x17

0000000000002d90 <_Unwind_SetGR@plt>:
    2d90:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #352]
    2d98:	add	x16, x16, #0x160
    2d9c:	br	x17

0000000000002da0 <pthread_mutex_lock@plt>:
    2da0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #360]
    2da8:	add	x16, x16, #0x168
    2dac:	br	x17

0000000000002db0 <pthread_mutex_unlock@plt>:
    2db0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #368]
    2db8:	add	x16, x16, #0x170
    2dbc:	br	x17

0000000000002dc0 <__floatsitf@plt>:
    2dc0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2dc4:	ldr	x17, [x16, #376]
    2dc8:	add	x16, x16, #0x178
    2dcc:	br	x17

0000000000002dd0 <__subtf3@plt>:
    2dd0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2dd4:	ldr	x17, [x16, #384]
    2dd8:	add	x16, x16, #0x180
    2ddc:	br	x17

0000000000002de0 <__trunctfsf2@plt>:
    2de0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16, #392]
    2de8:	add	x16, x16, #0x188
    2dec:	br	x17

0000000000002df0 <_Unwind_GetDataRelBase@plt>:
    2df0:	adrp	x16, 21000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #400]
    2df8:	add	x16, x16, #0x190
    2dfc:	br	x17

Disassembly of section .text:

0000000000002e00 <__multi3@@GCC_3.0-0xd4>:
    2e00:	adrp	x0, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    2e04:	ldr	x0, [x0, #4056]
    2e08:	cbz	x0, 2e10 <_Unwind_GetDataRelBase@plt+0x20>
    2e0c:	b	2c80 <__gmon_start__@plt>
    2e10:	ret
    2e14:	adrp	x0, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2e18:	add	x0, x0, #0x1a8
    2e1c:	adrp	x1, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2e20:	add	x1, x1, #0x1a8
    2e24:	cmp	x1, x0
    2e28:	b.eq	2e40 <_Unwind_GetDataRelBase@plt+0x50>  // b.none
    2e2c:	adrp	x1, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    2e30:	ldr	x1, [x1, #4040]
    2e34:	cbz	x1, 2e40 <_Unwind_GetDataRelBase@plt+0x50>
    2e38:	mov	x16, x1
    2e3c:	br	x16
    2e40:	ret
    2e44:	adrp	x0, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2e48:	add	x0, x0, #0x1a8
    2e4c:	adrp	x1, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2e50:	add	x1, x1, #0x1a8
    2e54:	sub	x1, x1, x0
    2e58:	mov	x2, #0x2                   	// #2
    2e5c:	asr	x1, x1, #3
    2e60:	sdiv	x1, x1, x2
    2e64:	cbz	x1, 2e7c <_Unwind_GetDataRelBase@plt+0x8c>
    2e68:	adrp	x2, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    2e6c:	ldr	x2, [x2, #4064]
    2e70:	cbz	x2, 2e7c <_Unwind_GetDataRelBase@plt+0x8c>
    2e74:	mov	x16, x2
    2e78:	br	x16
    2e7c:	ret
    2e80:	adrp	x0, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2e84:	ldrb	w1, [x0, #424]
    2e88:	cbnz	w1, 2ecc <_Unwind_GetDataRelBase@plt+0xdc>
    2e8c:	stp	x29, x30, [sp, #-32]!
    2e90:	mov	x29, sp
    2e94:	str	x19, [sp, #16]
    2e98:	mov	x19, x0
    2e9c:	adrp	x0, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    2ea0:	ldr	x0, [x0, #4048]
    2ea4:	cbz	x0, 2eb4 <_Unwind_GetDataRelBase@plt+0xc4>
    2ea8:	adrp	x0, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    2eac:	ldr	x0, [x0, #408]
    2eb0:	bl	2b50 <__cxa_finalize@plt>
    2eb4:	bl	2e14 <_Unwind_GetDataRelBase@plt+0x24>
    2eb8:	mov	w0, #0x1                   	// #1
    2ebc:	strb	w0, [x19, #424]
    2ec0:	ldr	x19, [sp, #16]
    2ec4:	ldp	x29, x30, [sp], #32
    2ec8:	ret
    2ecc:	ret
    2ed0:	b	2e44 <_Unwind_GetDataRelBase@plt+0x54>

0000000000002ed4 <__multi3@@GCC_3.0>:
    2ed4:	and	x4, x0, #0xffffffff
    2ed8:	lsr	x5, x0, #32
    2edc:	and	x6, x2, #0xffffffff
    2ee0:	lsr	x8, x2, #32
    2ee4:	mul	x7, x4, x6
    2ee8:	mul	x6, x5, x6
    2eec:	madd	x4, x4, x8, x6
    2ef0:	mul	x5, x5, x8
    2ef4:	add	x4, x4, x7, lsr #32
    2ef8:	cmp	x6, x4
    2efc:	b.ls	2f08 <__multi3@@GCC_3.0+0x34>  // b.plast
    2f00:	mov	x6, #0x100000000           	// #4294967296
    2f04:	add	x5, x5, x6
    2f08:	add	x5, x5, x4, lsr #32
    2f0c:	and	x7, x7, #0xffffffff
    2f10:	madd	x5, x0, x3, x5
    2f14:	add	x0, x7, x4, lsl #32
    2f18:	madd	x1, x2, x1, x5
    2f1c:	ret

0000000000002f20 <__negti2@@GCC_3.0>:
    2f20:	cmp	x0, #0x0
    2f24:	neg	x1, x1
    2f28:	cset	x2, ne  // ne = any
    2f2c:	neg	x0, x0
    2f30:	sub	x1, x1, x2
    2f34:	ret

0000000000002f38 <__lshrti3@@GCC_3.0>:
    2f38:	cbz	x2, 2f5c <__lshrti3@@GCC_3.0+0x24>
    2f3c:	mov	x3, #0x40                  	// #64
    2f40:	sub	x3, x3, x2
    2f44:	cmp	x3, #0x0
    2f48:	b.gt	2f60 <__lshrti3@@GCC_3.0+0x28>
    2f4c:	neg	w0, w3
    2f50:	mov	x4, #0x0                   	// #0
    2f54:	lsr	x0, x1, x0
    2f58:	mov	x1, x4
    2f5c:	ret
    2f60:	lsr	x4, x1, x2
    2f64:	lsr	x0, x0, x2
    2f68:	lsl	x1, x1, x3
    2f6c:	orr	x0, x0, x1
    2f70:	b	2f58 <__lshrti3@@GCC_3.0+0x20>

0000000000002f74 <__ashlti3@@GCC_3.0>:
    2f74:	cbz	x2, 2f98 <__ashlti3@@GCC_3.0+0x24>
    2f78:	mov	x3, #0x40                  	// #64
    2f7c:	sub	x3, x3, x2
    2f80:	cmp	x3, #0x0
    2f84:	b.gt	2f9c <__ashlti3@@GCC_3.0+0x28>
    2f88:	neg	w1, w3
    2f8c:	mov	x4, #0x0                   	// #0
    2f90:	lsl	x1, x0, x1
    2f94:	mov	x0, x4
    2f98:	ret
    2f9c:	lsl	x4, x0, x2
    2fa0:	lsl	x1, x1, x2
    2fa4:	lsr	x0, x0, x3
    2fa8:	orr	x1, x1, x0
    2fac:	b	2f94 <__ashlti3@@GCC_3.0+0x20>

0000000000002fb0 <__ashrti3@@GCC_3.0>:
    2fb0:	cbz	x2, 2fd4 <__ashrti3@@GCC_3.0+0x24>
    2fb4:	mov	x3, #0x40                  	// #64
    2fb8:	sub	x3, x3, x2
    2fbc:	cmp	x3, #0x0
    2fc0:	b.gt	2fd8 <__ashrti3@@GCC_3.0+0x28>
    2fc4:	neg	w0, w3
    2fc8:	asr	x4, x1, #63
    2fcc:	asr	x0, x1, x0
    2fd0:	mov	x1, x4
    2fd4:	ret
    2fd8:	asr	x4, x1, x2
    2fdc:	lsr	x0, x0, x2
    2fe0:	lsl	x1, x1, x3
    2fe4:	orr	x0, x0, x1
    2fe8:	b	2fd0 <__ashrti3@@GCC_3.0+0x20>

0000000000002fec <__cmpti2@@GCC_3.0>:
    2fec:	cmp	x1, x3
    2ff0:	b.lt	300c <__cmpti2@@GCC_3.0+0x20>  // b.tstop
    2ff4:	b.gt	3014 <__cmpti2@@GCC_3.0+0x28>
    2ff8:	cmp	x0, x2
    2ffc:	cset	w1, hi  // hi = pmore
    3000:	add	w1, w1, #0x1
    3004:	csel	w0, w1, wzr, cs  // cs = hs, nlast
    3008:	ret
    300c:	mov	w0, #0x0                   	// #0
    3010:	b	3008 <__cmpti2@@GCC_3.0+0x1c>
    3014:	mov	w0, #0x2                   	// #2
    3018:	b	3008 <__cmpti2@@GCC_3.0+0x1c>

000000000000301c <__ucmpti2@@GCC_3.0>:
    301c:	cmp	x1, x3
    3020:	b.cc	303c <__ucmpti2@@GCC_3.0+0x20>  // b.lo, b.ul, b.last
    3024:	b.hi	3044 <__ucmpti2@@GCC_3.0+0x28>  // b.pmore
    3028:	cmp	x0, x2
    302c:	cset	w1, hi  // hi = pmore
    3030:	add	w1, w1, #0x1
    3034:	csel	w0, w1, wzr, cs  // cs = hs, nlast
    3038:	ret
    303c:	mov	w0, #0x0                   	// #0
    3040:	b	3038 <__ucmpti2@@GCC_3.0+0x1c>
    3044:	mov	w0, #0x2                   	// #2
    3048:	b	3038 <__ucmpti2@@GCC_3.0+0x1c>

000000000000304c <__clear_cache@@GCC_3.0>:
    304c:	b	69a8 <__udivmodti4@@GCC_3.0+0x3b0>

0000000000003050 <__absvdi2@@GCC_3.0>:
    3050:	tbz	x0, #63, 3068 <__absvdi2@@GCC_3.0+0x18>
    3054:	negs	x0, x0
    3058:	b.pl	3068 <__absvdi2@@GCC_3.0+0x18>  // b.nfrst
    305c:	stp	x29, x30, [sp, #-16]!
    3060:	mov	x29, sp
    3064:	bl	2c90 <abort@plt>
    3068:	ret

000000000000306c <__absvsi2@@GCC_3.0>:
    306c:	tbz	w0, #31, 3084 <__absvsi2@@GCC_3.0+0x18>
    3070:	negs	w0, w0
    3074:	b.pl	3084 <__absvsi2@@GCC_3.0+0x18>  // b.nfrst
    3078:	stp	x29, x30, [sp, #-16]!
    307c:	mov	x29, sp
    3080:	bl	2c90 <abort@plt>
    3084:	ret

0000000000003088 <__absvti2@@GCC_3.4.4>:
    3088:	tbz	x1, #63, 30a4 <__absvti2@@GCC_3.4.4+0x1c>
    308c:	negs	x0, x0
    3090:	ngc	x1, x1
    3094:	tbz	x1, #63, 30a4 <__absvti2@@GCC_3.4.4+0x1c>
    3098:	stp	x29, x30, [sp, #-16]!
    309c:	mov	x29, sp
    30a0:	bl	2c90 <abort@plt>
    30a4:	ret

00000000000030a8 <__addvdi3@@GCC_3.0>:
    30a8:	mov	x2, x0
    30ac:	add	x0, x0, x1
    30b0:	tbnz	x1, #63, 30cc <__addvdi3@@GCC_3.0+0x24>
    30b4:	cmp	x2, x0
    30b8:	cset	w1, gt
    30bc:	cbz	w1, 30d8 <__addvdi3@@GCC_3.0+0x30>
    30c0:	stp	x29, x30, [sp, #-16]!
    30c4:	mov	x29, sp
    30c8:	bl	2c90 <abort@plt>
    30cc:	cmp	x2, x0
    30d0:	cset	w1, lt  // lt = tstop
    30d4:	b	30bc <__addvdi3@@GCC_3.0+0x14>
    30d8:	ret

00000000000030dc <__addvsi3@@GCC_3.0>:
    30dc:	mov	w2, w0
    30e0:	add	w0, w0, w1
    30e4:	tbnz	w1, #31, 3100 <__addvsi3@@GCC_3.0+0x24>
    30e8:	cmp	w2, w0
    30ec:	cset	w1, gt
    30f0:	cbz	w1, 310c <__addvsi3@@GCC_3.0+0x30>
    30f4:	stp	x29, x30, [sp, #-16]!
    30f8:	mov	x29, sp
    30fc:	bl	2c90 <abort@plt>
    3100:	cmp	w2, w0
    3104:	cset	w1, lt  // lt = tstop
    3108:	b	30f0 <__addvsi3@@GCC_3.0+0x14>
    310c:	ret

0000000000003110 <__addvti3@@GCC_3.4.4>:
    3110:	mov	x4, x0
    3114:	adds	x0, x0, x2
    3118:	mov	x5, x1
    311c:	adc	x1, x1, x3
    3120:	tbnz	x3, #63, 3150 <__addvti3@@GCC_3.4.4+0x40>
    3124:	cmp	x5, x1
    3128:	mov	w3, #0x1                   	// #1
    312c:	b.gt	3140 <__addvti3@@GCC_3.4.4+0x30>
    3130:	b.ne	313c <__addvti3@@GCC_3.4.4+0x2c>  // b.any
    3134:	cmp	x4, x0
    3138:	b.hi	3140 <__addvti3@@GCC_3.4.4+0x30>  // b.pmore
    313c:	mov	w3, #0x0                   	// #0
    3140:	cbz	w3, 3168 <__addvti3@@GCC_3.4.4+0x58>
    3144:	stp	x29, x30, [sp, #-16]!
    3148:	mov	x29, sp
    314c:	bl	2c90 <abort@plt>
    3150:	cmp	x1, x5
    3154:	mov	w3, #0x1                   	// #1
    3158:	b.gt	3140 <__addvti3@@GCC_3.4.4+0x30>
    315c:	b.ne	313c <__addvti3@@GCC_3.4.4+0x2c>  // b.any
    3160:	cmp	x0, x4
    3164:	b	3138 <__addvti3@@GCC_3.4.4+0x28>
    3168:	ret

000000000000316c <__subvdi3@@GCC_3.0>:
    316c:	mov	x2, x0
    3170:	sub	x0, x0, x1
    3174:	tbnz	x1, #63, 3190 <__subvdi3@@GCC_3.0+0x24>
    3178:	cmp	x2, x0
    317c:	cset	w1, lt  // lt = tstop
    3180:	cbz	w1, 319c <__subvdi3@@GCC_3.0+0x30>
    3184:	stp	x29, x30, [sp, #-16]!
    3188:	mov	x29, sp
    318c:	bl	2c90 <abort@plt>
    3190:	cmp	x2, x0
    3194:	cset	w1, gt
    3198:	b	3180 <__subvdi3@@GCC_3.0+0x14>
    319c:	ret

00000000000031a0 <__subvsi3@@GCC_3.0>:
    31a0:	mov	w2, w0
    31a4:	sub	w0, w0, w1
    31a8:	tbnz	w1, #31, 31c4 <__subvsi3@@GCC_3.0+0x24>
    31ac:	cmp	w2, w0
    31b0:	cset	w1, lt  // lt = tstop
    31b4:	cbz	w1, 31d0 <__subvsi3@@GCC_3.0+0x30>
    31b8:	stp	x29, x30, [sp, #-16]!
    31bc:	mov	x29, sp
    31c0:	bl	2c90 <abort@plt>
    31c4:	cmp	w2, w0
    31c8:	cset	w1, gt
    31cc:	b	31b4 <__subvsi3@@GCC_3.0+0x14>
    31d0:	ret

00000000000031d4 <__subvti3@@GCC_3.4.4>:
    31d4:	mov	x4, x0
    31d8:	subs	x0, x0, x2
    31dc:	mov	x5, x1
    31e0:	sbc	x1, x1, x3
    31e4:	tbnz	x3, #63, 3214 <__subvti3@@GCC_3.4.4+0x40>
    31e8:	cmp	x1, x5
    31ec:	mov	w3, #0x1                   	// #1
    31f0:	b.gt	3204 <__subvti3@@GCC_3.4.4+0x30>
    31f4:	b.ne	3200 <__subvti3@@GCC_3.4.4+0x2c>  // b.any
    31f8:	cmp	x0, x4
    31fc:	b.hi	3204 <__subvti3@@GCC_3.4.4+0x30>  // b.pmore
    3200:	mov	w3, #0x0                   	// #0
    3204:	cbz	w3, 322c <__subvti3@@GCC_3.4.4+0x58>
    3208:	stp	x29, x30, [sp, #-16]!
    320c:	mov	x29, sp
    3210:	bl	2c90 <abort@plt>
    3214:	cmp	x5, x1
    3218:	mov	w3, #0x1                   	// #1
    321c:	b.gt	3204 <__subvti3@@GCC_3.4.4+0x30>
    3220:	b.ne	3200 <__subvti3@@GCC_3.4.4+0x2c>  // b.any
    3224:	cmp	x4, x0
    3228:	b	31fc <__subvti3@@GCC_3.4.4+0x28>
    322c:	ret

0000000000003230 <__mulvdi3@@GCC_3.0>:
    3230:	mov	x2, x0
    3234:	mul	x0, x0, x1
    3238:	smulh	x2, x2, x1
    323c:	cmp	x2, x0, asr #63
    3240:	b.eq	3250 <__mulvdi3@@GCC_3.0+0x20>  // b.none
    3244:	stp	x29, x30, [sp, #-16]!
    3248:	mov	x29, sp
    324c:	bl	2c90 <abort@plt>
    3250:	ret

0000000000003254 <__mulvsi3@@GCC_3.0>:
    3254:	smull	x0, w0, w1
    3258:	asr	x1, x0, #32
    325c:	cmp	w1, w0, asr #31
    3260:	b.eq	3270 <__mulvsi3@@GCC_3.0+0x1c>  // b.none
    3264:	stp	x29, x30, [sp, #-16]!
    3268:	mov	x29, sp
    326c:	bl	2c90 <abort@plt>
    3270:	ret

0000000000003274 <__mulvti3@@GCC_3.4.4>:
    3274:	mov	x4, x1
    3278:	mov	x5, x0
    327c:	cmp	x4, x0, asr #63
    3280:	asr	x1, x2, #63
    3284:	mul	x0, x0, x2
    3288:	b.ne	32d4 <__mulvti3@@GCC_3.4.4+0x60>  // b.any
    328c:	cmp	x1, x3
    3290:	b.ne	329c <__mulvti3@@GCC_3.4.4+0x28>  // b.any
    3294:	smulh	x1, x5, x2
    3298:	ret
    329c:	mul	x1, x3, x5
    32a0:	umulh	x7, x2, x5
    32a4:	umulh	x6, x3, x5
    32a8:	mov	x4, x1
    32ac:	tbz	x3, #63, 32b4 <__mulvti3@@GCC_3.4.4+0x40>
    32b0:	sub	x6, x6, x5
    32b4:	tbz	x5, #63, 32c0 <__mulvti3@@GCC_3.4.4+0x4c>
    32b8:	subs	x4, x1, x2
    32bc:	sbc	x6, x6, x3
    32c0:	adds	x1, x4, x7
    32c4:	cinc	x6, x6, cs  // cs = hs, nlast
    32c8:	cmp	x6, x1, asr #63
    32cc:	b.ne	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.any
    32d0:	ret
    32d4:	cmp	x1, x3
    32d8:	umulh	x1, x2, x5
    32dc:	b.ne	3314 <__mulvti3@@GCC_3.4.4+0xa0>  // b.any
    32e0:	mul	x7, x4, x2
    32e4:	umulh	x3, x4, x2
    32e8:	mov	x6, x7
    32ec:	tbz	x4, #63, 32f4 <__mulvti3@@GCC_3.4.4+0x80>
    32f0:	sub	x3, x3, x2
    32f4:	tbz	x2, #63, 3300 <__mulvti3@@GCC_3.4.4+0x8c>
    32f8:	subs	x6, x7, x5
    32fc:	sbc	x3, x3, x4
    3300:	adds	x1, x6, x1
    3304:	cinc	x3, x3, cs  // cs = hs, nlast
    3308:	cmp	x3, x1, asr #63
    330c:	b.ne	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.any
    3310:	ret
    3314:	tbnz	x4, #63, 334c <__mulvti3@@GCC_3.4.4+0xd8>
    3318:	tbnz	x3, #63, 3334 <__mulvti3@@GCC_3.4.4+0xc0>
    331c:	orr	x3, x3, x4
    3320:	cbnz	x3, 3328 <__mulvti3@@GCC_3.4.4+0xb4>
    3324:	tbz	x1, #63, 3388 <__mulvti3@@GCC_3.4.4+0x114>
    3328:	stp	x29, x30, [sp, #-16]!
    332c:	mov	x29, sp
    3330:	bl	2c90 <abort@plt>
    3334:	cbnz	x4, 3328 <__mulvti3@@GCC_3.4.4+0xb4>
    3338:	cmn	x3, #0x1
    333c:	b.ne	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.any
    3340:	subs	x1, x1, x5
    3344:	b.pl	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.nfrst
    3348:	ret
    334c:	tbnz	x3, #63, 3368 <__mulvti3@@GCC_3.4.4+0xf4>
    3350:	cmn	x4, #0x1
    3354:	b.ne	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.any
    3358:	cbnz	x3, 3328 <__mulvti3@@GCC_3.4.4+0xb4>
    335c:	subs	x1, x1, x2
    3360:	b.pl	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.nfrst
    3364:	ret
    3368:	and	x3, x3, x4
    336c:	cmn	x3, #0x1
    3370:	b.ne	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.any
    3374:	orr	x3, x2, x5
    3378:	cbz	x3, 3328 <__mulvti3@@GCC_3.4.4+0xb4>
    337c:	sub	x1, x1, x5
    3380:	subs	x1, x1, x2
    3384:	b.mi	3328 <__mulvti3@@GCC_3.4.4+0xb4>  // b.first
    3388:	ret

000000000000338c <__negvdi2@@GCC_3.0>:
    338c:	mov	x1, x0
    3390:	neg	x0, x0
    3394:	tbnz	x1, #63, 33b0 <__negvdi2@@GCC_3.0+0x24>
    3398:	cmp	x0, #0x0
    339c:	cset	w1, gt
    33a0:	cbz	w1, 33bc <__negvdi2@@GCC_3.0+0x30>
    33a4:	stp	x29, x30, [sp, #-16]!
    33a8:	mov	x29, sp
    33ac:	bl	2c90 <abort@plt>
    33b0:	lsr	x1, x0, #63
    33b4:	and	w1, w1, #0xff
    33b8:	b	33a0 <__negvdi2@@GCC_3.0+0x14>
    33bc:	ret

00000000000033c0 <__negvsi2@@GCC_3.0>:
    33c0:	mov	w1, w0
    33c4:	neg	w0, w0
    33c8:	tbnz	w1, #31, 33e4 <__negvsi2@@GCC_3.0+0x24>
    33cc:	cmp	w0, #0x0
    33d0:	cset	w1, gt
    33d4:	cbz	w1, 33ec <__negvsi2@@GCC_3.0+0x2c>
    33d8:	stp	x29, x30, [sp, #-16]!
    33dc:	mov	x29, sp
    33e0:	bl	2c90 <abort@plt>
    33e4:	lsr	w1, w0, #31
    33e8:	b	33d4 <__negvsi2@@GCC_3.0+0x14>
    33ec:	ret

00000000000033f0 <__negvti2@@GCC_3.4.4>:
    33f0:	negs	x0, x0
    33f4:	mov	x2, x1
    33f8:	ngc	x1, x1
    33fc:	tbnz	x2, #63, 3428 <__negvti2@@GCC_3.4.4+0x38>
    3400:	cmp	x1, #0x0
    3404:	mov	w2, #0x1                   	// #1
    3408:	b.gt	3418 <__negvti2@@GCC_3.4.4+0x28>
    340c:	b.ne	3414 <__negvti2@@GCC_3.4.4+0x24>  // b.any
    3410:	cbnz	x0, 3418 <__negvti2@@GCC_3.4.4+0x28>
    3414:	mov	w2, #0x0                   	// #0
    3418:	cbz	w2, 3434 <__negvti2@@GCC_3.4.4+0x44>
    341c:	stp	x29, x30, [sp, #-16]!
    3420:	mov	x29, sp
    3424:	bl	2c90 <abort@plt>
    3428:	lsr	x2, x1, #63
    342c:	and	w2, w2, #0xff
    3430:	b	3418 <__negvti2@@GCC_3.4.4+0x28>
    3434:	ret

0000000000003438 <__ffsdi2@@GCC_3.0>:
    3438:	rbit	x1, x0
    343c:	cmp	x0, #0x0
    3440:	clz	x1, x1
    3444:	csinc	w0, wzr, w1, eq  // eq = none
    3448:	ret

000000000000344c <__ffsti2@@GCC_3.0>:
    344c:	cbz	x0, 3468 <__ffsti2@@GCC_3.0+0x1c>
    3450:	mov	x1, #0x0                   	// #0
    3454:	rbit	x0, x0
    3458:	clz	x0, x0
    345c:	add	w0, w1, w0
    3460:	add	w0, w0, #0x1
    3464:	ret
    3468:	cbz	x1, 3478 <__ffsti2@@GCC_3.0+0x2c>
    346c:	mov	x0, x1
    3470:	mov	x1, #0x40                  	// #64
    3474:	b	3454 <__ffsti2@@GCC_3.0+0x8>
    3478:	mov	w0, #0x0                   	// #0
    347c:	b	3464 <__ffsti2@@GCC_3.0+0x18>

0000000000003480 <__clzdi2@@GCC_3.4>:
    3480:	clz	x0, x0
    3484:	ret

0000000000003488 <__clzti2@@GCC_3.4>:
    3488:	cbz	x1, 349c <__clzti2@@GCC_3.4+0x14>
    348c:	mov	x0, #0x0                   	// #0
    3490:	clz	x1, x1
    3494:	add	w0, w0, w1
    3498:	ret
    349c:	mov	x1, x0
    34a0:	mov	x0, #0x40                  	// #64
    34a4:	b	3490 <__clzti2@@GCC_3.4+0x8>

00000000000034a8 <__ctzdi2@@GCC_3.4>:
    34a8:	rbit	x0, x0
    34ac:	clz	x0, x0
    34b0:	ret

00000000000034b4 <__ctzti2@@GCC_3.4>:
    34b4:	cbz	x0, 34d0 <__ctzti2@@GCC_3.4+0x1c>
    34b8:	mov	x1, x0
    34bc:	mov	x0, #0x0                   	// #0
    34c0:	rbit	x1, x1
    34c4:	clz	x1, x1
    34c8:	add	w0, w0, w1
    34cc:	ret
    34d0:	mov	x0, #0x40                  	// #64
    34d4:	b	34c0 <__ctzti2@@GCC_3.4+0xc>

00000000000034d8 <__popcountdi2@@GCC_3.4>:
    34d8:	lsr	x1, x0, #1
    34dc:	and	x1, x1, #0x5555555555555555
    34e0:	sub	x0, x0, x1
    34e4:	and	x1, x0, #0x3333333333333333
    34e8:	lsr	x0, x0, #2
    34ec:	and	x0, x0, #0x3333333333333333
    34f0:	add	x0, x1, x0
    34f4:	mov	x1, #0x101010101010101     	// #72340172838076673
    34f8:	add	x0, x0, x0, lsr #4
    34fc:	and	x0, x0, #0xf0f0f0f0f0f0f0f
    3500:	mul	x0, x0, x1
    3504:	lsr	x0, x0, #56
    3508:	ret

000000000000350c <__popcountti2@@GCC_3.4>:
    350c:	lsr	x2, x0, #1
    3510:	and	x2, x2, #0x5555555555555555
    3514:	sub	x0, x0, x2
    3518:	lsr	x2, x1, #1
    351c:	and	x2, x2, #0x5555555555555555
    3520:	sub	x2, x1, x2
    3524:	and	x1, x0, #0x3333333333333333
    3528:	lsr	x0, x0, #2
    352c:	and	x0, x0, #0x3333333333333333
    3530:	add	x0, x1, x0
    3534:	and	x1, x2, #0x3333333333333333
    3538:	lsr	x2, x2, #2
    353c:	and	x2, x2, #0x3333333333333333
    3540:	add	x0, x0, x0, lsr #4
    3544:	add	x1, x1, x2
    3548:	and	x2, x0, #0xf0f0f0f0f0f0f0f
    354c:	add	x0, x1, x1, lsr #4
    3550:	mov	x1, #0x101010101010101     	// #72340172838076673
    3554:	and	x0, x0, #0xf0f0f0f0f0f0f0f
    3558:	add	x0, x0, x2
    355c:	mul	x0, x0, x1
    3560:	lsr	x0, x0, #56
    3564:	ret

0000000000003568 <__paritydi2@@GCC_3.4>:
    3568:	eor	x0, x0, x0, lsr #32
    356c:	mov	w1, #0x6996                	// #27030
    3570:	eor	x0, x0, x0, lsr #16
    3574:	eor	x0, x0, x0, lsr #8
    3578:	eor	x0, x0, x0, lsr #4
    357c:	and	x0, x0, #0xf
    3580:	asr	w0, w1, w0
    3584:	and	w0, w0, #0x1
    3588:	ret

000000000000358c <__parityti2@@GCC_3.4>:
    358c:	eor	x0, x0, x1
    3590:	mov	w1, #0x6996                	// #27030
    3594:	eor	x0, x0, x0, lsr #32
    3598:	eor	x0, x0, x0, lsr #16
    359c:	eor	x0, x0, x0, lsr #8
    35a0:	eor	x0, x0, x0, lsr #4
    35a4:	and	x0, x0, #0xf
    35a8:	asr	w0, w1, w0
    35ac:	and	w0, w0, #0x1
    35b0:	ret

00000000000035b4 <__powisf2@@GCC_4.0.0>:
    35b4:	cmp	w0, #0x0
    35b8:	fmov	s1, #1.000000000000000000e+00
    35bc:	cneg	w1, w0, lt  // lt = tstop
    35c0:	tst	x0, #0x1
    35c4:	fmov	s2, s0
    35c8:	fcsel	s0, s0, s1, ne  // ne = any
    35cc:	lsr	w1, w1, #1
    35d0:	cbnz	w1, 35e4 <__powisf2@@GCC_4.0.0+0x30>
    35d4:	tbz	w0, #31, 35e0 <__powisf2@@GCC_4.0.0+0x2c>
    35d8:	fmov	s1, #1.000000000000000000e+00
    35dc:	fdiv	s0, s1, s0
    35e0:	ret
    35e4:	fmul	s2, s2, s2
    35e8:	tbz	w1, #0, 35cc <__powisf2@@GCC_4.0.0+0x18>
    35ec:	fmul	s0, s0, s2
    35f0:	b	35cc <__powisf2@@GCC_4.0.0+0x18>

00000000000035f4 <__powidf2@@GCC_4.0.0>:
    35f4:	cmp	w0, #0x0
    35f8:	fmov	d1, #1.000000000000000000e+00
    35fc:	cneg	w1, w0, lt  // lt = tstop
    3600:	tst	x0, #0x1
    3604:	fmov	d2, d0
    3608:	fcsel	d0, d0, d1, ne  // ne = any
    360c:	lsr	w1, w1, #1
    3610:	cbnz	w1, 3624 <__powidf2@@GCC_4.0.0+0x30>
    3614:	tbz	w0, #31, 3620 <__powidf2@@GCC_4.0.0+0x2c>
    3618:	fmov	d1, #1.000000000000000000e+00
    361c:	fdiv	d0, d1, d0
    3620:	ret
    3624:	fmul	d2, d2, d2
    3628:	tbz	w1, #0, 360c <__powidf2@@GCC_4.0.0+0x18>
    362c:	fmul	d0, d0, d2
    3630:	b	360c <__powidf2@@GCC_4.0.0+0x18>

0000000000003634 <__powitf2@@GCC_4.0.0>:
    3634:	stp	x29, x30, [sp, #-48]!
    3638:	cmp	w0, #0x0
    363c:	mov	v1.16b, v0.16b
    3640:	mov	x29, sp
    3644:	stp	x19, x20, [sp, #16]
    3648:	mov	w19, w0
    364c:	cneg	w20, w0, lt  // lt = tstop
    3650:	tbnz	w19, #0, 3694 <__powitf2@@GCC_4.0.0+0x60>
    3654:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3658:	add	x0, x0, #0xbd0
    365c:	ldr	q2, [x0]
    3660:	lsr	w20, w20, #1
    3664:	cbnz	w20, 369c <__powitf2@@GCC_4.0.0+0x68>
    3668:	tbz	w19, #31, 3684 <__powitf2@@GCC_4.0.0+0x50>
    366c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3670:	add	x0, x0, #0xbd0
    3674:	mov	v1.16b, v2.16b
    3678:	ldr	q0, [x0]
    367c:	bl	2ca0 <__divtf3@plt>
    3680:	mov	v2.16b, v0.16b
    3684:	mov	v0.16b, v2.16b
    3688:	ldp	x19, x20, [sp, #16]
    368c:	ldp	x29, x30, [sp], #48
    3690:	ret
    3694:	mov	v2.16b, v0.16b
    3698:	b	3660 <__powitf2@@GCC_4.0.0+0x2c>
    369c:	mov	v0.16b, v1.16b
    36a0:	str	q2, [sp, #32]
    36a4:	bl	2b40 <__multf3@plt>
    36a8:	mov	v1.16b, v0.16b
    36ac:	ldr	q2, [sp, #32]
    36b0:	tbz	w20, #0, 3660 <__powitf2@@GCC_4.0.0+0x2c>
    36b4:	str	q0, [sp, #32]
    36b8:	mov	v0.16b, v2.16b
    36bc:	bl	2b40 <__multf3@plt>
    36c0:	mov	v2.16b, v0.16b
    36c4:	ldr	q1, [sp, #32]
    36c8:	b	3660 <__powitf2@@GCC_4.0.0+0x2c>
    36cc:	fcvt	s19, h0
    36d0:	fcvt	s5, h1
    36d4:	fcvt	s22, h2
    36d8:	fcvt	s21, h3
    36dc:	mov	v4.h[0], v0.h[0]
    36e0:	mov	v6.h[0], v1.h[0]
    36e4:	fmul	s18, s19, s22
    36e8:	fmul	s17, s5, s21
    36ec:	fmul	s16, s19, s21
    36f0:	fmul	s7, s22, s5
    36f4:	fcvt	h18, s18
    36f8:	fcvt	h17, s17
    36fc:	fcvt	h16, s16
    3700:	fcvt	h7, s7
    3704:	fcvt	s18, h18
    3708:	fcvt	s17, h17
    370c:	fcvt	s16, h16
    3710:	fcvt	s7, h7
    3714:	fsub	s0, s18, s17
    3718:	fadd	s1, s16, s7
    371c:	fcvt	h0, s0
    3720:	fcvt	h1, s1
    3724:	fcvt	s20, h0
    3728:	fcmp	s20, s20
    372c:	fcvt	s20, h1
    3730:	cset	w0, vs
    3734:	fcmp	s20, s20
    3738:	cset	w1, vs
    373c:	ands	w0, w0, w1
    3740:	b.eq	38c4 <__powitf2@@GCC_4.0.0+0x290>  // b.none
    3744:	fabs	s20, s19
    3748:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    374c:	fabs	s19, s5
    3750:	ldr	s5, [x1, #3040]
    3754:	fcvt	h20, s20
    3758:	fcvt	h19, s19
    375c:	fcvt	s20, h20
    3760:	fcvt	s19, h19
    3764:	fcmp	s20, s5
    3768:	b.gt	3774 <__powitf2@@GCC_4.0.0+0x140>
    376c:	fcmp	s19, s5
    3770:	b.le	38c8 <__powitf2@@GCC_4.0.0+0x294>
    3774:	fcmp	s20, s5
    3778:	umov	w2, v4.h[0]
    377c:	cset	w1, gt
    3780:	fcmp	s19, s5
    3784:	scvtf	d20, w1
    3788:	fcvt	h4, d20
    378c:	umov	w1, v4.h[0]
    3790:	bfxil	w2, w1, #0, #15
    3794:	cset	w1, gt
    3798:	fcmp	s22, s22
    379c:	scvtf	d19, w1
    37a0:	dup	v4.4h, w2
    37a4:	umov	w2, v6.h[0]
    37a8:	fcvt	h6, d19
    37ac:	umov	w1, v6.h[0]
    37b0:	bfxil	w2, w1, #0, #15
    37b4:	dup	v6.4h, w2
    37b8:	b.vc	37cc <__powitf2@@GCC_4.0.0+0x198>
    37bc:	umov	w1, v2.h[0]
    37c0:	movi	v2.4h, #0x0
    37c4:	tbz	w1, #15, 37cc <__powitf2@@GCC_4.0.0+0x198>
    37c8:	movi	v2.4h, #0x80, lsl #8
    37cc:	fcmp	s21, s21
    37d0:	b.vc	37e4 <__powitf2@@GCC_4.0.0+0x1b0>
    37d4:	umov	w1, v3.h[0]
    37d8:	movi	v3.4h, #0x0
    37dc:	tbz	w1, #15, 37e4 <__powitf2@@GCC_4.0.0+0x1b0>
    37e0:	movi	v3.4h, #0x80, lsl #8
    37e4:	fcvt	s22, h2
    37e8:	fcvt	s21, h3
    37ec:	fabs	s20, s22
    37f0:	fabs	s19, s21
    37f4:	fcvt	h20, s20
    37f8:	fcvt	h19, s19
    37fc:	fcvt	s20, h20
    3800:	fcvt	s19, h19
    3804:	fcmp	s20, s5
    3808:	b.gt	3814 <__powitf2@@GCC_4.0.0+0x1e0>
    380c:	fcmp	s19, s5
    3810:	b.le	38d0 <__powitf2@@GCC_4.0.0+0x29c>
    3814:	fcmp	s20, s5
    3818:	umov	w1, v2.h[0]
    381c:	cset	w0, gt
    3820:	fcmp	s19, s5
    3824:	scvtf	d0, w0
    3828:	fcvt	h0, d0
    382c:	umov	w0, v0.h[0]
    3830:	bfxil	w1, w0, #0, #15
    3834:	cset	w0, gt
    3838:	scvtf	d0, w0
    383c:	dup	v2.4h, w1
    3840:	umov	w1, v3.h[0]
    3844:	fcvt	h0, d0
    3848:	umov	w0, v0.h[0]
    384c:	fcvt	s0, h4
    3850:	fcmp	s0, s0
    3854:	bfxil	w1, w0, #0, #15
    3858:	dup	v3.4h, w1
    385c:	b.vc	3870 <__powitf2@@GCC_4.0.0+0x23c>
    3860:	umov	w0, v4.h[0]
    3864:	movi	v4.4h, #0x0
    3868:	tbz	w0, #15, 3870 <__powitf2@@GCC_4.0.0+0x23c>
    386c:	movi	v4.4h, #0x80, lsl #8
    3870:	fcvt	s0, h6
    3874:	fcmp	s0, s0
    3878:	b.vc	388c <__powitf2@@GCC_4.0.0+0x258>
    387c:	umov	w0, v6.h[0]
    3880:	movi	v6.4h, #0x0
    3884:	tbz	w0, #15, 388c <__powitf2@@GCC_4.0.0+0x258>
    3888:	movi	v6.4h, #0x80, lsl #8
    388c:	fcvt	s1, h6
    3890:	fcvt	s3, h3
    3894:	fcvt	s4, h4
    3898:	fcvt	s2, h2
    389c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    38a0:	fmul	s0, s1, s3
    38a4:	ldr	s5, [x0, #3044]
    38a8:	fnmsub	s0, s4, s2, s0
    38ac:	fmul	s2, s2, s1
    38b0:	fmadd	s1, s4, s3, s2
    38b4:	fmul	s0, s0, s5
    38b8:	fmul	s1, s1, s5
    38bc:	fcvt	h0, s0
    38c0:	fcvt	h1, s1
    38c4:	ret
    38c8:	mov	w0, #0x0                   	// #0
    38cc:	b	37e4 <__powitf2@@GCC_4.0.0+0x1b0>
    38d0:	cbnz	w0, 388c <__powitf2@@GCC_4.0.0+0x258>
    38d4:	fabs	s18, s18
    38d8:	fcvt	h18, s18
    38dc:	fcvt	s18, h18
    38e0:	fcmp	s18, s5
    38e4:	b.gt	3924 <__powitf2@@GCC_4.0.0+0x2f0>
    38e8:	fabs	s17, s17
    38ec:	fcvt	h17, s17
    38f0:	fcvt	s17, h17
    38f4:	fcmp	s17, s5
    38f8:	b.gt	3924 <__powitf2@@GCC_4.0.0+0x2f0>
    38fc:	fabs	s16, s16
    3900:	fcvt	h16, s16
    3904:	fcvt	s16, h16
    3908:	fcmp	s16, s5
    390c:	b.gt	3924 <__powitf2@@GCC_4.0.0+0x2f0>
    3910:	fabs	s7, s7
    3914:	fcvt	h7, s7
    3918:	fcvt	s7, h7
    391c:	fcmp	s7, s5
    3920:	b.le	38c4 <__powitf2@@GCC_4.0.0+0x290>
    3924:	fcvt	s0, h4
    3928:	fcmp	s0, s0
    392c:	b.vc	3940 <__powitf2@@GCC_4.0.0+0x30c>
    3930:	umov	w0, v4.h[0]
    3934:	movi	v4.4h, #0x0
    3938:	tbz	w0, #15, 3940 <__powitf2@@GCC_4.0.0+0x30c>
    393c:	movi	v4.4h, #0x80, lsl #8
    3940:	fcvt	s0, h6
    3944:	fcmp	s0, s0
    3948:	b.vc	395c <__powitf2@@GCC_4.0.0+0x328>
    394c:	umov	w0, v6.h[0]
    3950:	movi	v6.4h, #0x0
    3954:	tbz	w0, #15, 395c <__powitf2@@GCC_4.0.0+0x328>
    3958:	movi	v6.4h, #0x80, lsl #8
    395c:	fcmp	s22, s22
    3960:	b.vc	3974 <__powitf2@@GCC_4.0.0+0x340>
    3964:	umov	w0, v2.h[0]
    3968:	movi	v2.4h, #0x0
    396c:	tbz	w0, #15, 3974 <__powitf2@@GCC_4.0.0+0x340>
    3970:	movi	v2.4h, #0x80, lsl #8
    3974:	fcmp	s21, s21
    3978:	b.vc	388c <__powitf2@@GCC_4.0.0+0x258>
    397c:	umov	w0, v3.h[0]
    3980:	movi	v3.4h, #0x0
    3984:	tbz	w0, #15, 388c <__powitf2@@GCC_4.0.0+0x258>
    3988:	movi	v3.4h, #0x80, lsl #8
    398c:	b	388c <__powitf2@@GCC_4.0.0+0x258>

0000000000003990 <__mulsc3@@GCC_4.0.0>:
    3990:	fmul	s17, s1, s3
    3994:	fmul	s18, s0, s2
    3998:	fmul	s16, s0, s3
    399c:	fmov	s5, s0
    39a0:	fmul	s7, s2, s1
    39a4:	fmov	s4, s1
    39a8:	fsub	s0, s18, s17
    39ac:	fadd	s1, s16, s7
    39b0:	fcmp	s0, s0
    39b4:	cset	w0, vs
    39b8:	fcmp	s1, s1
    39bc:	cset	w1, vs
    39c0:	ands	w0, w0, w1
    39c4:	b.eq	3ab0 <__mulsc3@@GCC_4.0.0+0x120>  // b.none
    39c8:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    39cc:	fabs	s19, s5
    39d0:	fabs	s21, s4
    39d4:	ldr	s6, [x1, #3048]
    39d8:	fcmp	s19, s6
    39dc:	b.gt	39e8 <__mulsc3@@GCC_4.0.0+0x58>
    39e0:	fcmp	s21, s6
    39e4:	b.le	3ab4 <__mulsc3@@GCC_4.0.0+0x124>
    39e8:	fcmp	s19, s6
    39ec:	movi	v19.2s, #0x80, lsl #24
    39f0:	cset	w1, gt
    39f4:	fcmp	s21, s6
    39f8:	scvtf	s20, w1
    39fc:	cset	w1, gt
    3a00:	fcmp	s2, s2
    3a04:	bif	v5.8b, v20.8b, v19.8b
    3a08:	scvtf	s20, w1
    3a0c:	bif	v4.8b, v20.8b, v19.8b
    3a10:	b.vc	3a1c <__mulsc3@@GCC_4.0.0+0x8c>
    3a14:	movi	v20.2s, #0x0
    3a18:	bif	v2.8b, v20.8b, v19.8b
    3a1c:	fcmp	s3, s3
    3a20:	b.vc	3a30 <__mulsc3@@GCC_4.0.0+0xa0>
    3a24:	movi	v19.2s, #0x0
    3a28:	movi	v20.2s, #0x80, lsl #24
    3a2c:	bif	v3.8b, v19.8b, v20.8b
    3a30:	fabs	s20, s2
    3a34:	fabs	s19, s3
    3a38:	fcmp	s20, s6
    3a3c:	b.gt	3a48 <__mulsc3@@GCC_4.0.0+0xb8>
    3a40:	fcmp	s19, s6
    3a44:	b.le	3abc <__mulsc3@@GCC_4.0.0+0x12c>
    3a48:	fcmp	s20, s6
    3a4c:	movi	v0.2s, #0x80, lsl #24
    3a50:	cset	w0, gt
    3a54:	fcmp	s19, s6
    3a58:	scvtf	s1, w0
    3a5c:	cset	w0, gt
    3a60:	fcmp	s5, s5
    3a64:	bif	v2.8b, v1.8b, v0.8b
    3a68:	scvtf	s1, w0
    3a6c:	bif	v3.8b, v1.8b, v0.8b
    3a70:	b.vc	3a7c <__mulsc3@@GCC_4.0.0+0xec>
    3a74:	movi	v1.2s, #0x0
    3a78:	bif	v5.8b, v1.8b, v0.8b
    3a7c:	fcmp	s4, s4
    3a80:	b.vc	3a90 <__mulsc3@@GCC_4.0.0+0x100>
    3a84:	movi	v0.2s, #0x0
    3a88:	movi	v1.2s, #0x80, lsl #24
    3a8c:	bif	v4.8b, v0.8b, v1.8b
    3a90:	fmul	s0, s4, s3
    3a94:	fmul	s4, s4, s2
    3a98:	fnmsub	s0, s5, s2, s0
    3a9c:	fmadd	s1, s5, s3, s4
    3aa0:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3aa4:	ldr	s6, [x0, #3044]
    3aa8:	fmul	s0, s0, s6
    3aac:	fmul	s1, s1, s6
    3ab0:	ret
    3ab4:	mov	w0, #0x0                   	// #0
    3ab8:	b	3a30 <__mulsc3@@GCC_4.0.0+0xa0>
    3abc:	cbnz	w0, 3a90 <__mulsc3@@GCC_4.0.0+0x100>
    3ac0:	fabs	s18, s18
    3ac4:	fcmp	s18, s6
    3ac8:	b.gt	3af0 <__mulsc3@@GCC_4.0.0+0x160>
    3acc:	fabs	s17, s17
    3ad0:	fcmp	s17, s6
    3ad4:	b.gt	3af0 <__mulsc3@@GCC_4.0.0+0x160>
    3ad8:	fabs	s16, s16
    3adc:	fcmp	s16, s6
    3ae0:	b.gt	3af0 <__mulsc3@@GCC_4.0.0+0x160>
    3ae4:	fabs	s7, s7
    3ae8:	fcmp	s7, s6
    3aec:	b.le	3ab0 <__mulsc3@@GCC_4.0.0+0x120>
    3af0:	fcmp	s5, s5
    3af4:	b.vc	3b04 <__mulsc3@@GCC_4.0.0+0x174>
    3af8:	movi	v0.2s, #0x0
    3afc:	movi	v1.2s, #0x80, lsl #24
    3b00:	bif	v5.8b, v0.8b, v1.8b
    3b04:	fcmp	s4, s4
    3b08:	b.vc	3b18 <__mulsc3@@GCC_4.0.0+0x188>
    3b0c:	movi	v0.2s, #0x0
    3b10:	movi	v1.2s, #0x80, lsl #24
    3b14:	bif	v4.8b, v0.8b, v1.8b
    3b18:	fcmp	s2, s2
    3b1c:	b.vc	3b2c <__mulsc3@@GCC_4.0.0+0x19c>
    3b20:	movi	v0.2s, #0x0
    3b24:	movi	v1.2s, #0x80, lsl #24
    3b28:	bif	v2.8b, v0.8b, v1.8b
    3b2c:	fcmp	s3, s3
    3b30:	b.vc	3a90 <__mulsc3@@GCC_4.0.0+0x100>
    3b34:	movi	v0.2s, #0x0
    3b38:	movi	v1.2s, #0x80, lsl #24
    3b3c:	bif	v3.8b, v0.8b, v1.8b
    3b40:	b	3a90 <__mulsc3@@GCC_4.0.0+0x100>

0000000000003b44 <__muldc3@@GCC_4.0.0>:
    3b44:	fmul	d17, d1, d3
    3b48:	fmul	d18, d0, d2
    3b4c:	fmul	d16, d0, d3
    3b50:	fmov	d5, d0
    3b54:	fmul	d7, d2, d1
    3b58:	fmov	d4, d1
    3b5c:	fsub	d0, d18, d17
    3b60:	fadd	d1, d16, d7
    3b64:	fcmp	d0, d0
    3b68:	cset	w0, vs
    3b6c:	fcmp	d1, d1
    3b70:	cset	w1, vs
    3b74:	ands	w0, w0, w1
    3b78:	b.eq	3c74 <__muldc3@@GCC_4.0.0+0x130>  // b.none
    3b7c:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3b80:	fabs	d19, d5
    3b84:	fabs	d21, d4
    3b88:	ldr	d6, [x1, #3056]
    3b8c:	fcmp	d19, d6
    3b90:	b.gt	3b9c <__muldc3@@GCC_4.0.0+0x58>
    3b94:	fcmp	d21, d6
    3b98:	b.le	3c78 <__muldc3@@GCC_4.0.0+0x134>
    3b9c:	fcmp	d19, d6
    3ba0:	cset	w1, gt
    3ba4:	fcmp	d21, d6
    3ba8:	scvtf	d20, w1
    3bac:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    3bb0:	fmov	d19, x1
    3bb4:	cset	w1, gt
    3bb8:	fcmp	d2, d2
    3bbc:	bif	v5.8b, v20.8b, v19.8b
    3bc0:	scvtf	d20, w1
    3bc4:	bif	v4.8b, v20.8b, v19.8b
    3bc8:	b.vc	3bd4 <__muldc3@@GCC_4.0.0+0x90>
    3bcc:	movi	d20, #0x0
    3bd0:	bif	v2.8b, v20.8b, v19.8b
    3bd4:	fcmp	d3, d3
    3bd8:	b.vc	3bec <__muldc3@@GCC_4.0.0+0xa8>
    3bdc:	movi	d19, #0x0
    3be0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    3be4:	fmov	d20, x1
    3be8:	bif	v3.8b, v19.8b, v20.8b
    3bec:	fabs	d20, d2
    3bf0:	fabs	d19, d3
    3bf4:	fcmp	d20, d6
    3bf8:	b.gt	3c04 <__muldc3@@GCC_4.0.0+0xc0>
    3bfc:	fcmp	d19, d6
    3c00:	b.le	3c80 <__muldc3@@GCC_4.0.0+0x13c>
    3c04:	fcmp	d20, d6
    3c08:	cset	w0, gt
    3c0c:	fcmp	d19, d6
    3c10:	scvtf	d1, w0
    3c14:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3c18:	fmov	d0, x0
    3c1c:	cset	w0, gt
    3c20:	fcmp	d5, d5
    3c24:	bif	v2.8b, v1.8b, v0.8b
    3c28:	scvtf	d1, w0
    3c2c:	bif	v3.8b, v1.8b, v0.8b
    3c30:	b.vc	3c3c <__muldc3@@GCC_4.0.0+0xf8>
    3c34:	movi	d1, #0x0
    3c38:	bif	v5.8b, v1.8b, v0.8b
    3c3c:	fcmp	d4, d4
    3c40:	b.vc	3c54 <__muldc3@@GCC_4.0.0+0x110>
    3c44:	movi	d0, #0x0
    3c48:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3c4c:	fmov	d1, x0
    3c50:	bif	v4.8b, v0.8b, v1.8b
    3c54:	fmul	d0, d4, d3
    3c58:	fmul	d4, d4, d2
    3c5c:	fnmsub	d0, d5, d2, d0
    3c60:	fmadd	d1, d5, d3, d4
    3c64:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3c68:	ldr	d6, [x0, #3064]
    3c6c:	fmul	d0, d0, d6
    3c70:	fmul	d1, d1, d6
    3c74:	ret
    3c78:	mov	w0, #0x0                   	// #0
    3c7c:	b	3bec <__muldc3@@GCC_4.0.0+0xa8>
    3c80:	cbnz	w0, 3c54 <__muldc3@@GCC_4.0.0+0x110>
    3c84:	fabs	d18, d18
    3c88:	fcmp	d18, d6
    3c8c:	b.gt	3cb4 <__muldc3@@GCC_4.0.0+0x170>
    3c90:	fabs	d17, d17
    3c94:	fcmp	d17, d6
    3c98:	b.gt	3cb4 <__muldc3@@GCC_4.0.0+0x170>
    3c9c:	fabs	d16, d16
    3ca0:	fcmp	d16, d6
    3ca4:	b.gt	3cb4 <__muldc3@@GCC_4.0.0+0x170>
    3ca8:	fabs	d7, d7
    3cac:	fcmp	d7, d6
    3cb0:	b.le	3c74 <__muldc3@@GCC_4.0.0+0x130>
    3cb4:	fcmp	d5, d5
    3cb8:	b.vc	3ccc <__muldc3@@GCC_4.0.0+0x188>
    3cbc:	movi	d0, #0x0
    3cc0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3cc4:	fmov	d1, x0
    3cc8:	bif	v5.8b, v0.8b, v1.8b
    3ccc:	fcmp	d4, d4
    3cd0:	b.vc	3ce4 <__muldc3@@GCC_4.0.0+0x1a0>
    3cd4:	movi	d0, #0x0
    3cd8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3cdc:	fmov	d1, x0
    3ce0:	bif	v4.8b, v0.8b, v1.8b
    3ce4:	fcmp	d2, d2
    3ce8:	b.vc	3cfc <__muldc3@@GCC_4.0.0+0x1b8>
    3cec:	movi	d0, #0x0
    3cf0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3cf4:	fmov	d1, x0
    3cf8:	bif	v2.8b, v0.8b, v1.8b
    3cfc:	fcmp	d3, d3
    3d00:	b.vc	3c54 <__muldc3@@GCC_4.0.0+0x110>
    3d04:	movi	d0, #0x0
    3d08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3d0c:	fmov	d1, x0
    3d10:	bif	v3.8b, v0.8b, v1.8b
    3d14:	b	3c54 <__muldc3@@GCC_4.0.0+0x110>

0000000000003d18 <__multc3@@GCC_4.0.0>:
    3d18:	stp	x29, x30, [sp, #-224]!
    3d1c:	mov	x29, sp
    3d20:	str	q0, [sp, #96]
    3d24:	stp	x21, x22, [sp, #32]
    3d28:	stp	x25, x26, [sp, #64]
    3d2c:	ldp	x21, x25, [sp, #96]
    3d30:	str	q1, [sp, #96]
    3d34:	stp	x19, x20, [sp, #16]
    3d38:	stp	x23, x24, [sp, #48]
    3d3c:	ldp	x19, x23, [sp, #96]
    3d40:	str	q2, [sp, #96]
    3d44:	ldp	x20, x24, [sp, #96]
    3d48:	str	q3, [sp, #96]
    3d4c:	ldp	x22, x26, [sp, #96]
    3d50:	stp	x20, x24, [sp, #96]
    3d54:	ldr	q1, [sp, #96]
    3d58:	stp	x21, x25, [sp, #96]
    3d5c:	stp	x27, x28, [sp, #80]
    3d60:	ldr	q0, [sp, #96]
    3d64:	bl	2b40 <__multf3@plt>
    3d68:	str	q0, [sp, #96]
    3d6c:	ldp	x1, x0, [sp, #96]
    3d70:	stp	x22, x26, [sp, #96]
    3d74:	ldr	q1, [sp, #96]
    3d78:	stp	x19, x23, [sp, #96]
    3d7c:	ldr	q0, [sp, #96]
    3d80:	str	x1, [sp, #128]
    3d84:	str	x0, [sp, #184]
    3d88:	bl	2b40 <__multf3@plt>
    3d8c:	str	q0, [sp, #96]
    3d90:	ldp	x1, x0, [sp, #96]
    3d94:	stp	x22, x26, [sp, #96]
    3d98:	ldr	q1, [sp, #96]
    3d9c:	stp	x21, x25, [sp, #96]
    3da0:	ldr	q0, [sp, #96]
    3da4:	str	x1, [sp, #144]
    3da8:	str	x0, [sp, #192]
    3dac:	bl	2b40 <__multf3@plt>
    3db0:	str	q0, [sp, #96]
    3db4:	ldp	x1, x0, [sp, #96]
    3db8:	stp	x19, x23, [sp, #96]
    3dbc:	ldr	q1, [sp, #96]
    3dc0:	stp	x20, x24, [sp, #96]
    3dc4:	ldr	q0, [sp, #96]
    3dc8:	str	x1, [sp, #152]
    3dcc:	str	x0, [sp, #200]
    3dd0:	bl	2b40 <__multf3@plt>
    3dd4:	str	q0, [sp, #96]
    3dd8:	ldp	x1, x0, [sp, #96]
    3ddc:	str	x0, [sp, #208]
    3de0:	ldr	x0, [sp, #144]
    3de4:	str	x0, [sp, #96]
    3de8:	ldr	x0, [sp, #192]
    3dec:	str	x0, [sp, #104]
    3df0:	ldr	x0, [sp, #128]
    3df4:	str	x1, [sp, #176]
    3df8:	ldr	q1, [sp, #96]
    3dfc:	str	x0, [sp, #96]
    3e00:	ldr	x0, [sp, #184]
    3e04:	str	x0, [sp, #104]
    3e08:	ldr	q0, [sp, #96]
    3e0c:	bl	2dd0 <__subtf3@plt>
    3e10:	str	q0, [sp, #96]
    3e14:	ldr	x0, [sp, #176]
    3e18:	str	x0, [sp, #112]
    3e1c:	ldr	x0, [sp, #208]
    3e20:	str	x0, [sp, #120]
    3e24:	ldr	x0, [sp, #152]
    3e28:	ldr	q1, [sp, #112]
    3e2c:	str	x0, [sp, #112]
    3e30:	ldr	x0, [sp, #200]
    3e34:	str	x0, [sp, #120]
    3e38:	ldr	q0, [sp, #112]
    3e3c:	bl	2c60 <__addtf3@plt>
    3e40:	str	q0, [sp, #112]
    3e44:	ldr	q1, [sp, #96]
    3e48:	mov	v0.16b, v1.16b
    3e4c:	bl	2d80 <__unordtf2@plt>
    3e50:	cmp	w0, #0x0
    3e54:	ldr	q1, [sp, #112]
    3e58:	cset	w27, ne  // ne = any
    3e5c:	mov	v0.16b, v1.16b
    3e60:	bl	2d80 <__unordtf2@plt>
    3e64:	cmp	w0, #0x0
    3e68:	cset	w0, ne  // ne = any
    3e6c:	ands	w0, w0, w27
    3e70:	str	w0, [sp, #216]
    3e74:	b.eq	4228 <__multc3@@GCC_4.0.0+0x510>  // b.none
    3e78:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3e7c:	add	x0, x0, #0xc00
    3e80:	and	x28, x25, #0x7fffffffffffffff
    3e84:	stp	x21, x28, [sp, #160]
    3e88:	and	x27, x23, #0x7fffffffffffffff
    3e8c:	ldr	q1, [x0]
    3e90:	ldr	q0, [sp, #160]
    3e94:	bl	2d80 <__unordtf2@plt>
    3e98:	cbnz	w0, 3ebc <__multc3@@GCC_4.0.0+0x1a4>
    3e9c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3ea0:	add	x0, x0, #0xc00
    3ea4:	stp	x21, x28, [sp, #160]
    3ea8:	ldr	q1, [x0]
    3eac:	ldr	q0, [sp, #160]
    3eb0:	bl	2c00 <__letf2@plt>
    3eb4:	cmp	w0, #0x0
    3eb8:	b.gt	3ef8 <__multc3@@GCC_4.0.0+0x1e0>
    3ebc:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3ec0:	add	x0, x0, #0xc00
    3ec4:	stp	x19, x27, [sp, #160]
    3ec8:	ldr	q1, [x0]
    3ecc:	ldr	q0, [sp, #160]
    3ed0:	bl	2d80 <__unordtf2@plt>
    3ed4:	cbnz	w0, 424c <__multc3@@GCC_4.0.0+0x534>
    3ed8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3edc:	add	x0, x0, #0xc00
    3ee0:	stp	x19, x27, [sp, #160]
    3ee4:	ldr	q1, [x0]
    3ee8:	ldr	q0, [sp, #160]
    3eec:	bl	2c00 <__letf2@plt>
    3ef0:	cmp	w0, #0x0
    3ef4:	b.le	424c <__multc3@@GCC_4.0.0+0x534>
    3ef8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3efc:	add	x0, x0, #0xc00
    3f00:	stp	x21, x28, [sp, #160]
    3f04:	mov	w1, #0x1                   	// #1
    3f08:	ldr	q1, [x0]
    3f0c:	ldr	q0, [sp, #160]
    3f10:	str	w1, [sp, #220]
    3f14:	bl	2d80 <__unordtf2@plt>
    3f18:	ldr	w1, [sp, #220]
    3f1c:	cbnz	w0, 3f40 <__multc3@@GCC_4.0.0+0x228>
    3f20:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3f24:	add	x0, x0, #0xc00
    3f28:	stp	x21, x28, [sp, #160]
    3f2c:	ldr	q1, [x0]
    3f30:	ldr	q0, [sp, #160]
    3f34:	bl	2c00 <__letf2@plt>
    3f38:	cmp	w0, #0x0
    3f3c:	cset	w1, le
    3f40:	eor	w0, w1, #0x1
    3f44:	mov	w28, #0x1                   	// #1
    3f48:	and	w0, w0, #0x1
    3f4c:	bl	2dc0 <__floatsitf@plt>
    3f50:	str	q0, [sp, #160]
    3f54:	ldp	x21, x0, [sp, #160]
    3f58:	stp	x19, x27, [sp, #160]
    3f5c:	ldr	q0, [sp, #160]
    3f60:	bfxil	x25, x0, #0, #63
    3f64:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3f68:	add	x0, x0, #0xc00
    3f6c:	ldr	q1, [x0]
    3f70:	bl	2d80 <__unordtf2@plt>
    3f74:	cbnz	w0, 3f98 <__multc3@@GCC_4.0.0+0x280>
    3f78:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    3f7c:	add	x0, x0, #0xc00
    3f80:	stp	x19, x27, [sp, #160]
    3f84:	ldr	q1, [x0]
    3f88:	ldr	q0, [sp, #160]
    3f8c:	bl	2c00 <__letf2@plt>
    3f90:	cmp	w0, #0x0
    3f94:	cset	w28, le
    3f98:	eor	w0, w28, #0x1
    3f9c:	and	w0, w0, #0x1
    3fa0:	bl	2dc0 <__floatsitf@plt>
    3fa4:	str	q0, [sp, #160]
    3fa8:	ldp	x19, x0, [sp, #160]
    3fac:	stp	x20, x24, [sp, #160]
    3fb0:	ldr	q1, [sp, #160]
    3fb4:	bfxil	x23, x0, #0, #63
    3fb8:	mov	v0.16b, v1.16b
    3fbc:	bl	2d80 <__unordtf2@plt>
    3fc0:	cbz	w0, 3fd8 <__multc3@@GCC_4.0.0+0x2c0>
    3fc4:	mov	x20, #0x0                   	// #0
    3fc8:	mov	x0, #0x0                   	// #0
    3fcc:	tbz	x24, #63, 3fd4 <__multc3@@GCC_4.0.0+0x2bc>
    3fd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3fd4:	mov	x24, x0
    3fd8:	stp	x22, x26, [sp, #160]
    3fdc:	ldr	q1, [sp, #160]
    3fe0:	mov	v0.16b, v1.16b
    3fe4:	bl	2d80 <__unordtf2@plt>
    3fe8:	cbz	w0, 4000 <__multc3@@GCC_4.0.0+0x2e8>
    3fec:	mov	x22, #0x0                   	// #0
    3ff0:	mov	x0, #0x0                   	// #0
    3ff4:	tbz	x26, #63, 3ffc <__multc3@@GCC_4.0.0+0x2e4>
    3ff8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3ffc:	mov	x26, x0
    4000:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4004:	add	x0, x0, #0xc00
    4008:	and	x28, x24, #0x7fffffffffffffff
    400c:	stp	x20, x28, [sp, #160]
    4010:	and	x27, x26, #0x7fffffffffffffff
    4014:	ldr	q1, [x0]
    4018:	ldr	q0, [sp, #160]
    401c:	bl	2d80 <__unordtf2@plt>
    4020:	cbnz	w0, 4044 <__multc3@@GCC_4.0.0+0x32c>
    4024:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4028:	add	x0, x0, #0xc00
    402c:	stp	x20, x28, [sp, #160]
    4030:	ldr	q1, [x0]
    4034:	ldr	q0, [sp, #160]
    4038:	bl	2c00 <__letf2@plt>
    403c:	cmp	w0, #0x0
    4040:	b.gt	4080 <__multc3@@GCC_4.0.0+0x368>
    4044:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4048:	add	x0, x0, #0xc00
    404c:	stp	x22, x27, [sp, #160]
    4050:	ldr	q1, [x0]
    4054:	ldr	q0, [sp, #160]
    4058:	bl	2d80 <__unordtf2@plt>
    405c:	cbnz	w0, 4254 <__multc3@@GCC_4.0.0+0x53c>
    4060:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4064:	add	x0, x0, #0xc00
    4068:	stp	x22, x27, [sp, #160]
    406c:	ldr	q1, [x0]
    4070:	ldr	q0, [sp, #160]
    4074:	bl	2c00 <__letf2@plt>
    4078:	cmp	w0, #0x0
    407c:	b.le	4254 <__multc3@@GCC_4.0.0+0x53c>
    4080:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4084:	add	x0, x0, #0xc00
    4088:	stp	x20, x28, [sp, #96]
    408c:	mov	w1, #0x1                   	// #1
    4090:	ldr	q1, [x0]
    4094:	ldr	q0, [sp, #96]
    4098:	str	w1, [sp, #112]
    409c:	bl	2d80 <__unordtf2@plt>
    40a0:	ldr	w1, [sp, #112]
    40a4:	cbnz	w0, 40c8 <__multc3@@GCC_4.0.0+0x3b0>
    40a8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    40ac:	add	x0, x0, #0xc00
    40b0:	stp	x20, x28, [sp, #96]
    40b4:	ldr	q1, [x0]
    40b8:	ldr	q0, [sp, #96]
    40bc:	bl	2c00 <__letf2@plt>
    40c0:	cmp	w0, #0x0
    40c4:	cset	w1, le
    40c8:	eor	w0, w1, #0x1
    40cc:	mov	w28, #0x1                   	// #1
    40d0:	and	w0, w0, #0x1
    40d4:	bl	2dc0 <__floatsitf@plt>
    40d8:	str	q0, [sp, #96]
    40dc:	ldp	x20, x0, [sp, #96]
    40e0:	stp	x22, x27, [sp, #96]
    40e4:	ldr	q0, [sp, #96]
    40e8:	bfxil	x24, x0, #0, #63
    40ec:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    40f0:	add	x0, x0, #0xc00
    40f4:	ldr	q1, [x0]
    40f8:	bl	2d80 <__unordtf2@plt>
    40fc:	cbnz	w0, 4120 <__multc3@@GCC_4.0.0+0x408>
    4100:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4104:	add	x0, x0, #0xc00
    4108:	stp	x22, x27, [sp, #96]
    410c:	ldr	q1, [x0]
    4110:	ldr	q0, [sp, #96]
    4114:	bl	2c00 <__letf2@plt>
    4118:	cmp	w0, #0x0
    411c:	cset	w28, le
    4120:	eor	w0, w28, #0x1
    4124:	and	w0, w0, #0x1
    4128:	bl	2dc0 <__floatsitf@plt>
    412c:	str	q0, [sp, #96]
    4130:	ldp	x22, x0, [sp, #96]
    4134:	stp	x21, x25, [sp, #96]
    4138:	ldr	q1, [sp, #96]
    413c:	bfxil	x26, x0, #0, #63
    4140:	mov	v0.16b, v1.16b
    4144:	bl	2d80 <__unordtf2@plt>
    4148:	cbz	w0, 4160 <__multc3@@GCC_4.0.0+0x448>
    414c:	mov	x21, #0x0                   	// #0
    4150:	mov	x0, #0x0                   	// #0
    4154:	tbz	x25, #63, 415c <__multc3@@GCC_4.0.0+0x444>
    4158:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    415c:	mov	x25, x0
    4160:	stp	x19, x23, [sp, #96]
    4164:	ldr	q1, [sp, #96]
    4168:	mov	v0.16b, v1.16b
    416c:	bl	2d80 <__unordtf2@plt>
    4170:	cbz	w0, 4188 <__multc3@@GCC_4.0.0+0x470>
    4174:	mov	x19, #0x0                   	// #0
    4178:	mov	x0, #0x0                   	// #0
    417c:	tbz	x23, #63, 4184 <__multc3@@GCC_4.0.0+0x46c>
    4180:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4184:	mov	x23, x0
    4188:	stp	x20, x24, [sp, #96]
    418c:	ldr	q1, [sp, #96]
    4190:	stp	x21, x25, [sp, #96]
    4194:	ldr	q0, [sp, #96]
    4198:	bl	2b40 <__multf3@plt>
    419c:	stp	x22, x26, [sp, #96]
    41a0:	ldr	q1, [sp, #96]
    41a4:	stp	x19, x23, [sp, #96]
    41a8:	str	q0, [sp, #112]
    41ac:	ldr	q0, [sp, #96]
    41b0:	bl	2b40 <__multf3@plt>
    41b4:	mov	v1.16b, v0.16b
    41b8:	ldr	q2, [sp, #112]
    41bc:	mov	v0.16b, v2.16b
    41c0:	bl	2dd0 <__subtf3@plt>
    41c4:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    41c8:	add	x0, x0, #0xc10
    41cc:	ldr	q1, [x0]
    41d0:	bl	2b40 <__multf3@plt>
    41d4:	stp	x22, x26, [sp, #112]
    41d8:	ldr	q1, [sp, #112]
    41dc:	stp	x21, x25, [sp, #112]
    41e0:	str	q0, [sp, #96]
    41e4:	ldr	q0, [sp, #112]
    41e8:	bl	2b40 <__multf3@plt>
    41ec:	stp	x20, x24, [sp, #112]
    41f0:	ldr	q1, [sp, #112]
    41f4:	stp	x19, x23, [sp, #112]
    41f8:	str	q0, [sp, #128]
    41fc:	ldr	q0, [sp, #112]
    4200:	bl	2b40 <__multf3@plt>
    4204:	mov	v1.16b, v0.16b
    4208:	ldr	q2, [sp, #128]
    420c:	mov	v0.16b, v2.16b
    4210:	bl	2c60 <__addtf3@plt>
    4214:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4218:	add	x0, x0, #0xc10
    421c:	ldr	q1, [x0]
    4220:	bl	2b40 <__multf3@plt>
    4224:	str	q0, [sp, #112]
    4228:	ldp	x19, x20, [sp, #16]
    422c:	ldp	x21, x22, [sp, #32]
    4230:	ldp	x23, x24, [sp, #48]
    4234:	ldp	x25, x26, [sp, #64]
    4238:	ldp	x27, x28, [sp, #80]
    423c:	ldr	q0, [sp, #96]
    4240:	ldr	q1, [sp, #112]
    4244:	ldp	x29, x30, [sp], #224
    4248:	ret
    424c:	str	wzr, [sp, #216]
    4250:	b	4000 <__multc3@@GCC_4.0.0+0x2e8>
    4254:	ldr	w0, [sp, #216]
    4258:	cbnz	w0, 4188 <__multc3@@GCC_4.0.0+0x470>
    425c:	ldr	x0, [sp, #184]
    4260:	and	x27, x0, #0x7fffffffffffffff
    4264:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4268:	add	x0, x0, #0xc00
    426c:	ldr	q1, [x0]
    4270:	ldr	x0, [sp, #128]
    4274:	stp	x0, x27, [sp, #160]
    4278:	ldr	q0, [sp, #160]
    427c:	bl	2d80 <__unordtf2@plt>
    4280:	cbnz	w0, 42a8 <__multc3@@GCC_4.0.0+0x590>
    4284:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4288:	add	x0, x0, #0xc00
    428c:	ldr	q1, [x0]
    4290:	ldr	x0, [sp, #128]
    4294:	stp	x0, x27, [sp, #160]
    4298:	ldr	q0, [sp, #160]
    429c:	bl	2c00 <__letf2@plt>
    42a0:	cmp	w0, #0x0
    42a4:	b.gt	438c <__multc3@@GCC_4.0.0+0x674>
    42a8:	ldr	x0, [sp, #192]
    42ac:	and	x27, x0, #0x7fffffffffffffff
    42b0:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    42b4:	add	x0, x0, #0xc00
    42b8:	ldr	q1, [x0]
    42bc:	ldr	x0, [sp, #144]
    42c0:	stp	x0, x27, [sp, #128]
    42c4:	ldr	q0, [sp, #128]
    42c8:	bl	2d80 <__unordtf2@plt>
    42cc:	cbnz	w0, 42f4 <__multc3@@GCC_4.0.0+0x5dc>
    42d0:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    42d4:	add	x0, x0, #0xc00
    42d8:	ldr	q1, [x0]
    42dc:	ldr	x0, [sp, #144]
    42e0:	stp	x0, x27, [sp, #128]
    42e4:	ldr	q0, [sp, #128]
    42e8:	bl	2c00 <__letf2@plt>
    42ec:	cmp	w0, #0x0
    42f0:	b.gt	438c <__multc3@@GCC_4.0.0+0x674>
    42f4:	ldr	x0, [sp, #200]
    42f8:	and	x27, x0, #0x7fffffffffffffff
    42fc:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4300:	add	x0, x0, #0xc00
    4304:	ldr	q1, [x0]
    4308:	ldr	x0, [sp, #152]
    430c:	stp	x0, x27, [sp, #128]
    4310:	ldr	q0, [sp, #128]
    4314:	bl	2d80 <__unordtf2@plt>
    4318:	cbnz	w0, 4340 <__multc3@@GCC_4.0.0+0x628>
    431c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4320:	add	x0, x0, #0xc00
    4324:	ldr	q1, [x0]
    4328:	ldr	x0, [sp, #152]
    432c:	stp	x0, x27, [sp, #128]
    4330:	ldr	q0, [sp, #128]
    4334:	bl	2c00 <__letf2@plt>
    4338:	cmp	w0, #0x0
    433c:	b.gt	438c <__multc3@@GCC_4.0.0+0x674>
    4340:	ldr	x0, [sp, #208]
    4344:	and	x27, x0, #0x7fffffffffffffff
    4348:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    434c:	add	x0, x0, #0xc00
    4350:	ldr	q1, [x0]
    4354:	ldr	x0, [sp, #176]
    4358:	stp	x0, x27, [sp, #128]
    435c:	ldr	q0, [sp, #128]
    4360:	bl	2d80 <__unordtf2@plt>
    4364:	cbnz	w0, 4228 <__multc3@@GCC_4.0.0+0x510>
    4368:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    436c:	add	x0, x0, #0xc00
    4370:	ldr	q1, [x0]
    4374:	ldr	x0, [sp, #176]
    4378:	stp	x0, x27, [sp, #128]
    437c:	ldr	q0, [sp, #128]
    4380:	bl	2c00 <__letf2@plt>
    4384:	cmp	w0, #0x0
    4388:	b.le	4228 <__multc3@@GCC_4.0.0+0x510>
    438c:	stp	x21, x25, [sp, #96]
    4390:	ldr	q1, [sp, #96]
    4394:	mov	v0.16b, v1.16b
    4398:	bl	2d80 <__unordtf2@plt>
    439c:	cbz	w0, 43b4 <__multc3@@GCC_4.0.0+0x69c>
    43a0:	mov	x21, #0x0                   	// #0
    43a4:	mov	x0, #0x0                   	// #0
    43a8:	tbz	x25, #63, 43b0 <__multc3@@GCC_4.0.0+0x698>
    43ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    43b0:	mov	x25, x0
    43b4:	stp	x19, x23, [sp, #96]
    43b8:	ldr	q1, [sp, #96]
    43bc:	mov	v0.16b, v1.16b
    43c0:	bl	2d80 <__unordtf2@plt>
    43c4:	cbz	w0, 43dc <__multc3@@GCC_4.0.0+0x6c4>
    43c8:	mov	x19, #0x0                   	// #0
    43cc:	mov	x0, #0x0                   	// #0
    43d0:	tbz	x23, #63, 43d8 <__multc3@@GCC_4.0.0+0x6c0>
    43d4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    43d8:	mov	x23, x0
    43dc:	stp	x20, x24, [sp, #96]
    43e0:	ldr	q1, [sp, #96]
    43e4:	mov	v0.16b, v1.16b
    43e8:	bl	2d80 <__unordtf2@plt>
    43ec:	cbz	w0, 4404 <__multc3@@GCC_4.0.0+0x6ec>
    43f0:	mov	x20, #0x0                   	// #0
    43f4:	mov	x0, #0x0                   	// #0
    43f8:	tbz	x24, #63, 4400 <__multc3@@GCC_4.0.0+0x6e8>
    43fc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4400:	mov	x24, x0
    4404:	stp	x22, x26, [sp, #96]
    4408:	ldr	q1, [sp, #96]
    440c:	mov	v0.16b, v1.16b
    4410:	bl	2d80 <__unordtf2@plt>
    4414:	cbz	w0, 4188 <__multc3@@GCC_4.0.0+0x470>
    4418:	mov	x22, #0x0                   	// #0
    441c:	mov	x0, #0x0                   	// #0
    4420:	tbz	x26, #63, 4428 <__multc3@@GCC_4.0.0+0x710>
    4424:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4428:	mov	x26, x0
    442c:	b	4188 <__multc3@@GCC_4.0.0+0x470>
    4430:	fcvt	s19, h2
    4434:	fcvt	s20, h3
    4438:	mov	v5.h[0], v0.h[0]
    443c:	mov	v7.h[0], v1.h[0]
    4440:	fcvt	s6, h1
    4444:	fcvt	s16, h0
    4448:	fabs	s18, s19
    444c:	fabs	s17, s20
    4450:	fcvt	h18, s18
    4454:	fcvt	h17, s17
    4458:	fcvt	s18, h18
    445c:	fcvt	s17, h17
    4460:	fcmpe	s18, s17
    4464:	b.pl	4508 <__multc3@@GCC_4.0.0+0x7f0>  // b.nfrst
    4468:	fdiv	s4, s19, s20
    446c:	fcvt	h4, s4
    4470:	fcvt	s4, h4
    4474:	fmadd	s1, s4, s19, s20
    4478:	fmadd	s0, s4, s16, s6
    447c:	fnmsub	s4, s4, s6, s16
    4480:	fcvt	h1, s1
    4484:	fcvt	s1, h1
    4488:	fdiv	s0, s0, s1
    448c:	fcvt	h0, s0
    4490:	fdiv	s4, s4, s1
    4494:	fcvt	h1, s4
    4498:	fcvt	s4, h0
    449c:	fcmp	s4, s4
    44a0:	fcvt	s4, h1
    44a4:	cset	w1, vs
    44a8:	fcmp	s4, s4
    44ac:	cset	w0, vs
    44b0:	tst	w1, w0
    44b4:	b.eq	4504 <__multc3@@GCC_4.0.0+0x7ec>  // b.none
    44b8:	fcmp	s19, #0.0
    44bc:	b.ne	4534 <__multc3@@GCC_4.0.0+0x81c>  // b.any
    44c0:	fcmp	s20, #0.0
    44c4:	b.ne	4534 <__multc3@@GCC_4.0.0+0x81c>  // b.any
    44c8:	fcmp	s16, s16
    44cc:	cset	w0, vc
    44d0:	fcmp	s6, s6
    44d4:	cset	w1, vc
    44d8:	orr	w0, w0, w1
    44dc:	cbz	w0, 4534 <__multc3@@GCC_4.0.0+0x81c>
    44e0:	umov	w0, v2.h[0]
    44e4:	movi	v1.4h, #0x7c, lsl #8
    44e8:	tbz	w0, #15, 44f0 <__multc3@@GCC_4.0.0+0x7d8>
    44ec:	movi	v1.4h, #0xfc, lsl #8
    44f0:	fcvt	s1, h1
    44f4:	fmul	s0, s1, s16
    44f8:	fmul	s1, s1, s6
    44fc:	fcvt	h0, s0
    4500:	fcvt	h1, s1
    4504:	ret
    4508:	fdiv	s4, s20, s19
    450c:	fcvt	h4, s4
    4510:	fcvt	s4, h4
    4514:	fmadd	s1, s4, s20, s19
    4518:	fmadd	s0, s4, s6, s16
    451c:	fmsub	s4, s4, s16, s6
    4520:	fcvt	h1, s1
    4524:	fcvt	s1, h1
    4528:	fdiv	s0, s0, s1
    452c:	fcvt	h0, s0
    4530:	b	4490 <__multc3@@GCC_4.0.0+0x778>
    4534:	fabs	s21, s16
    4538:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    453c:	ldr	s4, [x0, #3040]
    4540:	fcvt	h21, s21
    4544:	fcvt	s21, h21
    4548:	fcmp	s21, s4
    454c:	b.gt	4564 <__multc3@@GCC_4.0.0+0x84c>
    4550:	fabs	s22, s6
    4554:	fcvt	h22, s22
    4558:	fcvt	s22, h22
    455c:	fcmp	s22, s4
    4560:	b.le	45f0 <__multc3@@GCC_4.0.0+0x8d8>
    4564:	fcmp	s18, s4
    4568:	b.hi	45f0 <__multc3@@GCC_4.0.0+0x8d8>  // b.pmore
    456c:	fcmp	s17, s4
    4570:	b.hi	45f0 <__multc3@@GCC_4.0.0+0x8d8>  // b.pmore
    4574:	fcmp	s21, s4
    4578:	fabs	s1, s6
    457c:	cset	w0, gt
    4580:	fcvt	h1, s1
    4584:	scvtf	d0, w0
    4588:	umov	w0, v5.h[0]
    458c:	fcvt	s1, h1
    4590:	fcvt	h0, d0
    4594:	fcmp	s1, s4
    4598:	umov	w1, v0.h[0]
    459c:	bfxil	w0, w1, #0, #15
    45a0:	dup	v2.4h, w0
    45a4:	cset	w0, gt
    45a8:	scvtf	d0, w0
    45ac:	umov	w0, v7.h[0]
    45b0:	fcvt	s2, h2
    45b4:	fcvt	h0, d0
    45b8:	umov	w1, v0.h[0]
    45bc:	bfxil	w0, w1, #0, #15
    45c0:	dup	v1.4h, w0
    45c4:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    45c8:	ldr	s3, [x0, #3044]
    45cc:	fcvt	s1, h1
    45d0:	fmul	s0, s1, s20
    45d4:	fmadd	s0, s2, s19, s0
    45d8:	fmul	s2, s2, s20
    45dc:	fnmsub	s1, s1, s19, s2
    45e0:	fmul	s0, s0, s3
    45e4:	fmul	s1, s1, s3
    45e8:	fcvt	h0, s0
    45ec:	b	4500 <__multc3@@GCC_4.0.0+0x7e8>
    45f0:	fcmp	s18, s4
    45f4:	b.gt	4600 <__multc3@@GCC_4.0.0+0x8e8>
    45f8:	fcmp	s17, s4
    45fc:	b.le	4504 <__multc3@@GCC_4.0.0+0x7ec>
    4600:	fcmp	s21, s4
    4604:	b.hi	4504 <__multc3@@GCC_4.0.0+0x7ec>  // b.pmore
    4608:	fabs	s5, s6
    460c:	fcvt	h5, s5
    4610:	fcvt	s5, h5
    4614:	fcmp	s5, s4
    4618:	b.hi	4504 <__multc3@@GCC_4.0.0+0x7ec>  // b.pmore
    461c:	fcmp	s18, s4
    4620:	cset	w0, gt
    4624:	fcmp	s17, s4
    4628:	scvtf	d0, w0
    462c:	umov	w0, v2.h[0]
    4630:	fcvt	h0, d0
    4634:	umov	w1, v0.h[0]
    4638:	bfxil	w0, w1, #0, #15
    463c:	dup	v1.4h, w0
    4640:	cset	w0, gt
    4644:	scvtf	d0, w0
    4648:	umov	w0, v3.h[0]
    464c:	movi	d3, #0x0
    4650:	fcvt	s1, h1
    4654:	fcvt	h0, d0
    4658:	umov	w1, v0.h[0]
    465c:	bfxil	w0, w1, #0, #15
    4660:	dup	v2.4h, w0
    4664:	fcvt	s2, h2
    4668:	fmul	s0, s2, s6
    466c:	fmul	s2, s2, s16
    4670:	fmadd	s0, s1, s16, s0
    4674:	fnmsub	s1, s1, s6, s2
    4678:	fcvt	d0, s0
    467c:	fcvt	d1, s1
    4680:	fmul	d0, d0, d3
    4684:	fmul	d1, d1, d3
    4688:	fcvt	h0, d0
    468c:	fcvt	h1, d1
    4690:	b	4504 <__multc3@@GCC_4.0.0+0x7ec>

0000000000004694 <__divsc3@@GCC_4.0.0>:
    4694:	fabs	s19, s2
    4698:	fabs	s18, s3
    469c:	fmov	s6, s0
    46a0:	fmov	s7, s1
    46a4:	fcmpe	s19, s18
    46a8:	b.pl	4708 <__divsc3@@GCC_4.0.0+0x74>  // b.nfrst
    46ac:	fdiv	s4, s2, s3
    46b0:	fmadd	s5, s0, s4, s7
    46b4:	fmadd	s1, s2, s4, s3
    46b8:	fdiv	s0, s5, s1
    46bc:	fnmsub	s5, s7, s4, s6
    46c0:	fdiv	s1, s5, s1
    46c4:	fcmp	s0, s0
    46c8:	fccmp	s1, s1, #0x0, vs
    46cc:	b.vc	4704 <__divsc3@@GCC_4.0.0+0x70>
    46d0:	movi	v17.2s, #0x0
    46d4:	fcmp	s2, s17
    46d8:	fccmp	s3, s17, #0x0, eq  // eq = none
    46dc:	b.ne	4720 <__divsc3@@GCC_4.0.0+0x8c>  // b.any
    46e0:	fcmp	s6, s6
    46e4:	fccmp	s7, s7, #0x0, vs
    46e8:	b.vs	4720 <__divsc3@@GCC_4.0.0+0x8c>
    46ec:	movi	v1.2s, #0x80, lsl #24
    46f0:	mov	w0, #0x7f800000            	// #2139095040
    46f4:	fmov	s3, w0
    46f8:	bif	v2.8b, v3.8b, v1.8b
    46fc:	fmul	s0, s2, s6
    4700:	fmul	s1, s2, s7
    4704:	ret
    4708:	fdiv	s4, s3, s2
    470c:	fmadd	s5, s4, s7, s0
    4710:	fmadd	s1, s3, s4, s2
    4714:	fdiv	s0, s5, s1
    4718:	fmsub	s5, s4, s6, s7
    471c:	b	46c0 <__divsc3@@GCC_4.0.0+0x2c>
    4720:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4724:	fabs	s4, s6
    4728:	ldr	s16, [x0, #3048]
    472c:	fcmp	s4, s16
    4730:	b.gt	4740 <__divsc3@@GCC_4.0.0+0xac>
    4734:	fabs	s5, s7
    4738:	fcmp	s5, s16
    473c:	b.le	47a0 <__divsc3@@GCC_4.0.0+0x10c>
    4740:	fcmp	s19, s16
    4744:	b.hi	47a0 <__divsc3@@GCC_4.0.0+0x10c>  // b.pmore
    4748:	fcmp	s18, s16
    474c:	b.hi	47a0 <__divsc3@@GCC_4.0.0+0x10c>  // b.pmore
    4750:	fcmp	s4, s16
    4754:	fabs	s1, s7
    4758:	movi	v0.2s, #0x80, lsl #24
    475c:	cset	w0, gt
    4760:	fcmp	s1, s16
    4764:	scvtf	s5, w0
    4768:	cset	w0, gt
    476c:	scvtf	s1, w0
    4770:	fmov	s4, s5
    4774:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4778:	ldr	s5, [x0, #3044]
    477c:	bit	v1.8b, v7.8b, v0.8b
    4780:	bit	v4.8b, v6.8b, v0.8b
    4784:	fmul	s0, s3, s1
    4788:	fmadd	s0, s2, s4, s0
    478c:	fmul	s4, s3, s4
    4790:	fnmsub	s1, s2, s1, s4
    4794:	fmul	s0, s0, s5
    4798:	fmul	s1, s1, s5
    479c:	b	4704 <__divsc3@@GCC_4.0.0+0x70>
    47a0:	fcmp	s19, s16
    47a4:	b.gt	47b0 <__divsc3@@GCC_4.0.0+0x11c>
    47a8:	fcmp	s18, s16
    47ac:	b.le	4704 <__divsc3@@GCC_4.0.0+0x70>
    47b0:	fcmp	s4, s16
    47b4:	b.hi	4704 <__divsc3@@GCC_4.0.0+0x70>  // b.pmore
    47b8:	fabs	s4, s7
    47bc:	fcmp	s4, s16
    47c0:	b.hi	4704 <__divsc3@@GCC_4.0.0+0x70>  // b.pmore
    47c4:	fcmp	s19, s16
    47c8:	movi	v0.2s, #0x80, lsl #24
    47cc:	cset	w0, gt
    47d0:	fcmp	s18, s16
    47d4:	scvtf	s1, w0
    47d8:	cset	w0, gt
    47dc:	scvtf	s4, w0
    47e0:	bit	v1.8b, v2.8b, v0.8b
    47e4:	bit	v4.8b, v3.8b, v0.8b
    47e8:	fmul	s5, s7, s4
    47ec:	fmul	s4, s6, s4
    47f0:	fmadd	s5, s6, s1, s5
    47f4:	fnmsub	s1, s7, s1, s4
    47f8:	fmul	s0, s5, s17
    47fc:	fmul	s1, s1, s17
    4800:	b	4704 <__divsc3@@GCC_4.0.0+0x70>

0000000000004804 <__divdc3@@GCC_4.0.0>:
    4804:	fabs	d19, d2
    4808:	fabs	d18, d3
    480c:	fmov	d6, d0
    4810:	fmov	d7, d1
    4814:	fcmpe	d19, d18
    4818:	b.pl	487c <__divdc3@@GCC_4.0.0+0x78>  // b.nfrst
    481c:	fdiv	d4, d2, d3
    4820:	fmadd	d5, d0, d4, d7
    4824:	fmadd	d1, d2, d4, d3
    4828:	fdiv	d0, d5, d1
    482c:	fnmsub	d5, d7, d4, d6
    4830:	fdiv	d1, d5, d1
    4834:	fcmp	d0, d0
    4838:	fccmp	d1, d1, #0x0, vs
    483c:	b.vc	4878 <__divdc3@@GCC_4.0.0+0x74>
    4840:	movi	d17, #0x0
    4844:	fcmp	d2, d17
    4848:	fccmp	d3, d17, #0x0, eq  // eq = none
    484c:	b.ne	4894 <__divdc3@@GCC_4.0.0+0x90>  // b.any
    4850:	fcmp	d6, d6
    4854:	fccmp	d7, d7, #0x0, vs
    4858:	b.vs	4894 <__divdc3@@GCC_4.0.0+0x90>
    485c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    4860:	fmov	d3, x0
    4864:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4868:	fmov	d1, x0
    486c:	bif	v2.8b, v3.8b, v1.8b
    4870:	fmul	d0, d2, d6
    4874:	fmul	d1, d2, d7
    4878:	ret
    487c:	fdiv	d4, d3, d2
    4880:	fmadd	d5, d4, d7, d0
    4884:	fmadd	d1, d3, d4, d2
    4888:	fdiv	d0, d5, d1
    488c:	fmsub	d5, d4, d6, d7
    4890:	b	4830 <__divdc3@@GCC_4.0.0+0x2c>
    4894:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4898:	fabs	d4, d6
    489c:	ldr	d16, [x0, #3056]
    48a0:	fcmp	d4, d16
    48a4:	b.gt	48b4 <__divdc3@@GCC_4.0.0+0xb0>
    48a8:	fabs	d5, d7
    48ac:	fcmp	d5, d16
    48b0:	b.le	4918 <__divdc3@@GCC_4.0.0+0x114>
    48b4:	fcmp	d19, d16
    48b8:	b.hi	4918 <__divdc3@@GCC_4.0.0+0x114>  // b.pmore
    48bc:	fcmp	d18, d16
    48c0:	b.hi	4918 <__divdc3@@GCC_4.0.0+0x114>  // b.pmore
    48c4:	fcmp	d4, d16
    48c8:	fabs	d1, d7
    48cc:	cset	w0, gt
    48d0:	fcmp	d1, d16
    48d4:	scvtf	d5, w0
    48d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    48dc:	fmov	d0, x0
    48e0:	cset	w0, gt
    48e4:	scvtf	d1, w0
    48e8:	fmov	d4, d5
    48ec:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    48f0:	ldr	d5, [x0, #3064]
    48f4:	bit	v1.8b, v7.8b, v0.8b
    48f8:	bit	v4.8b, v6.8b, v0.8b
    48fc:	fmul	d0, d3, d1
    4900:	fmadd	d0, d2, d4, d0
    4904:	fmul	d4, d3, d4
    4908:	fnmsub	d1, d2, d1, d4
    490c:	fmul	d0, d0, d5
    4910:	fmul	d1, d1, d5
    4914:	b	4878 <__divdc3@@GCC_4.0.0+0x74>
    4918:	fcmp	d19, d16
    491c:	b.gt	4928 <__divdc3@@GCC_4.0.0+0x124>
    4920:	fcmp	d18, d16
    4924:	b.le	4878 <__divdc3@@GCC_4.0.0+0x74>
    4928:	fcmp	d4, d16
    492c:	b.hi	4878 <__divdc3@@GCC_4.0.0+0x74>  // b.pmore
    4930:	fabs	d4, d7
    4934:	fcmp	d4, d16
    4938:	b.hi	4878 <__divdc3@@GCC_4.0.0+0x74>  // b.pmore
    493c:	fcmp	d19, d16
    4940:	cset	w0, gt
    4944:	fcmp	d18, d16
    4948:	scvtf	d1, w0
    494c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    4950:	fmov	d0, x0
    4954:	cset	w0, gt
    4958:	scvtf	d4, w0
    495c:	bit	v1.8b, v2.8b, v0.8b
    4960:	bit	v4.8b, v3.8b, v0.8b
    4964:	fmul	d5, d7, d4
    4968:	fmul	d4, d6, d4
    496c:	fmadd	d5, d6, d1, d5
    4970:	fnmsub	d1, d7, d1, d4
    4974:	fmul	d0, d5, d17
    4978:	fmul	d1, d1, d17
    497c:	b	4878 <__divdc3@@GCC_4.0.0+0x74>

0000000000004980 <__divtc3@@GCC_4.0.0>:
    4980:	stp	x29, x30, [sp, #-160]!
    4984:	mov	x29, sp
    4988:	str	q0, [sp, #96]
    498c:	stp	x19, x20, [sp, #16]
    4990:	stp	x21, x22, [sp, #32]
    4994:	ldp	x20, x22, [sp, #96]
    4998:	str	q1, [sp, #96]
    499c:	ldp	x21, x19, [sp, #96]
    49a0:	str	q2, [sp, #96]
    49a4:	stp	x23, x24, [sp, #48]
    49a8:	stp	x25, x26, [sp, #64]
    49ac:	ldp	x24, x25, [sp, #96]
    49b0:	str	q3, [sp, #96]
    49b4:	ldp	x23, x26, [sp, #96]
    49b8:	stp	x27, x28, [sp, #80]
    49bc:	and	x28, x25, #0x7fffffffffffffff
    49c0:	and	x27, x26, #0x7fffffffffffffff
    49c4:	str	x27, [sp, #104]
    49c8:	ldr	q1, [sp, #96]
    49cc:	stp	x24, x28, [sp, #96]
    49d0:	ldr	q0, [sp, #96]
    49d4:	bl	2d40 <__lttf2@plt>
    49d8:	tbz	w0, #31, 4b9c <__divtc3@@GCC_4.0.0+0x21c>
    49dc:	stp	x23, x26, [sp, #96]
    49e0:	ldr	q1, [sp, #96]
    49e4:	stp	x24, x25, [sp, #96]
    49e8:	ldr	q0, [sp, #96]
    49ec:	bl	2ca0 <__divtf3@plt>
    49f0:	stp	x24, x25, [sp, #96]
    49f4:	mov	v1.16b, v0.16b
    49f8:	str	q0, [sp, #112]
    49fc:	ldr	q0, [sp, #96]
    4a00:	bl	2b40 <__multf3@plt>
    4a04:	stp	x23, x26, [sp, #96]
    4a08:	ldr	q1, [sp, #96]
    4a0c:	bl	2c60 <__addtf3@plt>
    4a10:	stp	x20, x22, [sp, #96]
    4a14:	ldr	q2, [sp, #112]
    4a18:	str	q0, [sp, #128]
    4a1c:	ldr	q0, [sp, #96]
    4a20:	mov	v1.16b, v2.16b
    4a24:	bl	2b40 <__multf3@plt>
    4a28:	stp	x21, x19, [sp, #96]
    4a2c:	ldr	q1, [sp, #96]
    4a30:	bl	2c60 <__addtf3@plt>
    4a34:	ldr	q4, [sp, #128]
    4a38:	mov	v1.16b, v4.16b
    4a3c:	bl	2ca0 <__divtf3@plt>
    4a40:	ldr	q2, [sp, #112]
    4a44:	stp	x21, x19, [sp, #112]
    4a48:	str	q0, [sp, #96]
    4a4c:	mov	v1.16b, v2.16b
    4a50:	ldr	q0, [sp, #112]
    4a54:	bl	2b40 <__multf3@plt>
    4a58:	stp	x20, x22, [sp, #112]
    4a5c:	ldr	q1, [sp, #112]
    4a60:	bl	2dd0 <__subtf3@plt>
    4a64:	ldr	q4, [sp, #128]
    4a68:	mov	v1.16b, v4.16b
    4a6c:	bl	2ca0 <__divtf3@plt>
    4a70:	ldr	q1, [sp, #96]
    4a74:	str	q0, [sp, #112]
    4a78:	mov	v0.16b, v1.16b
    4a7c:	bl	2d80 <__unordtf2@plt>
    4a80:	cmp	w0, #0x0
    4a84:	ldr	q1, [sp, #112]
    4a88:	cset	w1, ne  // ne = any
    4a8c:	str	w1, [sp, #128]
    4a90:	mov	v0.16b, v1.16b
    4a94:	bl	2d80 <__unordtf2@plt>
    4a98:	cmp	w0, #0x0
    4a9c:	ldr	w1, [sp, #128]
    4aa0:	cset	w0, ne  // ne = any
    4aa4:	tst	w0, w1
    4aa8:	b.eq	4b78 <__divtc3@@GCC_4.0.0+0x1f8>  // b.none
    4aac:	movi	v1.2d, #0x0
    4ab0:	stp	x24, x25, [sp, #128]
    4ab4:	ldr	q0, [sp, #128]
    4ab8:	bl	2b60 <__eqtf2@plt>
    4abc:	stp	x23, x26, [sp, #128]
    4ac0:	cmp	w0, #0x0
    4ac4:	movi	v1.2d, #0x0
    4ac8:	cset	w1, eq  // eq = none
    4acc:	ldr	q0, [sp, #128]
    4ad0:	str	w1, [sp, #144]
    4ad4:	bl	2b60 <__eqtf2@plt>
    4ad8:	cmp	w0, #0x0
    4adc:	ldr	w1, [sp, #144]
    4ae0:	cset	w0, eq  // eq = none
    4ae4:	tst	w0, w1
    4ae8:	b.eq	4c30 <__divtc3@@GCC_4.0.0+0x2b0>  // b.none
    4aec:	stp	x20, x22, [sp, #128]
    4af0:	ldr	q1, [sp, #128]
    4af4:	mov	v0.16b, v1.16b
    4af8:	bl	2d80 <__unordtf2@plt>
    4afc:	stp	x21, x19, [sp, #128]
    4b00:	cmp	w0, #0x0
    4b04:	cset	w1, eq  // eq = none
    4b08:	ldr	q1, [sp, #128]
    4b0c:	str	w1, [sp, #144]
    4b10:	mov	v0.16b, v1.16b
    4b14:	bl	2d80 <__unordtf2@plt>
    4b18:	cmp	w0, #0x0
    4b1c:	ldr	w1, [sp, #144]
    4b20:	cset	w0, eq  // eq = none
    4b24:	orr	w1, w1, w0
    4b28:	tbz	w1, #0, 4c30 <__divtc3@@GCC_4.0.0+0x2b0>
    4b2c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4b30:	add	x0, x0, #0xc10
    4b34:	ldr	q2, [x0]
    4b38:	tbz	x25, #63, 4b48 <__divtc3@@GCC_4.0.0+0x1c8>
    4b3c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4b40:	add	x0, x0, #0xc20
    4b44:	ldr	q2, [x0]
    4b48:	stp	x20, x22, [sp, #96]
    4b4c:	mov	v0.16b, v2.16b
    4b50:	ldr	q1, [sp, #96]
    4b54:	str	q2, [sp, #128]
    4b58:	bl	2b40 <__multf3@plt>
    4b5c:	stp	x21, x19, [sp, #112]
    4b60:	ldr	q2, [sp, #128]
    4b64:	str	q0, [sp, #96]
    4b68:	ldr	q1, [sp, #112]
    4b6c:	mov	v0.16b, v2.16b
    4b70:	bl	2b40 <__multf3@plt>
    4b74:	str	q0, [sp, #112]
    4b78:	ldp	x19, x20, [sp, #16]
    4b7c:	ldp	x21, x22, [sp, #32]
    4b80:	ldp	x23, x24, [sp, #48]
    4b84:	ldp	x25, x26, [sp, #64]
    4b88:	ldp	x27, x28, [sp, #80]
    4b8c:	ldr	q0, [sp, #96]
    4b90:	ldr	q1, [sp, #112]
    4b94:	ldp	x29, x30, [sp], #160
    4b98:	ret
    4b9c:	stp	x24, x25, [sp, #96]
    4ba0:	ldr	q1, [sp, #96]
    4ba4:	stp	x23, x26, [sp, #96]
    4ba8:	ldr	q0, [sp, #96]
    4bac:	bl	2ca0 <__divtf3@plt>
    4bb0:	stp	x23, x26, [sp, #96]
    4bb4:	mov	v1.16b, v0.16b
    4bb8:	str	q0, [sp, #128]
    4bbc:	ldr	q0, [sp, #96]
    4bc0:	bl	2b40 <__multf3@plt>
    4bc4:	stp	x24, x25, [sp, #96]
    4bc8:	ldr	q1, [sp, #96]
    4bcc:	bl	2c60 <__addtf3@plt>
    4bd0:	stp	x21, x19, [sp, #96]
    4bd4:	ldr	q2, [sp, #128]
    4bd8:	ldr	q1, [sp, #96]
    4bdc:	str	q0, [sp, #112]
    4be0:	mov	v0.16b, v2.16b
    4be4:	str	q2, [sp, #144]
    4be8:	bl	2b40 <__multf3@plt>
    4bec:	stp	x20, x22, [sp, #96]
    4bf0:	ldr	q1, [sp, #96]
    4bf4:	bl	2c60 <__addtf3@plt>
    4bf8:	ldr	q4, [sp, #112]
    4bfc:	mov	v1.16b, v4.16b
    4c00:	str	q4, [sp, #128]
    4c04:	bl	2ca0 <__divtf3@plt>
    4c08:	stp	x20, x22, [sp, #112]
    4c0c:	ldr	q2, [sp, #144]
    4c10:	ldr	q1, [sp, #112]
    4c14:	str	q0, [sp, #96]
    4c18:	mov	v0.16b, v2.16b
    4c1c:	bl	2b40 <__multf3@plt>
    4c20:	stp	x21, x19, [sp, #112]
    4c24:	mov	v1.16b, v0.16b
    4c28:	ldr	q0, [sp, #112]
    4c2c:	b	4a60 <__divtc3@@GCC_4.0.0+0xe0>
    4c30:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4c34:	add	x0, x0, #0xc00
    4c38:	ldr	q1, [x0]
    4c3c:	and	x0, x22, #0x7fffffffffffffff
    4c40:	stp	x20, x0, [sp, #128]
    4c44:	ldr	q0, [sp, #128]
    4c48:	bl	2d80 <__unordtf2@plt>
    4c4c:	cbnz	w0, 4c74 <__divtc3@@GCC_4.0.0+0x2f4>
    4c50:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4c54:	add	x0, x0, #0xc00
    4c58:	ldr	q1, [x0]
    4c5c:	and	x0, x22, #0x7fffffffffffffff
    4c60:	stp	x20, x0, [sp, #128]
    4c64:	ldr	q0, [sp, #128]
    4c68:	bl	2c00 <__letf2@plt>
    4c6c:	cmp	w0, #0x0
    4c70:	b.gt	4cbc <__divtc3@@GCC_4.0.0+0x33c>
    4c74:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4c78:	add	x0, x0, #0xc00
    4c7c:	and	x1, x19, #0x7fffffffffffffff
    4c80:	stp	x21, x1, [sp, #128]
    4c84:	ldr	q1, [x0]
    4c88:	ldr	q0, [sp, #128]
    4c8c:	str	x1, [sp, #144]
    4c90:	bl	2d80 <__unordtf2@plt>
    4c94:	cbnz	w0, 4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4c98:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4c9c:	add	x0, x0, #0xc00
    4ca0:	ldr	x1, [sp, #144]
    4ca4:	stp	x21, x1, [sp, #128]
    4ca8:	ldr	q1, [x0]
    4cac:	ldr	q0, [sp, #128]
    4cb0:	bl	2c00 <__letf2@plt>
    4cb4:	cmp	w0, #0x0
    4cb8:	b.le	4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4cbc:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4cc0:	add	x0, x0, #0xc00
    4cc4:	stp	x24, x28, [sp, #128]
    4cc8:	ldr	q1, [x0]
    4ccc:	ldr	q0, [sp, #128]
    4cd0:	bl	2d80 <__unordtf2@plt>
    4cd4:	cbnz	w0, 4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4cd8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4cdc:	add	x0, x0, #0xc00
    4ce0:	stp	x24, x28, [sp, #128]
    4ce4:	ldr	q1, [x0]
    4ce8:	ldr	q0, [sp, #128]
    4cec:	bl	2c30 <__gttf2@plt>
    4cf0:	cmp	w0, #0x0
    4cf4:	b.gt	4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4cf8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4cfc:	add	x0, x0, #0xc00
    4d00:	stp	x23, x27, [sp, #128]
    4d04:	ldr	q1, [x0]
    4d08:	ldr	q0, [sp, #128]
    4d0c:	bl	2d80 <__unordtf2@plt>
    4d10:	cbnz	w0, 4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4d14:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4d18:	add	x0, x0, #0xc00
    4d1c:	stp	x23, x27, [sp, #128]
    4d20:	ldr	q1, [x0]
    4d24:	ldr	q0, [sp, #128]
    4d28:	bl	2c30 <__gttf2@plt>
    4d2c:	cmp	w0, #0x0
    4d30:	b.gt	4e8c <__divtc3@@GCC_4.0.0+0x50c>
    4d34:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4d38:	add	x0, x0, #0xc00
    4d3c:	mov	w27, #0x1                   	// #1
    4d40:	ldr	q1, [x0]
    4d44:	and	x0, x22, #0x7fffffffffffffff
    4d48:	stp	x20, x0, [sp, #96]
    4d4c:	ldr	q0, [sp, #96]
    4d50:	bl	2d80 <__unordtf2@plt>
    4d54:	cbnz	w0, 4d7c <__divtc3@@GCC_4.0.0+0x3fc>
    4d58:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4d5c:	add	x0, x0, #0xc00
    4d60:	ldr	q1, [x0]
    4d64:	and	x0, x22, #0x7fffffffffffffff
    4d68:	stp	x20, x0, [sp, #96]
    4d6c:	ldr	q0, [sp, #96]
    4d70:	bl	2c00 <__letf2@plt>
    4d74:	cmp	w0, #0x0
    4d78:	cset	w27, le
    4d7c:	eor	w0, w27, #0x1
    4d80:	and	x28, x19, #0x7fffffffffffffff
    4d84:	and	w0, w0, #0x1
    4d88:	bl	2dc0 <__floatsitf@plt>
    4d8c:	str	q0, [sp, #96]
    4d90:	mov	w27, #0x1                   	// #1
    4d94:	ldp	x20, x0, [sp, #96]
    4d98:	stp	x21, x28, [sp, #96]
    4d9c:	ldr	q0, [sp, #96]
    4da0:	bfxil	x22, x0, #0, #63
    4da4:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4da8:	add	x0, x0, #0xc00
    4dac:	ldr	q1, [x0]
    4db0:	bl	2d80 <__unordtf2@plt>
    4db4:	cbnz	w0, 4dd8 <__divtc3@@GCC_4.0.0+0x458>
    4db8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4dbc:	add	x0, x0, #0xc00
    4dc0:	stp	x21, x28, [sp, #96]
    4dc4:	ldr	q1, [x0]
    4dc8:	ldr	q0, [sp, #96]
    4dcc:	bl	2c00 <__letf2@plt>
    4dd0:	cmp	w0, #0x0
    4dd4:	cset	w27, le
    4dd8:	eor	w0, w27, #0x1
    4ddc:	and	w0, w0, #0x1
    4de0:	bl	2dc0 <__floatsitf@plt>
    4de4:	str	q0, [sp, #96]
    4de8:	ldp	x21, x0, [sp, #96]
    4dec:	stp	x20, x22, [sp, #96]
    4df0:	ldr	q1, [sp, #96]
    4df4:	stp	x24, x25, [sp, #96]
    4df8:	ldr	q0, [sp, #96]
    4dfc:	bfxil	x19, x0, #0, #63
    4e00:	bl	2b40 <__multf3@plt>
    4e04:	stp	x21, x19, [sp, #96]
    4e08:	ldr	q1, [sp, #96]
    4e0c:	stp	x23, x26, [sp, #96]
    4e10:	str	q0, [sp, #112]
    4e14:	ldr	q0, [sp, #96]
    4e18:	bl	2b40 <__multf3@plt>
    4e1c:	mov	v1.16b, v0.16b
    4e20:	ldr	q2, [sp, #112]
    4e24:	mov	v0.16b, v2.16b
    4e28:	bl	2c60 <__addtf3@plt>
    4e2c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4e30:	add	x0, x0, #0xc10
    4e34:	ldr	q1, [x0]
    4e38:	bl	2b40 <__multf3@plt>
    4e3c:	stp	x21, x19, [sp, #112]
    4e40:	ldr	q1, [sp, #112]
    4e44:	stp	x24, x25, [sp, #112]
    4e48:	str	q0, [sp, #96]
    4e4c:	ldr	q0, [sp, #112]
    4e50:	bl	2b40 <__multf3@plt>
    4e54:	stp	x20, x22, [sp, #112]
    4e58:	ldr	q1, [sp, #112]
    4e5c:	stp	x23, x26, [sp, #112]
    4e60:	str	q0, [sp, #128]
    4e64:	ldr	q0, [sp, #112]
    4e68:	bl	2b40 <__multf3@plt>
    4e6c:	mov	v1.16b, v0.16b
    4e70:	ldr	q2, [sp, #128]
    4e74:	mov	v0.16b, v2.16b
    4e78:	bl	2dd0 <__subtf3@plt>
    4e7c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4e80:	add	x0, x0, #0xc10
    4e84:	ldr	q1, [x0]
    4e88:	b	4b70 <__divtc3@@GCC_4.0.0+0x1f0>
    4e8c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4e90:	add	x0, x0, #0xc00
    4e94:	stp	x24, x28, [sp, #128]
    4e98:	ldr	q1, [x0]
    4e9c:	ldr	q0, [sp, #128]
    4ea0:	bl	2d80 <__unordtf2@plt>
    4ea4:	cbnz	w0, 4ec8 <__divtc3@@GCC_4.0.0+0x548>
    4ea8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4eac:	add	x0, x0, #0xc00
    4eb0:	stp	x24, x28, [sp, #128]
    4eb4:	ldr	q1, [x0]
    4eb8:	ldr	q0, [sp, #128]
    4ebc:	bl	2c00 <__letf2@plt>
    4ec0:	cmp	w0, #0x0
    4ec4:	b.gt	4f04 <__divtc3@@GCC_4.0.0+0x584>
    4ec8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4ecc:	add	x0, x0, #0xc00
    4ed0:	stp	x23, x27, [sp, #128]
    4ed4:	ldr	q1, [x0]
    4ed8:	ldr	q0, [sp, #128]
    4edc:	bl	2d80 <__unordtf2@plt>
    4ee0:	cbnz	w0, 4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4ee4:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4ee8:	add	x0, x0, #0xc00
    4eec:	stp	x23, x27, [sp, #128]
    4ef0:	ldr	q1, [x0]
    4ef4:	ldr	q0, [sp, #128]
    4ef8:	bl	2c00 <__letf2@plt>
    4efc:	cmp	w0, #0x0
    4f00:	b.le	4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4f04:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4f08:	add	x0, x0, #0xc00
    4f0c:	ldr	q1, [x0]
    4f10:	and	x0, x22, #0x7fffffffffffffff
    4f14:	stp	x20, x0, [sp, #128]
    4f18:	ldr	q0, [sp, #128]
    4f1c:	bl	2d80 <__unordtf2@plt>
    4f20:	cbnz	w0, 4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4f24:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4f28:	add	x0, x0, #0xc00
    4f2c:	ldr	q1, [x0]
    4f30:	and	x0, x22, #0x7fffffffffffffff
    4f34:	stp	x20, x0, [sp, #128]
    4f38:	ldr	q0, [sp, #128]
    4f3c:	bl	2c30 <__gttf2@plt>
    4f40:	cmp	w0, #0x0
    4f44:	b.gt	4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4f48:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4f4c:	add	x0, x0, #0xc00
    4f50:	and	x1, x19, #0x7fffffffffffffff
    4f54:	stp	x21, x1, [sp, #128]
    4f58:	ldr	q1, [x0]
    4f5c:	ldr	q0, [sp, #128]
    4f60:	str	x1, [sp, #144]
    4f64:	bl	2d80 <__unordtf2@plt>
    4f68:	cbnz	w0, 4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4f6c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4f70:	add	x0, x0, #0xc00
    4f74:	ldr	x1, [sp, #144]
    4f78:	stp	x21, x1, [sp, #128]
    4f7c:	ldr	q1, [x0]
    4f80:	ldr	q0, [sp, #128]
    4f84:	bl	2c30 <__gttf2@plt>
    4f88:	cmp	w0, #0x0
    4f8c:	b.gt	4b78 <__divtc3@@GCC_4.0.0+0x1f8>
    4f90:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4f94:	add	x0, x0, #0xc00
    4f98:	stp	x24, x28, [sp, #96]
    4f9c:	mov	w1, #0x1                   	// #1
    4fa0:	ldr	q1, [x0]
    4fa4:	ldr	q0, [sp, #96]
    4fa8:	str	w1, [sp, #112]
    4fac:	bl	2d80 <__unordtf2@plt>
    4fb0:	ldr	w1, [sp, #112]
    4fb4:	cbnz	w0, 4fd8 <__divtc3@@GCC_4.0.0+0x658>
    4fb8:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    4fbc:	add	x0, x0, #0xc00
    4fc0:	stp	x24, x28, [sp, #96]
    4fc4:	ldr	q1, [x0]
    4fc8:	ldr	q0, [sp, #96]
    4fcc:	bl	2c00 <__letf2@plt>
    4fd0:	cmp	w0, #0x0
    4fd4:	cset	w1, le
    4fd8:	eor	w0, w1, #0x1
    4fdc:	mov	w28, #0x1                   	// #1
    4fe0:	and	w0, w0, #0x1
    4fe4:	bl	2dc0 <__floatsitf@plt>
    4fe8:	str	q0, [sp, #96]
    4fec:	ldp	x24, x0, [sp, #96]
    4ff0:	stp	x23, x27, [sp, #96]
    4ff4:	ldr	q0, [sp, #96]
    4ff8:	bfxil	x25, x0, #0, #63
    4ffc:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    5000:	add	x0, x0, #0xc00
    5004:	ldr	q1, [x0]
    5008:	bl	2d80 <__unordtf2@plt>
    500c:	cbnz	w0, 5030 <__divtc3@@GCC_4.0.0+0x6b0>
    5010:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    5014:	add	x0, x0, #0xc00
    5018:	stp	x23, x27, [sp, #96]
    501c:	ldr	q1, [x0]
    5020:	ldr	q0, [sp, #96]
    5024:	bl	2c00 <__letf2@plt>
    5028:	cmp	w0, #0x0
    502c:	cset	w28, le
    5030:	eor	w0, w28, #0x1
    5034:	and	w0, w0, #0x1
    5038:	bl	2dc0 <__floatsitf@plt>
    503c:	str	q0, [sp, #96]
    5040:	ldp	x23, x0, [sp, #96]
    5044:	stp	x24, x25, [sp, #96]
    5048:	ldr	q1, [sp, #96]
    504c:	stp	x20, x22, [sp, #96]
    5050:	ldr	q0, [sp, #96]
    5054:	bfxil	x26, x0, #0, #63
    5058:	bl	2b40 <__multf3@plt>
    505c:	stp	x23, x26, [sp, #96]
    5060:	ldr	q1, [sp, #96]
    5064:	stp	x21, x19, [sp, #96]
    5068:	str	q0, [sp, #112]
    506c:	ldr	q0, [sp, #96]
    5070:	bl	2b40 <__multf3@plt>
    5074:	mov	v1.16b, v0.16b
    5078:	ldr	q2, [sp, #112]
    507c:	mov	v0.16b, v2.16b
    5080:	bl	2c60 <__addtf3@plt>
    5084:	movi	v1.2d, #0x0
    5088:	bl	2b40 <__multf3@plt>
    508c:	stp	x24, x25, [sp, #112]
    5090:	ldr	q1, [sp, #112]
    5094:	stp	x21, x19, [sp, #112]
    5098:	str	q0, [sp, #96]
    509c:	ldr	q0, [sp, #112]
    50a0:	bl	2b40 <__multf3@plt>
    50a4:	stp	x23, x26, [sp, #112]
    50a8:	ldr	q1, [sp, #112]
    50ac:	stp	x20, x22, [sp, #112]
    50b0:	str	q0, [sp, #128]
    50b4:	ldr	q0, [sp, #112]
    50b8:	bl	2b40 <__multf3@plt>
    50bc:	mov	v1.16b, v0.16b
    50c0:	ldr	q2, [sp, #128]
    50c4:	mov	v0.16b, v2.16b
    50c8:	bl	2dd0 <__subtf3@plt>
    50cc:	movi	v1.2d, #0x0
    50d0:	b	4b70 <__divtc3@@GCC_4.0.0+0x1f0>

00000000000050d4 <__bswapsi2@@GCC_4.3.0>:
    50d4:	rev	w0, w0
    50d8:	ret

00000000000050dc <__bswapdi2@@GCC_4.3.0>:
    50dc:	rev	x0, x0
    50e0:	ret

00000000000050e4 <__clrsbdi2@@GCC_4.7.0>:
    50e4:	tbz	x0, #63, 50ec <__clrsbdi2@@GCC_4.7.0+0x8>
    50e8:	mvn	x0, x0
    50ec:	clz	x1, x0
    50f0:	cmp	x0, #0x0
    50f4:	sub	w1, w1, #0x1
    50f8:	mov	w0, #0x3f                  	// #63
    50fc:	csel	w0, w1, w0, ne  // ne = any
    5100:	ret

0000000000005104 <__clrsbti2@@GCC_4.7.0>:
    5104:	mov	x2, x0
    5108:	mov	x0, x1
    510c:	cbnz	x1, 5124 <__clrsbti2@@GCC_4.7.0+0x20>
    5110:	mov	x0, x2
    5114:	mov	x1, #0x40                  	// #64
    5118:	cbnz	x0, 513c <__clrsbti2@@GCC_4.7.0+0x38>
    511c:	mov	x0, x1
    5120:	b	5140 <__clrsbti2@@GCC_4.7.0+0x3c>
    5124:	cmn	x1, #0x1
    5128:	b.ne	5134 <__clrsbti2@@GCC_4.7.0+0x30>  // b.any
    512c:	mvn	x0, x2
    5130:	b	5114 <__clrsbti2@@GCC_4.7.0+0x10>
    5134:	tbnz	x1, #63, 514c <__clrsbti2@@GCC_4.7.0+0x48>
    5138:	mov	x1, #0x0                   	// #0
    513c:	clz	x0, x0
    5140:	add	w0, w0, w1
    5144:	sub	w0, w0, #0x1
    5148:	ret
    514c:	mvn	x0, x1
    5150:	b	5138 <__clrsbti2@@GCC_4.7.0+0x34>

0000000000005154 <__fixunssfdi@@GCC_3.0>:
    5154:	movi	v1.2s, #0x5f, lsl #24
    5158:	fcmpe	s0, s1
    515c:	b.lt	5174 <__fixunssfdi@@GCC_3.0+0x20>  // b.tstop
    5160:	fsub	s0, s0, s1
    5164:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    5168:	fcvtzs	x0, s0
    516c:	add	x0, x0, x1
    5170:	ret
    5174:	fcvtzs	x0, s0
    5178:	b	5170 <__fixunssfdi@@GCC_3.0+0x1c>

000000000000517c <__fixunsdfdi@@GCC_3.0>:
    517c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    5180:	ldr	d1, [x0, #3120]
    5184:	fcmpe	d0, d1
    5188:	b.lt	51a0 <__fixunsdfdi@@GCC_3.0+0x24>  // b.tstop
    518c:	fsub	d0, d0, d1
    5190:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    5194:	fcvtzs	x0, d0
    5198:	add	x0, x0, x1
    519c:	ret
    51a0:	fcvtzs	x0, d0
    51a4:	b	519c <__fixunsdfdi@@GCC_3.0+0x20>

00000000000051a8 <__fixsfti@@GCC_3.0>:
    51a8:	fcmpe	s0, #0.0
    51ac:	b.pl	51d0 <__fixsfti@@GCC_3.0+0x28>  // b.nfrst
    51b0:	fneg	s0, s0
    51b4:	stp	x29, x30, [sp, #-16]!
    51b8:	mov	x29, sp
    51bc:	bl	2bf0 <__fixunssfti@plt>
    51c0:	negs	x0, x0
    51c4:	ngc	x1, x1
    51c8:	ldp	x29, x30, [sp], #16
    51cc:	ret
    51d0:	b	2bf0 <__fixunssfti@plt>

00000000000051d4 <__fixdfti@@GCC_3.0>:
    51d4:	fcmpe	d0, #0.0
    51d8:	b.pl	51fc <__fixdfti@@GCC_3.0+0x28>  // b.nfrst
    51dc:	fneg	d0, d0
    51e0:	stp	x29, x30, [sp, #-16]!
    51e4:	mov	x29, sp
    51e8:	bl	2d70 <__fixunsdfti@plt>
    51ec:	negs	x0, x0
    51f0:	ngc	x1, x1
    51f4:	ldp	x29, x30, [sp], #16
    51f8:	ret
    51fc:	b	2d70 <__fixunsdfti@plt>

0000000000005200 <__fixunssfti@@GCC_3.0>:
    5200:	fcvt	d0, s0
    5204:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
    5208:	fmov	d1, x0
    520c:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
    5210:	fmul	d1, d0, d1
    5214:	fcvtzu	x1, d1
    5218:	fmov	d1, x0
    521c:	ucvtf	d2, x1
    5220:	fmsub	d0, d2, d1, d0
    5224:	fcvtzu	x0, d0
    5228:	ret

000000000000522c <__fixunsdfti@@GCC_3.0>:
    522c:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
    5230:	fmov	d1, x0
    5234:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
    5238:	fmul	d1, d0, d1
    523c:	fcvtzu	x1, d1
    5240:	fmov	d1, x0
    5244:	ucvtf	d2, x1
    5248:	fmsub	d0, d2, d1, d0
    524c:	fcvtzu	x0, d0
    5250:	ret

0000000000005254 <__floattisf@@GCC_3.0>:
    5254:	stp	x29, x30, [sp, #-48]!
    5258:	mov	x3, #0x3ffffffffffff       	// #1125899906842623
    525c:	mov	x29, sp
    5260:	str	x19, [sp, #16]
    5264:	mov	x19, x0
    5268:	subs	x2, x19, #0x1
    526c:	mov	x0, x1
    5270:	mov	x1, #0x1ffffffffffff       	// #562949953421311
    5274:	adc	x1, x0, x1
    5278:	cmp	x1, x3
    527c:	b.hi	528c <__floattisf@@GCC_3.0+0x38>  // b.pmore
    5280:	b.ne	529c <__floattisf@@GCC_3.0+0x48>  // b.any
    5284:	cmn	x2, #0x2
    5288:	b.ls	529c <__floattisf@@GCC_3.0+0x48>  // b.plast
    528c:	tst	x19, #0x7fff
    5290:	b.eq	529c <__floattisf@@GCC_3.0+0x48>  // b.none
    5294:	and	x19, x19, #0xffffffffffff8000
    5298:	orr	x19, x19, #0x8000
    529c:	bl	2b80 <__floatditf@plt>
    52a0:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    52a4:	add	x0, x0, #0xc40
    52a8:	ldr	q1, [x0]
    52ac:	bl	2b40 <__multf3@plt>
    52b0:	str	q0, [sp, #32]
    52b4:	mov	x0, x19
    52b8:	bl	2b30 <__floatunditf@plt>
    52bc:	ldr	q1, [sp, #32]
    52c0:	bl	2c60 <__addtf3@plt>
    52c4:	bl	2de0 <__trunctfsf2@plt>
    52c8:	ldr	x19, [sp, #16]
    52cc:	ldp	x29, x30, [sp], #48
    52d0:	ret

00000000000052d4 <__floattidf@@GCC_3.0>:
    52d4:	stp	x29, x30, [sp, #-48]!
    52d8:	mov	x3, #0x3ffffffffffff       	// #1125899906842623
    52dc:	mov	x29, sp
    52e0:	str	x19, [sp, #16]
    52e4:	mov	x19, x0
    52e8:	subs	x2, x19, #0x1
    52ec:	mov	x0, x1
    52f0:	mov	x1, #0x1ffffffffffff       	// #562949953421311
    52f4:	adc	x1, x0, x1
    52f8:	cmp	x1, x3
    52fc:	b.hi	530c <__floattidf@@GCC_3.0+0x38>  // b.pmore
    5300:	b.ne	531c <__floattidf@@GCC_3.0+0x48>  // b.any
    5304:	cmn	x2, #0x2
    5308:	b.ls	531c <__floattidf@@GCC_3.0+0x48>  // b.plast
    530c:	tst	x19, #0x7fff
    5310:	b.eq	531c <__floattidf@@GCC_3.0+0x48>  // b.none
    5314:	and	x19, x19, #0xffffffffffff8000
    5318:	orr	x19, x19, #0x8000
    531c:	bl	2b80 <__floatditf@plt>
    5320:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    5324:	add	x0, x0, #0xc40
    5328:	ldr	q1, [x0]
    532c:	bl	2b40 <__multf3@plt>
    5330:	str	q0, [sp, #32]
    5334:	mov	x0, x19
    5338:	bl	2b30 <__floatunditf@plt>
    533c:	ldr	q1, [sp, #32]
    5340:	bl	2c60 <__addtf3@plt>
    5344:	bl	2cd0 <__trunctfdf2@plt>
    5348:	ldr	x19, [sp, #16]
    534c:	ldp	x29, x30, [sp], #48
    5350:	ret

0000000000005354 <__floatuntisf@@GCC_4.2.0>:
    5354:	stp	x29, x30, [sp, #-48]!
    5358:	mov	x29, sp
    535c:	str	x19, [sp, #16]
    5360:	mov	x19, x0
    5364:	mov	x0, x1
    5368:	mov	x1, #0x1ffffffffffff       	// #562949953421311
    536c:	cmp	x0, x1
    5370:	b.ls	5384 <__floatuntisf@@GCC_4.2.0+0x30>  // b.plast
    5374:	tst	x19, #0x7fff
    5378:	b.eq	5384 <__floatuntisf@@GCC_4.2.0+0x30>  // b.none
    537c:	and	x19, x19, #0xffffffffffff8000
    5380:	orr	x19, x19, #0x8000
    5384:	bl	2b30 <__floatunditf@plt>
    5388:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    538c:	add	x0, x0, #0xc40
    5390:	ldr	q1, [x0]
    5394:	bl	2b40 <__multf3@plt>
    5398:	str	q0, [sp, #32]
    539c:	mov	x0, x19
    53a0:	bl	2b30 <__floatunditf@plt>
    53a4:	ldr	q1, [sp, #32]
    53a8:	bl	2c60 <__addtf3@plt>
    53ac:	bl	2de0 <__trunctfsf2@plt>
    53b0:	ldr	x19, [sp, #16]
    53b4:	ldp	x29, x30, [sp], #48
    53b8:	ret

00000000000053bc <__floatuntidf@@GCC_4.2.0>:
    53bc:	stp	x29, x30, [sp, #-48]!
    53c0:	mov	x29, sp
    53c4:	str	x19, [sp, #16]
    53c8:	mov	x19, x0
    53cc:	mov	x0, x1
    53d0:	mov	x1, #0x1ffffffffffff       	// #562949953421311
    53d4:	cmp	x0, x1
    53d8:	b.ls	53ec <__floatuntidf@@GCC_4.2.0+0x30>  // b.plast
    53dc:	tst	x19, #0x7fff
    53e0:	b.eq	53ec <__floatuntidf@@GCC_4.2.0+0x30>  // b.none
    53e4:	and	x19, x19, #0xffffffffffff8000
    53e8:	orr	x19, x19, #0x8000
    53ec:	bl	2b30 <__floatunditf@plt>
    53f0:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    53f4:	add	x0, x0, #0xc40
    53f8:	ldr	q1, [x0]
    53fc:	bl	2b40 <__multf3@plt>
    5400:	str	q0, [sp, #32]
    5404:	mov	x0, x19
    5408:	bl	2b30 <__floatunditf@plt>
    540c:	ldr	q1, [sp, #32]
    5410:	bl	2c60 <__addtf3@plt>
    5414:	bl	2cd0 <__trunctfdf2@plt>
    5418:	ldr	x19, [sp, #16]
    541c:	ldp	x29, x30, [sp], #48
    5420:	ret

0000000000005424 <__divti3@@GCC_3.0>:
    5424:	mov	x8, x0
    5428:	tbz	x1, #63, 5510 <__divti3@@GCC_3.0+0xec>
    542c:	negs	x8, x0
    5430:	mov	x7, #0xffffffffffffffff    	// #-1
    5434:	ngc	x1, x1
    5438:	tbz	x3, #63, 5448 <__divti3@@GCC_3.0+0x24>
    543c:	negs	x2, x2
    5440:	mvn	x7, x7
    5444:	ngc	x3, x3
    5448:	mov	x4, x2
    544c:	mov	x6, x3
    5450:	mov	x9, x8
    5454:	mov	x5, x1
    5458:	cbnz	x3, 5684 <__divti3@@GCC_3.0+0x260>
    545c:	cmp	x2, x1
    5460:	b.ls	5528 <__divti3@@GCC_3.0+0x104>  // b.plast
    5464:	clz	x0, x2
    5468:	cbz	x0, 5484 <__divti3@@GCC_3.0+0x60>
    546c:	neg	w3, w0
    5470:	lsl	x5, x1, x0
    5474:	lsl	x4, x2, x0
    5478:	lsr	x3, x8, x3
    547c:	orr	x5, x3, x5
    5480:	lsl	x9, x8, x0
    5484:	lsr	x1, x4, #32
    5488:	and	x8, x4, #0xffffffff
    548c:	udiv	x2, x5, x1
    5490:	msub	x5, x2, x1, x5
    5494:	mul	x10, x8, x2
    5498:	extr	x3, x5, x9, #32
    549c:	cmp	x10, x3
    54a0:	b.ls	5518 <__divti3@@GCC_3.0+0xf4>  // b.plast
    54a4:	sub	x0, x2, #0x1
    54a8:	adds	x3, x4, x3
    54ac:	b.cs	54c0 <__divti3@@GCC_3.0+0x9c>  // b.hs, b.nlast
    54b0:	cmp	x10, x3
    54b4:	b.ls	54c0 <__divti3@@GCC_3.0+0x9c>  // b.plast
    54b8:	sub	x0, x2, #0x2
    54bc:	add	x3, x3, x4
    54c0:	sub	x3, x3, x10
    54c4:	and	x9, x9, #0xffffffff
    54c8:	udiv	x5, x3, x1
    54cc:	msub	x3, x5, x1, x3
    54d0:	mul	x8, x8, x5
    54d4:	orr	x3, x9, x3, lsl #32
    54d8:	cmp	x8, x3
    54dc:	b.ls	5520 <__divti3@@GCC_3.0+0xfc>  // b.plast
    54e0:	sub	x1, x5, #0x1
    54e4:	adds	x3, x4, x3
    54e8:	b.cs	54f8 <__divti3@@GCC_3.0+0xd4>  // b.hs, b.nlast
    54ec:	cmp	x8, x3
    54f0:	b.ls	54f8 <__divti3@@GCC_3.0+0xd4>  // b.plast
    54f4:	sub	x1, x5, #0x2
    54f8:	orr	x0, x1, x0, lsl #32
    54fc:	mov	x1, x6
    5500:	cbz	x7, 550c <__divti3@@GCC_3.0+0xe8>
    5504:	negs	x0, x0
    5508:	ngc	x1, x6
    550c:	ret
    5510:	mov	x7, #0x0                   	// #0
    5514:	b	5438 <__divti3@@GCC_3.0+0x14>
    5518:	mov	x0, x2
    551c:	b	54c0 <__divti3@@GCC_3.0+0x9c>
    5520:	mov	x1, x5
    5524:	b	54f8 <__divti3@@GCC_3.0+0xd4>
    5528:	cbnz	x2, 5534 <__divti3@@GCC_3.0+0x110>
    552c:	mov	x4, #0x1                   	// #1
    5530:	udiv	x4, x4, x3
    5534:	clz	x2, x4
    5538:	cbnz	x2, 55c0 <__divti3@@GCC_3.0+0x19c>
    553c:	sub	x1, x1, x4
    5540:	mov	x6, #0x1                   	// #1
    5544:	lsr	x3, x4, #32
    5548:	and	x5, x4, #0xffffffff
    554c:	udiv	x8, x1, x3
    5550:	msub	x1, x8, x3, x1
    5554:	mul	x10, x5, x8
    5558:	extr	x2, x1, x9, #32
    555c:	cmp	x10, x2
    5560:	b.ls	5674 <__divti3@@GCC_3.0+0x250>  // b.plast
    5564:	sub	x0, x8, #0x1
    5568:	adds	x2, x4, x2
    556c:	b.cs	5580 <__divti3@@GCC_3.0+0x15c>  // b.hs, b.nlast
    5570:	cmp	x10, x2
    5574:	b.ls	5580 <__divti3@@GCC_3.0+0x15c>  // b.plast
    5578:	sub	x0, x8, #0x2
    557c:	add	x2, x2, x4
    5580:	sub	x2, x2, x10
    5584:	and	x9, x9, #0xffffffff
    5588:	udiv	x1, x2, x3
    558c:	msub	x2, x1, x3, x2
    5590:	mul	x3, x5, x1
    5594:	orr	x2, x9, x2, lsl #32
    5598:	cmp	x3, x2
    559c:	b.ls	567c <__divti3@@GCC_3.0+0x258>  // b.plast
    55a0:	sub	x5, x1, #0x1
    55a4:	adds	x4, x4, x2
    55a8:	b.cs	55b8 <__divti3@@GCC_3.0+0x194>  // b.hs, b.nlast
    55ac:	cmp	x3, x4
    55b0:	b.ls	55b8 <__divti3@@GCC_3.0+0x194>  // b.plast
    55b4:	sub	x5, x1, #0x2
    55b8:	orr	x0, x5, x0, lsl #32
    55bc:	b	54fc <__divti3@@GCC_3.0+0xd8>
    55c0:	mov	x0, #0x40                  	// #64
    55c4:	sub	x0, x0, x2
    55c8:	lsl	x4, x4, x2
    55cc:	lsr	x5, x1, x0
    55d0:	lsr	x0, x8, x0
    55d4:	lsl	x1, x1, x2
    55d8:	orr	x1, x0, x1
    55dc:	lsr	x0, x4, #32
    55e0:	lsl	x9, x8, x2
    55e4:	and	x2, x4, #0xffffffff
    55e8:	udiv	x3, x5, x0
    55ec:	msub	x5, x3, x0, x5
    55f0:	mul	x8, x2, x3
    55f4:	extr	x5, x5, x1, #32
    55f8:	cmp	x8, x5
    55fc:	b.ls	5664 <__divti3@@GCC_3.0+0x240>  // b.plast
    5600:	sub	x6, x3, #0x1
    5604:	adds	x5, x4, x5
    5608:	b.cs	561c <__divti3@@GCC_3.0+0x1f8>  // b.hs, b.nlast
    560c:	cmp	x8, x5
    5610:	b.ls	561c <__divti3@@GCC_3.0+0x1f8>  // b.plast
    5614:	sub	x6, x3, #0x2
    5618:	add	x5, x5, x4
    561c:	sub	x5, x5, x8
    5620:	and	x1, x1, #0xffffffff
    5624:	udiv	x3, x5, x0
    5628:	msub	x0, x3, x0, x5
    562c:	mul	x2, x2, x3
    5630:	orr	x1, x1, x0, lsl #32
    5634:	cmp	x2, x1
    5638:	b.ls	566c <__divti3@@GCC_3.0+0x248>  // b.plast
    563c:	sub	x0, x3, #0x1
    5640:	adds	x1, x4, x1
    5644:	b.cs	5658 <__divti3@@GCC_3.0+0x234>  // b.hs, b.nlast
    5648:	cmp	x2, x1
    564c:	b.ls	5658 <__divti3@@GCC_3.0+0x234>  // b.plast
    5650:	sub	x0, x3, #0x2
    5654:	add	x1, x1, x4
    5658:	sub	x1, x1, x2
    565c:	orr	x6, x0, x6, lsl #32
    5660:	b	5544 <__divti3@@GCC_3.0+0x120>
    5664:	mov	x6, x3
    5668:	b	561c <__divti3@@GCC_3.0+0x1f8>
    566c:	mov	x0, x3
    5670:	b	5658 <__divti3@@GCC_3.0+0x234>
    5674:	mov	x0, x8
    5678:	b	5580 <__divti3@@GCC_3.0+0x15c>
    567c:	mov	x5, x1
    5680:	b	55b8 <__divti3@@GCC_3.0+0x194>
    5684:	cmp	x3, x1
    5688:	b.hi	57bc <__divti3@@GCC_3.0+0x398>  // b.pmore
    568c:	clz	x10, x3
    5690:	cbnz	x10, 56a4 <__divti3@@GCC_3.0+0x280>
    5694:	ccmp	x2, x8, #0x0, cs  // cs = hs, nlast
    5698:	cset	x0, ls  // ls = plast
    569c:	mov	x6, #0x0                   	// #0
    56a0:	b	54fc <__divti3@@GCC_3.0+0xd8>
    56a4:	mov	x9, #0x40                  	// #64
    56a8:	sub	x9, x9, x10
    56ac:	lsl	x3, x3, x10
    56b0:	lsr	x6, x2, x9
    56b4:	orr	x6, x6, x3
    56b8:	lsr	x5, x1, x9
    56bc:	and	x0, x6, #0xffffffff
    56c0:	lsr	x4, x6, #32
    56c4:	lsr	x9, x8, x9
    56c8:	lsl	x1, x1, x10
    56cc:	orr	x1, x9, x1
    56d0:	lsl	x2, x2, x10
    56d4:	udiv	x9, x5, x4
    56d8:	msub	x5, x9, x4, x5
    56dc:	mul	x11, x0, x9
    56e0:	extr	x5, x5, x1, #32
    56e4:	cmp	x11, x5
    56e8:	b.ls	57ac <__divti3@@GCC_3.0+0x388>  // b.plast
    56ec:	sub	x3, x9, #0x1
    56f0:	adds	x5, x6, x5
    56f4:	b.cs	5708 <__divti3@@GCC_3.0+0x2e4>  // b.hs, b.nlast
    56f8:	cmp	x11, x5
    56fc:	b.ls	5708 <__divti3@@GCC_3.0+0x2e4>  // b.plast
    5700:	sub	x3, x9, #0x2
    5704:	add	x5, x5, x6
    5708:	sub	x5, x5, x11
    570c:	and	x1, x1, #0xffffffff
    5710:	udiv	x9, x5, x4
    5714:	msub	x4, x9, x4, x5
    5718:	mul	x0, x0, x9
    571c:	orr	x1, x1, x4, lsl #32
    5720:	cmp	x0, x1
    5724:	b.ls	57b4 <__divti3@@GCC_3.0+0x390>  // b.plast
    5728:	sub	x4, x9, #0x1
    572c:	adds	x1, x6, x1
    5730:	b.cs	5744 <__divti3@@GCC_3.0+0x320>  // b.hs, b.nlast
    5734:	cmp	x0, x1
    5738:	b.ls	5744 <__divti3@@GCC_3.0+0x320>  // b.plast
    573c:	sub	x4, x9, #0x2
    5740:	add	x1, x1, x6
    5744:	sub	x1, x1, x0
    5748:	orr	x0, x4, x3, lsl #32
    574c:	and	x5, x2, #0xffffffff
    5750:	mov	w4, w4
    5754:	lsr	x3, x0, #32
    5758:	lsr	x2, x2, #32
    575c:	mul	x6, x4, x5
    5760:	mul	x5, x3, x5
    5764:	madd	x4, x4, x2, x5
    5768:	mul	x3, x3, x2
    576c:	add	x4, x4, x6, lsr #32
    5770:	cmp	x5, x4
    5774:	b.ls	5780 <__divti3@@GCC_3.0+0x35c>  // b.plast
    5778:	mov	x2, #0x100000000           	// #4294967296
    577c:	add	x3, x3, x2
    5780:	add	x3, x3, x4, lsr #32
    5784:	cmp	x1, x3
    5788:	b.cc	57a4 <__divti3@@GCC_3.0+0x380>  // b.lo, b.ul, b.last
    578c:	and	x6, x6, #0xffffffff
    5790:	lsl	x8, x8, x10
    5794:	add	x4, x6, x4, lsl #32
    5798:	cmp	x8, x4
    579c:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    57a0:	b.ne	569c <__divti3@@GCC_3.0+0x278>  // b.any
    57a4:	sub	x0, x0, #0x1
    57a8:	b	569c <__divti3@@GCC_3.0+0x278>
    57ac:	mov	x3, x9
    57b0:	b	5708 <__divti3@@GCC_3.0+0x2e4>
    57b4:	mov	x4, x9
    57b8:	b	5744 <__divti3@@GCC_3.0+0x320>
    57bc:	mov	x6, #0x0                   	// #0
    57c0:	mov	x0, #0x0                   	// #0
    57c4:	b	54fc <__divti3@@GCC_3.0+0xd8>

00000000000057c8 <__modti3@@GCC_3.0>:
    57c8:	tbz	x1, #63, 58a8 <__modti3@@GCC_3.0+0xe0>
    57cc:	negs	x0, x0
    57d0:	mov	x7, #0xffffffffffffffff    	// #-1
    57d4:	ngc	x1, x1
    57d8:	tbz	x3, #63, 57e4 <__modti3@@GCC_3.0+0x1c>
    57dc:	negs	x2, x2
    57e0:	ngc	x3, x3
    57e4:	mov	x6, x2
    57e8:	mov	x5, x0
    57ec:	mov	x4, x1
    57f0:	cbnz	x3, 59cc <__modti3@@GCC_3.0+0x204>
    57f4:	cmp	x2, x1
    57f8:	b.ls	58b0 <__modti3@@GCC_3.0+0xe8>  // b.plast
    57fc:	clz	x0, x2
    5800:	mov	x8, x0
    5804:	cbz	x0, 5820 <__modti3@@GCC_3.0+0x58>
    5808:	lsl	x4, x1, x0
    580c:	neg	w1, w0
    5810:	lsl	x6, x2, x0
    5814:	lsr	x1, x5, x1
    5818:	orr	x4, x1, x4
    581c:	lsl	x5, x5, x0
    5820:	lsr	x1, x6, #32
    5824:	and	x0, x6, #0xffffffff
    5828:	udiv	x2, x4, x1
    582c:	msub	x4, x2, x1, x4
    5830:	mul	x2, x0, x2
    5834:	extr	x4, x4, x5, #32
    5838:	cmp	x2, x4
    583c:	b.ls	5854 <__modti3@@GCC_3.0+0x8c>  // b.plast
    5840:	adds	x4, x6, x4
    5844:	b.cs	5854 <__modti3@@GCC_3.0+0x8c>  // b.hs, b.nlast
    5848:	cmp	x2, x4
    584c:	b.ls	5854 <__modti3@@GCC_3.0+0x8c>  // b.plast
    5850:	add	x4, x4, x6
    5854:	sub	x4, x4, x2
    5858:	and	x5, x5, #0xffffffff
    585c:	udiv	x2, x4, x1
    5860:	msub	x4, x2, x1, x4
    5864:	mul	x0, x0, x2
    5868:	orr	x4, x5, x4, lsl #32
    586c:	cmp	x0, x4
    5870:	b.ls	5888 <__modti3@@GCC_3.0+0xc0>  // b.plast
    5874:	adds	x4, x6, x4
    5878:	b.cs	5888 <__modti3@@GCC_3.0+0xc0>  // b.hs, b.nlast
    587c:	cmp	x0, x4
    5880:	b.ls	5888 <__modti3@@GCC_3.0+0xc0>  // b.plast
    5884:	add	x4, x4, x6
    5888:	sub	x5, x4, x0
    588c:	lsr	x0, x5, x8
    5890:	mov	x1, #0x0                   	// #0
    5894:	cbz	x7, 58a4 <__modti3@@GCC_3.0+0xdc>
    5898:	negs	x5, x0
    589c:	ngc	x1, x1
    58a0:	mov	x0, x5
    58a4:	ret
    58a8:	mov	x7, #0x0                   	// #0
    58ac:	b	57d8 <__modti3@@GCC_3.0+0x10>
    58b0:	cbnz	x2, 58bc <__modti3@@GCC_3.0+0xf4>
    58b4:	mov	x6, #0x1                   	// #1
    58b8:	udiv	x6, x6, x3
    58bc:	clz	x3, x6
    58c0:	mov	x8, x3
    58c4:	cbnz	x3, 593c <__modti3@@GCC_3.0+0x174>
    58c8:	sub	x1, x1, x6
    58cc:	lsr	x2, x6, #32
    58d0:	and	x0, x6, #0xffffffff
    58d4:	udiv	x3, x1, x2
    58d8:	msub	x1, x3, x2, x1
    58dc:	mul	x3, x0, x3
    58e0:	extr	x1, x1, x5, #32
    58e4:	cmp	x3, x1
    58e8:	b.ls	5900 <__modti3@@GCC_3.0+0x138>  // b.plast
    58ec:	adds	x1, x6, x1
    58f0:	b.cs	5900 <__modti3@@GCC_3.0+0x138>  // b.hs, b.nlast
    58f4:	cmp	x3, x1
    58f8:	b.ls	5900 <__modti3@@GCC_3.0+0x138>  // b.plast
    58fc:	add	x1, x1, x6
    5900:	sub	x1, x1, x3
    5904:	and	x5, x5, #0xffffffff
    5908:	udiv	x4, x1, x2
    590c:	msub	x1, x4, x2, x1
    5910:	mul	x0, x0, x4
    5914:	orr	x5, x5, x1, lsl #32
    5918:	cmp	x0, x5
    591c:	b.ls	5934 <__modti3@@GCC_3.0+0x16c>  // b.plast
    5920:	adds	x5, x6, x5
    5924:	b.cs	5934 <__modti3@@GCC_3.0+0x16c>  // b.hs, b.nlast
    5928:	cmp	x0, x5
    592c:	b.ls	5934 <__modti3@@GCC_3.0+0x16c>  // b.plast
    5930:	add	x5, x5, x6
    5934:	sub	x5, x5, x0
    5938:	b	588c <__modti3@@GCC_3.0+0xc4>
    593c:	mov	x2, #0x40                  	// #64
    5940:	sub	x2, x2, x3
    5944:	lsl	x6, x6, x3
    5948:	and	x4, x6, #0xffffffff
    594c:	lsr	x9, x1, x2
    5950:	lsr	x2, x0, x2
    5954:	lsl	x1, x1, x3
    5958:	orr	x1, x2, x1
    595c:	lsr	x2, x6, #32
    5960:	lsl	x5, x0, x3
    5964:	udiv	x3, x9, x2
    5968:	msub	x9, x3, x2, x9
    596c:	mul	x0, x4, x3
    5970:	extr	x3, x9, x1, #32
    5974:	cmp	x0, x3
    5978:	b.ls	5990 <__modti3@@GCC_3.0+0x1c8>  // b.plast
    597c:	adds	x3, x6, x3
    5980:	b.cs	5990 <__modti3@@GCC_3.0+0x1c8>  // b.hs, b.nlast
    5984:	cmp	x0, x3
    5988:	b.ls	5990 <__modti3@@GCC_3.0+0x1c8>  // b.plast
    598c:	add	x3, x3, x6
    5990:	sub	x3, x3, x0
    5994:	and	x1, x1, #0xffffffff
    5998:	udiv	x0, x3, x2
    599c:	msub	x2, x0, x2, x3
    59a0:	mul	x4, x4, x0
    59a4:	orr	x1, x1, x2, lsl #32
    59a8:	cmp	x4, x1
    59ac:	b.ls	59c4 <__modti3@@GCC_3.0+0x1fc>  // b.plast
    59b0:	adds	x1, x6, x1
    59b4:	b.cs	59c4 <__modti3@@GCC_3.0+0x1fc>  // b.hs, b.nlast
    59b8:	cmp	x4, x1
    59bc:	b.ls	59c4 <__modti3@@GCC_3.0+0x1fc>  // b.plast
    59c0:	add	x1, x1, x6
    59c4:	sub	x1, x1, x4
    59c8:	b	58cc <__modti3@@GCC_3.0+0x104>
    59cc:	cmp	x3, x1
    59d0:	b.hi	5894 <__modti3@@GCC_3.0+0xcc>  // b.pmore
    59d4:	clz	x10, x3
    59d8:	cbnz	x10, 59fc <__modti3@@GCC_3.0+0x234>
    59dc:	cmp	x3, x1
    59e0:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
    59e4:	b.hi	59f0 <__modti3@@GCC_3.0+0x228>  // b.pmore
    59e8:	subs	x5, x0, x2
    59ec:	sbc	x4, x1, x3
    59f0:	mov	x0, x5
    59f4:	mov	x1, x4
    59f8:	b	5894 <__modti3@@GCC_3.0+0xcc>
    59fc:	mov	x6, #0x40                  	// #64
    5a00:	sub	x6, x6, x10
    5a04:	lsl	x3, x3, x10
    5a08:	lsr	x11, x2, x6
    5a0c:	orr	x11, x11, x3
    5a10:	lsr	x8, x1, x6
    5a14:	and	x3, x11, #0xffffffff
    5a18:	lsr	x5, x11, #32
    5a1c:	lsl	x1, x1, x10
    5a20:	lsr	x4, x0, x6
    5a24:	orr	x4, x4, x1
    5a28:	lsl	x2, x2, x10
    5a2c:	udiv	x1, x8, x5
    5a30:	lsl	x0, x0, x10
    5a34:	msub	x8, x1, x5, x8
    5a38:	mul	x12, x3, x1
    5a3c:	extr	x8, x8, x4, #32
    5a40:	cmp	x12, x8
    5a44:	b.ls	5b24 <__modti3@@GCC_3.0+0x35c>  // b.plast
    5a48:	sub	x9, x1, #0x1
    5a4c:	adds	x8, x11, x8
    5a50:	b.cs	5a64 <__modti3@@GCC_3.0+0x29c>  // b.hs, b.nlast
    5a54:	cmp	x12, x8
    5a58:	b.ls	5a64 <__modti3@@GCC_3.0+0x29c>  // b.plast
    5a5c:	sub	x9, x1, #0x2
    5a60:	add	x8, x8, x11
    5a64:	sub	x8, x8, x12
    5a68:	udiv	x12, x8, x5
    5a6c:	msub	x5, x12, x5, x8
    5a70:	mul	x1, x3, x12
    5a74:	and	x3, x4, #0xffffffff
    5a78:	orr	x3, x3, x5, lsl #32
    5a7c:	cmp	x1, x3
    5a80:	b.ls	5b2c <__modti3@@GCC_3.0+0x364>  // b.plast
    5a84:	sub	x8, x12, #0x1
    5a88:	adds	x3, x11, x3
    5a8c:	b.cs	5aa0 <__modti3@@GCC_3.0+0x2d8>  // b.hs, b.nlast
    5a90:	cmp	x1, x3
    5a94:	b.ls	5aa0 <__modti3@@GCC_3.0+0x2d8>  // b.plast
    5a98:	sub	x8, x12, #0x2
    5a9c:	add	x3, x3, x11
    5aa0:	sub	x3, x3, x1
    5aa4:	orr	x1, x8, x9, lsl #32
    5aa8:	mov	w8, w8
    5aac:	and	x9, x2, #0xffffffff
    5ab0:	lsr	x1, x1, #32
    5ab4:	lsr	x5, x2, #32
    5ab8:	mul	x4, x8, x9
    5abc:	mul	x9, x1, x9
    5ac0:	madd	x8, x8, x5, x9
    5ac4:	mul	x1, x1, x5
    5ac8:	add	x8, x8, x4, lsr #32
    5acc:	cmp	x9, x8
    5ad0:	b.ls	5adc <__modti3@@GCC_3.0+0x314>  // b.plast
    5ad4:	mov	x5, #0x100000000           	// #4294967296
    5ad8:	add	x1, x1, x5
    5adc:	add	x1, x1, x8, lsr #32
    5ae0:	and	x4, x4, #0xffffffff
    5ae4:	add	x8, x4, x8, lsl #32
    5ae8:	cmp	x3, x1
    5aec:	b.cc	5af8 <__modti3@@GCC_3.0+0x330>  // b.lo, b.ul, b.last
    5af0:	ccmp	x0, x8, #0x2, eq  // eq = none
    5af4:	b.cs	5b04 <__modti3@@GCC_3.0+0x33c>  // b.hs, b.nlast
    5af8:	subs	x8, x8, x2
    5afc:	cinc	x2, x11, cc  // cc = lo, ul, last
    5b00:	sub	x1, x1, x2
    5b04:	subs	x4, x0, x8
    5b08:	cmp	x0, x8
    5b0c:	sbc	x1, x3, x1
    5b10:	lsr	x0, x4, x10
    5b14:	lsl	x5, x1, x6
    5b18:	orr	x0, x5, x0
    5b1c:	lsr	x1, x1, x10
    5b20:	b	5894 <__modti3@@GCC_3.0+0xcc>
    5b24:	mov	x9, x1
    5b28:	b	5a64 <__modti3@@GCC_3.0+0x29c>
    5b2c:	mov	x8, x12
    5b30:	b	5aa0 <__modti3@@GCC_3.0+0x2d8>

0000000000005b34 <__divmodti4@@GCC_7.0.0>:
    5b34:	tbz	x1, #63, 5c48 <__divmodti4@@GCC_7.0.0+0x114>
    5b38:	negs	x5, x0
    5b3c:	mov	x8, #0xffffffffffffffff    	// #-1
    5b40:	ngc	x6, x1
    5b44:	mov	x0, x5
    5b48:	mov	x1, x6
    5b4c:	tbz	x3, #63, 5c50 <__divmodti4@@GCC_7.0.0+0x11c>
    5b50:	negs	x2, x2
    5b54:	mvn	x9, x8
    5b58:	ngc	x3, x3
    5b5c:	mov	x7, x2
    5b60:	mov	x10, x3
    5b64:	mov	x5, x0
    5b68:	mov	x6, x1
    5b6c:	cbnz	x3, 5dd0 <__divmodti4@@GCC_7.0.0+0x29c>
    5b70:	cmp	x2, x1
    5b74:	b.ls	5c68 <__divmodti4@@GCC_7.0.0+0x134>  // b.plast
    5b78:	clz	x0, x2
    5b7c:	mov	x11, x0
    5b80:	cbz	x0, 5b9c <__divmodti4@@GCC_7.0.0+0x68>
    5b84:	lsl	x6, x1, x0
    5b88:	neg	w1, w0
    5b8c:	lsl	x7, x2, x0
    5b90:	lsr	x1, x5, x1
    5b94:	orr	x6, x1, x6
    5b98:	lsl	x5, x5, x0
    5b9c:	lsr	x2, x7, #32
    5ba0:	and	x1, x7, #0xffffffff
    5ba4:	udiv	x3, x6, x2
    5ba8:	msub	x6, x3, x2, x6
    5bac:	mul	x0, x1, x3
    5bb0:	extr	x6, x6, x5, #32
    5bb4:	cmp	x0, x6
    5bb8:	b.ls	5c58 <__divmodti4@@GCC_7.0.0+0x124>  // b.plast
    5bbc:	sub	x12, x3, #0x1
    5bc0:	adds	x6, x7, x6
    5bc4:	b.cs	5bd8 <__divmodti4@@GCC_7.0.0+0xa4>  // b.hs, b.nlast
    5bc8:	cmp	x0, x6
    5bcc:	b.ls	5bd8 <__divmodti4@@GCC_7.0.0+0xa4>  // b.plast
    5bd0:	sub	x12, x3, #0x2
    5bd4:	add	x6, x6, x7
    5bd8:	sub	x6, x6, x0
    5bdc:	udiv	x3, x6, x2
    5be0:	msub	x2, x3, x2, x6
    5be4:	and	x6, x5, #0xffffffff
    5be8:	mul	x1, x1, x3
    5bec:	orr	x6, x6, x2, lsl #32
    5bf0:	cmp	x1, x6
    5bf4:	b.ls	5c60 <__divmodti4@@GCC_7.0.0+0x12c>  // b.plast
    5bf8:	sub	x0, x3, #0x1
    5bfc:	adds	x6, x7, x6
    5c00:	b.cs	5c14 <__divmodti4@@GCC_7.0.0+0xe0>  // b.hs, b.nlast
    5c04:	cmp	x1, x6
    5c08:	b.ls	5c14 <__divmodti4@@GCC_7.0.0+0xe0>  // b.plast
    5c0c:	sub	x0, x3, #0x2
    5c10:	add	x6, x6, x7
    5c14:	sub	x5, x6, x1
    5c18:	orr	x0, x0, x12, lsl #32
    5c1c:	lsr	x5, x5, x11
    5c20:	mov	x6, #0x0                   	// #0
    5c24:	mov	x1, x10
    5c28:	cbz	x9, 5c34 <__divmodti4@@GCC_7.0.0+0x100>
    5c2c:	negs	x0, x0
    5c30:	ngc	x1, x10
    5c34:	cbz	x8, 5c40 <__divmodti4@@GCC_7.0.0+0x10c>
    5c38:	negs	x5, x5
    5c3c:	ngc	x6, x6
    5c40:	stp	x5, x6, [x4]
    5c44:	ret
    5c48:	mov	x8, #0x0                   	// #0
    5c4c:	b	5b4c <__divmodti4@@GCC_7.0.0+0x18>
    5c50:	mov	x9, x8
    5c54:	b	5b5c <__divmodti4@@GCC_7.0.0+0x28>
    5c58:	mov	x12, x3
    5c5c:	b	5bd8 <__divmodti4@@GCC_7.0.0+0xa4>
    5c60:	mov	x0, x3
    5c64:	b	5c14 <__divmodti4@@GCC_7.0.0+0xe0>
    5c68:	cbnz	x2, 5c74 <__divmodti4@@GCC_7.0.0+0x140>
    5c6c:	mov	x7, #0x1                   	// #1
    5c70:	udiv	x7, x7, x3
    5c74:	clz	x2, x7
    5c78:	mov	x11, x2
    5c7c:	cbnz	x2, 5d0c <__divmodti4@@GCC_7.0.0+0x1d8>
    5c80:	sub	x6, x1, x7
    5c84:	mov	x10, #0x1                   	// #1
    5c88:	lsr	x3, x7, #32
    5c8c:	and	x1, x7, #0xffffffff
    5c90:	udiv	x12, x6, x3
    5c94:	msub	x6, x12, x3, x6
    5c98:	mul	x0, x1, x12
    5c9c:	extr	x2, x6, x5, #32
    5ca0:	cmp	x0, x2
    5ca4:	b.ls	5dc0 <__divmodti4@@GCC_7.0.0+0x28c>  // b.plast
    5ca8:	sub	x13, x12, #0x1
    5cac:	adds	x2, x7, x2
    5cb0:	b.cs	5cc4 <__divmodti4@@GCC_7.0.0+0x190>  // b.hs, b.nlast
    5cb4:	cmp	x0, x2
    5cb8:	b.ls	5cc4 <__divmodti4@@GCC_7.0.0+0x190>  // b.plast
    5cbc:	sub	x13, x12, #0x2
    5cc0:	add	x2, x2, x7
    5cc4:	sub	x2, x2, x0
    5cc8:	and	x5, x5, #0xffffffff
    5ccc:	udiv	x12, x2, x3
    5cd0:	msub	x2, x12, x3, x2
    5cd4:	mul	x6, x1, x12
    5cd8:	orr	x5, x5, x2, lsl #32
    5cdc:	cmp	x6, x5
    5ce0:	b.ls	5dc8 <__divmodti4@@GCC_7.0.0+0x294>  // b.plast
    5ce4:	sub	x0, x12, #0x1
    5ce8:	adds	x5, x7, x5
    5cec:	b.cs	5d00 <__divmodti4@@GCC_7.0.0+0x1cc>  // b.hs, b.nlast
    5cf0:	cmp	x6, x5
    5cf4:	b.ls	5d00 <__divmodti4@@GCC_7.0.0+0x1cc>  // b.plast
    5cf8:	sub	x0, x12, #0x2
    5cfc:	add	x5, x5, x7
    5d00:	sub	x5, x5, x6
    5d04:	orr	x0, x0, x13, lsl #32
    5d08:	b	5c1c <__divmodti4@@GCC_7.0.0+0xe8>
    5d0c:	lsl	x7, x7, x2
    5d10:	mov	x12, #0x40                  	// #64
    5d14:	sub	x12, x12, x2
    5d18:	lsr	x3, x7, #32
    5d1c:	lsl	x5, x0, x2
    5d20:	lsr	x10, x1, x12
    5d24:	lsr	x12, x0, x12
    5d28:	udiv	x0, x10, x3
    5d2c:	lsl	x6, x1, x2
    5d30:	orr	x12, x12, x6
    5d34:	and	x6, x7, #0xffffffff
    5d38:	msub	x10, x0, x3, x10
    5d3c:	mul	x1, x6, x0
    5d40:	extr	x10, x10, x12, #32
    5d44:	cmp	x1, x10
    5d48:	b.ls	5db0 <__divmodti4@@GCC_7.0.0+0x27c>  // b.plast
    5d4c:	sub	x13, x0, #0x1
    5d50:	adds	x10, x7, x10
    5d54:	b.cs	5d68 <__divmodti4@@GCC_7.0.0+0x234>  // b.hs, b.nlast
    5d58:	cmp	x1, x10
    5d5c:	b.ls	5d68 <__divmodti4@@GCC_7.0.0+0x234>  // b.plast
    5d60:	sub	x13, x0, #0x2
    5d64:	add	x10, x10, x7
    5d68:	sub	x10, x10, x1
    5d6c:	and	x12, x12, #0xffffffff
    5d70:	udiv	x0, x10, x3
    5d74:	msub	x3, x0, x3, x10
    5d78:	mul	x2, x6, x0
    5d7c:	orr	x6, x12, x3, lsl #32
    5d80:	cmp	x2, x6
    5d84:	b.ls	5db8 <__divmodti4@@GCC_7.0.0+0x284>  // b.plast
    5d88:	sub	x1, x0, #0x1
    5d8c:	adds	x6, x7, x6
    5d90:	b.cs	5da4 <__divmodti4@@GCC_7.0.0+0x270>  // b.hs, b.nlast
    5d94:	cmp	x2, x6
    5d98:	b.ls	5da4 <__divmodti4@@GCC_7.0.0+0x270>  // b.plast
    5d9c:	sub	x1, x0, #0x2
    5da0:	add	x6, x6, x7
    5da4:	sub	x6, x6, x2
    5da8:	orr	x10, x1, x13, lsl #32
    5dac:	b	5c88 <__divmodti4@@GCC_7.0.0+0x154>
    5db0:	mov	x13, x0
    5db4:	b	5d68 <__divmodti4@@GCC_7.0.0+0x234>
    5db8:	mov	x1, x0
    5dbc:	b	5da4 <__divmodti4@@GCC_7.0.0+0x270>
    5dc0:	mov	x13, x12
    5dc4:	b	5cc4 <__divmodti4@@GCC_7.0.0+0x190>
    5dc8:	mov	x0, x12
    5dcc:	b	5d00 <__divmodti4@@GCC_7.0.0+0x1cc>
    5dd0:	cmp	x3, x1
    5dd4:	b.ls	5de4 <__divmodti4@@GCC_7.0.0+0x2b0>  // b.plast
    5dd8:	mov	x10, #0x0                   	// #0
    5ddc:	mov	x0, #0x0                   	// #0
    5de0:	b	5c24 <__divmodti4@@GCC_7.0.0+0xf0>
    5de4:	clz	x11, x3
    5de8:	cbnz	x11, 5e14 <__divmodti4@@GCC_7.0.0+0x2e0>
    5dec:	cmp	x3, x1
    5df0:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
    5df4:	b.hi	5e0c <__divmodti4@@GCC_7.0.0+0x2d8>  // b.pmore
    5df8:	subs	x5, x0, x2
    5dfc:	mov	x0, #0x1                   	// #1
    5e00:	sbc	x6, x1, x3
    5e04:	mov	x10, #0x0                   	// #0
    5e08:	b	5c24 <__divmodti4@@GCC_7.0.0+0xf0>
    5e0c:	mov	x0, #0x0                   	// #0
    5e10:	b	5e04 <__divmodti4@@GCC_7.0.0+0x2d0>
    5e14:	mov	x7, #0x40                  	// #64
    5e18:	sub	x7, x7, x11
    5e1c:	lsl	x3, x3, x11
    5e20:	lsr	x12, x2, x7
    5e24:	orr	x12, x12, x3
    5e28:	lsr	x10, x1, x7
    5e2c:	lsr	x3, x12, #32
    5e30:	lsr	x6, x0, x7
    5e34:	lsl	x1, x1, x11
    5e38:	orr	x1, x6, x1
    5e3c:	and	x6, x12, #0xffffffff
    5e40:	lsl	x2, x2, x11
    5e44:	udiv	x13, x10, x3
    5e48:	lsl	x5, x0, x11
    5e4c:	msub	x10, x13, x3, x10
    5e50:	mul	x14, x6, x13
    5e54:	extr	x10, x10, x1, #32
    5e58:	cmp	x14, x10
    5e5c:	b.ls	5f40 <__divmodti4@@GCC_7.0.0+0x40c>  // b.plast
    5e60:	sub	x0, x13, #0x1
    5e64:	adds	x10, x12, x10
    5e68:	b.cs	5e7c <__divmodti4@@GCC_7.0.0+0x348>  // b.hs, b.nlast
    5e6c:	cmp	x14, x10
    5e70:	b.ls	5e7c <__divmodti4@@GCC_7.0.0+0x348>  // b.plast
    5e74:	sub	x0, x13, #0x2
    5e78:	add	x10, x10, x12
    5e7c:	sub	x10, x10, x14
    5e80:	and	x1, x1, #0xffffffff
    5e84:	udiv	x13, x10, x3
    5e88:	msub	x3, x13, x3, x10
    5e8c:	mul	x6, x6, x13
    5e90:	orr	x1, x1, x3, lsl #32
    5e94:	cmp	x6, x1
    5e98:	b.ls	5f48 <__divmodti4@@GCC_7.0.0+0x414>  // b.plast
    5e9c:	sub	x3, x13, #0x1
    5ea0:	adds	x1, x12, x1
    5ea4:	b.cs	5eb8 <__divmodti4@@GCC_7.0.0+0x384>  // b.hs, b.nlast
    5ea8:	cmp	x6, x1
    5eac:	b.ls	5eb8 <__divmodti4@@GCC_7.0.0+0x384>  // b.plast
    5eb0:	sub	x3, x13, #0x2
    5eb4:	add	x1, x1, x12
    5eb8:	orr	x0, x3, x0, lsl #32
    5ebc:	and	x10, x2, #0xffffffff
    5ec0:	mov	w3, w3
    5ec4:	sub	x1, x1, x6
    5ec8:	lsr	x6, x0, #32
    5ecc:	lsr	x14, x2, #32
    5ed0:	mul	x13, x3, x10
    5ed4:	mul	x10, x6, x10
    5ed8:	madd	x3, x3, x14, x10
    5edc:	mul	x6, x6, x14
    5ee0:	add	x3, x3, x13, lsr #32
    5ee4:	cmp	x10, x3
    5ee8:	b.ls	5ef4 <__divmodti4@@GCC_7.0.0+0x3c0>  // b.plast
    5eec:	mov	x10, #0x100000000           	// #4294967296
    5ef0:	add	x6, x6, x10
    5ef4:	add	x6, x6, x3, lsr #32
    5ef8:	and	x13, x13, #0xffffffff
    5efc:	add	x3, x13, x3, lsl #32
    5f00:	cmp	x1, x6
    5f04:	b.cc	5f10 <__divmodti4@@GCC_7.0.0+0x3dc>  // b.lo, b.ul, b.last
    5f08:	ccmp	x5, x3, #0x2, eq  // eq = none
    5f0c:	b.cs	5f20 <__divmodti4@@GCC_7.0.0+0x3ec>  // b.hs, b.nlast
    5f10:	subs	x3, x3, x2
    5f14:	sub	x0, x0, #0x1
    5f18:	cinc	x2, x12, cc  // cc = lo, ul, last
    5f1c:	sub	x6, x6, x2
    5f20:	subs	x2, x5, x3
    5f24:	cmp	x5, x3
    5f28:	sbc	x6, x1, x6
    5f2c:	lsr	x1, x2, x11
    5f30:	lsl	x5, x6, x7
    5f34:	orr	x5, x5, x1
    5f38:	lsr	x6, x6, x11
    5f3c:	b	5e04 <__divmodti4@@GCC_7.0.0+0x2d0>
    5f40:	mov	x0, x13
    5f44:	b	5e7c <__divmodti4@@GCC_7.0.0+0x348>
    5f48:	mov	x3, x13
    5f4c:	b	5eb8 <__divmodti4@@GCC_7.0.0+0x384>

0000000000005f50 <__udivti3@@GCC_3.0>:
    5f50:	mov	x4, x1
    5f54:	mov	x8, x0
    5f58:	mov	x5, x2
    5f5c:	mov	x1, x3
    5f60:	mov	x9, x0
    5f64:	mov	x6, x4
    5f68:	cbnz	x3, 617c <__udivti3@@GCC_3.0+0x22c>
    5f6c:	cmp	x2, x4
    5f70:	b.ls	6020 <__udivti3@@GCC_3.0+0xd0>  // b.plast
    5f74:	clz	x0, x2
    5f78:	cbz	x0, 5f94 <__udivti3@@GCC_3.0+0x44>
    5f7c:	lsl	x5, x2, x0
    5f80:	neg	w2, w0
    5f84:	lsl	x6, x4, x0
    5f88:	lsr	x2, x8, x2
    5f8c:	orr	x6, x2, x6
    5f90:	lsl	x9, x8, x0
    5f94:	lsr	x3, x5, #32
    5f98:	and	x7, x5, #0xffffffff
    5f9c:	udiv	x4, x6, x3
    5fa0:	msub	x6, x4, x3, x6
    5fa4:	mul	x8, x7, x4
    5fa8:	extr	x2, x6, x9, #32
    5fac:	cmp	x8, x2
    5fb0:	b.ls	6010 <__udivti3@@GCC_3.0+0xc0>  // b.plast
    5fb4:	sub	x0, x4, #0x1
    5fb8:	adds	x2, x5, x2
    5fbc:	b.cs	5fd0 <__udivti3@@GCC_3.0+0x80>  // b.hs, b.nlast
    5fc0:	cmp	x8, x2
    5fc4:	b.ls	5fd0 <__udivti3@@GCC_3.0+0x80>  // b.plast
    5fc8:	sub	x0, x4, #0x2
    5fcc:	add	x2, x2, x5
    5fd0:	sub	x2, x2, x8
    5fd4:	and	x9, x9, #0xffffffff
    5fd8:	udiv	x6, x2, x3
    5fdc:	msub	x2, x6, x3, x2
    5fe0:	mul	x7, x7, x6
    5fe4:	orr	x2, x9, x2, lsl #32
    5fe8:	cmp	x7, x2
    5fec:	b.ls	6018 <__udivti3@@GCC_3.0+0xc8>  // b.plast
    5ff0:	sub	x3, x6, #0x1
    5ff4:	adds	x2, x5, x2
    5ff8:	b.cs	6008 <__udivti3@@GCC_3.0+0xb8>  // b.hs, b.nlast
    5ffc:	cmp	x7, x2
    6000:	b.ls	6008 <__udivti3@@GCC_3.0+0xb8>  // b.plast
    6004:	sub	x3, x6, #0x2
    6008:	orr	x0, x3, x0, lsl #32
    600c:	ret
    6010:	mov	x0, x4
    6014:	b	5fd0 <__udivti3@@GCC_3.0+0x80>
    6018:	mov	x3, x6
    601c:	b	6008 <__udivti3@@GCC_3.0+0xb8>
    6020:	cbnz	x2, 602c <__udivti3@@GCC_3.0+0xdc>
    6024:	mov	x0, #0x1                   	// #1
    6028:	udiv	x5, x0, x2
    602c:	clz	x1, x5
    6030:	cbnz	x1, 60b8 <__udivti3@@GCC_3.0+0x168>
    6034:	sub	x4, x4, x5
    6038:	mov	x1, #0x1                   	// #1
    603c:	lsr	x2, x5, #32
    6040:	and	x6, x5, #0xffffffff
    6044:	udiv	x3, x4, x2
    6048:	msub	x4, x3, x2, x4
    604c:	mul	x7, x6, x3
    6050:	extr	x4, x4, x9, #32
    6054:	cmp	x7, x4
    6058:	b.ls	616c <__udivti3@@GCC_3.0+0x21c>  // b.plast
    605c:	sub	x0, x3, #0x1
    6060:	adds	x4, x5, x4
    6064:	b.cs	6078 <__udivti3@@GCC_3.0+0x128>  // b.hs, b.nlast
    6068:	cmp	x7, x4
    606c:	b.ls	6078 <__udivti3@@GCC_3.0+0x128>  // b.plast
    6070:	sub	x0, x3, #0x2
    6074:	add	x4, x4, x5
    6078:	sub	x4, x4, x7
    607c:	and	x9, x9, #0xffffffff
    6080:	udiv	x3, x4, x2
    6084:	msub	x4, x3, x2, x4
    6088:	mul	x2, x6, x3
    608c:	orr	x4, x9, x4, lsl #32
    6090:	cmp	x2, x4
    6094:	b.ls	6174 <__udivti3@@GCC_3.0+0x224>  // b.plast
    6098:	sub	x6, x3, #0x1
    609c:	adds	x5, x5, x4
    60a0:	b.cs	60b0 <__udivti3@@GCC_3.0+0x160>  // b.hs, b.nlast
    60a4:	cmp	x2, x5
    60a8:	b.ls	60b0 <__udivti3@@GCC_3.0+0x160>  // b.plast
    60ac:	sub	x6, x3, #0x2
    60b0:	orr	x0, x6, x0, lsl #32
    60b4:	b	600c <__udivti3@@GCC_3.0+0xbc>
    60b8:	mov	x0, #0x40                  	// #64
    60bc:	sub	x0, x0, x1
    60c0:	lsl	x5, x5, x1
    60c4:	and	x2, x5, #0xffffffff
    60c8:	lsr	x3, x4, x0
    60cc:	lsr	x0, x8, x0
    60d0:	lsl	x4, x4, x1
    60d4:	orr	x4, x0, x4
    60d8:	lsr	x0, x5, #32
    60dc:	lsl	x9, x8, x1
    60e0:	udiv	x6, x3, x0
    60e4:	msub	x3, x6, x0, x3
    60e8:	mul	x1, x2, x6
    60ec:	extr	x3, x3, x4, #32
    60f0:	cmp	x1, x3
    60f4:	b.ls	615c <__udivti3@@GCC_3.0+0x20c>  // b.plast
    60f8:	sub	x7, x6, #0x1
    60fc:	adds	x3, x5, x3
    6100:	b.cs	6114 <__udivti3@@GCC_3.0+0x1c4>  // b.hs, b.nlast
    6104:	cmp	x1, x3
    6108:	b.ls	6114 <__udivti3@@GCC_3.0+0x1c4>  // b.plast
    610c:	sub	x7, x6, #0x2
    6110:	add	x3, x3, x5
    6114:	sub	x3, x3, x1
    6118:	and	x4, x4, #0xffffffff
    611c:	udiv	x6, x3, x0
    6120:	msub	x0, x6, x0, x3
    6124:	mul	x2, x2, x6
    6128:	orr	x4, x4, x0, lsl #32
    612c:	cmp	x2, x4
    6130:	b.ls	6164 <__udivti3@@GCC_3.0+0x214>  // b.plast
    6134:	sub	x1, x6, #0x1
    6138:	adds	x4, x5, x4
    613c:	b.cs	6150 <__udivti3@@GCC_3.0+0x200>  // b.hs, b.nlast
    6140:	cmp	x2, x4
    6144:	b.ls	6150 <__udivti3@@GCC_3.0+0x200>  // b.plast
    6148:	sub	x1, x6, #0x2
    614c:	add	x4, x4, x5
    6150:	sub	x4, x4, x2
    6154:	orr	x1, x1, x7, lsl #32
    6158:	b	603c <__udivti3@@GCC_3.0+0xec>
    615c:	mov	x7, x6
    6160:	b	6114 <__udivti3@@GCC_3.0+0x1c4>
    6164:	mov	x1, x6
    6168:	b	6150 <__udivti3@@GCC_3.0+0x200>
    616c:	mov	x0, x3
    6170:	b	6078 <__udivti3@@GCC_3.0+0x128>
    6174:	mov	x6, x3
    6178:	b	60b0 <__udivti3@@GCC_3.0+0x160>
    617c:	cmp	x3, x4
    6180:	b.hi	62b4 <__udivti3@@GCC_3.0+0x364>  // b.pmore
    6184:	clz	x9, x3
    6188:	cbnz	x9, 619c <__udivti3@@GCC_3.0+0x24c>
    618c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
    6190:	cset	x0, ls  // ls = plast
    6194:	mov	x1, #0x0                   	// #0
    6198:	b	600c <__udivti3@@GCC_3.0+0xbc>
    619c:	mov	x5, #0x40                  	// #64
    61a0:	sub	x5, x5, x9
    61a4:	lsl	x3, x3, x9
    61a8:	lsr	x7, x2, x5
    61ac:	orr	x7, x7, x3
    61b0:	lsr	x6, x4, x5
    61b4:	lsr	x5, x0, x5
    61b8:	and	x0, x7, #0xffffffff
    61bc:	lsl	x4, x4, x9
    61c0:	orr	x4, x5, x4
    61c4:	lsr	x5, x7, #32
    61c8:	lsl	x10, x2, x9
    61cc:	udiv	x1, x6, x5
    61d0:	msub	x6, x1, x5, x6
    61d4:	mul	x2, x0, x1
    61d8:	extr	x6, x6, x4, #32
    61dc:	cmp	x2, x6
    61e0:	b.ls	62a4 <__udivti3@@GCC_3.0+0x354>  // b.plast
    61e4:	sub	x3, x1, #0x1
    61e8:	adds	x6, x7, x6
    61ec:	b.cs	6200 <__udivti3@@GCC_3.0+0x2b0>  // b.hs, b.nlast
    61f0:	cmp	x2, x6
    61f4:	b.ls	6200 <__udivti3@@GCC_3.0+0x2b0>  // b.plast
    61f8:	sub	x3, x1, #0x2
    61fc:	add	x6, x6, x7
    6200:	sub	x6, x6, x2
    6204:	and	x4, x4, #0xffffffff
    6208:	udiv	x2, x6, x5
    620c:	msub	x5, x2, x5, x6
    6210:	mul	x0, x0, x2
    6214:	orr	x4, x4, x5, lsl #32
    6218:	cmp	x0, x4
    621c:	b.ls	62ac <__udivti3@@GCC_3.0+0x35c>  // b.plast
    6220:	sub	x1, x2, #0x1
    6224:	adds	x4, x7, x4
    6228:	b.cs	623c <__udivti3@@GCC_3.0+0x2ec>  // b.hs, b.nlast
    622c:	cmp	x0, x4
    6230:	b.ls	623c <__udivti3@@GCC_3.0+0x2ec>  // b.plast
    6234:	sub	x1, x2, #0x2
    6238:	add	x4, x4, x7
    623c:	sub	x4, x4, x0
    6240:	orr	x0, x1, x3, lsl #32
    6244:	mov	w1, w1
    6248:	and	x3, x10, #0xffffffff
    624c:	lsr	x2, x0, #32
    6250:	lsr	x5, x10, #32
    6254:	mul	x6, x1, x3
    6258:	mul	x3, x2, x3
    625c:	madd	x1, x1, x5, x3
    6260:	mul	x2, x2, x5
    6264:	add	x1, x1, x6, lsr #32
    6268:	cmp	x3, x1
    626c:	b.ls	6278 <__udivti3@@GCC_3.0+0x328>  // b.plast
    6270:	mov	x3, #0x100000000           	// #4294967296
    6274:	add	x2, x2, x3
    6278:	add	x2, x2, x1, lsr #32
    627c:	cmp	x4, x2
    6280:	b.cc	629c <__udivti3@@GCC_3.0+0x34c>  // b.lo, b.ul, b.last
    6284:	and	x6, x6, #0xffffffff
    6288:	lsl	x8, x8, x9
    628c:	add	x1, x6, x1, lsl #32
    6290:	cmp	x8, x1
    6294:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
    6298:	b.ne	6194 <__udivti3@@GCC_3.0+0x244>  // b.any
    629c:	sub	x0, x0, #0x1
    62a0:	b	6194 <__udivti3@@GCC_3.0+0x244>
    62a4:	mov	x3, x1
    62a8:	b	6200 <__udivti3@@GCC_3.0+0x2b0>
    62ac:	mov	x1, x2
    62b0:	b	623c <__udivti3@@GCC_3.0+0x2ec>
    62b4:	mov	x1, #0x0                   	// #0
    62b8:	mov	x0, #0x0                   	// #0
    62bc:	b	600c <__udivti3@@GCC_3.0+0xbc>

00000000000062c0 <__umodti3@@GCC_3.0>:
    62c0:	mov	x6, x2
    62c4:	mov	x5, x0
    62c8:	mov	x4, x1
    62cc:	cbnz	x3, 6490 <__umodti3@@GCC_3.0+0x1d0>
    62d0:	cmp	x2, x1
    62d4:	b.ls	6374 <__umodti3@@GCC_3.0+0xb4>  // b.plast
    62d8:	clz	x0, x2
    62dc:	mov	x8, x0
    62e0:	cbz	x0, 62fc <__umodti3@@GCC_3.0+0x3c>
    62e4:	lsl	x4, x1, x0
    62e8:	neg	w1, w0
    62ec:	lsl	x6, x2, x0
    62f0:	lsr	x1, x5, x1
    62f4:	orr	x4, x1, x4
    62f8:	lsl	x5, x5, x0
    62fc:	lsr	x1, x6, #32
    6300:	and	x0, x6, #0xffffffff
    6304:	udiv	x2, x4, x1
    6308:	msub	x4, x2, x1, x4
    630c:	mul	x2, x0, x2
    6310:	extr	x4, x4, x5, #32
    6314:	cmp	x2, x4
    6318:	b.ls	6330 <__umodti3@@GCC_3.0+0x70>  // b.plast
    631c:	adds	x4, x6, x4
    6320:	b.cs	6330 <__umodti3@@GCC_3.0+0x70>  // b.hs, b.nlast
    6324:	cmp	x2, x4
    6328:	b.ls	6330 <__umodti3@@GCC_3.0+0x70>  // b.plast
    632c:	add	x4, x4, x6
    6330:	sub	x4, x4, x2
    6334:	and	x5, x5, #0xffffffff
    6338:	udiv	x2, x4, x1
    633c:	msub	x4, x2, x1, x4
    6340:	mul	x0, x0, x2
    6344:	orr	x4, x5, x4, lsl #32
    6348:	cmp	x0, x4
    634c:	b.ls	6364 <__umodti3@@GCC_3.0+0xa4>  // b.plast
    6350:	adds	x4, x6, x4
    6354:	b.cs	6364 <__umodti3@@GCC_3.0+0xa4>  // b.hs, b.nlast
    6358:	cmp	x0, x4
    635c:	b.ls	6364 <__umodti3@@GCC_3.0+0xa4>  // b.plast
    6360:	add	x4, x4, x6
    6364:	sub	x5, x4, x0
    6368:	lsr	x0, x5, x8
    636c:	mov	x1, #0x0                   	// #0
    6370:	ret
    6374:	cbnz	x2, 6380 <__umodti3@@GCC_3.0+0xc0>
    6378:	mov	x2, #0x1                   	// #1
    637c:	udiv	x6, x2, x6
    6380:	clz	x3, x6
    6384:	mov	x8, x3
    6388:	cbnz	x3, 6400 <__umodti3@@GCC_3.0+0x140>
    638c:	sub	x1, x1, x6
    6390:	lsr	x2, x6, #32
    6394:	and	x0, x6, #0xffffffff
    6398:	udiv	x3, x1, x2
    639c:	msub	x1, x3, x2, x1
    63a0:	mul	x3, x0, x3
    63a4:	extr	x1, x1, x5, #32
    63a8:	cmp	x3, x1
    63ac:	b.ls	63c4 <__umodti3@@GCC_3.0+0x104>  // b.plast
    63b0:	adds	x1, x6, x1
    63b4:	b.cs	63c4 <__umodti3@@GCC_3.0+0x104>  // b.hs, b.nlast
    63b8:	cmp	x3, x1
    63bc:	b.ls	63c4 <__umodti3@@GCC_3.0+0x104>  // b.plast
    63c0:	add	x1, x1, x6
    63c4:	sub	x1, x1, x3
    63c8:	and	x5, x5, #0xffffffff
    63cc:	udiv	x4, x1, x2
    63d0:	msub	x1, x4, x2, x1
    63d4:	mul	x0, x0, x4
    63d8:	orr	x5, x5, x1, lsl #32
    63dc:	cmp	x0, x5
    63e0:	b.ls	63f8 <__umodti3@@GCC_3.0+0x138>  // b.plast
    63e4:	adds	x5, x6, x5
    63e8:	b.cs	63f8 <__umodti3@@GCC_3.0+0x138>  // b.hs, b.nlast
    63ec:	cmp	x0, x5
    63f0:	b.ls	63f8 <__umodti3@@GCC_3.0+0x138>  // b.plast
    63f4:	add	x5, x5, x6
    63f8:	sub	x5, x5, x0
    63fc:	b	6368 <__umodti3@@GCC_3.0+0xa8>
    6400:	mov	x2, #0x40                  	// #64
    6404:	sub	x2, x2, x3
    6408:	lsl	x6, x6, x3
    640c:	and	x4, x6, #0xffffffff
    6410:	lsr	x7, x1, x2
    6414:	lsr	x2, x0, x2
    6418:	lsl	x1, x1, x3
    641c:	orr	x1, x2, x1
    6420:	lsr	x2, x6, #32
    6424:	lsl	x5, x0, x3
    6428:	udiv	x3, x7, x2
    642c:	msub	x7, x3, x2, x7
    6430:	mul	x0, x4, x3
    6434:	extr	x3, x7, x1, #32
    6438:	cmp	x0, x3
    643c:	b.ls	6454 <__umodti3@@GCC_3.0+0x194>  // b.plast
    6440:	adds	x3, x6, x3
    6444:	b.cs	6454 <__umodti3@@GCC_3.0+0x194>  // b.hs, b.nlast
    6448:	cmp	x0, x3
    644c:	b.ls	6454 <__umodti3@@GCC_3.0+0x194>  // b.plast
    6450:	add	x3, x3, x6
    6454:	sub	x3, x3, x0
    6458:	and	x1, x1, #0xffffffff
    645c:	udiv	x0, x3, x2
    6460:	msub	x2, x0, x2, x3
    6464:	mul	x4, x4, x0
    6468:	orr	x1, x1, x2, lsl #32
    646c:	cmp	x4, x1
    6470:	b.ls	6488 <__umodti3@@GCC_3.0+0x1c8>  // b.plast
    6474:	adds	x1, x6, x1
    6478:	b.cs	6488 <__umodti3@@GCC_3.0+0x1c8>  // b.hs, b.nlast
    647c:	cmp	x4, x1
    6480:	b.ls	6488 <__umodti3@@GCC_3.0+0x1c8>  // b.plast
    6484:	add	x1, x1, x6
    6488:	sub	x1, x1, x4
    648c:	b	6390 <__umodti3@@GCC_3.0+0xd0>
    6490:	cmp	x3, x1
    6494:	b.hi	6370 <__umodti3@@GCC_3.0+0xb0>  // b.pmore
    6498:	clz	x10, x3
    649c:	cbnz	x10, 64c0 <__umodti3@@GCC_3.0+0x200>
    64a0:	cmp	x3, x1
    64a4:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
    64a8:	b.hi	64b4 <__umodti3@@GCC_3.0+0x1f4>  // b.pmore
    64ac:	subs	x5, x0, x2
    64b0:	sbc	x4, x1, x3
    64b4:	mov	x0, x5
    64b8:	mov	x1, x4
    64bc:	b	6370 <__umodti3@@GCC_3.0+0xb0>
    64c0:	mov	x6, #0x40                  	// #64
    64c4:	sub	x6, x6, x10
    64c8:	lsl	x3, x3, x10
    64cc:	lsr	x9, x2, x6
    64d0:	orr	x9, x9, x3
    64d4:	lsr	x7, x1, x6
    64d8:	and	x3, x9, #0xffffffff
    64dc:	lsr	x5, x9, #32
    64e0:	lsl	x1, x1, x10
    64e4:	lsr	x4, x0, x6
    64e8:	orr	x4, x4, x1
    64ec:	lsl	x2, x2, x10
    64f0:	udiv	x1, x7, x5
    64f4:	lsl	x0, x0, x10
    64f8:	msub	x7, x1, x5, x7
    64fc:	mul	x11, x3, x1
    6500:	extr	x7, x7, x4, #32
    6504:	cmp	x11, x7
    6508:	b.ls	65e8 <__umodti3@@GCC_3.0+0x328>  // b.plast
    650c:	sub	x8, x1, #0x1
    6510:	adds	x7, x9, x7
    6514:	b.cs	6528 <__umodti3@@GCC_3.0+0x268>  // b.hs, b.nlast
    6518:	cmp	x11, x7
    651c:	b.ls	6528 <__umodti3@@GCC_3.0+0x268>  // b.plast
    6520:	sub	x8, x1, #0x2
    6524:	add	x7, x7, x9
    6528:	sub	x7, x7, x11
    652c:	udiv	x11, x7, x5
    6530:	msub	x5, x11, x5, x7
    6534:	mul	x1, x3, x11
    6538:	and	x3, x4, #0xffffffff
    653c:	orr	x3, x3, x5, lsl #32
    6540:	cmp	x1, x3
    6544:	b.ls	65f0 <__umodti3@@GCC_3.0+0x330>  // b.plast
    6548:	sub	x7, x11, #0x1
    654c:	adds	x3, x9, x3
    6550:	b.cs	6564 <__umodti3@@GCC_3.0+0x2a4>  // b.hs, b.nlast
    6554:	cmp	x1, x3
    6558:	b.ls	6564 <__umodti3@@GCC_3.0+0x2a4>  // b.plast
    655c:	sub	x7, x11, #0x2
    6560:	add	x3, x3, x9
    6564:	sub	x3, x3, x1
    6568:	orr	x1, x7, x8, lsl #32
    656c:	and	x4, x2, #0xffffffff
    6570:	mov	w7, w7
    6574:	lsr	x1, x1, #32
    6578:	lsr	x8, x2, #32
    657c:	mul	x5, x7, x4
    6580:	mul	x4, x1, x4
    6584:	madd	x7, x7, x8, x4
    6588:	mul	x1, x1, x8
    658c:	add	x7, x7, x5, lsr #32
    6590:	cmp	x4, x7
    6594:	b.ls	65a0 <__umodti3@@GCC_3.0+0x2e0>  // b.plast
    6598:	mov	x4, #0x100000000           	// #4294967296
    659c:	add	x1, x1, x4
    65a0:	add	x1, x1, x7, lsr #32
    65a4:	and	x5, x5, #0xffffffff
    65a8:	add	x7, x5, x7, lsl #32
    65ac:	cmp	x3, x1
    65b0:	b.cc	65bc <__umodti3@@GCC_3.0+0x2fc>  // b.lo, b.ul, b.last
    65b4:	ccmp	x0, x7, #0x2, eq  // eq = none
    65b8:	b.cs	65c8 <__umodti3@@GCC_3.0+0x308>  // b.hs, b.nlast
    65bc:	subs	x7, x7, x2
    65c0:	cinc	x9, x9, cc  // cc = lo, ul, last
    65c4:	sub	x1, x1, x9
    65c8:	subs	x4, x0, x7
    65cc:	cmp	x0, x7
    65d0:	sbc	x1, x3, x1
    65d4:	lsr	x0, x4, x10
    65d8:	lsl	x5, x1, x6
    65dc:	orr	x0, x5, x0
    65e0:	lsr	x1, x1, x10
    65e4:	b	6370 <__umodti3@@GCC_3.0+0xb0>
    65e8:	mov	x8, x1
    65ec:	b	6528 <__umodti3@@GCC_3.0+0x268>
    65f0:	mov	x7, x11
    65f4:	b	6564 <__umodti3@@GCC_3.0+0x2a4>

00000000000065f8 <__udivmodti4@@GCC_3.0>:
    65f8:	mov	x5, x1
    65fc:	mov	x6, x2
    6600:	mov	x1, x3
    6604:	mov	x8, x0
    6608:	mov	x7, x5
    660c:	cbnz	x3, 6808 <__udivmodti4@@GCC_3.0+0x210>
    6610:	cmp	x2, x5
    6614:	b.ls	66d4 <__udivmodti4@@GCC_3.0+0xdc>  // b.plast
    6618:	clz	x0, x2
    661c:	mov	x3, x0
    6620:	cbz	x0, 663c <__udivmodti4@@GCC_3.0+0x44>
    6624:	lsl	x6, x2, x0
    6628:	neg	w2, w0
    662c:	lsl	x7, x5, x0
    6630:	lsr	x2, x8, x2
    6634:	orr	x7, x2, x7
    6638:	lsl	x8, x8, x0
    663c:	lsr	x2, x6, #32
    6640:	and	x5, x6, #0xffffffff
    6644:	udiv	x9, x7, x2
    6648:	msub	x7, x9, x2, x7
    664c:	mul	x0, x5, x9
    6650:	extr	x7, x7, x8, #32
    6654:	cmp	x0, x7
    6658:	b.ls	66cc <__udivmodti4@@GCC_3.0+0xd4>  // b.plast
    665c:	sub	x10, x9, #0x1
    6660:	adds	x7, x6, x7
    6664:	b.cs	6678 <__udivmodti4@@GCC_3.0+0x80>  // b.hs, b.nlast
    6668:	cmp	x0, x7
    666c:	b.ls	6678 <__udivmodti4@@GCC_3.0+0x80>  // b.plast
    6670:	sub	x10, x9, #0x2
    6674:	add	x7, x7, x6
    6678:	sub	x7, x7, x0
    667c:	udiv	x9, x7, x2
    6680:	msub	x2, x9, x2, x7
    6684:	mul	x7, x5, x9
    6688:	and	x5, x8, #0xffffffff
    668c:	orr	x5, x5, x2, lsl #32
    6690:	cmp	x7, x5
    6694:	b.ls	6800 <__udivmodti4@@GCC_3.0+0x208>  // b.plast
    6698:	sub	x0, x9, #0x1
    669c:	adds	x5, x6, x5
    66a0:	b.cs	66b4 <__udivmodti4@@GCC_3.0+0xbc>  // b.hs, b.nlast
    66a4:	cmp	x7, x5
    66a8:	b.ls	66b4 <__udivmodti4@@GCC_3.0+0xbc>  // b.plast
    66ac:	sub	x0, x9, #0x2
    66b0:	add	x5, x5, x6
    66b4:	sub	x5, x5, x7
    66b8:	orr	x0, x0, x10, lsl #32
    66bc:	cbz	x4, 66c8 <__udivmodti4@@GCC_3.0+0xd0>
    66c0:	lsr	x5, x5, x3
    66c4:	stp	x5, xzr, [x4]
    66c8:	ret
    66cc:	mov	x10, x9
    66d0:	b	6678 <__udivmodti4@@GCC_3.0+0x80>
    66d4:	cbnz	x2, 66e0 <__udivmodti4@@GCC_3.0+0xe8>
    66d8:	mov	x1, #0x1                   	// #1
    66dc:	udiv	x6, x1, x2
    66e0:	clz	x7, x6
    66e4:	mov	x3, x7
    66e8:	cbnz	x7, 6744 <__udivmodti4@@GCC_3.0+0x14c>
    66ec:	sub	x5, x5, x6
    66f0:	mov	x1, #0x1                   	// #1
    66f4:	lsr	x2, x6, #32
    66f8:	and	x7, x6, #0xffffffff
    66fc:	udiv	x9, x5, x2
    6700:	msub	x5, x9, x2, x5
    6704:	mul	x0, x7, x9
    6708:	extr	x5, x5, x8, #32
    670c:	cmp	x0, x5
    6710:	b.ls	67f8 <__udivmodti4@@GCC_3.0+0x200>  // b.plast
    6714:	sub	x10, x9, #0x1
    6718:	adds	x5, x6, x5
    671c:	b.cs	6730 <__udivmodti4@@GCC_3.0+0x138>  // b.hs, b.nlast
    6720:	cmp	x0, x5
    6724:	b.ls	6730 <__udivmodti4@@GCC_3.0+0x138>  // b.plast
    6728:	sub	x10, x9, #0x2
    672c:	add	x5, x5, x6
    6730:	sub	x5, x5, x0
    6734:	udiv	x9, x5, x2
    6738:	msub	x2, x9, x2, x5
    673c:	mul	x7, x7, x9
    6740:	b	6688 <__udivmodti4@@GCC_3.0+0x90>
    6744:	mov	x1, #0x40                  	// #64
    6748:	sub	x1, x1, x7
    674c:	lsl	x6, x6, x7
    6750:	lsr	x2, x5, x1
    6754:	lsl	x8, x0, x7
    6758:	lsr	x1, x0, x1
    675c:	lsr	x0, x6, #32
    6760:	lsl	x5, x5, x7
    6764:	and	x7, x6, #0xffffffff
    6768:	orr	x5, x1, x5
    676c:	udiv	x9, x2, x0
    6770:	msub	x2, x9, x0, x2
    6774:	mul	x1, x7, x9
    6778:	extr	x2, x2, x5, #32
    677c:	cmp	x1, x2
    6780:	b.ls	67e8 <__udivmodti4@@GCC_3.0+0x1f0>  // b.plast
    6784:	sub	x10, x9, #0x1
    6788:	adds	x2, x6, x2
    678c:	b.cs	67a0 <__udivmodti4@@GCC_3.0+0x1a8>  // b.hs, b.nlast
    6790:	cmp	x1, x2
    6794:	b.ls	67a0 <__udivmodti4@@GCC_3.0+0x1a8>  // b.plast
    6798:	sub	x10, x9, #0x2
    679c:	add	x2, x2, x6
    67a0:	sub	x2, x2, x1
    67a4:	and	x5, x5, #0xffffffff
    67a8:	udiv	x9, x2, x0
    67ac:	msub	x0, x9, x0, x2
    67b0:	mul	x2, x7, x9
    67b4:	orr	x5, x5, x0, lsl #32
    67b8:	cmp	x2, x5
    67bc:	b.ls	67f0 <__udivmodti4@@GCC_3.0+0x1f8>  // b.plast
    67c0:	sub	x1, x9, #0x1
    67c4:	adds	x5, x6, x5
    67c8:	b.cs	67dc <__udivmodti4@@GCC_3.0+0x1e4>  // b.hs, b.nlast
    67cc:	cmp	x2, x5
    67d0:	b.ls	67dc <__udivmodti4@@GCC_3.0+0x1e4>  // b.plast
    67d4:	sub	x1, x9, #0x2
    67d8:	add	x5, x5, x6
    67dc:	sub	x5, x5, x2
    67e0:	orr	x1, x1, x10, lsl #32
    67e4:	b	66f4 <__udivmodti4@@GCC_3.0+0xfc>
    67e8:	mov	x10, x9
    67ec:	b	67a0 <__udivmodti4@@GCC_3.0+0x1a8>
    67f0:	mov	x1, x9
    67f4:	b	67dc <__udivmodti4@@GCC_3.0+0x1e4>
    67f8:	mov	x10, x9
    67fc:	b	6730 <__udivmodti4@@GCC_3.0+0x138>
    6800:	mov	x0, x9
    6804:	b	66b4 <__udivmodti4@@GCC_3.0+0xbc>
    6808:	cmp	x3, x5
    680c:	b.ls	6824 <__udivmodti4@@GCC_3.0+0x22c>  // b.plast
    6810:	cbz	x4, 6818 <__udivmodti4@@GCC_3.0+0x220>
    6814:	stp	x0, x5, [x4]
    6818:	mov	x1, #0x0                   	// #0
    681c:	mov	x0, #0x0                   	// #0
    6820:	b	66c8 <__udivmodti4@@GCC_3.0+0xd0>
    6824:	clz	x9, x3
    6828:	cbnz	x9, 685c <__udivmodti4@@GCC_3.0+0x264>
    682c:	cmp	x3, x5
    6830:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
    6834:	b.hi	6854 <__udivmodti4@@GCC_3.0+0x25c>  // b.pmore
    6838:	subs	x8, x0, x2
    683c:	mov	x0, #0x1                   	// #1
    6840:	sbc	x7, x5, x3
    6844:	cbz	x4, 684c <__udivmodti4@@GCC_3.0+0x254>
    6848:	stp	x8, x7, [x4]
    684c:	mov	x1, #0x0                   	// #0
    6850:	b	66c8 <__udivmodti4@@GCC_3.0+0xd0>
    6854:	mov	x0, #0x0                   	// #0
    6858:	b	6844 <__udivmodti4@@GCC_3.0+0x24c>
    685c:	mov	x1, #0x40                  	// #64
    6860:	sub	x10, x1, x9
    6864:	lsl	x3, x3, x9
    6868:	lsr	x7, x2, x10
    686c:	orr	x7, x7, x3
    6870:	lsr	x6, x5, x10
    6874:	lsr	x3, x7, #32
    6878:	lsl	x5, x5, x9
    687c:	lsr	x1, x0, x10
    6880:	orr	x1, x1, x5
    6884:	and	x5, x7, #0xffffffff
    6888:	lsl	x2, x2, x9
    688c:	udiv	x11, x6, x3
    6890:	lsl	x8, x0, x9
    6894:	msub	x6, x11, x3, x6
    6898:	mul	x12, x5, x11
    689c:	extr	x6, x6, x1, #32
    68a0:	cmp	x12, x6
    68a4:	b.ls	6990 <__udivmodti4@@GCC_3.0+0x398>  // b.plast
    68a8:	sub	x0, x11, #0x1
    68ac:	adds	x6, x7, x6
    68b0:	b.cs	68c4 <__udivmodti4@@GCC_3.0+0x2cc>  // b.hs, b.nlast
    68b4:	cmp	x12, x6
    68b8:	b.ls	68c4 <__udivmodti4@@GCC_3.0+0x2cc>  // b.plast
    68bc:	sub	x0, x11, #0x2
    68c0:	add	x6, x6, x7
    68c4:	sub	x6, x6, x12
    68c8:	udiv	x11, x6, x3
    68cc:	msub	x3, x11, x3, x6
    68d0:	mul	x6, x5, x11
    68d4:	and	x5, x1, #0xffffffff
    68d8:	orr	x5, x5, x3, lsl #32
    68dc:	cmp	x6, x5
    68e0:	b.ls	6998 <__udivmodti4@@GCC_3.0+0x3a0>  // b.plast
    68e4:	sub	x1, x11, #0x1
    68e8:	adds	x5, x7, x5
    68ec:	b.cs	6900 <__udivmodti4@@GCC_3.0+0x308>  // b.hs, b.nlast
    68f0:	cmp	x6, x5
    68f4:	b.ls	6900 <__udivmodti4@@GCC_3.0+0x308>  // b.plast
    68f8:	sub	x1, x11, #0x2
    68fc:	add	x5, x5, x7
    6900:	orr	x0, x1, x0, lsl #32
    6904:	sub	x5, x5, x6
    6908:	mov	w1, w1
    690c:	and	x6, x2, #0xffffffff
    6910:	lsr	x3, x0, #32
    6914:	lsr	x12, x2, #32
    6918:	mul	x11, x1, x6
    691c:	mul	x6, x3, x6
    6920:	madd	x1, x1, x12, x6
    6924:	mul	x3, x3, x12
    6928:	add	x1, x1, x11, lsr #32
    692c:	cmp	x6, x1
    6930:	b.ls	693c <__udivmodti4@@GCC_3.0+0x344>  // b.plast
    6934:	mov	x6, #0x100000000           	// #4294967296
    6938:	add	x3, x3, x6
    693c:	add	x3, x3, x1, lsr #32
    6940:	and	x11, x11, #0xffffffff
    6944:	add	x1, x11, x1, lsl #32
    6948:	cmp	x5, x3
    694c:	b.cc	6958 <__udivmodti4@@GCC_3.0+0x360>  // b.lo, b.ul, b.last
    6950:	ccmp	x8, x1, #0x2, eq  // eq = none
    6954:	b.cs	6968 <__udivmodti4@@GCC_3.0+0x370>  // b.hs, b.nlast
    6958:	subs	x1, x1, x2
    695c:	sub	x0, x0, #0x1
    6960:	cinc	x7, x7, cc  // cc = lo, ul, last
    6964:	sub	x3, x3, x7
    6968:	cbz	x4, 684c <__udivmodti4@@GCC_3.0+0x254>
    696c:	subs	x2, x8, x1
    6970:	cmp	x8, x1
    6974:	sbc	x5, x5, x3
    6978:	lsr	x2, x2, x9
    697c:	lsl	x1, x5, x10
    6980:	orr	x1, x1, x2
    6984:	lsr	x5, x5, x9
    6988:	stp	x1, x5, [x4]
    698c:	b	684c <__udivmodti4@@GCC_3.0+0x254>
    6990:	mov	x0, x11
    6994:	b	68c4 <__udivmodti4@@GCC_3.0+0x2cc>
    6998:	mov	x1, x11
    699c:	b	6900 <__udivmodti4@@GCC_3.0+0x308>
    69a0:	mov	x0, #0x0                   	// #0
    69a4:	ret
    69a8:	adrp	x2, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    69ac:	ldr	w3, [x2, #464]
    69b0:	cbnz	w3, 69bc <__udivmodti4@@GCC_3.0+0x3c4>
    69b4:	mrs	x3, ctr_el0
    69b8:	str	w3, [x2, #464]
    69bc:	ldr	w4, [x2, #464]
    69c0:	mov	w2, #0x4                   	// #4
    69c4:	and	w3, w4, #0xf
    69c8:	ubfx	x4, x4, #16, #4
    69cc:	lsl	w3, w2, w3
    69d0:	lsl	w2, w2, w4
    69d4:	sub	w4, w2, #0x1
    69d8:	bic	x4, x0, x4
    69dc:	sxtw	x2, w2
    69e0:	cmp	x4, x1
    69e4:	b.cc	6a0c <__udivmodti4@@GCC_3.0+0x414>  // b.lo, b.ul, b.last
    69e8:	dsb	ish
    69ec:	sub	w2, w3, #0x1
    69f0:	sxtw	x3, w3
    69f4:	bic	x0, x0, x2
    69f8:	cmp	x0, x1
    69fc:	b.cc	6a18 <__udivmodti4@@GCC_3.0+0x420>  // b.lo, b.ul, b.last
    6a00:	dsb	ish
    6a04:	isb
    6a08:	ret
    6a0c:	dc	cvau, x4
    6a10:	add	x4, x4, x2
    6a14:	b	69e0 <__udivmodti4@@GCC_3.0+0x3e8>
    6a18:	ic	ivau, x0
    6a1c:	add	x0, x0, x3
    6a20:	b	69f8 <__udivmodti4@@GCC_3.0+0x400>
    6a24:	tbz	w0, #0, 6a34 <__udivmodti4@@GCC_3.0+0x43c>
    6a28:	movi	v1.2s, #0x0
    6a2c:	fdiv	s0, s1, s1
    6a30:	mrs	x1, fpsr
    6a34:	tbz	w0, #1, 6a48 <__udivmodti4@@GCC_3.0+0x450>
    6a38:	fmov	s1, #1.000000000000000000e+00
    6a3c:	movi	v2.2s, #0x0
    6a40:	fdiv	s0, s1, s2
    6a44:	mrs	x1, fpsr
    6a48:	tbz	w0, #2, 6a68 <__udivmodti4@@GCC_3.0+0x470>
    6a4c:	mov	w1, #0x7f7fffff            	// #2139095039
    6a50:	fmov	s1, w1
    6a54:	mov	w1, #0xc5ae                	// #50606
    6a58:	movk	w1, #0x749d, lsl #16
    6a5c:	fmov	s2, w1
    6a60:	fadd	s0, s1, s2
    6a64:	mrs	x1, fpsr
    6a68:	tbz	w0, #3, 6a78 <__udivmodti4@@GCC_3.0+0x480>
    6a6c:	movi	v1.2s, #0x80, lsl #16
    6a70:	fmul	s0, s1, s1
    6a74:	mrs	x1, fpsr
    6a78:	tbz	w0, #4, 6a90 <__udivmodti4@@GCC_3.0+0x498>
    6a7c:	mov	w0, #0x7f7fffff            	// #2139095039
    6a80:	fmov	s2, #1.000000000000000000e+00
    6a84:	fmov	s1, w0
    6a88:	fsub	s0, s1, s2
    6a8c:	mrs	x0, fpsr
    6a90:	ret

0000000000006a94 <__addtf3@@GCC_3.0>:
    6a94:	stp	x29, x30, [sp, #-32]!
    6a98:	mov	x29, sp
    6a9c:	str	q0, [sp, #16]
    6aa0:	ldp	x9, x5, [sp, #16]
    6aa4:	str	q1, [sp, #16]
    6aa8:	ldp	x1, x2, [sp, #16]
    6aac:	mrs	x10, fpcr
    6ab0:	ubfx	x0, x5, #48, #15
    6ab4:	ubfx	x12, x2, #48, #15
    6ab8:	ubfiz	x3, x5, #3, #48
    6abc:	lsr	x11, x2, #63
    6ac0:	mov	x4, x0
    6ac4:	ubfiz	x2, x2, #3, #48
    6ac8:	sub	w0, w0, w12
    6acc:	lsr	x8, x5, #63
    6ad0:	mov	x14, x1
    6ad4:	orr	x2, x2, x1, lsr #61
    6ad8:	cmp	x11, x5, lsr #63
    6adc:	orr	x3, x3, x9, lsr #61
    6ae0:	lsl	x7, x9, #3
    6ae4:	mov	x6, x12
    6ae8:	lsl	x1, x1, #3
    6aec:	mov	w5, w0
    6af0:	b.ne	6ef8 <__addtf3@@GCC_3.0+0x464>  // b.any
    6af4:	cmp	w0, #0x0
    6af8:	b.le	6c38 <__addtf3@@GCC_3.0+0x1a4>
    6afc:	mov	x9, #0x7fff                	// #32767
    6b00:	cbnz	x12, 6ba0 <__addtf3@@GCC_3.0+0x10c>
    6b04:	orr	x5, x2, x1
    6b08:	cbnz	x5, 6b34 <__addtf3@@GCC_3.0+0xa0>
    6b0c:	cmp	x4, x9
    6b10:	b.ne	72e4 <__addtf3@@GCC_3.0+0x850>  // b.any
    6b14:	orr	x1, x3, x7
    6b18:	cbz	x1, 7368 <__addtf3@@GCC_3.0+0x8d4>
    6b1c:	lsr	x0, x3, #50
    6b20:	mov	x2, x3
    6b24:	eor	x0, x0, #0x1
    6b28:	mov	x1, x7
    6b2c:	and	w0, w0, #0x1
    6b30:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>
    6b34:	subs	w5, w0, #0x1
    6b38:	b.ne	6b78 <__addtf3@@GCC_3.0+0xe4>  // b.any
    6b3c:	adds	x1, x7, x1
    6b40:	mov	x7, x1
    6b44:	adc	x3, x3, x2
    6b48:	tbz	x3, #51, 72e4 <__addtf3@@GCC_3.0+0x850>
    6b4c:	add	x4, x4, #0x1
    6b50:	mov	x0, #0x7fff                	// #32767
    6b54:	cmp	x4, x0
    6b58:	b.eq	6ebc <__addtf3@@GCC_3.0+0x428>  // b.none
    6b5c:	and	x2, x3, #0xfff7ffffffffffff
    6b60:	and	x1, x7, #0x1
    6b64:	orr	x1, x1, x7, lsr #1
    6b68:	orr	x1, x1, x3, lsl #63
    6b6c:	lsr	x2, x2, #1
    6b70:	mov	w0, #0x0                   	// #0
    6b74:	b	6c6c <__addtf3@@GCC_3.0+0x1d8>
    6b78:	cmp	x4, x9
    6b7c:	b.ne	6bac <__addtf3@@GCC_3.0+0x118>  // b.any
    6b80:	orr	x1, x3, x7
    6b84:	cbz	x1, 7368 <__addtf3@@GCC_3.0+0x8d4>
    6b88:	lsr	x0, x3, #50
    6b8c:	mov	x2, x3
    6b90:	eor	x0, x0, #0x1
    6b94:	mov	x1, x7
    6b98:	and	w0, w0, #0x1
    6b9c:	b	6c6c <__addtf3@@GCC_3.0+0x1d8>
    6ba0:	cmp	x4, x9
    6ba4:	b.eq	6b80 <__addtf3@@GCC_3.0+0xec>  // b.none
    6ba8:	orr	x2, x2, #0x8000000000000
    6bac:	cmp	w5, #0x74
    6bb0:	b.gt	6c28 <__addtf3@@GCC_3.0+0x194>
    6bb4:	cmp	w5, #0x3f
    6bb8:	b.gt	6bf4 <__addtf3@@GCC_3.0+0x160>
    6bbc:	mov	w6, #0x40                  	// #64
    6bc0:	sub	w6, w6, w5
    6bc4:	lsr	x9, x1, x5
    6bc8:	lsl	x1, x1, x6
    6bcc:	cmp	x1, #0x0
    6bd0:	lsl	x0, x2, x6
    6bd4:	cset	x1, ne  // ne = any
    6bd8:	orr	x0, x0, x9
    6bdc:	lsr	x2, x2, x5
    6be0:	orr	x0, x0, x1
    6be4:	adds	x1, x0, x7
    6be8:	mov	x7, x1
    6bec:	adc	x3, x2, x3
    6bf0:	b	6b48 <__addtf3@@GCC_3.0+0xb4>
    6bf4:	sub	w0, w5, #0x40
    6bf8:	mov	w6, #0x80                  	// #128
    6bfc:	sub	w6, w6, w5
    6c00:	cmp	w5, #0x40
    6c04:	lsr	x0, x2, x0
    6c08:	lsl	x2, x2, x6
    6c0c:	csel	x2, x2, xzr, ne  // ne = any
    6c10:	orr	x1, x2, x1
    6c14:	cmp	x1, #0x0
    6c18:	cset	x1, ne  // ne = any
    6c1c:	orr	x0, x0, x1
    6c20:	mov	x2, #0x0                   	// #0
    6c24:	b	6be4 <__addtf3@@GCC_3.0+0x150>
    6c28:	orr	x1, x2, x1
    6c2c:	cmp	x1, #0x0
    6c30:	cset	x0, ne  // ne = any
    6c34:	b	6c20 <__addtf3@@GCC_3.0+0x18c>
    6c38:	b.eq	6d3c <__addtf3@@GCC_3.0+0x2a8>  // b.none
    6c3c:	mov	x5, #0x7fff                	// #32767
    6c40:	cbnz	x4, 6ce4 <__addtf3@@GCC_3.0+0x250>
    6c44:	orr	x4, x3, x7
    6c48:	cbnz	x4, 6c74 <__addtf3@@GCC_3.0+0x1e0>
    6c4c:	cmp	x12, x5
    6c50:	b.ne	72f4 <__addtf3@@GCC_3.0+0x860>  // b.any
    6c54:	orr	x0, x2, x1
    6c58:	cbz	x0, 733c <__addtf3@@GCC_3.0+0x8a8>
    6c5c:	lsr	x0, x2, #50
    6c60:	mov	x4, x6
    6c64:	eor	x0, x0, #0x1
    6c68:	and	w0, w0, #0x1
    6c6c:	mov	w5, #0x0                   	// #0
    6c70:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>
    6c74:	cmn	w0, #0x1
    6c78:	b.ne	6c90 <__addtf3@@GCC_3.0+0x1fc>  // b.any
    6c7c:	adds	x1, x7, x1
    6c80:	mov	x7, x1
    6c84:	adc	x3, x3, x2
    6c88:	mov	x4, x6
    6c8c:	b	6b48 <__addtf3@@GCC_3.0+0xb4>
    6c90:	cmp	x12, x5
    6c94:	b.eq	6c54 <__addtf3@@GCC_3.0+0x1c0>  // b.none
    6c98:	mvn	w0, w0
    6c9c:	cmp	w0, #0x74
    6ca0:	b.gt	6d2c <__addtf3@@GCC_3.0+0x298>
    6ca4:	cmp	w0, #0x3f
    6ca8:	b.gt	6cf8 <__addtf3@@GCC_3.0+0x264>
    6cac:	mov	w5, #0x40                  	// #64
    6cb0:	sub	w5, w5, w0
    6cb4:	lsr	x9, x7, x0
    6cb8:	lsl	x7, x7, x5
    6cbc:	cmp	x7, #0x0
    6cc0:	cset	x7, ne  // ne = any
    6cc4:	lsl	x4, x3, x5
    6cc8:	orr	x4, x4, x9
    6ccc:	lsr	x0, x3, x0
    6cd0:	orr	x7, x4, x7
    6cd4:	adds	x1, x7, x1
    6cd8:	mov	x7, x1
    6cdc:	adc	x3, x0, x2
    6ce0:	b	6c88 <__addtf3@@GCC_3.0+0x1f4>
    6ce4:	cmp	x12, x5
    6ce8:	b.eq	6c54 <__addtf3@@GCC_3.0+0x1c0>  // b.none
    6cec:	neg	w0, w0
    6cf0:	orr	x3, x3, #0x8000000000000
    6cf4:	b	6c9c <__addtf3@@GCC_3.0+0x208>
    6cf8:	sub	w4, w0, #0x40
    6cfc:	mov	w5, #0x80                  	// #128
    6d00:	sub	w5, w5, w0
    6d04:	cmp	w0, #0x40
    6d08:	lsr	x4, x3, x4
    6d0c:	lsl	x3, x3, x5
    6d10:	csel	x3, x3, xzr, ne  // ne = any
    6d14:	orr	x3, x3, x7
    6d18:	cmp	x3, #0x0
    6d1c:	cset	x7, ne  // ne = any
    6d20:	orr	x7, x4, x7
    6d24:	mov	x0, #0x0                   	// #0
    6d28:	b	6cd4 <__addtf3@@GCC_3.0+0x240>
    6d2c:	orr	x3, x3, x7
    6d30:	cmp	x3, #0x0
    6d34:	cset	x7, ne  // ne = any
    6d38:	b	6d24 <__addtf3@@GCC_3.0+0x290>
    6d3c:	add	x0, x4, #0x1
    6d40:	mov	x13, #0x7fff                	// #32767
    6d44:	tst	x0, #0x7ffe
    6d48:	b.ne	6e58 <__addtf3@@GCC_3.0+0x3c4>  // b.any
    6d4c:	orr	x12, x3, x7
    6d50:	cbnz	x4, 6dbc <__addtf3@@GCC_3.0+0x328>
    6d54:	cbz	x12, 7318 <__addtf3@@GCC_3.0+0x884>
    6d58:	orr	x0, x2, x1
    6d5c:	cbz	x0, 7104 <__addtf3@@GCC_3.0+0x670>
    6d60:	adds	x1, x7, x1
    6d64:	mov	x7, x1
    6d68:	adc	x3, x3, x2
    6d6c:	tbz	x3, #51, 7104 <__addtf3@@GCC_3.0+0x670>
    6d70:	and	x2, x3, #0xfff7ffffffffffff
    6d74:	mov	w0, #0x0                   	// #0
    6d78:	mov	x4, #0x1                   	// #1
    6d7c:	tst	x1, #0x7
    6d80:	b.eq	7398 <__addtf3@@GCC_3.0+0x904>  // b.none
    6d84:	and	x3, x10, #0xc00000
    6d88:	orr	w0, w0, #0x10
    6d8c:	cmp	x3, #0x400, lsl #12
    6d90:	b.eq	7384 <__addtf3@@GCC_3.0+0x8f0>  // b.none
    6d94:	cmp	x3, #0x800, lsl #12
    6d98:	b.eq	7390 <__addtf3@@GCC_3.0+0x8fc>  // b.none
    6d9c:	cbnz	x3, 6db4 <__addtf3@@GCC_3.0+0x320>
    6da0:	and	x3, x1, #0xf
    6da4:	cmp	x3, #0x4
    6da8:	b.eq	6db4 <__addtf3@@GCC_3.0+0x320>  // b.none
    6dac:	adds	x1, x1, #0x4
    6db0:	cinc	x2, x2, cs  // cs = hs, nlast
    6db4:	cbz	w5, 73a8 <__addtf3@@GCC_3.0+0x914>
    6db8:	b	73a4 <__addtf3@@GCC_3.0+0x910>
    6dbc:	cmp	x4, x13
    6dc0:	b.ne	6e24 <__addtf3@@GCC_3.0+0x390>  // b.any
    6dc4:	cbz	x12, 7488 <__addtf3@@GCC_3.0+0x9f4>
    6dc8:	lsr	x0, x3, #50
    6dcc:	cmp	x6, x4
    6dd0:	eor	x0, x0, #0x1
    6dd4:	and	w0, w0, #0x1
    6dd8:	b.ne	6e44 <__addtf3@@GCC_3.0+0x3b0>  // b.any
    6ddc:	orr	x4, x2, x1
    6de0:	cbz	x4, 7480 <__addtf3@@GCC_3.0+0x9ec>
    6de4:	tst	x2, #0x4000000000000
    6de8:	csinc	w0, w0, wzr, ne  // ne = any
    6dec:	cbz	x12, 6e3c <__addtf3@@GCC_3.0+0x3a8>
    6df0:	and	x9, x9, #0x1fffffffffffffff
    6df4:	lsr	x1, x3, #3
    6df8:	orr	x9, x9, x3, lsl #61
    6dfc:	tbz	x3, #50, 6e18 <__addtf3@@GCC_3.0+0x384>
    6e00:	lsr	x3, x2, #3
    6e04:	tbnz	x2, #50, 6e18 <__addtf3@@GCC_3.0+0x384>
    6e08:	and	x1, x14, #0x1fffffffffffffff
    6e0c:	mov	x8, x11
    6e10:	orr	x9, x1, x2, lsl #61
    6e14:	mov	x1, x3
    6e18:	extr	x2, x1, x9, #61
    6e1c:	lsl	x1, x9, #3
    6e20:	b	6e3c <__addtf3@@GCC_3.0+0x3a8>
    6e24:	cmp	x6, x13
    6e28:	b.ne	6e34 <__addtf3@@GCC_3.0+0x3a0>  // b.any
    6e2c:	mov	w0, #0x0                   	// #0
    6e30:	b	6ddc <__addtf3@@GCC_3.0+0x348>
    6e34:	mov	w0, #0x0                   	// #0
    6e38:	cbnz	x12, 6e44 <__addtf3@@GCC_3.0+0x3b0>
    6e3c:	mov	x4, #0x7fff                	// #32767
    6e40:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>
    6e44:	orr	x1, x2, x1
    6e48:	cbnz	x1, 6df0 <__addtf3@@GCC_3.0+0x35c>
    6e4c:	mov	x2, x3
    6e50:	mov	x1, x7
    6e54:	b	6e3c <__addtf3@@GCC_3.0+0x3a8>
    6e58:	cmp	x0, x13
    6e5c:	b.eq	6e7c <__addtf3@@GCC_3.0+0x3e8>  // b.none
    6e60:	adds	x1, x7, x1
    6e64:	mov	x4, x0
    6e68:	adc	x2, x3, x2
    6e6c:	extr	x1, x2, x1, #1
    6e70:	lsr	x2, x2, #1
    6e74:	mov	w0, #0x0                   	// #0
    6e78:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>
    6e7c:	ands	x1, x10, #0xc00000
    6e80:	b.eq	734c <__addtf3@@GCC_3.0+0x8b8>  // b.none
    6e84:	cmp	x1, #0x400, lsl #12
    6e88:	b.ne	6ea0 <__addtf3@@GCC_3.0+0x40c>  // b.any
    6e8c:	cbnz	x8, 6eac <__addtf3@@GCC_3.0+0x418>
    6e90:	mov	x4, x0
    6e94:	mov	x2, #0x0                   	// #0
    6e98:	mov	x1, #0x0                   	// #0
    6e9c:	b	7354 <__addtf3@@GCC_3.0+0x8c0>
    6ea0:	cmp	x1, #0x800, lsl #12
    6ea4:	b.ne	6eac <__addtf3@@GCC_3.0+0x418>  // b.any
    6ea8:	cbnz	x8, 6e90 <__addtf3@@GCC_3.0+0x3fc>
    6eac:	mov	x2, #0xffffffffffffffff    	// #-1
    6eb0:	mov	x4, #0x7ffe                	// #32766
    6eb4:	mov	x1, x2
    6eb8:	b	7354 <__addtf3@@GCC_3.0+0x8c0>
    6ebc:	ands	x1, x10, #0xc00000
    6ec0:	b.eq	735c <__addtf3@@GCC_3.0+0x8c8>  // b.none
    6ec4:	cmp	x1, #0x400, lsl #12
    6ec8:	b.ne	6edc <__addtf3@@GCC_3.0+0x448>  // b.any
    6ecc:	cbnz	x8, 6ee8 <__addtf3@@GCC_3.0+0x454>
    6ed0:	mov	x2, #0x0                   	// #0
    6ed4:	mov	x1, #0x0                   	// #0
    6ed8:	b	7360 <__addtf3@@GCC_3.0+0x8cc>
    6edc:	cmp	x1, #0x800, lsl #12
    6ee0:	b.ne	6ee8 <__addtf3@@GCC_3.0+0x454>  // b.any
    6ee4:	cbnz	x8, 6ed0 <__addtf3@@GCC_3.0+0x43c>
    6ee8:	mov	x2, #0xffffffffffffffff    	// #-1
    6eec:	mov	x4, #0x7ffe                	// #32766
    6ef0:	mov	x1, x2
    6ef4:	b	7360 <__addtf3@@GCC_3.0+0x8cc>
    6ef8:	cmp	w0, #0x0
    6efc:	b.le	6fd0 <__addtf3@@GCC_3.0+0x53c>
    6f00:	mov	x9, #0x7fff                	// #32767
    6f04:	cbnz	x12, 6f7c <__addtf3@@GCC_3.0+0x4e8>
    6f08:	orr	x5, x2, x1
    6f0c:	cbz	x5, 6b0c <__addtf3@@GCC_3.0+0x78>
    6f10:	subs	w5, w0, #0x1
    6f14:	b.ne	6f30 <__addtf3@@GCC_3.0+0x49c>  // b.any
    6f18:	subs	x7, x7, x1
    6f1c:	sbc	x3, x3, x2
    6f20:	tbz	x3, #51, 72e4 <__addtf3@@GCC_3.0+0x850>
    6f24:	and	x5, x3, #0x7ffffffffffff
    6f28:	mov	x6, x7
    6f2c:	b	7214 <__addtf3@@GCC_3.0+0x780>
    6f30:	cmp	x4, x9
    6f34:	b.eq	6b80 <__addtf3@@GCC_3.0+0xec>  // b.none
    6f38:	cmp	w5, #0x74
    6f3c:	b.gt	6fc0 <__addtf3@@GCC_3.0+0x52c>
    6f40:	cmp	w5, #0x3f
    6f44:	b.gt	6f8c <__addtf3@@GCC_3.0+0x4f8>
    6f48:	mov	w6, #0x40                  	// #64
    6f4c:	sub	w6, w6, w5
    6f50:	lsr	x9, x1, x5
    6f54:	lsl	x1, x1, x6
    6f58:	cmp	x1, #0x0
    6f5c:	lsl	x0, x2, x6
    6f60:	cset	x1, ne  // ne = any
    6f64:	orr	x0, x0, x9
    6f68:	lsr	x2, x2, x5
    6f6c:	orr	x0, x0, x1
    6f70:	subs	x7, x7, x0
    6f74:	sbc	x3, x3, x2
    6f78:	b	6f20 <__addtf3@@GCC_3.0+0x48c>
    6f7c:	cmp	x4, x9
    6f80:	b.eq	6b80 <__addtf3@@GCC_3.0+0xec>  // b.none
    6f84:	orr	x2, x2, #0x8000000000000
    6f88:	b	6f38 <__addtf3@@GCC_3.0+0x4a4>
    6f8c:	sub	w0, w5, #0x40
    6f90:	mov	w6, #0x80                  	// #128
    6f94:	sub	w6, w6, w5
    6f98:	cmp	w5, #0x40
    6f9c:	lsr	x0, x2, x0
    6fa0:	lsl	x2, x2, x6
    6fa4:	csel	x2, x2, xzr, ne  // ne = any
    6fa8:	orr	x1, x2, x1
    6fac:	cmp	x1, #0x0
    6fb0:	cset	x1, ne  // ne = any
    6fb4:	orr	x0, x0, x1
    6fb8:	mov	x2, #0x0                   	// #0
    6fbc:	b	6f70 <__addtf3@@GCC_3.0+0x4dc>
    6fc0:	orr	x1, x2, x1
    6fc4:	cmp	x1, #0x0
    6fc8:	cset	x0, ne  // ne = any
    6fcc:	b	6fb8 <__addtf3@@GCC_3.0+0x524>
    6fd0:	b.eq	70d0 <__addtf3@@GCC_3.0+0x63c>  // b.none
    6fd4:	mov	x5, #0x7fff                	// #32767
    6fd8:	cbnz	x4, 7078 <__addtf3@@GCC_3.0+0x5e4>
    6fdc:	orr	x4, x3, x7
    6fe0:	cbnz	x4, 700c <__addtf3@@GCC_3.0+0x578>
    6fe4:	cmp	x12, x5
    6fe8:	b.ne	7304 <__addtf3@@GCC_3.0+0x870>  // b.any
    6fec:	orr	x0, x2, x1
    6ff0:	cbz	x0, 7370 <__addtf3@@GCC_3.0+0x8dc>
    6ff4:	lsr	x0, x2, #50
    6ff8:	mov	x4, x6
    6ffc:	eor	x0, x0, #0x1
    7000:	mov	x8, x11
    7004:	and	w0, w0, #0x1
    7008:	b	6c6c <__addtf3@@GCC_3.0+0x1d8>
    700c:	cmn	w0, #0x1
    7010:	b.ne	7028 <__addtf3@@GCC_3.0+0x594>  // b.any
    7014:	subs	x7, x1, x7
    7018:	sbc	x3, x2, x3
    701c:	mov	x4, x6
    7020:	mov	x8, x11
    7024:	b	6f20 <__addtf3@@GCC_3.0+0x48c>
    7028:	cmp	x12, x5
    702c:	b.eq	6fec <__addtf3@@GCC_3.0+0x558>  // b.none
    7030:	mvn	w0, w0
    7034:	cmp	w0, #0x74
    7038:	b.gt	70c0 <__addtf3@@GCC_3.0+0x62c>
    703c:	cmp	w0, #0x3f
    7040:	b.gt	708c <__addtf3@@GCC_3.0+0x5f8>
    7044:	mov	w5, #0x40                  	// #64
    7048:	sub	w5, w5, w0
    704c:	lsr	x8, x7, x0
    7050:	lsl	x7, x7, x5
    7054:	cmp	x7, #0x0
    7058:	lsl	x4, x3, x5
    705c:	cset	x5, ne  // ne = any
    7060:	orr	x4, x4, x8
    7064:	lsr	x0, x3, x0
    7068:	orr	x4, x4, x5
    706c:	subs	x7, x1, x4
    7070:	sbc	x3, x2, x0
    7074:	b	701c <__addtf3@@GCC_3.0+0x588>
    7078:	cmp	x12, x5
    707c:	b.eq	6fec <__addtf3@@GCC_3.0+0x558>  // b.none
    7080:	neg	w0, w0
    7084:	orr	x3, x3, #0x8000000000000
    7088:	b	7034 <__addtf3@@GCC_3.0+0x5a0>
    708c:	sub	w4, w0, #0x40
    7090:	mov	w5, #0x80                  	// #128
    7094:	sub	w5, w5, w0
    7098:	cmp	w0, #0x40
    709c:	lsr	x4, x3, x4
    70a0:	lsl	x3, x3, x5
    70a4:	csel	x3, x3, xzr, ne  // ne = any
    70a8:	orr	x3, x3, x7
    70ac:	cmp	x3, #0x0
    70b0:	cset	x0, ne  // ne = any
    70b4:	orr	x4, x4, x0
    70b8:	mov	x0, #0x0                   	// #0
    70bc:	b	706c <__addtf3@@GCC_3.0+0x5d8>
    70c0:	orr	x3, x3, x7
    70c4:	cmp	x3, #0x0
    70c8:	cset	x4, ne  // ne = any
    70cc:	b	70b8 <__addtf3@@GCC_3.0+0x624>
    70d0:	add	x0, x4, #0x1
    70d4:	tst	x0, #0x7ffe
    70d8:	b.ne	71f4 <__addtf3@@GCC_3.0+0x760>  // b.any
    70dc:	orr	x12, x3, x7
    70e0:	orr	x13, x2, x1
    70e4:	cbnz	x4, 7160 <__addtf3@@GCC_3.0+0x6cc>
    70e8:	cbnz	x12, 7120 <__addtf3@@GCC_3.0+0x68c>
    70ec:	cbnz	x13, 7324 <__addtf3@@GCC_3.0+0x890>
    70f0:	and	x0, x10, #0xc00000
    70f4:	mov	x3, #0x0                   	// #0
    70f8:	cmp	x0, #0x800, lsl #12
    70fc:	mov	x7, #0x0                   	// #0
    7100:	cset	x8, eq  // eq = none
    7104:	orr	x0, x7, x3
    7108:	mov	x2, x3
    710c:	cmp	x0, #0x0
    7110:	mov	x1, x7
    7114:	cset	w5, ne  // ne = any
    7118:	mov	x4, #0x0                   	// #0
    711c:	b	6e74 <__addtf3@@GCC_3.0+0x3e0>
    7120:	cbz	x13, 7104 <__addtf3@@GCC_3.0+0x670>
    7124:	subs	x4, x7, x1
    7128:	cmp	x7, x1
    712c:	sbc	x0, x3, x2
    7130:	tbz	x0, #51, 7144 <__addtf3@@GCC_3.0+0x6b0>
    7134:	subs	x7, x1, x7
    7138:	sbc	x3, x2, x3
    713c:	mov	x8, x11
    7140:	b	7104 <__addtf3@@GCC_3.0+0x670>
    7144:	orr	x7, x4, x0
    7148:	cbnz	x7, 7330 <__addtf3@@GCC_3.0+0x89c>
    714c:	and	x0, x10, #0xc00000
    7150:	cmp	x0, #0x800, lsl #12
    7154:	cset	x8, eq  // eq = none
    7158:	mov	x3, #0x0                   	// #0
    715c:	b	7104 <__addtf3@@GCC_3.0+0x670>
    7160:	mov	x0, #0x7fff                	// #32767
    7164:	cmp	x4, x0
    7168:	b.ne	71c8 <__addtf3@@GCC_3.0+0x734>  // b.any
    716c:	cbz	x12, 7470 <__addtf3@@GCC_3.0+0x9dc>
    7170:	lsr	x0, x3, #50
    7174:	cmp	x6, x4
    7178:	eor	x0, x0, #0x1
    717c:	and	w0, w0, #0x1
    7180:	b.ne	71ec <__addtf3@@GCC_3.0+0x758>  // b.any
    7184:	cbz	x13, 7498 <__addtf3@@GCC_3.0+0xa04>
    7188:	tst	x2, #0x4000000000000
    718c:	csinc	w0, w0, wzr, ne  // ne = any
    7190:	cbz	x12, 71e0 <__addtf3@@GCC_3.0+0x74c>
    7194:	and	x9, x9, #0x1fffffffffffffff
    7198:	lsr	x4, x3, #3
    719c:	orr	x1, x9, x3, lsl #61
    71a0:	tbz	x3, #50, 71bc <__addtf3@@GCC_3.0+0x728>
    71a4:	lsr	x3, x2, #3
    71a8:	tbnz	x2, #50, 71bc <__addtf3@@GCC_3.0+0x728>
    71ac:	and	x1, x14, #0x1fffffffffffffff
    71b0:	mov	x4, x3
    71b4:	orr	x1, x1, x2, lsl #61
    71b8:	mov	x8, x11
    71bc:	extr	x2, x4, x1, #61
    71c0:	lsl	x1, x1, #3
    71c4:	b	6e3c <__addtf3@@GCC_3.0+0x3a8>
    71c8:	cmp	x6, x0
    71cc:	b.ne	71d8 <__addtf3@@GCC_3.0+0x744>  // b.any
    71d0:	mov	w0, #0x0                   	// #0
    71d4:	b	7184 <__addtf3@@GCC_3.0+0x6f0>
    71d8:	mov	w0, #0x0                   	// #0
    71dc:	cbnz	x12, 71ec <__addtf3@@GCC_3.0+0x758>
    71e0:	cbz	x13, 749c <__addtf3@@GCC_3.0+0xa08>
    71e4:	mov	x8, x11
    71e8:	b	6e3c <__addtf3@@GCC_3.0+0x3a8>
    71ec:	cbnz	x13, 7194 <__addtf3@@GCC_3.0+0x700>
    71f0:	b	6e4c <__addtf3@@GCC_3.0+0x3b8>
    71f4:	subs	x0, x7, x1
    71f8:	cmp	x7, x1
    71fc:	mov	x6, x0
    7200:	sbc	x5, x3, x2
    7204:	tbz	x5, #51, 7290 <__addtf3@@GCC_3.0+0x7fc>
    7208:	subs	x6, x1, x7
    720c:	mov	x8, x11
    7210:	sbc	x5, x2, x3
    7214:	clz	x0, x6
    7218:	cmp	x5, #0x0
    721c:	add	w0, w0, #0x40
    7220:	clz	x3, x5
    7224:	csel	w3, w0, w3, eq  // eq = none
    7228:	sub	w0, w3, #0xc
    722c:	cmp	w0, #0x3f
    7230:	b.gt	729c <__addtf3@@GCC_3.0+0x808>
    7234:	neg	w3, w0
    7238:	lsl	x5, x5, x0
    723c:	lsl	x7, x6, x0
    7240:	lsr	x3, x6, x3
    7244:	orr	x3, x3, x5
    7248:	sxtw	x1, w0
    724c:	cmp	x4, w0, sxtw
    7250:	b.gt	72dc <__addtf3@@GCC_3.0+0x848>
    7254:	sub	w4, w0, w4
    7258:	add	w2, w4, #0x1
    725c:	cmp	w2, #0x3f
    7260:	b.gt	72ac <__addtf3@@GCC_3.0+0x818>
    7264:	mov	w1, #0x40                  	// #64
    7268:	sub	w1, w1, w2
    726c:	lsr	x4, x7, x2
    7270:	lsl	x0, x3, x1
    7274:	orr	x0, x0, x4
    7278:	lsl	x1, x7, x1
    727c:	cmp	x1, #0x0
    7280:	cset	x1, ne  // ne = any
    7284:	lsr	x3, x3, x2
    7288:	orr	x7, x0, x1
    728c:	b	7104 <__addtf3@@GCC_3.0+0x670>
    7290:	orr	x7, x0, x5
    7294:	cbnz	x7, 7214 <__addtf3@@GCC_3.0+0x780>
    7298:	b	714c <__addtf3@@GCC_3.0+0x6b8>
    729c:	sub	w3, w3, #0x4c
    72a0:	mov	x7, #0x0                   	// #0
    72a4:	lsl	x3, x6, x3
    72a8:	b	7248 <__addtf3@@GCC_3.0+0x7b4>
    72ac:	sub	w4, w4, #0x3f
    72b0:	mov	w0, #0x80                  	// #128
    72b4:	sub	w0, w0, w2
    72b8:	cmp	w2, #0x40
    72bc:	lsr	x4, x3, x4
    72c0:	lsl	x3, x3, x0
    72c4:	csel	x3, x3, xzr, ne  // ne = any
    72c8:	orr	x3, x7, x3
    72cc:	cmp	x3, #0x0
    72d0:	cset	x3, ne  // ne = any
    72d4:	orr	x7, x4, x3
    72d8:	b	7158 <__addtf3@@GCC_3.0+0x6c4>
    72dc:	sub	x4, x4, x1
    72e0:	and	x3, x3, #0xfff7ffffffffffff
    72e4:	cbz	x4, 7104 <__addtf3@@GCC_3.0+0x670>
    72e8:	mov	x2, x3
    72ec:	mov	x1, x7
    72f0:	b	6b70 <__addtf3@@GCC_3.0+0xdc>
    72f4:	mov	x3, x2
    72f8:	mov	x7, x1
    72fc:	mov	x4, x12
    7300:	b	72e4 <__addtf3@@GCC_3.0+0x850>
    7304:	mov	x3, x2
    7308:	mov	x7, x1
    730c:	mov	x4, x12
    7310:	mov	x8, x11
    7314:	b	72e4 <__addtf3@@GCC_3.0+0x850>
    7318:	mov	x3, x2
    731c:	mov	x7, x1
    7320:	b	7104 <__addtf3@@GCC_3.0+0x670>
    7324:	mov	x3, x2
    7328:	mov	x7, x1
    732c:	b	713c <__addtf3@@GCC_3.0+0x6a8>
    7330:	mov	x3, x0
    7334:	mov	x7, x4
    7338:	b	7104 <__addtf3@@GCC_3.0+0x670>
    733c:	mov	x4, x6
    7340:	mov	x2, #0x0                   	// #0
    7344:	mov	x1, #0x0                   	// #0
    7348:	b	6b70 <__addtf3@@GCC_3.0+0xdc>
    734c:	mov	x4, x0
    7350:	mov	x2, #0x0                   	// #0
    7354:	mov	w0, #0x14                  	// #20
    7358:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>
    735c:	mov	x2, #0x0                   	// #0
    7360:	mov	w0, #0x14                  	// #20
    7364:	b	6c6c <__addtf3@@GCC_3.0+0x1d8>
    7368:	mov	x2, #0x0                   	// #0
    736c:	b	6b70 <__addtf3@@GCC_3.0+0xdc>
    7370:	mov	x4, x6
    7374:	mov	x8, x11
    7378:	mov	x2, #0x0                   	// #0
    737c:	mov	x1, #0x0                   	// #0
    7380:	b	6b70 <__addtf3@@GCC_3.0+0xdc>
    7384:	cbnz	x8, 6db4 <__addtf3@@GCC_3.0+0x320>
    7388:	adds	x1, x1, #0x8
    738c:	b	6db0 <__addtf3@@GCC_3.0+0x31c>
    7390:	cbz	x8, 6db4 <__addtf3@@GCC_3.0+0x320>
    7394:	b	7388 <__addtf3@@GCC_3.0+0x8f4>
    7398:	cbz	w5, 73a8 <__addtf3@@GCC_3.0+0x914>
    739c:	tbnz	w0, #4, 73a4 <__addtf3@@GCC_3.0+0x910>
    73a0:	tbz	w10, #11, 73a8 <__addtf3@@GCC_3.0+0x914>
    73a4:	orr	w0, w0, #0x8
    73a8:	tbz	x2, #51, 73c0 <__addtf3@@GCC_3.0+0x92c>
    73ac:	add	x4, x4, #0x1
    73b0:	mov	x3, #0x7fff                	// #32767
    73b4:	cmp	x4, x3
    73b8:	b.eq	7418 <__addtf3@@GCC_3.0+0x984>  // b.none
    73bc:	and	x2, x2, #0xfff7ffffffffffff
    73c0:	mov	x3, #0x7fff                	// #32767
    73c4:	extr	x1, x2, x1, #3
    73c8:	cmp	x4, x3
    73cc:	lsr	x2, x2, #3
    73d0:	b.ne	73e4 <__addtf3@@GCC_3.0+0x950>  // b.any
    73d4:	orr	x3, x1, x2
    73d8:	orr	x2, x2, #0x800000000000
    73dc:	cmp	x3, #0x0
    73e0:	csel	x2, x2, xzr, ne  // ne = any
    73e4:	and	x4, x4, #0x7fff
    73e8:	mov	x7, #0x0                   	// #0
    73ec:	bfxil	x7, x2, #0, #48
    73f0:	orr	w8, w4, w8, lsl #15
    73f4:	fmov	d0, x1
    73f8:	bfi	x7, x8, #48, #16
    73fc:	fmov	v0.d[1], x7
    7400:	cbz	w0, 7410 <__addtf3@@GCC_3.0+0x97c>
    7404:	str	q0, [sp, #16]
    7408:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    740c:	ldr	q0, [sp, #16]
    7410:	ldp	x29, x30, [sp], #32
    7414:	ret
    7418:	ands	x1, x10, #0xc00000
    741c:	b.eq	7438 <__addtf3@@GCC_3.0+0x9a4>  // b.none
    7420:	cmp	x1, #0x400, lsl #12
    7424:	b.ne	7448 <__addtf3@@GCC_3.0+0x9b4>  // b.any
    7428:	cmp	x8, #0x0
    742c:	mov	x2, #0x7ffe                	// #32766
    7430:	csetm	x1, ne  // ne = any
    7434:	csel	x4, x4, x2, eq  // eq = none
    7438:	mov	w2, #0x14                  	// #20
    743c:	orr	w0, w0, w2
    7440:	mov	x2, x1
    7444:	b	73c0 <__addtf3@@GCC_3.0+0x92c>
    7448:	cmp	x1, #0x800, lsl #12
    744c:	b.ne	7464 <__addtf3@@GCC_3.0+0x9d0>  // b.any
    7450:	cmp	x8, #0x0
    7454:	mov	x2, #0x7ffe                	// #32766
    7458:	csetm	x1, eq  // eq = none
    745c:	csel	x4, x4, x2, ne  // ne = any
    7460:	b	7438 <__addtf3@@GCC_3.0+0x9a4>
    7464:	mov	x1, #0xffffffffffffffff    	// #-1
    7468:	mov	x4, #0x7ffe                	// #32766
    746c:	b	7438 <__addtf3@@GCC_3.0+0x9a4>
    7470:	cmp	x6, x4
    7474:	b.eq	71d0 <__addtf3@@GCC_3.0+0x73c>  // b.none
    7478:	mov	w0, #0x0                   	// #0
    747c:	b	71e0 <__addtf3@@GCC_3.0+0x74c>
    7480:	cbz	x12, 6e3c <__addtf3@@GCC_3.0+0x3a8>
    7484:	b	6e4c <__addtf3@@GCC_3.0+0x3b8>
    7488:	cmp	x6, x4
    748c:	b.eq	6e2c <__addtf3@@GCC_3.0+0x398>  // b.none
    7490:	mov	w0, #0x0                   	// #0
    7494:	b	6e3c <__addtf3@@GCC_3.0+0x3a8>
    7498:	cbnz	x12, 6e4c <__addtf3@@GCC_3.0+0x3b8>
    749c:	mov	x8, #0x0                   	// #0
    74a0:	mov	x2, #0x7ffffffffffff       	// #2251799813685247
    74a4:	mov	x1, #0xfffffffffffffff8    	// #-8
    74a8:	mov	x4, #0x7fff                	// #32767
    74ac:	mov	w0, #0x1                   	// #1
    74b0:	b	6d7c <__addtf3@@GCC_3.0+0x2e8>

00000000000074b4 <__divtf3@@GCC_3.0>:
    74b4:	stp	x29, x30, [sp, #-32]!
    74b8:	mov	x29, sp
    74bc:	str	q0, [sp, #16]
    74c0:	ldp	x1, x10, [sp, #16]
    74c4:	str	q1, [sp, #16]
    74c8:	ldp	x8, x9, [sp, #16]
    74cc:	mrs	x6, fpcr
    74d0:	ubfx	x4, x10, #0, #48
    74d4:	ubfx	x11, x10, #48, #15
    74d8:	lsr	x10, x10, #63
    74dc:	and	w5, w10, #0xff
    74e0:	cbz	w11, 7514 <__divtf3@@GCC_3.0+0x60>
    74e4:	mov	w2, #0x7fff                	// #32767
    74e8:	cmp	w11, w2
    74ec:	b.eq	7574 <__divtf3@@GCC_3.0+0xc0>  // b.none
    74f0:	and	x11, x11, #0xffff
    74f4:	extr	x2, x4, x1, #61
    74f8:	mov	x12, #0xffffffffffffc001    	// #-16383
    74fc:	orr	x2, x2, #0x8000000000000
    7500:	lsl	x1, x1, #3
    7504:	add	x11, x11, x12
    7508:	mov	x14, #0x0                   	// #0
    750c:	mov	w0, #0x0                   	// #0
    7510:	b	7590 <__divtf3@@GCC_3.0+0xdc>
    7514:	orr	x2, x4, x1
    7518:	cbz	x2, 7608 <__divtf3@@GCC_3.0+0x154>
    751c:	clz	x2, x1
    7520:	cmp	x4, #0x0
    7524:	add	x2, x2, #0x40
    7528:	clz	x11, x4
    752c:	csel	x0, x2, x11, eq  // eq = none
    7530:	sub	x2, x0, #0xf
    7534:	cmp	x2, #0x3c
    7538:	b.gt	7564 <__divtf3@@GCC_3.0+0xb0>
    753c:	add	w7, w2, #0x3
    7540:	mov	w3, #0x3d                  	// #61
    7544:	sub	w2, w3, w2
    7548:	lsl	x4, x4, x7
    754c:	lsr	x2, x1, x2
    7550:	orr	x2, x2, x4
    7554:	lsl	x1, x1, x7
    7558:	mov	x11, #0xffffffffffffc011    	// #-16367
    755c:	sub	x11, x11, x0
    7560:	b	7508 <__divtf3@@GCC_3.0+0x54>
    7564:	sub	w2, w2, #0x3d
    7568:	lsl	x2, x1, x2
    756c:	mov	x1, #0x0                   	// #0
    7570:	b	7558 <__divtf3@@GCC_3.0+0xa4>
    7574:	orr	x2, x4, x1
    7578:	cbz	x2, 7618 <__divtf3@@GCC_3.0+0x164>
    757c:	lsr	x0, x4, #47
    7580:	mov	x2, x4
    7584:	eor	w0, w0, #0x1
    7588:	mov	x11, #0x7fff                	// #32767
    758c:	mov	x14, #0x3                   	// #3
    7590:	lsr	x13, x9, #63
    7594:	ubfx	x7, x9, #0, #48
    7598:	ubfx	x4, x9, #48, #15
    759c:	and	w3, w13, #0xff
    75a0:	cbz	w4, 7628 <__divtf3@@GCC_3.0+0x174>
    75a4:	mov	w9, #0x7fff                	// #32767
    75a8:	cmp	w4, w9
    75ac:	b.eq	7688 <__divtf3@@GCC_3.0+0x1d4>  // b.none
    75b0:	and	x4, x4, #0xffff
    75b4:	extr	x7, x7, x8, #61
    75b8:	mov	x9, #0xffffffffffffc001    	// #-16383
    75bc:	orr	x7, x7, #0x8000000000000
    75c0:	lsl	x8, x8, #3
    75c4:	add	x4, x4, x9
    75c8:	mov	x12, #0x0                   	// #0
    75cc:	eor	w5, w5, w3
    75d0:	orr	x3, x12, x14, lsl #2
    75d4:	sub	x3, x3, #0x1
    75d8:	and	x5, x5, #0xff
    75dc:	sub	x9, x11, x4
    75e0:	cmp	x3, #0xe
    75e4:	b.hi	76cc <__divtf3@@GCC_3.0+0x218>  // b.pmore
    75e8:	cmp	w3, #0xe
    75ec:	b.hi	76cc <__divtf3@@GCC_3.0+0x218>  // b.pmore
    75f0:	adrp	x4, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    75f4:	add	x4, x4, #0xc50
    75f8:	ldrh	w3, [x4, w3, uxtw #1]
    75fc:	adr	x4, 7608 <__divtf3@@GCC_3.0+0x154>
    7600:	add	x3, x4, w3, sxth #2
    7604:	br	x3
    7608:	mov	x1, #0x0                   	// #0
    760c:	mov	x11, #0x0                   	// #0
    7610:	mov	x14, #0x1                   	// #1
    7614:	b	750c <__divtf3@@GCC_3.0+0x58>
    7618:	mov	x1, #0x0                   	// #0
    761c:	mov	x11, #0x7fff                	// #32767
    7620:	mov	x14, #0x2                   	// #2
    7624:	b	750c <__divtf3@@GCC_3.0+0x58>
    7628:	orr	x4, x7, x8
    762c:	cbz	x4, 76a4 <__divtf3@@GCC_3.0+0x1f0>
    7630:	clz	x12, x8
    7634:	cmp	x7, #0x0
    7638:	add	x12, x12, #0x40
    763c:	clz	x9, x7
    7640:	csel	x9, x12, x9, eq  // eq = none
    7644:	sub	x12, x9, #0xf
    7648:	cmp	x12, #0x3c
    764c:	b.gt	7678 <__divtf3@@GCC_3.0+0x1c4>
    7650:	add	w16, w12, #0x3
    7654:	mov	w15, #0x3d                  	// #61
    7658:	sub	w12, w15, w12
    765c:	lsl	x7, x7, x16
    7660:	lsr	x12, x8, x12
    7664:	orr	x7, x12, x7
    7668:	lsl	x8, x8, x16
    766c:	mov	x4, #0xffffffffffffc011    	// #-16367
    7670:	sub	x4, x4, x9
    7674:	b	75c8 <__divtf3@@GCC_3.0+0x114>
    7678:	sub	w7, w12, #0x3d
    767c:	lsl	x7, x8, x7
    7680:	mov	x8, #0x0                   	// #0
    7684:	b	766c <__divtf3@@GCC_3.0+0x1b8>
    7688:	orr	x4, x7, x8
    768c:	cbz	x4, 76b8 <__divtf3@@GCC_3.0+0x204>
    7690:	tst	x7, #0x800000000000
    7694:	mov	x4, #0x7fff                	// #32767
    7698:	csinc	w0, w0, wzr, ne  // ne = any
    769c:	mov	x12, #0x3                   	// #3
    76a0:	b	75cc <__divtf3@@GCC_3.0+0x118>
    76a4:	mov	x7, #0x0                   	// #0
    76a8:	mov	x8, #0x0                   	// #0
    76ac:	mov	x4, #0x0                   	// #0
    76b0:	mov	x12, #0x1                   	// #1
    76b4:	b	75cc <__divtf3@@GCC_3.0+0x118>
    76b8:	mov	x7, #0x0                   	// #0
    76bc:	mov	x8, #0x0                   	// #0
    76c0:	mov	x4, #0x7fff                	// #32767
    76c4:	mov	x12, #0x2                   	// #2
    76c8:	b	75cc <__divtf3@@GCC_3.0+0x118>
    76cc:	cmp	x7, x2
    76d0:	b.cc	76dc <__divtf3@@GCC_3.0+0x228>  // b.lo, b.ul, b.last
    76d4:	ccmp	x8, x1, #0x2, eq  // eq = none
    76d8:	b.hi	7974 <__divtf3@@GCC_3.0+0x4c0>  // b.pmore
    76dc:	lsl	x14, x1, #63
    76e0:	extr	x1, x2, x1, #1
    76e4:	lsr	x2, x2, #1
    76e8:	extr	x3, x7, x8, #52
    76ec:	ubfx	x7, x7, #20, #32
    76f0:	and	x13, x3, #0xffffffff
    76f4:	lsl	x8, x8, #12
    76f8:	udiv	x10, x2, x7
    76fc:	msub	x2, x10, x7, x2
    7700:	mul	x11, x13, x10
    7704:	extr	x2, x2, x1, #32
    7708:	cmp	x11, x2
    770c:	b.ls	7980 <__divtf3@@GCC_3.0+0x4cc>  // b.plast
    7710:	sub	x4, x10, #0x1
    7714:	adds	x2, x3, x2
    7718:	b.cs	772c <__divtf3@@GCC_3.0+0x278>  // b.hs, b.nlast
    771c:	cmp	x11, x2
    7720:	b.ls	772c <__divtf3@@GCC_3.0+0x278>  // b.plast
    7724:	sub	x4, x10, #0x2
    7728:	add	x2, x2, x3
    772c:	sub	x2, x2, x11
    7730:	and	x1, x1, #0xffffffff
    7734:	udiv	x10, x2, x7
    7738:	msub	x2, x10, x7, x2
    773c:	mul	x11, x13, x10
    7740:	orr	x1, x1, x2, lsl #32
    7744:	cmp	x11, x1
    7748:	b.ls	7988 <__divtf3@@GCC_3.0+0x4d4>  // b.plast
    774c:	sub	x2, x10, #0x1
    7750:	adds	x1, x3, x1
    7754:	b.cs	7768 <__divtf3@@GCC_3.0+0x2b4>  // b.hs, b.nlast
    7758:	cmp	x11, x1
    775c:	b.ls	7768 <__divtf3@@GCC_3.0+0x2b4>  // b.plast
    7760:	sub	x2, x10, #0x2
    7764:	add	x1, x1, x3
    7768:	orr	x4, x2, x4, lsl #32
    776c:	and	x15, x8, #0xffffffff
    7770:	lsr	x10, x8, #32
    7774:	sub	x1, x1, x11
    7778:	lsr	x12, x4, #32
    777c:	and	x11, x4, #0xffffffff
    7780:	mul	x16, x12, x15
    7784:	mul	x2, x11, x15
    7788:	madd	x11, x10, x11, x16
    778c:	mul	x12, x12, x10
    7790:	add	x11, x11, x2, lsr #32
    7794:	cmp	x16, x11
    7798:	b.ls	77a4 <__divtf3@@GCC_3.0+0x2f0>  // b.plast
    779c:	mov	x16, #0x100000000           	// #4294967296
    77a0:	add	x12, x12, x16
    77a4:	add	x12, x12, x11, lsr #32
    77a8:	and	x2, x2, #0xffffffff
    77ac:	add	x11, x2, x11, lsl #32
    77b0:	cmp	x1, x12
    77b4:	b.cc	77c0 <__divtf3@@GCC_3.0+0x30c>  // b.lo, b.ul, b.last
    77b8:	ccmp	x14, x11, #0x2, eq  // eq = none
    77bc:	b.cs	7990 <__divtf3@@GCC_3.0+0x4dc>  // b.hs, b.nlast
    77c0:	adds	x16, x14, x8
    77c4:	sub	x2, x4, #0x1
    77c8:	adc	x1, x1, x3
    77cc:	cset	x17, cs  // cs = hs, nlast
    77d0:	mov	x14, x16
    77d4:	cmp	x3, x1
    77d8:	b.cc	77e8 <__divtf3@@GCC_3.0+0x334>  // b.lo, b.ul, b.last
    77dc:	cmp	x17, #0x0
    77e0:	ccmp	x3, x1, #0x0, eq  // eq = none
    77e4:	b.ne	7804 <__divtf3@@GCC_3.0+0x350>  // b.any
    77e8:	cmp	x12, x1
    77ec:	b.hi	77f8 <__divtf3@@GCC_3.0+0x344>  // b.pmore
    77f0:	ccmp	x11, x16, #0x0, eq  // eq = none
    77f4:	b.ls	7804 <__divtf3@@GCC_3.0+0x350>  // b.plast
    77f8:	adds	x14, x8, x16
    77fc:	sub	x2, x4, #0x2
    7800:	adc	x1, x1, x3
    7804:	subs	x16, x14, x11
    7808:	cmp	x14, x11
    780c:	sbc	x1, x1, x12
    7810:	cmp	x3, x1
    7814:	b.eq	7a24 <__divtf3@@GCC_3.0+0x570>  // b.none
    7818:	udiv	x12, x1, x7
    781c:	msub	x1, x12, x7, x1
    7820:	mul	x4, x13, x12
    7824:	extr	x1, x1, x16, #32
    7828:	cmp	x4, x1
    782c:	b.ls	7998 <__divtf3@@GCC_3.0+0x4e4>  // b.plast
    7830:	sub	x11, x12, #0x1
    7834:	adds	x1, x3, x1
    7838:	b.cs	784c <__divtf3@@GCC_3.0+0x398>  // b.hs, b.nlast
    783c:	cmp	x4, x1
    7840:	b.ls	784c <__divtf3@@GCC_3.0+0x398>  // b.plast
    7844:	sub	x11, x12, #0x2
    7848:	add	x1, x1, x3
    784c:	sub	x1, x1, x4
    7850:	and	x16, x16, #0xffffffff
    7854:	udiv	x12, x1, x7
    7858:	msub	x4, x12, x7, x1
    785c:	mul	x13, x13, x12
    7860:	orr	x4, x16, x4, lsl #32
    7864:	cmp	x13, x4
    7868:	b.ls	79a0 <__divtf3@@GCC_3.0+0x4ec>  // b.plast
    786c:	sub	x1, x12, #0x1
    7870:	adds	x4, x3, x4
    7874:	b.cs	7888 <__divtf3@@GCC_3.0+0x3d4>  // b.hs, b.nlast
    7878:	cmp	x13, x4
    787c:	b.ls	7888 <__divtf3@@GCC_3.0+0x3d4>  // b.plast
    7880:	sub	x1, x12, #0x2
    7884:	add	x4, x4, x3
    7888:	orr	x11, x1, x11, lsl #32
    788c:	sub	x4, x4, x13
    7890:	and	x12, x11, #0xffffffff
    7894:	lsr	x7, x11, #32
    7898:	mul	x1, x15, x12
    789c:	mul	x15, x7, x15
    78a0:	mul	x7, x10, x7
    78a4:	madd	x10, x10, x12, x15
    78a8:	add	x10, x10, x1, lsr #32
    78ac:	cmp	x15, x10
    78b0:	b.ls	78bc <__divtf3@@GCC_3.0+0x408>  // b.plast
    78b4:	mov	x12, #0x100000000           	// #4294967296
    78b8:	add	x7, x7, x12
    78bc:	add	x7, x7, x10, lsr #32
    78c0:	and	x1, x1, #0xffffffff
    78c4:	add	x10, x1, x10, lsl #32
    78c8:	cmp	x4, x7
    78cc:	b.cc	78dc <__divtf3@@GCC_3.0+0x428>  // b.lo, b.ul, b.last
    78d0:	cmp	x10, #0x0
    78d4:	ccmp	x4, x7, #0x0, ne  // ne = any
    78d8:	b.ne	79a8 <__divtf3@@GCC_3.0+0x4f4>  // b.any
    78dc:	adds	x12, x3, x4
    78e0:	sub	x1, x11, #0x1
    78e4:	mov	x4, x12
    78e8:	b.cs	7914 <__divtf3@@GCC_3.0+0x460>  // b.hs, b.nlast
    78ec:	cmp	x12, x7
    78f0:	b.cc	78fc <__divtf3@@GCC_3.0+0x448>  // b.lo, b.ul, b.last
    78f4:	ccmp	x8, x10, #0x2, eq  // eq = none
    78f8:	b.cs	7914 <__divtf3@@GCC_3.0+0x460>  // b.hs, b.nlast
    78fc:	sub	x1, x11, #0x2
    7900:	lsl	x11, x8, #1
    7904:	cmp	x8, x11
    7908:	mov	x8, x11
    790c:	cinc	x4, x3, hi  // hi = pmore
    7910:	add	x4, x12, x4
    7914:	cmp	x4, x7
    7918:	mov	x3, x1
    791c:	ccmp	x8, x10, #0x0, eq  // eq = none
    7920:	orr	x1, x1, #0x1
    7924:	csel	x1, x1, x3, ne  // ne = any
    7928:	mov	x3, #0x3fff                	// #16383
    792c:	add	x3, x9, x3
    7930:	cmp	x3, #0x0
    7934:	b.le	7af0 <__divtf3@@GCC_3.0+0x63c>
    7938:	tst	x1, #0x7
    793c:	b.eq	7a3c <__divtf3@@GCC_3.0+0x588>  // b.none
    7940:	and	x4, x6, #0xc00000
    7944:	orr	w0, w0, #0x10
    7948:	cmp	x4, #0x400, lsl #12
    794c:	b.eq	7a2c <__divtf3@@GCC_3.0+0x578>  // b.none
    7950:	cmp	x4, #0x800, lsl #12
    7954:	b.eq	7a38 <__divtf3@@GCC_3.0+0x584>  // b.none
    7958:	cbnz	x4, 7a3c <__divtf3@@GCC_3.0+0x588>
    795c:	and	x4, x1, #0xf
    7960:	cmp	x4, #0x4
    7964:	b.eq	7a3c <__divtf3@@GCC_3.0+0x588>  // b.none
    7968:	adds	x1, x1, #0x4
    796c:	cinc	x2, x2, cs  // cs = hs, nlast
    7970:	b	7a3c <__divtf3@@GCC_3.0+0x588>
    7974:	sub	x9, x9, #0x1
    7978:	mov	x14, #0x0                   	// #0
    797c:	b	76e8 <__divtf3@@GCC_3.0+0x234>
    7980:	mov	x4, x10
    7984:	b	772c <__divtf3@@GCC_3.0+0x278>
    7988:	mov	x2, x10
    798c:	b	7768 <__divtf3@@GCC_3.0+0x2b4>
    7990:	mov	x2, x4
    7994:	b	7804 <__divtf3@@GCC_3.0+0x350>
    7998:	mov	x11, x12
    799c:	b	784c <__divtf3@@GCC_3.0+0x398>
    79a0:	mov	x1, x12
    79a4:	b	7888 <__divtf3@@GCC_3.0+0x3d4>
    79a8:	mov	x1, x11
    79ac:	mov	x8, #0x0                   	// #0
    79b0:	b	7914 <__divtf3@@GCC_3.0+0x460>
    79b4:	tbz	x2, #47, 79c8 <__divtf3@@GCC_3.0+0x514>
    79b8:	tbnz	x7, #47, 79c8 <__divtf3@@GCC_3.0+0x514>
    79bc:	mov	x2, x7
    79c0:	mov	x1, x8
    79c4:	mov	x10, x13
    79c8:	orr	x2, x2, #0x800000000000
    79cc:	mov	x5, x10
    79d0:	mov	x3, #0x7fff                	// #32767
    79d4:	b	7a5c <__divtf3@@GCC_3.0+0x5a8>
    79d8:	orr	w0, w0, #0x2
    79dc:	mov	x2, #0x0                   	// #0
    79e0:	mov	x1, #0x0                   	// #0
    79e4:	b	79d0 <__divtf3@@GCC_3.0+0x51c>
    79e8:	mov	x5, x10
    79ec:	mov	x12, x14
    79f0:	cmp	x12, #0x1
    79f4:	b.eq	7c58 <__divtf3@@GCC_3.0+0x7a4>  // b.none
    79f8:	cbz	x12, 7928 <__divtf3@@GCC_3.0+0x474>
    79fc:	cmp	x12, #0x2
    7a00:	b.eq	79dc <__divtf3@@GCC_3.0+0x528>  // b.none
    7a04:	cmp	x12, #0x3
    7a08:	b.ne	7928 <__divtf3@@GCC_3.0+0x474>  // b.any
    7a0c:	mov	x10, x5
    7a10:	b	79c8 <__divtf3@@GCC_3.0+0x514>
    7a14:	mov	x2, x7
    7a18:	mov	x1, x8
    7a1c:	mov	x5, x13
    7a20:	b	79f0 <__divtf3@@GCC_3.0+0x53c>
    7a24:	mov	x1, #0xffffffffffffffff    	// #-1
    7a28:	b	7928 <__divtf3@@GCC_3.0+0x474>
    7a2c:	cbnz	x5, 7a3c <__divtf3@@GCC_3.0+0x588>
    7a30:	adds	x1, x1, #0x8
    7a34:	b	796c <__divtf3@@GCC_3.0+0x4b8>
    7a38:	cbnz	x5, 7a30 <__divtf3@@GCC_3.0+0x57c>
    7a3c:	tbz	x2, #52, 7a48 <__divtf3@@GCC_3.0+0x594>
    7a40:	and	x2, x2, #0xffefffffffffffff
    7a44:	add	x3, x9, #0x4, lsl #12
    7a48:	mov	x4, #0x7ffe                	// #32766
    7a4c:	cmp	x3, x4
    7a50:	b.gt	7a90 <__divtf3@@GCC_3.0+0x5dc>
    7a54:	extr	x1, x2, x1, #3
    7a58:	lsr	x2, x2, #3
    7a5c:	and	x3, x3, #0x7fff
    7a60:	mov	x7, #0x0                   	// #0
    7a64:	bfxil	x7, x2, #0, #48
    7a68:	orr	w3, w3, w5, lsl #15
    7a6c:	fmov	d0, x1
    7a70:	bfi	x7, x3, #48, #16
    7a74:	fmov	v0.d[1], x7
    7a78:	cbz	w0, 7a88 <__divtf3@@GCC_3.0+0x5d4>
    7a7c:	str	q0, [sp, #16]
    7a80:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    7a84:	ldr	q0, [sp, #16]
    7a88:	ldp	x29, x30, [sp], #32
    7a8c:	ret
    7a90:	and	x1, x6, #0xc00000
    7a94:	cmp	x1, #0x400, lsl #12
    7a98:	b.eq	7abc <__divtf3@@GCC_3.0+0x608>  // b.none
    7a9c:	cmp	x1, #0x800, lsl #12
    7aa0:	b.eq	7ad0 <__divtf3@@GCC_3.0+0x61c>  // b.none
    7aa4:	cbnz	x1, 7ae4 <__divtf3@@GCC_3.0+0x630>
    7aa8:	mov	x3, #0x7fff                	// #32767
    7aac:	mov	w2, #0x14                  	// #20
    7ab0:	orr	w0, w0, w2
    7ab4:	mov	x2, x1
    7ab8:	b	7a5c <__divtf3@@GCC_3.0+0x5a8>
    7abc:	cmp	x5, #0x0
    7ac0:	mov	x2, #0x7fff                	// #32767
    7ac4:	csetm	x1, ne  // ne = any
    7ac8:	csel	x3, x2, x4, eq  // eq = none
    7acc:	b	7aac <__divtf3@@GCC_3.0+0x5f8>
    7ad0:	cmp	x5, #0x0
    7ad4:	mov	x2, #0x7fff                	// #32767
    7ad8:	csetm	x1, eq  // eq = none
    7adc:	csel	x3, x2, x4, ne  // ne = any
    7ae0:	b	7aac <__divtf3@@GCC_3.0+0x5f8>
    7ae4:	mov	x3, x4
    7ae8:	mov	x1, #0xffffffffffffffff    	// #-1
    7aec:	b	7aac <__divtf3@@GCC_3.0+0x5f8>
    7af0:	mov	x4, #0x1                   	// #1
    7af4:	sub	x3, x4, x3
    7af8:	cmp	x3, #0x74
    7afc:	b.gt	7be4 <__divtf3@@GCC_3.0+0x730>
    7b00:	cmp	x3, #0x3f
    7b04:	b.gt	7b6c <__divtf3@@GCC_3.0+0x6b8>
    7b08:	mov	w7, #0x40                  	// #64
    7b0c:	sub	w7, w7, w3
    7b10:	lsr	x8, x1, x3
    7b14:	lsl	x1, x1, x7
    7b18:	cmp	x1, #0x0
    7b1c:	lsl	x4, x2, x7
    7b20:	cset	x1, ne  // ne = any
    7b24:	orr	x4, x4, x8
    7b28:	lsr	x2, x2, x3
    7b2c:	orr	x1, x4, x1
    7b30:	tst	x1, #0x7
    7b34:	b.eq	7bb0 <__divtf3@@GCC_3.0+0x6fc>  // b.none
    7b38:	and	x3, x6, #0xc00000
    7b3c:	orr	w0, w0, #0x10
    7b40:	cmp	x3, #0x400, lsl #12
    7b44:	b.eq	7ba0 <__divtf3@@GCC_3.0+0x6ec>  // b.none
    7b48:	cmp	x3, #0x800, lsl #12
    7b4c:	b.eq	7bac <__divtf3@@GCC_3.0+0x6f8>  // b.none
    7b50:	cbnz	x3, 7bb0 <__divtf3@@GCC_3.0+0x6fc>
    7b54:	and	x3, x1, #0xf
    7b58:	cmp	x3, #0x4
    7b5c:	b.eq	7bb0 <__divtf3@@GCC_3.0+0x6fc>  // b.none
    7b60:	adds	x1, x1, #0x4
    7b64:	cinc	x2, x2, cs  // cs = hs, nlast
    7b68:	b	7bb0 <__divtf3@@GCC_3.0+0x6fc>
    7b6c:	sub	w4, w3, #0x40
    7b70:	mov	w7, #0x80                  	// #128
    7b74:	sub	w7, w7, w3
    7b78:	cmp	x3, #0x40
    7b7c:	lsr	x4, x2, x4
    7b80:	lsl	x2, x2, x7
    7b84:	csel	x2, x2, xzr, ne  // ne = any
    7b88:	orr	x1, x2, x1
    7b8c:	mov	x2, #0x0                   	// #0
    7b90:	cmp	x1, #0x0
    7b94:	cset	x1, ne  // ne = any
    7b98:	orr	x1, x4, x1
    7b9c:	b	7b30 <__divtf3@@GCC_3.0+0x67c>
    7ba0:	cbnz	x5, 7bb0 <__divtf3@@GCC_3.0+0x6fc>
    7ba4:	adds	x1, x1, #0x8
    7ba8:	b	7b64 <__divtf3@@GCC_3.0+0x6b0>
    7bac:	cbnz	x5, 7ba4 <__divtf3@@GCC_3.0+0x6f0>
    7bb0:	tbz	x2, #51, 7bcc <__divtf3@@GCC_3.0+0x718>
    7bb4:	orr	w0, w0, #0x10
    7bb8:	mov	x2, #0x0                   	// #0
    7bbc:	mov	x1, #0x0                   	// #0
    7bc0:	mov	x3, #0x1                   	// #1
    7bc4:	orr	w0, w0, #0x8
    7bc8:	b	7a5c <__divtf3@@GCC_3.0+0x5a8>
    7bcc:	mov	x3, #0x0                   	// #0
    7bd0:	extr	x1, x2, x1, #3
    7bd4:	lsr	x2, x2, #3
    7bd8:	tbnz	w0, #4, 7bc4 <__divtf3@@GCC_3.0+0x710>
    7bdc:	tbz	w6, #11, 7a5c <__divtf3@@GCC_3.0+0x5a8>
    7be0:	b	7bc4 <__divtf3@@GCC_3.0+0x710>
    7be4:	orr	x1, x1, x2
    7be8:	cbz	x1, 7c14 <__divtf3@@GCC_3.0+0x760>
    7bec:	and	x6, x6, #0xc00000
    7bf0:	orr	w0, w0, #0x10
    7bf4:	cmp	x6, #0x400, lsl #12
    7bf8:	b.eq	7c24 <__divtf3@@GCC_3.0+0x770>  // b.none
    7bfc:	cmp	x6, #0x800, lsl #12
    7c00:	b.eq	7c34 <__divtf3@@GCC_3.0+0x780>  // b.none
    7c04:	cmp	x6, #0x0
    7c08:	mov	x1, #0x5                   	// #5
    7c0c:	csel	x4, x4, x1, ne  // ne = any
    7c10:	lsr	x1, x4, #3
    7c14:	orr	w0, w0, #0x8
    7c18:	mov	x2, #0x0                   	// #0
    7c1c:	mov	x3, #0x0                   	// #0
    7c20:	b	7a5c <__divtf3@@GCC_3.0+0x5a8>
    7c24:	cmp	x5, #0x0
    7c28:	mov	x1, #0x9                   	// #9
    7c2c:	csel	x4, x1, x4, eq  // eq = none
    7c30:	b	7c10 <__divtf3@@GCC_3.0+0x75c>
    7c34:	cmp	x5, #0x0
    7c38:	mov	x1, #0x9                   	// #9
    7c3c:	csel	x4, x1, x4, ne  // ne = any
    7c40:	b	7c10 <__divtf3@@GCC_3.0+0x75c>
    7c44:	mov	x2, #0xffffffffffff        	// #281474976710655
    7c48:	mov	x1, #0xffffffffffffffff    	// #-1
    7c4c:	mov	w0, #0x1                   	// #1
    7c50:	mov	x10, #0x0                   	// #0
    7c54:	b	79c8 <__divtf3@@GCC_3.0+0x514>
    7c58:	mov	x2, #0x0                   	// #0
    7c5c:	mov	x1, #0x0                   	// #0
    7c60:	b	7c1c <__divtf3@@GCC_3.0+0x768>

0000000000007c64 <__eqtf2@@GCC_3.0>:
    7c64:	stp	x29, x30, [sp, #-32]!
    7c68:	mov	x29, sp
    7c6c:	str	q0, [sp, #16]
    7c70:	ldp	x8, x0, [sp, #16]
    7c74:	str	q1, [sp, #16]
    7c78:	ldp	x9, x1, [sp, #16]
    7c7c:	mrs	x2, fpcr
    7c80:	ubfx	x3, x0, #48, #15
    7c84:	ubfx	x2, x0, #0, #48
    7c88:	ubfx	x7, x1, #0, #48
    7c8c:	lsr	x0, x0, #63
    7c90:	ubfx	x5, x1, #48, #15
    7c94:	lsr	x1, x1, #63
    7c98:	mov	x10, #0x7fff                	// #32767
    7c9c:	mov	x4, x8
    7ca0:	and	w0, w0, #0xff
    7ca4:	mov	x6, x9
    7ca8:	and	w1, w1, #0xff
    7cac:	cmp	x3, x10
    7cb0:	b.ne	7cc8 <__eqtf2@@GCC_3.0+0x64>  // b.any
    7cb4:	orr	x10, x2, x8
    7cb8:	cbnz	x10, 7d34 <__eqtf2@@GCC_3.0+0xd0>
    7cbc:	cmp	x5, x3
    7cc0:	b.ne	7d5c <__eqtf2@@GCC_3.0+0xf8>  // b.any
    7cc4:	b	7cd0 <__eqtf2@@GCC_3.0+0x6c>
    7cc8:	cmp	x5, x10
    7ccc:	b.ne	7cd8 <__eqtf2@@GCC_3.0+0x74>  // b.any
    7cd0:	orr	x10, x7, x6
    7cd4:	cbnz	x10, 7d20 <__eqtf2@@GCC_3.0+0xbc>
    7cd8:	cmp	x3, x5
    7cdc:	b.ne	7d5c <__eqtf2@@GCC_3.0+0xf8>  // b.any
    7ce0:	cmp	x2, x7
    7ce4:	ccmp	x8, x9, #0x0, eq  // eq = none
    7ce8:	b.ne	7d5c <__eqtf2@@GCC_3.0+0xf8>  // b.any
    7cec:	cmp	w0, w1
    7cf0:	b.eq	7d18 <__eqtf2@@GCC_3.0+0xb4>  // b.none
    7cf4:	cbnz	x3, 7d5c <__eqtf2@@GCC_3.0+0xf8>
    7cf8:	orr	x2, x2, x4
    7cfc:	cmp	x2, #0x0
    7d00:	cset	w0, ne  // ne = any
    7d04:	ldp	x29, x30, [sp], #32
    7d08:	ret
    7d0c:	mov	w0, #0x1                   	// #1
    7d10:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    7d14:	b	7d5c <__eqtf2@@GCC_3.0+0xf8>
    7d18:	mov	w0, #0x0                   	// #0
    7d1c:	b	7d04 <__eqtf2@@GCC_3.0+0xa0>
    7d20:	mov	x0, #0x7fff                	// #32767
    7d24:	cmp	x3, x0
    7d28:	b.ne	7d54 <__eqtf2@@GCC_3.0+0xf0>  // b.any
    7d2c:	orr	x4, x2, x4
    7d30:	cbz	x4, 7d54 <__eqtf2@@GCC_3.0+0xf0>
    7d34:	tst	x2, #0x800000000000
    7d38:	b.eq	7d0c <__eqtf2@@GCC_3.0+0xa8>  // b.none
    7d3c:	mov	x1, #0x7fff                	// #32767
    7d40:	mov	w0, #0x1                   	// #1
    7d44:	cmp	x5, x1
    7d48:	b.ne	7d04 <__eqtf2@@GCC_3.0+0xa0>  // b.any
    7d4c:	orr	x6, x7, x6
    7d50:	cbz	x6, 7d04 <__eqtf2@@GCC_3.0+0xa0>
    7d54:	tst	x7, #0x800000000000
    7d58:	b.eq	7d0c <__eqtf2@@GCC_3.0+0xa8>  // b.none
    7d5c:	mov	w0, #0x1                   	// #1
    7d60:	b	7d04 <__eqtf2@@GCC_3.0+0xa0>

0000000000007d64 <__getf2@@GCC_3.0>:
    7d64:	stp	x29, x30, [sp, #-32]!
    7d68:	mov	x29, sp
    7d6c:	str	q0, [sp, #16]
    7d70:	ldp	x8, x1, [sp, #16]
    7d74:	str	q1, [sp, #16]
    7d78:	ldp	x7, x0, [sp, #16]
    7d7c:	mrs	x2, fpcr
    7d80:	ubfx	x10, x1, #48, #15
    7d84:	lsr	x2, x0, #63
    7d88:	ubfx	x4, x1, #0, #48
    7d8c:	lsr	x1, x1, #63
    7d90:	ubfx	x3, x0, #0, #48
    7d94:	ubfx	x9, x0, #48, #15
    7d98:	mov	x5, x8
    7d9c:	mov	x0, #0x7fff                	// #32767
    7da0:	and	w1, w1, #0xff
    7da4:	mov	x6, x7
    7da8:	and	w2, w2, #0xff
    7dac:	cmp	x10, x0
    7db0:	b.ne	7dbc <__getf2@@GCC_3.0+0x58>  // b.any
    7db4:	orr	x11, x4, x8
    7db8:	cbnz	x11, 7e8c <__getf2@@GCC_3.0+0x128>
    7dbc:	cmp	x9, x0
    7dc0:	b.ne	7dcc <__getf2@@GCC_3.0+0x68>  // b.any
    7dc4:	orr	x0, x3, x6
    7dc8:	cbnz	x0, 7e8c <__getf2@@GCC_3.0+0x128>
    7dcc:	cbnz	x10, 7e0c <__getf2@@GCC_3.0+0xa8>
    7dd0:	orr	x5, x4, x5
    7dd4:	cmp	x5, #0x0
    7dd8:	cset	w5, eq  // eq = none
    7ddc:	cbnz	x9, 7e14 <__getf2@@GCC_3.0+0xb0>
    7de0:	orr	x6, x3, x6
    7de4:	cmp	x6, #0x0
    7de8:	cset	w0, eq  // eq = none
    7dec:	csel	w6, w5, wzr, eq  // eq = none
    7df0:	cbnz	w6, 7e9c <__getf2@@GCC_3.0+0x138>
    7df4:	and	x2, x2, #0xff
    7df8:	cbz	w5, 7e1c <__getf2@@GCC_3.0+0xb8>
    7dfc:	cmp	x2, #0x0
    7e00:	csinv	w0, w5, wzr, ne  // ne = any
    7e04:	ldp	x29, x30, [sp], #32
    7e08:	ret
    7e0c:	mov	w5, #0x0                   	// #0
    7e10:	b	7ddc <__getf2@@GCC_3.0+0x78>
    7e14:	mov	w0, #0x0                   	// #0
    7e18:	b	7df4 <__getf2@@GCC_3.0+0x90>
    7e1c:	and	x1, x1, #0xff
    7e20:	cbz	w0, 7e30 <__getf2@@GCC_3.0+0xcc>
    7e24:	cmp	x1, #0x0
    7e28:	csinv	w0, w0, wzr, eq  // eq = none
    7e2c:	b	7e04 <__getf2@@GCC_3.0+0xa0>
    7e30:	cmp	x1, x2
    7e34:	b.eq	7e48 <__getf2@@GCC_3.0+0xe4>  // b.none
    7e38:	mov	w0, #0xffffffff            	// #-1
    7e3c:	cmp	x1, #0x0
    7e40:	cneg	w0, w0, eq  // eq = none
    7e44:	b	7e04 <__getf2@@GCC_3.0+0xa0>
    7e48:	cmp	x10, x9
    7e4c:	b.gt	7e38 <__getf2@@GCC_3.0+0xd4>
    7e50:	b.ge	7e5c <__getf2@@GCC_3.0+0xf8>  // b.tcont
    7e54:	mov	w0, #0x1                   	// #1
    7e58:	b	7e3c <__getf2@@GCC_3.0+0xd8>
    7e5c:	cmp	x4, x3
    7e60:	b.hi	7e38 <__getf2@@GCC_3.0+0xd4>  // b.pmore
    7e64:	cset	w2, eq  // eq = none
    7e68:	cmp	w2, #0x0
    7e6c:	ccmp	x8, x7, #0x0, ne  // ne = any
    7e70:	b.hi	7e38 <__getf2@@GCC_3.0+0xd4>  // b.pmore
    7e74:	cmp	x4, x3
    7e78:	b.cc	7e54 <__getf2@@GCC_3.0+0xf0>  // b.lo, b.ul, b.last
    7e7c:	cmp	w2, #0x0
    7e80:	ccmp	x8, x7, #0x2, ne  // ne = any
    7e84:	b.cs	7e04 <__getf2@@GCC_3.0+0xa0>  // b.hs, b.nlast
    7e88:	b	7e54 <__getf2@@GCC_3.0+0xf0>
    7e8c:	mov	w0, #0x1                   	// #1
    7e90:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    7e94:	mov	w0, #0xfffffffe            	// #-2
    7e98:	b	7e04 <__getf2@@GCC_3.0+0xa0>
    7e9c:	mov	w0, #0x0                   	// #0
    7ea0:	b	7e04 <__getf2@@GCC_3.0+0xa0>

0000000000007ea4 <__letf2@@GCC_3.0>:
    7ea4:	stp	x29, x30, [sp, #-32]!
    7ea8:	mov	x29, sp
    7eac:	str	q0, [sp, #16]
    7eb0:	ldp	x8, x1, [sp, #16]
    7eb4:	str	q1, [sp, #16]
    7eb8:	ldp	x7, x0, [sp, #16]
    7ebc:	mrs	x2, fpcr
    7ec0:	ubfx	x10, x1, #48, #15
    7ec4:	lsr	x2, x0, #63
    7ec8:	ubfx	x4, x1, #0, #48
    7ecc:	lsr	x1, x1, #63
    7ed0:	ubfx	x3, x0, #0, #48
    7ed4:	ubfx	x9, x0, #48, #15
    7ed8:	mov	x5, x8
    7edc:	mov	x0, #0x7fff                	// #32767
    7ee0:	and	w1, w1, #0xff
    7ee4:	mov	x6, x7
    7ee8:	and	w2, w2, #0xff
    7eec:	cmp	x10, x0
    7ef0:	b.ne	7efc <__letf2@@GCC_3.0+0x58>  // b.any
    7ef4:	orr	x11, x4, x8
    7ef8:	cbnz	x11, 7fcc <__letf2@@GCC_3.0+0x128>
    7efc:	cmp	x9, x0
    7f00:	b.ne	7f0c <__letf2@@GCC_3.0+0x68>  // b.any
    7f04:	orr	x0, x3, x6
    7f08:	cbnz	x0, 7fcc <__letf2@@GCC_3.0+0x128>
    7f0c:	cbnz	x10, 7f4c <__letf2@@GCC_3.0+0xa8>
    7f10:	orr	x5, x4, x5
    7f14:	cmp	x5, #0x0
    7f18:	cset	w5, eq  // eq = none
    7f1c:	cbnz	x9, 7f54 <__letf2@@GCC_3.0+0xb0>
    7f20:	orr	x6, x3, x6
    7f24:	cmp	x6, #0x0
    7f28:	cset	w0, eq  // eq = none
    7f2c:	csel	w6, w5, wzr, eq  // eq = none
    7f30:	cbnz	w6, 7fdc <__letf2@@GCC_3.0+0x138>
    7f34:	and	x2, x2, #0xff
    7f38:	cbz	w5, 7f5c <__letf2@@GCC_3.0+0xb8>
    7f3c:	cmp	x2, #0x0
    7f40:	csinv	w0, w5, wzr, ne  // ne = any
    7f44:	ldp	x29, x30, [sp], #32
    7f48:	ret
    7f4c:	mov	w5, #0x0                   	// #0
    7f50:	b	7f1c <__letf2@@GCC_3.0+0x78>
    7f54:	mov	w0, #0x0                   	// #0
    7f58:	b	7f34 <__letf2@@GCC_3.0+0x90>
    7f5c:	and	x1, x1, #0xff
    7f60:	cbz	w0, 7f70 <__letf2@@GCC_3.0+0xcc>
    7f64:	cmp	x1, #0x0
    7f68:	csinv	w0, w0, wzr, eq  // eq = none
    7f6c:	b	7f44 <__letf2@@GCC_3.0+0xa0>
    7f70:	cmp	x1, x2
    7f74:	b.eq	7f88 <__letf2@@GCC_3.0+0xe4>  // b.none
    7f78:	mov	w0, #0xffffffff            	// #-1
    7f7c:	cmp	x1, #0x0
    7f80:	cneg	w0, w0, eq  // eq = none
    7f84:	b	7f44 <__letf2@@GCC_3.0+0xa0>
    7f88:	cmp	x10, x9
    7f8c:	b.gt	7f78 <__letf2@@GCC_3.0+0xd4>
    7f90:	b.ge	7f9c <__letf2@@GCC_3.0+0xf8>  // b.tcont
    7f94:	mov	w0, #0x1                   	// #1
    7f98:	b	7f7c <__letf2@@GCC_3.0+0xd8>
    7f9c:	cmp	x4, x3
    7fa0:	b.hi	7f78 <__letf2@@GCC_3.0+0xd4>  // b.pmore
    7fa4:	cset	w2, eq  // eq = none
    7fa8:	cmp	w2, #0x0
    7fac:	ccmp	x8, x7, #0x0, ne  // ne = any
    7fb0:	b.hi	7f78 <__letf2@@GCC_3.0+0xd4>  // b.pmore
    7fb4:	cmp	x4, x3
    7fb8:	b.cc	7f94 <__letf2@@GCC_3.0+0xf0>  // b.lo, b.ul, b.last
    7fbc:	cmp	w2, #0x0
    7fc0:	ccmp	x8, x7, #0x2, ne  // ne = any
    7fc4:	b.cs	7f44 <__letf2@@GCC_3.0+0xa0>  // b.hs, b.nlast
    7fc8:	b	7f94 <__letf2@@GCC_3.0+0xf0>
    7fcc:	mov	w0, #0x1                   	// #1
    7fd0:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    7fd4:	mov	w0, #0x2                   	// #2
    7fd8:	b	7f44 <__letf2@@GCC_3.0+0xa0>
    7fdc:	mov	w0, #0x0                   	// #0
    7fe0:	b	7f44 <__letf2@@GCC_3.0+0xa0>

0000000000007fe4 <__multf3@@GCC_3.0>:
    7fe4:	stp	x29, x30, [sp, #-32]!
    7fe8:	mov	x29, sp
    7fec:	str	q0, [sp, #16]
    7ff0:	ldp	x8, x4, [sp, #16]
    7ff4:	str	q1, [sp, #16]
    7ff8:	ldp	x1, x9, [sp, #16]
    7ffc:	mrs	x6, fpcr
    8000:	ubfx	x11, x4, #0, #48
    8004:	ubfx	x10, x4, #48, #15
    8008:	lsr	x4, x4, #63
    800c:	and	w5, w4, #0xff
    8010:	cbz	w10, 8044 <__multf3@@GCC_3.0+0x60>
    8014:	mov	w2, #0x7fff                	// #32767
    8018:	cmp	w10, w2
    801c:	b.eq	80a4 <__multf3@@GCC_3.0+0xc0>  // b.none
    8020:	and	x10, x10, #0xffff
    8024:	extr	x11, x11, x8, #61
    8028:	mov	x12, #0xffffffffffffc001    	// #-16383
    802c:	orr	x11, x11, #0x8000000000000
    8030:	lsl	x2, x8, #3
    8034:	add	x10, x10, x12
    8038:	mov	x15, #0x0                   	// #0
    803c:	mov	w0, #0x0                   	// #0
    8040:	b	80c4 <__multf3@@GCC_3.0+0xe0>
    8044:	orr	x2, x11, x8
    8048:	cbz	x2, 8144 <__multf3@@GCC_3.0+0x160>
    804c:	clz	x2, x8
    8050:	cmp	x11, #0x0
    8054:	clz	x0, x11
    8058:	add	x2, x2, #0x40
    805c:	csel	x0, x2, x0, eq  // eq = none
    8060:	sub	x7, x0, #0xf
    8064:	cmp	x7, #0x3c
    8068:	b.gt	8094 <__multf3@@GCC_3.0+0xb0>
    806c:	add	w2, w7, #0x3
    8070:	mov	w10, #0x3d                  	// #61
    8074:	sub	w7, w10, w7
    8078:	lsl	x11, x11, x2
    807c:	lsr	x7, x8, x7
    8080:	orr	x11, x7, x11
    8084:	lsl	x2, x8, x2
    8088:	mov	x10, #0xffffffffffffc011    	// #-16367
    808c:	sub	x10, x10, x0
    8090:	b	8038 <__multf3@@GCC_3.0+0x54>
    8094:	sub	w11, w7, #0x3d
    8098:	mov	x2, #0x0                   	// #0
    809c:	lsl	x11, x8, x11
    80a0:	b	8088 <__multf3@@GCC_3.0+0xa4>
    80a4:	orr	x2, x11, x8
    80a8:	cbz	x2, 8154 <__multf3@@GCC_3.0+0x170>
    80ac:	lsr	x0, x11, #47
    80b0:	mov	x2, x8
    80b4:	eor	x0, x0, #0x1
    80b8:	mov	x10, #0x7fff                	// #32767
    80bc:	and	w0, w0, #0x1
    80c0:	mov	x15, #0x3                   	// #3
    80c4:	lsr	x8, x9, #63
    80c8:	ubfx	x12, x9, #0, #48
    80cc:	ubfx	x7, x9, #48, #15
    80d0:	and	w3, w8, #0xff
    80d4:	mov	x16, x8
    80d8:	cbz	w7, 8164 <__multf3@@GCC_3.0+0x180>
    80dc:	mov	w8, #0x7fff                	// #32767
    80e0:	cmp	w7, w8
    80e4:	b.eq	81c4 <__multf3@@GCC_3.0+0x1e0>  // b.none
    80e8:	and	x7, x7, #0xffff
    80ec:	extr	x12, x12, x1, #61
    80f0:	mov	x8, #0xffffffffffffc001    	// #-16383
    80f4:	orr	x12, x12, #0x8000000000000
    80f8:	lsl	x1, x1, #3
    80fc:	add	x7, x7, x8
    8100:	mov	x8, #0x0                   	// #0
    8104:	eor	w5, w5, w3
    8108:	orr	x3, x8, x15, lsl #2
    810c:	add	x10, x7, x10
    8110:	sub	x3, x3, #0x1
    8114:	and	x5, x5, #0xff
    8118:	add	x9, x10, #0x1
    811c:	cmp	x3, #0xe
    8120:	b.hi	8238 <__multf3@@GCC_3.0+0x254>  // b.pmore
    8124:	cmp	w3, #0xe
    8128:	b.hi	8238 <__multf3@@GCC_3.0+0x254>  // b.pmore
    812c:	adrp	x7, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    8130:	add	x7, x7, #0xc70
    8134:	ldrh	w3, [x7, w3, uxtw #1]
    8138:	adr	x7, 8144 <__multf3@@GCC_3.0+0x160>
    813c:	add	x3, x7, w3, sxth #2
    8140:	br	x3
    8144:	mov	x11, #0x0                   	// #0
    8148:	mov	x10, #0x0                   	// #0
    814c:	mov	x15, #0x1                   	// #1
    8150:	b	803c <__multf3@@GCC_3.0+0x58>
    8154:	mov	x11, #0x0                   	// #0
    8158:	mov	x10, #0x7fff                	// #32767
    815c:	mov	x15, #0x2                   	// #2
    8160:	b	803c <__multf3@@GCC_3.0+0x58>
    8164:	orr	x7, x12, x1
    8168:	cbz	x7, 81e0 <__multf3@@GCC_3.0+0x1fc>
    816c:	clz	x13, x1
    8170:	cmp	x12, #0x0
    8174:	add	x13, x13, #0x40
    8178:	clz	x7, x12
    817c:	csel	x9, x13, x7, eq  // eq = none
    8180:	sub	x13, x9, #0xf
    8184:	cmp	x13, #0x3c
    8188:	b.gt	81b4 <__multf3@@GCC_3.0+0x1d0>
    818c:	add	w7, w13, #0x3
    8190:	mov	w14, #0x3d                  	// #61
    8194:	sub	w13, w14, w13
    8198:	lsl	x12, x12, x7
    819c:	lsr	x13, x1, x13
    81a0:	orr	x12, x13, x12
    81a4:	lsl	x1, x1, x7
    81a8:	mov	x7, #0xffffffffffffc011    	// #-16367
    81ac:	sub	x7, x7, x9
    81b0:	b	8100 <__multf3@@GCC_3.0+0x11c>
    81b4:	sub	w12, w13, #0x3d
    81b8:	lsl	x12, x1, x12
    81bc:	mov	x1, #0x0                   	// #0
    81c0:	b	81a8 <__multf3@@GCC_3.0+0x1c4>
    81c4:	orr	x7, x12, x1
    81c8:	cbz	x7, 81f4 <__multf3@@GCC_3.0+0x210>
    81cc:	tst	x12, #0x800000000000
    81d0:	mov	x7, #0x7fff                	// #32767
    81d4:	csinc	w0, w0, wzr, ne  // ne = any
    81d8:	mov	x8, #0x3                   	// #3
    81dc:	b	8104 <__multf3@@GCC_3.0+0x120>
    81e0:	mov	x12, #0x0                   	// #0
    81e4:	mov	x1, #0x0                   	// #0
    81e8:	mov	x7, #0x0                   	// #0
    81ec:	mov	x8, #0x1                   	// #1
    81f0:	b	8104 <__multf3@@GCC_3.0+0x120>
    81f4:	mov	x12, #0x0                   	// #0
    81f8:	mov	x1, #0x0                   	// #0
    81fc:	mov	x7, #0x7fff                	// #32767
    8200:	mov	x8, #0x2                   	// #2
    8204:	b	8104 <__multf3@@GCC_3.0+0x120>
    8208:	mov	x12, x11
    820c:	mov	x1, x2
    8210:	mov	x8, x15
    8214:	cmp	x8, #0x2
    8218:	b.eq	8664 <__multf3@@GCC_3.0+0x680>  // b.none
    821c:	cmp	x8, #0x3
    8220:	b.eq	8654 <__multf3@@GCC_3.0+0x670>  // b.none
    8224:	cmp	x8, #0x1
    8228:	b.ne	8398 <__multf3@@GCC_3.0+0x3b4>  // b.any
    822c:	mov	x1, #0x0                   	// #0
    8230:	mov	x2, #0x0                   	// #0
    8234:	b	8618 <__multf3@@GCC_3.0+0x634>
    8238:	lsr	x14, x2, #32
    823c:	and	x15, x1, #0xffffffff
    8240:	lsr	x4, x1, #32
    8244:	and	x2, x2, #0xffffffff
    8248:	mul	x1, x14, x15
    824c:	mul	x3, x15, x2
    8250:	madd	x13, x4, x2, x1
    8254:	mul	x17, x14, x4
    8258:	add	x13, x13, x3, lsr #32
    825c:	cmp	x1, x13
    8260:	b.ls	826c <__multf3@@GCC_3.0+0x288>  // b.plast
    8264:	mov	x1, #0x100000000           	// #4294967296
    8268:	add	x17, x17, x1
    826c:	and	x3, x3, #0xffffffff
    8270:	and	x1, x12, #0xffffffff
    8274:	lsr	x7, x13, #32
    8278:	add	x13, x3, x13, lsl #32
    827c:	lsr	x3, x12, #32
    8280:	mul	x12, x14, x1
    8284:	mul	x18, x2, x1
    8288:	madd	x2, x3, x2, x12
    828c:	mul	x14, x14, x3
    8290:	add	x8, x2, x18, lsr #32
    8294:	cmp	x12, x8
    8298:	b.ls	82a4 <__multf3@@GCC_3.0+0x2c0>  // b.plast
    829c:	mov	x2, #0x100000000           	// #4294967296
    82a0:	add	x14, x14, x2
    82a4:	lsr	x16, x11, #32
    82a8:	and	x11, x11, #0xffffffff
    82ac:	and	x18, x18, #0xffffffff
    82b0:	add	x14, x14, x8, lsr #32
    82b4:	add	x18, x18, x8, lsl #32
    82b8:	mul	x8, x15, x11
    82bc:	add	x7, x7, x18
    82c0:	mul	x15, x16, x15
    82c4:	mul	x2, x4, x16
    82c8:	madd	x4, x4, x11, x15
    82cc:	add	x4, x4, x8, lsr #32
    82d0:	cmp	x15, x4
    82d4:	b.ls	82e0 <__multf3@@GCC_3.0+0x2fc>  // b.plast
    82d8:	mov	x12, #0x100000000           	// #4294967296
    82dc:	add	x2, x2, x12
    82e0:	mul	x12, x16, x1
    82e4:	and	x8, x8, #0xffffffff
    82e8:	mul	x16, x3, x16
    82ec:	add	x15, x2, x4, lsr #32
    82f0:	madd	x3, x3, x11, x12
    82f4:	add	x8, x8, x4, lsl #32
    82f8:	mul	x4, x11, x1
    82fc:	add	x3, x3, x4, lsr #32
    8300:	cmp	x12, x3
    8304:	b.ls	8310 <__multf3@@GCC_3.0+0x32c>  // b.plast
    8308:	mov	x1, #0x100000000           	// #4294967296
    830c:	add	x16, x16, x1
    8310:	and	x2, x4, #0xffffffff
    8314:	add	x7, x17, x7
    8318:	add	x2, x2, x3, lsl #32
    831c:	lsr	x3, x3, #32
    8320:	adds	x2, x2, x14
    8324:	cset	x4, cs  // cs = hs, nlast
    8328:	cmp	x7, x18
    832c:	cset	x1, cc  // cc = lo, ul, last
    8330:	adds	x2, x2, x1
    8334:	cset	x1, cs  // cs = hs, nlast
    8338:	cmp	x4, #0x0
    833c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    8340:	cinc	x3, x3, ne  // ne = any
    8344:	adds	x7, x7, x8
    8348:	cset	x1, cs  // cs = hs, nlast
    834c:	adds	x2, x2, x15
    8350:	cset	x4, cs  // cs = hs, nlast
    8354:	adds	x2, x2, x1
    8358:	cset	x1, cs  // cs = hs, nlast
    835c:	cmp	x4, #0x0
    8360:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    8364:	orr	x13, x13, x7, lsl #13
    8368:	cinc	x1, x16, ne  // ne = any
    836c:	cmp	x13, #0x0
    8370:	add	x3, x1, x3
    8374:	cset	x1, ne  // ne = any
    8378:	orr	x7, x1, x7, lsr #51
    837c:	orr	x1, x7, x2, lsl #13
    8380:	extr	x12, x3, x2, #51
    8384:	tbz	x3, #39, 8420 <__multf3@@GCC_3.0+0x43c>
    8388:	and	x2, x1, #0x1
    838c:	orr	x1, x2, x1, lsr #1
    8390:	orr	x1, x1, x12, lsl #63
    8394:	lsr	x12, x12, #1
    8398:	mov	x2, #0x3fff                	// #16383
    839c:	add	x3, x9, x2
    83a0:	cmp	x3, #0x0
    83a4:	b.le	84ec <__multf3@@GCC_3.0+0x508>
    83a8:	tst	x1, #0x7
    83ac:	b.eq	8438 <__multf3@@GCC_3.0+0x454>  // b.none
    83b0:	and	x2, x6, #0xc00000
    83b4:	orr	w0, w0, #0x10
    83b8:	cmp	x2, #0x400, lsl #12
    83bc:	b.eq	8428 <__multf3@@GCC_3.0+0x444>  // b.none
    83c0:	cmp	x2, #0x800, lsl #12
    83c4:	b.eq	8434 <__multf3@@GCC_3.0+0x450>  // b.none
    83c8:	cbnz	x2, 8438 <__multf3@@GCC_3.0+0x454>
    83cc:	and	x2, x1, #0xf
    83d0:	cmp	x2, #0x4
    83d4:	b.eq	8438 <__multf3@@GCC_3.0+0x454>  // b.none
    83d8:	adds	x1, x1, #0x4
    83dc:	cinc	x12, x12, cs  // cs = hs, nlast
    83e0:	b	8438 <__multf3@@GCC_3.0+0x454>
    83e4:	tbz	x11, #47, 83f8 <__multf3@@GCC_3.0+0x414>
    83e8:	tbnz	x12, #47, 83f8 <__multf3@@GCC_3.0+0x414>
    83ec:	mov	x11, x12
    83f0:	mov	x2, x1
    83f4:	mov	x4, x16
    83f8:	orr	x1, x11, #0x800000000000
    83fc:	mov	x5, x4
    8400:	mov	x3, #0x7fff                	// #32767
    8404:	b	8458 <__multf3@@GCC_3.0+0x474>
    8408:	mov	x12, x11
    840c:	mov	x1, x2
    8410:	mov	x5, x4
    8414:	b	8210 <__multf3@@GCC_3.0+0x22c>
    8418:	mov	x5, x16
    841c:	b	8214 <__multf3@@GCC_3.0+0x230>
    8420:	mov	x9, x10
    8424:	b	8398 <__multf3@@GCC_3.0+0x3b4>
    8428:	cbnz	x5, 8438 <__multf3@@GCC_3.0+0x454>
    842c:	adds	x1, x1, #0x8
    8430:	b	83dc <__multf3@@GCC_3.0+0x3f8>
    8434:	cbnz	x5, 842c <__multf3@@GCC_3.0+0x448>
    8438:	tbz	x12, #52, 8444 <__multf3@@GCC_3.0+0x460>
    843c:	and	x12, x12, #0xffefffffffffffff
    8440:	add	x3, x9, #0x4, lsl #12
    8444:	mov	x4, #0x7ffe                	// #32766
    8448:	cmp	x3, x4
    844c:	b.gt	848c <__multf3@@GCC_3.0+0x4a8>
    8450:	extr	x2, x12, x1, #3
    8454:	lsr	x1, x12, #3
    8458:	and	x3, x3, #0x7fff
    845c:	mov	x7, #0x0                   	// #0
    8460:	bfxil	x7, x1, #0, #48
    8464:	orr	w3, w3, w5, lsl #15
    8468:	fmov	d0, x2
    846c:	bfi	x7, x3, #48, #16
    8470:	fmov	v0.d[1], x7
    8474:	cbz	w0, 8484 <__multf3@@GCC_3.0+0x4a0>
    8478:	str	q0, [sp, #16]
    847c:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    8480:	ldr	q0, [sp, #16]
    8484:	ldp	x29, x30, [sp], #32
    8488:	ret
    848c:	and	x2, x6, #0xc00000
    8490:	cmp	x2, #0x400, lsl #12
    8494:	b.eq	84b8 <__multf3@@GCC_3.0+0x4d4>  // b.none
    8498:	cmp	x2, #0x800, lsl #12
    849c:	b.eq	84cc <__multf3@@GCC_3.0+0x4e8>  // b.none
    84a0:	cbnz	x2, 84e0 <__multf3@@GCC_3.0+0x4fc>
    84a4:	mov	x3, #0x7fff                	// #32767
    84a8:	mov	w1, #0x14                  	// #20
    84ac:	orr	w0, w0, w1
    84b0:	mov	x1, x2
    84b4:	b	8458 <__multf3@@GCC_3.0+0x474>
    84b8:	cmp	x5, #0x0
    84bc:	mov	x3, #0x7fff                	// #32767
    84c0:	csetm	x2, ne  // ne = any
    84c4:	csel	x3, x3, x4, eq  // eq = none
    84c8:	b	84a8 <__multf3@@GCC_3.0+0x4c4>
    84cc:	cmp	x5, #0x0
    84d0:	mov	x3, #0x7fff                	// #32767
    84d4:	csetm	x2, eq  // eq = none
    84d8:	csel	x3, x3, x4, ne  // ne = any
    84dc:	b	84a8 <__multf3@@GCC_3.0+0x4c4>
    84e0:	mov	x3, x4
    84e4:	mov	x2, #0xffffffffffffffff    	// #-1
    84e8:	b	84a8 <__multf3@@GCC_3.0+0x4c4>
    84ec:	mov	x4, #0x1                   	// #1
    84f0:	sub	x3, x4, x3
    84f4:	cmp	x3, #0x74
    84f8:	b.gt	85e0 <__multf3@@GCC_3.0+0x5fc>
    84fc:	cmp	x3, #0x3f
    8500:	b.gt	8568 <__multf3@@GCC_3.0+0x584>
    8504:	mov	w4, #0x40                  	// #64
    8508:	sub	w4, w4, w3
    850c:	lsr	x7, x1, x3
    8510:	lsl	x1, x1, x4
    8514:	cmp	x1, #0x0
    8518:	cset	x1, ne  // ne = any
    851c:	lsl	x2, x12, x4
    8520:	orr	x2, x2, x7
    8524:	orr	x2, x2, x1
    8528:	lsr	x1, x12, x3
    852c:	tst	x2, #0x7
    8530:	b.eq	85ac <__multf3@@GCC_3.0+0x5c8>  // b.none
    8534:	and	x3, x6, #0xc00000
    8538:	orr	w0, w0, #0x10
    853c:	cmp	x3, #0x400, lsl #12
    8540:	b.eq	859c <__multf3@@GCC_3.0+0x5b8>  // b.none
    8544:	cmp	x3, #0x800, lsl #12
    8548:	b.eq	85a8 <__multf3@@GCC_3.0+0x5c4>  // b.none
    854c:	cbnz	x3, 85ac <__multf3@@GCC_3.0+0x5c8>
    8550:	and	x3, x2, #0xf
    8554:	cmp	x3, #0x4
    8558:	b.eq	85ac <__multf3@@GCC_3.0+0x5c8>  // b.none
    855c:	adds	x2, x2, #0x4
    8560:	cinc	x1, x1, cs  // cs = hs, nlast
    8564:	b	85ac <__multf3@@GCC_3.0+0x5c8>
    8568:	sub	w2, w3, #0x40
    856c:	mov	w4, #0x80                  	// #128
    8570:	sub	w4, w4, w3
    8574:	cmp	x3, #0x40
    8578:	lsr	x2, x12, x2
    857c:	lsl	x12, x12, x4
    8580:	csel	x12, x12, xzr, ne  // ne = any
    8584:	orr	x1, x12, x1
    8588:	cmp	x1, #0x0
    858c:	cset	x1, ne  // ne = any
    8590:	orr	x2, x2, x1
    8594:	mov	x1, #0x0                   	// #0
    8598:	b	852c <__multf3@@GCC_3.0+0x548>
    859c:	cbnz	x5, 85ac <__multf3@@GCC_3.0+0x5c8>
    85a0:	adds	x2, x2, #0x8
    85a4:	b	8560 <__multf3@@GCC_3.0+0x57c>
    85a8:	cbnz	x5, 85a0 <__multf3@@GCC_3.0+0x5bc>
    85ac:	tbz	x1, #51, 85c8 <__multf3@@GCC_3.0+0x5e4>
    85b0:	orr	w0, w0, #0x10
    85b4:	mov	x1, #0x0                   	// #0
    85b8:	mov	x2, #0x0                   	// #0
    85bc:	mov	x3, #0x1                   	// #1
    85c0:	orr	w0, w0, #0x8
    85c4:	b	8458 <__multf3@@GCC_3.0+0x474>
    85c8:	mov	x3, #0x0                   	// #0
    85cc:	extr	x2, x1, x2, #3
    85d0:	lsr	x1, x1, #3
    85d4:	tbnz	w0, #4, 85c0 <__multf3@@GCC_3.0+0x5dc>
    85d8:	tbz	w6, #11, 8458 <__multf3@@GCC_3.0+0x474>
    85dc:	b	85c0 <__multf3@@GCC_3.0+0x5dc>
    85e0:	orr	x2, x1, x12
    85e4:	cbz	x2, 8610 <__multf3@@GCC_3.0+0x62c>
    85e8:	and	x6, x6, #0xc00000
    85ec:	orr	w0, w0, #0x10
    85f0:	cmp	x6, #0x400, lsl #12
    85f4:	b.eq	8620 <__multf3@@GCC_3.0+0x63c>  // b.none
    85f8:	cmp	x6, #0x800, lsl #12
    85fc:	b.eq	8630 <__multf3@@GCC_3.0+0x64c>  // b.none
    8600:	cmp	x6, #0x0
    8604:	mov	x2, #0x5                   	// #5
    8608:	csel	x4, x4, x2, ne  // ne = any
    860c:	lsr	x2, x4, #3
    8610:	orr	w0, w0, #0x8
    8614:	mov	x1, #0x0                   	// #0
    8618:	mov	x3, #0x0                   	// #0
    861c:	b	8458 <__multf3@@GCC_3.0+0x474>
    8620:	cmp	x5, #0x0
    8624:	mov	x2, #0x9                   	// #9
    8628:	csel	x4, x2, x4, eq  // eq = none
    862c:	b	860c <__multf3@@GCC_3.0+0x628>
    8630:	cmp	x5, #0x0
    8634:	mov	x2, #0x9                   	// #9
    8638:	csel	x4, x2, x4, ne  // ne = any
    863c:	b	860c <__multf3@@GCC_3.0+0x628>
    8640:	mov	x11, #0xffffffffffff        	// #281474976710655
    8644:	mov	x2, #0xffffffffffffffff    	// #-1
    8648:	mov	w0, #0x1                   	// #1
    864c:	mov	x4, #0x0                   	// #0
    8650:	b	83f8 <__multf3@@GCC_3.0+0x414>
    8654:	mov	x11, x12
    8658:	mov	x2, x1
    865c:	mov	x4, x5
    8660:	b	83f8 <__multf3@@GCC_3.0+0x414>
    8664:	mov	x1, #0x0                   	// #0
    8668:	mov	x2, #0x0                   	// #0
    866c:	b	8400 <__multf3@@GCC_3.0+0x41c>

0000000000008670 <__negtf2@@GCC_3.0>:
    8670:	sub	sp, sp, #0x10
    8674:	mov	x1, #0x0                   	// #0
    8678:	str	q0, [sp]
    867c:	ldp	x4, x2, [sp]
    8680:	add	sp, sp, #0x10
    8684:	lsr	x3, x2, #48
    8688:	bfxil	x1, x2, #0, #48
    868c:	eor	w3, w3, #0x8000
    8690:	fmov	d0, x4
    8694:	bfi	x1, x3, #48, #16
    8698:	fmov	v0.d[1], x1
    869c:	ret

00000000000086a0 <__subtf3@@GCC_3.0>:
    86a0:	stp	x29, x30, [sp, #-32]!
    86a4:	mov	x29, sp
    86a8:	str	q0, [sp, #16]
    86ac:	ldp	x7, x3, [sp, #16]
    86b0:	str	q1, [sp, #16]
    86b4:	ldp	x1, x0, [sp, #16]
    86b8:	mrs	x8, fpcr
    86bc:	ubfx	x4, x0, #48, #15
    86c0:	ubfx	x12, x3, #48, #15
    86c4:	lsr	x6, x0, #63
    86c8:	lsr	x5, x3, #63
    86cc:	ubfiz	x0, x0, #3, #48
    86d0:	ubfiz	x3, x3, #3, #48
    86d4:	orr	x2, x0, x1, lsr #61
    86d8:	mov	x14, x1
    86dc:	mov	x0, #0x7fff                	// #32767
    86e0:	mov	x10, x12
    86e4:	orr	x3, x3, x7, lsr #61
    86e8:	lsl	x9, x7, #3
    86ec:	mov	x11, x4
    86f0:	and	w6, w6, #0xff
    86f4:	lsl	x1, x1, #3
    86f8:	cmp	x4, x0
    86fc:	b.ne	8748 <__subtf3@@GCC_3.0+0xa8>  // b.any
    8700:	orr	x0, x2, x1
    8704:	cbz	x0, 8748 <__subtf3@@GCC_3.0+0xa8>
    8708:	and	x6, x6, #0xff
    870c:	sub	w4, w12, w4
    8710:	cmp	x6, x5
    8714:	b.ne	8b18 <__subtf3@@GCC_3.0+0x478>  // b.any
    8718:	cmp	w4, #0x0
    871c:	b.le	8854 <__subtf3@@GCC_3.0+0x1b4>
    8720:	mov	x0, #0x7fff                	// #32767
    8724:	cbnz	x11, 87bc <__subtf3@@GCC_3.0+0x11c>
    8728:	orr	x6, x2, x1
    872c:	cbnz	x6, 8750 <__subtf3@@GCC_3.0+0xb0>
    8730:	cmp	x10, x0
    8734:	b.eq	879c <__subtf3@@GCC_3.0+0xfc>  // b.none
    8738:	cbz	x10, 8d24 <__subtf3@@GCC_3.0+0x684>
    873c:	mov	x2, x3
    8740:	mov	x1, x9
    8744:	b	878c <__subtf3@@GCC_3.0+0xec>
    8748:	eor	w6, w6, #0x1
    874c:	b	8708 <__subtf3@@GCC_3.0+0x68>
    8750:	subs	w4, w4, #0x1
    8754:	b.ne	8794 <__subtf3@@GCC_3.0+0xf4>  // b.any
    8758:	adds	x0, x9, x1
    875c:	mov	x9, x0
    8760:	adc	x3, x3, x2
    8764:	tbz	x3, #51, 8738 <__subtf3@@GCC_3.0+0x98>
    8768:	add	x10, x10, #0x1
    876c:	mov	x0, #0x7fff                	// #32767
    8770:	cmp	x10, x0
    8774:	b.eq	8adc <__subtf3@@GCC_3.0+0x43c>  // b.none
    8778:	and	x2, x3, #0xfff7ffffffffffff
    877c:	and	x0, x9, #0x1
    8780:	orr	x0, x0, x9, lsr #1
    8784:	orr	x1, x0, x3, lsl #63
    8788:	lsr	x2, x2, #1
    878c:	mov	w0, #0x0                   	// #0
    8790:	b	8888 <__subtf3@@GCC_3.0+0x1e8>
    8794:	cmp	x10, x0
    8798:	b.ne	87c8 <__subtf3@@GCC_3.0+0x128>  // b.any
    879c:	orr	x1, x3, x9
    87a0:	cbz	x1, 8f7c <__subtf3@@GCC_3.0+0x8dc>
    87a4:	lsr	x0, x3, #50
    87a8:	mov	x2, x3
    87ac:	eor	x0, x0, #0x1
    87b0:	mov	x1, x9
    87b4:	and	w0, w0, #0x1
    87b8:	b	8888 <__subtf3@@GCC_3.0+0x1e8>
    87bc:	cmp	x10, x0
    87c0:	b.eq	879c <__subtf3@@GCC_3.0+0xfc>  // b.none
    87c4:	orr	x2, x2, #0x8000000000000
    87c8:	cmp	w4, #0x74
    87cc:	b.gt	8844 <__subtf3@@GCC_3.0+0x1a4>
    87d0:	cmp	w4, #0x3f
    87d4:	b.gt	8810 <__subtf3@@GCC_3.0+0x170>
    87d8:	mov	w0, #0x40                  	// #64
    87dc:	sub	w0, w0, w4
    87e0:	lsr	x6, x1, x4
    87e4:	lsl	x1, x1, x0
    87e8:	cmp	x1, #0x0
    87ec:	lsl	x7, x2, x0
    87f0:	orr	x7, x7, x6
    87f4:	cset	x6, ne  // ne = any
    87f8:	lsr	x2, x2, x4
    87fc:	orr	x6, x7, x6
    8800:	adds	x0, x6, x9
    8804:	mov	x9, x0
    8808:	adc	x3, x2, x3
    880c:	b	8764 <__subtf3@@GCC_3.0+0xc4>
    8810:	sub	w7, w4, #0x40
    8814:	mov	w0, #0x80                  	// #128
    8818:	sub	w0, w0, w4
    881c:	cmp	w4, #0x40
    8820:	lsr	x7, x2, x7
    8824:	lsl	x2, x2, x0
    8828:	csel	x2, x2, xzr, ne  // ne = any
    882c:	orr	x1, x2, x1
    8830:	cmp	x1, #0x0
    8834:	cset	x6, ne  // ne = any
    8838:	orr	x6, x7, x6
    883c:	mov	x2, #0x0                   	// #0
    8840:	b	8800 <__subtf3@@GCC_3.0+0x160>
    8844:	orr	x1, x2, x1
    8848:	cmp	x1, #0x0
    884c:	cset	x6, ne  // ne = any
    8850:	b	883c <__subtf3@@GCC_3.0+0x19c>
    8854:	b.eq	8958 <__subtf3@@GCC_3.0+0x2b8>  // b.none
    8858:	mov	x0, #0x7fff                	// #32767
    885c:	cbnz	x10, 8900 <__subtf3@@GCC_3.0+0x260>
    8860:	orr	x6, x3, x9
    8864:	cbnz	x6, 8890 <__subtf3@@GCC_3.0+0x1f0>
    8868:	cmp	x11, x0
    886c:	b.ne	8f08 <__subtf3@@GCC_3.0+0x868>  // b.any
    8870:	orr	x0, x2, x1
    8874:	cbz	x0, 8f50 <__subtf3@@GCC_3.0+0x8b0>
    8878:	lsr	x0, x2, #50
    887c:	mov	x10, x11
    8880:	eor	x0, x0, #0x1
    8884:	and	w0, w0, #0x1
    8888:	mov	w4, #0x0                   	// #0
    888c:	b	899c <__subtf3@@GCC_3.0+0x2fc>
    8890:	cmn	w4, #0x1
    8894:	b.ne	88ac <__subtf3@@GCC_3.0+0x20c>  // b.any
    8898:	adds	x0, x9, x1
    889c:	mov	x9, x0
    88a0:	adc	x3, x3, x2
    88a4:	mov	x10, x11
    88a8:	b	8764 <__subtf3@@GCC_3.0+0xc4>
    88ac:	cmp	x11, x0
    88b0:	b.eq	8870 <__subtf3@@GCC_3.0+0x1d0>  // b.none
    88b4:	mvn	w4, w4
    88b8:	cmp	w4, #0x74
    88bc:	b.gt	8948 <__subtf3@@GCC_3.0+0x2a8>
    88c0:	cmp	w4, #0x3f
    88c4:	b.gt	8914 <__subtf3@@GCC_3.0+0x274>
    88c8:	mov	w0, #0x40                  	// #64
    88cc:	sub	w0, w0, w4
    88d0:	lsr	x7, x9, x4
    88d4:	lsl	x6, x3, x0
    88d8:	orr	x6, x6, x7
    88dc:	lsl	x0, x9, x0
    88e0:	cmp	x0, #0x0
    88e4:	cset	x0, ne  // ne = any
    88e8:	lsr	x4, x3, x4
    88ec:	orr	x0, x6, x0
    88f0:	adds	x3, x0, x1
    88f4:	mov	x9, x3
    88f8:	adc	x3, x4, x2
    88fc:	b	88a4 <__subtf3@@GCC_3.0+0x204>
    8900:	cmp	x11, x0
    8904:	b.eq	8870 <__subtf3@@GCC_3.0+0x1d0>  // b.none
    8908:	neg	w4, w4
    890c:	orr	x3, x3, #0x8000000000000
    8910:	b	88b8 <__subtf3@@GCC_3.0+0x218>
    8914:	sub	w6, w4, #0x40
    8918:	mov	w0, #0x80                  	// #128
    891c:	sub	w0, w0, w4
    8920:	cmp	w4, #0x40
    8924:	lsr	x6, x3, x6
    8928:	lsl	x3, x3, x0
    892c:	csel	x3, x3, xzr, ne  // ne = any
    8930:	orr	x3, x3, x9
    8934:	cmp	x3, #0x0
    8938:	cset	x0, ne  // ne = any
    893c:	orr	x0, x6, x0
    8940:	mov	x4, #0x0                   	// #0
    8944:	b	88f0 <__subtf3@@GCC_3.0+0x250>
    8948:	orr	x3, x3, x9
    894c:	cmp	x3, #0x0
    8950:	cset	x0, ne  // ne = any
    8954:	b	8940 <__subtf3@@GCC_3.0+0x2a0>
    8958:	add	x12, x10, #0x1
    895c:	mov	x0, #0x7fff                	// #32767
    8960:	tst	x12, #0x7ffe
    8964:	b.ne	8a78 <__subtf3@@GCC_3.0+0x3d8>  // b.any
    8968:	orr	x12, x3, x9
    896c:	cbnz	x10, 89dc <__subtf3@@GCC_3.0+0x33c>
    8970:	cbz	x12, 8f2c <__subtf3@@GCC_3.0+0x88c>
    8974:	orr	x0, x2, x1
    8978:	cbz	x0, 8d24 <__subtf3@@GCC_3.0+0x684>
    897c:	adds	x0, x9, x1
    8980:	mov	x9, x0
    8984:	adc	x3, x3, x2
    8988:	tbz	x3, #51, 8d24 <__subtf3@@GCC_3.0+0x684>
    898c:	and	x2, x3, #0xfff7ffffffffffff
    8990:	mov	x1, x0
    8994:	mov	x10, #0x1                   	// #1
    8998:	mov	w0, #0x0                   	// #0
    899c:	tst	x1, #0x7
    89a0:	b.eq	8fac <__subtf3@@GCC_3.0+0x90c>  // b.none
    89a4:	and	x3, x8, #0xc00000
    89a8:	orr	w0, w0, #0x10
    89ac:	cmp	x3, #0x400, lsl #12
    89b0:	b.eq	8f98 <__subtf3@@GCC_3.0+0x8f8>  // b.none
    89b4:	cmp	x3, #0x800, lsl #12
    89b8:	b.eq	8fa4 <__subtf3@@GCC_3.0+0x904>  // b.none
    89bc:	cbnz	x3, 89d4 <__subtf3@@GCC_3.0+0x334>
    89c0:	and	x3, x1, #0xf
    89c4:	cmp	x3, #0x4
    89c8:	b.eq	89d4 <__subtf3@@GCC_3.0+0x334>  // b.none
    89cc:	adds	x1, x1, #0x4
    89d0:	cinc	x2, x2, cs  // cs = hs, nlast
    89d4:	cbz	w4, 8fbc <__subtf3@@GCC_3.0+0x91c>
    89d8:	b	8fb8 <__subtf3@@GCC_3.0+0x918>
    89dc:	cmp	x10, x0
    89e0:	b.ne	8a44 <__subtf3@@GCC_3.0+0x3a4>  // b.any
    89e4:	cbz	x12, 909c <__subtf3@@GCC_3.0+0x9fc>
    89e8:	lsr	x0, x3, #50
    89ec:	cmp	x11, x10
    89f0:	eor	x0, x0, #0x1
    89f4:	and	w0, w0, #0x1
    89f8:	b.ne	8a64 <__subtf3@@GCC_3.0+0x3c4>  // b.any
    89fc:	orr	x10, x2, x1
    8a00:	cbz	x10, 9094 <__subtf3@@GCC_3.0+0x9f4>
    8a04:	tst	x2, #0x4000000000000
    8a08:	csinc	w0, w0, wzr, ne  // ne = any
    8a0c:	cbz	x12, 8a5c <__subtf3@@GCC_3.0+0x3bc>
    8a10:	and	x7, x7, #0x1fffffffffffffff
    8a14:	lsr	x1, x3, #3
    8a18:	orr	x7, x7, x3, lsl #61
    8a1c:	tbz	x3, #50, 8a38 <__subtf3@@GCC_3.0+0x398>
    8a20:	lsr	x3, x2, #3
    8a24:	tbnz	x2, #50, 8a38 <__subtf3@@GCC_3.0+0x398>
    8a28:	and	x1, x14, #0x1fffffffffffffff
    8a2c:	mov	x5, x6
    8a30:	orr	x7, x1, x2, lsl #61
    8a34:	mov	x1, x3
    8a38:	extr	x2, x1, x7, #61
    8a3c:	lsl	x1, x7, #3
    8a40:	b	8a5c <__subtf3@@GCC_3.0+0x3bc>
    8a44:	cmp	x11, x0
    8a48:	b.ne	8a54 <__subtf3@@GCC_3.0+0x3b4>  // b.any
    8a4c:	mov	w0, #0x0                   	// #0
    8a50:	b	89fc <__subtf3@@GCC_3.0+0x35c>
    8a54:	mov	w0, #0x0                   	// #0
    8a58:	cbnz	x12, 8a64 <__subtf3@@GCC_3.0+0x3c4>
    8a5c:	mov	x10, #0x7fff                	// #32767
    8a60:	b	899c <__subtf3@@GCC_3.0+0x2fc>
    8a64:	orr	x1, x2, x1
    8a68:	cbnz	x1, 8a10 <__subtf3@@GCC_3.0+0x370>
    8a6c:	mov	x2, x3
    8a70:	mov	x1, x9
    8a74:	b	8a5c <__subtf3@@GCC_3.0+0x3bc>
    8a78:	cmp	x12, x0
    8a7c:	b.eq	8a9c <__subtf3@@GCC_3.0+0x3fc>  // b.none
    8a80:	adds	x1, x9, x1
    8a84:	mov	x10, x12
    8a88:	adc	x2, x3, x2
    8a8c:	extr	x1, x2, x1, #1
    8a90:	lsr	x2, x2, #1
    8a94:	mov	w0, #0x0                   	// #0
    8a98:	b	899c <__subtf3@@GCC_3.0+0x2fc>
    8a9c:	ands	x1, x8, #0xc00000
    8aa0:	b.eq	8f60 <__subtf3@@GCC_3.0+0x8c0>  // b.none
    8aa4:	cmp	x1, #0x400, lsl #12
    8aa8:	b.ne	8ac0 <__subtf3@@GCC_3.0+0x420>  // b.any
    8aac:	cbnz	x5, 8acc <__subtf3@@GCC_3.0+0x42c>
    8ab0:	mov	x10, x12
    8ab4:	mov	x2, #0x0                   	// #0
    8ab8:	mov	x1, #0x0                   	// #0
    8abc:	b	8f68 <__subtf3@@GCC_3.0+0x8c8>
    8ac0:	cmp	x1, #0x800, lsl #12
    8ac4:	b.ne	8acc <__subtf3@@GCC_3.0+0x42c>  // b.any
    8ac8:	cbnz	x5, 8ab0 <__subtf3@@GCC_3.0+0x410>
    8acc:	mov	x2, #0xffffffffffffffff    	// #-1
    8ad0:	mov	x10, #0x7ffe                	// #32766
    8ad4:	mov	x1, x2
    8ad8:	b	8f68 <__subtf3@@GCC_3.0+0x8c8>
    8adc:	ands	x1, x8, #0xc00000
    8ae0:	b.eq	8f70 <__subtf3@@GCC_3.0+0x8d0>  // b.none
    8ae4:	cmp	x1, #0x400, lsl #12
    8ae8:	b.ne	8afc <__subtf3@@GCC_3.0+0x45c>  // b.any
    8aec:	cbnz	x5, 8b08 <__subtf3@@GCC_3.0+0x468>
    8af0:	mov	x2, #0x0                   	// #0
    8af4:	mov	x1, #0x0                   	// #0
    8af8:	b	8f74 <__subtf3@@GCC_3.0+0x8d4>
    8afc:	cmp	x1, #0x800, lsl #12
    8b00:	b.ne	8b08 <__subtf3@@GCC_3.0+0x468>  // b.any
    8b04:	cbnz	x5, 8af0 <__subtf3@@GCC_3.0+0x450>
    8b08:	mov	x2, #0xffffffffffffffff    	// #-1
    8b0c:	mov	x10, #0x7ffe                	// #32766
    8b10:	mov	x1, x2
    8b14:	b	8f74 <__subtf3@@GCC_3.0+0x8d4>
    8b18:	cmp	w4, #0x0
    8b1c:	b.le	8bf0 <__subtf3@@GCC_3.0+0x550>
    8b20:	mov	x0, #0x7fff                	// #32767
    8b24:	cbnz	x11, 8b9c <__subtf3@@GCC_3.0+0x4fc>
    8b28:	orr	x6, x2, x1
    8b2c:	cbz	x6, 8730 <__subtf3@@GCC_3.0+0x90>
    8b30:	subs	w4, w4, #0x1
    8b34:	b.ne	8b50 <__subtf3@@GCC_3.0+0x4b0>  // b.any
    8b38:	subs	x9, x9, x1
    8b3c:	sbc	x3, x3, x2
    8b40:	tbz	x3, #51, 8738 <__subtf3@@GCC_3.0+0x98>
    8b44:	and	x7, x3, #0x7ffffffffffff
    8b48:	mov	x11, x9
    8b4c:	b	8e34 <__subtf3@@GCC_3.0+0x794>
    8b50:	cmp	x10, x0
    8b54:	b.eq	879c <__subtf3@@GCC_3.0+0xfc>  // b.none
    8b58:	cmp	w4, #0x74
    8b5c:	b.gt	8be0 <__subtf3@@GCC_3.0+0x540>
    8b60:	cmp	w4, #0x3f
    8b64:	b.gt	8bac <__subtf3@@GCC_3.0+0x50c>
    8b68:	mov	w6, #0x40                  	// #64
    8b6c:	sub	w6, w6, w4
    8b70:	lsr	x7, x1, x4
    8b74:	lsl	x1, x1, x6
    8b78:	cmp	x1, #0x0
    8b7c:	lsl	x0, x2, x6
    8b80:	cset	x1, ne  // ne = any
    8b84:	orr	x0, x0, x7
    8b88:	lsr	x2, x2, x4
    8b8c:	orr	x0, x0, x1
    8b90:	subs	x9, x9, x0
    8b94:	sbc	x3, x3, x2
    8b98:	b	8b40 <__subtf3@@GCC_3.0+0x4a0>
    8b9c:	cmp	x10, x0
    8ba0:	b.eq	879c <__subtf3@@GCC_3.0+0xfc>  // b.none
    8ba4:	orr	x2, x2, #0x8000000000000
    8ba8:	b	8b58 <__subtf3@@GCC_3.0+0x4b8>
    8bac:	sub	w0, w4, #0x40
    8bb0:	mov	w6, #0x80                  	// #128
    8bb4:	sub	w6, w6, w4
    8bb8:	cmp	w4, #0x40
    8bbc:	lsr	x0, x2, x0
    8bc0:	lsl	x2, x2, x6
    8bc4:	csel	x2, x2, xzr, ne  // ne = any
    8bc8:	orr	x1, x2, x1
    8bcc:	cmp	x1, #0x0
    8bd0:	cset	x1, ne  // ne = any
    8bd4:	orr	x0, x0, x1
    8bd8:	mov	x2, #0x0                   	// #0
    8bdc:	b	8b90 <__subtf3@@GCC_3.0+0x4f0>
    8be0:	orr	x1, x2, x1
    8be4:	cmp	x1, #0x0
    8be8:	cset	x0, ne  // ne = any
    8bec:	b	8bd8 <__subtf3@@GCC_3.0+0x538>
    8bf0:	b.eq	8cf0 <__subtf3@@GCC_3.0+0x650>  // b.none
    8bf4:	mov	x0, #0x7fff                	// #32767
    8bf8:	cbnz	x10, 8c98 <__subtf3@@GCC_3.0+0x5f8>
    8bfc:	orr	x5, x3, x9
    8c00:	cbnz	x5, 8c2c <__subtf3@@GCC_3.0+0x58c>
    8c04:	cmp	x11, x0
    8c08:	b.ne	8f18 <__subtf3@@GCC_3.0+0x878>  // b.any
    8c0c:	orr	x0, x2, x1
    8c10:	cbz	x0, 8f84 <__subtf3@@GCC_3.0+0x8e4>
    8c14:	lsr	x0, x2, #50
    8c18:	mov	x10, x11
    8c1c:	eor	x0, x0, #0x1
    8c20:	mov	x5, x6
    8c24:	and	w0, w0, #0x1
    8c28:	b	8888 <__subtf3@@GCC_3.0+0x1e8>
    8c2c:	cmn	w4, #0x1
    8c30:	b.ne	8c48 <__subtf3@@GCC_3.0+0x5a8>  // b.any
    8c34:	subs	x9, x1, x9
    8c38:	sbc	x3, x2, x3
    8c3c:	mov	x10, x11
    8c40:	mov	x5, x6
    8c44:	b	8b40 <__subtf3@@GCC_3.0+0x4a0>
    8c48:	cmp	x11, x0
    8c4c:	b.eq	8c0c <__subtf3@@GCC_3.0+0x56c>  // b.none
    8c50:	mvn	w4, w4
    8c54:	cmp	w4, #0x74
    8c58:	b.gt	8ce0 <__subtf3@@GCC_3.0+0x640>
    8c5c:	cmp	w4, #0x3f
    8c60:	b.gt	8cac <__subtf3@@GCC_3.0+0x60c>
    8c64:	mov	w0, #0x40                  	// #64
    8c68:	sub	w0, w0, w4
    8c6c:	lsr	x7, x9, x4
    8c70:	lsl	x5, x3, x0
    8c74:	orr	x5, x5, x7
    8c78:	lsl	x0, x9, x0
    8c7c:	cmp	x0, #0x0
    8c80:	cset	x0, ne  // ne = any
    8c84:	lsr	x4, x3, x4
    8c88:	orr	x0, x5, x0
    8c8c:	subs	x9, x1, x0
    8c90:	sbc	x3, x2, x4
    8c94:	b	8c3c <__subtf3@@GCC_3.0+0x59c>
    8c98:	cmp	x11, x0
    8c9c:	b.eq	8c0c <__subtf3@@GCC_3.0+0x56c>  // b.none
    8ca0:	neg	w4, w4
    8ca4:	orr	x3, x3, #0x8000000000000
    8ca8:	b	8c54 <__subtf3@@GCC_3.0+0x5b4>
    8cac:	sub	w0, w4, #0x40
    8cb0:	cmp	w4, #0x40
    8cb4:	lsr	x5, x3, x0
    8cb8:	mov	w0, #0x80                  	// #128
    8cbc:	sub	w0, w0, w4
    8cc0:	lsl	x3, x3, x0
    8cc4:	csel	x3, x3, xzr, ne  // ne = any
    8cc8:	orr	x3, x3, x9
    8ccc:	cmp	x3, #0x0
    8cd0:	cset	x0, ne  // ne = any
    8cd4:	orr	x0, x5, x0
    8cd8:	mov	x4, #0x0                   	// #0
    8cdc:	b	8c8c <__subtf3@@GCC_3.0+0x5ec>
    8ce0:	orr	x3, x3, x9
    8ce4:	cmp	x3, #0x0
    8ce8:	cset	x0, ne  // ne = any
    8cec:	b	8cd8 <__subtf3@@GCC_3.0+0x638>
    8cf0:	add	x0, x10, #0x1
    8cf4:	tst	x0, #0x7ffe
    8cf8:	b.ne	8e14 <__subtf3@@GCC_3.0+0x774>  // b.any
    8cfc:	orr	x12, x3, x9
    8d00:	orr	x13, x2, x1
    8d04:	cbnz	x10, 8d80 <__subtf3@@GCC_3.0+0x6e0>
    8d08:	cbnz	x12, 8d40 <__subtf3@@GCC_3.0+0x6a0>
    8d0c:	cbnz	x13, 8f38 <__subtf3@@GCC_3.0+0x898>
    8d10:	and	x0, x8, #0xc00000
    8d14:	mov	x3, #0x0                   	// #0
    8d18:	cmp	x0, #0x800, lsl #12
    8d1c:	mov	x9, #0x0                   	// #0
    8d20:	cset	x5, eq  // eq = none
    8d24:	orr	x0, x9, x3
    8d28:	mov	x2, x3
    8d2c:	cmp	x0, #0x0
    8d30:	mov	x1, x9
    8d34:	cset	w4, ne  // ne = any
    8d38:	mov	x10, #0x0                   	// #0
    8d3c:	b	8a94 <__subtf3@@GCC_3.0+0x3f4>
    8d40:	cbz	x13, 8d24 <__subtf3@@GCC_3.0+0x684>
    8d44:	subs	x4, x9, x1
    8d48:	cmp	x9, x1
    8d4c:	sbc	x0, x3, x2
    8d50:	tbz	x0, #51, 8d64 <__subtf3@@GCC_3.0+0x6c4>
    8d54:	subs	x9, x1, x9
    8d58:	sbc	x3, x2, x3
    8d5c:	mov	x5, x6
    8d60:	b	8d24 <__subtf3@@GCC_3.0+0x684>
    8d64:	orr	x9, x4, x0
    8d68:	cbnz	x9, 8f44 <__subtf3@@GCC_3.0+0x8a4>
    8d6c:	and	x0, x8, #0xc00000
    8d70:	cmp	x0, #0x800, lsl #12
    8d74:	cset	x5, eq  // eq = none
    8d78:	mov	x3, #0x0                   	// #0
    8d7c:	b	8d24 <__subtf3@@GCC_3.0+0x684>
    8d80:	mov	x0, #0x7fff                	// #32767
    8d84:	cmp	x10, x0
    8d88:	b.ne	8de8 <__subtf3@@GCC_3.0+0x748>  // b.any
    8d8c:	cbz	x12, 9084 <__subtf3@@GCC_3.0+0x9e4>
    8d90:	lsr	x0, x3, #50
    8d94:	cmp	x11, x10
    8d98:	eor	x0, x0, #0x1
    8d9c:	and	w0, w0, #0x1
    8da0:	b.ne	8e0c <__subtf3@@GCC_3.0+0x76c>  // b.any
    8da4:	cbz	x13, 90ac <__subtf3@@GCC_3.0+0xa0c>
    8da8:	tst	x2, #0x4000000000000
    8dac:	csinc	w0, w0, wzr, ne  // ne = any
    8db0:	cbz	x12, 8e00 <__subtf3@@GCC_3.0+0x760>
    8db4:	and	x7, x7, #0x1fffffffffffffff
    8db8:	orr	x1, x7, x3, lsl #61
    8dbc:	lsr	x7, x3, #3
    8dc0:	tbz	x3, #50, 8ddc <__subtf3@@GCC_3.0+0x73c>
    8dc4:	lsr	x3, x2, #3
    8dc8:	tbnz	x2, #50, 8ddc <__subtf3@@GCC_3.0+0x73c>
    8dcc:	and	x1, x14, #0x1fffffffffffffff
    8dd0:	mov	x7, x3
    8dd4:	orr	x1, x1, x2, lsl #61
    8dd8:	mov	x5, x6
    8ddc:	extr	x2, x7, x1, #61
    8de0:	lsl	x1, x1, #3
    8de4:	b	8a5c <__subtf3@@GCC_3.0+0x3bc>
    8de8:	cmp	x11, x0
    8dec:	b.ne	8df8 <__subtf3@@GCC_3.0+0x758>  // b.any
    8df0:	mov	w0, #0x0                   	// #0
    8df4:	b	8da4 <__subtf3@@GCC_3.0+0x704>
    8df8:	mov	w0, #0x0                   	// #0
    8dfc:	cbnz	x12, 8e0c <__subtf3@@GCC_3.0+0x76c>
    8e00:	cbz	x13, 90b0 <__subtf3@@GCC_3.0+0xa10>
    8e04:	mov	x5, x6
    8e08:	b	8a5c <__subtf3@@GCC_3.0+0x3bc>
    8e0c:	cbnz	x13, 8db4 <__subtf3@@GCC_3.0+0x714>
    8e10:	b	8a6c <__subtf3@@GCC_3.0+0x3cc>
    8e14:	subs	x0, x9, x1
    8e18:	cmp	x9, x1
    8e1c:	mov	x11, x0
    8e20:	sbc	x7, x3, x2
    8e24:	tbz	x7, #51, 8eb0 <__subtf3@@GCC_3.0+0x810>
    8e28:	subs	x11, x1, x9
    8e2c:	mov	x5, x6
    8e30:	sbc	x7, x2, x3
    8e34:	clz	x0, x11
    8e38:	cmp	x7, #0x0
    8e3c:	clz	x3, x7
    8e40:	add	w0, w0, #0x40
    8e44:	csel	w3, w0, w3, eq  // eq = none
    8e48:	sub	w4, w3, #0xc
    8e4c:	cmp	w4, #0x3f
    8e50:	b.gt	8ebc <__subtf3@@GCC_3.0+0x81c>
    8e54:	neg	w3, w4
    8e58:	lsl	x7, x7, x4
    8e5c:	lsl	x9, x11, x4
    8e60:	lsr	x3, x11, x3
    8e64:	orr	x3, x3, x7
    8e68:	sxtw	x0, w4
    8e6c:	cmp	x10, w4, sxtw
    8e70:	b.gt	8efc <__subtf3@@GCC_3.0+0x85c>
    8e74:	sub	w4, w4, w10
    8e78:	add	w2, w4, #0x1
    8e7c:	cmp	w2, #0x3f
    8e80:	b.gt	8ecc <__subtf3@@GCC_3.0+0x82c>
    8e84:	mov	w0, #0x40                  	// #64
    8e88:	sub	w0, w0, w2
    8e8c:	lsr	x1, x9, x2
    8e90:	lsl	x4, x3, x0
    8e94:	orr	x4, x4, x1
    8e98:	lsl	x0, x9, x0
    8e9c:	cmp	x0, #0x0
    8ea0:	cset	x0, ne  // ne = any
    8ea4:	lsr	x3, x3, x2
    8ea8:	orr	x9, x4, x0
    8eac:	b	8d24 <__subtf3@@GCC_3.0+0x684>
    8eb0:	orr	x9, x0, x7
    8eb4:	cbnz	x9, 8e34 <__subtf3@@GCC_3.0+0x794>
    8eb8:	b	8d6c <__subtf3@@GCC_3.0+0x6cc>
    8ebc:	sub	w3, w3, #0x4c
    8ec0:	mov	x9, #0x0                   	// #0
    8ec4:	lsl	x3, x11, x3
    8ec8:	b	8e68 <__subtf3@@GCC_3.0+0x7c8>
    8ecc:	sub	w4, w4, #0x3f
    8ed0:	mov	w0, #0x80                  	// #128
    8ed4:	sub	w0, w0, w2
    8ed8:	cmp	w2, #0x40
    8edc:	lsr	x4, x3, x4
    8ee0:	lsl	x3, x3, x0
    8ee4:	csel	x3, x3, xzr, ne  // ne = any
    8ee8:	orr	x3, x9, x3
    8eec:	cmp	x3, #0x0
    8ef0:	cset	x3, ne  // ne = any
    8ef4:	orr	x9, x4, x3
    8ef8:	b	8d78 <__subtf3@@GCC_3.0+0x6d8>
    8efc:	sub	x10, x10, x0
    8f00:	and	x3, x3, #0xfff7ffffffffffff
    8f04:	b	8738 <__subtf3@@GCC_3.0+0x98>
    8f08:	mov	x3, x2
    8f0c:	mov	x9, x1
    8f10:	mov	x10, x11
    8f14:	b	8738 <__subtf3@@GCC_3.0+0x98>
    8f18:	mov	x3, x2
    8f1c:	mov	x9, x1
    8f20:	mov	x10, x11
    8f24:	mov	x5, x6
    8f28:	b	8738 <__subtf3@@GCC_3.0+0x98>
    8f2c:	mov	x3, x2
    8f30:	mov	x9, x1
    8f34:	b	8d24 <__subtf3@@GCC_3.0+0x684>
    8f38:	mov	x3, x2
    8f3c:	mov	x9, x1
    8f40:	b	8d5c <__subtf3@@GCC_3.0+0x6bc>
    8f44:	mov	x3, x0
    8f48:	mov	x9, x4
    8f4c:	b	8d24 <__subtf3@@GCC_3.0+0x684>
    8f50:	mov	x10, x11
    8f54:	mov	x2, #0x0                   	// #0
    8f58:	mov	x1, #0x0                   	// #0
    8f5c:	b	878c <__subtf3@@GCC_3.0+0xec>
    8f60:	mov	x10, x12
    8f64:	mov	x2, #0x0                   	// #0
    8f68:	mov	w0, #0x14                  	// #20
    8f6c:	b	899c <__subtf3@@GCC_3.0+0x2fc>
    8f70:	mov	x2, #0x0                   	// #0
    8f74:	mov	w0, #0x14                  	// #20
    8f78:	b	8888 <__subtf3@@GCC_3.0+0x1e8>
    8f7c:	mov	x2, #0x0                   	// #0
    8f80:	b	878c <__subtf3@@GCC_3.0+0xec>
    8f84:	mov	x10, x11
    8f88:	mov	x5, x6
    8f8c:	mov	x2, #0x0                   	// #0
    8f90:	mov	x1, #0x0                   	// #0
    8f94:	b	878c <__subtf3@@GCC_3.0+0xec>
    8f98:	cbnz	x5, 89d4 <__subtf3@@GCC_3.0+0x334>
    8f9c:	adds	x1, x1, #0x8
    8fa0:	b	89d0 <__subtf3@@GCC_3.0+0x330>
    8fa4:	cbz	x5, 89d4 <__subtf3@@GCC_3.0+0x334>
    8fa8:	b	8f9c <__subtf3@@GCC_3.0+0x8fc>
    8fac:	cbz	w4, 8fbc <__subtf3@@GCC_3.0+0x91c>
    8fb0:	tbnz	w0, #4, 8fb8 <__subtf3@@GCC_3.0+0x918>
    8fb4:	tbz	w8, #11, 8fbc <__subtf3@@GCC_3.0+0x91c>
    8fb8:	orr	w0, w0, #0x8
    8fbc:	tbz	x2, #51, 8fd4 <__subtf3@@GCC_3.0+0x934>
    8fc0:	add	x10, x10, #0x1
    8fc4:	mov	x3, #0x7fff                	// #32767
    8fc8:	cmp	x10, x3
    8fcc:	b.eq	902c <__subtf3@@GCC_3.0+0x98c>  // b.none
    8fd0:	and	x2, x2, #0xfff7ffffffffffff
    8fd4:	mov	x3, #0x7fff                	// #32767
    8fd8:	extr	x1, x2, x1, #3
    8fdc:	cmp	x10, x3
    8fe0:	lsr	x2, x2, #3
    8fe4:	b.ne	8ff8 <__subtf3@@GCC_3.0+0x958>  // b.any
    8fe8:	orr	x3, x1, x2
    8fec:	orr	x2, x2, #0x800000000000
    8ff0:	cmp	x3, #0x0
    8ff4:	csel	x2, x2, xzr, ne  // ne = any
    8ff8:	and	x4, x10, #0x7fff
    8ffc:	mov	x7, #0x0                   	// #0
    9000:	bfxil	x7, x2, #0, #48
    9004:	orr	w5, w4, w5, lsl #15
    9008:	fmov	d0, x1
    900c:	bfi	x7, x5, #48, #16
    9010:	fmov	v0.d[1], x7
    9014:	cbz	w0, 9024 <__subtf3@@GCC_3.0+0x984>
    9018:	str	q0, [sp, #16]
    901c:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9020:	ldr	q0, [sp, #16]
    9024:	ldp	x29, x30, [sp], #32
    9028:	ret
    902c:	ands	x1, x8, #0xc00000
    9030:	b.eq	904c <__subtf3@@GCC_3.0+0x9ac>  // b.none
    9034:	cmp	x1, #0x400, lsl #12
    9038:	b.ne	905c <__subtf3@@GCC_3.0+0x9bc>  // b.any
    903c:	cmp	x5, #0x0
    9040:	mov	x2, #0x7ffe                	// #32766
    9044:	csetm	x1, ne  // ne = any
    9048:	csel	x10, x10, x2, eq  // eq = none
    904c:	mov	w2, #0x14                  	// #20
    9050:	orr	w0, w0, w2
    9054:	mov	x2, x1
    9058:	b	8fd4 <__subtf3@@GCC_3.0+0x934>
    905c:	cmp	x1, #0x800, lsl #12
    9060:	b.ne	9078 <__subtf3@@GCC_3.0+0x9d8>  // b.any
    9064:	cmp	x5, #0x0
    9068:	mov	x2, #0x7ffe                	// #32766
    906c:	csetm	x1, eq  // eq = none
    9070:	csel	x10, x10, x2, ne  // ne = any
    9074:	b	904c <__subtf3@@GCC_3.0+0x9ac>
    9078:	mov	x1, #0xffffffffffffffff    	// #-1
    907c:	mov	x10, #0x7ffe                	// #32766
    9080:	b	904c <__subtf3@@GCC_3.0+0x9ac>
    9084:	cmp	x11, x10
    9088:	b.eq	8df0 <__subtf3@@GCC_3.0+0x750>  // b.none
    908c:	mov	w0, #0x0                   	// #0
    9090:	b	8e00 <__subtf3@@GCC_3.0+0x760>
    9094:	cbz	x12, 8a5c <__subtf3@@GCC_3.0+0x3bc>
    9098:	b	8a6c <__subtf3@@GCC_3.0+0x3cc>
    909c:	cmp	x11, x10
    90a0:	b.eq	8a4c <__subtf3@@GCC_3.0+0x3ac>  // b.none
    90a4:	mov	w0, #0x0                   	// #0
    90a8:	b	8a5c <__subtf3@@GCC_3.0+0x3bc>
    90ac:	cbnz	x12, 8a6c <__subtf3@@GCC_3.0+0x3cc>
    90b0:	mov	x5, #0x0                   	// #0
    90b4:	mov	x2, #0x7ffffffffffff       	// #2251799813685247
    90b8:	mov	x1, #0xfffffffffffffff8    	// #-8
    90bc:	mov	x10, #0x7fff                	// #32767
    90c0:	mov	w0, #0x1                   	// #1
    90c4:	b	899c <__subtf3@@GCC_3.0+0x2fc>

00000000000090c8 <__unordtf2@@GCC_4.5.0>:
    90c8:	stp	x29, x30, [sp, #-32]!
    90cc:	mov	x29, sp
    90d0:	str	q0, [sp, #16]
    90d4:	ldp	x2, x0, [sp, #16]
    90d8:	str	q1, [sp, #16]
    90dc:	ldp	x3, x1, [sp, #16]
    90e0:	mrs	x4, fpcr
    90e4:	ubfx	x5, x0, #0, #48
    90e8:	ubfx	x0, x0, #48, #15
    90ec:	ubfx	x6, x1, #0, #48
    90f0:	mov	x4, #0x7fff                	// #32767
    90f4:	ubfx	x1, x1, #48, #15
    90f8:	cmp	x0, x4
    90fc:	b.ne	9108 <__unordtf2@@GCC_4.5.0+0x40>  // b.any
    9100:	orr	x7, x2, x5
    9104:	cbnz	x7, 9134 <__unordtf2@@GCC_4.5.0+0x6c>
    9108:	cmp	x1, x4
    910c:	b.ne	9118 <__unordtf2@@GCC_4.5.0+0x50>  // b.any
    9110:	orr	x4, x6, x3
    9114:	cbnz	x4, 9124 <__unordtf2@@GCC_4.5.0+0x5c>
    9118:	mov	w0, #0x0                   	// #0
    911c:	ldp	x29, x30, [sp], #32
    9120:	ret
    9124:	cmp	x0, x1
    9128:	b.ne	9158 <__unordtf2@@GCC_4.5.0+0x90>  // b.any
    912c:	orr	x2, x2, x5
    9130:	cbz	x2, 914c <__unordtf2@@GCC_4.5.0+0x84>
    9134:	tst	x5, #0x800000000000
    9138:	b.eq	9160 <__unordtf2@@GCC_4.5.0+0x98>  // b.none
    913c:	mov	x2, #0x7fff                	// #32767
    9140:	mov	w0, #0x1                   	// #1
    9144:	cmp	x1, x2
    9148:	b.ne	911c <__unordtf2@@GCC_4.5.0+0x54>  // b.any
    914c:	orr	x3, x6, x3
    9150:	mov	w0, #0x1                   	// #1
    9154:	cbz	x3, 911c <__unordtf2@@GCC_4.5.0+0x54>
    9158:	tst	x6, #0x800000000000
    915c:	b.ne	9168 <__unordtf2@@GCC_4.5.0+0xa0>  // b.any
    9160:	mov	w0, #0x1                   	// #1
    9164:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9168:	mov	w0, #0x1                   	// #1
    916c:	b	911c <__unordtf2@@GCC_4.5.0+0x54>

0000000000009170 <__fixtfsi@@GCC_3.0>:
    9170:	stp	x29, x30, [sp, #-48]!
    9174:	mov	x29, sp
    9178:	str	x19, [sp, #16]
    917c:	str	q0, [sp, #32]
    9180:	ldp	x1, x0, [sp, #32]
    9184:	mrs	x2, fpcr
    9188:	ubfx	x4, x0, #48, #15
    918c:	mov	x3, x1
    9190:	mov	x5, #0x3ffe                	// #16382
    9194:	ubfx	x1, x0, #0, #48
    9198:	mov	x2, x4
    919c:	cmp	x4, x5
    91a0:	b.gt	91c4 <__fixtfsi@@GCC_3.0+0x54>
    91a4:	cbnz	x4, 9234 <__fixtfsi@@GCC_3.0+0xc4>
    91a8:	orr	x1, x1, x3
    91ac:	mov	w19, #0x0                   	// #0
    91b0:	cbnz	x1, 922c <__fixtfsi@@GCC_3.0+0xbc>
    91b4:	mov	w0, w19
    91b8:	ldr	x19, [sp, #16]
    91bc:	ldp	x29, x30, [sp], #48
    91c0:	ret
    91c4:	lsr	x0, x0, #63
    91c8:	mov	x5, #0x401d                	// #16413
    91cc:	and	w0, w0, #0xff
    91d0:	cmp	x4, x5
    91d4:	b.le	9200 <__fixtfsi@@GCC_3.0+0x90>
    91d8:	mov	x4, #0x401e                	// #16414
    91dc:	cmp	x2, x4
    91e0:	mov	w19, #0x7fffffff            	// #2147483647
    91e4:	add	w19, w0, w19
    91e8:	csel	w0, w0, wzr, eq  // eq = none
    91ec:	cbz	w0, 923c <__fixtfsi@@GCC_3.0+0xcc>
    91f0:	cmp	xzr, x1, lsr #17
    91f4:	b.ne	923c <__fixtfsi@@GCC_3.0+0xcc>  // b.any
    91f8:	orr	x1, x3, x1, lsl #47
    91fc:	b	91b0 <__fixtfsi@@GCC_3.0+0x40>
    9200:	orr	x1, x1, #0x1000000000000
    9204:	mov	w2, #0xffffc011            	// #-16367
    9208:	mov	w19, #0x402f                	// #16431
    920c:	add	w2, w4, w2
    9210:	sub	w19, w19, w4
    9214:	cmp	w0, #0x0
    9218:	lsl	x2, x1, x2
    921c:	orr	x2, x2, x3
    9220:	lsr	x19, x1, x19
    9224:	cneg	w19, w19, ne  // ne = any
    9228:	cbz	x2, 91b4 <__fixtfsi@@GCC_3.0+0x44>
    922c:	mov	w0, #0x10                  	// #16
    9230:	b	9240 <__fixtfsi@@GCC_3.0+0xd0>
    9234:	mov	w19, #0x0                   	// #0
    9238:	b	922c <__fixtfsi@@GCC_3.0+0xbc>
    923c:	mov	w0, #0x1                   	// #1
    9240:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9244:	b	91b4 <__fixtfsi@@GCC_3.0+0x44>

0000000000009248 <__fixunstfsi@@GCC_3.0>:
    9248:	stp	x29, x30, [sp, #-48]!
    924c:	mov	x29, sp
    9250:	str	x19, [sp, #16]
    9254:	str	q0, [sp, #32]
    9258:	ldr	x0, [sp, #32]
    925c:	ldr	x19, [sp, #40]
    9260:	mrs	x1, fpcr
    9264:	ubfx	x2, x19, #48, #15
    9268:	mov	x1, x0
    926c:	mov	x4, #0x3ffe                	// #16382
    9270:	ubfx	x0, x19, #0, #48
    9274:	cmp	x2, x4
    9278:	b.gt	929c <__fixunstfsi@@GCC_3.0+0x54>
    927c:	cbnz	x2, 92fc <__fixunstfsi@@GCC_3.0+0xb4>
    9280:	orr	x0, x1, x0
    9284:	cbnz	x0, 92fc <__fixunstfsi@@GCC_3.0+0xb4>
    9288:	mov	w19, #0x0                   	// #0
    928c:	mov	w0, w19
    9290:	ldr	x19, [sp, #16]
    9294:	ldp	x29, x30, [sp], #48
    9298:	ret
    929c:	lsr	x19, x19, #63
    92a0:	mov	x4, #0x401f                	// #16415
    92a4:	and	w19, w19, #0xff
    92a8:	mov	x6, #0x401e                	// #16414
    92ac:	ands	x5, x19, #0xff
    92b0:	csel	x4, x4, x6, eq  // eq = none
    92b4:	cmp	x4, x2
    92b8:	b.le	92ec <__fixunstfsi@@GCC_3.0+0xa4>
    92bc:	cbnz	x5, 9308 <__fixunstfsi@@GCC_3.0+0xc0>
    92c0:	orr	x0, x0, #0x1000000000000
    92c4:	mov	w19, #0x402f                	// #16431
    92c8:	mov	w3, #0xffffc011            	// #-16367
    92cc:	sub	w19, w19, w2
    92d0:	add	w2, w2, w3
    92d4:	lsr	x19, x0, x19
    92d8:	lsl	x0, x0, x2
    92dc:	orr	x0, x0, x1
    92e0:	cbz	x0, 928c <__fixunstfsi@@GCC_3.0+0x44>
    92e4:	mov	w0, #0x10                  	// #16
    92e8:	b	92f4 <__fixunstfsi@@GCC_3.0+0xac>
    92ec:	sub	w19, w19, #0x1
    92f0:	mov	w0, #0x1                   	// #1
    92f4:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    92f8:	b	928c <__fixunstfsi@@GCC_3.0+0x44>
    92fc:	mov	w0, #0x10                  	// #16
    9300:	mov	w19, #0x0                   	// #0
    9304:	b	92f4 <__fixunstfsi@@GCC_3.0+0xac>
    9308:	mov	w0, #0x1                   	// #1
    930c:	b	9300 <__fixunstfsi@@GCC_3.0+0xb8>

0000000000009310 <__floatsitf@@GCC_3.0>:
    9310:	cmp	w0, #0x0
    9314:	cbz	w0, 935c <__floatsitf@@GCC_3.0+0x4c>
    9318:	lsr	w1, w0, #31
    931c:	cneg	w0, w0, lt  // lt = tstop
    9320:	clz	x3, x0
    9324:	mov	w2, #0x403e                	// #16446
    9328:	sub	w2, w2, w3
    932c:	mov	w3, #0x402f                	// #16431
    9330:	sxtw	x4, w2
    9334:	sub	w2, w3, w2
    9338:	lsl	x0, x0, x2
    933c:	mov	x3, #0x0                   	// #0
    9340:	orr	w1, w4, w1, lsl #15
    9344:	bfxil	x3, x0, #0, #48
    9348:	mov	x2, #0x0                   	// #0
    934c:	fmov	d0, x2
    9350:	bfi	x3, x1, #48, #16
    9354:	fmov	v0.d[1], x3
    9358:	ret
    935c:	mov	x0, #0x0                   	// #0
    9360:	mov	x4, #0x0                   	// #0
    9364:	mov	x1, #0x0                   	// #0
    9368:	b	933c <__floatsitf@@GCC_3.0+0x2c>

000000000000936c <__floatunsitf@@GCC_4.2.0>:
    936c:	cbz	w0, 93ac <__floatunsitf@@GCC_4.2.0+0x40>
    9370:	mov	w0, w0
    9374:	mov	w1, #0x403e                	// #16446
    9378:	clz	x2, x0
    937c:	sub	w1, w1, w2
    9380:	mov	w2, #0x402f                	// #16431
    9384:	sxtw	x4, w1
    9388:	sub	w1, w2, w1
    938c:	lsl	x0, x0, x1
    9390:	mov	x3, #0x0                   	// #0
    9394:	mov	x2, #0x0                   	// #0
    9398:	bfxil	x3, x0, #0, #48
    939c:	fmov	d0, x2
    93a0:	bfi	x3, x4, #48, #16
    93a4:	fmov	v0.d[1], x3
    93a8:	ret
    93ac:	mov	x0, #0x0                   	// #0
    93b0:	mov	x4, #0x0                   	// #0
    93b4:	b	9390 <__floatunsitf@@GCC_4.2.0+0x24>

00000000000093b8 <__fixtfdi@@GCC_3.0>:
    93b8:	stp	x29, x30, [sp, #-48]!
    93bc:	mov	x29, sp
    93c0:	str	x19, [sp, #16]
    93c4:	str	q0, [sp, #32]
    93c8:	ldp	x2, x1, [sp, #32]
    93cc:	mrs	x0, fpcr
    93d0:	ubfx	x4, x1, #48, #15
    93d4:	mov	x5, #0x3ffe                	// #16382
    93d8:	ubfx	x0, x1, #0, #48
    93dc:	mov	x3, x4
    93e0:	cmp	x4, x5
    93e4:	b.gt	9404 <__fixtfdi@@GCC_3.0+0x4c>
    93e8:	cbnz	x4, 94c4 <__fixtfdi@@GCC_3.0+0x10c>
    93ec:	orr	x19, x0, x2
    93f0:	cbnz	x19, 94c4 <__fixtfdi@@GCC_3.0+0x10c>
    93f4:	mov	x0, x19
    93f8:	ldr	x19, [sp, #16]
    93fc:	ldp	x29, x30, [sp], #48
    9400:	ret
    9404:	lsr	x1, x1, #63
    9408:	mov	x5, #0x403d                	// #16445
    940c:	and	w1, w1, #0xff
    9410:	cmp	x4, x5
    9414:	b.le	944c <__fixtfdi@@GCC_3.0+0x94>
    9418:	and	x19, x1, #0xff
    941c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
    9420:	add	x19, x19, x4
    9424:	mov	x4, #0x403e                	// #16446
    9428:	cmp	x3, x4
    942c:	csel	w1, w1, wzr, eq  // eq = none
    9430:	cbz	w1, 94cc <__fixtfdi@@GCC_3.0+0x114>
    9434:	extr	x0, x0, x2, #49
    9438:	cbnz	x0, 94cc <__fixtfdi@@GCC_3.0+0x114>
    943c:	cmp	xzr, x2, lsl #15
    9440:	b.eq	93f4 <__fixtfdi@@GCC_3.0+0x3c>  // b.none
    9444:	mov	w0, #0x10                  	// #16
    9448:	b	94d0 <__fixtfdi@@GCC_3.0+0x118>
    944c:	mov	x5, #0x406f                	// #16495
    9450:	sub	x3, x5, x4
    9454:	orr	x0, x0, #0x1000000000000
    9458:	cmp	x3, #0x3f
    945c:	b.gt	9494 <__fixtfdi@@GCC_3.0+0xdc>
    9460:	mov	w6, #0xffffbfd1            	// #-16431
    9464:	add	w19, w4, w6
    9468:	sub	w4, w5, w4
    946c:	lsl	x3, x2, x19
    9470:	cmp	x3, #0x0
    9474:	lsr	x2, x2, x4
    9478:	cset	w3, ne  // ne = any
    947c:	lsl	x19, x0, x19
    9480:	orr	x19, x2, x19
    9484:	cbz	w1, 948c <__fixtfdi@@GCC_3.0+0xd4>
    9488:	neg	x19, x19
    948c:	cbz	w3, 93f4 <__fixtfdi@@GCC_3.0+0x3c>
    9490:	b	9444 <__fixtfdi@@GCC_3.0+0x8c>
    9494:	mov	w5, #0xffffc011            	// #-16367
    9498:	add	w19, w4, w5
    949c:	cmp	x3, #0x40
    94a0:	lsl	x19, x0, x19
    94a4:	csel	x19, x19, xzr, ne  // ne = any
    94a8:	orr	x2, x19, x2
    94ac:	mov	w19, #0x402f                	// #16431
    94b0:	sub	w19, w19, w4
    94b4:	cmp	x2, #0x0
    94b8:	cset	w3, ne  // ne = any
    94bc:	lsr	x19, x0, x19
    94c0:	b	9484 <__fixtfdi@@GCC_3.0+0xcc>
    94c4:	mov	x19, #0x0                   	// #0
    94c8:	b	9444 <__fixtfdi@@GCC_3.0+0x8c>
    94cc:	mov	w0, #0x1                   	// #1
    94d0:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    94d4:	b	93f4 <__fixtfdi@@GCC_3.0+0x3c>

00000000000094d8 <__fixunstfdi@@GCC_3.0>:
    94d8:	stp	x29, x30, [sp, #-48]!
    94dc:	mov	x29, sp
    94e0:	str	x19, [sp, #16]
    94e4:	str	q0, [sp, #32]
    94e8:	ldr	x19, [sp, #32]
    94ec:	ldr	x0, [sp, #40]
    94f0:	mrs	x1, fpcr
    94f4:	ubfx	x3, x0, #48, #15
    94f8:	mov	x1, x19
    94fc:	mov	x4, #0x3ffe                	// #16382
    9500:	ubfx	x19, x0, #0, #48
    9504:	cmp	x3, x4
    9508:	b.gt	9528 <__fixunstfdi@@GCC_3.0+0x50>
    950c:	cbnz	x3, 95d0 <__fixunstfdi@@GCC_3.0+0xf8>
    9510:	orr	x19, x1, x19
    9514:	cbnz	x19, 95d0 <__fixunstfdi@@GCC_3.0+0xf8>
    9518:	mov	x0, x19
    951c:	ldr	x19, [sp, #16]
    9520:	ldp	x29, x30, [sp], #48
    9524:	ret
    9528:	lsr	x0, x0, #63
    952c:	mov	x4, #0x403f                	// #16447
    9530:	and	w0, w0, #0xff
    9534:	and	x5, x0, #0xff
    9538:	sub	x4, x4, x5
    953c:	cmp	x4, x3
    9540:	b.le	958c <__fixunstfdi@@GCC_3.0+0xb4>
    9544:	cbnz	x5, 95dc <__fixunstfdi@@GCC_3.0+0x104>
    9548:	mov	x4, #0x406f                	// #16495
    954c:	sub	x2, x4, x3
    9550:	orr	x0, x19, #0x1000000000000
    9554:	cmp	x2, #0x3f
    9558:	b.gt	95a0 <__fixunstfdi@@GCC_3.0+0xc8>
    955c:	mov	w5, #0xffffbfd1            	// #-16431
    9560:	add	w5, w3, w5
    9564:	sub	w19, w4, w3
    9568:	lsl	x2, x1, x5
    956c:	cmp	x2, #0x0
    9570:	lsr	x1, x1, x19
    9574:	cset	w2, ne  // ne = any
    9578:	lsl	x19, x0, x5
    957c:	orr	x19, x1, x19
    9580:	cbz	w2, 9518 <__fixunstfdi@@GCC_3.0+0x40>
    9584:	mov	w0, #0x10                  	// #16
    9588:	b	9598 <__fixunstfdi@@GCC_3.0+0xc0>
    958c:	eor	w0, w0, #0x1
    9590:	sbfx	x19, x0, #0, #1
    9594:	mov	w0, #0x1                   	// #1
    9598:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    959c:	b	9518 <__fixunstfdi@@GCC_3.0+0x40>
    95a0:	mov	w4, #0xffffc011            	// #-16367
    95a4:	add	w19, w3, w4
    95a8:	cmp	x2, #0x40
    95ac:	lsl	x19, x0, x19
    95b0:	csel	x19, x19, xzr, ne  // ne = any
    95b4:	orr	x19, x19, x1
    95b8:	cmp	x19, #0x0
    95bc:	mov	w19, #0x402f                	// #16431
    95c0:	sub	w19, w19, w3
    95c4:	cset	w2, ne  // ne = any
    95c8:	lsr	x19, x0, x19
    95cc:	b	9580 <__fixunstfdi@@GCC_3.0+0xa8>
    95d0:	mov	w0, #0x10                  	// #16
    95d4:	mov	x19, #0x0                   	// #0
    95d8:	b	9598 <__fixunstfdi@@GCC_3.0+0xc0>
    95dc:	mov	w0, #0x1                   	// #1
    95e0:	b	95d4 <__fixunstfdi@@GCC_3.0+0xfc>

00000000000095e4 <__floatditf@@GCC_3.0>:
    95e4:	cmp	x0, #0x0
    95e8:	cbz	x0, 9660 <__floatditf@@GCC_3.0+0x7c>
    95ec:	lsr	x4, x0, #63
    95f0:	cneg	x0, x0, lt  // lt = tstop
    95f4:	clz	x1, x0
    95f8:	mov	w2, #0x403e                	// #16446
    95fc:	sub	w3, w2, w1
    9600:	mov	x2, #0x406f                	// #16495
    9604:	sub	x1, x2, w3, sxtw
    9608:	sxtw	x6, w3
    960c:	cmp	x1, #0x3f
    9610:	b.gt	9648 <__floatditf@@GCC_3.0+0x64>
    9614:	sub	w2, w2, w3
    9618:	mov	w1, #0xffffbfd1            	// #-16431
    961c:	add	w1, w3, w1
    9620:	lsl	x2, x0, x2
    9624:	lsr	x1, x0, x1
    9628:	mov	x0, x4
    962c:	mov	x5, #0x0                   	// #0
    9630:	orr	w0, w6, w0, lsl #15
    9634:	bfxil	x5, x1, #0, #48
    9638:	fmov	d0, x2
    963c:	bfi	x5, x0, #48, #16
    9640:	fmov	v0.d[1], x5
    9644:	ret
    9648:	mov	w1, #0x402f                	// #16431
    964c:	sub	w1, w1, w3
    9650:	lsl	x1, x0, x1
    9654:	mov	x0, x4
    9658:	mov	x2, #0x0                   	// #0
    965c:	b	962c <__floatditf@@GCC_3.0+0x48>
    9660:	mov	x6, #0x0                   	// #0
    9664:	mov	x1, #0x0                   	// #0
    9668:	b	9658 <__floatditf@@GCC_3.0+0x74>

000000000000966c <__floatunditf@@GCC_4.2.0>:
    966c:	cbz	x0, 96d0 <__floatunditf@@GCC_4.2.0+0x64>
    9670:	clz	x2, x0
    9674:	mov	w1, #0x403e                	// #16446
    9678:	sub	w2, w1, w2
    967c:	mov	x3, #0x406f                	// #16495
    9680:	sub	x1, x3, w2, sxtw
    9684:	sxtw	x4, w2
    9688:	cmp	x1, #0x3f
    968c:	b.gt	96bc <__floatunditf@@GCC_4.2.0+0x50>
    9690:	mov	w1, #0xffffbfd1            	// #-16431
    9694:	add	w1, w2, w1
    9698:	sub	w2, w3, w2
    969c:	lsr	x1, x0, x1
    96a0:	lsl	x0, x0, x2
    96a4:	mov	x3, #0x0                   	// #0
    96a8:	fmov	d0, x0
    96ac:	bfxil	x3, x1, #0, #48
    96b0:	bfi	x3, x4, #48, #16
    96b4:	fmov	v0.d[1], x3
    96b8:	ret
    96bc:	mov	w1, #0x402f                	// #16431
    96c0:	sub	w1, w1, w2
    96c4:	lsl	x1, x0, x1
    96c8:	mov	x0, #0x0                   	// #0
    96cc:	b	96a4 <__floatunditf@@GCC_4.2.0+0x38>
    96d0:	mov	x1, #0x0                   	// #0
    96d4:	mov	x4, #0x0                   	// #0
    96d8:	b	96a4 <__floatunditf@@GCC_4.2.0+0x38>

00000000000096dc <__fixtfti@@GCC_3.0>:
    96dc:	stp	x29, x30, [sp, #-64]!
    96e0:	mov	x29, sp
    96e4:	stp	x19, x20, [sp, #16]
    96e8:	str	x21, [sp, #32]
    96ec:	str	q0, [sp, #48]
    96f0:	ldp	x0, x4, [sp, #48]
    96f4:	mrs	x1, fpcr
    96f8:	ubfx	x19, x4, #48, #15
    96fc:	mov	x2, #0x3ffe                	// #16382
    9700:	ubfx	x1, x4, #0, #48
    9704:	mov	x5, x19
    9708:	cmp	x19, x2
    970c:	b.gt	973c <__fixtfti@@GCC_3.0+0x60>
    9710:	cbnz	x19, 9848 <__fixtfti@@GCC_3.0+0x16c>
    9714:	orr	x1, x0, x1
    9718:	mov	x19, #0x0                   	// #0
    971c:	mov	x20, #0x0                   	// #0
    9720:	cbnz	x1, 9808 <__fixtfti@@GCC_3.0+0x12c>
    9724:	mov	x0, x19
    9728:	mov	x1, x20
    972c:	ldp	x19, x20, [sp, #16]
    9730:	ldr	x21, [sp, #32]
    9734:	ldp	x29, x30, [sp], #64
    9738:	ret
    973c:	lsr	x4, x4, #63
    9740:	mov	x2, #0x407d                	// #16509
    9744:	and	w4, w4, #0xff
    9748:	cmp	x19, x2
    974c:	and	x21, x4, #0xff
    9750:	b.le	9790 <__fixtfti@@GCC_3.0+0xb4>
    9754:	adrp	x6, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    9758:	mov	x2, #0x1                   	// #1
    975c:	sub	x19, x2, x21
    9760:	ldr	x20, [x6, #3224]
    9764:	asr	x3, x19, #63
    9768:	negs	x19, x19
    976c:	sbc	x20, x20, x3
    9770:	mov	x3, #0x407e                	// #16510
    9774:	cmp	x5, x3
    9778:	csel	w4, w4, wzr, eq  // eq = none
    977c:	cbz	w4, 9788 <__fixtfti@@GCC_3.0+0xac>
    9780:	orr	x1, x0, x1
    9784:	cbz	x1, 9724 <__fixtfti@@GCC_3.0+0x48>
    9788:	mov	w0, w2
    978c:	b	980c <__fixtfti@@GCC_3.0+0x130>
    9790:	mov	x2, #0x406e                	// #16494
    9794:	orr	x1, x1, #0x1000000000000
    9798:	cmp	x19, x2
    979c:	b.le	97c0 <__fixtfti@@GCC_3.0+0xe4>
    97a0:	mov	w4, #0xffffbf91            	// #-16495
    97a4:	add	w2, w19, w4
    97a8:	bl	2ce0 <__ashlti3@plt>
    97ac:	mov	x19, x0
    97b0:	mov	x20, x1
    97b4:	cbz	x21, 9724 <__fixtfti@@GCC_3.0+0x48>
    97b8:	mov	w4, #0x0                   	// #0
    97bc:	b	97fc <__fixtfti@@GCC_3.0+0x120>
    97c0:	mov	x20, #0x406f                	// #16495
    97c4:	sub	x5, x20, x19
    97c8:	cmp	x5, #0x3f
    97cc:	b.gt	9814 <__fixtfti@@GCC_3.0+0x138>
    97d0:	mov	w3, #0xffffbfd1            	// #-16431
    97d4:	add	w3, w19, w3
    97d8:	sub	w20, w20, w19
    97dc:	lsl	x2, x0, x3
    97e0:	cmp	x2, #0x0
    97e4:	lsr	x19, x0, x20
    97e8:	cset	w4, ne  // ne = any
    97ec:	lsl	x3, x1, x3
    97f0:	orr	x19, x3, x19
    97f4:	lsr	x20, x1, x20
    97f8:	cbz	x21, 9804 <__fixtfti@@GCC_3.0+0x128>
    97fc:	negs	x19, x19
    9800:	ngc	x20, x20
    9804:	cbz	w4, 9724 <__fixtfti@@GCC_3.0+0x48>
    9808:	mov	w0, #0x10                  	// #16
    980c:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9810:	b	9724 <__fixtfti@@GCC_3.0+0x48>
    9814:	mov	w2, #0xffffc011            	// #-16367
    9818:	add	w4, w19, w2
    981c:	cmp	x5, #0x40
    9820:	mov	w3, #0x402f                	// #16431
    9824:	lsl	x4, x1, x4
    9828:	csel	x4, x4, xzr, ne  // ne = any
    982c:	orr	x0, x4, x0
    9830:	sub	w19, w3, w19
    9834:	cmp	x0, #0x0
    9838:	mov	x20, #0x0                   	// #0
    983c:	cset	w4, ne  // ne = any
    9840:	lsr	x19, x1, x19
    9844:	b	97f8 <__fixtfti@@GCC_3.0+0x11c>
    9848:	mov	x19, #0x0                   	// #0
    984c:	mov	x20, #0x0                   	// #0
    9850:	b	9808 <__fixtfti@@GCC_3.0+0x12c>

0000000000009854 <__fixunstfti@@GCC_3.0>:
    9854:	stp	x29, x30, [sp, #-48]!
    9858:	mov	x29, sp
    985c:	stp	x19, x20, [sp, #16]
    9860:	str	q0, [sp, #32]
    9864:	ldp	x0, x4, [sp, #32]
    9868:	mrs	x1, fpcr
    986c:	ubfx	x2, x4, #48, #15
    9870:	mov	x3, #0x3ffe                	// #16382
    9874:	ubfx	x1, x4, #0, #48
    9878:	cmp	x2, x3
    987c:	b.gt	98a8 <__fixunstfti@@GCC_3.0+0x54>
    9880:	cbnz	x2, 9984 <__fixunstfti@@GCC_3.0+0x130>
    9884:	orr	x1, x0, x1
    9888:	cbnz	x1, 9984 <__fixunstfti@@GCC_3.0+0x130>
    988c:	mov	x20, #0x0                   	// #0
    9890:	mov	x19, #0x0                   	// #0
    9894:	mov	x0, x20
    9898:	mov	x1, x19
    989c:	ldp	x19, x20, [sp, #16]
    98a0:	ldp	x29, x30, [sp], #48
    98a4:	ret
    98a8:	lsr	x4, x4, #63
    98ac:	mov	x3, #0x407f                	// #16511
    98b0:	and	w4, w4, #0xff
    98b4:	and	x20, x4, #0xff
    98b8:	sub	x3, x3, x20
    98bc:	cmp	x3, x2
    98c0:	b.le	98f4 <__fixunstfti@@GCC_3.0+0xa0>
    98c4:	cbnz	x20, 9994 <__fixunstfti@@GCC_3.0+0x140>
    98c8:	mov	x3, #0x406e                	// #16494
    98cc:	orr	x1, x1, #0x1000000000000
    98d0:	cmp	x2, x3
    98d4:	b.le	990c <__fixunstfti@@GCC_3.0+0xb8>
    98d8:	mov	w5, #0xffffbf91            	// #-16495
    98dc:	adds	x0, x0, x20
    98e0:	add	w2, w2, w5
    98e4:	bl	2ce0 <__ashlti3@plt>
    98e8:	mov	x20, x0
    98ec:	mov	x19, x1
    98f0:	b	9894 <__fixunstfti@@GCC_3.0+0x40>
    98f4:	eor	w4, w4, #0x1
    98f8:	mov	w0, #0x1                   	// #1
    98fc:	sbfx	x20, x4, #0, #1
    9900:	mov	x19, x20
    9904:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9908:	b	9894 <__fixunstfti@@GCC_3.0+0x40>
    990c:	mov	x20, #0x406f                	// #16495
    9910:	sub	x5, x20, x2
    9914:	cmp	x5, #0x3f
    9918:	b.gt	9950 <__fixunstfti@@GCC_3.0+0xfc>
    991c:	mov	w4, #0xffffbfd1            	// #-16431
    9920:	add	w3, w2, w4
    9924:	sub	w19, w20, w2
    9928:	lsl	x4, x0, x3
    992c:	cmp	x4, #0x0
    9930:	lsr	x0, x0, x19
    9934:	cset	w4, ne  // ne = any
    9938:	lsl	x20, x1, x3
    993c:	orr	x20, x20, x0
    9940:	lsr	x19, x1, x19
    9944:	cbz	w4, 9894 <__fixunstfti@@GCC_3.0+0x40>
    9948:	mov	w0, #0x10                  	// #16
    994c:	b	9904 <__fixunstfti@@GCC_3.0+0xb0>
    9950:	mov	w3, #0xffffc011            	// #-16367
    9954:	add	w4, w2, w3
    9958:	cmp	x5, #0x40
    995c:	mov	w20, #0x402f                	// #16431
    9960:	lsl	x4, x1, x4
    9964:	csel	x4, x4, xzr, ne  // ne = any
    9968:	orr	x0, x4, x0
    996c:	sub	w20, w20, w2
    9970:	cmp	x0, #0x0
    9974:	mov	x19, #0x0                   	// #0
    9978:	cset	w4, ne  // ne = any
    997c:	lsr	x20, x1, x20
    9980:	b	9944 <__fixunstfti@@GCC_3.0+0xf0>
    9984:	mov	w0, #0x10                  	// #16
    9988:	mov	x20, #0x0                   	// #0
    998c:	mov	x19, #0x0                   	// #0
    9990:	b	9904 <__fixunstfti@@GCC_3.0+0xb0>
    9994:	mov	w0, #0x1                   	// #1
    9998:	b	9988 <__fixunstfti@@GCC_3.0+0x134>

000000000000999c <__floattitf@@GCC_3.0>:
    999c:	stp	x29, x30, [sp, #-112]!
    99a0:	mov	x2, x0
    99a4:	mov	x29, sp
    99a8:	stp	x19, x20, [sp, #16]
    99ac:	stp	x21, x22, [sp, #32]
    99b0:	stp	x23, x24, [sp, #48]
    99b4:	stp	x25, x26, [sp, #64]
    99b8:	str	x27, [sp, #80]
    99bc:	mrs	x25, fpcr
    99c0:	orr	x0, x0, x1
    99c4:	cbz	x0, 9b94 <__floattitf@@GCC_3.0+0x1f8>
    99c8:	mov	x22, x1
    99cc:	mov	x19, x2
    99d0:	mov	x21, x1
    99d4:	lsr	x24, x1, #63
    99d8:	tbz	x1, #63, 99e8 <__floattitf@@GCC_3.0+0x4c>
    99dc:	negs	x2, x2
    99e0:	ngc	x21, x1
    99e4:	mov	x19, x2
    99e8:	clz	x20, x19
    99ec:	cmp	x21, #0x0
    99f0:	add	w20, w20, #0x40
    99f4:	clz	x0, x21
    99f8:	csel	w0, w20, w0, eq  // eq = none
    99fc:	mov	w3, #0x407e                	// #16510
    9a00:	sub	w20, w3, w0
    9a04:	mov	x4, x21
    9a08:	mov	w0, #0x406f                	// #16495
    9a0c:	cmp	w20, w0
    9a10:	sxtw	x23, w20
    9a14:	b.gt	9a68 <__floattitf@@GCC_3.0+0xcc>
    9a18:	mov	x1, #0x406f                	// #16495
    9a1c:	mov	x2, x19
    9a20:	subs	x3, x1, x23
    9a24:	b.eq	9ba8 <__floattitf@@GCC_3.0+0x20c>  // b.none
    9a28:	cmp	x3, #0x3f
    9a2c:	b.gt	9a54 <__floattitf@@GCC_3.0+0xb8>
    9a30:	sub	w0, w0, w20
    9a34:	mov	w3, #0xffffbfd1            	// #-16431
    9a38:	add	w20, w20, w3
    9a3c:	lsl	x3, x21, x0
    9a40:	lsr	x20, x19, x20
    9a44:	orr	x4, x20, x3
    9a48:	lsl	x2, x19, x0
    9a4c:	mov	w0, #0x0                   	// #0
    9a50:	b	9b50 <__floattitf@@GCC_3.0+0x1b4>
    9a54:	mov	w3, #0x402f                	// #16431
    9a58:	sub	w3, w3, w20
    9a5c:	mov	x2, #0x0                   	// #0
    9a60:	lsl	x4, x19, x3
    9a64:	b	9a4c <__floattitf@@GCC_3.0+0xb0>
    9a68:	mov	w2, #0x4072                	// #16498
    9a6c:	cmp	w20, w2
    9a70:	b.le	9ab4 <__floattitf@@GCC_3.0+0x118>
    9a74:	sub	w2, w20, w2
    9a78:	mov	x0, x19
    9a7c:	mov	x1, x21
    9a80:	bl	2b70 <__lshrti3@plt>
    9a84:	mov	w2, #0x40f2                	// #16626
    9a88:	mov	x27, x0
    9a8c:	mov	x26, x1
    9a90:	sub	w2, w2, w20
    9a94:	mov	x0, x19
    9a98:	mov	x1, x21
    9a9c:	bl	2ce0 <__ashlti3@plt>
    9aa0:	orr	x0, x0, x1
    9aa4:	cmp	x0, #0x0
    9aa8:	mov	x21, x26
    9aac:	cset	x2, ne  // ne = any
    9ab0:	orr	x19, x2, x27
    9ab4:	mov	x0, #0x4072                	// #16498
    9ab8:	sub	x1, x0, x23
    9abc:	mov	x2, x19
    9ac0:	cmp	x1, #0x0
    9ac4:	b.le	9ae4 <__floattitf@@GCC_3.0+0x148>
    9ac8:	sub	w0, w0, w20
    9acc:	mov	w1, #0xffffbfce            	// #-16434
    9ad0:	add	w3, w20, w1
    9ad4:	lsl	x21, x21, x0
    9ad8:	lsr	x3, x19, x3
    9adc:	orr	x21, x3, x21
    9ae0:	lsl	x2, x19, x0
    9ae4:	and	x3, x21, #0xfff7ffffffffffff
    9ae8:	tst	x2, #0x7
    9aec:	b.eq	9b38 <__floattitf@@GCC_3.0+0x19c>  // b.none
    9af0:	and	x0, x25, #0xc00000
    9af4:	cmp	x0, #0x400, lsl #12
    9af8:	b.eq	9b20 <__floattitf@@GCC_3.0+0x184>  // b.none
    9afc:	cmp	x0, #0x800, lsl #12
    9b00:	b.eq	9b2c <__floattitf@@GCC_3.0+0x190>  // b.none
    9b04:	cbnz	x0, 9b30 <__floattitf@@GCC_3.0+0x194>
    9b08:	and	x0, x2, #0xf
    9b0c:	cmp	x0, #0x4
    9b10:	b.eq	9b30 <__floattitf@@GCC_3.0+0x194>  // b.none
    9b14:	adds	x2, x2, #0x4
    9b18:	cinc	x3, x3, cs  // cs = hs, nlast
    9b1c:	b	9b30 <__floattitf@@GCC_3.0+0x194>
    9b20:	tbnz	x22, #63, 9b30 <__floattitf@@GCC_3.0+0x194>
    9b24:	adds	x2, x2, #0x8
    9b28:	b	9b18 <__floattitf@@GCC_3.0+0x17c>
    9b2c:	tbnz	x22, #63, 9b24 <__floattitf@@GCC_3.0+0x188>
    9b30:	mov	w0, #0x10                  	// #16
    9b34:	b	9b3c <__floattitf@@GCC_3.0+0x1a0>
    9b38:	mov	w0, #0x0                   	// #0
    9b3c:	tbz	x3, #51, 9b48 <__floattitf@@GCC_3.0+0x1ac>
    9b40:	and	x3, x3, #0xfff7ffffffffffff
    9b44:	add	x23, x23, #0x1
    9b48:	lsr	x4, x3, #3
    9b4c:	extr	x2, x3, x2, #3
    9b50:	mov	x7, #0x0                   	// #0
    9b54:	orr	w23, w23, w24, lsl #15
    9b58:	bfxil	x7, x4, #0, #48
    9b5c:	fmov	d0, x2
    9b60:	bfi	x7, x23, #48, #16
    9b64:	fmov	v0.d[1], x7
    9b68:	cbz	w0, 9b78 <__floattitf@@GCC_3.0+0x1dc>
    9b6c:	str	q0, [sp, #96]
    9b70:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9b74:	ldr	q0, [sp, #96]
    9b78:	ldp	x19, x20, [sp, #16]
    9b7c:	ldp	x21, x22, [sp, #32]
    9b80:	ldp	x23, x24, [sp, #48]
    9b84:	ldp	x25, x26, [sp, #64]
    9b88:	ldr	x27, [sp, #80]
    9b8c:	ldp	x29, x30, [sp], #112
    9b90:	ret
    9b94:	mov	x4, #0x0                   	// #0
    9b98:	mov	x2, #0x0                   	// #0
    9b9c:	mov	x23, #0x0                   	// #0
    9ba0:	mov	x24, #0x0                   	// #0
    9ba4:	b	9a4c <__floattitf@@GCC_3.0+0xb0>
    9ba8:	mov	x23, x1
    9bac:	b	9a4c <__floattitf@@GCC_3.0+0xb0>

0000000000009bb0 <__floatuntitf@@GCC_4.2.0>:
    9bb0:	stp	x29, x30, [sp, #-96]!
    9bb4:	mov	x29, sp
    9bb8:	stp	x19, x20, [sp, #16]
    9bbc:	stp	x21, x22, [sp, #32]
    9bc0:	stp	x23, x24, [sp, #48]
    9bc4:	str	x25, [sp, #64]
    9bc8:	mrs	x23, fpcr
    9bcc:	orr	x2, x0, x1
    9bd0:	cbz	x2, 9d64 <__floatuntitf@@GCC_4.2.0+0x1b4>
    9bd4:	clz	x20, x0
    9bd8:	cmp	x1, #0x0
    9bdc:	add	w20, w20, #0x40
    9be0:	clz	x2, x1
    9be4:	csel	w2, w20, w2, eq  // eq = none
    9be8:	mov	w20, #0x407e                	// #16510
    9bec:	sub	w20, w20, w2
    9bf0:	mov	w4, #0x406f                	// #16495
    9bf4:	mov	x19, x0
    9bf8:	mov	x21, x1
    9bfc:	mov	x3, x1
    9c00:	sxtw	x22, w20
    9c04:	cmp	w20, w4
    9c08:	b.gt	9c5c <__floatuntitf@@GCC_4.2.0+0xac>
    9c0c:	mov	x2, x0
    9c10:	mov	x0, #0x406f                	// #16495
    9c14:	subs	x1, x0, x22
    9c18:	b.eq	9d74 <__floatuntitf@@GCC_4.2.0+0x1c4>  // b.none
    9c1c:	cmp	x1, #0x3f
    9c20:	b.gt	9c48 <__floatuntitf@@GCC_4.2.0+0x98>
    9c24:	sub	w4, w4, w20
    9c28:	mov	w5, #0xffffbfd1            	// #-16431
    9c2c:	add	w20, w20, w5
    9c30:	lsl	x1, x21, x4
    9c34:	lsr	x20, x19, x20
    9c38:	orr	x3, x20, x1
    9c3c:	lsl	x2, x19, x4
    9c40:	mov	w0, #0x0                   	// #0
    9c44:	b	9d28 <__floatuntitf@@GCC_4.2.0+0x178>
    9c48:	mov	w1, #0x402f                	// #16431
    9c4c:	sub	w1, w1, w20
    9c50:	mov	x2, #0x0                   	// #0
    9c54:	lsl	x3, x19, x1
    9c58:	b	9c40 <__floatuntitf@@GCC_4.2.0+0x90>
    9c5c:	mov	w24, #0x4072                	// #16498
    9c60:	cmp	w20, w24
    9c64:	b.le	9c98 <__floatuntitf@@GCC_4.2.0+0xe8>
    9c68:	mov	w2, #0x40f2                	// #16626
    9c6c:	sub	w2, w2, w20
    9c70:	bl	2ce0 <__ashlti3@plt>
    9c74:	orr	x0, x0, x1
    9c78:	cmp	x0, #0x0
    9c7c:	mov	x1, x21
    9c80:	cset	x25, ne  // ne = any
    9c84:	mov	x0, x19
    9c88:	sub	w2, w20, w24
    9c8c:	bl	2b70 <__lshrti3@plt>
    9c90:	orr	x19, x25, x0
    9c94:	mov	x21, x1
    9c98:	mov	x0, #0x4072                	// #16498
    9c9c:	sub	x3, x0, x22
    9ca0:	mov	x2, x19
    9ca4:	mov	x1, x21
    9ca8:	cmp	x3, #0x0
    9cac:	b.le	9ccc <__floatuntitf@@GCC_4.2.0+0x11c>
    9cb0:	sub	w0, w0, w20
    9cb4:	mov	w3, #0xffffbfce            	// #-16434
    9cb8:	lsl	x1, x21, x0
    9cbc:	add	w21, w20, w3
    9cc0:	lsl	x2, x19, x0
    9cc4:	lsr	x21, x19, x21
    9cc8:	orr	x1, x21, x1
    9ccc:	and	x1, x1, #0xfff7ffffffffffff
    9cd0:	tst	x2, #0x7
    9cd4:	b.eq	9d10 <__floatuntitf@@GCC_4.2.0+0x160>  // b.none
    9cd8:	ands	x0, x23, #0xc00000
    9cdc:	b.eq	9cf0 <__floatuntitf@@GCC_4.2.0+0x140>  // b.none
    9ce0:	cmp	x0, #0x400, lsl #12
    9ce4:	b.eq	9d08 <__floatuntitf@@GCC_4.2.0+0x158>  // b.none
    9ce8:	mov	w0, #0x10                  	// #16
    9cec:	b	9d14 <__floatuntitf@@GCC_4.2.0+0x164>
    9cf0:	and	x0, x2, #0xf
    9cf4:	cmp	x0, #0x4
    9cf8:	b.eq	9ce8 <__floatuntitf@@GCC_4.2.0+0x138>  // b.none
    9cfc:	adds	x2, x2, #0x4
    9d00:	cinc	x1, x1, cs  // cs = hs, nlast
    9d04:	b	9ce8 <__floatuntitf@@GCC_4.2.0+0x138>
    9d08:	adds	x2, x2, #0x8
    9d0c:	b	9d00 <__floatuntitf@@GCC_4.2.0+0x150>
    9d10:	mov	w0, #0x0                   	// #0
    9d14:	tbz	x1, #51, 9d20 <__floatuntitf@@GCC_4.2.0+0x170>
    9d18:	and	x1, x1, #0xfff7ffffffffffff
    9d1c:	add	x22, x22, #0x1
    9d20:	lsr	x3, x1, #3
    9d24:	extr	x2, x1, x2, #3
    9d28:	mov	x5, #0x0                   	// #0
    9d2c:	fmov	d0, x2
    9d30:	bfxil	x5, x3, #0, #48
    9d34:	bfi	x5, x22, #48, #16
    9d38:	fmov	v0.d[1], x5
    9d3c:	cbz	w0, 9d4c <__floatuntitf@@GCC_4.2.0+0x19c>
    9d40:	str	q0, [sp, #80]
    9d44:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9d48:	ldr	q0, [sp, #80]
    9d4c:	ldp	x19, x20, [sp, #16]
    9d50:	ldp	x21, x22, [sp, #32]
    9d54:	ldp	x23, x24, [sp, #48]
    9d58:	ldr	x25, [sp, #64]
    9d5c:	ldp	x29, x30, [sp], #96
    9d60:	ret
    9d64:	mov	x3, #0x0                   	// #0
    9d68:	mov	x2, #0x0                   	// #0
    9d6c:	mov	x22, #0x0                   	// #0
    9d70:	b	9c40 <__floatuntitf@@GCC_4.2.0+0x90>
    9d74:	mov	x22, x0
    9d78:	b	9c40 <__floatuntitf@@GCC_4.2.0+0x90>

0000000000009d7c <__extendsftf2@@GCC_3.0>:
    9d7c:	mrs	x0, fpcr
    9d80:	fmov	w0, s0
    9d84:	ubfx	x5, x0, #23, #8
    9d88:	ubfx	x3, x0, #0, #23
    9d8c:	add	x1, x5, #0x1
    9d90:	and	x2, x0, #0x7fffff
    9d94:	ands	x1, x1, #0xfe
    9d98:	lsr	w0, w0, #31
    9d9c:	b.eq	9db4 <__extendsftf2@@GCC_3.0+0x38>  // b.none
    9da0:	mov	x1, #0x3f80                	// #16256
    9da4:	lsl	x2, x2, #25
    9da8:	add	x1, x5, x1
    9dac:	mov	w3, #0x0                   	// #0
    9db0:	b	9df0 <__extendsftf2@@GCC_3.0+0x74>
    9db4:	cbnz	w5, 9dd8 <__extendsftf2@@GCC_3.0+0x5c>
    9db8:	cbz	x2, 9dac <__extendsftf2@@GCC_3.0+0x30>
    9dbc:	clz	x3, x2
    9dc0:	sub	w1, w3, #0xf
    9dc4:	lsl	x2, x2, x1
    9dc8:	mov	w1, #0x3fa9                	// #16297
    9dcc:	sub	w1, w1, w3
    9dd0:	sxtw	x1, w1
    9dd4:	b	9dac <__extendsftf2@@GCC_3.0+0x30>
    9dd8:	cbz	x2, 9e30 <__extendsftf2@@GCC_3.0+0xb4>
    9ddc:	lsr	w3, w3, #22
    9de0:	lsl	x2, x2, #25
    9de4:	eor	w3, w3, #0x1
    9de8:	orr	x2, x2, #0x800000000000
    9dec:	mov	x1, #0x7fff                	// #32767
    9df0:	mov	x5, #0x0                   	// #0
    9df4:	orr	w0, w1, w0, lsl #15
    9df8:	bfxil	x5, x2, #0, #48
    9dfc:	mov	x4, #0x0                   	// #0
    9e00:	fmov	d0, x4
    9e04:	bfi	x5, x0, #48, #16
    9e08:	fmov	v0.d[1], x5
    9e0c:	cbz	w3, 9e38 <__extendsftf2@@GCC_3.0+0xbc>
    9e10:	stp	x29, x30, [sp, #-32]!
    9e14:	mov	w0, #0x1                   	// #1
    9e18:	mov	x29, sp
    9e1c:	str	q0, [sp, #16]
    9e20:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9e24:	ldr	q0, [sp, #16]
    9e28:	ldp	x29, x30, [sp], #32
    9e2c:	ret
    9e30:	mov	x1, #0x7fff                	// #32767
    9e34:	b	9dac <__extendsftf2@@GCC_3.0+0x30>
    9e38:	ret

0000000000009e3c <__extenddftf2@@GCC_3.0>:
    9e3c:	mrs	x0, fpcr
    9e40:	fmov	x0, d0
    9e44:	ubfx	x3, x0, #52, #11
    9e48:	ubfx	x1, x0, #0, #52
    9e4c:	lsr	x0, x0, #63
    9e50:	and	w2, w0, #0xff
    9e54:	add	x0, x3, #0x1
    9e58:	tst	x0, #0x7fe
    9e5c:	b.eq	9e78 <__extenddftf2@@GCC_3.0+0x3c>  // b.none
    9e60:	mov	x0, #0x3c00                	// #15360
    9e64:	add	x3, x3, x0
    9e68:	lsr	x0, x1, #4
    9e6c:	lsl	x1, x1, #60
    9e70:	mov	w4, #0x0                   	// #0
    9e74:	b	9ee0 <__extenddftf2@@GCC_3.0+0xa4>
    9e78:	cbnz	x3, 9ec0 <__extenddftf2@@GCC_3.0+0x84>
    9e7c:	cbz	x1, 9f1c <__extenddftf2@@GCC_3.0+0xe0>
    9e80:	clz	x4, x1
    9e84:	cmp	w4, #0xe
    9e88:	b.gt	9eb0 <__extenddftf2@@GCC_3.0+0x74>
    9e8c:	add	w3, w4, #0x31
    9e90:	mov	w0, #0xf                   	// #15
    9e94:	sub	w0, w0, w4
    9e98:	lsr	x0, x1, x0
    9e9c:	lsl	x1, x1, x3
    9ea0:	mov	w3, #0x3c0c                	// #15372
    9ea4:	sub	w3, w3, w4
    9ea8:	sxtw	x3, w3
    9eac:	b	9e70 <__extenddftf2@@GCC_3.0+0x34>
    9eb0:	sub	w0, w4, #0xf
    9eb4:	lsl	x0, x1, x0
    9eb8:	mov	x1, #0x0                   	// #0
    9ebc:	b	9ea0 <__extenddftf2@@GCC_3.0+0x64>
    9ec0:	cbz	x1, 9f24 <__extenddftf2@@GCC_3.0+0xe8>
    9ec4:	lsr	x4, x1, #51
    9ec8:	lsr	x0, x1, #4
    9ecc:	eor	x4, x4, #0x1
    9ed0:	orr	x0, x0, #0x800000000000
    9ed4:	and	w4, w4, #0x1
    9ed8:	lsl	x1, x1, #60
    9edc:	mov	x3, #0x7fff                	// #32767
    9ee0:	mov	x7, #0x0                   	// #0
    9ee4:	fmov	d0, x1
    9ee8:	bfxil	x7, x0, #0, #48
    9eec:	orr	w0, w3, w2, lsl #15
    9ef0:	bfi	x7, x0, #48, #16
    9ef4:	fmov	v0.d[1], x7
    9ef8:	cbz	w4, 9f30 <__extenddftf2@@GCC_3.0+0xf4>
    9efc:	stp	x29, x30, [sp, #-32]!
    9f00:	mov	w0, #0x1                   	// #1
    9f04:	mov	x29, sp
    9f08:	str	q0, [sp, #16]
    9f0c:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9f10:	ldr	q0, [sp, #16]
    9f14:	ldp	x29, x30, [sp], #32
    9f18:	ret
    9f1c:	mov	x0, #0x0                   	// #0
    9f20:	b	9e70 <__extenddftf2@@GCC_3.0+0x34>
    9f24:	mov	x0, #0x0                   	// #0
    9f28:	mov	x3, #0x7fff                	// #32767
    9f2c:	b	9e70 <__extenddftf2@@GCC_3.0+0x34>
    9f30:	ret
    9f34:	mrs	x0, fpcr
    9f38:	umov	w0, v0.h[0]
    9f3c:	mov	w3, #0x0                   	// #0
    9f40:	bfxil	w3, w0, #0, #16
    9f44:	and	w2, w3, #0x3ff
    9f48:	and	x1, x3, #0x3ff
    9f4c:	ubfx	x0, x3, #10, #5
    9f50:	ubfx	x3, x3, #15, #1
    9f54:	add	x4, x0, #0x1
    9f58:	tst	x4, #0x1e
    9f5c:	b.eq	9f74 <__extenddftf2@@GCC_3.0+0x138>  // b.none
    9f60:	mov	x2, #0x3ff0                	// #16368
    9f64:	lsl	x1, x1, #38
    9f68:	add	x0, x0, x2
    9f6c:	mov	w2, #0x0                   	// #0
    9f70:	b	9fb0 <__extenddftf2@@GCC_3.0+0x174>
    9f74:	cbnz	x0, 9f98 <__extenddftf2@@GCC_3.0+0x15c>
    9f78:	cbz	x1, 9f6c <__extenddftf2@@GCC_3.0+0x130>
    9f7c:	clz	x2, x1
    9f80:	sub	w0, w2, #0xf
    9f84:	lsl	x1, x1, x0
    9f88:	mov	w0, #0x4026                	// #16422
    9f8c:	sub	w0, w0, w2
    9f90:	sxtw	x0, w0
    9f94:	b	9f6c <__extenddftf2@@GCC_3.0+0x130>
    9f98:	cbz	x1, 9ff0 <__extenddftf2@@GCC_3.0+0x1b4>
    9f9c:	lsr	w2, w2, #9
    9fa0:	lsl	x1, x1, #38
    9fa4:	eor	w2, w2, #0x1
    9fa8:	orr	x1, x1, #0x800000000000
    9fac:	mov	x0, #0x7fff                	// #32767
    9fb0:	mov	x5, #0x0                   	// #0
    9fb4:	orr	w0, w0, w3, lsl #15
    9fb8:	bfxil	x5, x1, #0, #48
    9fbc:	mov	x4, #0x0                   	// #0
    9fc0:	fmov	d0, x4
    9fc4:	bfi	x5, x0, #48, #16
    9fc8:	fmov	v0.d[1], x5
    9fcc:	cbz	w2, 9ff8 <__extenddftf2@@GCC_3.0+0x1bc>
    9fd0:	stp	x29, x30, [sp, #-32]!
    9fd4:	mov	w0, #0x1                   	// #1
    9fd8:	mov	x29, sp
    9fdc:	str	q0, [sp, #16]
    9fe0:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    9fe4:	ldr	q0, [sp, #16]
    9fe8:	ldp	x29, x30, [sp], #32
    9fec:	ret
    9ff0:	mov	x0, #0x7fff                	// #32767
    9ff4:	b	9f6c <__extenddftf2@@GCC_3.0+0x130>
    9ff8:	ret

0000000000009ffc <__trunctfsf2@@GCC_3.0>:
    9ffc:	stp	x29, x30, [sp, #-48]!
    a000:	mov	x29, sp
    a004:	str	x19, [sp, #16]
    a008:	str	q0, [sp, #32]
    a00c:	ldp	x1, x3, [sp, #32]
    a010:	mrs	x4, fpcr
    a014:	ubfx	x2, x3, #48, #15
    a018:	lsr	x19, x3, #63
    a01c:	add	x0, x2, #0x1
    a020:	ubfiz	x3, x3, #3, #48
    a024:	orr	x3, x3, x1, lsr #61
    a028:	and	w19, w19, #0xff
    a02c:	lsl	x1, x1, #3
    a030:	tst	x0, #0x7ffe
    a034:	b.eq	a0ec <__trunctfsf2@@GCC_3.0+0xf0>  // b.none
    a038:	mov	x0, #0xffffffffffffc080    	// #-16256
    a03c:	add	x2, x2, x0
    a040:	cmp	x2, #0xfe
    a044:	b.le	a094 <__trunctfsf2@@GCC_3.0+0x98>
    a048:	ands	x1, x4, #0xc00000
    a04c:	b.eq	a174 <__trunctfsf2@@GCC_3.0+0x178>  // b.none
    a050:	cmp	x1, #0x400, lsl #12
    a054:	b.ne	a074 <__trunctfsf2@@GCC_3.0+0x78>  // b.any
    a058:	cmp	w19, #0x0
    a05c:	mov	x2, #0xff                  	// #255
    a060:	mov	x0, #0xfe                  	// #254
    a064:	csetm	x1, ne  // ne = any
    a068:	csel	x2, x2, x0, eq  // eq = none
    a06c:	mov	w0, #0x14                  	// #20
    a070:	b	a128 <__trunctfsf2@@GCC_3.0+0x12c>
    a074:	cmp	x1, #0x800, lsl #12
    a078:	b.ne	a17c <__trunctfsf2@@GCC_3.0+0x180>  // b.any
    a07c:	cmp	w19, #0x0
    a080:	mov	x2, #0xff                  	// #255
    a084:	mov	x0, #0xfe                  	// #254
    a088:	csetm	x1, eq  // eq = none
    a08c:	csel	x2, x2, x0, ne  // ne = any
    a090:	b	a06c <__trunctfsf2@@GCC_3.0+0x70>
    a094:	cmp	x2, #0x0
    a098:	b.gt	a0d4 <__trunctfsf2@@GCC_3.0+0xd8>
    a09c:	cmn	x2, #0x17
    a0a0:	b.lt	a188 <__trunctfsf2@@GCC_3.0+0x18c>  // b.tstop
    a0a4:	orr	x3, x3, #0x8000000000000
    a0a8:	add	w0, w2, #0x26
    a0ac:	lsl	x0, x3, x0
    a0b0:	orr	x1, x0, x1
    a0b4:	cmp	x1, #0x0
    a0b8:	mov	w0, #0x1a                  	// #26
    a0bc:	sub	w2, w0, w2
    a0c0:	cset	x1, ne  // ne = any
    a0c4:	lsr	x3, x3, x2
    a0c8:	orr	x1, x3, x1
    a0cc:	mov	x2, #0x0                   	// #0
    a0d0:	b	a0e4 <__trunctfsf2@@GCC_3.0+0xe8>
    a0d4:	orr	x1, x1, x3, lsl #39
    a0d8:	cmp	x1, #0x0
    a0dc:	cset	x1, ne  // ne = any
    a0e0:	orr	x1, x1, x3, lsr #25
    a0e4:	mov	w0, #0x0                   	// #0
    a0e8:	b	a128 <__trunctfsf2@@GCC_3.0+0x12c>
    a0ec:	orr	x1, x3, x1
    a0f0:	cbnz	x2, a100 <__trunctfsf2@@GCC_3.0+0x104>
    a0f4:	cmp	x1, #0x0
    a0f8:	cset	x1, ne  // ne = any
    a0fc:	b	a0e4 <__trunctfsf2@@GCC_3.0+0xe8>
    a100:	cbz	x1, a190 <__trunctfsf2@@GCC_3.0+0x194>
    a104:	mov	x1, #0x7fff                	// #32767
    a108:	lsr	x0, x3, #50
    a10c:	cmp	x2, x1
    a110:	lsr	x1, x3, #25
    a114:	eor	w0, w0, #0x1
    a118:	and	x1, x1, #0xfffffffffffffff8
    a11c:	csel	w0, w0, wzr, eq  // eq = none
    a120:	orr	x1, x1, #0x2000000
    a124:	mov	x2, #0xff                  	// #255
    a128:	cmp	x2, #0x0
    a12c:	cset	w3, eq  // eq = none
    a130:	cmp	x1, #0x0
    a134:	csel	w3, w3, wzr, ne  // ne = any
    a138:	tst	x1, #0x7
    a13c:	b.eq	a1ac <__trunctfsf2@@GCC_3.0+0x1b0>  // b.none
    a140:	and	x5, x4, #0xc00000
    a144:	orr	w0, w0, #0x10
    a148:	cmp	x5, #0x400, lsl #12
    a14c:	b.eq	a198 <__trunctfsf2@@GCC_3.0+0x19c>  // b.none
    a150:	cmp	x5, #0x800, lsl #12
    a154:	b.eq	a1a4 <__trunctfsf2@@GCC_3.0+0x1a8>  // b.none
    a158:	cbnz	x5, a16c <__trunctfsf2@@GCC_3.0+0x170>
    a15c:	and	x5, x1, #0xf
    a160:	cmp	x5, #0x4
    a164:	b.eq	a16c <__trunctfsf2@@GCC_3.0+0x170>  // b.none
    a168:	add	x1, x1, #0x4
    a16c:	cbz	w3, a1bc <__trunctfsf2@@GCC_3.0+0x1c0>
    a170:	b	a1b8 <__trunctfsf2@@GCC_3.0+0x1bc>
    a174:	mov	x2, #0xff                  	// #255
    a178:	b	a06c <__trunctfsf2@@GCC_3.0+0x70>
    a17c:	mov	x1, #0xffffffffffffffff    	// #-1
    a180:	mov	x2, #0xfe                  	// #254
    a184:	b	a06c <__trunctfsf2@@GCC_3.0+0x70>
    a188:	mov	x1, #0x1                   	// #1
    a18c:	b	a0cc <__trunctfsf2@@GCC_3.0+0xd0>
    a190:	mov	x2, #0xff                  	// #255
    a194:	b	a0e4 <__trunctfsf2@@GCC_3.0+0xe8>
    a198:	cbnz	w19, a16c <__trunctfsf2@@GCC_3.0+0x170>
    a19c:	add	x1, x1, #0x8
    a1a0:	b	a16c <__trunctfsf2@@GCC_3.0+0x170>
    a1a4:	cbz	w19, a16c <__trunctfsf2@@GCC_3.0+0x170>
    a1a8:	b	a19c <__trunctfsf2@@GCC_3.0+0x1a0>
    a1ac:	cbz	w3, a1bc <__trunctfsf2@@GCC_3.0+0x1c0>
    a1b0:	tbnz	w0, #4, a1b8 <__trunctfsf2@@GCC_3.0+0x1bc>
    a1b4:	tbz	w4, #11, a1bc <__trunctfsf2@@GCC_3.0+0x1c0>
    a1b8:	orr	w0, w0, #0x8
    a1bc:	tbz	w1, #26, a1d0 <__trunctfsf2@@GCC_3.0+0x1d4>
    a1c0:	add	x2, x2, #0x1
    a1c4:	cmp	x2, #0xff
    a1c8:	b.eq	a210 <__trunctfsf2@@GCC_3.0+0x214>  // b.none
    a1cc:	and	x1, x1, #0xfffffffffbffffff
    a1d0:	lsr	x1, x1, #3
    a1d4:	cmp	x2, #0xff
    a1d8:	ccmp	x1, #0x0, #0x4, eq  // eq = none
    a1dc:	mov	x3, x1
    a1e0:	orr	x1, x1, #0x400000
    a1e4:	ubfiz	w2, w2, #23, #8
    a1e8:	csel	x1, x1, x3, ne  // ne = any
    a1ec:	and	x1, x1, #0x7fffff
    a1f0:	orr	w1, w2, w1
    a1f4:	orr	w19, w1, w19, lsl #31
    a1f8:	cbz	w0, a200 <__trunctfsf2@@GCC_3.0+0x204>
    a1fc:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    a200:	fmov	s0, w19
    a204:	ldr	x19, [sp, #16]
    a208:	ldp	x29, x30, [sp], #48
    a20c:	ret
    a210:	ands	x1, x4, #0xc00000
    a214:	b.eq	a230 <__trunctfsf2@@GCC_3.0+0x234>  // b.none
    a218:	cmp	x1, #0x400, lsl #12
    a21c:	b.ne	a23c <__trunctfsf2@@GCC_3.0+0x240>  // b.any
    a220:	cmp	w19, #0x0
    a224:	mov	x3, #0xfe                  	// #254
    a228:	csetm	x1, ne  // ne = any
    a22c:	csel	x2, x2, x3, eq  // eq = none
    a230:	mov	w3, #0x14                  	// #20
    a234:	orr	w0, w0, w3
    a238:	b	a1d0 <__trunctfsf2@@GCC_3.0+0x1d4>
    a23c:	cmp	x1, #0x800, lsl #12
    a240:	b.ne	a258 <__trunctfsf2@@GCC_3.0+0x25c>  // b.any
    a244:	cmp	w19, #0x0
    a248:	mov	x3, #0xfe                  	// #254
    a24c:	csetm	x1, eq  // eq = none
    a250:	csel	x2, x2, x3, ne  // ne = any
    a254:	b	a230 <__trunctfsf2@@GCC_3.0+0x234>
    a258:	mov	x1, #0xffffffffffffffff    	// #-1
    a25c:	mov	x2, #0xfe                  	// #254
    a260:	b	a230 <__trunctfsf2@@GCC_3.0+0x234>

000000000000a264 <__trunctfdf2@@GCC_3.0>:
    a264:	stp	x29, x30, [sp, #-48]!
    a268:	mov	x29, sp
    a26c:	str	x19, [sp, #16]
    a270:	str	q0, [sp, #32]
    a274:	ldp	x0, x3, [sp, #32]
    a278:	mrs	x6, fpcr
    a27c:	ubfx	x2, x3, #48, #15
    a280:	lsr	x4, x3, #63
    a284:	add	x1, x2, #0x1
    a288:	ubfiz	x3, x3, #3, #48
    a28c:	and	w4, w4, #0xff
    a290:	orr	x3, x3, x0, lsr #61
    a294:	lsl	x5, x0, #3
    a298:	tst	x1, #0x7ffe
    a29c:	b.eq	a394 <__trunctfdf2@@GCC_3.0+0x130>  // b.none
    a2a0:	mov	x1, #0xffffffffffffc400    	// #-15360
    a2a4:	add	x2, x2, x1
    a2a8:	cmp	x2, #0x7fe
    a2ac:	b.le	a2fc <__trunctfdf2@@GCC_3.0+0x98>
    a2b0:	ands	x1, x6, #0xc00000
    a2b4:	b.eq	a41c <__trunctfdf2@@GCC_3.0+0x1b8>  // b.none
    a2b8:	cmp	x1, #0x400, lsl #12
    a2bc:	b.ne	a2dc <__trunctfdf2@@GCC_3.0+0x78>  // b.any
    a2c0:	cmp	w4, #0x0
    a2c4:	mov	x2, #0x7ff                 	// #2047
    a2c8:	mov	x0, #0x7fe                 	// #2046
    a2cc:	csetm	x1, ne  // ne = any
    a2d0:	csel	x2, x2, x0, eq  // eq = none
    a2d4:	mov	w0, #0x14                  	// #20
    a2d8:	b	a3d0 <__trunctfdf2@@GCC_3.0+0x16c>
    a2dc:	cmp	x1, #0x800, lsl #12
    a2e0:	b.ne	a424 <__trunctfdf2@@GCC_3.0+0x1c0>  // b.any
    a2e4:	cmp	w4, #0x0
    a2e8:	mov	x2, #0x7ff                 	// #2047
    a2ec:	mov	x0, #0x7fe                 	// #2046
    a2f0:	csetm	x1, eq  // eq = none
    a2f4:	csel	x2, x2, x0, ne  // ne = any
    a2f8:	b	a2d4 <__trunctfdf2@@GCC_3.0+0x70>
    a2fc:	cmp	x2, #0x0
    a300:	b.gt	a37c <__trunctfdf2@@GCC_3.0+0x118>
    a304:	cmn	x2, #0x34
    a308:	b.lt	a430 <__trunctfdf2@@GCC_3.0+0x1cc>  // b.tstop
    a30c:	mov	x0, #0x3d                  	// #61
    a310:	sub	x8, x0, x2
    a314:	orr	x3, x3, #0x8000000000000
    a318:	cmp	x8, #0x3f
    a31c:	b.gt	a34c <__trunctfdf2@@GCC_3.0+0xe8>
    a320:	add	w7, w2, #0x3
    a324:	sub	w1, w0, w2
    a328:	lsr	x1, x5, x1
    a32c:	lsl	x5, x5, x7
    a330:	cmp	x5, #0x0
    a334:	cset	x0, ne  // ne = any
    a338:	lsl	x3, x3, x7
    a33c:	orr	x1, x1, x0
    a340:	orr	x1, x3, x1
    a344:	mov	x2, #0x0                   	// #0
    a348:	b	a38c <__trunctfdf2@@GCC_3.0+0x128>
    a34c:	add	w0, w2, #0x43
    a350:	mov	w1, #0xfffffffd            	// #-3
    a354:	sub	w1, w1, w2
    a358:	cmp	x8, #0x40
    a35c:	lsr	x1, x3, x1
    a360:	lsl	x3, x3, x0
    a364:	csel	x3, x3, xzr, ne  // ne = any
    a368:	orr	x3, x3, x5
    a36c:	cmp	x3, #0x0
    a370:	cset	x0, ne  // ne = any
    a374:	orr	x1, x1, x0
    a378:	b	a344 <__trunctfdf2@@GCC_3.0+0xe0>
    a37c:	cmp	xzr, x0, lsl #7
    a380:	cset	x1, ne  // ne = any
    a384:	orr	x1, x1, x5, lsr #60
    a388:	orr	x1, x1, x3, lsl #4
    a38c:	mov	w0, #0x0                   	// #0
    a390:	b	a3d0 <__trunctfdf2@@GCC_3.0+0x16c>
    a394:	orr	x1, x3, x5
    a398:	cbnz	x2, a3a8 <__trunctfdf2@@GCC_3.0+0x144>
    a39c:	cmp	x1, #0x0
    a3a0:	cset	x1, ne  // ne = any
    a3a4:	b	a38c <__trunctfdf2@@GCC_3.0+0x128>
    a3a8:	cbz	x1, a438 <__trunctfdf2@@GCC_3.0+0x1d4>
    a3ac:	mov	x1, #0x7fff                	// #32767
    a3b0:	lsr	x0, x3, #50
    a3b4:	cmp	x2, x1
    a3b8:	extr	x1, x3, x5, #60
    a3bc:	eor	w0, w0, #0x1
    a3c0:	and	x1, x1, #0xfffffffffffffff8
    a3c4:	csel	w0, w0, wzr, eq  // eq = none
    a3c8:	orr	x1, x1, #0x40000000000000
    a3cc:	mov	x2, #0x7ff                 	// #2047
    a3d0:	cmp	x2, #0x0
    a3d4:	cset	w3, eq  // eq = none
    a3d8:	cmp	x1, #0x0
    a3dc:	csel	w3, w3, wzr, ne  // ne = any
    a3e0:	tst	x1, #0x7
    a3e4:	b.eq	a454 <__trunctfdf2@@GCC_3.0+0x1f0>  // b.none
    a3e8:	and	x5, x6, #0xc00000
    a3ec:	orr	w0, w0, #0x10
    a3f0:	cmp	x5, #0x400, lsl #12
    a3f4:	b.eq	a440 <__trunctfdf2@@GCC_3.0+0x1dc>  // b.none
    a3f8:	cmp	x5, #0x800, lsl #12
    a3fc:	b.eq	a44c <__trunctfdf2@@GCC_3.0+0x1e8>  // b.none
    a400:	cbnz	x5, a414 <__trunctfdf2@@GCC_3.0+0x1b0>
    a404:	and	x5, x1, #0xf
    a408:	cmp	x5, #0x4
    a40c:	b.eq	a414 <__trunctfdf2@@GCC_3.0+0x1b0>  // b.none
    a410:	add	x1, x1, #0x4
    a414:	cbz	w3, a464 <__trunctfdf2@@GCC_3.0+0x200>
    a418:	b	a460 <__trunctfdf2@@GCC_3.0+0x1fc>
    a41c:	mov	x2, #0x7ff                 	// #2047
    a420:	b	a2d4 <__trunctfdf2@@GCC_3.0+0x70>
    a424:	mov	x1, #0xffffffffffffffff    	// #-1
    a428:	mov	x2, #0x7fe                 	// #2046
    a42c:	b	a2d4 <__trunctfdf2@@GCC_3.0+0x70>
    a430:	mov	x1, #0x1                   	// #1
    a434:	b	a344 <__trunctfdf2@@GCC_3.0+0xe0>
    a438:	mov	x2, #0x7ff                 	// #2047
    a43c:	b	a38c <__trunctfdf2@@GCC_3.0+0x128>
    a440:	cbnz	w4, a414 <__trunctfdf2@@GCC_3.0+0x1b0>
    a444:	add	x1, x1, #0x8
    a448:	b	a414 <__trunctfdf2@@GCC_3.0+0x1b0>
    a44c:	cbz	w4, a414 <__trunctfdf2@@GCC_3.0+0x1b0>
    a450:	b	a444 <__trunctfdf2@@GCC_3.0+0x1e0>
    a454:	cbz	w3, a464 <__trunctfdf2@@GCC_3.0+0x200>
    a458:	tbnz	w0, #4, a460 <__trunctfdf2@@GCC_3.0+0x1fc>
    a45c:	tbz	w6, #11, a464 <__trunctfdf2@@GCC_3.0+0x200>
    a460:	orr	w0, w0, #0x8
    a464:	tbz	x1, #55, a478 <__trunctfdf2@@GCC_3.0+0x214>
    a468:	add	x2, x2, #0x1
    a46c:	cmp	x2, #0x7ff
    a470:	b.eq	a4bc <__trunctfdf2@@GCC_3.0+0x258>  // b.none
    a474:	and	x1, x1, #0xff7fffffffffffff
    a478:	lsr	x1, x1, #3
    a47c:	cmp	x2, #0x7ff
    a480:	ccmp	x1, #0x0, #0x4, eq  // eq = none
    a484:	mov	x3, x1
    a488:	orr	x1, x1, #0x8000000000000
    a48c:	ubfiz	x2, x2, #52, #11
    a490:	csel	x1, x1, x3, ne  // ne = any
    a494:	and	x4, x4, #0xff
    a498:	and	x1, x1, #0xfffffffffffff
    a49c:	orr	x1, x2, x1
    a4a0:	orr	x19, x1, x4, lsl #63
    a4a4:	cbz	w0, a4ac <__trunctfdf2@@GCC_3.0+0x248>
    a4a8:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    a4ac:	fmov	d0, x19
    a4b0:	ldr	x19, [sp, #16]
    a4b4:	ldp	x29, x30, [sp], #48
    a4b8:	ret
    a4bc:	ands	x1, x6, #0xc00000
    a4c0:	b.eq	a4dc <__trunctfdf2@@GCC_3.0+0x278>  // b.none
    a4c4:	cmp	x1, #0x400, lsl #12
    a4c8:	b.ne	a4e8 <__trunctfdf2@@GCC_3.0+0x284>  // b.any
    a4cc:	cmp	w4, #0x0
    a4d0:	mov	x3, #0x7fe                 	// #2046
    a4d4:	csetm	x1, ne  // ne = any
    a4d8:	csel	x2, x2, x3, eq  // eq = none
    a4dc:	mov	w3, #0x14                  	// #20
    a4e0:	orr	w0, w0, w3
    a4e4:	b	a478 <__trunctfdf2@@GCC_3.0+0x214>
    a4e8:	cmp	x1, #0x800, lsl #12
    a4ec:	b.ne	a504 <__trunctfdf2@@GCC_3.0+0x2a0>  // b.any
    a4f0:	cmp	w4, #0x0
    a4f4:	mov	x3, #0x7fe                 	// #2046
    a4f8:	csetm	x1, eq  // eq = none
    a4fc:	csel	x2, x2, x3, ne  // ne = any
    a500:	b	a4dc <__trunctfdf2@@GCC_3.0+0x278>
    a504:	mov	x1, #0xffffffffffffffff    	// #-1
    a508:	mov	x2, #0x7fe                 	// #2046
    a50c:	b	a4dc <__trunctfdf2@@GCC_3.0+0x278>
    a510:	stp	x29, x30, [sp, #-48]!
    a514:	mov	x29, sp
    a518:	str	x19, [sp, #16]
    a51c:	str	q0, [sp, #32]
    a520:	ldp	x1, x3, [sp, #32]
    a524:	mrs	x4, fpcr
    a528:	ubfx	x2, x3, #48, #15
    a52c:	lsr	x19, x3, #63
    a530:	add	x0, x2, #0x1
    a534:	ubfiz	x3, x3, #3, #48
    a538:	orr	x3, x3, x1, lsr #61
    a53c:	and	w19, w19, #0xff
    a540:	lsl	x1, x1, #3
    a544:	tst	x0, #0x7ffe
    a548:	b.eq	a600 <__trunctfdf2@@GCC_3.0+0x39c>  // b.none
    a54c:	mov	x0, #0xffffffffffffc010    	// #-16368
    a550:	add	x2, x2, x0
    a554:	cmp	x2, #0x1e
    a558:	b.le	a5a8 <__trunctfdf2@@GCC_3.0+0x344>
    a55c:	ands	x1, x4, #0xc00000
    a560:	b.eq	a688 <__trunctfdf2@@GCC_3.0+0x424>  // b.none
    a564:	cmp	x1, #0x400, lsl #12
    a568:	b.ne	a588 <__trunctfdf2@@GCC_3.0+0x324>  // b.any
    a56c:	cmp	w19, #0x0
    a570:	mov	x2, #0x1f                  	// #31
    a574:	mov	x0, #0x1e                  	// #30
    a578:	csetm	x1, ne  // ne = any
    a57c:	csel	x2, x2, x0, eq  // eq = none
    a580:	mov	w0, #0x14                  	// #20
    a584:	b	a63c <__trunctfdf2@@GCC_3.0+0x3d8>
    a588:	cmp	x1, #0x800, lsl #12
    a58c:	b.ne	a690 <__trunctfdf2@@GCC_3.0+0x42c>  // b.any
    a590:	cmp	w19, #0x0
    a594:	mov	x2, #0x1f                  	// #31
    a598:	mov	x0, #0x1e                  	// #30
    a59c:	csetm	x1, eq  // eq = none
    a5a0:	csel	x2, x2, x0, ne  // ne = any
    a5a4:	b	a580 <__trunctfdf2@@GCC_3.0+0x31c>
    a5a8:	cmp	x2, #0x0
    a5ac:	b.gt	a5e8 <__trunctfdf2@@GCC_3.0+0x384>
    a5b0:	cmn	x2, #0xa
    a5b4:	b.lt	a69c <__trunctfdf2@@GCC_3.0+0x438>  // b.tstop
    a5b8:	orr	x3, x3, #0x8000000000000
    a5bc:	add	w0, w2, #0x19
    a5c0:	lsl	x0, x3, x0
    a5c4:	orr	x1, x0, x1
    a5c8:	cmp	x1, #0x0
    a5cc:	mov	w0, #0x27                  	// #39
    a5d0:	sub	w2, w0, w2
    a5d4:	cset	x1, ne  // ne = any
    a5d8:	lsr	x3, x3, x2
    a5dc:	orr	x1, x3, x1
    a5e0:	mov	x2, #0x0                   	// #0
    a5e4:	b	a5f8 <__trunctfdf2@@GCC_3.0+0x394>
    a5e8:	orr	x1, x1, x3, lsl #26
    a5ec:	cmp	x1, #0x0
    a5f0:	cset	x1, ne  // ne = any
    a5f4:	orr	x1, x1, x3, lsr #38
    a5f8:	mov	w0, #0x0                   	// #0
    a5fc:	b	a63c <__trunctfdf2@@GCC_3.0+0x3d8>
    a600:	orr	x1, x3, x1
    a604:	cbnz	x2, a614 <__trunctfdf2@@GCC_3.0+0x3b0>
    a608:	cmp	x1, #0x0
    a60c:	cset	x1, ne  // ne = any
    a610:	b	a5f8 <__trunctfdf2@@GCC_3.0+0x394>
    a614:	cbz	x1, a6a4 <__trunctfdf2@@GCC_3.0+0x440>
    a618:	mov	x1, #0x7fff                	// #32767
    a61c:	lsr	x0, x3, #50
    a620:	cmp	x2, x1
    a624:	lsr	x1, x3, #38
    a628:	eor	w0, w0, #0x1
    a62c:	and	x1, x1, #0xfffffffffffffff8
    a630:	csel	w0, w0, wzr, eq  // eq = none
    a634:	orr	x1, x1, #0x1000
    a638:	mov	x2, #0x1f                  	// #31
    a63c:	cmp	x2, #0x0
    a640:	cset	w3, eq  // eq = none
    a644:	cmp	x1, #0x0
    a648:	csel	w3, w3, wzr, ne  // ne = any
    a64c:	tst	x1, #0x7
    a650:	b.eq	a6c0 <__trunctfdf2@@GCC_3.0+0x45c>  // b.none
    a654:	and	x5, x4, #0xc00000
    a658:	orr	w0, w0, #0x10
    a65c:	cmp	x5, #0x400, lsl #12
    a660:	b.eq	a6ac <__trunctfdf2@@GCC_3.0+0x448>  // b.none
    a664:	cmp	x5, #0x800, lsl #12
    a668:	b.eq	a6b8 <__trunctfdf2@@GCC_3.0+0x454>  // b.none
    a66c:	cbnz	x5, a680 <__trunctfdf2@@GCC_3.0+0x41c>
    a670:	and	x5, x1, #0xf
    a674:	cmp	x5, #0x4
    a678:	b.eq	a680 <__trunctfdf2@@GCC_3.0+0x41c>  // b.none
    a67c:	add	x1, x1, #0x4
    a680:	cbz	w3, a6d0 <__trunctfdf2@@GCC_3.0+0x46c>
    a684:	b	a6cc <__trunctfdf2@@GCC_3.0+0x468>
    a688:	mov	x2, #0x1f                  	// #31
    a68c:	b	a580 <__trunctfdf2@@GCC_3.0+0x31c>
    a690:	mov	x1, #0xffffffffffffffff    	// #-1
    a694:	mov	x2, #0x1e                  	// #30
    a698:	b	a580 <__trunctfdf2@@GCC_3.0+0x31c>
    a69c:	mov	x1, #0x1                   	// #1
    a6a0:	b	a5e0 <__trunctfdf2@@GCC_3.0+0x37c>
    a6a4:	mov	x2, #0x1f                  	// #31
    a6a8:	b	a5f8 <__trunctfdf2@@GCC_3.0+0x394>
    a6ac:	cbnz	w19, a680 <__trunctfdf2@@GCC_3.0+0x41c>
    a6b0:	add	x1, x1, #0x8
    a6b4:	b	a680 <__trunctfdf2@@GCC_3.0+0x41c>
    a6b8:	cbz	w19, a680 <__trunctfdf2@@GCC_3.0+0x41c>
    a6bc:	b	a6b0 <__trunctfdf2@@GCC_3.0+0x44c>
    a6c0:	cbz	w3, a6d0 <__trunctfdf2@@GCC_3.0+0x46c>
    a6c4:	tbnz	w0, #4, a6cc <__trunctfdf2@@GCC_3.0+0x468>
    a6c8:	tbz	w4, #11, a6d0 <__trunctfdf2@@GCC_3.0+0x46c>
    a6cc:	orr	w0, w0, #0x8
    a6d0:	tbz	w1, #13, a6e4 <__trunctfdf2@@GCC_3.0+0x480>
    a6d4:	add	x2, x2, #0x1
    a6d8:	cmp	x2, #0x1f
    a6dc:	b.eq	a728 <__trunctfdf2@@GCC_3.0+0x4c4>  // b.none
    a6e0:	and	x1, x1, #0xffffffffffffdfff
    a6e4:	lsr	x1, x1, #3
    a6e8:	cmp	x1, #0x0
    a6ec:	mov	x3, x1
    a6f0:	ccmp	x2, #0x1f, #0x0, ne  // ne = any
    a6f4:	orr	x1, x1, #0x200
    a6f8:	csel	x1, x1, x3, eq  // eq = none
    a6fc:	and	x2, x2, #0x1f
    a700:	and	x1, x1, #0x3ff
    a704:	orr	w1, w1, w2, lsl #10
    a708:	orr	w19, w1, w19, lsl #15
    a70c:	sxth	x19, w19
    a710:	cbz	w0, a718 <__trunctfdf2@@GCC_3.0+0x4b4>
    a714:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    a718:	dup	v0.4h, w19
    a71c:	ldr	x19, [sp, #16]
    a720:	ldp	x29, x30, [sp], #48
    a724:	ret
    a728:	ands	x1, x4, #0xc00000
    a72c:	b.eq	a748 <__trunctfdf2@@GCC_3.0+0x4e4>  // b.none
    a730:	cmp	x1, #0x400, lsl #12
    a734:	b.ne	a754 <__trunctfdf2@@GCC_3.0+0x4f0>  // b.any
    a738:	cmp	w19, #0x0
    a73c:	mov	x3, #0x1e                  	// #30
    a740:	csetm	x1, ne  // ne = any
    a744:	csel	x2, x2, x3, eq  // eq = none
    a748:	mov	w3, #0x14                  	// #20
    a74c:	orr	w0, w0, w3
    a750:	b	a6e4 <__trunctfdf2@@GCC_3.0+0x480>
    a754:	cmp	x1, #0x800, lsl #12
    a758:	b.ne	a770 <__trunctfdf2@@GCC_3.0+0x50c>  // b.any
    a75c:	cmp	w19, #0x0
    a760:	mov	x3, #0x1e                  	// #30
    a764:	csetm	x1, eq  // eq = none
    a768:	csel	x2, x2, x3, ne  // ne = any
    a76c:	b	a748 <__trunctfdf2@@GCC_3.0+0x4e4>
    a770:	mov	x1, #0xffffffffffffffff    	// #-1
    a774:	mov	x2, #0x1e                  	// #30
    a778:	b	a748 <__trunctfdf2@@GCC_3.0+0x4e4>
    a77c:	stp	x29, x30, [sp, #-48]!
    a780:	mov	x29, sp
    a784:	stp	x19, x20, [sp, #16]
    a788:	str	x21, [sp, #32]
    a78c:	mrs	x0, fpcr
    a790:	umov	w0, v0.h[0]
    a794:	mov	w1, #0x0                   	// #0
    a798:	bfxil	w1, w0, #0, #16
    a79c:	and	x0, x1, #0x3ff
    a7a0:	ubfx	x2, x1, #10, #5
    a7a4:	ubfx	x1, x1, #15, #1
    a7a8:	cmp	x2, #0xe
    a7ac:	b.gt	a7d8 <__trunctfdf2@@GCC_3.0+0x574>
    a7b0:	mov	x19, #0x0                   	// #0
    a7b4:	mov	x20, #0x0                   	// #0
    a7b8:	cbnz	x2, a864 <__trunctfdf2@@GCC_3.0+0x600>
    a7bc:	cbnz	x0, a864 <__trunctfdf2@@GCC_3.0+0x600>
    a7c0:	mov	x0, x19
    a7c4:	mov	x1, x20
    a7c8:	ldp	x19, x20, [sp, #16]
    a7cc:	ldr	x21, [sp, #32]
    a7d0:	ldp	x29, x30, [sp], #48
    a7d4:	ret
    a7d8:	and	x21, x1, #0xff
    a7dc:	cmp	x2, #0x1f
    a7e0:	b.ne	a808 <__trunctfdf2@@GCC_3.0+0x5a4>  // b.any
    a7e4:	adrp	x2, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    a7e8:	mov	x0, #0x1                   	// #1
    a7ec:	sub	x19, x0, x21
    a7f0:	ldr	x20, [x2, #3224]
    a7f4:	asr	x1, x19, #63
    a7f8:	negs	x19, x19
    a7fc:	sbc	x20, x20, x1
    a800:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    a804:	b	a7c0 <__trunctfdf2@@GCC_3.0+0x55c>
    a808:	orr	x0, x0, #0x400
    a80c:	cmp	x2, #0x18
    a810:	b.le	a834 <__trunctfdf2@@GCC_3.0+0x5d0>
    a814:	sub	w2, w2, #0x19
    a818:	mov	x1, #0x0                   	// #0
    a81c:	bl	2ce0 <__ashlti3@plt>
    a820:	mov	x19, x0
    a824:	mov	x20, x1
    a828:	cbz	x21, a7c0 <__trunctfdf2@@GCC_3.0+0x55c>
    a82c:	mov	w1, #0x0                   	// #0
    a830:	b	a858 <__trunctfdf2@@GCC_3.0+0x5f4>
    a834:	add	w1, w2, #0x27
    a838:	mov	w19, #0x19                  	// #25
    a83c:	sub	w19, w19, w2
    a840:	mov	x20, #0x0                   	// #0
    a844:	lsl	x1, x0, x1
    a848:	cmp	x1, #0x0
    a84c:	cset	w1, ne  // ne = any
    a850:	lsr	x19, x0, x19
    a854:	cbz	x21, a860 <__trunctfdf2@@GCC_3.0+0x5fc>
    a858:	negs	x19, x19
    a85c:	ngc	x20, x20
    a860:	cbz	w1, a7c0 <__trunctfdf2@@GCC_3.0+0x55c>
    a864:	mov	w0, #0x10                  	// #16
    a868:	b	a800 <__trunctfdf2@@GCC_3.0+0x59c>
    a86c:	stp	x29, x30, [sp, #-32]!
    a870:	mov	x29, sp
    a874:	stp	x19, x20, [sp, #16]
    a878:	mrs	x0, fpcr
    a87c:	umov	w0, v0.h[0]
    a880:	mov	w19, #0x0                   	// #0
    a884:	bfxil	w19, w0, #0, #16
    a888:	and	x0, x19, #0x3ff
    a88c:	ubfx	x2, x19, #10, #5
    a890:	ubfx	x19, x19, #15, #1
    a894:	cmp	x2, #0xe
    a898:	b.gt	a8c0 <__trunctfdf2@@GCC_3.0+0x65c>
    a89c:	cbnz	x2, a930 <__trunctfdf2@@GCC_3.0+0x6cc>
    a8a0:	cbnz	x0, a930 <__trunctfdf2@@GCC_3.0+0x6cc>
    a8a4:	mov	x20, #0x0                   	// #0
    a8a8:	mov	x19, #0x0                   	// #0
    a8ac:	mov	x0, x20
    a8b0:	mov	x1, x19
    a8b4:	ldp	x19, x20, [sp, #16]
    a8b8:	ldp	x29, x30, [sp], #32
    a8bc:	ret
    a8c0:	cmp	x2, #0x1e
    a8c4:	cset	w3, gt
    a8c8:	orr	w3, w19, w3
    a8cc:	cbz	w3, a8e8 <__trunctfdf2@@GCC_3.0+0x684>
    a8d0:	eor	w19, w19, #0x1
    a8d4:	mov	w0, #0x1                   	// #1
    a8d8:	sbfx	x20, x19, #0, #1
    a8dc:	mov	x19, x20
    a8e0:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    a8e4:	b	a8ac <__trunctfdf2@@GCC_3.0+0x648>
    a8e8:	orr	x0, x0, #0x400
    a8ec:	cmp	x2, #0x18
    a8f0:	b.le	a90c <__trunctfdf2@@GCC_3.0+0x6a8>
    a8f4:	sub	w2, w2, #0x19
    a8f8:	mov	x1, #0x0                   	// #0
    a8fc:	bl	2ce0 <__ashlti3@plt>
    a900:	mov	x20, x0
    a904:	mov	x19, x1
    a908:	b	a8ac <__trunctfdf2@@GCC_3.0+0x648>
    a90c:	mov	w20, #0x19                  	// #25
    a910:	sub	w20, w20, w2
    a914:	add	w2, w2, #0x27
    a918:	mov	x19, #0x0                   	// #0
    a91c:	lsr	x20, x0, x20
    a920:	lsl	x0, x0, x2
    a924:	cbz	x0, a8ac <__trunctfdf2@@GCC_3.0+0x648>
    a928:	mov	w0, #0x10                  	// #16
    a92c:	b	a8e0 <__trunctfdf2@@GCC_3.0+0x67c>
    a930:	mov	w0, #0x10                  	// #16
    a934:	mov	x20, #0x0                   	// #0
    a938:	mov	x19, #0x0                   	// #0
    a93c:	b	a8e0 <__trunctfdf2@@GCC_3.0+0x67c>
    a940:	stp	x29, x30, [sp, #-80]!
    a944:	mov	x29, sp
    a948:	stp	x19, x20, [sp, #16]
    a94c:	mov	x19, x0
    a950:	stp	x21, x22, [sp, #32]
    a954:	stp	x23, x24, [sp, #48]
    a958:	stp	x25, x26, [sp, #64]
    a95c:	mrs	x25, fpcr
    a960:	orr	x0, x0, x1
    a964:	cbz	x0, ab8c <__trunctfdf2@@GCC_3.0+0x928>
    a968:	mov	x21, x1
    a96c:	mov	x23, x1
    a970:	lsr	x24, x1, #63
    a974:	tbz	x1, #63, a980 <__trunctfdf2@@GCC_3.0+0x71c>
    a978:	negs	x19, x19
    a97c:	ngc	x23, x1
    a980:	clz	x1, x19
    a984:	clz	x22, x23
    a988:	cmp	x23, #0x0
    a98c:	add	w1, w1, #0x40
    a990:	csel	w0, w1, w22, eq  // eq = none
    a994:	mov	w22, #0x8e                  	// #142
    a998:	sub	w22, w22, w0
    a99c:	cmp	w22, #0x1e
    a9a0:	b.le	a9f0 <__trunctfdf2@@GCC_3.0+0x78c>
    a9a4:	ands	x2, x25, #0xc00000
    a9a8:	b.eq	ab10 <__trunctfdf2@@GCC_3.0+0x8ac>  // b.none
    a9ac:	cmp	x2, #0x400, lsl #12
    a9b0:	b.ne	a9d0 <__trunctfdf2@@GCC_3.0+0x76c>  // b.any
    a9b4:	cmp	x21, #0x0
    a9b8:	mov	x20, #0x1f                  	// #31
    a9bc:	mov	x0, #0x1e                  	// #30
    a9c0:	csetm	x2, lt  // lt = tstop
    a9c4:	csel	x20, x20, x0, ge  // ge = tcont
    a9c8:	mov	w0, #0x14                  	// #20
    a9cc:	b	aa78 <__trunctfdf2@@GCC_3.0+0x814>
    a9d0:	cmp	x2, #0x800, lsl #12
    a9d4:	b.ne	ab18 <__trunctfdf2@@GCC_3.0+0x8b4>  // b.any
    a9d8:	cmp	x21, #0x0
    a9dc:	mov	x20, #0x1f                  	// #31
    a9e0:	mov	x0, #0x1e                  	// #30
    a9e4:	csetm	x2, ge  // ge = tcont
    a9e8:	csel	x20, x20, x0, lt  // lt = tstop
    a9ec:	b	a9c8 <__trunctfdf2@@GCC_3.0+0x764>
    a9f0:	sxtw	x20, w22
    a9f4:	cmp	w22, #0x19
    a9f8:	b.gt	aa18 <__trunctfdf2@@GCC_3.0+0x7b4>
    a9fc:	cmp	x20, #0x19
    aa00:	b.eq	aa10 <__trunctfdf2@@GCC_3.0+0x7ac>  // b.none
    aa04:	mov	w0, #0x19                  	// #25
    aa08:	sub	w22, w0, w22
    aa0c:	lsl	x19, x19, x22
    aa10:	mov	w0, #0x0                   	// #0
    aa14:	b	aad8 <__trunctfdf2@@GCC_3.0+0x874>
    aa18:	cmp	x20, #0x1c
    aa1c:	b.le	aa58 <__trunctfdf2@@GCC_3.0+0x7f4>
    aa20:	sub	w2, w22, #0x1c
    aa24:	mov	x0, x19
    aa28:	mov	x1, x23
    aa2c:	bl	2b70 <__lshrti3@plt>
    aa30:	mov	x1, x23
    aa34:	mov	x26, x0
    aa38:	mov	w2, #0x9c                  	// #156
    aa3c:	mov	x0, x19
    aa40:	sub	w2, w2, w22
    aa44:	bl	2ce0 <__ashlti3@plt>
    aa48:	orr	x0, x0, x1
    aa4c:	cmp	x0, #0x0
    aa50:	cset	x19, ne  // ne = any
    aa54:	orr	x19, x19, x26
    aa58:	mov	x0, #0x1c                  	// #28
    aa5c:	sub	x1, x0, x20
    aa60:	cmp	x1, #0x0
    aa64:	b.le	aa70 <__trunctfdf2@@GCC_3.0+0x80c>
    aa68:	sub	w22, w0, w22
    aa6c:	lsl	x19, x19, x22
    aa70:	and	x2, x19, #0xffffffffffffdfff
    aa74:	mov	w0, #0x0                   	// #0
    aa78:	tst	x2, #0x7
    aa7c:	b.eq	aaac <__trunctfdf2@@GCC_3.0+0x848>  // b.none
    aa80:	and	x1, x25, #0xc00000
    aa84:	orr	w0, w0, #0x10
    aa88:	cmp	x1, #0x400, lsl #12
    aa8c:	b.eq	ab24 <__trunctfdf2@@GCC_3.0+0x8c0>  // b.none
    aa90:	cmp	x1, #0x800, lsl #12
    aa94:	b.eq	ab30 <__trunctfdf2@@GCC_3.0+0x8cc>  // b.none
    aa98:	cbnz	x1, aaac <__trunctfdf2@@GCC_3.0+0x848>
    aa9c:	and	x1, x2, #0xf
    aaa0:	cmp	x1, #0x4
    aaa4:	b.eq	aaac <__trunctfdf2@@GCC_3.0+0x848>  // b.none
    aaa8:	add	x2, x2, #0x4
    aaac:	tbz	w2, #13, aac0 <__trunctfdf2@@GCC_3.0+0x85c>
    aab0:	add	x20, x20, #0x1
    aab4:	cmp	x20, #0x1f
    aab8:	b.eq	ab38 <__trunctfdf2@@GCC_3.0+0x8d4>  // b.none
    aabc:	and	x2, x2, #0xffffffffffffdfff
    aac0:	lsr	x19, x2, #3
    aac4:	cmp	x19, #0x0
    aac8:	mov	x1, x19
    aacc:	ccmp	x20, #0x1f, #0x0, ne  // ne = any
    aad0:	orr	x19, x19, #0x200
    aad4:	csel	x19, x19, x1, eq  // eq = none
    aad8:	and	x20, x20, #0x1f
    aadc:	and	x19, x19, #0x3ff
    aae0:	orr	w19, w19, w20, lsl #10
    aae4:	orr	w19, w19, w24, lsl #15
    aae8:	sxth	x19, w19
    aaec:	cbz	w0, aaf4 <__trunctfdf2@@GCC_3.0+0x890>
    aaf0:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    aaf4:	dup	v0.4h, w19
    aaf8:	ldp	x19, x20, [sp, #16]
    aafc:	ldp	x21, x22, [sp, #32]
    ab00:	ldp	x23, x24, [sp, #48]
    ab04:	ldp	x25, x26, [sp, #64]
    ab08:	ldp	x29, x30, [sp], #80
    ab0c:	ret
    ab10:	mov	x20, #0x1f                  	// #31
    ab14:	b	a9c8 <__trunctfdf2@@GCC_3.0+0x764>
    ab18:	mov	x2, #0xffffffffffffffff    	// #-1
    ab1c:	mov	x20, #0x1e                  	// #30
    ab20:	b	a9c8 <__trunctfdf2@@GCC_3.0+0x764>
    ab24:	tbnz	x21, #63, aaac <__trunctfdf2@@GCC_3.0+0x848>
    ab28:	add	x2, x2, #0x8
    ab2c:	b	aaac <__trunctfdf2@@GCC_3.0+0x848>
    ab30:	tbz	x21, #63, aaac <__trunctfdf2@@GCC_3.0+0x848>
    ab34:	b	ab28 <__trunctfdf2@@GCC_3.0+0x8c4>
    ab38:	ands	x2, x25, #0xc00000
    ab3c:	b.eq	ab78 <__trunctfdf2@@GCC_3.0+0x914>  // b.none
    ab40:	cmp	x2, #0x400, lsl #12
    ab44:	b.ne	ab60 <__trunctfdf2@@GCC_3.0+0x8fc>  // b.any
    ab48:	cmp	x21, #0x0
    ab4c:	mov	x1, #0x1e                  	// #30
    ab50:	csetm	x2, lt  // lt = tstop
    ab54:	csel	x20, x20, x1, ge  // ge = tcont
    ab58:	mov	w0, #0x14                  	// #20
    ab5c:	b	aac0 <__trunctfdf2@@GCC_3.0+0x85c>
    ab60:	cmp	x2, #0x800, lsl #12
    ab64:	b.ne	ab80 <__trunctfdf2@@GCC_3.0+0x91c>  // b.any
    ab68:	cmp	x21, #0x0
    ab6c:	mov	x0, #0x1e                  	// #30
    ab70:	csetm	x2, ge  // ge = tcont
    ab74:	csel	x20, x20, x0, lt  // lt = tstop
    ab78:	mov	w0, #0x14                  	// #20
    ab7c:	b	aac0 <__trunctfdf2@@GCC_3.0+0x85c>
    ab80:	mov	x2, #0xffffffffffffffff    	// #-1
    ab84:	mov	x20, #0x1e                  	// #30
    ab88:	b	ab78 <__trunctfdf2@@GCC_3.0+0x914>
    ab8c:	mov	x19, #0x0                   	// #0
    ab90:	mov	x20, #0x0                   	// #0
    ab94:	mov	x24, #0x0                   	// #0
    ab98:	b	aa10 <__trunctfdf2@@GCC_3.0+0x7ac>
    ab9c:	stp	x29, x30, [sp, #-64]!
    aba0:	mov	x29, sp
    aba4:	stp	x19, x20, [sp, #16]
    aba8:	stp	x21, x22, [sp, #32]
    abac:	stp	x23, x24, [sp, #48]
    abb0:	mrs	x22, fpcr
    abb4:	orr	x2, x0, x1
    abb8:	cbz	x2, ad40 <__trunctfdf2@@GCC_3.0+0xadc>
    abbc:	clz	x3, x0
    abc0:	clz	x21, x1
    abc4:	cmp	x1, #0x0
    abc8:	add	w3, w3, #0x40
    abcc:	csel	w2, w3, w21, eq  // eq = none
    abd0:	mov	w21, #0x8e                  	// #142
    abd4:	sub	w21, w21, w2
    abd8:	mov	x19, x0
    abdc:	mov	x23, x1
    abe0:	cmp	w21, #0x1e
    abe4:	b.le	ac08 <__trunctfdf2@@GCC_3.0+0x9a4>
    abe8:	ands	x1, x22, #0xc00000
    abec:	b.eq	ad04 <__trunctfdf2@@GCC_3.0+0xaa0>  // b.none
    abf0:	cmp	x1, #0x400, lsl #12
    abf4:	b.eq	ad00 <__trunctfdf2@@GCC_3.0+0xa9c>  // b.none
    abf8:	mov	x1, #0xffffffffffffffff    	// #-1
    abfc:	mov	x20, #0x1e                  	// #30
    ac00:	mov	w0, #0x14                  	// #20
    ac04:	b	ac8c <__trunctfdf2@@GCC_3.0+0xa28>
    ac08:	sxtw	x20, w21
    ac0c:	cmp	w21, #0x19
    ac10:	b.gt	ac34 <__trunctfdf2@@GCC_3.0+0x9d0>
    ac14:	mov	x1, x0
    ac18:	cmp	x20, #0x19
    ac1c:	b.eq	ac2c <__trunctfdf2@@GCC_3.0+0x9c8>  // b.none
    ac20:	mov	w0, #0x19                  	// #25
    ac24:	sub	w21, w0, w21
    ac28:	lsl	x1, x19, x21
    ac2c:	mov	w0, #0x0                   	// #0
    ac30:	b	acd4 <__trunctfdf2@@GCC_3.0+0xa70>
    ac34:	cmp	x20, #0x1c
    ac38:	b.le	ac68 <__trunctfdf2@@GCC_3.0+0xa04>
    ac3c:	mov	w2, #0x9c                  	// #156
    ac40:	sub	w2, w2, w21
    ac44:	bl	2ce0 <__ashlti3@plt>
    ac48:	orr	x0, x0, x1
    ac4c:	cmp	x0, #0x0
    ac50:	sub	w2, w21, #0x1c
    ac54:	cset	x24, ne  // ne = any
    ac58:	mov	x0, x19
    ac5c:	mov	x1, x23
    ac60:	bl	2b70 <__lshrti3@plt>
    ac64:	orr	x19, x24, x0
    ac68:	mov	x0, #0x1c                  	// #28
    ac6c:	sub	x2, x0, x20
    ac70:	mov	x1, x19
    ac74:	cmp	x2, #0x0
    ac78:	b.le	ac84 <__trunctfdf2@@GCC_3.0+0xa20>
    ac7c:	sub	w21, w0, w21
    ac80:	lsl	x1, x19, x21
    ac84:	and	x1, x1, #0xffffffffffffdfff
    ac88:	mov	w0, #0x0                   	// #0
    ac8c:	tst	x1, #0x7
    ac90:	b.eq	aca8 <__trunctfdf2@@GCC_3.0+0xa44>  // b.none
    ac94:	orr	w0, w0, #0x10
    ac98:	ands	x2, x22, #0xc00000
    ac9c:	b.eq	ad0c <__trunctfdf2@@GCC_3.0+0xaa8>  // b.none
    aca0:	cmp	x2, #0x400, lsl #12
    aca4:	b.eq	ad20 <__trunctfdf2@@GCC_3.0+0xabc>  // b.none
    aca8:	tbz	w1, #13, acbc <__trunctfdf2@@GCC_3.0+0xa58>
    acac:	add	x20, x20, #0x1
    acb0:	cmp	x20, #0x1f
    acb4:	b.eq	ad28 <__trunctfdf2@@GCC_3.0+0xac4>  // b.none
    acb8:	and	x1, x1, #0xffffffffffffdfff
    acbc:	lsr	x1, x1, #3
    acc0:	cmp	x1, #0x0
    acc4:	mov	x2, x1
    acc8:	ccmp	x20, #0x1f, #0x0, ne  // ne = any
    accc:	orr	x1, x1, #0x200
    acd0:	csel	x1, x1, x2, eq  // eq = none
    acd4:	and	x20, x20, #0x1f
    acd8:	and	x1, x1, #0x3ff
    acdc:	orr	x20, x1, x20, lsl #10
    ace0:	cbz	w0, ace8 <__trunctfdf2@@GCC_3.0+0xa84>
    ace4:	bl	6a24 <__udivmodti4@@GCC_3.0+0x42c>
    ace8:	dup	v0.4h, w20
    acec:	ldp	x19, x20, [sp, #16]
    acf0:	ldp	x21, x22, [sp, #32]
    acf4:	ldp	x23, x24, [sp, #48]
    acf8:	ldp	x29, x30, [sp], #64
    acfc:	ret
    ad00:	mov	x1, #0x0                   	// #0
    ad04:	mov	x20, #0x1f                  	// #31
    ad08:	b	ac00 <__trunctfdf2@@GCC_3.0+0x99c>
    ad0c:	and	x2, x1, #0xf
    ad10:	cmp	x2, #0x4
    ad14:	b.eq	aca8 <__trunctfdf2@@GCC_3.0+0xa44>  // b.none
    ad18:	add	x1, x1, #0x4
    ad1c:	b	aca8 <__trunctfdf2@@GCC_3.0+0xa44>
    ad20:	add	x1, x1, #0x8
    ad24:	b	aca8 <__trunctfdf2@@GCC_3.0+0xa44>
    ad28:	and	x1, x22, #0x800000
    ad2c:	tbz	w22, #23, ad38 <__trunctfdf2@@GCC_3.0+0xad4>
    ad30:	mov	x1, #0xffffffffffffffff    	// #-1
    ad34:	mov	x20, #0x1e                  	// #30
    ad38:	mov	w0, #0x14                  	// #20
    ad3c:	b	acbc <__trunctfdf2@@GCC_3.0+0xa58>
    ad40:	mov	x1, #0x0                   	// #0
    ad44:	mov	x20, #0x0                   	// #0
    ad48:	b	ac2c <__trunctfdf2@@GCC_3.0+0x9c8>

000000000000ad4c <__enable_execute_stack@@GCC_3.4.2>:
    ad4c:	ret
    ad50:	mov	x2, #0x0                   	// #0
    ad54:	mov	w3, #0x0                   	// #0
    ad58:	ldrb	w5, [x0], #1
    ad5c:	and	x4, x5, #0x7f
    ad60:	lsl	x4, x4, x3
    ad64:	add	w3, w3, #0x7
    ad68:	orr	x2, x2, x4
    ad6c:	tbnz	w5, #7, ad58 <__enable_execute_stack@@GCC_3.4.2+0xc>
    ad70:	str	x2, [x1]
    ad74:	ret
    ad78:	mov	x2, #0x0                   	// #0
    ad7c:	mov	w3, #0x0                   	// #0
    ad80:	ldrb	w4, [x0], #1
    ad84:	and	x5, x4, #0x7f
    ad88:	lsl	x5, x5, x3
    ad8c:	add	w3, w3, #0x7
    ad90:	orr	x2, x2, x5
    ad94:	tbnz	w4, #7, ad80 <__enable_execute_stack@@GCC_3.4.2+0x34>
    ad98:	cmp	w3, #0x3f
    ad9c:	b.hi	adb0 <__enable_execute_stack@@GCC_3.4.2+0x64>  // b.pmore
    ada0:	tbz	w4, #6, adb0 <__enable_execute_stack@@GCC_3.4.2+0x64>
    ada4:	mov	x4, #0xffffffffffffffff    	// #-1
    ada8:	lsl	x3, x4, x3
    adac:	orr	x2, x2, x3
    adb0:	str	x2, [x1]
    adb4:	ret
    adb8:	ldr	x2, [x0, #832]
    adbc:	sxtw	x1, w1
    adc0:	tbz	x2, #62, add8 <__enable_execute_stack@@GCC_3.4.2+0x8c>
    adc4:	add	x2, x0, x1
    adc8:	ldrb	w2, [x2, #856]
    adcc:	cbz	w2, add8 <__enable_execute_stack@@GCC_3.4.2+0x8c>
    add0:	add	x0, x0, x1, lsl #3
    add4:	ret
    add8:	ldr	x0, [x0, x1, lsl #3]
    addc:	b	add4 <__enable_execute_stack@@GCC_3.4.2+0x88>
    ade0:	adrp	x2, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    ade4:	add	x1, x2, #0x1d4
    ade8:	mov	w0, #0x8                   	// #8
    adec:	strb	w0, [x2, #468]
    adf0:	strb	w0, [x1, #1]
    adf4:	strb	w0, [x1, #2]
    adf8:	strb	w0, [x1, #3]
    adfc:	strb	w0, [x1, #4]
    ae00:	strb	w0, [x1, #5]
    ae04:	strb	w0, [x1, #6]
    ae08:	strb	w0, [x1, #7]
    ae0c:	strb	w0, [x1, #8]
    ae10:	strb	w0, [x1, #9]
    ae14:	strb	w0, [x1, #10]
    ae18:	strb	w0, [x1, #11]
    ae1c:	strb	w0, [x1, #12]
    ae20:	strb	w0, [x1, #13]
    ae24:	strb	w0, [x1, #14]
    ae28:	strb	w0, [x1, #15]
    ae2c:	strb	w0, [x1, #16]
    ae30:	strb	w0, [x1, #17]
    ae34:	strb	w0, [x1, #18]
    ae38:	strb	w0, [x1, #19]
    ae3c:	strb	w0, [x1, #20]
    ae40:	strb	w0, [x1, #21]
    ae44:	strb	w0, [x1, #22]
    ae48:	strb	w0, [x1, #23]
    ae4c:	strb	w0, [x1, #24]
    ae50:	strb	w0, [x1, #25]
    ae54:	strb	w0, [x1, #26]
    ae58:	strb	w0, [x1, #27]
    ae5c:	strb	w0, [x1, #28]
    ae60:	strb	w0, [x1, #29]
    ae64:	strb	w0, [x1, #30]
    ae68:	strb	w0, [x1, #31]
    ae6c:	strb	w0, [x1, #64]
    ae70:	strb	w0, [x1, #46]
    ae74:	strb	w0, [x1, #65]
    ae78:	strb	w0, [x1, #66]
    ae7c:	strb	w0, [x1, #67]
    ae80:	strb	w0, [x1, #68]
    ae84:	strb	w0, [x1, #69]
    ae88:	strb	w0, [x1, #70]
    ae8c:	strb	w0, [x1, #71]
    ae90:	strb	w0, [x1, #72]
    ae94:	strb	w0, [x1, #73]
    ae98:	strb	w0, [x1, #74]
    ae9c:	strb	w0, [x1, #75]
    aea0:	strb	w0, [x1, #76]
    aea4:	strb	w0, [x1, #77]
    aea8:	strb	w0, [x1, #78]
    aeac:	strb	w0, [x1, #79]
    aeb0:	strb	w0, [x1, #80]
    aeb4:	strb	w0, [x1, #81]
    aeb8:	strb	w0, [x1, #82]
    aebc:	strb	w0, [x1, #83]
    aec0:	strb	w0, [x1, #84]
    aec4:	strb	w0, [x1, #85]
    aec8:	strb	w0, [x1, #86]
    aecc:	strb	w0, [x1, #87]
    aed0:	strb	w0, [x1, #88]
    aed4:	strb	w0, [x1, #89]
    aed8:	strb	w0, [x1, #90]
    aedc:	strb	w0, [x1, #91]
    aee0:	strb	w0, [x1, #92]
    aee4:	strb	w0, [x1, #93]
    aee8:	strb	w0, [x1, #94]
    aeec:	strb	w0, [x1, #95]
    aef0:	strb	w0, [x1, #48]
    aef4:	strb	w0, [x1, #49]
    aef8:	strb	w0, [x1, #50]
    aefc:	strb	w0, [x1, #51]
    af00:	strb	w0, [x1, #52]
    af04:	strb	w0, [x1, #53]
    af08:	strb	w0, [x1, #54]
    af0c:	strb	w0, [x1, #55]
    af10:	strb	w0, [x1, #56]
    af14:	strb	w0, [x1, #57]
    af18:	strb	w0, [x1, #58]
    af1c:	strb	w0, [x1, #59]
    af20:	strb	w0, [x1, #60]
    af24:	strb	w0, [x1, #61]
    af28:	strb	w0, [x1, #62]
    af2c:	strb	w0, [x1, #63]
    af30:	strb	w0, [x1, #96]
    af34:	ret
    af38:	adrp	x3, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    af3c:	ldrb	w3, [x3, #499]
    af40:	cmp	w3, #0x8
    af44:	b.ne	af60 <__enable_execute_stack@@GCC_3.4.2+0x214>  // b.any
    af48:	str	x1, [x2]
    af4c:	ldr	x1, [x0, #832]
    af50:	tbz	x1, #62, af58 <__enable_execute_stack@@GCC_3.4.2+0x20c>
    af54:	strb	wzr, [x0, #887]
    af58:	str	x2, [x0, #248]
    af5c:	ret
    af60:	stp	x29, x30, [sp, #-16]!
    af64:	mov	x29, sp
    af68:	bl	2c90 <abort@plt>

000000000000af6c <_Unwind_GetGR@@GCC_3.0>:
    af6c:	cmp	w1, #0x61
    af70:	b.le	af80 <_Unwind_GetGR@@GCC_3.0+0x14>
    af74:	stp	x29, x30, [sp, #-16]!
    af78:	mov	x29, sp
    af7c:	bl	2c90 <abort@plt>
    af80:	mov	x2, x0
    af84:	sxtw	x3, w1
    af88:	ldr	x4, [x2, #832]
    af8c:	ldr	x0, [x0, x3, lsl #3]
    af90:	tbz	x4, #62, afa0 <_Unwind_GetGR@@GCC_3.0+0x34>
    af94:	add	x2, x2, x3
    af98:	ldrb	w2, [x2, #856]
    af9c:	cbnz	w2, afcc <_Unwind_GetGR@@GCC_3.0+0x60>
    afa0:	cmp	w1, #0x2e
    afa4:	b.ne	afb4 <_Unwind_GetGR@@GCC_3.0+0x48>  // b.any
    afa8:	cntd	x0
    afac:	sxtw	x0, w0
    afb0:	ret
    afb4:	adrp	x1, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    afb8:	add	x1, x1, #0x1d4
    afbc:	ldrb	w1, [x1, x3]
    afc0:	cmp	w1, #0x8
    afc4:	b.ne	af74 <_Unwind_GetGR@@GCC_3.0+0x8>  // b.any
    afc8:	ldr	x0, [x0]
    afcc:	ret
    afd0:	stp	x29, x30, [sp, #-80]!
    afd4:	mov	x29, sp
    afd8:	stp	x19, x20, [sp, #16]
    afdc:	mov	x19, x1
    afe0:	mov	w1, #0x1f                  	// #31
    afe4:	stp	x21, x22, [sp, #32]
    afe8:	mov	x21, x0
    afec:	mov	x0, x19
    aff0:	stp	x23, x24, [sp, #48]
    aff4:	bl	adb8 <__enable_execute_stack@@GCC_3.4.2+0x6c>
    aff8:	cbnz	x0, b00c <_Unwind_GetGR@@GCC_3.0+0xa0>
    affc:	ldr	x1, [x19, #784]
    b000:	add	x2, sp, #0x48
    b004:	mov	x0, x19
    b008:	bl	af38 <__enable_execute_stack@@GCC_3.4.2+0x1ec>
    b00c:	adrp	x22, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    b010:	add	x23, x21, #0x358
    b014:	add	x22, x22, #0x1d4
    b018:	add	x24, x19, #0x358
    b01c:	mov	x20, #0x0                   	// #0
    b020:	ldrb	w2, [x23, x20]
    b024:	ldr	x0, [x21, x20, lsl #3]
    b028:	ldr	x1, [x19, x20, lsl #3]
    b02c:	cbz	w2, b034 <_Unwind_GetGR@@GCC_3.0+0xc8>
    b030:	bl	2c90 <abort@plt>
    b034:	ldrb	w2, [x24, x20]
    b038:	cbz	w2, b0a8 <_Unwind_GetGR@@GCC_3.0+0x13c>
    b03c:	cbz	x0, b050 <_Unwind_GetGR@@GCC_3.0+0xe4>
    b040:	ldrb	w2, [x22]
    b044:	cmp	w2, #0x8
    b048:	b.ne	b030 <_Unwind_GetGR@@GCC_3.0+0xc4>  // b.any
    b04c:	str	x1, [x0]
    b050:	add	x20, x20, #0x1
    b054:	add	x22, x22, #0x1
    b058:	cmp	x20, #0x61
    b05c:	b.ne	b020 <_Unwind_GetGR@@GCC_3.0+0xb4>  // b.any
    b060:	mov	w1, #0x1f                  	// #31
    b064:	mov	x0, x21
    b068:	bl	adb8 <__enable_execute_stack@@GCC_3.4.2+0x6c>
    b06c:	mov	x1, #0x0                   	// #0
    b070:	cbnz	x0, b090 <_Unwind_GetGR@@GCC_3.0+0x124>
    b074:	mov	w1, #0x1f                  	// #31
    b078:	mov	x0, x19
    b07c:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    b080:	ldr	x1, [x21, #784]
    b084:	sub	x1, x0, x1
    b088:	ldr	x0, [x19, #848]
    b08c:	add	x1, x1, x0
    b090:	mov	x0, x1
    b094:	ldp	x19, x20, [sp, #16]
    b098:	ldp	x21, x22, [sp, #32]
    b09c:	ldp	x23, x24, [sp, #48]
    b0a0:	ldp	x29, x30, [sp], #80
    b0a4:	ret
    b0a8:	cmp	x1, #0x0
    b0ac:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b0b0:	b.eq	b050 <_Unwind_GetGR@@GCC_3.0+0xe4>  // b.none
    b0b4:	cmp	x0, x1
    b0b8:	b.eq	b050 <_Unwind_GetGR@@GCC_3.0+0xe4>  // b.none
    b0bc:	ldrb	w2, [x22]
    b0c0:	bl	2ad0 <memcpy@plt>
    b0c4:	b	b050 <_Unwind_GetGR@@GCC_3.0+0xe4>

000000000000b0c8 <_Unwind_GetCFA@@GCC_3.3>:
    b0c8:	ldr	x0, [x0, #784]
    b0cc:	ret

000000000000b0d0 <_Unwind_SetGR@@GCC_3.0>:
    b0d0:	cmp	w1, #0x61
    b0d4:	b.le	b0e4 <_Unwind_SetGR@@GCC_3.0+0x14>
    b0d8:	stp	x29, x30, [sp, #-16]!
    b0dc:	mov	x29, sp
    b0e0:	bl	2c90 <abort@plt>
    b0e4:	adrp	x4, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    b0e8:	add	x4, x4, #0x1d4
    b0ec:	sxtw	x3, w1
    b0f0:	ldrb	w1, [x4, w1, sxtw]
    b0f4:	ldr	x4, [x0, #832]
    b0f8:	tbz	x4, #62, b110 <_Unwind_SetGR@@GCC_3.0+0x40>
    b0fc:	add	x4, x0, x3
    b100:	ldrb	w4, [x4, #856]
    b104:	cbz	w4, b110 <_Unwind_SetGR@@GCC_3.0+0x40>
    b108:	str	x2, [x0, x3, lsl #3]
    b10c:	ret
    b110:	cmp	w1, #0x8
    b114:	ldr	x0, [x0, x3, lsl #3]
    b118:	b.ne	b0d8 <_Unwind_SetGR@@GCC_3.0+0x8>  // b.any
    b11c:	str	x2, [x0]
    b120:	ret

000000000000b124 <_Unwind_GetIP@@GCC_3.0>:
    b124:	ldr	x0, [x0, #792]
    b128:	ret

000000000000b12c <_Unwind_GetIPInfo@@GCC_4.2.0>:
    b12c:	ldr	x2, [x0, #832]
    b130:	ldr	x0, [x0, #792]
    b134:	lsr	x2, x2, #63
    b138:	str	w2, [x1]
    b13c:	ret

000000000000b140 <_Unwind_SetIP@@GCC_3.0>:
    b140:	str	x1, [x0, #792]
    b144:	ret

000000000000b148 <_Unwind_GetLanguageSpecificData@@GCC_3.0>:
    b148:	ldr	x0, [x0, #800]
    b14c:	ret

000000000000b150 <_Unwind_GetRegionStart@@GCC_3.0>:
    b150:	ldr	x0, [x0, #824]
    b154:	ret

000000000000b158 <_Unwind_FindEnclosingFunction@@GCC_3.3>:
    b158:	stp	x29, x30, [sp, #-48]!
    b15c:	sub	x0, x0, #0x1
    b160:	mov	x29, sp
    b164:	add	x1, sp, #0x18
    b168:	bl	2d00 <_Unwind_Find_FDE@plt>
    b16c:	cbz	x0, b174 <_Unwind_FindEnclosingFunction@@GCC_3.3+0x1c>
    b170:	ldr	x0, [sp, #40]
    b174:	ldp	x29, x30, [sp], #48
    b178:	ret

000000000000b17c <_Unwind_GetDataRelBase@@GCC_3.0>:
    b17c:	ldr	x0, [x0, #816]
    b180:	ret

000000000000b184 <_Unwind_GetTextRelBase@@GCC_3.0>:
    b184:	ldr	x0, [x0, #808]
    b188:	ret
    b18c:	stp	x29, x30, [sp, #-64]!
    b190:	mov	x29, sp
    b194:	stp	x19, x20, [sp, #16]
    b198:	and	w20, w1, #0xff
    b19c:	cmp	w20, #0xff
    b1a0:	stp	x21, x22, [sp, #32]
    b1a4:	b.eq	b1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x50>  // b.none
    b1a8:	and	w22, w20, #0x70
    b1ac:	mov	x19, x2
    b1b0:	mov	x21, x3
    b1b4:	cmp	w22, #0x30
    b1b8:	b.eq	b220 <_Unwind_GetTextRelBase@@GCC_3.0+0x9c>  // b.none
    b1bc:	b.hi	b1d8 <_Unwind_GetTextRelBase@@GCC_3.0+0x54>  // b.pmore
    b1c0:	cmp	w22, #0x20
    b1c4:	b.eq	b214 <_Unwind_GetTextRelBase@@GCC_3.0+0x90>  // b.none
    b1c8:	b.hi	b1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x50>  // b.pmore
    b1cc:	tst	w20, #0x60
    b1d0:	b.eq	b230 <_Unwind_GetTextRelBase@@GCC_3.0+0xac>  // b.none
    b1d4:	bl	2c90 <abort@plt>
    b1d8:	cmp	w22, #0x40
    b1dc:	b.eq	b228 <_Unwind_GetTextRelBase@@GCC_3.0+0xa4>  // b.none
    b1e0:	cmp	w22, #0x50
    b1e4:	mov	x6, #0x0                   	// #0
    b1e8:	b.ne	b1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x50>  // b.any
    b1ec:	cmp	w20, #0x50
    b1f0:	b.ne	b238 <_Unwind_GetTextRelBase@@GCC_3.0+0xb4>  // b.any
    b1f4:	add	x0, x19, #0x7
    b1f8:	and	x0, x0, #0xfffffffffffffff8
    b1fc:	ldr	x1, [x0], #8
    b200:	ldp	x19, x20, [sp, #16]
    b204:	str	x1, [x21]
    b208:	ldp	x21, x22, [sp, #32]
    b20c:	ldp	x29, x30, [sp], #64
    b210:	ret
    b214:	bl	2b90 <_Unwind_GetTextRelBase@plt>
    b218:	mov	x6, x0
    b21c:	b	b1ec <_Unwind_GetTextRelBase@@GCC_3.0+0x68>
    b220:	bl	2df0 <_Unwind_GetDataRelBase@plt>
    b224:	b	b218 <_Unwind_GetTextRelBase@@GCC_3.0+0x94>
    b228:	bl	2ae0 <_Unwind_GetRegionStart@plt>
    b22c:	b	b218 <_Unwind_GetTextRelBase@@GCC_3.0+0x94>
    b230:	mov	x6, #0x0                   	// #0
    b234:	b	b1ec <_Unwind_GetTextRelBase@@GCC_3.0+0x68>
    b238:	and	w1, w20, #0xf
    b23c:	cmp	w1, #0xc
    b240:	b.hi	b1d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x50>  // b.pmore
    b244:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    b248:	add	x0, x0, #0xca0
    b24c:	ldrb	w0, [x0, w1, uxtw]
    b250:	adr	x1, b25c <_Unwind_GetTextRelBase@@GCC_3.0+0xd8>
    b254:	add	x0, x1, w0, sxtb #2
    b258:	br	x0
    b25c:	add	x1, sp, #0x38
    b260:	mov	x0, x19
    b264:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b268:	ldr	x1, [sp, #56]
    b26c:	cbz	x1, b200 <_Unwind_GetTextRelBase@@GCC_3.0+0x7c>
    b270:	cmp	w22, #0x10
    b274:	csel	x6, x19, x6, eq  // eq = none
    b278:	add	x1, x1, x6
    b27c:	tbz	w20, #7, b200 <_Unwind_GetTextRelBase@@GCC_3.0+0x7c>
    b280:	ldr	x1, [x1]
    b284:	b	b200 <_Unwind_GetTextRelBase@@GCC_3.0+0x7c>
    b288:	add	x1, sp, #0x38
    b28c:	mov	x0, x19
    b290:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b294:	b	b268 <_Unwind_GetTextRelBase@@GCC_3.0+0xe4>
    b298:	mov	x0, x19
    b29c:	ldrh	w1, [x0], #2
    b2a0:	b	b26c <_Unwind_GetTextRelBase@@GCC_3.0+0xe8>
    b2a4:	mov	x0, x19
    b2a8:	ldr	w1, [x0], #4
    b2ac:	b	b26c <_Unwind_GetTextRelBase@@GCC_3.0+0xe8>
    b2b0:	mov	x0, x19
    b2b4:	ldrsh	x1, [x0], #2
    b2b8:	b	b26c <_Unwind_GetTextRelBase@@GCC_3.0+0xe8>
    b2bc:	mov	x0, x19
    b2c0:	ldrsw	x1, [x0], #4
    b2c4:	b	b26c <_Unwind_GetTextRelBase@@GCC_3.0+0xe8>
    b2c8:	mov	x0, x19
    b2cc:	ldr	x1, [x0], #8
    b2d0:	b	b26c <_Unwind_GetTextRelBase@@GCC_3.0+0xe8>
    b2d4:	stp	x29, x30, [sp, #-128]!
    b2d8:	mov	x29, sp
    b2dc:	stp	x19, x20, [sp, #16]
    b2e0:	mov	x20, x3
    b2e4:	stp	x21, x22, [sp, #32]
    b2e8:	add	x22, x29, #0x68
    b2ec:	add	x21, x29, #0x70
    b2f0:	stp	x23, x24, [sp, #48]
    b2f4:	mov	x23, x2
    b2f8:	mov	x24, #0x0                   	// #0
    b2fc:	stp	x25, x26, [sp, #64]
    b300:	mov	x26, x1
    b304:	add	x25, x29, #0x78
    b308:	stp	x27, x28, [sp, #80]
    b30c:	adrp	x27, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    b310:	add	x27, x27, #0xcb0
    b314:	str	xzr, [x3, #1568]
    b318:	cmp	x0, x26
    b31c:	b.cs	b338 <_Unwind_GetTextRelBase@@GCC_3.0+0x1b4>  // b.hs, b.nlast
    b320:	ldr	x3, [x23, #792]
    b324:	ldr	x2, [x23, #832]
    b328:	ldr	x1, [x20, #1608]
    b32c:	add	x2, x3, x2, lsr #63
    b330:	cmp	x1, x2
    b334:	b.cc	b358 <_Unwind_GetTextRelBase@@GCC_3.0+0x1d4>  // b.lo, b.ul, b.last
    b338:	mov	sp, x29
    b33c:	ldp	x19, x20, [sp, #16]
    b340:	ldp	x21, x22, [sp, #32]
    b344:	ldp	x23, x24, [sp, #48]
    b348:	ldp	x25, x26, [sp, #64]
    b34c:	ldp	x27, x28, [sp, #80]
    b350:	ldp	x29, x30, [sp], #128
    b354:	ret
    b358:	mov	x19, x0
    b35c:	ldrb	w3, [x19], #1
    b360:	and	w2, w3, #0xc0
    b364:	cmp	w2, #0x40
    b368:	b.ne	b384 <_Unwind_GetTextRelBase@@GCC_3.0+0x200>  // b.any
    b36c:	ldr	x0, [x20, #1632]
    b370:	and	x3, x3, #0x3f
    b374:	madd	x3, x3, x0, x1
    b378:	str	x3, [x20, #1608]
    b37c:	mov	x0, x19
    b380:	b	b318 <_Unwind_GetTextRelBase@@GCC_3.0+0x194>
    b384:	cmp	w2, #0x80
    b388:	b.ne	b3d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x250>  // b.any
    b38c:	mov	x1, x21
    b390:	mov	x0, x19
    b394:	and	x3, x3, #0x3f
    b398:	str	x3, [x29, #104]
    b39c:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b3a0:	mov	x19, x0
    b3a4:	ldr	x0, [x29, #112]
    b3a8:	ldr	x1, [x20, #1624]
    b3ac:	mul	x1, x1, x0
    b3b0:	ldr	x0, [x29, #104]
    b3b4:	cmp	x0, #0x61
    b3b8:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b3bc:	lsl	x2, x0, #4
    b3c0:	add	x0, x20, x0, lsl #4
    b3c4:	mov	w3, #0x1                   	// #1
    b3c8:	str	w3, [x0, #8]
    b3cc:	str	x1, [x20, x2]
    b3d0:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b3d4:	cmp	w2, #0xc0
    b3d8:	b.ne	b3ec <_Unwind_GetTextRelBase@@GCC_3.0+0x268>  // b.any
    b3dc:	ubfiz	x3, x3, #4, #6
    b3e0:	add	x3, x20, x3
    b3e4:	str	wzr, [x3, #8]
    b3e8:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b3ec:	cmp	w3, #0x2f
    b3f0:	b.hi	b7a8 <_Unwind_GetTextRelBase@@GCC_3.0+0x624>  // b.pmore
    b3f4:	ldrh	w2, [x27, w3, uxtw #1]
    b3f8:	adr	x3, b404 <_Unwind_GetTextRelBase@@GCC_3.0+0x280>
    b3fc:	add	x2, x3, w2, sxth #2
    b400:	br	x2
    b404:	ldrb	w1, [x20, #1648]
    b408:	mov	x2, x19
    b40c:	mov	x3, x25
    b410:	mov	x0, x23
    b414:	bl	b18c <_Unwind_GetTextRelBase@@GCC_3.0+0x8>
    b418:	mov	x19, x0
    b41c:	ldr	x0, [x29, #120]
    b420:	str	x0, [x20, #1608]
    b424:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b428:	ldrb	w3, [x0, #1]
    b42c:	add	x19, x0, #0x2
    b430:	ldr	x2, [x20, #1632]
    b434:	madd	x3, x3, x2, x1
    b438:	str	x3, [x20, #1608]
    b43c:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b440:	ldurh	w3, [x0, #1]
    b444:	add	x19, x0, #0x3
    b448:	ldr	x2, [x20, #1632]
    b44c:	madd	x3, x3, x2, x1
    b450:	str	x3, [x20, #1608]
    b454:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b458:	ldur	w3, [x0, #1]
    b45c:	add	x19, x0, #0x5
    b460:	ldr	x2, [x20, #1632]
    b464:	madd	x3, x3, x2, x1
    b468:	str	x3, [x20, #1608]
    b46c:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b470:	mov	x1, x22
    b474:	mov	x0, x19
    b478:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b47c:	mov	x1, x21
    b480:	b	b39c <_Unwind_GetTextRelBase@@GCC_3.0+0x218>
    b484:	mov	x0, x19
    b488:	mov	x1, x22
    b48c:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b490:	mov	x19, x0
    b494:	ldr	x0, [x29, #104]
    b498:	cmp	x0, #0x61
    b49c:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b4a0:	add	x0, x20, x0, lsl #4
    b4a4:	str	wzr, [x0, #8]
    b4a8:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b4ac:	mov	x0, x19
    b4b0:	mov	x1, x22
    b4b4:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b4b8:	mov	x19, x0
    b4bc:	ldr	x0, [x29, #104]
    b4c0:	cmp	x0, #0x61
    b4c4:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b4c8:	add	x0, x20, x0, lsl #4
    b4cc:	mov	w1, #0x6                   	// #6
    b4d0:	str	w1, [x0, #8]
    b4d4:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b4d8:	mov	x1, x22
    b4dc:	mov	x0, x19
    b4e0:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b4e4:	mov	x1, x25
    b4e8:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b4ec:	mov	x19, x0
    b4f0:	ldr	x0, [x29, #104]
    b4f4:	cmp	x0, #0x61
    b4f8:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b4fc:	lsl	x1, x0, #4
    b500:	add	x0, x20, x0, lsl #4
    b504:	mov	w2, #0x2                   	// #2
    b508:	str	w2, [x0, #8]
    b50c:	ldr	x0, [x29, #120]
    b510:	str	x0, [x20, x1]
    b514:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b518:	cbz	x24, b53c <_Unwind_GetTextRelBase@@GCC_3.0+0x3b8>
    b51c:	mov	x3, x24
    b520:	ldr	x24, [x24, #1568]
    b524:	mov	x1, x20
    b528:	mov	x0, x3
    b52c:	mov	x2, #0x648                 	// #1608
    b530:	bl	2ad0 <memcpy@plt>
    b534:	str	x0, [x20, #1568]
    b538:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b53c:	sub	sp, sp, #0x650
    b540:	mov	x3, sp
    b544:	b	b524 <_Unwind_GetTextRelBase@@GCC_3.0+0x3a0>
    b548:	ldr	x28, [x20, #1568]
    b54c:	mov	x0, x20
    b550:	mov	x2, #0x648                 	// #1608
    b554:	mov	x1, x28
    b558:	bl	2ad0 <memcpy@plt>
    b55c:	str	x24, [x28, #1568]
    b560:	mov	x24, x28
    b564:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b568:	mov	x1, x21
    b56c:	mov	x0, x19
    b570:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b574:	ldr	x1, [x29, #112]
    b578:	str	x1, [x20, #1584]
    b57c:	mov	x1, x21
    b580:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b584:	mov	x19, x0
    b588:	ldr	x0, [x29, #112]
    b58c:	str	x0, [x20, #1576]
    b590:	mov	w0, #0x1                   	// #1
    b594:	str	w0, [x20, #1600]
    b598:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b59c:	mov	x0, x19
    b5a0:	mov	x1, x21
    b5a4:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b5a8:	mov	x19, x0
    b5ac:	ldr	x0, [x29, #112]
    b5b0:	str	x0, [x20, #1584]
    b5b4:	b	b590 <_Unwind_GetTextRelBase@@GCC_3.0+0x40c>
    b5b8:	mov	x0, x19
    b5bc:	mov	x1, x21
    b5c0:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b5c4:	mov	x19, x0
    b5c8:	ldr	x0, [x29, #112]
    b5cc:	str	x0, [x20, #1576]
    b5d0:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b5d4:	mov	w0, #0x2                   	// #2
    b5d8:	mov	x1, x21
    b5dc:	str	w0, [x20, #1600]
    b5e0:	mov	x0, x19
    b5e4:	str	x19, [x20, #1592]
    b5e8:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b5ec:	ldr	x1, [x29, #112]
    b5f0:	add	x19, x0, x1
    b5f4:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b5f8:	mov	x1, x22
    b5fc:	mov	x0, x19
    b600:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b604:	ldr	x1, [x29, #104]
    b608:	cmp	x1, #0x61
    b60c:	b.hi	b624 <_Unwind_GetTextRelBase@@GCC_3.0+0x4a0>  // b.pmore
    b610:	lsl	x2, x1, #4
    b614:	add	x1, x20, x1, lsl #4
    b618:	mov	w3, #0x3                   	// #3
    b61c:	str	w3, [x1, #8]
    b620:	str	x0, [x20, x2]
    b624:	mov	x1, x21
    b628:	b	b5e8 <_Unwind_GetTextRelBase@@GCC_3.0+0x464>
    b62c:	mov	x1, x22
    b630:	mov	x0, x19
    b634:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b638:	mov	x1, x25
    b63c:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b640:	mov	x19, x0
    b644:	ldr	x0, [x29, #120]
    b648:	ldr	x1, [x20, #1624]
    b64c:	b	b3ac <_Unwind_GetTextRelBase@@GCC_3.0+0x228>
    b650:	mov	x1, x21
    b654:	mov	x0, x19
    b658:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b65c:	ldr	x1, [x29, #112]
    b660:	str	x1, [x20, #1584]
    b664:	mov	x1, x25
    b668:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b66c:	mov	x19, x0
    b670:	mov	w0, #0x1                   	// #1
    b674:	str	w0, [x20, #1600]
    b678:	ldr	x1, [x29, #120]
    b67c:	ldr	x0, [x20, #1624]
    b680:	mul	x0, x0, x1
    b684:	b	b5cc <_Unwind_GetTextRelBase@@GCC_3.0+0x448>
    b688:	mov	x1, x25
    b68c:	mov	x0, x19
    b690:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b694:	mov	x19, x0
    b698:	ldr	x0, [x29, #120]
    b69c:	ldr	x1, [x20, #1624]
    b6a0:	b	b680 <_Unwind_GetTextRelBase@@GCC_3.0+0x4fc>
    b6a4:	mov	x1, x22
    b6a8:	mov	x0, x19
    b6ac:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b6b0:	mov	x1, x21
    b6b4:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b6b8:	mov	x19, x0
    b6bc:	ldr	x0, [x29, #112]
    b6c0:	ldr	x1, [x20, #1624]
    b6c4:	mul	x1, x1, x0
    b6c8:	ldr	x0, [x29, #104]
    b6cc:	cmp	x0, #0x61
    b6d0:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b6d4:	lsl	x2, x0, #4
    b6d8:	mov	w3, #0x4                   	// #4
    b6dc:	add	x0, x20, x0, lsl #4
    b6e0:	b	b3c8 <_Unwind_GetTextRelBase@@GCC_3.0+0x244>
    b6e4:	mov	x1, x22
    b6e8:	mov	x0, x19
    b6ec:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b6f0:	mov	x1, x25
    b6f4:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b6f8:	mov	x19, x0
    b6fc:	ldr	x0, [x29, #120]
    b700:	ldr	x1, [x20, #1624]
    b704:	b	b6c4 <_Unwind_GetTextRelBase@@GCC_3.0+0x540>
    b708:	mov	x1, x22
    b70c:	mov	x0, x19
    b710:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b714:	ldr	x1, [x29, #104]
    b718:	cmp	x1, #0x61
    b71c:	b.hi	b624 <_Unwind_GetTextRelBase@@GCC_3.0+0x4a0>  // b.pmore
    b720:	lsl	x2, x1, #4
    b724:	mov	w3, #0x5                   	// #5
    b728:	add	x1, x20, x1, lsl #4
    b72c:	b	b61c <_Unwind_GetTextRelBase@@GCC_3.0+0x498>
    b730:	ldr	x0, [x20, #544]
    b734:	eor	x0, x0, #0x1
    b738:	str	x0, [x20, #544]
    b73c:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b740:	mov	x0, x19
    b744:	mov	x1, x21
    b748:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b74c:	mov	x19, x0
    b750:	ldr	x0, [x29, #112]
    b754:	str	x0, [x23, #848]
    b758:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b75c:	mov	x1, x22
    b760:	mov	x0, x19
    b764:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b768:	mov	x1, x21
    b76c:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b770:	mov	x19, x0
    b774:	ldr	x1, [x29, #112]
    b778:	ldr	x0, [x20, #1624]
    b77c:	mul	x0, x0, x1
    b780:	ldr	x1, [x29, #104]
    b784:	cmp	x1, #0x61
    b788:	b.hi	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>  // b.pmore
    b78c:	lsl	x2, x1, #4
    b790:	add	x1, x20, x1, lsl #4
    b794:	mov	w3, #0x1                   	// #1
    b798:	neg	x0, x0
    b79c:	str	w3, [x1, #8]
    b7a0:	str	x0, [x20, x2]
    b7a4:	b	b37c <_Unwind_GetTextRelBase@@GCC_3.0+0x1f8>
    b7a8:	bl	2c90 <abort@plt>
    b7ac:	stp	x29, x30, [sp, #-112]!
    b7b0:	mov	x2, #0x680                 	// #1664
    b7b4:	mov	x29, sp
    b7b8:	stp	x19, x20, [sp, #16]
    b7bc:	mov	x19, x0
    b7c0:	stp	x21, x22, [sp, #32]
    b7c4:	mov	x22, x1
    b7c8:	mov	x0, x22
    b7cc:	mov	w1, #0x0                   	// #0
    b7d0:	stp	x23, x24, [sp, #48]
    b7d4:	stp	x25, x26, [sp, #64]
    b7d8:	bl	2be0 <memset@plt>
    b7dc:	ldr	x2, [x19, #792]
    b7e0:	str	xzr, [x19, #800]
    b7e4:	str	xzr, [x19, #848]
    b7e8:	cbnz	x2, b808 <_Unwind_GetTextRelBase@@GCC_3.0+0x684>
    b7ec:	mov	w0, #0x5                   	// #5
    b7f0:	ldp	x19, x20, [sp, #16]
    b7f4:	ldp	x21, x22, [sp, #32]
    b7f8:	ldp	x23, x24, [sp, #48]
    b7fc:	ldp	x25, x26, [sp, #64]
    b800:	ldp	x29, x30, [sp], #112
    b804:	ret
    b808:	ldr	d0, [x19, #832]
    b80c:	add	x1, x19, #0x328
    b810:	cmge	d0, d0, #0
    b814:	fmov	x0, d0
    b818:	add	x0, x2, x0
    b81c:	bl	2d00 <_Unwind_Find_FDE@plt>
    b820:	mov	x21, x0
    b824:	cbnz	x0, b920 <_Unwind_GetTextRelBase@@GCC_3.0+0x79c>
    b828:	ldr	x0, [x19, #792]
    b82c:	mov	w1, #0x1168                	// #4456
    b830:	movk	w1, #0xd280, lsl #16
    b834:	ldr	w2, [x0]
    b838:	cmp	w2, w1
    b83c:	b.ne	b7ec <_Unwind_GetTextRelBase@@GCC_3.0+0x668>  // b.any
    b840:	ldr	w1, [x0, #4]
    b844:	mov	w0, #0x1                   	// #1
    b848:	movk	w0, #0xd400, lsl #16
    b84c:	cmp	w1, w0
    b850:	b.ne	b7ec <_Unwind_GetTextRelBase@@GCC_3.0+0x668>  // b.any
    b854:	ldr	x1, [x19, #784]
    b858:	mov	x0, #0x1f                  	// #31
    b85c:	mov	x4, x22
    b860:	str	x0, [x22, #1584]
    b864:	add	x3, x1, #0x130
    b868:	mov	x0, #0x130                 	// #304
    b86c:	mov	w2, #0x1                   	// #1
    b870:	str	x0, [x22, #1576]
    b874:	mov	x0, #0x8                   	// #8
    b878:	str	w2, [x22, #1600]
    b87c:	str	w2, [x4, #8]
    b880:	str	x0, [x4], #16
    b884:	add	x0, x0, #0x8
    b888:	cmp	x0, #0x100
    b88c:	b.ne	b87c <_Unwind_GetTextRelBase@@GCC_3.0+0x6f8>  // b.any
    b890:	mov	w6, #0x8001                	// #32769
    b894:	mov	x4, #0xfffffffffffffee0    	// #-288
    b898:	add	x2, x1, #0x250
    b89c:	sub	x4, x4, x1
    b8a0:	add	x7, x22, #0x600
    b8a4:	movk	w6, #0x4650, lsl #16
    b8a8:	mov	w8, #0x1                   	// #1
    b8ac:	ldr	w0, [x2]
    b8b0:	cbnz	w0, b8ec <_Unwind_GetTextRelBase@@GCC_3.0+0x768>
    b8b4:	add	x1, x1, #0x230
    b8b8:	mov	w2, #0x1                   	// #1
    b8bc:	sub	x1, x1, x3
    b8c0:	strb	w2, [x22, #1651]
    b8c4:	str	x1, [x22, #496]
    b8c8:	mov	w1, #0x4                   	// #4
    b8cc:	str	w1, [x22, #1544]
    b8d0:	ldr	x1, [x3, #264]
    b8d4:	str	w2, [x22, #504]
    b8d8:	sub	x1, x1, x3
    b8dc:	str	x1, [x22, #1536]
    b8e0:	mov	x1, #0x60                  	// #96
    b8e4:	str	x1, [x22, #1640]
    b8e8:	b	b7f0 <_Unwind_GetTextRelBase@@GCC_3.0+0x66c>
    b8ec:	cmp	w0, w6
    b8f0:	b.eq	b900 <_Unwind_GetTextRelBase@@GCC_3.0+0x77c>  // b.none
    b8f4:	ldr	w0, [x2, #4]
    b8f8:	add	x2, x2, x0
    b8fc:	b	b8ac <_Unwind_GetTextRelBase@@GCC_3.0+0x728>
    b900:	add	x0, x22, #0x400
    b904:	add	x5, x2, x4
    b908:	str	w8, [x0, #8]
    b90c:	str	x5, [x0], #16
    b910:	add	x5, x5, #0x10
    b914:	cmp	x7, x0
    b918:	b.ne	b908 <_Unwind_GetTextRelBase@@GCC_3.0+0x784>  // b.any
    b91c:	b	b8f4 <_Unwind_GetTextRelBase@@GCC_3.0+0x770>
    b920:	add	x20, x0, #0x4
    b924:	ldr	x0, [x19, #824]
    b928:	str	x0, [x22, #1608]
    b92c:	ldrsw	x0, [x21, #4]
    b930:	sub	x20, x20, x0
    b934:	add	x23, x20, #0x9
    b938:	mov	x0, x23
    b93c:	bl	2af0 <strlen@plt>
    b940:	ldrb	w1, [x20, #9]
    b944:	add	x0, x0, #0x1
    b948:	add	x0, x23, x0
    b94c:	cmp	w1, #0x65
    b950:	b.ne	b96c <_Unwind_GetTextRelBase@@GCC_3.0+0x7e8>  // b.any
    b954:	ldrb	w1, [x20, #10]
    b958:	cmp	w1, #0x68
    b95c:	b.ne	b96c <_Unwind_GetTextRelBase@@GCC_3.0+0x7e8>  // b.any
    b960:	add	x23, x20, #0xb
    b964:	ldr	x1, [x0], #8
    b968:	str	x1, [x22, #1656]
    b96c:	ldrb	w1, [x20, #8]
    b970:	cmp	w1, #0x3
    b974:	b.ls	b998 <_Unwind_GetTextRelBase@@GCC_3.0+0x814>  // b.plast
    b978:	ldrb	w1, [x0]
    b97c:	cmp	w1, #0x8
    b980:	b.eq	b98c <_Unwind_GetTextRelBase@@GCC_3.0+0x808>  // b.none
    b984:	mov	w0, #0x3                   	// #3
    b988:	b	b7f0 <_Unwind_GetTextRelBase@@GCC_3.0+0x66c>
    b98c:	ldrb	w1, [x0, #1]
    b990:	cbnz	w1, b984 <_Unwind_GetTextRelBase@@GCC_3.0+0x800>
    b994:	add	x0, x0, #0x2
    b998:	add	x6, sp, #0x58
    b99c:	mov	x1, x6
    b9a0:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b9a4:	ldr	x1, [sp, #88]
    b9a8:	str	x1, [x22, #1632]
    b9ac:	add	x1, sp, #0x60
    b9b0:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    b9b4:	ldr	x1, [sp, #96]
    b9b8:	str	x1, [x22, #1624]
    b9bc:	ldrb	w1, [x20, #8]
    b9c0:	cmp	w1, #0x1
    b9c4:	b.ne	ba64 <_Unwind_GetTextRelBase@@GCC_3.0+0x8e0>  // b.any
    b9c8:	ldrb	w1, [x0], #1
    b9cc:	str	x1, [x22, #1640]
    b9d0:	mov	w1, #0xffffffff            	// #-1
    b9d4:	strb	w1, [x22, #1649]
    b9d8:	ldrb	w1, [x23]
    b9dc:	cmp	w1, #0x7a
    b9e0:	b.ne	bad8 <_Unwind_GetTextRelBase@@GCC_3.0+0x954>  // b.any
    b9e4:	mov	x1, x6
    b9e8:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    b9ec:	ldr	x24, [sp, #88]
    b9f0:	add	x23, x23, #0x1
    b9f4:	mov	w1, #0x1                   	// #1
    b9f8:	strb	w1, [x22, #1650]
    b9fc:	add	x24, x0, x24
    ba00:	add	x23, x23, #0x1
    ba04:	add	x26, sp, #0x68
    ba08:	mov	w25, #0x1                   	// #1
    ba0c:	ldurb	w1, [x23, #-1]
    ba10:	cbnz	w1, ba74 <_Unwind_GetTextRelBase@@GCC_3.0+0x8f0>
    ba14:	cbnz	x24, bb80 <_Unwind_GetTextRelBase@@GCC_3.0+0x9fc>
    ba18:	cbz	x0, b984 <_Unwind_GetTextRelBase@@GCC_3.0+0x800>
    ba1c:	ldr	w1, [x20]
    ba20:	mov	x3, x22
    ba24:	mov	x2, x19
    ba28:	add	x1, x1, #0x4
    ba2c:	add	x1, x20, x1
    ba30:	bl	b2d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x150>
    ba34:	ldrb	w0, [x22, #1648]
    ba38:	cmp	w0, #0xff
    ba3c:	b.eq	bb68 <_Unwind_GetTextRelBase@@GCC_3.0+0x9e4>  // b.none
    ba40:	and	w0, w0, #0x7
    ba44:	cmp	w0, #0x4
    ba48:	b.hi	bb64 <_Unwind_GetTextRelBase@@GCC_3.0+0x9e0>  // b.pmore
    ba4c:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    ba50:	add	x1, x1, #0xd10
    ba54:	ldrb	w0, [x1, w0, uxtw]
    ba58:	adr	x1, ba64 <_Unwind_GetTextRelBase@@GCC_3.0+0x8e0>
    ba5c:	add	x0, x1, w0, sxtb #2
    ba60:	br	x0
    ba64:	mov	x1, x6
    ba68:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    ba6c:	ldr	x1, [sp, #88]
    ba70:	b	b9cc <_Unwind_GetTextRelBase@@GCC_3.0+0x848>
    ba74:	cmp	w1, #0x4c
    ba78:	b.ne	ba8c <_Unwind_GetTextRelBase@@GCC_3.0+0x908>  // b.any
    ba7c:	ldrb	w1, [x0], #1
    ba80:	strb	w1, [x22, #1649]
    ba84:	add	x23, x23, #0x1
    ba88:	b	ba0c <_Unwind_GetTextRelBase@@GCC_3.0+0x888>
    ba8c:	cmp	w1, #0x52
    ba90:	b.ne	baa0 <_Unwind_GetTextRelBase@@GCC_3.0+0x91c>  // b.any
    ba94:	ldrb	w1, [x0], #1
    ba98:	strb	w1, [x22, #1648]
    ba9c:	b	ba84 <_Unwind_GetTextRelBase@@GCC_3.0+0x900>
    baa0:	cmp	w1, #0x50
    baa4:	b.ne	bac8 <_Unwind_GetTextRelBase@@GCC_3.0+0x944>  // b.any
    baa8:	ldrb	w1, [x0]
    baac:	add	x2, x0, #0x1
    bab0:	mov	x3, x26
    bab4:	mov	x0, x19
    bab8:	bl	b18c <_Unwind_GetTextRelBase@@GCC_3.0+0x8>
    babc:	ldr	x1, [sp, #104]
    bac0:	str	x1, [x22, #1616]
    bac4:	b	ba84 <_Unwind_GetTextRelBase@@GCC_3.0+0x900>
    bac8:	cmp	w1, #0x53
    bacc:	b.ne	bae0 <_Unwind_GetTextRelBase@@GCC_3.0+0x95c>  // b.any
    bad0:	strb	w25, [x22, #1651]
    bad4:	b	ba84 <_Unwind_GetTextRelBase@@GCC_3.0+0x900>
    bad8:	mov	x24, #0x0                   	// #0
    badc:	b	ba00 <_Unwind_GetTextRelBase@@GCC_3.0+0x87c>
    bae0:	mov	x0, x24
    bae4:	b	ba18 <_Unwind_GetTextRelBase@@GCC_3.0+0x894>
    bae8:	mov	w0, #0x2                   	// #2
    baec:	ldrb	w1, [x22, #1650]
    baf0:	lsl	w0, w0, #1
    baf4:	add	x0, x0, #0x8
    baf8:	add	x0, x21, x0
    bafc:	cbz	w1, bb78 <_Unwind_GetTextRelBase@@GCC_3.0+0x9f4>
    bb00:	add	x1, sp, #0x68
    bb04:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    bb08:	ldr	x20, [sp, #104]
    bb0c:	add	x20, x0, x20
    bb10:	ldrb	w1, [x22, #1649]
    bb14:	cmp	w1, #0xff
    bb18:	b.eq	bb34 <_Unwind_GetTextRelBase@@GCC_3.0+0x9b0>  // b.none
    bb1c:	mov	x2, x0
    bb20:	add	x3, sp, #0x68
    bb24:	mov	x0, x19
    bb28:	bl	b18c <_Unwind_GetTextRelBase@@GCC_3.0+0x8>
    bb2c:	ldr	x1, [sp, #104]
    bb30:	str	x1, [x19, #800]
    bb34:	ldr	w1, [x21]
    bb38:	cmp	x20, #0x0
    bb3c:	csel	x0, x20, x0, ne  // ne = any
    bb40:	mov	x3, x22
    bb44:	add	x1, x1, #0x4
    bb48:	mov	x2, x19
    bb4c:	add	x1, x21, x1
    bb50:	bl	b2d4 <_Unwind_GetTextRelBase@@GCC_3.0+0x150>
    bb54:	mov	w0, #0x0                   	// #0
    bb58:	b	b7f0 <_Unwind_GetTextRelBase@@GCC_3.0+0x66c>
    bb5c:	mov	w0, #0x4                   	// #4
    bb60:	b	baec <_Unwind_GetTextRelBase@@GCC_3.0+0x968>
    bb64:	bl	2c90 <abort@plt>
    bb68:	mov	w0, #0x0                   	// #0
    bb6c:	b	baec <_Unwind_GetTextRelBase@@GCC_3.0+0x968>
    bb70:	mov	w0, #0x8                   	// #8
    bb74:	b	baec <_Unwind_GetTextRelBase@@GCC_3.0+0x968>
    bb78:	mov	x20, #0x0                   	// #0
    bb7c:	b	bb10 <_Unwind_GetTextRelBase@@GCC_3.0+0x98c>
    bb80:	mov	x0, x24
    bb84:	b	ba1c <_Unwind_GetTextRelBase@@GCC_3.0+0x898>
    bb88:	sub	sp, sp, #0x270
    bb8c:	stp	x29, x30, [sp]
    bb90:	mov	x29, sp
    bb94:	stp	x19, x20, [sp, #16]
    bb98:	mov	x20, x1
    bb9c:	mov	x19, x2
    bba0:	stp	x21, x22, [sp, #32]
    bba4:	adrp	x21, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    bba8:	adrp	x22, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    bbac:	add	x21, x21, #0xddc
    bbb0:	add	x22, x22, #0xdc4
    bbb4:	str	x25, [sp, #64]
    bbb8:	add	x25, sp, #0x70
    bbbc:	stp	x23, x24, [sp, #48]
    bbc0:	mov	w23, #0x1                   	// #1
    bbc4:	str	x3, [sp, #112]
    bbc8:	cmp	x0, x20
    bbcc:	b.cc	bbfc <_Unwind_GetTextRelBase@@GCC_3.0+0xa78>  // b.lo, b.ul, b.last
    bbd0:	cbz	w23, bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bbd4:	sub	w23, w23, #0x1
    bbd8:	add	x0, sp, #0x70
    bbdc:	ldp	x29, x30, [sp]
    bbe0:	ldr	x0, [x0, w23, sxtw #3]
    bbe4:	ldp	x19, x20, [sp, #16]
    bbe8:	ldp	x21, x22, [sp, #32]
    bbec:	ldp	x23, x24, [sp, #48]
    bbf0:	ldr	x25, [sp, #64]
    bbf4:	add	sp, sp, #0x270
    bbf8:	ret
    bbfc:	mov	x24, x0
    bc00:	ldrb	w7, [x24], #1
    bc04:	cmp	w7, #0x4f
    bc08:	b.hi	bc60 <_Unwind_GetTextRelBase@@GCC_3.0+0xadc>  // b.pmore
    bc0c:	cmp	w7, #0x2
    bc10:	b.hi	bc3c <_Unwind_GetTextRelBase@@GCC_3.0+0xab8>  // b.pmore
    bc14:	bl	2c90 <abort@plt>
    bc18:	sub	w2, w7, #0x90
    bc1c:	cmp	w2, #0x6
    bc20:	b.hi	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.pmore
    bc24:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    bc28:	add	x1, x1, #0xd18
    bc2c:	ldrh	w1, [x1, w2, uxtw #1]
    bc30:	adr	x2, bc3c <_Unwind_GetTextRelBase@@GCC_3.0+0xab8>
    bc34:	add	x1, x2, w1, sxth #2
    bc38:	br	x1
    bc3c:	sub	w2, w7, #0x3
    bc40:	cmp	w2, #0x4c
    bc44:	b.hi	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.pmore
    bc48:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    bc4c:	add	x1, x1, #0xd28
    bc50:	ldrh	w1, [x1, w2, uxtw #1]
    bc54:	adr	x2, bc60 <_Unwind_GetTextRelBase@@GCC_3.0+0xadc>
    bc58:	add	x1, x2, w1, sxth #2
    bc5c:	br	x1
    bc60:	cmp	w7, #0x96
    bc64:	b.hi	bca0 <_Unwind_GetTextRelBase@@GCC_3.0+0xb1c>  // b.pmore
    bc68:	cmp	w7, #0x8f
    bc6c:	b.hi	bc18 <_Unwind_GetTextRelBase@@GCC_3.0+0xa94>  // b.pmore
    bc70:	cmp	w7, #0x6f
    bc74:	b.ls	bd50 <_Unwind_GetTextRelBase@@GCC_3.0+0xbcc>  // b.plast
    bc78:	add	x1, sp, #0x60
    bc7c:	mov	x0, x24
    bc80:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    bc84:	mov	x24, x0
    bc88:	sub	w1, w7, #0x70
    bc8c:	mov	x0, x19
    bc90:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    bc94:	ldr	x6, [sp, #96]
    bc98:	add	x6, x0, x6
    bc9c:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bca0:	cmp	w7, #0xf1
    bca4:	b.ne	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.any
    bca8:	ldrb	w1, [x0, #1]
    bcac:	add	x2, x0, #0x2
    bcb0:	add	x3, sp, #0x68
    bcb4:	mov	x0, x19
    bcb8:	bl	b18c <_Unwind_GetTextRelBase@@GCC_3.0+0x8>
    bcbc:	mov	x24, x0
    bcc0:	ldr	x6, [sp, #104]
    bcc4:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bcc8:	sub	w6, w7, #0x30
    bccc:	cmp	w23, #0x3f
    bcd0:	b.gt	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bcd4:	str	x6, [x25, w23, sxtw #3]
    bcd8:	add	w23, w23, #0x1
    bcdc:	b	bdb4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc30>
    bce0:	ldrb	w6, [x0, #1]
    bce4:	add	x24, x0, #0x2
    bce8:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bcec:	ldrsb	x6, [x0, #1]
    bcf0:	b	bce4 <_Unwind_GetTextRelBase@@GCC_3.0+0xb60>
    bcf4:	ldurh	w6, [x0, #1]
    bcf8:	add	x24, x0, #0x3
    bcfc:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bd00:	ldursh	x6, [x0, #1]
    bd04:	b	bcf8 <_Unwind_GetTextRelBase@@GCC_3.0+0xb74>
    bd08:	ldur	w6, [x0, #1]
    bd0c:	add	x24, x0, #0x5
    bd10:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bd14:	ldursw	x6, [x0, #1]
    bd18:	b	bd0c <_Unwind_GetTextRelBase@@GCC_3.0+0xb88>
    bd1c:	add	x24, x0, #0x9
    bd20:	ldur	x6, [x0, #1]
    bd24:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bd28:	mov	x0, x24
    bd2c:	add	x1, sp, #0x58
    bd30:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    bd34:	mov	x24, x0
    bd38:	ldr	x6, [sp, #88]
    bd3c:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bd40:	add	x1, sp, #0x68
    bd44:	mov	x0, x24
    bd48:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    bd4c:	b	bcbc <_Unwind_GetTextRelBase@@GCC_3.0+0xb38>
    bd50:	sub	w1, w7, #0x50
    bd54:	mov	x0, x19
    bd58:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    bd5c:	mov	x6, x0
    bd60:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bd64:	add	x1, sp, #0x50
    bd68:	mov	x0, x24
    bd6c:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    bd70:	mov	x24, x0
    bd74:	ldr	w1, [sp, #80]
    bd78:	b	bd54 <_Unwind_GetTextRelBase@@GCC_3.0+0xbd0>
    bd7c:	add	x1, sp, #0x50
    bd80:	mov	x0, x24
    bd84:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    bd88:	add	x1, sp, #0x60
    bd8c:	bl	ad78 <__enable_execute_stack@@GCC_3.4.2+0x2c>
    bd90:	ldr	w1, [sp, #80]
    bd94:	mov	x24, x0
    bd98:	b	bc8c <_Unwind_GetTextRelBase@@GCC_3.0+0xb08>
    bd9c:	cbz	w23, bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bda0:	sub	w0, w23, #0x1
    bda4:	ldr	x6, [x25, w0, sxtw #3]
    bda8:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bdac:	cbz	w23, bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bdb0:	sub	w23, w23, #0x1
    bdb4:	mov	x0, x24
    bdb8:	b	bbc8 <_Unwind_GetTextRelBase@@GCC_3.0+0xa44>
    bdbc:	ldrb	w1, [x0, #1]
    bdc0:	sub	w2, w23, #0x1
    bdc4:	str	x1, [sp, #96]
    bdc8:	add	x24, x0, #0x2
    bdcc:	sxtw	x0, w2
    bdd0:	cmp	x1, w2, sxtw
    bdd4:	b.ge	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.tcont
    bdd8:	sub	x0, x0, x1
    bddc:	ldr	x6, [x25, x0, lsl #3]
    bde0:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bde4:	cmp	w23, #0x1
    bde8:	b.le	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bdec:	sub	w0, w23, #0x2
    bdf0:	b	bda4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc20>
    bdf4:	cmp	w23, #0x1
    bdf8:	b.le	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bdfc:	sub	w0, w23, #0x2
    be00:	sub	w1, w23, #0x1
    be04:	sbfiz	x0, x0, #3, #32
    be08:	sbfiz	x1, x1, #3, #32
    be0c:	ldr	x3, [x25, x0]
    be10:	ldr	x2, [x25, x1]
    be14:	str	x3, [x25, x1]
    be18:	str	x2, [x25, x0]
    be1c:	b	bdb4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc30>
    be20:	cmp	w23, #0x2
    be24:	b.le	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    be28:	sub	w1, w23, #0x2
    be2c:	sub	w2, w23, #0x1
    be30:	sub	w0, w23, #0x3
    be34:	sbfiz	x1, x1, #3, #32
    be38:	sbfiz	x2, x2, #3, #32
    be3c:	sbfiz	x0, x0, #3, #32
    be40:	ldr	x5, [x25, x1]
    be44:	ldr	x3, [x25, x2]
    be48:	ldr	x4, [x25, x0]
    be4c:	str	x5, [x25, x2]
    be50:	str	x4, [x25, x1]
    be54:	str	x3, [x25, x0]
    be58:	b	bdb4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc30>
    be5c:	cbz	w23, bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    be60:	sub	w23, w23, #0x1
    be64:	cmp	w7, #0x23
    be68:	ldr	x6, [x25, w23, sxtw #3]
    be6c:	b.hi	bea4 <_Unwind_GetTextRelBase@@GCC_3.0+0xd20>  // b.pmore
    be70:	cmp	w7, #0x18
    be74:	b.hi	be88 <_Unwind_GetTextRelBase@@GCC_3.0+0xd04>  // b.pmore
    be78:	cmp	w7, #0x6
    be7c:	b.ne	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.any
    be80:	ldr	x6, [x6]
    be84:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    be88:	sub	w7, w7, #0x19
    be8c:	cmp	w7, #0xa
    be90:	b.hi	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.pmore
    be94:	ldrh	w0, [x22, w7, uxtw #1]
    be98:	adr	x1, bea4 <_Unwind_GetTextRelBase@@GCC_3.0+0xd20>
    be9c:	add	x0, x1, w0, sxth #2
    bea0:	br	x0
    bea4:	cmp	w7, #0x94
    bea8:	b.ne	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.any
    beac:	add	x24, x0, #0x2
    beb0:	ldrb	w0, [x0, #1]
    beb4:	sub	w0, w0, #0x1
    beb8:	cmp	w0, #0x7
    bebc:	b.hi	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.pmore
    bec0:	ldrh	w0, [x21, w0, uxtw #1]
    bec4:	adr	x1, bed0 <_Unwind_GetTextRelBase@@GCC_3.0+0xd4c>
    bec8:	add	x0, x1, w0, sxth #2
    becc:	br	x0
    bed0:	ldrb	w6, [x6]
    bed4:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bed8:	ldrh	w6, [x6]
    bedc:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bee0:	ldr	w6, [x6]
    bee4:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bee8:	cmp	x6, #0x0
    beec:	cneg	x6, x6, lt  // lt = tstop
    bef0:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bef4:	neg	x6, x6
    bef8:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    befc:	mvn	x6, x6
    bf00:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bf04:	mov	x0, x24
    bf08:	add	x1, sp, #0x58
    bf0c:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    bf10:	mov	x24, x0
    bf14:	ldr	x0, [sp, #88]
    bf18:	b	bc98 <_Unwind_GetTextRelBase@@GCC_3.0+0xb14>
    bf1c:	cmp	w23, #0x1
    bf20:	b.le	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    bf24:	sub	w1, w23, #0x2
    bf28:	sub	w23, w23, #0x1
    bf2c:	sub	w7, w7, #0x1a
    bf30:	cmp	w7, #0x14
    bf34:	ldr	x6, [x25, w1, sxtw #3]
    bf38:	ldr	x0, [x25, w23, sxtw #3]
    bf3c:	b.hi	bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>  // b.pmore
    bf40:	adrp	x2, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    bf44:	add	x2, x2, #0xdec
    bf48:	ldrh	w2, [x2, w7, uxtw #1]
    bf4c:	adr	x3, bf58 <_Unwind_GetTextRelBase@@GCC_3.0+0xdd4>
    bf50:	add	x2, x3, w2, sxth #2
    bf54:	br	x2
    bf58:	and	x6, x6, x0
    bf5c:	mov	w23, w1
    bf60:	b	bccc <_Unwind_GetTextRelBase@@GCC_3.0+0xb48>
    bf64:	sdiv	x6, x6, x0
    bf68:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf6c:	sub	x6, x6, x0
    bf70:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf74:	udiv	x2, x6, x0
    bf78:	msub	x6, x2, x0, x6
    bf7c:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf80:	mul	x6, x6, x0
    bf84:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf88:	orr	x6, x6, x0
    bf8c:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf90:	add	x6, x6, x0
    bf94:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bf98:	lsl	x6, x6, x0
    bf9c:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfa0:	lsr	x6, x6, x0
    bfa4:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfa8:	asr	x6, x6, x0
    bfac:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfb0:	eor	x6, x6, x0
    bfb4:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfb8:	cmp	x6, x0
    bfbc:	cset	x6, le
    bfc0:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfc4:	cmp	x6, x0
    bfc8:	cset	x6, ge  // ge = tcont
    bfcc:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfd0:	cmp	x6, x0
    bfd4:	cset	x6, eq  // eq = none
    bfd8:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfdc:	cmp	x6, x0
    bfe0:	cset	x6, lt  // lt = tstop
    bfe4:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bfe8:	cmp	x6, x0
    bfec:	cset	x6, gt
    bff0:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    bff4:	cmp	x6, x0
    bff8:	cset	x6, ne  // ne = any
    bffc:	b	bf5c <_Unwind_GetTextRelBase@@GCC_3.0+0xdd8>
    c000:	add	x24, x0, #0x3
    c004:	ldursh	x0, [x0, #1]
    c008:	add	x24, x24, x0
    c00c:	b	bdb4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc30>
    c010:	cbz	w23, bc14 <_Unwind_GetTextRelBase@@GCC_3.0+0xa90>
    c014:	sub	w23, w23, #0x1
    c018:	add	x24, x0, #0x3
    c01c:	ldr	x1, [x25, w23, sxtw #3]
    c020:	cbz	x1, bdb4 <_Unwind_GetTextRelBase@@GCC_3.0+0xc30>
    c024:	b	c004 <_Unwind_GetTextRelBase@@GCC_3.0+0xe80>
    c028:	sub	sp, sp, #0x440
    c02c:	mov	x2, #0x3c0                 	// #960
    c030:	stp	x29, x30, [sp]
    c034:	mov	x29, sp
    c038:	stp	x23, x24, [sp, #48]
    c03c:	add	x23, sp, #0x80
    c040:	stp	x19, x20, [sp, #16]
    c044:	mov	x19, x0
    c048:	stp	x21, x22, [sp, #32]
    c04c:	mov	x21, x1
    c050:	mov	x1, x0
    c054:	mov	x0, x23
    c058:	stp	x25, x26, [sp, #64]
    c05c:	stp	x27, x28, [sp, #80]
    c060:	bl	2ad0 <memcpy@plt>
    c064:	mov	x0, x23
    c068:	mov	w1, #0x1f                  	// #31
    c06c:	bl	adb8 <__enable_execute_stack@@GCC_3.4.2+0x6c>
    c070:	cbnz	x0, c084 <_Unwind_GetTextRelBase@@GCC_3.0+0xf00>
    c074:	ldr	x1, [x19, #784]
    c078:	add	x2, sp, #0x70
    c07c:	mov	x0, x23
    c080:	bl	af38 <__enable_execute_stack@@GCC_3.4.2+0x1ec>
    c084:	ldr	x0, [x19, #832]
    c088:	tbz	x0, #62, c090 <_Unwind_GetTextRelBase@@GCC_3.0+0xf0c>
    c08c:	strb	wzr, [x19, #887]
    c090:	ldr	w0, [x21, #1600]
    c094:	str	xzr, [x19, #248]
    c098:	cmp	w0, #0x1
    c09c:	b.eq	c0ac <_Unwind_GetTextRelBase@@GCC_3.0+0xf28>  // b.none
    c0a0:	cmp	w0, #0x2
    c0a4:	b.eq	c118 <_Unwind_GetTextRelBase@@GCC_3.0+0xf94>  // b.none
    c0a8:	bl	2c90 <abort@plt>
    c0ac:	ldr	w1, [x21, #1584]
    c0b0:	mov	x0, x23
    c0b4:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    c0b8:	ldr	x1, [x21, #1576]
    c0bc:	add	x20, x0, x1
    c0c0:	adrp	x25, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    c0c4:	adrp	x24, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    c0c8:	add	x0, x25, #0xe18
    c0cc:	mov	x26, x21
    c0d0:	add	x28, x19, #0x358
    c0d4:	add	x24, x24, #0x1d4
    c0d8:	add	x27, sp, #0x78
    c0dc:	mov	x22, #0x0                   	// #0
    c0e0:	mov	w25, #0x1                   	// #1
    c0e4:	str	x0, [sp, #96]
    c0e8:	add	x0, sp, #0x3d8
    c0ec:	str	x0, [sp, #104]
    c0f0:	str	x20, [x19, #784]
    c0f4:	ldr	w0, [x26, #8]
    c0f8:	sub	w0, w0, #0x1
    c0fc:	cmp	w0, #0x4
    c100:	b.hi	c158 <_Unwind_GetTextRelBase@@GCC_3.0+0xfd4>  // b.pmore
    c104:	ldr	x1, [sp, #96]
    c108:	ldrb	w0, [x1, w0, uxtw]
    c10c:	adr	x1, c118 <_Unwind_GetTextRelBase@@GCC_3.0+0xf94>
    c110:	add	x0, x1, w0, sxtb #2
    c114:	br	x0
    c118:	ldr	x0, [x21, #1592]
    c11c:	add	x1, sp, #0x78
    c120:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    c124:	ldr	x1, [sp, #120]
    c128:	mov	x2, x23
    c12c:	mov	x3, #0x0                   	// #0
    c130:	add	x1, x0, x1
    c134:	bl	bb88 <_Unwind_GetTextRelBase@@GCC_3.0+0xa04>
    c138:	mov	x20, x0
    c13c:	b	c0c0 <_Unwind_GetTextRelBase@@GCC_3.0+0xf3c>
    c140:	ldr	x0, [x26]
    c144:	add	x0, x20, x0
    c148:	ldr	x1, [x19, #832]
    c14c:	tbz	x1, #62, c154 <_Unwind_GetTextRelBase@@GCC_3.0+0xfd0>
    c150:	strb	wzr, [x28]
    c154:	str	x0, [x19, x22, lsl #3]
    c158:	add	x22, x22, #0x1
    c15c:	add	x26, x26, #0x10
    c160:	add	x28, x28, #0x1
    c164:	add	x24, x24, #0x1
    c168:	cmp	x22, #0x62
    c16c:	b.ne	c0f4 <_Unwind_GetTextRelBase@@GCC_3.0+0xf70>  // b.any
    c170:	ldr	x0, [x19, #832]
    c174:	ldrb	w2, [x21, #1651]
    c178:	orr	x1, x0, #0x8000000000000000
    c17c:	and	x0, x0, #0x7fffffffffffffff
    c180:	cmp	w2, #0x0
    c184:	csel	x0, x0, x1, eq  // eq = none
    c188:	ldp	x29, x30, [sp]
    c18c:	orr	x1, x0, #0x2000000000000000
    c190:	ldp	x23, x24, [sp, #48]
    c194:	ldp	x25, x26, [sp, #64]
    c198:	ldp	x27, x28, [sp, #80]
    c19c:	str	x0, [x19, #832]
    c1a0:	ldr	x2, [x21, #544]
    c1a4:	ldp	x21, x22, [sp, #32]
    c1a8:	tst	x2, #0x1
    c1ac:	csel	x0, x1, x0, ne  // ne = any
    c1b0:	str	x0, [x19, #832]
    c1b4:	ldp	x19, x20, [sp, #16]
    c1b8:	add	sp, sp, #0x440
    c1bc:	ret
    c1c0:	ldr	x1, [x26]
    c1c4:	ldr	x0, [sp, #104]
    c1c8:	ldrb	w0, [x0, w1, sxtw]
    c1cc:	cbz	w0, c1ec <_Unwind_GetTextRelBase@@GCC_3.0+0x1068>
    c1d0:	mov	x0, x23
    c1d4:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    c1d8:	ldrb	w1, [x24]
    c1dc:	cmp	w1, #0x8
    c1e0:	b.hi	c0a8 <_Unwind_GetTextRelBase@@GCC_3.0+0xf24>  // b.pmore
    c1e4:	strb	w25, [x28]
    c1e8:	b	c154 <_Unwind_GetTextRelBase@@GCC_3.0+0xfd0>
    c1ec:	mov	x0, x23
    c1f0:	bl	adb8 <__enable_execute_stack@@GCC_3.4.2+0x6c>
    c1f4:	b	c148 <_Unwind_GetTextRelBase@@GCC_3.0+0xfc4>
    c1f8:	ldr	x0, [x26]
    c1fc:	mov	x1, x27
    c200:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    c204:	ldr	x1, [sp, #120]
    c208:	mov	x3, x20
    c20c:	mov	x2, x23
    c210:	add	x1, x0, x1
    c214:	bl	bb88 <_Unwind_GetTextRelBase@@GCC_3.0+0xa04>
    c218:	b	c148 <_Unwind_GetTextRelBase@@GCC_3.0+0xfc4>
    c21c:	ldr	x0, [x26]
    c220:	add	x0, x20, x0
    c224:	b	c1d8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1054>
    c228:	ldr	x0, [x26]
    c22c:	mov	x1, x27
    c230:	bl	ad50 <__enable_execute_stack@@GCC_3.4.2+0x4>
    c234:	ldr	x1, [sp, #120]
    c238:	mov	x3, x20
    c23c:	mov	x2, x23
    c240:	add	x1, x0, x1
    c244:	bl	bb88 <_Unwind_GetTextRelBase@@GCC_3.0+0xa04>
    c248:	b	c1d8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1054>
    c24c:	sub	sp, sp, #0x6d0
    c250:	stp	x29, x30, [sp]
    c254:	mov	x29, sp
    c258:	xpaclri
    c25c:	stp	x19, x20, [sp, #16]
    c260:	mov	x19, x0
    c264:	mov	x20, x2
    c268:	mov	x2, #0x3c0                 	// #960
    c26c:	stp	x21, x22, [sp, #32]
    c270:	mov	x22, x30
    c274:	mov	x21, x1
    c278:	mov	w1, #0x0                   	// #0
    c27c:	str	x23, [sp, #48]
    c280:	bl	2be0 <memset@plt>
    c284:	mov	x0, #0x4000000000000000    	// #4611686018427387904
    c288:	str	x22, [x19, #792]
    c28c:	str	x0, [x19, #832]
    c290:	add	x22, sp, #0x50
    c294:	mov	x1, x22
    c298:	mov	x0, x19
    c29c:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    c2a0:	cbz	w0, c2a8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1124>
    c2a4:	bl	2c90 <abort@plt>
    c2a8:	adrp	x0, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    c2ac:	adrp	x23, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    c2b0:	ldr	x0, [x0, #4032]
    c2b4:	cbnz	x0, c2c8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1144>
    c2b8:	ldrb	w0, [x23, #468]
    c2bc:	cbnz	w0, c2e0 <_Unwind_GetTextRelBase@@GCC_3.0+0x115c>
    c2c0:	bl	ade0 <__enable_execute_stack@@GCC_3.4.2+0x94>
    c2c4:	b	c2e0 <_Unwind_GetTextRelBase@@GCC_3.0+0x115c>
    c2c8:	add	x0, x23, #0x1d4
    c2cc:	adrp	x1, a000 <__trunctfsf2@@GCC_3.0+0x4>
    c2d0:	add	x0, x0, #0x64
    c2d4:	add	x1, x1, #0xde0
    c2d8:	bl	2cb0 <pthread_once@plt>
    c2dc:	cbnz	w0, c2b8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1134>
    c2e0:	add	x2, sp, #0x48
    c2e4:	mov	x1, x21
    c2e8:	mov	x0, x19
    c2ec:	bl	af38 <__enable_execute_stack@@GCC_3.4.2+0x1ec>
    c2f0:	mov	w0, #0x1                   	// #1
    c2f4:	str	w0, [sp, #1680]
    c2f8:	mov	x0, #0x1f                  	// #31
    c2fc:	mov	x1, x22
    c300:	str	xzr, [sp, #1656]
    c304:	str	x0, [sp, #1664]
    c308:	mov	x0, x19
    c30c:	bl	c028 <_Unwind_GetTextRelBase@@GCC_3.0+0xea4>
    c310:	mov	x30, x20
    c314:	xpaclri
    c318:	ldp	x21, x22, [sp, #32]
    c31c:	ldr	x23, [sp, #48]
    c320:	str	x30, [x19, #792]
    c324:	ldp	x29, x30, [sp]
    c328:	ldp	x19, x20, [sp, #16]
    c32c:	add	sp, sp, #0x6d0
    c330:	ret
    c334:	stp	x29, x30, [sp, #-32]!
    c338:	mov	x29, sp
    c33c:	stp	x19, x20, [sp, #16]
    c340:	mov	x20, x1
    c344:	mov	x19, x0
    c348:	bl	c028 <_Unwind_GetTextRelBase@@GCC_3.0+0xea4>
    c34c:	ldr	x1, [x20, #1640]
    c350:	add	x0, x20, x1, lsl #4
    c354:	ldr	w0, [x0, #8]
    c358:	cmp	w0, #0x6
    c35c:	b.ne	c370 <_Unwind_GetTextRelBase@@GCC_3.0+0x11ec>  // b.any
    c360:	str	xzr, [x19, #792]
    c364:	ldp	x19, x20, [sp, #16]
    c368:	ldp	x29, x30, [sp], #32
    c36c:	ret
    c370:	mov	x0, x19
    c374:	bl	af6c <_Unwind_GetGR@@GCC_3.0>
    c378:	mov	x17, x0
    c37c:	ldr	x0, [x20, #544]
    c380:	str	x17, [x19, #792]
    c384:	tbz	w0, #0, c390 <_Unwind_GetTextRelBase@@GCC_3.0+0x120c>
    c388:	ldr	x16, [x19, #784]
    c38c:	autia1716
    c390:	str	x17, [x19, #792]
    c394:	b	c364 <_Unwind_GetTextRelBase@@GCC_3.0+0x11e0>
    c398:	sub	sp, sp, #0x6d0
    c39c:	stp	x29, x30, [sp]
    c3a0:	mov	x29, sp
    c3a4:	stp	x19, x20, [sp, #16]
    c3a8:	mov	x20, x0
    c3ac:	mov	x19, x1
    c3b0:	stp	x21, x22, [sp, #32]
    c3b4:	mov	x22, x2
    c3b8:	str	x25, [sp, #64]
    c3bc:	add	x25, sp, #0x50
    c3c0:	stp	x23, x24, [sp, #48]
    c3c4:	mov	x23, #0x1                   	// #1
    c3c8:	mov	x1, x25
    c3cc:	mov	x0, x19
    c3d0:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    c3d4:	mov	w24, w0
    c3d8:	mov	x0, x19
    c3dc:	bl	2bd0 <_Unwind_GetCFA@plt>
    c3e0:	ldr	x1, [x19, #832]
    c3e4:	sub	x1, x0, x1, lsr #63
    c3e8:	ldr	x0, [x20, #24]
    c3ec:	cmp	x0, x1
    c3f0:	cset	w21, eq  // eq = none
    c3f4:	lsl	w21, w21, #2
    c3f8:	cbnz	w24, c434 <_Unwind_GetTextRelBase@@GCC_3.0+0x12b0>
    c3fc:	ldr	x5, [sp, #1696]
    c400:	cbnz	x5, c40c <_Unwind_GetTextRelBase@@GCC_3.0+0x1288>
    c404:	cbz	w21, c454 <_Unwind_GetTextRelBase@@GCC_3.0+0x12d0>
    c408:	bl	2c90 <abort@plt>
    c40c:	ldr	x2, [x20]
    c410:	mov	x4, x19
    c414:	mov	x3, x20
    c418:	orr	w1, w21, #0x2
    c41c:	mov	w0, #0x1                   	// #1
    c420:	blr	x5
    c424:	cmp	w0, #0x7
    c428:	b.eq	c468 <_Unwind_GetTextRelBase@@GCC_3.0+0x12e4>  // b.none
    c42c:	cmp	w0, #0x8
    c430:	b.eq	c404 <_Unwind_GetTextRelBase@@GCC_3.0+0x1280>  // b.none
    c434:	mov	w0, #0x2                   	// #2
    c438:	ldp	x29, x30, [sp]
    c43c:	ldp	x19, x20, [sp, #16]
    c440:	ldp	x21, x22, [sp, #32]
    c444:	ldp	x23, x24, [sp, #48]
    c448:	ldr	x25, [sp, #64]
    c44c:	add	sp, sp, #0x6d0
    c450:	ret
    c454:	mov	x1, x25
    c458:	mov	x0, x19
    c45c:	add	x23, x23, #0x1
    c460:	bl	c334 <_Unwind_GetTextRelBase@@GCC_3.0+0x11b0>
    c464:	b	c3c8 <_Unwind_GetTextRelBase@@GCC_3.0+0x1244>
    c468:	str	x23, [x22]
    c46c:	b	c438 <_Unwind_GetTextRelBase@@GCC_3.0+0x12b4>
    c470:	sub	sp, sp, #0x6e0
    c474:	stp	x29, x30, [sp]
    c478:	mov	x29, sp
    c47c:	stp	x23, x24, [sp, #48]
    c480:	ldp	x23, x24, [x0, #16]
    c484:	stp	x19, x20, [sp, #16]
    c488:	mov	x20, x2
    c48c:	stp	x21, x22, [sp, #32]
    c490:	add	x22, sp, #0x60
    c494:	mov	x21, #0x1                   	// #1
    c498:	stp	x27, x28, [sp, #80]
    c49c:	mov	x27, x0
    c4a0:	mov	x28, x1
    c4a4:	stp	x25, x26, [sp, #64]
    c4a8:	mov	w25, #0xa                   	// #10
    c4ac:	mov	w26, #0x1a                  	// #26
    c4b0:	mov	x1, x22
    c4b4:	mov	x0, x28
    c4b8:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    c4bc:	cmp	w0, #0x0
    c4c0:	mov	w19, w0
    c4c4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
    c4c8:	b.ne	c540 <_Unwind_GetTextRelBase@@GCC_3.0+0x13bc>  // b.any
    c4cc:	ldr	x2, [x27]
    c4d0:	cmp	w0, #0x5
    c4d4:	mov	x5, x24
    c4d8:	mov	x4, x28
    c4dc:	mov	x3, x27
    c4e0:	csel	w1, w25, w26, ne  // ne = any
    c4e4:	mov	w0, #0x1                   	// #1
    c4e8:	blr	x23
    c4ec:	cbnz	w0, c540 <_Unwind_GetTextRelBase@@GCC_3.0+0x13bc>
    c4f0:	cmp	w19, #0x5
    c4f4:	b.eq	c568 <_Unwind_GetTextRelBase@@GCC_3.0+0x13e4>  // b.none
    c4f8:	ldr	x5, [sp, #1712]
    c4fc:	cbnz	x5, c514 <_Unwind_GetTextRelBase@@GCC_3.0+0x1390>
    c500:	mov	x1, x22
    c504:	mov	x0, x28
    c508:	add	x21, x21, #0x1
    c50c:	bl	c334 <_Unwind_GetTextRelBase@@GCC_3.0+0x11b0>
    c510:	b	c4b0 <_Unwind_GetTextRelBase@@GCC_3.0+0x132c>
    c514:	ldr	x2, [x27]
    c518:	mov	x4, x28
    c51c:	mov	x3, x27
    c520:	mov	w1, #0xa                   	// #10
    c524:	mov	w0, #0x1                   	// #1
    c528:	blr	x5
    c52c:	mov	w19, w0
    c530:	cmp	w0, #0x7
    c534:	b.eq	c568 <_Unwind_GetTextRelBase@@GCC_3.0+0x13e4>  // b.none
    c538:	cmp	w0, #0x8
    c53c:	b.eq	c500 <_Unwind_GetTextRelBase@@GCC_3.0+0x137c>  // b.none
    c540:	mov	w19, #0x2                   	// #2
    c544:	mov	w0, w19
    c548:	ldp	x29, x30, [sp]
    c54c:	ldp	x19, x20, [sp, #16]
    c550:	ldp	x21, x22, [sp, #32]
    c554:	ldp	x23, x24, [sp, #48]
    c558:	ldp	x25, x26, [sp, #64]
    c55c:	ldp	x27, x28, [sp, #80]
    c560:	add	sp, sp, #0x6e0
    c564:	ret
    c568:	str	x21, [x20]
    c56c:	b	c544 <_Unwind_GetTextRelBase@@GCC_3.0+0x13c0>

000000000000c570 <__frame_state_for@@GLIBC_2.0>:
    c570:	sub	sp, sp, #0xa60
    c574:	mov	x2, #0x3c0                 	// #960
    c578:	add	x3, sp, #0x20
    c57c:	stp	x29, x30, [sp]
    c580:	mov	x29, sp
    c584:	stp	x19, x20, [sp, #16]
    c588:	mov	x20, x0
    c58c:	mov	x19, x1
    c590:	mov	x0, x3
    c594:	mov	w1, #0x0                   	// #0
    c598:	bl	2be0 <memset@plt>
    c59c:	mov	x3, x0
    c5a0:	add	x20, x20, #0x1
    c5a4:	mov	x0, #0x4000000000000000    	// #4611686018427387904
    c5a8:	str	x20, [sp, #824]
    c5ac:	add	x20, sp, #0x3e0
    c5b0:	mov	x1, x20
    c5b4:	str	x0, [sp, #864]
    c5b8:	mov	x0, x3
    c5bc:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    c5c0:	cbnz	w0, c658 <__frame_state_for@@GLIBC_2.0+0xe8>
    c5c4:	ldr	w0, [sp, #2592]
    c5c8:	cmp	w0, #0x2
    c5cc:	b.eq	c658 <__frame_state_for@@GLIBC_2.0+0xe8>  // b.none
    c5d0:	mov	x1, x20
    c5d4:	add	x2, x19, #0x334
    c5d8:	add	x0, x19, #0x20
    c5dc:	add	x4, x19, #0x330
    c5e0:	ldrb	w3, [x1, #8]
    c5e4:	strb	w3, [x2]
    c5e8:	cmp	w3, #0x1
    c5ec:	b.eq	c5f8 <__frame_state_for@@GLIBC_2.0+0x88>  // b.none
    c5f0:	cmp	w3, #0x2
    c5f4:	b.ne	c650 <__frame_state_for@@GLIBC_2.0+0xe0>  // b.any
    c5f8:	ldr	x3, [x1]
    c5fc:	str	x3, [x0]
    c600:	add	x0, x0, #0x8
    c604:	add	x1, x1, #0x10
    c608:	add	x2, x2, #0x1
    c60c:	cmp	x0, x4
    c610:	b.ne	c5e0 <__frame_state_for@@GLIBC_2.0+0x70>  // b.any
    c614:	ldr	x0, [sp, #2568]
    c618:	str	x0, [x19, #16]
    c61c:	ldr	x0, [sp, #2576]
    c620:	strh	w0, [x19, #816]
    c624:	ldr	x0, [sp, #2632]
    c628:	strh	w0, [x19, #818]
    c62c:	ldr	x0, [sp, #880]
    c630:	str	x0, [x19, #24]
    c634:	ldr	x0, [sp, #2648]
    c638:	str	x0, [x19, #8]
    c63c:	mov	x0, x19
    c640:	ldp	x29, x30, [sp]
    c644:	ldp	x19, x20, [sp, #16]
    c648:	add	sp, sp, #0xa60
    c64c:	ret
    c650:	str	xzr, [x0]
    c654:	b	c600 <__frame_state_for@@GLIBC_2.0+0x90>
    c658:	mov	x19, #0x0                   	// #0
    c65c:	b	c63c <__frame_state_for@@GLIBC_2.0+0xcc>
    c660:	ret

000000000000c664 <_Unwind_RaiseException@@GCC_3.0>:
    c664:	sub	sp, sp, #0xec0
    c668:	stp	x29, x30, [sp]
    c66c:	mov	x29, sp
    c670:	stp	x21, x22, [sp, #64]
    c674:	add	x22, sp, #0x840
    c678:	add	x21, sp, #0xc0
    c67c:	stp	x0, x1, [sp, #16]
    c680:	add	x1, sp, #0xec0
    c684:	stp	x2, x3, [sp, #32]
    c688:	mov	x2, x30
    c68c:	stp	x19, x20, [sp, #48]
    c690:	mov	x20, x0
    c694:	add	x19, sp, #0x480
    c698:	mov	x0, x21
    c69c:	stp	x23, x24, [sp, #80]
    c6a0:	stp	x25, x26, [sp, #96]
    c6a4:	stp	x27, x28, [sp, #112]
    c6a8:	stp	d8, d9, [sp, #128]
    c6ac:	stp	d10, d11, [sp, #144]
    c6b0:	stp	d12, d13, [sp, #160]
    c6b4:	stp	d14, d15, [sp, #176]
    c6b8:	bl	c24c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c8>
    c6bc:	mov	x1, x21
    c6c0:	mov	x0, x19
    c6c4:	mov	x2, #0x3c0                 	// #960
    c6c8:	bl	2ad0 <memcpy@plt>
    c6cc:	mov	x1, x22
    c6d0:	mov	x0, x19
    c6d4:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    c6d8:	cmp	w0, #0x5
    c6dc:	b.eq	c6e8 <_Unwind_RaiseException@@GCC_3.0+0x84>  // b.none
    c6e0:	cbz	w0, c6f0 <_Unwind_RaiseException@@GCC_3.0+0x8c>
    c6e4:	mov	w0, #0x3                   	// #3
    c6e8:	mov	x4, #0x0                   	// #0
    c6ec:	b	c7ac <_Unwind_RaiseException@@GCC_3.0+0x148>
    c6f0:	ldr	x5, [sp, #3728]
    c6f4:	cbnz	x5, c708 <_Unwind_RaiseException@@GCC_3.0+0xa4>
    c6f8:	mov	x1, x22
    c6fc:	mov	x0, x19
    c700:	bl	c334 <_Unwind_GetTextRelBase@@GCC_3.0+0x11b0>
    c704:	b	c6cc <_Unwind_RaiseException@@GCC_3.0+0x68>
    c708:	ldr	x2, [x20]
    c70c:	mov	w1, #0x1                   	// #1
    c710:	mov	x4, x19
    c714:	mov	x3, x20
    c718:	mov	w0, w1
    c71c:	blr	x5
    c720:	cmp	w0, #0x6
    c724:	b.eq	c734 <_Unwind_RaiseException@@GCC_3.0+0xd0>  // b.none
    c728:	cmp	w0, #0x8
    c72c:	b.eq	c6f8 <_Unwind_RaiseException@@GCC_3.0+0x94>  // b.none
    c730:	b	c6e4 <_Unwind_RaiseException@@GCC_3.0+0x80>
    c734:	str	xzr, [x20, #16]
    c738:	mov	x0, x19
    c73c:	bl	2bd0 <_Unwind_GetCFA@plt>
    c740:	ldr	x1, [sp, #1984]
    c744:	mov	x2, #0x3c0                 	// #960
    c748:	sub	x1, x0, x1, lsr #63
    c74c:	str	x1, [x20, #24]
    c750:	mov	x0, x19
    c754:	mov	x1, x21
    c758:	bl	2ad0 <memcpy@plt>
    c75c:	mov	x2, x22
    c760:	mov	x1, x19
    c764:	mov	x0, x20
    c768:	bl	c398 <_Unwind_GetTextRelBase@@GCC_3.0+0x1214>
    c76c:	cmp	w0, #0x7
    c770:	b.ne	c6e8 <_Unwind_RaiseException@@GCC_3.0+0x84>  // b.any
    c774:	mov	x1, x19
    c778:	mov	x0, x21
    c77c:	bl	afd0 <_Unwind_GetGR@@GCC_3.0+0x64>
    c780:	mov	x4, x0
    c784:	ldr	x0, [sp, #1024]
    c788:	ldr	x1, [sp, #1944]
    c78c:	tbz	x0, #61, c7a0 <_Unwind_RaiseException@@GCC_3.0+0x13c>
    c790:	mov	x17, x1
    c794:	ldr	x16, [sp, #976]
    c798:	pacia1716
    c79c:	mov	x1, x17
    c7a0:	ldr	x0, [sp, #1936]
    c7a4:	bl	c660 <__frame_state_for@@GLIBC_2.0+0xf0>
    c7a8:	str	x1, [x29, #8]
    c7ac:	ldp	x29, x30, [sp]
    c7b0:	ldp	x0, x1, [sp, #16]
    c7b4:	ldp	x2, x3, [sp, #32]
    c7b8:	ldp	x19, x20, [sp, #48]
    c7bc:	ldp	x21, x22, [sp, #64]
    c7c0:	ldp	x23, x24, [sp, #80]
    c7c4:	ldp	x25, x26, [sp, #96]
    c7c8:	ldp	x27, x28, [sp, #112]
    c7cc:	ldp	d8, d9, [sp, #128]
    c7d0:	ldp	d10, d11, [sp, #144]
    c7d4:	ldp	d12, d13, [sp, #160]
    c7d8:	ldp	d14, d15, [sp, #176]
    c7dc:	add	sp, sp, #0xec0
    c7e0:	add	sp, sp, x4
    c7e4:	ret

000000000000c7e8 <_Unwind_ForcedUnwind@@GCC_3.0>:
    c7e8:	sub	sp, sp, #0x850
    c7ec:	stp	x29, x30, [sp]
    c7f0:	mov	x29, sp
    c7f4:	stp	x19, x20, [sp, #48]
    c7f8:	mov	x19, x0
    c7fc:	add	x20, sp, #0xd0
    c800:	stp	x0, x1, [sp, #16]
    c804:	mov	x0, x20
    c808:	stp	x2, x3, [sp, #32]
    c80c:	stp	x21, x22, [sp, #64]
    c810:	mov	x22, x2
    c814:	add	x21, sp, #0x490
    c818:	mov	x2, x30
    c81c:	stp	x23, x24, [sp, #80]
    c820:	mov	x23, x1
    c824:	add	x1, sp, #0x850
    c828:	stp	x25, x26, [sp, #96]
    c82c:	stp	x27, x28, [sp, #112]
    c830:	stp	d8, d9, [sp, #128]
    c834:	stp	d10, d11, [sp, #144]
    c838:	stp	d12, d13, [sp, #160]
    c83c:	stp	d14, d15, [sp, #176]
    c840:	bl	c24c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c8>
    c844:	mov	x1, x20
    c848:	mov	x2, #0x3c0                 	// #960
    c84c:	mov	x0, x21
    c850:	bl	2ad0 <memcpy@plt>
    c854:	stp	x23, x22, [x19, #16]
    c858:	add	x2, sp, #0xc8
    c85c:	mov	x1, x21
    c860:	mov	x0, x19
    c864:	bl	c470 <_Unwind_GetTextRelBase@@GCC_3.0+0x12ec>
    c868:	cmp	w0, #0x7
    c86c:	b.ne	c8e4 <_Unwind_ForcedUnwind@@GCC_3.0+0xfc>  // b.any
    c870:	mov	x1, x21
    c874:	mov	x0, x20
    c878:	bl	afd0 <_Unwind_GetGR@@GCC_3.0+0x64>
    c87c:	mov	x4, x0
    c880:	ldr	x0, [sp, #1040]
    c884:	ldr	x1, [sp, #1960]
    c888:	tbz	x0, #61, c89c <_Unwind_ForcedUnwind@@GCC_3.0+0xb4>
    c88c:	mov	x17, x1
    c890:	ldr	x16, [sp, #992]
    c894:	pacia1716
    c898:	mov	x1, x17
    c89c:	ldr	x0, [sp, #1952]
    c8a0:	bl	c660 <__frame_state_for@@GLIBC_2.0+0xf0>
    c8a4:	str	x1, [x29, #8]
    c8a8:	ldp	x29, x30, [sp]
    c8ac:	ldp	x0, x1, [sp, #16]
    c8b0:	ldp	x2, x3, [sp, #32]
    c8b4:	ldp	x19, x20, [sp, #48]
    c8b8:	ldp	x21, x22, [sp, #64]
    c8bc:	ldp	x23, x24, [sp, #80]
    c8c0:	ldp	x25, x26, [sp, #96]
    c8c4:	ldp	x27, x28, [sp, #112]
    c8c8:	ldp	d8, d9, [sp, #128]
    c8cc:	ldp	d10, d11, [sp, #144]
    c8d0:	ldp	d12, d13, [sp, #160]
    c8d4:	ldp	d14, d15, [sp, #176]
    c8d8:	add	sp, sp, #0x850
    c8dc:	add	sp, sp, x4
    c8e0:	ret
    c8e4:	mov	x4, #0x0                   	// #0
    c8e8:	b	c8a8 <_Unwind_ForcedUnwind@@GCC_3.0+0xc0>

000000000000c8ec <_Unwind_Resume@@GCC_3.0>:
    c8ec:	sub	sp, sp, #0x850
    c8f0:	stp	x29, x30, [sp]
    c8f4:	mov	x29, sp
    c8f8:	stp	x19, x20, [sp, #48]
    c8fc:	mov	x19, x0
    c900:	add	x20, sp, #0x490
    c904:	stp	x21, x22, [sp, #64]
    c908:	add	x21, sp, #0xd0
    c90c:	stp	x0, x1, [sp, #16]
    c910:	add	x1, sp, #0x850
    c914:	mov	x0, x21
    c918:	stp	x2, x3, [sp, #32]
    c91c:	mov	x2, x30
    c920:	stp	x23, x24, [sp, #80]
    c924:	stp	x25, x26, [sp, #96]
    c928:	stp	x27, x28, [sp, #112]
    c92c:	stp	d8, d9, [sp, #128]
    c930:	stp	d10, d11, [sp, #144]
    c934:	stp	d12, d13, [sp, #160]
    c938:	stp	d14, d15, [sp, #176]
    c93c:	bl	c24c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c8>
    c940:	mov	x1, x21
    c944:	mov	x2, #0x3c0                 	// #960
    c948:	mov	x0, x20
    c94c:	bl	2ad0 <memcpy@plt>
    c950:	ldr	x0, [x19, #16]
    c954:	add	x2, sp, #0xc8
    c958:	mov	x1, x20
    c95c:	cbnz	x0, c974 <_Unwind_Resume@@GCC_3.0+0x88>
    c960:	mov	x0, x19
    c964:	bl	c398 <_Unwind_GetTextRelBase@@GCC_3.0+0x1214>
    c968:	cmp	w0, #0x7
    c96c:	b.eq	c980 <_Unwind_Resume@@GCC_3.0+0x94>  // b.none
    c970:	bl	2c90 <abort@plt>
    c974:	mov	x0, x19
    c978:	bl	c470 <_Unwind_GetTextRelBase@@GCC_3.0+0x12ec>
    c97c:	b	c968 <_Unwind_Resume@@GCC_3.0+0x7c>
    c980:	mov	x1, x20
    c984:	mov	x0, x21
    c988:	bl	afd0 <_Unwind_GetGR@@GCC_3.0+0x64>
    c98c:	mov	x4, x0
    c990:	ldr	x0, [sp, #1040]
    c994:	ldr	x1, [sp, #1960]
    c998:	tbz	x0, #61, c9ac <_Unwind_Resume@@GCC_3.0+0xc0>
    c99c:	mov	x17, x1
    c9a0:	ldr	x16, [sp, #992]
    c9a4:	pacia1716
    c9a8:	mov	x1, x17
    c9ac:	ldr	x0, [sp, #1952]
    c9b0:	bl	c660 <__frame_state_for@@GLIBC_2.0+0xf0>
    c9b4:	str	x1, [x29, #8]
    c9b8:	ldp	x29, x30, [sp]
    c9bc:	ldp	x0, x1, [sp, #16]
    c9c0:	ldp	x2, x3, [sp, #32]
    c9c4:	ldp	x19, x20, [sp, #48]
    c9c8:	ldp	x21, x22, [sp, #64]
    c9cc:	ldp	x23, x24, [sp, #80]
    c9d0:	ldp	x25, x26, [sp, #96]
    c9d4:	ldp	x27, x28, [sp, #112]
    c9d8:	ldp	d8, d9, [sp, #128]
    c9dc:	ldp	d10, d11, [sp, #144]
    c9e0:	ldp	d12, d13, [sp, #160]
    c9e4:	ldp	d14, d15, [sp, #176]
    c9e8:	add	sp, sp, #0x850
    c9ec:	add	sp, sp, x4
    c9f0:	ret

000000000000c9f4 <_Unwind_Resume_or_Rethrow@@GCC_3.3>:
    c9f4:	sub	sp, sp, #0x850
    c9f8:	stp	x29, x30, [sp]
    c9fc:	mov	x29, sp
    ca00:	stp	x0, x1, [sp, #16]
    ca04:	ldr	x1, [x0, #16]
    ca08:	stp	x2, x3, [sp, #32]
    ca0c:	mov	x2, x30
    ca10:	stp	x19, x20, [sp, #48]
    ca14:	mov	x19, x0
    ca18:	stp	x21, x22, [sp, #64]
    ca1c:	stp	x23, x24, [sp, #80]
    ca20:	stp	x25, x26, [sp, #96]
    ca24:	stp	x27, x28, [sp, #112]
    ca28:	stp	d8, d9, [sp, #128]
    ca2c:	stp	d10, d11, [sp, #144]
    ca30:	stp	d12, d13, [sp, #160]
    ca34:	stp	d14, d15, [sp, #176]
    ca38:	cbnz	x1, ca80 <_Unwind_Resume_or_Rethrow@@GCC_3.3+0x8c>
    ca3c:	bl	2b00 <_Unwind_RaiseException@plt>
    ca40:	mov	x4, #0x0                   	// #0
    ca44:	ldp	x29, x30, [sp]
    ca48:	ldp	x0, x1, [sp, #16]
    ca4c:	ldp	x2, x3, [sp, #32]
    ca50:	ldp	x19, x20, [sp, #48]
    ca54:	ldp	x21, x22, [sp, #64]
    ca58:	ldp	x23, x24, [sp, #80]
    ca5c:	ldp	x25, x26, [sp, #96]
    ca60:	ldp	x27, x28, [sp, #112]
    ca64:	ldp	d8, d9, [sp, #128]
    ca68:	ldp	d10, d11, [sp, #144]
    ca6c:	ldp	d12, d13, [sp, #160]
    ca70:	ldp	d14, d15, [sp, #176]
    ca74:	add	sp, sp, #0x850
    ca78:	add	sp, sp, x4
    ca7c:	ret
    ca80:	add	x20, sp, #0xd0
    ca84:	add	x1, sp, #0x850
    ca88:	mov	x0, x20
    ca8c:	add	x21, sp, #0x490
    ca90:	bl	c24c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c8>
    ca94:	mov	x1, x20
    ca98:	mov	x2, #0x3c0                 	// #960
    ca9c:	mov	x0, x21
    caa0:	bl	2ad0 <memcpy@plt>
    caa4:	add	x2, sp, #0xc8
    caa8:	mov	x1, x21
    caac:	mov	x0, x19
    cab0:	bl	c470 <_Unwind_GetTextRelBase@@GCC_3.0+0x12ec>
    cab4:	cmp	w0, #0x7
    cab8:	b.eq	cac0 <_Unwind_Resume_or_Rethrow@@GCC_3.3+0xcc>  // b.none
    cabc:	bl	2c90 <abort@plt>
    cac0:	mov	x1, x21
    cac4:	mov	x0, x20
    cac8:	bl	afd0 <_Unwind_GetGR@@GCC_3.0+0x64>
    cacc:	mov	x4, x0
    cad0:	ldr	x0, [sp, #1040]
    cad4:	ldr	x1, [sp, #1960]
    cad8:	tbz	x0, #61, caec <_Unwind_Resume_or_Rethrow@@GCC_3.3+0xf8>
    cadc:	mov	x17, x1
    cae0:	ldr	x16, [sp, #992]
    cae4:	pacia1716
    cae8:	mov	x1, x17
    caec:	ldr	x0, [sp, #1952]
    caf0:	bl	c660 <__frame_state_for@@GLIBC_2.0+0xf0>
    caf4:	str	x1, [x29, #8]
    caf8:	b	ca44 <_Unwind_Resume_or_Rethrow@@GCC_3.3+0x50>

000000000000cafc <_Unwind_DeleteException@@GCC_3.0>:
    cafc:	ldr	x2, [x0, #8]
    cb00:	mov	x1, x0
    cb04:	cbz	x2, cb14 <_Unwind_DeleteException@@GCC_3.0+0x18>
    cb08:	mov	x16, x2
    cb0c:	mov	w0, #0x1                   	// #1
    cb10:	br	x16
    cb14:	ret

000000000000cb18 <_Unwind_Backtrace@@GCC_3.3>:
    cb18:	sub	sp, sp, #0xae0
    cb1c:	mov	x2, x30
    cb20:	stp	x29, x30, [sp]
    cb24:	mov	x29, sp
    cb28:	stp	x23, x24, [sp, #48]
    cb2c:	add	x23, sp, #0x460
    cb30:	stp	x19, x20, [sp, #16]
    cb34:	add	x20, sp, #0xa0
    cb38:	stp	x21, x22, [sp, #32]
    cb3c:	mov	x21, x0
    cb40:	mov	x22, x1
    cb44:	mov	x0, x20
    cb48:	add	x1, sp, #0xae0
    cb4c:	stp	x25, x26, [sp, #64]
    cb50:	stp	x27, x28, [sp, #80]
    cb54:	stp	d8, d9, [sp, #96]
    cb58:	stp	d10, d11, [sp, #112]
    cb5c:	stp	d12, d13, [sp, #128]
    cb60:	stp	d14, d15, [sp, #144]
    cb64:	bl	c24c <_Unwind_GetTextRelBase@@GCC_3.0+0x10c8>
    cb68:	mov	x1, x23
    cb6c:	mov	x0, x20
    cb70:	bl	b7ac <_Unwind_GetTextRelBase@@GCC_3.0+0x628>
    cb74:	cmp	w0, #0x0
    cb78:	mov	w19, w0
    cb7c:	ccmp	w0, #0x5, #0x4, ne  // ne = any
    cb80:	b.ne	cbac <_Unwind_Backtrace@@GCC_3.3+0x94>  // b.any
    cb84:	mov	x1, x22
    cb88:	mov	x0, x20
    cb8c:	blr	x21
    cb90:	cbnz	w0, cbac <_Unwind_Backtrace@@GCC_3.3+0x94>
    cb94:	cmp	w19, #0x5
    cb98:	b.eq	cbb0 <_Unwind_Backtrace@@GCC_3.3+0x98>  // b.none
    cb9c:	mov	x1, x23
    cba0:	mov	x0, x20
    cba4:	bl	c334 <_Unwind_GetTextRelBase@@GCC_3.0+0x11b0>
    cba8:	b	cb68 <_Unwind_Backtrace@@GCC_3.3+0x50>
    cbac:	mov	w19, #0x3                   	// #3
    cbb0:	mov	w0, w19
    cbb4:	ldp	x29, x30, [sp]
    cbb8:	ldp	x19, x20, [sp, #16]
    cbbc:	ldp	x21, x22, [sp, #32]
    cbc0:	ldp	x23, x24, [sp, #48]
    cbc4:	ldp	x25, x26, [sp, #64]
    cbc8:	ldp	x27, x28, [sp, #80]
    cbcc:	ldp	d8, d9, [sp, #96]
    cbd0:	ldp	d10, d11, [sp, #112]
    cbd4:	ldp	d12, d13, [sp, #128]
    cbd8:	ldp	d14, d15, [sp, #144]
    cbdc:	add	sp, sp, #0xae0
    cbe0:	ret
    cbe4:	mov	x2, #0x0                   	// #0
    cbe8:	mov	w3, #0x0                   	// #0
    cbec:	ldrb	w5, [x0], #1
    cbf0:	and	x4, x5, #0x7f
    cbf4:	lsl	x4, x4, x3
    cbf8:	add	w3, w3, #0x7
    cbfc:	orr	x2, x2, x4
    cc00:	tbnz	w5, #7, cbec <_Unwind_Backtrace@@GCC_3.3+0xd4>
    cc04:	str	x2, [x1]
    cc08:	ret
    cc0c:	mov	x2, #0x0                   	// #0
    cc10:	mov	w3, #0x0                   	// #0
    cc14:	ldrb	w4, [x0], #1
    cc18:	and	x5, x4, #0x7f
    cc1c:	lsl	x5, x5, x3
    cc20:	add	w3, w3, #0x7
    cc24:	orr	x2, x2, x5
    cc28:	tbnz	w4, #7, cc14 <_Unwind_Backtrace@@GCC_3.3+0xfc>
    cc2c:	cmp	w3, #0x3f
    cc30:	b.hi	cc44 <_Unwind_Backtrace@@GCC_3.3+0x12c>  // b.pmore
    cc34:	tbz	w4, #6, cc44 <_Unwind_Backtrace@@GCC_3.3+0x12c>
    cc38:	mov	x4, #0xffffffffffffffff    	// #-1
    cc3c:	lsl	x3, x4, x3
    cc40:	orr	x2, x2, x3
    cc44:	str	x2, [x1]
    cc48:	ret
    cc4c:	ldr	x3, [x1, #8]
    cc50:	ldr	x1, [x2, #8]
    cc54:	cmp	x3, x1
    cc58:	csetm	w0, cc  // cc = lo, ul, last
    cc5c:	csinc	w0, w0, wzr, ls  // ls = plast
    cc60:	ret
    cc64:	stp	x29, x30, [sp, #-80]!
    cc68:	mov	x29, sp
    cc6c:	stp	x19, x20, [sp, #16]
    cc70:	lsl	w19, w3, #1
    cc74:	mov	x20, x2
    cc78:	add	w19, w19, #0x1
    cc7c:	stp	x21, x22, [sp, #32]
    cc80:	mov	w21, w3
    cc84:	mov	w22, w4
    cc88:	stp	x23, x24, [sp, #48]
    cc8c:	mov	x23, x0
    cc90:	mov	x24, x1
    cc94:	str	x25, [sp, #64]
    cc98:	cmp	w19, w22
    cc9c:	b.lt	ccb8 <_Unwind_Backtrace@@GCC_3.3+0x1a0>  // b.tstop
    cca0:	ldp	x19, x20, [sp, #16]
    cca4:	ldp	x21, x22, [sp, #32]
    cca8:	ldp	x23, x24, [sp, #48]
    ccac:	ldr	x25, [sp, #64]
    ccb0:	ldp	x29, x30, [sp], #80
    ccb4:	ret
    ccb8:	add	w25, w19, #0x1
    ccbc:	cmp	w25, w22
    ccc0:	b.ge	cce0 <_Unwind_Backtrace@@GCC_3.3+0x1c8>  // b.tcont
    ccc4:	add	x0, x20, w19, sxtw #3
    ccc8:	ldr	x1, [x20, w19, sxtw #3]
    cccc:	ldr	x2, [x0, #8]
    ccd0:	mov	x0, x23
    ccd4:	blr	x24
    ccd8:	cmp	w0, #0x0
    ccdc:	csel	w19, w19, w25, ge  // ge = tcont
    cce0:	sbfiz	x21, x21, #3, #32
    cce4:	sbfiz	x25, x19, #3, #32
    cce8:	mov	x0, x23
    ccec:	ldr	x2, [x20, x25]
    ccf0:	ldr	x1, [x20, x21]
    ccf4:	blr	x24
    ccf8:	tbz	w0, #31, cca0 <_Unwind_Backtrace@@GCC_3.3+0x188>
    ccfc:	ldr	x1, [x20, x25]
    cd00:	ldr	x0, [x20, x21]
    cd04:	str	x1, [x20, x21]
    cd08:	str	x0, [x20, x25]
    cd0c:	lsl	w0, w19, #1
    cd10:	mov	w21, w19
    cd14:	add	w19, w0, #0x1
    cd18:	b	cc98 <_Unwind_Backtrace@@GCC_3.3+0x180>
    cd1c:	stp	x29, x30, [sp, #-64]!
    cd20:	mov	x29, sp
    cd24:	stp	x19, x20, [sp, #16]
    cd28:	mov	x20, x2
    cd2c:	ldr	x19, [x2, #8]
    cd30:	stp	x21, x22, [sp, #32]
    cd34:	add	x22, x2, #0x10
    cd38:	stp	x23, x24, [sp, #48]
    cd3c:	mov	x23, x0
    cd40:	mov	x24, x1
    cd44:	lsr	x21, x19, #1
    cd48:	sub	w21, w21, #0x1
    cd4c:	tbz	w21, #31, cd74 <_Unwind_Backtrace@@GCC_3.3+0x25c>
    cd50:	sub	w19, w19, #0x1
    cd54:	sxtw	x19, w19
    cd58:	cmp	w19, #0x0
    cd5c:	b.gt	cd90 <_Unwind_Backtrace@@GCC_3.3+0x278>
    cd60:	ldp	x19, x20, [sp, #16]
    cd64:	ldp	x21, x22, [sp, #32]
    cd68:	ldp	x23, x24, [sp, #48]
    cd6c:	ldp	x29, x30, [sp], #64
    cd70:	ret
    cd74:	mov	w4, w19
    cd78:	mov	w3, w21
    cd7c:	mov	x2, x22
    cd80:	mov	x1, x24
    cd84:	mov	x0, x23
    cd88:	bl	cc64 <_Unwind_Backtrace@@GCC_3.3+0x14c>
    cd8c:	b	cd48 <_Unwind_Backtrace@@GCC_3.3+0x230>
    cd90:	ldr	x1, [x22, x19, lsl #3]
    cd94:	mov	w4, w19
    cd98:	ldr	x0, [x20, #16]
    cd9c:	str	x1, [x20, #16]
    cda0:	str	x0, [x22, x19, lsl #3]
    cda4:	mov	x2, x22
    cda8:	mov	x1, x24
    cdac:	mov	x0, x23
    cdb0:	mov	w3, #0x0                   	// #0
    cdb4:	sub	x19, x19, #0x1
    cdb8:	bl	cc64 <_Unwind_Backtrace@@GCC_3.3+0x14c>
    cdbc:	b	cd58 <_Unwind_Backtrace@@GCC_3.3+0x240>
    cdc0:	and	w0, w0, #0xff
    cdc4:	cmp	w0, #0xff
    cdc8:	b.eq	ce0c <_Unwind_Backtrace@@GCC_3.3+0x2f4>  // b.none
    cdcc:	and	w0, w0, #0x7
    cdd0:	cmp	w0, #0x4
    cdd4:	b.hi	ce00 <_Unwind_Backtrace@@GCC_3.3+0x2e8>  // b.pmore
    cdd8:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    cddc:	add	x1, x1, #0xe20
    cde0:	ldrb	w0, [x1, w0, uxtw]
    cde4:	adr	x1, cdf0 <_Unwind_Backtrace@@GCC_3.3+0x2d8>
    cde8:	add	x0, x1, w0, sxtb #2
    cdec:	br	x0
    cdf0:	mov	w0, #0x2                   	// #2
    cdf4:	ret
    cdf8:	mov	w0, #0x4                   	// #4
    cdfc:	ret
    ce00:	stp	x29, x30, [sp, #-16]!
    ce04:	mov	x29, sp
    ce08:	bl	2c90 <abort@plt>
    ce0c:	mov	w0, #0x0                   	// #0
    ce10:	ret
    ce14:	mov	w0, #0x8                   	// #8
    ce18:	ret
    ce1c:	and	w0, w0, #0xff
    ce20:	cmp	w0, #0xff
    ce24:	b.eq	ce74 <_Unwind_Backtrace@@GCC_3.3+0x35c>  // b.none
    ce28:	and	w2, w0, #0x70
    ce2c:	cmp	w2, #0x20
    ce30:	b.eq	ce64 <_Unwind_Backtrace@@GCC_3.3+0x34c>  // b.none
    ce34:	b.hi	ce4c <_Unwind_Backtrace@@GCC_3.3+0x334>  // b.pmore
    ce38:	tst	w0, #0x60
    ce3c:	b.eq	ce74 <_Unwind_Backtrace@@GCC_3.3+0x35c>  // b.none
    ce40:	stp	x29, x30, [sp, #-16]!
    ce44:	mov	x29, sp
    ce48:	bl	2c90 <abort@plt>
    ce4c:	cmp	w2, #0x30
    ce50:	b.eq	ce6c <_Unwind_Backtrace@@GCC_3.3+0x354>  // b.none
    ce54:	cmp	w2, #0x50
    ce58:	mov	x0, #0x0                   	// #0
    ce5c:	b.ne	ce40 <_Unwind_Backtrace@@GCC_3.3+0x328>  // b.any
    ce60:	ret
    ce64:	ldr	x0, [x1, #8]
    ce68:	ret
    ce6c:	ldr	x0, [x1, #16]
    ce70:	ret
    ce74:	mov	x0, #0x0                   	// #0
    ce78:	b	ce60 <_Unwind_Backtrace@@GCC_3.3+0x348>
    ce7c:	and	w0, w0, #0xff
    ce80:	cmp	w0, #0xff
    ce84:	b.eq	ced4 <_Unwind_Backtrace@@GCC_3.3+0x3bc>  // b.none
    ce88:	and	w2, w0, #0x70
    ce8c:	cmp	w2, #0x20
    ce90:	b.eq	cec4 <_Unwind_Backtrace@@GCC_3.3+0x3ac>  // b.none
    ce94:	b.hi	ceac <_Unwind_Backtrace@@GCC_3.3+0x394>  // b.pmore
    ce98:	tst	w0, #0x60
    ce9c:	b.eq	ced4 <_Unwind_Backtrace@@GCC_3.3+0x3bc>  // b.none
    cea0:	stp	x29, x30, [sp, #-16]!
    cea4:	mov	x29, sp
    cea8:	bl	2c90 <abort@plt>
    ceac:	cmp	w2, #0x30
    ceb0:	b.eq	cecc <_Unwind_Backtrace@@GCC_3.3+0x3b4>  // b.none
    ceb4:	cmp	w2, #0x50
    ceb8:	mov	x0, #0x0                   	// #0
    cebc:	b.ne	cea0 <_Unwind_Backtrace@@GCC_3.3+0x388>  // b.any
    cec0:	ret
    cec4:	ldr	x0, [x1, #8]
    cec8:	ret
    cecc:	ldr	x0, [x1, #16]
    ced0:	ret
    ced4:	mov	x0, #0x0                   	// #0
    ced8:	b	cec0 <_Unwind_Backtrace@@GCC_3.3+0x3a8>
    cedc:	and	w8, w0, #0xff
    cee0:	mov	x6, x2
    cee4:	mov	x9, x3
    cee8:	cmp	w8, #0x50
    ceec:	b.ne	cf04 <_Unwind_Backtrace@@GCC_3.3+0x3ec>  // b.any
    cef0:	add	x0, x2, #0x7
    cef4:	and	x0, x0, #0xfffffffffffffff8
    cef8:	ldr	x4, [x0], #8
    cefc:	str	x4, [x3]
    cf00:	ret
    cf04:	stp	x29, x30, [sp, #-32]!
    cf08:	mov	x7, x1
    cf0c:	and	w1, w8, #0xf
    cf10:	mov	x29, sp
    cf14:	cmp	w1, #0xc
    cf18:	b.hi	cfb8 <_Unwind_Backtrace@@GCC_3.3+0x4a0>  // b.pmore
    cf1c:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    cf20:	add	x0, x0, #0xe28
    cf24:	ldrb	w0, [x0, w1, uxtw]
    cf28:	adr	x1, cf34 <_Unwind_Backtrace@@GCC_3.3+0x41c>
    cf2c:	add	x0, x1, w0, sxtb #2
    cf30:	br	x0
    cf34:	add	x1, sp, #0x18
    cf38:	mov	x0, x2
    cf3c:	bl	cbe4 <_Unwind_Backtrace@@GCC_3.3+0xcc>
    cf40:	ldr	x4, [sp, #24]
    cf44:	cbz	x4, cf60 <_Unwind_Backtrace@@GCC_3.3+0x448>
    cf48:	and	w1, w8, #0x70
    cf4c:	cmp	w1, #0x10
    cf50:	csel	x7, x6, x7, eq  // eq = none
    cf54:	add	x4, x4, x7
    cf58:	tbz	w8, #7, cf60 <_Unwind_Backtrace@@GCC_3.3+0x448>
    cf5c:	ldr	x4, [x4]
    cf60:	str	x4, [x9]
    cf64:	ldp	x29, x30, [sp], #32
    cf68:	ret
    cf6c:	add	x1, sp, #0x18
    cf70:	mov	x0, x2
    cf74:	bl	cc0c <_Unwind_Backtrace@@GCC_3.3+0xf4>
    cf78:	b	cf40 <_Unwind_Backtrace@@GCC_3.3+0x428>
    cf7c:	mov	x0, x2
    cf80:	ldrh	w4, [x0], #2
    cf84:	b	cf44 <_Unwind_Backtrace@@GCC_3.3+0x42c>
    cf88:	mov	x0, x2
    cf8c:	ldr	w4, [x0], #4
    cf90:	b	cf44 <_Unwind_Backtrace@@GCC_3.3+0x42c>
    cf94:	mov	x0, x2
    cf98:	ldrsh	x4, [x0], #2
    cf9c:	b	cf44 <_Unwind_Backtrace@@GCC_3.3+0x42c>
    cfa0:	mov	x0, x2
    cfa4:	ldrsw	x4, [x0], #4
    cfa8:	b	cf44 <_Unwind_Backtrace@@GCC_3.3+0x42c>
    cfac:	mov	x0, x2
    cfb0:	ldr	x4, [x0], #8
    cfb4:	b	cf44 <_Unwind_Backtrace@@GCC_3.3+0x42c>
    cfb8:	bl	2c90 <abort@plt>
    cfbc:	stp	x29, x30, [sp, #-80]!
    cfc0:	mov	x29, sp
    cfc4:	stp	x21, x22, [sp, #32]
    cfc8:	mov	x22, x2
    cfcc:	ldrh	w21, [x0, #32]
    cfd0:	stp	x19, x20, [sp, #16]
    cfd4:	mov	x19, x0
    cfd8:	ubfx	x21, x21, #3, #8
    cfdc:	str	x23, [sp, #48]
    cfe0:	mov	w0, w21
    cfe4:	mov	x23, x1
    cfe8:	mov	x1, x19
    cfec:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    cff0:	add	x3, sp, #0x40
    cff4:	mov	x20, x0
    cff8:	add	x2, x23, #0x8
    cffc:	mov	x1, x0
    d000:	mov	w0, w21
    d004:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d008:	ldrh	w0, [x19, #32]
    d00c:	add	x3, sp, #0x48
    d010:	add	x2, x22, #0x8
    d014:	mov	x1, x20
    d018:	ubfx	x0, x0, #3, #8
    d01c:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d020:	ldp	x2, x1, [sp, #64]
    d024:	ldp	x19, x20, [sp, #16]
    d028:	ldp	x21, x22, [sp, #32]
    d02c:	cmp	x2, x1
    d030:	csetm	w0, cc  // cc = lo, ul, last
    d034:	csinc	w0, w0, wzr, ls  // ls = plast
    d038:	ldr	x23, [sp, #48]
    d03c:	ldp	x29, x30, [sp], #80
    d040:	ret
    d044:	stp	x29, x30, [sp, #-64]!
    d048:	mov	x29, sp
    d04c:	stp	x19, x20, [sp, #16]
    d050:	mov	x19, x0
    d054:	add	x20, x0, #0x9
    d058:	mov	x0, x20
    d05c:	bl	2af0 <strlen@plt>
    d060:	ldrb	w2, [x19, #8]
    d064:	add	x1, x0, #0x1
    d068:	add	x0, x20, x1
    d06c:	cmp	w2, #0x3
    d070:	b.ls	d08c <_Unwind_Backtrace@@GCC_3.3+0x574>  // b.plast
    d074:	ldrb	w1, [x20, x1]
    d078:	cmp	w1, #0x8
    d07c:	b.ne	d134 <_Unwind_Backtrace@@GCC_3.3+0x61c>  // b.any
    d080:	ldrb	w1, [x0, #1]
    d084:	cbnz	w1, d134 <_Unwind_Backtrace@@GCC_3.3+0x61c>
    d088:	add	x0, x0, #0x2
    d08c:	ldrb	w1, [x19, #9]
    d090:	cmp	w1, #0x7a
    d094:	b.eq	d0a8 <_Unwind_Backtrace@@GCC_3.3+0x590>  // b.none
    d098:	mov	w0, #0x0                   	// #0
    d09c:	ldp	x19, x20, [sp, #16]
    d0a0:	ldp	x29, x30, [sp], #64
    d0a4:	ret
    d0a8:	add	x6, sp, #0x30
    d0ac:	mov	x1, x6
    d0b0:	bl	cbe4 <_Unwind_Backtrace@@GCC_3.3+0xcc>
    d0b4:	add	x1, sp, #0x38
    d0b8:	bl	cc0c <_Unwind_Backtrace@@GCC_3.3+0xf4>
    d0bc:	ldrb	w2, [x19, #8]
    d0c0:	cmp	w2, #0x1
    d0c4:	b.ne	d0f0 <_Unwind_Backtrace@@GCC_3.3+0x5d8>  // b.any
    d0c8:	add	x0, x0, #0x1
    d0cc:	add	x19, x19, #0xa
    d0d0:	add	x20, sp, #0x28
    d0d4:	mov	x1, x6
    d0d8:	bl	cbe4 <_Unwind_Backtrace@@GCC_3.3+0xcc>
    d0dc:	ldrb	w1, [x19]
    d0e0:	cmp	w1, #0x52
    d0e4:	b.ne	d0fc <_Unwind_Backtrace@@GCC_3.3+0x5e4>  // b.any
    d0e8:	ldrb	w0, [x0]
    d0ec:	b	d09c <_Unwind_Backtrace@@GCC_3.3+0x584>
    d0f0:	mov	x1, x6
    d0f4:	bl	cbe4 <_Unwind_Backtrace@@GCC_3.3+0xcc>
    d0f8:	b	d0cc <_Unwind_Backtrace@@GCC_3.3+0x5b4>
    d0fc:	cmp	w1, #0x50
    d100:	b.ne	d124 <_Unwind_Backtrace@@GCC_3.3+0x60c>  // b.any
    d104:	mov	x2, x0
    d108:	mov	x3, x20
    d10c:	mov	x1, #0x0                   	// #0
    d110:	ldrb	w0, [x2], #1
    d114:	and	w0, w0, #0x7f
    d118:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d11c:	add	x19, x19, #0x1
    d120:	b	d0dc <_Unwind_Backtrace@@GCC_3.3+0x5c4>
    d124:	cmp	w1, #0x4c
    d128:	b.ne	d098 <_Unwind_Backtrace@@GCC_3.3+0x580>  // b.any
    d12c:	add	x0, x0, #0x1
    d130:	b	d11c <_Unwind_Backtrace@@GCC_3.3+0x604>
    d134:	mov	w0, #0xff                  	// #255
    d138:	b	d09c <_Unwind_Backtrace@@GCC_3.3+0x584>
    d13c:	stp	x29, x30, [sp, #-128]!
    d140:	mov	x29, sp
    d144:	stp	x21, x22, [sp, #32]
    d148:	mov	x21, x0
    d14c:	ldrh	w0, [x0, #32]
    d150:	stp	x19, x20, [sp, #16]
    d154:	mov	x19, x1
    d158:	mov	x1, x21
    d15c:	ubfx	x20, x0, #3, #8
    d160:	stp	x23, x24, [sp, #48]
    d164:	mov	x0, x20
    d168:	add	x23, sp, #0x70
    d16c:	add	x24, sp, #0x78
    d170:	stp	x25, x26, [sp, #64]
    d174:	mov	x25, #0xffffffffffffffff    	// #-1
    d178:	mov	x26, #0x1                   	// #1
    d17c:	stp	x27, x28, [sp, #80]
    d180:	str	x2, [sp, #104]
    d184:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d188:	mov	x28, x0
    d18c:	mov	x1, #0x0                   	// #0
    d190:	ldr	w0, [x19]
    d194:	cbnz	w0, d1a0 <_Unwind_Backtrace@@GCC_3.3+0x688>
    d198:	mov	x19, #0x0                   	// #0
    d19c:	b	d1fc <_Unwind_Backtrace@@GCC_3.3+0x6e4>
    d1a0:	ldr	w0, [x19, #4]
    d1a4:	cbz	w0, d28c <_Unwind_Backtrace@@GCC_3.3+0x774>
    d1a8:	ldrb	w2, [x21, #32]
    d1ac:	tbz	w2, #2, d21c <_Unwind_Backtrace@@GCC_3.3+0x704>
    d1b0:	add	x4, x19, #0x4
    d1b4:	sub	x22, x4, w0, sxtw
    d1b8:	cmp	x1, x22
    d1bc:	b.eq	d1d8 <_Unwind_Backtrace@@GCC_3.3+0x6c0>  // b.none
    d1c0:	mov	x0, x22
    d1c4:	bl	d044 <_Unwind_Backtrace@@GCC_3.3+0x52c>
    d1c8:	mov	x1, x21
    d1cc:	mov	w20, w0
    d1d0:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d1d4:	mov	x28, x0
    d1d8:	cbnz	w20, d224 <_Unwind_Backtrace@@GCC_3.3+0x70c>
    d1dc:	ldp	x0, x1, [x19, #8]
    d1e0:	stp	x0, x1, [sp, #112]
    d1e4:	cbz	x0, d278 <_Unwind_Backtrace@@GCC_3.3+0x760>
    d1e8:	ldp	x0, x1, [sp, #104]
    d1ec:	sub	x1, x0, x1
    d1f0:	ldr	x0, [sp, #120]
    d1f4:	cmp	x1, x0
    d1f8:	b.cs	d278 <_Unwind_Backtrace@@GCC_3.3+0x760>  // b.hs, b.nlast
    d1fc:	mov	x0, x19
    d200:	ldp	x19, x20, [sp, #16]
    d204:	ldp	x21, x22, [sp, #32]
    d208:	ldp	x23, x24, [sp, #48]
    d20c:	ldp	x25, x26, [sp, #64]
    d210:	ldp	x27, x28, [sp, #80]
    d214:	ldp	x29, x30, [sp], #128
    d218:	ret
    d21c:	mov	x22, x1
    d220:	b	d1d8 <_Unwind_Backtrace@@GCC_3.3+0x6c0>
    d224:	and	w27, w20, #0xff
    d228:	mov	x3, x23
    d22c:	add	x2, x19, #0x8
    d230:	mov	x1, x28
    d234:	mov	w0, w27
    d238:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d23c:	mov	x3, x24
    d240:	mov	x2, x0
    d244:	mov	x1, #0x0                   	// #0
    d248:	and	w0, w27, #0xf
    d24c:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d250:	mov	w0, w27
    d254:	bl	cdc0 <_Unwind_Backtrace@@GCC_3.3+0x2a8>
    d258:	lsl	w1, w0, #3
    d25c:	cmp	w0, #0x8
    d260:	ldr	x0, [sp, #112]
    d264:	lsl	x1, x26, x1
    d268:	sub	x1, x1, #0x1
    d26c:	csel	x1, x1, x25, cc  // cc = lo, ul, last
    d270:	tst	x1, x0
    d274:	b.ne	d1e8 <_Unwind_Backtrace@@GCC_3.3+0x6d0>  // b.any
    d278:	ldr	w1, [x19]
    d27c:	add	x1, x1, #0x4
    d280:	add	x19, x19, x1
    d284:	mov	x1, x22
    d288:	b	d190 <_Unwind_Backtrace@@GCC_3.3+0x678>
    d28c:	mov	x22, x1
    d290:	b	d278 <_Unwind_Backtrace@@GCC_3.3+0x760>
    d294:	add	x1, x0, #0x4
    d298:	ldrsw	x0, [x0, #4]
    d29c:	sub	x0, x1, x0
    d2a0:	b	d044 <_Unwind_Backtrace@@GCC_3.3+0x52c>
    d2a4:	stp	x29, x30, [sp, #-128]!
    d2a8:	mov	x29, sp
    d2ac:	stp	x19, x20, [sp, #16]
    d2b0:	mov	x19, x2
    d2b4:	ldr	w2, [x2, #40]
    d2b8:	stp	x21, x22, [sp, #32]
    d2bc:	stp	x23, x24, [sp, #48]
    d2c0:	ldr	x7, [x0]
    d2c4:	ldr	x6, [x0, #16]
    d2c8:	cbz	w2, d41c <_Unwind_Backtrace@@GCC_3.3+0x904>
    d2cc:	cmp	x1, #0x2f
    d2d0:	b.ls	d41c <_Unwind_Backtrace@@GCC_3.3+0x904>  // b.plast
    d2d4:	ldp	x5, x4, [x0, #32]
    d2d8:	adrp	x2, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    d2dc:	ldr	x3, [x2, #416]
    d2e0:	cmp	x5, x3
    d2e4:	adrp	x3, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    d2e8:	b.ne	d3d0 <_Unwind_Backtrace@@GCC_3.3+0x8b8>  // b.any
    d2ec:	ldr	x9, [x3, #576]
    d2f0:	add	x8, x3, #0x240
    d2f4:	cmp	x9, x4
    d2f8:	b.ne	d3d0 <_Unwind_Backtrace@@GCC_3.3+0x8b8>  // b.any
    d2fc:	ldr	x8, [x8, #8]
    d300:	mov	x4, #0x0                   	// #0
    d304:	mov	x5, #0x0                   	// #0
    d308:	mov	x2, x8
    d30c:	cbnz	x2, d358 <_Unwind_Backtrace@@GCC_3.3+0x840>
    d310:	mov	w14, #0xe550                	// #58704
    d314:	ldrh	w9, [x0, #24]
    d318:	mov	x10, #0x0                   	// #0
    d31c:	mov	x11, #0x0                   	// #0
    d320:	mov	x12, #0x0                   	// #0
    d324:	mov	x8, #0x0                   	// #0
    d328:	mov	x0, #0x0                   	// #0
    d32c:	movk	w14, #0x6474, lsl #16
    d330:	sub	x9, x9, #0x1
    d334:	cmn	x9, #0x1
    d338:	b.ne	d434 <_Unwind_Backtrace@@GCC_3.3+0x91c>  // b.any
    d33c:	cbnz	x12, d494 <_Unwind_Backtrace@@GCC_3.3+0x97c>
    d340:	mov	w0, #0x0                   	// #0
    d344:	ldp	x19, x20, [sp, #16]
    d348:	ldp	x21, x22, [sp, #32]
    d34c:	ldp	x23, x24, [sp, #48]
    d350:	ldp	x29, x30, [sp], #128
    d354:	ret
    d358:	ldp	x4, x9, [x2]
    d35c:	ldr	x10, [x19]
    d360:	cmp	x10, x4
    d364:	b.cc	d3b0 <_Unwind_Backtrace@@GCC_3.3+0x898>  // b.lo, b.ul, b.last
    d368:	cmp	x10, x9
    d36c:	b.cs	d3b0 <_Unwind_Backtrace@@GCC_3.3+0x898>  // b.hs, b.nlast
    d370:	cmp	x2, x8
    d374:	ldp	x7, x0, [x2, #16]
    d378:	b.eq	d390 <_Unwind_Backtrace@@GCC_3.3+0x878>  // b.none
    d37c:	add	x3, x3, #0x240
    d380:	ldr	x1, [x2, #40]
    d384:	str	x1, [x5, #40]
    d388:	str	x2, [x3, #8]
    d38c:	str	x8, [x2, #40]
    d390:	cbz	x0, d340 <_Unwind_Backtrace@@GCC_3.3+0x828>
    d394:	ldr	x0, [x0, #16]
    d398:	add	x20, x7, x0
    d39c:	ldrb	w0, [x7, x0]
    d3a0:	cmp	w0, #0x1
    d3a4:	b.eq	d4dc <_Unwind_Backtrace@@GCC_3.3+0x9c4>  // b.none
    d3a8:	mov	w0, #0x1                   	// #1
    d3ac:	b	d344 <_Unwind_Backtrace@@GCC_3.3+0x82c>
    d3b0:	orr	x4, x4, x9
    d3b4:	cbz	x4, d42c <_Unwind_Backtrace@@GCC_3.3+0x914>
    d3b8:	ldr	x9, [x2, #40]
    d3bc:	mov	x4, x2
    d3c0:	cmp	x9, #0x0
    d3c4:	csel	x5, x5, x2, eq  // eq = none
    d3c8:	mov	x2, x9
    d3cc:	b	d30c <_Unwind_Backtrace@@GCC_3.3+0x7f4>
    d3d0:	str	x5, [x2, #416]
    d3d4:	add	x2, x3, #0x240
    d3d8:	add	x2, x2, #0x10
    d3dc:	str	x4, [x3, #576]
    d3e0:	mov	w4, #0x8                   	// #8
    d3e4:	mov	x5, x2
    d3e8:	stp	xzr, xzr, [x2]
    d3ec:	add	x2, x2, #0x30
    d3f0:	subs	w4, w4, #0x1
    d3f4:	str	x2, [x5, #40]
    d3f8:	b.ne	d3e4 <_Unwind_Backtrace@@GCC_3.3+0x8cc>  // b.any
    d3fc:	add	x3, x3, #0x240
    d400:	add	x2, x3, #0x10
    d404:	str	xzr, [x3, #392]
    d408:	str	x2, [x3, #8]
    d40c:	str	wzr, [x19, #40]
    d410:	mov	x4, #0x0                   	// #0
    d414:	mov	x5, #0x0                   	// #0
    d418:	b	d310 <_Unwind_Backtrace@@GCC_3.3+0x7f8>
    d41c:	cmp	x1, #0x19
    d420:	b.hi	d410 <_Unwind_Backtrace@@GCC_3.3+0x8f8>  // b.pmore
    d424:	mov	w0, #0xffffffff            	// #-1
    d428:	b	d344 <_Unwind_Backtrace@@GCC_3.3+0x82c>
    d42c:	mov	x4, x2
    d430:	b	d310 <_Unwind_Backtrace@@GCC_3.3+0x7f8>
    d434:	ldr	w2, [x6]
    d438:	cmp	w2, #0x1
    d43c:	b.ne	d478 <_Unwind_Backtrace@@GCC_3.3+0x960>  // b.any
    d440:	ldr	x2, [x6, #16]
    d444:	ldr	x13, [x19]
    d448:	add	x2, x7, x2
    d44c:	cmp	x13, x2
    d450:	b.cc	d470 <_Unwind_Backtrace@@GCC_3.3+0x958>  // b.lo, b.ul, b.last
    d454:	ldr	x3, [x6, #40]
    d458:	add	x3, x2, x3
    d45c:	cmp	x13, x3
    d460:	b.cs	d470 <_Unwind_Backtrace@@GCC_3.3+0x958>  // b.hs, b.nlast
    d464:	mov	x10, x3
    d468:	mov	x11, x2
    d46c:	mov	x12, #0x1                   	// #1
    d470:	add	x6, x6, #0x38
    d474:	b	d330 <_Unwind_Backtrace@@GCC_3.3+0x818>
    d478:	cmp	w2, w14
    d47c:	b.eq	d48c <_Unwind_Backtrace@@GCC_3.3+0x974>  // b.none
    d480:	cmp	w2, #0x2
    d484:	csel	x8, x8, x6, ne  // ne = any
    d488:	b	d470 <_Unwind_Backtrace@@GCC_3.3+0x958>
    d48c:	mov	x0, x6
    d490:	b	d470 <_Unwind_Backtrace@@GCC_3.3+0x958>
    d494:	cmp	x1, #0x2f
    d498:	b.ls	d390 <_Unwind_Backtrace@@GCC_3.3+0x878>  // b.plast
    d49c:	cmp	x4, #0x0
    d4a0:	adrp	x1, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    d4a4:	ccmp	x5, #0x0, #0x4, ne  // ne = any
    d4a8:	b.eq	d4c4 <_Unwind_Backtrace@@GCC_3.3+0x9ac>  // b.none
    d4ac:	add	x2, x1, #0x240
    d4b0:	ldr	x6, [x4, #40]
    d4b4:	str	x6, [x5, #40]
    d4b8:	ldr	x3, [x2, #8]
    d4bc:	str	x4, [x2, #8]
    d4c0:	str	x3, [x4, #40]
    d4c4:	add	x1, x1, #0x240
    d4c8:	ldr	x1, [x1, #8]
    d4cc:	stp	x11, x10, [x1]
    d4d0:	stp	x7, x0, [x1, #16]
    d4d4:	str	x8, [x1, #32]
    d4d8:	b	d390 <_Unwind_Backtrace@@GCC_3.3+0x878>
    d4dc:	ldrb	w21, [x20, #1]
    d4e0:	mov	x1, x19
    d4e4:	mov	w0, w21
    d4e8:	bl	ce7c <_Unwind_Backtrace@@GCC_3.3+0x364>
    d4ec:	add	x3, sp, #0x40
    d4f0:	mov	x1, x0
    d4f4:	add	x2, x20, #0x4
    d4f8:	mov	w0, w21
    d4fc:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d500:	ldrb	w21, [x20, #2]
    d504:	mov	x22, x0
    d508:	cmp	w21, #0xff
    d50c:	b.eq	d630 <_Unwind_Backtrace@@GCC_3.3+0xb18>  // b.none
    d510:	ldrb	w0, [x20, #3]
    d514:	cmp	w0, #0x3b
    d518:	b.ne	d630 <_Unwind_Backtrace@@GCC_3.3+0xb18>  // b.any
    d51c:	mov	x1, x19
    d520:	mov	w0, w21
    d524:	bl	ce7c <_Unwind_Backtrace@@GCC_3.3+0x364>
    d528:	mov	x1, x0
    d52c:	add	x3, sp, #0x48
    d530:	mov	w0, w21
    d534:	mov	x2, x22
    d538:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d53c:	ldr	x1, [sp, #72]
    d540:	mov	x21, x0
    d544:	cbz	x1, d3a8 <_Unwind_Backtrace@@GCC_3.3+0x890>
    d548:	ands	x2, x0, #0x3
    d54c:	b.ne	d630 <_Unwind_Backtrace@@GCC_3.3+0xb18>  // b.any
    d550:	ldrsw	x0, [x0]
    d554:	ldr	x3, [x19]
    d558:	add	x0, x0, x20
    d55c:	cmp	x0, x3
    d560:	b.hi	d3a8 <_Unwind_Backtrace@@GCC_3.3+0x890>  // b.pmore
    d564:	sub	x1, x1, #0x1
    d568:	lsl	x0, x1, #3
    d56c:	ldrsw	x0, [x21, x0]
    d570:	add	x0, x0, x20
    d574:	cmp	x0, x3
    d578:	b.hi	d624 <_Unwind_Backtrace@@GCC_3.3+0xb0c>  // b.pmore
    d57c:	lsl	x24, x1, #3
    d580:	add	x1, x21, x1, lsl #3
    d584:	ldrsw	x22, [x1, #4]
    d588:	add	x22, x22, x20
    d58c:	mov	x0, x22
    d590:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    d594:	and	w23, w0, #0xff
    d598:	mov	w0, w23
    d59c:	bl	cdc0 <_Unwind_Backtrace@@GCC_3.3+0x2a8>
    d5a0:	mov	w2, w0
    d5a4:	mov	x1, #0x0                   	// #0
    d5a8:	add	x2, x2, #0x8
    d5ac:	add	x3, sp, #0x50
    d5b0:	add	x2, x22, x2
    d5b4:	and	w0, w23, #0xf
    d5b8:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d5bc:	ldrsw	x0, [x21, x24]
    d5c0:	ldr	x1, [x19]
    d5c4:	add	x20, x0, x20
    d5c8:	ldr	x0, [sp, #80]
    d5cc:	add	x0, x20, x0
    d5d0:	cmp	x1, x0
    d5d4:	b.cs	d5dc <_Unwind_Backtrace@@GCC_3.3+0xac4>  // b.hs, b.nlast
    d5d8:	str	x22, [x19, #32]
    d5dc:	str	x20, [x19, #24]
    d5e0:	b	d3a8 <_Unwind_Backtrace@@GCC_3.3+0x890>
    d5e4:	add	x0, x2, x1
    d5e8:	lsr	x0, x0, #1
    d5ec:	lsl	x4, x0, #3
    d5f0:	ldrsw	x4, [x21, x4]
    d5f4:	add	x4, x4, x20
    d5f8:	cmp	x4, x3
    d5fc:	b.hi	d620 <_Unwind_Backtrace@@GCC_3.3+0xb08>  // b.pmore
    d600:	add	x2, x0, #0x1
    d604:	lsl	x4, x2, #3
    d608:	ldrsw	x4, [x21, x4]
    d60c:	add	x4, x4, x20
    d610:	cmp	x4, x3
    d614:	b.ls	d624 <_Unwind_Backtrace@@GCC_3.3+0xb0c>  // b.plast
    d618:	mov	x1, x0
    d61c:	b	d57c <_Unwind_Backtrace@@GCC_3.3+0xa64>
    d620:	mov	x1, x0
    d624:	cmp	x2, x1
    d628:	b.cc	d5e4 <_Unwind_Backtrace@@GCC_3.3+0xacc>  // b.lo, b.ul, b.last
    d62c:	bl	2c90 <abort@plt>
    d630:	ldp	x2, x0, [x19]
    d634:	stp	xzr, x0, [sp, #80]
    d638:	ldr	x1, [sp, #64]
    d63c:	str	x1, [sp, #104]
    d640:	ldr	x0, [x19, #16]
    d644:	str	x0, [sp, #96]
    d648:	mov	x0, #0x4                   	// #4
    d64c:	str	x0, [sp, #112]
    d650:	add	x0, sp, #0x50
    d654:	bl	d13c <_Unwind_Backtrace@@GCC_3.3+0x624>
    d658:	str	x0, [x19, #32]
    d65c:	cbz	x0, d3a8 <_Unwind_Backtrace@@GCC_3.3+0x890>
    d660:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    d664:	and	w20, w0, #0xff
    d668:	mov	x1, x19
    d66c:	mov	w0, w20
    d670:	bl	ce7c <_Unwind_Backtrace@@GCC_3.3+0x364>
    d674:	mov	x1, x0
    d678:	ldr	x2, [x19, #32]
    d67c:	add	x3, sp, #0x48
    d680:	mov	w0, w20
    d684:	add	x2, x2, #0x8
    d688:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d68c:	ldr	x0, [sp, #72]
    d690:	str	x0, [x19, #24]
    d694:	b	d3a8 <_Unwind_Backtrace@@GCC_3.3+0x890>
    d698:	stp	x29, x30, [sp, #-64]!
    d69c:	mov	x29, sp
    d6a0:	stp	x19, x20, [sp, #16]
    d6a4:	mov	x20, x2
    d6a8:	stp	x21, x22, [sp, #32]
    d6ac:	mov	x21, x0
    d6b0:	mov	x22, x1
    d6b4:	mov	x0, x1
    d6b8:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    d6bc:	and	w19, w0, #0xff
    d6c0:	mov	x1, x21
    d6c4:	mov	w0, w19
    d6c8:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d6cc:	add	x3, sp, #0x30
    d6d0:	add	x2, x22, #0x8
    d6d4:	mov	x1, x0
    d6d8:	mov	w0, w19
    d6dc:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d6e0:	mov	x0, x20
    d6e4:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    d6e8:	and	w19, w0, #0xff
    d6ec:	mov	x1, x21
    d6f0:	mov	w0, w19
    d6f4:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d6f8:	mov	x1, x0
    d6fc:	add	x3, sp, #0x38
    d700:	add	x2, x20, #0x8
    d704:	mov	w0, w19
    d708:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d70c:	ldp	x2, x1, [sp, #48]
    d710:	ldp	x19, x20, [sp, #16]
    d714:	ldp	x21, x22, [sp, #32]
    d718:	cmp	x2, x1
    d71c:	csetm	w0, cc  // cc = lo, ul, last
    d720:	csinc	w0, w0, wzr, ls  // ls = plast
    d724:	ldp	x29, x30, [sp], #64
    d728:	ret
    d72c:	stp	x29, x30, [sp, #-112]!
    d730:	mov	x2, #0x0                   	// #0
    d734:	mov	x29, sp
    d738:	stp	x19, x20, [sp, #16]
    d73c:	mov	x20, x0
    d740:	mov	x19, x1
    d744:	stp	x23, x24, [sp, #48]
    d748:	add	x23, sp, #0x68
    d74c:	mov	x24, #0xffffffffffffffff    	// #-1
    d750:	stp	x21, x22, [sp, #32]
    d754:	mov	w21, #0x0                   	// #0
    d758:	mov	x22, #0x0                   	// #0
    d75c:	stp	x25, x26, [sp, #64]
    d760:	mov	x25, #0x1                   	// #1
    d764:	stp	x27, x28, [sp, #80]
    d768:	mov	x27, #0x0                   	// #0
    d76c:	ldr	w0, [x19]
    d770:	cbz	w0, d7a4 <_Unwind_Backtrace@@GCC_3.3+0xc8c>
    d774:	ldr	w0, [x19, #4]
    d778:	cbz	w0, d878 <_Unwind_Backtrace@@GCC_3.3+0xd60>
    d77c:	add	x26, x19, #0x4
    d780:	sub	x26, x26, w0, sxtw
    d784:	cmp	x2, x26
    d788:	b.eq	d7f0 <_Unwind_Backtrace@@GCC_3.3+0xcd8>  // b.none
    d78c:	mov	x0, x26
    d790:	bl	d044 <_Unwind_Backtrace@@GCC_3.3+0x52c>
    d794:	mov	w21, w0
    d798:	cmp	w0, #0xff
    d79c:	b.ne	d7c4 <_Unwind_Backtrace@@GCC_3.3+0xcac>  // b.any
    d7a0:	mov	x22, #0xffffffffffffffff    	// #-1
    d7a4:	mov	x0, x22
    d7a8:	ldp	x19, x20, [sp, #16]
    d7ac:	ldp	x21, x22, [sp, #32]
    d7b0:	ldp	x23, x24, [sp, #48]
    d7b4:	ldp	x25, x26, [sp, #64]
    d7b8:	ldp	x27, x28, [sp, #80]
    d7bc:	ldp	x29, x30, [sp], #112
    d7c0:	ret
    d7c4:	and	w28, w0, #0xff
    d7c8:	mov	x1, x20
    d7cc:	mov	w0, w28
    d7d0:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d7d4:	ldrh	w2, [x20, #32]
    d7d8:	mov	x27, x0
    d7dc:	and	w0, w2, #0x7f8
    d7e0:	cmp	w0, #0x7f8
    d7e4:	b.ne	d858 <_Unwind_Backtrace@@GCC_3.3+0xd40>  // b.any
    d7e8:	bfi	w2, w28, #3, #8
    d7ec:	strh	w2, [x20, #32]
    d7f0:	add	x2, x19, #0x8
    d7f4:	mov	x3, x23
    d7f8:	mov	x1, x27
    d7fc:	and	w28, w21, #0xff
    d800:	mov	w0, w28
    d804:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d808:	mov	w0, w28
    d80c:	bl	cdc0 <_Unwind_Backtrace@@GCC_3.3+0x2a8>
    d810:	lsl	w2, w0, #3
    d814:	cmp	w0, #0x8
    d818:	ldr	x0, [sp, #104]
    d81c:	lsl	x2, x25, x2
    d820:	sub	x2, x2, #0x1
    d824:	csel	x2, x2, x24, cc  // cc = lo, ul, last
    d828:	tst	x0, x2
    d82c:	b.eq	d874 <_Unwind_Backtrace@@GCC_3.3+0xd5c>  // b.none
    d830:	ldr	x1, [x20]
    d834:	add	x22, x22, #0x1
    d838:	cmp	x1, x0
    d83c:	b.ls	d844 <_Unwind_Backtrace@@GCC_3.3+0xd2c>  // b.plast
    d840:	str	x0, [x20]
    d844:	ldr	w0, [x19]
    d848:	mov	x2, x26
    d84c:	add	x0, x0, #0x4
    d850:	add	x19, x19, x0
    d854:	b	d76c <_Unwind_Backtrace@@GCC_3.3+0xc54>
    d858:	ubfx	x2, x2, #3, #8
    d85c:	cmp	w2, w21
    d860:	b.eq	d7f0 <_Unwind_Backtrace@@GCC_3.3+0xcd8>  // b.none
    d864:	ldrb	w0, [x20, #32]
    d868:	orr	w0, w0, #0x4
    d86c:	strb	w0, [x20, #32]
    d870:	b	d7f0 <_Unwind_Backtrace@@GCC_3.3+0xcd8>
    d874:	mov	x2, x26
    d878:	mov	x26, x2
    d87c:	b	d844 <_Unwind_Backtrace@@GCC_3.3+0xd2c>
    d880:	stp	x29, x30, [sp, #-112]!
    d884:	mov	x29, sp
    d888:	stp	x21, x22, [sp, #32]
    d88c:	mov	x22, x0
    d890:	ldrh	w0, [x0, #32]
    d894:	stp	x19, x20, [sp, #16]
    d898:	mov	x19, x2
    d89c:	ubfx	x21, x0, #3, #8
    d8a0:	stp	x23, x24, [sp, #48]
    d8a4:	mov	x0, x21
    d8a8:	mov	x23, x1
    d8ac:	add	x24, sp, #0x68
    d8b0:	mov	x1, x22
    d8b4:	stp	x25, x26, [sp, #64]
    d8b8:	mov	x25, #0xffffffffffffffff    	// #-1
    d8bc:	stp	x27, x28, [sp, #80]
    d8c0:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d8c4:	mov	x26, #0x1                   	// #1
    d8c8:	mov	x27, x0
    d8cc:	mov	x0, #0x0                   	// #0
    d8d0:	ldr	w1, [x19]
    d8d4:	cbnz	w1, d8f4 <_Unwind_Backtrace@@GCC_3.3+0xddc>
    d8d8:	ldp	x19, x20, [sp, #16]
    d8dc:	ldp	x21, x22, [sp, #32]
    d8e0:	ldp	x23, x24, [sp, #48]
    d8e4:	ldp	x25, x26, [sp, #64]
    d8e8:	ldp	x27, x28, [sp, #80]
    d8ec:	ldp	x29, x30, [sp], #112
    d8f0:	ret
    d8f4:	ldr	w1, [x19, #4]
    d8f8:	cbz	w1, d9b4 <_Unwind_Backtrace@@GCC_3.3+0xe9c>
    d8fc:	ldrb	w2, [x22, #32]
    d900:	tbz	w2, #2, d94c <_Unwind_Backtrace@@GCC_3.3+0xe34>
    d904:	add	x20, x19, #0x4
    d908:	sub	x20, x20, w1, sxtw
    d90c:	cmp	x0, x20
    d910:	b.eq	d92c <_Unwind_Backtrace@@GCC_3.3+0xe14>  // b.none
    d914:	mov	x0, x20
    d918:	bl	d044 <_Unwind_Backtrace@@GCC_3.3+0x52c>
    d91c:	mov	x1, x22
    d920:	mov	w21, w0
    d924:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    d928:	mov	x27, x0
    d92c:	cbnz	w21, d954 <_Unwind_Backtrace@@GCC_3.3+0xe3c>
    d930:	ldr	x0, [x19, #8]
    d934:	cbnz	x0, d994 <_Unwind_Backtrace@@GCC_3.3+0xe7c>
    d938:	ldr	w0, [x19]
    d93c:	add	x0, x0, #0x4
    d940:	add	x19, x19, x0
    d944:	mov	x0, x20
    d948:	b	d8d0 <_Unwind_Backtrace@@GCC_3.3+0xdb8>
    d94c:	mov	x20, x0
    d950:	b	d92c <_Unwind_Backtrace@@GCC_3.3+0xe14>
    d954:	add	x2, x19, #0x8
    d958:	mov	x3, x24
    d95c:	mov	x1, x27
    d960:	and	w28, w21, #0xff
    d964:	mov	w0, w28
    d968:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    d96c:	mov	w0, w28
    d970:	bl	cdc0 <_Unwind_Backtrace@@GCC_3.3+0x2a8>
    d974:	lsl	w2, w0, #3
    d978:	cmp	w0, #0x8
    d97c:	ldr	x0, [sp, #104]
    d980:	lsl	x2, x26, x2
    d984:	sub	x2, x2, #0x1
    d988:	csel	x2, x2, x25, cc  // cc = lo, ul, last
    d98c:	tst	x2, x0
    d990:	b.eq	d938 <_Unwind_Backtrace@@GCC_3.3+0xe20>  // b.none
    d994:	ldr	x0, [x23]
    d998:	cbz	x0, d938 <_Unwind_Backtrace@@GCC_3.3+0xe20>
    d99c:	ldr	x1, [x0, #8]
    d9a0:	add	x2, x1, #0x1
    d9a4:	add	x1, x1, #0x2
    d9a8:	str	x2, [x0, #8]
    d9ac:	str	x19, [x0, x1, lsl #3]
    d9b0:	b	d938 <_Unwind_Backtrace@@GCC_3.3+0xe20>
    d9b4:	mov	x20, x0
    d9b8:	b	d938 <_Unwind_Backtrace@@GCC_3.3+0xe20>
    d9bc:	stp	x29, x30, [sp, #-144]!
    d9c0:	mov	x29, sp
    d9c4:	stp	x21, x22, [sp, #32]
    d9c8:	mov	x22, x1
    d9cc:	ldrb	w1, [x0, #32]
    d9d0:	stp	x19, x20, [sp, #16]
    d9d4:	mov	x19, x0
    d9d8:	stp	x23, x24, [sp, #48]
    d9dc:	stp	x25, x26, [sp, #64]
    d9e0:	stp	x27, x28, [sp, #80]
    d9e4:	tbz	w1, #0, da10 <_Unwind_Backtrace@@GCC_3.3+0xef8>
    d9e8:	ldrb	w0, [x19, #32]
    d9ec:	ldr	x21, [x19, #24]
    d9f0:	tbnz	w0, #0, dd34 <_Unwind_Backtrace@@GCC_3.3+0x121c>
    d9f4:	tbnz	w0, #1, ded8 <_Unwind_Backtrace@@GCC_3.3+0x13c0>
    d9f8:	mov	x2, x22
    d9fc:	mov	x1, x21
    da00:	mov	x0, x19
    da04:	bl	d13c <_Unwind_Backtrace@@GCC_3.3+0x624>
    da08:	mov	x20, x0
    da0c:	b	da74 <_Unwind_Backtrace@@GCC_3.3+0xf5c>
    da10:	ldr	w2, [x0, #32]
    da14:	lsr	w21, w2, #11
    da18:	tst	x2, #0xfffff800
    da1c:	b.ne	dabc <_Unwind_Backtrace@@GCC_3.3+0xfa4>  // b.any
    da20:	ldr	x20, [x0, #24]
    da24:	tbnz	w1, #1, da9c <_Unwind_Backtrace@@GCC_3.3+0xf84>
    da28:	mov	x1, x20
    da2c:	bl	d72c <_Unwind_Backtrace@@GCC_3.3+0xc14>
    da30:	mov	x21, x0
    da34:	cmn	x0, #0x1
    da38:	b.ne	daa4 <_Unwind_Backtrace@@GCC_3.3+0xf8c>  // b.any
    da3c:	b	da50 <_Unwind_Backtrace@@GCC_3.3+0xf38>
    da40:	mov	x0, x19
    da44:	bl	d72c <_Unwind_Backtrace@@GCC_3.3+0xc14>
    da48:	cmn	x0, #0x1
    da4c:	b.ne	da94 <_Unwind_Backtrace@@GCC_3.3+0xf7c>  // b.any
    da50:	mov	x0, #0x7f8                 	// #2040
    da54:	str	x0, [x19, #32]
    da58:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    da5c:	add	x0, x0, #0xe38
    da60:	str	x0, [x19, #24]
    da64:	ldr	x0, [x19]
    da68:	cmp	x0, x22
    da6c:	b.ls	d9e8 <_Unwind_Backtrace@@GCC_3.3+0xed0>  // b.plast
    da70:	mov	x20, #0x0                   	// #0
    da74:	mov	x0, x20
    da78:	ldp	x19, x20, [sp, #16]
    da7c:	ldp	x21, x22, [sp, #32]
    da80:	ldp	x23, x24, [sp, #48]
    da84:	ldp	x25, x26, [sp, #64]
    da88:	ldp	x27, x28, [sp, #80]
    da8c:	ldp	x29, x30, [sp], #144
    da90:	ret
    da94:	add	x21, x21, x0
    da98:	add	x20, x20, #0x8
    da9c:	ldr	x1, [x20]
    daa0:	cbnz	x1, da40 <_Unwind_Backtrace@@GCC_3.3+0xf28>
    daa4:	ldr	w0, [x19, #32]
    daa8:	tst	x21, #0xffffffffffe00000
    daac:	b.ne	db1c <_Unwind_Backtrace@@GCC_3.3+0x1004>  // b.any
    dab0:	bfi	w0, w21, #11, #21
    dab4:	str	w0, [x19, #32]
    dab8:	cbz	x21, da64 <_Unwind_Backtrace@@GCC_3.3+0xf4c>
    dabc:	add	x20, x21, #0x2
    dac0:	lsl	x20, x20, #3
    dac4:	mov	x0, x20
    dac8:	bl	2bb0 <malloc@plt>
    dacc:	str	x0, [sp, #128]
    dad0:	cbz	x0, da64 <_Unwind_Backtrace@@GCC_3.3+0xf4c>
    dad4:	str	xzr, [x0, #8]
    dad8:	mov	x0, x20
    dadc:	bl	2bb0 <malloc@plt>
    dae0:	str	x0, [sp, #136]
    dae4:	cbz	x0, daec <_Unwind_Backtrace@@GCC_3.3+0xfd4>
    dae8:	str	xzr, [x0, #8]
    daec:	ldrb	w0, [x19, #32]
    daf0:	ldr	x20, [x19, #24]
    daf4:	tbz	w0, #1, db38 <_Unwind_Backtrace@@GCC_3.3+0x1020>
    daf8:	add	x23, sp, #0x80
    dafc:	ldr	x2, [x20]
    db00:	cbnz	x2, db24 <_Unwind_Backtrace@@GCC_3.3+0x100c>
    db04:	ldr	x24, [sp, #128]
    db08:	cbz	x24, db4c <_Unwind_Backtrace@@GCC_3.3+0x1034>
    db0c:	ldr	x0, [x24, #8]
    db10:	cmp	x0, x21
    db14:	b.eq	db4c <_Unwind_Backtrace@@GCC_3.3+0x1034>  // b.none
    db18:	bl	2c90 <abort@plt>
    db1c:	and	w0, w0, #0x7ff
    db20:	b	dab4 <_Unwind_Backtrace@@GCC_3.3+0xf9c>
    db24:	mov	x1, x23
    db28:	mov	x0, x19
    db2c:	add	x20, x20, #0x8
    db30:	bl	d880 <_Unwind_Backtrace@@GCC_3.3+0xd68>
    db34:	b	dafc <_Unwind_Backtrace@@GCC_3.3+0xfe4>
    db38:	mov	x2, x20
    db3c:	add	x1, sp, #0x80
    db40:	mov	x0, x19
    db44:	bl	d880 <_Unwind_Backtrace@@GCC_3.3+0xd68>
    db48:	b	db04 <_Unwind_Backtrace@@GCC_3.3+0xfec>
    db4c:	ldrb	w0, [x19, #32]
    db50:	tbnz	w0, #2, dc90 <_Unwind_Backtrace@@GCC_3.3+0x1178>
    db54:	ldrh	w1, [x19, #32]
    db58:	adrp	x0, c000 <_Unwind_GetTextRelBase@@GCC_3.0+0xe7c>
    db5c:	adrp	x23, c000 <_Unwind_GetTextRelBase@@GCC_3.0+0xe7c>
    db60:	add	x0, x0, #0xfbc
    db64:	tst	w1, #0x7f8
    db68:	add	x23, x23, #0xc4c
    db6c:	csel	x23, x23, x0, eq  // eq = none
    db70:	ldr	x25, [sp, #136]
    db74:	cbz	x25, dd20 <_Unwind_Backtrace@@GCC_3.3+0x1208>
    db78:	ldr	x28, [x24, #8]
    db7c:	adrp	x20, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    db80:	add	x20, x20, #0x240
    db84:	mov	x26, #0x10                  	// #16
    db88:	add	x27, x28, #0x2
    db8c:	add	x20, x20, #0x190
    db90:	mov	x3, x20
    db94:	add	x4, x24, x26
    db98:	lsl	x27, x27, #3
    db9c:	cmp	x26, x27
    dba0:	b.ne	dcac <_Unwind_Backtrace@@GCC_3.3+0x1194>  // b.any
    dba4:	add	x4, x24, #0x10
    dba8:	add	x5, x25, #0x10
    dbac:	mov	x1, #0x0                   	// #0
    dbb0:	mov	x2, #0x0                   	// #0
    dbb4:	mov	x0, #0x0                   	// #0
    dbb8:	cmp	x28, x0
    dbbc:	b.ne	dce0 <_Unwind_Backtrace@@GCC_3.3+0x11c8>  // b.any
    dbc0:	ldr	x0, [sp, #128]
    dbc4:	str	x2, [x24, #8]
    dbc8:	ldr	x2, [sp, #136]
    dbcc:	str	x1, [x25, #8]
    dbd0:	ldr	x0, [x0, #8]
    dbd4:	ldr	x1, [x2, #8]
    dbd8:	add	x0, x0, x1
    dbdc:	cmp	x0, x21
    dbe0:	b.ne	db18 <_Unwind_Backtrace@@GCC_3.3+0x1000>  // b.any
    dbe4:	mov	x1, x23
    dbe8:	mov	x0, x19
    dbec:	bl	cd1c <_Unwind_Backtrace@@GCC_3.3+0x204>
    dbf0:	ldr	x27, [sp, #136]
    dbf4:	ldr	x20, [x27, #8]
    dbf8:	cbz	x20, dc68 <_Unwind_Backtrace@@GCC_3.3+0x1150>
    dbfc:	ldr	x21, [sp, #128]
    dc00:	add	x24, x20, #0x2
    dc04:	add	x4, x27, #0x10
    dc08:	add	x3, x21, #0x10
    dc0c:	ldr	x25, [x21, #8]
    dc10:	add	x24, x21, x24, lsl #3
    dc14:	sub	x20, x20, #0x1
    dc18:	ldr	x28, [x4, x20, lsl #3]
    dc1c:	cbz	x25, dc44 <_Unwind_Backtrace@@GCC_3.3+0x112c>
    dc20:	sub	x26, x25, #0x1
    dc24:	stp	x3, x4, [sp, #96]
    dc28:	mov	x2, x28
    dc2c:	mov	x0, x19
    dc30:	ldr	x1, [x3, x26, lsl #3]
    dc34:	blr	x23
    dc38:	cmp	w0, #0x0
    dc3c:	ldp	x3, x4, [sp, #96]
    dc40:	b.gt	dd10 <_Unwind_Backtrace@@GCC_3.3+0x11f8>
    dc44:	add	x0, x25, x20
    dc48:	sub	x24, x24, #0x8
    dc4c:	add	x0, x0, #0x2
    dc50:	str	x28, [x21, x0, lsl #3]
    dc54:	cbnz	x20, dc14 <_Unwind_Backtrace@@GCC_3.3+0x10fc>
    dc58:	ldr	x0, [x21, #8]
    dc5c:	ldr	x1, [x27, #8]
    dc60:	add	x0, x0, x1
    dc64:	str	x0, [x21, #8]
    dc68:	ldr	x0, [sp, #136]
    dc6c:	bl	2d10 <free@plt>
    dc70:	ldr	x0, [sp, #128]
    dc74:	ldr	x1, [x19, #24]
    dc78:	str	x1, [x0]
    dc7c:	str	x0, [x19, #24]
    dc80:	ldrb	w0, [x19, #32]
    dc84:	orr	w0, w0, #0x1
    dc88:	strb	w0, [x19, #32]
    dc8c:	b	da64 <_Unwind_Backtrace@@GCC_3.3+0xf4c>
    dc90:	adrp	x23, d000 <_Unwind_Backtrace@@GCC_3.3+0x4e8>
    dc94:	add	x23, x23, #0x698
    dc98:	b	db70 <_Unwind_Backtrace@@GCC_3.3+0x1058>
    dc9c:	sub	x20, x20, x4
    dca0:	add	x0, x25, x20
    dca4:	ldr	x20, [x0, #16]
    dca8:	str	xzr, [x0, #16]
    dcac:	cmp	x20, x3
    dcb0:	b.eq	dcd0 <_Unwind_Backtrace@@GCC_3.3+0x11b8>  // b.none
    dcb4:	ldr	x1, [x24, x26]
    dcb8:	stp	x3, x4, [sp, #96]
    dcbc:	mov	x0, x19
    dcc0:	ldr	x2, [x20]
    dcc4:	blr	x23
    dcc8:	ldp	x3, x4, [sp, #96]
    dccc:	tbnz	w0, #31, dc9c <_Unwind_Backtrace@@GCC_3.3+0x1184>
    dcd0:	str	x20, [x25, x26]
    dcd4:	add	x20, x24, x26
    dcd8:	add	x26, x26, #0x8
    dcdc:	b	db9c <_Unwind_Backtrace@@GCC_3.3+0x1084>
    dce0:	ldr	x6, [x5, x0, lsl #3]
    dce4:	ldr	x3, [x4, x0, lsl #3]
    dce8:	cbz	x6, dd00 <_Unwind_Backtrace@@GCC_3.3+0x11e8>
    dcec:	add	x6, x2, #0x2
    dcf0:	add	x2, x2, #0x1
    dcf4:	str	x3, [x24, x6, lsl #3]
    dcf8:	add	x0, x0, #0x1
    dcfc:	b	dbb8 <_Unwind_Backtrace@@GCC_3.3+0x10a0>
    dd00:	add	x6, x1, #0x2
    dd04:	add	x1, x1, #0x1
    dd08:	str	x3, [x25, x6, lsl #3]
    dd0c:	b	dcf8 <_Unwind_Backtrace@@GCC_3.3+0x11e0>
    dd10:	ldr	x0, [x3, x26, lsl #3]
    dd14:	mov	x25, x26
    dd18:	str	x0, [x24, x26, lsl #3]
    dd1c:	b	dc1c <_Unwind_Backtrace@@GCC_3.3+0x1104>
    dd20:	mov	x2, x24
    dd24:	mov	x1, x23
    dd28:	mov	x0, x19
    dd2c:	bl	cd1c <_Unwind_Backtrace@@GCC_3.3+0x204>
    dd30:	b	dc70 <_Unwind_Backtrace@@GCC_3.3+0x1158>
    dd34:	tbz	w0, #2, ddcc <_Unwind_Backtrace@@GCC_3.3+0x12b4>
    dd38:	ldr	x27, [x21, #8]
    dd3c:	add	x25, sp, #0x78
    dd40:	add	x26, sp, #0x80
    dd44:	mov	x28, #0x0                   	// #0
    dd48:	cmp	x28, x27
    dd4c:	b.cs	da70 <_Unwind_Backtrace@@GCC_3.3+0xf58>  // b.hs, b.nlast
    dd50:	add	x23, x28, x27
    dd54:	lsr	x23, x23, #1
    dd58:	add	x0, x23, #0x2
    dd5c:	ldr	x20, [x21, x0, lsl #3]
    dd60:	mov	x0, x20
    dd64:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    dd68:	and	w24, w0, #0xff
    dd6c:	mov	x1, x19
    dd70:	mov	w0, w24
    dd74:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    dd78:	mov	x3, x25
    dd7c:	mov	x1, x0
    dd80:	add	x2, x20, #0x8
    dd84:	mov	w0, w24
    dd88:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    dd8c:	mov	x2, x0
    dd90:	mov	x3, x26
    dd94:	and	w0, w24, #0xf
    dd98:	mov	x1, #0x0                   	// #0
    dd9c:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    dda0:	ldr	x0, [sp, #120]
    dda4:	cmp	x22, x0
    dda8:	b.cc	ddc4 <_Unwind_Backtrace@@GCC_3.3+0x12ac>  // b.lo, b.ul, b.last
    ddac:	ldr	x1, [sp, #128]
    ddb0:	add	x0, x0, x1
    ddb4:	cmp	x22, x0
    ddb8:	b.cc	da74 <_Unwind_Backtrace@@GCC_3.3+0xf5c>  // b.lo, b.ul, b.last
    ddbc:	add	x28, x23, #0x1
    ddc0:	mov	x23, x27
    ddc4:	mov	x27, x23
    ddc8:	b	dd48 <_Unwind_Backtrace@@GCC_3.3+0x1230>
    ddcc:	ldrh	w0, [x19, #32]
    ddd0:	tst	w0, #0x7f8
    ddd4:	b.ne	de24 <_Unwind_Backtrace@@GCC_3.3+0x130c>  // b.any
    ddd8:	ldr	x3, [x21, #8]
    dddc:	mov	x2, #0x0                   	// #0
    dde0:	cmp	x3, x2
    dde4:	b.ls	da70 <_Unwind_Backtrace@@GCC_3.3+0xf58>  // b.plast
    dde8:	add	x0, x3, x2
    ddec:	lsr	x0, x0, #1
    ddf0:	add	x1, x0, #0x2
    ddf4:	ldr	x20, [x21, x1, lsl #3]
    ddf8:	ldr	x1, [x20, #8]
    ddfc:	cmp	x22, x1
    de00:	b.cc	de1c <_Unwind_Backtrace@@GCC_3.3+0x1304>  // b.lo, b.ul, b.last
    de04:	ldr	x2, [x20, #16]
    de08:	add	x1, x1, x2
    de0c:	cmp	x22, x1
    de10:	b.cc	da74 <_Unwind_Backtrace@@GCC_3.3+0xf5c>  // b.lo, b.ul, b.last
    de14:	add	x2, x0, #0x1
    de18:	b	dde0 <_Unwind_Backtrace@@GCC_3.3+0x12c8>
    de1c:	mov	x3, x0
    de20:	b	dde0 <_Unwind_Backtrace@@GCC_3.3+0x12c8>
    de24:	ubfx	x24, x0, #3, #8
    de28:	mov	x1, x19
    de2c:	mov	x0, x24
    de30:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    de34:	ldr	x23, [x21, #8]
    de38:	mov	x28, x0
    de3c:	add	x4, sp, #0x78
    de40:	add	x25, sp, #0x80
    de44:	and	w26, w24, #0xf
    de48:	mov	x27, #0x0                   	// #0
    de4c:	cmp	x27, x23
    de50:	b.cs	da70 <_Unwind_Backtrace@@GCC_3.3+0xf58>  // b.hs, b.nlast
    de54:	add	x19, x27, x23
    de58:	mov	x3, x4
    de5c:	mov	x1, x28
    de60:	str	x4, [sp, #96]
    de64:	lsr	x19, x19, #1
    de68:	add	x0, x19, #0x2
    de6c:	ldr	x20, [x21, x0, lsl #3]
    de70:	mov	w0, w24
    de74:	add	x2, x20, #0x8
    de78:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    de7c:	mov	x1, #0x0                   	// #0
    de80:	mov	x2, x0
    de84:	mov	x3, x25
    de88:	mov	w0, w26
    de8c:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    de90:	ldr	x1, [sp, #120]
    de94:	ldr	x4, [sp, #96]
    de98:	cmp	x22, x1
    de9c:	b.cc	deb8 <_Unwind_Backtrace@@GCC_3.3+0x13a0>  // b.lo, b.ul, b.last
    dea0:	ldr	x0, [sp, #128]
    dea4:	add	x1, x1, x0
    dea8:	cmp	x22, x1
    deac:	b.cc	da74 <_Unwind_Backtrace@@GCC_3.3+0xf5c>  // b.lo, b.ul, b.last
    deb0:	add	x27, x19, #0x1
    deb4:	mov	x19, x23
    deb8:	mov	x23, x19
    debc:	b	de4c <_Unwind_Backtrace@@GCC_3.3+0x1334>
    dec0:	mov	x2, x22
    dec4:	mov	x0, x19
    dec8:	bl	d13c <_Unwind_Backtrace@@GCC_3.3+0x624>
    decc:	mov	x20, x0
    ded0:	cbnz	x0, da74 <_Unwind_Backtrace@@GCC_3.3+0xf5c>
    ded4:	add	x21, x21, #0x8
    ded8:	ldr	x1, [x21]
    dedc:	cbnz	x1, dec0 <_Unwind_Backtrace@@GCC_3.3+0x13a8>
    dee0:	b	da70 <_Unwind_Backtrace@@GCC_3.3+0xf58>

000000000000dee4 <__register_frame_info_bases@@GCC_3.0>:
    dee4:	cbz	x0, df8c <__register_frame_info_bases@@GCC_3.0+0xa8>
    dee8:	stp	x29, x30, [sp, #-48]!
    deec:	mov	x29, sp
    def0:	stp	x19, x20, [sp, #16]
    def4:	mov	x19, x1
    def8:	ldr	w1, [x0]
    defc:	str	x21, [sp, #32]
    df00:	cbz	w1, df7c <__register_frame_info_bases@@GCC_3.0+0x98>
    df04:	stp	x3, x0, [x19, #16]
    df08:	mov	x0, #0x7f8                 	// #2040
    df0c:	mov	x1, #0xffffffffffffffff    	// #-1
    df10:	str	x0, [x19, #32]
    df14:	adrp	x0, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    df18:	stp	x1, x2, [x19]
    df1c:	mov	x20, x0
    df20:	adrp	x21, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    df24:	ldr	x1, [x0, #4032]
    df28:	cbz	x1, df38 <__register_frame_info_bases@@GCC_3.0+0x54>
    df2c:	add	x0, x21, #0x240
    df30:	add	x0, x0, #0x198
    df34:	bl	2da0 <pthread_mutex_lock@plt>
    df38:	add	x1, x21, #0x240
    df3c:	ldr	x0, [x1, #456]
    df40:	str	x0, [x19, #40]
    df44:	ldr	w0, [x1, #464]
    df48:	str	x19, [x1, #456]
    df4c:	cbnz	w0, df5c <__register_frame_info_bases@@GCC_3.0+0x78>
    df50:	add	x1, x1, #0x1d0
    df54:	mov	w0, #0x1                   	// #1
    df58:	str	w0, [x1]
    df5c:	ldr	x0, [x20, #4032]
    df60:	cbz	x0, df7c <__register_frame_info_bases@@GCC_3.0+0x98>
    df64:	add	x0, x21, #0x240
    df68:	ldp	x19, x20, [sp, #16]
    df6c:	add	x0, x0, #0x198
    df70:	ldr	x21, [sp, #32]
    df74:	ldp	x29, x30, [sp], #48
    df78:	b	2db0 <pthread_mutex_unlock@plt>
    df7c:	ldp	x19, x20, [sp, #16]
    df80:	ldr	x21, [sp, #32]
    df84:	ldp	x29, x30, [sp], #48
    df88:	ret
    df8c:	ret

000000000000df90 <__register_frame_info@@GLIBC_2.0>:
    df90:	mov	x3, #0x0                   	// #0
    df94:	mov	x2, #0x0                   	// #0
    df98:	b	2d60 <__register_frame_info_bases@plt>

000000000000df9c <__register_frame@@GLIBC_2.0>:
    df9c:	stp	x29, x30, [sp, #-32]!
    dfa0:	mov	x29, sp
    dfa4:	str	x19, [sp, #16]
    dfa8:	mov	x19, x0
    dfac:	ldr	w0, [x0]
    dfb0:	cbz	w0, dfd0 <__register_frame@@GLIBC_2.0+0x34>
    dfb4:	mov	x0, #0x30                  	// #48
    dfb8:	bl	2bb0 <malloc@plt>
    dfbc:	mov	x1, x0
    dfc0:	mov	x0, x19
    dfc4:	ldr	x19, [sp, #16]
    dfc8:	ldp	x29, x30, [sp], #32
    dfcc:	b	2d50 <__register_frame_info@plt>
    dfd0:	ldr	x19, [sp, #16]
    dfd4:	ldp	x29, x30, [sp], #32
    dfd8:	ret

000000000000dfdc <__register_frame_info_table_bases@@GCC_3.0>:
    dfdc:	stp	x29, x30, [sp, #-48]!
    dfe0:	mov	x29, sp
    dfe4:	stp	x19, x20, [sp, #16]
    dfe8:	mov	x19, x1
    dfec:	mov	x1, #0xffffffffffffffff    	// #-1
    dff0:	stp	x3, x0, [x19, #16]
    dff4:	mov	x0, #0x7fa                 	// #2042
    dff8:	str	x0, [x19, #32]
    dffc:	adrp	x0, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    e000:	stp	x1, x2, [x19]
    e004:	mov	x20, x0
    e008:	ldr	x1, [x0, #4032]
    e00c:	str	x21, [sp, #32]
    e010:	adrp	x21, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    e014:	cbz	x1, e024 <__register_frame_info_table_bases@@GCC_3.0+0x48>
    e018:	add	x0, x21, #0x240
    e01c:	add	x0, x0, #0x198
    e020:	bl	2da0 <pthread_mutex_lock@plt>
    e024:	add	x1, x21, #0x240
    e028:	ldr	x0, [x1, #456]
    e02c:	str	x0, [x19, #40]
    e030:	ldr	w0, [x1, #464]
    e034:	str	x19, [x1, #456]
    e038:	cbnz	w0, e048 <__register_frame_info_table_bases@@GCC_3.0+0x6c>
    e03c:	add	x1, x1, #0x1d0
    e040:	mov	w0, #0x1                   	// #1
    e044:	str	w0, [x1]
    e048:	ldr	x0, [x20, #4032]
    e04c:	cbz	x0, e068 <__register_frame_info_table_bases@@GCC_3.0+0x8c>
    e050:	add	x0, x21, #0x240
    e054:	ldp	x19, x20, [sp, #16]
    e058:	add	x0, x0, #0x198
    e05c:	ldr	x21, [sp, #32]
    e060:	ldp	x29, x30, [sp], #48
    e064:	b	2db0 <pthread_mutex_unlock@plt>
    e068:	ldp	x19, x20, [sp, #16]
    e06c:	ldr	x21, [sp, #32]
    e070:	ldp	x29, x30, [sp], #48
    e074:	ret

000000000000e078 <__register_frame_info_table@@GLIBC_2.0>:
    e078:	mov	x3, #0x0                   	// #0
    e07c:	mov	x2, #0x0                   	// #0
    e080:	b	2c10 <__register_frame_info_table_bases@plt>

000000000000e084 <__register_frame_table@@GLIBC_2.0>:
    e084:	stp	x29, x30, [sp, #-32]!
    e088:	mov	x29, sp
    e08c:	str	x19, [sp, #16]
    e090:	mov	x19, x0
    e094:	mov	x0, #0x30                  	// #48
    e098:	bl	2bb0 <malloc@plt>
    e09c:	mov	x1, x0
    e0a0:	mov	x0, x19
    e0a4:	ldr	x19, [sp, #16]
    e0a8:	ldp	x29, x30, [sp], #32
    e0ac:	b	2d20 <__register_frame_info_table@plt>

000000000000e0b0 <__deregister_frame_info_bases@@GCC_3.0>:
    e0b0:	stp	x29, x30, [sp, #-48]!
    e0b4:	mov	x29, sp
    e0b8:	stp	x19, x20, [sp, #16]
    e0bc:	stp	x21, x22, [sp, #32]
    e0c0:	cbz	x0, e19c <__deregister_frame_info_bases@@GCC_3.0+0xec>
    e0c4:	mov	x21, x0
    e0c8:	ldr	w0, [x0]
    e0cc:	cbz	w0, e19c <__deregister_frame_info_bases@@GCC_3.0+0xec>
    e0d0:	adrp	x20, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    e0d4:	adrp	x22, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    e0d8:	ldr	x0, [x20, #4032]
    e0dc:	cbz	x0, e0ec <__deregister_frame_info_bases@@GCC_3.0+0x3c>
    e0e0:	add	x0, x22, #0x240
    e0e4:	add	x0, x0, #0x198
    e0e8:	bl	2da0 <pthread_mutex_lock@plt>
    e0ec:	add	x0, x22, #0x240
    e0f0:	add	x0, x0, #0x1c8
    e0f4:	ldr	x19, [x0]
    e0f8:	cbnz	x19, e128 <__deregister_frame_info_bases@@GCC_3.0+0x78>
    e0fc:	add	x1, x22, #0x240
    e100:	add	x1, x1, #0x1d8
    e104:	ldr	x19, [x1]
    e108:	cbnz	x19, e154 <__deregister_frame_info_bases@@GCC_3.0+0xa4>
    e10c:	ldr	x20, [x20, #4032]
    e110:	cbz	x20, e124 <__deregister_frame_info_bases@@GCC_3.0+0x74>
    e114:	add	x0, x22, #0x240
    e118:	add	x0, x0, #0x198
    e11c:	bl	2db0 <pthread_mutex_unlock@plt>
    e120:	cbnz	x19, e1a0 <__deregister_frame_info_bases@@GCC_3.0+0xf0>
    e124:	bl	2c90 <abort@plt>
    e128:	ldr	x2, [x19, #24]
    e12c:	ldr	x1, [x19, #40]
    e130:	cmp	x21, x2
    e134:	b.ne	e148 <__deregister_frame_info_bases@@GCC_3.0+0x98>  // b.any
    e138:	str	x1, [x0]
    e13c:	ldr	x20, [x20, #4032]
    e140:	cbz	x20, e1a0 <__deregister_frame_info_bases@@GCC_3.0+0xf0>
    e144:	b	e114 <__deregister_frame_info_bases@@GCC_3.0+0x64>
    e148:	add	x0, x19, #0x28
    e14c:	mov	x19, x1
    e150:	b	e0f8 <__deregister_frame_info_bases@@GCC_3.0+0x48>
    e154:	ldrb	w2, [x19, #32]
    e158:	ldr	x0, [x19, #24]
    e15c:	tbz	w2, #0, e17c <__deregister_frame_info_bases@@GCC_3.0+0xcc>
    e160:	ldr	x2, [x0]
    e164:	cmp	x21, x2
    e168:	b.ne	e190 <__deregister_frame_info_bases@@GCC_3.0+0xe0>  // b.any
    e16c:	ldr	x2, [x19, #40]
    e170:	str	x2, [x1]
    e174:	bl	2d10 <free@plt>
    e178:	b	e13c <__deregister_frame_info_bases@@GCC_3.0+0x8c>
    e17c:	cmp	x21, x0
    e180:	b.ne	e190 <__deregister_frame_info_bases@@GCC_3.0+0xe0>  // b.any
    e184:	ldr	x0, [x19, #40]
    e188:	str	x0, [x1]
    e18c:	b	e13c <__deregister_frame_info_bases@@GCC_3.0+0x8c>
    e190:	add	x1, x19, #0x28
    e194:	ldr	x19, [x19, #40]
    e198:	b	e108 <__deregister_frame_info_bases@@GCC_3.0+0x58>
    e19c:	mov	x19, #0x0                   	// #0
    e1a0:	mov	x0, x19
    e1a4:	ldp	x19, x20, [sp, #16]
    e1a8:	ldp	x21, x22, [sp, #32]
    e1ac:	ldp	x29, x30, [sp], #48
    e1b0:	ret

000000000000e1b4 <__deregister_frame_info@@GLIBC_2.0>:
    e1b4:	b	2ba0 <__deregister_frame_info_bases@plt>

000000000000e1b8 <__deregister_frame@@GLIBC_2.0>:
    e1b8:	ldr	w1, [x0]
    e1bc:	cbz	w1, e1d4 <__deregister_frame@@GLIBC_2.0+0x1c>
    e1c0:	stp	x29, x30, [sp, #-16]!
    e1c4:	mov	x29, sp
    e1c8:	bl	2d30 <__deregister_frame_info@plt>
    e1cc:	ldp	x29, x30, [sp], #16
    e1d0:	b	2d10 <free@plt>
    e1d4:	ret

000000000000e1d8 <_Unwind_Find_FDE@@GCC_3.0>:
    e1d8:	stp	x29, x30, [sp, #-128]!
    e1dc:	mov	x29, sp
    e1e0:	stp	x21, x22, [sp, #32]
    e1e4:	mov	x22, x1
    e1e8:	stp	x23, x24, [sp, #48]
    e1ec:	adrp	x23, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    e1f0:	add	x1, x23, #0x240
    e1f4:	mov	x24, x0
    e1f8:	add	x0, x1, #0x1d0
    e1fc:	stp	x19, x20, [sp, #16]
    e200:	str	x25, [sp, #64]
    e204:	ldr	w0, [x0]
    e208:	cbz	w0, e264 <_Unwind_Find_FDE@@GCC_3.0+0x8c>
    e20c:	adrp	x21, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    e210:	ldr	x0, [x21, #4032]
    e214:	cbz	x0, e220 <_Unwind_Find_FDE@@GCC_3.0+0x48>
    e218:	add	x0, x1, #0x198
    e21c:	bl	2da0 <pthread_mutex_lock@plt>
    e220:	add	x0, x23, #0x240
    e224:	ldr	x20, [x0, #472]
    e228:	cbz	x20, e24c <_Unwind_Find_FDE@@GCC_3.0+0x74>
    e22c:	ldr	x0, [x20]
    e230:	cmp	x24, x0
    e234:	b.cc	e2ac <_Unwind_Find_FDE@@GCC_3.0+0xd4>  // b.lo, b.ul, b.last
    e238:	mov	x1, x24
    e23c:	mov	x0, x20
    e240:	bl	d9bc <_Unwind_Backtrace@@GCC_3.3+0xea4>
    e244:	mov	x19, x0
    e248:	cbnz	x0, e2e8 <_Unwind_Find_FDE@@GCC_3.0+0x110>
    e24c:	add	x20, x23, #0x240
    e250:	add	x25, x20, #0x1d8
    e254:	ldr	x19, [x20, #456]
    e258:	cbnz	x19, e2b4 <_Unwind_Find_FDE@@GCC_3.0+0xdc>
    e25c:	ldr	x21, [x21, #4032]
    e260:	cbnz	x21, e310 <_Unwind_Find_FDE@@GCC_3.0+0x138>
    e264:	mov	w0, #0x1                   	// #1
    e268:	add	x1, sp, #0x50
    e26c:	stp	x24, xzr, [sp, #80]
    e270:	stp	xzr, xzr, [sp, #96]
    e274:	str	xzr, [sp, #112]
    e278:	str	w0, [sp, #120]
    e27c:	adrp	x0, d000 <_Unwind_Backtrace@@GCC_3.3+0x4e8>
    e280:	add	x0, x0, #0x2a4
    e284:	bl	2cc0 <dl_iterate_phdr@plt>
    e288:	tbnz	w0, #31, e398 <_Unwind_Find_FDE@@GCC_3.0+0x1c0>
    e28c:	ldr	x19, [sp, #112]
    e290:	cbz	x19, e370 <_Unwind_Find_FDE@@GCC_3.0+0x198>
    e294:	ldr	x0, [sp, #88]
    e298:	str	x0, [x22]
    e29c:	ldr	x0, [sp, #96]
    e2a0:	str	x0, [x22, #8]
    e2a4:	ldr	x0, [sp, #104]
    e2a8:	b	e36c <_Unwind_Find_FDE@@GCC_3.0+0x194>
    e2ac:	ldr	x20, [x20, #40]
    e2b0:	b	e228 <_Unwind_Find_FDE@@GCC_3.0+0x50>
    e2b4:	ldr	x0, [x19, #40]
    e2b8:	mov	x1, x24
    e2bc:	str	x0, [x20, #456]
    e2c0:	mov	x0, x19
    e2c4:	bl	d9bc <_Unwind_Backtrace@@GCC_3.3+0xea4>
    e2c8:	ldr	x2, [x20, #472]
    e2cc:	mov	x1, x25
    e2d0:	cbnz	x2, e2f4 <_Unwind_Find_FDE@@GCC_3.0+0x11c>
    e2d4:	str	x2, [x19, #40]
    e2d8:	str	x19, [x1]
    e2dc:	cbz	x0, e254 <_Unwind_Find_FDE@@GCC_3.0+0x7c>
    e2e0:	mov	x20, x19
    e2e4:	mov	x19, x0
    e2e8:	ldr	x21, [x21, #4032]
    e2ec:	cbnz	x21, e314 <_Unwind_Find_FDE@@GCC_3.0+0x13c>
    e2f0:	b	e324 <_Unwind_Find_FDE@@GCC_3.0+0x14c>
    e2f4:	ldr	x4, [x2]
    e2f8:	ldr	x3, [x19]
    e2fc:	cmp	x4, x3
    e300:	b.cc	e2d4 <_Unwind_Find_FDE@@GCC_3.0+0xfc>  // b.lo, b.ul, b.last
    e304:	add	x1, x2, #0x28
    e308:	ldr	x2, [x2, #40]
    e30c:	b	e2d0 <_Unwind_Find_FDE@@GCC_3.0+0xf8>
    e310:	mov	x20, #0x0                   	// #0
    e314:	add	x0, x23, #0x240
    e318:	add	x0, x0, #0x198
    e31c:	bl	2db0 <pthread_mutex_unlock@plt>
    e320:	cbz	x19, e264 <_Unwind_Find_FDE@@GCC_3.0+0x8c>
    e324:	ldr	x0, [x20, #8]
    e328:	str	x0, [x22]
    e32c:	ldr	x0, [x20, #16]
    e330:	str	x0, [x22, #8]
    e334:	ldrb	w0, [x20, #32]
    e338:	tbnz	w0, #2, e38c <_Unwind_Find_FDE@@GCC_3.0+0x1b4>
    e33c:	ldrh	w0, [x20, #32]
    e340:	ubfx	x0, x0, #3, #8
    e344:	and	w21, w0, #0xff
    e348:	mov	x1, x20
    e34c:	mov	w0, w21
    e350:	bl	ce1c <_Unwind_Backtrace@@GCC_3.3+0x304>
    e354:	add	x3, sp, #0x50
    e358:	mov	x1, x0
    e35c:	add	x2, x19, #0x8
    e360:	mov	w0, w21
    e364:	bl	cedc <_Unwind_Backtrace@@GCC_3.3+0x3c4>
    e368:	ldr	x0, [sp, #80]
    e36c:	str	x0, [x22, #16]
    e370:	mov	x0, x19
    e374:	ldp	x19, x20, [sp, #16]
    e378:	ldp	x21, x22, [sp, #32]
    e37c:	ldp	x23, x24, [sp, #48]
    e380:	ldr	x25, [sp, #64]
    e384:	ldp	x29, x30, [sp], #128
    e388:	ret
    e38c:	mov	x0, x19
    e390:	bl	d294 <_Unwind_Backtrace@@GCC_3.3+0x77c>
    e394:	b	e344 <_Unwind_Find_FDE@@GCC_3.0+0x16c>
    e398:	mov	x19, #0x0                   	// #0
    e39c:	b	e370 <_Unwind_Find_FDE@@GCC_3.0+0x198>
    e3a0:	mov	x2, #0x0                   	// #0
    e3a4:	mov	w3, #0x0                   	// #0
    e3a8:	ldrb	w5, [x0], #1
    e3ac:	and	x4, x5, #0x7f
    e3b0:	lsl	x4, x4, x3
    e3b4:	add	w3, w3, #0x7
    e3b8:	orr	x2, x2, x4
    e3bc:	tbnz	w5, #7, e3a8 <_Unwind_Find_FDE@@GCC_3.0+0x1d0>
    e3c0:	str	x2, [x1]
    e3c4:	ret
    e3c8:	stp	x29, x30, [sp, #-64]!
    e3cc:	mov	x29, sp
    e3d0:	stp	x19, x20, [sp, #16]
    e3d4:	and	w20, w1, #0xff
    e3d8:	cmp	w20, #0xff
    e3dc:	stp	x21, x22, [sp, #32]
    e3e0:	b.eq	e410 <_Unwind_Find_FDE@@GCC_3.0+0x238>  // b.none
    e3e4:	and	w22, w20, #0x70
    e3e8:	mov	x19, x2
    e3ec:	mov	x21, x3
    e3f0:	cmp	w22, #0x30
    e3f4:	b.eq	e45c <_Unwind_Find_FDE@@GCC_3.0+0x284>  // b.none
    e3f8:	b.hi	e414 <_Unwind_Find_FDE@@GCC_3.0+0x23c>  // b.pmore
    e3fc:	cmp	w22, #0x20
    e400:	b.eq	e450 <_Unwind_Find_FDE@@GCC_3.0+0x278>  // b.none
    e404:	b.hi	e410 <_Unwind_Find_FDE@@GCC_3.0+0x238>  // b.pmore
    e408:	tst	w20, #0x60
    e40c:	b.eq	e46c <_Unwind_Find_FDE@@GCC_3.0+0x294>  // b.none
    e410:	bl	2c90 <abort@plt>
    e414:	cmp	w22, #0x40
    e418:	b.eq	e464 <_Unwind_Find_FDE@@GCC_3.0+0x28c>  // b.none
    e41c:	cmp	w22, #0x50
    e420:	mov	x6, #0x0                   	// #0
    e424:	b.ne	e410 <_Unwind_Find_FDE@@GCC_3.0+0x238>  // b.any
    e428:	cmp	w20, #0x50
    e42c:	b.ne	e474 <_Unwind_Find_FDE@@GCC_3.0+0x29c>  // b.any
    e430:	add	x0, x19, #0x7
    e434:	and	x0, x0, #0xfffffffffffffff8
    e438:	ldr	x1, [x0], #8
    e43c:	ldp	x19, x20, [sp, #16]
    e440:	str	x1, [x21]
    e444:	ldp	x21, x22, [sp, #32]
    e448:	ldp	x29, x30, [sp], #64
    e44c:	ret
    e450:	bl	2b90 <_Unwind_GetTextRelBase@plt>
    e454:	mov	x6, x0
    e458:	b	e428 <_Unwind_Find_FDE@@GCC_3.0+0x250>
    e45c:	bl	2df0 <_Unwind_GetDataRelBase@plt>
    e460:	b	e454 <_Unwind_Find_FDE@@GCC_3.0+0x27c>
    e464:	bl	2ae0 <_Unwind_GetRegionStart@plt>
    e468:	b	e454 <_Unwind_Find_FDE@@GCC_3.0+0x27c>
    e46c:	mov	x6, #0x0                   	// #0
    e470:	b	e428 <_Unwind_Find_FDE@@GCC_3.0+0x250>
    e474:	and	w1, w20, #0xf
    e478:	cmp	w1, #0xc
    e47c:	b.hi	e410 <_Unwind_Find_FDE@@GCC_3.0+0x238>  // b.pmore
    e480:	adrp	x0, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    e484:	add	x0, x0, #0xe40
    e488:	ldrb	w0, [x0, w1, uxtw]
    e48c:	adr	x1, e498 <_Unwind_Find_FDE@@GCC_3.0+0x2c0>
    e490:	add	x0, x1, w0, sxtb #2
    e494:	br	x0
    e498:	add	x1, sp, #0x38
    e49c:	mov	x0, x19
    e4a0:	bl	e3a0 <_Unwind_Find_FDE@@GCC_3.0+0x1c8>
    e4a4:	ldr	x1, [sp, #56]
    e4a8:	cbz	x1, e43c <_Unwind_Find_FDE@@GCC_3.0+0x264>
    e4ac:	b	e4ec <_Unwind_Find_FDE@@GCC_3.0+0x314>
    e4b0:	mov	x0, x19
    e4b4:	mov	x1, #0x0                   	// #0
    e4b8:	mov	w2, #0x0                   	// #0
    e4bc:	ldrb	w3, [x0], #1
    e4c0:	and	x4, x3, #0x7f
    e4c4:	lsl	x4, x4, x2
    e4c8:	add	w2, w2, #0x7
    e4cc:	orr	x1, x1, x4
    e4d0:	tbnz	w3, #7, e4bc <_Unwind_Find_FDE@@GCC_3.0+0x2e4>
    e4d4:	cmp	w2, #0x3f
    e4d8:	b.hi	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>  // b.pmore
    e4dc:	tbz	w3, #6, e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>
    e4e0:	mov	x3, #0xffffffffffffffff    	// #-1
    e4e4:	lsl	x2, x3, x2
    e4e8:	orr	x1, x1, x2
    e4ec:	cmp	w22, #0x10
    e4f0:	csel	x6, x19, x6, eq  // eq = none
    e4f4:	add	x1, x1, x6
    e4f8:	tbz	w20, #7, e43c <_Unwind_Find_FDE@@GCC_3.0+0x264>
    e4fc:	ldr	x1, [x1]
    e500:	b	e43c <_Unwind_Find_FDE@@GCC_3.0+0x264>
    e504:	mov	x0, x19
    e508:	ldrh	w1, [x0], #2
    e50c:	b	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>
    e510:	mov	x0, x19
    e514:	ldr	w1, [x0], #4
    e518:	b	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>
    e51c:	mov	x0, x19
    e520:	ldrsh	x1, [x0], #2
    e524:	b	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>
    e528:	mov	x0, x19
    e52c:	ldrsw	x1, [x0], #4
    e530:	b	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>
    e534:	mov	x0, x19
    e538:	ldr	x1, [x0], #8
    e53c:	b	e4a8 <_Unwind_Find_FDE@@GCC_3.0+0x2d0>

000000000000e540 <__gcc_personality_v0@@GCC_3.3.1>:
    e540:	stp	x29, x30, [sp, #-176]!
    e544:	cmp	w0, #0x1
    e548:	mov	x29, sp
    e54c:	stp	x19, x20, [sp, #16]
    e550:	stp	x21, x22, [sp, #32]
    e554:	stp	x23, x24, [sp, #48]
    e558:	stp	x25, x26, [sp, #64]
    e55c:	str	wzr, [sp, #92]
    e560:	b.ne	e720 <__gcc_personality_v0@@GCC_3.3.1+0x1e0>  // b.any
    e564:	tbnz	w1, #1, e584 <__gcc_personality_v0@@GCC_3.3.1+0x44>
    e568:	mov	w0, #0x8                   	// #8
    e56c:	ldp	x19, x20, [sp, #16]
    e570:	ldp	x21, x22, [sp, #32]
    e574:	ldp	x23, x24, [sp, #48]
    e578:	ldp	x25, x26, [sp, #64]
    e57c:	ldp	x29, x30, [sp], #176
    e580:	ret
    e584:	mov	x21, x3
    e588:	mov	x20, x4
    e58c:	mov	x0, x4
    e590:	bl	2b20 <_Unwind_GetLanguageSpecificData@plt>
    e594:	mov	x19, x0
    e598:	cbz	x0, e568 <__gcc_personality_v0@@GCC_3.3.1+0x28>
    e59c:	cbz	x20, e6b0 <__gcc_personality_v0@@GCC_3.3.1+0x170>
    e5a0:	mov	x0, x20
    e5a4:	bl	2ae0 <_Unwind_GetRegionStart@plt>
    e5a8:	mov	x2, x0
    e5ac:	mov	x0, x19
    e5b0:	str	x2, [sp, #128]
    e5b4:	ldrb	w1, [x0], #1
    e5b8:	cmp	w1, #0xff
    e5bc:	b.eq	e6b8 <__gcc_personality_v0@@GCC_3.3.1+0x178>  // b.none
    e5c0:	mov	x2, x0
    e5c4:	add	x3, sp, #0x88
    e5c8:	mov	x0, x20
    e5cc:	bl	e3c8 <_Unwind_Find_FDE@@GCC_3.0+0x1f0>
    e5d0:	ldrb	w1, [x0], #1
    e5d4:	add	x22, sp, #0x78
    e5d8:	strb	w1, [sp, #168]
    e5dc:	cmp	w1, #0xff
    e5e0:	b.eq	e6c0 <__gcc_personality_v0@@GCC_3.3.1+0x180>  // b.none
    e5e4:	mov	x1, x22
    e5e8:	bl	e3a0 <_Unwind_Find_FDE@@GCC_3.0+0x1c8>
    e5ec:	ldr	x1, [sp, #120]
    e5f0:	add	x1, x0, x1
    e5f4:	str	x1, [sp, #152]
    e5f8:	ldrb	w1, [x0], #1
    e5fc:	add	x26, sp, #0x60
    e600:	strb	w1, [sp, #169]
    e604:	mov	x1, x22
    e608:	add	x23, sp, #0x68
    e60c:	add	x24, sp, #0x70
    e610:	bl	e3a0 <_Unwind_Find_FDE@@GCC_3.0+0x1c8>
    e614:	mov	x19, x0
    e618:	ldr	x0, [sp, #120]
    e61c:	add	x1, sp, #0x5c
    e620:	add	x0, x19, x0
    e624:	str	x0, [sp, #160]
    e628:	mov	x0, x20
    e62c:	bl	2c40 <_Unwind_GetIPInfo@plt>
    e630:	ldr	w1, [sp, #92]
    e634:	cmp	w1, #0x0
    e638:	cset	x25, eq  // eq = none
    e63c:	sub	x25, x0, x25
    e640:	ldr	x0, [sp, #160]
    e644:	cmp	x0, x19
    e648:	b.ls	e568 <__gcc_personality_v0@@GCC_3.3.1+0x28>  // b.plast
    e64c:	ldrb	w1, [sp, #169]
    e650:	mov	x2, x19
    e654:	mov	x3, x26
    e658:	mov	x0, #0x0                   	// #0
    e65c:	bl	e3c8 <_Unwind_Find_FDE@@GCC_3.0+0x1f0>
    e660:	mov	x2, x0
    e664:	ldrb	w1, [sp, #169]
    e668:	mov	x3, x23
    e66c:	mov	x0, #0x0                   	// #0
    e670:	bl	e3c8 <_Unwind_Find_FDE@@GCC_3.0+0x1f0>
    e674:	mov	x2, x0
    e678:	ldrb	w1, [sp, #169]
    e67c:	mov	x3, x24
    e680:	mov	x0, #0x0                   	// #0
    e684:	bl	e3c8 <_Unwind_Find_FDE@@GCC_3.0+0x1f0>
    e688:	mov	x1, x22
    e68c:	bl	e3a0 <_Unwind_Find_FDE@@GCC_3.0+0x1c8>
    e690:	mov	x19, x0
    e694:	ldr	x0, [sp, #96]
    e698:	ldr	x1, [sp, #128]
    e69c:	add	x1, x1, x0
    e6a0:	cmp	x1, x25
    e6a4:	b.ls	e6c8 <__gcc_personality_v0@@GCC_3.3.1+0x188>  // b.plast
    e6a8:	ldr	x19, [sp, #160]
    e6ac:	b	e640 <__gcc_personality_v0@@GCC_3.3.1+0x100>
    e6b0:	mov	x2, #0x0                   	// #0
    e6b4:	b	e5ac <__gcc_personality_v0@@GCC_3.3.1+0x6c>
    e6b8:	str	x2, [sp, #136]
    e6bc:	b	e5d0 <__gcc_personality_v0@@GCC_3.3.1+0x90>
    e6c0:	str	xzr, [sp, #152]
    e6c4:	b	e5f8 <__gcc_personality_v0@@GCC_3.3.1+0xb8>
    e6c8:	ldr	x0, [sp, #104]
    e6cc:	add	x1, x1, x0
    e6d0:	cmp	x1, x25
    e6d4:	b.ls	e640 <__gcc_personality_v0@@GCC_3.3.1+0x100>  // b.plast
    e6d8:	ldr	x0, [sp, #112]
    e6dc:	cbz	x0, e568 <__gcc_personality_v0@@GCC_3.3.1+0x28>
    e6e0:	ldr	x19, [sp, #136]
    e6e4:	adds	x19, x0, x19
    e6e8:	b.eq	e568 <__gcc_personality_v0@@GCC_3.3.1+0x28>  // b.none
    e6ec:	mov	x2, x21
    e6f0:	mov	x0, x20
    e6f4:	mov	w1, #0x0                   	// #0
    e6f8:	bl	2d90 <_Unwind_SetGR@plt>
    e6fc:	mov	x2, #0x0                   	// #0
    e700:	mov	x0, x20
    e704:	mov	w1, #0x1                   	// #1
    e708:	bl	2d90 <_Unwind_SetGR@plt>
    e70c:	mov	x0, x20
    e710:	mov	x1, x19
    e714:	bl	2b10 <_Unwind_SetIP@plt>
    e718:	mov	w0, #0x7                   	// #7
    e71c:	b	e56c <__gcc_personality_v0@@GCC_3.3.1+0x2c>
    e720:	mov	w0, #0x3                   	// #3
    e724:	b	e56c <__gcc_personality_v0@@GCC_3.3.1+0x2c>
    e728:	stp	x29, x30, [sp, #-16]!
    e72c:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    e730:	adrp	x0, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    e734:	mov	x29, sp
    e738:	add	x1, x1, #0x754
    e73c:	add	x0, x0, #0x420
    e740:	bl	2c70 <pthread_key_create@plt>
    e744:	cbz	w0, e74c <__gcc_personality_v0@@GCC_3.3.1+0x20c>
    e748:	bl	2c90 <abort@plt>
    e74c:	ldp	x29, x30, [sp], #16
    e750:	ret
    e754:	stp	x29, x30, [sp, #-48]!
    e758:	mov	x29, sp
    e75c:	stp	x21, x22, [sp, #32]
    e760:	mov	x21, x0
    e764:	stp	x19, x20, [sp, #16]
    e768:	mov	x19, x0
    e76c:	mov	x20, #0x0                   	// #0
    e770:	ldr	x22, [x21], #8
    e774:	cmp	x20, x22
    e778:	b.ne	e790 <__gcc_personality_v0@@GCC_3.3.1+0x250>  // b.any
    e77c:	mov	x0, x19
    e780:	ldp	x19, x20, [sp, #16]
    e784:	ldp	x21, x22, [sp, #32]
    e788:	ldp	x29, x30, [sp], #48
    e78c:	b	2d10 <free@plt>
    e790:	ldr	x0, [x21, x20, lsl #3]
    e794:	cbz	x0, e7a0 <__gcc_personality_v0@@GCC_3.3.1+0x260>
    e798:	ldur	x0, [x0, #-8]
    e79c:	bl	2d10 <free@plt>
    e7a0:	add	x20, x20, #0x1
    e7a4:	b	e774 <__gcc_personality_v0@@GCC_3.3.1+0x234>
    e7a8:	stp	x29, x30, [sp, #-48]!
    e7ac:	mov	x29, sp
    e7b0:	stp	x19, x20, [sp, #16]
    e7b4:	mov	x20, x0
    e7b8:	ldr	x19, [x0, #8]
    e7bc:	str	x21, [sp, #32]
    e7c0:	ldr	x21, [x0]
    e7c4:	cmp	x19, #0x8
    e7c8:	b.hi	e808 <__gcc_personality_v0@@GCC_3.3.1+0x2c8>  // b.pmore
    e7cc:	add	x0, x21, #0x8
    e7d0:	bl	2bb0 <malloc@plt>
    e7d4:	cbnz	x0, e7dc <__gcc_personality_v0@@GCC_3.3.1+0x29c>
    e7d8:	bl	2c90 <abort@plt>
    e7dc:	add	x3, x0, #0x8
    e7e0:	str	x0, [x0]
    e7e4:	ldr	x1, [x20, #24]
    e7e8:	mov	x2, x21
    e7ec:	cbz	x1, e830 <__gcc_personality_v0@@GCC_3.3.1+0x2f0>
    e7f0:	mov	x0, x3
    e7f4:	bl	2ad0 <memcpy@plt>
    e7f8:	ldp	x19, x20, [sp, #16]
    e7fc:	ldr	x21, [sp, #32]
    e800:	ldp	x29, x30, [sp], #48
    e804:	ret
    e808:	add	x0, x19, x21
    e80c:	add	x0, x0, #0x7
    e810:	bl	2bb0 <malloc@plt>
    e814:	cbz	x0, e7d8 <__gcc_personality_v0@@GCC_3.3.1+0x298>
    e818:	add	x3, x19, #0x7
    e81c:	neg	x19, x19
    e820:	add	x3, x0, x3
    e824:	and	x3, x3, x19
    e828:	stur	x0, [x3, #-8]
    e82c:	b	e7e4 <__gcc_personality_v0@@GCC_3.3.1+0x2a4>
    e830:	mov	x0, x3
    e834:	mov	w1, #0x0                   	// #0
    e838:	bl	2be0 <memset@plt>
    e83c:	b	e7f8 <__gcc_personality_v0@@GCC_3.3.1+0x2b8>

000000000000e840 <__emutls_get_address@@GCC_4.3.0>:
    e840:	stp	x29, x30, [sp, #-64]!
    e844:	adrp	x1, 20000 <__emutls_register_common@@GCC_4.3.0+0x1167c>
    e848:	mov	x29, sp
    e84c:	ldr	x1, [x1, #4032]
    e850:	stp	x19, x20, [sp, #16]
    e854:	stp	x21, x22, [sp, #32]
    e858:	mov	x21, x0
    e85c:	stp	x23, x24, [sp, #48]
    e860:	cbnz	x1, e88c <__emutls_get_address@@GCC_4.3.0+0x4c>
    e864:	ldr	x1, [x0, #16]
    e868:	cbnz	x1, e874 <__emutls_get_address@@GCC_4.3.0+0x34>
    e86c:	bl	e7a8 <__gcc_personality_v0@@GCC_3.3.1+0x268>
    e870:	str	x0, [x21, #16]
    e874:	ldr	x0, [x21, #16]
    e878:	ldp	x19, x20, [sp, #16]
    e87c:	ldp	x21, x22, [sp, #32]
    e880:	ldp	x23, x24, [sp, #48]
    e884:	ldp	x29, x30, [sp], #64
    e888:	ret
    e88c:	add	x22, x0, #0x10
    e890:	ldar	x20, [x22]
    e894:	adrp	x23, 21000 <__emutls_register_common@@GCC_4.3.0+0x1267c>
    e898:	cbnz	x20, e8dc <__emutls_get_address@@GCC_4.3.0+0x9c>
    e89c:	adrp	x1, e000 <__register_frame_info_table_bases@@GCC_3.0+0x24>
    e8a0:	add	x1, x1, #0x728
    e8a4:	add	x19, x23, #0x420
    e8a8:	add	x0, x19, #0x4
    e8ac:	bl	2cb0 <pthread_once@plt>
    e8b0:	add	x0, x19, #0x8
    e8b4:	bl	2da0 <pthread_mutex_lock@plt>
    e8b8:	ldr	x20, [x21, #16]
    e8bc:	cbnz	x20, e8d0 <__emutls_get_address@@GCC_4.3.0+0x90>
    e8c0:	ldr	x20, [x19, #56]
    e8c4:	add	x20, x20, #0x1
    e8c8:	str	x20, [x19, #56]
    e8cc:	stlr	x20, [x22]
    e8d0:	add	x0, x23, #0x420
    e8d4:	add	x0, x0, #0x8
    e8d8:	bl	2db0 <pthread_mutex_unlock@plt>
    e8dc:	ldr	w0, [x23, #1056]
    e8e0:	bl	2bc0 <pthread_getspecific@plt>
    e8e4:	mov	x19, x0
    e8e8:	cbnz	x0, e934 <__emutls_get_address@@GCC_4.3.0+0xf4>
    e8ec:	add	x0, x20, #0x21
    e8f0:	mov	x1, #0x8                   	// #8
    e8f4:	add	x22, x20, #0x20
    e8f8:	bl	2c20 <calloc@plt>
    e8fc:	mov	x19, x0
    e900:	cbnz	x0, e908 <__emutls_get_address@@GCC_4.3.0+0xc8>
    e904:	bl	2c90 <abort@plt>
    e908:	str	x22, [x0]
    e90c:	ldr	w0, [x23, #1056]
    e910:	mov	x1, x19
    e914:	bl	2cf0 <pthread_setspecific@plt>
    e918:	lsl	x20, x20, #3
    e91c:	ldr	x0, [x19, x20]
    e920:	cbnz	x0, e878 <__emutls_get_address@@GCC_4.3.0+0x38>
    e924:	mov	x0, x21
    e928:	bl	e7a8 <__gcc_personality_v0@@GCC_3.3.1+0x268>
    e92c:	str	x0, [x19, x20]
    e930:	b	e878 <__emutls_get_address@@GCC_4.3.0+0x38>
    e934:	ldr	x24, [x0]
    e938:	cmp	x24, x20
    e93c:	b.cs	e918 <__emutls_get_address@@GCC_4.3.0+0xd8>  // b.hs, b.nlast
    e940:	lsl	x22, x24, #1
    e944:	cmp	x20, x24, lsl #1
    e948:	b.ls	e950 <__emutls_get_address@@GCC_4.3.0+0x110>  // b.plast
    e94c:	add	x22, x20, #0x20
    e950:	add	x1, x22, #0x1
    e954:	mov	x0, x19
    e958:	lsl	x1, x1, #3
    e95c:	bl	2c50 <realloc@plt>
    e960:	mov	x19, x0
    e964:	cbz	x0, e904 <__emutls_get_address@@GCC_4.3.0+0xc4>
    e968:	sub	x2, x22, x24
    e96c:	str	x22, [x0], #8
    e970:	mov	w1, #0x0                   	// #0
    e974:	lsl	x2, x2, #3
    e978:	add	x0, x0, x24, lsl #3
    e97c:	bl	2be0 <memset@plt>
    e980:	b	e90c <__emutls_get_address@@GCC_4.3.0+0xcc>

000000000000e984 <__emutls_register_common@@GCC_4.3.0>:
    e984:	ldr	x4, [x0]
    e988:	cmp	x4, x1
    e98c:	b.cs	e998 <__emutls_register_common@@GCC_4.3.0+0x14>  // b.hs, b.nlast
    e990:	str	x1, [x0]
    e994:	str	xzr, [x0, #24]
    e998:	ldr	x4, [x0, #8]
    e99c:	cmp	x4, x2
    e9a0:	b.cs	e9a8 <__emutls_register_common@@GCC_4.3.0+0x24>  // b.hs, b.nlast
    e9a4:	str	x2, [x0, #8]
    e9a8:	cbz	x3, e9bc <__emutls_register_common@@GCC_4.3.0+0x38>
    e9ac:	ldr	x2, [x0]
    e9b0:	cmp	x2, x1
    e9b4:	b.ne	e9bc <__emutls_register_common@@GCC_4.3.0+0x38>  // b.any
    e9b8:	str	x3, [x0, #24]
    e9bc:	ret

Disassembly of section .fini:

000000000000e9c0 <.fini>:
    e9c0:	stp	x29, x30, [sp, #-16]!
    e9c4:	mov	x29, sp
    e9c8:	ldp	x29, x30, [sp], #16
    e9cc:	ret
