In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.asan_cxx-aarch64.a_clang_-O3:

asan_new_delete.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_Znwm>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	stp	x28, x21, [sp, #16]
       8:	stp	x20, x19, [sp, #32]
       c:	mov	x29, sp
      10:	sub	sp, sp, #0x820
      14:	add	x8, sp, #0x8
      18:	add	x8, x8, #0x10
      1c:	mov	x20, x30
      20:	mov	x19, x0
      24:	stp	x8, xzr, [sp, #8]
      28:	str	xzr, [sp, #2072]
      2c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
      30:	cmp	w0, #0x2
      34:	b.hi	68 <_Znwm+0x68>  // b.pmore
      38:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
      3c:	str	w0, [sp, #16]
      40:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
      44:	cbz	w0, c4 <_Znwm+0xc4>
      48:	str	x29, [sp, #2072]
      4c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
      50:	str	x0, [sp, #24]
      54:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
      58:	cmp	w0, #0x2
      5c:	b.cc	c4 <_Znwm+0xc4>  // b.lo, b.ul, b.last
      60:	str	x20, [sp, #32]
      64:	b	c4 <_Znwm+0xc4>
      68:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
      6c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
      70:	ldr	x8, [x8]
      74:	mov	x20, x0
      78:	ldrb	w21, [x8, #34]
      7c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
      80:	cmp	w0, #0x0
      84:	mov	w5, w0
      88:	csel	x8, xzr, x29, eq  // eq = none
      8c:	cmp	w0, #0x1
      90:	str	x8, [sp, #2072]
      94:	b.hi	a8 <_Znwm+0xa8>  // b.pmore
      98:	b.ne	a0 <_Znwm+0xa0>  // b.any
      9c:	str	x20, [sp, #24]
      a0:	str	w5, [sp, #16]
      a4:	b	c4 <_Znwm+0xc4>
      a8:	cmp	w21, #0x0
      ac:	cset	w4, ne  // ne = any
      b0:	add	x0, sp, #0x8
      b4:	mov	x1, x20
      b8:	mov	x2, x29
      bc:	mov	x3, xzr
      c0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
      c4:	add	x2, sp, #0x8
      c8:	mov	w3, #0x2                   	// #2
      cc:	mov	x0, xzr
      d0:	mov	x1, x19
      d4:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
      d8:	mov	x20, x0
      dc:	cbz	x0, f8 <_Znwm+0xf8>
      e0:	mov	x0, x20
      e4:	add	sp, sp, #0x820
      e8:	ldp	x20, x19, [sp, #32]
      ec:	ldp	x28, x21, [sp, #16]
      f0:	ldp	x29, x30, [sp], #48
      f4:	ret
      f8:	add	x1, sp, #0x8
      fc:	mov	x0, x19
     100:	bl	0 <_ZN6__asan17ReportOutOfMemoryEmPN11__sanitizer18BufferedStackTraceE>
     104:	b	e0 <_Znwm+0xe0>

0000000000000108 <_Znam>:
     108:	stp	x29, x30, [sp, #-48]!
     10c:	stp	x28, x21, [sp, #16]
     110:	stp	x20, x19, [sp, #32]
     114:	mov	x29, sp
     118:	sub	sp, sp, #0x820
     11c:	add	x8, sp, #0x8
     120:	add	x8, x8, #0x10
     124:	mov	x20, x30
     128:	mov	x19, x0
     12c:	stp	x8, xzr, [sp, #8]
     130:	str	xzr, [sp, #2072]
     134:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     138:	cmp	w0, #0x2
     13c:	b.hi	170 <_Znam+0x68>  // b.pmore
     140:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     144:	str	w0, [sp, #16]
     148:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     14c:	cbz	w0, 1cc <_Znam+0xc4>
     150:	str	x29, [sp, #2072]
     154:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     158:	str	x0, [sp, #24]
     15c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     160:	cmp	w0, #0x2
     164:	b.cc	1cc <_Znam+0xc4>  // b.lo, b.ul, b.last
     168:	str	x20, [sp, #32]
     16c:	b	1cc <_Znam+0xc4>
     170:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     174:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     178:	ldr	x8, [x8]
     17c:	mov	x20, x0
     180:	ldrb	w21, [x8, #34]
     184:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     188:	cmp	w0, #0x0
     18c:	mov	w5, w0
     190:	csel	x8, xzr, x29, eq  // eq = none
     194:	cmp	w0, #0x1
     198:	str	x8, [sp, #2072]
     19c:	b.hi	1b0 <_Znam+0xa8>  // b.pmore
     1a0:	b.ne	1a8 <_Znam+0xa0>  // b.any
     1a4:	str	x20, [sp, #24]
     1a8:	str	w5, [sp, #16]
     1ac:	b	1cc <_Znam+0xc4>
     1b0:	cmp	w21, #0x0
     1b4:	cset	w4, ne  // ne = any
     1b8:	add	x0, sp, #0x8
     1bc:	mov	x1, x20
     1c0:	mov	x2, x29
     1c4:	mov	x3, xzr
     1c8:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     1cc:	add	x2, sp, #0x8
     1d0:	mov	w3, #0x3                   	// #3
     1d4:	mov	x0, xzr
     1d8:	mov	x1, x19
     1dc:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     1e0:	mov	x20, x0
     1e4:	cbz	x0, 200 <_Znam+0xf8>
     1e8:	mov	x0, x20
     1ec:	add	sp, sp, #0x820
     1f0:	ldp	x20, x19, [sp, #32]
     1f4:	ldp	x28, x21, [sp, #16]
     1f8:	ldp	x29, x30, [sp], #48
     1fc:	ret
     200:	add	x1, sp, #0x8
     204:	mov	x0, x19
     208:	bl	0 <_ZN6__asan17ReportOutOfMemoryEmPN11__sanitizer18BufferedStackTraceE>
     20c:	b	1e8 <_Znam+0xe0>

0000000000000210 <_ZnwmRKSt9nothrow_t>:
     210:	stp	x29, x30, [sp, #-48]!
     214:	stp	x28, x21, [sp, #16]
     218:	stp	x20, x19, [sp, #32]
     21c:	mov	x29, sp
     220:	sub	sp, sp, #0x820
     224:	add	x8, sp, #0x8
     228:	add	x8, x8, #0x10
     22c:	mov	x20, x30
     230:	mov	x19, x0
     234:	stp	x8, xzr, [sp, #8]
     238:	str	xzr, [sp, #2072]
     23c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     240:	cmp	w0, #0x2
     244:	b.hi	278 <_ZnwmRKSt9nothrow_t+0x68>  // b.pmore
     248:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     24c:	str	w0, [sp, #16]
     250:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     254:	cbz	w0, 2d4 <_ZnwmRKSt9nothrow_t+0xc4>
     258:	str	x29, [sp, #2072]
     25c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     260:	str	x0, [sp, #24]
     264:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     268:	cmp	w0, #0x2
     26c:	b.cc	2d4 <_ZnwmRKSt9nothrow_t+0xc4>  // b.lo, b.ul, b.last
     270:	str	x20, [sp, #32]
     274:	b	2d4 <_ZnwmRKSt9nothrow_t+0xc4>
     278:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     27c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     280:	ldr	x8, [x8]
     284:	mov	x20, x0
     288:	ldrb	w21, [x8, #34]
     28c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     290:	cmp	w0, #0x0
     294:	mov	w5, w0
     298:	csel	x8, xzr, x29, eq  // eq = none
     29c:	cmp	w0, #0x1
     2a0:	str	x8, [sp, #2072]
     2a4:	b.hi	2b8 <_ZnwmRKSt9nothrow_t+0xa8>  // b.pmore
     2a8:	b.ne	2b0 <_ZnwmRKSt9nothrow_t+0xa0>  // b.any
     2ac:	str	x20, [sp, #24]
     2b0:	str	w5, [sp, #16]
     2b4:	b	2d4 <_ZnwmRKSt9nothrow_t+0xc4>
     2b8:	cmp	w21, #0x0
     2bc:	cset	w4, ne  // ne = any
     2c0:	add	x0, sp, #0x8
     2c4:	mov	x1, x20
     2c8:	mov	x2, x29
     2cc:	mov	x3, xzr
     2d0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     2d4:	add	x2, sp, #0x8
     2d8:	mov	w3, #0x2                   	// #2
     2dc:	mov	x0, xzr
     2e0:	mov	x1, x19
     2e4:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     2e8:	add	sp, sp, #0x820
     2ec:	ldp	x20, x19, [sp, #32]
     2f0:	ldp	x28, x21, [sp, #16]
     2f4:	ldp	x29, x30, [sp], #48
     2f8:	ret

00000000000002fc <_ZnamRKSt9nothrow_t>:
     2fc:	stp	x29, x30, [sp, #-48]!
     300:	stp	x28, x21, [sp, #16]
     304:	stp	x20, x19, [sp, #32]
     308:	mov	x29, sp
     30c:	sub	sp, sp, #0x820
     310:	add	x8, sp, #0x8
     314:	add	x8, x8, #0x10
     318:	mov	x20, x30
     31c:	mov	x19, x0
     320:	stp	x8, xzr, [sp, #8]
     324:	str	xzr, [sp, #2072]
     328:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     32c:	cmp	w0, #0x2
     330:	b.hi	364 <_ZnamRKSt9nothrow_t+0x68>  // b.pmore
     334:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     338:	str	w0, [sp, #16]
     33c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     340:	cbz	w0, 3c0 <_ZnamRKSt9nothrow_t+0xc4>
     344:	str	x29, [sp, #2072]
     348:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     34c:	str	x0, [sp, #24]
     350:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     354:	cmp	w0, #0x2
     358:	b.cc	3c0 <_ZnamRKSt9nothrow_t+0xc4>  // b.lo, b.ul, b.last
     35c:	str	x20, [sp, #32]
     360:	b	3c0 <_ZnamRKSt9nothrow_t+0xc4>
     364:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     368:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     36c:	ldr	x8, [x8]
     370:	mov	x20, x0
     374:	ldrb	w21, [x8, #34]
     378:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     37c:	cmp	w0, #0x0
     380:	mov	w5, w0
     384:	csel	x8, xzr, x29, eq  // eq = none
     388:	cmp	w0, #0x1
     38c:	str	x8, [sp, #2072]
     390:	b.hi	3a4 <_ZnamRKSt9nothrow_t+0xa8>  // b.pmore
     394:	b.ne	39c <_ZnamRKSt9nothrow_t+0xa0>  // b.any
     398:	str	x20, [sp, #24]
     39c:	str	w5, [sp, #16]
     3a0:	b	3c0 <_ZnamRKSt9nothrow_t+0xc4>
     3a4:	cmp	w21, #0x0
     3a8:	cset	w4, ne  // ne = any
     3ac:	add	x0, sp, #0x8
     3b0:	mov	x1, x20
     3b4:	mov	x2, x29
     3b8:	mov	x3, xzr
     3bc:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     3c0:	add	x2, sp, #0x8
     3c4:	mov	w3, #0x3                   	// #3
     3c8:	mov	x0, xzr
     3cc:	mov	x1, x19
     3d0:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     3d4:	add	sp, sp, #0x820
     3d8:	ldp	x20, x19, [sp, #32]
     3dc:	ldp	x28, x21, [sp, #16]
     3e0:	ldp	x29, x30, [sp], #48
     3e4:	ret

00000000000003e8 <_ZnwmSt11align_val_t>:
     3e8:	stp	x29, x30, [sp, #-64]!
     3ec:	str	x28, [sp, #16]
     3f0:	stp	x22, x21, [sp, #32]
     3f4:	stp	x20, x19, [sp, #48]
     3f8:	mov	x29, sp
     3fc:	sub	sp, sp, #0x820
     400:	add	x8, sp, #0x8
     404:	add	x8, x8, #0x10
     408:	mov	x21, x30
     40c:	mov	x20, x1
     410:	mov	x19, x0
     414:	stp	x8, xzr, [sp, #8]
     418:	str	xzr, [sp, #2072]
     41c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     420:	cmp	w0, #0x2
     424:	b.hi	458 <_ZnwmSt11align_val_t+0x70>  // b.pmore
     428:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     42c:	str	w0, [sp, #16]
     430:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     434:	cbz	w0, 4b4 <_ZnwmSt11align_val_t+0xcc>
     438:	str	x29, [sp, #2072]
     43c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     440:	str	x0, [sp, #24]
     444:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     448:	cmp	w0, #0x2
     44c:	b.cc	4b4 <_ZnwmSt11align_val_t+0xcc>  // b.lo, b.ul, b.last
     450:	str	x21, [sp, #32]
     454:	b	4b4 <_ZnwmSt11align_val_t+0xcc>
     458:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     45c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     460:	ldr	x8, [x8]
     464:	mov	x21, x0
     468:	ldrb	w22, [x8, #34]
     46c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     470:	cmp	w0, #0x0
     474:	mov	w5, w0
     478:	csel	x8, xzr, x29, eq  // eq = none
     47c:	cmp	w0, #0x1
     480:	str	x8, [sp, #2072]
     484:	b.hi	498 <_ZnwmSt11align_val_t+0xb0>  // b.pmore
     488:	b.ne	490 <_ZnwmSt11align_val_t+0xa8>  // b.any
     48c:	str	x21, [sp, #24]
     490:	str	w5, [sp, #16]
     494:	b	4b4 <_ZnwmSt11align_val_t+0xcc>
     498:	cmp	w22, #0x0
     49c:	cset	w4, ne  // ne = any
     4a0:	add	x0, sp, #0x8
     4a4:	mov	x1, x21
     4a8:	mov	x2, x29
     4ac:	mov	x3, xzr
     4b0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     4b4:	add	x2, sp, #0x8
     4b8:	mov	w3, #0x2                   	// #2
     4bc:	mov	x0, x20
     4c0:	mov	x1, x19
     4c4:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     4c8:	mov	x20, x0
     4cc:	cbz	x0, 4ec <_ZnwmSt11align_val_t+0x104>
     4d0:	mov	x0, x20
     4d4:	add	sp, sp, #0x820
     4d8:	ldp	x20, x19, [sp, #48]
     4dc:	ldp	x22, x21, [sp, #32]
     4e0:	ldr	x28, [sp, #16]
     4e4:	ldp	x29, x30, [sp], #64
     4e8:	ret
     4ec:	add	x1, sp, #0x8
     4f0:	mov	x0, x19
     4f4:	bl	0 <_ZN6__asan17ReportOutOfMemoryEmPN11__sanitizer18BufferedStackTraceE>
     4f8:	b	4d0 <_ZnwmSt11align_val_t+0xe8>

00000000000004fc <_ZnamSt11align_val_t>:
     4fc:	stp	x29, x30, [sp, #-64]!
     500:	str	x28, [sp, #16]
     504:	stp	x22, x21, [sp, #32]
     508:	stp	x20, x19, [sp, #48]
     50c:	mov	x29, sp
     510:	sub	sp, sp, #0x820
     514:	add	x8, sp, #0x8
     518:	add	x8, x8, #0x10
     51c:	mov	x21, x30
     520:	mov	x20, x1
     524:	mov	x19, x0
     528:	stp	x8, xzr, [sp, #8]
     52c:	str	xzr, [sp, #2072]
     530:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     534:	cmp	w0, #0x2
     538:	b.hi	56c <_ZnamSt11align_val_t+0x70>  // b.pmore
     53c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     540:	str	w0, [sp, #16]
     544:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     548:	cbz	w0, 5c8 <_ZnamSt11align_val_t+0xcc>
     54c:	str	x29, [sp, #2072]
     550:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     554:	str	x0, [sp, #24]
     558:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     55c:	cmp	w0, #0x2
     560:	b.cc	5c8 <_ZnamSt11align_val_t+0xcc>  // b.lo, b.ul, b.last
     564:	str	x21, [sp, #32]
     568:	b	5c8 <_ZnamSt11align_val_t+0xcc>
     56c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     570:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     574:	ldr	x8, [x8]
     578:	mov	x21, x0
     57c:	ldrb	w22, [x8, #34]
     580:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     584:	cmp	w0, #0x0
     588:	mov	w5, w0
     58c:	csel	x8, xzr, x29, eq  // eq = none
     590:	cmp	w0, #0x1
     594:	str	x8, [sp, #2072]
     598:	b.hi	5ac <_ZnamSt11align_val_t+0xb0>  // b.pmore
     59c:	b.ne	5a4 <_ZnamSt11align_val_t+0xa8>  // b.any
     5a0:	str	x21, [sp, #24]
     5a4:	str	w5, [sp, #16]
     5a8:	b	5c8 <_ZnamSt11align_val_t+0xcc>
     5ac:	cmp	w22, #0x0
     5b0:	cset	w4, ne  // ne = any
     5b4:	add	x0, sp, #0x8
     5b8:	mov	x1, x21
     5bc:	mov	x2, x29
     5c0:	mov	x3, xzr
     5c4:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     5c8:	add	x2, sp, #0x8
     5cc:	mov	w3, #0x3                   	// #3
     5d0:	mov	x0, x20
     5d4:	mov	x1, x19
     5d8:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     5dc:	mov	x20, x0
     5e0:	cbz	x0, 600 <_ZnamSt11align_val_t+0x104>
     5e4:	mov	x0, x20
     5e8:	add	sp, sp, #0x820
     5ec:	ldp	x20, x19, [sp, #48]
     5f0:	ldp	x22, x21, [sp, #32]
     5f4:	ldr	x28, [sp, #16]
     5f8:	ldp	x29, x30, [sp], #64
     5fc:	ret
     600:	add	x1, sp, #0x8
     604:	mov	x0, x19
     608:	bl	0 <_ZN6__asan17ReportOutOfMemoryEmPN11__sanitizer18BufferedStackTraceE>
     60c:	b	5e4 <_ZnamSt11align_val_t+0xe8>

0000000000000610 <_ZnwmSt11align_val_tRKSt9nothrow_t>:
     610:	stp	x29, x30, [sp, #-64]!
     614:	str	x28, [sp, #16]
     618:	stp	x22, x21, [sp, #32]
     61c:	stp	x20, x19, [sp, #48]
     620:	mov	x29, sp
     624:	sub	sp, sp, #0x820
     628:	add	x8, sp, #0x8
     62c:	add	x8, x8, #0x10
     630:	mov	x21, x30
     634:	mov	x19, x1
     638:	mov	x20, x0
     63c:	stp	x8, xzr, [sp, #8]
     640:	str	xzr, [sp, #2072]
     644:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     648:	cmp	w0, #0x2
     64c:	b.hi	680 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x70>  // b.pmore
     650:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     654:	str	w0, [sp, #16]
     658:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     65c:	cbz	w0, 6dc <_ZnwmSt11align_val_tRKSt9nothrow_t+0xcc>
     660:	str	x29, [sp, #2072]
     664:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     668:	str	x0, [sp, #24]
     66c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     670:	cmp	w0, #0x2
     674:	b.cc	6dc <_ZnwmSt11align_val_tRKSt9nothrow_t+0xcc>  // b.lo, b.ul, b.last
     678:	str	x21, [sp, #32]
     67c:	b	6dc <_ZnwmSt11align_val_tRKSt9nothrow_t+0xcc>
     680:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     684:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     688:	ldr	x8, [x8]
     68c:	mov	x21, x0
     690:	ldrb	w22, [x8, #34]
     694:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     698:	cmp	w0, #0x0
     69c:	mov	w5, w0
     6a0:	csel	x8, xzr, x29, eq  // eq = none
     6a4:	cmp	w0, #0x1
     6a8:	str	x8, [sp, #2072]
     6ac:	b.hi	6c0 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xb0>  // b.pmore
     6b0:	b.ne	6b8 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xa8>  // b.any
     6b4:	str	x21, [sp, #24]
     6b8:	str	w5, [sp, #16]
     6bc:	b	6dc <_ZnwmSt11align_val_tRKSt9nothrow_t+0xcc>
     6c0:	cmp	w22, #0x0
     6c4:	cset	w4, ne  // ne = any
     6c8:	add	x0, sp, #0x8
     6cc:	mov	x1, x21
     6d0:	mov	x2, x29
     6d4:	mov	x3, xzr
     6d8:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     6dc:	add	x2, sp, #0x8
     6e0:	mov	w3, #0x2                   	// #2
     6e4:	mov	x0, x19
     6e8:	mov	x1, x20
     6ec:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     6f0:	add	sp, sp, #0x820
     6f4:	ldp	x20, x19, [sp, #48]
     6f8:	ldp	x22, x21, [sp, #32]
     6fc:	ldr	x28, [sp, #16]
     700:	ldp	x29, x30, [sp], #64
     704:	ret

0000000000000708 <_ZnamSt11align_val_tRKSt9nothrow_t>:
     708:	stp	x29, x30, [sp, #-64]!
     70c:	str	x28, [sp, #16]
     710:	stp	x22, x21, [sp, #32]
     714:	stp	x20, x19, [sp, #48]
     718:	mov	x29, sp
     71c:	sub	sp, sp, #0x820
     720:	add	x8, sp, #0x8
     724:	add	x8, x8, #0x10
     728:	mov	x21, x30
     72c:	mov	x19, x1
     730:	mov	x20, x0
     734:	stp	x8, xzr, [sp, #8]
     738:	str	xzr, [sp, #2072]
     73c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     740:	cmp	w0, #0x2
     744:	b.hi	778 <_ZnamSt11align_val_tRKSt9nothrow_t+0x70>  // b.pmore
     748:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     74c:	str	w0, [sp, #16]
     750:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     754:	cbz	w0, 7d4 <_ZnamSt11align_val_tRKSt9nothrow_t+0xcc>
     758:	str	x29, [sp, #2072]
     75c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     760:	str	x0, [sp, #24]
     764:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     768:	cmp	w0, #0x2
     76c:	b.cc	7d4 <_ZnamSt11align_val_tRKSt9nothrow_t+0xcc>  // b.lo, b.ul, b.last
     770:	str	x21, [sp, #32]
     774:	b	7d4 <_ZnamSt11align_val_tRKSt9nothrow_t+0xcc>
     778:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     77c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     780:	ldr	x8, [x8]
     784:	mov	x21, x0
     788:	ldrb	w22, [x8, #34]
     78c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     790:	cmp	w0, #0x0
     794:	mov	w5, w0
     798:	csel	x8, xzr, x29, eq  // eq = none
     79c:	cmp	w0, #0x1
     7a0:	str	x8, [sp, #2072]
     7a4:	b.hi	7b8 <_ZnamSt11align_val_tRKSt9nothrow_t+0xb0>  // b.pmore
     7a8:	b.ne	7b0 <_ZnamSt11align_val_tRKSt9nothrow_t+0xa8>  // b.any
     7ac:	str	x21, [sp, #24]
     7b0:	str	w5, [sp, #16]
     7b4:	b	7d4 <_ZnamSt11align_val_tRKSt9nothrow_t+0xcc>
     7b8:	cmp	w22, #0x0
     7bc:	cset	w4, ne  // ne = any
     7c0:	add	x0, sp, #0x8
     7c4:	mov	x1, x21
     7c8:	mov	x2, x29
     7cc:	mov	x3, xzr
     7d0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     7d4:	add	x2, sp, #0x8
     7d8:	mov	w3, #0x3                   	// #3
     7dc:	mov	x0, x19
     7e0:	mov	x1, x20
     7e4:	bl	0 <_ZN6__asan13asan_memalignEmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     7e8:	add	sp, sp, #0x820
     7ec:	ldp	x20, x19, [sp, #48]
     7f0:	ldp	x22, x21, [sp, #32]
     7f4:	ldr	x28, [sp, #16]
     7f8:	ldp	x29, x30, [sp], #64
     7fc:	ret

0000000000000800 <_ZdlPv>:
     800:	stp	x29, x30, [sp, #-48]!
     804:	stp	x28, x21, [sp, #16]
     808:	stp	x20, x19, [sp, #32]
     80c:	mov	x29, sp
     810:	sub	sp, sp, #0x820
     814:	add	x8, sp, #0x8
     818:	add	x8, x8, #0x10
     81c:	mov	x20, x30
     820:	mov	x19, x0
     824:	stp	x8, xzr, [sp, #8]
     828:	str	xzr, [sp, #2072]
     82c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     830:	cmp	w0, #0x2
     834:	b.hi	868 <_ZdlPv+0x68>  // b.pmore
     838:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     83c:	str	w0, [sp, #16]
     840:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     844:	cbz	w0, 8c4 <_ZdlPv+0xc4>
     848:	str	x29, [sp, #2072]
     84c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     850:	str	x0, [sp, #24]
     854:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     858:	cmp	w0, #0x2
     85c:	b.cc	8c4 <_ZdlPv+0xc4>  // b.lo, b.ul, b.last
     860:	str	x20, [sp, #32]
     864:	b	8c4 <_ZdlPv+0xc4>
     868:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     86c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     870:	ldr	x8, [x8]
     874:	mov	x20, x0
     878:	ldrb	w21, [x8, #34]
     87c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     880:	cmp	w0, #0x0
     884:	mov	w5, w0
     888:	csel	x8, xzr, x29, eq  // eq = none
     88c:	cmp	w0, #0x1
     890:	str	x8, [sp, #2072]
     894:	b.hi	8a8 <_ZdlPv+0xa8>  // b.pmore
     898:	b.ne	8a0 <_ZdlPv+0xa0>  // b.any
     89c:	str	x20, [sp, #24]
     8a0:	str	w5, [sp, #16]
     8a4:	b	8c4 <_ZdlPv+0xc4>
     8a8:	cmp	w21, #0x0
     8ac:	cset	w4, ne  // ne = any
     8b0:	add	x0, sp, #0x8
     8b4:	mov	x1, x20
     8b8:	mov	x2, x29
     8bc:	mov	x3, xzr
     8c0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     8c4:	add	x3, sp, #0x8
     8c8:	mov	w4, #0x2                   	// #2
     8cc:	mov	x0, x19
     8d0:	mov	x1, xzr
     8d4:	mov	x2, xzr
     8d8:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     8dc:	add	sp, sp, #0x820
     8e0:	ldp	x20, x19, [sp, #32]
     8e4:	ldp	x28, x21, [sp, #16]
     8e8:	ldp	x29, x30, [sp], #48
     8ec:	ret

00000000000008f0 <_ZdaPv>:
     8f0:	stp	x29, x30, [sp, #-48]!
     8f4:	stp	x28, x21, [sp, #16]
     8f8:	stp	x20, x19, [sp, #32]
     8fc:	mov	x29, sp
     900:	sub	sp, sp, #0x820
     904:	add	x8, sp, #0x8
     908:	add	x8, x8, #0x10
     90c:	mov	x20, x30
     910:	mov	x19, x0
     914:	stp	x8, xzr, [sp, #8]
     918:	str	xzr, [sp, #2072]
     91c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     920:	cmp	w0, #0x2
     924:	b.hi	958 <_ZdaPv+0x68>  // b.pmore
     928:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     92c:	str	w0, [sp, #16]
     930:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     934:	cbz	w0, 9b4 <_ZdaPv+0xc4>
     938:	str	x29, [sp, #2072]
     93c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     940:	str	x0, [sp, #24]
     944:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     948:	cmp	w0, #0x2
     94c:	b.cc	9b4 <_ZdaPv+0xc4>  // b.lo, b.ul, b.last
     950:	str	x20, [sp, #32]
     954:	b	9b4 <_ZdaPv+0xc4>
     958:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     95c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     960:	ldr	x8, [x8]
     964:	mov	x20, x0
     968:	ldrb	w21, [x8, #34]
     96c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     970:	cmp	w0, #0x0
     974:	mov	w5, w0
     978:	csel	x8, xzr, x29, eq  // eq = none
     97c:	cmp	w0, #0x1
     980:	str	x8, [sp, #2072]
     984:	b.hi	998 <_ZdaPv+0xa8>  // b.pmore
     988:	b.ne	990 <_ZdaPv+0xa0>  // b.any
     98c:	str	x20, [sp, #24]
     990:	str	w5, [sp, #16]
     994:	b	9b4 <_ZdaPv+0xc4>
     998:	cmp	w21, #0x0
     99c:	cset	w4, ne  // ne = any
     9a0:	add	x0, sp, #0x8
     9a4:	mov	x1, x20
     9a8:	mov	x2, x29
     9ac:	mov	x3, xzr
     9b0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     9b4:	add	x3, sp, #0x8
     9b8:	mov	w4, #0x3                   	// #3
     9bc:	mov	x0, x19
     9c0:	mov	x1, xzr
     9c4:	mov	x2, xzr
     9c8:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     9cc:	add	sp, sp, #0x820
     9d0:	ldp	x20, x19, [sp, #32]
     9d4:	ldp	x28, x21, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #48
     9dc:	ret

00000000000009e0 <_ZdlPvRKSt9nothrow_t>:
     9e0:	stp	x29, x30, [sp, #-48]!
     9e4:	stp	x28, x21, [sp, #16]
     9e8:	stp	x20, x19, [sp, #32]
     9ec:	mov	x29, sp
     9f0:	sub	sp, sp, #0x820
     9f4:	add	x8, sp, #0x8
     9f8:	add	x8, x8, #0x10
     9fc:	mov	x20, x30
     a00:	mov	x19, x0
     a04:	stp	x8, xzr, [sp, #8]
     a08:	str	xzr, [sp, #2072]
     a0c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     a10:	cmp	w0, #0x2
     a14:	b.hi	a48 <_ZdlPvRKSt9nothrow_t+0x68>  // b.pmore
     a18:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     a1c:	str	w0, [sp, #16]
     a20:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     a24:	cbz	w0, aa4 <_ZdlPvRKSt9nothrow_t+0xc4>
     a28:	str	x29, [sp, #2072]
     a2c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     a30:	str	x0, [sp, #24]
     a34:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     a38:	cmp	w0, #0x2
     a3c:	b.cc	aa4 <_ZdlPvRKSt9nothrow_t+0xc4>  // b.lo, b.ul, b.last
     a40:	str	x20, [sp, #32]
     a44:	b	aa4 <_ZdlPvRKSt9nothrow_t+0xc4>
     a48:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     a4c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     a50:	ldr	x8, [x8]
     a54:	mov	x20, x0
     a58:	ldrb	w21, [x8, #34]
     a5c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     a60:	cmp	w0, #0x0
     a64:	mov	w5, w0
     a68:	csel	x8, xzr, x29, eq  // eq = none
     a6c:	cmp	w0, #0x1
     a70:	str	x8, [sp, #2072]
     a74:	b.hi	a88 <_ZdlPvRKSt9nothrow_t+0xa8>  // b.pmore
     a78:	b.ne	a80 <_ZdlPvRKSt9nothrow_t+0xa0>  // b.any
     a7c:	str	x20, [sp, #24]
     a80:	str	w5, [sp, #16]
     a84:	b	aa4 <_ZdlPvRKSt9nothrow_t+0xc4>
     a88:	cmp	w21, #0x0
     a8c:	cset	w4, ne  // ne = any
     a90:	add	x0, sp, #0x8
     a94:	mov	x1, x20
     a98:	mov	x2, x29
     a9c:	mov	x3, xzr
     aa0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     aa4:	add	x3, sp, #0x8
     aa8:	mov	w4, #0x2                   	// #2
     aac:	mov	x0, x19
     ab0:	mov	x1, xzr
     ab4:	mov	x2, xzr
     ab8:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     abc:	add	sp, sp, #0x820
     ac0:	ldp	x20, x19, [sp, #32]
     ac4:	ldp	x28, x21, [sp, #16]
     ac8:	ldp	x29, x30, [sp], #48
     acc:	ret

0000000000000ad0 <_ZdaPvRKSt9nothrow_t>:
     ad0:	stp	x29, x30, [sp, #-48]!
     ad4:	stp	x28, x21, [sp, #16]
     ad8:	stp	x20, x19, [sp, #32]
     adc:	mov	x29, sp
     ae0:	sub	sp, sp, #0x820
     ae4:	add	x8, sp, #0x8
     ae8:	add	x8, x8, #0x10
     aec:	mov	x20, x30
     af0:	mov	x19, x0
     af4:	stp	x8, xzr, [sp, #8]
     af8:	str	xzr, [sp, #2072]
     afc:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     b00:	cmp	w0, #0x2
     b04:	b.hi	b38 <_ZdaPvRKSt9nothrow_t+0x68>  // b.pmore
     b08:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     b0c:	str	w0, [sp, #16]
     b10:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     b14:	cbz	w0, b94 <_ZdaPvRKSt9nothrow_t+0xc4>
     b18:	str	x29, [sp, #2072]
     b1c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     b20:	str	x0, [sp, #24]
     b24:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     b28:	cmp	w0, #0x2
     b2c:	b.cc	b94 <_ZdaPvRKSt9nothrow_t+0xc4>  // b.lo, b.ul, b.last
     b30:	str	x20, [sp, #32]
     b34:	b	b94 <_ZdaPvRKSt9nothrow_t+0xc4>
     b38:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     b3c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     b40:	ldr	x8, [x8]
     b44:	mov	x20, x0
     b48:	ldrb	w21, [x8, #34]
     b4c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     b50:	cmp	w0, #0x0
     b54:	mov	w5, w0
     b58:	csel	x8, xzr, x29, eq  // eq = none
     b5c:	cmp	w0, #0x1
     b60:	str	x8, [sp, #2072]
     b64:	b.hi	b78 <_ZdaPvRKSt9nothrow_t+0xa8>  // b.pmore
     b68:	b.ne	b70 <_ZdaPvRKSt9nothrow_t+0xa0>  // b.any
     b6c:	str	x20, [sp, #24]
     b70:	str	w5, [sp, #16]
     b74:	b	b94 <_ZdaPvRKSt9nothrow_t+0xc4>
     b78:	cmp	w21, #0x0
     b7c:	cset	w4, ne  // ne = any
     b80:	add	x0, sp, #0x8
     b84:	mov	x1, x20
     b88:	mov	x2, x29
     b8c:	mov	x3, xzr
     b90:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     b94:	add	x3, sp, #0x8
     b98:	mov	w4, #0x3                   	// #3
     b9c:	mov	x0, x19
     ba0:	mov	x1, xzr
     ba4:	mov	x2, xzr
     ba8:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     bac:	add	sp, sp, #0x820
     bb0:	ldp	x20, x19, [sp, #32]
     bb4:	ldp	x28, x21, [sp, #16]
     bb8:	ldp	x29, x30, [sp], #48
     bbc:	ret

0000000000000bc0 <_ZdlPvm>:
     bc0:	stp	x29, x30, [sp, #-64]!
     bc4:	str	x28, [sp, #16]
     bc8:	stp	x22, x21, [sp, #32]
     bcc:	stp	x20, x19, [sp, #48]
     bd0:	mov	x29, sp
     bd4:	sub	sp, sp, #0x820
     bd8:	add	x8, sp, #0x8
     bdc:	add	x8, x8, #0x10
     be0:	mov	x21, x30
     be4:	mov	x19, x1
     be8:	mov	x20, x0
     bec:	stp	x8, xzr, [sp, #8]
     bf0:	str	xzr, [sp, #2072]
     bf4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     bf8:	cmp	w0, #0x2
     bfc:	b.hi	c30 <_ZdlPvm+0x70>  // b.pmore
     c00:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     c04:	str	w0, [sp, #16]
     c08:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     c0c:	cbz	w0, c8c <_ZdlPvm+0xcc>
     c10:	str	x29, [sp, #2072]
     c14:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     c18:	str	x0, [sp, #24]
     c1c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     c20:	cmp	w0, #0x2
     c24:	b.cc	c8c <_ZdlPvm+0xcc>  // b.lo, b.ul, b.last
     c28:	str	x21, [sp, #32]
     c2c:	b	c8c <_ZdlPvm+0xcc>
     c30:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     c34:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     c38:	ldr	x8, [x8]
     c3c:	mov	x21, x0
     c40:	ldrb	w22, [x8, #34]
     c44:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     c48:	cmp	w0, #0x0
     c4c:	mov	w5, w0
     c50:	csel	x8, xzr, x29, eq  // eq = none
     c54:	cmp	w0, #0x1
     c58:	str	x8, [sp, #2072]
     c5c:	b.hi	c70 <_ZdlPvm+0xb0>  // b.pmore
     c60:	b.ne	c68 <_ZdlPvm+0xa8>  // b.any
     c64:	str	x21, [sp, #24]
     c68:	str	w5, [sp, #16]
     c6c:	b	c8c <_ZdlPvm+0xcc>
     c70:	cmp	w22, #0x0
     c74:	cset	w4, ne  // ne = any
     c78:	add	x0, sp, #0x8
     c7c:	mov	x1, x21
     c80:	mov	x2, x29
     c84:	mov	x3, xzr
     c88:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     c8c:	add	x3, sp, #0x8
     c90:	mov	w4, #0x2                   	// #2
     c94:	mov	x0, x20
     c98:	mov	x1, x19
     c9c:	mov	x2, xzr
     ca0:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     ca4:	add	sp, sp, #0x820
     ca8:	ldp	x20, x19, [sp, #48]
     cac:	ldp	x22, x21, [sp, #32]
     cb0:	ldr	x28, [sp, #16]
     cb4:	ldp	x29, x30, [sp], #64
     cb8:	ret

0000000000000cbc <_ZdaPvm>:
     cbc:	stp	x29, x30, [sp, #-64]!
     cc0:	str	x28, [sp, #16]
     cc4:	stp	x22, x21, [sp, #32]
     cc8:	stp	x20, x19, [sp, #48]
     ccc:	mov	x29, sp
     cd0:	sub	sp, sp, #0x820
     cd4:	add	x8, sp, #0x8
     cd8:	add	x8, x8, #0x10
     cdc:	mov	x21, x30
     ce0:	mov	x19, x1
     ce4:	mov	x20, x0
     ce8:	stp	x8, xzr, [sp, #8]
     cec:	str	xzr, [sp, #2072]
     cf0:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     cf4:	cmp	w0, #0x2
     cf8:	b.hi	d2c <_ZdaPvm+0x70>  // b.pmore
     cfc:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     d00:	str	w0, [sp, #16]
     d04:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     d08:	cbz	w0, d88 <_ZdaPvm+0xcc>
     d0c:	str	x29, [sp, #2072]
     d10:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     d14:	str	x0, [sp, #24]
     d18:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     d1c:	cmp	w0, #0x2
     d20:	b.cc	d88 <_ZdaPvm+0xcc>  // b.lo, b.ul, b.last
     d24:	str	x21, [sp, #32]
     d28:	b	d88 <_ZdaPvm+0xcc>
     d2c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     d30:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     d34:	ldr	x8, [x8]
     d38:	mov	x21, x0
     d3c:	ldrb	w22, [x8, #34]
     d40:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     d44:	cmp	w0, #0x0
     d48:	mov	w5, w0
     d4c:	csel	x8, xzr, x29, eq  // eq = none
     d50:	cmp	w0, #0x1
     d54:	str	x8, [sp, #2072]
     d58:	b.hi	d6c <_ZdaPvm+0xb0>  // b.pmore
     d5c:	b.ne	d64 <_ZdaPvm+0xa8>  // b.any
     d60:	str	x21, [sp, #24]
     d64:	str	w5, [sp, #16]
     d68:	b	d88 <_ZdaPvm+0xcc>
     d6c:	cmp	w22, #0x0
     d70:	cset	w4, ne  // ne = any
     d74:	add	x0, sp, #0x8
     d78:	mov	x1, x21
     d7c:	mov	x2, x29
     d80:	mov	x3, xzr
     d84:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     d88:	add	x3, sp, #0x8
     d8c:	mov	w4, #0x3                   	// #3
     d90:	mov	x0, x20
     d94:	mov	x1, x19
     d98:	mov	x2, xzr
     d9c:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     da0:	add	sp, sp, #0x820
     da4:	ldp	x20, x19, [sp, #48]
     da8:	ldp	x22, x21, [sp, #32]
     dac:	ldr	x28, [sp, #16]
     db0:	ldp	x29, x30, [sp], #64
     db4:	ret

0000000000000db8 <_ZdlPvSt11align_val_t>:
     db8:	stp	x29, x30, [sp, #-64]!
     dbc:	str	x28, [sp, #16]
     dc0:	stp	x22, x21, [sp, #32]
     dc4:	stp	x20, x19, [sp, #48]
     dc8:	mov	x29, sp
     dcc:	sub	sp, sp, #0x820
     dd0:	add	x8, sp, #0x8
     dd4:	add	x8, x8, #0x10
     dd8:	mov	x21, x30
     ddc:	mov	x19, x1
     de0:	mov	x20, x0
     de4:	stp	x8, xzr, [sp, #8]
     de8:	str	xzr, [sp, #2072]
     dec:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     df0:	cmp	w0, #0x2
     df4:	b.hi	e28 <_ZdlPvSt11align_val_t+0x70>  // b.pmore
     df8:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     dfc:	str	w0, [sp, #16]
     e00:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     e04:	cbz	w0, e84 <_ZdlPvSt11align_val_t+0xcc>
     e08:	str	x29, [sp, #2072]
     e0c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     e10:	str	x0, [sp, #24]
     e14:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     e18:	cmp	w0, #0x2
     e1c:	b.cc	e84 <_ZdlPvSt11align_val_t+0xcc>  // b.lo, b.ul, b.last
     e20:	str	x21, [sp, #32]
     e24:	b	e84 <_ZdlPvSt11align_val_t+0xcc>
     e28:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     e2c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     e30:	ldr	x8, [x8]
     e34:	mov	x21, x0
     e38:	ldrb	w22, [x8, #34]
     e3c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     e40:	cmp	w0, #0x0
     e44:	mov	w5, w0
     e48:	csel	x8, xzr, x29, eq  // eq = none
     e4c:	cmp	w0, #0x1
     e50:	str	x8, [sp, #2072]
     e54:	b.hi	e68 <_ZdlPvSt11align_val_t+0xb0>  // b.pmore
     e58:	b.ne	e60 <_ZdlPvSt11align_val_t+0xa8>  // b.any
     e5c:	str	x21, [sp, #24]
     e60:	str	w5, [sp, #16]
     e64:	b	e84 <_ZdlPvSt11align_val_t+0xcc>
     e68:	cmp	w22, #0x0
     e6c:	cset	w4, ne  // ne = any
     e70:	add	x0, sp, #0x8
     e74:	mov	x1, x21
     e78:	mov	x2, x29
     e7c:	mov	x3, xzr
     e80:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     e84:	add	x3, sp, #0x8
     e88:	mov	w4, #0x2                   	// #2
     e8c:	mov	x0, x20
     e90:	mov	x1, xzr
     e94:	mov	x2, x19
     e98:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     e9c:	add	sp, sp, #0x820
     ea0:	ldp	x20, x19, [sp, #48]
     ea4:	ldp	x22, x21, [sp, #32]
     ea8:	ldr	x28, [sp, #16]
     eac:	ldp	x29, x30, [sp], #64
     eb0:	ret

0000000000000eb4 <_ZdaPvSt11align_val_t>:
     eb4:	stp	x29, x30, [sp, #-64]!
     eb8:	str	x28, [sp, #16]
     ebc:	stp	x22, x21, [sp, #32]
     ec0:	stp	x20, x19, [sp, #48]
     ec4:	mov	x29, sp
     ec8:	sub	sp, sp, #0x820
     ecc:	add	x8, sp, #0x8
     ed0:	add	x8, x8, #0x10
     ed4:	mov	x21, x30
     ed8:	mov	x19, x1
     edc:	mov	x20, x0
     ee0:	stp	x8, xzr, [sp, #8]
     ee4:	str	xzr, [sp, #2072]
     ee8:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     eec:	cmp	w0, #0x2
     ef0:	b.hi	f24 <_ZdaPvSt11align_val_t+0x70>  // b.pmore
     ef4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     ef8:	str	w0, [sp, #16]
     efc:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     f00:	cbz	w0, f80 <_ZdaPvSt11align_val_t+0xcc>
     f04:	str	x29, [sp, #2072]
     f08:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     f0c:	str	x0, [sp, #24]
     f10:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     f14:	cmp	w0, #0x2
     f18:	b.cc	f80 <_ZdaPvSt11align_val_t+0xcc>  // b.lo, b.ul, b.last
     f1c:	str	x21, [sp, #32]
     f20:	b	f80 <_ZdaPvSt11align_val_t+0xcc>
     f24:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     f28:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     f2c:	ldr	x8, [x8]
     f30:	mov	x21, x0
     f34:	ldrb	w22, [x8, #34]
     f38:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     f3c:	cmp	w0, #0x0
     f40:	mov	w5, w0
     f44:	csel	x8, xzr, x29, eq  // eq = none
     f48:	cmp	w0, #0x1
     f4c:	str	x8, [sp, #2072]
     f50:	b.hi	f64 <_ZdaPvSt11align_val_t+0xb0>  // b.pmore
     f54:	b.ne	f5c <_ZdaPvSt11align_val_t+0xa8>  // b.any
     f58:	str	x21, [sp, #24]
     f5c:	str	w5, [sp, #16]
     f60:	b	f80 <_ZdaPvSt11align_val_t+0xcc>
     f64:	cmp	w22, #0x0
     f68:	cset	w4, ne  // ne = any
     f6c:	add	x0, sp, #0x8
     f70:	mov	x1, x21
     f74:	mov	x2, x29
     f78:	mov	x3, xzr
     f7c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     f80:	add	x3, sp, #0x8
     f84:	mov	w4, #0x3                   	// #3
     f88:	mov	x0, x20
     f8c:	mov	x1, xzr
     f90:	mov	x2, x19
     f94:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
     f98:	add	sp, sp, #0x820
     f9c:	ldp	x20, x19, [sp, #48]
     fa0:	ldp	x22, x21, [sp, #32]
     fa4:	ldr	x28, [sp, #16]
     fa8:	ldp	x29, x30, [sp], #64
     fac:	ret

0000000000000fb0 <_ZdlPvSt11align_val_tRKSt9nothrow_t>:
     fb0:	stp	x29, x30, [sp, #-64]!
     fb4:	str	x28, [sp, #16]
     fb8:	stp	x22, x21, [sp, #32]
     fbc:	stp	x20, x19, [sp, #48]
     fc0:	mov	x29, sp
     fc4:	sub	sp, sp, #0x820
     fc8:	add	x8, sp, #0x8
     fcc:	add	x8, x8, #0x10
     fd0:	mov	x21, x30
     fd4:	mov	x19, x1
     fd8:	mov	x20, x0
     fdc:	stp	x8, xzr, [sp, #8]
     fe0:	str	xzr, [sp, #2072]
     fe4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     fe8:	cmp	w0, #0x2
     fec:	b.hi	1020 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x70>  // b.pmore
     ff0:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     ff4:	str	w0, [sp, #16]
     ff8:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
     ffc:	cbz	w0, 107c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xcc>
    1000:	str	x29, [sp, #2072]
    1004:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1008:	str	x0, [sp, #24]
    100c:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    1010:	cmp	w0, #0x2
    1014:	b.cc	107c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xcc>  // b.lo, b.ul, b.last
    1018:	str	x21, [sp, #32]
    101c:	b	107c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xcc>
    1020:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1024:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1028:	ldr	x8, [x8]
    102c:	mov	x21, x0
    1030:	ldrb	w22, [x8, #34]
    1034:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    1038:	cmp	w0, #0x0
    103c:	mov	w5, w0
    1040:	csel	x8, xzr, x29, eq  // eq = none
    1044:	cmp	w0, #0x1
    1048:	str	x8, [sp, #2072]
    104c:	b.hi	1060 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xb0>  // b.pmore
    1050:	b.ne	1058 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xa8>  // b.any
    1054:	str	x21, [sp, #24]
    1058:	str	w5, [sp, #16]
    105c:	b	107c <_ZdlPvSt11align_val_tRKSt9nothrow_t+0xcc>
    1060:	cmp	w22, #0x0
    1064:	cset	w4, ne  // ne = any
    1068:	add	x0, sp, #0x8
    106c:	mov	x1, x21
    1070:	mov	x2, x29
    1074:	mov	x3, xzr
    1078:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    107c:	add	x3, sp, #0x8
    1080:	mov	w4, #0x2                   	// #2
    1084:	mov	x0, x20
    1088:	mov	x1, xzr
    108c:	mov	x2, x19
    1090:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
    1094:	add	sp, sp, #0x820
    1098:	ldp	x20, x19, [sp, #48]
    109c:	ldp	x22, x21, [sp, #32]
    10a0:	ldr	x28, [sp, #16]
    10a4:	ldp	x29, x30, [sp], #64
    10a8:	ret

00000000000010ac <_ZdaPvSt11align_val_tRKSt9nothrow_t>:
    10ac:	stp	x29, x30, [sp, #-64]!
    10b0:	str	x28, [sp, #16]
    10b4:	stp	x22, x21, [sp, #32]
    10b8:	stp	x20, x19, [sp, #48]
    10bc:	mov	x29, sp
    10c0:	sub	sp, sp, #0x820
    10c4:	add	x8, sp, #0x8
    10c8:	add	x8, x8, #0x10
    10cc:	mov	x21, x30
    10d0:	mov	x19, x1
    10d4:	mov	x20, x0
    10d8:	stp	x8, xzr, [sp, #8]
    10dc:	str	xzr, [sp, #2072]
    10e0:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    10e4:	cmp	w0, #0x2
    10e8:	b.hi	111c <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x70>  // b.pmore
    10ec:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    10f0:	str	w0, [sp, #16]
    10f4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    10f8:	cbz	w0, 1178 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xcc>
    10fc:	str	x29, [sp, #2072]
    1100:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1104:	str	x0, [sp, #24]
    1108:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    110c:	cmp	w0, #0x2
    1110:	b.cc	1178 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xcc>  // b.lo, b.ul, b.last
    1114:	str	x21, [sp, #32]
    1118:	b	1178 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xcc>
    111c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1120:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1124:	ldr	x8, [x8]
    1128:	mov	x21, x0
    112c:	ldrb	w22, [x8, #34]
    1130:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    1134:	cmp	w0, #0x0
    1138:	mov	w5, w0
    113c:	csel	x8, xzr, x29, eq  // eq = none
    1140:	cmp	w0, #0x1
    1144:	str	x8, [sp, #2072]
    1148:	b.hi	115c <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xb0>  // b.pmore
    114c:	b.ne	1154 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xa8>  // b.any
    1150:	str	x21, [sp, #24]
    1154:	str	w5, [sp, #16]
    1158:	b	1178 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0xcc>
    115c:	cmp	w22, #0x0
    1160:	cset	w4, ne  // ne = any
    1164:	add	x0, sp, #0x8
    1168:	mov	x1, x21
    116c:	mov	x2, x29
    1170:	mov	x3, xzr
    1174:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1178:	add	x3, sp, #0x8
    117c:	mov	w4, #0x3                   	// #3
    1180:	mov	x0, x20
    1184:	mov	x1, xzr
    1188:	mov	x2, x19
    118c:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
    1190:	add	sp, sp, #0x820
    1194:	ldp	x20, x19, [sp, #48]
    1198:	ldp	x22, x21, [sp, #32]
    119c:	ldr	x28, [sp, #16]
    11a0:	ldp	x29, x30, [sp], #64
    11a4:	ret

00000000000011a8 <_ZdlPvmSt11align_val_t>:
    11a8:	stp	x29, x30, [sp, #-64]!
    11ac:	stp	x28, x23, [sp, #16]
    11b0:	stp	x22, x21, [sp, #32]
    11b4:	stp	x20, x19, [sp, #48]
    11b8:	mov	x29, sp
    11bc:	sub	sp, sp, #0x820
    11c0:	add	x8, sp, #0x8
    11c4:	add	x8, x8, #0x10
    11c8:	mov	x22, x30
    11cc:	mov	x19, x2
    11d0:	mov	x20, x1
    11d4:	mov	x21, x0
    11d8:	stp	x8, xzr, [sp, #8]
    11dc:	str	xzr, [sp, #2072]
    11e0:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    11e4:	cmp	w0, #0x2
    11e8:	b.hi	121c <_ZdlPvmSt11align_val_t+0x74>  // b.pmore
    11ec:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    11f0:	str	w0, [sp, #16]
    11f4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    11f8:	cbz	w0, 1278 <_ZdlPvmSt11align_val_t+0xd0>
    11fc:	str	x29, [sp, #2072]
    1200:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1204:	str	x0, [sp, #24]
    1208:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    120c:	cmp	w0, #0x2
    1210:	b.cc	1278 <_ZdlPvmSt11align_val_t+0xd0>  // b.lo, b.ul, b.last
    1214:	str	x22, [sp, #32]
    1218:	b	1278 <_ZdlPvmSt11align_val_t+0xd0>
    121c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1220:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1224:	ldr	x8, [x8]
    1228:	mov	x22, x0
    122c:	ldrb	w23, [x8, #34]
    1230:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    1234:	cmp	w0, #0x0
    1238:	mov	w5, w0
    123c:	csel	x8, xzr, x29, eq  // eq = none
    1240:	cmp	w0, #0x1
    1244:	str	x8, [sp, #2072]
    1248:	b.hi	125c <_ZdlPvmSt11align_val_t+0xb4>  // b.pmore
    124c:	b.ne	1254 <_ZdlPvmSt11align_val_t+0xac>  // b.any
    1250:	str	x22, [sp, #24]
    1254:	str	w5, [sp, #16]
    1258:	b	1278 <_ZdlPvmSt11align_val_t+0xd0>
    125c:	cmp	w23, #0x0
    1260:	cset	w4, ne  // ne = any
    1264:	add	x0, sp, #0x8
    1268:	mov	x1, x22
    126c:	mov	x2, x29
    1270:	mov	x3, xzr
    1274:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1278:	add	x3, sp, #0x8
    127c:	mov	w4, #0x2                   	// #2
    1280:	mov	x0, x21
    1284:	mov	x1, x20
    1288:	mov	x2, x19
    128c:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
    1290:	add	sp, sp, #0x820
    1294:	ldp	x20, x19, [sp, #48]
    1298:	ldp	x22, x21, [sp, #32]
    129c:	ldp	x28, x23, [sp, #16]
    12a0:	ldp	x29, x30, [sp], #64
    12a4:	ret

00000000000012a8 <_ZdaPvmSt11align_val_t>:
    12a8:	stp	x29, x30, [sp, #-64]!
    12ac:	stp	x28, x23, [sp, #16]
    12b0:	stp	x22, x21, [sp, #32]
    12b4:	stp	x20, x19, [sp, #48]
    12b8:	mov	x29, sp
    12bc:	sub	sp, sp, #0x820
    12c0:	add	x8, sp, #0x8
    12c4:	add	x8, x8, #0x10
    12c8:	mov	x22, x30
    12cc:	mov	x19, x2
    12d0:	mov	x20, x1
    12d4:	mov	x21, x0
    12d8:	stp	x8, xzr, [sp, #8]
    12dc:	str	xzr, [sp, #2072]
    12e0:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    12e4:	cmp	w0, #0x2
    12e8:	b.hi	131c <_ZdaPvmSt11align_val_t+0x74>  // b.pmore
    12ec:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    12f0:	str	w0, [sp, #16]
    12f4:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    12f8:	cbz	w0, 1378 <_ZdaPvmSt11align_val_t+0xd0>
    12fc:	str	x29, [sp, #2072]
    1300:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1304:	str	x0, [sp, #24]
    1308:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    130c:	cmp	w0, #0x2
    1310:	b.cc	1378 <_ZdaPvmSt11align_val_t+0xd0>  // b.lo, b.ul, b.last
    1314:	str	x22, [sp, #32]
    1318:	b	1378 <_ZdaPvmSt11align_val_t+0xd0>
    131c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1320:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1324:	ldr	x8, [x8]
    1328:	mov	x22, x0
    132c:	ldrb	w23, [x8, #34]
    1330:	bl	0 <_ZN6__asan20GetMallocContextSizeEv>
    1334:	cmp	w0, #0x0
    1338:	mov	w5, w0
    133c:	csel	x8, xzr, x29, eq  // eq = none
    1340:	cmp	w0, #0x1
    1344:	str	x8, [sp, #2072]
    1348:	b.hi	135c <_ZdaPvmSt11align_val_t+0xb4>  // b.pmore
    134c:	b.ne	1354 <_ZdaPvmSt11align_val_t+0xac>  // b.any
    1350:	str	x22, [sp, #24]
    1354:	str	w5, [sp, #16]
    1358:	b	1378 <_ZdaPvmSt11align_val_t+0xd0>
    135c:	cmp	w23, #0x0
    1360:	cset	w4, ne  // ne = any
    1364:	add	x0, sp, #0x8
    1368:	mov	x1, x22
    136c:	mov	x2, x29
    1370:	mov	x3, xzr
    1374:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1378:	add	x3, sp, #0x8
    137c:	mov	w4, #0x3                   	// #3
    1380:	mov	x0, x21
    1384:	mov	x1, x20
    1388:	mov	x2, x19
    138c:	bl	0 <_ZN6__asan11asan_deleteEPvmmPN11__sanitizer18BufferedStackTraceENS_9AllocTypeE>
    1390:	add	sp, sp, #0x820
    1394:	ldp	x20, x19, [sp, #48]
    1398:	ldp	x22, x21, [sp, #32]
    139c:	ldp	x28, x23, [sp, #16]
    13a0:	ldp	x29, x30, [sp], #64
    13a4:	ret

Disassembly of section .text._ZN6__asan9FakeStack17AddrIsInFakeStackEm:

0000000000000000 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm>:
   0:	sub	sp, sp, #0x20
   4:	str	x30, [sp, #16]
   8:	add	x2, sp, #0x18
   c:	add	x3, sp, #0x8
  10:	bl	0 <_ZN6__asan9FakeStack17AddrIsInFakeStackEmPmS1_>
  14:	ldr	x30, [sp, #16]
  18:	add	sp, sp, #0x20
  1c:	ret

ubsan_handlers_cxx.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__ubsan_handle_dynamic_type_cache_miss>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	ldur	w8, [x29, #-8]
  10:	ldur	w9, [x29, #-5]
  14:	mov	x3, sp
  18:	strb	wzr, [sp]
  1c:	stur	w8, [sp, #1]
  20:	str	w9, [sp, #4]
  24:	stp	x30, x29, [sp, #8]
  28:	bl	38 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
  2c:	ldp	x29, x30, [sp, #32]
  30:	add	sp, sp, #0x30
  34:	ret

0000000000000038 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>:
  38:	stp	x29, x30, [sp, #-64]!
  3c:	stp	x24, x23, [sp, #16]
  40:	stp	x22, x21, [sp, #32]
  44:	stp	x20, x19, [sp, #48]
  48:	sub	sp, sp, #0x2a0
  4c:	ldr	x8, [x0, #24]
  50:	mov	x20, x0
  54:	mov	x19, x1
  58:	mov	x0, x1
  5c:	mov	x1, x8
  60:	mov	x21, x3
  64:	bl	0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
  68:	tbnz	w0, #0, d4 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x9c>
  6c:	add	x8, sp, #0x278
  70:	mov	x0, x19
  74:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>
  78:	ldr	x0, [sp, #632]
  7c:	cbz	x0, 88 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x50>
  80:	bl	0 <_ZN7__ubsan21IsVptrCheckSuppressedEPKc>
  84:	tbnz	w0, #0, d4 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x9c>
  88:	add	x24, sp, #0x294
  8c:	add	x9, x20, #0xc
  90:	mov	w10, #0xffffffff            	// #-1
  94:	ldaxr	w8, [x9]
  98:	stlxr	w11, w10, [x9]
  9c:	cbnz	w11, 94 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x5c>
  a0:	ldr	w22, [x20, #8]
  a4:	ldr	x23, [x20]
  a8:	ldr	x9, [x21, #16]
  ac:	ldr	q0, [x21]
  b0:	bfi	x22, x8, #32, #32
  b4:	add	x2, sp, #0x260
  b8:	mov	w3, #0x1e                  	// #30
  bc:	mov	x0, x23
  c0:	mov	x1, x22
  c4:	str	x9, [sp, #624]
  c8:	str	q0, [sp, #608]
  cc:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
  d0:	tbz	w0, #0, f0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0xb8>
  d4:	mov	w0, wzr
  d8:	add	sp, sp, #0x2a0
  dc:	ldp	x20, x19, [sp, #48]
  e0:	ldp	x22, x21, [sp, #32]
  e4:	ldp	x24, x23, [sp, #16]
  e8:	ldp	x29, x30, [sp], #64
  ec:	ret
  f0:	ldr	x8, [x21, #16]
  f4:	ldr	q0, [x21]
  f8:	mov	w21, #0x1                   	// #1
  fc:	add	x0, sp, #0x210
 100:	add	x1, sp, #0x1f0
 104:	add	x2, sp, #0x1c8
 108:	mov	w3, #0x1e                  	// #30
 10c:	str	w21, [sp, #456]
 110:	str	x8, [sp, #512]
 114:	str	q0, [sp, #496]
 118:	stp	x23, x22, [sp, #464]
 11c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 120:	movi	v0.2d, #0x0
 124:	str	d0, [sp, #360]
 128:	str	d0, [sp, #400]
 12c:	ldr	q0, [sp]
 130:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 134:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 138:	str	w21, [sp, #16]
 13c:	stur	q0, [sp, #40]
 140:	ldr	d0, [x8]
 144:	stp	x23, x22, [sp, #24]
 148:	add	x9, x9, #0x0
 14c:	str	wzr, [sp, #344]
 150:	str	xzr, [sp, #352]
 154:	str	wzr, [sp, #384]
 158:	str	xzr, [sp, #392]
 15c:	str	xzr, [sp, #424]
 160:	str	wzr, [sp, #432]
 164:	adrp	x8, 0 <_ZN7__ubsan14TypeCheckKindsE>
 168:	ldr	x8, [x8]
 16c:	str	x9, [sp, #64]
 170:	ldr	w9, [sp, #668]
 174:	str	d0, [sp, #56]
 178:	ldr	x10, [x24]
 17c:	ldrb	w11, [x20, #32]
 180:	str	w9, [sp, #92]
 184:	mov	w9, #0x2                   	// #2
 188:	str	w9, [sp, #336]
 18c:	mov	w9, #0x5                   	// #5
 190:	stur	x10, [sp, #84]
 194:	ldr	w10, [sp, #668]
 198:	str	w9, [sp, #112]
 19c:	ldr	x9, [x24]
 1a0:	ldr	x8, [x8, x11, lsl #3]
 1a4:	str	wzr, [sp, #80]
 1a8:	str	w10, [sp, #124]
 1ac:	stur	x9, [sp, #116]
 1b0:	str	x8, [sp, #96]
 1b4:	str	x19, [sp, #128]
 1b8:	ldr	x1, [x20, #16]
 1bc:	add	x0, sp, #0x10
 1c0:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 1c4:	add	x0, sp, #0x10
 1c8:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 1cc:	ldr	x8, [sp, #632]
 1d0:	ldr	x9, [sp, #640]
 1d4:	cbz	x8, 2a0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x268>
 1d8:	cbz	x9, 314 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x2dc>
 1dc:	sub	x10, x19, x9
 1e0:	stp	x9, xzr, [sp, #96]
 1e4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 1e8:	add	x9, x9, #0x0
 1ec:	str	x8, [sp, #128]
 1f0:	ldr	x8, [x24]
 1f4:	str	x9, [sp, #64]
 1f8:	mov	w9, #0x3                   	// #3
 1fc:	str	w9, [sp, #336]
 200:	ldr	w9, [sp, #668]
 204:	mov	w11, #0x2                   	// #2
 208:	adrp	x12, 0 <__ubsan_handle_dynamic_type_cache_miss>
 20c:	str	x10, [sp, #40]
 210:	mov	w10, #0x1                   	// #1
 214:	ldr	d1, [x12]
 218:	ldr	x12, [x24]
 21c:	str	w10, [sp, #112]
 220:	str	w10, [sp, #144]
 224:	str	w10, [sp, #432]
 228:	ldr	w10, [sp, #668]
 22c:	str	w11, [sp, #16]
 230:	str	w11, [sp, #80]
 234:	str	w11, [sp, #344]
 238:	str	w11, [sp, #384]
 23c:	ldr	x11, [sp, #648]
 240:	ldr	x13, [x24]
 244:	stur	x8, [sp, #84]
 248:	ldr	w8, [sp, #668]
 24c:	str	w9, [sp, #92]
 250:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 254:	movi	v0.2d, #0x0
 258:	add	x14, x19, #0x8
 25c:	add	x9, x9, #0x0
 260:	str	xzr, [sp, #24]
 264:	str	x19, [sp, #368]
 268:	str	xzr, [sp, #352]
 26c:	str	xzr, [sp, #392]
 270:	str	d0, [sp, #32]
 274:	str	d0, [sp, #360]
 278:	str	d0, [sp, #400]
 27c:	str	w10, [sp, #124]
 280:	stur	x12, [sp, #116]
 284:	str	w8, [sp, #156]
 288:	stur	x13, [sp, #148]
 28c:	str	x11, [sp, #160]
 290:	str	d1, [sp, #56]
 294:	str	x14, [sp, #408]
 298:	str	x9, [sp, #424]
 29c:	b	420 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3e8>
 2a0:	add	x8, x9, #0x100, lsl #12
 2a4:	cmp	x8, #0x200, lsl #12
 2a8:	b.ls	39c <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x364>  // b.plast
 2ac:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2b0:	ldr	d1, [x9]
 2b4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2b8:	add	x9, x9, #0x0
 2bc:	str	x9, [sp, #64]
 2c0:	mov	w9, #0x1                   	// #1
 2c4:	ldr	x10, [x24]
 2c8:	str	w9, [sp, #336]
 2cc:	str	w9, [sp, #80]
 2d0:	str	w9, [sp, #432]
 2d4:	ldr	w9, [sp, #668]
 2d8:	mov	w8, #0x2                   	// #2
 2dc:	str	w8, [sp, #16]
 2e0:	str	w8, [sp, #344]
 2e4:	str	w8, [sp, #384]
 2e8:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2ec:	movi	v0.2d, #0x0
 2f0:	add	x11, x19, #0x8
 2f4:	add	x8, x8, #0x0
 2f8:	str	xzr, [sp, #24]
 2fc:	str	x19, [sp, #40]
 300:	str	xzr, [sp, #96]
 304:	str	x19, [sp, #368]
 308:	str	xzr, [sp, #352]
 30c:	str	xzr, [sp, #392]
 310:	b	400 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3c8>
 314:	str	x8, [sp, #96]
 318:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 31c:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 320:	add	x8, x8, #0x0
 324:	ldr	d1, [x10]
 328:	ldr	x11, [x24]
 32c:	str	x8, [sp, #64]
 330:	ldr	w8, [sp, #668]
 334:	mov	w10, #0x1                   	// #1
 338:	str	w10, [sp, #336]
 33c:	str	w10, [sp, #80]
 340:	str	w10, [sp, #432]
 344:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 348:	mov	w9, #0x2                   	// #2
 34c:	movi	v0.2d, #0x0
 350:	add	x12, x19, #0x8
 354:	add	x10, x10, #0x0
 358:	str	xzr, [sp, #24]
 35c:	str	x19, [sp, #40]
 360:	str	x19, [sp, #368]
 364:	str	xzr, [sp, #352]
 368:	str	xzr, [sp, #392]
 36c:	str	w9, [sp, #16]
 370:	str	d0, [sp, #32]
 374:	str	w9, [sp, #344]
 378:	str	d0, [sp, #360]
 37c:	str	w9, [sp, #384]
 380:	str	d0, [sp, #400]
 384:	stur	x11, [sp, #84]
 388:	str	w8, [sp, #92]
 38c:	str	d1, [sp, #56]
 390:	str	x12, [sp, #408]
 394:	str	x10, [sp, #424]
 398:	b	420 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3e8>
 39c:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3a0:	ldr	d1, [x9]
 3a4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3a8:	add	x9, x9, #0x0
 3ac:	str	x9, [sp, #64]
 3b0:	mov	w9, #0x1                   	// #1
 3b4:	ldr	x10, [x24]
 3b8:	str	w9, [sp, #336]
 3bc:	str	w9, [sp, #80]
 3c0:	str	w9, [sp, #432]
 3c4:	ldr	w9, [sp, #668]
 3c8:	mov	w8, #0x2                   	// #2
 3cc:	str	w8, [sp, #16]
 3d0:	str	w8, [sp, #344]
 3d4:	str	w8, [sp, #384]
 3d8:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3dc:	str	xzr, [sp, #24]
 3e0:	movi	v0.2d, #0x0
 3e4:	str	x19, [sp, #40]
 3e8:	str	xzr, [sp, #96]
 3ec:	str	x19, [sp, #368]
 3f0:	add	x11, x19, #0x8
 3f4:	str	xzr, [sp, #352]
 3f8:	str	xzr, [sp, #392]
 3fc:	add	x8, x8, #0x0
 400:	str	d0, [sp, #32]
 404:	str	d0, [sp, #360]
 408:	str	d0, [sp, #400]
 40c:	stur	x10, [sp, #84]
 410:	str	w9, [sp, #92]
 414:	str	d1, [sp, #56]
 418:	str	x11, [sp, #408]
 41c:	str	x8, [sp, #424]
 420:	add	x0, sp, #0x10
 424:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 428:	add	x0, sp, #0x210
 42c:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 430:	mov	w0, #0x1                   	// #1
 434:	b	d8 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0xa0>

0000000000000438 <__ubsan_handle_dynamic_type_cache_miss_abort>:
 438:	sub	sp, sp, #0x30
 43c:	stp	x29, x30, [sp, #32]
 440:	add	x29, sp, #0x20
 444:	ldur	w8, [x29, #-8]
 448:	ldur	w9, [x29, #-5]
 44c:	mov	x3, sp
 450:	strb	wzr, [sp]
 454:	stur	w8, [sp, #1]
 458:	str	w9, [sp, #4]
 45c:	stp	x30, x29, [sp, #8]
 460:	bl	38 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
 464:	tbnz	w0, #0, 474 <__ubsan_handle_dynamic_type_cache_miss_abort+0x3c>
 468:	ldp	x29, x30, [sp, #32]
 46c:	add	sp, sp, #0x30
 470:	ret
 474:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000478 <__ubsan_handle_cfi_bad_type>:
 478:	str	x29, [sp, #-80]!
 47c:	stp	x30, x25, [sp, #16]
 480:	stp	x24, x23, [sp, #32]
 484:	stp	x22, x21, [sp, #48]
 488:	stp	x20, x19, [sp, #64]
 48c:	sub	sp, sp, #0x460
 490:	mov	x21, x3
 494:	mov	w24, w2
 498:	mov	x22, x1
 49c:	mov	x23, x0
 4a0:	add	x25, sp, #0x1d0
 4a4:	add	x9, x0, #0x14
 4a8:	mov	w10, #0xffffffff            	// #-1
 4ac:	ldaxr	w8, [x9]
 4b0:	stlxr	w11, w10, [x9]
 4b4:	cbnz	w11, 4ac <__ubsan_handle_cfi_bad_type+0x34>
 4b8:	ldr	w19, [x23, #16]
 4bc:	ldr	x20, [x23, #8]
 4c0:	ldr	x9, [x21, #16]
 4c4:	ldr	q0, [x21]
 4c8:	bfi	x19, x8, #32, #32
 4cc:	add	x2, sp, #0x430
 4d0:	mov	w3, #0x1f                  	// #31
 4d4:	mov	x0, x20
 4d8:	mov	x1, x19
 4dc:	str	x9, [sp, #1088]
 4e0:	str	q0, [sp, #1072]
 4e4:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 4e8:	tbnz	w0, #0, 854 <__ubsan_handle_cfi_bad_type+0x3dc>
 4ec:	ldr	x8, [x21, #16]
 4f0:	ldr	q0, [x21]
 4f4:	mov	w9, #0x1                   	// #1
 4f8:	add	x0, sp, #0x3e0
 4fc:	add	x1, sp, #0x3c0
 500:	add	x2, sp, #0x398
 504:	mov	w3, #0x1f                  	// #31
 508:	str	w9, [sp, #920]
 50c:	str	x8, [sp, #976]
 510:	str	q0, [sp, #960]
 514:	str	x20, [sp, #928]
 518:	str	x19, [sp, #936]
 51c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 520:	tbz	w24, #0, 564 <__ubsan_handle_cfi_bad_type+0xec>
 524:	add	x8, sp, #0x380
 528:	mov	x0, x22
 52c:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>
 530:	ldrb	w8, [x23]
 534:	sub	w8, w8, #0x1
 538:	cmp	w8, #0x5
 53c:	b.hi	580 <__ubsan_handle_cfi_bad_type+0x108>  // b.pmore
 540:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 544:	add	x9, x9, #0x0
 548:	adr	x10, 558 <__ubsan_handle_cfi_bad_type+0xe0>
 54c:	ldrb	w11, [x9, x8]
 550:	add	x10, x10, x11, lsl #2
 554:	br	x10
 558:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 55c:	add	x24, x24, #0x0
 560:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 564:	str	xzr, [sp, #904]
 568:	str	xzr, [sp, #896]
 56c:	str	xzr, [sp, #912]
 570:	ldrb	w8, [x23]
 574:	sub	w8, w8, #0x1
 578:	cmp	w8, #0x5
 57c:	b.ls	540 <__ubsan_handle_cfi_bad_type+0xc8>  // b.plast
 580:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 584:	add	x24, x24, #0x0
 588:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 58c:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 590:	add	x24, x24, #0x0
 594:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 598:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 59c:	add	x24, x24, #0x0
 5a0:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 5a4:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5a8:	add	x24, x24, #0x0
 5ac:	ldr	q0, [sp, #448]
 5b0:	mov	w8, #0x1                   	// #1
 5b4:	stp	x20, x19, [sp, #472]
 5b8:	str	w8, [sp, #464]
 5bc:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5c0:	stur	q0, [x25, #24]
 5c4:	movi	v0.2d, #0x0
 5c8:	str	d0, [sp, #808]
 5cc:	str	d0, [sp, #848]
 5d0:	ldr	d0, [x8]
 5d4:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5d8:	add	x8, x8, #0x0
 5dc:	str	x8, [sp, #512]
 5e0:	str	wzr, [sp, #784]
 5e4:	str	wzr, [sp, #792]
 5e8:	str	xzr, [sp, #800]
 5ec:	str	wzr, [sp, #832]
 5f0:	str	xzr, [sp, #840]
 5f4:	str	xzr, [sp, #872]
 5f8:	str	d0, [sp, #504]
 5fc:	str	wzr, [sp, #880]
 600:	ldr	x1, [x23, #24]
 604:	add	x0, sp, #0x1d0
 608:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 60c:	ldr	w8, [x0, #320]
 610:	cmp	w8, #0x8
 614:	b.eq	874 <__ubsan_handle_cfi_bad_type+0x3fc>  // b.none
 618:	add	w9, w8, #0x1
 61c:	add	x8, x0, x8, lsl #5
 620:	str	w9, [x0, #320]
 624:	str	wzr, [x8, #64]
 628:	ldr	w9, [sp, #1112]
 62c:	ldr	x10, [sp, #1104]
 630:	str	x24, [x8, #80]
 634:	str	w9, [x8, #76]
 638:	stur	x10, [x8, #68]
 63c:	ldr	w8, [x0, #320]
 640:	cmp	w8, #0x8
 644:	b.eq	874 <__ubsan_handle_cfi_bad_type+0x3fc>  // b.none
 648:	add	w9, w8, #0x1
 64c:	add	x8, x0, x8, lsl #5
 650:	mov	w10, #0x5                   	// #5
 654:	str	w9, [x0, #320]
 658:	str	w10, [x8, #64]
 65c:	ldr	w9, [sp, #1112]
 660:	ldr	x10, [sp, #1104]
 664:	add	x0, sp, #0x1d0
 668:	str	x22, [x8, #80]
 66c:	str	w9, [x8, #76]
 670:	stur	x10, [x8, #68]
 674:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 678:	ldr	x8, [sp, #896]
 67c:	adrp	x23, 0 <__ubsan_handle_dynamic_type_cache_miss>
 680:	cbz	x8, 6f8 <__ubsan_handle_cfi_bad_type+0x280>
 684:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 688:	mov	w9, #0x2                   	// #2
 68c:	add	x10, x10, #0x0
 690:	ldr	d1, [x23]
 694:	str	w9, [sp, #464]
 698:	ldr	x9, [sp, #1104]
 69c:	str	x10, [sp, #512]
 6a0:	ldr	w10, [sp, #1112]
 6a4:	movi	v0.2d, #0x0
 6a8:	mov	w11, #0x1                   	// #1
 6ac:	add	x0, sp, #0x1d0
 6b0:	str	xzr, [sp, #472]
 6b4:	str	x22, [sp, #488]
 6b8:	str	wzr, [sp, #792]
 6bc:	str	xzr, [sp, #800]
 6c0:	str	wzr, [sp, #832]
 6c4:	str	xzr, [sp, #840]
 6c8:	str	xzr, [sp, #872]
 6cc:	str	wzr, [sp, #880]
 6d0:	str	d0, [sp, #480]
 6d4:	str	d0, [sp, #808]
 6d8:	str	d0, [sp, #848]
 6dc:	str	w11, [sp, #784]
 6e0:	str	d1, [sp, #504]
 6e4:	str	w11, [sp, #528]
 6e8:	str	w10, [sp, #540]
 6ec:	stur	x9, [x25, #68]
 6f0:	str	x8, [sp, #544]
 6f4:	b	74c <__ubsan_handle_cfi_bad_type+0x2d4>
 6f8:	ldr	d1, [x23]
 6fc:	mov	w8, #0x2                   	// #2
 700:	str	w8, [sp, #16]
 704:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 708:	movi	v0.2d, #0x0
 70c:	add	x8, x8, #0x0
 710:	str	xzr, [sp, #24]
 714:	str	x22, [sp, #40]
 718:	str	wzr, [sp, #336]
 71c:	str	wzr, [sp, #344]
 720:	str	xzr, [sp, #352]
 724:	str	wzr, [sp, #384]
 728:	str	xzr, [sp, #392]
 72c:	str	xzr, [sp, #424]
 730:	str	d0, [sp, #32]
 734:	str	x8, [sp, #64]
 738:	str	d0, [sp, #360]
 73c:	str	d0, [sp, #400]
 740:	str	d1, [sp, #56]
 744:	str	wzr, [sp, #432]
 748:	add	x0, sp, #0x10
 74c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 750:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 754:	add	x2, sp, #0x1d0
 758:	add	x3, sp, #0x450
 75c:	mov	x1, x22
 760:	str	xzr, [sp, #464]
 764:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 768:	ldr	x8, [sp, #464]
 76c:	tst	w0, #0x1
 770:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 774:	add	x24, x24, #0x0
 778:	csel	x8, x8, xzr, ne  // ne = any
 77c:	cmp	x8, #0x0
 780:	csel	x22, x24, x8, eq  // eq = none
 784:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 788:	ldr	x1, [x21, #8]
 78c:	add	x2, sp, #0x1d0
 790:	add	x3, sp, #0x450
 794:	str	xzr, [sp, #464]
 798:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 79c:	ldr	x8, [sp, #464]
 7a0:	tst	w0, #0x1
 7a4:	mov	x1, x22
 7a8:	csel	x8, x8, xzr, ne  // ne = any
 7ac:	cmp	x8, #0x0
 7b0:	csel	x21, x24, x8, eq  // eq = none
 7b4:	mov	x0, x21
 7b8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 7bc:	cbz	w0, 84c <__ubsan_handle_cfi_bad_type+0x3d4>
 7c0:	ldr	q0, [sp]
 7c4:	ldr	w10, [sp, #1112]
 7c8:	mov	w8, #0x1                   	// #1
 7cc:	str	w8, [sp, #464]
 7d0:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 7d4:	add	x8, x8, #0x0
 7d8:	stp	x20, x19, [sp, #472]
 7dc:	ldr	d1, [x23]
 7e0:	stur	q0, [x25, #24]
 7e4:	ldr	w11, [sp, #1112]
 7e8:	str	x8, [sp, #512]
 7ec:	str	w10, [sp, #540]
 7f0:	ldr	x8, [sp, #1104]
 7f4:	ldr	x10, [sp, #1104]
 7f8:	movi	v0.2d, #0x0
 7fc:	mov	w9, #0x2                   	// #2
 800:	add	x0, sp, #0x1d0
 804:	str	d1, [sp, #504]
 808:	str	wzr, [sp, #528]
 80c:	str	wzr, [sp, #792]
 810:	str	xzr, [sp, #800]
 814:	str	d0, [sp, #808]
 818:	str	wzr, [sp, #832]
 81c:	str	xzr, [sp, #840]
 820:	str	d0, [sp, #848]
 824:	str	xzr, [sp, #872]
 828:	str	wzr, [sp, #880]
 82c:	stur	x8, [x25, #68]
 830:	str	x21, [sp, #544]
 834:	str	w9, [sp, #784]
 838:	str	wzr, [sp, #560]
 83c:	str	w11, [sp, #572]
 840:	stur	x10, [x25, #100]
 844:	str	x22, [sp, #576]
 848:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 84c:	add	x0, sp, #0x3e0
 850:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 854:	add	sp, sp, #0x460
 858:	ldp	x20, x19, [sp, #64]
 85c:	ldp	x22, x21, [sp, #48]
 860:	ldp	x24, x23, [sp, #32]
 864:	ldp	x30, x25, [sp, #16]
 868:	ldr	x29, [sp], #80
 86c:	ret
 870:	bl	0 <_ZN11__sanitizer3DieEv>
 874:	adrp	x0, 0 <__ubsan_handle_dynamic_type_cache_miss>
 878:	adrp	x2, 0 <__ubsan_handle_dynamic_type_cache_miss>
 87c:	add	x0, x0, #0x0
 880:	add	x2, x2, #0x0
 884:	mov	w1, #0xc0                  	// #192
 888:	mov	x3, xzr
 88c:	mov	x4, xzr
 890:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000894 <__ubsan_handle_function_type_mismatch_v1>:
 894:	sub	sp, sp, #0x30
 898:	stp	x29, x30, [sp, #32]
 89c:	add	x29, sp, #0x20
 8a0:	ldur	w8, [x29, #-8]
 8a4:	ldur	w9, [x29, #-5]
 8a8:	mov	x4, sp
 8ac:	strb	wzr, [sp]
 8b0:	stur	w8, [sp, #1]
 8b4:	str	w9, [sp, #4]
 8b8:	stp	x30, x29, [sp, #8]
 8bc:	bl	8cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 8c0:	ldp	x29, x30, [sp, #32]
 8c4:	add	sp, sp, #0x30
 8c8:	ret

00000000000008cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>:
 8cc:	str	x29, [sp, #-80]!
 8d0:	stp	x30, x25, [sp, #16]
 8d4:	stp	x24, x23, [sp, #32]
 8d8:	stp	x22, x21, [sp, #48]
 8dc:	stp	x20, x19, [sp, #64]
 8e0:	sub	sp, sp, #0x290
 8e4:	mov	x21, x1
 8e8:	mov	x19, x0
 8ec:	mov	x0, x2
 8f0:	mov	x1, x3
 8f4:	mov	x23, x4
 8f8:	bl	0 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>
 8fc:	tbz	w0, #0, 908 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x3c>
 900:	mov	w20, wzr
 904:	b	aac <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1e0>
 908:	add	x25, sp, #0x284
 90c:	add	x9, x19, #0xc
 910:	mov	w10, #0xffffffff            	// #-1
 914:	ldaxr	w8, [x9]
 918:	stlxr	w11, w10, [x9]
 91c:	cbnz	w11, 914 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x48>
 920:	ldr	w22, [x19, #8]
 924:	ldr	x24, [x19]
 928:	ldr	x9, [x23, #16]
 92c:	ldr	q0, [x23]
 930:	bfi	x22, x8, #32, #32
 934:	add	x2, sp, #0x260
 938:	mov	w3, #0x1b                  	// #27
 93c:	mov	x0, x24
 940:	mov	x1, x22
 944:	str	x9, [sp, #624]
 948:	str	q0, [sp, #608]
 94c:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 950:	mov	w20, #0x1                   	// #1
 954:	tbnz	w0, #0, aac <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1e0>
 958:	ldr	x8, [x23, #16]
 95c:	ldr	q0, [x23]
 960:	add	x0, sp, #0x210
 964:	add	x1, sp, #0x1f0
 968:	add	x2, sp, #0x1c8
 96c:	mov	w3, #0x1b                  	// #27
 970:	str	w20, [sp, #456]
 974:	str	x8, [sp, #512]
 978:	str	q0, [sp, #496]
 97c:	stp	x24, x22, [sp, #464]
 980:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 984:	mov	x0, x21
 988:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
 98c:	ldr	q0, [sp]
 990:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 994:	ldr	x8, [x0, #40]
 998:	ldr	x11, [x25]
 99c:	stur	q0, [sp, #40]
 9a0:	ldr	d0, [x10]
 9a4:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 9a8:	add	x10, x10, #0x0
 9ac:	str	x10, [sp, #64]
 9b0:	ldr	w10, [sp, #652]
 9b4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 9b8:	add	x9, x9, #0x0
 9bc:	cmp	x8, #0x0
 9c0:	stp	x24, x22, [sp, #24]
 9c4:	str	d0, [sp, #56]
 9c8:	movi	v0.2d, #0x0
 9cc:	csel	x22, x9, x8, eq  // eq = none
 9d0:	str	w20, [sp, #16]
 9d4:	str	wzr, [sp, #344]
 9d8:	str	xzr, [sp, #352]
 9dc:	str	wzr, [sp, #384]
 9e0:	str	xzr, [sp, #392]
 9e4:	str	xzr, [sp, #424]
 9e8:	str	wzr, [sp, #432]
 9ec:	str	w20, [sp, #336]
 9f0:	str	wzr, [sp, #80]
 9f4:	str	d0, [sp, #360]
 9f8:	str	d0, [sp, #400]
 9fc:	str	w10, [sp, #92]
 a00:	stur	x11, [sp, #84]
 a04:	str	x22, [sp, #96]
 a08:	ldr	x1, [x19, #16]
 a0c:	mov	x21, x0
 a10:	add	x0, sp, #0x10
 a14:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 a18:	add	x0, sp, #0x10
 a1c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 a20:	movi	v0.2d, #0x0
 a24:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 a28:	str	d0, [sp, #32]
 a2c:	str	d0, [sp, #360]
 a30:	str	d0, [sp, #400]
 a34:	ldr	d0, [x9]
 a38:	ldr	w9, [sp, #652]
 a3c:	ldr	x10, [x25]
 a40:	mov	w8, #0x3                   	// #3
 a44:	str	w8, [sp, #16]
 a48:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 a4c:	add	x8, x8, #0x0
 a50:	add	x0, sp, #0x10
 a54:	str	xzr, [sp, #24]
 a58:	str	x21, [sp, #48]
 a5c:	str	w20, [sp, #336]
 a60:	str	wzr, [sp, #344]
 a64:	str	xzr, [sp, #352]
 a68:	str	wzr, [sp, #384]
 a6c:	str	xzr, [sp, #392]
 a70:	str	xzr, [sp, #424]
 a74:	str	wzr, [sp, #432]
 a78:	str	wzr, [sp, #80]
 a7c:	str	x8, [sp, #64]
 a80:	str	w9, [sp, #92]
 a84:	stur	x10, [sp, #84]
 a88:	str	d0, [sp, #56]
 a8c:	str	x22, [sp, #96]
 a90:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 a94:	cbz	x21, aa0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1d4>
 a98:	mov	x0, x21
 a9c:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 aa0:	add	x0, sp, #0x210
 aa4:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 aa8:	mov	w20, #0x1                   	// #1
 aac:	mov	w0, w20
 ab0:	add	sp, sp, #0x290
 ab4:	ldp	x20, x19, [sp, #64]
 ab8:	ldp	x22, x21, [sp, #48]
 abc:	ldp	x24, x23, [sp, #32]
 ac0:	ldp	x30, x25, [sp, #16]
 ac4:	ldr	x29, [sp], #80
 ac8:	ret

0000000000000acc <__ubsan_handle_function_type_mismatch_v1_abort>:
 acc:	sub	sp, sp, #0x30
 ad0:	stp	x29, x30, [sp, #32]
 ad4:	add	x29, sp, #0x20
 ad8:	ldur	w8, [x29, #-8]
 adc:	ldur	w9, [x29, #-5]
 ae0:	mov	w10, #0x1                   	// #1
 ae4:	mov	x4, sp
 ae8:	strb	w10, [sp]
 aec:	stur	w8, [sp, #1]
 af0:	str	w9, [sp, #4]
 af4:	stp	x30, x29, [sp, #8]
 af8:	bl	8cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 afc:	tbnz	w0, #0, b0c <__ubsan_handle_function_type_mismatch_v1_abort+0x40>
 b00:	ldp	x29, x30, [sp, #32]
 b04:	add	sp, sp, #0x30
 b08:	ret
 b0c:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_type_hash.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>:
   0:	ldr	x0, [x0]
   4:	b	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>

ubsan_type_hash_itanium.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>:
   0:	stp	x30, x23, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x19, x2
  10:	and	w8, w19, #0xffff
  14:	adrp	x9, 0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
  18:	eor	w12, w8, #0x1
  1c:	add	x9, x9, #0x0
  20:	add	x8, x9, w12, uxtw #3
  24:	ldr	x10, [x8]
  28:	mov	x20, x1
  2c:	mov	x22, x8
  30:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  34:	cmp	x10, x19
  38:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  3c:	ubfx	x10, x19, #16, #16
  40:	add	w11, w10, #0x1
  44:	mov	w13, #0xfffeffff            	// #-65537
  48:	add	w10, w11, w12
  4c:	add	w12, w10, w13
  50:	cmp	w10, #0x10, lsl #12
  54:	csel	w12, w12, w10, hi  // hi = pmore
  58:	add	x22, x9, w12, uxtw #3
  5c:	ldr	x10, [x22]
  60:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  64:	cmp	x10, x19
  68:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  6c:	add	w10, w12, w11
  70:	mov	w12, #0xfffeffff            	// #-65537
  74:	add	w12, w10, w12
  78:	cmp	w10, #0x10, lsl #12
  7c:	csel	w12, w12, w10, hi  // hi = pmore
  80:	add	x22, x9, w12, uxtw #3
  84:	ldr	x10, [x22]
  88:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  8c:	cmp	x10, x19
  90:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  94:	add	w10, w12, w11
  98:	mov	w12, #0xfffeffff            	// #-65537
  9c:	add	w12, w10, w12
  a0:	cmp	w10, #0x10, lsl #12
  a4:	csel	w12, w12, w10, hi  // hi = pmore
  a8:	add	x22, x9, w12, uxtw #3
  ac:	ldr	x10, [x22]
  b0:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  b4:	cmp	x10, x19
  b8:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  bc:	add	w10, w12, w11
  c0:	mov	w11, #0xfffeffff            	// #-65537
  c4:	add	w11, w10, w11
  c8:	cmp	w10, #0x10, lsl #12
  cc:	csel	w10, w11, w10, hi  // hi = pmore
  d0:	add	x9, x9, w10, uxtw #3
  d4:	ldr	x10, [x9]
  d8:	cmp	x10, x19
  dc:	ccmp	x10, #0x0, #0x4, ne  // ne = any
  e0:	csel	x22, x9, x8, eq  // eq = none
  e4:	ldr	x10, [x22]
  e8:	cmp	x10, x19
  ec:	b.ne	114 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x114>  // b.any
  f0:	adrp	x9, 0 <__ubsan_vptr_type_cache>
  f4:	ldr	x9, [x9]
  f8:	and	x8, x19, #0x7f
  fc:	mov	w0, #0x1                   	// #1
 100:	str	x19, [x9, x8, lsl #3]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldp	x22, x21, [sp, #16]
 10c:	ldp	x30, x23, [sp], #48
 110:	ret
 114:	ldr	x23, [x0]
 118:	mov	w1, #0x10                  	// #16
 11c:	sub	x21, x23, #0x10
 120:	mov	x0, x21
 124:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 128:	tbz	w0, #0, 184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>
 12c:	ldur	x0, [x23, #-8]
 130:	cbz	x0, 104 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x104>
 134:	ldr	x21, [x21]
 138:	add	x8, x21, #0x100, lsl #12
 13c:	cmp	x8, #0x200, lsl #12
 140:	b.hi	184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>  // b.pmore
 144:	adrp	x1, 0 <_ZTISt9type_info>
 148:	adrp	x2, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 14c:	ldr	x1, [x1]
 150:	ldr	x2, [x2]
 154:	mov	x3, xzr
 158:	bl	0 <__dynamic_cast>
 15c:	cbz	x0, 104 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x104>
 160:	neg	x2, x21
 164:	mov	x1, x20
 168:	bl	198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 16c:	tbz	w0, #0, 184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>
 170:	adrp	x9, 0 <__ubsan_vptr_type_cache>
 174:	ldr	x9, [x9]
 178:	and	x8, x19, #0x7f
 17c:	str	x19, [x22]
 180:	b	fc <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xfc>
 184:	mov	w0, wzr
 188:	ldp	x20, x19, [sp, #32]
 18c:	ldp	x22, x21, [sp, #16]
 190:	ldp	x30, x23, [sp], #48
 194:	ret

0000000000000198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>:
 198:	stp	x30, x23, [sp, #-48]!
 19c:	stp	x22, x21, [sp, #16]
 1a0:	stp	x20, x19, [sp, #32]
 1a4:	mov	x19, x1
 1a8:	mov	x21, x0
 1ac:	ldr	x0, [x0, #8]
 1b0:	ldr	x1, [x1, #8]
 1b4:	mov	x20, x2
 1b8:	cmp	x0, x1
 1bc:	b.eq	21c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x84>  // b.none
 1c0:	adrp	x22, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 1c4:	adrp	x23, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
 1c8:	ldr	x22, [x22]
 1cc:	ldr	x23, [x23]
 1d0:	ldrb	w8, [x0]
 1d4:	cmp	w8, #0x2a
 1d8:	b.eq	1f0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x58>  // b.none
 1dc:	ldrb	w8, [x1]
 1e0:	cmp	w8, #0x2a
 1e4:	b.eq	1f0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x58>  // b.none
 1e8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 1ec:	cbz	w0, 21c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x84>
 1f0:	mov	x0, x21
 1f4:	mov	x1, x22
 1f8:	mov	x2, x23
 1fc:	mov	x3, xzr
 200:	bl	0 <__dynamic_cast>
 204:	cbz	x0, 234 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x9c>
 208:	ldr	x21, [x0, #16]
 20c:	ldr	x1, [x19, #8]
 210:	ldr	x0, [x21, #8]
 214:	cmp	x0, x1
 218:	b.ne	1d0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x38>  // b.any
 21c:	cmp	x20, #0x0
 220:	cset	w0, eq  // eq = none
 224:	ldp	x20, x19, [sp, #32]
 228:	ldp	x22, x21, [sp, #16]
 22c:	ldp	x30, x23, [sp], #48
 230:	ret
 234:	adrp	x1, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 238:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
 23c:	ldr	x1, [x1]
 240:	ldr	x2, [x2]
 244:	mov	x0, x21
 248:	mov	x3, xzr
 24c:	bl	0 <__dynamic_cast>
 250:	cbz	x0, 224 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x8c>
 254:	ldr	w8, [x0, #20]
 258:	mov	x21, x0
 25c:	cbz	w8, 29c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x104>
 260:	mov	w8, wzr
 264:	add	x9, x21, w8, uxtw #4
 268:	ldr	x9, [x9, #32]
 26c:	tbnz	w9, #0, 2b0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x118>
 270:	mov	w22, w8
 274:	add	x8, x21, x22, lsl #4
 278:	ldr	x0, [x8, #24]
 27c:	sub	x2, x20, x9, asr #8
 280:	mov	x1, x19
 284:	bl	198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 288:	tbnz	w0, #0, 2b0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x118>
 28c:	ldr	w9, [x21, #20]
 290:	add	w8, w22, #0x1
 294:	cmp	w8, w9
 298:	b.ne	264 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0xcc>  // b.any
 29c:	mov	w0, wzr
 2a0:	ldp	x20, x19, [sp, #32]
 2a4:	ldp	x22, x21, [sp, #16]
 2a8:	ldp	x30, x23, [sp], #48
 2ac:	ret
 2b0:	mov	w0, #0x1                   	// #1
 2b4:	ldp	x20, x19, [sp, #32]
 2b8:	ldp	x22, x21, [sp, #16]
 2bc:	ldp	x30, x23, [sp], #48
 2c0:	ret

00000000000002c4 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>:
 2c4:	stp	x30, x21, [sp, #-32]!
 2c8:	stp	x20, x19, [sp, #16]
 2cc:	sub	x20, x0, #0x10
 2d0:	mov	x21, x0
 2d4:	mov	w1, #0x10                  	// #16
 2d8:	mov	x0, x20
 2dc:	mov	x19, x8
 2e0:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 2e4:	tbz	w0, #0, 320 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x5c>
 2e8:	ldur	x21, [x21, #-8]
 2ec:	cbz	x21, 320 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x5c>
 2f0:	ldr	x20, [x20]
 2f4:	add	x8, x20, #0x100, lsl #12
 2f8:	cmp	x8, #0x200, lsl #12
 2fc:	b.hi	324 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x60>  // b.pmore
 300:	neg	x20, x20
 304:	mov	x0, x21
 308:	mov	x1, x20
 30c:	bl	358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 310:	ldr	x9, [x21, #8]
 314:	cbz	x0, 33c <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x78>
 318:	ldr	x8, [x0, #8]
 31c:	b	344 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x80>
 320:	mov	x20, xzr
 324:	mov	x8, xzr
 328:	str	xzr, [x19]
 32c:	stp	x20, x8, [x19, #8]
 330:	ldp	x20, x19, [sp, #16]
 334:	ldp	x30, x21, [sp], #32
 338:	ret
 33c:	adrp	x8, 0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
 340:	add	x8, x8, #0x0
 344:	str	x9, [x19]
 348:	stp	x20, x8, [x19, #8]
 34c:	ldp	x20, x19, [sp, #16]
 350:	ldp	x30, x21, [sp], #32
 354:	ret

0000000000000358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>:
 358:	str	x30, [sp, #-48]!
 35c:	stp	x22, x21, [sp, #16]
 360:	stp	x20, x19, [sp, #32]
 364:	mov	x20, x0
 368:	cbz	x1, 408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 36c:	cbz	x20, 408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 370:	adrp	x21, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 374:	adrp	x22, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
 378:	ldr	x21, [x21]
 37c:	ldr	x22, [x22]
 380:	mov	x19, x1
 384:	mov	x0, x20
 388:	mov	x1, x21
 38c:	mov	x2, x22
 390:	mov	x3, xzr
 394:	bl	0 <__dynamic_cast>
 398:	cbz	x0, 3a8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x50>
 39c:	ldr	x20, [x0, #16]
 3a0:	cbnz	x20, 384 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x2c>
 3a4:	b	408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 3a8:	adrp	x1, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 3ac:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
 3b0:	ldr	x1, [x1]
 3b4:	ldr	x2, [x2]
 3b8:	mov	x0, x20
 3bc:	mov	x3, xzr
 3c0:	bl	0 <__dynamic_cast>
 3c4:	cbz	x0, 404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>
 3c8:	ldr	w21, [x0, #20]
 3cc:	cbz	w21, 404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>
 3d0:	add	x22, x0, #0x20
 3d4:	b	3e4 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x8c>
 3d8:	subs	w21, w21, #0x1
 3dc:	add	x22, x22, #0x10
 3e0:	b.eq	404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>  // b.none
 3e4:	ldr	x8, [x22]
 3e8:	tbnz	w8, #0, 3d8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x80>
 3ec:	ldur	x0, [x22, #-8]
 3f0:	sub	x1, x19, x8, asr #8
 3f4:	bl	358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 3f8:	cbz	x0, 3d8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x80>
 3fc:	mov	x20, x0
 400:	b	408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 404:	mov	x20, xzr
 408:	mov	x0, x20
 40c:	ldp	x20, x19, [sp, #32]
 410:	ldp	x22, x21, [sp, #16]
 414:	ldr	x30, [sp], #48
 418:	ret

000000000000041c <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>:
 41c:	str	x30, [sp, #-16]!
 420:	ldr	x0, [x0, #8]
 424:	ldrb	w8, [x0]
 428:	cmp	w8, #0x2a
 42c:	b.ne	43c <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x20>  // b.any
 430:	mov	w0, wzr
 434:	ldr	x30, [sp], #16
 438:	ret
 43c:	ldr	x1, [x1, #8]
 440:	ldrb	w8, [x1]
 444:	cmp	w8, #0x2a
 448:	b.ne	458 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x3c>  // b.any
 44c:	mov	w0, wzr
 450:	ldr	x30, [sp], #16
 454:	ret
 458:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 45c:	cmp	w0, #0x0
 460:	cset	w0, eq  // eq = none
 464:	ldr	x30, [sp], #16
 468:	ret

ubsan_type_hash_win.cpp.o:     file format elf64-littleaarch64

