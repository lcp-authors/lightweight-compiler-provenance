
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402608 <.init>:
  402608:	stp	x29, x30, [sp, #-16]!
  40260c:	mov	x29, sp
  402610:	bl	4032c0 <wcrtomb@plt+0x580>
  402614:	ldp	x29, x30, [sp], #16
  402618:	ret

Disassembly of section .plt:

0000000000402620 <mbrtowc@plt-0x20>:
  402620:	stp	x16, x30, [sp, #-16]!
  402624:	adrp	x16, 440000 <_obstack_memory_used@@Base+0x272f0>
  402628:	ldr	x17, [x16, #4088]
  40262c:	add	x16, x16, #0xff8
  402630:	br	x17
  402634:	nop
  402638:	nop
  40263c:	nop

0000000000402640 <mbrtowc@plt>:
  402640:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16]
  402648:	add	x16, x16, #0x0
  40264c:	br	x17

0000000000402650 <memcpy@plt>:
  402650:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #8]
  402658:	add	x16, x16, #0x8
  40265c:	br	x17

0000000000402660 <memmove@plt>:
  402660:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #16]
  402668:	add	x16, x16, #0x10
  40266c:	br	x17

0000000000402670 <isalpha@plt>:
  402670:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #24]
  402678:	add	x16, x16, #0x18
  40267c:	br	x17

0000000000402680 <fwrite_unlocked@plt>:
  402680:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #32]
  402688:	add	x16, x16, #0x20
  40268c:	br	x17

0000000000402690 <strlen@plt>:
  402690:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #40]
  402698:	add	x16, x16, #0x28
  40269c:	br	x17

00000000004026a0 <__sprintf_chk@plt>:
  4026a0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #48]
  4026a8:	add	x16, x16, #0x30
  4026ac:	br	x17

00000000004026b0 <acl_set_fd@plt>:
  4026b0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #56]
  4026b8:	add	x16, x16, #0x38
  4026bc:	br	x17

00000000004026c0 <exit@plt>:
  4026c0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #64]
  4026c8:	add	x16, x16, #0x40
  4026cc:	br	x17

00000000004026d0 <error@plt>:
  4026d0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #72]
  4026d8:	add	x16, x16, #0x48
  4026dc:	br	x17

00000000004026e0 <acl_entries@plt>:
  4026e0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #80]
  4026e8:	add	x16, x16, #0x50
  4026ec:	br	x17

00000000004026f0 <wctype@plt>:
  4026f0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #88]
  4026f8:	add	x16, x16, #0x58
  4026fc:	br	x17

0000000000402700 <readlink@plt>:
  402700:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #96]
  402708:	add	x16, x16, #0x60
  40270c:	br	x17

0000000000402710 <ftell@plt>:
  402710:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #104]
  402718:	add	x16, x16, #0x68
  40271c:	br	x17

0000000000402720 <__cxa_atexit@plt>:
  402720:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #112]
  402728:	add	x16, x16, #0x70
  40272c:	br	x17

0000000000402730 <qsort@plt>:
  402730:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #120]
  402738:	add	x16, x16, #0x78
  40273c:	br	x17

0000000000402740 <setvbuf@plt>:
  402740:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #128]
  402748:	add	x16, x16, #0x80
  40274c:	br	x17

0000000000402750 <isblank@plt>:
  402750:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #136]
  402758:	add	x16, x16, #0x88
  40275c:	br	x17

0000000000402760 <__fwriting@plt>:
  402760:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #144]
  402768:	add	x16, x16, #0x90
  40276c:	br	x17

0000000000402770 <__ctype_tolower_loc@plt>:
  402770:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #152]
  402778:	add	x16, x16, #0x98
  40277c:	br	x17

0000000000402780 <fileno@plt>:
  402780:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #160]
  402788:	add	x16, x16, #0xa0
  40278c:	br	x17

0000000000402790 <acl_delete_def_file@plt>:
  402790:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #168]
  402798:	add	x16, x16, #0xa8
  40279c:	br	x17

00000000004027a0 <fclose@plt>:
  4027a0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #176]
  4027a8:	add	x16, x16, #0xb0
  4027ac:	br	x17

00000000004027b0 <wctob@plt>:
  4027b0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #184]
  4027b8:	add	x16, x16, #0xb8
  4027bc:	br	x17

00000000004027c0 <nl_langinfo@plt>:
  4027c0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #192]
  4027c8:	add	x16, x16, #0xc0
  4027cc:	br	x17

00000000004027d0 <fopen@plt>:
  4027d0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #200]
  4027d8:	add	x16, x16, #0xc8
  4027dc:	br	x17

00000000004027e0 <isspace@plt>:
  4027e0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #208]
  4027e8:	add	x16, x16, #0xd0
  4027ec:	br	x17

00000000004027f0 <iswctype@plt>:
  4027f0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #216]
  4027f8:	add	x16, x16, #0xd8
  4027fc:	br	x17

0000000000402800 <malloc@plt>:
  402800:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #224]
  402808:	add	x16, x16, #0xe0
  40280c:	br	x17

0000000000402810 <chmod@plt>:
  402810:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #232]
  402818:	add	x16, x16, #0xe8
  40281c:	br	x17

0000000000402820 <getdelim@plt>:
  402820:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #240]
  402828:	add	x16, x16, #0xf0
  40282c:	br	x17

0000000000402830 <islower@plt>:
  402830:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #248]
  402838:	add	x16, x16, #0xf8
  40283c:	br	x17

0000000000402840 <isxdigit@plt>:
  402840:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #256]
  402848:	add	x16, x16, #0x100
  40284c:	br	x17

0000000000402850 <popen@plt>:
  402850:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #264]
  402858:	add	x16, x16, #0x108
  40285c:	br	x17

0000000000402860 <strncmp@plt>:
  402860:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #272]
  402868:	add	x16, x16, #0x110
  40286c:	br	x17

0000000000402870 <bindtextdomain@plt>:
  402870:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #280]
  402878:	add	x16, x16, #0x118
  40287c:	br	x17

0000000000402880 <isdigit@plt>:
  402880:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #288]
  402888:	add	x16, x16, #0x120
  40288c:	br	x17

0000000000402890 <__libc_start_main@plt>:
  402890:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #296]
  402898:	add	x16, x16, #0x128
  40289c:	br	x17

00000000004028a0 <strverscmp@plt>:
  4028a0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #304]
  4028a8:	add	x16, x16, #0x130
  4028ac:	br	x17

00000000004028b0 <__printf_chk@plt>:
  4028b0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #312]
  4028b8:	add	x16, x16, #0x138
  4028bc:	br	x17

00000000004028c0 <acl_get_tag_type@plt>:
  4028c0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #320]
  4028c8:	add	x16, x16, #0x140
  4028cc:	br	x17

00000000004028d0 <memset@plt>:
  4028d0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #328]
  4028d8:	add	x16, x16, #0x148
  4028dc:	br	x17

00000000004028e0 <fdopen@plt>:
  4028e0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #336]
  4028e8:	add	x16, x16, #0x150
  4028ec:	br	x17

00000000004028f0 <fchmod@plt>:
  4028f0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #344]
  4028f8:	add	x16, x16, #0x158
  4028fc:	br	x17

0000000000402900 <__vfprintf_chk@plt>:
  402900:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #352]
  402908:	add	x16, x16, #0x160
  40290c:	br	x17

0000000000402910 <calloc@plt>:
  402910:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #360]
  402918:	add	x16, x16, #0x168
  40291c:	br	x17

0000000000402920 <isupper@plt>:
  402920:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #368]
  402928:	add	x16, x16, #0x170
  40292c:	br	x17

0000000000402930 <realloc@plt>:
  402930:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #376]
  402938:	add	x16, x16, #0x178
  40293c:	br	x17

0000000000402940 <__ctype_toupper_loc@plt>:
  402940:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #384]
  402948:	add	x16, x16, #0x180
  40294c:	br	x17

0000000000402950 <acl_set_file@plt>:
  402950:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #392]
  402958:	add	x16, x16, #0x188
  40295c:	br	x17

0000000000402960 <rewind@plt>:
  402960:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #400]
  402968:	add	x16, x16, #0x190
  40296c:	br	x17

0000000000402970 <acl_from_mode@plt>:
  402970:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #408]
  402978:	add	x16, x16, #0x198
  40297c:	br	x17

0000000000402980 <acl_get_fd@plt>:
  402980:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #416]
  402988:	add	x16, x16, #0x1a0
  40298c:	br	x17

0000000000402990 <strdup@plt>:
  402990:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #424]
  402998:	add	x16, x16, #0x1a8
  40299c:	br	x17

00000000004029a0 <strerror@plt>:
  4029a0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #432]
  4029a8:	add	x16, x16, #0x1b0
  4029ac:	br	x17

00000000004029b0 <strrchr@plt>:
  4029b0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #440]
  4029b8:	add	x16, x16, #0x1b8
  4029bc:	br	x17

00000000004029c0 <__gmon_start__@plt>:
  4029c0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #448]
  4029c8:	add	x16, x16, #0x1c0
  4029cc:	br	x17

00000000004029d0 <btowc@plt>:
  4029d0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #456]
  4029d8:	add	x16, x16, #0x1c8
  4029dc:	br	x17

00000000004029e0 <abort@plt>:
  4029e0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #464]
  4029e8:	add	x16, x16, #0x1d0
  4029ec:	br	x17

00000000004029f0 <mkostemp@plt>:
  4029f0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #472]
  4029f8:	add	x16, x16, #0x1d8
  4029fc:	br	x17

0000000000402a00 <iscntrl@plt>:
  402a00:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #480]
  402a08:	add	x16, x16, #0x1e0
  402a0c:	br	x17

0000000000402a10 <mbsinit@plt>:
  402a10:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #488]
  402a18:	add	x16, x16, #0x1e8
  402a1c:	br	x17

0000000000402a20 <__overflow@plt>:
  402a20:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #496]
  402a28:	add	x16, x16, #0x1f0
  402a2c:	br	x17

0000000000402a30 <ispunct@plt>:
  402a30:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #504]
  402a38:	add	x16, x16, #0x1f8
  402a3c:	br	x17

0000000000402a40 <puts@plt>:
  402a40:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #512]
  402a48:	add	x16, x16, #0x200
  402a4c:	br	x17

0000000000402a50 <fread_unlocked@plt>:
  402a50:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #520]
  402a58:	add	x16, x16, #0x208
  402a5c:	br	x17

0000000000402a60 <memcmp@plt>:
  402a60:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #528]
  402a68:	add	x16, x16, #0x210
  402a6c:	br	x17

0000000000402a70 <textdomain@plt>:
  402a70:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #536]
  402a78:	add	x16, x16, #0x218
  402a7c:	br	x17

0000000000402a80 <getopt_long@plt>:
  402a80:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #544]
  402a88:	add	x16, x16, #0x220
  402a8c:	br	x17

0000000000402a90 <__fprintf_chk@plt>:
  402a90:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #552]
  402a98:	add	x16, x16, #0x228
  402a9c:	br	x17

0000000000402aa0 <strcmp@plt>:
  402aa0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #560]
  402aa8:	add	x16, x16, #0x230
  402aac:	br	x17

0000000000402ab0 <__ctype_b_loc@plt>:
  402ab0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #568]
  402ab8:	add	x16, x16, #0x238
  402abc:	br	x17

0000000000402ac0 <acl_get_file@plt>:
  402ac0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #576]
  402ac8:	add	x16, x16, #0x240
  402acc:	br	x17

0000000000402ad0 <strtol@plt>:
  402ad0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #584]
  402ad8:	add	x16, x16, #0x248
  402adc:	br	x17

0000000000402ae0 <free@plt>:
  402ae0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #592]
  402ae8:	add	x16, x16, #0x250
  402aec:	br	x17

0000000000402af0 <ungetc@plt>:
  402af0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #600]
  402af8:	add	x16, x16, #0x258
  402afc:	br	x17

0000000000402b00 <__ctype_get_mb_cur_max@plt>:
  402b00:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #608]
  402b08:	add	x16, x16, #0x260
  402b0c:	br	x17

0000000000402b10 <acl_get_entry@plt>:
  402b10:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #616]
  402b18:	add	x16, x16, #0x268
  402b1c:	br	x17

0000000000402b20 <strchr@plt>:
  402b20:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #624]
  402b28:	add	x16, x16, #0x270
  402b2c:	br	x17

0000000000402b30 <memrchr@plt>:
  402b30:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #632]
  402b38:	add	x16, x16, #0x278
  402b3c:	br	x17

0000000000402b40 <rename@plt>:
  402b40:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #640]
  402b48:	add	x16, x16, #0x280
  402b4c:	br	x17

0000000000402b50 <fwrite@plt>:
  402b50:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #648]
  402b58:	add	x16, x16, #0x288
  402b5c:	br	x17

0000000000402b60 <fflush_unlocked@plt>:
  402b60:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #656]
  402b68:	add	x16, x16, #0x290
  402b6c:	br	x17

0000000000402b70 <dcngettext@plt>:
  402b70:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #664]
  402b78:	add	x16, x16, #0x298
  402b7c:	br	x17

0000000000402b80 <strcpy@plt>:
  402b80:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #672]
  402b88:	add	x16, x16, #0x2a0
  402b8c:	br	x17

0000000000402b90 <clearerr_unlocked@plt>:
  402b90:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #680]
  402b98:	add	x16, x16, #0x2a8
  402b9c:	br	x17

0000000000402ba0 <__lxstat@plt>:
  402ba0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #688]
  402ba8:	add	x16, x16, #0x2b0
  402bac:	br	x17

0000000000402bb0 <memchr@plt>:
  402bb0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #696]
  402bb8:	add	x16, x16, #0x2b8
  402bbc:	br	x17

0000000000402bc0 <isatty@plt>:
  402bc0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #704]
  402bc8:	add	x16, x16, #0x2c0
  402bcc:	br	x17

0000000000402bd0 <fputc_unlocked@plt>:
  402bd0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #712]
  402bd8:	add	x16, x16, #0x2c8
  402bdc:	br	x17

0000000000402be0 <isgraph@plt>:
  402be0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #720]
  402be8:	add	x16, x16, #0x2d0
  402bec:	br	x17

0000000000402bf0 <iswalnum@plt>:
  402bf0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #728]
  402bf8:	add	x16, x16, #0x2d8
  402bfc:	br	x17

0000000000402c00 <__fxstat@plt>:
  402c00:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #736]
  402c08:	add	x16, x16, #0x2e0
  402c0c:	br	x17

0000000000402c10 <strstr@plt>:
  402c10:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #744]
  402c18:	add	x16, x16, #0x2e8
  402c1c:	br	x17

0000000000402c20 <dcgettext@plt>:
  402c20:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #752]
  402c28:	add	x16, x16, #0x2f0
  402c2c:	br	x17

0000000000402c30 <fputs_unlocked@plt>:
  402c30:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #760]
  402c38:	add	x16, x16, #0x2f8
  402c3c:	br	x17

0000000000402c40 <strcoll@plt>:
  402c40:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #768]
  402c48:	add	x16, x16, #0x300
  402c4c:	br	x17

0000000000402c50 <isalnum@plt>:
  402c50:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #776]
  402c58:	add	x16, x16, #0x308
  402c5c:	br	x17

0000000000402c60 <pclose@plt>:
  402c60:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #784]
  402c68:	add	x16, x16, #0x310
  402c6c:	br	x17

0000000000402c70 <towupper@plt>:
  402c70:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #792]
  402c78:	add	x16, x16, #0x318
  402c7c:	br	x17

0000000000402c80 <iswprint@plt>:
  402c80:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #800]
  402c88:	add	x16, x16, #0x320
  402c8c:	br	x17

0000000000402c90 <umask@plt>:
  402c90:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #808]
  402c98:	add	x16, x16, #0x328
  402c9c:	br	x17

0000000000402ca0 <__assert_fail@plt>:
  402ca0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #816]
  402ca8:	add	x16, x16, #0x330
  402cac:	br	x17

0000000000402cb0 <__errno_location@plt>:
  402cb0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #824]
  402cb8:	add	x16, x16, #0x338
  402cbc:	br	x17

0000000000402cc0 <getenv@plt>:
  402cc0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #832]
  402cc8:	add	x16, x16, #0x340
  402ccc:	br	x17

0000000000402cd0 <unlink@plt>:
  402cd0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #840]
  402cd8:	add	x16, x16, #0x348
  402cdc:	br	x17

0000000000402ce0 <fchown@plt>:
  402ce0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #848]
  402ce8:	add	x16, x16, #0x350
  402cec:	br	x17

0000000000402cf0 <towlower@plt>:
  402cf0:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #856]
  402cf8:	add	x16, x16, #0x358
  402cfc:	br	x17

0000000000402d00 <__uflow@plt>:
  402d00:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #864]
  402d08:	add	x16, x16, #0x360
  402d0c:	br	x17

0000000000402d10 <isprint@plt>:
  402d10:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #872]
  402d18:	add	x16, x16, #0x368
  402d1c:	br	x17

0000000000402d20 <setlocale@plt>:
  402d20:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #880]
  402d28:	add	x16, x16, #0x370
  402d2c:	br	x17

0000000000402d30 <acl_free@plt>:
  402d30:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #888]
  402d38:	add	x16, x16, #0x378
  402d3c:	br	x17

0000000000402d40 <wcrtomb@plt>:
  402d40:	adrp	x16, 441000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #896]
  402d48:	add	x16, x16, #0x380
  402d4c:	br	x17

Disassembly of section .text:

0000000000402d50 <_obstack_begin@@Base-0x15bb0>:
  402d50:	sub	sp, sp, #0x80
  402d54:	stp	x29, x30, [sp, #32]
  402d58:	add	x29, sp, #0x20
  402d5c:	stp	x19, x20, [sp, #48]
  402d60:	mov	x19, x1
  402d64:	mov	w20, w0
  402d68:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402d6c:	add	x0, x0, #0x818
  402d70:	stp	x21, x22, [sp, #64]
  402d74:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x102f0>
  402d78:	add	x21, x21, #0xd58
  402d7c:	stp	x23, x24, [sp, #80]
  402d80:	stp	x25, x26, [sp, #96]
  402d84:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  402d88:	stp	x27, x28, [sp, #112]
  402d8c:	bl	402cc0 <getenv@plt>
  402d90:	mov	x22, x0
  402d94:	ldr	x0, [x19]
  402d98:	bl	414770 <wcrtomb@plt+0x11a30>
  402d9c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402da0:	add	x1, x1, #0x190
  402da4:	mov	w0, #0x6                   	// #6
  402da8:	bl	402d20 <setlocale@plt>
  402dac:	bl	40b750 <wcrtomb@plt+0x8a10>
  402db0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  402db4:	add	x0, x0, #0x8f8
  402db8:	bl	4144e8 <wcrtomb@plt+0x117a8>
  402dbc:	adrp	x0, 40b000 <wcrtomb@plt+0x82c0>
  402dc0:	add	x0, x0, #0xf68
  402dc4:	bl	429498 <_obstack_memory_used@@Base+0x10788>
  402dc8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402dcc:	add	x1, x1, #0x820
  402dd0:	mov	x0, x21
  402dd4:	bl	402870 <bindtextdomain@plt>
  402dd8:	mov	x0, x21
  402ddc:	bl	402a70 <textdomain@plt>
  402de0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402de4:	add	x0, x0, #0x10
  402de8:	bl	402cc0 <getenv@plt>
  402dec:	cmp	x0, #0x0
  402df0:	cset	w0, ne  // ne = any
  402df4:	str	w0, [x26, #2288]
  402df8:	cbz	x22, 402e24 <wcrtomb@plt+0xe4>
  402dfc:	mov	x0, x22
  402e00:	mov	w2, #0xa                   	// #10
  402e04:	mov	x1, #0x0                   	// #0
  402e08:	bl	402ad0 <strtol@plt>
  402e0c:	sxtw	x0, w0
  402e10:	cmp	x0, #0x1
  402e14:	b.ls	402e24 <wcrtomb@plt+0xe4>  // b.plast
  402e18:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  402e1c:	sub	x0, x0, #0x1
  402e20:	str	x0, [x1, #1128]
  402e24:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402e28:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402e2c:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  402e30:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  402e34:	add	x22, x22, #0x9e0
  402e38:	add	x21, x21, #0x8f0
  402e3c:	add	x23, x23, #0x758
  402e40:	add	x25, x25, #0x468
  402e44:	mov	w24, #0x1                   	// #1
  402e48:	mov	x3, x22
  402e4c:	mov	x2, x21
  402e50:	mov	x1, x19
  402e54:	mov	w0, w20
  402e58:	mov	x4, #0x0                   	// #0
  402e5c:	bl	402a80 <getopt_long@plt>
  402e60:	cmn	w0, #0x1
  402e64:	b.eq	402eb4 <wcrtomb@plt+0x174>  // b.none
  402e68:	cmp	w0, #0x6e
  402e6c:	b.eq	403054 <wcrtomb@plt+0x314>  // b.none
  402e70:	b.le	402f20 <wcrtomb@plt+0x1e0>
  402e74:	cmp	w0, #0x76
  402e78:	b.eq	403064 <wcrtomb@plt+0x324>  // b.none
  402e7c:	b.le	402f70 <wcrtomb@plt+0x230>
  402e80:	cmp	w0, #0x100
  402e84:	b.eq	40305c <wcrtomb@plt+0x31c>  // b.none
  402e88:	cmp	w0, #0x101
  402e8c:	b.ne	402f60 <wcrtomb@plt+0x220>  // b.any
  402e90:	mov	x3, x22
  402e94:	mov	x2, x21
  402e98:	mov	x1, x19
  402e9c:	mov	w0, w20
  402ea0:	mov	x4, #0x0                   	// #0
  402ea4:	strb	w24, [x23, #45]
  402ea8:	bl	402a80 <getopt_long@plt>
  402eac:	cmn	w0, #0x1
  402eb0:	b.ne	402e68 <wcrtomb@plt+0x128>  // b.any
  402eb4:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  402eb8:	add	x21, x21, #0x758
  402ebc:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  402ec0:	ldr	x0, [x21, #16]
  402ec4:	cbz	x0, 403200 <wcrtomb@plt+0x4c0>
  402ec8:	ldr	x0, [x21, #16]
  402ecc:	bl	406f20 <wcrtomb@plt+0x41e0>
  402ed0:	ldrb	w0, [x21, #45]
  402ed4:	cbnz	w0, 403238 <wcrtomb@plt+0x4f8>
  402ed8:	ldr	x0, [x21, #16]
  402edc:	ldrsw	x1, [x22, #1304]
  402ee0:	add	x1, x19, x1, lsl #3
  402ee4:	bl	40b450 <wcrtomb@plt+0x8710>
  402ee8:	mov	w19, w0
  402eec:	ldr	x0, [x21, #16]
  402ef0:	bl	4070d8 <wcrtomb@plt+0x4398>
  402ef4:	mov	x0, #0x0                   	// #0
  402ef8:	bl	40ca58 <wcrtomb@plt+0x9d18>
  402efc:	mov	w0, w19
  402f00:	ldp	x29, x30, [sp, #32]
  402f04:	ldp	x19, x20, [sp, #48]
  402f08:	ldp	x21, x22, [sp, #64]
  402f0c:	ldp	x23, x24, [sp, #80]
  402f10:	ldp	x25, x26, [sp, #96]
  402f14:	ldp	x27, x28, [sp, #112]
  402f18:	add	sp, sp, #0x80
  402f1c:	ret
  402f20:	cmp	w0, #0x65
  402f24:	b.eq	40301c <wcrtomb@plt+0x2dc>  // b.none
  402f28:	b.le	402fac <wcrtomb@plt+0x26c>
  402f2c:	cmp	w0, #0x69
  402f30:	b.eq	4031a8 <wcrtomb@plt+0x468>  // b.none
  402f34:	b.le	402f8c <wcrtomb@plt+0x24c>
  402f38:	cmp	w0, #0x6c
  402f3c:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f40:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  402f44:	mov	w2, #0xa                   	// #10
  402f48:	mov	x1, #0x0                   	// #0
  402f4c:	ldr	x0, [x0, #1296]
  402f50:	bl	402ad0 <strtol@plt>
  402f54:	sxtw	x0, w0
  402f58:	str	x0, [x25]
  402f5c:	b	402e48 <wcrtomb@plt+0x108>
  402f60:	cmp	w0, #0x7a
  402f64:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f68:	strb	wzr, [x25, #8]
  402f6c:	b	402e48 <wcrtomb@plt+0x108>
  402f70:	cmp	w0, #0x73
  402f74:	b.eq	403044 <wcrtomb@plt+0x304>  // b.none
  402f78:	b.le	402fd4 <wcrtomb@plt+0x294>
  402f7c:	cmp	w0, #0x75
  402f80:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402f84:	strb	w24, [x23, #46]
  402f88:	b	402e48 <wcrtomb@plt+0x108>
  402f8c:	cmp	w0, #0x66
  402f90:	b.ne	402fe8 <wcrtomb@plt+0x2a8>  // b.any
  402f94:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  402f98:	ldr	x0, [x23, #16]
  402f9c:	ldr	x1, [x1, #1296]
  402fa0:	bl	406e70 <wcrtomb@plt+0x4130>
  402fa4:	str	x0, [x23, #16]
  402fa8:	b	402e48 <wcrtomb@plt+0x108>
  402fac:	cmp	w0, #0x46
  402fb0:	b.eq	40304c <wcrtomb@plt+0x30c>  // b.none
  402fb4:	cmp	w0, #0x62
  402fb8:	b.ne	402ff8 <wcrtomb@plt+0x2b8>  // b.any
  402fbc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402fc0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  402fc4:	add	x1, x1, #0x840
  402fc8:	add	x0, x0, #0x848
  402fcc:	stp	x1, x0, [x25, #16]
  402fd0:	b	402e48 <wcrtomb@plt+0x108>
  402fd4:	cmp	w0, #0x70
  402fd8:	b.ne	40300c <wcrtomb@plt+0x2cc>  // b.any
  402fdc:	mov	w0, #0x2                   	// #2
  402fe0:	str	w0, [x26, #2288]
  402fe4:	b	402e48 <wcrtomb@plt+0x108>
  402fe8:	cmp	w0, #0x68
  402fec:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  402ff0:	mov	w0, #0x0                   	// #0
  402ff4:	bl	40c028 <wcrtomb@plt+0x92e8>
  402ff8:	cmp	w0, #0x45
  402ffc:	b.ne	403014 <wcrtomb@plt+0x2d4>  // b.any
  403000:	mov	w0, #0x1                   	// #1
  403004:	str	w0, [x23, #40]
  403008:	b	402e48 <wcrtomb@plt+0x108>
  40300c:	cmp	w0, #0x72
  403010:	b.eq	403000 <wcrtomb@plt+0x2c0>  // b.none
  403014:	mov	w0, #0x1                   	// #1
  403018:	bl	40c028 <wcrtomb@plt+0x92e8>
  40301c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  403020:	ldr	x27, [x0, #1296]
  403024:	mov	x0, x27
  403028:	bl	402690 <strlen@plt>
  40302c:	mov	x2, x0
  403030:	mov	x1, x27
  403034:	ldr	x0, [x23, #16]
  403038:	bl	406e10 <wcrtomb@plt+0x40d0>
  40303c:	str	x0, [x23, #16]
  403040:	b	402e48 <wcrtomb@plt+0x108>
  403044:	strb	w24, [x23, #25]
  403048:	b	402e48 <wcrtomb@plt+0x108>
  40304c:	strb	w24, [x23, #24]
  403050:	b	402e48 <wcrtomb@plt+0x108>
  403054:	strb	w24, [x23, #8]
  403058:	b	402e48 <wcrtomb@plt+0x108>
  40305c:	strb	w24, [x23, #44]
  403060:	b	402e48 <wcrtomb@plt+0x108>
  403064:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  403068:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  40306c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  403070:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  403074:	ldr	x26, [x2, #1960]
  403078:	add	x1, x1, #0x850
  40307c:	ldr	x27, [x0, #1160]
  403080:	mov	w2, #0x5                   	// #5
  403084:	ldr	x25, [x19, #1312]
  403088:	mov	x0, #0x0                   	// #0
  40308c:	bl	402c20 <dcgettext@plt>
  403090:	mov	x20, x0
  403094:	mov	w2, #0x5                   	// #5
  403098:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40309c:	mov	x0, #0x0                   	// #0
  4030a0:	add	x1, x1, #0x860
  4030a4:	bl	402c20 <dcgettext@plt>
  4030a8:	mov	x21, x0
  4030ac:	mov	w2, #0x5                   	// #5
  4030b0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4030b4:	mov	x0, #0x0                   	// #0
  4030b8:	add	x1, x1, #0x870
  4030bc:	bl	402c20 <dcgettext@plt>
  4030c0:	mov	x22, x0
  4030c4:	mov	w2, #0x5                   	// #5
  4030c8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4030cc:	mov	x0, #0x0                   	// #0
  4030d0:	add	x1, x1, #0x880
  4030d4:	bl	402c20 <dcgettext@plt>
  4030d8:	mov	x23, x0
  4030dc:	mov	w2, #0x5                   	// #5
  4030e0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4030e4:	mov	x0, #0x0                   	// #0
  4030e8:	add	x1, x1, #0x890
  4030ec:	bl	402c20 <dcgettext@plt>
  4030f0:	mov	x24, x0
  4030f4:	mov	w2, #0x5                   	// #5
  4030f8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4030fc:	mov	x0, #0x0                   	// #0
  403100:	add	x1, x1, #0x8a0
  403104:	bl	402c20 <dcgettext@plt>
  403108:	stp	x24, x0, [sp]
  40310c:	mov	x1, x26
  403110:	str	xzr, [sp, #16]
  403114:	mov	x0, x25
  403118:	mov	x7, x23
  40311c:	mov	x6, x22
  403120:	mov	x5, x21
  403124:	mov	x4, x20
  403128:	mov	x3, x27
  40312c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  403130:	add	x2, x2, #0x8b0
  403134:	bl	4182b0 <wcrtomb@plt+0x15570>
  403138:	ldr	x0, [x19, #1312]
  40313c:	ldp	x1, x2, [x0, #40]
  403140:	cmp	x1, x2
  403144:	b.cs	403264 <wcrtomb@plt+0x524>  // b.hs, b.nlast
  403148:	add	x2, x1, #0x1
  40314c:	str	x2, [x0, #40]
  403150:	mov	w0, #0xa                   	// #10
  403154:	strb	w0, [x1]
  403158:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40315c:	add	x1, x1, #0x8b8
  403160:	mov	w2, #0x5                   	// #5
  403164:	mov	x0, #0x0                   	// #0
  403168:	bl	402c20 <dcgettext@plt>
  40316c:	bl	402a40 <puts@plt>
  403170:	ldr	x0, [x19, #1312]
  403174:	ldp	x1, x2, [x0, #40]
  403178:	cmp	x1, x2
  40317c:	b.cs	403258 <wcrtomb@plt+0x518>  // b.hs, b.nlast
  403180:	add	x2, x1, #0x1
  403184:	str	x2, [x0, #40]
  403188:	mov	w0, #0xa                   	// #10
  40318c:	strb	w0, [x1]
  403190:	mov	w0, #0x0                   	// #0
  403194:	bl	40bf80 <wcrtomb@plt+0x9240>
  403198:	mov	x0, #0x0                   	// #0
  40319c:	bl	40ca58 <wcrtomb@plt+0x9d18>
  4031a0:	mov	w0, #0x0                   	// #0
  4031a4:	bl	4026c0 <exit@plt>
  4031a8:	adrp	x28, 441000 <_obstack_memory_used@@Base+0x282f0>
  4031ac:	strb	w24, [x23, #25]
  4031b0:	ldr	x27, [x28, #1296]
  4031b4:	cbz	x27, 403244 <wcrtomb@plt+0x504>
  4031b8:	mov	x0, x27
  4031bc:	mov	w1, #0x2a                  	// #42
  4031c0:	bl	402b20 <strchr@plt>
  4031c4:	cbz	x0, 4031d8 <wcrtomb@plt+0x498>
  4031c8:	mov	x0, x27
  4031cc:	bl	4187a8 <wcrtomb@plt+0x15a68>
  4031d0:	str	x0, [x23, #32]
  4031d4:	b	402e48 <wcrtomb@plt+0x108>
  4031d8:	mov	x0, x27
  4031dc:	bl	402690 <strlen@plt>
  4031e0:	add	x0, x0, #0x2
  4031e4:	bl	418708 <wcrtomb@plt+0x159c8>
  4031e8:	ldr	x1, [x28, #1296]
  4031ec:	mov	w2, #0x2a                  	// #42
  4031f0:	str	x0, [x23, #32]
  4031f4:	strb	w2, [x0], #1
  4031f8:	bl	402b80 <strcpy@plt>
  4031fc:	b	402e48 <wcrtomb@plt+0x108>
  403200:	ldr	w0, [x22, #1304]
  403204:	cmp	w0, w20
  403208:	b.ge	403014 <wcrtomb@plt+0x2d4>  // b.tcont
  40320c:	ldr	x20, [x19, w0, sxtw #3]
  403210:	add	w0, w0, #0x1
  403214:	str	w0, [x22, #1304]
  403218:	mov	x0, x20
  40321c:	bl	402690 <strlen@plt>
  403220:	mov	x1, x20
  403224:	mov	x2, x0
  403228:	mov	x0, #0x0                   	// #0
  40322c:	bl	406e10 <wcrtomb@plt+0x40d0>
  403230:	str	x0, [x21, #16]
  403234:	b	402ec8 <wcrtomb@plt+0x188>
  403238:	ldr	x0, [x21, #16]
  40323c:	bl	408358 <wcrtomb@plt+0x5618>
  403240:	b	402ed8 <wcrtomb@plt+0x198>
  403244:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  403248:	add	x0, x0, #0x838
  40324c:	bl	4187a8 <wcrtomb@plt+0x15a68>
  403250:	str	x0, [x23, #32]
  403254:	b	402e48 <wcrtomb@plt+0x108>
  403258:	mov	w1, #0xa                   	// #10
  40325c:	bl	402a20 <__overflow@plt>
  403260:	b	403190 <wcrtomb@plt+0x450>
  403264:	mov	w1, #0xa                   	// #10
  403268:	bl	402a20 <__overflow@plt>
  40326c:	b	403158 <wcrtomb@plt+0x418>
  403270:	mov	x29, #0x0                   	// #0
  403274:	mov	x30, #0x0                   	// #0
  403278:	mov	x5, x0
  40327c:	ldr	x1, [sp]
  403280:	add	x2, sp, #0x8
  403284:	mov	x6, sp
  403288:	movz	x0, #0x0, lsl #48
  40328c:	movk	x0, #0x0, lsl #32
  403290:	movk	x0, #0x40, lsl #16
  403294:	movk	x0, #0x2d50
  403298:	movz	x3, #0x0, lsl #48
  40329c:	movk	x3, #0x0, lsl #32
  4032a0:	movk	x3, #0x42, lsl #16
  4032a4:	movk	x3, #0x9410
  4032a8:	movz	x4, #0x0, lsl #48
  4032ac:	movk	x4, #0x0, lsl #32
  4032b0:	movk	x4, #0x42, lsl #16
  4032b4:	movk	x4, #0x9490
  4032b8:	bl	402890 <__libc_start_main@plt>
  4032bc:	bl	4029e0 <abort@plt>
  4032c0:	adrp	x0, 440000 <_obstack_memory_used@@Base+0x272f0>
  4032c4:	ldr	x0, [x0, #4064]
  4032c8:	cbz	x0, 4032d0 <wcrtomb@plt+0x590>
  4032cc:	b	4029c0 <__gmon_start__@plt>
  4032d0:	ret
  4032d4:	nop
  4032d8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4032dc:	add	x0, x0, #0x4f8
  4032e0:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  4032e4:	add	x1, x1, #0x4f8
  4032e8:	cmp	x1, x0
  4032ec:	b.eq	403304 <wcrtomb@plt+0x5c4>  // b.none
  4032f0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4032f4:	ldr	x1, [x1, #1224]
  4032f8:	cbz	x1, 403304 <wcrtomb@plt+0x5c4>
  4032fc:	mov	x16, x1
  403300:	br	x16
  403304:	ret
  403308:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40330c:	add	x0, x0, #0x4f8
  403310:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403314:	add	x1, x1, #0x4f8
  403318:	sub	x1, x1, x0
  40331c:	lsr	x2, x1, #63
  403320:	add	x1, x2, x1, asr #3
  403324:	cmp	xzr, x1, asr #1
  403328:	asr	x1, x1, #1
  40332c:	b.eq	403344 <wcrtomb@plt+0x604>  // b.none
  403330:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  403334:	ldr	x2, [x2, #1232]
  403338:	cbz	x2, 403344 <wcrtomb@plt+0x604>
  40333c:	mov	x16, x2
  403340:	br	x16
  403344:	ret
  403348:	stp	x29, x30, [sp, #-32]!
  40334c:	mov	x29, sp
  403350:	str	x19, [sp, #16]
  403354:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  403358:	ldrb	w0, [x19, #1336]
  40335c:	cbnz	w0, 40336c <wcrtomb@plt+0x62c>
  403360:	bl	4032d8 <wcrtomb@plt+0x598>
  403364:	mov	w0, #0x1                   	// #1
  403368:	strb	w0, [x19, #1336]
  40336c:	ldr	x19, [sp, #16]
  403370:	ldp	x29, x30, [sp], #32
  403374:	ret
  403378:	b	403308 <wcrtomb@plt+0x5c8>
  40337c:	nop
  403380:	stp	x29, x30, [sp, #-32]!
  403384:	mov	x29, sp
  403388:	stp	x19, x20, [sp, #16]
  40338c:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  403390:	bl	402ab0 <__ctype_b_loc@plt>
  403394:	add	x19, x19, #0x540
  403398:	mov	x20, x0
  40339c:	b	4033d0 <wcrtomb@plt+0x690>
  4033a0:	ldr	x2, [x19, #16]
  4033a4:	cmp	x1, x2
  4033a8:	b.cs	403438 <wcrtomb@plt+0x6f8>  // b.hs, b.nlast
  4033ac:	ldrb	w0, [x1]
  4033b0:	add	x2, x1, #0x1
  4033b4:	str	x2, [x19, #8]
  4033b8:	cmp	w0, #0xa
  4033bc:	sbfiz	x2, x0, #1, #32
  4033c0:	b.eq	40340c <wcrtomb@plt+0x6cc>  // b.none
  4033c4:	ldr	x1, [x20]
  4033c8:	ldrh	w1, [x1, x2]
  4033cc:	tbz	w1, #0, 403424 <wcrtomb@plt+0x6e4>
  4033d0:	ldr	x1, [x19, #8]
  4033d4:	cbnz	x1, 4033a0 <wcrtomb@plt+0x660>
  4033d8:	ldr	x0, [x19, #24]
  4033dc:	cbz	x0, 403438 <wcrtomb@plt+0x6f8>
  4033e0:	ldr	w1, [x0]
  4033e4:	tbnz	w1, #4, 403438 <wcrtomb@plt+0x6f8>
  4033e8:	ldp	x1, x2, [x0, #8]
  4033ec:	cmp	x1, x2
  4033f0:	b.cs	403430 <wcrtomb@plt+0x6f0>  // b.hs, b.nlast
  4033f4:	add	x2, x1, #0x1
  4033f8:	str	x2, [x0, #8]
  4033fc:	ldrb	w0, [x1]
  403400:	cmp	w0, #0xa
  403404:	sbfiz	x2, x0, #1, #32
  403408:	b.ne	4033c4 <wcrtomb@plt+0x684>  // b.any
  40340c:	ldr	x1, [x19, #40]
  403410:	add	x1, x1, #0x1
  403414:	str	x1, [x19, #40]
  403418:	ldr	x1, [x20]
  40341c:	ldrh	w1, [x1, x2]
  403420:	tbnz	w1, #0, 4033d0 <wcrtomb@plt+0x690>
  403424:	ldp	x19, x20, [sp, #16]
  403428:	ldp	x29, x30, [sp], #32
  40342c:	ret
  403430:	bl	402d00 <__uflow@plt>
  403434:	b	4033b8 <wcrtomb@plt+0x678>
  403438:	mov	x2, #0xfffffffffffffffe    	// #-2
  40343c:	mov	w0, #0xffffffff            	// #-1
  403440:	b	4033c4 <wcrtomb@plt+0x684>
  403444:	nop
  403448:	stp	x29, x30, [sp, #-48]!
  40344c:	mov	x29, sp
  403450:	stp	x19, x20, [sp, #16]
  403454:	sxtw	x20, w0
  403458:	stp	x21, x22, [sp, #32]
  40345c:	bl	402ab0 <__ctype_b_loc@plt>
  403460:	mov	x22, x0
  403464:	ubfiz	x0, x20, #1, #8
  403468:	ldr	x3, [x22]
  40346c:	ldrh	w0, [x3, x0]
  403470:	tbz	w0, #11, 4035b4 <wcrtomb@plt+0x874>
  403474:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  403478:	mov	x19, #0x0                   	// #0
  40347c:	add	x21, x0, #0x540
  403480:	b	4034b0 <wcrtomb@plt+0x770>
  403484:	ldr	x2, [x21, #16]
  403488:	cmp	x1, x2
  40348c:	b.cs	4035ac <wcrtomb@plt+0x86c>  // b.hs, b.nlast
  403490:	ldrb	w20, [x1]
  403494:	add	x2, x1, #0x1
  403498:	str	x2, [x21, #8]
  40349c:	cmp	w20, #0xa
  4034a0:	b.eq	4034f4 <wcrtomb@plt+0x7b4>  // b.none
  4034a4:	ubfiz	x1, x20, #1, #8
  4034a8:	ldrh	w1, [x3, x1]
  4034ac:	tbz	w1, #11, 403510 <wcrtomb@plt+0x7d0>
  4034b0:	ldr	x1, [x21, #8]
  4034b4:	add	x19, x19, x19, lsl #2
  4034b8:	add	x20, x20, x19, lsl #1
  4034bc:	sub	x19, x20, #0x30
  4034c0:	cbnz	x1, 403484 <wcrtomb@plt+0x744>
  4034c4:	ldr	x0, [x21, #24]
  4034c8:	cbz	x0, 4035ac <wcrtomb@plt+0x86c>
  4034cc:	ldr	w1, [x0]
  4034d0:	tbnz	w1, #4, 4035ac <wcrtomb@plt+0x86c>
  4034d4:	ldp	x1, x2, [x0, #8]
  4034d8:	cmp	x1, x2
  4034dc:	b.cs	40359c <wcrtomb@plt+0x85c>  // b.hs, b.nlast
  4034e0:	add	x2, x1, #0x1
  4034e4:	str	x2, [x0, #8]
  4034e8:	ldrb	w20, [x1]
  4034ec:	cmp	w20, #0xa
  4034f0:	b.ne	4034a4 <wcrtomb@plt+0x764>  // b.any
  4034f4:	ldr	x1, [x21, #40]
  4034f8:	add	x1, x1, #0x1
  4034fc:	str	x1, [x21, #40]
  403500:	ubfiz	x1, x20, #1, #8
  403504:	ldrh	w1, [x3, x1]
  403508:	tbnz	w1, #11, 4034b0 <wcrtomb@plt+0x770>
  40350c:	nop
  403510:	cmn	w20, #0x1
  403514:	b.eq	403550 <wcrtomb@plt+0x810>  // b.none
  403518:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40351c:	cmp	w20, #0xa
  403520:	add	x21, x0, #0x540
  403524:	b.eq	403564 <wcrtomb@plt+0x824>  // b.none
  403528:	ldr	x1, [x21, #8]
  40352c:	cbz	x1, 40357c <wcrtomb@plt+0x83c>
  403530:	ldr	x0, [x0, #1344]
  403534:	cmp	x1, x0
  403538:	b.ls	4035bc <wcrtomb@plt+0x87c>  // b.plast
  40353c:	ldurb	w0, [x1, #-1]
  403540:	sub	x2, x1, #0x1
  403544:	str	x2, [x21, #8]
  403548:	cmp	w0, w20
  40354c:	b.ne	4035bc <wcrtomb@plt+0x87c>  // b.any
  403550:	mov	x0, x19
  403554:	ldp	x19, x20, [sp, #16]
  403558:	ldp	x21, x22, [sp, #32]
  40355c:	ldp	x29, x30, [sp], #48
  403560:	ret
  403564:	ldr	x1, [x21, #40]
  403568:	cbz	x1, 403528 <wcrtomb@plt+0x7e8>
  40356c:	sub	x1, x1, #0x1
  403570:	str	x1, [x21, #40]
  403574:	ldr	x1, [x21, #8]
  403578:	cbnz	x1, 403530 <wcrtomb@plt+0x7f0>
  40357c:	ldr	x1, [x21, #24]
  403580:	mov	w0, w20
  403584:	bl	402af0 <ungetc@plt>
  403588:	mov	x0, x19
  40358c:	ldp	x19, x20, [sp, #16]
  403590:	ldp	x21, x22, [sp, #32]
  403594:	ldp	x29, x30, [sp], #48
  403598:	ret
  40359c:	bl	402d00 <__uflow@plt>
  4035a0:	sxtw	x20, w0
  4035a4:	ldr	x3, [x22]
  4035a8:	b	40349c <wcrtomb@plt+0x75c>
  4035ac:	mov	x20, #0xffffffffffffffff    	// #-1
  4035b0:	b	4034a4 <wcrtomb@plt+0x764>
  4035b4:	mov	x19, #0x0                   	// #0
  4035b8:	b	403510 <wcrtomb@plt+0x7d0>
  4035bc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4035c0:	mov	w1, w20
  4035c4:	add	x0, x0, #0x4d8
  4035c8:	bl	40c380 <wcrtomb@plt+0x9640>
  4035cc:	nop
  4035d0:	stp	x29, x30, [sp, #-64]!
  4035d4:	mov	x29, sp
  4035d8:	stp	x19, x20, [sp, #16]
  4035dc:	stp	x21, x22, [sp, #32]
  4035e0:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4035e4:	add	x19, x22, #0x540
  4035e8:	str	x23, [sp, #48]
  4035ec:	bl	40d000 <wcrtomb@plt+0xa2c0>
  4035f0:	mov	x21, x0
  4035f4:	bl	402ab0 <__ctype_b_loc@plt>
  4035f8:	mov	x20, x0
  4035fc:	b	403630 <wcrtomb@plt+0x8f0>
  403600:	ldr	x0, [x19, #16]
  403604:	cmp	x1, x0
  403608:	b.cs	4037b8 <wcrtomb@plt+0xa78>  // b.hs, b.nlast
  40360c:	ldrb	w0, [x1]
  403610:	add	x2, x1, #0x1
  403614:	str	x2, [x19, #8]
  403618:	cmp	w0, #0xa
  40361c:	sbfiz	x2, x0, #1, #32
  403620:	b.eq	40366c <wcrtomb@plt+0x92c>  // b.none
  403624:	ldr	x1, [x20]
  403628:	ldrh	w1, [x1, x2]
  40362c:	tbz	w1, #0, 403684 <wcrtomb@plt+0x944>
  403630:	ldr	x1, [x19, #8]
  403634:	cbnz	x1, 403600 <wcrtomb@plt+0x8c0>
  403638:	ldr	x0, [x19, #24]
  40363c:	cbz	x0, 4037b8 <wcrtomb@plt+0xa78>
  403640:	ldr	w1, [x0]
  403644:	tbnz	w1, #4, 4037b8 <wcrtomb@plt+0xa78>
  403648:	ldp	x1, x2, [x0, #8]
  40364c:	cmp	x1, x2
  403650:	b.cs	403798 <wcrtomb@plt+0xa58>  // b.hs, b.nlast
  403654:	add	x2, x1, #0x1
  403658:	str	x2, [x0, #8]
  40365c:	ldrb	w0, [x1]
  403660:	cmp	w0, #0xa
  403664:	sbfiz	x2, x0, #1, #32
  403668:	b.ne	403624 <wcrtomb@plt+0x8e4>  // b.any
  40366c:	ldr	x1, [x19, #40]
  403670:	add	x1, x1, #0x1
  403674:	str	x1, [x19, #40]
  403678:	ldr	x1, [x20]
  40367c:	ldrh	w1, [x1, x2]
  403680:	tbnz	w1, #0, 403630 <wcrtomb@plt+0x8f0>
  403684:	cmp	w0, #0xa
  403688:	mov	w23, #0x7d                  	// #125
  40368c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403690:	b.ne	4036c4 <wcrtomb@plt+0x984>  // b.any
  403694:	b	4037e4 <wcrtomb@plt+0xaa4>
  403698:	ldr	x0, [x19, #16]
  40369c:	cmp	x1, x0
  4036a0:	b.cs	40375c <wcrtomb@plt+0xa1c>  // b.hs, b.nlast
  4036a4:	ldrb	w0, [x1]
  4036a8:	add	x2, x1, #0x1
  4036ac:	str	x2, [x19, #8]
  4036b0:	cmp	w0, #0xa
  4036b4:	b.eq	40371c <wcrtomb@plt+0x9dc>  // b.none
  4036b8:	ldr	x1, [x20]
  4036bc:	ldrh	w1, [x1, w0, sxtw #1]
  4036c0:	tbnz	w1, #0, 403734 <wcrtomb@plt+0x9f4>
  4036c4:	cmp	w0, #0x3b
  4036c8:	ccmp	w0, w23, #0x4, ne  // ne = any
  4036cc:	b.eq	4037f0 <wcrtomb@plt+0xab0>  // b.none
  4036d0:	cmp	w0, #0x23
  4036d4:	b.eq	403734 <wcrtomb@plt+0x9f4>  // b.none
  4036d8:	mov	w1, w0
  4036dc:	mov	x0, x21
  4036e0:	bl	40d118 <wcrtomb@plt+0xa3d8>
  4036e4:	ldr	x1, [x19, #8]
  4036e8:	cbnz	x1, 403698 <wcrtomb@plt+0x958>
  4036ec:	ldr	x0, [x19, #24]
  4036f0:	cbz	x0, 40375c <wcrtomb@plt+0xa1c>
  4036f4:	ldr	w1, [x0]
  4036f8:	tbnz	w1, #4, 40375c <wcrtomb@plt+0xa1c>
  4036fc:	ldp	x1, x2, [x0, #8]
  403700:	cmp	x1, x2
  403704:	b.cs	4037a0 <wcrtomb@plt+0xa60>  // b.hs, b.nlast
  403708:	add	x2, x1, #0x1
  40370c:	str	x2, [x0, #8]
  403710:	ldrb	w0, [x1]
  403714:	cmp	w0, #0xa
  403718:	b.ne	4036b8 <wcrtomb@plt+0x978>  // b.any
  40371c:	ldr	x0, [x19, #40]
  403720:	add	x0, x0, #0x1
  403724:	str	x0, [x19, #40]
  403728:	ldr	x1, [x19, #40]
  40372c:	mov	w0, #0xa                   	// #10
  403730:	cbnz	x1, 4037c4 <wcrtomb@plt+0xa84>
  403734:	ldr	x1, [x19, #8]
  403738:	cbz	x1, 4037d8 <wcrtomb@plt+0xa98>
  40373c:	ldr	x2, [x22, #1344]
  403740:	cmp	x1, x2
  403744:	b.ls	4037fc <wcrtomb@plt+0xabc>  // b.plast
  403748:	sub	x2, x1, #0x1
  40374c:	ldurb	w1, [x1, #-1]
  403750:	str	x2, [x19, #8]
  403754:	cmp	w1, w0
  403758:	b.ne	4037fc <wcrtomb@plt+0xabc>  // b.any
  40375c:	mov	w1, #0x0                   	// #0
  403760:	mov	x0, x21
  403764:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403768:	mov	x0, x21
  40376c:	bl	40d048 <wcrtomb@plt+0xa308>
  403770:	bl	4187a8 <wcrtomb@plt+0x15a68>
  403774:	mov	x19, x0
  403778:	mov	x0, x21
  40377c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  403780:	mov	x0, x19
  403784:	ldp	x19, x20, [sp, #16]
  403788:	ldp	x21, x22, [sp, #32]
  40378c:	ldr	x23, [sp, #48]
  403790:	ldp	x29, x30, [sp], #64
  403794:	ret
  403798:	bl	402d00 <__uflow@plt>
  40379c:	b	403618 <wcrtomb@plt+0x8d8>
  4037a0:	bl	402d00 <__uflow@plt>
  4037a4:	cmp	w0, #0xa
  4037a8:	b.eq	40371c <wcrtomb@plt+0x9dc>  // b.none
  4037ac:	cmn	w0, #0x1
  4037b0:	b.ne	4036b8 <wcrtomb@plt+0x978>  // b.any
  4037b4:	b	40375c <wcrtomb@plt+0xa1c>
  4037b8:	mov	x2, #0xfffffffffffffffe    	// #-2
  4037bc:	mov	w0, #0xffffffff            	// #-1
  4037c0:	b	403624 <wcrtomb@plt+0x8e4>
  4037c4:	sub	x1, x1, #0x1
  4037c8:	str	x1, [x19, #40]
  4037cc:	ldr	x1, [x19, #8]
  4037d0:	cbnz	x1, 40373c <wcrtomb@plt+0x9fc>
  4037d4:	nop
  4037d8:	ldr	x1, [x19, #24]
  4037dc:	bl	402af0 <ungetc@plt>
  4037e0:	b	40375c <wcrtomb@plt+0xa1c>
  4037e4:	cmn	w0, #0x1
  4037e8:	b.eq	40375c <wcrtomb@plt+0xa1c>  // b.none
  4037ec:	nop
  4037f0:	cmp	w0, #0xa
  4037f4:	b.ne	403734 <wcrtomb@plt+0x9f4>  // b.any
  4037f8:	b	403728 <wcrtomb@plt+0x9e8>
  4037fc:	mov	w1, w0
  403800:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  403804:	add	x0, x0, #0x4d8
  403808:	bl	40c380 <wcrtomb@plt+0x9640>
  40380c:	nop
  403810:	stp	x29, x30, [sp, #-96]!
  403814:	mov	x29, sp
  403818:	stp	x19, x20, [sp, #16]
  40381c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  403820:	add	x20, x20, #0x540
  403824:	stp	x21, x22, [sp, #32]
  403828:	mov	x22, x0
  40382c:	ldr	x0, [x20, #8]
  403830:	stp	x23, x24, [sp, #48]
  403834:	mov	x24, x1
  403838:	stp	x25, x26, [sp, #64]
  40383c:	stp	x27, x28, [sp, #80]
  403840:	cbz	x0, 403a2c <wcrtomb@plt+0xcec>
  403844:	ldr	x1, [x20, #16]
  403848:	cmp	x0, x1
  40384c:	b.cs	403b78 <wcrtomb@plt+0xe38>  // b.hs, b.nlast
  403850:	ldrb	w19, [x0]
  403854:	add	x1, x0, #0x1
  403858:	str	x1, [x20, #8]
  40385c:	cmp	w19, #0xa
  403860:	b.eq	403a60 <wcrtomb@plt+0xd20>  // b.none
  403864:	cmp	w19, #0x5e
  403868:	b.eq	403aa8 <wcrtomb@plt+0xd68>  // b.none
  40386c:	cmp	w19, #0x5d
  403870:	b.eq	403a70 <wcrtomb@plt+0xd30>  // b.none
  403874:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  403878:	add	x23, x25, #0x8ec
  40387c:	mov	w21, #0x0                   	// #0
  403880:	mov	w26, #0x1                   	// #1
  403884:	mov	w27, #0x3                   	// #3
  403888:	ldr	w0, [x23]
  40388c:	cmp	w0, #0x1
  403890:	b.eq	403928 <wcrtomb@plt+0xbe8>  // b.none
  403894:	mov	x1, x24
  403898:	mov	w0, w19
  40389c:	bl	40b698 <wcrtomb@plt+0x8958>
  4038a0:	cmp	w19, #0x5b
  4038a4:	b.eq	403a24 <wcrtomb@plt+0xce4>  // b.none
  4038a8:	b.gt	4039fc <wcrtomb@plt+0xcbc>
  4038ac:	cmp	w19, #0x2e
  4038b0:	b.eq	4038c8 <wcrtomb@plt+0xb88>  // b.none
  4038b4:	b.le	4039ac <wcrtomb@plt+0xc6c>
  4038b8:	cmp	w19, #0x3a
  4038bc:	b.eq	4038c8 <wcrtomb@plt+0xb88>  // b.none
  4038c0:	cmp	w19, #0x3d
  4038c4:	b.ne	403a0c <wcrtomb@plt+0xccc>  // b.any
  4038c8:	cbz	w0, 403950 <wcrtomb@plt+0xc10>
  4038cc:	mov	w1, w19
  4038d0:	mov	x0, x22
  4038d4:	bl	40d118 <wcrtomb@plt+0xa3d8>
  4038d8:	ldr	x0, [x20, #8]
  4038dc:	cbnz	x0, 40397c <wcrtomb@plt+0xc3c>
  4038e0:	ldr	x0, [x20, #24]
  4038e4:	cbz	x0, 403b50 <wcrtomb@plt+0xe10>
  4038e8:	ldr	w1, [x0]
  4038ec:	tbnz	w1, #4, 403b50 <wcrtomb@plt+0xe10>
  4038f0:	ldp	x1, x2, [x0, #8]
  4038f4:	cmp	x1, x2
  4038f8:	b.cs	403b44 <wcrtomb@plt+0xe04>  // b.hs, b.nlast
  4038fc:	add	x2, x1, #0x1
  403900:	str	x2, [x0, #8]
  403904:	ldrb	w19, [x1]
  403908:	cmp	w19, #0xa
  40390c:	b.ne	403888 <wcrtomb@plt+0xb48>  // b.any
  403910:	ldr	x0, [x20, #40]
  403914:	add	x0, x0, #0x1
  403918:	str	x0, [x20, #40]
  40391c:	ldr	w0, [x23]
  403920:	cmp	w0, #0x1
  403924:	b.ne	403894 <wcrtomb@plt+0xb54>  // b.any
  403928:	cmp	w19, #0x5b
  40392c:	b.eq	403a14 <wcrtomb@plt+0xcd4>  // b.none
  403930:	b.gt	4039dc <wcrtomb@plt+0xc9c>
  403934:	cmp	w19, #0x2e
  403938:	b.eq	403950 <wcrtomb@plt+0xc10>  // b.none
  40393c:	b.le	4039ac <wcrtomb@plt+0xc6c>
  403940:	cmp	w19, #0x3a
  403944:	b.eq	403950 <wcrtomb@plt+0xc10>  // b.none
  403948:	cmp	w19, #0x3d
  40394c:	b.ne	403a0c <wcrtomb@plt+0xccc>  // b.any
  403950:	cmp	w21, #0x1
  403954:	b.eq	403b38 <wcrtomb@plt+0xdf8>  // b.none
  403958:	cmp	w21, #0x2
  40395c:	and	w21, w21, #0xfffffffe
  403960:	ccmp	w19, w28, #0x0, eq  // eq = none
  403964:	csel	w21, w21, w27, ne  // ne = any
  403968:	mov	w1, w19
  40396c:	mov	x0, x22
  403970:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403974:	ldr	x0, [x20, #8]
  403978:	cbz	x0, 4038e0 <wcrtomb@plt+0xba0>
  40397c:	ldr	x1, [x20, #16]
  403980:	cmp	x0, x1
  403984:	b.cs	403b50 <wcrtomb@plt+0xe10>  // b.hs, b.nlast
  403988:	ldrb	w19, [x0]
  40398c:	add	x1, x0, #0x1
  403990:	str	x1, [x20, #8]
  403994:	cmp	w19, #0xa
  403998:	b.ne	403888 <wcrtomb@plt+0xb48>  // b.any
  40399c:	ldr	x0, [x20, #40]
  4039a0:	add	x0, x0, #0x1
  4039a4:	str	x0, [x20, #40]
  4039a8:	b	40391c <wcrtomb@plt+0xbdc>
  4039ac:	cmn	w19, #0x1
  4039b0:	b.eq	4039bc <wcrtomb@plt+0xc7c>  // b.none
  4039b4:	cmp	w19, #0xa
  4039b8:	b.ne	403a0c <wcrtomb@plt+0xccc>  // b.any
  4039bc:	mov	w0, w19
  4039c0:	ldp	x19, x20, [sp, #16]
  4039c4:	ldp	x21, x22, [sp, #32]
  4039c8:	ldp	x23, x24, [sp, #48]
  4039cc:	ldp	x25, x26, [sp, #64]
  4039d0:	ldp	x27, x28, [sp, #80]
  4039d4:	ldp	x29, x30, [sp], #96
  4039d8:	ret
  4039dc:	cmp	w19, #0x5d
  4039e0:	b.ne	403a0c <wcrtomb@plt+0xccc>  // b.any
  4039e4:	cmp	w21, #0x1
  4039e8:	b.le	403b70 <wcrtomb@plt+0xe30>
  4039ec:	cmp	w21, #0x3
  4039f0:	and	w21, w21, #0xfffffffe
  4039f4:	csel	w21, w21, wzr, ne  // ne = any
  4039f8:	b	403968 <wcrtomb@plt+0xc28>
  4039fc:	cmp	w19, #0x5d
  403a00:	b.ne	403a0c <wcrtomb@plt+0xccc>  // b.any
  403a04:	cbnz	w0, 403968 <wcrtomb@plt+0xc28>
  403a08:	b	4039e4 <wcrtomb@plt+0xca4>
  403a0c:	and	w21, w21, #0xfffffffe
  403a10:	b	403968 <wcrtomb@plt+0xc28>
  403a14:	mov	w0, w21
  403a18:	cmp	w0, #0x0
  403a1c:	csel	w21, w21, w26, ne  // ne = any
  403a20:	b	403968 <wcrtomb@plt+0xc28>
  403a24:	orr	w0, w21, w0
  403a28:	b	403a18 <wcrtomb@plt+0xcd8>
  403a2c:	ldr	x0, [x20, #24]
  403a30:	cbz	x0, 403b78 <wcrtomb@plt+0xe38>
  403a34:	ldr	w1, [x0]
  403a38:	tbnz	w1, #4, 403b78 <wcrtomb@plt+0xe38>
  403a3c:	ldp	x1, x2, [x0, #8]
  403a40:	cmp	x1, x2
  403a44:	b.cs	403b80 <wcrtomb@plt+0xe40>  // b.hs, b.nlast
  403a48:	add	x2, x1, #0x1
  403a4c:	str	x2, [x0, #8]
  403a50:	ldrb	w19, [x1]
  403a54:	cmp	w19, #0xa
  403a58:	b.ne	403864 <wcrtomb@plt+0xb24>  // b.any
  403a5c:	nop
  403a60:	ldr	x0, [x20, #40]
  403a64:	add	x0, x0, #0x1
  403a68:	str	x0, [x20, #40]
  403a6c:	b	403874 <wcrtomb@plt+0xb34>
  403a70:	mov	w1, w19
  403a74:	mov	x0, x22
  403a78:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403a7c:	ldr	x0, [x20, #8]
  403a80:	cbz	x0, 403ae0 <wcrtomb@plt+0xda0>
  403a84:	ldr	x1, [x20, #16]
  403a88:	cmp	x0, x1
  403a8c:	b.cs	403b78 <wcrtomb@plt+0xe38>  // b.hs, b.nlast
  403a90:	ldrb	w19, [x0]
  403a94:	add	x1, x0, #0x1
  403a98:	str	x1, [x20, #8]
  403a9c:	cmp	w19, #0xa
  403aa0:	b.ne	403874 <wcrtomb@plt+0xb34>  // b.any
  403aa4:	b	403a60 <wcrtomb@plt+0xd20>
  403aa8:	mov	w1, w19
  403aac:	mov	x0, x22
  403ab0:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403ab4:	ldr	x0, [x20, #8]
  403ab8:	cbz	x0, 403b0c <wcrtomb@plt+0xdcc>
  403abc:	ldr	x1, [x20, #16]
  403ac0:	cmp	x0, x1
  403ac4:	b.cs	403b78 <wcrtomb@plt+0xe38>  // b.hs, b.nlast
  403ac8:	ldrb	w19, [x0]
  403acc:	add	x1, x0, #0x1
  403ad0:	str	x1, [x20, #8]
  403ad4:	cmp	w19, #0xa
  403ad8:	b.ne	40386c <wcrtomb@plt+0xb2c>  // b.any
  403adc:	b	403a60 <wcrtomb@plt+0xd20>
  403ae0:	ldr	x0, [x20, #24]
  403ae4:	cbz	x0, 403b78 <wcrtomb@plt+0xe38>
  403ae8:	ldr	w1, [x0]
  403aec:	tbnz	w1, #4, 403b78 <wcrtomb@plt+0xe38>
  403af0:	ldp	x1, x2, [x0, #8]
  403af4:	cmp	x1, x2
  403af8:	b.cs	403b98 <wcrtomb@plt+0xe58>  // b.hs, b.nlast
  403afc:	add	x2, x1, #0x1
  403b00:	str	x2, [x0, #8]
  403b04:	ldrb	w19, [x1]
  403b08:	b	403a9c <wcrtomb@plt+0xd5c>
  403b0c:	ldr	x0, [x20, #24]
  403b10:	cbz	x0, 403b78 <wcrtomb@plt+0xe38>
  403b14:	ldr	w1, [x0]
  403b18:	tbnz	w1, #4, 403b78 <wcrtomb@plt+0xe38>
  403b1c:	ldp	x1, x2, [x0, #8]
  403b20:	cmp	x1, x2
  403b24:	b.cs	403b8c <wcrtomb@plt+0xe4c>  // b.hs, b.nlast
  403b28:	add	x2, x1, #0x1
  403b2c:	str	x2, [x0, #8]
  403b30:	ldrb	w19, [x1]
  403b34:	b	403ad4 <wcrtomb@plt+0xd94>
  403b38:	mov	w28, w19
  403b3c:	mov	w21, #0x2                   	// #2
  403b40:	b	403968 <wcrtomb@plt+0xc28>
  403b44:	bl	402d00 <__uflow@plt>
  403b48:	mov	w19, w0
  403b4c:	b	403994 <wcrtomb@plt+0xc54>
  403b50:	ldr	w0, [x25, #2284]
  403b54:	mov	w19, #0xffffffff            	// #-1
  403b58:	cmp	w0, #0x1
  403b5c:	b.eq	4039bc <wcrtomb@plt+0xc7c>  // b.none
  403b60:	mov	x1, x24
  403b64:	mov	w0, w19
  403b68:	bl	40b698 <wcrtomb@plt+0x8958>
  403b6c:	b	4039bc <wcrtomb@plt+0xc7c>
  403b70:	mov	w19, #0x5d                  	// #93
  403b74:	b	4039bc <wcrtomb@plt+0xc7c>
  403b78:	mov	w19, #0xffffffff            	// #-1
  403b7c:	b	403874 <wcrtomb@plt+0xb34>
  403b80:	bl	402d00 <__uflow@plt>
  403b84:	mov	w19, w0
  403b88:	b	40385c <wcrtomb@plt+0xb1c>
  403b8c:	bl	402d00 <__uflow@plt>
  403b90:	mov	w19, w0
  403b94:	b	403ad4 <wcrtomb@plt+0xd94>
  403b98:	bl	402d00 <__uflow@plt>
  403b9c:	mov	w19, w0
  403ba0:	b	403a9c <wcrtomb@plt+0xd5c>
  403ba4:	nop
  403ba8:	stp	x29, x30, [sp, #-64]!
  403bac:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403bb0:	mov	x29, sp
  403bb4:	stp	x19, x20, [sp, #16]
  403bb8:	mov	x20, x0
  403bbc:	stp	x21, x22, [sp, #32]
  403bc0:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  403bc4:	add	x19, x21, #0x540
  403bc8:	str	x23, [sp, #48]
  403bcc:	add	x23, x19, #0x20
  403bd0:	ldr	x22, [x1, #1288]
  403bd4:	ldr	x0, [x19, #32]
  403bd8:	cbz	x0, 403c1c <wcrtomb@plt+0xedc>
  403bdc:	mov	w2, #0x5                   	// #5
  403be0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  403be4:	mov	x0, #0x0                   	// #0
  403be8:	add	x1, x1, #0x508
  403bec:	bl	402c20 <dcgettext@plt>
  403bf0:	mov	x2, x0
  403bf4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403bf8:	mov	x6, x20
  403bfc:	ldr	x5, [x23, #8]
  403c00:	mov	x0, x22
  403c04:	ldr	x3, [x1, #1960]
  403c08:	mov	w1, #0x1                   	// #1
  403c0c:	ldr	x4, [x19, #32]
  403c10:	bl	402a90 <__fprintf_chk@plt>
  403c14:	mov	w0, #0x1                   	// #1
  403c18:	bl	4026c0 <exit@plt>
  403c1c:	mov	w2, #0x5                   	// #5
  403c20:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  403c24:	mov	x0, #0x0                   	// #0
  403c28:	add	x1, x1, #0x528
  403c2c:	bl	402c20 <dcgettext@plt>
  403c30:	mov	x2, x0
  403c34:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403c38:	mov	x6, x20
  403c3c:	ldr	x7, [x19, #8]
  403c40:	mov	x0, x22
  403c44:	ldr	x3, [x1, #1960]
  403c48:	mov	w1, #0x1                   	// #1
  403c4c:	ldr	x4, [x23, #16]
  403c50:	ldr	x5, [x21, #1344]
  403c54:	sub	x5, x7, x5
  403c58:	bl	402a90 <__fprintf_chk@plt>
  403c5c:	b	403c14 <wcrtomb@plt+0xed4>
  403c60:	stp	x29, x30, [sp, #-80]!
  403c64:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  403c68:	mov	x29, sp
  403c6c:	ldrb	w3, [x3, #1924]
  403c70:	stp	x19, x20, [sp, #16]
  403c74:	stp	x21, x22, [sp, #32]
  403c78:	stp	x23, x24, [sp, #48]
  403c7c:	stp	x25, x26, [sp, #64]
  403c80:	cbnz	w3, 403f30 <wcrtomb@plt+0x11f0>
  403c84:	mov	x23, x1
  403c88:	mov	w24, w2
  403c8c:	mov	x22, x0
  403c90:	bl	40d000 <wcrtomb@plt+0xa2c0>
  403c94:	mov	x21, x0
  403c98:	bl	403380 <wcrtomb@plt+0x640>
  403c9c:	cmp	w0, #0xa
  403ca0:	mov	w1, w0
  403ca4:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403ca8:	b.eq	403cf4 <wcrtomb@plt+0xfb4>  // b.none
  403cac:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  403cb0:	add	x20, x20, #0x540
  403cb4:	nop
  403cb8:	mov	x0, x21
  403cbc:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403cc0:	ldr	x3, [x20, #8]
  403cc4:	cbz	x3, 403d68 <wcrtomb@plt+0x1028>
  403cc8:	ldr	x0, [x20, #16]
  403ccc:	cmp	x3, x0
  403cd0:	b.cs	403cf4 <wcrtomb@plt+0xfb4>  // b.hs, b.nlast
  403cd4:	ldrb	w1, [x3]
  403cd8:	add	x0, x3, #0x1
  403cdc:	str	x0, [x20, #8]
  403ce0:	cmp	w1, #0xa
  403ce4:	b.ne	403cb8 <wcrtomb@plt+0xf78>  // b.any
  403ce8:	ldr	x0, [x20, #40]
  403cec:	add	x0, x0, #0x1
  403cf0:	str	x0, [x20, #40]
  403cf4:	mov	w1, #0x0                   	// #0
  403cf8:	mov	x0, x21
  403cfc:	bl	40d118 <wcrtomb@plt+0xa3d8>
  403d00:	mov	x0, x21
  403d04:	bl	40d048 <wcrtomb@plt+0xa308>
  403d08:	mov	x25, x0
  403d0c:	ldrb	w0, [x0]
  403d10:	cbz	w0, 403f4c <wcrtomb@plt+0x120c>
  403d14:	ldr	x19, [x22]
  403d18:	cbnz	x19, 403d28 <wcrtomb@plt+0xfe8>
  403d1c:	b	403d94 <wcrtomb@plt+0x1054>
  403d20:	ldr	x19, [x19, #24]
  403d24:	cbz	x19, 403d94 <wcrtomb@plt+0x1054>
  403d28:	ldr	x0, [x19]
  403d2c:	mov	x1, x25
  403d30:	bl	402aa0 <strcmp@plt>
  403d34:	cbnz	w0, 403d20 <wcrtomb@plt+0xfe0>
  403d38:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  403d3c:	ldr	w0, [x0, #2288]
  403d40:	cbz	w0, 403ed4 <wcrtomb@plt+0x1194>
  403d44:	mov	x0, x21
  403d48:	bl	40d1d8 <wcrtomb@plt+0xa498>
  403d4c:	mov	x0, x19
  403d50:	ldp	x19, x20, [sp, #16]
  403d54:	ldp	x21, x22, [sp, #32]
  403d58:	ldp	x23, x24, [sp, #48]
  403d5c:	ldp	x25, x26, [sp, #64]
  403d60:	ldp	x29, x30, [sp], #80
  403d64:	ret
  403d68:	ldr	x0, [x20, #24]
  403d6c:	cbz	x0, 403cf4 <wcrtomb@plt+0xfb4>
  403d70:	ldr	w1, [x0]
  403d74:	tbnz	w1, #4, 403cf4 <wcrtomb@plt+0xfb4>
  403d78:	ldp	x1, x2, [x0, #8]
  403d7c:	cmp	x1, x2
  403d80:	b.cs	403eb8 <wcrtomb@plt+0x1178>  // b.hs, b.nlast
  403d84:	add	x2, x1, #0x1
  403d88:	str	x2, [x0, #8]
  403d8c:	ldrb	w1, [x1]
  403d90:	b	403ce0 <wcrtomb@plt+0xfa0>
  403d94:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  403d98:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  403d9c:	add	x20, x20, #0x540
  403da0:	ldr	w0, [x0, #2288]
  403da4:	cbnz	w0, 403e38 <wcrtomb@plt+0x10f8>
  403da8:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  403dac:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  403db0:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  403db4:	add	x20, x20, #0x540
  403db8:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  403dbc:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403dc0:	ldr	x0, [x26, #928]
  403dc4:	mov	x19, #0x0                   	// #0
  403dc8:	ldr	x3, [x3, #1320]
  403dcc:	ldr	x2, [x2, #1312]
  403dd0:	stp	x3, x2, [x20, #144]
  403dd4:	ldr	x1, [x1, #1288]
  403dd8:	str	x1, [x20, #160]
  403ddc:	cbz	x0, 403e38 <wcrtomb@plt+0x10f8>
  403de0:	add	x26, x26, #0x3a0
  403de4:	b	403df0 <wcrtomb@plt+0x10b0>
  403de8:	ldr	x0, [x26, #40]!
  403dec:	cbz	x0, 403e30 <wcrtomb@plt+0x10f0>
  403df0:	mov	x1, x25
  403df4:	bl	402aa0 <strcmp@plt>
  403df8:	cbnz	w0, 403de8 <wcrtomb@plt+0x10a8>
  403dfc:	ldr	x1, [x26, #32]
  403e00:	mov	x0, x21
  403e04:	mov	x19, x26
  403e08:	ldr	x1, [x1]
  403e0c:	str	x1, [x26, #16]
  403e10:	bl	40d1d8 <wcrtomb@plt+0xa498>
  403e14:	mov	x0, x19
  403e18:	ldp	x19, x20, [sp, #16]
  403e1c:	ldp	x21, x22, [sp, #32]
  403e20:	ldp	x23, x24, [sp, #48]
  403e24:	ldp	x25, x26, [sp, #64]
  403e28:	ldp	x29, x30, [sp], #80
  403e2c:	ret
  403e30:	cbnz	x19, 403d44 <wcrtomb@plt+0x1004>
  403e34:	nop
  403e38:	ldp	x1, x4, [x20, #80]
  403e3c:	add	x19, x20, #0x38
  403e40:	sub	x0, x4, x1
  403e44:	cmp	x0, #0x1f
  403e48:	b.ls	403f0c <wcrtomb@plt+0x11cc>  // b.plast
  403e4c:	ldr	x19, [x20, #72]
  403e50:	add	x1, x1, #0x20
  403e54:	cmp	x1, x19
  403e58:	b.eq	403f20 <wcrtomb@plt+0x11e0>  // b.none
  403e5c:	ldr	x0, [x20, #104]
  403e60:	ldr	x2, [x20, #64]
  403e64:	add	x1, x1, x0
  403e68:	bic	x1, x1, x0
  403e6c:	str	x1, [x20, #80]
  403e70:	sub	x0, x1, x2
  403e74:	sub	x2, x4, x2
  403e78:	cmp	x0, x2
  403e7c:	b.ls	403e88 <wcrtomb@plt+0x1148>  // b.plast
  403e80:	mov	x1, x4
  403e84:	str	x4, [x20, #80]
  403e88:	mov	x0, x25
  403e8c:	str	x1, [x20, #72]
  403e90:	bl	4187a8 <wcrtomb@plt+0x15a68>
  403e94:	str	x0, [x19]
  403e98:	mov	x1, x23
  403e9c:	mov	w2, w24
  403ea0:	bl	40c518 <wcrtomb@plt+0x97d8>
  403ea4:	ldr	x1, [x22]
  403ea8:	strb	wzr, [x19, #8]
  403eac:	stp	x0, x1, [x19, #16]
  403eb0:	str	x19, [x22]
  403eb4:	b	403d44 <wcrtomb@plt+0x1004>
  403eb8:	bl	402d00 <__uflow@plt>
  403ebc:	mov	w1, w0
  403ec0:	cmp	w0, #0xa
  403ec4:	b.eq	403ce8 <wcrtomb@plt+0xfa8>  // b.none
  403ec8:	cmn	w0, #0x1
  403ecc:	b.ne	403cb8 <wcrtomb@plt+0xf78>  // b.any
  403ed0:	b	403cf4 <wcrtomb@plt+0xfb4>
  403ed4:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  403ed8:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  403edc:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  403ee0:	add	x20, x20, #0x540
  403ee4:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  403ee8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  403eec:	ldr	x0, [x26, #928]
  403ef0:	ldr	x3, [x3, #1320]
  403ef4:	ldr	x2, [x2, #1312]
  403ef8:	stp	x3, x2, [x20, #144]
  403efc:	ldr	x1, [x1, #1288]
  403f00:	str	x1, [x20, #160]
  403f04:	cbnz	x0, 403de0 <wcrtomb@plt+0x10a0>
  403f08:	b	403d44 <wcrtomb@plt+0x1004>
  403f0c:	mov	x1, #0x20                  	// #32
  403f10:	mov	x0, x19
  403f14:	bl	418ad8 <_obstack_newchunk@@Base>
  403f18:	ldp	x1, x4, [x20, #80]
  403f1c:	b	403e4c <wcrtomb@plt+0x110c>
  403f20:	ldrb	w2, [x20, #136]
  403f24:	orr	w2, w2, #0x2
  403f28:	strb	w2, [x20, #136]
  403f2c:	b	403e5c <wcrtomb@plt+0x111c>
  403f30:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  403f34:	add	x1, x1, #0x6c0
  403f38:	add	x1, x1, #0x334
  403f3c:	mov	w2, #0x5                   	// #5
  403f40:	mov	x0, #0x0                   	// #0
  403f44:	bl	402c20 <dcgettext@plt>
  403f48:	bl	403ba8 <wcrtomb@plt+0xe68>
  403f4c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  403f50:	add	x1, x1, #0x6c0
  403f54:	add	x1, x1, #0x35c
  403f58:	mov	w2, #0x5                   	// #5
  403f5c:	mov	x0, #0x0                   	// #0
  403f60:	bl	402c20 <dcgettext@plt>
  403f64:	bl	403ba8 <wcrtomb@plt+0xe68>
  403f68:	stp	x29, x30, [sp, #-96]!
  403f6c:	mov	x29, sp
  403f70:	stp	x21, x22, [sp, #32]
  403f74:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  403f78:	mov	w22, w0
  403f7c:	ldr	w2, [x21, #2284]
  403f80:	stp	x19, x20, [sp, #16]
  403f84:	cmp	w2, #0x1
  403f88:	stp	x23, x24, [sp, #48]
  403f8c:	mov	w23, w1
  403f90:	stp	x25, x26, [sp, #64]
  403f94:	str	xzr, [sp, #88]
  403f98:	b.eq	403fa8 <wcrtomb@plt+0x1268>  // b.none
  403f9c:	add	x1, sp, #0x58
  403fa0:	bl	40b698 <wcrtomb@plt+0x8958>
  403fa4:	cbnz	w0, 404214 <wcrtomb@plt+0x14d4>
  403fa8:	eor	w24, w23, #0x1
  403fac:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  403fb0:	add	x21, x21, #0x8ec
  403fb4:	and	w24, w24, #0x1
  403fb8:	add	x26, x25, #0x540
  403fbc:	str	xzr, [sp, #88]
  403fc0:	bl	40d000 <wcrtomb@plt+0xa2c0>
  403fc4:	mov	x20, x0
  403fc8:	b	404034 <wcrtomb@plt+0x12f4>
  403fcc:	ldr	x1, [x26, #16]
  403fd0:	cmp	x0, x1
  403fd4:	b.cs	4040b0 <wcrtomb@plt+0x1370>  // b.hs, b.nlast
  403fd8:	ldrb	w19, [x0]
  403fdc:	add	x1, x0, #0x1
  403fe0:	str	x1, [x26, #8]
  403fe4:	cmp	w19, #0xa
  403fe8:	b.eq	404070 <wcrtomb@plt+0x1330>  // b.none
  403fec:	ldr	w0, [x21]
  403ff0:	cmp	w0, #0x1
  403ff4:	b.eq	404008 <wcrtomb@plt+0x12c8>  // b.none
  403ff8:	add	x1, sp, #0x58
  403ffc:	mov	w0, w19
  404000:	bl	40b698 <wcrtomb@plt+0x8958>
  404004:	cbnz	w0, 404028 <wcrtomb@plt+0x12e8>
  404008:	cmp	w22, w19
  40400c:	b.eq	4040bc <wcrtomb@plt+0x137c>  // b.none
  404010:	cmp	w19, #0x5c
  404014:	b.eq	404110 <wcrtomb@plt+0x13d0>  // b.none
  404018:	cmp	w19, #0x5b
  40401c:	and	w0, w23, #0x1
  404020:	csel	w0, w0, wzr, eq  // eq = none
  404024:	cbnz	w0, 4040d8 <wcrtomb@plt+0x1398>
  404028:	mov	w1, w19
  40402c:	mov	x0, x20
  404030:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404034:	ldr	x0, [x26, #8]
  404038:	cbnz	x0, 403fcc <wcrtomb@plt+0x128c>
  40403c:	ldr	x0, [x26, #24]
  404040:	cbz	x0, 4040b0 <wcrtomb@plt+0x1370>
  404044:	ldr	w1, [x0]
  404048:	tbnz	w1, #4, 4040b0 <wcrtomb@plt+0x1370>
  40404c:	ldp	x2, x1, [x0, #8]
  404050:	cmp	x2, x1
  404054:	b.cs	4041b8 <wcrtomb@plt+0x1478>  // b.hs, b.nlast
  404058:	add	x1, x2, #0x1
  40405c:	str	x1, [x0, #8]
  404060:	mov	x1, #0x0                   	// #0
  404064:	ldrb	w19, [x2]
  404068:	cmp	w19, #0xa
  40406c:	b.ne	403fec <wcrtomb@plt+0x12ac>  // b.any
  404070:	ldr	x0, [x26, #40]
  404074:	add	x0, x0, #0x1
  404078:	str	x0, [x26, #40]
  40407c:	cbz	x0, 404088 <wcrtomb@plt+0x1348>
  404080:	sub	x0, x0, #0x1
  404084:	str	x0, [x26, #40]
  404088:	cbz	x1, 404204 <wcrtomb@plt+0x14c4>
  40408c:	ldr	x0, [x25, #1344]
  404090:	cmp	x1, x0
  404094:	b.ls	404224 <wcrtomb@plt+0x14e4>  // b.plast
  404098:	ldurb	w0, [x1, #-1]
  40409c:	sub	x2, x1, #0x1
  4040a0:	str	x2, [x26, #8]
  4040a4:	cmp	w0, #0xa
  4040a8:	b.ne	404224 <wcrtomb@plt+0x14e4>  // b.any
  4040ac:	nop
  4040b0:	mov	x0, x20
  4040b4:	mov	x20, #0x0                   	// #0
  4040b8:	bl	40d1d8 <wcrtomb@plt+0xa498>
  4040bc:	mov	x0, x20
  4040c0:	ldp	x19, x20, [sp, #16]
  4040c4:	ldp	x21, x22, [sp, #32]
  4040c8:	ldp	x23, x24, [sp, #48]
  4040cc:	ldp	x25, x26, [sp, #64]
  4040d0:	ldp	x29, x30, [sp], #96
  4040d4:	ret
  4040d8:	mov	w1, #0x5b                  	// #91
  4040dc:	mov	x0, x20
  4040e0:	bl	40d118 <wcrtomb@plt+0xa3d8>
  4040e4:	add	x1, sp, #0x58
  4040e8:	mov	x0, x20
  4040ec:	bl	403810 <wcrtomb@plt+0xad0>
  4040f0:	mov	w19, w0
  4040f4:	cmp	w0, #0x5d
  4040f8:	b.eq	404028 <wcrtomb@plt+0x12e8>  // b.none
  4040fc:	cmp	w0, #0xa
  404100:	b.ne	4040b0 <wcrtomb@plt+0x1370>  // b.any
  404104:	ldr	x1, [x26, #8]
  404108:	ldr	x0, [x26, #40]
  40410c:	b	40407c <wcrtomb@plt+0x133c>
  404110:	ldr	x0, [x26, #8]
  404114:	cbz	x0, 404174 <wcrtomb@plt+0x1434>
  404118:	ldr	x1, [x26, #16]
  40411c:	cmp	x0, x1
  404120:	b.cs	4040b0 <wcrtomb@plt+0x1370>  // b.hs, b.nlast
  404124:	ldrb	w19, [x0]
  404128:	add	x1, x0, #0x1
  40412c:	str	x1, [x26, #8]
  404130:	cmp	w19, #0xa
  404134:	b.eq	4041a4 <wcrtomb@plt+0x1464>  // b.none
  404138:	cmp	w19, #0x6e
  40413c:	and	w0, w23, #0x1
  404140:	csel	w0, w0, wzr, eq  // eq = none
  404144:	cbnz	w0, 40416c <wcrtomb@plt+0x142c>
  404148:	cmp	w22, w19
  40414c:	b.ne	40415c <wcrtomb@plt+0x141c>  // b.any
  404150:	cmp	w22, #0x26
  404154:	csel	w0, w24, wzr, eq  // eq = none
  404158:	cbz	w0, 404028 <wcrtomb@plt+0x12e8>
  40415c:	mov	x0, x20
  404160:	mov	w1, #0x5c                  	// #92
  404164:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404168:	b	404028 <wcrtomb@plt+0x12e8>
  40416c:	mov	w19, #0xa                   	// #10
  404170:	b	404028 <wcrtomb@plt+0x12e8>
  404174:	ldr	x0, [x26, #24]
  404178:	cbz	x0, 4040b0 <wcrtomb@plt+0x1370>
  40417c:	ldr	w1, [x0]
  404180:	tbnz	w1, #4, 4040b0 <wcrtomb@plt+0x1370>
  404184:	ldp	x1, x2, [x0, #8]
  404188:	cmp	x1, x2
  40418c:	b.cs	4041e8 <wcrtomb@plt+0x14a8>  // b.hs, b.nlast
  404190:	add	x2, x1, #0x1
  404194:	str	x2, [x0, #8]
  404198:	ldrb	w19, [x1]
  40419c:	cmp	w19, #0xa
  4041a0:	b.ne	404138 <wcrtomb@plt+0x13f8>  // b.any
  4041a4:	ldr	x0, [x26, #40]
  4041a8:	mov	w19, #0xa                   	// #10
  4041ac:	add	x0, x0, #0x1
  4041b0:	str	x0, [x26, #40]
  4041b4:	b	404028 <wcrtomb@plt+0x12e8>
  4041b8:	bl	402d00 <__uflow@plt>
  4041bc:	mov	w19, w0
  4041c0:	cmp	w0, #0xa
  4041c4:	b.eq	4041e0 <wcrtomb@plt+0x14a0>  // b.none
  4041c8:	cmn	w0, #0x1
  4041cc:	b.ne	403fec <wcrtomb@plt+0x12ac>  // b.any
  4041d0:	mov	x0, x20
  4041d4:	mov	x20, #0x0                   	// #0
  4041d8:	bl	40d1d8 <wcrtomb@plt+0xa498>
  4041dc:	b	4040bc <wcrtomb@plt+0x137c>
  4041e0:	ldr	x1, [x26, #8]
  4041e4:	b	404070 <wcrtomb@plt+0x1330>
  4041e8:	bl	402d00 <__uflow@plt>
  4041ec:	mov	w19, w0
  4041f0:	cmp	w0, #0xa
  4041f4:	b.eq	4041a4 <wcrtomb@plt+0x1464>  // b.none
  4041f8:	cmn	w0, #0x1
  4041fc:	b.ne	404138 <wcrtomb@plt+0x13f8>  // b.any
  404200:	b	4040b0 <wcrtomb@plt+0x1370>
  404204:	ldr	x1, [x26, #24]
  404208:	mov	w0, #0xa                   	// #10
  40420c:	bl	402af0 <ungetc@plt>
  404210:	b	4040b0 <wcrtomb@plt+0x1370>
  404214:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404218:	add	x0, x0, #0x6c0
  40421c:	add	x0, x0, #0x260
  404220:	bl	403ba8 <wcrtomb@plt+0xe68>
  404224:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404228:	mov	w1, #0xa                   	// #10
  40422c:	add	x0, x0, #0x4d8
  404230:	bl	40c380 <wcrtomb@plt+0x9640>
  404234:	nop
  404238:	stp	x29, x30, [sp, #-64]!
  40423c:	cmp	w1, #0x2f
  404240:	mov	x29, sp
  404244:	stp	x19, x20, [sp, #16]
  404248:	mov	x20, x0
  40424c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404250:	stp	x21, x22, [sp, #32]
  404254:	cset	w21, eq  // eq = none
  404258:	cmp	w1, #0x5c
  40425c:	ldr	q0, [x0, #2688]
  404260:	str	wzr, [x20]
  404264:	str	xzr, [x20, #24]
  404268:	mov	w19, w1
  40426c:	csinc	w21, w21, wzr, ne  // ne = any
  404270:	stur	q0, [x20, #8]
  404274:	cbz	w21, 404354 <wcrtomb@plt+0x1614>
  404278:	str	x23, [sp, #48]
  40427c:	mov	w0, #0x1                   	// #1
  404280:	str	w0, [x20]
  404284:	b.eq	40445c <wcrtomb@plt+0x171c>  // b.none
  404288:	mov	w0, w19
  40428c:	mov	w1, #0x1                   	// #1
  404290:	bl	403f68 <wcrtomb@plt+0x1228>
  404294:	mov	x19, x0
  404298:	cbz	x0, 404508 <wcrtomb@plt+0x17c8>
  40429c:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4042a0:	add	x22, x22, #0x8f0
  4042a4:	mov	w23, #0x0                   	// #0
  4042a8:	bl	403380 <wcrtomb@plt+0x640>
  4042ac:	ldr	w1, [x22]
  4042b0:	cmp	w1, #0x2
  4042b4:	b.eq	4042e0 <wcrtomb@plt+0x15a0>  // b.none
  4042b8:	cmp	w0, #0x49
  4042bc:	b.eq	4043dc <wcrtomb@plt+0x169c>  // b.none
  4042c0:	cmp	w0, #0x4d
  4042c4:	b.ne	4042e0 <wcrtomb@plt+0x15a0>  // b.any
  4042c8:	bl	403380 <wcrtomb@plt+0x640>
  4042cc:	orr	w23, w23, #0x4
  4042d0:	ldr	w1, [x22]
  4042d4:	cmp	w1, #0x2
  4042d8:	b.ne	4042b8 <wcrtomb@plt+0x1578>  // b.any
  4042dc:	nop
  4042e0:	cmn	w0, #0x1
  4042e4:	b.eq	404320 <wcrtomb@plt+0x15e0>  // b.none
  4042e8:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  4042ec:	cmp	w0, #0xa
  4042f0:	add	x22, x2, #0x540
  4042f4:	b.eq	40449c <wcrtomb@plt+0x175c>  // b.none
  4042f8:	ldr	x1, [x22, #8]
  4042fc:	cbz	x1, 4044dc <wcrtomb@plt+0x179c>
  404300:	ldr	x2, [x2, #1344]
  404304:	cmp	x1, x2
  404308:	b.ls	404580 <wcrtomb@plt+0x1840>  // b.plast
  40430c:	sub	x2, x1, #0x1
  404310:	ldurb	w1, [x1, #-1]
  404314:	str	x2, [x22, #8]
  404318:	cmp	w0, w1
  40431c:	b.ne	404580 <wcrtomb@plt+0x1840>  // b.any
  404320:	mov	w1, w23
  404324:	mov	w2, #0x0                   	// #0
  404328:	mov	x0, x19
  40432c:	bl	40b9f8 <wcrtomb@plt+0x8cb8>
  404330:	str	x0, [x20, #24]
  404334:	mov	x0, x19
  404338:	bl	40d1d8 <wcrtomb@plt+0xa498>
  40433c:	ldr	x23, [sp, #48]
  404340:	mov	w0, w21
  404344:	ldp	x19, x20, [sp, #16]
  404348:	ldp	x21, x22, [sp, #32]
  40434c:	ldp	x29, x30, [sp], #64
  404350:	ret
  404354:	bl	402ab0 <__ctype_b_loc@plt>
  404358:	ldr	x0, [x0]
  40435c:	ubfiz	x1, x19, #1, #8
  404360:	ldrh	w0, [x0, x1]
  404364:	tbnz	w0, #11, 4043e4 <wcrtomb@plt+0x16a4>
  404368:	cmp	w19, #0x2b
  40436c:	cset	w22, eq  // eq = none
  404370:	cmp	w19, #0x7e
  404374:	csinc	w22, w22, wzr, ne  // ne = any
  404378:	cbz	w22, 4043b4 <wcrtomb@plt+0x1674>
  40437c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  404380:	ldr	w0, [x0, #2288]
  404384:	cmp	w0, #0x2
  404388:	b.eq	4043b4 <wcrtomb@plt+0x1674>  // b.none
  40438c:	bl	403380 <wcrtomb@plt+0x640>
  404390:	bl	403448 <wcrtomb@plt+0x708>
  404394:	str	x0, [x20, #16]
  404398:	cbz	x0, 404444 <wcrtomb@plt+0x1704>
  40439c:	mov	w21, w22
  4043a0:	cmp	w19, #0x2b
  4043a4:	b.eq	40455c <wcrtomb@plt+0x181c>  // b.none
  4043a8:	mov	w0, #0x5                   	// #5
  4043ac:	str	w0, [x20]
  4043b0:	b	404340 <wcrtomb@plt+0x1600>
  4043b4:	cmp	w19, #0x24
  4043b8:	b.ne	404340 <wcrtomb@plt+0x1600>  // b.any
  4043bc:	mov	w0, #0x6                   	// #6
  4043c0:	str	w0, [x20]
  4043c4:	mov	w21, #0x1                   	// #1
  4043c8:	mov	w0, w21
  4043cc:	ldp	x19, x20, [sp, #16]
  4043d0:	ldp	x21, x22, [sp, #32]
  4043d4:	ldp	x29, x30, [sp], #64
  4043d8:	ret
  4043dc:	orr	w23, w23, #0x2
  4043e0:	b	4042a8 <wcrtomb@plt+0x1568>
  4043e4:	mov	w0, w19
  4043e8:	bl	403448 <wcrtomb@plt+0x708>
  4043ec:	mov	w1, #0x2                   	// #2
  4043f0:	str	w1, [x20]
  4043f4:	str	x0, [x20, #8]
  4043f8:	bl	403380 <wcrtomb@plt+0x640>
  4043fc:	cmp	w0, #0x7e
  404400:	b.ne	4044b0 <wcrtomb@plt+0x1770>  // b.any
  404404:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  404408:	ldr	w1, [x1, #2288]
  40440c:	cmp	w1, #0x2
  404410:	b.ne	4044e8 <wcrtomb@plt+0x17a8>  // b.any
  404414:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  404418:	add	x22, x2, #0x540
  40441c:	ldr	x1, [x22, #8]
  404420:	cbz	x1, 40454c <wcrtomb@plt+0x180c>
  404424:	ldr	x2, [x2, #1344]
  404428:	cmp	x1, x2
  40442c:	b.ls	40457c <wcrtomb@plt+0x183c>  // b.plast
  404430:	sub	x2, x1, #0x1
  404434:	ldurb	w1, [x1, #-1]
  404438:	str	x2, [x22, #8]
  40443c:	cmp	w0, w1
  404440:	b.ne	40457c <wcrtomb@plt+0x183c>  // b.any
  404444:	mov	w21, #0x1                   	// #1
  404448:	mov	w0, w21
  40444c:	ldp	x19, x20, [sp, #16]
  404450:	ldp	x21, x22, [sp, #32]
  404454:	ldp	x29, x30, [sp], #64
  404458:	ret
  40445c:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  404460:	add	x22, x2, #0x540
  404464:	ldr	x0, [x22, #8]
  404468:	cbz	x0, 404520 <wcrtomb@plt+0x17e0>
  40446c:	ldr	x1, [x22, #16]
  404470:	cmp	x0, x1
  404474:	b.cs	404574 <wcrtomb@plt+0x1834>  // b.hs, b.nlast
  404478:	ldrb	w19, [x0]
  40447c:	add	x1, x0, #0x1
  404480:	str	x1, [x22, #8]
  404484:	cmp	w19, #0xa
  404488:	b.ne	404288 <wcrtomb@plt+0x1548>  // b.any
  40448c:	ldr	x0, [x22, #40]
  404490:	add	x0, x0, #0x1
  404494:	str	x0, [x22, #40]
  404498:	b	404288 <wcrtomb@plt+0x1548>
  40449c:	ldr	x1, [x22, #40]
  4044a0:	cbz	x1, 4042f8 <wcrtomb@plt+0x15b8>
  4044a4:	sub	x1, x1, #0x1
  4044a8:	str	x1, [x22, #40]
  4044ac:	b	4042f8 <wcrtomb@plt+0x15b8>
  4044b0:	cmn	w0, #0x1
  4044b4:	b.eq	404444 <wcrtomb@plt+0x1704>  // b.none
  4044b8:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  4044bc:	cmp	w0, #0xa
  4044c0:	add	x22, x2, #0x540
  4044c4:	b.ne	40441c <wcrtomb@plt+0x16dc>  // b.any
  4044c8:	ldr	x1, [x22, #40]
  4044cc:	cbz	x1, 40441c <wcrtomb@plt+0x16dc>
  4044d0:	sub	x1, x1, #0x1
  4044d4:	str	x1, [x22, #40]
  4044d8:	b	40441c <wcrtomb@plt+0x16dc>
  4044dc:	ldr	x1, [x22, #24]
  4044e0:	bl	402af0 <ungetc@plt>
  4044e4:	b	404320 <wcrtomb@plt+0x15e0>
  4044e8:	bl	403380 <wcrtomb@plt+0x640>
  4044ec:	bl	403448 <wcrtomb@plt+0x708>
  4044f0:	cbz	x0, 404444 <wcrtomb@plt+0x1704>
  4044f4:	mov	w1, #0x3                   	// #3
  4044f8:	mov	w21, #0x1                   	// #1
  4044fc:	str	w1, [x20]
  404500:	str	x0, [x20, #16]
  404504:	b	404340 <wcrtomb@plt+0x1600>
  404508:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40450c:	add	x1, x1, #0x6c0
  404510:	add	x1, x1, #0x133
  404514:	mov	w2, #0x5                   	// #5
  404518:	bl	402c20 <dcgettext@plt>
  40451c:	bl	403ba8 <wcrtomb@plt+0xe68>
  404520:	ldr	x0, [x22, #24]
  404524:	cbz	x0, 404574 <wcrtomb@plt+0x1834>
  404528:	ldr	w1, [x0]
  40452c:	tbnz	w1, #4, 404574 <wcrtomb@plt+0x1834>
  404530:	ldp	x1, x2, [x0, #8]
  404534:	cmp	x1, x2
  404538:	b.cs	404568 <wcrtomb@plt+0x1828>  // b.hs, b.nlast
  40453c:	add	x2, x1, #0x1
  404540:	str	x2, [x0, #8]
  404544:	ldrb	w19, [x1]
  404548:	b	404484 <wcrtomb@plt+0x1744>
  40454c:	ldr	x1, [x22, #24]
  404550:	mov	w21, #0x1                   	// #1
  404554:	bl	402af0 <ungetc@plt>
  404558:	b	404340 <wcrtomb@plt+0x1600>
  40455c:	mov	w0, #0x4                   	// #4
  404560:	str	w0, [x20]
  404564:	b	404340 <wcrtomb@plt+0x1600>
  404568:	bl	402d00 <__uflow@plt>
  40456c:	mov	w19, w0
  404570:	b	404484 <wcrtomb@plt+0x1744>
  404574:	mov	w19, #0xffffffff            	// #-1
  404578:	b	404288 <wcrtomb@plt+0x1548>
  40457c:	str	x23, [sp, #48]
  404580:	mov	w1, w0
  404584:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404588:	add	x0, x0, #0x4d8
  40458c:	bl	40c380 <wcrtomb@plt+0x9640>
  404590:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  404594:	add	x1, x1, #0x6c0
  404598:	add	x1, x1, #0x65
  40459c:	stp	x29, x30, [sp, #-16]!
  4045a0:	mov	w2, #0x5                   	// #5
  4045a4:	mov	x29, sp
  4045a8:	mov	x0, #0x0                   	// #0
  4045ac:	bl	402c20 <dcgettext@plt>
  4045b0:	bl	403ba8 <wcrtomb@plt+0xe68>
  4045b4:	nop
  4045b8:	stp	x29, x30, [sp, #-48]!
  4045bc:	mov	x29, sp
  4045c0:	stp	x19, x20, [sp, #16]
  4045c4:	str	x21, [sp, #32]
  4045c8:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4045cc:	bl	402ab0 <__ctype_b_loc@plt>
  4045d0:	add	x19, x21, #0x540
  4045d4:	mov	x20, x0
  4045d8:	b	40460c <wcrtomb@plt+0x18cc>
  4045dc:	ldr	x0, [x19, #16]
  4045e0:	cmp	x1, x0
  4045e4:	b.cs	4046e8 <wcrtomb@plt+0x19a8>  // b.hs, b.nlast
  4045e8:	ldrb	w2, [x1]
  4045ec:	add	x0, x1, #0x1
  4045f0:	str	x0, [x19, #8]
  4045f4:	cmp	w2, #0xa
  4045f8:	sbfiz	x3, x2, #1, #32
  4045fc:	b.eq	404648 <wcrtomb@plt+0x1908>  // b.none
  404600:	ldr	x0, [x20]
  404604:	ldrh	w0, [x0, x3]
  404608:	tbz	w0, #0, 404660 <wcrtomb@plt+0x1920>
  40460c:	ldr	x1, [x19, #8]
  404610:	cbnz	x1, 4045dc <wcrtomb@plt+0x189c>
  404614:	ldr	x0, [x19, #24]
  404618:	cbz	x0, 4046e8 <wcrtomb@plt+0x19a8>
  40461c:	ldr	w1, [x0]
  404620:	tbnz	w1, #4, 4046e8 <wcrtomb@plt+0x19a8>
  404624:	ldp	x1, x2, [x0, #8]
  404628:	cmp	x1, x2
  40462c:	b.cs	4046dc <wcrtomb@plt+0x199c>  // b.hs, b.nlast
  404630:	add	x2, x1, #0x1
  404634:	str	x2, [x0, #8]
  404638:	ldrb	w2, [x1]
  40463c:	cmp	w2, #0xa
  404640:	sbfiz	x3, x2, #1, #32
  404644:	b.ne	404600 <wcrtomb@plt+0x18c0>  // b.any
  404648:	ldr	x0, [x19, #40]
  40464c:	add	x0, x0, #0x1
  404650:	str	x0, [x19, #40]
  404654:	ldr	x0, [x20]
  404658:	ldrh	w0, [x0, x3]
  40465c:	tbnz	w0, #0, 40460c <wcrtomb@plt+0x18cc>
  404660:	cmp	w2, #0x7d
  404664:	mov	w0, #0x23                  	// #35
  404668:	ccmp	w2, w0, #0x4, ne  // ne = any
  40466c:	b.eq	404694 <wcrtomb@plt+0x1954>  // b.none
  404670:	cmp	w2, #0xa
  404674:	mov	w0, #0x3b                  	// #59
  404678:	ccmn	w2, #0x1, #0x4, ne  // ne = any
  40467c:	ccmp	w2, w0, #0x4, ne  // ne = any
  404680:	b.ne	404720 <wcrtomb@plt+0x19e0>  // b.any
  404684:	ldp	x19, x20, [sp, #16]
  404688:	ldr	x21, [sp, #32]
  40468c:	ldp	x29, x30, [sp], #48
  404690:	ret
  404694:	cmn	w2, #0x1
  404698:	b.eq	404684 <wcrtomb@plt+0x1944>  // b.none
  40469c:	cmp	w2, #0xa
  4046a0:	b.eq	4046f4 <wcrtomb@plt+0x19b4>  // b.none
  4046a4:	ldr	x0, [x19, #8]
  4046a8:	cbz	x0, 404708 <wcrtomb@plt+0x19c8>
  4046ac:	ldr	x1, [x21, #1344]
  4046b0:	cmp	x0, x1
  4046b4:	b.ls	4046cc <wcrtomb@plt+0x198c>  // b.plast
  4046b8:	sub	x1, x0, #0x1
  4046bc:	ldurb	w0, [x0, #-1]
  4046c0:	str	x1, [x19, #8]
  4046c4:	cmp	w2, w0
  4046c8:	b.eq	404684 <wcrtomb@plt+0x1944>  // b.none
  4046cc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4046d0:	mov	w1, w2
  4046d4:	add	x0, x0, #0x4d8
  4046d8:	bl	40c380 <wcrtomb@plt+0x9640>
  4046dc:	bl	402d00 <__uflow@plt>
  4046e0:	mov	w2, w0
  4046e4:	b	4045f4 <wcrtomb@plt+0x18b4>
  4046e8:	mov	x3, #0xfffffffffffffffe    	// #-2
  4046ec:	mov	w2, #0xffffffff            	// #-1
  4046f0:	b	404600 <wcrtomb@plt+0x18c0>
  4046f4:	ldr	x0, [x19, #40]
  4046f8:	cbz	x0, 4046a4 <wcrtomb@plt+0x1964>
  4046fc:	sub	x0, x0, #0x1
  404700:	str	x0, [x19, #40]
  404704:	b	4046a4 <wcrtomb@plt+0x1964>
  404708:	ldr	x1, [x19, #24]
  40470c:	mov	w0, w2
  404710:	ldp	x19, x20, [sp, #16]
  404714:	ldr	x21, [sp, #32]
  404718:	ldp	x29, x30, [sp], #48
  40471c:	b	402af0 <ungetc@plt>
  404720:	bl	404590 <wcrtomb@plt+0x1850>
  404724:	nop
  404728:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40472c:	add	x1, x1, #0x6c0
  404730:	stp	x29, x30, [sp, #-32]!
  404734:	add	x1, x1, #0x2d1
  404738:	mov	w2, #0x5                   	// #5
  40473c:	mov	x29, sp
  404740:	stp	x19, x20, [sp, #16]
  404744:	and	w20, w0, #0xff
  404748:	mov	x0, #0x0                   	// #0
  40474c:	bl	402c20 <dcgettext@plt>
  404750:	mov	x19, x0
  404754:	bl	402690 <strlen@plt>
  404758:	bl	418630 <wcrtomb@plt+0x158f0>
  40475c:	mov	x3, x19
  404760:	mov	w4, w20
  404764:	mov	x2, #0xffffffffffffffff    	// #-1
  404768:	mov	w1, #0x1                   	// #1
  40476c:	mov	x19, x0
  404770:	bl	4026a0 <__sprintf_chk@plt>
  404774:	mov	x0, x19
  404778:	bl	403ba8 <wcrtomb@plt+0xe68>
  40477c:	nop
  404780:	stp	x29, x30, [sp, #-96]!
  404784:	mov	x29, sp
  404788:	stp	x23, x24, [sp, #48]
  40478c:	add	x23, x0, x1
  404790:	cmp	x0, x23
  404794:	str	xzr, [sp, #88]
  404798:	b.cs	404a6c <wcrtomb@plt+0x1d2c>  // b.hs, b.nlast
  40479c:	stp	x21, x22, [sp, #32]
  4047a0:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x102f0>
  4047a4:	add	x22, x22, #0x6c0
  4047a8:	mov	x21, x0
  4047ac:	add	x22, x22, #0x388
  4047b0:	stp	x19, x20, [sp, #16]
  4047b4:	mov	x19, x0
  4047b8:	mov	x20, x0
  4047bc:	str	x25, [sp, #64]
  4047c0:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  4047c4:	add	x25, x25, #0x8ec
  4047c8:	b	404820 <wcrtomb@plt+0x1ae0>
  4047cc:	sub	x2, x23, x20
  4047d0:	add	x3, sp, #0x58
  4047d4:	mov	x1, x20
  4047d8:	mov	x0, #0x0                   	// #0
  4047dc:	bl	418830 <wcrtomb@plt+0x15af0>
  4047e0:	cmp	w0, #0x1
  4047e4:	mov	w2, w0
  4047e8:	b.eq	40482c <wcrtomb@plt+0x1aec>  // b.none
  4047ec:	cmp	w0, #0x0
  4047f0:	add	w0, w0, #0x2
  4047f4:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  4047f8:	mov	x1, x20
  4047fc:	csinc	w2, w2, wzr, hi  // hi = pmore
  404800:	mov	x0, x19
  404804:	sxtw	x24, w2
  404808:	add	x20, x20, x24
  40480c:	add	x19, x19, x24
  404810:	mov	x2, x24
  404814:	bl	402660 <memmove@plt>
  404818:	cmp	x23, x20
  40481c:	b.ls	404854 <wcrtomb@plt+0x1b14>  // b.plast
  404820:	ldr	w0, [x25]
  404824:	cmp	w0, #0x1
  404828:	b.ne	4047cc <wcrtomb@plt+0x1a8c>  // b.any
  40482c:	mov	x2, x20
  404830:	ldrb	w3, [x2], #1
  404834:	cmp	w3, #0x5c
  404838:	b.eq	404870 <wcrtomb@plt+0x1b30>  // b.none
  40483c:	mov	x0, x19
  404840:	mov	x20, x2
  404844:	cmp	x23, x20
  404848:	strb	w3, [x0], #1
  40484c:	mov	x19, x0
  404850:	b.hi	404820 <wcrtomb@plt+0x1ae0>  // b.pmore
  404854:	sub	x0, x19, x21
  404858:	ldp	x19, x20, [sp, #16]
  40485c:	ldp	x21, x22, [sp, #32]
  404860:	ldr	x25, [sp, #64]
  404864:	ldp	x23, x24, [sp, #48]
  404868:	ldp	x29, x30, [sp], #96
  40486c:	ret
  404870:	cmp	x23, x2
  404874:	b.ls	40483c <wcrtomb@plt+0x1afc>  // b.plast
  404878:	ldrb	w3, [x20, #1]
  40487c:	cmp	w3, #0x6f
  404880:	b.eq	404a1c <wcrtomb@plt+0x1cdc>  // b.none
  404884:	b.hi	40493c <wcrtomb@plt+0x1bfc>  // b.pmore
  404888:	cmp	w3, #0x64
  40488c:	b.eq	404a08 <wcrtomb@plt+0x1cc8>  // b.none
  404890:	b.hi	40491c <wcrtomb@plt+0x1bdc>  // b.pmore
  404894:	cmp	w3, #0x61
  404898:	b.eq	404a54 <wcrtomb@plt+0x1d14>  // b.none
  40489c:	cmp	w3, #0x63
  4048a0:	b.ne	4048fc <wcrtomb@plt+0x1bbc>  // b.any
  4048a4:	add	x24, x20, #0x2
  4048a8:	cmp	x23, x24
  4048ac:	b.ls	404854 <wcrtomb@plt+0x1b14>  // b.plast
  4048b0:	bl	402940 <__ctype_toupper_loc@plt>
  4048b4:	mov	x1, x0
  4048b8:	ldrb	w2, [x20, #2]
  4048bc:	mov	x0, x19
  4048c0:	ldr	x1, [x1]
  4048c4:	ldr	w1, [x1, x2, lsl #2]
  4048c8:	eor	w1, w1, #0x40
  4048cc:	strb	w1, [x0], #1
  4048d0:	ldrb	w1, [x20, #2]
  4048d4:	cmp	w1, #0x5c
  4048d8:	b.ne	404a10 <wcrtomb@plt+0x1cd0>  // b.any
  4048dc:	ldrb	w1, [x20, #3]
  4048e0:	add	x24, x20, #0x3
  4048e4:	cmp	w1, #0x5c
  4048e8:	b.eq	404a10 <wcrtomb@plt+0x1cd0>  // b.none
  4048ec:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4048f0:	add	x0, x0, #0x6c0
  4048f4:	add	x0, x0, #0x30c
  4048f8:	bl	403ba8 <wcrtomb@plt+0xe68>
  4048fc:	cmp	w3, #0xa
  404900:	b.ne	4049a8 <wcrtomb@plt+0x1c68>  // b.any
  404904:	mov	x0, x19
  404908:	mov	w1, #0xa                   	// #10
  40490c:	add	x20, x20, #0x2
  404910:	strb	w1, [x0], #1
  404914:	mov	x19, x0
  404918:	b	404818 <wcrtomb@plt+0x1ad8>
  40491c:	cmp	w3, #0x66
  404920:	b.ne	4049a0 <wcrtomb@plt+0x1c60>  // b.any
  404924:	mov	x0, x19
  404928:	mov	w1, #0xc                   	// #12
  40492c:	add	x20, x20, #0x2
  404930:	strb	w1, [x0], #1
  404934:	mov	x19, x0
  404938:	b	404818 <wcrtomb@plt+0x1ad8>
  40493c:	cmp	w3, #0x76
  404940:	b.eq	404a3c <wcrtomb@plt+0x1cfc>  // b.none
  404944:	b.ls	4049b0 <wcrtomb@plt+0x1c70>  // b.plast
  404948:	cmp	w3, #0x78
  40494c:	mov	w1, #0x10                  	// #16
  404950:	b.ne	4049a8 <wcrtomb@plt+0x1c68>  // b.any
  404954:	add	x5, x20, #0x2
  404958:	mov	x20, x5
  40495c:	cmp	x23, x5
  404960:	b.ls	404990 <wcrtomb@plt+0x1c50>  // b.plast
  404964:	mov	w2, #0x1                   	// #1
  404968:	mov	w4, #0x0                   	// #0
  40496c:	nop
  404970:	ldrb	w0, [x20]
  404974:	sub	w0, w0, #0x30
  404978:	and	w0, w0, #0xff
  40497c:	cmp	w0, #0x36
  404980:	b.ls	4049d8 <wcrtomb@plt+0x1c98>  // b.plast
  404984:	and	w4, w4, #0xff
  404988:	cmp	x20, x5
  40498c:	csel	w3, w4, w3, ne  // ne = any
  404990:	mov	x0, x19
  404994:	strb	w3, [x0], #1
  404998:	mov	x19, x0
  40499c:	b	404818 <wcrtomb@plt+0x1ad8>
  4049a0:	cmp	w3, #0x6e
  4049a4:	b.eq	404904 <wcrtomb@plt+0x1bc4>  // b.none
  4049a8:	add	x2, x20, #0x2
  4049ac:	b	40483c <wcrtomb@plt+0x1afc>
  4049b0:	cmp	w3, #0x72
  4049b4:	b.eq	404a24 <wcrtomb@plt+0x1ce4>  // b.none
  4049b8:	cmp	w3, #0x74
  4049bc:	b.ne	4049a8 <wcrtomb@plt+0x1c68>  // b.any
  4049c0:	mov	x0, x19
  4049c4:	mov	w1, #0x9                   	// #9
  4049c8:	add	x20, x20, #0x2
  4049cc:	strb	w1, [x0], #1
  4049d0:	mov	x19, x0
  4049d4:	b	404818 <wcrtomb@plt+0x1ad8>
  4049d8:	and	x0, x0, #0xff
  4049dc:	ldrsb	w0, [x22, x0]
  4049e0:	cmp	w0, #0x0
  4049e4:	ccmp	w1, w0, #0x4, ge  // ge = tcont
  4049e8:	b.le	404984 <wcrtomb@plt+0x1c44>
  4049ec:	mul	w2, w2, w1
  4049f0:	add	x20, x20, #0x1
  4049f4:	madd	w4, w1, w4, w0
  4049f8:	cmp	w2, #0xff
  4049fc:	ccmp	x23, x20, #0x0, le
  404a00:	b.hi	404970 <wcrtomb@plt+0x1c30>  // b.pmore
  404a04:	b	404984 <wcrtomb@plt+0x1c44>
  404a08:	mov	w1, #0xa                   	// #10
  404a0c:	b	404954 <wcrtomb@plt+0x1c14>
  404a10:	add	x20, x24, #0x1
  404a14:	mov	x19, x0
  404a18:	b	404818 <wcrtomb@plt+0x1ad8>
  404a1c:	mov	w1, #0x8                   	// #8
  404a20:	b	404954 <wcrtomb@plt+0x1c14>
  404a24:	mov	x0, x19
  404a28:	mov	w1, #0xd                   	// #13
  404a2c:	add	x20, x20, #0x2
  404a30:	strb	w1, [x0], #1
  404a34:	mov	x19, x0
  404a38:	b	404818 <wcrtomb@plt+0x1ad8>
  404a3c:	mov	x0, x19
  404a40:	mov	w1, #0xb                   	// #11
  404a44:	add	x20, x20, #0x2
  404a48:	strb	w1, [x0], #1
  404a4c:	mov	x19, x0
  404a50:	b	404818 <wcrtomb@plt+0x1ad8>
  404a54:	mov	x0, x19
  404a58:	mov	w1, #0x7                   	// #7
  404a5c:	add	x20, x20, #0x2
  404a60:	strb	w1, [x0], #1
  404a64:	mov	x19, x0
  404a68:	b	404818 <wcrtomb@plt+0x1ad8>
  404a6c:	mov	x0, #0x0                   	// #0
  404a70:	b	404864 <wcrtomb@plt+0x1b24>
  404a74:	nop
  404a78:	stp	x29, x30, [sp, #-48]!
  404a7c:	mov	x29, sp
  404a80:	stp	x19, x20, [sp, #16]
  404a84:	mov	w20, w1
  404a88:	stp	x21, x22, [sp, #32]
  404a8c:	mov	x21, x0
  404a90:	cbz	x0, 404ab4 <wcrtomb@plt+0x1d74>
  404a94:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  404a98:	add	x19, x19, #0x540
  404a9c:	ldr	x0, [x19, #168]
  404aa0:	cbz	x0, 404aa8 <wcrtomb@plt+0x1d68>
  404aa4:	bl	40d1d8 <wcrtomb@plt+0xa498>
  404aa8:	bl	40d000 <wcrtomb@plt+0xa2c0>
  404aac:	stp	xzr, xzr, [x21]
  404ab0:	stp	x0, x21, [x19, #168]
  404ab4:	cmn	w20, #0x1
  404ab8:	b.eq	404ba4 <wcrtomb@plt+0x1e64>  // b.none
  404abc:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  404ac0:	cmp	w20, #0xa
  404ac4:	add	x19, x19, #0x540
  404ac8:	b.ne	404c58 <wcrtomb@plt+0x1f18>  // b.any
  404acc:	ldr	x0, [x19, #8]
  404ad0:	cbz	x0, 404bb4 <wcrtomb@plt+0x1e74>
  404ad4:	ldr	x1, [x19, #16]
  404ad8:	cmp	x0, x1
  404adc:	b.cs	404b44 <wcrtomb@plt+0x1e04>  // b.hs, b.nlast
  404ae0:	ldrb	w20, [x0]
  404ae4:	add	x1, x0, #0x1
  404ae8:	str	x1, [x19, #8]
  404aec:	cmp	w20, #0xa
  404af0:	b.eq	404b38 <wcrtomb@plt+0x1df8>  // b.none
  404af4:	cmn	w20, #0x1
  404af8:	b.eq	404b44 <wcrtomb@plt+0x1e04>  // b.none
  404afc:	cmp	w20, #0x5c
  404b00:	b.eq	404be0 <wcrtomb@plt+0x1ea0>  // b.none
  404b04:	ldr	x0, [x19, #168]
  404b08:	mov	w1, w20
  404b0c:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404b10:	ldr	x1, [x19, #8]
  404b14:	cbz	x1, 404bb4 <wcrtomb@plt+0x1e74>
  404b18:	ldr	x2, [x19, #16]
  404b1c:	cmp	x1, x2
  404b20:	b.cs	404b44 <wcrtomb@plt+0x1e04>  // b.hs, b.nlast
  404b24:	ldrb	w20, [x1]
  404b28:	add	x2, x1, #0x1
  404b2c:	str	x2, [x19, #8]
  404b30:	cmp	w20, #0xa
  404b34:	b.ne	404af4 <wcrtomb@plt+0x1db4>  // b.any
  404b38:	ldr	x0, [x19, #40]
  404b3c:	add	x0, x0, #0x1
  404b40:	str	x0, [x19, #40]
  404b44:	ldr	x0, [x19, #168]
  404b48:	mov	w1, #0xa                   	// #10
  404b4c:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404b50:	cbz	x21, 404cb4 <wcrtomb@plt+0x1f74>
  404b54:	ldr	x22, [x19, #168]
  404b58:	mov	x0, x22
  404b5c:	bl	40d048 <wcrtomb@plt+0xa308>
  404b60:	mov	x20, x0
  404b64:	mov	x0, x22
  404b68:	bl	40d050 <wcrtomb@plt+0xa310>
  404b6c:	mov	x1, x0
  404b70:	mov	x0, x20
  404b74:	bl	404780 <wcrtomb@plt+0x1a40>
  404b78:	mov	x20, x0
  404b7c:	str	x20, [x21, #8]
  404b80:	ldr	x0, [x19, #168]
  404b84:	bl	40d048 <wcrtomb@plt+0xa308>
  404b88:	mov	x1, x20
  404b8c:	bl	418768 <wcrtomb@plt+0x15a28>
  404b90:	mov	x1, x0
  404b94:	str	x1, [x21]
  404b98:	ldr	x0, [x19, #168]
  404b9c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  404ba0:	str	xzr, [x19, #168]
  404ba4:	ldp	x19, x20, [sp, #16]
  404ba8:	ldp	x21, x22, [sp, #32]
  404bac:	ldp	x29, x30, [sp], #48
  404bb0:	ret
  404bb4:	ldr	x0, [x19, #24]
  404bb8:	cbz	x0, 404b44 <wcrtomb@plt+0x1e04>
  404bbc:	ldr	w1, [x0]
  404bc0:	tbnz	w1, #4, 404b44 <wcrtomb@plt+0x1e04>
  404bc4:	ldp	x1, x2, [x0, #8]
  404bc8:	cmp	x1, x2
  404bcc:	b.cs	404ca8 <wcrtomb@plt+0x1f68>  // b.hs, b.nlast
  404bd0:	add	x2, x1, #0x1
  404bd4:	str	x2, [x0, #8]
  404bd8:	ldrb	w20, [x1]
  404bdc:	b	404aec <wcrtomb@plt+0x1dac>
  404be0:	ldr	x0, [x19, #8]
  404be4:	cbz	x0, 404c68 <wcrtomb@plt+0x1f28>
  404be8:	ldr	x1, [x19, #16]
  404bec:	cmp	x0, x1
  404bf0:	b.cs	404c40 <wcrtomb@plt+0x1f00>  // b.hs, b.nlast
  404bf4:	ldrb	w20, [x0]
  404bf8:	add	x1, x0, #0x1
  404bfc:	str	x1, [x19, #8]
  404c00:	cmp	w20, #0xa
  404c04:	b.ne	404c98 <wcrtomb@plt+0x1f58>  // b.any
  404c08:	ldr	x2, [x19, #40]
  404c0c:	mov	w1, #0x5c                  	// #92
  404c10:	ldr	x0, [x19, #168]
  404c14:	add	x2, x2, #0x1
  404c18:	mov	w20, #0xa                   	// #10
  404c1c:	str	x2, [x19, #40]
  404c20:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404c24:	b	404b04 <wcrtomb@plt+0x1dc4>
  404c28:	bl	402d00 <__uflow@plt>
  404c2c:	mov	w20, w0
  404c30:	cmp	w0, #0xa
  404c34:	b.eq	404c08 <wcrtomb@plt+0x1ec8>  // b.none
  404c38:	cmn	w0, #0x1
  404c3c:	b.ne	404c98 <wcrtomb@plt+0x1f58>  // b.any
  404c40:	ldp	x21, x22, [sp, #32]
  404c44:	mov	w1, #0xa                   	// #10
  404c48:	ldr	x0, [x19, #168]
  404c4c:	ldp	x19, x20, [sp, #16]
  404c50:	ldp	x29, x30, [sp], #48
  404c54:	b	40d118 <wcrtomb@plt+0xa3d8>
  404c58:	ldr	x0, [x19, #168]
  404c5c:	mov	w1, w20
  404c60:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404c64:	b	404acc <wcrtomb@plt+0x1d8c>
  404c68:	ldr	x0, [x19, #24]
  404c6c:	cbz	x0, 404c40 <wcrtomb@plt+0x1f00>
  404c70:	ldr	w1, [x0]
  404c74:	tbnz	w1, #4, 404c40 <wcrtomb@plt+0x1f00>
  404c78:	ldp	x1, x2, [x0, #8]
  404c7c:	cmp	x1, x2
  404c80:	b.cs	404c28 <wcrtomb@plt+0x1ee8>  // b.hs, b.nlast
  404c84:	add	x2, x1, #0x1
  404c88:	str	x2, [x0, #8]
  404c8c:	ldrb	w20, [x1]
  404c90:	cmp	w20, #0xa
  404c94:	b.eq	404c08 <wcrtomb@plt+0x1ec8>  // b.none
  404c98:	ldr	x0, [x19, #168]
  404c9c:	mov	w1, #0x5c                  	// #92
  404ca0:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404ca4:	b	404b04 <wcrtomb@plt+0x1dc4>
  404ca8:	bl	402d00 <__uflow@plt>
  404cac:	mov	w20, w0
  404cb0:	b	404aec <wcrtomb@plt+0x1dac>
  404cb4:	ldr	x21, [x19, #176]
  404cb8:	b	404b54 <wcrtomb@plt+0x1e14>
  404cbc:	nop
  404cc0:	stp	x29, x30, [sp, #-80]!
  404cc4:	mov	x29, sp
  404cc8:	stp	x21, x22, [sp, #32]
  404ccc:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  404cd0:	ldr	w1, [x22, #2284]
  404cd4:	stp	x19, x20, [sp, #16]
  404cd8:	cmp	w1, #0x1
  404cdc:	stp	x23, x24, [sp, #48]
  404ce0:	mov	w23, w0
  404ce4:	str	xzr, [sp, #72]
  404ce8:	b.eq	404cf8 <wcrtomb@plt+0x1fb8>  // b.none
  404cec:	add	x1, sp, #0x48
  404cf0:	bl	40b698 <wcrtomb@plt+0x8958>
  404cf4:	cbnz	w0, 404f00 <wcrtomb@plt+0x21c0>
  404cf8:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  404cfc:	add	x22, x22, #0x8ec
  404d00:	add	x20, x24, #0x540
  404d04:	str	xzr, [sp, #72]
  404d08:	bl	40d000 <wcrtomb@plt+0xa2c0>
  404d0c:	mov	x21, x0
  404d10:	b	404d6c <wcrtomb@plt+0x202c>
  404d14:	ldr	x0, [x20, #16]
  404d18:	cmp	x1, x0
  404d1c:	b.cs	404dd8 <wcrtomb@plt+0x2098>  // b.hs, b.nlast
  404d20:	ldrb	w19, [x1]
  404d24:	add	x0, x1, #0x1
  404d28:	str	x0, [x20, #8]
  404d2c:	cmp	w19, #0xa
  404d30:	b.eq	404da8 <wcrtomb@plt+0x2068>  // b.none
  404d34:	ldr	w1, [x22]
  404d38:	cmp	w1, #0x1
  404d3c:	b.eq	404d50 <wcrtomb@plt+0x2010>  // b.none
  404d40:	add	x1, sp, #0x48
  404d44:	mov	w0, w19
  404d48:	bl	40b698 <wcrtomb@plt+0x8958>
  404d4c:	cbnz	w0, 404d60 <wcrtomb@plt+0x2020>
  404d50:	cmp	w23, w19
  404d54:	b.eq	404de4 <wcrtomb@plt+0x20a4>  // b.none
  404d58:	cmp	w19, #0x5c
  404d5c:	b.eq	404e04 <wcrtomb@plt+0x20c4>  // b.none
  404d60:	mov	w1, w19
  404d64:	mov	x0, x21
  404d68:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404d6c:	ldr	x1, [x20, #8]
  404d70:	cbnz	x1, 404d14 <wcrtomb@plt+0x1fd4>
  404d74:	ldr	x0, [x20, #24]
  404d78:	cbz	x0, 404dd8 <wcrtomb@plt+0x2098>
  404d7c:	ldr	w1, [x0]
  404d80:	tbnz	w1, #4, 404dd8 <wcrtomb@plt+0x2098>
  404d84:	ldp	x1, x2, [x0, #8]
  404d88:	cmp	x1, x2
  404d8c:	b.cs	404e94 <wcrtomb@plt+0x2154>  // b.hs, b.nlast
  404d90:	add	x2, x1, #0x1
  404d94:	str	x2, [x0, #8]
  404d98:	mov	x0, #0x0                   	// #0
  404d9c:	ldrb	w19, [x1]
  404da0:	cmp	w19, #0xa
  404da4:	b.ne	404d34 <wcrtomb@plt+0x1ff4>  // b.any
  404da8:	ldr	x2, [x20, #40]
  404dac:	cmn	x2, #0x1
  404db0:	b.eq	404dfc <wcrtomb@plt+0x20bc>  // b.none
  404db4:	cbz	x0, 404ee0 <wcrtomb@plt+0x21a0>
  404db8:	ldr	x1, [x24, #1344]
  404dbc:	cmp	x1, x0
  404dc0:	b.cs	404ef0 <wcrtomb@plt+0x21b0>  // b.hs, b.nlast
  404dc4:	sub	x1, x0, #0x1
  404dc8:	ldurb	w0, [x0, #-1]
  404dcc:	str	x1, [x20, #8]
  404dd0:	cmp	w0, #0xa
  404dd4:	b.ne	404ef0 <wcrtomb@plt+0x21b0>  // b.any
  404dd8:	mov	x0, x21
  404ddc:	mov	x21, #0x0                   	// #0
  404de0:	bl	40d1d8 <wcrtomb@plt+0xa498>
  404de4:	mov	x0, x21
  404de8:	ldp	x19, x20, [sp, #16]
  404dec:	ldp	x21, x22, [sp, #32]
  404df0:	ldp	x23, x24, [sp, #48]
  404df4:	ldp	x29, x30, [sp], #80
  404df8:	ret
  404dfc:	str	xzr, [x20, #40]
  404e00:	b	404db4 <wcrtomb@plt+0x2074>
  404e04:	ldr	x0, [x20, #8]
  404e08:	cbz	x0, 404e50 <wcrtomb@plt+0x2110>
  404e0c:	ldr	x1, [x20, #16]
  404e10:	cmp	x0, x1
  404e14:	b.cs	404dd8 <wcrtomb@plt+0x2098>  // b.hs, b.nlast
  404e18:	ldrb	w19, [x0]
  404e1c:	add	x1, x0, #0x1
  404e20:	str	x1, [x20, #8]
  404e24:	cmp	w19, #0xa
  404e28:	b.eq	404e80 <wcrtomb@plt+0x2140>  // b.none
  404e2c:	cmp	w23, w19
  404e30:	b.ne	404e40 <wcrtomb@plt+0x2100>  // b.any
  404e34:	cmp	w23, #0x26
  404e38:	b.ne	404d60 <wcrtomb@plt+0x2020>  // b.any
  404e3c:	nop
  404e40:	mov	x0, x21
  404e44:	mov	w1, #0x5c                  	// #92
  404e48:	bl	40d118 <wcrtomb@plt+0xa3d8>
  404e4c:	b	404d60 <wcrtomb@plt+0x2020>
  404e50:	ldr	x0, [x20, #24]
  404e54:	cbz	x0, 404dd8 <wcrtomb@plt+0x2098>
  404e58:	ldr	w1, [x0]
  404e5c:	tbnz	w1, #4, 404dd8 <wcrtomb@plt+0x2098>
  404e60:	ldp	x1, x2, [x0, #8]
  404e64:	cmp	x1, x2
  404e68:	b.cs	404ec4 <wcrtomb@plt+0x2184>  // b.hs, b.nlast
  404e6c:	add	x2, x1, #0x1
  404e70:	str	x2, [x0, #8]
  404e74:	ldrb	w19, [x1]
  404e78:	cmp	w19, #0xa
  404e7c:	b.ne	404e2c <wcrtomb@plt+0x20ec>  // b.any
  404e80:	ldr	x0, [x20, #40]
  404e84:	mov	w19, #0xa                   	// #10
  404e88:	add	x0, x0, #0x1
  404e8c:	str	x0, [x20, #40]
  404e90:	b	404d60 <wcrtomb@plt+0x2020>
  404e94:	bl	402d00 <__uflow@plt>
  404e98:	mov	w19, w0
  404e9c:	cmp	w0, #0xa
  404ea0:	b.eq	404ebc <wcrtomb@plt+0x217c>  // b.none
  404ea4:	cmn	w0, #0x1
  404ea8:	b.ne	404d34 <wcrtomb@plt+0x1ff4>  // b.any
  404eac:	mov	x0, x21
  404eb0:	mov	x21, #0x0                   	// #0
  404eb4:	bl	40d1d8 <wcrtomb@plt+0xa498>
  404eb8:	b	404de4 <wcrtomb@plt+0x20a4>
  404ebc:	ldr	x0, [x20, #8]
  404ec0:	b	404da8 <wcrtomb@plt+0x2068>
  404ec4:	bl	402d00 <__uflow@plt>
  404ec8:	mov	w19, w0
  404ecc:	cmp	w0, #0xa
  404ed0:	b.eq	404e80 <wcrtomb@plt+0x2140>  // b.none
  404ed4:	cmn	w0, #0x1
  404ed8:	b.ne	404e2c <wcrtomb@plt+0x20ec>  // b.any
  404edc:	b	404dd8 <wcrtomb@plt+0x2098>
  404ee0:	ldr	x1, [x20, #24]
  404ee4:	mov	w0, #0xa                   	// #10
  404ee8:	bl	402af0 <ungetc@plt>
  404eec:	b	404dd8 <wcrtomb@plt+0x2098>
  404ef0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404ef4:	mov	w1, #0xa                   	// #10
  404ef8:	add	x0, x0, #0x4d8
  404efc:	bl	40c380 <wcrtomb@plt+0x9640>
  404f00:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  404f04:	add	x0, x0, #0x6c0
  404f08:	add	x0, x0, #0x260
  404f0c:	bl	403ba8 <wcrtomb@plt+0xe68>
  404f10:	stp	x29, x30, [sp, #-112]!
  404f14:	mov	x29, sp
  404f18:	stp	x25, x26, [sp, #64]
  404f1c:	add	x25, x0, x1
  404f20:	cmp	x0, x25
  404f24:	str	xzr, [sp, #104]
  404f28:	b.cs	4052dc <wcrtomb@plt+0x259c>  // b.hs, b.nlast
  404f2c:	stp	x23, x24, [sp, #48]
  404f30:	adrp	x24, 429000 <_obstack_memory_used@@Base+0x102f0>
  404f34:	add	x24, x24, #0x6c0
  404f38:	mov	x23, x0
  404f3c:	add	x24, x24, #0x388
  404f40:	stp	x19, x20, [sp, #16]
  404f44:	mov	x20, x0
  404f48:	mov	x19, x0
  404f4c:	stp	x21, x22, [sp, #32]
  404f50:	mov	w21, w2
  404f54:	mov	w22, #0x0                   	// #0
  404f58:	str	x27, [sp, #80]
  404f5c:	adrp	x27, 441000 <_obstack_memory_used@@Base+0x282f0>
  404f60:	add	x27, x27, #0x8ec
  404f64:	b	404fbc <wcrtomb@plt+0x227c>
  404f68:	sub	x2, x25, x19
  404f6c:	add	x3, sp, #0x68
  404f70:	mov	x1, x19
  404f74:	mov	x0, #0x0                   	// #0
  404f78:	bl	418830 <wcrtomb@plt+0x15af0>
  404f7c:	cmp	w0, #0x1
  404f80:	mov	w2, w0
  404f84:	b.eq	404fc8 <wcrtomb@plt+0x2288>  // b.none
  404f88:	cmp	w0, #0x0
  404f8c:	add	w0, w0, #0x2
  404f90:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  404f94:	mov	x1, x19
  404f98:	csinc	w2, w2, wzr, hi  // hi = pmore
  404f9c:	mov	x0, x20
  404fa0:	sxtw	x26, w2
  404fa4:	add	x19, x19, x26
  404fa8:	add	x20, x20, x26
  404fac:	mov	x2, x26
  404fb0:	bl	402660 <memmove@plt>
  404fb4:	cmp	x19, x25
  404fb8:	b.cs	404ff8 <wcrtomb@plt+0x22b8>  // b.hs, b.nlast
  404fbc:	ldr	w0, [x27]
  404fc0:	cmp	w0, #0x1
  404fc4:	b.ne	404f68 <wcrtomb@plt+0x2228>  // b.any
  404fc8:	mov	x0, x19
  404fcc:	ldrb	w3, [x0], #1
  404fd0:	cmp	w3, #0x5c
  404fd4:	b.eq	405018 <wcrtomb@plt+0x22d8>  // b.none
  404fd8:	cmp	w21, #0x2
  404fdc:	add	x1, x20, #0x1
  404fe0:	b.eq	4050a0 <wcrtomb@plt+0x2360>  // b.none
  404fe4:	strb	w3, [x20]
  404fe8:	mov	x19, x0
  404fec:	mov	x20, x1
  404ff0:	cmp	x19, x25
  404ff4:	b.cc	404fbc <wcrtomb@plt+0x227c>  // b.lo, b.ul, b.last
  404ff8:	sub	x0, x20, x23
  404ffc:	ldp	x19, x20, [sp, #16]
  405000:	ldp	x21, x22, [sp, #32]
  405004:	ldp	x23, x24, [sp, #48]
  405008:	ldr	x27, [sp, #80]
  40500c:	ldp	x25, x26, [sp, #64]
  405010:	ldp	x29, x30, [sp], #112
  405014:	ret
  405018:	cmp	w22, #0x0
  40501c:	ccmp	x25, x0, #0x0, eq  // eq = none
  405020:	b.ls	404fd8 <wcrtomb@plt+0x2298>  // b.plast
  405024:	ldrb	w3, [x19, #1]
  405028:	cmp	w3, #0x6f
  40502c:	b.eq	405298 <wcrtomb@plt+0x2558>  // b.none
  405030:	b.hi	405140 <wcrtomb@plt+0x2400>  // b.pmore
  405034:	cmp	w3, #0x64
  405038:	b.eq	405244 <wcrtomb@plt+0x2504>  // b.none
  40503c:	b.hi	405124 <wcrtomb@plt+0x23e4>  // b.pmore
  405040:	cmp	w3, #0x61
  405044:	b.eq	4052b4 <wcrtomb@plt+0x2574>  // b.none
  405048:	cmp	w3, #0x63
  40504c:	b.ne	405108 <wcrtomb@plt+0x23c8>  // b.any
  405050:	add	x22, x19, #0x2
  405054:	cmp	x25, x22
  405058:	b.ls	4052e4 <wcrtomb@plt+0x25a4>  // b.plast
  40505c:	bl	402940 <__ctype_toupper_loc@plt>
  405060:	ldrb	w1, [x19, #2]
  405064:	ldr	x0, [x0]
  405068:	ldr	w0, [x0, x1, lsl #2]
  40506c:	eor	w0, w0, #0x40
  405070:	strb	w0, [x20], #1
  405074:	ldrb	w0, [x19, #2]
  405078:	cmp	w0, #0x5c
  40507c:	b.ne	405268 <wcrtomb@plt+0x2528>  // b.any
  405080:	ldrb	w0, [x19, #3]
  405084:	add	x22, x19, #0x3
  405088:	cmp	w0, #0x5c
  40508c:	b.eq	405268 <wcrtomb@plt+0x2528>  // b.none
  405090:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  405094:	add	x0, x0, #0x6c0
  405098:	add	x0, x0, #0x30c
  40509c:	bl	403ba8 <wcrtomb@plt+0xe68>
  4050a0:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  4050a4:	ldr	w2, [x2, #2288]
  4050a8:	cbz	w2, 404fe4 <wcrtomb@plt+0x22a4>
  4050ac:	cmp	w3, #0x5b
  4050b0:	b.eq	405208 <wcrtomb@plt+0x24c8>  // b.none
  4050b4:	b.hi	4050e0 <wcrtomb@plt+0x23a0>  // b.pmore
  4050b8:	cmp	w3, #0x3a
  4050bc:	b.eq	4050c8 <wcrtomb@plt+0x2388>  // b.none
  4050c0:	cmp	w3, #0x3d
  4050c4:	b.ne	4050fc <wcrtomb@plt+0x23bc>  // b.any
  4050c8:	cmn	w22, #0x1
  4050cc:	b.ne	404fe4 <wcrtomb@plt+0x22a4>  // b.any
  4050d0:	ldurb	w2, [x19, #-1]
  4050d4:	cmp	w2, #0x5b
  4050d8:	csel	w22, w22, w3, ne  // ne = any
  4050dc:	b	404fe4 <wcrtomb@plt+0x22a4>
  4050e0:	cmp	w3, #0x5d
  4050e4:	b.ne	404fe4 <wcrtomb@plt+0x22a4>  // b.any
  4050e8:	add	w2, w22, #0x1
  4050ec:	cmp	w2, #0x1
  4050f0:	b.hi	40524c <wcrtomb@plt+0x250c>  // b.pmore
  4050f4:	mov	w22, #0x0                   	// #0
  4050f8:	b	404fe4 <wcrtomb@plt+0x22a4>
  4050fc:	cmp	w3, #0x2e
  405100:	b.eq	4050c8 <wcrtomb@plt+0x2388>  // b.none
  405104:	b	404fe4 <wcrtomb@plt+0x22a4>
  405108:	cmp	w3, #0xa
  40510c:	b.ne	4051b8 <wcrtomb@plt+0x2478>  // b.any
  405110:	mov	w0, #0xa                   	// #10
  405114:	add	x19, x19, #0x2
  405118:	mov	w22, #0x0                   	// #0
  40511c:	strb	w0, [x20], #1
  405120:	b	404fb4 <wcrtomb@plt+0x2274>
  405124:	cmp	w3, #0x66
  405128:	b.ne	4051ac <wcrtomb@plt+0x246c>  // b.any
  40512c:	mov	w0, #0xc                   	// #12
  405130:	add	x19, x19, #0x2
  405134:	mov	w22, #0x0                   	// #0
  405138:	strb	w0, [x20], #1
  40513c:	b	404fb4 <wcrtomb@plt+0x2274>
  405140:	cmp	w3, #0x76
  405144:	b.eq	4052a0 <wcrtomb@plt+0x2560>  // b.none
  405148:	b.ls	4051e4 <wcrtomb@plt+0x24a4>  // b.plast
  40514c:	cmp	w3, #0x78
  405150:	mov	w1, #0x10                  	// #16
  405154:	b.ne	4051b8 <wcrtomb@plt+0x2478>  // b.any
  405158:	add	x5, x19, #0x2
  40515c:	mov	x19, x5
  405160:	cmp	x25, x5
  405164:	b.ls	405190 <wcrtomb@plt+0x2450>  // b.plast
  405168:	mov	w2, #0x1                   	// #1
  40516c:	mov	w4, #0x0                   	// #0
  405170:	ldrb	w0, [x19]
  405174:	sub	w0, w0, #0x30
  405178:	and	w0, w0, #0xff
  40517c:	cmp	w0, #0x36
  405180:	b.ls	405214 <wcrtomb@plt+0x24d4>  // b.plast
  405184:	and	w4, w4, #0xff
  405188:	cmp	x5, x19
  40518c:	csel	w3, w4, w3, ne  // ne = any
  405190:	cmp	w21, #0x1
  405194:	add	x0, x20, #0x1
  405198:	b.eq	405274 <wcrtomb@plt+0x2534>  // b.none
  40519c:	mov	w22, #0x0                   	// #0
  4051a0:	strb	w3, [x20]
  4051a4:	mov	x20, x0
  4051a8:	b	404fb4 <wcrtomb@plt+0x2274>
  4051ac:	cmp	w3, #0x6e
  4051b0:	b.eq	405110 <wcrtomb@plt+0x23d0>  // b.none
  4051b4:	nop
  4051b8:	add	x1, x20, #0x1
  4051bc:	add	x0, x19, #0x2
  4051c0:	mov	w22, #0x0                   	// #0
  4051c4:	cbz	w21, 404fe4 <wcrtomb@plt+0x22a4>
  4051c8:	mov	x2, x20
  4051cc:	mov	w3, #0x5c                  	// #92
  4051d0:	mov	x20, x1
  4051d4:	strb	w3, [x2], #2
  4051d8:	ldrb	w3, [x19, #1]
  4051dc:	mov	x1, x2
  4051e0:	b	404fe4 <wcrtomb@plt+0x22a4>
  4051e4:	cmp	w3, #0x72
  4051e8:	b.eq	4052c8 <wcrtomb@plt+0x2588>  // b.none
  4051ec:	cmp	w3, #0x74
  4051f0:	b.ne	4051b8 <wcrtomb@plt+0x2478>  // b.any
  4051f4:	mov	w0, #0x9                   	// #9
  4051f8:	add	x19, x19, #0x2
  4051fc:	mov	w22, #0x0                   	// #0
  405200:	strb	w0, [x20], #1
  405204:	b	404fb4 <wcrtomb@plt+0x2274>
  405208:	cmp	w22, #0x0
  40520c:	csinv	w22, w22, wzr, ne  // ne = any
  405210:	b	404fe4 <wcrtomb@plt+0x22a4>
  405214:	and	x0, x0, #0xff
  405218:	ldrsb	w0, [x24, x0]
  40521c:	cmp	w0, #0x0
  405220:	ccmp	w1, w0, #0x4, ge  // ge = tcont
  405224:	b.le	405184 <wcrtomb@plt+0x2444>
  405228:	mul	w2, w2, w1
  40522c:	add	x19, x19, #0x1
  405230:	madd	w4, w1, w4, w0
  405234:	cmp	w2, #0xff
  405238:	ccmp	x25, x19, #0x0, le
  40523c:	b.hi	405170 <wcrtomb@plt+0x2430>  // b.pmore
  405240:	b	405184 <wcrtomb@plt+0x2444>
  405244:	mov	w1, #0xa                   	// #10
  405248:	b	405158 <wcrtomb@plt+0x2418>
  40524c:	ldurb	w2, [x19, #-2]
  405250:	cmp	w2, w22
  405254:	b.eq	404fe4 <wcrtomb@plt+0x22a4>  // b.none
  405258:	ldurb	w2, [x19, #-1]
  40525c:	cmp	w2, w22
  405260:	csinv	w22, w22, wzr, ne  // ne = any
  405264:	b	404fe4 <wcrtomb@plt+0x22a4>
  405268:	add	x19, x22, #0x1
  40526c:	mov	w22, #0x0                   	// #0
  405270:	b	404fb4 <wcrtomb@plt+0x2274>
  405274:	cmp	w3, #0x26
  405278:	mov	w1, #0x5c                  	// #92
  40527c:	ccmp	w3, w1, #0x4, ne  // ne = any
  405280:	b.ne	40519c <wcrtomb@plt+0x245c>  // b.any
  405284:	mov	x2, x20
  405288:	mov	x20, x0
  40528c:	strb	w1, [x2], #2
  405290:	mov	x0, x2
  405294:	b	40519c <wcrtomb@plt+0x245c>
  405298:	mov	w1, #0x8                   	// #8
  40529c:	b	405158 <wcrtomb@plt+0x2418>
  4052a0:	mov	w0, #0xb                   	// #11
  4052a4:	add	x19, x19, #0x2
  4052a8:	mov	w22, #0x0                   	// #0
  4052ac:	strb	w0, [x20], #1
  4052b0:	b	404fb4 <wcrtomb@plt+0x2274>
  4052b4:	mov	w0, #0x7                   	// #7
  4052b8:	add	x19, x19, #0x2
  4052bc:	mov	w22, #0x0                   	// #0
  4052c0:	strb	w0, [x20], #1
  4052c4:	b	404fb4 <wcrtomb@plt+0x2274>
  4052c8:	mov	w0, #0xd                   	// #13
  4052cc:	add	x19, x19, #0x2
  4052d0:	mov	w22, #0x0                   	// #0
  4052d4:	strb	w0, [x20], #1
  4052d8:	b	404fb4 <wcrtomb@plt+0x2274>
  4052dc:	mov	x0, #0x0                   	// #0
  4052e0:	b	40500c <wcrtomb@plt+0x22cc>
  4052e4:	cbz	w21, 404ff8 <wcrtomb@plt+0x22b8>
  4052e8:	mov	w0, #0x5c                  	// #92
  4052ec:	strb	w0, [x20], #1
  4052f0:	b	404ff8 <wcrtomb@plt+0x22b8>
  4052f4:	nop
  4052f8:	stp	x29, x30, [sp, #-240]!
  4052fc:	adrp	x5, 441000 <_obstack_memory_used@@Base+0x282f0>
  405300:	mov	x29, sp
  405304:	stp	x19, x20, [sp, #16]
  405308:	mov	x19, x0
  40530c:	stp	x21, x22, [sp, #32]
  405310:	stp	x23, x24, [sp, #48]
  405314:	stp	x25, x26, [sp, #64]
  405318:	stp	x27, x28, [sp, #80]
  40531c:	add	x28, x5, #0x540
  405320:	cbz	x0, 406b6c <wcrtomb@plt+0x3e2c>
  405324:	ldr	x0, [x28, #168]
  405328:	cbz	x0, 405338 <wcrtomb@plt+0x25f8>
  40532c:	mov	w1, #0xa                   	// #10
  405330:	mov	x0, #0x0                   	// #0
  405334:	bl	404a78 <wcrtomb@plt+0x1d38>
  405338:	mov	x21, #0x8200                	// #33280
  40533c:	bl	402ab0 <__ctype_b_loc@plt>
  405340:	movk	x21, #0x4b0, lsl #16
  405344:	mov	x20, x0
  405348:	ldr	x23, [x28, #8]
  40534c:	movk	x21, #0x100, lsl #32
  405350:	movk	x21, #0x2200, lsl #48
  405354:	nop
  405358:	cbz	x23, 4054f0 <wcrtomb@plt+0x27b0>
  40535c:	ldr	x0, [x28, #16]
  405360:	cmp	x0, x23
  405364:	b.ls	4061a0 <wcrtomb@plt+0x3460>  // b.plast
  405368:	add	x0, x23, #0x1
  40536c:	ldrb	w23, [x23]
  405370:	str	x0, [x28, #8]
  405374:	cmp	w23, #0xa
  405378:	b.eq	4054cc <wcrtomb@plt+0x278c>  // b.none
  40537c:	cmp	w23, #0x3b
  405380:	b.eq	4054e8 <wcrtomb@plt+0x27a8>  // b.none
  405384:	ldr	x0, [x20]
  405388:	ldrh	w0, [x0, w23, sxtw #1]
  40538c:	tbnz	w0, #13, 4054e8 <wcrtomb@plt+0x27a8>
  405390:	cmn	w23, #0x1
  405394:	b.eq	4061ac <wcrtomb@plt+0x346c>  // b.none
  405398:	ldp	x3, x0, [x19]
  40539c:	ldr	x1, [x19, #16]
  4053a0:	cmp	x1, x0
  4053a4:	b.eq	406014 <wcrtomb@plt+0x32d4>  // b.none
  4053a8:	add	x2, x1, x1, lsl #2
  4053ac:	add	x0, sp, #0xb0
  4053b0:	mov	w1, w23
  4053b4:	lsl	x2, x2, #3
  4053b8:	add	x22, x3, x2
  4053bc:	stp	xzr, xzr, [x22]
  4053c0:	str	wzr, [x22, #16]
  4053c4:	strh	wzr, [x22, #20]
  4053c8:	bl	404238 <wcrtomb@plt+0x14f8>
  4053cc:	tst	w0, #0xff
  4053d0:	b.eq	405494 <wcrtomb@plt+0x2754>  // b.none
  4053d4:	ldr	w0, [sp, #176]
  4053d8:	sub	w0, w0, #0x4
  4053dc:	cmp	w0, #0x1
  4053e0:	b.ls	406c3c <wcrtomb@plt+0x3efc>  // b.plast
  4053e4:	add	x0, sp, #0xb0
  4053e8:	mov	x1, #0x20                  	// #32
  4053ec:	bl	418768 <wcrtomb@plt+0x15a28>
  4053f0:	str	x0, [x22]
  4053f4:	b	405428 <wcrtomb@plt+0x26e8>
  4053f8:	ldr	x0, [x28, #16]
  4053fc:	cmp	x1, x0
  405400:	b.cs	406090 <wcrtomb@plt+0x3350>  // b.hs, b.nlast
  405404:	ldrb	w23, [x1]
  405408:	add	x0, x1, #0x1
  40540c:	str	x0, [x28, #8]
  405410:	cmp	w23, #0xa
  405414:	sbfiz	x0, x23, #1, #32
  405418:	b.eq	405464 <wcrtomb@plt+0x2724>  // b.none
  40541c:	ldr	x1, [x20]
  405420:	ldrh	w0, [x1, x0]
  405424:	tbz	w0, #0, 40547c <wcrtomb@plt+0x273c>
  405428:	ldr	x1, [x28, #8]
  40542c:	cbnz	x1, 4053f8 <wcrtomb@plt+0x26b8>
  405430:	ldr	x0, [x28, #24]
  405434:	cbz	x0, 406090 <wcrtomb@plt+0x3350>
  405438:	ldr	w1, [x0]
  40543c:	tbnz	w1, #4, 406090 <wcrtomb@plt+0x3350>
  405440:	ldp	x1, x2, [x0, #8]
  405444:	cmp	x1, x2
  405448:	b.cs	406084 <wcrtomb@plt+0x3344>  // b.hs, b.nlast
  40544c:	add	x2, x1, #0x1
  405450:	str	x2, [x0, #8]
  405454:	ldrb	w23, [x1]
  405458:	cmp	w23, #0xa
  40545c:	sbfiz	x0, x23, #1, #32
  405460:	b.ne	40541c <wcrtomb@plt+0x26dc>  // b.any
  405464:	ldr	x1, [x28, #40]
  405468:	add	x1, x1, #0x1
  40546c:	str	x1, [x28, #40]
  405470:	ldr	x1, [x20]
  405474:	ldrh	w0, [x1, x0]
  405478:	tbnz	w0, #0, 405428 <wcrtomb@plt+0x26e8>
  40547c:	cmp	w23, #0x2c
  405480:	b.eq	40609c <wcrtomb@plt+0x335c>  // b.none
  405484:	ldr	x0, [x22]
  405488:	ldr	w1, [x0]
  40548c:	cmp	w1, #0x2
  405490:	b.eq	405570 <wcrtomb@plt+0x2830>  // b.none
  405494:	cmp	w23, #0x21
  405498:	b.eq	4055a8 <wcrtomb@plt+0x2868>  // b.none
  40549c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4054a0:	add	x24, x0, #0x8f0
  4054a4:	ldr	w0, [x0, #2288]
  4054a8:	cmp	w0, #0x2
  4054ac:	b.eq	40551c <wcrtomb@plt+0x27dc>  // b.none
  4054b0:	and	w1, w23, #0xff
  4054b4:	strb	w1, [x22, #21]
  4054b8:	add	w0, w23, #0x1
  4054bc:	cmp	w0, #0x7e
  4054c0:	b.ls	4055d8 <wcrtomb@plt+0x2898>  // b.plast
  4054c4:	mov	w0, w1
  4054c8:	bl	404728 <wcrtomb@plt+0x19e8>
  4054cc:	ldr	x2, [x20]
  4054d0:	ldr	x0, [x28, #40]
  4054d4:	ldrh	w2, [x2, #20]
  4054d8:	add	x0, x0, #0x1
  4054dc:	str	x0, [x28, #40]
  4054e0:	tbz	w2, #13, 405398 <wcrtomb@plt+0x2658>
  4054e4:	nop
  4054e8:	ldr	x23, [x28, #8]
  4054ec:	cbnz	x23, 40535c <wcrtomb@plt+0x261c>
  4054f0:	ldr	x23, [x28, #24]
  4054f4:	cbz	x23, 4061a0 <wcrtomb@plt+0x3460>
  4054f8:	ldr	w0, [x23]
  4054fc:	tbnz	w0, #4, 40619c <wcrtomb@plt+0x345c>
  405500:	ldp	x0, x1, [x23, #8]
  405504:	cmp	x0, x1
  405508:	b.cs	4060d0 <wcrtomb@plt+0x3390>  // b.hs, b.nlast
  40550c:	add	x1, x0, #0x1
  405510:	str	x1, [x23, #8]
  405514:	ldrb	w23, [x0]
  405518:	b	405374 <wcrtomb@plt+0x2634>
  40551c:	sub	w2, w23, #0x3d
  405520:	cmp	w2, #0x3d
  405524:	b.hi	4054b0 <wcrtomb@plt+0x2770>  // b.pmore
  405528:	mov	x1, #0x1                   	// #1
  40552c:	lsl	x1, x1, x2
  405530:	tst	x1, x21
  405534:	b.ne	406d60 <wcrtomb@plt+0x4020>  // b.any
  405538:	mov	x0, #0x1                   	// #1
  40553c:	movk	x0, #0x9010, lsl #32
  405540:	movk	x0, #0x20, lsl #48
  405544:	tst	x1, x0
  405548:	b.eq	4054b0 <wcrtomb@plt+0x2770>  // b.none
  40554c:	ldr	x0, [x22, #8]
  405550:	cbz	x0, 4054b0 <wcrtomb@plt+0x2770>
  405554:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  405558:	add	x1, x1, #0x6c0
  40555c:	add	x1, x1, #0x115
  405560:	mov	w2, #0x5                   	// #5
  405564:	mov	x0, #0x0                   	// #0
  405568:	bl	402c20 <dcgettext@plt>
  40556c:	bl	403ba8 <wcrtomb@plt+0xe68>
  405570:	ldr	x0, [x0, #8]
  405574:	cbnz	x0, 405494 <wcrtomb@plt+0x2754>
  405578:	ldr	x0, [x22, #8]
  40557c:	cbz	x0, 406d44 <wcrtomb@plt+0x4004>
  405580:	ldr	w0, [x0]
  405584:	cmp	w0, #0x1
  405588:	b.ne	406d44 <wcrtomb@plt+0x4004>  // b.any
  40558c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  405590:	add	x24, x0, #0x8f0
  405594:	ldr	w0, [x0, #2288]
  405598:	cmp	w0, #0x2
  40559c:	b.eq	406d44 <wcrtomb@plt+0x4004>  // b.none
  4055a0:	cmp	w23, #0x21
  4055a4:	b.ne	4054b0 <wcrtomb@plt+0x2770>  // b.any
  4055a8:	mov	w0, #0x1                   	// #1
  4055ac:	strb	w0, [x22, #20]
  4055b0:	bl	403380 <wcrtomb@plt+0x640>
  4055b4:	mov	w23, w0
  4055b8:	cmp	w0, #0x21
  4055bc:	b.ne	40549c <wcrtomb@plt+0x275c>  // b.any
  4055c0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4055c4:	add	x1, x1, #0x6c0
  4055c8:	mov	w2, #0x5                   	// #5
  4055cc:	mov	x0, #0x0                   	// #0
  4055d0:	bl	402c20 <dcgettext@plt>
  4055d4:	bl	403ba8 <wcrtomb@plt+0xe68>
  4055d8:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  4055dc:	add	x2, x2, #0x5c0
  4055e0:	ldrh	w0, [x2, w0, uxtw #1]
  4055e4:	adr	x2, 4055f0 <wcrtomb@plt+0x28b0>
  4055e8:	add	x0, x2, w0, sxth #2
  4055ec:	br	x0
  4055f0:	bl	4045b8 <wcrtomb@plt+0x1878>
  4055f4:	ldr	x23, [x28, #8]
  4055f8:	ldr	x24, [x19, #16]
  4055fc:	nop
  405600:	add	x0, x24, #0x1
  405604:	str	x0, [x19, #16]
  405608:	b	405358 <wcrtomb@plt+0x2618>
  40560c:	bl	403380 <wcrtomb@plt+0x640>
  405610:	cmn	w0, #0x1
  405614:	b.eq	406d0c <wcrtomb@plt+0x3fcc>  // b.none
  405618:	cmp	w0, #0x5c
  40561c:	b.eq	4068bc <wcrtomb@plt+0x3b7c>  // b.none
  405620:	ldr	w1, [x24]
  405624:	cmp	w1, #0x2
  405628:	b.eq	406d0c <wcrtomb@plt+0x3fcc>  // b.none
  40562c:	cmp	w0, #0xa
  405630:	b.eq	406898 <wcrtomb@plt+0x3b58>  // b.none
  405634:	ldr	x1, [x28, #8]
  405638:	cbz	x1, 4068b0 <wcrtomb@plt+0x3b70>
  40563c:	ldr	x2, [x28]
  405640:	cmp	x1, x2
  405644:	b.ls	4063a8 <wcrtomb@plt+0x3668>  // b.plast
  405648:	sub	x2, x1, #0x1
  40564c:	ldurb	w1, [x1, #-1]
  405650:	str	x2, [x28, #8]
  405654:	cmp	w1, w0
  405658:	b.ne	4063a8 <wcrtomb@plt+0x3668>  // b.any
  40565c:	mov	w1, #0xa                   	// #10
  405660:	add	x0, x22, #0x18
  405664:	bl	404a78 <wcrtomb@plt+0x1d38>
  405668:	ldr	x23, [x28, #8]
  40566c:	ldr	x24, [x19, #16]
  405670:	b	405600 <wcrtomb@plt+0x28c0>
  405674:	ldr	x23, [x19, #16]
  405678:	add	x25, x28, #0x38
  40567c:	ldr	x22, [x28, #200]
  405680:	bl	4035d0 <wcrtomb@plt+0x890>
  405684:	ldp	x1, x8, [x28, #80]
  405688:	mov	x24, x0
  40568c:	sub	x0, x8, x1
  405690:	cmp	x0, #0x2f
  405694:	b.ls	406770 <wcrtomb@plt+0x3a30>  // b.plast
  405698:	ldr	x3, [x28, #72]
  40569c:	add	x1, x1, #0x30
  4056a0:	cmp	x1, x3
  4056a4:	b.eq	406790 <wcrtomb@plt+0x3a50>  // b.none
  4056a8:	ldr	x2, [x28, #104]
  4056ac:	ldr	x6, [x28, #64]
  4056b0:	add	x1, x1, x2
  4056b4:	bic	x1, x1, x2
  4056b8:	str	x1, [x28, #80]
  4056bc:	sub	x0, x1, x6
  4056c0:	sub	x6, x8, x6
  4056c4:	cmp	x0, x6
  4056c8:	b.ls	4056d4 <wcrtomb@plt+0x2994>  // b.plast
  4056cc:	mov	x1, x8
  4056d0:	str	x8, [x28, #80]
  4056d4:	str	x1, [x28, #72]
  4056d8:	stp	x23, x24, [x3]
  4056dc:	str	x22, [x3, #40]
  4056e0:	str	x3, [x28, #200]
  4056e4:	ldr	x23, [x28, #8]
  4056e8:	ldr	x24, [x19, #16]
  4056ec:	b	405600 <wcrtomb@plt+0x28c0>
  4056f0:	ldr	x0, [x22, #8]
  4056f4:	cbnz	x0, 405554 <wcrtomb@plt+0x2814>
  4056f8:	bl	403380 <wcrtomb@plt+0x640>
  4056fc:	mov	w2, w0
  405700:	ldr	x3, [x20]
  405704:	ubfiz	x1, x2, #1, #8
  405708:	ldrh	w1, [x3, x1]
  40570c:	tbz	w1, #11, 4060e0 <wcrtomb@plt+0x33a0>
  405710:	ldr	w1, [x24]
  405714:	cmp	w1, #0x2
  405718:	b.eq	4060e0 <wcrtomb@plt+0x33a0>  // b.none
  40571c:	bl	403448 <wcrtomb@plt+0x708>
  405720:	str	w0, [x22, #24]
  405724:	ldr	x1, [x28, #8]
  405728:	cbz	x1, 405768 <wcrtomb@plt+0x2a28>
  40572c:	nop
  405730:	ldr	x0, [x28, #16]
  405734:	cmp	x0, x1
  405738:	b.ls	406504 <wcrtomb@plt+0x37c4>  // b.plast
  40573c:	ldrb	w0, [x1]
  405740:	add	x2, x1, #0x1
  405744:	str	x2, [x28, #8]
  405748:	cmp	w0, #0xa
  40574c:	sbfiz	x2, x0, #1, #32
  405750:	b.eq	40579c <wcrtomb@plt+0x2a5c>  // b.none
  405754:	ldr	x1, [x20]
  405758:	ldrh	w1, [x1, x2]
  40575c:	tbz	w1, #0, 4057b4 <wcrtomb@plt+0x2a74>
  405760:	ldr	x1, [x28, #8]
  405764:	cbnz	x1, 405730 <wcrtomb@plt+0x29f0>
  405768:	ldr	x0, [x28, #24]
  40576c:	cbz	x0, 406504 <wcrtomb@plt+0x37c4>
  405770:	ldr	w1, [x0]
  405774:	tbnz	w1, #4, 406504 <wcrtomb@plt+0x37c4>
  405778:	ldp	x1, x2, [x0, #8]
  40577c:	cmp	x1, x2
  405780:	b.cs	406410 <wcrtomb@plt+0x36d0>  // b.hs, b.nlast
  405784:	add	x2, x1, #0x1
  405788:	str	x2, [x0, #8]
  40578c:	ldrb	w0, [x1]
  405790:	cmp	w0, #0xa
  405794:	sbfiz	x2, x0, #1, #32
  405798:	b.ne	405754 <wcrtomb@plt+0x2a14>  // b.any
  40579c:	ldr	x1, [x28, #40]
  4057a0:	add	x1, x1, #0x1
  4057a4:	str	x1, [x28, #40]
  4057a8:	ldr	x1, [x20]
  4057ac:	ldrh	w1, [x1, x2]
  4057b0:	tbnz	w1, #0, 405760 <wcrtomb@plt+0x2a20>
  4057b4:	cmp	w0, #0x7d
  4057b8:	mov	w1, #0x23                  	// #35
  4057bc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4057c0:	b.eq	406370 <wcrtomb@plt+0x3630>  // b.none
  4057c4:	cmp	w0, #0xa
  4057c8:	mov	w1, #0x3b                  	// #59
  4057cc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4057d0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4057d4:	b.ne	406e0c <wcrtomb@plt+0x40cc>  // b.any
  4057d8:	ldr	x23, [x28, #8]
  4057dc:	ldr	x24, [x19, #16]
  4057e0:	b	405600 <wcrtomb@plt+0x28c0>
  4057e4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  4057e8:	add	x0, x28, #0xd8
  4057ec:	mov	w2, #0x1                   	// #1
  4057f0:	ldr	x1, [x1, #1152]
  4057f4:	bl	403c60 <wcrtomb@plt+0xf20>
  4057f8:	str	x0, [x22, #24]
  4057fc:	ldr	x23, [x28, #8]
  405800:	ldr	x24, [x19, #16]
  405804:	b	405600 <wcrtomb@plt+0x28c0>
  405808:	ldr	x0, [x22]
  40580c:	cbnz	x0, 406df0 <wcrtomb@plt+0x40b0>
  405810:	bl	4035d0 <wcrtomb@plt+0x890>
  405814:	mov	x25, x0
  405818:	ldrb	w0, [x0]
  40581c:	cbz	w0, 406dd4 <wcrtomb@plt+0x4094>
  405820:	ldp	x1, x7, [x28, #80]
  405824:	add	x23, x28, #0x38
  405828:	ldr	x26, [x19, #16]
  40582c:	ldr	x27, [x28, #192]
  405830:	mov	x24, x26
  405834:	sub	x0, x7, x1
  405838:	cmp	x0, #0x2f
  40583c:	b.ls	4067a0 <wcrtomb@plt+0x3a60>  // b.plast
  405840:	ldr	x3, [x28, #72]
  405844:	add	x1, x1, #0x30
  405848:	cmp	x1, x3
  40584c:	b.eq	4067c4 <wcrtomb@plt+0x3a84>  // b.none
  405850:	ldr	x2, [x28, #104]
  405854:	ldr	x0, [x28, #64]
  405858:	add	x1, x1, x2
  40585c:	bic	x1, x1, x2
  405860:	str	x1, [x28, #80]
  405864:	sub	x2, x1, x0
  405868:	sub	x0, x7, x0
  40586c:	cmp	x2, x0
  405870:	b.ls	40587c <wcrtomb@plt+0x2b3c>  // b.plast
  405874:	mov	x1, x7
  405878:	str	x7, [x28, #80]
  40587c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  405880:	str	x1, [x28, #72]
  405884:	str	x27, [x3, #40]
  405888:	ldrb	w0, [x0, #1925]
  40588c:	stp	x26, x25, [x3]
  405890:	str	x3, [x28, #192]
  405894:	ldr	x23, [x28, #8]
  405898:	cbz	w0, 405600 <wcrtomb@plt+0x28c0>
  40589c:	mov	x0, x25
  4058a0:	bl	402990 <strdup@plt>
  4058a4:	str	x0, [x22, #24]
  4058a8:	b	405600 <wcrtomb@plt+0x28c0>
  4058ac:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4058b0:	ldrb	w0, [x0, #1924]
  4058b4:	cbnz	w0, 40629c <wcrtomb@plt+0x355c>
  4058b8:	bl	40d000 <wcrtomb@plt+0xa2c0>
  4058bc:	mov	x23, x0
  4058c0:	bl	403380 <wcrtomb@plt+0x640>
  4058c4:	cmp	w0, #0xa
  4058c8:	mov	w1, w0
  4058cc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4058d0:	b.eq	405914 <wcrtomb@plt+0x2bd4>  // b.none
  4058d4:	nop
  4058d8:	mov	x0, x23
  4058dc:	bl	40d118 <wcrtomb@plt+0xa3d8>
  4058e0:	ldr	x1, [x28, #8]
  4058e4:	cbz	x1, 406058 <wcrtomb@plt+0x3318>
  4058e8:	ldr	x0, [x28, #16]
  4058ec:	cmp	x1, x0
  4058f0:	b.cs	405914 <wcrtomb@plt+0x2bd4>  // b.hs, b.nlast
  4058f4:	add	x0, x1, #0x1
  4058f8:	ldrb	w1, [x1]
  4058fc:	str	x0, [x28, #8]
  405900:	cmp	w1, #0xa
  405904:	b.ne	4058d8 <wcrtomb@plt+0x2b98>  // b.any
  405908:	ldr	x0, [x28, #40]
  40590c:	add	x0, x0, #0x1
  405910:	str	x0, [x28, #40]
  405914:	mov	w1, #0x0                   	// #0
  405918:	mov	x0, x23
  40591c:	bl	40d118 <wcrtomb@plt+0xa3d8>
  405920:	mov	x0, x23
  405924:	bl	40d048 <wcrtomb@plt+0xa308>
  405928:	ldrb	w1, [x0]
  40592c:	cbz	w1, 406db8 <wcrtomb@plt+0x4078>
  405930:	bl	4187a8 <wcrtomb@plt+0x15a68>
  405934:	str	x0, [x22, #24]
  405938:	mov	x0, x23
  40593c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  405940:	ldr	x23, [x28, #8]
  405944:	ldr	x24, [x19, #16]
  405948:	b	405600 <wcrtomb@plt+0x28c0>
  40594c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  405950:	ldrb	w0, [x0, #1924]
  405954:	cbnz	w0, 40629c <wcrtomb@plt+0x355c>
  405958:	bl	403380 <wcrtomb@plt+0x640>
  40595c:	cmp	w0, #0xa
  405960:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  405964:	b.ne	405618 <wcrtomb@plt+0x28d8>  // b.any
  405968:	ldr	x23, [x28, #8]
  40596c:	ldr	x24, [x19, #16]
  405970:	str	xzr, [x22, #32]
  405974:	b	405600 <wcrtomb@plt+0x28c0>
  405978:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40597c:	add	x0, x28, #0xd0
  405980:	mov	w2, #0x0                   	// #0
  405984:	ldr	x1, [x1, #1144]
  405988:	bl	403c60 <wcrtomb@plt+0xf20>
  40598c:	str	x0, [x22, #24]
  405990:	ldr	x23, [x28, #8]
  405994:	ldr	x24, [x19, #16]
  405998:	b	405600 <wcrtomb@plt+0x28c0>
  40599c:	ldr	x0, [x22]
  4059a0:	cbnz	x0, 406d9c <wcrtomb@plt+0x405c>
  4059a4:	ldr	x23, [x28, #8]
  4059a8:	cbz	x23, 4067d4 <wcrtomb@plt+0x3a94>
  4059ac:	ldr	x0, [x28, #16]
  4059b0:	cmp	x23, x0
  4059b4:	b.cs	405358 <wcrtomb@plt+0x2618>  // b.hs, b.nlast
  4059b8:	ldrb	w0, [x23]
  4059bc:	add	x1, x23, #0x1
  4059c0:	str	x1, [x28, #8]
  4059c4:	cmp	w0, #0xa
  4059c8:	b.eq	406804 <wcrtomb@plt+0x3ac4>  // b.none
  4059cc:	cmp	w0, #0x6e
  4059d0:	b.ne	406510 <wcrtomb@plt+0x37d0>  // b.any
  4059d4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4059d8:	ldrb	w0, [x0, #1088]
  4059dc:	cbz	w0, 4059ec <wcrtomb@plt+0x2cac>
  4059e0:	ldr	x0, [x28, #40]
  4059e4:	cmp	x0, #0x1
  4059e8:	b.ls	406b40 <wcrtomb@plt+0x3e00>  // b.plast
  4059ec:	ldr	x0, [x28, #8]
  4059f0:	cbz	x0, 405a20 <wcrtomb@plt+0x2ce0>
  4059f4:	nop
  4059f8:	ldr	x1, [x28, #16]
  4059fc:	cmp	x1, x0
  405a00:	b.ls	40651c <wcrtomb@plt+0x37dc>  // b.plast
  405a04:	add	x23, x0, #0x1
  405a08:	ldrb	w0, [x0]
  405a0c:	str	x23, [x28, #8]
  405a10:	cmp	w0, #0xa
  405a14:	b.eq	405a54 <wcrtomb@plt+0x2d14>  // b.none
  405a18:	mov	x0, x23
  405a1c:	cbnz	x0, 4059f8 <wcrtomb@plt+0x2cb8>
  405a20:	ldr	x23, [x28, #24]
  405a24:	cbz	x23, 4054f0 <wcrtomb@plt+0x27b0>
  405a28:	ldr	w0, [x23]
  405a2c:	tbnz	w0, #4, 4054f0 <wcrtomb@plt+0x27b0>
  405a30:	ldp	x0, x1, [x23, #8]
  405a34:	cmp	x0, x1
  405a38:	b.cs	4069cc <wcrtomb@plt+0x3c8c>  // b.hs, b.nlast
  405a3c:	add	x1, x0, #0x1
  405a40:	str	x1, [x23, #8]
  405a44:	ldrb	w0, [x0]
  405a48:	cmp	w0, #0xa
  405a4c:	b.ne	405a20 <wcrtomb@plt+0x2ce0>  // b.any
  405a50:	mov	x23, #0x0                   	// #0
  405a54:	ldr	x0, [x28, #40]
  405a58:	add	x0, x0, #0x1
  405a5c:	str	x0, [x28, #40]
  405a60:	b	405358 <wcrtomb@plt+0x2618>
  405a64:	ldr	x0, [x28, #184]
  405a68:	cbz	x0, 406d84 <wcrtomb@plt+0x4044>
  405a6c:	ldr	x0, [x22]
  405a70:	cbnz	x0, 406d68 <wcrtomb@plt+0x4028>
  405a74:	bl	4045b8 <wcrtomb@plt+0x1878>
  405a78:	ldr	x2, [x28, #184]
  405a7c:	ldr	x6, [x19]
  405a80:	ldp	x1, x0, [x2]
  405a84:	ldr	x3, [x19, #16]
  405a88:	ldr	x22, [x2, #40]
  405a8c:	add	x1, x1, x1, lsl #2
  405a90:	add	x1, x6, x1, lsl #3
  405a94:	str	x3, [x1, #24]
  405a98:	bl	402ae0 <free@plt>
  405a9c:	str	x22, [x28, #184]
  405aa0:	ldr	x23, [x28, #8]
  405aa4:	ldr	x24, [x19, #16]
  405aa8:	b	405600 <wcrtomb@plt+0x28c0>
  405aac:	ldp	x1, x7, [x28, #80]
  405ab0:	add	x23, x28, #0x38
  405ab4:	ldr	x25, [x19, #16]
  405ab8:	ldr	x24, [x28, #184]
  405abc:	sub	x0, x7, x1
  405ac0:	cmp	x0, #0x2f
  405ac4:	b.ls	406740 <wcrtomb@plt+0x3a00>  // b.plast
  405ac8:	ldr	x0, [x28, #72]
  405acc:	add	x1, x1, #0x30
  405ad0:	cmp	x1, x0
  405ad4:	b.eq	406760 <wcrtomb@plt+0x3a20>  // b.none
  405ad8:	ldr	x2, [x28, #104]
  405adc:	ldr	x3, [x28, #64]
  405ae0:	add	x1, x1, x2
  405ae4:	bic	x1, x1, x2
  405ae8:	str	x1, [x28, #80]
  405aec:	sub	x2, x1, x3
  405af0:	sub	x3, x7, x3
  405af4:	cmp	x2, x3
  405af8:	b.ls	405b04 <wcrtomb@plt+0x2dc4>  // b.plast
  405afc:	mov	x1, x7
  405b00:	str	x7, [x28, #80]
  405b04:	str	x1, [x28, #72]
  405b08:	stp	x25, xzr, [x0]
  405b0c:	ldp	x2, x3, [x28, #32]
  405b10:	stp	x2, x3, [x0, #16]
  405b14:	ldr	x1, [x28, #48]
  405b18:	str	x1, [x0, #32]
  405b1c:	str	x24, [x0, #40]
  405b20:	str	x0, [x28, #184]
  405b24:	ldrb	w0, [x22, #20]
  405b28:	ldr	x23, [x28, #8]
  405b2c:	cmp	w0, #0x0
  405b30:	cset	w0, eq  // eq = none
  405b34:	strb	w0, [x22, #20]
  405b38:	ldr	x24, [x19, #16]
  405b3c:	b	405600 <wcrtomb@plt+0x28c0>
  405b40:	ldr	x0, [x28, #8]
  405b44:	cbz	x0, 406858 <wcrtomb@plt+0x3b18>
  405b48:	ldr	x1, [x28, #16]
  405b4c:	cmp	x0, x1
  405b50:	b.cs	406bfc <wcrtomb@plt+0x3ebc>  // b.hs, b.nlast
  405b54:	ldrb	w25, [x0]
  405b58:	add	x1, x0, #0x1
  405b5c:	str	x1, [x28, #8]
  405b60:	cmp	w25, #0xa
  405b64:	b.eq	406888 <wcrtomb@plt+0x3b48>  // b.none
  405b68:	mov	w0, w25
  405b6c:	bl	404cc0 <wcrtomb@plt+0x1f80>
  405b70:	str	x0, [sp, #152]
  405b74:	cbz	x0, 406c60 <wcrtomb@plt+0x3f20>
  405b78:	bl	40d048 <wcrtomb@plt+0xa308>
  405b7c:	mov	x24, x0
  405b80:	ldr	x0, [sp, #152]
  405b84:	bl	40d050 <wcrtomb@plt+0xa310>
  405b88:	mov	x1, x0
  405b8c:	mov	x0, x24
  405b90:	bl	404780 <wcrtomb@plt+0x1a40>
  405b94:	mov	x23, x0
  405b98:	mov	w0, w25
  405b9c:	bl	404cc0 <wcrtomb@plt+0x1f80>
  405ba0:	str	x0, [sp, #160]
  405ba4:	cbz	x0, 406c60 <wcrtomb@plt+0x3f20>
  405ba8:	bl	40d048 <wcrtomb@plt+0xa308>
  405bac:	mov	x25, x0
  405bb0:	ldr	x0, [sp, #160]
  405bb4:	str	x25, [sp, #128]
  405bb8:	bl	40d050 <wcrtomb@plt+0xa310>
  405bbc:	mov	x1, x0
  405bc0:	mov	x0, x25
  405bc4:	bl	404780 <wcrtomb@plt+0x1a40>
  405bc8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  405bcc:	str	x0, [sp, #104]
  405bd0:	ldr	w0, [x1, #2284]
  405bd4:	cmp	w0, #0x1
  405bd8:	b.gt	406480 <wcrtomb@plt+0x3740>
  405bdc:	add	x25, x28, #0x38
  405be0:	ldp	x1, x7, [x25, #24]
  405be4:	sub	x0, x7, x1
  405be8:	cmp	x0, #0xff
  405bec:	b.ls	4069f0 <wcrtomb@plt+0x3cb0>  // b.plast
  405bf0:	add	x0, x1, #0x100
  405bf4:	ldr	x1, [x28, #72]
  405bf8:	cmp	x0, x1
  405bfc:	b.eq	406a10 <wcrtomb@plt+0x3cd0>  // b.none
  405c00:	ldr	x2, [x28, #104]
  405c04:	ldr	x3, [x28, #64]
  405c08:	add	x0, x0, x2
  405c0c:	bic	x0, x0, x2
  405c10:	str	x0, [x28, #80]
  405c14:	sub	x2, x0, x3
  405c18:	sub	x3, x7, x3
  405c1c:	cmp	x2, x3
  405c20:	b.ls	405c2c <wcrtomb@plt+0x2eec>  // b.plast
  405c24:	mov	x0, x7
  405c28:	str	x7, [x28, #80]
  405c2c:	str	x0, [x28, #72]
  405c30:	ldr	x0, [sp, #104]
  405c34:	cmp	x23, x0
  405c38:	b.ne	406658 <wcrtomb@plt+0x3918>  // b.any
  405c3c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c40:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c44:	ldr	q0, [x0, #2704]
  405c48:	mov	x0, #0x0                   	// #0
  405c4c:	ldr	q2, [x2, #2720]
  405c50:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c54:	ldr	q1, [x2, #2736]
  405c58:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c5c:	stp	q0, q2, [x1]
  405c60:	ldr	q0, [x2, #2752]
  405c64:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c68:	str	q1, [x1, #32]
  405c6c:	ldr	q2, [x2, #2768]
  405c70:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c74:	ldr	q1, [x2, #2784]
  405c78:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c7c:	stp	q0, q2, [x1, #48]
  405c80:	ldr	q0, [x2, #2800]
  405c84:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c88:	str	q1, [x1, #80]
  405c8c:	ldr	q2, [x2, #2816]
  405c90:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c94:	ldr	q1, [x2, #2832]
  405c98:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405c9c:	stp	q0, q2, [x1, #96]
  405ca0:	ldr	q0, [x2, #2848]
  405ca4:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405ca8:	str	q1, [x1, #128]
  405cac:	ldr	q2, [x2, #2864]
  405cb0:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405cb4:	ldr	q1, [x2, #2880]
  405cb8:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405cbc:	stp	q0, q2, [x1, #144]
  405cc0:	ldr	q0, [x2, #2896]
  405cc4:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405cc8:	str	q1, [x1, #176]
  405ccc:	ldr	q2, [x2, #2912]
  405cd0:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405cd4:	ldr	q1, [x2, #2928]
  405cd8:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  405cdc:	stp	q0, q2, [x1, #192]
  405ce0:	ldr	q0, [x2, #2944]
  405ce4:	str	q1, [x1, #224]
  405ce8:	str	q0, [x1, #240]
  405cec:	ldr	x2, [sp, #104]
  405cf0:	cbz	x2, 405d18 <wcrtomb@plt+0x2fd8>
  405cf4:	nop
  405cf8:	ldr	x3, [sp, #128]
  405cfc:	ldrb	w2, [x24, x0]
  405d00:	ldr	x4, [sp, #104]
  405d04:	ldrb	w3, [x3, x0]
  405d08:	add	x0, x0, #0x1
  405d0c:	strb	w3, [x1, x2]
  405d10:	cmp	x4, x0
  405d14:	b.ne	405cf8 <wcrtomb@plt+0x2fb8>  // b.any
  405d18:	str	x1, [x22, #24]
  405d1c:	bl	4045b8 <wcrtomb@plt+0x1878>
  405d20:	ldr	x0, [sp, #152]
  405d24:	bl	40d1d8 <wcrtomb@plt+0xa498>
  405d28:	ldr	x0, [sp, #160]
  405d2c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  405d30:	ldr	x23, [x28, #8]
  405d34:	b	4057dc <wcrtomb@plt+0x2a9c>
  405d38:	bl	4035d0 <wcrtomb@plt+0x890>
  405d3c:	mov	x22, x0
  405d40:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  405d44:	add	x0, x0, #0x550
  405d48:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  405d4c:	add	x1, x1, #0x558
  405d50:	ldrb	w2, [x22]
  405d54:	cmp	w2, #0x0
  405d58:	csel	x0, x0, x22, eq  // eq = none
  405d5c:	bl	4028a0 <strverscmp@plt>
  405d60:	cmp	w0, #0x0
  405d64:	b.gt	406c9c <wcrtomb@plt+0x3f5c>
  405d68:	mov	x0, x22
  405d6c:	bl	402ae0 <free@plt>
  405d70:	str	wzr, [x24]
  405d74:	ldr	x23, [x28, #8]
  405d78:	b	405358 <wcrtomb@plt+0x2618>
  405d7c:	ldr	x0, [x28, #8]
  405d80:	cbz	x0, 406818 <wcrtomb@plt+0x3ad8>
  405d84:	ldr	x1, [x28, #16]
  405d88:	cmp	x0, x1
  405d8c:	b.cs	406c04 <wcrtomb@plt+0x3ec4>  // b.hs, b.nlast
  405d90:	ldrb	w25, [x0]
  405d94:	add	x1, x0, #0x1
  405d98:	str	x1, [x28, #8]
  405d9c:	cmp	w25, #0xa
  405da0:	b.eq	406848 <wcrtomb@plt+0x3b08>  // b.none
  405da4:	mov	w0, w25
  405da8:	mov	w1, #0x1                   	// #1
  405dac:	bl	403f68 <wcrtomb@plt+0x1228>
  405db0:	str	x0, [sp, #104]
  405db4:	cbz	x0, 406cd4 <wcrtomb@plt+0x3f94>
  405db8:	mov	w0, w25
  405dbc:	bl	404cc0 <wcrtomb@plt+0x1f80>
  405dc0:	mov	x23, x0
  405dc4:	cbz	x0, 406cd4 <wcrtomb@plt+0x3f94>
  405dc8:	ldp	x1, x6, [x28, #80]
  405dcc:	add	x25, x28, #0x38
  405dd0:	sub	x0, x6, x1
  405dd4:	cmp	x0, #0x27
  405dd8:	b.ls	4066a0 <wcrtomb@plt+0x3960>  // b.plast
  405ddc:	ldr	x5, [x28, #72]
  405de0:	add	x1, x1, #0x28
  405de4:	cmp	x1, x5
  405de8:	b.eq	4066c0 <wcrtomb@plt+0x3980>  // b.none
  405dec:	ldr	x0, [x28, #104]
  405df0:	ldr	x2, [x28, #64]
  405df4:	add	x1, x1, x0
  405df8:	bic	x1, x1, x0
  405dfc:	str	x1, [x28, #80]
  405e00:	sub	x0, x1, x2
  405e04:	sub	x2, x6, x2
  405e08:	cmp	x0, x2
  405e0c:	b.ls	405e18 <wcrtomb@plt+0x30d8>  // b.plast
  405e10:	mov	x1, x6
  405e14:	str	x6, [x28, #80]
  405e18:	str	x5, [x22, #24]
  405e1c:	mov	x0, x23
  405e20:	str	x1, [x28, #72]
  405e24:	add	x27, x28, #0x38
  405e28:	str	x5, [sp, #112]
  405e2c:	bl	40d048 <wcrtomb@plt+0xa308>
  405e30:	mov	x26, x0
  405e34:	mov	x0, x23
  405e38:	bl	40d050 <wcrtomb@plt+0xa310>
  405e3c:	mov	x25, x0
  405e40:	ldr	x5, [sp, #112]
  405e44:	mov	x0, x26
  405e48:	str	x5, [sp, #120]
  405e4c:	ldrb	w1, [x5, #32]
  405e50:	and	w1, w1, #0xf
  405e54:	strb	w1, [x5, #32]
  405e58:	mov	x1, x25
  405e5c:	bl	418768 <wcrtomb@plt+0x15a28>
  405e60:	str	x0, [sp, #112]
  405e64:	mov	w2, #0x1                   	// #1
  405e68:	mov	x1, x25
  405e6c:	bl	404f10 <wcrtomb@plt+0x21d0>
  405e70:	ldp	x4, x5, [sp, #112]
  405e74:	add	x2, x4, x0
  405e78:	cmp	x4, x2
  405e7c:	b.cs	406a60 <wcrtomb@plt+0x3d20>  // b.hs, b.nlast
  405e80:	mov	x25, x4
  405e84:	add	x7, sp, #0xd0
  405e88:	mov	w10, #0x0                   	// #0
  405e8c:	mov	w6, #0x0                   	// #0
  405e90:	b	405ea8 <wcrtomb@plt+0x3168>
  405e94:	cmp	w1, #0x26
  405e98:	b.eq	406124 <wcrtomb@plt+0x33e4>  // b.none
  405e9c:	mov	x25, x26
  405ea0:	cmp	x2, x25
  405ea4:	b.ls	405f70 <wcrtomb@plt+0x3230>  // b.plast
  405ea8:	mov	x26, x25
  405eac:	ldrb	w1, [x26], #1
  405eb0:	cmp	w1, #0x5c
  405eb4:	b.ne	405e94 <wcrtomb@plt+0x3154>  // b.any
  405eb8:	ldp	x1, x13, [x27, #24]
  405ebc:	sub	x11, x25, x4
  405ec0:	sub	x0, x13, x1
  405ec4:	cmp	x0, #0x1f
  405ec8:	b.ls	4063b8 <wcrtomb@plt+0x3678>  // b.plast
  405ecc:	add	x3, x1, #0x20
  405ed0:	ldr	x1, [x27, #16]
  405ed4:	cmp	x3, x1
  405ed8:	b.eq	406400 <wcrtomb@plt+0x36c0>  // b.none
  405edc:	ldr	x0, [x27, #48]
  405ee0:	ldr	x12, [x27, #8]
  405ee4:	add	x3, x3, x0
  405ee8:	bic	x3, x3, x0
  405eec:	str	x3, [x27, #24]
  405ef0:	sub	x0, x3, x12
  405ef4:	sub	x12, x13, x12
  405ef8:	cmp	x0, x12
  405efc:	b.ls	405f08 <wcrtomb@plt+0x31c8>  // b.plast
  405f00:	mov	x3, x13
  405f04:	str	x13, [x27, #24]
  405f08:	str	x3, [x27, #16]
  405f0c:	mov	w0, #0xffffffff            	// #-1
  405f10:	stp	x4, x11, [x1]
  405f14:	cmp	x2, x26
  405f18:	stp	w0, w6, [x1, #16]
  405f1c:	str	x1, [x7, #24]
  405f20:	b.eq	406418 <wcrtomb@plt+0x36d8>  // b.none
  405f24:	ldr	w3, [x24]
  405f28:	ldrb	w0, [x25, #1]
  405f2c:	cmp	w3, #0x2
  405f30:	b.eq	406524 <wcrtomb@plt+0x37e4>  // b.none
  405f34:	cmp	w0, #0x55
  405f38:	b.eq	406a48 <wcrtomb@plt+0x3d08>  // b.none
  405f3c:	b.hi	406210 <wcrtomb@plt+0x34d0>  // b.pmore
  405f40:	cmp	w0, #0x45
  405f44:	b.eq	4068f4 <wcrtomb@plt+0x3bb4>  // b.none
  405f48:	b.ls	4061dc <wcrtomb@plt+0x349c>  // b.plast
  405f4c:	cmp	w0, #0x4c
  405f50:	b.ne	406534 <wcrtomb@plt+0x37f4>  // b.any
  405f54:	mov	w10, #0x2                   	// #2
  405f58:	mov	w6, w10
  405f5c:	add	x25, x25, #0x2
  405f60:	mov	x7, x1
  405f64:	mov	x4, x25
  405f68:	cmp	x2, x25
  405f6c:	b.hi	405ea8 <wcrtomb@plt+0x3168>  // b.pmore
  405f70:	cmp	x2, x4
  405f74:	b.hi	4066d0 <wcrtomb@plt+0x3990>  // b.pmore
  405f78:	str	xzr, [x7, #24]
  405f7c:	mov	x0, x23
  405f80:	mov	w25, #0x0                   	// #0
  405f84:	ldr	x1, [sp, #232]
  405f88:	str	x1, [x5, #8]
  405f8c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  405f90:	ldr	x26, [x22, #24]
  405f94:	ldrb	w0, [x26, #32]
  405f98:	stp	xzr, xzr, [x26, #16]
  405f9c:	and	w0, w0, #0xfffffff0
  405fa0:	strb	w0, [x26, #32]
  405fa4:	bl	403380 <wcrtomb@plt+0x640>
  405fa8:	mov	w2, w0
  405fac:	cmp	w0, #0x65
  405fb0:	b.eq	4062fc <wcrtomb@plt+0x35bc>  // b.none
  405fb4:	b.gt	40622c <wcrtomb@plt+0x34ec>
  405fb8:	cmp	w0, #0x39
  405fbc:	b.gt	4062cc <wcrtomb@plt+0x358c>
  405fc0:	cmp	w0, #0x2f
  405fc4:	b.gt	406940 <wcrtomb@plt+0x3c00>
  405fc8:	cmp	w0, #0xd
  405fcc:	b.eq	40696c <wcrtomb@plt+0x3c2c>  // b.none
  405fd0:	b.le	4062b8 <wcrtomb@plt+0x3578>
  405fd4:	cmp	w0, #0x23
  405fd8:	b.ne	406994 <wcrtomb@plt+0x3c54>  // b.any
  405fdc:	ldr	x0, [x28, #8]
  405fe0:	cbz	x0, 406328 <wcrtomb@plt+0x35e8>
  405fe4:	ldr	x1, [x28]
  405fe8:	cmp	x0, x1
  405fec:	b.ls	406004 <wcrtomb@plt+0x32c4>  // b.plast
  405ff0:	sub	x1, x0, #0x1
  405ff4:	ldurb	w0, [x0, #-1]
  405ff8:	str	x1, [x28, #8]
  405ffc:	cmp	w2, w0
  406000:	b.eq	406258 <wcrtomb@plt+0x3518>  // b.none
  406004:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  406008:	mov	w1, w2
  40600c:	add	x0, x0, #0x4d8
  406010:	bl	40c380 <wcrtomb@plt+0x9640>
  406014:	add	x1, x1, #0x28
  406018:	mov	x0, #0x28                  	// #40
  40601c:	str	x1, [x19, #8]
  406020:	umulh	x2, x1, x0
  406024:	mul	x0, x1, x0
  406028:	cmp	x2, #0x0
  40602c:	cset	x2, ne  // ne = any
  406030:	tbnz	x0, #63, 406cec <wcrtomb@plt+0x3fac>
  406034:	cbnz	x2, 406cec <wcrtomb@plt+0x3fac>
  406038:	add	x1, x1, x1, lsl #2
  40603c:	mov	x0, x3
  406040:	lsl	x1, x1, #3
  406044:	bl	418660 <wcrtomb@plt+0x15920>
  406048:	mov	x3, x0
  40604c:	str	x0, [x19]
  406050:	ldr	x1, [x19, #16]
  406054:	b	4053a8 <wcrtomb@plt+0x2668>
  406058:	ldr	x0, [x28, #24]
  40605c:	cbz	x0, 405914 <wcrtomb@plt+0x2bd4>
  406060:	ldr	w1, [x0]
  406064:	tbnz	w1, #4, 405914 <wcrtomb@plt+0x2bd4>
  406068:	ldp	x1, x2, [x0, #8]
  40606c:	cmp	x1, x2
  406070:	b.cs	4069b0 <wcrtomb@plt+0x3c70>  // b.hs, b.nlast
  406074:	add	x2, x1, #0x1
  406078:	str	x2, [x0, #8]
  40607c:	ldrb	w1, [x1]
  406080:	b	405900 <wcrtomb@plt+0x2bc0>
  406084:	bl	402d00 <__uflow@plt>
  406088:	mov	w23, w0
  40608c:	b	405410 <wcrtomb@plt+0x26d0>
  406090:	mov	x0, #0xfffffffffffffffe    	// #-2
  406094:	mov	w23, #0xffffffff            	// #-1
  406098:	b	40541c <wcrtomb@plt+0x26dc>
  40609c:	bl	403380 <wcrtomb@plt+0x640>
  4060a0:	mov	w1, w0
  4060a4:	add	x0, sp, #0xb0
  4060a8:	bl	404238 <wcrtomb@plt+0x14f8>
  4060ac:	tst	w0, #0xff
  4060b0:	b.eq	406c78 <wcrtomb@plt+0x3f38>  // b.none
  4060b4:	mov	x1, #0x20                  	// #32
  4060b8:	add	x0, sp, #0xb0
  4060bc:	bl	418768 <wcrtomb@plt+0x15a28>
  4060c0:	str	x0, [x22, #8]
  4060c4:	bl	403380 <wcrtomb@plt+0x640>
  4060c8:	mov	w23, w0
  4060cc:	b	405484 <wcrtomb@plt+0x2744>
  4060d0:	mov	x0, x23
  4060d4:	bl	402d00 <__uflow@plt>
  4060d8:	mov	w23, w0
  4060dc:	b	405374 <wcrtomb@plt+0x2634>
  4060e0:	mov	w0, #0xffffffff            	// #-1
  4060e4:	str	w0, [x22, #24]
  4060e8:	cmp	w2, w0
  4060ec:	b.eq	405760 <wcrtomb@plt+0x2a20>  // b.none
  4060f0:	cmp	w2, #0xa
  4060f4:	b.eq	406674 <wcrtomb@plt+0x3934>  // b.none
  4060f8:	ldr	x0, [x28, #8]
  4060fc:	cbz	x0, 40668c <wcrtomb@plt+0x394c>
  406100:	ldr	x1, [x28]
  406104:	cmp	x0, x1
  406108:	b.ls	406004 <wcrtomb@plt+0x32c4>  // b.plast
  40610c:	sub	x1, x0, #0x1
  406110:	ldurb	w0, [x0, #-1]
  406114:	str	x1, [x28, #8]
  406118:	cmp	w2, w0
  40611c:	b.eq	405728 <wcrtomb@plt+0x29e8>  // b.none
  406120:	b	406004 <wcrtomb@plt+0x32c4>
  406124:	ldp	x0, x13, [x27, #24]
  406128:	sub	x3, x25, x4
  40612c:	sub	x1, x13, x0
  406130:	cmp	x1, #0x1f
  406134:	b.ls	406428 <wcrtomb@plt+0x36e8>  // b.plast
  406138:	ldr	x1, [x27, #16]
  40613c:	add	x0, x0, #0x20
  406140:	cmp	x0, x1
  406144:	b.eq	406470 <wcrtomb@plt+0x3730>  // b.none
  406148:	ldr	x11, [x27, #48]
  40614c:	ldr	x12, [x27, #8]
  406150:	add	x0, x0, x11
  406154:	bic	x0, x0, x11
  406158:	str	x0, [x27, #24]
  40615c:	sub	x11, x0, x12
  406160:	sub	x12, x13, x12
  406164:	cmp	x11, x12
  406168:	b.ls	406174 <wcrtomb@plt+0x3434>  // b.plast
  40616c:	mov	x0, x13
  406170:	str	x13, [x27, #24]
  406174:	str	x0, [x27, #16]
  406178:	mov	x25, x26
  40617c:	stp	x4, x3, [x1]
  406180:	mov	x4, x26
  406184:	str	w6, [x1, #20]
  406188:	mov	w6, w10
  40618c:	str	x1, [x7, #24]
  406190:	mov	x7, x1
  406194:	str	wzr, [x1, #16]
  406198:	b	405ea0 <wcrtomb@plt+0x3160>
  40619c:	mov	x23, #0x0                   	// #0
  4061a0:	ldr	x0, [x20]
  4061a4:	ldurh	w0, [x0, #-2]
  4061a8:	tbnz	w0, #13, 405358 <wcrtomb@plt+0x2618>
  4061ac:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4061b0:	ldr	w0, [x0, #2288]
  4061b4:	cmp	w0, #0x2
  4061b8:	b.eq	406a68 <wcrtomb@plt+0x3d28>  // b.none
  4061bc:	mov	x0, x19
  4061c0:	ldp	x19, x20, [sp, #16]
  4061c4:	ldp	x21, x22, [sp, #32]
  4061c8:	ldp	x23, x24, [sp, #48]
  4061cc:	ldp	x25, x26, [sp, #64]
  4061d0:	ldp	x27, x28, [sp, #80]
  4061d4:	ldp	x29, x30, [sp], #240
  4061d8:	ret
  4061dc:	sub	w3, w0, #0x30
  4061e0:	and	w6, w3, #0xff
  4061e4:	cmp	w6, #0x9
  4061e8:	b.hi	406534 <wcrtomb@plt+0x37f4>  // b.pmore
  4061ec:	ldrb	w0, [x5, #32]
  4061f0:	mov	w6, w10
  4061f4:	str	w3, [x1, #16]
  4061f8:	ubfx	x7, x0, #4, #4
  4061fc:	cmp	w3, w7
  406200:	b.le	405f5c <wcrtomb@plt+0x321c>
  406204:	bfi	w0, w3, #4, #4
  406208:	strb	w0, [x5, #32]
  40620c:	b	405f5c <wcrtomb@plt+0x321c>
  406210:	cmp	w0, #0x6c
  406214:	orr	w6, w10, #0x8
  406218:	b.eq	405f5c <wcrtomb@plt+0x321c>  // b.none
  40621c:	cmp	w0, #0x75
  406220:	orr	w6, w10, #0x4
  406224:	b.eq	405f5c <wcrtomb@plt+0x321c>  // b.none
  406228:	b	406534 <wcrtomb@plt+0x37f4>
  40622c:	cmp	w0, #0x70
  406230:	b.eq	406900 <wcrtomb@plt+0x3bc0>  // b.none
  406234:	b.le	406338 <wcrtomb@plt+0x35f8>
  406238:	cmp	w0, #0x77
  40623c:	b.ne	406318 <wcrtomb@plt+0x35d8>  // b.any
  406240:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  406244:	add	x0, x28, #0xd8
  406248:	mov	w2, #0x1                   	// #1
  40624c:	ldr	x1, [x1, #1152]
  406250:	bl	403c60 <wcrtomb@plt+0xf20>
  406254:	str	x0, [x26, #24]
  406258:	ldr	x24, [x22, #24]
  40625c:	mov	w1, w25
  406260:	ldr	x23, [sp, #104]
  406264:	ldrb	w2, [x24, #32]
  406268:	mov	x0, x23
  40626c:	ubfx	x2, x2, #4, #4
  406270:	add	w2, w2, #0x1
  406274:	bl	40b9f8 <wcrtomb@plt+0x8cb8>
  406278:	str	x0, [x24]
  40627c:	mov	x0, x23
  406280:	bl	40d1d8 <wcrtomb@plt+0xa498>
  406284:	ldr	x0, [x22, #24]
  406288:	ldrb	w0, [x0, #32]
  40628c:	tbz	w0, #3, 4057d8 <wcrtomb@plt+0x2a98>
  406290:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  406294:	ldrb	w0, [x0, #1924]
  406298:	cbz	w0, 4057d8 <wcrtomb@plt+0x2a98>
  40629c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4062a0:	add	x1, x1, #0x6c0
  4062a4:	add	x1, x1, #0x334
  4062a8:	mov	w2, #0x5                   	// #5
  4062ac:	mov	x0, #0x0                   	// #0
  4062b0:	bl	402c20 <dcgettext@plt>
  4062b4:	bl	403ba8 <wcrtomb@plt+0xe68>
  4062b8:	cmn	w0, #0x1
  4062bc:	b.eq	406258 <wcrtomb@plt+0x3518>  // b.none
  4062c0:	cmp	w0, #0xa
  4062c4:	b.eq	406258 <wcrtomb@plt+0x3518>  // b.none
  4062c8:	b	406994 <wcrtomb@plt+0x3c54>
  4062cc:	cmp	w0, #0x49
  4062d0:	b.eq	40692c <wcrtomb@plt+0x3bec>  // b.none
  4062d4:	cmp	w0, #0x4d
  4062d8:	b.ne	406364 <wcrtomb@plt+0x3624>  // b.any
  4062dc:	ldr	w0, [x24]
  4062e0:	cmp	w0, #0x2
  4062e4:	b.eq	406994 <wcrtomb@plt+0x3c54>  // b.none
  4062e8:	bl	403380 <wcrtomb@plt+0x640>
  4062ec:	orr	w25, w25, #0x4
  4062f0:	mov	w2, w0
  4062f4:	cmp	w0, #0x65
  4062f8:	b.ne	405fb4 <wcrtomb@plt+0x3274>  // b.any
  4062fc:	ldr	w0, [x24]
  406300:	cmp	w0, #0x2
  406304:	b.eq	406994 <wcrtomb@plt+0x3c54>  // b.none
  406308:	ldrb	w0, [x26, #32]
  40630c:	orr	w0, w0, #0x8
  406310:	strb	w0, [x26, #32]
  406314:	b	405fa4 <wcrtomb@plt+0x3264>
  406318:	cmp	w0, #0x7d
  40631c:	b.ne	406994 <wcrtomb@plt+0x3c54>  // b.any
  406320:	ldr	x0, [x28, #8]
  406324:	cbnz	x0, 405fe4 <wcrtomb@plt+0x32a4>
  406328:	ldr	x1, [x28, #24]
  40632c:	mov	w0, w2
  406330:	bl	402af0 <ungetc@plt>
  406334:	b	406258 <wcrtomb@plt+0x3518>
  406338:	cmp	w0, #0x69
  40633c:	b.eq	40692c <wcrtomb@plt+0x3bec>  // b.none
  406340:	cmp	w0, #0x6d
  406344:	b.eq	4062dc <wcrtomb@plt+0x359c>  // b.none
  406348:	cmp	w0, #0x67
  40634c:	b.ne	406994 <wcrtomb@plt+0x3c54>  // b.any
  406350:	ldrb	w0, [x26, #32]
  406354:	tbnz	w0, #0, 406cb8 <wcrtomb@plt+0x3f78>
  406358:	orr	w0, w0, #0x1
  40635c:	strb	w0, [x26, #32]
  406360:	b	405fa4 <wcrtomb@plt+0x3264>
  406364:	cmp	w0, #0x3b
  406368:	b.eq	406258 <wcrtomb@plt+0x3518>  // b.none
  40636c:	b	406994 <wcrtomb@plt+0x3c54>
  406370:	cmn	w0, #0x1
  406374:	ldr	x1, [x28, #8]
  406378:	b.eq	406a54 <wcrtomb@plt+0x3d14>  // b.none
  40637c:	cmp	w0, #0xa
  406380:	b.eq	406a20 <wcrtomb@plt+0x3ce0>  // b.none
  406384:	cbz	x1, 406a34 <wcrtomb@plt+0x3cf4>
  406388:	ldr	x2, [x28]
  40638c:	cmp	x2, x1
  406390:	b.cs	4063a8 <wcrtomb@plt+0x3668>  // b.hs, b.nlast
  406394:	sub	x23, x1, #0x1
  406398:	ldurb	w1, [x1, #-1]
  40639c:	str	x23, [x28, #8]
  4063a0:	cmp	w0, w1
  4063a4:	b.eq	4057dc <wcrtomb@plt+0x2a9c>  // b.none
  4063a8:	mov	w1, w0
  4063ac:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4063b0:	add	x0, x0, #0x4d8
  4063b4:	bl	40c380 <wcrtomb@plt+0x9640>
  4063b8:	mov	x1, #0x20                  	// #32
  4063bc:	mov	x0, x27
  4063c0:	str	x5, [sp, #112]
  4063c4:	str	w6, [sp, #120]
  4063c8:	str	w10, [sp, #128]
  4063cc:	stp	x7, x4, [sp, #136]
  4063d0:	stp	x2, x11, [sp, #152]
  4063d4:	bl	418ad8 <_obstack_newchunk@@Base>
  4063d8:	ldr	w6, [sp, #120]
  4063dc:	ldp	x1, x13, [x27, #24]
  4063e0:	ldr	w10, [sp, #128]
  4063e4:	ldr	x5, [sp, #112]
  4063e8:	ldp	x7, x4, [sp, #136]
  4063ec:	add	x3, x1, #0x20
  4063f0:	ldr	x1, [x27, #16]
  4063f4:	ldp	x2, x11, [sp, #152]
  4063f8:	cmp	x3, x1
  4063fc:	b.ne	405edc <wcrtomb@plt+0x319c>  // b.any
  406400:	ldrb	w0, [x27, #80]
  406404:	orr	w0, w0, #0x2
  406408:	strb	w0, [x27, #80]
  40640c:	b	405edc <wcrtomb@plt+0x319c>
  406410:	bl	402d00 <__uflow@plt>
  406414:	b	405748 <wcrtomb@plt+0x2a08>
  406418:	add	x11, x11, #0x1
  40641c:	mov	w6, w10
  406420:	str	x11, [x1, #8]
  406424:	b	405f5c <wcrtomb@plt+0x321c>
  406428:	mov	x0, x27
  40642c:	mov	x1, #0x20                  	// #32
  406430:	str	x5, [sp, #112]
  406434:	str	w6, [sp, #120]
  406438:	str	w10, [sp, #128]
  40643c:	stp	x7, x4, [sp, #136]
  406440:	stp	x2, x3, [sp, #152]
  406444:	bl	418ad8 <_obstack_newchunk@@Base>
  406448:	ldr	w6, [sp, #120]
  40644c:	ldp	x0, x13, [x27, #24]
  406450:	ldr	x1, [x27, #16]
  406454:	ldr	w10, [sp, #128]
  406458:	ldr	x5, [sp, #112]
  40645c:	add	x0, x0, #0x20
  406460:	cmp	x0, x1
  406464:	ldp	x7, x4, [sp, #136]
  406468:	ldp	x2, x3, [sp, #152]
  40646c:	b.ne	406148 <wcrtomb@plt+0x3408>  // b.any
  406470:	ldrb	w11, [x27, #80]
  406474:	orr	w11, w11, #0x2
  406478:	strb	w11, [x27, #80]
  40647c:	b	406148 <wcrtomb@plt+0x3408>
  406480:	mov	x0, x23
  406484:	mov	x1, #0x8                   	// #8
  406488:	bl	418730 <wcrtomb@plt+0x159f0>
  40648c:	str	x0, [sp, #136]
  406490:	str	xzr, [sp, #208]
  406494:	cbz	x23, 406be4 <wcrtomb@plt+0x3ea4>
  406498:	sub	x27, x0, #0x8
  40649c:	mov	x25, #0x0                   	// #0
  4064a0:	str	xzr, [sp, #120]
  4064a4:	nop
  4064a8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4064ac:	add	x0, x0, #0x8ec
  4064b0:	ldr	w0, [x0]
  4064b4:	cmp	w0, #0x1
  4064b8:	b.eq	4064dc <wcrtomb@plt+0x379c>  // b.none
  4064bc:	add	x1, x24, x25
  4064c0:	add	x3, sp, #0xd0
  4064c4:	sub	x2, x23, x25
  4064c8:	mov	x0, #0x0                   	// #0
  4064cc:	bl	418830 <wcrtomb@plt+0x15af0>
  4064d0:	sub	x1, x0, #0x1
  4064d4:	cmn	x1, #0x4
  4064d8:	b.ls	4064e0 <wcrtomb@plt+0x37a0>  // b.plast
  4064dc:	mov	x0, #0x1                   	// #1
  4064e0:	ldr	x1, [sp, #120]
  4064e4:	add	x25, x25, x0
  4064e8:	cmp	x23, x25
  4064ec:	add	x1, x1, #0x1
  4064f0:	str	x1, [sp, #144]
  4064f4:	str	x0, [x27, x1, lsl #3]
  4064f8:	b.ls	40654c <wcrtomb@plt+0x380c>  // b.plast
  4064fc:	str	x1, [sp, #120]
  406500:	b	4064a8 <wcrtomb@plt+0x3768>
  406504:	mov	x2, #0xfffffffffffffffe    	// #-2
  406508:	mov	w0, #0xffffffff            	// #-1
  40650c:	b	405754 <wcrtomb@plt+0x2a14>
  406510:	cmn	w0, #0x1
  406514:	ldr	x0, [x28, #8]
  406518:	b.ne	4059f0 <wcrtomb@plt+0x2cb0>  // b.any
  40651c:	mov	x23, x0
  406520:	b	405358 <wcrtomb@plt+0x2618>
  406524:	ldr	x6, [x20]
  406528:	ubfiz	x3, x0, #1, #8
  40652c:	ldrh	w3, [x6, x3]
  406530:	tbnz	w3, #11, 405f34 <wcrtomb@plt+0x31f4>
  406534:	strb	w0, [x25]
  406538:	mov	w6, w10
  40653c:	ldr	x0, [x1, #8]
  406540:	add	x0, x0, #0x1
  406544:	str	x0, [x1, #8]
  406548:	b	405f5c <wcrtomb@plt+0x321c>
  40654c:	lsl	x0, x1, #1
  406550:	mov	x1, #0x8                   	// #8
  406554:	add	x0, x0, #0x1
  406558:	str	xzr, [sp, #208]
  40655c:	bl	418730 <wcrtomb@plt+0x159f0>
  406560:	str	x0, [x22, #24]
  406564:	str	x0, [sp, #168]
  406568:	ldr	x0, [sp, #104]
  40656c:	cbz	x0, 406658 <wcrtomb@plt+0x3918>
  406570:	mov	x23, #0x0                   	// #0
  406574:	mov	x22, #0x0                   	// #0
  406578:	ldr	x25, [sp, #168]
  40657c:	b	406590 <wcrtomb@plt+0x3850>
  406580:	ldr	x0, [sp, #104]
  406584:	add	x25, x25, #0x10
  406588:	cmp	x0, x23
  40658c:	b.ls	406658 <wcrtomb@plt+0x3918>  // b.plast
  406590:	ldr	x0, [sp, #136]
  406594:	ldr	x26, [x0, x22, lsl #3]
  406598:	ldr	x0, [sp, #128]
  40659c:	add	x27, x0, x23
  4065a0:	add	x0, x26, #0x1
  4065a4:	bl	418708 <wcrtomb@plt+0x159c8>
  4065a8:	str	x0, [x25]
  4065ac:	mov	x1, x24
  4065b0:	mov	x2, x26
  4065b4:	str	x0, [sp, #112]
  4065b8:	bl	402650 <memcpy@plt>
  4065bc:	ldr	x3, [sp, #112]
  4065c0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4065c4:	add	x0, x0, #0x8ec
  4065c8:	add	x24, x24, x26
  4065cc:	strb	wzr, [x3, x26]
  4065d0:	ldr	w0, [x0]
  4065d4:	cmp	w0, #0x1
  4065d8:	b.eq	406604 <wcrtomb@plt+0x38c4>  // b.none
  4065dc:	ldr	x0, [sp, #104]
  4065e0:	add	x3, sp, #0xd0
  4065e4:	mov	x1, x27
  4065e8:	sub	x2, x0, x23
  4065ec:	mov	x0, #0x0                   	// #0
  4065f0:	bl	418830 <wcrtomb@plt+0x15af0>
  4065f4:	mov	x26, x0
  4065f8:	sub	x0, x0, #0x1
  4065fc:	cmn	x0, #0x4
  406600:	b.ls	406c94 <wcrtomb@plt+0x3f54>  // b.plast
  406604:	mov	x0, #0x2                   	// #2
  406608:	mov	x26, #0x1                   	// #1
  40660c:	bl	418708 <wcrtomb@plt+0x159c8>
  406610:	str	x0, [x25, #8]
  406614:	mov	x1, x27
  406618:	mov	x27, x0
  40661c:	mov	x2, x26
  406620:	bl	402650 <memcpy@plt>
  406624:	ldr	x0, [sp, #120]
  406628:	strb	wzr, [x27, x26]
  40662c:	add	x23, x23, x26
  406630:	cmp	x0, x22
  406634:	add	x22, x22, #0x1
  406638:	b.ne	406580 <wcrtomb@plt+0x3840>  // b.any
  40663c:	ldr	x0, [sp, #144]
  406640:	ldr	x1, [sp, #168]
  406644:	add	x0, x1, x0, lsl #4
  406648:	str	xzr, [x0]
  40664c:	ldr	x0, [sp, #104]
  406650:	cmp	x0, x23
  406654:	b.eq	405d1c <wcrtomb@plt+0x2fdc>  // b.none
  406658:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40665c:	add	x1, x1, #0x6c0
  406660:	add	x1, x1, #0x232
  406664:	mov	w2, #0x5                   	// #5
  406668:	mov	x0, #0x0                   	// #0
  40666c:	bl	402c20 <dcgettext@plt>
  406670:	bl	403ba8 <wcrtomb@plt+0xe68>
  406674:	ldr	x0, [x28, #40]
  406678:	cbz	x0, 4060f8 <wcrtomb@plt+0x33b8>
  40667c:	sub	x0, x0, #0x1
  406680:	str	x0, [x28, #40]
  406684:	ldr	x0, [x28, #8]
  406688:	cbnz	x0, 406100 <wcrtomb@plt+0x33c0>
  40668c:	ldr	x1, [x28, #24]
  406690:	mov	w0, w2
  406694:	bl	402af0 <ungetc@plt>
  406698:	ldr	x1, [x28, #8]
  40669c:	b	405764 <wcrtomb@plt+0x2a24>
  4066a0:	mov	x1, #0x28                  	// #40
  4066a4:	mov	x0, x25
  4066a8:	bl	418ad8 <_obstack_newchunk@@Base>
  4066ac:	ldp	x1, x6, [x28, #80]
  4066b0:	ldr	x5, [x28, #72]
  4066b4:	add	x1, x1, #0x28
  4066b8:	cmp	x1, x5
  4066bc:	b.ne	405dec <wcrtomb@plt+0x30ac>  // b.any
  4066c0:	ldrb	w2, [x28, #136]
  4066c4:	orr	w2, w2, #0x2
  4066c8:	strb	w2, [x28, #136]
  4066cc:	b	405dec <wcrtomb@plt+0x30ac>
  4066d0:	ldp	x1, x12, [x28, #80]
  4066d4:	add	x26, x28, #0x38
  4066d8:	sub	x25, x2, x4
  4066dc:	sub	x0, x12, x1
  4066e0:	cmp	x0, #0x1f
  4066e4:	b.ls	406a8c <wcrtomb@plt+0x3d4c>  // b.plast
  4066e8:	ldr	x0, [x28, #72]
  4066ec:	add	x1, x1, #0x20
  4066f0:	cmp	x1, x0
  4066f4:	b.eq	406ac4 <wcrtomb@plt+0x3d84>  // b.none
  4066f8:	ldr	x3, [x28, #104]
  4066fc:	ldr	x10, [x28, #64]
  406700:	add	x1, x1, x3
  406704:	bic	x1, x1, x3
  406708:	str	x1, [x28, #80]
  40670c:	sub	x2, x1, x10
  406710:	sub	x10, x12, x10
  406714:	cmp	x2, x10
  406718:	b.ls	406724 <wcrtomb@plt+0x39e4>  // b.plast
  40671c:	mov	x1, x12
  406720:	str	x12, [x28, #80]
  406724:	str	x1, [x28, #72]
  406728:	mov	w1, #0xffffffff            	// #-1
  40672c:	stp	x4, x25, [x0]
  406730:	stp	w1, w6, [x0, #16]
  406734:	str	x0, [x7, #24]
  406738:	mov	x7, x0
  40673c:	b	405f78 <wcrtomb@plt+0x3238>
  406740:	mov	x0, x23
  406744:	mov	x1, #0x30                  	// #48
  406748:	bl	418ad8 <_obstack_newchunk@@Base>
  40674c:	ldp	x1, x7, [x28, #80]
  406750:	ldr	x0, [x28, #72]
  406754:	add	x1, x1, #0x30
  406758:	cmp	x1, x0
  40675c:	b.ne	405ad8 <wcrtomb@plt+0x2d98>  // b.any
  406760:	ldrb	w3, [x28, #136]
  406764:	orr	w3, w3, #0x2
  406768:	strb	w3, [x28, #136]
  40676c:	b	405ad8 <wcrtomb@plt+0x2d98>
  406770:	mov	x1, #0x30                  	// #48
  406774:	mov	x0, x25
  406778:	bl	418ad8 <_obstack_newchunk@@Base>
  40677c:	ldp	x1, x8, [x28, #80]
  406780:	ldr	x3, [x28, #72]
  406784:	add	x1, x1, #0x30
  406788:	cmp	x1, x3
  40678c:	b.ne	4056a8 <wcrtomb@plt+0x2968>  // b.any
  406790:	ldrb	w2, [x28, #136]
  406794:	orr	w2, w2, #0x2
  406798:	strb	w2, [x28, #136]
  40679c:	b	4056a8 <wcrtomb@plt+0x2968>
  4067a0:	mov	x1, #0x30                  	// #48
  4067a4:	mov	x0, x23
  4067a8:	bl	418ad8 <_obstack_newchunk@@Base>
  4067ac:	ldp	x1, x7, [x28, #80]
  4067b0:	ldr	x3, [x28, #72]
  4067b4:	ldr	x24, [x19, #16]
  4067b8:	add	x1, x1, #0x30
  4067bc:	cmp	x1, x3
  4067c0:	b.ne	405850 <wcrtomb@plt+0x2b10>  // b.any
  4067c4:	ldrb	w2, [x28, #136]
  4067c8:	orr	w2, w2, #0x2
  4067cc:	strb	w2, [x28, #136]
  4067d0:	b	405850 <wcrtomb@plt+0x2b10>
  4067d4:	ldr	x0, [x28, #24]
  4067d8:	cbz	x0, 4054f0 <wcrtomb@plt+0x27b0>
  4067dc:	ldr	w1, [x0]
  4067e0:	tbnz	w1, #4, 4054f0 <wcrtomb@plt+0x27b0>
  4067e4:	ldp	x1, x2, [x0, #8]
  4067e8:	cmp	x1, x2
  4067ec:	b.cs	406ba8 <wcrtomb@plt+0x3e68>  // b.hs, b.nlast
  4067f0:	add	x2, x1, #0x1
  4067f4:	str	x2, [x0, #8]
  4067f8:	ldrb	w0, [x1]
  4067fc:	cmp	w0, #0xa
  406800:	b.ne	4059cc <wcrtomb@plt+0x2c8c>  // b.any
  406804:	ldr	x0, [x28, #40]
  406808:	ldr	x23, [x28, #8]
  40680c:	add	x0, x0, #0x1
  406810:	str	x0, [x28, #40]
  406814:	b	405358 <wcrtomb@plt+0x2618>
  406818:	ldr	x0, [x28, #24]
  40681c:	cbz	x0, 406c04 <wcrtomb@plt+0x3ec4>
  406820:	ldr	w1, [x0]
  406824:	tbnz	w1, #4, 406c04 <wcrtomb@plt+0x3ec4>
  406828:	ldp	x1, x2, [x0, #8]
  40682c:	cmp	x1, x2
  406830:	b.cs	406bb0 <wcrtomb@plt+0x3e70>  // b.hs, b.nlast
  406834:	add	x2, x1, #0x1
  406838:	str	x2, [x0, #8]
  40683c:	ldrb	w25, [x1]
  406840:	cmp	w25, #0xa
  406844:	b.ne	405da4 <wcrtomb@plt+0x3064>  // b.any
  406848:	ldr	x0, [x28, #40]
  40684c:	add	x0, x0, #0x1
  406850:	str	x0, [x28, #40]
  406854:	b	405da4 <wcrtomb@plt+0x3064>
  406858:	ldr	x0, [x28, #24]
  40685c:	cbz	x0, 406bfc <wcrtomb@plt+0x3ebc>
  406860:	ldr	w1, [x0]
  406864:	tbnz	w1, #4, 406bfc <wcrtomb@plt+0x3ebc>
  406868:	ldp	x1, x2, [x0, #8]
  40686c:	cmp	x1, x2
  406870:	b.cs	406bbc <wcrtomb@plt+0x3e7c>  // b.hs, b.nlast
  406874:	add	x2, x1, #0x1
  406878:	str	x2, [x0, #8]
  40687c:	ldrb	w25, [x1]
  406880:	cmp	w25, #0xa
  406884:	b.ne	405b68 <wcrtomb@plt+0x2e28>  // b.any
  406888:	ldr	x0, [x28, #40]
  40688c:	add	x0, x0, #0x1
  406890:	str	x0, [x28, #40]
  406894:	b	405b68 <wcrtomb@plt+0x2e28>
  406898:	ldr	x1, [x28, #40]
  40689c:	cbz	x1, 405634 <wcrtomb@plt+0x28f4>
  4068a0:	sub	x1, x1, #0x1
  4068a4:	str	x1, [x28, #40]
  4068a8:	ldr	x1, [x28, #8]
  4068ac:	cbnz	x1, 40563c <wcrtomb@plt+0x28fc>
  4068b0:	ldr	x1, [x28, #24]
  4068b4:	bl	402af0 <ungetc@plt>
  4068b8:	b	40565c <wcrtomb@plt+0x291c>
  4068bc:	ldr	x0, [x28, #8]
  4068c0:	cbz	x0, 406ad4 <wcrtomb@plt+0x3d94>
  4068c4:	ldr	x1, [x28, #16]
  4068c8:	cmp	x0, x1
  4068cc:	b.cs	406c34 <wcrtomb@plt+0x3ef4>  // b.hs, b.nlast
  4068d0:	ldrb	w1, [x0]
  4068d4:	add	x2, x0, #0x1
  4068d8:	str	x2, [x28, #8]
  4068dc:	cmp	w1, #0xa
  4068e0:	b.ne	405660 <wcrtomb@plt+0x2920>  // b.any
  4068e4:	ldr	x0, [x28, #40]
  4068e8:	add	x0, x0, #0x1
  4068ec:	str	x0, [x28, #40]
  4068f0:	b	405660 <wcrtomb@plt+0x2920>
  4068f4:	mov	w10, #0x0                   	// #0
  4068f8:	mov	w6, #0x0                   	// #0
  4068fc:	b	405f5c <wcrtomb@plt+0x321c>
  406900:	ldrb	w0, [x26, #32]
  406904:	tst	w0, #0x6
  406908:	b.ne	406cf0 <wcrtomb@plt+0x3fb0>  // b.any
  40690c:	ubfx	x1, x0, #3, #1
  406910:	ubfx	x2, x0, #1, #2
  406914:	mov	w3, #0x1                   	// #1
  406918:	lsl	w1, w3, w1
  40691c:	orr	w1, w1, w2
  406920:	bfi	w0, w1, #1, #2
  406924:	strb	w0, [x26, #32]
  406928:	b	405fa4 <wcrtomb@plt+0x3264>
  40692c:	ldr	w0, [x24]
  406930:	cmp	w0, #0x2
  406934:	b.eq	406994 <wcrtomb@plt+0x3c54>  // b.none
  406938:	orr	w25, w25, #0x2
  40693c:	b	405fa4 <wcrtomb@plt+0x3264>
  406940:	ldr	x1, [x26, #16]
  406944:	cbnz	x1, 406d28 <wcrtomb@plt+0x3fe8>
  406948:	bl	403448 <wcrtomb@plt+0x708>
  40694c:	str	x0, [x26, #16]
  406950:	cbnz	x0, 405fa4 <wcrtomb@plt+0x3264>
  406954:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406958:	add	x1, x1, #0x6c0
  40695c:	add	x1, x1, #0x205
  406960:	mov	w2, #0x5                   	// #5
  406964:	bl	402c20 <dcgettext@plt>
  406968:	bl	403ba8 <wcrtomb@plt+0xe68>
  40696c:	ldr	x0, [x28, #8]
  406970:	cbz	x0, 406b00 <wcrtomb@plt+0x3dc0>
  406974:	ldr	x1, [x28, #16]
  406978:	cmp	x0, x1
  40697c:	b.cs	406994 <wcrtomb@plt+0x3c54>  // b.hs, b.nlast
  406980:	add	x1, x0, #0x1
  406984:	ldrb	w0, [x0]
  406988:	str	x1, [x28, #8]
  40698c:	cmp	w0, #0xa
  406990:	b.eq	406b30 <wcrtomb@plt+0x3df0>  // b.none
  406994:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406998:	add	x1, x1, #0x6c0
  40699c:	add	x1, x1, #0x180
  4069a0:	mov	w2, #0x5                   	// #5
  4069a4:	mov	x0, #0x0                   	// #0
  4069a8:	bl	402c20 <dcgettext@plt>
  4069ac:	bl	403ba8 <wcrtomb@plt+0xe68>
  4069b0:	bl	402d00 <__uflow@plt>
  4069b4:	mov	w1, w0
  4069b8:	cmp	w0, #0xa
  4069bc:	b.eq	405908 <wcrtomb@plt+0x2bc8>  // b.none
  4069c0:	cmn	w0, #0x1
  4069c4:	b.ne	4058d8 <wcrtomb@plt+0x2b98>  // b.any
  4069c8:	b	405914 <wcrtomb@plt+0x2bd4>
  4069cc:	mov	x0, x23
  4069d0:	bl	402d00 <__uflow@plt>
  4069d4:	cmp	w0, #0xa
  4069d8:	ldr	x23, [x28, #8]
  4069dc:	b.eq	405a54 <wcrtomb@plt+0x2d14>  // b.none
  4069e0:	cmn	w0, #0x1
  4069e4:	b.eq	405358 <wcrtomb@plt+0x2618>  // b.none
  4069e8:	mov	x0, x23
  4069ec:	b	405a1c <wcrtomb@plt+0x2cdc>
  4069f0:	mov	x0, x25
  4069f4:	mov	x1, #0x100                 	// #256
  4069f8:	bl	418ad8 <_obstack_newchunk@@Base>
  4069fc:	ldp	x1, x7, [x25, #24]
  406a00:	add	x0, x1, #0x100
  406a04:	ldr	x1, [x28, #72]
  406a08:	cmp	x0, x1
  406a0c:	b.ne	405c00 <wcrtomb@plt+0x2ec0>  // b.any
  406a10:	ldrb	w3, [x28, #136]
  406a14:	orr	w3, w3, #0x2
  406a18:	strb	w3, [x28, #136]
  406a1c:	b	405c00 <wcrtomb@plt+0x2ec0>
  406a20:	ldr	x2, [x28, #40]
  406a24:	cbz	x2, 406384 <wcrtomb@plt+0x3644>
  406a28:	sub	x2, x2, #0x1
  406a2c:	str	x2, [x28, #40]
  406a30:	cbnz	x1, 406388 <wcrtomb@plt+0x3648>
  406a34:	ldr	x1, [x28, #24]
  406a38:	bl	402af0 <ungetc@plt>
  406a3c:	ldr	x23, [x28, #8]
  406a40:	ldr	x24, [x19, #16]
  406a44:	b	405600 <wcrtomb@plt+0x28c0>
  406a48:	mov	w10, #0x1                   	// #1
  406a4c:	mov	w6, w10
  406a50:	b	405f5c <wcrtomb@plt+0x321c>
  406a54:	mov	x23, x1
  406a58:	ldr	x24, [x19, #16]
  406a5c:	b	405600 <wcrtomb@plt+0x28c0>
  406a60:	add	x7, sp, #0xd0
  406a64:	b	405f78 <wcrtomb@plt+0x3238>
  406a68:	ldr	x0, [x28, #168]
  406a6c:	cbz	x0, 4061bc <wcrtomb@plt+0x347c>
  406a70:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406a74:	add	x1, x1, #0x6c0
  406a78:	add	x1, x1, #0x2e7
  406a7c:	mov	w2, #0x5                   	// #5
  406a80:	mov	x0, #0x0                   	// #0
  406a84:	bl	402c20 <dcgettext@plt>
  406a88:	bl	403ba8 <wcrtomb@plt+0xe68>
  406a8c:	mov	x0, x26
  406a90:	mov	x1, #0x20                  	// #32
  406a94:	str	x5, [sp, #112]
  406a98:	str	w6, [sp, #120]
  406a9c:	stp	x7, x4, [sp, #128]
  406aa0:	bl	418ad8 <_obstack_newchunk@@Base>
  406aa4:	ldr	w6, [sp, #120]
  406aa8:	ldp	x1, x12, [x28, #80]
  406aac:	ldr	x0, [x28, #72]
  406ab0:	ldr	x5, [sp, #112]
  406ab4:	add	x1, x1, #0x20
  406ab8:	cmp	x1, x0
  406abc:	ldp	x7, x4, [sp, #128]
  406ac0:	b.ne	4066f8 <wcrtomb@plt+0x39b8>  // b.any
  406ac4:	ldrb	w3, [x28, #136]
  406ac8:	orr	w3, w3, #0x2
  406acc:	strb	w3, [x28, #136]
  406ad0:	b	4066f8 <wcrtomb@plt+0x39b8>
  406ad4:	ldr	x0, [x28, #24]
  406ad8:	cbz	x0, 406c34 <wcrtomb@plt+0x3ef4>
  406adc:	ldr	w1, [x0]
  406ae0:	tbnz	w1, #4, 406c34 <wcrtomb@plt+0x3ef4>
  406ae4:	ldp	x1, x2, [x0, #8]
  406ae8:	cmp	x1, x2
  406aec:	b.cs	406c28 <wcrtomb@plt+0x3ee8>  // b.hs, b.nlast
  406af0:	add	x2, x1, #0x1
  406af4:	str	x2, [x0, #8]
  406af8:	ldrb	w1, [x1]
  406afc:	b	4068dc <wcrtomb@plt+0x3b9c>
  406b00:	ldr	x0, [x28, #24]
  406b04:	cbz	x0, 406994 <wcrtomb@plt+0x3c54>
  406b08:	ldr	w1, [x0]
  406b0c:	tbnz	w1, #4, 406994 <wcrtomb@plt+0x3c54>
  406b10:	ldp	x1, x2, [x0, #8]
  406b14:	cmp	x1, x2
  406b18:	b.cs	406c58 <wcrtomb@plt+0x3f18>  // b.hs, b.nlast
  406b1c:	add	x2, x1, #0x1
  406b20:	str	x2, [x0, #8]
  406b24:	ldrb	w0, [x1]
  406b28:	cmp	w0, #0xa
  406b2c:	b.ne	406994 <wcrtomb@plt+0x3c54>  // b.any
  406b30:	ldr	x0, [x28, #40]
  406b34:	add	x0, x0, #0x1
  406b38:	str	x0, [x28, #40]
  406b3c:	b	406258 <wcrtomb@plt+0x3518>
  406b40:	ldr	x1, [x28]
  406b44:	cbz	x1, 406bc8 <wcrtomb@plt+0x3e88>
  406b48:	ldr	x0, [x28, #8]
  406b4c:	add	x1, x1, #0x2
  406b50:	cmp	x0, x1
  406b54:	b.ne	4059f0 <wcrtomb@plt+0x2cb0>  // b.any
  406b58:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  406b5c:	mov	x0, x1
  406b60:	mov	w1, #0x1                   	// #1
  406b64:	strb	w1, [x2, #1888]
  406b68:	b	4059f0 <wcrtomb@plt+0x2cb0>
  406b6c:	mov	x1, #0x18                  	// #24
  406b70:	mov	x0, #0x1                   	// #1
  406b74:	bl	418730 <wcrtomb@plt+0x159f0>
  406b78:	mov	x19, x0
  406b7c:	stp	xzr, xzr, [x0, #8]
  406b80:	adrp	x4, 402000 <mbrtowc@plt-0x640>
  406b84:	add	x0, x28, #0x38
  406b88:	str	xzr, [x19]
  406b8c:	add	x4, x4, #0xae0
  406b90:	adrp	x3, 418000 <wcrtomb@plt+0x152c0>
  406b94:	mov	x2, #0x0                   	// #0
  406b98:	add	x3, x3, #0x708
  406b9c:	mov	x1, #0x0                   	// #0
  406ba0:	bl	418900 <_obstack_begin@@Base>
  406ba4:	b	405324 <wcrtomb@plt+0x25e4>
  406ba8:	bl	402d00 <__uflow@plt>
  406bac:	b	4059c4 <wcrtomb@plt+0x2c84>
  406bb0:	bl	402d00 <__uflow@plt>
  406bb4:	mov	w25, w0
  406bb8:	b	405d9c <wcrtomb@plt+0x305c>
  406bbc:	bl	402d00 <__uflow@plt>
  406bc0:	mov	w25, w0
  406bc4:	b	405b60 <wcrtomb@plt+0x2e20>
  406bc8:	ldr	x0, [x28, #24]
  406bcc:	cbz	x0, 4059ec <wcrtomb@plt+0x2cac>
  406bd0:	bl	402710 <ftell@plt>
  406bd4:	cmp	x0, #0x2
  406bd8:	b.ne	4059ec <wcrtomb@plt+0x2cac>  // b.any
  406bdc:	ldr	x1, [x28, #8]
  406be0:	b	406b58 <wcrtomb@plt+0x3e18>
  406be4:	mov	x1, #0x8                   	// #8
  406be8:	mov	x0, #0x1                   	// #1
  406bec:	str	xzr, [sp, #208]
  406bf0:	bl	418730 <wcrtomb@plt+0x159f0>
  406bf4:	str	x0, [x22, #24]
  406bf8:	b	406648 <wcrtomb@plt+0x3908>
  406bfc:	mov	w25, #0xffffffff            	// #-1
  406c00:	b	405b68 <wcrtomb@plt+0x2e28>
  406c04:	mov	w25, #0xffffffff            	// #-1
  406c08:	b	405da4 <wcrtomb@plt+0x3064>
  406c0c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406c10:	add	x1, x1, #0x6c0
  406c14:	add	x1, x1, #0x105
  406c18:	mov	w2, #0x5                   	// #5
  406c1c:	mov	x0, #0x0                   	// #0
  406c20:	bl	402c20 <dcgettext@plt>
  406c24:	bl	403ba8 <wcrtomb@plt+0xe68>
  406c28:	bl	402d00 <__uflow@plt>
  406c2c:	mov	w1, w0
  406c30:	b	4068dc <wcrtomb@plt+0x3b9c>
  406c34:	mov	w1, #0xffffffff            	// #-1
  406c38:	b	405660 <wcrtomb@plt+0x2920>
  406c3c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406c40:	add	x1, x1, #0x6c0
  406c44:	add	x1, x1, #0x1d
  406c48:	mov	w2, #0x5                   	// #5
  406c4c:	mov	x0, #0x0                   	// #0
  406c50:	bl	402c20 <dcgettext@plt>
  406c54:	bl	403ba8 <wcrtomb@plt+0xe68>
  406c58:	bl	402d00 <__uflow@plt>
  406c5c:	b	40698c <wcrtomb@plt+0x3c4c>
  406c60:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406c64:	add	x1, x1, #0x6c0
  406c68:	add	x1, x1, #0x167
  406c6c:	mov	w2, #0x5                   	// #5
  406c70:	bl	402c20 <dcgettext@plt>
  406c74:	bl	403ba8 <wcrtomb@plt+0xe68>
  406c78:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406c7c:	add	x1, x1, #0x6c0
  406c80:	add	x1, x1, #0xe
  406c84:	mov	w2, #0x5                   	// #5
  406c88:	mov	x0, #0x0                   	// #0
  406c8c:	bl	402c20 <dcgettext@plt>
  406c90:	bl	403ba8 <wcrtomb@plt+0xe68>
  406c94:	add	x0, x26, #0x1
  406c98:	b	40660c <wcrtomb@plt+0x38cc>
  406c9c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406ca0:	add	x1, x1, #0x6c0
  406ca4:	add	x1, x1, #0x293
  406ca8:	mov	w2, #0x5                   	// #5
  406cac:	mov	x0, #0x0                   	// #0
  406cb0:	bl	402c20 <dcgettext@plt>
  406cb4:	bl	403ba8 <wcrtomb@plt+0xe68>
  406cb8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406cbc:	add	x1, x1, #0x6c0
  406cc0:	add	x1, x1, #0x1ba
  406cc4:	mov	w2, #0x5                   	// #5
  406cc8:	mov	x0, #0x0                   	// #0
  406ccc:	bl	402c20 <dcgettext@plt>
  406cd0:	bl	403ba8 <wcrtomb@plt+0xe68>
  406cd4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406cd8:	add	x1, x1, #0x6c0
  406cdc:	add	x1, x1, #0x14e
  406ce0:	mov	w2, #0x5                   	// #5
  406ce4:	bl	402c20 <dcgettext@plt>
  406ce8:	bl	403ba8 <wcrtomb@plt+0xe68>
  406cec:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  406cf0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406cf4:	add	x1, x1, #0x6c0
  406cf8:	add	x1, x1, #0x196
  406cfc:	mov	w2, #0x5                   	// #5
  406d00:	mov	x0, #0x0                   	// #0
  406d04:	bl	402c20 <dcgettext@plt>
  406d08:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d0c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406d10:	add	x1, x1, #0x6c0
  406d14:	add	x1, x1, #0x84
  406d18:	mov	w2, #0x5                   	// #5
  406d1c:	mov	x0, #0x0                   	// #0
  406d20:	bl	402c20 <dcgettext@plt>
  406d24:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d28:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406d2c:	add	x1, x1, #0x6c0
  406d30:	add	x1, x1, #0x1de
  406d34:	mov	w2, #0x5                   	// #5
  406d38:	mov	x0, #0x0                   	// #0
  406d3c:	bl	402c20 <dcgettext@plt>
  406d40:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d44:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406d48:	add	x1, x1, #0x6c0
  406d4c:	add	x1, x1, #0x2b1
  406d50:	mov	w2, #0x5                   	// #5
  406d54:	mov	x0, #0x0                   	// #0
  406d58:	bl	402c20 <dcgettext@plt>
  406d5c:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d60:	mov	w0, w23
  406d64:	bl	404728 <wcrtomb@plt+0x19e8>
  406d68:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406d6c:	add	x1, x1, #0x6c0
  406d70:	add	x1, x1, #0xa5
  406d74:	mov	w2, #0x5                   	// #5
  406d78:	mov	x0, #0x0                   	// #0
  406d7c:	bl	402c20 <dcgettext@plt>
  406d80:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d84:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406d88:	add	x1, x1, #0x6c0
  406d8c:	add	x1, x1, #0x56
  406d90:	mov	w2, #0x5                   	// #5
  406d94:	bl	402c20 <dcgettext@plt>
  406d98:	bl	403ba8 <wcrtomb@plt+0xe68>
  406d9c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406da0:	add	x1, x1, #0x6c0
  406da4:	add	x1, x1, #0xe1
  406da8:	mov	w2, #0x5                   	// #5
  406dac:	mov	x0, #0x0                   	// #0
  406db0:	bl	402c20 <dcgettext@plt>
  406db4:	bl	403ba8 <wcrtomb@plt+0xe68>
  406db8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406dbc:	add	x1, x1, #0x6c0
  406dc0:	add	x1, x1, #0x35c
  406dc4:	mov	w2, #0x5                   	// #5
  406dc8:	mov	x0, #0x0                   	// #0
  406dcc:	bl	402c20 <dcgettext@plt>
  406dd0:	bl	403ba8 <wcrtomb@plt+0xe68>
  406dd4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406dd8:	add	x1, x1, #0x6c0
  406ddc:	add	x1, x1, #0x2fa
  406de0:	mov	w2, #0x5                   	// #5
  406de4:	mov	x0, #0x0                   	// #0
  406de8:	bl	402c20 <dcgettext@plt>
  406dec:	bl	403ba8 <wcrtomb@plt+0xe68>
  406df0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406df4:	add	x1, x1, #0x6c0
  406df8:	add	x1, x1, #0xc4
  406dfc:	mov	w2, #0x5                   	// #5
  406e00:	mov	x0, #0x0                   	// #0
  406e04:	bl	402c20 <dcgettext@plt>
  406e08:	bl	403ba8 <wcrtomb@plt+0xe68>
  406e0c:	bl	404590 <wcrtomb@plt+0x1850>
  406e10:	stp	x29, x30, [sp, #-32]!
  406e14:	add	x2, x1, x2
  406e18:	fmov	d0, x1
  406e1c:	mov	x29, sp
  406e20:	dup	v0.2d, v0.d[0]
  406e24:	str	x19, [sp, #16]
  406e28:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  406e2c:	add	x19, x19, #0x540
  406e30:	ldr	x1, [x19, #224]
  406e34:	str	q0, [x19]
  406e38:	add	x1, x1, #0x1
  406e3c:	stp	x2, xzr, [x19, #16]
  406e40:	stp	xzr, xzr, [x19, #32]
  406e44:	str	x1, [x19, #48]
  406e48:	str	x1, [x19, #224]
  406e4c:	bl	4052f8 <wcrtomb@plt+0x25b8>
  406e50:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  406e54:	stp	xzr, xzr, [x19]
  406e58:	strb	wzr, [x1, #1088]
  406e5c:	str	xzr, [x19, #16]
  406e60:	ldr	x19, [sp, #16]
  406e64:	ldp	x29, x30, [sp], #32
  406e68:	ret
  406e6c:	nop
  406e70:	stp	x29, x30, [sp, #-64]!
  406e74:	mov	x29, sp
  406e78:	stp	x19, x20, [sp, #16]
  406e7c:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  406e80:	add	x19, x19, #0x540
  406e84:	stp	x21, x22, [sp, #32]
  406e88:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  406e8c:	mov	x21, x0
  406e90:	ldr	x0, [x22, #1320]
  406e94:	str	x0, [x19, #24]
  406e98:	ldrb	w0, [x1]
  406e9c:	mov	x20, x1
  406ea0:	cmp	w0, #0x2d
  406ea4:	b.ne	406f04 <wcrtomb@plt+0x41c4>  // b.any
  406ea8:	ldrb	w0, [x1, #1]
  406eac:	cbnz	w0, 406f04 <wcrtomb@plt+0x41c4>
  406eb0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  406eb4:	str	x20, [x19, #32]
  406eb8:	ldr	q0, [x0, #2960]
  406ebc:	mov	x0, x21
  406ec0:	stur	q0, [x19, #40]
  406ec4:	bl	4052f8 <wcrtomb@plt+0x25b8>
  406ec8:	mov	x20, x0
  406ecc:	ldr	x1, [x22, #1320]
  406ed0:	str	x0, [sp, #56]
  406ed4:	ldr	x0, [x19, #24]
  406ed8:	cmp	x0, x1
  406edc:	b.eq	406ee4 <wcrtomb@plt+0x41a4>  // b.none
  406ee0:	bl	40ca58 <wcrtomb@plt+0x9d18>
  406ee4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  406ee8:	str	xzr, [x19, #24]
  406eec:	mov	x0, x20
  406ef0:	strb	wzr, [x1, #1088]
  406ef4:	ldp	x19, x20, [sp, #16]
  406ef8:	ldp	x21, x22, [sp, #32]
  406efc:	ldp	x29, x30, [sp], #64
  406f00:	ret
  406f04:	mov	x0, x20
  406f08:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  406f0c:	mov	w2, #0x1                   	// #1
  406f10:	add	x1, x1, #0x560
  406f14:	bl	40c518 <wcrtomb@plt+0x97d8>
  406f18:	str	x0, [x19, #24]
  406f1c:	b	406eb0 <wcrtomb@plt+0x4170>
  406f20:	stp	x29, x30, [sp, #-64]!
  406f24:	mov	x29, sp
  406f28:	stp	x23, x24, [sp, #48]
  406f2c:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  406f30:	add	x24, x24, #0x540
  406f34:	stp	x19, x20, [sp, #16]
  406f38:	ldr	x3, [x24, #184]
  406f3c:	stp	x21, x22, [sp, #32]
  406f40:	cbnz	x3, 407040 <wcrtomb@plt+0x4300>
  406f44:	ldr	x19, [x24, #168]
  406f48:	mov	x23, x0
  406f4c:	cbz	x19, 406f74 <wcrtomb@plt+0x4234>
  406f50:	mov	x0, x19
  406f54:	bl	40d050 <wcrtomb@plt+0xa310>
  406f58:	ldr	x21, [x24, #176]
  406f5c:	mov	x20, x0
  406f60:	str	x0, [x21, #8]
  406f64:	cbnz	x0, 407024 <wcrtomb@plt+0x42e4>
  406f68:	mov	x0, x19
  406f6c:	bl	40d1d8 <wcrtomb@plt+0xa498>
  406f70:	str	xzr, [x24, #168]
  406f74:	ldp	x22, x21, [x24, #192]
  406f78:	cbz	x21, 406fd0 <wcrtomb@plt+0x4290>
  406f7c:	nop
  406f80:	ldr	x20, [x21, #8]
  406f84:	cbz	x22, 407000 <wcrtomb@plt+0x42c0>
  406f88:	mov	x19, x22
  406f8c:	b	406f98 <wcrtomb@plt+0x4258>
  406f90:	ldr	x19, [x19, #40]
  406f94:	cbz	x19, 407000 <wcrtomb@plt+0x42c0>
  406f98:	ldr	x0, [x19, #8]
  406f9c:	mov	x1, x20
  406fa0:	bl	402aa0 <strcmp@plt>
  406fa4:	cbnz	w0, 406f90 <wcrtomb@plt+0x4250>
  406fa8:	ldr	x1, [x21]
  406fac:	ldr	x2, [x23]
  406fb0:	add	x1, x1, x1, lsl #2
  406fb4:	ldr	x0, [x19]
  406fb8:	add	x1, x2, x1, lsl #3
  406fbc:	str	x0, [x1, #24]
  406fc0:	ldr	x21, [x21, #40]
  406fc4:	mov	x0, x20
  406fc8:	bl	402ae0 <free@plt>
  406fcc:	cbnz	x21, 406f80 <wcrtomb@plt+0x4240>
  406fd0:	str	xzr, [x24, #200]
  406fd4:	cbz	x22, 406fe8 <wcrtomb@plt+0x42a8>
  406fd8:	ldr	x0, [x22, #8]
  406fdc:	ldr	x22, [x22, #40]
  406fe0:	bl	402ae0 <free@plt>
  406fe4:	cbnz	x22, 406fd8 <wcrtomb@plt+0x4298>
  406fe8:	str	xzr, [x24, #192]
  406fec:	ldp	x19, x20, [sp, #16]
  406ff0:	ldp	x21, x22, [sp, #32]
  406ff4:	ldp	x23, x24, [sp, #48]
  406ff8:	ldp	x29, x30, [sp], #64
  406ffc:	ret
  407000:	ldrb	w0, [x20]
  407004:	cbnz	w0, 40706c <wcrtomb@plt+0x432c>
  407008:	ldr	x0, [x21]
  40700c:	ldr	x2, [x23]
  407010:	add	x0, x0, x0, lsl #2
  407014:	ldr	x1, [x23, #16]
  407018:	add	x0, x2, x0, lsl #3
  40701c:	str	x1, [x0, #24]
  407020:	b	406fc0 <wcrtomb@plt+0x4280>
  407024:	mov	x0, x19
  407028:	bl	40d048 <wcrtomb@plt+0xa308>
  40702c:	mov	x1, x20
  407030:	bl	418768 <wcrtomb@plt+0x15a28>
  407034:	str	x0, [x21]
  407038:	ldr	x19, [x24, #168]
  40703c:	b	406f68 <wcrtomb@plt+0x4228>
  407040:	ldp	x4, x5, [x3, #16]
  407044:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407048:	add	x1, x1, #0x6c0
  40704c:	mov	w2, #0x5                   	// #5
  407050:	ldr	x3, [x3, #32]
  407054:	add	x1, x1, #0x48
  407058:	mov	x0, #0x0                   	// #0
  40705c:	stp	x4, x5, [x24, #32]
  407060:	str	x3, [x24, #48]
  407064:	bl	402c20 <dcgettext@plt>
  407068:	bl	403ba8 <wcrtomb@plt+0xe68>
  40706c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407070:	mov	w2, #0x5                   	// #5
  407074:	add	x1, x1, #0x568
  407078:	mov	x0, #0x0                   	// #0
  40707c:	bl	402c20 <dcgettext@plt>
  407080:	ldr	x1, [x21, #8]
  407084:	bl	40c380 <wcrtomb@plt+0x9640>
  407088:	stp	x29, x30, [sp, #-32]!
  40708c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  407090:	mov	x29, sp
  407094:	str	x19, [sp, #16]
  407098:	ldr	x19, [x0, #1552]
  40709c:	cbz	x19, 4070b4 <wcrtomb@plt+0x4374>
  4070a0:	ldr	x0, [x19, #16]
  4070a4:	cbz	x0, 4070c0 <wcrtomb@plt+0x4380>
  4070a8:	bl	402960 <rewind@plt>
  4070ac:	ldr	x19, [x19, #24]
  4070b0:	cbnz	x19, 4070a0 <wcrtomb@plt+0x4360>
  4070b4:	ldr	x19, [sp, #16]
  4070b8:	ldp	x29, x30, [sp], #32
  4070bc:	ret
  4070c0:	ldr	x19, [x19, #24]
  4070c4:	cbnz	x19, 4070a0 <wcrtomb@plt+0x4360>
  4070c8:	ldr	x19, [sp, #16]
  4070cc:	ldp	x29, x30, [sp], #32
  4070d0:	ret
  4070d4:	nop
  4070d8:	stp	x29, x30, [sp, #-32]!
  4070dc:	mov	x29, sp
  4070e0:	stp	x19, x20, [sp, #16]
  4070e4:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4070e8:	add	x20, x20, #0x540
  4070ec:	ldr	x19, [x20, #208]
  4070f0:	cbz	x19, 4071b8 <wcrtomb@plt+0x4478>
  4070f4:	nop
  4070f8:	ldr	x0, [x19]
  4070fc:	cbz	x0, 407188 <wcrtomb@plt+0x4448>
  407100:	bl	402ae0 <free@plt>
  407104:	str	xzr, [x19]
  407108:	ldr	x19, [x19, #24]
  40710c:	cbnz	x19, 4070f8 <wcrtomb@plt+0x43b8>
  407110:	ldr	x19, [x20, #216]
  407114:	cbz	x19, 4071c4 <wcrtomb@plt+0x4484>
  407118:	ldr	x0, [x19]
  40711c:	cbz	x0, 40717c <wcrtomb@plt+0x443c>
  407120:	bl	402ae0 <free@plt>
  407124:	str	xzr, [x19]
  407128:	ldr	x19, [x19, #24]
  40712c:	cbnz	x19, 407118 <wcrtomb@plt+0x43d8>
  407130:	ldr	x19, [x20, #208]
  407134:	cbz	x19, 40714c <wcrtomb@plt+0x440c>
  407138:	ldr	x0, [x19, #16]
  40713c:	cbz	x0, 407194 <wcrtomb@plt+0x4454>
  407140:	bl	40ca58 <wcrtomb@plt+0x9d18>
  407144:	ldr	x19, [x19, #24]
  407148:	cbnz	x19, 407138 <wcrtomb@plt+0x43f8>
  40714c:	ldr	x19, [x20, #216]
  407150:	cbz	x19, 40716c <wcrtomb@plt+0x442c>
  407154:	nop
  407158:	ldr	x0, [x19, #16]
  40715c:	cbz	x0, 4071a0 <wcrtomb@plt+0x4460>
  407160:	bl	40ca58 <wcrtomb@plt+0x9d18>
  407164:	ldr	x19, [x19, #24]
  407168:	cbnz	x19, 407158 <wcrtomb@plt+0x4418>
  40716c:	stp	xzr, xzr, [x20, #208]
  407170:	ldp	x19, x20, [sp, #16]
  407174:	ldp	x29, x30, [sp], #32
  407178:	ret
  40717c:	ldr	x19, [x19, #24]
  407180:	cbnz	x19, 407118 <wcrtomb@plt+0x43d8>
  407184:	b	407130 <wcrtomb@plt+0x43f0>
  407188:	ldr	x19, [x19, #24]
  40718c:	cbnz	x19, 4070f8 <wcrtomb@plt+0x43b8>
  407190:	b	407110 <wcrtomb@plt+0x43d0>
  407194:	ldr	x19, [x19, #24]
  407198:	cbnz	x19, 407138 <wcrtomb@plt+0x43f8>
  40719c:	b	40714c <wcrtomb@plt+0x440c>
  4071a0:	ldr	x19, [x19, #24]
  4071a4:	cbnz	x19, 407158 <wcrtomb@plt+0x4418>
  4071a8:	stp	xzr, xzr, [x20, #208]
  4071ac:	ldp	x19, x20, [sp, #16]
  4071b0:	ldp	x29, x30, [sp], #32
  4071b4:	ret
  4071b8:	ldr	x19, [x20, #216]
  4071bc:	cbnz	x19, 407118 <wcrtomb@plt+0x43d8>
  4071c0:	b	40716c <wcrtomb@plt+0x442c>
  4071c4:	ldr	x19, [x20, #208]
  4071c8:	cbnz	x19, 407138 <wcrtomb@plt+0x43f8>
  4071cc:	b	40716c <wcrtomb@plt+0x442c>
  4071d0:	stp	x29, x30, [sp, #-96]!
  4071d4:	mov	x29, sp
  4071d8:	stp	x23, x24, [sp, #48]
  4071dc:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  4071e0:	ldr	x3, [x24, #1312]
  4071e4:	cbz	x0, 40747c <wcrtomb@plt+0x473c>
  4071e8:	stp	x19, x20, [sp, #16]
  4071ec:	mov	x19, x0
  4071f0:	ldp	x0, x1, [x3, #40]
  4071f4:	cmp	x0, x1
  4071f8:	b.cs	407498 <wcrtomb@plt+0x4758>  // b.hs, b.nlast
  4071fc:	add	x1, x0, #0x1
  407200:	str	x1, [x3, #40]
  407204:	mov	w1, #0x2f                  	// #47
  407208:	strb	w1, [x0]
  40720c:	ldr	x20, [x19, #72]
  407210:	add	x23, x19, #0x5a
  407214:	cbz	x20, 4072ec <wcrtomb@plt+0x45ac>
  407218:	add	x20, x20, #0x5a
  40721c:	stp	x21, x22, [sp, #32]
  407220:	add	x20, x19, x20
  407224:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  407228:	add	x21, x21, #0x520
  40722c:	stp	x25, x26, [sp, #64]
  407230:	adrp	x26, 429000 <_obstack_memory_used@@Base+0x102f0>
  407234:	adrp	x25, 429000 <_obstack_memory_used@@Base+0x102f0>
  407238:	add	x26, x26, #0xbb0
  40723c:	add	x25, x25, #0xba8
  407240:	str	x27, [sp, #80]
  407244:	mov	w27, #0x76                  	// #118
  407248:	ldrb	w19, [x23]
  40724c:	ldr	x22, [x21]
  407250:	cmp	w19, #0x2f
  407254:	b.eq	40731c <wcrtomb@plt+0x45dc>  // b.none
  407258:	bl	402ab0 <__ctype_b_loc@plt>
  40725c:	ldr	x0, [x0]
  407260:	ubfiz	x2, x19, #1, #8
  407264:	cmp	w19, #0x5c
  407268:	ldp	x1, x3, [x22, #40]
  40726c:	ldrh	w0, [x0, x2]
  407270:	and	w0, w0, #0x4000
  407274:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  407278:	b.ne	40739c <wcrtomb@plt+0x465c>  // b.any
  40727c:	cmp	x1, x3
  407280:	b.cs	40745c <wcrtomb@plt+0x471c>  // b.hs, b.nlast
  407284:	add	x0, x1, #0x1
  407288:	str	x0, [x22, #40]
  40728c:	mov	w0, #0x5c                  	// #92
  407290:	strb	w0, [x1]
  407294:	cmp	w19, #0xb
  407298:	b.eq	40743c <wcrtomb@plt+0x46fc>  // b.none
  40729c:	b.hi	40736c <wcrtomb@plt+0x462c>  // b.pmore
  4072a0:	cmp	w19, #0x9
  4072a4:	b.eq	4073e0 <wcrtomb@plt+0x46a0>  // b.none
  4072a8:	cmp	w19, #0xa
  4072ac:	b.ne	407340 <wcrtomb@plt+0x4600>  // b.any
  4072b0:	ldr	x0, [x21]
  4072b4:	ldp	x1, x2, [x0, #40]
  4072b8:	cmp	x1, x2
  4072bc:	b.cs	4074e0 <wcrtomb@plt+0x47a0>  // b.hs, b.nlast
  4072c0:	add	x2, x1, #0x1
  4072c4:	str	x2, [x0, #40]
  4072c8:	mov	w0, #0x6e                  	// #110
  4072cc:	strb	w0, [x1]
  4072d0:	add	x23, x23, #0x1
  4072d4:	cmp	x23, x20
  4072d8:	b.ne	407248 <wcrtomb@plt+0x4508>  // b.any
  4072dc:	nop
  4072e0:	ldp	x21, x22, [sp, #32]
  4072e4:	ldp	x25, x26, [sp, #64]
  4072e8:	ldr	x27, [sp, #80]
  4072ec:	ldr	x0, [x24, #1312]
  4072f0:	ldp	x1, x2, [x0, #40]
  4072f4:	cmp	x1, x2
  4072f8:	b.cs	4074a8 <wcrtomb@plt+0x4768>  // b.hs, b.nlast
  4072fc:	add	x2, x1, #0x1
  407300:	str	x2, [x0, #40]
  407304:	mov	w0, #0x2f                  	// #47
  407308:	strb	w0, [x1]
  40730c:	ldp	x19, x20, [sp, #16]
  407310:	ldp	x23, x24, [sp, #48]
  407314:	ldp	x29, x30, [sp], #96
  407318:	ret
  40731c:	mov	x3, x22
  407320:	mov	x0, x25
  407324:	mov	x2, #0x2                   	// #2
  407328:	mov	x1, #0x1                   	// #1
  40732c:	bl	402680 <fwrite_unlocked@plt>
  407330:	add	x23, x23, #0x1
  407334:	cmp	x23, x20
  407338:	b.ne	407248 <wcrtomb@plt+0x4508>  // b.any
  40733c:	b	4072e0 <wcrtomb@plt+0x45a0>
  407340:	cmp	w19, #0x7
  407344:	b.ne	407428 <wcrtomb@plt+0x46e8>  // b.any
  407348:	ldr	x0, [x21]
  40734c:	ldp	x1, x2, [x0, #40]
  407350:	cmp	x1, x2
  407354:	b.cs	4074c8 <wcrtomb@plt+0x4788>  // b.hs, b.nlast
  407358:	add	x2, x1, #0x1
  40735c:	str	x2, [x0, #40]
  407360:	mov	w0, #0x61                  	// #97
  407364:	strb	w0, [x1]
  407368:	b	407330 <wcrtomb@plt+0x45f0>
  40736c:	cmp	w19, #0xd
  407370:	b.eq	407404 <wcrtomb@plt+0x46c4>  // b.none
  407374:	cmp	w19, #0x5c
  407378:	b.ne	4073b4 <wcrtomb@plt+0x4674>  // b.any
  40737c:	ldr	x0, [x21]
  407380:	ldp	x1, x2, [x0, #40]
  407384:	cmp	x1, x2
  407388:	b.cs	4074bc <wcrtomb@plt+0x477c>  // b.hs, b.nlast
  40738c:	add	x2, x1, #0x1
  407390:	str	x2, [x0, #40]
  407394:	strb	w19, [x1]
  407398:	b	407330 <wcrtomb@plt+0x45f0>
  40739c:	cmp	x1, x3
  4073a0:	b.cs	40746c <wcrtomb@plt+0x472c>  // b.hs, b.nlast
  4073a4:	add	x0, x1, #0x1
  4073a8:	str	x0, [x22, #40]
  4073ac:	strb	w19, [x1]
  4073b0:	b	407330 <wcrtomb@plt+0x45f0>
  4073b4:	cmp	w19, #0xc
  4073b8:	b.ne	407428 <wcrtomb@plt+0x46e8>  // b.any
  4073bc:	ldr	x0, [x21]
  4073c0:	ldp	x1, x2, [x0, #40]
  4073c4:	cmp	x1, x2
  4073c8:	b.cs	4074d4 <wcrtomb@plt+0x4794>  // b.hs, b.nlast
  4073cc:	add	x2, x1, #0x1
  4073d0:	str	x2, [x0, #40]
  4073d4:	mov	w0, #0x66                  	// #102
  4073d8:	strb	w0, [x1]
  4073dc:	b	407330 <wcrtomb@plt+0x45f0>
  4073e0:	ldr	x0, [x21]
  4073e4:	ldp	x1, x2, [x0, #40]
  4073e8:	cmp	x1, x2
  4073ec:	b.cs	4074ec <wcrtomb@plt+0x47ac>  // b.hs, b.nlast
  4073f0:	add	x2, x1, #0x1
  4073f4:	str	x2, [x0, #40]
  4073f8:	mov	w0, #0x74                  	// #116
  4073fc:	strb	w0, [x1]
  407400:	b	407330 <wcrtomb@plt+0x45f0>
  407404:	ldr	x0, [x21]
  407408:	ldp	x1, x2, [x0, #40]
  40740c:	cmp	x1, x2
  407410:	b.cs	4074f8 <wcrtomb@plt+0x47b8>  // b.hs, b.nlast
  407414:	add	x2, x1, #0x1
  407418:	str	x2, [x0, #40]
  40741c:	mov	w0, #0x72                  	// #114
  407420:	strb	w0, [x1]
  407424:	b	407330 <wcrtomb@plt+0x45f0>
  407428:	mov	w2, w19
  40742c:	mov	x1, x26
  407430:	mov	w0, #0x1                   	// #1
  407434:	bl	4028b0 <__printf_chk@plt>
  407438:	b	407330 <wcrtomb@plt+0x45f0>
  40743c:	ldr	x0, [x21]
  407440:	ldp	x1, x2, [x0, #40]
  407444:	cmp	x1, x2
  407448:	b.cs	407504 <wcrtomb@plt+0x47c4>  // b.hs, b.nlast
  40744c:	add	x2, x1, #0x1
  407450:	str	x2, [x0, #40]
  407454:	strb	w27, [x1]
  407458:	b	407330 <wcrtomb@plt+0x45f0>
  40745c:	mov	x0, x22
  407460:	mov	w1, #0x5c                  	// #92
  407464:	bl	402a20 <__overflow@plt>
  407468:	b	407294 <wcrtomb@plt+0x4554>
  40746c:	mov	w1, w19
  407470:	mov	x0, x22
  407474:	bl	402a20 <__overflow@plt>
  407478:	b	407330 <wcrtomb@plt+0x45f0>
  40747c:	ldp	x23, x24, [sp, #48]
  407480:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  407484:	ldp	x29, x30, [sp], #96
  407488:	add	x0, x0, #0xba0
  40748c:	mov	x2, #0x2                   	// #2
  407490:	mov	x1, #0x1                   	// #1
  407494:	b	402680 <fwrite_unlocked@plt>
  407498:	mov	x0, x3
  40749c:	mov	w1, #0x2f                  	// #47
  4074a0:	bl	402a20 <__overflow@plt>
  4074a4:	b	40720c <wcrtomb@plt+0x44cc>
  4074a8:	ldp	x19, x20, [sp, #16]
  4074ac:	mov	w1, #0x2f                  	// #47
  4074b0:	ldp	x23, x24, [sp, #48]
  4074b4:	ldp	x29, x30, [sp], #96
  4074b8:	b	402a20 <__overflow@plt>
  4074bc:	mov	w1, w19
  4074c0:	bl	402a20 <__overflow@plt>
  4074c4:	b	407330 <wcrtomb@plt+0x45f0>
  4074c8:	mov	w1, #0x61                  	// #97
  4074cc:	bl	402a20 <__overflow@plt>
  4074d0:	b	407330 <wcrtomb@plt+0x45f0>
  4074d4:	mov	w1, #0x66                  	// #102
  4074d8:	bl	402a20 <__overflow@plt>
  4074dc:	b	407330 <wcrtomb@plt+0x45f0>
  4074e0:	mov	w1, #0x6e                  	// #110
  4074e4:	bl	402a20 <__overflow@plt>
  4074e8:	b	407330 <wcrtomb@plt+0x45f0>
  4074ec:	mov	w1, #0x74                  	// #116
  4074f0:	bl	402a20 <__overflow@plt>
  4074f4:	b	407330 <wcrtomb@plt+0x45f0>
  4074f8:	mov	w1, #0x72                  	// #114
  4074fc:	bl	402a20 <__overflow@plt>
  407500:	b	407330 <wcrtomb@plt+0x45f0>
  407504:	mov	w1, #0x76                  	// #118
  407508:	bl	402a20 <__overflow@plt>
  40750c:	b	407330 <wcrtomb@plt+0x45f0>
  407510:	cbz	x0, 407690 <wcrtomb@plt+0x4950>
  407514:	stp	x29, x30, [sp, #-32]!
  407518:	mov	x29, sp
  40751c:	ldr	w1, [x0]
  407520:	str	x19, [sp, #16]
  407524:	mov	x19, x0
  407528:	cmp	w1, #0x3
  40752c:	b.eq	407608 <wcrtomb@plt+0x48c8>  // b.none
  407530:	b.hi	407560 <wcrtomb@plt+0x4820>  // b.pmore
  407534:	cmp	w1, #0x1
  407538:	b.eq	407624 <wcrtomb@plt+0x48e4>  // b.none
  40753c:	cmp	w1, #0x2
  407540:	b.ne	4075c4 <wcrtomb@plt+0x4884>  // b.any
  407544:	ldr	x2, [x19, #8]
  407548:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40754c:	ldr	x19, [sp, #16]
  407550:	add	x1, x1, #0xbc8
  407554:	ldp	x29, x30, [sp], #32
  407558:	mov	w0, #0x1                   	// #1
  40755c:	b	4028b0 <__printf_chk@plt>
  407560:	cmp	w1, #0x5
  407564:	b.eq	4075ec <wcrtomb@plt+0x48ac>  // b.none
  407568:	cmp	w1, #0x6
  40756c:	b.ne	4075a0 <wcrtomb@plt+0x4860>  // b.any
  407570:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  407574:	ldr	x0, [x0, #1312]
  407578:	ldp	x1, x2, [x0, #40]
  40757c:	cmp	x1, x2
  407580:	b.cs	407694 <wcrtomb@plt+0x4954>  // b.hs, b.nlast
  407584:	add	x2, x1, #0x1
  407588:	str	x2, [x0, #40]
  40758c:	mov	w0, #0x24                  	// #36
  407590:	strb	w0, [x1]
  407594:	ldr	x19, [sp, #16]
  407598:	ldp	x29, x30, [sp], #32
  40759c:	ret
  4075a0:	cmp	w1, #0x4
  4075a4:	b.ne	407594 <wcrtomb@plt+0x4854>  // b.any
  4075a8:	ldr	x2, [x19, #16]
  4075ac:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4075b0:	ldr	x19, [sp, #16]
  4075b4:	add	x1, x1, #0xbd8
  4075b8:	ldp	x29, x30, [sp], #32
  4075bc:	mov	w0, #0x1                   	// #1
  4075c0:	b	4028b0 <__printf_chk@plt>
  4075c4:	cbnz	w1, 407594 <wcrtomb@plt+0x4854>
  4075c8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  4075cc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4075d0:	ldr	x19, [sp, #16]
  4075d4:	add	x0, x0, #0xbb8
  4075d8:	ldp	x29, x30, [sp], #32
  4075dc:	mov	x2, #0xb                   	// #11
  4075e0:	ldr	x3, [x1, #1312]
  4075e4:	mov	x1, #0x1                   	// #1
  4075e8:	b	402680 <fwrite_unlocked@plt>
  4075ec:	ldr	x2, [x19, #16]
  4075f0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4075f4:	ldr	x19, [sp, #16]
  4075f8:	add	x1, x1, #0xbe0
  4075fc:	ldp	x29, x30, [sp], #32
  407600:	mov	w0, #0x1                   	// #1
  407604:	b	4028b0 <__printf_chk@plt>
  407608:	ldp	x2, x3, [x19, #8]
  40760c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407610:	ldr	x19, [sp, #16]
  407614:	add	x1, x1, #0xbd0
  407618:	ldp	x29, x30, [sp], #32
  40761c:	mov	w0, #0x1                   	// #1
  407620:	b	4028b0 <__printf_chk@plt>
  407624:	ldr	x0, [x0, #24]
  407628:	bl	4071d0 <wcrtomb@plt+0x4490>
  40762c:	ldr	x19, [x19, #24]
  407630:	cbz	x19, 407594 <wcrtomb@plt+0x4854>
  407634:	ldr	w0, [x19, #64]
  407638:	tbz	w0, #1, 407664 <wcrtomb@plt+0x4924>
  40763c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  407640:	ldr	x0, [x0, #1312]
  407644:	ldp	x1, x2, [x0, #40]
  407648:	cmp	x1, x2
  40764c:	b.cs	4076b4 <wcrtomb@plt+0x4974>  // b.hs, b.nlast
  407650:	add	x2, x1, #0x1
  407654:	str	x2, [x0, #40]
  407658:	mov	w0, #0x49                  	// #73
  40765c:	strb	w0, [x1]
  407660:	ldr	w0, [x19, #64]
  407664:	tbz	w0, #2, 407594 <wcrtomb@plt+0x4854>
  407668:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40766c:	ldr	x0, [x0, #1312]
  407670:	ldp	x1, x2, [x0, #40]
  407674:	cmp	x1, x2
  407678:	b.cs	4076a4 <wcrtomb@plt+0x4964>  // b.hs, b.nlast
  40767c:	add	x2, x1, #0x1
  407680:	str	x2, [x0, #40]
  407684:	mov	w0, #0x4d                  	// #77
  407688:	strb	w0, [x1]
  40768c:	b	407594 <wcrtomb@plt+0x4854>
  407690:	ret
  407694:	ldr	x19, [sp, #16]
  407698:	mov	w1, #0x24                  	// #36
  40769c:	ldp	x29, x30, [sp], #32
  4076a0:	b	402a20 <__overflow@plt>
  4076a4:	ldr	x19, [sp, #16]
  4076a8:	mov	w1, #0x4d                  	// #77
  4076ac:	ldp	x29, x30, [sp], #32
  4076b0:	b	402a20 <__overflow@plt>
  4076b4:	mov	w1, #0x49                  	// #73
  4076b8:	bl	402a20 <__overflow@plt>
  4076bc:	ldr	w0, [x19, #64]
  4076c0:	tbz	w0, #2, 407594 <wcrtomb@plt+0x4854>
  4076c4:	b	407668 <wcrtomb@plt+0x4928>
  4076c8:	stp	x29, x30, [sp, #-32]!
  4076cc:	mov	x29, sp
  4076d0:	stp	x19, x20, [sp, #16]
  4076d4:	and	w19, w0, #0xff
  4076d8:	bl	402ab0 <__ctype_b_loc@plt>
  4076dc:	ldr	x0, [x0]
  4076e0:	ubfiz	x3, x19, #1, #8
  4076e4:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4076e8:	cmp	w19, #0x5c
  4076ec:	ldr	x2, [x20, #1312]
  4076f0:	ldrh	w0, [x0, x3]
  4076f4:	and	w0, w0, #0x4000
  4076f8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4076fc:	ldp	x1, x3, [x2, #40]
  407700:	b.ne	4077e4 <wcrtomb@plt+0x4aa4>  // b.any
  407704:	cmp	x1, x3
  407708:	b.cs	40788c <wcrtomb@plt+0x4b4c>  // b.hs, b.nlast
  40770c:	add	x0, x1, #0x1
  407710:	str	x0, [x2, #40]
  407714:	mov	w0, #0x5c                  	// #92
  407718:	strb	w0, [x1]
  40771c:	cmp	w19, #0xb
  407720:	b.eq	407804 <wcrtomb@plt+0x4ac4>  // b.none
  407724:	b.hi	40775c <wcrtomb@plt+0x4a1c>  // b.pmore
  407728:	cmp	w19, #0x9
  40772c:	b.eq	40784c <wcrtomb@plt+0x4b0c>  // b.none
  407730:	cmp	w19, #0xa
  407734:	b.ne	4077b8 <wcrtomb@plt+0x4a78>  // b.any
  407738:	ldr	x0, [x20, #1312]
  40773c:	ldp	x1, x2, [x0, #40]
  407740:	cmp	x1, x2
  407744:	b.cs	4078cc <wcrtomb@plt+0x4b8c>  // b.hs, b.nlast
  407748:	add	x2, x1, #0x1
  40774c:	str	x2, [x0, #40]
  407750:	mov	w0, #0x6e                  	// #110
  407754:	strb	w0, [x1]
  407758:	b	4077f8 <wcrtomb@plt+0x4ab8>
  40775c:	cmp	w19, #0xd
  407760:	b.eq	407828 <wcrtomb@plt+0x4ae8>  // b.none
  407764:	cmp	w19, #0x5c
  407768:	b.ne	40778c <wcrtomb@plt+0x4a4c>  // b.any
  40776c:	ldr	x0, [x20, #1312]
  407770:	ldp	x1, x2, [x0, #40]
  407774:	cmp	x1, x2
  407778:	b.cs	4078bc <wcrtomb@plt+0x4b7c>  // b.hs, b.nlast
  40777c:	add	x2, x1, #0x1
  407780:	str	x2, [x0, #40]
  407784:	strb	w19, [x1]
  407788:	b	4077f8 <wcrtomb@plt+0x4ab8>
  40778c:	cmp	w19, #0xc
  407790:	b.ne	407870 <wcrtomb@plt+0x4b30>  // b.any
  407794:	ldr	x0, [x20, #1312]
  407798:	ldp	x1, x2, [x0, #40]
  40779c:	cmp	x1, x2
  4077a0:	b.cs	4078ac <wcrtomb@plt+0x4b6c>  // b.hs, b.nlast
  4077a4:	add	x2, x1, #0x1
  4077a8:	str	x2, [x0, #40]
  4077ac:	mov	w0, #0x66                  	// #102
  4077b0:	strb	w0, [x1]
  4077b4:	b	4077f8 <wcrtomb@plt+0x4ab8>
  4077b8:	cmp	w19, #0x7
  4077bc:	b.ne	407870 <wcrtomb@plt+0x4b30>  // b.any
  4077c0:	ldr	x0, [x20, #1312]
  4077c4:	ldp	x1, x2, [x0, #40]
  4077c8:	cmp	x1, x2
  4077cc:	b.cs	40789c <wcrtomb@plt+0x4b5c>  // b.hs, b.nlast
  4077d0:	add	x2, x1, #0x1
  4077d4:	str	x2, [x0, #40]
  4077d8:	mov	w0, #0x61                  	// #97
  4077dc:	strb	w0, [x1]
  4077e0:	b	4077f8 <wcrtomb@plt+0x4ab8>
  4077e4:	cmp	x1, x3
  4077e8:	b.cs	4078dc <wcrtomb@plt+0x4b9c>  // b.hs, b.nlast
  4077ec:	add	x0, x1, #0x1
  4077f0:	str	x0, [x2, #40]
  4077f4:	strb	w19, [x1]
  4077f8:	ldp	x19, x20, [sp, #16]
  4077fc:	ldp	x29, x30, [sp], #32
  407800:	ret
  407804:	ldr	x0, [x20, #1312]
  407808:	ldp	x1, x2, [x0, #40]
  40780c:	cmp	x1, x2
  407810:	b.cs	4078f0 <wcrtomb@plt+0x4bb0>  // b.hs, b.nlast
  407814:	add	x2, x1, #0x1
  407818:	str	x2, [x0, #40]
  40781c:	mov	w0, #0x76                  	// #118
  407820:	strb	w0, [x1]
  407824:	b	4077f8 <wcrtomb@plt+0x4ab8>
  407828:	ldr	x0, [x20, #1312]
  40782c:	ldp	x1, x2, [x0, #40]
  407830:	cmp	x1, x2
  407834:	b.cs	407910 <wcrtomb@plt+0x4bd0>  // b.hs, b.nlast
  407838:	add	x2, x1, #0x1
  40783c:	str	x2, [x0, #40]
  407840:	mov	w0, #0x72                  	// #114
  407844:	strb	w0, [x1]
  407848:	b	4077f8 <wcrtomb@plt+0x4ab8>
  40784c:	ldr	x0, [x20, #1312]
  407850:	ldp	x1, x2, [x0, #40]
  407854:	cmp	x1, x2
  407858:	b.cs	407900 <wcrtomb@plt+0x4bc0>  // b.hs, b.nlast
  40785c:	add	x2, x1, #0x1
  407860:	str	x2, [x0, #40]
  407864:	mov	w0, #0x74                  	// #116
  407868:	strb	w0, [x1]
  40786c:	b	4077f8 <wcrtomb@plt+0x4ab8>
  407870:	mov	w2, w19
  407874:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407878:	ldp	x19, x20, [sp, #16]
  40787c:	add	x1, x1, #0xbb0
  407880:	ldp	x29, x30, [sp], #32
  407884:	mov	w0, #0x1                   	// #1
  407888:	b	4028b0 <__printf_chk@plt>
  40788c:	mov	x0, x2
  407890:	mov	w1, #0x5c                  	// #92
  407894:	bl	402a20 <__overflow@plt>
  407898:	b	40771c <wcrtomb@plt+0x49dc>
  40789c:	ldp	x19, x20, [sp, #16]
  4078a0:	mov	w1, #0x61                  	// #97
  4078a4:	ldp	x29, x30, [sp], #32
  4078a8:	b	402a20 <__overflow@plt>
  4078ac:	ldp	x19, x20, [sp, #16]
  4078b0:	mov	w1, #0x66                  	// #102
  4078b4:	ldp	x29, x30, [sp], #32
  4078b8:	b	402a20 <__overflow@plt>
  4078bc:	mov	w1, w19
  4078c0:	ldp	x19, x20, [sp, #16]
  4078c4:	ldp	x29, x30, [sp], #32
  4078c8:	b	402a20 <__overflow@plt>
  4078cc:	ldp	x19, x20, [sp, #16]
  4078d0:	mov	w1, #0x6e                  	// #110
  4078d4:	ldp	x29, x30, [sp], #32
  4078d8:	b	402a20 <__overflow@plt>
  4078dc:	mov	w1, w19
  4078e0:	mov	x0, x2
  4078e4:	ldp	x19, x20, [sp, #16]
  4078e8:	ldp	x29, x30, [sp], #32
  4078ec:	b	402a20 <__overflow@plt>
  4078f0:	ldp	x19, x20, [sp, #16]
  4078f4:	mov	w1, #0x76                  	// #118
  4078f8:	ldp	x29, x30, [sp], #32
  4078fc:	b	402a20 <__overflow@plt>
  407900:	ldp	x19, x20, [sp, #16]
  407904:	mov	w1, #0x74                  	// #116
  407908:	ldp	x29, x30, [sp], #32
  40790c:	b	402a20 <__overflow@plt>
  407910:	ldp	x19, x20, [sp, #16]
  407914:	mov	w1, #0x72                  	// #114
  407918:	ldp	x29, x30, [sp], #32
  40791c:	b	402a20 <__overflow@plt>
  407920:	cbz	x0, 407e90 <wcrtomb@plt+0x5150>
  407924:	stp	x29, x30, [sp, #-96]!
  407928:	mov	x29, sp
  40792c:	stp	x19, x20, [sp, #16]
  407930:	mov	x20, x1
  407934:	stp	x21, x22, [sp, #32]
  407938:	stp	x23, x24, [sp, #48]
  40793c:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  407940:	stp	x25, x26, [sp, #64]
  407944:	mov	x26, x0
  407948:	ldr	w0, [x24, #1576]
  40794c:	ldrb	w1, [x1, #21]
  407950:	cmp	w1, #0x7d
  407954:	b.ne	407960 <wcrtomb@plt+0x4c20>  // b.any
  407958:	sub	w0, w0, #0x1
  40795c:	str	w0, [x24, #1576]
  407960:	cmp	w0, #0x0
  407964:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  407968:	b.le	4079ac <wcrtomb@plt+0x4c6c>
  40796c:	adrp	x23, 429000 <_obstack_memory_used@@Base+0x102f0>
  407970:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  407974:	add	x25, x21, #0x520
  407978:	add	x23, x23, #0xbe8
  40797c:	add	x22, x22, #0x628
  407980:	mov	w19, #0x0                   	// #0
  407984:	nop
  407988:	ldr	x3, [x25]
  40798c:	mov	x1, #0x1                   	// #1
  407990:	mov	x0, x23
  407994:	mov	x2, #0x2                   	// #2
  407998:	add	w19, w19, #0x1
  40799c:	bl	402680 <fwrite_unlocked@plt>
  4079a0:	ldr	w1, [x22]
  4079a4:	cmp	w1, w19
  4079a8:	b.gt	407988 <wcrtomb@plt+0x4c48>
  4079ac:	ldr	x0, [x20]
  4079b0:	bl	407510 <wcrtomb@plt+0x47d0>
  4079b4:	ldr	x0, [x20, #8]
  4079b8:	cbz	x0, 4079e0 <wcrtomb@plt+0x4ca0>
  4079bc:	ldr	x0, [x21, #1312]
  4079c0:	ldp	x1, x2, [x0, #40]
  4079c4:	cmp	x1, x2
  4079c8:	b.cs	407ec0 <wcrtomb@plt+0x5180>  // b.hs, b.nlast
  4079cc:	add	x2, x1, #0x1
  4079d0:	str	x2, [x0, #40]
  4079d4:	mov	w0, #0x2c                  	// #44
  4079d8:	strb	w0, [x1]
  4079dc:	ldr	x0, [x20, #8]
  4079e0:	bl	407510 <wcrtomb@plt+0x47d0>
  4079e4:	ldrb	w0, [x20, #21]
  4079e8:	ldrb	w1, [x20, #20]
  4079ec:	cmp	w0, #0x7b
  4079f0:	b.eq	407ac8 <wcrtomb@plt+0x4d88>  // b.none
  4079f4:	cmp	w1, #0x0
  4079f8:	cset	w3, ne  // ne = any
  4079fc:	ldr	x0, [x21, #1312]
  407a00:	ldp	x2, x1, [x0, #40]
  407a04:	cbnz	w3, 407a7c <wcrtomb@plt+0x4d3c>
  407a08:	ldr	x3, [x20]
  407a0c:	cbz	x3, 407aa4 <wcrtomb@plt+0x4d64>
  407a10:	cmp	x1, x2
  407a14:	b.ls	407ea4 <wcrtomb@plt+0x5164>  // b.plast
  407a18:	add	x1, x2, #0x1
  407a1c:	str	x1, [x0, #40]
  407a20:	mov	w0, #0x20                  	// #32
  407a24:	strb	w0, [x2]
  407a28:	ldr	x0, [x21, #1312]
  407a2c:	ldp	x2, x1, [x0, #40]
  407a30:	cmp	x1, x2
  407a34:	ldrb	w1, [x20, #21]
  407a38:	b.ls	407eb8 <wcrtomb@plt+0x5178>  // b.plast
  407a3c:	add	x3, x2, #0x1
  407a40:	str	x3, [x0, #40]
  407a44:	strb	w1, [x2]
  407a48:	ldrb	w0, [x20, #21]
  407a4c:	sub	w0, w0, #0x23
  407a50:	cmp	w0, #0x5a
  407a54:	b.ls	407ab0 <wcrtomb@plt+0x4d70>  // b.plast
  407a58:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x102f0>
  407a5c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407a60:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  407a64:	add	x3, x3, #0xce0
  407a68:	add	x1, x1, #0xbf0
  407a6c:	add	x0, x0, #0xc00
  407a70:	mov	w2, #0x194                 	// #404
  407a74:	stp	x27, x28, [sp, #80]
  407a78:	bl	402ca0 <__assert_fail@plt>
  407a7c:	cmp	x2, x1
  407a80:	b.cs	407fbc <wcrtomb@plt+0x527c>  // b.hs, b.nlast
  407a84:	add	x1, x2, #0x1
  407a88:	str	x1, [x0, #40]
  407a8c:	mov	w0, #0x21                  	// #33
  407a90:	strb	w0, [x2]
  407a94:	ldr	x0, [x21, #1312]
  407a98:	ldr	x3, [x20]
  407a9c:	ldp	x2, x1, [x0, #40]
  407aa0:	cbnz	x3, 407a10 <wcrtomb@plt+0x4cd0>
  407aa4:	ldr	x3, [x20, #8]
  407aa8:	cbnz	x3, 407a10 <wcrtomb@plt+0x4cd0>
  407aac:	b	407a30 <wcrtomb@plt+0x4cf0>
  407ab0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407ab4:	add	x1, x1, #0xc28
  407ab8:	ldrh	w0, [x1, w0, uxtw #1]
  407abc:	adr	x1, 407ac8 <wcrtomb@plt+0x4d88>
  407ac0:	add	x0, x1, w0, sxth #2
  407ac4:	br	x0
  407ac8:	cmp	w1, #0x0
  407acc:	cset	w3, eq  // eq = none
  407ad0:	b	4079fc <wcrtomb@plt+0x4cbc>
  407ad4:	ldr	w2, [x20, #24]
  407ad8:	cmn	w2, #0x1
  407adc:	b.ne	407ed0 <wcrtomb@plt+0x5190>  // b.any
  407ae0:	ldr	x1, [x21, #1312]
  407ae4:	ldp	x0, x2, [x1, #40]
  407ae8:	cmp	x0, x2
  407aec:	b.cs	407e94 <wcrtomb@plt+0x5154>  // b.hs, b.nlast
  407af0:	add	x2, x0, #0x1
  407af4:	str	x2, [x1, #40]
  407af8:	mov	w1, #0xa                   	// #10
  407afc:	strb	w1, [x0]
  407b00:	ldrb	w0, [x20, #21]
  407b04:	cmp	w0, #0x7b
  407b08:	b.ne	407b18 <wcrtomb@plt+0x4dd8>  // b.any
  407b0c:	ldr	w0, [x24, #1576]
  407b10:	add	w0, w0, #0x1
  407b14:	str	w0, [x24, #1576]
  407b18:	ldp	x19, x20, [sp, #16]
  407b1c:	ldp	x21, x22, [sp, #32]
  407b20:	ldp	x23, x24, [sp, #48]
  407b24:	ldp	x25, x26, [sp, #64]
  407b28:	ldp	x29, x30, [sp], #96
  407b2c:	ret
  407b30:	ldr	x1, [x26, #16]
  407b34:	ldr	x0, [x20, #24]
  407b38:	cmp	x0, x1
  407b3c:	b.cs	407ae0 <wcrtomb@plt+0x4da0>  // b.hs, b.nlast
  407b40:	ldr	x1, [x26]
  407b44:	add	x0, x0, x0, lsl #2
  407b48:	add	x0, x1, x0, lsl #3
  407b4c:	ldr	x2, [x0, #24]
  407b50:	cbz	x2, 407ae0 <wcrtomb@plt+0x4da0>
  407b54:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407b58:	mov	w0, #0x1                   	// #1
  407b5c:	add	x1, x1, #0xd80
  407b60:	bl	4028b0 <__printf_chk@plt>
  407b64:	ldr	x1, [x21, #1312]
  407b68:	ldp	x0, x2, [x1, #40]
  407b6c:	b	407ae8 <wcrtomb@plt+0x4da8>
  407b70:	ldr	x1, [x21, #1312]
  407b74:	mov	w0, #0x5c                  	// #92
  407b78:	bl	402bd0 <fputc_unlocked@plt>
  407b7c:	ldr	x2, [x20, #32]
  407b80:	cbz	x2, 407ae0 <wcrtomb@plt+0x4da0>
  407b84:	ldr	x3, [x21, #1312]
  407b88:	mov	x1, #0x1                   	// #1
  407b8c:	ldr	x0, [x20, #24]
  407b90:	bl	402680 <fwrite_unlocked@plt>
  407b94:	ldr	x1, [x21, #1312]
  407b98:	ldp	x0, x2, [x1, #40]
  407b9c:	b	407ae8 <wcrtomb@plt+0x4da8>
  407ba0:	ldr	x0, [x20, #24]
  407ba4:	ldr	x1, [x21, #1312]
  407ba8:	cbz	x0, 407ae4 <wcrtomb@plt+0x4da4>
  407bac:	ldr	x0, [x0]
  407bb0:	bl	402c30 <fputs_unlocked@plt>
  407bb4:	ldr	x1, [x21, #1312]
  407bb8:	ldp	x0, x2, [x1, #40]
  407bbc:	b	407ae8 <wcrtomb@plt+0x4da8>
  407bc0:	ldr	x23, [x20, #24]
  407bc4:	cbz	x23, 407ae0 <wcrtomb@plt+0x4da0>
  407bc8:	ldr	x0, [x23]
  407bcc:	mov	w22, #0x0                   	// #0
  407bd0:	bl	4071d0 <wcrtomb@plt+0x4490>
  407bd4:	ldr	x19, [x23, #8]
  407bd8:	cbz	x19, 407fd4 <wcrtomb@plt+0x5294>
  407bdc:	adrp	x26, 429000 <_obstack_memory_used@@Base+0x102f0>
  407be0:	add	x26, x26, #0xc10
  407be4:	stp	x27, x28, [sp, #80]
  407be8:	mov	w28, #0x6c                  	// #108
  407bec:	mov	w27, #0x75                  	// #117
  407bf0:	b	407c68 <wcrtomb@plt+0x4f28>
  407bf4:	ldr	x0, [x25]
  407bf8:	ldp	x1, x2, [x0, #40]
  407bfc:	cmp	x1, x2
  407c00:	b.cs	40823c <wcrtomb@plt+0x54fc>  // b.hs, b.nlast
  407c04:	add	x2, x1, #0x1
  407c08:	str	x2, [x0, #40]
  407c0c:	mov	w0, #0x45                  	// #69
  407c10:	strb	w0, [x1]
  407c14:	ldr	w22, [x19, #20]
  407c18:	ldr	x2, [x19, #8]
  407c1c:	cbz	x2, 407c30 <wcrtomb@plt+0x4ef0>
  407c20:	ldr	x3, [x21, #1312]
  407c24:	mov	x1, #0x1                   	// #1
  407c28:	ldr	x0, [x19]
  407c2c:	bl	402680 <fwrite_unlocked@plt>
  407c30:	ldr	w2, [x19, #16]
  407c34:	cmn	w2, #0x1
  407c38:	b.eq	407c60 <wcrtomb@plt+0x4f20>  // b.none
  407c3c:	cbnz	w2, 407fac <wcrtomb@plt+0x526c>
  407c40:	ldr	x0, [x21, #1312]
  407c44:	ldp	x1, x2, [x0, #40]
  407c48:	cmp	x1, x2
  407c4c:	b.cs	408230 <wcrtomb@plt+0x54f0>  // b.hs, b.nlast
  407c50:	add	x2, x1, #0x1
  407c54:	str	x2, [x0, #40]
  407c58:	mov	w0, #0x26                  	// #38
  407c5c:	strb	w0, [x1]
  407c60:	ldr	x19, [x19, #24]
  407c64:	cbz	x19, 407fd0 <wcrtomb@plt+0x5290>
  407c68:	ldr	w0, [x19, #20]
  407c6c:	cmp	w0, w22
  407c70:	b.eq	407c18 <wcrtomb@plt+0x4ed8>  // b.none
  407c74:	ldr	x0, [x21, #1312]
  407c78:	add	x25, x21, #0x520
  407c7c:	ldp	x1, x2, [x0, #40]
  407c80:	cmp	x1, x2
  407c84:	b.cs	4081ec <wcrtomb@plt+0x54ac>  // b.hs, b.nlast
  407c88:	add	x2, x1, #0x1
  407c8c:	str	x2, [x0, #40]
  407c90:	mov	w0, #0x5c                  	// #92
  407c94:	strb	w0, [x1]
  407c98:	ldr	w22, [x19, #20]
  407c9c:	cbz	w22, 407bf4 <wcrtomb@plt+0x4eb4>
  407ca0:	cmp	w22, #0x1
  407ca4:	b.eq	408108 <wcrtomb@plt+0x53c8>  // b.none
  407ca8:	cmp	w22, #0x2
  407cac:	b.eq	4081c4 <wcrtomb@plt+0x5484>  // b.none
  407cb0:	and	w0, w22, #0xc
  407cb4:	cmp	w0, #0x4
  407cb8:	b.eq	4081f8 <wcrtomb@plt+0x54b8>  // b.none
  407cbc:	cmp	w0, #0x8
  407cc0:	b.ne	407c18 <wcrtomb@plt+0x4ed8>  // b.any
  407cc4:	ldr	x0, [x25]
  407cc8:	ldp	x1, x2, [x0, #40]
  407ccc:	cmp	x1, x2
  407cd0:	b.cs	408348 <wcrtomb@plt+0x5608>  // b.hs, b.nlast
  407cd4:	add	x2, x1, #0x1
  407cd8:	str	x2, [x0, #40]
  407cdc:	strb	w28, [x1]
  407ce0:	ldr	w22, [x19, #20]
  407ce4:	b	407c18 <wcrtomb@plt+0x4ed8>
  407ce8:	ldr	x0, [x21, #1312]
  407cec:	ldp	x1, x2, [x0, #40]
  407cf0:	cmp	x1, x2
  407cf4:	b.cs	408278 <wcrtomb@plt+0x5538>  // b.hs, b.nlast
  407cf8:	add	x2, x1, #0x1
  407cfc:	str	x2, [x0, #40]
  407d00:	mov	w0, #0x20                  	// #32
  407d04:	strb	w0, [x1]
  407d08:	ldr	x1, [x21, #1312]
  407d0c:	ldr	x0, [x20, #24]
  407d10:	bl	402c30 <fputs_unlocked@plt>
  407d14:	ldr	x1, [x21, #1312]
  407d18:	ldp	x0, x2, [x1, #40]
  407d1c:	b	407ae8 <wcrtomb@plt+0x4da8>
  407d20:	ldr	x0, [x21, #1312]
  407d24:	ldp	x1, x2, [x0, #40]
  407d28:	cmp	x1, x2
  407d2c:	b.cs	40826c <wcrtomb@plt+0x552c>  // b.hs, b.nlast
  407d30:	add	x2, x1, #0x1
  407d34:	str	x2, [x0, #40]
  407d38:	mov	w0, #0x20                  	// #32
  407d3c:	strb	w0, [x1]
  407d40:	ldr	x1, [x21, #1312]
  407d44:	ldr	x0, [x20, #24]
  407d48:	b	407bac <wcrtomb@plt+0x4e6c>
  407d4c:	ldr	x0, [x21, #1312]
  407d50:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  407d54:	ldr	w1, [x1, #2284]
  407d58:	cmp	w1, #0x1
  407d5c:	ldp	x1, x2, [x0, #40]
  407d60:	b.le	407eec <wcrtomb@plt+0x51ac>
  407d64:	cmp	x2, x1
  407d68:	b.ls	4082bc <wcrtomb@plt+0x557c>  // b.plast
  407d6c:	add	x2, x1, #0x1
  407d70:	str	x2, [x0, #40]
  407d74:	mov	w0, #0x2f                  	// #47
  407d78:	strb	w0, [x1]
  407d7c:	ldr	x0, [x20, #24]
  407d80:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  407d84:	mov	w19, #0x2                   	// #2
  407d88:	add	x25, x25, #0x520
  407d8c:	ldr	x0, [x0]
  407d90:	cbz	x0, 407db0 <wcrtomb@plt+0x5070>
  407d94:	nop
  407d98:	ldr	x1, [x25]
  407d9c:	bl	402c30 <fputs_unlocked@plt>
  407da0:	ldr	x0, [x20, #24]
  407da4:	ldr	x0, [x0, w19, uxtw #3]
  407da8:	add	w19, w19, #0x2
  407dac:	cbnz	x0, 407d98 <wcrtomb@plt+0x5058>
  407db0:	ldr	x0, [x21, #1312]
  407db4:	ldp	x1, x2, [x0, #40]
  407db8:	cmp	x1, x2
  407dbc:	b.cs	4082b0 <wcrtomb@plt+0x5570>  // b.hs, b.nlast
  407dc0:	add	x2, x1, #0x1
  407dc4:	str	x2, [x0, #40]
  407dc8:	mov	w0, #0x2f                  	// #47
  407dcc:	strb	w0, [x1]
  407dd0:	ldr	x0, [x20, #24]
  407dd4:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  407dd8:	mov	w19, #0x0                   	// #0
  407ddc:	add	x25, x25, #0x520
  407de0:	ldr	x1, [x0]
  407de4:	cbz	x1, 407e08 <wcrtomb@plt+0x50c8>
  407de8:	add	w2, w19, #0x1
  407dec:	add	w19, w19, #0x2
  407df0:	ldr	x1, [x25]
  407df4:	ldr	x0, [x0, x2, lsl #3]
  407df8:	bl	402c30 <fputs_unlocked@plt>
  407dfc:	ldr	x0, [x20, #24]
  407e00:	ldr	x1, [x0, w19, uxtw #3]
  407e04:	cbnz	x1, 407de8 <wcrtomb@plt+0x50a8>
  407e08:	ldr	x0, [x21, #1312]
  407e0c:	ldp	x1, x2, [x0, #40]
  407e10:	cmp	x1, x2
  407e14:	b.cs	40824c <wcrtomb@plt+0x550c>  // b.hs, b.nlast
  407e18:	add	x2, x1, #0x1
  407e1c:	str	x2, [x0, #40]
  407e20:	mov	w0, #0x2f                  	// #47
  407e24:	strb	w0, [x1]
  407e28:	ldr	x1, [x21, #1312]
  407e2c:	ldp	x0, x2, [x1, #40]
  407e30:	b	407ae8 <wcrtomb@plt+0x4da8>
  407e34:	ldr	x2, [x20, #24]
  407e38:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  407e3c:	mov	w0, #0x1                   	// #1
  407e40:	add	x1, x1, #0xd20
  407e44:	bl	4028b0 <__printf_chk@plt>
  407e48:	ldr	x1, [x21, #1312]
  407e4c:	ldp	x0, x2, [x1, #40]
  407e50:	b	407ae8 <wcrtomb@plt+0x4da8>
  407e54:	ldr	x0, [x21, #1312]
  407e58:	ldp	x1, x2, [x0, #40]
  407e5c:	cmp	x1, x2
  407e60:	b.cs	408260 <wcrtomb@plt+0x5520>  // b.hs, b.nlast
  407e64:	add	x2, x1, #0x1
  407e68:	str	x2, [x0, #40]
  407e6c:	mov	w0, #0x20                  	// #32
  407e70:	strb	w0, [x1]
  407e74:	ldp	x0, x2, [x20, #24]
  407e78:	mov	x1, #0x1                   	// #1
  407e7c:	ldr	x3, [x21, #1312]
  407e80:	bl	402680 <fwrite_unlocked@plt>
  407e84:	ldr	x1, [x21, #1312]
  407e88:	ldp	x0, x2, [x1, #40]
  407e8c:	b	407ae8 <wcrtomb@plt+0x4da8>
  407e90:	ret
  407e94:	mov	x0, x1
  407e98:	mov	w1, #0xa                   	// #10
  407e9c:	bl	402a20 <__overflow@plt>
  407ea0:	b	407b00 <wcrtomb@plt+0x4dc0>
  407ea4:	mov	w1, #0x20                  	// #32
  407ea8:	bl	402a20 <__overflow@plt>
  407eac:	ldr	x0, [x21, #1312]
  407eb0:	ldp	x2, x1, [x0, #40]
  407eb4:	b	407a30 <wcrtomb@plt+0x4cf0>
  407eb8:	bl	402a20 <__overflow@plt>
  407ebc:	b	407a48 <wcrtomb@plt+0x4d08>
  407ec0:	mov	w1, #0x2c                  	// #44
  407ec4:	bl	402a20 <__overflow@plt>
  407ec8:	ldr	x0, [x20, #8]
  407ecc:	b	4079e0 <wcrtomb@plt+0x4ca0>
  407ed0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407ed4:	mov	w0, #0x1                   	// #1
  407ed8:	add	x1, x1, #0xc08
  407edc:	bl	4028b0 <__printf_chk@plt>
  407ee0:	ldr	x1, [x21, #1312]
  407ee4:	ldp	x0, x2, [x1, #40]
  407ee8:	b	407ae8 <wcrtomb@plt+0x4da8>
  407eec:	cmp	x2, x1
  407ef0:	b.ls	4082c8 <wcrtomb@plt+0x5588>  // b.plast
  407ef4:	add	x2, x1, #0x1
  407ef8:	str	x2, [x0, #40]
  407efc:	mov	w0, #0x2f                  	// #47
  407f00:	strb	w0, [x1]
  407f04:	ldr	x0, [x21, #1312]
  407f08:	mov	x19, #0x0                   	// #0
  407f0c:	ldp	x1, x4, [x0, #40]
  407f10:	b	407f34 <wcrtomb@plt+0x51f4>
  407f14:	add	x2, x1, #0x1
  407f18:	str	x2, [x0, #40]
  407f1c:	strb	w3, [x1]
  407f20:	ldr	x0, [x21, #1312]
  407f24:	ldp	x1, x4, [x0, #40]
  407f28:	add	x19, x19, #0x1
  407f2c:	cmp	x19, #0x100
  407f30:	b.eq	408130 <wcrtomb@plt+0x53f0>  // b.none
  407f34:	ldr	x2, [x20, #24]
  407f38:	and	w3, w19, #0xff
  407f3c:	ldrb	w2, [x2, x19]
  407f40:	cmp	w2, w19, uxtb
  407f44:	b.eq	407f28 <wcrtomb@plt+0x51e8>  // b.none
  407f48:	cmp	x1, x4
  407f4c:	b.cc	407f14 <wcrtomb@plt+0x51d4>  // b.lo, b.ul, b.last
  407f50:	mov	w1, w19
  407f54:	bl	402a20 <__overflow@plt>
  407f58:	ldr	x0, [x21, #1312]
  407f5c:	ldp	x1, x4, [x0, #40]
  407f60:	b	407f28 <wcrtomb@plt+0x51e8>
  407f64:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f68:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f6c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f70:	add	x3, x3, #0xce0
  407f74:	add	x1, x1, #0xbf0
  407f78:	add	x0, x0, #0xc00
  407f7c:	mov	w2, #0x123                 	// #291
  407f80:	stp	x27, x28, [sp, #80]
  407f84:	bl	402ca0 <__assert_fail@plt>
  407f88:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f8c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f90:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  407f94:	add	x3, x3, #0xce0
  407f98:	add	x1, x1, #0xbf0
  407f9c:	add	x0, x0, #0xc00
  407fa0:	mov	w2, #0x17e                 	// #382
  407fa4:	stp	x27, x28, [sp, #80]
  407fa8:	bl	402ca0 <__assert_fail@plt>
  407fac:	mov	x1, x26
  407fb0:	mov	w0, #0x1                   	// #1
  407fb4:	bl	4028b0 <__printf_chk@plt>
  407fb8:	b	407c60 <wcrtomb@plt+0x4f20>
  407fbc:	mov	w1, #0x21                  	// #33
  407fc0:	bl	402a20 <__overflow@plt>
  407fc4:	ldr	x0, [x21, #1312]
  407fc8:	ldp	x2, x1, [x0, #40]
  407fcc:	b	407a08 <wcrtomb@plt+0x4cc8>
  407fd0:	ldp	x27, x28, [sp, #80]
  407fd4:	ldr	x0, [x21, #1312]
  407fd8:	ldp	x1, x2, [x0, #40]
  407fdc:	cmp	x1, x2
  407fe0:	b.cs	408284 <wcrtomb@plt+0x5544>  // b.hs, b.nlast
  407fe4:	add	x2, x1, #0x1
  407fe8:	str	x2, [x0, #40]
  407fec:	mov	w0, #0x2f                  	// #47
  407ff0:	strb	w0, [x1]
  407ff4:	ldr	x19, [x23]
  407ff8:	cbz	x19, 40804c <wcrtomb@plt+0x530c>
  407ffc:	ldr	w0, [x19, #64]
  408000:	tbz	w0, #1, 408028 <wcrtomb@plt+0x52e8>
  408004:	ldr	x0, [x21, #1312]
  408008:	ldp	x1, x2, [x0, #40]
  40800c:	cmp	x1, x2
  408010:	b.cs	408338 <wcrtomb@plt+0x55f8>  // b.hs, b.nlast
  408014:	add	x2, x1, #0x1
  408018:	str	x2, [x0, #40]
  40801c:	mov	w0, #0x69                  	// #105
  408020:	strb	w0, [x1]
  408024:	ldr	w0, [x19, #64]
  408028:	tbz	w0, #2, 40804c <wcrtomb@plt+0x530c>
  40802c:	ldr	x0, [x21, #1312]
  408030:	ldp	x1, x2, [x0, #40]
  408034:	cmp	x1, x2
  408038:	b.cs	40832c <wcrtomb@plt+0x55ec>  // b.hs, b.nlast
  40803c:	add	x2, x1, #0x1
  408040:	str	x2, [x0, #40]
  408044:	mov	w0, #0x6d                  	// #109
  408048:	strb	w0, [x1]
  40804c:	ldrb	w0, [x23, #32]
  408050:	tbz	w0, #0, 408078 <wcrtomb@plt+0x5338>
  408054:	ldr	x0, [x21, #1312]
  408058:	ldp	x1, x2, [x0, #40]
  40805c:	cmp	x1, x2
  408060:	b.cs	40830c <wcrtomb@plt+0x55cc>  // b.hs, b.nlast
  408064:	add	x2, x1, #0x1
  408068:	str	x2, [x0, #40]
  40806c:	mov	w0, #0x67                  	// #103
  408070:	strb	w0, [x1]
  408074:	ldrb	w0, [x23, #32]
  408078:	tbz	w0, #3, 4080a0 <wcrtomb@plt+0x5360>
  40807c:	ldr	x0, [x21, #1312]
  408080:	ldp	x1, x2, [x0, #40]
  408084:	cmp	x1, x2
  408088:	b.cs	4082f0 <wcrtomb@plt+0x55b0>  // b.hs, b.nlast
  40808c:	add	x2, x1, #0x1
  408090:	str	x2, [x0, #40]
  408094:	mov	w0, #0x65                  	// #101
  408098:	strb	w0, [x1]
  40809c:	ldrb	w0, [x23, #32]
  4080a0:	tst	w0, #0x6
  4080a4:	b.eq	4080c8 <wcrtomb@plt+0x5388>  // b.none
  4080a8:	ldr	x0, [x21, #1312]
  4080ac:	ldp	x1, x2, [x0, #40]
  4080b0:	cmp	x1, x2
  4080b4:	b.cs	408300 <wcrtomb@plt+0x55c0>  // b.hs, b.nlast
  4080b8:	add	x2, x1, #0x1
  4080bc:	str	x2, [x0, #40]
  4080c0:	mov	w0, #0x70                  	// #112
  4080c4:	strb	w0, [x1]
  4080c8:	ldr	x2, [x23, #16]
  4080cc:	cbnz	x2, 40821c <wcrtomb@plt+0x54dc>
  4080d0:	ldr	x1, [x21, #1312]
  4080d4:	ldr	x3, [x23, #24]
  4080d8:	ldp	x0, x2, [x1, #40]
  4080dc:	cbz	x3, 407ae8 <wcrtomb@plt+0x4da8>
  4080e0:	cmp	x2, x0
  4080e4:	b.ls	408290 <wcrtomb@plt+0x5550>  // b.plast
  4080e8:	add	x2, x0, #0x1
  4080ec:	str	x2, [x1, #40]
  4080f0:	mov	w1, #0x77                  	// #119
  4080f4:	strb	w1, [x0]
  4080f8:	ldr	x0, [x23, #24]
  4080fc:	ldr	x1, [x21, #1312]
  408100:	cbnz	x0, 407bac <wcrtomb@plt+0x4e6c>
  408104:	b	407ae4 <wcrtomb@plt+0x4da4>
  408108:	ldr	x0, [x25]
  40810c:	ldp	x1, x2, [x0, #40]
  408110:	cmp	x1, x2
  408114:	b.cs	4082a0 <wcrtomb@plt+0x5560>  // b.hs, b.nlast
  408118:	add	x2, x1, #0x1
  40811c:	str	x2, [x0, #40]
  408120:	mov	w0, #0x55                  	// #85
  408124:	strb	w0, [x1]
  408128:	ldr	w22, [x19, #20]
  40812c:	b	407c18 <wcrtomb@plt+0x4ed8>
  408130:	cmp	x4, x1
  408134:	b.ls	4082e4 <wcrtomb@plt+0x55a4>  // b.plast
  408138:	add	x2, x1, #0x1
  40813c:	str	x2, [x0, #40]
  408140:	mov	w0, #0x2f                  	// #47
  408144:	strb	w0, [x1]
  408148:	ldr	x0, [x21, #1312]
  40814c:	mov	x19, #0x0                   	// #0
  408150:	ldp	x2, x3, [x0, #40]
  408154:	b	408178 <wcrtomb@plt+0x5438>
  408158:	add	x3, x2, #0x1
  40815c:	str	x3, [x0, #40]
  408160:	strb	w1, [x2]
  408164:	ldr	x0, [x21, #1312]
  408168:	ldp	x2, x3, [x0, #40]
  40816c:	add	x19, x19, #0x1
  408170:	cmp	x19, #0x100
  408174:	b.eq	4081a0 <wcrtomb@plt+0x5460>  // b.none
  408178:	ldr	x1, [x20, #24]
  40817c:	ldrb	w1, [x1, x19]
  408180:	cmp	w1, w19, uxtb
  408184:	b.eq	40816c <wcrtomb@plt+0x542c>  // b.none
  408188:	cmp	x2, x3
  40818c:	b.cc	408158 <wcrtomb@plt+0x5418>  // b.lo, b.ul, b.last
  408190:	bl	402a20 <__overflow@plt>
  408194:	ldr	x0, [x21, #1312]
  408198:	ldp	x2, x3, [x0, #40]
  40819c:	b	40816c <wcrtomb@plt+0x542c>
  4081a0:	cmp	x2, x3
  4081a4:	b.cs	40824c <wcrtomb@plt+0x550c>  // b.hs, b.nlast
  4081a8:	add	x1, x2, #0x1
  4081ac:	str	x1, [x0, #40]
  4081b0:	mov	w0, #0x2f                  	// #47
  4081b4:	strb	w0, [x2]
  4081b8:	ldr	x1, [x21, #1312]
  4081bc:	ldp	x0, x2, [x1, #40]
  4081c0:	b	407ae8 <wcrtomb@plt+0x4da8>
  4081c4:	ldr	x0, [x25]
  4081c8:	ldp	x1, x2, [x0, #40]
  4081cc:	cmp	x1, x2
  4081d0:	b.cs	4082d4 <wcrtomb@plt+0x5594>  // b.hs, b.nlast
  4081d4:	add	x2, x1, #0x1
  4081d8:	str	x2, [x0, #40]
  4081dc:	mov	w0, #0x4c                  	// #76
  4081e0:	strb	w0, [x1]
  4081e4:	ldr	w22, [x19, #20]
  4081e8:	b	407c18 <wcrtomb@plt+0x4ed8>
  4081ec:	mov	w1, #0x5c                  	// #92
  4081f0:	bl	402a20 <__overflow@plt>
  4081f4:	b	407c98 <wcrtomb@plt+0x4f58>
  4081f8:	ldr	x0, [x25]
  4081fc:	ldp	x1, x2, [x0, #40]
  408200:	cmp	x1, x2
  408204:	b.cs	40831c <wcrtomb@plt+0x55dc>  // b.hs, b.nlast
  408208:	add	x2, x1, #0x1
  40820c:	str	x2, [x0, #40]
  408210:	strb	w27, [x1]
  408214:	ldr	w22, [x19, #20]
  408218:	b	407c18 <wcrtomb@plt+0x4ed8>
  40821c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  408220:	mov	w0, #0x1                   	// #1
  408224:	add	x1, x1, #0xbc8
  408228:	bl	4028b0 <__printf_chk@plt>
  40822c:	b	4080d0 <wcrtomb@plt+0x5390>
  408230:	mov	w1, #0x26                  	// #38
  408234:	bl	402a20 <__overflow@plt>
  408238:	b	407c60 <wcrtomb@plt+0x4f20>
  40823c:	mov	w1, #0x45                  	// #69
  408240:	bl	402a20 <__overflow@plt>
  408244:	ldr	w22, [x19, #20]
  408248:	b	407c18 <wcrtomb@plt+0x4ed8>
  40824c:	mov	w1, #0x2f                  	// #47
  408250:	bl	402a20 <__overflow@plt>
  408254:	ldr	x1, [x21, #1312]
  408258:	ldp	x0, x2, [x1, #40]
  40825c:	b	407ae8 <wcrtomb@plt+0x4da8>
  408260:	mov	w1, #0x20                  	// #32
  408264:	bl	402a20 <__overflow@plt>
  408268:	b	407e74 <wcrtomb@plt+0x5134>
  40826c:	mov	w1, #0x20                  	// #32
  408270:	bl	402a20 <__overflow@plt>
  408274:	b	407d40 <wcrtomb@plt+0x5000>
  408278:	mov	w1, #0x20                  	// #32
  40827c:	bl	402a20 <__overflow@plt>
  408280:	b	407d08 <wcrtomb@plt+0x4fc8>
  408284:	mov	w1, #0x2f                  	// #47
  408288:	bl	402a20 <__overflow@plt>
  40828c:	b	407ff4 <wcrtomb@plt+0x52b4>
  408290:	mov	x0, x1
  408294:	mov	w1, #0x77                  	// #119
  408298:	bl	402a20 <__overflow@plt>
  40829c:	b	4080f8 <wcrtomb@plt+0x53b8>
  4082a0:	mov	w1, #0x55                  	// #85
  4082a4:	bl	402a20 <__overflow@plt>
  4082a8:	ldr	w22, [x19, #20]
  4082ac:	b	407c18 <wcrtomb@plt+0x4ed8>
  4082b0:	mov	w1, #0x2f                  	// #47
  4082b4:	bl	402a20 <__overflow@plt>
  4082b8:	b	407dd0 <wcrtomb@plt+0x5090>
  4082bc:	mov	w1, #0x2f                  	// #47
  4082c0:	bl	402a20 <__overflow@plt>
  4082c4:	b	407d7c <wcrtomb@plt+0x503c>
  4082c8:	mov	w1, #0x2f                  	// #47
  4082cc:	bl	402a20 <__overflow@plt>
  4082d0:	b	407f04 <wcrtomb@plt+0x51c4>
  4082d4:	mov	w1, #0x4c                  	// #76
  4082d8:	bl	402a20 <__overflow@plt>
  4082dc:	ldr	w22, [x19, #20]
  4082e0:	b	407c18 <wcrtomb@plt+0x4ed8>
  4082e4:	mov	w1, #0x2f                  	// #47
  4082e8:	bl	402a20 <__overflow@plt>
  4082ec:	b	408148 <wcrtomb@plt+0x5408>
  4082f0:	mov	w1, #0x65                  	// #101
  4082f4:	bl	402a20 <__overflow@plt>
  4082f8:	ldrb	w0, [x23, #32]
  4082fc:	b	4080a0 <wcrtomb@plt+0x5360>
  408300:	mov	w1, #0x70                  	// #112
  408304:	bl	402a20 <__overflow@plt>
  408308:	b	4080c8 <wcrtomb@plt+0x5388>
  40830c:	mov	w1, #0x67                  	// #103
  408310:	bl	402a20 <__overflow@plt>
  408314:	ldrb	w0, [x23, #32]
  408318:	b	408078 <wcrtomb@plt+0x5338>
  40831c:	mov	w1, #0x75                  	// #117
  408320:	bl	402a20 <__overflow@plt>
  408324:	ldr	w22, [x19, #20]
  408328:	b	407c18 <wcrtomb@plt+0x4ed8>
  40832c:	mov	w1, #0x6d                  	// #109
  408330:	bl	402a20 <__overflow@plt>
  408334:	b	40804c <wcrtomb@plt+0x530c>
  408338:	mov	w1, #0x69                  	// #105
  40833c:	bl	402a20 <__overflow@plt>
  408340:	ldr	w0, [x19, #64]
  408344:	b	408028 <wcrtomb@plt+0x52e8>
  408348:	mov	w1, #0x6c                  	// #108
  40834c:	bl	402a20 <__overflow@plt>
  408350:	ldr	w22, [x19, #20]
  408354:	b	407c18 <wcrtomb@plt+0x4ed8>
  408358:	cbz	x0, 4083d0 <wcrtomb@plt+0x5690>
  40835c:	stp	x29, x30, [sp, #-48]!
  408360:	mov	w1, #0x1                   	// #1
  408364:	mov	x29, sp
  408368:	stp	x19, x20, [sp, #16]
  40836c:	mov	x19, x0
  408370:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  408374:	stp	x21, x22, [sp, #32]
  408378:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40837c:	add	x0, x0, #0xc18
  408380:	str	w1, [x22, #1576]
  408384:	bl	402a40 <puts@plt>
  408388:	ldr	x0, [x19, #16]
  40838c:	cbz	x0, 4083bc <wcrtomb@plt+0x567c>
  408390:	mov	x21, #0x0                   	// #0
  408394:	mov	x20, #0x0                   	// #0
  408398:	ldr	x1, [x19]
  40839c:	mov	x0, x19
  4083a0:	add	x20, x20, #0x1
  4083a4:	add	x1, x1, x21
  4083a8:	bl	407920 <wcrtomb@plt+0x4be0>
  4083ac:	ldr	x0, [x19, #16]
  4083b0:	add	x21, x21, #0x28
  4083b4:	cmp	x0, x20
  4083b8:	b.hi	408398 <wcrtomb@plt+0x5658>  // b.pmore
  4083bc:	str	wzr, [x22, #1576]
  4083c0:	ldp	x19, x20, [sp, #16]
  4083c4:	ldp	x21, x22, [sp, #32]
  4083c8:	ldp	x29, x30, [sp], #48
  4083cc:	ret
  4083d0:	ret
  4083d4:	nop
  4083d8:	mov	w0, #0x0                   	// #0
  4083dc:	ret
  4083e0:	stp	x29, x30, [sp, #-48]!
  4083e4:	mov	x29, sp
  4083e8:	stp	x19, x20, [sp, #16]
  4083ec:	mov	x19, x0
  4083f0:	mov	x20, x1
  4083f4:	ldr	x0, [x0]
  4083f8:	ldr	x1, [x19, #8]
  4083fc:	ldr	x2, [x19, #24]
  408400:	sub	x3, x1, x0
  408404:	str	x21, [sp, #32]
  408408:	lsl	x2, x2, #1
  40840c:	cmp	x2, w3, sxtw
  408410:	b.cc	408470 <wcrtomb@plt+0x5730>  // b.lo, b.ul, b.last
  408414:	sxtw	x21, w3
  408418:	cmp	x20, x2
  40841c:	b.hi	408464 <wcrtomb@plt+0x5724>  // b.pmore
  408420:	str	x2, [x19, #24]
  408424:	add	x1, x2, #0x1
  408428:	cmp	x2, #0x31
  40842c:	b.hi	40843c <wcrtomb@plt+0x56fc>  // b.pmore
  408430:	mov	x2, #0x32                  	// #50
  408434:	mov	x1, #0x33                  	// #51
  408438:	str	x2, [x19, #24]
  40843c:	adds	x1, x21, x1
  408440:	b.mi	4084a4 <wcrtomb@plt+0x5764>  // b.first
  408444:	bl	418660 <wcrtomb@plt+0x15920>
  408448:	str	x0, [x19]
  40844c:	add	x0, x0, x21
  408450:	str	x0, [x19, #8]
  408454:	ldp	x19, x20, [sp, #16]
  408458:	ldr	x21, [sp, #32]
  40845c:	ldp	x29, x30, [sp], #48
  408460:	ret
  408464:	mov	x2, x20
  408468:	str	x20, [x19, #24]
  40846c:	b	408424 <wcrtomb@plt+0x56e4>
  408470:	ldr	x2, [x19, #16]
  408474:	bl	402660 <memmove@plt>
  408478:	ldp	x0, x2, [x19]
  40847c:	str	x0, [x19, #8]
  408480:	ldr	x1, [x19, #24]
  408484:	sub	x2, x2, x0
  408488:	add	x2, x2, x1
  40848c:	str	x2, [x19, #24]
  408490:	cmp	x2, x20
  408494:	b.hi	408454 <wcrtomb@plt+0x5714>  // b.pmore
  408498:	lsl	x2, x2, #1
  40849c:	mov	x21, #0x0                   	// #0
  4084a0:	b	408418 <wcrtomb@plt+0x56d8>
  4084a4:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4084a8:	stp	x29, x30, [sp, #-48]!
  4084ac:	mov	x29, sp
  4084b0:	stp	x19, x20, [sp, #16]
  4084b4:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4084b8:	add	x20, x20, #0x630
  4084bc:	stp	x21, x22, [sp, #32]
  4084c0:	mov	x21, x0
  4084c4:	mov	x19, x1
  4084c8:	str	xzr, [x20, #16]
  4084cc:	str	x0, [x1, #48]
  4084d0:	ldrb	w0, [x0]
  4084d4:	cmp	w0, #0x2d
  4084d8:	b.eq	4085c0 <wcrtomb@plt+0x5880>  // b.none
  4084dc:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4084e0:	ldrb	w0, [x0, #1904]
  4084e4:	cbnz	w0, 40861c <wcrtomb@plt+0x58dc>
  4084e8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  4084ec:	mov	x0, x21
  4084f0:	mov	w2, #0x0                   	// #0
  4084f4:	ldr	x1, [x1, #1144]
  4084f8:	bl	40c518 <wcrtomb@plt+0x97d8>
  4084fc:	str	x0, [x19, #184]
  408500:	cbz	x0, 408658 <wcrtomb@plt+0x5918>
  408504:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  408508:	adrp	x1, 408000 <wcrtomb@plt+0x52c0>
  40850c:	add	x1, x1, #0x9e0
  408510:	str	x1, [x19, #32]
  408514:	ldr	x1, [x2, #1912]
  408518:	cbz	x1, 40862c <wcrtomb@plt+0x58ec>
  40851c:	ldr	x0, [x19, #48]
  408520:	bl	4187a8 <wcrtomb@plt+0x15a68>
  408524:	mov	x21, x0
  408528:	mov	w1, #0x2f                  	// #47
  40852c:	bl	4029b0 <strrchr@plt>
  408530:	cbz	x0, 40864c <wcrtomb@plt+0x590c>
  408534:	strb	wzr, [x0]
  408538:	ldr	x0, [x19, #184]
  40853c:	bl	402780 <fileno@plt>
  408540:	bl	402bc0 <isatty@plt>
  408544:	cbnz	w0, 4086c0 <wcrtomb@plt+0x5980>
  408548:	ldr	x0, [x19, #184]
  40854c:	bl	402780 <fileno@plt>
  408550:	mov	w1, w0
  408554:	add	x2, x19, #0x38
  408558:	mov	w0, #0x0                   	// #0
  40855c:	bl	402c00 <__fxstat@plt>
  408560:	ldr	w0, [x19, #72]
  408564:	and	w0, w0, #0xf000
  408568:	cmp	w0, #0x8, lsl #12
  40856c:	b.ne	4086dc <wcrtomb@plt+0x599c>  // b.any
  408570:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408574:	mov	x1, x21
  408578:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40857c:	add	x2, x2, #0xd58
  408580:	ldr	x3, [x0, #1152]
  408584:	add	x0, x19, #0x28
  408588:	bl	40c6c0 <wcrtomb@plt+0x9980>
  40858c:	mov	x1, x0
  408590:	ldr	x0, [x19, #40]
  408594:	str	x1, [x20, #64]
  408598:	bl	40c2d8 <wcrtomb@plt+0x9598>
  40859c:	strb	wzr, [x20, #56]
  4085a0:	mov	x0, x21
  4085a4:	bl	402ae0 <free@plt>
  4085a8:	ldr	x0, [x20, #64]
  4085ac:	cbz	x0, 4086f8 <wcrtomb@plt+0x59b8>
  4085b0:	ldp	x19, x20, [sp, #16]
  4085b4:	ldp	x21, x22, [sp, #32]
  4085b8:	ldp	x29, x30, [sp], #48
  4085bc:	ret
  4085c0:	ldrb	w0, [x21, #1]
  4085c4:	cbnz	w0, 4084dc <wcrtomb@plt+0x579c>
  4085c8:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4085cc:	ldr	x0, [x22, #1912]
  4085d0:	cbnz	x0, 4084dc <wcrtomb@plt+0x579c>
  4085d4:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4085d8:	ldr	x0, [x21, #1320]
  4085dc:	bl	402b90 <clearerr_unlocked@plt>
  4085e0:	ldr	x2, [x22, #1912]
  4085e4:	adrp	x1, 408000 <wcrtomb@plt+0x52c0>
  4085e8:	ldr	x0, [x21, #1320]
  4085ec:	add	x1, x1, #0x9e0
  4085f0:	str	x1, [x19, #32]
  4085f4:	str	x0, [x19, #184]
  4085f8:	cbnz	x2, 40851c <wcrtomb@plt+0x57dc>
  4085fc:	cbnz	x0, 40862c <wcrtomb@plt+0x58ec>
  408600:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408604:	ldp	x21, x22, [sp, #32]
  408608:	ldr	x0, [x0, #1312]
  40860c:	str	x0, [x20, #64]
  408610:	ldp	x19, x20, [sp, #16]
  408614:	ldp	x29, x30, [sp], #48
  408618:	ret
  40861c:	mov	x0, x21
  408620:	bl	40cd20 <wcrtomb@plt+0x9fe0>
  408624:	str	x0, [x19, #48]
  408628:	b	4084e8 <wcrtomb@plt+0x57a8>
  40862c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  408630:	ldrb	w1, [x1, #1926]
  408634:	cbz	w1, 408600 <wcrtomb@plt+0x58c0>
  408638:	mov	x3, #0x0                   	// #0
  40863c:	mov	w2, #0x2                   	// #2
  408640:	mov	x1, #0x0                   	// #0
  408644:	bl	402740 <setvbuf@plt>
  408648:	b	408600 <wcrtomb@plt+0x58c0>
  40864c:	mov	w0, #0x2e                  	// #46
  408650:	strh	w0, [x21]
  408654:	b	408538 <wcrtomb@plt+0x57f8>
  408658:	bl	402cb0 <__errno_location@plt>
  40865c:	ldr	w0, [x0]
  408660:	bl	4029a0 <strerror@plt>
  408664:	mov	x20, x0
  408668:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  40866c:	mov	w2, #0x5                   	// #5
  408670:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  408674:	mov	x0, #0x0                   	// #0
  408678:	ldr	x22, [x3, #1288]
  40867c:	add	x1, x1, #0xcf8
  408680:	bl	402c20 <dcgettext@plt>
  408684:	mov	x2, x0
  408688:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40868c:	mov	x5, x20
  408690:	mov	x0, x22
  408694:	mov	x4, x21
  408698:	ldr	x3, [x1, #1960]
  40869c:	mov	w1, #0x1                   	// #1
  4086a0:	bl	402a90 <__fprintf_chk@plt>
  4086a4:	ldr	x0, [x19, #8]
  4086a8:	adrp	x1, 408000 <wcrtomb@plt+0x52c0>
  4086ac:	add	x1, x1, #0x3d8
  4086b0:	str	x1, [x19, #32]
  4086b4:	add	x0, x0, #0x1
  4086b8:	str	x0, [x19, #8]
  4086bc:	b	4085b0 <wcrtomb@plt+0x5870>
  4086c0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4086c4:	mov	w2, #0x5                   	// #5
  4086c8:	add	x1, x1, #0xd10
  4086cc:	mov	x0, #0x0                   	// #0
  4086d0:	bl	402c20 <dcgettext@plt>
  4086d4:	ldr	x1, [x19, #48]
  4086d8:	bl	40c380 <wcrtomb@plt+0x9640>
  4086dc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4086e0:	mov	w2, #0x5                   	// #5
  4086e4:	add	x1, x1, #0xd30
  4086e8:	mov	x0, #0x0                   	// #0
  4086ec:	bl	402c20 <dcgettext@plt>
  4086f0:	ldr	x1, [x19, #48]
  4086f4:	bl	40c380 <wcrtomb@plt+0x9640>
  4086f8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  4086fc:	add	x1, x1, #0xd60
  408700:	mov	w2, #0x5                   	// #5
  408704:	bl	402c20 <dcgettext@plt>
  408708:	mov	x20, x0
  40870c:	bl	402cb0 <__errno_location@plt>
  408710:	ldr	w0, [x0]
  408714:	ldr	x19, [x19, #40]
  408718:	bl	4029a0 <strerror@plt>
  40871c:	mov	x2, x0
  408720:	mov	x1, x19
  408724:	mov	x0, x20
  408728:	bl	40c380 <wcrtomb@plt+0x9640>
  40872c:	nop
  408730:	stp	x29, x30, [sp, #-80]!
  408734:	adrp	x1, 408000 <wcrtomb@plt+0x52c0>
  408738:	add	x1, x1, #0x3d8
  40873c:	mov	x29, sp
  408740:	stp	x19, x20, [sp, #16]
  408744:	mov	x19, x0
  408748:	ldr	x0, [x0, #184]
  40874c:	str	x1, [x19, #32]
  408750:	cbz	x0, 4088a0 <wcrtomb@plt+0x5b60>
  408754:	stp	x21, x22, [sp, #32]
  408758:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  40875c:	ldr	x1, [x21, #1912]
  408760:	cbz	x1, 408894 <wcrtomb@plt+0x5b54>
  408764:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  408768:	add	x20, x20, #0x630
  40876c:	stp	x23, x24, [sp, #48]
  408770:	ldr	x1, [x20, #64]
  408774:	cbz	x1, 408890 <wcrtomb@plt+0x5b50>
  408778:	ldr	x22, [x19, #48]
  40877c:	bl	402780 <fileno@plt>
  408780:	mov	w24, w0
  408784:	ldr	x0, [x20, #64]
  408788:	bl	402780 <fileno@plt>
  40878c:	mov	w23, w0
  408790:	ldp	w1, w2, [x19, #80]
  408794:	bl	402ce0 <fchown@plt>
  408798:	cmn	w0, #0x1
  40879c:	b.eq	4088d8 <wcrtomb@plt+0x5b98>  // b.none
  4087a0:	ldp	x2, x0, [x19, #40]
  4087a4:	mov	w3, w23
  4087a8:	ldr	w4, [x19, #72]
  4087ac:	mov	w1, w24
  4087b0:	bl	40d208 <wcrtomb@plt+0xa4c8>
  4087b4:	ldr	x0, [x19, #184]
  4087b8:	bl	40ca58 <wcrtomb@plt+0x9d18>
  4087bc:	ldr	x0, [x20, #64]
  4087c0:	bl	40ca58 <wcrtomb@plt+0x9d18>
  4087c4:	ldr	x20, [x21, #1912]
  4087c8:	ldrb	w0, [x20]
  4087cc:	cmp	w0, #0x2a
  4087d0:	b.eq	4088ac <wcrtomb@plt+0x5b6c>  // b.none
  4087d4:	mov	x0, x22
  4087d8:	str	x25, [sp, #64]
  4087dc:	bl	402690 <strlen@plt>
  4087e0:	mov	x24, x0
  4087e4:	sub	w25, w24, #0x1
  4087e8:	mov	x0, x20
  4087ec:	bl	402690 <strlen@plt>
  4087f0:	mov	w23, w0
  4087f4:	b	408800 <wcrtomb@plt+0x5ac0>
  4087f8:	add	w23, w23, w25
  4087fc:	add	x20, x0, #0x1
  408800:	mov	x0, x20
  408804:	mov	w1, #0x2a                  	// #42
  408808:	bl	402b20 <strchr@plt>
  40880c:	cbnz	x0, 4087f8 <wcrtomb@plt+0x5ab8>
  408810:	add	w23, w23, #0x1
  408814:	sxtw	x24, w24
  408818:	sxtw	x0, w23
  40881c:	bl	418630 <wcrtomb@plt+0x158f0>
  408820:	ldr	x20, [x21, #1912]
  408824:	mov	x25, x0
  408828:	mov	x21, x0
  40882c:	b	408850 <wcrtomb@plt+0x5b10>
  408830:	sub	x2, x3, x20
  408834:	add	x20, x3, #0x1
  408838:	add	x23, x21, x2
  40883c:	bl	402650 <memcpy@plt>
  408840:	add	x21, x23, x24
  408844:	mov	x0, x23
  408848:	mov	x1, x22
  40884c:	bl	402b80 <strcpy@plt>
  408850:	mov	w1, #0x2a                  	// #42
  408854:	mov	x0, x20
  408858:	bl	402b20 <strchr@plt>
  40885c:	mov	x3, x0
  408860:	mov	x1, x20
  408864:	mov	x0, x21
  408868:	cbnz	x3, 408830 <wcrtomb@plt+0x5af0>
  40886c:	bl	402b80 <strcpy@plt>
  408870:	ldr	x2, [x19, #40]
  408874:	mov	x1, x25
  408878:	mov	x0, x22
  40887c:	bl	40cf40 <wcrtomb@plt+0xa200>
  408880:	mov	x0, x25
  408884:	bl	402ae0 <free@plt>
  408888:	ldr	x25, [sp, #64]
  40888c:	b	4088b4 <wcrtomb@plt+0x5b74>
  408890:	ldp	x23, x24, [sp, #48]
  408894:	bl	40ca58 <wcrtomb@plt+0x9d18>
  408898:	ldp	x21, x22, [sp, #32]
  40889c:	str	xzr, [x19, #184]
  4088a0:	ldp	x19, x20, [sp, #16]
  4088a4:	ldp	x29, x30, [sp], #80
  4088a8:	ret
  4088ac:	ldrb	w0, [x20, #1]
  4088b0:	cbnz	w0, 4087d4 <wcrtomb@plt+0x5a94>
  4088b4:	ldr	x2, [x19, #40]
  4088b8:	mov	x1, x22
  4088bc:	mov	x0, x2
  4088c0:	bl	40cf40 <wcrtomb@plt+0xa200>
  4088c4:	bl	40c2e8 <wcrtomb@plt+0x95a8>
  4088c8:	ldr	x0, [x19, #40]
  4088cc:	bl	402ae0 <free@plt>
  4088d0:	ldp	x23, x24, [sp, #48]
  4088d4:	b	408898 <wcrtomb@plt+0x5b58>
  4088d8:	ldr	w2, [x19, #84]
  4088dc:	mov	w1, w0
  4088e0:	mov	w0, w23
  4088e4:	bl	402ce0 <fchown@plt>
  4088e8:	b	4087a0 <wcrtomb@plt+0x5a60>
  4088ec:	nop
  4088f0:	stp	x29, x30, [sp, #-64]!
  4088f4:	mov	x29, sp
  4088f8:	stp	x19, x20, [sp, #16]
  4088fc:	mov	x20, x1
  408900:	mov	x19, x2
  408904:	ldp	x3, x1, [x0, #16]
  408908:	stp	x21, x22, [sp, #32]
  40890c:	mov	x21, x0
  408910:	str	x23, [sp, #48]
  408914:	add	x23, x3, x2
  408918:	cmp	x1, x23
  40891c:	b.cc	4089cc <wcrtomb@plt+0x5c8c>  // b.lo, b.ul, b.last
  408920:	ldr	x0, [x21, #8]
  408924:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  408928:	mov	x2, x19
  40892c:	mov	x1, x20
  408930:	add	x0, x0, x3
  408934:	bl	402650 <memcpy@plt>
  408938:	ldr	w4, [x22, #2284]
  40893c:	str	x23, [x21, #16]
  408940:	cmp	w4, #0x1
  408944:	b.le	4089b8 <wcrtomb@plt+0x5c78>
  408948:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40894c:	ldrb	w0, [x0, #2280]
  408950:	cbnz	w0, 4089b8 <wcrtomb@plt+0x5c78>
  408954:	cbz	x19, 4089b8 <wcrtomb@plt+0x5c78>
  408958:	add	x21, x21, #0x24
  40895c:	add	x22, x22, #0x8ec
  408960:	b	408978 <wcrtomb@plt+0x5c38>
  408964:	cbz	x0, 4089b8 <wcrtomb@plt+0x5c78>
  408968:	add	x20, x20, x4
  40896c:	subs	x19, x19, x4
  408970:	b.eq	4089b8 <wcrtomb@plt+0x5c78>  // b.none
  408974:	ldr	w4, [x22]
  408978:	cmp	w4, #0x1
  40897c:	mov	x2, x19
  408980:	mov	x1, x20
  408984:	mov	x3, x21
  408988:	mov	x0, #0x0                   	// #0
  40898c:	mov	x4, #0x1                   	// #1
  408990:	b.eq	408968 <wcrtomb@plt+0x5c28>  // b.none
  408994:	bl	418830 <wcrtomb@plt+0x15af0>
  408998:	mov	x4, x0
  40899c:	cmn	x0, #0x3
  4089a0:	b.ls	408964 <wcrtomb@plt+0x5c24>  // b.plast
  4089a4:	str	xzr, [x21]
  4089a8:	mov	x4, #0x1                   	// #1
  4089ac:	add	x20, x20, x4
  4089b0:	subs	x19, x19, x4
  4089b4:	b.ne	408974 <wcrtomb@plt+0x5c34>  // b.any
  4089b8:	ldp	x19, x20, [sp, #16]
  4089bc:	ldp	x21, x22, [sp, #32]
  4089c0:	ldr	x23, [sp, #48]
  4089c4:	ldp	x29, x30, [sp], #64
  4089c8:	ret
  4089cc:	mov	x1, x23
  4089d0:	bl	4083e0 <wcrtomb@plt+0x56a0>
  4089d4:	ldr	x3, [x21, #16]
  4089d8:	b	408920 <wcrtomb@plt+0x5be0>
  4089dc:	nop
  4089e0:	stp	x29, x30, [sp, #-32]!
  4089e4:	mov	x29, sp
  4089e8:	stp	x19, x20, [sp, #16]
  4089ec:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4089f0:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  4089f4:	ldrb	w2, [x20, #1136]
  4089f8:	add	x19, x19, #0x630
  4089fc:	ldr	x3, [x0, #184]
  408a00:	add	x1, x19, #0x50
  408a04:	add	x0, x19, #0x58
  408a08:	bl	40c968 <wcrtomb@plt+0x9c28>
  408a0c:	cmp	x0, #0x0
  408a10:	b.le	408a54 <wcrtomb@plt+0x5d14>
  408a14:	ldr	x1, [x19, #88]
  408a18:	mov	x2, x0
  408a1c:	ldrb	w0, [x20, #1136]
  408a20:	add	x3, x1, x2
  408a24:	ldurb	w3, [x3, #-1]
  408a28:	cmp	w3, w0
  408a2c:	b.eq	408a4c <wcrtomb@plt+0x5d0c>  // b.none
  408a30:	strb	wzr, [x19, #128]
  408a34:	add	x0, x19, #0x60
  408a38:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  408a3c:	mov	w0, #0x1                   	// #1
  408a40:	ldp	x19, x20, [sp, #16]
  408a44:	ldp	x29, x30, [sp], #32
  408a48:	ret
  408a4c:	sub	x2, x2, #0x1
  408a50:	b	408a34 <wcrtomb@plt+0x5cf4>
  408a54:	mov	w0, #0x0                   	// #0
  408a58:	ldp	x19, x20, [sp, #16]
  408a5c:	ldp	x29, x30, [sp], #32
  408a60:	ret
  408a64:	nop
  408a68:	stp	x29, x30, [sp, #-32]!
  408a6c:	mov	x29, sp
  408a70:	stp	x19, x20, [sp, #16]
  408a74:	mov	x19, x1
  408a78:	mov	x20, x0
  408a7c:	ldp	x0, x1, [x1]
  408a80:	ldr	x3, [x19, #24]
  408a84:	ldr	x2, [x20, #16]
  408a88:	sub	x1, x1, x0
  408a8c:	add	x1, x1, x3
  408a90:	str	x1, [x19, #24]
  408a94:	cmp	x1, x2
  408a98:	b.cs	408ad8 <wcrtomb@plt+0x5d98>  // b.hs, b.nlast
  408a9c:	cmp	x2, x1, lsl #1
  408aa0:	lsl	x1, x1, #1
  408aa4:	b.hi	408b00 <wcrtomb@plt+0x5dc0>  // b.pmore
  408aa8:	mov	x2, x1
  408aac:	str	x1, [x19, #24]
  408ab0:	cmp	x2, #0x31
  408ab4:	b.hi	408ac0 <wcrtomb@plt+0x5d80>  // b.pmore
  408ab8:	mov	x1, #0x32                  	// #50
  408abc:	str	x1, [x19, #24]
  408ac0:	bl	402ae0 <free@plt>
  408ac4:	ldr	x0, [x19, #24]
  408ac8:	add	x0, x0, #0x1
  408acc:	bl	418708 <wcrtomb@plt+0x159c8>
  408ad0:	ldr	x2, [x20, #16]
  408ad4:	str	x0, [x19]
  408ad8:	ldrb	w3, [x20, #32]
  408adc:	stp	x0, x2, [x19, #8]
  408ae0:	ldp	x1, x2, [x20, #8]
  408ae4:	strb	w3, [x19, #32]
  408ae8:	bl	402650 <memcpy@plt>
  408aec:	ldur	x0, [x20, #36]
  408af0:	stur	x0, [x19, #36]
  408af4:	ldp	x19, x20, [sp, #16]
  408af8:	ldp	x29, x30, [sp], #32
  408afc:	ret
  408b00:	str	x2, [x19, #24]
  408b04:	b	408ab0 <wcrtomb@plt+0x5d70>
  408b08:	stp	x29, x30, [sp, #-96]!
  408b0c:	mov	x29, sp
  408b10:	stp	x19, x20, [sp, #16]
  408b14:	mov	x19, x1
  408b18:	stp	x21, x22, [sp, #32]
  408b1c:	mov	x21, x0
  408b20:	cbz	w2, 408cec <wcrtomb@plt+0x5fac>
  408b24:	stp	x23, x24, [sp, #48]
  408b28:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  408b2c:	add	x23, x23, #0x630
  408b30:	add	x0, x23, #0x90
  408b34:	stp	x25, x26, [sp, #64]
  408b38:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  408b3c:	mov	w20, w2
  408b40:	ldp	x3, x2, [x0, #16]
  408b44:	ldrsw	x1, [x25, #2284]
  408b48:	mul	x1, x1, x19
  408b4c:	sub	x2, x2, x3
  408b50:	cmp	x2, x1
  408b54:	b.cc	408ce0 <wcrtomb@plt+0x5fa0>  // b.lo, b.ul, b.last
  408b58:	ldur	x0, [x23, #180]
  408b5c:	str	x0, [sp, #88]
  408b60:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  408b64:	add	x22, x22, #0x8ec
  408b68:	cbz	x19, 408be8 <wcrtomb@plt+0x5ea8>
  408b6c:	add	x24, x23, #0xb4
  408b70:	ldr	w0, [x22]
  408b74:	cmp	w0, #0x1
  408b78:	b.ne	408c00 <wcrtomb@plt+0x5ec0>  // b.any
  408b7c:	ldrb	w0, [x21]
  408b80:	bl	4029d0 <btowc@plt>
  408b84:	str	w0, [sp, #84]
  408b88:	mov	x3, #0x1                   	// #1
  408b8c:	tst	w20, #0xc
  408b90:	add	x21, x21, x3
  408b94:	sub	x19, x19, x3
  408b98:	b.eq	408c40 <wcrtomb@plt+0x5f00>  // b.none
  408b9c:	tbz	w20, #2, 408c78 <wcrtomb@plt+0x5f38>
  408ba0:	bl	402c70 <towupper@plt>
  408ba4:	str	w0, [sp, #84]
  408ba8:	ands	w20, w20, #0xfffffff3
  408bac:	b.eq	408d14 <wcrtomb@plt+0x5fd4>  // b.none
  408bb0:	ldr	w1, [x22]
  408bb4:	cmp	w1, #0x1
  408bb8:	b.eq	408c58 <wcrtomb@plt+0x5f18>  // b.none
  408bbc:	mov	w1, w0
  408bc0:	mov	x2, x24
  408bc4:	ldp	x3, x0, [x23, #152]
  408bc8:	add	x0, x3, x0
  408bcc:	bl	402d40 <wcrtomb@plt>
  408bd0:	ldr	x1, [x23, #160]
  408bd4:	cmn	x0, #0x3
  408bd8:	add	x0, x1, x0
  408bdc:	str	x0, [x23, #160]
  408be0:	b.hi	408d4c <wcrtomb@plt+0x600c>  // b.pmore
  408be4:	cbnz	x19, 408b70 <wcrtomb@plt+0x5e30>
  408be8:	ldp	x19, x20, [sp, #16]
  408bec:	ldp	x21, x22, [sp, #32]
  408bf0:	ldp	x23, x24, [sp, #48]
  408bf4:	ldp	x25, x26, [sp, #64]
  408bf8:	ldp	x29, x30, [sp], #96
  408bfc:	ret
  408c00:	add	x3, sp, #0x58
  408c04:	mov	x2, x19
  408c08:	mov	x1, x21
  408c0c:	add	x0, sp, #0x54
  408c10:	bl	418830 <wcrtomb@plt+0x15af0>
  408c14:	mov	x3, x0
  408c18:	cmn	x0, #0x1
  408c1c:	b.eq	408c8c <wcrtomb@plt+0x5f4c>  // b.none
  408c20:	cmp	x0, #0x0
  408c24:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  408c28:	b.eq	408c94 <wcrtomb@plt+0x5f54>  // b.none
  408c2c:	ldr	w0, [sp, #84]
  408c30:	add	x21, x21, x3
  408c34:	sub	x19, x19, x3
  408c38:	tst	w20, #0xc
  408c3c:	b.ne	408b9c <wcrtomb@plt+0x5e5c>  // b.any
  408c40:	tbz	w20, #0, 408c80 <wcrtomb@plt+0x5f40>
  408c44:	bl	402c70 <towupper@plt>
  408c48:	str	w0, [sp, #84]
  408c4c:	ldr	w1, [x22]
  408c50:	cmp	w1, #0x1
  408c54:	b.ne	408bbc <wcrtomb@plt+0x5e7c>  // b.any
  408c58:	bl	4027b0 <wctob@plt>
  408c5c:	ldp	x3, x2, [x23, #152]
  408c60:	strb	w0, [x3, x2]
  408c64:	ldr	x0, [x23, #160]
  408c68:	add	x0, x0, #0x1
  408c6c:	str	x0, [x23, #160]
  408c70:	cbnz	x19, 408b70 <wcrtomb@plt+0x5e30>
  408c74:	b	408be8 <wcrtomb@plt+0x5ea8>
  408c78:	bl	402cf0 <towlower@plt>
  408c7c:	b	408ba4 <wcrtomb@plt+0x5e64>
  408c80:	bl	402cf0 <towlower@plt>
  408c84:	str	w0, [sp, #84]
  408c88:	b	408bb0 <wcrtomb@plt+0x5e70>
  408c8c:	ands	w20, w20, #0xfffffff3
  408c90:	b.ne	408cbc <wcrtomb@plt+0x5f7c>  // b.any
  408c94:	mov	x2, x19
  408c98:	mov	x1, x21
  408c9c:	add	x0, x23, #0x90
  408ca0:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  408ca4:	ldp	x19, x20, [sp, #16]
  408ca8:	ldp	x21, x22, [sp, #32]
  408cac:	ldp	x23, x24, [sp, #48]
  408cb0:	ldp	x25, x26, [sp, #64]
  408cb4:	ldp	x29, x30, [sp], #96
  408cb8:	ret
  408cbc:	mov	x1, x21
  408cc0:	mov	x2, #0x1                   	// #1
  408cc4:	add	x0, x23, #0x90
  408cc8:	add	x21, x21, x2
  408ccc:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  408cd0:	str	xzr, [x24]
  408cd4:	sub	x19, x19, #0x1
  408cd8:	cbnz	x19, 408b70 <wcrtomb@plt+0x5e30>
  408cdc:	b	408be8 <wcrtomb@plt+0x5ea8>
  408ce0:	add	x1, x3, x1
  408ce4:	bl	4083e0 <wcrtomb@plt+0x56a0>
  408ce8:	b	408b58 <wcrtomb@plt+0x5e18>
  408cec:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408cf0:	add	x0, x0, #0x630
  408cf4:	mov	x2, x1
  408cf8:	add	x0, x0, #0x90
  408cfc:	mov	x1, x21
  408d00:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  408d04:	ldp	x19, x20, [sp, #16]
  408d08:	ldp	x21, x22, [sp, #32]
  408d0c:	ldp	x29, x30, [sp], #96
  408d10:	ret
  408d14:	ldr	w1, [x25, #2284]
  408d18:	cmp	w1, #0x1
  408d1c:	b.eq	408d7c <wcrtomb@plt+0x603c>  // b.none
  408d20:	add	x20, x23, #0x90
  408d24:	mov	w1, w0
  408d28:	add	x2, x23, #0xb4
  408d2c:	ldp	x3, x0, [x20, #8]
  408d30:	add	x0, x3, x0
  408d34:	bl	402d40 <wcrtomb@plt>
  408d38:	ldr	x1, [x20, #16]
  408d3c:	cmn	x0, #0x3
  408d40:	add	x0, x1, x0
  408d44:	str	x0, [x20, #16]
  408d48:	b.ls	408c94 <wcrtomb@plt+0x5f54>  // b.plast
  408d4c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408d50:	mov	w2, #0x5                   	// #5
  408d54:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  408d58:	add	x1, x1, #0xd88
  408d5c:	ldr	x19, [x0, #1288]
  408d60:	mov	x0, #0x0                   	// #0
  408d64:	bl	402c20 <dcgettext@plt>
  408d68:	mov	x2, x0
  408d6c:	mov	w1, #0x1                   	// #1
  408d70:	mov	x0, x19
  408d74:	bl	402a90 <__fprintf_chk@plt>
  408d78:	bl	4029e0 <abort@plt>
  408d7c:	bl	4027b0 <wctob@plt>
  408d80:	ldp	x3, x2, [x23, #152]
  408d84:	strb	w0, [x3, x2]
  408d88:	ldr	x0, [x23, #160]
  408d8c:	add	x0, x0, #0x1
  408d90:	str	x0, [x23, #160]
  408d94:	b	408c94 <wcrtomb@plt+0x5f54>
  408d98:	mov	x12, #0x2030                	// #8240
  408d9c:	sub	sp, sp, x12
  408da0:	stp	x29, x30, [sp]
  408da4:	mov	x29, sp
  408da8:	stp	x21, x22, [sp, #32]
  408dac:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  408db0:	add	x21, x21, #0x630
  408db4:	stp	x19, x20, [sp, #16]
  408db8:	ldrb	w0, [x21, #56]
  408dbc:	cbnz	w0, 408ec0 <wcrtomb@plt+0x6180>
  408dc0:	ldr	x19, [x21, #192]
  408dc4:	cbz	x19, 408ee4 <wcrtomb@plt+0x61a4>
  408dc8:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  408dcc:	b	408dd8 <wcrtomb@plt+0x6098>
  408dd0:	ldr	x19, [x19, #24]
  408dd4:	cbz	x19, 408e14 <wcrtomb@plt+0x60d4>
  408dd8:	ldr	x0, [x19, #8]
  408ddc:	cbz	x0, 408df0 <wcrtomb@plt+0x60b0>
  408de0:	ldr	x2, [x19, #16]
  408de4:	mov	x1, #0x1                   	// #1
  408de8:	ldr	x3, [x21, #64]
  408dec:	bl	40c818 <wcrtomb@plt+0x9ad8>
  408df0:	ldr	x0, [x19]
  408df4:	cbz	x0, 408dd0 <wcrtomb@plt+0x6090>
  408df8:	ldr	x1, [x22, #1144]
  408dfc:	mov	w2, #0x0                   	// #0
  408e00:	bl	40c518 <wcrtomb@plt+0x97d8>
  408e04:	mov	x20, x0
  408e08:	cbnz	x0, 408e98 <wcrtomb@plt+0x6158>
  408e0c:	ldr	x19, [x19, #24]
  408e10:	cbnz	x19, 408dd8 <wcrtomb@plt+0x6098>
  408e14:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408e18:	ldrb	w0, [x0, #1926]
  408e1c:	cbnz	w0, 408ef0 <wcrtomb@plt+0x61b0>
  408e20:	ldr	x19, [x21, #192]
  408e24:	cbz	x19, 408e6c <wcrtomb@plt+0x612c>
  408e28:	ldrb	w1, [x19, #32]
  408e2c:	mov	x0, x19
  408e30:	cbnz	w1, 408e54 <wcrtomb@plt+0x6114>
  408e34:	nop
  408e38:	ldr	x20, [x19, #24]
  408e3c:	bl	402ae0 <free@plt>
  408e40:	cbz	x20, 408e6c <wcrtomb@plt+0x612c>
  408e44:	mov	x19, x20
  408e48:	mov	x0, x19
  408e4c:	ldrb	w1, [x19, #32]
  408e50:	cbz	w1, 408e38 <wcrtomb@plt+0x60f8>
  408e54:	ldr	x0, [x19, #8]
  408e58:	bl	402ae0 <free@plt>
  408e5c:	ldr	x20, [x19, #24]
  408e60:	mov	x0, x19
  408e64:	bl	402ae0 <free@plt>
  408e68:	cbnz	x20, 408e44 <wcrtomb@plt+0x6104>
  408e6c:	stp	xzr, xzr, [x21, #192]
  408e70:	mov	x12, #0x2030                	// #8240
  408e74:	ldp	x29, x30, [sp]
  408e78:	ldp	x19, x20, [sp, #16]
  408e7c:	ldp	x21, x22, [sp, #32]
  408e80:	add	sp, sp, x12
  408e84:	ret
  408e88:	ldr	x3, [x21, #64]
  408e8c:	add	x0, sp, #0x30
  408e90:	mov	x1, #0x1                   	// #1
  408e94:	bl	40c818 <wcrtomb@plt+0x9ad8>
  408e98:	mov	x2, #0x2000                	// #8192
  408e9c:	mov	x3, x20
  408ea0:	add	x0, sp, #0x30
  408ea4:	mov	x1, #0x1                   	// #1
  408ea8:	bl	40c8c8 <wcrtomb@plt+0x9b88>
  408eac:	mov	x2, x0
  408eb0:	cbnz	x0, 408e88 <wcrtomb@plt+0x6148>
  408eb4:	mov	x0, x20
  408eb8:	bl	40ca58 <wcrtomb@plt+0x9d18>
  408ebc:	b	408dd0 <wcrtomb@plt+0x6090>
  408ec0:	ldr	x3, [x21, #64]
  408ec4:	mov	x2, #0x1                   	// #1
  408ec8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408ecc:	mov	x1, x2
  408ed0:	add	x0, x0, #0x470
  408ed4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  408ed8:	strb	wzr, [x21, #56]
  408edc:	ldr	x19, [x21, #192]
  408ee0:	cbnz	x19, 408dc8 <wcrtomb@plt+0x6088>
  408ee4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  408ee8:	ldrb	w0, [x0, #1926]
  408eec:	cbz	w0, 408e6c <wcrtomb@plt+0x612c>
  408ef0:	ldr	x0, [x21, #64]
  408ef4:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  408ef8:	b	408e20 <wcrtomb@plt+0x60e0>
  408efc:	nop
  408f00:	stp	x29, x30, [sp, #-64]!
  408f04:	mov	x29, sp
  408f08:	stp	x19, x20, [sp, #16]
  408f0c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  408f10:	add	x20, x20, #0x630
  408f14:	mov	x19, x0
  408f18:	stp	x21, x22, [sp, #32]
  408f1c:	mov	x21, x1
  408f20:	ldr	x0, [x20, #192]
  408f24:	stp	x23, x24, [sp, #48]
  408f28:	mov	w22, w2
  408f2c:	cbz	x0, 408f34 <wcrtomb@plt+0x61f4>
  408f30:	bl	408d98 <wcrtomb@plt+0x6058>
  408f34:	strb	wzr, [x20, #208]
  408f38:	cbnz	w22, 408f40 <wcrtomb@plt+0x6200>
  408f3c:	str	xzr, [x20, #112]
  408f40:	mov	w0, #0x1                   	// #1
  408f44:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  408f48:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  408f4c:	add	x22, x22, #0x771
  408f50:	strb	w0, [x20, #128]
  408f54:	b	408f68 <wcrtomb@plt+0x6228>
  408f58:	add	x2, x2, #0x8
  408f5c:	str	x2, [x19]
  408f60:	mov	x1, x19
  408f64:	bl	4084a8 <wcrtomb@plt+0x5768>
  408f68:	ldr	x1, [x19, #32]
  408f6c:	mov	x0, x19
  408f70:	blr	x1
  408f74:	ands	w24, w0, #0xff
  408f78:	b.ne	409018 <wcrtomb@plt+0x62d8>  // b.any
  408f7c:	mov	x0, x19
  408f80:	bl	408730 <wcrtomb@plt+0x59f0>
  408f84:	ldr	x2, [x19]
  408f88:	ldr	x0, [x2]
  408f8c:	cbz	x0, 409024 <wcrtomb@plt+0x62e4>
  408f90:	ldrb	w1, [x19, #24]
  408f94:	cbz	w1, 408f58 <wcrtomb@plt+0x6218>
  408f98:	ldr	x2, [x21]
  408f9c:	str	xzr, [x19, #16]
  408fa0:	str	xzr, [x20, #232]
  408fa4:	ldr	x0, [x21, #16]
  408fa8:	cbz	w0, 408ff4 <wcrtomb@plt+0x62b4>
  408fac:	sub	w0, w0, #0x1
  408fb0:	add	x1, x0, #0x1
  408fb4:	add	x1, x1, x1, lsl #2
  408fb8:	add	x1, x2, x1, lsl #3
  408fbc:	nop
  408fc0:	ldr	x0, [x2]
  408fc4:	mov	w3, #0x0                   	// #0
  408fc8:	cbz	x0, 408fe4 <wcrtomb@plt+0x62a4>
  408fcc:	ldr	w4, [x0]
  408fd0:	cmp	w4, #0x2
  408fd4:	b.ne	408fe4 <wcrtomb@plt+0x62a4>  // b.any
  408fd8:	ldr	x0, [x0, #8]
  408fdc:	cmp	x0, #0x0
  408fe0:	cset	w3, eq  // eq = none
  408fe4:	str	w3, [x2, #16]
  408fe8:	add	x2, x2, #0x28
  408fec:	cmp	x2, x1
  408ff0:	b.ne	408fc0 <wcrtomb@plt+0x6280>  // b.any
  408ff4:	bl	407088 <wcrtomb@plt+0x4348>
  408ff8:	ldr	x0, [x23, #1912]
  408ffc:	cbz	x0, 409004 <wcrtomb@plt+0x62c4>
  409000:	strb	wzr, [x20, #56]
  409004:	ldr	x2, [x19]
  409008:	ldrb	w0, [x22]
  40900c:	strb	w0, [x19, #24]
  409010:	ldr	x0, [x2]
  409014:	b	408f58 <wcrtomb@plt+0x6218>
  409018:	ldr	x0, [x19, #16]
  40901c:	add	x0, x0, #0x1
  409020:	str	x0, [x19, #16]
  409024:	mov	w0, w24
  409028:	ldp	x19, x20, [sp, #16]
  40902c:	ldp	x21, x22, [sp, #32]
  409030:	ldp	x23, x24, [sp, #48]
  409034:	ldp	x29, x30, [sp], #64
  409038:	ret
  40903c:	nop
  409040:	stp	x29, x30, [sp, #-32]!
  409044:	mov	x29, sp
  409048:	ldr	x1, [x0, #184]
  40904c:	stp	x19, x20, [sp, #16]
  409050:	mov	x19, x0
  409054:	cbz	x1, 409138 <wcrtomb@plt+0x63f8>
  409058:	ldr	w0, [x1]
  40905c:	tbnz	w0, #4, 409090 <wcrtomb@plt+0x6350>
  409060:	ldp	x0, x2, [x1, #8]
  409064:	cmp	x0, x2
  409068:	b.cs	4090e4 <wcrtomb@plt+0x63a4>  // b.hs, b.nlast
  40906c:	add	x2, x0, #0x1
  409070:	str	x2, [x1, #8]
  409074:	ldrb	w0, [x0]
  409078:	mov	w20, #0x0                   	// #0
  40907c:	bl	402af0 <ungetc@plt>
  409080:	mov	w0, w20
  409084:	ldp	x19, x20, [sp, #16]
  409088:	ldp	x29, x30, [sp], #32
  40908c:	ret
  409090:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409094:	ldrb	w20, [x0, #1905]
  409098:	cbz	w20, 4090c0 <wcrtomb@plt+0x6380>
  40909c:	mov	w20, #0x1                   	// #1
  4090a0:	mov	w0, w20
  4090a4:	ldp	x19, x20, [sp, #16]
  4090a8:	ldp	x29, x30, [sp], #32
  4090ac:	ret
  4090b0:	str	x2, [x19]
  4090b4:	bl	4084a8 <wcrtomb@plt+0x5768>
  4090b8:	ldr	x0, [x19, #184]
  4090bc:	cbnz	x0, 40917c <wcrtomb@plt+0x643c>
  4090c0:	mov	x0, x19
  4090c4:	bl	408730 <wcrtomb@plt+0x59f0>
  4090c8:	ldr	x0, [x19]
  4090cc:	mov	x1, x19
  4090d0:	add	x2, x0, #0x8
  4090d4:	ldr	x0, [x0]
  4090d8:	cbnz	x0, 4090b0 <wcrtomb@plt+0x6370>
  4090dc:	mov	w20, #0x1                   	// #1
  4090e0:	b	4090a0 <wcrtomb@plt+0x6360>
  4090e4:	mov	x0, x1
  4090e8:	bl	402d00 <__uflow@plt>
  4090ec:	cmn	w0, #0x1
  4090f0:	b.ne	409204 <wcrtomb@plt+0x64c4>  // b.any
  4090f4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4090f8:	ldrb	w20, [x0, #1905]
  4090fc:	cbnz	w20, 40909c <wcrtomb@plt+0x635c>
  409100:	b	409114 <wcrtomb@plt+0x63d4>
  409104:	str	x2, [x19]
  409108:	bl	4084a8 <wcrtomb@plt+0x5768>
  40910c:	ldr	x0, [x19, #184]
  409110:	cbnz	x0, 4091bc <wcrtomb@plt+0x647c>
  409114:	mov	x0, x19
  409118:	bl	408730 <wcrtomb@plt+0x59f0>
  40911c:	ldr	x0, [x19]
  409120:	mov	x1, x19
  409124:	add	x2, x0, #0x8
  409128:	ldr	x0, [x0]
  40912c:	cbnz	x0, 409104 <wcrtomb@plt+0x63c4>
  409130:	mov	w20, #0x1                   	// #1
  409134:	b	4090a0 <wcrtomb@plt+0x6360>
  409138:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40913c:	ldrb	w20, [x0, #1905]
  409140:	cbnz	w20, 40909c <wcrtomb@plt+0x635c>
  409144:	b	409158 <wcrtomb@plt+0x6418>
  409148:	str	x2, [x19]
  40914c:	bl	4084a8 <wcrtomb@plt+0x5768>
  409150:	ldr	x0, [x19, #184]
  409154:	cbnz	x0, 4091e0 <wcrtomb@plt+0x64a0>
  409158:	mov	x0, x19
  40915c:	bl	408730 <wcrtomb@plt+0x59f0>
  409160:	ldr	x0, [x19]
  409164:	mov	x1, x19
  409168:	add	x2, x0, #0x8
  40916c:	ldr	x0, [x0]
  409170:	cbnz	x0, 409148 <wcrtomb@plt+0x6408>
  409174:	mov	w20, #0x1                   	// #1
  409178:	b	4090a0 <wcrtomb@plt+0x6360>
  40917c:	ldp	x1, x2, [x0, #8]
  409180:	cmp	x1, x2
  409184:	b.cs	4091a4 <wcrtomb@plt+0x6464>  // b.hs, b.nlast
  409188:	add	x2, x1, #0x1
  40918c:	str	x2, [x0, #8]
  409190:	ldrb	w2, [x1]
  409194:	mov	x1, x0
  409198:	mov	w0, w2
  40919c:	bl	402af0 <ungetc@plt>
  4091a0:	b	409080 <wcrtomb@plt+0x6340>
  4091a4:	bl	402d00 <__uflow@plt>
  4091a8:	mov	w2, w0
  4091ac:	cmn	w0, #0x1
  4091b0:	b.eq	4090c0 <wcrtomb@plt+0x6380>  // b.none
  4091b4:	ldr	x0, [x19, #184]
  4091b8:	b	409194 <wcrtomb@plt+0x6454>
  4091bc:	ldp	x1, x2, [x0, #8]
  4091c0:	cmp	x1, x2
  4091c4:	b.cc	409188 <wcrtomb@plt+0x6448>  // b.lo, b.ul, b.last
  4091c8:	bl	402d00 <__uflow@plt>
  4091cc:	mov	w2, w0
  4091d0:	cmn	w0, #0x1
  4091d4:	b.eq	409114 <wcrtomb@plt+0x63d4>  // b.none
  4091d8:	ldr	x0, [x19, #184]
  4091dc:	b	409194 <wcrtomb@plt+0x6454>
  4091e0:	ldp	x1, x2, [x0, #8]
  4091e4:	cmp	x1, x2
  4091e8:	b.cc	409188 <wcrtomb@plt+0x6448>  // b.lo, b.ul, b.last
  4091ec:	bl	402d00 <__uflow@plt>
  4091f0:	mov	w2, w0
  4091f4:	cmn	w0, #0x1
  4091f8:	b.eq	409158 <wcrtomb@plt+0x6418>  // b.none
  4091fc:	ldr	x0, [x19, #184]
  409200:	b	409194 <wcrtomb@plt+0x6454>
  409204:	ldr	x1, [x19, #184]
  409208:	b	409078 <wcrtomb@plt+0x6338>
  40920c:	nop
  409210:	ldr	w2, [x0]
  409214:	mov	x3, x0
  409218:	cmp	w2, #0x3
  40921c:	b.eq	4092b0 <wcrtomb@plt+0x6570>  // b.none
  409220:	stp	x29, x30, [sp, #-16]!
  409224:	mov	x29, sp
  409228:	b.hi	409268 <wcrtomb@plt+0x6528>  // b.pmore
  40922c:	cmp	w2, #0x1
  409230:	b.eq	4092e0 <wcrtomb@plt+0x65a0>  // b.none
  409234:	cmp	w2, #0x2
  409238:	b.ne	409254 <wcrtomb@plt+0x6514>  // b.any
  40923c:	ldr	x2, [x3, #8]
  409240:	ldr	x0, [x1, #16]
  409244:	cmp	x2, x0
  409248:	cset	w0, eq  // eq = none
  40924c:	ldp	x29, x30, [sp], #16
  409250:	ret
  409254:	mov	w0, #0x1                   	// #1
  409258:	cbz	w2, 40924c <wcrtomb@plt+0x650c>
  40925c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409260:	add	x0, x0, #0xdb8
  409264:	bl	40c380 <wcrtomb@plt+0x9640>
  409268:	cmp	w2, #0x5
  40926c:	b.hi	409288 <wcrtomb@plt+0x6548>  // b.pmore
  409270:	ldr	x2, [x3, #8]
  409274:	ldr	x0, [x1, #16]
  409278:	ldp	x29, x30, [sp], #16
  40927c:	cmp	x2, x0
  409280:	cset	w0, ls  // ls = plast
  409284:	ret
  409288:	cmp	w2, #0x6
  40928c:	b.ne	40925c <wcrtomb@plt+0x651c>  // b.any
  409290:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409294:	ldr	x0, [x0, #1600]
  409298:	cbnz	x0, 4092a8 <wcrtomb@plt+0x6568>
  40929c:	ldp	x29, x30, [sp], #16
  4092a0:	mov	x0, x1
  4092a4:	b	409040 <wcrtomb@plt+0x6300>
  4092a8:	mov	w0, #0x0                   	// #0
  4092ac:	b	40924c <wcrtomb@plt+0x650c>
  4092b0:	ldr	x2, [x3, #8]
  4092b4:	mov	w0, #0x0                   	// #0
  4092b8:	ldr	x1, [x1, #16]
  4092bc:	cmp	x1, x2
  4092c0:	b.cc	409318 <wcrtomb@plt+0x65d8>  // b.lo, b.ul, b.last
  4092c4:	ldr	x3, [x3, #16]
  4092c8:	sub	x1, x1, x2
  4092cc:	udiv	x0, x1, x3
  4092d0:	msub	x1, x0, x3, x1
  4092d4:	cmp	x1, #0x0
  4092d8:	cset	w0, eq  // eq = none
  4092dc:	ret
  4092e0:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  4092e4:	add	x2, x2, #0x630
  4092e8:	add	x2, x2, #0x60
  4092ec:	mov	w5, #0x0                   	// #0
  4092f0:	ldr	x0, [x0, #24]
  4092f4:	mov	x4, #0x0                   	// #0
  4092f8:	ldr	x1, [x2, #8]
  4092fc:	mov	x3, #0x0                   	// #0
  409300:	ldr	x2, [x2, #16]
  409304:	bl	40bac8 <wcrtomb@plt+0x8d88>
  409308:	cmp	w0, #0x0
  40930c:	cset	w0, ne  // ne = any
  409310:	ldp	x29, x30, [sp], #16
  409314:	ret
  409318:	ret
  40931c:	nop
  409320:	mov	x12, #0x10d0                	// #4304
  409324:	sub	sp, sp, x12
  409328:	stp	x29, x30, [sp]
  40932c:	mov	x29, sp
  409330:	stp	x27, x28, [sp, #80]
  409334:	mov	x27, x0
  409338:	ldr	x0, [x0, #16]
  40933c:	stp	x19, x20, [sp, #16]
  409340:	ldr	x19, [x27]
  409344:	add	x0, x0, x0, lsl #2
  409348:	stp	x21, x22, [sp, #32]
  40934c:	add	x0, x19, x0, lsl #3
  409350:	stp	x23, x24, [sp, #48]
  409354:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  409358:	str	x0, [sp, #104]
  40935c:	mov	x23, x1
  409360:	cmp	x19, x0
  409364:	ldrb	w1, [x24, #1925]
  409368:	b.cs	4094f8 <wcrtomb@plt+0x67b8>  // b.hs, b.nlast
  40936c:	add	x28, sp, #0xd0
  409370:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409374:	add	x0, x0, #0xde0
  409378:	stp	x25, x26, [sp, #64]
  40937c:	str	x0, [sp, #120]
  409380:	cbz	w1, 4093a8 <wcrtomb@plt+0x6668>
  409384:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  409388:	mov	x2, #0x9                   	// #9
  40938c:	ldr	x0, [sp, #120]
  409390:	mov	x1, #0x1                   	// #1
  409394:	ldr	x3, [x3, #1312]
  409398:	bl	402680 <fwrite_unlocked@plt>
  40939c:	mov	x1, x19
  4093a0:	mov	x0, x27
  4093a4:	bl	407920 <wcrtomb@plt+0x4be0>
  4093a8:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4093ac:	add	x20, x20, #0x630
  4093b0:	add	x21, x20, #0x108
  4093b4:	ldr	x0, [x19]
  4093b8:	cbz	x0, 409430 <wcrtomb@plt+0x66f0>
  4093bc:	ldr	w1, [x19, #16]
  4093c0:	ldr	x2, [x19, #8]
  4093c4:	cmp	w1, #0x1
  4093c8:	b.eq	4095bc <wcrtomb@plt+0x687c>  // b.none
  4093cc:	cbz	x2, 40965c <wcrtomb@plt+0x691c>
  4093d0:	ldr	w3, [x0]
  4093d4:	cmp	w3, #0x2
  4093d8:	b.ne	4095e8 <wcrtomb@plt+0x68a8>  // b.any
  4093dc:	cmp	w1, #0x2
  4093e0:	b.eq	409648 <wcrtomb@plt+0x6908>  // b.none
  4093e4:	ldr	x0, [x0, #8]
  4093e8:	ldr	x1, [x23, #16]
  4093ec:	cmp	x1, x0
  4093f0:	b.cc	409648 <wcrtomb@plt+0x6908>  // b.lo, b.ul, b.last
  4093f4:	ldr	w0, [x2]
  4093f8:	mov	w1, #0x1                   	// #1
  4093fc:	str	w1, [x19, #16]
  409400:	cmp	w0, #0x4
  409404:	b.eq	409610 <wcrtomb@plt+0x68d0>  // b.none
  409408:	b.hi	40959c <wcrtomb@plt+0x685c>  // b.pmore
  40940c:	cmp	w0, w1
  409410:	b.eq	409434 <wcrtomb@plt+0x66f4>  // b.none
  409414:	cmp	w0, #0x2
  409418:	b.ne	409624 <wcrtomb@plt+0x68e4>  // b.any
  40941c:	ldr	x1, [x2, #8]
  409420:	ldr	x2, [x23, #16]
  409424:	cmp	x2, x1
  409428:	b.cs	409650 <wcrtomb@plt+0x6910>  // b.hs, b.nlast
  40942c:	nop
  409430:	mov	w1, #0x1                   	// #1
  409434:	ldrb	w0, [x19, #20]
  409438:	cmp	w0, w1
  40943c:	b.eq	4094e0 <wcrtomb@plt+0x67a0>  // b.none
  409440:	ldrb	w1, [x19, #21]
  409444:	sub	w0, w1, #0x23
  409448:	cmp	w0, #0x5a
  40944c:	b.ls	409584 <wcrtomb@plt+0x6844>  // b.plast
  409450:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409454:	add	x0, x0, #0xe98
  409458:	bl	40c380 <wcrtomb@plt+0x9640>
  40945c:	ldr	x0, [x19, #24]
  409460:	ldr	x3, [x0, #16]
  409464:	cbz	x3, 4094e0 <wcrtomb@plt+0x67a0>
  409468:	ldr	w0, [x3]
  40946c:	tbnz	w0, #4, 4094e0 <wcrtomb@plt+0x67a0>
  409470:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  409474:	add	x1, sp, #0xa0
  409478:	mov	x0, x28
  40947c:	str	xzr, [sp, #208]
  409480:	ldrb	w2, [x4, #1136]
  409484:	bl	40c968 <wcrtomb@plt+0x9c28>
  409488:	mov	x21, x0
  40948c:	cmn	w0, #0x1
  409490:	b.eq	40b268 <wcrtomb@plt+0x8528>  // b.none
  409494:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409498:	add	x20, x20, #0x630
  40949c:	mov	x1, #0x28                  	// #40
  4094a0:	mov	x0, #0x1                   	// #1
  4094a4:	bl	418730 <wcrtomb@plt+0x159f0>
  4094a8:	mov	x1, x0
  4094ac:	stp	xzr, xzr, [x0]
  4094b0:	strb	wzr, [x0, #32]
  4094b4:	ldr	x0, [x20, #200]
  4094b8:	stp	xzr, xzr, [x1, #16]
  4094bc:	cbz	x0, 40b294 <wcrtomb@plt+0x8554>
  4094c0:	str	x1, [x0, #24]
  4094c4:	ldr	x2, [sp, #208]
  4094c8:	sxtw	x21, w21
  4094cc:	mov	w0, #0x1                   	// #1
  4094d0:	stp	x2, x21, [x1, #8]
  4094d4:	strb	w0, [x1, #32]
  4094d8:	str	x1, [x20, #200]
  4094dc:	nop
  4094e0:	ldrb	w1, [x24, #1925]
  4094e4:	add	x19, x19, #0x28
  4094e8:	ldr	x0, [sp, #104]
  4094ec:	cmp	x0, x19
  4094f0:	b.hi	409380 <wcrtomb@plt+0x6640>  // b.pmore
  4094f4:	ldp	x25, x26, [sp, #64]
  4094f8:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4094fc:	cbz	w1, 40950c <wcrtomb@plt+0x67cc>
  409500:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409504:	add	x0, x0, #0xdf0
  409508:	bl	402a40 <puts@plt>
  40950c:	ldrb	w0, [x22, #1888]
  409510:	cbnz	w0, 409560 <wcrtomb@plt+0x6820>
  409514:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409518:	add	x20, x20, #0x630
  40951c:	ldr	x21, [x20, #104]
  409520:	cbz	x21, 409560 <wcrtomb@plt+0x6820>
  409524:	ldrb	w0, [x20, #56]
  409528:	ldrb	w23, [x20, #128]
  40952c:	ldr	x3, [x20, #64]
  409530:	ldr	x22, [x20, #112]
  409534:	cbnz	w0, 40b018 <wcrtomb@plt+0x82d8>
  409538:	cbnz	x22, 40affc <wcrtomb@plt+0x82bc>
  40953c:	cbnz	w23, 40afe0 <wcrtomb@plt+0x82a0>
  409540:	mov	w0, #0x1                   	// #1
  409544:	strb	w0, [x20, #56]
  409548:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40954c:	ldrb	w0, [x0, #1926]
  409550:	cbz	w0, 409560 <wcrtomb@plt+0x6820>
  409554:	mov	x0, x3
  409558:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40955c:	nop
  409560:	mov	w0, #0xffffffff            	// #-1
  409564:	mov	x12, #0x10d0                	// #4304
  409568:	ldp	x29, x30, [sp]
  40956c:	ldp	x19, x20, [sp, #16]
  409570:	ldp	x21, x22, [sp, #32]
  409574:	ldp	x23, x24, [sp, #48]
  409578:	ldp	x27, x28, [sp, #80]
  40957c:	add	sp, sp, x12
  409580:	ret
  409584:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  409588:	add	x2, x2, #0xee8
  40958c:	ldrh	w0, [x2, w0, uxtw #1]
  409590:	adr	x2, 40959c <wcrtomb@plt+0x685c>
  409594:	add	x0, x2, w0, sxth #2
  409598:	br	x0
  40959c:	cmp	w0, #0x5
  4095a0:	b.ne	409624 <wcrtomb@plt+0x68e4>  // b.any
  4095a4:	ldr	x0, [x2, #16]
  4095a8:	ldr	x3, [x23, #16]
  4095ac:	udiv	x3, x3, x0
  4095b0:	madd	x0, x3, x0, x0
  4095b4:	str	x0, [x2, #8]
  4095b8:	b	409434 <wcrtomb@plt+0x66f4>
  4095bc:	ldr	w0, [x2]
  4095c0:	cmp	w0, #0x2
  4095c4:	b.ne	409624 <wcrtomb@plt+0x68e4>  // b.any
  4095c8:	ldr	x1, [x2, #8]
  4095cc:	ldr	x2, [x23, #16]
  4095d0:	cmp	x2, x1
  4095d4:	b.cc	4095dc <wcrtomb@plt+0x689c>  // b.lo, b.ul, b.last
  4095d8:	str	w0, [x19, #16]
  4095dc:	cmp	x2, x1
  4095e0:	cset	w1, ls  // ls = plast
  4095e4:	b	409434 <wcrtomb@plt+0x66f4>
  4095e8:	mov	x1, x23
  4095ec:	bl	409210 <wcrtomb@plt+0x64d0>
  4095f0:	tst	w0, #0xff
  4095f4:	b.eq	409648 <wcrtomb@plt+0x6908>  // b.none
  4095f8:	ldr	x2, [x19, #8]
  4095fc:	mov	w1, #0x1                   	// #1
  409600:	ldr	w0, [x2]
  409604:	str	w1, [x19, #16]
  409608:	cmp	w0, #0x4
  40960c:	b.ne	409408 <wcrtomb@plt+0x66c8>  // b.any
  409610:	ldr	x0, [x23, #16]
  409614:	ldr	x3, [x2, #16]
  409618:	add	x0, x0, x3
  40961c:	str	x0, [x2, #8]
  409620:	b	409434 <wcrtomb@plt+0x66f4>
  409624:	mov	x0, x2
  409628:	mov	x1, x23
  40962c:	bl	409210 <wcrtomb@plt+0x64d0>
  409630:	tst	w0, #0xff
  409634:	b.eq	409430 <wcrtomb@plt+0x66f0>  // b.none
  409638:	mov	w0, #0x2                   	// #2
  40963c:	mov	w1, #0x1                   	// #1
  409640:	str	w0, [x19, #16]
  409644:	b	409434 <wcrtomb@plt+0x66f4>
  409648:	mov	w1, #0x0                   	// #0
  40964c:	b	409434 <wcrtomb@plt+0x66f4>
  409650:	str	w0, [x19, #16]
  409654:	b.eq	409430 <wcrtomb@plt+0x66f0>  // b.none
  409658:	ldr	x0, [x19]
  40965c:	mov	x1, x23
  409660:	bl	409210 <wcrtomb@plt+0x64d0>
  409664:	and	w1, w0, #0xff
  409668:	b	409434 <wcrtomb@plt+0x66f4>
  40966c:	ldr	w0, [x19, #16]
  409670:	cmp	w0, #0x1
  409674:	b.eq	4096e0 <wcrtomb@plt+0x69a0>  // b.none
  409678:	ldp	x23, x19, [x19, #24]
  40967c:	sub	x19, x19, #0x1
  409680:	cbz	x23, 4096e0 <wcrtomb@plt+0x69a0>
  409684:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409688:	add	x20, x20, #0x630
  40968c:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  409690:	add	x22, x22, #0x470
  409694:	ldrb	w0, [x20, #56]
  409698:	ldr	x3, [x20, #64]
  40969c:	cbz	w0, 4096b8 <wcrtomb@plt+0x6978>
  4096a0:	mov	x2, #0x1                   	// #1
  4096a4:	mov	x0, x22
  4096a8:	mov	x1, x2
  4096ac:	bl	40c818 <wcrtomb@plt+0x9ad8>
  4096b0:	ldr	x3, [x20, #64]
  4096b4:	strb	wzr, [x20, #56]
  4096b8:	cbnz	x19, 40b250 <wcrtomb@plt+0x8510>
  4096bc:	mov	x0, x22
  4096c0:	mov	x2, #0x1                   	// #1
  4096c4:	mov	x1, x2
  4096c8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  4096cc:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4096d0:	ldrb	w0, [x0, #1926]
  4096d4:	cbz	w0, 4096e0 <wcrtomb@plt+0x69a0>
  4096d8:	ldr	x0, [x20, #64]
  4096dc:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  4096e0:	ldrb	w0, [x24, #1925]
  4096e4:	cbnz	w0, 4097ac <wcrtomb@plt+0x6a6c>
  4096e8:	ldp	x25, x26, [sp, #64]
  4096ec:	b	409560 <wcrtomb@plt+0x6820>
  4096f0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4096f4:	ldrb	w0, [x0, #1888]
  4096f8:	cbnz	w0, 409778 <wcrtomb@plt+0x6a38>
  4096fc:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409700:	add	x20, x20, #0x630
  409704:	ldr	x22, [x20, #104]
  409708:	cbz	x22, 409778 <wcrtomb@plt+0x6a38>
  40970c:	ldrb	w0, [x20, #56]
  409710:	ldrb	w24, [x20, #128]
  409714:	ldr	x3, [x20, #64]
  409718:	ldr	x23, [x20, #112]
  40971c:	cbz	w0, 40973c <wcrtomb@plt+0x69fc>
  409720:	mov	x2, #0x1                   	// #1
  409724:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409728:	mov	x1, x2
  40972c:	add	x0, x0, #0x470
  409730:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409734:	strb	wzr, [x20, #56]
  409738:	ldr	x3, [x20, #64]
  40973c:	cbz	x23, 409754 <wcrtomb@plt+0x6a14>
  409740:	mov	x2, x23
  409744:	mov	x0, x22
  409748:	mov	x1, #0x1                   	// #1
  40974c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409750:	ldr	x3, [x20, #64]
  409754:	cbnz	w24, 40afb4 <wcrtomb@plt+0x8274>
  409758:	mov	w0, #0x1                   	// #1
  40975c:	strb	w0, [x20, #56]
  409760:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409764:	ldrb	w0, [x0, #1926]
  409768:	cbz	w0, 409778 <wcrtomb@plt+0x6a38>
  40976c:	mov	x0, x3
  409770:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  409774:	nop
  409778:	bl	408d98 <wcrtomb@plt+0x6058>
  40977c:	ldr	w0, [x19, #24]
  409780:	mov	x12, #0x10d0                	// #4304
  409784:	ldp	x29, x30, [sp]
  409788:	cmn	w0, #0x1
  40978c:	csel	w0, w0, wzr, ne  // ne = any
  409790:	ldp	x19, x20, [sp, #16]
  409794:	ldp	x21, x22, [sp, #32]
  409798:	ldp	x23, x24, [sp, #48]
  40979c:	ldp	x25, x26, [sp, #64]
  4097a0:	ldp	x27, x28, [sp, #80]
  4097a4:	add	sp, sp, x12
  4097a8:	ret
  4097ac:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4097b0:	add	x0, x0, #0xdf0
  4097b4:	bl	402a40 <puts@plt>
  4097b8:	mov	w0, #0xffffffff            	// #-1
  4097bc:	mov	x12, #0x10d0                	// #4304
  4097c0:	ldp	x29, x30, [sp]
  4097c4:	ldp	x19, x20, [sp, #16]
  4097c8:	ldp	x21, x22, [sp, #32]
  4097cc:	ldp	x23, x24, [sp, #48]
  4097d0:	ldp	x25, x26, [sp, #64]
  4097d4:	ldp	x27, x28, [sp, #80]
  4097d8:	add	sp, sp, x12
  4097dc:	ret
  4097e0:	ldr	x19, [x19, #24]
  4097e4:	ldr	x0, [x27]
  4097e8:	add	x19, x19, x19, lsl #2
  4097ec:	ldrb	w1, [x24, #1925]
  4097f0:	add	x19, x0, x19, lsl #3
  4097f4:	b	4094e8 <wcrtomb@plt+0x67a8>
  4097f8:	add	x22, x20, #0xd8
  4097fc:	add	x0, x20, #0x60
  409800:	mov	x1, x22
  409804:	bl	408a68 <wcrtomb@plt+0x5d28>
  409808:	ldrb	w0, [x24, #1925]
  40980c:	add	x1, x24, #0x785
  409810:	str	x1, [sp, #96]
  409814:	cbnz	w0, 409834 <wcrtomb@plt+0x6af4>
  409818:	add	x19, x19, #0x28
  40981c:	ldr	x0, [sp, #104]
  409820:	cmp	x0, x19
  409824:	b.hi	4093b4 <wcrtomb@plt+0x6674>  // b.pmore
  409828:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40982c:	ldp	x25, x26, [sp, #64]
  409830:	b	40950c <wcrtomb@plt+0x67cc>
  409834:	ldr	x21, [x20, #224]
  409838:	cbz	x21, 40af28 <wcrtomb@plt+0x81e8>
  40983c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  409840:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409844:	ldr	x25, [x20, #232]
  409848:	add	x22, x1, #0x520
  40984c:	ldr	x3, [x1, #1312]
  409850:	add	x0, x0, #0xe30
  409854:	add	x20, x21, x25
  409858:	mov	x2, #0x9                   	// #9
  40985c:	mov	x1, #0x1                   	// #1
  409860:	bl	402680 <fwrite_unlocked@plt>
  409864:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  409868:	ldrb	w0, [x21], #1
  40986c:	bl	4076c8 <wcrtomb@plt+0x4988>
  409870:	cmp	x21, x20
  409874:	b.ne	409868 <wcrtomb@plt+0x6b28>  // b.any
  409878:	ldr	x0, [x22]
  40987c:	ldp	x1, x2, [x0, #40]
  409880:	cmp	x1, x2
  409884:	b.cc	40a120 <wcrtomb@plt+0x73e0>  // b.lo, b.ul, b.last
  409888:	mov	w1, #0xa                   	// #10
  40988c:	bl	402a20 <__overflow@plt>
  409890:	ldr	x0, [sp, #96]
  409894:	ldrb	w1, [x0]
  409898:	b	4094e4 <wcrtomb@plt+0x67a4>
  40989c:	ldp	x26, x21, [x19, #24]
  4098a0:	sub	x21, x21, #0x1
  4098a4:	cbz	x26, 4094e0 <wcrtomb@plt+0x67a0>
  4098a8:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4098ac:	add	x20, x20, #0x630
  4098b0:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4098b4:	add	x22, x22, #0x470
  4098b8:	ldrb	w0, [x20, #56]
  4098bc:	ldr	x3, [x20, #64]
  4098c0:	cbnz	w0, 4098f4 <wcrtomb@plt+0x6bb4>
  4098c4:	cbnz	x21, 40ac38 <wcrtomb@plt+0x7ef8>
  4098c8:	mov	x0, x22
  4098cc:	mov	x2, #0x1                   	// #1
  4098d0:	mov	x1, x2
  4098d4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  4098d8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4098dc:	ldrb	w0, [x0, #1926]
  4098e0:	cbz	w0, 4094e0 <wcrtomb@plt+0x67a0>
  4098e4:	ldr	x0, [x20, #64]
  4098e8:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  4098ec:	ldrb	w1, [x24, #1925]
  4098f0:	b	4094e4 <wcrtomb@plt+0x67a4>
  4098f4:	mov	x2, #0x1                   	// #1
  4098f8:	mov	x0, x22
  4098fc:	mov	x1, x2
  409900:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409904:	strb	wzr, [x20, #56]
  409908:	ldr	x3, [x20, #64]
  40990c:	b	4098c4 <wcrtomb@plt+0x6b84>
  409910:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409914:	add	x20, x20, #0x630
  409918:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40991c:	add	x25, x20, #0x30
  409920:	add	x0, x20, #0x60
  409924:	ldr	w20, [x19, #24]
  409928:	ldr	w2, [x1, #1128]
  40992c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  409930:	ldrb	w1, [x25, #8]
  409934:	cmn	w20, #0x1
  409938:	add	x22, x4, #0x470
  40993c:	csel	w20, w2, w20, eq  // eq = none
  409940:	ldp	x26, x4, [x0, #8]
  409944:	ldr	x21, [x25, #16]
  409948:	cbnz	w1, 409a40 <wcrtomb@plt+0x6d00>
  40994c:	cbz	x4, 4099f8 <wcrtomb@plt+0x6cb8>
  409950:	cmp	w20, #0x0
  409954:	add	x0, x26, x4
  409958:	sxtw	x20, w20
  40995c:	str	x0, [sp, #128]
  409960:	cset	w0, gt
  409964:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  409968:	mov	x25, #0x0                   	// #0
  40996c:	add	x1, x1, #0xe40
  409970:	str	w0, [sp, #112]
  409974:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409978:	add	x0, x0, #0xe48
  40997c:	str	x0, [sp, #136]
  409980:	str	x1, [sp, #144]
  409984:	nop
  409988:	ldrb	w1, [x26]
  40998c:	str	w1, [sp, #96]
  409990:	tbnz	w1, #7, 40a634 <wcrtomb@plt+0x78f4>
  409994:	bl	402ab0 <__ctype_b_loc@plt>
  409998:	ldr	w1, [sp, #96]
  40999c:	ldr	x0, [x0]
  4099a0:	ubfiz	x2, x1, #1, #8
  4099a4:	ldrh	w0, [x0, x2]
  4099a8:	tbz	w0, #14, 40a634 <wcrtomb@plt+0x78f4>
  4099ac:	strb	w1, [sp, #208]
  4099b0:	mov	x4, #0x1                   	// #1
  4099b4:	ldrb	w0, [x26]
  4099b8:	cmp	w0, #0x5c
  4099bc:	b.eq	40a70c <wcrtomb@plt+0x79cc>  // b.none
  4099c0:	ldr	w0, [sp, #112]
  4099c4:	add	x25, x25, x4
  4099c8:	cmp	w0, #0x0
  4099cc:	ccmp	x25, x20, #0x0, ne  // ne = any
  4099d0:	b.cs	40a680 <wcrtomb@plt+0x7940>  // b.hs, b.nlast
  4099d4:	mov	x0, x28
  4099d8:	mov	x2, x4
  4099dc:	mov	x3, x21
  4099e0:	mov	x1, #0x1                   	// #1
  4099e4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  4099e8:	add	x26, x26, #0x1
  4099ec:	ldr	x0, [sp, #128]
  4099f0:	cmp	x26, x0
  4099f4:	b.ne	409988 <wcrtomb@plt+0x6c48>  // b.any
  4099f8:	mov	x2, #0x1                   	// #1
  4099fc:	mov	x3, x21
  409a00:	mov	x1, x2
  409a04:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409a08:	add	x0, x0, #0xe50
  409a0c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409a10:	mov	x0, x22
  409a14:	mov	x2, #0x1                   	// #1
  409a18:	mov	x3, x21
  409a1c:	mov	x1, x2
  409a20:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409a24:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409a28:	ldrb	w0, [x0, #1926]
  409a2c:	cbz	w0, 4094e0 <wcrtomb@plt+0x67a0>
  409a30:	mov	x0, x21
  409a34:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  409a38:	ldrb	w1, [x24, #1925]
  409a3c:	b	4094e4 <wcrtomb@plt+0x67a4>
  409a40:	mov	x2, #0x1                   	// #1
  409a44:	mov	x3, x21
  409a48:	mov	x1, x2
  409a4c:	mov	x0, x22
  409a50:	str	x4, [sp, #96]
  409a54:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409a58:	strb	wzr, [x25, #8]
  409a5c:	ldr	x4, [sp, #96]
  409a60:	b	40994c <wcrtomb@plt+0x6c0c>
  409a64:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  409a68:	ldrb	w0, [x22, #1888]
  409a6c:	cbz	w0, 40aad0 <wcrtomb@plt+0x7d90>
  409a70:	ldr	x0, [x20, #16]
  409a74:	cbnz	x0, 409a88 <wcrtomb@plt+0x6d48>
  409a78:	mov	x0, x23
  409a7c:	bl	409040 <wcrtomb@plt+0x6300>
  409a80:	tst	w0, #0xff
  409a84:	b.ne	4096e0 <wcrtomb@plt+0x69a0>  // b.any
  409a88:	mov	x1, x27
  409a8c:	mov	x0, x23
  409a90:	mov	w2, #0x0                   	// #0
  409a94:	bl	408f00 <wcrtomb@plt+0x61c0>
  409a98:	tst	w0, #0xff
  409a9c:	b.eq	4096e0 <wcrtomb@plt+0x69a0>  // b.none
  409aa0:	ldrb	w0, [x24, #1925]
  409aa4:	add	x1, x24, #0x785
  409aa8:	str	x1, [sp, #96]
  409aac:	cbnz	w0, 40abc4 <wcrtomb@plt+0x7e84>
  409ab0:	ldr	x0, [sp, #104]
  409ab4:	add	x19, x19, #0x28
  409ab8:	cmp	x0, x19
  409abc:	b.hi	4093b4 <wcrtomb@plt+0x6674>  // b.pmore
  409ac0:	ldp	x25, x26, [sp, #64]
  409ac4:	b	40950c <wcrtomb@plt+0x67cc>
  409ac8:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409acc:	add	x20, x20, #0x630
  409ad0:	ldr	x22, [x20, #104]
  409ad4:	cbz	x22, 4094e0 <wcrtomb@plt+0x67a0>
  409ad8:	ldrb	w0, [x20, #56]
  409adc:	ldrb	w26, [x20, #128]
  409ae0:	ldr	x3, [x20, #64]
  409ae4:	ldr	x25, [x20, #112]
  409ae8:	cbnz	w0, 409b30 <wcrtomb@plt+0x6df0>
  409aec:	cbnz	x25, 409b18 <wcrtomb@plt+0x6dd8>
  409af0:	cbnz	w26, 40ac1c <wcrtomb@plt+0x7edc>
  409af4:	mov	w0, #0x1                   	// #1
  409af8:	strb	w0, [x20, #56]
  409afc:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409b00:	ldrb	w0, [x0, #1926]
  409b04:	cbz	w0, 4094e0 <wcrtomb@plt+0x67a0>
  409b08:	mov	x0, x3
  409b0c:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  409b10:	ldrb	w1, [x24, #1925]
  409b14:	b	4094e4 <wcrtomb@plt+0x67a4>
  409b18:	mov	x2, x25
  409b1c:	mov	x0, x22
  409b20:	mov	x1, #0x1                   	// #1
  409b24:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409b28:	ldr	x3, [x20, #64]
  409b2c:	b	409af0 <wcrtomb@plt+0x6db0>
  409b30:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  409b34:	mov	x2, #0x1                   	// #1
  409b38:	add	x0, x4, #0x470
  409b3c:	mov	x1, x2
  409b40:	bl	40c818 <wcrtomb@plt+0x9ad8>
  409b44:	strb	wzr, [x20, #56]
  409b48:	ldr	x3, [x20, #64]
  409b4c:	cbz	x25, 409af0 <wcrtomb@plt+0x6db0>
  409b50:	b	409b18 <wcrtomb@plt+0x6dd8>
  409b54:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409b58:	add	x20, x20, #0x630
  409b5c:	ldrb	w1, [x24, #1925]
  409b60:	ldrb	w0, [x20, #208]
  409b64:	cbz	w0, 4094e4 <wcrtomb@plt+0x67a4>
  409b68:	ldr	x0, [x19, #24]
  409b6c:	strb	wzr, [x20, #208]
  409b70:	ldr	x19, [x27]
  409b74:	add	x0, x0, x0, lsl #2
  409b78:	add	x19, x19, x0, lsl #3
  409b7c:	b	4094e8 <wcrtomb@plt+0x67a8>
  409b80:	ldr	x21, [x19, #24]
  409b84:	ldr	x3, [x21, #16]
  409b88:	cbz	x3, 4094e0 <wcrtomb@plt+0x67a0>
  409b8c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409b90:	add	x20, x20, #0x630
  409b94:	add	x20, x20, #0x60
  409b98:	ldr	x22, [x20, #8]
  409b9c:	cbz	x22, 4094e0 <wcrtomb@plt+0x67a0>
  409ba0:	ldrb	w0, [x21, #8]
  409ba4:	ldrb	w25, [x20, #32]
  409ba8:	ldr	x20, [x20, #16]
  409bac:	cbnz	w0, 40aed4 <wcrtomb@plt+0x8194>
  409bb0:	cbnz	x20, 40aebc <wcrtomb@plt+0x817c>
  409bb4:	cbnz	w25, 40b234 <wcrtomb@plt+0x84f4>
  409bb8:	mov	w0, #0x1                   	// #1
  409bbc:	strb	w0, [x21, #8]
  409bc0:	b	409afc <wcrtomb@plt+0x6dbc>
  409bc4:	add	x2, x24, #0x785
  409bc8:	ldrb	w7, [x24, #1925]
  409bcc:	ldp	x4, x5, [x20, #232]
  409bd0:	str	x2, [sp, #96]
  409bd4:	ldr	w6, [x20, #128]
  409bd8:	ldr	w10, [x20, #248]
  409bdc:	ldp	x2, x3, [x20, #96]
  409be0:	stp	x2, x3, [x28]
  409be4:	ldp	x8, x9, [x20, #112]
  409be8:	stp	x4, x5, [x20, #112]
  409bec:	ldp	x4, x5, [x20, #216]
  409bf0:	stp	x8, x9, [x28, #16]
  409bf4:	str	w6, [x28, #32]
  409bf8:	stp	x4, x5, [x20, #96]
  409bfc:	str	w10, [x20, #128]
  409c00:	stp	x2, x3, [x20, #216]
  409c04:	stp	x8, x9, [x20, #232]
  409c08:	str	w6, [x20, #248]
  409c0c:	cbz	w7, 409818 <wcrtomb@plt+0x6ad8>
  409c10:	ldr	x25, [x20, #104]
  409c14:	cbz	x25, 40af20 <wcrtomb@plt+0x81e0>
  409c18:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  409c1c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409c20:	ldr	x4, [x20, #112]
  409c24:	add	x22, x1, #0x520
  409c28:	ldr	x3, [x1, #1312]
  409c2c:	add	x21, x25, x4
  409c30:	add	x0, x0, #0xe00
  409c34:	mov	x2, #0x9                   	// #9
  409c38:	mov	x1, #0x1                   	// #1
  409c3c:	str	x4, [sp, #112]
  409c40:	bl	402680 <fwrite_unlocked@plt>
  409c44:	ldr	x4, [sp, #112]
  409c48:	cbz	x4, 409c60 <wcrtomb@plt+0x6f20>
  409c4c:	nop
  409c50:	ldrb	w0, [x25], #1
  409c54:	bl	4076c8 <wcrtomb@plt+0x4988>
  409c58:	cmp	x25, x21
  409c5c:	b.ne	409c50 <wcrtomb@plt+0x6f10>  // b.any
  409c60:	ldr	x0, [x22]
  409c64:	ldp	x1, x2, [x0, #40]
  409c68:	cmp	x1, x2
  409c6c:	b.cs	40b314 <wcrtomb@plt+0x85d4>  // b.hs, b.nlast
  409c70:	add	x2, x1, #0x1
  409c74:	str	x2, [x0, #40]
  409c78:	mov	w0, #0xa                   	// #10
  409c7c:	strb	w0, [x1]
  409c80:	ldr	x21, [x20, #224]
  409c84:	cbz	x21, 40af18 <wcrtomb@plt+0x81d8>
  409c88:	ldr	x3, [x22]
  409c8c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  409c90:	ldr	x25, [x20, #232]
  409c94:	add	x0, x0, #0xe30
  409c98:	mov	x2, #0x9                   	// #9
  409c9c:	mov	x1, #0x1                   	// #1
  409ca0:	add	x20, x21, x25
  409ca4:	bl	402680 <fwrite_unlocked@plt>
  409ca8:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  409cac:	nop
  409cb0:	ldrb	w0, [x21], #1
  409cb4:	bl	4076c8 <wcrtomb@plt+0x4988>
  409cb8:	cmp	x21, x20
  409cbc:	b.ne	409cb0 <wcrtomb@plt+0x6f70>  // b.any
  409cc0:	b	409878 <wcrtomb@plt+0x6b38>
  409cc4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409cc8:	add	x1, x20, #0x60
  409ccc:	ldr	x2, [x1, #16]
  409cd0:	ldr	w0, [x0, #2284]
  409cd4:	cmp	w0, #0x1
  409cd8:	b.le	40a93c <wcrtomb@plt+0x7bfc>
  409cdc:	ldr	x1, [x19, #24]
  409ce0:	str	x1, [sp, #96]
  409ce4:	str	xzr, [sp, #208]
  409ce8:	cbz	x2, 40a968 <wcrtomb@plt+0x7c28>
  409cec:	str	xzr, [sp, #112]
  409cf0:	cmp	w0, #0x1
  409cf4:	b.eq	409d24 <wcrtomb@plt+0x6fe4>  // b.none
  409cf8:	ldr	x4, [sp, #112]
  409cfc:	mov	x3, x28
  409d00:	ldr	x1, [x20, #104]
  409d04:	sub	x2, x2, x4
  409d08:	mov	x0, #0x0                   	// #0
  409d0c:	add	x1, x1, x4
  409d10:	bl	418830 <wcrtomb@plt+0x15af0>
  409d14:	mov	x22, x0
  409d18:	sub	x0, x0, #0x1
  409d1c:	cmn	x0, #0x4
  409d20:	b.ls	409d28 <wcrtomb@plt+0x6fe8>  // b.plast
  409d24:	mov	x22, #0x1                   	// #1
  409d28:	ldr	x0, [sp, #96]
  409d2c:	ldr	x1, [x0]
  409d30:	cbz	x1, 409e14 <wcrtomb@plt+0x70d4>
  409d34:	ldr	x0, [x20, #104]
  409d38:	mov	w26, #0x0                   	// #0
  409d3c:	ldr	x2, [sp, #112]
  409d40:	str	x0, [sp, #128]
  409d44:	add	x25, x0, x2
  409d48:	b	409d5c <wcrtomb@plt+0x701c>
  409d4c:	ldr	x0, [sp, #96]
  409d50:	add	w26, w26, #0x2
  409d54:	ldr	x1, [x0, w26, uxtw #3]
  409d58:	cbz	x1, 409e14 <wcrtomb@plt+0x70d4>
  409d5c:	mov	x2, x22
  409d60:	mov	x0, x25
  409d64:	bl	402860 <strncmp@plt>
  409d68:	cbnz	w0, 409d4c <wcrtomb@plt+0x700c>
  409d6c:	ldr	x1, [sp, #96]
  409d70:	add	w0, w26, #0x1
  409d74:	str	x0, [sp, #136]
  409d78:	ldr	x1, [x1, x0, lsl #3]
  409d7c:	ldrb	w0, [x1]
  409d80:	cbz	w0, 40a920 <wcrtomb@plt+0x7be0>
  409d84:	mov	x0, x1
  409d88:	str	x1, [sp, #144]
  409d8c:	bl	402690 <strlen@plt>
  409d90:	mov	x5, x0
  409d94:	cmp	x22, x0
  409d98:	ldr	x1, [sp, #144]
  409d9c:	b.cs	40a924 <wcrtomb@plt+0x7be4>  // b.hs, b.nlast
  409da0:	sub	x4, x0, x22
  409da4:	add	x25, x20, #0x60
  409da8:	ldp	x2, x0, [x20, #112]
  409dac:	add	x2, x2, #0x1
  409db0:	add	x1, x4, x2
  409db4:	cmp	x1, x0
  409db8:	b.hi	40aaa0 <wcrtomb@plt+0x7d60>  // b.pmore
  409dbc:	ldr	x26, [sp, #112]
  409dc0:	stp	x5, x4, [sp, #144]
  409dc4:	ldr	x3, [sp, #128]
  409dc8:	add	x0, x26, x5
  409dcc:	add	x1, x22, x26
  409dd0:	sub	x2, x2, x1
  409dd4:	add	x0, x3, x0
  409dd8:	add	x1, x3, x1
  409ddc:	bl	402660 <memmove@plt>
  409de0:	ldp	x25, x3, [x20, #104]
  409de4:	ldp	x1, x5, [sp, #136]
  409de8:	ldr	x0, [sp, #96]
  409dec:	ldr	x4, [sp, #152]
  409df0:	add	x25, x25, x26
  409df4:	ldr	x1, [x0, x1, lsl #3]
  409df8:	add	x3, x3, x4
  409dfc:	add	x0, x26, x4
  409e00:	str	x3, [x20, #112]
  409e04:	str	x0, [sp, #112]
  409e08:	mov	x2, x5
  409e0c:	mov	x0, x25
  409e10:	bl	402650 <memcpy@plt>
  409e14:	ldr	x0, [sp, #112]
  409e18:	ldr	x2, [x20, #112]
  409e1c:	add	x0, x0, x22
  409e20:	str	x0, [sp, #112]
  409e24:	cmp	x2, x0
  409e28:	b.ls	40a968 <wcrtomb@plt+0x7c28>  // b.plast
  409e2c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  409e30:	add	x0, x0, #0x8ec
  409e34:	ldr	w0, [x0]
  409e38:	b	409cf0 <wcrtomb@plt+0x6fb0>
  409e3c:	ldr	x0, [x19, #24]
  409e40:	cbz	x0, 4094e0 <wcrtomb@plt+0x67a0>
  409e44:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409e48:	add	x20, x20, #0x630
  409e4c:	mov	x1, #0x28                  	// #40
  409e50:	mov	x0, #0x1                   	// #1
  409e54:	bl	418730 <wcrtomb@plt+0x159f0>
  409e58:	stp	xzr, xzr, [x0]
  409e5c:	ldr	x1, [x20, #200]
  409e60:	stp	xzr, xzr, [x0, #16]
  409e64:	strb	wzr, [x0, #32]
  409e68:	cbz	x1, 40b18c <wcrtomb@plt+0x844c>
  409e6c:	str	x0, [x1, #24]
  409e70:	ldr	x1, [x19, #24]
  409e74:	str	x1, [x0]
  409e78:	ldrb	w1, [x24, #1925]
  409e7c:	str	x0, [x20, #200]
  409e80:	b	4094e4 <wcrtomb@plt+0x67a4>
  409e84:	ldr	x0, [x20, #168]
  409e88:	add	x25, x20, #0x90
  409e8c:	ldr	x22, [x19, #24]
  409e90:	cbz	x0, 40ab74 <wcrtomb@plt+0x7e34>
  409e94:	ldur	x0, [x20, #132]
  409e98:	str	xzr, [x25, #16]
  409e9c:	stur	x0, [x25, #36]
  409ea0:	ldp	x1, x2, [x20, #104]
  409ea4:	mov	x4, x21
  409ea8:	ldrb	w5, [x22, #32]
  409eac:	mov	x3, #0x0                   	// #0
  409eb0:	ldr	x0, [x22]
  409eb4:	ubfx	x5, x5, #4, #4
  409eb8:	add	w5, w5, #0x1
  409ebc:	bl	40bac8 <wcrtomb@plt+0x8d88>
  409ec0:	cbz	w0, 40aac0 <wcrtomb@plt+0x7d80>
  409ec4:	add	x0, x24, #0x785
  409ec8:	ldrb	w1, [x24, #1925]
  409ecc:	str	x0, [sp, #96]
  409ed0:	ldr	x0, [x21, #8]
  409ed4:	ldr	x8, [x0]
  409ed8:	cbz	w1, 409ee4 <wcrtomb@plt+0x71a4>
  409edc:	ldr	x1, [x21]
  409ee0:	cbnz	x1, 40acb0 <wcrtomb@plt+0x7f70>
  409ee4:	ldr	x1, [x21, #16]
  409ee8:	ldr	x0, [x22, #8]
  409eec:	ldr	x2, [x1]
  409ef0:	cbz	x0, 40b12c <wcrtomb@plt+0x83ec>
  409ef4:	add	x0, x20, #0x90
  409ef8:	mov	x25, #0x0                   	// #0
  409efc:	mov	x26, #0x0                   	// #0
  409f00:	str	xzr, [sp, #112]
  409f04:	str	x0, [sp, #152]
  409f08:	b	409fb0 <wcrtomb@plt+0x7270>
  409f0c:	ldr	x0, [sp, #112]
  409f10:	cmp	x25, #0x0
  409f14:	ccmp	x8, x0, #0x2, ne  // ne = any
  409f18:	ccmp	x9, #0x0, #0x0, ls  // ls = plast
  409f1c:	b.eq	409f34 <wcrtomb@plt+0x71f4>  // b.none
  409f20:	ldr	x0, [x22, #16]
  409f24:	add	x25, x25, #0x1
  409f28:	cmp	x25, x0
  409f2c:	b.cs	40a730 <wcrtomb@plt+0x79f0>  // b.hs, b.nlast
  409f30:	cbnz	x9, 409f44 <wcrtomb@plt+0x7204>
  409f34:	ldr	x0, [x20, #112]
  409f38:	cmp	x0, x26
  409f3c:	b.ls	40a810 <wcrtomb@plt+0x7ad0>  // b.plast
  409f40:	mov	x9, #0x1                   	// #1
  409f44:	ldr	x0, [sp, #152]
  409f48:	mov	x2, x9
  409f4c:	ldr	x1, [x20, #104]
  409f50:	add	x26, x8, x9
  409f54:	add	x1, x1, x8
  409f58:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  409f5c:	ldr	x0, [x21, #16]
  409f60:	ldr	x0, [x0]
  409f64:	str	x0, [sp, #112]
  409f68:	ldr	x2, [x20, #112]
  409f6c:	add	x6, x20, #0x60
  409f70:	cmp	x2, x26
  409f74:	b.cc	40a808 <wcrtomb@plt+0x7ac8>  // b.lo, b.ul, b.last
  409f78:	ldrb	w5, [x22, #32]
  409f7c:	mov	x4, x21
  409f80:	ldr	x0, [x22]
  409f84:	mov	x3, x26
  409f88:	ldr	x1, [x20, #104]
  409f8c:	ubfx	x5, x5, #4, #4
  409f90:	add	w5, w5, #0x1
  409f94:	str	x6, [sp, #128]
  409f98:	bl	40bac8 <wcrtomb@plt+0x8d88>
  409f9c:	ldr	x6, [sp, #128]
  409fa0:	cbz	w0, 40b184 <wcrtomb@plt+0x8444>
  409fa4:	ldp	x1, x0, [x21, #8]
  409fa8:	ldr	x2, [x0]
  409fac:	ldr	x8, [x1]
  409fb0:	sub	x9, x2, x8
  409fb4:	cmp	x8, x26
  409fb8:	b.ls	409f0c <wcrtomb@plt+0x71cc>  // b.plast
  409fbc:	ldr	x0, [sp, #152]
  409fc0:	sub	x2, x8, x26
  409fc4:	ldr	x1, [x20, #104]
  409fc8:	stp	x8, x9, [sp, #128]
  409fcc:	add	x1, x1, x26
  409fd0:	mov	x26, x8
  409fd4:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  409fd8:	ldp	x8, x9, [sp, #128]
  409fdc:	b	409f0c <wcrtomb@plt+0x71cc>
  409fe0:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  409fe4:	add	x20, x20, #0x630
  409fe8:	ldr	x21, [x19, #32]
  409fec:	add	x25, x20, #0x90
  409ff0:	ldr	x0, [x25, #24]
  409ff4:	mov	w22, w21
  409ff8:	cbz	x0, 40ab48 <wcrtomb@plt+0x7e08>
  409ffc:	str	xzr, [x25, #16]
  40a000:	stur	xzr, [x20, #180]
  40a004:	cbnz	w21, 40aa44 <wcrtomb@plt+0x7d04>
  40a008:	add	x25, x20, #0x60
  40a00c:	mov	x2, #0x1                   	// #1
  40a010:	mov	x0, x25
  40a014:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40a018:	add	x1, x1, #0x190
  40a01c:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a020:	ldr	x0, [x20, #104]
  40a024:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a028:	add	x1, x1, #0xe10
  40a02c:	bl	402850 <popen@plt>
  40a030:	mov	x26, x0
  40a034:	cbz	x26, 40b3d4 <wcrtomb@plt+0x8694>
  40a038:	add	x25, x20, #0x90
  40a03c:	b	40a05c <wcrtomb@plt+0x731c>
  40a040:	mov	x3, x26
  40a044:	mov	x0, x28
  40a048:	mov	x2, #0x1000                	// #4096
  40a04c:	mov	x1, #0x1                   	// #1
  40a050:	bl	402a50 <fread_unlocked@plt>
  40a054:	cmp	w0, #0x0
  40a058:	b.gt	40a9c4 <wcrtomb@plt+0x7c84>
  40a05c:	ldr	w0, [x26]
  40a060:	tbz	w0, #4, 40a040 <wcrtomb@plt+0x7300>
  40a064:	mov	x0, x26
  40a068:	bl	402c60 <pclose@plt>
  40a06c:	cbnz	w21, 40a1b8 <wcrtomb@plt+0x7478>
  40a070:	ldr	x0, [x20, #160]
  40a074:	cbz	x0, 40a098 <wcrtomb@plt+0x7358>
  40a078:	ldr	x2, [x20, #152]
  40a07c:	sub	x0, x0, #0x1
  40a080:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a084:	ldrb	w3, [x2, x0]
  40a088:	ldrb	w2, [x4, #1136]
  40a08c:	cmp	w3, w2
  40a090:	b.ne	40a098 <wcrtomb@plt+0x7358>  // b.any
  40a094:	str	x0, [x20, #160]
  40a098:	ldp	x6, x7, [x20, #144]
  40a09c:	ldp	x8, x9, [x20, #96]
  40a0a0:	stp	x6, x7, [x20, #96]
  40a0a4:	ldrb	w1, [x24, #1925]
  40a0a8:	ldp	x4, x5, [x20, #112]
  40a0ac:	stp	x8, x9, [x20, #144]
  40a0b0:	ldp	x2, x3, [x20, #128]
  40a0b4:	stp	x8, x9, [sp, #160]
  40a0b8:	ldp	x10, x11, [x20, #160]
  40a0bc:	stp	x10, x11, [x20, #112]
  40a0c0:	ldp	x6, x7, [x20, #176]
  40a0c4:	stp	x6, x7, [x20, #128]
  40a0c8:	stp	x4, x5, [x20, #160]
  40a0cc:	stp	x4, x5, [sp, #176]
  40a0d0:	stp	x2, x3, [x20, #176]
  40a0d4:	stp	x2, x3, [sp, #192]
  40a0d8:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a0dc:	ldrb	w0, [x24, #1925]
  40a0e0:	add	x1, x24, #0x785
  40a0e4:	str	x1, [sp, #96]
  40a0e8:	str	xzr, [x20, #112]
  40a0ec:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a0f0:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a0f4:	mov	x2, #0x9                   	// #9
  40a0f8:	mov	x1, #0x1                   	// #1
  40a0fc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a100:	ldr	x3, [x20, #1312]
  40a104:	add	x0, x0, #0xe00
  40a108:	bl	402680 <fwrite_unlocked@plt>
  40a10c:	ldr	x0, [x20, #1312]
  40a110:	ldp	x1, x2, [x0, #40]
  40a114:	cmp	x1, x2
  40a118:	b.cs	409888 <wcrtomb@plt+0x6b48>  // b.hs, b.nlast
  40a11c:	nop
  40a120:	add	x2, x1, #0x1
  40a124:	str	x2, [x0, #40]
  40a128:	mov	w0, #0xa                   	// #10
  40a12c:	strb	w0, [x1]
  40a130:	ldr	x0, [sp, #96]
  40a134:	ldrb	w1, [x0]
  40a138:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a13c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a140:	add	x20, x20, #0x630
  40a144:	mov	x1, #0x28                  	// #40
  40a148:	mov	x0, #0x1                   	// #1
  40a14c:	bl	418730 <wcrtomb@plt+0x159f0>
  40a150:	stp	xzr, xzr, [x0]
  40a154:	ldr	x1, [x20, #200]
  40a158:	stp	xzr, xzr, [x0, #16]
  40a15c:	strb	wzr, [x0, #32]
  40a160:	cbz	x1, 40ac14 <wcrtomb@plt+0x7ed4>
  40a164:	str	x0, [x1, #24]
  40a168:	ldr	x1, [x19, #24]
  40a16c:	str	x1, [x0, #8]
  40a170:	ldr	x1, [x19, #32]
  40a174:	str	x1, [x0, #16]
  40a178:	ldrb	w1, [x24, #1925]
  40a17c:	str	x0, [x20, #200]
  40a180:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a184:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a188:	add	x20, x20, #0x630
  40a18c:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a190:	add	x22, x25, #0x470
  40a194:	ldrb	w1, [x20, #56]
  40a198:	ldr	x0, [x20, #64]
  40a19c:	cbnz	w1, 40ab14 <wcrtomb@plt+0x7dd4>
  40a1a0:	ldrb	w4, [x25, #1136]
  40a1a4:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a1a8:	ldr	x3, [x23, #48]
  40a1ac:	add	x2, x2, #0xe90
  40a1b0:	mov	w1, #0x1                   	// #1
  40a1b4:	bl	402a90 <__fprintf_chk@plt>
  40a1b8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a1bc:	ldrb	w0, [x0, #1926]
  40a1c0:	cbnz	w0, 4098e4 <wcrtomb@plt+0x6ba4>
  40a1c4:	ldrb	w1, [x24, #1925]
  40a1c8:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a1cc:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a1d0:	add	x20, x20, #0x630
  40a1d4:	ldrb	w1, [x24, #1925]
  40a1d8:	ldrb	w0, [x20, #208]
  40a1dc:	cbz	w0, 40ab34 <wcrtomb@plt+0x7df4>
  40a1e0:	strb	wzr, [x20, #208]
  40a1e4:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a1e8:	ldr	x21, [x19, #24]
  40a1ec:	ldr	x25, [x21, #16]
  40a1f0:	cbz	x25, 4094e0 <wcrtomb@plt+0x67a0>
  40a1f4:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a1f8:	add	x20, x20, #0x630
  40a1fc:	add	x20, x20, #0x60
  40a200:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a204:	add	x22, x4, #0x470
  40a208:	ldrb	w1, [x4, #1136]
  40a20c:	ldp	x4, x26, [x20, #8]
  40a210:	str	x4, [sp, #96]
  40a214:	mov	x0, x4
  40a218:	mov	x2, x26
  40a21c:	bl	402bb0 <memchr@plt>
  40a220:	ldr	x4, [sp, #96]
  40a224:	cbz	x0, 40b124 <wcrtomb@plt+0x83e4>
  40a228:	sub	x26, x0, x4
  40a22c:	mov	w20, #0x1                   	// #1
  40a230:	ldrb	w0, [x21, #8]
  40a234:	cbnz	w0, 40ac84 <wcrtomb@plt+0x7f44>
  40a238:	cbnz	x26, 40ac68 <wcrtomb@plt+0x7f28>
  40a23c:	cbnz	w20, 40b168 <wcrtomb@plt+0x8428>
  40a240:	mov	w0, #0x1                   	// #1
  40a244:	strb	w0, [x21, #8]
  40a248:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a24c:	ldrb	w0, [x0, #1926]
  40a250:	cbz	w0, 4094e0 <wcrtomb@plt+0x67a0>
  40a254:	mov	x0, x25
  40a258:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40a25c:	ldrb	w1, [x24, #1925]
  40a260:	b	4094e4 <wcrtomb@plt+0x67a4>
  40a264:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a268:	add	x20, x20, #0x630
  40a26c:	add	x25, x20, #0x60
  40a270:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a274:	add	x22, x4, #0x470
  40a278:	ldrb	w1, [x4, #1136]
  40a27c:	ldp	x26, x21, [x25, #8]
  40a280:	mov	x0, x26
  40a284:	mov	x2, x21
  40a288:	bl	402bb0 <memchr@plt>
  40a28c:	cbz	x0, 40ac0c <wcrtomb@plt+0x7ecc>
  40a290:	sub	x21, x0, x26
  40a294:	mov	w4, #0x1                   	// #1
  40a298:	ldrb	w0, [x20, #56]
  40a29c:	add	x25, x20, #0x30
  40a2a0:	ldr	x3, [x25, #16]
  40a2a4:	cbnz	w0, 40a2e8 <wcrtomb@plt+0x75a8>
  40a2a8:	cbnz	x21, 40a2c8 <wcrtomb@plt+0x7588>
  40a2ac:	cbz	w4, 409af4 <wcrtomb@plt+0x6db4>
  40a2b0:	mov	x2, #0x1                   	// #1
  40a2b4:	mov	x0, x22
  40a2b8:	mov	x1, x2
  40a2bc:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a2c0:	ldr	x3, [x20, #64]
  40a2c4:	b	409afc <wcrtomb@plt+0x6dbc>
  40a2c8:	mov	x2, x21
  40a2cc:	mov	x0, x26
  40a2d0:	mov	x1, #0x1                   	// #1
  40a2d4:	str	w4, [sp, #96]
  40a2d8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a2dc:	ldr	w4, [sp, #96]
  40a2e0:	ldr	x3, [x20, #64]
  40a2e4:	b	40a2ac <wcrtomb@plt+0x756c>
  40a2e8:	mov	x2, #0x1                   	// #1
  40a2ec:	mov	x0, x22
  40a2f0:	mov	x1, x2
  40a2f4:	str	w4, [sp, #96]
  40a2f8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a2fc:	strb	wzr, [x25, #8]
  40a300:	ldr	w4, [sp, #96]
  40a304:	ldr	x3, [x25, #16]
  40a308:	cbz	x21, 40a2ac <wcrtomb@plt+0x756c>
  40a30c:	b	40a2c8 <wcrtomb@plt+0x7588>
  40a310:	add	x22, x20, #0xd8
  40a314:	add	x1, x20, #0x60
  40a318:	mov	x0, x22
  40a31c:	bl	408a68 <wcrtomb@plt+0x5d28>
  40a320:	ldrb	w0, [x24, #1925]
  40a324:	add	x1, x24, #0x785
  40a328:	str	x1, [sp, #96]
  40a32c:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a330:	ldr	x21, [x20, #224]
  40a334:	cbz	x21, 40af08 <wcrtomb@plt+0x81c8>
  40a338:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a33c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a340:	ldr	x25, [x20, #232]
  40a344:	add	x22, x1, #0x520
  40a348:	ldr	x3, [x1, #1312]
  40a34c:	add	x0, x0, #0xe30
  40a350:	add	x20, x21, x25
  40a354:	mov	x2, #0x9                   	// #9
  40a358:	mov	x1, #0x1                   	// #1
  40a35c:	bl	402680 <fwrite_unlocked@plt>
  40a360:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a364:	nop
  40a368:	ldrb	w0, [x21], #1
  40a36c:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a370:	cmp	x21, x20
  40a374:	b.ne	40a368 <wcrtomb@plt+0x7628>  // b.any
  40a378:	b	409878 <wcrtomb@plt+0x6b38>
  40a37c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a380:	add	x25, x20, #0xd8
  40a384:	add	x1, x4, #0x470
  40a388:	mov	x0, x25
  40a38c:	mov	x2, #0x1                   	// #1
  40a390:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a394:	ldp	x1, x2, [x20, #104]
  40a398:	add	x0, x24, #0x785
  40a39c:	str	x0, [sp, #96]
  40a3a0:	mov	x0, x25
  40a3a4:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a3a8:	ldrb	w0, [x24, #1925]
  40a3ac:	ldrb	w2, [x20, #128]
  40a3b0:	ldur	x1, [x20, #132]
  40a3b4:	strb	w2, [x20, #248]
  40a3b8:	stur	x1, [x20, #252]
  40a3bc:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a3c0:	ldr	x21, [x20, #224]
  40a3c4:	cbz	x21, 40af00 <wcrtomb@plt+0x81c0>
  40a3c8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a3cc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a3d0:	ldr	x25, [x20, #232]
  40a3d4:	add	x22, x1, #0x520
  40a3d8:	ldr	x3, [x1, #1312]
  40a3dc:	add	x0, x0, #0xe30
  40a3e0:	add	x20, x21, x25
  40a3e4:	mov	x2, #0x9                   	// #9
  40a3e8:	mov	x1, #0x1                   	// #1
  40a3ec:	bl	402680 <fwrite_unlocked@plt>
  40a3f0:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a3f4:	nop
  40a3f8:	ldrb	w0, [x21], #1
  40a3fc:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a400:	cmp	x21, x20
  40a404:	b.ne	40a3f8 <wcrtomb@plt+0x76b8>  // b.any
  40a408:	b	409878 <wcrtomb@plt+0x6b38>
  40a40c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a410:	add	x20, x20, #0x630
  40a414:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a418:	add	x22, x25, #0x470
  40a41c:	ldrb	w1, [x20, #56]
  40a420:	ldr	x0, [x20, #64]
  40a424:	cbnz	w1, 40aba4 <wcrtomb@plt+0x7e64>
  40a428:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a42c:	ldrb	w4, [x25, #1136]
  40a430:	add	x2, x2, #0xe88
  40a434:	ldr	x3, [x23, #16]
  40a438:	b	40a1b0 <wcrtomb@plt+0x7470>
  40a43c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a440:	ldp	x22, x26, [x20, #104]
  40a444:	ldrb	w1, [x4, #1136]
  40a448:	mov	x0, x22
  40a44c:	mov	x2, x26
  40a450:	bl	402bb0 <memchr@plt>
  40a454:	mov	x5, x0
  40a458:	cbz	x0, 4096e8 <wcrtomb@plt+0x69a8>
  40a45c:	add	x25, x0, #0x1
  40a460:	ldrb	w1, [x24, #1925]
  40a464:	ldr	x0, [x20, #120]
  40a468:	sub	x22, x25, x22
  40a46c:	sub	x4, x26, x22
  40a470:	sub	x22, x0, x22
  40a474:	add	x0, x24, #0x785
  40a478:	str	x0, [sp, #96]
  40a47c:	ldr	x19, [x27]
  40a480:	stp	x25, x4, [x20, #104]
  40a484:	str	x22, [x20, #120]
  40a488:	cbz	w1, 40981c <wcrtomb@plt+0x6adc>
  40a48c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a490:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a494:	add	x22, x1, #0x520
  40a498:	add	x0, x0, #0xe00
  40a49c:	ldr	x3, [x1, #1312]
  40a4a0:	mov	x2, #0x9                   	// #9
  40a4a4:	mov	x1, #0x1                   	// #1
  40a4a8:	str	x4, [sp, #112]
  40a4ac:	str	x5, [sp, #128]
  40a4b0:	bl	402680 <fwrite_unlocked@plt>
  40a4b4:	ldr	x4, [sp, #112]
  40a4b8:	ldr	x5, [sp, #128]
  40a4bc:	add	x20, x4, #0x1
  40a4c0:	add	x20, x5, x20
  40a4c4:	cbz	x4, 40a4d8 <wcrtomb@plt+0x7798>
  40a4c8:	ldrb	w0, [x25], #1
  40a4cc:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a4d0:	cmp	x25, x20
  40a4d4:	b.ne	40a4c8 <wcrtomb@plt+0x7788>  // b.any
  40a4d8:	ldr	x0, [x22]
  40a4dc:	ldp	x1, x2, [x0, #40]
  40a4e0:	cmp	x1, x2
  40a4e4:	b.cs	40b300 <wcrtomb@plt+0x85c0>  // b.hs, b.nlast
  40a4e8:	add	x2, x1, #0x1
  40a4ec:	str	x2, [x0, #40]
  40a4f0:	mov	w0, #0xa                   	// #10
  40a4f4:	strb	w0, [x1]
  40a4f8:	ldr	x0, [sp, #96]
  40a4fc:	ldrb	w1, [x0]
  40a500:	b	4094e8 <wcrtomb@plt+0x67a8>
  40a504:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a508:	add	x25, x20, #0x60
  40a50c:	add	x1, x4, #0x470
  40a510:	mov	x0, x25
  40a514:	mov	x2, #0x1                   	// #1
  40a518:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a51c:	ldp	x1, x2, [x20, #224]
  40a520:	add	x0, x24, #0x785
  40a524:	str	x0, [sp, #96]
  40a528:	mov	x0, x25
  40a52c:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a530:	ldrb	w0, [x24, #1925]
  40a534:	ldrb	w2, [x20, #248]
  40a538:	ldur	x1, [x20, #252]
  40a53c:	strb	w2, [x20, #128]
  40a540:	stur	x1, [x20, #132]
  40a544:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a548:	ldr	x21, [x20, #104]
  40a54c:	cbz	x21, 40aef8 <wcrtomb@plt+0x81b8>
  40a550:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a554:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a558:	ldr	x25, [x20, #112]
  40a55c:	add	x22, x1, #0x520
  40a560:	ldr	x3, [x1, #1312]
  40a564:	add	x0, x0, #0xe00
  40a568:	add	x20, x21, x25
  40a56c:	mov	x2, #0x9                   	// #9
  40a570:	mov	x1, #0x1                   	// #1
  40a574:	bl	402680 <fwrite_unlocked@plt>
  40a578:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a57c:	nop
  40a580:	ldrb	w0, [x21], #1
  40a584:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a588:	cmp	x21, x20
  40a58c:	b.ne	40a580 <wcrtomb@plt+0x7840>  // b.any
  40a590:	b	409878 <wcrtomb@plt+0x6b38>
  40a594:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a598:	add	x22, x4, #0x470
  40a59c:	add	x0, x20, #0x60
  40a5a0:	mov	x1, x22
  40a5a4:	mov	x2, #0x1                   	// #1
  40a5a8:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a5ac:	ldr	x0, [x20, #16]
  40a5b0:	cbnz	x0, 40a5c4 <wcrtomb@plt+0x7884>
  40a5b4:	mov	x0, x23
  40a5b8:	bl	409040 <wcrtomb@plt+0x6300>
  40a5bc:	tst	w0, #0xff
  40a5c0:	b.ne	40b320 <wcrtomb@plt+0x85e0>  // b.any
  40a5c4:	mov	x1, x27
  40a5c8:	mov	x0, x23
  40a5cc:	mov	w2, #0x1                   	// #1
  40a5d0:	bl	408f00 <wcrtomb@plt+0x61c0>
  40a5d4:	tst	w0, #0xff
  40a5d8:	b.eq	40b320 <wcrtomb@plt+0x85e0>  // b.none
  40a5dc:	ldrb	w0, [x24, #1925]
  40a5e0:	add	x1, x24, #0x785
  40a5e4:	str	x1, [sp, #96]
  40a5e8:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a5ec:	ldr	x21, [x20, #104]
  40a5f0:	cbz	x21, 40af38 <wcrtomb@plt+0x81f8>
  40a5f4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a5f8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a5fc:	ldr	x25, [x20, #112]
  40a600:	add	x22, x1, #0x520
  40a604:	ldr	x3, [x1, #1312]
  40a608:	add	x0, x0, #0xe00
  40a60c:	add	x20, x21, x25
  40a610:	mov	x2, #0x9                   	// #9
  40a614:	mov	x1, #0x1                   	// #1
  40a618:	bl	402680 <fwrite_unlocked@plt>
  40a61c:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a620:	ldrb	w0, [x21], #1
  40a624:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a628:	cmp	x21, x20
  40a62c:	b.ne	40a620 <wcrtomb@plt+0x78e0>  // b.any
  40a630:	b	409878 <wcrtomb@plt+0x6b38>
  40a634:	mov	w0, #0x5c                  	// #92
  40a638:	strb	w0, [sp, #208]
  40a63c:	ldrb	w4, [x26]
  40a640:	cmp	w4, #0xa
  40a644:	b.eq	40aa24 <wcrtomb@plt+0x7ce4>  // b.none
  40a648:	b.hi	40a6e0 <wcrtomb@plt+0x79a0>  // b.pmore
  40a64c:	cmp	w4, #0x8
  40a650:	b.eq	40aa34 <wcrtomb@plt+0x7cf4>  // b.none
  40a654:	cmp	w4, #0x9
  40a658:	b.ne	40a700 <wcrtomb@plt+0x79c0>  // b.any
  40a65c:	mov	w0, #0x74                  	// #116
  40a660:	strb	w0, [sp, #209]
  40a664:	ldr	w0, [sp, #112]
  40a668:	mov	x4, #0x2                   	// #2
  40a66c:	add	x25, x25, x4
  40a670:	cmp	w0, #0x0
  40a674:	ccmp	x25, x20, #0x0, ne  // ne = any
  40a678:	b.cc	4099d4 <wcrtomb@plt+0x6c94>  // b.lo, b.ul, b.last
  40a67c:	nop
  40a680:	ldr	x0, [sp, #136]
  40a684:	mov	x2, #0x1                   	// #1
  40a688:	mov	x3, x21
  40a68c:	mov	x1, x2
  40a690:	str	x4, [sp, #96]
  40a694:	add	x26, x26, #0x1
  40a698:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a69c:	mov	x2, #0x1                   	// #1
  40a6a0:	mov	x3, x21
  40a6a4:	mov	x1, x2
  40a6a8:	mov	x0, x22
  40a6ac:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a6b0:	ldr	x4, [sp, #96]
  40a6b4:	mov	x0, x28
  40a6b8:	mov	x3, x21
  40a6bc:	mov	x1, #0x1                   	// #1
  40a6c0:	mov	x2, x4
  40a6c4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40a6c8:	ldr	x0, [sp, #128]
  40a6cc:	ldr	x4, [sp, #96]
  40a6d0:	cmp	x0, x26
  40a6d4:	b.eq	4099f8 <wcrtomb@plt+0x6cb8>  // b.none
  40a6d8:	mov	x25, x4
  40a6dc:	b	409988 <wcrtomb@plt+0x6c48>
  40a6e0:	cmp	w4, #0xc
  40a6e4:	b.eq	40aa14 <wcrtomb@plt+0x7cd4>  // b.none
  40a6e8:	cmp	w4, #0xd
  40a6ec:	b.ne	40a718 <wcrtomb@plt+0x79d8>  // b.any
  40a6f0:	mov	w0, #0x72                  	// #114
  40a6f4:	mov	x4, #0x2                   	// #2
  40a6f8:	strb	w0, [sp, #209]
  40a6fc:	b	4099c0 <wcrtomb@plt+0x6c80>
  40a700:	cmp	w4, #0x7
  40a704:	mov	w0, #0x61                  	// #97
  40a708:	b.ne	40a9dc <wcrtomb@plt+0x7c9c>  // b.any
  40a70c:	mov	x4, #0x2                   	// #2
  40a710:	strb	w0, [sp, #209]
  40a714:	b	4099c0 <wcrtomb@plt+0x6c80>
  40a718:	cmp	w4, #0xb
  40a71c:	b.ne	40a9dc <wcrtomb@plt+0x7c9c>  // b.any
  40a720:	mov	w0, #0x76                  	// #118
  40a724:	mov	x4, #0x2                   	// #2
  40a728:	strb	w0, [sp, #209]
  40a72c:	b	4099c0 <wcrtomb@plt+0x6c80>
  40a730:	ldr	x26, [x22, #8]
  40a734:	mov	w0, #0x1                   	// #1
  40a738:	strb	w0, [x20, #208]
  40a73c:	mov	w6, #0x0                   	// #0
  40a740:	cbnz	x26, 40a7a8 <wcrtomb@plt+0x7a68>
  40a744:	b	40a7ec <wcrtomb@plt+0x7aac>
  40a748:	mov	w6, #0x0                   	// #0
  40a74c:	tbnz	w7, #31, 40a7a0 <wcrtomb@plt+0x7a60>
  40a750:	ldr	x0, [x21]
  40a754:	sxtw	x1, w7
  40a758:	cmp	x0, w7, sxtw
  40a75c:	b.ls	40a7a0 <wcrtomb@plt+0x7a60>  // b.plast
  40a760:	ldp	x0, x2, [x21, #8]
  40a764:	ldr	x0, [x0, x1, lsl #3]
  40a768:	ldr	x1, [x2, x1, lsl #3]
  40a76c:	cmp	x1, x0
  40a770:	b.eq	40a90c <wcrtomb@plt+0x7bcc>  // b.none
  40a774:	ldr	x3, [x20, #104]
  40a778:	sub	x1, x1, x0
  40a77c:	mov	w2, w5
  40a780:	str	x8, [sp, #112]
  40a784:	add	x0, x3, x0
  40a788:	str	x9, [sp, #128]
  40a78c:	str	w6, [sp, #136]
  40a790:	bl	408b08 <wcrtomb@plt+0x5dc8>
  40a794:	ldr	w6, [sp, #136]
  40a798:	ldr	x8, [sp, #112]
  40a79c:	ldr	x9, [sp, #128]
  40a7a0:	ldr	x26, [x26, #24]
  40a7a4:	cbz	x26, 40a7ec <wcrtomb@plt+0x7aac>
  40a7a8:	ldp	w7, w5, [x26, #16]
  40a7ac:	ldr	x1, [x26, #8]
  40a7b0:	orr	w6, w5, w6
  40a7b4:	tst	w5, #0xc
  40a7b8:	csel	w5, w6, w5, eq  // eq = none
  40a7bc:	cbz	x1, 40a748 <wcrtomb@plt+0x7a08>
  40a7c0:	ldr	x0, [x26]
  40a7c4:	mov	w2, w5
  40a7c8:	and	w5, w5, #0xfffffff3
  40a7cc:	str	w5, [sp, #112]
  40a7d0:	stp	x8, x9, [sp, #128]
  40a7d4:	str	w7, [sp, #144]
  40a7d8:	bl	408b08 <wcrtomb@plt+0x5dc8>
  40a7dc:	ldr	w5, [sp, #112]
  40a7e0:	ldr	w7, [sp, #144]
  40a7e4:	ldp	x8, x9, [sp, #128]
  40a7e8:	b	40a748 <wcrtomb@plt+0x7a08>
  40a7ec:	ldr	x1, [x21, #16]
  40a7f0:	add	x26, x8, x9
  40a7f4:	ldrb	w0, [x22, #32]
  40a7f8:	ldr	x1, [x1]
  40a7fc:	str	x1, [sp, #112]
  40a800:	tbnz	w0, #0, 409f68 <wcrtomb@plt+0x7228>
  40a804:	ldr	x2, [x20, #112]
  40a808:	cmp	x26, x2
  40a80c:	b.cc	40ac50 <wcrtomb@plt+0x7f10>  // b.lo, b.ul, b.last
  40a810:	ldrb	w4, [x20, #128]
  40a814:	strb	w4, [x20, #176]
  40a818:	ldp	x4, x5, [x20, #160]
  40a81c:	ldr	w6, [x20, #128]
  40a820:	ldr	w7, [x20, #176]
  40a824:	ldp	x2, x3, [x20, #96]
  40a828:	stp	x2, x3, [x28]
  40a82c:	ldp	x8, x9, [x20, #112]
  40a830:	stp	x4, x5, [x20, #112]
  40a834:	ldp	x4, x5, [x20, #144]
  40a838:	stp	x8, x9, [x28, #16]
  40a83c:	str	w6, [x28, #32]
  40a840:	stp	x4, x5, [x20, #96]
  40a844:	str	w7, [x20, #128]
  40a848:	stp	x2, x3, [x20, #144]
  40a84c:	stp	x8, x9, [x20, #160]
  40a850:	str	w6, [x20, #176]
  40a854:	ldr	x0, [x22, #16]
  40a858:	cmp	x0, x25
  40a85c:	b.hi	40a8b8 <wcrtomb@plt+0x7b78>  // b.pmore
  40a860:	ldrb	w0, [x22, #32]
  40a864:	tbnz	w0, #1, 40ad94 <wcrtomb@plt+0x8054>
  40a868:	tbnz	w0, #3, 40add4 <wcrtomb@plt+0x8094>
  40a86c:	tbnz	w0, #2, 40b194 <wcrtomb@plt+0x8454>
  40a870:	ldr	x22, [x22, #24]
  40a874:	cbz	x22, 40a8b8 <wcrtomb@plt+0x7b78>
  40a878:	ldp	x5, x25, [x20, #104]
  40a87c:	cbz	x5, 40afd0 <wcrtomb@plt+0x8290>
  40a880:	ldrb	w1, [x22, #8]
  40a884:	ldrb	w6, [x20, #128]
  40a888:	ldr	x3, [x22, #16]
  40a88c:	cbnz	w1, 40b05c <wcrtomb@plt+0x831c>
  40a890:	cbnz	x25, 40b03c <wcrtomb@plt+0x82fc>
  40a894:	cbnz	w6, 40b278 <wcrtomb@plt+0x8538>
  40a898:	mov	w0, #0x1                   	// #1
  40a89c:	strb	w0, [x22, #8]
  40a8a0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a8a4:	ldrb	w0, [x0, #1926]
  40a8a8:	cbz	w0, 40a8b8 <wcrtomb@plt+0x7b78>
  40a8ac:	mov	x0, x3
  40a8b0:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40a8b4:	nop
  40a8b8:	ldr	x0, [sp, #96]
  40a8bc:	ldrb	w0, [x0]
  40a8c0:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a8c4:	ldp	x21, x25, [x20, #104]
  40a8c8:	cbz	x21, 40afd8 <wcrtomb@plt+0x8298>
  40a8cc:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a8d0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a8d4:	add	x22, x1, #0x520
  40a8d8:	add	x0, x0, #0xe00
  40a8dc:	ldr	x3, [x1, #1312]
  40a8e0:	add	x20, x21, x25
  40a8e4:	mov	x2, #0x9                   	// #9
  40a8e8:	mov	x1, #0x1                   	// #1
  40a8ec:	bl	402680 <fwrite_unlocked@plt>
  40a8f0:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a8f4:	nop
  40a8f8:	ldrb	w0, [x21], #1
  40a8fc:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a900:	cmp	x21, x20
  40a904:	b.ne	40a8f8 <wcrtomb@plt+0x7bb8>  // b.any
  40a908:	b	409878 <wcrtomb@plt+0x6b38>
  40a90c:	ldr	w6, [x26, #20]
  40a910:	and	w5, w5, #0xc
  40a914:	ands	w6, w6, #0xc
  40a918:	csel	w6, w5, w6, ne  // ne = any
  40a91c:	b	40a7a0 <wcrtomb@plt+0x7a60>
  40a920:	mov	x5, #0x1                   	// #1
  40a924:	cmp	x22, x5
  40a928:	b.ls	409e08 <wcrtomb@plt+0x70c8>  // b.plast
  40a92c:	ldr	x2, [x20, #112]
  40a930:	sub	x4, x5, x22
  40a934:	add	x2, x2, #0x1
  40a938:	b	409dbc <wcrtomb@plt+0x707c>
  40a93c:	ldr	x0, [x1, #8]
  40a940:	add	x2, x0, x2
  40a944:	cmp	x0, x2
  40a948:	b.cs	40a968 <wcrtomb@plt+0x7c28>  // b.hs, b.nlast
  40a94c:	nop
  40a950:	ldrb	w1, [x0]
  40a954:	ldr	x3, [x19, #24]
  40a958:	ldrb	w1, [x3, x1]
  40a95c:	strb	w1, [x0], #1
  40a960:	cmp	x2, x0
  40a964:	b.ne	40a950 <wcrtomb@plt+0x7c10>  // b.any
  40a968:	ldrb	w0, [x24, #1925]
  40a96c:	add	x1, x24, #0x785
  40a970:	str	x1, [sp, #96]
  40a974:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40a978:	ldr	x21, [x20, #104]
  40a97c:	cbz	x21, 40af10 <wcrtomb@plt+0x81d0>
  40a980:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40a984:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40a988:	ldr	x25, [x20, #112]
  40a98c:	add	x22, x1, #0x520
  40a990:	ldr	x3, [x1, #1312]
  40a994:	add	x0, x0, #0xe00
  40a998:	add	x20, x21, x25
  40a99c:	mov	x2, #0x9                   	// #9
  40a9a0:	mov	x1, #0x1                   	// #1
  40a9a4:	bl	402680 <fwrite_unlocked@plt>
  40a9a8:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40a9ac:	nop
  40a9b0:	ldrb	w0, [x21], #1
  40a9b4:	bl	4076c8 <wcrtomb@plt+0x4988>
  40a9b8:	cmp	x21, x20
  40a9bc:	b.ne	40a9b0 <wcrtomb@plt+0x7c70>  // b.any
  40a9c0:	b	409878 <wcrtomb@plt+0x6b38>
  40a9c4:	sxtw	x2, w0
  40a9c8:	cbnz	w22, 40aa8c <wcrtomb@plt+0x7d4c>
  40a9cc:	mov	x1, x28
  40a9d0:	mov	x0, x25
  40a9d4:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40a9d8:	b	40a05c <wcrtomb@plt+0x731c>
  40a9dc:	ldr	x3, [sp, #144]
  40a9e0:	add	x5, x28, #0x1
  40a9e4:	mov	x0, x5
  40a9e8:	mov	x2, #0xb3                  	// #179
  40a9ec:	mov	w1, #0x1                   	// #1
  40a9f0:	str	x5, [sp, #96]
  40a9f4:	bl	4026a0 <__sprintf_chk@plt>
  40a9f8:	ldr	x5, [sp, #96]
  40a9fc:	mov	x0, x5
  40aa00:	bl	402690 <strlen@plt>
  40aa04:	ldr	x5, [sp, #96]
  40aa08:	add	x4, x5, x0
  40aa0c:	sub	x4, x4, x28
  40aa10:	b	4099c0 <wcrtomb@plt+0x6c80>
  40aa14:	mov	w0, #0x66                  	// #102
  40aa18:	mov	x4, #0x2                   	// #2
  40aa1c:	strb	w0, [sp, #209]
  40aa20:	b	4099c0 <wcrtomb@plt+0x6c80>
  40aa24:	mov	w0, #0x6e                  	// #110
  40aa28:	mov	x4, #0x2                   	// #2
  40aa2c:	strb	w0, [sp, #209]
  40aa30:	b	4099c0 <wcrtomb@plt+0x6c80>
  40aa34:	mov	w0, #0x62                  	// #98
  40aa38:	mov	x4, #0x2                   	// #2
  40aa3c:	strb	w0, [sp, #209]
  40aa40:	b	4099c0 <wcrtomb@plt+0x6c80>
  40aa44:	ldr	x0, [x19, #24]
  40aa48:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40aa4c:	add	x1, x1, #0xe10
  40aa50:	add	x0, x0, w21, sxtw
  40aa54:	sturb	wzr, [x0, #-1]
  40aa58:	ldr	x0, [x19, #24]
  40aa5c:	bl	402850 <popen@plt>
  40aa60:	mov	x26, x0
  40aa64:	ldrb	w1, [x20, #56]
  40aa68:	cbz	w1, 40a034 <wcrtomb@plt+0x72f4>
  40aa6c:	ldr	x3, [x20, #64]
  40aa70:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40aa74:	mov	x2, #0x1                   	// #1
  40aa78:	add	x0, x4, #0x470
  40aa7c:	mov	x1, x2
  40aa80:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40aa84:	strb	wzr, [x20, #56]
  40aa88:	b	40a034 <wcrtomb@plt+0x72f4>
  40aa8c:	ldr	x3, [x20, #64]
  40aa90:	mov	x0, x28
  40aa94:	mov	x1, #0x1                   	// #1
  40aa98:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40aa9c:	b	40a05c <wcrtomb@plt+0x731c>
  40aaa0:	mov	x0, x25
  40aaa4:	stp	x4, x5, [sp, #144]
  40aaa8:	bl	4083e0 <wcrtomb@plt+0x56a0>
  40aaac:	ldp	x0, x2, [x20, #104]
  40aab0:	str	x0, [sp, #128]
  40aab4:	ldp	x4, x5, [sp, #144]
  40aab8:	add	x2, x2, #0x1
  40aabc:	b	409dbc <wcrtomb@plt+0x707c>
  40aac0:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  40aac4:	add	x0, x26, #0x785
  40aac8:	str	x0, [sp, #96]
  40aacc:	b	40a8b8 <wcrtomb@plt+0x7b78>
  40aad0:	ldr	x26, [x20, #104]
  40aad4:	cbz	x26, 409a70 <wcrtomb@plt+0x6d30>
  40aad8:	ldrb	w0, [x20, #56]
  40aadc:	ldrb	w6, [x20, #128]
  40aae0:	ldr	x3, [x20, #64]
  40aae4:	ldr	x5, [x20, #112]
  40aae8:	cbnz	w0, 40af64 <wcrtomb@plt+0x8224>
  40aaec:	cbnz	x5, 40af40 <wcrtomb@plt+0x8200>
  40aaf0:	cbnz	w6, 40af98 <wcrtomb@plt+0x8258>
  40aaf4:	mov	w0, #0x1                   	// #1
  40aaf8:	strb	w0, [x20, #56]
  40aafc:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40ab00:	ldrb	w0, [x0, #1926]
  40ab04:	cbz	w0, 409a70 <wcrtomb@plt+0x6d30>
  40ab08:	mov	x0, x3
  40ab0c:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40ab10:	b	409a70 <wcrtomb@plt+0x6d30>
  40ab14:	mov	x3, x0
  40ab18:	mov	x2, #0x1                   	// #1
  40ab1c:	mov	x0, x22
  40ab20:	mov	x1, x2
  40ab24:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40ab28:	strb	wzr, [x20, #56]
  40ab2c:	ldr	x0, [x20, #64]
  40ab30:	b	40a1a0 <wcrtomb@plt+0x7460>
  40ab34:	ldr	x0, [x19, #24]
  40ab38:	ldr	x19, [x27]
  40ab3c:	add	x0, x0, x0, lsl #2
  40ab40:	add	x19, x19, x0, lsl #3
  40ab44:	b	4094e8 <wcrtomb@plt+0x67a8>
  40ab48:	mov	x0, #0x33                  	// #51
  40ab4c:	bl	418708 <wcrtomb@plt+0x159c8>
  40ab50:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40ab54:	dup	v0.2d, x0
  40ab58:	mov	w1, #0x1                   	// #1
  40ab5c:	strb	w1, [x25, #32]
  40ab60:	ldr	q1, [x2, #4000]
  40ab64:	stur	xzr, [x20, #180]
  40ab68:	str	q0, [x20, #144]
  40ab6c:	str	q1, [x25, #16]
  40ab70:	b	40a004 <wcrtomb@plt+0x72c4>
  40ab74:	mov	x0, #0x33                  	// #51
  40ab78:	bl	418708 <wcrtomb@plt+0x159c8>
  40ab7c:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40ab80:	dup	v0.2d, x0
  40ab84:	ldur	x0, [x20, #132]
  40ab88:	mov	w1, #0x1                   	// #1
  40ab8c:	ldr	q1, [x2, #4000]
  40ab90:	strb	w1, [x25, #32]
  40ab94:	stur	x0, [x25, #36]
  40ab98:	str	q0, [x20, #144]
  40ab9c:	str	q1, [x25, #16]
  40aba0:	b	409ea0 <wcrtomb@plt+0x7160>
  40aba4:	mov	x3, x0
  40aba8:	mov	x2, #0x1                   	// #1
  40abac:	mov	x0, x22
  40abb0:	mov	x1, x2
  40abb4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40abb8:	strb	wzr, [x20, #56]
  40abbc:	ldr	x0, [x20, #64]
  40abc0:	b	40a428 <wcrtomb@plt+0x76e8>
  40abc4:	ldr	x21, [x20, #104]
  40abc8:	cbz	x21, 40af30 <wcrtomb@plt+0x81f0>
  40abcc:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40abd0:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40abd4:	ldr	x25, [x20, #112]
  40abd8:	add	x22, x1, #0x520
  40abdc:	ldr	x3, [x1, #1312]
  40abe0:	add	x0, x0, #0xe00
  40abe4:	add	x20, x21, x25
  40abe8:	mov	x2, #0x9                   	// #9
  40abec:	mov	x1, #0x1                   	// #1
  40abf0:	bl	402680 <fwrite_unlocked@plt>
  40abf4:	cbz	x25, 409878 <wcrtomb@plt+0x6b38>
  40abf8:	ldrb	w0, [x21], #1
  40abfc:	bl	4076c8 <wcrtomb@plt+0x4988>
  40ac00:	cmp	x21, x20
  40ac04:	b.ne	40abf8 <wcrtomb@plt+0x7eb8>  // b.any
  40ac08:	b	409878 <wcrtomb@plt+0x6b38>
  40ac0c:	ldrb	w4, [x25, #32]
  40ac10:	b	40a298 <wcrtomb@plt+0x7558>
  40ac14:	str	x0, [x20, #192]
  40ac18:	b	40a168 <wcrtomb@plt+0x7428>
  40ac1c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40ac20:	mov	x2, #0x1                   	// #1
  40ac24:	add	x0, x4, #0x470
  40ac28:	mov	x1, x2
  40ac2c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40ac30:	ldr	x3, [x20, #64]
  40ac34:	b	409afc <wcrtomb@plt+0x6dbc>
  40ac38:	mov	x2, x21
  40ac3c:	mov	x0, x26
  40ac40:	mov	x1, #0x1                   	// #1
  40ac44:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40ac48:	ldr	x3, [x20, #64]
  40ac4c:	b	4098c8 <wcrtomb@plt+0x6b88>
  40ac50:	ldr	x1, [x20, #104]
  40ac54:	sub	x2, x2, x26
  40ac58:	add	x0, x20, #0x90
  40ac5c:	add	x1, x1, x26
  40ac60:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40ac64:	b	40a810 <wcrtomb@plt+0x7ad0>
  40ac68:	mov	x3, x25
  40ac6c:	mov	x2, x26
  40ac70:	mov	x0, x4
  40ac74:	mov	x1, #0x1                   	// #1
  40ac78:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40ac7c:	ldr	x25, [x21, #16]
  40ac80:	b	40a23c <wcrtomb@plt+0x74fc>
  40ac84:	mov	x3, x25
  40ac88:	mov	x2, #0x1                   	// #1
  40ac8c:	mov	x0, x22
  40ac90:	mov	x1, x2
  40ac94:	str	x4, [sp, #96]
  40ac98:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40ac9c:	strb	wzr, [x21, #8]
  40aca0:	ldr	x25, [x21, #16]
  40aca4:	ldr	x4, [sp, #96]
  40aca8:	cbz	x26, 40a23c <wcrtomb@plt+0x74fc>
  40acac:	b	40ac68 <wcrtomb@plt+0x7f28>
  40acb0:	cmn	x8, #0x1
  40acb4:	b.eq	40ad88 <wcrtomb@plt+0x8048>  // b.none
  40acb8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40acbc:	add	x0, x0, #0xe58
  40acc0:	bl	402a40 <puts@plt>
  40acc4:	ldp	x2, x0, [x21]
  40acc8:	ldr	x1, [x21, #16]
  40accc:	ldr	x8, [x0]
  40acd0:	cbz	x2, 409ee8 <wcrtomb@plt+0x71a8>
  40acd4:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x102f0>
  40acd8:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40acdc:	add	x3, x3, #0xe70
  40ace0:	add	x2, x2, #0x588
  40ace4:	mov	x26, #0x0                   	// #0
  40ace8:	str	x3, [sp, #112]
  40acec:	str	x2, [sp, #128]
  40acf0:	b	40ad34 <wcrtomb@plt+0x7ff4>
  40acf4:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  40acf8:	sub	x1, x1, x0
  40acfc:	ldr	x4, [x20, #104]
  40ad00:	mov	x2, #0x1                   	// #1
  40ad04:	ldr	x3, [x3, #1312]
  40ad08:	add	x26, x26, x2
  40ad0c:	add	x0, x4, x0
  40ad10:	bl	402680 <fwrite_unlocked@plt>
  40ad14:	ldr	x0, [sp, #128]
  40ad18:	bl	402a40 <puts@plt>
  40ad1c:	ldr	x0, [x21]
  40ad20:	cmp	x0, x26
  40ad24:	b.ls	40ad84 <wcrtomb@plt+0x8044>  // b.plast
  40ad28:	ldp	x0, x1, [x21, #8]
  40ad2c:	add	x25, x0, x25
  40ad30:	ldr	x8, [x25, #8]
  40ad34:	cmn	x8, #0x1
  40ad38:	lsl	x25, x26, #3
  40ad3c:	b.eq	40ad8c <wcrtomb@plt+0x804c>  // b.none
  40ad40:	ldr	x4, [x1, x26, lsl #3]
  40ad44:	mov	w3, w8
  40ad48:	ldr	x1, [sp, #112]
  40ad4c:	mov	w2, w26
  40ad50:	mov	w0, #0x1                   	// #1
  40ad54:	bl	4028b0 <__printf_chk@plt>
  40ad58:	ldp	x0, x1, [x21, #8]
  40ad5c:	ldr	x0, [x0, x26, lsl #3]
  40ad60:	ldr	x1, [x1, x26, lsl #3]
  40ad64:	cmp	x0, x1
  40ad68:	b.ne	40acf4 <wcrtomb@plt+0x7fb4>  // b.any
  40ad6c:	ldr	x0, [sp, #128]
  40ad70:	add	x26, x26, #0x1
  40ad74:	bl	402a40 <puts@plt>
  40ad78:	ldr	x0, [x21]
  40ad7c:	cmp	x0, x26
  40ad80:	b.hi	40ad28 <wcrtomb@plt+0x7fe8>  // b.pmore
  40ad84:	ldr	x0, [x21, #8]
  40ad88:	ldr	x1, [x21, #16]
  40ad8c:	ldr	x8, [x0]
  40ad90:	b	409ee8 <wcrtomb@plt+0x71a8>
  40ad94:	ldr	x5, [x20, #104]
  40ad98:	cbz	x5, 40a868 <wcrtomb@plt+0x7b28>
  40ad9c:	ldrb	w0, [x20, #56]
  40ada0:	ldrb	w7, [x20, #128]
  40ada4:	ldr	x3, [x20, #64]
  40ada8:	ldr	x6, [x20, #112]
  40adac:	cbnz	w0, 40b0b0 <wcrtomb@plt+0x8370>
  40adb0:	cbnz	x6, 40b090 <wcrtomb@plt+0x8350>
  40adb4:	cbnz	w7, 40b2e4 <wcrtomb@plt+0x85a4>
  40adb8:	mov	w0, #0x1                   	// #1
  40adbc:	strb	w0, [x20, #56]
  40adc0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40adc4:	ldrb	w0, [x0, #1926]
  40adc8:	cbnz	w0, 40b0ec <wcrtomb@plt+0x83ac>
  40adcc:	ldrb	w0, [x22, #32]
  40add0:	tbz	w0, #3, 40a86c <wcrtomb@plt+0x7b2c>
  40add4:	ldr	x0, [x20, #168]
  40add8:	add	x25, x20, #0x90
  40addc:	cbz	x0, 40b29c <wcrtomb@plt+0x855c>
  40ade0:	str	xzr, [x25, #16]
  40ade4:	stur	xzr, [x20, #180]
  40ade8:	add	x25, x20, #0x60
  40adec:	mov	x2, #0x1                   	// #1
  40adf0:	mov	x0, x25
  40adf4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40adf8:	add	x1, x1, #0x190
  40adfc:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40ae00:	ldr	x0, [x20, #104]
  40ae04:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40ae08:	add	x1, x1, #0xe10
  40ae0c:	bl	402850 <popen@plt>
  40ae10:	mov	x25, x0
  40ae14:	cbz	x0, 40b424 <wcrtomb@plt+0x86e4>
  40ae18:	ldr	w0, [x0]
  40ae1c:	add	x26, x20, #0x90
  40ae20:	tbnz	w0, #4, 40ae4c <wcrtomb@plt+0x810c>
  40ae24:	nop
  40ae28:	mov	x3, x25
  40ae2c:	mov	x0, x28
  40ae30:	mov	x2, #0x1000                	// #4096
  40ae34:	mov	x1, #0x1                   	// #1
  40ae38:	bl	402a50 <fread_unlocked@plt>
  40ae3c:	cmp	w0, #0x0
  40ae40:	b.gt	40b108 <wcrtomb@plt+0x83c8>
  40ae44:	ldr	w0, [x25]
  40ae48:	tbz	w0, #4, 40ae28 <wcrtomb@plt+0x80e8>
  40ae4c:	mov	x0, x25
  40ae50:	bl	402c60 <pclose@plt>
  40ae54:	add	x0, x20, #0x60
  40ae58:	ldp	x1, x3, [x20, #160]
  40ae5c:	ldp	x4, x5, [x0, #16]
  40ae60:	stp	x4, x5, [x28, #16]
  40ae64:	stp	x4, x5, [x20, #160]
  40ae68:	ldp	x4, x5, [x20, #176]
  40ae6c:	ldp	x8, x9, [x0, #32]
  40ae70:	stp	x8, x9, [x28, #32]
  40ae74:	ldp	x6, x7, [x20, #96]
  40ae78:	stp	x1, x3, [x0, #16]
  40ae7c:	stp	x4, x5, [x0, #32]
  40ae80:	ldp	x4, x5, [x20, #144]
  40ae84:	stp	x6, x7, [x28]
  40ae88:	stp	x4, x5, [x20, #96]
  40ae8c:	stp	x6, x7, [x20, #144]
  40ae90:	stp	x8, x9, [x20, #176]
  40ae94:	cbz	x1, 40aeb4 <wcrtomb@plt+0x8174>
  40ae98:	ldr	x2, [x0, #8]
  40ae9c:	sub	x1, x1, #0x1
  40aea0:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40aea4:	ldrb	w3, [x2, x1]
  40aea8:	ldrb	w2, [x4, #1136]
  40aeac:	cmp	w3, w2
  40aeb0:	b.eq	40b0fc <wcrtomb@plt+0x83bc>  // b.none
  40aeb4:	ldrb	w0, [x22, #32]
  40aeb8:	b	40a86c <wcrtomb@plt+0x7b2c>
  40aebc:	mov	x2, x20
  40aec0:	mov	x0, x22
  40aec4:	mov	x1, #0x1                   	// #1
  40aec8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40aecc:	ldr	x3, [x21, #16]
  40aed0:	b	409bb4 <wcrtomb@plt+0x6e74>
  40aed4:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40aed8:	mov	x2, #0x1                   	// #1
  40aedc:	add	x0, x4, #0x470
  40aee0:	mov	x1, x2
  40aee4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40aee8:	strb	wzr, [x21, #8]
  40aeec:	ldr	x3, [x21, #16]
  40aef0:	cbz	x20, 409bb4 <wcrtomb@plt+0x6e74>
  40aef4:	b	40aebc <wcrtomb@plt+0x817c>
  40aef8:	ldr	x21, [x20, #96]
  40aefc:	b	40a550 <wcrtomb@plt+0x7810>
  40af00:	ldr	x21, [x20, #216]
  40af04:	b	40a3c8 <wcrtomb@plt+0x7688>
  40af08:	ldr	x21, [x20, #216]
  40af0c:	b	40a338 <wcrtomb@plt+0x75f8>
  40af10:	ldr	x21, [x20, #96]
  40af14:	b	40a980 <wcrtomb@plt+0x7c40>
  40af18:	ldr	x21, [x20, #216]
  40af1c:	b	409c88 <wcrtomb@plt+0x6f48>
  40af20:	ldr	x25, [x20, #96]
  40af24:	b	409c18 <wcrtomb@plt+0x6ed8>
  40af28:	ldr	x21, [x20, #216]
  40af2c:	b	40983c <wcrtomb@plt+0x6afc>
  40af30:	ldr	x21, [x20, #96]
  40af34:	b	40abcc <wcrtomb@plt+0x7e8c>
  40af38:	ldr	x21, [x20, #96]
  40af3c:	b	40a5f4 <wcrtomb@plt+0x78b4>
  40af40:	mov	x2, x5
  40af44:	mov	x0, x26
  40af48:	mov	x1, #0x1                   	// #1
  40af4c:	str	w6, [sp, #96]
  40af50:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40af54:	ldr	w6, [sp, #96]
  40af58:	ldr	x3, [x20, #64]
  40af5c:	cbz	w6, 40aaf4 <wcrtomb@plt+0x7db4>
  40af60:	b	40af98 <wcrtomb@plt+0x8258>
  40af64:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40af68:	mov	x2, #0x1                   	// #1
  40af6c:	add	x0, x4, #0x470
  40af70:	mov	x1, x2
  40af74:	str	x5, [sp, #96]
  40af78:	str	w6, [sp, #112]
  40af7c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40af80:	ldr	x5, [sp, #96]
  40af84:	strb	wzr, [x20, #56]
  40af88:	ldr	w6, [sp, #112]
  40af8c:	ldr	x3, [x20, #64]
  40af90:	cbz	x5, 40aaf0 <wcrtomb@plt+0x7db0>
  40af94:	b	40af40 <wcrtomb@plt+0x8200>
  40af98:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40af9c:	mov	x2, #0x1                   	// #1
  40afa0:	add	x0, x4, #0x470
  40afa4:	mov	x1, x2
  40afa8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40afac:	ldr	x3, [x20, #64]
  40afb0:	b	40aafc <wcrtomb@plt+0x7dbc>
  40afb4:	mov	x2, #0x1                   	// #1
  40afb8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40afbc:	mov	x1, x2
  40afc0:	add	x0, x0, #0x470
  40afc4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40afc8:	ldr	x3, [x20, #64]
  40afcc:	b	409760 <wcrtomb@plt+0x6a20>
  40afd0:	ldrb	w0, [x24, #1925]
  40afd4:	cbz	w0, 409818 <wcrtomb@plt+0x6ad8>
  40afd8:	ldr	x21, [x20, #96]
  40afdc:	b	40a8cc <wcrtomb@plt+0x7b8c>
  40afe0:	mov	x2, #0x1                   	// #1
  40afe4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40afe8:	mov	x1, x2
  40afec:	add	x0, x0, #0x470
  40aff0:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40aff4:	ldr	x3, [x20, #64]
  40aff8:	b	409548 <wcrtomb@plt+0x6808>
  40affc:	mov	x2, x22
  40b000:	mov	x0, x21
  40b004:	mov	x1, #0x1                   	// #1
  40b008:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b00c:	ldr	x3, [x20, #64]
  40b010:	cbz	w23, 409540 <wcrtomb@plt+0x6800>
  40b014:	b	40afe0 <wcrtomb@plt+0x82a0>
  40b018:	mov	x2, #0x1                   	// #1
  40b01c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b020:	mov	x1, x2
  40b024:	add	x0, x0, #0x470
  40b028:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b02c:	strb	wzr, [x20, #56]
  40b030:	ldr	x3, [x20, #64]
  40b034:	cbz	x22, 40953c <wcrtomb@plt+0x67fc>
  40b038:	b	40affc <wcrtomb@plt+0x82bc>
  40b03c:	mov	x2, x25
  40b040:	mov	x0, x5
  40b044:	mov	x1, #0x1                   	// #1
  40b048:	str	w6, [sp, #112]
  40b04c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b050:	ldr	w6, [sp, #112]
  40b054:	ldr	x3, [x22, #16]
  40b058:	b	40a894 <wcrtomb@plt+0x7b54>
  40b05c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b060:	mov	x2, #0x1                   	// #1
  40b064:	add	x0, x4, #0x470
  40b068:	mov	x1, x2
  40b06c:	str	x5, [sp, #112]
  40b070:	str	w6, [sp, #128]
  40b074:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b078:	strb	wzr, [x22, #8]
  40b07c:	ldr	w6, [sp, #128]
  40b080:	ldr	x3, [x22, #16]
  40b084:	ldr	x5, [sp, #112]
  40b088:	cbz	x25, 40a894 <wcrtomb@plt+0x7b54>
  40b08c:	b	40b03c <wcrtomb@plt+0x82fc>
  40b090:	mov	x2, x6
  40b094:	mov	x0, x5
  40b098:	mov	x1, #0x1                   	// #1
  40b09c:	str	w7, [sp, #112]
  40b0a0:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b0a4:	ldr	w7, [sp, #112]
  40b0a8:	ldr	x3, [x20, #64]
  40b0ac:	b	40adb4 <wcrtomb@plt+0x8074>
  40b0b0:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b0b4:	mov	x2, #0x1                   	// #1
  40b0b8:	add	x0, x4, #0x470
  40b0bc:	mov	x1, x2
  40b0c0:	str	x5, [sp, #112]
  40b0c4:	str	x6, [sp, #128]
  40b0c8:	str	w7, [sp, #136]
  40b0cc:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b0d0:	ldr	x6, [sp, #128]
  40b0d4:	strb	wzr, [x20, #56]
  40b0d8:	ldr	w7, [sp, #136]
  40b0dc:	ldr	x3, [x20, #64]
  40b0e0:	ldr	x5, [sp, #112]
  40b0e4:	cbz	x6, 40adb4 <wcrtomb@plt+0x8074>
  40b0e8:	b	40b090 <wcrtomb@plt+0x8350>
  40b0ec:	mov	x0, x3
  40b0f0:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40b0f4:	ldrb	w0, [x22, #32]
  40b0f8:	b	40add0 <wcrtomb@plt+0x8090>
  40b0fc:	str	x1, [x0, #16]
  40b100:	ldrb	w0, [x22, #32]
  40b104:	b	40a86c <wcrtomb@plt+0x7b2c>
  40b108:	sxtw	x2, w0
  40b10c:	mov	x1, x28
  40b110:	mov	x0, x26
  40b114:	bl	4088f0 <wcrtomb@plt+0x5bb0>
  40b118:	ldr	w0, [x25]
  40b11c:	tbz	w0, #4, 40ae28 <wcrtomb@plt+0x80e8>
  40b120:	b	40ae4c <wcrtomb@plt+0x810c>
  40b124:	ldrb	w20, [x20, #32]
  40b128:	b	40a230 <wcrtomb@plt+0x74f0>
  40b12c:	ldr	x0, [x22, #16]
  40b130:	cmp	x0, #0x1
  40b134:	b.hi	409ef4 <wcrtomb@plt+0x71b4>  // b.pmore
  40b138:	ldr	x4, [x20, #112]
  40b13c:	cbnz	x8, 40b148 <wcrtomb@plt+0x8408>
  40b140:	ldrb	w0, [x22, #32]
  40b144:	tbz	w0, #0, 40b390 <wcrtomb@plt+0x8650>
  40b148:	cmp	x4, x2
  40b14c:	b.ne	409ef4 <wcrtomb@plt+0x71b4>  // b.any
  40b150:	mov	w0, #0x1                   	// #1
  40b154:	strb	w0, [x20, #208]
  40b158:	ldrb	w0, [x22, #32]
  40b15c:	str	x8, [x20, #112]
  40b160:	tbz	w0, #1, 40a868 <wcrtomb@plt+0x7b28>
  40b164:	b	40ad94 <wcrtomb@plt+0x8054>
  40b168:	mov	x3, x25
  40b16c:	mov	x2, #0x1                   	// #1
  40b170:	mov	x0, x22
  40b174:	mov	x1, x2
  40b178:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b17c:	ldr	x25, [x21, #16]
  40b180:	b	40a248 <wcrtomb@plt+0x7508>
  40b184:	ldr	x2, [x6, #16]
  40b188:	b	40a808 <wcrtomb@plt+0x7ac8>
  40b18c:	str	x0, [x20, #192]
  40b190:	b	409e70 <wcrtomb@plt+0x7130>
  40b194:	ldr	x5, [x20, #104]
  40b198:	cbz	x5, 40a870 <wcrtomb@plt+0x7b30>
  40b19c:	ldrb	w0, [x20, #56]
  40b1a0:	ldrb	w7, [x20, #128]
  40b1a4:	ldr	x3, [x20, #64]
  40b1a8:	ldr	x6, [x20, #112]
  40b1ac:	cbnz	w0, 40b1f8 <wcrtomb@plt+0x84b8>
  40b1b0:	cbnz	x6, 40b1d8 <wcrtomb@plt+0x8498>
  40b1b4:	cbnz	w7, 40b2c8 <wcrtomb@plt+0x8588>
  40b1b8:	mov	w0, #0x1                   	// #1
  40b1bc:	strb	w0, [x20, #56]
  40b1c0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b1c4:	ldrb	w0, [x0, #1926]
  40b1c8:	cbz	w0, 40a870 <wcrtomb@plt+0x7b30>
  40b1cc:	mov	x0, x3
  40b1d0:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40b1d4:	b	40a870 <wcrtomb@plt+0x7b30>
  40b1d8:	mov	x2, x6
  40b1dc:	mov	x0, x5
  40b1e0:	mov	x1, #0x1                   	// #1
  40b1e4:	str	w7, [sp, #112]
  40b1e8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b1ec:	ldr	w7, [sp, #112]
  40b1f0:	ldr	x3, [x20, #64]
  40b1f4:	b	40b1b4 <wcrtomb@plt+0x8474>
  40b1f8:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b1fc:	mov	x2, #0x1                   	// #1
  40b200:	add	x0, x4, #0x470
  40b204:	mov	x1, x2
  40b208:	str	x5, [sp, #112]
  40b20c:	str	x6, [sp, #128]
  40b210:	str	w7, [sp, #136]
  40b214:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b218:	ldr	x6, [sp, #128]
  40b21c:	strb	wzr, [x20, #56]
  40b220:	ldr	w7, [sp, #136]
  40b224:	ldr	x3, [x20, #64]
  40b228:	ldr	x5, [sp, #112]
  40b22c:	cbz	x6, 40b1b4 <wcrtomb@plt+0x8474>
  40b230:	b	40b1d8 <wcrtomb@plt+0x8498>
  40b234:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b238:	mov	x2, #0x1                   	// #1
  40b23c:	add	x0, x4, #0x470
  40b240:	mov	x1, x2
  40b244:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b248:	ldr	x3, [x21, #16]
  40b24c:	b	409afc <wcrtomb@plt+0x6dbc>
  40b250:	mov	x2, x19
  40b254:	mov	x0, x23
  40b258:	mov	x1, #0x1                   	// #1
  40b25c:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b260:	ldr	x3, [x20, #64]
  40b264:	b	4096bc <wcrtomb@plt+0x697c>
  40b268:	ldr	x0, [sp, #208]
  40b26c:	bl	402ae0 <free@plt>
  40b270:	ldrb	w1, [x24, #1925]
  40b274:	b	4094e4 <wcrtomb@plt+0x67a4>
  40b278:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b27c:	mov	x2, #0x1                   	// #1
  40b280:	add	x0, x4, #0x470
  40b284:	mov	x1, x2
  40b288:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b28c:	ldr	x3, [x22, #16]
  40b290:	b	40a8a0 <wcrtomb@plt+0x7b60>
  40b294:	str	x1, [x20, #192]
  40b298:	b	4094c4 <wcrtomb@plt+0x6784>
  40b29c:	mov	x0, #0x33                  	// #51
  40b2a0:	bl	418708 <wcrtomb@plt+0x159c8>
  40b2a4:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b2a8:	dup	v0.2d, x0
  40b2ac:	mov	w1, #0x1                   	// #1
  40b2b0:	strb	w1, [x25, #32]
  40b2b4:	ldr	q1, [x2, #4000]
  40b2b8:	stur	xzr, [x20, #180]
  40b2bc:	str	q0, [x20, #144]
  40b2c0:	str	q1, [x25, #16]
  40b2c4:	b	40ade8 <wcrtomb@plt+0x80a8>
  40b2c8:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b2cc:	mov	x2, #0x1                   	// #1
  40b2d0:	add	x0, x4, #0x470
  40b2d4:	mov	x1, x2
  40b2d8:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b2dc:	ldr	x3, [x20, #64]
  40b2e0:	b	40b1c0 <wcrtomb@plt+0x8480>
  40b2e4:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b2e8:	mov	x2, #0x1                   	// #1
  40b2ec:	add	x0, x4, #0x470
  40b2f0:	mov	x1, x2
  40b2f4:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b2f8:	ldr	x3, [x20, #64]
  40b2fc:	b	40adc0 <wcrtomb@plt+0x8080>
  40b300:	mov	w1, #0xa                   	// #10
  40b304:	bl	402a20 <__overflow@plt>
  40b308:	ldr	x0, [sp, #96]
  40b30c:	ldrb	w1, [x0]
  40b310:	b	4094e8 <wcrtomb@plt+0x67a8>
  40b314:	mov	w1, #0xa                   	// #10
  40b318:	bl	402a20 <__overflow@plt>
  40b31c:	b	409c80 <wcrtomb@plt+0x6f40>
  40b320:	ldrb	w0, [x24, #1925]
  40b324:	cbnz	w0, 40b3c4 <wcrtomb@plt+0x8684>
  40b328:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b32c:	ldr	x19, [x20, #112]
  40b330:	ldr	w1, [x1, #2288]
  40b334:	sub	x19, x19, #0x1
  40b338:	str	x19, [x20, #112]
  40b33c:	cbnz	w1, 4096e8 <wcrtomb@plt+0x69a8>
  40b340:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b344:	ldrb	w1, [x1, #1888]
  40b348:	cbnz	w1, 4096e8 <wcrtomb@plt+0x69a8>
  40b34c:	ldr	x21, [x20, #104]
  40b350:	cbz	x21, 4096e8 <wcrtomb@plt+0x69a8>
  40b354:	ldrb	w1, [x20, #56]
  40b358:	ldrb	w24, [x20, #128]
  40b35c:	cbnz	w1, 40b404 <wcrtomb@plt+0x86c4>
  40b360:	cbnz	x19, 40b3ec <wcrtomb@plt+0x86ac>
  40b364:	cbnz	w24, 40b438 <wcrtomb@plt+0x86f8>
  40b368:	mov	w0, #0x1                   	// #1
  40b36c:	strb	w0, [x20, #56]
  40b370:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b374:	ldrb	w0, [x0, #1926]
  40b378:	cbz	w0, 4096e8 <wcrtomb@plt+0x69a8>
  40b37c:	ldr	x0, [x20, #64]
  40b380:	bl	40c9e0 <wcrtomb@plt+0x9ca0>
  40b384:	mov	w0, #0xffffffff            	// #-1
  40b388:	ldp	x25, x26, [sp, #64]
  40b38c:	b	409564 <wcrtomb@plt+0x6824>
  40b390:	sub	x4, x4, x2
  40b394:	str	x4, [x20, #112]
  40b398:	ldr	x4, [x20, #104]
  40b39c:	mov	w6, #0x1                   	// #1
  40b3a0:	ldr	x5, [x1]
  40b3a4:	add	x2, x4, x2
  40b3a8:	ldr	x1, [x20, #120]
  40b3ac:	str	x2, [x20, #104]
  40b3b0:	strb	w6, [x20, #208]
  40b3b4:	sub	x1, x1, x5
  40b3b8:	str	x1, [x20, #120]
  40b3bc:	tbz	w0, #1, 40a868 <wcrtomb@plt+0x7b28>
  40b3c0:	b	40ad94 <wcrtomb@plt+0x8054>
  40b3c4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b3c8:	add	x0, x0, #0xdf0
  40b3cc:	bl	402a40 <puts@plt>
  40b3d0:	b	40b328 <wcrtomb@plt+0x85e8>
  40b3d4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b3d8:	add	x1, x1, #0xe18
  40b3dc:	mov	w2, #0x5                   	// #5
  40b3e0:	mov	x0, #0x0                   	// #0
  40b3e4:	bl	402c20 <dcgettext@plt>
  40b3e8:	bl	40c380 <wcrtomb@plt+0x9640>
  40b3ec:	ldr	x3, [x20, #64]
  40b3f0:	mov	x2, x19
  40b3f4:	mov	x0, x21
  40b3f8:	mov	x1, #0x1                   	// #1
  40b3fc:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b400:	b	40b364 <wcrtomb@plt+0x8624>
  40b404:	ldr	x3, [x20, #64]
  40b408:	mov	x2, #0x1                   	// #1
  40b40c:	mov	x0, x22
  40b410:	mov	x1, x2
  40b414:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b418:	strb	wzr, [x20, #56]
  40b41c:	cbz	x19, 40b364 <wcrtomb@plt+0x8624>
  40b420:	b	40b3ec <wcrtomb@plt+0x86ac>
  40b424:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b428:	add	x1, x1, #0xe18
  40b42c:	mov	w2, #0x5                   	// #5
  40b430:	bl	402c20 <dcgettext@plt>
  40b434:	bl	40c380 <wcrtomb@plt+0x9640>
  40b438:	ldr	x3, [x20, #64]
  40b43c:	mov	x2, #0x1                   	// #1
  40b440:	mov	x0, x22
  40b444:	mov	x1, x2
  40b448:	bl	40c818 <wcrtomb@plt+0x9ad8>
  40b44c:	b	40b370 <wcrtomb@plt+0x8630>
  40b450:	stp	x29, x30, [sp, #-288]!
  40b454:	mov	x29, sp
  40b458:	stp	x19, x20, [sp, #16]
  40b45c:	mov	x19, x1
  40b460:	mov	x20, x0
  40b464:	mov	x0, #0x33                  	// #51
  40b468:	stp	x21, x22, [sp, #32]
  40b46c:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b470:	stp	x23, x24, [sp, #48]
  40b474:	add	x22, x22, #0x630
  40b478:	mov	w21, #0x1                   	// #1
  40b47c:	str	x25, [sp, #64]
  40b480:	bl	418708 <wcrtomb@plt+0x159c8>
  40b484:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b488:	dup	v0.2d, x0
  40b48c:	mov	x0, #0x1                   	// #1
  40b490:	strb	w21, [x22, #128]
  40b494:	ldr	q1, [x1, #4000]
  40b498:	stur	xzr, [x22, #132]
  40b49c:	stp	q0, q1, [x22, #96]
  40b4a0:	bl	418708 <wcrtomb@plt+0x159c8>
  40b4a4:	mov	x1, x0
  40b4a8:	movi	v1.4s, #0x0
  40b4ac:	mov	x0, #0x1                   	// #1
  40b4b0:	dup	v0.2d, x1
  40b4b4:	strb	w21, [x22, #248]
  40b4b8:	stur	xzr, [x22, #252]
  40b4bc:	stur	q1, [x22, #232]
  40b4c0:	stur	q0, [x22, #216]
  40b4c4:	bl	418708 <wcrtomb@plt+0x159c8>
  40b4c8:	dup	v0.2d, x0
  40b4cc:	movi	v1.4s, #0x0
  40b4d0:	strb	w21, [x22, #32]
  40b4d4:	stur	xzr, [x22, #36]
  40b4d8:	strb	w21, [sp, #104]
  40b4dc:	stp	q0, q1, [x22]
  40b4e0:	cbz	x19, 40b4f4 <wcrtomb@plt+0x87b4>
  40b4e4:	ldr	x0, [x19]
  40b4e8:	cbz	x0, 40b4f4 <wcrtomb@plt+0x87b4>
  40b4ec:	str	x19, [sp, #80]
  40b4f0:	b	40b50c <wcrtomb@plt+0x87cc>
  40b4f4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b4f8:	ldr	x0, [x0, #1912]
  40b4fc:	cbnz	x0, 40b67c <wcrtomb@plt+0x893c>
  40b500:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b504:	add	x0, x0, #0x450
  40b508:	str	x0, [sp, #80]
  40b50c:	adrp	x0, 408000 <wcrtomb@plt+0x52c0>
  40b510:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b514:	add	x0, x0, #0x3d8
  40b518:	adrp	x24, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b51c:	add	x23, x23, #0x785
  40b520:	add	x24, x24, #0xed0
  40b524:	stp	xzr, xzr, [sp, #88]
  40b528:	str	x0, [sp, #112]
  40b52c:	str	xzr, [sp, #264]
  40b530:	b	40b54c <wcrtomb@plt+0x880c>
  40b534:	add	x1, sp, #0x50
  40b538:	mov	x0, x20
  40b53c:	bl	409320 <wcrtomb@plt+0x65e0>
  40b540:	mov	w19, w0
  40b544:	cmn	w0, #0x1
  40b548:	b.ne	40b610 <wcrtomb@plt+0x88d0>  // b.any
  40b54c:	mov	x1, x20
  40b550:	add	x0, sp, #0x50
  40b554:	mov	w2, #0x0                   	// #0
  40b558:	bl	408f00 <wcrtomb@plt+0x61c0>
  40b55c:	tst	w0, #0xff
  40b560:	b.eq	40b668 <wcrtomb@plt+0x8928>  // b.none
  40b564:	ldrb	w0, [x23]
  40b568:	cbz	w0, 40b534 <wcrtomb@plt+0x87f4>
  40b56c:	ldr	x0, [sp, #264]
  40b570:	cbz	x0, 40b644 <wcrtomb@plt+0x8904>
  40b574:	bl	402780 <fileno@plt>
  40b578:	cbnz	w0, 40b644 <wcrtomb@plt+0x8904>
  40b57c:	ldr	x3, [sp, #96]
  40b580:	mov	x1, x24
  40b584:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b588:	mov	w0, #0x1                   	// #1
  40b58c:	add	x2, x2, #0xeb8
  40b590:	bl	4028b0 <__printf_chk@plt>
  40b594:	ldr	x19, [x22, #104]
  40b598:	cbz	x19, 40b660 <wcrtomb@plt+0x8920>
  40b59c:	nop
  40b5a0:	adrp	x25, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b5a4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b5a8:	ldr	x21, [x22, #112]
  40b5ac:	add	x0, x0, #0xe00
  40b5b0:	ldr	x3, [x25, #1312]
  40b5b4:	mov	x2, #0x9                   	// #9
  40b5b8:	mov	x1, #0x1                   	// #1
  40b5bc:	bl	402680 <fwrite_unlocked@plt>
  40b5c0:	cbz	x21, 40b5d8 <wcrtomb@plt+0x8898>
  40b5c4:	add	x21, x19, x21
  40b5c8:	ldrb	w0, [x19], #1
  40b5cc:	bl	4076c8 <wcrtomb@plt+0x4988>
  40b5d0:	cmp	x21, x19
  40b5d4:	b.ne	40b5c8 <wcrtomb@plt+0x8888>  // b.any
  40b5d8:	ldr	x0, [x25, #1312]
  40b5dc:	ldp	x1, x2, [x0, #40]
  40b5e0:	cmp	x1, x2
  40b5e4:	b.cs	40b670 <wcrtomb@plt+0x8930>  // b.hs, b.nlast
  40b5e8:	add	x2, x1, #0x1
  40b5ec:	str	x2, [x0, #40]
  40b5f0:	mov	w0, #0xa                   	// #10
  40b5f4:	strb	w0, [x1]
  40b5f8:	add	x1, sp, #0x50
  40b5fc:	mov	x0, x20
  40b600:	bl	409320 <wcrtomb@plt+0x65e0>
  40b604:	mov	w19, w0
  40b608:	cmn	w0, #0x1
  40b60c:	b.eq	40b54c <wcrtomb@plt+0x880c>  // b.none
  40b610:	add	x0, sp, #0x50
  40b614:	bl	408730 <wcrtomb@plt+0x59f0>
  40b618:	ldr	x1, [sp, #88]
  40b61c:	mov	w0, #0x2                   	// #2
  40b620:	ldp	x21, x22, [sp, #32]
  40b624:	cmp	x1, #0x0
  40b628:	csel	w19, w19, w0, eq  // eq = none
  40b62c:	mov	w0, w19
  40b630:	ldp	x19, x20, [sp, #16]
  40b634:	ldp	x23, x24, [sp, #48]
  40b638:	ldr	x25, [sp, #64]
  40b63c:	ldp	x29, x30, [sp], #288
  40b640:	ret
  40b644:	ldr	x3, [sp, #96]
  40b648:	mov	x1, x24
  40b64c:	ldr	x2, [sp, #128]
  40b650:	mov	w0, #0x1                   	// #1
  40b654:	bl	4028b0 <__printf_chk@plt>
  40b658:	ldr	x19, [x22, #104]
  40b65c:	cbnz	x19, 40b5a0 <wcrtomb@plt+0x8860>
  40b660:	ldr	x19, [x22, #96]
  40b664:	b	40b5a0 <wcrtomb@plt+0x8860>
  40b668:	mov	w19, #0x0                   	// #0
  40b66c:	b	40b610 <wcrtomb@plt+0x88d0>
  40b670:	mov	w1, #0xa                   	// #10
  40b674:	bl	402a20 <__overflow@plt>
  40b678:	b	40b534 <wcrtomb@plt+0x87f4>
  40b67c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b680:	add	x1, x1, #0xec0
  40b684:	mov	w2, #0x5                   	// #5
  40b688:	mov	x0, #0x0                   	// #0
  40b68c:	bl	402c20 <dcgettext@plt>
  40b690:	bl	40c380 <wcrtomb@plt+0x9640>
  40b694:	nop
  40b698:	stp	x29, x30, [sp, #-64]!
  40b69c:	mov	x29, sp
  40b6a0:	stp	x19, x20, [sp, #16]
  40b6a4:	mov	x19, x1
  40b6a8:	mov	w20, w0
  40b6ac:	mov	x0, x1
  40b6b0:	str	x21, [sp, #32]
  40b6b4:	strb	w20, [sp, #63]
  40b6b8:	bl	402a10 <mbsinit@plt>
  40b6bc:	mov	x3, x19
  40b6c0:	mov	w21, w0
  40b6c4:	add	x1, sp, #0x3f
  40b6c8:	mov	x2, #0x1                   	// #1
  40b6cc:	mov	x0, #0x0                   	// #0
  40b6d0:	bl	418830 <wcrtomb@plt+0x15af0>
  40b6d4:	cbz	w0, 40b728 <wcrtomb@plt+0x89e8>
  40b6d8:	cmp	w0, #0x0
  40b6dc:	b.gt	40b708 <wcrtomb@plt+0x89c8>
  40b6e0:	cmn	w0, #0x2
  40b6e4:	b.eq	40b728 <wcrtomb@plt+0x89e8>  // b.none
  40b6e8:	cmn	w0, #0x1
  40b6ec:	b.ne	40b73c <wcrtomb@plt+0x89fc>  // b.any
  40b6f0:	str	xzr, [x19]
  40b6f4:	mov	w0, #0x0                   	// #0
  40b6f8:	ldp	x19, x20, [sp, #16]
  40b6fc:	ldr	x21, [sp, #32]
  40b700:	ldp	x29, x30, [sp], #64
  40b704:	ret
  40b708:	cmp	w0, #0x1
  40b70c:	b.ne	40b73c <wcrtomb@plt+0x89fc>  // b.any
  40b710:	cmp	w21, #0x0
  40b714:	cset	w0, eq  // eq = none
  40b718:	ldp	x19, x20, [sp, #16]
  40b71c:	ldr	x21, [sp, #32]
  40b720:	ldp	x29, x30, [sp], #64
  40b724:	ret
  40b728:	mov	w0, #0x1                   	// #1
  40b72c:	ldp	x19, x20, [sp, #16]
  40b730:	ldr	x21, [sp, #32]
  40b734:	ldp	x29, x30, [sp], #64
  40b738:	ret
  40b73c:	mov	w2, w0
  40b740:	mov	w1, w20
  40b744:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b748:	add	x0, x0, #0xfb0
  40b74c:	bl	40c380 <wcrtomb@plt+0x9640>
  40b750:	stp	x29, x30, [sp, #-16]!
  40b754:	mov	x29, sp
  40b758:	bl	414730 <wcrtomb@plt+0x119f0>
  40b75c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b760:	add	x1, x1, #0xfd8
  40b764:	bl	402aa0 <strcmp@plt>
  40b768:	cmp	w0, #0x0
  40b76c:	cset	w0, eq  // eq = none
  40b770:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b774:	strb	w0, [x1, #2280]
  40b778:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  40b77c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b780:	ldp	x29, x30, [sp], #16
  40b784:	str	w0, [x1, #2284]
  40b788:	ret
  40b78c:	nop
  40b790:	stp	x29, x30, [sp, #-272]!
  40b794:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b798:	mov	x29, sp
  40b79c:	ldr	w2, [x2, #1920]
  40b7a0:	stp	x19, x20, [sp, #16]
  40b7a4:	mov	x19, x0
  40b7a8:	stp	x21, x22, [sp, #32]
  40b7ac:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b7b0:	mov	w21, w1
  40b7b4:	stp	x23, x24, [sp, #48]
  40b7b8:	ldr	w0, [x22, #2288]
  40b7bc:	tbz	w2, #0, 40b800 <wcrtomb@plt+0x8ac0>
  40b7c0:	cmp	w0, #0x1
  40b7c4:	b.eq	40b938 <wcrtomb@plt+0x8bf8>  // b.none
  40b7c8:	cmp	w0, #0x2
  40b7cc:	b.eq	40b950 <wcrtomb@plt+0x8c10>  // b.none
  40b7d0:	ldr	w24, [x19, #64]
  40b7d4:	cmp	w0, #0x0
  40b7d8:	mov	w2, #0xb27c                	// #45692
  40b7dc:	mov	w20, #0xb27c                	// #45692
  40b7e0:	movk	w2, #0x7, lsl #16
  40b7e4:	movk	w20, #0x5, lsl #16
  40b7e8:	csel	w20, w2, w20, ne  // ne = any
  40b7ec:	tbnz	w24, #1, 40b828 <wcrtomb@plt+0x8ae8>
  40b7f0:	mov	x0, #0x100                 	// #256
  40b7f4:	bl	402800 <malloc@plt>
  40b7f8:	str	x0, [x19, #32]
  40b7fc:	b	40b82c <wcrtomb@plt+0x8aec>
  40b800:	cmp	w0, #0x1
  40b804:	b.eq	40b944 <wcrtomb@plt+0x8c04>  // b.none
  40b808:	cmp	w0, #0x2
  40b80c:	mov	w2, #0x646                 	// #1606
  40b810:	mov	w20, #0x246                 	// #582
  40b814:	movk	w2, #0x10f, lsl #16
  40b818:	movk	w20, #0x105, lsl #16
  40b81c:	csel	w20, w2, w20, eq  // eq = none
  40b820:	ldr	w24, [x19, #64]
  40b824:	tbz	w24, #1, 40b7f0 <wcrtomb@plt+0x8ab0>
  40b828:	orr	w20, w20, #0x400000
  40b82c:	cmp	w21, #0x0
  40b830:	add	x23, x19, #0x5a
  40b834:	cset	w2, eq  // eq = none
  40b838:	tst	x24, #0x4
  40b83c:	orr	w2, w20, w2, lsl #25
  40b840:	and	w0, w2, #0xffffffbf
  40b844:	orr	w0, w0, #0x100
  40b848:	csel	w2, w2, w0, eq  // eq = none
  40b84c:	sxtw	x20, w2
  40b850:	mov	x0, x20
  40b854:	bl	427d40 <_obstack_memory_used@@Base+0xf030>
  40b858:	ldr	x1, [x19, #72]
  40b85c:	mov	x2, x19
  40b860:	mov	x0, x23
  40b864:	bl	427cc0 <_obstack_memory_used@@Base+0xefb0>
  40b868:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b86c:	mov	w1, #0x0                   	// #0
  40b870:	ldrb	w3, [x2, #1136]
  40b874:	cmp	w3, #0xa
  40b878:	b.ne	40b884 <wcrtomb@plt+0x8b44>  // b.any
  40b87c:	ldr	w1, [x19, #64]
  40b880:	ubfx	x1, x1, #2, #1
  40b884:	ldrb	w2, [x19, #56]
  40b888:	str	xzr, [x19, #40]
  40b88c:	bfi	w2, w1, #7, #1
  40b890:	strb	w2, [x19, #56]
  40b894:	cbnz	x0, 40b9a4 <wcrtomb@plt+0x8c64>
  40b898:	cbz	w21, 40b8b4 <wcrtomb@plt+0x8b74>
  40b89c:	ldr	x0, [x19, #48]
  40b8a0:	sub	w21, w21, #0x1
  40b8a4:	cmp	x0, w21, sxtw
  40b8a8:	b.cs	40b8b4 <wcrtomb@plt+0x8b74>  // b.hs, b.nlast
  40b8ac:	ldr	w0, [x22, #2288]
  40b8b0:	cbz	w0, 40b974 <wcrtomb@plt+0x8c34>
  40b8b4:	cmp	w3, #0xa
  40b8b8:	cset	w21, ne  // ne = any
  40b8bc:	bl	414210 <wcrtomb@plt+0x114d0>
  40b8c0:	str	x0, [x19, #80]
  40b8c4:	lsl	w21, w21, #1
  40b8c8:	mov	x2, x20
  40b8cc:	mov	w3, w21
  40b8d0:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40b8d4:	add	x1, x1, #0x8f8
  40b8d8:	bl	414218 <wcrtomb@plt+0x114d8>
  40b8dc:	ldp	x1, x2, [x19, #72]
  40b8e0:	mov	x0, x23
  40b8e4:	mov	w3, #0x1                   	// #1
  40b8e8:	bl	412fe0 <wcrtomb@plt+0x102a0>
  40b8ec:	ldr	x0, [x19, #72]
  40b8f0:	cmp	x0, #0x1
  40b8f4:	b.eq	40b90c <wcrtomb@plt+0x8bcc>  // b.none
  40b8f8:	ldp	x19, x20, [sp, #16]
  40b8fc:	ldp	x21, x22, [sp, #32]
  40b900:	ldp	x23, x24, [sp, #48]
  40b904:	ldp	x29, x30, [sp], #272
  40b908:	ret
  40b90c:	ldrb	w1, [x19, #90]
  40b910:	cmp	w1, #0x5e
  40b914:	b.eq	40b95c <wcrtomb@plt+0x8c1c>  // b.none
  40b918:	cmp	w1, #0x24
  40b91c:	b.ne	40b8f8 <wcrtomb@plt+0x8bb8>  // b.any
  40b920:	strb	w0, [x19, #89]
  40b924:	ldp	x19, x20, [sp, #16]
  40b928:	ldp	x21, x22, [sp, #32]
  40b92c:	ldp	x23, x24, [sp, #48]
  40b930:	ldp	x29, x30, [sp], #272
  40b934:	ret
  40b938:	mov	w20, #0xb27c                	// #45692
  40b93c:	movk	w20, #0x7, lsl #16
  40b940:	b	40b820 <wcrtomb@plt+0x8ae0>
  40b944:	mov	w20, #0x246                 	// #582
  40b948:	movk	w20, #0x107, lsl #16
  40b94c:	b	40b820 <wcrtomb@plt+0x8ae0>
  40b950:	mov	w20, #0xb27c                	// #45692
  40b954:	movk	w20, #0xf, lsl #16
  40b958:	b	40b820 <wcrtomb@plt+0x8ae0>
  40b95c:	strb	w0, [x19, #88]
  40b960:	ldp	x19, x20, [sp, #16]
  40b964:	ldp	x21, x22, [sp, #32]
  40b968:	ldp	x23, x24, [sp, #48]
  40b96c:	ldp	x29, x30, [sp], #272
  40b970:	ret
  40b974:	mov	w2, #0x5                   	// #5
  40b978:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40b97c:	mov	x0, #0x0                   	// #0
  40b980:	add	x1, x1, #0xfe0
  40b984:	bl	402c20 <dcgettext@plt>
  40b988:	mov	x3, x0
  40b98c:	mov	w4, w21
  40b990:	add	x0, sp, #0x48
  40b994:	mov	x2, #0xc8                  	// #200
  40b998:	mov	w1, #0x1                   	// #1
  40b99c:	bl	4026a0 <__sprintf_chk@plt>
  40b9a0:	add	x0, sp, #0x48
  40b9a4:	bl	403ba8 <wcrtomb@plt+0xe68>
  40b9a8:	stp	x29, x30, [sp, #-16]!
  40b9ac:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40b9b0:	mov	x1, x0
  40b9b4:	mov	x29, sp
  40b9b8:	add	x0, x2, #0xd20
  40b9bc:	bl	40c380 <wcrtomb@plt+0x9640>
  40b9c0:	stp	x29, x30, [sp, #-32]!
  40b9c4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40b9c8:	mov	x29, sp
  40b9cc:	str	x19, [sp, #16]
  40b9d0:	mov	x19, x0
  40b9d4:	add	x0, x1, #0x10
  40b9d8:	bl	402cc0 <getenv@plt>
  40b9dc:	cbz	x0, 40b9ec <wcrtomb@plt+0x8cac>
  40b9e0:	ldr	x19, [sp, #16]
  40b9e4:	ldp	x29, x30, [sp], #32
  40b9e8:	ret
  40b9ec:	mov	x0, x19
  40b9f0:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  40b9f4:	nop
  40b9f8:	stp	x29, x30, [sp, #-64]!
  40b9fc:	mov	x29, sp
  40ba00:	stp	x19, x20, [sp, #16]
  40ba04:	mov	w20, w1
  40ba08:	stp	x21, x22, [sp, #32]
  40ba0c:	mov	x22, x0
  40ba10:	str	x23, [sp, #48]
  40ba14:	mov	w23, w2
  40ba18:	bl	40d050 <wcrtomb@plt+0xa310>
  40ba1c:	cbnz	x0, 40ba44 <wcrtomb@plt+0x8d04>
  40ba20:	cmp	w20, #0x0
  40ba24:	mov	x21, #0x0                   	// #0
  40ba28:	b.gt	40baac <wcrtomb@plt+0x8d6c>
  40ba2c:	mov	x0, x21
  40ba30:	ldp	x19, x20, [sp, #16]
  40ba34:	ldp	x21, x22, [sp, #32]
  40ba38:	ldr	x23, [sp, #48]
  40ba3c:	ldp	x29, x30, [sp], #64
  40ba40:	ret
  40ba44:	mov	x19, x0
  40ba48:	add	x0, x0, #0x5f
  40ba4c:	bl	418708 <wcrtomb@plt+0x159c8>
  40ba50:	mov	x21, x0
  40ba54:	mov	x0, x22
  40ba58:	add	x22, x21, #0x5a
  40ba5c:	str	w20, [x21, #64]
  40ba60:	bl	40d048 <wcrtomb@plt+0xa308>
  40ba64:	mov	x1, x0
  40ba68:	mov	x2, x19
  40ba6c:	mov	x0, x22
  40ba70:	bl	402650 <memcpy@plt>
  40ba74:	mov	x1, x19
  40ba78:	mov	w2, #0x2                   	// #2
  40ba7c:	mov	x0, x22
  40ba80:	bl	404f10 <wcrtomb@plt+0x21d0>
  40ba84:	str	x0, [x21, #72]
  40ba88:	mov	w1, w23
  40ba8c:	mov	x0, x21
  40ba90:	bl	40b790 <wcrtomb@plt+0x8a50>
  40ba94:	mov	x0, x21
  40ba98:	ldp	x19, x20, [sp, #16]
  40ba9c:	ldp	x21, x22, [sp, #32]
  40baa0:	ldr	x23, [sp, #48]
  40baa4:	ldp	x29, x30, [sp], #64
  40baa8:	ret
  40baac:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bab0:	add	x1, x1, #0x50
  40bab4:	add	x1, x1, #0x1f
  40bab8:	mov	w2, #0x5                   	// #5
  40babc:	bl	402c20 <dcgettext@plt>
  40bac0:	bl	403ba8 <wcrtomb@plt+0xe68>
  40bac4:	nop
  40bac8:	stp	x29, x30, [sp, #-128]!
  40bacc:	mov	x29, sp
  40bad0:	stp	x19, x20, [sp, #16]
  40bad4:	stp	x21, x22, [sp, #32]
  40bad8:	mov	x22, x2
  40badc:	stp	x23, x24, [sp, #48]
  40bae0:	mov	x23, x4
  40bae4:	mov	w24, w5
  40bae8:	stp	x25, x26, [sp, #64]
  40baec:	mov	x25, x1
  40baf0:	stp	x27, x28, [sp, #80]
  40baf4:	mov	x28, x3
  40baf8:	cbz	x0, 40bd3c <wcrtomb@plt+0x8ffc>
  40bafc:	mov	x19, x0
  40bb00:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bb04:	str	x19, [x0, #1872]
  40bb08:	mov	x0, #0x7ffffffe            	// #2147483646
  40bb0c:	cmp	x22, x0
  40bb10:	b.hi	40bf44 <wcrtomb@plt+0x9204>  // b.pmore
  40bb14:	ldrb	w0, [x19, #56]
  40bb18:	tst	x0, #0x10
  40bb1c:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  40bb20:	b.ne	40bdc8 <wcrtomb@plt+0x9088>  // b.any
  40bb24:	ldrb	w0, [x19, #56]
  40bb28:	mov	w20, #0x1                   	// #1
  40bb2c:	ldrh	w1, [x19, #88]
  40bb30:	bfi	w0, w20, #1, #2
  40bb34:	strb	w0, [x19, #56]
  40bb38:	cbz	w1, 40bbe0 <wcrtomb@plt+0x8ea0>
  40bb3c:	ldrb	w0, [x19, #89]
  40bb40:	cbnz	w0, 40be6c <wcrtomb@plt+0x912c>
  40bb44:	cbz	x28, 40bb7c <wcrtomb@plt+0x8e3c>
  40bb48:	ldr	w0, [x19, #64]
  40bb4c:	tbz	w0, #2, 40be4c <wcrtomb@plt+0x910c>
  40bb50:	add	x0, x25, x28
  40bb54:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bb58:	ldrb	w1, [x1, #1136]
  40bb5c:	ldurb	w2, [x0, #-1]
  40bb60:	cmp	w2, w1
  40bb64:	b.eq	40bb7c <wcrtomb@plt+0x8e3c>  // b.none
  40bb68:	sub	x2, x22, x28
  40bb6c:	bl	402bb0 <memchr@plt>
  40bb70:	cbz	x0, 40be4c <wcrtomb@plt+0x910c>
  40bb74:	sub	x28, x0, x25
  40bb78:	add	x28, x28, #0x1
  40bb7c:	cbz	w24, 40bbc0 <wcrtomb@plt+0x8e80>
  40bb80:	ldr	x4, [x23, #8]
  40bb84:	cbz	x4, 40bf00 <wcrtomb@plt+0x91c0>
  40bb88:	ldr	x0, [x23, #16]
  40bb8c:	str	x28, [x4]
  40bb90:	str	x28, [x0]
  40bb94:	ldr	x1, [x23]
  40bb98:	cmp	x1, #0x1
  40bb9c:	b.ls	40bbc0 <wcrtomb@plt+0x8e80>  // b.plast
  40bba0:	mov	x1, #0x1                   	// #1
  40bba4:	mov	x2, #0xffffffffffffffff    	// #-1
  40bba8:	str	x2, [x0, x1, lsl #3]
  40bbac:	str	x2, [x4, x1, lsl #3]
  40bbb0:	add	x1, x1, #0x1
  40bbb4:	ldr	x3, [x23]
  40bbb8:	cmp	x3, x1
  40bbbc:	b.hi	40bba8 <wcrtomb@plt+0x8e68>  // b.pmore
  40bbc0:	mov	w0, #0x1                   	// #1
  40bbc4:	ldp	x19, x20, [sp, #16]
  40bbc8:	ldp	x21, x22, [sp, #32]
  40bbcc:	ldp	x23, x24, [sp, #48]
  40bbd0:	ldp	x25, x26, [sp, #64]
  40bbd4:	ldp	x27, x28, [sp, #80]
  40bbd8:	ldp	x29, x30, [sp], #128
  40bbdc:	ret
  40bbe0:	cbnz	x28, 40bd70 <wcrtomb@plt+0x9030>
  40bbe4:	ldr	x21, [x19, #80]
  40bbe8:	mov	x0, x21
  40bbec:	bl	412e18 <wcrtomb@plt+0x100d8>
  40bbf0:	cbz	x0, 40bdf8 <wcrtomb@plt+0x90b8>
  40bbf4:	add	x26, x25, x22
  40bbf8:	mov	w3, w20
  40bbfc:	mov	x2, x26
  40bc00:	mov	x1, x25
  40bc04:	mov	x5, #0x0                   	// #0
  40bc08:	mov	x4, #0x0                   	// #0
  40bc0c:	bl	412e08 <wcrtomb@plt+0x100c8>
  40bc10:	cbz	x0, 40be4c <wcrtomb@plt+0x910c>
  40bc14:	ldr	w0, [x19, #64]
  40bc18:	and	w0, w0, #0x4
  40bc1c:	cbz	w24, 40bf30 <wcrtomb@plt+0x91f0>
  40bc20:	cbz	w0, 40bea8 <wcrtomb@plt+0x9168>
  40bc24:	nop
  40bc28:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bc2c:	ldrb	w1, [x26, #1136]
  40bc30:	cmp	w1, #0xa
  40bc34:	b.eq	40bd7c <wcrtomb@plt+0x903c>  // b.none
  40bc38:	mov	x20, x25
  40bc3c:	cbz	x28, 40bc5c <wcrtomb@plt+0x8f1c>
  40bc40:	mov	x2, x28
  40bc44:	mov	x0, x25
  40bc48:	str	w1, [sp, #104]
  40bc4c:	bl	402b30 <memrchr@plt>
  40bc50:	ldr	w1, [sp, #104]
  40bc54:	cmp	x0, #0x0
  40bc58:	csinc	x20, x25, x0, eq  // eq = none
  40bc5c:	cmp	w24, #0x0
  40bc60:	add	x0, x26, #0x470
  40bc64:	add	x28, x25, x28
  40bc68:	add	x22, x25, x22
  40bc6c:	csel	x27, x23, xzr, ne  // ne = any
  40bc70:	str	x0, [sp, #104]
  40bc74:	b	40bcb0 <wcrtomb@plt+0x8f70>
  40bc78:	mov	x1, x20
  40bc7c:	sub	x4, x0, x28
  40bc80:	sub	x2, x0, x20
  40bc84:	sub	x3, x28, x20
  40bc88:	mov	x0, x19
  40bc8c:	bl	428820 <_obstack_memory_used@@Base+0xfb10>
  40bc90:	mov	w1, w0
  40bc94:	tbz	w0, #31, 40bcec <wcrtomb@plt+0x8fac>
  40bc98:	cmp	x21, x22
  40bc9c:	b.eq	40bda4 <wcrtomb@plt+0x9064>  // b.none
  40bca0:	ldr	x0, [sp, #104]
  40bca4:	add	x20, x21, #0x1
  40bca8:	mov	x28, x20
  40bcac:	ldrb	w1, [x0]
  40bcb0:	sub	x26, x22, x20
  40bcb4:	mov	x0, x20
  40bcb8:	mov	x2, x26
  40bcbc:	bl	402bb0 <memchr@plt>
  40bcc0:	mov	x5, x27
  40bcc4:	mov	x21, x0
  40bcc8:	cbnz	x0, 40bc78 <wcrtomb@plt+0x8f38>
  40bccc:	mov	x1, x20
  40bcd0:	sub	x4, x22, x28
  40bcd4:	sub	x3, x28, x20
  40bcd8:	mov	x2, x26
  40bcdc:	mov	x0, x19
  40bce0:	bl	428820 <_obstack_memory_used@@Base+0xfb10>
  40bce4:	mov	w1, w0
  40bce8:	tbnz	w0, #31, 40bda4 <wcrtomb@plt+0x9064>
  40bcec:	sub	x20, x20, x25
  40bcf0:	add	w1, w20, w0
  40bcf4:	cbz	w24, 40bda4 <wcrtomb@plt+0x9064>
  40bcf8:	ldr	x0, [x23]
  40bcfc:	cbz	x0, 40bda4 <wcrtomb@plt+0x9064>
  40bd00:	ldp	x4, x3, [x23, #8]
  40bd04:	mov	x0, #0x0                   	// #0
  40bd08:	ldr	x2, [x4, x0, lsl #3]
  40bd0c:	tbnz	x2, #63, 40bd18 <wcrtomb@plt+0x8fd8>
  40bd10:	add	x2, x20, x2
  40bd14:	str	x2, [x4, x0, lsl #3]
  40bd18:	ldr	x2, [x3, x0, lsl #3]
  40bd1c:	tbnz	x2, #63, 40beec <wcrtomb@plt+0x91ac>
  40bd20:	add	x2, x20, x2
  40bd24:	str	x2, [x3, x0, lsl #3]
  40bd28:	add	x0, x0, #0x1
  40bd2c:	ldr	x2, [x23]
  40bd30:	cmp	x0, x2
  40bd34:	b.cc	40bd08 <wcrtomb@plt+0x8fc8>  // b.lo, b.ul, b.last
  40bd38:	b	40bda4 <wcrtomb@plt+0x9064>
  40bd3c:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bd40:	ldr	x19, [x1, #1872]
  40bd44:	cbnz	x19, 40bb08 <wcrtomb@plt+0x8dc8>
  40bd48:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bd4c:	add	x1, x1, #0x50
  40bd50:	mov	w2, #0x5                   	// #5
  40bd54:	bl	402c20 <dcgettext@plt>
  40bd58:	bl	403ba8 <wcrtomb@plt+0xe68>
  40bd5c:	mov	x0, x21
  40bd60:	bl	412e20 <wcrtomb@plt+0x100e0>
  40bd64:	tst	w0, #0xff
  40bd68:	b.ne	40beb4 <wcrtomb@plt+0x9174>  // b.any
  40bd6c:	nop
  40bd70:	ldr	w1, [x19, #64]
  40bd74:	and	w1, w1, #0x4
  40bd78:	cbnz	w1, 40bc28 <wcrtomb@plt+0x8ee8>
  40bd7c:	cmp	w24, #0x0
  40bd80:	mov	x3, x28
  40bd84:	csel	x23, x23, xzr, ne  // ne = any
  40bd88:	sub	x4, x22, x28
  40bd8c:	mov	x1, x25
  40bd90:	mov	x5, x23
  40bd94:	mov	x2, x22
  40bd98:	mov	x0, x19
  40bd9c:	bl	428820 <_obstack_memory_used@@Base+0xfb10>
  40bda0:	mov	w1, w0
  40bda4:	mvn	w0, w1
  40bda8:	ldp	x19, x20, [sp, #16]
  40bdac:	lsr	w0, w0, #31
  40bdb0:	ldp	x21, x22, [sp, #32]
  40bdb4:	ldp	x23, x24, [sp, #48]
  40bdb8:	ldp	x25, x26, [sp, #64]
  40bdbc:	ldp	x27, x28, [sp, #80]
  40bdc0:	ldp	x29, x30, [sp], #128
  40bdc4:	ret
  40bdc8:	ldr	x0, [x19, #80]
  40bdcc:	cbz	x0, 40bde0 <wcrtomb@plt+0x90a0>
  40bdd0:	bl	412e28 <wcrtomb@plt+0x100e8>
  40bdd4:	ldr	x0, [x19, #80]
  40bdd8:	bl	402ae0 <free@plt>
  40bddc:	str	xzr, [x19, #80]
  40bde0:	mov	x0, x19
  40bde4:	bl	4283a0 <_obstack_memory_used@@Base+0xf690>
  40bde8:	mov	w1, w24
  40bdec:	mov	x0, x19
  40bdf0:	bl	40b790 <wcrtomb@plt+0x8a50>
  40bdf4:	b	40bb24 <wcrtomb@plt+0x8de4>
  40bdf8:	cbnz	w24, 40bd5c <wcrtomb@plt+0x901c>
  40bdfc:	ldr	w0, [x19, #64]
  40be00:	add	x26, x25, x22
  40be04:	tbz	w0, #2, 40bd5c <wcrtomb@plt+0x901c>
  40be08:	mov	x2, x26
  40be0c:	mov	x0, x21
  40be10:	add	x5, sp, #0x7f
  40be14:	mov	x1, x25
  40be18:	mov	x4, #0x0                   	// #0
  40be1c:	mov	w3, #0x1                   	// #1
  40be20:	strb	wzr, [sp, #127]
  40be24:	bl	412e08 <wcrtomb@plt+0x100c8>
  40be28:	cbz	x0, 40be4c <wcrtomb@plt+0x910c>
  40be2c:	ldr	w0, [x19, #64]
  40be30:	and	w1, w0, #0x4
  40be34:	tbz	w0, #2, 40bd7c <wcrtomb@plt+0x903c>
  40be38:	ldrb	w2, [sp, #127]
  40be3c:	mov	w0, #0x1                   	// #1
  40be40:	cbz	w2, 40bbc4 <wcrtomb@plt+0x8e84>
  40be44:	cbnz	w1, 40bc28 <wcrtomb@plt+0x8ee8>
  40be48:	b	40bd7c <wcrtomb@plt+0x903c>
  40be4c:	mov	w0, #0x0                   	// #0
  40be50:	ldp	x19, x20, [sp, #16]
  40be54:	ldp	x21, x22, [sp, #32]
  40be58:	ldp	x23, x24, [sp, #48]
  40be5c:	ldp	x25, x26, [sp, #64]
  40be60:	ldp	x27, x28, [sp, #80]
  40be64:	ldp	x29, x30, [sp], #128
  40be68:	ret
  40be6c:	ldr	w0, [x19, #64]
  40be70:	tbz	w0, #2, 40be9c <wcrtomb@plt+0x915c>
  40be74:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40be78:	sub	x2, x22, x28
  40be7c:	add	x0, x25, x28
  40be80:	ldrb	w1, [x1, #1136]
  40be84:	bl	402bb0 <memchr@plt>
  40be88:	sub	x28, x0, x25
  40be8c:	cmp	x0, #0x0
  40be90:	csel	x28, x28, x22, ne  // ne = any
  40be94:	cbnz	w24, 40bb80 <wcrtomb@plt+0x8e40>
  40be98:	b	40bbc0 <wcrtomb@plt+0x8e80>
  40be9c:	mov	x28, x22
  40bea0:	cbnz	w24, 40bb80 <wcrtomb@plt+0x8e40>
  40bea4:	b	40bbc0 <wcrtomb@plt+0x8e80>
  40bea8:	mov	x4, x22
  40beac:	mov	x3, #0x0                   	// #0
  40beb0:	b	40bd8c <wcrtomb@plt+0x904c>
  40beb4:	mov	x0, x21
  40beb8:	add	x5, sp, #0x7f
  40bebc:	add	x2, x25, x22
  40bec0:	mov	x1, x25
  40bec4:	mov	x4, #0x0                   	// #0
  40bec8:	mov	w3, #0x1                   	// #1
  40becc:	strb	wzr, [sp, #127]
  40bed0:	bl	412e08 <wcrtomb@plt+0x100c8>
  40bed4:	cbz	x0, 40be4c <wcrtomb@plt+0x910c>
  40bed8:	ldr	w0, [x19, #64]
  40bedc:	and	w1, w0, #0x4
  40bee0:	cbz	w24, 40be30 <wcrtomb@plt+0x90f0>
  40bee4:	cbnz	w1, 40bc28 <wcrtomb@plt+0x8ee8>
  40bee8:	b	40bd7c <wcrtomb@plt+0x903c>
  40beec:	ldr	x2, [x23]
  40bef0:	add	x0, x0, #0x1
  40bef4:	cmp	x2, x0
  40bef8:	b.hi	40bd08 <wcrtomb@plt+0x8fc8>  // b.pmore
  40befc:	b	40bda4 <wcrtomb@plt+0x9064>
  40bf00:	mov	x1, #0x8                   	// #8
  40bf04:	mov	x0, #0x1                   	// #1
  40bf08:	bl	418730 <wcrtomb@plt+0x159f0>
  40bf0c:	str	x0, [x23, #8]
  40bf10:	mov	x1, #0x8                   	// #8
  40bf14:	mov	x0, #0x1                   	// #1
  40bf18:	bl	418730 <wcrtomb@plt+0x159f0>
  40bf1c:	str	x0, [x23, #16]
  40bf20:	mov	x1, #0x1                   	// #1
  40bf24:	str	x1, [x23]
  40bf28:	ldr	x4, [x23, #8]
  40bf2c:	b	40bb8c <wcrtomb@plt+0x8e4c>
  40bf30:	cbnz	w0, 40bf5c <wcrtomb@plt+0x921c>
  40bf34:	mov	x4, x22
  40bf38:	mov	x3, #0x0                   	// #0
  40bf3c:	mov	x23, #0x0                   	// #0
  40bf40:	b	40bd8c <wcrtomb@plt+0x904c>
  40bf44:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bf48:	add	x1, x1, #0x20
  40bf4c:	mov	w2, #0x5                   	// #5
  40bf50:	mov	x0, #0x0                   	// #0
  40bf54:	bl	402c20 <dcgettext@plt>
  40bf58:	bl	40c380 <wcrtomb@plt+0x9640>
  40bf5c:	ldr	x21, [x19, #80]
  40bf60:	b	40be08 <wcrtomb@plt+0x90c8>
  40bf64:	nop
  40bf68:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bf6c:	ldr	x0, [x0, #1880]
  40bf70:	cbz	x0, 40bf78 <wcrtomb@plt+0x9238>
  40bf74:	b	402cd0 <unlink@plt>
  40bf78:	ret
  40bf7c:	nop
  40bf80:	stp	x29, x30, [sp, #-32]!
  40bf84:	mov	x29, sp
  40bf88:	str	x19, [sp, #16]
  40bf8c:	cbz	w0, 40bfc4 <wcrtomb@plt+0x9284>
  40bf90:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bf94:	mov	w2, #0x5                   	// #5
  40bf98:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bf9c:	add	x1, x1, #0x98
  40bfa0:	ldr	x19, [x0, #1288]
  40bfa4:	mov	x0, #0x0                   	// #0
  40bfa8:	bl	402c20 <dcgettext@plt>
  40bfac:	mov	x2, x0
  40bfb0:	mov	x0, x19
  40bfb4:	mov	w1, #0x1                   	// #1
  40bfb8:	ldr	x19, [sp, #16]
  40bfbc:	ldp	x29, x30, [sp], #32
  40bfc0:	b	402a90 <__fprintf_chk@plt>
  40bfc4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40bfc8:	mov	w2, #0x5                   	// #5
  40bfcc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bfd0:	add	x1, x1, #0x98
  40bfd4:	ldr	x19, [x0, #1312]
  40bfd8:	mov	x0, #0x0                   	// #0
  40bfdc:	bl	402c20 <dcgettext@plt>
  40bfe0:	mov	x2, x0
  40bfe4:	mov	w1, #0x1                   	// #1
  40bfe8:	mov	x0, x19
  40bfec:	bl	402a90 <__fprintf_chk@plt>
  40bff0:	mov	w2, #0x5                   	// #5
  40bff4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40bff8:	mov	x0, #0x0                   	// #0
  40bffc:	add	x1, x1, #0x118
  40c000:	bl	402c20 <dcgettext@plt>
  40c004:	mov	x2, x0
  40c008:	mov	x0, x19
  40c00c:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c010:	ldr	x19, [sp, #16]
  40c014:	add	x3, x3, #0x138
  40c018:	ldp	x29, x30, [sp], #32
  40c01c:	mov	w1, #0x1                   	// #1
  40c020:	b	402a90 <__fprintf_chk@plt>
  40c024:	nop
  40c028:	stp	x29, x30, [sp, #-32]!
  40c02c:	mov	x29, sp
  40c030:	stp	x19, x20, [sp, #16]
  40c034:	mov	w20, w0
  40c038:	cbz	w0, 40c2c8 <wcrtomb@plt+0x9588>
  40c03c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c040:	ldr	x19, [x0, #1288]
  40c044:	mov	w2, #0x5                   	// #5
  40c048:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c04c:	mov	x0, #0x0                   	// #0
  40c050:	add	x1, x1, #0x148
  40c054:	bl	402c20 <dcgettext@plt>
  40c058:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c05c:	mov	x2, x0
  40c060:	mov	w1, #0x1                   	// #1
  40c064:	mov	x0, x19
  40c068:	ldr	x3, [x3, #1960]
  40c06c:	bl	402a90 <__fprintf_chk@plt>
  40c070:	mov	w2, #0x5                   	// #5
  40c074:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c078:	mov	x0, #0x0                   	// #0
  40c07c:	add	x1, x1, #0x198
  40c080:	bl	402c20 <dcgettext@plt>
  40c084:	mov	x2, x0
  40c088:	mov	w1, #0x1                   	// #1
  40c08c:	mov	x0, x19
  40c090:	bl	402a90 <__fprintf_chk@plt>
  40c094:	mov	w2, #0x5                   	// #5
  40c098:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c09c:	mov	x0, #0x0                   	// #0
  40c0a0:	add	x1, x1, #0x1f0
  40c0a4:	bl	402c20 <dcgettext@plt>
  40c0a8:	mov	x2, x0
  40c0ac:	mov	w1, #0x1                   	// #1
  40c0b0:	mov	x0, x19
  40c0b4:	bl	402a90 <__fprintf_chk@plt>
  40c0b8:	mov	w2, #0x5                   	// #5
  40c0bc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c0c0:	mov	x0, #0x0                   	// #0
  40c0c4:	add	x1, x1, #0x230
  40c0c8:	bl	402c20 <dcgettext@plt>
  40c0cc:	mov	x2, x0
  40c0d0:	mov	w1, #0x1                   	// #1
  40c0d4:	mov	x0, x19
  40c0d8:	bl	402a90 <__fprintf_chk@plt>
  40c0dc:	mov	w2, #0x5                   	// #5
  40c0e0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c0e4:	mov	x0, #0x0                   	// #0
  40c0e8:	add	x1, x1, #0x298
  40c0ec:	bl	402c20 <dcgettext@plt>
  40c0f0:	mov	x2, x0
  40c0f4:	mov	w1, #0x1                   	// #1
  40c0f8:	mov	x0, x19
  40c0fc:	bl	402a90 <__fprintf_chk@plt>
  40c100:	mov	w2, #0x5                   	// #5
  40c104:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c108:	mov	x0, #0x0                   	// #0
  40c10c:	add	x1, x1, #0x310
  40c110:	bl	402c20 <dcgettext@plt>
  40c114:	mov	x2, x0
  40c118:	mov	w1, #0x1                   	// #1
  40c11c:	mov	x0, x19
  40c120:	bl	402a90 <__fprintf_chk@plt>
  40c124:	mov	w2, #0x5                   	// #5
  40c128:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c12c:	mov	x0, #0x0                   	// #0
  40c130:	add	x1, x1, #0x360
  40c134:	bl	402c20 <dcgettext@plt>
  40c138:	mov	x2, x0
  40c13c:	mov	w1, #0x1                   	// #1
  40c140:	mov	x0, x19
  40c144:	bl	402a90 <__fprintf_chk@plt>
  40c148:	mov	w2, #0x5                   	// #5
  40c14c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c150:	mov	x0, #0x0                   	// #0
  40c154:	add	x1, x1, #0x3d0
  40c158:	bl	402c20 <dcgettext@plt>
  40c15c:	mov	x2, x0
  40c160:	mov	w1, #0x1                   	// #1
  40c164:	mov	x0, x19
  40c168:	bl	402a90 <__fprintf_chk@plt>
  40c16c:	mov	w2, #0x5                   	// #5
  40c170:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c174:	mov	x0, #0x0                   	// #0
  40c178:	add	x1, x1, #0x438
  40c17c:	bl	402c20 <dcgettext@plt>
  40c180:	mov	x2, x0
  40c184:	mov	w1, #0x1                   	// #1
  40c188:	mov	x0, x19
  40c18c:	bl	402a90 <__fprintf_chk@plt>
  40c190:	mov	w2, #0x5                   	// #5
  40c194:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c198:	mov	x0, #0x0                   	// #0
  40c19c:	add	x1, x1, #0x470
  40c1a0:	bl	402c20 <dcgettext@plt>
  40c1a4:	mov	x2, x0
  40c1a8:	mov	w1, #0x1                   	// #1
  40c1ac:	mov	x0, x19
  40c1b0:	bl	402a90 <__fprintf_chk@plt>
  40c1b4:	mov	w2, #0x5                   	// #5
  40c1b8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c1bc:	mov	x0, #0x0                   	// #0
  40c1c0:	add	x1, x1, #0x500
  40c1c4:	bl	402c20 <dcgettext@plt>
  40c1c8:	mov	x2, x0
  40c1cc:	mov	w1, #0x1                   	// #1
  40c1d0:	mov	x0, x19
  40c1d4:	bl	402a90 <__fprintf_chk@plt>
  40c1d8:	mov	w2, #0x5                   	// #5
  40c1dc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c1e0:	mov	x0, #0x0                   	// #0
  40c1e4:	add	x1, x1, #0x580
  40c1e8:	bl	402c20 <dcgettext@plt>
  40c1ec:	mov	x2, x0
  40c1f0:	mov	w1, #0x1                   	// #1
  40c1f4:	mov	x0, x19
  40c1f8:	bl	402a90 <__fprintf_chk@plt>
  40c1fc:	mov	w2, #0x5                   	// #5
  40c200:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c204:	mov	x0, #0x0                   	// #0
  40c208:	add	x1, x1, #0x5d8
  40c20c:	bl	402c20 <dcgettext@plt>
  40c210:	mov	x2, x0
  40c214:	mov	w1, #0x1                   	// #1
  40c218:	mov	x0, x19
  40c21c:	bl	402a90 <__fprintf_chk@plt>
  40c220:	mov	w2, #0x5                   	// #5
  40c224:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c228:	mov	x0, #0x0                   	// #0
  40c22c:	add	x1, x1, #0x668
  40c230:	bl	402c20 <dcgettext@plt>
  40c234:	mov	x2, x0
  40c238:	mov	w1, #0x1                   	// #1
  40c23c:	mov	x0, x19
  40c240:	bl	402a90 <__fprintf_chk@plt>
  40c244:	mov	w2, #0x5                   	// #5
  40c248:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c24c:	mov	x0, #0x0                   	// #0
  40c250:	add	x1, x1, #0x6b0
  40c254:	bl	402c20 <dcgettext@plt>
  40c258:	mov	x2, x0
  40c25c:	mov	w1, #0x1                   	// #1
  40c260:	mov	x0, x19
  40c264:	bl	402a90 <__fprintf_chk@plt>
  40c268:	mov	w2, #0x5                   	// #5
  40c26c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c270:	mov	x0, #0x0                   	// #0
  40c274:	add	x1, x1, #0x6e0
  40c278:	bl	402c20 <dcgettext@plt>
  40c27c:	mov	x2, x0
  40c280:	mov	w1, #0x1                   	// #1
  40c284:	mov	x0, x19
  40c288:	bl	402a90 <__fprintf_chk@plt>
  40c28c:	mov	w2, #0x5                   	// #5
  40c290:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c294:	mov	x0, #0x0                   	// #0
  40c298:	add	x1, x1, #0x718
  40c29c:	bl	402c20 <dcgettext@plt>
  40c2a0:	mov	x2, x0
  40c2a4:	mov	w1, #0x1                   	// #1
  40c2a8:	mov	x0, x19
  40c2ac:	bl	402a90 <__fprintf_chk@plt>
  40c2b0:	mov	w0, w20
  40c2b4:	bl	40bf80 <wcrtomb@plt+0x9240>
  40c2b8:	mov	x0, #0x0                   	// #0
  40c2bc:	bl	40ca58 <wcrtomb@plt+0x9d18>
  40c2c0:	mov	w0, w20
  40c2c4:	bl	4026c0 <exit@plt>
  40c2c8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c2cc:	ldr	x19, [x0, #1312]
  40c2d0:	b	40c044 <wcrtomb@plt+0x9304>
  40c2d4:	nop
  40c2d8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c2dc:	str	x0, [x1, #1880]
  40c2e0:	ret
  40c2e4:	nop
  40c2e8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c2ec:	str	xzr, [x0, #1880]
  40c2f0:	ret
  40c2f4:	nop
  40c2f8:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c2fc:	ldr	x1, [x1, #1928]
  40c300:	cbnz	x1, 40c310 <wcrtomb@plt+0x95d0>
  40c304:	b	40c324 <wcrtomb@plt+0x95e4>
  40c308:	ldr	x1, [x1, #16]
  40c30c:	cbz	x1, 40c324 <wcrtomb@plt+0x95e4>
  40c310:	ldr	x2, [x1]
  40c314:	cmp	x2, x0
  40c318:	b.ne	40c308 <wcrtomb@plt+0x95c8>  // b.any
  40c31c:	ldr	x0, [x1, #8]
  40c320:	ret
  40c324:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c328:	ldr	x1, [x1, #1320]
  40c32c:	cmp	x1, x0
  40c330:	b.eq	40c368 <wcrtomb@plt+0x9628>  // b.none
  40c334:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c338:	ldr	x1, [x1, #1312]
  40c33c:	cmp	x0, x1
  40c340:	b.eq	40c374 <wcrtomb@plt+0x9634>  // b.none
  40c344:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c348:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c34c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c350:	add	x2, x2, #0xc60
  40c354:	ldr	x3, [x3, #1288]
  40c358:	add	x1, x1, #0xc50
  40c35c:	cmp	x0, x3
  40c360:	csel	x0, x1, x2, ne  // ne = any
  40c364:	ret
  40c368:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c36c:	add	x0, x0, #0xc48
  40c370:	ret
  40c374:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c378:	add	x0, x0, #0xc40
  40c37c:	ret
  40c380:	stp	x29, x30, [sp, #-352]!
  40c384:	adrp	x8, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c388:	mov	x29, sp
  40c38c:	stp	x21, x22, [sp, #32]
  40c390:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c394:	stp	x19, x20, [sp, #16]
  40c398:	mov	x19, x0
  40c39c:	ldr	x0, [x22, #1288]
  40c3a0:	stp	x3, x4, [sp, #312]
  40c3a4:	ldr	x3, [x8, #1960]
  40c3a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c3ac:	stp	x23, x24, [sp, #48]
  40c3b0:	str	q0, [sp, #160]
  40c3b4:	str	q1, [sp, #176]
  40c3b8:	str	q2, [sp, #192]
  40c3bc:	str	q3, [sp, #208]
  40c3c0:	str	q4, [sp, #224]
  40c3c4:	str	q5, [sp, #240]
  40c3c8:	str	q6, [sp, #256]
  40c3cc:	str	q7, [sp, #272]
  40c3d0:	stp	x1, x2, [sp, #296]
  40c3d4:	add	x2, x8, #0xc68
  40c3d8:	mov	w1, #0x1                   	// #1
  40c3dc:	stp	x5, x6, [sp, #328]
  40c3e0:	str	x7, [sp, #344]
  40c3e4:	bl	402a90 <__fprintf_chk@plt>
  40c3e8:	add	x1, sp, #0x120
  40c3ec:	add	x2, sp, #0x160
  40c3f0:	add	x3, sp, #0x160
  40c3f4:	mov	w5, #0xffffffc8            	// #-56
  40c3f8:	mov	w4, #0xffffff80            	// #-128
  40c3fc:	stp	x2, x3, [sp, #96]
  40c400:	mov	x2, x19
  40c404:	str	x1, [sp, #112]
  40c408:	add	x3, sp, #0x40
  40c40c:	stp	w5, w4, [sp, #120]
  40c410:	mov	w1, #0x1                   	// #1
  40c414:	ldp	x6, x7, [sp, #96]
  40c418:	stp	x6, x7, [sp, #64]
  40c41c:	ldp	x4, x5, [sp, #112]
  40c420:	stp	x4, x5, [sp, #80]
  40c424:	ldr	x0, [x22, #1288]
  40c428:	stp	x6, x7, [sp, #128]
  40c42c:	stp	x4, x5, [sp, #144]
  40c430:	bl	402900 <__vfprintf_chk@plt>
  40c434:	ldr	x0, [x22, #1288]
  40c438:	ldp	x1, x2, [x0, #40]
  40c43c:	cmp	x1, x2
  40c440:	b.cs	40c508 <wcrtomb@plt+0x97c8>  // b.hs, b.nlast
  40c444:	add	x2, x1, #0x1
  40c448:	str	x2, [x0, #40]
  40c44c:	mov	w0, #0xa                   	// #10
  40c450:	strb	w0, [x1]
  40c454:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c458:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c45c:	add	x21, x0, #0x788
  40c460:	add	x23, x23, #0xc70
  40c464:	ldr	x19, [x0, #1928]
  40c468:	cbnz	x19, 40c47c <wcrtomb@plt+0x973c>
  40c46c:	b	40c500 <wcrtomb@plt+0x97c0>
  40c470:	ldr	x19, [x19, #16]
  40c474:	str	x19, [x21]
  40c478:	cbz	x19, 40c500 <wcrtomb@plt+0x97c0>
  40c47c:	ldrb	w0, [x19, #24]
  40c480:	tbz	w0, #0, 40c470 <wcrtomb@plt+0x9730>
  40c484:	ldr	x0, [x19]
  40c488:	bl	4027a0 <fclose@plt>
  40c48c:	bl	402cb0 <__errno_location@plt>
  40c490:	mov	x20, x0
  40c494:	ldr	x19, [x21]
  40c498:	ldr	x0, [x19, #8]
  40c49c:	str	wzr, [x20]
  40c4a0:	bl	402cd0 <unlink@plt>
  40c4a4:	ldr	w0, [x20]
  40c4a8:	cbz	w0, 40c470 <wcrtomb@plt+0x9730>
  40c4ac:	mov	x1, x23
  40c4b0:	mov	w2, #0x5                   	// #5
  40c4b4:	ldr	x24, [x22, #1288]
  40c4b8:	mov	x0, #0x0                   	// #0
  40c4bc:	bl	402c20 <dcgettext@plt>
  40c4c0:	mov	x2, x0
  40c4c4:	ldr	w0, [x20]
  40c4c8:	mov	x20, x2
  40c4cc:	ldr	x19, [x19, #8]
  40c4d0:	bl	4029a0 <strerror@plt>
  40c4d4:	mov	x4, x0
  40c4d8:	mov	x3, x19
  40c4dc:	mov	x2, x20
  40c4e0:	mov	x0, x24
  40c4e4:	mov	w1, #0x1                   	// #1
  40c4e8:	bl	402a90 <__fprintf_chk@plt>
  40c4ec:	ldr	x19, [x21]
  40c4f0:	ldr	x19, [x19, #16]
  40c4f4:	str	x19, [x21]
  40c4f8:	cbnz	x19, 40c47c <wcrtomb@plt+0x973c>
  40c4fc:	nop
  40c500:	mov	w0, #0x4                   	// #4
  40c504:	bl	4026c0 <exit@plt>
  40c508:	mov	w1, #0xa                   	// #10
  40c50c:	bl	402a20 <__overflow@plt>
  40c510:	b	40c454 <wcrtomb@plt+0x9714>
  40c514:	nop
  40c518:	stp	x29, x30, [sp, #-48]!
  40c51c:	mov	x29, sp
  40c520:	stp	x19, x20, [sp, #16]
  40c524:	mov	w19, w2
  40c528:	stp	x21, x22, [sp, #32]
  40c52c:	mov	x21, x0
  40c530:	bl	4027d0 <fopen@plt>
  40c534:	mov	x20, x0
  40c538:	cbz	x0, 40c594 <wcrtomb@plt+0x9854>
  40c53c:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c540:	ldr	x19, [x22, #1928]
  40c544:	cbnz	x19, 40c554 <wcrtomb@plt+0x9814>
  40c548:	b	40c5c8 <wcrtomb@plt+0x9888>
  40c54c:	ldr	x19, [x19, #16]
  40c550:	cbz	x19, 40c5c8 <wcrtomb@plt+0x9888>
  40c554:	ldr	x0, [x19]
  40c558:	cmp	x20, x0
  40c55c:	b.ne	40c54c <wcrtomb@plt+0x980c>  // b.any
  40c560:	ldr	x0, [x19, #8]
  40c564:	bl	402ae0 <free@plt>
  40c568:	mov	x0, x21
  40c56c:	bl	4187a8 <wcrtomb@plt+0x15a68>
  40c570:	ldrb	w1, [x19, #24]
  40c574:	stp	x20, x0, [x19]
  40c578:	and	w1, w1, #0xfffffffe
  40c57c:	strb	w1, [x19, #24]
  40c580:	mov	x0, x20
  40c584:	ldp	x19, x20, [sp, #16]
  40c588:	ldp	x21, x22, [sp, #32]
  40c58c:	ldp	x29, x30, [sp], #48
  40c590:	ret
  40c594:	cbz	w19, 40c580 <wcrtomb@plt+0x9840>
  40c598:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c59c:	add	x1, x1, #0xc88
  40c5a0:	mov	w2, #0x5                   	// #5
  40c5a4:	bl	402c20 <dcgettext@plt>
  40c5a8:	mov	x19, x0
  40c5ac:	bl	402cb0 <__errno_location@plt>
  40c5b0:	ldr	w0, [x0]
  40c5b4:	bl	4029a0 <strerror@plt>
  40c5b8:	mov	x2, x0
  40c5bc:	mov	x1, x21
  40c5c0:	mov	x0, x19
  40c5c4:	bl	40c380 <wcrtomb@plt+0x9640>
  40c5c8:	mov	x1, #0x20                  	// #32
  40c5cc:	mov	x0, #0x1                   	// #1
  40c5d0:	bl	418730 <wcrtomb@plt+0x159f0>
  40c5d4:	mov	x19, x0
  40c5d8:	ldr	x0, [x22, #1928]
  40c5dc:	str	x19, [x22, #1928]
  40c5e0:	str	x0, [x19, #16]
  40c5e4:	b	40c568 <wcrtomb@plt+0x9828>
  40c5e8:	stp	x29, x30, [sp, #-48]!
  40c5ec:	mov	x29, sp
  40c5f0:	stp	x19, x20, [sp, #16]
  40c5f4:	mov	w19, w3
  40c5f8:	stp	x21, x22, [sp, #32]
  40c5fc:	mov	x21, x1
  40c600:	mov	x1, x2
  40c604:	bl	4028e0 <fdopen@plt>
  40c608:	mov	x20, x0
  40c60c:	cbz	x0, 40c668 <wcrtomb@plt+0x9928>
  40c610:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c614:	ldr	x19, [x22, #1928]
  40c618:	cbnz	x19, 40c628 <wcrtomb@plt+0x98e8>
  40c61c:	b	40c69c <wcrtomb@plt+0x995c>
  40c620:	ldr	x19, [x19, #16]
  40c624:	cbz	x19, 40c69c <wcrtomb@plt+0x995c>
  40c628:	ldr	x0, [x19]
  40c62c:	cmp	x20, x0
  40c630:	b.ne	40c620 <wcrtomb@plt+0x98e0>  // b.any
  40c634:	ldr	x0, [x19, #8]
  40c638:	bl	402ae0 <free@plt>
  40c63c:	mov	x0, x21
  40c640:	bl	4187a8 <wcrtomb@plt+0x15a68>
  40c644:	ldrb	w1, [x19, #24]
  40c648:	stp	x20, x0, [x19]
  40c64c:	and	w1, w1, #0xfffffffe
  40c650:	strb	w1, [x19, #24]
  40c654:	mov	x0, x20
  40c658:	ldp	x19, x20, [sp, #16]
  40c65c:	ldp	x21, x22, [sp, #32]
  40c660:	ldp	x29, x30, [sp], #48
  40c664:	ret
  40c668:	cbz	w19, 40c654 <wcrtomb@plt+0x9914>
  40c66c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c670:	add	x1, x1, #0xca8
  40c674:	mov	w2, #0x5                   	// #5
  40c678:	bl	402c20 <dcgettext@plt>
  40c67c:	mov	x19, x0
  40c680:	bl	402cb0 <__errno_location@plt>
  40c684:	ldr	w0, [x0]
  40c688:	bl	4029a0 <strerror@plt>
  40c68c:	mov	x2, x0
  40c690:	mov	x1, x21
  40c694:	mov	x0, x19
  40c698:	bl	40c380 <wcrtomb@plt+0x9640>
  40c69c:	mov	x1, #0x20                  	// #32
  40c6a0:	mov	x0, #0x1                   	// #1
  40c6a4:	bl	418730 <wcrtomb@plt+0x159f0>
  40c6a8:	mov	x19, x0
  40c6ac:	ldr	x0, [x22, #1928]
  40c6b0:	str	x19, [x22, #1928]
  40c6b4:	str	x0, [x19, #16]
  40c6b8:	b	40c63c <wcrtomb@plt+0x98fc>
  40c6bc:	nop
  40c6c0:	stp	x29, x30, [sp, #-64]!
  40c6c4:	mov	x29, sp
  40c6c8:	stp	x19, x20, [sp, #16]
  40c6cc:	stp	x21, x22, [sp, #32]
  40c6d0:	mov	x21, x1
  40c6d4:	mov	x22, x2
  40c6d8:	stp	x23, x24, [sp, #48]
  40c6dc:	mov	x24, x3
  40c6e0:	mov	x23, x0
  40c6e4:	mov	x0, x1
  40c6e8:	bl	402690 <strlen@plt>
  40c6ec:	mov	x19, x0
  40c6f0:	mov	x0, x22
  40c6f4:	bl	402690 <strlen@plt>
  40c6f8:	add	x0, x19, x0
  40c6fc:	add	x0, x0, #0x8
  40c700:	bl	418630 <wcrtomb@plt+0x158f0>
  40c704:	mov	x4, x21
  40c708:	mov	x5, x22
  40c70c:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c710:	add	x3, x3, #0xcc8
  40c714:	mov	x2, #0xffffffffffffffff    	// #-1
  40c718:	mov	w1, #0x1                   	// #1
  40c71c:	mov	x20, x0
  40c720:	bl	4026a0 <__sprintf_chk@plt>
  40c724:	mov	w0, #0x3f                  	// #63
  40c728:	bl	402c90 <umask@plt>
  40c72c:	mov	w1, #0x0                   	// #0
  40c730:	mov	w21, w0
  40c734:	mov	x0, x20
  40c738:	bl	4029f0 <mkostemp@plt>
  40c73c:	mov	w19, w0
  40c740:	mov	w0, w21
  40c744:	bl	402c90 <umask@plt>
  40c748:	cmn	w19, #0x1
  40c74c:	b.eq	40c7e0 <wcrtomb@plt+0x9aa0>  // b.none
  40c750:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  40c754:	str	x20, [x23]
  40c758:	mov	w0, w19
  40c75c:	mov	x1, x24
  40c760:	bl	4028e0 <fdopen@plt>
  40c764:	mov	x21, x0
  40c768:	ldr	x19, [x22, #1928]
  40c76c:	cbnz	x19, 40c77c <wcrtomb@plt+0x9a3c>
  40c770:	b	40c7c0 <wcrtomb@plt+0x9a80>
  40c774:	ldr	x19, [x19, #16]
  40c778:	cbz	x19, 40c7c0 <wcrtomb@plt+0x9a80>
  40c77c:	ldr	x0, [x19]
  40c780:	cmp	x21, x0
  40c784:	b.ne	40c774 <wcrtomb@plt+0x9a34>  // b.any
  40c788:	ldr	x0, [x19, #8]
  40c78c:	bl	402ae0 <free@plt>
  40c790:	mov	x0, x20
  40c794:	bl	4187a8 <wcrtomb@plt+0x15a68>
  40c798:	ldrb	w1, [x19, #24]
  40c79c:	ldp	x23, x24, [sp, #48]
  40c7a0:	and	w1, w1, #0xfffffffe
  40c7a4:	stp	x21, x0, [x19]
  40c7a8:	mov	x0, x21
  40c7ac:	strb	w1, [x19, #24]
  40c7b0:	ldp	x19, x20, [sp, #16]
  40c7b4:	ldp	x21, x22, [sp, #32]
  40c7b8:	ldp	x29, x30, [sp], #64
  40c7bc:	ret
  40c7c0:	mov	x1, #0x20                  	// #32
  40c7c4:	mov	x0, #0x1                   	// #1
  40c7c8:	bl	418730 <wcrtomb@plt+0x159f0>
  40c7cc:	mov	x19, x0
  40c7d0:	ldr	x0, [x22, #1928]
  40c7d4:	str	x19, [x22, #1928]
  40c7d8:	str	x0, [x19, #16]
  40c7dc:	b	40c790 <wcrtomb@plt+0x9a50>
  40c7e0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  40c7e4:	add	x1, x1, #0xd60
  40c7e8:	mov	w2, #0x5                   	// #5
  40c7ec:	mov	x0, #0x0                   	// #0
  40c7f0:	bl	402c20 <dcgettext@plt>
  40c7f4:	mov	x19, x0
  40c7f8:	bl	402cb0 <__errno_location@plt>
  40c7fc:	ldr	w0, [x0]
  40c800:	bl	4029a0 <strerror@plt>
  40c804:	mov	x2, x0
  40c808:	mov	x1, x20
  40c80c:	mov	x0, x19
  40c810:	bl	40c380 <wcrtomb@plt+0x9640>
  40c814:	nop
  40c818:	stp	x29, x30, [sp, #-48]!
  40c81c:	mov	x29, sp
  40c820:	stp	x19, x20, [sp, #16]
  40c824:	mov	x20, x1
  40c828:	mov	x19, x3
  40c82c:	stp	x21, x22, [sp, #32]
  40c830:	mov	x22, x0
  40c834:	mov	x21, x2
  40c838:	mov	x0, x3
  40c83c:	bl	402b90 <clearerr_unlocked@plt>
  40c840:	cbz	x20, 40c860 <wcrtomb@plt+0x9b20>
  40c844:	mov	x1, x20
  40c848:	mov	x0, x22
  40c84c:	mov	x3, x19
  40c850:	mov	x2, x21
  40c854:	bl	402680 <fwrite_unlocked@plt>
  40c858:	cmp	x21, x0
  40c85c:	b.ne	40c870 <wcrtomb@plt+0x9b30>  // b.any
  40c860:	ldp	x19, x20, [sp, #16]
  40c864:	ldp	x21, x22, [sp, #32]
  40c868:	ldp	x29, x30, [sp], #48
  40c86c:	ret
  40c870:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c874:	add	x1, x1, #0xd00
  40c878:	mov	x3, x21
  40c87c:	mov	w4, #0x5                   	// #5
  40c880:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c884:	mov	x0, #0x0                   	// #0
  40c888:	add	x2, x2, #0xcd8
  40c88c:	bl	402b70 <dcngettext@plt>
  40c890:	mov	x1, x0
  40c894:	mov	x0, x19
  40c898:	mov	x19, x1
  40c89c:	bl	40c2f8 <wcrtomb@plt+0x95b8>
  40c8a0:	mov	x20, x0
  40c8a4:	bl	402cb0 <__errno_location@plt>
  40c8a8:	ldr	w0, [x0]
  40c8ac:	bl	4029a0 <strerror@plt>
  40c8b0:	mov	x3, x0
  40c8b4:	mov	x2, x20
  40c8b8:	mov	x1, x21
  40c8bc:	mov	x0, x19
  40c8c0:	bl	40c380 <wcrtomb@plt+0x9640>
  40c8c4:	nop
  40c8c8:	stp	x29, x30, [sp, #-48]!
  40c8cc:	mov	x29, sp
  40c8d0:	stp	x19, x20, [sp, #16]
  40c8d4:	mov	x20, x3
  40c8d8:	mov	x19, x2
  40c8dc:	stp	x21, x22, [sp, #32]
  40c8e0:	mov	x22, x0
  40c8e4:	mov	x21, x1
  40c8e8:	mov	x0, x3
  40c8ec:	bl	402b90 <clearerr_unlocked@plt>
  40c8f0:	cbz	x21, 40c918 <wcrtomb@plt+0x9bd8>
  40c8f4:	mov	x2, x19
  40c8f8:	mov	x1, x21
  40c8fc:	mov	x0, x22
  40c900:	mov	x3, x20
  40c904:	bl	402a50 <fread_unlocked@plt>
  40c908:	mov	x19, x0
  40c90c:	cbnz	x0, 40c918 <wcrtomb@plt+0x9bd8>
  40c910:	ldr	w1, [x20]
  40c914:	tbnz	w1, #5, 40c92c <wcrtomb@plt+0x9bec>
  40c918:	mov	x0, x19
  40c91c:	ldp	x19, x20, [sp, #16]
  40c920:	ldp	x21, x22, [sp, #32]
  40c924:	ldp	x29, x30, [sp], #48
  40c928:	ret
  40c92c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c930:	add	x1, x1, #0xd28
  40c934:	mov	w2, #0x5                   	// #5
  40c938:	bl	402c20 <dcgettext@plt>
  40c93c:	mov	x19, x0
  40c940:	mov	x0, x20
  40c944:	bl	40c2f8 <wcrtomb@plt+0x95b8>
  40c948:	mov	x20, x0
  40c94c:	bl	402cb0 <__errno_location@plt>
  40c950:	ldr	w0, [x0]
  40c954:	bl	4029a0 <strerror@plt>
  40c958:	mov	x2, x0
  40c95c:	mov	x1, x20
  40c960:	mov	x0, x19
  40c964:	bl	40c380 <wcrtomb@plt+0x9640>
  40c968:	stp	x29, x30, [sp, #-32]!
  40c96c:	mov	x29, sp
  40c970:	ldr	w4, [x3]
  40c974:	stp	x19, x20, [sp, #16]
  40c978:	mov	x19, x3
  40c97c:	tbz	w4, #5, 40c9c0 <wcrtomb@plt+0x9c80>
  40c980:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40c984:	add	x1, x1, #0xd28
  40c988:	mov	w2, #0x5                   	// #5
  40c98c:	mov	x0, #0x0                   	// #0
  40c990:	bl	402c20 <dcgettext@plt>
  40c994:	mov	x20, x0
  40c998:	mov	x0, x19
  40c99c:	bl	40c2f8 <wcrtomb@plt+0x95b8>
  40c9a0:	mov	x19, x0
  40c9a4:	bl	402cb0 <__errno_location@plt>
  40c9a8:	ldr	w0, [x0]
  40c9ac:	bl	4029a0 <strerror@plt>
  40c9b0:	mov	x2, x0
  40c9b4:	mov	x1, x19
  40c9b8:	mov	x0, x20
  40c9bc:	bl	40c380 <wcrtomb@plt+0x9640>
  40c9c0:	and	w2, w2, #0xff
  40c9c4:	bl	402820 <getdelim@plt>
  40c9c8:	ldr	w1, [x19]
  40c9cc:	tbnz	w1, #5, 40c980 <wcrtomb@plt+0x9c40>
  40c9d0:	ldp	x19, x20, [sp, #16]
  40c9d4:	ldp	x29, x30, [sp], #32
  40c9d8:	ret
  40c9dc:	nop
  40c9e0:	stp	x29, x30, [sp, #-32]!
  40c9e4:	mov	x29, sp
  40c9e8:	str	x19, [sp, #16]
  40c9ec:	mov	x19, x0
  40c9f0:	bl	402760 <__fwriting@plt>
  40c9f4:	cbnz	w0, 40ca04 <wcrtomb@plt+0x9cc4>
  40c9f8:	ldr	x19, [sp, #16]
  40c9fc:	ldp	x29, x30, [sp], #32
  40ca00:	ret
  40ca04:	mov	x0, x19
  40ca08:	bl	402b90 <clearerr_unlocked@plt>
  40ca0c:	mov	x0, x19
  40ca10:	bl	402b60 <fflush_unlocked@plt>
  40ca14:	cmn	w0, #0x1
  40ca18:	b.ne	40c9f8 <wcrtomb@plt+0x9cb8>  // b.any
  40ca1c:	bl	402cb0 <__errno_location@plt>
  40ca20:	ldr	w4, [x0]
  40ca24:	cmp	w4, #0x9
  40ca28:	b.eq	40c9f8 <wcrtomb@plt+0x9cb8>  // b.none
  40ca2c:	mov	x0, x19
  40ca30:	bl	40c2f8 <wcrtomb@plt+0x95b8>
  40ca34:	mov	x19, x0
  40ca38:	mov	w0, w4
  40ca3c:	bl	4029a0 <strerror@plt>
  40ca40:	mov	x2, x0
  40ca44:	mov	x1, x19
  40ca48:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ca4c:	add	x0, x0, #0xd40
  40ca50:	bl	40c380 <wcrtomb@plt+0x9640>
  40ca54:	nop
  40ca58:	stp	x29, x30, [sp, #-96]!
  40ca5c:	mov	x29, sp
  40ca60:	str	x23, [sp, #48]
  40ca64:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  40ca68:	stp	x19, x20, [sp, #16]
  40ca6c:	ldr	x19, [x23, #1928]
  40ca70:	stp	x21, x22, [sp, #32]
  40ca74:	mov	x21, x0
  40ca78:	str	x19, [sp, #80]
  40ca7c:	cbz	x19, 40cb00 <wcrtomb@plt+0x9dc0>
  40ca80:	cbz	x0, 40cb64 <wcrtomb@plt+0x9e24>
  40ca84:	add	x22, sp, #0x40
  40ca88:	b	40ca98 <wcrtomb@plt+0x9d58>
  40ca8c:	mov	x22, x19
  40ca90:	ldr	x19, [x22, #16]
  40ca94:	cbz	x19, 40cafc <wcrtomb@plt+0x9dbc>
  40ca98:	ldr	x20, [x19]
  40ca9c:	cmp	x21, x20
  40caa0:	b.ne	40ca8c <wcrtomb@plt+0x9d4c>  // b.any
  40caa4:	mov	x0, x21
  40caa8:	bl	402760 <__fwriting@plt>
  40caac:	cbz	w0, 40cac8 <wcrtomb@plt+0x9d88>
  40cab0:	mov	x0, x21
  40cab4:	bl	402b90 <clearerr_unlocked@plt>
  40cab8:	mov	x0, x21
  40cabc:	bl	402b60 <fflush_unlocked@plt>
  40cac0:	cmn	w0, #0x1
  40cac4:	b.eq	40cb90 <wcrtomb@plt+0x9e50>  // b.none
  40cac8:	mov	x0, x20
  40cacc:	bl	402b90 <clearerr_unlocked@plt>
  40cad0:	mov	x0, x20
  40cad4:	bl	4027a0 <fclose@plt>
  40cad8:	cmn	w0, #0x1
  40cadc:	b.eq	40cc40 <wcrtomb@plt+0x9f00>  // b.none
  40cae0:	ldp	x0, x1, [x19, #8]
  40cae4:	str	x1, [x22, #16]
  40cae8:	bl	402ae0 <free@plt>
  40caec:	mov	x0, x19
  40caf0:	bl	402ae0 <free@plt>
  40caf4:	ldr	x19, [x22, #16]
  40caf8:	cbnz	x19, 40ca98 <wcrtomb@plt+0x9d58>
  40cafc:	ldr	x19, [sp, #80]
  40cb00:	str	x19, [x23, #1928]
  40cb04:	cbz	x21, 40cba8 <wcrtomb@plt+0x9e68>
  40cb08:	ldp	x19, x20, [sp, #16]
  40cb0c:	ldp	x21, x22, [sp, #32]
  40cb10:	ldr	x23, [sp, #48]
  40cb14:	ldp	x29, x30, [sp], #96
  40cb18:	ret
  40cb1c:	bl	402cb0 <__errno_location@plt>
  40cb20:	ldr	w4, [x0]
  40cb24:	cmp	w4, #0x9
  40cb28:	b.ne	40cba0 <wcrtomb@plt+0x9e60>  // b.any
  40cb2c:	nop
  40cb30:	mov	x0, x20
  40cb34:	bl	402b90 <clearerr_unlocked@plt>
  40cb38:	mov	x0, x20
  40cb3c:	bl	4027a0 <fclose@plt>
  40cb40:	cmn	w0, #0x1
  40cb44:	b.eq	40cc40 <wcrtomb@plt+0x9f00>  // b.none
  40cb48:	ldp	x0, x20, [x19, #8]
  40cb4c:	str	x20, [sp, #80]
  40cb50:	bl	402ae0 <free@plt>
  40cb54:	mov	x0, x19
  40cb58:	bl	402ae0 <free@plt>
  40cb5c:	cbz	x20, 40cafc <wcrtomb@plt+0x9dbc>
  40cb60:	mov	x19, x20
  40cb64:	ldr	x20, [x19]
  40cb68:	mov	x0, x20
  40cb6c:	bl	402760 <__fwriting@plt>
  40cb70:	cbz	w0, 40cb30 <wcrtomb@plt+0x9df0>
  40cb74:	mov	x0, x20
  40cb78:	bl	402b90 <clearerr_unlocked@plt>
  40cb7c:	mov	x0, x20
  40cb80:	bl	402b60 <fflush_unlocked@plt>
  40cb84:	cmn	w0, #0x1
  40cb88:	b.ne	40cb30 <wcrtomb@plt+0x9df0>  // b.any
  40cb8c:	b	40cb1c <wcrtomb@plt+0x9ddc>
  40cb90:	bl	402cb0 <__errno_location@plt>
  40cb94:	ldr	w4, [x0]
  40cb98:	cmp	w4, #0x9
  40cb9c:	b.eq	40cac8 <wcrtomb@plt+0x9d88>  // b.none
  40cba0:	mov	x0, x20
  40cba4:	b	40cc1c <wcrtomb@plt+0x9edc>
  40cba8:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cbac:	ldr	x19, [x20, #1312]
  40cbb0:	mov	x0, x19
  40cbb4:	bl	402760 <__fwriting@plt>
  40cbb8:	cbz	w0, 40cbd4 <wcrtomb@plt+0x9e94>
  40cbbc:	mov	x0, x19
  40cbc0:	bl	402b90 <clearerr_unlocked@plt>
  40cbc4:	mov	x0, x19
  40cbc8:	bl	402b60 <fflush_unlocked@plt>
  40cbcc:	cmn	w0, #0x1
  40cbd0:	b.eq	40cc08 <wcrtomb@plt+0x9ec8>  // b.none
  40cbd4:	mov	x0, x19
  40cbd8:	bl	402b90 <clearerr_unlocked@plt>
  40cbdc:	mov	x0, x19
  40cbe0:	bl	4027a0 <fclose@plt>
  40cbe4:	cmn	w0, #0x1
  40cbe8:	b.ne	40cb08 <wcrtomb@plt+0x9dc8>  // b.any
  40cbec:	ldr	x0, [x23, #1928]
  40cbf0:	cbz	x0, 40cce0 <wcrtomb@plt+0x9fa0>
  40cbf4:	ldr	x1, [x0]
  40cbf8:	cmp	x19, x1
  40cbfc:	b.eq	40cc60 <wcrtomb@plt+0x9f20>  // b.none
  40cc00:	ldr	x0, [x0, #16]
  40cc04:	b	40cbf0 <wcrtomb@plt+0x9eb0>
  40cc08:	bl	402cb0 <__errno_location@plt>
  40cc0c:	ldr	w4, [x0]
  40cc10:	cmp	w4, #0x9
  40cc14:	b.eq	40cbd4 <wcrtomb@plt+0x9e94>  // b.none
  40cc18:	mov	x0, x19
  40cc1c:	bl	40c2f8 <wcrtomb@plt+0x95b8>
  40cc20:	mov	x19, x0
  40cc24:	mov	w0, w4
  40cc28:	bl	4029a0 <strerror@plt>
  40cc2c:	mov	x1, x19
  40cc30:	mov	x2, x0
  40cc34:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cc38:	add	x0, x0, #0xd40
  40cc3c:	bl	40c380 <wcrtomb@plt+0x9640>
  40cc40:	ldr	x0, [x23, #1928]
  40cc44:	cbnz	x0, 40cc54 <wcrtomb@plt+0x9f14>
  40cc48:	b	40cc84 <wcrtomb@plt+0x9f44>
  40cc4c:	ldr	x0, [x0, #16]
  40cc50:	cbz	x0, 40cc84 <wcrtomb@plt+0x9f44>
  40cc54:	ldr	x1, [x0]
  40cc58:	cmp	x20, x1
  40cc5c:	b.ne	40cc4c <wcrtomb@plt+0x9f0c>  // b.any
  40cc60:	ldr	x19, [x0, #8]
  40cc64:	bl	402cb0 <__errno_location@plt>
  40cc68:	ldr	w0, [x0]
  40cc6c:	bl	4029a0 <strerror@plt>
  40cc70:	mov	x2, x0
  40cc74:	mov	x1, x19
  40cc78:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cc7c:	add	x0, x0, #0xd58
  40cc80:	bl	40c380 <wcrtomb@plt+0x9640>
  40cc84:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cc88:	ldr	x0, [x0, #1320]
  40cc8c:	cmp	x20, x0
  40cc90:	b.eq	40ccd4 <wcrtomb@plt+0x9f94>  // b.none
  40cc94:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cc98:	ldr	x0, [x0, #1312]
  40cc9c:	cmp	x20, x0
  40cca0:	b.eq	40ccc8 <wcrtomb@plt+0x9f88>  // b.none
  40cca4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cca8:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ccac:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ccb0:	add	x0, x0, #0xc60
  40ccb4:	ldr	x1, [x1, #1288]
  40ccb8:	add	x19, x19, #0xc50
  40ccbc:	cmp	x20, x1
  40ccc0:	csel	x19, x19, x0, ne  // ne = any
  40ccc4:	b	40cc64 <wcrtomb@plt+0x9f24>
  40ccc8:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cccc:	add	x19, x19, #0xc40
  40ccd0:	b	40cc64 <wcrtomb@plt+0x9f24>
  40ccd4:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ccd8:	add	x19, x19, #0xc48
  40ccdc:	b	40cc64 <wcrtomb@plt+0x9f24>
  40cce0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cce4:	ldr	x0, [x0, #1320]
  40cce8:	cmp	x19, x0
  40ccec:	b.eq	40ccd4 <wcrtomb@plt+0x9f94>  // b.none
  40ccf0:	ldr	x0, [x20, #1312]
  40ccf4:	cmp	x19, x0
  40ccf8:	b.eq	40ccc8 <wcrtomb@plt+0x9f88>  // b.none
  40ccfc:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cd00:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cd04:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cd08:	add	x1, x1, #0xc60
  40cd0c:	ldr	x2, [x2, #1288]
  40cd10:	add	x0, x0, #0xc50
  40cd14:	cmp	x19, x2
  40cd18:	csel	x19, x0, x1, ne  // ne = any
  40cd1c:	b	40cc64 <wcrtomb@plt+0x9f24>
  40cd20:	stp	x29, x30, [sp, #-208]!
  40cd24:	mov	x29, sp
  40cd28:	stp	x19, x20, [sp, #16]
  40cd2c:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  40cd30:	add	x19, x19, #0x788
  40cd34:	stp	x23, x24, [sp, #48]
  40cd38:	mov	x24, x0
  40cd3c:	ldr	w0, [x19, #8]
  40cd40:	stp	x21, x22, [sp, #32]
  40cd44:	str	x25, [sp, #64]
  40cd48:	cbz	w0, 40ced4 <wcrtomb@plt+0xa194>
  40cd4c:	add	x2, sp, #0x50
  40cd50:	mov	x1, x24
  40cd54:	mov	w0, #0x0                   	// #0
  40cd58:	mov	w23, #0xa000                	// #40960
  40cd5c:	bl	402ba0 <__lxstat@plt>
  40cd60:	cmp	w0, #0x0
  40cd64:	cbnz	w0, 40ce68 <wcrtomb@plt+0xa128>
  40cd68:	ldr	w0, [sp, #96]
  40cd6c:	and	w0, w0, w23
  40cd70:	cmp	w0, #0xa, lsl #12
  40cd74:	b.ne	40ce6c <wcrtomb@plt+0xa12c>  // b.any
  40cd78:	ldr	x22, [x19, #24]
  40cd7c:	cmp	x22, x24
  40cd80:	b.ne	40cdb8 <wcrtomb@plt+0xa078>  // b.any
  40cd84:	b	40ce88 <wcrtomb@plt+0xa148>
  40cd88:	ldr	x0, [x19, #16]
  40cd8c:	lsl	w1, w20, #1
  40cd90:	str	w1, [x19, #8]
  40cd94:	sxtw	x1, w1
  40cd98:	bl	418660 <wcrtomb@plt+0x15920>
  40cd9c:	mov	x2, x0
  40cda0:	ldrsw	x1, [x19, #8]
  40cda4:	ldr	x0, [x19, #24]
  40cda8:	str	x2, [x19, #16]
  40cdac:	bl	418660 <wcrtomb@plt+0x15920>
  40cdb0:	mov	x22, x0
  40cdb4:	str	x0, [x19, #24]
  40cdb8:	ldr	w20, [x19, #8]
  40cdbc:	mov	x1, x22
  40cdc0:	mov	x0, x24
  40cdc4:	sxtw	x2, w20
  40cdc8:	bl	402700 <readlink@plt>
  40cdcc:	cmp	w20, w0
  40cdd0:	mov	w21, w0
  40cdd4:	b.eq	40cd88 <wcrtomb@plt+0xa048>  // b.none
  40cdd8:	tbnz	w0, #31, 40cf30 <wcrtomb@plt+0xa1f0>
  40cddc:	strb	wzr, [x22, w0, sxtw]
  40cde0:	ldrb	w0, [x22]
  40cde4:	cmp	w0, #0x2f
  40cde8:	b.eq	40ce4c <wcrtomb@plt+0xa10c>  // b.none
  40cdec:	mov	x0, x24
  40cdf0:	mov	w1, #0x2f                  	// #47
  40cdf4:	bl	4029b0 <strrchr@plt>
  40cdf8:	cbz	x0, 40ce4c <wcrtomb@plt+0xa10c>
  40cdfc:	sub	x0, x0, x24
  40ce00:	add	w25, w0, #0x1
  40ce04:	add	w0, w21, w25
  40ce08:	cmp	w20, w0
  40ce0c:	ldr	x3, [x19, #16]
  40ce10:	b.le	40ce9c <wcrtomb@plt+0xa15c>
  40ce14:	sxtw	x25, w25
  40ce18:	cmp	x24, x3
  40ce1c:	b.eq	40ce34 <wcrtomb@plt+0xa0f4>  // b.none
  40ce20:	mov	x0, x3
  40ce24:	mov	x1, x24
  40ce28:	mov	x2, x25
  40ce2c:	bl	402650 <memcpy@plt>
  40ce30:	mov	x3, x0
  40ce34:	add	w21, w21, #0x1
  40ce38:	mov	x1, x22
  40ce3c:	add	x0, x3, x25
  40ce40:	mov	x22, x3
  40ce44:	sxtw	x2, w21
  40ce48:	bl	402650 <memcpy@plt>
  40ce4c:	mov	x24, x22
  40ce50:	add	x2, sp, #0x50
  40ce54:	mov	x1, x24
  40ce58:	mov	w0, #0x0                   	// #0
  40ce5c:	bl	402ba0 <__lxstat@plt>
  40ce60:	cmp	w0, #0x0
  40ce64:	cbz	w0, 40cd68 <wcrtomb@plt+0xa028>
  40ce68:	b.lt	40cefc <wcrtomb@plt+0xa1bc>  // b.tstop
  40ce6c:	mov	x0, x24
  40ce70:	ldp	x19, x20, [sp, #16]
  40ce74:	ldp	x21, x22, [sp, #32]
  40ce78:	ldp	x23, x24, [sp, #48]
  40ce7c:	ldr	x25, [sp, #64]
  40ce80:	ldp	x29, x30, [sp], #208
  40ce84:	ret
  40ce88:	ldr	x0, [x19, #16]
  40ce8c:	mov	x1, x24
  40ce90:	mov	x24, x0
  40ce94:	bl	402b80 <strcpy@plt>
  40ce98:	b	40cdb8 <wcrtomb@plt+0xa078>
  40ce9c:	add	w1, w0, #0x1
  40cea0:	mov	x0, x3
  40cea4:	str	w1, [x19, #8]
  40cea8:	sxtw	x1, w1
  40ceac:	bl	418660 <wcrtomb@plt+0x15920>
  40ceb0:	ldrsw	x1, [x19, #8]
  40ceb4:	mov	x2, x0
  40ceb8:	ldr	x0, [x19, #24]
  40cebc:	str	x2, [x19, #16]
  40cec0:	bl	418660 <wcrtomb@plt+0x15920>
  40cec4:	mov	x22, x0
  40cec8:	str	x0, [x19, #24]
  40cecc:	ldr	x3, [x19, #16]
  40ced0:	b	40ce14 <wcrtomb@plt+0xa0d4>
  40ced4:	mov	x0, #0x1001                	// #4097
  40ced8:	bl	418708 <wcrtomb@plt+0x159c8>
  40cedc:	mov	x1, x0
  40cee0:	mov	x0, #0x1001                	// #4097
  40cee4:	str	x1, [x19, #16]
  40cee8:	bl	418708 <wcrtomb@plt+0x159c8>
  40ceec:	str	x0, [x19, #24]
  40cef0:	mov	w1, #0x1001                	// #4097
  40cef4:	str	w1, [x19, #8]
  40cef8:	b	40cd4c <wcrtomb@plt+0xa00c>
  40cefc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cf00:	add	x1, x1, #0xd90
  40cf04:	mov	w2, #0x5                   	// #5
  40cf08:	mov	x0, #0x0                   	// #0
  40cf0c:	bl	402c20 <dcgettext@plt>
  40cf10:	mov	x19, x0
  40cf14:	bl	402cb0 <__errno_location@plt>
  40cf18:	ldr	w0, [x0]
  40cf1c:	bl	4029a0 <strerror@plt>
  40cf20:	mov	x2, x0
  40cf24:	mov	x1, x24
  40cf28:	mov	x0, x19
  40cf2c:	bl	40c380 <wcrtomb@plt+0x9640>
  40cf30:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cf34:	add	x1, x1, #0xd70
  40cf38:	b	40cf04 <wcrtomb@plt+0xa1c4>
  40cf3c:	nop
  40cf40:	stp	x29, x30, [sp, #-48]!
  40cf44:	mov	x29, sp
  40cf48:	stp	x19, x20, [sp, #16]
  40cf4c:	mov	x19, x2
  40cf50:	stp	x21, x22, [sp, #32]
  40cf54:	mov	x21, x0
  40cf58:	bl	402b40 <rename@plt>
  40cf5c:	cmn	w0, #0x1
  40cf60:	b.ne	40cfbc <wcrtomb@plt+0xa27c>  // b.any
  40cf64:	bl	402cb0 <__errno_location@plt>
  40cf68:	mov	x20, x0
  40cf6c:	cbz	x19, 40cf8c <wcrtomb@plt+0xa24c>
  40cf70:	ldr	w22, [x20]
  40cf74:	mov	x0, x19
  40cf78:	str	wzr, [x20]
  40cf7c:	bl	402cd0 <unlink@plt>
  40cf80:	ldr	w0, [x20]
  40cf84:	cbnz	w0, 40cfcc <wcrtomb@plt+0xa28c>
  40cf88:	str	w22, [x20]
  40cf8c:	mov	w2, #0x5                   	// #5
  40cf90:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cf94:	mov	x0, #0x0                   	// #0
  40cf98:	add	x1, x1, #0xda8
  40cf9c:	bl	402c20 <dcgettext@plt>
  40cfa0:	mov	x19, x0
  40cfa4:	ldr	w0, [x20]
  40cfa8:	bl	4029a0 <strerror@plt>
  40cfac:	mov	x2, x0
  40cfb0:	mov	x1, x21
  40cfb4:	mov	x0, x19
  40cfb8:	bl	40c380 <wcrtomb@plt+0x9640>
  40cfbc:	ldp	x19, x20, [sp, #16]
  40cfc0:	ldp	x21, x22, [sp, #32]
  40cfc4:	ldp	x29, x30, [sp], #48
  40cfc8:	ret
  40cfcc:	mov	w2, #0x5                   	// #5
  40cfd0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40cfd4:	mov	x0, #0x0                   	// #0
  40cfd8:	add	x1, x1, #0xc70
  40cfdc:	bl	402c20 <dcgettext@plt>
  40cfe0:	mov	x1, x0
  40cfe4:	ldr	w0, [x20]
  40cfe8:	mov	x20, x1
  40cfec:	bl	4029a0 <strerror@plt>
  40cff0:	mov	x2, x0
  40cff4:	mov	x1, x19
  40cff8:	mov	x0, x20
  40cffc:	bl	40c380 <wcrtomb@plt+0x9640>
  40d000:	stp	x29, x30, [sp, #-32]!
  40d004:	mov	x1, #0x18                  	// #24
  40d008:	mov	x0, #0x1                   	// #1
  40d00c:	mov	x29, sp
  40d010:	str	x19, [sp, #16]
  40d014:	bl	418730 <wcrtomb@plt+0x159f0>
  40d018:	mov	x19, x0
  40d01c:	mov	x0, #0x32                  	// #50
  40d020:	bl	418708 <wcrtomb@plt+0x159c8>
  40d024:	mov	x1, x0
  40d028:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40d02c:	str	x1, [x19, #16]
  40d030:	ldr	q0, [x0, #3520]
  40d034:	mov	x0, x19
  40d038:	str	q0, [x19]
  40d03c:	ldr	x19, [sp, #16]
  40d040:	ldp	x29, x30, [sp], #32
  40d044:	ret
  40d048:	ldr	x0, [x0, #16]
  40d04c:	ret
  40d050:	ldr	x0, [x0, #8]
  40d054:	ret
  40d058:	stp	x29, x30, [sp, #-64]!
  40d05c:	mov	x29, sp
  40d060:	stp	x19, x20, [sp, #16]
  40d064:	mov	x20, x2
  40d068:	mov	x19, x0
  40d06c:	stp	x21, x22, [sp, #32]
  40d070:	mov	x21, x1
  40d074:	ldp	x1, x2, [x0]
  40d078:	ldr	x0, [x0, #16]
  40d07c:	sub	x3, x1, x2
  40d080:	cmp	x3, x20
  40d084:	b.cc	40d0b4 <wcrtomb@plt+0xa374>  // b.lo, b.ul, b.last
  40d088:	mov	x1, x21
  40d08c:	add	x0, x0, x2
  40d090:	mov	x2, x20
  40d094:	bl	402650 <memcpy@plt>
  40d098:	ldr	x2, [x19, #8]
  40d09c:	ldp	x21, x22, [sp, #32]
  40d0a0:	add	x2, x2, x20
  40d0a4:	str	x2, [x19, #8]
  40d0a8:	ldp	x19, x20, [sp, #16]
  40d0ac:	ldp	x29, x30, [sp], #64
  40d0b0:	ret
  40d0b4:	str	x23, [sp, #48]
  40d0b8:	add	x23, x2, x20
  40d0bc:	cmp	x1, x23
  40d0c0:	b.cs	40d104 <wcrtomb@plt+0xa3c4>  // b.hs, b.nlast
  40d0c4:	cmp	x23, x1, lsl #1
  40d0c8:	lsl	x22, x1, #1
  40d0cc:	b.cc	40d0f0 <wcrtomb@plt+0xa3b0>  // b.lo, b.ul, b.last
  40d0d0:	tbnz	x23, #63, 40d10c <wcrtomb@plt+0xa3cc>
  40d0d4:	mov	x1, x23
  40d0d8:	bl	418660 <wcrtomb@plt+0x15920>
  40d0dc:	str	x23, [x19]
  40d0e0:	str	x0, [x19, #16]
  40d0e4:	ldr	x2, [x19, #8]
  40d0e8:	ldr	x23, [sp, #48]
  40d0ec:	b	40d088 <wcrtomb@plt+0xa348>
  40d0f0:	mov	x1, x22
  40d0f4:	bl	402930 <realloc@plt>
  40d0f8:	cbz	x0, 40d110 <wcrtomb@plt+0xa3d0>
  40d0fc:	mov	x23, x22
  40d100:	b	40d0dc <wcrtomb@plt+0xa39c>
  40d104:	ldr	x23, [sp, #48]
  40d108:	b	40d088 <wcrtomb@plt+0xa348>
  40d10c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40d110:	ldr	x0, [x19, #16]
  40d114:	b	40d0d0 <wcrtomb@plt+0xa390>
  40d118:	cmn	w1, #0x1
  40d11c:	b.eq	40d168 <wcrtomb@plt+0xa428>  // b.none
  40d120:	stp	x29, x30, [sp, #-48]!
  40d124:	mov	x29, sp
  40d128:	stp	x19, x20, [sp, #16]
  40d12c:	mov	x19, x0
  40d130:	mov	w20, w1
  40d134:	ldp	x0, x1, [x0]
  40d138:	stp	x21, x22, [sp, #32]
  40d13c:	ldr	x2, [x19, #16]
  40d140:	cmp	x0, x1
  40d144:	add	x21, x1, #0x1
  40d148:	b.eq	40d170 <wcrtomb@plt+0xa430>  // b.none
  40d14c:	str	x21, [x19, #8]
  40d150:	add	x0, x2, x1
  40d154:	strb	w20, [x2, x1]
  40d158:	ldp	x19, x20, [sp, #16]
  40d15c:	ldp	x21, x22, [sp, #32]
  40d160:	ldp	x29, x30, [sp], #48
  40d164:	ret
  40d168:	mov	x0, #0x0                   	// #0
  40d16c:	ret
  40d170:	cmp	x0, x21
  40d174:	b.cs	40d14c <wcrtomb@plt+0xa40c>  // b.hs, b.nlast
  40d178:	cmp	x21, x0, lsl #1
  40d17c:	lsl	x22, x0, #1
  40d180:	b.cc	40d1ac <wcrtomb@plt+0xa46c>  // b.lo, b.ul, b.last
  40d184:	tbnz	x21, #63, 40d1c8 <wcrtomb@plt+0xa488>
  40d188:	mov	x0, x2
  40d18c:	mov	x1, x21
  40d190:	bl	418660 <wcrtomb@plt+0x15920>
  40d194:	mov	x2, x0
  40d198:	ldr	x1, [x19, #8]
  40d19c:	str	x21, [x19]
  40d1a0:	str	x2, [x19, #16]
  40d1a4:	add	x21, x1, #0x1
  40d1a8:	b	40d14c <wcrtomb@plt+0xa40c>
  40d1ac:	mov	x0, x2
  40d1b0:	mov	x1, x22
  40d1b4:	bl	402930 <realloc@plt>
  40d1b8:	mov	x2, x0
  40d1bc:	cbz	x0, 40d1cc <wcrtomb@plt+0xa48c>
  40d1c0:	mov	x21, x22
  40d1c4:	b	40d198 <wcrtomb@plt+0xa458>
  40d1c8:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40d1cc:	ldr	x2, [x19, #16]
  40d1d0:	b	40d184 <wcrtomb@plt+0xa444>
  40d1d4:	nop
  40d1d8:	stp	x29, x30, [sp, #-32]!
  40d1dc:	mov	x29, sp
  40d1e0:	str	x19, [sp, #16]
  40d1e4:	mov	x19, x0
  40d1e8:	cbz	x0, 40d1f4 <wcrtomb@plt+0xa4b4>
  40d1ec:	ldr	x0, [x0, #16]
  40d1f0:	bl	402ae0 <free@plt>
  40d1f4:	mov	x0, x19
  40d1f8:	ldr	x19, [sp, #16]
  40d1fc:	ldp	x29, x30, [sp], #32
  40d200:	b	402ae0 <free@plt>
  40d204:	nop
  40d208:	stp	x29, x30, [sp, #-48]!
  40d20c:	mov	x29, sp
  40d210:	stp	x19, x20, [sp, #16]
  40d214:	mov	x20, x2
  40d218:	str	x21, [sp, #32]
  40d21c:	mov	x21, x0
  40d220:	bl	414878 <wcrtomb@plt+0x11b38>
  40d224:	mov	w19, w0
  40d228:	cmn	w0, #0x2
  40d22c:	b.eq	40d290 <wcrtomb@plt+0xa550>  // b.none
  40d230:	cmn	w0, #0x1
  40d234:	b.ne	40d27c <wcrtomb@plt+0xa53c>  // b.any
  40d238:	bl	402cb0 <__errno_location@plt>
  40d23c:	mov	x3, x0
  40d240:	mov	w2, #0x5                   	// #5
  40d244:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40d248:	mov	x0, #0x0                   	// #0
  40d24c:	add	x1, x1, #0xdd0
  40d250:	ldr	w21, [x3]
  40d254:	bl	402c20 <dcgettext@plt>
  40d258:	mov	x2, x0
  40d25c:	mov	x0, x20
  40d260:	mov	x20, x2
  40d264:	bl	417ab0 <wcrtomb@plt+0x14d70>
  40d268:	mov	x3, x0
  40d26c:	mov	x2, x20
  40d270:	mov	w1, w21
  40d274:	mov	w0, #0x0                   	// #0
  40d278:	bl	4026d0 <error@plt>
  40d27c:	mov	w0, w19
  40d280:	ldp	x19, x20, [sp, #16]
  40d284:	ldr	x21, [sp, #32]
  40d288:	ldp	x29, x30, [sp], #48
  40d28c:	ret
  40d290:	bl	402cb0 <__errno_location@plt>
  40d294:	mov	x1, x0
  40d298:	mov	x0, x21
  40d29c:	ldr	w20, [x1]
  40d2a0:	bl	417ab0 <wcrtomb@plt+0x14d70>
  40d2a4:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40d2a8:	mov	x3, x0
  40d2ac:	mov	w1, w20
  40d2b0:	add	x2, x2, #0xd20
  40d2b4:	mov	w0, #0x0                   	// #0
  40d2b8:	bl	4026d0 <error@plt>
  40d2bc:	mov	w0, w19
  40d2c0:	ldp	x19, x20, [sp, #16]
  40d2c4:	ldr	x21, [sp, #32]
  40d2c8:	ldp	x29, x30, [sp], #48
  40d2cc:	ret
  40d2d0:	stp	x29, x30, [sp, #-48]!
  40d2d4:	mov	x29, sp
  40d2d8:	stp	x21, x22, [sp, #32]
  40d2dc:	mov	x21, #0x0                   	// #0
  40d2e0:	ldr	x22, [x0, #144]
  40d2e4:	stp	x19, x20, [sp, #16]
  40d2e8:	mov	x20, x0
  40d2ec:	add	x0, x22, x1, lsl #3
  40d2f0:	ldur	x2, [x0, #-8]
  40d2f4:	sub	x3, x2, #0x105
  40d2f8:	cmp	x2, #0x103
  40d2fc:	b.gt	40d31c <wcrtomb@plt+0xa5dc>
  40d300:	cmp	x2, #0x100
  40d304:	b.gt	40d344 <wcrtomb@plt+0xa604>
  40d308:	add	x0, x21, #0x1
  40d30c:	ldp	x19, x20, [sp, #16]
  40d310:	ldp	x21, x22, [sp, #32]
  40d314:	ldp	x29, x30, [sp], #48
  40d318:	ret
  40d31c:	sub	x19, x1, #0x1
  40d320:	mov	x0, x20
  40d324:	mov	x1, x19
  40d328:	cmp	x3, #0x1
  40d32c:	b.hi	40d308 <wcrtomb@plt+0xa5c8>  // b.pmore
  40d330:	bl	40d2d0 <wcrtomb@plt+0xa590>
  40d334:	add	x2, x0, #0x1
  40d338:	sub	x1, x19, x0
  40d33c:	add	x21, x21, x2
  40d340:	b	40d2ec <wcrtomb@plt+0xa5ac>
  40d344:	sub	x1, x1, #0x1
  40d348:	add	x21, x21, #0x1
  40d34c:	b	40d2ec <wcrtomb@plt+0xa5ac>
  40d350:	ldr	x2, [x0]
  40d354:	mov	w3, #0xffffffff            	// #-1
  40d358:	ldr	x1, [x1]
  40d35c:	cmp	x2, x1
  40d360:	cset	w0, gt
  40d364:	csel	w0, w0, w3, ge  // ge = tcont
  40d368:	ret
  40d36c:	nop
  40d370:	mov	x0, x1
  40d374:	mov	w1, #0x1                   	// #1
  40d378:	strb	w1, [x5]
  40d37c:	ret
  40d380:	stp	x29, x30, [sp, #-32]!
  40d384:	mov	x29, sp
  40d388:	stp	x19, x20, [sp, #16]
  40d38c:	mov	w19, w0
  40d390:	mov	x20, x1
  40d394:	bl	402940 <__ctype_toupper_loc@plt>
  40d398:	add	w1, w19, #0x80
  40d39c:	cmp	w1, #0x17f
  40d3a0:	ldr	x5, [x0]
  40d3a4:	b.hi	40d3ac <wcrtomb@plt+0xa66c>  // b.pmore
  40d3a8:	ldr	w19, [x5, w19, sxtw #2]
  40d3ac:	mov	x2, #0x0                   	// #0
  40d3b0:	mov	x1, #0x1                   	// #1
  40d3b4:	nop
  40d3b8:	ldr	w3, [x5, x2, lsl #2]
  40d3bc:	cmp	w19, w3
  40d3c0:	b.ne	40d3d8 <wcrtomb@plt+0xa698>  // b.any
  40d3c4:	lsr	w0, w2, #6
  40d3c8:	lsl	x3, x1, x2
  40d3cc:	ldr	x4, [x20, x0, lsl #3]
  40d3d0:	orr	x3, x4, x3
  40d3d4:	str	x3, [x20, x0, lsl #3]
  40d3d8:	add	x2, x2, #0x1
  40d3dc:	cmp	x2, #0x100
  40d3e0:	b.ne	40d3b8 <wcrtomb@plt+0xa678>  // b.any
  40d3e4:	ldp	x19, x20, [sp, #16]
  40d3e8:	ldp	x29, x30, [sp], #32
  40d3ec:	ret
  40d3f0:	stp	x29, x30, [sp, #-80]!
  40d3f4:	mov	x29, sp
  40d3f8:	stp	x19, x20, [sp, #16]
  40d3fc:	mov	x19, x2
  40d400:	mov	x20, x0
  40d404:	add	x0, x2, #0x1
  40d408:	stp	x21, x22, [sp, #32]
  40d40c:	stp	x23, x24, [sp, #48]
  40d410:	str	x1, [sp, #72]
  40d414:	bl	418630 <wcrtomb@plt+0x158f0>
  40d418:	ldr	x1, [sp, #72]
  40d41c:	mov	x2, x19
  40d420:	bl	402650 <memcpy@plt>
  40d424:	strb	wzr, [x0, x19]
  40d428:	ldr	x21, [x20]
  40d42c:	mov	x23, x0
  40d430:	cbz	x21, 40d510 <wcrtomb@plt+0xa7d0>
  40d434:	mov	x0, x21
  40d438:	mov	x19, #0x0                   	// #0
  40d43c:	b	40d44c <wcrtomb@plt+0xa70c>
  40d440:	add	x19, x19, #0x1
  40d444:	ldr	x0, [x20, x19, lsl #3]
  40d448:	cbz	x0, 40d478 <wcrtomb@plt+0xa738>
  40d44c:	mov	x1, x23
  40d450:	bl	402c10 <strstr@plt>
  40d454:	cbz	x0, 40d440 <wcrtomb@plt+0xa700>
  40d458:	mov	x0, x23
  40d45c:	bl	402ae0 <free@plt>
  40d460:	mov	x0, x20
  40d464:	ldp	x19, x20, [sp, #16]
  40d468:	ldp	x21, x22, [sp, #32]
  40d46c:	ldp	x23, x24, [sp, #48]
  40d470:	ldp	x29, x30, [sp], #80
  40d474:	ret
  40d478:	mov	x24, x20
  40d47c:	mov	x22, #0x0                   	// #0
  40d480:	b	40d4b0 <wcrtomb@plt+0xa770>
  40d484:	mov	x0, x21
  40d488:	sub	x19, x19, #0x1
  40d48c:	bl	402ae0 <free@plt>
  40d490:	cmp	x19, x22
  40d494:	b.eq	40d4d0 <wcrtomb@plt+0xa790>  // b.none
  40d498:	ldr	x0, [x20, x19, lsl #3]
  40d49c:	str	x0, [x24]
  40d4a0:	str	xzr, [x20, x19, lsl #3]
  40d4a4:	add	x24, x20, x22, lsl #3
  40d4a8:	ldr	x21, [x20, x22, lsl #3]
  40d4ac:	cbz	x21, 40d4d0 <wcrtomb@plt+0xa790>
  40d4b0:	mov	x1, x21
  40d4b4:	mov	x0, x23
  40d4b8:	bl	402c10 <strstr@plt>
  40d4bc:	cbnz	x0, 40d484 <wcrtomb@plt+0xa744>
  40d4c0:	add	x22, x22, #0x1
  40d4c4:	add	x24, x20, x22, lsl #3
  40d4c8:	ldr	x21, [x20, x22, lsl #3]
  40d4cc:	cbnz	x21, 40d4b0 <wcrtomb@plt+0xa770>
  40d4d0:	add	x0, x19, #0x2
  40d4d4:	cmp	xzr, x0, lsr #61
  40d4d8:	lsl	x1, x0, #3
  40d4dc:	cset	x2, ne  // ne = any
  40d4e0:	tbnz	x0, #60, 40d51c <wcrtomb@plt+0xa7dc>
  40d4e4:	cbnz	x2, 40d51c <wcrtomb@plt+0xa7dc>
  40d4e8:	mov	x0, x20
  40d4ec:	bl	418660 <wcrtomb@plt+0x15920>
  40d4f0:	add	x1, x0, x19, lsl #3
  40d4f4:	str	x23, [x0, x19, lsl #3]
  40d4f8:	ldp	x19, x20, [sp, #16]
  40d4fc:	str	xzr, [x1, #8]
  40d500:	ldp	x21, x22, [sp, #32]
  40d504:	ldp	x23, x24, [sp, #48]
  40d508:	ldp	x29, x30, [sp], #80
  40d50c:	ret
  40d510:	mov	x19, #0x0                   	// #0
  40d514:	mov	x1, #0x10                  	// #16
  40d518:	b	40d4e8 <wcrtomb@plt+0xa7a8>
  40d51c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40d520:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40d524:	add	x1, x1, #0xdf0
  40d528:	stp	x29, x30, [sp, #-16]!
  40d52c:	mov	w2, #0x5                   	// #5
  40d530:	mov	x0, #0x0                   	// #0
  40d534:	mov	x29, sp
  40d538:	bl	402c20 <dcgettext@plt>
  40d53c:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  40d540:	stp	x29, x30, [sp, #-48]!
  40d544:	mov	x29, sp
  40d548:	stp	x19, x20, [sp, #16]
  40d54c:	mov	x19, x2
  40d550:	ldr	x2, [x1]
  40d554:	stp	x21, x22, [sp, #32]
  40d558:	mov	x21, x0
  40d55c:	ldr	x3, [x19, #16]
  40d560:	cmp	x3, x2
  40d564:	b.lt	40d580 <wcrtomb@plt+0xa840>  // b.tstop
  40d568:	str	x2, [x19, #8]
  40d56c:	cbnz	x2, 40d618 <wcrtomb@plt+0xa8d8>
  40d570:	ldp	x19, x20, [sp, #16]
  40d574:	ldp	x21, x22, [sp, #32]
  40d578:	ldp	x29, x30, [sp], #48
  40d57c:	ret
  40d580:	ldr	x0, [x19]
  40d584:	mov	x22, x1
  40d588:	bl	402ae0 <free@plt>
  40d58c:	ldr	x2, [x19, #16]
  40d590:	ldr	x3, [x22]
  40d594:	asr	x20, x2, #1
  40d598:	adds	x20, x2, x20
  40d59c:	b.vs	40d634 <wcrtomb@plt+0xa8f4>
  40d5a0:	asr	x0, x20, #63
  40d5a4:	sbfx	x1, x20, #59, #1
  40d5a8:	lsl	x4, x20, #4
  40d5ac:	extr	x0, x0, x20, #60
  40d5b0:	cmp	x1, x0
  40d5b4:	b.ne	40d634 <wcrtomb@plt+0xa8f4>  // b.any
  40d5b8:	cmp	x4, #0x7f
  40d5bc:	mov	x1, #0x80                  	// #128
  40d5c0:	mov	x0, #0x8                   	// #8
  40d5c4:	csel	x1, x4, x1, gt
  40d5c8:	csel	x20, x20, x0, gt
  40d5cc:	str	xzr, [x19, #16]
  40d5d0:	cmp	x3, x20
  40d5d4:	b.le	40d5fc <wcrtomb@plt+0xa8bc>
  40d5d8:	sub	x20, x3, x2
  40d5dc:	adds	x20, x2, x20
  40d5e0:	b.vs	40d640 <wcrtomb@plt+0xa900>
  40d5e4:	asr	x0, x20, #63
  40d5e8:	sbfx	x2, x20, #59, #1
  40d5ec:	lsl	x1, x20, #4
  40d5f0:	extr	x0, x0, x20, #60
  40d5f4:	cmp	x2, x0
  40d5f8:	b.ne	40d640 <wcrtomb@plt+0xa900>  // b.any
  40d5fc:	mov	x0, #0x0                   	// #0
  40d600:	bl	418660 <wcrtomb@plt+0x15920>
  40d604:	str	x20, [x19, #16]
  40d608:	str	x0, [x19]
  40d60c:	ldr	x2, [x22]
  40d610:	str	x2, [x19, #8]
  40d614:	cbz	x2, 40d570 <wcrtomb@plt+0xa830>
  40d618:	ldr	x0, [x19]
  40d61c:	lsl	x2, x2, #4
  40d620:	ldr	x1, [x21]
  40d624:	ldp	x19, x20, [sp, #16]
  40d628:	ldp	x21, x22, [sp, #32]
  40d62c:	ldp	x29, x30, [sp], #48
  40d630:	b	402650 <memcpy@plt>
  40d634:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40d638:	mov	x20, #0x7ffffffffffffff     	// #576460752303423487
  40d63c:	b	40d5cc <wcrtomb@plt+0xa88c>
  40d640:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40d644:	nop
  40d648:	stp	x29, x30, [sp, #-64]!
  40d64c:	mov	x29, sp
  40d650:	ldr	x1, [x0, #304]
  40d654:	str	x23, [sp, #48]
  40d658:	ldr	x23, [x0, #352]
  40d65c:	cmp	x1, x23
  40d660:	b.le	40d7c0 <wcrtomb@plt+0xaa80>
  40d664:	stp	x19, x20, [sp, #16]
  40d668:	mov	x19, x0
  40d66c:	sub	x2, x1, x23
  40d670:	ldr	x0, [x0, #368]
  40d674:	stp	x21, x22, [sp, #32]
  40d678:	cbz	x0, 40d860 <wcrtomb@plt+0xab20>
  40d67c:	add	x3, x23, #0x2
  40d680:	sub	x0, x0, #0x10
  40d684:	asr	x20, x3, #1
  40d688:	adds	x20, x3, x20
  40d68c:	b.vs	40d87c <wcrtomb@plt+0xab3c>
  40d690:	asr	x1, x20, #63
  40d694:	sbfx	x4, x20, #60, #1
  40d698:	lsl	x5, x20, #3
  40d69c:	extr	x1, x1, x20, #61
  40d6a0:	cmp	x4, x1
  40d6a4:	b.ne	40d87c <wcrtomb@plt+0xab3c>  // b.any
  40d6a8:	cmp	x5, #0x7f
  40d6ac:	mov	x1, #0x80                  	// #128
  40d6b0:	mov	x4, #0x10                  	// #16
  40d6b4:	csel	x1, x5, x1, gt
  40d6b8:	csel	x20, x20, x4, gt
  40d6bc:	sub	x4, x20, x3
  40d6c0:	cmp	x2, x4
  40d6c4:	b.le	40d6e8 <wcrtomb@plt+0xa9a8>
  40d6c8:	adds	x20, x3, x2
  40d6cc:	b.vs	40d878 <wcrtomb@plt+0xab38>
  40d6d0:	asr	x2, x20, #63
  40d6d4:	sbfx	x3, x20, #60, #1
  40d6d8:	lsl	x1, x20, #3
  40d6dc:	extr	x2, x2, x20, #61
  40d6e0:	cmp	x3, x2
  40d6e4:	b.ne	40d878 <wcrtomb@plt+0xab38>  // b.any
  40d6e8:	sub	x21, x20, #0x2
  40d6ec:	bl	418660 <wcrtomb@plt+0x15920>
  40d6f0:	stp	xzr, xzr, [x0], #16
  40d6f4:	cmp	xzr, x21, lsr #61
  40d6f8:	str	x21, [x19, #352]
  40d6fc:	lsl	x22, x21, #3
  40d700:	str	x0, [x19, #368]
  40d704:	cset	x1, ne  // ne = any
  40d708:	ldr	x0, [x19, #376]
  40d70c:	tbnz	x21, #60, 40d878 <wcrtomb@plt+0xab38>
  40d710:	cbnz	x1, 40d878 <wcrtomb@plt+0xab38>
  40d714:	mov	x1, x22
  40d718:	bl	418660 <wcrtomb@plt+0x15920>
  40d71c:	str	x0, [x19, #376]
  40d720:	ldr	x0, [x19, #384]
  40d724:	tbnz	x21, #63, 40d878 <wcrtomb@plt+0xab38>
  40d728:	mov	x1, x21
  40d72c:	bl	418660 <wcrtomb@plt+0x15920>
  40d730:	mov	x1, x0
  40d734:	str	x1, [x19, #384]
  40d738:	ldr	x0, [x19, #392]
  40d73c:	mov	x1, x22
  40d740:	bl	418660 <wcrtomb@plt+0x15920>
  40d744:	str	x0, [x19, #392]
  40d748:	ldrb	w1, [x19, #1048]
  40d74c:	cbz	w1, 40d7cc <wcrtomb@plt+0xaa8c>
  40d750:	ldr	x0, [x19, #432]
  40d754:	cmp	x0, #0x0
  40d758:	sub	x1, x0, #0x10
  40d75c:	csel	x0, x1, x0, ne  // ne = any
  40d760:	cmp	xzr, x20, lsr #61
  40d764:	cset	x1, ne  // ne = any
  40d768:	tbnz	x20, #60, 40d878 <wcrtomb@plt+0xab38>
  40d76c:	cbnz	x1, 40d878 <wcrtomb@plt+0xab38>
  40d770:	add	x1, x22, #0x10
  40d774:	bl	418660 <wcrtomb@plt+0x15920>
  40d778:	cbz	x23, 40d870 <wcrtomb@plt+0xab30>
  40d77c:	add	x0, x0, #0x10
  40d780:	str	x0, [x19, #432]
  40d784:	cmp	x21, x23
  40d788:	b.le	40d7b8 <wcrtomb@plt+0xaa78>
  40d78c:	ldrb	w4, [x19, #1048]
  40d790:	lsl	x1, x23, #3
  40d794:	ldp	x3, x2, [x19, #368]
  40d798:	cbz	w4, 40d7d8 <wcrtomb@plt+0xaa98>
  40d79c:	nop
  40d7a0:	str	xzr, [x3, x1]
  40d7a4:	str	xzr, [x2, x1]
  40d7a8:	str	xzr, [x0, x1]
  40d7ac:	add	x1, x1, #0x8
  40d7b0:	cmp	x1, x22
  40d7b4:	b.ne	40d7a0 <wcrtomb@plt+0xaa60>  // b.any
  40d7b8:	ldp	x19, x20, [sp, #16]
  40d7bc:	ldp	x21, x22, [sp, #32]
  40d7c0:	ldr	x23, [sp, #48]
  40d7c4:	ldp	x29, x30, [sp], #64
  40d7c8:	ret
  40d7cc:	cmp	x21, x23
  40d7d0:	b.le	40d7b8 <wcrtomb@plt+0xaa78>
  40d7d4:	ldp	x3, x2, [x19, #368]
  40d7d8:	lsl	x1, x21, #3
  40d7dc:	lsl	x0, x23, #3
  40d7e0:	add	x4, x3, x1
  40d7e4:	add	x22, x2, x0
  40d7e8:	add	x1, x2, x1
  40d7ec:	cmp	x22, x4
  40d7f0:	add	x0, x3, x0
  40d7f4:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
  40d7f8:	b.hi	40d834 <wcrtomb@plt+0xaaf4>  // b.pmore
  40d7fc:	sub	x19, x20, x23
  40d800:	mov	w1, #0x0                   	// #0
  40d804:	sub	x19, x19, #0x2
  40d808:	lsl	x19, x19, #3
  40d80c:	mov	x2, x19
  40d810:	bl	4028d0 <memset@plt>
  40d814:	mov	x2, x19
  40d818:	mov	x0, x22
  40d81c:	ldp	x19, x20, [sp, #16]
  40d820:	mov	w1, #0x0                   	// #0
  40d824:	ldp	x21, x22, [sp, #32]
  40d828:	ldr	x23, [sp, #48]
  40d82c:	ldp	x29, x30, [sp], #64
  40d830:	b	4028d0 <memset@plt>
  40d834:	str	xzr, [x3, x23, lsl #3]
  40d838:	str	xzr, [x2, x23, lsl #3]
  40d83c:	add	x23, x23, #0x1
  40d840:	cmp	x21, x23
  40d844:	b.eq	40d7b8 <wcrtomb@plt+0xaa78>  // b.none
  40d848:	str	xzr, [x3, x23, lsl #3]
  40d84c:	str	xzr, [x2, x23, lsl #3]
  40d850:	add	x23, x23, #0x1
  40d854:	cmp	x21, x23
  40d858:	b.ne	40d834 <wcrtomb@plt+0xaaf4>  // b.any
  40d85c:	b	40d7b8 <wcrtomb@plt+0xaa78>
  40d860:	mov	x1, #0x80                  	// #128
  40d864:	mov	x20, #0x10                  	// #16
  40d868:	mov	x3, #0x0                   	// #0
  40d86c:	b	40d6bc <wcrtomb@plt+0xa97c>
  40d870:	stp	xzr, xzr, [x0]
  40d874:	b	40d77c <wcrtomb@plt+0xaa3c>
  40d878:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40d87c:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40d880:	mov	x20, #0xfffffffffffffff     	// #1152921504606846975
  40d884:	b	40d6bc <wcrtomb@plt+0xa97c>
  40d888:	stp	x29, x30, [sp, #-80]!
  40d88c:	mov	x29, sp
  40d890:	stp	x19, x20, [sp, #16]
  40d894:	mov	x20, x0
  40d898:	stp	x21, x22, [sp, #32]
  40d89c:	ldp	x0, x21, [x2]
  40d8a0:	stp	x23, x24, [sp, #48]
  40d8a4:	mov	x23, x1
  40d8a8:	str	x25, [sp, #64]
  40d8ac:	mov	x25, x2
  40d8b0:	cmp	x21, #0x0
  40d8b4:	b.le	40d95c <wcrtomb@plt+0xac1c>
  40d8b8:	mov	x5, x21
  40d8bc:	mov	x19, #0x0                   	// #0
  40d8c0:	b	40d8d0 <wcrtomb@plt+0xab90>
  40d8c4:	add	x19, x3, #0x1
  40d8c8:	cmp	x5, x19
  40d8cc:	b.le	40d8fc <wcrtomb@plt+0xabbc>
  40d8d0:	add	x3, x19, x5
  40d8d4:	asr	x3, x3, #1
  40d8d8:	lsl	x4, x3, #4
  40d8dc:	add	x6, x0, x4
  40d8e0:	ldr	x4, [x0, x4]
  40d8e4:	cmp	x4, x20
  40d8e8:	b.lt	40d8c4 <wcrtomb@plt+0xab84>  // b.tstop
  40d8ec:	b.eq	40d9e8 <wcrtomb@plt+0xaca8>  // b.none
  40d8f0:	mov	x5, x3
  40d8f4:	cmp	x5, x19
  40d8f8:	b.gt	40d8d0 <wcrtomb@plt+0xab90>
  40d8fc:	ldr	x3, [x25, #16]
  40d900:	mov	x24, x21
  40d904:	cmp	x21, x3
  40d908:	b.ge	40d970 <wcrtomb@plt+0xac30>  // b.tcont
  40d90c:	str	x0, [x25]
  40d910:	lsl	x3, x19, #4
  40d914:	cmp	x21, x19
  40d918:	add	x22, x0, x3
  40d91c:	b.le	40d938 <wcrtomb@plt+0xabf8>
  40d920:	add	x3, x3, #0x10
  40d924:	sub	x2, x21, x19
  40d928:	add	x0, x0, x3
  40d92c:	mov	x1, x22
  40d930:	lsl	x2, x2, #4
  40d934:	bl	402660 <memmove@plt>
  40d938:	stp	x20, x23, [x22]
  40d93c:	add	x24, x24, #0x1
  40d940:	str	x24, [x25, #8]
  40d944:	ldp	x19, x20, [sp, #16]
  40d948:	ldp	x21, x22, [sp, #32]
  40d94c:	ldp	x23, x24, [sp, #48]
  40d950:	ldr	x25, [sp, #64]
  40d954:	ldp	x29, x30, [sp], #80
  40d958:	ret
  40d95c:	ldr	x3, [x2, #16]
  40d960:	mov	x19, #0x0                   	// #0
  40d964:	cmp	x21, x3
  40d968:	b.lt	40da14 <wcrtomb@plt+0xacd4>  // b.tstop
  40d96c:	nop
  40d970:	asr	x22, x3, #1
  40d974:	adds	x22, x3, x22
  40d978:	b.vs	40da24 <wcrtomb@plt+0xace4>
  40d97c:	asr	x1, x22, #63
  40d980:	sbfx	x2, x22, #59, #1
  40d984:	lsl	x4, x22, #4
  40d988:	extr	x1, x1, x22, #60
  40d98c:	cmp	x2, x1
  40d990:	b.ne	40da24 <wcrtomb@plt+0xace4>  // b.any
  40d994:	cmp	x4, #0x7f
  40d998:	mov	x1, #0x80                  	// #128
  40d99c:	mov	x2, #0x8                   	// #8
  40d9a0:	csel	x1, x4, x1, gt
  40d9a4:	csel	x22, x22, x2, gt
  40d9a8:	cbz	x0, 40da0c <wcrtomb@plt+0xaccc>
  40d9ac:	sub	x2, x22, x3
  40d9b0:	cmp	x2, #0x0
  40d9b4:	b.gt	40d9d8 <wcrtomb@plt+0xac98>
  40d9b8:	adds	x22, x3, #0x1
  40d9bc:	b.vs	40da20 <wcrtomb@plt+0xace0>
  40d9c0:	asr	x2, x22, #63
  40d9c4:	sbfx	x3, x22, #59, #1
  40d9c8:	lsl	x1, x22, #4
  40d9cc:	extr	x2, x2, x22, #60
  40d9d0:	cmp	x3, x2
  40d9d4:	b.ne	40da20 <wcrtomb@plt+0xace0>  // b.any
  40d9d8:	bl	418660 <wcrtomb@plt+0x15920>
  40d9dc:	str	x22, [x25, #16]
  40d9e0:	ldr	x24, [x25, #8]
  40d9e4:	b	40d90c <wcrtomb@plt+0xabcc>
  40d9e8:	ldr	w0, [x6, #8]
  40d9ec:	ldp	x19, x20, [sp, #16]
  40d9f0:	orr	w23, w0, w23
  40d9f4:	str	w23, [x6, #8]
  40d9f8:	ldp	x21, x22, [sp, #32]
  40d9fc:	ldp	x23, x24, [sp, #48]
  40da00:	ldr	x25, [sp, #64]
  40da04:	ldp	x29, x30, [sp], #80
  40da08:	ret
  40da0c:	str	xzr, [x25, #16]
  40da10:	b	40d9ac <wcrtomb@plt+0xac6c>
  40da14:	mov	x24, x21
  40da18:	mov	x22, x0
  40da1c:	b	40d938 <wcrtomb@plt+0xabf8>
  40da20:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40da24:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40da28:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
  40da2c:	b	40d9a8 <wcrtomb@plt+0xac68>
  40da30:	stp	x29, x30, [sp, #-80]!
  40da34:	mov	x29, sp
  40da38:	stp	x19, x20, [sp, #16]
  40da3c:	mov	x20, x3
  40da40:	mov	x19, x5
  40da44:	stp	x21, x22, [sp, #32]
  40da48:	mov	x21, x1
  40da4c:	mov	w22, w4
  40da50:	ldr	x3, [x1]
  40da54:	stp	x23, x24, [sp, #48]
  40da58:	mov	x24, x0
  40da5c:	ldr	x1, [x5, #16]
  40da60:	mov	x23, x2
  40da64:	ldr	x0, [x20]
  40da68:	sub	x1, x1, x3
  40da6c:	cmp	x1, x0
  40da70:	b.lt	40db70 <wcrtomb@plt+0xae30>  // b.tstop
  40da74:	str	xzr, [x19, #8]
  40da78:	mov	x5, #0x0                   	// #0
  40da7c:	mov	x7, #0x0                   	// #0
  40da80:	ldr	x10, [x20]
  40da84:	ldr	x9, [x21]
  40da88:	cmp	x7, x9
  40da8c:	b.lt	40dae0 <wcrtomb@plt+0xada0>  // b.tstop
  40da90:	cmp	x5, x10
  40da94:	b.ge	40db5c <wcrtomb@plt+0xae1c>  // b.tcont
  40da98:	ldr	x6, [x23]
  40da9c:	add	x6, x6, x5, lsl #4
  40daa0:	ldr	w8, [x6, #8]
  40daa4:	ands	w8, w22, w8
  40daa8:	b.eq	40dad4 <wcrtomb@plt+0xad94>  // b.none
  40daac:	ldp	x1, x0, [x19]
  40dab0:	ldr	x4, [x6]
  40dab4:	add	x3, x0, #0x1
  40dab8:	lsl	x0, x0, #4
  40dabc:	add	x2, x1, x0
  40dac0:	str	x4, [x1, x0]
  40dac4:	str	x3, [x19, #8]
  40dac8:	ldr	x10, [x20]
  40dacc:	ldr	x9, [x21]
  40dad0:	str	w8, [x2, #8]
  40dad4:	add	x5, x5, #0x1
  40dad8:	cmp	x7, x9
  40dadc:	b.ge	40da90 <wcrtomb@plt+0xad50>  // b.tcont
  40dae0:	ldr	x11, [x24]
  40dae4:	lsl	x6, x7, #4
  40dae8:	cmp	x5, x10
  40daec:	mov	w12, #0x0                   	// #0
  40daf0:	add	x0, x11, x6
  40daf4:	ldr	x11, [x11, x6]
  40daf8:	b.lt	40db30 <wcrtomb@plt+0xadf0>  // b.tstop
  40dafc:	ldp	x9, x6, [x19]
  40db00:	add	x7, x7, #0x1
  40db04:	ldr	w8, [x0, #8]
  40db08:	orr	w8, w8, w12
  40db0c:	add	x1, x6, #0x1
  40db10:	lsl	x6, x6, #4
  40db14:	add	x0, x9, x6
  40db18:	str	x11, [x9, x6]
  40db1c:	str	x1, [x19, #8]
  40db20:	ldr	x10, [x20]
  40db24:	ldr	x9, [x21]
  40db28:	str	w8, [x0, #8]
  40db2c:	b	40da88 <wcrtomb@plt+0xad48>
  40db30:	ldr	x2, [x23]
  40db34:	lsl	x1, x5, #4
  40db38:	add	x6, x2, x1
  40db3c:	ldr	x1, [x2, x1]
  40db40:	cmp	x1, x11
  40db44:	b.lt	40daa0 <wcrtomb@plt+0xad60>  // b.tstop
  40db48:	b.ne	40dafc <wcrtomb@plt+0xadbc>  // b.any
  40db4c:	ldr	w8, [x6, #8]
  40db50:	add	x5, x5, #0x1
  40db54:	and	w12, w22, w8
  40db58:	b	40dafc <wcrtomb@plt+0xadbc>
  40db5c:	ldp	x19, x20, [sp, #16]
  40db60:	ldp	x21, x22, [sp, #32]
  40db64:	ldp	x23, x24, [sp, #48]
  40db68:	ldp	x29, x30, [sp], #80
  40db6c:	ret
  40db70:	ldr	x0, [x5]
  40db74:	str	x25, [sp, #64]
  40db78:	bl	402ae0 <free@plt>
  40db7c:	ldr	x0, [x21]
  40db80:	str	x0, [x19, #16]
  40db84:	ldr	x2, [x20]
  40db88:	asr	x25, x0, #1
  40db8c:	adds	x25, x0, x25
  40db90:	b.vs	40dc08 <wcrtomb@plt+0xaec8>
  40db94:	asr	x1, x25, #63
  40db98:	sbfx	x3, x25, #59, #1
  40db9c:	lsl	x4, x25, #4
  40dba0:	extr	x1, x1, x25, #60
  40dba4:	cmp	x3, x1
  40dba8:	b.ne	40dc08 <wcrtomb@plt+0xaec8>  // b.any
  40dbac:	cmp	x4, #0x7f
  40dbb0:	mov	x1, #0x80                  	// #128
  40dbb4:	mov	x3, #0x8                   	// #8
  40dbb8:	csel	x1, x4, x1, gt
  40dbbc:	csel	x25, x25, x3, gt
  40dbc0:	str	xzr, [x19, #16]
  40dbc4:	sub	x3, x25, x0
  40dbc8:	cmp	x2, x3
  40dbcc:	b.le	40dbf0 <wcrtomb@plt+0xaeb0>
  40dbd0:	adds	x25, x0, x2
  40dbd4:	b.vs	40dc14 <wcrtomb@plt+0xaed4>
  40dbd8:	asr	x0, x25, #63
  40dbdc:	sbfx	x2, x25, #59, #1
  40dbe0:	lsl	x1, x25, #4
  40dbe4:	extr	x0, x0, x25, #60
  40dbe8:	cmp	x2, x0
  40dbec:	b.ne	40dc14 <wcrtomb@plt+0xaed4>  // b.any
  40dbf0:	mov	x0, #0x0                   	// #0
  40dbf4:	bl	418660 <wcrtomb@plt+0x15920>
  40dbf8:	str	x0, [x19]
  40dbfc:	str	x25, [x19, #16]
  40dc00:	ldr	x25, [sp, #64]
  40dc04:	b	40da74 <wcrtomb@plt+0xad34>
  40dc08:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40dc0c:	mov	x25, #0x7ffffffffffffff     	// #576460752303423487
  40dc10:	b	40dbc0 <wcrtomb@plt+0xae80>
  40dc14:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40dc18:	stp	x29, x30, [sp, #-48]!
  40dc1c:	mov	x29, sp
  40dc20:	ldr	x7, [x0, #8]
  40dc24:	stp	x19, x20, [sp, #16]
  40dc28:	mov	x20, x1
  40dc2c:	stp	x21, x22, [sp, #32]
  40dc30:	cmp	x7, #0x0
  40dc34:	mov	x21, x0
  40dc38:	ldr	x0, [x0]
  40dc3c:	b.le	40dca0 <wcrtomb@plt+0xaf60>
  40dc40:	mov	x4, x0
  40dc44:	mov	x19, #0x0                   	// #0
  40dc48:	ldp	x11, x10, [x1]
  40dc4c:	ldp	x9, x8, [x1, #16]
  40dc50:	b	40dc64 <wcrtomb@plt+0xaf24>
  40dc54:	add	x19, x19, #0x1
  40dc58:	add	x4, x4, #0x20
  40dc5c:	cmp	x19, x7
  40dc60:	b.eq	40dca8 <wcrtomb@plt+0xaf68>  // b.none
  40dc64:	ldp	x2, x6, [x4]
  40dc68:	ldp	x3, x5, [x4, #16]
  40dc6c:	eor	x2, x11, x2
  40dc70:	eor	x6, x10, x6
  40dc74:	orr	x2, x2, x6
  40dc78:	eor	x3, x9, x3
  40dc7c:	eor	x5, x8, x5
  40dc80:	orr	x3, x3, x5
  40dc84:	orr	x2, x2, x3
  40dc88:	cbnz	x2, 40dc54 <wcrtomb@plt+0xaf14>
  40dc8c:	mov	x0, x19
  40dc90:	ldp	x19, x20, [sp, #16]
  40dc94:	ldp	x21, x22, [sp, #32]
  40dc98:	ldp	x29, x30, [sp], #48
  40dc9c:	ret
  40dca0:	mov	x19, #0x0                   	// #0
  40dca4:	nop
  40dca8:	ldr	x2, [x21, #16]
  40dcac:	cmp	x2, x7
  40dcb0:	b.le	40dcdc <wcrtomb@plt+0xaf9c>
  40dcb4:	ld1	{v0.16b, v1.16b}, [x20]
  40dcb8:	add	x1, x0, x19, lsl #5
  40dcbc:	add	x7, x7, #0x1
  40dcc0:	stp	x0, x7, [x21]
  40dcc4:	st1	{v0.16b, v1.16b}, [x1]
  40dcc8:	mov	x0, x19
  40dccc:	ldp	x19, x20, [sp, #16]
  40dcd0:	ldp	x21, x22, [sp, #32]
  40dcd4:	ldp	x29, x30, [sp], #48
  40dcd8:	ret
  40dcdc:	asr	x1, x2, #1
  40dce0:	adds	x1, x2, x1
  40dce4:	b.vs	40dd9c <wcrtomb@plt+0xb05c>
  40dce8:	mov	x22, #0xfffffffffffffeeb    	// #-277
  40dcec:	movk	x22, #0x7fff, lsl #48
  40dcf0:	cmp	x1, x22
  40dcf4:	csel	x22, x1, x22, le
  40dcf8:	asr	x3, x22, #63
  40dcfc:	sbfx	x4, x22, #58, #1
  40dd00:	lsl	x1, x22, #5
  40dd04:	extr	x3, x3, x22, #59
  40dd08:	cmp	x4, x3
  40dd0c:	b.ne	40dd9c <wcrtomb@plt+0xb05c>  // b.any
  40dd10:	cmp	x1, #0x7f
  40dd14:	mov	x3, #0x4                   	// #4
  40dd18:	csel	x22, x22, x3, gt
  40dd1c:	mov	x3, #0x80                  	// #128
  40dd20:	csel	x1, x1, x3, gt
  40dd24:	cbz	x0, 40dd90 <wcrtomb@plt+0xb050>
  40dd28:	sub	x3, x22, x2
  40dd2c:	cmp	x3, #0x0
  40dd30:	b.gt	40dd6c <wcrtomb@plt+0xb02c>
  40dd34:	adds	x22, x2, #0x1
  40dd38:	mov	x1, #0xfffffffffffffeeb    	// #-277
  40dd3c:	cset	x2, vs
  40dd40:	movk	x1, #0x7fff, lsl #48
  40dd44:	cmp	x22, x1
  40dd48:	cset	w1, gt
  40dd4c:	orr	w1, w1, w2
  40dd50:	cbnz	w1, 40dd98 <wcrtomb@plt+0xb058>
  40dd54:	asr	x2, x22, #63
  40dd58:	sbfx	x3, x22, #58, #1
  40dd5c:	lsl	x1, x22, #5
  40dd60:	extr	x2, x2, x22, #59
  40dd64:	cmp	x3, x2
  40dd68:	b.ne	40dd98 <wcrtomb@plt+0xb058>  // b.any
  40dd6c:	bl	418660 <wcrtomb@plt+0x15920>
  40dd70:	str	x22, [x21, #16]
  40dd74:	ldr	x7, [x21, #8]
  40dd78:	add	x1, x0, x19, lsl #5
  40dd7c:	ld1	{v0.16b, v1.16b}, [x20]
  40dd80:	add	x7, x7, #0x1
  40dd84:	stp	x0, x7, [x21]
  40dd88:	st1	{v0.16b, v1.16b}, [x1]
  40dd8c:	b	40dcc8 <wcrtomb@plt+0xaf88>
  40dd90:	str	xzr, [x21, #16]
  40dd94:	b	40dd28 <wcrtomb@plt+0xafe8>
  40dd98:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40dd9c:	mov	x22, #0x3ffffffffffffff     	// #288230376151711743
  40dda0:	mov	x1, #0x7fffffffffffffe0    	// #9223372036854775776
  40dda4:	cbnz	x0, 40dd28 <wcrtomb@plt+0xafe8>
  40dda8:	b	40dd90 <wcrtomb@plt+0xb050>
  40ddac:	nop
  40ddb0:	stp	x29, x30, [sp, #-96]!
  40ddb4:	mov	x29, sp
  40ddb8:	stp	x19, x20, [sp, #16]
  40ddbc:	ldr	x20, [x1, #8]
  40ddc0:	stp	x21, x22, [sp, #32]
  40ddc4:	stp	x23, x24, [sp, #48]
  40ddc8:	cmp	x20, #0x0
  40ddcc:	mov	x23, x0
  40ddd0:	stp	x25, x26, [sp, #64]
  40ddd4:	mov	w24, w2
  40ddd8:	mov	x25, x1
  40dddc:	stp	x27, x28, [sp, #80]
  40dde0:	ldr	x8, [x0, #296]
  40dde4:	ldr	x1, [x0, #304]
  40dde8:	b.le	40e140 <wcrtomb@plt+0xb400>
  40ddec:	sub	x5, x20, #0x1
  40ddf0:	cmp	x5, #0x3
  40ddf4:	ldr	x2, [x25]
  40ddf8:	b.ls	40e168 <wcrtomb@plt+0xb428>  // b.plast
  40ddfc:	lsr	x6, x5, #2
  40de00:	mov	x3, x2
  40de04:	movi	v16.4s, #0x0
  40de08:	add	x6, x2, x6, lsl #6
  40de0c:	nop
  40de10:	mov	x4, x3
  40de14:	add	x0, x3, #0x8
  40de18:	add	x3, x3, #0x40
  40de1c:	cmp	x3, x6
  40de20:	ld2	{v2.2d, v3.2d}, [x4], #32
  40de24:	ld4	{v4.4s-v7.4s}, [x0]
  40de28:	ld2	{v0.2d, v1.2d}, [x4]
  40de2c:	uaddw	v2.2d, v2.2d, v4.2s
  40de30:	uaddw2	v0.2d, v0.2d, v4.4s
  40de34:	eor	v0.16b, v0.16b, v2.16b
  40de38:	eor	v16.16b, v16.16b, v0.16b
  40de3c:	b.ne	40de10 <wcrtomb@plt+0xb0d0>  // b.any
  40de40:	movi	v0.4s, #0x0
  40de44:	and	x0, x5, #0xfffffffffffffffc
  40de48:	ext	v0.16b, v16.16b, v0.16b, #8
  40de4c:	eor	v16.16b, v0.16b, v16.16b
  40de50:	mov	x4, v16.d[0]
  40de54:	lsl	x3, x0, #4
  40de58:	add	x5, x0, #0x1
  40de5c:	add	x6, x2, x3
  40de60:	cmp	x20, x5
  40de64:	ldr	x5, [x2, x3]
  40de68:	ldr	w21, [x6, #8]
  40de6c:	add	x21, x21, x5
  40de70:	eor	x21, x21, x4
  40de74:	b.le	40ded8 <wcrtomb@plt+0xb198>
  40de78:	add	x4, x3, #0x10
  40de7c:	add	x5, x0, #0x2
  40de80:	add	x6, x2, x4
  40de84:	cmp	x20, x5
  40de88:	ldr	x5, [x2, x4]
  40de8c:	ldr	w4, [x6, #8]
  40de90:	add	x4, x4, x5
  40de94:	eor	x21, x21, x4
  40de98:	b.le	40ded8 <wcrtomb@plt+0xb198>
  40de9c:	add	x4, x3, #0x20
  40dea0:	add	x0, x0, #0x3
  40dea4:	add	x5, x2, x4
  40dea8:	cmp	x0, x20
  40deac:	ldr	x4, [x2, x4]
  40deb0:	ldr	w0, [x5, #8]
  40deb4:	add	x0, x0, x4
  40deb8:	eor	x21, x21, x0
  40debc:	b.ge	40ded8 <wcrtomb@plt+0xb198>  // b.tcont
  40dec0:	add	x3, x3, #0x30
  40dec4:	add	x0, x2, x3
  40dec8:	ldr	x3, [x2, x3]
  40decc:	ldr	w0, [x0, #8]
  40ded0:	add	x0, x0, x3
  40ded4:	eor	x21, x21, x0
  40ded8:	cmp	x1, #0x0
  40dedc:	mov	x19, #0x0                   	// #0
  40dee0:	b.le	40dfac <wcrtomb@plt+0xb26c>
  40dee4:	mov	x4, x8
  40dee8:	mov	x19, #0x0                   	// #0
  40deec:	b	40df00 <wcrtomb@plt+0xb1c0>
  40def0:	add	x19, x19, #0x1
  40def4:	add	x4, x4, #0x50
  40def8:	cmp	x1, x19
  40defc:	b.le	40dfa0 <wcrtomb@plt+0xb260>
  40df00:	ldr	x3, [x4]
  40df04:	cmp	x3, x21
  40df08:	b.ne	40def0 <wcrtomb@plt+0xb1b0>  // b.any
  40df0c:	ldr	x2, [x4, #16]
  40df10:	cmp	x2, x20
  40df14:	b.ne	40def0 <wcrtomb@plt+0xb1b0>  // b.any
  40df18:	ldrb	w0, [x4, #32]
  40df1c:	cmp	w0, w24
  40df20:	b.ne	40def0 <wcrtomb@plt+0xb1b0>  // b.any
  40df24:	cmp	x20, #0x0
  40df28:	b.le	40e174 <wcrtomb@plt+0xb434>
  40df2c:	ldr	x2, [x25]
  40df30:	mov	x3, #0x0                   	// #0
  40df34:	ldr	x0, [x4, #8]
  40df38:	add	x10, x2, #0x8
  40df3c:	mov	x5, #0x0                   	// #0
  40df40:	add	x9, x0, #0x8
  40df44:	b	40df68 <wcrtomb@plt+0xb228>
  40df48:	ldr	x7, [x2, x3]
  40df4c:	ldr	x6, [x0, x3]
  40df50:	cmp	x7, x6
  40df54:	b.ne	40df78 <wcrtomb@plt+0xb238>  // b.any
  40df58:	add	x5, x5, #0x1
  40df5c:	add	x3, x3, #0x10
  40df60:	cmp	x20, x5
  40df64:	b.eq	40df80 <wcrtomb@plt+0xb240>  // b.none
  40df68:	ldr	w7, [x10, x3]
  40df6c:	ldr	w6, [x9, x3]
  40df70:	cmp	w7, w6
  40df74:	b.eq	40df48 <wcrtomb@plt+0xb208>  // b.none
  40df78:	cmp	x20, x5
  40df7c:	b.ne	40def0 <wcrtomb@plt+0xb1b0>  // b.any
  40df80:	mov	x0, x19
  40df84:	ldp	x19, x20, [sp, #16]
  40df88:	ldp	x21, x22, [sp, #32]
  40df8c:	ldp	x23, x24, [sp, #48]
  40df90:	ldp	x25, x26, [sp, #64]
  40df94:	ldp	x27, x28, [sp, #80]
  40df98:	ldp	x29, x30, [sp], #96
  40df9c:	ret
  40dfa0:	cmp	x20, #0x0
  40dfa4:	b.le	40e15c <wcrtomb@plt+0xb41c>
  40dfa8:	ldr	x2, [x25]
  40dfac:	mov	x3, #0x0                   	// #0
  40dfb0:	mov	x27, #0x0                   	// #0
  40dfb4:	mov	w22, #0x0                   	// #0
  40dfb8:	mov	w9, #0x1ff                 	// #511
  40dfbc:	ldr	x0, [x23, #336]
  40dfc0:	b	40dff8 <wcrtomb@plt+0xb2b8>
  40dfc4:	asr	w5, w4, #6
  40dfc8:	orr	w7, w22, w4
  40dfcc:	orr	w5, w5, w4, asr #3
  40dfd0:	orr	w4, w5, w4
  40dfd4:	and	w4, w4, w24
  40dfd8:	tst	x4, #0x7
  40dfdc:	csel	w22, w7, w22, ne  // ne = any
  40dfe0:	cbnz	x27, 40dfec <wcrtomb@plt+0xb2ac>
  40dfe4:	ldr	x4, [x23, #144]
  40dfe8:	ldr	x27, [x4, x6, lsl #3]
  40dfec:	add	x3, x3, #0x1
  40dff0:	cmp	x20, x3
  40dff4:	b.le	40e024 <wcrtomb@plt+0xb2e4>
  40dff8:	lsl	x4, x3, #4
  40dffc:	ldr	x6, [x2, x4]
  40e000:	ldr	w4, [x0, x6, lsl #2]
  40e004:	cbnz	w4, 40dfc4 <wcrtomb@plt+0xb284>
  40e008:	ldr	x4, [x23, #144]
  40e00c:	add	x3, x3, #0x1
  40e010:	ldr	x4, [x4, x6, lsl #3]
  40e014:	cmp	x4, #0x112
  40e018:	csel	w22, w22, w9, ne  // ne = any
  40e01c:	cmp	x20, x3
  40e020:	b.gt	40dff8 <wcrtomb@plt+0xb2b8>
  40e024:	ldr	x2, [x23, #312]
  40e028:	cmp	x1, x2
  40e02c:	b.ge	40e0c8 <wcrtomb@plt+0xb388>  // b.tcont
  40e030:	add	x0, x19, x19, lsl #2
  40e034:	cmp	xzr, x20, lsr #60
  40e038:	str	x8, [x23, #296]
  40e03c:	cset	x1, ne  // ne = any
  40e040:	lsl	x26, x0, #4
  40e044:	lsl	x0, x20, #4
  40e048:	add	x28, x8, x26
  40e04c:	str	x21, [x8, x26]
  40e050:	tbnz	x20, #59, 40e17c <wcrtomb@plt+0xb43c>
  40e054:	cbnz	x1, 40e17c <wcrtomb@plt+0xb43c>
  40e058:	bl	418630 <wcrtomb@plt+0x158f0>
  40e05c:	ldr	x2, [x23, #296]
  40e060:	stp	x0, xzr, [x28, #8]
  40e064:	add	x1, x25, #0x8
  40e068:	str	x20, [x28, #24]
  40e06c:	add	x2, x2, x26
  40e070:	mov	x0, x25
  40e074:	add	x2, x2, #0x8
  40e078:	bl	40d540 <wcrtomb@plt+0xa800>
  40e07c:	ldr	x0, [x23, #296]
  40e080:	mov	x2, #0xffffffffffffffff    	// #-1
  40e084:	add	x0, x0, x26
  40e088:	strb	w24, [x0, #32]
  40e08c:	strh	w22, [x0, #34]
  40e090:	ldr	x1, [x23, #304]
  40e094:	stp	x27, xzr, [x0, #40]
  40e098:	str	xzr, [x0, #56]
  40e09c:	add	x1, x1, #0x1
  40e0a0:	str	x2, [x0, #72]
  40e0a4:	mov	x0, x19
  40e0a8:	str	x1, [x23, #304]
  40e0ac:	ldp	x19, x20, [sp, #16]
  40e0b0:	ldp	x21, x22, [sp, #32]
  40e0b4:	ldp	x23, x24, [sp, #48]
  40e0b8:	ldp	x25, x26, [sp, #64]
  40e0bc:	ldp	x27, x28, [sp, #80]
  40e0c0:	ldp	x29, x30, [sp], #96
  40e0c4:	ret
  40e0c8:	asr	x0, x2, #1
  40e0cc:	adds	x0, x2, x0
  40e0d0:	b.vs	40e180 <wcrtomb@plt+0xb440>
  40e0d4:	mov	x1, #0x50                  	// #80
  40e0d8:	mul	x3, x0, x1
  40e0dc:	smulh	x4, x0, x1
  40e0e0:	cmp	x4, x3, asr #63
  40e0e4:	b.ne	40e180 <wcrtomb@plt+0xb440>  // b.any
  40e0e8:	cmp	x3, #0x7f
  40e0ec:	csel	x1, x3, x1, gt
  40e0f0:	csinc	x20, x0, xzr, gt
  40e0f4:	cbz	x8, 40e138 <wcrtomb@plt+0xb3f8>
  40e0f8:	sub	x0, x20, x2
  40e0fc:	cmp	x0, #0x0
  40e100:	b.gt	40e120 <wcrtomb@plt+0xb3e0>
  40e104:	adds	x20, x2, #0x1
  40e108:	b.vs	40e17c <wcrtomb@plt+0xb43c>
  40e10c:	mov	x0, #0x50                  	// #80
  40e110:	mul	x1, x20, x0
  40e114:	smulh	x0, x20, x0
  40e118:	cmp	x0, x1, asr #63
  40e11c:	b.ne	40e17c <wcrtomb@plt+0xb43c>  // b.any
  40e120:	mov	x0, x8
  40e124:	bl	418660 <wcrtomb@plt+0x15920>
  40e128:	str	x20, [x23, #312]
  40e12c:	mov	x8, x0
  40e130:	ldr	x20, [x25, #8]
  40e134:	b	40e030 <wcrtomb@plt+0xb2f0>
  40e138:	str	xzr, [x23, #312]
  40e13c:	b	40e0f8 <wcrtomb@plt+0xb3b8>
  40e140:	cmp	x1, #0x0
  40e144:	mov	x19, #0x0                   	// #0
  40e148:	mov	x27, #0x0                   	// #0
  40e14c:	mov	w22, #0x0                   	// #0
  40e150:	mov	x21, #0x0                   	// #0
  40e154:	b.gt	40dee4 <wcrtomb@plt+0xb1a4>
  40e158:	b	40e024 <wcrtomb@plt+0xb2e4>
  40e15c:	mov	x27, #0x0                   	// #0
  40e160:	mov	w22, #0x0                   	// #0
  40e164:	b	40e024 <wcrtomb@plt+0xb2e4>
  40e168:	mov	x0, #0x0                   	// #0
  40e16c:	mov	x4, #0x0                   	// #0
  40e170:	b	40de54 <wcrtomb@plt+0xb114>
  40e174:	mov	x5, #0x0                   	// #0
  40e178:	b	40df78 <wcrtomb@plt+0xb238>
  40e17c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40e180:	mov	x1, #0xffffffffffffffd0    	// #-48
  40e184:	mov	x20, #0x9999999999999999    	// #-7378697629483820647
  40e188:	movk	x1, #0x7fff, lsl #48
  40e18c:	movk	x20, #0x199, lsl #48
  40e190:	b	40e0f4 <wcrtomb@plt+0xb3b4>
  40e194:	nop
  40e198:	stp	x29, x30, [sp, #-240]!
  40e19c:	mov	x29, sp
  40e1a0:	stp	x21, x22, [sp, #32]
  40e1a4:	add	x22, x0, x0, lsl #2
  40e1a8:	and	x21, x2, #0xff
  40e1ac:	ldr	x2, [x1, #296]
  40e1b0:	lsl	x22, x22, #4
  40e1b4:	stp	x19, x20, [sp, #16]
  40e1b8:	mov	x20, x0
  40e1bc:	add	x2, x2, x22
  40e1c0:	stp	x25, x26, [sp, #64]
  40e1c4:	mov	x25, x1
  40e1c8:	ldp	x0, x1, [x1, #368]
  40e1cc:	stp	x23, x24, [sp, #48]
  40e1d0:	ldrh	w2, [x2, #34]
  40e1d4:	stp	x27, x28, [sp, #80]
  40e1d8:	cmp	w2, #0x0
  40e1dc:	csel	x1, x1, x0, ne  // ne = any
  40e1e0:	add	x23, x1, x20, lsl #3
  40e1e4:	ldr	x19, [x1, x20, lsl #3]
  40e1e8:	cbz	x19, 40e9f0 <wcrtomb@plt+0xbcb0>
  40e1ec:	ldr	x0, [x25, #384]
  40e1f0:	strb	wzr, [x0, x20]
  40e1f4:	ldr	x0, [x25, #296]
  40e1f8:	add	x0, x0, x22
  40e1fc:	ldrb	w1, [x0, #32]
  40e200:	ldrh	w0, [x0, #34]
  40e204:	and	w2, w1, w0, lsr #6
  40e208:	tst	x2, #0x7
  40e20c:	b.eq	40e230 <wcrtomb@plt+0xb4f0>  // b.none
  40e210:	ldr	x1, [x25, #384]
  40e214:	ldrb	w0, [x1, x20]
  40e218:	orr	w0, w0, #0x4
  40e21c:	strb	w0, [x1, x20]
  40e220:	ldr	x0, [x25, #296]
  40e224:	add	x0, x0, x22
  40e228:	ldrb	w1, [x0, #32]
  40e22c:	ldrh	w0, [x0, #34]
  40e230:	and	w2, w1, w0, lsr #3
  40e234:	tst	x2, #0x7
  40e238:	b.eq	40e25c <wcrtomb@plt+0xb51c>  // b.none
  40e23c:	ldr	x1, [x25, #384]
  40e240:	ldrb	w0, [x1, x20]
  40e244:	orr	w0, w0, #0x2
  40e248:	strb	w0, [x1, x20]
  40e24c:	ldr	x0, [x25, #296]
  40e250:	add	x0, x0, x22
  40e254:	ldrb	w1, [x0, #32]
  40e258:	ldrh	w0, [x0, #34]
  40e25c:	and	w0, w0, #0x7
  40e260:	tst	w0, w1
  40e264:	b.eq	40e278 <wcrtomb@plt+0xb538>  // b.none
  40e268:	ldr	x1, [x25, #384]
  40e26c:	ldrb	w0, [x1, x20]
  40e270:	orr	w0, w0, #0x1
  40e274:	strb	w0, [x1, x20]
  40e278:	ldr	x23, [x25, #176]
  40e27c:	cmp	xzr, x23, lsr #60
  40e280:	lsl	x0, x23, #4
  40e284:	cset	x1, ne  // ne = any
  40e288:	tbnz	x23, #59, 40eae4 <wcrtomb@plt+0xbda4>
  40e28c:	cbnz	x1, 40eae4 <wcrtomb@plt+0xbda4>
  40e290:	bl	418630 <wcrtomb@plt+0x158f0>
  40e294:	stp	x0, xzr, [sp, #128]
  40e298:	ldr	x1, [x25, #296]
  40e29c:	str	x23, [sp, #144]
  40e2a0:	add	x1, x1, x22
  40e2a4:	ldr	x0, [x1, #16]
  40e2a8:	cmp	x0, #0x0
  40e2ac:	b.le	40e330 <wcrtomb@plt+0xb5f0>
  40e2b0:	ldr	x3, [x1, #8]
  40e2b4:	mov	x23, #0x0                   	// #0
  40e2b8:	ldr	x1, [x25, #320]
  40e2bc:	nop
  40e2c0:	lsl	x26, x23, #4
  40e2c4:	mov	x24, #0x0                   	// #0
  40e2c8:	ldr	x2, [x3, x26]
  40e2cc:	add	x2, x2, x2, lsl #1
  40e2d0:	add	x2, x1, x2, lsl #3
  40e2d4:	ldr	x4, [x2, #8]
  40e2d8:	cmp	x4, #0x0
  40e2dc:	b.le	40e324 <wcrtomb@plt+0xb5e4>
  40e2e0:	ldr	x0, [x2]
  40e2e4:	add	x2, sp, #0x80
  40e2e8:	add	x0, x0, x24, lsl #4
  40e2ec:	add	x24, x24, #0x1
  40e2f0:	ldp	x0, x1, [x0]
  40e2f4:	bl	40d888 <wcrtomb@plt+0xab48>
  40e2f8:	ldr	x0, [x25, #296]
  40e2fc:	ldr	x1, [x25, #320]
  40e300:	add	x0, x0, x22
  40e304:	ldr	x3, [x0, #8]
  40e308:	ldr	x2, [x3, x26]
  40e30c:	add	x2, x2, x2, lsl #1
  40e310:	add	x2, x1, x2, lsl #3
  40e314:	ldr	x4, [x2, #8]
  40e318:	cmp	x4, x24
  40e31c:	b.gt	40e2e0 <wcrtomb@plt+0xb5a0>
  40e320:	ldr	x0, [x0, #16]
  40e324:	add	x23, x23, #0x1
  40e328:	cmp	x23, x0
  40e32c:	b.lt	40e2c0 <wcrtomb@plt+0xb580>  // b.tstop
  40e330:	ldr	x23, [x25, #176]
  40e334:	cmp	xzr, x23, lsr #60
  40e338:	lsl	x0, x23, #4
  40e33c:	cset	x24, ne  // ne = any
  40e340:	cmp	x0, #0x0
  40e344:	csinc	x24, x24, xzr, ge  // ge = tcont
  40e348:	cbnz	x24, 40eae4 <wcrtomb@plt+0xbda4>
  40e34c:	bl	418630 <wcrtomb@plt+0x158f0>
  40e350:	stp	x0, xzr, [sp, #152]
  40e354:	lsr	w3, w21, #6
  40e358:	mvni	v0.4s, #0x0
  40e35c:	str	x23, [sp, #168]
  40e360:	ldr	x6, [sp, #136]
  40e364:	and	w28, w21, #0x3f
  40e368:	add	x23, sp, #0xd0
  40e36c:	stp	q0, q0, [sp, #176]
  40e370:	cmp	x6, #0x0
  40e374:	b.le	40e4b4 <wcrtomb@plt+0xb774>
  40e378:	ldr	x2, [sp, #128]
  40e37c:	lsl	x0, x24, #4
  40e380:	ldr	x5, [x25, #144]
  40e384:	add	x1, x2, x0
  40e388:	ldr	x27, [x2, x0]
  40e38c:	ldr	w26, [x1, #8]
  40e390:	ldr	x4, [x1, #8]
  40e394:	ldr	x0, [x5, x27, lsl #3]
  40e398:	cmp	x0, #0xff
  40e39c:	b.ls	40e6fc <wcrtomb@plt+0xb9bc>  // b.plast
  40e3a0:	cmp	x0, #0x113
  40e3a4:	b.le	40e7bc <wcrtomb@plt+0xba7c>
  40e3a8:	ldr	x2, [x25]
  40e3ac:	mov	x8, #0xffffffffffffdd80    	// #-8832
  40e3b0:	mov	w1, w3
  40e3b4:	add	x0, x2, x0, lsl #5
  40e3b8:	add	x0, x0, x8
  40e3bc:	ld1	{v0.16b, v1.16b}, [x0]
  40e3c0:	st1	{v0.16b, v1.16b}, [x23]
  40e3c4:	ldr	x0, [x23, x1, lsl #3]
  40e3c8:	lsr	x0, x0, x28
  40e3cc:	tbz	w0, #0, 40e71c <wcrtomb@plt+0xb9dc>
  40e3d0:	cmp	w26, #0x1ff
  40e3d4:	b.ne	40e74c <wcrtomb@plt+0xba0c>  // b.any
  40e3d8:	ldp	d1, d3, [x23]
  40e3dc:	ldp	d0, d2, [x23, #16]
  40e3e0:	mov	v0.d[1], v2.d[0]
  40e3e4:	mov	v1.d[1], v3.d[0]
  40e3e8:	ldp	q4, q2, [sp, #176]
  40e3ec:	ldp	x0, x1, [sp, #152]
  40e3f0:	and	v0.16b, v0.16b, v2.16b
  40e3f4:	and	v1.16b, v4.16b, v1.16b
  40e3f8:	ldr	x2, [sp, #168]
  40e3fc:	stp	q1, q0, [sp, #176]
  40e400:	cmp	x1, x2
  40e404:	b.lt	40e48c <wcrtomb@plt+0xb74c>  // b.tstop
  40e408:	asr	x26, x2, #1
  40e40c:	adds	x26, x2, x26
  40e410:	b.vs	40ead8 <wcrtomb@plt+0xbd98>
  40e414:	asr	x1, x26, #63
  40e418:	sbfx	x6, x26, #59, #1
  40e41c:	lsl	x5, x26, #4
  40e420:	extr	x1, x1, x26, #60
  40e424:	cmp	x6, x1
  40e428:	b.ne	40ead8 <wcrtomb@plt+0xbd98>  // b.any
  40e42c:	cmp	x5, #0x7f
  40e430:	mov	x1, #0x8                   	// #8
  40e434:	csel	x26, x26, x1, gt
  40e438:	mov	x1, #0x80                  	// #128
  40e43c:	csel	x1, x5, x1, gt
  40e440:	cbz	x0, 40e9e8 <wcrtomb@plt+0xbca8>
  40e444:	sub	x5, x26, x2
  40e448:	cmp	x5, #0x0
  40e44c:	b.gt	40e470 <wcrtomb@plt+0xb730>
  40e450:	adds	x26, x2, #0x1
  40e454:	b.vs	40eae4 <wcrtomb@plt+0xbda4>
  40e458:	asr	x2, x26, #63
  40e45c:	sbfx	x5, x26, #59, #1
  40e460:	lsl	x1, x26, #4
  40e464:	extr	x2, x2, x26, #60
  40e468:	cmp	x5, x2
  40e46c:	b.ne	40eae4 <wcrtomb@plt+0xbda4>  // b.any
  40e470:	str	w3, [sp, #96]
  40e474:	str	x4, [sp, #104]
  40e478:	bl	418660 <wcrtomb@plt+0x15920>
  40e47c:	ldr	w3, [sp, #96]
  40e480:	ldr	x4, [sp, #104]
  40e484:	str	x26, [sp, #168]
  40e488:	ldr	x1, [sp, #160]
  40e48c:	lsl	x2, x1, #4
  40e490:	add	x5, x0, x2
  40e494:	add	x1, x1, #0x1
  40e498:	stp	x0, x1, [sp, #152]
  40e49c:	ldr	x6, [sp, #136]
  40e4a0:	str	x27, [x0, x2]
  40e4a4:	str	w4, [x5, #8]
  40e4a8:	add	x24, x24, #0x1
  40e4ac:	cmp	x24, x6
  40e4b0:	b.lt	40e378 <wcrtomb@plt+0xb638>  // b.tstop
  40e4b4:	ldr	x22, [x25, #176]
  40e4b8:	cmp	xzr, x22, lsr #60
  40e4bc:	lsl	x0, x22, #4
  40e4c0:	cset	x23, ne  // ne = any
  40e4c4:	cmp	x0, #0x0
  40e4c8:	csinc	x23, x23, xzr, ge  // ge = tcont
  40e4cc:	cbnz	x23, 40eae4 <wcrtomb@plt+0xbda4>
  40e4d0:	bl	418630 <wcrtomb@plt+0x158f0>
  40e4d4:	stp	x0, xzr, [sp, #208]
  40e4d8:	ldrb	w0, [x25, #328]
  40e4dc:	ldr	x3, [sp, #160]
  40e4e0:	str	x22, [sp, #224]
  40e4e4:	cmp	x3, #0x0
  40e4e8:	b.le	40e9d0 <wcrtomb@plt+0xbc90>
  40e4ec:	cbnz	w0, 40e924 <wcrtomb@plt+0xbbe4>
  40e4f0:	ldr	x1, [sp, #152]
  40e4f4:	ldr	x4, [sp, #176]
  40e4f8:	ldr	x2, [x25, #1008]
  40e4fc:	ldr	x5, [x25, #976]
  40e500:	tst	x4, x2
  40e504:	cset	w0, ne  // ne = any
  40e508:	orr	x2, x2, x5
  40e50c:	tst	x4, x5
  40e510:	lsl	w0, w0, #2
  40e514:	orr	w5, w0, #0x2
  40e518:	csel	w0, w5, w0, ne  // ne = any
  40e51c:	bics	xzr, x4, x2
  40e520:	ldr	x4, [sp, #184]
  40e524:	orr	w2, w0, #0x1
  40e528:	ldr	x5, [x25, #1016]
  40e52c:	csel	w0, w2, w0, ne  // ne = any
  40e530:	ldr	x2, [x25, #984]
  40e534:	tst	x4, x5
  40e538:	orr	w6, w0, #0x4
  40e53c:	csel	w0, w6, w0, ne  // ne = any
  40e540:	tst	x2, x4
  40e544:	orr	w6, w0, #0x2
  40e548:	orr	x2, x2, x5
  40e54c:	csel	w0, w6, w0, ne  // ne = any
  40e550:	bics	xzr, x4, x2
  40e554:	ldr	x4, [sp, #192]
  40e558:	orr	w2, w0, #0x1
  40e55c:	ldr	x5, [x25, #1024]
  40e560:	csel	w0, w2, w0, ne  // ne = any
  40e564:	ldr	x2, [x25, #992]
  40e568:	tst	x5, x4
  40e56c:	orr	w6, w0, #0x4
  40e570:	csel	w0, w6, w0, ne  // ne = any
  40e574:	tst	x2, x4
  40e578:	orr	w6, w0, #0x2
  40e57c:	orr	x2, x2, x5
  40e580:	csel	w0, w6, w0, ne  // ne = any
  40e584:	bics	xzr, x4, x2
  40e588:	ldr	x4, [sp, #200]
  40e58c:	orr	w5, w0, #0x1
  40e590:	ldr	x2, [x25, #1032]
  40e594:	csel	w0, w5, w0, ne  // ne = any
  40e598:	ldr	x5, [x25, #1000]
  40e59c:	tst	x2, x4
  40e5a0:	orr	w6, w0, #0x4
  40e5a4:	csel	w0, w6, w0, ne  // ne = any
  40e5a8:	orr	x2, x5, x2
  40e5ac:	tst	x5, x4
  40e5b0:	orr	w6, w0, #0x2
  40e5b4:	csel	w0, w6, w0, ne  // ne = any
  40e5b8:	bics	xzr, x4, x2
  40e5bc:	b.eq	40ea38 <wcrtomb@plt+0xbcf8>  // b.none
  40e5c0:	orr	w0, w0, #0x1
  40e5c4:	cmp	x3, #0x0
  40e5c8:	b.le	40eac8 <wcrtomb@plt+0xbd88>
  40e5cc:	ldr	x5, [x25, #344]
  40e5d0:	add	x3, x1, x3, lsl #4
  40e5d4:	mov	w2, #0x0                   	// #0
  40e5d8:	ldr	x4, [x1], #16
  40e5dc:	cmp	x1, x3
  40e5e0:	ldr	w4, [x5, x4, lsl #2]
  40e5e4:	orr	w2, w2, w4
  40e5e8:	b.ne	40e5d8 <wcrtomb@plt+0xb898>  // b.any
  40e5ec:	and	w1, w2, w0
  40e5f0:	bics	wzr, w0, w2
  40e5f4:	and	w26, w1, #0x4
  40e5f8:	and	w22, w1, #0x2
  40e5fc:	mov	x24, #0xffffffffffffffff    	// #-1
  40e600:	b.ne	40eab0 <wcrtomb@plt+0xbd70>  // b.any
  40e604:	mov	x23, x24
  40e608:	cbz	w26, 40e620 <wcrtomb@plt+0xb8e0>
  40e60c:	add	x1, sp, #0x98
  40e610:	mov	x0, x25
  40e614:	mov	w2, #0x4                   	// #4
  40e618:	bl	40ddb0 <wcrtomb@plt+0xb070>
  40e61c:	mov	x23, x0
  40e620:	mov	x26, x24
  40e624:	cbz	w22, 40e63c <wcrtomb@plt+0xb8fc>
  40e628:	add	x1, sp, #0x98
  40e62c:	mov	x0, x25
  40e630:	mov	w2, #0x2                   	// #2
  40e634:	bl	40ddb0 <wcrtomb@plt+0xb070>
  40e638:	mov	x26, x0
  40e63c:	mov	x0, x25
  40e640:	bl	40d648 <wcrtomb@plt+0xa908>
  40e644:	add	x22, sp, #0xb0
  40e648:	add	x1, x25, #0x1cc
  40e64c:	mov	x2, #0x0                   	// #0
  40e650:	b	40e66c <wcrtomb@plt+0xb92c>
  40e654:	cmp	w0, #0x4
  40e658:	csel	x0, x24, x23, ne  // ne = any
  40e65c:	str	x0, [x19, x2, lsl #3]
  40e660:	add	x2, x2, #0x1
  40e664:	cmp	x2, #0x100
  40e668:	b.eq	40e698 <wcrtomb@plt+0xb958>  // b.none
  40e66c:	lsr	w0, w2, #6
  40e670:	ldr	x3, [x22, x0, lsl #3]
  40e674:	lsr	x3, x3, x2
  40e678:	tbz	w3, #0, 40e660 <wcrtomb@plt+0xb920>
  40e67c:	ldrb	w0, [x1, x2]
  40e680:	cmp	w0, #0x2
  40e684:	b.ne	40e654 <wcrtomb@plt+0xb914>  // b.any
  40e688:	str	x26, [x19, x2, lsl #3]
  40e68c:	add	x2, x2, #0x1
  40e690:	cmp	x2, #0x100
  40e694:	b.ne	40e66c <wcrtomb@plt+0xb92c>  // b.any
  40e698:	ldr	x0, [sp, #152]
  40e69c:	bl	402ae0 <free@plt>
  40e6a0:	ldr	x0, [sp, #128]
  40e6a4:	bl	402ae0 <free@plt>
  40e6a8:	ldr	x0, [sp, #208]
  40e6ac:	bl	402ae0 <free@plt>
  40e6b0:	ldrb	w0, [x25, #459]
  40e6b4:	ubfx	x1, x0, #6, #2
  40e6b8:	ldr	x1, [x22, x1, lsl #3]
  40e6bc:	lsr	x1, x1, x0
  40e6c0:	tbz	w1, #0, 40e6dc <wcrtomb@plt+0xb99c>
  40e6c4:	ldr	x2, [x25, #392]
  40e6c8:	mov	x1, #0xffffffffffffffff    	// #-1
  40e6cc:	ldr	x0, [x19, x0, lsl #3]
  40e6d0:	str	x0, [x2, x20, lsl #3]
  40e6d4:	ldrb	w0, [x25, #459]
  40e6d8:	str	x1, [x19, x0, lsl #3]
  40e6dc:	ldr	x0, [x19, x21, lsl #3]
  40e6e0:	ldp	x19, x20, [sp, #16]
  40e6e4:	ldp	x21, x22, [sp, #32]
  40e6e8:	ldp	x23, x24, [sp, #48]
  40e6ec:	ldp	x25, x26, [sp, #64]
  40e6f0:	ldp	x27, x28, [sp, #80]
  40e6f4:	ldp	x29, x30, [sp], #240
  40e6f8:	ret
  40e6fc:	lsr	w2, w0, #6
  40e700:	mov	x1, #0x1                   	// #1
  40e704:	stp	xzr, xzr, [x23]
  40e708:	lsl	x1, x1, x0
  40e70c:	cmp	x0, w21, uxtb
  40e710:	stp	xzr, xzr, [x23, #16]
  40e714:	str	x1, [x23, x2, lsl #3]
  40e718:	b.eq	40e3d0 <wcrtomb@plt+0xb690>  // b.none
  40e71c:	cmp	w26, #0x1ff
  40e720:	mov	w5, #0x0                   	// #0
  40e724:	ldp	d1, d3, [x23]
  40e728:	ldp	d0, d2, [x23, #16]
  40e72c:	b.ne	40e758 <wcrtomb@plt+0xba18>  // b.any
  40e730:	mov	v0.d[1], v2.d[0]
  40e734:	mov	v1.d[1], v3.d[0]
  40e738:	ldp	q4, q2, [sp, #176]
  40e73c:	bic	v1.16b, v4.16b, v1.16b
  40e740:	bic	v0.16b, v2.16b, v0.16b
  40e744:	stp	q1, q0, [sp, #176]
  40e748:	b	40e4a8 <wcrtomb@plt+0xb768>
  40e74c:	ldp	d1, d3, [x23]
  40e750:	mov	w5, #0x1                   	// #1
  40e754:	ldp	d0, d2, [x23, #16]
  40e758:	ldr	x0, [x25, #296]
  40e75c:	add	x0, x0, x22
  40e760:	ldrb	w0, [x0, #32]
  40e764:	and	w1, w0, w26, asr #6
  40e768:	tst	x1, #0x7
  40e76c:	b.eq	40e848 <wcrtomb@plt+0xbb08>  // b.none
  40e770:	and	w1, w0, w26, asr #3
  40e774:	tst	x1, #0x7
  40e778:	b.eq	40e87c <wcrtomb@plt+0xbb3c>  // b.none
  40e77c:	and	w0, w0, w26
  40e780:	tst	x0, #0x7
  40e784:	b.eq	40e8b0 <wcrtomb@plt+0xbb70>  // b.none
  40e788:	orr	v4.8b, v0.8b, v2.8b
  40e78c:	fmov	x1, d4
  40e790:	orr	v4.8b, v1.8b, v3.8b
  40e794:	fmov	x0, d4
  40e798:	orr	x0, x0, x1
  40e79c:	cbz	x0, 40e91c <wcrtomb@plt+0xbbdc>
  40e7a0:	mov	w0, w3
  40e7a4:	ldr	x0, [x23, x0, lsl #3]
  40e7a8:	lsr	x0, x0, x28
  40e7ac:	tbz	w0, #0, 40e7b4 <wcrtomb@plt+0xba74>
  40e7b0:	cbnz	w5, 40e3e0 <wcrtomb@plt+0xb6a0>
  40e7b4:	ldr	x6, [sp, #136]
  40e7b8:	b	40e730 <wcrtomb@plt+0xb9f0>
  40e7bc:	cmp	x0, #0x10a
  40e7c0:	b.ne	40e4a8 <wcrtomb@plt+0xb768>  // b.any
  40e7c4:	ldr	x5, [x25]
  40e7c8:	mov	w1, w3
  40e7cc:	ldr	x0, [x25, #24]
  40e7d0:	ldr	x2, [x25, #296]
  40e7d4:	add	x0, x5, x0, lsl #5
  40e7d8:	add	x2, x2, x22
  40e7dc:	ld1	{v0.16b, v1.16b}, [x0]
  40e7e0:	st1	{v0.16b, v1.16b}, [x23]
  40e7e4:	ldrb	w0, [x2, #32]
  40e7e8:	ldr	x5, [x23, x1, lsl #3]
  40e7ec:	and	w0, w0, w26
  40e7f0:	tst	x0, #0x7
  40e7f4:	lsr	x5, x5, x28
  40e7f8:	and	w5, w5, #0x1
  40e7fc:	b.eq	40e830 <wcrtomb@plt+0xbaf0>  // b.none
  40e800:	ldr	x0, [x2, #56]
  40e804:	cbz	x0, 40e98c <wcrtomb@plt+0xbc4c>
  40e808:	mov	x1, x4
  40e80c:	add	x2, x2, #0x30
  40e810:	mov	x0, x27
  40e814:	str	x4, [sp, #96]
  40e818:	str	w3, [sp, #104]
  40e81c:	str	w5, [sp, #116]
  40e820:	bl	40d888 <wcrtomb@plt+0xab48>
  40e824:	ldr	w3, [sp, #104]
  40e828:	ldr	w5, [sp, #116]
  40e82c:	ldr	x4, [sp, #96]
  40e830:	cmp	w26, #0x1ff
  40e834:	ldp	d1, d3, [x23]
  40e838:	ldp	d0, d2, [x23, #16]
  40e83c:	b.ne	40e758 <wcrtomb@plt+0xba18>  // b.any
  40e840:	cbnz	w5, 40e3e0 <wcrtomb@plt+0xb6a0>
  40e844:	b	40e7b4 <wcrtomb@plt+0xba74>
  40e848:	ldr	d4, [x25, #1008]
  40e84c:	and	w1, w0, w26, asr #3
  40e850:	tst	x1, #0x7
  40e854:	bic	v1.8b, v1.8b, v4.8b
  40e858:	ldr	d4, [x25, #1016]
  40e85c:	bic	v3.8b, v3.8b, v4.8b
  40e860:	ldr	d4, [x25, #1024]
  40e864:	stp	d1, d3, [x23]
  40e868:	bic	v0.8b, v0.8b, v4.8b
  40e86c:	ldr	d4, [x25, #1032]
  40e870:	bic	v2.8b, v2.8b, v4.8b
  40e874:	stp	d0, d2, [x23, #16]
  40e878:	b.ne	40e77c <wcrtomb@plt+0xba3c>  // b.any
  40e87c:	ldr	d4, [x25, #976]
  40e880:	and	w0, w0, w26
  40e884:	tst	x0, #0x7
  40e888:	bic	v1.8b, v1.8b, v4.8b
  40e88c:	ldr	d4, [x25, #984]
  40e890:	bic	v3.8b, v3.8b, v4.8b
  40e894:	ldr	d4, [x25, #992]
  40e898:	stp	d1, d3, [x23]
  40e89c:	bic	v0.8b, v0.8b, v4.8b
  40e8a0:	ldr	d4, [x25, #1000]
  40e8a4:	bic	v2.8b, v2.8b, v4.8b
  40e8a8:	stp	d0, d2, [x23, #16]
  40e8ac:	b.ne	40e788 <wcrtomb@plt+0xba48>  // b.any
  40e8b0:	add	x7, x25, #0x3d0
  40e8b4:	ldr	x8, [x25, #1008]
  40e8b8:	ldp	x6, x2, [x7]
  40e8bc:	ldp	x1, x0, [x7, #16]
  40e8c0:	ldr	x7, [x25, #1016]
  40e8c4:	orr	x6, x6, x8
  40e8c8:	fmov	d4, x6
  40e8cc:	ldr	x8, [x25, #1024]
  40e8d0:	and	v1.8b, v1.8b, v4.8b
  40e8d4:	orr	x2, x2, x7
  40e8d8:	fmov	d4, x2
  40e8dc:	ldr	x7, [x25, #1032]
  40e8e0:	and	v3.8b, v3.8b, v4.8b
  40e8e4:	orr	x1, x1, x8
  40e8e8:	fmov	d4, x1
  40e8ec:	orr	x0, x0, x7
  40e8f0:	and	v0.8b, v0.8b, v4.8b
  40e8f4:	fmov	d4, x0
  40e8f8:	stp	d1, d3, [x23]
  40e8fc:	and	v2.8b, v2.8b, v4.8b
  40e900:	orr	v4.8b, v0.8b, v2.8b
  40e904:	stp	d0, d2, [x23, #16]
  40e908:	fmov	x1, d4
  40e90c:	orr	v4.8b, v1.8b, v3.8b
  40e910:	fmov	x0, d4
  40e914:	orr	x0, x0, x1
  40e918:	cbnz	x0, 40e7a0 <wcrtomb@plt+0xba60>
  40e91c:	ldr	x6, [sp, #136]
  40e920:	b	40e4a8 <wcrtomb@plt+0xb768>
  40e924:	ldrb	w0, [x25, #1048]
  40e928:	cbz	w0, 40e954 <wcrtomb@plt+0xbc14>
  40e92c:	ldr	x1, [sp, #152]
  40e930:	ldr	x2, [x25, #280]
  40e934:	nop
  40e938:	lsl	x0, x23, #4
  40e93c:	add	x23, x23, #0x1
  40e940:	ldr	x0, [x1, x0]
  40e944:	ldrb	w0, [x2, x0]
  40e948:	tbz	w0, #0, 40e4f4 <wcrtomb@plt+0xb7b4>
  40e94c:	cmp	x3, x23
  40e950:	b.ne	40e938 <wcrtomb@plt+0xbbf8>  // b.any
  40e954:	ldr	x0, [x25, #296]
  40e958:	add	x3, sp, #0xa0
  40e95c:	add	x5, sp, #0xd0
  40e960:	mov	w4, #0xffffffff            	// #-1
  40e964:	add	x1, x0, #0x10
  40e968:	add	x2, sp, #0x98
  40e96c:	add	x0, x0, #0x8
  40e970:	bl	40da30 <wcrtomb@plt+0xacf0>
  40e974:	add	x1, sp, #0xd8
  40e978:	add	x2, sp, #0x98
  40e97c:	add	x0, sp, #0xd0
  40e980:	bl	40d540 <wcrtomb@plt+0xa800>
  40e984:	ldp	x1, x3, [sp, #152]
  40e988:	b	40e4f4 <wcrtomb@plt+0xb7b4>
  40e98c:	mov	x0, #0x10                  	// #16
  40e990:	str	x2, [sp, #96]
  40e994:	str	w3, [sp, #104]
  40e998:	str	w5, [sp, #116]
  40e99c:	str	x4, [sp, #120]
  40e9a0:	bl	418630 <wcrtomb@plt+0x158f0>
  40e9a4:	ldr	x2, [sp, #96]
  40e9a8:	ldr	w3, [sp, #104]
  40e9ac:	ldr	w5, [sp, #116]
  40e9b0:	str	x0, [x2, #48]
  40e9b4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  40e9b8:	ldr	x4, [sp, #120]
  40e9bc:	ldr	q0, [x0, #1072]
  40e9c0:	ldr	x0, [x25, #296]
  40e9c4:	stur	q0, [x2, #56]
  40e9c8:	add	x2, x0, x22
  40e9cc:	b	40e808 <wcrtomb@plt+0xbac8>
  40e9d0:	cbz	w0, 40ea54 <wcrtomb@plt+0xbd14>
  40e9d4:	ldr	w26, [x25, #364]
  40e9d8:	ldr	x24, [x25, #400]
  40e9dc:	sub	w26, w26, #0x1
  40e9e0:	sxtw	x26, w26
  40e9e4:	b	40e644 <wcrtomb@plt+0xb904>
  40e9e8:	str	xzr, [sp, #168]
  40e9ec:	b	40e444 <wcrtomb@plt+0xb704>
  40e9f0:	ldr	w1, [x25, #360]
  40e9f4:	cmp	w1, #0x3ff
  40e9f8:	b.gt	40ea64 <wcrtomb@plt+0xbd24>
  40e9fc:	add	w1, w1, #0x1
  40ea00:	str	w1, [x25, #360]
  40ea04:	mov	x0, #0x800                 	// #2048
  40ea08:	bl	418630 <wcrtomb@plt+0x158f0>
  40ea0c:	mov	x19, x0
  40ea10:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  40ea14:	add	x1, x19, #0x800
  40ea18:	str	x19, [x23]
  40ea1c:	ldr	q0, [x0, #1056]
  40ea20:	mov	x0, x19
  40ea24:	nop
  40ea28:	str	q0, [x0], #16
  40ea2c:	cmp	x1, x0
  40ea30:	b.ne	40ea28 <wcrtomb@plt+0xbce8>  // b.any
  40ea34:	b	40e1ec <wcrtomb@plt+0xb4ac>
  40ea38:	cmp	x3, #0x0
  40ea3c:	b.gt	40e5cc <wcrtomb@plt+0xb88c>
  40ea40:	cbnz	w0, 40eac8 <wcrtomb@plt+0xbd88>
  40ea44:	mov	x24, #0xffffffffffffffff    	// #-1
  40ea48:	mov	x23, x24
  40ea4c:	mov	x26, x24
  40ea50:	b	40e63c <wcrtomb@plt+0xb8fc>
  40ea54:	mov	x26, #0xffffffffffffffff    	// #-1
  40ea58:	mov	x23, x26
  40ea5c:	mov	x24, x26
  40ea60:	b	40e644 <wcrtomb@plt+0xb904>
  40ea64:	ldr	x1, [x25, #352]
  40ea68:	ldrsw	x19, [x25, #364]
  40ea6c:	cmp	x1, x19
  40ea70:	b.le	40eaa8 <wcrtomb@plt+0xbd68>
  40ea74:	nop
  40ea78:	ldr	x0, [x0, x19, lsl #3]
  40ea7c:	bl	402ae0 <free@plt>
  40ea80:	ldr	x0, [x25, #376]
  40ea84:	ldr	x0, [x0, x19, lsl #3]
  40ea88:	bl	402ae0 <free@plt>
  40ea8c:	ldp	x0, x1, [x25, #368]
  40ea90:	str	xzr, [x1, x19, lsl #3]
  40ea94:	ldr	x1, [x25, #352]
  40ea98:	str	xzr, [x0, x19, lsl #3]
  40ea9c:	add	x19, x19, #0x1
  40eaa0:	cmp	x1, x19
  40eaa4:	b.gt	40ea78 <wcrtomb@plt+0xbd38>
  40eaa8:	mov	w1, #0x1                   	// #1
  40eaac:	b	40ea00 <wcrtomb@plt+0xbcc0>
  40eab0:	eor	w2, w2, #0x7
  40eab4:	add	x1, sp, #0x98
  40eab8:	mov	x0, x25
  40eabc:	bl	40ddb0 <wcrtomb@plt+0xb070>
  40eac0:	mov	x24, x0
  40eac4:	b	40e604 <wcrtomb@plt+0xb8c4>
  40eac8:	mov	w22, #0x0                   	// #0
  40eacc:	mov	w26, #0x0                   	// #0
  40ead0:	mov	w2, #0x7                   	// #7
  40ead4:	b	40eab4 <wcrtomb@plt+0xbd74>
  40ead8:	mov	x26, #0x7ffffffffffffff     	// #576460752303423487
  40eadc:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  40eae0:	b	40e440 <wcrtomb@plt+0xb700>
  40eae4:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40eae8:	stp	x29, x30, [sp, #-112]!
  40eaec:	mov	x29, sp
  40eaf0:	stp	x23, x24, [sp, #48]
  40eaf4:	mov	x23, x1
  40eaf8:	ldr	x1, [x2]
  40eafc:	stp	x19, x20, [sp, #16]
  40eb00:	stp	x21, x22, [sp, #32]
  40eb04:	mov	x21, x0
  40eb08:	stp	x25, x26, [sp, #64]
  40eb0c:	mov	x25, x2
  40eb10:	ldrb	w0, [x1]
  40eb14:	add	x0, x21, x0, lsl #2
  40eb18:	ldr	w24, [x0, #1308]
  40eb1c:	cmn	w24, #0x1
  40eb20:	b.eq	40edcc <wcrtomb@plt+0xc08c>  // b.none
  40eb24:	str	x27, [sp, #80]
  40eb28:	mov	w26, #0x1                   	// #1
  40eb2c:	str	xzr, [x21, #416]
  40eb30:	mov	x19, x23
  40eb34:	mov	w22, #0x0                   	// #0
  40eb38:	b	40eb78 <wcrtomb@plt+0xbe38>
  40eb3c:	mov	w0, w2
  40eb40:	mov	x3, x1
  40eb44:	ldr	x0, [x20, x0, lsl #3]
  40eb48:	cmn	x0, #0x2
  40eb4c:	b.eq	40ebd0 <wcrtomb@plt+0xbe90>  // b.none
  40eb50:	add	x1, x3, #0x1
  40eb54:	str	x1, [x25]
  40eb58:	add	w22, w22, #0x1
  40eb5c:	ldrb	w0, [x3]
  40eb60:	cmp	w22, w26
  40eb64:	ldr	x19, [x20, x0, lsl #3]
  40eb68:	b.ge	40ec00 <wcrtomb@plt+0xbec0>  // b.tcont
  40eb6c:	ldrsw	x0, [x21, #364]
  40eb70:	cmp	x0, x19
  40eb74:	b.gt	40ec00 <wcrtomb@plt+0xbec0>
  40eb78:	ldr	x0, [x21, #368]
  40eb7c:	lsl	x27, x19, #3
  40eb80:	ldrb	w2, [x1]
  40eb84:	ldr	x20, [x0, x19, lsl #3]
  40eb88:	cbnz	x20, 40eb3c <wcrtomb@plt+0xbdfc>
  40eb8c:	ldr	x0, [x21, #376]
  40eb90:	ldr	x20, [x0, x19, lsl #3]
  40eb94:	cbnz	x20, 40eb3c <wcrtomb@plt+0xbdfc>
  40eb98:	mov	x1, x21
  40eb9c:	mov	x0, x19
  40eba0:	bl	40e198 <wcrtomb@plt+0xb458>
  40eba4:	ldr	x0, [x21, #368]
  40eba8:	ldr	x20, [x0, x27]
  40ebac:	cbz	x20, 40ee30 <wcrtomb@plt+0xc0f0>
  40ebb0:	ldr	x1, [x25]
  40ebb4:	mov	x3, x1
  40ebb8:	ldrb	w2, [x1]
  40ebbc:	mov	w0, w2
  40ebc0:	ldr	x0, [x20, x0, lsl #3]
  40ebc4:	cmn	x0, #0x2
  40ebc8:	b.ne	40eb50 <wcrtomb@plt+0xbe10>  // b.any
  40ebcc:	nop
  40ebd0:	mov	x0, x19
  40ebd4:	mov	x1, x21
  40ebd8:	bl	40e198 <wcrtomb@plt+0xb458>
  40ebdc:	add	w22, w22, #0x1
  40ebe0:	ldr	x3, [x25]
  40ebe4:	cmp	w22, w26
  40ebe8:	add	x1, x3, #0x1
  40ebec:	str	x1, [x25]
  40ebf0:	ldrb	w0, [x3]
  40ebf4:	ldr	x19, [x20, x0, lsl #3]
  40ebf8:	b.lt	40eb6c <wcrtomb@plt+0xbe2c>  // b.tstop
  40ebfc:	nop
  40ec00:	ldr	x27, [sp, #80]
  40ec04:	sub	w26, w26, w22
  40ec08:	add	x1, x1, w26, sxtw
  40ec0c:	str	x1, [x25]
  40ec10:	cmn	w24, #0x1
  40ec14:	mov	x22, x19
  40ec18:	b.eq	40ece0 <wcrtomb@plt+0xbfa0>  // b.none
  40ec1c:	add	x23, x23, x23, lsl #2
  40ec20:	ldr	x2, [x21, #296]
  40ec24:	lsl	x23, x23, #4
  40ec28:	ldr	x22, [x21, #432]
  40ec2c:	add	x1, x2, x23
  40ec30:	ldr	x0, [x1, #72]
  40ec34:	tbnz	x0, #63, 40ecfc <wcrtomb@plt+0xbfbc>
  40ec38:	ldr	x3, [x22, x19, lsl #3]
  40ec3c:	lsl	x20, x19, #3
  40ec40:	cbz	x3, 40ed8c <wcrtomb@plt+0xc04c>
  40ec44:	ldr	x22, [x3, x0, lsl #3]
  40ec48:	tbz	x22, #63, 40ece0 <wcrtomb@plt+0xbfa0>
  40ec4c:	add	x0, x1, #0x30
  40ec50:	cmn	x19, #0x1
  40ec54:	add	x1, x1, #0x38
  40ec58:	add	x22, x21, #0x198
  40ec5c:	b.eq	40ee0c <wcrtomb@plt+0xc0cc>  // b.none
  40ec60:	add	x19, x19, x19, lsl #2
  40ec64:	mov	x5, x22
  40ec68:	mov	w4, #0xffffffff            	// #-1
  40ec6c:	add	x2, x2, x19, lsl #4
  40ec70:	add	x3, x2, #0x10
  40ec74:	add	x2, x2, #0x8
  40ec78:	bl	40da30 <wcrtomb@plt+0xacf0>
  40ec7c:	ldp	x0, x3, [x21, #408]
  40ec80:	cmp	x3, #0x0
  40ec84:	b.le	40ee5c <wcrtomb@plt+0xc11c>
  40ec88:	ldr	x4, [x21, #344]
  40ec8c:	add	x3, x0, x3, lsl #4
  40ec90:	mov	w2, #0x0                   	// #0
  40ec94:	nop
  40ec98:	ldr	x1, [x0], #16
  40ec9c:	cmp	x3, x0
  40eca0:	ldr	w1, [x4, x1, lsl #2]
  40eca4:	orr	w2, w2, w1
  40eca8:	b.ne	40ec98 <wcrtomb@plt+0xbf58>  // b.any
  40ecac:	eor	w2, w2, #0x7
  40ecb0:	mov	x1, x22
  40ecb4:	mov	x0, x21
  40ecb8:	bl	40ddb0 <wcrtomb@plt+0xb070>
  40ecbc:	mov	x22, x0
  40ecc0:	mov	x0, x21
  40ecc4:	bl	40d648 <wcrtomb@plt+0xa908>
  40ecc8:	ldr	x0, [x21, #296]
  40eccc:	ldr	x1, [x21, #432]
  40ecd0:	add	x23, x0, x23
  40ecd4:	ldr	x0, [x1, x20]
  40ecd8:	ldr	x1, [x23, #72]
  40ecdc:	str	x22, [x0, x1, lsl #3]
  40ece0:	mov	x0, x22
  40ece4:	ldp	x19, x20, [sp, #16]
  40ece8:	ldp	x21, x22, [sp, #32]
  40ecec:	ldp	x23, x24, [sp, #48]
  40ecf0:	ldp	x25, x26, [sp, #64]
  40ecf4:	ldp	x29, x30, [sp], #112
  40ecf8:	ret
  40ecfc:	ldr	x0, [x21, #440]
  40ed00:	add	x3, x0, #0x1
  40ed04:	cmp	x0, #0x3ff
  40ed08:	b.le	40ed78 <wcrtomb@plt+0xc038>
  40ed0c:	ldr	x0, [x21, #352]
  40ed10:	tbnz	x0, #63, 40ed40 <wcrtomb@plt+0xc000>
  40ed14:	mov	x20, #0xffffffffffffffff    	// #-1
  40ed18:	ldr	x0, [x22, x20, lsl #3]
  40ed1c:	bl	402ae0 <free@plt>
  40ed20:	ldr	x22, [x21, #432]
  40ed24:	ldr	x0, [x21, #352]
  40ed28:	str	xzr, [x22, x20, lsl #3]
  40ed2c:	add	x20, x20, #0x1
  40ed30:	cmp	x0, x20
  40ed34:	b.gt	40ed18 <wcrtomb@plt+0xbfd8>
  40ed38:	ldr	x2, [x21, #296]
  40ed3c:	add	x1, x2, x23
  40ed40:	ldr	x0, [x21, #304]
  40ed44:	cmp	x0, #0x0
  40ed48:	b.le	40ed70 <wcrtomb@plt+0xc030>
  40ed4c:	add	x3, x0, x0, lsl #2
  40ed50:	mov	x0, x2
  40ed54:	mov	x4, #0xffffffffffffffff    	// #-1
  40ed58:	add	x3, x2, x3, lsl #4
  40ed5c:	nop
  40ed60:	str	x4, [x0, #72]
  40ed64:	add	x0, x0, #0x50
  40ed68:	cmp	x3, x0
  40ed6c:	b.ne	40ed60 <wcrtomb@plt+0xc020>  // b.any
  40ed70:	mov	x3, #0x1                   	// #1
  40ed74:	mov	x0, #0x0                   	// #0
  40ed78:	str	x3, [x21, #440]
  40ed7c:	lsl	x20, x19, #3
  40ed80:	ldr	x3, [x22, x19, lsl #3]
  40ed84:	str	x0, [x1, #72]
  40ed88:	cbnz	x3, 40ec44 <wcrtomb@plt+0xbf04>
  40ed8c:	mov	x0, #0x2000                	// #8192
  40ed90:	bl	418630 <wcrtomb@plt+0x158f0>
  40ed94:	str	x0, [x22, x19, lsl #3]
  40ed98:	mov	x2, #0x2000                	// #8192
  40ed9c:	ldr	x0, [x21, #432]
  40eda0:	mov	w1, #0xff                  	// #255
  40eda4:	add	x22, x21, #0x198
  40eda8:	ldr	x0, [x0, x19, lsl #3]
  40edac:	bl	4028d0 <memset@plt>
  40edb0:	ldr	x2, [x21, #296]
  40edb4:	cmn	x19, #0x1
  40edb8:	add	x1, x2, x23
  40edbc:	add	x0, x1, #0x30
  40edc0:	add	x1, x1, #0x38
  40edc4:	b.ne	40ec60 <wcrtomb@plt+0xbf20>  // b.any
  40edc8:	b	40ee0c <wcrtomb@plt+0xc0cc>
  40edcc:	sub	x2, x3, x1
  40edd0:	add	x0, sp, #0x6c
  40edd4:	add	x3, x21, #0x110
  40edd8:	bl	418830 <wcrtomb@plt+0x15af0>
  40eddc:	mov	x26, x0
  40ede0:	sub	x0, x0, #0x1
  40ede4:	cmn	x0, #0x4
  40ede8:	b.hi	40ee18 <wcrtomb@plt+0xc0d8>  // b.pmore
  40edec:	ldr	x1, [x25]
  40edf0:	str	xzr, [x21, #416]
  40edf4:	ldr	w24, [sp, #108]
  40edf8:	mov	x19, x23
  40edfc:	cmp	w26, #0x0
  40ee00:	b.le	40ec08 <wcrtomb@plt+0xbec8>
  40ee04:	str	x27, [sp, #80]
  40ee08:	b	40eb30 <wcrtomb@plt+0xbdf0>
  40ee0c:	mov	x2, x22
  40ee10:	bl	40d540 <wcrtomb@plt+0xa800>
  40ee14:	b	40ec7c <wcrtomb@plt+0xbf3c>
  40ee18:	str	x27, [sp, #80]
  40ee1c:	mov	w26, #0x1                   	// #1
  40ee20:	str	xzr, [x21, #272]
  40ee24:	str	xzr, [x21, #416]
  40ee28:	ldr	x1, [x25]
  40ee2c:	b	40eb30 <wcrtomb@plt+0xbdf0>
  40ee30:	ldr	x0, [x21, #376]
  40ee34:	ldr	x20, [x0, x27]
  40ee38:	cbnz	x20, 40ebb0 <wcrtomb@plt+0xbe70>
  40ee3c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  40ee40:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ee44:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  40ee48:	add	x3, x3, #0x188
  40ee4c:	add	x1, x1, #0xe00
  40ee50:	add	x0, x0, #0xe10
  40ee54:	mov	w2, #0xc93                 	// #3219
  40ee58:	bl	402ca0 <__assert_fail@plt>
  40ee5c:	mov	w2, #0x7                   	// #7
  40ee60:	b	40ecb0 <wcrtomb@plt+0xbf70>
  40ee64:	nop
  40ee68:	stp	x29, x30, [sp, #-144]!
  40ee6c:	mov	x29, sp
  40ee70:	stp	x19, x20, [sp, #16]
  40ee74:	mov	x19, x0
  40ee78:	ldr	x0, [x0, #304]
  40ee7c:	stp	x21, x22, [sp, #32]
  40ee80:	mov	x22, x2
  40ee84:	stp	x23, x24, [sp, #48]
  40ee88:	mov	x23, x1
  40ee8c:	and	w1, w3, #0xff
  40ee90:	stp	x25, x26, [sp, #64]
  40ee94:	cmp	x0, #0x3ff
  40ee98:	stp	x27, x28, [sp, #80]
  40ee9c:	str	w1, [sp, #112]
  40eea0:	str	x4, [sp, #120]
  40eea4:	b.gt	40f2b8 <wcrtomb@plt+0xc578>
  40eea8:	ldr	x0, [x19, #352]
  40eeac:	cbz	x0, 40f3d0 <wcrtomb@plt+0xc690>
  40eeb0:	ldrb	w0, [x19, #459]
  40eeb4:	add	x24, x19, #0x110
  40eeb8:	ldrb	w1, [x22]
  40eebc:	mov	x20, x23
  40eec0:	ldr	x25, [x19, #368]
  40eec4:	strb	w0, [x22]
  40eec8:	str	w0, [sp, #108]
  40eecc:	ldr	x0, [x19, #424]
  40eed0:	str	w1, [sp, #116]
  40eed4:	str	x23, [sp, #136]
  40eed8:	str	xzr, [x19, #272]
  40eedc:	cbz	x0, 40f3dc <wcrtomb@plt+0xc69c>
  40eee0:	mov	x26, #0x0                   	// #0
  40eee4:	mov	x21, #0x0                   	// #0
  40eee8:	mov	x27, #0x0                   	// #0
  40eeec:	str	xzr, [sp, #96]
  40eef0:	ldr	x28, [x25, x27]
  40eef4:	cbz	x28, 40efe8 <wcrtomb@plt+0xc2a8>
  40eef8:	add	x4, x21, x21, lsl #2
  40eefc:	ldrsw	x1, [x19, #364]
  40ef00:	ldr	x0, [x19, #296]
  40ef04:	lsl	x26, x4, #4
  40ef08:	cmp	x1, x21
  40ef0c:	add	x0, x0, x26
  40ef10:	ldr	x2, [x0, #56]
  40ef14:	b.le	40efa8 <wcrtomb@plt+0xc268>
  40ef18:	ldrb	w0, [x20]
  40ef1c:	cbz	x2, 40f26c <wcrtomb@plt+0xc52c>
  40ef20:	add	x0, x19, w0, sxtw
  40ef24:	ldrb	w0, [x0, #716]
  40ef28:	cbnz	w0, 40f100 <wcrtomb@plt+0xc3c0>
  40ef2c:	cmp	x23, x20
  40ef30:	b.cc	40ef44 <wcrtomb@plt+0xc204>  // b.lo, b.ul, b.last
  40ef34:	b	40f0f8 <wcrtomb@plt+0xc3b8>
  40ef38:	add	x23, x23, x27
  40ef3c:	cmp	x23, x20
  40ef40:	b.cs	40ef90 <wcrtomb@plt+0xc250>  // b.hs, b.nlast
  40ef44:	ldrb	w0, [x23]
  40ef48:	mov	x27, #0x1                   	// #1
  40ef4c:	add	x0, x19, x0, lsl #2
  40ef50:	ldr	w0, [x0, #1308]
  40ef54:	cmn	w0, #0x1
  40ef58:	b.ne	40ef38 <wcrtomb@plt+0xc1f8>  // b.any
  40ef5c:	mov	x1, x23
  40ef60:	mov	x3, x24
  40ef64:	sub	x2, x22, x23
  40ef68:	add	x0, sp, #0x84
  40ef6c:	bl	418830 <wcrtomb@plt+0x15af0>
  40ef70:	sub	x1, x0, #0x1
  40ef74:	cmn	x1, #0x4
  40ef78:	b.hi	40f264 <wcrtomb@plt+0xc524>  // b.pmore
  40ef7c:	sxtw	x27, w0
  40ef80:	add	x23, x23, x27
  40ef84:	cmp	x23, x20
  40ef88:	b.cc	40ef44 <wcrtomb@plt+0xc204>  // b.lo, b.ul, b.last
  40ef8c:	nop
  40ef90:	ldr	x0, [x19, #296]
  40ef94:	mov	x20, x23
  40ef98:	mov	x23, x20
  40ef9c:	str	x20, [sp, #136]
  40efa0:	add	x4, x0, x26
  40efa4:	ldr	x2, [x4, #56]
  40efa8:	cbz	x2, 40efc4 <wcrtomb@plt+0xc284>
  40efac:	ldrb	w0, [x20]
  40efb0:	cmp	x22, x20
  40efb4:	add	x0, x19, x0, lsl #2
  40efb8:	ldr	w0, [x0, #1308]
  40efbc:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40efc0:	b.eq	40f224 <wcrtomb@plt+0xc4e4>  // b.none
  40efc4:	add	x0, x20, #0x1
  40efc8:	str	x0, [sp, #136]
  40efcc:	mov	x26, x21
  40efd0:	ldrb	w1, [x20]
  40efd4:	mov	x20, x0
  40efd8:	ldr	x21, [x28, x1, lsl #3]
  40efdc:	lsl	x27, x21, #3
  40efe0:	ldr	x28, [x25, x27]
  40efe4:	cbnz	x28, 40eef8 <wcrtomb@plt+0xc1b8>
  40efe8:	tbnz	x21, #63, 40f198 <wcrtomb@plt+0xc458>
  40efec:	ldr	x0, [x19, #376]
  40eff0:	ldrb	w2, [x20]
  40eff4:	ldr	x0, [x0, x27]
  40eff8:	cbz	x0, 40f180 <wcrtomb@plt+0xc440>
  40effc:	ldr	x0, [x19, #384]
  40f000:	add	x1, x19, x2
  40f004:	ldrb	w0, [x0, x21]
  40f008:	ldrb	w1, [x1, #460]
  40f00c:	and	w0, w0, w1
  40f010:	tst	w0, #0xff
  40f014:	b.ne	40f40c <wcrtomb@plt+0xc6cc>  // b.any
  40f018:	add	x6, x21, x21, lsl #2
  40f01c:	cmp	x22, x20
  40f020:	lsl	x26, x6, #4
  40f024:	b.eq	40f11c <wcrtomb@plt+0xc3dc>  // b.none
  40f028:	ldrsw	x0, [x19, #364]
  40f02c:	cmp	x21, x0
  40f030:	b.ge	40f0a8 <wcrtomb@plt+0xc368>  // b.tcont
  40f034:	add	x2, x19, x2
  40f038:	ldrb	w0, [x2, #716]
  40f03c:	cbnz	w0, 40f10c <wcrtomb@plt+0xc3cc>
  40f040:	cmp	x23, x20
  40f044:	b.cc	40f058 <wcrtomb@plt+0xc318>  // b.lo, b.ul, b.last
  40f048:	b	40f0a0 <wcrtomb@plt+0xc360>
  40f04c:	add	x23, x23, x28
  40f050:	cmp	x23, x20
  40f054:	b.cs	40f0a0 <wcrtomb@plt+0xc360>  // b.hs, b.nlast
  40f058:	ldrb	w0, [x23]
  40f05c:	mov	x28, #0x1                   	// #1
  40f060:	add	x0, x19, x0, lsl #2
  40f064:	ldr	w0, [x0, #1308]
  40f068:	cmn	w0, #0x1
  40f06c:	b.ne	40f04c <wcrtomb@plt+0xc30c>  // b.any
  40f070:	mov	x1, x23
  40f074:	mov	x3, x24
  40f078:	sub	x2, x22, x23
  40f07c:	add	x0, sp, #0x84
  40f080:	bl	418830 <wcrtomb@plt+0x15af0>
  40f084:	sub	x1, x0, #0x1
  40f088:	cmn	x1, #0x4
  40f08c:	b.hi	40f114 <wcrtomb@plt+0xc3d4>  // b.pmore
  40f090:	sxtw	x28, w0
  40f094:	add	x23, x23, x28
  40f098:	cmp	x23, x20
  40f09c:	b.cc	40f058 <wcrtomb@plt+0xc318>  // b.lo, b.ul, b.last
  40f0a0:	mov	x20, x23
  40f0a4:	str	x23, [sp, #136]
  40f0a8:	ldr	x0, [x19, #296]
  40f0ac:	add	x6, x0, x26
  40f0b0:	ldr	x0, [x6, #56]
  40f0b4:	cbz	x0, 40f0d0 <wcrtomb@plt+0xc390>
  40f0b8:	ldrb	w0, [x20]
  40f0bc:	cmp	x22, x20
  40f0c0:	add	x0, x19, x0, lsl #2
  40f0c4:	ldr	w0, [x0, #1308]
  40f0c8:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40f0cc:	b.eq	40f224 <wcrtomb@plt+0xc4e4>  // b.none
  40f0d0:	ldr	x1, [x19, #376]
  40f0d4:	add	x0, x20, #0x1
  40f0d8:	mov	x26, x21
  40f0dc:	ldr	x1, [x1, x27]
  40f0e0:	str	x0, [sp, #136]
  40f0e4:	ldrb	w2, [x20]
  40f0e8:	mov	x20, x0
  40f0ec:	ldr	x21, [x1, x2, lsl #3]
  40f0f0:	lsl	x27, x21, #3
  40f0f4:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f0f8:	mov	x20, x23
  40f0fc:	nop
  40f100:	mov	x23, x20
  40f104:	str	x20, [sp, #136]
  40f108:	b	40efa8 <wcrtomb@plt+0xc268>
  40f10c:	mov	x23, x20
  40f110:	b	40f0a0 <wcrtomb@plt+0xc360>
  40f114:	str	xzr, [x24]
  40f118:	b	40f04c <wcrtomb@plt+0xc30c>
  40f11c:	ldr	x0, [x19, #296]
  40f120:	add	x0, x0, x26
  40f124:	ldrh	w1, [x0, #34]
  40f128:	ldrb	w0, [x0, #32]
  40f12c:	and	w0, w0, w1, lsr #6
  40f130:	tst	x0, #0x7
  40f134:	b.eq	40f028 <wcrtomb@plt+0xc2e8>  // b.none
  40f138:	mov	x28, x22
  40f13c:	nop
  40f140:	ldr	x1, [sp, #120]
  40f144:	cbz	x1, 40f158 <wcrtomb@plt+0xc418>
  40f148:	ldr	x0, [x1]
  40f14c:	ldr	x2, [sp, #96]
  40f150:	add	x26, x0, x2
  40f154:	str	x26, [x1]
  40f158:	ldrb	w1, [sp, #116]
  40f15c:	mov	x0, x28
  40f160:	strb	w1, [x22]
  40f164:	ldp	x19, x20, [sp, #16]
  40f168:	ldp	x21, x22, [sp, #32]
  40f16c:	ldp	x23, x24, [sp, #48]
  40f170:	ldp	x25, x26, [sp, #64]
  40f174:	ldp	x27, x28, [sp, #80]
  40f178:	ldp	x29, x30, [sp], #144
  40f17c:	ret
  40f180:	mov	x1, x19
  40f184:	mov	x0, x21
  40f188:	bl	40e198 <wcrtomb@plt+0xb458>
  40f18c:	ldr	x20, [sp, #136]
  40f190:	ldr	x25, [x19, #368]
  40f194:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f198:	cmn	x21, #0x2
  40f19c:	b.eq	40f200 <wcrtomb@plt+0xc4c0>  // b.none
  40f1a0:	cmp	x22, x20
  40f1a4:	b.cc	40f140 <wcrtomb@plt+0xc400>  // b.lo, b.ul, b.last
  40f1a8:	ldurb	w0, [x20, #-1]
  40f1ac:	ldr	w1, [sp, #108]
  40f1b0:	cmp	w0, w1
  40f1b4:	b.ne	40f140 <wcrtomb@plt+0xc400>  // b.any
  40f1b8:	ldr	x0, [x19, #392]
  40f1bc:	ldr	x21, [x0, x26, lsl #3]
  40f1c0:	tbnz	x21, #63, 40f140 <wcrtomb@plt+0xc400>
  40f1c4:	ldr	x0, [sp, #96]
  40f1c8:	add	x0, x0, #0x1
  40f1cc:	str	x0, [sp, #96]
  40f1d0:	ldr	w0, [sp, #112]
  40f1d4:	cbnz	w0, 40f1f4 <wcrtomb@plt+0xc4b4>
  40f1d8:	add	x0, x19, w1, sxtw
  40f1dc:	ldrb	w0, [x0, #460]
  40f1e0:	cmp	w0, #0x4
  40f1e4:	b.eq	40f254 <wcrtomb@plt+0xc514>  // b.none
  40f1e8:	cmp	w0, #0x2
  40f1ec:	b.eq	40f2a0 <wcrtomb@plt+0xc560>  // b.none
  40f1f0:	ldr	x21, [x19, #400]
  40f1f4:	mov	x23, x20
  40f1f8:	lsl	x27, x21, #3
  40f1fc:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f200:	ldurb	w2, [x20, #-1]
  40f204:	mov	x1, x19
  40f208:	mov	x0, x26
  40f20c:	bl	40e198 <wcrtomb@plt+0xb458>
  40f210:	mov	x21, x0
  40f214:	lsl	x27, x0, #3
  40f218:	ldr	x20, [sp, #136]
  40f21c:	ldr	x25, [x19, #368]
  40f220:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f224:	mov	x1, x21
  40f228:	mov	x3, x22
  40f22c:	add	x2, sp, #0x88
  40f230:	mov	x0, x19
  40f234:	bl	40eae8 <wcrtomb@plt+0xbda8>
  40f238:	mov	x26, x21
  40f23c:	ldr	x23, [sp, #136]
  40f240:	mov	x21, x0
  40f244:	lsl	x27, x0, #3
  40f248:	mov	x20, x23
  40f24c:	ldr	x25, [x19, #368]
  40f250:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f254:	mov	x23, x20
  40f258:	mov	x21, #0x0                   	// #0
  40f25c:	mov	x27, #0x0                   	// #0
  40f260:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f264:	str	xzr, [x24]
  40f268:	b	40ef38 <wcrtomb@plt+0xc1f8>
  40f26c:	mov	w1, w0
  40f270:	ldr	x1, [x28, x1, lsl #3]
  40f274:	cmp	x21, x1
  40f278:	b.ne	40ef20 <wcrtomb@plt+0xc1e0>  // b.any
  40f27c:	add	x1, x20, #0x1
  40f280:	str	x1, [sp, #136]
  40f284:	mov	x20, x1
  40f288:	ldrb	w3, [x1], #1
  40f28c:	mov	x0, x3
  40f290:	ldr	x3, [x28, x3, lsl #3]
  40f294:	cmp	x21, x3
  40f298:	b.eq	40f280 <wcrtomb@plt+0xc540>  // b.none
  40f29c:	b	40ef20 <wcrtomb@plt+0xc1e0>
  40f2a0:	ldr	w4, [x19, #364]
  40f2a4:	mov	x23, x20
  40f2a8:	sub	w4, w4, #0x1
  40f2ac:	sxtw	x21, w4
  40f2b0:	sbfiz	x27, x4, #3, #32
  40f2b4:	b	40eef0 <wcrtomb@plt+0xc1b0>
  40f2b8:	ldr	w20, [x19, #364]
  40f2bc:	cmp	x0, w20, sxtw
  40f2c0:	sxtw	x21, w20
  40f2c4:	b.le	40f308 <wcrtomb@plt+0xc5c8>
  40f2c8:	mov	w0, #0x50                  	// #80
  40f2cc:	smull	x20, w20, w0
  40f2d0:	ldr	x0, [x19, #296]
  40f2d4:	add	x21, x21, #0x1
  40f2d8:	add	x0, x0, x20
  40f2dc:	ldr	x0, [x0, #8]
  40f2e0:	bl	402ae0 <free@plt>
  40f2e4:	ldr	x0, [x19, #296]
  40f2e8:	add	x0, x0, x20
  40f2ec:	add	x20, x20, #0x50
  40f2f0:	ldr	x0, [x0, #48]
  40f2f4:	bl	402ae0 <free@plt>
  40f2f8:	ldr	x0, [x19, #304]
  40f2fc:	cmp	x21, x0
  40f300:	b.lt	40f2d0 <wcrtomb@plt+0xc590>  // b.tstop
  40f304:	ldrsw	x21, [x19, #364]
  40f308:	ldr	x1, [x19, #368]
  40f30c:	str	x21, [x19, #304]
  40f310:	ldr	x0, [x19, #352]
  40f314:	cbz	x1, 40f35c <wcrtomb@plt+0xc61c>
  40f318:	cmp	x0, #0x0
  40f31c:	b.le	40f358 <wcrtomb@plt+0xc618>
  40f320:	mov	x20, #0x0                   	// #0
  40f324:	nop
  40f328:	ldr	x0, [x1, x20, lsl #3]
  40f32c:	bl	402ae0 <free@plt>
  40f330:	ldr	x0, [x19, #376]
  40f334:	ldr	x0, [x0, x20, lsl #3]
  40f338:	bl	402ae0 <free@plt>
  40f33c:	ldp	x1, x0, [x19, #368]
  40f340:	str	xzr, [x0, x20, lsl #3]
  40f344:	ldr	x0, [x19, #352]
  40f348:	str	xzr, [x1, x20, lsl #3]
  40f34c:	add	x20, x20, #0x1
  40f350:	cmp	x20, x0
  40f354:	b.lt	40f328 <wcrtomb@plt+0xc5e8>  // b.tstop
  40f358:	str	wzr, [x19, #360]
  40f35c:	ldrb	w1, [x19, #1048]
  40f360:	cbz	w1, 40eeac <wcrtomb@plt+0xc16c>
  40f364:	ldr	x1, [x19, #432]
  40f368:	cbz	x1, 40eeac <wcrtomb@plt+0xc16c>
  40f36c:	tbnz	x0, #63, 40f398 <wcrtomb@plt+0xc658>
  40f370:	mov	x20, #0xffffffffffffffff    	// #-1
  40f374:	nop
  40f378:	ldr	x0, [x1, x20, lsl #3]
  40f37c:	bl	402ae0 <free@plt>
  40f380:	ldr	x1, [x19, #432]
  40f384:	ldr	x0, [x19, #352]
  40f388:	str	xzr, [x1, x20, lsl #3]
  40f38c:	add	x20, x20, #0x1
  40f390:	cmp	x20, x0
  40f394:	b.lt	40f378 <wcrtomb@plt+0xc638>  // b.tstop
  40f398:	ldr	w2, [x19, #364]
  40f39c:	cmp	w2, #0x0
  40f3a0:	b.le	40f3c4 <wcrtomb@plt+0xc684>
  40f3a4:	ldr	x1, [x19, #296]
  40f3a8:	mov	w4, #0x50                  	// #80
  40f3ac:	mov	x3, #0xffffffffffffffff    	// #-1
  40f3b0:	add	x1, x1, #0x48
  40f3b4:	smaddl	x2, w2, w4, x1
  40f3b8:	str	x3, [x1], #80
  40f3bc:	cmp	x2, x1
  40f3c0:	b.ne	40f3b8 <wcrtomb@plt+0xc678>  // b.any
  40f3c4:	str	xzr, [x19, #440]
  40f3c8:	cbnz	x0, 40eeb0 <wcrtomb@plt+0xc170>
  40f3cc:	nop
  40f3d0:	mov	x0, x19
  40f3d4:	bl	40d648 <wcrtomb@plt+0xa908>
  40f3d8:	b	40eeb0 <wcrtomb@plt+0xc170>
  40f3dc:	ldr	x21, [x19, #176]
  40f3e0:	cmp	xzr, x21, lsr #60
  40f3e4:	lsl	x0, x21, #4
  40f3e8:	cset	x1, ne  // ne = any
  40f3ec:	tbnz	x21, #59, 40f414 <wcrtomb@plt+0xc6d4>
  40f3f0:	cbnz	x1, 40f414 <wcrtomb@plt+0xc6d4>
  40f3f4:	bl	418630 <wcrtomb@plt+0x158f0>
  40f3f8:	str	x0, [x19, #408]
  40f3fc:	add	x1, x19, #0x198
  40f400:	ldr	x20, [sp, #136]
  40f404:	stp	xzr, x21, [x1, #8]
  40f408:	b	40eee0 <wcrtomb@plt+0xc1a0>
  40f40c:	mov	x28, x20
  40f410:	b	40f140 <wcrtomb@plt+0xc400>
  40f414:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40f418:	stp	x29, x30, [sp, #-112]!
  40f41c:	mov	x29, sp
  40f420:	stp	x19, x20, [sp, #16]
  40f424:	mov	x19, x0
  40f428:	mov	x20, x1
  40f42c:	ldr	x0, [x0, #304]
  40f430:	stp	x21, x22, [sp, #32]
  40f434:	mov	x21, x2
  40f438:	stp	x23, x24, [sp, #48]
  40f43c:	mov	x22, x4
  40f440:	cmp	x0, #0x3ff
  40f444:	stp	x25, x26, [sp, #64]
  40f448:	and	w26, w3, #0xff
  40f44c:	stp	x27, x28, [sp, #80]
  40f450:	b.gt	40f69c <wcrtomb@plt+0xc95c>
  40f454:	ldr	x0, [x19, #352]
  40f458:	cbz	x0, 40f7b8 <wcrtomb@plt+0xca78>
  40f45c:	ldr	x3, [x19, #368]
  40f460:	mov	x28, #0x0                   	// #0
  40f464:	ldrb	w24, [x19, #459]
  40f468:	lsl	x5, x28, #3
  40f46c:	ldrb	w0, [x21]
  40f470:	mov	x23, #0x0                   	// #0
  40f474:	strb	w24, [x21]
  40f478:	mov	x1, #0x0                   	// #0
  40f47c:	str	w0, [sp, #108]
  40f480:	add	x25, x19, w24, sxtw
  40f484:	ldr	x2, [x3, x28, lsl #3]
  40f488:	mov	x0, x28
  40f48c:	cbz	x2, 40f570 <wcrtomb@plt+0xc830>
  40f490:	mov	x1, x20
  40f494:	ldrsw	x0, [x19, #364]
  40f498:	cmp	x0, x28
  40f49c:	ldrb	w0, [x1], #1
  40f4a0:	ldr	x27, [x2, x0, lsl #3]
  40f4a4:	b.le	40f5d8 <wcrtomb@plt+0xc898>
  40f4a8:	cmp	x28, x27
  40f4ac:	b.ne	40f5cc <wcrtomb@plt+0xc88c>  // b.any
  40f4b0:	ldrb	w5, [x1]
  40f4b4:	mov	x0, x20
  40f4b8:	mov	x20, x1
  40f4bc:	add	x1, x1, #0x1
  40f4c0:	ldr	x27, [x2, x5, lsl #3]
  40f4c4:	cmp	x28, x27
  40f4c8:	b.eq	40f4b0 <wcrtomb@plt+0xc770>  // b.none
  40f4cc:	mov	x2, x20
  40f4d0:	add	x20, x0, #0x2
  40f4d4:	ldr	x1, [x3, x27, lsl #3]
  40f4d8:	mov	x0, x27
  40f4dc:	lsl	x5, x27, #3
  40f4e0:	cbnz	x1, 40f52c <wcrtomb@plt+0xc7ec>
  40f4e4:	tbnz	x27, #63, 40f57c <wcrtomb@plt+0xc83c>
  40f4e8:	ldr	x1, [x19, #376]
  40f4ec:	ldrb	w2, [x20]
  40f4f0:	ldr	x6, [x1, x5]
  40f4f4:	cbz	x6, 40f654 <wcrtomb@plt+0xc914>
  40f4f8:	ldr	x1, [x19, #384]
  40f4fc:	add	x5, x19, w2, sxtw
  40f500:	ldrb	w1, [x1, x0]
  40f504:	ldrb	w5, [x5, #460]
  40f508:	and	w1, w1, w5
  40f50c:	tst	w1, #0xff
  40f510:	b.ne	40f7c4 <wcrtomb@plt+0xca84>  // b.any
  40f514:	cmp	x21, x20
  40f518:	b.eq	40f5f8 <wcrtomb@plt+0xc8b8>  // b.none
  40f51c:	add	x20, x20, #0x1
  40f520:	mov	x28, x27
  40f524:	ldr	x0, [x6, x2, lsl #3]
  40f528:	b	40f558 <wcrtomb@plt+0xc818>
  40f52c:	ldrb	w0, [x2, #1]
  40f530:	ldr	x0, [x1, x0, lsl #3]
  40f534:	cmp	x0, x27
  40f538:	b.ne	40f550 <wcrtomb@plt+0xc810>  // b.any
  40f53c:	nop
  40f540:	ldrb	w0, [x20, #1]!
  40f544:	ldr	x0, [x1, x0, lsl #3]
  40f548:	cmp	x0, x27
  40f54c:	b.eq	40f540 <wcrtomb@plt+0xc800>  // b.none
  40f550:	add	x20, x20, #0x1
  40f554:	mov	x28, x27
  40f558:	mov	x1, x28
  40f55c:	mov	x28, x0
  40f560:	mov	x0, x28
  40f564:	lsl	x5, x28, #3
  40f568:	ldr	x2, [x3, x28, lsl #3]
  40f56c:	cbnz	x2, 40f490 <wcrtomb@plt+0xc750>
  40f570:	mov	x27, x28
  40f574:	mov	x28, x1
  40f578:	tbz	x27, #63, 40f4e8 <wcrtomb@plt+0xc7a8>
  40f57c:	cmn	x27, #0x2
  40f580:	b.eq	40f66c <wcrtomb@plt+0xc92c>  // b.none
  40f584:	cmp	x21, x20
  40f588:	b.cc	40f694 <wcrtomb@plt+0xc954>  // b.lo, b.ul, b.last
  40f58c:	ldurb	w0, [x20, #-1]
  40f590:	cmp	w0, w24
  40f594:	b.ne	40f694 <wcrtomb@plt+0xc954>  // b.any
  40f598:	ldr	x0, [x19, #392]
  40f59c:	ldr	x0, [x0, x28, lsl #3]
  40f5a0:	tbnz	x0, #63, 40f694 <wcrtomb@plt+0xc954>
  40f5a4:	add	x23, x23, #0x1
  40f5a8:	cbnz	w26, 40f558 <wcrtomb@plt+0xc818>
  40f5ac:	ldrb	w1, [x25, #460]
  40f5b0:	mov	x0, #0x0                   	// #0
  40f5b4:	cmp	w1, #0x4
  40f5b8:	b.eq	40f558 <wcrtomb@plt+0xc818>  // b.none
  40f5bc:	cmp	w1, #0x2
  40f5c0:	b.eq	40f684 <wcrtomb@plt+0xc944>  // b.none
  40f5c4:	ldr	x0, [x19, #400]
  40f5c8:	b	40f558 <wcrtomb@plt+0xc818>
  40f5cc:	mov	x2, x20
  40f5d0:	mov	x20, x1
  40f5d4:	b	40f4d4 <wcrtomb@plt+0xc794>
  40f5d8:	ldr	x2, [x3, x27, lsl #3]
  40f5dc:	mov	x0, x27
  40f5e0:	lsl	x5, x27, #3
  40f5e4:	cbz	x2, 40f7cc <wcrtomb@plt+0xca8c>
  40f5e8:	ldrb	w0, [x20, #1]
  40f5ec:	mov	x20, x1
  40f5f0:	ldr	x0, [x2, x0, lsl #3]
  40f5f4:	b	40f550 <wcrtomb@plt+0xc810>
  40f5f8:	ldr	x1, [x19, #296]
  40f5fc:	add	x0, x0, x0, lsl #2
  40f600:	add	x0, x1, x0, lsl #4
  40f604:	ldrh	w1, [x0, #34]
  40f608:	ldrb	w0, [x0, #32]
  40f60c:	and	w0, w0, w1, lsr #6
  40f610:	tst	x0, #0x7
  40f614:	b.eq	40f51c <wcrtomb@plt+0xc7dc>  // b.none
  40f618:	mov	x0, x21
  40f61c:	nop
  40f620:	cbz	x22, 40f630 <wcrtomb@plt+0xc8f0>
  40f624:	ldr	x1, [x22]
  40f628:	add	x23, x1, x23
  40f62c:	str	x23, [x22]
  40f630:	ldrb	w1, [sp, #108]
  40f634:	strb	w1, [x21]
  40f638:	ldp	x19, x20, [sp, #16]
  40f63c:	ldp	x21, x22, [sp, #32]
  40f640:	ldp	x23, x24, [sp, #48]
  40f644:	ldp	x25, x26, [sp, #64]
  40f648:	ldp	x27, x28, [sp, #80]
  40f64c:	ldp	x29, x30, [sp], #112
  40f650:	ret
  40f654:	mov	x1, x19
  40f658:	mov	x0, x27
  40f65c:	bl	40e198 <wcrtomb@plt+0xb458>
  40f660:	mov	x0, x27
  40f664:	ldr	x3, [x19, #368]
  40f668:	b	40f558 <wcrtomb@plt+0xc818>
  40f66c:	ldurb	w2, [x20, #-1]
  40f670:	mov	x1, x19
  40f674:	mov	x0, x28
  40f678:	bl	40e198 <wcrtomb@plt+0xb458>
  40f67c:	ldr	x3, [x19, #368]
  40f680:	b	40f558 <wcrtomb@plt+0xc818>
  40f684:	ldr	w0, [x19, #364]
  40f688:	sub	w0, w0, #0x1
  40f68c:	sxtw	x0, w0
  40f690:	b	40f558 <wcrtomb@plt+0xc818>
  40f694:	mov	x0, #0x0                   	// #0
  40f698:	b	40f620 <wcrtomb@plt+0xc8e0>
  40f69c:	ldr	w23, [x19, #364]
  40f6a0:	cmp	x0, w23, sxtw
  40f6a4:	sxtw	x24, w23
  40f6a8:	b.le	40f6f0 <wcrtomb@plt+0xc9b0>
  40f6ac:	mov	w0, #0x50                  	// #80
  40f6b0:	smull	x23, w23, w0
  40f6b4:	nop
  40f6b8:	ldr	x0, [x19, #296]
  40f6bc:	add	x24, x24, #0x1
  40f6c0:	add	x0, x0, x23
  40f6c4:	ldr	x0, [x0, #8]
  40f6c8:	bl	402ae0 <free@plt>
  40f6cc:	ldr	x0, [x19, #296]
  40f6d0:	add	x0, x0, x23
  40f6d4:	add	x23, x23, #0x50
  40f6d8:	ldr	x0, [x0, #48]
  40f6dc:	bl	402ae0 <free@plt>
  40f6e0:	ldr	x0, [x19, #304]
  40f6e4:	cmp	x24, x0
  40f6e8:	b.lt	40f6b8 <wcrtomb@plt+0xc978>  // b.tstop
  40f6ec:	ldrsw	x24, [x19, #364]
  40f6f0:	ldr	x1, [x19, #368]
  40f6f4:	str	x24, [x19, #304]
  40f6f8:	ldr	x0, [x19, #352]
  40f6fc:	cbz	x1, 40f744 <wcrtomb@plt+0xca04>
  40f700:	cmp	x0, #0x0
  40f704:	b.le	40f740 <wcrtomb@plt+0xca00>
  40f708:	mov	x23, #0x0                   	// #0
  40f70c:	nop
  40f710:	ldr	x0, [x1, x23, lsl #3]
  40f714:	bl	402ae0 <free@plt>
  40f718:	ldr	x0, [x19, #376]
  40f71c:	ldr	x0, [x0, x23, lsl #3]
  40f720:	bl	402ae0 <free@plt>
  40f724:	ldp	x1, x0, [x19, #368]
  40f728:	str	xzr, [x0, x23, lsl #3]
  40f72c:	ldr	x0, [x19, #352]
  40f730:	str	xzr, [x1, x23, lsl #3]
  40f734:	add	x23, x23, #0x1
  40f738:	cmp	x23, x0
  40f73c:	b.lt	40f710 <wcrtomb@plt+0xc9d0>  // b.tstop
  40f740:	str	wzr, [x19, #360]
  40f744:	ldrb	w1, [x19, #1048]
  40f748:	cbz	w1, 40f458 <wcrtomb@plt+0xc718>
  40f74c:	ldr	x1, [x19, #432]
  40f750:	cbz	x1, 40f458 <wcrtomb@plt+0xc718>
  40f754:	tbnz	x0, #63, 40f780 <wcrtomb@plt+0xca40>
  40f758:	mov	x23, #0xffffffffffffffff    	// #-1
  40f75c:	nop
  40f760:	ldr	x0, [x1, x23, lsl #3]
  40f764:	bl	402ae0 <free@plt>
  40f768:	ldr	x1, [x19, #432]
  40f76c:	ldr	x0, [x19, #352]
  40f770:	str	xzr, [x1, x23, lsl #3]
  40f774:	add	x23, x23, #0x1
  40f778:	cmp	x23, x0
  40f77c:	b.lt	40f760 <wcrtomb@plt+0xca20>  // b.tstop
  40f780:	ldr	w2, [x19, #364]
  40f784:	cmp	w2, #0x0
  40f788:	b.le	40f7ac <wcrtomb@plt+0xca6c>
  40f78c:	ldr	x1, [x19, #296]
  40f790:	mov	w4, #0x50                  	// #80
  40f794:	mov	x3, #0xffffffffffffffff    	// #-1
  40f798:	add	x1, x1, #0x48
  40f79c:	smaddl	x2, w2, w4, x1
  40f7a0:	str	x3, [x1], #80
  40f7a4:	cmp	x2, x1
  40f7a8:	b.ne	40f7a0 <wcrtomb@plt+0xca60>  // b.any
  40f7ac:	str	xzr, [x19, #440]
  40f7b0:	cbnz	x0, 40f45c <wcrtomb@plt+0xc71c>
  40f7b4:	nop
  40f7b8:	mov	x0, x19
  40f7bc:	bl	40d648 <wcrtomb@plt+0xa908>
  40f7c0:	b	40f45c <wcrtomb@plt+0xc71c>
  40f7c4:	mov	x0, x20
  40f7c8:	b	40f620 <wcrtomb@plt+0xc8e0>
  40f7cc:	mov	x20, x1
  40f7d0:	b	40f4e4 <wcrtomb@plt+0xc7a4>
  40f7d4:	nop
  40f7d8:	stp	x29, x30, [sp, #-48]!
  40f7dc:	mov	x29, sp
  40f7e0:	ldp	x3, x4, [x0, #152]
  40f7e4:	stp	x19, x20, [sp, #16]
  40f7e8:	mov	x19, x0
  40f7ec:	stp	x21, x22, [sp, #32]
  40f7f0:	mov	x20, x1
  40f7f4:	and	w22, w2, #0xff
  40f7f8:	cmp	x4, x3
  40f7fc:	b.eq	40f8b0 <wcrtomb@plt+0xcb70>  // b.none
  40f800:	ldrb	w0, [x19, #1048]
  40f804:	cbz	w0, 40f880 <wcrtomb@plt+0xcb40>
  40f808:	ldr	x0, [x19, #280]
  40f80c:	strb	w22, [x0, x3]
  40f810:	ldr	x0, [x19, #144]
  40f814:	cmp	x20, #0x106
  40f818:	ldr	x3, [x19, #152]
  40f81c:	add	x1, x3, #0x1
  40f820:	str	x1, [x19, #152]
  40f824:	str	x20, [x0, x3, lsl #3]
  40f828:	b.gt	40f898 <wcrtomb@plt+0xcb58>
  40f82c:	cmp	x20, #0x104
  40f830:	b.gt	40f954 <wcrtomb@plt+0xcc14>
  40f834:	cmp	x20, #0x100
  40f838:	b.eq	40f854 <wcrtomb@plt+0xcb14>  // b.none
  40f83c:	sub	x20, x20, #0x101
  40f840:	cmp	x20, #0x2
  40f844:	b.ls	40f8a8 <wcrtomb@plt+0xcb68>  // b.plast
  40f848:	ldr	x0, [x19, #176]
  40f84c:	add	x0, x0, #0x1
  40f850:	str	x0, [x19, #176]
  40f854:	ldr	x0, [x19, #136]
  40f858:	add	x0, x0, #0x1
  40f85c:	str	x0, [x19, #136]
  40f860:	ldr	x1, [x19, #168]
  40f864:	cmp	x0, x1
  40f868:	b.le	40f870 <wcrtomb@plt+0xcb30>
  40f86c:	str	x0, [x19, #168]
  40f870:	ldp	x19, x20, [sp, #16]
  40f874:	ldp	x21, x22, [sp, #32]
  40f878:	ldp	x29, x30, [sp], #48
  40f87c:	ret
  40f880:	ldr	x0, [x19, #144]
  40f884:	add	x1, x3, #0x1
  40f888:	str	x1, [x19, #152]
  40f88c:	cmp	x20, #0x106
  40f890:	str	x20, [x0, x3, lsl #3]
  40f894:	b.le	40f82c <wcrtomb@plt+0xcaec>
  40f898:	cmp	x20, #0x112
  40f89c:	b.ne	40f848 <wcrtomb@plt+0xcb08>  // b.any
  40f8a0:	strb	wzr, [x19, #192]
  40f8a4:	b	40f848 <wcrtomb@plt+0xcb08>
  40f8a8:	ldr	x0, [x19, #136]
  40f8ac:	b	40f860 <wcrtomb@plt+0xcb20>
  40f8b0:	asr	x21, x4, #1
  40f8b4:	adds	x21, x4, x21
  40f8b8:	ldr	x0, [x0, #144]
  40f8bc:	b.vs	40f968 <wcrtomb@plt+0xcc28>
  40f8c0:	asr	x1, x21, #63
  40f8c4:	sbfx	x2, x21, #60, #1
  40f8c8:	lsl	x3, x21, #3
  40f8cc:	extr	x1, x1, x21, #61
  40f8d0:	cmp	x2, x1
  40f8d4:	b.ne	40f968 <wcrtomb@plt+0xcc28>  // b.any
  40f8d8:	cmp	x3, #0x7f
  40f8dc:	mov	x1, #0x80                  	// #128
  40f8e0:	mov	x2, #0x10                  	// #16
  40f8e4:	csel	x1, x3, x1, gt
  40f8e8:	csel	x21, x21, x2, gt
  40f8ec:	cbz	x0, 40f94c <wcrtomb@plt+0xcc0c>
  40f8f0:	sub	x2, x21, x4
  40f8f4:	cmp	x2, #0x0
  40f8f8:	b.gt	40f91c <wcrtomb@plt+0xcbdc>
  40f8fc:	adds	x21, x4, #0x1
  40f900:	b.vs	40f964 <wcrtomb@plt+0xcc24>
  40f904:	asr	x2, x21, #63
  40f908:	sbfx	x3, x21, #60, #1
  40f90c:	lsl	x1, x21, #3
  40f910:	extr	x2, x2, x21, #61
  40f914:	cmp	x3, x2
  40f918:	b.ne	40f964 <wcrtomb@plt+0xcc24>  // b.any
  40f91c:	bl	418660 <wcrtomb@plt+0x15920>
  40f920:	str	x0, [x19, #144]
  40f924:	ldrb	w1, [x19, #1048]
  40f928:	str	x21, [x19, #160]
  40f92c:	cbz	w1, 40f814 <wcrtomb@plt+0xcad4>
  40f930:	ldr	x0, [x19, #280]
  40f934:	tbnz	x21, #63, 40f964 <wcrtomb@plt+0xcc24>
  40f938:	mov	x1, x21
  40f93c:	bl	418660 <wcrtomb@plt+0x15920>
  40f940:	str	x0, [x19, #280]
  40f944:	ldr	x3, [x19, #152]
  40f948:	b	40f800 <wcrtomb@plt+0xcac0>
  40f94c:	str	xzr, [x19, #160]
  40f950:	b	40f8f0 <wcrtomb@plt+0xcbb0>
  40f954:	ldr	x0, [x19, #136]
  40f958:	sub	x0, x0, #0x1
  40f95c:	str	x0, [x19, #136]
  40f960:	b	40f860 <wcrtomb@plt+0xcb20>
  40f964:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40f968:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40f96c:	mov	x21, #0xfffffffffffffff     	// #1152921504606846975
  40f970:	cbnz	x0, 40f8f0 <wcrtomb@plt+0xcbb0>
  40f974:	b	40f94c <wcrtomb@plt+0xcc0c>
  40f978:	stp	x29, x30, [sp, #-144]!
  40f97c:	cmp	x1, #0x113
  40f980:	mov	x29, sp
  40f984:	ldrb	w2, [x0, #1048]
  40f988:	stp	x25, x26, [sp, #64]
  40f98c:	cset	w26, eq  // eq = none
  40f990:	ands	w2, w26, w2
  40f994:	stp	x27, x28, [sp, #80]
  40f998:	mov	x27, x0
  40f99c:	str	w2, [sp, #108]
  40f9a0:	b.eq	40fbb4 <wcrtomb@plt+0xce74>  // b.none
  40f9a4:	ldr	x1, [x0, #104]
  40f9a8:	cmp	x1, #0x0
  40f9ac:	b.le	40fc14 <wcrtomb@plt+0xced4>
  40f9b0:	mov	w25, #0x0                   	// #0
  40f9b4:	stp	x19, x20, [sp, #16]
  40f9b8:	stp	x21, x22, [sp, #32]
  40f9bc:	mov	x22, #0x0                   	// #0
  40f9c0:	stp	x23, x24, [sp, #48]
  40f9c4:	nop
  40f9c8:	add	x2, sp, #0x78
  40f9cc:	ldr	x1, [x27, #96]
  40f9d0:	add	x0, sp, #0x80
  40f9d4:	ldr	w1, [x1, x22, lsl #2]
  40f9d8:	str	xzr, [sp, #120]
  40f9dc:	bl	402d40 <wcrtomb@plt>
  40f9e0:	mov	x19, x0
  40f9e4:	cmn	x0, #0x1
  40f9e8:	b.eq	40fbe0 <wcrtomb@plt+0xcea0>  // b.none
  40f9ec:	ldrb	w1, [sp, #128]
  40f9f0:	cmp	w0, #0x1
  40f9f4:	mov	w23, w0
  40f9f8:	b.eq	40fb44 <wcrtomb@plt+0xce04>  // b.none
  40f9fc:	mov	x0, x27
  40fa00:	mov	w2, #0x1                   	// #1
  40fa04:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fa08:	cmp	w19, #0x1
  40fa0c:	b.le	40fb50 <wcrtomb@plt+0xce10>
  40fa10:	sub	w19, w19, #0x1
  40fa14:	add	x20, sp, #0x81
  40fa18:	mov	w28, #0x1                   	// #1
  40fa1c:	b	40fa78 <wcrtomb@plt+0xcd38>
  40fa20:	ldr	x0, [x27, #280]
  40fa24:	strb	w21, [x0, x1]
  40fa28:	ldp	x0, x1, [x27, #144]
  40fa2c:	add	x2, x1, #0x1
  40fa30:	str	x2, [x27, #152]
  40fa34:	str	x24, [x0, x1, lsl #3]
  40fa38:	ldp	x2, x1, [x27, #168]
  40fa3c:	ldr	x0, [x27, #136]
  40fa40:	add	x0, x0, #0x1
  40fa44:	str	x0, [x27, #136]
  40fa48:	add	x1, x1, #0x1
  40fa4c:	str	x1, [x27, #176]
  40fa50:	cmp	x0, x2
  40fa54:	b.le	40fa5c <wcrtomb@plt+0xcd1c>
  40fa58:	str	x0, [x27, #168]
  40fa5c:	add	w28, w28, #0x1
  40fa60:	mov	x0, x27
  40fa64:	mov	x1, #0x105                 	// #261
  40fa68:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fa6c:	add	x20, x20, #0x1
  40fa70:	cmp	w23, w28
  40fa74:	b.eq	40fb50 <wcrtomb@plt+0xce10>  // b.none
  40fa78:	ldp	x1, x4, [x27, #152]
  40fa7c:	cmp	w28, w19
  40fa80:	cset	w21, eq  // eq = none
  40fa84:	ldrb	w24, [x20]
  40fa88:	lsl	w21, w21, #1
  40fa8c:	cmp	x4, x1
  40fa90:	b.eq	40faa4 <wcrtomb@plt+0xcd64>  // b.none
  40fa94:	ldrb	w0, [x27, #1048]
  40fa98:	cbnz	w0, 40fa20 <wcrtomb@plt+0xcce0>
  40fa9c:	ldr	x0, [x27, #144]
  40faa0:	b	40fa2c <wcrtomb@plt+0xccec>
  40faa4:	asr	x2, x4, #1
  40faa8:	adds	x2, x4, x2
  40faac:	ldr	x0, [x27, #144]
  40fab0:	b.vs	40fc40 <wcrtomb@plt+0xcf00>
  40fab4:	asr	x6, x2, #63
  40fab8:	sbfx	x7, x2, #60, #1
  40fabc:	lsl	x1, x2, #3
  40fac0:	extr	x6, x6, x2, #61
  40fac4:	cmp	x7, x6
  40fac8:	b.ne	40fc40 <wcrtomb@plt+0xcf00>  // b.any
  40facc:	cmp	x1, #0x7f
  40fad0:	mov	x3, #0x10                  	// #16
  40fad4:	csel	x26, x2, x3, gt
  40fad8:	mov	x2, #0x80                  	// #128
  40fadc:	csel	x1, x1, x2, gt
  40fae0:	cbz	x0, 40fbd8 <wcrtomb@plt+0xce98>
  40fae4:	sub	x6, x26, x4
  40fae8:	cmp	x6, #0x0
  40faec:	b.gt	40fb14 <wcrtomb@plt+0xcdd4>
  40faf0:	adds	x2, x4, #0x1
  40faf4:	mov	x26, x2
  40faf8:	b.vs	40fc3c <wcrtomb@plt+0xcefc>
  40fafc:	asr	x4, x2, #63
  40fb00:	sbfx	x6, x2, #60, #1
  40fb04:	lsl	x1, x2, #3
  40fb08:	extr	x4, x4, x2, #61
  40fb0c:	cmp	x6, x4
  40fb10:	b.ne	40fc3c <wcrtomb@plt+0xcefc>  // b.any
  40fb14:	bl	418660 <wcrtomb@plt+0x15920>
  40fb18:	str	x0, [x27, #144]
  40fb1c:	ldrb	w1, [x27, #1048]
  40fb20:	str	x26, [x27, #160]
  40fb24:	cbz	w1, 40fbd0 <wcrtomb@plt+0xce90>
  40fb28:	ldr	x0, [x27, #280]
  40fb2c:	tbnz	x26, #63, 40fc3c <wcrtomb@plt+0xcefc>
  40fb30:	mov	x1, x26
  40fb34:	bl	418660 <wcrtomb@plt+0x15920>
  40fb38:	str	x0, [x27, #280]
  40fb3c:	ldr	x1, [x27, #152]
  40fb40:	b	40fa94 <wcrtomb@plt+0xcd54>
  40fb44:	mov	x0, x27
  40fb48:	mov	w2, #0x3                   	// #3
  40fb4c:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fb50:	cbnz	w25, 40fb6c <wcrtomb@plt+0xce2c>
  40fb54:	ldr	x0, [x27, #104]
  40fb58:	add	x22, x22, #0x1
  40fb5c:	cmp	x0, x22
  40fb60:	b.le	40fb88 <wcrtomb@plt+0xce48>
  40fb64:	ldr	w25, [sp, #108]
  40fb68:	b	40f9c8 <wcrtomb@plt+0xcc88>
  40fb6c:	mov	x0, x27
  40fb70:	mov	x1, #0x106                 	// #262
  40fb74:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fb78:	add	x22, x22, #0x1
  40fb7c:	ldr	x0, [x27, #104]
  40fb80:	cmp	x0, x22
  40fb84:	b.gt	40fb64 <wcrtomb@plt+0xce24>
  40fb88:	ldr	x1, [x27, #80]
  40fb8c:	str	xzr, [x27, #104]
  40fb90:	cmn	x1, #0x1
  40fb94:	b.eq	40fbf8 <wcrtomb@plt+0xceb8>  // b.none
  40fb98:	add	x1, x1, #0x114
  40fb9c:	mov	x0, x27
  40fba0:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fba4:	ldp	x19, x20, [sp, #16]
  40fba8:	mov	x1, #0x106                 	// #262
  40fbac:	ldp	x21, x22, [sp, #32]
  40fbb0:	ldp	x23, x24, [sp, #48]
  40fbb4:	mov	x0, x27
  40fbb8:	mov	w2, #0x3                   	// #3
  40fbbc:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fbc0:	ldp	x25, x26, [sp, #64]
  40fbc4:	ldp	x27, x28, [sp, #80]
  40fbc8:	ldp	x29, x30, [sp], #144
  40fbcc:	ret
  40fbd0:	ldr	x1, [x27, #152]
  40fbd4:	b	40fa2c <wcrtomb@plt+0xccec>
  40fbd8:	str	xzr, [x27, #160]
  40fbdc:	b	40fae4 <wcrtomb@plt+0xcda4>
  40fbe0:	mov	x0, x27
  40fbe4:	mov	w2, #0x3                   	// #3
  40fbe8:	mov	x1, #0x0                   	// #0
  40fbec:	strb	wzr, [sp, #128]
  40fbf0:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fbf4:	b	40fb50 <wcrtomb@plt+0xce10>
  40fbf8:	ldp	x19, x20, [sp, #16]
  40fbfc:	ldp	x21, x22, [sp, #32]
  40fc00:	ldp	x23, x24, [sp, #48]
  40fc04:	ldp	x25, x26, [sp, #64]
  40fc08:	ldp	x27, x28, [sp, #80]
  40fc0c:	ldp	x29, x30, [sp], #144
  40fc10:	ret
  40fc14:	ldr	x1, [x0, #80]
  40fc18:	str	xzr, [x0, #104]
  40fc1c:	cmn	x1, #0x1
  40fc20:	b.eq	40fbc0 <wcrtomb@plt+0xce80>  // b.none
  40fc24:	add	x1, x1, #0x114
  40fc28:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fc2c:	ldp	x25, x26, [sp, #64]
  40fc30:	ldp	x27, x28, [sp, #80]
  40fc34:	ldp	x29, x30, [sp], #144
  40fc38:	ret
  40fc3c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40fc40:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  40fc44:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40fc48:	b	40fae0 <wcrtomb@plt+0xcda0>
  40fc4c:	nop
  40fc50:	stp	x29, x30, [sp, #-128]!
  40fc54:	mov	x29, sp
  40fc58:	add	x2, sp, #0x68
  40fc5c:	stp	x19, x20, [sp, #16]
  40fc60:	mov	x19, x0
  40fc64:	add	x0, sp, #0x70
  40fc68:	str	xzr, [sp, #104]
  40fc6c:	bl	402d40 <wcrtomb@plt>
  40fc70:	cmn	x0, #0x1
  40fc74:	b.eq	40fe0c <wcrtomb@plt+0xd0cc>  // b.none
  40fc78:	stp	x21, x22, [sp, #32]
  40fc7c:	cmp	w0, #0x1
  40fc80:	ldrb	w1, [sp, #112]
  40fc84:	mov	x21, x0
  40fc88:	mov	w22, w0
  40fc8c:	b.eq	40fe2c <wcrtomb@plt+0xd0ec>  // b.none
  40fc90:	mov	x0, x19
  40fc94:	mov	w2, #0x1                   	// #1
  40fc98:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fc9c:	cmp	w21, #0x1
  40fca0:	b.le	40fe50 <wcrtomb@plt+0xd110>
  40fca4:	sub	w21, w21, #0x1
  40fca8:	mov	w20, #0x1                   	// #1
  40fcac:	stp	x23, x24, [sp, #48]
  40fcb0:	mov	x24, #0x80                  	// #128
  40fcb4:	mov	x23, #0x10                  	// #16
  40fcb8:	stp	x25, x26, [sp, #64]
  40fcbc:	stp	x27, x28, [sp, #80]
  40fcc0:	add	x27, sp, #0x71
  40fcc4:	b	40fd20 <wcrtomb@plt+0xcfe0>
  40fcc8:	ldr	x0, [x19, #280]
  40fccc:	strb	w26, [x0, x2]
  40fcd0:	ldp	x0, x2, [x19, #144]
  40fcd4:	add	x1, x2, #0x1
  40fcd8:	str	x1, [x19, #152]
  40fcdc:	str	x28, [x0, x2, lsl #3]
  40fce0:	ldp	x2, x1, [x19, #168]
  40fce4:	ldr	x0, [x19, #136]
  40fce8:	add	x0, x0, #0x1
  40fcec:	str	x0, [x19, #136]
  40fcf0:	add	x1, x1, #0x1
  40fcf4:	str	x1, [x19, #176]
  40fcf8:	cmp	x0, x2
  40fcfc:	b.le	40fd04 <wcrtomb@plt+0xcfc4>
  40fd00:	str	x0, [x19, #168]
  40fd04:	add	w20, w20, #0x1
  40fd08:	mov	x0, x19
  40fd0c:	mov	x1, #0x105                 	// #261
  40fd10:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fd14:	add	x27, x27, #0x1
  40fd18:	cmp	w22, w20
  40fd1c:	b.eq	40fde0 <wcrtomb@plt+0xd0a0>  // b.none
  40fd20:	ldp	x2, x3, [x19, #152]
  40fd24:	cmp	w21, w20
  40fd28:	cset	w0, eq  // eq = none
  40fd2c:	ldrb	w28, [x27]
  40fd30:	lsl	w26, w0, #1
  40fd34:	cmp	x3, x2
  40fd38:	b.eq	40fd4c <wcrtomb@plt+0xd00c>  // b.none
  40fd3c:	ldrb	w0, [x19, #1048]
  40fd40:	cbnz	w0, 40fcc8 <wcrtomb@plt+0xcf88>
  40fd44:	ldr	x0, [x19, #144]
  40fd48:	b	40fcd4 <wcrtomb@plt+0xcf94>
  40fd4c:	asr	x25, x3, #1
  40fd50:	adds	x25, x3, x25
  40fd54:	ldr	x0, [x19, #144]
  40fd58:	b.vs	40fe44 <wcrtomb@plt+0xd104>
  40fd5c:	asr	x1, x25, #63
  40fd60:	sbfx	x2, x25, #60, #1
  40fd64:	lsl	x4, x25, #3
  40fd68:	extr	x1, x1, x25, #61
  40fd6c:	cmp	x2, x1
  40fd70:	b.ne	40fe44 <wcrtomb@plt+0xd104>  // b.any
  40fd74:	cmp	x4, #0x7f
  40fd78:	csel	x1, x4, x24, gt
  40fd7c:	csel	x25, x25, x23, gt
  40fd80:	cbz	x0, 40fe04 <wcrtomb@plt+0xd0c4>
  40fd84:	sub	x2, x25, x3
  40fd88:	cmp	x2, #0x0
  40fd8c:	b.gt	40fdb0 <wcrtomb@plt+0xd070>
  40fd90:	adds	x25, x3, #0x1
  40fd94:	b.vs	40fe40 <wcrtomb@plt+0xd100>
  40fd98:	asr	x2, x25, #63
  40fd9c:	sbfx	x3, x25, #60, #1
  40fda0:	lsl	x1, x25, #3
  40fda4:	extr	x2, x2, x25, #61
  40fda8:	cmp	x3, x2
  40fdac:	b.ne	40fe40 <wcrtomb@plt+0xd100>  // b.any
  40fdb0:	bl	418660 <wcrtomb@plt+0x15920>
  40fdb4:	str	x0, [x19, #144]
  40fdb8:	ldrb	w1, [x19, #1048]
  40fdbc:	str	x25, [x19, #160]
  40fdc0:	cbz	w1, 40fdfc <wcrtomb@plt+0xd0bc>
  40fdc4:	ldr	x0, [x19, #280]
  40fdc8:	tbnz	x25, #63, 40fe40 <wcrtomb@plt+0xd100>
  40fdcc:	mov	x1, x25
  40fdd0:	bl	418660 <wcrtomb@plt+0x15920>
  40fdd4:	str	x0, [x19, #280]
  40fdd8:	ldr	x2, [x19, #152]
  40fddc:	b	40fd3c <wcrtomb@plt+0xcffc>
  40fde0:	ldp	x21, x22, [sp, #32]
  40fde4:	ldp	x23, x24, [sp, #48]
  40fde8:	ldp	x25, x26, [sp, #64]
  40fdec:	ldp	x27, x28, [sp, #80]
  40fdf0:	ldp	x19, x20, [sp, #16]
  40fdf4:	ldp	x29, x30, [sp], #128
  40fdf8:	ret
  40fdfc:	ldr	x2, [x19, #152]
  40fe00:	b	40fcd4 <wcrtomb@plt+0xcf94>
  40fe04:	str	xzr, [x19, #160]
  40fe08:	b	40fd84 <wcrtomb@plt+0xd044>
  40fe0c:	mov	x0, x19
  40fe10:	mov	w2, #0x3                   	// #3
  40fe14:	mov	x1, #0x0                   	// #0
  40fe18:	strb	wzr, [sp, #112]
  40fe1c:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fe20:	ldp	x19, x20, [sp, #16]
  40fe24:	ldp	x29, x30, [sp], #128
  40fe28:	ret
  40fe2c:	mov	x0, x19
  40fe30:	mov	w2, #0x3                   	// #3
  40fe34:	bl	40f7d8 <wcrtomb@plt+0xca98>
  40fe38:	ldp	x21, x22, [sp, #32]
  40fe3c:	b	40fdf0 <wcrtomb@plt+0xd0b0>
  40fe40:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  40fe44:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  40fe48:	mov	x25, #0xfffffffffffffff     	// #1152921504606846975
  40fe4c:	b	40fd80 <wcrtomb@plt+0xd040>
  40fe50:	ldp	x21, x22, [sp, #32]
  40fe54:	b	40fdf0 <wcrtomb@plt+0xd0b0>
  40fe58:	stp	x29, x30, [sp, #-272]!
  40fe5c:	mov	x29, sp
  40fe60:	stp	x19, x20, [sp, #16]
  40fe64:	and	w20, w1, #0xff
  40fe68:	ldr	x1, [x0, #176]
  40fe6c:	stp	x21, x22, [sp, #32]
  40fe70:	stp	x23, x24, [sp, #48]
  40fe74:	cmp	xzr, x1, lsr #59
  40fe78:	stp	x25, x26, [sp, #64]
  40fe7c:	cset	x2, ne  // ne = any
  40fe80:	stp	x27, x28, [sp, #80]
  40fe84:	tbnz	x1, #58, 410e6c <wcrtomb@plt+0xe12c>
  40fe88:	cbnz	x2, 410e6c <wcrtomb@plt+0xe12c>
  40fe8c:	mov	x28, x0
  40fe90:	lsl	x0, x1, #5
  40fe94:	bl	418630 <wcrtomb@plt+0x158f0>
  40fe98:	mov	x19, #0x18                  	// #24
  40fe9c:	mov	x21, x0
  40fea0:	str	x21, [sp, #168]
  40fea4:	ldp	x1, x24, [x28, #168]
  40fea8:	umulh	x0, x1, x19
  40feac:	mul	x2, x1, x19
  40feb0:	cmp	x0, #0x0
  40feb4:	add	x0, x21, x24, lsl #4
  40feb8:	str	x0, [sp, #128]
  40febc:	cset	x0, ne  // ne = any
  40fec0:	tbnz	x2, #63, 410e6c <wcrtomb@plt+0xe12c>
  40fec4:	cbnz	x0, 410e6c <wcrtomb@plt+0xe12c>
  40fec8:	add	x1, x1, x1, lsl #1
  40fecc:	lsl	x0, x1, #3
  40fed0:	bl	418630 <wcrtomb@plt+0x158f0>
  40fed4:	mov	x27, x0
  40fed8:	mov	x1, #0x105                 	// #261
  40fedc:	mov	x0, x28
  40fee0:	str	x27, [sp, #160]
  40fee4:	bl	40f978 <wcrtomb@plt+0xcc38>
  40fee8:	strb	w20, [x28, #328]
  40feec:	ldr	x20, [x28, #176]
  40fef0:	cmp	xzr, x20, lsr #60
  40fef4:	lsl	x0, x20, #4
  40fef8:	cset	x1, ne  // ne = any
  40fefc:	tbnz	x20, #59, 410e6c <wcrtomb@plt+0xe12c>
  40ff00:	cbnz	x1, 410e6c <wcrtomb@plt+0xe12c>
  40ff04:	bl	418630 <wcrtomb@plt+0x158f0>
  40ff08:	mov	x2, x0
  40ff0c:	ldr	x0, [x28, #152]
  40ff10:	mov	x1, x19
  40ff14:	stp	x2, xzr, [sp, #224]
  40ff18:	mov	x19, #0x0                   	// #0
  40ff1c:	str	x20, [sp, #240]
  40ff20:	bl	418730 <wcrtomb@plt+0x159f0>
  40ff24:	ldr	x2, [x28, #152]
  40ff28:	str	x21, [sp, #104]
  40ff2c:	str	x0, [x28, #320]
  40ff30:	cmp	x2, #0x0
  40ff34:	b.le	40ffc8 <wcrtomb@plt+0xd288>
  40ff38:	add	x21, sp, #0xc8
  40ff3c:	b	40ff70 <wcrtomb@plt+0xd230>
  40ff40:	cmp	x0, #0x101
  40ff44:	b.gt	410678 <wcrtomb@plt+0xd938>
  40ff48:	cmp	x0, #0x100
  40ff4c:	b.eq	410664 <wcrtomb@plt+0xd924>  // b.none
  40ff50:	cmp	x0, #0x101
  40ff54:	b.ne	410618 <wcrtomb@plt+0xd8d8>  // b.any
  40ff58:	sub	x23, x27, #0x18
  40ff5c:	mov	w0, #0x1                   	// #1
  40ff60:	strb	w0, [x23]
  40ff64:	add	x19, x19, #0x1
  40ff68:	cmp	x19, x2
  40ff6c:	b.ge	40ffc8 <wcrtomb@plt+0xd288>  // b.tcont
  40ff70:	ldr	x1, [x28, #144]
  40ff74:	lsl	x0, x19, #3
  40ff78:	str	x0, [sp, #96]
  40ff7c:	ldr	x0, [x1, x19, lsl #3]
  40ff80:	cmp	x0, #0x103
  40ff84:	b.le	40ff40 <wcrtomb@plt+0xd200>
  40ff88:	cmp	x0, #0x105
  40ff8c:	b.eq	4107e4 <wcrtomb@plt+0xdaa4>  // b.none
  40ff90:	cmp	x0, #0x106
  40ff94:	b.ne	410618 <wcrtomb@plt+0xd8d8>  // b.any
  40ff98:	ldur	q1, [x27, #-40]
  40ff9c:	add	x19, x19, #0x1
  40ffa0:	ldur	q0, [x27, #-16]
  40ffa4:	cmp	x19, x2
  40ffa8:	ldurb	w0, [x27, #-48]
  40ffac:	sub	x27, x27, #0x18
  40ffb0:	ldrb	w1, [x27]
  40ffb4:	add	v0.2d, v0.2d, v1.2d
  40ffb8:	orr	w0, w0, w1
  40ffbc:	sturb	w0, [x27, #-24]
  40ffc0:	stur	q0, [x27, #-16]
  40ffc4:	b.lt	40ff70 <wcrtomb@plt+0xd230>  // b.tstop
  40ffc8:	ldr	x19, [x28, #176]
  40ffcc:	cmp	xzr, x19, lsr #60
  40ffd0:	lsl	x0, x19, #4
  40ffd4:	cset	x20, ne  // ne = any
  40ffd8:	cmp	x0, #0x0
  40ffdc:	csinc	x20, x20, xzr, ge  // ge = tcont
  40ffe0:	cbnz	x20, 410e6c <wcrtomb@plt+0xe12c>
  40ffe4:	bl	418630 <wcrtomb@plt+0x158f0>
  40ffe8:	stp	x0, xzr, [sp, #248]
  40ffec:	ldr	x8, [x28, #152]
  40fff0:	str	x19, [sp, #264]
  40fff4:	cmp	x8, #0x0
  40fff8:	b.le	410048 <wcrtomb@plt+0xd308>
  40fffc:	add	x25, sp, #0x100
  410000:	mov	x19, #0x0                   	// #0
  410004:	mov	x24, #0x0                   	// #0
  410008:	ldr	x21, [x28, #320]
  41000c:	add	x21, x21, x24
  410010:	ldr	x2, [x21, #8]
  410014:	cmp	x2, #0x0
  410018:	b.le	410034 <wcrtomb@plt+0xd2f4>
  41001c:	ldr	x0, [x28, #144]
  410020:	ldr	x0, [x0, x19, lsl #3]
  410024:	cmp	x0, #0x10a
  410028:	sub	x1, x0, #0x100
  41002c:	ccmp	x1, #0x11, #0x2, ne  // ne = any
  410030:	b.ls	410ca0 <wcrtomb@plt+0xdf60>  // b.plast
  410034:	add	x19, x19, #0x1
  410038:	add	x24, x24, #0x18
  41003c:	cmp	x19, x8
  410040:	b.lt	410008 <wcrtomb@plt+0xd2c8>  // b.tstop
  410044:	ldr	x0, [sp, #248]
  410048:	bl	402ae0 <free@plt>
  41004c:	ldr	x0, [x28, #152]
  410050:	bl	418708 <wcrtomb@plt+0x159c8>
  410054:	mov	x19, x0
  410058:	ldr	x7, [x28, #152]
  41005c:	cmp	x7, #0x0
  410060:	b.le	4100d8 <wcrtomb@plt+0xd398>
  410064:	ldr	x4, [x28, #320]
  410068:	mov	w5, #0x8                   	// #8
  41006c:	nop
  410070:	ldr	x0, [x4, #8]
  410074:	cmp	x0, #0x0
  410078:	b.le	4100c8 <wcrtomb@plt+0xd388>
  41007c:	ldr	x2, [x4]
  410080:	add	x0, x2, x0, lsl #4
  410084:	b	4100a4 <wcrtomb@plt+0xd364>
  410088:	ldrb	w1, [x19, x3]
  41008c:	b.ge	4109c8 <wcrtomb@plt+0xdc88>  // b.tcont
  410090:	orr	w1, w1, #0x2
  410094:	strb	w1, [x19, x3]
  410098:	add	x2, x2, #0x10
  41009c:	cmp	x0, x2
  4100a0:	b.eq	4100c8 <wcrtomb@plt+0xd388>  // b.none
  4100a4:	ldr	x3, [x2]
  4100a8:	cmp	x3, x20
  4100ac:	b.ne	410088 <wcrtomb@plt+0xd348>  // b.any
  4100b0:	ldrb	w1, [x19, x20]
  4100b4:	add	x2, x2, #0x10
  4100b8:	cmp	x0, x2
  4100bc:	orr	w1, w1, #0x1
  4100c0:	strb	w1, [x19, x20]
  4100c4:	b.ne	4100a4 <wcrtomb@plt+0xd364>  // b.any
  4100c8:	add	x20, x20, #0x1
  4100cc:	add	x4, x4, #0x18
  4100d0:	cmp	x20, x7
  4100d4:	b.ne	410070 <wcrtomb@plt+0xd330>  // b.any
  4100d8:	ldr	x20, [x28, #176]
  4100dc:	ldrb	w0, [x19]
  4100e0:	cmp	xzr, x20, lsr #60
  4100e4:	orr	w0, w0, #0x10
  4100e8:	strb	w0, [x19]
  4100ec:	cset	x1, ne  // ne = any
  4100f0:	lsl	x0, x20, #4
  4100f4:	tbnz	x20, #59, 410e6c <wcrtomb@plt+0xe12c>
  4100f8:	cbnz	x1, 410e6c <wcrtomb@plt+0xe12c>
  4100fc:	bl	418630 <wcrtomb@plt+0x158f0>
  410100:	stp	x0, xzr, [sp, #248]
  410104:	ldr	x1, [x28, #152]
  410108:	str	x20, [sp, #264]
  41010c:	cmp	xzr, x1, lsr #62
  410110:	lsl	x0, x1, #2
  410114:	cset	x2, ne  // ne = any
  410118:	tbnz	x1, #61, 410e6c <wcrtomb@plt+0xe12c>
  41011c:	cbnz	x2, 410e6c <wcrtomb@plt+0xe12c>
  410120:	bl	418630 <wcrtomb@plt+0x158f0>
  410124:	str	x0, [x28, #336]
  410128:	ldr	x2, [x28, #152]
  41012c:	cmp	x2, #0x0
  410130:	b.le	410214 <wcrtomb@plt+0xd4d4>
  410134:	add	x0, sp, #0x100
  410138:	mov	x23, #0x0                   	// #0
  41013c:	str	x0, [sp, #136]
  410140:	b	410150 <wcrtomb@plt+0xd410>
  410144:	add	x23, x23, #0x1
  410148:	cmp	x23, x2
  41014c:	b.ge	410214 <wcrtomb@plt+0xd4d4>  // b.tcont
  410150:	ldrb	w0, [x19, x23]
  410154:	tbz	w0, #4, 410144 <wcrtomb@plt+0xd404>
  410158:	ldr	x1, [x28, #320]
  41015c:	add	x9, x23, x23, lsl #1
  410160:	ldr	x0, [x28, #336]
  410164:	lsl	x3, x23, #2
  410168:	add	x22, x1, x9, lsl #3
  41016c:	stp	x1, x3, [sp, #120]
  410170:	mov	x27, #0x0                   	// #0
  410174:	str	wzr, [x0, x23, lsl #2]
  410178:	ldr	x11, [x22, #8]
  41017c:	cmp	x11, #0x0
  410180:	b.le	410204 <wcrtomb@plt+0xd4c4>
  410184:	mov	x20, #0x0                   	// #0
  410188:	b	4101bc <wcrtomb@plt+0xd47c>
  41018c:	ldrb	w26, [x19, x24]
  410190:	tst	w26, #0x6
  410194:	b.eq	4109dc <wcrtomb@plt+0xdc9c>  // b.none
  410198:	add	x0, x0, x27, lsl #4
  41019c:	add	x27, x27, #0x1
  4101a0:	ldp	x2, x3, [x3]
  4101a4:	orr	w26, w26, #0x10
  4101a8:	stp	x2, x3, [x0]
  4101ac:	strb	w26, [x19, x24]
  4101b0:	add	x20, x20, #0x1
  4101b4:	cmp	x20, x11
  4101b8:	b.ge	410200 <wcrtomb@plt+0xd4c0>  // b.tcont
  4101bc:	ldr	x0, [x22]
  4101c0:	lsl	x25, x20, #4
  4101c4:	add	x3, x0, x25
  4101c8:	ldr	w1, [x3, #8]
  4101cc:	cbz	w1, 4101b0 <wcrtomb@plt+0xd470>
  4101d0:	ldr	x24, [x0, x25]
  4101d4:	ldr	x5, [x28, #144]
  4101d8:	ldr	x10, [x5, x24, lsl #3]
  4101dc:	tbz	x10, #63, 41018c <wcrtomb@plt+0xd44c>
  4101e0:	ldr	x3, [sp, #128]
  4101e4:	add	x20, x20, #0x1
  4101e8:	ldr	x2, [x28, #336]
  4101ec:	cmp	x20, x11
  4101f0:	ldr	w0, [x2, x3]
  4101f4:	orr	w1, w0, w1
  4101f8:	str	w1, [x2, x3]
  4101fc:	b.lt	4101bc <wcrtomb@plt+0xd47c>  // b.tstop
  410200:	ldr	x2, [x28, #152]
  410204:	str	x27, [x22, #8]
  410208:	add	x23, x23, #0x1
  41020c:	cmp	x23, x2
  410210:	b.lt	410150 <wcrtomb@plt+0xd410>  // b.tstop
  410214:	cmp	xzr, x2, lsr #61
  410218:	lsl	x0, x2, #3
  41021c:	cset	x1, ne  // ne = any
  410220:	tbnz	x2, #60, 410e6c <wcrtomb@plt+0xe12c>
  410224:	cbnz	x1, 410e6c <wcrtomb@plt+0xe12c>
  410228:	bl	418630 <wcrtomb@plt+0x158f0>
  41022c:	mov	x20, x0
  410230:	ldr	x0, [x28, #152]
  410234:	str	xzr, [x20]
  410238:	cmp	x0, #0x1
  41023c:	b.le	410254 <wcrtomb@plt+0xd514>
  410240:	sub	x2, x0, #0x1
  410244:	mov	w1, #0xff                  	// #255
  410248:	add	x0, x20, #0x8
  41024c:	lsl	x2, x2, #3
  410250:	bl	4028d0 <memset@plt>
  410254:	ldr	x1, [x28, #176]
  410258:	cmp	xzr, x1, lsr #61
  41025c:	lsl	x0, x1, #3
  410260:	cset	x2, ne  // ne = any
  410264:	tbnz	x1, #60, 410e6c <wcrtomb@plt+0xe12c>
  410268:	cbnz	x2, 410e6c <wcrtomb@plt+0xe12c>
  41026c:	bl	418630 <wcrtomb@plt+0x158f0>
  410270:	mov	x22, x0
  410274:	ldr	x1, [x28, #176]
  410278:	mov	x2, #0x18                  	// #24
  41027c:	umulh	x0, x1, x2
  410280:	mul	x2, x1, x2
  410284:	cmp	x0, #0x0
  410288:	cset	x0, ne  // ne = any
  41028c:	tbnz	x2, #63, 410e6c <wcrtomb@plt+0xe12c>
  410290:	cbnz	x0, 410e6c <wcrtomb@plt+0xe12c>
  410294:	add	x1, x1, x1, lsl #1
  410298:	mov	x23, #0x1                   	// #1
  41029c:	lsl	x0, x1, #3
  4102a0:	bl	418630 <wcrtomb@plt+0x158f0>
  4102a4:	mov	x21, x0
  4102a8:	ldr	x1, [x28, #176]
  4102ac:	cmp	xzr, x1, lsr #62
  4102b0:	lsl	x0, x1, #2
  4102b4:	cset	x25, ne  // ne = any
  4102b8:	cmp	x0, #0x0
  4102bc:	csel	x25, x25, x23, ge  // ge = tcont
  4102c0:	cbnz	x25, 410e6c <wcrtomb@plt+0xe12c>
  4102c4:	bl	418630 <wcrtomb@plt+0x158f0>
  4102c8:	mov	x27, x0
  4102cc:	ldrb	w1, [x28, #1048]
  4102d0:	cbnz	w1, 410b4c <wcrtomb@plt+0xde0c>
  4102d4:	ldr	x0, [x28, #152]
  4102d8:	mov	x26, #0x0                   	// #0
  4102dc:	ldr	x2, [x28, #320]
  4102e0:	cmp	x0, #0x0
  4102e4:	b.le	410c08 <wcrtomb@plt+0xdec8>
  4102e8:	adrp	x0, 40d000 <wcrtomb@plt+0xa2c0>
  4102ec:	mov	x24, #0x0                   	// #0
  4102f0:	add	x0, x0, #0x350
  4102f4:	mov	x23, #0x1                   	// #1
  4102f8:	str	x0, [sp, #96]
  4102fc:	nop
  410300:	add	x1, x24, x24, lsl #1
  410304:	ldr	x4, [x20, x24, lsl #3]
  410308:	lsl	x3, x1, #3
  41030c:	add	x5, x2, x3
  410310:	cmn	x4, #0x1
  410314:	ldr	x0, [x2, x1, lsl #3]
  410318:	b.eq	410b90 <wcrtomb@plt+0xde50>  // b.none
  41031c:	ldr	x2, [x28, #144]
  410320:	add	x1, x4, x4, lsl #1
  410324:	ldr	x8, [x28, #336]
  410328:	add	x1, x21, x1, lsl #3
  41032c:	ldr	x2, [x2, x24, lsl #3]
  410330:	str	x2, [x22, x4, lsl #3]
  410334:	ldp	x2, x3, [x5]
  410338:	stp	x2, x3, [x1]
  41033c:	ldr	w3, [x8, x24, lsl #2]
  410340:	ldr	x2, [x5, #16]
  410344:	str	w3, [x27, x4, lsl #2]
  410348:	str	x2, [x1, #16]
  41034c:	cbz	x26, 41035c <wcrtomb@plt+0xd61c>
  410350:	ldr	x1, [x28, #280]
  410354:	ldrb	w1, [x1, x24]
  410358:	strb	w1, [x26, x4]
  41035c:	ldr	x1, [x5, #8]
  410360:	cmp	x1, #0x0
  410364:	b.le	41038c <wcrtomb@plt+0xd64c>
  410368:	mov	x2, x0
  41036c:	add	x5, x0, x1, lsl #4
  410370:	ldr	x4, [x2]
  410374:	ldr	x3, [x20, x4, lsl #3]
  410378:	cmn	x3, #0x1
  41037c:	b.eq	410b74 <wcrtomb@plt+0xde34>  // b.none
  410380:	str	x3, [x2], #16
  410384:	cmp	x5, x2
  410388:	b.ne	410370 <wcrtomb@plt+0xd630>  // b.any
  41038c:	ldr	x3, [sp, #96]
  410390:	mov	x2, #0x10                  	// #16
  410394:	bl	402730 <qsort@plt>
  410398:	ldr	x2, [x28, #320]
  41039c:	mov	x0, x2
  4103a0:	ldr	x1, [x28, #152]
  4103a4:	add	x24, x24, #0x1
  4103a8:	cmp	x24, x1
  4103ac:	b.lt	410300 <wcrtomb@plt+0xd5c0>  // b.tstop
  4103b0:	mov	x1, #0x0                   	// #0
  4103b4:	cbnz	x26, 4103c0 <wcrtomb@plt+0xd680>
  4103b8:	b	410c08 <wcrtomb@plt+0xdec8>
  4103bc:	ldr	x0, [x28, #320]
  4103c0:	add	x4, x21, x1
  4103c4:	ldr	x2, [x28, #144]
  4103c8:	add	x0, x0, x1
  4103cc:	ldr	x3, [x22, x25, lsl #3]
  4103d0:	add	x1, x1, #0x18
  4103d4:	ldr	x5, [x28, #280]
  4103d8:	ldr	x8, [x28, #336]
  4103dc:	str	x3, [x2, x25, lsl #3]
  4103e0:	ldp	x2, x3, [x4]
  4103e4:	stp	x2, x3, [x0]
  4103e8:	ldr	w9, [x27, x25, lsl #2]
  4103ec:	ldr	x3, [x4, #16]
  4103f0:	str	x3, [x0, #16]
  4103f4:	ldrb	w2, [x26, x25]
  4103f8:	str	w9, [x8, x25, lsl #2]
  4103fc:	strb	w2, [x5, x25]
  410400:	add	x25, x25, #0x1
  410404:	cmp	x25, x23
  410408:	b.ne	4103bc <wcrtomb@plt+0xd67c>  // b.any
  41040c:	str	x23, [x28, #152]
  410410:	mov	x0, x22
  410414:	str	x23, [x28, #176]
  410418:	bl	402ae0 <free@plt>
  41041c:	mov	x0, x21
  410420:	bl	402ae0 <free@plt>
  410424:	mov	x0, x27
  410428:	bl	402ae0 <free@plt>
  41042c:	mov	x0, x26
  410430:	bl	402ae0 <free@plt>
  410434:	mov	x0, x20
  410438:	bl	402ae0 <free@plt>
  41043c:	ldr	x0, [sp, #248]
  410440:	bl	402ae0 <free@plt>
  410444:	mov	x0, x19
  410448:	bl	402ae0 <free@plt>
  41044c:	mov	x0, #0x10                  	// #16
  410450:	bl	418630 <wcrtomb@plt+0x158f0>
  410454:	mov	x2, x0
  410458:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41045c:	ldr	x1, [x28, #152]
  410460:	mov	w3, #0x1ff                 	// #511
  410464:	ldr	q0, [x0, #1088]
  410468:	str	xzr, [x2]
  41046c:	cmp	xzr, x1, lsr #62
  410470:	lsl	x0, x1, #2
  410474:	str	w3, [x2, #8]
  410478:	cset	x19, ne  // ne = any
  41047c:	str	x2, [sp, #192]
  410480:	cmp	x0, #0x0
  410484:	stur	q0, [sp, #200]
  410488:	csinc	x19, x19, xzr, ge  // ge = tcont
  41048c:	cbnz	x19, 410e6c <wcrtomb@plt+0xe12c>
  410490:	bl	418630 <wcrtomb@plt+0x158f0>
  410494:	str	x0, [x28, #344]
  410498:	ldr	x9, [x28, #152]
  41049c:	cmp	x9, #0x0
  4104a0:	b.le	410554 <wcrtomb@plt+0xd814>
  4104a4:	ldr	x7, [x28, #320]
  4104a8:	mov	w3, #0x49                  	// #73
  4104ac:	ldr	x8, [x28, #336]
  4104b0:	mov	w10, #0x4                   	// #4
  4104b4:	nop
  4104b8:	str	wzr, [x0, x19, lsl #2]
  4104bc:	ldr	w1, [x8, x19, lsl #2]
  4104c0:	eor	w1, w1, w1, asr #2
  4104c4:	ands	w1, w1, w3
  4104c8:	csel	w1, w1, w10, eq  // eq = none
  4104cc:	str	w1, [x0, x19, lsl #2]
  4104d0:	ldr	w2, [x8, x19, lsl #2]
  4104d4:	eor	w2, w2, w2, asr #1
  4104d8:	tst	w2, w3
  4104dc:	b.eq	4104e8 <wcrtomb@plt+0xd7a8>  // b.none
  4104e0:	orr	w1, w1, #0x2
  4104e4:	str	w1, [x0, x19, lsl #2]
  4104e8:	ldr	x5, [x7, #8]
  4104ec:	cmp	x5, #0x0
  4104f0:	b.le	410544 <wcrtomb@plt+0xd804>
  4104f4:	ldr	x2, [x7]
  4104f8:	add	x5, x2, x5, lsl #4
  4104fc:	nop
  410500:	ldr	w1, [x2, #8]
  410504:	eor	w4, w1, w1, asr #2
  410508:	tst	w4, w3
  41050c:	b.eq	410520 <wcrtomb@plt+0xd7e0>  // b.none
  410510:	ldr	w1, [x0, x19, lsl #2]
  410514:	orr	w1, w1, #0x4
  410518:	str	w1, [x0, x19, lsl #2]
  41051c:	ldr	w1, [x2, #8]
  410520:	eor	w1, w1, w1, asr #1
  410524:	tst	w1, w3
  410528:	b.eq	410538 <wcrtomb@plt+0xd7f8>  // b.none
  41052c:	ldr	w1, [x0, x19, lsl #2]
  410530:	orr	w1, w1, #0x2
  410534:	str	w1, [x0, x19, lsl #2]
  410538:	add	x2, x2, #0x10
  41053c:	cmp	x2, x5
  410540:	b.ne	410500 <wcrtomb@plt+0xd7c0>  // b.any
  410544:	add	x19, x19, #0x1
  410548:	add	x7, x7, #0x18
  41054c:	cmp	x19, x9
  410550:	b.ne	4104b8 <wcrtomb@plt+0xd778>  // b.any
  410554:	ldp	x1, x4, [sp, #192]
  410558:	cmp	x4, #0x0
  41055c:	b.le	410e04 <wcrtomb@plt+0xe0c4>
  410560:	add	x4, x1, x4, lsl #4
  410564:	mov	w2, #0x0                   	// #0
  410568:	ldr	x3, [x1], #16
  41056c:	cmp	x4, x1
  410570:	ldr	w3, [x0, x3, lsl #2]
  410574:	orr	w2, w2, w3
  410578:	b.ne	410568 <wcrtomb@plt+0xd828>  // b.any
  41057c:	eor	w20, w2, #0x7
  410580:	and	w19, w2, #0x2
  410584:	tbz	w2, #2, 410598 <wcrtomb@plt+0xd858>
  410588:	add	x1, sp, #0xc0
  41058c:	mov	x0, x28
  410590:	mov	w2, #0x4                   	// #4
  410594:	bl	40ddb0 <wcrtomb@plt+0xb070>
  410598:	add	x1, sp, #0xc0
  41059c:	mov	w2, w20
  4105a0:	mov	x0, x28
  4105a4:	bl	40ddb0 <wcrtomb@plt+0xb070>
  4105a8:	mov	w1, w0
  4105ac:	str	w0, [x28, #364]
  4105b0:	sxtw	x0, w0
  4105b4:	str	x0, [x28, #400]
  4105b8:	cbz	w19, 4105d0 <wcrtomb@plt+0xd890>
  4105bc:	add	x1, sp, #0xc0
  4105c0:	mov	x0, x28
  4105c4:	mov	w2, #0x2                   	// #2
  4105c8:	bl	40ddb0 <wcrtomb@plt+0xb070>
  4105cc:	mov	w1, w0
  4105d0:	ldr	x0, [sp, #168]
  4105d4:	add	w1, w1, #0x1
  4105d8:	str	wzr, [x28, #360]
  4105dc:	str	w1, [x28, #364]
  4105e0:	bl	402ae0 <free@plt>
  4105e4:	ldr	x0, [sp, #160]
  4105e8:	bl	402ae0 <free@plt>
  4105ec:	ldr	x0, [sp, #224]
  4105f0:	bl	402ae0 <free@plt>
  4105f4:	ldr	x0, [sp, #192]
  4105f8:	bl	402ae0 <free@plt>
  4105fc:	ldp	x19, x20, [sp, #16]
  410600:	ldp	x21, x22, [sp, #32]
  410604:	ldp	x23, x24, [sp, #48]
  410608:	ldp	x25, x26, [sp, #64]
  41060c:	ldp	x27, x28, [sp, #80]
  410610:	ldp	x29, x30, [sp], #272
  410614:	ret
  410618:	ldr	x3, [sp, #128]
  41061c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  410620:	ldr	x4, [sp, #104]
  410624:	cmp	x0, #0x112
  410628:	ldr	q0, [x1, #1088]
  41062c:	str	x19, [x3]
  410630:	str	x19, [x4]
  410634:	mov	w0, #0x1ff                 	// #511
  410638:	str	w0, [x3, #8]
  41063c:	cset	w1, eq  // eq = none
  410640:	add	x3, x3, #0x10
  410644:	add	x27, x27, #0x18
  410648:	sturb	w1, [x27, #-24]
  41064c:	stur	q0, [x27, #-16]
  410650:	str	w0, [x4, #8]
  410654:	add	x0, x4, #0x10
  410658:	str	x0, [sp, #104]
  41065c:	str	x3, [sp, #128]
  410660:	b	40ff64 <wcrtomb@plt+0xd224>
  410664:	mov	w0, #0x1                   	// #1
  410668:	add	x27, x27, #0x18
  41066c:	sturb	w0, [x27, #-24]
  410670:	stp	xzr, xzr, [x27, #-16]
  410674:	b	40ff64 <wcrtomb@plt+0xd224>
  410678:	ldp	x0, x22, [x27, #-16]
  41067c:	str	x0, [sp, #200]
  410680:	ldr	x3, [sp, #104]
  410684:	sub	x23, x27, #0x18
  410688:	sub	x0, x3, x0, lsl #4
  41068c:	str	x0, [sp, #192]
  410690:	cmp	x22, #0x0
  410694:	b.le	410d80 <wcrtomb@plt+0xe040>
  410698:	ldr	x0, [sp, #128]
  41069c:	mov	x20, #0x0                   	// #0
  4106a0:	sub	x26, x0, x22, lsl #4
  4106a4:	b	4106c0 <wcrtomb@plt+0xd980>
  4106a8:	str	x2, [x4, #8]
  4106ac:	cbnz	x2, 4107ac <wcrtomb@plt+0xda6c>
  4106b0:	add	x20, x20, #0x1
  4106b4:	add	x26, x26, #0x10
  4106b8:	cmp	x22, x20
  4106bc:	b.eq	4107cc <wcrtomb@plt+0xda8c>  // b.none
  4106c0:	ldr	x2, [x26]
  4106c4:	add	x0, sp, #0xc0
  4106c8:	ldr	x3, [x28, #320]
  4106cc:	mov	w4, #0xffffffff            	// #-1
  4106d0:	add	x2, x2, x2, lsl #1
  4106d4:	add	x5, sp, #0xe0
  4106d8:	mov	x1, x21
  4106dc:	add	x2, x3, x2, lsl #3
  4106e0:	add	x3, x2, #0x8
  4106e4:	bl	40da30 <wcrtomb@plt+0xacf0>
  4106e8:	ldr	x0, [x26]
  4106ec:	ldr	x24, [x28, #320]
  4106f0:	add	x25, x0, x0, lsl #1
  4106f4:	ldr	x2, [sp, #232]
  4106f8:	add	x4, x24, x25, lsl #3
  4106fc:	ldr	x0, [x4, #16]
  410700:	cmp	x0, x2
  410704:	b.ge	4106a8 <wcrtomb@plt+0xd968>  // b.tcont
  410708:	ldr	x0, [x24, x25, lsl #3]
  41070c:	str	x4, [sp, #112]
  410710:	bl	402ae0 <free@plt>
  410714:	ldr	x4, [sp, #112]
  410718:	ldr	x2, [sp, #232]
  41071c:	ldr	x0, [x4, #16]
  410720:	asr	x3, x0, #1
  410724:	adds	x3, x0, x3
  410728:	b.vs	410e7c <wcrtomb@plt+0xe13c>
  41072c:	asr	x1, x3, #63
  410730:	sbfx	x10, x3, #59, #1
  410734:	lsl	x11, x3, #4
  410738:	extr	x1, x1, x3, #60
  41073c:	cmp	x10, x1
  410740:	b.ne	410e7c <wcrtomb@plt+0xe13c>  // b.any
  410744:	cmp	x11, #0x7f
  410748:	mov	x1, #0x80                  	// #128
  41074c:	mov	x5, #0x8                   	// #8
  410750:	csel	x1, x11, x1, gt
  410754:	csel	x3, x3, x5, gt
  410758:	str	xzr, [x4, #16]
  41075c:	cmp	x2, x3
  410760:	b.le	410788 <wcrtomb@plt+0xda48>
  410764:	sub	x3, x2, x0
  410768:	adds	x3, x0, x3
  41076c:	b.vs	410e6c <wcrtomb@plt+0xe12c>
  410770:	asr	x0, x3, #63
  410774:	sbfx	x2, x3, #59, #1
  410778:	lsl	x1, x3, #4
  41077c:	extr	x0, x0, x3, #60
  410780:	cmp	x2, x0
  410784:	b.ne	410e6c <wcrtomb@plt+0xe12c>  // b.any
  410788:	mov	x0, #0x0                   	// #0
  41078c:	stp	x4, x3, [sp, #112]
  410790:	bl	418660 <wcrtomb@plt+0x15920>
  410794:	ldp	x4, x3, [sp, #112]
  410798:	str	x3, [x4, #16]
  41079c:	ldr	x2, [sp, #232]
  4107a0:	str	x0, [x24, x25, lsl #3]
  4107a4:	str	x2, [x4, #8]
  4107a8:	cbz	x2, 4106b0 <wcrtomb@plt+0xd970>
  4107ac:	ldr	x0, [x24, x25, lsl #3]
  4107b0:	lsl	x2, x2, #4
  4107b4:	ldr	x1, [sp, #224]
  4107b8:	add	x20, x20, #0x1
  4107bc:	add	x26, x26, #0x10
  4107c0:	bl	402650 <memcpy@plt>
  4107c4:	cmp	x22, x20
  4107c8:	b.ne	4106c0 <wcrtomb@plt+0xd980>  // b.any
  4107cc:	ldp	x0, x2, [x28, #144]
  4107d0:	ldr	x1, [sp, #96]
  4107d4:	ldr	x0, [x0, x1]
  4107d8:	cmp	x0, #0x103
  4107dc:	b.eq	40ff64 <wcrtomb@plt+0xd224>  // b.none
  4107e0:	b	40ff5c <wcrtomb@plt+0xd21c>
  4107e4:	ldp	x1, x0, [x27, #-16]
  4107e8:	stp	x0, x1, [sp, #144]
  4107ec:	sub	x23, x27, #0x18
  4107f0:	ldur	x22, [x27, #-32]
  4107f4:	str	x1, [sp, #200]
  4107f8:	mov	x20, #0x0                   	// #0
  4107fc:	lsl	x0, x0, #4
  410800:	str	x0, [sp, #176]
  410804:	lsl	x3, x22, #4
  410808:	str	x3, [sp, #120]
  41080c:	add	x0, x0, x3
  410810:	sub	x3, x27, #0x30
  410814:	str	x3, [sp, #112]
  410818:	cmp	x22, #0x0
  41081c:	ldr	x3, [sp, #104]
  410820:	sub	x1, x3, x1, lsl #4
  410824:	str	x1, [sp, #136]
  410828:	str	x1, [sp, #192]
  41082c:	ldr	x1, [sp, #128]
  410830:	sub	x0, x1, x0
  410834:	str	x0, [sp, #184]
  410838:	mov	x27, x0
  41083c:	b.gt	41085c <wcrtomb@plt+0xdb1c>
  410840:	b	410964 <wcrtomb@plt+0xdc24>
  410844:	str	x2, [x25, #8]
  410848:	cbnz	x2, 410940 <wcrtomb@plt+0xdc00>
  41084c:	add	x20, x20, #0x1
  410850:	add	x27, x27, #0x10
  410854:	cmp	x22, x20
  410858:	b.eq	410960 <wcrtomb@plt+0xdc20>  // b.none
  41085c:	ldr	x2, [x27]
  410860:	add	x0, sp, #0xc0
  410864:	ldr	x3, [x28, #320]
  410868:	add	x5, sp, #0xe0
  41086c:	add	x2, x2, x2, lsl #1
  410870:	mov	x1, x21
  410874:	mov	w4, #0xffffffff            	// #-1
  410878:	add	x2, x3, x2, lsl #3
  41087c:	add	x3, x2, #0x8
  410880:	bl	40da30 <wcrtomb@plt+0xacf0>
  410884:	ldr	x0, [x27]
  410888:	ldr	x26, [x28, #320]
  41088c:	add	x24, x0, x0, lsl #1
  410890:	ldr	x2, [sp, #232]
  410894:	add	x25, x26, x24, lsl #3
  410898:	ldr	x0, [x25, #16]
  41089c:	cmp	x0, x2
  4108a0:	b.ge	410844 <wcrtomb@plt+0xdb04>  // b.tcont
  4108a4:	ldr	x0, [x26, x24, lsl #3]
  4108a8:	bl	402ae0 <free@plt>
  4108ac:	ldr	x0, [x25, #16]
  4108b0:	ldr	x2, [sp, #232]
  4108b4:	asr	x3, x0, #1
  4108b8:	adds	x3, x0, x3
  4108bc:	b.vs	410e70 <wcrtomb@plt+0xe130>
  4108c0:	asr	x1, x3, #63
  4108c4:	sbfx	x9, x3, #59, #1
  4108c8:	lsl	x10, x3, #4
  4108cc:	extr	x1, x1, x3, #60
  4108d0:	cmp	x9, x1
  4108d4:	b.ne	410e70 <wcrtomb@plt+0xe130>  // b.any
  4108d8:	cmp	x10, #0x7f
  4108dc:	mov	x1, #0x80                  	// #128
  4108e0:	mov	x4, #0x8                   	// #8
  4108e4:	csel	x1, x10, x1, gt
  4108e8:	csel	x3, x3, x4, gt
  4108ec:	str	xzr, [x25, #16]
  4108f0:	cmp	x2, x3
  4108f4:	b.le	41091c <wcrtomb@plt+0xdbdc>
  4108f8:	sub	x3, x2, x0
  4108fc:	adds	x3, x0, x3
  410900:	b.vs	410e6c <wcrtomb@plt+0xe12c>
  410904:	asr	x0, x3, #63
  410908:	sbfx	x2, x3, #59, #1
  41090c:	lsl	x1, x3, #4
  410910:	extr	x0, x0, x3, #60
  410914:	cmp	x2, x0
  410918:	b.ne	410e6c <wcrtomb@plt+0xe12c>  // b.any
  41091c:	mov	x0, #0x0                   	// #0
  410920:	str	x3, [sp, #96]
  410924:	bl	418660 <wcrtomb@plt+0x15920>
  410928:	ldr	x3, [sp, #96]
  41092c:	str	x3, [x25, #16]
  410930:	ldr	x2, [sp, #232]
  410934:	str	x0, [x26, x24, lsl #3]
  410938:	str	x2, [x25, #8]
  41093c:	cbz	x2, 41084c <wcrtomb@plt+0xdb0c>
  410940:	ldr	x0, [x26, x24, lsl #3]
  410944:	lsl	x2, x2, #4
  410948:	ldr	x1, [sp, #224]
  41094c:	add	x20, x20, #0x1
  410950:	add	x27, x27, #0x10
  410954:	bl	402650 <memcpy@plt>
  410958:	cmp	x22, x20
  41095c:	b.ne	41085c <wcrtomb@plt+0xdb1c>  // b.any
  410960:	ldr	x2, [x28, #152]
  410964:	ldr	x0, [sp, #112]
  410968:	ldrb	w7, [x0]
  41096c:	cbz	w7, 41098c <wcrtomb@plt+0xdc4c>
  410970:	ldr	x3, [sp, #104]
  410974:	mov	x1, x0
  410978:	str	x3, [sp, #136]
  41097c:	ldr	x0, [x0, #8]
  410980:	ldr	x3, [sp, #152]
  410984:	add	x0, x0, x3
  410988:	str	x0, [x1, #8]
  41098c:	ldrb	w8, [x23]
  410990:	cbz	w8, 410bb4 <wcrtomb@plt+0xde74>
  410994:	ldr	x0, [sp, #144]
  410998:	add	x22, x0, x22
  41099c:	ldr	x0, [sp, #112]
  4109a0:	mov	x1, x0
  4109a4:	str	x22, [x0, #16]
  4109a8:	cmp	w7, #0x0
  4109ac:	mov	x27, x23
  4109b0:	ccmp	w8, #0x0, #0x4, ne  // ne = any
  4109b4:	ldr	x0, [sp, #136]
  4109b8:	str	x0, [sp, #104]
  4109bc:	cset	w0, ne  // ne = any
  4109c0:	strb	w0, [x1]
  4109c4:	b	40ff64 <wcrtomb@plt+0xd224>
  4109c8:	ands	w1, w1, #0x8
  4109cc:	orr	w1, w1, #0x4
  4109d0:	csel	w1, w5, w1, eq  // eq = none
  4109d4:	strb	w1, [x19, x3]
  4109d8:	b	410098 <wcrtomb@plt+0xd358>
  4109dc:	cbz	x27, 410198 <wcrtomb@plt+0xd458>
  4109e0:	mov	x2, x0
  4109e4:	mov	x7, #0x0                   	// #0
  4109e8:	ldr	w4, [x2, #8]
  4109ec:	cmp	w1, w4
  4109f0:	b.ne	410a9c <wcrtomb@plt+0xdd5c>  // b.any
  4109f4:	ldr	x21, [x2]
  4109f8:	ldrb	w12, [x19, x21]
  4109fc:	tst	w12, #0x6
  410a00:	b.ne	410a9c <wcrtomb@plt+0xdd5c>  // b.any
  410a04:	ldr	x13, [x5, x21, lsl #3]
  410a08:	cmp	x10, x13
  410a0c:	b.ne	410a9c <wcrtomb@plt+0xdd5c>  // b.any
  410a10:	eor	w12, w26, w12
  410a14:	tbnz	w12, #0, 410a9c <wcrtomb@plt+0xdd5c>
  410a18:	ldr	x1, [sp, #120]
  410a1c:	add	x0, x24, x24, lsl #1
  410a20:	add	x10, x1, x0, lsl #3
  410a24:	ldr	x13, [x10, #8]
  410a28:	tbnz	w26, #0, 410b00 <wcrtomb@plt+0xddc0>
  410a2c:	ldr	x0, [sp, #120]
  410a30:	add	x4, x21, x21, lsl #1
  410a34:	cmp	x13, #0x3
  410a38:	add	x21, x0, x4, lsl #3
  410a3c:	b.gt	410ac4 <wcrtomb@plt+0xdd84>
  410a40:	cmp	x13, #0x0
  410a44:	b.le	410a84 <wcrtomb@plt+0xdd44>
  410a48:	mov	x3, #0x0                   	// #0
  410a4c:	nop
  410a50:	ldr	x0, [x10]
  410a54:	mov	x2, x21
  410a58:	str	x7, [sp, #112]
  410a5c:	add	x0, x0, x3, lsl #4
  410a60:	add	x3, x3, #0x1
  410a64:	stp	x3, x10, [sp, #96]
  410a68:	ldp	x0, x1, [x0]
  410a6c:	bl	40d888 <wcrtomb@plt+0xab48>
  410a70:	ldp	x3, x10, [sp, #96]
  410a74:	ldr	x7, [sp, #112]
  410a78:	ldr	x0, [x10, #8]
  410a7c:	cmp	x3, x0
  410a80:	b.lt	410a50 <wcrtomb@plt+0xdd10>  // b.tstop
  410a84:	ldr	x11, [x22, #8]
  410a88:	cmp	x27, x7
  410a8c:	b.gt	4101b0 <wcrtomb@plt+0xd470>
  410a90:	ldr	x0, [x22]
  410a94:	add	x3, x0, x25
  410a98:	b	410198 <wcrtomb@plt+0xd458>
  410a9c:	add	x7, x7, #0x1
  410aa0:	add	x2, x2, #0x10
  410aa4:	cmp	x7, x27
  410aa8:	b.ne	4109e8 <wcrtomb@plt+0xdca8>  // b.any
  410aac:	b	410198 <wcrtomb@plt+0xd458>
  410ab0:	ldr	x0, [sp, #120]
  410ab4:	add	x4, x21, x21, lsl #1
  410ab8:	cmp	x13, #0x3
  410abc:	add	x21, x0, x4, lsl #3
  410ac0:	b.le	410a48 <wcrtomb@plt+0xdd08>
  410ac4:	add	x1, x10, #0x8
  410ac8:	mov	x0, x10
  410acc:	add	x5, sp, #0xf8
  410ad0:	add	x3, x21, #0x8
  410ad4:	mov	x2, x21
  410ad8:	mov	w4, #0xffffffff            	// #-1
  410adc:	str	x7, [sp, #96]
  410ae0:	bl	40da30 <wcrtomb@plt+0xacf0>
  410ae4:	ldr	x1, [sp, #136]
  410ae8:	mov	x2, x21
  410aec:	add	x0, sp, #0xf8
  410af0:	bl	40d540 <wcrtomb@plt+0xa800>
  410af4:	ldr	x11, [x22, #8]
  410af8:	ldr	x7, [sp, #96]
  410afc:	b	410a88 <wcrtomb@plt+0xdd48>
  410b00:	cmp	x13, #0x0
  410b04:	ldr	x1, [x1, x0, lsl #3]
  410b08:	b.le	410a88 <wcrtomb@plt+0xdd48>
  410b0c:	mov	x11, x13
  410b10:	mov	x5, #0x0                   	// #0
  410b14:	b	410b24 <wcrtomb@plt+0xdde4>
  410b18:	add	x5, x2, #0x1
  410b1c:	cmp	x11, x5
  410b20:	b.le	410ab0 <wcrtomb@plt+0xdd70>
  410b24:	add	x2, x11, x5
  410b28:	asr	x2, x2, #1
  410b2c:	lsl	x3, x2, #4
  410b30:	add	x0, x1, x3
  410b34:	ldr	x12, [x1, x3]
  410b38:	cmp	x24, x12
  410b3c:	b.gt	410b18 <wcrtomb@plt+0xddd8>
  410b40:	b.eq	410c64 <wcrtomb@plt+0xdf24>  // b.none
  410b44:	mov	x11, x2
  410b48:	b	410b1c <wcrtomb@plt+0xdddc>
  410b4c:	ldr	x0, [x28, #176]
  410b50:	tbnz	x0, #63, 410e6c <wcrtomb@plt+0xe12c>
  410b54:	bl	418630 <wcrtomb@plt+0x158f0>
  410b58:	mov	x26, x0
  410b5c:	ldr	x1, [x28, #152]
  410b60:	ldr	x2, [x28, #320]
  410b64:	cmp	x1, #0x0
  410b68:	mov	x0, x2
  410b6c:	b.gt	4102e8 <wcrtomb@plt+0xd5a8>
  410b70:	b	4103b0 <wcrtomb@plt+0xd670>
  410b74:	str	x23, [x20, x4, lsl #3]
  410b78:	add	x3, x23, #0x1
  410b7c:	str	x23, [x2], #16
  410b80:	mov	x23, x3
  410b84:	cmp	x5, x2
  410b88:	b.ne	410370 <wcrtomb@plt+0xd630>  // b.any
  410b8c:	b	41038c <wcrtomb@plt+0xd64c>
  410b90:	stp	x1, x3, [sp, #104]
  410b94:	bl	402ae0 <free@plt>
  410b98:	ldp	x1, x3, [sp, #104]
  410b9c:	ldr	x2, [x28, #320]
  410ba0:	mov	x0, x2
  410ba4:	add	x3, x2, x3
  410ba8:	str	xzr, [x2, x1, lsl #3]
  410bac:	str	xzr, [x3, #8]
  410bb0:	b	4103a0 <wcrtomb@plt+0xd660>
  410bb4:	ldr	x1, [sp, #144]
  410bb8:	ldr	x0, [sp, #184]
  410bbc:	cmp	x1, #0x0
  410bc0:	ldr	x1, [sp, #176]
  410bc4:	add	x1, x0, x1
  410bc8:	b.le	410be8 <wcrtomb@plt+0xdea8>
  410bcc:	nop
  410bd0:	ldr	x3, [sp, #120]
  410bd4:	add	x3, x0, x3
  410bd8:	ldp	x4, x5, [x3]
  410bdc:	stp	x4, x5, [x0], #16
  410be0:	cmp	x1, x0
  410be4:	b.ne	410bd0 <wcrtomb@plt+0xde90>  // b.any
  410be8:	ldp	x1, x0, [sp, #120]
  410bec:	sub	x0, x0, x1
  410bf0:	str	x0, [sp, #128]
  410bf4:	ldr	x0, [sp, #112]
  410bf8:	ldr	x1, [sp, #144]
  410bfc:	str	x1, [x0, #16]
  410c00:	mov	x1, x0
  410c04:	b	4109a8 <wcrtomb@plt+0xdc68>
  410c08:	ldr	x12, [x28, #144]
  410c0c:	lsl	x11, x23, #3
  410c10:	ldr	x10, [x28, #336]
  410c14:	mov	x5, #0x0                   	// #0
  410c18:	mov	x4, #0x0                   	// #0
  410c1c:	mov	x3, #0x0                   	// #0
  410c20:	add	x9, x21, x4
  410c24:	add	x8, x2, x4
  410c28:	ldr	x0, [x22, x3]
  410c2c:	str	x0, [x12, x3]
  410c30:	ldp	x0, x1, [x9]
  410c34:	stp	x0, x1, [x8]
  410c38:	ldr	w0, [x27, x5]
  410c3c:	ldr	x1, [x9, #16]
  410c40:	str	x1, [x8, #16]
  410c44:	str	w0, [x10, x5]
  410c48:	add	x3, x3, #0x8
  410c4c:	cmp	x11, x3
  410c50:	add	x4, x4, #0x18
  410c54:	add	x5, x5, #0x4
  410c58:	b.ne	410c20 <wcrtomb@plt+0xdee0>  // b.any
  410c5c:	mov	x26, #0x0                   	// #0
  410c60:	b	41040c <wcrtomb@plt+0xd6cc>
  410c64:	add	x5, x2, #0x1
  410c68:	cmp	x5, x13
  410c6c:	b.ge	410e60 <wcrtomb@plt+0xe120>  // b.tcont
  410c70:	sub	x13, x13, #0x1
  410c74:	add	x3, x3, #0x10
  410c78:	sub	x2, x13, x2
  410c7c:	add	x1, x1, x3
  410c80:	stp	x13, x7, [sp, #96]
  410c84:	lsl	x2, x2, #4
  410c88:	str	x10, [sp, #112]
  410c8c:	bl	402660 <memmove@plt>
  410c90:	ldr	x10, [sp, #112]
  410c94:	ldp	x13, x7, [sp, #96]
  410c98:	str	x13, [x10, #8]
  410c9c:	b	410a2c <wcrtomb@plt+0xdcec>
  410ca0:	sub	x0, x0, #0x10c
  410ca4:	mov	w22, #0x1ff                 	// #511
  410ca8:	cmp	x0, #0x5
  410cac:	b.hi	410cc0 <wcrtomb@plt+0xdf80>  // b.pmore
  410cb0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  410cb4:	add	x1, x1, #0x188
  410cb8:	add	x1, x1, #0x20
  410cbc:	ldr	w22, [x1, x0, lsl #2]
  410cc0:	mov	x7, x2
  410cc4:	mov	x5, #0x0                   	// #0
  410cc8:	ldr	x1, [x21]
  410ccc:	b	410cdc <wcrtomb@plt+0xdf9c>
  410cd0:	add	x5, x3, #0x1
  410cd4:	cmp	x7, x5
  410cd8:	b.le	410d08 <wcrtomb@plt+0xdfc8>
  410cdc:	add	x3, x5, x7
  410ce0:	asr	x3, x3, #1
  410ce4:	lsl	x4, x3, #4
  410ce8:	add	x0, x1, x4
  410cec:	ldr	x9, [x1, x4]
  410cf0:	cmp	x9, x19
  410cf4:	b.lt	410cd0 <wcrtomb@plt+0xdf90>  // b.tstop
  410cf8:	b.eq	410e24 <wcrtomb@plt+0xe0e4>  // b.none
  410cfc:	mov	x7, x3
  410d00:	cmp	x7, x5
  410d04:	b.gt	410cdc <wcrtomb@plt+0xdf9c>
  410d08:	mov	x21, #0x0                   	// #0
  410d0c:	b	410d1c <wcrtomb@plt+0xdfdc>
  410d10:	add	x21, x21, #0x1
  410d14:	cmp	x21, x8
  410d18:	b.ge	410034 <wcrtomb@plt+0xd2f4>  // b.tcont
  410d1c:	cmp	x21, x19
  410d20:	b.eq	410d10 <wcrtomb@plt+0xdfd0>  // b.none
  410d24:	ldr	x26, [x28, #320]
  410d28:	add	x0, x21, x21, lsl #1
  410d2c:	add	x27, x26, x0, lsl #3
  410d30:	ldr	x10, [x27, #8]
  410d34:	cmp	x10, #0x0
  410d38:	b.le	410d10 <wcrtomb@plt+0xdfd0>
  410d3c:	mov	x7, x10
  410d40:	mov	x4, #0x0                   	// #0
  410d44:	ldr	x1, [x26, x0, lsl #3]
  410d48:	b	410d58 <wcrtomb@plt+0xe018>
  410d4c:	add	x4, x2, #0x1
  410d50:	cmp	x7, x4
  410d54:	b.le	410d10 <wcrtomb@plt+0xdfd0>
  410d58:	add	x2, x4, x7
  410d5c:	asr	x2, x2, #1
  410d60:	lsl	x3, x2, #4
  410d64:	add	x0, x1, x3
  410d68:	ldr	x9, [x1, x3]
  410d6c:	cmp	x9, x19
  410d70:	b.lt	410d4c <wcrtomb@plt+0xe00c>  // b.tstop
  410d74:	b.eq	410d8c <wcrtomb@plt+0xe04c>  // b.none
  410d78:	mov	x7, x2
  410d7c:	b	410d50 <wcrtomb@plt+0xe010>
  410d80:	lsl	x0, x19, #3
  410d84:	ldr	x0, [x1, x0]
  410d88:	b	4107d8 <wcrtomb@plt+0xda98>
  410d8c:	add	x5, x2, #0x1
  410d90:	ldr	w4, [x0, #8]
  410d94:	cmp	x5, x10
  410d98:	b.ge	410dc0 <wcrtomb@plt+0xe080>  // b.tcont
  410d9c:	sub	x23, x10, #0x1
  410da0:	add	x3, x3, #0x10
  410da4:	sub	x2, x23, x2
  410da8:	add	x1, x1, x3
  410dac:	str	w4, [sp, #96]
  410db0:	lsl	x2, x2, #4
  410db4:	bl	402660 <memmove@plt>
  410db8:	ldr	w4, [sp, #96]
  410dbc:	mov	x2, x23
  410dc0:	str	x2, [x27, #8]
  410dc4:	ands	w23, w22, w4
  410dc8:	b.eq	410dfc <wcrtomb@plt+0xe0bc>  // b.none
  410dcc:	add	x26, x26, x24
  410dd0:	add	x2, sp, #0xf8
  410dd4:	add	x1, x27, #0x8
  410dd8:	mov	x0, x27
  410ddc:	bl	40d540 <wcrtomb@plt+0xa800>
  410de0:	mov	x5, x27
  410de4:	mov	w4, w23
  410de8:	add	x3, x26, #0x8
  410dec:	mov	x2, x26
  410df0:	mov	x1, x25
  410df4:	add	x0, sp, #0xf8
  410df8:	bl	40da30 <wcrtomb@plt+0xacf0>
  410dfc:	ldr	x8, [x28, #152]
  410e00:	b	410d10 <wcrtomb@plt+0xdfd0>
  410e04:	add	x1, sp, #0xc0
  410e08:	mov	x0, x28
  410e0c:	mov	w2, #0x7                   	// #7
  410e10:	bl	40ddb0 <wcrtomb@plt+0xb070>
  410e14:	mov	w1, w0
  410e18:	sxtw	x0, w0
  410e1c:	str	x0, [x28, #400]
  410e20:	b	4105d0 <wcrtomb@plt+0xd890>
  410e24:	add	x5, x3, #0x1
  410e28:	cmp	x2, x5
  410e2c:	b.le	410e4c <wcrtomb@plt+0xe10c>
  410e30:	sub	x23, x2, #0x1
  410e34:	add	x4, x4, #0x10
  410e38:	sub	x2, x23, x3
  410e3c:	add	x1, x1, x4
  410e40:	lsl	x2, x2, #4
  410e44:	bl	402660 <memmove@plt>
  410e48:	mov	x3, x23
  410e4c:	str	x3, [x21, #8]
  410e50:	ldr	x8, [x28, #152]
  410e54:	cmp	x8, #0x0
  410e58:	b.gt	410d08 <wcrtomb@plt+0xdfc8>
  410e5c:	b	410044 <wcrtomb@plt+0xd304>
  410e60:	mov	x13, x2
  410e64:	str	x13, [x10, #8]
  410e68:	b	410a2c <wcrtomb@plt+0xdcec>
  410e6c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  410e70:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  410e74:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
  410e78:	b	4108ec <wcrtomb@plt+0xdbac>
  410e7c:	mov	x1, #0x7ffffffffffffff0    	// #9223372036854775792
  410e80:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
  410e84:	b	410758 <wcrtomb@plt+0xda18>
  410e88:	stp	x29, x30, [sp, #-320]!
  410e8c:	mov	x29, sp
  410e90:	ldr	x2, [x0, #40]
  410e94:	stp	x19, x20, [sp, #16]
  410e98:	stp	x21, x22, [sp, #32]
  410e9c:	stp	x23, x24, [sp, #48]
  410ea0:	stp	x25, x26, [sp, #64]
  410ea4:	stp	x27, x28, [sp, #80]
  410ea8:	str	xzr, [x0, #104]
  410eac:	stp	xzr, xzr, [sp, #144]
  410eb0:	stp	xzr, xzr, [sp, #160]
  410eb4:	cbz	x2, 411aac <wcrtomb@plt+0xed6c>
  410eb8:	ldr	x1, [x0, #32]
  410ebc:	mov	x26, x0
  410ec0:	ldrb	w0, [x1]
  410ec4:	add	x0, x26, x0, lsl #2
  410ec8:	ldr	w23, [x0, #1308]
  410ecc:	cmn	w23, #0x1
  410ed0:	b.eq	411904 <wcrtomb@plt+0xebc4>  // b.none
  410ed4:	str	w23, [x26, #72]
  410ed8:	mov	x0, x1
  410edc:	sub	x2, x2, #0x1
  410ee0:	ldrb	w3, [x0], #1
  410ee4:	stp	x0, x2, [x26, #32]
  410ee8:	cmp	w3, #0x5e
  410eec:	str	w3, [sp, #120]
  410ef0:	b.eq	411958 <wcrtomb@plt+0xec18>  // b.none
  410ef4:	cmp	w3, #0x3a
  410ef8:	mov	w19, w3
  410efc:	cset	w21, eq  // eq = none
  410f00:	mov	w0, #0x1                   	// #1
  410f04:	str	w0, [sp, #108]
  410f08:	str	wzr, [sp, #124]
  410f0c:	add	x24, sp, #0xb8
  410f10:	add	x20, sp, #0x90
  410f14:	add	x0, x24, #0x4
  410f18:	str	x0, [sp, #112]
  410f1c:	and	w21, w21, #0xfffffffd
  410f20:	cmp	w19, #0x5b
  410f24:	b.eq	411150 <wcrtomb@plt+0xe410>  // b.none
  410f28:	cmp	w19, #0x5c
  410f2c:	b.eq	41103c <wcrtomb@plt+0xe2fc>  // b.none
  410f30:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  410f34:	ldr	x1, [x26, #32]
  410f38:	ldrb	w0, [x1]
  410f3c:	add	x0, x26, x0, lsl #2
  410f40:	ldr	w27, [x0, #1308]
  410f44:	cmn	w27, #0x1
  410f48:	b.eq	4110c0 <wcrtomb@plt+0xe380>  // b.none
  410f4c:	str	w27, [x26, #72]
  410f50:	ldrb	w0, [x1], #1
  410f54:	sub	x2, x2, #0x1
  410f58:	stp	x1, x2, [x26, #32]
  410f5c:	cmp	w0, #0x2d
  410f60:	b.ne	411100 <wcrtomb@plt+0xe3c0>  // b.any
  410f64:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  410f68:	ldrb	w0, [x1]
  410f6c:	add	x0, x26, x0, lsl #2
  410f70:	ldr	w25, [x0, #1308]
  410f74:	cmn	w25, #0x1
  410f78:	b.eq	411080 <wcrtomb@plt+0xe340>  // b.none
  410f7c:	str	w25, [x26, #72]
  410f80:	mov	x3, x1
  410f84:	sub	x5, x2, #0x1
  410f88:	ldrb	w22, [x3], #1
  410f8c:	stp	x3, x5, [x26, #32]
  410f90:	cmp	w22, #0x5b
  410f94:	b.eq	411478 <wcrtomb@plt+0xe738>  // b.none
  410f98:	cmp	w22, #0x5d
  410f9c:	b.eq	411488 <wcrtomb@plt+0xe748>  // b.none
  410fa0:	cmp	w22, #0x5c
  410fa4:	b.ne	410fe4 <wcrtomb@plt+0xe2a4>  // b.any
  410fa8:	ldr	x0, [x26, #448]
  410fac:	and	x27, x0, #0x1
  410fb0:	tbz	w0, #0, 410fe4 <wcrtomb@plt+0xe2a4>
  410fb4:	cbz	x5, 411aac <wcrtomb@plt+0xed6c>
  410fb8:	ldrb	w0, [x1, #1]
  410fbc:	add	x0, x26, x0, lsl #2
  410fc0:	ldr	w25, [x0, #1308]
  410fc4:	cmn	w25, #0x1
  410fc8:	b.eq	4118c0 <wcrtomb@plt+0xeb80>  // b.none
  410fcc:	str	w25, [x26, #72]
  410fd0:	ldrb	w22, [x3]
  410fd4:	mov	x0, #0x1                   	// #1
  410fd8:	add	x3, x3, x27
  410fdc:	sub	x5, x5, x0
  410fe0:	stp	x3, x5, [x26, #32]
  410fe4:	orr	w21, w21, #0x8
  410fe8:	cbz	x5, 41168c <wcrtomb@plt+0xe94c>
  410fec:	ldrb	w0, [x3]
  410ff0:	add	x0, x26, x0, lsl #2
  410ff4:	ldr	w27, [x0, #1308]
  410ff8:	cmn	w27, #0x1
  410ffc:	b.eq	411290 <wcrtomb@plt+0xe550>  // b.none
  411000:	str	w27, [x26, #72]
  411004:	mov	x2, #0x1                   	// #1
  411008:	mov	x1, x2
  41100c:	ldrb	w28, [x3]
  411010:	sub	x5, x5, x2
  411014:	add	x3, x3, x1
  411018:	stp	x3, x5, [x26, #32]
  41101c:	cmp	w25, w23
  411020:	ccmn	w23, #0x1, #0x4, eq  // eq = none
  411024:	b.eq	4112e8 <wcrtomb@plt+0xe5a8>  // b.none
  411028:	mov	w3, w23
  41102c:	mov	w22, w19
  411030:	mov	w23, w27
  411034:	mov	w19, w28
  411038:	b	411110 <wcrtomb@plt+0xe3d0>
  41103c:	ldr	x0, [x26, #448]
  411040:	and	x22, x0, #0x1
  411044:	tbz	w0, #0, 410f30 <wcrtomb@plt+0xe1f0>
  411048:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  41104c:	ldr	x1, [x26, #32]
  411050:	ldrb	w0, [x1]
  411054:	add	x0, x26, x0, lsl #2
  411058:	ldr	w23, [x0, #1308]
  41105c:	cmn	w23, #0x1
  411060:	b.eq	411254 <wcrtomb@plt+0xe514>  // b.none
  411064:	str	w23, [x26, #72]
  411068:	ldrb	w19, [x1]
  41106c:	mov	x0, #0x1                   	// #1
  411070:	add	x1, x1, x22
  411074:	sub	x2, x2, x0
  411078:	stp	x1, x2, [x26, #32]
  41107c:	b	410f30 <wcrtomb@plt+0xe1f0>
  411080:	add	x3, x26, #0x110
  411084:	mov	x0, x24
  411088:	bl	418830 <wcrtomb@plt+0x15af0>
  41108c:	sub	x1, x0, #0x1
  411090:	cmn	x1, #0x4
  411094:	b.hi	4116f4 <wcrtomb@plt+0xe9b4>  // b.pmore
  411098:	ldr	w25, [sp, #184]
  41109c:	cmp	w0, #0x1
  4110a0:	str	w25, [x26, #72]
  4110a4:	ldp	x1, x2, [x26, #32]
  4110a8:	b.eq	410f80 <wcrtomb@plt+0xe240>  // b.none
  4110ac:	add	x3, x1, w0, sxtw
  4110b0:	sub	x5, x2, w0, sxtw
  4110b4:	mov	w22, #0xffffffff            	// #-1
  4110b8:	stp	x3, x5, [x26, #32]
  4110bc:	b	410fe4 <wcrtomb@plt+0xe2a4>
  4110c0:	add	x3, x26, #0x110
  4110c4:	mov	x0, x24
  4110c8:	bl	418830 <wcrtomb@plt+0x15af0>
  4110cc:	sub	x1, x0, #0x1
  4110d0:	cmn	x1, #0x4
  4110d4:	b.hi	4116e8 <wcrtomb@plt+0xe9a8>  // b.pmore
  4110d8:	ldr	w27, [sp, #184]
  4110dc:	cmp	w0, #0x1
  4110e0:	str	w27, [x26, #72]
  4110e4:	ldp	x1, x2, [x26, #32]
  4110e8:	b.eq	410f50 <wcrtomb@plt+0xe210>  // b.none
  4110ec:	add	x1, x1, w0, sxtw
  4110f0:	sub	x2, x2, w0, sxtw
  4110f4:	mov	w0, #0xffffffff            	// #-1
  4110f8:	stp	x1, x2, [x26, #32]
  4110fc:	nop
  411100:	mov	w3, w23
  411104:	mov	w22, w19
  411108:	mov	w23, w27
  41110c:	mov	w19, w0
  411110:	mov	w1, #0x4                   	// #4
  411114:	cmp	w22, #0x3a
  411118:	mov	w0, #0x2                   	// #2
  41111c:	csel	w0, w0, w1, eq  // eq = none
  411120:	ldrb	w1, [x26, #1048]
  411124:	orr	w21, w21, w0
  411128:	cbz	w1, 4111c0 <wcrtomb@plt+0xe480>
  41112c:	cmn	w3, #0x1
  411130:	b.ne	41137c <wcrtomb@plt+0xe63c>  // b.any
  411134:	str	wzr, [sp, #108]
  411138:	cmp	w19, #0x5d
  41113c:	b.eq	4111f8 <wcrtomb@plt+0xe4b8>  // b.none
  411140:	and	w21, w21, #0xfffffffd
  411144:	cmp	w19, #0x5b
  411148:	ldr	x2, [x26, #40]
  41114c:	b.ne	410f28 <wcrtomb@plt+0xe1e8>  // b.any
  411150:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  411154:	ldr	x1, [x26, #32]
  411158:	ldrb	w0, [x1]
  41115c:	add	x0, x26, x0, lsl #2
  411160:	ldr	w27, [x0, #1308]
  411164:	cmn	w27, #0x1
  411168:	b.eq	411328 <wcrtomb@plt+0xe5e8>  // b.none
  41116c:	str	w27, [x26, #72]
  411170:	ldrb	w25, [x1], #1
  411174:	sub	x2, x2, #0x1
  411178:	stp	x1, x2, [x26, #32]
  41117c:	cmp	w25, #0x3a
  411180:	b.eq	4114a0 <wcrtomb@plt+0xe760>  // b.none
  411184:	cmp	w25, #0x2e
  411188:	mov	w0, #0x3d                  	// #61
  41118c:	ccmp	w25, w0, #0x4, ne  // ne = any
  411190:	b.eq	4114a8 <wcrtomb@plt+0xe768>  // b.none
  411194:	cmp	w25, #0x2d
  411198:	b.eq	410f64 <wcrtomb@plt+0xe224>  // b.none
  41119c:	nop
  4111a0:	mov	w3, w23
  4111a4:	mov	w19, w25
  4111a8:	mov	w23, w27
  4111ac:	mov	w22, #0x5b                  	// #91
  4111b0:	mov	w0, #0x4                   	// #4
  4111b4:	ldrb	w1, [x26, #1048]
  4111b8:	orr	w21, w21, w0
  4111bc:	cbnz	w1, 41112c <wcrtomb@plt+0xe3ec>
  4111c0:	ldrb	w0, [x26, #457]
  4111c4:	cbz	w0, 4111d8 <wcrtomb@plt+0xe498>
  4111c8:	bl	402ab0 <__ctype_b_loc@plt>
  4111cc:	ldr	x0, [x0]
  4111d0:	ldrh	w0, [x0, w22, sxtw #1]
  4111d4:	tbnz	w0, #10, 4116cc <wcrtomb@plt+0xe98c>
  4111d8:	lsr	w1, w22, #6
  4111dc:	mov	x0, #0x1                   	// #1
  4111e0:	lsl	x0, x0, x22
  4111e4:	cmp	w19, #0x5d
  4111e8:	ldr	x2, [x20, x1, lsl #3]
  4111ec:	orr	x0, x0, x2
  4111f0:	str	x0, [x20, x1, lsl #3]
  4111f4:	b.ne	411140 <wcrtomb@plt+0xe400>  // b.any
  4111f8:	cmp	w21, #0x7
  4111fc:	b.eq	411a08 <wcrtomb@plt+0xecc8>  // b.none
  411200:	ldr	w1, [sp, #108]
  411204:	mov	x0, #0x112                 	// #274
  411208:	cbz	w1, 411238 <wcrtomb@plt+0xe4f8>
  41120c:	ldrb	w0, [x26, #1048]
  411210:	cbz	w0, 41188c <wcrtomb@plt+0xeb4c>
  411214:	ldr	w0, [sp, #120]
  411218:	cmp	w0, #0x5e
  41121c:	b.eq	411a34 <wcrtomb@plt+0xecf4>  // b.none
  411220:	ldr	x0, [x26, #104]
  411224:	cbnz	x0, 411a34 <wcrtomb@plt+0xecf4>
  411228:	mov	x0, x26
  41122c:	add	x1, sp, #0x90
  411230:	bl	40dc18 <wcrtomb@plt+0xaed8>
  411234:	add	x0, x0, #0x114
  411238:	ldp	x19, x20, [sp, #16]
  41123c:	ldp	x21, x22, [sp, #32]
  411240:	ldp	x23, x24, [sp, #48]
  411244:	ldp	x25, x26, [sp, #64]
  411248:	ldp	x27, x28, [sp, #80]
  41124c:	ldp	x29, x30, [sp], #320
  411250:	ret
  411254:	add	x3, x26, #0x110
  411258:	mov	x0, x24
  41125c:	bl	418830 <wcrtomb@plt+0x15af0>
  411260:	sub	x1, x0, #0x1
  411264:	cmn	x1, #0x4
  411268:	b.hi	411868 <wcrtomb@plt+0xeb28>  // b.pmore
  41126c:	ldr	w23, [sp, #184]
  411270:	cmp	w0, #0x1
  411274:	str	w23, [x26, #72]
  411278:	ldp	x1, x2, [x26, #32]
  41127c:	b.eq	411068 <wcrtomb@plt+0xe328>  // b.none
  411280:	sxtw	x22, w0
  411284:	mov	w19, #0xffffffff            	// #-1
  411288:	mov	x0, x22
  41128c:	b	411070 <wcrtomb@plt+0xe330>
  411290:	mov	x1, x3
  411294:	mov	x2, x5
  411298:	add	x3, x26, #0x110
  41129c:	mov	x0, x24
  4112a0:	bl	418830 <wcrtomb@plt+0x15af0>
  4112a4:	sub	x1, x0, #0x1
  4112a8:	cmn	x1, #0x4
  4112ac:	b.hi	41185c <wcrtomb@plt+0xeb1c>  // b.pmore
  4112b0:	ldr	w27, [sp, #184]
  4112b4:	cmp	w0, #0x1
  4112b8:	str	w27, [x26, #72]
  4112bc:	ldp	x3, x5, [x26, #32]
  4112c0:	b.eq	411004 <wcrtomb@plt+0xe2c4>  // b.none
  4112c4:	sxtw	x1, w0
  4112c8:	cmp	w25, w23
  4112cc:	mov	x2, x1
  4112d0:	add	x3, x3, x1
  4112d4:	sub	x5, x5, x2
  4112d8:	stp	x3, x5, [x26, #32]
  4112dc:	ccmn	w23, #0x1, #0x4, eq  // eq = none
  4112e0:	mov	w28, #0xffffffff            	// #-1
  4112e4:	b.ne	411028 <wcrtomb@plt+0xe2e8>  // b.any
  4112e8:	ldrb	w0, [x26, #1049]
  4112ec:	cbnz	w0, 411700 <wcrtomb@plt+0xe9c0>
  4112f0:	sub	w1, w22, #0x30
  4112f4:	sub	w0, w19, #0x30
  4112f8:	and	w1, w1, #0xff
  4112fc:	and	w0, w0, #0xff
  411300:	cmp	w1, #0x9
  411304:	cset	w1, ls  // ls = plast
  411308:	cmp	w0, #0x9
  41130c:	cset	w0, ls  // ls = plast
  411310:	tst	w1, w0
  411314:	b.ne	411700 <wcrtomb@plt+0xe9c0>  // b.any
  411318:	mov	w23, w27
  41131c:	mov	w19, w28
  411320:	str	wzr, [sp, #108]
  411324:	b	411138 <wcrtomb@plt+0xe3f8>
  411328:	add	x3, x26, #0x110
  41132c:	mov	x0, x24
  411330:	bl	418830 <wcrtomb@plt+0x15af0>
  411334:	sub	x1, x0, #0x1
  411338:	cmn	x1, #0x4
  41133c:	b.hi	4116dc <wcrtomb@plt+0xe99c>  // b.pmore
  411340:	ldr	w27, [sp, #184]
  411344:	cmp	w0, #0x1
  411348:	str	w27, [x26, #72]
  41134c:	ldp	x1, x2, [x26, #32]
  411350:	b.eq	411170 <wcrtomb@plt+0xe430>  // b.none
  411354:	add	x1, x1, w0, sxtw
  411358:	sub	x2, x2, w0, sxtw
  41135c:	mov	w3, w23
  411360:	mov	w25, #0xffffffff            	// #-1
  411364:	mov	w23, w27
  411368:	mov	w19, w25
  41136c:	mov	w22, #0x5b                  	// #91
  411370:	mov	w0, #0x4                   	// #4
  411374:	stp	x1, x2, [x26, #32]
  411378:	b	4111b4 <wcrtomb@plt+0xe474>
  41137c:	ldrb	w0, [x26, #457]
  411380:	cbnz	w0, 4116a4 <wcrtomb@plt+0xe964>
  411384:	mov	w22, #0x1                   	// #1
  411388:	str	w3, [sp, #184]
  41138c:	mov	x28, x24
  411390:	mov	w27, #0x0                   	// #0
  411394:	mov	x25, #0x1                   	// #1
  411398:	b	4113c0 <wcrtomb@plt+0xe680>
  41139c:	lsr	w1, w0, #6
  4113a0:	lsl	x0, x25, x0
  4113a4:	ldr	x2, [x20, x1, lsl #3]
  4113a8:	orr	x0, x0, x2
  4113ac:	str	x0, [x20, x1, lsl #3]
  4113b0:	add	w27, w27, #0x1
  4113b4:	add	x28, x28, #0x4
  4113b8:	cmp	w27, w22
  4113bc:	b.ge	411138 <wcrtomb@plt+0xe3f8>  // b.tcont
  4113c0:	ldr	w0, [x28]
  4113c4:	bl	4027b0 <wctob@plt>
  4113c8:	tbz	w0, #31, 41139c <wcrtomb@plt+0xe65c>
  4113cc:	ldp	x0, x1, [x26, #96]
  4113d0:	ldr	x2, [x26, #112]
  4113d4:	cmp	x1, x2
  4113d8:	b.lt	41145c <wcrtomb@plt+0xe71c>  // b.tstop
  4113dc:	asr	x3, x2, #1
  4113e0:	adds	x3, x2, x3
  4113e4:	b.vs	411a9c <wcrtomb@plt+0xed5c>
  4113e8:	asr	x7, x3, #63
  4113ec:	sbfx	x8, x3, #61, #1
  4113f0:	lsl	x1, x3, #2
  4113f4:	extr	x7, x7, x3, #62
  4113f8:	cmp	x8, x7
  4113fc:	b.ne	411a9c <wcrtomb@plt+0xed5c>  // b.any
  411400:	cmp	x1, #0x7f
  411404:	mov	x4, #0x20                  	// #32
  411408:	csel	x3, x3, x4, gt
  41140c:	mov	x4, #0x80                  	// #128
  411410:	csel	x1, x1, x4, gt
  411414:	cbz	x0, 411470 <wcrtomb@plt+0xe730>
  411418:	sub	x7, x3, x2
  41141c:	cmp	x7, #0x0
  411420:	b.gt	411448 <wcrtomb@plt+0xe708>
  411424:	adds	x2, x2, #0x1
  411428:	mov	x3, x2
  41142c:	b.vs	411aa8 <wcrtomb@plt+0xed68>
  411430:	asr	x7, x2, #63
  411434:	sbfx	x8, x2, #61, #1
  411438:	lsl	x1, x2, #2
  41143c:	extr	x7, x7, x2, #62
  411440:	cmp	x8, x7
  411444:	b.ne	411aa8 <wcrtomb@plt+0xed68>  // b.any
  411448:	str	x3, [sp, #96]
  41144c:	bl	418660 <wcrtomb@plt+0x15920>
  411450:	ldr	x1, [x26, #104]
  411454:	ldr	x3, [sp, #96]
  411458:	str	x3, [x26, #112]
  41145c:	add	x2, x1, #0x1
  411460:	stp	x0, x2, [x26, #96]
  411464:	ldr	w2, [x28]
  411468:	str	w2, [x0, x1, lsl #2]
  41146c:	b	4113b0 <wcrtomb@plt+0xe670>
  411470:	str	xzr, [x26, #112]
  411474:	b	411418 <wcrtomb@plt+0xe6d8>
  411478:	ldrb	w0, [x1, #1]
  41147c:	cmp	w0, #0x2e
  411480:	b.ne	410fe4 <wcrtomb@plt+0xe2a4>  // b.any
  411484:	str	wzr, [sp, #108]
  411488:	mov	w3, w23
  41148c:	mov	w22, w19
  411490:	mov	w23, w27
  411494:	mov	w19, #0x2d                  	// #45
  411498:	stp	x1, x2, [x26, #32]
  41149c:	b	411110 <wcrtomb@plt+0xe3d0>
  4114a0:	ldr	x0, [x26, #448]
  4114a4:	tbz	w0, #2, 4111a0 <wcrtomb@plt+0xe460>
  4114a8:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  4114ac:	ldrb	w0, [x1]
  4114b0:	add	x23, x26, #0x110
  4114b4:	mov	w22, #0x0                   	// #0
  4114b8:	add	x0, x26, x0, lsl #2
  4114bc:	ldr	w19, [x0, #1308]
  4114c0:	cmn	w19, #0x1
  4114c4:	b.eq	411514 <wcrtomb@plt+0xe7d4>  // b.none
  4114c8:	ldr	x2, [x26, #40]
  4114cc:	str	w19, [x26, #72]
  4114d0:	mov	x0, x1
  4114d4:	sub	x2, x2, #0x1
  4114d8:	ldrb	w5, [x0], #1
  4114dc:	stp	x0, x2, [x26, #32]
  4114e0:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  4114e4:	cmp	w5, w25
  4114e8:	b.eq	41156c <wcrtomb@plt+0xe82c>  // b.none
  4114ec:	cmp	w22, #0x1f
  4114f0:	b.gt	411560 <wcrtomb@plt+0xe820>
  4114f4:	ldr	x1, [x26, #32]
  4114f8:	strb	w5, [x24, w22, sxtw]
  4114fc:	add	w22, w22, #0x1
  411500:	ldrb	w0, [x1]
  411504:	add	x0, x26, x0, lsl #2
  411508:	ldr	w19, [x0, #1308]
  41150c:	cmn	w19, #0x1
  411510:	b.ne	4114c8 <wcrtomb@plt+0xe788>  // b.any
  411514:	mov	x3, x23
  411518:	add	x0, sp, #0x8c
  41151c:	bl	418830 <wcrtomb@plt+0x15af0>
  411520:	sub	x1, x0, #0x1
  411524:	cmn	x1, #0x4
  411528:	b.hi	411680 <wcrtomb@plt+0xe940>  // b.pmore
  41152c:	ldr	w1, [sp, #140]
  411530:	cmp	w0, #0x1
  411534:	str	w1, [x26, #72]
  411538:	ldr	x1, [x26, #32]
  41153c:	ldr	x2, [x26, #40]
  411540:	b.eq	4114d0 <wcrtomb@plt+0xe790>  // b.none
  411544:	add	x1, x1, w0, sxtw
  411548:	sub	x2, x2, w0, sxtw
  41154c:	stp	x1, x2, [x26, #32]
  411550:	cbz	x2, 41168c <wcrtomb@plt+0xe94c>
  411554:	cmp	w22, #0x1f
  411558:	mov	w5, #0xff                  	// #255
  41155c:	b.le	4114f4 <wcrtomb@plt+0xe7b4>
  411560:	strb	wzr, [sp, #184]
  411564:	ldr	x1, [x26, #32]
  411568:	b	411500 <wcrtomb@plt+0xe7c0>
  41156c:	ldrb	w1, [x1, #1]
  411570:	cmp	w1, #0x5d
  411574:	b.ne	4114ec <wcrtomb@plt+0xe7ac>  // b.any
  411578:	ldr	w19, [x26, #1680]
  41157c:	strb	wzr, [x24, w22, sxtw]
  411580:	cmn	w19, #0x1
  411584:	b.eq	41177c <wcrtomb@plt+0xea3c>  // b.none
  411588:	mov	x22, #0x1                   	// #1
  41158c:	mov	x1, x22
  411590:	str	w19, [x26, #72]
  411594:	add	x0, x0, x1
  411598:	sub	x22, x2, x22
  41159c:	stp	x0, x22, [x26, #32]
  4115a0:	cmp	w25, #0x3a
  4115a4:	b.eq	41162c <wcrtomb@plt+0xe8ec>  // b.none
  4115a8:	str	wzr, [sp, #108]
  4115ac:	orr	w21, w21, #0x8
  4115b0:	cbz	x22, 41168c <wcrtomb@plt+0xe94c>
  4115b4:	ldr	x1, [x26, #32]
  4115b8:	ldrb	w0, [x1]
  4115bc:	add	x0, x26, x0, lsl #2
  4115c0:	ldr	w23, [x0, #1308]
  4115c4:	cmn	w23, #0x1
  4115c8:	b.eq	4115ec <wcrtomb@plt+0xe8ac>  // b.none
  4115cc:	str	w23, [x26, #72]
  4115d0:	ldrb	w19, [x1]
  4115d4:	mov	x2, #0x1                   	// #1
  4115d8:	mov	x0, x2
  4115dc:	add	x1, x1, x0
  4115e0:	sub	x2, x22, x2
  4115e4:	stp	x1, x2, [x26, #32]
  4115e8:	b	411138 <wcrtomb@plt+0xe3f8>
  4115ec:	mov	x2, x22
  4115f0:	add	x3, x26, #0x110
  4115f4:	add	x0, sp, #0x8c
  4115f8:	bl	418830 <wcrtomb@plt+0x15af0>
  4115fc:	sub	x1, x0, #0x1
  411600:	cmn	x1, #0x4
  411604:	b.hi	411880 <wcrtomb@plt+0xeb40>  // b.pmore
  411608:	ldr	w23, [sp, #140]
  41160c:	cmp	w0, #0x1
  411610:	str	w23, [x26, #72]
  411614:	ldp	x1, x22, [x26, #32]
  411618:	b.eq	4115d0 <wcrtomb@plt+0xe890>  // b.none
  41161c:	sxtw	x0, w0
  411620:	mov	w19, #0xffffffff            	// #-1
  411624:	mov	x2, x0
  411628:	b	4115dc <wcrtomb@plt+0xe89c>
  41162c:	ldrb	w0, [x26, #457]
  411630:	cbnz	w0, 4117b4 <wcrtomb@plt+0xea74>
  411634:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x122f0>
  411638:	add	x19, x19, #0x188
  41163c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  411640:	add	x25, x19, #0x38
  411644:	add	x1, x1, #0xe18
  411648:	mov	w23, #0x0                   	// #0
  41164c:	nop
  411650:	mov	x0, x24
  411654:	bl	402aa0 <strcmp@plt>
  411658:	cbz	w0, 4117f4 <wcrtomb@plt+0xeab4>
  41165c:	ldr	x1, [x25, #24]!
  411660:	add	w23, w23, #0x1
  411664:	cbnz	x1, 411650 <wcrtomb@plt+0xe910>
  411668:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41166c:	add	x1, x1, #0xe68
  411670:	mov	w2, #0x5                   	// #5
  411674:	mov	x0, #0x0                   	// #0
  411678:	bl	402c20 <dcgettext@plt>
  41167c:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  411680:	str	xzr, [x23]
  411684:	ldr	x1, [x26, #32]
  411688:	b	4114c8 <wcrtomb@plt+0xe788>
  41168c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  411690:	add	x1, x1, #0xdf0
  411694:	mov	w2, #0x5                   	// #5
  411698:	mov	x0, #0x0                   	// #0
  41169c:	bl	402c20 <dcgettext@plt>
  4116a0:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  4116a4:	ldr	x1, [sp, #112]
  4116a8:	mov	w0, w3
  4116ac:	str	w3, [sp, #96]
  4116b0:	bl	414640 <wcrtomb@plt+0x11900>
  4116b4:	add	w22, w0, #0x1
  4116b8:	ldr	w3, [sp, #96]
  4116bc:	cmp	w22, #0x0
  4116c0:	str	w3, [sp, #184]
  4116c4:	b.gt	41138c <wcrtomb@plt+0xe64c>
  4116c8:	b	411138 <wcrtomb@plt+0xe3f8>
  4116cc:	mov	w0, w22
  4116d0:	mov	x1, x20
  4116d4:	bl	40d380 <wcrtomb@plt+0xa640>
  4116d8:	b	411138 <wcrtomb@plt+0xe3f8>
  4116dc:	str	xzr, [x26, #272]
  4116e0:	ldp	x1, x2, [x26, #32]
  4116e4:	b	41116c <wcrtomb@plt+0xe42c>
  4116e8:	str	xzr, [x26, #272]
  4116ec:	ldp	x1, x2, [x26, #32]
  4116f0:	b	410f4c <wcrtomb@plt+0xe20c>
  4116f4:	str	xzr, [x26, #272]
  4116f8:	ldp	x1, x2, [x26, #32]
  4116fc:	b	410f7c <wcrtomb@plt+0xe23c>
  411700:	cmp	w22, w19
  411704:	sbfiz	x25, x19, #1, #32
  411708:	add	w22, w22, #0x1
  41170c:	mov	x23, #0x1                   	// #1
  411710:	b.ge	41173c <wcrtomb@plt+0xe9fc>  // b.tcont
  411714:	b	411770 <wcrtomb@plt+0xea30>
  411718:	lsr	w1, w19, #6
  41171c:	lsl	x0, x23, x19
  411720:	add	w19, w19, #0x1
  411724:	add	x25, x25, #0x2
  411728:	cmp	w19, w22
  41172c:	ldr	x2, [x20, x1, lsl #3]
  411730:	orr	x0, x0, x2
  411734:	str	x0, [x20, x1, lsl #3]
  411738:	b.eq	411770 <wcrtomb@plt+0xea30>  // b.none
  41173c:	ldrb	w0, [x26, #457]
  411740:	cbz	w0, 411718 <wcrtomb@plt+0xe9d8>
  411744:	bl	402ab0 <__ctype_b_loc@plt>
  411748:	ldr	x0, [x0]
  41174c:	ldrh	w0, [x0, x25]
  411750:	tbz	w0, #10, 411718 <wcrtomb@plt+0xe9d8>
  411754:	mov	w0, w19
  411758:	mov	x1, x20
  41175c:	add	w19, w19, #0x1
  411760:	bl	40d380 <wcrtomb@plt+0xa640>
  411764:	add	x25, x25, #0x2
  411768:	cmp	w19, w22
  41176c:	b.ne	41173c <wcrtomb@plt+0xe9fc>  // b.any
  411770:	mov	w23, w27
  411774:	mov	w19, w28
  411778:	b	411138 <wcrtomb@plt+0xe3f8>
  41177c:	mov	x1, x0
  411780:	add	x3, x26, #0x110
  411784:	add	x0, sp, #0x8c
  411788:	bl	418830 <wcrtomb@plt+0x15af0>
  41178c:	sub	x1, x0, #0x1
  411790:	cmn	x1, #0x4
  411794:	b.hi	411874 <wcrtomb@plt+0xeb34>  // b.pmore
  411798:	sxtw	x1, w0
  41179c:	ldr	w0, [sp, #140]
  4117a0:	mov	x22, x1
  4117a4:	str	w0, [x26, #72]
  4117a8:	ldr	x0, [x26, #32]
  4117ac:	ldr	x2, [x26, #40]
  4117b0:	b	411594 <wcrtomb@plt+0xe854>
  4117b4:	ldr	w1, [x24]
  4117b8:	mov	w0, #0x7075                	// #28789
  4117bc:	movk	w0, #0x6570, lsl #16
  4117c0:	cmp	w1, w0
  4117c4:	b.eq	411a24 <wcrtomb@plt+0xece4>  // b.none
  4117c8:	ldr	w1, [x24]
  4117cc:	mov	w0, #0x6f6c                	// #28524
  4117d0:	movk	w0, #0x6577, lsl #16
  4117d4:	cmp	w1, w0
  4117d8:	b.ne	411634 <wcrtomb@plt+0xe8f4>  // b.any
  4117dc:	ldrh	w0, [x24, #4]
  4117e0:	cmp	w0, #0x72
  4117e4:	b.ne	411634 <wcrtomb@plt+0xe8f4>  // b.any
  4117e8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4117ec:	add	x19, x19, #0x188
  4117f0:	mov	w23, #0x0                   	// #0
  4117f4:	ldrb	w0, [x26, #1048]
  4117f8:	sxtw	x1, w23
  4117fc:	cbz	w0, 411810 <wcrtomb@plt+0xead0>
  411800:	add	x0, x1, w23, sxtw #1
  411804:	add	x0, x19, x0, lsl #3
  411808:	ldrb	w0, [x0, #72]
  41180c:	cbz	w0, 4115a8 <wcrtomb@plt+0xe868>
  411810:	add	x1, x1, x1, lsl #1
  411814:	mov	w23, #0x0                   	// #0
  411818:	mov	x22, #0x1                   	// #1
  41181c:	add	x19, x19, x1, lsl #3
  411820:	ldr	x19, [x19, #64]
  411824:	nop
  411828:	mov	w0, w23
  41182c:	blr	x19
  411830:	cbz	w0, 411848 <wcrtomb@plt+0xeb08>
  411834:	lsr	w1, w23, #6
  411838:	lsl	x0, x22, x23
  41183c:	ldr	x2, [x20, x1, lsl #3]
  411840:	orr	x0, x0, x2
  411844:	str	x0, [x20, x1, lsl #3]
  411848:	add	w23, w23, #0x1
  41184c:	cmp	w23, #0x100
  411850:	b.ne	411828 <wcrtomb@plt+0xeae8>  // b.any
  411854:	ldr	x22, [x26, #40]
  411858:	b	4115ac <wcrtomb@plt+0xe86c>
  41185c:	str	xzr, [x26, #272]
  411860:	ldp	x3, x5, [x26, #32]
  411864:	b	411000 <wcrtomb@plt+0xe2c0>
  411868:	str	xzr, [x26, #272]
  41186c:	ldp	x1, x2, [x26, #32]
  411870:	b	411064 <wcrtomb@plt+0xe324>
  411874:	str	xzr, [x26, #272]
  411878:	ldp	x0, x2, [x26, #32]
  41187c:	b	411588 <wcrtomb@plt+0xe848>
  411880:	str	xzr, [x26, #272]
  411884:	ldp	x1, x22, [x26, #32]
  411888:	b	4115cc <wcrtomb@plt+0xe88c>
  41188c:	ldr	w0, [sp, #120]
  411890:	cmp	w0, #0x5e
  411894:	b.ne	411228 <wcrtomb@plt+0xe4e8>  // b.any
  411898:	ldp	q1, q0, [sp, #144]
  41189c:	ldr	x0, [x26, #448]
  4118a0:	mvn	v1.16b, v1.16b
  4118a4:	mvn	v0.16b, v0.16b
  4118a8:	stp	q1, q0, [sp, #144]
  4118ac:	tbz	w0, #8, 411228 <wcrtomb@plt+0xe4e8>
  4118b0:	ldr	x0, [sp, #144]
  4118b4:	and	x0, x0, #0xfffffffffffffbff
  4118b8:	str	x0, [sp, #144]
  4118bc:	b	411228 <wcrtomb@plt+0xe4e8>
  4118c0:	mov	x1, x3
  4118c4:	mov	x2, x5
  4118c8:	add	x3, x26, #0x110
  4118cc:	mov	x0, x24
  4118d0:	bl	418830 <wcrtomb@plt+0x15af0>
  4118d4:	sub	x1, x0, #0x1
  4118d8:	cmn	x1, #0x4
  4118dc:	b.hi	4119a8 <wcrtomb@plt+0xec68>  // b.pmore
  4118e0:	ldr	w25, [sp, #184]
  4118e4:	cmp	w0, #0x1
  4118e8:	str	w25, [x26, #72]
  4118ec:	ldp	x3, x5, [x26, #32]
  4118f0:	b.eq	410fd0 <wcrtomb@plt+0xe290>  // b.none
  4118f4:	sxtw	x27, w0
  4118f8:	mov	w22, #0xffffffff            	// #-1
  4118fc:	mov	x0, x27
  411900:	b	410fd8 <wcrtomb@plt+0xe298>
  411904:	add	x3, x26, #0x110
  411908:	add	x0, sp, #0xb8
  41190c:	bl	418830 <wcrtomb@plt+0x15af0>
  411910:	sub	x1, x0, #0x1
  411914:	cmn	x1, #0x4
  411918:	b.hi	4119b4 <wcrtomb@plt+0xec74>  // b.pmore
  41191c:	ldr	w23, [sp, #184]
  411920:	cmp	w0, #0x1
  411924:	str	w23, [x26, #72]
  411928:	ldp	x1, x2, [x26, #32]
  41192c:	b.eq	410ed8 <wcrtomb@plt+0xe198>  // b.none
  411930:	add	x1, x1, w0, sxtw
  411934:	sub	x2, x2, w0, sxtw
  411938:	mov	w0, #0xffffffff            	// #-1
  41193c:	mov	w21, #0x0                   	// #0
  411940:	mov	w19, w0
  411944:	stp	x1, x2, [x26, #32]
  411948:	stp	w0, wzr, [sp, #120]
  41194c:	mov	w0, #0x1                   	// #1
  411950:	str	w0, [sp, #108]
  411954:	b	410f0c <wcrtomb@plt+0xe1cc>
  411958:	cbz	x2, 411aac <wcrtomb@plt+0xed6c>
  41195c:	ldrb	w1, [x1, #1]
  411960:	add	x1, x26, x1, lsl #2
  411964:	ldr	w23, [x1, #1308]
  411968:	cmn	w23, #0x1
  41196c:	b.eq	4119c0 <wcrtomb@plt+0xec80>  // b.none
  411970:	str	w23, [x26, #72]
  411974:	ldrb	w19, [x0]
  411978:	mov	x3, #0x1                   	// #1
  41197c:	mov	x1, x3
  411980:	cmp	w19, #0x3a
  411984:	cset	w21, eq  // eq = none
  411988:	ldrb	w4, [x26, #1049]
  41198c:	add	x0, x0, x1
  411990:	sub	x2, x2, x3
  411994:	mov	w1, #0x1                   	// #1
  411998:	stp	x0, x2, [x26, #32]
  41199c:	str	w4, [sp, #108]
  4119a0:	str	w1, [sp, #124]
  4119a4:	b	410f0c <wcrtomb@plt+0xe1cc>
  4119a8:	str	xzr, [x26, #272]
  4119ac:	ldp	x3, x5, [x26, #32]
  4119b0:	b	410fcc <wcrtomb@plt+0xe28c>
  4119b4:	str	xzr, [x26, #272]
  4119b8:	ldp	x1, x2, [x26, #32]
  4119bc:	b	410ed4 <wcrtomb@plt+0xe194>
  4119c0:	mov	x1, x0
  4119c4:	add	x3, x26, #0x110
  4119c8:	add	x0, sp, #0xb8
  4119cc:	bl	418830 <wcrtomb@plt+0x15af0>
  4119d0:	mov	x1, x0
  4119d4:	sub	x0, x0, #0x1
  4119d8:	cmn	x0, #0x4
  4119dc:	b.hi	411a7c <wcrtomb@plt+0xed3c>  // b.pmore
  4119e0:	ldr	w23, [sp, #184]
  4119e4:	cmp	w1, #0x1
  4119e8:	str	w23, [x26, #72]
  4119ec:	ldp	x0, x2, [x26, #32]
  4119f0:	b.eq	411974 <wcrtomb@plt+0xec34>  // b.none
  4119f4:	sxtw	x1, w1
  4119f8:	mov	w21, #0x0                   	// #0
  4119fc:	mov	x3, x1
  411a00:	mov	w19, #0xffffffff            	// #-1
  411a04:	b	411988 <wcrtomb@plt+0xec48>
  411a08:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  411a0c:	add	x1, x1, #0xe30
  411a10:	mov	w2, #0x5                   	// #5
  411a14:	mov	x0, #0x0                   	// #0
  411a18:	bl	402c20 <dcgettext@plt>
  411a1c:	bl	40b9c0 <wcrtomb@plt+0x8c80>
  411a20:	b	411200 <wcrtomb@plt+0xe4c0>
  411a24:	ldrh	w0, [x24, #4]
  411a28:	cmp	w0, #0x72
  411a2c:	b.ne	4117c8 <wcrtomb@plt+0xea88>  // b.any
  411a30:	b	4117e8 <wcrtomb@plt+0xeaa8>
  411a34:	ldrb	w1, [sp, #124]
  411a38:	strb	w1, [x26, #88]
  411a3c:	ldp	x0, x1, [sp, #144]
  411a40:	ldp	x3, x2, [sp, #160]
  411a44:	orr	x0, x0, x1
  411a48:	mov	x1, #0xffffffffffffffff    	// #-1
  411a4c:	orr	x2, x2, x3
  411a50:	orr	x0, x0, x2
  411a54:	cbnz	x0, 411a88 <wcrtomb@plt+0xed48>
  411a58:	str	x1, [x26, #80]
  411a5c:	mov	x0, #0x113                 	// #275
  411a60:	ldp	x19, x20, [sp, #16]
  411a64:	ldp	x21, x22, [sp, #32]
  411a68:	ldp	x23, x24, [sp, #48]
  411a6c:	ldp	x25, x26, [sp, #64]
  411a70:	ldp	x27, x28, [sp, #80]
  411a74:	ldp	x29, x30, [sp], #320
  411a78:	ret
  411a7c:	str	xzr, [x26, #272]
  411a80:	ldp	x0, x2, [x26, #32]
  411a84:	b	411970 <wcrtomb@plt+0xec30>
  411a88:	add	x1, sp, #0x90
  411a8c:	mov	x0, x26
  411a90:	bl	40dc18 <wcrtomb@plt+0xaed8>
  411a94:	mov	x1, x0
  411a98:	b	411a58 <wcrtomb@plt+0xed18>
  411a9c:	mov	x3, #0x1fffffffffffffff    	// #2305843009213693951
  411aa0:	mov	x1, #0x7ffffffffffffffc    	// #9223372036854775804
  411aa4:	b	411414 <wcrtomb@plt+0xe6d4>
  411aa8:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  411aac:	bl	40d520 <wcrtomb@plt+0xa7e0>
  411ab0:	stp	x29, x30, [sp, #-96]!
  411ab4:	mov	x29, sp
  411ab8:	ldr	x2, [x0, #40]
  411abc:	stp	x19, x20, [sp, #16]
  411ac0:	mov	x19, x0
  411ac4:	cbz	x2, 412194 <wcrtomb@plt+0xf454>
  411ac8:	ldr	x1, [x0, #32]
  411acc:	stp	x21, x22, [sp, #32]
  411ad0:	ldrb	w0, [x1]
  411ad4:	add	x0, x19, x0, lsl #2
  411ad8:	ldr	w20, [x0, #1308]
  411adc:	cmn	w20, #0x1
  411ae0:	b.eq	411b48 <wcrtomb@plt+0xee08>  // b.none
  411ae4:	str	w20, [x19, #72]
  411ae8:	mov	x20, x1
  411aec:	sub	x2, x2, #0x1
  411af0:	ldrb	w21, [x20], #1
  411af4:	stp	x20, x2, [x19, #32]
  411af8:	sub	w0, w21, #0xa
  411afc:	cmp	w0, #0x72
  411b00:	b.ls	411b30 <wcrtomb@plt+0xedf0>  // b.plast
  411b04:	ldrb	w3, [x19, #1048]
  411b08:	strb	wzr, [x19, #120]
  411b0c:	cbnz	w3, 411bac <wcrtomb@plt+0xee6c>
  411b10:	ldrb	w0, [x19, #457]
  411b14:	cbnz	w0, 411b6c <wcrtomb@plt+0xee2c>
  411b18:	sxtw	x0, w21
  411b1c:	ldp	x21, x22, [sp, #32]
  411b20:	str	x0, [x19, #48]
  411b24:	ldp	x19, x20, [sp, #16]
  411b28:	ldp	x29, x30, [sp], #96
  411b2c:	ret
  411b30:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x112f0>
  411b34:	add	x3, x3, #0xfb8
  411b38:	ldrh	w0, [x3, w0, uxtw #1]
  411b3c:	adr	x3, 411b48 <wcrtomb@plt+0xee08>
  411b40:	add	x0, x3, w0, sxth #2
  411b44:	br	x0
  411b48:	add	x3, x19, #0x110
  411b4c:	add	x0, sp, #0x40
  411b50:	bl	418830 <wcrtomb@plt+0x15af0>
  411b54:	sub	x1, x0, #0x1
  411b58:	cmn	x1, #0x4
  411b5c:	b.ls	411bc8 <wcrtomb@plt+0xee88>  // b.plast
  411b60:	str	xzr, [x19, #272]
  411b64:	ldp	x1, x2, [x19, #32]
  411b68:	b	411ae4 <wcrtomb@plt+0xeda4>
  411b6c:	bl	402ab0 <__ctype_b_loc@plt>
  411b70:	mov	x1, x0
  411b74:	sxtw	x0, w21
  411b78:	ldr	x1, [x1]
  411b7c:	ldrh	w1, [x1, w21, sxtw #1]
  411b80:	tbz	w1, #10, 411b1c <wcrtomb@plt+0xeddc>
  411b84:	add	x1, sp, #0x40
  411b88:	mov	w0, w21
  411b8c:	stp	xzr, xzr, [sp, #64]
  411b90:	stp	xzr, xzr, [sp, #80]
  411b94:	bl	40d380 <wcrtomb@plt+0xa640>
  411b98:	add	x1, sp, #0x40
  411b9c:	mov	x0, x19
  411ba0:	bl	40dc18 <wcrtomb@plt+0xaed8>
  411ba4:	add	x0, x0, #0x114
  411ba8:	b	411b1c <wcrtomb@plt+0xeddc>
  411bac:	mov	x1, #0x109                 	// #265
  411bb0:	mov	x0, x1
  411bb4:	ldp	x21, x22, [sp, #32]
  411bb8:	str	x1, [x19, #48]
  411bbc:	ldp	x19, x20, [sp, #16]
  411bc0:	ldp	x29, x30, [sp], #96
  411bc4:	ret
  411bc8:	ldr	w1, [sp, #64]
  411bcc:	cmp	w0, #0x1
  411bd0:	str	w1, [x19, #72]
  411bd4:	ldr	x1, [x19, #32]
  411bd8:	ldr	x2, [x19, #40]
  411bdc:	b.eq	411ae8 <wcrtomb@plt+0xeda8>  // b.none
  411be0:	sxtw	x0, w0
  411be4:	ldrb	w3, [x19, #1048]
  411be8:	add	x1, x1, x0
  411bec:	mov	w21, #0xffffffff            	// #-1
  411bf0:	sub	x0, x2, x0
  411bf4:	stp	x1, x0, [x19, #32]
  411bf8:	b	411b08 <wcrtomb@plt+0xedc8>
  411bfc:	ldr	x0, [x19, #448]
  411c00:	tbz	w0, #10, 4121a4 <wcrtomb@plt+0xf464>
  411c04:	ldrb	w3, [x19, #1048]
  411c08:	mov	w21, #0xa                   	// #10
  411c0c:	b	411b08 <wcrtomb@plt+0xedc8>
  411c10:	ldrb	w3, [x19, #1048]
  411c14:	mov	w21, #0x62                  	// #98
  411c18:	b	411b08 <wcrtomb@plt+0xedc8>
  411c1c:	ldrb	w3, [x19, #1048]
  411c20:	mov	w21, #0x60                  	// #96
  411c24:	b	411b08 <wcrtomb@plt+0xedc8>
  411c28:	ldrb	w3, [x19, #1048]
  411c2c:	mov	w21, #0x27                  	// #39
  411c30:	b	411b08 <wcrtomb@plt+0xedc8>
  411c34:	ldrb	w3, [x19, #1048]
  411c38:	mov	w21, #0x3c                  	// #60
  411c3c:	b	411b08 <wcrtomb@plt+0xedc8>
  411c40:	ldrb	w3, [x19, #1048]
  411c44:	mov	w21, #0x3e                  	// #62
  411c48:	b	411b08 <wcrtomb@plt+0xedc8>
  411c4c:	ldrb	w3, [x19, #1048]
  411c50:	mov	w21, #0x42                  	// #66
  411c54:	b	411b08 <wcrtomb@plt+0xedc8>
  411c58:	ldr	x0, [x19, #448]
  411c5c:	tbnz	w0, #3, 412090 <wcrtomb@plt+0xf350>
  411c60:	ldr	x0, [x19, #48]
  411c64:	sub	x1, x0, #0x106
  411c68:	cmp	x1, #0x1
  411c6c:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  411c70:	b.eq	412090 <wcrtomb@plt+0xf350>  // b.none
  411c74:	ldrb	w3, [x19, #1048]
  411c78:	mov	w21, #0x5e                  	// #94
  411c7c:	b	411b08 <wcrtomb@plt+0xedc8>
  411c80:	ldr	x0, [x19, #24]
  411c84:	ldrb	w1, [x19, #1048]
  411c88:	tbnz	x0, #63, 4121e8 <wcrtomb@plt+0xf4a8>
  411c8c:	cmp	w1, #0x0
  411c90:	add	x0, x0, #0x114
  411c94:	mov	x1, #0x10a                 	// #266
  411c98:	csel	x0, x0, x1, eq  // eq = none
  411c9c:	strb	wzr, [x19, #120]
  411ca0:	ldp	x21, x22, [sp, #32]
  411ca4:	str	x0, [x19, #48]
  411ca8:	b	411b24 <wcrtomb@plt+0xede4>
  411cac:	ldr	x3, [x19, #448]
  411cb0:	tst	x3, #0x8
  411cb4:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  411cb8:	b.eq	412058 <wcrtomb@plt+0xf318>  // b.none
  411cbc:	lsr	x0, x3, #13
  411cc0:	eor	x0, x0, #0x1
  411cc4:	and	x4, x0, #0x1
  411cc8:	and	w0, w0, #0x1
  411ccc:	cmp	x4, x2
  411cd0:	b.ge	411cf0 <wcrtomb@plt+0xefb0>  // b.tcont
  411cd4:	ldrb	w4, [x1, #1]
  411cd8:	cmp	w4, #0x5c
  411cdc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  411ce0:	cset	x0, ne  // ne = any
  411ce4:	ldrb	w0, [x20, x0]
  411ce8:	cmp	w0, #0x29
  411cec:	b.eq	412058 <wcrtomb@plt+0xf318>  // b.none
  411cf0:	lsr	x0, x3, #15
  411cf4:	eor	x0, x0, #0x1
  411cf8:	and	x4, x0, #0x1
  411cfc:	and	w0, w0, #0x1
  411d00:	cmp	x4, x2
  411d04:	b.ge	411d24 <wcrtomb@plt+0xefe4>  // b.tcont
  411d08:	ldrb	w4, [x1, #1]
  411d0c:	cmp	w4, #0x5c
  411d10:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  411d14:	cset	x0, ne  // ne = any
  411d18:	ldrb	w0, [x20, x0]
  411d1c:	cmp	w0, #0x7c
  411d20:	b.eq	412058 <wcrtomb@plt+0xf318>  // b.none
  411d24:	tst	x3, #0x800
  411d28:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411d2c:	b.le	411d3c <wcrtomb@plt+0xeffc>
  411d30:	ldrb	w0, [x1, #1]
  411d34:	cmp	w0, #0xa
  411d38:	b.eq	412058 <wcrtomb@plt+0xf318>  // b.none
  411d3c:	ldrb	w3, [x19, #1048]
  411d40:	mov	w21, #0x24                  	// #36
  411d44:	b	411b08 <wcrtomb@plt+0xedc8>
  411d48:	ldr	x0, [x19, #448]
  411d4c:	tbnz	w0, #4, 411d58 <wcrtomb@plt+0xf018>
  411d50:	ldrb	w0, [x19, #120]
  411d54:	cbnz	w0, 4120f8 <wcrtomb@plt+0xf3b8>
  411d58:	mov	x1, #0x102                 	// #258
  411d5c:	mov	x0, x1
  411d60:	ldp	x21, x22, [sp, #32]
  411d64:	str	x1, [x19, #48]
  411d68:	b	411b24 <wcrtomb@plt+0xede4>
  411d6c:	cbz	x2, 412480 <wcrtomb@plt+0xf740>
  411d70:	ldrb	w0, [x1, #1]
  411d74:	add	x0, x19, x0, lsl #2
  411d78:	ldr	w21, [x0, #1308]
  411d7c:	cmn	w21, #0x1
  411d80:	b.eq	411f70 <wcrtomb@plt+0xf230>  // b.none
  411d84:	str	w21, [x19, #72]
  411d88:	ldrb	w21, [x20], #1
  411d8c:	sub	x2, x2, #0x1
  411d90:	stp	x20, x2, [x19, #32]
  411d94:	sub	w0, w21, #0xa
  411d98:	cmp	w0, #0x72
  411d9c:	b.hi	411b04 <wcrtomb@plt+0xedc4>  // b.pmore
  411da0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  411da4:	add	x1, x1, #0xa0
  411da8:	ldrh	w0, [x1, w0, uxtw #1]
  411dac:	adr	x1, 411db8 <wcrtomb@plt+0xf078>
  411db0:	add	x0, x1, w0, sxth #2
  411db4:	br	x0
  411db8:	strb	wzr, [x19, #120]
  411dbc:	mov	x0, x19
  411dc0:	bl	410e88 <wcrtomb@plt+0xe148>
  411dc4:	ldp	x21, x22, [sp, #32]
  411dc8:	str	x0, [x19, #48]
  411dcc:	b	411b24 <wcrtomb@plt+0xede4>
  411dd0:	mov	w2, #0x0                   	// #0
  411dd4:	ldr	x0, [x19, #448]
  411dd8:	tbnz	w0, #10, 412170 <wcrtomb@plt+0xf430>
  411ddc:	ubfx	w1, w0, #1, #1
  411de0:	cmp	w1, w2
  411de4:	b.ne	412170 <wcrtomb@plt+0xf430>  // b.any
  411de8:	tbnz	w0, #4, 411df4 <wcrtomb@plt+0xf0b4>
  411dec:	ldrb	w0, [x19, #120]
  411df0:	cbnz	w0, 412170 <wcrtomb@plt+0xf430>
  411df4:	mov	x1, #0x101                 	// #257
  411df8:	mov	x0, x1
  411dfc:	ldp	x21, x22, [sp, #32]
  411e00:	str	x1, [x19, #48]
  411e04:	b	411b24 <wcrtomb@plt+0xede4>
  411e08:	mov	w7, #0x0                   	// #0
  411e0c:	ldr	x5, [x19, #448]
  411e10:	tbz	w5, #9, 411e94 <wcrtomb@plt+0xf154>
  411e14:	lsr	x0, x5, #12
  411e18:	eor	x0, x0, #0x1
  411e1c:	and	w0, w0, #0x1
  411e20:	cmp	w0, w7
  411e24:	b.ne	411e94 <wcrtomb@plt+0xf154>  // b.any
  411e28:	tbnz	w5, #4, 411e34 <wcrtomb@plt+0xf0f4>
  411e2c:	ldrb	w0, [x19, #120]
  411e30:	cbnz	w0, 411e94 <wcrtomb@plt+0xf154>
  411e34:	mvni	v0.2s, #0x0
  411e38:	add	x2, x20, x2
  411e3c:	cmp	x2, x20
  411e40:	mov	w0, #0xffffffff            	// #-1
  411e44:	mov	w6, #0x8030                	// #32816
  411e48:	str	d0, [x19, #64]
  411e4c:	b.eq	411e90 <wcrtomb@plt+0xf150>  // b.none
  411e50:	ldrb	w1, [x20]
  411e54:	sub	w3, w1, #0x30
  411e58:	and	w4, w3, #0xff
  411e5c:	cmp	w4, #0x9
  411e60:	b.hi	41222c <wcrtomb@plt+0xf4ec>  // b.pmore
  411e64:	cmn	w0, #0x1
  411e68:	b.eq	412158 <wcrtomb@plt+0xf418>  // b.none
  411e6c:	add	w0, w0, w0, lsl #2
  411e70:	add	x20, x20, #0x1
  411e74:	add	w0, w1, w0, lsl #1
  411e78:	cmp	w0, w6
  411e7c:	csel	w0, w0, w6, le
  411e80:	cmp	x2, x20
  411e84:	sub	w0, w0, #0x30
  411e88:	str	w0, [x19, #64]
  411e8c:	b.ne	411e50 <wcrtomb@plt+0xf110>  // b.any
  411e90:	tbz	w5, #21, 412468 <wcrtomb@plt+0xf728>
  411e94:	ldrb	w3, [x19, #1048]
  411e98:	mov	w21, #0x7b                  	// #123
  411e9c:	b	411b08 <wcrtomb@plt+0xedc8>
  411ea0:	mov	w1, #0x0                   	// #0
  411ea4:	ldr	x0, [x19, #448]
  411ea8:	lsr	x0, x0, #13
  411eac:	eor	x0, x0, #0x1
  411eb0:	and	w0, w0, #0x1
  411eb4:	cmp	w0, w1
  411eb8:	b.eq	4121c4 <wcrtomb@plt+0xf484>  // b.none
  411ebc:	ldrb	w3, [x19, #1048]
  411ec0:	mov	w21, #0x28                  	// #40
  411ec4:	b	411b08 <wcrtomb@plt+0xedc8>
  411ec8:	mov	w2, #0x0                   	// #0
  411ecc:	ldr	x1, [x19, #448]
  411ed0:	lsr	x0, x1, #13
  411ed4:	eor	x0, x0, #0x1
  411ed8:	and	w0, w0, #0x1
  411edc:	cmp	w0, w2
  411ee0:	b.ne	412188 <wcrtomb@plt+0xf448>  // b.any
  411ee4:	ldr	x0, [x19, #56]
  411ee8:	cbnz	x0, 411ef0 <wcrtomb@plt+0xf1b0>
  411eec:	tbnz	w1, #17, 412188 <wcrtomb@plt+0xf448>
  411ef0:	sub	x1, x0, #0x1
  411ef4:	mov	x2, #0x108                 	// #264
  411ef8:	mov	x0, x2
  411efc:	strb	wzr, [x19, #120]
  411f00:	ldp	x21, x22, [sp, #32]
  411f04:	stp	x2, x1, [x19, #48]
  411f08:	b	411b24 <wcrtomb@plt+0xede4>
  411f0c:	mov	w1, #0x0                   	// #0
  411f10:	ldr	x0, [x19, #448]
  411f14:	tbnz	w0, #10, 411f2c <wcrtomb@plt+0xf1ec>
  411f18:	lsr	x0, x0, #15
  411f1c:	eor	x0, x0, #0x1
  411f20:	and	w0, w0, #0x1
  411f24:	cmp	w0, w1
  411f28:	b.eq	4121a8 <wcrtomb@plt+0xf468>  // b.none
  411f2c:	ldrb	w3, [x19, #1048]
  411f30:	mov	w21, #0x7c                  	// #124
  411f34:	b	411b08 <wcrtomb@plt+0xedc8>
  411f38:	mov	w2, #0x0                   	// #0
  411f3c:	ldr	x0, [x19, #448]
  411f40:	tbnz	w0, #10, 41217c <wcrtomb@plt+0xf43c>
  411f44:	ubfx	w1, w0, #1, #1
  411f48:	cmp	w1, w2
  411f4c:	b.ne	41217c <wcrtomb@plt+0xf43c>  // b.any
  411f50:	tbnz	w0, #4, 411f5c <wcrtomb@plt+0xf21c>
  411f54:	ldrb	w0, [x19, #120]
  411f58:	cbnz	w0, 41217c <wcrtomb@plt+0xf43c>
  411f5c:	mov	x1, #0x103                 	// #259
  411f60:	mov	x0, x1
  411f64:	ldp	x21, x22, [sp, #32]
  411f68:	str	x1, [x19, #48]
  411f6c:	b	411b24 <wcrtomb@plt+0xede4>
  411f70:	mov	x1, x20
  411f74:	add	x3, x19, #0x110
  411f78:	add	x0, sp, #0x40
  411f7c:	bl	418830 <wcrtomb@plt+0x15af0>
  411f80:	sub	x1, x0, #0x1
  411f84:	cmn	x1, #0x4
  411f88:	b.hi	412434 <wcrtomb@plt+0xf6f4>  // b.pmore
  411f8c:	ldr	w1, [sp, #64]
  411f90:	cmp	w0, #0x1
  411f94:	str	w1, [x19, #72]
  411f98:	ldp	x20, x2, [x19, #32]
  411f9c:	b.eq	411d88 <wcrtomb@plt+0xf048>  // b.none
  411fa0:	mov	x1, x20
  411fa4:	b	411be0 <wcrtomb@plt+0xeea0>
  411fa8:	ldr	x0, [x19, #448]
  411fac:	tbnz	w0, #14, 411b04 <wcrtomb@plt+0xedc4>
  411fb0:	mov	x1, #0x112                 	// #274
  411fb4:	mov	x0, x1
  411fb8:	strb	wzr, [x19, #120]
  411fbc:	ldp	x21, x22, [sp, #32]
  411fc0:	str	x1, [x19, #48]
  411fc4:	b	411b24 <wcrtomb@plt+0xede4>
  411fc8:	ldr	x1, [x19, #448]
  411fcc:	ldrb	w3, [x19, #1048]
  411fd0:	and	x0, x1, #0x80000
  411fd4:	tbnz	w1, #19, 411b08 <wcrtomb@plt+0xedc8>
  411fd8:	cbz	w3, 4122b4 <wcrtomb@plt+0xf574>
  411fdc:	cmp	w21, #0x77
  411fe0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  411fe4:	cset	x3, eq  // eq = none
  411fe8:	add	x0, x0, #0xee0
  411fec:	mov	x1, #0xc                   	// #12
  411ff0:	str	x2, [sp, #56]
  411ff4:	sub	x1, x1, x3
  411ff8:	cinc	x0, x0, eq  // eq = none
  411ffc:	stp	x0, x1, [x19, #32]
  412000:	mov	x0, x19
  412004:	bl	410e88 <wcrtomb@plt+0xe148>
  412008:	strb	wzr, [x19, #120]
  41200c:	ldr	x2, [sp, #56]
  412010:	ldp	x21, x22, [sp, #32]
  412014:	stp	x20, x2, [x19, #32]
  412018:	str	x0, [x19, #48]
  41201c:	b	411b24 <wcrtomb@plt+0xede4>
  412020:	ldr	x0, [x19, #448]
  412024:	ldrb	w3, [x19, #1048]
  412028:	and	x22, x0, #0x80000
  41202c:	tbnz	w0, #19, 411b08 <wcrtomb@plt+0xedc8>
  412030:	cbz	w3, 412304 <wcrtomb@plt+0xf5c4>
  412034:	cmp	w21, #0x73
  412038:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41203c:	cset	x3, eq  // eq = none
  412040:	add	x0, x0, #0xed0
  412044:	mov	x1, #0xb                   	// #11
  412048:	str	x2, [sp, #56]
  41204c:	b	411ff4 <wcrtomb@plt+0xf2b4>
  412050:	ldr	x0, [x19, #448]
  412054:	tbnz	w0, #19, 411c28 <wcrtomb@plt+0xeee8>
  412058:	mov	x1, #0x10d                 	// #269
  41205c:	mov	x0, x1
  412060:	ldp	x21, x22, [sp, #32]
  412064:	str	x1, [x19, #48]
  412068:	b	411b24 <wcrtomb@plt+0xede4>
  41206c:	ldr	x0, [x19, #448]
  412070:	tbnz	w0, #19, 411c10 <wcrtomb@plt+0xeed0>
  412074:	mov	x1, #0x110                 	// #272
  412078:	mov	x0, x1
  41207c:	ldp	x21, x22, [sp, #32]
  412080:	str	x1, [x19, #48]
  412084:	b	411b24 <wcrtomb@plt+0xede4>
  412088:	ldr	x0, [x19, #448]
  41208c:	tbnz	w0, #19, 411c1c <wcrtomb@plt+0xeedc>
  412090:	mov	x1, #0x10c                 	// #268
  412094:	mov	x0, x1
  412098:	ldp	x21, x22, [sp, #32]
  41209c:	str	x1, [x19, #48]
  4120a0:	b	411b24 <wcrtomb@plt+0xede4>
  4120a4:	ldr	x0, [x19, #448]
  4120a8:	tbnz	w0, #19, 411c40 <wcrtomb@plt+0xef00>
  4120ac:	mov	x1, #0x10f                 	// #271
  4120b0:	mov	x0, x1
  4120b4:	ldp	x21, x22, [sp, #32]
  4120b8:	str	x1, [x19, #48]
  4120bc:	b	411b24 <wcrtomb@plt+0xede4>
  4120c0:	ldr	x0, [x19, #448]
  4120c4:	tbnz	w0, #19, 411c34 <wcrtomb@plt+0xeef4>
  4120c8:	mov	x1, #0x10e                 	// #270
  4120cc:	mov	x0, x1
  4120d0:	ldp	x21, x22, [sp, #32]
  4120d4:	str	x1, [x19, #48]
  4120d8:	b	411b24 <wcrtomb@plt+0xede4>
  4120dc:	ldr	x0, [x19, #448]
  4120e0:	tbnz	w0, #19, 411c4c <wcrtomb@plt+0xef0c>
  4120e4:	mov	x1, #0x111                 	// #273
  4120e8:	mov	x0, x1
  4120ec:	ldp	x21, x22, [sp, #32]
  4120f0:	str	x1, [x19, #48]
  4120f4:	b	411b24 <wcrtomb@plt+0xede4>
  4120f8:	ldrb	w3, [x19, #1048]
  4120fc:	mov	w21, #0x2a                  	// #42
  412100:	b	411b08 <wcrtomb@plt+0xedc8>
  412104:	ldrb	w3, [x19, #1048]
  412108:	mov	w21, #0x5b                  	// #91
  41210c:	b	411b08 <wcrtomb@plt+0xedc8>
  412110:	ldrb	w3, [x19, #1048]
  412114:	mov	w21, #0x5c                  	// #92
  412118:	b	411b08 <wcrtomb@plt+0xedc8>
  41211c:	mov	w1, #0x1                   	// #1
  412120:	b	411f10 <wcrtomb@plt+0xf1d0>
  412124:	mov	w7, #0x1                   	// #1
  412128:	b	411e0c <wcrtomb@plt+0xf0cc>
  41212c:	mov	w2, #0x1                   	// #1
  412130:	b	411dd4 <wcrtomb@plt+0xf094>
  412134:	mov	w2, #0x1                   	// #1
  412138:	b	411f3c <wcrtomb@plt+0xf1fc>
  41213c:	mov	w2, #0x1                   	// #1
  412140:	b	411ecc <wcrtomb@plt+0xf18c>
  412144:	mov	w1, #0x1                   	// #1
  412148:	b	411ea4 <wcrtomb@plt+0xf164>
  41214c:	ldrb	w3, [x19, #1048]
  412150:	mov	w21, #0x2e                  	// #46
  412154:	b	411b08 <wcrtomb@plt+0xedc8>
  412158:	str	w3, [x19, #64]
  41215c:	add	x20, x20, #0x1
  412160:	mov	w0, w3
  412164:	cmp	x2, x20
  412168:	b.ne	411e50 <wcrtomb@plt+0xf110>  // b.any
  41216c:	b	411e90 <wcrtomb@plt+0xf150>
  412170:	ldrb	w3, [x19, #1048]
  412174:	mov	w21, #0x3f                  	// #63
  412178:	b	411b08 <wcrtomb@plt+0xedc8>
  41217c:	ldrb	w3, [x19, #1048]
  412180:	mov	w21, #0x2b                  	// #43
  412184:	b	411b08 <wcrtomb@plt+0xedc8>
  412188:	ldrb	w3, [x19, #1048]
  41218c:	mov	w21, #0x29                  	// #41
  412190:	b	411b08 <wcrtomb@plt+0xedc8>
  412194:	mov	x1, #0xffffffffffffffff    	// #-1
  412198:	mov	x0, x1
  41219c:	str	x1, [x19, #48]
  4121a0:	b	411b24 <wcrtomb@plt+0xede4>
  4121a4:	tbz	w0, #11, 411c04 <wcrtomb@plt+0xeec4>
  4121a8:	mov	x1, #0x106                 	// #262
  4121ac:	mov	w2, #0x1                   	// #1
  4121b0:	mov	x0, x1
  4121b4:	strb	w2, [x19, #120]
  4121b8:	ldp	x21, x22, [sp, #32]
  4121bc:	str	x1, [x19, #48]
  4121c0:	b	411b24 <wcrtomb@plt+0xede4>
  4121c4:	ldr	x1, [x19, #56]
  4121c8:	mov	x2, #0x107                 	// #263
  4121cc:	mov	w3, #0x1                   	// #1
  4121d0:	mov	x0, x2
  4121d4:	add	x1, x1, #0x1
  4121d8:	strb	w3, [x19, #120]
  4121dc:	ldp	x21, x22, [sp, #32]
  4121e0:	stp	x2, x1, [x19, #48]
  4121e4:	b	411b24 <wcrtomb@plt+0xede4>
  4121e8:	mvni	v0.4s, #0x0
  4121ec:	mov	x2, #0xfffffffffffffffe    	// #-2
  4121f0:	ldr	x0, [x19, #448]
  4121f4:	stp	q0, q0, [sp, #64]
  4121f8:	tbnz	w0, #6, 412208 <wcrtomb@plt+0xf4c8>
  4121fc:	mov	x3, #0xfffffffffffffbff    	// #-1025
  412200:	mov	x2, #0xfffffffffffffbfe    	// #-1026
  412204:	str	x3, [sp, #64]
  412208:	tbz	w0, #7, 412210 <wcrtomb@plt+0xf4d0>
  41220c:	str	x2, [sp, #64]
  412210:	cbnz	w1, 412368 <wcrtomb@plt+0xf628>
  412214:	add	x1, sp, #0x40
  412218:	mov	x0, x19
  41221c:	bl	40dc18 <wcrtomb@plt+0xaed8>
  412220:	ldrb	w1, [x19, #1048]
  412224:	str	x0, [x19, #24]
  412228:	b	411c8c <wcrtomb@plt+0xef4c>
  41222c:	cmp	x2, x20
  412230:	b.eq	411e90 <wcrtomb@plt+0xf150>  // b.none
  412234:	cmp	w1, #0x2c
  412238:	b.eq	4123a8 <wcrtomb@plt+0xf668>  // b.none
  41223c:	str	w0, [x19, #68]
  412240:	cbz	w7, 41242c <wcrtomb@plt+0xf6ec>
  412244:	ldrb	w3, [x20]
  412248:	mov	w1, w0
  41224c:	cmp	w3, #0x5c
  412250:	b.ne	411e90 <wcrtomb@plt+0xf150>  // b.any
  412254:	add	x20, x20, #0x1
  412258:	cmp	x20, x2
  41225c:	b.eq	411e90 <wcrtomb@plt+0xf150>  // b.none
  412260:	ldrb	w3, [x20]
  412264:	cmp	w3, #0x7d
  412268:	b.ne	411e90 <wcrtomb@plt+0xf150>  // b.any
  41226c:	cmn	w0, #0x1
  412270:	b.eq	411e90 <wcrtomb@plt+0xf150>  // b.none
  412274:	cmn	w1, #0x1
  412278:	b.eq	412290 <wcrtomb@plt+0xf550>  // b.none
  41227c:	cmp	w1, w0
  412280:	b.lt	411e90 <wcrtomb@plt+0xf150>  // b.tstop
  412284:	mov	w0, #0x7fff                	// #32767
  412288:	cmp	w1, w0
  41228c:	b.gt	412450 <wcrtomb@plt+0xf710>
  412290:	add	x20, x20, #0x1
  412294:	mov	x1, #0x104                 	// #260
  412298:	sub	x2, x2, x20
  41229c:	mov	x0, x1
  4122a0:	strb	wzr, [x19, #120]
  4122a4:	ldp	x21, x22, [sp, #32]
  4122a8:	stp	x20, x2, [x19, #32]
  4122ac:	str	x1, [x19, #48]
  4122b0:	b	411b24 <wcrtomb@plt+0xede4>
  4122b4:	add	x1, sp, #0x40
  4122b8:	add	x4, x19, #0x1cc
  4122bc:	mov	x6, #0x1                   	// #1
  4122c0:	stp	xzr, xzr, [sp, #64]
  4122c4:	stp	xzr, xzr, [sp, #80]
  4122c8:	ldrb	w2, [x4, x0]
  4122cc:	cmp	w2, #0x2
  4122d0:	b.ne	4122e8 <wcrtomb@plt+0xf5a8>  // b.any
  4122d4:	lsr	w3, w0, #6
  4122d8:	lsl	x2, x6, x0
  4122dc:	ldr	x5, [x1, x3, lsl #3]
  4122e0:	orr	x2, x2, x5
  4122e4:	str	x2, [x1, x3, lsl #3]
  4122e8:	add	x0, x0, #0x1
  4122ec:	cmp	x0, #0x100
  4122f0:	b.ne	4122c8 <wcrtomb@plt+0xf588>  // b.any
  4122f4:	cmp	w21, #0x57
  4122f8:	b.eq	412350 <wcrtomb@plt+0xf610>  // b.none
  4122fc:	strb	wzr, [x19, #120]
  412300:	b	411b9c <wcrtomb@plt+0xee5c>
  412304:	stp	xzr, xzr, [sp, #64]
  412308:	stp	xzr, xzr, [sp, #80]
  41230c:	bl	402ab0 <__ctype_b_loc@plt>
  412310:	add	x1, sp, #0x40
  412314:	ldr	x3, [x0]
  412318:	mov	x5, #0x1                   	// #1
  41231c:	nop
  412320:	ldrh	w0, [x3, x22, lsl #1]
  412324:	tbz	w0, #13, 41233c <wcrtomb@plt+0xf5fc>
  412328:	lsr	w2, w22, #6
  41232c:	lsl	x0, x5, x22
  412330:	ldr	x4, [x1, x2, lsl #3]
  412334:	orr	x0, x0, x4
  412338:	str	x0, [x1, x2, lsl #3]
  41233c:	add	x22, x22, #0x1
  412340:	cmp	x22, #0x100
  412344:	b.ne	412320 <wcrtomb@plt+0xf5e0>  // b.any
  412348:	cmp	w21, #0x53
  41234c:	b.ne	4122fc <wcrtomb@plt+0xf5bc>  // b.any
  412350:	ldp	q1, q0, [sp, #64]
  412354:	mvn	v1.16b, v1.16b
  412358:	mvn	v0.16b, v0.16b
  41235c:	stp	q1, q0, [sp, #64]
  412360:	strb	wzr, [x19, #120]
  412364:	b	411b9c <wcrtomb@plt+0xee5c>
  412368:	add	x1, sp, #0x40
  41236c:	add	x4, x19, #0x51c
  412370:	mov	x0, #0x0                   	// #0
  412374:	mov	x6, #0x1                   	// #1
  412378:	ldr	w2, [x4, x0, lsl #2]
  41237c:	cmn	w2, #0x1
  412380:	b.ne	412398 <wcrtomb@plt+0xf658>  // b.any
  412384:	lsr	w3, w0, #6
  412388:	lsl	x2, x6, x0
  41238c:	ldr	x5, [x1, x3, lsl #3]
  412390:	bic	x2, x5, x2
  412394:	str	x2, [x1, x3, lsl #3]
  412398:	add	x0, x0, #0x1
  41239c:	cmp	x0, #0x100
  4123a0:	b.ne	412378 <wcrtomb@plt+0xf638>  // b.any
  4123a4:	b	412218 <wcrtomb@plt+0xf4d8>
  4123a8:	cmn	w0, #0x1
  4123ac:	b.ne	4123b8 <wcrtomb@plt+0xf678>  // b.any
  4123b0:	mov	w0, #0x0                   	// #0
  4123b4:	str	wzr, [x19, #64]
  4123b8:	add	x20, x20, #0x1
  4123bc:	mov	w1, #0xffffffff            	// #-1
  4123c0:	cmp	x2, x20
  4123c4:	mov	w8, #0x8030                	// #32816
  4123c8:	b.eq	411e90 <wcrtomb@plt+0xf150>  // b.none
  4123cc:	nop
  4123d0:	ldrb	w3, [x20]
  4123d4:	sub	w4, w3, #0x30
  4123d8:	and	w6, w4, #0xff
  4123dc:	cmp	w6, #0x9
  4123e0:	b.hi	412440 <wcrtomb@plt+0xf700>  // b.pmore
  4123e4:	cmn	w1, #0x1
  4123e8:	b.eq	412414 <wcrtomb@plt+0xf6d4>  // b.none
  4123ec:	add	w1, w1, w1, lsl #2
  4123f0:	add	x20, x20, #0x1
  4123f4:	add	w1, w3, w1, lsl #1
  4123f8:	cmp	w1, w8
  4123fc:	csel	w1, w1, w8, le
  412400:	cmp	x2, x20
  412404:	sub	w1, w1, #0x30
  412408:	str	w1, [x19, #68]
  41240c:	b.ne	4123d0 <wcrtomb@plt+0xf690>  // b.any
  412410:	b	411e90 <wcrtomb@plt+0xf150>
  412414:	str	w4, [x19, #68]
  412418:	add	x20, x20, #0x1
  41241c:	mov	w1, w4
  412420:	cmp	x2, x20
  412424:	b.ne	4123d0 <wcrtomb@plt+0xf690>  // b.any
  412428:	b	411e90 <wcrtomb@plt+0xf150>
  41242c:	mov	w1, w0
  412430:	b	412260 <wcrtomb@plt+0xf520>
  412434:	str	xzr, [x19, #272]
  412438:	ldp	x20, x2, [x19, #32]
  41243c:	b	411d84 <wcrtomb@plt+0xf044>
  412440:	cbz	w7, 412258 <wcrtomb@plt+0xf518>
  412444:	cmp	x20, x2
  412448:	b.ne	41224c <wcrtomb@plt+0xf50c>  // b.any
  41244c:	b	411e90 <wcrtomb@plt+0xf150>
  412450:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  412454:	add	x1, x1, #0xeb0
  412458:	mov	w2, #0x5                   	// #5
  41245c:	mov	x0, #0x0                   	// #0
  412460:	bl	402c20 <dcgettext@plt>
  412464:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412468:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41246c:	add	x1, x1, #0xe98
  412470:	mov	w2, #0x5                   	// #5
  412474:	mov	x0, #0x0                   	// #0
  412478:	bl	402c20 <dcgettext@plt>
  41247c:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412480:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  412484:	add	x1, x1, #0xe80
  412488:	mov	w2, #0x5                   	// #5
  41248c:	mov	x0, #0x0                   	// #0
  412490:	bl	402c20 <dcgettext@plt>
  412494:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412498:	stp	x29, x30, [sp, #-240]!
  41249c:	mov	x2, #0x109                 	// #265
  4124a0:	mov	x29, sp
  4124a4:	ldr	x1, [x0, #128]
  4124a8:	stp	x19, x20, [sp, #16]
  4124ac:	mov	x19, x0
  4124b0:	cmp	x1, #0xff
  4124b4:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  4124b8:	b.le	412b0c <wcrtomb@plt+0xfdcc>
  4124bc:	cmp	x1, #0x10a
  4124c0:	b.ne	4124cc <wcrtomb@plt+0xf78c>  // b.any
  4124c4:	ldrb	w0, [x0, #1050]
  4124c8:	cbnz	w0, 412930 <wcrtomb@plt+0xfbf0>
  4124cc:	mov	x0, x19
  4124d0:	bl	40f978 <wcrtomb@plt+0xcc38>
  4124d4:	mov	x0, x19
  4124d8:	bl	411ab0 <wcrtomb@plt+0xed70>
  4124dc:	mov	x1, x0
  4124e0:	str	x0, [x19, #128]
  4124e4:	sub	x0, x1, #0x101
  4124e8:	cmp	x0, #0x3
  4124ec:	b.hi	412524 <wcrtomb@plt+0xf7e4>  // b.pmore
  4124f0:	stp	x23, x24, [sp, #48]
  4124f4:	cmp	x1, #0x104
  4124f8:	b.eq	412530 <wcrtomb@plt+0xf7f0>  // b.none
  4124fc:	mov	x0, x19
  412500:	bl	40f978 <wcrtomb@plt+0xcc38>
  412504:	mov	x0, x19
  412508:	bl	411ab0 <wcrtomb@plt+0xed70>
  41250c:	mov	x1, x0
  412510:	str	x0, [x19, #128]
  412514:	sub	x0, x1, #0x101
  412518:	cmp	x0, #0x3
  41251c:	b.ls	4124f4 <wcrtomb@plt+0xf7b4>  // b.plast
  412520:	ldp	x23, x24, [sp, #48]
  412524:	ldp	x19, x20, [sp, #16]
  412528:	ldp	x29, x30, [sp], #240
  41252c:	ret
  412530:	ldp	x6, x23, [x19, #144]
  412534:	ldr	x5, [x19, #64]
  412538:	mov	x1, x23
  41253c:	cbnz	x5, 4125b8 <wcrtomb@plt+0xf878>
  412540:	add	x0, x6, x1, lsl #3
  412544:	ldur	x0, [x0, #-8]
  412548:	cmp	x0, #0x103
  41254c:	b.gt	412580 <wcrtomb@plt+0xf840>
  412550:	cmp	x0, #0x100
  412554:	b.gt	4125ac <wcrtomb@plt+0xf86c>
  412558:	add	x5, x5, #0x1
  41255c:	mov	x0, x19
  412560:	sub	x5, x23, x5
  412564:	str	x5, [x19, #152]
  412568:	bl	411ab0 <wcrtomb@plt+0xed70>
  41256c:	str	x0, [x19, #128]
  412570:	mov	x0, x19
  412574:	bl	412498 <wcrtomb@plt+0xf758>
  412578:	ldr	x1, [x19, #128]
  41257c:	b	412514 <wcrtomb@plt+0xf7d4>
  412580:	sub	x0, x0, #0x105
  412584:	cmp	x0, #0x1
  412588:	b.hi	412558 <wcrtomb@plt+0xf818>  // b.pmore
  41258c:	sub	x4, x1, #0x1
  412590:	mov	x0, x19
  412594:	mov	x1, x4
  412598:	bl	40d2d0 <wcrtomb@plt+0xa590>
  41259c:	add	x2, x0, #0x1
  4125a0:	sub	x1, x4, x0
  4125a4:	add	x5, x5, x2
  4125a8:	b	412540 <wcrtomb@plt+0xf800>
  4125ac:	sub	x1, x1, #0x1
  4125b0:	add	x5, x5, #0x1
  4125b4:	b	412540 <wcrtomb@plt+0xf800>
  4125b8:	stp	x21, x22, [sp, #32]
  4125bc:	mov	x21, #0x0                   	// #0
  4125c0:	stp	x25, x26, [sp, #64]
  4125c4:	stp	x27, x28, [sp, #80]
  4125c8:	add	x0, x6, x1, lsl #3
  4125cc:	ldur	x0, [x0, #-8]
  4125d0:	cmp	x0, #0x103
  4125d4:	b.gt	4128f0 <wcrtomb@plt+0xfbb0>
  4125d8:	cmp	x0, #0x100
  4125dc:	b.gt	412924 <wcrtomb@plt+0xfbe4>
  4125e0:	ldr	w0, [x19, #68]
  4125e4:	add	x21, x21, #0x1
  4125e8:	sub	x23, x23, x21
  4125ec:	tbnz	w0, #31, 412ae4 <wcrtomb@plt+0xfda4>
  4125f0:	ldr	w0, [x19, #64]
  4125f4:	cbz	w0, 412ad0 <wcrtomb@plt+0xfd90>
  4125f8:	cmp	w0, #0x1
  4125fc:	b.le	412b04 <wcrtomb@plt+0xfdc4>
  412600:	lsl	x27, x23, #3
  412604:	add	x25, x21, x23
  412608:	mov	w22, #0x1                   	// #1
  41260c:	nop
  412610:	ldrb	w0, [x19, #1048]
  412614:	cmp	x21, #0x0
  412618:	cbnz	w0, 412704 <wcrtomb@plt+0xf9c4>
  41261c:	mov	x24, x27
  412620:	mov	x20, #0x0                   	// #0
  412624:	b.le	41264c <wcrtomb@plt+0xf90c>
  412628:	ldr	x1, [x19, #144]
  41262c:	add	x20, x20, #0x1
  412630:	mov	x0, x19
  412634:	mov	w2, #0x3                   	// #3
  412638:	ldr	x1, [x1, x24]
  41263c:	add	x24, x24, #0x8
  412640:	bl	40f7d8 <wcrtomb@plt+0xca98>
  412644:	cmp	x20, x21
  412648:	b.ne	412628 <wcrtomb@plt+0xf8e8>  // b.any
  41264c:	mov	x0, x19
  412650:	mov	x1, #0x105                 	// #261
  412654:	bl	40f978 <wcrtomb@plt+0xcc38>
  412658:	add	w22, w22, #0x1
  41265c:	ldr	w0, [x19, #64]
  412660:	cmp	w0, w22
  412664:	b.gt	412610 <wcrtomb@plt+0xf8d0>
  412668:	ldr	w0, [x19, #68]
  41266c:	lsl	x1, x23, #3
  412670:	str	x1, [sp, #104]
  412674:	add	x24, x21, x23
  412678:	cmp	w0, w22
  41267c:	b.le	4126e4 <wcrtomb@plt+0xf9a4>
  412680:	ldrb	w0, [x19, #1048]
  412684:	cmp	x21, #0x0
  412688:	cbnz	w0, 412754 <wcrtomb@plt+0xfa14>
  41268c:	mov	x20, #0x0                   	// #0
  412690:	ldr	x25, [sp, #104]
  412694:	b.le	4126bc <wcrtomb@plt+0xf97c>
  412698:	ldr	x1, [x19, #144]
  41269c:	add	x20, x20, #0x1
  4126a0:	mov	x0, x19
  4126a4:	mov	w2, #0x3                   	// #3
  4126a8:	ldr	x1, [x1, x25]
  4126ac:	add	x25, x25, #0x8
  4126b0:	bl	40f7d8 <wcrtomb@plt+0xca98>
  4126b4:	cmp	x20, x21
  4126b8:	b.ne	412698 <wcrtomb@plt+0xf958>  // b.any
  4126bc:	mov	x0, x19
  4126c0:	mov	x1, #0x101                 	// #257
  4126c4:	bl	40f978 <wcrtomb@plt+0xcc38>
  4126c8:	add	w22, w22, #0x1
  4126cc:	mov	x0, x19
  4126d0:	mov	x1, #0x105                 	// #261
  4126d4:	bl	40f978 <wcrtomb@plt+0xcc38>
  4126d8:	ldr	w0, [x19, #68]
  4126dc:	cmp	w0, w22
  4126e0:	b.gt	412680 <wcrtomb@plt+0xf940>
  4126e4:	mov	x0, x19
  4126e8:	bl	411ab0 <wcrtomb@plt+0xed70>
  4126ec:	mov	x1, x0
  4126f0:	ldp	x21, x22, [sp, #32]
  4126f4:	ldp	x25, x26, [sp, #64]
  4126f8:	ldp	x27, x28, [sp, #80]
  4126fc:	str	x0, [x19, #128]
  412700:	b	412514 <wcrtomb@plt+0xf7d4>
  412704:	b.le	41264c <wcrtomb@plt+0xf90c>
  412708:	mov	x20, x23
  41270c:	nop
  412710:	ldr	x1, [x19, #144]
  412714:	mov	x0, x19
  412718:	ldr	x2, [x19, #280]
  41271c:	ldr	x1, [x1, x20, lsl #3]
  412720:	ldrb	w2, [x2, x20]
  412724:	add	x20, x20, #0x1
  412728:	bl	40f7d8 <wcrtomb@plt+0xca98>
  41272c:	cmp	x25, x20
  412730:	b.ne	412710 <wcrtomb@plt+0xf9d0>  // b.any
  412734:	mov	x0, x19
  412738:	mov	x1, #0x105                 	// #261
  41273c:	bl	40f978 <wcrtomb@plt+0xcc38>
  412740:	add	w22, w22, #0x1
  412744:	ldr	w0, [x19, #64]
  412748:	cmp	w0, w22
  41274c:	b.gt	412610 <wcrtomb@plt+0xf8d0>
  412750:	b	412668 <wcrtomb@plt+0xf928>
  412754:	b.le	4126bc <wcrtomb@plt+0xf97c>
  412758:	ldp	x1, x2, [x19, #152]
  41275c:	mov	x27, x23
  412760:	ldr	x0, [x19, #144]
  412764:	mov	x25, #0x80                  	// #128
  412768:	ldr	x4, [x19, #280]
  41276c:	cmp	x2, x1
  412770:	ldr	x20, [x0, x27, lsl #3]
  412774:	ldrb	w26, [x4, x27]
  412778:	b.eq	412810 <wcrtomb@plt+0xfad0>  // b.none
  41277c:	nop
  412780:	ldrb	w0, [x19, #1048]
  412784:	cbz	w0, 4128b0 <wcrtomb@plt+0xfb70>
  412788:	strb	w26, [x4, x1]
  41278c:	ldr	x0, [x19, #144]
  412790:	cmp	x20, #0x106
  412794:	ldr	x1, [x19, #152]
  412798:	add	x2, x1, #0x1
  41279c:	str	x2, [x19, #152]
  4127a0:	str	x20, [x0, x1, lsl #3]
  4127a4:	b.gt	4128c8 <wcrtomb@plt+0xfb88>
  4127a8:	cmp	x20, #0x104
  4127ac:	b.gt	4128e0 <wcrtomb@plt+0xfba0>
  4127b0:	cmp	x20, #0x100
  4127b4:	b.eq	4127d0 <wcrtomb@plt+0xfa90>  // b.none
  4127b8:	sub	x20, x20, #0x101
  4127bc:	cmp	x20, #0x2
  4127c0:	b.ls	4128d8 <wcrtomb@plt+0xfb98>  // b.plast
  4127c4:	ldr	x1, [x19, #176]
  4127c8:	add	x1, x1, #0x1
  4127cc:	str	x1, [x19, #176]
  4127d0:	ldr	x1, [x19, #136]
  4127d4:	add	x1, x1, #0x1
  4127d8:	str	x1, [x19, #136]
  4127dc:	ldr	x2, [x19, #168]
  4127e0:	cmp	x2, x1
  4127e4:	b.ge	4127ec <wcrtomb@plt+0xfaac>  // b.tcont
  4127e8:	str	x1, [x19, #168]
  4127ec:	add	x27, x27, #0x1
  4127f0:	cmp	x27, x24
  4127f4:	b.eq	4126bc <wcrtomb@plt+0xf97c>  // b.none
  4127f8:	ldp	x1, x2, [x19, #152]
  4127fc:	ldr	x4, [x19, #280]
  412800:	ldr	x20, [x0, x27, lsl #3]
  412804:	ldrb	w26, [x4, x27]
  412808:	cmp	x2, x1
  41280c:	b.ne	412780 <wcrtomb@plt+0xfa40>  // b.any
  412810:	asr	x28, x2, #1
  412814:	adds	x28, x2, x28
  412818:	b.vs	412c70 <wcrtomb@plt+0xff30>
  41281c:	asr	x4, x28, #63
  412820:	sbfx	x6, x28, #60, #1
  412824:	lsl	x1, x28, #3
  412828:	extr	x4, x4, x28, #61
  41282c:	cmp	x6, x4
  412830:	b.ne	412c70 <wcrtomb@plt+0xff30>  // b.any
  412834:	cmp	x1, #0x7f
  412838:	mov	x3, #0x10                  	// #16
  41283c:	csel	x1, x1, x25, gt
  412840:	csel	x28, x28, x3, gt
  412844:	cbz	x0, 41291c <wcrtomb@plt+0xfbdc>
  412848:	sub	x4, x28, x2
  41284c:	cmp	x4, #0x0
  412850:	b.gt	412874 <wcrtomb@plt+0xfb34>
  412854:	adds	x28, x2, #0x1
  412858:	b.vs	412c60 <wcrtomb@plt+0xff20>
  41285c:	asr	x2, x28, #63
  412860:	sbfx	x4, x28, #60, #1
  412864:	lsl	x1, x28, #3
  412868:	extr	x2, x2, x28, #61
  41286c:	cmp	x4, x2
  412870:	b.ne	412c60 <wcrtomb@plt+0xff20>  // b.any
  412874:	bl	418660 <wcrtomb@plt+0x15920>
  412878:	str	x0, [x19, #144]
  41287c:	ldrb	w1, [x19, #1048]
  412880:	str	x28, [x19, #160]
  412884:	cbz	w1, 412790 <wcrtomb@plt+0xfa50>
  412888:	ldr	x0, [x19, #280]
  41288c:	tbnz	x28, #63, 412c60 <wcrtomb@plt+0xff20>
  412890:	mov	x1, x28
  412894:	bl	418660 <wcrtomb@plt+0x15920>
  412898:	mov	x4, x0
  41289c:	str	x0, [x19, #280]
  4128a0:	ldrb	w0, [x19, #1048]
  4128a4:	ldr	x1, [x19, #152]
  4128a8:	cbnz	w0, 412788 <wcrtomb@plt+0xfa48>
  4128ac:	nop
  4128b0:	ldr	x0, [x19, #144]
  4128b4:	add	x2, x1, #0x1
  4128b8:	str	x2, [x19, #152]
  4128bc:	cmp	x20, #0x106
  4128c0:	str	x20, [x0, x1, lsl #3]
  4128c4:	b.le	4127a8 <wcrtomb@plt+0xfa68>
  4128c8:	cmp	x20, #0x112
  4128cc:	b.ne	4127c4 <wcrtomb@plt+0xfa84>  // b.any
  4128d0:	strb	wzr, [x19, #192]
  4128d4:	b	4127c4 <wcrtomb@plt+0xfa84>
  4128d8:	ldr	x1, [x19, #136]
  4128dc:	b	4127dc <wcrtomb@plt+0xfa9c>
  4128e0:	ldr	x1, [x19, #136]
  4128e4:	sub	x1, x1, #0x1
  4128e8:	str	x1, [x19, #136]
  4128ec:	b	4127dc <wcrtomb@plt+0xfa9c>
  4128f0:	sub	x0, x0, #0x105
  4128f4:	cmp	x0, #0x1
  4128f8:	b.hi	4125e0 <wcrtomb@plt+0xf8a0>  // b.pmore
  4128fc:	sub	x4, x1, #0x1
  412900:	mov	x0, x19
  412904:	mov	x1, x4
  412908:	bl	40d2d0 <wcrtomb@plt+0xa590>
  41290c:	add	x2, x0, #0x1
  412910:	sub	x1, x4, x0
  412914:	add	x21, x21, x2
  412918:	b	4125c8 <wcrtomb@plt+0xf888>
  41291c:	str	xzr, [x19, #160]
  412920:	b	412848 <wcrtomb@plt+0xfb08>
  412924:	sub	x1, x1, #0x1
  412928:	add	x21, x21, #0x1
  41292c:	b	4125c8 <wcrtomb@plt+0xf888>
  412930:	ldr	x1, [x19, #200]
  412934:	cbnz	x1, 4129b0 <wcrtomb@plt+0xfc70>
  412938:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41293c:	add	x20, x20, #0x188
  412940:	add	x2, x20, #0x170
  412944:	add	x1, sp, #0x70
  412948:	ldr	x0, [x19, #448]
  41294c:	stp	x21, x22, [sp, #32]
  412950:	ld1	{v0.16b, v1.16b}, [x2]
  412954:	st1	{v0.16b, v1.16b}, [x1]
  412958:	tbnz	w0, #6, 412964 <wcrtomb@plt+0xfc24>
  41295c:	mov	x2, #0xfffffffffffffbff    	// #-1025
  412960:	str	x2, [sp, #112]
  412964:	tbnz	w0, #7, 412af4 <wcrtomb@plt+0xfdb4>
  412968:	add	x20, x20, #0x190
  41296c:	add	x21, x19, #0xd0
  412970:	add	x22, x19, #0x110
  412974:	mov	x0, x19
  412978:	bl	40dc18 <wcrtomb@plt+0xaed8>
  41297c:	add	x0, x0, #0x114
  412980:	str	x0, [x19, #200]
  412984:	nop
  412988:	mov	x1, x20
  41298c:	mov	x0, x19
  412990:	bl	40dc18 <wcrtomb@plt+0xaed8>
  412994:	add	x0, x0, #0x114
  412998:	str	x0, [x21], #8
  41299c:	add	x20, x20, #0x20
  4129a0:	cmp	x22, x21
  4129a4:	b.ne	412988 <wcrtomb@plt+0xfc48>  // b.any
  4129a8:	ldp	x21, x22, [sp, #32]
  4129ac:	ldr	x1, [x19, #200]
  4129b0:	mov	x0, x19
  4129b4:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129b8:	mov	w20, #0x3                   	// #3
  4129bc:	ldr	x1, [x19, #208]
  4129c0:	mov	x0, x19
  4129c4:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129c8:	mov	x0, x19
  4129cc:	mov	x1, #0xe0                  	// #224
  4129d0:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129d4:	ldr	x1, [x19, #224]
  4129d8:	mov	x0, x19
  4129dc:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129e0:	mov	x0, x19
  4129e4:	mov	x1, #0x105                 	// #261
  4129e8:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129ec:	mov	x0, x19
  4129f0:	mov	x1, #0x106                 	// #262
  4129f4:	bl	40f978 <wcrtomb@plt+0xcc38>
  4129f8:	mov	x0, x19
  4129fc:	mov	x1, #0xed                  	// #237
  412a00:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a04:	ldr	x1, [x19, #240]
  412a08:	mov	x0, x19
  412a0c:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a10:	mov	x0, x19
  412a14:	mov	x1, #0x105                 	// #261
  412a18:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a1c:	mov	x0, x19
  412a20:	mov	x1, #0x106                 	// #262
  412a24:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a28:	ldr	x1, [x19, #232]
  412a2c:	mov	x0, x19
  412a30:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a34:	mov	x0, x19
  412a38:	mov	x1, #0xf0                  	// #240
  412a3c:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a40:	ldr	x1, [x19, #248]
  412a44:	mov	x0, x19
  412a48:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a4c:	mov	x0, x19
  412a50:	mov	x1, #0x105                 	// #261
  412a54:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a58:	mov	x0, x19
  412a5c:	mov	x1, #0x106                 	// #262
  412a60:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a64:	mov	x0, x19
  412a68:	mov	x1, #0xf4                  	// #244
  412a6c:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a70:	ldr	x1, [x19, #264]
  412a74:	mov	x0, x19
  412a78:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a7c:	mov	x0, x19
  412a80:	mov	x1, #0x105                 	// #261
  412a84:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a88:	mov	x0, x19
  412a8c:	mov	x1, #0x106                 	// #262
  412a90:	bl	40f978 <wcrtomb@plt+0xcc38>
  412a94:	ldr	x1, [x19, #256]
  412a98:	mov	x0, x19
  412a9c:	bl	40f978 <wcrtomb@plt+0xcc38>
  412aa0:	ldr	x1, [x19, #216]
  412aa4:	mov	x0, x19
  412aa8:	bl	40f978 <wcrtomb@plt+0xcc38>
  412aac:	mov	x0, x19
  412ab0:	mov	x1, #0x105                 	// #261
  412ab4:	bl	40f978 <wcrtomb@plt+0xcc38>
  412ab8:	mov	x0, x19
  412abc:	mov	x1, #0x106                 	// #262
  412ac0:	bl	40f978 <wcrtomb@plt+0xcc38>
  412ac4:	subs	w20, w20, #0x1
  412ac8:	b.ne	412aa0 <wcrtomb@plt+0xfd60>  // b.any
  412acc:	b	4124d4 <wcrtomb@plt+0xf794>
  412ad0:	mov	x0, x19
  412ad4:	mov	x1, #0x101                 	// #257
  412ad8:	bl	40f978 <wcrtomb@plt+0xcc38>
  412adc:	ldr	w0, [x19, #64]
  412ae0:	b	4125f8 <wcrtomb@plt+0xf8b8>
  412ae4:	mov	x0, x19
  412ae8:	mov	x1, #0x103                 	// #259
  412aec:	bl	40f978 <wcrtomb@plt+0xcc38>
  412af0:	b	4125f0 <wcrtomb@plt+0xf8b0>
  412af4:	ldr	x0, [sp, #112]
  412af8:	and	x0, x0, #0xfffffffffffffffe
  412afc:	str	x0, [sp, #112]
  412b00:	b	412968 <wcrtomb@plt+0xfc28>
  412b04:	mov	w22, #0x1                   	// #1
  412b08:	b	412668 <wcrtomb@plt+0xf928>
  412b0c:	cmp	x1, #0x109
  412b10:	b.eq	412b2c <wcrtomb@plt+0xfdec>  // b.none
  412b14:	cmp	x1, #0x107
  412b18:	b.eq	412b94 <wcrtomb@plt+0xfe54>  // b.none
  412b1c:	mov	x1, #0x100                 	// #256
  412b20:	bl	40f978 <wcrtomb@plt+0xcc38>
  412b24:	ldr	x1, [x19, #128]
  412b28:	b	4124e4 <wcrtomb@plt+0xf7a4>
  412b2c:	ldr	w1, [x0, #72]
  412b30:	cmn	w1, #0x1
  412b34:	b.eq	412c64 <wcrtomb@plt+0xff24>  // b.none
  412b38:	bl	40fc50 <wcrtomb@plt+0xcf10>
  412b3c:	ldrb	w0, [x19, #457]
  412b40:	cbz	w0, 4124d4 <wcrtomb@plt+0xf794>
  412b44:	ldr	w0, [x19, #72]
  412b48:	add	x1, sp, #0x70
  412b4c:	bl	414640 <wcrtomb@plt+0x11900>
  412b50:	cmp	w0, #0x0
  412b54:	b.le	4124d4 <wcrtomb@plt+0xf794>
  412b58:	sub	w0, w0, #0x1
  412b5c:	stp	x21, x22, [sp, #32]
  412b60:	add	x21, sp, #0x70
  412b64:	add	x20, x21, #0x4
  412b68:	add	x20, x20, w0, uxtw #2
  412b6c:	ldr	w1, [x21], #4
  412b70:	mov	x0, x19
  412b74:	bl	40fc50 <wcrtomb@plt+0xcf10>
  412b78:	mov	x0, x19
  412b7c:	mov	x1, #0x106                 	// #262
  412b80:	bl	40f978 <wcrtomb@plt+0xcc38>
  412b84:	cmp	x20, x21
  412b88:	b.ne	412b6c <wcrtomb@plt+0xfe2c>  // b.any
  412b8c:	ldp	x21, x22, [sp, #32]
  412b90:	b	4124d4 <wcrtomb@plt+0xf794>
  412b94:	bl	411ab0 <wcrtomb@plt+0xed70>
  412b98:	str	x0, [x19, #128]
  412b9c:	mov	x0, x19
  412ba0:	bl	412498 <wcrtomb@plt+0xf758>
  412ba4:	b	412bbc <wcrtomb@plt+0xfe7c>
  412ba8:	mov	x0, x19
  412bac:	bl	412498 <wcrtomb@plt+0xf758>
  412bb0:	mov	x0, x19
  412bb4:	mov	x1, #0x105                 	// #261
  412bb8:	bl	40f978 <wcrtomb@plt+0xcc38>
  412bbc:	ldr	x0, [x19, #128]
  412bc0:	sub	x1, x0, #0x106
  412bc4:	tst	x1, #0xfffffffffffffffd
  412bc8:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412bcc:	b.ge	412ba8 <wcrtomb@plt+0xfe68>  // b.tcont
  412bd0:	cmp	x0, #0x106
  412bd4:	b.ne	412c30 <wcrtomb@plt+0xfef0>  // b.any
  412bd8:	mov	x0, x19
  412bdc:	bl	411ab0 <wcrtomb@plt+0xed70>
  412be0:	str	x0, [x19, #128]
  412be4:	mov	x0, x19
  412be8:	bl	412498 <wcrtomb@plt+0xf758>
  412bec:	b	412c04 <wcrtomb@plt+0xfec4>
  412bf0:	mov	x0, x19
  412bf4:	bl	412498 <wcrtomb@plt+0xf758>
  412bf8:	mov	x0, x19
  412bfc:	mov	x1, #0x105                 	// #261
  412c00:	bl	40f978 <wcrtomb@plt+0xcc38>
  412c04:	ldr	x0, [x19, #128]
  412c08:	sub	x1, x0, #0x106
  412c0c:	tst	x1, #0xfffffffffffffffd
  412c10:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412c14:	b.ge	412bf0 <wcrtomb@plt+0xfeb0>  // b.tcont
  412c18:	mov	x0, x19
  412c1c:	mov	x1, #0x106                 	// #262
  412c20:	bl	40f978 <wcrtomb@plt+0xcc38>
  412c24:	ldr	x0, [x19, #128]
  412c28:	cmp	x0, #0x106
  412c2c:	b.eq	412bd8 <wcrtomb@plt+0xfe98>  // b.none
  412c30:	cmp	x0, #0x108
  412c34:	b.eq	4124d4 <wcrtomb@plt+0xf794>  // b.none
  412c38:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  412c3c:	add	x1, x1, #0xef0
  412c40:	mov	w2, #0x5                   	// #5
  412c44:	mov	x0, #0x0                   	// #0
  412c48:	stp	x21, x22, [sp, #32]
  412c4c:	stp	x23, x24, [sp, #48]
  412c50:	stp	x25, x26, [sp, #64]
  412c54:	stp	x27, x28, [sp, #80]
  412c58:	bl	402c20 <dcgettext@plt>
  412c5c:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412c60:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  412c64:	mov	x1, #0x112                 	// #274
  412c68:	bl	40f978 <wcrtomb@plt+0xcc38>
  412c6c:	b	4124d4 <wcrtomb@plt+0xf794>
  412c70:	mov	x28, #0xfffffffffffffff     	// #1152921504606846975
  412c74:	mov	x1, #0x7ffffffffffffff8    	// #9223372036854775800
  412c78:	b	412844 <wcrtomb@plt+0xfb04>
  412c7c:	nop
  412c80:	stp	x29, x30, [sp, #-32]!
  412c84:	mov	x4, #0xffffffffffffffff    	// #-1
  412c88:	mov	w3, #0x1                   	// #1
  412c8c:	mov	x29, sp
  412c90:	str	x19, [sp, #16]
  412c94:	mov	x19, x2
  412c98:	ldrb	w2, [x2, #456]
  412c9c:	stp	x0, x1, [x19, #32]
  412ca0:	str	x4, [x19, #48]
  412ca4:	strb	w3, [x19, #120]
  412ca8:	cbz	w2, 412dd4 <wcrtomb@plt+0x10094>
  412cac:	ldr	x0, [x19, #184]
  412cb0:	cbz	x0, 412da0 <wcrtomb@plt+0x10060>
  412cb4:	mov	x0, x19
  412cb8:	bl	411ab0 <wcrtomb@plt+0xed70>
  412cbc:	str	x0, [x19, #128]
  412cc0:	ldr	x0, [x19, #168]
  412cc4:	str	x0, [x19, #136]
  412cc8:	mov	x0, x19
  412ccc:	bl	412498 <wcrtomb@plt+0xf758>
  412cd0:	b	412ce8 <wcrtomb@plt+0xffa8>
  412cd4:	mov	x0, x19
  412cd8:	bl	412498 <wcrtomb@plt+0xf758>
  412cdc:	mov	x0, x19
  412ce0:	mov	x1, #0x105                 	// #261
  412ce4:	bl	40f978 <wcrtomb@plt+0xcc38>
  412ce8:	ldr	x0, [x19, #128]
  412cec:	sub	x1, x0, #0x106
  412cf0:	tst	x1, #0xfffffffffffffffd
  412cf4:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412cf8:	b.ge	412cd4 <wcrtomb@plt+0xff94>  // b.tcont
  412cfc:	cmp	x0, #0x106
  412d00:	b.ne	412d60 <wcrtomb@plt+0x10020>  // b.any
  412d04:	nop
  412d08:	mov	x0, x19
  412d0c:	bl	411ab0 <wcrtomb@plt+0xed70>
  412d10:	str	x0, [x19, #128]
  412d14:	mov	x0, x19
  412d18:	bl	412498 <wcrtomb@plt+0xf758>
  412d1c:	b	412d34 <wcrtomb@plt+0xfff4>
  412d20:	mov	x0, x19
  412d24:	bl	412498 <wcrtomb@plt+0xf758>
  412d28:	mov	x0, x19
  412d2c:	mov	x1, #0x105                 	// #261
  412d30:	bl	40f978 <wcrtomb@plt+0xcc38>
  412d34:	ldr	x0, [x19, #128]
  412d38:	sub	x1, x0, #0x106
  412d3c:	tst	x1, #0xfffffffffffffffd
  412d40:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  412d44:	b.ge	412d20 <wcrtomb@plt+0xffe0>  // b.tcont
  412d48:	mov	x0, x19
  412d4c:	mov	x1, #0x106                 	// #262
  412d50:	bl	40f978 <wcrtomb@plt+0xcc38>
  412d54:	ldr	x0, [x19, #128]
  412d58:	cmp	x0, #0x106
  412d5c:	b.eq	412d08 <wcrtomb@plt+0xffc8>  // b.none
  412d60:	cmn	x0, #0x1
  412d64:	b.ne	412dec <wcrtomb@plt+0x100ac>  // b.any
  412d68:	ldr	x1, [x19, #184]
  412d6c:	mov	x0, x19
  412d70:	mvn	x1, x1
  412d74:	bl	40f978 <wcrtomb@plt+0xcc38>
  412d78:	mov	x0, x19
  412d7c:	mov	x1, #0x105                 	// #261
  412d80:	bl	40f978 <wcrtomb@plt+0xcc38>
  412d84:	ldr	x0, [x19, #184]
  412d88:	cbnz	x0, 412db0 <wcrtomb@plt+0x10070>
  412d8c:	add	x0, x0, #0x1
  412d90:	str	x0, [x19, #184]
  412d94:	ldr	x19, [sp, #16]
  412d98:	ldp	x29, x30, [sp], #32
  412d9c:	ret
  412da0:	mov	x0, x19
  412da4:	mov	x1, #0x10b                 	// #267
  412da8:	bl	40f978 <wcrtomb@plt+0xcc38>
  412dac:	b	412cb4 <wcrtomb@plt+0xff74>
  412db0:	mov	x0, x19
  412db4:	mov	x1, #0x106                 	// #262
  412db8:	bl	40f978 <wcrtomb@plt+0xcc38>
  412dbc:	ldr	x0, [x19, #184]
  412dc0:	add	x0, x0, #0x1
  412dc4:	str	x0, [x19, #184]
  412dc8:	ldr	x19, [sp, #16]
  412dcc:	ldp	x29, x30, [sp], #32
  412dd0:	ret
  412dd4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  412dd8:	add	x1, x1, #0xf00
  412ddc:	mov	w2, #0x5                   	// #5
  412de0:	mov	x0, #0x0                   	// #0
  412de4:	bl	402c20 <dcgettext@plt>
  412de8:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412dec:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  412df0:	add	x1, x1, #0xf18
  412df4:	mov	w2, #0x5                   	// #5
  412df8:	mov	x0, #0x0                   	// #0
  412dfc:	bl	402c20 <dcgettext@plt>
  412e00:	bl	40b9a8 <wcrtomb@plt+0x8c68>
  412e04:	nop
  412e08:	ldr	x6, [x0, #1040]
  412e0c:	mov	x16, x6
  412e10:	br	x16
  412e14:	nop
  412e18:	ldr	x0, [x0, #288]
  412e1c:	ret
  412e20:	ldrb	w0, [x0, #192]
  412e24:	ret
  412e28:	stp	x29, x30, [sp, #-48]!
  412e2c:	mov	x29, sp
  412e30:	stp	x19, x20, [sp, #16]
  412e34:	mov	x19, x0
  412e38:	ldr	x0, [x0]
  412e3c:	str	x21, [sp, #32]
  412e40:	bl	402ae0 <free@plt>
  412e44:	ldr	x0, [x19, #144]
  412e48:	bl	402ae0 <free@plt>
  412e4c:	ldrb	w0, [x19, #1048]
  412e50:	cbnz	w0, 412f88 <wcrtomb@plt+0x10248>
  412e54:	ldr	x0, [x19, #336]
  412e58:	mov	x20, #0x0                   	// #0
  412e5c:	mov	x21, #0x0                   	// #0
  412e60:	bl	402ae0 <free@plt>
  412e64:	ldr	x0, [x19, #344]
  412e68:	bl	402ae0 <free@plt>
  412e6c:	ldr	x0, [x19, #304]
  412e70:	cmp	x0, #0x0
  412e74:	b.le	412eac <wcrtomb@plt+0x1016c>
  412e78:	ldr	x0, [x19, #296]
  412e7c:	add	x21, x21, #0x1
  412e80:	add	x0, x0, x20
  412e84:	ldr	x0, [x0, #8]
  412e88:	bl	402ae0 <free@plt>
  412e8c:	ldr	x0, [x19, #296]
  412e90:	add	x0, x0, x20
  412e94:	add	x20, x20, #0x50
  412e98:	ldr	x0, [x0, #48]
  412e9c:	bl	402ae0 <free@plt>
  412ea0:	ldr	x0, [x19, #304]
  412ea4:	cmp	x0, x21
  412ea8:	b.gt	412e78 <wcrtomb@plt+0x10138>
  412eac:	ldr	x0, [x19, #296]
  412eb0:	bl	402ae0 <free@plt>
  412eb4:	ldr	x0, [x19, #320]
  412eb8:	cbz	x0, 412ef4 <wcrtomb@plt+0x101b4>
  412ebc:	ldr	x1, [x19, #152]
  412ec0:	cmp	x1, #0x0
  412ec4:	b.le	412ef0 <wcrtomb@plt+0x101b0>
  412ec8:	mov	x21, #0x0                   	// #0
  412ecc:	mov	x20, #0x0                   	// #0
  412ed0:	ldr	x0, [x0, x21]
  412ed4:	add	x20, x20, #0x1
  412ed8:	add	x21, x21, #0x18
  412edc:	bl	402ae0 <free@plt>
  412ee0:	ldr	x0, [x19, #152]
  412ee4:	cmp	x0, x20
  412ee8:	ldr	x0, [x19, #320]
  412eec:	b.gt	412ed0 <wcrtomb@plt+0x10190>
  412ef0:	bl	402ae0 <free@plt>
  412ef4:	ldr	x0, [x19, #368]
  412ef8:	cbz	x0, 412f58 <wcrtomb@plt+0x10218>
  412efc:	ldr	x1, [x19, #352]
  412f00:	cmp	x1, #0x0
  412f04:	b.le	412f38 <wcrtomb@plt+0x101f8>
  412f08:	mov	x20, #0x0                   	// #0
  412f0c:	nop
  412f10:	ldr	x0, [x0, x20, lsl #3]
  412f14:	bl	402ae0 <free@plt>
  412f18:	ldr	x0, [x19, #376]
  412f1c:	ldr	x0, [x0, x20, lsl #3]
  412f20:	add	x20, x20, #0x1
  412f24:	bl	402ae0 <free@plt>
  412f28:	ldr	x0, [x19, #352]
  412f2c:	cmp	x0, x20
  412f30:	ldr	x0, [x19, #368]
  412f34:	b.gt	412f10 <wcrtomb@plt+0x101d0>
  412f38:	sub	x0, x0, #0x10
  412f3c:	bl	402ae0 <free@plt>
  412f40:	ldr	x0, [x19, #376]
  412f44:	bl	402ae0 <free@plt>
  412f48:	ldr	x0, [x19, #392]
  412f4c:	bl	402ae0 <free@plt>
  412f50:	ldr	x0, [x19, #384]
  412f54:	bl	402ae0 <free@plt>
  412f58:	ldr	x0, [x19, #288]
  412f5c:	cbz	x0, 412f78 <wcrtomb@plt+0x10238>
  412f60:	bl	412e28 <wcrtomb@plt+0x100e8>
  412f64:	ldr	x21, [sp, #32]
  412f68:	ldr	x0, [x19, #288]
  412f6c:	ldp	x19, x20, [sp, #16]
  412f70:	ldp	x29, x30, [sp], #48
  412f74:	b	402ae0 <free@plt>
  412f78:	ldp	x19, x20, [sp, #16]
  412f7c:	ldr	x21, [sp, #32]
  412f80:	ldp	x29, x30, [sp], #48
  412f84:	ret
  412f88:	ldr	x0, [x19, #280]
  412f8c:	bl	402ae0 <free@plt>
  412f90:	ldr	x0, [x19, #96]
  412f94:	bl	402ae0 <free@plt>
  412f98:	ldr	x0, [x19, #408]
  412f9c:	bl	402ae0 <free@plt>
  412fa0:	ldr	x0, [x19, #432]
  412fa4:	cbz	x0, 412e54 <wcrtomb@plt+0x10114>
  412fa8:	ldr	x1, [x19, #352]
  412fac:	tbnz	x1, #63, 412fd4 <wcrtomb@plt+0x10294>
  412fb0:	mov	x20, #0xffffffffffffffff    	// #-1
  412fb4:	nop
  412fb8:	ldr	x0, [x0, x20, lsl #3]
  412fbc:	add	x20, x20, #0x1
  412fc0:	bl	402ae0 <free@plt>
  412fc4:	ldr	x0, [x19, #352]
  412fc8:	cmp	x20, x0
  412fcc:	ldr	x0, [x19, #432]
  412fd0:	b.lt	412fb8 <wcrtomb@plt+0x10278>  // b.tstop
  412fd4:	sub	x0, x0, #0x10
  412fd8:	bl	402ae0 <free@plt>
  412fdc:	b	412e54 <wcrtomb@plt+0x10114>
  412fe0:	stp	x29, x30, [sp, #-112]!
  412fe4:	mov	x29, sp
  412fe8:	stp	x19, x20, [sp, #16]
  412fec:	stp	x21, x22, [sp, #32]
  412ff0:	mov	x22, x2
  412ff4:	stp	x23, x24, [sp, #48]
  412ff8:	stp	x25, x26, [sp, #64]
  412ffc:	and	w26, w3, #0xff
  413000:	cbz	x0, 413008 <wcrtomb@plt+0x102c8>
  413004:	bl	412c80 <wcrtomb@plt+0xff40>
  413008:	mov	x0, #0x920                 	// #2336
  41300c:	bl	418630 <wcrtomb@plt+0x158f0>
  413010:	mov	x1, x22
  413014:	mov	x19, x0
  413018:	mov	x2, #0x920                 	// #2336
  41301c:	bl	402650 <memcpy@plt>
  413020:	movi	v0.4s, #0x0
  413024:	add	x0, x19, #0x200
  413028:	adrp	x25, 40f000 <wcrtomb@plt+0xc2c0>
  41302c:	add	x25, x25, #0x418
  413030:	str	x25, [x19, #1040]
  413034:	strb	wzr, [x19, #1048]
  413038:	stur	q0, [x0, #-232]
  41303c:	ldr	x1, [x19, #16]
  413040:	stp	xzr, xzr, [x19, #296]
  413044:	str	xzr, [x19, #320]
  413048:	cmp	xzr, x1, lsr #59
  41304c:	str	xzr, [x19, #352]
  413050:	str	q0, [x19, #336]
  413054:	cset	x2, ne  // ne = any
  413058:	lsl	x0, x1, #5
  41305c:	stp	q0, q0, [x19, #368]
  413060:	tbnz	x1, #58, 413490 <wcrtomb@plt+0x10750>
  413064:	cbnz	x2, 413490 <wcrtomb@plt+0x10750>
  413068:	bl	418630 <wcrtomb@plt+0x158f0>
  41306c:	str	x0, [x19]
  413070:	ldr	x2, [x22, #8]
  413074:	cbnz	x2, 413478 <wcrtomb@plt+0x10738>
  413078:	ldr	x0, [x22, #152]
  41307c:	cmp	xzr, x0, lsr #60
  413080:	lsl	x0, x0, #4
  413084:	cset	x24, ne  // ne = any
  413088:	cmp	x0, #0x0
  41308c:	csinc	x24, x24, xzr, ge  // ge = tcont
  413090:	cbnz	x24, 413490 <wcrtomb@plt+0x10750>
  413094:	bl	418630 <wcrtomb@plt+0x158f0>
  413098:	str	x0, [x19, #144]
  41309c:	ldr	x0, [x22, #152]
  4130a0:	cmp	x0, #0x0
  4130a4:	lsl	x0, x0, #1
  4130a8:	str	x0, [x19, #160]
  4130ac:	b.le	413488 <wcrtomb@plt+0x10748>
  4130b0:	mov	x4, #0xfffffffffffffeeb    	// #-277
  4130b4:	mov	x20, #0x0                   	// #0
  4130b8:	mvni	v0.4s, #0x0
  4130bc:	mov	x21, #0x0                   	// #0
  4130c0:	mov	w8, #0x0                   	// #0
  4130c4:	mov	x5, #0x102                 	// #258
  4130c8:	movk	x4, #0x7fff, lsl #48
  4130cc:	stp	x27, x28, [sp, #80]
  4130d0:	mov	w28, #0x0                   	// #0
  4130d4:	ldr	x7, [x22, #144]
  4130d8:	b	413114 <wcrtomb@plt+0x103d4>
  4130dc:	cmp	x0, #0xff
  4130e0:	add	x21, x21, #0x1
  4130e4:	cset	w1, ls  // ls = plast
  4130e8:	cmp	x0, #0x113
  4130ec:	ldr	x2, [x19, #144]
  4130f0:	cset	w3, gt
  4130f4:	orr	w1, w1, w3
  4130f8:	cmp	w1, #0x0
  4130fc:	csel	w28, w28, w1, eq  // eq = none
  413100:	str	x0, [x2, x20, lsl #3]
  413104:	add	x20, x20, #0x1
  413108:	ldr	x1, [x22, #152]
  41310c:	cmp	x1, x21
  413110:	b.le	4131c0 <wcrtomb@plt+0x10480>
  413114:	ldr	x0, [x7, x21, lsl #3]
  413118:	lsl	x6, x21, #3
  41311c:	cmp	x0, #0x111
  413120:	b.gt	4132d4 <wcrtomb@plt+0x10594>
  413124:	cmp	x0, #0x10d
  413128:	b.gt	4133c0 <wcrtomb@plt+0x10680>
  41312c:	cmp	x0, #0x10a
  413130:	b.ne	4130dc <wcrtomb@plt+0x1039c>  // b.any
  413134:	ldp	x0, x2, [x19]
  413138:	cmp	x2, #0x0
  41313c:	b.le	4132ec <wcrtomb@plt+0x105ac>
  413140:	mov	x1, x0
  413144:	mov	x23, #0x0                   	// #0
  413148:	b	41315c <wcrtomb@plt+0x1041c>
  41314c:	add	x23, x23, #0x1
  413150:	add	x1, x1, #0x20
  413154:	cmp	x23, x2
  413158:	b.eq	4132f0 <wcrtomb@plt+0x105b0>  // b.none
  41315c:	ldp	x9, x3, [x1]
  413160:	ldr	x8, [x1, #16]
  413164:	and	x3, x3, x9
  413168:	ldr	x9, [x1, #24]
  41316c:	and	x8, x8, x9
  413170:	and	x3, x3, x8
  413174:	cmn	x3, #0x1
  413178:	b.ne	41314c <wcrtomb@plt+0x1040c>  // b.any
  41317c:	ldr	x1, [x19, #144]
  413180:	lsl	x0, x20, #3
  413184:	add	x23, x23, #0x114
  413188:	add	x6, x7, x6
  41318c:	add	x0, x1, x0
  413190:	mov	w8, #0x1                   	// #1
  413194:	str	x23, [x1, x20, lsl #3]
  413198:	add	x20, x20, #0x2
  41319c:	str	x5, [x0, #8]
  4131a0:	ldr	x0, [x6, #8]
  4131a4:	ldr	x1, [x22, #152]
  4131a8:	sub	x0, x0, #0x101
  4131ac:	cmp	x0, #0x3
  4131b0:	cinc	x21, x21, cc  // cc = lo, ul, last
  4131b4:	add	x21, x21, #0x1
  4131b8:	cmp	x1, x21
  4131bc:	b.gt	413114 <wcrtomb@plt+0x103d4>
  4131c0:	str	x20, [x19, #152]
  4131c4:	cbz	w28, 413448 <wcrtomb@plt+0x10708>
  4131c8:	cbz	w8, 413440 <wcrtomb@plt+0x10700>
  4131cc:	ldp	x27, x28, [sp, #80]
  4131d0:	str	x19, [x22, #288]
  4131d4:	cmp	x1, #0x0
  4131d8:	b.le	413498 <wcrtomb@plt+0x10758>
  4131dc:	ldr	x3, [x22, #144]
  4131e0:	mov	x2, #0x0                   	// #0
  4131e4:	ldr	x0, [x3, x2, lsl #3]
  4131e8:	cmp	x0, #0x111
  4131ec:	b.gt	4133f0 <wcrtomb@plt+0x106b0>
  4131f0:	cmp	x0, #0x10d
  4131f4:	b.gt	413434 <wcrtomb@plt+0x106f4>
  4131f8:	add	x2, x2, #0x1
  4131fc:	cmp	x2, x1
  413200:	b.ne	4131e4 <wcrtomb@plt+0x104a4>  // b.any
  413204:	ldrb	w4, [x22, #1050]
  413208:	mov	w2, #0x0                   	// #0
  41320c:	cbz	w4, 4132a8 <wcrtomb@plt+0x10568>
  413210:	ldr	x0, [x3, x24, lsl #3]
  413214:	cmp	x0, #0x113
  413218:	b.eq	4132a8 <wcrtomb@plt+0x10568>  // b.none
  41321c:	b.gt	413230 <wcrtomb@plt+0x104f0>
  413220:	cmp	x0, #0x10a
  413224:	b.eq	4134cc <wcrtomb@plt+0x1078c>  // b.none
  413228:	cmp	x0, #0x112
  41322c:	csel	w2, w2, w4, ne  // ne = any
  413230:	add	x24, x24, #0x1
  413234:	cmp	x24, x1
  413238:	b.ne	413210 <wcrtomb@plt+0x104d0>  // b.any
  41323c:	cbz	w2, 4134a0 <wcrtomb@plt+0x10760>
  413240:	ldr	x0, [x22, #280]
  413244:	bl	402ae0 <free@plt>
  413248:	ldr	x0, [x22, #96]
  41324c:	bl	402ae0 <free@plt>
  413250:	ldr	x0, [x22, #408]
  413254:	bl	402ae0 <free@plt>
  413258:	ldr	x0, [x22, #432]
  41325c:	cbz	x0, 413294 <wcrtomb@plt+0x10554>
  413260:	ldr	x1, [x22, #352]
  413264:	tbnz	x1, #63, 41328c <wcrtomb@plt+0x1054c>
  413268:	mov	x19, #0xffffffffffffffff    	// #-1
  41326c:	nop
  413270:	ldr	x0, [x0, x19, lsl #3]
  413274:	add	x19, x19, #0x1
  413278:	bl	402ae0 <free@plt>
  41327c:	ldr	x0, [x22, #352]
  413280:	cmp	x19, x0
  413284:	ldr	x0, [x22, #432]
  413288:	b.lt	413270 <wcrtomb@plt+0x10530>  // b.tstop
  41328c:	sub	x0, x0, #0x10
  413290:	bl	402ae0 <free@plt>
  413294:	mov	w0, #0x1                   	// #1
  413298:	strb	w0, [x22, #192]
  41329c:	str	x25, [x22, #1040]
  4132a0:	strb	wzr, [x22, #1048]
  4132a4:	nop
  4132a8:	mov	x0, x22
  4132ac:	mov	w1, w26
  4132b0:	bl	40fe58 <wcrtomb@plt+0xd118>
  4132b4:	ldr	x0, [x22, #288]
  4132b8:	cbnz	x0, 413410 <wcrtomb@plt+0x106d0>
  4132bc:	ldp	x19, x20, [sp, #16]
  4132c0:	ldp	x21, x22, [sp, #32]
  4132c4:	ldp	x23, x24, [sp, #48]
  4132c8:	ldp	x25, x26, [sp, #64]
  4132cc:	ldp	x29, x30, [sp], #112
  4132d0:	ret
  4132d4:	sub	x1, x0, #0x112
  4132d8:	cmp	x1, #0x1
  4132dc:	b.hi	4130dc <wcrtomb@plt+0x1039c>  // b.pmore
  4132e0:	ldp	x0, x2, [x19]
  4132e4:	cmp	x2, #0x0
  4132e8:	b.gt	413140 <wcrtomb@plt+0x10400>
  4132ec:	mov	x23, #0x0                   	// #0
  4132f0:	ldr	x3, [x19, #16]
  4132f4:	cmp	x3, x2
  4132f8:	b.gt	4133a4 <wcrtomb@plt+0x10664>
  4132fc:	asr	x27, x3, #1
  413300:	adds	x27, x3, x27
  413304:	b.vs	4134bc <wcrtomb@plt+0x1077c>
  413308:	cmp	x27, x4
  41330c:	csel	x27, x27, x4, le
  413310:	asr	x1, x27, #63
  413314:	sbfx	x7, x27, #58, #1
  413318:	lsl	x2, x27, #5
  41331c:	extr	x1, x1, x27, #59
  413320:	cmp	x7, x1
  413324:	b.ne	4134bc <wcrtomb@plt+0x1077c>  // b.any
  413328:	cmp	x2, #0x7f
  41332c:	mov	x1, #0x80                  	// #128
  413330:	csel	x1, x2, x1, gt
  413334:	mov	x2, #0x4                   	// #4
  413338:	csel	x27, x27, x2, gt
  41333c:	cbz	x0, 413464 <wcrtomb@plt+0x10724>
  413340:	sub	x2, x27, x3
  413344:	cmp	x2, #0x0
  413348:	b.gt	41337c <wcrtomb@plt+0x1063c>
  41334c:	adds	x27, x3, #0x1
  413350:	cset	x2, vs
  413354:	cmp	x27, x4
  413358:	cset	w1, gt
  41335c:	orr	w1, w1, w2
  413360:	cbnz	w1, 413494 <wcrtomb@plt+0x10754>
  413364:	asr	x2, x27, #63
  413368:	sbfx	x3, x27, #58, #1
  41336c:	lsl	x1, x27, #5
  413370:	extr	x2, x2, x27, #59
  413374:	cmp	x3, x2
  413378:	b.ne	413494 <wcrtomb@plt+0x10754>  // b.any
  41337c:	str	x6, [sp, #104]
  413380:	bl	418660 <wcrtomb@plt+0x15920>
  413384:	mvni	v0.4s, #0x0
  413388:	mov	x4, #0xfffffffffffffeeb    	// #-277
  41338c:	ldr	x2, [x19, #8]
  413390:	movk	x4, #0x7fff, lsl #48
  413394:	ldr	x6, [sp, #104]
  413398:	mov	x5, #0x102                 	// #258
  41339c:	ldr	x7, [x22, #144]
  4133a0:	str	x27, [x19, #16]
  4133a4:	lsl	x1, x23, #5
  4133a8:	add	x2, x2, #0x1
  4133ac:	add	x3, x0, x1
  4133b0:	stp	x0, x2, [x19]
  4133b4:	str	q0, [x0, x1]
  4133b8:	str	q0, [x3, #16]
  4133bc:	b	41317c <wcrtomb@plt+0x1043c>
  4133c0:	ldrb	w3, [x22, #1048]
  4133c4:	add	x21, x21, #0x1
  4133c8:	add	x1, x20, #0x1
  4133cc:	ldr	x2, [x19, #144]
  4133d0:	cbz	w3, 4133e4 <wcrtomb@plt+0x106a4>
  4133d4:	mov	x0, #0x100                 	// #256
  4133d8:	str	x0, [x2, x20, lsl #3]
  4133dc:	mov	x20, x1
  4133e0:	b	413108 <wcrtomb@plt+0x103c8>
  4133e4:	str	x0, [x2, x20, lsl #3]
  4133e8:	mov	x20, x1
  4133ec:	b	413108 <wcrtomb@plt+0x103c8>
  4133f0:	sub	x0, x0, #0x112
  4133f4:	cmp	x0, #0x1
  4133f8:	b.hi	4131f8 <wcrtomb@plt+0x104b8>  // b.pmore
  4133fc:	adrp	x0, 40d000 <wcrtomb@plt+0xa2c0>
  413400:	add	x0, x0, #0x370
  413404:	str	x0, [x22, #1040]
  413408:	ldr	x0, [x22, #288]
  41340c:	cbz	x0, 4132bc <wcrtomb@plt+0x1057c>
  413410:	mov	w1, #0x1                   	// #1
  413414:	strb	w1, [x22, #192]
  413418:	mov	w1, w26
  41341c:	ldp	x19, x20, [sp, #16]
  413420:	ldp	x21, x22, [sp, #32]
  413424:	ldp	x23, x24, [sp, #48]
  413428:	ldp	x25, x26, [sp, #64]
  41342c:	ldp	x29, x30, [sp], #112
  413430:	b	40fe58 <wcrtomb@plt+0xd118>
  413434:	ldrb	w0, [x22, #1048]
  413438:	cbnz	w0, 4133fc <wcrtomb@plt+0x106bc>
  41343c:	b	4131f8 <wcrtomb@plt+0x104b8>
  413440:	ldrb	w0, [x22, #1048]
  413444:	cbnz	w0, 4131cc <wcrtomb@plt+0x1048c>
  413448:	ldp	x27, x28, [sp, #80]
  41344c:	mov	x0, x19
  413450:	bl	412e28 <wcrtomb@plt+0x100e8>
  413454:	mov	x0, x19
  413458:	bl	402ae0 <free@plt>
  41345c:	ldr	x1, [x22, #152]
  413460:	b	4131d4 <wcrtomb@plt+0x10494>
  413464:	str	xzr, [x19, #16]
  413468:	sub	x2, x27, x3
  41346c:	cmp	x2, #0x0
  413470:	b.le	41334c <wcrtomb@plt+0x1060c>
  413474:	b	41337c <wcrtomb@plt+0x1063c>
  413478:	ldr	x1, [x22]
  41347c:	lsl	x2, x2, #5
  413480:	bl	402650 <memcpy@plt>
  413484:	b	413078 <wcrtomb@plt+0x10338>
  413488:	str	xzr, [x19, #152]
  41348c:	b	41344c <wcrtomb@plt+0x1070c>
  413490:	stp	x27, x28, [sp, #80]
  413494:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  413498:	ldrb	w0, [x22, #1050]
  41349c:	cbz	w0, 4132a8 <wcrtomb@plt+0x10568>
  4134a0:	ldr	x0, [x22, #288]
  4134a4:	cbz	x0, 413240 <wcrtomb@plt+0x10500>
  4134a8:	bl	412e28 <wcrtomb@plt+0x100e8>
  4134ac:	ldr	x0, [x22, #288]
  4134b0:	bl	402ae0 <free@plt>
  4134b4:	str	xzr, [x22, #288]
  4134b8:	b	413240 <wcrtomb@plt+0x10500>
  4134bc:	mov	x1, #0x7fffffffffffffe0    	// #9223372036854775776
  4134c0:	mov	x27, #0x3ffffffffffffff     	// #288230376151711743
  4134c4:	cbnz	x0, 413340 <wcrtomb@plt+0x10600>
  4134c8:	b	413464 <wcrtomb@plt+0x10724>
  4134cc:	stp	x27, x28, [sp, #80]
  4134d0:	bl	4029e0 <abort@plt>
  4134d4:	nop
  4134d8:	stp	x29, x30, [sp, #-144]!
  4134dc:	mov	x29, sp
  4134e0:	stp	x25, x26, [sp, #64]
  4134e4:	mov	x25, x0
  4134e8:	ldrb	w0, [x0, #1048]
  4134ec:	stp	x21, x22, [sp, #32]
  4134f0:	ldrb	w1, [x25, #457]
  4134f4:	eor	w0, w0, #0x1
  4134f8:	and	w0, w0, w1
  4134fc:	ldr	x26, [x25, #152]
  413500:	and	w0, w0, #0xff
  413504:	str	w0, [sp, #140]
  413508:	cmp	x26, #0x2
  41350c:	b.le	4141b0 <wcrtomb@plt+0x11470>
  413510:	stp	x27, x28, [sp, #80]
  413514:	mov	x22, #0x1                   	// #1
  413518:	ldr	x27, [x25, #144]
  41351c:	stp	x19, x20, [sp, #16]
  413520:	mov	x19, #0x0                   	// #0
  413524:	stp	x23, x24, [sp, #48]
  413528:	lsl	x23, x22, #3
  41352c:	ldr	x20, [x27, x22, lsl #3]
  413530:	stp	wzr, wzr, [sp, #132]
  413534:	cmp	x20, #0x105
  413538:	b.eq	4135bc <wcrtomb@plt+0x1087c>  // b.none
  41353c:	b.gt	4137ac <wcrtomb@plt+0x10a6c>
  413540:	cmp	x20, #0x100
  413544:	b.eq	413ae8 <wcrtomb@plt+0x10da8>  // b.none
  413548:	b.le	413724 <wcrtomb@plt+0x109e4>
  41354c:	cmp	x20, #0x102
  413550:	b.gt	4136fc <wcrtomb@plt+0x109bc>
  413554:	ldr	x20, [x19]
  413558:	ldr	x0, [x20]
  41355c:	cbz	x0, 413570 <wcrtomb@plt+0x10830>
  413560:	bl	402ae0 <free@plt>
  413564:	ldr	x0, [x20, #8]!
  413568:	cbnz	x0, 413560 <wcrtomb@plt+0x10820>
  41356c:	ldr	x20, [x19]
  413570:	str	xzr, [x20]
  413574:	add	x20, x22, #0x2
  413578:	add	x22, x22, #0x1
  41357c:	ldr	x0, [x19, #24]
  413580:	strb	wzr, [x0]
  413584:	ldr	x0, [x19, #16]
  413588:	strb	wzr, [x0]
  41358c:	ldr	x0, [x19, #8]
  413590:	strb	wzr, [x0]
  413594:	strh	wzr, [x19, #32]
  413598:	ldr	x26, [x25, #152]
  41359c:	cmp	x26, x20
  4135a0:	b.le	413730 <wcrtomb@plt+0x109f0>
  4135a4:	nop
  4135a8:	ldr	x27, [x25, #144]
  4135ac:	lsl	x23, x22, #3
  4135b0:	ldr	x20, [x27, x22, lsl #3]
  4135b4:	cmp	x20, #0x105
  4135b8:	b.ne	41353c <wcrtomb@plt+0x107fc>  // b.any
  4135bc:	ldr	x24, [x19]
  4135c0:	ldr	x23, [x19, #40]
  4135c4:	ldr	x21, [x24]
  4135c8:	ldr	x20, [x23]
  4135cc:	cbz	x21, 4135f4 <wcrtomb@plt+0x108b4>
  4135d0:	mov	x0, x21
  4135d4:	bl	402690 <strlen@plt>
  4135d8:	mov	x1, x21
  4135dc:	mov	x2, x0
  4135e0:	mov	x0, x20
  4135e4:	bl	40d3f0 <wcrtomb@plt+0xa6b0>
  4135e8:	ldr	x21, [x24, #8]!
  4135ec:	mov	x20, x0
  4135f0:	cbnz	x21, 4135d0 <wcrtomb@plt+0x10890>
  4135f4:	ldr	x0, [x23, #16]
  4135f8:	str	x20, [x23]
  4135fc:	ldrb	w1, [x0]
  413600:	cbz	w1, 413610 <wcrtomb@plt+0x108d0>
  413604:	ldr	x20, [x19, #8]
  413608:	ldrb	w1, [x20]
  41360c:	cbnz	w1, 41407c <wcrtomb@plt+0x1133c>
  413610:	ldr	x0, [x23, #24]
  413614:	ldrb	w0, [x0]
  413618:	cbnz	w0, 4140fc <wcrtomb@plt+0x113bc>
  41361c:	ldr	x0, [x19, #24]
  413620:	ldr	x20, [x23, #16]
  413624:	ldrb	w0, [x0]
  413628:	cbnz	w0, 413634 <wcrtomb@plt+0x108f4>
  41362c:	strb	wzr, [x20]
  413630:	ldr	x20, [x23, #16]
  413634:	ldr	x24, [x19, #16]
  413638:	mov	x0, x24
  41363c:	bl	402690 <strlen@plt>
  413640:	mov	x21, x0
  413644:	cbz	x0, 413678 <wcrtomb@plt+0x10938>
  413648:	mov	x0, x20
  41364c:	bl	402690 <strlen@plt>
  413650:	mov	x26, x0
  413654:	mov	x0, x20
  413658:	add	x1, x26, x21
  41365c:	add	x1, x1, #0x1
  413660:	bl	418660 <wcrtomb@plt+0x15920>
  413664:	add	x2, x21, #0x1
  413668:	mov	x20, x0
  41366c:	mov	x1, x24
  413670:	add	x0, x0, x26
  413674:	bl	402650 <memcpy@plt>
  413678:	ldr	x21, [x23, #24]
  41367c:	str	x20, [x23, #16]
  413680:	ldrb	w0, [x21]
  413684:	cbnz	w0, 413ddc <wcrtomb@plt+0x1109c>
  413688:	ldrb	w0, [x23, #32]
  41368c:	cbnz	w0, 413ddc <wcrtomb@plt+0x1109c>
  413690:	strb	wzr, [x21]
  413694:	strh	wzr, [x23, #32]
  413698:	ldr	x20, [x19]
  41369c:	ldr	x0, [x20]
  4136a0:	cbz	x0, 4136b8 <wcrtomb@plt+0x10978>
  4136a4:	nop
  4136a8:	bl	402ae0 <free@plt>
  4136ac:	ldr	x0, [x20, #8]!
  4136b0:	cbnz	x0, 4136a8 <wcrtomb@plt+0x10968>
  4136b4:	ldr	x20, [x19]
  4136b8:	mov	x0, x20
  4136bc:	bl	402ae0 <free@plt>
  4136c0:	add	x20, x22, #0x2
  4136c4:	ldr	x0, [x19, #8]
  4136c8:	add	x22, x22, #0x1
  4136cc:	bl	402ae0 <free@plt>
  4136d0:	ldr	x0, [x19, #16]
  4136d4:	bl	402ae0 <free@plt>
  4136d8:	ldr	x0, [x19, #24]
  4136dc:	bl	402ae0 <free@plt>
  4136e0:	mov	x0, x19
  4136e4:	bl	402ae0 <free@plt>
  4136e8:	ldr	x26, [x25, #152]
  4136ec:	mov	x19, x23
  4136f0:	cmp	x26, x20
  4136f4:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  4136f8:	b	413730 <wcrtomb@plt+0x109f0>
  4136fc:	cmp	x20, #0x103
  413700:	b.ne	413c9c <wcrtomb@plt+0x10f5c>  // b.any
  413704:	ldr	x0, [x19, #24]
  413708:	add	x20, x22, #0x2
  41370c:	add	x22, x22, #0x1
  413710:	strb	wzr, [x0]
  413714:	ldr	x26, [x25, #152]
  413718:	cmp	x26, x20
  41371c:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413720:	b	413730 <wcrtomb@plt+0x109f0>
  413724:	cmn	x20, #0x1
  413728:	b.eq	413e10 <wcrtomb@plt+0x110d0>  // b.none
  41372c:	cbnz	x20, 413ca0 <wcrtomb@plt+0x10f60>
  413730:	mov	x22, #0x0                   	// #0
  413734:	cbz	x19, 41378c <wcrtomb@plt+0x10a4c>
  413738:	mov	x20, x19
  41373c:	ldr	x19, [x19, #40]
  413740:	ldr	x21, [x20]
  413744:	ldr	x0, [x21]
  413748:	cbz	x0, 413760 <wcrtomb@plt+0x10a20>
  41374c:	nop
  413750:	bl	402ae0 <free@plt>
  413754:	ldr	x0, [x21, #8]!
  413758:	cbnz	x0, 413750 <wcrtomb@plt+0x10a10>
  41375c:	ldr	x21, [x20]
  413760:	mov	x0, x21
  413764:	bl	402ae0 <free@plt>
  413768:	ldr	x0, [x20, #8]
  41376c:	bl	402ae0 <free@plt>
  413770:	ldr	x0, [x20, #16]
  413774:	bl	402ae0 <free@plt>
  413778:	ldr	x0, [x20, #24]
  41377c:	bl	402ae0 <free@plt>
  413780:	mov	x0, x20
  413784:	bl	402ae0 <free@plt>
  413788:	cbnz	x19, 413738 <wcrtomb@plt+0x109f8>
  41378c:	ldp	x19, x20, [sp, #16]
  413790:	ldp	x23, x24, [sp, #48]
  413794:	ldp	x27, x28, [sp, #80]
  413798:	mov	x0, x22
  41379c:	ldp	x21, x22, [sp, #32]
  4137a0:	ldp	x25, x26, [sp, #64]
  4137a4:	ldp	x29, x30, [sp], #144
  4137a8:	ret
  4137ac:	cmp	x20, #0x10c
  4137b0:	b.eq	413ee0 <wcrtomb@plt+0x111a0>  // b.none
  4137b4:	b.le	413838 <wcrtomb@plt+0x10af8>
  4137b8:	cmp	x20, #0x10d
  4137bc:	b.ne	413a08 <wcrtomb@plt+0x10cc8>  // b.any
  4137c0:	mov	x0, #0x30                  	// #48
  4137c4:	bl	418630 <wcrtomb@plt+0x158f0>
  4137c8:	mov	x21, x0
  4137cc:	mov	x0, #0x8                   	// #8
  4137d0:	bl	418708 <wcrtomb@plt+0x159c8>
  4137d4:	mov	x1, x0
  4137d8:	mov	w2, #0x1                   	// #1
  4137dc:	mov	x0, #0x2                   	// #2
  4137e0:	str	x1, [x21]
  4137e4:	add	x20, x22, x0
  4137e8:	str	w2, [sp, #136]
  4137ec:	add	x22, x22, #0x1
  4137f0:	bl	418708 <wcrtomb@plt+0x159c8>
  4137f4:	mov	x1, x0
  4137f8:	str	x1, [x21, #8]
  4137fc:	mov	x0, #0x2                   	// #2
  413800:	bl	418708 <wcrtomb@plt+0x159c8>
  413804:	mov	x1, x0
  413808:	str	x1, [x21, #16]
  41380c:	mov	x0, #0x2                   	// #2
  413810:	bl	418708 <wcrtomb@plt+0x159c8>
  413814:	str	x0, [x21, #24]
  413818:	ldr	x26, [x25, #152]
  41381c:	mov	w1, #0x100                 	// #256
  413820:	strh	w1, [x21, #32]
  413824:	str	x19, [x21, #40]
  413828:	cmp	x26, x20
  41382c:	mov	x19, x21
  413830:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413834:	b	413730 <wcrtomb@plt+0x109f0>
  413838:	cmp	x20, #0x106
  41383c:	b.ne	413ad8 <wcrtomb@plt+0x10d98>  // b.any
  413840:	ldr	x21, [x19, #40]
  413844:	str	x21, [sp, #112]
  413848:	ldr	x1, [x19, #24]
  41384c:	ldr	x20, [x21, #24]
  413850:	mov	x0, x20
  413854:	bl	402aa0 <strcmp@plt>
  413858:	cbz	w0, 413b54 <wcrtomb@plt+0x10e14>
  41385c:	mov	x0, x21
  413860:	strb	wzr, [x20]
  413864:	strh	wzr, [x21, #32]
  413868:	ldr	x2, [x0, #8]
  41386c:	ldrb	w0, [x2]
  413870:	cbz	w0, 413894 <wcrtomb@plt+0x10b54>
  413874:	ldr	x1, [x19, #8]
  413878:	b	413888 <wcrtomb@plt+0x10b48>
  41387c:	ldrb	w0, [x2, #1]!
  413880:	add	x1, x1, #0x1
  413884:	cbz	w0, 413894 <wcrtomb@plt+0x10b54>
  413888:	ldrb	w3, [x1]
  41388c:	cmp	w3, w0
  413890:	b.eq	41387c <wcrtomb@plt+0x10b3c>  // b.none
  413894:	ldr	x0, [sp, #112]
  413898:	strb	wzr, [x2]
  41389c:	ldr	x21, [x0, #16]
  4138a0:	mov	x0, x21
  4138a4:	bl	402690 <strlen@plt>
  4138a8:	ldr	x20, [x19, #16]
  4138ac:	mov	x23, x0
  4138b0:	mov	x0, x20
  4138b4:	bl	402690 <strlen@plt>
  4138b8:	cmp	x0, x23
  4138bc:	csel	x6, x0, x23, le
  4138c0:	cbz	x6, 413944 <wcrtomb@plt+0x10c04>
  4138c4:	sub	x5, x0, x23
  4138c8:	mov	x1, x23
  4138cc:	sub	x5, x5, #0x1
  4138d0:	sub	x7, x21, #0x1
  4138d4:	add	x5, x20, x5
  4138d8:	mov	x2, #0x0                   	// #0
  4138dc:	b	4138f0 <wcrtomb@plt+0x10bb0>
  4138e0:	add	x2, x2, #0x1
  4138e4:	sub	x1, x1, #0x1
  4138e8:	cmp	x6, x2
  4138ec:	b.eq	413f58 <wcrtomb@plt+0x11218>  // b.none
  4138f0:	ldrb	w4, [x7, x1]
  4138f4:	ldrb	w3, [x5, x1]
  4138f8:	cmp	w4, w3
  4138fc:	b.eq	4138e0 <wcrtomb@plt+0x10ba0>  // b.none
  413900:	cbz	x2, 413944 <wcrtomb@plt+0x10c04>
  413904:	ldrb	w0, [x21, x1]
  413908:	cmp	x2, #0x1
  41390c:	strb	w0, [x21]
  413910:	mov	x0, #0x1                   	// #1
  413914:	b.eq	413938 <wcrtomb@plt+0x10bf8>  // b.none
  413918:	ldr	x3, [sp, #112]
  41391c:	ldr	x3, [x3, #16]
  413920:	add	x4, x3, x0
  413924:	ldrb	w4, [x4, x1]
  413928:	strb	w4, [x3, x0]
  41392c:	add	x0, x0, #0x1
  413930:	cmp	x2, x0
  413934:	b.ne	413918 <wcrtomb@plt+0x10bd8>  // b.any
  413938:	ldr	x0, [sp, #112]
  41393c:	ldr	x21, [x0, #16]
  413940:	add	x21, x21, x2
  413944:	ldr	x1, [sp, #112]
  413948:	strb	wzr, [x21]
  41394c:	mov	x0, #0x8                   	// #8
  413950:	ldr	x24, [x1]
  413954:	ldr	x1, [x19]
  413958:	str	x1, [sp, #120]
  41395c:	bl	418708 <wcrtomb@plt+0x159c8>
  413960:	mov	x20, x0
  413964:	ldr	x28, [x24]
  413968:	cbz	x28, 413c04 <wcrtomb@plt+0x10ec4>
  41396c:	nop
  413970:	ldr	x0, [sp, #120]
  413974:	ldr	x21, [x0]
  413978:	cbz	x21, 413bfc <wcrtomb@plt+0x10ebc>
  41397c:	add	x23, x0, #0x8
  413980:	mov	x0, #0x8                   	// #8
  413984:	bl	418708 <wcrtomb@plt+0x159c8>
  413988:	ldrb	w26, [x28]
  41398c:	mov	x27, x0
  413990:	cbz	w26, 413b98 <wcrtomb@plt+0x10e58>
  413994:	nop
  413998:	mov	w1, w26
  41399c:	mov	x0, x21
  4139a0:	bl	402b20 <strchr@plt>
  4139a4:	mov	w1, w26
  4139a8:	mov	x2, #0x0                   	// #0
  4139ac:	ldrb	w26, [x28, #1]
  4139b0:	cbnz	x0, 4139e0 <wcrtomb@plt+0x10ca0>
  4139b4:	b	413b90 <wcrtomb@plt+0x10e50>
  4139b8:	cmp	x2, x6
  4139bc:	add	x0, x0, #0x1
  4139c0:	csel	x2, x2, x6, ge  // ge = tcont
  4139c4:	str	x2, [sp, #96]
  4139c8:	str	w1, [sp, #96]
  4139cc:	str	x2, [sp, #104]
  4139d0:	bl	402b20 <strchr@plt>
  4139d4:	ldr	w1, [sp, #96]
  4139d8:	ldr	x2, [sp, #104]
  4139dc:	cbz	x0, 413b7c <wcrtomb@plt+0x10e3c>
  4139e0:	mov	w7, w26
  4139e4:	mov	x6, #0x1                   	// #1
  4139e8:	cbz	w26, 4139b8 <wcrtomb@plt+0x10c78>
  4139ec:	ldrb	w8, [x0, x6]
  4139f0:	cmp	w8, w7
  4139f4:	b.ne	4139b8 <wcrtomb@plt+0x10c78>  // b.any
  4139f8:	add	x6, x6, #0x1
  4139fc:	ldrb	w7, [x28, x6]
  413a00:	cbnz	w7, 4139ec <wcrtomb@plt+0x10cac>
  413a04:	b	4139b8 <wcrtomb@plt+0x10c78>
  413a08:	sub	x0, x20, #0x10e
  413a0c:	cmp	x0, #0x5
  413a10:	b.ls	413ae8 <wcrtomb@plt+0x10da8>  // b.plast
  413a14:	cmp	x20, #0x113
  413a18:	b.le	413ca0 <wcrtomb@plt+0x10f60>
  413a1c:	ldr	x2, [x25]
  413a20:	mov	x0, #0xffffffffffffdd80    	// #-8832
  413a24:	add	x20, x0, x20, lsl #5
  413a28:	mov	w21, #0x0                   	// #0
  413a2c:	add	x2, x2, x20
  413a30:	b	413a3c <wcrtomb@plt+0x10cfc>
  413a34:	cmp	w21, #0x100
  413a38:	b.eq	413ae8 <wcrtomb@plt+0x10da8>  // b.none
  413a3c:	sxtw	x20, w21
  413a40:	mov	w24, w21
  413a44:	add	w21, w21, #0x1
  413a48:	lsr	w0, w20, #6
  413a4c:	ldr	x0, [x2, x0, lsl #3]
  413a50:	lsr	x0, x0, x20
  413a54:	tbz	w0, #0, 413a34 <wcrtomb@plt+0x10cf4>
  413a58:	cmp	w21, #0x100
  413a5c:	b.eq	413ca0 <wcrtomb@plt+0x10f60>  // b.none
  413a60:	lsl	x0, x20, #2
  413a64:	str	x0, [sp, #104]
  413a68:	ldr	w0, [sp, #140]
  413a6c:	sbfiz	x28, x21, #2, #32
  413a70:	cbnz	w0, 413a7c <wcrtomb@plt+0x10d3c>
  413a74:	b	4140e8 <wcrtomb@plt+0x113a8>
  413a78:	mov	w21, w0
  413a7c:	lsr	w0, w21, #6
  413a80:	ldr	x0, [x2, x0, lsl #3]
  413a84:	lsr	x0, x0, x21
  413a88:	tbz	w0, #0, 413ac0 <wcrtomb@plt+0x10d80>
  413a8c:	str	x2, [sp, #96]
  413a90:	bl	402940 <__ctype_toupper_loc@plt>
  413a94:	add	w1, w24, #0x81
  413a98:	mov	w4, w21
  413a9c:	cmp	w1, #0x17f
  413aa0:	ldr	x0, [x0]
  413aa4:	ldr	x2, [sp, #96]
  413aa8:	b.hi	413ab0 <wcrtomb@plt+0x10d70>  // b.pmore
  413aac:	ldr	w4, [x0, x28]
  413ab0:	ldr	x1, [sp, #104]
  413ab4:	ldr	w0, [x0, x1]
  413ab8:	cmp	w4, w0
  413abc:	b.ne	413ae8 <wcrtomb@plt+0x10da8>  // b.any
  413ac0:	add	x28, x28, #0x4
  413ac4:	cmp	w21, #0xff
  413ac8:	add	w0, w21, #0x1
  413acc:	mov	w24, w21
  413ad0:	b.ne	413a78 <wcrtomb@plt+0x10d38>  // b.any
  413ad4:	b	413ca0 <wcrtomb@plt+0x10f60>
  413ad8:	cmp	x20, #0x108
  413adc:	b.le	4141b8 <wcrtomb@plt+0x11478>
  413ae0:	cmp	x20, #0x10a
  413ae4:	b.ne	413ca0 <wcrtomb@plt+0x10f60>  // b.any
  413ae8:	mov	x0, #0x30                  	// #48
  413aec:	bl	418630 <wcrtomb@plt+0x158f0>
  413af0:	mov	x21, x0
  413af4:	mov	x0, #0x8                   	// #8
  413af8:	bl	418708 <wcrtomb@plt+0x159c8>
  413afc:	mov	x1, x0
  413b00:	mov	x0, #0x2                   	// #2
  413b04:	add	x20, x22, x0
  413b08:	str	x1, [x21]
  413b0c:	add	x22, x22, #0x1
  413b10:	bl	418708 <wcrtomb@plt+0x159c8>
  413b14:	mov	x1, x0
  413b18:	str	x1, [x21, #8]
  413b1c:	mov	x0, #0x2                   	// #2
  413b20:	bl	418708 <wcrtomb@plt+0x159c8>
  413b24:	mov	x1, x0
  413b28:	str	x1, [x21, #16]
  413b2c:	mov	x0, #0x2                   	// #2
  413b30:	bl	418708 <wcrtomb@plt+0x159c8>
  413b34:	str	x0, [x21, #24]
  413b38:	ldr	x26, [x25, #152]
  413b3c:	strh	wzr, [x21, #32]
  413b40:	str	x19, [x21, #40]
  413b44:	mov	x19, x21
  413b48:	cmp	x26, x20
  413b4c:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413b50:	b	413730 <wcrtomb@plt+0x109f0>
  413b54:	ldrb	w2, [x19, #33]
  413b58:	ldrb	w0, [x21, #33]
  413b5c:	ldrb	w3, [x19, #32]
  413b60:	ldrb	w1, [x21, #32]
  413b64:	and	w0, w0, w2
  413b68:	strb	w0, [x21, #33]
  413b6c:	mov	x0, x21
  413b70:	and	w1, w1, w3
  413b74:	strb	w1, [x21, #32]
  413b78:	b	413868 <wcrtomb@plt+0x10b28>
  413b7c:	mov	x0, x27
  413b80:	mov	x1, x28
  413b84:	bl	40d3f0 <wcrtomb@plt+0xa6b0>
  413b88:	ldrb	w26, [x28, #1]
  413b8c:	mov	x27, x0
  413b90:	add	x28, x28, #0x1
  413b94:	cbnz	w26, 413998 <wcrtomb@plt+0x10c58>
  413b98:	ldr	x21, [x27]
  413b9c:	cbz	x21, 413be4 <wcrtomb@plt+0x10ea4>
  413ba0:	mov	x28, x27
  413ba4:	nop
  413ba8:	mov	x0, x21
  413bac:	bl	402690 <strlen@plt>
  413bb0:	mov	x1, x21
  413bb4:	mov	x2, x0
  413bb8:	mov	x0, x20
  413bbc:	bl	40d3f0 <wcrtomb@plt+0xa6b0>
  413bc0:	ldr	x21, [x28, #8]!
  413bc4:	mov	x20, x0
  413bc8:	cbnz	x21, 413ba8 <wcrtomb@plt+0x10e68>
  413bcc:	ldr	x0, [x27]
  413bd0:	cbz	x0, 413be4 <wcrtomb@plt+0x10ea4>
  413bd4:	mov	x21, x27
  413bd8:	bl	402ae0 <free@plt>
  413bdc:	ldr	x0, [x21, #8]!
  413be0:	cbnz	x0, 413bd8 <wcrtomb@plt+0x10e98>
  413be4:	mov	x0, x27
  413be8:	bl	402ae0 <free@plt>
  413bec:	ldr	x21, [x23], #8
  413bf0:	cbz	x21, 413bfc <wcrtomb@plt+0x10ebc>
  413bf4:	ldr	x28, [x24]
  413bf8:	b	413980 <wcrtomb@plt+0x10c40>
  413bfc:	ldr	x28, [x24, #8]!
  413c00:	cbnz	x28, 413970 <wcrtomb@plt+0x10c30>
  413c04:	ldr	x0, [sp, #112]
  413c08:	ldr	x21, [x0]
  413c0c:	ldr	x0, [x21]
  413c10:	cbz	x0, 413c2c <wcrtomb@plt+0x10eec>
  413c14:	nop
  413c18:	bl	402ae0 <free@plt>
  413c1c:	ldr	x0, [x21, #8]!
  413c20:	cbnz	x0, 413c18 <wcrtomb@plt+0x10ed8>
  413c24:	ldr	x0, [sp, #112]
  413c28:	ldr	x21, [x0]
  413c2c:	mov	x0, x21
  413c30:	bl	402ae0 <free@plt>
  413c34:	ldr	x0, [sp, #112]
  413c38:	str	x20, [x0]
  413c3c:	ldr	x20, [x19]
  413c40:	ldr	x0, [x20]
  413c44:	cbz	x0, 413c58 <wcrtomb@plt+0x10f18>
  413c48:	bl	402ae0 <free@plt>
  413c4c:	ldr	x0, [x20, #8]!
  413c50:	cbnz	x0, 413c48 <wcrtomb@plt+0x10f08>
  413c54:	ldr	x20, [x19]
  413c58:	mov	x0, x20
  413c5c:	bl	402ae0 <free@plt>
  413c60:	add	x20, x22, #0x2
  413c64:	ldr	x0, [x19, #8]
  413c68:	add	x22, x22, #0x1
  413c6c:	bl	402ae0 <free@plt>
  413c70:	ldr	x0, [x19, #16]
  413c74:	bl	402ae0 <free@plt>
  413c78:	ldr	x0, [x19, #24]
  413c7c:	bl	402ae0 <free@plt>
  413c80:	mov	x0, x19
  413c84:	ldr	x19, [sp, #112]
  413c88:	bl	402ae0 <free@plt>
  413c8c:	ldr	x26, [x25, #152]
  413c90:	cmp	x26, x20
  413c94:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413c98:	b	413730 <wcrtomb@plt+0x109f0>
  413c9c:	mov	x20, #0x104                 	// #260
  413ca0:	add	x0, x27, x23
  413ca4:	add	x3, x22, #0x2
  413ca8:	mov	x24, x3
  413cac:	mov	x28, #0x2                   	// #2
  413cb0:	ldr	x0, [x0, #8]
  413cb4:	cmp	x0, #0x105
  413cb8:	b.eq	41414c <wcrtomb@plt+0x1140c>  // b.none
  413cbc:	mov	x0, #0x30                  	// #48
  413cc0:	str	x3, [sp, #96]
  413cc4:	bl	418630 <wcrtomb@plt+0x158f0>
  413cc8:	mov	x21, x0
  413ccc:	mov	x0, #0x8                   	// #8
  413cd0:	bl	418708 <wcrtomb@plt+0x159c8>
  413cd4:	mov	x2, x0
  413cd8:	mov	x0, x28
  413cdc:	str	x2, [x21]
  413ce0:	bl	418708 <wcrtomb@plt+0x159c8>
  413ce4:	mov	x2, x0
  413ce8:	str	x2, [x21, #8]
  413cec:	mov	x0, x28
  413cf0:	bl	418708 <wcrtomb@plt+0x159c8>
  413cf4:	mov	x2, x0
  413cf8:	str	x2, [x21, #16]
  413cfc:	mov	x0, x28
  413d00:	bl	418708 <wcrtomb@plt+0x159c8>
  413d04:	str	x0, [x21, #24]
  413d08:	ldr	w0, [sp, #140]
  413d0c:	strh	wzr, [x21, #32]
  413d10:	str	x19, [x21, #40]
  413d14:	ldr	x3, [sp, #96]
  413d18:	cbnz	w0, 413f60 <wcrtomb@plt+0x11220>
  413d1c:	ldr	x0, [x21, #16]
  413d20:	and	w20, w20, #0xff
  413d24:	cmp	x24, x3
  413d28:	strb	w20, [x0]
  413d2c:	ldr	x0, [x21, #8]
  413d30:	strb	w20, [x0]
  413d34:	ldr	x0, [x21, #24]
  413d38:	strb	w20, [x0]
  413d3c:	b.le	4141a0 <wcrtomb@plt+0x11460>
  413d40:	sub	x5, x24, x22
  413d44:	add	x23, x23, #0x10
  413d48:	sub	x5, x5, #0x3
  413d4c:	mov	x0, #0x1                   	// #1
  413d50:	lsr	x5, x5, #1
  413d54:	add	x2, x5, #0x2
  413d58:	ldr	x1, [x25, #144]
  413d5c:	ldr	x4, [x21, #16]
  413d60:	ldrb	w1, [x1, x23]
  413d64:	add	x23, x23, #0x10
  413d68:	strb	w1, [x4, x0]
  413d6c:	ldr	x4, [x21, #8]
  413d70:	strb	w1, [x4, x0]
  413d74:	ldr	x4, [x21, #24]
  413d78:	strb	w1, [x4, x0]
  413d7c:	add	x0, x0, #0x1
  413d80:	cmp	x2, x0
  413d84:	b.ne	413d58 <wcrtomb@plt+0x11018>  // b.any
  413d88:	lsl	x0, x5, #1
  413d8c:	add	x20, x22, #0x4
  413d90:	add	x20, x20, x0
  413d94:	add	x22, x3, x0
  413d98:	mov	x0, x2
  413d9c:	ldr	x1, [x21, #16]
  413da0:	mov	x19, x21
  413da4:	add	x22, x22, #0x1
  413da8:	strb	wzr, [x1, x0]
  413dac:	ldr	x1, [x21, #8]
  413db0:	strb	wzr, [x1, x0]
  413db4:	ldr	x1, [x21, #24]
  413db8:	strb	wzr, [x1, x0]
  413dbc:	ldr	x0, [x21]
  413dc0:	ldr	x1, [x21, #24]
  413dc4:	bl	40d3f0 <wcrtomb@plt+0xa6b0>
  413dc8:	str	x0, [x21]
  413dcc:	ldr	x26, [x25, #152]
  413dd0:	cmp	x26, x20
  413dd4:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413dd8:	b	413730 <wcrtomb@plt+0x109f0>
  413ddc:	ldr	x24, [x19, #24]
  413de0:	ldrb	w0, [x24]
  413de4:	cbnz	w0, 413df0 <wcrtomb@plt+0x110b0>
  413de8:	ldrb	w0, [x19, #33]
  413dec:	cbz	w0, 413690 <wcrtomb@plt+0x10950>
  413df0:	mov	x0, x24
  413df4:	bl	402690 <strlen@plt>
  413df8:	mov	x20, x0
  413dfc:	cbnz	x0, 41403c <wcrtomb@plt+0x112fc>
  413e00:	ldrb	w0, [x19, #33]
  413e04:	str	x21, [x23, #24]
  413e08:	strb	w0, [x23, #33]
  413e0c:	b	413698 <wcrtomb@plt+0x10958>
  413e10:	ldr	x0, [x19, #40]
  413e14:	cbnz	x0, 4141e4 <wcrtomb@plt+0x114a4>
  413e18:	ldr	x24, [x19]
  413e1c:	ldr	x23, [x19, #24]
  413e20:	ldr	x22, [x24]
  413e24:	cbz	x22, 413eac <wcrtomb@plt+0x1116c>
  413e28:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x112f0>
  413e2c:	add	x24, x24, #0x8
  413e30:	add	x21, x21, #0x190
  413e34:	mov	x20, #0x0                   	// #0
  413e38:	mov	x0, x22
  413e3c:	bl	402690 <strlen@plt>
  413e40:	cmp	x0, x20
  413e44:	csel	x21, x22, x21, hi  // hi = pmore
  413e48:	csel	x1, x0, x20, hi  // hi = pmore
  413e4c:	ldr	x22, [x24], #8
  413e50:	mov	x20, x1
  413e54:	cbnz	x22, 413e38 <wcrtomb@plt+0x110f8>
  413e58:	mov	x1, x23
  413e5c:	mov	x0, x21
  413e60:	bl	402aa0 <strcmp@plt>
  413e64:	ldrb	w1, [x21]
  413e68:	cbz	w0, 413ec0 <wcrtomb@plt+0x11180>
  413e6c:	mov	w20, #0x0                   	// #0
  413e70:	mov	w23, #0x0                   	// #0
  413e74:	mov	w24, #0x0                   	// #0
  413e78:	cbz	w1, 4141dc <wcrtomb@plt+0x1149c>
  413e7c:	mov	x0, x21
  413e80:	bl	402690 <strlen@plt>
  413e84:	add	x0, x0, #0x4
  413e88:	bl	418630 <wcrtomb@plt+0x158f0>
  413e8c:	mov	x22, x0
  413e90:	mov	x1, x21
  413e94:	add	x0, x0, #0x3
  413e98:	strb	w24, [x22]
  413e9c:	strb	w23, [x22, #1]
  413ea0:	strb	w20, [x22, #2]
  413ea4:	bl	402b80 <strcpy@plt>
  413ea8:	b	413738 <wcrtomb@plt+0x109f8>
  413eac:	ldrb	w1, [x23]
  413eb0:	cbnz	w1, 413738 <wcrtomb@plt+0x109f8>
  413eb4:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x112f0>
  413eb8:	add	x21, x21, #0x190
  413ebc:	nop
  413ec0:	ldr	w0, [sp, #132]
  413ec4:	ldrb	w23, [x19, #32]
  413ec8:	ldrb	w20, [x19, #33]
  413ecc:	cbnz	w0, 414030 <wcrtomb@plt+0x112f0>
  413ed0:	ldr	w0, [sp, #136]
  413ed4:	cmp	w0, #0x0
  413ed8:	csinc	w24, w20, wzr, ne  // ne = any
  413edc:	b	413e78 <wcrtomb@plt+0x11138>
  413ee0:	mov	x0, #0x30                  	// #48
  413ee4:	bl	418630 <wcrtomb@plt+0x158f0>
  413ee8:	mov	x21, x0
  413eec:	mov	x0, #0x8                   	// #8
  413ef0:	bl	418708 <wcrtomb@plt+0x159c8>
  413ef4:	mov	x1, x0
  413ef8:	mov	w2, #0x1                   	// #1
  413efc:	mov	x0, #0x2                   	// #2
  413f00:	str	x1, [x21]
  413f04:	add	x20, x22, x0
  413f08:	str	w2, [sp, #132]
  413f0c:	add	x22, x22, #0x1
  413f10:	bl	418708 <wcrtomb@plt+0x159c8>
  413f14:	mov	x1, x0
  413f18:	str	x1, [x21, #8]
  413f1c:	mov	x0, #0x2                   	// #2
  413f20:	bl	418708 <wcrtomb@plt+0x159c8>
  413f24:	mov	x1, x0
  413f28:	str	x1, [x21, #16]
  413f2c:	mov	x0, #0x2                   	// #2
  413f30:	bl	418708 <wcrtomb@plt+0x159c8>
  413f34:	str	x0, [x21, #24]
  413f38:	ldr	x26, [x25, #152]
  413f3c:	mov	w1, #0x1                   	// #1
  413f40:	strh	w1, [x21, #32]
  413f44:	str	x19, [x21, #40]
  413f48:	cmp	x26, x20
  413f4c:	mov	x19, x21
  413f50:	b.gt	4135a8 <wcrtomb@plt+0x10868>
  413f54:	b	413730 <wcrtomb@plt+0x109f0>
  413f58:	sub	x1, x23, x2
  413f5c:	b	413904 <wcrtomb@plt+0x10bc4>
  413f60:	add	w1, w20, #0x80
  413f64:	mov	w0, w20
  413f68:	cmp	w1, #0x17f
  413f6c:	b.hi	413f80 <wcrtomb@plt+0x11240>  // b.pmore
  413f70:	bl	402940 <__ctype_toupper_loc@plt>
  413f74:	ldr	x0, [x0]
  413f78:	ldr	x3, [sp, #96]
  413f7c:	ldr	w0, [x0, w20, sxtw #2]
  413f80:	ldr	x1, [x21, #16]
  413f84:	and	w0, w0, #0xff
  413f88:	cmp	x24, x3
  413f8c:	strb	w0, [x1]
  413f90:	ldr	x1, [x21, #8]
  413f94:	strb	w0, [x1]
  413f98:	ldr	x1, [x21, #24]
  413f9c:	strb	w0, [x1]
  413fa0:	b.le	4141a0 <wcrtomb@plt+0x11460>
  413fa4:	sub	x20, x24, x22
  413fa8:	add	x23, x23, #0x10
  413fac:	sub	x20, x20, #0x3
  413fb0:	mov	x19, #0x1                   	// #1
  413fb4:	lsr	x20, x20, #1
  413fb8:	add	x26, x20, #0x2
  413fbc:	nop
  413fc0:	ldr	x0, [x25, #144]
  413fc4:	ldr	x24, [x0, x23]
  413fc8:	add	w1, w24, #0x80
  413fcc:	mov	w0, w24
  413fd0:	cmp	w1, #0x17f
  413fd4:	b.hi	413fec <wcrtomb@plt+0x112ac>  // b.pmore
  413fd8:	str	x3, [sp, #96]
  413fdc:	bl	402940 <__ctype_toupper_loc@plt>
  413fe0:	ldr	x0, [x0]
  413fe4:	ldr	x3, [sp, #96]
  413fe8:	ldr	w0, [x0, w24, sxtw #2]
  413fec:	ldr	x1, [x21, #16]
  413ff0:	and	w0, w0, #0xff
  413ff4:	add	x23, x23, #0x10
  413ff8:	strb	w0, [x1, x19]
  413ffc:	ldr	x1, [x21, #8]
  414000:	strb	w0, [x1, x19]
  414004:	ldr	x1, [x21, #24]
  414008:	strb	w0, [x1, x19]
  41400c:	add	x19, x19, #0x1
  414010:	cmp	x26, x19
  414014:	b.ne	413fc0 <wcrtomb@plt+0x11280>  // b.any
  414018:	lsl	x0, x20, #1
  41401c:	add	x20, x22, #0x4
  414020:	add	x20, x20, x0
  414024:	add	x22, x3, x0
  414028:	mov	x2, x26
  41402c:	b	413d98 <wcrtomb@plt+0x11058>
  414030:	mov	w24, #0x0                   	// #0
  414034:	cbz	w23, 413e78 <wcrtomb@plt+0x11138>
  414038:	b	413ed0 <wcrtomb@plt+0x11190>
  41403c:	mov	x0, x21
  414040:	bl	402690 <strlen@plt>
  414044:	mov	x26, x0
  414048:	mov	x0, x21
  41404c:	add	x1, x26, x20
  414050:	add	x1, x1, #0x1
  414054:	bl	418660 <wcrtomb@plt+0x15920>
  414058:	add	x2, x20, #0x1
  41405c:	mov	x21, x0
  414060:	mov	x1, x24
  414064:	add	x0, x0, x26
  414068:	bl	402650 <memcpy@plt>
  41406c:	ldrb	w0, [x19, #33]
  414070:	str	x21, [x23, #24]
  414074:	strb	w0, [x23, #33]
  414078:	b	413698 <wcrtomb@plt+0x10958>
  41407c:	bl	402690 <strlen@plt>
  414080:	mov	x21, x0
  414084:	mov	x0, x20
  414088:	bl	402690 <strlen@plt>
  41408c:	add	x26, x21, x0
  414090:	mov	x24, x0
  414094:	mov	x0, x26
  414098:	bl	418630 <wcrtomb@plt+0x158f0>
  41409c:	ldr	x1, [x23, #16]
  4140a0:	mov	x20, x0
  4140a4:	mov	x2, x21
  4140a8:	bl	402650 <memcpy@plt>
  4140ac:	ldr	x1, [x19, #8]
  4140b0:	mov	x2, x24
  4140b4:	add	x0, x20, x21
  4140b8:	bl	402650 <memcpy@plt>
  4140bc:	ldr	x0, [x23]
  4140c0:	mov	x2, x26
  4140c4:	mov	x1, x20
  4140c8:	bl	40d3f0 <wcrtomb@plt+0xa6b0>
  4140cc:	str	x0, [x23]
  4140d0:	mov	x0, x20
  4140d4:	bl	402ae0 <free@plt>
  4140d8:	b	413610 <wcrtomb@plt+0x108d0>
  4140dc:	add	w21, w21, #0x1
  4140e0:	cmp	w21, #0x100
  4140e4:	b.eq	413ca0 <wcrtomb@plt+0x10f60>  // b.none
  4140e8:	lsr	w0, w21, #6
  4140ec:	ldr	x0, [x2, x0, lsl #3]
  4140f0:	lsr	x0, x0, x21
  4140f4:	tbnz	w0, #0, 413ae8 <wcrtomb@plt+0x10da8>
  4140f8:	b	4140dc <wcrtomb@plt+0x1139c>
  4140fc:	ldr	x24, [x19, #8]
  414100:	mov	x0, x24
  414104:	bl	402690 <strlen@plt>
  414108:	mov	x20, x0
  41410c:	ldr	x21, [x23, #8]
  414110:	cbz	x0, 414144 <wcrtomb@plt+0x11404>
  414114:	mov	x0, x21
  414118:	bl	402690 <strlen@plt>
  41411c:	mov	x26, x0
  414120:	mov	x0, x21
  414124:	add	x1, x26, x20
  414128:	add	x1, x1, #0x1
  41412c:	bl	418660 <wcrtomb@plt+0x15920>
  414130:	add	x2, x20, #0x1
  414134:	mov	x21, x0
  414138:	mov	x1, x24
  41413c:	add	x0, x0, x26
  414140:	bl	402650 <memcpy@plt>
  414144:	str	x21, [x23, #8]
  414148:	b	41361c <wcrtomb@plt+0x108dc>
  41414c:	sub	x26, x26, #0x1
  414150:	cmp	x26, x3
  414154:	b.le	413cbc <wcrtomb@plt+0x10f7c>
  414158:	add	x1, x27, #0x8
  41415c:	b	41416c <wcrtomb@plt+0x1142c>
  414160:	add	x24, x24, #0x2
  414164:	cmp	x26, x24
  414168:	b.le	414190 <wcrtomb@plt+0x11450>
  41416c:	cmp	x22, x24
  414170:	b.eq	414184 <wcrtomb@plt+0x11444>  // b.none
  414174:	ldr	x0, [x27, x24, lsl #3]
  414178:	sub	x0, x0, #0x1
  41417c:	cmp	x0, #0xfe
  414180:	b.hi	414190 <wcrtomb@plt+0x11450>  // b.pmore
  414184:	ldr	x0, [x1, x24, lsl #3]
  414188:	cmp	x0, #0x105
  41418c:	b.eq	414160 <wcrtomb@plt+0x11420>  // b.none
  414190:	sub	x1, x24, x22
  414194:	asr	x1, x1, #1
  414198:	add	x28, x1, #0x1
  41419c:	b	413cbc <wcrtomb@plt+0x10f7c>
  4141a0:	mov	x0, #0x1                   	// #1
  4141a4:	mov	x20, x3
  4141a8:	mov	x2, x0
  4141ac:	b	413d9c <wcrtomb@plt+0x1105c>
  4141b0:	mov	x22, #0x0                   	// #0
  4141b4:	b	413798 <wcrtomb@plt+0x10a58>
  4141b8:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4141bc:	add	x3, x3, #0x188
  4141c0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4141c4:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4141c8:	add	x3, x3, #0x290
  4141cc:	add	x1, x1, #0xe00
  4141d0:	add	x0, x0, #0xf28
  4141d4:	mov	w2, #0xff6                 	// #4086
  4141d8:	bl	402ca0 <__assert_fail@plt>
  4141dc:	mov	x22, #0x0                   	// #0
  4141e0:	b	413738 <wcrtomb@plt+0x109f8>
  4141e4:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4141e8:	add	x3, x3, #0x188
  4141ec:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4141f0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4141f4:	add	x3, x3, #0x290
  4141f8:	add	x1, x1, #0xe00
  4141fc:	add	x0, x0, #0xf58
  414200:	mov	w2, #0x1039                	// #4153
  414204:	bl	402ca0 <__assert_fail@plt>
  414208:	b	402ae0 <free@plt>
  41420c:	nop
  414210:	mov	x0, #0x920                 	// #2336
  414214:	b	418630 <wcrtomb@plt+0x158f0>
  414218:	stp	x29, x30, [sp, #-96]!
  41421c:	mov	x29, sp
  414220:	stp	x23, x24, [sp, #48]
  414224:	mov	x23, x1
  414228:	mov	w1, #0x0                   	// #0
  41422c:	stp	x19, x20, [sp, #16]
  414230:	mov	x20, x0
  414234:	mov	x19, x2
  414238:	mov	x2, #0x410                 	// #1040
  41423c:	stp	x21, x22, [sp, #32]
  414240:	mov	w21, w3
  414244:	stp	x25, x26, [sp, #64]
  414248:	stp	x27, x28, [sp, #80]
  41424c:	bl	4028d0 <memset@plt>
  414250:	ldrb	w22, [x23]
  414254:	adrp	x2, 40f000 <wcrtomb@plt+0xc2c0>
  414258:	adrp	x0, 40e000 <wcrtomb@plt+0xb2c0>
  41425c:	cmp	w22, #0x0
  414260:	add	x2, x2, #0x418
  414264:	add	x0, x0, #0xe68
  414268:	mov	x1, x23
  41426c:	csel	x0, x0, x2, ne  // ne = any
  414270:	str	x0, [x20, #1040]
  414274:	mov	x2, #0x504                 	// #1284
  414278:	add	x0, x20, #0x418
  41427c:	bl	402650 <memcpy@plt>
  414280:	str	x19, [x20, #448]
  414284:	ldrb	w1, [x20, #1050]
  414288:	tst	x21, #0x2
  41428c:	eor	w0, w22, #0x1
  414290:	and	w21, w21, #0x1
  414294:	ubfx	w2, w19, #22, #1
  414298:	mov	x4, #0xffffffffffffffff    	// #-1
  41429c:	mov	w3, #0x1                   	// #1
  4142a0:	mov	w22, #0xa                   	// #10
  4142a4:	csel	w22, wzr, w22, ne  // ne = any
  4142a8:	str	x4, [x20, #24]
  4142ac:	strb	w0, [x20, #192]
  4142b0:	strb	w3, [x20, #456]
  4142b4:	strb	w2, [x20, #457]
  4142b8:	strb	w21, [x20, #458]
  4142bc:	strb	w22, [x20, #459]
  4142c0:	cbnz	w1, 4143b8 <wcrtomb@plt+0x11678>
  4142c4:	sub	x24, x20, x20, lsl #2
  4142c8:	adrp	x19, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4142cc:	sub	x24, x24, #0x214
  4142d0:	add	x19, x19, #0xf68
  4142d4:	add	x28, x20, #0x1cc
  4142d8:	add	x23, x20, #0x2cc
  4142dc:	mov	x25, #0x1                   	// #1
  4142e0:	mov	x27, #0x0                   	// #0
  4142e4:	b	41434c <wcrtomb@plt+0x1160c>
  4142e8:	bl	402ab0 <__ctype_b_loc@plt>
  4142ec:	ldr	x5, [x0]
  4142f0:	lsr	w4, w27, #6
  4142f4:	cmp	w27, #0x5f
  4142f8:	lsl	x6, x25, x27
  4142fc:	add	x4, x20, x4, lsl #3
  414300:	ldrh	w0, [x5, x27, lsl #1]
  414304:	and	w0, w0, #0x8
  414308:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41430c:	b.eq	41436c <wcrtomb@plt+0x1162c>  // b.none
  414310:	mov	w0, #0x2                   	// #2
  414314:	strb	w0, [x28]
  414318:	ldr	x0, [x4, #976]
  41431c:	orr	x0, x0, x6
  414320:	str	x0, [x4, #976]
  414324:	mov	w1, w26
  414328:	mov	x0, x19
  41432c:	bl	402b20 <strchr@plt>
  414330:	cmp	x0, #0x0
  414334:	cset	w0, ne  // ne = any
  414338:	strb	w0, [x28, #256]
  41433c:	add	x28, x28, #0x1
  414340:	add	x27, x27, #0x1
  414344:	cmp	x23, x28
  414348:	b.eq	41439c <wcrtomb@plt+0x1165c>  // b.none
  41434c:	cmp	w21, #0x0
  414350:	and	w0, w27, #0xff
  414354:	ccmp	w0, w22, #0x0, eq  // eq = none
  414358:	mov	w26, w27
  41435c:	b.eq	414378 <wcrtomb@plt+0x11638>  // b.none
  414360:	ldr	w0, [x24, x28, lsl #2]
  414364:	cmn	w0, #0x1
  414368:	b.ne	4142e8 <wcrtomb@plt+0x115a8>  // b.any
  41436c:	mov	w0, #0x1                   	// #1
  414370:	strb	w0, [x28]
  414374:	b	414324 <wcrtomb@plt+0x115e4>
  414378:	lsr	w0, w27, #6
  41437c:	mov	w1, #0x4                   	// #4
  414380:	strb	w1, [x28]
  414384:	lsl	x4, x25, x27
  414388:	add	x0, x20, x0, lsl #3
  41438c:	ldr	x5, [x0, #1008]
  414390:	orr	x4, x5, x4
  414394:	str	x4, [x0, #1008]
  414398:	b	414324 <wcrtomb@plt+0x115e4>
  41439c:	ldp	x19, x20, [sp, #16]
  4143a0:	ldp	x21, x22, [sp, #32]
  4143a4:	ldp	x23, x24, [sp, #48]
  4143a8:	ldp	x25, x26, [sp, #64]
  4143ac:	ldp	x27, x28, [sp, #80]
  4143b0:	ldp	x29, x30, [sp], #96
  4143b4:	ret
  4143b8:	sub	x3, x20, x20, lsl #2
  4143bc:	mov	x25, #0x1                   	// #1
  4143c0:	sub	x27, x3, #0x214
  4143c4:	mov	w26, w25
  4143c8:	add	x19, x20, #0x1cc
  4143cc:	add	x24, x20, #0x2cc
  4143d0:	mov	x23, #0x0                   	// #0
  4143d4:	b	414434 <wcrtomb@plt+0x116f4>
  4143d8:	bl	402ab0 <__ctype_b_loc@plt>
  4143dc:	ldr	x4, [x0]
  4143e0:	lsr	w2, w23, #6
  4143e4:	cmp	w23, #0x5f
  4143e8:	lsl	x5, x25, x23
  4143ec:	add	x0, x20, x2, lsl #3
  4143f0:	ldrh	w2, [x4, x23, lsl #1]
  4143f4:	and	w2, w2, #0x8
  4143f8:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  4143fc:	b.eq	414454 <wcrtomb@plt+0x11714>  // b.none
  414400:	mov	w1, #0x2                   	// #2
  414404:	strb	w1, [x19]
  414408:	ldr	x2, [x0, #976]
  41440c:	orr	x2, x2, x5
  414410:	str	x2, [x0, #976]
  414414:	and	w1, w28, #0xc0
  414418:	add	x19, x19, #0x1
  41441c:	cmp	w1, #0x80
  414420:	add	x23, x23, #0x1
  414424:	cset	w0, ne  // ne = any
  414428:	strb	w0, [x19, #255]
  41442c:	cmp	x19, x24
  414430:	b.eq	41439c <wcrtomb@plt+0x1165c>  // b.none
  414434:	cmp	w21, #0x0
  414438:	and	w0, w23, #0xff
  41443c:	ccmp	w0, w22, #0x0, eq  // eq = none
  414440:	mov	w28, w23
  414444:	b.eq	41445c <wcrtomb@plt+0x1171c>  // b.none
  414448:	ldr	w0, [x27, x19, lsl #2]
  41444c:	cmn	w0, #0x1
  414450:	b.ne	4143d8 <wcrtomb@plt+0x11698>  // b.any
  414454:	strb	w26, [x19]
  414458:	b	414414 <wcrtomb@plt+0x116d4>
  41445c:	lsr	w0, w23, #6
  414460:	mov	w1, #0x4                   	// #4
  414464:	strb	w1, [x19]
  414468:	lsl	x2, x25, x23
  41446c:	add	x0, x20, x0, lsl #3
  414470:	ldr	x4, [x0, #1008]
  414474:	orr	x2, x4, x2
  414478:	str	x2, [x0, #1008]
  41447c:	b	414414 <wcrtomb@plt+0x116d4>
  414480:	stp	x29, x30, [sp, #-32]!
  414484:	mov	x2, #0x1c0                 	// #448
  414488:	mov	x29, sp
  41448c:	stp	x19, x20, [sp, #16]
  414490:	mov	x20, x1
  414494:	mov	x19, x0
  414498:	mov	w1, #0x0                   	// #0
  41449c:	bl	4028d0 <memset@plt>
  4144a0:	ldrb	w2, [x20, #192]
  4144a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4144a8:	str	x0, [x19, #24]
  4144ac:	add	x1, x20, #0x1c0
  4144b0:	strb	w2, [x19, #192]
  4144b4:	add	x0, x19, #0x1c0
  4144b8:	mov	x2, #0x250                 	// #592
  4144bc:	bl	402650 <memcpy@plt>
  4144c0:	ldr	x0, [x20, #1040]
  4144c4:	str	x0, [x19, #1040]
  4144c8:	add	x1, x20, #0x418
  4144cc:	add	x0, x19, #0x418
  4144d0:	mov	x2, #0x504                 	// #1284
  4144d4:	bl	402650 <memcpy@plt>
  4144d8:	ldp	x19, x20, [sp, #16]
  4144dc:	ldp	x29, x30, [sp], #32
  4144e0:	ret
  4144e4:	nop
  4144e8:	stp	x29, x30, [sp, #-112]!
  4144ec:	mov	x29, sp
  4144f0:	stp	x25, x26, [sp, #64]
  4144f4:	mov	x26, x0
  4144f8:	stp	x19, x20, [sp, #16]
  4144fc:	add	x20, sp, #0x60
  414500:	stp	x21, x22, [sp, #32]
  414504:	add	x21, sp, #0x68
  414508:	stp	x23, x24, [sp, #48]
  41450c:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  414510:	cmp	x0, #0x1
  414514:	cset	w1, hi  // hi = pmore
  414518:	strb	w1, [x26]
  41451c:	b.hi	41455c <wcrtomb@plt+0x1181c>  // b.pmore
  414520:	mov	w19, #0x0                   	// #0
  414524:	b	414530 <wcrtomb@plt+0x117f0>
  414528:	cmp	w19, #0xff
  41452c:	b.eq	414634 <wcrtomb@plt+0x118f4>  // b.none
  414530:	and	w2, w19, #0xff
  414534:	mov	x1, x20
  414538:	add	w3, w2, #0x1
  41453c:	add	w19, w19, #0x1
  414540:	mov	x0, x21
  414544:	strb	w3, [sp, #96]
  414548:	strb	wzr, [sp, #97]
  41454c:	strb	w2, [sp, #104]
  414550:	strb	wzr, [sp, #105]
  414554:	bl	402c40 <strcoll@plt>
  414558:	tbnz	w0, #31, 414528 <wcrtomb@plt+0x117e8>
  41455c:	mov	w0, #0x0                   	// #0
  414560:	strb	w0, [x26, #1]
  414564:	mov	x3, x21
  414568:	mov	x0, x20
  41456c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414570:	mov	x2, #0x2                   	// #2
  414574:	add	x1, x1, #0x450
  414578:	str	xzr, [sp, #104]
  41457c:	bl	418830 <wcrtomb@plt+0x15af0>
  414580:	mov	w1, #0x0                   	// #0
  414584:	cmp	x0, #0x2
  414588:	b.ne	414598 <wcrtomb@plt+0x11858>  // b.any
  41458c:	ldr	w0, [sp, #96]
  414590:	cmp	w0, #0x100
  414594:	cset	w1, eq  // eq = none
  414598:	add	x23, x26, #0x3
  41459c:	add	x24, x26, #0x104
  4145a0:	mov	x19, #0x0                   	// #0
  4145a4:	mov	x22, #0x1                   	// #1
  4145a8:	mov	w25, #0xffffffff            	// #-1
  4145ac:	strb	w1, [x26, #2]
  4145b0:	add	x1, sp, #0x5f
  4145b4:	mov	x3, x21
  4145b8:	mov	x0, x20
  4145bc:	mov	x2, #0x1                   	// #1
  4145c0:	strb	w19, [sp, #95]
  4145c4:	str	xzr, [sp, #104]
  4145c8:	bl	418830 <wcrtomb@plt+0x15af0>
  4145cc:	cmp	x0, #0x0
  4145d0:	csel	x1, x0, x22, ne  // ne = any
  4145d4:	strb	w1, [x23, x19]
  4145d8:	cmp	x0, #0x1
  4145dc:	b.ls	414608 <wcrtomb@plt+0x118c8>  // b.plast
  4145e0:	str	w25, [x24, x19, lsl #2]
  4145e4:	add	x19, x19, #0x1
  4145e8:	cmp	x19, #0x100
  4145ec:	b.ne	4145b0 <wcrtomb@plt+0x11870>  // b.any
  4145f0:	ldp	x19, x20, [sp, #16]
  4145f4:	ldp	x21, x22, [sp, #32]
  4145f8:	ldp	x23, x24, [sp, #48]
  4145fc:	ldp	x25, x26, [sp, #64]
  414600:	ldp	x29, x30, [sp], #112
  414604:	ret
  414608:	ldr	w0, [sp, #96]
  41460c:	str	w0, [x24, x19, lsl #2]
  414610:	add	x19, x19, #0x1
  414614:	cmp	x19, #0x100
  414618:	b.ne	4145b0 <wcrtomb@plt+0x11870>  // b.any
  41461c:	ldp	x19, x20, [sp, #16]
  414620:	ldp	x21, x22, [sp, #32]
  414624:	ldp	x23, x24, [sp, #48]
  414628:	ldp	x25, x26, [sp, #64]
  41462c:	ldp	x29, x30, [sp], #112
  414630:	ret
  414634:	mov	w0, #0x1                   	// #1
  414638:	b	414560 <wcrtomb@plt+0x11820>
  41463c:	nop
  414640:	stp	x29, x30, [sp, #-80]!
  414644:	mov	x29, sp
  414648:	stp	x19, x20, [sp, #16]
  41464c:	stp	x21, x22, [sp, #32]
  414650:	stp	x23, x24, [sp, #48]
  414654:	mov	x24, x1
  414658:	mov	w23, w0
  41465c:	stp	x25, x26, [sp, #64]
  414660:	bl	402c70 <towupper@plt>
  414664:	mov	w21, w0
  414668:	bl	402cf0 <towlower@plt>
  41466c:	mov	w22, w0
  414670:	cmp	w23, w21
  414674:	b.eq	414710 <wcrtomb@plt+0x119d0>  // b.none
  414678:	mov	w20, #0x2                   	// #2
  41467c:	mov	x19, #0x4                   	// #4
  414680:	mov	w26, #0x1                   	// #1
  414684:	str	w21, [x24]
  414688:	cmp	w21, w22
  41468c:	ccmp	w23, w22, #0x4, ne  // ne = any
  414690:	b.eq	4146a4 <wcrtomb@plt+0x11964>  // b.none
  414694:	mov	w0, w22
  414698:	bl	402c70 <towupper@plt>
  41469c:	cmp	w0, w21
  4146a0:	b.eq	414720 <wcrtomb@plt+0x119e0>  // b.none
  4146a4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4146a8:	add	x20, x20, #0x460
  4146ac:	add	x25, x20, #0x26
  4146b0:	b	4146bc <wcrtomb@plt+0x1197c>
  4146b4:	cmp	x25, x20
  4146b8:	b.eq	4146f4 <wcrtomb@plt+0x119b4>  // b.none
  4146bc:	ldrsh	w19, [x20]
  4146c0:	add	x20, x20, #0x2
  4146c4:	cmp	w22, w19
  4146c8:	ccmp	w21, w19, #0x4, ne  // ne = any
  4146cc:	ccmp	w23, w19, #0x4, ne  // ne = any
  4146d0:	b.eq	4146b4 <wcrtomb@plt+0x11974>  // b.none
  4146d4:	mov	w0, w19
  4146d8:	bl	402c70 <towupper@plt>
  4146dc:	cmp	w0, w21
  4146e0:	b.ne	4146b4 <wcrtomb@plt+0x11974>  // b.any
  4146e4:	str	w19, [x24, w26, sxtw #2]
  4146e8:	cmp	x25, x20
  4146ec:	add	w26, w26, #0x1
  4146f0:	b.ne	4146bc <wcrtomb@plt+0x1197c>  // b.any
  4146f4:	mov	w0, w26
  4146f8:	ldp	x19, x20, [sp, #16]
  4146fc:	ldp	x21, x22, [sp, #32]
  414700:	ldp	x23, x24, [sp, #48]
  414704:	ldp	x25, x26, [sp, #64]
  414708:	ldp	x29, x30, [sp], #80
  41470c:	ret
  414710:	mov	w20, #0x1                   	// #1
  414714:	mov	x19, #0x0                   	// #0
  414718:	mov	w26, #0x0                   	// #0
  41471c:	b	414688 <wcrtomb@plt+0x11948>
  414720:	mov	w26, w20
  414724:	str	w22, [x24, x19]
  414728:	b	4146a4 <wcrtomb@plt+0x11964>
  41472c:	nop
  414730:	stp	x29, x30, [sp, #-16]!
  414734:	mov	w0, #0xe                   	// #14
  414738:	mov	x29, sp
  41473c:	bl	4027c0 <nl_langinfo@plt>
  414740:	cbz	x0, 414760 <wcrtomb@plt+0x11a20>
  414744:	ldrb	w2, [x0]
  414748:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41474c:	add	x1, x1, #0x488
  414750:	cmp	w2, #0x0
  414754:	csel	x0, x1, x0, eq  // eq = none
  414758:	ldp	x29, x30, [sp], #16
  41475c:	ret
  414760:	ldp	x29, x30, [sp], #16
  414764:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414768:	add	x0, x0, #0x488
  41476c:	ret
  414770:	stp	x29, x30, [sp, #-48]!
  414774:	mov	x29, sp
  414778:	stp	x19, x20, [sp, #16]
  41477c:	cbz	x0, 414854 <wcrtomb@plt+0x11b14>
  414780:	mov	x19, x0
  414784:	mov	w1, #0x2f                  	// #47
  414788:	bl	4029b0 <strrchr@plt>
  41478c:	mov	x20, x0
  414790:	cbz	x0, 4147f4 <wcrtomb@plt+0x11ab4>
  414794:	str	x21, [sp, #32]
  414798:	add	x21, x0, #0x1
  41479c:	sub	x0, x21, x19
  4147a0:	cmp	x0, #0x6
  4147a4:	b.le	414810 <wcrtomb@plt+0x11ad0>
  4147a8:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4147ac:	sub	x0, x20, #0x6
  4147b0:	add	x1, x1, #0x4c8
  4147b4:	mov	x2, #0x7                   	// #7
  4147b8:	bl	402860 <strncmp@plt>
  4147bc:	cbnz	w0, 414810 <wcrtomb@plt+0x11ad0>
  4147c0:	ldrb	w0, [x20, #1]
  4147c4:	cmp	w0, #0x6c
  4147c8:	b.ne	414830 <wcrtomb@plt+0x11af0>  // b.any
  4147cc:	ldrb	w0, [x21, #1]
  4147d0:	cmp	w0, #0x74
  4147d4:	b.ne	414830 <wcrtomb@plt+0x11af0>  // b.any
  4147d8:	ldrb	w0, [x21, #2]
  4147dc:	cmp	w0, #0x2d
  4147e0:	b.ne	414830 <wcrtomb@plt+0x11af0>  // b.any
  4147e4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4147e8:	add	x19, x20, #0x4
  4147ec:	ldr	x21, [sp, #32]
  4147f0:	str	x19, [x0, #1328]
  4147f4:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  4147f8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4147fc:	str	x19, [x1, #1960]
  414800:	str	x19, [x0, #1280]
  414804:	ldp	x19, x20, [sp, #16]
  414808:	ldp	x29, x30, [sp], #48
  41480c:	ret
  414810:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  414814:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  414818:	ldr	x21, [sp, #32]
  41481c:	str	x19, [x1, #1960]
  414820:	str	x19, [x0, #1280]
  414824:	ldp	x19, x20, [sp, #16]
  414828:	ldp	x29, x30, [sp], #48
  41482c:	ret
  414830:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  414834:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  414838:	mov	x19, x21
  41483c:	str	x19, [x1, #1960]
  414840:	str	x19, [x0, #1280]
  414844:	ldp	x19, x20, [sp, #16]
  414848:	ldr	x21, [sp, #32]
  41484c:	ldp	x29, x30, [sp], #48
  414850:	ret
  414854:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  414858:	mov	x2, #0x37                  	// #55
  41485c:	mov	x1, #0x1                   	// #1
  414860:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414864:	ldr	x3, [x3, #1288]
  414868:	add	x0, x0, #0x490
  41486c:	str	x21, [sp, #32]
  414870:	bl	402b50 <fwrite@plt>
  414874:	bl	4029e0 <abort@plt>
  414878:	stp	x29, x30, [sp, #-64]!
  41487c:	mov	x29, sp
  414880:	stp	x19, x20, [sp, #16]
  414884:	mov	x19, x2
  414888:	mov	w20, w3
  41488c:	mov	w2, w4
  414890:	add	x3, sp, #0x20
  414894:	bl	428f28 <_obstack_memory_used@@Base+0x10218>
  414898:	cbnz	w0, 4148c8 <wcrtomb@plt+0x11b88>
  41489c:	mov	x1, x19
  4148a0:	mov	w2, w20
  4148a4:	add	x0, sp, #0x20
  4148a8:	bl	429000 <_obstack_memory_used@@Base+0x102f0>
  4148ac:	mov	w19, w0
  4148b0:	add	x0, sp, #0x20
  4148b4:	bl	428ee8 <_obstack_memory_used@@Base+0x101d8>
  4148b8:	mov	w0, w19
  4148bc:	ldp	x19, x20, [sp, #16]
  4148c0:	ldp	x29, x30, [sp], #64
  4148c4:	ret
  4148c8:	mov	w19, #0xfffffffe            	// #-2
  4148cc:	b	4148b8 <wcrtomb@plt+0x11b78>
  4148d0:	stp	x29, x30, [sp, #-48]!
  4148d4:	mov	w2, #0x5                   	// #5
  4148d8:	mov	x29, sp
  4148dc:	stp	x19, x20, [sp, #16]
  4148e0:	mov	x20, x0
  4148e4:	str	x21, [sp, #32]
  4148e8:	mov	w21, w1
  4148ec:	mov	x1, x0
  4148f0:	mov	x0, #0x0                   	// #0
  4148f4:	bl	402c20 <dcgettext@plt>
  4148f8:	mov	x19, x0
  4148fc:	cmp	x20, x0
  414900:	b.eq	414918 <wcrtomb@plt+0x11bd8>  // b.none
  414904:	mov	x0, x19
  414908:	ldp	x19, x20, [sp, #16]
  41490c:	ldr	x21, [sp, #32]
  414910:	ldp	x29, x30, [sp], #48
  414914:	ret
  414918:	bl	414730 <wcrtomb@plt+0x119f0>
  41491c:	ldrb	w1, [x0]
  414920:	and	w1, w1, #0xffffffdf
  414924:	cmp	w1, #0x55
  414928:	b.ne	41498c <wcrtomb@plt+0x11c4c>  // b.any
  41492c:	ldrb	w1, [x0, #1]
  414930:	and	w1, w1, #0xffffffdf
  414934:	cmp	w1, #0x54
  414938:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  41493c:	ldrb	w1, [x0, #2]
  414940:	and	w1, w1, #0xffffffdf
  414944:	cmp	w1, #0x46
  414948:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  41494c:	ldrb	w1, [x0, #3]
  414950:	cmp	w1, #0x2d
  414954:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  414958:	ldrb	w1, [x0, #4]
  41495c:	cmp	w1, #0x38
  414960:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  414964:	ldrb	w0, [x0, #5]
  414968:	cbnz	w0, 414a08 <wcrtomb@plt+0x11cc8>
  41496c:	ldrb	w1, [x19]
  414970:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414974:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414978:	add	x0, x0, #0x4d8
  41497c:	cmp	w1, #0x60
  414980:	add	x19, x19, #0x4f0
  414984:	csel	x19, x19, x0, eq  // eq = none
  414988:	b	414904 <wcrtomb@plt+0x11bc4>
  41498c:	cmp	w1, #0x47
  414990:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  414994:	ldrb	w1, [x0, #1]
  414998:	and	w1, w1, #0xffffffdf
  41499c:	cmp	w1, #0x42
  4149a0:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149a4:	ldrb	w1, [x0, #2]
  4149a8:	cmp	w1, #0x31
  4149ac:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149b0:	ldrb	w1, [x0, #3]
  4149b4:	cmp	w1, #0x38
  4149b8:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149bc:	ldrb	w1, [x0, #4]
  4149c0:	cmp	w1, #0x30
  4149c4:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149c8:	ldrb	w1, [x0, #5]
  4149cc:	cmp	w1, #0x33
  4149d0:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149d4:	ldrb	w1, [x0, #6]
  4149d8:	cmp	w1, #0x30
  4149dc:	b.ne	414a08 <wcrtomb@plt+0x11cc8>  // b.any
  4149e0:	ldrb	w0, [x0, #7]
  4149e4:	cbnz	w0, 414a08 <wcrtomb@plt+0x11cc8>
  4149e8:	ldrb	w1, [x19]
  4149ec:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4149f0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4149f4:	add	x0, x0, #0x4e0
  4149f8:	cmp	w1, #0x60
  4149fc:	add	x19, x19, #0x4e8
  414a00:	csel	x19, x19, x0, eq  // eq = none
  414a04:	b	414904 <wcrtomb@plt+0x11bc4>
  414a08:	cmp	w21, #0x9
  414a0c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  414a10:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414a14:	add	x0, x0, #0x588
  414a18:	add	x19, x19, #0x4d0
  414a1c:	csel	x19, x19, x0, eq  // eq = none
  414a20:	mov	x0, x19
  414a24:	ldp	x19, x20, [sp, #16]
  414a28:	ldr	x21, [sp, #32]
  414a2c:	ldp	x29, x30, [sp], #48
  414a30:	ret
  414a34:	nop
  414a38:	sub	sp, sp, #0x100
  414a3c:	stp	x29, x30, [sp, #16]
  414a40:	add	x29, sp, #0x10
  414a44:	stp	x19, x20, [sp, #32]
  414a48:	mov	w19, w5
  414a4c:	and	w20, w5, #0x2
  414a50:	stp	x21, x22, [sp, #48]
  414a54:	mov	w21, w4
  414a58:	stp	x23, x24, [sp, #64]
  414a5c:	mov	x23, x1
  414a60:	mov	x24, x3
  414a64:	stp	x25, x26, [sp, #80]
  414a68:	mov	x26, x6
  414a6c:	stp	x27, x28, [sp, #96]
  414a70:	mov	x28, x0
  414a74:	mov	x27, x2
  414a78:	str	w4, [sp, #116]
  414a7c:	str	w5, [sp, #184]
  414a80:	str	x7, [sp, #200]
  414a84:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  414a88:	mov	x1, x19
  414a8c:	str	x0, [sp, #176]
  414a90:	cmp	w21, #0x4
  414a94:	ubfx	x10, x1, #1, #1
  414a98:	b.eq	415728 <wcrtomb@plt+0x129e8>  // b.none
  414a9c:	ldr	w0, [sp, #116]
  414aa0:	b.ls	414e30 <wcrtomb@plt+0x120f0>  // b.plast
  414aa4:	cmp	w0, #0x7
  414aa8:	b.eq	415794 <wcrtomb@plt+0x12a54>  // b.none
  414aac:	b.ls	41543c <wcrtomb@plt+0x126fc>  // b.plast
  414ab0:	ldr	w0, [sp, #116]
  414ab4:	sub	w0, w0, #0x8
  414ab8:	cmp	w0, #0x2
  414abc:	b.hi	415bd4 <wcrtomb@plt+0x12e94>  // b.pmore
  414ac0:	ldr	w19, [sp, #116]
  414ac4:	cmp	w19, #0xa
  414ac8:	b.ne	415620 <wcrtomb@plt+0x128e0>  // b.any
  414acc:	mov	x19, #0x0                   	// #0
  414ad0:	cbz	w20, 415a14 <wcrtomb@plt+0x12cd4>
  414ad4:	ldr	x0, [sp, #256]
  414ad8:	str	w10, [sp, #124]
  414adc:	mov	w25, #0x0                   	// #0
  414ae0:	bl	402690 <strlen@plt>
  414ae4:	cmp	x0, #0x0
  414ae8:	ldr	w10, [sp, #124]
  414aec:	mov	x12, x0
  414af0:	mov	w11, #0x1                   	// #1
  414af4:	mov	w5, w11
  414af8:	csel	w0, w10, wzr, ne  // ne = any
  414afc:	str	w0, [sp, #208]
  414b00:	ldr	w0, [sp, #184]
  414b04:	mov	w7, #0x0                   	// #0
  414b08:	stp	w11, wzr, [sp, #120]
  414b0c:	and	w1, w0, w11
  414b10:	and	w0, w0, #0x4
  414b14:	stp	w1, w0, [sp, #212]
  414b18:	ldr	x0, [sp, #256]
  414b1c:	str	wzr, [sp, #144]
  414b20:	str	x0, [sp, #168]
  414b24:	str	wzr, [sp, #188]
  414b28:	str	xzr, [sp, #192]
  414b2c:	nop
  414b30:	mov	x4, x26
  414b34:	mov	w26, w5
  414b38:	mov	x20, #0x0                   	// #0
  414b3c:	nop
  414b40:	cmp	x24, x20
  414b44:	cset	w21, ne  // ne = any
  414b48:	cmn	x24, #0x1
  414b4c:	b.eq	414ea0 <wcrtomb@plt+0x12160>  // b.none
  414b50:	cbz	w21, 414eb0 <wcrtomb@plt+0x12170>
  414b54:	add	x3, x27, x20
  414b58:	cbz	w11, 415164 <wcrtomb@plt+0x12424>
  414b5c:	cbz	x12, 415310 <wcrtomb@plt+0x125d0>
  414b60:	cmp	x12, #0x1
  414b64:	add	x22, x20, x12
  414b68:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  414b6c:	b.ne	414b9c <wcrtomb@plt+0x11e5c>  // b.any
  414b70:	mov	x0, x27
  414b74:	stp	x3, x12, [sp, #128]
  414b78:	stp	w10, w7, [sp, #148]
  414b7c:	str	w11, [sp, #156]
  414b80:	str	x4, [sp, #160]
  414b84:	bl	402690 <strlen@plt>
  414b88:	ldp	x3, x12, [sp, #128]
  414b8c:	mov	x24, x0
  414b90:	ldp	w10, w7, [sp, #148]
  414b94:	ldr	w11, [sp, #156]
  414b98:	ldr	x4, [sp, #160]
  414b9c:	cmp	x22, x24
  414ba0:	b.hi	415310 <wcrtomb@plt+0x125d0>  // b.pmore
  414ba4:	ldr	x1, [sp, #168]
  414ba8:	mov	x2, x12
  414bac:	mov	x0, x3
  414bb0:	stp	x3, x12, [sp, #128]
  414bb4:	stp	w10, w7, [sp, #148]
  414bb8:	str	w11, [sp, #156]
  414bbc:	str	x4, [sp, #160]
  414bc0:	bl	402a60 <memcmp@plt>
  414bc4:	ldp	w10, w7, [sp, #148]
  414bc8:	ldr	w11, [sp, #156]
  414bcc:	ldp	x3, x12, [sp, #128]
  414bd0:	ldr	x4, [sp, #160]
  414bd4:	cbnz	w0, 415310 <wcrtomb@plt+0x125d0>
  414bd8:	cbnz	w10, 4150f4 <wcrtomb@plt+0x123b4>
  414bdc:	ldrb	w22, [x3]
  414be0:	cmp	w22, #0x7e
  414be4:	b.ls	414f4c <wcrtomb@plt+0x1220c>  // b.plast
  414be8:	ldr	x0, [sp, #176]
  414bec:	mov	w5, w11
  414bf0:	cmp	x0, #0x1
  414bf4:	b.eq	415180 <wcrtomb@plt+0x12440>  // b.none
  414bf8:	str	xzr, [sp, #248]
  414bfc:	cmn	x24, #0x1
  414c00:	b.ne	414c38 <wcrtomb@plt+0x11ef8>  // b.any
  414c04:	mov	x0, x27
  414c08:	str	w5, [sp, #128]
  414c0c:	str	x12, [sp, #136]
  414c10:	stp	w10, w7, [sp, #148]
  414c14:	str	w11, [sp, #156]
  414c18:	str	x4, [sp, #160]
  414c1c:	bl	402690 <strlen@plt>
  414c20:	ldr	w5, [sp, #128]
  414c24:	mov	x24, x0
  414c28:	ldp	w10, w7, [sp, #148]
  414c2c:	ldr	w11, [sp, #156]
  414c30:	ldr	x12, [sp, #136]
  414c34:	ldr	x4, [sp, #160]
  414c38:	str	w22, [sp, #220]
  414c3c:	ldr	w22, [sp, #144]
  414c40:	mov	x8, #0x0                   	// #0
  414c44:	stp	x19, x4, [sp, #224]
  414c48:	mov	w19, w21
  414c4c:	mov	x21, x8
  414c50:	str	x12, [sp, #128]
  414c54:	str	w10, [sp, #136]
  414c58:	stp	w25, w5, [sp, #148]
  414c5c:	stp	w7, w11, [sp, #156]
  414c60:	add	x25, x20, x21
  414c64:	add	x3, sp, #0xf8
  414c68:	sub	x2, x24, x25
  414c6c:	add	x1, x27, x25
  414c70:	add	x0, sp, #0xf4
  414c74:	bl	418830 <wcrtomb@plt+0x15af0>
  414c78:	mov	x13, #0x2b                  	// #43
  414c7c:	mov	x3, x0
  414c80:	movk	x13, #0x2, lsl #32
  414c84:	cbz	x0, 414cc0 <wcrtomb@plt+0x11f80>
  414c88:	cmn	x0, #0x1
  414c8c:	b.eq	415a58 <wcrtomb@plt+0x12d18>  // b.none
  414c90:	cmn	x0, #0x2
  414c94:	mov	x6, #0x1                   	// #1
  414c98:	b.eq	415a90 <wcrtomb@plt+0x12d50>  // b.none
  414c9c:	cbnz	w22, 41558c <wcrtomb@plt+0x1284c>
  414ca0:	ldr	w0, [sp, #244]
  414ca4:	add	x21, x21, x3
  414ca8:	bl	402c80 <iswprint@plt>
  414cac:	cmp	w0, #0x0
  414cb0:	csel	w19, w19, wzr, ne  // ne = any
  414cb4:	add	x0, sp, #0xf8
  414cb8:	bl	402a10 <mbsinit@plt>
  414cbc:	cbz	w0, 414c60 <wcrtomb@plt+0x11f20>
  414cc0:	eor	w1, w19, #0x1
  414cc4:	ldr	w0, [sp, #120]
  414cc8:	mov	x8, x21
  414ccc:	mov	w21, w19
  414cd0:	ldp	x19, x4, [sp, #224]
  414cd4:	and	w1, w0, w1
  414cd8:	ldr	w10, [sp, #136]
  414cdc:	and	w1, w1, #0xff
  414ce0:	ldp	w25, w5, [sp, #148]
  414ce4:	ldp	w7, w11, [sp, #156]
  414ce8:	ldr	w22, [sp, #220]
  414cec:	ldr	x12, [sp, #128]
  414cf0:	cmp	x8, #0x1
  414cf4:	b.hi	414d08 <wcrtomb@plt+0x11fc8>  // b.pmore
  414cf8:	cbz	w1, 4151f4 <wcrtomb@plt+0x124b4>
  414cfc:	nop
  414d00:	ldr	w1, [sp, #120]
  414d04:	mov	w21, #0x0                   	// #0
  414d08:	add	x8, x8, x20
  414d0c:	mov	w9, #0x0                   	// #0
  414d10:	mov	w2, #0x27                  	// #39
  414d14:	mov	w3, #0x5c                  	// #92
  414d18:	mov	w6, #0x24                  	// #36
  414d1c:	cbz	w1, 414dd4 <wcrtomb@plt+0x12094>
  414d20:	cbnz	w10, 41560c <wcrtomb@plt+0x128cc>
  414d24:	eor	w0, w25, #0x1
  414d28:	ands	w0, w7, w0
  414d2c:	b.eq	414d64 <wcrtomb@plt+0x12024>  // b.none
  414d30:	cmp	x23, x19
  414d34:	b.ls	414d3c <wcrtomb@plt+0x11ffc>  // b.plast
  414d38:	strb	w2, [x28, x19]
  414d3c:	add	x9, x19, #0x1
  414d40:	cmp	x23, x9
  414d44:	b.ls	414d4c <wcrtomb@plt+0x1200c>  // b.plast
  414d48:	strb	w6, [x28, x9]
  414d4c:	add	x9, x19, #0x2
  414d50:	cmp	x23, x9
  414d54:	b.ls	414d5c <wcrtomb@plt+0x1201c>  // b.plast
  414d58:	strb	w2, [x28, x9]
  414d5c:	add	x19, x19, #0x3
  414d60:	mov	w25, w0
  414d64:	cmp	x23, x19
  414d68:	b.ls	414d70 <wcrtomb@plt+0x12030>  // b.plast
  414d6c:	strb	w3, [x28, x19]
  414d70:	add	x0, x19, #0x1
  414d74:	cmp	x23, x0
  414d78:	b.ls	414d88 <wcrtomb@plt+0x12048>  // b.plast
  414d7c:	lsr	w9, w22, #6
  414d80:	add	w9, w9, #0x30
  414d84:	strb	w9, [x28, x0]
  414d88:	add	x0, x19, #0x2
  414d8c:	cmp	x23, x0
  414d90:	b.ls	414da0 <wcrtomb@plt+0x12060>  // b.plast
  414d94:	ubfx	x9, x22, #3, #3
  414d98:	add	w9, w9, #0x30
  414d9c:	strb	w9, [x28, x0]
  414da0:	and	w22, w22, #0x7
  414da4:	add	x20, x20, #0x1
  414da8:	add	w22, w22, #0x30
  414dac:	cmp	x8, x20
  414db0:	add	x19, x19, #0x3
  414db4:	b.ls	414ff4 <wcrtomb@plt+0x122b4>  // b.plast
  414db8:	mov	w9, w1
  414dbc:	cmp	x23, x19
  414dc0:	b.ls	414dc8 <wcrtomb@plt+0x12088>  // b.plast
  414dc4:	strb	w22, [x28, x19]
  414dc8:	ldrb	w22, [x27, x20]
  414dcc:	add	x19, x19, #0x1
  414dd0:	cbnz	w1, 414d20 <wcrtomb@plt+0x11fe0>
  414dd4:	eor	w0, w9, #0x1
  414dd8:	and	w0, w25, w0
  414ddc:	and	w0, w0, #0xff
  414de0:	cbz	w5, 414df4 <wcrtomb@plt+0x120b4>
  414de4:	cmp	x23, x19
  414de8:	b.ls	414df0 <wcrtomb@plt+0x120b0>  // b.plast
  414dec:	strb	w3, [x28, x19]
  414df0:	add	x19, x19, #0x1
  414df4:	add	x20, x20, #0x1
  414df8:	cmp	x20, x8
  414dfc:	b.cs	415090 <wcrtomb@plt+0x12350>  // b.hs, b.nlast
  414e00:	cbz	w0, 4157dc <wcrtomb@plt+0x12a9c>
  414e04:	cmp	x23, x19
  414e08:	b.ls	414e10 <wcrtomb@plt+0x120d0>  // b.plast
  414e0c:	strb	w2, [x28, x19]
  414e10:	add	x0, x19, #0x1
  414e14:	cmp	x23, x0
  414e18:	b.ls	414e20 <wcrtomb@plt+0x120e0>  // b.plast
  414e1c:	strb	w2, [x28, x0]
  414e20:	add	x19, x19, #0x2
  414e24:	mov	w5, #0x0                   	// #0
  414e28:	mov	w25, #0x0                   	// #0
  414e2c:	b	414dbc <wcrtomb@plt+0x1207c>
  414e30:	cmp	w21, #0x1
  414e34:	b.eq	415830 <wcrtomb@plt+0x12af0>  // b.none
  414e38:	b.ls	4153f0 <wcrtomb@plt+0x126b0>  // b.plast
  414e3c:	cmp	w0, #0x2
  414e40:	b.eq	4158a8 <wcrtomb@plt+0x12b68>  // b.none
  414e44:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  414e48:	add	x0, x0, #0x588
  414e4c:	str	x0, [sp, #168]
  414e50:	mov	w1, #0x1                   	// #1
  414e54:	ldr	w0, [sp, #184]
  414e58:	mov	w7, w1
  414e5c:	mov	w5, w1
  414e60:	mov	w10, w1
  414e64:	stp	w1, w1, [sp, #120]
  414e68:	mov	w11, #0x0                   	// #0
  414e6c:	str	w1, [sp, #144]
  414e70:	mov	w25, #0x0                   	// #0
  414e74:	str	w1, [sp, #208]
  414e78:	and	w1, w0, w1
  414e7c:	and	w0, w0, #0x4
  414e80:	mov	x12, #0x1                   	// #1
  414e84:	mov	x19, #0x0                   	// #0
  414e88:	str	wzr, [sp, #188]
  414e8c:	str	xzr, [sp, #192]
  414e90:	stp	w1, w0, [sp, #212]
  414e94:	mov	w0, #0x2                   	// #2
  414e98:	str	w0, [sp, #116]
  414e9c:	b	414b30 <wcrtomb@plt+0x11df0>
  414ea0:	ldrb	w0, [x27, x20]
  414ea4:	cmp	w0, #0x0
  414ea8:	cset	w21, ne  // ne = any
  414eac:	cbnz	w21, 414b54 <wcrtomb@plt+0x11e14>
  414eb0:	ldr	w0, [sp, #144]
  414eb4:	cmp	x19, #0x0
  414eb8:	mov	w5, w26
  414ebc:	mov	x26, x4
  414ec0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  414ec4:	b.ne	415224 <wcrtomb@plt+0x124e4>  // b.any
  414ec8:	eor	w10, w10, #0x1
  414ecc:	ands	w7, w10, w7
  414ed0:	b.eq	415ae0 <wcrtomb@plt+0x12da0>  // b.none
  414ed4:	ldr	w0, [sp, #188]
  414ed8:	cbz	w0, 415ae4 <wcrtomb@plt+0x12da4>
  414edc:	cbnz	w5, 415b40 <wcrtomb@plt+0x12e00>
  414ee0:	ldr	x2, [sp, #192]
  414ee4:	cmp	x23, #0x0
  414ee8:	cset	w0, eq  // eq = none
  414eec:	cmp	x2, #0x0
  414ef0:	mov	x1, x2
  414ef4:	csel	w0, w0, wzr, ne  // ne = any
  414ef8:	cbz	w0, 415b38 <wcrtomb@plt+0x12df8>
  414efc:	str	w0, [sp, #188]
  414f00:	mov	w0, #0x27                  	// #39
  414f04:	ldr	x23, [sp, #192]
  414f08:	str	x1, [sp, #192]
  414f0c:	mov	w1, #0x1                   	// #1
  414f10:	mov	x12, #0x1                   	// #1
  414f14:	mov	w7, w1
  414f18:	mov	x19, x12
  414f1c:	mov	w11, #0x0                   	// #0
  414f20:	mov	w10, #0x0                   	// #0
  414f24:	strb	w0, [x28]
  414f28:	mov	w0, #0x2                   	// #2
  414f2c:	str	w0, [sp, #116]
  414f30:	str	w1, [sp, #124]
  414f34:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  414f38:	add	x1, x1, #0x588
  414f3c:	str	wzr, [sp, #144]
  414f40:	str	x1, [sp, #168]
  414f44:	str	wzr, [sp, #208]
  414f48:	b	414b30 <wcrtomb@plt+0x11df0>
  414f4c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  414f50:	add	x0, x0, #0x570
  414f54:	ldrh	w0, [x0, w22, uxtw #1]
  414f58:	adr	x1, 414f64 <wcrtomb@plt+0x12224>
  414f5c:	add	x0, x1, w0, sxth #2
  414f60:	br	x0
  414f64:	ldr	w0, [sp, #124]
  414f68:	cbnz	w0, 415a80 <wcrtomb@plt+0x12d40>
  414f6c:	mov	w0, w25
  414f70:	mov	w21, w11
  414f74:	mov	w5, w11
  414f78:	cbz	x4, 415088 <wcrtomb@plt+0x12348>
  414f7c:	ubfx	x1, x22, #5, #8
  414f80:	ldr	w1, [x4, x1, lsl #2]
  414f84:	lsr	w1, w1, w22
  414f88:	tbz	w1, #0, 415088 <wcrtomb@plt+0x12348>
  414f8c:	cbnz	w10, 4150d4 <wcrtomb@plt+0x12394>
  414f90:	eor	w1, w25, #0x1
  414f94:	ands	w1, w7, w1
  414f98:	b.eq	414fdc <wcrtomb@plt+0x1229c>  // b.none
  414f9c:	cmp	x23, x19
  414fa0:	b.ls	414fac <wcrtomb@plt+0x1226c>  // b.plast
  414fa4:	mov	w0, #0x27                  	// #39
  414fa8:	strb	w0, [x28, x19]
  414fac:	add	x0, x19, #0x1
  414fb0:	cmp	x23, x0
  414fb4:	b.ls	414fc0 <wcrtomb@plt+0x12280>  // b.plast
  414fb8:	mov	w2, #0x24                  	// #36
  414fbc:	strb	w2, [x28, x0]
  414fc0:	add	x0, x19, #0x2
  414fc4:	cmp	x23, x0
  414fc8:	b.ls	414fd4 <wcrtomb@plt+0x12294>  // b.plast
  414fcc:	mov	w2, #0x27                  	// #39
  414fd0:	strb	w2, [x28, x0]
  414fd4:	add	x19, x19, #0x3
  414fd8:	mov	w25, w1
  414fdc:	cmp	x23, x19
  414fe0:	b.ls	414fec <wcrtomb@plt+0x122ac>  // b.plast
  414fe4:	mov	w0, #0x5c                  	// #92
  414fe8:	strb	w0, [x28, x19]
  414fec:	add	x19, x19, #0x1
  414ff0:	add	x20, x20, #0x1
  414ff4:	cmp	x19, x23
  414ff8:	b.cs	415000 <wcrtomb@plt+0x122c0>  // b.hs, b.nlast
  414ffc:	strb	w22, [x28, x19]
  415000:	cmp	w21, #0x0
  415004:	add	x19, x19, #0x1
  415008:	csel	w26, w26, wzr, ne  // ne = any
  41500c:	b	414b40 <wcrtomb@plt+0x11e00>
  415010:	cbnz	w10, 41522c <wcrtomb@plt+0x124ec>
  415014:	mov	w5, #0x0                   	// #0
  415018:	ldr	x1, [sp, #192]
  41501c:	cmp	x23, #0x0
  415020:	mov	x0, #0x0                   	// #0
  415024:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  415028:	b.eq	41506c <wcrtomb@plt+0x1232c>  // b.none
  41502c:	cmp	x23, x19
  415030:	b.ls	41503c <wcrtomb@plt+0x122fc>  // b.plast
  415034:	mov	w0, #0x27                  	// #39
  415038:	strb	w0, [x28, x19]
  41503c:	add	x0, x19, #0x1
  415040:	cmp	x23, x0
  415044:	b.ls	415050 <wcrtomb@plt+0x12310>  // b.plast
  415048:	mov	w1, #0x5c                  	// #92
  41504c:	strb	w1, [x28, x0]
  415050:	add	x1, x19, #0x2
  415054:	mov	x0, x23
  415058:	cmp	x23, x1
  41505c:	b.ls	415b70 <wcrtomb@plt+0x12e30>  // b.plast
  415060:	ldr	x23, [sp, #192]
  415064:	mov	w2, #0x27                  	// #39
  415068:	strb	w2, [x28, x1]
  41506c:	add	x19, x19, #0x3
  415070:	mov	w22, #0x27                  	// #39
  415074:	mov	w25, #0x0                   	// #0
  415078:	str	w21, [sp, #188]
  41507c:	str	x23, [sp, #192]
  415080:	mov	x23, x0
  415084:	mov	w0, #0x0                   	// #0
  415088:	cbnz	w5, 414f8c <wcrtomb@plt+0x1224c>
  41508c:	add	x20, x20, #0x1
  415090:	cbz	w0, 414ff4 <wcrtomb@plt+0x122b4>
  415094:	cmp	x23, x19
  415098:	b.ls	4150a4 <wcrtomb@plt+0x12364>  // b.plast
  41509c:	mov	w0, #0x27                  	// #39
  4150a0:	strb	w0, [x28, x19]
  4150a4:	add	x0, x19, #0x1
  4150a8:	cmp	x23, x0
  4150ac:	b.ls	4150b8 <wcrtomb@plt+0x12378>  // b.plast
  4150b0:	mov	w1, #0x27                  	// #39
  4150b4:	strb	w1, [x28, x0]
  4150b8:	add	x19, x19, #0x2
  4150bc:	mov	w25, #0x0                   	// #0
  4150c0:	b	414ff4 <wcrtomb@plt+0x122b4>
  4150c4:	mov	w22, #0x66                  	// #102
  4150c8:	mov	w21, #0x0                   	// #0
  4150cc:	nop
  4150d0:	cbz	w10, 414f90 <wcrtomb@plt+0x12250>
  4150d4:	ldr	w0, [sp, #120]
  4150d8:	and	w0, w0, w7
  4150dc:	str	w0, [sp, #120]
  4150e0:	ldp	w1, w0, [sp, #116]
  4150e4:	cmp	w0, #0x0
  4150e8:	mov	w0, #0x4                   	// #4
  4150ec:	csel	w0, w1, w0, eq  // eq = none
  4150f0:	str	w0, [sp, #116]
  4150f4:	ldr	w4, [sp, #116]
  4150f8:	mov	x3, x24
  4150fc:	ldr	x7, [sp, #200]
  415100:	mov	x2, x27
  415104:	ldr	x0, [sp, #256]
  415108:	str	x0, [sp]
  41510c:	ldr	w0, [sp, #184]
  415110:	mov	x1, x23
  415114:	mov	x6, #0x0                   	// #0
  415118:	and	w5, w0, #0xfffffffd
  41511c:	mov	x0, x28
  415120:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415124:	mov	x19, x0
  415128:	mov	x0, x19
  41512c:	ldp	x29, x30, [sp, #16]
  415130:	ldp	x19, x20, [sp, #32]
  415134:	ldp	x21, x22, [sp, #48]
  415138:	ldp	x23, x24, [sp, #64]
  41513c:	ldp	x25, x26, [sp, #80]
  415140:	ldp	x27, x28, [sp, #96]
  415144:	add	sp, sp, #0x100
  415148:	ret
  41514c:	mov	w22, #0x62                  	// #98
  415150:	mov	w21, #0x0                   	// #0
  415154:	b	4150d0 <wcrtomb@plt+0x12390>
  415158:	mov	w22, #0x61                  	// #97
  41515c:	mov	w21, #0x0                   	// #0
  415160:	b	4150d0 <wcrtomb@plt+0x12390>
  415164:	ldrb	w22, [x27, x20]
  415168:	cmp	w22, #0x7e
  41516c:	b.ls	4151d4 <wcrtomb@plt+0x12494>  // b.plast
  415170:	ldr	x0, [sp, #176]
  415174:	mov	w5, #0x0                   	// #0
  415178:	cmp	x0, #0x1
  41517c:	b.ne	414bf8 <wcrtomb@plt+0x11eb8>  // b.any
  415180:	str	w5, [sp, #128]
  415184:	str	x12, [sp, #136]
  415188:	stp	w10, w7, [sp, #148]
  41518c:	str	w11, [sp, #156]
  415190:	str	x4, [sp, #160]
  415194:	bl	402ab0 <__ctype_b_loc@plt>
  415198:	ldr	x0, [x0]
  41519c:	ldr	w5, [sp, #128]
  4151a0:	ldp	w10, w7, [sp, #148]
  4151a4:	ldrh	w21, [x0, w22, uxtw #1]
  4151a8:	ldr	w11, [sp, #156]
  4151ac:	ands	w0, w21, #0x4000
  4151b0:	ldr	w0, [sp, #120]
  4151b4:	cset	w1, eq  // eq = none
  4151b8:	ubfx	x21, x21, #14, #1
  4151bc:	and	w1, w0, w1
  4151c0:	ldr	x12, [sp, #136]
  4151c4:	ldr	x4, [sp, #160]
  4151c8:	ldr	x8, [sp, #176]
  4151cc:	cbz	w1, 4151f4 <wcrtomb@plt+0x124b4>
  4151d0:	b	414d00 <wcrtomb@plt+0x11fc0>
  4151d4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4151d8:	add	x0, x0, #0x670
  4151dc:	ldrh	w0, [x0, w22, uxtw #1]
  4151e0:	adr	x1, 4151ec <wcrtomb@plt+0x124ac>
  4151e4:	add	x0, x1, w0, sxth #2
  4151e8:	br	x0
  4151ec:	mov	w21, w11
  4151f0:	mov	w5, #0x0                   	// #0
  4151f4:	ldr	w1, [sp, #124]
  4151f8:	mov	w0, w25
  4151fc:	cbz	w1, 414f78 <wcrtomb@plt+0x12238>
  415200:	mov	w0, w25
  415204:	cbnz	w10, 414f78 <wcrtomb@plt+0x12238>
  415208:	mov	w0, w25
  41520c:	cbnz	w5, 414f8c <wcrtomb@plt+0x1224c>
  415210:	b	41508c <wcrtomb@plt+0x1234c>
  415214:	mov	w5, #0x0                   	// #0
  415218:	mov	w21, #0x0                   	// #0
  41521c:	ldr	w0, [sp, #144]
  415220:	cbz	w0, 4151f4 <wcrtomb@plt+0x124b4>
  415224:	mov	w0, #0x2                   	// #2
  415228:	str	w0, [sp, #116]
  41522c:	ldp	w1, w0, [sp, #116]
  415230:	cmp	w0, #0x0
  415234:	mov	w0, #0x4                   	// #4
  415238:	csel	w0, w1, w0, eq  // eq = none
  41523c:	str	w0, [sp, #116]
  415240:	b	4150f4 <wcrtomb@plt+0x123b4>
  415244:	ldr	w0, [sp, #116]
  415248:	cmp	w0, #0x2
  41524c:	b.eq	415570 <wcrtomb@plt+0x12830>  // b.none
  415250:	mov	w5, #0x0                   	// #0
  415254:	ldr	w0, [sp, #116]
  415258:	cmp	w0, #0x5
  41525c:	b.ne	415280 <wcrtomb@plt+0x12540>  // b.any
  415260:	ldr	w0, [sp, #216]
  415264:	cbz	w0, 415280 <wcrtomb@plt+0x12540>
  415268:	add	x6, x20, #0x2
  41526c:	cmp	x6, x24
  415270:	b.cs	415280 <wcrtomb@plt+0x12540>  // b.hs, b.nlast
  415274:	ldrb	w22, [x3, #1]
  415278:	cmp	w22, #0x3f
  41527c:	b.eq	4158c4 <wcrtomb@plt+0x12b84>  // b.none
  415280:	mov	w21, #0x0                   	// #0
  415284:	mov	w22, #0x3f                  	// #63
  415288:	b	4151f4 <wcrtomb@plt+0x124b4>
  41528c:	ldr	w0, [sp, #116]
  415290:	cmp	w0, #0x2
  415294:	b.eq	415010 <wcrtomb@plt+0x122d0>  // b.none
  415298:	mov	w5, #0x0                   	// #0
  41529c:	mov	w22, #0x27                  	// #39
  4152a0:	str	w21, [sp, #188]
  4152a4:	b	4151f4 <wcrtomb@plt+0x124b4>
  4152a8:	mov	w5, #0x0                   	// #0
  4152ac:	mov	w0, #0x74                  	// #116
  4152b0:	ldr	w1, [sp, #144]
  4152b4:	cbnz	w1, 415224 <wcrtomb@plt+0x124e4>
  4152b8:	ldr	w1, [sp, #120]
  4152bc:	cbnz	w1, 4152d0 <wcrtomb@plt+0x12590>
  4152c0:	mov	w0, w25
  4152c4:	mov	w21, #0x0                   	// #0
  4152c8:	cbnz	w10, 414f78 <wcrtomb@plt+0x12238>
  4152cc:	b	415208 <wcrtomb@plt+0x124c8>
  4152d0:	mov	w22, w0
  4152d4:	mov	w21, #0x0                   	// #0
  4152d8:	b	4150d0 <wcrtomb@plt+0x12390>
  4152dc:	mov	w5, #0x0                   	// #0
  4152e0:	mov	w0, #0x66                  	// #102
  4152e4:	b	4152b8 <wcrtomb@plt+0x12578>
  4152e8:	mov	w5, #0x0                   	// #0
  4152ec:	mov	w0, #0x62                  	// #98
  4152f0:	b	4152b8 <wcrtomb@plt+0x12578>
  4152f4:	ldr	w0, [sp, #120]
  4152f8:	cbnz	w0, 415340 <wcrtomb@plt+0x12600>
  4152fc:	ldr	w0, [sp, #212]
  415300:	mov	w5, #0x0                   	// #0
  415304:	cbz	w0, 4152c0 <wcrtomb@plt+0x12580>
  415308:	add	x20, x20, #0x1
  41530c:	b	414b40 <wcrtomb@plt+0x11e00>
  415310:	ldrb	w22, [x3]
  415314:	cmp	w22, #0x7e
  415318:	b.hi	415170 <wcrtomb@plt+0x12430>  // b.pmore
  41531c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  415320:	add	x0, x0, #0x770
  415324:	ldrh	w0, [x0, w22, uxtw #1]
  415328:	adr	x1, 415334 <wcrtomb@plt+0x125f4>
  41532c:	add	x0, x1, w0, sxth #2
  415330:	br	x0
  415334:	mov	w5, #0x0                   	// #0
  415338:	mov	w21, #0x0                   	// #0
  41533c:	b	4151f4 <wcrtomb@plt+0x124b4>
  415340:	cbnz	w10, 41560c <wcrtomb@plt+0x128cc>
  415344:	mov	w5, #0x0                   	// #0
  415348:	eor	w0, w25, #0x1
  41534c:	ands	w0, w7, w0
  415350:	b.eq	41550c <wcrtomb@plt+0x127cc>  // b.none
  415354:	cmp	x23, x19
  415358:	b.ls	415364 <wcrtomb@plt+0x12624>  // b.plast
  41535c:	mov	w1, #0x27                  	// #39
  415360:	strb	w1, [x28, x19]
  415364:	add	x1, x19, #0x1
  415368:	cmp	x23, x1
  41536c:	b.ls	415378 <wcrtomb@plt+0x12638>  // b.plast
  415370:	mov	w2, #0x24                  	// #36
  415374:	strb	w2, [x28, x1]
  415378:	add	x1, x19, #0x2
  41537c:	cmp	x23, x1
  415380:	b.ls	41538c <wcrtomb@plt+0x1264c>  // b.plast
  415384:	mov	w2, #0x27                  	// #39
  415388:	strb	w2, [x28, x1]
  41538c:	add	x1, x19, #0x3
  415390:	cmp	x23, x1
  415394:	b.ls	4155d8 <wcrtomb@plt+0x12898>  // b.plast
  415398:	mov	w25, w0
  41539c:	mov	w0, #0x5c                  	// #92
  4153a0:	strb	w0, [x28, x1]
  4153a4:	ldr	w0, [sp, #116]
  4153a8:	add	x19, x1, #0x1
  4153ac:	cmp	w0, #0x2
  4153b0:	b.eq	4155e0 <wcrtomb@plt+0x128a0>  // b.none
  4153b4:	add	x0, x20, #0x1
  4153b8:	cmp	x0, x24
  4153bc:	b.cs	4155f4 <wcrtomb@plt+0x128b4>  // b.hs, b.nlast
  4153c0:	ldrb	w2, [x27, x0]
  4153c4:	mov	w22, #0x30                  	// #48
  4153c8:	mov	w0, #0x0                   	// #0
  4153cc:	sub	w2, w2, #0x30
  4153d0:	and	w2, w2, #0xff
  4153d4:	cmp	w2, #0x9
  4153d8:	b.ls	415654 <wcrtomb@plt+0x12914>  // b.plast
  4153dc:	ldr	w1, [sp, #124]
  4153e0:	mov	w21, #0x0                   	// #0
  4153e4:	cbz	w1, 414f78 <wcrtomb@plt+0x12238>
  4153e8:	cbnz	w5, 414f8c <wcrtomb@plt+0x1224c>
  4153ec:	b	41508c <wcrtomb@plt+0x1234c>
  4153f0:	cbnz	w0, 415bd4 <wcrtomb@plt+0x12e94>
  4153f4:	ldr	w0, [sp, #184]
  4153f8:	mov	w5, #0x1                   	// #1
  4153fc:	mov	w7, #0x0                   	// #0
  415400:	mov	w11, #0x0                   	// #0
  415404:	and	w1, w0, w5
  415408:	mov	w25, #0x0                   	// #0
  41540c:	and	w0, w0, #0x4
  415410:	mov	w10, #0x0                   	// #0
  415414:	mov	x12, #0x0                   	// #0
  415418:	mov	x19, #0x0                   	// #0
  41541c:	stp	wzr, w5, [sp, #120]
  415420:	str	wzr, [sp, #144]
  415424:	str	xzr, [sp, #168]
  415428:	str	wzr, [sp, #188]
  41542c:	str	xzr, [sp, #192]
  415430:	stp	wzr, w1, [sp, #208]
  415434:	str	w0, [sp, #216]
  415438:	b	414b30 <wcrtomb@plt+0x11df0>
  41543c:	cmp	w0, #0x5
  415440:	b.ne	4154a4 <wcrtomb@plt+0x12764>  // b.any
  415444:	ldr	w0, [sp, #184]
  415448:	and	w1, w0, #0x1
  41544c:	and	w0, w0, #0x4
  415450:	stp	w1, w0, [sp, #212]
  415454:	cbnz	w20, 41594c <wcrtomb@plt+0x12c0c>
  415458:	cbz	x23, 415868 <wcrtomb@plt+0x12b28>
  41545c:	mov	w11, #0x1                   	// #1
  415460:	mov	w0, #0x22                  	// #34
  415464:	mov	x12, #0x1                   	// #1
  415468:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41546c:	mov	w5, w11
  415470:	add	x1, x1, #0x4d0
  415474:	mov	x19, x12
  415478:	mov	w7, #0x0                   	// #0
  41547c:	mov	w25, #0x0                   	// #0
  415480:	mov	w10, #0x0                   	// #0
  415484:	strb	w0, [x28]
  415488:	stp	w11, wzr, [sp, #120]
  41548c:	str	wzr, [sp, #144]
  415490:	str	x1, [sp, #168]
  415494:	str	wzr, [sp, #188]
  415498:	str	xzr, [sp, #192]
  41549c:	str	wzr, [sp, #208]
  4154a0:	b	414b30 <wcrtomb@plt+0x11df0>
  4154a4:	cmp	w0, #0x6
  4154a8:	b.ne	415bd4 <wcrtomb@plt+0x12e94>  // b.any
  4154ac:	mov	w0, #0x1                   	// #1
  4154b0:	mov	w1, w0
  4154b4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4154b8:	add	x0, x0, #0x4d0
  4154bc:	str	x0, [sp, #168]
  4154c0:	mov	w11, w1
  4154c4:	ldr	w0, [sp, #184]
  4154c8:	mov	w5, w1
  4154cc:	mov	w10, w1
  4154d0:	stp	w1, wzr, [sp, #120]
  4154d4:	str	w1, [sp, #208]
  4154d8:	and	w1, w0, w1
  4154dc:	and	w0, w0, #0x4
  4154e0:	mov	w7, #0x0                   	// #0
  4154e4:	mov	w25, #0x0                   	// #0
  4154e8:	mov	x12, #0x1                   	// #1
  4154ec:	mov	x19, #0x0                   	// #0
  4154f0:	str	wzr, [sp, #144]
  4154f4:	str	wzr, [sp, #188]
  4154f8:	str	xzr, [sp, #192]
  4154fc:	stp	w1, w0, [sp, #212]
  415500:	mov	w0, #0x5                   	// #5
  415504:	str	w0, [sp, #116]
  415508:	b	414b30 <wcrtomb@plt+0x11df0>
  41550c:	mov	x1, x19
  415510:	cmp	x23, x19
  415514:	b.ls	4153a4 <wcrtomb@plt+0x12664>  // b.plast
  415518:	mov	w0, w25
  41551c:	mov	w25, w0
  415520:	mov	w0, #0x5c                  	// #92
  415524:	strb	w0, [x28, x1]
  415528:	b	4153a4 <wcrtomb@plt+0x12664>
  41552c:	mov	w5, #0x0                   	// #0
  415530:	cmp	x24, #0x1
  415534:	cset	w0, ne  // ne = any
  415538:	cmn	x24, #0x1
  41553c:	b.eq	415550 <wcrtomb@plt+0x12810>  // b.none
  415540:	cbnz	w0, 415338 <wcrtomb@plt+0x125f8>
  415544:	cbz	x20, 41521c <wcrtomb@plt+0x124dc>
  415548:	mov	w21, #0x0                   	// #0
  41554c:	b	4151f4 <wcrtomb@plt+0x124b4>
  415550:	ldrb	w0, [x27, #1]
  415554:	cmp	w0, #0x0
  415558:	cset	w0, ne  // ne = any
  41555c:	cbnz	w0, 415338 <wcrtomb@plt+0x125f8>
  415560:	b	415544 <wcrtomb@plt+0x12804>
  415564:	mov	w5, #0x0                   	// #0
  415568:	cbnz	x20, 415548 <wcrtomb@plt+0x12808>
  41556c:	b	41521c <wcrtomb@plt+0x124dc>
  415570:	cbnz	w10, 41522c <wcrtomb@plt+0x124ec>
  415574:	mov	w5, #0x0                   	// #0
  415578:	mov	w0, w25
  41557c:	mov	w21, #0x0                   	// #0
  415580:	mov	w22, #0x3f                  	// #63
  415584:	cbnz	w5, 414f8c <wcrtomb@plt+0x1224c>
  415588:	b	41508c <wcrtomb@plt+0x1234c>
  41558c:	cmp	x0, #0x1
  415590:	b.eq	414ca0 <wcrtomb@plt+0x11f60>  // b.none
  415594:	add	x2, x25, #0x1
  415598:	add	x0, x27, x0
  41559c:	add	x2, x27, x2
  4155a0:	add	x9, x0, x25
  4155a4:	b	4155b4 <wcrtomb@plt+0x12874>
  4155a8:	add	x2, x2, #0x1
  4155ac:	cmp	x9, x2
  4155b0:	b.eq	414ca0 <wcrtomb@plt+0x11f60>  // b.none
  4155b4:	ldrb	w0, [x2]
  4155b8:	sub	w0, w0, #0x5b
  4155bc:	and	w0, w0, #0xff
  4155c0:	cmp	w0, #0x21
  4155c4:	b.hi	4155a8 <wcrtomb@plt+0x12868>  // b.pmore
  4155c8:	lsl	x0, x6, x0
  4155cc:	tst	x0, x13
  4155d0:	b.eq	4155a8 <wcrtomb@plt+0x12868>  // b.none
  4155d4:	b	415224 <wcrtomb@plt+0x124e4>
  4155d8:	add	x19, x19, #0x4
  4155dc:	mov	w25, w0
  4155e0:	mov	w0, #0x0                   	// #0
  4155e4:	mov	w21, #0x0                   	// #0
  4155e8:	mov	w22, #0x30                  	// #48
  4155ec:	cbnz	w5, 414f8c <wcrtomb@plt+0x1224c>
  4155f0:	b	41508c <wcrtomb@plt+0x1234c>
  4155f4:	ldr	w1, [sp, #124]
  4155f8:	mov	w0, #0x0                   	// #0
  4155fc:	mov	w22, #0x30                  	// #48
  415600:	mov	w21, #0x0                   	// #0
  415604:	cbz	w1, 414f78 <wcrtomb@plt+0x12238>
  415608:	b	4153e8 <wcrtomb@plt+0x126a8>
  41560c:	str	w7, [sp, #120]
  415610:	b	41522c <wcrtomb@plt+0x124ec>
  415614:	mov	w5, w11
  415618:	mov	w21, #0x0                   	// #0
  41561c:	b	4151f4 <wcrtomb@plt+0x124b4>
  415620:	mov	w1, w19
  415624:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  415628:	add	x0, x0, #0x4f8
  41562c:	str	w10, [sp, #120]
  415630:	bl	4148d0 <wcrtomb@plt+0x11b90>
  415634:	str	x0, [sp, #200]
  415638:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x102f0>
  41563c:	add	x0, x1, #0x588
  415640:	mov	w1, w19
  415644:	bl	4148d0 <wcrtomb@plt+0x11b90>
  415648:	ldr	w10, [sp, #120]
  41564c:	str	x0, [sp, #256]
  415650:	b	414acc <wcrtomb@plt+0x11d8c>
  415654:	cmp	x23, x19
  415658:	b.ls	415660 <wcrtomb@plt+0x12920>  // b.plast
  41565c:	strb	w22, [x28, x19]
  415660:	add	x0, x1, #0x2
  415664:	cmp	x23, x0
  415668:	b.ls	415674 <wcrtomb@plt+0x12934>  // b.plast
  41566c:	mov	w2, #0x30                  	// #48
  415670:	strb	w2, [x28, x0]
  415674:	add	x19, x1, #0x3
  415678:	mov	w0, #0x0                   	// #0
  41567c:	mov	w22, #0x30                  	// #48
  415680:	b	4153dc <wcrtomb@plt+0x1269c>
  415684:	mov	w5, #0x0                   	// #0
  415688:	ldr	w0, [sp, #116]
  41568c:	cmp	w0, #0x2
  415690:	b.eq	415710 <wcrtomb@plt+0x129d0>  // b.none
  415694:	ldr	w1, [sp, #208]
  415698:	mov	w22, #0x5c                  	// #92
  41569c:	mov	w0, w22
  4156a0:	cbz	w1, 4152b8 <wcrtomb@plt+0x12578>
  4156a4:	add	x20, x20, #0x1
  4156a8:	mov	w0, w25
  4156ac:	mov	w21, #0x0                   	// #0
  4156b0:	b	415090 <wcrtomb@plt+0x12350>
  4156b4:	mov	w5, #0x0                   	// #0
  4156b8:	mov	w0, #0x76                  	// #118
  4156bc:	b	4152b8 <wcrtomb@plt+0x12578>
  4156c0:	mov	w21, w11
  4156c4:	mov	w5, #0x0                   	// #0
  4156c8:	b	41521c <wcrtomb@plt+0x124dc>
  4156cc:	mov	w5, #0x0                   	// #0
  4156d0:	mov	w0, #0x72                  	// #114
  4156d4:	b	4152b0 <wcrtomb@plt+0x12570>
  4156d8:	mov	w5, #0x0                   	// #0
  4156dc:	mov	w0, #0x6e                  	// #110
  4156e0:	b	4152b0 <wcrtomb@plt+0x12570>
  4156e4:	mov	w5, #0x0                   	// #0
  4156e8:	mov	w0, #0x61                  	// #97
  4156ec:	b	4152b8 <wcrtomb@plt+0x12578>
  4156f0:	mov	w5, #0x0                   	// #0
  4156f4:	mov	w22, #0xa                   	// #10
  4156f8:	mov	w0, #0x6e                  	// #110
  4156fc:	b	4152b8 <wcrtomb@plt+0x12578>
  415700:	mov	w5, #0x0                   	// #0
  415704:	mov	w22, #0xd                   	// #13
  415708:	mov	w0, #0x72                  	// #114
  41570c:	b	4152b8 <wcrtomb@plt+0x12578>
  415710:	cbnz	w10, 41522c <wcrtomb@plt+0x124ec>
  415714:	add	x20, x20, #0x1
  415718:	mov	w0, w25
  41571c:	mov	w21, #0x0                   	// #0
  415720:	mov	w22, #0x5c                  	// #92
  415724:	b	415090 <wcrtomb@plt+0x12350>
  415728:	ldr	w0, [sp, #184]
  41572c:	and	w1, w0, #0x1
  415730:	and	w0, w0, #0x4
  415734:	stp	w1, w0, [sp, #212]
  415738:	cbnz	w20, 4157e4 <wcrtomb@plt+0x12aa4>
  41573c:	mov	w0, #0x1                   	// #1
  415740:	str	w0, [sp, #120]
  415744:	cbnz	x23, 415bbc <wcrtomb@plt+0x12e7c>
  415748:	mov	w0, #0x1                   	// #1
  41574c:	mov	w5, w0
  415750:	mov	w7, w0
  415754:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  415758:	add	x0, x0, #0x588
  41575c:	mov	x12, #0x1                   	// #1
  415760:	mov	w11, #0x0                   	// #0
  415764:	mov	x19, x12
  415768:	mov	w25, #0x0                   	// #0
  41576c:	mov	w10, #0x0                   	// #0
  415770:	str	w5, [sp, #124]
  415774:	str	wzr, [sp, #144]
  415778:	str	x0, [sp, #168]
  41577c:	mov	w0, #0x2                   	// #2
  415780:	str	w0, [sp, #116]
  415784:	str	wzr, [sp, #188]
  415788:	str	xzr, [sp, #192]
  41578c:	str	wzr, [sp, #208]
  415790:	b	414b30 <wcrtomb@plt+0x11df0>
  415794:	ldr	w0, [sp, #184]
  415798:	mov	w11, #0x1                   	// #1
  41579c:	mov	w7, #0x0                   	// #0
  4157a0:	mov	w5, w11
  4157a4:	and	w1, w0, w11
  4157a8:	mov	w25, #0x0                   	// #0
  4157ac:	and	w0, w0, #0x4
  4157b0:	mov	w10, #0x0                   	// #0
  4157b4:	mov	x12, #0x0                   	// #0
  4157b8:	mov	x19, #0x0                   	// #0
  4157bc:	stp	w11, wzr, [sp, #120]
  4157c0:	str	wzr, [sp, #144]
  4157c4:	str	xzr, [sp, #168]
  4157c8:	str	wzr, [sp, #188]
  4157cc:	str	xzr, [sp, #192]
  4157d0:	stp	wzr, w1, [sp, #208]
  4157d4:	str	w0, [sp, #216]
  4157d8:	b	414b30 <wcrtomb@plt+0x11df0>
  4157dc:	mov	w5, #0x0                   	// #0
  4157e0:	b	414dbc <wcrtomb@plt+0x1207c>
  4157e4:	mov	w1, #0x1                   	// #1
  4157e8:	mov	w10, w1
  4157ec:	mov	w7, w1
  4157f0:	mov	w5, w1
  4157f4:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  4157f8:	add	x0, x0, #0x588
  4157fc:	str	w1, [sp, #124]
  415800:	str	w1, [sp, #144]
  415804:	str	x0, [sp, #168]
  415808:	mov	w0, #0x2                   	// #2
  41580c:	mov	w11, #0x0                   	// #0
  415810:	mov	w25, #0x0                   	// #0
  415814:	mov	x12, #0x1                   	// #1
  415818:	mov	x19, #0x0                   	// #0
  41581c:	stp	w0, wzr, [sp, #116]
  415820:	str	wzr, [sp, #188]
  415824:	str	xzr, [sp, #192]
  415828:	str	wzr, [sp, #208]
  41582c:	b	414b30 <wcrtomb@plt+0x11df0>
  415830:	ldr	w1, [sp, #184]
  415834:	mov	w10, w0
  415838:	mov	w7, w0
  41583c:	mov	w5, w0
  415840:	str	w0, [sp, #124]
  415844:	and	w2, w1, #0x1
  415848:	str	w0, [sp, #144]
  41584c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  415850:	add	x0, x0, #0x588
  415854:	str	x0, [sp, #168]
  415858:	and	w0, w1, #0x4
  41585c:	str	w2, [sp, #212]
  415860:	str	w0, [sp, #216]
  415864:	b	415808 <wcrtomb@plt+0x12ac8>
  415868:	mov	w11, #0x1                   	// #1
  41586c:	mov	x12, #0x1                   	// #1
  415870:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  415874:	mov	w5, w11
  415878:	add	x0, x0, #0x4d0
  41587c:	mov	x19, x12
  415880:	mov	w7, #0x0                   	// #0
  415884:	mov	w25, #0x0                   	// #0
  415888:	mov	w10, #0x0                   	// #0
  41588c:	stp	w11, wzr, [sp, #120]
  415890:	str	wzr, [sp, #144]
  415894:	str	x0, [sp, #168]
  415898:	str	wzr, [sp, #188]
  41589c:	str	xzr, [sp, #192]
  4158a0:	str	wzr, [sp, #208]
  4158a4:	b	414b30 <wcrtomb@plt+0x11df0>
  4158a8:	ldr	w0, [sp, #184]
  4158ac:	and	w1, w0, #0x1
  4158b0:	and	w0, w0, #0x4
  4158b4:	stp	w1, w0, [sp, #212]
  4158b8:	cbnz	w20, 415b78 <wcrtomb@plt+0x12e38>
  4158bc:	str	wzr, [sp, #120]
  4158c0:	b	415744 <wcrtomb@plt+0x12a04>
  4158c4:	ldrb	w2, [x27, x6]
  4158c8:	cmp	w2, #0x3e
  4158cc:	b.hi	415338 <wcrtomb@plt+0x125f8>  // b.pmore
  4158d0:	mov	x1, #0x1                   	// #1
  4158d4:	mov	x0, #0xa38200000000        	// #179778741075968
  4158d8:	movk	x0, #0x7000, lsl #48
  4158dc:	lsl	x1, x1, x2
  4158e0:	mov	w21, #0x0                   	// #0
  4158e4:	tst	x1, x0
  4158e8:	b.eq	4151f4 <wcrtomb@plt+0x124b4>  // b.none
  4158ec:	cbnz	w10, 4150f4 <wcrtomb@plt+0x123b4>
  4158f0:	cmp	x23, x19
  4158f4:	b.ls	4158fc <wcrtomb@plt+0x12bbc>  // b.plast
  4158f8:	strb	w22, [x28, x19]
  4158fc:	add	x0, x19, #0x1
  415900:	cmp	x23, x0
  415904:	b.ls	415910 <wcrtomb@plt+0x12bd0>  // b.plast
  415908:	mov	w1, #0x22                  	// #34
  41590c:	strb	w1, [x28, x0]
  415910:	add	x0, x19, #0x2
  415914:	cmp	x23, x0
  415918:	b.ls	415924 <wcrtomb@plt+0x12be4>  // b.plast
  41591c:	mov	w1, #0x22                  	// #34
  415920:	strb	w1, [x28, x0]
  415924:	add	x0, x19, #0x3
  415928:	cmp	x23, x0
  41592c:	b.ls	415938 <wcrtomb@plt+0x12bf8>  // b.plast
  415930:	mov	w1, #0x3f                  	// #63
  415934:	strb	w1, [x28, x0]
  415938:	add	x19, x19, #0x4
  41593c:	mov	w22, w2
  415940:	mov	x20, x6
  415944:	mov	w0, w25
  415948:	b	4153dc <wcrtomb@plt+0x1269c>
  41594c:	mov	w0, #0x1                   	// #1
  415950:	mov	w1, w0
  415954:	mov	w11, w1
  415958:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41595c:	mov	w5, w1
  415960:	add	x0, x0, #0x4d0
  415964:	mov	w10, w1
  415968:	mov	w7, #0x0                   	// #0
  41596c:	mov	w25, #0x0                   	// #0
  415970:	mov	x12, #0x1                   	// #1
  415974:	mov	x19, #0x0                   	// #0
  415978:	stp	w1, wzr, [sp, #120]
  41597c:	str	wzr, [sp, #144]
  415980:	str	x0, [sp, #168]
  415984:	str	wzr, [sp, #188]
  415988:	str	xzr, [sp, #192]
  41598c:	str	w1, [sp, #208]
  415990:	b	414b30 <wcrtomb@plt+0x11df0>
  415994:	mov	w5, w11
  415998:	cbnz	x20, 415548 <wcrtomb@plt+0x12808>
  41599c:	b	41521c <wcrtomb@plt+0x124dc>
  4159a0:	mov	w5, w11
  4159a4:	b	415530 <wcrtomb@plt+0x127f0>
  4159a8:	mov	w5, w11
  4159ac:	b	415704 <wcrtomb@plt+0x129c4>
  4159b0:	mov	w5, w11
  4159b4:	mov	w0, #0x76                  	// #118
  4159b8:	b	4152b8 <wcrtomb@plt+0x12578>
  4159bc:	mov	w5, w11
  4159c0:	b	415688 <wcrtomb@plt+0x12948>
  4159c4:	ldr	w0, [sp, #116]
  4159c8:	mov	w5, w11
  4159cc:	cmp	w0, #0x2
  4159d0:	b.ne	415254 <wcrtomb@plt+0x12514>  // b.any
  4159d4:	b	415578 <wcrtomb@plt+0x12838>
  4159d8:	mov	w5, w11
  4159dc:	mov	w21, w11
  4159e0:	b	41521c <wcrtomb@plt+0x124dc>
  4159e4:	mov	w5, w11
  4159e8:	b	4156f4 <wcrtomb@plt+0x129b4>
  4159ec:	mov	w5, w11
  4159f0:	mov	w0, #0x74                  	// #116
  4159f4:	b	4152b0 <wcrtomb@plt+0x12570>
  4159f8:	mov	w5, w11
  4159fc:	b	415348 <wcrtomb@plt+0x12608>
  415a00:	ldr	w0, [sp, #116]
  415a04:	mov	w5, w11
  415a08:	cmp	w0, #0x2
  415a0c:	b.ne	41529c <wcrtomb@plt+0x1255c>  // b.any
  415a10:	b	415018 <wcrtomb@plt+0x122d8>
  415a14:	ldr	x0, [sp, #200]
  415a18:	ldrb	w0, [x0]
  415a1c:	cbz	w0, 414ad4 <wcrtomb@plt+0x11d94>
  415a20:	cmp	x23, x19
  415a24:	b.ls	415a44 <wcrtomb@plt+0x12d04>  // b.plast
  415a28:	strb	w0, [x28, x19]
  415a2c:	add	x19, x19, #0x1
  415a30:	ldr	x0, [sp, #200]
  415a34:	ldrb	w0, [x0, x19]
  415a38:	cbz	w0, 414ad4 <wcrtomb@plt+0x11d94>
  415a3c:	cmp	x23, x19
  415a40:	b.hi	415a28 <wcrtomb@plt+0x12ce8>  // b.pmore
  415a44:	ldr	x0, [sp, #200]
  415a48:	add	x19, x19, #0x1
  415a4c:	ldrb	w0, [x0, x19]
  415a50:	cbnz	w0, 415a20 <wcrtomb@plt+0x12ce0>
  415a54:	b	414ad4 <wcrtomb@plt+0x11d94>
  415a58:	mov	x8, x21
  415a5c:	ldr	w1, [sp, #120]
  415a60:	ldr	w10, [sp, #136]
  415a64:	mov	w21, #0x0                   	// #0
  415a68:	ldp	w25, w5, [sp, #148]
  415a6c:	ldp	w7, w11, [sp, #156]
  415a70:	ldr	w22, [sp, #220]
  415a74:	ldr	x12, [sp, #128]
  415a78:	ldp	x19, x4, [sp, #224]
  415a7c:	b	414cf0 <wcrtomb@plt+0x11fb0>
  415a80:	ldr	w5, [sp, #124]
  415a84:	mov	w0, w25
  415a88:	mov	w21, w5
  415a8c:	b	41520c <wcrtomb@plt+0x124cc>
  415a90:	mov	x9, x25
  415a94:	cmp	x25, x24
  415a98:	ldr	w10, [sp, #136]
  415a9c:	mov	x8, x21
  415aa0:	ldp	w25, w5, [sp, #148]
  415aa4:	ldp	w7, w11, [sp, #156]
  415aa8:	ldr	w22, [sp, #220]
  415aac:	ldr	x12, [sp, #128]
  415ab0:	ldp	x19, x4, [sp, #224]
  415ab4:	b.cc	415acc <wcrtomb@plt+0x12d8c>  // b.lo, b.ul, b.last
  415ab8:	b	415ad4 <wcrtomb@plt+0x12d94>
  415abc:	add	x8, x8, #0x1
  415ac0:	add	x9, x20, x8
  415ac4:	cmp	x24, x9
  415ac8:	b.ls	415ad4 <wcrtomb@plt+0x12d94>  // b.plast
  415acc:	ldrb	w0, [x27, x9]
  415ad0:	cbnz	w0, 415abc <wcrtomb@plt+0x12d7c>
  415ad4:	ldr	w1, [sp, #120]
  415ad8:	mov	w21, #0x0                   	// #0
  415adc:	b	414cf0 <wcrtomb@plt+0x11fb0>
  415ae0:	mov	w7, w10
  415ae4:	ldr	x0, [sp, #168]
  415ae8:	cmp	x0, #0x0
  415aec:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  415af0:	b.eq	415b18 <wcrtomb@plt+0x12dd8>  // b.none
  415af4:	ldrb	w1, [x0]
  415af8:	cbz	w1, 415b18 <wcrtomb@plt+0x12dd8>
  415afc:	sub	x0, x0, x19
  415b00:	cmp	x23, x19
  415b04:	b.ls	415b28 <wcrtomb@plt+0x12de8>  // b.plast
  415b08:	strb	w1, [x28, x19]
  415b0c:	add	x19, x19, #0x1
  415b10:	ldrb	w1, [x0, x19]
  415b14:	cbnz	w1, 415b00 <wcrtomb@plt+0x12dc0>
  415b18:	cmp	x23, x19
  415b1c:	b.ls	415128 <wcrtomb@plt+0x123e8>  // b.plast
  415b20:	strb	wzr, [x28, x19]
  415b24:	b	415128 <wcrtomb@plt+0x123e8>
  415b28:	add	x19, x19, #0x1
  415b2c:	ldrb	w1, [x0, x19]
  415b30:	cbnz	w1, 415b00 <wcrtomb@plt+0x12dc0>
  415b34:	b	415b18 <wcrtomb@plt+0x12dd8>
  415b38:	ldr	w7, [sp, #188]
  415b3c:	b	415ae4 <wcrtomb@plt+0x12da4>
  415b40:	ldp	x1, x7, [sp, #192]
  415b44:	mov	x6, x4
  415b48:	ldr	w5, [sp, #184]
  415b4c:	mov	x3, x24
  415b50:	ldr	x0, [sp, #256]
  415b54:	str	x0, [sp]
  415b58:	mov	x2, x27
  415b5c:	mov	x0, x28
  415b60:	mov	w4, #0x5                   	// #5
  415b64:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415b68:	mov	x19, x0
  415b6c:	b	415128 <wcrtomb@plt+0x123e8>
  415b70:	ldr	x23, [sp, #192]
  415b74:	b	41506c <wcrtomb@plt+0x1232c>
  415b78:	mov	w1, #0x1                   	// #1
  415b7c:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x102f0>
  415b80:	mov	w10, w1
  415b84:	add	x0, x0, #0x588
  415b88:	mov	w7, w1
  415b8c:	mov	w5, w1
  415b90:	mov	w11, #0x0                   	// #0
  415b94:	mov	w25, #0x0                   	// #0
  415b98:	mov	x12, #0x1                   	// #1
  415b9c:	mov	x19, #0x0                   	// #0
  415ba0:	stp	wzr, w1, [sp, #120]
  415ba4:	str	w1, [sp, #144]
  415ba8:	str	x0, [sp, #168]
  415bac:	str	wzr, [sp, #188]
  415bb0:	str	xzr, [sp, #192]
  415bb4:	str	wzr, [sp, #208]
  415bb8:	b	414b30 <wcrtomb@plt+0x11df0>
  415bbc:	mov	w25, #0x0                   	// #0
  415bc0:	mov	w0, #0x0                   	// #0
  415bc4:	mov	w5, #0x1                   	// #1
  415bc8:	mov	x1, #0x0                   	// #0
  415bcc:	str	x23, [sp, #192]
  415bd0:	b	414efc <wcrtomb@plt+0x121bc>
  415bd4:	bl	4029e0 <abort@plt>
  415bd8:	sub	sp, sp, #0x80
  415bdc:	stp	x29, x30, [sp, #16]
  415be0:	add	x29, sp, #0x10
  415be4:	stp	x19, x20, [sp, #32]
  415be8:	mov	w19, w0
  415bec:	mov	x20, x3
  415bf0:	stp	x21, x22, [sp, #48]
  415bf4:	stp	x23, x24, [sp, #64]
  415bf8:	mov	x23, x1
  415bfc:	mov	x24, x2
  415c00:	stp	x25, x26, [sp, #80]
  415c04:	stp	x27, x28, [sp, #96]
  415c08:	bl	402cb0 <__errno_location@plt>
  415c0c:	mov	x22, x0
  415c10:	ldr	w0, [x0]
  415c14:	adrp	x27, 441000 <_obstack_memory_used@@Base+0x282f0>
  415c18:	str	w0, [sp, #116]
  415c1c:	ldr	x21, [x27, #1168]
  415c20:	tbnz	w19, #31, 415d78 <wcrtomb@plt+0x13038>
  415c24:	add	x26, x27, #0x490
  415c28:	ldr	w0, [x26, #8]
  415c2c:	cmp	w0, w19
  415c30:	b.gt	415c80 <wcrtomb@plt+0x12f40>
  415c34:	mov	w0, #0x7fffffff            	// #2147483647
  415c38:	cmp	w19, w0
  415c3c:	b.eq	415d74 <wcrtomb@plt+0x13034>  // b.none
  415c40:	add	w28, w19, #0x1
  415c44:	add	x0, x26, #0x10
  415c48:	cmp	x21, x0
  415c4c:	sbfiz	x1, x28, #4, #32
  415c50:	b.eq	415d58 <wcrtomb@plt+0x13018>  // b.none
  415c54:	mov	x0, x21
  415c58:	bl	418660 <wcrtomb@plt+0x15920>
  415c5c:	mov	x21, x0
  415c60:	str	x0, [x27, #1168]
  415c64:	ldr	w0, [x26, #8]
  415c68:	mov	w1, #0x0                   	// #0
  415c6c:	sub	w2, w28, w0
  415c70:	add	x0, x21, w0, sxtw #4
  415c74:	sbfiz	x2, x2, #4, #32
  415c78:	bl	4028d0 <memset@plt>
  415c7c:	str	w28, [x26, #8]
  415c80:	sbfiz	x19, x19, #4, #32
  415c84:	add	x26, x20, #0x8
  415c88:	add	x0, x21, x19
  415c8c:	str	x0, [sp, #120]
  415c90:	ldp	w4, w5, [x20]
  415c94:	mov	x6, x26
  415c98:	ldr	x7, [x20, #40]
  415c9c:	orr	w25, w5, #0x1
  415ca0:	ldr	x27, [x21, x19]
  415ca4:	mov	x3, x24
  415ca8:	ldr	x28, [x0, #8]
  415cac:	mov	x1, x27
  415cb0:	ldr	x0, [x20, #48]
  415cb4:	str	x0, [sp]
  415cb8:	mov	x2, x23
  415cbc:	mov	w5, w25
  415cc0:	mov	x0, x28
  415cc4:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415cc8:	cmp	x27, x0
  415ccc:	b.hi	415d2c <wcrtomb@plt+0x12fec>  // b.pmore
  415cd0:	add	x27, x0, #0x1
  415cd4:	str	x27, [x21, x19]
  415cd8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  415cdc:	add	x0, x0, #0x7b0
  415ce0:	cmp	x28, x0
  415ce4:	b.eq	415cf0 <wcrtomb@plt+0x12fb0>  // b.none
  415ce8:	mov	x0, x28
  415cec:	bl	402ae0 <free@plt>
  415cf0:	mov	x0, x27
  415cf4:	bl	418630 <wcrtomb@plt+0x158f0>
  415cf8:	ldr	x1, [sp, #120]
  415cfc:	mov	x28, x0
  415d00:	ldr	w4, [x20]
  415d04:	mov	x6, x26
  415d08:	ldr	x7, [x20, #40]
  415d0c:	str	x0, [x1, #8]
  415d10:	ldr	x1, [x20, #48]
  415d14:	str	x1, [sp]
  415d18:	mov	w5, w25
  415d1c:	mov	x3, x24
  415d20:	mov	x2, x23
  415d24:	mov	x1, x27
  415d28:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415d2c:	ldr	w0, [sp, #116]
  415d30:	ldp	x29, x30, [sp, #16]
  415d34:	ldp	x19, x20, [sp, #32]
  415d38:	ldp	x23, x24, [sp, #64]
  415d3c:	ldp	x25, x26, [sp, #80]
  415d40:	str	w0, [x22]
  415d44:	mov	x0, x28
  415d48:	ldp	x21, x22, [sp, #48]
  415d4c:	ldp	x27, x28, [sp, #96]
  415d50:	add	sp, sp, #0x80
  415d54:	ret
  415d58:	mov	x0, #0x0                   	// #0
  415d5c:	bl	418660 <wcrtomb@plt+0x15920>
  415d60:	mov	x21, x0
  415d64:	str	x0, [x27, #1168]
  415d68:	ldp	x0, x1, [x26, #16]
  415d6c:	stp	x0, x1, [x21]
  415d70:	b	415c64 <wcrtomb@plt+0x12f24>
  415d74:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  415d78:	bl	4029e0 <abort@plt>
  415d7c:	nop
  415d80:	stp	x29, x30, [sp, #-48]!
  415d84:	mov	x29, sp
  415d88:	stp	x19, x20, [sp, #16]
  415d8c:	mov	x20, x0
  415d90:	str	x21, [sp, #32]
  415d94:	bl	402cb0 <__errno_location@plt>
  415d98:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  415d9c:	mov	x19, x0
  415da0:	add	x2, x2, #0x7b0
  415da4:	cmp	x20, #0x0
  415da8:	add	x2, x2, #0x100
  415dac:	mov	x1, #0x38                  	// #56
  415db0:	ldr	w21, [x19]
  415db4:	csel	x0, x2, x20, eq  // eq = none
  415db8:	bl	418768 <wcrtomb@plt+0x15a28>
  415dbc:	str	w21, [x19]
  415dc0:	ldp	x19, x20, [sp, #16]
  415dc4:	ldr	x21, [sp, #32]
  415dc8:	ldp	x29, x30, [sp], #48
  415dcc:	ret
  415dd0:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  415dd4:	add	x1, x1, #0x7b0
  415dd8:	cmp	x0, #0x0
  415ddc:	add	x1, x1, #0x100
  415de0:	csel	x0, x1, x0, eq  // eq = none
  415de4:	ldr	w0, [x0]
  415de8:	ret
  415dec:	nop
  415df0:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  415df4:	add	x2, x2, #0x7b0
  415df8:	cmp	x0, #0x0
  415dfc:	add	x2, x2, #0x100
  415e00:	csel	x0, x2, x0, eq  // eq = none
  415e04:	str	w1, [x0]
  415e08:	ret
  415e0c:	nop
  415e10:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  415e14:	add	x3, x3, #0x7b0
  415e18:	cmp	x0, #0x0
  415e1c:	add	x3, x3, #0x100
  415e20:	csel	x0, x3, x0, eq  // eq = none
  415e24:	ubfx	x4, x1, #5, #3
  415e28:	add	x3, x0, #0x8
  415e2c:	and	w1, w1, #0x1f
  415e30:	ldr	w5, [x3, x4, lsl #2]
  415e34:	lsr	w0, w5, w1
  415e38:	eor	w2, w0, w2
  415e3c:	and	w2, w2, #0x1
  415e40:	and	w0, w0, #0x1
  415e44:	lsl	w2, w2, w1
  415e48:	eor	w2, w2, w5
  415e4c:	str	w2, [x3, x4, lsl #2]
  415e50:	ret
  415e54:	nop
  415e58:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  415e5c:	add	x3, x3, #0x7b0
  415e60:	cmp	x0, #0x0
  415e64:	add	x3, x3, #0x100
  415e68:	csel	x2, x3, x0, eq  // eq = none
  415e6c:	ldr	w0, [x2, #4]
  415e70:	str	w1, [x2, #4]
  415e74:	ret
  415e78:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  415e7c:	add	x3, x3, #0x7b0
  415e80:	cmp	x0, #0x0
  415e84:	add	x3, x3, #0x100
  415e88:	csel	x0, x3, x0, eq  // eq = none
  415e8c:	mov	w3, #0xa                   	// #10
  415e90:	cmp	x1, #0x0
  415e94:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  415e98:	str	w3, [x0]
  415e9c:	b.eq	415ea8 <wcrtomb@plt+0x13168>  // b.none
  415ea0:	stp	x1, x2, [x0, #40]
  415ea4:	ret
  415ea8:	stp	x29, x30, [sp, #-16]!
  415eac:	mov	x29, sp
  415eb0:	bl	4029e0 <abort@plt>
  415eb4:	nop
  415eb8:	sub	sp, sp, #0x50
  415ebc:	adrp	x5, 441000 <_obstack_memory_used@@Base+0x282f0>
  415ec0:	stp	x29, x30, [sp, #16]
  415ec4:	add	x29, sp, #0x10
  415ec8:	stp	x19, x20, [sp, #32]
  415ecc:	mov	x19, x4
  415ed0:	add	x4, x5, #0x7b0
  415ed4:	cmp	x19, #0x0
  415ed8:	add	x4, x4, #0x100
  415edc:	csel	x19, x4, x19, eq  // eq = none
  415ee0:	mov	x20, x3
  415ee4:	stp	x21, x22, [sp, #48]
  415ee8:	mov	x21, x0
  415eec:	mov	x22, x1
  415ef0:	str	x23, [sp, #64]
  415ef4:	mov	x23, x2
  415ef8:	bl	402cb0 <__errno_location@plt>
  415efc:	ldp	x7, x8, [x19, #40]
  415f00:	mov	x3, x20
  415f04:	mov	x20, x0
  415f08:	mov	x0, x21
  415f0c:	ldp	w4, w5, [x19]
  415f10:	mov	x2, x23
  415f14:	ldr	w21, [x20]
  415f18:	mov	x1, x22
  415f1c:	str	x8, [sp]
  415f20:	add	x6, x19, #0x8
  415f24:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415f28:	ldp	x29, x30, [sp, #16]
  415f2c:	ldr	x23, [sp, #64]
  415f30:	str	w21, [x20]
  415f34:	ldp	x19, x20, [sp, #32]
  415f38:	ldp	x21, x22, [sp, #48]
  415f3c:	add	sp, sp, #0x50
  415f40:	ret
  415f44:	nop
  415f48:	sub	sp, sp, #0x60
  415f4c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  415f50:	add	x4, x4, #0x7b0
  415f54:	cmp	x2, #0x0
  415f58:	add	x4, x4, #0x100
  415f5c:	stp	x29, x30, [sp, #16]
  415f60:	add	x29, sp, #0x10
  415f64:	stp	x19, x20, [sp, #32]
  415f68:	csel	x19, x4, x2, eq  // eq = none
  415f6c:	stp	x21, x22, [sp, #48]
  415f70:	mov	x22, x0
  415f74:	stp	x23, x24, [sp, #64]
  415f78:	mov	x23, x1
  415f7c:	stp	x25, x26, [sp, #80]
  415f80:	bl	402cb0 <__errno_location@plt>
  415f84:	ldr	w26, [x0]
  415f88:	ldp	w4, w24, [x19]
  415f8c:	mov	x20, x0
  415f90:	ldp	x7, x0, [x19, #40]
  415f94:	add	x25, x19, #0x8
  415f98:	orr	w24, w24, #0x1
  415f9c:	mov	x6, x25
  415fa0:	mov	x3, x23
  415fa4:	mov	x2, x22
  415fa8:	mov	w5, w24
  415fac:	str	x0, [sp]
  415fb0:	mov	x1, #0x0                   	// #0
  415fb4:	mov	x0, #0x0                   	// #0
  415fb8:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415fbc:	add	x21, x0, #0x1
  415fc0:	mov	x0, x21
  415fc4:	bl	418630 <wcrtomb@plt+0x158f0>
  415fc8:	ldp	x7, x1, [x19, #40]
  415fcc:	mov	w5, w24
  415fd0:	ldr	w4, [x19]
  415fd4:	mov	x6, x25
  415fd8:	str	x1, [sp]
  415fdc:	mov	x3, x23
  415fe0:	mov	x2, x22
  415fe4:	mov	x19, x0
  415fe8:	mov	x1, x21
  415fec:	bl	414a38 <wcrtomb@plt+0x11cf8>
  415ff0:	mov	x0, x19
  415ff4:	ldp	x29, x30, [sp, #16]
  415ff8:	ldp	x21, x22, [sp, #48]
  415ffc:	ldp	x23, x24, [sp, #64]
  416000:	str	w26, [x20]
  416004:	ldp	x19, x20, [sp, #32]
  416008:	ldp	x25, x26, [sp, #80]
  41600c:	add	sp, sp, #0x60
  416010:	ret
  416014:	nop
  416018:	sub	sp, sp, #0x70
  41601c:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  416020:	add	x4, x4, #0x7b0
  416024:	cmp	x3, #0x0
  416028:	add	x4, x4, #0x100
  41602c:	stp	x29, x30, [sp, #16]
  416030:	add	x29, sp, #0x10
  416034:	stp	x19, x20, [sp, #32]
  416038:	csel	x19, x4, x3, eq  // eq = none
  41603c:	mov	x20, x2
  416040:	stp	x21, x22, [sp, #48]
  416044:	mov	x22, x0
  416048:	stp	x23, x24, [sp, #64]
  41604c:	mov	x23, x1
  416050:	stp	x25, x26, [sp, #80]
  416054:	stp	x27, x28, [sp, #96]
  416058:	bl	402cb0 <__errno_location@plt>
  41605c:	ldr	w28, [x0]
  416060:	ldp	w4, w5, [x19]
  416064:	mov	x21, x0
  416068:	ldp	x7, x0, [x19, #40]
  41606c:	cmp	x20, #0x0
  416070:	cset	w24, eq  // eq = none
  416074:	add	x27, x19, #0x8
  416078:	orr	w24, w24, w5
  41607c:	mov	x6, x27
  416080:	mov	x3, x23
  416084:	mov	x2, x22
  416088:	mov	w5, w24
  41608c:	str	x0, [sp]
  416090:	mov	x1, #0x0                   	// #0
  416094:	mov	x0, #0x0                   	// #0
  416098:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41609c:	add	x26, x0, #0x1
  4160a0:	mov	x25, x0
  4160a4:	mov	x0, x26
  4160a8:	bl	418630 <wcrtomb@plt+0x158f0>
  4160ac:	ldp	x7, x1, [x19, #40]
  4160b0:	mov	w5, w24
  4160b4:	ldr	w4, [x19]
  4160b8:	mov	x6, x27
  4160bc:	str	x1, [sp]
  4160c0:	mov	x3, x23
  4160c4:	mov	x2, x22
  4160c8:	mov	x19, x0
  4160cc:	mov	x1, x26
  4160d0:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4160d4:	str	w28, [x21]
  4160d8:	cbz	x20, 4160e0 <wcrtomb@plt+0x133a0>
  4160dc:	str	x25, [x20]
  4160e0:	mov	x0, x19
  4160e4:	ldp	x29, x30, [sp, #16]
  4160e8:	ldp	x19, x20, [sp, #32]
  4160ec:	ldp	x21, x22, [sp, #48]
  4160f0:	ldp	x23, x24, [sp, #64]
  4160f4:	ldp	x25, x26, [sp, #80]
  4160f8:	ldp	x27, x28, [sp, #96]
  4160fc:	add	sp, sp, #0x70
  416100:	ret
  416104:	nop
  416108:	stp	x29, x30, [sp, #-64]!
  41610c:	mov	x29, sp
  416110:	stp	x21, x22, [sp, #32]
  416114:	str	x23, [sp, #48]
  416118:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  41611c:	add	x22, x23, #0x490
  416120:	stp	x19, x20, [sp, #16]
  416124:	ldr	x21, [x23, #1168]
  416128:	ldr	w20, [x22, #8]
  41612c:	cmp	w20, #0x1
  416130:	b.le	416158 <wcrtomb@plt+0x13418>
  416134:	sub	w0, w20, #0x2
  416138:	add	x20, x21, #0x28
  41613c:	add	x19, x21, #0x18
  416140:	add	x20, x20, w0, uxtw #4
  416144:	nop
  416148:	ldr	x0, [x19], #16
  41614c:	bl	402ae0 <free@plt>
  416150:	cmp	x19, x20
  416154:	b.ne	416148 <wcrtomb@plt+0x13408>  // b.any
  416158:	ldr	x0, [x21, #8]
  41615c:	adrp	x19, 441000 <_obstack_memory_used@@Base+0x282f0>
  416160:	add	x19, x19, #0x7b0
  416164:	cmp	x0, x19
  416168:	b.eq	416178 <wcrtomb@plt+0x13438>  // b.none
  41616c:	bl	402ae0 <free@plt>
  416170:	mov	x0, #0x100                 	// #256
  416174:	stp	x0, x19, [x22, #16]
  416178:	add	x19, x22, #0x10
  41617c:	cmp	x21, x19
  416180:	b.eq	416190 <wcrtomb@plt+0x13450>  // b.none
  416184:	mov	x0, x21
  416188:	bl	402ae0 <free@plt>
  41618c:	str	x19, [x23, #1168]
  416190:	mov	w0, #0x1                   	// #1
  416194:	str	w0, [x22, #8]
  416198:	ldp	x19, x20, [sp, #16]
  41619c:	ldp	x21, x22, [sp, #32]
  4161a0:	ldr	x23, [sp, #48]
  4161a4:	ldp	x29, x30, [sp], #64
  4161a8:	ret
  4161ac:	nop
  4161b0:	sub	sp, sp, #0x70
  4161b4:	stp	x29, x30, [sp, #16]
  4161b8:	add	x29, sp, #0x10
  4161bc:	stp	x21, x22, [sp, #48]
  4161c0:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4161c4:	stp	x19, x20, [sp, #32]
  4161c8:	mov	w19, w0
  4161cc:	stp	x23, x24, [sp, #64]
  4161d0:	mov	x24, x1
  4161d4:	stp	x25, x26, [sp, #80]
  4161d8:	stp	x27, x28, [sp, #96]
  4161dc:	bl	402cb0 <__errno_location@plt>
  4161e0:	ldr	w25, [x0]
  4161e4:	ldr	x20, [x22, #1168]
  4161e8:	tbnz	w19, #31, 416330 <wcrtomb@plt+0x135f0>
  4161ec:	add	x21, x22, #0x490
  4161f0:	mov	x23, x0
  4161f4:	ldr	w0, [x21, #8]
  4161f8:	cmp	w19, w0
  4161fc:	b.lt	41624c <wcrtomb@plt+0x1350c>  // b.tstop
  416200:	mov	w0, #0x7fffffff            	// #2147483647
  416204:	cmp	w19, w0
  416208:	b.eq	41632c <wcrtomb@plt+0x135ec>  // b.none
  41620c:	add	w26, w19, #0x1
  416210:	add	x0, x21, #0x10
  416214:	cmp	x20, x0
  416218:	sbfiz	x1, x26, #4, #32
  41621c:	b.eq	416310 <wcrtomb@plt+0x135d0>  // b.none
  416220:	mov	x0, x20
  416224:	bl	418660 <wcrtomb@plt+0x15920>
  416228:	mov	x20, x0
  41622c:	str	x0, [x22, #1168]
  416230:	ldr	w0, [x21, #8]
  416234:	mov	w1, #0x0                   	// #0
  416238:	sub	w2, w26, w0
  41623c:	add	x0, x20, w0, sxtw #4
  416240:	sbfiz	x2, x2, #4, #32
  416244:	bl	4028d0 <memset@plt>
  416248:	str	w26, [x21, #8]
  41624c:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  416250:	add	x21, x21, #0x7b0
  416254:	sbfiz	x19, x19, #4, #32
  416258:	add	x6, x21, #0x108
  41625c:	add	x26, x20, x19
  416260:	mov	x2, x24
  416264:	ldp	x7, x0, [x21, #296]
  416268:	mov	x3, #0xffffffffffffffff    	// #-1
  41626c:	ldr	w4, [x21, #256]
  416270:	ldr	w28, [x21, #260]
  416274:	ldr	x22, [x20, x19]
  416278:	orr	w28, w28, #0x1
  41627c:	ldr	x27, [x26, #8]
  416280:	str	x0, [sp]
  416284:	mov	x1, x22
  416288:	mov	w5, w28
  41628c:	mov	x0, x27
  416290:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416294:	cmp	x22, x0
  416298:	b.hi	4162e8 <wcrtomb@plt+0x135a8>  // b.pmore
  41629c:	add	x22, x0, #0x1
  4162a0:	str	x22, [x20, x19]
  4162a4:	cmp	x27, x21
  4162a8:	b.eq	4162b4 <wcrtomb@plt+0x13574>  // b.none
  4162ac:	mov	x0, x27
  4162b0:	bl	402ae0 <free@plt>
  4162b4:	mov	x0, x22
  4162b8:	bl	418630 <wcrtomb@plt+0x158f0>
  4162bc:	ldp	x7, x1, [x21, #296]
  4162c0:	str	x0, [x26, #8]
  4162c4:	ldr	w4, [x21, #256]
  4162c8:	mov	x27, x0
  4162cc:	str	x1, [sp]
  4162d0:	mov	w5, w28
  4162d4:	mov	x2, x24
  4162d8:	add	x6, x21, #0x108
  4162dc:	mov	x1, x22
  4162e0:	mov	x3, #0xffffffffffffffff    	// #-1
  4162e4:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4162e8:	mov	x0, x27
  4162ec:	ldp	x29, x30, [sp, #16]
  4162f0:	ldp	x19, x20, [sp, #32]
  4162f4:	ldp	x21, x22, [sp, #48]
  4162f8:	ldp	x27, x28, [sp, #96]
  4162fc:	str	w25, [x23]
  416300:	ldp	x23, x24, [sp, #64]
  416304:	ldp	x25, x26, [sp, #80]
  416308:	add	sp, sp, #0x70
  41630c:	ret
  416310:	mov	x0, #0x0                   	// #0
  416314:	bl	418660 <wcrtomb@plt+0x15920>
  416318:	mov	x20, x0
  41631c:	str	x0, [x22, #1168]
  416320:	ldp	x0, x1, [x21, #16]
  416324:	stp	x0, x1, [x20]
  416328:	b	416230 <wcrtomb@plt+0x134f0>
  41632c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  416330:	bl	4029e0 <abort@plt>
  416334:	nop
  416338:	sub	sp, sp, #0x80
  41633c:	stp	x29, x30, [sp, #16]
  416340:	add	x29, sp, #0x10
  416344:	stp	x19, x20, [sp, #32]
  416348:	mov	w19, w0
  41634c:	stp	x21, x22, [sp, #48]
  416350:	stp	x23, x24, [sp, #64]
  416354:	mov	x23, x1
  416358:	mov	x24, x2
  41635c:	stp	x25, x26, [sp, #80]
  416360:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  416364:	stp	x27, x28, [sp, #96]
  416368:	bl	402cb0 <__errno_location@plt>
  41636c:	mov	x22, x0
  416370:	ldr	w0, [x0]
  416374:	str	w0, [sp, #124]
  416378:	ldr	x20, [x26, #1168]
  41637c:	tbnz	w19, #31, 4164c4 <wcrtomb@plt+0x13784>
  416380:	add	x21, x26, #0x490
  416384:	ldr	w0, [x21, #8]
  416388:	cmp	w19, w0
  41638c:	b.lt	4163dc <wcrtomb@plt+0x1369c>  // b.tstop
  416390:	mov	w0, #0x7fffffff            	// #2147483647
  416394:	cmp	w19, w0
  416398:	b.eq	4164c0 <wcrtomb@plt+0x13780>  // b.none
  41639c:	add	w27, w19, #0x1
  4163a0:	add	x0, x21, #0x10
  4163a4:	cmp	x20, x0
  4163a8:	sbfiz	x1, x27, #4, #32
  4163ac:	b.eq	4164a4 <wcrtomb@plt+0x13764>  // b.none
  4163b0:	mov	x0, x20
  4163b4:	bl	418660 <wcrtomb@plt+0x15920>
  4163b8:	mov	x20, x0
  4163bc:	str	x0, [x26, #1168]
  4163c0:	ldr	w0, [x21, #8]
  4163c4:	mov	w1, #0x0                   	// #0
  4163c8:	sub	w2, w27, w0
  4163cc:	add	x0, x20, w0, sxtw #4
  4163d0:	sbfiz	x2, x2, #4, #32
  4163d4:	bl	4028d0 <memset@plt>
  4163d8:	str	w27, [x21, #8]
  4163dc:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4163e0:	add	x21, x21, #0x7b0
  4163e4:	sbfiz	x19, x19, #4, #32
  4163e8:	add	x6, x21, #0x108
  4163ec:	add	x26, x20, x19
  4163f0:	mov	x3, x24
  4163f4:	ldp	x7, x0, [x21, #296]
  4163f8:	mov	x2, x23
  4163fc:	ldr	w4, [x21, #256]
  416400:	ldr	w5, [x21, #260]
  416404:	ldr	x27, [x20, x19]
  416408:	orr	w25, w5, #0x1
  41640c:	ldr	x28, [x26, #8]
  416410:	str	x0, [sp]
  416414:	mov	x1, x27
  416418:	mov	w5, w25
  41641c:	mov	x0, x28
  416420:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416424:	cmp	x27, x0
  416428:	b.hi	416478 <wcrtomb@plt+0x13738>  // b.pmore
  41642c:	add	x27, x0, #0x1
  416430:	str	x27, [x20, x19]
  416434:	cmp	x28, x21
  416438:	b.eq	416444 <wcrtomb@plt+0x13704>  // b.none
  41643c:	mov	x0, x28
  416440:	bl	402ae0 <free@plt>
  416444:	mov	x0, x27
  416448:	bl	418630 <wcrtomb@plt+0x158f0>
  41644c:	ldp	x7, x1, [x21, #296]
  416450:	str	x0, [x26, #8]
  416454:	ldr	w4, [x21, #256]
  416458:	mov	x28, x0
  41645c:	str	x1, [sp]
  416460:	mov	w5, w25
  416464:	mov	x3, x24
  416468:	mov	x2, x23
  41646c:	add	x6, x21, #0x108
  416470:	mov	x1, x27
  416474:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416478:	ldr	w0, [sp, #124]
  41647c:	ldp	x29, x30, [sp, #16]
  416480:	ldp	x19, x20, [sp, #32]
  416484:	ldp	x23, x24, [sp, #64]
  416488:	ldp	x25, x26, [sp, #80]
  41648c:	str	w0, [x22]
  416490:	mov	x0, x28
  416494:	ldp	x21, x22, [sp, #48]
  416498:	ldp	x27, x28, [sp, #96]
  41649c:	add	sp, sp, #0x80
  4164a0:	ret
  4164a4:	mov	x0, #0x0                   	// #0
  4164a8:	bl	418660 <wcrtomb@plt+0x15920>
  4164ac:	mov	x20, x0
  4164b0:	str	x0, [x26, #1168]
  4164b4:	ldp	x0, x1, [x21, #16]
  4164b8:	stp	x0, x1, [x20]
  4164bc:	b	4163c0 <wcrtomb@plt+0x13680>
  4164c0:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4164c4:	bl	4029e0 <abort@plt>
  4164c8:	sub	sp, sp, #0x60
  4164cc:	stp	x29, x30, [sp, #16]
  4164d0:	add	x29, sp, #0x10
  4164d4:	stp	x19, x20, [sp, #32]
  4164d8:	stp	x21, x22, [sp, #48]
  4164dc:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4164e0:	add	x20, x21, #0x490
  4164e4:	stp	x23, x24, [sp, #64]
  4164e8:	mov	x24, x0
  4164ec:	stp	x25, x26, [sp, #80]
  4164f0:	bl	402cb0 <__errno_location@plt>
  4164f4:	mov	x23, x0
  4164f8:	ldr	w0, [x20, #8]
  4164fc:	ldr	x19, [x21, #1168]
  416500:	cmp	w0, #0x0
  416504:	ldr	w25, [x23]
  416508:	b.gt	41654c <wcrtomb@plt+0x1380c>
  41650c:	add	x0, x20, #0x10
  416510:	cmp	x19, x0
  416514:	b.eq	416600 <wcrtomb@plt+0x138c0>  // b.none
  416518:	mov	x0, x19
  41651c:	mov	x1, #0x10                  	// #16
  416520:	bl	418660 <wcrtomb@plt+0x15920>
  416524:	mov	x19, x0
  416528:	str	x0, [x21, #1168]
  41652c:	ldr	w0, [x20, #8]
  416530:	mov	w21, #0x1                   	// #1
  416534:	mov	w1, #0x0                   	// #0
  416538:	sub	w2, w21, w0
  41653c:	add	x0, x19, w0, sxtw #4
  416540:	sbfiz	x2, x2, #4, #32
  416544:	bl	4028d0 <memset@plt>
  416548:	str	w21, [x20, #8]
  41654c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  416550:	add	x20, x20, #0x7b0
  416554:	ldp	x21, x22, [x19]
  416558:	add	x6, x20, #0x108
  41655c:	ldp	x7, x0, [x20, #296]
  416560:	mov	x2, x24
  416564:	ldr	w4, [x20, #256]
  416568:	mov	x3, #0xffffffffffffffff    	// #-1
  41656c:	ldr	w26, [x20, #260]
  416570:	str	x0, [sp]
  416574:	mov	x1, x21
  416578:	orr	w26, w26, #0x1
  41657c:	mov	x0, x22
  416580:	mov	w5, w26
  416584:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416588:	cmp	x21, x0
  41658c:	b.hi	4165dc <wcrtomb@plt+0x1389c>  // b.pmore
  416590:	add	x21, x0, #0x1
  416594:	str	x21, [x19]
  416598:	cmp	x22, x20
  41659c:	b.eq	4165a8 <wcrtomb@plt+0x13868>  // b.none
  4165a0:	mov	x0, x22
  4165a4:	bl	402ae0 <free@plt>
  4165a8:	mov	x0, x21
  4165ac:	bl	418630 <wcrtomb@plt+0x158f0>
  4165b0:	ldp	x7, x1, [x20, #296]
  4165b4:	str	x0, [x19, #8]
  4165b8:	ldr	w4, [x20, #256]
  4165bc:	mov	x22, x0
  4165c0:	str	x1, [sp]
  4165c4:	mov	w5, w26
  4165c8:	mov	x2, x24
  4165cc:	add	x6, x20, #0x108
  4165d0:	mov	x1, x21
  4165d4:	mov	x3, #0xffffffffffffffff    	// #-1
  4165d8:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4165dc:	mov	x0, x22
  4165e0:	ldp	x29, x30, [sp, #16]
  4165e4:	ldp	x19, x20, [sp, #32]
  4165e8:	ldp	x21, x22, [sp, #48]
  4165ec:	str	w25, [x23]
  4165f0:	ldp	x23, x24, [sp, #64]
  4165f4:	ldp	x25, x26, [sp, #80]
  4165f8:	add	sp, sp, #0x60
  4165fc:	ret
  416600:	mov	x1, #0x10                  	// #16
  416604:	mov	x0, #0x0                   	// #0
  416608:	bl	418660 <wcrtomb@plt+0x15920>
  41660c:	mov	x19, x0
  416610:	str	x0, [x21, #1168]
  416614:	ldp	x0, x1, [x20, #16]
  416618:	stp	x0, x1, [x19]
  41661c:	b	41652c <wcrtomb@plt+0x137ec>
  416620:	sub	sp, sp, #0x70
  416624:	stp	x29, x30, [sp, #16]
  416628:	add	x29, sp, #0x10
  41662c:	stp	x19, x20, [sp, #32]
  416630:	stp	x21, x22, [sp, #48]
  416634:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  416638:	add	x20, x21, #0x490
  41663c:	stp	x23, x24, [sp, #64]
  416640:	mov	x23, x0
  416644:	mov	x24, x1
  416648:	stp	x25, x26, [sp, #80]
  41664c:	str	x27, [sp, #96]
  416650:	bl	402cb0 <__errno_location@plt>
  416654:	mov	x22, x0
  416658:	ldr	w0, [x20, #8]
  41665c:	ldr	x19, [x21, #1168]
  416660:	cmp	w0, #0x0
  416664:	ldr	w25, [x22]
  416668:	b.gt	4166ac <wcrtomb@plt+0x1396c>
  41666c:	add	x0, x20, #0x10
  416670:	cmp	x19, x0
  416674:	b.eq	416764 <wcrtomb@plt+0x13a24>  // b.none
  416678:	mov	x0, x19
  41667c:	mov	x1, #0x10                  	// #16
  416680:	bl	418660 <wcrtomb@plt+0x15920>
  416684:	mov	x19, x0
  416688:	str	x0, [x21, #1168]
  41668c:	ldr	w0, [x20, #8]
  416690:	mov	w21, #0x1                   	// #1
  416694:	mov	w1, #0x0                   	// #0
  416698:	sub	w2, w21, w0
  41669c:	add	x0, x19, w0, sxtw #4
  4166a0:	sbfiz	x2, x2, #4, #32
  4166a4:	bl	4028d0 <memset@plt>
  4166a8:	str	w21, [x20, #8]
  4166ac:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  4166b0:	add	x20, x20, #0x7b0
  4166b4:	ldp	x21, x26, [x19]
  4166b8:	add	x6, x20, #0x108
  4166bc:	ldp	x7, x0, [x20, #296]
  4166c0:	mov	x3, x24
  4166c4:	ldr	w4, [x20, #256]
  4166c8:	mov	x2, x23
  4166cc:	ldr	w27, [x20, #260]
  4166d0:	str	x0, [sp]
  4166d4:	mov	x1, x21
  4166d8:	orr	w27, w27, #0x1
  4166dc:	mov	x0, x26
  4166e0:	mov	w5, w27
  4166e4:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4166e8:	cmp	x21, x0
  4166ec:	b.hi	41673c <wcrtomb@plt+0x139fc>  // b.pmore
  4166f0:	add	x21, x0, #0x1
  4166f4:	str	x21, [x19]
  4166f8:	cmp	x26, x20
  4166fc:	b.eq	416708 <wcrtomb@plt+0x139c8>  // b.none
  416700:	mov	x0, x26
  416704:	bl	402ae0 <free@plt>
  416708:	mov	x0, x21
  41670c:	bl	418630 <wcrtomb@plt+0x158f0>
  416710:	ldp	x7, x1, [x20, #296]
  416714:	str	x0, [x19, #8]
  416718:	ldr	w4, [x20, #256]
  41671c:	mov	x26, x0
  416720:	str	x1, [sp]
  416724:	mov	w5, w27
  416728:	mov	x3, x24
  41672c:	mov	x2, x23
  416730:	add	x6, x20, #0x108
  416734:	mov	x1, x21
  416738:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41673c:	mov	x0, x26
  416740:	ldp	x29, x30, [sp, #16]
  416744:	ldp	x19, x20, [sp, #32]
  416748:	ldp	x23, x24, [sp, #64]
  41674c:	ldr	x27, [sp, #96]
  416750:	str	w25, [x22]
  416754:	ldp	x21, x22, [sp, #48]
  416758:	ldp	x25, x26, [sp, #80]
  41675c:	add	sp, sp, #0x70
  416760:	ret
  416764:	mov	x1, #0x10                  	// #16
  416768:	mov	x0, #0x0                   	// #0
  41676c:	bl	418660 <wcrtomb@plt+0x15920>
  416770:	mov	x19, x0
  416774:	str	x0, [x21, #1168]
  416778:	ldp	x0, x1, [x20, #16]
  41677c:	stp	x0, x1, [x19]
  416780:	b	41668c <wcrtomb@plt+0x1394c>
  416784:	nop
  416788:	stp	x29, x30, [sp, #-128]!
  41678c:	cmp	w1, #0xa
  416790:	mov	x29, sp
  416794:	stp	xzr, xzr, [sp, #72]
  416798:	b.eq	4167d0 <wcrtomb@plt+0x13a90>  // b.none
  41679c:	mov	w3, w1
  4167a0:	str	w3, [sp, #72]
  4167a4:	mov	x1, x2
  4167a8:	add	x3, sp, #0x10
  4167ac:	ldp	x4, x5, [sp, #72]
  4167b0:	mov	x2, #0xffffffffffffffff    	// #-1
  4167b4:	stp	x4, x5, [sp, #16]
  4167b8:	stp	xzr, xzr, [sp, #32]
  4167bc:	stp	xzr, xzr, [sp, #48]
  4167c0:	str	xzr, [sp, #64]
  4167c4:	bl	415bd8 <wcrtomb@plt+0x12e98>
  4167c8:	ldp	x29, x30, [sp], #128
  4167cc:	ret
  4167d0:	bl	4029e0 <abort@plt>
  4167d4:	nop
  4167d8:	stp	x29, x30, [sp, #-128]!
  4167dc:	cmp	w1, #0xa
  4167e0:	mov	x29, sp
  4167e4:	stp	xzr, xzr, [sp, #72]
  4167e8:	b.eq	416820 <wcrtomb@plt+0x13ae0>  // b.none
  4167ec:	mov	w4, w1
  4167f0:	str	w4, [sp, #72]
  4167f4:	mov	x1, x2
  4167f8:	mov	x2, x3
  4167fc:	ldp	x4, x5, [sp, #72]
  416800:	add	x3, sp, #0x10
  416804:	stp	x4, x5, [sp, #16]
  416808:	stp	xzr, xzr, [sp, #32]
  41680c:	stp	xzr, xzr, [sp, #48]
  416810:	str	xzr, [sp, #64]
  416814:	bl	415bd8 <wcrtomb@plt+0x12e98>
  416818:	ldp	x29, x30, [sp], #128
  41681c:	ret
  416820:	bl	4029e0 <abort@plt>
  416824:	nop
  416828:	sub	sp, sp, #0xd0
  41682c:	cmp	w0, #0xa
  416830:	stp	x29, x30, [sp, #16]
  416834:	add	x29, sp, #0x10
  416838:	stp	x19, x20, [sp, #32]
  41683c:	stp	x21, x22, [sp, #48]
  416840:	stp	x23, x24, [sp, #64]
  416844:	str	x25, [sp, #80]
  416848:	stp	xzr, xzr, [sp, #152]
  41684c:	stp	xzr, xzr, [sp, #168]
  416850:	stp	xzr, xzr, [sp, #184]
  416854:	str	xzr, [sp, #200]
  416858:	b.eq	4169ac <wcrtomb@plt+0x13c6c>  // b.none
  41685c:	str	w0, [sp, #152]
  416860:	mov	x23, x1
  416864:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  416868:	add	x20, x21, #0x490
  41686c:	ldp	x0, x1, [sp, #152]
  416870:	stp	x0, x1, [sp, #96]
  416874:	stp	xzr, xzr, [sp, #112]
  416878:	stp	xzr, xzr, [sp, #128]
  41687c:	str	xzr, [sp, #144]
  416880:	bl	402cb0 <__errno_location@plt>
  416884:	ldr	w1, [x20, #8]
  416888:	mov	x22, x0
  41688c:	ldr	x19, [x21, #1168]
  416890:	cmp	w1, #0x0
  416894:	ldr	w25, [x0]
  416898:	b.gt	4168dc <wcrtomb@plt+0x13b9c>
  41689c:	add	x0, x20, #0x10
  4168a0:	cmp	x19, x0
  4168a4:	b.eq	41698c <wcrtomb@plt+0x13c4c>  // b.none
  4168a8:	mov	x0, x19
  4168ac:	mov	x1, #0x10                  	// #16
  4168b0:	bl	418660 <wcrtomb@plt+0x15920>
  4168b4:	mov	x19, x0
  4168b8:	str	x0, [x21, #1168]
  4168bc:	ldr	w0, [x20, #8]
  4168c0:	mov	w21, #0x1                   	// #1
  4168c4:	mov	w1, #0x0                   	// #0
  4168c8:	sub	w2, w21, w0
  4168cc:	add	x0, x19, w0, sxtw #4
  4168d0:	sbfiz	x2, x2, #4, #32
  4168d4:	bl	4028d0 <memset@plt>
  4168d8:	str	w21, [x20, #8]
  4168dc:	ldp	x20, x21, [x19]
  4168e0:	add	x6, sp, #0x68
  4168e4:	ldp	x7, x0, [sp, #136]
  4168e8:	str	x0, [sp]
  4168ec:	ldp	w4, w24, [sp, #96]
  4168f0:	mov	x2, x23
  4168f4:	mov	x1, x20
  4168f8:	mov	x0, x21
  4168fc:	orr	w24, w24, #0x1
  416900:	mov	x3, #0xffffffffffffffff    	// #-1
  416904:	mov	w5, w24
  416908:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41690c:	cmp	x20, x0
  416910:	b.hi	416968 <wcrtomb@plt+0x13c28>  // b.pmore
  416914:	add	x20, x0, #0x1
  416918:	str	x20, [x19]
  41691c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  416920:	add	x0, x0, #0x7b0
  416924:	cmp	x21, x0
  416928:	b.eq	416934 <wcrtomb@plt+0x13bf4>  // b.none
  41692c:	mov	x0, x21
  416930:	bl	402ae0 <free@plt>
  416934:	mov	x0, x20
  416938:	bl	418630 <wcrtomb@plt+0x158f0>
  41693c:	ldp	x7, x1, [sp, #136]
  416940:	str	x0, [x19, #8]
  416944:	ldr	w4, [sp, #96]
  416948:	mov	x21, x0
  41694c:	str	x1, [sp]
  416950:	add	x6, sp, #0x68
  416954:	mov	w5, w24
  416958:	mov	x2, x23
  41695c:	mov	x1, x20
  416960:	mov	x3, #0xffffffffffffffff    	// #-1
  416964:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416968:	ldp	x29, x30, [sp, #16]
  41696c:	mov	x0, x21
  416970:	ldp	x19, x20, [sp, #32]
  416974:	ldp	x23, x24, [sp, #64]
  416978:	str	w25, [x22]
  41697c:	ldp	x21, x22, [sp, #48]
  416980:	ldr	x25, [sp, #80]
  416984:	add	sp, sp, #0xd0
  416988:	ret
  41698c:	mov	x1, #0x10                  	// #16
  416990:	mov	x0, #0x0                   	// #0
  416994:	bl	418660 <wcrtomb@plt+0x15920>
  416998:	mov	x19, x0
  41699c:	str	x0, [x21, #1168]
  4169a0:	ldp	x0, x1, [x20, #16]
  4169a4:	stp	x0, x1, [x19]
  4169a8:	b	4168bc <wcrtomb@plt+0x13b7c>
  4169ac:	bl	4029e0 <abort@plt>
  4169b0:	sub	sp, sp, #0xd0
  4169b4:	cmp	w0, #0xa
  4169b8:	stp	x29, x30, [sp, #16]
  4169bc:	add	x29, sp, #0x10
  4169c0:	stp	x19, x20, [sp, #32]
  4169c4:	stp	x21, x22, [sp, #48]
  4169c8:	stp	x23, x24, [sp, #64]
  4169cc:	stp	x25, x26, [sp, #80]
  4169d0:	stp	xzr, xzr, [sp, #152]
  4169d4:	stp	xzr, xzr, [sp, #168]
  4169d8:	stp	xzr, xzr, [sp, #184]
  4169dc:	str	xzr, [sp, #200]
  4169e0:	b.eq	416b38 <wcrtomb@plt+0x13df8>  // b.none
  4169e4:	str	w0, [sp, #152]
  4169e8:	mov	x23, x1
  4169ec:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4169f0:	add	x20, x21, #0x490
  4169f4:	ldp	x0, x1, [sp, #152]
  4169f8:	mov	x24, x2
  4169fc:	stp	x0, x1, [sp, #96]
  416a00:	stp	xzr, xzr, [sp, #112]
  416a04:	stp	xzr, xzr, [sp, #128]
  416a08:	str	xzr, [sp, #144]
  416a0c:	bl	402cb0 <__errno_location@plt>
  416a10:	ldr	w1, [x20, #8]
  416a14:	mov	x22, x0
  416a18:	ldr	x19, [x21, #1168]
  416a1c:	cmp	w1, #0x0
  416a20:	ldr	w25, [x0]
  416a24:	b.gt	416a68 <wcrtomb@plt+0x13d28>
  416a28:	add	x0, x20, #0x10
  416a2c:	cmp	x19, x0
  416a30:	b.eq	416b18 <wcrtomb@plt+0x13dd8>  // b.none
  416a34:	mov	x0, x19
  416a38:	mov	x1, #0x10                  	// #16
  416a3c:	bl	418660 <wcrtomb@plt+0x15920>
  416a40:	mov	x19, x0
  416a44:	str	x0, [x21, #1168]
  416a48:	ldr	w0, [x20, #8]
  416a4c:	mov	w21, #0x1                   	// #1
  416a50:	mov	w1, #0x0                   	// #0
  416a54:	sub	w2, w21, w0
  416a58:	add	x0, x19, w0, sxtw #4
  416a5c:	sbfiz	x2, x2, #4, #32
  416a60:	bl	4028d0 <memset@plt>
  416a64:	str	w21, [x20, #8]
  416a68:	ldp	x20, x21, [x19]
  416a6c:	add	x6, sp, #0x68
  416a70:	ldp	x7, x0, [sp, #136]
  416a74:	str	x0, [sp]
  416a78:	ldp	w4, w26, [sp, #96]
  416a7c:	mov	x3, x24
  416a80:	mov	x2, x23
  416a84:	mov	x1, x20
  416a88:	orr	w26, w26, #0x1
  416a8c:	mov	x0, x21
  416a90:	mov	w5, w26
  416a94:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416a98:	cmp	x20, x0
  416a9c:	b.hi	416af4 <wcrtomb@plt+0x13db4>  // b.pmore
  416aa0:	add	x20, x0, #0x1
  416aa4:	str	x20, [x19]
  416aa8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  416aac:	add	x0, x0, #0x7b0
  416ab0:	cmp	x21, x0
  416ab4:	b.eq	416ac0 <wcrtomb@plt+0x13d80>  // b.none
  416ab8:	mov	x0, x21
  416abc:	bl	402ae0 <free@plt>
  416ac0:	mov	x0, x20
  416ac4:	bl	418630 <wcrtomb@plt+0x158f0>
  416ac8:	ldp	x7, x1, [sp, #136]
  416acc:	str	x0, [x19, #8]
  416ad0:	ldr	w4, [sp, #96]
  416ad4:	mov	x21, x0
  416ad8:	str	x1, [sp]
  416adc:	add	x6, sp, #0x68
  416ae0:	mov	w5, w26
  416ae4:	mov	x3, x24
  416ae8:	mov	x2, x23
  416aec:	mov	x1, x20
  416af0:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416af4:	ldp	x29, x30, [sp, #16]
  416af8:	mov	x0, x21
  416afc:	ldp	x19, x20, [sp, #32]
  416b00:	ldp	x23, x24, [sp, #64]
  416b04:	str	w25, [x22]
  416b08:	ldp	x21, x22, [sp, #48]
  416b0c:	ldp	x25, x26, [sp, #80]
  416b10:	add	sp, sp, #0xd0
  416b14:	ret
  416b18:	mov	x1, #0x10                  	// #16
  416b1c:	mov	x0, #0x0                   	// #0
  416b20:	bl	418660 <wcrtomb@plt+0x15920>
  416b24:	mov	x19, x0
  416b28:	str	x0, [x21, #1168]
  416b2c:	ldp	x0, x1, [x20, #16]
  416b30:	stp	x0, x1, [x19]
  416b34:	b	416a48 <wcrtomb@plt+0x13d08>
  416b38:	bl	4029e0 <abort@plt>
  416b3c:	nop
  416b40:	sub	sp, sp, #0xb0
  416b44:	ubfx	x6, x2, #5, #3
  416b48:	add	x5, sp, #0x80
  416b4c:	and	w2, w2, #0x1f
  416b50:	stp	x29, x30, [sp, #16]
  416b54:	add	x29, sp, #0x10
  416b58:	stp	x19, x20, [sp, #32]
  416b5c:	adrp	x20, 441000 <_obstack_memory_used@@Base+0x282f0>
  416b60:	add	x20, x20, #0x7b0
  416b64:	stp	x21, x22, [sp, #48]
  416b68:	mov	x22, x1
  416b6c:	mov	x21, x0
  416b70:	ldp	x8, x9, [x20, #256]
  416b74:	stp	x8, x9, [sp, #120]
  416b78:	ldp	x8, x9, [x20, #272]
  416b7c:	stp	x8, x9, [sp, #136]
  416b80:	ldp	x8, x9, [x20, #288]
  416b84:	stp	x8, x9, [sp, #152]
  416b88:	ldr	x3, [x20, #304]
  416b8c:	str	x3, [sp, #168]
  416b90:	stp	x23, x24, [sp, #64]
  416b94:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  416b98:	ldr	w4, [x5, x6, lsl #2]
  416b9c:	stp	x25, x26, [sp, #80]
  416ba0:	add	x23, x24, #0x490
  416ba4:	lsr	w3, w4, w2
  416ba8:	mvn	w3, w3
  416bac:	and	w3, w3, #0x1
  416bb0:	str	x27, [sp, #96]
  416bb4:	lsl	w3, w3, w2
  416bb8:	eor	w3, w3, w4
  416bbc:	str	w3, [x5, x6, lsl #2]
  416bc0:	bl	402cb0 <__errno_location@plt>
  416bc4:	ldr	w26, [x0]
  416bc8:	ldr	w1, [x23, #8]
  416bcc:	mov	x25, x0
  416bd0:	ldr	x19, [x24, #1168]
  416bd4:	cmp	w1, #0x0
  416bd8:	b.gt	416c1c <wcrtomb@plt+0x13edc>
  416bdc:	add	x0, x23, #0x10
  416be0:	cmp	x19, x0
  416be4:	b.eq	416cc8 <wcrtomb@plt+0x13f88>  // b.none
  416be8:	mov	x0, x19
  416bec:	mov	x1, #0x10                  	// #16
  416bf0:	bl	418660 <wcrtomb@plt+0x15920>
  416bf4:	mov	x19, x0
  416bf8:	str	x0, [x24, #1168]
  416bfc:	ldr	w0, [x23, #8]
  416c00:	mov	w24, #0x1                   	// #1
  416c04:	mov	w1, #0x0                   	// #0
  416c08:	sub	w2, w24, w0
  416c0c:	add	x0, x19, w0, sxtw #4
  416c10:	sbfiz	x2, x2, #4, #32
  416c14:	bl	4028d0 <memset@plt>
  416c18:	str	w24, [x23, #8]
  416c1c:	ldp	x23, x24, [x19]
  416c20:	add	x6, sp, #0x80
  416c24:	ldp	x7, x0, [sp, #160]
  416c28:	str	x0, [sp]
  416c2c:	ldp	w4, w27, [sp, #120]
  416c30:	mov	x3, x22
  416c34:	mov	x2, x21
  416c38:	mov	x1, x23
  416c3c:	orr	w27, w27, #0x1
  416c40:	mov	x0, x24
  416c44:	mov	w5, w27
  416c48:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416c4c:	cmp	x23, x0
  416c50:	b.hi	416ca0 <wcrtomb@plt+0x13f60>  // b.pmore
  416c54:	add	x23, x0, #0x1
  416c58:	str	x23, [x19]
  416c5c:	cmp	x24, x20
  416c60:	b.eq	416c6c <wcrtomb@plt+0x13f2c>  // b.none
  416c64:	mov	x0, x24
  416c68:	bl	402ae0 <free@plt>
  416c6c:	mov	x0, x23
  416c70:	bl	418630 <wcrtomb@plt+0x158f0>
  416c74:	ldp	x7, x1, [sp, #160]
  416c78:	str	x0, [x19, #8]
  416c7c:	ldr	w4, [sp, #120]
  416c80:	mov	x24, x0
  416c84:	str	x1, [sp]
  416c88:	add	x6, sp, #0x80
  416c8c:	mov	w5, w27
  416c90:	mov	x3, x22
  416c94:	mov	x2, x21
  416c98:	mov	x1, x23
  416c9c:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416ca0:	mov	x0, x24
  416ca4:	ldp	x29, x30, [sp, #16]
  416ca8:	ldp	x19, x20, [sp, #32]
  416cac:	ldp	x21, x22, [sp, #48]
  416cb0:	ldp	x23, x24, [sp, #64]
  416cb4:	ldr	x27, [sp, #96]
  416cb8:	str	w26, [x25]
  416cbc:	ldp	x25, x26, [sp, #80]
  416cc0:	add	sp, sp, #0xb0
  416cc4:	ret
  416cc8:	mov	x1, #0x10                  	// #16
  416ccc:	mov	x0, #0x0                   	// #0
  416cd0:	bl	418660 <wcrtomb@plt+0x15920>
  416cd4:	mov	x19, x0
  416cd8:	str	x0, [x24, #1168]
  416cdc:	ldp	x0, x1, [x23, #16]
  416ce0:	stp	x0, x1, [x19]
  416ce4:	b	416bfc <wcrtomb@plt+0x13ebc>
  416ce8:	sub	sp, sp, #0xa0
  416cec:	ubfx	x5, x1, #5, #3
  416cf0:	add	x4, sp, #0x70
  416cf4:	and	w1, w1, #0x1f
  416cf8:	stp	x29, x30, [sp, #16]
  416cfc:	add	x29, sp, #0x10
  416d00:	stp	x21, x22, [sp, #48]
  416d04:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  416d08:	add	x21, x21, #0x7b0
  416d0c:	mov	x22, x0
  416d10:	stp	x19, x20, [sp, #32]
  416d14:	ldp	x6, x7, [x21, #256]
  416d18:	stp	x6, x7, [sp, #104]
  416d1c:	ldp	x6, x7, [x21, #272]
  416d20:	stp	x6, x7, [sp, #120]
  416d24:	ldp	x6, x7, [x21, #288]
  416d28:	stp	x6, x7, [sp, #136]
  416d2c:	ldr	x2, [x21, #304]
  416d30:	str	x2, [sp, #152]
  416d34:	stp	x23, x24, [sp, #64]
  416d38:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  416d3c:	ldr	w0, [x4, x5, lsl #2]
  416d40:	stp	x25, x26, [sp, #80]
  416d44:	add	x20, x23, #0x490
  416d48:	lsr	w2, w0, w1
  416d4c:	mvn	w2, w2
  416d50:	and	w2, w2, #0x1
  416d54:	lsl	w2, w2, w1
  416d58:	eor	w2, w2, w0
  416d5c:	str	w2, [x4, x5, lsl #2]
  416d60:	bl	402cb0 <__errno_location@plt>
  416d64:	ldr	w25, [x0]
  416d68:	ldr	w1, [x20, #8]
  416d6c:	mov	x24, x0
  416d70:	ldr	x19, [x23, #1168]
  416d74:	cmp	w1, #0x0
  416d78:	b.gt	416dbc <wcrtomb@plt+0x1407c>
  416d7c:	add	x0, x20, #0x10
  416d80:	cmp	x19, x0
  416d84:	b.eq	416e64 <wcrtomb@plt+0x14124>  // b.none
  416d88:	mov	x0, x19
  416d8c:	mov	x1, #0x10                  	// #16
  416d90:	bl	418660 <wcrtomb@plt+0x15920>
  416d94:	mov	x19, x0
  416d98:	str	x0, [x23, #1168]
  416d9c:	ldr	w0, [x20, #8]
  416da0:	mov	w23, #0x1                   	// #1
  416da4:	mov	w1, #0x0                   	// #0
  416da8:	sub	w2, w23, w0
  416dac:	add	x0, x19, w0, sxtw #4
  416db0:	sbfiz	x2, x2, #4, #32
  416db4:	bl	4028d0 <memset@plt>
  416db8:	str	w23, [x20, #8]
  416dbc:	ldp	x20, x23, [x19]
  416dc0:	add	x6, sp, #0x70
  416dc4:	ldp	x7, x0, [sp, #144]
  416dc8:	str	x0, [sp]
  416dcc:	ldp	w4, w26, [sp, #104]
  416dd0:	mov	x2, x22
  416dd4:	mov	x1, x20
  416dd8:	mov	x0, x23
  416ddc:	orr	w26, w26, #0x1
  416de0:	mov	x3, #0xffffffffffffffff    	// #-1
  416de4:	mov	w5, w26
  416de8:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416dec:	cmp	x20, x0
  416df0:	b.hi	416e40 <wcrtomb@plt+0x14100>  // b.pmore
  416df4:	add	x20, x0, #0x1
  416df8:	str	x20, [x19]
  416dfc:	cmp	x23, x21
  416e00:	b.eq	416e0c <wcrtomb@plt+0x140cc>  // b.none
  416e04:	mov	x0, x23
  416e08:	bl	402ae0 <free@plt>
  416e0c:	mov	x0, x20
  416e10:	bl	418630 <wcrtomb@plt+0x158f0>
  416e14:	ldp	x7, x1, [sp, #144]
  416e18:	str	x0, [x19, #8]
  416e1c:	ldr	w4, [sp, #104]
  416e20:	mov	x23, x0
  416e24:	str	x1, [sp]
  416e28:	add	x6, sp, #0x70
  416e2c:	mov	w5, w26
  416e30:	mov	x2, x22
  416e34:	mov	x1, x20
  416e38:	mov	x3, #0xffffffffffffffff    	// #-1
  416e3c:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416e40:	ldp	x29, x30, [sp, #16]
  416e44:	mov	x0, x23
  416e48:	ldp	x19, x20, [sp, #32]
  416e4c:	ldp	x21, x22, [sp, #48]
  416e50:	str	w25, [x24]
  416e54:	ldp	x23, x24, [sp, #64]
  416e58:	ldp	x25, x26, [sp, #80]
  416e5c:	add	sp, sp, #0xa0
  416e60:	ret
  416e64:	mov	x1, #0x10                  	// #16
  416e68:	mov	x0, #0x0                   	// #0
  416e6c:	bl	418660 <wcrtomb@plt+0x15920>
  416e70:	mov	x19, x0
  416e74:	str	x0, [x23, #1168]
  416e78:	ldp	x0, x1, [x20, #16]
  416e7c:	stp	x0, x1, [x19]
  416e80:	b	416d9c <wcrtomb@plt+0x1405c>
  416e84:	nop
  416e88:	sub	sp, sp, #0xa0
  416e8c:	stp	x29, x30, [sp, #16]
  416e90:	add	x29, sp, #0x10
  416e94:	stp	x23, x24, [sp, #64]
  416e98:	adrp	x23, 441000 <_obstack_memory_used@@Base+0x282f0>
  416e9c:	add	x23, x23, #0x7b0
  416ea0:	stp	x21, x22, [sp, #48]
  416ea4:	mov	x22, x0
  416ea8:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  416eac:	ldp	x4, x5, [x23, #256]
  416eb0:	stp	x4, x5, [sp, #104]
  416eb4:	ldr	w0, [sp, #116]
  416eb8:	ldp	x4, x5, [x23, #272]
  416ebc:	stp	x4, x5, [sp, #120]
  416ec0:	mvn	w1, w0, lsr #26
  416ec4:	ldp	x4, x5, [x23, #288]
  416ec8:	ubfiz	w1, w1, #26, #1
  416ecc:	ldr	x2, [x23, #304]
  416ed0:	eor	w1, w1, w0
  416ed4:	stp	x19, x20, [sp, #32]
  416ed8:	add	x20, x21, #0x490
  416edc:	stp	x25, x26, [sp, #80]
  416ee0:	str	w1, [sp, #116]
  416ee4:	stp	x4, x5, [sp, #136]
  416ee8:	str	x2, [sp, #152]
  416eec:	bl	402cb0 <__errno_location@plt>
  416ef0:	ldr	w1, [x20, #8]
  416ef4:	mov	x24, x0
  416ef8:	ldr	x19, [x21, #1168]
  416efc:	cmp	w1, #0x0
  416f00:	ldr	w25, [x0]
  416f04:	b.gt	416f48 <wcrtomb@plt+0x14208>
  416f08:	add	x0, x20, #0x10
  416f0c:	cmp	x19, x0
  416f10:	b.eq	416ff0 <wcrtomb@plt+0x142b0>  // b.none
  416f14:	mov	x0, x19
  416f18:	mov	x1, #0x10                  	// #16
  416f1c:	bl	418660 <wcrtomb@plt+0x15920>
  416f20:	mov	x19, x0
  416f24:	str	x0, [x21, #1168]
  416f28:	ldr	w0, [x20, #8]
  416f2c:	mov	w21, #0x1                   	// #1
  416f30:	mov	w1, #0x0                   	// #0
  416f34:	sub	w2, w21, w0
  416f38:	add	x0, x19, w0, sxtw #4
  416f3c:	sbfiz	x2, x2, #4, #32
  416f40:	bl	4028d0 <memset@plt>
  416f44:	str	w21, [x20, #8]
  416f48:	ldp	x20, x21, [x19]
  416f4c:	add	x6, sp, #0x70
  416f50:	ldp	x7, x0, [sp, #144]
  416f54:	str	x0, [sp]
  416f58:	ldp	w4, w26, [sp, #104]
  416f5c:	mov	x2, x22
  416f60:	mov	x1, x20
  416f64:	mov	x0, x21
  416f68:	orr	w26, w26, #0x1
  416f6c:	mov	x3, #0xffffffffffffffff    	// #-1
  416f70:	mov	w5, w26
  416f74:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416f78:	cmp	x20, x0
  416f7c:	b.hi	416fcc <wcrtomb@plt+0x1428c>  // b.pmore
  416f80:	add	x20, x0, #0x1
  416f84:	str	x20, [x19]
  416f88:	cmp	x21, x23
  416f8c:	b.eq	416f98 <wcrtomb@plt+0x14258>  // b.none
  416f90:	mov	x0, x21
  416f94:	bl	402ae0 <free@plt>
  416f98:	mov	x0, x20
  416f9c:	bl	418630 <wcrtomb@plt+0x158f0>
  416fa0:	ldp	x7, x1, [sp, #144]
  416fa4:	str	x0, [x19, #8]
  416fa8:	ldr	w4, [sp, #104]
  416fac:	mov	x21, x0
  416fb0:	str	x1, [sp]
  416fb4:	add	x6, sp, #0x70
  416fb8:	mov	w5, w26
  416fbc:	mov	x2, x22
  416fc0:	mov	x1, x20
  416fc4:	mov	x3, #0xffffffffffffffff    	// #-1
  416fc8:	bl	414a38 <wcrtomb@plt+0x11cf8>
  416fcc:	mov	x0, x21
  416fd0:	ldp	x29, x30, [sp, #16]
  416fd4:	ldp	x19, x20, [sp, #32]
  416fd8:	ldp	x21, x22, [sp, #48]
  416fdc:	str	w25, [x24]
  416fe0:	ldp	x23, x24, [sp, #64]
  416fe4:	ldp	x25, x26, [sp, #80]
  416fe8:	add	sp, sp, #0xa0
  416fec:	ret
  416ff0:	mov	x1, #0x10                  	// #16
  416ff4:	mov	x0, #0x0                   	// #0
  416ff8:	bl	418660 <wcrtomb@plt+0x15920>
  416ffc:	mov	x19, x0
  417000:	str	x0, [x21, #1168]
  417004:	ldp	x0, x1, [x20, #16]
  417008:	stp	x0, x1, [x19]
  41700c:	b	416f28 <wcrtomb@plt+0x141e8>
  417010:	sub	sp, sp, #0xb0
  417014:	stp	x29, x30, [sp, #16]
  417018:	add	x29, sp, #0x10
  41701c:	stp	x21, x22, [sp, #48]
  417020:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  417024:	add	x21, x21, #0x7b0
  417028:	mov	x22, x0
  41702c:	stp	x19, x20, [sp, #32]
  417030:	ldp	x4, x5, [x21, #256]
  417034:	stp	x4, x5, [sp, #120]
  417038:	ldr	w4, [sp, #132]
  41703c:	ldp	x6, x7, [x21, #272]
  417040:	stp	x6, x7, [sp, #136]
  417044:	mvn	w2, w4, lsr #26
  417048:	ldp	x6, x7, [x21, #288]
  41704c:	ubfiz	w2, w2, #26, #1
  417050:	ldr	x0, [x21, #304]
  417054:	eor	w2, w2, w4
  417058:	stp	x23, x24, [sp, #64]
  41705c:	adrp	x24, 441000 <_obstack_memory_used@@Base+0x282f0>
  417060:	add	x20, x24, #0x490
  417064:	mov	x23, x1
  417068:	stp	x25, x26, [sp, #80]
  41706c:	str	x27, [sp, #96]
  417070:	str	w2, [sp, #132]
  417074:	stp	x6, x7, [sp, #152]
  417078:	str	x0, [sp, #168]
  41707c:	bl	402cb0 <__errno_location@plt>
  417080:	ldr	w1, [x20, #8]
  417084:	mov	x25, x0
  417088:	ldr	x19, [x24, #1168]
  41708c:	cmp	w1, #0x0
  417090:	ldr	w26, [x0]
  417094:	b.gt	4170d8 <wcrtomb@plt+0x14398>
  417098:	add	x0, x20, #0x10
  41709c:	cmp	x19, x0
  4170a0:	b.eq	417184 <wcrtomb@plt+0x14444>  // b.none
  4170a4:	mov	x0, x19
  4170a8:	mov	x1, #0x10                  	// #16
  4170ac:	bl	418660 <wcrtomb@plt+0x15920>
  4170b0:	mov	x19, x0
  4170b4:	str	x0, [x24, #1168]
  4170b8:	ldr	w0, [x20, #8]
  4170bc:	mov	w24, #0x1                   	// #1
  4170c0:	mov	w1, #0x0                   	// #0
  4170c4:	sub	w2, w24, w0
  4170c8:	add	x0, x19, w0, sxtw #4
  4170cc:	sbfiz	x2, x2, #4, #32
  4170d0:	bl	4028d0 <memset@plt>
  4170d4:	str	w24, [x20, #8]
  4170d8:	ldp	x20, x24, [x19]
  4170dc:	add	x6, sp, #0x80
  4170e0:	ldp	x7, x0, [sp, #160]
  4170e4:	str	x0, [sp]
  4170e8:	ldp	w4, w27, [sp, #120]
  4170ec:	mov	x3, x23
  4170f0:	mov	x2, x22
  4170f4:	mov	x1, x20
  4170f8:	orr	w27, w27, #0x1
  4170fc:	mov	x0, x24
  417100:	mov	w5, w27
  417104:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417108:	cmp	x20, x0
  41710c:	b.hi	41715c <wcrtomb@plt+0x1441c>  // b.pmore
  417110:	add	x20, x0, #0x1
  417114:	str	x20, [x19]
  417118:	cmp	x24, x21
  41711c:	b.eq	417128 <wcrtomb@plt+0x143e8>  // b.none
  417120:	mov	x0, x24
  417124:	bl	402ae0 <free@plt>
  417128:	mov	x0, x20
  41712c:	bl	418630 <wcrtomb@plt+0x158f0>
  417130:	ldp	x7, x1, [sp, #160]
  417134:	str	x0, [x19, #8]
  417138:	ldr	w4, [sp, #120]
  41713c:	mov	x24, x0
  417140:	str	x1, [sp]
  417144:	add	x6, sp, #0x80
  417148:	mov	w5, w27
  41714c:	mov	x3, x23
  417150:	mov	x2, x22
  417154:	mov	x1, x20
  417158:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41715c:	mov	x0, x24
  417160:	ldp	x29, x30, [sp, #16]
  417164:	ldp	x19, x20, [sp, #32]
  417168:	ldp	x21, x22, [sp, #48]
  41716c:	ldp	x23, x24, [sp, #64]
  417170:	ldr	x27, [sp, #96]
  417174:	str	w26, [x25]
  417178:	ldp	x25, x26, [sp, #80]
  41717c:	add	sp, sp, #0xb0
  417180:	ret
  417184:	mov	x1, #0x10                  	// #16
  417188:	mov	x0, #0x0                   	// #0
  41718c:	bl	418660 <wcrtomb@plt+0x15920>
  417190:	mov	x19, x0
  417194:	str	x0, [x24, #1168]
  417198:	ldp	x0, x1, [x20, #16]
  41719c:	stp	x0, x1, [x19]
  4171a0:	b	4170b8 <wcrtomb@plt+0x14378>
  4171a4:	nop
  4171a8:	stp	x29, x30, [sp, #-128]!
  4171ac:	cmp	w1, #0xa
  4171b0:	mov	x29, sp
  4171b4:	stp	xzr, xzr, [sp, #16]
  4171b8:	stp	xzr, xzr, [sp, #32]
  4171bc:	stp	xzr, xzr, [sp, #48]
  4171c0:	str	xzr, [sp, #64]
  4171c4:	b.eq	4171f0 <wcrtomb@plt+0x144b0>  // b.none
  4171c8:	mov	w4, w1
  4171cc:	mov	w5, #0x4000000             	// #67108864
  4171d0:	mov	x1, x2
  4171d4:	add	x3, sp, #0x10
  4171d8:	mov	x2, #0xffffffffffffffff    	// #-1
  4171dc:	str	w4, [sp, #16]
  4171e0:	str	w5, [sp, #28]
  4171e4:	bl	415bd8 <wcrtomb@plt+0x12e98>
  4171e8:	ldp	x29, x30, [sp], #128
  4171ec:	ret
  4171f0:	bl	4029e0 <abort@plt>
  4171f4:	nop
  4171f8:	adrp	x4, 441000 <_obstack_memory_used@@Base+0x282f0>
  4171fc:	add	x4, x4, #0x7b0
  417200:	stp	x29, x30, [sp, #-80]!
  417204:	mov	x5, x1
  417208:	mov	w1, #0xa                   	// #10
  41720c:	mov	x29, sp
  417210:	ldp	x8, x9, [x4, #256]
  417214:	stp	x8, x9, [sp, #24]
  417218:	cmp	x5, #0x0
  41721c:	str	w1, [sp, #24]
  417220:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  417224:	ldp	x10, x11, [x4, #272]
  417228:	stp	x10, x11, [sp, #40]
  41722c:	ldp	x8, x9, [x4, #288]
  417230:	stp	x8, x9, [sp, #56]
  417234:	ldr	x1, [x4, #304]
  417238:	str	x1, [sp, #72]
  41723c:	b.eq	417260 <wcrtomb@plt+0x14520>  // b.none
  417240:	mov	x4, x2
  417244:	mov	x1, x3
  417248:	mov	x2, #0xffffffffffffffff    	// #-1
  41724c:	add	x3, sp, #0x18
  417250:	stp	x5, x4, [sp, #64]
  417254:	bl	415bd8 <wcrtomb@plt+0x12e98>
  417258:	ldp	x29, x30, [sp], #80
  41725c:	ret
  417260:	bl	4029e0 <abort@plt>
  417264:	nop
  417268:	adrp	x5, 441000 <_obstack_memory_used@@Base+0x282f0>
  41726c:	add	x5, x5, #0x7b0
  417270:	stp	x29, x30, [sp, #-80]!
  417274:	mov	x6, x1
  417278:	mov	w1, #0xa                   	// #10
  41727c:	mov	x29, sp
  417280:	ldp	x8, x9, [x5, #256]
  417284:	stp	x8, x9, [sp, #24]
  417288:	cmp	x6, #0x0
  41728c:	str	w1, [sp, #24]
  417290:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  417294:	ldp	x10, x11, [x5, #272]
  417298:	stp	x10, x11, [sp, #40]
  41729c:	ldp	x8, x9, [x5, #288]
  4172a0:	stp	x8, x9, [sp, #56]
  4172a4:	ldr	x1, [x5, #304]
  4172a8:	str	x1, [sp, #72]
  4172ac:	b.eq	4172d0 <wcrtomb@plt+0x14590>  // b.none
  4172b0:	mov	x5, x2
  4172b4:	mov	x1, x3
  4172b8:	mov	x2, x4
  4172bc:	add	x3, sp, #0x18
  4172c0:	stp	x6, x5, [sp, #64]
  4172c4:	bl	415bd8 <wcrtomb@plt+0x12e98>
  4172c8:	ldp	x29, x30, [sp], #80
  4172cc:	ret
  4172d0:	bl	4029e0 <abort@plt>
  4172d4:	nop
  4172d8:	sub	sp, sp, #0xb0
  4172dc:	cmp	x0, #0x0
  4172e0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4172e4:	stp	x29, x30, [sp, #16]
  4172e8:	add	x29, sp, #0x10
  4172ec:	stp	x21, x22, [sp, #48]
  4172f0:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4172f4:	add	x22, x22, #0x7b0
  4172f8:	mov	x21, x0
  4172fc:	stp	x19, x20, [sp, #32]
  417300:	mov	w19, #0xa                   	// #10
  417304:	ldp	x4, x5, [x22, #256]
  417308:	stp	x4, x5, [sp, #120]
  41730c:	ldp	x4, x5, [x22, #272]
  417310:	stp	x23, x24, [sp, #64]
  417314:	ldp	x6, x7, [x22, #288]
  417318:	stp	x25, x26, [sp, #80]
  41731c:	ldr	x0, [x22, #304]
  417320:	str	x27, [sp, #96]
  417324:	str	w19, [sp, #120]
  417328:	stp	x4, x5, [sp, #136]
  41732c:	stp	x6, x7, [sp, #152]
  417330:	str	x0, [sp, #168]
  417334:	b.eq	417484 <wcrtomb@plt+0x14744>  // b.none
  417338:	adrp	x27, 441000 <_obstack_memory_used@@Base+0x282f0>
  41733c:	add	x26, x27, #0x490
  417340:	mov	x20, x1
  417344:	mov	x24, x2
  417348:	stp	x21, x1, [sp, #160]
  41734c:	bl	402cb0 <__errno_location@plt>
  417350:	ldr	w1, [x26, #8]
  417354:	mov	w4, w19
  417358:	ldr	w25, [x0]
  41735c:	ldr	x19, [x27, #1168]
  417360:	mov	x23, x0
  417364:	cmp	w1, #0x0
  417368:	b.gt	4173b8 <wcrtomb@plt+0x14678>
  41736c:	add	x0, x26, #0x10
  417370:	cmp	x19, x0
  417374:	b.eq	417464 <wcrtomb@plt+0x14724>  // b.none
  417378:	mov	x0, x19
  41737c:	mov	x1, #0x10                  	// #16
  417380:	bl	418660 <wcrtomb@plt+0x15920>
  417384:	mov	x19, x0
  417388:	str	x0, [x27, #1168]
  41738c:	ldr	w0, [x26, #8]
  417390:	mov	w20, #0x1                   	// #1
  417394:	mov	w1, #0x0                   	// #0
  417398:	sub	w2, w20, w0
  41739c:	add	x0, x19, w0, sxtw #4
  4173a0:	sbfiz	x2, x2, #4, #32
  4173a4:	bl	4028d0 <memset@plt>
  4173a8:	ldr	w4, [sp, #120]
  4173ac:	str	w20, [x26, #8]
  4173b0:	ldr	x21, [sp, #160]
  4173b4:	ldr	x20, [sp, #168]
  4173b8:	mov	x7, x21
  4173bc:	ldp	x27, x21, [x19]
  4173c0:	str	x20, [sp]
  4173c4:	ldr	w26, [sp, #124]
  4173c8:	add	x6, sp, #0x80
  4173cc:	mov	x2, x24
  4173d0:	mov	x3, #0xffffffffffffffff    	// #-1
  4173d4:	orr	w26, w26, #0x1
  4173d8:	mov	w5, w26
  4173dc:	mov	x1, x27
  4173e0:	mov	x0, x21
  4173e4:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4173e8:	cmp	x27, x0
  4173ec:	b.hi	41743c <wcrtomb@plt+0x146fc>  // b.pmore
  4173f0:	add	x20, x0, #0x1
  4173f4:	str	x20, [x19]
  4173f8:	cmp	x21, x22
  4173fc:	b.eq	417408 <wcrtomb@plt+0x146c8>  // b.none
  417400:	mov	x0, x21
  417404:	bl	402ae0 <free@plt>
  417408:	mov	x0, x20
  41740c:	bl	418630 <wcrtomb@plt+0x158f0>
  417410:	ldp	x7, x1, [sp, #160]
  417414:	str	x0, [x19, #8]
  417418:	ldr	w4, [sp, #120]
  41741c:	mov	x21, x0
  417420:	str	x1, [sp]
  417424:	add	x6, sp, #0x80
  417428:	mov	w5, w26
  41742c:	mov	x2, x24
  417430:	mov	x1, x20
  417434:	mov	x3, #0xffffffffffffffff    	// #-1
  417438:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41743c:	mov	x0, x21
  417440:	ldp	x29, x30, [sp, #16]
  417444:	ldp	x19, x20, [sp, #32]
  417448:	ldp	x21, x22, [sp, #48]
  41744c:	ldr	x27, [sp, #96]
  417450:	str	w25, [x23]
  417454:	ldp	x23, x24, [sp, #64]
  417458:	ldp	x25, x26, [sp, #80]
  41745c:	add	sp, sp, #0xb0
  417460:	ret
  417464:	mov	x1, #0x10                  	// #16
  417468:	mov	x0, #0x0                   	// #0
  41746c:	bl	418660 <wcrtomb@plt+0x15920>
  417470:	mov	x19, x0
  417474:	str	x0, [x27, #1168]
  417478:	ldp	x0, x1, [x26, #16]
  41747c:	stp	x0, x1, [x19]
  417480:	b	41738c <wcrtomb@plt+0x1464c>
  417484:	bl	4029e0 <abort@plt>
  417488:	sub	sp, sp, #0xb0
  41748c:	cmp	x0, #0x0
  417490:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  417494:	stp	x29, x30, [sp, #16]
  417498:	add	x29, sp, #0x10
  41749c:	stp	x21, x22, [sp, #48]
  4174a0:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  4174a4:	add	x22, x22, #0x7b0
  4174a8:	mov	x21, x0
  4174ac:	stp	x19, x20, [sp, #32]
  4174b0:	mov	w19, #0xa                   	// #10
  4174b4:	ldp	x6, x7, [x22, #256]
  4174b8:	stp	x6, x7, [sp, #120]
  4174bc:	add	x4, x22, #0x100
  4174c0:	ldp	x6, x7, [x4, #16]
  4174c4:	stp	x23, x24, [sp, #64]
  4174c8:	ldp	x8, x9, [x4, #32]
  4174cc:	stp	x25, x26, [sp, #80]
  4174d0:	ldr	x0, [x4, #48]
  4174d4:	stp	x27, x28, [sp, #96]
  4174d8:	str	w19, [sp, #120]
  4174dc:	stp	x6, x7, [sp, #136]
  4174e0:	stp	x8, x9, [sp, #152]
  4174e4:	str	x0, [sp, #168]
  4174e8:	b.eq	41763c <wcrtomb@plt+0x148fc>  // b.none
  4174ec:	adrp	x28, 441000 <_obstack_memory_used@@Base+0x282f0>
  4174f0:	add	x27, x28, #0x490
  4174f4:	mov	x20, x1
  4174f8:	mov	x24, x2
  4174fc:	mov	x25, x3
  417500:	stp	x21, x1, [sp, #160]
  417504:	bl	402cb0 <__errno_location@plt>
  417508:	ldr	w1, [x27, #8]
  41750c:	mov	w4, w19
  417510:	ldr	w26, [x0]
  417514:	mov	x23, x0
  417518:	ldr	x19, [x28, #1168]
  41751c:	cmp	w1, #0x0
  417520:	b.gt	417570 <wcrtomb@plt+0x14830>
  417524:	add	x0, x27, #0x10
  417528:	cmp	x19, x0
  41752c:	b.eq	41761c <wcrtomb@plt+0x148dc>  // b.none
  417530:	mov	x0, x19
  417534:	mov	x1, #0x10                  	// #16
  417538:	bl	418660 <wcrtomb@plt+0x15920>
  41753c:	mov	x19, x0
  417540:	str	x0, [x28, #1168]
  417544:	ldr	w0, [x27, #8]
  417548:	mov	w20, #0x1                   	// #1
  41754c:	mov	w1, #0x0                   	// #0
  417550:	sub	w2, w20, w0
  417554:	add	x0, x19, w0, sxtw #4
  417558:	sbfiz	x2, x2, #4, #32
  41755c:	bl	4028d0 <memset@plt>
  417560:	ldr	w4, [sp, #120]
  417564:	str	w20, [x27, #8]
  417568:	ldr	x21, [sp, #160]
  41756c:	ldr	x20, [sp, #168]
  417570:	mov	x7, x21
  417574:	ldp	x28, x21, [x19]
  417578:	str	x20, [sp]
  41757c:	ldr	w27, [sp, #124]
  417580:	add	x6, sp, #0x80
  417584:	mov	x3, x25
  417588:	mov	x2, x24
  41758c:	orr	w27, w27, #0x1
  417590:	mov	w5, w27
  417594:	mov	x1, x28
  417598:	mov	x0, x21
  41759c:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4175a0:	cmp	x28, x0
  4175a4:	b.hi	4175f4 <wcrtomb@plt+0x148b4>  // b.pmore
  4175a8:	add	x20, x0, #0x1
  4175ac:	str	x20, [x19]
  4175b0:	cmp	x21, x22
  4175b4:	b.eq	4175c0 <wcrtomb@plt+0x14880>  // b.none
  4175b8:	mov	x0, x21
  4175bc:	bl	402ae0 <free@plt>
  4175c0:	mov	x0, x20
  4175c4:	bl	418630 <wcrtomb@plt+0x158f0>
  4175c8:	ldp	x7, x1, [sp, #160]
  4175cc:	str	x0, [x19, #8]
  4175d0:	ldr	w4, [sp, #120]
  4175d4:	mov	x21, x0
  4175d8:	str	x1, [sp]
  4175dc:	add	x6, sp, #0x80
  4175e0:	mov	w5, w27
  4175e4:	mov	x3, x25
  4175e8:	mov	x2, x24
  4175ec:	mov	x1, x20
  4175f0:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4175f4:	mov	x0, x21
  4175f8:	ldp	x29, x30, [sp, #16]
  4175fc:	ldp	x19, x20, [sp, #32]
  417600:	ldp	x21, x22, [sp, #48]
  417604:	ldp	x27, x28, [sp, #96]
  417608:	str	w26, [x23]
  41760c:	ldp	x23, x24, [sp, #64]
  417610:	ldp	x25, x26, [sp, #80]
  417614:	add	sp, sp, #0xb0
  417618:	ret
  41761c:	mov	x1, #0x10                  	// #16
  417620:	mov	x0, #0x0                   	// #0
  417624:	bl	418660 <wcrtomb@plt+0x15920>
  417628:	mov	x19, x0
  41762c:	str	x0, [x28, #1168]
  417630:	ldp	x0, x1, [x27, #16]
  417634:	stp	x0, x1, [x19]
  417638:	b	417544 <wcrtomb@plt+0x14804>
  41763c:	bl	4029e0 <abort@plt>
  417640:	sub	sp, sp, #0x80
  417644:	stp	x29, x30, [sp, #16]
  417648:	add	x29, sp, #0x10
  41764c:	stp	x19, x20, [sp, #32]
  417650:	mov	w19, w0
  417654:	stp	x21, x22, [sp, #48]
  417658:	stp	x23, x24, [sp, #64]
  41765c:	mov	x23, x1
  417660:	mov	x24, x2
  417664:	stp	x25, x26, [sp, #80]
  417668:	adrp	x26, 441000 <_obstack_memory_used@@Base+0x282f0>
  41766c:	stp	x27, x28, [sp, #96]
  417670:	bl	402cb0 <__errno_location@plt>
  417674:	mov	x22, x0
  417678:	ldr	w0, [x0]
  41767c:	str	w0, [sp, #124]
  417680:	ldr	x21, [x26, #1168]
  417684:	tbnz	w19, #31, 4177c8 <wcrtomb@plt+0x14a88>
  417688:	add	x20, x26, #0x490
  41768c:	ldr	w0, [x20, #8]
  417690:	cmp	w19, w0
  417694:	b.lt	4176e4 <wcrtomb@plt+0x149a4>  // b.tstop
  417698:	mov	w0, #0x7fffffff            	// #2147483647
  41769c:	cmp	w19, w0
  4176a0:	b.eq	4177c4 <wcrtomb@plt+0x14a84>  // b.none
  4176a4:	add	w27, w19, #0x1
  4176a8:	add	x0, x20, #0x10
  4176ac:	cmp	x21, x0
  4176b0:	sbfiz	x1, x27, #4, #32
  4176b4:	b.eq	4177a8 <wcrtomb@plt+0x14a68>  // b.none
  4176b8:	mov	x0, x21
  4176bc:	bl	418660 <wcrtomb@plt+0x15920>
  4176c0:	mov	x21, x0
  4176c4:	str	x0, [x26, #1168]
  4176c8:	ldr	w0, [x20, #8]
  4176cc:	mov	w1, #0x0                   	// #0
  4176d0:	sub	w2, w27, w0
  4176d4:	add	x0, x21, w0, sxtw #4
  4176d8:	sbfiz	x2, x2, #4, #32
  4176dc:	bl	4028d0 <memset@plt>
  4176e0:	str	w27, [x20, #8]
  4176e4:	sbfiz	x19, x19, #4, #32
  4176e8:	add	x6, x20, #0x28
  4176ec:	add	x26, x21, x19
  4176f0:	mov	x3, x24
  4176f4:	ldp	x7, x0, [x20, #72]
  4176f8:	mov	x2, x23
  4176fc:	ldp	w4, w5, [x20, #32]
  417700:	ldr	x27, [x21, x19]
  417704:	orr	w25, w5, #0x1
  417708:	ldr	x28, [x26, #8]
  41770c:	str	x0, [sp]
  417710:	mov	x1, x27
  417714:	mov	w5, w25
  417718:	mov	x0, x28
  41771c:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417720:	cmp	x27, x0
  417724:	b.hi	41777c <wcrtomb@plt+0x14a3c>  // b.pmore
  417728:	add	x27, x0, #0x1
  41772c:	str	x27, [x21, x19]
  417730:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  417734:	add	x0, x0, #0x7b0
  417738:	cmp	x28, x0
  41773c:	b.eq	417748 <wcrtomb@plt+0x14a08>  // b.none
  417740:	mov	x0, x28
  417744:	bl	402ae0 <free@plt>
  417748:	mov	x0, x27
  41774c:	bl	418630 <wcrtomb@plt+0x158f0>
  417750:	ldp	x7, x1, [x20, #72]
  417754:	str	x0, [x26, #8]
  417758:	ldr	w4, [x20, #32]
  41775c:	mov	x28, x0
  417760:	str	x1, [sp]
  417764:	mov	w5, w25
  417768:	mov	x3, x24
  41776c:	mov	x2, x23
  417770:	add	x6, x20, #0x28
  417774:	mov	x1, x27
  417778:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41777c:	ldr	w0, [sp, #124]
  417780:	ldp	x29, x30, [sp, #16]
  417784:	ldp	x19, x20, [sp, #32]
  417788:	ldp	x23, x24, [sp, #64]
  41778c:	ldp	x25, x26, [sp, #80]
  417790:	str	w0, [x22]
  417794:	mov	x0, x28
  417798:	ldp	x21, x22, [sp, #48]
  41779c:	ldp	x27, x28, [sp, #96]
  4177a0:	add	sp, sp, #0x80
  4177a4:	ret
  4177a8:	mov	x0, #0x0                   	// #0
  4177ac:	bl	418660 <wcrtomb@plt+0x15920>
  4177b0:	mov	x21, x0
  4177b4:	str	x0, [x26, #1168]
  4177b8:	ldp	x0, x1, [x20, #16]
  4177bc:	stp	x0, x1, [x21]
  4177c0:	b	4176c8 <wcrtomb@plt+0x14988>
  4177c4:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4177c8:	bl	4029e0 <abort@plt>
  4177cc:	nop
  4177d0:	sub	sp, sp, #0x70
  4177d4:	stp	x29, x30, [sp, #16]
  4177d8:	add	x29, sp, #0x10
  4177dc:	stp	x19, x20, [sp, #32]
  4177e0:	stp	x21, x22, [sp, #48]
  4177e4:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  4177e8:	add	x19, x21, #0x490
  4177ec:	stp	x23, x24, [sp, #64]
  4177f0:	mov	x24, x0
  4177f4:	stp	x25, x26, [sp, #80]
  4177f8:	mov	x25, x1
  4177fc:	str	x27, [sp, #96]
  417800:	bl	402cb0 <__errno_location@plt>
  417804:	mov	x23, x0
  417808:	ldr	w0, [x19, #8]
  41780c:	ldr	x20, [x21, #1168]
  417810:	cmp	w0, #0x0
  417814:	ldr	w26, [x23]
  417818:	b.gt	41785c <wcrtomb@plt+0x14b1c>
  41781c:	add	x0, x19, #0x10
  417820:	cmp	x20, x0
  417824:	b.eq	417910 <wcrtomb@plt+0x14bd0>  // b.none
  417828:	mov	x0, x20
  41782c:	mov	x1, #0x10                  	// #16
  417830:	bl	418660 <wcrtomb@plt+0x15920>
  417834:	mov	x20, x0
  417838:	str	x0, [x21, #1168]
  41783c:	ldr	w0, [x19, #8]
  417840:	mov	w21, #0x1                   	// #1
  417844:	mov	w1, #0x0                   	// #0
  417848:	sub	w2, w21, w0
  41784c:	add	x0, x20, w0, sxtw #4
  417850:	sbfiz	x2, x2, #4, #32
  417854:	bl	4028d0 <memset@plt>
  417858:	str	w21, [x19, #8]
  41785c:	ldp	x21, x22, [x20]
  417860:	add	x6, x19, #0x28
  417864:	ldp	x7, x0, [x19, #72]
  417868:	str	x0, [sp]
  41786c:	ldp	w4, w27, [x19, #32]
  417870:	mov	x3, x25
  417874:	mov	x2, x24
  417878:	mov	x1, x21
  41787c:	orr	w27, w27, #0x1
  417880:	mov	x0, x22
  417884:	mov	w5, w27
  417888:	bl	414a38 <wcrtomb@plt+0x11cf8>
  41788c:	cmp	x21, x0
  417890:	b.hi	4178e8 <wcrtomb@plt+0x14ba8>  // b.pmore
  417894:	add	x21, x0, #0x1
  417898:	str	x21, [x20]
  41789c:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4178a0:	add	x0, x0, #0x7b0
  4178a4:	cmp	x22, x0
  4178a8:	b.eq	4178b4 <wcrtomb@plt+0x14b74>  // b.none
  4178ac:	mov	x0, x22
  4178b0:	bl	402ae0 <free@plt>
  4178b4:	mov	x0, x21
  4178b8:	bl	418630 <wcrtomb@plt+0x158f0>
  4178bc:	ldp	x7, x1, [x19, #72]
  4178c0:	str	x0, [x20, #8]
  4178c4:	ldr	w4, [x19, #32]
  4178c8:	mov	x22, x0
  4178cc:	str	x1, [sp]
  4178d0:	mov	w5, w27
  4178d4:	mov	x3, x25
  4178d8:	mov	x2, x24
  4178dc:	add	x6, x19, #0x28
  4178e0:	mov	x1, x21
  4178e4:	bl	414a38 <wcrtomb@plt+0x11cf8>
  4178e8:	mov	x0, x22
  4178ec:	ldp	x29, x30, [sp, #16]
  4178f0:	ldp	x19, x20, [sp, #32]
  4178f4:	ldp	x21, x22, [sp, #48]
  4178f8:	ldr	x27, [sp, #96]
  4178fc:	str	w26, [x23]
  417900:	ldp	x23, x24, [sp, #64]
  417904:	ldp	x25, x26, [sp, #80]
  417908:	add	sp, sp, #0x70
  41790c:	ret
  417910:	mov	x1, #0x10                  	// #16
  417914:	mov	x0, #0x0                   	// #0
  417918:	bl	418660 <wcrtomb@plt+0x15920>
  41791c:	mov	x20, x0
  417920:	str	x0, [x21, #1168]
  417924:	ldp	x0, x1, [x19, #16]
  417928:	stp	x0, x1, [x20]
  41792c:	b	41783c <wcrtomb@plt+0x14afc>
  417930:	sub	sp, sp, #0x70
  417934:	stp	x29, x30, [sp, #16]
  417938:	add	x29, sp, #0x10
  41793c:	stp	x21, x22, [sp, #48]
  417940:	adrp	x22, 441000 <_obstack_memory_used@@Base+0x282f0>
  417944:	stp	x19, x20, [sp, #32]
  417948:	mov	w19, w0
  41794c:	stp	x23, x24, [sp, #64]
  417950:	mov	x24, x1
  417954:	stp	x25, x26, [sp, #80]
  417958:	stp	x27, x28, [sp, #96]
  41795c:	bl	402cb0 <__errno_location@plt>
  417960:	ldr	w25, [x0]
  417964:	ldr	x21, [x22, #1168]
  417968:	tbnz	w19, #31, 417aac <wcrtomb@plt+0x14d6c>
  41796c:	add	x20, x22, #0x490
  417970:	mov	x23, x0
  417974:	ldr	w0, [x20, #8]
  417978:	cmp	w19, w0
  41797c:	b.lt	4179cc <wcrtomb@plt+0x14c8c>  // b.tstop
  417980:	mov	w0, #0x7fffffff            	// #2147483647
  417984:	cmp	w19, w0
  417988:	b.eq	417aa8 <wcrtomb@plt+0x14d68>  // b.none
  41798c:	add	w26, w19, #0x1
  417990:	add	x0, x20, #0x10
  417994:	cmp	x21, x0
  417998:	sbfiz	x1, x26, #4, #32
  41799c:	b.eq	417a8c <wcrtomb@plt+0x14d4c>  // b.none
  4179a0:	mov	x0, x21
  4179a4:	bl	418660 <wcrtomb@plt+0x15920>
  4179a8:	mov	x21, x0
  4179ac:	str	x0, [x22, #1168]
  4179b0:	ldr	w0, [x20, #8]
  4179b4:	mov	w1, #0x0                   	// #0
  4179b8:	sub	w2, w26, w0
  4179bc:	add	x0, x21, w0, sxtw #4
  4179c0:	sbfiz	x2, x2, #4, #32
  4179c4:	bl	4028d0 <memset@plt>
  4179c8:	str	w26, [x20, #8]
  4179cc:	sbfiz	x19, x19, #4, #32
  4179d0:	add	x6, x20, #0x28
  4179d4:	add	x26, x21, x19
  4179d8:	mov	x2, x24
  4179dc:	ldp	x7, x0, [x20, #72]
  4179e0:	mov	x3, #0xffffffffffffffff    	// #-1
  4179e4:	ldp	w4, w28, [x20, #32]
  4179e8:	ldr	x22, [x21, x19]
  4179ec:	orr	w28, w28, #0x1
  4179f0:	ldr	x27, [x26, #8]
  4179f4:	str	x0, [sp]
  4179f8:	mov	x1, x22
  4179fc:	mov	w5, w28
  417a00:	mov	x0, x27
  417a04:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417a08:	cmp	x22, x0
  417a0c:	b.hi	417a64 <wcrtomb@plt+0x14d24>  // b.pmore
  417a10:	add	x22, x0, #0x1
  417a14:	str	x22, [x21, x19]
  417a18:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  417a1c:	add	x0, x0, #0x7b0
  417a20:	cmp	x27, x0
  417a24:	b.eq	417a30 <wcrtomb@plt+0x14cf0>  // b.none
  417a28:	mov	x0, x27
  417a2c:	bl	402ae0 <free@plt>
  417a30:	mov	x0, x22
  417a34:	bl	418630 <wcrtomb@plt+0x158f0>
  417a38:	ldp	x7, x1, [x20, #72]
  417a3c:	str	x0, [x26, #8]
  417a40:	ldr	w4, [x20, #32]
  417a44:	mov	x27, x0
  417a48:	str	x1, [sp]
  417a4c:	mov	w5, w28
  417a50:	mov	x2, x24
  417a54:	add	x6, x20, #0x28
  417a58:	mov	x1, x22
  417a5c:	mov	x3, #0xffffffffffffffff    	// #-1
  417a60:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417a64:	mov	x0, x27
  417a68:	ldp	x29, x30, [sp, #16]
  417a6c:	ldp	x19, x20, [sp, #32]
  417a70:	ldp	x21, x22, [sp, #48]
  417a74:	ldp	x27, x28, [sp, #96]
  417a78:	str	w25, [x23]
  417a7c:	ldp	x23, x24, [sp, #64]
  417a80:	ldp	x25, x26, [sp, #80]
  417a84:	add	sp, sp, #0x70
  417a88:	ret
  417a8c:	mov	x0, #0x0                   	// #0
  417a90:	bl	418660 <wcrtomb@plt+0x15920>
  417a94:	mov	x21, x0
  417a98:	str	x0, [x22, #1168]
  417a9c:	ldp	x0, x1, [x20, #16]
  417aa0:	stp	x0, x1, [x21]
  417aa4:	b	4179b0 <wcrtomb@plt+0x14c70>
  417aa8:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  417aac:	bl	4029e0 <abort@plt>
  417ab0:	sub	sp, sp, #0x60
  417ab4:	stp	x29, x30, [sp, #16]
  417ab8:	add	x29, sp, #0x10
  417abc:	stp	x19, x20, [sp, #32]
  417ac0:	stp	x21, x22, [sp, #48]
  417ac4:	adrp	x21, 441000 <_obstack_memory_used@@Base+0x282f0>
  417ac8:	add	x19, x21, #0x490
  417acc:	stp	x23, x24, [sp, #64]
  417ad0:	mov	x24, x0
  417ad4:	stp	x25, x26, [sp, #80]
  417ad8:	bl	402cb0 <__errno_location@plt>
  417adc:	mov	x23, x0
  417ae0:	ldr	w0, [x19, #8]
  417ae4:	ldr	x20, [x21, #1168]
  417ae8:	cmp	w0, #0x0
  417aec:	ldr	w25, [x23]
  417af0:	b.gt	417b34 <wcrtomb@plt+0x14df4>
  417af4:	add	x0, x19, #0x10
  417af8:	cmp	x20, x0
  417afc:	b.eq	417be4 <wcrtomb@plt+0x14ea4>  // b.none
  417b00:	mov	x0, x20
  417b04:	mov	x1, #0x10                  	// #16
  417b08:	bl	418660 <wcrtomb@plt+0x15920>
  417b0c:	mov	x20, x0
  417b10:	str	x0, [x21, #1168]
  417b14:	ldr	w0, [x19, #8]
  417b18:	mov	w21, #0x1                   	// #1
  417b1c:	mov	w1, #0x0                   	// #0
  417b20:	sub	w2, w21, w0
  417b24:	add	x0, x20, w0, sxtw #4
  417b28:	sbfiz	x2, x2, #4, #32
  417b2c:	bl	4028d0 <memset@plt>
  417b30:	str	w21, [x19, #8]
  417b34:	ldp	x21, x22, [x20]
  417b38:	add	x6, x19, #0x28
  417b3c:	ldp	x7, x0, [x19, #72]
  417b40:	str	x0, [sp]
  417b44:	ldp	w4, w26, [x19, #32]
  417b48:	mov	x2, x24
  417b4c:	mov	x1, x21
  417b50:	mov	x0, x22
  417b54:	orr	w26, w26, #0x1
  417b58:	mov	x3, #0xffffffffffffffff    	// #-1
  417b5c:	mov	w5, w26
  417b60:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417b64:	cmp	x21, x0
  417b68:	b.hi	417bc0 <wcrtomb@plt+0x14e80>  // b.pmore
  417b6c:	add	x21, x0, #0x1
  417b70:	str	x21, [x20]
  417b74:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  417b78:	add	x0, x0, #0x7b0
  417b7c:	cmp	x22, x0
  417b80:	b.eq	417b8c <wcrtomb@plt+0x14e4c>  // b.none
  417b84:	mov	x0, x22
  417b88:	bl	402ae0 <free@plt>
  417b8c:	mov	x0, x21
  417b90:	bl	418630 <wcrtomb@plt+0x158f0>
  417b94:	ldp	x7, x1, [x19, #72]
  417b98:	str	x0, [x20, #8]
  417b9c:	ldr	w4, [x19, #32]
  417ba0:	mov	x22, x0
  417ba4:	str	x1, [sp]
  417ba8:	mov	w5, w26
  417bac:	mov	x2, x24
  417bb0:	add	x6, x19, #0x28
  417bb4:	mov	x1, x21
  417bb8:	mov	x3, #0xffffffffffffffff    	// #-1
  417bbc:	bl	414a38 <wcrtomb@plt+0x11cf8>
  417bc0:	mov	x0, x22
  417bc4:	ldp	x29, x30, [sp, #16]
  417bc8:	ldp	x19, x20, [sp, #32]
  417bcc:	ldp	x21, x22, [sp, #48]
  417bd0:	str	w25, [x23]
  417bd4:	ldp	x23, x24, [sp, #64]
  417bd8:	ldp	x25, x26, [sp, #80]
  417bdc:	add	sp, sp, #0x60
  417be0:	ret
  417be4:	mov	x1, #0x10                  	// #16
  417be8:	mov	x0, #0x0                   	// #0
  417bec:	bl	418660 <wcrtomb@plt+0x15920>
  417bf0:	mov	x20, x0
  417bf4:	str	x0, [x21, #1168]
  417bf8:	ldp	x0, x1, [x19, #16]
  417bfc:	stp	x0, x1, [x20]
  417c00:	b	417b14 <wcrtomb@plt+0x14dd4>
  417c04:	nop
  417c08:	sub	sp, sp, #0x50
  417c0c:	stp	x29, x30, [sp, #32]
  417c10:	add	x29, sp, #0x20
  417c14:	stp	x19, x20, [sp, #48]
  417c18:	mov	x19, x5
  417c1c:	mov	x20, x0
  417c20:	str	x21, [sp, #64]
  417c24:	mov	x5, x3
  417c28:	mov	x21, x4
  417c2c:	cbz	x1, 417e30 <wcrtomb@plt+0x150f0>
  417c30:	mov	x4, x2
  417c34:	mov	x3, x1
  417c38:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417c3c:	mov	w1, #0x1                   	// #1
  417c40:	add	x2, x2, #0x8f8
  417c44:	bl	402a90 <__fprintf_chk@plt>
  417c48:	mov	w2, #0x5                   	// #5
  417c4c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417c50:	mov	x0, #0x0                   	// #0
  417c54:	add	x1, x1, #0x910
  417c58:	bl	402c20 <dcgettext@plt>
  417c5c:	mov	x3, x0
  417c60:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417c64:	add	x2, x2, #0xc20
  417c68:	mov	w4, #0x7e4                 	// #2020
  417c6c:	mov	w1, #0x1                   	// #1
  417c70:	mov	x0, x20
  417c74:	bl	402a90 <__fprintf_chk@plt>
  417c78:	mov	x1, x20
  417c7c:	mov	w0, #0xa                   	// #10
  417c80:	bl	402bd0 <fputc_unlocked@plt>
  417c84:	mov	w2, #0x5                   	// #5
  417c88:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417c8c:	mov	x0, #0x0                   	// #0
  417c90:	add	x1, x1, #0x918
  417c94:	bl	402c20 <dcgettext@plt>
  417c98:	mov	x2, x0
  417c9c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417ca0:	add	x3, x3, #0x9c8
  417ca4:	mov	w1, #0x1                   	// #1
  417ca8:	mov	x0, x20
  417cac:	bl	402a90 <__fprintf_chk@plt>
  417cb0:	mov	x1, x20
  417cb4:	mov	w0, #0xa                   	// #10
  417cb8:	bl	402bd0 <fputc_unlocked@plt>
  417cbc:	cmp	x19, #0x5
  417cc0:	b.eq	417e4c <wcrtomb@plt+0x1510c>  // b.none
  417cc4:	b.hi	417d18 <wcrtomb@plt+0x14fd8>  // b.pmore
  417cc8:	cmp	x19, #0x2
  417ccc:	b.eq	417e8c <wcrtomb@plt+0x1514c>  // b.none
  417cd0:	b.ls	417d8c <wcrtomb@plt+0x1504c>  // b.plast
  417cd4:	cmp	x19, #0x3
  417cd8:	b.eq	417f0c <wcrtomb@plt+0x151cc>  // b.none
  417cdc:	mov	w2, #0x5                   	// #5
  417ce0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417ce4:	mov	x0, #0x0                   	// #0
  417ce8:	add	x1, x1, #0xa38
  417cec:	bl	402c20 <dcgettext@plt>
  417cf0:	mov	x2, x0
  417cf4:	mov	x0, x20
  417cf8:	mov	w1, #0x1                   	// #1
  417cfc:	ldp	x3, x4, [x21]
  417d00:	ldp	x5, x6, [x21, #16]
  417d04:	ldp	x29, x30, [sp, #32]
  417d08:	ldp	x19, x20, [sp, #48]
  417d0c:	ldr	x21, [sp, #64]
  417d10:	add	sp, sp, #0x50
  417d14:	b	402a90 <__fprintf_chk@plt>
  417d18:	cmp	x19, #0x8
  417d1c:	b.eq	417f48 <wcrtomb@plt+0x15208>  // b.none
  417d20:	b.ls	417dd0 <wcrtomb@plt+0x15090>  // b.plast
  417d24:	cmp	x19, #0x9
  417d28:	b.ne	417efc <wcrtomb@plt+0x151bc>  // b.any
  417d2c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417d30:	add	x1, x1, #0xb08
  417d34:	mov	w2, #0x5                   	// #5
  417d38:	mov	x0, #0x0                   	// #0
  417d3c:	bl	402c20 <dcgettext@plt>
  417d40:	ldp	x7, x8, [x21, #32]
  417d44:	mov	x2, x0
  417d48:	ldp	x3, x4, [x21]
  417d4c:	mov	x0, x20
  417d50:	ldp	x5, x6, [x21, #16]
  417d54:	str	x8, [sp]
  417d58:	mov	w1, #0x1                   	// #1
  417d5c:	ldr	x8, [x21, #48]
  417d60:	str	x8, [sp, #8]
  417d64:	ldr	x8, [x21, #56]
  417d68:	str	x8, [sp, #16]
  417d6c:	ldr	x8, [x21, #64]
  417d70:	str	x8, [sp, #24]
  417d74:	bl	402a90 <__fprintf_chk@plt>
  417d78:	ldp	x29, x30, [sp, #32]
  417d7c:	ldp	x19, x20, [sp, #48]
  417d80:	ldr	x21, [sp, #64]
  417d84:	add	sp, sp, #0x50
  417d88:	ret
  417d8c:	cbz	x19, 417e1c <wcrtomb@plt+0x150dc>
  417d90:	cmp	x19, #0x1
  417d94:	b.ne	417efc <wcrtomb@plt+0x151bc>  // b.any
  417d98:	mov	w2, #0x5                   	// #5
  417d9c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417da0:	mov	x0, #0x0                   	// #0
  417da4:	add	x1, x1, #0x9f0
  417da8:	bl	402c20 <dcgettext@plt>
  417dac:	mov	x2, x0
  417db0:	mov	w1, w19
  417db4:	mov	x0, x20
  417db8:	ldp	x29, x30, [sp, #32]
  417dbc:	ldp	x19, x20, [sp, #48]
  417dc0:	ldr	x3, [x21]
  417dc4:	ldr	x21, [sp, #64]
  417dc8:	add	sp, sp, #0x50
  417dcc:	b	402a90 <__fprintf_chk@plt>
  417dd0:	cmp	x19, #0x6
  417dd4:	b.eq	417ec4 <wcrtomb@plt+0x15184>  // b.none
  417dd8:	cmp	x19, #0x7
  417ddc:	b.ne	417efc <wcrtomb@plt+0x151bc>  // b.any
  417de0:	mov	w2, #0x5                   	// #5
  417de4:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417de8:	mov	x0, #0x0                   	// #0
  417dec:	add	x1, x1, #0xaa8
  417df0:	bl	402c20 <dcgettext@plt>
  417df4:	mov	x2, x0
  417df8:	ldp	x7, x8, [x21, #32]
  417dfc:	mov	x0, x20
  417e00:	ldp	x3, x4, [x21]
  417e04:	mov	w1, #0x1                   	// #1
  417e08:	ldp	x5, x6, [x21, #16]
  417e0c:	str	x8, [sp]
  417e10:	ldr	x8, [x21, #48]
  417e14:	str	x8, [sp, #8]
  417e18:	bl	402a90 <__fprintf_chk@plt>
  417e1c:	ldp	x29, x30, [sp, #32]
  417e20:	ldp	x19, x20, [sp, #48]
  417e24:	ldr	x21, [sp, #64]
  417e28:	add	sp, sp, #0x50
  417e2c:	ret
  417e30:	mov	x4, x3
  417e34:	mov	w1, #0x1                   	// #1
  417e38:	mov	x3, x2
  417e3c:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417e40:	add	x2, x2, #0x908
  417e44:	bl	402a90 <__fprintf_chk@plt>
  417e48:	b	417c48 <wcrtomb@plt+0x14f08>
  417e4c:	mov	w2, w19
  417e50:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417e54:	mov	x0, #0x0                   	// #0
  417e58:	add	x1, x1, #0xa58
  417e5c:	bl	402c20 <dcgettext@plt>
  417e60:	mov	x2, x0
  417e64:	mov	x0, x20
  417e68:	mov	w1, #0x1                   	// #1
  417e6c:	ldp	x3, x4, [x21]
  417e70:	ldp	x5, x6, [x21, #16]
  417e74:	ldp	x29, x30, [sp, #32]
  417e78:	ldp	x19, x20, [sp, #48]
  417e7c:	ldr	x7, [x21, #32]
  417e80:	ldr	x21, [sp, #64]
  417e84:	add	sp, sp, #0x50
  417e88:	b	402a90 <__fprintf_chk@plt>
  417e8c:	mov	w2, #0x5                   	// #5
  417e90:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417e94:	mov	x0, #0x0                   	// #0
  417e98:	add	x1, x1, #0xa00
  417e9c:	bl	402c20 <dcgettext@plt>
  417ea0:	mov	x2, x0
  417ea4:	mov	x0, x20
  417ea8:	mov	w1, #0x1                   	// #1
  417eac:	ldp	x3, x4, [x21]
  417eb0:	ldp	x29, x30, [sp, #32]
  417eb4:	ldp	x19, x20, [sp, #48]
  417eb8:	ldr	x21, [sp, #64]
  417ebc:	add	sp, sp, #0x50
  417ec0:	b	402a90 <__fprintf_chk@plt>
  417ec4:	mov	w2, #0x5                   	// #5
  417ec8:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417ecc:	mov	x0, #0x0                   	// #0
  417ed0:	add	x1, x1, #0xa80
  417ed4:	bl	402c20 <dcgettext@plt>
  417ed8:	mov	x2, x0
  417edc:	ldp	x3, x4, [x21]
  417ee0:	mov	x0, x20
  417ee4:	ldp	x5, x6, [x21, #16]
  417ee8:	mov	w1, #0x1                   	// #1
  417eec:	ldp	x7, x8, [x21, #32]
  417ef0:	str	x8, [sp]
  417ef4:	bl	402a90 <__fprintf_chk@plt>
  417ef8:	b	417e1c <wcrtomb@plt+0x150dc>
  417efc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417f00:	mov	w2, #0x5                   	// #5
  417f04:	add	x1, x1, #0xb40
  417f08:	b	417d38 <wcrtomb@plt+0x14ff8>
  417f0c:	mov	w2, #0x5                   	// #5
  417f10:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417f14:	mov	x0, #0x0                   	// #0
  417f18:	add	x1, x1, #0xa18
  417f1c:	bl	402c20 <dcgettext@plt>
  417f20:	mov	x2, x0
  417f24:	mov	x0, x20
  417f28:	mov	w1, #0x1                   	// #1
  417f2c:	ldp	x3, x4, [x21]
  417f30:	ldp	x29, x30, [sp, #32]
  417f34:	ldp	x19, x20, [sp, #48]
  417f38:	ldr	x5, [x21, #16]
  417f3c:	ldr	x21, [sp, #64]
  417f40:	add	sp, sp, #0x50
  417f44:	b	402a90 <__fprintf_chk@plt>
  417f48:	mov	w2, #0x5                   	// #5
  417f4c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  417f50:	mov	x0, #0x0                   	// #0
  417f54:	add	x1, x1, #0xad8
  417f58:	bl	402c20 <dcgettext@plt>
  417f5c:	mov	x2, x0
  417f60:	ldp	x7, x8, [x21, #32]
  417f64:	mov	x0, x20
  417f68:	ldp	x3, x4, [x21]
  417f6c:	mov	w1, #0x1                   	// #1
  417f70:	ldp	x5, x6, [x21, #16]
  417f74:	str	x8, [sp]
  417f78:	ldr	x8, [x21, #48]
  417f7c:	str	x8, [sp, #8]
  417f80:	ldr	x8, [x21, #56]
  417f84:	str	x8, [sp, #16]
  417f88:	bl	402a90 <__fprintf_chk@plt>
  417f8c:	b	417e1c <wcrtomb@plt+0x150dc>
  417f90:	ldr	x5, [x4]
  417f94:	cbz	x5, 417fb0 <wcrtomb@plt+0x15270>
  417f98:	mov	x5, #0x0                   	// #0
  417f9c:	nop
  417fa0:	add	x5, x5, #0x1
  417fa4:	ldr	x6, [x4, x5, lsl #3]
  417fa8:	cbnz	x6, 417fa0 <wcrtomb@plt+0x15260>
  417fac:	b	417c08 <wcrtomb@plt+0x14ec8>
  417fb0:	mov	x5, #0x0                   	// #0
  417fb4:	b	417c08 <wcrtomb@plt+0x14ec8>
  417fb8:	stp	x29, x30, [sp, #-96]!
  417fbc:	mov	x29, sp
  417fc0:	ldp	x6, x8, [x4]
  417fc4:	ldr	w7, [x4, #24]
  417fc8:	add	x5, x6, #0xf
  417fcc:	and	x5, x5, #0xfffffffffffffff8
  417fd0:	tbnz	w7, #31, 4180b8 <wcrtomb@plt+0x15378>
  417fd4:	ldr	x4, [x6]
  417fd8:	str	x4, [sp, #16]
  417fdc:	cbz	x4, 418108 <wcrtomb@plt+0x153c8>
  417fe0:	add	x4, x5, #0xf
  417fe4:	ldr	x5, [x5]
  417fe8:	str	x5, [sp, #24]
  417fec:	and	x4, x4, #0xfffffffffffffff8
  417ff0:	cbz	x5, 4180f4 <wcrtomb@plt+0x153b4>
  417ff4:	add	x5, x4, #0xf
  417ff8:	and	x5, x5, #0xfffffffffffffff8
  417ffc:	ldr	x4, [x4]
  418000:	str	x4, [sp, #32]
  418004:	cbz	x4, 4180a4 <wcrtomb@plt+0x15364>
  418008:	add	x6, x5, #0xf
  41800c:	and	x6, x6, #0xfffffffffffffff8
  418010:	ldr	x4, [x5]
  418014:	str	x4, [sp, #40]
  418018:	cbz	x4, 41811c <wcrtomb@plt+0x153dc>
  41801c:	ldr	x5, [x6]
  418020:	str	x5, [sp, #48]
  418024:	add	x4, x6, #0xf
  418028:	and	x4, x4, #0xfffffffffffffff8
  41802c:	cbz	x5, 418130 <wcrtomb@plt+0x153f0>
  418030:	add	x6, x4, #0xf
  418034:	and	x6, x6, #0xfffffffffffffff8
  418038:	ldr	x4, [x4]
  41803c:	str	x4, [sp, #56]
  418040:	cbz	x4, 418138 <wcrtomb@plt+0x153f8>
  418044:	ldr	x5, [x6]
  418048:	str	x5, [sp, #64]
  41804c:	add	x4, x6, #0xf
  418050:	and	x4, x4, #0xfffffffffffffff8
  418054:	cbz	x5, 418140 <wcrtomb@plt+0x15400>
  418058:	add	x5, x4, #0xf
  41805c:	and	x5, x5, #0xfffffffffffffff8
  418060:	ldr	x4, [x4]
  418064:	str	x4, [sp, #72]
  418068:	cbz	x4, 418148 <wcrtomb@plt+0x15408>
  41806c:	add	x6, x5, #0xf
  418070:	and	x6, x6, #0xfffffffffffffff8
  418074:	ldr	x4, [x5]
  418078:	str	x4, [sp, #80]
  41807c:	cbz	x4, 418150 <wcrtomb@plt+0x15410>
  418080:	ldr	x4, [x6]
  418084:	str	x4, [sp, #88]
  418088:	cmp	x4, #0x0
  41808c:	cset	x5, ne  // ne = any
  418090:	add	x5, x5, #0x9
  418094:	add	x4, sp, #0x10
  418098:	bl	417c08 <wcrtomb@plt+0x14ec8>
  41809c:	ldp	x29, x30, [sp], #96
  4180a0:	ret
  4180a4:	add	x4, sp, #0x10
  4180a8:	mov	x5, #0x2                   	// #2
  4180ac:	bl	417c08 <wcrtomb@plt+0x14ec8>
  4180b0:	ldp	x29, x30, [sp], #96
  4180b4:	ret
  4180b8:	add	w4, w7, #0x8
  4180bc:	cmp	w4, #0x0
  4180c0:	b.gt	417fd4 <wcrtomb@plt+0x15294>
  4180c4:	ldr	x9, [x8, w7, sxtw]
  4180c8:	str	x9, [sp, #16]
  4180cc:	cbz	x9, 418108 <wcrtomb@plt+0x153c8>
  4180d0:	cbz	w4, 418280 <wcrtomb@plt+0x15540>
  4180d4:	add	w9, w7, #0x10
  4180d8:	cmp	w9, #0x0
  4180dc:	b.le	418158 <wcrtomb@plt+0x15418>
  4180e0:	mov	x4, x5
  4180e4:	mov	x5, x6
  4180e8:	ldr	x5, [x5]
  4180ec:	str	x5, [sp, #24]
  4180f0:	cbnz	x5, 417ff4 <wcrtomb@plt+0x152b4>
  4180f4:	add	x4, sp, #0x10
  4180f8:	mov	x5, #0x1                   	// #1
  4180fc:	bl	417c08 <wcrtomb@plt+0x14ec8>
  418100:	ldp	x29, x30, [sp], #96
  418104:	ret
  418108:	add	x4, sp, #0x10
  41810c:	mov	x5, #0x0                   	// #0
  418110:	bl	417c08 <wcrtomb@plt+0x14ec8>
  418114:	ldp	x29, x30, [sp], #96
  418118:	ret
  41811c:	add	x4, sp, #0x10
  418120:	mov	x5, #0x3                   	// #3
  418124:	bl	417c08 <wcrtomb@plt+0x14ec8>
  418128:	ldp	x29, x30, [sp], #96
  41812c:	ret
  418130:	mov	x5, #0x4                   	// #4
  418134:	b	418094 <wcrtomb@plt+0x15354>
  418138:	mov	x5, #0x5                   	// #5
  41813c:	b	418094 <wcrtomb@plt+0x15354>
  418140:	mov	x5, #0x6                   	// #6
  418144:	b	418094 <wcrtomb@plt+0x15354>
  418148:	mov	x5, #0x7                   	// #7
  41814c:	b	418094 <wcrtomb@plt+0x15354>
  418150:	mov	x5, #0x8                   	// #8
  418154:	b	418094 <wcrtomb@plt+0x15354>
  418158:	ldr	x4, [x8, w4, sxtw]
  41815c:	str	x4, [sp, #24]
  418160:	cbz	x4, 4180f4 <wcrtomb@plt+0x153b4>
  418164:	cbz	w9, 4182a8 <wcrtomb@plt+0x15568>
  418168:	add	w10, w7, #0x18
  41816c:	mov	x4, x6
  418170:	cmp	w10, #0x0
  418174:	b.gt	417ffc <wcrtomb@plt+0x152bc>
  418178:	ldr	x4, [x8, w9, sxtw]
  41817c:	str	x4, [sp, #32]
  418180:	cbz	x4, 4180a4 <wcrtomb@plt+0x15364>
  418184:	cbz	w10, 4182a0 <wcrtomb@plt+0x15560>
  418188:	add	w4, w7, #0x20
  41818c:	cmp	w4, #0x0
  418190:	b.le	4181a4 <wcrtomb@plt+0x15464>
  418194:	add	x4, x6, #0xf
  418198:	mov	x5, x6
  41819c:	and	x6, x4, #0xfffffffffffffff8
  4181a0:	b	418010 <wcrtomb@plt+0x152d0>
  4181a4:	ldr	x5, [x8, w10, sxtw]
  4181a8:	str	x5, [sp, #40]
  4181ac:	cbz	x5, 41811c <wcrtomb@plt+0x153dc>
  4181b0:	cbz	w4, 41801c <wcrtomb@plt+0x152dc>
  4181b4:	add	w5, w7, #0x28
  4181b8:	cmp	w5, #0x0
  4181bc:	b.gt	41801c <wcrtomb@plt+0x152dc>
  4181c0:	ldr	x4, [x8, w4, sxtw]
  4181c4:	str	x4, [sp, #48]
  4181c8:	cbz	x4, 418130 <wcrtomb@plt+0x153f0>
  4181cc:	cbz	w5, 418298 <wcrtomb@plt+0x15558>
  4181d0:	add	w4, w7, #0x30
  4181d4:	cmp	w4, #0x0
  4181d8:	b.le	4181ec <wcrtomb@plt+0x154ac>
  4181dc:	add	x5, x6, #0xf
  4181e0:	mov	x4, x6
  4181e4:	and	x6, x5, #0xfffffffffffffff8
  4181e8:	b	418038 <wcrtomb@plt+0x152f8>
  4181ec:	ldr	x5, [x8, w5, sxtw]
  4181f0:	str	x5, [sp, #56]
  4181f4:	cbz	x5, 418138 <wcrtomb@plt+0x153f8>
  4181f8:	cbz	w4, 418044 <wcrtomb@plt+0x15304>
  4181fc:	add	w5, w7, #0x38
  418200:	cmp	w5, #0x0
  418204:	b.gt	418044 <wcrtomb@plt+0x15304>
  418208:	ldr	x4, [x8, w4, sxtw]
  41820c:	str	x4, [sp, #64]
  418210:	cbz	x4, 418140 <wcrtomb@plt+0x15400>
  418214:	cbz	w5, 418290 <wcrtomb@plt+0x15550>
  418218:	add	w9, w7, #0x40
  41821c:	cmp	w9, #0x0
  418220:	b.le	418234 <wcrtomb@plt+0x154f4>
  418224:	add	x5, x6, #0xf
  418228:	mov	x4, x6
  41822c:	and	x5, x5, #0xfffffffffffffff8
  418230:	b	418060 <wcrtomb@plt+0x15320>
  418234:	ldr	x4, [x8, w5, sxtw]
  418238:	str	x4, [sp, #72]
  41823c:	cbz	x4, 418148 <wcrtomb@plt+0x15408>
  418240:	cbz	w9, 418288 <wcrtomb@plt+0x15548>
  418244:	add	w4, w7, #0x48
  418248:	cmp	w4, #0x0
  41824c:	b.le	418260 <wcrtomb@plt+0x15520>
  418250:	add	x4, x6, #0xf
  418254:	mov	x5, x6
  418258:	and	x6, x4, #0xfffffffffffffff8
  41825c:	b	418074 <wcrtomb@plt+0x15334>
  418260:	ldr	x5, [x8, w9, sxtw]
  418264:	str	x5, [sp, #80]
  418268:	cbz	x5, 418150 <wcrtomb@plt+0x15410>
  41826c:	cbz	w4, 418080 <wcrtomb@plt+0x15340>
  418270:	add	x8, x8, w4, sxtw
  418274:	cmn	w7, #0x4f
  418278:	csel	x6, x8, x6, lt  // lt = tstop
  41827c:	b	418080 <wcrtomb@plt+0x15340>
  418280:	mov	x5, x6
  418284:	b	417fe0 <wcrtomb@plt+0x152a0>
  418288:	mov	x5, x6
  41828c:	b	41806c <wcrtomb@plt+0x1532c>
  418290:	mov	x4, x6
  418294:	b	418058 <wcrtomb@plt+0x15318>
  418298:	mov	x4, x6
  41829c:	b	418030 <wcrtomb@plt+0x152f0>
  4182a0:	mov	x5, x6
  4182a4:	b	418008 <wcrtomb@plt+0x152c8>
  4182a8:	mov	x4, x6
  4182ac:	b	417ff4 <wcrtomb@plt+0x152b4>
  4182b0:	stp	x29, x30, [sp, #-288]!
  4182b4:	mov	w10, #0xffffffe0            	// #-32
  4182b8:	mov	w9, #0xffffff80            	// #-128
  4182bc:	mov	x29, sp
  4182c0:	add	x11, sp, #0x100
  4182c4:	add	x12, sp, #0x120
  4182c8:	stp	x12, x12, [sp, #16]
  4182cc:	str	x11, [sp, #32]
  4182d0:	stp	w10, w9, [sp, #40]
  4182d4:	str	x4, [sp, #48]
  4182d8:	str	q0, [sp, #128]
  4182dc:	str	q1, [sp, #144]
  4182e0:	str	q2, [sp, #160]
  4182e4:	str	q3, [sp, #176]
  4182e8:	str	q4, [sp, #192]
  4182ec:	str	q5, [sp, #208]
  4182f0:	str	q6, [sp, #224]
  4182f4:	str	q7, [sp, #240]
  4182f8:	stp	x4, x5, [sp, #256]
  4182fc:	stp	x6, x7, [sp, #272]
  418300:	cbz	x4, 4183f0 <wcrtomb@plt+0x156b0>
  418304:	str	x5, [sp, #56]
  418308:	cbz	x5, 4183e8 <wcrtomb@plt+0x156a8>
  41830c:	str	x6, [sp, #64]
  418310:	mov	x5, #0x2                   	// #2
  418314:	cbz	x6, 418388 <wcrtomb@plt+0x15648>
  418318:	str	x7, [sp, #72]
  41831c:	mov	x5, #0x3                   	// #3
  418320:	cbz	x7, 418388 <wcrtomb@plt+0x15648>
  418324:	ldr	x4, [sp, #288]
  418328:	str	x4, [sp, #80]
  41832c:	mov	x5, #0x4                   	// #4
  418330:	cbz	x4, 418388 <wcrtomb@plt+0x15648>
  418334:	ldr	x5, [sp, #296]
  418338:	str	x5, [sp, #88]
  41833c:	add	x4, sp, #0x130
  418340:	cbz	x5, 418398 <wcrtomb@plt+0x15658>
  418344:	ldr	x5, [x4]
  418348:	str	x5, [sp, #96]
  41834c:	add	x4, x4, #0x8
  418350:	cbz	x5, 4183ac <wcrtomb@plt+0x1566c>
  418354:	ldr	x5, [x4]
  418358:	str	x5, [sp, #104]
  41835c:	add	x4, x4, #0x8
  418360:	cbz	x5, 4183c0 <wcrtomb@plt+0x15680>
  418364:	ldr	x5, [x4]
  418368:	str	x5, [sp, #112]
  41836c:	add	x4, x4, #0x8
  418370:	cbz	x5, 4183d4 <wcrtomb@plt+0x15694>
  418374:	ldr	x4, [x4]
  418378:	str	x4, [sp, #120]
  41837c:	cmp	x4, #0x0
  418380:	cset	x5, ne  // ne = any
  418384:	add	x5, x5, #0x9
  418388:	add	x4, sp, #0x30
  41838c:	bl	417c08 <wcrtomb@plt+0x14ec8>
  418390:	ldp	x29, x30, [sp], #288
  418394:	ret
  418398:	add	x4, sp, #0x30
  41839c:	mov	x5, #0x5                   	// #5
  4183a0:	bl	417c08 <wcrtomb@plt+0x14ec8>
  4183a4:	ldp	x29, x30, [sp], #288
  4183a8:	ret
  4183ac:	add	x4, sp, #0x30
  4183b0:	mov	x5, #0x6                   	// #6
  4183b4:	bl	417c08 <wcrtomb@plt+0x14ec8>
  4183b8:	ldp	x29, x30, [sp], #288
  4183bc:	ret
  4183c0:	add	x4, sp, #0x30
  4183c4:	mov	x5, #0x7                   	// #7
  4183c8:	bl	417c08 <wcrtomb@plt+0x14ec8>
  4183cc:	ldp	x29, x30, [sp], #288
  4183d0:	ret
  4183d4:	add	x4, sp, #0x30
  4183d8:	mov	x5, #0x8                   	// #8
  4183dc:	bl	417c08 <wcrtomb@plt+0x14ec8>
  4183e0:	ldp	x29, x30, [sp], #288
  4183e4:	ret
  4183e8:	mov	x5, #0x1                   	// #1
  4183ec:	b	418388 <wcrtomb@plt+0x15648>
  4183f0:	mov	x5, #0x0                   	// #0
  4183f4:	b	418388 <wcrtomb@plt+0x15648>
  4183f8:	stp	x29, x30, [sp, #-16]!
  4183fc:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  418400:	mov	w0, #0xa                   	// #10
  418404:	mov	x29, sp
  418408:	ldr	x1, [x1, #1312]
  41840c:	bl	402bd0 <fputc_unlocked@plt>
  418410:	mov	w2, #0x5                   	// #5
  418414:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418418:	mov	x0, #0x0                   	// #0
  41841c:	add	x1, x1, #0xb80
  418420:	bl	402c20 <dcgettext@plt>
  418424:	mov	x1, x0
  418428:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41842c:	mov	w0, #0x1                   	// #1
  418430:	add	x2, x2, #0x138
  418434:	bl	4028b0 <__printf_chk@plt>
  418438:	mov	w2, #0x5                   	// #5
  41843c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418440:	mov	x0, #0x0                   	// #0
  418444:	add	x1, x1, #0xb98
  418448:	bl	402c20 <dcgettext@plt>
  41844c:	mov	x1, x0
  418450:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418454:	add	x3, x3, #0xbb0
  418458:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41845c:	mov	w0, #0x1                   	// #1
  418460:	add	x2, x2, #0x8b0
  418464:	bl	4028b0 <__printf_chk@plt>
  418468:	mov	w2, #0x5                   	// #5
  41846c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418470:	mov	x0, #0x0                   	// #0
  418474:	add	x1, x1, #0xbd8
  418478:	bl	402c20 <dcgettext@plt>
  41847c:	mov	x1, x0
  418480:	ldp	x29, x30, [sp], #16
  418484:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418488:	mov	w0, #0x1                   	// #1
  41848c:	add	x2, x2, #0xc00
  418490:	b	4028b0 <__printf_chk@plt>
  418494:	nop
  418498:	stp	x29, x30, [sp, #-32]!
  41849c:	umulh	x2, x0, x1
  4184a0:	mov	x29, sp
  4184a4:	str	x19, [sp, #16]
  4184a8:	mul	x19, x0, x1
  4184ac:	cmp	x2, #0x0
  4184b0:	cset	x0, ne  // ne = any
  4184b4:	tbnz	x19, #63, 4184dc <wcrtomb@plt+0x1579c>
  4184b8:	cbnz	x0, 4184dc <wcrtomb@plt+0x1579c>
  4184bc:	mov	x0, x19
  4184c0:	bl	402800 <malloc@plt>
  4184c4:	cmp	x0, #0x0
  4184c8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4184cc:	b.ne	4184dc <wcrtomb@plt+0x1579c>  // b.any
  4184d0:	ldr	x19, [sp, #16]
  4184d4:	ldp	x29, x30, [sp], #32
  4184d8:	ret
  4184dc:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4184e0:	stp	x29, x30, [sp, #-32]!
  4184e4:	umulh	x4, x1, x2
  4184e8:	mov	x29, sp
  4184ec:	str	x19, [sp, #16]
  4184f0:	mul	x19, x1, x2
  4184f4:	cmp	x4, #0x0
  4184f8:	cset	x1, ne  // ne = any
  4184fc:	tbnz	x19, #63, 418544 <wcrtomb@plt+0x15804>
  418500:	cbnz	x1, 418544 <wcrtomb@plt+0x15804>
  418504:	cmp	x19, #0x0
  418508:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41850c:	b.ne	418530 <wcrtomb@plt+0x157f0>  // b.any
  418510:	mov	x1, x19
  418514:	bl	402930 <realloc@plt>
  418518:	cmp	x0, #0x0
  41851c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  418520:	b.ne	418544 <wcrtomb@plt+0x15804>  // b.any
  418524:	ldr	x19, [sp, #16]
  418528:	ldp	x29, x30, [sp], #32
  41852c:	ret
  418530:	bl	402ae0 <free@plt>
  418534:	mov	x0, #0x0                   	// #0
  418538:	ldr	x19, [sp, #16]
  41853c:	ldp	x29, x30, [sp], #32
  418540:	ret
  418544:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  418548:	stp	x29, x30, [sp, #-32]!
  41854c:	mov	x4, x0
  418550:	mov	x29, sp
  418554:	ldr	x3, [x1]
  418558:	str	x19, [sp, #16]
  41855c:	cbz	x0, 4185ac <wcrtomb@plt+0x1586c>
  418560:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  418564:	movk	x5, #0x5554
  418568:	udiv	x5, x5, x2
  41856c:	cmp	x5, x3
  418570:	b.ls	4185f8 <wcrtomb@plt+0x158b8>  // b.plast
  418574:	add	x19, x3, #0x1
  418578:	add	x19, x19, x3, lsr #1
  41857c:	str	x19, [x1]
  418580:	mul	x19, x2, x19
  418584:	cbz	x19, 4185e4 <wcrtomb@plt+0x158a4>
  418588:	mov	x0, x4
  41858c:	mov	x1, x19
  418590:	bl	402930 <realloc@plt>
  418594:	cmp	x0, #0x0
  418598:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41859c:	b.ne	4185f8 <wcrtomb@plt+0x158b8>  // b.any
  4185a0:	ldr	x19, [sp, #16]
  4185a4:	ldp	x29, x30, [sp], #32
  4185a8:	ret
  4185ac:	cbz	x3, 4185d0 <wcrtomb@plt+0x15890>
  4185b0:	umulh	x0, x3, x2
  4185b4:	mul	x19, x3, x2
  4185b8:	cmp	x0, #0x0
  4185bc:	cset	x0, ne  // ne = any
  4185c0:	tbnz	x19, #63, 4185f8 <wcrtomb@plt+0x158b8>
  4185c4:	cbnz	x0, 4185f8 <wcrtomb@plt+0x158b8>
  4185c8:	str	x3, [x1]
  4185cc:	b	418588 <wcrtomb@plt+0x15848>
  4185d0:	mov	x3, #0x80                  	// #128
  4185d4:	cmp	x2, x3
  4185d8:	udiv	x3, x3, x2
  4185dc:	cinc	x3, x3, hi  // hi = pmore
  4185e0:	b	4185b0 <wcrtomb@plt+0x15870>
  4185e4:	bl	402ae0 <free@plt>
  4185e8:	mov	x0, #0x0                   	// #0
  4185ec:	ldr	x19, [sp, #16]
  4185f0:	ldp	x29, x30, [sp], #32
  4185f4:	ret
  4185f8:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4185fc:	nop
  418600:	stp	x29, x30, [sp, #-32]!
  418604:	mov	x29, sp
  418608:	str	x19, [sp, #16]
  41860c:	mov	x19, x0
  418610:	bl	402800 <malloc@plt>
  418614:	cmp	x0, #0x0
  418618:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41861c:	b.ne	41862c <wcrtomb@plt+0x158ec>  // b.any
  418620:	ldr	x19, [sp, #16]
  418624:	ldp	x29, x30, [sp], #32
  418628:	ret
  41862c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  418630:	stp	x29, x30, [sp, #-32]!
  418634:	mov	x29, sp
  418638:	str	x19, [sp, #16]
  41863c:	mov	x19, x0
  418640:	bl	402800 <malloc@plt>
  418644:	cmp	x0, #0x0
  418648:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41864c:	b.ne	41865c <wcrtomb@plt+0x1591c>  // b.any
  418650:	ldr	x19, [sp, #16]
  418654:	ldp	x29, x30, [sp], #32
  418658:	ret
  41865c:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  418660:	stp	x29, x30, [sp, #-32]!
  418664:	cmp	x1, #0x0
  418668:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41866c:	mov	x29, sp
  418670:	b.ne	418698 <wcrtomb@plt+0x15958>  // b.any
  418674:	str	x19, [sp, #16]
  418678:	mov	x19, x1
  41867c:	bl	402930 <realloc@plt>
  418680:	cmp	x0, #0x0
  418684:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  418688:	b.ne	4186a8 <wcrtomb@plt+0x15968>  // b.any
  41868c:	ldr	x19, [sp, #16]
  418690:	ldp	x29, x30, [sp], #32
  418694:	ret
  418698:	bl	402ae0 <free@plt>
  41869c:	mov	x0, #0x0                   	// #0
  4186a0:	ldp	x29, x30, [sp], #32
  4186a4:	ret
  4186a8:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4186ac:	nop
  4186b0:	stp	x29, x30, [sp, #-16]!
  4186b4:	mov	x2, x1
  4186b8:	mov	x29, sp
  4186bc:	ldr	x1, [x1]
  4186c0:	cbz	x0, 4186f0 <wcrtomb@plt+0x159b0>
  4186c4:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4186c8:	movk	x3, #0x5553
  4186cc:	cmp	x1, x3
  4186d0:	b.hi	418704 <wcrtomb@plt+0x159c4>  // b.pmore
  4186d4:	add	x3, x1, #0x1
  4186d8:	add	x1, x3, x1, lsr #1
  4186dc:	str	x1, [x2]
  4186e0:	bl	402930 <realloc@plt>
  4186e4:	cbz	x0, 418704 <wcrtomb@plt+0x159c4>
  4186e8:	ldp	x29, x30, [sp], #16
  4186ec:	ret
  4186f0:	cmp	x1, #0x0
  4186f4:	cbnz	x1, 418700 <wcrtomb@plt+0x159c0>
  4186f8:	mov	x1, #0x80                  	// #128
  4186fc:	b	4186dc <wcrtomb@plt+0x1599c>
  418700:	b.ge	4186dc <wcrtomb@plt+0x1599c>  // b.tcont
  418704:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  418708:	stp	x29, x30, [sp, #-16]!
  41870c:	mov	x29, sp
  418710:	tbnz	x0, #63, 418728 <wcrtomb@plt+0x159e8>
  418714:	mov	x1, #0x1                   	// #1
  418718:	bl	402910 <calloc@plt>
  41871c:	cbz	x0, 418728 <wcrtomb@plt+0x159e8>
  418720:	ldp	x29, x30, [sp], #16
  418724:	ret
  418728:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  41872c:	nop
  418730:	umulh	x4, x0, x1
  418734:	stp	x29, x30, [sp, #-16]!
  418738:	mul	x2, x0, x1
  41873c:	cmp	x4, #0x0
  418740:	mov	x29, sp
  418744:	cset	x3, ne  // ne = any
  418748:	tbnz	x2, #63, 418760 <wcrtomb@plt+0x15a20>
  41874c:	cbnz	x3, 418760 <wcrtomb@plt+0x15a20>
  418750:	bl	402910 <calloc@plt>
  418754:	cbz	x0, 418760 <wcrtomb@plt+0x15a20>
  418758:	ldp	x29, x30, [sp], #16
  41875c:	ret
  418760:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  418764:	nop
  418768:	stp	x29, x30, [sp, #-32]!
  41876c:	mov	x29, sp
  418770:	stp	x19, x20, [sp, #16]
  418774:	mov	x19, x1
  418778:	mov	x20, x0
  41877c:	mov	x0, x1
  418780:	bl	402800 <malloc@plt>
  418784:	cmp	x0, #0x0
  418788:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  41878c:	b.ne	4187a4 <wcrtomb@plt+0x15a64>  // b.any
  418790:	mov	x2, x19
  418794:	mov	x1, x20
  418798:	ldp	x19, x20, [sp, #16]
  41879c:	ldp	x29, x30, [sp], #32
  4187a0:	b	402650 <memcpy@plt>
  4187a4:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4187a8:	stp	x29, x30, [sp, #-32]!
  4187ac:	mov	x29, sp
  4187b0:	stp	x19, x20, [sp, #16]
  4187b4:	mov	x20, x0
  4187b8:	bl	402690 <strlen@plt>
  4187bc:	add	x19, x0, #0x1
  4187c0:	mov	x0, x19
  4187c4:	bl	402800 <malloc@plt>
  4187c8:	cbz	x0, 4187e0 <wcrtomb@plt+0x15aa0>
  4187cc:	mov	x2, x19
  4187d0:	mov	x1, x20
  4187d4:	ldp	x19, x20, [sp, #16]
  4187d8:	ldp	x29, x30, [sp], #32
  4187dc:	b	402650 <memcpy@plt>
  4187e0:	bl	4187e8 <wcrtomb@plt+0x15aa8>
  4187e4:	nop
  4187e8:	stp	x29, x30, [sp, #-32]!
  4187ec:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4187f0:	mov	w2, #0x5                   	// #5
  4187f4:	mov	x29, sp
  4187f8:	str	x19, [sp, #16]
  4187fc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  418800:	ldr	w19, [x0, #1264]
  418804:	add	x1, x1, #0xc50
  418808:	mov	x0, #0x0                   	// #0
  41880c:	bl	402c20 <dcgettext@plt>
  418810:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  418814:	mov	x3, x0
  418818:	add	x2, x2, #0xd20
  41881c:	mov	w0, w19
  418820:	mov	w1, #0x0                   	// #0
  418824:	bl	4026d0 <error@plt>
  418828:	bl	4029e0 <abort@plt>
  41882c:	nop
  418830:	stp	x29, x30, [sp, #-64]!
  418834:	cmp	x0, #0x0
  418838:	add	x4, sp, #0x3c
  41883c:	mov	x29, sp
  418840:	stp	x19, x20, [sp, #16]
  418844:	csel	x19, x4, x0, eq  // eq = none
  418848:	mov	x20, x2
  41884c:	mov	x0, x19
  418850:	str	x21, [sp, #32]
  418854:	mov	x21, x1
  418858:	bl	402640 <mbrtowc@plt>
  41885c:	cmp	x20, #0x0
  418860:	mov	x20, x0
  418864:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  418868:	b.hi	418880 <wcrtomb@plt+0x15b40>  // b.pmore
  41886c:	mov	x0, x20
  418870:	ldp	x19, x20, [sp, #16]
  418874:	ldr	x21, [sp, #32]
  418878:	ldp	x29, x30, [sp], #64
  41887c:	ret
  418880:	mov	w0, #0x0                   	// #0
  418884:	bl	4292b0 <_obstack_memory_used@@Base+0x105a0>
  418888:	tst	w0, #0xff
  41888c:	b.ne	41886c <wcrtomb@plt+0x15b2c>  // b.any
  418890:	ldrb	w0, [x21]
  418894:	mov	x20, #0x1                   	// #1
  418898:	str	w0, [x19]
  41889c:	mov	x0, x20
  4188a0:	ldp	x19, x20, [sp, #16]
  4188a4:	ldr	x21, [sp, #32]
  4188a8:	ldp	x29, x30, [sp], #64
  4188ac:	ret
  4188b0:	stp	x29, x30, [sp, #-32]!
  4188b4:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4188b8:	mov	w2, #0x5                   	// #5
  4188bc:	mov	x29, sp
  4188c0:	str	x19, [sp, #16]
  4188c4:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4188c8:	ldr	x19, [x0, #1288]
  4188cc:	add	x1, x1, #0xc50
  4188d0:	mov	x0, #0x0                   	// #0
  4188d4:	bl	402c20 <dcgettext@plt>
  4188d8:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  4188dc:	mov	x3, x0
  4188e0:	add	x2, x2, #0x900
  4188e4:	mov	x0, x19
  4188e8:	mov	w1, #0x1                   	// #1
  4188ec:	bl	402a90 <__fprintf_chk@plt>
  4188f0:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4188f4:	ldr	w0, [x0, #1264]
  4188f8:	bl	4026c0 <exit@plt>
  4188fc:	nop

0000000000418900 <_obstack_begin@@Base>:
  418900:	stp	x29, x30, [sp, #-48]!
  418904:	mov	x29, sp
  418908:	stp	x19, x20, [sp, #16]
  41890c:	mov	x19, x0
  418910:	ldrb	w0, [x0, #80]
  418914:	str	x21, [sp, #32]
  418918:	and	w0, w0, #0xfffffffe
  41891c:	stp	x3, x4, [x19, #56]
  418920:	strb	w0, [x19, #80]
  418924:	cbz	x2, 4189a8 <_obstack_begin@@Base+0xa8>
  418928:	ldrb	w0, [x19, #80]
  41892c:	cmp	x1, #0x0
  418930:	sub	x21, x2, #0x1
  418934:	mov	x20, x2
  418938:	mov	x2, #0xfe0                 	// #4064
  41893c:	csel	x1, x1, x2, ne  // ne = any
  418940:	str	x1, [x19]
  418944:	str	x21, [x19, #48]
  418948:	tbz	w0, #0, 4189cc <_obstack_begin@@Base+0xcc>
  41894c:	ldr	x0, [x19, #72]
  418950:	blr	x3
  418954:	mov	x1, x0
  418958:	str	x1, [x19, #8]
  41895c:	cbz	x1, 4189dc <_obstack_begin@@Base+0xdc>
  418960:	add	x2, x1, #0x10
  418964:	neg	x20, x20
  418968:	ldr	x0, [x19]
  41896c:	add	x2, x2, x21
  418970:	and	x20, x2, x20
  418974:	ldr	x21, [sp, #32]
  418978:	stp	x20, x20, [x19, #16]
  41897c:	add	x2, x1, x0
  418980:	str	x2, [x1]
  418984:	mov	w0, #0x1                   	// #1
  418988:	str	x2, [x19, #32]
  41898c:	ldrb	w2, [x19, #80]
  418990:	str	xzr, [x1, #8]
  418994:	and	w1, w2, #0xfffffff9
  418998:	strb	w1, [x19, #80]
  41899c:	ldp	x19, x20, [sp, #16]
  4189a0:	ldp	x29, x30, [sp], #48
  4189a4:	ret
  4189a8:	ldrb	w0, [x19, #80]
  4189ac:	cmp	x1, #0x0
  4189b0:	mov	x21, #0xf                   	// #15
  4189b4:	mov	x2, #0xfe0                 	// #4064
  4189b8:	csel	x1, x1, x2, ne  // ne = any
  4189bc:	str	x1, [x19]
  4189c0:	str	x21, [x19, #48]
  4189c4:	mov	x20, #0x10                  	// #16
  4189c8:	tbnz	w0, #0, 41894c <_obstack_begin@@Base+0x4c>
  4189cc:	mov	x0, x1
  4189d0:	blr	x3
  4189d4:	mov	x1, x0
  4189d8:	b	418958 <_obstack_begin@@Base+0x58>
  4189dc:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  4189e0:	ldr	x0, [x0, #1256]
  4189e4:	blr	x0

00000000004189e8 <_obstack_begin_1@@Base>:
  4189e8:	stp	x29, x30, [sp, #-48]!
  4189ec:	mov	x29, sp
  4189f0:	stp	x19, x20, [sp, #16]
  4189f4:	mov	x19, x0
  4189f8:	mov	x0, x5
  4189fc:	ldrb	w5, [x19, #80]
  418a00:	str	x21, [sp, #32]
  418a04:	orr	w5, w5, #0x1
  418a08:	stp	x3, x4, [x19, #56]
  418a0c:	str	x0, [x19, #72]
  418a10:	strb	w5, [x19, #80]
  418a14:	cbz	x2, 418a94 <_obstack_begin_1@@Base+0xac>
  418a18:	sub	x21, x2, #0x1
  418a1c:	mov	x20, x2
  418a20:	ldrb	w2, [x19, #80]
  418a24:	cmp	x1, #0x0
  418a28:	mov	x4, #0xfe0                 	// #4064
  418a2c:	csel	x1, x1, x4, ne  // ne = any
  418a30:	str	x1, [x19]
  418a34:	str	x21, [x19, #48]
  418a38:	tbz	w2, #0, 418ab8 <_obstack_begin_1@@Base+0xd0>
  418a3c:	blr	x3
  418a40:	mov	x1, x0
  418a44:	str	x1, [x19, #8]
  418a48:	cbz	x1, 418ac8 <_obstack_begin_1@@Base+0xe0>
  418a4c:	add	x2, x1, #0x10
  418a50:	neg	x20, x20
  418a54:	ldr	x0, [x19]
  418a58:	add	x2, x2, x21
  418a5c:	and	x20, x2, x20
  418a60:	ldr	x21, [sp, #32]
  418a64:	stp	x20, x20, [x19, #16]
  418a68:	add	x2, x1, x0
  418a6c:	str	x2, [x1]
  418a70:	mov	w0, #0x1                   	// #1
  418a74:	str	x2, [x19, #32]
  418a78:	ldrb	w2, [x19, #80]
  418a7c:	str	xzr, [x1, #8]
  418a80:	and	w1, w2, #0xfffffff9
  418a84:	strb	w1, [x19, #80]
  418a88:	ldp	x19, x20, [sp, #16]
  418a8c:	ldp	x29, x30, [sp], #48
  418a90:	ret
  418a94:	ldrb	w2, [x19, #80]
  418a98:	cmp	x1, #0x0
  418a9c:	mov	x21, #0xf                   	// #15
  418aa0:	mov	x4, #0xfe0                 	// #4064
  418aa4:	csel	x1, x1, x4, ne  // ne = any
  418aa8:	str	x1, [x19]
  418aac:	str	x21, [x19, #48]
  418ab0:	mov	x20, #0x10                  	// #16
  418ab4:	tbnz	w2, #0, 418a3c <_obstack_begin_1@@Base+0x54>
  418ab8:	mov	x0, x1
  418abc:	blr	x3
  418ac0:	mov	x1, x0
  418ac4:	b	418a44 <_obstack_begin_1@@Base+0x5c>
  418ac8:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  418acc:	ldr	x0, [x0, #1256]
  418ad0:	blr	x0
  418ad4:	nop

0000000000418ad8 <_obstack_newchunk@@Base>:
  418ad8:	stp	x29, x30, [sp, #-64]!
  418adc:	mov	x29, sp
  418ae0:	stp	x21, x22, [sp, #32]
  418ae4:	ldp	x2, x21, [x0, #16]
  418ae8:	stp	x19, x20, [sp, #16]
  418aec:	mov	x19, x0
  418af0:	ldr	x3, [x0, #48]
  418af4:	ldr	x0, [x0]
  418af8:	sub	x21, x21, x2
  418afc:	adds	x1, x21, x1
  418b00:	str	x23, [sp, #48]
  418b04:	cset	x2, cs  // cs = hs, nlast
  418b08:	lsr	x20, x21, #3
  418b0c:	adds	x3, x3, x1
  418b10:	add	x20, x20, #0x64
  418b14:	cset	x1, cs  // cs = hs, nlast
  418b18:	cmp	x0, x3
  418b1c:	csel	x0, x0, x3, cs  // cs = hs, nlast
  418b20:	add	x3, x20, x3
  418b24:	cmp	x0, x3
  418b28:	csel	x20, x0, x3, cs  // cs = hs, nlast
  418b2c:	cmp	x2, #0x0
  418b30:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  418b34:	ldr	x23, [x19, #8]
  418b38:	b.ne	418c18 <_obstack_newchunk@@Base+0x140>  // b.any
  418b3c:	ldrb	w0, [x19, #80]
  418b40:	ldr	x2, [x19, #56]
  418b44:	tbz	w0, #0, 418bdc <_obstack_newchunk@@Base+0x104>
  418b48:	ldr	x0, [x19, #72]
  418b4c:	mov	x1, x20
  418b50:	blr	x2
  418b54:	mov	x22, x0
  418b58:	cbz	x22, 418c18 <_obstack_newchunk@@Base+0x140>
  418b5c:	mov	x3, x22
  418b60:	str	x22, [x19, #8]
  418b64:	ldr	x1, [x19, #16]
  418b68:	add	x20, x22, x20
  418b6c:	ldr	x0, [x19, #48]
  418b70:	str	x23, [x22, #8]
  418b74:	str	x20, [x19, #32]
  418b78:	mov	x2, x21
  418b7c:	str	x20, [x3], #16
  418b80:	add	x20, x3, x0
  418b84:	bic	x20, x20, x0
  418b88:	mov	x0, x20
  418b8c:	bl	402650 <memcpy@plt>
  418b90:	ldrb	w2, [x19, #80]
  418b94:	tbnz	w2, #1, 418bb4 <_obstack_newchunk@@Base+0xdc>
  418b98:	ldr	x1, [x19, #48]
  418b9c:	add	x0, x23, #0x10
  418ba0:	ldr	x3, [x19, #16]
  418ba4:	add	x0, x0, x1
  418ba8:	bic	x0, x0, x1
  418bac:	cmp	x3, x0
  418bb0:	b.eq	418bec <_obstack_newchunk@@Base+0x114>  // b.none
  418bb4:	ldrb	w0, [x19, #80]
  418bb8:	add	x21, x20, x21
  418bbc:	ldr	x23, [sp, #48]
  418bc0:	and	w0, w0, #0xfffffffd
  418bc4:	stp	x20, x21, [x19, #16]
  418bc8:	strb	w0, [x19, #80]
  418bcc:	ldp	x19, x20, [sp, #16]
  418bd0:	ldp	x21, x22, [sp, #32]
  418bd4:	ldp	x29, x30, [sp], #64
  418bd8:	ret
  418bdc:	mov	x0, x20
  418be0:	blr	x2
  418be4:	mov	x22, x0
  418be8:	b	418b58 <_obstack_newchunk@@Base+0x80>
  418bec:	ldr	x0, [x23, #8]
  418bf0:	ldr	x3, [x19, #64]
  418bf4:	str	x0, [x22, #8]
  418bf8:	tbz	w2, #0, 418c0c <_obstack_newchunk@@Base+0x134>
  418bfc:	ldr	x0, [x19, #72]
  418c00:	mov	x1, x23
  418c04:	blr	x3
  418c08:	b	418bb4 <_obstack_newchunk@@Base+0xdc>
  418c0c:	mov	x0, x23
  418c10:	blr	x3
  418c14:	b	418bb4 <_obstack_newchunk@@Base+0xdc>
  418c18:	adrp	x0, 441000 <_obstack_memory_used@@Base+0x282f0>
  418c1c:	ldr	x0, [x0, #1256]
  418c20:	blr	x0
  418c24:	nop

0000000000418c28 <_obstack_allocated_p@@Base>:
  418c28:	ldr	x0, [x0, #8]
  418c2c:	cbz	x0, 418c50 <_obstack_allocated_p@@Base+0x28>
  418c30:	cmp	x1, x0
  418c34:	b.ls	418c44 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  418c38:	ldr	x2, [x0]
  418c3c:	cmp	x2, x1
  418c40:	b.cs	418c54 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  418c44:	ldr	x0, [x0, #8]
  418c48:	cbnz	x0, 418c30 <_obstack_allocated_p@@Base+0x8>
  418c4c:	mov	w0, #0x0                   	// #0
  418c50:	ret
  418c54:	mov	w0, #0x1                   	// #1
  418c58:	ret
  418c5c:	nop

0000000000418c60 <_obstack_free@@Base>:
  418c60:	stp	x29, x30, [sp, #-48]!
  418c64:	mov	x29, sp
  418c68:	str	x21, [sp, #32]
  418c6c:	mov	x21, x1
  418c70:	ldr	x1, [x0, #8]
  418c74:	cbz	x1, 418ce0 <_obstack_free@@Base+0x80>
  418c78:	stp	x19, x20, [sp, #16]
  418c7c:	mov	x19, x0
  418c80:	cmp	x1, x21
  418c84:	b.cs	418c94 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  418c88:	ldr	x0, [x1]
  418c8c:	cmp	x0, x21
  418c90:	b.cs	418cf0 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  418c94:	ldrb	w0, [x19, #80]
  418c98:	ldr	x20, [x1, #8]
  418c9c:	ldr	x2, [x19, #64]
  418ca0:	tbz	w0, #0, 418cc4 <_obstack_free@@Base+0x64>
  418ca4:	ldr	x0, [x19, #72]
  418ca8:	blr	x2
  418cac:	ldrb	w0, [x19, #80]
  418cb0:	orr	w0, w0, #0x2
  418cb4:	strb	w0, [x19, #80]
  418cb8:	cbz	x20, 418cdc <_obstack_free@@Base+0x7c>
  418cbc:	mov	x1, x20
  418cc0:	b	418c80 <_obstack_free@@Base+0x20>
  418cc4:	mov	x0, x1
  418cc8:	blr	x2
  418ccc:	ldrb	w0, [x19, #80]
  418cd0:	orr	w0, w0, #0x2
  418cd4:	strb	w0, [x19, #80]
  418cd8:	cbnz	x20, 418cbc <_obstack_free@@Base+0x5c>
  418cdc:	ldp	x19, x20, [sp, #16]
  418ce0:	cbnz	x21, 418d08 <_obstack_free@@Base+0xa8>
  418ce4:	ldr	x21, [sp, #32]
  418ce8:	ldp	x29, x30, [sp], #48
  418cec:	ret
  418cf0:	stp	x1, x21, [x19, #8]
  418cf4:	stp	x21, x0, [x19, #24]
  418cf8:	ldp	x19, x20, [sp, #16]
  418cfc:	ldr	x21, [sp, #32]
  418d00:	ldp	x29, x30, [sp], #48
  418d04:	ret
  418d08:	stp	x19, x20, [sp, #16]
  418d0c:	bl	4029e0 <abort@plt>

0000000000418d10 <_obstack_memory_used@@Base>:
  418d10:	ldr	x1, [x0, #8]
  418d14:	mov	x0, #0x0                   	// #0
  418d18:	cbz	x1, 418d34 <_obstack_memory_used@@Base+0x24>
  418d1c:	nop
  418d20:	ldr	x2, [x1]
  418d24:	sub	x2, x2, x1
  418d28:	ldr	x1, [x1, #8]
  418d2c:	add	x0, x0, x2
  418d30:	cbnz	x1, 418d20 <_obstack_memory_used@@Base+0x10>
  418d34:	ret
  418d38:	mov	x3, x0
  418d3c:	ldr	x0, [x1, #72]
  418d40:	ldr	x4, [x1, #104]
  418d44:	cmp	x4, x0
  418d48:	b.le	418dec <_obstack_memory_used@@Base+0xdc>
  418d4c:	ldr	x5, [x1, #8]
  418d50:	ldr	w6, [x1, #144]
  418d54:	ldrb	w4, [x5, x0]
  418d58:	cmp	w6, #0x1
  418d5c:	strb	w4, [x3]
  418d60:	b.le	418d80 <_obstack_memory_used@@Base+0x70>
  418d64:	ldr	x6, [x1, #48]
  418d68:	cmp	x0, x6
  418d6c:	b.eq	418d80 <_obstack_memory_used@@Base+0x70>  // b.none
  418d70:	ldr	x6, [x1, #16]
  418d74:	ldr	w6, [x6, x0, lsl #2]
  418d78:	cmn	w6, #0x1
  418d7c:	b.eq	418dc4 <_obstack_memory_used@@Base+0xb4>  // b.none
  418d80:	cmp	w4, #0x5c
  418d84:	b.eq	418db0 <_obstack_memory_used@@Base+0xa0>  // b.none
  418d88:	cmp	w4, #0x5b
  418d8c:	b.eq	418dfc <_obstack_memory_used@@Base+0xec>  // b.none
  418d90:	cmp	w4, #0x5d
  418d94:	b.eq	418e48 <_obstack_memory_used@@Base+0x138>  // b.none
  418d98:	cmp	w4, #0x5e
  418d9c:	b.ne	418dd4 <_obstack_memory_used@@Base+0xc4>  // b.any
  418da0:	mov	w1, #0x19                  	// #25
  418da4:	mov	w0, #0x1                   	// #1
  418da8:	strb	w1, [x3, #8]
  418dac:	ret
  418db0:	tbz	w2, #0, 418dc4 <_obstack_memory_used@@Base+0xb4>
  418db4:	ldr	x4, [x1, #88]
  418db8:	add	x2, x0, #0x1
  418dbc:	cmp	x2, x4
  418dc0:	b.lt	418e58 <_obstack_memory_used@@Base+0x148>  // b.tstop
  418dc4:	mov	w1, #0x1                   	// #1
  418dc8:	mov	w0, #0x1                   	// #1
  418dcc:	strb	w1, [x3, #8]
  418dd0:	ret
  418dd4:	cmp	w4, #0x2d
  418dd8:	b.ne	418dc4 <_obstack_memory_used@@Base+0xb4>  // b.any
  418ddc:	mov	w1, #0x16                  	// #22
  418de0:	mov	w0, #0x1                   	// #1
  418de4:	strb	w1, [x3, #8]
  418de8:	ret
  418dec:	mov	w1, #0x2                   	// #2
  418df0:	mov	w0, #0x0                   	// #0
  418df4:	strb	w1, [x3, #8]
  418df8:	ret
  418dfc:	ldr	x1, [x1, #88]
  418e00:	add	x4, x0, #0x1
  418e04:	cmp	x4, x1
  418e08:	b.ge	418e30 <_obstack_memory_used@@Base+0x120>  // b.tcont
  418e0c:	add	x0, x5, x0
  418e10:	ldrb	w0, [x0, #1]
  418e14:	strb	w0, [x3]
  418e18:	cmp	w0, #0x3a
  418e1c:	b.eq	418e94 <_obstack_memory_used@@Base+0x184>  // b.none
  418e20:	cmp	w0, #0x3d
  418e24:	b.eq	418e84 <_obstack_memory_used@@Base+0x174>  // b.none
  418e28:	cmp	w0, #0x2e
  418e2c:	b.eq	418e74 <_obstack_memory_used@@Base+0x164>  // b.none
  418e30:	mov	w1, #0x1                   	// #1
  418e34:	mov	w2, #0x5b                  	// #91
  418e38:	mov	w0, #0x1                   	// #1
  418e3c:	strb	w2, [x3]
  418e40:	strb	w1, [x3, #8]
  418e44:	ret
  418e48:	mov	w1, #0x15                  	// #21
  418e4c:	mov	w0, #0x1                   	// #1
  418e50:	strb	w1, [x3, #8]
  418e54:	ret
  418e58:	str	x2, [x1, #72]
  418e5c:	mov	w0, #0x1                   	// #1
  418e60:	mov	w1, #0x1                   	// #1
  418e64:	ldrb	w2, [x5, x2]
  418e68:	strb	w2, [x3]
  418e6c:	strb	w1, [x3, #8]
  418e70:	ret
  418e74:	mov	w1, #0x1a                  	// #26
  418e78:	mov	w0, #0x2                   	// #2
  418e7c:	strb	w1, [x3, #8]
  418e80:	ret
  418e84:	mov	w1, #0x1c                  	// #28
  418e88:	mov	w0, #0x2                   	// #2
  418e8c:	strb	w1, [x3, #8]
  418e90:	ret
  418e94:	tbz	w2, #2, 418e30 <_obstack_memory_used@@Base+0x120>
  418e98:	mov	w1, #0x1e                  	// #30
  418e9c:	mov	w0, #0x2                   	// #2
  418ea0:	strb	w1, [x3, #8]
  418ea4:	ret
  418ea8:	stp	x29, x30, [sp, #-144]!
  418eac:	mov	x13, x0
  418eb0:	add	x8, x3, x3, lsl #1
  418eb4:	mov	x29, sp
  418eb8:	stp	x27, x28, [sp, #80]
  418ebc:	ldr	x27, [x0, #152]
  418ec0:	stp	x23, x24, [sp, #48]
  418ec4:	stp	x25, x26, [sp, #64]
  418ec8:	mov	w26, w1
  418ecc:	ldr	x0, [x27, #48]
  418ed0:	add	x23, x0, x8, lsl #3
  418ed4:	ldr	x9, [x23, #8]
  418ed8:	cmp	x9, #0x0
  418edc:	b.le	419088 <_obstack_memory_used@@Base+0x378>
  418ee0:	mov	x0, #0x1                   	// #1
  418ee4:	stp	x21, x22, [sp, #32]
  418ee8:	lsl	x0, x0, x2
  418eec:	str	x0, [sp, #128]
  418ef0:	mvn	w0, w0
  418ef4:	and	w0, w0, #0xffff
  418ef8:	add	x22, x4, x4, lsl #2
  418efc:	str	w0, [sp, #140]
  418f00:	and	w0, w1, #0x2
  418f04:	mov	x14, x3
  418f08:	mov	x25, x2
  418f0c:	mov	x24, x4
  418f10:	lsl	x22, x22, #3
  418f14:	stp	x19, x20, [sp, #16]
  418f18:	mov	x19, #0x0                   	// #0
  418f1c:	str	w0, [sp, #108]
  418f20:	and	w0, w1, #0x1
  418f24:	str	w0, [sp, #136]
  418f28:	b	418f40 <_obstack_memory_used@@Base+0x230>
  418f2c:	cmp	w5, #0x4
  418f30:	b.eq	418fd0 <_obstack_memory_used@@Base+0x2c0>  // b.none
  418f34:	add	x19, x19, #0x1
  418f38:	cmp	x19, x9
  418f3c:	b.ge	419080 <_obstack_memory_used@@Base+0x370>  // b.tcont
  418f40:	ldr	x5, [x23, #16]
  418f44:	ldr	x7, [x27]
  418f48:	ldr	x20, [x5, x19, lsl #3]
  418f4c:	lsl	x6, x20, #4
  418f50:	add	x5, x7, x6
  418f54:	ldrb	w5, [x5, #8]
  418f58:	cmp	w5, #0x8
  418f5c:	b.eq	418f9c <_obstack_memory_used@@Base+0x28c>  // b.none
  418f60:	cmp	w5, #0x9
  418f64:	b.ne	418f2c <_obstack_memory_used@@Base+0x21c>  // b.any
  418f68:	ldr	w0, [sp, #108]
  418f6c:	cbz	w0, 418f34 <_obstack_memory_used@@Base+0x224>
  418f70:	ldr	x0, [x7, x6]
  418f74:	cmp	x0, x25
  418f78:	b.ne	418f34 <_obstack_memory_used@@Base+0x224>  // b.any
  418f7c:	mov	w0, #0x0                   	// #0
  418f80:	ldp	x19, x20, [sp, #16]
  418f84:	ldp	x21, x22, [sp, #32]
  418f88:	ldp	x23, x24, [sp, #48]
  418f8c:	ldp	x25, x26, [sp, #64]
  418f90:	ldp	x27, x28, [sp, #80]
  418f94:	ldp	x29, x30, [sp], #144
  418f98:	ret
  418f9c:	ldr	w0, [sp, #136]
  418fa0:	cbz	w0, 418f34 <_obstack_memory_used@@Base+0x224>
  418fa4:	ldr	x0, [x7, x6]
  418fa8:	cmp	x0, x25
  418fac:	b.ne	418f34 <_obstack_memory_used@@Base+0x224>  // b.any
  418fb0:	mov	w0, #0xffffffff            	// #-1
  418fb4:	ldp	x19, x20, [sp, #16]
  418fb8:	ldp	x21, x22, [sp, #32]
  418fbc:	ldp	x23, x24, [sp, #48]
  418fc0:	ldp	x25, x26, [sp, #64]
  418fc4:	ldp	x27, x28, [sp, #80]
  418fc8:	ldp	x29, x30, [sp], #144
  418fcc:	ret
  418fd0:	cmn	x24, #0x1
  418fd4:	b.eq	418f34 <_obstack_memory_used@@Base+0x224>  // b.none
  418fd8:	ldr	x21, [x13, #216]
  418fdc:	add	x28, x20, x20, lsl #1
  418fe0:	ldr	w0, [sp, #108]
  418fe4:	cmp	x25, #0x3f
  418fe8:	lsl	x28, x28, #3
  418fec:	add	x21, x21, x22
  418ff0:	b.gt	4190a0 <_obstack_memory_used@@Base+0x390>
  418ff4:	cbnz	w0, 4191cc <_obstack_memory_used@@Base+0x4bc>
  418ff8:	ldr	x0, [x21]
  418ffc:	cmp	x20, x0
  419000:	b.ne	419060 <_obstack_memory_used@@Base+0x350>  // b.any
  419004:	ldr	x5, [sp, #128]
  419008:	mov	x4, x24
  41900c:	ldrh	w3, [x21, #34]
  419010:	mov	x2, x25
  419014:	mov	w1, w26
  419018:	mov	x0, x13
  41901c:	tst	x3, x5
  419020:	b.eq	419060 <_obstack_memory_used@@Base+0x350>  // b.none
  419024:	ldr	x3, [x27, #40]
  419028:	stp	x14, x13, [sp, #112]
  41902c:	add	x3, x3, x28
  419030:	ldr	x3, [x3, #16]
  419034:	ldr	x3, [x3]
  419038:	cmp	x14, x3
  41903c:	b.eq	4191dc <_obstack_memory_used@@Base+0x4cc>  // b.none
  419040:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  419044:	cmn	w0, #0x1
  419048:	b.eq	418fb0 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41904c:	ldp	x14, x13, [sp, #112]
  419050:	ldrh	w0, [x21, #34]
  419054:	ldr	w1, [sp, #140]
  419058:	and	w0, w1, w0
  41905c:	strh	w0, [x21, #34]
  419060:	ldrb	w0, [x21, #32]
  419064:	add	x21, x21, #0x28
  419068:	cbnz	w0, 418ff8 <_obstack_memory_used@@Base+0x2e8>
  41906c:	ldr	x9, [x23, #8]
  419070:	add	x19, x19, #0x1
  419074:	cmp	x19, x9
  419078:	b.lt	418f40 <_obstack_memory_used@@Base+0x230>  // b.tstop
  41907c:	nop
  419080:	ldp	x19, x20, [sp, #16]
  419084:	ldp	x21, x22, [sp, #32]
  419088:	asr	w0, w26, #1
  41908c:	ldp	x23, x24, [sp, #48]
  419090:	ldp	x25, x26, [sp, #64]
  419094:	ldp	x27, x28, [sp, #80]
  419098:	ldp	x29, x30, [sp], #144
  41909c:	ret
  4190a0:	cbnz	w0, 41913c <_obstack_memory_used@@Base+0x42c>
  4190a4:	nop
  4190a8:	ldr	x3, [x21]
  4190ac:	mov	x4, x24
  4190b0:	mov	x2, x25
  4190b4:	mov	w1, w26
  4190b8:	mov	x0, x13
  4190bc:	add	x21, x21, #0x28
  4190c0:	cmp	x20, x3
  4190c4:	b.ne	4190f4 <_obstack_memory_used@@Base+0x3e4>  // b.any
  4190c8:	ldr	x3, [x27, #40]
  4190cc:	stp	x14, x13, [sp, #112]
  4190d0:	add	x3, x3, x28
  4190d4:	ldr	x3, [x3, #16]
  4190d8:	ldr	x3, [x3]
  4190dc:	cmp	x14, x3
  4190e0:	b.eq	4191dc <_obstack_memory_used@@Base+0x4cc>  // b.none
  4190e4:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  4190e8:	cmn	w0, #0x1
  4190ec:	ldp	x14, x13, [sp, #112]
  4190f0:	b.eq	418fb0 <_obstack_memory_used@@Base+0x2a0>  // b.none
  4190f4:	ldurb	w0, [x21, #-8]
  4190f8:	cbnz	w0, 4190a8 <_obstack_memory_used@@Base+0x398>
  4190fc:	ldr	x9, [x23, #8]
  419100:	b	419070 <_obstack_memory_used@@Base+0x360>
  419104:	ldr	x3, [x27, #40]
  419108:	stp	x14, x13, [sp, #112]
  41910c:	add	x3, x3, x28
  419110:	ldr	x3, [x3, #16]
  419114:	ldr	x3, [x3]
  419118:	cmp	x14, x3
  41911c:	b.eq	4191dc <_obstack_memory_used@@Base+0x4cc>  // b.none
  419120:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  419124:	cmn	w0, #0x1
  419128:	b.eq	418fb0 <_obstack_memory_used@@Base+0x2a0>  // b.none
  41912c:	ldp	x14, x13, [sp, #112]
  419130:	cbz	w0, 418f7c <_obstack_memory_used@@Base+0x26c>
  419134:	ldurb	w0, [x21, #-8]
  419138:	cbz	w0, 41906c <_obstack_memory_used@@Base+0x35c>
  41913c:	ldr	x3, [x21]
  419140:	mov	x4, x24
  419144:	mov	x2, x25
  419148:	mov	w1, w26
  41914c:	mov	x0, x13
  419150:	add	x21, x21, #0x28
  419154:	cmp	x20, x3
  419158:	b.eq	419104 <_obstack_memory_used@@Base+0x3f4>  // b.none
  41915c:	b	419134 <_obstack_memory_used@@Base+0x424>
  419160:	ldr	x5, [sp, #128]
  419164:	mov	x4, x24
  419168:	ldrh	w3, [x21, #34]
  41916c:	mov	x2, x25
  419170:	mov	w1, w26
  419174:	mov	x0, x13
  419178:	tst	x3, x5
  41917c:	b.eq	4191c0 <_obstack_memory_used@@Base+0x4b0>  // b.none
  419180:	ldr	x3, [x27, #40]
  419184:	add	x3, x3, x28
  419188:	ldr	x3, [x3, #16]
  41918c:	ldr	x3, [x3]
  419190:	cmp	x14, x3
  419194:	b.eq	4191dc <_obstack_memory_used@@Base+0x4cc>  // b.none
  419198:	stp	x13, x14, [sp, #112]
  41919c:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  4191a0:	cmn	w0, #0x1
  4191a4:	ldp	x13, x14, [sp, #112]
  4191a8:	b.eq	418fb0 <_obstack_memory_used@@Base+0x2a0>  // b.none
  4191ac:	cbz	w0, 418f7c <_obstack_memory_used@@Base+0x26c>
  4191b0:	ldrh	w0, [x21, #34]
  4191b4:	ldr	w1, [sp, #140]
  4191b8:	and	w0, w1, w0
  4191bc:	strh	w0, [x21, #34]
  4191c0:	ldrb	w0, [x21, #32]
  4191c4:	add	x21, x21, #0x28
  4191c8:	cbz	w0, 41906c <_obstack_memory_used@@Base+0x35c>
  4191cc:	ldr	x0, [x21]
  4191d0:	cmp	x0, x20
  4191d4:	b.eq	419160 <_obstack_memory_used@@Base+0x450>  // b.none
  4191d8:	b	4191c0 <_obstack_memory_used@@Base+0x4b0>
  4191dc:	ldr	w0, [sp, #136]
  4191e0:	ldp	x19, x20, [sp, #16]
  4191e4:	neg	w0, w0
  4191e8:	ldp	x21, x22, [sp, #32]
  4191ec:	ldp	x23, x24, [sp, #48]
  4191f0:	ldp	x25, x26, [sp, #64]
  4191f4:	ldp	x27, x28, [sp, #80]
  4191f8:	ldp	x29, x30, [sp], #144
  4191fc:	ret
  419200:	stp	x29, x30, [sp, #-48]!
  419204:	mov	x29, sp
  419208:	stp	x19, x20, [sp, #16]
  41920c:	mov	x19, x0
  419210:	mov	x20, x1
  419214:	ldr	x0, [x0]
  419218:	cbz	x0, 419250 <_obstack_memory_used@@Base+0x540>
  41921c:	ldr	x1, [x19, #8]
  419220:	str	x21, [sp, #32]
  419224:	ldr	x21, [x19, #16]
  419228:	cbnz	x1, 419284 <_obstack_memory_used@@Base+0x574>
  41922c:	str	x20, [x21]
  419230:	ldr	x1, [x19, #8]
  419234:	mov	w0, #0x1                   	// #1
  419238:	ldr	x21, [sp, #32]
  41923c:	add	x1, x1, #0x1
  419240:	str	x1, [x19, #8]
  419244:	ldp	x19, x20, [sp, #16]
  419248:	ldp	x29, x30, [sp], #48
  41924c:	ret
  419250:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  419254:	ldr	q0, [x0, #1088]
  419258:	mov	x0, #0x8                   	// #8
  41925c:	str	q0, [x19]
  419260:	bl	402800 <malloc@plt>
  419264:	mov	x1, x0
  419268:	str	x0, [x19, #16]
  41926c:	cbz	x0, 4192ec <_obstack_memory_used@@Base+0x5dc>
  419270:	str	x20, [x1]
  419274:	mov	w0, #0x1                   	// #1
  419278:	ldp	x19, x20, [sp, #16]
  41927c:	ldp	x29, x30, [sp], #48
  419280:	ret
  419284:	cmp	x0, x1
  419288:	b.eq	4192f8 <_obstack_memory_used@@Base+0x5e8>  // b.none
  41928c:	ldr	x0, [x21]
  419290:	lsl	x2, x1, #3
  419294:	cmp	x0, x20
  419298:	b.gt	4192cc <_obstack_memory_used@@Base+0x5bc>
  41929c:	add	x0, x21, x2
  4192a0:	ldur	x0, [x0, #-8]
  4192a4:	cmp	x20, x0
  4192a8:	b.ge	4192c4 <_obstack_memory_used@@Base+0x5b4>  // b.tcont
  4192ac:	sub	x1, x21, #0x8
  4192b0:	str	x0, [x21, x2]
  4192b4:	sub	x2, x2, #0x8
  4192b8:	ldr	x0, [x1, x2]
  4192bc:	cmp	x0, x20
  4192c0:	b.gt	4192b0 <_obstack_memory_used@@Base+0x5a0>
  4192c4:	str	x20, [x21, x2]
  4192c8:	b	419230 <_obstack_memory_used@@Base+0x520>
  4192cc:	cmp	x1, #0x0
  4192d0:	b.le	4192c4 <_obstack_memory_used@@Base+0x5b4>
  4192d4:	mov	x1, x21
  4192d8:	add	x0, x21, #0x8
  4192dc:	bl	402660 <memmove@plt>
  4192e0:	mov	x2, #0x0                   	// #0
  4192e4:	str	x20, [x21, x2]
  4192e8:	b	419230 <_obstack_memory_used@@Base+0x520>
  4192ec:	mov	w0, #0x0                   	// #0
  4192f0:	stp	xzr, xzr, [x19]
  4192f4:	b	419244 <_obstack_memory_used@@Base+0x534>
  4192f8:	lsl	x0, x1, #1
  4192fc:	str	x0, [x19]
  419300:	lsl	x1, x1, #4
  419304:	mov	x0, x21
  419308:	bl	402930 <realloc@plt>
  41930c:	mov	x21, x0
  419310:	cbz	x0, 419320 <_obstack_memory_used@@Base+0x610>
  419314:	str	x0, [x19, #16]
  419318:	ldr	x1, [x19, #8]
  41931c:	b	41928c <_obstack_memory_used@@Base+0x57c>
  419320:	mov	w0, #0x0                   	// #0
  419324:	ldr	x21, [sp, #32]
  419328:	b	419244 <_obstack_memory_used@@Base+0x534>
  41932c:	nop
  419330:	stp	x29, x30, [sp, #-80]!
  419334:	mov	x29, sp
  419338:	stp	x21, x22, [sp, #32]
  41933c:	add	x22, x1, #0x20
  419340:	mov	x21, x1
  419344:	stp	x23, x24, [sp, #48]
  419348:	mov	x24, x2
  41934c:	ldr	x23, [x1, #16]
  419350:	str	x25, [sp, #64]
  419354:	str	x2, [x1]
  419358:	mov	x25, x0
  41935c:	str	x23, [x1, #32]
  419360:	str	xzr, [x22, #8]
  419364:	lsl	x0, x23, #3
  419368:	bl	402800 <malloc@plt>
  41936c:	str	x0, [x22, #16]
  419370:	cbz	x0, 41944c <_obstack_memory_used@@Base+0x73c>
  419374:	stp	x19, x20, [sp, #16]
  419378:	cmp	x23, #0x0
  41937c:	mov	x19, #0x0                   	// #0
  419380:	b.gt	419390 <_obstack_memory_used@@Base+0x680>
  419384:	b	4193d4 <_obstack_memory_used@@Base+0x6c4>
  419388:	cmp	x19, x23
  41938c:	b.ge	4193d4 <_obstack_memory_used@@Base+0x6c4>  // b.tcont
  419390:	ldr	x4, [x21, #24]
  419394:	ldr	x3, [x25]
  419398:	ldr	x20, [x4, x19, lsl #3]
  41939c:	add	x19, x19, #0x1
  4193a0:	add	x3, x3, x20, lsl #4
  4193a4:	ldrb	w3, [x3, #8]
  4193a8:	tbnz	w3, #3, 419388 <_obstack_memory_used@@Base+0x678>
  4193ac:	ldp	x2, x1, [x22]
  4193b0:	ldr	x0, [x22, #16]
  4193b4:	cmp	x2, x1
  4193b8:	b.eq	419424 <_obstack_memory_used@@Base+0x714>  // b.none
  4193bc:	add	x2, x1, #0x1
  4193c0:	str	x2, [x22, #8]
  4193c4:	str	x20, [x0, x1, lsl #3]
  4193c8:	ldr	x23, [x21, #16]
  4193cc:	cmp	x19, x23
  4193d0:	b.lt	419390 <_obstack_memory_used@@Base+0x680>  // b.tstop
  4193d4:	ldr	x19, [x25, #136]
  4193d8:	ldr	x20, [x25, #64]
  4193dc:	and	x24, x24, x19
  4193e0:	add	x24, x24, x24, lsl #1
  4193e4:	lsl	x24, x24, #3
  4193e8:	add	x22, x20, x24
  4193ec:	ldr	x2, [x20, x24]
  4193f0:	ldp	x0, x3, [x22, #8]
  4193f4:	add	x1, x2, #0x1
  4193f8:	cmp	x0, x2
  4193fc:	b.le	419464 <_obstack_memory_used@@Base+0x754>
  419400:	str	x1, [x20, x24]
  419404:	mov	w0, #0x0                   	// #0
  419408:	str	x21, [x3, x2, lsl #3]
  41940c:	ldp	x19, x20, [sp, #16]
  419410:	ldp	x21, x22, [sp, #32]
  419414:	ldp	x23, x24, [sp, #48]
  419418:	ldr	x25, [sp, #64]
  41941c:	ldp	x29, x30, [sp], #80
  419420:	ret
  419424:	add	x1, x1, #0x1
  419428:	lsl	x2, x1, #1
  41942c:	str	x2, [x22]
  419430:	lsl	x1, x1, #4
  419434:	bl	402930 <realloc@plt>
  419438:	cbz	x0, 419448 <_obstack_memory_used@@Base+0x738>
  41943c:	str	x0, [x22, #16]
  419440:	ldr	x1, [x22, #8]
  419444:	b	4193bc <_obstack_memory_used@@Base+0x6ac>
  419448:	ldp	x19, x20, [sp, #16]
  41944c:	mov	w0, #0xc                   	// #12
  419450:	ldp	x21, x22, [sp, #32]
  419454:	ldp	x23, x24, [sp, #48]
  419458:	ldr	x25, [sp, #64]
  41945c:	ldp	x29, x30, [sp], #80
  419460:	ret
  419464:	mov	x0, x3
  419468:	lsl	x23, x1, #1
  41946c:	lsl	x1, x1, #4
  419470:	bl	402930 <realloc@plt>
  419474:	mov	x3, x0
  419478:	cbz	x0, 419448 <_obstack_memory_used@@Base+0x738>
  41947c:	ldr	x2, [x20, x24]
  419480:	stp	x23, x0, [x22, #8]
  419484:	add	x1, x2, #0x1
  419488:	b	419400 <_obstack_memory_used@@Base+0x6f0>
  41948c:	nop
  419490:	stp	x29, x30, [sp, #-144]!
  419494:	mov	x29, sp
  419498:	stp	x19, x20, [sp, #16]
  41949c:	mov	x19, x0
  4194a0:	stp	x21, x22, [sp, #32]
  4194a4:	ldr	x21, [x0, #64]
  4194a8:	ldr	x0, [x0, #88]
  4194ac:	ldr	x20, [x19, #48]
  4194b0:	cmp	x21, x0
  4194b4:	csel	x21, x21, x0, le
  4194b8:	cmp	x21, x20
  4194bc:	b.le	419554 <_obstack_memory_used@@Base+0x844>
  4194c0:	add	x22, x19, #0x20
  4194c4:	str	x23, [sp, #48]
  4194c8:	ldr	x4, [x19, #120]
  4194cc:	sub	x2, x21, x20
  4194d0:	ldr	x23, [x19, #32]
  4194d4:	cbnz	x4, 4195d0 <_obstack_memory_used@@Base+0x8c0>
  4194d8:	ldr	x0, [x19, #40]
  4194dc:	ldr	x1, [x19]
  4194e0:	add	x0, x20, x0
  4194e4:	add	x1, x1, x0
  4194e8:	mov	x3, x22
  4194ec:	add	x0, sp, #0x4c
  4194f0:	bl	418830 <wcrtomb@plt+0x15af0>
  4194f4:	sub	x1, x0, #0x1
  4194f8:	cmn	x1, #0x3
  4194fc:	b.hi	41956c <_obstack_memory_used@@Base+0x85c>  // b.pmore
  419500:	cmn	x0, #0x2
  419504:	b.eq	41964c <_obstack_memory_used@@Base+0x93c>  // b.none
  419508:	ldr	x3, [x19, #16]
  41950c:	add	x1, x20, x0
  419510:	ldr	w4, [sp, #76]
  419514:	add	x0, x20, #0x1
  419518:	lsl	x2, x20, #2
  41951c:	cmp	x0, x1
  419520:	str	w4, [x3, x20, lsl #2]
  419524:	b.ge	4195b0 <_obstack_memory_used@@Base+0x8a0>  // b.tcont
  419528:	mvn	x20, x20
  41952c:	add	x0, x2, #0x4
  419530:	add	x2, x20, x1
  419534:	add	x0, x3, x0
  419538:	mov	x20, x1
  41953c:	mov	w1, #0xff                  	// #255
  419540:	lsl	x2, x2, #2
  419544:	bl	4028d0 <memset@plt>
  419548:	cmp	x21, x20
  41954c:	b.gt	4194c8 <_obstack_memory_used@@Base+0x7b8>
  419550:	ldr	x23, [sp, #48]
  419554:	dup	v0.2d, x20
  419558:	ldp	x21, x22, [sp, #32]
  41955c:	str	q0, [x19, #48]
  419560:	ldp	x19, x20, [sp, #16]
  419564:	ldp	x29, x30, [sp], #144
  419568:	ret
  41956c:	ldr	x0, [x19]
  419570:	ldr	x2, [x19, #40]
  419574:	add	x0, x0, x20
  419578:	ldr	x1, [x19, #120]
  41957c:	ldrb	w4, [x0, x2]
  419580:	str	w4, [sp, #76]
  419584:	cbnz	x1, 41967c <_obstack_memory_used@@Base+0x96c>
  419588:	ldr	x3, [x19, #16]
  41958c:	str	x23, [x19, #32]
  419590:	mov	x0, #0x1                   	// #1
  419594:	add	x1, x20, x0
  419598:	add	x0, x20, #0x1
  41959c:	lsl	x2, x20, #2
  4195a0:	str	w4, [x3, x20, lsl #2]
  4195a4:	cmp	x0, x1
  4195a8:	b.lt	419528 <_obstack_memory_used@@Base+0x818>  // b.tstop
  4195ac:	nop
  4195b0:	mov	x20, x0
  4195b4:	cmp	x21, x0
  4195b8:	b.le	419550 <_obstack_memory_used@@Base+0x840>
  4195bc:	ldr	x4, [x19, #120]
  4195c0:	sub	x2, x21, x20
  4195c4:	ldr	x23, [x19, #32]
  4195c8:	cbz	x4, 4194d8 <_obstack_memory_used@@Base+0x7c8>
  4195cc:	nop
  4195d0:	ldr	w0, [x19, #144]
  4195d4:	cmp	w0, #0x0
  4195d8:	b.le	419644 <_obstack_memory_used@@Base+0x934>
  4195dc:	cmp	x2, #0x0
  4195e0:	b.le	419644 <_obstack_memory_used@@Base+0x934>
  4195e4:	mov	x1, #0x1                   	// #1
  4195e8:	b	4195fc <_obstack_memory_used@@Base+0x8ec>
  4195ec:	cmp	x1, x2
  4195f0:	b.eq	419644 <_obstack_memory_used@@Base+0x934>  // b.none
  4195f4:	ldr	x4, [x19, #120]
  4195f8:	mov	x1, x7
  4195fc:	ldr	x0, [x19]
  419600:	add	x3, sp, #0x50
  419604:	add	x5, x3, x1
  419608:	add	x7, x1, #0x1
  41960c:	ldr	x3, [x19, #40]
  419610:	add	x0, x0, x1
  419614:	add	x0, x0, x20
  419618:	add	x0, x0, x3
  41961c:	ldr	x3, [x19, #8]
  419620:	ldurb	w6, [x0, #-1]
  419624:	add	x0, x3, x1
  419628:	add	x0, x0, x20
  41962c:	ldrb	w3, [x4, x6]
  419630:	sturb	w3, [x0, #-1]
  419634:	sturb	w3, [x5, #-1]
  419638:	ldr	w0, [x19, #144]
  41963c:	cmp	w0, w1
  419640:	b.gt	4195ec <_obstack_memory_used@@Base+0x8dc>
  419644:	add	x1, sp, #0x50
  419648:	b	4194e8 <_obstack_memory_used@@Base+0x7d8>
  41964c:	ldr	x1, [x19, #64]
  419650:	ldr	x0, [x19, #88]
  419654:	cmp	x1, x0
  419658:	b.ge	41956c <_obstack_memory_used@@Base+0x85c>  // b.tcont
  41965c:	dup	v0.2d, x20
  419660:	str	x23, [x19, #32]
  419664:	ldp	x21, x22, [sp, #32]
  419668:	ldr	x23, [sp, #48]
  41966c:	str	q0, [x19, #48]
  419670:	ldp	x19, x20, [sp, #16]
  419674:	ldp	x29, x30, [sp], #144
  419678:	ret
  41967c:	and	x4, x4, #0xff
  419680:	ldrb	w4, [x1, x4]
  419684:	b	419588 <_obstack_memory_used@@Base+0x878>
  419688:	stp	x29, x30, [sp, #-192]!
  41968c:	mov	x29, sp
  419690:	stp	x19, x20, [sp, #16]
  419694:	mov	x19, x0
  419698:	stp	x21, x22, [sp, #32]
  41969c:	ldrb	w1, [x0, #138]
  4196a0:	ldr	x21, [x0, #64]
  4196a4:	ldr	x0, [x0, #88]
  4196a8:	ldr	x20, [x19, #48]
  4196ac:	cmp	x21, x0
  4196b0:	csel	x21, x21, x0, le
  4196b4:	cbnz	w1, 4196c0 <_obstack_memory_used@@Base+0x9b0>
  4196b8:	ldr	x0, [x19, #120]
  4196bc:	cbz	x0, 419800 <_obstack_memory_used@@Base+0xaf0>
  4196c0:	ldr	x22, [x19, #56]
  4196c4:	cmp	x21, x20
  4196c8:	b.le	4197e8 <_obstack_memory_used@@Base+0xad8>
  4196cc:	stp	x23, x24, [sp, #48]
  4196d0:	add	x24, x19, #0x20
  4196d4:	stp	x25, x26, [sp, #64]
  4196d8:	sub	x26, x21, x20
  4196dc:	stp	x27, x28, [sp, #80]
  4196e0:	add	x27, sp, #0x74
  4196e4:	ldr	x2, [x19, #120]
  4196e8:	ldr	x0, [x19, #32]
  4196ec:	str	x0, [sp, #120]
  4196f0:	cbnz	x2, 4199c0 <_obstack_memory_used@@Base+0xcb0>
  4196f4:	ldr	x0, [x19, #40]
  4196f8:	ldr	x25, [x19]
  4196fc:	add	x0, x22, x0
  419700:	add	x25, x25, x0
  419704:	mov	x2, x26
  419708:	mov	x3, x24
  41970c:	mov	x0, x27
  419710:	mov	x1, x25
  419714:	bl	418830 <wcrtomb@plt+0x15af0>
  419718:	sub	x26, x0, #0x1
  41971c:	mov	x23, x0
  419720:	cmn	x26, #0x4
  419724:	b.hi	419a70 <_obstack_memory_used@@Base+0xd60>  // b.pmore
  419728:	ldr	w28, [sp, #116]
  41972c:	mov	x24, x20
  419730:	mov	w0, w28
  419734:	bl	402c70 <towupper@plt>
  419738:	mov	w27, w0
  41973c:	cmp	w28, w0
  419740:	b.eq	419a48 <_obstack_memory_used@@Base+0xd38>  // b.none
  419744:	add	x2, sp, #0x78
  419748:	add	x28, sp, #0x80
  41974c:	mov	x0, x28
  419750:	mov	w1, w27
  419754:	bl	402d40 <wcrtomb@plt>
  419758:	mov	x2, x0
  41975c:	cmp	x23, x0
  419760:	b.ne	419b88 <_obstack_memory_used@@Base+0xe78>  // b.any
  419764:	ldr	x0, [x19, #8]
  419768:	mov	x1, x28
  41976c:	mov	x2, x23
  419770:	add	x0, x0, x20
  419774:	bl	402650 <memcpy@plt>
  419778:	ldrb	w0, [x19, #140]
  41977c:	cbnz	w0, 419ae4 <_obstack_memory_used@@Base+0xdd4>
  419780:	ldr	x0, [x19, #16]
  419784:	add	x20, x20, #0x1
  419788:	add	x1, x23, x24
  41978c:	add	x22, x23, x22
  419790:	cmp	x20, x1
  419794:	lsl	x3, x24, #2
  419798:	str	w27, [x0, x24, lsl #2]
  41979c:	b.ge	419a60 <_obstack_memory_used@@Base+0xd50>  // b.tcont
  4197a0:	mvn	x2, x24
  4197a4:	add	x3, x3, #0x4
  4197a8:	add	x2, x2, x1
  4197ac:	add	x0, x0, x3
  4197b0:	mov	x20, x1
  4197b4:	mov	w1, #0xff                  	// #255
  4197b8:	lsl	x2, x2, #2
  4197bc:	bl	4028d0 <memset@plt>
  4197c0:	ldp	x23, x24, [sp, #48]
  4197c4:	ldp	x25, x26, [sp, #64]
  4197c8:	ldp	x27, x28, [sp, #80]
  4197cc:	b	4196c4 <_obstack_memory_used@@Base+0x9b4>
  4197d0:	ldr	x0, [sp, #120]
  4197d4:	ldp	x23, x24, [sp, #48]
  4197d8:	ldp	x25, x26, [sp, #64]
  4197dc:	ldp	x27, x28, [sp, #80]
  4197e0:	str	x0, [x19, #32]
  4197e4:	nop
  4197e8:	mov	w0, #0x0                   	// #0
  4197ec:	stp	x20, x22, [x19, #48]
  4197f0:	ldp	x19, x20, [sp, #16]
  4197f4:	ldp	x21, x22, [sp, #32]
  4197f8:	ldp	x29, x30, [sp], #192
  4197fc:	ret
  419800:	ldrb	w0, [x19, #140]
  419804:	cbnz	w0, 4196c0 <_obstack_memory_used@@Base+0x9b0>
  419808:	cmp	x20, x21
  41980c:	b.ge	419a38 <_obstack_memory_used@@Base+0xd28>  // b.tcont
  419810:	stp	x23, x24, [sp, #48]
  419814:	add	x24, x19, #0x20
  419818:	stp	x25, x26, [sp, #64]
  41981c:	stp	x27, x28, [sp, #80]
  419820:	b	419894 <_obstack_memory_used@@Base+0xb84>
  419824:	mov	w1, w0
  419828:	add	x2, sp, #0x78
  41982c:	add	x0, sp, #0x80
  419830:	bl	402d40 <wcrtomb@plt>
  419834:	cmp	x22, x0
  419838:	b.ne	419a24 <_obstack_memory_used@@Base+0xd14>  // b.any
  41983c:	ldr	x0, [x19, #8]
  419840:	mov	x2, x22
  419844:	add	x1, sp, #0x80
  419848:	add	x0, x0, x20
  41984c:	bl	402650 <memcpy@plt>
  419850:	ldr	x0, [x19, #16]
  419854:	add	x20, x20, #0x1
  419858:	add	x22, x22, x23
  41985c:	lsl	x1, x23, #2
  419860:	cmp	x20, x22
  419864:	str	w25, [x0, x23, lsl #2]
  419868:	b.ge	41988c <_obstack_memory_used@@Base+0xb7c>  // b.tcont
  41986c:	mvn	x2, x23
  419870:	add	x1, x1, #0x4
  419874:	add	x2, x2, x22
  419878:	add	x0, x0, x1
  41987c:	mov	x20, x22
  419880:	mov	w1, #0xff                  	// #255
  419884:	lsl	x2, x2, #2
  419888:	bl	4028d0 <memset@plt>
  41988c:	cmp	x20, x21
  419890:	b.ge	419a2c <_obstack_memory_used@@Base+0xd1c>  // b.tcont
  419894:	ldr	x25, [x19]
  419898:	mov	x23, x20
  41989c:	ldr	x22, [x19, #40]
  4198a0:	add	x0, x25, x22
  4198a4:	ldrb	w26, [x0, x20]
  4198a8:	tbnz	w26, #7, 4198b8 <_obstack_memory_used@@Base+0xba8>
  4198ac:	mov	x0, x24
  4198b0:	bl	402a10 <mbsinit@plt>
  4198b4:	cbnz	w0, 419928 <_obstack_memory_used@@Base+0xc18>
  4198b8:	ldr	x4, [x19, #32]
  4198bc:	add	x22, x22, x20
  4198c0:	sub	x26, x21, x20
  4198c4:	add	x1, x25, x22
  4198c8:	mov	x2, x26
  4198cc:	mov	x3, x24
  4198d0:	add	x0, sp, #0x74
  4198d4:	str	x4, [sp, #120]
  4198d8:	bl	418830 <wcrtomb@plt+0x15af0>
  4198dc:	mov	x22, x0
  4198e0:	sub	x0, x0, #0x1
  4198e4:	add	x27, sp, #0x74
  4198e8:	cmn	x0, #0x4
  4198ec:	b.hi	419950 <_obstack_memory_used@@Base+0xc40>  // b.pmore
  4198f0:	ldr	w28, [sp, #116]
  4198f4:	mov	w0, w28
  4198f8:	bl	402c70 <towupper@plt>
  4198fc:	mov	w25, w0
  419900:	cmp	w28, w0
  419904:	b.ne	419824 <_obstack_memory_used@@Base+0xb14>  // b.any
  419908:	ldp	x3, x0, [x19]
  41990c:	mov	x2, x22
  419910:	ldr	x1, [x19, #40]
  419914:	add	x1, x20, x1
  419918:	add	x1, x3, x1
  41991c:	add	x0, x0, x20
  419920:	bl	402650 <memcpy@plt>
  419924:	b	419850 <_obstack_memory_used@@Base+0xb40>
  419928:	bl	402940 <__ctype_toupper_loc@plt>
  41992c:	ldr	x0, [x0]
  419930:	ldr	x1, [x19, #8]
  419934:	ldr	w0, [x0, x26, lsl #2]
  419938:	strb	w0, [x1, x20]
  41993c:	ldp	x1, x0, [x19, #8]
  419940:	ldrb	w1, [x1, x20]
  419944:	str	w1, [x0, x20, lsl #2]
  419948:	add	x20, x20, #0x1
  41994c:	b	41988c <_obstack_memory_used@@Base+0xb7c>
  419950:	cmn	x0, #0x3
  419954:	b.eq	41998c <_obstack_memory_used@@Base+0xc7c>  // b.none
  419958:	ldp	x0, x1, [x19]
  41995c:	cmn	x22, #0x1
  419960:	ldr	x2, [x19, #40]
  419964:	add	x0, x0, x20
  419968:	ldrb	w0, [x0, x2]
  41996c:	strb	w0, [x1, x20]
  419970:	add	x20, x20, #0x1
  419974:	ldr	x1, [x19, #16]
  419978:	str	w0, [x1, x23, lsl #2]
  41997c:	b.ne	41988c <_obstack_memory_used@@Base+0xb7c>  // b.any
  419980:	ldr	x0, [sp, #120]
  419984:	str	x0, [x19, #32]
  419988:	b	41988c <_obstack_memory_used@@Base+0xb7c>
  41998c:	ldr	x1, [x19, #64]
  419990:	ldr	x0, [x19, #88]
  419994:	cmp	x1, x0
  419998:	b.lt	419ed4 <_obstack_memory_used@@Base+0x11c4>  // b.tstop
  41999c:	ldp	x0, x1, [x19]
  4199a0:	ldr	x2, [x19, #40]
  4199a4:	add	x0, x0, x20
  4199a8:	ldrb	w0, [x0, x2]
  4199ac:	strb	w0, [x1, x20]
  4199b0:	add	x20, x20, #0x1
  4199b4:	ldr	x1, [x19, #16]
  4199b8:	str	w0, [x1, x23, lsl #2]
  4199bc:	b	41988c <_obstack_memory_used@@Base+0xb7c>
  4199c0:	ldr	w6, [x19, #144]
  4199c4:	cmp	w6, #0x0
  4199c8:	b.le	419eec <_obstack_memory_used@@Base+0x11dc>
  4199cc:	cmp	x26, #0x0
  4199d0:	b.le	419eec <_obstack_memory_used@@Base+0x11dc>
  4199d4:	ldr	x1, [x19, #40]
  4199d8:	add	x28, sp, #0x80
  4199dc:	ldr	x5, [x19]
  4199e0:	add	x1, x22, x1
  4199e4:	sub	x1, x1, #0x1
  4199e8:	mov	x0, #0x1                   	// #1
  4199ec:	add	x5, x5, x1
  4199f0:	b	419a00 <_obstack_memory_used@@Base+0xcf0>
  4199f4:	cmp	x0, x26
  4199f8:	mov	x0, x3
  4199fc:	b.eq	419a1c <_obstack_memory_used@@Base+0xd0c>  // b.none
  419a00:	ldrb	w4, [x5, x0]
  419a04:	add	x1, x28, x0
  419a08:	cmp	w6, w0
  419a0c:	add	x3, x0, #0x1
  419a10:	ldrb	w4, [x2, x4]
  419a14:	sturb	w4, [x1, #-1]
  419a18:	b.gt	4199f4 <_obstack_memory_used@@Base+0xce4>
  419a1c:	mov	x25, x28
  419a20:	b	419704 <_obstack_memory_used@@Base+0x9f4>
  419a24:	mov	x22, x20
  419a28:	b	4196e4 <_obstack_memory_used@@Base+0x9d4>
  419a2c:	ldp	x23, x24, [sp, #48]
  419a30:	ldp	x25, x26, [sp, #64]
  419a34:	ldp	x27, x28, [sp, #80]
  419a38:	dup	v0.2d, x20
  419a3c:	mov	w0, #0x0                   	// #0
  419a40:	str	q0, [x19, #48]
  419a44:	b	4197f0 <_obstack_memory_used@@Base+0xae0>
  419a48:	ldr	x0, [x19, #8]
  419a4c:	mov	x1, x25
  419a50:	mov	x2, x23
  419a54:	add	x0, x0, x20
  419a58:	bl	402650 <memcpy@plt>
  419a5c:	b	419778 <_obstack_memory_used@@Base+0xa68>
  419a60:	ldp	x23, x24, [sp, #48]
  419a64:	ldp	x25, x26, [sp, #64]
  419a68:	ldp	x27, x28, [sp, #80]
  419a6c:	b	4196c4 <_obstack_memory_used@@Base+0x9b4>
  419a70:	cmn	x26, #0x3
  419a74:	b.ne	419a88 <_obstack_memory_used@@Base+0xd78>  // b.any
  419a78:	ldr	x1, [x19, #64]
  419a7c:	ldr	x0, [x19, #88]
  419a80:	cmp	x1, x0
  419a84:	b.lt	4197d0 <_obstack_memory_used@@Base+0xac0>  // b.tstop
  419a88:	ldr	x0, [x19]
  419a8c:	ldr	x2, [x19, #40]
  419a90:	add	x0, x0, x22
  419a94:	ldr	x1, [x19, #120]
  419a98:	ldrb	w0, [x0, x2]
  419a9c:	cbnz	x1, 419f40 <_obstack_memory_used@@Base+0x1230>
  419aa0:	ldr	x1, [x19, #8]
  419aa4:	mov	x2, x20
  419aa8:	strb	w0, [x1, x20]
  419aac:	ldrb	w1, [x19, #140]
  419ab0:	cbnz	w1, 419f34 <_obstack_memory_used@@Base+0x1224>
  419ab4:	ldr	x1, [x19, #16]
  419ab8:	add	x22, x22, #0x1
  419abc:	add	x20, x20, #0x1
  419ac0:	cmn	x23, #0x1
  419ac4:	str	w0, [x1, x2, lsl #2]
  419ac8:	b.ne	419a60 <_obstack_memory_used@@Base+0xd50>  // b.any
  419acc:	ldr	x0, [sp, #120]
  419ad0:	ldp	x23, x24, [sp, #48]
  419ad4:	ldp	x25, x26, [sp, #64]
  419ad8:	ldp	x27, x28, [sp, #80]
  419adc:	str	x0, [x19, #32]
  419ae0:	b	4196c4 <_obstack_memory_used@@Base+0x9b4>
  419ae4:	cmp	x26, #0x3
  419ae8:	ldr	x2, [x19, #24]
  419aec:	b.ls	419f24 <_obstack_memory_used@@Base+0x1214>  // b.plast
  419af0:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  419af4:	lsr	x1, x23, #1
  419af8:	add	x0, x2, x20, lsl #3
  419afc:	dup	v3.2d, x22
  419b00:	ldr	q1, [x3, #1072]
  419b04:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419b08:	add	x1, x0, x1, lsl #4
  419b0c:	ldr	q2, [x3]
  419b10:	mov	v0.16b, v1.16b
  419b14:	add	v1.2d, v1.2d, v2.2d
  419b18:	add	v0.2d, v3.2d, v0.2d
  419b1c:	str	q0, [x0], #16
  419b20:	cmp	x0, x1
  419b24:	b.ne	419b10 <_obstack_memory_used@@Base+0xe00>  // b.any
  419b28:	and	x0, x23, #0xfffffffffffffffe
  419b2c:	tbz	w23, #0, 419780 <_obstack_memory_used@@Base+0xa70>
  419b30:	add	x3, x0, x20
  419b34:	add	x4, x0, x22
  419b38:	add	x1, x0, #0x1
  419b3c:	cmp	x1, x23
  419b40:	str	x4, [x2, x3, lsl #3]
  419b44:	b.cs	419780 <_obstack_memory_used@@Base+0xa70>  // b.hs, b.nlast
  419b48:	add	x4, x1, x20
  419b4c:	add	x3, x1, x22
  419b50:	add	x1, x0, #0x2
  419b54:	cmp	x23, x1
  419b58:	str	x3, [x2, x4, lsl #3]
  419b5c:	b.ls	419780 <_obstack_memory_used@@Base+0xa70>  // b.plast
  419b60:	add	x3, x20, x1
  419b64:	add	x1, x1, x22
  419b68:	add	x0, x0, #0x3
  419b6c:	cmp	x0, x23
  419b70:	str	x1, [x2, x3, lsl #3]
  419b74:	b.cs	419780 <_obstack_memory_used@@Base+0xa70>  // b.hs, b.nlast
  419b78:	add	x1, x0, x20
  419b7c:	add	x0, x0, x22
  419b80:	str	x0, [x2, x1, lsl #3]
  419b84:	b	419780 <_obstack_memory_used@@Base+0xa70>
  419b88:	cmn	x0, #0x1
  419b8c:	b.eq	419a48 <_obstack_memory_used@@Base+0xd38>  // b.none
  419b90:	add	x24, x0, x20
  419b94:	ldr	x0, [x19, #64]
  419b98:	cmp	x24, x0
  419b9c:	b.hi	4197d0 <_obstack_memory_used@@Base+0xac0>  // b.pmore
  419ba0:	ldr	x1, [x19, #24]
  419ba4:	cbz	x1, 419ef8 <_obstack_memory_used@@Base+0x11e8>
  419ba8:	ldrb	w0, [x19, #140]
  419bac:	cbnz	w0, 419c48 <_obstack_memory_used@@Base+0xf38>
  419bb0:	cbz	x20, 419c40 <_obstack_memory_used@@Base+0xf30>
  419bb4:	sub	x0, x20, #0x1
  419bb8:	cmp	x0, #0x4
  419bbc:	ldr	x1, [x19, #24]
  419bc0:	b.ls	419f2c <_obstack_memory_used@@Base+0x121c>  // b.plast
  419bc4:	adrp	x4, 42b000 <_obstack_memory_used@@Base+0x122f0>
  419bc8:	lsr	x0, x20, #1
  419bcc:	mov	x3, x1
  419bd0:	ldr	q0, [x4, #1072]
  419bd4:	adrp	x4, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419bd8:	add	x0, x1, x0, lsl #4
  419bdc:	ldr	q1, [x4]
  419be0:	mov	v2.16b, v0.16b
  419be4:	add	v0.2d, v0.2d, v1.2d
  419be8:	str	q2, [x3], #16
  419bec:	cmp	x3, x0
  419bf0:	b.ne	419be0 <_obstack_memory_used@@Base+0xed0>  // b.any
  419bf4:	and	x0, x20, #0xfffffffffffffffe
  419bf8:	tbz	w20, #0, 419c40 <_obstack_memory_used@@Base+0xf30>
  419bfc:	str	x0, [x1, x0, lsl #3]
  419c00:	add	x3, x0, #0x1
  419c04:	cmp	x20, x3
  419c08:	b.ls	419c40 <_obstack_memory_used@@Base+0xf30>  // b.plast
  419c0c:	str	x3, [x1, x3, lsl #3]
  419c10:	add	x3, x0, #0x2
  419c14:	cmp	x20, x3
  419c18:	b.ls	419c40 <_obstack_memory_used@@Base+0xf30>  // b.plast
  419c1c:	str	x3, [x1, x3, lsl #3]
  419c20:	add	x3, x0, #0x3
  419c24:	cmp	x20, x3
  419c28:	b.ls	419c40 <_obstack_memory_used@@Base+0xf30>  // b.plast
  419c2c:	str	x3, [x1, x3, lsl #3]
  419c30:	add	x0, x0, #0x4
  419c34:	cmp	x20, x0
  419c38:	b.ls	419c40 <_obstack_memory_used@@Base+0xf30>  // b.plast
  419c3c:	str	x0, [x1, x0, lsl #3]
  419c40:	mov	w0, #0x1                   	// #1
  419c44:	strb	w0, [x19, #140]
  419c48:	ldr	x0, [x19, #8]
  419c4c:	mov	x1, x28
  419c50:	str	x2, [sp, #104]
  419c54:	add	x0, x0, x20
  419c58:	bl	402650 <memcpy@plt>
  419c5c:	ldp	x0, x4, [x19, #16]
  419c60:	str	w27, [x0, x20, lsl #2]
  419c64:	ldr	x2, [sp, #104]
  419c68:	lsl	x5, x20, #2
  419c6c:	lsl	x3, x20, #3
  419c70:	cmp	x2, #0x1
  419c74:	str	x22, [x4, x20, lsl #3]
  419c78:	add	x9, x0, x5
  419c7c:	add	x10, x4, x3
  419c80:	b.ls	419e8c <_obstack_memory_used@@Base+0x117c>  // b.plast
  419c84:	cmp	x23, #0x1
  419c88:	mov	x1, #0x1                   	// #1
  419c8c:	b.ls	419d9c <_obstack_memory_used@@Base+0x108c>  // b.plast
  419c90:	cmp	x23, x2
  419c94:	add	x3, x3, #0x8
  419c98:	csel	x6, x23, x2, ls  // ls = plast
  419c9c:	add	x3, x4, x3
  419ca0:	add	x7, x20, x6
  419ca4:	add	x5, x5, #0x4
  419ca8:	add	x5, x0, x5
  419cac:	sub	x8, x6, #0x2
  419cb0:	add	x11, x0, x7, lsl #2
  419cb4:	add	x7, x4, x7, lsl #3
  419cb8:	cmp	x11, x3
  419cbc:	ccmp	x7, x5, #0x0, hi  // hi = pmore
  419cc0:	ccmp	x8, #0x7, #0x0, ls  // ls = plast
  419cc4:	b.ls	419f74 <_obstack_memory_used@@Base+0x1264>  // b.plast
  419cc8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419ccc:	sub	x7, x6, #0x1
  419cd0:	mov	x1, x3
  419cd4:	mov	x3, x5
  419cd8:	ldr	q1, [x8, #16]
  419cdc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419ce0:	lsr	x5, x7, #2
  419ce4:	dup	v3.2d, x22
  419ce8:	ldr	q7, [x8, #32]
  419cec:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419cf0:	mvni	v5.4s, #0x0
  419cf4:	add	x5, x1, x5, lsl #5
  419cf8:	ldr	q6, [x8]
  419cfc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x132f0>
  419d00:	ldr	q4, [x8, #48]
  419d04:	mov	v0.16b, v1.16b
  419d08:	add	v1.2d, v1.2d, v7.2d
  419d0c:	add	v2.2d, v0.2d, v6.2d
  419d10:	add	v16.2d, v0.2d, v3.2d
  419d14:	add	v0.2d, v0.2d, v4.2d
  419d18:	add	v2.2d, v2.2d, v3.2d
  419d1c:	stp	q16, q2, [x1]
  419d20:	add	x1, x1, #0x20
  419d24:	cmp	x1, x5
  419d28:	str	q5, [x3], #16
  419d2c:	b.ne	419d04 <_obstack_memory_used@@Base+0xff4>  // b.any
  419d30:	and	x3, x7, #0xfffffffffffffffc
  419d34:	mov	x1, v0.d[1]
  419d38:	cmp	x7, x3
  419d3c:	add	x5, x3, #0x1
  419d40:	b.eq	419d94 <_obstack_memory_used@@Base+0x1084>  // b.none
  419d44:	add	x8, x20, x5
  419d48:	add	x5, x22, x5
  419d4c:	mov	w7, #0xffffffff            	// #-1
  419d50:	add	x1, x3, #0x2
  419d54:	cmp	x6, x1
  419d58:	str	x5, [x4, x8, lsl #3]
  419d5c:	str	w7, [x0, x8, lsl #2]
  419d60:	b.ls	419d94 <_obstack_memory_used@@Base+0x1084>  // b.plast
  419d64:	add	x5, x20, x1
  419d68:	add	x8, x22, x1
  419d6c:	add	x1, x3, #0x3
  419d70:	cmp	x6, x1
  419d74:	str	x8, [x4, x5, lsl #3]
  419d78:	str	w7, [x0, x5, lsl #2]
  419d7c:	b.ls	419d94 <_obstack_memory_used@@Base+0x1084>  // b.plast
  419d80:	add	x5, x20, x1
  419d84:	add	x6, x22, x1
  419d88:	add	x1, x3, #0x4
  419d8c:	str	x6, [x4, x5, lsl #3]
  419d90:	str	w7, [x0, x5, lsl #2]
  419d94:	cmp	x2, x1
  419d98:	b.ls	419e8c <_obstack_memory_used@@Base+0x117c>  // b.plast
  419d9c:	sub	x6, x2, x1
  419da0:	add	x5, x1, #0x1
  419da4:	add	x3, x20, x1
  419da8:	cmp	x2, x5
  419dac:	lsl	x8, x6, #3
  419db0:	mov	x11, #0x8                   	// #8
  419db4:	lsl	x7, x6, #2
  419db8:	csel	x8, x8, x11, cs  // cs = hs, nlast
  419dbc:	add	x8, x8, x3, lsl #3
  419dc0:	mov	x11, #0x4                   	// #4
  419dc4:	csel	x7, x7, x11, cs  // cs = hs, nlast
  419dc8:	add	x8, x4, x8
  419dcc:	add	x7, x7, x3, lsl #2
  419dd0:	add	x11, x0, x3, lsl #2
  419dd4:	add	x7, x0, x7
  419dd8:	cmp	x11, x8
  419ddc:	add	x3, x4, x3, lsl #3
  419de0:	sub	x8, x2, #0x1
  419de4:	ccmp	x3, x7, #0x2, cc  // cc = lo, ul, last
  419de8:	sub	x7, x8, x1
  419dec:	cset	w8, cs  // cs = hs, nlast
  419df0:	cmp	x7, #0x6
  419df4:	ccmp	x2, x5, #0x0, hi  // hi = pmore
  419df8:	cset	w7, cs  // cs = hs, nlast
  419dfc:	tst	w8, w7
  419e00:	b.eq	419f4c <_obstack_memory_used@@Base+0x123c>  // b.none
  419e04:	mvni	v2.4s, #0x0
  419e08:	cmp	x2, x5
  419e0c:	add	x5, x26, x22
  419e10:	fmov	d0, x5
  419e14:	csinc	x5, x6, xzr, cs  // cs = hs, nlast
  419e18:	mov	x6, x11
  419e1c:	dup	v1.2d, v0.d[0]
  419e20:	lsr	x7, x5, #2
  419e24:	add	x7, x3, x7, lsl #5
  419e28:	stp	q1, q1, [x3]
  419e2c:	add	x3, x3, #0x20
  419e30:	cmp	x3, x7
  419e34:	str	q2, [x6], #16
  419e38:	b.ne	419e28 <_obstack_memory_used@@Base+0x1118>  // b.any
  419e3c:	and	x3, x5, #0xfffffffffffffffc
  419e40:	add	x1, x1, x3
  419e44:	cmp	x5, x3
  419e48:	b.eq	419e8c <_obstack_memory_used@@Base+0x117c>  // b.none
  419e4c:	add	x5, x1, x20
  419e50:	mov	w6, #0xffffffff            	// #-1
  419e54:	add	x3, x1, #0x1
  419e58:	cmp	x3, x2
  419e5c:	str	d0, [x4, x5, lsl #3]
  419e60:	str	w6, [x0, x5, lsl #2]
  419e64:	b.cs	419e8c <_obstack_memory_used@@Base+0x117c>  // b.hs, b.nlast
  419e68:	add	x3, x3, x20
  419e6c:	add	x1, x1, #0x2
  419e70:	cmp	x2, x1
  419e74:	str	d0, [x4, x3, lsl #3]
  419e78:	str	w6, [x0, x3, lsl #2]
  419e7c:	b.ls	419e8c <_obstack_memory_used@@Base+0x117c>  // b.plast
  419e80:	add	x20, x20, x1
  419e84:	str	d0, [x4, x20, lsl #3]
  419e88:	str	w6, [x0, x20, lsl #2]
  419e8c:	sub	x0, x2, x23
  419e90:	ldp	x1, x2, [x19, #88]
  419e94:	add	x1, x0, x1
  419e98:	str	x1, [x19, #88]
  419e9c:	cmp	x22, x2
  419ea0:	b.ge	419eb0 <_obstack_memory_used@@Base+0x11a0>  // b.tcont
  419ea4:	ldr	x2, [x19, #104]
  419ea8:	add	x0, x2, x0
  419eac:	str	x0, [x19, #104]
  419eb0:	ldr	x21, [x19, #64]
  419eb4:	mov	x20, x24
  419eb8:	add	x22, x23, x22
  419ebc:	cmp	x21, x1
  419ec0:	csel	x21, x21, x1, le
  419ec4:	ldp	x23, x24, [sp, #48]
  419ec8:	ldp	x25, x26, [sp, #64]
  419ecc:	ldp	x27, x28, [sp, #80]
  419ed0:	b	4196c4 <_obstack_memory_used@@Base+0x9b4>
  419ed4:	ldr	x0, [sp, #120]
  419ed8:	ldp	x23, x24, [sp, #48]
  419edc:	ldp	x25, x26, [sp, #64]
  419ee0:	ldp	x27, x28, [sp, #80]
  419ee4:	str	x0, [x19, #32]
  419ee8:	b	419a38 <_obstack_memory_used@@Base+0xd28>
  419eec:	add	x28, sp, #0x80
  419ef0:	mov	x25, x28
  419ef4:	b	419704 <_obstack_memory_used@@Base+0x9f4>
  419ef8:	lsl	x0, x0, #3
  419efc:	str	x2, [sp, #104]
  419f00:	bl	402800 <malloc@plt>
  419f04:	str	x0, [x19, #24]
  419f08:	ldr	x2, [sp, #104]
  419f0c:	cbnz	x0, 419ba8 <_obstack_memory_used@@Base+0xe98>
  419f10:	mov	w0, #0xc                   	// #12
  419f14:	ldp	x23, x24, [sp, #48]
  419f18:	ldp	x25, x26, [sp, #64]
  419f1c:	ldp	x27, x28, [sp, #80]
  419f20:	b	4197f0 <_obstack_memory_used@@Base+0xae0>
  419f24:	mov	x0, #0x0                   	// #0
  419f28:	b	419b30 <_obstack_memory_used@@Base+0xe20>
  419f2c:	mov	x0, #0x0                   	// #0
  419f30:	b	419bfc <_obstack_memory_used@@Base+0xeec>
  419f34:	ldr	x1, [x19, #24]
  419f38:	str	x22, [x1, x20, lsl #3]
  419f3c:	b	419ab4 <_obstack_memory_used@@Base+0xda4>
  419f40:	and	x0, x0, #0xff
  419f44:	ldrb	w0, [x1, x0]
  419f48:	b	419aa0 <_obstack_memory_used@@Base+0xd90>
  419f4c:	add	x0, x26, x22
  419f50:	fmov	d0, x0
  419f54:	mov	w0, #0xffffffff            	// #-1
  419f58:	str	d0, [x10, x1, lsl #3]
  419f5c:	cmp	x2, x5
  419f60:	str	w0, [x9, x1, lsl #2]
  419f64:	mov	x1, x5
  419f68:	add	x5, x5, #0x1
  419f6c:	b.hi	419f58 <_obstack_memory_used@@Base+0x1248>  // b.pmore
  419f70:	b	419e8c <_obstack_memory_used@@Base+0x117c>
  419f74:	mov	w3, #0xffffffff            	// #-1
  419f78:	add	x5, x22, x1
  419f7c:	str	x5, [x10, x1, lsl #3]
  419f80:	str	w3, [x9, x1, lsl #2]
  419f84:	add	x1, x1, #0x1
  419f88:	cmp	x6, x1
  419f8c:	b.hi	419f78 <_obstack_memory_used@@Base+0x1268>  // b.pmore
  419f90:	b	419d94 <_obstack_memory_used@@Base+0x1084>
  419f94:	nop
  419f98:	stp	x29, x30, [sp, #-96]!
  419f9c:	mov	x29, sp
  419fa0:	stp	x21, x22, [sp, #32]
  419fa4:	ldp	x21, x4, [x0, #8]
  419fa8:	stp	x19, x20, [sp, #16]
  419fac:	mov	x19, x0
  419fb0:	stp	x23, x24, [sp, #48]
  419fb4:	mov	x20, x2
  419fb8:	mov	x24, x1
  419fbc:	stp	x25, x26, [sp, #64]
  419fc0:	and	w25, w2, #0xff
  419fc4:	cmp	x4, x21
  419fc8:	b.cs	41a074 <_obstack_memory_used@@Base+0x1364>  // b.hs, b.nlast
  419fcc:	ldr	x22, [x0, #24]
  419fd0:	ldr	x21, [x0, #40]
  419fd4:	lsl	x3, x4, #4
  419fd8:	ldr	x5, [x19]
  419fdc:	and	w1, w20, #0xfffc00ff
  419fe0:	cmp	w25, #0x6
  419fe4:	add	x2, x5, x3
  419fe8:	cset	w0, eq  // eq = none
  419fec:	str	x24, [x5, x3]
  419ff0:	cmp	w25, #0x5
  419ff4:	str	x20, [x2, #8]
  419ff8:	str	w1, [x2, #8]
  419ffc:	b.ne	41a00c <_obstack_memory_used@@Base+0x12fc>  // b.any
  41a000:	ldr	w0, [x19, #180]
  41a004:	cmp	w0, #0x1
  41a008:	cset	w0, gt
  41a00c:	ldrb	w1, [x2, #10]
  41a010:	mov	x3, #0xffffffffffffffff    	// #-1
  41a014:	bfi	w1, w0, #4, #1
  41a018:	strb	w1, [x2, #10]
  41a01c:	str	x3, [x22, x4, lsl #3]
  41a020:	ldr	x0, [x19, #16]
  41a024:	add	x0, x0, x0, lsl #1
  41a028:	add	x0, x21, x0, lsl #3
  41a02c:	stp	xzr, xzr, [x0]
  41a030:	str	xzr, [x0, #16]
  41a034:	ldr	x0, [x19, #16]
  41a038:	ldr	x1, [x19, #48]
  41a03c:	add	x0, x0, x0, lsl #1
  41a040:	add	x0, x1, x0, lsl #3
  41a044:	stp	xzr, xzr, [x0]
  41a048:	str	xzr, [x0, #16]
  41a04c:	ldr	x1, [x19, #16]
  41a050:	mov	x0, x1
  41a054:	add	x1, x1, #0x1
  41a058:	str	x1, [x19, #16]
  41a05c:	ldp	x19, x20, [sp, #16]
  41a060:	ldp	x21, x22, [sp, #32]
  41a064:	ldp	x23, x24, [sp, #48]
  41a068:	ldp	x25, x26, [sp, #64]
  41a06c:	ldp	x29, x30, [sp], #96
  41a070:	ret
  41a074:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41a078:	lsl	x23, x21, #1
  41a07c:	movk	x0, #0xaaa, lsl #48
  41a080:	cmp	x0, x21, lsl #1
  41a084:	b.cc	41a120 <_obstack_memory_used@@Base+0x1410>  // b.lo, b.ul, b.last
  41a088:	ldr	x0, [x19]
  41a08c:	lsl	x1, x21, #5
  41a090:	bl	402930 <realloc@plt>
  41a094:	mov	x1, x0
  41a098:	cbz	x0, 41a120 <_obstack_memory_used@@Base+0x1410>
  41a09c:	ldr	x0, [x19, #24]
  41a0a0:	str	x27, [sp, #80]
  41a0a4:	str	x1, [x19]
  41a0a8:	lsl	x26, x21, #4
  41a0ac:	mov	x1, x26
  41a0b0:	add	x21, x23, x21
  41a0b4:	bl	402930 <realloc@plt>
  41a0b8:	mov	x22, x0
  41a0bc:	ldr	x0, [x19, #32]
  41a0c0:	mov	x1, x26
  41a0c4:	lsl	x21, x21, #4
  41a0c8:	bl	402930 <realloc@plt>
  41a0cc:	mov	x26, x0
  41a0d0:	ldr	x0, [x19, #40]
  41a0d4:	mov	x1, x21
  41a0d8:	bl	402930 <realloc@plt>
  41a0dc:	mov	x1, x21
  41a0e0:	mov	x21, x0
  41a0e4:	ldr	x0, [x19, #48]
  41a0e8:	bl	402930 <realloc@plt>
  41a0ec:	mov	x27, x0
  41a0f0:	cmp	x22, #0x0
  41a0f4:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  41a0f8:	b.eq	41a128 <_obstack_memory_used@@Base+0x1418>  // b.none
  41a0fc:	cmp	x21, #0x0
  41a100:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41a104:	b.eq	41a128 <_obstack_memory_used@@Base+0x1418>  // b.none
  41a108:	str	x23, [x19, #8]
  41a10c:	stp	x22, x26, [x19, #24]
  41a110:	stp	x21, x0, [x19, #40]
  41a114:	ldr	x4, [x19, #16]
  41a118:	ldr	x27, [sp, #80]
  41a11c:	b	419fd4 <_obstack_memory_used@@Base+0x12c4>
  41a120:	mov	x0, #0xffffffffffffffff    	// #-1
  41a124:	b	41a05c <_obstack_memory_used@@Base+0x134c>
  41a128:	mov	x0, x22
  41a12c:	bl	402ae0 <free@plt>
  41a130:	mov	x0, x26
  41a134:	bl	402ae0 <free@plt>
  41a138:	mov	x0, x21
  41a13c:	bl	402ae0 <free@plt>
  41a140:	mov	x0, x27
  41a144:	bl	402ae0 <free@plt>
  41a148:	mov	x0, #0xffffffffffffffff    	// #-1
  41a14c:	ldr	x27, [sp, #80]
  41a150:	b	41a05c <_obstack_memory_used@@Base+0x134c>
  41a154:	nop
  41a158:	stp	x29, x30, [sp, #-64]!
  41a15c:	mov	x29, sp
  41a160:	str	x23, [sp, #48]
  41a164:	mov	x23, x0
  41a168:	ldr	x0, [x0, #232]
  41a16c:	cmp	x0, #0x0
  41a170:	b.le	41a200 <_obstack_memory_used@@Base+0x14f0>
  41a174:	stp	x19, x20, [sp, #16]
  41a178:	stp	x21, x22, [sp, #32]
  41a17c:	mov	x22, #0x0                   	// #0
  41a180:	ldr	x0, [x23, #248]
  41a184:	ldr	x21, [x0, x22, lsl #3]
  41a188:	ldr	x0, [x21, #32]
  41a18c:	cmp	x0, #0x0
  41a190:	b.le	41a1c0 <_obstack_memory_used@@Base+0x14b0>
  41a194:	mov	x19, #0x0                   	// #0
  41a198:	ldr	x1, [x21, #40]
  41a19c:	ldr	x20, [x1, x19, lsl #3]
  41a1a0:	add	x19, x19, #0x1
  41a1a4:	ldr	x0, [x20, #32]
  41a1a8:	bl	402ae0 <free@plt>
  41a1ac:	mov	x0, x20
  41a1b0:	bl	402ae0 <free@plt>
  41a1b4:	ldr	x1, [x21, #32]
  41a1b8:	cmp	x1, x19
  41a1bc:	b.gt	41a198 <_obstack_memory_used@@Base+0x1488>
  41a1c0:	ldr	x0, [x21, #40]
  41a1c4:	bl	402ae0 <free@plt>
  41a1c8:	ldr	x0, [x21, #16]
  41a1cc:	cbz	x0, 41a214 <_obstack_memory_used@@Base+0x1504>
  41a1d0:	ldr	x0, [x0, #16]
  41a1d4:	add	x22, x22, #0x1
  41a1d8:	bl	402ae0 <free@plt>
  41a1dc:	ldr	x0, [x21, #16]
  41a1e0:	bl	402ae0 <free@plt>
  41a1e4:	mov	x0, x21
  41a1e8:	bl	402ae0 <free@plt>
  41a1ec:	ldr	x0, [x23, #232]
  41a1f0:	cmp	x0, x22
  41a1f4:	b.gt	41a180 <_obstack_memory_used@@Base+0x1470>
  41a1f8:	ldp	x19, x20, [sp, #16]
  41a1fc:	ldp	x21, x22, [sp, #32]
  41a200:	str	xzr, [x23, #200]
  41a204:	str	xzr, [x23, #232]
  41a208:	ldr	x23, [sp, #48]
  41a20c:	ldp	x29, x30, [sp], #64
  41a210:	ret
  41a214:	mov	x0, x21
  41a218:	bl	402ae0 <free@plt>
  41a21c:	ldr	x0, [x23, #232]
  41a220:	add	x22, x22, #0x1
  41a224:	cmp	x0, x22
  41a228:	b.gt	41a180 <_obstack_memory_used@@Base+0x1470>
  41a22c:	b	41a1f8 <_obstack_memory_used@@Base+0x14e8>
  41a230:	cbz	x1, 41a3c4 <_obstack_memory_used@@Base+0x16b4>
  41a234:	stp	x29, x30, [sp, #-48]!
  41a238:	mov	x29, sp
  41a23c:	stp	x19, x20, [sp, #16]
  41a240:	ldr	x19, [x1, #8]
  41a244:	stp	x21, x22, [sp, #32]
  41a248:	mov	x21, x1
  41a24c:	cbz	x19, 41a334 <_obstack_memory_used@@Base+0x1624>
  41a250:	ldp	x2, x1, [x0]
  41a254:	mov	x20, x0
  41a258:	add	x0, x1, x19, lsl #1
  41a25c:	cmp	x2, x0
  41a260:	b.lt	41a37c <_obstack_memory_used@@Base+0x166c>  // b.tstop
  41a264:	cbz	x1, 41a3a8 <_obstack_memory_used@@Base+0x1698>
  41a268:	subs	x2, x19, #0x1
  41a26c:	sub	x3, x1, #0x1
  41a270:	add	x19, x1, x19, lsl #1
  41a274:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  41a278:	b.lt	41a2c8 <_obstack_memory_used@@Base+0x15b8>  // b.tstop
  41a27c:	ldr	x0, [x20, #16]
  41a280:	ldr	x1, [x21, #16]
  41a284:	b	41a2a4 <_obstack_memory_used@@Base+0x1594>
  41a288:	b.ge	41a348 <_obstack_memory_used@@Base+0x1638>  // b.tcont
  41a28c:	sub	x19, x19, #0x1
  41a290:	sub	x2, x2, #0x1
  41a294:	str	x4, [x0, x19, lsl #3]
  41a298:	cmp	x2, #0x0
  41a29c:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  41a2a0:	b.lt	41a2c8 <_obstack_memory_used@@Base+0x15b8>  // b.tstop
  41a2a4:	ldr	x5, [x0, x3, lsl #3]
  41a2a8:	ldr	x4, [x1, x2, lsl #3]
  41a2ac:	cmp	x5, x4
  41a2b0:	b.ne	41a288 <_obstack_memory_used@@Base+0x1578>  // b.any
  41a2b4:	sub	x2, x2, #0x1
  41a2b8:	sub	x3, x3, #0x1
  41a2bc:	cmp	x2, #0x0
  41a2c0:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  41a2c4:	b.ge	41a2a4 <_obstack_memory_used@@Base+0x1594>  // b.tcont
  41a2c8:	tbnz	x2, #63, 41a2e8 <_obstack_memory_used@@Base+0x15d8>
  41a2cc:	ldr	x0, [x20, #16]
  41a2d0:	add	x2, x2, #0x1
  41a2d4:	ldr	x1, [x21, #16]
  41a2d8:	sub	x19, x19, x2
  41a2dc:	lsl	x2, x2, #3
  41a2e0:	add	x0, x0, x19, lsl #3
  41a2e4:	bl	402650 <memcpy@plt>
  41a2e8:	ldr	x3, [x20, #8]
  41a2ec:	ldr	x2, [x21, #8]
  41a2f0:	add	x2, x3, x2, lsl #1
  41a2f4:	sub	x5, x2, #0x1
  41a2f8:	subs	x2, x2, x19
  41a2fc:	b.eq	41a334 <_obstack_memory_used@@Base+0x1624>  // b.none
  41a300:	ldr	x0, [x20, #16]
  41a304:	sub	x1, x3, #0x1
  41a308:	add	x3, x3, x2
  41a30c:	str	x3, [x20, #8]
  41a310:	ldr	x4, [x0, x5, lsl #3]
  41a314:	add	x6, x1, x2
  41a318:	ldr	x3, [x0, x1, lsl #3]
  41a31c:	cmp	x4, x3
  41a320:	b.le	41a350 <_obstack_memory_used@@Base+0x1640>
  41a324:	str	x4, [x0, x6, lsl #3]
  41a328:	sub	x5, x5, #0x1
  41a32c:	subs	x2, x2, #0x1
  41a330:	b.ne	41a310 <_obstack_memory_used@@Base+0x1600>  // b.any
  41a334:	mov	w0, #0x0                   	// #0
  41a338:	ldp	x19, x20, [sp, #16]
  41a33c:	ldp	x21, x22, [sp, #32]
  41a340:	ldp	x29, x30, [sp], #48
  41a344:	ret
  41a348:	sub	x3, x3, #0x1
  41a34c:	b	41a298 <_obstack_memory_used@@Base+0x1588>
  41a350:	str	x3, [x0, x6, lsl #3]
  41a354:	subs	x1, x1, #0x1
  41a358:	b.pl	41a310 <_obstack_memory_used@@Base+0x1600>  // b.nfrst
  41a35c:	add	x1, x0, x19, lsl #3
  41a360:	lsl	x2, x2, #3
  41a364:	bl	402650 <memcpy@plt>
  41a368:	mov	w0, #0x0                   	// #0
  41a36c:	ldp	x19, x20, [sp, #16]
  41a370:	ldp	x21, x22, [sp, #32]
  41a374:	ldp	x29, x30, [sp], #48
  41a378:	ret
  41a37c:	ldr	x0, [x20, #16]
  41a380:	add	x19, x19, x2
  41a384:	lsl	x22, x19, #1
  41a388:	lsl	x1, x19, #4
  41a38c:	bl	402930 <realloc@plt>
  41a390:	cbz	x0, 41a3cc <_obstack_memory_used@@Base+0x16bc>
  41a394:	ldr	x1, [x20, #8]
  41a398:	ldr	x19, [x21, #8]
  41a39c:	str	x22, [x20]
  41a3a0:	str	x0, [x20, #16]
  41a3a4:	cbnz	x1, 41a268 <_obstack_memory_used@@Base+0x1558>
  41a3a8:	ldr	x1, [x21, #16]
  41a3ac:	str	x19, [x20, #8]
  41a3b0:	ldr	x0, [x20, #16]
  41a3b4:	ldr	x2, [x21, #8]
  41a3b8:	lsl	x2, x2, #3
  41a3bc:	bl	402650 <memcpy@plt>
  41a3c0:	b	41a334 <_obstack_memory_used@@Base+0x1624>
  41a3c4:	mov	w0, #0x0                   	// #0
  41a3c8:	ret
  41a3cc:	mov	w0, #0xc                   	// #12
  41a3d0:	b	41a338 <_obstack_memory_used@@Base+0x1628>
  41a3d4:	nop
  41a3d8:	ldr	x4, [x1, #8]
  41a3dc:	cbz	x4, 41a550 <_obstack_memory_used@@Base+0x1840>
  41a3e0:	stp	x29, x30, [sp, #-48]!
  41a3e4:	mov	x29, sp
  41a3e8:	ldr	x8, [x2, #8]
  41a3ec:	stp	x19, x20, [sp, #16]
  41a3f0:	mov	x19, x0
  41a3f4:	stp	x21, x22, [sp, #32]
  41a3f8:	mov	w0, #0x0                   	// #0
  41a3fc:	mov	x21, x2
  41a400:	cbz	x8, 41a4f4 <_obstack_memory_used@@Base+0x17e4>
  41a404:	ldp	x22, x3, [x19]
  41a408:	mov	x20, x1
  41a40c:	add	x1, x4, x8
  41a410:	ldr	x0, [x19, #16]
  41a414:	add	x2, x1, x3
  41a418:	cmp	x2, x22
  41a41c:	b.gt	41a558 <_obstack_memory_used@@Base+0x1848>
  41a420:	ldr	x10, [x20, #16]
  41a424:	sub	x6, x4, #0x1
  41a428:	ldr	x9, [x21, #16]
  41a42c:	sub	x7, x8, #0x1
  41a430:	add	x4, x3, x4
  41a434:	sub	x3, x3, #0x1
  41a438:	add	x8, x4, x8
  41a43c:	ldr	x5, [x9, x7, lsl #3]
  41a440:	ldr	x4, [x10, x6, lsl #3]
  41a444:	nop
  41a448:	cmp	x4, x5
  41a44c:	b.eq	41a468 <_obstack_memory_used@@Base+0x1758>  // b.none
  41a450:	b.ge	41a540 <_obstack_memory_used@@Base+0x1830>  // b.tcont
  41a454:	subs	x7, x7, #0x1
  41a458:	b.mi	41a4b0 <_obstack_memory_used@@Base+0x17a0>  // b.first
  41a45c:	ldr	x5, [x9, x7, lsl #3]
  41a460:	cmp	x4, x5
  41a464:	b.ne	41a450 <_obstack_memory_used@@Base+0x1740>  // b.any
  41a468:	tbz	x3, #63, 41a47c <_obstack_memory_used@@Base+0x176c>
  41a46c:	b	41a48c <_obstack_memory_used@@Base+0x177c>
  41a470:	sub	x3, x3, #0x1
  41a474:	cmn	x3, #0x1
  41a478:	b.eq	41a48c <_obstack_memory_used@@Base+0x177c>  // b.none
  41a47c:	ldr	x5, [x0, x3, lsl #3]
  41a480:	cmp	x5, x4
  41a484:	b.gt	41a470 <_obstack_memory_used@@Base+0x1760>
  41a488:	b.eq	41a494 <_obstack_memory_used@@Base+0x1784>  // b.none
  41a48c:	sub	x8, x8, #0x1
  41a490:	str	x4, [x0, x8, lsl #3]
  41a494:	subs	x6, x6, #0x1
  41a498:	b.mi	41a4b0 <_obstack_memory_used@@Base+0x17a0>  // b.first
  41a49c:	subs	x7, x7, #0x1
  41a4a0:	b.mi	41a4b0 <_obstack_memory_used@@Base+0x17a0>  // b.first
  41a4a4:	ldr	x4, [x10, x6, lsl #3]
  41a4a8:	ldr	x5, [x9, x7, lsl #3]
  41a4ac:	b	41a460 <_obstack_memory_used@@Base+0x1750>
  41a4b0:	ldr	x1, [x19, #8]
  41a4b4:	ldr	x4, [x20, #8]
  41a4b8:	sub	x2, x1, #0x1
  41a4bc:	ldr	x3, [x21, #8]
  41a4c0:	add	x4, x1, x4
  41a4c4:	add	x4, x4, x3
  41a4c8:	sub	x3, x4, x8
  41a4cc:	sub	x4, x4, #0x1
  41a4d0:	add	x1, x1, x3
  41a4d4:	str	x1, [x19, #8]
  41a4d8:	cmp	x3, #0x0
  41a4dc:	ccmp	x2, #0x0, #0x1, gt
  41a4e0:	b.ge	41a514 <_obstack_memory_used@@Base+0x1804>  // b.tcont
  41a4e4:	lsl	x2, x3, #3
  41a4e8:	add	x1, x0, x8, lsl #3
  41a4ec:	bl	402650 <memcpy@plt>
  41a4f0:	mov	w0, #0x0                   	// #0
  41a4f4:	ldp	x19, x20, [sp, #16]
  41a4f8:	ldp	x21, x22, [sp, #32]
  41a4fc:	ldp	x29, x30, [sp], #48
  41a500:	ret
  41a504:	str	x1, [x0, x6, lsl #3]
  41a508:	sub	x2, x2, #0x1
  41a50c:	cmn	x2, #0x1
  41a510:	b.eq	41a4e4 <_obstack_memory_used@@Base+0x17d4>  // b.none
  41a514:	ldr	x5, [x0, x4, lsl #3]
  41a518:	add	x6, x2, x3
  41a51c:	ldr	x1, [x0, x2, lsl #3]
  41a520:	cmp	x5, x1
  41a524:	b.le	41a504 <_obstack_memory_used@@Base+0x17f4>
  41a528:	str	x5, [x0, x6, lsl #3]
  41a52c:	sub	x4, x4, #0x1
  41a530:	subs	x3, x3, #0x1
  41a534:	b.ne	41a514 <_obstack_memory_used@@Base+0x1804>  // b.any
  41a538:	mov	x2, #0x0                   	// #0
  41a53c:	b	41a4e8 <_obstack_memory_used@@Base+0x17d8>
  41a540:	subs	x6, x6, #0x1
  41a544:	b.mi	41a4b0 <_obstack_memory_used@@Base+0x17a0>  // b.first
  41a548:	ldr	x4, [x10, x6, lsl #3]
  41a54c:	b	41a448 <_obstack_memory_used@@Base+0x1738>
  41a550:	mov	w0, #0x0                   	// #0
  41a554:	ret
  41a558:	add	x22, x1, x22
  41a55c:	lsl	x1, x22, #3
  41a560:	bl	402930 <realloc@plt>
  41a564:	cbz	x0, 41a580 <_obstack_memory_used@@Base+0x1870>
  41a568:	ldr	x4, [x20, #8]
  41a56c:	ldr	x8, [x21, #8]
  41a570:	str	x22, [x19]
  41a574:	str	x0, [x19, #16]
  41a578:	ldr	x3, [x19, #8]
  41a57c:	b	41a420 <_obstack_memory_used@@Base+0x1710>
  41a580:	mov	w0, #0xc                   	// #12
  41a584:	b	41a4f4 <_obstack_memory_used@@Base+0x17e4>
  41a588:	stp	x29, x30, [sp, #-32]!
  41a58c:	mov	x29, sp
  41a590:	stp	x19, x20, [sp, #16]
  41a594:	mov	x20, x0
  41a598:	tbnz	x1, #63, 41a62c <_obstack_memory_used@@Base+0x191c>
  41a59c:	ldr	x0, [x0, #88]
  41a5a0:	cmp	x0, x1
  41a5a4:	b.eq	41a658 <_obstack_memory_used@@Base+0x1948>  // b.none
  41a5a8:	ldr	w0, [x20, #144]
  41a5ac:	cmp	w0, #0x1
  41a5b0:	b.le	41a5f4 <_obstack_memory_used@@Base+0x18e4>
  41a5b4:	ldr	x0, [x20, #16]
  41a5b8:	b	41a5c4 <_obstack_memory_used@@Base+0x18b4>
  41a5bc:	cmn	x1, #0x1
  41a5c0:	b.eq	41a62c <_obstack_memory_used@@Base+0x191c>  // b.none
  41a5c4:	ldr	w19, [x0, x1, lsl #2]
  41a5c8:	sub	x1, x1, #0x1
  41a5cc:	cmn	w19, #0x1
  41a5d0:	b.eq	41a5bc <_obstack_memory_used@@Base+0x18ac>  // b.none
  41a5d4:	ldrb	w0, [x20, #142]
  41a5d8:	cbnz	w0, 41a66c <_obstack_memory_used@@Base+0x195c>
  41a5dc:	cmp	w19, #0xa
  41a5e0:	mov	w0, #0x0                   	// #0
  41a5e4:	b.eq	41a63c <_obstack_memory_used@@Base+0x192c>  // b.none
  41a5e8:	ldp	x19, x20, [sp, #16]
  41a5ec:	ldp	x29, x30, [sp], #32
  41a5f0:	ret
  41a5f4:	ldr	x2, [x20, #8]
  41a5f8:	mov	w0, #0x1                   	// #1
  41a5fc:	ldr	x3, [x20, #128]
  41a600:	ldrb	w2, [x2, x1]
  41a604:	ubfx	x1, x2, #6, #2
  41a608:	ldr	x1, [x3, x1, lsl #3]
  41a60c:	lsr	x1, x1, x2
  41a610:	tbnz	w1, #0, 41a5e8 <_obstack_memory_used@@Base+0x18d8>
  41a614:	cmp	w2, #0xa
  41a618:	b.eq	41a63c <_obstack_memory_used@@Base+0x192c>  // b.none
  41a61c:	mov	w0, #0x0                   	// #0
  41a620:	ldp	x19, x20, [sp, #16]
  41a624:	ldp	x29, x30, [sp], #32
  41a628:	ret
  41a62c:	ldr	w0, [x20, #112]
  41a630:	ldp	x19, x20, [sp, #16]
  41a634:	ldp	x29, x30, [sp], #32
  41a638:	ret
  41a63c:	ldrb	w0, [x20, #141]
  41a640:	ldp	x19, x20, [sp, #16]
  41a644:	cmp	w0, #0x0
  41a648:	cset	w0, ne  // ne = any
  41a64c:	ldp	x29, x30, [sp], #32
  41a650:	lsl	w0, w0, #1
  41a654:	ret
  41a658:	tst	x2, #0x2
  41a65c:	mov	w0, #0x8                   	// #8
  41a660:	mov	w1, #0xa                   	// #10
  41a664:	csel	w0, w0, w1, ne  // ne = any
  41a668:	b	41a5e8 <_obstack_memory_used@@Base+0x18d8>
  41a66c:	mov	w0, w19
  41a670:	bl	402bf0 <iswalnum@plt>
  41a674:	cmp	w19, #0x5f
  41a678:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41a67c:	mov	w0, #0x1                   	// #1
  41a680:	b.ne	41a5e8 <_obstack_memory_used@@Base+0x18d8>  // b.any
  41a684:	b	41a5dc <_obstack_memory_used@@Base+0x18cc>
  41a688:	mov	x4, x1
  41a68c:	mov	x5, x0
  41a690:	ldr	x0, [x0, #8]
  41a694:	mov	x1, x2
  41a698:	ldrb	w3, [x4, #8]
  41a69c:	ldrb	w2, [x0, x2]
  41a6a0:	cmp	w3, #0x5
  41a6a4:	b.eq	41a748 <_obstack_memory_used@@Base+0x1a38>  // b.none
  41a6a8:	b.hi	41a738 <_obstack_memory_used@@Base+0x1a28>  // b.pmore
  41a6ac:	cmp	w3, #0x1
  41a6b0:	b.eq	41a780 <_obstack_memory_used@@Base+0x1a70>  // b.none
  41a6b4:	cmp	w3, #0x3
  41a6b8:	b.ne	41a7a8 <_obstack_memory_used@@Base+0x1a98>  // b.any
  41a6bc:	ldr	x0, [x4]
  41a6c0:	ubfx	x3, x2, #6, #2
  41a6c4:	ldr	x0, [x0, x3, lsl #3]
  41a6c8:	lsr	x2, x0, x2
  41a6cc:	and	w0, w2, #0x1
  41a6d0:	tbz	w2, #0, 41a77c <_obstack_memory_used@@Base+0x1a6c>
  41a6d4:	stp	x29, x30, [sp, #-32]!
  41a6d8:	mov	w0, #0x1                   	// #1
  41a6dc:	mov	x29, sp
  41a6e0:	str	x19, [sp, #16]
  41a6e4:	ldr	w19, [x4, #8]
  41a6e8:	tst	w19, #0x3ff00
  41a6ec:	b.eq	41a72c <_obstack_memory_used@@Base+0x1a1c>  // b.none
  41a6f0:	ldr	w2, [x5, #160]
  41a6f4:	mov	x0, x5
  41a6f8:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41a6fc:	mov	w1, w0
  41a700:	ubfx	x2, x19, #8, #10
  41a704:	tbz	w19, #10, 41a76c <_obstack_memory_used@@Base+0x1a5c>
  41a708:	mov	w0, #0x0                   	// #0
  41a70c:	tbz	w1, #0, 41a72c <_obstack_memory_used@@Base+0x1a1c>
  41a710:	tbnz	w2, #3, 41a72c <_obstack_memory_used@@Base+0x1a1c>
  41a714:	tbz	w2, #5, 41a720 <_obstack_memory_used@@Base+0x1a10>
  41a718:	mov	w0, #0x0                   	// #0
  41a71c:	tbz	w1, #1, 41a72c <_obstack_memory_used@@Base+0x1a1c>
  41a720:	ubfx	x0, x1, #3, #1
  41a724:	tst	x2, #0x80
  41a728:	csinc	w0, w0, wzr, ne  // ne = any
  41a72c:	ldr	x19, [sp, #16]
  41a730:	ldp	x29, x30, [sp], #32
  41a734:	ret
  41a738:	cmp	w3, #0x7
  41a73c:	mov	w0, #0x0                   	// #0
  41a740:	b.ne	41a768 <_obstack_memory_used@@Base+0x1a58>  // b.any
  41a744:	tbnz	w2, #7, 41a764 <_obstack_memory_used@@Base+0x1a54>
  41a748:	cmp	w2, #0xa
  41a74c:	b.eq	41a794 <_obstack_memory_used@@Base+0x1a84>  // b.none
  41a750:	cbnz	w2, 41a6d4 <_obstack_memory_used@@Base+0x19c4>
  41a754:	ldr	x2, [x5, #152]
  41a758:	mov	w0, #0x0                   	// #0
  41a75c:	ldr	x2, [x2, #216]
  41a760:	tbz	w2, #7, 41a6d4 <_obstack_memory_used@@Base+0x19c4>
  41a764:	ret
  41a768:	ret
  41a76c:	tbz	w2, #3, 41a714 <_obstack_memory_used@@Base+0x1a04>
  41a770:	tbz	w1, #0, 41a714 <_obstack_memory_used@@Base+0x1a04>
  41a774:	mov	w0, #0x0                   	// #0
  41a778:	b	41a72c <_obstack_memory_used@@Base+0x1a1c>
  41a77c:	ret
  41a780:	ldrb	w3, [x4]
  41a784:	mov	w0, #0x0                   	// #0
  41a788:	cmp	w3, w2
  41a78c:	b.eq	41a6d4 <_obstack_memory_used@@Base+0x19c4>  // b.none
  41a790:	ret
  41a794:	ldr	x2, [x5, #152]
  41a798:	mov	w0, #0x0                   	// #0
  41a79c:	ldr	x2, [x2, #216]
  41a7a0:	tbnz	w2, #6, 41a6d4 <_obstack_memory_used@@Base+0x19c4>
  41a7a4:	ret
  41a7a8:	mov	w0, #0x0                   	// #0
  41a7ac:	ret
  41a7b0:	stp	x29, x30, [sp, #-128]!
  41a7b4:	mov	x29, sp
  41a7b8:	stp	x19, x20, [sp, #16]
  41a7bc:	mov	x19, x0
  41a7c0:	ldr	x0, [x0, #40]
  41a7c4:	stp	x21, x22, [sp, #32]
  41a7c8:	mov	x21, x1
  41a7cc:	stp	x23, x24, [sp, #48]
  41a7d0:	sub	x20, x1, x0
  41a7d4:	mov	w24, w2
  41a7d8:	cmp	x0, x1
  41a7dc:	b.le	41a838 <_obstack_memory_used@@Base+0x1b28>
  41a7e0:	ldr	w0, [x19, #144]
  41a7e4:	cmp	w0, #0x1
  41a7e8:	b.le	41a7f0 <_obstack_memory_used@@Base+0x1ae0>
  41a7ec:	str	xzr, [x19, #32]
  41a7f0:	ldrb	w0, [x19, #139]
  41a7f4:	tst	x24, #0x1
  41a7f8:	ldr	x3, [x19, #80]
  41a7fc:	mov	w1, #0x4                   	// #4
  41a800:	ldr	x2, [x19, #96]
  41a804:	mov	w4, #0x6                   	// #6
  41a808:	csel	w1, w1, w4, ne  // ne = any
  41a80c:	stp	xzr, xzr, [x19, #40]
  41a810:	str	xzr, [x19, #56]
  41a814:	str	x3, [x19, #88]
  41a818:	str	x2, [x19, #104]
  41a81c:	str	w1, [x19, #112]
  41a820:	strb	wzr, [x19, #140]
  41a824:	cbnz	w0, 41a8ec <_obstack_memory_used@@Base+0x1bdc>
  41a828:	mov	x20, x21
  41a82c:	mov	x0, #0x0                   	// #0
  41a830:	ldr	x1, [x19]
  41a834:	str	x1, [x19, #8]
  41a838:	cbz	x20, 41a8f8 <_obstack_memory_used@@Base+0x1be8>
  41a83c:	ldp	x23, x22, [x19, #48]
  41a840:	ldrb	w1, [x19, #140]
  41a844:	cmp	x22, x20
  41a848:	b.le	41a954 <_obstack_memory_used@@Base+0x1c44>
  41a84c:	cbnz	w1, 41aa30 <_obstack_memory_used@@Base+0x1d20>
  41a850:	mov	w2, w24
  41a854:	sub	x1, x20, #0x1
  41a858:	mov	x0, x19
  41a85c:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41a860:	str	w0, [x19, #112]
  41a864:	sub	x2, x23, x20
  41a868:	ldr	w0, [x19, #144]
  41a86c:	cmp	w0, #0x1
  41a870:	b.gt	41a928 <_obstack_memory_used@@Base+0x1c18>
  41a874:	ldrb	w0, [x19, #139]
  41a878:	cbnz	w0, 41aa74 <_obstack_memory_used@@Base+0x1d64>
  41a87c:	ldr	x3, [x19, #56]
  41a880:	ldr	x1, [x19, #88]
  41a884:	sub	x3, x3, x20
  41a888:	stp	x2, x3, [x19, #48]
  41a88c:	ldr	w3, [x19, #144]
  41a890:	ldr	x2, [x19, #104]
  41a894:	sub	x1, x1, x20
  41a898:	sub	x2, x2, x20
  41a89c:	cbnz	w0, 41a8ac <_obstack_memory_used@@Base+0x1b9c>
  41a8a0:	ldr	x0, [x19, #8]
  41a8a4:	add	x20, x0, x20
  41a8a8:	str	x20, [x19, #8]
  41a8ac:	str	x21, [x19, #40]
  41a8b0:	cmp	w3, #0x1
  41a8b4:	str	x1, [x19, #88]
  41a8b8:	str	x2, [x19, #104]
  41a8bc:	b.le	41a918 <_obstack_memory_used@@Base+0x1c08>
  41a8c0:	ldrb	w0, [x19, #136]
  41a8c4:	cbnz	w0, 41a944 <_obstack_memory_used@@Base+0x1c34>
  41a8c8:	mov	x0, x19
  41a8cc:	bl	419490 <_obstack_memory_used@@Base+0x780>
  41a8d0:	mov	w0, #0x0                   	// #0
  41a8d4:	str	xzr, [x19, #72]
  41a8d8:	ldp	x19, x20, [sp, #16]
  41a8dc:	ldp	x21, x22, [sp, #32]
  41a8e0:	ldp	x23, x24, [sp, #48]
  41a8e4:	ldp	x29, x30, [sp], #128
  41a8e8:	ret
  41a8ec:	mov	x20, x21
  41a8f0:	mov	x0, #0x0                   	// #0
  41a8f4:	cbnz	x20, 41a83c <_obstack_memory_used@@Base+0x1b2c>
  41a8f8:	ldr	x1, [x19, #88]
  41a8fc:	str	x21, [x19, #40]
  41a900:	ldr	x2, [x19, #104]
  41a904:	str	x1, [x19, #88]
  41a908:	ldr	w3, [x19, #144]
  41a90c:	str	x2, [x19, #104]
  41a910:	cmp	w3, #0x1
  41a914:	b.gt	41a8c0 <_obstack_memory_used@@Base+0x1bb0>
  41a918:	ldrb	w0, [x19, #139]
  41a91c:	cbnz	w0, 41ac3c <_obstack_memory_used@@Base+0x1f2c>
  41a920:	str	x1, [x19, #48]
  41a924:	b	41a8d0 <_obstack_memory_used@@Base+0x1bc0>
  41a928:	ldr	x0, [x19, #16]
  41a92c:	lsl	x2, x2, #2
  41a930:	add	x1, x0, x20, lsl #2
  41a934:	bl	402660 <memmove@plt>
  41a938:	ldr	x2, [x19, #48]
  41a93c:	sub	x2, x2, x20
  41a940:	b	41a874 <_obstack_memory_used@@Base+0x1b64>
  41a944:	mov	x0, x19
  41a948:	bl	419688 <_obstack_memory_used@@Base+0x978>
  41a94c:	cbz	w0, 41a8d0 <_obstack_memory_used@@Base+0x1bc0>
  41a950:	b	41a8d8 <_obstack_memory_used@@Base+0x1bc8>
  41a954:	cbnz	w1, 41aea4 <_obstack_memory_used@@Base+0x2194>
  41a958:	ldr	w3, [x19, #144]
  41a95c:	str	xzr, [x19, #48]
  41a960:	cmp	w3, #0x1
  41a964:	b.le	41acc0 <_obstack_memory_used@@Base+0x1fb0>
  41a968:	ldrb	w1, [x19, #137]
  41a96c:	cbnz	w1, 41ab8c <_obstack_memory_used@@Base+0x1e7c>
  41a970:	add	x22, x0, x22
  41a974:	cmp	x21, x22
  41a978:	b.le	41b010 <_obstack_memory_used@@Base+0x2300>
  41a97c:	stp	x27, x28, [sp, #80]
  41a980:	add	x27, x19, #0x20
  41a984:	stp	x25, x26, [sp, #64]
  41a988:	mov	x3, x27
  41a98c:	ldr	x1, [x19]
  41a990:	add	x0, sp, #0x78
  41a994:	ldr	x25, [x19, #80]
  41a998:	add	x1, x1, x22
  41a99c:	ldr	x26, [x19, #32]
  41a9a0:	sub	x25, x25, x22
  41a9a4:	mov	x2, x25
  41a9a8:	bl	418830 <wcrtomb@plt+0x15af0>
  41a9ac:	sub	x1, x0, #0x1
  41a9b0:	cmn	x1, #0x4
  41a9b4:	b.hi	41aecc <_obstack_memory_used@@Base+0x21bc>  // b.pmore
  41a9b8:	ldr	w28, [sp, #120]
  41a9bc:	add	x22, x22, x0
  41a9c0:	cmp	x21, x22
  41a9c4:	b.gt	41a988 <_obstack_memory_used@@Base+0x1c78>
  41a9c8:	sub	x22, x22, x21
  41a9cc:	str	x22, [x19, #48]
  41a9d0:	cmn	w28, #0x1
  41a9d4:	b.eq	41aef0 <_obstack_memory_used@@Base+0x21e0>  // b.none
  41a9d8:	ldrb	w0, [x19, #142]
  41a9dc:	cbnz	w0, 41af48 <_obstack_memory_used@@Base+0x2238>
  41a9e0:	cmp	w28, #0xa
  41a9e4:	mov	w0, #0x0                   	// #0
  41a9e8:	b.ne	41a9fc <_obstack_memory_used@@Base+0x1cec>  // b.any
  41a9ec:	ldrb	w0, [x19, #141]
  41a9f0:	cmp	w0, #0x0
  41a9f4:	cset	w0, ne  // ne = any
  41a9f8:	lsl	w0, w0, #1
  41a9fc:	ldp	x25, x26, [sp, #64]
  41aa00:	ldp	x27, x28, [sp, #80]
  41aa04:	str	w0, [x19, #112]
  41aa08:	cmp	x22, #0x0
  41aa0c:	cbnz	x22, 41af10 <_obstack_memory_used@@Base+0x2200>
  41aa10:	ldrb	w0, [x19, #139]
  41aa14:	ldr	x1, [x19, #88]
  41aa18:	str	x22, [x19, #56]
  41aa1c:	ldr	x2, [x19, #104]
  41aa20:	sub	x1, x1, x20
  41aa24:	ldr	w3, [x19, #144]
  41aa28:	sub	x2, x2, x20
  41aa2c:	b	41a89c <_obstack_memory_used@@Base+0x1b8c>
  41aa30:	mov	x1, x23
  41aa34:	mov	x2, #0x0                   	// #0
  41aa38:	stp	x25, x26, [sp, #64]
  41aa3c:	ldr	x25, [x19, #24]
  41aa40:	b	41aa54 <_obstack_memory_used@@Base+0x1d44>
  41aa44:	b.ge	41ac30 <_obstack_memory_used@@Base+0x1f20>  // b.tcont
  41aa48:	add	x2, x0, #0x1
  41aa4c:	cmp	x2, x1
  41aa50:	b.ge	41aa90 <_obstack_memory_used@@Base+0x1d80>  // b.tcont
  41aa54:	add	x0, x2, x1
  41aa58:	add	x0, x0, x0, lsr #63
  41aa5c:	asr	x0, x0, #1
  41aa60:	ldr	x3, [x25, x0, lsl #3]
  41aa64:	cmp	x3, x20
  41aa68:	b.le	41aa44 <_obstack_memory_used@@Base+0x1d34>
  41aa6c:	mov	x1, x0
  41aa70:	b	41aa4c <_obstack_memory_used@@Base+0x1d3c>
  41aa74:	ldr	x0, [x19, #8]
  41aa78:	add	x1, x0, x20
  41aa7c:	bl	402660 <memmove@plt>
  41aa80:	ldr	x2, [x19, #48]
  41aa84:	ldrb	w0, [x19, #139]
  41aa88:	sub	x2, x2, x20
  41aa8c:	b	41a87c <_obstack_memory_used@@Base+0x1b6c>
  41aa90:	cmp	x3, x20
  41aa94:	add	x22, x0, #0x1
  41aa98:	b.ge	41ac30 <_obstack_memory_used@@Base+0x1f20>  // b.tcont
  41aa9c:	mov	x1, x0
  41aaa0:	mov	w2, w24
  41aaa4:	mov	x0, x19
  41aaa8:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41aaac:	str	w0, [x19, #112]
  41aab0:	cmp	x20, x22
  41aab4:	ccmp	x20, x23, #0x0, eq  // eq = none
  41aab8:	b.lt	41ad70 <_obstack_memory_used@@Base+0x2060>  // b.tstop
  41aabc:	ldr	x1, [x19, #80]
  41aac0:	strb	wzr, [x19, #140]
  41aac4:	ldr	x2, [x19, #96]
  41aac8:	sub	x1, x1, x21
  41aacc:	add	x0, x1, x20
  41aad0:	str	x0, [x19, #88]
  41aad4:	sub	x2, x2, x21
  41aad8:	cmp	x22, #0x0
  41aadc:	add	x0, x2, x20
  41aae0:	str	x0, [x19, #104]
  41aae4:	sub	x3, x25, #0x8
  41aae8:	b.gt	41aaf8 <_obstack_memory_used@@Base+0x1de8>
  41aaec:	b	41ab04 <_obstack_memory_used@@Base+0x1df4>
  41aaf0:	subs	x22, x22, #0x1
  41aaf4:	b.eq	41ab04 <_obstack_memory_used@@Base+0x1df4>  // b.none
  41aaf8:	ldr	x0, [x3, x22, lsl #3]
  41aafc:	cmp	x0, x20
  41ab00:	b.eq	41aaf0 <_obstack_memory_used@@Base+0x1de0>  // b.none
  41ab04:	cmp	x22, x23
  41ab08:	b.ge	41ad44 <_obstack_memory_used@@Base+0x2034>  // b.tcont
  41ab0c:	ldr	x3, [x19, #16]
  41ab10:	b	41ab20 <_obstack_memory_used@@Base+0x1e10>
  41ab14:	add	x22, x22, #0x1
  41ab18:	cmp	x22, x23
  41ab1c:	b.eq	41ad48 <_obstack_memory_used@@Base+0x2038>  // b.none
  41ab20:	ldr	w0, [x3, x22, lsl #2]
  41ab24:	cmn	w0, #0x1
  41ab28:	b.eq	41ab14 <_obstack_memory_used@@Base+0x1e04>  // b.none
  41ab2c:	ldr	x22, [x25, x22, lsl #3]
  41ab30:	sub	x22, x22, x20
  41ab34:	str	x22, [x19, #48]
  41ab38:	cmp	x22, #0x0
  41ab3c:	cbz	x22, 41ab78 <_obstack_memory_used@@Base+0x1e68>
  41ab40:	b.le	41ab54 <_obstack_memory_used@@Base+0x1e44>
  41ab44:	ldr	x0, [x19, #16]
  41ab48:	lsl	x2, x22, #2
  41ab4c:	mov	w1, #0xff                  	// #255
  41ab50:	bl	4028d0 <memset@plt>
  41ab54:	ldr	x0, [x19, #8]
  41ab58:	mov	x2, x22
  41ab5c:	mov	w1, #0xff                  	// #255
  41ab60:	bl	4028d0 <memset@plt>
  41ab64:	ldr	x1, [x19, #88]
  41ab68:	ldr	x2, [x19, #104]
  41ab6c:	sub	x1, x1, x20
  41ab70:	ldr	x22, [x19, #48]
  41ab74:	sub	x2, x2, x20
  41ab78:	ldrb	w0, [x19, #139]
  41ab7c:	ldr	w3, [x19, #144]
  41ab80:	ldp	x25, x26, [sp, #64]
  41ab84:	str	x22, [x19, #56]
  41ab88:	b	41a89c <_obstack_memory_used@@Base+0x1b8c>
  41ab8c:	ldr	x2, [x19]
  41ab90:	sub	x1, x20, w3, sxtw
  41ab94:	stp	x25, x26, [sp, #64]
  41ab98:	sub	x25, x20, #0x1
  41ab9c:	add	x26, x2, x0
  41aba0:	add	x1, x26, x1
  41aba4:	add	x25, x26, x25
  41aba8:	cmp	x2, x1
  41abac:	csel	x2, x2, x1, cs  // cs = hs, nlast
  41abb0:	cmp	x25, x2
  41abb4:	b.cs	41abc8 <_obstack_memory_used@@Base+0x1eb8>  // b.hs, b.nlast
  41abb8:	b	41ae0c <_obstack_memory_used@@Base+0x20fc>
  41abbc:	sub	x25, x25, #0x1
  41abc0:	cmp	x25, x2
  41abc4:	b.cc	41ae0c <_obstack_memory_used@@Base+0x20fc>  // b.lo, b.ul, b.last
  41abc8:	ldrb	w1, [x25]
  41abcc:	and	w1, w1, #0xc0
  41abd0:	cmp	w1, #0x80
  41abd4:	b.eq	41abbc <_obstack_memory_used@@Base+0x1eac>  // b.none
  41abd8:	ldr	x2, [x19, #88]
  41abdc:	mov	x1, x25
  41abe0:	ldr	x0, [x19, #120]
  41abe4:	add	x2, x26, x2
  41abe8:	sub	x2, x2, x25
  41abec:	cbnz	x0, 41af6c <_obstack_memory_used@@Base+0x225c>
  41abf0:	add	x22, x26, x20
  41abf4:	add	x3, sp, #0x78
  41abf8:	sub	x22, x22, x25
  41abfc:	add	x0, sp, #0x6c
  41ac00:	str	xzr, [sp, #120]
  41ac04:	bl	418830 <wcrtomb@plt+0x15af0>
  41ac08:	cmp	x0, x22
  41ac0c:	b.cc	41b01c <_obstack_memory_used@@Base+0x230c>  // b.lo, b.ul, b.last
  41ac10:	stp	x27, x28, [sp, #80]
  41ac14:	cmn	x0, #0x3
  41ac18:	b.ls	41ad54 <_obstack_memory_used@@Base+0x2044>  // b.plast
  41ac1c:	ldr	x0, [x19, #40]
  41ac20:	ldr	x22, [x19, #56]
  41ac24:	ldp	x25, x26, [sp, #64]
  41ac28:	ldp	x27, x28, [sp, #80]
  41ac2c:	b	41a970 <_obstack_memory_used@@Base+0x1c60>
  41ac30:	mov	x22, x0
  41ac34:	sub	x0, x0, #0x1
  41ac38:	b	41aa9c <_obstack_memory_used@@Base+0x1d8c>
  41ac3c:	ldrb	w0, [x19, #136]
  41ac40:	cbnz	w0, 41ae14 <_obstack_memory_used@@Base+0x2104>
  41ac44:	ldr	x4, [x19, #120]
  41ac48:	cbz	x4, 41a8d0 <_obstack_memory_used@@Base+0x1bc0>
  41ac4c:	ldr	x2, [x19, #64]
  41ac50:	ldr	x3, [x19, #48]
  41ac54:	cmp	x2, x1
  41ac58:	csel	x2, x2, x1, le
  41ac5c:	cmp	x2, x3
  41ac60:	b.le	41af64 <_obstack_memory_used@@Base+0x2254>
  41ac64:	ldp	x1, x5, [x19]
  41ac68:	add	x0, x3, #0x1
  41ac6c:	cmp	x2, x0
  41ac70:	add	x1, x1, x3
  41ac74:	ldrb	w1, [x1, x21]
  41ac78:	ldrb	w1, [x4, x1]
  41ac7c:	strb	w1, [x5, x3]
  41ac80:	b.le	41acb4 <_obstack_memory_used@@Base+0x1fa4>
  41ac84:	nop
  41ac88:	ldr	x1, [x19]
  41ac8c:	ldr	x3, [x19, #40]
  41ac90:	add	x1, x1, x0
  41ac94:	ldr	x4, [x19, #120]
  41ac98:	ldrb	w3, [x1, x3]
  41ac9c:	ldr	x1, [x19, #8]
  41aca0:	ldrb	w3, [x4, x3]
  41aca4:	strb	w3, [x1, x0]
  41aca8:	add	x0, x0, #0x1
  41acac:	cmp	x2, x0
  41acb0:	b.ne	41ac88 <_obstack_memory_used@@Base+0x1f78>  // b.any
  41acb4:	dup	v0.2d, x2
  41acb8:	str	q0, [x19, #48]
  41acbc:	b	41a8d0 <_obstack_memory_used@@Base+0x1bc0>
  41acc0:	ldr	x1, [x19]
  41acc4:	ldr	x2, [x19, #120]
  41acc8:	add	x0, x1, x0
  41accc:	add	x0, x0, x20
  41acd0:	ldurb	w0, [x0, #-1]
  41acd4:	str	xzr, [x19, #56]
  41acd8:	cbz	x2, 41ace4 <_obstack_memory_used@@Base+0x1fd4>
  41acdc:	and	x0, x0, #0xff
  41ace0:	ldrb	w0, [x2, x0]
  41ace4:	ldr	x4, [x19, #128]
  41ace8:	ubfx	x1, x0, #6, #2
  41acec:	mov	w2, #0x1                   	// #1
  41acf0:	ldr	x1, [x4, x1, lsl #3]
  41acf4:	lsr	x1, x1, x0
  41acf8:	tbnz	w1, #0, 41ad18 <_obstack_memory_used@@Base+0x2008>
  41acfc:	cmp	w0, #0xa
  41ad00:	mov	w2, #0x0                   	// #0
  41ad04:	b.ne	41ad18 <_obstack_memory_used@@Base+0x2008>  // b.any
  41ad08:	ldrb	w0, [x19, #141]
  41ad0c:	cmp	w0, #0x0
  41ad10:	cset	w2, ne  // ne = any
  41ad14:	lsl	w2, w2, #1
  41ad18:	ldrb	w0, [x19, #139]
  41ad1c:	str	w2, [x19, #112]
  41ad20:	ldr	x1, [x19, #88]
  41ad24:	ldr	x2, [x19, #104]
  41ad28:	sub	x1, x1, x20
  41ad2c:	sub	x2, x2, x20
  41ad30:	cbz	w0, 41a8a0 <_obstack_memory_used@@Base+0x1b90>
  41ad34:	str	x21, [x19, #40]
  41ad38:	str	x1, [x19, #88]
  41ad3c:	str	x2, [x19, #104]
  41ad40:	b	41a91c <_obstack_memory_used@@Base+0x1c0c>
  41ad44:	b.ne	41ab2c <_obstack_memory_used@@Base+0x1e1c>  // b.any
  41ad48:	mov	x22, #0x0                   	// #0
  41ad4c:	str	xzr, [x19, #48]
  41ad50:	b	41ab78 <_obstack_memory_used@@Base+0x1e68>
  41ad54:	ldr	w28, [sp, #108]
  41ad58:	sub	x22, x0, x22
  41ad5c:	str	xzr, [x19, #32]
  41ad60:	str	x22, [x19, #48]
  41ad64:	cmn	w28, #0x1
  41ad68:	b.ne	41a9d8 <_obstack_memory_used@@Base+0x1cc8>  // b.any
  41ad6c:	b	41ac1c <_obstack_memory_used@@Base+0x1f0c>
  41ad70:	ldr	x0, [x25, x22, lsl #3]
  41ad74:	cmp	x0, x20
  41ad78:	b.ne	41aabc <_obstack_memory_used@@Base+0x1dac>  // b.any
  41ad7c:	ldr	x0, [x19, #16]
  41ad80:	sub	x2, x23, x20
  41ad84:	lsl	x2, x2, #2
  41ad88:	add	x1, x0, x20, lsl #2
  41ad8c:	bl	402660 <memmove@plt>
  41ad90:	ldr	x0, [x19, #8]
  41ad94:	ldr	x2, [x19, #48]
  41ad98:	add	x1, x0, x20
  41ad9c:	sub	x2, x2, x20
  41ada0:	bl	402660 <memmove@plt>
  41ada4:	dup	v1.2d, x20
  41ada8:	ldr	q0, [x19, #48]
  41adac:	ldr	x0, [x19, #48]
  41adb0:	sub	v0.2d, v0.2d, v1.2d
  41adb4:	sub	x0, x0, x20
  41adb8:	cmp	x0, #0x0
  41adbc:	str	q0, [x19, #48]
  41adc0:	b.le	41adec <_obstack_memory_used@@Base+0x20dc>
  41adc4:	ldr	x2, [x19, #24]
  41adc8:	mov	x0, #0x0                   	// #0
  41adcc:	add	x3, x2, x20, lsl #3
  41add0:	ldr	x1, [x3, x0, lsl #3]
  41add4:	sub	x1, x1, x20
  41add8:	str	x1, [x2, x0, lsl #3]
  41addc:	add	x0, x0, #0x1
  41ade0:	ldr	x1, [x19, #48]
  41ade4:	cmp	x1, x0
  41ade8:	b.gt	41add0 <_obstack_memory_used@@Base+0x20c0>
  41adec:	ldr	x1, [x19, #88]
  41adf0:	ldr	x2, [x19, #104]
  41adf4:	sub	x1, x1, x20
  41adf8:	ldrb	w0, [x19, #139]
  41adfc:	ldr	w3, [x19, #144]
  41ae00:	sub	x2, x2, x20
  41ae04:	ldp	x25, x26, [sp, #64]
  41ae08:	b	41a89c <_obstack_memory_used@@Base+0x1b8c>
  41ae0c:	ldp	x25, x26, [sp, #64]
  41ae10:	b	41a970 <_obstack_memory_used@@Base+0x1c60>
  41ae14:	ldr	x22, [x19, #64]
  41ae18:	ldr	x20, [x19, #48]
  41ae1c:	cmp	x22, x1
  41ae20:	csel	x22, x22, x1, le
  41ae24:	cmp	x22, x20
  41ae28:	b.le	41ae6c <_obstack_memory_used@@Base+0x215c>
  41ae2c:	bl	402940 <__ctype_toupper_loc@plt>
  41ae30:	ldr	x1, [x19]
  41ae34:	ldr	x2, [x19, #120]
  41ae38:	add	x1, x1, x20
  41ae3c:	ldrb	w3, [x1, x21]
  41ae40:	and	x1, x3, #0xff
  41ae44:	cbnz	x2, 41ae7c <_obstack_memory_used@@Base+0x216c>
  41ae48:	ldr	x2, [x0]
  41ae4c:	ldr	x1, [x19, #8]
  41ae50:	ldr	w2, [x2, x3, lsl #2]
  41ae54:	strb	w2, [x1, x20]
  41ae58:	add	x20, x20, #0x1
  41ae5c:	cmp	x22, x20
  41ae60:	b.eq	41ae70 <_obstack_memory_used@@Base+0x2160>  // b.none
  41ae64:	ldr	x21, [x19, #40]
  41ae68:	b	41ae30 <_obstack_memory_used@@Base+0x2120>
  41ae6c:	mov	x22, x20
  41ae70:	dup	v0.2d, x22
  41ae74:	str	q0, [x19, #48]
  41ae78:	b	41a8d0 <_obstack_memory_used@@Base+0x1bc0>
  41ae7c:	ldrb	w2, [x2, x1]
  41ae80:	ldr	x3, [x0]
  41ae84:	ldr	x1, [x19, #8]
  41ae88:	ldr	w2, [x3, x2, lsl #2]
  41ae8c:	strb	w2, [x1, x20]
  41ae90:	add	x20, x20, #0x1
  41ae94:	cmp	x20, x22
  41ae98:	b.eq	41ae70 <_obstack_memory_used@@Base+0x2160>  // b.none
  41ae9c:	ldr	x21, [x19, #40]
  41aea0:	b	41ae30 <_obstack_memory_used@@Base+0x2120>
  41aea4:	ldr	x2, [x19, #80]
  41aea8:	strb	wzr, [x19, #140]
  41aeac:	ldr	x1, [x19, #96]
  41aeb0:	sub	x2, x2, x21
  41aeb4:	add	x2, x2, x20
  41aeb8:	str	x2, [x19, #88]
  41aebc:	sub	x1, x1, x21
  41aec0:	add	x1, x1, x20
  41aec4:	str	x1, [x19, #104]
  41aec8:	b	41a958 <_obstack_memory_used@@Base+0x1c48>
  41aecc:	cmp	x0, #0x0
  41aed0:	mov	w28, #0x0                   	// #0
  41aed4:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  41aed8:	b.eq	41aee4 <_obstack_memory_used@@Base+0x21d4>  // b.none
  41aedc:	ldr	x0, [x19]
  41aee0:	ldrb	w28, [x0, x22]
  41aee4:	mov	x0, #0x1                   	// #1
  41aee8:	str	x26, [x19, #32]
  41aeec:	b	41a9bc <_obstack_memory_used@@Base+0x1cac>
  41aef0:	ldp	x25, x26, [sp, #64]
  41aef4:	ldp	x27, x28, [sp, #80]
  41aef8:	mov	w2, w24
  41aefc:	sub	x1, x23, #0x1
  41af00:	mov	x0, x19
  41af04:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41af08:	str	w0, [x19, #112]
  41af0c:	b	41aa08 <_obstack_memory_used@@Base+0x1cf8>
  41af10:	b.le	41af24 <_obstack_memory_used@@Base+0x2214>
  41af14:	ldr	x0, [x19, #16]
  41af18:	lsl	x2, x22, #2
  41af1c:	mov	w1, #0xff                  	// #255
  41af20:	bl	4028d0 <memset@plt>
  41af24:	ldrb	w0, [x19, #139]
  41af28:	cbz	w0, 41aa14 <_obstack_memory_used@@Base+0x1d04>
  41af2c:	ldr	x0, [x19, #8]
  41af30:	mov	x2, x22
  41af34:	mov	w1, #0xff                  	// #255
  41af38:	bl	4028d0 <memset@plt>
  41af3c:	ldrb	w0, [x19, #139]
  41af40:	ldr	x22, [x19, #48]
  41af44:	b	41aa14 <_obstack_memory_used@@Base+0x1d04>
  41af48:	mov	w0, w28
  41af4c:	bl	402bf0 <iswalnum@plt>
  41af50:	cmp	w28, #0x5f
  41af54:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41af58:	mov	w0, #0x1                   	// #1
  41af5c:	b.ne	41a9fc <_obstack_memory_used@@Base+0x1cec>  // b.any
  41af60:	b	41a9e0 <_obstack_memory_used@@Base+0x1cd0>
  41af64:	mov	x2, x3
  41af68:	b	41acb4 <_obstack_memory_used@@Base+0x1fa4>
  41af6c:	cmp	x2, #0x6
  41af70:	mov	x3, #0x6                   	// #6
  41af74:	csel	x3, x2, x3, le
  41af78:	add	x1, sp, #0x70
  41af7c:	subs	w4, w3, #0x1
  41af80:	b.mi	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.first
  41af84:	ldrb	w6, [x25, w4, sxtw]
  41af88:	add	x1, sp, #0x70
  41af8c:	cmp	w3, #0x1
  41af90:	sub	w5, w3, #0x2
  41af94:	ldrb	w6, [x0, x6]
  41af98:	strb	w6, [x1, w4, sxtw]
  41af9c:	b.eq	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  41afa0:	ldrb	w6, [x25, w5, sxtw]
  41afa4:	cmp	w3, #0x2
  41afa8:	sub	w4, w3, #0x3
  41afac:	ldrb	w6, [x0, x6]
  41afb0:	strb	w6, [x1, w5, sxtw]
  41afb4:	b.eq	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  41afb8:	ldrb	w6, [x25, w4, sxtw]
  41afbc:	cmp	w3, #0x3
  41afc0:	sub	w5, w3, #0x4
  41afc4:	ldrb	w6, [x0, x6]
  41afc8:	strb	w6, [x1, w4, sxtw]
  41afcc:	b.eq	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  41afd0:	ldrb	w6, [x25, w5, sxtw]
  41afd4:	cmp	w3, #0x4
  41afd8:	sub	w4, w3, #0x5
  41afdc:	ldrb	w6, [x0, x6]
  41afe0:	strb	w6, [x1, w5, sxtw]
  41afe4:	b.eq	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  41afe8:	ldrb	w5, [x25, w4, sxtw]
  41afec:	cmp	w3, #0x5
  41aff0:	sub	w3, w3, #0x6
  41aff4:	ldrb	w5, [x0, x5]
  41aff8:	strb	w5, [x1, w4, sxtw]
  41affc:	b.eq	41abf0 <_obstack_memory_used@@Base+0x1ee0>  // b.none
  41b000:	ldrb	w4, [x25, w3, sxtw]
  41b004:	ldrb	w0, [x0, x4]
  41b008:	strb	w0, [x1, w3, sxtw]
  41b00c:	b	41abf0 <_obstack_memory_used@@Base+0x1ee0>
  41b010:	sub	x22, x22, x21
  41b014:	str	x22, [x19, #48]
  41b018:	b	41aef8 <_obstack_memory_used@@Base+0x21e8>
  41b01c:	ldr	x0, [x19, #40]
  41b020:	ldr	x22, [x19, #56]
  41b024:	ldp	x25, x26, [sp, #64]
  41b028:	b	41a970 <_obstack_memory_used@@Base+0x1c60>
  41b02c:	nop
  41b030:	stp	x29, x30, [sp, #-32]!
  41b034:	mov	x29, sp
  41b038:	stp	x19, x20, [sp, #16]
  41b03c:	mov	x19, x1
  41b040:	mov	x1, x2
  41b044:	ldr	w2, [x0, #160]
  41b048:	mov	x20, x0
  41b04c:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41b050:	ldr	x3, [x19, #16]
  41b054:	cmp	x3, #0x0
  41b058:	b.le	41b0b0 <_obstack_memory_used@@Base+0x23a0>
  41b05c:	ldr	x1, [x20, #152]
  41b060:	and	w6, w0, #0x2
  41b064:	and	w2, w0, #0x8
  41b068:	ldr	x4, [x19, #24]
  41b06c:	ldr	x5, [x1]
  41b070:	tbz	w0, #0, 41b0c0 <_obstack_memory_used@@Base+0x23b0>
  41b074:	cbz	w6, 41b1dc <_obstack_memory_used@@Base+0x24cc>
  41b078:	cbz	w2, 41b264 <_obstack_memory_used@@Base+0x2554>
  41b07c:	mov	x2, #0x0                   	// #0
  41b080:	ldr	x0, [x4, x2, lsl #3]
  41b084:	add	x2, x2, #0x1
  41b088:	add	x6, x5, x0, lsl #4
  41b08c:	ldr	w1, [x6, #8]
  41b090:	ldrb	w6, [x6, #8]
  41b094:	ubfx	x1, x1, #8, #10
  41b098:	cmp	w6, #0x2
  41b09c:	b.ne	41b0a8 <_obstack_memory_used@@Base+0x2398>  // b.any
  41b0a0:	cbz	w1, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b0a4:	tbz	w1, #3, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b0a8:	cmp	x3, x2
  41b0ac:	b.ne	41b080 <_obstack_memory_used@@Base+0x2370>  // b.any
  41b0b0:	mov	x0, #0x0                   	// #0
  41b0b4:	ldp	x19, x20, [sp, #16]
  41b0b8:	ldp	x29, x30, [sp], #32
  41b0bc:	ret
  41b0c0:	mov	x1, #0x0                   	// #0
  41b0c4:	cbz	w6, 41b154 <_obstack_memory_used@@Base+0x2444>
  41b0c8:	cbz	w2, 41b114 <_obstack_memory_used@@Base+0x2404>
  41b0cc:	nop
  41b0d0:	ldr	x0, [x4, x1, lsl #3]
  41b0d4:	add	x1, x1, #0x1
  41b0d8:	add	x6, x5, x0, lsl #4
  41b0dc:	ldr	w2, [x6, #8]
  41b0e0:	ldrb	w6, [x6, #8]
  41b0e4:	ubfx	x2, x2, #8, #10
  41b0e8:	cmp	w6, #0x2
  41b0ec:	b.ne	41b104 <_obstack_memory_used@@Base+0x23f4>  // b.any
  41b0f0:	cbz	w2, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b0f4:	tbnz	w2, #2, 41b104 <_obstack_memory_used@@Base+0x23f4>
  41b0f8:	ldp	x19, x20, [sp, #16]
  41b0fc:	ldp	x29, x30, [sp], #32
  41b100:	ret
  41b104:	cmp	x3, x1
  41b108:	b.ne	41b0d0 <_obstack_memory_used@@Base+0x23c0>  // b.any
  41b10c:	mov	x0, #0x0                   	// #0
  41b110:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b114:	mov	w7, #0x84                  	// #132
  41b118:	ldr	x0, [x4, x1, lsl #3]
  41b11c:	add	x1, x1, #0x1
  41b120:	add	x6, x5, x0, lsl #4
  41b124:	ldr	w2, [x6, #8]
  41b128:	ldrb	w6, [x6, #8]
  41b12c:	ubfx	x2, x2, #8, #10
  41b130:	cmp	w6, #0x2
  41b134:	b.ne	41b144 <_obstack_memory_used@@Base+0x2434>  // b.any
  41b138:	cbz	w2, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b13c:	tst	w2, w7
  41b140:	b.eq	41b0f8 <_obstack_memory_used@@Base+0x23e8>  // b.none
  41b144:	cmp	x3, x1
  41b148:	b.ne	41b118 <_obstack_memory_used@@Base+0x2408>  // b.any
  41b14c:	mov	x0, #0x0                   	// #0
  41b150:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b154:	cbz	w2, 41b19c <_obstack_memory_used@@Base+0x248c>
  41b158:	mov	w7, #0x24                  	// #36
  41b15c:	nop
  41b160:	ldr	x0, [x4, x1, lsl #3]
  41b164:	add	x1, x1, #0x1
  41b168:	add	x6, x5, x0, lsl #4
  41b16c:	ldr	w2, [x6, #8]
  41b170:	ldrb	w6, [x6, #8]
  41b174:	ubfx	x2, x2, #8, #10
  41b178:	cmp	w6, #0x2
  41b17c:	b.ne	41b18c <_obstack_memory_used@@Base+0x247c>  // b.any
  41b180:	cbz	w2, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b184:	tst	w2, w7
  41b188:	b.eq	41b0f8 <_obstack_memory_used@@Base+0x23e8>  // b.none
  41b18c:	cmp	x3, x1
  41b190:	b.ne	41b160 <_obstack_memory_used@@Base+0x2450>  // b.any
  41b194:	mov	x0, #0x0                   	// #0
  41b198:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b19c:	mov	w7, #0xa4                  	// #164
  41b1a0:	ldr	x0, [x4, x1, lsl #3]
  41b1a4:	add	x1, x1, #0x1
  41b1a8:	add	x6, x5, x0, lsl #4
  41b1ac:	ldr	w2, [x6, #8]
  41b1b0:	ldrb	w6, [x6, #8]
  41b1b4:	ubfx	x2, x2, #8, #10
  41b1b8:	cmp	w6, #0x2
  41b1bc:	b.ne	41b1cc <_obstack_memory_used@@Base+0x24bc>  // b.any
  41b1c0:	cbz	w2, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b1c4:	tst	w2, w7
  41b1c8:	b.eq	41b0f8 <_obstack_memory_used@@Base+0x23e8>  // b.none
  41b1cc:	cmp	x3, x1
  41b1d0:	b.ne	41b1a0 <_obstack_memory_used@@Base+0x2490>  // b.any
  41b1d4:	mov	x0, #0x0                   	// #0
  41b1d8:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b1dc:	cbz	w2, 41b21c <_obstack_memory_used@@Base+0x250c>
  41b1e0:	mov	x2, #0x0                   	// #0
  41b1e4:	ldr	x0, [x4, x2, lsl #3]
  41b1e8:	add	x6, x5, x0, lsl #4
  41b1ec:	ldr	w1, [x6, #8]
  41b1f0:	ldrb	w6, [x6, #8]
  41b1f4:	ubfx	x1, x1, #8, #10
  41b1f8:	cmp	w6, #0x2
  41b1fc:	b.ne	41b208 <_obstack_memory_used@@Base+0x24f8>  // b.any
  41b200:	cbz	w1, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b204:	tbz	w1, #3, 41b2a0 <_obstack_memory_used@@Base+0x2590>
  41b208:	add	x2, x2, #0x1
  41b20c:	cmp	x3, x2
  41b210:	b.ne	41b1e4 <_obstack_memory_used@@Base+0x24d4>  // b.any
  41b214:	mov	x0, #0x0                   	// #0
  41b218:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b21c:	mov	x2, #0x0                   	// #0
  41b220:	mov	w7, #0xa0                  	// #160
  41b224:	ldr	x0, [x4, x2, lsl #3]
  41b228:	add	x6, x5, x0, lsl #4
  41b22c:	ldr	w1, [x6, #8]
  41b230:	ldrb	w6, [x6, #8]
  41b234:	ubfx	x1, x1, #8, #10
  41b238:	cmp	w6, #0x2
  41b23c:	b.ne	41b250 <_obstack_memory_used@@Base+0x2540>  // b.any
  41b240:	cbz	w1, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b244:	tbnz	w1, #3, 41b250 <_obstack_memory_used@@Base+0x2540>
  41b248:	tst	w1, w7
  41b24c:	b.eq	41b0f8 <_obstack_memory_used@@Base+0x23e8>  // b.none
  41b250:	add	x2, x2, #0x1
  41b254:	cmp	x3, x2
  41b258:	b.ne	41b224 <_obstack_memory_used@@Base+0x2514>  // b.any
  41b25c:	mov	x0, #0x0                   	// #0
  41b260:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b264:	mov	x2, #0x0                   	// #0
  41b268:	ldr	x0, [x4, x2, lsl #3]
  41b26c:	add	x6, x5, x0, lsl #4
  41b270:	ldr	w1, [x6, #8]
  41b274:	ldrb	w6, [x6, #8]
  41b278:	ubfx	x1, x1, #8, #10
  41b27c:	cmp	w6, #0x2
  41b280:	b.ne	41b28c <_obstack_memory_used@@Base+0x257c>  // b.any
  41b284:	cbz	w1, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b288:	tbz	w1, #3, 41b2a8 <_obstack_memory_used@@Base+0x2598>
  41b28c:	add	x2, x2, #0x1
  41b290:	cmp	x3, x2
  41b294:	b.ne	41b268 <_obstack_memory_used@@Base+0x2558>  // b.any
  41b298:	mov	x0, #0x0                   	// #0
  41b29c:	b	41b0b4 <_obstack_memory_used@@Base+0x23a4>
  41b2a0:	tbz	w1, #5, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b2a4:	b	41b208 <_obstack_memory_used@@Base+0x24f8>
  41b2a8:	tbz	w1, #7, 41b0f8 <_obstack_memory_used@@Base+0x23e8>
  41b2ac:	b	41b28c <_obstack_memory_used@@Base+0x257c>
  41b2b0:	stp	x29, x30, [sp, #-96]!
  41b2b4:	mov	x29, sp
  41b2b8:	stp	x21, x22, [sp, #32]
  41b2bc:	mov	x22, x2
  41b2c0:	ldr	x2, [x1]
  41b2c4:	ldr	x21, [x0, #152]
  41b2c8:	cmp	x2, #0x0
  41b2cc:	b.le	41b384 <_obstack_memory_used@@Base+0x2674>
  41b2d0:	stp	x19, x20, [sp, #16]
  41b2d4:	mov	x19, #0x0                   	// #0
  41b2d8:	stp	x23, x24, [sp, #48]
  41b2dc:	mov	x24, x0
  41b2e0:	mov	x23, x3
  41b2e4:	stp	x25, x26, [sp, #64]
  41b2e8:	mov	x25, x1
  41b2ec:	b	41b2f8 <_obstack_memory_used@@Base+0x25e8>
  41b2f0:	cmp	x19, x2
  41b2f4:	b.ge	41b378 <_obstack_memory_used@@Base+0x2668>  // b.tcont
  41b2f8:	ldr	x4, [x22]
  41b2fc:	ldr	x5, [x21]
  41b300:	ldr	x20, [x4, x19, lsl #3]
  41b304:	add	x19, x19, #0x1
  41b308:	lsl	x4, x20, #4
  41b30c:	add	x6, x5, x4
  41b310:	ldrb	w6, [x6, #8]
  41b314:	cmp	w6, #0x8
  41b318:	b.ne	41b2f0 <_obstack_memory_used@@Base+0x25e0>  // b.any
  41b31c:	ldr	x3, [x5, x4]
  41b320:	cmp	x3, #0x3f
  41b324:	b.gt	41b2f0 <_obstack_memory_used@@Base+0x25e0>
  41b328:	ldr	x4, [x21, #160]
  41b32c:	lsr	x3, x4, x3
  41b330:	tbz	w3, #0, 41b2f0 <_obstack_memory_used@@Base+0x25e0>
  41b334:	ldp	x26, x0, [x24, #232]
  41b338:	str	x27, [sp, #80]
  41b33c:	ldr	x27, [x24, #248]
  41b340:	cmp	x0, x26
  41b344:	b.eq	41b3ac <_obstack_memory_used@@Base+0x269c>  // b.none
  41b348:	mov	x1, #0x30                  	// #48
  41b34c:	mov	x0, #0x1                   	// #1
  41b350:	bl	402910 <calloc@plt>
  41b354:	str	x0, [x27, x26, lsl #3]
  41b358:	add	x1, x26, #0x1
  41b35c:	cbz	x0, 41b394 <_obstack_memory_used@@Base+0x2684>
  41b360:	ldr	x27, [sp, #80]
  41b364:	str	x1, [x24, #232]
  41b368:	stp	x23, x20, [x0]
  41b36c:	ldr	x2, [x25]
  41b370:	cmp	x19, x2
  41b374:	b.lt	41b2f8 <_obstack_memory_used@@Base+0x25e8>  // b.tstop
  41b378:	ldp	x19, x20, [sp, #16]
  41b37c:	ldp	x23, x24, [sp, #48]
  41b380:	ldp	x25, x26, [sp, #64]
  41b384:	mov	w0, #0x0                   	// #0
  41b388:	ldp	x21, x22, [sp, #32]
  41b38c:	ldp	x29, x30, [sp], #96
  41b390:	ret
  41b394:	mov	w0, #0xc                   	// #12
  41b398:	ldp	x19, x20, [sp, #16]
  41b39c:	ldp	x23, x24, [sp, #48]
  41b3a0:	ldp	x25, x26, [sp, #64]
  41b3a4:	ldr	x27, [sp, #80]
  41b3a8:	b	41b388 <_obstack_memory_used@@Base+0x2678>
  41b3ac:	mov	x0, x27
  41b3b0:	lsl	x1, x26, #4
  41b3b4:	bl	402930 <realloc@plt>
  41b3b8:	mov	x27, x0
  41b3bc:	lsl	x0, x26, #1
  41b3c0:	cbz	x27, 41b394 <_obstack_memory_used@@Base+0x2684>
  41b3c4:	stp	x0, x27, [x24, #240]
  41b3c8:	ldr	x26, [x24, #232]
  41b3cc:	b	41b348 <_obstack_memory_used@@Base+0x2638>
  41b3d0:	stp	x29, x30, [sp, #-80]!
  41b3d4:	mov	x29, sp
  41b3d8:	stp	x19, x20, [sp, #16]
  41b3dc:	mov	x20, x0
  41b3e0:	mov	x19, x1
  41b3e4:	stp	x21, x22, [sp, #32]
  41b3e8:	mov	x22, x3
  41b3ec:	mov	x21, x5
  41b3f0:	stp	x23, x24, [sp, #48]
  41b3f4:	mov	x24, x4
  41b3f8:	stp	x25, x26, [sp, #64]
  41b3fc:	mov	x25, x2
  41b400:	tbz	w6, #22, 41b420 <_obstack_memory_used@@Base+0x2710>
  41b404:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b408:	mov	x0, x5
  41b40c:	add	x1, x1, #0xe20
  41b410:	bl	402aa0 <strcmp@plt>
  41b414:	cbnz	w0, 41b50c <_obstack_memory_used@@Base+0x27fc>
  41b418:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b41c:	add	x21, x21, #0xe18
  41b420:	ldr	x23, [x22]
  41b424:	ldr	x0, [x24]
  41b428:	ldr	x26, [x25]
  41b42c:	cmp	x0, x23
  41b430:	b.eq	41b540 <_obstack_memory_used@@Base+0x2830>  // b.none
  41b434:	add	x0, x23, #0x1
  41b438:	str	x0, [x22]
  41b43c:	mov	x0, x21
  41b440:	bl	4026f0 <wctype@plt>
  41b444:	str	x0, [x26, x23, lsl #3]
  41b448:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b44c:	mov	x0, x21
  41b450:	add	x1, x1, #0xf90
  41b454:	bl	402aa0 <strcmp@plt>
  41b458:	cbz	w0, 41b4cc <_obstack_memory_used@@Base+0x27bc>
  41b45c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b460:	mov	x0, x21
  41b464:	add	x1, x1, #0xfa8
  41b468:	bl	402aa0 <strcmp@plt>
  41b46c:	cbnz	w0, 41b56c <_obstack_memory_used@@Base+0x285c>
  41b470:	bl	402ab0 <__ctype_b_loc@plt>
  41b474:	mov	x2, #0x0                   	// #0
  41b478:	mov	x5, #0x1                   	// #1
  41b47c:	ldr	x4, [x0]
  41b480:	cbnz	x20, 41b6f8 <_obstack_memory_used@@Base+0x29e8>
  41b484:	nop
  41b488:	ldrh	w0, [x4, x2, lsl #1]
  41b48c:	asr	x1, x2, #6
  41b490:	lsl	x3, x5, x2
  41b494:	add	x2, x2, #0x1
  41b498:	tbz	w0, #1, 41b4a8 <_obstack_memory_used@@Base+0x2798>
  41b49c:	ldr	x0, [x19, x1, lsl #3]
  41b4a0:	orr	x0, x0, x3
  41b4a4:	str	x0, [x19, x1, lsl #3]
  41b4a8:	cmp	x2, #0x100
  41b4ac:	b.ne	41b488 <_obstack_memory_used@@Base+0x2778>  // b.any
  41b4b0:	mov	w0, #0x0                   	// #0
  41b4b4:	ldp	x19, x20, [sp, #16]
  41b4b8:	ldp	x21, x22, [sp, #32]
  41b4bc:	ldp	x23, x24, [sp, #48]
  41b4c0:	ldp	x25, x26, [sp, #64]
  41b4c4:	ldp	x29, x30, [sp], #80
  41b4c8:	ret
  41b4cc:	bl	402ab0 <__ctype_b_loc@plt>
  41b4d0:	mov	x2, #0x0                   	// #0
  41b4d4:	mov	x6, #0x1                   	// #1
  41b4d8:	ldr	x5, [x0]
  41b4dc:	cbnz	x20, 41b6bc <_obstack_memory_used@@Base+0x29ac>
  41b4e0:	ldrh	w3, [x5, x2, lsl #1]
  41b4e4:	asr	x0, x2, #6
  41b4e8:	lsl	x4, x6, x2
  41b4ec:	add	x2, x2, #0x1
  41b4f0:	tbz	w3, #3, 41b500 <_obstack_memory_used@@Base+0x27f0>
  41b4f4:	ldr	x1, [x19, x0, lsl #3]
  41b4f8:	orr	x1, x1, x4
  41b4fc:	str	x1, [x19, x0, lsl #3]
  41b500:	cmp	x2, #0x100
  41b504:	b.ne	41b4e0 <_obstack_memory_used@@Base+0x27d0>  // b.any
  41b508:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b50c:	mov	x0, x21
  41b510:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b514:	add	x1, x1, #0xe28
  41b518:	bl	402aa0 <strcmp@plt>
  41b51c:	cmp	w0, #0x0
  41b520:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b524:	ldr	x23, [x22]
  41b528:	add	x1, x1, #0xe18
  41b52c:	ldr	x0, [x24]
  41b530:	csel	x21, x1, x21, eq  // eq = none
  41b534:	ldr	x26, [x25]
  41b538:	cmp	x0, x23
  41b53c:	b.ne	41b434 <_obstack_memory_used@@Base+0x2724>  // b.any
  41b540:	lsl	x23, x23, #1
  41b544:	mov	x0, x26
  41b548:	add	x23, x23, #0x1
  41b54c:	lsl	x1, x23, #3
  41b550:	bl	402930 <realloc@plt>
  41b554:	mov	x26, x0
  41b558:	cbz	x0, 41b810 <_obstack_memory_used@@Base+0x2b00>
  41b55c:	str	x0, [x25]
  41b560:	str	x23, [x24]
  41b564:	ldr	x23, [x22]
  41b568:	b	41b434 <_obstack_memory_used@@Base+0x2724>
  41b56c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b570:	mov	x0, x21
  41b574:	add	x1, x1, #0xe28
  41b578:	bl	402aa0 <strcmp@plt>
  41b57c:	cbz	w0, 41b5d4 <_obstack_memory_used@@Base+0x28c4>
  41b580:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b584:	mov	x0, x21
  41b588:	add	x1, x1, #0xf80
  41b58c:	bl	402aa0 <strcmp@plt>
  41b590:	cbnz	w0, 41b614 <_obstack_memory_used@@Base+0x2904>
  41b594:	bl	402ab0 <__ctype_b_loc@plt>
  41b598:	mov	x1, #0x0                   	// #0
  41b59c:	mov	x5, #0x1                   	// #1
  41b5a0:	ldr	x4, [x0]
  41b5a4:	cbnz	x20, 41b8a0 <_obstack_memory_used@@Base+0x2b90>
  41b5a8:	ldrh	w0, [x4, x1, lsl #1]
  41b5ac:	asr	x2, x1, #6
  41b5b0:	lsl	x3, x5, x1
  41b5b4:	add	x1, x1, #0x1
  41b5b8:	tbz	w0, #13, 41b5c8 <_obstack_memory_used@@Base+0x28b8>
  41b5bc:	ldr	x0, [x19, x2, lsl #3]
  41b5c0:	orr	x0, x0, x3
  41b5c4:	str	x0, [x19, x2, lsl #3]
  41b5c8:	cmp	x1, #0x100
  41b5cc:	b.ne	41b5a8 <_obstack_memory_used@@Base+0x2898>  // b.any
  41b5d0:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b5d4:	bl	402ab0 <__ctype_b_loc@plt>
  41b5d8:	mov	x1, #0x0                   	// #0
  41b5dc:	mov	x5, #0x1                   	// #1
  41b5e0:	ldr	x4, [x0]
  41b5e4:	cbnz	x20, 41b730 <_obstack_memory_used@@Base+0x2a20>
  41b5e8:	ldrh	w0, [x4, x1, lsl #1]
  41b5ec:	asr	x2, x1, #6
  41b5f0:	lsl	x3, x5, x1
  41b5f4:	add	x1, x1, #0x1
  41b5f8:	tbz	w0, #9, 41b608 <_obstack_memory_used@@Base+0x28f8>
  41b5fc:	ldr	x0, [x19, x2, lsl #3]
  41b600:	orr	x0, x0, x3
  41b604:	str	x0, [x19, x2, lsl #3]
  41b608:	cmp	x1, #0x100
  41b60c:	b.ne	41b5e8 <_obstack_memory_used@@Base+0x28d8>  // b.any
  41b610:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b614:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b618:	mov	x0, x21
  41b61c:	add	x1, x1, #0xe18
  41b620:	bl	402aa0 <strcmp@plt>
  41b624:	cbz	w0, 41b67c <_obstack_memory_used@@Base+0x296c>
  41b628:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b62c:	mov	x0, x21
  41b630:	add	x1, x1, #0xf70
  41b634:	bl	402aa0 <strcmp@plt>
  41b638:	cbnz	w0, 41b768 <_obstack_memory_used@@Base+0x2a58>
  41b63c:	bl	402ab0 <__ctype_b_loc@plt>
  41b640:	mov	x1, #0x0                   	// #0
  41b644:	mov	x5, #0x1                   	// #1
  41b648:	ldr	x4, [x0]
  41b64c:	cbnz	x20, 41b8d8 <_obstack_memory_used@@Base+0x2bc8>
  41b650:	ldrh	w2, [x4, x1, lsl #1]
  41b654:	asr	x0, x1, #6
  41b658:	lsl	x3, x5, x1
  41b65c:	add	x1, x1, #0x1
  41b660:	tbz	w2, #11, 41b670 <_obstack_memory_used@@Base+0x2960>
  41b664:	ldr	x2, [x19, x0, lsl #3]
  41b668:	orr	x2, x2, x3
  41b66c:	str	x2, [x19, x0, lsl #3]
  41b670:	cmp	x1, #0x100
  41b674:	b.ne	41b650 <_obstack_memory_used@@Base+0x2940>  // b.any
  41b678:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b67c:	bl	402ab0 <__ctype_b_loc@plt>
  41b680:	mov	x1, #0x0                   	// #0
  41b684:	mov	x5, #0x1                   	// #1
  41b688:	ldr	x4, [x0]
  41b68c:	cbnz	x20, 41b86c <_obstack_memory_used@@Base+0x2b5c>
  41b690:	ldrh	w0, [x4, x1, lsl #1]
  41b694:	asr	x2, x1, #6
  41b698:	lsl	x3, x5, x1
  41b69c:	add	x1, x1, #0x1
  41b6a0:	tbz	w0, #10, 41b6b0 <_obstack_memory_used@@Base+0x29a0>
  41b6a4:	ldr	x0, [x19, x2, lsl #3]
  41b6a8:	orr	x0, x0, x3
  41b6ac:	str	x0, [x19, x2, lsl #3]
  41b6b0:	cmp	x1, #0x100
  41b6b4:	b.ne	41b690 <_obstack_memory_used@@Base+0x2980>  // b.any
  41b6b8:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b6bc:	mov	x4, x6
  41b6c0:	mov	x0, #0x0                   	// #0
  41b6c4:	nop
  41b6c8:	ldrh	w1, [x5, x0, lsl #1]
  41b6cc:	tbz	w1, #3, 41b6e8 <_obstack_memory_used@@Base+0x29d8>
  41b6d0:	ldrb	w1, [x20, x0]
  41b6d4:	ubfx	x3, x1, #6, #2
  41b6d8:	lsl	x1, x4, x1
  41b6dc:	ldr	x2, [x19, x3, lsl #3]
  41b6e0:	orr	x1, x2, x1
  41b6e4:	str	x1, [x19, x3, lsl #3]
  41b6e8:	add	x0, x0, #0x1
  41b6ec:	cmp	x0, #0x100
  41b6f0:	b.ne	41b6c8 <_obstack_memory_used@@Base+0x29b8>  // b.any
  41b6f4:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b6f8:	mov	x0, #0x0                   	// #0
  41b6fc:	nop
  41b700:	ldrh	w1, [x4, x0, lsl #1]
  41b704:	tbz	w1, #1, 41b720 <_obstack_memory_used@@Base+0x2a10>
  41b708:	ldrb	w1, [x20, x0]
  41b70c:	ubfx	x3, x1, #6, #2
  41b710:	lsl	x1, x5, x1
  41b714:	ldr	x2, [x19, x3, lsl #3]
  41b718:	orr	x1, x2, x1
  41b71c:	str	x1, [x19, x3, lsl #3]
  41b720:	add	x0, x0, #0x1
  41b724:	cmp	x0, #0x100
  41b728:	b.ne	41b700 <_obstack_memory_used@@Base+0x29f0>  // b.any
  41b72c:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b730:	mov	x0, #0x0                   	// #0
  41b734:	nop
  41b738:	ldrh	w1, [x4, x0, lsl #1]
  41b73c:	tbz	w1, #9, 41b758 <_obstack_memory_used@@Base+0x2a48>
  41b740:	ldrb	w1, [x20, x0]
  41b744:	ubfx	x3, x1, #6, #2
  41b748:	lsl	x1, x5, x1
  41b74c:	ldr	x2, [x19, x3, lsl #3]
  41b750:	orr	x1, x2, x1
  41b754:	str	x1, [x19, x3, lsl #3]
  41b758:	add	x0, x0, #0x1
  41b75c:	cmp	x0, #0x100
  41b760:	b.ne	41b738 <_obstack_memory_used@@Base+0x2a28>  // b.any
  41b764:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b768:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b76c:	mov	x0, x21
  41b770:	add	x1, x1, #0xf98
  41b774:	bl	402aa0 <strcmp@plt>
  41b778:	cbnz	w0, 41b7bc <_obstack_memory_used@@Base+0x2aac>
  41b77c:	bl	402ab0 <__ctype_b_loc@plt>
  41b780:	mov	x1, #0x0                   	// #0
  41b784:	mov	x5, #0x1                   	// #1
  41b788:	ldr	x4, [x0]
  41b78c:	cbnz	x20, 41bab8 <_obstack_memory_used@@Base+0x2da8>
  41b790:	ldrh	w0, [x4, x1, lsl #1]
  41b794:	asr	x2, x1, #6
  41b798:	lsl	x3, x5, x1
  41b79c:	add	x1, x1, #0x1
  41b7a0:	tbz	w0, #14, 41b7b0 <_obstack_memory_used@@Base+0x2aa0>
  41b7a4:	ldr	x0, [x19, x2, lsl #3]
  41b7a8:	orr	x0, x0, x3
  41b7ac:	str	x0, [x19, x2, lsl #3]
  41b7b0:	cmp	x1, #0x100
  41b7b4:	b.ne	41b790 <_obstack_memory_used@@Base+0x2a80>  // b.any
  41b7b8:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b7bc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b7c0:	mov	x0, x21
  41b7c4:	add	x1, x1, #0xe20
  41b7c8:	bl	402aa0 <strcmp@plt>
  41b7cc:	cbnz	w0, 41b818 <_obstack_memory_used@@Base+0x2b08>
  41b7d0:	bl	402ab0 <__ctype_b_loc@plt>
  41b7d4:	mov	x1, #0x0                   	// #0
  41b7d8:	mov	x5, #0x1                   	// #1
  41b7dc:	ldr	x4, [x0]
  41b7e0:	cbnz	x20, 41bb24 <_obstack_memory_used@@Base+0x2e14>
  41b7e4:	ldrh	w0, [x4, x1, lsl #1]
  41b7e8:	asr	x2, x1, #6
  41b7ec:	lsl	x3, x5, x1
  41b7f0:	add	x1, x1, #0x1
  41b7f4:	tbz	w0, #8, 41b804 <_obstack_memory_used@@Base+0x2af4>
  41b7f8:	ldr	x0, [x19, x2, lsl #3]
  41b7fc:	orr	x0, x0, x3
  41b800:	str	x0, [x19, x2, lsl #3]
  41b804:	cmp	x1, #0x100
  41b808:	b.ne	41b7e4 <_obstack_memory_used@@Base+0x2ad4>  // b.any
  41b80c:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b810:	mov	w0, #0xc                   	// #12
  41b814:	b	41b4b4 <_obstack_memory_used@@Base+0x27a4>
  41b818:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b81c:	mov	x0, x21
  41b820:	add	x1, x1, #0xfb0
  41b824:	bl	402aa0 <strcmp@plt>
  41b828:	cbnz	w0, 41b90c <_obstack_memory_used@@Base+0x2bfc>
  41b82c:	bl	402ab0 <__ctype_b_loc@plt>
  41b830:	mov	x1, #0x0                   	// #0
  41b834:	mov	x4, #0x1                   	// #1
  41b838:	ldr	x2, [x0]
  41b83c:	cbnz	x20, 41baec <_obstack_memory_used@@Base+0x2ddc>
  41b840:	ldrh	w0, [x2, x1, lsl #1]
  41b844:	asr	x3, x1, #6
  41b848:	lsl	x5, x4, x1
  41b84c:	add	x1, x1, #0x1
  41b850:	tbz	w0, #0, 41b860 <_obstack_memory_used@@Base+0x2b50>
  41b854:	ldr	x0, [x19, x3, lsl #3]
  41b858:	orr	x0, x0, x5
  41b85c:	str	x0, [x19, x3, lsl #3]
  41b860:	cmp	x1, #0x100
  41b864:	b.ne	41b840 <_obstack_memory_used@@Base+0x2b30>  // b.any
  41b868:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b86c:	mov	x0, #0x0                   	// #0
  41b870:	ldrh	w1, [x4, x0, lsl #1]
  41b874:	tbz	w1, #10, 41b890 <_obstack_memory_used@@Base+0x2b80>
  41b878:	ldrb	w1, [x20, x0]
  41b87c:	ubfx	x3, x1, #6, #2
  41b880:	lsl	x1, x5, x1
  41b884:	ldr	x2, [x19, x3, lsl #3]
  41b888:	orr	x1, x2, x1
  41b88c:	str	x1, [x19, x3, lsl #3]
  41b890:	add	x0, x0, #0x1
  41b894:	cmp	x0, #0x100
  41b898:	b.ne	41b870 <_obstack_memory_used@@Base+0x2b60>  // b.any
  41b89c:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b8a0:	mov	x0, #0x0                   	// #0
  41b8a4:	nop
  41b8a8:	ldrh	w1, [x4, x0, lsl #1]
  41b8ac:	tbz	w1, #13, 41b8c8 <_obstack_memory_used@@Base+0x2bb8>
  41b8b0:	ldrb	w1, [x20, x0]
  41b8b4:	ubfx	x3, x1, #6, #2
  41b8b8:	lsl	x1, x5, x1
  41b8bc:	ldr	x2, [x19, x3, lsl #3]
  41b8c0:	orr	x1, x2, x1
  41b8c4:	str	x1, [x19, x3, lsl #3]
  41b8c8:	add	x0, x0, #0x1
  41b8cc:	cmp	x0, #0x100
  41b8d0:	b.ne	41b8a8 <_obstack_memory_used@@Base+0x2b98>  // b.any
  41b8d4:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b8d8:	mov	x0, #0x0                   	// #0
  41b8dc:	ldrh	w1, [x4, x0, lsl #1]
  41b8e0:	tbz	w1, #11, 41b8fc <_obstack_memory_used@@Base+0x2bec>
  41b8e4:	ldrb	w1, [x20, x0]
  41b8e8:	ubfx	x3, x1, #6, #2
  41b8ec:	lsl	x1, x5, x1
  41b8f0:	ldr	x2, [x19, x3, lsl #3]
  41b8f4:	orr	x1, x2, x1
  41b8f8:	str	x1, [x19, x3, lsl #3]
  41b8fc:	add	x0, x0, #0x1
  41b900:	cmp	x0, #0x100
  41b904:	b.ne	41b8dc <_obstack_memory_used@@Base+0x2bcc>  // b.any
  41b908:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b90c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b910:	mov	x0, x21
  41b914:	add	x1, x1, #0xfa0
  41b918:	bl	402aa0 <strcmp@plt>
  41b91c:	cbnz	w0, 41b998 <_obstack_memory_used@@Base+0x2c88>
  41b920:	bl	402ab0 <__ctype_b_loc@plt>
  41b924:	mov	x1, #0x0                   	// #0
  41b928:	mov	x4, #0x1                   	// #1
  41b92c:	ldr	x3, [x0]
  41b930:	cbnz	x20, 41b960 <_obstack_memory_used@@Base+0x2c50>
  41b934:	ldrsh	w0, [x3, x1, lsl #1]
  41b938:	asr	x2, x1, #6
  41b93c:	lsl	x5, x4, x1
  41b940:	add	x1, x1, #0x1
  41b944:	tbz	w0, #31, 41b954 <_obstack_memory_used@@Base+0x2c44>
  41b948:	ldr	x0, [x19, x2, lsl #3]
  41b94c:	orr	x0, x0, x5
  41b950:	str	x0, [x19, x2, lsl #3]
  41b954:	cmp	x1, #0x100
  41b958:	b.ne	41b934 <_obstack_memory_used@@Base+0x2c24>  // b.any
  41b95c:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b960:	mov	x5, x4
  41b964:	mov	x0, #0x0                   	// #0
  41b968:	ldrsh	w1, [x3, x0, lsl #1]
  41b96c:	tbz	w1, #31, 41b988 <_obstack_memory_used@@Base+0x2c78>
  41b970:	ldrb	w1, [x20, x0]
  41b974:	ubfx	x4, x1, #6, #2
  41b978:	lsl	x1, x5, x1
  41b97c:	ldr	x2, [x19, x4, lsl #3]
  41b980:	orr	x1, x2, x1
  41b984:	str	x1, [x19, x4, lsl #3]
  41b988:	add	x0, x0, #0x1
  41b98c:	cmp	x0, #0x100
  41b990:	b.ne	41b968 <_obstack_memory_used@@Base+0x2c58>  // b.any
  41b994:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b998:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41b99c:	mov	x0, x21
  41b9a0:	add	x1, x1, #0xf88
  41b9a4:	bl	402aa0 <strcmp@plt>
  41b9a8:	cbnz	w0, 41ba24 <_obstack_memory_used@@Base+0x2d14>
  41b9ac:	bl	402ab0 <__ctype_b_loc@plt>
  41b9b0:	mov	x1, #0x0                   	// #0
  41b9b4:	mov	x4, #0x1                   	// #1
  41b9b8:	ldr	x3, [x0]
  41b9bc:	cbnz	x20, 41b9ec <_obstack_memory_used@@Base+0x2cdc>
  41b9c0:	ldrh	w0, [x3, x1, lsl #1]
  41b9c4:	asr	x2, x1, #6
  41b9c8:	lsl	x5, x4, x1
  41b9cc:	add	x1, x1, #0x1
  41b9d0:	tbz	w0, #2, 41b9e0 <_obstack_memory_used@@Base+0x2cd0>
  41b9d4:	ldr	x0, [x19, x2, lsl #3]
  41b9d8:	orr	x0, x0, x5
  41b9dc:	str	x0, [x19, x2, lsl #3]
  41b9e0:	cmp	x1, #0x100
  41b9e4:	b.ne	41b9c0 <_obstack_memory_used@@Base+0x2cb0>  // b.any
  41b9e8:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41b9ec:	mov	x5, x4
  41b9f0:	mov	x0, #0x0                   	// #0
  41b9f4:	ldrh	w1, [x3, x0, lsl #1]
  41b9f8:	tbz	w1, #2, 41ba14 <_obstack_memory_used@@Base+0x2d04>
  41b9fc:	ldrb	w1, [x20, x0]
  41ba00:	ubfx	x4, x1, #6, #2
  41ba04:	lsl	x1, x5, x1
  41ba08:	ldr	x2, [x19, x4, lsl #3]
  41ba0c:	orr	x1, x2, x1
  41ba10:	str	x1, [x19, x4, lsl #3]
  41ba14:	add	x0, x0, #0x1
  41ba18:	cmp	x0, #0x100
  41ba1c:	b.ne	41b9f4 <_obstack_memory_used@@Base+0x2ce4>  // b.any
  41ba20:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41ba24:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x112f0>
  41ba28:	mov	x0, x21
  41ba2c:	add	x1, x1, #0xf78
  41ba30:	bl	402aa0 <strcmp@plt>
  41ba34:	cbnz	w0, 41bab0 <_obstack_memory_used@@Base+0x2da0>
  41ba38:	bl	402ab0 <__ctype_b_loc@plt>
  41ba3c:	mov	x1, #0x0                   	// #0
  41ba40:	mov	x4, #0x1                   	// #1
  41ba44:	ldr	x3, [x0]
  41ba48:	cbnz	x20, 41ba78 <_obstack_memory_used@@Base+0x2d68>
  41ba4c:	ldrh	w0, [x3, x1, lsl #1]
  41ba50:	asr	x2, x1, #6
  41ba54:	lsl	x5, x4, x1
  41ba58:	add	x1, x1, #0x1
  41ba5c:	tbz	w0, #12, 41ba6c <_obstack_memory_used@@Base+0x2d5c>
  41ba60:	ldr	x0, [x19, x2, lsl #3]
  41ba64:	orr	x0, x0, x5
  41ba68:	str	x0, [x19, x2, lsl #3]
  41ba6c:	cmp	x1, #0x100
  41ba70:	b.ne	41ba4c <_obstack_memory_used@@Base+0x2d3c>  // b.any
  41ba74:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41ba78:	mov	x5, x4
  41ba7c:	mov	x0, #0x0                   	// #0
  41ba80:	ldrh	w1, [x3, x0, lsl #1]
  41ba84:	tbz	w1, #12, 41baa0 <_obstack_memory_used@@Base+0x2d90>
  41ba88:	ldrb	w1, [x20, x0]
  41ba8c:	ubfx	x4, x1, #6, #2
  41ba90:	lsl	x1, x5, x1
  41ba94:	ldr	x2, [x19, x4, lsl #3]
  41ba98:	orr	x1, x2, x1
  41ba9c:	str	x1, [x19, x4, lsl #3]
  41baa0:	add	x0, x0, #0x1
  41baa4:	cmp	x0, #0x100
  41baa8:	b.ne	41ba80 <_obstack_memory_used@@Base+0x2d70>  // b.any
  41baac:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41bab0:	mov	w0, #0x4                   	// #4
  41bab4:	b	41b4b4 <_obstack_memory_used@@Base+0x27a4>
  41bab8:	mov	x0, #0x0                   	// #0
  41babc:	ldrh	w1, [x4, x0, lsl #1]
  41bac0:	tbz	w1, #14, 41badc <_obstack_memory_used@@Base+0x2dcc>
  41bac4:	ldrb	w1, [x20, x0]
  41bac8:	ubfx	x3, x1, #6, #2
  41bacc:	lsl	x1, x5, x1
  41bad0:	ldr	x2, [x19, x3, lsl #3]
  41bad4:	orr	x1, x2, x1
  41bad8:	str	x1, [x19, x3, lsl #3]
  41badc:	add	x0, x0, #0x1
  41bae0:	cmp	x0, #0x100
  41bae4:	b.ne	41babc <_obstack_memory_used@@Base+0x2dac>  // b.any
  41bae8:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41baec:	mov	x5, x4
  41baf0:	mov	x0, #0x0                   	// #0
  41baf4:	ldrh	w1, [x2, x0, lsl #1]
  41baf8:	tbz	w1, #0, 41bb14 <_obstack_memory_used@@Base+0x2e04>
  41bafc:	ldrb	w1, [x20, x0]
  41bb00:	ubfx	x4, x1, #6, #2
  41bb04:	lsl	x1, x5, x1
  41bb08:	ldr	x3, [x19, x4, lsl #3]
  41bb0c:	orr	x1, x3, x1
  41bb10:	str	x1, [x19, x4, lsl #3]
  41bb14:	add	x0, x0, #0x1
  41bb18:	cmp	x0, #0x100
  41bb1c:	b.ne	41baf4 <_obstack_memory_used@@Base+0x2de4>  // b.any
  41bb20:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41bb24:	mov	x0, #0x0                   	// #0
  41bb28:	ldrh	w1, [x4, x0, lsl #1]
  41bb2c:	tbz	w1, #8, 41bb48 <_obstack_memory_used@@Base+0x2e38>
  41bb30:	ldrb	w1, [x20, x0]
  41bb34:	ubfx	x3, x1, #6, #2
  41bb38:	lsl	x1, x5, x1
  41bb3c:	ldr	x2, [x19, x3, lsl #3]
  41bb40:	orr	x1, x2, x1
  41bb44:	str	x1, [x19, x3, lsl #3]
  41bb48:	add	x0, x0, #0x1
  41bb4c:	cmp	x0, #0x100
  41bb50:	b.ne	41bb28 <_obstack_memory_used@@Base+0x2e18>  // b.any
  41bb54:	b	41b4b0 <_obstack_memory_used@@Base+0x27a0>
  41bb58:	stp	x29, x30, [sp, #-432]!
  41bb5c:	mov	x29, sp
  41bb60:	stp	x23, x24, [sp, #48]
  41bb64:	ldr	x23, [x0]
  41bb68:	stp	x19, x20, [sp, #16]
  41bb6c:	mov	x19, x3
  41bb70:	stp	x21, x22, [sp, #32]
  41bb74:	str	wzr, [sp, #124]
  41bb78:	stp	x0, x2, [sp, #128]
  41bb7c:	ldr	w0, [x23, #180]
  41bb80:	str	x1, [sp, #152]
  41bb84:	cmp	w0, #0x1
  41bb88:	b.ne	41bb9c <_obstack_memory_used@@Base+0x2e8c>  // b.any
  41bb8c:	ldr	x0, [sp, #128]
  41bb90:	ldr	x0, [x0, #24]
  41bb94:	ubfx	w0, w0, #22, #1
  41bb98:	str	w0, [sp, #124]
  41bb9c:	ldr	x0, [sp, #152]
  41bba0:	neg	x21, x19, lsl #2
  41bba4:	mov	x22, #0x0                   	// #0
  41bba8:	ldr	x2, [x0]
  41bbac:	cmp	x2, #0x0
  41bbb0:	b.le	41bc8c <_obstack_memory_used@@Base+0x2f7c>
  41bbb4:	add	x24, sp, #0xb0
  41bbb8:	stp	x25, x26, [sp, #64]
  41bbbc:	stp	x27, x28, [sp, #80]
  41bbc0:	mov	w28, #0x1                   	// #1
  41bbc4:	b	41bbf8 <_obstack_memory_used@@Base+0x2ee8>
  41bbc8:	cmp	w20, #0x3
  41bbcc:	b.eq	41bdfc <_obstack_memory_used@@Base+0x30ec>  // b.none
  41bbd0:	cmp	w20, #0x6
  41bbd4:	b.eq	41bca0 <_obstack_memory_used@@Base+0x2f90>  // b.none
  41bbd8:	and	w0, w20, #0xfffffffd
  41bbdc:	cmp	w0, #0x5
  41bbe0:	b.eq	41bf78 <_obstack_memory_used@@Base+0x3268>  // b.none
  41bbe4:	cmp	w20, #0x2
  41bbe8:	b.eq	41bf9c <_obstack_memory_used@@Base+0x328c>  // b.none
  41bbec:	add	x22, x22, #0x1
  41bbf0:	cmp	x22, x2
  41bbf4:	b.ge	41bc84 <_obstack_memory_used@@Base+0x2f74>  // b.tcont
  41bbf8:	ldr	x0, [sp, #136]
  41bbfc:	ldr	x1, [x0]
  41bc00:	ldr	x0, [x23]
  41bc04:	ldr	x26, [x1, x22, lsl #3]
  41bc08:	lsl	x1, x26, #4
  41bc0c:	str	x1, [sp, #104]
  41bc10:	add	x1, x0, x1
  41bc14:	ldrb	w20, [x1, #8]
  41bc18:	cmp	w20, #0x1
  41bc1c:	b.ne	41bbc8 <_obstack_memory_used@@Base+0x2eb8>  // b.any
  41bc20:	ldr	x1, [sp, #104]
  41bc24:	ldrb	w1, [x0, x1]
  41bc28:	str	w1, [sp, #112]
  41bc2c:	and	x0, x1, #0xff
  41bc30:	strb	w20, [x19, x0]
  41bc34:	ldr	w0, [sp, #124]
  41bc38:	cbz	w0, 41bc54 <_obstack_memory_used@@Base+0x2f44>
  41bc3c:	bl	402770 <__ctype_tolower_loc@plt>
  41bc40:	ldr	w1, [sp, #112]
  41bc44:	ldr	x0, [x0]
  41bc48:	mov	w1, w1
  41bc4c:	ldrsw	x0, [x0, x1, lsl #2]
  41bc50:	strb	w20, [x19, x0]
  41bc54:	ldr	x0, [sp, #128]
  41bc58:	ldr	x0, [x0, #24]
  41bc5c:	tbz	w0, #22, 41bc70 <_obstack_memory_used@@Base+0x2f60>
  41bc60:	ldr	w0, [x23, #180]
  41bc64:	cmp	w0, #0x1
  41bc68:	b.gt	41bebc <_obstack_memory_used@@Base+0x31ac>
  41bc6c:	nop
  41bc70:	ldr	x0, [sp, #152]
  41bc74:	add	x22, x22, #0x1
  41bc78:	ldr	x2, [x0]
  41bc7c:	cmp	x22, x2
  41bc80:	b.lt	41bbf8 <_obstack_memory_used@@Base+0x2ee8>  // b.tstop
  41bc84:	ldp	x25, x26, [sp, #64]
  41bc88:	ldp	x27, x28, [sp, #80]
  41bc8c:	ldp	x19, x20, [sp, #16]
  41bc90:	ldp	x21, x22, [sp, #32]
  41bc94:	ldp	x23, x24, [sp, #48]
  41bc98:	ldp	x29, x30, [sp], #432
  41bc9c:	ret
  41bca0:	ldr	w0, [x23, #180]
  41bca4:	ldr	x26, [x1]
  41bca8:	cmp	w0, #0x1
  41bcac:	b.le	41bcc8 <_obstack_memory_used@@Base+0x2fb8>
  41bcb0:	ldr	x0, [x26, #72]
  41bcb4:	cbnz	x0, 41bd88 <_obstack_memory_used@@Base+0x3078>
  41bcb8:	ldrb	w0, [x26, #32]
  41bcbc:	tbnz	w0, #0, 41bd88 <_obstack_memory_used@@Base+0x3078>
  41bcc0:	ldr	x0, [x26, #64]
  41bcc4:	cbnz	x0, 41bd88 <_obstack_memory_used@@Base+0x3078>
  41bcc8:	ldr	x0, [x26, #40]
  41bccc:	mov	x25, #0x0                   	// #0
  41bcd0:	cmp	x0, #0x0
  41bcd4:	b.gt	41bce8 <_obstack_memory_used@@Base+0x2fd8>
  41bcd8:	b	41bbec <_obstack_memory_used@@Base+0x2edc>
  41bcdc:	ldr	x0, [x26, #40]
  41bce0:	cmp	x25, x0
  41bce4:	b.ge	41bc70 <_obstack_memory_used@@Base+0x2f60>  // b.tcont
  41bce8:	str	xzr, [sp, #168]
  41bcec:	add	x2, sp, #0xa8
  41bcf0:	mov	x0, x24
  41bcf4:	lsl	x20, x25, #2
  41bcf8:	ldr	x1, [x26]
  41bcfc:	ldr	w1, [x1, x25, lsl #2]
  41bd00:	add	x25, x25, #0x1
  41bd04:	bl	402d40 <wcrtomb@plt>
  41bd08:	cmn	x0, #0x1
  41bd0c:	b.eq	41bd40 <_obstack_memory_used@@Base+0x3030>  // b.none
  41bd10:	ldrb	w1, [sp, #176]
  41bd14:	str	w1, [sp, #104]
  41bd18:	and	x0, x1, #0xff
  41bd1c:	strb	w28, [x19, x0]
  41bd20:	ldr	w0, [sp, #124]
  41bd24:	cbz	w0, 41bd40 <_obstack_memory_used@@Base+0x3030>
  41bd28:	bl	402770 <__ctype_tolower_loc@plt>
  41bd2c:	ldr	w1, [sp, #104]
  41bd30:	ldr	x0, [x0]
  41bd34:	mov	w1, w1
  41bd38:	ldrsw	x0, [x0, x1, lsl #2]
  41bd3c:	strb	w28, [x19, x0]
  41bd40:	ldr	x0, [sp, #128]
  41bd44:	ldr	x0, [x0, #24]
  41bd48:	tbz	w0, #22, 41bcdc <_obstack_memory_used@@Base+0x2fcc>
  41bd4c:	ldr	w0, [x23, #180]
  41bd50:	cmp	w0, #0x1
  41bd54:	b.le	41bcdc <_obstack_memory_used@@Base+0x2fcc>
  41bd58:	ldr	x0, [x26]
  41bd5c:	ldr	w0, [x0, x20]
  41bd60:	bl	402cf0 <towlower@plt>
  41bd64:	mov	w1, w0
  41bd68:	add	x2, sp, #0xa8
  41bd6c:	mov	x0, x24
  41bd70:	bl	402d40 <wcrtomb@plt>
  41bd74:	cmn	x0, #0x1
  41bd78:	b.eq	41bcdc <_obstack_memory_used@@Base+0x2fcc>  // b.none
  41bd7c:	ldrb	w0, [sp, #176]
  41bd80:	strb	w28, [x19, x0]
  41bd84:	b	41bcdc <_obstack_memory_used@@Base+0x2fcc>
  41bd88:	strb	wzr, [sp, #168]
  41bd8c:	mov	x3, x24
  41bd90:	add	x1, sp, #0xa8
  41bd94:	mov	x2, #0x1                   	// #1
  41bd98:	mov	x0, #0x0                   	// #0
  41bd9c:	str	xzr, [x24]
  41bda0:	bl	418830 <wcrtomb@plt+0x15af0>
  41bda4:	cmn	x0, #0x2
  41bda8:	b.eq	41bde0 <_obstack_memory_used@@Base+0x30d0>  // b.none
  41bdac:	ldrb	w0, [sp, #168]
  41bdb0:	add	w0, w0, #0x1
  41bdb4:	and	w0, w0, #0xff
  41bdb8:	strb	w0, [sp, #168]
  41bdbc:	cbz	w0, 41bc70 <_obstack_memory_used@@Base+0x2f60>
  41bdc0:	mov	x3, x24
  41bdc4:	add	x1, sp, #0xa8
  41bdc8:	mov	x2, #0x1                   	// #1
  41bdcc:	mov	x0, #0x0                   	// #0
  41bdd0:	str	xzr, [x24]
  41bdd4:	bl	418830 <wcrtomb@plt+0x15af0>
  41bdd8:	cmn	x0, #0x2
  41bddc:	b.ne	41bdac <_obstack_memory_used@@Base+0x309c>  // b.any
  41bde0:	ldrb	w1, [sp, #168]
  41bde4:	add	w0, w1, #0x1
  41bde8:	and	w0, w0, #0xff
  41bdec:	strb	w0, [sp, #168]
  41bdf0:	strb	w28, [x19, x1]
  41bdf4:	cbnz	w0, 41bd8c <_obstack_memory_used@@Base+0x307c>
  41bdf8:	b	41bc70 <_obstack_memory_used@@Base+0x2f60>
  41bdfc:	str	xzr, [sp, #112]
  41be00:	mov	x20, x19
  41be04:	ldr	x0, [x1]
  41be08:	str	xzr, [sp, #144]
  41be0c:	ldr	x1, [sp, #112]
  41be10:	ldr	x25, [x0, x1]
  41be14:	ldr	w0, [sp, #124]
  41be18:	cbnz	w0, 41be7c <_obstack_memory_used@@Base+0x316c>
  41be1c:	mov	x0, #0x0                   	// #0
  41be20:	lsr	x1, x25, x0
  41be24:	tbz	w1, #0, 41be2c <_obstack_memory_used@@Base+0x311c>
  41be28:	strb	w28, [x20, x0]
  41be2c:	add	x0, x0, #0x1
  41be30:	cmp	x0, #0x40
  41be34:	b.ne	41be20 <_obstack_memory_used@@Base+0x3110>  // b.any
  41be38:	ldr	x1, [sp, #112]
  41be3c:	add	x20, x20, #0x40
  41be40:	ldr	x0, [sp, #144]
  41be44:	add	x1, x1, #0x8
  41be48:	str	x1, [sp, #112]
  41be4c:	add	x0, x0, #0x40
  41be50:	str	x0, [sp, #144]
  41be54:	cmp	x0, #0x100
  41be58:	b.eq	41bc70 <_obstack_memory_used@@Base+0x2f60>  // b.none
  41be5c:	ldr	x0, [x23]
  41be60:	ldr	x1, [sp, #104]
  41be64:	add	x1, x0, x1
  41be68:	ldr	x0, [x1]
  41be6c:	ldr	x1, [sp, #112]
  41be70:	ldr	x25, [x0, x1]
  41be74:	ldr	w0, [sp, #124]
  41be78:	cbz	w0, 41be1c <_obstack_memory_used@@Base+0x310c>
  41be7c:	mov	x27, x20
  41be80:	mov	w26, #0x0                   	// #0
  41be84:	nop
  41be88:	lsr	x0, x25, x26
  41be8c:	add	w26, w26, #0x1
  41be90:	tbz	w0, #0, 41beac <_obstack_memory_used@@Base+0x319c>
  41be94:	strb	w28, [x27]
  41be98:	bl	402770 <__ctype_tolower_loc@plt>
  41be9c:	ldr	x0, [x0]
  41bea0:	add	x0, x0, x27, lsl #2
  41bea4:	ldrsw	x0, [x0, x21]
  41bea8:	strb	w28, [x19, x0]
  41beac:	add	x27, x27, #0x1
  41beb0:	cmp	w26, #0x40
  41beb4:	b.ne	41be88 <_obstack_memory_used@@Base+0x3178>  // b.any
  41beb8:	b	41be38 <_obstack_memory_used@@Base+0x3128>
  41bebc:	ldr	x2, [x23]
  41bec0:	add	x0, x26, #0x1
  41bec4:	ldr	x1, [sp, #104]
  41bec8:	add	x5, x24, #0x1
  41becc:	ldrb	w1, [x2, x1]
  41bed0:	strb	w1, [sp, #176]
  41bed4:	ldr	x1, [x23, #16]
  41bed8:	cmp	x0, x1
  41bedc:	b.cs	41bfd8 <_obstack_memory_used@@Base+0x32c8>  // b.hs, b.nlast
  41bee0:	mov	w7, #0xff                  	// #255
  41bee4:	mov	w6, #0x1                   	// #1
  41bee8:	movk	w7, #0x20, lsl #16
  41beec:	movk	w6, #0x20, lsl #16
  41bef0:	b	41bf0c <_obstack_memory_used@@Base+0x31fc>
  41bef4:	ldrb	w1, [x2, x3]
  41bef8:	strb	w1, [x5], #1
  41befc:	ldr	x1, [x23, #16]
  41bf00:	cmp	x1, x0
  41bf04:	b.ls	41bf28 <_obstack_memory_used@@Base+0x3218>  // b.plast
  41bf08:	ldr	x2, [x23]
  41bf0c:	lsl	x3, x0, #4
  41bf10:	add	x1, x2, x3
  41bf14:	add	x0, x0, #0x1
  41bf18:	ldr	w1, [x1, #8]
  41bf1c:	and	w1, w1, w7
  41bf20:	cmp	w1, w6
  41bf24:	b.eq	41bef4 <_obstack_memory_used@@Base+0x31e4>  // b.none
  41bf28:	sub	x20, x5, x24
  41bf2c:	add	x3, sp, #0xa8
  41bf30:	mov	x2, x20
  41bf34:	mov	x1, x24
  41bf38:	add	x0, sp, #0xa4
  41bf3c:	str	xzr, [sp, #168]
  41bf40:	bl	418830 <wcrtomb@plt+0x15af0>
  41bf44:	cmp	x0, x20
  41bf48:	b.ne	41bc70 <_obstack_memory_used@@Base+0x2f60>  // b.any
  41bf4c:	ldr	w0, [sp, #164]
  41bf50:	bl	402cf0 <towlower@plt>
  41bf54:	mov	w1, w0
  41bf58:	add	x2, sp, #0xa8
  41bf5c:	mov	x0, x24
  41bf60:	bl	402d40 <wcrtomb@plt>
  41bf64:	cmn	x0, #0x1
  41bf68:	b.eq	41bc70 <_obstack_memory_used@@Base+0x2f60>  // b.none
  41bf6c:	ldrb	w0, [sp, #176]
  41bf70:	strb	w28, [x19, x0]
  41bf74:	b	41bc70 <_obstack_memory_used@@Base+0x2f60>
  41bf78:	mov	x0, x19
  41bf7c:	mov	x2, #0x100                 	// #256
  41bf80:	mov	w1, #0x1                   	// #1
  41bf84:	bl	4028d0 <memset@plt>
  41bf88:	cmp	w20, #0x2
  41bf8c:	b.eq	41bfac <_obstack_memory_used@@Base+0x329c>  // b.none
  41bf90:	ldp	x25, x26, [sp, #64]
  41bf94:	ldp	x27, x28, [sp, #80]
  41bf98:	b	41bc8c <_obstack_memory_used@@Base+0x2f7c>
  41bf9c:	mov	x0, x19
  41bfa0:	mov	x2, #0x100                 	// #256
  41bfa4:	mov	w1, #0x1                   	// #1
  41bfa8:	bl	4028d0 <memset@plt>
  41bfac:	ldr	x1, [sp, #128]
  41bfb0:	ldp	x25, x26, [sp, #64]
  41bfb4:	ldrb	w0, [x1, #56]
  41bfb8:	ldp	x27, x28, [sp, #80]
  41bfbc:	orr	w0, w0, #0x1
  41bfc0:	strb	w0, [x1, #56]
  41bfc4:	ldp	x19, x20, [sp, #16]
  41bfc8:	ldp	x21, x22, [sp, #32]
  41bfcc:	ldp	x23, x24, [sp, #48]
  41bfd0:	ldp	x29, x30, [sp], #432
  41bfd4:	ret
  41bfd8:	mov	x20, #0x1                   	// #1
  41bfdc:	b	41bf2c <_obstack_memory_used@@Base+0x321c>
  41bfe0:	stp	x29, x30, [sp, #-96]!
  41bfe4:	mov	x29, sp
  41bfe8:	stp	x19, x20, [sp, #16]
  41bfec:	mov	x19, x1
  41bff0:	stp	x21, x22, [sp, #32]
  41bff4:	ldr	x21, [x1, #72]
  41bff8:	stp	x23, x24, [sp, #48]
  41bffc:	mov	x23, x0
  41c000:	ldr	x1, [x1, #104]
  41c004:	cmp	x1, x21
  41c008:	b.le	41c230 <_obstack_memory_used@@Base+0x3520>
  41c00c:	ldr	x24, [x19, #8]
  41c010:	mov	x22, x2
  41c014:	ldrb	w1, [x0, #10]
  41c018:	ldr	w0, [x19, #144]
  41c01c:	ldrb	w20, [x24, x21]
  41c020:	and	w1, w1, #0xffffff9f
  41c024:	strb	w20, [x23]
  41c028:	cmp	w0, #0x1
  41c02c:	strb	w1, [x23, #10]
  41c030:	b.le	41c0e4 <_obstack_memory_used@@Base+0x33d4>
  41c034:	ldr	x1, [x19, #48]
  41c038:	cmp	x21, x1
  41c03c:	b.eq	41c050 <_obstack_memory_used@@Base+0x3340>  // b.none
  41c040:	ldr	x1, [x19, #16]
  41c044:	ldr	w1, [x1, x21, lsl #2]
  41c048:	cmn	w1, #0x1
  41c04c:	b.eq	41c2c0 <_obstack_memory_used@@Base+0x35b0>  // b.none
  41c050:	cmp	w20, #0x5c
  41c054:	b.eq	41c12c <_obstack_memory_used@@Base+0x341c>  // b.none
  41c058:	ldr	x0, [x19, #16]
  41c05c:	str	x25, [sp, #64]
  41c060:	mov	w1, #0x1                   	// #1
  41c064:	strb	w1, [x23, #8]
  41c068:	ldr	w25, [x0, x21, lsl #2]
  41c06c:	mov	w0, w25
  41c070:	bl	402bf0 <iswalnum@plt>
  41c074:	cmp	w25, #0x5f
  41c078:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c07c:	ldrb	w0, [x23, #10]
  41c080:	cset	w1, ne  // ne = any
  41c084:	bfi	w0, w1, #6, #1
  41c088:	strb	w0, [x23, #10]
  41c08c:	ldr	x25, [sp, #64]
  41c090:	cmp	w20, #0x2e
  41c094:	b.eq	41c608 <_obstack_memory_used@@Base+0x38f8>  // b.none
  41c098:	b.hi	41c15c <_obstack_memory_used@@Base+0x344c>  // b.pmore
  41c09c:	cmp	w20, #0x29
  41c0a0:	b.eq	41c5ec <_obstack_memory_used@@Base+0x38dc>  // b.none
  41c0a4:	b.ls	41c194 <_obstack_memory_used@@Base+0x3484>  // b.plast
  41c0a8:	cmp	w20, #0x2a
  41c0ac:	b.eq	41c5f8 <_obstack_memory_used@@Base+0x38e8>  // b.none
  41c0b0:	cmp	w20, #0x2b
  41c0b4:	b.ne	41c5e4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  41c0b8:	mov	x1, #0x402                 	// #1026
  41c0bc:	mov	w0, #0x1                   	// #1
  41c0c0:	tst	x22, x1
  41c0c4:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c0c8:	mov	w1, #0x12                  	// #18
  41c0cc:	strb	w1, [x23, #8]
  41c0d0:	ldp	x19, x20, [sp, #16]
  41c0d4:	ldp	x21, x22, [sp, #32]
  41c0d8:	ldp	x23, x24, [sp, #48]
  41c0dc:	ldp	x29, x30, [sp], #96
  41c0e0:	ret
  41c0e4:	cmp	w20, #0x5c
  41c0e8:	b.eq	41c12c <_obstack_memory_used@@Base+0x341c>  // b.none
  41c0ec:	bl	402ab0 <__ctype_b_loc@plt>
  41c0f0:	ldr	x0, [x0]
  41c0f4:	ubfiz	x2, x20, #1, #8
  41c0f8:	cmp	w20, #0x5f
  41c0fc:	ldr	w1, [x23, #8]
  41c100:	ldrh	w0, [x0, x2]
  41c104:	and	w1, w1, #0xffffff00
  41c108:	and	w1, w1, #0xffbfffff
  41c10c:	and	w0, w0, #0x8
  41c110:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c114:	cset	w0, ne  // ne = any
  41c118:	lsl	w0, w0, #22
  41c11c:	orr	w0, w0, #0x1
  41c120:	orr	w0, w0, w1
  41c124:	str	w0, [x23, #8]
  41c128:	b	41c090 <_obstack_memory_used@@Base+0x3380>
  41c12c:	ldr	x2, [x19, #88]
  41c130:	add	x1, x21, #0x1
  41c134:	cmp	x1, x2
  41c138:	b.lt	41c250 <_obstack_memory_used@@Base+0x3540>  // b.tstop
  41c13c:	mov	w1, #0x24                  	// #36
  41c140:	strb	w1, [x23, #8]
  41c144:	mov	w0, #0x1                   	// #1
  41c148:	ldp	x19, x20, [sp, #16]
  41c14c:	ldp	x21, x22, [sp, #32]
  41c150:	ldp	x23, x24, [sp, #48]
  41c154:	ldp	x29, x30, [sp], #96
  41c158:	ret
  41c15c:	cmp	w20, #0x7b
  41c160:	b.eq	41c5c0 <_obstack_memory_used@@Base+0x38b0>  // b.none
  41c164:	b.ls	41c1b8 <_obstack_memory_used@@Base+0x34a8>  // b.plast
  41c168:	cmp	w20, #0x7c
  41c16c:	b.eq	41c5d4 <_obstack_memory_used@@Base+0x38c4>  // b.none
  41c170:	cmp	w20, #0x7d
  41c174:	b.ne	41c5e4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  41c178:	mov	x1, #0x1200                	// #4608
  41c17c:	mov	w0, #0x1                   	// #1
  41c180:	bics	xzr, x1, x22
  41c184:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c188:	mov	w1, #0x18                  	// #24
  41c18c:	strb	w1, [x23, #8]
  41c190:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c194:	cmp	w20, #0x24
  41c198:	b.eq	41c55c <_obstack_memory_used@@Base+0x384c>  // b.none
  41c19c:	cmp	w20, #0x28
  41c1a0:	mov	w0, #0x1                   	// #1
  41c1a4:	b.ne	41c1f0 <_obstack_memory_used@@Base+0x34e0>  // b.any
  41c1a8:	tbz	w22, #13, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c1ac:	mov	w1, #0x8                   	// #8
  41c1b0:	strb	w1, [x23, #8]
  41c1b4:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c1b8:	cmp	w20, #0x5b
  41c1bc:	b.eq	41c618 <_obstack_memory_used@@Base+0x3908>  // b.none
  41c1c0:	cmp	w20, #0x5e
  41c1c4:	b.ne	41c20c <_obstack_memory_used@@Base+0x34fc>  // b.any
  41c1c8:	and	x0, x22, #0xfffff8
  41c1cc:	ands	x0, x0, #0xffffffffff80000f
  41c1d0:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  41c1d4:	b.ne	41c37c <_obstack_memory_used@@Base+0x366c>  // b.any
  41c1d8:	mov	w1, #0xc                   	// #12
  41c1dc:	mov	w2, #0x10                  	// #16
  41c1e0:	mov	w0, #0x1                   	// #1
  41c1e4:	str	w2, [x23]
  41c1e8:	strb	w1, [x23, #8]
  41c1ec:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c1f0:	cmp	w20, #0xa
  41c1f4:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c1f8:	tbz	w22, #11, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c1fc:	mov	w1, #0xa                   	// #10
  41c200:	mov	w0, #0x1                   	// #1
  41c204:	strb	w1, [x23, #8]
  41c208:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c20c:	cmp	w20, #0x3f
  41c210:	b.ne	41c5e4 <_obstack_memory_used@@Base+0x38d4>  // b.any
  41c214:	mov	x1, #0x402                 	// #1026
  41c218:	mov	w0, #0x1                   	// #1
  41c21c:	tst	x22, x1
  41c220:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c224:	mov	w1, #0x13                  	// #19
  41c228:	strb	w1, [x23, #8]
  41c22c:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c230:	mov	w1, #0x2                   	// #2
  41c234:	strb	w1, [x23, #8]
  41c238:	mov	w0, #0x0                   	// #0
  41c23c:	ldp	x19, x20, [sp, #16]
  41c240:	ldp	x21, x22, [sp, #32]
  41c244:	ldp	x23, x24, [sp, #48]
  41c248:	ldp	x29, x30, [sp], #96
  41c24c:	ret
  41c250:	ldrb	w2, [x19, #139]
  41c254:	cbnz	w2, 41c31c <_obstack_memory_used@@Base+0x360c>
  41c258:	ldrb	w20, [x24, x1]
  41c25c:	mov	w2, #0x1                   	// #1
  41c260:	strb	w20, [x23]
  41c264:	strb	w2, [x23, #8]
  41c268:	cmp	w0, #0x1
  41c26c:	b.le	41c2e4 <_obstack_memory_used@@Base+0x35d4>
  41c270:	ldr	x2, [x19, #16]
  41c274:	add	x2, x2, x1, lsl #2
  41c278:	ldr	w19, [x2]
  41c27c:	mov	w0, w19
  41c280:	bl	402bf0 <iswalnum@plt>
  41c284:	cmp	w19, #0x5f
  41c288:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c28c:	ldrb	w0, [x23, #10]
  41c290:	cset	w1, ne  // ne = any
  41c294:	bfi	w0, w1, #6, #1
  41c298:	strb	w0, [x23, #10]
  41c29c:	sub	w0, w20, #0x27
  41c2a0:	cmp	w0, #0x56
  41c2a4:	b.hi	41c314 <_obstack_memory_used@@Base+0x3604>  // b.pmore
  41c2a8:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41c2ac:	add	x1, x1, #0xc70
  41c2b0:	ldrh	w0, [x1, w0, uxtw #1]
  41c2b4:	adr	x1, 41c2c0 <_obstack_memory_used@@Base+0x35b0>
  41c2b8:	add	x0, x1, w0, sxth #2
  41c2bc:	br	x0
  41c2c0:	ldr	w1, [x23, #8]
  41c2c4:	mov	w2, #0x1                   	// #1
  41c2c8:	movk	w2, #0x20, lsl #16
  41c2cc:	mov	w0, #0x1                   	// #1
  41c2d0:	and	w1, w1, #0xffffff00
  41c2d4:	and	w1, w1, #0xffdfffff
  41c2d8:	orr	w1, w1, w2
  41c2dc:	str	w1, [x23, #8]
  41c2e0:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c2e4:	bl	402ab0 <__ctype_b_loc@plt>
  41c2e8:	ldr	x0, [x0]
  41c2ec:	ubfiz	x1, x20, #1, #8
  41c2f0:	cmp	w20, #0x5f
  41c2f4:	ldrb	w2, [x23, #10]
  41c2f8:	ldrh	w0, [x0, x1]
  41c2fc:	and	w0, w0, #0x8
  41c300:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c304:	cset	w0, ne  // ne = any
  41c308:	bfi	w2, w0, #6, #1
  41c30c:	strb	w2, [x23, #10]
  41c310:	b	41c29c <_obstack_memory_used@@Base+0x358c>
  41c314:	mov	w0, #0x2                   	// #2
  41c318:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c31c:	cmp	w0, #0x1
  41c320:	b.le	41c354 <_obstack_memory_used@@Base+0x3644>
  41c324:	ldr	x2, [x19, #16]
  41c328:	ldr	w3, [x2, x1, lsl #2]
  41c32c:	add	x2, x2, x1, lsl #2
  41c330:	cmn	w3, #0x1
  41c334:	b.eq	41c634 <_obstack_memory_used@@Base+0x3924>  // b.none
  41c338:	ldr	x3, [x19, #48]
  41c33c:	add	x21, x21, #0x2
  41c340:	cmp	x3, x21
  41c344:	b.eq	41c354 <_obstack_memory_used@@Base+0x3644>  // b.none
  41c348:	ldr	w3, [x2, #4]
  41c34c:	cmn	w3, #0x1
  41c350:	b.eq	41c634 <_obstack_memory_used@@Base+0x3924>  // b.none
  41c354:	ldrb	w3, [x19, #140]
  41c358:	ldr	x2, [x19]
  41c35c:	ldr	x4, [x19, #40]
  41c360:	cbz	w3, 41c628 <_obstack_memory_used@@Base+0x3918>
  41c364:	ldr	x3, [x19, #24]
  41c368:	add	x2, x2, x4
  41c36c:	ldr	x3, [x3, x1, lsl #3]
  41c370:	ldrb	w20, [x2, x3]
  41c374:	tbz	w20, #7, 41c25c <_obstack_memory_used@@Base+0x354c>
  41c378:	b	41c258 <_obstack_memory_used@@Base+0x3548>
  41c37c:	add	x21, x24, x21
  41c380:	tst	x22, #0x800
  41c384:	mov	w0, #0x1                   	// #1
  41c388:	ldurb	w1, [x21, #-1]
  41c38c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  41c390:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c394:	b	41c1d8 <_obstack_memory_used@@Base+0x34c8>
  41c398:	mov	w0, #0x2                   	// #2
  41c39c:	tbnz	w22, #14, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c3a0:	sub	w1, w20, #0x31
  41c3a4:	mov	w2, #0x4                   	// #4
  41c3a8:	strb	w2, [x23, #8]
  41c3ac:	sxtw	x1, w1
  41c3b0:	str	x1, [x23]
  41c3b4:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c3b8:	mov	x0, #0x402                 	// #1026
  41c3bc:	and	x0, x22, x0
  41c3c0:	cmp	x0, #0x2
  41c3c4:	mov	w0, #0x2                   	// #2
  41c3c8:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c3cc:	b	41c0c8 <_obstack_memory_used@@Base+0x33b8>
  41c3d0:	mov	w0, #0x2                   	// #2
  41c3d4:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c3d8:	mov	w1, #0xc                   	// #12
  41c3dc:	mov	w2, #0x9                   	// #9
  41c3e0:	str	w2, [x23]
  41c3e4:	strb	w1, [x23, #8]
  41c3e8:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c3ec:	mov	w0, #0x2                   	// #2
  41c3f0:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c3f4:	mov	w1, #0xc                   	// #12
  41c3f8:	mov	w2, #0x6                   	// #6
  41c3fc:	str	w2, [x23]
  41c400:	strb	w1, [x23, #8]
  41c404:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c408:	mov	w0, #0x2                   	// #2
  41c40c:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c410:	mov	w1, #0x20                  	// #32
  41c414:	strb	w1, [x23, #8]
  41c418:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c41c:	mov	w0, #0x2                   	// #2
  41c420:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c424:	mov	w1, #0x22                  	// #34
  41c428:	strb	w1, [x23, #8]
  41c42c:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c430:	mov	w0, #0x2                   	// #2
  41c434:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c438:	mov	w1, #0xc                   	// #12
  41c43c:	mov	w2, #0x100                 	// #256
  41c440:	str	w2, [x23]
  41c444:	strb	w1, [x23, #8]
  41c448:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c44c:	mov	w0, #0x2                   	// #2
  41c450:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c454:	mov	w1, #0xc                   	// #12
  41c458:	mov	w2, #0x40                  	// #64
  41c45c:	str	w2, [x23]
  41c460:	strb	w1, [x23, #8]
  41c464:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c468:	mov	w0, #0x2                   	// #2
  41c46c:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c470:	mov	w1, #0x21                  	// #33
  41c474:	strb	w1, [x23, #8]
  41c478:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c47c:	mov	w0, #0x2                   	// #2
  41c480:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c484:	mov	w1, #0x23                  	// #35
  41c488:	strb	w1, [x23, #8]
  41c48c:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c490:	mov	w0, #0x2                   	// #2
  41c494:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c498:	mov	w1, #0xc                   	// #12
  41c49c:	mov	w2, #0x200                 	// #512
  41c4a0:	str	w2, [x23]
  41c4a4:	strb	w1, [x23, #8]
  41c4a8:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c4ac:	mov	x0, #0x402                 	// #1026
  41c4b0:	and	x0, x22, x0
  41c4b4:	cmp	x0, #0x2
  41c4b8:	mov	w0, #0x2                   	// #2
  41c4bc:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c4c0:	b	41c224 <_obstack_memory_used@@Base+0x3514>
  41c4c4:	mov	x1, #0x8400                	// #33792
  41c4c8:	mov	w0, #0x2                   	// #2
  41c4cc:	tst	x22, x1
  41c4d0:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c4d4:	mov	w1, #0xa                   	// #10
  41c4d8:	strb	w1, [x23, #8]
  41c4dc:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c4e0:	mov	x0, #0x1200                	// #4608
  41c4e4:	and	x0, x22, x0
  41c4e8:	cmp	x0, #0x200
  41c4ec:	mov	w0, #0x2                   	// #2
  41c4f0:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c4f4:	nop
  41c4f8:	mov	w1, #0x17                  	// #23
  41c4fc:	strb	w1, [x23, #8]
  41c500:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c504:	mov	x0, #0x1200                	// #4608
  41c508:	and	x0, x22, x0
  41c50c:	cmp	x0, #0x200
  41c510:	mov	w0, #0x2                   	// #2
  41c514:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c518:	b	41c188 <_obstack_memory_used@@Base+0x3478>
  41c51c:	mov	w0, #0x2                   	// #2
  41c520:	tbnz	w22, #13, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c524:	nop
  41c528:	mov	w1, #0x9                   	// #9
  41c52c:	strb	w1, [x23, #8]
  41c530:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c534:	mov	w0, #0x2                   	// #2
  41c538:	tbnz	w22, #13, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c53c:	b	41c1ac <_obstack_memory_used@@Base+0x349c>
  41c540:	mov	w0, #0x2                   	// #2
  41c544:	tbnz	w22, #19, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c548:	mov	w1, #0xc                   	// #12
  41c54c:	mov	w2, #0x80                  	// #128
  41c550:	str	w2, [x23]
  41c554:	strb	w1, [x23, #8]
  41c558:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c55c:	tbnz	w22, #3, 41c5a8 <_obstack_memory_used@@Base+0x3898>
  41c560:	ldr	x0, [x19, #88]
  41c564:	add	x21, x21, #0x1
  41c568:	cmp	x21, x0
  41c56c:	b.eq	41c5a8 <_obstack_memory_used@@Base+0x3898>  // b.none
  41c570:	str	x21, [x19, #72]
  41c574:	mov	x2, x22
  41c578:	mov	x1, x19
  41c57c:	add	x0, sp, #0x50
  41c580:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  41c584:	ldr	x2, [x19, #72]
  41c588:	mov	w0, #0x1                   	// #1
  41c58c:	ldrb	w1, [sp, #88]
  41c590:	sub	x2, x2, #0x1
  41c594:	str	x2, [x19, #72]
  41c598:	sub	w1, w1, #0x9
  41c59c:	and	w1, w1, #0xff
  41c5a0:	cmp	w1, w0
  41c5a4:	b.hi	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.pmore
  41c5a8:	mov	w1, #0xc                   	// #12
  41c5ac:	mov	w2, #0x20                  	// #32
  41c5b0:	mov	w0, #0x1                   	// #1
  41c5b4:	str	w2, [x23]
  41c5b8:	strb	w1, [x23, #8]
  41c5bc:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c5c0:	mov	x1, #0x1200                	// #4608
  41c5c4:	mov	w0, #0x1                   	// #1
  41c5c8:	bics	xzr, x1, x22
  41c5cc:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x33c0>  // b.any
  41c5d0:	b	41c4f8 <_obstack_memory_used@@Base+0x37e8>
  41c5d4:	mov	x0, #0x8400                	// #33792
  41c5d8:	and	x0, x22, x0
  41c5dc:	cmp	x0, #0x8, lsl #12
  41c5e0:	b.eq	41c1fc <_obstack_memory_used@@Base+0x34ec>  // b.none
  41c5e4:	mov	w0, #0x1                   	// #1
  41c5e8:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c5ec:	mov	w0, #0x1                   	// #1
  41c5f0:	tbz	w22, #13, 41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c5f4:	b	41c528 <_obstack_memory_used@@Base+0x3818>
  41c5f8:	mov	w1, #0xb                   	// #11
  41c5fc:	mov	w0, #0x1                   	// #1
  41c600:	strb	w1, [x23, #8]
  41c604:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c608:	mov	w1, #0x5                   	// #5
  41c60c:	mov	w0, #0x1                   	// #1
  41c610:	strb	w1, [x23, #8]
  41c614:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c618:	mov	w1, #0x14                  	// #20
  41c61c:	mov	w0, #0x1                   	// #1
  41c620:	strb	w1, [x23, #8]
  41c624:	b	41c0d0 <_obstack_memory_used@@Base+0x33c0>
  41c628:	add	x2, x2, x1
  41c62c:	ldrb	w20, [x2, x4]
  41c630:	b	41c25c <_obstack_memory_used@@Base+0x354c>
  41c634:	ldrb	w20, [x24, x1]
  41c638:	mov	w0, #0x1                   	// #1
  41c63c:	strb	w20, [x23]
  41c640:	strb	w0, [x23, #8]
  41c644:	b	41c278 <_obstack_memory_used@@Base+0x3568>
  41c648:	mov	x8, x2
  41c64c:	ldr	w2, [x1, #144]
  41c650:	mov	x10, x0
  41c654:	and	w5, w5, #0xff
  41c658:	cmp	w2, #0x1
  41c65c:	ldr	x7, [x1, #72]
  41c660:	b.eq	41c6a0 <_obstack_memory_used@@Base+0x3990>  // b.none
  41c664:	ldr	x2, [x1, #48]
  41c668:	add	x6, x7, #0x1
  41c66c:	cmp	x6, x2
  41c670:	b.ge	41c6a0 <_obstack_memory_used@@Base+0x3990>  // b.tcont
  41c674:	ldr	x9, [x1, #16]
  41c678:	b	41c688 <_obstack_memory_used@@Base+0x3978>
  41c67c:	add	x6, x6, #0x1
  41c680:	cmp	x6, x2
  41c684:	b.eq	41c78c <_obstack_memory_used@@Base+0x3a7c>  // b.none
  41c688:	ldr	w0, [x9, x6, lsl #2]
  41c68c:	sub	w11, w6, w7
  41c690:	cmn	w0, #0x1
  41c694:	b.eq	41c67c <_obstack_memory_used@@Base+0x396c>  // b.none
  41c698:	cmp	w11, #0x1
  41c69c:	b.ne	41c78c <_obstack_memory_used@@Base+0x3a7c>  // b.any
  41c6a0:	ldrb	w6, [x8, #8]
  41c6a4:	add	x3, x7, w3, sxtw
  41c6a8:	str	x3, [x1, #72]
  41c6ac:	and	w0, w6, #0xfffffffb
  41c6b0:	cmp	w0, #0x1a
  41c6b4:	ccmp	w6, #0x1c, #0x4, ne  // ne = any
  41c6b8:	b.eq	41c6dc <_obstack_memory_used@@Base+0x39cc>  // b.none
  41c6bc:	cmp	w5, #0x0
  41c6c0:	ccmp	w6, #0x16, #0x0, eq  // eq = none
  41c6c4:	b.eq	41c84c <_obstack_memory_used@@Base+0x3b3c>  // b.none
  41c6c8:	ldrb	w1, [x8]
  41c6cc:	mov	w0, #0x0                   	// #0
  41c6d0:	str	wzr, [x10]
  41c6d4:	strb	w1, [x10, #8]
  41c6d8:	ret
  41c6dc:	ldr	x7, [x1, #104]
  41c6e0:	cmp	x3, x7
  41c6e4:	b.ge	41c784 <_obstack_memory_used@@Base+0x3a74>  // b.tcont
  41c6e8:	ldrb	w9, [x8]
  41c6ec:	mov	x2, #0x0                   	// #0
  41c6f0:	b	41c714 <_obstack_memory_used@@Base+0x3a04>
  41c6f4:	ldr	x0, [x10, #8]
  41c6f8:	strb	w5, [x0, x2]
  41c6fc:	add	x2, x2, #0x1
  41c700:	cmp	x2, #0x20
  41c704:	b.eq	41c784 <_obstack_memory_used@@Base+0x3a74>  // b.none
  41c708:	ldrb	w6, [x8, #8]
  41c70c:	ldr	x3, [x1, #72]
  41c710:	ldr	x7, [x1, #104]
  41c714:	cmp	w6, #0x1e
  41c718:	add	x4, x3, #0x1
  41c71c:	mov	w6, w2
  41c720:	b.eq	41c7a8 <_obstack_memory_used@@Base+0x3a98>  // b.none
  41c724:	ldr	x0, [x1, #8]
  41c728:	str	x4, [x1, #72]
  41c72c:	ldrb	w5, [x0, x3]
  41c730:	cmp	x7, x4
  41c734:	b.le	41c784 <_obstack_memory_used@@Base+0x3a74>
  41c738:	cmp	w9, w5
  41c73c:	b.ne	41c6f4 <_obstack_memory_used@@Base+0x39e4>  // b.any
  41c740:	ldr	x0, [x1, #8]
  41c744:	ldrb	w0, [x0, x4]
  41c748:	cmp	w0, #0x5d
  41c74c:	b.ne	41c6f4 <_obstack_memory_used@@Base+0x39e4>  // b.any
  41c750:	ldr	x0, [x10, #8]
  41c754:	add	x4, x4, #0x1
  41c758:	str	x4, [x1, #72]
  41c75c:	strb	wzr, [x0, w6, sxtw]
  41c760:	ldrb	w0, [x8, #8]
  41c764:	cmp	w0, #0x1c
  41c768:	b.eq	41c8a0 <_obstack_memory_used@@Base+0x3b90>  // b.none
  41c76c:	cmp	w0, #0x1e
  41c770:	b.eq	41c890 <_obstack_memory_used@@Base+0x3b80>  // b.none
  41c774:	cmp	w0, #0x1a
  41c778:	mov	w0, #0x0                   	// #0
  41c77c:	b.eq	41c884 <_obstack_memory_used@@Base+0x3b74>  // b.none
  41c780:	ret
  41c784:	mov	w0, #0x7                   	// #7
  41c788:	ret
  41c78c:	mov	w0, #0x1                   	// #1
  41c790:	str	w0, [x10]
  41c794:	mov	w0, #0x0                   	// #0
  41c798:	ldr	w2, [x9, x7, lsl #2]
  41c79c:	str	w2, [x10, #8]
  41c7a0:	str	x6, [x1, #72]
  41c7a4:	ret
  41c7a8:	ldrb	w0, [x1, #139]
  41c7ac:	cbz	w0, 41c724 <_obstack_memory_used@@Base+0x3a14>
  41c7b0:	ldrb	w0, [x1, #140]
  41c7b4:	cbz	w0, 41c834 <_obstack_memory_used@@Base+0x3b24>
  41c7b8:	ldr	x11, [x1, #48]
  41c7bc:	cmp	x3, x11
  41c7c0:	b.eq	41c7d4 <_obstack_memory_used@@Base+0x3ac4>  // b.none
  41c7c4:	ldr	x0, [x1, #16]
  41c7c8:	ldr	w0, [x0, x3, lsl #2]
  41c7cc:	cmn	w0, #0x1
  41c7d0:	b.eq	41c724 <_obstack_memory_used@@Base+0x3a14>  // b.none
  41c7d4:	ldr	x5, [x1, #24]
  41c7d8:	ldr	x0, [x1]
  41c7dc:	ldr	x12, [x5, x3, lsl #3]
  41c7e0:	ldr	x5, [x1, #40]
  41c7e4:	add	x0, x0, x12
  41c7e8:	ldrb	w5, [x0, x5]
  41c7ec:	tbnz	w5, #7, 41c724 <_obstack_memory_used@@Base+0x3a14>
  41c7f0:	ldr	w0, [x1, #144]
  41c7f4:	cmp	w0, #0x1
  41c7f8:	b.eq	41c82c <_obstack_memory_used@@Base+0x3b1c>  // b.none
  41c7fc:	cmp	x11, x4
  41c800:	b.le	41c82c <_obstack_memory_used@@Base+0x3b1c>
  41c804:	ldr	x12, [x1, #16]
  41c808:	b	41c814 <_obstack_memory_used@@Base+0x3b04>
  41c80c:	cmp	x11, x4
  41c810:	b.eq	41c82c <_obstack_memory_used@@Base+0x3b1c>  // b.none
  41c814:	ldr	w0, [x12, x4, lsl #2]
  41c818:	sub	w13, w4, w3
  41c81c:	add	x4, x4, #0x1
  41c820:	cmn	w0, #0x1
  41c824:	b.eq	41c80c <_obstack_memory_used@@Base+0x3afc>  // b.none
  41c828:	add	x4, x3, w13, sxtw
  41c82c:	str	x4, [x1, #72]
  41c830:	b	41c730 <_obstack_memory_used@@Base+0x3a20>
  41c834:	ldr	x0, [x1]
  41c838:	str	x4, [x1, #72]
  41c83c:	ldr	x5, [x1, #40]
  41c840:	add	x3, x0, x3
  41c844:	ldrb	w5, [x3, x5]
  41c848:	b	41c730 <_obstack_memory_used@@Base+0x3a20>
  41c84c:	stp	x29, x30, [sp, #-32]!
  41c850:	mov	x2, x4
  41c854:	mov	x29, sp
  41c858:	add	x0, sp, #0x10
  41c85c:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  41c860:	ldrb	w0, [sp, #24]
  41c864:	cmp	w0, #0x15
  41c868:	b.ne	41c8b0 <_obstack_memory_used@@Base+0x3ba0>  // b.any
  41c86c:	ldrb	w1, [x8]
  41c870:	mov	w0, #0x0                   	// #0
  41c874:	str	wzr, [x10]
  41c878:	strb	w1, [x10, #8]
  41c87c:	ldp	x29, x30, [sp], #32
  41c880:	ret
  41c884:	mov	w1, #0x3                   	// #3
  41c888:	str	w1, [x10]
  41c88c:	ret
  41c890:	mov	w1, #0x4                   	// #4
  41c894:	mov	w0, #0x0                   	// #0
  41c898:	str	w1, [x10]
  41c89c:	ret
  41c8a0:	mov	w1, #0x2                   	// #2
  41c8a4:	mov	w0, #0x0                   	// #0
  41c8a8:	str	w1, [x10]
  41c8ac:	ret
  41c8b0:	mov	w0, #0xb                   	// #11
  41c8b4:	b	41c87c <_obstack_memory_used@@Base+0x3b6c>
  41c8b8:	stp	x29, x30, [sp, #-96]!
  41c8bc:	mov	x10, x0
  41c8c0:	mov	x18, x4
  41c8c4:	mov	x29, sp
  41c8c8:	ldr	x13, [x0, #200]
  41c8cc:	mov	x15, x6
  41c8d0:	mov	x11, #0x0                   	// #0
  41c8d4:	stp	x19, x20, [sp, #16]
  41c8d8:	mov	x9, x13
  41c8dc:	mov	x20, x1
  41c8e0:	mov	x19, x2
  41c8e4:	stp	x21, x22, [sp, #32]
  41c8e8:	mov	x21, x3
  41c8ec:	mov	x22, x5
  41c8f0:	stp	x23, x24, [sp, #48]
  41c8f4:	ldr	x23, [x0, #152]
  41c8f8:	b	41c91c <_obstack_memory_used@@Base+0x3c0c>
  41c8fc:	asr	x7, x7, #1
  41c900:	ldr	x0, [x10, #216]
  41c904:	add	x8, x7, x7, lsl #2
  41c908:	add	x8, x0, x8, lsl #3
  41c90c:	ldr	x0, [x8, #8]
  41c910:	cmp	x0, x18
  41c914:	b.lt	41ca6c <_obstack_memory_used@@Base+0x3d5c>  // b.tstop
  41c918:	mov	x9, x7
  41c91c:	add	x7, x9, x11
  41c920:	cmp	x9, x11
  41c924:	b.gt	41c8fc <_obstack_memory_used@@Base+0x3bec>
  41c928:	cmp	x13, x11
  41c92c:	b.le	41cb24 <_obstack_memory_used@@Base+0x3e14>
  41c930:	ldr	x1, [x10, #216]
  41c934:	add	x0, x11, x11, lsl #2
  41c938:	add	x0, x1, x0, lsl #3
  41c93c:	ldr	x0, [x0, #8]
  41c940:	cmp	x18, x0
  41c944:	csinv	x11, x11, xzr, eq  // eq = none
  41c948:	mov	x9, x13
  41c94c:	mov	x12, #0x0                   	// #0
  41c950:	b	41c974 <_obstack_memory_used@@Base+0x3c64>
  41c954:	asr	x7, x7, #1
  41c958:	ldr	x0, [x10, #216]
  41c95c:	add	x8, x7, x7, lsl #2
  41c960:	add	x8, x0, x8, lsl #3
  41c964:	ldr	x0, [x8, #8]
  41c968:	cmp	x0, x15
  41c96c:	b.lt	41ca74 <_obstack_memory_used@@Base+0x3d64>  // b.tstop
  41c970:	mov	x9, x7
  41c974:	add	x7, x9, x12
  41c978:	cmp	x9, x12
  41c97c:	b.gt	41c954 <_obstack_memory_used@@Base+0x3c44>
  41c980:	cmp	x13, x12
  41c984:	b.le	41cb2c <_obstack_memory_used@@Base+0x3e1c>
  41c988:	ldr	x1, [x10, #216]
  41c98c:	add	x0, x12, x12, lsl #2
  41c990:	add	x0, x1, x0, lsl #3
  41c994:	ldr	x0, [x0, #8]
  41c998:	cmp	x15, x0
  41c99c:	csinv	x12, x12, xzr, eq  // eq = none
  41c9a0:	ldr	x4, [x20]
  41c9a4:	mov	x24, #0x0                   	// #0
  41c9a8:	cmp	x4, #0x0
  41c9ac:	b.le	41cab4 <_obstack_memory_used@@Base+0x3da4>
  41c9b0:	stp	x25, x26, [sp, #64]
  41c9b4:	str	x27, [sp, #80]
  41c9b8:	ldr	x0, [x19]
  41c9bc:	lsl	x26, x24, #3
  41c9c0:	ldr	x2, [x10, #216]
  41c9c4:	ldr	x0, [x0, x24, lsl #3]
  41c9c8:	ldr	x5, [x23]
  41c9cc:	add	x0, x0, x0, lsl #2
  41c9d0:	add	x1, x2, x0, lsl #3
  41c9d4:	ldr	x0, [x2, x0, lsl #3]
  41c9d8:	ldr	x3, [x1, #16]
  41c9dc:	lsl	x0, x0, #4
  41c9e0:	cmp	x18, x3
  41c9e4:	ldr	x27, [x5, x0]
  41c9e8:	b.lt	41cb08 <_obstack_memory_used@@Base+0x3df8>  // b.tstop
  41c9ec:	ldr	x4, [x1, #24]
  41c9f0:	cmp	x18, x4
  41c9f4:	b.gt	41cb00 <_obstack_memory_used@@Base+0x3df0>
  41c9f8:	cmp	x18, x3
  41c9fc:	cset	w1, eq  // eq = none
  41ca00:	cmp	x18, x4
  41ca04:	b.eq	41cabc <_obstack_memory_used@@Base+0x3dac>  // b.none
  41ca08:	cmp	x18, x3
  41ca0c:	mov	w25, #0x0                   	// #0
  41ca10:	b.eq	41cac0 <_obstack_memory_used@@Base+0x3db0>  // b.none
  41ca14:	cmp	x15, x3
  41ca18:	b.lt	41ca4c <_obstack_memory_used@@Base+0x3d3c>  // b.tstop
  41ca1c:	cmp	x15, x4
  41ca20:	mov	w0, #0x1                   	// #1
  41ca24:	b.gt	41ca44 <_obstack_memory_used@@Base+0x3d34>
  41ca28:	cmp	x15, x3
  41ca2c:	cset	w1, eq  // eq = none
  41ca30:	cmp	x15, x4
  41ca34:	b.eq	41ca7c <_obstack_memory_used@@Base+0x3d6c>  // b.none
  41ca38:	cmp	x15, x3
  41ca3c:	mov	w0, #0x0                   	// #0
  41ca40:	b.eq	41ca80 <_obstack_memory_used@@Base+0x3d70>  // b.none
  41ca44:	cmp	w0, w25
  41ca48:	b.eq	41ca9c <_obstack_memory_used@@Base+0x3d8c>  // b.none
  41ca4c:	ldp	x25, x26, [sp, #64]
  41ca50:	mov	w0, #0x1                   	// #1
  41ca54:	ldr	x27, [sp, #80]
  41ca58:	ldp	x19, x20, [sp, #16]
  41ca5c:	ldp	x21, x22, [sp, #32]
  41ca60:	ldp	x23, x24, [sp, #48]
  41ca64:	ldp	x29, x30, [sp], #96
  41ca68:	ret
  41ca6c:	add	x11, x7, #0x1
  41ca70:	b	41c91c <_obstack_memory_used@@Base+0x3c0c>
  41ca74:	add	x12, x7, #0x1
  41ca78:	b	41c974 <_obstack_memory_used@@Base+0x3c64>
  41ca7c:	orr	w1, w1, #0x2
  41ca80:	mov	x2, x27
  41ca84:	mov	x4, x12
  41ca88:	mov	x3, x22
  41ca8c:	mov	x0, x10
  41ca90:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  41ca94:	cmp	w0, w25
  41ca98:	b.ne	41ca4c <_obstack_memory_used@@Base+0x3d3c>  // b.any
  41ca9c:	ldr	x4, [x20]
  41caa0:	add	x24, x24, #0x1
  41caa4:	cmp	x24, x4
  41caa8:	b.lt	41c9b8 <_obstack_memory_used@@Base+0x3ca8>  // b.tstop
  41caac:	ldp	x25, x26, [sp, #64]
  41cab0:	ldr	x27, [sp, #80]
  41cab4:	mov	w0, #0x0                   	// #0
  41cab8:	b	41ca58 <_obstack_memory_used@@Base+0x3d48>
  41cabc:	orr	w1, w1, #0x2
  41cac0:	mov	x3, x21
  41cac4:	mov	x2, x27
  41cac8:	mov	x4, x11
  41cacc:	mov	x0, x10
  41cad0:	bl	418ea8 <_obstack_memory_used@@Base+0x198>
  41cad4:	mov	w25, w0
  41cad8:	ldr	x2, [x19]
  41cadc:	ldr	x1, [x10, #216]
  41cae0:	ldr	x0, [x2, x26]
  41cae4:	add	x0, x0, x0, lsl #2
  41cae8:	add	x0, x1, x0, lsl #3
  41caec:	ldr	x3, [x0, #16]
  41caf0:	cmp	x15, x3
  41caf4:	b.lt	41cb34 <_obstack_memory_used@@Base+0x3e24>  // b.tstop
  41caf8:	ldr	x4, [x0, #24]
  41cafc:	b	41ca1c <_obstack_memory_used@@Base+0x3d0c>
  41cb00:	mov	w25, #0x1                   	// #1
  41cb04:	b	41ca14 <_obstack_memory_used@@Base+0x3d04>
  41cb08:	cmp	x15, x3
  41cb0c:	b.lt	41caa0 <_obstack_memory_used@@Base+0x3d90>  // b.tstop
  41cb10:	ldr	x4, [x1, #24]
  41cb14:	cmp	x15, x4
  41cb18:	b.gt	41ca4c <_obstack_memory_used@@Base+0x3d3c>
  41cb1c:	mov	w25, #0xffffffff            	// #-1
  41cb20:	b	41ca28 <_obstack_memory_used@@Base+0x3d18>
  41cb24:	mov	x11, #0xffffffffffffffff    	// #-1
  41cb28:	b	41c948 <_obstack_memory_used@@Base+0x3c38>
  41cb2c:	mov	x12, #0xffffffffffffffff    	// #-1
  41cb30:	b	41c9a0 <_obstack_memory_used@@Base+0x3c90>
  41cb34:	mov	w0, #0xffffffff            	// #-1
  41cb38:	b	41ca44 <_obstack_memory_used@@Base+0x3d34>
  41cb3c:	nop
  41cb40:	lsl	x2, x2, #4
  41cb44:	stp	x29, x30, [sp, #-48]!
  41cb48:	add	x5, x0, x2
  41cb4c:	mov	x29, sp
  41cb50:	stp	x19, x20, [sp, #16]
  41cb54:	ldrb	w6, [x5, #8]
  41cb58:	cmp	w6, #0x7
  41cb5c:	b.eq	41cc88 <_obstack_memory_used@@Base+0x3f78>  // b.none
  41cb60:	ldr	w5, [x3, #144]
  41cb64:	cmp	w5, #0x1
  41cb68:	b.eq	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  41cb6c:	ldr	x8, [x3, #48]
  41cb70:	add	x5, x4, #0x1
  41cb74:	cmp	x8, x5
  41cb78:	b.le	41cbc0 <_obstack_memory_used@@Base+0x3eb0>
  41cb7c:	mov	w19, #0x1                   	// #1
  41cb80:	stp	x21, x22, [sp, #32]
  41cb84:	ldr	x9, [x3, #16]
  41cb88:	b	41cb98 <_obstack_memory_used@@Base+0x3e88>
  41cb8c:	add	w19, w19, #0x1
  41cb90:	cmp	x5, x8
  41cb94:	b.eq	41cbd4 <_obstack_memory_used@@Base+0x3ec4>  // b.none
  41cb98:	ldr	w7, [x9, x5, lsl #2]
  41cb9c:	add	x5, x5, #0x1
  41cba0:	cmn	w7, #0x1
  41cba4:	b.eq	41cb8c <_obstack_memory_used@@Base+0x3e7c>  // b.none
  41cba8:	cmp	w6, #0x5
  41cbac:	b.eq	41cc74 <_obstack_memory_used@@Base+0x3f64>  // b.none
  41cbb0:	cmp	w6, #0x6
  41cbb4:	ccmp	w19, #0x1, #0x4, eq  // eq = none
  41cbb8:	b.ne	41cc18 <_obstack_memory_used@@Base+0x3f08>  // b.any
  41cbbc:	ldp	x21, x22, [sp, #32]
  41cbc0:	mov	w19, #0x0                   	// #0
  41cbc4:	mov	w0, w19
  41cbc8:	ldp	x19, x20, [sp, #16]
  41cbcc:	ldp	x29, x30, [sp], #48
  41cbd0:	ret
  41cbd4:	cmp	w6, #0x5
  41cbd8:	b.ne	41cbb0 <_obstack_memory_used@@Base+0x3ea0>  // b.any
  41cbdc:	ldr	x0, [x1]
  41cbe0:	tbnz	w0, #6, 41cbf4 <_obstack_memory_used@@Base+0x3ee4>
  41cbe4:	ldr	x1, [x3, #8]
  41cbe8:	ldrb	w1, [x1, x4]
  41cbec:	cmp	w1, #0xa
  41cbf0:	b.eq	41cbbc <_obstack_memory_used@@Base+0x3eac>  // b.none
  41cbf4:	tbz	w0, #7, 41cc04 <_obstack_memory_used@@Base+0x3ef4>
  41cbf8:	ldr	x0, [x3, #8]
  41cbfc:	ldrb	w0, [x0, x4]
  41cc00:	cbz	w0, 41cbbc <_obstack_memory_used@@Base+0x3eac>
  41cc04:	ldp	x21, x22, [sp, #32]
  41cc08:	mov	w0, w19
  41cc0c:	ldp	x19, x20, [sp, #16]
  41cc10:	ldp	x29, x30, [sp], #48
  41cc14:	ret
  41cc18:	ldr	x22, [x0, x2]
  41cc1c:	ldr	x5, [x22, #64]
  41cc20:	ldr	x2, [x22, #40]
  41cc24:	cbnz	x5, 41cc34 <_obstack_memory_used@@Base+0x3f24>
  41cc28:	ldr	x0, [x22, #72]
  41cc2c:	orr	x0, x2, x0
  41cc30:	cbz	x0, 41cde0 <_obstack_memory_used@@Base+0x40d0>
  41cc34:	ldr	w20, [x9, x4, lsl #2]
  41cc38:	cmp	x2, #0x0
  41cc3c:	b.le	41cd64 <_obstack_memory_used@@Base+0x4054>
  41cc40:	mov	x0, #0x0                   	// #0
  41cc44:	ldr	x3, [x22]
  41cc48:	b	41cc54 <_obstack_memory_used@@Base+0x3f44>
  41cc4c:	cmp	x0, x2
  41cc50:	b.eq	41cd64 <_obstack_memory_used@@Base+0x4054>  // b.none
  41cc54:	ldr	w1, [x3, x0, lsl #2]
  41cc58:	add	x0, x0, #0x1
  41cc5c:	cmp	w20, w1
  41cc60:	b.ne	41cc4c <_obstack_memory_used@@Base+0x3f3c>  // b.any
  41cc64:	ldrb	w0, [x22, #32]
  41cc68:	tbnz	w0, #0, 41cbbc <_obstack_memory_used@@Base+0x3eac>
  41cc6c:	ldp	x21, x22, [sp, #32]
  41cc70:	b	41cc08 <_obstack_memory_used@@Base+0x3ef8>
  41cc74:	cmp	w19, #0x1
  41cc78:	b.eq	41cbbc <_obstack_memory_used@@Base+0x3eac>  // b.none
  41cc7c:	ldr	x0, [x1]
  41cc80:	tbnz	w0, #6, 41cbf4 <_obstack_memory_used@@Base+0x3ee4>
  41cc84:	b	41cbe4 <_obstack_memory_used@@Base+0x3ed4>
  41cc88:	ldr	x1, [x3, #8]
  41cc8c:	ldrb	w0, [x1, x4]
  41cc90:	cmp	w0, #0xc1
  41cc94:	b.ls	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  41cc98:	ldr	x3, [x3, #88]
  41cc9c:	add	x2, x4, #0x1
  41cca0:	cmp	x2, x3
  41cca4:	b.ge	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.tcont
  41cca8:	add	x6, x1, x4
  41ccac:	cmp	w0, #0xdf
  41ccb0:	ldrb	w5, [x6, #1]
  41ccb4:	b.ls	41ce14 <_obstack_memory_used@@Base+0x4104>  // b.plast
  41ccb8:	cmp	w0, #0xef
  41ccbc:	b.hi	41cdf0 <_obstack_memory_used@@Base+0x40e0>  // b.pmore
  41ccc0:	cmp	w0, #0xe0
  41ccc4:	mov	w0, #0x9f                  	// #159
  41ccc8:	ccmp	w5, w0, #0x2, eq  // eq = none
  41cccc:	b.ls	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  41ccd0:	mov	x0, #0x3                   	// #3
  41ccd4:	mov	w19, w0
  41ccd8:	add	x4, x4, x0
  41ccdc:	cmp	x3, x4
  41cce0:	b.lt	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.tstop
  41cce4:	ldrb	w1, [x1, x2]
  41cce8:	sub	w1, w1, #0x80
  41ccec:	and	w1, w1, #0xff
  41ccf0:	cmp	w1, #0x3f
  41ccf4:	b.hi	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  41ccf8:	ldrb	w1, [x6, #2]
  41ccfc:	sub	w1, w1, #0x80
  41cd00:	and	w1, w1, #0xff
  41cd04:	cmp	w1, #0x3f
  41cd08:	b.hi	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  41cd0c:	cmp	x0, #0x3
  41cd10:	b.eq	41cbc4 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  41cd14:	ldrb	w1, [x6, #3]
  41cd18:	sub	w1, w1, #0x80
  41cd1c:	and	w1, w1, #0xff
  41cd20:	cmp	w1, #0x3f
  41cd24:	b.hi	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  41cd28:	cmp	x0, #0x4
  41cd2c:	b.eq	41cbc4 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  41cd30:	ldrb	w1, [x6, #4]
  41cd34:	sub	w1, w1, #0x80
  41cd38:	and	w1, w1, #0xff
  41cd3c:	cmp	w1, #0x3f
  41cd40:	b.hi	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  41cd44:	cmp	x0, #0x6
  41cd48:	b.ne	41cbc4 <_obstack_memory_used@@Base+0x3eb4>  // b.any
  41cd4c:	ldrb	w0, [x6, #5]
  41cd50:	sub	w0, w0, #0x80
  41cd54:	and	w0, w0, #0xff
  41cd58:	cmp	w0, #0x3f
  41cd5c:	b.ls	41cbc4 <_obstack_memory_used@@Base+0x3eb4>  // b.plast
  41cd60:	b	41cbc0 <_obstack_memory_used@@Base+0x3eb0>
  41cd64:	ldr	x0, [x22, #72]
  41cd68:	cmp	x0, #0x0
  41cd6c:	b.le	41cda4 <_obstack_memory_used@@Base+0x4094>
  41cd70:	mov	x21, #0x0                   	// #0
  41cd74:	b	41cd84 <_obstack_memory_used@@Base+0x4074>
  41cd78:	ldr	x0, [x22, #72]
  41cd7c:	cmp	x21, x0
  41cd80:	b.ge	41cda0 <_obstack_memory_used@@Base+0x4090>  // b.tcont
  41cd84:	ldr	x1, [x22, #24]
  41cd88:	mov	w0, w20
  41cd8c:	ldr	x1, [x1, x21, lsl #3]
  41cd90:	add	x21, x21, #0x1
  41cd94:	bl	4027f0 <iswctype@plt>
  41cd98:	cbz	w0, 41cd78 <_obstack_memory_used@@Base+0x4068>
  41cd9c:	b	41cc64 <_obstack_memory_used@@Base+0x3f54>
  41cda0:	ldr	x5, [x22, #64]
  41cda4:	cmp	x5, #0x0
  41cda8:	b.le	41cde0 <_obstack_memory_used@@Base+0x40d0>
  41cdac:	ldr	x2, [x22, #8]
  41cdb0:	mov	x0, #0x0                   	// #0
  41cdb4:	nop
  41cdb8:	ldr	w1, [x2, x0, lsl #2]
  41cdbc:	cmp	w20, w1
  41cdc0:	b.cc	41cdd4 <_obstack_memory_used@@Base+0x40c4>  // b.lo, b.ul, b.last
  41cdc4:	ldr	x1, [x22, #16]
  41cdc8:	ldr	w1, [x1, x0, lsl #2]
  41cdcc:	cmp	w20, w1
  41cdd0:	b.ls	41cc64 <_obstack_memory_used@@Base+0x3f54>  // b.plast
  41cdd4:	add	x0, x0, #0x1
  41cdd8:	cmp	x0, x5
  41cddc:	b.ne	41cdb8 <_obstack_memory_used@@Base+0x40a8>  // b.any
  41cde0:	ldrb	w0, [x22, #32]
  41cde4:	tbz	w0, #0, 41cbbc <_obstack_memory_used@@Base+0x3eac>
  41cde8:	ldp	x21, x22, [sp, #32]
  41cdec:	b	41cc08 <_obstack_memory_used@@Base+0x3ef8>
  41cdf0:	cmp	w0, #0xf7
  41cdf4:	b.hi	41ce2c <_obstack_memory_used@@Base+0x411c>  // b.pmore
  41cdf8:	cmp	w0, #0xf0
  41cdfc:	mov	w0, #0x8f                  	// #143
  41ce00:	ccmp	w5, w0, #0x2, eq  // eq = none
  41ce04:	b.ls	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  41ce08:	mov	x0, #0x4                   	// #4
  41ce0c:	mov	w19, w0
  41ce10:	b	41ccd8 <_obstack_memory_used@@Base+0x3fc8>
  41ce14:	sub	w0, w5, #0x80
  41ce18:	mov	w19, #0x2                   	// #2
  41ce1c:	and	w0, w0, #0xff
  41ce20:	cmp	w0, #0x3f
  41ce24:	b.ls	41cbc4 <_obstack_memory_used@@Base+0x3eb4>  // b.plast
  41ce28:	b	41cbc0 <_obstack_memory_used@@Base+0x3eb0>
  41ce2c:	cmp	w0, #0xfb
  41ce30:	b.hi	41ce50 <_obstack_memory_used@@Base+0x4140>  // b.pmore
  41ce34:	cmp	w0, #0xf8
  41ce38:	mov	w0, #0x87                  	// #135
  41ce3c:	ccmp	w5, w0, #0x2, eq  // eq = none
  41ce40:	b.ls	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  41ce44:	mov	x0, #0x5                   	// #5
  41ce48:	mov	w19, w0
  41ce4c:	b	41ccd8 <_obstack_memory_used@@Base+0x3fc8>
  41ce50:	cmp	w0, #0xfd
  41ce54:	b.hi	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.pmore
  41ce58:	cmp	w0, #0xfc
  41ce5c:	mov	w0, #0x83                  	// #131
  41ce60:	ccmp	w5, w0, #0x2, eq  // eq = none
  41ce64:	b.ls	41cbc0 <_obstack_memory_used@@Base+0x3eb0>  // b.plast
  41ce68:	mov	x0, #0x6                   	// #6
  41ce6c:	mov	w19, w0
  41ce70:	b	41ccd8 <_obstack_memory_used@@Base+0x3fc8>
  41ce74:	nop
  41ce78:	stp	x29, x30, [sp, #-48]!
  41ce7c:	mov	x29, sp
  41ce80:	str	x21, [sp, #32]
  41ce84:	mov	w21, #0xff                  	// #255
  41ce88:	movk	w21, #0x4, lsl #16
  41ce8c:	stp	x19, x20, [sp, #16]
  41ce90:	mov	x19, x0
  41ce94:	ldr	x0, [x0, #8]
  41ce98:	cbnz	x0, 41ce90 <_obstack_memory_used@@Base+0x4180>
  41ce9c:	ldr	x0, [x19, #16]
  41cea0:	cbnz	x0, 41ce90 <_obstack_memory_used@@Base+0x4180>
  41cea4:	ldr	w0, [x19, #48]
  41cea8:	and	w0, w0, w21
  41ceac:	cmp	w0, #0x6
  41ceb0:	b.eq	41ceec <_obstack_memory_used@@Base+0x41dc>  // b.none
  41ceb4:	nop
  41ceb8:	cmp	w0, #0x3
  41cebc:	b.eq	41cf34 <_obstack_memory_used@@Base+0x4224>  // b.none
  41cec0:	ldr	x1, [x19]
  41cec4:	cbz	x1, 41cf20 <_obstack_memory_used@@Base+0x4210>
  41cec8:	ldr	x0, [x1, #16]
  41cecc:	cmp	x0, #0x0
  41ced0:	ccmp	x19, x0, #0x4, ne  // ne = any
  41ced4:	mov	x19, x1
  41ced8:	b.ne	41ce90 <_obstack_memory_used@@Base+0x4180>  // b.any
  41cedc:	ldr	w0, [x19, #48]
  41cee0:	and	w0, w0, w21
  41cee4:	cmp	w0, #0x6
  41cee8:	b.ne	41ceb8 <_obstack_memory_used@@Base+0x41a8>  // b.any
  41ceec:	ldr	x20, [x19, #40]
  41cef0:	ldr	x0, [x20]
  41cef4:	bl	402ae0 <free@plt>
  41cef8:	ldr	x0, [x20, #8]
  41cefc:	bl	402ae0 <free@plt>
  41cf00:	ldr	x0, [x20, #16]
  41cf04:	bl	402ae0 <free@plt>
  41cf08:	ldr	x0, [x20, #24]
  41cf0c:	bl	402ae0 <free@plt>
  41cf10:	mov	x0, x20
  41cf14:	bl	402ae0 <free@plt>
  41cf18:	ldr	x1, [x19]
  41cf1c:	cbnz	x1, 41cec8 <_obstack_memory_used@@Base+0x41b8>
  41cf20:	mov	w0, #0x0                   	// #0
  41cf24:	ldp	x19, x20, [sp, #16]
  41cf28:	ldr	x21, [sp, #32]
  41cf2c:	ldp	x29, x30, [sp], #48
  41cf30:	ret
  41cf34:	ldr	x0, [x19, #40]
  41cf38:	bl	402ae0 <free@plt>
  41cf3c:	b	41cec0 <_obstack_memory_used@@Base+0x41b0>
  41cf40:	stp	x29, x30, [sp, #-32]!
  41cf44:	mov	x29, sp
  41cf48:	ldr	w0, [x1, #48]
  41cf4c:	and	w0, w0, #0x7ffff
  41cf50:	and	w0, w0, #0xfffc00ff
  41cf54:	cmp	w0, #0x6
  41cf58:	b.eq	41cf70 <_obstack_memory_used@@Base+0x4260>  // b.none
  41cf5c:	cmp	w0, #0x3
  41cf60:	b.eq	41cfb0 <_obstack_memory_used@@Base+0x42a0>  // b.none
  41cf64:	mov	w0, #0x0                   	// #0
  41cf68:	ldp	x29, x30, [sp], #32
  41cf6c:	ret
  41cf70:	str	x19, [sp, #16]
  41cf74:	ldr	x19, [x1, #40]
  41cf78:	ldr	x0, [x19]
  41cf7c:	bl	402ae0 <free@plt>
  41cf80:	ldr	x0, [x19, #8]
  41cf84:	bl	402ae0 <free@plt>
  41cf88:	ldr	x0, [x19, #16]
  41cf8c:	bl	402ae0 <free@plt>
  41cf90:	ldr	x0, [x19, #24]
  41cf94:	bl	402ae0 <free@plt>
  41cf98:	mov	x0, x19
  41cf9c:	bl	402ae0 <free@plt>
  41cfa0:	mov	w0, #0x0                   	// #0
  41cfa4:	ldr	x19, [sp, #16]
  41cfa8:	ldp	x29, x30, [sp], #32
  41cfac:	ret
  41cfb0:	ldr	x0, [x1, #40]
  41cfb4:	bl	402ae0 <free@plt>
  41cfb8:	mov	w0, #0x0                   	// #0
  41cfbc:	ldp	x29, x30, [sp], #32
  41cfc0:	ret
  41cfc4:	nop
  41cfc8:	stp	x29, x30, [sp, #-64]!
  41cfcc:	mov	x29, sp
  41cfd0:	ldr	x1, [x0]
  41cfd4:	stp	x19, x20, [sp, #16]
  41cfd8:	stp	x21, x22, [sp, #32]
  41cfdc:	mov	x22, x0
  41cfe0:	stp	x23, x24, [sp, #48]
  41cfe4:	cbz	x1, 41d070 <_obstack_memory_used@@Base+0x4360>
  41cfe8:	ldr	x4, [x0, #16]
  41cfec:	cbz	x4, 41d070 <_obstack_memory_used@@Base+0x4360>
  41cff0:	mov	w21, #0xff                  	// #255
  41cff4:	mov	x19, #0x0                   	// #0
  41cff8:	movk	w21, #0x4, lsl #16
  41cffc:	b	41d018 <_obstack_memory_used@@Base+0x4308>
  41d000:	cmp	w0, #0x3
  41d004:	b.eq	41d210 <_obstack_memory_used@@Base+0x4500>  // b.none
  41d008:	add	x19, x19, #0x1
  41d00c:	cmp	x19, x4
  41d010:	b.cs	41d070 <_obstack_memory_used@@Base+0x4360>  // b.hs, b.nlast
  41d014:	ldr	x1, [x22]
  41d018:	lsl	x2, x19, #4
  41d01c:	add	x3, x1, x2
  41d020:	ldr	w0, [x3, #8]
  41d024:	and	w0, w0, w21
  41d028:	cmp	w0, #0x6
  41d02c:	b.ne	41d000 <_obstack_memory_used@@Base+0x42f0>  // b.any
  41d030:	ldr	x20, [x1, x2]
  41d034:	add	x19, x19, #0x1
  41d038:	ldr	x0, [x20]
  41d03c:	bl	402ae0 <free@plt>
  41d040:	ldr	x0, [x20, #8]
  41d044:	bl	402ae0 <free@plt>
  41d048:	ldr	x0, [x20, #16]
  41d04c:	bl	402ae0 <free@plt>
  41d050:	ldr	x0, [x20, #24]
  41d054:	bl	402ae0 <free@plt>
  41d058:	mov	x0, x20
  41d05c:	bl	402ae0 <free@plt>
  41d060:	ldr	x4, [x22, #16]
  41d064:	cmp	x19, x4
  41d068:	b.cc	41d014 <_obstack_memory_used@@Base+0x4304>  // b.lo, b.ul, b.last
  41d06c:	nop
  41d070:	ldr	x0, [x22, #24]
  41d074:	mov	x19, #0x0                   	// #0
  41d078:	mov	x20, #0x0                   	// #0
  41d07c:	bl	402ae0 <free@plt>
  41d080:	ldr	x0, [x22, #16]
  41d084:	cbz	x0, 41d0d8 <_obstack_memory_used@@Base+0x43c8>
  41d088:	ldr	x0, [x22, #48]
  41d08c:	add	x1, x0, x19
  41d090:	cbz	x0, 41d09c <_obstack_memory_used@@Base+0x438c>
  41d094:	ldr	x0, [x1, #16]
  41d098:	bl	402ae0 <free@plt>
  41d09c:	ldr	x0, [x22, #56]
  41d0a0:	add	x1, x0, x19
  41d0a4:	cbz	x0, 41d0b0 <_obstack_memory_used@@Base+0x43a0>
  41d0a8:	ldr	x0, [x1, #16]
  41d0ac:	bl	402ae0 <free@plt>
  41d0b0:	ldr	x0, [x22, #40]
  41d0b4:	add	x1, x0, x19
  41d0b8:	cbz	x0, 41d1b8 <_obstack_memory_used@@Base+0x44a8>
  41d0bc:	ldr	x0, [x1, #16]
  41d0c0:	add	x20, x20, #0x1
  41d0c4:	add	x19, x19, #0x18
  41d0c8:	bl	402ae0 <free@plt>
  41d0cc:	ldr	x0, [x22, #16]
  41d0d0:	cmp	x20, x0
  41d0d4:	b.cc	41d088 <_obstack_memory_used@@Base+0x4378>  // b.lo, b.ul, b.last
  41d0d8:	ldr	x0, [x22, #40]
  41d0dc:	bl	402ae0 <free@plt>
  41d0e0:	ldr	x0, [x22, #48]
  41d0e4:	mov	x23, #0x0                   	// #0
  41d0e8:	mov	x24, #0x0                   	// #0
  41d0ec:	bl	402ae0 <free@plt>
  41d0f0:	ldr	x0, [x22, #56]
  41d0f4:	bl	402ae0 <free@plt>
  41d0f8:	ldr	x0, [x22]
  41d0fc:	bl	402ae0 <free@plt>
  41d100:	ldr	x0, [x22, #64]
  41d104:	cbz	x0, 41d1d4 <_obstack_memory_used@@Base+0x44c4>
  41d108:	ldr	x1, [x0, x23]
  41d10c:	add	x21, x0, x23
  41d110:	mov	x20, #0x0                   	// #0
  41d114:	cmp	x1, #0x0
  41d118:	b.gt	41d160 <_obstack_memory_used@@Base+0x4450>
  41d11c:	b	41d194 <_obstack_memory_used@@Base+0x4484>
  41d120:	ldr	x0, [x1, #16]
  41d124:	add	x20, x20, #0x1
  41d128:	bl	402ae0 <free@plt>
  41d12c:	ldr	x0, [x19, #80]
  41d130:	bl	402ae0 <free@plt>
  41d134:	ldr	x0, [x19, #24]
  41d138:	bl	402ae0 <free@plt>
  41d13c:	ldr	x0, [x19, #96]
  41d140:	bl	402ae0 <free@plt>
  41d144:	ldr	x0, [x19, #88]
  41d148:	bl	402ae0 <free@plt>
  41d14c:	mov	x0, x19
  41d150:	bl	402ae0 <free@plt>
  41d154:	ldr	x0, [x21]
  41d158:	cmp	x0, x20
  41d15c:	b.le	41d194 <_obstack_memory_used@@Base+0x4484>
  41d160:	ldr	x1, [x21, #16]
  41d164:	ldr	x19, [x1, x20, lsl #3]
  41d168:	ldr	x0, [x19, #48]
  41d16c:	bl	402ae0 <free@plt>
  41d170:	ldr	x0, [x19, #72]
  41d174:	bl	402ae0 <free@plt>
  41d178:	ldr	x1, [x19, #80]
  41d17c:	add	x2, x19, #0x8
  41d180:	cmp	x1, x2
  41d184:	b.ne	41d120 <_obstack_memory_used@@Base+0x4410>  // b.any
  41d188:	add	x20, x20, #0x1
  41d18c:	ldr	x0, [x19, #24]
  41d190:	b	41d138 <_obstack_memory_used@@Base+0x4428>
  41d194:	ldr	x0, [x21, #16]
  41d198:	add	x24, x24, #0x1
  41d19c:	add	x23, x23, #0x18
  41d1a0:	bl	402ae0 <free@plt>
  41d1a4:	ldr	x0, [x22, #136]
  41d1a8:	cmp	x0, x24
  41d1ac:	b.cc	41d1d0 <_obstack_memory_used@@Base+0x44c0>  // b.lo, b.ul, b.last
  41d1b0:	ldr	x0, [x22, #64]
  41d1b4:	b	41d108 <_obstack_memory_used@@Base+0x43f8>
  41d1b8:	ldr	x1, [x22, #16]
  41d1bc:	add	x20, x20, #0x1
  41d1c0:	add	x19, x19, #0x18
  41d1c4:	cmp	x1, x20
  41d1c8:	b.hi	41d088 <_obstack_memory_used@@Base+0x4378>  // b.pmore
  41d1cc:	b	41d0dc <_obstack_memory_used@@Base+0x43cc>
  41d1d0:	ldr	x0, [x22, #64]
  41d1d4:	bl	402ae0 <free@plt>
  41d1d8:	ldr	x0, [x22, #120]
  41d1dc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41d1e0:	add	x1, x1, #0xdd0
  41d1e4:	cmp	x0, x1
  41d1e8:	b.eq	41d1f0 <_obstack_memory_used@@Base+0x44e0>  // b.none
  41d1ec:	bl	402ae0 <free@plt>
  41d1f0:	ldr	x0, [x22, #224]
  41d1f4:	bl	402ae0 <free@plt>
  41d1f8:	mov	x0, x22
  41d1fc:	ldp	x19, x20, [sp, #16]
  41d200:	ldp	x21, x22, [sp, #32]
  41d204:	ldp	x23, x24, [sp, #48]
  41d208:	ldp	x29, x30, [sp], #64
  41d20c:	b	402ae0 <free@plt>
  41d210:	ldr	x0, [x3]
  41d214:	bl	402ae0 <free@plt>
  41d218:	ldr	x4, [x22, #16]
  41d21c:	b	41d008 <_obstack_memory_used@@Base+0x42f8>
  41d220:	stp	x29, x30, [sp, #-96]!
  41d224:	mov	x29, sp
  41d228:	stp	x19, x20, [sp, #16]
  41d22c:	mov	x20, x0
  41d230:	mov	x19, x2
  41d234:	stp	x21, x22, [sp, #32]
  41d238:	mov	x21, x1
  41d23c:	lsl	x22, x1, #4
  41d240:	stp	x23, x24, [sp, #48]
  41d244:	mov	w24, w4
  41d248:	stp	x25, x26, [sp, #64]
  41d24c:	mov	x25, x3
  41d250:	str	x27, [sp, #80]
  41d254:	ldr	x3, [x20]
  41d258:	mov	x23, x19
  41d25c:	ldr	x5, [x20, #40]
  41d260:	add	x2, x3, x22
  41d264:	ldrb	w0, [x2, #8]
  41d268:	cmp	w0, #0x4
  41d26c:	b.eq	41d490 <_obstack_memory_used@@Base+0x4780>  // b.none
  41d270:	add	x26, x21, x21, lsl #1
  41d274:	lsl	x26, x26, #3
  41d278:	add	x1, x5, x26
  41d27c:	ldr	x0, [x1, #8]
  41d280:	cbz	x0, 41d5e4 <_obstack_memory_used@@Base+0x48d4>
  41d284:	ldr	x1, [x1, #16]
  41d288:	add	x23, x19, x19, lsl #1
  41d28c:	cmp	x0, #0x1
  41d290:	lsl	x23, x23, #3
  41d294:	add	x0, x5, x23
  41d298:	ldr	x27, [x1]
  41d29c:	b.eq	41d3d0 <_obstack_memory_used@@Base+0x46c0>  // b.none
  41d2a0:	ldr	x4, [x20, #16]
  41d2a4:	sub	x1, x4, #0x1
  41d2a8:	add	x2, x3, x1, lsl #4
  41d2ac:	ldrb	w5, [x2, #10]
  41d2b0:	str	xzr, [x0, #8]
  41d2b4:	tst	x5, #0x4
  41d2b8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41d2bc:	b.le	41d540 <_obstack_memory_used@@Base+0x4830>
  41d2c0:	add	x4, x3, x4, lsl #4
  41d2c4:	sub	x4, x4, x2
  41d2c8:	sub	x4, x4, #0x20
  41d2cc:	ldr	x6, [x20, #32]
  41d2d0:	b	41d2ec <_obstack_memory_used@@Base+0x45dc>
  41d2d4:	add	x2, x2, x4
  41d2d8:	sub	x1, x1, #0x1
  41d2dc:	ldrb	w5, [x2, #10]
  41d2e0:	tst	x5, #0x4
  41d2e4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41d2e8:	b.le	41d540 <_obstack_memory_used@@Base+0x4830>
  41d2ec:	ldr	x5, [x6, x1, lsl #3]
  41d2f0:	cmp	x5, x27
  41d2f4:	b.ne	41d2d4 <_obstack_memory_used@@Base+0x45c4>  // b.any
  41d2f8:	ldr	w5, [x2, #8]
  41d2fc:	ubfx	x5, x5, #8, #10
  41d300:	cmp	w24, w5
  41d304:	b.ne	41d2d4 <_obstack_memory_used@@Base+0x45c4>  // b.any
  41d308:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d30c:	tst	w0, #0xff
  41d310:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d314:	ldr	x2, [x20, #40]
  41d318:	mov	x0, x20
  41d31c:	ldr	x1, [x20]
  41d320:	add	x26, x2, x26
  41d324:	ldr	x2, [x26, #16]
  41d328:	ldr	x21, [x2, #8]
  41d32c:	lsl	x22, x21, #4
  41d330:	add	x1, x1, x22
  41d334:	ldp	x2, x3, [x1]
  41d338:	mov	x1, x2
  41d33c:	mov	x2, x3
  41d340:	bl	419f98 <_obstack_memory_used@@Base+0x1288>
  41d344:	mov	x19, x0
  41d348:	cmn	x0, #0x1
  41d34c:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d350:	ldr	x3, [x20]
  41d354:	mov	x1, x0
  41d358:	and	w2, w24, #0x3ff
  41d35c:	add	x5, x3, x22
  41d360:	mov	w4, w2
  41d364:	add	x3, x3, x0, lsl #4
  41d368:	ldr	w0, [x3, #8]
  41d36c:	bfi	w0, w2, #8, #10
  41d370:	str	w0, [x3, #8]
  41d374:	and	w0, w0, #0xfff800ff
  41d378:	ldr	w2, [x5, #8]
  41d37c:	ubfx	x2, x2, #8, #10
  41d380:	orr	w2, w2, w4
  41d384:	ldp	x5, x4, [x20, #32]
  41d388:	lsl	w2, w2, #8
  41d38c:	orr	w2, w2, #0x40000
  41d390:	orr	w2, w2, w0
  41d394:	str	w2, [x3, #8]
  41d398:	str	x21, [x5, x19, lsl #3]
  41d39c:	add	x0, x4, x23
  41d3a0:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d3a4:	tst	w0, #0xff
  41d3a8:	b.ne	41d254 <_obstack_memory_used@@Base+0x4544>  // b.any
  41d3ac:	nop
  41d3b0:	mov	w0, #0xc                   	// #12
  41d3b4:	ldp	x19, x20, [sp, #16]
  41d3b8:	ldp	x21, x22, [sp, #32]
  41d3bc:	ldp	x23, x24, [sp, #48]
  41d3c0:	ldp	x25, x26, [sp, #64]
  41d3c4:	ldr	x27, [sp, #80]
  41d3c8:	ldp	x29, x30, [sp], #96
  41d3cc:	ret
  41d3d0:	str	xzr, [x0, #8]
  41d3d4:	cmp	x21, x25
  41d3d8:	ccmp	x21, x19, #0x4, eq  // eq = none
  41d3dc:	b.ne	41d5f4 <_obstack_memory_used@@Base+0x48e4>  // b.any
  41d3e0:	lsl	x22, x27, #4
  41d3e4:	ldr	w2, [x2, #8]
  41d3e8:	add	x3, x3, x22
  41d3ec:	mov	x0, x20
  41d3f0:	ubfx	x2, x2, #8, #10
  41d3f4:	ldp	x4, x5, [x3]
  41d3f8:	orr	w24, w24, w2
  41d3fc:	mov	x1, x4
  41d400:	mov	x2, x5
  41d404:	bl	419f98 <_obstack_memory_used@@Base+0x1288>
  41d408:	mov	x19, x0
  41d40c:	cmn	x0, #0x1
  41d410:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d414:	ldr	x3, [x20]
  41d418:	mov	x1, x0
  41d41c:	and	w2, w24, #0x3ff
  41d420:	add	x5, x3, x22
  41d424:	mov	w4, w2
  41d428:	add	x3, x3, x0, lsl #4
  41d42c:	ldr	w0, [x3, #8]
  41d430:	bfi	w0, w2, #8, #10
  41d434:	str	w0, [x3, #8]
  41d438:	and	w0, w0, #0xfff800ff
  41d43c:	ldr	w2, [x5, #8]
  41d440:	ubfx	x2, x2, #8, #10
  41d444:	orr	w2, w2, w4
  41d448:	ldp	x5, x4, [x20, #32]
  41d44c:	lsl	w2, w2, #8
  41d450:	orr	w2, w2, #0x40000
  41d454:	orr	w2, w2, w0
  41d458:	str	w2, [x3, #8]
  41d45c:	str	x27, [x5, x19, lsl #3]
  41d460:	add	x0, x4, x23
  41d464:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d468:	tst	w0, #0xff
  41d46c:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d470:	ldr	x3, [x20]
  41d474:	mov	x21, x27
  41d478:	mov	x23, x19
  41d47c:	add	x2, x3, x22
  41d480:	ldr	x5, [x20, #40]
  41d484:	ldrb	w0, [x2, #8]
  41d488:	cmp	w0, #0x4
  41d48c:	b.ne	41d270 <_obstack_memory_used@@Base+0x4560>  // b.any
  41d490:	ldr	x1, [x20, #24]
  41d494:	lsl	x27, x21, #3
  41d498:	add	x19, x19, x19, lsl #1
  41d49c:	mov	x0, x20
  41d4a0:	ldr	x21, [x1, x21, lsl #3]
  41d4a4:	lsl	x26, x19, #3
  41d4a8:	add	x5, x5, x26
  41d4ac:	lsl	x22, x21, #4
  41d4b0:	add	x3, x3, x22
  41d4b4:	ldp	x2, x3, [x3]
  41d4b8:	str	xzr, [x5, #8]
  41d4bc:	mov	x1, x2
  41d4c0:	mov	x2, x3
  41d4c4:	bl	419f98 <_obstack_memory_used@@Base+0x1288>
  41d4c8:	mov	x19, x0
  41d4cc:	cmn	x0, #0x1
  41d4d0:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d4d4:	ldr	x2, [x20]
  41d4d8:	and	w0, w24, #0x3ff
  41d4dc:	mov	w4, w0
  41d4e0:	mov	x1, x19
  41d4e4:	add	x5, x2, x22
  41d4e8:	add	x2, x2, x19, lsl #4
  41d4ec:	ldr	w3, [x2, #8]
  41d4f0:	bfi	w3, w0, #8, #10
  41d4f4:	str	w3, [x2, #8]
  41d4f8:	and	w3, w3, #0xfff800ff
  41d4fc:	ldr	w0, [x5, #8]
  41d500:	ubfx	x0, x0, #8, #10
  41d504:	orr	w0, w0, w4
  41d508:	ldp	x4, x5, [x20, #24]
  41d50c:	lsl	w0, w0, #8
  41d510:	orr	w0, w0, #0x40000
  41d514:	orr	w0, w0, w3
  41d518:	str	w0, [x2, #8]
  41d51c:	ldr	x0, [x20, #40]
  41d520:	str	x21, [x5, x19, lsl #3]
  41d524:	add	x0, x0, x26
  41d528:	ldr	x2, [x4, x27]
  41d52c:	str	x2, [x4, x23, lsl #3]
  41d530:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d534:	tst	w0, #0xff
  41d538:	b.ne	41d254 <_obstack_memory_used@@Base+0x4544>  // b.any
  41d53c:	b	41d3b0 <_obstack_memory_used@@Base+0x46a0>
  41d540:	lsl	x21, x27, #4
  41d544:	mov	x0, x20
  41d548:	add	x3, x3, x21
  41d54c:	ldp	x2, x3, [x3]
  41d550:	mov	x1, x2
  41d554:	mov	x2, x3
  41d558:	bl	419f98 <_obstack_memory_used@@Base+0x1288>
  41d55c:	mov	x19, x0
  41d560:	cmn	x0, #0x1
  41d564:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d568:	ldr	x2, [x20]
  41d56c:	and	w3, w24, #0x3ff
  41d570:	mov	w4, w3
  41d574:	mov	x1, x19
  41d578:	add	x21, x2, x21
  41d57c:	add	x2, x2, x19, lsl #4
  41d580:	ldr	w0, [x2, #8]
  41d584:	bfi	w0, w3, #8, #10
  41d588:	str	w0, [x2, #8]
  41d58c:	and	w0, w0, #0xfff800ff
  41d590:	ldr	w3, [x21, #8]
  41d594:	ubfx	x3, x3, #8, #10
  41d598:	orr	w3, w3, w4
  41d59c:	ldp	x5, x4, [x20, #32]
  41d5a0:	lsl	w3, w3, #8
  41d5a4:	orr	w3, w3, #0x40000
  41d5a8:	orr	w3, w3, w0
  41d5ac:	str	w3, [x2, #8]
  41d5b0:	str	x27, [x5, x19, lsl #3]
  41d5b4:	add	x0, x4, x23
  41d5b8:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d5bc:	tst	w0, #0xff
  41d5c0:	b.eq	41d3b0 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41d5c4:	mov	x2, x19
  41d5c8:	mov	x1, x27
  41d5cc:	mov	w4, w24
  41d5d0:	mov	x3, x25
  41d5d4:	mov	x0, x20
  41d5d8:	bl	41d220 <_obstack_memory_used@@Base+0x4510>
  41d5dc:	cbz	w0, 41d314 <_obstack_memory_used@@Base+0x4604>
  41d5e0:	b	41d3b4 <_obstack_memory_used@@Base+0x46a4>
  41d5e4:	ldr	x1, [x20, #24]
  41d5e8:	ldr	x2, [x1, x21, lsl #3]
  41d5ec:	str	x2, [x1, x19, lsl #3]
  41d5f0:	b	41d3b4 <_obstack_memory_used@@Base+0x46a4>
  41d5f4:	mov	x1, x27
  41d5f8:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d5fc:	tst	w0, #0xff
  41d600:	mov	w0, #0x0                   	// #0
  41d604:	b.ne	41d3b4 <_obstack_memory_used@@Base+0x46a4>  // b.any
  41d608:	b	41d3b0 <_obstack_memory_used@@Base+0x46a0>
  41d60c:	nop
  41d610:	stp	x29, x30, [sp, #-144]!
  41d614:	mov	x29, sp
  41d618:	stp	x19, x20, [sp, #16]
  41d61c:	add	x20, x2, x2, lsl #1
  41d620:	mov	x19, x1
  41d624:	stp	x23, x24, [sp, #48]
  41d628:	lsl	x20, x20, #3
  41d62c:	and	w24, w3, #0xff
  41d630:	ldr	x23, [x1, #40]
  41d634:	stp	x21, x22, [sp, #32]
  41d638:	mov	x22, x0
  41d63c:	add	x23, x23, x20
  41d640:	mov	x21, x2
  41d644:	ldr	x0, [x23, #8]
  41d648:	add	x0, x0, #0x1
  41d64c:	stp	x0, xzr, [sp, #96]
  41d650:	lsl	x0, x0, #3
  41d654:	bl	402800 <malloc@plt>
  41d658:	str	x0, [sp, #112]
  41d65c:	cbz	x0, 41d84c <_obstack_memory_used@@Base+0x4b3c>
  41d660:	ldr	x2, [x19]
  41d664:	stp	x25, x26, [sp, #64]
  41d668:	lsl	x25, x21, #4
  41d66c:	ldr	x0, [x19, #48]
  41d670:	add	x1, x2, x25
  41d674:	mov	x3, #0xffffffffffffffff    	// #-1
  41d678:	add	x0, x0, x20
  41d67c:	ldr	w4, [x1, #8]
  41d680:	str	x3, [x0, #8]
  41d684:	tst	w4, #0x3ff00
  41d688:	b.ne	41d7d4 <_obstack_memory_used@@Base+0x4ac4>  // b.any
  41d68c:	ldrb	w0, [x1, #8]
  41d690:	tbz	w0, #3, 41d818 <_obstack_memory_used@@Base+0x4b08>
  41d694:	ldr	x1, [x19, #40]
  41d698:	add	x0, x1, x20
  41d69c:	ldr	x2, [x0, #8]
  41d6a0:	cmp	x2, #0x0
  41d6a4:	b.le	41d818 <_obstack_memory_used@@Base+0x4b08>
  41d6a8:	mov	w23, #0x0                   	// #0
  41d6ac:	mov	x26, #0x0                   	// #0
  41d6b0:	str	x27, [sp, #80]
  41d6b4:	nop
  41d6b8:	ldr	x0, [x0, #16]
  41d6bc:	add	x27, sp, #0x78
  41d6c0:	ldr	x3, [x19, #48]
  41d6c4:	ldr	x2, [x0, x26, lsl #3]
  41d6c8:	add	x25, x2, x2, lsl #1
  41d6cc:	lsl	x25, x25, #3
  41d6d0:	add	x3, x3, x25
  41d6d4:	ldr	x0, [x3, #8]
  41d6d8:	cmn	x0, #0x1
  41d6dc:	b.eq	41d7cc <_obstack_memory_used@@Base+0x4abc>  // b.none
  41d6e0:	cbz	x0, 41d798 <_obstack_memory_used@@Base+0x4a88>
  41d6e4:	ldp	x0, x1, [x3]
  41d6e8:	stp	x0, x1, [sp, #120]
  41d6ec:	ldr	x0, [x3, #16]
  41d6f0:	str	x0, [sp, #136]
  41d6f4:	mov	x1, x27
  41d6f8:	add	x0, sp, #0x60
  41d6fc:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41d700:	cbnz	w0, 41d7b0 <_obstack_memory_used@@Base+0x4aa0>
  41d704:	ldr	x0, [x19, #48]
  41d708:	add	x25, x0, x25
  41d70c:	ldr	x0, [x25, #8]
  41d710:	cbz	x0, 41d788 <_obstack_memory_used@@Base+0x4a78>
  41d714:	ldr	x1, [x19, #40]
  41d718:	add	x0, x1, x20
  41d71c:	add	x26, x26, #0x1
  41d720:	ldr	x2, [x0, #8]
  41d724:	cmp	x2, x26
  41d728:	b.gt	41d6b8 <_obstack_memory_used@@Base+0x49a8>
  41d72c:	mov	x1, x21
  41d730:	add	x0, sp, #0x60
  41d734:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d738:	tst	w0, #0xff
  41d73c:	b.eq	41d86c <_obstack_memory_used@@Base+0x4b5c>  // b.none
  41d740:	ldr	x0, [x19, #48]
  41d744:	eor	w24, w24, #0x1
  41d748:	tst	w23, w24
  41d74c:	add	x1, x0, x20
  41d750:	b.eq	41d87c <_obstack_memory_used@@Base+0x4b6c>  // b.none
  41d754:	ldr	x27, [sp, #80]
  41d758:	str	xzr, [x1, #8]
  41d75c:	ldp	x2, x3, [sp, #96]
  41d760:	mov	w0, #0x0                   	// #0
  41d764:	ldr	x1, [sp, #112]
  41d768:	stp	x2, x3, [x22]
  41d76c:	ldp	x25, x26, [sp, #64]
  41d770:	str	x1, [x22, #16]
  41d774:	ldp	x19, x20, [sp, #16]
  41d778:	ldp	x21, x22, [sp, #32]
  41d77c:	ldp	x23, x24, [sp, #48]
  41d780:	ldp	x29, x30, [sp], #144
  41d784:	ret
  41d788:	ldr	x0, [sp, #136]
  41d78c:	mov	w23, #0x1                   	// #1
  41d790:	bl	402ae0 <free@plt>
  41d794:	b	41d714 <_obstack_memory_used@@Base+0x4a04>
  41d798:	add	x27, sp, #0x78
  41d79c:	mov	x1, x19
  41d7a0:	mov	x0, x27
  41d7a4:	mov	w3, #0x0                   	// #0
  41d7a8:	bl	41d610 <_obstack_memory_used@@Base+0x4900>
  41d7ac:	cbz	w0, 41d6f4 <_obstack_memory_used@@Base+0x49e4>
  41d7b0:	ldp	x19, x20, [sp, #16]
  41d7b4:	ldp	x21, x22, [sp, #32]
  41d7b8:	ldp	x23, x24, [sp, #48]
  41d7bc:	ldp	x25, x26, [sp, #64]
  41d7c0:	ldr	x27, [sp, #80]
  41d7c4:	ldp	x29, x30, [sp], #144
  41d7c8:	ret
  41d7cc:	mov	w23, #0x1                   	// #1
  41d7d0:	b	41d718 <_obstack_memory_used@@Base+0x4a08>
  41d7d4:	ldr	x0, [x23, #8]
  41d7d8:	cbz	x0, 41d818 <_obstack_memory_used@@Base+0x4b08>
  41d7dc:	ldr	x0, [x23, #16]
  41d7e0:	ldr	x0, [x0]
  41d7e4:	add	x2, x2, x0, lsl #4
  41d7e8:	ldrb	w0, [x2, #10]
  41d7ec:	tbnz	w0, #2, 41d68c <_obstack_memory_used@@Base+0x497c>
  41d7f0:	ubfx	x4, x4, #8, #10
  41d7f4:	mov	x3, x21
  41d7f8:	mov	x2, x21
  41d7fc:	mov	x1, x21
  41d800:	mov	x0, x19
  41d804:	bl	41d220 <_obstack_memory_used@@Base+0x4510>
  41d808:	cbnz	w0, 41d864 <_obstack_memory_used@@Base+0x4b54>
  41d80c:	ldr	x1, [x19]
  41d810:	add	x1, x1, x25
  41d814:	b	41d68c <_obstack_memory_used@@Base+0x497c>
  41d818:	mov	x1, x21
  41d81c:	add	x0, sp, #0x60
  41d820:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d824:	tst	w0, #0xff
  41d828:	b.eq	41d848 <_obstack_memory_used@@Base+0x4b38>  // b.none
  41d82c:	ldr	x0, [x19, #48]
  41d830:	add	x20, x0, x20
  41d834:	ldp	x0, x1, [sp, #96]
  41d838:	stp	x0, x1, [x20]
  41d83c:	ldr	x0, [sp, #112]
  41d840:	str	x0, [x20, #16]
  41d844:	b	41d75c <_obstack_memory_used@@Base+0x4a4c>
  41d848:	ldp	x25, x26, [sp, #64]
  41d84c:	mov	w0, #0xc                   	// #12
  41d850:	ldp	x19, x20, [sp, #16]
  41d854:	ldp	x21, x22, [sp, #32]
  41d858:	ldp	x23, x24, [sp, #48]
  41d85c:	ldp	x29, x30, [sp], #144
  41d860:	ret
  41d864:	ldp	x25, x26, [sp, #64]
  41d868:	b	41d774 <_obstack_memory_used@@Base+0x4a64>
  41d86c:	mov	w0, #0xc                   	// #12
  41d870:	ldp	x25, x26, [sp, #64]
  41d874:	ldr	x27, [sp, #80]
  41d878:	b	41d850 <_obstack_memory_used@@Base+0x4b40>
  41d87c:	ldr	x27, [sp, #80]
  41d880:	b	41d830 <_obstack_memory_used@@Base+0x4b20>
  41d884:	nop
  41d888:	stp	x29, x30, [sp, #-64]!
  41d88c:	mov	x29, sp
  41d890:	stp	x19, x20, [sp, #16]
  41d894:	mov	x19, x2
  41d898:	mov	w20, w4
  41d89c:	stp	x21, x22, [sp, #32]
  41d8a0:	mov	x22, x1
  41d8a4:	mov	x21, x3
  41d8a8:	str	x23, [sp, #48]
  41d8ac:	mov	x23, x0
  41d8b0:	ldr	x2, [x22, #8]
  41d8b4:	cmp	x2, #0x0
  41d8b8:	b.le	41d8f8 <_obstack_memory_used@@Base+0x4be8>
  41d8bc:	sub	x2, x2, #0x1
  41d8c0:	mov	x3, #0x0                   	// #0
  41d8c4:	ldr	x0, [x22, #16]
  41d8c8:	b	41d8e0 <_obstack_memory_used@@Base+0x4bd0>
  41d8cc:	lsr	x5, x5, #1
  41d8d0:	ldr	x1, [x0, x5, lsl #3]
  41d8d4:	cmp	x19, x1
  41d8d8:	b.gt	41d98c <_obstack_memory_used@@Base+0x4c7c>
  41d8dc:	mov	x2, x5
  41d8e0:	add	x5, x2, x3
  41d8e4:	cmp	x2, x3
  41d8e8:	b.hi	41d8cc <_obstack_memory_used@@Base+0x4bbc>  // b.pmore
  41d8ec:	ldr	x0, [x0, x3, lsl #3]
  41d8f0:	cmp	x19, x0
  41d8f4:	b.eq	41d9b0 <_obstack_memory_used@@Base+0x4ca0>  // b.none
  41d8f8:	ldr	x1, [x23]
  41d8fc:	lsl	x0, x19, #4
  41d900:	add	x2, x1, x0
  41d904:	ldrb	w2, [x2, #8]
  41d908:	cmp	w2, w20
  41d90c:	b.ne	41d91c <_obstack_memory_used@@Base+0x4c0c>  // b.any
  41d910:	ldr	x0, [x1, x0]
  41d914:	cmp	x0, x21
  41d918:	b.eq	41d994 <_obstack_memory_used@@Base+0x4c84>  // b.none
  41d91c:	mov	x1, x19
  41d920:	mov	x0, x22
  41d924:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d928:	tst	w0, #0xff
  41d92c:	b.eq	41d9c8 <_obstack_memory_used@@Base+0x4cb8>  // b.none
  41d930:	add	x19, x19, x19, lsl #1
  41d934:	ldr	x2, [x23, #40]
  41d938:	lsl	x19, x19, #3
  41d93c:	add	x2, x2, x19
  41d940:	ldr	x0, [x2, #8]
  41d944:	cbz	x0, 41d9b0 <_obstack_memory_used@@Base+0x4ca0>
  41d948:	cmp	x0, #0x2
  41d94c:	ldr	x0, [x2, #16]
  41d950:	b.eq	41d95c <_obstack_memory_used@@Base+0x4c4c>  // b.none
  41d954:	ldr	x19, [x0]
  41d958:	b	41d8b0 <_obstack_memory_used@@Base+0x4ba0>
  41d95c:	ldr	x2, [x0, #8]
  41d960:	mov	w4, w20
  41d964:	mov	x3, x21
  41d968:	mov	x1, x22
  41d96c:	mov	x0, x23
  41d970:	bl	41d888 <_obstack_memory_used@@Base+0x4b78>
  41d974:	cbnz	w0, 41d9b4 <_obstack_memory_used@@Base+0x4ca4>
  41d978:	ldr	x0, [x23, #40]
  41d97c:	add	x19, x0, x19
  41d980:	ldr	x0, [x19, #16]
  41d984:	ldr	x19, [x0]
  41d988:	b	41d8b0 <_obstack_memory_used@@Base+0x4ba0>
  41d98c:	add	x3, x5, #0x1
  41d990:	b	41d8e0 <_obstack_memory_used@@Base+0x4bd0>
  41d994:	cmp	w20, #0x9
  41d998:	b.ne	41d9b0 <_obstack_memory_used@@Base+0x4ca0>  // b.any
  41d99c:	mov	x1, x19
  41d9a0:	mov	x0, x22
  41d9a4:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41d9a8:	tst	w0, #0xff
  41d9ac:	b.eq	41d9c8 <_obstack_memory_used@@Base+0x4cb8>  // b.none
  41d9b0:	mov	w0, #0x0                   	// #0
  41d9b4:	ldp	x19, x20, [sp, #16]
  41d9b8:	ldp	x21, x22, [sp, #32]
  41d9bc:	ldr	x23, [sp, #48]
  41d9c0:	ldp	x29, x30, [sp], #64
  41d9c4:	ret
  41d9c8:	mov	w0, #0xc                   	// #12
  41d9cc:	ldp	x19, x20, [sp, #16]
  41d9d0:	ldp	x21, x22, [sp, #32]
  41d9d4:	ldr	x23, [sp, #48]
  41d9d8:	ldp	x29, x30, [sp], #64
  41d9dc:	ret
  41d9e0:	stp	x29, x30, [sp, #-96]!
  41d9e4:	mov	x29, sp
  41d9e8:	stp	x21, x22, [sp, #32]
  41d9ec:	ldr	x21, [x1, #8]
  41d9f0:	stp	x19, x20, [sp, #16]
  41d9f4:	mov	x20, x2
  41d9f8:	mov	w19, w3
  41d9fc:	stp	x23, x24, [sp, #48]
  41da00:	mov	x24, x1
  41da04:	mov	x23, x0
  41da08:	lsl	x0, x21, #3
  41da0c:	stp	x21, xzr, [sp, #72]
  41da10:	bl	402800 <malloc@plt>
  41da14:	str	x0, [sp, #88]
  41da18:	cbz	x0, 41db20 <_obstack_memory_used@@Base+0x4e10>
  41da1c:	cmp	x21, #0x0
  41da20:	b.le	41dabc <_obstack_memory_used@@Base+0x4dac>
  41da24:	mov	x22, #0x0                   	// #0
  41da28:	ldr	x1, [x24, #16]
  41da2c:	ldr	x0, [x23, #48]
  41da30:	ldr	x2, [x1, x22, lsl #3]
  41da34:	add	x1, x2, x2, lsl #1
  41da38:	add	x1, x0, x1, lsl #3
  41da3c:	ldr	x10, [x1, #8]
  41da40:	cmp	x10, #0x0
  41da44:	b.le	41daf0 <_obstack_memory_used@@Base+0x4de0>
  41da48:	mov	x5, #0x0                   	// #0
  41da4c:	ldr	x9, [x23]
  41da50:	ldr	x4, [x1, #16]
  41da54:	b	41da60 <_obstack_memory_used@@Base+0x4d50>
  41da58:	cmp	x10, x5
  41da5c:	b.eq	41daf0 <_obstack_memory_used@@Base+0x4de0>  // b.none
  41da60:	ldr	x7, [x4, x5, lsl #3]
  41da64:	add	x5, x5, #0x1
  41da68:	lsl	x6, x7, #4
  41da6c:	add	x8, x9, x6
  41da70:	ldrb	w8, [x8, #8]
  41da74:	cmp	w19, w8
  41da78:	b.ne	41da58 <_obstack_memory_used@@Base+0x4d48>  // b.any
  41da7c:	ldr	x6, [x9, x6]
  41da80:	cmp	x20, x6
  41da84:	b.ne	41da58 <_obstack_memory_used@@Base+0x4d48>  // b.any
  41da88:	cmn	x7, #0x1
  41da8c:	b.eq	41daf0 <_obstack_memory_used@@Base+0x4de0>  // b.none
  41da90:	mov	w4, w19
  41da94:	mov	x3, x20
  41da98:	add	x1, sp, #0x48
  41da9c:	mov	x0, x23
  41daa0:	bl	41d888 <_obstack_memory_used@@Base+0x4b78>
  41daa4:	mov	w21, w0
  41daa8:	cbnz	w0, 41db00 <_obstack_memory_used@@Base+0x4df0>
  41daac:	ldr	x0, [x24, #8]
  41dab0:	add	x22, x22, #0x1
  41dab4:	cmp	x0, x22
  41dab8:	b.gt	41da28 <_obstack_memory_used@@Base+0x4d18>
  41dabc:	ldr	x0, [x24, #16]
  41dac0:	mov	w21, #0x0                   	// #0
  41dac4:	bl	402ae0 <free@plt>
  41dac8:	ldp	x0, x1, [sp, #72]
  41dacc:	stp	x0, x1, [x24]
  41dad0:	ldr	x0, [sp, #88]
  41dad4:	str	x0, [x24, #16]
  41dad8:	mov	w0, w21
  41dadc:	ldp	x19, x20, [sp, #16]
  41dae0:	ldp	x21, x22, [sp, #32]
  41dae4:	ldp	x23, x24, [sp, #48]
  41dae8:	ldp	x29, x30, [sp], #96
  41daec:	ret
  41daf0:	add	x0, sp, #0x48
  41daf4:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41daf8:	mov	w21, w0
  41dafc:	cbz	w0, 41daac <_obstack_memory_used@@Base+0x4d9c>
  41db00:	ldr	x0, [sp, #88]
  41db04:	bl	402ae0 <free@plt>
  41db08:	mov	w0, w21
  41db0c:	ldp	x19, x20, [sp, #16]
  41db10:	ldp	x21, x22, [sp, #32]
  41db14:	ldp	x23, x24, [sp, #48]
  41db18:	ldp	x29, x30, [sp], #96
  41db1c:	ret
  41db20:	mov	w21, #0xc                   	// #12
  41db24:	mov	w0, w21
  41db28:	ldp	x19, x20, [sp, #16]
  41db2c:	ldp	x21, x22, [sp, #32]
  41db30:	ldp	x23, x24, [sp, #48]
  41db34:	ldp	x29, x30, [sp], #96
  41db38:	ret
  41db3c:	nop
  41db40:	stp	x29, x30, [sp, #-48]!
  41db44:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  41db48:	mov	x29, sp
  41db4c:	stp	x19, x20, [sp, #16]
  41db50:	mov	x19, x0
  41db54:	ldr	x0, [x0, #64]
  41db58:	cmp	x0, x2
  41db5c:	b.hi	41dca4 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  41db60:	ldr	x2, [x19, #88]
  41db64:	lsl	x20, x0, #1
  41db68:	sxtw	x1, w1
  41db6c:	ldr	w0, [x19, #144]
  41db70:	cmp	x20, x2
  41db74:	csel	x20, x20, x2, le
  41db78:	cmp	x20, x1
  41db7c:	csel	x20, x20, x1, ge  // ge = tcont
  41db80:	cmp	w0, #0x1
  41db84:	b.le	41dbc4 <_obstack_memory_used@@Base+0x4eb4>
  41db88:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41db8c:	cmp	x20, x0
  41db90:	b.hi	41dca4 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  41db94:	ldr	x0, [x19, #16]
  41db98:	lsl	x1, x20, #2
  41db9c:	bl	402930 <realloc@plt>
  41dba0:	mov	x1, x0
  41dba4:	cbz	x0, 41dca4 <_obstack_memory_used@@Base+0x4f94>
  41dba8:	ldr	x0, [x19, #24]
  41dbac:	str	x1, [x19, #16]
  41dbb0:	cbz	x0, 41dbc4 <_obstack_memory_used@@Base+0x4eb4>
  41dbb4:	lsl	x1, x20, #3
  41dbb8:	bl	402930 <realloc@plt>
  41dbbc:	cbz	x0, 41dca4 <_obstack_memory_used@@Base+0x4f94>
  41dbc0:	str	x0, [x19, #24]
  41dbc4:	ldrb	w0, [x19, #139]
  41dbc8:	cbnz	w0, 41dcb4 <_obstack_memory_used@@Base+0x4fa4>
  41dbcc:	ldr	x0, [x19, #184]
  41dbd0:	str	x20, [x19, #64]
  41dbd4:	cbz	x0, 41dbec <_obstack_memory_used@@Base+0x4edc>
  41dbd8:	add	x1, x20, #0x1
  41dbdc:	lsl	x1, x1, #3
  41dbe0:	bl	402930 <realloc@plt>
  41dbe4:	cbz	x0, 41dca4 <_obstack_memory_used@@Base+0x4f94>
  41dbe8:	str	x0, [x19, #184]
  41dbec:	ldrb	w0, [x19, #136]
  41dbf0:	ldr	w1, [x19, #144]
  41dbf4:	cmp	w1, #0x1
  41dbf8:	cbz	w0, 41dc10 <_obstack_memory_used@@Base+0x4f00>
  41dbfc:	b.le	41dce4 <_obstack_memory_used@@Base+0x4fd4>
  41dc00:	mov	x0, x19
  41dc04:	ldp	x19, x20, [sp, #16]
  41dc08:	ldp	x29, x30, [sp], #48
  41dc0c:	b	419688 <_obstack_memory_used@@Base+0x978>
  41dc10:	b.gt	41dccc <_obstack_memory_used@@Base+0x4fbc>
  41dc14:	ldr	x3, [x19, #120]
  41dc18:	mov	w0, #0x0                   	// #0
  41dc1c:	cbz	x3, 41dc98 <_obstack_memory_used@@Base+0x4f88>
  41dc20:	ldr	x2, [x19, #64]
  41dc24:	ldr	x0, [x19, #88]
  41dc28:	ldr	x1, [x19, #48]
  41dc2c:	cmp	x2, x0
  41dc30:	csel	x2, x2, x0, le
  41dc34:	cmp	x2, x1
  41dc38:	b.le	41dd80 <_obstack_memory_used@@Base+0x5070>
  41dc3c:	ldp	x4, x5, [x19]
  41dc40:	add	x0, x1, #0x1
  41dc44:	ldr	x6, [x19, #40]
  41dc48:	cmp	x2, x0
  41dc4c:	add	x4, x4, x1
  41dc50:	ldrb	w4, [x4, x6]
  41dc54:	ldrb	w3, [x3, x4]
  41dc58:	strb	w3, [x5, x1]
  41dc5c:	b.le	41dc8c <_obstack_memory_used@@Base+0x4f7c>
  41dc60:	ldr	x1, [x19]
  41dc64:	ldr	x3, [x19, #40]
  41dc68:	add	x1, x1, x0
  41dc6c:	ldr	x4, [x19, #120]
  41dc70:	ldrb	w3, [x1, x3]
  41dc74:	ldr	x1, [x19, #8]
  41dc78:	ldrb	w3, [x4, x3]
  41dc7c:	strb	w3, [x1, x0]
  41dc80:	add	x0, x0, #0x1
  41dc84:	cmp	x2, x0
  41dc88:	b.ne	41dc60 <_obstack_memory_used@@Base+0x4f50>  // b.any
  41dc8c:	dup	v0.2d, x2
  41dc90:	mov	w0, #0x0                   	// #0
  41dc94:	str	q0, [x19, #48]
  41dc98:	ldp	x19, x20, [sp, #16]
  41dc9c:	ldp	x29, x30, [sp], #48
  41dca0:	ret
  41dca4:	mov	w0, #0xc                   	// #12
  41dca8:	ldp	x19, x20, [sp, #16]
  41dcac:	ldp	x29, x30, [sp], #48
  41dcb0:	ret
  41dcb4:	ldr	x0, [x19, #8]
  41dcb8:	mov	x1, x20
  41dcbc:	bl	402930 <realloc@plt>
  41dcc0:	cbz	x0, 41dca4 <_obstack_memory_used@@Base+0x4f94>
  41dcc4:	str	x0, [x19, #8]
  41dcc8:	b	41dbcc <_obstack_memory_used@@Base+0x4ebc>
  41dccc:	mov	x0, x19
  41dcd0:	bl	419490 <_obstack_memory_used@@Base+0x780>
  41dcd4:	mov	w0, #0x0                   	// #0
  41dcd8:	ldp	x19, x20, [sp, #16]
  41dcdc:	ldp	x29, x30, [sp], #48
  41dce0:	ret
  41dce4:	ldr	x20, [x19, #48]
  41dce8:	ldr	x0, [x19, #88]
  41dcec:	str	x21, [sp, #32]
  41dcf0:	ldr	x21, [x19, #64]
  41dcf4:	cmp	x21, x0
  41dcf8:	csel	x21, x21, x0, le
  41dcfc:	cmp	x21, x20
  41dd00:	b.le	41dd88 <_obstack_memory_used@@Base+0x5078>
  41dd04:	bl	402940 <__ctype_toupper_loc@plt>
  41dd08:	b	41dd28 <_obstack_memory_used@@Base+0x5018>
  41dd0c:	ldr	x2, [x0]
  41dd10:	ldr	x1, [x19, #8]
  41dd14:	ldr	w2, [x2, x3, lsl #2]
  41dd18:	strb	w2, [x1, x20]
  41dd1c:	add	x20, x20, #0x1
  41dd20:	cmp	x21, x20
  41dd24:	b.eq	41dd64 <_obstack_memory_used@@Base+0x5054>  // b.none
  41dd28:	ldr	x1, [x19]
  41dd2c:	ldr	x3, [x19, #40]
  41dd30:	add	x1, x1, x20
  41dd34:	ldr	x2, [x19, #120]
  41dd38:	ldrb	w3, [x1, x3]
  41dd3c:	and	x1, x3, #0xff
  41dd40:	cbz	x2, 41dd0c <_obstack_memory_used@@Base+0x4ffc>
  41dd44:	ldrb	w2, [x2, x1]
  41dd48:	ldr	x3, [x0]
  41dd4c:	ldr	x1, [x19, #8]
  41dd50:	ldr	w2, [x3, x2, lsl #2]
  41dd54:	strb	w2, [x1, x20]
  41dd58:	add	x20, x20, #0x1
  41dd5c:	cmp	x20, x21
  41dd60:	b.ne	41dd28 <_obstack_memory_used@@Base+0x5018>  // b.any
  41dd64:	dup	v0.2d, x21
  41dd68:	mov	w0, #0x0                   	// #0
  41dd6c:	ldr	x21, [sp, #32]
  41dd70:	str	q0, [x19, #48]
  41dd74:	ldp	x19, x20, [sp, #16]
  41dd78:	ldp	x29, x30, [sp], #48
  41dd7c:	ret
  41dd80:	mov	x2, x1
  41dd84:	b	41dc8c <_obstack_memory_used@@Base+0x4f7c>
  41dd88:	mov	x21, x20
  41dd8c:	b	41dd64 <_obstack_memory_used@@Base+0x5054>
  41dd90:	stp	x29, x30, [sp, #-112]!
  41dd94:	mov	x29, sp
  41dd98:	stp	x21, x22, [sp, #32]
  41dd9c:	mov	x22, x0
  41dda0:	add	x21, x1, x1, lsl #1
  41dda4:	ldr	x0, [x0, #56]
  41dda8:	stp	xzr, xzr, [sp, #88]
  41ddac:	str	xzr, [sp, #104]
  41ddb0:	add	x21, x0, x21, lsl #3
  41ddb4:	str	x25, [sp, #64]
  41ddb8:	ldr	x8, [x21, #8]
  41ddbc:	cmp	x8, #0x0
  41ddc0:	b.le	41e0d0 <_obstack_memory_used@@Base+0x53c0>
  41ddc4:	stp	x19, x20, [sp, #16]
  41ddc8:	mov	x20, x2
  41ddcc:	mov	x19, #0x0                   	// #0
  41ddd0:	stp	x23, x24, [sp, #48]
  41ddd4:	mov	x23, x1
  41ddd8:	mov	x24, x3
  41dddc:	nop
  41dde0:	ldr	x5, [x21, #16]
  41dde4:	ldr	x4, [x5, x19, lsl #3]
  41dde8:	cmp	x23, x4
  41ddec:	b.eq	41df30 <_obstack_memory_used@@Base+0x5220>  // b.none
  41ddf0:	ldr	x0, [x22]
  41ddf4:	add	x0, x0, x4, lsl #4
  41ddf8:	ldrb	w0, [x0, #8]
  41ddfc:	tbz	w0, #3, 41df30 <_obstack_memory_used@@Base+0x5220>
  41de00:	add	x4, x4, x4, lsl #1
  41de04:	mov	x1, #0xffffffffffffffff    	// #-1
  41de08:	ldr	x0, [x22, #40]
  41de0c:	lsl	x6, x4, #3
  41de10:	add	x0, x0, x6
  41de14:	ldp	x2, x4, [x0, #8]
  41de18:	cmp	x2, #0x1
  41de1c:	b.le	41de24 <_obstack_memory_used@@Base+0x5114>
  41de20:	ldr	x1, [x4, #8]
  41de24:	sub	x2, x8, #0x1
  41de28:	mov	x0, x2
  41de2c:	mov	x3, #0x0                   	// #0
  41de30:	ldr	x9, [x4]
  41de34:	b	41de4c <_obstack_memory_used@@Base+0x513c>
  41de38:	lsr	x4, x4, #1
  41de3c:	ldr	x7, [x5, x4, lsl #3]
  41de40:	cmp	x9, x7
  41de44:	b.gt	41e01c <_obstack_memory_used@@Base+0x530c>
  41de48:	mov	x0, x4
  41de4c:	add	x4, x0, x3
  41de50:	cmp	x0, x3
  41de54:	b.hi	41de38 <_obstack_memory_used@@Base+0x5128>  // b.pmore
  41de58:	ldr	x0, [x5, x3, lsl #3]
  41de5c:	cmp	x9, x0
  41de60:	b.eq	41deac <_obstack_memory_used@@Base+0x519c>  // b.none
  41de64:	ldr	x7, [x20, #8]
  41de68:	cmp	x7, #0x0
  41de6c:	b.le	41deac <_obstack_memory_used@@Base+0x519c>
  41de70:	sub	x7, x7, #0x1
  41de74:	mov	x0, #0x0                   	// #0
  41de78:	ldr	x10, [x20, #16]
  41de7c:	b	41de94 <_obstack_memory_used@@Base+0x5184>
  41de80:	lsr	x4, x4, #1
  41de84:	ldr	x3, [x10, x4, lsl #3]
  41de88:	cmp	x9, x3
  41de8c:	b.gt	41e094 <_obstack_memory_used@@Base+0x5384>
  41de90:	mov	x7, x4
  41de94:	add	x4, x7, x0
  41de98:	cmp	x7, x0
  41de9c:	b.hi	41de80 <_obstack_memory_used@@Base+0x5170>  // b.pmore
  41dea0:	ldr	x0, [x10, x0, lsl #3]
  41dea4:	cmp	x9, x0
  41dea8:	b.eq	41e070 <_obstack_memory_used@@Base+0x5360>  // b.none
  41deac:	cmp	x1, #0x0
  41deb0:	mov	x0, #0x0                   	// #0
  41deb4:	b.gt	41ded0 <_obstack_memory_used@@Base+0x51c0>
  41deb8:	b	41df30 <_obstack_memory_used@@Base+0x5220>
  41debc:	lsr	x4, x4, #1
  41dec0:	ldr	x3, [x5, x4, lsl #3]
  41dec4:	cmp	x3, x1
  41dec8:	b.lt	41e09c <_obstack_memory_used@@Base+0x538c>  // b.tstop
  41decc:	mov	x2, x4
  41ded0:	add	x4, x2, x0
  41ded4:	cmp	x2, x0
  41ded8:	b.hi	41debc <_obstack_memory_used@@Base+0x51ac>  // b.pmore
  41dedc:	ldr	x0, [x5, x0, lsl #3]
  41dee0:	cmp	x0, x1
  41dee4:	b.eq	41df30 <_obstack_memory_used@@Base+0x5220>  // b.none
  41dee8:	ldr	x2, [x20, #8]
  41deec:	cmp	x2, #0x0
  41def0:	b.le	41df30 <_obstack_memory_used@@Base+0x5220>
  41def4:	sub	x2, x2, #0x1
  41def8:	mov	x0, #0x0                   	// #0
  41defc:	ldr	x5, [x20, #16]
  41df00:	b	41df18 <_obstack_memory_used@@Base+0x5208>
  41df04:	lsr	x4, x4, #1
  41df08:	ldr	x3, [x5, x4, lsl #3]
  41df0c:	cmp	x3, x1
  41df10:	b.lt	41e0a4 <_obstack_memory_used@@Base+0x5394>  // b.tstop
  41df14:	mov	x2, x4
  41df18:	add	x4, x2, x0
  41df1c:	cmp	x2, x0
  41df20:	b.hi	41df04 <_obstack_memory_used@@Base+0x51f4>  // b.pmore
  41df24:	ldr	x0, [x5, x0, lsl #3]
  41df28:	cmp	x0, x1
  41df2c:	b.eq	41e070 <_obstack_memory_used@@Base+0x5360>  // b.none
  41df30:	add	x19, x19, #0x1
  41df34:	cmp	x19, x8
  41df38:	b.lt	41dde0 <_obstack_memory_used@@Base+0x50d0>  // b.tstop
  41df3c:	cmp	x8, #0x0
  41df40:	ldr	x0, [sp, #104]
  41df44:	b.le	41dff0 <_obstack_memory_used@@Base+0x52e0>
  41df48:	ldr	x11, [x21, #16]
  41df4c:	mov	x7, #0x0                   	// #0
  41df50:	ldr	x3, [sp, #96]
  41df54:	ldr	x4, [x11, x7, lsl #3]
  41df58:	cmp	x3, #0x0
  41df5c:	b.le	41df98 <_obstack_memory_used@@Base+0x5288>
  41df60:	sub	x3, x3, #0x1
  41df64:	mov	x2, #0x0                   	// #0
  41df68:	b	41df80 <_obstack_memory_used@@Base+0x5270>
  41df6c:	lsr	x1, x1, #1
  41df70:	ldr	x5, [x0, x1, lsl #3]
  41df74:	cmp	x4, x5
  41df78:	b.gt	41e014 <_obstack_memory_used@@Base+0x5304>
  41df7c:	mov	x3, x1
  41df80:	add	x1, x3, x2
  41df84:	cmp	x3, x2
  41df88:	b.hi	41df6c <_obstack_memory_used@@Base+0x525c>  // b.pmore
  41df8c:	ldr	x1, [x0, x2, lsl #3]
  41df90:	cmp	x4, x1
  41df94:	b.eq	41dfe4 <_obstack_memory_used@@Base+0x52d4>  // b.none
  41df98:	ldr	x9, [x20, #8]
  41df9c:	cmp	x9, #0x0
  41dfa0:	b.le	41dfe4 <_obstack_memory_used@@Base+0x52d4>
  41dfa4:	sub	x10, x9, #0x1
  41dfa8:	mov	x3, #0x0                   	// #0
  41dfac:	mov	x2, x10
  41dfb0:	ldr	x5, [x20, #16]
  41dfb4:	b	41dfcc <_obstack_memory_used@@Base+0x52bc>
  41dfb8:	lsr	x1, x1, #1
  41dfbc:	ldr	x6, [x5, x1, lsl #3]
  41dfc0:	cmp	x4, x6
  41dfc4:	b.gt	41e068 <_obstack_memory_used@@Base+0x5358>
  41dfc8:	mov	x2, x1
  41dfcc:	add	x1, x2, x3
  41dfd0:	cmp	x2, x3
  41dfd4:	b.hi	41dfb8 <_obstack_memory_used@@Base+0x52a8>  // b.pmore
  41dfd8:	ldr	x1, [x5, x3, lsl #3]
  41dfdc:	cmp	x4, x1
  41dfe0:	b.eq	41e024 <_obstack_memory_used@@Base+0x5314>  // b.none
  41dfe4:	add	x7, x7, #0x1
  41dfe8:	cmp	x7, x8
  41dfec:	b.lt	41df50 <_obstack_memory_used@@Base+0x5240>  // b.tstop
  41dff0:	ldp	x19, x20, [sp, #16]
  41dff4:	ldp	x23, x24, [sp, #48]
  41dff8:	bl	402ae0 <free@plt>
  41dffc:	mov	w25, #0x0                   	// #0
  41e000:	mov	w0, w25
  41e004:	ldp	x21, x22, [sp, #32]
  41e008:	ldr	x25, [sp, #64]
  41e00c:	ldp	x29, x30, [sp], #112
  41e010:	ret
  41e014:	add	x2, x1, #0x1
  41e018:	b	41df80 <_obstack_memory_used@@Base+0x5270>
  41e01c:	add	x3, x4, #0x1
  41e020:	b	41de4c <_obstack_memory_used@@Base+0x513c>
  41e024:	cmp	x3, #0x0
  41e028:	mov	x1, x3
  41e02c:	ccmp	x3, x9, #0x0, ge  // ge = tcont
  41e030:	b.ge	41dfe4 <_obstack_memory_used@@Base+0x52d4>  // b.tcont
  41e034:	str	x10, [x20, #8]
  41e038:	cmp	x3, x10
  41e03c:	add	x3, x5, #0x8
  41e040:	b.ge	41e060 <_obstack_memory_used@@Base+0x5350>  // b.tcont
  41e044:	nop
  41e048:	ldr	x2, [x3, x1, lsl #3]
  41e04c:	str	x2, [x5, x1, lsl #3]
  41e050:	add	x1, x1, #0x1
  41e054:	ldr	x2, [x20, #8]
  41e058:	cmp	x1, x2
  41e05c:	b.lt	41e048 <_obstack_memory_used@@Base+0x5338>  // b.tstop
  41e060:	ldr	x8, [x21, #8]
  41e064:	b	41dfe4 <_obstack_memory_used@@Base+0x52d4>
  41e068:	add	x3, x1, #0x1
  41e06c:	b	41dfcc <_obstack_memory_used@@Base+0x52bc>
  41e070:	ldr	x2, [x22, #56]
  41e074:	mov	x1, x24
  41e078:	add	x0, sp, #0x58
  41e07c:	add	x2, x2, x6
  41e080:	bl	41a3d8 <_obstack_memory_used@@Base+0x16c8>
  41e084:	mov	w25, w0
  41e088:	cbnz	w0, 41e0ac <_obstack_memory_used@@Base+0x539c>
  41e08c:	ldr	x8, [x21, #8]
  41e090:	b	41df30 <_obstack_memory_used@@Base+0x5220>
  41e094:	add	x0, x4, #0x1
  41e098:	b	41de94 <_obstack_memory_used@@Base+0x5184>
  41e09c:	add	x0, x4, #0x1
  41e0a0:	b	41ded0 <_obstack_memory_used@@Base+0x51c0>
  41e0a4:	add	x0, x4, #0x1
  41e0a8:	b	41df18 <_obstack_memory_used@@Base+0x5208>
  41e0ac:	ldr	x0, [sp, #104]
  41e0b0:	bl	402ae0 <free@plt>
  41e0b4:	mov	w0, w25
  41e0b8:	ldp	x19, x20, [sp, #16]
  41e0bc:	ldp	x21, x22, [sp, #32]
  41e0c0:	ldp	x23, x24, [sp, #48]
  41e0c4:	ldr	x25, [sp, #64]
  41e0c8:	ldp	x29, x30, [sp], #112
  41e0cc:	ret
  41e0d0:	mov	x0, #0x0                   	// #0
  41e0d4:	b	41dff8 <_obstack_memory_used@@Base+0x52e8>
  41e0d8:	stp	x29, x30, [sp, #-192]!
  41e0dc:	adrp	x5, 42c000 <_obstack_memory_used@@Base+0x132f0>
  41e0e0:	tst	w4, #0xff
  41e0e4:	mov	x29, sp
  41e0e8:	ldr	q0, [x5, #64]
  41e0ec:	stp	x19, x20, [sp, #16]
  41e0f0:	mov	x20, x2
  41e0f4:	ldr	x0, [x0]
  41e0f8:	stp	x21, x22, [sp, #32]
  41e0fc:	mov	x19, x3
  41e100:	stp	x23, x24, [sp, #48]
  41e104:	mov	x22, x1
  41e108:	stp	x25, x26, [sp, #64]
  41e10c:	stp	x27, x28, [sp, #80]
  41e110:	str	x0, [x29, #136]
  41e114:	str	xzr, [x29, #160]
  41e118:	str	q0, [x29, #144]
  41e11c:	b.eq	41e8c4 <_obstack_memory_used@@Base+0x5bb4>  // b.none
  41e120:	mov	x0, #0x60                  	// #96
  41e124:	bl	402800 <malloc@plt>
  41e128:	str	x0, [x29, #160]
  41e12c:	add	x26, x29, #0x90
  41e130:	cbz	x0, 41e95c <_obstack_memory_used@@Base+0x5c4c>
  41e134:	ldr	x1, [x29, #136]
  41e138:	lsl	x0, x20, #4
  41e13c:	str	x0, [x29, #128]
  41e140:	cmp	x0, #0xfbf
  41e144:	stp	xzr, xzr, [x29, #168]
  41e148:	str	xzr, [x29, #184]
  41e14c:	ldr	x21, [x1, #144]
  41e150:	b.hi	41e8e8 <_obstack_memory_used@@Base+0x5bd8>  // b.pmore
  41e154:	sub	sp, sp, x0
  41e158:	str	wzr, [x29, #116]
  41e15c:	mov	x0, sp
  41e160:	str	x0, [x29, #120]
  41e164:	ldp	x0, x2, [x29, #120]
  41e168:	mov	x1, x19
  41e16c:	bl	402650 <memcpy@plt>
  41e170:	ldr	x25, [x19]
  41e174:	nop
  41e178:	ldr	x0, [x19, #8]
  41e17c:	cmp	x0, x25
  41e180:	b.lt	41e2c8 <_obstack_memory_used@@Base+0x55b8>  // b.tstop
  41e184:	ldr	x1, [x29, #136]
  41e188:	lsl	x24, x21, #4
  41e18c:	mov	x23, x21
  41e190:	ldr	x2, [x1]
  41e194:	add	x7, x2, x24
  41e198:	ldrb	w1, [x7, #8]
  41e19c:	cmp	w1, #0x8
  41e1a0:	b.eq	41e380 <_obstack_memory_used@@Base+0x5670>  // b.none
  41e1a4:	cmp	w1, #0x9
  41e1a8:	b.eq	41e46c <_obstack_memory_used@@Base+0x575c>  // b.none
  41e1ac:	cmp	x0, x25
  41e1b0:	b.ne	41e1c0 <_obstack_memory_used@@Base+0x54b0>  // b.any
  41e1b4:	ldr	x0, [x22, #176]
  41e1b8:	cmp	x0, x21
  41e1bc:	b.eq	41e648 <_obstack_memory_used@@Base+0x5938>  // b.none
  41e1c0:	ldr	x27, [x22, #152]
  41e1c4:	ldr	x0, [x27]
  41e1c8:	add	x1, x0, x24
  41e1cc:	ldrb	w2, [x1, #8]
  41e1d0:	tbnz	w2, #3, 41e3ac <_obstack_memory_used@@Base+0x569c>
  41e1d4:	ldrb	w7, [x1, #10]
  41e1d8:	tbnz	w7, #4, 41e4b4 <_obstack_memory_used@@Base+0x57a4>
  41e1dc:	cmp	w2, #0x4
  41e1e0:	b.eq	41e4f0 <_obstack_memory_used@@Base+0x57e0>  // b.none
  41e1e4:	mov	x2, x25
  41e1e8:	mov	x0, x22
  41e1ec:	bl	41a688 <_obstack_memory_used@@Base+0x1978>
  41e1f0:	tst	w0, #0xff
  41e1f4:	b.eq	41e354 <_obstack_memory_used@@Base+0x5644>  // b.none
  41e1f8:	ldr	x0, [x27, #24]
  41e1fc:	add	x25, x25, #0x1
  41e200:	ldr	x21, [x0, x23, lsl #3]
  41e204:	cbz	x26, 41e344 <_obstack_memory_used@@Base+0x5634>
  41e208:	ldr	x0, [x22, #168]
  41e20c:	cmp	x25, x0
  41e210:	b.gt	41e268 <_obstack_memory_used@@Base+0x5558>
  41e214:	ldr	x0, [x22, #184]
  41e218:	ldr	x0, [x0, x25, lsl #3]
  41e21c:	cbz	x0, 41e268 <_obstack_memory_used@@Base+0x5558>
  41e220:	ldr	x1, [x0, #16]
  41e224:	cmp	x1, #0x0
  41e228:	b.le	41e268 <_obstack_memory_used@@Base+0x5558>
  41e22c:	sub	x1, x1, #0x1
  41e230:	mov	x2, #0x0                   	// #0
  41e234:	ldr	x8, [x0, #24]
  41e238:	b	41e250 <_obstack_memory_used@@Base+0x5540>
  41e23c:	lsr	x0, x0, #1
  41e240:	ldr	x7, [x8, x0, lsl #3]
  41e244:	cmp	x21, x7
  41e248:	b.gt	41e378 <_obstack_memory_used@@Base+0x5668>
  41e24c:	mov	x1, x0
  41e250:	add	x0, x1, x2
  41e254:	cmp	x1, x2
  41e258:	b.hi	41e23c <_obstack_memory_used@@Base+0x552c>  // b.pmore
  41e25c:	ldr	x0, [x8, x2, lsl #3]
  41e260:	cmp	x21, x0
  41e264:	b.eq	41e344 <_obstack_memory_used@@Base+0x5634>  // b.none
  41e268:	ldr	x4, [x26]
  41e26c:	mov	x0, x19
  41e270:	ldr	x1, [x26, #16]
  41e274:	sub	x4, x4, #0x1
  41e278:	str	x4, [x26]
  41e27c:	add	x4, x4, x4, lsl #1
  41e280:	ldr	x2, [x29, #128]
  41e284:	lsl	x4, x4, #4
  41e288:	add	x23, x1, x4
  41e28c:	ldr	x25, [x1, x4]
  41e290:	ldr	x1, [x23, #16]
  41e294:	bl	402650 <memcpy@plt>
  41e298:	ldr	x0, [x29, #184]
  41e29c:	bl	402ae0 <free@plt>
  41e2a0:	ldr	x0, [x23, #16]
  41e2a4:	bl	402ae0 <free@plt>
  41e2a8:	ldp	x0, x1, [x23, #24]
  41e2ac:	stp	x0, x1, [x29, #168]
  41e2b0:	ldr	x0, [x23, #40]
  41e2b4:	str	x0, [x29, #184]
  41e2b8:	ldr	x0, [x19, #8]
  41e2bc:	ldr	x21, [x23, #8]
  41e2c0:	cmp	x0, x25
  41e2c4:	b.ge	41e184 <_obstack_memory_used@@Base+0x5474>  // b.tcont
  41e2c8:	ldr	x0, [x29, #184]
  41e2cc:	bl	402ae0 <free@plt>
  41e2d0:	ldr	w0, [x29, #116]
  41e2d4:	cbnz	w0, 41e860 <_obstack_memory_used@@Base+0x5b50>
  41e2d8:	cbz	x26, 41e880 <_obstack_memory_used@@Base+0x5b70>
  41e2dc:	ldr	x20, [x26]
  41e2e0:	ldr	x21, [x26, #16]
  41e2e4:	cmp	x20, #0x0
  41e2e8:	b.le	41e314 <_obstack_memory_used@@Base+0x5604>
  41e2ec:	add	x20, x20, x20, lsl #1
  41e2f0:	mov	x19, x21
  41e2f4:	add	x20, x21, x20, lsl #4
  41e2f8:	ldr	x0, [x19, #40]
  41e2fc:	add	x19, x19, #0x30
  41e300:	bl	402ae0 <free@plt>
  41e304:	ldur	x0, [x19, #-32]
  41e308:	bl	402ae0 <free@plt>
  41e30c:	cmp	x20, x19
  41e310:	b.ne	41e2f8 <_obstack_memory_used@@Base+0x55e8>  // b.any
  41e314:	mov	x0, x21
  41e318:	mov	w19, #0x0                   	// #0
  41e31c:	bl	402ae0 <free@plt>
  41e320:	mov	sp, x29
  41e324:	mov	w0, w19
  41e328:	ldp	x19, x20, [sp, #16]
  41e32c:	ldp	x21, x22, [sp, #32]
  41e330:	ldp	x23, x24, [sp, #48]
  41e334:	ldp	x25, x26, [sp, #64]
  41e338:	ldp	x27, x28, [sp, #80]
  41e33c:	ldp	x29, x30, [sp], #192
  41e340:	ret
  41e344:	str	xzr, [x29, #176]
  41e348:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e34c:	cmn	x21, #0x2
  41e350:	b.eq	41e7bc <_obstack_memory_used@@Base+0x5aac>  // b.none
  41e354:	cbnz	x26, 41e268 <_obstack_memory_used@@Base+0x5558>
  41e358:	ldr	x0, [x29, #184]
  41e35c:	mov	w19, #0x1                   	// #1
  41e360:	bl	402ae0 <free@plt>
  41e364:	ldr	w0, [x29, #116]
  41e368:	cbz	w0, 41e320 <_obstack_memory_used@@Base+0x5610>
  41e36c:	ldr	x0, [x29, #120]
  41e370:	bl	402ae0 <free@plt>
  41e374:	b	41e320 <_obstack_memory_used@@Base+0x5610>
  41e378:	add	x2, x0, #0x1
  41e37c:	b	41e250 <_obstack_memory_used@@Base+0x5540>
  41e380:	ldr	x1, [x2, x24]
  41e384:	add	x1, x1, #0x1
  41e388:	cmp	x20, x1
  41e38c:	b.le	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e390:	lsl	x1, x1, #4
  41e394:	add	x0, x19, x1
  41e398:	str	x25, [x19, x1]
  41e39c:	mov	x1, #0xffffffffffffffff    	// #-1
  41e3a0:	str	x1, [x0, #8]
  41e3a4:	ldr	x0, [x19, #8]
  41e3a8:	b	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e3ac:	ldr	x0, [x27, #40]
  41e3b0:	add	x24, x21, x21, lsl #1
  41e3b4:	ldr	x2, [x22, #184]
  41e3b8:	mov	x1, x21
  41e3bc:	add	x24, x0, x24, lsl #3
  41e3c0:	add	x0, x29, #0xa8
  41e3c4:	ldr	x23, [x2, x25, lsl #3]
  41e3c8:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41e3cc:	tst	w0, #0xff
  41e3d0:	b.eq	41e7bc <_obstack_memory_used@@Base+0x5aac>  // b.none
  41e3d4:	ldr	x10, [x24, #8]
  41e3d8:	cmp	x10, #0x0
  41e3dc:	b.le	41e354 <_obstack_memory_used@@Base+0x5644>
  41e3e0:	ldr	x11, [x23, #16]
  41e3e4:	mov	x21, #0xffffffffffffffff    	// #-1
  41e3e8:	ldr	x13, [x24, #16]
  41e3ec:	add	x12, x11, x21
  41e3f0:	mov	x2, #0x0                   	// #0
  41e3f4:	nop
  41e3f8:	cmp	x11, #0x0
  41e3fc:	b.le	41e440 <_obstack_memory_used@@Base+0x5730>
  41e400:	mov	x7, x12
  41e404:	mov	x1, #0x0                   	// #0
  41e408:	ldr	x28, [x13, x2, lsl #3]
  41e40c:	ldr	x8, [x23, #24]
  41e410:	b	41e428 <_obstack_memory_used@@Base+0x5718>
  41e414:	lsr	x0, x0, #1
  41e418:	ldr	x9, [x8, x0, lsl #3]
  41e41c:	cmp	x28, x9
  41e420:	b.gt	41e454 <_obstack_memory_used@@Base+0x5744>
  41e424:	mov	x7, x0
  41e428:	add	x0, x7, x1
  41e42c:	cmp	x7, x1
  41e430:	b.hi	41e414 <_obstack_memory_used@@Base+0x5704>  // b.pmore
  41e434:	ldr	x0, [x8, x1, lsl #3]
  41e438:	cmp	x28, x0
  41e43c:	b.eq	41e45c <_obstack_memory_used@@Base+0x574c>  // b.none
  41e440:	add	x2, x2, #0x1
  41e444:	cmp	x2, x10
  41e448:	b.ne	41e3f8 <_obstack_memory_used@@Base+0x56e8>  // b.any
  41e44c:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e450:	b	41e34c <_obstack_memory_used@@Base+0x563c>
  41e454:	add	x1, x0, #0x1
  41e458:	b	41e428 <_obstack_memory_used@@Base+0x5718>
  41e45c:	cmn	x21, #0x1
  41e460:	b.ne	41e564 <_obstack_memory_used@@Base+0x5854>  // b.any
  41e464:	mov	x21, x28
  41e468:	b	41e440 <_obstack_memory_used@@Base+0x5730>
  41e46c:	ldr	x1, [x7]
  41e470:	add	x1, x1, #0x1
  41e474:	cmp	x20, x1
  41e478:	b.le	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e47c:	lsl	x1, x1, #4
  41e480:	add	x2, x19, x1
  41e484:	ldr	x0, [x19, x1]
  41e488:	cmp	x0, x25
  41e48c:	b.lt	41e824 <_obstack_memory_used@@Base+0x5b14>  // b.tstop
  41e490:	ldrb	w0, [x7, #10]
  41e494:	tbz	w0, #3, 41e4a8 <_obstack_memory_used@@Base+0x5798>
  41e498:	ldr	x3, [x29, #120]
  41e49c:	ldr	x0, [x3, x1]
  41e4a0:	cmn	x0, #0x1
  41e4a4:	b.ne	41e848 <_obstack_memory_used@@Base+0x5b38>  // b.any
  41e4a8:	str	x25, [x2, #8]
  41e4ac:	ldr	x0, [x19, #8]
  41e4b0:	b	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e4b4:	mov	x4, x25
  41e4b8:	mov	x3, x22
  41e4bc:	mov	x2, x21
  41e4c0:	add	x1, x27, #0xd8
  41e4c4:	bl	41cb40 <_obstack_memory_used@@Base+0x3e30>
  41e4c8:	sxtw	x28, w0
  41e4cc:	cbnz	w0, 41e4e0 <_obstack_memory_used@@Base+0x57d0>
  41e4d0:	ldr	x1, [x27]
  41e4d4:	add	x1, x1, x24
  41e4d8:	b	41e1e4 <_obstack_memory_used@@Base+0x54d4>
  41e4dc:	cbz	x28, 41e73c <_obstack_memory_used@@Base+0x5a2c>
  41e4e0:	ldr	x0, [x27, #24]
  41e4e4:	add	x25, x25, x28
  41e4e8:	ldr	x21, [x0, x21, lsl #3]
  41e4ec:	b	41e204 <_obstack_memory_used@@Base+0x54f4>
  41e4f0:	ldr	x0, [x1]
  41e4f4:	add	x0, x0, #0x1
  41e4f8:	cmp	x20, x0
  41e4fc:	b.le	41e738 <_obstack_memory_used@@Base+0x5a28>
  41e500:	lsl	x0, x0, #4
  41e504:	add	x1, x19, x0
  41e508:	ldr	x0, [x19, x0]
  41e50c:	ldr	x1, [x1, #8]
  41e510:	sub	x28, x1, x0
  41e514:	cbz	x26, 41e4dc <_obstack_memory_used@@Base+0x57cc>
  41e518:	cmn	x0, #0x1
  41e51c:	b.eq	41e268 <_obstack_memory_used@@Base+0x5558>  // b.none
  41e520:	cmn	x1, #0x1
  41e524:	b.eq	41e268 <_obstack_memory_used@@Base+0x5558>  // b.none
  41e528:	cbz	x28, 41e73c <_obstack_memory_used@@Base+0x5a2c>
  41e52c:	ldr	x2, [x22, #48]
  41e530:	ldr	x1, [x22, #8]
  41e534:	sub	x2, x2, x25
  41e538:	cmp	x28, x2
  41e53c:	b.gt	41e268 <_obstack_memory_used@@Base+0x5558>
  41e540:	add	x0, x1, x0
  41e544:	mov	x2, x28
  41e548:	add	x1, x1, x25
  41e54c:	bl	402a60 <memcmp@plt>
  41e550:	cbnz	w0, 41e268 <_obstack_memory_used@@Base+0x5558>
  41e554:	ldr	x0, [x27, #24]
  41e558:	add	x25, x25, x28
  41e55c:	ldr	x21, [x0, x21, lsl #3]
  41e560:	b	41e204 <_obstack_memory_used@@Base+0x54f4>
  41e564:	ldr	x23, [x29, #176]
  41e568:	cmp	x23, #0x0
  41e56c:	b.le	41e5ac <_obstack_memory_used@@Base+0x589c>
  41e570:	sub	x1, x23, #0x1
  41e574:	mov	x2, #0x0                   	// #0
  41e578:	ldr	x8, [x29, #184]
  41e57c:	b	41e594 <_obstack_memory_used@@Base+0x5884>
  41e580:	lsr	x0, x0, #1
  41e584:	ldr	x7, [x8, x0, lsl #3]
  41e588:	cmp	x7, x21
  41e58c:	b.lt	41e6c8 <_obstack_memory_used@@Base+0x59b8>  // b.tstop
  41e590:	mov	x1, x0
  41e594:	add	x0, x1, x2
  41e598:	cmp	x1, x2
  41e59c:	b.hi	41e580 <_obstack_memory_used@@Base+0x5870>  // b.pmore
  41e5a0:	ldr	x0, [x8, x2, lsl #3]
  41e5a4:	cmp	x0, x21
  41e5a8:	b.eq	41e63c <_obstack_memory_used@@Base+0x592c>  // b.none
  41e5ac:	cbz	x26, 41e348 <_obstack_memory_used@@Base+0x5638>
  41e5b0:	ldp	x24, x0, [x26]
  41e5b4:	ldr	x27, [x26, #16]
  41e5b8:	add	x1, x24, #0x1
  41e5bc:	str	x1, [x26]
  41e5c0:	str	x1, [x29, #104]
  41e5c4:	cmp	x1, x0
  41e5c8:	b.eq	41e898 <_obstack_memory_used@@Base+0x5b88>  // b.none
  41e5cc:	add	x24, x24, x24, lsl #1
  41e5d0:	ldr	x0, [x29, #128]
  41e5d4:	lsl	x1, x24, #4
  41e5d8:	add	x24, x27, x1
  41e5dc:	str	x25, [x27, x1]
  41e5e0:	str	x28, [x24, #8]
  41e5e4:	bl	402800 <malloc@plt>
  41e5e8:	str	x0, [x24, #16]
  41e5ec:	cbz	x0, 41e93c <_obstack_memory_used@@Base+0x5c2c>
  41e5f0:	ldr	x2, [x29, #128]
  41e5f4:	add	x28, x24, #0x18
  41e5f8:	mov	x1, x19
  41e5fc:	bl	402650 <memcpy@plt>
  41e600:	str	x23, [x28, #8]
  41e604:	cmp	x23, #0x0
  41e608:	b.le	41e888 <_obstack_memory_used@@Base+0x5b78>
  41e60c:	lsl	x2, x23, #3
  41e610:	str	x23, [x24, #24]
  41e614:	mov	x0, x2
  41e618:	str	x2, [x29, #96]
  41e61c:	bl	402800 <malloc@plt>
  41e620:	str	x0, [x28, #16]
  41e624:	ldr	x2, [x29, #96]
  41e628:	cbz	x0, 41e938 <_obstack_memory_used@@Base+0x5c28>
  41e62c:	ldr	x1, [x29, #184]
  41e630:	bl	402650 <memcpy@plt>
  41e634:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e638:	b	41e34c <_obstack_memory_used@@Base+0x563c>
  41e63c:	mov	x21, x28
  41e640:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e644:	b	41e34c <_obstack_memory_used@@Base+0x563c>
  41e648:	cbz	x26, 41e870 <_obstack_memory_used@@Base+0x5b60>
  41e64c:	mov	x0, x19
  41e650:	mov	x1, #0x0                   	// #0
  41e654:	nop
  41e658:	ldr	x2, [x0]
  41e65c:	tbnz	x2, #63, 41e66c <_obstack_memory_used@@Base+0x595c>
  41e660:	ldr	x2, [x0, #8]
  41e664:	cmn	x2, #0x1
  41e668:	b.eq	41e6d0 <_obstack_memory_used@@Base+0x59c0>  // b.none
  41e66c:	add	x1, x1, #0x1
  41e670:	add	x0, x0, #0x10
  41e674:	cmp	x20, x1
  41e678:	b.ne	41e658 <_obstack_memory_used@@Base+0x5948>  // b.any
  41e67c:	ldr	x23, [x26]
  41e680:	ldr	x0, [x29, #184]
  41e684:	bl	402ae0 <free@plt>
  41e688:	ldr	w0, [x29, #116]
  41e68c:	cbnz	w0, 41e964 <_obstack_memory_used@@Base+0x5c54>
  41e690:	cmp	x23, #0x0
  41e694:	ldr	x21, [x26, #16]
  41e698:	b.le	41e314 <_obstack_memory_used@@Base+0x5604>
  41e69c:	add	x0, x23, x23, lsl #1
  41e6a0:	mov	x20, x21
  41e6a4:	add	x19, x21, x0, lsl #4
  41e6a8:	ldr	x0, [x20, #40]
  41e6ac:	add	x20, x20, #0x30
  41e6b0:	bl	402ae0 <free@plt>
  41e6b4:	ldur	x0, [x20, #-32]
  41e6b8:	bl	402ae0 <free@plt>
  41e6bc:	cmp	x19, x20
  41e6c0:	b.ne	41e6a8 <_obstack_memory_used@@Base+0x5998>  // b.any
  41e6c4:	b	41e314 <_obstack_memory_used@@Base+0x5604>
  41e6c8:	add	x2, x0, #0x1
  41e6cc:	b	41e594 <_obstack_memory_used@@Base+0x5884>
  41e6d0:	cmp	x20, x1
  41e6d4:	ldr	x23, [x26]
  41e6d8:	b.eq	41e680 <_obstack_memory_used@@Base+0x5970>  // b.none
  41e6dc:	sub	x0, x23, #0x1
  41e6e0:	str	x0, [x26]
  41e6e4:	ldr	x4, [x26, #16]
  41e6e8:	add	x1, x0, x0, lsl #1
  41e6ec:	ldr	x2, [x29, #128]
  41e6f0:	lsl	x1, x1, #4
  41e6f4:	add	x24, x4, x1
  41e6f8:	mov	x0, x19
  41e6fc:	ldr	x25, [x4, x1]
  41e700:	ldr	x1, [x24, #16]
  41e704:	bl	402650 <memcpy@plt>
  41e708:	ldr	x0, [x29, #184]
  41e70c:	bl	402ae0 <free@plt>
  41e710:	ldr	x0, [x24, #16]
  41e714:	bl	402ae0 <free@plt>
  41e718:	ldr	x21, [x24, #8]
  41e71c:	ldp	x8, x9, [x24, #24]
  41e720:	mov	x23, x21
  41e724:	ldr	x0, [x24, #40]
  41e728:	lsl	x24, x21, #4
  41e72c:	stp	x8, x9, [x29, #168]
  41e730:	str	x0, [x29, #184]
  41e734:	b	41e1c0 <_obstack_memory_used@@Base+0x54b0>
  41e738:	cbnz	x26, 41e268 <_obstack_memory_used@@Base+0x5558>
  41e73c:	mov	x1, x21
  41e740:	add	x0, x29, #0xa8
  41e744:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41e748:	tst	w0, #0xff
  41e74c:	b.eq	41e7bc <_obstack_memory_used@@Base+0x5aac>  // b.none
  41e750:	ldr	x0, [x22, #184]
  41e754:	ldr	x0, [x0, x25, lsl #3]
  41e758:	ldr	x1, [x0, #16]
  41e75c:	cmp	x1, #0x0
  41e760:	b.le	41e4d0 <_obstack_memory_used@@Base+0x57c0>
  41e764:	ldr	x7, [x27, #40]
  41e768:	add	x5, x21, x21, lsl #1
  41e76c:	ldr	x8, [x0, #24]
  41e770:	sub	x1, x1, #0x1
  41e774:	add	x0, x7, x5, lsl #3
  41e778:	mov	x2, #0x0                   	// #0
  41e77c:	ldr	x0, [x0, #16]
  41e780:	ldr	x7, [x0]
  41e784:	b	41e79c <_obstack_memory_used@@Base+0x5a8c>
  41e788:	lsr	x0, x0, #1
  41e78c:	ldr	x5, [x8, x0, lsl #3]
  41e790:	cmp	x7, x5
  41e794:	b.gt	41e840 <_obstack_memory_used@@Base+0x5b30>
  41e798:	mov	x1, x0
  41e79c:	add	x0, x1, x2
  41e7a0:	cmp	x1, x2
  41e7a4:	b.hi	41e788 <_obstack_memory_used@@Base+0x5a78>  // b.pmore
  41e7a8:	ldr	x21, [x8, x2, lsl #3]
  41e7ac:	cmp	x7, x21
  41e7b0:	b.ne	41e4d0 <_obstack_memory_used@@Base+0x57c0>  // b.any
  41e7b4:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e7b8:	b	41e34c <_obstack_memory_used@@Base+0x563c>
  41e7bc:	ldr	x0, [x29, #184]
  41e7c0:	bl	402ae0 <free@plt>
  41e7c4:	ldr	w0, [x29, #116]
  41e7c8:	cbnz	w0, 41e950 <_obstack_memory_used@@Base+0x5c40>
  41e7cc:	cbz	x26, 41e95c <_obstack_memory_used@@Base+0x5c4c>
  41e7d0:	ldr	x27, [x26, #16]
  41e7d4:	ldr	x0, [x26]
  41e7d8:	str	x0, [x29, #104]
  41e7dc:	ldr	x0, [x29, #104]
  41e7e0:	cmp	x0, #0x0
  41e7e4:	b.le	41e814 <_obstack_memory_used@@Base+0x5b04>
  41e7e8:	add	x23, x0, x0, lsl #1
  41e7ec:	mov	x19, x27
  41e7f0:	add	x23, x27, x23, lsl #4
  41e7f4:	nop
  41e7f8:	ldr	x0, [x19, #40]
  41e7fc:	add	x19, x19, #0x30
  41e800:	bl	402ae0 <free@plt>
  41e804:	ldur	x0, [x19, #-32]
  41e808:	bl	402ae0 <free@plt>
  41e80c:	cmp	x23, x19
  41e810:	b.ne	41e7f8 <_obstack_memory_used@@Base+0x5ae8>  // b.any
  41e814:	mov	x0, x27
  41e818:	mov	w19, #0xc                   	// #12
  41e81c:	bl	402ae0 <free@plt>
  41e820:	b	41e320 <_obstack_memory_used@@Base+0x5610>
  41e824:	str	x25, [x2, #8]
  41e828:	mov	x1, x19
  41e82c:	ldr	x0, [x29, #120]
  41e830:	ldr	x2, [x29, #128]
  41e834:	bl	402650 <memcpy@plt>
  41e838:	ldr	x0, [x19, #8]
  41e83c:	b	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e840:	add	x2, x0, #0x1
  41e844:	b	41e79c <_obstack_memory_used@@Base+0x5a8c>
  41e848:	ldr	x2, [x29, #128]
  41e84c:	mov	x1, x3
  41e850:	mov	x0, x19
  41e854:	bl	402650 <memcpy@plt>
  41e858:	ldr	x0, [x19, #8]
  41e85c:	b	41e1ac <_obstack_memory_used@@Base+0x549c>
  41e860:	ldr	x0, [x29, #120]
  41e864:	bl	402ae0 <free@plt>
  41e868:	cbnz	x26, 41e2dc <_obstack_memory_used@@Base+0x55cc>
  41e86c:	b	41e880 <_obstack_memory_used@@Base+0x5b70>
  41e870:	ldr	x0, [x29, #184]
  41e874:	bl	402ae0 <free@plt>
  41e878:	ldr	w0, [x29, #116]
  41e87c:	cbnz	w0, 41e970 <_obstack_memory_used@@Base+0x5c60>
  41e880:	mov	w19, #0x0                   	// #0
  41e884:	b	41e320 <_obstack_memory_used@@Base+0x5610>
  41e888:	stp	xzr, xzr, [x24, #24]
  41e88c:	str	xzr, [x28, #16]
  41e890:	tbz	x21, #63, 41e178 <_obstack_memory_used@@Base+0x5468>
  41e894:	b	41e34c <_obstack_memory_used@@Base+0x563c>
  41e898:	lsl	x2, x1, #1
  41e89c:	mov	x0, x27
  41e8a0:	add	x1, x2, x1
  41e8a4:	str	x2, [x29, #96]
  41e8a8:	lsl	x1, x1, #5
  41e8ac:	bl	402930 <realloc@plt>
  41e8b0:	cbz	x0, 41e93c <_obstack_memory_used@@Base+0x5c2c>
  41e8b4:	ldr	x2, [x29, #96]
  41e8b8:	mov	x27, x0
  41e8bc:	stp	x2, x0, [x26, #8]
  41e8c0:	b	41e5cc <_obstack_memory_used@@Base+0x58bc>
  41e8c4:	ldr	x1, [x29, #136]
  41e8c8:	lsl	x0, x20, #4
  41e8cc:	str	x0, [x29, #128]
  41e8d0:	cmp	x0, #0xfbf
  41e8d4:	stp	xzr, xzr, [x29, #168]
  41e8d8:	mov	x26, #0x0                   	// #0
  41e8dc:	str	xzr, [x29, #184]
  41e8e0:	ldr	x21, [x1, #144]
  41e8e4:	b.ls	41e154 <_obstack_memory_used@@Base+0x5444>  // b.plast
  41e8e8:	bl	402800 <malloc@plt>
  41e8ec:	str	x0, [x29, #120]
  41e8f0:	mov	w1, #0x1                   	// #1
  41e8f4:	str	w1, [x29, #116]
  41e8f8:	cbnz	x0, 41e164 <_obstack_memory_used@@Base+0x5454>
  41e8fc:	cbz	x26, 41e95c <_obstack_memory_used@@Base+0x5c4c>
  41e900:	mov	x20, #0x0                   	// #0
  41e904:	mov	x21, #0x30                  	// #48
  41e908:	b	41e924 <_obstack_memory_used@@Base+0x5c14>
  41e90c:	madd	x19, x20, x21, x0
  41e910:	add	x20, x20, #0x1
  41e914:	ldr	x0, [x19, #40]
  41e918:	bl	402ae0 <free@plt>
  41e91c:	ldr	x0, [x19, #16]
  41e920:	bl	402ae0 <free@plt>
  41e924:	ldr	x1, [x26]
  41e928:	ldr	x0, [x26, #16]
  41e92c:	cmp	x20, x1
  41e930:	b.lt	41e90c <_obstack_memory_used@@Base+0x5bfc>  // b.tstop
  41e934:	b	41e818 <_obstack_memory_used@@Base+0x5b08>
  41e938:	stp	xzr, xzr, [x24, #24]
  41e93c:	ldr	x0, [x29, #184]
  41e940:	bl	402ae0 <free@plt>
  41e944:	ldr	w0, [x29, #116]
  41e948:	cbz	w0, 41e7dc <_obstack_memory_used@@Base+0x5acc>
  41e94c:	nop
  41e950:	ldr	x0, [x29, #120]
  41e954:	bl	402ae0 <free@plt>
  41e958:	b	41e7cc <_obstack_memory_used@@Base+0x5abc>
  41e95c:	mov	w19, #0xc                   	// #12
  41e960:	b	41e320 <_obstack_memory_used@@Base+0x5610>
  41e964:	ldr	x0, [x29, #120]
  41e968:	bl	402ae0 <free@plt>
  41e96c:	b	41e690 <_obstack_memory_used@@Base+0x5980>
  41e970:	ldr	x0, [x29, #120]
  41e974:	mov	w19, #0x0                   	// #0
  41e978:	bl	402ae0 <free@plt>
  41e97c:	b	41e320 <_obstack_memory_used@@Base+0x5610>
  41e980:	stp	x29, x30, [sp, #-80]!
  41e984:	mov	x29, sp
  41e988:	stp	x21, x22, [sp, #32]
  41e98c:	mov	x21, x0
  41e990:	ldr	x22, [x2, #8]
  41e994:	stp	x19, x20, [sp, #16]
  41e998:	cbz	x22, 41ec78 <_obstack_memory_used@@Base+0x5f68>
  41e99c:	stp	x23, x24, [sp, #48]
  41e9a0:	cmp	x22, #0x0
  41e9a4:	mov	x24, x2
  41e9a8:	str	x25, [sp, #64]
  41e9ac:	mov	x25, x1
  41e9b0:	b.le	41ec94 <_obstack_memory_used@@Base+0x5f84>
  41e9b4:	sub	x0, x22, #0x1
  41e9b8:	cmp	x0, #0x2
  41e9bc:	ldr	x2, [x2, #16]
  41e9c0:	b.ls	41ec9c <_obstack_memory_used@@Base+0x5f8c>  // b.plast
  41e9c4:	lsr	x1, x22, #1
  41e9c8:	mov	x0, x2
  41e9cc:	movi	v0.4s, #0x0
  41e9d0:	add	x1, x2, x1, lsl #4
  41e9d4:	nop
  41e9d8:	ldr	q1, [x0], #16
  41e9dc:	add	v0.2d, v0.2d, v1.2d
  41e9e0:	cmp	x1, x0
  41e9e4:	b.ne	41e9d8 <_obstack_memory_used@@Base+0x5cc8>  // b.any
  41e9e8:	addp	d0, v0.2d
  41e9ec:	and	x0, x22, #0xfffffffffffffffe
  41e9f0:	mov	x20, v0.d[0]
  41e9f4:	add	x20, x22, x20
  41e9f8:	tbz	w22, #0, 41ea34 <_obstack_memory_used@@Base+0x5d24>
  41e9fc:	ldr	x1, [x2, x0, lsl #3]
  41ea00:	add	x3, x0, #0x1
  41ea04:	cmp	x22, x3
  41ea08:	lsl	x3, x0, #3
  41ea0c:	add	x20, x20, x1
  41ea10:	b.le	41ea34 <_obstack_memory_used@@Base+0x5d24>
  41ea14:	add	x2, x2, x3
  41ea18:	add	x0, x0, #0x2
  41ea1c:	cmp	x22, x0
  41ea20:	ldr	x0, [x2, #8]
  41ea24:	add	x20, x20, x0
  41ea28:	b.le	41ea34 <_obstack_memory_used@@Base+0x5d24>
  41ea2c:	ldr	x0, [x2, #16]
  41ea30:	add	x20, x20, x0
  41ea34:	ldr	x0, [x25, #136]
  41ea38:	ldr	x1, [x25, #64]
  41ea3c:	and	x0, x20, x0
  41ea40:	add	x0, x0, x0, lsl #1
  41ea44:	lsl	x0, x0, #3
  41ea48:	add	x2, x1, x0
  41ea4c:	ldr	x1, [x1, x0]
  41ea50:	cmp	x1, #0x0
  41ea54:	b.le	41ea9c <_obstack_memory_used@@Base+0x5d8c>
  41ea58:	mov	x4, #0x0                   	// #0
  41ea5c:	ldr	x2, [x2, #16]
  41ea60:	b	41ea70 <_obstack_memory_used@@Base+0x5d60>
  41ea64:	add	x4, x4, #0x1
  41ea68:	cmp	x1, x4
  41ea6c:	b.eq	41ea9c <_obstack_memory_used@@Base+0x5d8c>  // b.none
  41ea70:	ldr	x19, [x2, x4, lsl #3]
  41ea74:	ldr	x0, [x19]
  41ea78:	cmp	x0, x20
  41ea7c:	b.ne	41ea64 <_obstack_memory_used@@Base+0x5d54>  // b.any
  41ea80:	ldr	x3, [x19, #16]
  41ea84:	add	x7, x19, #0x8
  41ea88:	cmp	x22, x3
  41ea8c:	b.eq	41ebac <_obstack_memory_used@@Base+0x5e9c>  // b.none
  41ea90:	add	x4, x4, #0x1
  41ea94:	cmp	x1, x4
  41ea98:	b.ne	41ea70 <_obstack_memory_used@@Base+0x5d60>  // b.any
  41ea9c:	mov	x1, #0x1                   	// #1
  41eaa0:	mov	x0, #0x70                  	// #112
  41eaa4:	bl	402910 <calloc@plt>
  41eaa8:	mov	x19, x0
  41eaac:	cbz	x0, 41ec3c <_obstack_memory_used@@Base+0x5f2c>
  41eab0:	str	x22, [x0, #16]
  41eab4:	add	x23, x0, #0x8
  41eab8:	cmp	x22, #0x0
  41eabc:	b.le	41ebd0 <_obstack_memory_used@@Base+0x5ec0>
  41eac0:	str	x22, [x0, #8]
  41eac4:	lsl	x22, x22, #3
  41eac8:	mov	x0, x22
  41eacc:	bl	402800 <malloc@plt>
  41ead0:	str	x0, [x23, #16]
  41ead4:	cbz	x0, 41ec34 <_obstack_memory_used@@Base+0x5f24>
  41ead8:	ldr	x24, [x24, #16]
  41eadc:	mov	x2, x22
  41eae0:	mov	x1, x24
  41eae4:	bl	402650 <memcpy@plt>
  41eae8:	mov	x4, x24
  41eaec:	add	x2, x24, x22
  41eaf0:	str	x23, [x19, #80]
  41eaf4:	ldr	x7, [x25]
  41eaf8:	b	41eb44 <_obstack_memory_used@@Base+0x5e34>
  41eafc:	ldrb	w3, [x19, #104]
  41eb00:	cmp	w5, #0x2
  41eb04:	ldrb	w6, [x0, #10]
  41eb08:	mov	w1, w3
  41eb0c:	ubfx	x3, x3, #5, #1
  41eb10:	ubfx	x6, x6, #4, #1
  41eb14:	orr	w3, w3, w6
  41eb18:	bfi	w1, w3, #5, #1
  41eb1c:	strb	w1, [x19, #104]
  41eb20:	b.eq	41ec54 <_obstack_memory_used@@Base+0x5f44>  // b.none
  41eb24:	cmp	w5, #0x4
  41eb28:	b.ne	41ec60 <_obstack_memory_used@@Base+0x5f50>  // b.any
  41eb2c:	orr	w1, w1, #0x40
  41eb30:	strb	w1, [x19, #104]
  41eb34:	nop
  41eb38:	add	x4, x4, #0x8
  41eb3c:	cmp	x2, x4
  41eb40:	b.eq	41ebdc <_obstack_memory_used@@Base+0x5ecc>  // b.none
  41eb44:	ldr	x0, [x4]
  41eb48:	add	x0, x7, x0, lsl #4
  41eb4c:	ldrb	w5, [x0, #8]
  41eb50:	cmp	w5, #0x1
  41eb54:	b.ne	41eafc <_obstack_memory_used@@Base+0x5dec>  // b.any
  41eb58:	ldr	w1, [x0, #8]
  41eb5c:	tst	w1, #0x3ff00
  41eb60:	b.eq	41eb38 <_obstack_memory_used@@Base+0x5e28>  // b.none
  41eb64:	ldrb	w1, [x0, #10]
  41eb68:	ldrb	w0, [x19, #104]
  41eb6c:	ubfx	x1, x1, #4, #1
  41eb70:	mov	w3, w0
  41eb74:	ubfx	x0, x0, #5, #1
  41eb78:	orr	w0, w0, w1
  41eb7c:	bfi	w3, w0, #5, #1
  41eb80:	strb	w3, [x19, #104]
  41eb84:	ldrb	w0, [x19, #104]
  41eb88:	orr	w0, w0, #0xffffff80
  41eb8c:	strb	w0, [x19, #104]
  41eb90:	b	41eb38 <_obstack_memory_used@@Base+0x5e28>
  41eb94:	ldr	x6, [x7, #16]
  41eb98:	ldr	x5, [x24, #16]
  41eb9c:	ldr	x6, [x6, x3, lsl #3]
  41eba0:	ldr	x5, [x5, x3, lsl #3]
  41eba4:	cmp	x6, x5
  41eba8:	b.ne	41ea64 <_obstack_memory_used@@Base+0x5d54>  // b.any
  41ebac:	subs	x3, x3, #0x1
  41ebb0:	b.pl	41eb94 <_obstack_memory_used@@Base+0x5e84>  // b.nfrst
  41ebb4:	ldp	x23, x24, [sp, #48]
  41ebb8:	ldr	x25, [sp, #64]
  41ebbc:	mov	x0, x19
  41ebc0:	ldp	x19, x20, [sp, #16]
  41ebc4:	ldp	x21, x22, [sp, #32]
  41ebc8:	ldp	x29, x30, [sp], #80
  41ebcc:	ret
  41ebd0:	stp	xzr, xzr, [x0, #8]
  41ebd4:	str	xzr, [x23, #16]
  41ebd8:	str	x23, [x0, #80]
  41ebdc:	mov	x2, x20
  41ebe0:	mov	x0, x25
  41ebe4:	mov	x1, x19
  41ebe8:	bl	419330 <_obstack_memory_used@@Base+0x620>
  41ebec:	cbz	w0, 41ebb4 <_obstack_memory_used@@Base+0x5ea4>
  41ebf0:	ldr	x0, [x19, #48]
  41ebf4:	bl	402ae0 <free@plt>
  41ebf8:	ldr	x0, [x19, #72]
  41ebfc:	bl	402ae0 <free@plt>
  41ec00:	ldr	x0, [x19, #80]
  41ec04:	cmp	x23, x0
  41ec08:	b.eq	41ec1c <_obstack_memory_used@@Base+0x5f0c>  // b.none
  41ec0c:	ldr	x0, [x0, #16]
  41ec10:	bl	402ae0 <free@plt>
  41ec14:	ldr	x0, [x19, #80]
  41ec18:	bl	402ae0 <free@plt>
  41ec1c:	ldr	x0, [x19, #24]
  41ec20:	bl	402ae0 <free@plt>
  41ec24:	ldr	x0, [x19, #96]
  41ec28:	bl	402ae0 <free@plt>
  41ec2c:	ldr	x0, [x19, #88]
  41ec30:	bl	402ae0 <free@plt>
  41ec34:	mov	x0, x19
  41ec38:	bl	402ae0 <free@plt>
  41ec3c:	mov	w0, #0xc                   	// #12
  41ec40:	mov	x19, #0x0                   	// #0
  41ec44:	ldp	x23, x24, [sp, #48]
  41ec48:	ldr	x25, [sp, #64]
  41ec4c:	str	w0, [x21]
  41ec50:	b	41ebbc <_obstack_memory_used@@Base+0x5eac>
  41ec54:	orr	w1, w1, #0x10
  41ec58:	strb	w1, [x19, #104]
  41ec5c:	b	41eb38 <_obstack_memory_used@@Base+0x5e28>
  41ec60:	cmp	w5, #0xc
  41ec64:	b.eq	41eb84 <_obstack_memory_used@@Base+0x5e74>  // b.none
  41ec68:	ldr	w0, [x0, #8]
  41ec6c:	tst	w0, #0x3ff00
  41ec70:	b.eq	41eb38 <_obstack_memory_used@@Base+0x5e28>  // b.none
  41ec74:	b	41eb84 <_obstack_memory_used@@Base+0x5e74>
  41ec78:	str	wzr, [x0]
  41ec7c:	mov	x19, #0x0                   	// #0
  41ec80:	mov	x0, x19
  41ec84:	ldp	x19, x20, [sp, #16]
  41ec88:	ldp	x21, x22, [sp, #32]
  41ec8c:	ldp	x29, x30, [sp], #80
  41ec90:	ret
  41ec94:	mov	x20, x22
  41ec98:	b	41ea34 <_obstack_memory_used@@Base+0x5d24>
  41ec9c:	mov	x20, x22
  41eca0:	mov	x0, #0x0                   	// #0
  41eca4:	b	41e9fc <_obstack_memory_used@@Base+0x5cec>
  41eca8:	stp	x29, x30, [sp, #-176]!
  41ecac:	mov	x29, sp
  41ecb0:	ldr	x6, [x0, #200]
  41ecb4:	stp	x19, x20, [sp, #16]
  41ecb8:	mov	x19, x1
  41ecbc:	stp	x21, x22, [sp, #32]
  41ecc0:	mov	w21, w4
  41ecc4:	mov	x22, #0x0                   	// #0
  41ecc8:	stp	x25, x26, [sp, #64]
  41eccc:	mov	x25, x0
  41ecd0:	mov	x26, x2
  41ecd4:	mov	x0, x6
  41ecd8:	str	x3, [sp, #112]
  41ecdc:	b	41ed00 <_obstack_memory_used@@Base+0x5ff0>
  41ece0:	asr	x5, x5, #1
  41ece4:	ldr	x2, [x25, #216]
  41ece8:	add	x1, x5, x5, lsl #2
  41ecec:	add	x1, x2, x1, lsl #3
  41ecf0:	ldr	x1, [x1, #8]
  41ecf4:	cmp	x26, x1
  41ecf8:	b.gt	41eff0 <_obstack_memory_used@@Base+0x62e0>
  41ecfc:	mov	x0, x5
  41ed00:	add	x5, x0, x22
  41ed04:	cmp	x0, x22
  41ed08:	b.gt	41ece0 <_obstack_memory_used@@Base+0x5fd0>
  41ed0c:	cmp	x6, x22
  41ed10:	b.le	41eda4 <_obstack_memory_used@@Base+0x6094>
  41ed14:	add	x22, x22, x22, lsl #2
  41ed18:	stp	x23, x24, [sp, #48]
  41ed1c:	ldr	x23, [x25, #216]
  41ed20:	lsl	x0, x22, #3
  41ed24:	str	x0, [sp, #120]
  41ed28:	add	x23, x23, x0
  41ed2c:	ldr	x0, [x23, #8]
  41ed30:	cmp	x26, x0
  41ed34:	b.ne	41eff8 <_obstack_memory_used@@Base+0x62e8>  // b.any
  41ed38:	stp	x27, x28, [sp, #80]
  41ed3c:	ldr	x27, [x25, #152]
  41ed40:	ldr	x5, [x19, #8]
  41ed44:	cmp	x5, #0x0
  41ed48:	b.le	41ed90 <_obstack_memory_used@@Base+0x6080>
  41ed4c:	sub	x5, x5, #0x1
  41ed50:	mov	x1, #0x0                   	// #0
  41ed54:	mov	x0, x5
  41ed58:	ldr	x2, [x23]
  41ed5c:	ldr	x3, [x19, #16]
  41ed60:	b	41ed78 <_obstack_memory_used@@Base+0x6068>
  41ed64:	lsr	x6, x6, #1
  41ed68:	ldr	x4, [x3, x6, lsl #3]
  41ed6c:	cmp	x2, x4
  41ed70:	b.gt	41edbc <_obstack_memory_used@@Base+0x60ac>
  41ed74:	mov	x0, x6
  41ed78:	add	x6, x0, x1
  41ed7c:	cmp	x0, x1
  41ed80:	b.hi	41ed64 <_obstack_memory_used@@Base+0x6054>  // b.pmore
  41ed84:	ldr	x0, [x3, x1, lsl #3]
  41ed88:	cmp	x2, x0
  41ed8c:	b.eq	41edc4 <_obstack_memory_used@@Base+0x60b4>  // b.none
  41ed90:	ldrb	w0, [x23, #32]
  41ed94:	add	x23, x23, #0x28
  41ed98:	cbnz	w0, 41ed40 <_obstack_memory_used@@Base+0x6030>
  41ed9c:	ldp	x23, x24, [sp, #48]
  41eda0:	ldp	x27, x28, [sp, #80]
  41eda4:	mov	w0, #0x0                   	// #0
  41eda8:	ldp	x19, x20, [sp, #16]
  41edac:	ldp	x21, x22, [sp, #32]
  41edb0:	ldp	x25, x26, [sp, #64]
  41edb4:	ldp	x29, x30, [sp], #176
  41edb8:	ret
  41edbc:	add	x1, x6, #0x1
  41edc0:	b	41ed78 <_obstack_memory_used@@Base+0x6068>
  41edc4:	ldp	x0, x24, [x23, #16]
  41edc8:	add	x24, x26, x24
  41edcc:	sub	x24, x24, x0
  41edd0:	cmp	x26, x24
  41edd4:	b.eq	41eef0 <_obstack_memory_used@@Base+0x61e0>  // b.none
  41edd8:	ldr	x0, [x25, #184]
  41eddc:	lsl	x22, x24, #3
  41ede0:	ldr	x4, [x27, #24]
  41ede4:	add	x20, x0, x22
  41ede8:	ldr	x1, [x0, x24, lsl #3]
  41edec:	ldr	x28, [x4, x2, lsl #3]
  41edf0:	cbz	x1, 41efb8 <_obstack_memory_used@@Base+0x62a8>
  41edf4:	ldr	x2, [x1, #16]
  41edf8:	cmp	x2, #0x0
  41edfc:	b.le	41efe0 <_obstack_memory_used@@Base+0x62d0>
  41ee00:	sub	x0, x2, #0x1
  41ee04:	mov	x3, #0x0                   	// #0
  41ee08:	ldr	x1, [x1, #24]
  41ee0c:	b	41ee24 <_obstack_memory_used@@Base+0x6114>
  41ee10:	lsr	x5, x5, #1
  41ee14:	ldr	x4, [x1, x5, lsl #3]
  41ee18:	cmp	x28, x4
  41ee1c:	b.gt	41eee8 <_obstack_memory_used@@Base+0x61d8>
  41ee20:	mov	x0, x5
  41ee24:	add	x5, x0, x3
  41ee28:	cmp	x0, x3
  41ee2c:	b.hi	41ee10 <_obstack_memory_used@@Base+0x6100>  // b.pmore
  41ee30:	ldr	x0, [x1, x3, lsl #3]
  41ee34:	cmp	x28, x0
  41ee38:	b.eq	41ed90 <_obstack_memory_used@@Base+0x6080>  // b.none
  41ee3c:	dup	v0.2d, x2
  41ee40:	lsl	x2, x2, #3
  41ee44:	mov	x0, x2
  41ee48:	stp	x2, x1, [sp, #96]
  41ee4c:	str	q0, [sp, #144]
  41ee50:	bl	402800 <malloc@plt>
  41ee54:	str	x0, [sp, #160]
  41ee58:	ldp	x2, x1, [sp, #96]
  41ee5c:	cbz	x0, 41f06c <_obstack_memory_used@@Base+0x635c>
  41ee60:	bl	402650 <memcpy@plt>
  41ee64:	mov	w2, #0x0                   	// #0
  41ee68:	mov	x1, x28
  41ee6c:	add	x0, sp, #0x90
  41ee70:	str	w2, [sp, #140]
  41ee74:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41ee78:	ldr	w1, [sp, #140]
  41ee7c:	and	w0, w0, #0xff
  41ee80:	eor	w0, w0, #0x1
  41ee84:	cmp	w1, #0x0
  41ee88:	cset	w1, ne  // ne = any
  41ee8c:	orr	w0, w1, w0
  41ee90:	cbnz	w0, 41f000 <_obstack_memory_used@@Base+0x62f0>
  41ee94:	ldr	x3, [x25, #184]
  41ee98:	add	x20, x3, x22
  41ee9c:	add	x2, sp, #0x90
  41eea0:	mov	x1, x27
  41eea4:	add	x0, sp, #0x8c
  41eea8:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  41eeac:	str	x0, [x20]
  41eeb0:	ldr	x0, [sp, #160]
  41eeb4:	bl	402ae0 <free@plt>
  41eeb8:	ldr	x0, [x25, #184]
  41eebc:	ldr	x0, [x0, x24, lsl #3]
  41eec0:	cbnz	x0, 41ed90 <_obstack_memory_used@@Base+0x6080>
  41eec4:	ldr	w0, [sp, #140]
  41eec8:	cbz	w0, 41ed90 <_obstack_memory_used@@Base+0x6080>
  41eecc:	ldp	x19, x20, [sp, #16]
  41eed0:	ldp	x21, x22, [sp, #32]
  41eed4:	ldp	x23, x24, [sp, #48]
  41eed8:	ldp	x25, x26, [sp, #64]
  41eedc:	ldp	x27, x28, [sp, #80]
  41eee0:	ldp	x29, x30, [sp], #176
  41eee4:	ret
  41eee8:	add	x3, x5, #0x1
  41eeec:	b	41ee24 <_obstack_memory_used@@Base+0x6114>
  41eef0:	ldr	x1, [x27, #40]
  41eef4:	add	x2, x2, x2, lsl #1
  41eef8:	mov	x0, #0x0                   	// #0
  41eefc:	add	x2, x1, x2, lsl #3
  41ef00:	ldr	x1, [x2, #16]
  41ef04:	ldr	x24, [x1]
  41ef08:	b	41ef20 <_obstack_memory_used@@Base+0x6210>
  41ef0c:	lsr	x1, x1, #1
  41ef10:	ldr	x2, [x3, x1, lsl #3]
  41ef14:	cmp	x24, x2
  41ef18:	b.gt	41efb0 <_obstack_memory_used@@Base+0x62a0>
  41ef1c:	mov	x5, x1
  41ef20:	add	x1, x5, x0
  41ef24:	cmp	x5, x0
  41ef28:	b.hi	41ef0c <_obstack_memory_used@@Base+0x61fc>  // b.pmore
  41ef2c:	ldr	x0, [x3, x0, lsl #3]
  41ef30:	cmp	x24, x0
  41ef34:	b.eq	41ed90 <_obstack_memory_used@@Base+0x6080>  // b.none
  41ef38:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41ef3c:	ldr	q0, [x0, #1088]
  41ef40:	mov	x0, #0x8                   	// #8
  41ef44:	str	q0, [sp, #144]
  41ef48:	bl	402800 <malloc@plt>
  41ef4c:	mov	w3, w21
  41ef50:	str	x0, [sp, #160]
  41ef54:	mov	x4, x0
  41ef58:	ldr	x2, [sp, #112]
  41ef5c:	cbz	x0, 41f048 <_obstack_memory_used@@Base+0x6338>
  41ef60:	str	x24, [x4]
  41ef64:	add	x1, sp, #0x90
  41ef68:	mov	x0, x27
  41ef6c:	str	wzr, [sp, #140]
  41ef70:	bl	41d9e0 <_obstack_memory_used@@Base+0x4cd0>
  41ef74:	mov	w23, w0
  41ef78:	add	x1, sp, #0x90
  41ef7c:	mov	x0, x19
  41ef80:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41ef84:	mov	w24, w0
  41ef88:	ldr	x0, [sp, #160]
  41ef8c:	bl	402ae0 <free@plt>
  41ef90:	ldr	w0, [sp, #140]
  41ef94:	orr	w1, w23, w24
  41ef98:	orr	w1, w1, w0
  41ef9c:	cbnz	w1, 41f030 <_obstack_memory_used@@Base+0x6320>
  41efa0:	ldr	x0, [sp, #120]
  41efa4:	ldr	x23, [x25, #216]
  41efa8:	add	x23, x23, x0
  41efac:	b	41ed40 <_obstack_memory_used@@Base+0x6030>
  41efb0:	add	x0, x1, #0x1
  41efb4:	b	41ef20 <_obstack_memory_used@@Base+0x6210>
  41efb8:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41efbc:	mov	x0, #0x8                   	// #8
  41efc0:	ldr	q0, [x1, #1088]
  41efc4:	str	q0, [sp, #144]
  41efc8:	bl	402800 <malloc@plt>
  41efcc:	str	x0, [sp, #160]
  41efd0:	cbz	x0, 41f010 <_obstack_memory_used@@Base+0x6300>
  41efd4:	str	x28, [x0]
  41efd8:	str	wzr, [sp, #140]
  41efdc:	b	41ee9c <_obstack_memory_used@@Base+0x618c>
  41efe0:	mov	w2, #0x0                   	// #0
  41efe4:	stp	xzr, xzr, [sp, #144]
  41efe8:	str	xzr, [sp, #160]
  41efec:	b	41ee68 <_obstack_memory_used@@Base+0x6158>
  41eff0:	add	x22, x5, #0x1
  41eff4:	b	41ed00 <_obstack_memory_used@@Base+0x5ff0>
  41eff8:	ldp	x23, x24, [sp, #48]
  41effc:	b	41eda4 <_obstack_memory_used@@Base+0x6094>
  41f000:	ldr	x0, [sp, #160]
  41f004:	bl	402ae0 <free@plt>
  41f008:	ldr	w0, [sp, #140]
  41f00c:	cbnz	w0, 41eecc <_obstack_memory_used@@Base+0x61bc>
  41f010:	mov	w0, #0xc                   	// #12
  41f014:	ldp	x19, x20, [sp, #16]
  41f018:	ldp	x21, x22, [sp, #32]
  41f01c:	ldp	x23, x24, [sp, #48]
  41f020:	ldp	x25, x26, [sp, #64]
  41f024:	ldp	x27, x28, [sp, #80]
  41f028:	ldp	x29, x30, [sp], #176
  41f02c:	ret
  41f030:	cbnz	w0, 41eecc <_obstack_memory_used@@Base+0x61bc>
  41f034:	cmp	w23, #0x0
  41f038:	csel	w0, w23, w24, ne  // ne = any
  41f03c:	ldp	x23, x24, [sp, #48]
  41f040:	ldp	x27, x28, [sp, #80]
  41f044:	b	41eda8 <_obstack_memory_used@@Base+0x6098>
  41f048:	mov	w4, #0xc                   	// #12
  41f04c:	add	x1, sp, #0x90
  41f050:	mov	x0, x27
  41f054:	str	w4, [sp, #140]
  41f058:	stp	xzr, xzr, [sp, #144]
  41f05c:	bl	41d9e0 <_obstack_memory_used@@Base+0x4cd0>
  41f060:	add	x1, sp, #0x90
  41f064:	mov	w23, w0
  41f068:	b	41ef7c <_obstack_memory_used@@Base+0x626c>
  41f06c:	mov	w2, #0xc                   	// #12
  41f070:	stp	xzr, xzr, [sp, #144]
  41f074:	b	41ee68 <_obstack_memory_used@@Base+0x6158>
  41f078:	stp	x29, x30, [sp, #-144]!
  41f07c:	mov	x29, sp
  41f080:	stp	x21, x22, [sp, #32]
  41f084:	ldr	x21, [x2, #8]
  41f088:	stp	x19, x20, [sp, #16]
  41f08c:	str	x1, [sp, #104]
  41f090:	str	x0, [sp, #136]
  41f094:	cbz	x21, 41f474 <_obstack_memory_used@@Base+0x6764>
  41f098:	stp	x23, x24, [sp, #48]
  41f09c:	mov	x22, x2
  41f0a0:	cmp	x21, #0x0
  41f0a4:	stp	x27, x28, [sp, #80]
  41f0a8:	add	x23, x21, w3, uxtw
  41f0ac:	mov	w27, w3
  41f0b0:	b.le	41f134 <_obstack_memory_used@@Base+0x6424>
  41f0b4:	sub	x0, x21, #0x1
  41f0b8:	cmp	x0, #0x2
  41f0bc:	ldr	x2, [x2, #16]
  41f0c0:	b.ls	41f4e4 <_obstack_memory_used@@Base+0x67d4>  // b.plast
  41f0c4:	lsr	x1, x21, #1
  41f0c8:	mov	x0, x2
  41f0cc:	movi	v0.4s, #0x0
  41f0d0:	add	x1, x2, x1, lsl #4
  41f0d4:	nop
  41f0d8:	ldr	q1, [x0], #16
  41f0dc:	add	v0.2d, v0.2d, v1.2d
  41f0e0:	cmp	x1, x0
  41f0e4:	b.ne	41f0d8 <_obstack_memory_used@@Base+0x63c8>  // b.any
  41f0e8:	addp	d0, v0.2d
  41f0ec:	and	x1, x21, #0xfffffffffffffffe
  41f0f0:	mov	x0, v0.d[0]
  41f0f4:	add	x23, x23, x0
  41f0f8:	tbz	w21, #0, 41f134 <_obstack_memory_used@@Base+0x6424>
  41f0fc:	ldr	x0, [x2, x1, lsl #3]
  41f100:	add	x3, x1, #0x1
  41f104:	cmp	x21, x3
  41f108:	lsl	x3, x1, #3
  41f10c:	add	x23, x23, x0
  41f110:	b.le	41f134 <_obstack_memory_used@@Base+0x6424>
  41f114:	add	x2, x2, x3
  41f118:	add	x1, x1, #0x2
  41f11c:	cmp	x21, x1
  41f120:	ldr	x0, [x2, #8]
  41f124:	add	x23, x23, x0
  41f128:	b.le	41f134 <_obstack_memory_used@@Base+0x6424>
  41f12c:	ldr	x0, [x2, #16]
  41f130:	add	x23, x23, x0
  41f134:	ldr	x1, [sp, #104]
  41f138:	ldr	x0, [x1, #136]
  41f13c:	ldr	x1, [x1, #64]
  41f140:	and	x0, x23, x0
  41f144:	add	x0, x0, x0, lsl #1
  41f148:	lsl	x0, x0, #3
  41f14c:	add	x2, x1, x0
  41f150:	ldr	x6, [x1, x0]
  41f154:	cmp	x6, #0x0
  41f158:	b.le	41f1b8 <_obstack_memory_used@@Base+0x64a8>
  41f15c:	mov	x0, #0x0                   	// #0
  41f160:	ldr	x7, [x2, #16]
  41f164:	b	41f174 <_obstack_memory_used@@Base+0x6464>
  41f168:	add	x0, x0, #0x1
  41f16c:	cmp	x0, x6
  41f170:	b.eq	41f1b8 <_obstack_memory_used@@Base+0x64a8>  // b.none
  41f174:	ldr	x19, [x7, x0, lsl #3]
  41f178:	ldr	x1, [x19]
  41f17c:	cmp	x1, x23
  41f180:	b.ne	41f168 <_obstack_memory_used@@Base+0x6458>  // b.any
  41f184:	ldrb	w1, [x19, #104]
  41f188:	and	w1, w1, #0xf
  41f18c:	cmp	w1, w27
  41f190:	b.ne	41f168 <_obstack_memory_used@@Base+0x6458>  // b.any
  41f194:	ldr	x8, [x19, #80]
  41f198:	cbz	x8, 41f168 <_obstack_memory_used@@Base+0x6458>
  41f19c:	ldr	x1, [x8, #8]
  41f1a0:	cmp	x21, x1
  41f1a4:	b.eq	41f350 <_obstack_memory_used@@Base+0x6640>  // b.none
  41f1a8:	add	x0, x0, #0x1
  41f1ac:	cmp	x0, x6
  41f1b0:	b.ne	41f174 <_obstack_memory_used@@Base+0x6464>  // b.any
  41f1b4:	nop
  41f1b8:	mov	x1, #0x1                   	// #1
  41f1bc:	mov	x0, #0x70                  	// #112
  41f1c0:	bl	402910 <calloc@plt>
  41f1c4:	mov	x19, x0
  41f1c8:	cbz	x0, 41f458 <_obstack_memory_used@@Base+0x6748>
  41f1cc:	str	x21, [x0, #16]
  41f1d0:	add	x20, x0, #0x8
  41f1d4:	cmp	x21, #0x0
  41f1d8:	b.le	41f3e0 <_obstack_memory_used@@Base+0x66d0>
  41f1dc:	stp	x25, x26, [sp, #64]
  41f1e0:	lsl	x0, x21, #3
  41f1e4:	str	x21, [x19, #8]
  41f1e8:	str	x0, [sp, #112]
  41f1ec:	bl	402800 <malloc@plt>
  41f1f0:	str	x0, [x20, #16]
  41f1f4:	mov	x24, x0
  41f1f8:	cbz	x0, 41f4d4 <_obstack_memory_used@@Base+0x67c4>
  41f1fc:	ldr	x2, [sp, #112]
  41f200:	and	w1, w27, #0x1
  41f204:	ldr	x22, [x22, #16]
  41f208:	str	w1, [sp, #100]
  41f20c:	and	w1, w27, #0x2
  41f210:	add	x25, x0, #0x8
  41f214:	str	w1, [sp, #120]
  41f218:	mov	x1, x22
  41f21c:	bl	402650 <memcpy@plt>
  41f220:	mov	x28, #0x0                   	// #0
  41f224:	ldrb	w0, [x19, #104]
  41f228:	and	w1, w27, #0x4
  41f22c:	mov	x10, #0x0                   	// #0
  41f230:	str	x20, [x19, #80]
  41f234:	str	w1, [sp, #124]
  41f238:	bfxil	w0, w27, #0, #4
  41f23c:	strb	w0, [x19, #104]
  41f240:	ldr	x0, [sp, #104]
  41f244:	ldr	x26, [x0]
  41f248:	ldr	x2, [x22, x28, lsl #3]
  41f24c:	add	x2, x26, x2, lsl #4
  41f250:	ldr	w27, [x2, #8]
  41f254:	ldrb	w0, [x2, #8]
  41f258:	ubfx	x27, x27, #8, #10
  41f25c:	cmp	w27, #0x0
  41f260:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  41f264:	b.eq	41f2f8 <_obstack_memory_used@@Base+0x65e8>  // b.none
  41f268:	ldrb	w9, [x2, #10]
  41f26c:	cmp	w0, #0x2
  41f270:	ldrb	w2, [x19, #104]
  41f274:	ubfx	x9, x9, #4, #1
  41f278:	mov	w3, w2
  41f27c:	ubfx	x2, x2, #5, #1
  41f280:	orr	w2, w2, w9
  41f284:	bfi	w3, w2, #5, #1
  41f288:	strb	w3, [x19, #104]
  41f28c:	b.eq	41f3fc <_obstack_memory_used@@Base+0x66ec>  // b.none
  41f290:	cmp	w0, #0x4
  41f294:	b.eq	41f35c <_obstack_memory_used@@Base+0x664c>  // b.none
  41f298:	cbz	w27, 41f2f8 <_obstack_memory_used@@Base+0x65e8>
  41f29c:	ldr	x0, [x19, #80]
  41f2a0:	cmp	x20, x0
  41f2a4:	b.eq	41f368 <_obstack_memory_used@@Base+0x6658>  // b.none
  41f2a8:	tbz	w27, #0, 41f3b8 <_obstack_memory_used@@Base+0x66a8>
  41f2ac:	ldr	w0, [sp, #100]
  41f2b0:	cbz	w0, 41f2b8 <_obstack_memory_used@@Base+0x65a8>
  41f2b4:	tbz	w27, #1, 41f3c4 <_obstack_memory_used@@Base+0x66b4>
  41f2b8:	subs	x2, x28, x10
  41f2bc:	b.mi	41f2f4 <_obstack_memory_used@@Base+0x65e4>  // b.first
  41f2c0:	ldr	x3, [x19, #16]
  41f2c4:	cmp	x2, x3
  41f2c8:	b.ge	41f2f4 <_obstack_memory_used@@Base+0x65e4>  // b.tcont
  41f2cc:	sub	x3, x3, #0x1
  41f2d0:	str	x3, [x19, #16]
  41f2d4:	cmp	x2, x3
  41f2d8:	b.ge	41f2f4 <_obstack_memory_used@@Base+0x65e4>  // b.tcont
  41f2dc:	nop
  41f2e0:	ldr	x0, [x25, x2, lsl #3]
  41f2e4:	str	x0, [x24, x2, lsl #3]
  41f2e8:	add	x2, x2, #0x1
  41f2ec:	cmp	x2, x3
  41f2f0:	b.lt	41f2e0 <_obstack_memory_used@@Base+0x65d0>  // b.tstop
  41f2f4:	add	x10, x10, #0x1
  41f2f8:	add	x28, x28, #0x1
  41f2fc:	cmp	x21, x28
  41f300:	b.gt	41f248 <_obstack_memory_used@@Base+0x6538>
  41f304:	ldp	x25, x26, [sp, #64]
  41f308:	mov	x2, x23
  41f30c:	ldr	x0, [sp, #104]
  41f310:	mov	x1, x19
  41f314:	bl	419330 <_obstack_memory_used@@Base+0x620>
  41f318:	cbnz	w0, 41f408 <_obstack_memory_used@@Base+0x66f8>
  41f31c:	ldp	x23, x24, [sp, #48]
  41f320:	ldp	x27, x28, [sp, #80]
  41f324:	mov	x0, x19
  41f328:	ldp	x19, x20, [sp, #16]
  41f32c:	ldp	x21, x22, [sp, #32]
  41f330:	ldp	x29, x30, [sp], #144
  41f334:	ret
  41f338:	ldr	x3, [x8, #16]
  41f33c:	ldr	x2, [x22, #16]
  41f340:	ldr	x3, [x3, x1, lsl #3]
  41f344:	ldr	x2, [x2, x1, lsl #3]
  41f348:	cmp	x3, x2
  41f34c:	b.ne	41f168 <_obstack_memory_used@@Base+0x6458>  // b.any
  41f350:	subs	x1, x1, #0x1
  41f354:	b.pl	41f338 <_obstack_memory_used@@Base+0x6628>  // b.nfrst
  41f358:	b	41f31c <_obstack_memory_used@@Base+0x660c>
  41f35c:	orr	w3, w3, #0x40
  41f360:	strb	w3, [x19, #104]
  41f364:	b	41f298 <_obstack_memory_used@@Base+0x6588>
  41f368:	mov	x0, #0x18                  	// #24
  41f36c:	bl	402800 <malloc@plt>
  41f370:	mov	x2, x0
  41f374:	cbz	x0, 41f490 <_obstack_memory_used@@Base+0x6780>
  41f378:	ldr	x0, [sp, #112]
  41f37c:	stp	x21, x21, [x2]
  41f380:	str	x2, [x19, #80]
  41f384:	str	x2, [sp, #128]
  41f388:	bl	402800 <malloc@plt>
  41f38c:	ldr	x2, [sp, #128]
  41f390:	str	x0, [x2, #16]
  41f394:	cbz	x0, 41f4ec <_obstack_memory_used@@Base+0x67dc>
  41f398:	ldr	x2, [sp, #112]
  41f39c:	mov	x1, x22
  41f3a0:	bl	402650 <memcpy@plt>
  41f3a4:	ldrb	w0, [x19, #104]
  41f3a8:	mov	x10, #0x0                   	// #0
  41f3ac:	orr	w0, w0, #0xffffff80
  41f3b0:	strb	w0, [x19, #104]
  41f3b4:	tbnz	w27, #0, 41f2ac <_obstack_memory_used@@Base+0x659c>
  41f3b8:	tbz	w27, #1, 41f3c4 <_obstack_memory_used@@Base+0x66b4>
  41f3bc:	ldr	w0, [sp, #100]
  41f3c0:	cbnz	w0, 41f2b8 <_obstack_memory_used@@Base+0x65a8>
  41f3c4:	tbz	w27, #4, 41f3d0 <_obstack_memory_used@@Base+0x66c0>
  41f3c8:	ldr	w0, [sp, #120]
  41f3cc:	cbz	w0, 41f2b8 <_obstack_memory_used@@Base+0x65a8>
  41f3d0:	tbz	w27, #6, 41f2f8 <_obstack_memory_used@@Base+0x65e8>
  41f3d4:	ldr	w0, [sp, #124]
  41f3d8:	cbnz	w0, 41f2f8 <_obstack_memory_used@@Base+0x65e8>
  41f3dc:	b	41f2b8 <_obstack_memory_used@@Base+0x65a8>
  41f3e0:	stp	xzr, xzr, [x0, #8]
  41f3e4:	str	xzr, [x20, #16]
  41f3e8:	ldrb	w0, [x0, #104]
  41f3ec:	str	x20, [x19, #80]
  41f3f0:	bfxil	w0, w27, #0, #4
  41f3f4:	strb	w0, [x19, #104]
  41f3f8:	b	41f308 <_obstack_memory_used@@Base+0x65f8>
  41f3fc:	orr	w3, w3, #0x10
  41f400:	strb	w3, [x19, #104]
  41f404:	b	41f298 <_obstack_memory_used@@Base+0x6588>
  41f408:	ldr	x0, [x19, #48]
  41f40c:	bl	402ae0 <free@plt>
  41f410:	ldr	x0, [x19, #72]
  41f414:	bl	402ae0 <free@plt>
  41f418:	ldr	x0, [x19, #80]
  41f41c:	cmp	x20, x0
  41f420:	b.eq	41f434 <_obstack_memory_used@@Base+0x6724>  // b.none
  41f424:	ldr	x0, [x0, #16]
  41f428:	bl	402ae0 <free@plt>
  41f42c:	ldr	x0, [x19, #80]
  41f430:	bl	402ae0 <free@plt>
  41f434:	ldr	x0, [x19, #24]
  41f438:	bl	402ae0 <free@plt>
  41f43c:	ldr	x0, [x19, #96]
  41f440:	bl	402ae0 <free@plt>
  41f444:	ldr	x0, [x19, #88]
  41f448:	bl	402ae0 <free@plt>
  41f44c:	mov	x0, x19
  41f450:	bl	402ae0 <free@plt>
  41f454:	nop
  41f458:	ldr	x1, [sp, #136]
  41f45c:	mov	w0, #0xc                   	// #12
  41f460:	mov	x19, #0x0                   	// #0
  41f464:	ldp	x23, x24, [sp, #48]
  41f468:	ldp	x27, x28, [sp, #80]
  41f46c:	str	w0, [x1]
  41f470:	b	41f324 <_obstack_memory_used@@Base+0x6614>
  41f474:	str	wzr, [x0]
  41f478:	mov	x19, #0x0                   	// #0
  41f47c:	mov	x0, x19
  41f480:	ldp	x19, x20, [sp, #16]
  41f484:	ldp	x21, x22, [sp, #32]
  41f488:	ldp	x29, x30, [sp], #144
  41f48c:	ret
  41f490:	ldr	x0, [x19, #48]
  41f494:	bl	402ae0 <free@plt>
  41f498:	ldr	x0, [x19, #72]
  41f49c:	bl	402ae0 <free@plt>
  41f4a0:	ldr	x0, [x19, #80]
  41f4a4:	cmp	x20, x0
  41f4a8:	b.eq	41f4bc <_obstack_memory_used@@Base+0x67ac>  // b.none
  41f4ac:	ldr	x0, [x0, #16]
  41f4b0:	bl	402ae0 <free@plt>
  41f4b4:	ldr	x0, [x19, #80]
  41f4b8:	bl	402ae0 <free@plt>
  41f4bc:	ldr	x0, [x19, #24]
  41f4c0:	bl	402ae0 <free@plt>
  41f4c4:	ldr	x0, [x19, #96]
  41f4c8:	bl	402ae0 <free@plt>
  41f4cc:	ldr	x0, [x19, #88]
  41f4d0:	bl	402ae0 <free@plt>
  41f4d4:	mov	x0, x19
  41f4d8:	bl	402ae0 <free@plt>
  41f4dc:	ldp	x25, x26, [sp, #64]
  41f4e0:	b	41f458 <_obstack_memory_used@@Base+0x6748>
  41f4e4:	mov	x1, #0x0                   	// #0
  41f4e8:	b	41f0fc <_obstack_memory_used@@Base+0x63ec>
  41f4ec:	stp	xzr, xzr, [x2]
  41f4f0:	ldr	x0, [x19, #48]
  41f4f4:	b	41f494 <_obstack_memory_used@@Base+0x6784>
  41f4f8:	stp	x29, x30, [sp, #-240]!
  41f4fc:	mov	x7, x1
  41f500:	mov	x29, sp
  41f504:	stp	x27, x28, [sp, #80]
  41f508:	ldr	x27, [x0, #152]
  41f50c:	stp	x19, x20, [sp, #16]
  41f510:	mov	x20, x2
  41f514:	stp	x21, x22, [sp, #32]
  41f518:	mov	x19, x3
  41f51c:	stp	x4, x1, [sp, #144]
  41f520:	ldr	x22, [x1, #8]
  41f524:	lsl	x1, x2, #4
  41f528:	ldr	x2, [x27]
  41f52c:	stp	x25, x26, [sp, #64]
  41f530:	mov	x26, x0
  41f534:	ldrsw	x0, [x0, #224]
  41f538:	ldr	x1, [x2, x1]
  41f53c:	stp	x23, x24, [sp, #48]
  41f540:	add	x0, x0, x5
  41f544:	str	x5, [sp, #120]
  41f548:	cmp	x0, x22
  41f54c:	str	x1, [sp, #128]
  41f550:	str	w6, [sp, #140]
  41f554:	str	wzr, [sp, #184]
  41f558:	b.ge	41f9f4 <_obstack_memory_used@@Base+0x6ce4>  // b.tcont
  41f55c:	ldr	x0, [sp, #152]
  41f560:	ldr	w2, [x26, #160]
  41f564:	ldr	x21, [x0]
  41f568:	ldr	x22, [x0, #16]
  41f56c:	ldr	x0, [x26, #72]
  41f570:	str	x0, [sp, #168]
  41f574:	ldr	x0, [x26, #184]
  41f578:	str	x0, [sp, #160]
  41f57c:	cbnz	x21, 41f634 <_obstack_memory_used@@Base+0x6924>
  41f580:	str	x19, [x26, #72]
  41f584:	sub	x1, x19, #0x1
  41f588:	str	x22, [x26, #184]
  41f58c:	mov	x0, x26
  41f590:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41f594:	mov	w23, w0
  41f598:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  41f59c:	ldr	q0, [x0, #1088]
  41f5a0:	mov	x0, #0x8                   	// #8
  41f5a4:	str	q0, [sp, #192]
  41f5a8:	bl	402800 <malloc@plt>
  41f5ac:	mov	x4, x0
  41f5b0:	str	x0, [sp, #208]
  41f5b4:	cbz	x0, 41fa4c <_obstack_memory_used@@Base+0x6d3c>
  41f5b8:	ldr	w3, [sp, #140]
  41f5bc:	add	x22, sp, #0xc0
  41f5c0:	ldr	x2, [sp, #128]
  41f5c4:	str	x20, [x4]
  41f5c8:	mov	x1, x22
  41f5cc:	mov	x0, x27
  41f5d0:	str	wzr, [sp, #184]
  41f5d4:	bl	41d9e0 <_obstack_memory_used@@Base+0x4cd0>
  41f5d8:	str	w0, [sp, #184]
  41f5dc:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f5e0:	ldr	x0, [sp, #200]
  41f5e4:	mov	x21, x19
  41f5e8:	cbz	x0, 41f60c <_obstack_memory_used@@Base+0x68fc>
  41f5ec:	ldr	w4, [sp, #140]
  41f5f0:	mov	x2, x21
  41f5f4:	ldr	x3, [sp, #128]
  41f5f8:	mov	x1, x22
  41f5fc:	mov	x0, x26
  41f600:	bl	41eca8 <_obstack_memory_used@@Base+0x5f98>
  41f604:	str	w0, [sp, #184]
  41f608:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f60c:	mov	w3, w23
  41f610:	mov	x2, x22
  41f614:	mov	x1, x27
  41f618:	add	x0, sp, #0xb8
  41f61c:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  41f620:	mov	x19, x0
  41f624:	cbz	x0, 41fa54 <_obstack_memory_used@@Base+0x6d44>
  41f628:	ldr	x0, [x26, #184]
  41f62c:	str	x19, [x0, x21, lsl #3]
  41f630:	b	41f66c <_obstack_memory_used@@Base+0x695c>
  41f634:	str	x21, [x26, #72]
  41f638:	sub	x1, x21, #0x1
  41f63c:	str	x22, [x26, #184]
  41f640:	mov	x0, x26
  41f644:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41f648:	mov	w23, w0
  41f64c:	cmp	x21, x19
  41f650:	b.eq	41f598 <_obstack_memory_used@@Base+0x6888>  // b.none
  41f654:	ldr	x19, [x22, x21, lsl #3]
  41f658:	cbz	x19, 41f664 <_obstack_memory_used@@Base+0x6954>
  41f65c:	ldrb	w1, [x19, #104]
  41f660:	tbnz	w1, #6, 41f974 <_obstack_memory_used@@Base+0x6c64>
  41f664:	stp	xzr, xzr, [sp, #192]
  41f668:	str	xzr, [sp, #208]
  41f66c:	ldr	x0, [sp, #120]
  41f670:	cmp	x21, x0
  41f674:	b.ge	41f7f0 <_obstack_memory_used@@Base+0x6ae0>  // b.tcont
  41f678:	add	x22, x21, #0x1
  41f67c:	str	xzr, [sp, #96]
  41f680:	ldr	x1, [sp, #96]
  41f684:	sub	x21, x22, #0x1
  41f688:	ldrsw	x0, [x26, #224]
  41f68c:	cmp	x1, x0
  41f690:	b.gt	41f7f0 <_obstack_memory_used@@Base+0x6ae0>
  41f694:	ldr	x0, [x26, #184]
  41f698:	lsl	x1, x22, #3
  41f69c:	str	x1, [sp, #104]
  41f6a0:	str	xzr, [sp, #200]
  41f6a4:	ldr	x1, [x0, x22, lsl #3]
  41f6a8:	cbz	x1, 41f968 <_obstack_memory_used@@Base+0x6c58>
  41f6ac:	add	x1, x1, #0x8
  41f6b0:	add	x0, sp, #0xc0
  41f6b4:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41f6b8:	str	w0, [sp, #184]
  41f6bc:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f6c0:	cbz	x19, 41f758 <_obstack_memory_used@@Base+0x6a48>
  41f6c4:	ldr	x0, [x19, #40]
  41f6c8:	str	wzr, [sp, #188]
  41f6cc:	stp	xzr, xzr, [sp, #216]
  41f6d0:	add	x19, x19, #0x20
  41f6d4:	cmp	x0, #0x0
  41f6d8:	str	xzr, [sp, #232]
  41f6dc:	ldr	x23, [x26, #152]
  41f6e0:	b.le	41fa80 <_obstack_memory_used@@Base+0x6d70>
  41f6e4:	add	x0, x23, #0xd8
  41f6e8:	mov	x24, #0x0                   	// #0
  41f6ec:	str	x0, [sp, #112]
  41f6f0:	ldr	x1, [x19, #16]
  41f6f4:	ldr	x0, [x23]
  41f6f8:	ldr	x28, [x1, x24, lsl #3]
  41f6fc:	lsl	x20, x28, #4
  41f700:	add	x1, x0, x20
  41f704:	ldrb	w2, [x1, #10]
  41f708:	tbnz	w2, #4, 41f8b0 <_obstack_memory_used@@Base+0x6ba0>
  41f70c:	mov	x2, x21
  41f710:	mov	x0, x26
  41f714:	bl	41a688 <_obstack_memory_used@@Base+0x1978>
  41f718:	tst	w0, #0xff
  41f71c:	b.eq	41f73c <_obstack_memory_used@@Base+0x6a2c>  // b.none
  41f720:	lsl	x25, x28, #3
  41f724:	ldr	x1, [x23, #24]
  41f728:	add	x0, sp, #0xc0
  41f72c:	ldr	x1, [x1, x25]
  41f730:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41f734:	tst	w0, #0xff
  41f738:	b.eq	41f878 <_obstack_memory_used@@Base+0x6b68>  // b.none
  41f73c:	ldr	x0, [x19, #8]
  41f740:	add	x24, x24, #0x1
  41f744:	cmp	x24, x0
  41f748:	b.lt	41f6f0 <_obstack_memory_used@@Base+0x69e0>  // b.tstop
  41f74c:	ldr	x0, [sp, #232]
  41f750:	bl	402ae0 <free@plt>
  41f754:	str	wzr, [sp, #184]
  41f758:	ldr	x0, [sp, #200]
  41f75c:	mov	x20, x22
  41f760:	cbz	x0, 41f7a0 <_obstack_memory_used@@Base+0x6a90>
  41f764:	ldr	w3, [sp, #140]
  41f768:	add	x1, sp, #0xc0
  41f76c:	ldr	x2, [sp, #128]
  41f770:	mov	x0, x27
  41f774:	bl	41d9e0 <_obstack_memory_used@@Base+0x4cd0>
  41f778:	str	w0, [sp, #184]
  41f77c:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f780:	ldr	w4, [sp, #140]
  41f784:	mov	x2, x22
  41f788:	ldr	x3, [sp, #128]
  41f78c:	add	x1, sp, #0xc0
  41f790:	mov	x0, x26
  41f794:	bl	41eca8 <_obstack_memory_used@@Base+0x5f98>
  41f798:	str	w0, [sp, #184]
  41f79c:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f7a0:	ldr	w2, [x26, #160]
  41f7a4:	mov	x1, x21
  41f7a8:	mov	x0, x26
  41f7ac:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  41f7b0:	mov	w3, w0
  41f7b4:	add	x2, sp, #0xc0
  41f7b8:	mov	x1, x27
  41f7bc:	add	x0, sp, #0xb8
  41f7c0:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  41f7c4:	mov	x19, x0
  41f7c8:	cbz	x0, 41f9bc <_obstack_memory_used@@Base+0x6cac>
  41f7cc:	ldr	x1, [sp, #104]
  41f7d0:	str	xzr, [sp, #96]
  41f7d4:	ldr	x0, [x26, #184]
  41f7d8:	str	x19, [x0, x1]
  41f7dc:	ldr	x0, [sp, #120]
  41f7e0:	add	x22, x22, #0x1
  41f7e4:	cmp	x20, x0
  41f7e8:	b.lt	41f680 <_obstack_memory_used@@Base+0x6970>  // b.tstop
  41f7ec:	mov	x21, x20
  41f7f0:	ldr	x0, [sp, #208]
  41f7f4:	bl	402ae0 <free@plt>
  41f7f8:	ldr	x1, [sp, #120]
  41f7fc:	ldr	x0, [x26, #184]
  41f800:	ldr	x3, [x0, x1, lsl #3]
  41f804:	cbz	x3, 41fa60 <_obstack_memory_used@@Base+0x6d50>
  41f808:	ldr	x0, [sp, #152]
  41f80c:	ldr	x1, [sp, #168]
  41f810:	str	x21, [x0]
  41f814:	mov	w0, #0x1                   	// #1
  41f818:	str	x1, [x26, #72]
  41f81c:	ldr	x1, [sp, #160]
  41f820:	str	x1, [x26, #184]
  41f824:	ldr	x1, [x3, #16]
  41f828:	cmp	x1, #0x0
  41f82c:	b.le	41f894 <_obstack_memory_used@@Base+0x6b84>
  41f830:	sub	x1, x1, #0x1
  41f834:	mov	x2, #0x0                   	// #0
  41f838:	ldr	x4, [x3, #24]
  41f83c:	b	41f858 <_obstack_memory_used@@Base+0x6b48>
  41f840:	lsr	x0, x0, #1
  41f844:	ldr	x5, [sp, #144]
  41f848:	ldr	x3, [x4, x0, lsl #3]
  41f84c:	cmp	x5, x3
  41f850:	b.gt	41fa44 <_obstack_memory_used@@Base+0x6d34>
  41f854:	mov	x1, x0
  41f858:	add	x0, x1, x2
  41f85c:	cmp	x1, x2
  41f860:	b.hi	41f840 <_obstack_memory_used@@Base+0x6b30>  // b.pmore
  41f864:	ldr	x0, [x4, x2, lsl #3]
  41f868:	ldr	x1, [sp, #144]
  41f86c:	cmp	x0, x1
  41f870:	cset	w0, ne  // ne = any
  41f874:	b	41f894 <_obstack_memory_used@@Base+0x6b84>
  41f878:	ldr	x0, [sp, #232]
  41f87c:	bl	402ae0 <free@plt>
  41f880:	mov	w0, #0xc                   	// #12
  41f884:	str	w0, [sp, #184]
  41f888:	ldr	x0, [sp, #208]
  41f88c:	bl	402ae0 <free@plt>
  41f890:	ldr	w0, [sp, #184]
  41f894:	ldp	x19, x20, [sp, #16]
  41f898:	ldp	x21, x22, [sp, #32]
  41f89c:	ldp	x23, x24, [sp, #48]
  41f8a0:	ldp	x25, x26, [sp, #64]
  41f8a4:	ldp	x27, x28, [sp, #80]
  41f8a8:	ldp	x29, x30, [sp], #240
  41f8ac:	ret
  41f8b0:	ldr	x1, [sp, #112]
  41f8b4:	mov	x4, x21
  41f8b8:	mov	x3, x26
  41f8bc:	mov	x2, x28
  41f8c0:	bl	41cb40 <_obstack_memory_used@@Base+0x3e30>
  41f8c4:	cmp	w0, #0x1
  41f8c8:	b.le	41f958 <_obstack_memory_used@@Base+0x6c48>
  41f8cc:	ldr	x1, [x26, #184]
  41f8d0:	add	x20, x21, w0, sxtw
  41f8d4:	ldr	x0, [x23, #24]
  41f8d8:	lsl	x25, x28, #3
  41f8dc:	ldr	x1, [x1, x20, lsl #3]
  41f8e0:	ldr	x28, [x0, x28, lsl #3]
  41f8e4:	str	xzr, [sp, #224]
  41f8e8:	cbz	x1, 41f900 <_obstack_memory_used@@Base+0x6bf0>
  41f8ec:	add	x1, x1, #0x8
  41f8f0:	add	x0, sp, #0xd8
  41f8f4:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41f8f8:	str	w0, [sp, #188]
  41f8fc:	cbnz	w0, 41f940 <_obstack_memory_used@@Base+0x6c30>
  41f900:	mov	x1, x28
  41f904:	add	x0, sp, #0xd8
  41f908:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  41f90c:	tst	w0, #0xff
  41f910:	b.eq	41f878 <_obstack_memory_used@@Base+0x6b68>  // b.none
  41f914:	ldr	x28, [x26, #184]
  41f918:	mov	x1, x23
  41f91c:	add	x2, sp, #0xd8
  41f920:	add	x0, sp, #0xbc
  41f924:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  41f928:	ldr	x1, [x26, #184]
  41f92c:	str	x0, [x28, x20, lsl #3]
  41f930:	ldr	x0, [x1, x20, lsl #3]
  41f934:	cbnz	x0, 41f724 <_obstack_memory_used@@Base+0x6a14>
  41f938:	ldr	w0, [sp, #188]
  41f93c:	cbz	w0, 41f724 <_obstack_memory_used@@Base+0x6a14>
  41f940:	ldr	x0, [sp, #232]
  41f944:	bl	402ae0 <free@plt>
  41f948:	ldr	w0, [sp, #188]
  41f94c:	str	w0, [sp, #184]
  41f950:	cbz	w0, 41f758 <_obstack_memory_used@@Base+0x6a48>
  41f954:	b	41f888 <_obstack_memory_used@@Base+0x6b78>
  41f958:	cbnz	w0, 41f720 <_obstack_memory_used@@Base+0x6a10>
  41f95c:	ldr	x1, [x23]
  41f960:	add	x1, x1, x20
  41f964:	b	41f70c <_obstack_memory_used@@Base+0x69fc>
  41f968:	cbnz	x19, 41f6c4 <_obstack_memory_used@@Base+0x69b4>
  41f96c:	mov	x20, x22
  41f970:	b	41f7a0 <_obstack_memory_used@@Base+0x6a90>
  41f974:	ldr	x0, [x19, #16]
  41f978:	str	x0, [sp, #200]
  41f97c:	cmp	x0, #0x0
  41f980:	b.le	41f9e0 <_obstack_memory_used@@Base+0x6cd0>
  41f984:	lsl	x22, x0, #3
  41f988:	str	x0, [sp, #192]
  41f98c:	mov	x0, x22
  41f990:	bl	402800 <malloc@plt>
  41f994:	str	x0, [sp, #208]
  41f998:	cbz	x0, 41fa4c <_obstack_memory_used@@Base+0x6d3c>
  41f99c:	ldr	x1, [x19, #24]
  41f9a0:	mov	x2, x22
  41f9a4:	add	x22, sp, #0xc0
  41f9a8:	bl	402650 <memcpy@plt>
  41f9ac:	str	wzr, [sp, #184]
  41f9b0:	ldrb	w0, [x19, #104]
  41f9b4:	tbz	w0, #6, 41f66c <_obstack_memory_used@@Base+0x695c>
  41f9b8:	b	41f5ec <_obstack_memory_used@@Base+0x68dc>
  41f9bc:	ldr	w0, [sp, #184]
  41f9c0:	cbnz	w0, 41f888 <_obstack_memory_used@@Base+0x6b78>
  41f9c4:	ldr	x1, [sp, #96]
  41f9c8:	ldr	x0, [x26, #184]
  41f9cc:	add	x1, x1, #0x1
  41f9d0:	str	x1, [sp, #96]
  41f9d4:	ldr	x1, [sp, #104]
  41f9d8:	str	xzr, [x0, x1]
  41f9dc:	b	41f7dc <_obstack_memory_used@@Base+0x6acc>
  41f9e0:	add	x22, sp, #0xc0
  41f9e4:	str	wzr, [sp, #184]
  41f9e8:	stp	xzr, xzr, [sp, #192]
  41f9ec:	str	xzr, [sp, #208]
  41f9f0:	b	41f60c <_obstack_memory_used@@Base+0x68fc>
  41f9f4:	add	x21, x0, #0x1
  41f9f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41f9fc:	sub	x0, x0, x22
  41fa00:	cmp	x0, x21
  41fa04:	b.lt	41fa4c <_obstack_memory_used@@Base+0x6d3c>  // b.tstop
  41fa08:	add	x23, x22, x21
  41fa0c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41fa10:	cmp	x23, x0
  41fa14:	b.hi	41fa4c <_obstack_memory_used@@Base+0x6d3c>  // b.pmore
  41fa18:	ldr	x0, [x7, #16]
  41fa1c:	mov	x24, x7
  41fa20:	lsl	x1, x23, #3
  41fa24:	bl	402930 <realloc@plt>
  41fa28:	cbz	x0, 41fa4c <_obstack_memory_used@@Base+0x6d3c>
  41fa2c:	stp	x23, x0, [x24, #8]
  41fa30:	lsl	x2, x21, #3
  41fa34:	add	x0, x0, x22, lsl #3
  41fa38:	mov	w1, #0x0                   	// #0
  41fa3c:	bl	4028d0 <memset@plt>
  41fa40:	b	41f55c <_obstack_memory_used@@Base+0x684c>
  41fa44:	add	x2, x0, #0x1
  41fa48:	b	41f858 <_obstack_memory_used@@Base+0x6b48>
  41fa4c:	mov	w0, #0xc                   	// #12
  41fa50:	b	41f894 <_obstack_memory_used@@Base+0x6b84>
  41fa54:	ldr	w0, [sp, #184]
  41fa58:	cbz	w0, 41f628 <_obstack_memory_used@@Base+0x6918>
  41fa5c:	b	41f888 <_obstack_memory_used@@Base+0x6b78>
  41fa60:	ldr	x0, [sp, #152]
  41fa64:	ldr	x1, [sp, #168]
  41fa68:	str	x21, [x0]
  41fa6c:	mov	w0, #0x1                   	// #1
  41fa70:	str	x1, [x26, #72]
  41fa74:	ldr	x1, [sp, #160]
  41fa78:	str	x1, [x26, #184]
  41fa7c:	b	41f894 <_obstack_memory_used@@Base+0x6b84>
  41fa80:	mov	x0, #0x0                   	// #0
  41fa84:	b	41f750 <_obstack_memory_used@@Base+0x6a40>
  41fa88:	stp	x29, x30, [sp, #-80]!
  41fa8c:	mov	x6, x2
  41fa90:	mov	x5, x4
  41fa94:	mov	x29, sp
  41fa98:	stp	x19, x20, [sp, #16]
  41fa9c:	mov	x20, x4
  41faa0:	mov	x4, x3
  41faa4:	stp	x21, x22, [sp, #32]
  41faa8:	mov	x21, x2
  41faac:	mov	x22, x1
  41fab0:	stp	x23, x24, [sp, #48]
  41fab4:	mov	x24, x3
  41fab8:	mov	x19, x0
  41fabc:	ldr	x3, [x2, #8]
  41fac0:	ldr	x2, [x6], #16
  41fac4:	mov	x1, x6
  41fac8:	mov	w6, #0x8                   	// #8
  41facc:	bl	41f4f8 <_obstack_memory_used@@Base+0x67e8>
  41fad0:	mov	w23, w0
  41fad4:	cbz	w0, 41faf0 <_obstack_memory_used@@Base+0x6de0>
  41fad8:	mov	w0, w23
  41fadc:	ldp	x19, x20, [sp, #16]
  41fae0:	ldp	x21, x22, [sp, #32]
  41fae4:	ldp	x23, x24, [sp, #48]
  41fae8:	ldp	x29, x30, [sp], #80
  41faec:	ret
  41faf0:	ldp	x2, x1, [x19, #200]
  41faf4:	stp	x25, x26, [sp, #64]
  41faf8:	ldr	x25, [x21, #8]
  41fafc:	ldr	x26, [x22]
  41fb00:	cmp	x2, x1
  41fb04:	mov	x4, x25
  41fb08:	ldr	x0, [x19, #216]
  41fb0c:	b.ge	41fbf4 <_obstack_memory_used@@Base+0x6ee4>  // b.tcont
  41fb10:	add	x1, x2, x2, lsl #2
  41fb14:	cmp	x2, #0x0
  41fb18:	lsl	x1, x1, #3
  41fb1c:	b.le	41fb34 <_obstack_memory_used@@Base+0x6e24>
  41fb20:	sub	x3, x1, #0x28
  41fb24:	add	x3, x0, x3
  41fb28:	ldr	x5, [x3, #8]
  41fb2c:	cmp	x20, x5
  41fb30:	b.eq	41fbe8 <_obstack_memory_used@@Base+0x6ed8>  // b.none
  41fb34:	add	x6, x0, x1
  41fb38:	cmp	x26, x25
  41fb3c:	str	x24, [x0, x1]
  41fb40:	csetm	w1, eq  // eq = none
  41fb44:	add	x2, x2, #0x1
  41fb48:	sub	x0, x25, x26
  41fb4c:	stp	x20, x26, [x6, #8]
  41fb50:	str	x25, [x6, #24]
  41fb54:	strh	w1, [x6, #34]
  41fb58:	str	x2, [x19, #200]
  41fb5c:	strb	wzr, [x6, #32]
  41fb60:	ldrsw	x1, [x19, #224]
  41fb64:	cmp	x1, x0
  41fb68:	b.ge	41fb74 <_obstack_memory_used@@Base+0x6e64>  // b.tcont
  41fb6c:	sub	w1, w25, w26
  41fb70:	str	w1, [x19, #224]
  41fb74:	ldr	x5, [x22]
  41fb78:	add	x4, x20, x4
  41fb7c:	ldr	x0, [x19, #64]
  41fb80:	sub	x20, x4, x5
  41fb84:	ldr	x21, [x19, #192]
  41fb88:	cmp	x20, x0
  41fb8c:	b.lt	41fb9c <_obstack_memory_used@@Base+0x6e8c>  // b.tstop
  41fb90:	ldr	x1, [x19, #88]
  41fb94:	cmp	x0, x1
  41fb98:	b.lt	41fbb4 <_obstack_memory_used@@Base+0x6ea4>  // b.tstop
  41fb9c:	ldr	x0, [x19, #48]
  41fba0:	cmp	x20, x0
  41fba4:	b.lt	41fbc4 <_obstack_memory_used@@Base+0x6eb4>  // b.tstop
  41fba8:	ldr	x1, [x19, #88]
  41fbac:	cmp	x0, x1
  41fbb0:	b.ge	41fbc4 <_obstack_memory_used@@Base+0x6eb4>  // b.tcont
  41fbb4:	add	w1, w20, #0x1
  41fbb8:	mov	x0, x19
  41fbbc:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  41fbc0:	cbnz	w0, 41fc78 <_obstack_memory_used@@Base+0x6f68>
  41fbc4:	cmp	x20, x21
  41fbc8:	b.gt	41fc3c <_obstack_memory_used@@Base+0x6f2c>
  41fbcc:	mov	w0, w23
  41fbd0:	ldp	x19, x20, [sp, #16]
  41fbd4:	ldp	x21, x22, [sp, #32]
  41fbd8:	ldp	x23, x24, [sp, #48]
  41fbdc:	ldp	x25, x26, [sp, #64]
  41fbe0:	ldp	x29, x30, [sp], #80
  41fbe4:	ret
  41fbe8:	mov	w5, #0x1                   	// #1
  41fbec:	strb	w5, [x3, #32]
  41fbf0:	b	41fb34 <_obstack_memory_used@@Base+0x6e24>
  41fbf4:	add	x1, x1, x1, lsl #2
  41fbf8:	lsl	x1, x1, #4
  41fbfc:	bl	402930 <realloc@plt>
  41fc00:	cbz	x0, 41fc84 <_obstack_memory_used@@Base+0x6f74>
  41fc04:	ldp	x3, x2, [x19, #200]
  41fc08:	str	x0, [x19, #216]
  41fc0c:	mov	w1, #0x0                   	// #0
  41fc10:	add	x3, x3, x3, lsl #2
  41fc14:	add	x2, x2, x2, lsl #2
  41fc18:	add	x0, x0, x3, lsl #3
  41fc1c:	lsl	x2, x2, #3
  41fc20:	bl	4028d0 <memset@plt>
  41fc24:	ldp	x2, x1, [x19, #200]
  41fc28:	ldr	x4, [x21, #8]
  41fc2c:	ldr	x0, [x19, #216]
  41fc30:	lsl	x1, x1, #1
  41fc34:	str	x1, [x19, #208]
  41fc38:	b	41fb10 <_obstack_memory_used@@Base+0x6e00>
  41fc3c:	ldr	x0, [x19, #184]
  41fc40:	add	x3, x21, #0x1
  41fc44:	sub	x2, x20, x21
  41fc48:	mov	w1, #0x0                   	// #0
  41fc4c:	lsl	x2, x2, #3
  41fc50:	add	x0, x0, x3, lsl #3
  41fc54:	bl	4028d0 <memset@plt>
  41fc58:	ldp	x25, x26, [sp, #64]
  41fc5c:	str	x20, [x19, #192]
  41fc60:	mov	w0, w23
  41fc64:	ldp	x19, x20, [sp, #16]
  41fc68:	ldp	x21, x22, [sp, #32]
  41fc6c:	ldp	x23, x24, [sp, #48]
  41fc70:	ldp	x29, x30, [sp], #80
  41fc74:	ret
  41fc78:	mov	w23, w0
  41fc7c:	ldp	x25, x26, [sp, #64]
  41fc80:	b	41fad8 <_obstack_memory_used@@Base+0x6dc8>
  41fc84:	ldr	x0, [x19, #216]
  41fc88:	mov	w23, #0xc                   	// #12
  41fc8c:	bl	402ae0 <free@plt>
  41fc90:	ldp	x25, x26, [sp, #64]
  41fc94:	b	41fad8 <_obstack_memory_used@@Base+0x6dc8>
  41fc98:	stp	x29, x30, [sp, #-224]!
  41fc9c:	mov	x29, sp
  41fca0:	stp	x23, x24, [sp, #48]
  41fca4:	mov	x24, x0
  41fca8:	mov	x0, #0x3800                	// #14336
  41fcac:	str	x1, [sp, #144]
  41fcb0:	bl	402800 <malloc@plt>
  41fcb4:	str	x0, [sp, #104]
  41fcb8:	cbz	x0, 420550 <_obstack_memory_used@@Base+0x7840>
  41fcbc:	mov	x1, #0x1800                	// #6144
  41fcc0:	stp	x19, x20, [sp, #16]
  41fcc4:	add	x20, x0, x1
  41fcc8:	ldr	x1, [sp, #144]
  41fccc:	stp	xzr, xzr, [sp, #192]
  41fcd0:	add	x23, x1, #0x8
  41fcd4:	stp	xzr, xzr, [sp, #208]
  41fcd8:	stp	xzr, xzr, [x1, #88]
  41fcdc:	ldr	x1, [x23, #8]
  41fce0:	cmp	x1, #0x0
  41fce4:	b.le	4205c4 <_obstack_memory_used@@Base+0x78b4>
  41fce8:	mov	x19, #0x0                   	// #0
  41fcec:	stp	x21, x22, [sp, #32]
  41fcf0:	mov	x22, #0x0                   	// #0
  41fcf4:	stp	x25, x26, [sp, #64]
  41fcf8:	stp	x27, x28, [sp, #80]
  41fcfc:	lsl	x1, x22, #3
  41fd00:	ldr	x0, [x23, #16]
  41fd04:	str	x1, [sp, #120]
  41fd08:	ldr	x2, [x24]
  41fd0c:	ldr	x1, [x0, x22, lsl #3]
  41fd10:	lsl	x1, x1, #4
  41fd14:	add	x21, x2, x1
  41fd18:	ldr	w0, [x21, #8]
  41fd1c:	ldrb	w10, [x21, #8]
  41fd20:	ubfx	x0, x0, #8, #10
  41fd24:	cmp	w10, #0x1
  41fd28:	b.eq	41ff8c <_obstack_memory_used@@Base+0x727c>  // b.none
  41fd2c:	cmp	w10, #0x3
  41fd30:	b.eq	420484 <_obstack_memory_used@@Base+0x7774>  // b.none
  41fd34:	cmp	w10, #0x5
  41fd38:	b.eq	420350 <_obstack_memory_used@@Base+0x7640>  // b.none
  41fd3c:	cmp	w10, #0x7
  41fd40:	b.eq	420454 <_obstack_memory_used@@Base+0x7744>  // b.none
  41fd44:	ldr	x0, [x23, #8]
  41fd48:	add	x22, x22, #0x1
  41fd4c:	cmp	x22, x0
  41fd50:	b.lt	41fcfc <_obstack_memory_used@@Base+0x6fec>  // b.tstop
  41fd54:	cmp	x19, #0x0
  41fd58:	b.le	4206dc <_obstack_memory_used@@Base+0x79cc>
  41fd5c:	add	x23, x19, #0x1
  41fd60:	stp	x23, xzr, [sp, #168]
  41fd64:	lsl	x27, x19, #1
  41fd68:	lsl	x23, x23, #3
  41fd6c:	mov	x0, x23
  41fd70:	bl	402800 <malloc@plt>
  41fd74:	str	x0, [sp, #184]
  41fd78:	mov	x25, x0
  41fd7c:	cbz	x0, 4202cc <_obstack_memory_used@@Base+0x75bc>
  41fd80:	add	x26, x27, x19
  41fd84:	str	wzr, [sp, #164]
  41fd88:	lsl	x21, x26, #3
  41fd8c:	mov	x0, x21
  41fd90:	bl	402800 <malloc@plt>
  41fd94:	mov	x22, x0
  41fd98:	cbz	x0, 4202cc <_obstack_memory_used@@Base+0x75bc>
  41fd9c:	ldr	x0, [sp, #104]
  41fda0:	sub	x23, x23, #0x8
  41fda4:	mov	x25, x20
  41fda8:	str	wzr, [sp, #136]
  41fdac:	add	x26, x0, #0x8
  41fdb0:	add	x0, x22, x23
  41fdb4:	stp	x20, x0, [sp, #112]
  41fdb8:	add	x0, x0, x23
  41fdbc:	mov	x23, #0x0                   	// #0
  41fdc0:	str	x0, [sp, #128]
  41fdc4:	stp	xzr, xzr, [sp, #192]
  41fdc8:	stp	xzr, xzr, [sp, #208]
  41fdcc:	mov	x28, #0x0                   	// #0
  41fdd0:	ldr	x5, [x26]
  41fdd4:	str	xzr, [sp, #176]
  41fdd8:	cmp	x5, #0x0
  41fddc:	b.le	41fe24 <_obstack_memory_used@@Base+0x7114>
  41fde0:	ldr	x3, [x26, #8]
  41fde4:	add	x0, sp, #0xa8
  41fde8:	ldr	x1, [x24, #24]
  41fdec:	ldr	x3, [x3, x28, lsl #3]
  41fdf0:	add	x28, x28, #0x1
  41fdf4:	ldr	x3, [x1, x3, lsl #3]
  41fdf8:	cmn	x3, #0x1
  41fdfc:	b.eq	41fe1c <_obstack_memory_used@@Base+0x710c>  // b.none
  41fe00:	ldr	x1, [x24, #48]
  41fe04:	add	x3, x3, x3, lsl #1
  41fe08:	add	x1, x1, x3, lsl #3
  41fe0c:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  41fe10:	str	w0, [sp, #164]
  41fe14:	cbnz	w0, 4202c0 <_obstack_memory_used@@Base+0x75b0>
  41fe18:	ldr	x5, [x26]
  41fe1c:	cmp	x28, x5
  41fe20:	b.lt	41fde0 <_obstack_memory_used@@Base+0x70d0>  // b.tstop
  41fe24:	add	x2, sp, #0xa8
  41fe28:	mov	x1, x24
  41fe2c:	add	x0, sp, #0xa4
  41fe30:	mov	w3, #0x0                   	// #0
  41fe34:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  41fe38:	str	x0, [x22, x23, lsl #3]
  41fe3c:	cbz	x0, 4202b8 <_obstack_memory_used@@Base+0x75a8>
  41fe40:	ldrsb	w1, [x0, #104]
  41fe44:	tbnz	w1, #31, 4204d4 <_obstack_memory_used@@Base+0x77c4>
  41fe48:	ldr	x1, [sp, #120]
  41fe4c:	str	x0, [x1, x23, lsl #3]
  41fe50:	ldr	x1, [sp, #128]
  41fe54:	str	x0, [x1, x23, lsl #3]
  41fe58:	ldp	x2, x5, [x25]
  41fe5c:	add	x23, x23, #0x1
  41fe60:	ldp	x0, x3, [sp, #192]
  41fe64:	cmp	x23, x19
  41fe68:	ldr	x1, [sp, #208]
  41fe6c:	add	x26, x26, #0x18
  41fe70:	add	x25, x25, #0x20
  41fe74:	orr	x2, x2, x0
  41fe78:	str	x2, [sp, #192]
  41fe7c:	orr	x3, x3, x5
  41fe80:	ldur	x5, [x25, #-16]
  41fe84:	str	x3, [sp, #200]
  41fe88:	ldr	x0, [sp, #216]
  41fe8c:	orr	x1, x1, x5
  41fe90:	ldur	x3, [x25, #-8]
  41fe94:	orr	x0, x0, x3
  41fe98:	stp	x1, x0, [sp, #208]
  41fe9c:	b.ne	41fdcc <_obstack_memory_used@@Base+0x70bc>  // b.any
  41fea0:	ldr	w0, [sp, #136]
  41fea4:	str	x2, [sp, #152]
  41fea8:	cbnz	w0, 420614 <_obstack_memory_used@@Base+0x7904>
  41feac:	mov	x1, #0x100                 	// #256
  41feb0:	mov	x0, #0x8                   	// #8
  41feb4:	bl	402910 <calloc@plt>
  41feb8:	mov	x8, x0
  41febc:	ldr	x0, [sp, #144]
  41fec0:	str	x8, [x0, #88]
  41fec4:	cbz	x8, 4202c0 <_obstack_memory_used@@Base+0x75b0>
  41fec8:	ldr	x2, [sp, #152]
  41fecc:	add	x6, x24, #0xb8
  41fed0:	add	x9, sp, #0xc0
  41fed4:	mov	x7, #0x0                   	// #0
  41fed8:	ldr	x0, [x9]
  41fedc:	add	x4, x8, x7, lsl #9
  41fee0:	mov	x1, #0x1                   	// #1
  41fee4:	cbz	x0, 41fefc <_obstack_memory_used@@Base+0x71ec>
  41fee8:	tbnz	w0, #0, 42056c <_obstack_memory_used@@Base+0x785c>
  41feec:	lsl	x1, x1, #1
  41fef0:	lsr	x0, x0, #1
  41fef4:	add	x4, x4, #0x8
  41fef8:	cbnz	x0, 41fee8 <_obstack_memory_used@@Base+0x71d8>
  41fefc:	ldr	x0, [sp, #112]
  41ff00:	add	x7, x7, #0x1
  41ff04:	add	x9, x9, #0x8
  41ff08:	cmp	x7, #0x4
  41ff0c:	add	x0, x0, #0x8
  41ff10:	str	x0, [sp, #112]
  41ff14:	b.ne	41fed8 <_obstack_memory_used@@Base+0x71c8>  // b.any
  41ff18:	tst	w2, #0x400
  41ff1c:	b.eq	41ff40 <_obstack_memory_used@@Base+0x7230>  // b.none
  41ff20:	mov	x0, #0x0                   	// #0
  41ff24:	lsl	x1, x0, #5
  41ff28:	ldr	x1, [x20, x1]
  41ff2c:	tst	w1, #0x400
  41ff30:	b.ne	4205f8 <_obstack_memory_used@@Base+0x78e8>  // b.any
  41ff34:	add	x0, x0, #0x1
  41ff38:	cmp	x0, x19
  41ff3c:	b.ne	41ff24 <_obstack_memory_used@@Base+0x7214>  // b.any
  41ff40:	mov	x0, x22
  41ff44:	bl	402ae0 <free@plt>
  41ff48:	ldr	x0, [sp, #184]
  41ff4c:	ldr	x19, [sp, #104]
  41ff50:	add	x26, x19, x21
  41ff54:	bl	402ae0 <free@plt>
  41ff58:	ldr	x0, [x19, #16]
  41ff5c:	add	x19, x19, #0x18
  41ff60:	bl	402ae0 <free@plt>
  41ff64:	cmp	x19, x26
  41ff68:	b.ne	41ff58 <_obstack_memory_used@@Base+0x7248>  // b.any
  41ff6c:	ldr	x0, [sp, #104]
  41ff70:	bl	402ae0 <free@plt>
  41ff74:	mov	w0, #0x1                   	// #1
  41ff78:	ldp	x19, x20, [sp, #16]
  41ff7c:	ldp	x21, x22, [sp, #32]
  41ff80:	ldp	x25, x26, [sp, #64]
  41ff84:	ldp	x27, x28, [sp, #80]
  41ff88:	b	420318 <_obstack_memory_used@@Base+0x7608>
  41ff8c:	ldrb	w2, [x2, x1]
  41ff90:	add	x3, sp, #0xc0
  41ff94:	mov	x1, #0x1                   	// #1
  41ff98:	ubfx	x4, x2, #6, #2
  41ff9c:	lsl	x2, x1, x2
  41ffa0:	ldr	x1, [x3, x4, lsl #3]
  41ffa4:	orr	x1, x1, x2
  41ffa8:	str	x1, [x3, x4, lsl #3]
  41ffac:	cbz	w0, 4200b0 <_obstack_memory_used@@Base+0x73a0>
  41ffb0:	tbnz	w0, #5, 420280 <_obstack_memory_used@@Base+0x7570>
  41ffb4:	tbnz	w0, #7, 4202a0 <_obstack_memory_used@@Base+0x7590>
  41ffb8:	tbz	w0, #2, 420034 <_obstack_memory_used@@Base+0x7324>
  41ffbc:	cmp	w10, #0x1
  41ffc0:	b.eq	42042c <_obstack_memory_used@@Base+0x771c>  // b.none
  41ffc4:	ldr	w1, [x24, #180]
  41ffc8:	ldp	x15, x14, [x24, #184]
  41ffcc:	cmp	w1, #0x1
  41ffd0:	ldp	x2, x5, [sp, #192]
  41ffd4:	ldp	x3, x4, [x24, #200]
  41ffd8:	ldp	x13, x9, [sp, #208]
  41ffdc:	b.le	420400 <_obstack_memory_used@@Base+0x76f0>
  41ffe0:	ldr	x12, [x24, #120]
  41ffe4:	ldr	x1, [x12]
  41ffe8:	orn	x1, x15, x1
  41ffec:	and	x1, x1, x2
  41fff0:	str	x1, [sp, #192]
  41fff4:	ldr	x2, [x12, #8]
  41fff8:	orn	x2, x14, x2
  41fffc:	and	x2, x2, x5
  420000:	str	x2, [sp, #200]
  420004:	orr	x1, x1, x2
  420008:	ldr	x2, [x12, #16]
  42000c:	orn	x2, x3, x2
  420010:	and	x2, x2, x13
  420014:	str	x2, [sp, #208]
  420018:	ldr	x3, [x12, #24]
  42001c:	orn	x3, x4, x3
  420020:	and	x3, x3, x9
  420024:	str	x3, [sp, #216]
  420028:	orr	x2, x2, x3
  42002c:	orr	x1, x1, x2
  420030:	cbz	x1, 41fd44 <_obstack_memory_used@@Base+0x7034>
  420034:	tbz	w0, #3, 4200b0 <_obstack_memory_used@@Base+0x73a0>
  420038:	cmp	w10, #0x1
  42003c:	b.eq	4204c8 <_obstack_memory_used@@Base+0x77b8>  // b.none
  420040:	ldr	w0, [x24, #180]
  420044:	ldp	x4, x12, [sp, #192]
  420048:	cmp	w0, #0x1
  42004c:	ldp	x0, x2, [x24, #184]
  420050:	ldp	x1, x3, [x24, #200]
  420054:	ldp	x13, x9, [sp, #208]
  420058:	b.le	4203d4 <_obstack_memory_used@@Base+0x76c4>
  42005c:	ldr	x5, [x24, #120]
  420060:	ldr	x14, [x5]
  420064:	and	x0, x0, x14
  420068:	bic	x0, x4, x0
  42006c:	str	x0, [sp, #192]
  420070:	ldr	x4, [x5, #8]
  420074:	and	x2, x2, x4
  420078:	bic	x2, x12, x2
  42007c:	str	x2, [sp, #200]
  420080:	orr	x0, x0, x2
  420084:	ldr	x2, [x5, #16]
  420088:	and	x1, x1, x2
  42008c:	bic	x1, x13, x1
  420090:	str	x1, [sp, #208]
  420094:	ldr	x2, [x5, #24]
  420098:	and	x3, x3, x2
  42009c:	bic	x3, x9, x3
  4200a0:	str	x3, [sp, #216]
  4200a4:	orr	x1, x1, x3
  4200a8:	orr	x0, x0, x1
  4200ac:	cbz	x0, 41fd44 <_obstack_memory_used@@Base+0x7034>
  4200b0:	cmp	x19, #0x0
  4200b4:	mov	x25, x20
  4200b8:	mov	x26, #0x0                   	// #0
  4200bc:	ldr	x27, [sp, #104]
  4200c0:	b.gt	4200f4 <_obstack_memory_used@@Base+0x73e4>
  4200c4:	b	420218 <_obstack_memory_used@@Base+0x7508>
  4200c8:	ldrb	w2, [x21]
  4200cc:	ubfx	x1, x2, #6, #2
  4200d0:	add	x1, x20, x1, lsl #3
  4200d4:	ldr	x0, [x1, x0]
  4200d8:	lsr	x0, x0, x2
  4200dc:	tbnz	w0, #0, 420100 <_obstack_memory_used@@Base+0x73f0>
  4200e0:	add	x26, x26, #0x1
  4200e4:	add	x25, x25, #0x20
  4200e8:	cmp	x26, x19
  4200ec:	add	x27, x27, #0x18
  4200f0:	b.ge	420218 <_obstack_memory_used@@Base+0x7508>  // b.tcont
  4200f4:	cmp	w10, #0x1
  4200f8:	lsl	x0, x26, #5
  4200fc:	b.eq	4200c8 <_obstack_memory_used@@Base+0x73b8>  // b.none
  420100:	ldp	x28, x0, [x25]
  420104:	ldp	x5, x4, [x25, #16]
  420108:	ldp	x1, x14, [sp, #192]
  42010c:	ldp	x13, x12, [sp, #208]
  420110:	and	x18, x1, x28
  420114:	and	x17, x14, x0
  420118:	orr	x30, x18, x17
  42011c:	and	x16, x13, x5
  420120:	and	x15, x12, x4
  420124:	orr	x2, x16, x15
  420128:	orr	x2, x2, x30
  42012c:	cbz	x2, 4200e0 <_obstack_memory_used@@Base+0x73d0>
  420130:	bic	x30, x14, x0
  420134:	bic	x2, x28, x1
  420138:	bic	x0, x0, x14
  42013c:	bic	x28, x1, x28
  420140:	bic	x14, x13, x5
  420144:	bic	x5, x5, x13
  420148:	bic	x13, x12, x4
  42014c:	bic	x4, x4, x12
  420150:	stp	x28, x30, [sp, #192]
  420154:	orr	x1, x14, x13
  420158:	orr	x12, x2, x0
  42015c:	stp	x14, x13, [sp, #208]
  420160:	orr	x28, x28, x30
  420164:	orr	x13, x5, x4
  420168:	orr	x28, x28, x1
  42016c:	orr	x1, x12, x13
  420170:	cbz	x1, 4201f0 <_obstack_memory_used@@Base+0x74e0>
  420174:	lsl	x1, x19, #5
  420178:	add	x12, x19, x19, lsl #1
  42017c:	add	x13, x20, x1
  420180:	ldr	x3, [sp, #104]
  420184:	str	x2, [x20, x1]
  420188:	stp	x0, x5, [x13, #8]
  42018c:	str	x4, [x13, #24]
  420190:	add	x1, x3, x12, lsl #3
  420194:	stp	x18, x17, [x25]
  420198:	stp	x16, x15, [x25, #16]
  42019c:	ldr	x0, [x27, #8]
  4201a0:	str	x0, [x1, #8]
  4201a4:	cmp	x0, #0x0
  4201a8:	b.le	4202ac <_obstack_memory_used@@Base+0x759c>
  4201ac:	lsl	x2, x0, #3
  4201b0:	str	x0, [x3, x12, lsl #3]
  4201b4:	mov	x0, x2
  4201b8:	str	x2, [sp, #112]
  4201bc:	str	w10, [sp, #128]
  4201c0:	str	x1, [sp, #136]
  4201c4:	bl	402800 <malloc@plt>
  4201c8:	ldr	x1, [sp, #136]
  4201cc:	ldr	w10, [sp, #128]
  4201d0:	ldr	x2, [sp, #112]
  4201d4:	str	x0, [x1, #16]
  4201d8:	cbz	x0, 420324 <_obstack_memory_used@@Base+0x7614>
  4201dc:	ldr	x1, [x27, #16]
  4201e0:	str	w10, [sp, #112]
  4201e4:	bl	402650 <memcpy@plt>
  4201e8:	ldr	w10, [sp, #112]
  4201ec:	add	x19, x19, #0x1
  4201f0:	ldr	x1, [x23, #16]
  4201f4:	mov	x0, x27
  4201f8:	ldr	x2, [sp, #120]
  4201fc:	str	w10, [sp, #112]
  420200:	ldr	x1, [x1, x2]
  420204:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  420208:	tst	w0, #0xff
  42020c:	b.eq	420328 <_obstack_memory_used@@Base+0x7618>  // b.none
  420210:	ldr	w10, [sp, #112]
  420214:	cbnz	x28, 4200e0 <_obstack_memory_used@@Base+0x73d0>
  420218:	cmp	x26, x19
  42021c:	b.ne	41fd44 <_obstack_memory_used@@Base+0x7034>  // b.any
  420220:	add	x5, x20, x19, lsl #5
  420224:	add	x4, x19, x19, lsl #1
  420228:	ldp	x0, x1, [sp, #192]
  42022c:	lsl	x4, x4, #3
  420230:	ldr	x9, [x23, #16]
  420234:	ldp	x2, x3, [sp, #208]
  420238:	stp	x0, x1, [x5]
  42023c:	mov	x0, #0x8                   	// #8
  420240:	ldr	x1, [sp, #120]
  420244:	stp	x2, x3, [x5, #16]
  420248:	ldr	x6, [sp, #104]
  42024c:	ldr	x25, [x9, x1]
  420250:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  420254:	add	x28, x6, x4
  420258:	ldr	q0, [x1, #1088]
  42025c:	str	q0, [x6, x4]
  420260:	bl	402800 <malloc@plt>
  420264:	str	x0, [x28, #16]
  420268:	cbz	x0, 420560 <_obstack_memory_used@@Base+0x7850>
  42026c:	add	x19, x19, #0x1
  420270:	str	x25, [x0]
  420274:	stp	xzr, xzr, [sp, #192]
  420278:	stp	xzr, xzr, [sp, #208]
  42027c:	b	41fd44 <_obstack_memory_used@@Base+0x7034>
  420280:	ldr	x1, [sp, #192]
  420284:	stp	xzr, xzr, [sp, #192]
  420288:	stp	xzr, xzr, [sp, #208]
  42028c:	tst	w1, #0x400
  420290:	b.eq	41fd44 <_obstack_memory_used@@Base+0x7034>  // b.none
  420294:	mov	x1, #0x400                 	// #1024
  420298:	str	x1, [sp, #192]
  42029c:	tbz	w0, #7, 41ffb8 <_obstack_memory_used@@Base+0x72a8>
  4202a0:	stp	xzr, xzr, [sp, #192]
  4202a4:	stp	xzr, xzr, [sp, #208]
  4202a8:	b	41fd44 <_obstack_memory_used@@Base+0x7034>
  4202ac:	stp	xzr, xzr, [x1]
  4202b0:	str	xzr, [x1, #16]
  4202b4:	b	4201ec <_obstack_memory_used@@Base+0x74dc>
  4202b8:	ldr	w1, [sp, #164]
  4202bc:	cbz	w1, 41fe40 <_obstack_memory_used@@Base+0x7130>
  4202c0:	mov	x0, x22
  4202c4:	bl	402ae0 <free@plt>
  4202c8:	ldr	x25, [sp, #184]
  4202cc:	mov	x0, x25
  4202d0:	bl	402ae0 <free@plt>
  4202d4:	add	x19, x27, x19
  4202d8:	ldr	x0, [sp, #104]
  4202dc:	mov	x20, x0
  4202e0:	add	x19, x0, x19, lsl #3
  4202e4:	nop
  4202e8:	ldr	x0, [x20, #16]
  4202ec:	add	x20, x20, #0x18
  4202f0:	bl	402ae0 <free@plt>
  4202f4:	cmp	x19, x20
  4202f8:	b.ne	4202e8 <_obstack_memory_used@@Base+0x75d8>  // b.any
  4202fc:	ldr	x0, [sp, #104]
  420300:	bl	402ae0 <free@plt>
  420304:	ldp	x19, x20, [sp, #16]
  420308:	mov	w0, #0x0                   	// #0
  42030c:	ldp	x21, x22, [sp, #32]
  420310:	ldp	x25, x26, [sp, #64]
  420314:	ldp	x27, x28, [sp, #80]
  420318:	ldp	x23, x24, [sp, #48]
  42031c:	ldp	x29, x30, [sp], #224
  420320:	ret
  420324:	stp	xzr, xzr, [x1]
  420328:	mov	x20, #0x0                   	// #0
  42032c:	ldr	x0, [sp, #104]
  420330:	add	x22, x0, #0x10
  420334:	nop
  420338:	ldr	x0, [x22], #24
  42033c:	add	x20, x20, #0x1
  420340:	bl	402ae0 <free@plt>
  420344:	cmp	x20, x19
  420348:	b.lt	420338 <_obstack_memory_used@@Base+0x7628>  // b.tstop
  42034c:	b	4202fc <_obstack_memory_used@@Base+0x75ec>
  420350:	ldr	w1, [x24, #180]
  420354:	cmp	w1, #0x1
  420358:	b.le	4203bc <_obstack_memory_used@@Base+0x76ac>
  42035c:	ldr	x2, [x24, #120]
  420360:	ldp	x1, x5, [sp, #192]
  420364:	ldr	x3, [x2]
  420368:	ldr	x4, [sp, #208]
  42036c:	orr	x1, x1, x3
  420370:	str	x1, [sp, #192]
  420374:	ldr	x3, [sp, #216]
  420378:	ldr	x9, [x2, #8]
  42037c:	orr	x5, x5, x9
  420380:	str	x5, [sp, #200]
  420384:	ldr	x5, [x2, #16]
  420388:	orr	x4, x4, x5
  42038c:	str	x4, [sp, #208]
  420390:	ldr	x2, [x2, #24]
  420394:	orr	x2, x3, x2
  420398:	str	x2, [sp, #216]
  42039c:	ldr	x2, [x24, #216]
  4203a0:	tbnz	w2, #6, 4203ac <_obstack_memory_used@@Base+0x769c>
  4203a4:	and	x1, x1, #0xfffffffffffffbff
  4203a8:	str	x1, [sp, #192]
  4203ac:	tbz	w2, #7, 41ffac <_obstack_memory_used@@Base+0x729c>
  4203b0:	and	x1, x1, #0xfffffffffffffffe
  4203b4:	str	x1, [sp, #192]
  4203b8:	b	41ffac <_obstack_memory_used@@Base+0x729c>
  4203bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4203c0:	mov	x3, #0xffffffffffffffff    	// #-1
  4203c4:	mov	x1, #0xffffffffffffffff    	// #-1
  4203c8:	stp	x2, x3, [sp, #192]
  4203cc:	stp	x2, x3, [sp, #208]
  4203d0:	b	42039c <_obstack_memory_used@@Base+0x768c>
  4203d4:	bic	x4, x4, x0
  4203d8:	bic	x2, x12, x2
  4203dc:	bic	x1, x13, x1
  4203e0:	bic	x3, x9, x3
  4203e4:	stp	x4, x2, [sp, #192]
  4203e8:	orr	x0, x4, x2
  4203ec:	orr	x5, x1, x3
  4203f0:	stp	x1, x3, [sp, #208]
  4203f4:	orr	x0, x0, x5
  4203f8:	cbz	x0, 41fd44 <_obstack_memory_used@@Base+0x7034>
  4203fc:	b	4200b0 <_obstack_memory_used@@Base+0x73a0>
  420400:	and	x13, x13, x3
  420404:	and	x2, x2, x15
  420408:	and	x5, x5, x14
  42040c:	and	x3, x9, x4
  420410:	stp	x2, x5, [sp, #192]
  420414:	orr	x1, x2, x5
  420418:	orr	x4, x13, x3
  42041c:	stp	x13, x3, [sp, #208]
  420420:	orr	x1, x1, x4
  420424:	cbnz	x1, 420034 <_obstack_memory_used@@Base+0x7324>
  420428:	b	41fd44 <_obstack_memory_used@@Base+0x7034>
  42042c:	ldrb	w1, [x21, #10]
  420430:	tbz	w1, #6, 4202a0 <_obstack_memory_used@@Base+0x7590>
  420434:	ldr	w1, [x24, #180]
  420438:	ldp	x15, x14, [x24, #184]
  42043c:	cmp	w1, #0x1
  420440:	ldp	x2, x5, [sp, #192]
  420444:	ldp	x3, x4, [x24, #200]
  420448:	ldp	x13, x9, [sp, #208]
  42044c:	b.gt	41ffe0 <_obstack_memory_used@@Base+0x72d0>
  420450:	b	420400 <_obstack_memory_used@@Base+0x76f0>
  420454:	ldr	x1, [x24, #216]
  420458:	mov	x2, #0xffffffffffffffff    	// #-1
  42045c:	mov	x3, #0xffffffffffffffff    	// #-1
  420460:	stp	x2, x3, [sp, #192]
  420464:	mov	x2, #0xfffffffffffffffe    	// #-2
  420468:	tbnz	w1, #6, 420478 <_obstack_memory_used@@Base+0x7768>
  42046c:	mov	x3, #0xfffffffffffffbff    	// #-1025
  420470:	mov	x2, #0xfffffffffffffbfe    	// #-1026
  420474:	str	x3, [sp, #192]
  420478:	tbz	w1, #7, 41ffac <_obstack_memory_used@@Base+0x729c>
  42047c:	str	x2, [sp, #192]
  420480:	b	41ffac <_obstack_memory_used@@Base+0x729c>
  420484:	ldr	x1, [x2, x1]
  420488:	ldp	x2, x4, [sp, #192]
  42048c:	ldr	x3, [x1]
  420490:	orr	x2, x2, x3
  420494:	str	x2, [sp, #192]
  420498:	ldr	x3, [sp, #208]
  42049c:	ldr	x5, [x1, #8]
  4204a0:	ldr	x2, [sp, #216]
  4204a4:	orr	x4, x4, x5
  4204a8:	str	x4, [sp, #200]
  4204ac:	ldr	x4, [x1, #16]
  4204b0:	orr	x3, x3, x4
  4204b4:	str	x3, [sp, #208]
  4204b8:	ldr	x1, [x1, #24]
  4204bc:	orr	x1, x2, x1
  4204c0:	str	x1, [sp, #216]
  4204c4:	b	41ffac <_obstack_memory_used@@Base+0x729c>
  4204c8:	ldrb	w0, [x21, #10]
  4204cc:	tbz	w0, #6, 420040 <_obstack_memory_used@@Base+0x7330>
  4204d0:	b	4202a0 <_obstack_memory_used@@Base+0x7590>
  4204d4:	mov	x1, x24
  4204d8:	add	x2, sp, #0xa8
  4204dc:	add	x0, sp, #0xa4
  4204e0:	mov	w3, #0x1                   	// #1
  4204e4:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4204e8:	ldr	x1, [sp, #120]
  4204ec:	str	x0, [x1, x23, lsl #3]
  4204f0:	cbz	x0, 4205ec <_obstack_memory_used@@Base+0x78dc>
  4204f4:	ldr	x1, [x22, x23, lsl #3]
  4204f8:	cmp	x0, x1
  4204fc:	b.eq	420514 <_obstack_memory_used@@Base+0x7804>  // b.none
  420500:	ldr	w0, [x24, #180]
  420504:	cmp	w0, #0x2
  420508:	ldr	w0, [sp, #136]
  42050c:	csinc	w0, w0, wzr, lt  // lt = tstop
  420510:	str	w0, [sp, #136]
  420514:	mov	x1, x24
  420518:	add	x2, sp, #0xa8
  42051c:	add	x0, sp, #0xa4
  420520:	mov	w3, #0x2                   	// #2
  420524:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  420528:	ldr	x1, [sp, #128]
  42052c:	str	x0, [x1, x23, lsl #3]
  420530:	cbnz	x0, 41fe58 <_obstack_memory_used@@Base+0x7148>
  420534:	ldr	w0, [sp, #164]
  420538:	cbz	w0, 41fe58 <_obstack_memory_used@@Base+0x7148>
  42053c:	b	4202c0 <_obstack_memory_used@@Base+0x75b0>
  420540:	ldp	x19, x20, [sp, #16]
  420544:	ldp	x21, x22, [sp, #32]
  420548:	ldp	x25, x26, [sp, #64]
  42054c:	ldp	x27, x28, [sp, #80]
  420550:	mov	w0, #0x0                   	// #0
  420554:	ldp	x23, x24, [sp, #48]
  420558:	ldp	x29, x30, [sp], #224
  42055c:	ret
  420560:	stp	xzr, xzr, [x28]
  420564:	cbz	x19, 4202fc <_obstack_memory_used@@Base+0x75ec>
  420568:	b	420328 <_obstack_memory_used@@Base+0x7618>
  42056c:	ldr	x3, [sp, #112]
  420570:	ldr	x3, [x3]
  420574:	tst	x1, x3
  420578:	mov	x3, #0x0                   	// #0
  42057c:	b.ne	42059c <_obstack_memory_used@@Base+0x788c>  // b.any
  420580:	add	x3, x3, #0x1
  420584:	ldr	x10, [sp, #112]
  420588:	lsl	x5, x3, #5
  42058c:	ldr	x5, [x10, x5]
  420590:	tst	x1, x5
  420594:	b.eq	420580 <_obstack_memory_used@@Base+0x7870>  // b.none
  420598:	lsl	x3, x3, #3
  42059c:	ldr	x5, [x6, x7, lsl #3]
  4205a0:	tst	x1, x5
  4205a4:	b.eq	4205b8 <_obstack_memory_used@@Base+0x78a8>  // b.none
  4205a8:	ldr	x5, [sp, #120]
  4205ac:	ldr	x3, [x5, x3]
  4205b0:	str	x3, [x4]
  4205b4:	b	41feec <_obstack_memory_used@@Base+0x71dc>
  4205b8:	ldr	x3, [x22, x3]
  4205bc:	str	x3, [x4]
  4205c0:	b	41feec <_obstack_memory_used@@Base+0x71dc>
  4205c4:	bl	402ae0 <free@plt>
  4205c8:	mov	x1, #0x100                 	// #256
  4205cc:	mov	x0, #0x8                   	// #8
  4205d0:	bl	402910 <calloc@plt>
  4205d4:	cmp	x0, #0x0
  4205d8:	ldr	x1, [sp, #144]
  4205dc:	ldp	x19, x20, [sp, #16]
  4205e0:	str	x0, [x1, #88]
  4205e4:	cset	w0, ne  // ne = any
  4205e8:	b	420318 <_obstack_memory_used@@Base+0x7608>
  4205ec:	ldr	w1, [sp, #164]
  4205f0:	cbz	w1, 4204f4 <_obstack_memory_used@@Base+0x77e4>
  4205f4:	b	4202c0 <_obstack_memory_used@@Base+0x75b0>
  4205f8:	ldr	x1, [sp, #128]
  4205fc:	ldr	x0, [x1, x0, lsl #3]
  420600:	str	x0, [x8, #80]
  420604:	ldr	w1, [sp, #136]
  420608:	cbz	w1, 41ff40 <_obstack_memory_used@@Base+0x7230>
  42060c:	str	x0, [x8, #2128]
  420610:	b	41ff40 <_obstack_memory_used@@Base+0x7230>
  420614:	mov	x1, #0x200                 	// #512
  420618:	mov	x0, #0x8                   	// #8
  42061c:	bl	402910 <calloc@plt>
  420620:	mov	x8, x0
  420624:	ldr	x0, [sp, #144]
  420628:	str	x8, [x0, #96]
  42062c:	cbz	x8, 4202c0 <_obstack_memory_used@@Base+0x75b0>
  420630:	ldr	x2, [sp, #152]
  420634:	add	x10, sp, #0xc0
  420638:	add	x9, x8, #0x800
  42063c:	mov	w7, #0x0                   	// #0
  420640:	ldr	x0, [x10]
  420644:	mov	x4, x9
  420648:	mov	x3, #0x1                   	// #1
  42064c:	cbz	x0, 420664 <_obstack_memory_used@@Base+0x7954>
  420650:	tbnz	w0, #0, 420688 <_obstack_memory_used@@Base+0x7978>
  420654:	lsl	x3, x3, #1
  420658:	lsr	x0, x0, #1
  42065c:	add	x4, x4, #0x8
  420660:	cbnz	x0, 420650 <_obstack_memory_used@@Base+0x7940>
  420664:	ldr	x0, [sp, #112]
  420668:	add	w7, w7, #0x40
  42066c:	add	x10, x10, #0x8
  420670:	cmp	w7, #0x100
  420674:	add	x0, x0, #0x8
  420678:	str	x0, [sp, #112]
  42067c:	add	x9, x9, #0x200
  420680:	b.ne	420640 <_obstack_memory_used@@Base+0x7930>  // b.any
  420684:	b	41ff18 <_obstack_memory_used@@Base+0x7208>
  420688:	ldr	x1, [sp, #112]
  42068c:	ldr	x1, [x1]
  420690:	tst	x3, x1
  420694:	b.ne	4206d4 <_obstack_memory_used@@Base+0x79c4>  // b.any
  420698:	mov	x1, #0x0                   	// #0
  42069c:	add	x1, x1, #0x1
  4206a0:	ldr	x11, [sp, #112]
  4206a4:	lsl	x5, x1, #5
  4206a8:	mov	x6, x1
  4206ac:	ldr	x5, [x11, x5]
  4206b0:	tst	x3, x5
  4206b4:	b.eq	42069c <_obstack_memory_used@@Base+0x798c>  // b.none
  4206b8:	sub	x1, x4, #0x8, lsl #12
  4206bc:	ldr	x5, [x22, x6, lsl #3]
  4206c0:	str	x5, [x1, #30720]
  4206c4:	ldr	x1, [sp, #120]
  4206c8:	ldr	x1, [x1, x6, lsl #3]
  4206cc:	str	x1, [x4]
  4206d0:	b	420654 <_obstack_memory_used@@Base+0x7944>
  4206d4:	mov	x6, #0x0                   	// #0
  4206d8:	b	4206b8 <_obstack_memory_used@@Base+0x79a8>
  4206dc:	ldr	x0, [sp, #104]
  4206e0:	bl	402ae0 <free@plt>
  4206e4:	cbnz	x19, 420540 <_obstack_memory_used@@Base+0x7830>
  4206e8:	ldp	x21, x22, [sp, #32]
  4206ec:	ldp	x25, x26, [sp, #64]
  4206f0:	ldp	x27, x28, [sp, #80]
  4206f4:	b	4205c8 <_obstack_memory_used@@Base+0x78b8>
  4206f8:	stp	x29, x30, [sp, #-80]!
  4206fc:	mov	x29, sp
  420700:	stp	x25, x26, [sp, #64]
  420704:	mov	x25, x0
  420708:	ldrb	w0, [x1, #56]
  42070c:	stp	x19, x20, [sp, #16]
  420710:	ldr	x19, [x2, #8]
  420714:	stp	x23, x24, [sp, #48]
  420718:	tst	x0, #0x10
  42071c:	mov	x24, x2
  420720:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  420724:	ldr	x23, [x1]
  420728:	b.ne	420954 <_obstack_memory_used@@Base+0x7c44>  // b.any
  42072c:	ldr	w1, [x23, #128]
  420730:	stp	x21, x22, [sp, #32]
  420734:	mov	x21, #0x0                   	// #0
  420738:	cmp	w1, #0xf
  42073c:	b.eq	4209ac <_obstack_memory_used@@Base+0x7c9c>  // b.none
  420740:	mov	w20, #0x40                  	// #64
  420744:	mov	x0, #0x8                   	// #8
  420748:	add	w5, w1, #0x1
  42074c:	smaddl	x0, w1, w20, x0
  420750:	ldr	x20, [x23, #112]
  420754:	sbfiz	x1, x1, #6, #32
  420758:	add	x3, x20, x1
  42075c:	add	x2, x1, #0x20
  420760:	movi	v0.4s, #0x0
  420764:	add	x2, x20, x2
  420768:	mov	x4, #0x8                   	// #8
  42076c:	str	w5, [x23, #128]
  420770:	bfxil	x21, x4, #0, #8
  420774:	str	xzr, [x3, #24]
  420778:	stp	xzr, x21, [x3, #48]
  42077c:	add	x20, x20, x0
  420780:	mov	x4, #0xffffffffffffffff    	// #-1
  420784:	stur	q0, [x3, #8]
  420788:	ldrb	w0, [x2, #26]
  42078c:	and	w0, w0, #0xfffffff3
  420790:	strb	w0, [x2, #26]
  420794:	str	x4, [x3, #64]
  420798:	str	q0, [x3, #32]
  42079c:	ldr	w1, [x23, #128]
  4207a0:	mov	x22, #0x0                   	// #0
  4207a4:	cmp	w1, #0xf
  4207a8:	b.eq	4209d8 <_obstack_memory_used@@Base+0x7cc8>  // b.none
  4207ac:	mov	w21, #0x40                  	// #64
  4207b0:	mov	x0, #0x8                   	// #8
  4207b4:	add	w5, w1, #0x1
  4207b8:	smaddl	x0, w1, w21, x0
  4207bc:	ldr	x21, [x23, #112]
  4207c0:	sbfiz	x1, x1, #6, #32
  4207c4:	add	x3, x21, x1
  4207c8:	add	x2, x1, #0x20
  4207cc:	movi	v0.4s, #0x0
  4207d0:	add	x2, x21, x2
  4207d4:	mov	x4, #0x9                   	// #9
  4207d8:	str	w5, [x23, #128]
  4207dc:	bfxil	x22, x4, #0, #8
  4207e0:	str	xzr, [x3, #24]
  4207e4:	stp	xzr, x22, [x3, #48]
  4207e8:	add	x21, x21, x0
  4207ec:	mov	x4, #0xffffffffffffffff    	// #-1
  4207f0:	stur	q0, [x3, #8]
  4207f4:	ldrb	w0, [x2, #26]
  4207f8:	and	w0, w0, #0xfffffff3
  4207fc:	strb	w0, [x2, #26]
  420800:	str	x4, [x3, #64]
  420804:	str	q0, [x3, #32]
  420808:	ldr	w1, [x23, #128]
  42080c:	mov	x22, x21
  420810:	cbz	x19, 420888 <_obstack_memory_used@@Base+0x7b78>
  420814:	cmp	w1, #0xf
  420818:	mov	x26, #0x0                   	// #0
  42081c:	b.eq	420a30 <_obstack_memory_used@@Base+0x7d20>  // b.none
  420820:	mov	w22, #0x40                  	// #64
  420824:	mov	x3, #0x8                   	// #8
  420828:	add	w5, w1, #0x1
  42082c:	smaddl	x3, w1, w22, x3
  420830:	ldr	x22, [x23, #112]
  420834:	sbfiz	x1, x1, #6, #32
  420838:	add	x2, x22, x1
  42083c:	add	x0, x1, #0x20
  420840:	add	x0, x22, x0
  420844:	mov	x4, #0x10                  	// #16
  420848:	str	w5, [x23, #128]
  42084c:	bfxil	x26, x4, #0, #8
  420850:	stp	xzr, x19, [x2, #8]
  420854:	add	x22, x22, x3
  420858:	mov	x4, #0xffffffffffffffff    	// #-1
  42085c:	str	x21, [x2, #24]
  420860:	stp	xzr, x26, [x2, #48]
  420864:	ldrb	w3, [x0, #26]
  420868:	and	w3, w3, #0xfffffff3
  42086c:	strb	w3, [x0, #26]
  420870:	stp	xzr, xzr, [x2, #32]
  420874:	str	x4, [x2, #64]
  420878:	str	x22, [x19]
  42087c:	cbz	x21, 420884 <_obstack_memory_used@@Base+0x7b74>
  420880:	str	x22, [x21]
  420884:	ldr	w1, [x23, #128]
  420888:	cmp	w1, #0xf
  42088c:	mov	x26, #0x0                   	// #0
  420890:	b.eq	420a04 <_obstack_memory_used@@Base+0x7cf4>  // b.none
  420894:	mov	w19, #0x40                  	// #64
  420898:	mov	x0, #0x8                   	// #8
  42089c:	add	w5, w1, #0x1
  4208a0:	smaddl	x0, w1, w19, x0
  4208a4:	ldr	x19, [x23, #112]
  4208a8:	sbfiz	x1, x1, #6, #32
  4208ac:	add	x3, x19, x1
  4208b0:	add	x2, x1, #0x20
  4208b4:	add	x2, x19, x2
  4208b8:	mov	x4, #0x10                  	// #16
  4208bc:	str	w5, [x23, #128]
  4208c0:	bfxil	x26, x4, #0, #8
  4208c4:	stp	xzr, x20, [x3, #8]
  4208c8:	add	x19, x19, x0
  4208cc:	mov	x4, #0xffffffffffffffff    	// #-1
  4208d0:	str	x22, [x3, #24]
  4208d4:	stp	xzr, x26, [x3, #48]
  4208d8:	ldrb	w0, [x2, #26]
  4208dc:	and	w0, w0, #0xfffffff3
  4208e0:	strb	w0, [x2, #26]
  4208e4:	stp	xzr, xzr, [x3, #32]
  4208e8:	str	x4, [x3, #64]
  4208ec:	cbz	x20, 4208f4 <_obstack_memory_used@@Base+0x7be4>
  4208f0:	str	x19, [x20]
  4208f4:	cbz	x22, 420984 <_obstack_memory_used@@Base+0x7c74>
  4208f8:	str	x19, [x22]
  4208fc:	cbz	x19, 420984 <_obstack_memory_used@@Base+0x7c74>
  420900:	cmp	x20, #0x0
  420904:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  420908:	b.eq	420984 <_obstack_memory_used@@Base+0x7c74>  // b.none
  42090c:	ldr	x0, [x24, #40]
  420910:	str	x0, [x21, #40]
  420914:	str	x0, [x20, #40]
  420918:	ldrb	w0, [x24, #50]
  42091c:	ldrb	w1, [x21, #50]
  420920:	ubfx	x0, x0, #3, #1
  420924:	bfi	w1, w0, #3, #1
  420928:	strb	w1, [x21, #50]
  42092c:	ldrb	w1, [x20, #50]
  420930:	bfi	w1, w0, #3, #1
  420934:	strb	w1, [x20, #50]
  420938:	ldp	x21, x22, [sp, #32]
  42093c:	mov	x0, x19
  420940:	ldp	x19, x20, [sp, #16]
  420944:	ldp	x23, x24, [sp, #48]
  420948:	ldp	x25, x26, [sp, #64]
  42094c:	ldp	x29, x30, [sp], #80
  420950:	ret
  420954:	ldr	x0, [x2, #40]
  420958:	cmp	x0, #0x3f
  42095c:	b.gt	42093c <_obstack_memory_used@@Base+0x7c2c>
  420960:	ldr	x1, [x23, #160]
  420964:	lsr	x0, x1, x0
  420968:	tbnz	w0, #0, 42072c <_obstack_memory_used@@Base+0x7a1c>
  42096c:	mov	x0, x19
  420970:	ldp	x19, x20, [sp, #16]
  420974:	ldp	x23, x24, [sp, #48]
  420978:	ldp	x25, x26, [sp, #64]
  42097c:	ldp	x29, x30, [sp], #80
  420980:	ret
  420984:	mov	w0, #0xc                   	// #12
  420988:	mov	x19, #0x0                   	// #0
  42098c:	ldp	x21, x22, [sp, #32]
  420990:	str	w0, [x25]
  420994:	mov	x0, x19
  420998:	ldp	x19, x20, [sp, #16]
  42099c:	ldp	x23, x24, [sp, #48]
  4209a0:	ldp	x25, x26, [sp, #64]
  4209a4:	ldp	x29, x30, [sp], #80
  4209a8:	ret
  4209ac:	mov	x0, #0x3c8                 	// #968
  4209b0:	bl	402800 <malloc@plt>
  4209b4:	mov	x20, x0
  4209b8:	cbz	x0, 420a64 <_obstack_memory_used@@Base+0x7d54>
  4209bc:	ldr	x0, [x23, #112]
  4209c0:	str	x0, [x20]
  4209c4:	mov	w5, #0x1                   	// #1
  4209c8:	mov	w1, #0x0                   	// #0
  4209cc:	mov	x0, #0x8                   	// #8
  4209d0:	str	x20, [x23, #112]
  4209d4:	b	420754 <_obstack_memory_used@@Base+0x7a44>
  4209d8:	mov	x0, #0x3c8                 	// #968
  4209dc:	bl	402800 <malloc@plt>
  4209e0:	mov	x21, x0
  4209e4:	cbz	x0, 420a5c <_obstack_memory_used@@Base+0x7d4c>
  4209e8:	ldr	x0, [x23, #112]
  4209ec:	str	x0, [x21]
  4209f0:	mov	w5, #0x1                   	// #1
  4209f4:	mov	w1, #0x0                   	// #0
  4209f8:	mov	x0, #0x8                   	// #8
  4209fc:	str	x21, [x23, #112]
  420a00:	b	4207c0 <_obstack_memory_used@@Base+0x7ab0>
  420a04:	mov	x0, #0x3c8                 	// #968
  420a08:	bl	402800 <malloc@plt>
  420a0c:	mov	x19, x0
  420a10:	cbz	x0, 420984 <_obstack_memory_used@@Base+0x7c74>
  420a14:	ldr	x0, [x23, #112]
  420a18:	str	x0, [x19]
  420a1c:	mov	w5, #0x1                   	// #1
  420a20:	mov	w1, #0x0                   	// #0
  420a24:	mov	x0, #0x8                   	// #8
  420a28:	str	x19, [x23, #112]
  420a2c:	b	4208a8 <_obstack_memory_used@@Base+0x7b98>
  420a30:	mov	x0, #0x3c8                 	// #968
  420a34:	bl	402800 <malloc@plt>
  420a38:	mov	x22, x0
  420a3c:	cbz	x0, 420a6c <_obstack_memory_used@@Base+0x7d5c>
  420a40:	ldr	x0, [x23, #112]
  420a44:	str	x0, [x22]
  420a48:	mov	w5, #0x1                   	// #1
  420a4c:	mov	w1, #0x0                   	// #0
  420a50:	mov	x3, #0x8                   	// #8
  420a54:	str	x22, [x23, #112]
  420a58:	b	420834 <_obstack_memory_used@@Base+0x7b24>
  420a5c:	mov	x21, #0x0                   	// #0
  420a60:	b	420808 <_obstack_memory_used@@Base+0x7af8>
  420a64:	mov	x20, #0x0                   	// #0
  420a68:	b	42079c <_obstack_memory_used@@Base+0x7a8c>
  420a6c:	ldr	w1, [x23, #128]
  420a70:	mov	x22, #0x0                   	// #0
  420a74:	b	420888 <_obstack_memory_used@@Base+0x7b78>
  420a78:	stp	x29, x30, [sp, #-128]!
  420a7c:	mov	x29, sp
  420a80:	stp	x19, x20, [sp, #16]
  420a84:	mov	x20, x3
  420a88:	stp	x21, x22, [sp, #32]
  420a8c:	mov	x22, x5
  420a90:	stp	x23, x24, [sp, #48]
  420a94:	mov	x24, x0
  420a98:	and	w23, w4, #0xff
  420a9c:	mov	x0, #0x20                  	// #32
  420aa0:	stp	x25, x26, [sp, #64]
  420aa4:	mov	x25, x1
  420aa8:	mov	x26, x2
  420aac:	mov	x1, #0x1                   	// #1
  420ab0:	str	xzr, [sp, #120]
  420ab4:	bl	402910 <calloc@plt>
  420ab8:	mov	x19, x0
  420abc:	cbz	x0, 420d78 <_obstack_memory_used@@Base+0x8068>
  420ac0:	mov	x1, #0x1                   	// #1
  420ac4:	mov	x0, #0x50                  	// #80
  420ac8:	bl	402910 <calloc@plt>
  420acc:	mov	x21, x0
  420ad0:	cbz	x0, 420d6c <_obstack_memory_used@@Base+0x805c>
  420ad4:	ldrb	w7, [x0, #32]
  420ad8:	mov	x5, x26
  420adc:	mov	x0, x25
  420ae0:	add	x4, sp, #0x78
  420ae4:	add	x3, x21, #0x48
  420ae8:	add	x2, x21, #0x18
  420aec:	bfxil	w7, w23, #0, #1
  420af0:	strb	w7, [x21, #32]
  420af4:	mov	x1, x19
  420af8:	mov	x6, #0x0                   	// #0
  420afc:	bl	41b3d0 <_obstack_memory_used@@Base+0x26c0>
  420b00:	mov	w25, w0
  420b04:	cbnz	w0, 420e38 <_obstack_memory_used@@Base+0x8128>
  420b08:	str	x27, [sp, #80]
  420b0c:	mov	x0, #0x1                   	// #1
  420b10:	ldrb	w1, [x20]
  420b14:	cbz	w1, 420b34 <_obstack_memory_used@@Base+0x7e24>
  420b18:	ubfx	x4, x1, #6, #2
  420b1c:	lsl	x3, x0, x1
  420b20:	ldrb	w1, [x20, #1]!
  420b24:	ldr	x2, [x19, x4, lsl #3]
  420b28:	orr	x2, x2, x3
  420b2c:	str	x2, [x19, x4, lsl #3]
  420b30:	cbnz	w1, 420b18 <_obstack_memory_used@@Base+0x7e08>
  420b34:	cbz	w23, 420b48 <_obstack_memory_used@@Base+0x7e38>
  420b38:	ldp	q1, q0, [x19]
  420b3c:	mvn	v1.16b, v1.16b
  420b40:	mvn	v0.16b, v0.16b
  420b44:	stp	q1, q0, [x19]
  420b48:	ldr	w27, [x24, #180]
  420b4c:	cmp	w27, #0x1
  420b50:	b.le	420b84 <_obstack_memory_used@@Base+0x7e74>
  420b54:	ldr	x0, [x24, #120]
  420b58:	add	x1, x0, #0xf
  420b5c:	sub	x1, x1, x19
  420b60:	cmp	x1, #0x1e
  420b64:	b.ls	420df8 <_obstack_memory_used@@Base+0x80e8>  // b.plast
  420b68:	ldp	q1, q0, [x19]
  420b6c:	ldr	q2, [x0]
  420b70:	and	v1.16b, v1.16b, v2.16b
  420b74:	str	q1, [x19]
  420b78:	ldr	q1, [x0, #16]
  420b7c:	and	v0.16b, v0.16b, v1.16b
  420b80:	str	q0, [x19, #16]
  420b84:	mov	x26, #0x0                   	// #0
  420b88:	str	wzr, [sp, #96]
  420b8c:	strh	wzr, [sp, #100]
  420b90:	strb	wzr, [sp, #102]
  420b94:	ldr	x0, [sp, #96]
  420b98:	ldr	w20, [x24, #128]
  420b9c:	bfi	x26, x0, #8, #56
  420ba0:	cmp	w20, #0xf
  420ba4:	b.eq	420e74 <_obstack_memory_used@@Base+0x8164>  // b.none
  420ba8:	ldr	x23, [x24, #112]
  420bac:	sbfiz	x1, x20, #6, #32
  420bb0:	movi	v0.4s, #0x0
  420bb4:	add	x2, x1, #0x20
  420bb8:	add	x0, x23, x1
  420bbc:	add	w4, w20, #0x1
  420bc0:	add	x2, x23, x2
  420bc4:	mov	x3, #0x3                   	// #3
  420bc8:	str	w4, [x24, #128]
  420bcc:	bfxil	x26, x3, #0, #8
  420bd0:	mov	w3, #0x40                  	// #64
  420bd4:	str	xzr, [x0, #24]
  420bd8:	stp	x19, x26, [x0, #48]
  420bdc:	mov	x5, #0xffffffffffffffff    	// #-1
  420be0:	smaddl	x3, w20, w3, x23
  420be4:	stur	q0, [x0, #8]
  420be8:	ldrb	w4, [x2, #26]
  420bec:	adds	x25, x3, #0x8
  420bf0:	and	w3, w4, #0xfffffff3
  420bf4:	strb	w3, [x2, #26]
  420bf8:	str	x5, [x0, #64]
  420bfc:	str	q0, [x0, #32]
  420c00:	b.eq	420d9c <_obstack_memory_used@@Base+0x808c>  // b.none
  420c04:	cmp	w27, #0x1
  420c08:	b.le	420d20 <_obstack_memory_used@@Base+0x8010>
  420c0c:	ldrb	w0, [x24, #176]
  420c10:	ldr	w1, [x24, #128]
  420c14:	orr	w0, w0, #0x2
  420c18:	strb	w0, [x24, #176]
  420c1c:	cmp	w1, #0xf
  420c20:	b.eq	420ed4 <_obstack_memory_used@@Base+0x81c4>  // b.none
  420c24:	mov	w4, #0x40                  	// #64
  420c28:	mov	x0, #0x8                   	// #8
  420c2c:	add	w5, w1, #0x1
  420c30:	mov	x27, x23
  420c34:	smaddl	x4, w1, w4, x0
  420c38:	sbfiz	x2, x1, #6, #32
  420c3c:	mov	x6, #0x6                   	// #6
  420c40:	add	x0, x27, x2
  420c44:	add	x3, x2, #0x20
  420c48:	movi	v0.4s, #0x0
  420c4c:	add	x3, x27, x3
  420c50:	str	w5, [x24, #128]
  420c54:	bfxil	x26, x6, #0, #8
  420c58:	str	xzr, [x0, #24]
  420c5c:	mov	x5, #0xffffffffffffffff    	// #-1
  420c60:	stp	x21, x26, [x0, #48]
  420c64:	sxtw	x21, w1
  420c68:	add	x22, x27, x4
  420c6c:	stur	q0, [x0, #8]
  420c70:	mov	x26, #0x0                   	// #0
  420c74:	ldrb	w1, [x3, #26]
  420c78:	and	w1, w1, #0xfffffff3
  420c7c:	strb	w1, [x3, #26]
  420c80:	str	x5, [x0, #64]
  420c84:	str	q0, [x0, #32]
  420c88:	ldr	w1, [x24, #128]
  420c8c:	cmp	w1, #0xf
  420c90:	b.eq	420efc <_obstack_memory_used@@Base+0x81ec>  // b.none
  420c94:	mov	w3, #0x40                  	// #64
  420c98:	mov	x0, #0x8                   	// #8
  420c9c:	add	w5, w1, #0x1
  420ca0:	mov	x19, x27
  420ca4:	smaddl	x3, w1, w3, x0
  420ca8:	sbfiz	x1, x1, #6, #32
  420cac:	add	x21, x27, x21, lsl #6
  420cb0:	add	x2, x19, x1
  420cb4:	add	x0, x1, #0x20
  420cb8:	add	x0, x19, x0
  420cbc:	mov	x4, #0xa                   	// #10
  420cc0:	ldr	x27, [sp, #80]
  420cc4:	str	w5, [x24, #128]
  420cc8:	bfxil	x26, x4, #0, #8
  420ccc:	stp	xzr, x25, [x2, #8]
  420cd0:	add	x19, x19, x3
  420cd4:	str	x22, [x2, #24]
  420cd8:	sbfiz	x20, x20, #6, #32
  420cdc:	stp	xzr, x26, [x2, #48]
  420ce0:	add	x23, x23, x20
  420ce4:	mov	x4, #0xffffffffffffffff    	// #-1
  420ce8:	ldrb	w3, [x0, #26]
  420cec:	and	w3, w3, #0xfffffff3
  420cf0:	strb	w3, [x0, #26]
  420cf4:	stp	xzr, xzr, [x2, #32]
  420cf8:	str	x4, [x2, #64]
  420cfc:	str	x19, [x23, #8]
  420d00:	str	x19, [x21, #8]
  420d04:	mov	x0, x19
  420d08:	ldp	x19, x20, [sp, #16]
  420d0c:	ldp	x21, x22, [sp, #32]
  420d10:	ldp	x23, x24, [sp, #48]
  420d14:	ldp	x25, x26, [sp, #64]
  420d18:	ldp	x29, x30, [sp], #128
  420d1c:	ret
  420d20:	ldr	x0, [x21]
  420d24:	mov	x19, x25
  420d28:	bl	402ae0 <free@plt>
  420d2c:	ldr	x0, [x21, #8]
  420d30:	bl	402ae0 <free@plt>
  420d34:	ldr	x0, [x21, #16]
  420d38:	bl	402ae0 <free@plt>
  420d3c:	ldr	x0, [x21, #24]
  420d40:	bl	402ae0 <free@plt>
  420d44:	mov	x0, x21
  420d48:	bl	402ae0 <free@plt>
  420d4c:	mov	x0, x19
  420d50:	ldp	x19, x20, [sp, #16]
  420d54:	ldp	x21, x22, [sp, #32]
  420d58:	ldp	x23, x24, [sp, #48]
  420d5c:	ldp	x25, x26, [sp, #64]
  420d60:	ldr	x27, [sp, #80]
  420d64:	ldp	x29, x30, [sp], #128
  420d68:	ret
  420d6c:	mov	x0, x19
  420d70:	mov	x19, #0x0                   	// #0
  420d74:	bl	402ae0 <free@plt>
  420d78:	mov	w0, #0xc                   	// #12
  420d7c:	str	w0, [x22]
  420d80:	mov	x0, x19
  420d84:	ldp	x19, x20, [sp, #16]
  420d88:	ldp	x21, x22, [sp, #32]
  420d8c:	ldp	x23, x24, [sp, #48]
  420d90:	ldp	x25, x26, [sp, #64]
  420d94:	ldp	x29, x30, [sp], #128
  420d98:	ret
  420d9c:	mov	x0, x19
  420da0:	bl	402ae0 <free@plt>
  420da4:	ldr	x0, [x21]
  420da8:	mov	x19, #0x0                   	// #0
  420dac:	bl	402ae0 <free@plt>
  420db0:	ldr	x0, [x21, #8]
  420db4:	bl	402ae0 <free@plt>
  420db8:	ldr	x0, [x21, #16]
  420dbc:	bl	402ae0 <free@plt>
  420dc0:	ldr	x0, [x21, #24]
  420dc4:	bl	402ae0 <free@plt>
  420dc8:	mov	x0, x21
  420dcc:	bl	402ae0 <free@plt>
  420dd0:	mov	w0, #0xc                   	// #12
  420dd4:	ldr	x27, [sp, #80]
  420dd8:	str	w0, [x22]
  420ddc:	mov	x0, x19
  420de0:	ldp	x19, x20, [sp, #16]
  420de4:	ldp	x21, x22, [sp, #32]
  420de8:	ldp	x23, x24, [sp, #48]
  420dec:	ldp	x25, x26, [sp, #64]
  420df0:	ldp	x29, x30, [sp], #128
  420df4:	ret
  420df8:	ldp	x1, x3, [x19]
  420dfc:	ldr	x2, [x0]
  420e00:	and	x1, x1, x2
  420e04:	str	x1, [x19]
  420e08:	ldr	x2, [x19, #16]
  420e0c:	ldr	x4, [x0, #8]
  420e10:	ldr	x1, [x19, #24]
  420e14:	and	x3, x3, x4
  420e18:	str	x3, [x19, #8]
  420e1c:	ldr	x3, [x0, #16]
  420e20:	and	x2, x2, x3
  420e24:	str	x2, [x19, #16]
  420e28:	ldr	x0, [x0, #24]
  420e2c:	and	x0, x1, x0
  420e30:	str	x0, [x19, #24]
  420e34:	b	420b84 <_obstack_memory_used@@Base+0x7e74>
  420e38:	mov	x0, x19
  420e3c:	bl	402ae0 <free@plt>
  420e40:	ldr	x0, [x21]
  420e44:	mov	x19, #0x0                   	// #0
  420e48:	bl	402ae0 <free@plt>
  420e4c:	ldr	x0, [x21, #8]
  420e50:	bl	402ae0 <free@plt>
  420e54:	ldr	x0, [x21, #16]
  420e58:	bl	402ae0 <free@plt>
  420e5c:	ldr	x0, [x21, #24]
  420e60:	bl	402ae0 <free@plt>
  420e64:	mov	x0, x21
  420e68:	bl	402ae0 <free@plt>
  420e6c:	str	w25, [x22]
  420e70:	b	420d04 <_obstack_memory_used@@Base+0x7ff4>
  420e74:	mov	x0, #0x3c8                 	// #968
  420e78:	bl	402800 <malloc@plt>
  420e7c:	mov	x23, x0
  420e80:	cbz	x0, 420d9c <_obstack_memory_used@@Base+0x808c>
  420e84:	movi	v0.4s, #0x0
  420e88:	mov	x0, #0x3                   	// #3
  420e8c:	bfxil	x26, x0, #0, #8
  420e90:	stp	x19, x26, [x23, #48]
  420e94:	mov	w1, #0x1                   	// #1
  420e98:	ubfx	x0, x26, #16, #8
  420e9c:	mov	x2, #0xffffffffffffffff    	// #-1
  420ea0:	ldr	x3, [x24, #112]
  420ea4:	and	w0, w0, #0xfffffff3
  420ea8:	add	x25, x23, #0x8
  420eac:	mov	w20, #0x0                   	// #0
  420eb0:	str	x3, [x23]
  420eb4:	stur	q0, [x23, #8]
  420eb8:	str	xzr, [x23, #24]
  420ebc:	str	q0, [x23, #32]
  420ec0:	strb	w0, [x23, #58]
  420ec4:	str	x2, [x23, #64]
  420ec8:	str	x23, [x24, #112]
  420ecc:	str	w1, [x24, #128]
  420ed0:	b	420c04 <_obstack_memory_used@@Base+0x7ef4>
  420ed4:	mov	x0, #0x3c8                 	// #968
  420ed8:	bl	402800 <malloc@plt>
  420edc:	mov	x27, x0
  420ee0:	cbz	x0, 420d9c <_obstack_memory_used@@Base+0x808c>
  420ee4:	mov	w1, #0x0                   	// #0
  420ee8:	mov	w5, #0x1                   	// #1
  420eec:	mov	x4, #0x8                   	// #8
  420ef0:	str	x23, [x0]
  420ef4:	str	x0, [x24, #112]
  420ef8:	b	420c38 <_obstack_memory_used@@Base+0x7f28>
  420efc:	mov	x0, #0x3c8                 	// #968
  420f00:	bl	402800 <malloc@plt>
  420f04:	mov	x19, x0
  420f08:	cbz	x0, 420f24 <_obstack_memory_used@@Base+0x8214>
  420f0c:	mov	w1, #0x0                   	// #0
  420f10:	mov	w5, #0x1                   	// #1
  420f14:	mov	x3, #0x8                   	// #8
  420f18:	str	x27, [x0]
  420f1c:	str	x0, [x24, #112]
  420f20:	b	420ca8 <_obstack_memory_used@@Base+0x7f98>
  420f24:	mov	x19, #0x0                   	// #0
  420f28:	ldr	x27, [sp, #80]
  420f2c:	b	420d04 <_obstack_memory_used@@Base+0x7ff4>
  420f30:	stp	x29, x30, [sp, #-64]!
  420f34:	mov	x29, sp
  420f38:	stp	x19, x20, [sp, #16]
  420f3c:	mov	x20, x0
  420f40:	mov	x19, x2
  420f44:	cbz	x1, 420f6c <_obstack_memory_used@@Base+0x825c>
  420f48:	stp	x21, x22, [sp, #32]
  420f4c:	cmp	x2, #0x0
  420f50:	mov	x21, x1
  420f54:	ldr	x22, [x1, #8]
  420f58:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  420f5c:	b.gt	420f94 <_obstack_memory_used@@Base+0x8284>
  420f60:	cmp	x22, #0x0
  420f64:	b.gt	420fa8 <_obstack_memory_used@@Base+0x8298>
  420f68:	ldp	x21, x22, [sp, #32]
  420f6c:	cbz	x19, 420f7c <_obstack_memory_used@@Base+0x826c>
  420f70:	ldr	x2, [x19, #8]
  420f74:	cmp	x2, #0x0
  420f78:	b.gt	420fdc <_obstack_memory_used@@Base+0x82cc>
  420f7c:	mov	w0, #0x0                   	// #0
  420f80:	stp	xzr, xzr, [x20]
  420f84:	str	xzr, [x20, #16]
  420f88:	ldp	x19, x20, [sp, #16]
  420f8c:	ldp	x29, x30, [sp], #64
  420f90:	ret
  420f94:	str	x23, [sp, #48]
  420f98:	ldr	x23, [x2, #8]
  420f9c:	cmp	x23, #0x0
  420fa0:	b.gt	42101c <_obstack_memory_used@@Base+0x830c>
  420fa4:	ldr	x23, [sp, #48]
  420fa8:	dup	v0.2d, x22
  420fac:	lsl	x22, x22, #3
  420fb0:	mov	x0, x22
  420fb4:	str	q0, [x20]
  420fb8:	bl	402800 <malloc@plt>
  420fbc:	str	x0, [x20, #16]
  420fc0:	cbz	x0, 4210e8 <_obstack_memory_used@@Base+0x83d8>
  420fc4:	ldr	x1, [x21, #16]
  420fc8:	mov	x2, x22
  420fcc:	bl	402650 <memcpy@plt>
  420fd0:	mov	w0, #0x0                   	// #0
  420fd4:	ldp	x21, x22, [sp, #32]
  420fd8:	b	420f88 <_obstack_memory_used@@Base+0x8278>
  420fdc:	dup	v0.2d, x2
  420fe0:	stp	x21, x22, [sp, #32]
  420fe4:	lsl	x21, x2, #3
  420fe8:	mov	x0, x21
  420fec:	str	q0, [x20]
  420ff0:	bl	402800 <malloc@plt>
  420ff4:	str	x0, [x20, #16]
  420ff8:	cbz	x0, 4210e8 <_obstack_memory_used@@Base+0x83d8>
  420ffc:	ldr	x1, [x19, #16]
  421000:	mov	x2, x21
  421004:	bl	402650 <memcpy@plt>
  421008:	mov	w0, #0x0                   	// #0
  42100c:	ldp	x19, x20, [sp, #16]
  421010:	ldp	x21, x22, [sp, #32]
  421014:	ldp	x29, x30, [sp], #64
  421018:	ret
  42101c:	add	x0, x22, x23
  421020:	str	x0, [x20]
  421024:	lsl	x0, x0, #3
  421028:	bl	402800 <malloc@plt>
  42102c:	str	x0, [x20, #16]
  421030:	cbz	x0, 4210f8 <_obstack_memory_used@@Base+0x83e8>
  421034:	sub	x7, x0, #0x8
  421038:	mov	x3, #0x0                   	// #0
  42103c:	mov	x4, #0x0                   	// #0
  421040:	ldr	x6, [x19, #16]
  421044:	mov	x19, #0x0                   	// #0
  421048:	ldr	x1, [x21, #16]
  42104c:	b	42106c <_obstack_memory_used@@Base+0x835c>
  421050:	cinc	x3, x3, eq  // eq = none
  421054:	add	x4, x4, #0x1
  421058:	str	x2, [x7, x19, lsl #3]
  42105c:	cmp	x22, x4
  421060:	b.le	42108c <_obstack_memory_used@@Base+0x837c>
  421064:	cmp	x23, x3
  421068:	b.le	4210cc <_obstack_memory_used@@Base+0x83bc>
  42106c:	ldr	x2, [x1, x4, lsl #3]
  421070:	add	x19, x19, #0x1
  421074:	ldr	x5, [x6, x3, lsl #3]
  421078:	cmp	x2, x5
  42107c:	b.le	421050 <_obstack_memory_used@@Base+0x8340>
  421080:	add	x3, x3, #0x1
  421084:	str	x5, [x7, x19, lsl #3]
  421088:	b	42105c <_obstack_memory_used@@Base+0x834c>
  42108c:	cmp	x23, x3
  421090:	b.gt	4210b0 <_obstack_memory_used@@Base+0x83a0>
  421094:	ldp	x21, x22, [sp, #32]
  421098:	mov	w0, #0x0                   	// #0
  42109c:	ldr	x23, [sp, #48]
  4210a0:	str	x19, [x20, #8]
  4210a4:	ldp	x19, x20, [sp, #16]
  4210a8:	ldp	x29, x30, [sp], #64
  4210ac:	ret
  4210b0:	sub	x2, x23, x3
  4210b4:	add	x0, x0, x19, lsl #3
  4210b8:	add	x1, x6, x3, lsl #3
  4210bc:	add	x19, x19, x2
  4210c0:	lsl	x2, x2, #3
  4210c4:	bl	402650 <memcpy@plt>
  4210c8:	b	421094 <_obstack_memory_used@@Base+0x8384>
  4210cc:	sub	x2, x22, x4
  4210d0:	add	x1, x1, x4, lsl #3
  4210d4:	add	x0, x0, x19, lsl #3
  4210d8:	add	x19, x19, x2
  4210dc:	lsl	x2, x2, #3
  4210e0:	bl	402650 <memcpy@plt>
  4210e4:	b	421094 <_obstack_memory_used@@Base+0x8384>
  4210e8:	mov	w0, #0xc                   	// #12
  4210ec:	stp	xzr, xzr, [x20]
  4210f0:	ldp	x21, x22, [sp, #32]
  4210f4:	b	420f88 <_obstack_memory_used@@Base+0x8278>
  4210f8:	mov	w0, #0xc                   	// #12
  4210fc:	ldp	x21, x22, [sp, #32]
  421100:	ldr	x23, [sp, #48]
  421104:	b	420f88 <_obstack_memory_used@@Base+0x8278>
  421108:	stp	x29, x30, [sp, #-224]!
  42110c:	mov	x29, sp
  421110:	stp	x19, x20, [sp, #16]
  421114:	ldr	x20, [x0, #72]
  421118:	stp	x25, x26, [sp, #64]
  42111c:	stp	x27, x28, [sp, #80]
  421120:	mov	x28, x0
  421124:	lsl	x0, x20, #3
  421128:	ldr	x26, [x1]
  42112c:	stp	x23, x24, [sp, #48]
  421130:	stp	x2, x0, [sp, #144]
  421134:	cmp	x26, #0x0
  421138:	str	x1, [sp, #176]
  42113c:	ldr	x23, [x28, #152]
  421140:	b.le	4211c0 <_obstack_memory_used@@Base+0x84b0>
  421144:	stp	x21, x22, [sp, #32]
  421148:	mov	x22, #0x0                   	// #0
  42114c:	nop
  421150:	ldr	x0, [sp, #144]
  421154:	ldr	x1, [x0]
  421158:	ldr	x0, [x23]
  42115c:	ldr	x19, [x1, x22, lsl #3]
  421160:	lsl	x21, x19, #4
  421164:	add	x0, x0, x21
  421168:	ldrb	w1, [x0, #8]
  42116c:	cmp	w1, #0x4
  421170:	b.ne	4211b0 <_obstack_memory_used@@Base+0x84a0>  // b.any
  421174:	ldr	w24, [x0, #8]
  421178:	tst	w24, #0x3ff00
  42117c:	b.eq	4211e8 <_obstack_memory_used@@Base+0x84d8>  // b.none
  421180:	ldr	w2, [x28, #160]
  421184:	mov	x1, x20
  421188:	mov	x0, x28
  42118c:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  421190:	ubfx	x1, x24, #8, #10
  421194:	tbz	w24, #10, 4211dc <_obstack_memory_used@@Base+0x84cc>
  421198:	tbz	w0, #0, 4211b0 <_obstack_memory_used@@Base+0x84a0>
  42119c:	tbnz	w1, #3, 4211b0 <_obstack_memory_used@@Base+0x84a0>
  4211a0:	tbz	w1, #5, 4211a8 <_obstack_memory_used@@Base+0x8498>
  4211a4:	tbz	w0, #1, 4211b0 <_obstack_memory_used@@Base+0x84a0>
  4211a8:	tbz	w1, #7, 4211e8 <_obstack_memory_used@@Base+0x84d8>
  4211ac:	tbnz	w0, #3, 4211e8 <_obstack_memory_used@@Base+0x84d8>
  4211b0:	add	x22, x22, #0x1
  4211b4:	cmp	x22, x26
  4211b8:	b.lt	421150 <_obstack_memory_used@@Base+0x8440>  // b.tstop
  4211bc:	ldp	x21, x22, [sp, #32]
  4211c0:	mov	w0, #0x0                   	// #0
  4211c4:	ldp	x19, x20, [sp, #16]
  4211c8:	ldp	x23, x24, [sp, #48]
  4211cc:	ldp	x25, x26, [sp, #64]
  4211d0:	ldp	x27, x28, [sp, #80]
  4211d4:	ldp	x29, x30, [sp], #224
  4211d8:	ret
  4211dc:	tbz	w1, #3, 4211a0 <_obstack_memory_used@@Base+0x8490>
  4211e0:	tbz	w0, #0, 4211a0 <_obstack_memory_used@@Base+0x8490>
  4211e4:	b	4211b0 <_obstack_memory_used@@Base+0x84a0>
  4211e8:	ldr	x5, [x28, #200]
  4211ec:	mov	x1, #0x0                   	// #0
  4211f0:	mov	x27, x5
  4211f4:	mov	x3, x5
  4211f8:	b	42121c <_obstack_memory_used@@Base+0x850c>
  4211fc:	asr	x0, x0, #1
  421200:	ldr	x4, [x28, #216]
  421204:	add	x2, x0, x0, lsl #2
  421208:	add	x2, x4, x2, lsl #3
  42120c:	ldr	x2, [x2, #8]
  421210:	cmp	x20, x2
  421214:	b.gt	421440 <_obstack_memory_used@@Base+0x8730>
  421218:	mov	x3, x0
  42121c:	add	x0, x3, x1
  421220:	cmp	x3, x1
  421224:	b.gt	4211fc <_obstack_memory_used@@Base+0x84ec>
  421228:	cmp	x5, x1
  42122c:	b.le	421448 <_obstack_memory_used@@Base+0x8738>
  421230:	ldr	x0, [x28, #216]
  421234:	add	x1, x1, x1, lsl #2
  421238:	add	x1, x0, x1, lsl #3
  42123c:	ldr	x0, [x1, #8]
  421240:	cmp	x20, x0
  421244:	b.eq	421254 <_obstack_memory_used@@Base+0x8544>  // b.none
  421248:	b	421448 <_obstack_memory_used@@Base+0x8738>
  42124c:	ldurb	w0, [x1, #-8]
  421250:	cbz	w0, 421448 <_obstack_memory_used@@Base+0x8738>
  421254:	ldr	x0, [x1]
  421258:	add	x1, x1, #0x28
  42125c:	cmp	x19, x0
  421260:	b.ne	42124c <_obstack_memory_used@@Base+0x853c>  // b.any
  421264:	add	x0, x19, x19, lsl #1
  421268:	str	wzr, [sp, #196]
  42126c:	cmp	x27, x5
  421270:	mov	x3, x5
  421274:	lsl	x0, x0, #3
  421278:	str	x0, [sp, #120]
  42127c:	lsl	x0, x19, #3
  421280:	str	x0, [sp, #112]
  421284:	b.ge	421390 <_obstack_memory_used@@Base+0x8680>  // b.tcont
  421288:	ldr	x1, [x28, #216]
  42128c:	add	x0, x27, x27, lsl #2
  421290:	ldr	x2, [x1, x0, lsl #3]
  421294:	add	x0, x1, x0, lsl #3
  421298:	cmp	x19, x2
  42129c:	b.ne	421384 <_obstack_memory_used@@Base+0x8674>  // b.any
  4212a0:	ldr	x1, [x0, #8]
  4212a4:	cmp	x20, x1
  4212a8:	b.ne	421384 <_obstack_memory_used@@Base+0x8674>  // b.any
  4212ac:	ldp	x21, x0, [x0, #16]
  4212b0:	ldr	x24, [x23, #48]
  4212b4:	subs	x25, x0, x21
  4212b8:	b.ne	4213f4 <_obstack_memory_used@@Base+0x86e4>  // b.any
  4212bc:	ldr	x1, [x23, #40]
  4212c0:	ldr	x2, [sp, #120]
  4212c4:	add	x1, x1, x2
  4212c8:	ldr	x1, [x1, #16]
  4212cc:	ldr	x1, [x1]
  4212d0:	add	x1, x1, x1, lsl #1
  4212d4:	add	x24, x24, x1, lsl #3
  4212d8:	ldr	w2, [x28, #160]
  4212dc:	add	x0, x20, x0
  4212e0:	sub	x21, x0, x21
  4212e4:	mov	x0, x28
  4212e8:	sub	x1, x21, #0x1
  4212ec:	mov	x26, #0x0                   	// #0
  4212f0:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  4212f4:	mov	w3, w0
  4212f8:	ldr	x0, [sp, #152]
  4212fc:	ldr	x4, [x28, #184]
  421300:	ldr	x1, [x4, x0]
  421304:	ldr	x0, [x4, x21, lsl #3]
  421308:	cbz	x1, 421310 <_obstack_memory_used@@Base+0x8600>
  42130c:	ldr	x26, [x1, #16]
  421310:	cbz	x0, 42140c <_obstack_memory_used@@Base+0x86fc>
  421314:	ldr	x1, [x0, #80]
  421318:	mov	x2, x24
  42131c:	add	x0, sp, #0xc8
  421320:	str	w3, [sp, #104]
  421324:	bl	420f30 <_obstack_memory_used@@Base+0x8220>
  421328:	str	w0, [sp, #196]
  42132c:	ldr	w3, [sp, #104]
  421330:	cbnz	w0, 4215e0 <_obstack_memory_used@@Base+0x88d0>
  421334:	ldr	x4, [x28, #184]
  421338:	mov	x1, x23
  42133c:	add	x2, sp, #0xc8
  421340:	add	x0, sp, #0xc4
  421344:	str	x4, [sp, #104]
  421348:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  42134c:	ldr	x4, [sp, #104]
  421350:	str	x0, [x4, x21, lsl #3]
  421354:	ldr	x0, [sp, #216]
  421358:	bl	402ae0 <free@plt>
  42135c:	ldr	x1, [x28, #184]
  421360:	ldr	x0, [x1, x21, lsl #3]
  421364:	cbz	x0, 421434 <_obstack_memory_used@@Base+0x8724>
  421368:	cbnz	x25, 421380 <_obstack_memory_used@@Base+0x8670>
  42136c:	ldr	x0, [sp, #152]
  421370:	ldr	x0, [x1, x0]
  421374:	ldr	x0, [x0, #16]
  421378:	cmp	x0, x26
  42137c:	b.gt	42139c <_obstack_memory_used@@Base+0x868c>
  421380:	ldr	x3, [x28, #200]
  421384:	add	x27, x27, #0x1
  421388:	cmp	x27, x3
  42138c:	b.lt	421288 <_obstack_memory_used@@Base+0x8578>  // b.tstop
  421390:	ldr	x0, [sp, #176]
  421394:	ldr	x26, [x0]
  421398:	b	4211b0 <_obstack_memory_used@@Base+0x84a0>
  42139c:	add	x21, x24, #0x8
  4213a0:	add	x24, x24, #0x10
  4213a4:	mov	x2, x24
  4213a8:	mov	x1, x21
  4213ac:	mov	x3, x20
  4213b0:	mov	x0, x28
  4213b4:	bl	41b2b0 <_obstack_memory_used@@Base+0x25a0>
  4213b8:	str	w0, [sp, #196]
  4213bc:	cbnz	w0, 4213d8 <_obstack_memory_used@@Base+0x86c8>
  4213c0:	mov	x2, x24
  4213c4:	mov	x1, x21
  4213c8:	mov	x0, x28
  4213cc:	bl	421108 <_obstack_memory_used@@Base+0x83f8>
  4213d0:	str	w0, [sp, #196]
  4213d4:	cbz	w0, 421380 <_obstack_memory_used@@Base+0x8670>
  4213d8:	ldp	x21, x22, [sp, #32]
  4213dc:	ldp	x19, x20, [sp, #16]
  4213e0:	ldp	x23, x24, [sp, #48]
  4213e4:	ldp	x25, x26, [sp, #64]
  4213e8:	ldp	x27, x28, [sp, #80]
  4213ec:	ldp	x29, x30, [sp], #224
  4213f0:	ret
  4213f4:	ldr	x1, [x23, #24]
  4213f8:	ldr	x2, [sp, #112]
  4213fc:	ldr	x1, [x1, x2]
  421400:	add	x1, x1, x1, lsl #1
  421404:	add	x24, x24, x1, lsl #3
  421408:	b	4212d8 <_obstack_memory_used@@Base+0x85c8>
  42140c:	mov	x1, x23
  421410:	mov	x2, x24
  421414:	add	x0, sp, #0xc4
  421418:	str	x4, [sp, #104]
  42141c:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  421420:	ldr	x4, [sp, #104]
  421424:	ldr	x1, [x28, #184]
  421428:	str	x0, [x4, x21, lsl #3]
  42142c:	ldr	x0, [x1, x21, lsl #3]
  421430:	cbnz	x0, 421368 <_obstack_memory_used@@Base+0x8658>
  421434:	ldr	w0, [sp, #196]
  421438:	cbz	w0, 421368 <_obstack_memory_used@@Base+0x8658>
  42143c:	b	4213d8 <_obstack_memory_used@@Base+0x86c8>
  421440:	add	x1, x0, #0x1
  421444:	b	42121c <_obstack_memory_used@@Base+0x850c>
  421448:	ldr	x0, [x28, #152]
  42144c:	str	x0, [sp, #168]
  421450:	ldr	x2, [x28, #232]
  421454:	ldr	x1, [x0]
  421458:	cmp	x2, #0x0
  42145c:	ldr	x0, [x1, x21]
  421460:	str	x0, [sp, #160]
  421464:	b.le	421264 <_obstack_memory_used@@Base+0x8554>
  421468:	ldr	x7, [x28, #8]
  42146c:	str	xzr, [sp, #136]
  421470:	ldr	x3, [sp, #136]
  421474:	ldr	x0, [x28, #248]
  421478:	ldr	x25, [x0, x3, lsl #3]
  42147c:	ldr	x0, [x25, #8]
  421480:	lsl	x0, x0, #4
  421484:	ldr	x0, [x1, x0]
  421488:	ldr	x1, [sp, #160]
  42148c:	cmp	x1, x0
  421490:	b.eq	4214b4 <_obstack_memory_used@@Base+0x87a4>  // b.none
  421494:	ldr	x0, [sp, #136]
  421498:	add	x0, x0, #0x1
  42149c:	str	x0, [sp, #136]
  4214a0:	cmp	x0, x2
  4214a4:	b.ge	4217d8 <_obstack_memory_used@@Base+0x8ac8>  // b.tcont
  4214a8:	ldr	x0, [sp, #168]
  4214ac:	ldr	x1, [x0]
  4214b0:	b	421470 <_obstack_memory_used@@Base+0x8760>
  4214b4:	ldr	x0, [x25]
  4214b8:	str	x0, [sp, #104]
  4214bc:	ldr	x2, [x25, #32]
  4214c0:	cmp	x2, #0x0
  4214c4:	b.le	42180c <_obstack_memory_used@@Base+0x8afc>
  4214c8:	mov	x26, x20
  4214cc:	mov	x21, #0x0                   	// #0
  4214d0:	b	4214e0 <_obstack_memory_used@@Base+0x87d0>
  4214d4:	ldr	x2, [x25, #32]
  4214d8:	cmp	x21, x2
  4214dc:	b.ge	42179c <_obstack_memory_used@@Base+0x8a8c>  // b.tcont
  4214e0:	ldr	x0, [x25, #40]
  4214e4:	mov	x10, x26
  4214e8:	ldr	x24, [sp, #104]
  4214ec:	ldr	x4, [x0, x21, lsl #3]
  4214f0:	ldr	x0, [x4, #8]
  4214f4:	str	x0, [sp, #104]
  4214f8:	sub	x3, x0, x24
  4214fc:	cmp	x3, #0x0
  421500:	add	x26, x26, x3
  421504:	b.le	421538 <_obstack_memory_used@@Base+0x8828>
  421508:	ldr	x0, [x28, #48]
  42150c:	cmp	x0, x26
  421510:	b.lt	421564 <_obstack_memory_used@@Base+0x8854>  // b.tstop
  421514:	add	x1, x7, x24
  421518:	add	x0, x7, x10
  42151c:	mov	x2, x3
  421520:	stp	x7, x10, [sp, #112]
  421524:	str	x4, [sp, #128]
  421528:	bl	402a60 <memcmp@plt>
  42152c:	ldp	x7, x10, [sp, #112]
  421530:	ldr	x4, [sp, #128]
  421534:	cbnz	w0, 421608 <_obstack_memory_used@@Base+0x88f8>
  421538:	mov	x2, x4
  42153c:	mov	x3, x19
  421540:	mov	x4, x20
  421544:	mov	x1, x25
  421548:	mov	x0, x28
  42154c:	bl	41fa88 <_obstack_memory_used@@Base+0x6d78>
  421550:	add	x21, x21, #0x1
  421554:	cmp	w0, #0x1
  421558:	ldr	x7, [x28, #8]
  42155c:	b.ls	4214d4 <_obstack_memory_used@@Base+0x87c4>  // b.plast
  421560:	b	4213d8 <_obstack_memory_used@@Base+0x86c8>
  421564:	ldr	x13, [x28, #88]
  421568:	stp	x4, x3, [sp, #112]
  42156c:	add	w1, w26, #0x1
  421570:	mov	x0, x28
  421574:	cmp	x13, x26
  421578:	b.lt	42160c <_obstack_memory_used@@Base+0x88fc>  // b.tstop
  42157c:	ldr	x2, [x28, #192]
  421580:	str	x2, [sp, #128]
  421584:	str	x10, [sp, #184]
  421588:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  42158c:	cbnz	w0, 4213d8 <_obstack_memory_used@@Base+0x86c8>
  421590:	ldr	x2, [sp, #128]
  421594:	ldp	x4, x3, [sp, #112]
  421598:	cmp	x2, x26
  42159c:	ldr	x10, [sp, #184]
  4215a0:	b.lt	4215ac <_obstack_memory_used@@Base+0x889c>  // b.tstop
  4215a4:	ldr	x7, [x28, #8]
  4215a8:	b	421514 <_obstack_memory_used@@Base+0x8804>
  4215ac:	ldr	x0, [x28, #184]
  4215b0:	add	x11, x2, #0x1
  4215b4:	sub	x2, x26, x2
  4215b8:	mov	w1, #0x0                   	// #0
  4215bc:	str	x10, [sp, #128]
  4215c0:	lsl	x2, x2, #3
  4215c4:	add	x0, x0, x11, lsl #3
  4215c8:	bl	4028d0 <memset@plt>
  4215cc:	str	x26, [x28, #192]
  4215d0:	ldr	x7, [x28, #8]
  4215d4:	ldp	x4, x3, [sp, #112]
  4215d8:	ldr	x10, [sp, #128]
  4215dc:	b	421514 <_obstack_memory_used@@Base+0x8804>
  4215e0:	ldr	x0, [sp, #216]
  4215e4:	bl	402ae0 <free@plt>
  4215e8:	ldr	w0, [sp, #196]
  4215ec:	ldp	x19, x20, [sp, #16]
  4215f0:	ldp	x21, x22, [sp, #32]
  4215f4:	ldp	x23, x24, [sp, #48]
  4215f8:	ldp	x25, x26, [sp, #64]
  4215fc:	ldp	x27, x28, [sp, #80]
  421600:	ldp	x29, x30, [sp], #224
  421604:	ret
  421608:	ldr	x2, [x25, #32]
  42160c:	cmp	x21, x2
  421610:	b.ge	42161c <_obstack_memory_used@@Base+0x890c>  // b.tcont
  421614:	ldr	x2, [x28, #232]
  421618:	b	421494 <_obstack_memory_used@@Base+0x8784>
  42161c:	cbnz	x21, 421794 <_obstack_memory_used@@Base+0x8a84>
  421620:	cmp	x20, x24
  421624:	b.lt	421614 <_obstack_memory_used@@Base+0x8904>  // b.tstop
  421628:	ldr	x0, [x25]
  42162c:	sub	x0, x24, x0
  421630:	cmp	x0, #0x0
  421634:	b.le	42165c <_obstack_memory_used@@Base+0x894c>
  421638:	ldr	x0, [x28, #48]
  42163c:	cmp	x0, x10
  421640:	b.le	4217ac <_obstack_memory_used@@Base+0x8a9c>
  421644:	add	x0, x7, x24
  421648:	ldrb	w1, [x7, x10]
  42164c:	add	x10, x10, #0x1
  421650:	ldurb	w0, [x0, #-1]
  421654:	cmp	w1, w0
  421658:	b.ne	421614 <_obstack_memory_used@@Base+0x8904>  // b.any
  42165c:	ldr	x0, [x28, #184]
  421660:	ldr	x1, [x0, x24, lsl #3]
  421664:	cbz	x1, 42175c <_obstack_memory_used@@Base+0x8a4c>
  421668:	ldr	x4, [x1, #16]
  42166c:	cmp	x4, #0x0
  421670:	b.le	42175c <_obstack_memory_used@@Base+0x8a4c>
  421674:	ldr	x0, [sp, #168]
  421678:	ldr	x6, [x1, #24]
  42167c:	ldr	x3, [x0]
  421680:	mov	x0, #0x0                   	// #0
  421684:	b	421690 <_obstack_memory_used@@Base+0x8980>
  421688:	cmp	x4, x0
  42168c:	b.eq	42175c <_obstack_memory_used@@Base+0x8a4c>  // b.none
  421690:	ldr	x21, [x6, x0, lsl #3]
  421694:	add	x0, x0, #0x1
  421698:	lsl	x1, x21, #4
  42169c:	add	x2, x3, x1
  4216a0:	ldrb	w2, [x2, #8]
  4216a4:	cmp	w2, #0x9
  4216a8:	b.ne	421688 <_obstack_memory_used@@Base+0x8978>  // b.any
  4216ac:	ldr	x1, [x3, x1]
  4216b0:	ldr	x2, [sp, #160]
  4216b4:	cmp	x2, x1
  4216b8:	b.ne	421688 <_obstack_memory_used@@Base+0x8978>  // b.any
  4216bc:	cmn	x21, #0x1
  4216c0:	b.eq	42175c <_obstack_memory_used@@Base+0x8a4c>  // b.none
  4216c4:	ldr	x1, [x25, #16]
  4216c8:	ldr	x26, [x25]
  4216cc:	cbz	x1, 421764 <_obstack_memory_used@@Base+0x8a54>
  4216d0:	ldr	x2, [x25, #8]
  4216d4:	mov	x3, x26
  4216d8:	mov	x5, x24
  4216dc:	mov	x4, x21
  4216e0:	mov	x0, x28
  4216e4:	mov	w6, #0x9                   	// #9
  4216e8:	stp	x7, x10, [sp, #104]
  4216ec:	bl	41f4f8 <_obstack_memory_used@@Base+0x67e8>
  4216f0:	cmp	w0, #0x1
  4216f4:	ldp	x7, x10, [sp, #104]
  4216f8:	b.eq	42175c <_obstack_memory_used@@Base+0x8a4c>  // b.none
  4216fc:	cbnz	w0, 4213d8 <_obstack_memory_used@@Base+0x86c8>
  421700:	ldp	x0, x1, [x25, #24]
  421704:	cmp	x1, x0
  421708:	b.eq	4217e0 <_obstack_memory_used@@Base+0x8ad0>  // b.none
  42170c:	mov	x1, #0x28                  	// #40
  421710:	mov	x0, #0x1                   	// #1
  421714:	str	x10, [sp, #104]
  421718:	bl	402910 <calloc@plt>
  42171c:	mov	x2, x0
  421720:	cbz	x0, 421788 <_obstack_memory_used@@Base+0x8a78>
  421724:	ldp	x0, x1, [x25, #32]
  421728:	mov	x4, x20
  42172c:	mov	x3, x19
  421730:	str	x2, [x1, x0, lsl #3]
  421734:	add	x6, x0, #0x1
  421738:	stp	x21, x24, [x2]
  42173c:	mov	x1, x25
  421740:	mov	x0, x28
  421744:	str	x6, [x25, #32]
  421748:	bl	41fa88 <_obstack_memory_used@@Base+0x6d78>
  42174c:	cmp	w0, #0x1
  421750:	ldr	x7, [x28, #8]
  421754:	ldr	x10, [sp, #104]
  421758:	b.hi	4213d8 <_obstack_memory_used@@Base+0x86c8>  // b.pmore
  42175c:	add	x24, x24, #0x1
  421760:	b	421620 <_obstack_memory_used@@Base+0x8910>
  421764:	sub	x1, x24, x26
  421768:	mov	x0, #0x18                  	// #24
  42176c:	add	x1, x1, #0x1
  421770:	stp	x7, x10, [sp, #104]
  421774:	bl	402910 <calloc@plt>
  421778:	str	x0, [x25, #16]
  42177c:	mov	x1, x0
  421780:	ldp	x7, x10, [sp, #104]
  421784:	cbnz	x0, 4216d0 <_obstack_memory_used@@Base+0x89c0>
  421788:	mov	w0, #0xc                   	// #12
  42178c:	ldp	x21, x22, [sp, #32]
  421790:	b	4213dc <_obstack_memory_used@@Base+0x86cc>
  421794:	mov	x26, x10
  421798:	str	x24, [sp, #104]
  42179c:	ldr	x0, [sp, #104]
  4217a0:	mov	x10, x26
  4217a4:	add	x24, x0, #0x1
  4217a8:	b	421620 <_obstack_memory_used@@Base+0x8910>
  4217ac:	ldr	x0, [x28, #88]
  4217b0:	cmp	x0, x10
  4217b4:	b.le	421614 <_obstack_memory_used@@Base+0x8904>
  4217b8:	add	w1, w10, #0x1
  4217bc:	mov	x0, x28
  4217c0:	str	x10, [sp, #104]
  4217c4:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  4217c8:	cbnz	w0, 4213d8 <_obstack_memory_used@@Base+0x86c8>
  4217cc:	ldr	x7, [x28, #8]
  4217d0:	ldr	x10, [sp, #104]
  4217d4:	b	421644 <_obstack_memory_used@@Base+0x8934>
  4217d8:	ldr	x5, [x28, #200]
  4217dc:	b	421264 <_obstack_memory_used@@Base+0x8554>
  4217e0:	ldr	x0, [x25, #40]
  4217e4:	lsl	x1, x1, #1
  4217e8:	add	x26, x1, #0x1
  4217ec:	str	x10, [sp, #104]
  4217f0:	lsl	x1, x26, #3
  4217f4:	bl	402930 <realloc@plt>
  4217f8:	cbz	x0, 421788 <_obstack_memory_used@@Base+0x8a78>
  4217fc:	str	x26, [x25, #24]
  421800:	str	x0, [x25, #40]
  421804:	ldr	x10, [sp, #104]
  421808:	b	42170c <_obstack_memory_used@@Base+0x89fc>
  42180c:	mov	x24, x0
  421810:	mov	x10, x20
  421814:	b	421620 <_obstack_memory_used@@Base+0x8910>
  421818:	stp	x29, x30, [sp, #-112]!
  42181c:	mov	x29, sp
  421820:	stp	x21, x22, [sp, #32]
  421824:	mov	x21, x0
  421828:	stp	x23, x24, [sp, #48]
  42182c:	ldp	x24, x0, [x1, #184]
  421830:	stp	x19, x20, [sp, #16]
  421834:	mov	x19, x1
  421838:	ldr	x20, [x1, #72]
  42183c:	ldr	x23, [x1, #152]
  421840:	cmp	x0, x20
  421844:	b.ge	421874 <_obstack_memory_used@@Base+0x8b64>  // b.tcont
  421848:	mov	x22, x2
  42184c:	str	x2, [x24, x20, lsl #3]
  421850:	str	x20, [x1, #192]
  421854:	ldr	x0, [x23, #152]
  421858:	cbnz	x0, 421938 <_obstack_memory_used@@Base+0x8c28>
  42185c:	mov	x0, x22
  421860:	ldp	x19, x20, [sp, #16]
  421864:	ldp	x21, x22, [sp, #32]
  421868:	ldp	x23, x24, [sp, #48]
  42186c:	ldp	x29, x30, [sp], #112
  421870:	ret
  421874:	ldr	x0, [x24, x20, lsl #3]
  421878:	cbz	x0, 42192c <_obstack_memory_used@@Base+0x8c1c>
  42187c:	ldr	x0, [x0, #80]
  421880:	cbz	x2, 4218ec <_obstack_memory_used@@Base+0x8bdc>
  421884:	ldr	x24, [x2, #80]
  421888:	mov	x2, x0
  42188c:	add	x0, sp, #0x58
  421890:	mov	x1, x24
  421894:	bl	420f30 <_obstack_memory_used@@Base+0x8220>
  421898:	str	w0, [x21]
  42189c:	cbnz	w0, 42198c <_obstack_memory_used@@Base+0x8c7c>
  4218a0:	ldr	w2, [x19, #160]
  4218a4:	mov	x0, x19
  4218a8:	ldr	x1, [x19, #72]
  4218ac:	str	x25, [sp, #64]
  4218b0:	sub	x1, x1, #0x1
  4218b4:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  4218b8:	ldr	x25, [x19, #184]
  4218bc:	mov	w3, w0
  4218c0:	add	x2, sp, #0x58
  4218c4:	mov	x1, x23
  4218c8:	mov	x0, x21
  4218cc:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4218d0:	str	x0, [x25, x20, lsl #3]
  4218d4:	mov	x22, x0
  4218d8:	cbz	x24, 421994 <_obstack_memory_used@@Base+0x8c84>
  4218dc:	ldr	x0, [sp, #104]
  4218e0:	bl	402ae0 <free@plt>
  4218e4:	ldr	x25, [sp, #64]
  4218e8:	b	421854 <_obstack_memory_used@@Base+0x8b44>
  4218ec:	ldp	x2, x3, [x0]
  4218f0:	stp	x2, x3, [sp, #88]
  4218f4:	ldr	w2, [x19, #160]
  4218f8:	ldr	x3, [x0, #16]
  4218fc:	sub	x1, x20, #0x1
  421900:	mov	x0, x19
  421904:	str	x3, [sp, #104]
  421908:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  42190c:	mov	w3, w0
  421910:	add	x2, sp, #0x58
  421914:	mov	x1, x23
  421918:	mov	x0, x21
  42191c:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  421920:	mov	x22, x0
  421924:	str	x0, [x24, x20, lsl #3]
  421928:	b	421854 <_obstack_memory_used@@Base+0x8b44>
  42192c:	mov	x22, x2
  421930:	str	x2, [x24, x20, lsl #3]
  421934:	b	421854 <_obstack_memory_used@@Base+0x8b44>
  421938:	cbz	x22, 42198c <_obstack_memory_used@@Base+0x8c7c>
  42193c:	add	x23, x22, #0x10
  421940:	add	x24, x22, #0x18
  421944:	mov	x1, x23
  421948:	mov	x2, x24
  42194c:	mov	x3, x20
  421950:	mov	x0, x19
  421954:	bl	41b2b0 <_obstack_memory_used@@Base+0x25a0>
  421958:	str	w0, [x21]
  42195c:	cbnz	w0, 42198c <_obstack_memory_used@@Base+0x8c7c>
  421960:	ldrb	w0, [x22, #104]
  421964:	tbz	w0, #6, 42185c <_obstack_memory_used@@Base+0x8b4c>
  421968:	mov	x2, x24
  42196c:	mov	x1, x23
  421970:	mov	x0, x19
  421974:	bl	421108 <_obstack_memory_used@@Base+0x83f8>
  421978:	str	w0, [x21]
  42197c:	cbnz	w0, 42198c <_obstack_memory_used@@Base+0x8c7c>
  421980:	ldr	x0, [x19, #184]
  421984:	ldr	x22, [x0, x20, lsl #3]
  421988:	b	42185c <_obstack_memory_used@@Base+0x8b4c>
  42198c:	mov	x22, #0x0                   	// #0
  421990:	b	42185c <_obstack_memory_used@@Base+0x8b4c>
  421994:	ldr	x25, [sp, #64]
  421998:	b	421854 <_obstack_memory_used@@Base+0x8b44>
  42199c:	nop
  4219a0:	stp	x29, x30, [sp, #-256]!
  4219a4:	mov	x29, sp
  4219a8:	stp	x19, x20, [sp, #16]
  4219ac:	mov	x20, x0
  4219b0:	mov	x19, x2
  4219b4:	ldr	x0, [x0, #184]
  4219b8:	stp	x21, x22, [sp, #32]
  4219bc:	lsl	x2, x2, #3
  4219c0:	stp	x23, x24, [sp, #48]
  4219c4:	mov	x21, x3
  4219c8:	ldr	x22, [x0, x19, lsl #3]
  4219cc:	stp	x25, x26, [sp, #64]
  4219d0:	mov	x26, x1
  4219d4:	str	x2, [sp, #104]
  4219d8:	add	x1, x0, x2
  4219dc:	str	wzr, [sp, #168]
  4219e0:	ldr	x0, [x3, #8]
  4219e4:	ldr	x23, [x20, #152]
  4219e8:	cbz	x22, 421ce4 <_obstack_memory_used@@Base+0x8fd4>
  4219ec:	cbnz	x0, 421a24 <_obstack_memory_used@@Base+0x8d14>
  4219f0:	ldr	x0, [x26]
  4219f4:	mov	w4, #0x0                   	// #0
  4219f8:	str	xzr, [x0, x19, lsl #3]
  4219fc:	ldr	x0, [x1]
  421a00:	ldrb	w0, [x0, #104]
  421a04:	tbnz	w0, #6, 421b44 <_obstack_memory_used@@Base+0x8e34>
  421a08:	mov	w0, w4
  421a0c:	ldp	x19, x20, [sp, #16]
  421a10:	ldp	x21, x22, [sp, #32]
  421a14:	ldp	x23, x24, [sp, #48]
  421a18:	ldp	x25, x26, [sp, #64]
  421a1c:	ldp	x29, x30, [sp], #256
  421a20:	ret
  421a24:	mov	x2, x3
  421a28:	mov	x1, x23
  421a2c:	add	x0, sp, #0xc8
  421a30:	str	wzr, [sp, #200]
  421a34:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  421a38:	ldr	w4, [sp, #200]
  421a3c:	cbnz	w4, 421a08 <_obstack_memory_used@@Base+0x8cf8>
  421a40:	mov	x25, x0
  421a44:	stp	x27, x28, [sp, #80]
  421a48:	ldr	x24, [x25, #56]!
  421a4c:	cbnz	x24, 421ad8 <_obstack_memory_used@@Base+0x8dc8>
  421a50:	ldr	x1, [x21, #8]
  421a54:	str	x1, [x0, #56]
  421a58:	str	xzr, [x25, #8]
  421a5c:	lsl	x0, x1, #3
  421a60:	bl	402800 <malloc@plt>
  421a64:	str	x0, [x25, #16]
  421a68:	cbz	x0, 421ab4 <_obstack_memory_used@@Base+0x8da4>
  421a6c:	ldr	x0, [x21, #8]
  421a70:	str	wzr, [sp, #200]
  421a74:	cmp	x0, #0x0
  421a78:	b.gt	421a8c <_obstack_memory_used@@Base+0x8d7c>
  421a7c:	b	421ad8 <_obstack_memory_used@@Base+0x8dc8>
  421a80:	ldr	x0, [x21, #8]
  421a84:	cmp	x24, x0
  421a88:	b.ge	421ad8 <_obstack_memory_used@@Base+0x8dc8>  // b.tcont
  421a8c:	ldr	x2, [x21, #16]
  421a90:	mov	x0, x25
  421a94:	ldr	x1, [x23, #56]
  421a98:	ldr	x3, [x2, x24, lsl #3]
  421a9c:	add	x24, x24, #0x1
  421aa0:	add	x3, x3, x3, lsl #1
  421aa4:	add	x1, x1, x3, lsl #3
  421aa8:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  421aac:	str	w0, [sp, #200]
  421ab0:	cbz	w0, 421a80 <_obstack_memory_used@@Base+0x8d70>
  421ab4:	mov	w4, #0xc                   	// #12
  421ab8:	mov	w0, w4
  421abc:	ldp	x19, x20, [sp, #16]
  421ac0:	ldp	x21, x22, [sp, #32]
  421ac4:	ldp	x23, x24, [sp, #48]
  421ac8:	ldp	x25, x26, [sp, #64]
  421acc:	ldp	x27, x28, [sp, #80]
  421ad0:	ldp	x29, x30, [sp], #256
  421ad4:	ret
  421ad8:	add	x28, x22, #0x8
  421adc:	mov	x2, x25
  421ae0:	mov	x1, x28
  421ae4:	mov	x0, x21
  421ae8:	bl	41a3d8 <_obstack_memory_used@@Base+0x16c8>
  421aec:	str	w0, [sp, #168]
  421af0:	mov	w4, w0
  421af4:	cbnz	w0, 421fa8 <_obstack_memory_used@@Base+0x9298>
  421af8:	ldr	x10, [x26, #40]
  421afc:	cmp	x10, #0x0
  421b00:	cbnz	x10, 421fc8 <_obstack_memory_used@@Base+0x92b8>
  421b04:	ldr	x24, [x26]
  421b08:	mov	x2, x21
  421b0c:	mov	x1, x23
  421b10:	add	x0, sp, #0xa8
  421b14:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  421b18:	ldr	w4, [sp, #168]
  421b1c:	str	x0, [x24, x19, lsl #3]
  421b20:	cbnz	w4, 421fa8 <_obstack_memory_used@@Base+0x9298>
  421b24:	ldr	x0, [sp, #104]
  421b28:	mov	w4, #0x0                   	// #0
  421b2c:	ldr	x1, [x20, #184]
  421b30:	ldp	x27, x28, [sp, #80]
  421b34:	add	x1, x1, x0
  421b38:	ldr	x0, [x1]
  421b3c:	ldrb	w0, [x0, #104]
  421b40:	tbz	w0, #6, 421a08 <_obstack_memory_used@@Base+0x8cf8>
  421b44:	ldr	x4, [x20, #200]
  421b48:	mov	x24, #0x0                   	// #0
  421b4c:	stp	x27, x28, [sp, #80]
  421b50:	mov	x2, x4
  421b54:	b	421b78 <_obstack_memory_used@@Base+0x8e68>
  421b58:	asr	x0, x0, #1
  421b5c:	ldr	x3, [x20, #216]
  421b60:	add	x1, x0, x0, lsl #2
  421b64:	add	x1, x3, x1, lsl #3
  421b68:	ldr	x1, [x1, #8]
  421b6c:	cmp	x19, x1
  421b70:	b.gt	421f14 <_obstack_memory_used@@Base+0x9204>
  421b74:	mov	x2, x0
  421b78:	add	x0, x2, x24
  421b7c:	cmp	x2, x24
  421b80:	b.gt	421b58 <_obstack_memory_used@@Base+0x8e48>
  421b84:	cmp	x4, x24
  421b88:	b.le	421d4c <_obstack_memory_used@@Base+0x903c>
  421b8c:	add	x1, x24, x24, lsl #2
  421b90:	ldr	x0, [x20, #216]
  421b94:	lsl	x1, x1, #3
  421b98:	str	x1, [sp, #152]
  421b9c:	add	x0, x0, x1
  421ba0:	ldr	x0, [x0, #8]
  421ba4:	cmp	x19, x0
  421ba8:	b.ne	421d4c <_obstack_memory_used@@Base+0x903c>  // b.any
  421bac:	ldr	x2, [x22, #16]
  421bb0:	add	x0, x22, #0x8
  421bb4:	str	x0, [sp, #120]
  421bb8:	str	xzr, [sp, #200]
  421bbc:	cmp	x2, #0x0
  421bc0:	ldr	x28, [x20, #152]
  421bc4:	b.le	421d4c <_obstack_memory_used@@Base+0x903c>
  421bc8:	mov	x23, #0x0                   	// #0
  421bcc:	b	421be4 <_obstack_memory_used@@Base+0x8ed4>
  421bd0:	cmp	w0, #0x4
  421bd4:	b.eq	421c1c <_obstack_memory_used@@Base+0x8f0c>  // b.none
  421bd8:	add	x23, x23, #0x1
  421bdc:	cmp	x23, x2
  421be0:	b.ge	421d44 <_obstack_memory_used@@Base+0x9034>  // b.tcont
  421be4:	ldr	x0, [sp, #120]
  421be8:	ldr	x1, [x0, #16]
  421bec:	ldr	x0, [x28]
  421bf0:	ldr	x27, [x1, x23, lsl #3]
  421bf4:	ldr	x1, [x26, #16]
  421bf8:	add	x0, x0, x27, lsl #4
  421bfc:	cmp	x27, x1
  421c00:	ldrb	w0, [x0, #8]
  421c04:	b.ne	421bd0 <_obstack_memory_used@@Base+0x8ec0>  // b.any
  421c08:	ldr	x1, [x26, #24]
  421c0c:	cmp	x19, x1
  421c10:	b.eq	421bd8 <_obstack_memory_used@@Base+0x8ec8>  // b.none
  421c14:	cmp	w0, #0x4
  421c18:	b.ne	421bd8 <_obstack_memory_used@@Base+0x8ec8>  // b.any
  421c1c:	add	x0, x27, x27, lsl #1
  421c20:	lsl	x1, x27, #3
  421c24:	ldr	x25, [x20, #216]
  421c28:	lsl	x0, x0, #3
  421c2c:	stp	x1, x0, [sp, #128]
  421c30:	mov	x21, x24
  421c34:	ldr	x1, [sp, #152]
  421c38:	add	x25, x25, x1
  421c3c:	nop
  421c40:	ldr	x0, [x25]
  421c44:	cmp	x27, x0
  421c48:	b.ne	421cc8 <_obstack_memory_used@@Base+0x8fb8>  // b.any
  421c4c:	ldp	x1, x0, [x25, #16]
  421c50:	sub	x0, x0, x1
  421c54:	add	x6, x19, x0
  421c58:	cbz	x0, 421d58 <_obstack_memory_used@@Base+0x9048>
  421c5c:	ldr	x0, [x28, #24]
  421c60:	ldr	x1, [sp, #128]
  421c64:	ldr	x5, [x0, x1]
  421c68:	ldr	x0, [x26, #24]
  421c6c:	cmp	x6, x0
  421c70:	b.gt	421cc8 <_obstack_memory_used@@Base+0x8fb8>
  421c74:	ldr	x0, [x26]
  421c78:	ldr	x1, [x0, x6, lsl #3]
  421c7c:	cbz	x1, 421cc8 <_obstack_memory_used@@Base+0x8fb8>
  421c80:	ldr	x0, [x1, #16]
  421c84:	cmp	x0, #0x0
  421c88:	b.le	421cc8 <_obstack_memory_used@@Base+0x8fb8>
  421c8c:	sub	x0, x0, #0x1
  421c90:	mov	x2, #0x0                   	// #0
  421c94:	ldr	x4, [x1, #24]
  421c98:	b	421cb0 <_obstack_memory_used@@Base+0x8fa0>
  421c9c:	lsr	x1, x1, #1
  421ca0:	ldr	x9, [x4, x1, lsl #3]
  421ca4:	cmp	x5, x9
  421ca8:	b.gt	421d70 <_obstack_memory_used@@Base+0x9060>
  421cac:	mov	x0, x1
  421cb0:	add	x1, x0, x2
  421cb4:	cmp	x0, x2
  421cb8:	b.hi	421c9c <_obstack_memory_used@@Base+0x8f8c>  // b.pmore
  421cbc:	ldr	x0, [x4, x2, lsl #3]
  421cc0:	cmp	x5, x0
  421cc4:	b.eq	421d78 <_obstack_memory_used@@Base+0x9068>  // b.none
  421cc8:	ldrb	w0, [x25, #32]
  421ccc:	add	x21, x21, #0x1
  421cd0:	add	x25, x25, #0x28
  421cd4:	cbnz	w0, 421c40 <_obstack_memory_used@@Base+0x8f30>
  421cd8:	ldr	x0, [sp, #120]
  421cdc:	ldr	x2, [x0, #8]
  421ce0:	b	421bd8 <_obstack_memory_used@@Base+0x8ec8>
  421ce4:	ldr	x20, [x26]
  421ce8:	cbnz	x0, 421d10 <_obstack_memory_used@@Base+0x9000>
  421cec:	str	xzr, [x20, x19, lsl #3]
  421cf0:	mov	w4, #0x0                   	// #0
  421cf4:	mov	w0, w4
  421cf8:	ldp	x19, x20, [sp, #16]
  421cfc:	ldp	x21, x22, [sp, #32]
  421d00:	ldp	x23, x24, [sp, #48]
  421d04:	ldp	x25, x26, [sp, #64]
  421d08:	ldp	x29, x30, [sp], #256
  421d0c:	ret
  421d10:	mov	x1, x23
  421d14:	mov	x2, x3
  421d18:	add	x0, sp, #0xa8
  421d1c:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  421d20:	ldr	w4, [sp, #168]
  421d24:	str	x0, [x20, x19, lsl #3]
  421d28:	mov	w0, w4
  421d2c:	ldp	x19, x20, [sp, #16]
  421d30:	ldp	x21, x22, [sp, #32]
  421d34:	ldp	x23, x24, [sp, #48]
  421d38:	ldp	x25, x26, [sp, #64]
  421d3c:	ldp	x29, x30, [sp], #256
  421d40:	ret
  421d44:	ldr	x0, [sp, #200]
  421d48:	cbnz	x0, 42226c <_obstack_memory_used@@Base+0x955c>
  421d4c:	mov	w4, #0x0                   	// #0
  421d50:	ldp	x27, x28, [sp, #80]
  421d54:	b	421a08 <_obstack_memory_used@@Base+0x8cf8>
  421d58:	ldr	x0, [x28, #40]
  421d5c:	ldr	x1, [sp, #136]
  421d60:	add	x0, x0, x1
  421d64:	ldr	x0, [x0, #16]
  421d68:	ldr	x5, [x0]
  421d6c:	b	421c68 <_obstack_memory_used@@Base+0x8f58>
  421d70:	add	x2, x1, #0x1
  421d74:	b	421cb0 <_obstack_memory_used@@Base+0x8fa0>
  421d78:	mov	x4, x19
  421d7c:	mov	x3, x27
  421d80:	add	x2, x26, #0x30
  421d84:	add	x1, x26, #0x28
  421d88:	mov	x0, x20
  421d8c:	bl	41c8b8 <_obstack_memory_used@@Base+0x3ba8>
  421d90:	tst	w0, #0xff
  421d94:	b.ne	421cc8 <_obstack_memory_used@@Base+0x8fb8>  // b.any
  421d98:	ldr	x0, [sp, #200]
  421d9c:	cbz	x0, 421f1c <_obstack_memory_used@@Base+0x920c>
  421da0:	mov	x1, x21
  421da4:	add	x0, sp, #0xe8
  421da8:	stp	x27, x19, [sp, #216]
  421dac:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  421db0:	tst	w0, #0xff
  421db4:	b.eq	421f6c <_obstack_memory_used@@Base+0x925c>  // b.none
  421db8:	ldr	x3, [sp, #104]
  421dbc:	add	x1, sp, #0xc8
  421dc0:	ldr	x2, [sp, #200]
  421dc4:	mov	x0, x20
  421dc8:	ldr	x2, [x2, x3]
  421dcc:	str	x2, [sp, #144]
  421dd0:	bl	422278 <_obstack_memory_used@@Base+0x9568>
  421dd4:	mov	w4, w0
  421dd8:	cbnz	w0, 421f70 <_obstack_memory_used@@Base+0x9260>
  421ddc:	ldr	x25, [x26, #8]
  421de0:	ldr	x0, [sp, #200]
  421de4:	str	x0, [sp, #112]
  421de8:	cbz	x25, 421e6c <_obstack_memory_used@@Base+0x915c>
  421dec:	tbnz	x19, #63, 421e6c <_obstack_memory_used@@Base+0x915c>
  421df0:	mov	x22, #0x0                   	// #0
  421df4:	b	421e4c <_obstack_memory_used@@Base+0x913c>
  421df8:	add	x2, x4, #0x8
  421dfc:	add	x1, x1, #0x8
  421e00:	add	x0, sp, #0xb0
  421e04:	cbz	x4, 421e40 <_obstack_memory_used@@Base+0x9130>
  421e08:	bl	420f30 <_obstack_memory_used@@Base+0x8220>
  421e0c:	mov	w4, w0
  421e10:	str	w4, [sp, #172]
  421e14:	add	x2, sp, #0xb0
  421e18:	mov	x1, x28
  421e1c:	add	x0, sp, #0xac
  421e20:	cbnz	w4, 421f70 <_obstack_memory_used@@Base+0x9260>
  421e24:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  421e28:	mov	x1, x0
  421e2c:	ldr	x0, [sp, #192]
  421e30:	str	x1, [x25, x22, lsl #3]
  421e34:	bl	402ae0 <free@plt>
  421e38:	ldr	w4, [sp, #172]
  421e3c:	cbnz	w4, 421f70 <_obstack_memory_used@@Base+0x9260>
  421e40:	add	x22, x22, #0x1
  421e44:	cmp	x19, x22
  421e48:	b.lt	421e64 <_obstack_memory_used@@Base+0x9154>  // b.tstop
  421e4c:	ldr	x1, [x25, x22, lsl #3]
  421e50:	ldr	x0, [sp, #112]
  421e54:	ldr	x4, [x0, x22, lsl #3]
  421e58:	cbnz	x1, 421df8 <_obstack_memory_used@@Base+0x90e8>
  421e5c:	str	x4, [x25, x22, lsl #3]
  421e60:	b	421e40 <_obstack_memory_used@@Base+0x9130>
  421e64:	ldr	x0, [sp, #200]
  421e68:	str	x0, [sp, #112]
  421e6c:	ldp	x1, x0, [sp, #104]
  421e70:	ldr	x2, [sp, #144]
  421e74:	ldr	x6, [sp, #240]
  421e78:	str	x2, [x0, x1]
  421e7c:	cmp	x6, #0x0
  421e80:	b.le	421ec4 <_obstack_memory_used@@Base+0x91b4>
  421e84:	sub	x9, x6, #0x1
  421e88:	mov	x0, #0x0                   	// #0
  421e8c:	mov	x2, x9
  421e90:	ldr	x4, [sp, #248]
  421e94:	b	421eac <_obstack_memory_used@@Base+0x919c>
  421e98:	lsr	x1, x1, #1
  421e9c:	ldr	x5, [x4, x1, lsl #3]
  421ea0:	cmp	x21, x5
  421ea4:	b.gt	421f0c <_obstack_memory_used@@Base+0x91fc>
  421ea8:	mov	x2, x1
  421eac:	add	x1, x2, x0
  421eb0:	cmp	x2, x0
  421eb4:	b.hi	421e98 <_obstack_memory_used@@Base+0x9188>  // b.pmore
  421eb8:	ldr	x1, [x4, x0, lsl #3]
  421ebc:	cmp	x21, x1
  421ec0:	b.eq	421ed4 <_obstack_memory_used@@Base+0x91c4>  // b.none
  421ec4:	ldr	x0, [x20, #216]
  421ec8:	add	x25, x21, x21, lsl #2
  421ecc:	add	x25, x0, x25, lsl #3
  421ed0:	b	421cc8 <_obstack_memory_used@@Base+0x8fb8>
  421ed4:	cmp	x0, #0x0
  421ed8:	ccmp	x6, x0, #0x4, ge  // ge = tcont
  421edc:	b.le	421ec4 <_obstack_memory_used@@Base+0x91b4>
  421ee0:	str	x9, [sp, #240]
  421ee4:	cmp	x0, x9
  421ee8:	b.ge	421ec4 <_obstack_memory_used@@Base+0x91b4>  // b.tcont
  421eec:	add	x2, x4, #0x8
  421ef0:	ldr	x1, [x2, x0, lsl #3]
  421ef4:	str	x1, [x4, x0, lsl #3]
  421ef8:	add	x0, x0, #0x1
  421efc:	ldr	x1, [sp, #240]
  421f00:	cmp	x0, x1
  421f04:	b.lt	421ef0 <_obstack_memory_used@@Base+0x91e0>  // b.tstop
  421f08:	b	421ec4 <_obstack_memory_used@@Base+0x91b4>
  421f0c:	add	x0, x1, #0x1
  421f10:	b	421eac <_obstack_memory_used@@Base+0x919c>
  421f14:	add	x24, x0, #0x1
  421f18:	b	421b78 <_obstack_memory_used@@Base+0x8e68>
  421f1c:	ldp	x0, x1, [x26]
  421f20:	stp	x0, x1, [sp, #200]
  421f24:	ldp	x0, x1, [x26, #40]
  421f28:	str	x1, [sp, #248]
  421f2c:	ldp	x4, x5, [x26, #16]
  421f30:	stp	x4, x5, [sp, #216]
  421f34:	ldp	x4, x5, [x26, #32]
  421f38:	stp	x4, x5, [sp, #232]
  421f3c:	cmp	x0, #0x0
  421f40:	b.le	422218 <_obstack_memory_used@@Base+0x9508>
  421f44:	lsl	x22, x0, #3
  421f48:	str	x0, [sp, #232]
  421f4c:	mov	x0, x22
  421f50:	bl	402800 <malloc@plt>
  421f54:	str	x0, [sp, #248]
  421f58:	cbz	x0, 421f6c <_obstack_memory_used@@Base+0x925c>
  421f5c:	ldr	x1, [x26, #48]
  421f60:	mov	x2, x22
  421f64:	bl	402650 <memcpy@plt>
  421f68:	b	421da0 <_obstack_memory_used@@Base+0x9090>
  421f6c:	mov	w4, #0xc                   	// #12
  421f70:	ldr	x0, [sp, #200]
  421f74:	cbz	x0, 421fa8 <_obstack_memory_used@@Base+0x9298>
  421f78:	ldr	x0, [sp, #248]
  421f7c:	str	w4, [sp, #104]
  421f80:	bl	402ae0 <free@plt>
  421f84:	ldr	w4, [sp, #104]
  421f88:	ldp	x19, x20, [sp, #16]
  421f8c:	mov	w0, w4
  421f90:	ldp	x21, x22, [sp, #32]
  421f94:	ldp	x23, x24, [sp, #48]
  421f98:	ldp	x25, x26, [sp, #64]
  421f9c:	ldp	x27, x28, [sp, #80]
  421fa0:	ldp	x29, x30, [sp], #256
  421fa4:	ret
  421fa8:	mov	w0, w4
  421fac:	ldp	x19, x20, [sp, #16]
  421fb0:	ldp	x21, x22, [sp, #32]
  421fb4:	ldp	x23, x24, [sp, #48]
  421fb8:	ldp	x25, x26, [sp, #64]
  421fbc:	ldp	x27, x28, [sp, #80]
  421fc0:	ldp	x29, x30, [sp], #256
  421fc4:	ret
  421fc8:	ldr	x27, [x20, #216]
  421fcc:	b.le	4220b0 <_obstack_memory_used@@Base+0x93a0>
  421fd0:	mov	x25, #0x0                   	// #0
  421fd4:	nop
  421fd8:	ldr	x0, [x26, #48]
  421fdc:	ldr	x0, [x0, x25, lsl #3]
  421fe0:	add	x0, x0, x0, lsl #2
  421fe4:	add	x1, x27, x0, lsl #3
  421fe8:	ldr	x2, [x1, #16]
  421fec:	cmp	x19, x2
  421ff0:	b.le	4220a4 <_obstack_memory_used@@Base+0x9394>
  421ff4:	ldr	x2, [x1, #8]
  421ff8:	cmp	x19, x2
  421ffc:	b.gt	4220a4 <_obstack_memory_used@@Base+0x9394>
  422000:	ldr	x2, [x27, x0, lsl #3]
  422004:	ldr	x0, [x23]
  422008:	lsl	x2, x2, #4
  42200c:	ldr	x4, [x21, #8]
  422010:	ldr	x1, [x1, #24]
  422014:	mov	x6, x4
  422018:	ldr	x5, [x0, x2]
  42201c:	cmp	x19, x1
  422020:	b.eq	4220b8 <_obstack_memory_used@@Base+0x93a8>  // b.none
  422024:	cmp	x4, #0x0
  422028:	mov	x24, #0x0                   	// #0
  42202c:	b.gt	422040 <_obstack_memory_used@@Base+0x9330>
  422030:	b	4220a4 <_obstack_memory_used@@Base+0x9394>
  422034:	cmp	x24, x4
  422038:	b.ge	4220a0 <_obstack_memory_used@@Base+0x9390>  // b.tcont
  42203c:	ldr	x0, [x23]
  422040:	ldr	x1, [x21, #16]
  422044:	ldr	x1, [x1, x24, lsl #3]
  422048:	add	x24, x24, #0x1
  42204c:	lsl	x3, x1, #4
  422050:	add	x2, x0, x3
  422054:	ldrb	w2, [x2, #8]
  422058:	sub	w2, w2, #0x8
  42205c:	cmp	w2, #0x1
  422060:	b.hi	422034 <_obstack_memory_used@@Base+0x9324>  // b.pmore
  422064:	ldr	x0, [x0, x3]
  422068:	cmp	x5, x0
  42206c:	b.ne	422034 <_obstack_memory_used@@Base+0x9324>  // b.any
  422070:	mov	x3, x28
  422074:	mov	x2, x21
  422078:	mov	x0, x23
  42207c:	str	x5, [sp, #112]
  422080:	bl	41dd90 <_obstack_memory_used@@Base+0x5080>
  422084:	mov	w4, w0
  422088:	cbnz	w0, 421fa8 <_obstack_memory_used@@Base+0x9298>
  42208c:	ldr	x4, [x21, #8]
  422090:	ldr	x5, [sp, #112]
  422094:	cmp	x24, x4
  422098:	b.lt	42203c <_obstack_memory_used@@Base+0x932c>  // b.tstop
  42209c:	nop
  4220a0:	ldr	x10, [x26, #40]
  4220a4:	add	x25, x25, #0x1
  4220a8:	cmp	x25, x10
  4220ac:	b.lt	421fd8 <_obstack_memory_used@@Base+0x92c8>  // b.tstop
  4220b0:	str	wzr, [sp, #168]
  4220b4:	b	421b04 <_obstack_memory_used@@Base+0x8df4>
  4220b8:	cmp	x4, #0x0
  4220bc:	b.le	4220a4 <_obstack_memory_used@@Base+0x9394>
  4220c0:	ldr	x11, [x21, #16]
  4220c4:	mov	x24, #0xffffffffffffffff    	// #-1
  4220c8:	mov	x1, x24
  4220cc:	mov	x2, x11
  4220d0:	add	x12, x11, x4, lsl #3
  4220d4:	b	4220f8 <_obstack_memory_used@@Base+0x93e8>
  4220d8:	cmp	w3, #0x9
  4220dc:	b.ne	4220ec <_obstack_memory_used@@Base+0x93dc>  // b.any
  4220e0:	ldr	x3, [x9]
  4220e4:	cmp	x5, x3
  4220e8:	csel	x24, x24, x4, ne  // ne = any
  4220ec:	add	x2, x2, #0x8
  4220f0:	cmp	x12, x2
  4220f4:	b.eq	422128 <_obstack_memory_used@@Base+0x9418>  // b.none
  4220f8:	ldr	x4, [x2]
  4220fc:	lsl	x8, x4, #4
  422100:	add	x9, x0, x8
  422104:	ldrb	w3, [x9, #8]
  422108:	cmp	w3, #0x8
  42210c:	b.ne	4220d8 <_obstack_memory_used@@Base+0x93c8>  // b.any
  422110:	ldr	x3, [x0, x8]
  422114:	add	x2, x2, #0x8
  422118:	cmp	x5, x3
  42211c:	csel	x1, x1, x4, ne  // ne = any
  422120:	cmp	x12, x2
  422124:	b.ne	4220f8 <_obstack_memory_used@@Base+0x93e8>  // b.any
  422128:	tbz	x1, #63, 422224 <_obstack_memory_used@@Base+0x9514>
  42212c:	tbnz	x24, #63, 4220a4 <_obstack_memory_used@@Base+0x9394>
  422130:	mov	x5, #0x0                   	// #0
  422134:	nop
  422138:	ldr	x1, [x11, x5, lsl #3]
  42213c:	ldr	x0, [x23, #56]
  422140:	add	x4, x1, x1, lsl #1
  422144:	lsl	x4, x4, #3
  422148:	add	x0, x0, x4
  42214c:	ldr	x2, [x0, #8]
  422150:	cmp	x2, #0x0
  422154:	b.le	422194 <_obstack_memory_used@@Base+0x9484>
  422158:	sub	x2, x2, #0x1
  42215c:	mov	x3, #0x0                   	// #0
  422160:	ldr	x8, [x0, #16]
  422164:	b	42217c <_obstack_memory_used@@Base+0x946c>
  422168:	lsr	x0, x0, #1
  42216c:	ldr	x9, [x8, x0, lsl #3]
  422170:	cmp	x24, x9
  422174:	b.gt	422254 <_obstack_memory_used@@Base+0x9544>
  422178:	mov	x2, x0
  42217c:	add	x0, x2, x3
  422180:	cmp	x2, x3
  422184:	b.hi	422168 <_obstack_memory_used@@Base+0x9458>  // b.pmore
  422188:	ldr	x0, [x8, x3, lsl #3]
  42218c:	cmp	x24, x0
  422190:	b.eq	42225c <_obstack_memory_used@@Base+0x954c>  // b.none
  422194:	ldr	x0, [x23, #48]
  422198:	add	x4, x0, x4
  42219c:	ldr	x2, [x4, #8]
  4221a0:	cmp	x2, #0x0
  4221a4:	b.le	4221e4 <_obstack_memory_used@@Base+0x94d4>
  4221a8:	sub	x2, x2, #0x1
  4221ac:	mov	x3, #0x0                   	// #0
  4221b0:	ldr	x8, [x4, #16]
  4221b4:	b	4221cc <_obstack_memory_used@@Base+0x94bc>
  4221b8:	lsr	x0, x0, #1
  4221bc:	ldr	x4, [x8, x0, lsl #3]
  4221c0:	cmp	x24, x4
  4221c4:	b.gt	422264 <_obstack_memory_used@@Base+0x9554>
  4221c8:	mov	x2, x0
  4221cc:	add	x0, x2, x3
  4221d0:	cmp	x2, x3
  4221d4:	b.hi	4221b8 <_obstack_memory_used@@Base+0x94a8>  // b.pmore
  4221d8:	ldr	x0, [x8, x3, lsl #3]
  4221dc:	cmp	x24, x0
  4221e0:	b.eq	42225c <_obstack_memory_used@@Base+0x954c>  // b.none
  4221e4:	mov	x3, x28
  4221e8:	mov	x2, x21
  4221ec:	mov	x0, x23
  4221f0:	str	x5, [sp, #112]
  4221f4:	bl	41dd90 <_obstack_memory_used@@Base+0x5080>
  4221f8:	mov	w4, w0
  4221fc:	cbnz	w0, 421fa8 <_obstack_memory_used@@Base+0x9298>
  422200:	ldr	x6, [x21, #8]
  422204:	ldr	x5, [sp, #112]
  422208:	cmp	x6, x5
  42220c:	b.le	4220a0 <_obstack_memory_used@@Base+0x9390>
  422210:	ldr	x11, [x21, #16]
  422214:	b	422138 <_obstack_memory_used@@Base+0x9428>
  422218:	stp	xzr, xzr, [sp, #232]
  42221c:	str	xzr, [sp, #248]
  422220:	b	421da0 <_obstack_memory_used@@Base+0x9090>
  422224:	mov	x3, x28
  422228:	mov	x2, x21
  42222c:	mov	x0, x23
  422230:	bl	41dd90 <_obstack_memory_used@@Base+0x5080>
  422234:	mov	w4, w0
  422238:	cbnz	w0, 421fa8 <_obstack_memory_used@@Base+0x9298>
  42223c:	tbnz	x24, #63, 4220a0 <_obstack_memory_used@@Base+0x9390>
  422240:	ldr	x6, [x21, #8]
  422244:	cmp	x6, #0x0
  422248:	b.le	4220a0 <_obstack_memory_used@@Base+0x9390>
  42224c:	ldr	x11, [x21, #16]
  422250:	b	422130 <_obstack_memory_used@@Base+0x9420>
  422254:	add	x3, x0, #0x1
  422258:	b	42217c <_obstack_memory_used@@Base+0x946c>
  42225c:	add	x5, x5, #0x1
  422260:	b	422208 <_obstack_memory_used@@Base+0x94f8>
  422264:	add	x3, x0, #0x1
  422268:	b	4221cc <_obstack_memory_used@@Base+0x94bc>
  42226c:	mov	w4, #0x0                   	// #0
  422270:	b	421f78 <_obstack_memory_used@@Base+0x9268>
  422274:	nop
  422278:	stp	x29, x30, [sp, #-160]!
  42227c:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x122f0>
  422280:	mov	x29, sp
  422284:	ldr	q0, [x2, #1088]
  422288:	stp	x19, x20, [sp, #16]
  42228c:	mov	x19, x1
  422290:	stp	x25, x26, [sp, #64]
  422294:	stp	x27, x28, [sp, #80]
  422298:	mov	x27, x0
  42229c:	mov	x0, #0x8                   	// #8
  4222a0:	str	q0, [sp, #128]
  4222a4:	ldp	x20, x26, [x1, #16]
  4222a8:	bl	402800 <malloc@plt>
  4222ac:	str	x0, [sp, #144]
  4222b0:	cbz	x0, 422640 <_obstack_memory_used@@Base+0x9930>
  4222b4:	mov	x4, x0
  4222b8:	mov	x2, x26
  4222bc:	add	x3, sp, #0x80
  4222c0:	mov	x1, x19
  4222c4:	mov	x0, x27
  4222c8:	str	x20, [x4]
  4222cc:	bl	4219a0 <_obstack_memory_used@@Base+0x8c90>
  4222d0:	cbnz	w0, 42265c <_obstack_memory_used@@Base+0x994c>
  4222d4:	add	x0, x19, #0x30
  4222d8:	stp	x21, x22, [sp, #32]
  4222dc:	mov	w22, #0x0                   	// #0
  4222e0:	stp	x23, x24, [sp, #48]
  4222e4:	str	x0, [sp, #112]
  4222e8:	add	x0, x19, #0x28
  4222ec:	str	x0, [sp, #120]
  4222f0:	cmp	x26, #0x0
  4222f4:	b.le	4225f8 <_obstack_memory_used@@Base+0x98e8>
  4222f8:	ldr	x0, [x19]
  4222fc:	lsl	x23, x26, #3
  422300:	ldr	w1, [x27, #224]
  422304:	ldr	x2, [x0, x26, lsl #3]
  422308:	cmp	x2, #0x0
  42230c:	csinc	w22, wzr, w22, ne  // ne = any
  422310:	cmp	w1, w22
  422314:	b.lt	422608 <_obstack_memory_used@@Base+0x98f8>  // b.tstop
  422318:	ldr	x0, [x27, #184]
  42231c:	sub	x26, x26, #0x1
  422320:	add	x0, x0, x23
  422324:	ldur	x20, [x0, #-8]
  422328:	str	xzr, [sp, #136]
  42232c:	cbz	x20, 422450 <_obstack_memory_used@@Base+0x9740>
  422330:	ldr	x0, [x20, #40]
  422334:	add	x20, x20, #0x20
  422338:	ldr	x24, [x27, #152]
  42233c:	cmp	x0, #0x0
  422340:	b.le	422450 <_obstack_memory_used@@Base+0x9740>
  422344:	mov	x21, #0x0                   	// #0
  422348:	ldr	x0, [x20, #16]
  42234c:	ldr	x2, [x24]
  422350:	ldr	x28, [x0, x21, lsl #3]
  422354:	lsl	x25, x28, #4
  422358:	add	x2, x2, x25
  42235c:	ldrb	w0, [x2, #10]
  422360:	tbnz	w0, #4, 4224c4 <_obstack_memory_used@@Base+0x97b4>
  422364:	ldr	x0, [x27, #8]
  422368:	ldrb	w1, [x2, #8]
  42236c:	ldrb	w0, [x0, x26]
  422370:	cmp	w1, #0x5
  422374:	b.eq	4224a8 <_obstack_memory_used@@Base+0x9798>  // b.none
  422378:	b.hi	42249c <_obstack_memory_used@@Base+0x978c>  // b.pmore
  42237c:	cmp	w1, #0x1
  422380:	b.eq	4225bc <_obstack_memory_used@@Base+0x98ac>  // b.none
  422384:	cmp	w1, #0x3
  422388:	b.ne	422440 <_obstack_memory_used@@Base+0x9730>  // b.any
  42238c:	ldr	x1, [x2]
  422390:	ubfx	x3, x0, #6, #2
  422394:	ldr	x1, [x1, x3, lsl #3]
  422398:	lsr	x0, x1, x0
  42239c:	tbz	w0, #0, 422440 <_obstack_memory_used@@Base+0x9730>
  4223a0:	ldr	w25, [x2, #8]
  4223a4:	tst	w25, #0x3ff00
  4223a8:	b.eq	4223e0 <_obstack_memory_used@@Base+0x96d0>  // b.none
  4223ac:	ldr	w2, [x27, #160]
  4223b0:	mov	x1, x26
  4223b4:	mov	x0, x27
  4223b8:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  4223bc:	ubfx	x1, x25, #8, #10
  4223c0:	tbz	w25, #10, 4225d4 <_obstack_memory_used@@Base+0x98c4>
  4223c4:	tbz	w0, #0, 422440 <_obstack_memory_used@@Base+0x9730>
  4223c8:	tbnz	w1, #3, 422440 <_obstack_memory_used@@Base+0x9730>
  4223cc:	tbz	w1, #5, 4223d4 <_obstack_memory_used@@Base+0x96c4>
  4223d0:	tbz	w0, #1, 422440 <_obstack_memory_used@@Base+0x9730>
  4223d4:	tbz	w1, #7, 4223e0 <_obstack_memory_used@@Base+0x96d0>
  4223d8:	tbz	w0, #3, 422440 <_obstack_memory_used@@Base+0x9730>
  4223dc:	nop
  4223e0:	ldr	x0, [x19]
  4223e4:	ldr	x1, [x0, x23]
  4223e8:	cbz	x1, 422440 <_obstack_memory_used@@Base+0x9730>
  4223ec:	ldr	x0, [x1, #16]
  4223f0:	cmp	x0, #0x0
  4223f4:	b.le	422440 <_obstack_memory_used@@Base+0x9730>
  4223f8:	ldr	x3, [x24, #24]
  4223fc:	sub	x0, x0, #0x1
  422400:	mov	x2, #0x0                   	// #0
  422404:	ldr	x4, [x1, #24]
  422408:	ldr	x3, [x3, x28, lsl #3]
  42240c:	b	422424 <_obstack_memory_used@@Base+0x9714>
  422410:	lsr	x1, x1, #1
  422414:	ldr	x5, [x4, x1, lsl #3]
  422418:	cmp	x3, x5
  42241c:	b.gt	422494 <_obstack_memory_used@@Base+0x9784>
  422420:	mov	x0, x1
  422424:	add	x1, x0, x2
  422428:	cmp	x0, x2
  42242c:	b.hi	422410 <_obstack_memory_used@@Base+0x9700>  // b.pmore
  422430:	ldr	x0, [x4, x2, lsl #3]
  422434:	cmp	x3, x0
  422438:	b.eq	42256c <_obstack_memory_used@@Base+0x985c>  // b.none
  42243c:	nop
  422440:	ldr	x0, [x20, #8]
  422444:	add	x21, x21, #0x1
  422448:	cmp	x21, x0
  42244c:	b.lt	422348 <_obstack_memory_used@@Base+0x9638>  // b.tstop
  422450:	add	x3, sp, #0x80
  422454:	mov	x2, x26
  422458:	mov	x1, x19
  42245c:	mov	x0, x27
  422460:	bl	4219a0 <_obstack_memory_used@@Base+0x8c90>
  422464:	mov	w20, w0
  422468:	cbz	w0, 4222f0 <_obstack_memory_used@@Base+0x95e0>
  42246c:	ldp	x21, x22, [sp, #32]
  422470:	ldp	x23, x24, [sp, #48]
  422474:	ldr	x0, [sp, #144]
  422478:	bl	402ae0 <free@plt>
  42247c:	mov	w0, w20
  422480:	ldp	x19, x20, [sp, #16]
  422484:	ldp	x25, x26, [sp, #64]
  422488:	ldp	x27, x28, [sp, #80]
  42248c:	ldp	x29, x30, [sp], #160
  422490:	ret
  422494:	add	x2, x1, #0x1
  422498:	b	422424 <_obstack_memory_used@@Base+0x9714>
  42249c:	cmp	w1, #0x7
  4224a0:	b.ne	422440 <_obstack_memory_used@@Base+0x9730>  // b.any
  4224a4:	tbnz	w0, #7, 422440 <_obstack_memory_used@@Base+0x9730>
  4224a8:	cmp	w0, #0xa
  4224ac:	b.eq	4225e0 <_obstack_memory_used@@Base+0x98d0>  // b.none
  4224b0:	cbnz	w0, 4223a0 <_obstack_memory_used@@Base+0x9690>
  4224b4:	ldr	x0, [x27, #152]
  4224b8:	ldr	x0, [x0, #216]
  4224bc:	tbz	w0, #7, 4223a0 <_obstack_memory_used@@Base+0x9690>
  4224c0:	b	422440 <_obstack_memory_used@@Base+0x9730>
  4224c4:	ldr	x6, [x27, #152]
  4224c8:	mov	x4, x26
  4224cc:	ldr	x8, [x19, #24]
  4224d0:	mov	x1, x6
  4224d4:	mov	x3, x27
  4224d8:	mov	x2, x28
  4224dc:	stp	x8, x6, [sp, #96]
  4224e0:	ldr	x0, [x1], #216
  4224e4:	bl	41cb40 <_obstack_memory_used@@Base+0x3e30>
  4224e8:	cmp	w0, #0x0
  4224ec:	b.le	4225cc <_obstack_memory_used@@Base+0x98bc>
  4224f0:	ldr	x8, [sp, #96]
  4224f4:	add	x1, x26, w0, sxtw
  4224f8:	cmp	x8, x1
  4224fc:	b.lt	422570 <_obstack_memory_used@@Base+0x9860>  // b.tstop
  422500:	ldr	x2, [x19]
  422504:	ldr	x6, [sp, #104]
  422508:	ldr	x1, [x2, x1, lsl #3]
  42250c:	cbz	x1, 422560 <_obstack_memory_used@@Base+0x9850>
  422510:	ldr	x2, [x1, #16]
  422514:	cmp	x2, #0x0
  422518:	b.le	422560 <_obstack_memory_used@@Base+0x9850>
  42251c:	ldr	x4, [x6, #24]
  422520:	sub	x2, x2, #0x1
  422524:	mov	x3, #0x0                   	// #0
  422528:	ldr	x8, [x1, #24]
  42252c:	ldr	x6, [x4, x28, lsl #3]
  422530:	b	422548 <_obstack_memory_used@@Base+0x9838>
  422534:	lsr	x1, x1, #1
  422538:	ldr	x4, [x8, x1, lsl #3]
  42253c:	cmp	x6, x4
  422540:	b.gt	4225f0 <_obstack_memory_used@@Base+0x98e0>
  422544:	mov	x2, x1
  422548:	add	x1, x2, x3
  42254c:	cmp	x2, x3
  422550:	b.hi	422534 <_obstack_memory_used@@Base+0x9824>  // b.pmore
  422554:	ldr	x1, [x8, x3, lsl #3]
  422558:	cmp	x6, x1
  42255c:	b.eq	422570 <_obstack_memory_used@@Base+0x9860>  // b.none
  422560:	ldr	x2, [x24]
  422564:	add	x2, x2, x25
  422568:	b	422364 <_obstack_memory_used@@Base+0x9654>
  42256c:	mov	w0, #0x1                   	// #1
  422570:	ldr	x1, [x19, #40]
  422574:	cbz	x1, 4225a0 <_obstack_memory_used@@Base+0x9890>
  422578:	ldr	x3, [x24, #24]
  42257c:	add	x4, x26, w0, sxtw
  422580:	ldp	x2, x1, [sp, #112]
  422584:	mov	x6, x26
  422588:	ldr	x3, [x3, x28, lsl #3]
  42258c:	mov	x5, x28
  422590:	mov	x0, x27
  422594:	bl	41c8b8 <_obstack_memory_used@@Base+0x3ba8>
  422598:	tst	w0, #0xff
  42259c:	b.ne	422440 <_obstack_memory_used@@Base+0x9730>  // b.any
  4225a0:	mov	x1, x28
  4225a4:	add	x0, sp, #0x80
  4225a8:	bl	419200 <_obstack_memory_used@@Base+0x4f0>
  4225ac:	tst	w0, #0xff
  4225b0:	b.ne	422440 <_obstack_memory_used@@Base+0x9730>  // b.any
  4225b4:	mov	w20, #0xc                   	// #12
  4225b8:	b	42246c <_obstack_memory_used@@Base+0x975c>
  4225bc:	ldrb	w1, [x2]
  4225c0:	cmp	w1, w0
  4225c4:	b.eq	4223a0 <_obstack_memory_used@@Base+0x9690>  // b.none
  4225c8:	b	422440 <_obstack_memory_used@@Base+0x9730>
  4225cc:	b.eq	422560 <_obstack_memory_used@@Base+0x9850>  // b.none
  4225d0:	b	422570 <_obstack_memory_used@@Base+0x9860>
  4225d4:	tbz	w1, #3, 4223cc <_obstack_memory_used@@Base+0x96bc>
  4225d8:	tbz	w0, #0, 4223cc <_obstack_memory_used@@Base+0x96bc>
  4225dc:	b	422440 <_obstack_memory_used@@Base+0x9730>
  4225e0:	ldr	x0, [x27, #152]
  4225e4:	ldr	x0, [x0, #216]
  4225e8:	tbnz	w0, #6, 4223a0 <_obstack_memory_used@@Base+0x9690>
  4225ec:	b	422440 <_obstack_memory_used@@Base+0x9730>
  4225f0:	add	x3, x1, #0x1
  4225f4:	b	422548 <_obstack_memory_used@@Base+0x9838>
  4225f8:	mov	w20, #0x0                   	// #0
  4225fc:	ldp	x21, x22, [sp, #32]
  422600:	ldp	x23, x24, [sp, #48]
  422604:	b	422474 <_obstack_memory_used@@Base+0x9764>
  422608:	mov	x2, x23
  42260c:	mov	w1, #0x0                   	// #0
  422610:	bl	4028d0 <memset@plt>
  422614:	mov	w20, #0x0                   	// #0
  422618:	ldr	x0, [sp, #144]
  42261c:	bl	402ae0 <free@plt>
  422620:	mov	w0, w20
  422624:	ldp	x19, x20, [sp, #16]
  422628:	ldp	x21, x22, [sp, #32]
  42262c:	ldp	x23, x24, [sp, #48]
  422630:	ldp	x25, x26, [sp, #64]
  422634:	ldp	x27, x28, [sp, #80]
  422638:	ldp	x29, x30, [sp], #160
  42263c:	ret
  422640:	mov	w20, #0xc                   	// #12
  422644:	mov	w0, w20
  422648:	ldp	x19, x20, [sp, #16]
  42264c:	ldp	x25, x26, [sp, #64]
  422650:	ldp	x27, x28, [sp, #80]
  422654:	ldp	x29, x30, [sp], #160
  422658:	ret
  42265c:	mov	w20, w0
  422660:	b	422474 <_obstack_memory_used@@Base+0x9764>
  422664:	nop
  422668:	sub	sp, sp, #0x280
  42266c:	stp	x29, x30, [sp]
  422670:	mov	x29, sp
  422674:	stp	x19, x20, [sp, #16]
  422678:	mov	x19, x3
  42267c:	ldr	w3, [sp, #640]
  422680:	mov	x20, x0
  422684:	stp	x27, x28, [sp, #80]
  422688:	ldr	x27, [x0]
  42268c:	str	d8, [sp, #96]
  422690:	fmov	d8, x5
  422694:	stp	x21, x22, [sp, #32]
  422698:	mov	x21, x4
  42269c:	stp	x25, x26, [sp, #64]
  4226a0:	stp	x0, x6, [sp, #120]
  4226a4:	add	x0, sp, #0x180
  4226a8:	str	w3, [sp, #160]
  4226ac:	str	x2, [sp, #168]
  4226b0:	mov	x2, #0x100                 	// #256
  4226b4:	str	x1, [sp, #192]
  4226b8:	mov	w1, #0x0                   	// #0
  4226bc:	str	x7, [sp, #272]
  4226c0:	bl	4028d0 <memset@plt>
  4226c4:	ldr	x26, [x20, #32]
  4226c8:	str	x27, [sp, #536]
  4226cc:	cbz	x26, 4226e4 <_obstack_memory_used@@Base+0x99d4>
  4226d0:	ldrb	w0, [x20, #56]
  4226d4:	tst	x0, #0x8
  4226d8:	ccmp	x19, x21, #0x4, ne  // ne = any
  4226dc:	b.ne	422acc <_obstack_memory_used@@Base+0x9dbc>  // b.any
  4226e0:	mov	x26, #0x0                   	// #0
  4226e4:	ldp	x0, x3, [sp, #120]
  4226e8:	str	xzr, [sp, #232]
  4226ec:	ldr	x0, [x0, #48]
  4226f0:	cmp	x0, x3
  4226f4:	b.cs	422710 <_obstack_memory_used@@Base+0x9a00>  // b.hs, b.nlast
  4226f8:	sub	x1, x3, #0x1
  4226fc:	sub	x2, x0, x1
  422700:	sub	x0, x1, x0
  422704:	str	x0, [sp, #232]
  422708:	add	x0, x3, x2
  42270c:	str	x0, [sp, #128]
  422710:	ldr	x4, [sp, #120]
  422714:	ldr	x0, [x4, #16]
  422718:	cbz	x0, 423354 <_obstack_memory_used@@Base+0xa644>
  42271c:	ldr	x0, [x27, #72]
  422720:	cbz	x0, 423354 <_obstack_memory_used@@Base+0xa644>
  422724:	ldr	x1, [x27, #80]
  422728:	cbz	x1, 423354 <_obstack_memory_used@@Base+0xa644>
  42272c:	ldr	x2, [x27, #88]
  422730:	cbz	x2, 423354 <_obstack_memory_used@@Base+0xa644>
  422734:	ldr	x3, [x27, #96]
  422738:	cbz	x3, 423354 <_obstack_memory_used@@Base+0xa644>
  42273c:	ldr	x0, [x0, #16]
  422740:	cbnz	x0, 422778 <_obstack_memory_used@@Base+0x9a68>
  422744:	ldr	x0, [x1, #16]
  422748:	cbnz	x0, 422778 <_obstack_memory_used@@Base+0x9a68>
  42274c:	ldr	x0, [x2, #16]
  422750:	cbz	x0, 42275c <_obstack_memory_used@@Base+0x9a4c>
  422754:	ldrsb	w0, [x4, #56]
  422758:	tbnz	w0, #31, 422778 <_obstack_memory_used@@Base+0x9a68>
  42275c:	mov	w0, #0x1                   	// #1
  422760:	str	w0, [sp, #152]
  422764:	cmp	x19, #0x0
  422768:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  42276c:	b.ne	42335c <_obstack_memory_used@@Base+0xa64c>  // b.any
  422770:	mov	x21, #0x0                   	// #0
  422774:	mov	x19, #0x0                   	// #0
  422778:	ldr	x0, [sp, #128]
  42277c:	cbnz	x0, 422abc <_obstack_memory_used@@Base+0x9dac>
  422780:	ldr	x0, [x27, #152]
  422784:	cmp	x0, #0x0
  422788:	cset	w0, ne  // ne = any
  42278c:	str	w0, [sp, #156]
  422790:	str	w0, [sp, #180]
  422794:	ldr	x5, [sp, #120]
  422798:	ldr	w0, [x27, #180]
  42279c:	ldr	x1, [x27, #16]
  4227a0:	str	w0, [sp, #528]
  4227a4:	ldr	x6, [sp, #168]
  4227a8:	sxtw	x4, w0
  4227ac:	add	x1, x1, #0x1
  4227b0:	fmov	d0, x6
  4227b4:	ldr	x2, [x5, #24]
  4227b8:	cmp	x1, x4
  4227bc:	ldr	x5, [x5, #40]
  4227c0:	csel	x1, x1, x4, ge  // ge = tcont
  4227c4:	add	x20, x6, #0x1
  4227c8:	and	x2, x2, #0x400000
  4227cc:	cmp	x1, x20
  4227d0:	ldrb	w3, [x27, #176]
  4227d4:	dup	v0.2d, v0.d[0]
  4227d8:	csel	x20, x1, x20, le
  4227dc:	orr	x22, x2, x5
  4227e0:	cmp	x2, #0x0
  4227e4:	cset	w2, ne  // ne = any
  4227e8:	cmp	x22, #0x0
  4227ec:	ldr	x7, [sp, #192]
  4227f0:	cset	w1, ne  // ne = any
  4227f4:	str	x5, [sp, #224]
  4227f8:	cmp	w0, #0x1
  4227fc:	str	x7, [sp, #384]
  422800:	str	x5, [sp, #504]
  422804:	strb	w2, [sp, #520]
  422808:	ubfx	x2, x3, #2, #1
  42280c:	ubfx	x3, x3, #3, #1
  422810:	strb	w2, [sp, #521]
  422814:	strb	w3, [sp, #522]
  422818:	strb	w1, [sp, #523]
  42281c:	stp	q0, q0, [sp, #464]
  422820:	b.le	423564 <_obstack_memory_used@@Base+0xa854>
  422824:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  422828:	cmp	x20, x0
  42282c:	b.hi	423738 <_obstack_memory_used@@Base+0xaa28>  // b.pmore
  422830:	lsl	x0, x20, #2
  422834:	bl	402800 <malloc@plt>
  422838:	cbz	x0, 423738 <_obstack_memory_used@@Base+0xaa28>
  42283c:	stp	x23, x24, [sp, #48]
  422840:	str	x0, [sp, #400]
  422844:	cbnz	x22, 42356c <_obstack_memory_used@@Base+0xa85c>
  422848:	ldrb	w0, [x27, #176]
  42284c:	add	x1, x27, #0xb8
  422850:	str	x20, [sp, #448]
  422854:	str	x1, [sp, #512]
  422858:	ubfx	x0, x0, #4, #1
  42285c:	strb	w0, [sp, #526]
  422860:	ldr	x0, [sp, #192]
  422864:	str	x0, [sp, #392]
  422868:	ldr	w0, [x27, #180]
  42286c:	ldr	d0, [sp, #168]
  422870:	cmp	w0, #0x1
  422874:	b.le	42287c <_obstack_memory_used@@Base+0x9b6c>
  422878:	fmov	d0, xzr
  42287c:	ldr	x0, [sp, #120]
  422880:	mov	x1, #0xffffffffffffffff    	// #-1
  422884:	dup	v0.2d, v0.d[0]
  422888:	dup	v8.2d, v8.d[0]
  42288c:	ldrb	w0, [x0, #56]
  422890:	ldr	x22, [x27, #152]
  422894:	str	x1, [sp, #552]
  422898:	ubfx	x0, x0, #7, #1
  42289c:	strb	w0, [sp, #525]
  4228a0:	ldr	w0, [sp, #160]
  4228a4:	str	w0, [sp, #544]
  4228a8:	cmp	xzr, x22, lsl #1
  4228ac:	str	q0, [sp, #432]
  4228b0:	lsl	x23, x22, #1
  4228b4:	str	q8, [sp, #480]
  4228b8:	b.ge	4228fc <_obstack_memory_used@@Base+0x9bec>  // b.tcont
  4228bc:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  4228c0:	movk	x0, #0x666, lsl #48
  4228c4:	cmp	x23, x0
  4228c8:	b.gt	4233d4 <_obstack_memory_used@@Base+0xa6c4>
  4228cc:	add	x0, x23, x22, lsl #3
  4228d0:	lsl	x0, x0, #3
  4228d4:	bl	402800 <malloc@plt>
  4228d8:	mov	x1, x0
  4228dc:	lsl	x0, x22, #4
  4228e0:	mov	x22, x1
  4228e4:	str	x1, [sp, #600]
  4228e8:	bl	402800 <malloc@plt>
  4228ec:	str	x0, [sp, #632]
  4228f0:	cmp	x0, #0x0
  4228f4:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  4228f8:	b.eq	4233d4 <_obstack_memory_used@@Base+0xa6c4>  // b.none
  4228fc:	mov	w0, #0x1                   	// #1
  422900:	str	w0, [sp, #608]
  422904:	ldr	x0, [sp, #128]
  422908:	str	x23, [sp, #592]
  42290c:	str	x23, [sp, #624]
  422910:	cmp	x0, #0x1
  422914:	b.ls	42369c <_obstack_memory_used@@Base+0xa98c>  // b.plast
  422918:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  42291c:	cmp	x20, x0
  422920:	b.hi	4233d4 <_obstack_memory_used@@Base+0xa6c4>  // b.pmore
  422924:	add	x0, x20, #0x1
  422928:	lsl	x0, x0, #3
  42292c:	bl	402800 <malloc@plt>
  422930:	str	x0, [sp, #568]
  422934:	mov	x28, x0
  422938:	cbz	x0, 423384 <_obstack_memory_used@@Base+0xa674>
  42293c:	ldr	x0, [sp, #160]
  422940:	mov	w1, #0x6                   	// #6
  422944:	mov	x2, #0x1                   	// #1
  422948:	str	x19, [sp, #296]
  42294c:	tst	x0, #0x1
  422950:	mov	w0, #0x4                   	// #4
  422954:	csel	w1, w0, w1, ne  // ne = any
  422958:	cmp	x19, x21
  42295c:	str	w1, [sp, #496]
  422960:	csel	x1, x19, x21, ge  // ge = tcont
  422964:	str	x1, [sp, #136]
  422968:	mov	w1, #0x8                   	// #8
  42296c:	cneg	x2, x2, gt
  422970:	str	w1, [sp, #176]
  422974:	ldr	w1, [x27, #180]
  422978:	str	x2, [sp, #216]
  42297c:	csel	x2, x19, x21, le
  422980:	str	x2, [sp, #184]
  422984:	str	w1, [sp, #240]
  422988:	cbz	x26, 4229d8 <_obstack_memory_used@@Base+0x9cc8>
  42298c:	ldr	w1, [sp, #240]
  422990:	cmp	w1, #0x1
  422994:	b.eq	4229b8 <_obstack_memory_used@@Base+0x9ca8>  // b.none
  422998:	ldr	x0, [sp, #120]
  42299c:	ldr	x1, [sp, #224]
  4229a0:	ldr	x0, [x0, #24]
  4229a4:	and	x0, x0, #0x400000
  4229a8:	orr	x0, x1, x0
  4229ac:	cmp	x0, #0x0
  4229b0:	cset	w0, eq  // eq = none
  4229b4:	lsl	w0, w0, #2
  4229b8:	ldr	x1, [sp, #224]
  4229bc:	cmp	x19, x21
  4229c0:	cset	w2, le
  4229c4:	cmp	x1, #0x0
  4229c8:	cset	w1, ne  // ne = any
  4229cc:	orr	w0, w1, w0
  4229d0:	orr	w0, w0, w2, lsl #1
  4229d4:	str	w0, [sp, #176]
  4229d8:	ldr	x0, [sp, #184]
  4229dc:	cmp	x19, x0
  4229e0:	ldr	x0, [sp, #136]
  4229e4:	cset	w1, lt  // lt = tstop
  4229e8:	cmp	x19, x0
  4229ec:	cset	w0, gt
  4229f0:	orr	w0, w1, w0
  4229f4:	str	w0, [sp, #284]
  4229f8:	cbnz	w0, 422b5c <_obstack_memory_used@@Base+0x9e4c>
  4229fc:	cmp	x19, x21
  422a00:	add	x0, sp, #0x128
  422a04:	csel	x0, x0, xzr, le
  422a08:	str	x0, [sp, #264]
  422a0c:	cmp	x0, #0x0
  422a10:	stp	x27, x26, [sp, #200]
  422a14:	cset	w0, ne  // ne = any
  422a18:	str	w0, [sp, #280]
  422a1c:	ldr	w0, [sp, #176]
  422a20:	cmp	w0, #0x7
  422a24:	b.eq	423308 <_obstack_memory_used@@Base+0xa5f8>  // b.none
  422a28:	cmp	w0, #0x8
  422a2c:	b.eq	422bd0 <_obstack_memory_used@@Base+0x9ec0>  // b.none
  422a30:	cmp	w0, #0x5
  422a34:	b.gt	422ad8 <_obstack_memory_used@@Base+0x9dc8>
  422a38:	cmp	w0, #0x3
  422a3c:	b.gt	4235b0 <_obstack_memory_used@@Base+0xa8a0>
  422a40:	ldr	x22, [sp, #136]
  422a44:	ldr	x20, [sp, #168]
  422a48:	ldr	x21, [sp, #184]
  422a4c:	ldp	x26, x23, [sp, #208]
  422a50:	ldr	x2, [sp, #424]
  422a54:	b	422a8c <_obstack_memory_used@@Base+0x9d7c>
  422a58:	cmp	x20, x19
  422a5c:	mov	x0, x26
  422a60:	b.le	422a70 <_obstack_memory_used@@Base+0x9d60>
  422a64:	ldr	x0, [sp, #392]
  422a68:	ldrb	w0, [x0, x1]
  422a6c:	add	x0, x26, x0
  422a70:	ldrb	w0, [x0]
  422a74:	cbnz	w0, 422bd0 <_obstack_memory_used@@Base+0x9ec0>
  422a78:	add	x19, x19, x23
  422a7c:	str	x19, [sp, #296]
  422a80:	cmp	x19, x21
  422a84:	ccmp	x19, x22, #0x0, ge  // ge = tcont
  422a88:	b.gt	422b58 <_obstack_memory_used@@Base+0x9e48>
  422a8c:	ldr	x0, [sp, #440]
  422a90:	sub	x1, x19, x2
  422a94:	cmp	x0, x1
  422a98:	b.hi	422a58 <_obstack_memory_used@@Base+0x9d48>  // b.pmore
  422a9c:	ldr	w2, [sp, #160]
  422aa0:	mov	x1, x19
  422aa4:	add	x0, sp, #0x180
  422aa8:	bl	41a7b0 <_obstack_memory_used@@Base+0x1aa0>
  422aac:	cbnz	w0, 4237f4 <_obstack_memory_used@@Base+0xaae4>
  422ab0:	ldr	x2, [sp, #424]
  422ab4:	sub	x1, x19, x2
  422ab8:	b	422a58 <_obstack_memory_used@@Base+0x9d48>
  422abc:	mov	w0, #0x1                   	// #1
  422ac0:	str	w0, [sp, #156]
  422ac4:	str	w0, [sp, #180]
  422ac8:	b	422794 <_obstack_memory_used@@Base+0x9a84>
  422acc:	tst	x0, #0x1
  422ad0:	csel	x26, x26, xzr, eq  // eq = none
  422ad4:	b	4226e4 <_obstack_memory_used@@Base+0x99d4>
  422ad8:	ldr	w0, [sp, #176]
  422adc:	cmp	w0, #0x6
  422ae0:	b.ne	422a40 <_obstack_memory_used@@Base+0x9d30>  // b.any
  422ae4:	ldr	x0, [sp, #136]
  422ae8:	mov	w2, #0x0                   	// #0
  422aec:	cmp	x0, x19
  422af0:	mov	x0, x19
  422af4:	b.le	422bc4 <_obstack_memory_used@@Base+0x9eb4>
  422af8:	ldr	x4, [sp, #136]
  422afc:	ldr	x3, [sp, #192]
  422b00:	ldr	x26, [sp, #208]
  422b04:	nop
  422b08:	ldrb	w1, [x3, x0]
  422b0c:	ldrb	w1, [x26, x1]
  422b10:	cbnz	w1, 422bb8 <_obstack_memory_used@@Base+0x9ea8>
  422b14:	add	x0, x0, #0x1
  422b18:	mov	w2, #0x1                   	// #1
  422b1c:	cmp	x0, x4
  422b20:	b.ne	422b08 <_obstack_memory_used@@Base+0x9df8>  // b.any
  422b24:	ldr	x0, [sp, #136]
  422b28:	str	x0, [sp, #296]
  422b2c:	mov	x19, x0
  422b30:	ldr	x0, [sp, #168]
  422b34:	cmp	x19, x0
  422b38:	mov	x0, #0x0                   	// #0
  422b3c:	b.lt	423790 <_obstack_memory_used@@Base+0xaa80>  // b.tstop
  422b40:	ldr	x1, [sp, #224]
  422b44:	cbz	x1, 422b4c <_obstack_memory_used@@Base+0x9e3c>
  422b48:	ldrb	w0, [x1, x0]
  422b4c:	ldr	x1, [sp, #208]
  422b50:	ldrb	w0, [x1, x0]
  422b54:	cbnz	w0, 422bd0 <_obstack_memory_used@@Base+0x9ec0>
  422b58:	ldr	x27, [sp, #200]
  422b5c:	mov	w0, #0x1                   	// #1
  422b60:	ldr	x28, [sp, #568]
  422b64:	str	w0, [sp, #152]
  422b68:	ldp	x23, x24, [sp, #48]
  422b6c:	mov	x0, x28
  422b70:	bl	402ae0 <free@plt>
  422b74:	ldr	x0, [x27, #152]
  422b78:	cbz	x0, 4233a0 <_obstack_memory_used@@Base+0xa690>
  422b7c:	add	x0, sp, #0x180
  422b80:	bl	41a158 <_obstack_memory_used@@Base+0x1448>
  422b84:	ldr	x0, [sp, #632]
  422b88:	bl	402ae0 <free@plt>
  422b8c:	ldr	x0, [sp, #600]
  422b90:	bl	402ae0 <free@plt>
  422b94:	ldr	x0, [sp, #400]
  422b98:	bl	402ae0 <free@plt>
  422b9c:	ldr	x0, [sp, #408]
  422ba0:	bl	402ae0 <free@plt>
  422ba4:	ldrb	w0, [sp, #523]
  422ba8:	cbz	w0, 42335c <_obstack_memory_used@@Base+0xa64c>
  422bac:	ldr	x0, [sp, #392]
  422bb0:	bl	402ae0 <free@plt>
  422bb4:	b	42335c <_obstack_memory_used@@Base+0xa64c>
  422bb8:	cbz	w2, 422bd0 <_obstack_memory_used@@Base+0x9ec0>
  422bbc:	mov	x19, x0
  422bc0:	str	x0, [sp, #296]
  422bc4:	ldr	x0, [sp, #136]
  422bc8:	cmp	x0, x19
  422bcc:	b.eq	422b30 <_obstack_memory_used@@Base+0x9e20>  // b.none
  422bd0:	ldr	w2, [sp, #160]
  422bd4:	mov	x1, x19
  422bd8:	add	x0, sp, #0x180
  422bdc:	bl	41a7b0 <_obstack_memory_used@@Base+0x1aa0>
  422be0:	str	w0, [sp, #152]
  422be4:	cbnz	w0, 4236e8 <_obstack_memory_used@@Base+0xa9d8>
  422be8:	ldr	w0, [sp, #240]
  422bec:	cmp	w0, #0x1
  422bf0:	b.eq	422c0c <_obstack_memory_used@@Base+0x9efc>  // b.none
  422bf4:	ldr	x0, [sp, #432]
  422bf8:	cbz	x0, 422c0c <_obstack_memory_used@@Base+0x9efc>
  422bfc:	ldr	x0, [sp, #400]
  422c00:	ldr	w0, [x0]
  422c04:	cmn	w0, #0x1
  422c08:	b.eq	4232dc <_obstack_memory_used@@Base+0xa5cc>  // b.none
  422c0c:	ldr	x20, [sp, #536]
  422c10:	add	x0, sp, #0x240
  422c14:	ldr	x27, [sp, #456]
  422c18:	ldr	x19, [x20, #72]
  422c1c:	stp	xzr, xzr, [x0]
  422c20:	ldrsb	w0, [x19, #104]
  422c24:	str	wzr, [sp, #292]
  422c28:	str	wzr, [sp, #608]
  422c2c:	tbz	w0, #31, 422c60 <_obstack_memory_used@@Base+0x9f50>
  422c30:	ldr	w2, [sp, #544]
  422c34:	sub	x1, x27, #0x1
  422c38:	add	x0, sp, #0x180
  422c3c:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  422c40:	tbnz	w0, #0, 4236a8 <_obstack_memory_used@@Base+0xa998>
  422c44:	cbz	w0, 422c60 <_obstack_memory_used@@Base+0x9f50>
  422c48:	and	w1, w0, #0x6
  422c4c:	cmp	w1, #0x6
  422c50:	b.eq	4233c4 <_obstack_memory_used@@Base+0xa6b4>  // b.none
  422c54:	tbnz	w0, #1, 423748 <_obstack_memory_used@@Base+0xaa38>
  422c58:	tbnz	w0, #2, 423754 <_obstack_memory_used@@Base+0xaa44>
  422c5c:	nop
  422c60:	ldr	x0, [sp, #568]
  422c64:	cbz	x0, 4235a4 <_obstack_memory_used@@Base+0xa894>
  422c68:	ldr	x1, [x20, #152]
  422c6c:	str	x19, [x0, x27, lsl #3]
  422c70:	cbnz	x1, 42379c <_obstack_memory_used@@Base+0xaa8c>
  422c74:	ldrb	w0, [x19, #104]
  422c78:	ldr	w24, [sp, #280]
  422c7c:	str	xzr, [sp, #112]
  422c80:	mov	x25, #0xffffffffffffffff    	// #-1
  422c84:	tbnz	w0, #4, 423708 <_obstack_memory_used@@Base+0xa9f8>
  422c88:	ldr	x0, [sp, #264]
  422c8c:	str	x0, [sp, #144]
  422c90:	ldr	x28, [sp, #456]
  422c94:	ldr	x0, [sp, #488]
  422c98:	cmp	x28, x0
  422c9c:	b.ge	423918 <_obstack_memory_used@@Base+0xac08>  // b.tcont
  422ca0:	ldr	x0, [sp, #448]
  422ca4:	mov	x26, x28
  422ca8:	add	x21, x26, #0x1
  422cac:	cmp	x21, x0
  422cb0:	b.ge	422d60 <_obstack_memory_used@@Base+0xa050>  // b.tcont
  422cb4:	nop
  422cb8:	ldr	x0, [sp, #432]
  422cbc:	cmp	x21, x0
  422cc0:	b.ge	423278 <_obstack_memory_used@@Base+0xa568>  // b.tcont
  422cc4:	ldrb	w0, [x19, #104]
  422cc8:	tbnz	w0, #5, 422d90 <_obstack_memory_used@@Base+0xa080>
  422ccc:	ldr	x0, [sp, #392]
  422cd0:	add	x1, x26, #0x1
  422cd4:	str	x1, [sp, #456]
  422cd8:	ldrb	w20, [x0, x26]
  422cdc:	ldr	x0, [x19, #88]
  422ce0:	cbz	x0, 423248 <_obstack_memory_used@@Base+0xa538>
  422ce4:	ldr	x20, [x0, x20, lsl #3]
  422ce8:	ldr	x0, [sp, #568]
  422cec:	cbz	x0, 422d04 <_obstack_memory_used@@Base+0x9ff4>
  422cf0:	mov	x2, x20
  422cf4:	add	x1, sp, #0x180
  422cf8:	add	x0, sp, #0x124
  422cfc:	bl	421818 <_obstack_memory_used@@Base+0x8b08>
  422d00:	mov	x20, x0
  422d04:	cbz	x20, 422f18 <_obstack_memory_used@@Base+0xa208>
  422d08:	cmp	x20, x19
  422d0c:	ldrb	w0, [x20, #104]
  422d10:	csel	w24, w24, wzr, eq  // eq = none
  422d14:	cmp	w24, #0x0
  422d18:	csel	x27, x27, x21, eq  // eq = none
  422d1c:	ldr	x26, [sp, #456]
  422d20:	tbz	w0, #4, 422d40 <_obstack_memory_used@@Base+0xa030>
  422d24:	tbnz	w0, #7, 42315c <_obstack_memory_used@@Base+0xa44c>
  422d28:	ldr	w0, [sp, #156]
  422d2c:	cbz	w0, 423730 <_obstack_memory_used@@Base+0xaa20>
  422d30:	mov	x25, x26
  422d34:	mov	x0, #0x1                   	// #1
  422d38:	str	x0, [sp, #112]
  422d3c:	str	xzr, [sp, #144]
  422d40:	ldr	x0, [sp, #488]
  422d44:	cmp	x0, x26
  422d48:	b.le	422f70 <_obstack_memory_used@@Base+0xa260>
  422d4c:	ldr	x0, [sp, #448]
  422d50:	add	x21, x26, #0x1
  422d54:	mov	x19, x20
  422d58:	cmp	x21, x0
  422d5c:	b.lt	422cb8 <_obstack_memory_used@@Base+0x9fa8>  // b.tstop
  422d60:	ldr	x1, [sp, #472]
  422d64:	cmp	x0, x1
  422d68:	b.ge	422cb8 <_obstack_memory_used@@Base+0x9fa8>  // b.tcont
  422d6c:	add	w1, w21, #0x1
  422d70:	add	x0, sp, #0x180
  422d74:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  422d78:	str	w0, [sp, #292]
  422d7c:	cbnz	w0, 4233d0 <_obstack_memory_used@@Base+0xa6c0>
  422d80:	ldrb	w0, [x19, #104]
  422d84:	ldr	x26, [sp, #456]
  422d88:	tbz	w0, #5, 422ccc <_obstack_memory_used@@Base+0x9fbc>
  422d8c:	nop
  422d90:	ldr	x5, [x19, #16]
  422d94:	ldr	x20, [sp, #536]
  422d98:	cmp	x5, #0x0
  422d9c:	b.le	422f10 <_obstack_memory_used@@Base+0xa200>
  422da0:	add	x28, x20, #0xd8
  422da4:	str	w24, [sp, #244]
  422da8:	mov	x24, x5
  422dac:	stp	x25, x21, [sp, #248]
  422db0:	mov	x21, x26
  422db4:	mov	x22, #0x0                   	// #0
  422db8:	ldr	x0, [x19, #24]
  422dbc:	ldr	x25, [x20]
  422dc0:	ldr	x26, [x0, x22, lsl #3]
  422dc4:	add	x0, x25, x26, lsl #4
  422dc8:	ldrb	w1, [x0, #10]
  422dcc:	tbz	w1, #4, 422ef8 <_obstack_memory_used@@Base+0xa1e8>
  422dd0:	ldr	w23, [x0, #8]
  422dd4:	tst	w23, #0x3ff00
  422dd8:	b.eq	422e10 <_obstack_memory_used@@Base+0xa100>  // b.none
  422ddc:	ldr	w2, [sp, #544]
  422de0:	mov	x1, x21
  422de4:	add	x0, sp, #0x180
  422de8:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  422dec:	ubfx	x2, x23, #8, #10
  422df0:	tbz	w23, #10, 423174 <_obstack_memory_used@@Base+0xa464>
  422df4:	tbz	w0, #0, 422ef8 <_obstack_memory_used@@Base+0xa1e8>
  422df8:	tbnz	w2, #3, 422ef8 <_obstack_memory_used@@Base+0xa1e8>
  422dfc:	tbz	w2, #5, 422e04 <_obstack_memory_used@@Base+0xa0f4>
  422e00:	tbz	w0, #1, 422ef8 <_obstack_memory_used@@Base+0xa1e8>
  422e04:	tbz	w2, #7, 422e10 <_obstack_memory_used@@Base+0xa100>
  422e08:	tbz	w0, #3, 422ef8 <_obstack_memory_used@@Base+0xa1e8>
  422e0c:	nop
  422e10:	mov	x4, x21
  422e14:	mov	x0, x25
  422e18:	add	x3, sp, #0x180
  422e1c:	mov	x2, x26
  422e20:	mov	x1, x28
  422e24:	bl	41cb40 <_obstack_memory_used@@Base+0x3e30>
  422e28:	cbz	w0, 422ef0 <_obstack_memory_used@@Base+0xa1e0>
  422e2c:	ldp	x3, x23, [sp, #448]
  422e30:	ldr	w1, [sp, #608]
  422e34:	ldr	x21, [sp, #576]
  422e38:	cmp	w1, w0
  422e3c:	csel	w1, w1, w0, ge  // ge = tcont
  422e40:	str	w1, [sp, #608]
  422e44:	add	x23, x23, w0, sxtw
  422e48:	cmp	x23, x3
  422e4c:	b.lt	423180 <_obstack_memory_used@@Base+0xa470>  // b.tstop
  422e50:	ldr	x0, [sp, #472]
  422e54:	cmp	x3, x0
  422e58:	b.ge	423180 <_obstack_memory_used@@Base+0xa470>  // b.tcont
  422e5c:	add	w1, w23, #0x1
  422e60:	add	x0, sp, #0x180
  422e64:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  422e68:	cbnz	w0, 4231a8 <_obstack_memory_used@@Base+0xa498>
  422e6c:	cmp	x23, x21
  422e70:	b.gt	423220 <_obstack_memory_used@@Base+0xa510>
  422e74:	str	wzr, [sp, #304]
  422e78:	ldr	x0, [x20, #24]
  422e7c:	ldr	x21, [sp, #568]
  422e80:	ldr	x0, [x0, x26, lsl #3]
  422e84:	ldr	x1, [x21, x23, lsl #3]
  422e88:	ldr	x3, [x20, #48]
  422e8c:	add	x0, x0, x0, lsl #1
  422e90:	add	x3, x3, x0, lsl #3
  422e94:	cbz	x1, 4231c4 <_obstack_memory_used@@Base+0xa4b4>
  422e98:	ldr	x1, [x1, #80]
  422e9c:	mov	x2, x3
  422ea0:	add	x0, sp, #0x148
  422ea4:	bl	420f30 <_obstack_memory_used@@Base+0x8220>
  422ea8:	str	w0, [sp, #304]
  422eac:	cbnz	w0, 4231a8 <_obstack_memory_used@@Base+0xa498>
  422eb0:	ldr	w2, [sp, #544]
  422eb4:	sub	x1, x23, #0x1
  422eb8:	add	x0, sp, #0x180
  422ebc:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  422ec0:	mov	w3, w0
  422ec4:	ldr	x26, [sp, #568]
  422ec8:	mov	x1, x20
  422ecc:	add	x2, sp, #0x148
  422ed0:	add	x0, sp, #0x130
  422ed4:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  422ed8:	str	x0, [x26, x23, lsl #3]
  422edc:	ldr	x0, [sp, #344]
  422ee0:	bl	402ae0 <free@plt>
  422ee4:	ldr	x1, [sp, #568]
  422ee8:	ldr	x0, [x1, x23, lsl #3]
  422eec:	cbz	x0, 42320c <_obstack_memory_used@@Base+0xa4fc>
  422ef0:	ldr	x24, [x19, #16]
  422ef4:	ldr	x21, [sp, #456]
  422ef8:	add	x22, x22, #0x1
  422efc:	cmp	x22, x24
  422f00:	b.lt	422db8 <_obstack_memory_used@@Base+0xa0a8>  // b.tstop
  422f04:	mov	x26, x21
  422f08:	ldr	w24, [sp, #244]
  422f0c:	ldp	x25, x21, [sp, #248]
  422f10:	str	wzr, [sp, #292]
  422f14:	b	422ccc <_obstack_memory_used@@Base+0x9fbc>
  422f18:	ldr	w0, [sp, #292]
  422f1c:	ldr	x28, [sp, #568]
  422f20:	cbnz	w0, 423380 <_obstack_memory_used@@Base+0xa670>
  422f24:	cbz	x28, 422f70 <_obstack_memory_used@@Base+0xa260>
  422f28:	ldr	w0, [sp, #180]
  422f2c:	ldr	w1, [sp, #112]
  422f30:	eor	w0, w0, #0x1
  422f34:	tst	w0, w1
  422f38:	b.ne	422f70 <_obstack_memory_used@@Base+0xa260>  // b.any
  422f3c:	mov	w1, #0x0                   	// #0
  422f40:	ldr	x0, [sp, #456]
  422f44:	ldr	x2, [sp, #576]
  422f48:	b	422f58 <_obstack_memory_used@@Base+0xa248>
  422f4c:	ldr	x3, [x28, x0, lsl #3]
  422f50:	mov	w1, #0x1                   	// #1
  422f54:	cbnz	x3, 423128 <_obstack_memory_used@@Base+0xa418>
  422f58:	mov	x3, x0
  422f5c:	add	x0, x0, #0x1
  422f60:	cmp	x2, x0
  422f64:	b.ge	422f4c <_obstack_memory_used@@Base+0xa23c>  // b.tcont
  422f68:	cbz	w1, 422f70 <_obstack_memory_used@@Base+0xa260>
  422f6c:	str	x3, [sp, #456]
  422f70:	ldr	x1, [sp, #144]
  422f74:	cbz	x1, 422f84 <_obstack_memory_used@@Base+0xa274>
  422f78:	ldr	x0, [x1]
  422f7c:	add	x27, x0, x27
  422f80:	str	x27, [x1]
  422f84:	cmn	x25, #0x1
  422f88:	b.eq	4232d0 <_obstack_memory_used@@Base+0xa5c0>  // b.none
  422f8c:	cmn	x25, #0x2
  422f90:	b.eq	4233d0 <_obstack_memory_used@@Base+0xa6c0>  // b.none
  422f94:	ldr	x0, [sp, #120]
  422f98:	str	x25, [sp, #552]
  422f9c:	ldrb	w0, [x0, #56]
  422fa0:	tbnz	w0, #4, 4233e8 <_obstack_memory_used@@Base+0xa6d8>
  422fa4:	ldr	x1, [sp, #128]
  422fa8:	cmp	x1, #0x1
  422fac:	b.ls	423644 <_obstack_memory_used@@Base+0xa934>  // b.plast
  422fb0:	ldr	x28, [sp, #568]
  422fb4:	mov	x2, x25
  422fb8:	add	x0, sp, #0x180
  422fbc:	ldr	x1, [x28, x25, lsl #3]
  422fc0:	bl	41b030 <_obstack_memory_used@@Base+0x2320>
  422fc4:	ldr	x1, [sp, #200]
  422fc8:	ldrb	w1, [x1, #176]
  422fcc:	str	x0, [sp, #560]
  422fd0:	tbnz	w1, #0, 42340c <_obstack_memory_used@@Base+0xa6fc>
  422fd4:	ldr	x0, [sp, #200]
  422fd8:	ldr	x0, [x0, #152]
  422fdc:	cbnz	x0, 42340c <_obstack_memory_used@@Base+0xa6fc>
  422fe0:	ldr	x0, [sp, #128]
  422fe4:	ldr	x27, [sp, #200]
  422fe8:	cmp	x0, #0x1
  422fec:	b.ls	423014 <_obstack_memory_used@@Base+0xa304>  // b.plast
  422ff0:	ldr	x1, [sp, #272]
  422ff4:	mov	x2, x0
  422ff8:	mvni	v0.4s, #0x0
  422ffc:	add	x0, x1, #0x10
  423000:	add	x1, x1, x2, lsl #4
  423004:	nop
  423008:	str	q0, [x0], #16
  42300c:	cmp	x1, x0
  423010:	b.ne	423008 <_obstack_memory_used@@Base+0xa2f8>  // b.any
  423014:	ldr	x0, [sp, #120]
  423018:	ldrb	w0, [x0, #56]
  42301c:	ldr	x1, [sp, #272]
  423020:	tst	x0, #0x10
  423024:	ldr	x0, [sp, #128]
  423028:	stp	xzr, x25, [x1]
  42302c:	mov	x1, #0x0                   	// #0
  423030:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  423034:	b.ne	4239d0 <_obstack_memory_used@@Base+0xacc0>  // b.any
  423038:	ldrb	w4, [sp, #524]
  42303c:	mov	x2, #0x0                   	// #0
  423040:	ldr	x0, [sp, #272]
  423044:	ldr	x3, [sp, #296]
  423048:	ldr	x7, [sp, #408]
  42304c:	ldp	x5, x6, [sp, #432]
  423050:	cbnz	w4, 423a74 <_obstack_memory_used@@Base+0xad64>
  423054:	ldr	x5, [sp, #128]
  423058:	b	423060 <_obstack_memory_used@@Base+0xa350>
  42305c:	ldr	x1, [x0]
  423060:	add	x4, x3, x1
  423064:	add	x2, x2, #0x1
  423068:	cmn	x1, #0x1
  42306c:	b.eq	42307c <_obstack_memory_used@@Base+0xa36c>  // b.none
  423070:	ldr	x1, [x0, #8]
  423074:	add	x1, x3, x1
  423078:	stp	x4, x1, [x0]
  42307c:	add	x0, x0, #0x10
  423080:	cmp	x5, x2
  423084:	b.ne	42305c <_obstack_memory_used@@Base+0xa34c>  // b.any
  423088:	ldr	x0, [sp, #232]
  42308c:	cmp	x0, #0x0
  423090:	b.le	4230bc <_obstack_memory_used@@Base+0xa3ac>
  423094:	ldr	x0, [sp, #128]
  423098:	ldr	x1, [sp, #272]
  42309c:	mvni	v0.4s, #0x0
  4230a0:	add	x0, x1, x0, lsl #4
  4230a4:	ldr	x1, [sp, #232]
  4230a8:	add	x1, x0, x1, lsl #4
  4230ac:	nop
  4230b0:	str	q0, [x0], #16
  4230b4:	cmp	x1, x0
  4230b8:	b.ne	4230b0 <_obstack_memory_used@@Base+0xa3a0>  // b.any
  4230bc:	ldr	x3, [x27, #224]
  4230c0:	ldr	x28, [sp, #568]
  4230c4:	cbz	x3, 423120 <_obstack_memory_used@@Base+0xa410>
  4230c8:	ldr	x0, [sp, #128]
  4230cc:	cmp	x0, #0x1
  4230d0:	b.ls	423120 <_obstack_memory_used@@Base+0xa410>  // b.plast
  4230d4:	ldr	x5, [sp, #272]
  4230d8:	sub	x4, x0, #0x1
  4230dc:	mov	x0, #0x0                   	// #0
  4230e0:	add	x2, x5, #0x10
  4230e4:	nop
  4230e8:	ldr	x1, [x3, x0, lsl #3]
  4230ec:	cmp	x1, x0
  4230f0:	b.eq	423110 <_obstack_memory_used@@Base+0xa400>  // b.none
  4230f4:	add	x1, x5, x1, lsl #4
  4230f8:	ldr	x1, [x1, #16]
  4230fc:	str	x1, [x2]
  423100:	ldr	x1, [x3, x0, lsl #3]
  423104:	add	x1, x5, x1, lsl #4
  423108:	ldr	x1, [x1, #24]
  42310c:	str	x1, [x2, #8]
  423110:	add	x0, x0, #0x1
  423114:	add	x2, x2, #0x10
  423118:	cmp	x0, x4
  42311c:	b.ne	4230e8 <_obstack_memory_used@@Base+0xa3d8>  // b.any
  423120:	ldp	x23, x24, [sp, #48]
  423124:	b	423390 <_obstack_memory_used@@Base+0xa680>
  423128:	add	x1, sp, #0x180
  42312c:	mov	x2, #0x0                   	// #0
  423130:	str	x0, [sp, #456]
  423134:	add	x0, sp, #0x124
  423138:	bl	421818 <_obstack_memory_used@@Base+0x8b08>
  42313c:	ldr	w1, [sp, #292]
  423140:	cbnz	w1, 423150 <_obstack_memory_used@@Base+0xa440>
  423144:	cbnz	x0, 423728 <_obstack_memory_used@@Base+0xaa18>
  423148:	ldr	x28, [sp, #568]
  42314c:	b	422f3c <_obstack_memory_used@@Base+0xa22c>
  423150:	mov	x20, x0
  423154:	cbnz	x0, 422d08 <_obstack_memory_used@@Base+0x9ff8>
  423158:	b	422f70 <_obstack_memory_used@@Base+0xa260>
  42315c:	mov	x2, x26
  423160:	mov	x1, x20
  423164:	add	x0, sp, #0x180
  423168:	bl	41b030 <_obstack_memory_used@@Base+0x2320>
  42316c:	cbz	x0, 422d40 <_obstack_memory_used@@Base+0xa030>
  423170:	b	422d28 <_obstack_memory_used@@Base+0xa018>
  423174:	tbz	w2, #3, 422dfc <_obstack_memory_used@@Base+0xa0ec>
  423178:	tbz	w0, #0, 422dfc <_obstack_memory_used@@Base+0xa0ec>
  42317c:	b	422ef8 <_obstack_memory_used@@Base+0xa1e8>
  423180:	ldr	x0, [sp, #432]
  423184:	cmp	x23, x0
  423188:	b.lt	422e6c <_obstack_memory_used@@Base+0xa15c>  // b.tstop
  42318c:	ldr	x1, [sp, #472]
  423190:	cmp	x0, x1
  423194:	b.ge	422e6c <_obstack_memory_used@@Base+0xa15c>  // b.tcont
  423198:	add	w1, w23, #0x1
  42319c:	add	x0, sp, #0x180
  4231a0:	bl	41db40 <_obstack_memory_used@@Base+0x4e30>
  4231a4:	cbz	w0, 422e6c <_obstack_memory_used@@Base+0xa15c>
  4231a8:	ldp	x25, x21, [sp, #248]
  4231ac:	ldr	w24, [sp, #244]
  4231b0:	ldr	x1, [sp, #568]
  4231b4:	str	w0, [sp, #292]
  4231b8:	cbz	x1, 423558 <_obstack_memory_used@@Base+0xa848>
  4231bc:	mov	x20, #0x0                   	// #0
  4231c0:	b	422cf0 <_obstack_memory_used@@Base+0x9fe0>
  4231c4:	add	x0, sp, #0x200
  4231c8:	ldr	w2, [sp, #544]
  4231cc:	ldp	x6, x7, [x3]
  4231d0:	sub	x1, x23, #0x1
  4231d4:	stp	x6, x7, [x0, #-184]
  4231d8:	add	x0, sp, #0x180
  4231dc:	ldr	x3, [x3, #16]
  4231e0:	str	x3, [sp, #344]
  4231e4:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  4231e8:	mov	w3, w0
  4231ec:	mov	x1, x20
  4231f0:	add	x2, sp, #0x148
  4231f4:	add	x0, sp, #0x130
  4231f8:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4231fc:	ldr	x1, [sp, #568]
  423200:	str	x0, [x21, x23, lsl #3]
  423204:	ldr	x0, [x1, x23, lsl #3]
  423208:	cbnz	x0, 422ef0 <_obstack_memory_used@@Base+0xa1e0>
  42320c:	ldr	w0, [sp, #304]
  423210:	cbz	w0, 422ef0 <_obstack_memory_used@@Base+0xa1e0>
  423214:	ldr	w24, [sp, #244]
  423218:	ldp	x25, x21, [sp, #248]
  42321c:	b	4231b4 <_obstack_memory_used@@Base+0xa4a4>
  423220:	ldr	x0, [sp, #568]
  423224:	add	x3, x21, #0x1
  423228:	sub	x2, x23, x21
  42322c:	mov	w1, #0x0                   	// #0
  423230:	lsl	x2, x2, #3
  423234:	add	x0, x0, x3, lsl #3
  423238:	bl	4028d0 <memset@plt>
  42323c:	str	wzr, [sp, #304]
  423240:	str	x23, [sp, #576]
  423244:	b	422e78 <_obstack_memory_used@@Base+0xa168>
  423248:	ldr	x22, [x19, #96]
  42324c:	cbz	x22, 423534 <_obstack_memory_used@@Base+0xa824>
  423250:	ldr	w2, [sp, #544]
  423254:	add	x0, sp, #0x180
  423258:	ldr	x1, [sp, #456]
  42325c:	sub	x1, x1, #0x1
  423260:	bl	41a588 <_obstack_memory_used@@Base+0x1878>
  423264:	and	x1, x20, #0xff
  423268:	tbz	w0, #0, 4233bc <_obstack_memory_used@@Base+0xa6ac>
  42326c:	add	x1, x1, #0x100
  423270:	ldr	x20, [x22, x1, lsl #3]
  423274:	b	422ce8 <_obstack_memory_used@@Base+0x9fd8>
  423278:	ldr	x1, [sp, #472]
  42327c:	cmp	x0, x1
  423280:	b.ge	422cc4 <_obstack_memory_used@@Base+0x9fb4>  // b.tcont
  423284:	b	422d6c <_obstack_memory_used@@Base+0xa05c>
  423288:	add	x2, sp, #0x200
  42328c:	stp	x24, xzr, [sp, #328]
  423290:	add	x28, sp, #0x148
  423294:	stp	x27, x25, [sp, #344]
  423298:	mov	x1, x28
  42329c:	add	x0, sp, #0x180
  4232a0:	stp	xzr, xzr, [x2, #-152]
  4232a4:	str	xzr, [sp, #376]
  4232a8:	bl	422278 <_obstack_memory_used@@Base+0x9568>
  4232ac:	mov	w19, w0
  4232b0:	ldr	x0, [sp, #376]
  4232b4:	bl	402ae0 <free@plt>
  4232b8:	cbnz	w19, 423824 <_obstack_memory_used@@Base+0xab14>
  4232bc:	ldr	x0, [x24]
  4232c0:	cbnz	x0, 42361c <_obstack_memory_used@@Base+0xa90c>
  4232c4:	mov	x0, x24
  4232c8:	bl	402ae0 <free@plt>
  4232cc:	nop
  4232d0:	add	x0, sp, #0x180
  4232d4:	bl	41a158 <_obstack_memory_used@@Base+0x1448>
  4232d8:	ldr	x19, [sp, #296]
  4232dc:	ldr	x0, [sp, #216]
  4232e0:	add	x19, x19, x0
  4232e4:	str	x19, [sp, #296]
  4232e8:	ldr	x0, [sp, #184]
  4232ec:	cmp	x19, x0
  4232f0:	ldr	x0, [sp, #136]
  4232f4:	ccmp	x19, x0, #0x0, ge  // ge = tcont
  4232f8:	b.gt	422b58 <_obstack_memory_used@@Base+0x9e48>
  4232fc:	ldr	w0, [sp, #176]
  423300:	cmp	w0, #0x7
  423304:	b.ne	422a28 <_obstack_memory_used@@Base+0x9d18>  // b.any
  423308:	ldr	x0, [sp, #136]
  42330c:	mov	w2, #0x0                   	// #0
  423310:	cmp	x0, x19
  423314:	mov	x0, x19
  423318:	b.le	422bc4 <_obstack_memory_used@@Base+0x9eb4>
  42331c:	ldr	x5, [sp, #136]
  423320:	ldr	x4, [sp, #192]
  423324:	ldr	x26, [sp, #208]
  423328:	ldr	x3, [sp, #224]
  42332c:	nop
  423330:	ldrb	w1, [x4, x0]
  423334:	ldrb	w1, [x3, x1]
  423338:	ldrb	w1, [x26, x1]
  42333c:	cbnz	w1, 4236f8 <_obstack_memory_used@@Base+0xa9e8>
  423340:	add	x0, x0, #0x1
  423344:	mov	w2, #0x1                   	// #1
  423348:	cmp	x0, x5
  42334c:	b.ne	423330 <_obstack_memory_used@@Base+0xa620>  // b.any
  423350:	b	422b24 <_obstack_memory_used@@Base+0x9e14>
  423354:	mov	w0, #0x1                   	// #1
  423358:	str	w0, [sp, #152]
  42335c:	ldr	w0, [sp, #152]
  423360:	ldp	x29, x30, [sp]
  423364:	ldp	x19, x20, [sp, #16]
  423368:	ldp	x21, x22, [sp, #32]
  42336c:	ldp	x25, x26, [sp, #64]
  423370:	ldp	x27, x28, [sp, #80]
  423374:	ldr	d8, [sp, #96]
  423378:	add	sp, sp, #0x280
  42337c:	ret
  423380:	ldr	x27, [sp, #200]
  423384:	mov	w0, #0xc                   	// #12
  423388:	ldp	x23, x24, [sp, #48]
  42338c:	str	w0, [sp, #152]
  423390:	mov	x0, x28
  423394:	bl	402ae0 <free@plt>
  423398:	ldr	x0, [x27, #152]
  42339c:	cbnz	x0, 422b7c <_obstack_memory_used@@Base+0x9e6c>
  4233a0:	ldr	x0, [sp, #400]
  4233a4:	bl	402ae0 <free@plt>
  4233a8:	ldr	x0, [sp, #408]
  4233ac:	bl	402ae0 <free@plt>
  4233b0:	ldrb	w0, [sp, #523]
  4233b4:	cbz	w0, 42335c <_obstack_memory_used@@Base+0xa64c>
  4233b8:	b	422bac <_obstack_memory_used@@Base+0x9e9c>
  4233bc:	ldr	x20, [x22, x20, lsl #3]
  4233c0:	b	422ce8 <_obstack_memory_used@@Base+0x9fd8>
  4233c4:	ldr	x19, [x20, #96]
  4233c8:	cbnz	x19, 422c60 <_obstack_memory_used@@Base+0x9f50>
  4233cc:	nop
  4233d0:	ldr	x27, [sp, #200]
  4233d4:	mov	w0, #0xc                   	// #12
  4233d8:	str	w0, [sp, #152]
  4233dc:	ldp	x23, x24, [sp, #48]
  4233e0:	ldr	x28, [sp, #568]
  4233e4:	b	423390 <_obstack_memory_used@@Base+0xa680>
  4233e8:	ldr	x27, [sp, #200]
  4233ec:	ldr	x0, [x27, #152]
  4233f0:	cbz	x0, 423638 <_obstack_memory_used@@Base+0xa928>
  4233f4:	ldr	x28, [sp, #568]
  4233f8:	mov	x2, x25
  4233fc:	add	x0, sp, #0x180
  423400:	ldr	x1, [x28, x25, lsl #3]
  423404:	bl	41b030 <_obstack_memory_used@@Base+0x2320>
  423408:	str	x0, [sp, #560]
  42340c:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  423410:	cmp	x25, x0
  423414:	ldr	x21, [sp, #536]
  423418:	ldr	x27, [sp, #560]
  42341c:	b.hi	423380 <_obstack_memory_used@@Base+0xa670>  // b.pmore
  423420:	add	x20, x25, #0x1
  423424:	lsl	x19, x20, #3
  423428:	mov	x0, x19
  42342c:	bl	402800 <malloc@plt>
  423430:	mov	x24, x0
  423434:	cbz	x0, 423380 <_obstack_memory_used@@Base+0xa670>
  423438:	ldr	x0, [x21, #152]
  42343c:	cbz	x0, 423288 <_obstack_memory_used@@Base+0xa578>
  423440:	mov	x0, x19
  423444:	bl	402800 <malloc@plt>
  423448:	mov	x23, x0
  42344c:	mov	x22, x0
  423450:	cbz	x0, 423808 <_obstack_memory_used@@Base+0xaaf8>
  423454:	add	x28, sp, #0x148
  423458:	lsl	x2, x20, #3
  42345c:	mov	w1, #0x0                   	// #0
  423460:	mov	x0, x23
  423464:	bl	4028d0 <memset@plt>
  423468:	stp	x24, x23, [sp, #328]
  42346c:	mov	x1, x28
  423470:	add	x0, sp, #0x180
  423474:	stp	x27, x25, [sp, #344]
  423478:	stp	xzr, xzr, [x28, #32]
  42347c:	str	xzr, [x28, #48]
  423480:	bl	422278 <_obstack_memory_used@@Base+0x9568>
  423484:	mov	w19, w0
  423488:	ldr	x0, [sp, #376]
  42348c:	bl	402ae0 <free@plt>
  423490:	cbnz	w19, 423508 <_obstack_memory_used@@Base+0xa7f8>
  423494:	ldr	x1, [x24]
  423498:	ldr	x0, [x23]
  42349c:	cbnz	x1, 42382c <_obstack_memory_used@@Base+0xab1c>
  4234a0:	cbnz	x0, 42382c <_obstack_memory_used@@Base+0xab1c>
  4234a4:	sub	x25, x25, #0x1
  4234a8:	cmn	x25, #0x1
  4234ac:	b.eq	4234d4 <_obstack_memory_used@@Base+0xa7c4>  // b.none
  4234b0:	ldr	x2, [sp, #568]
  4234b4:	nop
  4234b8:	ldr	x1, [x2, x25, lsl #3]
  4234bc:	cbz	x1, 4234c8 <_obstack_memory_used@@Base+0xa7b8>
  4234c0:	ldrb	w0, [x1, #104]
  4234c4:	tbnz	w0, #4, 4236b4 <_obstack_memory_used@@Base+0xa9a4>
  4234c8:	sub	x25, x25, #0x1
  4234cc:	cmn	x25, #0x1
  4234d0:	b.ne	4234b8 <_obstack_memory_used@@Base+0xa7a8>  // b.any
  4234d4:	mov	x0, x24
  4234d8:	bl	402ae0 <free@plt>
  4234dc:	mov	x0, x23
  4234e0:	bl	402ae0 <free@plt>
  4234e4:	add	x0, sp, #0x180
  4234e8:	bl	41a158 <_obstack_memory_used@@Base+0x1448>
  4234ec:	ldr	x19, [sp, #296]
  4234f0:	b	4232dc <_obstack_memory_used@@Base+0xa5cc>
  4234f4:	mov	w19, #0xc                   	// #12
  4234f8:	mov	x22, #0x0                   	// #0
  4234fc:	mov	x0, x23
  423500:	bl	402ae0 <free@plt>
  423504:	nop
  423508:	mov	x0, x24
  42350c:	bl	402ae0 <free@plt>
  423510:	mov	x0, x22
  423514:	bl	402ae0 <free@plt>
  423518:	cmp	w19, #0x1
  42351c:	b.eq	4232d0 <_obstack_memory_used@@Base+0xa5c0>  // b.none
  423520:	str	w19, [sp, #152]
  423524:	ldp	x23, x24, [sp, #48]
  423528:	ldr	x27, [sp, #200]
  42352c:	ldr	x28, [sp, #568]
  423530:	b	423390 <_obstack_memory_used@@Base+0xa680>
  423534:	ldr	x0, [sp, #536]
  423538:	mov	x1, x19
  42353c:	bl	41fc98 <_obstack_memory_used@@Base+0x6f88>
  423540:	tst	w0, #0xff
  423544:	b.ne	422cdc <_obstack_memory_used@@Base+0x9fcc>  // b.any
  423548:	ldr	x0, [sp, #568]
  42354c:	mov	w1, #0xc                   	// #12
  423550:	str	w1, [sp, #292]
  423554:	cbnz	x0, 4231bc <_obstack_memory_used@@Base+0xa4ac>
  423558:	mov	x28, #0x0                   	// #0
  42355c:	ldr	x27, [sp, #200]
  423560:	b	423384 <_obstack_memory_used@@Base+0xa674>
  423564:	stp	x23, x24, [sp, #48]
  423568:	cbz	x22, 422848 <_obstack_memory_used@@Base+0x9b38>
  42356c:	ldr	x0, [sp, #392]
  423570:	mov	x1, x20
  423574:	bl	402930 <realloc@plt>
  423578:	cbz	x0, 4233d4 <_obstack_memory_used@@Base+0xa6c4>
  42357c:	ldrb	w1, [x27, #176]
  423580:	add	x2, x27, #0xb8
  423584:	ldrb	w3, [sp, #523]
  423588:	str	x0, [sp, #392]
  42358c:	ubfx	x0, x1, #4, #1
  423590:	str	x20, [sp, #448]
  423594:	str	x2, [sp, #512]
  423598:	strb	w0, [sp, #526]
  42359c:	cbnz	w3, 422878 <_obstack_memory_used@@Base+0x9b68>
  4235a0:	b	422860 <_obstack_memory_used@@Base+0x9b50>
  4235a4:	ldrb	w0, [x19, #104]
  4235a8:	ldr	w24, [sp, #280]
  4235ac:	b	422c7c <_obstack_memory_used@@Base+0x9f6c>
  4235b0:	ldr	x0, [sp, #184]
  4235b4:	cmp	x0, x19
  4235b8:	b.gt	422b58 <_obstack_memory_used@@Base+0x9e48>
  4235bc:	ldr	x1, [sp, #224]
  4235c0:	mov	x0, x19
  4235c4:	mov	w2, #0x0                   	// #0
  4235c8:	cbz	x1, 423660 <_obstack_memory_used@@Base+0xa950>
  4235cc:	mov	x3, x1
  4235d0:	ldr	x4, [sp, #168]
  4235d4:	ldp	x5, x6, [sp, #184]
  4235d8:	ldr	x26, [sp, #208]
  4235dc:	b	4235f0 <_obstack_memory_used@@Base+0xa8e0>
  4235e0:	sub	x0, x0, #0x1
  4235e4:	mov	w2, #0x1                   	// #1
  4235e8:	cmp	x0, x5
  4235ec:	b.lt	4236cc <_obstack_memory_used@@Base+0xa9bc>  // b.tstop
  4235f0:	cmp	x4, x0
  4235f4:	mov	x1, #0x0                   	// #0
  4235f8:	b.le	423600 <_obstack_memory_used@@Base+0xa8f0>
  4235fc:	ldrb	w1, [x6, x0]
  423600:	ldrb	w1, [x3, x1]
  423604:	ldrb	w1, [x26, x1]
  423608:	cbz	w1, 4235e0 <_obstack_memory_used@@Base+0xa8d0>
  42360c:	cbz	w2, 422bd0 <_obstack_memory_used@@Base+0x9ec0>
  423610:	mov	x19, x0
  423614:	str	x0, [sp, #296]
  423618:	b	422bd0 <_obstack_memory_used@@Base+0x9ec0>
  42361c:	mov	x19, x27
  423620:	ldr	x27, [sp, #200]
  423624:	ldr	x0, [sp, #568]
  423628:	bl	402ae0 <free@plt>
  42362c:	str	x25, [sp, #552]
  423630:	str	x19, [sp, #560]
  423634:	str	x24, [sp, #568]
  423638:	ldr	x0, [sp, #128]
  42363c:	cbnz	x0, 422fe8 <_obstack_memory_used@@Base+0xa2d8>
  423640:	b	4233dc <_obstack_memory_used@@Base+0xa6cc>
  423644:	ldr	x1, [sp, #200]
  423648:	ldr	x1, [x1, #152]
  42364c:	cbnz	x1, 4233f4 <_obstack_memory_used@@Base+0xa6e4>
  423650:	ldr	x1, [sp, #128]
  423654:	ldr	x27, [sp, #200]
  423658:	cbz	x1, 4233dc <_obstack_memory_used@@Base+0xa6cc>
  42365c:	b	42301c <_obstack_memory_used@@Base+0xa30c>
  423660:	ldr	x3, [sp, #168]
  423664:	ldp	x4, x5, [sp, #184]
  423668:	ldr	x26, [sp, #208]
  42366c:	b	423680 <_obstack_memory_used@@Base+0xa970>
  423670:	sub	x0, x0, #0x1
  423674:	mov	w2, #0x1                   	// #1
  423678:	cmp	x4, x0
  42367c:	b.gt	4236cc <_obstack_memory_used@@Base+0xa9bc>
  423680:	cmp	x3, x0
  423684:	mov	x1, #0x0                   	// #0
  423688:	b.le	423690 <_obstack_memory_used@@Base+0xa980>
  42368c:	ldrb	w1, [x5, x0]
  423690:	ldrb	w1, [x26, x1]
  423694:	cbz	w1, 423670 <_obstack_memory_used@@Base+0xa960>
  423698:	b	42360c <_obstack_memory_used@@Base+0xa8fc>
  42369c:	ldrb	w0, [x27, #176]
  4236a0:	tbnz	w0, #1, 422918 <_obstack_memory_used@@Base+0x9c08>
  4236a4:	b	42293c <_obstack_memory_used@@Base+0x9c2c>
  4236a8:	ldr	x19, [x20, #80]
  4236ac:	cbnz	x19, 422c60 <_obstack_memory_used@@Base+0x9f50>
  4236b0:	b	4233d0 <_obstack_memory_used@@Base+0xa6c0>
  4236b4:	mov	x2, x25
  4236b8:	add	x0, sp, #0x180
  4236bc:	add	x20, x25, #0x1
  4236c0:	bl	41b030 <_obstack_memory_used@@Base+0x2320>
  4236c4:	mov	x27, x0
  4236c8:	b	423458 <_obstack_memory_used@@Base+0xa748>
  4236cc:	mov	w1, #0x1                   	// #1
  4236d0:	str	w1, [sp, #152]
  4236d4:	str	x0, [sp, #296]
  4236d8:	ldp	x23, x24, [sp, #48]
  4236dc:	ldr	x27, [sp, #200]
  4236e0:	ldr	x28, [sp, #568]
  4236e4:	b	423390 <_obstack_memory_used@@Base+0xa680>
  4236e8:	ldp	x23, x24, [sp, #48]
  4236ec:	ldr	x27, [sp, #200]
  4236f0:	ldr	x28, [sp, #568]
  4236f4:	b	423390 <_obstack_memory_used@@Base+0xa680>
  4236f8:	cbz	w2, 422bd0 <_obstack_memory_used@@Base+0x9ec0>
  4236fc:	mov	x19, x0
  423700:	str	x0, [sp, #296]
  423704:	b	422bc4 <_obstack_memory_used@@Base+0x9eb4>
  423708:	ldrsb	w0, [x19, #104]
  42370c:	tbnz	w0, #31, 423774 <_obstack_memory_used@@Base+0xaa64>
  423710:	mov	x0, #0x1                   	// #1
  423714:	str	x0, [sp, #112]
  423718:	ldr	w0, [sp, #156]
  42371c:	mov	x25, x27
  423720:	cbnz	w0, 422c88 <_obstack_memory_used@@Base+0x9f78>
  423724:	b	422f84 <_obstack_memory_used@@Base+0xa274>
  423728:	mov	x20, x0
  42372c:	b	422d08 <_obstack_memory_used@@Base+0x9ff8>
  423730:	mov	x25, x26
  423734:	b	422f84 <_obstack_memory_used@@Base+0xa274>
  423738:	mov	w0, #0xc                   	// #12
  42373c:	mov	x28, #0x0                   	// #0
  423740:	str	w0, [sp, #152]
  423744:	b	423390 <_obstack_memory_used@@Base+0xa680>
  423748:	ldr	x19, [x20, #88]
  42374c:	cbnz	x19, 422c60 <_obstack_memory_used@@Base+0x9f50>
  423750:	b	4233d0 <_obstack_memory_used@@Base+0xa6c0>
  423754:	ldr	x2, [x19, #80]
  423758:	mov	w3, w0
  42375c:	mov	x1, x20
  423760:	add	x0, sp, #0x124
  423764:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  423768:	mov	x19, x0
  42376c:	cbnz	x19, 422c60 <_obstack_memory_used@@Base+0x9f50>
  423770:	b	4233d0 <_obstack_memory_used@@Base+0xa6c0>
  423774:	mov	x2, x27
  423778:	mov	x1, x19
  42377c:	add	x0, sp, #0x180
  423780:	bl	41b030 <_obstack_memory_used@@Base+0x2320>
  423784:	str	x0, [sp, #112]
  423788:	cbz	x0, 422c88 <_obstack_memory_used@@Base+0x9f78>
  42378c:	b	423710 <_obstack_memory_used@@Base+0xaa00>
  423790:	ldr	x0, [sp, #192]
  423794:	ldrb	w0, [x0, x19]
  423798:	b	422b40 <_obstack_memory_used@@Base+0x9e30>
  42379c:	add	x20, x19, #0x10
  4237a0:	add	x21, x19, #0x18
  4237a4:	mov	x1, x20
  4237a8:	mov	x2, x21
  4237ac:	add	x0, sp, #0x180
  4237b0:	mov	x3, #0x0                   	// #0
  4237b4:	bl	41b2b0 <_obstack_memory_used@@Base+0x25a0>
  4237b8:	str	w0, [sp, #292]
  4237bc:	cbnz	w0, 423924 <_obstack_memory_used@@Base+0xac14>
  4237c0:	ldrb	w0, [x19, #104]
  4237c4:	tbnz	w0, #6, 4237d0 <_obstack_memory_used@@Base+0xaac0>
  4237c8:	mov	w24, #0x0                   	// #0
  4237cc:	b	422c7c <_obstack_memory_used@@Base+0x9f6c>
  4237d0:	mov	x2, x21
  4237d4:	mov	x1, x20
  4237d8:	add	x0, sp, #0x180
  4237dc:	bl	421108 <_obstack_memory_used@@Base+0x83f8>
  4237e0:	str	w0, [sp, #292]
  4237e4:	cbnz	w0, 423924 <_obstack_memory_used@@Base+0xac14>
  4237e8:	ldrb	w0, [x19, #104]
  4237ec:	mov	w24, #0x0                   	// #0
  4237f0:	b	422c7c <_obstack_memory_used@@Base+0x9f6c>
  4237f4:	str	w0, [sp, #152]
  4237f8:	ldp	x23, x24, [sp, #48]
  4237fc:	ldr	x27, [sp, #200]
  423800:	ldr	x28, [sp, #568]
  423804:	b	423390 <_obstack_memory_used@@Base+0xa680>
  423808:	mov	w1, #0xc                   	// #12
  42380c:	mov	x0, x24
  423810:	str	w1, [sp, #152]
  423814:	ldr	x27, [sp, #200]
  423818:	bl	402ae0 <free@plt>
  42381c:	ldp	x23, x24, [sp, #48]
  423820:	b	423390 <_obstack_memory_used@@Base+0xa680>
  423824:	mov	x22, #0x0                   	// #0
  423828:	b	423508 <_obstack_memory_used@@Base+0xa7f8>
  42382c:	mov	x22, #0x0                   	// #0
  423830:	b	4238b8 <_obstack_memory_used@@Base+0xaba8>
  423834:	cbz	x0, 4238a8 <_obstack_memory_used@@Base+0xab98>
  423838:	add	x19, x1, #0x8
  42383c:	add	x28, x0, #0x8
  423840:	ldr	x1, [x19, #8]
  423844:	ldr	x0, [x28, #8]
  423848:	cmp	x1, #0x0
  42384c:	b.le	4238c8 <_obstack_memory_used@@Base+0xabb8>
  423850:	cmp	x0, #0x0
  423854:	b.gt	42392c <_obstack_memory_used@@Base+0xac1c>
  423858:	dup	v0.2d, x1
  42385c:	lsl	x28, x1, #3
  423860:	mov	x0, x28
  423864:	str	q0, [sp, #304]
  423868:	bl	402800 <malloc@plt>
  42386c:	str	x0, [sp, #320]
  423870:	cbz	x0, 4234f4 <_obstack_memory_used@@Base+0xa7e4>
  423874:	ldr	x1, [x19, #16]
  423878:	mov	x2, x28
  42387c:	bl	402650 <memcpy@plt>
  423880:	str	wzr, [sp, #292]
  423884:	add	x2, sp, #0x130
  423888:	mov	x1, x21
  42388c:	add	x0, sp, #0x124
  423890:	bl	41e980 <_obstack_memory_used@@Base+0x5c70>
  423894:	str	x0, [x24, x22, lsl #3]
  423898:	ldr	x0, [sp, #320]
  42389c:	bl	402ae0 <free@plt>
  4238a0:	ldr	w19, [sp, #292]
  4238a4:	cbnz	w19, 4234f8 <_obstack_memory_used@@Base+0xa7e8>
  4238a8:	add	x22, x22, #0x1
  4238ac:	cmp	x22, x20
  4238b0:	b.eq	4239a4 <_obstack_memory_used@@Base+0xac94>  // b.none
  4238b4:	ldr	x0, [x23, x22, lsl #3]
  4238b8:	ldr	x1, [x24, x22, lsl #3]
  4238bc:	cbnz	x1, 423834 <_obstack_memory_used@@Base+0xab24>
  4238c0:	str	x0, [x24, x22, lsl #3]
  4238c4:	b	4238a8 <_obstack_memory_used@@Base+0xab98>
  4238c8:	cmp	x0, #0x0
  4238cc:	b.gt	4238e4 <_obstack_memory_used@@Base+0xabd4>
  4238d0:	add	x2, sp, #0x130
  4238d4:	str	wzr, [sp, #292]
  4238d8:	stp	xzr, xzr, [sp, #304]
  4238dc:	str	xzr, [sp, #320]
  4238e0:	b	423888 <_obstack_memory_used@@Base+0xab78>
  4238e4:	dup	v0.2d, x0
  4238e8:	lsl	x19, x0, #3
  4238ec:	mov	x0, x19
  4238f0:	str	q0, [sp, #304]
  4238f4:	bl	402800 <malloc@plt>
  4238f8:	str	x0, [sp, #320]
  4238fc:	cbz	x0, 4234f4 <_obstack_memory_used@@Base+0xa7e4>
  423900:	ldr	x1, [x28, #16]
  423904:	mov	x2, x19
  423908:	bl	402650 <memcpy@plt>
  42390c:	str	wzr, [sp, #292]
  423910:	add	x2, sp, #0x130
  423914:	b	423888 <_obstack_memory_used@@Base+0xab78>
  423918:	ldr	x0, [sp, #264]
  42391c:	str	x0, [sp, #144]
  423920:	b	422f70 <_obstack_memory_used@@Base+0xa260>
  423924:	sxtw	x25, w0
  423928:	b	422f84 <_obstack_memory_used@@Base+0xa274>
  42392c:	add	x0, x0, x1
  423930:	str	x0, [sp, #304]
  423934:	lsl	x0, x0, #3
  423938:	bl	402800 <malloc@plt>
  42393c:	str	x0, [sp, #320]
  423940:	cbz	x0, 4234f4 <_obstack_memory_used@@Base+0xa7e4>
  423944:	sub	x8, x0, #0x8
  423948:	mov	x3, #0x0                   	// #0
  42394c:	mov	x4, #0x0                   	// #0
  423950:	mov	x5, #0x0                   	// #0
  423954:	ldr	x7, [x19, #16]
  423958:	ldr	x1, [x28, #16]
  42395c:	b	423984 <_obstack_memory_used@@Base+0xac74>
  423960:	cinc	x3, x3, eq  // eq = none
  423964:	add	x4, x4, #0x1
  423968:	str	x2, [x8, x5, lsl #3]
  42396c:	ldr	x6, [x19, #8]
  423970:	ldr	x2, [x28, #8]
  423974:	cmp	x4, x6
  423978:	b.ge	4239b8 <_obstack_memory_used@@Base+0xaca8>  // b.tcont
  42397c:	cmp	x2, x3
  423980:	b.le	423a0c <_obstack_memory_used@@Base+0xacfc>
  423984:	ldr	x2, [x7, x4, lsl #3]
  423988:	add	x5, x5, #0x1
  42398c:	ldr	x6, [x1, x3, lsl #3]
  423990:	cmp	x2, x6
  423994:	b.le	423960 <_obstack_memory_used@@Base+0xac50>
  423998:	add	x3, x3, #0x1
  42399c:	str	x6, [x8, x5, lsl #3]
  4239a0:	b	42396c <_obstack_memory_used@@Base+0xac5c>
  4239a4:	mov	x19, x27
  4239a8:	mov	x0, x23
  4239ac:	ldr	x27, [sp, #200]
  4239b0:	bl	402ae0 <free@plt>
  4239b4:	b	423624 <_obstack_memory_used@@Base+0xa914>
  4239b8:	cmp	x2, x3
  4239bc:	b.gt	423a40 <_obstack_memory_used@@Base+0xad30>
  4239c0:	add	x2, sp, #0x130
  4239c4:	str	wzr, [sp, #292]
  4239c8:	str	x5, [sp, #312]
  4239cc:	b	423888 <_obstack_memory_used@@Base+0xab78>
  4239d0:	ldrb	w0, [x27, #176]
  4239d4:	tbz	w0, #0, 4239e8 <_obstack_memory_used@@Base+0xacd8>
  4239d8:	ldr	x0, [x27, #152]
  4239dc:	cmp	x0, #0x0
  4239e0:	cset	w0, gt
  4239e4:	str	w0, [sp, #284]
  4239e8:	ldp	x0, x2, [sp, #120]
  4239ec:	add	x1, sp, #0x180
  4239f0:	ldrb	w4, [sp, #284]
  4239f4:	ldr	x19, [sp, #272]
  4239f8:	mov	x3, x19
  4239fc:	bl	41e0d8 <_obstack_memory_used@@Base+0x53c8>
  423a00:	cbnz	w0, 4233d8 <_obstack_memory_used@@Base+0xa6c8>
  423a04:	ldr	x1, [x19]
  423a08:	b	423038 <_obstack_memory_used@@Base+0xa328>
  423a0c:	sub	x2, x6, x4
  423a10:	add	x1, x7, x4, lsl #3
  423a14:	add	x0, x0, x5, lsl #3
  423a18:	str	x5, [sp, #112]
  423a1c:	lsl	x2, x2, #3
  423a20:	str	x4, [sp, #144]
  423a24:	bl	402650 <memcpy@plt>
  423a28:	ldr	x0, [x19, #8]
  423a2c:	ldr	x4, [sp, #144]
  423a30:	ldr	x5, [sp, #112]
  423a34:	sub	x4, x0, x4
  423a38:	add	x5, x5, x4
  423a3c:	b	4239c0 <_obstack_memory_used@@Base+0xacb0>
  423a40:	sub	x2, x2, x3
  423a44:	add	x1, x1, x3, lsl #3
  423a48:	add	x0, x0, x5, lsl #3
  423a4c:	str	x5, [sp, #112]
  423a50:	lsl	x2, x2, #3
  423a54:	str	x3, [sp, #144]
  423a58:	bl	402650 <memcpy@plt>
  423a5c:	ldr	x0, [x28, #8]
  423a60:	ldr	x3, [sp, #144]
  423a64:	ldr	x5, [sp, #112]
  423a68:	sub	x3, x0, x3
  423a6c:	add	x5, x5, x3
  423a70:	b	4239c0 <_obstack_memory_used@@Base+0xacb0>
  423a74:	ldr	x9, [sp, #128]
  423a78:	b	423a80 <_obstack_memory_used@@Base+0xad70>
  423a7c:	ldr	x1, [x0]
  423a80:	cmn	x1, #0x1
  423a84:	b.eq	423ab8 <_obstack_memory_used@@Base+0xada8>  // b.none
  423a88:	cmp	x5, x1
  423a8c:	mov	x4, x6
  423a90:	ldr	x8, [x0, #8]
  423a94:	b.eq	423a9c <_obstack_memory_used@@Base+0xad8c>  // b.none
  423a98:	ldr	x4, [x7, x1, lsl #3]
  423a9c:	str	x4, [x0]
  423aa0:	cmp	x8, x5
  423aa4:	b.eq	423acc <_obstack_memory_used@@Base+0xadbc>  // b.none
  423aa8:	ldr	x1, [x7, x8, lsl #3]
  423aac:	add	x1, x3, x1
  423ab0:	add	x4, x3, x4
  423ab4:	stp	x4, x1, [x0]
  423ab8:	add	x2, x2, #0x1
  423abc:	add	x0, x0, #0x10
  423ac0:	cmp	x2, x9
  423ac4:	b.ne	423a7c <_obstack_memory_used@@Base+0xad6c>  // b.any
  423ac8:	b	423088 <_obstack_memory_used@@Base+0xa378>
  423acc:	mov	x1, x6
  423ad0:	b	423aac <_obstack_memory_used@@Base+0xad9c>
  423ad4:	nop
  423ad8:	stp	x29, x30, [sp, #-288]!
  423adc:	mov	x29, sp
  423ae0:	stp	x19, x20, [sp, #16]
  423ae4:	mov	x19, x2
  423ae8:	ldrb	w2, [x2, #8]
  423aec:	stp	x21, x22, [sp, #32]
  423af0:	mov	x22, x3
  423af4:	cmp	w2, #0xc
  423af8:	stp	x25, x26, [sp, #64]
  423afc:	mov	x26, x0
  423b00:	stp	x27, x28, [sp, #80]
  423b04:	str	x5, [sp, #128]
  423b08:	ldr	x28, [x1]
  423b0c:	b.eq	424e7c <_obstack_memory_used@@Base+0xc16c>  // b.none
  423b10:	mov	x20, x1
  423b14:	b.ls	42423c <_obstack_memory_used@@Base+0xb52c>  // b.plast
  423b18:	cmp	w2, #0x18
  423b1c:	b.eq	4241b8 <_obstack_memory_used@@Base+0xb4a8>  // b.none
  423b20:	b.ls	424198 <_obstack_memory_used@@Base+0xb488>  // b.plast
  423b24:	cmp	w2, #0x23
  423b28:	b.hi	4249a0 <_obstack_memory_used@@Base+0xbc90>  // b.pmore
  423b2c:	cmp	w2, #0x21
  423b30:	ldr	x1, [x0, #120]
  423b34:	b.hi	4249b0 <_obstack_memory_used@@Base+0xbca0>  // b.pmore
  423b38:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  423b3c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  423b40:	add	x3, x3, #0xc68
  423b44:	add	x2, x2, #0xf90
  423b48:	cset	w4, eq  // eq = none
  423b4c:	mov	x0, x28
  423b50:	bl	420a78 <_obstack_memory_used@@Base+0x7d68>
  423b54:	ldr	x1, [sp, #128]
  423b58:	str	x0, [sp, #112]
  423b5c:	ldr	w1, [x1]
  423b60:	cmp	w1, #0x0
  423b64:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  423b68:	b.eq	4243bc <_obstack_memory_used@@Base+0xb6ac>  // b.none
  423b6c:	stp	x23, x24, [sp, #48]
  423b70:	mov	x2, x22
  423b74:	mov	x1, x26
  423b78:	mov	x0, x19
  423b7c:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  423b80:	ldr	x3, [x26, #72]
  423b84:	ldrb	w1, [x19, #8]
  423b88:	cmp	w1, #0x12
  423b8c:	sub	w2, w1, #0x12
  423b90:	cset	w24, eq  // eq = none
  423b94:	add	x27, x3, w0, sxtw
  423b98:	cmp	w1, #0xb
  423b9c:	str	x27, [x26, #72]
  423ba0:	and	w2, w2, #0xff
  423ba4:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  423ba8:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  423bac:	b.hi	424868 <_obstack_memory_used@@Base+0xbb58>  // b.pmore
  423bb0:	and	x0, x22, #0x200000
  423bb4:	str	x0, [sp, #152]
  423bb8:	and	x0, x22, #0x1000000
  423bbc:	str	x0, [sp, #136]
  423bc0:	ldp	x2, x3, [x19]
  423bc4:	stp	x2, x3, [sp, #96]
  423bc8:	cmp	w1, #0x17
  423bcc:	b.eq	423fc4 <_obstack_memory_used@@Base+0xb2b4>  // b.none
  423bd0:	cmp	w1, #0x13
  423bd4:	mov	x2, x22
  423bd8:	mov	x1, x26
  423bdc:	mov	x0, x19
  423be0:	mov	x20, #0xffffffffffffffff    	// #-1
  423be4:	cneg	x20, x20, eq  // eq = none
  423be8:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  423bec:	ldr	x1, [x26, #72]
  423bf0:	add	x0, x1, w0, sxtw
  423bf4:	str	x0, [x26, #72]
  423bf8:	ldr	x0, [sp, #112]
  423bfc:	cbz	x0, 424184 <_obstack_memory_used@@Base+0xb474>
  423c00:	cbnz	w24, 424780 <_obstack_memory_used@@Base+0xba70>
  423c04:	mov	x24, x0
  423c08:	mov	x23, #0x0                   	// #0
  423c0c:	mov	x21, #0x0                   	// #0
  423c10:	ldrb	w0, [x24, #48]
  423c14:	cmp	w0, #0x11
  423c18:	b.eq	424054 <_obstack_memory_used@@Base+0xb344>  // b.none
  423c1c:	cmn	x20, #0x1
  423c20:	ldr	w0, [x28, #128]
  423c24:	cset	w27, eq  // eq = none
  423c28:	mov	x6, #0x0                   	// #0
  423c2c:	add	w27, w27, #0xa
  423c30:	cmp	w0, #0xf
  423c34:	b.eq	42433c <_obstack_memory_used@@Base+0xb62c>  // b.none
  423c38:	mov	x2, #0x8                   	// #8
  423c3c:	mov	w5, #0x40                  	// #64
  423c40:	ldr	x25, [x28, #112]
  423c44:	smaddl	x5, w0, w5, x2
  423c48:	add	w2, w0, #0x1
  423c4c:	sbfiz	x0, x0, #6, #32
  423c50:	str	w2, [x28, #128]
  423c54:	add	x2, x25, x0
  423c58:	add	x4, x0, #0x20
  423c5c:	add	x4, x25, x4
  423c60:	bfxil	x6, x27, #0, #8
  423c64:	movi	v0.4s, #0x0
  423c68:	add	x27, x25, x5
  423c6c:	stp	xzr, x24, [x2, #8]
  423c70:	mov	x9, #0xffffffffffffffff    	// #-1
  423c74:	str	xzr, [x2, #24]
  423c78:	stp	xzr, x6, [x2, #48]
  423c7c:	ldrb	w5, [x4, #26]
  423c80:	and	w5, w5, #0xfffffff3
  423c84:	strb	w5, [x4, #26]
  423c88:	str	x9, [x2, #64]
  423c8c:	str	q0, [x2, #32]
  423c90:	str	x27, [x24]
  423c94:	cbz	x27, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  423c98:	add	x4, x23, #0x2
  423c9c:	mov	x23, x27
  423ca0:	cmp	x20, x4
  423ca4:	b.lt	4240c4 <_obstack_memory_used@@Base+0xb3b4>  // b.tstop
  423ca8:	mov	x25, x24
  423cac:	ldr	w24, [x28, #128]
  423cb0:	add	x6, sp, #0x100
  423cb4:	mov	x9, #0xffffffffffffffff    	// #-1
  423cb8:	cmp	w24, #0xf
  423cbc:	b.eq	423d4c <_obstack_memory_used@@Base+0xb03c>  // b.none
  423cc0:	ldr	x0, [x28, #112]
  423cc4:	sbfiz	x2, x24, #6, #32
  423cc8:	add	w3, w24, #0x1
  423ccc:	str	w3, [x28, #128]
  423cd0:	add	x12, x0, x2
  423cd4:	add	x13, x2, #0x20
  423cd8:	mov	w2, #0x40                  	// #64
  423cdc:	add	x13, x0, x13
  423ce0:	sxtw	x11, w24
  423ce4:	str	xzr, [x12, #24]
  423ce8:	smaddl	x24, w24, w2, x0
  423cec:	stur	q0, [x12, #8]
  423cf0:	add	x24, x24, #0x8
  423cf4:	ldp	x2, x3, [x25, #40]
  423cf8:	stp	x2, x3, [x12, #48]
  423cfc:	ldrb	w2, [x13, #26]
  423d00:	and	w2, w2, #0xfffffff3
  423d04:	strb	w2, [x13, #26]
  423d08:	str	x9, [x12, #64]
  423d0c:	str	q0, [x12, #32]
  423d10:	str	x24, [x6]
  423d14:	cbz	x24, 423e00 <_obstack_memory_used@@Base+0xb0f0>
  423d18:	add	x0, x0, x11, lsl #6
  423d1c:	str	x27, [x0, #8]
  423d20:	ldr	x27, [x6]
  423d24:	ldrb	w0, [x27, #50]
  423d28:	orr	w0, w0, #0x4
  423d2c:	strb	w0, [x27, #50]
  423d30:	ldr	x0, [x25, #8]
  423d34:	cbz	x0, 423dd8 <_obstack_memory_used@@Base+0xb0c8>
  423d38:	add	x6, x27, #0x8
  423d3c:	mov	x25, x0
  423d40:	ldr	w24, [x28, #128]
  423d44:	cmp	w24, #0xf
  423d48:	b.ne	423cc0 <_obstack_memory_used@@Base+0xafb0>  // b.any
  423d4c:	mov	x0, #0x3c8                 	// #968
  423d50:	str	x4, [sp, #96]
  423d54:	str	x6, [sp, #120]
  423d58:	bl	402800 <malloc@plt>
  423d5c:	movi	v0.4s, #0x0
  423d60:	mov	x9, #0xffffffffffffffff    	// #-1
  423d64:	ldr	x4, [sp, #96]
  423d68:	ldr	x6, [sp, #120]
  423d6c:	cbz	x0, 425578 <_obstack_memory_used@@Base+0xc868>
  423d70:	ldr	x2, [x28, #112]
  423d74:	str	x2, [x0]
  423d78:	mov	w1, #0x1                   	// #1
  423d7c:	str	x0, [x28, #112]
  423d80:	str	w1, [x28, #128]
  423d84:	mov	x11, #0x0                   	// #0
  423d88:	str	xzr, [x0, #24]
  423d8c:	add	x10, x0, #0x8
  423d90:	stur	q0, [x0, #8]
  423d94:	ldp	x2, x3, [x25, #40]
  423d98:	stp	x2, x3, [x0, #48]
  423d9c:	ldrb	w2, [x0, #58]
  423da0:	str	q0, [x0, #32]
  423da4:	and	w2, w2, #0xfffffff3
  423da8:	strb	w2, [x0, #58]
  423dac:	str	x9, [x0, #64]
  423db0:	add	x0, x0, x11, lsl #6
  423db4:	str	x10, [x6]
  423db8:	str	x27, [x0, #8]
  423dbc:	ldr	x27, [x6]
  423dc0:	ldrb	w0, [x27, #50]
  423dc4:	orr	w0, w0, #0x4
  423dc8:	strb	w0, [x27, #50]
  423dcc:	ldr	x0, [x25, #8]
  423dd0:	cbnz	x0, 423d38 <_obstack_memory_used@@Base+0xb028>
  423dd4:	nop
  423dd8:	ldr	x2, [x25, #16]
  423ddc:	cmp	x2, #0x0
  423de0:	ccmp	x2, x0, #0x4, ne  // ne = any
  423de4:	b.ne	423ef4 <_obstack_memory_used@@Base+0xb1e4>  // b.any
  423de8:	ldr	x2, [x25]
  423dec:	mov	x0, x25
  423df0:	ldr	x27, [x27]
  423df4:	mov	x25, x2
  423df8:	cbnz	x2, 423dd8 <_obstack_memory_used@@Base+0xb0c8>
  423dfc:	ldr	x24, [sp, #256]
  423e00:	mov	x6, #0x0                   	// #0
  423e04:	ldr	w0, [x28, #128]
  423e08:	cmp	w0, #0xf
  423e0c:	b.eq	423f40 <_obstack_memory_used@@Base+0xb230>  // b.none
  423e10:	mov	w27, #0x40                  	// #64
  423e14:	mov	x2, #0x8                   	// #8
  423e18:	ldr	x25, [x28, #112]
  423e1c:	smaddl	x27, w0, w27, x2
  423e20:	add	w9, w0, #0x1
  423e24:	sbfiz	x0, x0, #6, #32
  423e28:	mov	x10, #0x10                  	// #16
  423e2c:	add	x3, x25, x0
  423e30:	add	x2, x0, #0x20
  423e34:	add	x2, x25, x2
  423e38:	str	w9, [x28, #128]
  423e3c:	bfxil	x6, x10, #0, #8
  423e40:	mov	x9, #0xffffffffffffffff    	// #-1
  423e44:	stp	xzr, x23, [x3, #8]
  423e48:	add	x27, x25, x27
  423e4c:	str	x24, [x3, #24]
  423e50:	stp	xzr, x6, [x3, #48]
  423e54:	ldrb	w6, [x2, #26]
  423e58:	and	w6, w6, #0xfffffff3
  423e5c:	strb	w6, [x2, #26]
  423e60:	str	x9, [x3, #64]
  423e64:	str	q0, [x3, #32]
  423e68:	str	x27, [x23]
  423e6c:	cbz	x24, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  423e70:	str	x27, [x24]
  423e74:	cbz	x27, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  423e78:	ldr	w2, [x28, #128]
  423e7c:	mov	x9, #0x0                   	// #0
  423e80:	cmp	w2, #0xf
  423e84:	b.eq	423f80 <_obstack_memory_used@@Base+0xb270>  // b.none
  423e88:	mov	w5, #0x40                  	// #64
  423e8c:	mov	x0, #0x8                   	// #8
  423e90:	add	w10, w2, #0x1
  423e94:	smaddl	x5, w2, w5, x0
  423e98:	sbfiz	x2, x2, #6, #32
  423e9c:	mov	x11, #0xa                   	// #10
  423ea0:	add	x0, x25, x2
  423ea4:	add	x6, x2, #0x20
  423ea8:	add	x6, x25, x6
  423eac:	str	w10, [x28, #128]
  423eb0:	bfxil	x9, x11, #0, #8
  423eb4:	mov	x10, #0xffffffffffffffff    	// #-1
  423eb8:	stp	xzr, x27, [x0, #8]
  423ebc:	add	x23, x25, x5
  423ec0:	add	x4, x4, #0x1
  423ec4:	str	xzr, [x0, #24]
  423ec8:	cmp	x20, x4
  423ecc:	stp	xzr, x9, [x0, #48]
  423ed0:	ldrb	w9, [x6, #26]
  423ed4:	and	w9, w9, #0xfffffff3
  423ed8:	strb	w9, [x6, #26]
  423edc:	str	x10, [x0, #64]
  423ee0:	str	q0, [x0, #32]
  423ee4:	str	x23, [x3, #8]
  423ee8:	b.lt	4240c4 <_obstack_memory_used@@Base+0xb3b4>  // b.tstop
  423eec:	ldr	x27, [x24]
  423ef0:	b	423ca8 <_obstack_memory_used@@Base+0xaf98>
  423ef4:	mov	x0, x2
  423ef8:	add	x6, x27, #0x10
  423efc:	mov	x25, x0
  423f00:	b	423d40 <_obstack_memory_used@@Base+0xb030>
  423f04:	str	xzr, [x9]
  423f08:	ldr	x1, [sp, #128]
  423f0c:	mov	w0, #0xc                   	// #12
  423f10:	str	w0, [x1]
  423f14:	ldr	x0, [sp, #112]
  423f18:	str	xzr, [sp, #112]
  423f1c:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  423f20:	ldp	x23, x24, [sp, #48]
  423f24:	ldp	x19, x20, [sp, #16]
  423f28:	ldp	x21, x22, [sp, #32]
  423f2c:	ldp	x25, x26, [sp, #64]
  423f30:	ldp	x27, x28, [sp, #80]
  423f34:	ldr	x0, [sp, #112]
  423f38:	ldp	x29, x30, [sp], #288
  423f3c:	ret
  423f40:	mov	x0, #0x3c8                 	// #968
  423f44:	str	x4, [sp, #96]
  423f48:	str	x6, [sp, #120]
  423f4c:	bl	402800 <malloc@plt>
  423f50:	mov	x25, x0
  423f54:	cbz	x0, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  423f58:	ldr	x0, [x28, #112]
  423f5c:	str	x0, [x25]
  423f60:	movi	v0.4s, #0x0
  423f64:	mov	w9, #0x1                   	// #1
  423f68:	mov	x27, #0x8                   	// #8
  423f6c:	mov	w0, #0x0                   	// #0
  423f70:	str	x25, [x28, #112]
  423f74:	ldr	x4, [sp, #96]
  423f78:	ldr	x6, [sp, #120]
  423f7c:	b	423e24 <_obstack_memory_used@@Base+0xb114>
  423f80:	mov	x0, #0x3c8                 	// #968
  423f84:	str	x4, [sp, #96]
  423f88:	str	x3, [sp, #120]
  423f8c:	str	x9, [sp, #144]
  423f90:	bl	402800 <malloc@plt>
  423f94:	cbz	x0, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  423f98:	str	x25, [x0]
  423f9c:	mov	w10, #0x1                   	// #1
  423fa0:	movi	v0.4s, #0x0
  423fa4:	mov	x25, x0
  423fa8:	mov	w2, #0x0                   	// #0
  423fac:	mov	x5, #0x8                   	// #8
  423fb0:	str	x0, [x28, #112]
  423fb4:	ldr	x4, [sp, #96]
  423fb8:	ldr	x3, [sp, #120]
  423fbc:	ldr	x9, [sp, #144]
  423fc0:	b	423e98 <_obstack_memory_used@@Base+0xb188>
  423fc4:	mov	x23, #0xffffffffffffffff    	// #-1
  423fc8:	mov	x20, #0x8030                	// #32816
  423fcc:	nop
  423fd0:	mov	x2, x22
  423fd4:	mov	x1, x26
  423fd8:	mov	x0, x19
  423fdc:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  423fe0:	ldr	x4, [x26, #72]
  423fe4:	ldrb	w1, [x19, #8]
  423fe8:	ldrb	w2, [x19]
  423fec:	add	x0, x4, w0, sxtw
  423ff0:	str	x0, [x26, #72]
  423ff4:	cmp	w1, #0x2
  423ff8:	b.eq	424934 <_obstack_memory_used@@Base+0xbc24>  // b.none
  423ffc:	cmp	w1, #0x18
  424000:	b.eq	424380 <_obstack_memory_used@@Base+0xb670>  // b.none
  424004:	cmp	w2, #0x2c
  424008:	b.eq	4243e4 <_obstack_memory_used@@Base+0xb6d4>  // b.none
  42400c:	cmp	w1, #0x1
  424010:	b.eq	42401c <_obstack_memory_used@@Base+0xb30c>  // b.none
  424014:	mov	x23, #0xfffffffffffffffe    	// #-2
  424018:	b	423fd0 <_obstack_memory_used@@Base+0xb2c0>
  42401c:	sub	w0, w2, #0x30
  424020:	and	w1, w0, #0xff
  424024:	cmp	w1, #0x9
  424028:	ccmn	x23, #0x2, #0x4, ls  // ls = plast
  42402c:	b.eq	424014 <_obstack_memory_used@@Base+0xb304>  // b.none
  424030:	add	x1, x23, x23, lsl #2
  424034:	and	x2, x2, #0xff
  424038:	cmn	x23, #0x1
  42403c:	b.eq	4243dc <_obstack_memory_used@@Base+0xb6cc>  // b.none
  424040:	add	x2, x2, x1, lsl #1
  424044:	cmp	x2, x20
  424048:	csel	x2, x2, x20, le
  42404c:	sub	x23, x2, #0x30
  424050:	b	423fd0 <_obstack_memory_used@@Base+0xb2c0>
  424054:	ldr	x5, [x24, #40]
  424058:	mov	x0, x24
  42405c:	nop
  424060:	mov	x2, x0
  424064:	ldr	x0, [x0, #8]
  424068:	cbnz	x0, 424060 <_obstack_memory_used@@Base+0xb350>
  42406c:	ldr	x0, [x2, #16]
  424070:	cbnz	x0, 424060 <_obstack_memory_used@@Base+0xb350>
  424074:	ldrb	w0, [x2, #48]
  424078:	cmp	w0, #0x11
  42407c:	b.eq	4240a8 <_obstack_memory_used@@Base+0xb398>  // b.none
  424080:	ldr	x4, [x2]
  424084:	cbz	x4, 423c1c <_obstack_memory_used@@Base+0xaf0c>
  424088:	ldr	x0, [x4, #16]
  42408c:	cmp	x0, #0x0
  424090:	ccmp	x2, x0, #0x4, ne  // ne = any
  424094:	mov	x2, x4
  424098:	b.ne	424060 <_obstack_memory_used@@Base+0xb350>  // b.any
  42409c:	ldrb	w0, [x2, #48]
  4240a0:	cmp	w0, #0x11
  4240a4:	b.ne	424080 <_obstack_memory_used@@Base+0xb370>  // b.any
  4240a8:	ldr	x0, [x2, #40]
  4240ac:	cmp	x5, x0
  4240b0:	b.ne	424080 <_obstack_memory_used@@Base+0xb370>  // b.any
  4240b4:	ldrb	w0, [x2, #50]
  4240b8:	orr	w0, w0, #0x8
  4240bc:	strb	w0, [x2, #50]
  4240c0:	b	424080 <_obstack_memory_used@@Base+0xb370>
  4240c4:	cbz	x21, 424378 <_obstack_memory_used@@Base+0xb668>
  4240c8:	ldr	w2, [x28, #128]
  4240cc:	mov	x20, #0x0                   	// #0
  4240d0:	cmp	w2, #0xf
  4240d4:	b.eq	424978 <_obstack_memory_used@@Base+0xbc68>  // b.none
  4240d8:	mov	w1, #0x40                  	// #64
  4240dc:	mov	x0, #0x8                   	// #8
  4240e0:	add	w6, w2, #0x1
  4240e4:	smaddl	x1, w2, w1, x0
  4240e8:	sbfiz	x2, x2, #6, #32
  4240ec:	mov	x0, #0x10                  	// #16
  4240f0:	add	x3, x25, x2
  4240f4:	add	x4, x2, #0x20
  4240f8:	add	x4, x25, x4
  4240fc:	str	w6, [x28, #128]
  424100:	bfxil	x20, x0, #0, #8
  424104:	mov	x6, #0xffffffffffffffff    	// #-1
  424108:	stp	xzr, x21, [x3, #8]
  42410c:	add	x1, x25, x1
  424110:	str	x23, [x3, #24]
  424114:	stp	xzr, x20, [x3, #48]
  424118:	ldrb	w0, [x4, #26]
  42411c:	str	x1, [sp, #112]
  424120:	and	w0, w0, #0xfffffff3
  424124:	strb	w0, [x4, #26]
  424128:	stp	xzr, xzr, [x3, #32]
  42412c:	str	x6, [x3, #64]
  424130:	str	x1, [x21]
  424134:	str	x1, [x23]
  424138:	ldrb	w1, [x19, #8]
  42413c:	ldr	x0, [sp, #136]
  424140:	cmp	w1, #0xb
  424144:	cset	w2, eq  // eq = none
  424148:	cmp	w1, #0x17
  42414c:	cset	w3, eq  // eq = none
  424150:	cbz	x0, 424160 <_obstack_memory_used@@Base+0xb450>
  424154:	cmp	w3, #0x0
  424158:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  42415c:	b.ne	4244e4 <_obstack_memory_used@@Base+0xb7d4>  // b.any
  424160:	subs	w0, w1, #0x12
  424164:	cset	w24, eq  // eq = none
  424168:	cmp	w3, #0x0
  42416c:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  424170:	and	w0, w0, #0xff
  424174:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  424178:	b.hi	424868 <_obstack_memory_used@@Base+0xbb58>  // b.pmore
  42417c:	ldr	x27, [x26, #72]
  424180:	b	423bc0 <_obstack_memory_used@@Base+0xaeb0>
  424184:	ldr	x0, [sp, #128]
  424188:	ldr	w0, [x0]
  42418c:	cbnz	w0, 4243b8 <_obstack_memory_used@@Base+0xb6a8>
  424190:	str	xzr, [sp, #112]
  424194:	b	424138 <_obstack_memory_used@@Base+0xb428>
  424198:	cmp	w2, #0x14
  42419c:	b.eq	424cd4 <_obstack_memory_used@@Base+0xbfc4>  // b.none
  4241a0:	b.ls	4241a8 <_obstack_memory_used@@Base+0xb498>  // b.plast
  4241a4:	tbnz	w3, #24, 4244f0 <_obstack_memory_used@@Base+0xb7e0>
  4241a8:	tbnz	w22, #5, 4244f0 <_obstack_memory_used@@Base+0xb7e0>
  4241ac:	tbnz	w22, #4, 4252cc <_obstack_memory_used@@Base+0xc5bc>
  4241b0:	cmp	w2, #0x9
  4241b4:	b.eq	4250a0 <_obstack_memory_used@@Base+0xc390>  // b.none
  4241b8:	mov	w0, #0x1                   	// #1
  4241bc:	strb	w0, [x19, #8]
  4241c0:	ldr	w0, [x28, #128]
  4241c4:	cmp	w0, #0xf
  4241c8:	b.eq	4251a4 <_obstack_memory_used@@Base+0xc494>  // b.none
  4241cc:	ldr	x21, [x28, #112]
  4241d0:	sbfiz	x1, x0, #6, #32
  4241d4:	movi	v0.4s, #0x0
  4241d8:	add	w2, w0, #0x1
  4241dc:	add	x4, x21, x1
  4241e0:	str	w2, [x28, #128]
  4241e4:	mov	w2, #0x40                  	// #64
  4241e8:	add	x5, x1, #0x20
  4241ec:	add	x5, x21, x5
  4241f0:	mov	x6, #0xffffffffffffffff    	// #-1
  4241f4:	str	xzr, [x4, #24]
  4241f8:	smaddl	x0, w0, w2, x21
  4241fc:	stur	q0, [x4, #8]
  424200:	adds	x0, x0, #0x8
  424204:	ldp	x2, x3, [x19]
  424208:	stp	x2, x3, [x4, #48]
  42420c:	str	x0, [sp, #112]
  424210:	ldrb	w0, [x5, #26]
  424214:	and	w0, w0, #0xfffffff3
  424218:	strb	w0, [x5, #26]
  42421c:	str	x6, [x4, #64]
  424220:	str	q0, [x4, #32]
  424224:	b.ne	423b6c <_obstack_memory_used@@Base+0xae5c>  // b.any
  424228:	ldr	x1, [sp, #128]
  42422c:	mov	w0, #0xc                   	// #12
  424230:	str	xzr, [sp, #112]
  424234:	str	w0, [x1]
  424238:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  42423c:	cmp	w2, #0x5
  424240:	b.eq	424c4c <_obstack_memory_used@@Base+0xbf3c>  // b.none
  424244:	b.ls	42427c <_obstack_memory_used@@Base+0xb56c>  // b.plast
  424248:	cmp	w2, #0x9
  42424c:	b.eq	4250a0 <_obstack_memory_used@@Base+0xc390>  // b.none
  424250:	b.ls	4249cc <_obstack_memory_used@@Base+0xbcbc>  // b.plast
  424254:	str	xzr, [sp, #112]
  424258:	cmp	w2, #0xa
  42425c:	b.ne	4241a8 <_obstack_memory_used@@Base+0xb498>  // b.any
  424260:	ldp	x19, x20, [sp, #16]
  424264:	ldp	x21, x22, [sp, #32]
  424268:	ldp	x25, x26, [sp, #64]
  42426c:	ldp	x27, x28, [sp, #80]
  424270:	ldr	x0, [sp, #112]
  424274:	ldp	x29, x30, [sp], #288
  424278:	ret
  42427c:	cmp	w2, #0x2
  424280:	b.eq	4243bc <_obstack_memory_used@@Base+0xb6ac>  // b.none
  424284:	cmp	w2, #0x4
  424288:	b.ne	424aa0 <_obstack_memory_used@@Base+0xbd90>  // b.any
  42428c:	ldr	x0, [x19]
  424290:	mov	w20, #0x1                   	// #1
  424294:	ldr	x1, [x28, #168]
  424298:	lsl	w0, w20, w0
  42429c:	sxtw	x0, w0
  4242a0:	tst	x0, x1
  4242a4:	b.eq	425268 <_obstack_memory_used@@Base+0xc558>  // b.none
  4242a8:	ldr	x2, [x28, #160]
  4242ac:	ldr	w1, [x28, #128]
  4242b0:	orr	x0, x2, x0
  4242b4:	str	x0, [x28, #160]
  4242b8:	cmp	w1, #0xf
  4242bc:	b.eq	425694 <_obstack_memory_used@@Base+0xc984>  // b.none
  4242c0:	ldr	x21, [x28, #112]
  4242c4:	sbfiz	x0, x1, #6, #32
  4242c8:	movi	v0.4s, #0x0
  4242cc:	add	w2, w1, #0x1
  4242d0:	add	x4, x21, x0
  4242d4:	str	w2, [x28, #128]
  4242d8:	mov	w2, #0x40                  	// #64
  4242dc:	add	x5, x0, #0x20
  4242e0:	add	x5, x21, x5
  4242e4:	mov	x6, #0xffffffffffffffff    	// #-1
  4242e8:	str	xzr, [x4, #24]
  4242ec:	smaddl	x1, w1, w2, x21
  4242f0:	stur	q0, [x4, #8]
  4242f4:	adds	x1, x1, #0x8
  4242f8:	ldp	x2, x3, [x19]
  4242fc:	stp	x2, x3, [x4, #48]
  424300:	str	x1, [sp, #112]
  424304:	ldrb	w1, [x5, #26]
  424308:	and	w1, w1, #0xfffffff3
  42430c:	strb	w1, [x5, #26]
  424310:	str	x6, [x4, #64]
  424314:	str	q0, [x4, #32]
  424318:	b.eq	424228 <_obstack_memory_used@@Base+0xb518>  // b.none
  42431c:	stp	x23, x24, [sp, #48]
  424320:	ldrb	w1, [x28, #176]
  424324:	ldr	x0, [x28, #152]
  424328:	orr	w1, w1, #0x2
  42432c:	strb	w1, [x28, #176]
  424330:	add	x0, x0, #0x1
  424334:	str	x0, [x28, #152]
  424338:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  42433c:	mov	x0, #0x3c8                 	// #968
  424340:	str	x6, [sp, #96]
  424344:	bl	402800 <malloc@plt>
  424348:	mov	x25, x0
  42434c:	cbz	x0, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  424350:	ldr	x0, [x28, #112]
  424354:	str	x0, [x25]
  424358:	mov	w2, #0x1                   	// #1
  42435c:	mov	x5, #0x8                   	// #8
  424360:	mov	w0, #0x0                   	// #0
  424364:	str	x25, [x28, #112]
  424368:	ldr	x6, [sp, #96]
  42436c:	b	423c4c <_obstack_memory_used@@Base+0xaf3c>
  424370:	mov	x23, x21
  424374:	nop
  424378:	str	x23, [sp, #112]
  42437c:	b	424138 <_obstack_memory_used@@Base+0xb428>
  424380:	cmn	x23, #0x1
  424384:	b.eq	4243a0 <_obstack_memory_used@@Base+0xb690>  // b.none
  424388:	cmn	x23, #0x2
  42438c:	mov	x20, x23
  424390:	b.ne	42446c <_obstack_memory_used@@Base+0xb75c>  // b.any
  424394:	ldr	x0, [sp, #152]
  424398:	cbnz	x0, 42493c <_obstack_memory_used@@Base+0xbc2c>
  42439c:	nop
  4243a0:	ldr	x1, [sp, #128]
  4243a4:	mov	w0, #0xa                   	// #10
  4243a8:	str	w0, [x1]
  4243ac:	ldr	x0, [sp, #112]
  4243b0:	cbnz	x0, 423f14 <_obstack_memory_used@@Base+0xb204>
  4243b4:	nop
  4243b8:	ldp	x23, x24, [sp, #48]
  4243bc:	str	xzr, [sp, #112]
  4243c0:	ldp	x19, x20, [sp, #16]
  4243c4:	ldp	x21, x22, [sp, #32]
  4243c8:	ldp	x25, x26, [sp, #64]
  4243cc:	ldp	x27, x28, [sp, #80]
  4243d0:	ldr	x0, [sp, #112]
  4243d4:	ldp	x29, x30, [sp], #288
  4243d8:	ret
  4243dc:	sxtw	x23, w0
  4243e0:	b	423fd0 <_obstack_memory_used@@Base+0xb2c0>
  4243e4:	cmn	x23, #0x1
  4243e8:	b.ne	424924 <_obstack_memory_used@@Base+0xbc14>  // b.any
  4243ec:	cmp	w1, #0x1
  4243f0:	b.ne	4243a0 <_obstack_memory_used@@Base+0xb690>  // b.any
  4243f4:	mov	x23, #0x0                   	// #0
  4243f8:	mov	x20, #0xffffffffffffffff    	// #-1
  4243fc:	mov	x21, #0x8030                	// #32816
  424400:	mov	x2, x22
  424404:	mov	x1, x26
  424408:	mov	x0, x19
  42440c:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  424410:	ldr	x4, [x26, #72]
  424414:	ldrb	w1, [x19, #8]
  424418:	ldrb	w2, [x19]
  42441c:	add	x0, x4, w0, sxtw
  424420:	str	x0, [x26, #72]
  424424:	cmp	w1, #0x2
  424428:	b.eq	425050 <_obstack_memory_used@@Base+0xc340>  // b.none
  42442c:	cmp	w2, #0x2c
  424430:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  424434:	b.eq	424448 <_obstack_memory_used@@Base+0xb738>  // b.none
  424438:	cmp	w1, #0x1
  42443c:	b.eq	424870 <_obstack_memory_used@@Base+0xbb60>  // b.none
  424440:	mov	x20, #0xfffffffffffffffe    	// #-2
  424444:	b	424400 <_obstack_memory_used@@Base+0xb6f0>
  424448:	cmn	x20, #0x2
  42444c:	b.eq	424394 <_obstack_memory_used@@Base+0xb684>  // b.none
  424450:	cmp	x23, x20
  424454:	ccmn	x20, #0x1, #0x4, gt
  424458:	b.ne	4243a0 <_obstack_memory_used@@Base+0xb690>  // b.any
  42445c:	cmp	w1, #0x18
  424460:	b.ne	4243a0 <_obstack_memory_used@@Base+0xb690>  // b.any
  424464:	cmn	x20, #0x1
  424468:	b.eq	4244c4 <_obstack_memory_used@@Base+0xb7b4>  // b.none
  42446c:	mov	x0, #0x7fff                	// #32767
  424470:	cmp	x20, x0
  424474:	cset	x0, gt
  424478:	cbnz	x0, 4244d4 <_obstack_memory_used@@Base+0xb7c4>
  42447c:	mov	x1, x26
  424480:	mov	x2, x22
  424484:	mov	x0, x19
  424488:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  42448c:	ldr	x1, [x26, #72]
  424490:	add	x0, x1, w0, sxtw
  424494:	str	x0, [x26, #72]
  424498:	ldr	x1, [sp, #112]
  42449c:	cbz	x1, 424184 <_obstack_memory_used@@Base+0xb474>
  4244a0:	orr	x0, x20, x23
  4244a4:	cbnz	x0, 42451c <_obstack_memory_used@@Base+0xb80c>
  4244a8:	mov	x0, x1
  4244ac:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  4244b0:	ldr	x0, [sp, #128]
  4244b4:	ldr	w0, [x0]
  4244b8:	cbnz	w0, 423f14 <_obstack_memory_used@@Base+0xb204>
  4244bc:	str	xzr, [sp, #112]
  4244c0:	b	424138 <_obstack_memory_used@@Base+0xb428>
  4244c4:	mov	x0, #0x7fff                	// #32767
  4244c8:	cmp	x23, x0
  4244cc:	cset	x0, gt
  4244d0:	cbz	x0, 42447c <_obstack_memory_used@@Base+0xb76c>
  4244d4:	ldr	x1, [sp, #128]
  4244d8:	mov	w0, #0xf                   	// #15
  4244dc:	str	w0, [x1]
  4244e0:	b	4243ac <_obstack_memory_used@@Base+0xb69c>
  4244e4:	ldr	x0, [sp, #112]
  4244e8:	cbnz	x0, 4248a8 <_obstack_memory_used@@Base+0xbb98>
  4244ec:	ldp	x23, x24, [sp, #48]
  4244f0:	mov	w0, #0xd                   	// #13
  4244f4:	ldr	x1, [sp, #128]
  4244f8:	str	xzr, [sp, #112]
  4244fc:	str	w0, [x1]
  424500:	ldp	x19, x20, [sp, #16]
  424504:	ldp	x21, x22, [sp, #32]
  424508:	ldp	x25, x26, [sp, #64]
  42450c:	ldp	x27, x28, [sp, #80]
  424510:	ldr	x0, [sp, #112]
  424514:	ldp	x29, x30, [sp], #288
  424518:	ret
  42451c:	cmp	x23, #0x0
  424520:	b.le	425bf4 <_obstack_memory_used@@Base+0xcee4>
  424524:	cmp	x23, #0x1
  424528:	b.eq	425c64 <_obstack_memory_used@@Base+0xcf54>  // b.none
  42452c:	movi	v0.4s, #0x0
  424530:	mov	x6, x1
  424534:	ldr	x21, [x1]
  424538:	mov	x24, x1
  42453c:	mov	x9, #0x2                   	// #2
  424540:	ldr	w2, [x28, #128]
  424544:	add	x25, sp, #0x100
  424548:	mov	x27, #0xffffffffffffffff    	// #-1
  42454c:	cmp	w2, #0xf
  424550:	b.eq	4245e4 <_obstack_memory_used@@Base+0xb8d4>  // b.none
  424554:	nop
  424558:	ldr	x0, [x28, #112]
  42455c:	sbfiz	x4, x2, #6, #32
  424560:	add	w5, w2, #0x1
  424564:	str	w5, [x28, #128]
  424568:	add	x11, x0, x4
  42456c:	add	x12, x4, #0x20
  424570:	mov	w4, #0x40                  	// #64
  424574:	add	x12, x0, x12
  424578:	sxtw	x13, w2
  42457c:	str	xzr, [x11, #24]
  424580:	smaddl	x2, w2, w4, x0
  424584:	stur	q0, [x11, #8]
  424588:	add	x2, x2, #0x8
  42458c:	ldp	x4, x5, [x24, #40]
  424590:	stp	x4, x5, [x11, #48]
  424594:	ldrb	w4, [x12, #26]
  424598:	and	w4, w4, #0xfffffff3
  42459c:	strb	w4, [x12, #26]
  4245a0:	str	x27, [x11, #64]
  4245a4:	str	q0, [x11, #32]
  4245a8:	str	x2, [x25]
  4245ac:	cbz	x2, 42471c <_obstack_memory_used@@Base+0xba0c>
  4245b0:	add	x0, x0, x13, lsl #6
  4245b4:	str	x21, [x0, #8]
  4245b8:	ldr	x21, [x25]
  4245bc:	ldrb	w0, [x21, #50]
  4245c0:	orr	w0, w0, #0x4
  4245c4:	strb	w0, [x21, #50]
  4245c8:	ldr	x0, [x24, #8]
  4245cc:	cbz	x0, 424668 <_obstack_memory_used@@Base+0xb958>
  4245d0:	add	x25, x21, #0x8
  4245d4:	mov	x24, x0
  4245d8:	ldr	w2, [x28, #128]
  4245dc:	cmp	w2, #0xf
  4245e0:	b.ne	424558 <_obstack_memory_used@@Base+0xb848>  // b.any
  4245e4:	mov	x0, #0x3c8                 	// #968
  4245e8:	str	x6, [sp, #96]
  4245ec:	str	x9, [sp, #120]
  4245f0:	bl	402800 <malloc@plt>
  4245f4:	movi	v0.4s, #0x0
  4245f8:	ldr	x6, [sp, #96]
  4245fc:	ldr	x9, [sp, #120]
  424600:	cbz	x0, 425a10 <_obstack_memory_used@@Base+0xcd00>
  424604:	ldr	x2, [x28, #112]
  424608:	str	x2, [x0]
  42460c:	mov	w1, #0x1                   	// #1
  424610:	str	x0, [x28, #112]
  424614:	str	w1, [x28, #128]
  424618:	mov	x13, #0x0                   	// #0
  42461c:	str	xzr, [x0, #24]
  424620:	add	x2, x0, #0x8
  424624:	stur	q0, [x0, #8]
  424628:	ldp	x4, x5, [x24, #40]
  42462c:	stp	x4, x5, [x0, #48]
  424630:	ldrb	w4, [x0, #58]
  424634:	str	q0, [x0, #32]
  424638:	and	w4, w4, #0xfffffff3
  42463c:	strb	w4, [x0, #58]
  424640:	str	x27, [x0, #64]
  424644:	add	x0, x0, x13, lsl #6
  424648:	str	x2, [x25]
  42464c:	str	x21, [x0, #8]
  424650:	ldr	x21, [x25]
  424654:	ldrb	w0, [x21, #50]
  424658:	orr	w0, w0, #0x4
  42465c:	strb	w0, [x21, #50]
  424660:	ldr	x0, [x24, #8]
  424664:	cbnz	x0, 4245d0 <_obstack_memory_used@@Base+0xb8c0>
  424668:	ldr	x2, [x24, #16]
  42466c:	cmp	x2, #0x0
  424670:	ccmp	x2, x0, #0x4, ne  // ne = any
  424674:	b.ne	424770 <_obstack_memory_used@@Base+0xba60>  // b.any
  424678:	ldr	x2, [x24]
  42467c:	mov	x0, x24
  424680:	ldr	x21, [x21]
  424684:	mov	x24, x2
  424688:	cbnz	x2, 424668 <_obstack_memory_used@@Base+0xb958>
  42468c:	ldr	x24, [sp, #256]
  424690:	mov	x25, #0x0                   	// #0
  424694:	ldr	w2, [x28, #128]
  424698:	cmp	w2, #0xf
  42469c:	b.eq	424730 <_obstack_memory_used@@Base+0xba20>  // b.none
  4246a0:	mov	w5, #0x40                  	// #64
  4246a4:	mov	x0, #0x8                   	// #8
  4246a8:	ldr	x1, [x28, #112]
  4246ac:	smaddl	x5, w2, w5, x0
  4246b0:	add	w11, w2, #0x1
  4246b4:	sbfiz	x2, x2, #6, #32
  4246b8:	mov	x10, #0x10                  	// #16
  4246bc:	add	x4, x1, x2
  4246c0:	add	x0, x2, #0x20
  4246c4:	add	x0, x1, x0
  4246c8:	str	w11, [x28, #128]
  4246cc:	bfxil	x25, x10, #0, #8
  4246d0:	add	x21, x1, x5
  4246d4:	stp	xzr, x6, [x4, #8]
  4246d8:	mov	x10, #0xffffffffffffffff    	// #-1
  4246dc:	str	x24, [x4, #24]
  4246e0:	stp	xzr, x25, [x4, #48]
  4246e4:	ldrb	w5, [x0, #26]
  4246e8:	and	w5, w5, #0xfffffff3
  4246ec:	strb	w5, [x0, #26]
  4246f0:	str	x10, [x4, #64]
  4246f4:	str	q0, [x4, #32]
  4246f8:	str	x21, [x6]
  4246fc:	cbz	x24, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  424700:	str	x21, [x24]
  424704:	cbz	x21, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  424708:	add	x9, x9, #0x1
  42470c:	cmp	x9, x23
  424710:	b.gt	424790 <_obstack_memory_used@@Base+0xba80>
  424714:	mov	x6, x21
  424718:	b	424540 <_obstack_memory_used@@Base+0xb830>
  42471c:	ldr	w2, [x28, #128]
  424720:	mov	x24, #0x0                   	// #0
  424724:	mov	x25, #0x0                   	// #0
  424728:	cmp	w2, #0xf
  42472c:	b.ne	4246a0 <_obstack_memory_used@@Base+0xb990>  // b.any
  424730:	mov	x0, #0x3c8                 	// #968
  424734:	str	x6, [sp, #96]
  424738:	str	x9, [sp, #120]
  42473c:	bl	402800 <malloc@plt>
  424740:	mov	x1, x0
  424744:	cbz	x0, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  424748:	ldr	x0, [x28, #112]
  42474c:	str	x0, [x1]
  424750:	movi	v0.4s, #0x0
  424754:	mov	x5, #0x8                   	// #8
  424758:	mov	w11, #0x1                   	// #1
  42475c:	mov	w2, #0x0                   	// #0
  424760:	str	x1, [x28, #112]
  424764:	ldr	x6, [sp, #96]
  424768:	ldr	x9, [sp, #120]
  42476c:	b	4246b4 <_obstack_memory_used@@Base+0xb9a4>
  424770:	mov	x0, x2
  424774:	add	x25, x21, #0x10
  424778:	mov	x24, x0
  42477c:	b	4245d8 <_obstack_memory_used@@Base+0xb8c8>
  424780:	mov	x24, x0
  424784:	mov	x21, x0
  424788:	mov	x23, #0x1                   	// #1
  42478c:	nop
  424790:	cmp	x23, x20
  424794:	b.eq	424370 <_obstack_memory_used@@Base+0xb660>  // b.none
  424798:	movi	v0.4s, #0x0
  42479c:	add	x9, sp, #0x100
  4247a0:	mov	x27, #0xffffffffffffffff    	// #-1
  4247a4:	ldr	x25, [x24]
  4247a8:	b	4247b4 <_obstack_memory_used@@Base+0xbaa4>
  4247ac:	mov	x24, x0
  4247b0:	add	x9, x25, #0x8
  4247b4:	ldr	w2, [x28, #128]
  4247b8:	cmp	w2, #0xf
  4247bc:	b.eq	4248c4 <_obstack_memory_used@@Base+0xbbb4>  // b.none
  4247c0:	ldr	x0, [x28, #112]
  4247c4:	sbfiz	x4, x2, #6, #32
  4247c8:	add	w5, w2, #0x1
  4247cc:	str	w5, [x28, #128]
  4247d0:	add	x10, x0, x4
  4247d4:	add	x11, x4, #0x20
  4247d8:	mov	w4, #0x40                  	// #64
  4247dc:	add	x11, x0, x11
  4247e0:	sxtw	x12, w2
  4247e4:	str	xzr, [x10, #24]
  4247e8:	smaddl	x2, w2, w4, x0
  4247ec:	stur	q0, [x10, #8]
  4247f0:	add	x2, x2, #0x8
  4247f4:	ldp	x4, x5, [x24, #40]
  4247f8:	stp	x4, x5, [x10, #48]
  4247fc:	ldrb	w4, [x11, #26]
  424800:	and	w4, w4, #0xfffffff3
  424804:	strb	w4, [x11, #26]
  424808:	str	x27, [x10, #64]
  42480c:	str	q0, [x10, #32]
  424810:	str	x2, [x9]
  424814:	cbz	x2, 423f08 <_obstack_memory_used@@Base+0xb1f8>
  424818:	add	x0, x0, x12, lsl #6
  42481c:	str	x25, [x0, #8]
  424820:	ldr	x25, [x9]
  424824:	ldrb	w0, [x25, #50]
  424828:	orr	w0, w0, #0x4
  42482c:	strb	w0, [x25, #50]
  424830:	ldr	x0, [x24, #8]
  424834:	cbnz	x0, 4247ac <_obstack_memory_used@@Base+0xba9c>
  424838:	ldr	x2, [x24, #16]
  42483c:	cmp	x2, #0x0
  424840:	ccmp	x2, x0, #0x4, ne  // ne = any
  424844:	b.ne	42496c <_obstack_memory_used@@Base+0xbc5c>  // b.any
  424848:	ldr	x2, [x24]
  42484c:	mov	x0, x24
  424850:	ldr	x25, [x25]
  424854:	mov	x24, x2
  424858:	cbnz	x2, 424838 <_obstack_memory_used@@Base+0xbb28>
  42485c:	ldr	x24, [sp, #256]
  424860:	cbnz	x24, 423c10 <_obstack_memory_used@@Base+0xaf00>
  424864:	b	423f08 <_obstack_memory_used@@Base+0xb1f8>
  424868:	ldp	x23, x24, [sp, #48]
  42486c:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  424870:	sub	w0, w2, #0x30
  424874:	and	w1, w0, #0xff
  424878:	cmp	w1, #0x9
  42487c:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
  424880:	b.eq	424440 <_obstack_memory_used@@Base+0xb730>  // b.none
  424884:	add	x1, x20, x20, lsl #2
  424888:	and	x2, x2, #0xff
  42488c:	cmn	x20, #0x1
  424890:	b.eq	425200 <_obstack_memory_used@@Base+0xc4f0>  // b.none
  424894:	add	x2, x2, x1, lsl #1
  424898:	cmp	x2, x21
  42489c:	csel	x2, x2, x21, le
  4248a0:	sub	x20, x2, #0x30
  4248a4:	b	424400 <_obstack_memory_used@@Base+0xb6f0>
  4248a8:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  4248ac:	str	xzr, [sp, #112]
  4248b0:	ldr	x1, [sp, #128]
  4248b4:	mov	w0, #0xd                   	// #13
  4248b8:	ldp	x23, x24, [sp, #48]
  4248bc:	str	w0, [x1]
  4248c0:	b	424500 <_obstack_memory_used@@Base+0xb7f0>
  4248c4:	mov	x0, #0x3c8                 	// #968
  4248c8:	str	x9, [sp, #96]
  4248cc:	bl	402800 <malloc@plt>
  4248d0:	movi	v0.4s, #0x0
  4248d4:	ldr	x9, [sp, #96]
  4248d8:	cbz	x0, 423f04 <_obstack_memory_used@@Base+0xb1f4>
  4248dc:	ldr	x2, [x28, #112]
  4248e0:	str	x2, [x0]
  4248e4:	mov	w1, #0x1                   	// #1
  4248e8:	str	x0, [x28, #112]
  4248ec:	str	w1, [x28, #128]
  4248f0:	add	x2, x0, #0x8
  4248f4:	str	xzr, [x0, #24]
  4248f8:	mov	x12, #0x0                   	// #0
  4248fc:	stur	q0, [x0, #8]
  424900:	ldp	x4, x5, [x24, #40]
  424904:	stp	x4, x5, [x0, #48]
  424908:	ldrb	w4, [x0, #58]
  42490c:	str	q0, [x0, #32]
  424910:	and	w4, w4, #0xfffffff3
  424914:	strb	w4, [x0, #58]
  424918:	str	x27, [x0, #64]
  42491c:	str	x2, [x9]
  424920:	b	424818 <_obstack_memory_used@@Base+0xbb08>
  424924:	cmn	x23, #0x2
  424928:	b.eq	424934 <_obstack_memory_used@@Base+0xbc24>  // b.none
  42492c:	cmp	w1, #0x1
  424930:	b.eq	4243f8 <_obstack_memory_used@@Base+0xb6e8>  // b.none
  424934:	ldr	x0, [sp, #152]
  424938:	cbz	x0, 42556c <_obstack_memory_used@@Base+0xc85c>
  42493c:	str	x27, [x26, #72]
  424940:	mov	w0, #0x1                   	// #1
  424944:	ldp	x2, x3, [sp, #96]
  424948:	stp	x2, x3, [x19]
  42494c:	strb	w0, [x19, #8]
  424950:	ldr	x0, [sp, #128]
  424954:	ldr	w0, [x0]
  424958:	cbz	w0, 424138 <_obstack_memory_used@@Base+0xb428>
  42495c:	ldr	x0, [sp, #112]
  424960:	cbnz	x0, 424138 <_obstack_memory_used@@Base+0xb428>
  424964:	ldp	x23, x24, [sp, #48]
  424968:	b	4243bc <_obstack_memory_used@@Base+0xb6ac>
  42496c:	mov	x24, x2
  424970:	add	x9, x25, #0x10
  424974:	b	4247b4 <_obstack_memory_used@@Base+0xbaa4>
  424978:	mov	x0, #0x3c8                 	// #968
  42497c:	bl	402800 <malloc@plt>
  424980:	cbz	x0, 425c70 <_obstack_memory_used@@Base+0xcf60>
  424984:	str	x25, [x0]
  424988:	mov	w6, #0x1                   	// #1
  42498c:	mov	x25, x0
  424990:	mov	w2, #0x0                   	// #0
  424994:	mov	x1, #0x8                   	// #8
  424998:	str	x0, [x28, #112]
  42499c:	b	4240e8 <_obstack_memory_used@@Base+0xb3d8>
  4249a0:	mov	w0, #0x5                   	// #5
  4249a4:	str	w0, [x5]
  4249a8:	str	xzr, [sp, #112]
  4249ac:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  4249b0:	cmp	w2, #0x23
  4249b4:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4249b8:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x112f0>
  4249bc:	cset	w4, eq  // eq = none
  4249c0:	add	x3, x3, #0x190
  4249c4:	add	x2, x2, #0xf80
  4249c8:	b	423b4c <_obstack_memory_used@@Base+0xae3c>
  4249cc:	stp	x23, x24, [sp, #48]
  4249d0:	orr	x2, x3, #0x800000
  4249d4:	mov	x1, x0
  4249d8:	ldr	x24, [x20, #48]
  4249dc:	mov	x0, x19
  4249e0:	str	x4, [sp, #112]
  4249e4:	mov	x23, #0x0                   	// #0
  4249e8:	add	x3, x24, #0x1
  4249ec:	str	x3, [x20, #48]
  4249f0:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  4249f4:	ldr	x2, [x26, #72]
  4249f8:	ldrb	w1, [x19, #8]
  4249fc:	add	x0, x2, w0, sxtw
  424a00:	str	x0, [x26, #72]
  424a04:	cmp	w1, #0x9
  424a08:	b.ne	4250b8 <_obstack_memory_used@@Base+0xc3a8>  // b.any
  424a0c:	cmp	x24, #0x8
  424a10:	b.ls	425118 <_obstack_memory_used@@Base+0xc408>  // b.plast
  424a14:	ldr	w0, [x28, #128]
  424a18:	mov	x20, #0x0                   	// #0
  424a1c:	cmp	w0, #0xf
  424a20:	b.eq	4255b4 <_obstack_memory_used@@Base+0xc8a4>  // b.none
  424a24:	mov	x1, #0x8                   	// #8
  424a28:	mov	w21, #0x40                  	// #64
  424a2c:	add	w5, w0, #0x1
  424a30:	smaddl	x21, w0, w21, x1
  424a34:	ldr	x1, [x28, #112]
  424a38:	sbfiz	x3, x0, #6, #32
  424a3c:	add	x2, x1, x3
  424a40:	add	x4, x3, #0x20
  424a44:	add	x4, x1, x4
  424a48:	mov	x6, #0x11                  	// #17
  424a4c:	str	w5, [x28, #128]
  424a50:	bfxil	x20, x6, #0, #8
  424a54:	stp	xzr, x23, [x2, #8]
  424a58:	add	x7, x1, x21
  424a5c:	mov	x6, #0xffffffffffffffff    	// #-1
  424a60:	str	xzr, [x2, #24]
  424a64:	sxtw	x0, w0
  424a68:	stp	xzr, x20, [x2, #48]
  424a6c:	ldrb	w5, [x4, #26]
  424a70:	str	x7, [sp, #112]
  424a74:	and	w5, w5, #0xfffffff3
  424a78:	strb	w5, [x4, #26]
  424a7c:	stp	xzr, xzr, [x2, #32]
  424a80:	str	x6, [x2, #64]
  424a84:	cbz	x23, 424a8c <_obstack_memory_used@@Base+0xbd7c>
  424a88:	str	x7, [x23]
  424a8c:	ldr	x2, [sp, #112]
  424a90:	cbz	x2, 424c44 <_obstack_memory_used@@Base+0xbf34>
  424a94:	add	x0, x1, x0, lsl #6
  424a98:	str	x24, [x0, #48]
  424a9c:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  424aa0:	ldr	w0, [x28, #128]
  424aa4:	stp	x23, x24, [sp, #48]
  424aa8:	cmp	w0, #0xf
  424aac:	b.eq	425d44 <_obstack_memory_used@@Base+0xd034>  // b.none
  424ab0:	ldr	x21, [x28, #112]
  424ab4:	sbfiz	x1, x0, #6, #32
  424ab8:	movi	v0.4s, #0x0
  424abc:	add	w2, w0, #0x1
  424ac0:	add	x4, x21, x1
  424ac4:	str	w2, [x28, #128]
  424ac8:	mov	w2, #0x40                  	// #64
  424acc:	add	x5, x1, #0x20
  424ad0:	add	x5, x21, x5
  424ad4:	mov	x6, #0xffffffffffffffff    	// #-1
  424ad8:	str	xzr, [x4, #24]
  424adc:	smaddl	x0, w0, w2, x21
  424ae0:	stur	q0, [x4, #8]
  424ae4:	adds	x0, x0, #0x8
  424ae8:	ldp	x2, x3, [x19]
  424aec:	stp	x2, x3, [x4, #48]
  424af0:	str	x0, [sp, #112]
  424af4:	ldrb	w0, [x5, #26]
  424af8:	and	w0, w0, #0xfffffff3
  424afc:	strb	w0, [x5, #26]
  424b00:	str	x6, [x4, #64]
  424b04:	str	q0, [x4, #32]
  424b08:	b.eq	424c44 <_obstack_memory_used@@Base+0xbf34>  // b.none
  424b0c:	ldr	w0, [x28, #180]
  424b10:	cmp	w0, #0x1
  424b14:	b.le	423b70 <_obstack_memory_used@@Base+0xae60>
  424b18:	mov	x20, #0xffffffffffffffff    	// #-1
  424b1c:	ldr	x24, [x26, #72]
  424b20:	b	424b30 <_obstack_memory_used@@Base+0xbe20>
  424b24:	str	x1, [x23]
  424b28:	cbz	x1, 424c44 <_obstack_memory_used@@Base+0xbf34>
  424b2c:	str	x1, [sp, #112]
  424b30:	ldr	x0, [x26, #104]
  424b34:	cmp	x0, x24
  424b38:	b.le	423b70 <_obstack_memory_used@@Base+0xae60>
  424b3c:	ldr	x0, [x26, #48]
  424b40:	cmp	x0, x24
  424b44:	b.eq	423b70 <_obstack_memory_used@@Base+0xae60>  // b.none
  424b48:	ldr	x0, [x26, #16]
  424b4c:	ldr	w0, [x0, x24, lsl #2]
  424b50:	cmn	w0, #0x1
  424b54:	b.ne	423b70 <_obstack_memory_used@@Base+0xae60>  // b.any
  424b58:	mov	x2, x22
  424b5c:	mov	x1, x26
  424b60:	mov	x0, x19
  424b64:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  424b68:	ldr	x2, [x26, #72]
  424b6c:	movi	v0.4s, #0x0
  424b70:	ldr	w1, [x28, #128]
  424b74:	add	x24, x2, w0, sxtw
  424b78:	str	x24, [x26, #72]
  424b7c:	cmp	w1, #0xf
  424b80:	b.eq	425ce8 <_obstack_memory_used@@Base+0xcfd8>  // b.none
  424b84:	mov	x0, #0x8                   	// #8
  424b88:	mov	w23, #0x40                  	// #64
  424b8c:	add	w2, w1, #0x1
  424b90:	smaddl	x23, w1, w23, x0
  424b94:	ldr	x0, [x28, #112]
  424b98:	sbfiz	x1, x1, #6, #32
  424b9c:	add	x4, x0, x1
  424ba0:	str	w2, [x28, #128]
  424ba4:	add	x5, x1, #0x20
  424ba8:	add	x23, x0, x23
  424bac:	add	x5, x0, x5
  424bb0:	str	xzr, [x4, #24]
  424bb4:	stur	q0, [x4, #8]
  424bb8:	ldp	x2, x3, [x19]
  424bbc:	stp	x2, x3, [x4, #48]
  424bc0:	ldrb	w0, [x5, #26]
  424bc4:	and	w0, w0, #0xfffffff3
  424bc8:	strb	w0, [x5, #26]
  424bcc:	str	x20, [x4, #64]
  424bd0:	str	q0, [x4, #32]
  424bd4:	ldr	w0, [x28, #128]
  424bd8:	mov	x25, #0x0                   	// #0
  424bdc:	cmp	w0, #0xf
  424be0:	b.eq	425d14 <_obstack_memory_used@@Base+0xd004>  // b.none
  424be4:	mov	w4, #0x40                  	// #64
  424be8:	mov	x2, #0x8                   	// #8
  424bec:	ldr	x1, [x28, #112]
  424bf0:	smaddl	x4, w0, w4, x2
  424bf4:	add	w6, w0, #0x1
  424bf8:	sbfiz	x0, x0, #6, #32
  424bfc:	mov	x5, #0x10                  	// #16
  424c00:	add	x2, x1, x0
  424c04:	add	x3, x0, #0x20
  424c08:	add	x3, x1, x3
  424c0c:	bfxil	x25, x5, #0, #8
  424c10:	str	w6, [x28, #128]
  424c14:	add	x1, x1, x4
  424c18:	ldr	x5, [sp, #112]
  424c1c:	stp	xzr, x5, [x2, #8]
  424c20:	str	x23, [x2, #24]
  424c24:	stp	xzr, x25, [x2, #48]
  424c28:	ldrb	w4, [x3, #26]
  424c2c:	and	w4, w4, #0xfffffff3
  424c30:	strb	w4, [x3, #26]
  424c34:	str	x20, [x2, #64]
  424c38:	str	q0, [x2, #32]
  424c3c:	str	x1, [x5]
  424c40:	cbnz	x23, 424b24 <_obstack_memory_used@@Base+0xbe14>
  424c44:	ldp	x23, x24, [sp, #48]
  424c48:	b	424228 <_obstack_memory_used@@Base+0xb518>
  424c4c:	ldr	w0, [x28, #128]
  424c50:	cmp	w0, #0xf
  424c54:	b.eq	425608 <_obstack_memory_used@@Base+0xc8f8>  // b.none
  424c58:	ldr	x21, [x28, #112]
  424c5c:	sbfiz	x1, x0, #6, #32
  424c60:	movi	v0.4s, #0x0
  424c64:	add	w2, w0, #0x1
  424c68:	add	x4, x21, x1
  424c6c:	str	w2, [x28, #128]
  424c70:	mov	w2, #0x40                  	// #64
  424c74:	add	x5, x1, #0x20
  424c78:	add	x5, x21, x5
  424c7c:	mov	x6, #0xffffffffffffffff    	// #-1
  424c80:	str	xzr, [x4, #24]
  424c84:	smaddl	x0, w0, w2, x21
  424c88:	stur	q0, [x4, #8]
  424c8c:	adds	x0, x0, #0x8
  424c90:	ldp	x2, x3, [x19]
  424c94:	stp	x2, x3, [x4, #48]
  424c98:	str	x0, [sp, #112]
  424c9c:	ldrb	w0, [x5, #26]
  424ca0:	and	w0, w0, #0xfffffff3
  424ca4:	strb	w0, [x5, #26]
  424ca8:	str	x6, [x4, #64]
  424cac:	str	q0, [x4, #32]
  424cb0:	b.eq	424228 <_obstack_memory_used@@Base+0xb518>  // b.none
  424cb4:	stp	x23, x24, [sp, #48]
  424cb8:	ldr	w0, [x28, #180]
  424cbc:	cmp	w0, #0x1
  424cc0:	b.le	423b70 <_obstack_memory_used@@Base+0xae60>
  424cc4:	ldrb	w0, [x28, #176]
  424cc8:	orr	w0, w0, #0x2
  424ccc:	strb	w0, [x28, #176]
  424cd0:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  424cd4:	mov	x1, #0x1                   	// #1
  424cd8:	mov	x0, #0x20                  	// #32
  424cdc:	stp	x23, x24, [sp, #48]
  424ce0:	str	xzr, [sp, #168]
  424ce4:	bl	402910 <calloc@plt>
  424ce8:	mov	x1, #0x1                   	// #1
  424cec:	mov	x20, x0
  424cf0:	mov	x0, #0x50                  	// #80
  424cf4:	bl	402910 <calloc@plt>
  424cf8:	cmp	x20, #0x0
  424cfc:	mov	x23, x0
  424d00:	cset	w0, eq  // eq = none
  424d04:	cmp	x23, #0x0
  424d08:	csinc	w0, w0, wzr, ne  // ne = any
  424d0c:	cbnz	w0, 4255e0 <_obstack_memory_used@@Base+0xc8d0>
  424d10:	mov	x1, x26
  424d14:	mov	x2, x22
  424d18:	mov	x0, x19
  424d1c:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  424d20:	ldrb	w1, [x19, #8]
  424d24:	mov	w27, w0
  424d28:	cmp	w1, #0x2
  424d2c:	b.eq	425584 <_obstack_memory_used@@Base+0xc874>  // b.none
  424d30:	str	wzr, [sp, #120]
  424d34:	cmp	w1, #0x19
  424d38:	b.eq	425214 <_obstack_memory_used@@Base+0xc504>  // b.none
  424d3c:	cmp	w1, #0x15
  424d40:	b.eq	425208 <_obstack_memory_used@@Base+0xc4f8>  // b.none
  424d44:	add	x24, sp, #0xe0
  424d48:	mov	w5, #0x1                   	// #1
  424d4c:	mov	w21, #0x3                   	// #3
  424d50:	str	xzr, [sp, #96]
  424d54:	str	xzr, [sp, #112]
  424d58:	mov	w3, w27
  424d5c:	mov	x4, x22
  424d60:	mov	x2, x19
  424d64:	mov	x1, x26
  424d68:	add	x0, sp, #0xb0
  424d6c:	str	w21, [sp, #176]
  424d70:	str	x24, [sp, #184]
  424d74:	bl	41c648 <_obstack_memory_used@@Base+0x3938>
  424d78:	cbnz	w0, 425318 <_obstack_memory_used@@Base+0xc608>
  424d7c:	mov	x1, x26
  424d80:	mov	x2, x22
  424d84:	mov	x0, x19
  424d88:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  424d8c:	ldr	w1, [sp, #176]
  424d90:	mov	w27, w0
  424d94:	sub	w0, w1, #0x2
  424d98:	tst	w0, #0xfffffffd
  424d9c:	b.eq	424db4 <_obstack_memory_used@@Base+0xc0a4>  // b.none
  424da0:	ldrb	w0, [x19, #8]
  424da4:	cmp	w0, #0x2
  424da8:	b.eq	4252bc <_obstack_memory_used@@Base+0xc5ac>  // b.none
  424dac:	cmp	w0, #0x16
  424db0:	b.eq	4253ac <_obstack_memory_used@@Base+0xc69c>  // b.none
  424db4:	cmp	w1, #0x2
  424db8:	b.eq	425068 <_obstack_memory_used@@Base+0xc358>  // b.none
  424dbc:	b.hi	424e04 <_obstack_memory_used@@Base+0xc0f4>  // b.pmore
  424dc0:	cbz	w1, 42529c <_obstack_memory_used@@Base+0xc58c>
  424dc4:	ldr	x1, [x23, #40]
  424dc8:	ldr	x2, [sp, #112]
  424dcc:	ldr	x0, [x23]
  424dd0:	cmp	x1, x2
  424dd4:	b.eq	425278 <_obstack_memory_used@@Base+0xc568>  // b.none
  424dd8:	add	x2, x1, #0x1
  424ddc:	str	x2, [x23, #40]
  424de0:	ldr	w2, [sp, #184]
  424de4:	str	w2, [x0, x1, lsl #2]
  424de8:	ldrb	w0, [x19, #8]
  424dec:	cmp	w0, #0x2
  424df0:	b.eq	4252bc <_obstack_memory_used@@Base+0xc5ac>  // b.none
  424df4:	cmp	w0, #0x15
  424df8:	b.eq	425774 <_obstack_memory_used@@Base+0xca64>  // b.none
  424dfc:	mov	w5, #0x0                   	// #0
  424e00:	b	424d58 <_obstack_memory_used@@Base+0xc048>
  424e04:	cmp	w1, #0x3
  424e08:	b.eq	425068 <_obstack_memory_used@@Base+0xc358>  // b.none
  424e0c:	ldr	x0, [x26, #120]
  424e10:	mov	x1, x20
  424e14:	ldr	x5, [sp, #184]
  424e18:	mov	x6, x22
  424e1c:	add	x4, sp, #0xa8
  424e20:	add	x3, x23, #0x48
  424e24:	add	x2, x23, #0x18
  424e28:	bl	41b3d0 <_obstack_memory_used@@Base+0x26c0>
  424e2c:	ldr	x1, [sp, #128]
  424e30:	str	w0, [x1]
  424e34:	cbz	w0, 424de8 <_obstack_memory_used@@Base+0xc0d8>
  424e38:	mov	x0, x20
  424e3c:	bl	402ae0 <free@plt>
  424e40:	ldr	x0, [x23]
  424e44:	bl	402ae0 <free@plt>
  424e48:	ldr	x0, [x23, #8]
  424e4c:	bl	402ae0 <free@plt>
  424e50:	ldr	x0, [x23, #16]
  424e54:	bl	402ae0 <free@plt>
  424e58:	ldr	x0, [x23, #24]
  424e5c:	bl	402ae0 <free@plt>
  424e60:	mov	x0, x23
  424e64:	bl	402ae0 <free@plt>
  424e68:	ldr	x0, [sp, #128]
  424e6c:	ldr	w0, [x0]
  424e70:	cbnz	w0, 4243b8 <_obstack_memory_used@@Base+0xb6a8>
  424e74:	str	xzr, [sp, #112]
  424e78:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  424e7c:	stp	x23, x24, [sp, #48]
  424e80:	mov	w0, #0x30f                 	// #783
  424e84:	ldr	w23, [x19]
  424e88:	tst	w23, w0
  424e8c:	b.eq	424ec0 <_obstack_memory_used@@Base+0xc1b0>  // b.none
  424e90:	ldrb	w0, [x28, #176]
  424e94:	tbnz	w0, #4, 424ec0 <_obstack_memory_used@@Base+0xc1b0>
  424e98:	orr	w0, w0, #0x10
  424e9c:	strb	w0, [x28, #176]
  424ea0:	mov	w1, w0
  424ea4:	tbnz	w0, #3, 425a8c <_obstack_memory_used@@Base+0xcd7c>
  424ea8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x132f0>
  424eac:	ldr	q0, [x0, #80]
  424eb0:	stur	q0, [x28, #184]
  424eb4:	tbz	w1, #2, 425a1c <_obstack_memory_used@@Base+0xcd0c>
  424eb8:	stp	xzr, xzr, [x28, #200]
  424ebc:	ldr	w23, [x19]
  424ec0:	sub	w0, w23, #0x100
  424ec4:	tst	w0, #0xfffffeff
  424ec8:	b.ne	425134 <_obstack_memory_used@@Base+0xc424>  // b.any
  424ecc:	cmp	w23, #0x100
  424ed0:	b.eq	425324 <_obstack_memory_used@@Base+0xc614>  // b.none
  424ed4:	mov	w0, #0x5                   	// #5
  424ed8:	str	w0, [x19]
  424edc:	ldr	w0, [x28, #128]
  424ee0:	cmp	w0, #0xf
  424ee4:	b.eq	425744 <_obstack_memory_used@@Base+0xca34>  // b.none
  424ee8:	mov	x23, #0x8                   	// #8
  424eec:	mov	w2, #0x40                  	// #64
  424ef0:	add	w3, w0, #0x1
  424ef4:	smaddl	x2, w0, w2, x23
  424ef8:	ldr	x23, [x28, #112]
  424efc:	sbfiz	x0, x0, #6, #32
  424f00:	add	x1, x23, x0
  424f04:	str	w3, [x28, #128]
  424f08:	movi	v0.4s, #0x0
  424f0c:	add	x4, x0, #0x20
  424f10:	add	x4, x23, x4
  424f14:	add	x23, x23, x2
  424f18:	str	xzr, [x1, #24]
  424f1c:	mov	x5, #0xffffffffffffffff    	// #-1
  424f20:	stur	q0, [x1, #8]
  424f24:	ldp	x2, x3, [x19]
  424f28:	stp	x2, x3, [x1, #48]
  424f2c:	ldrb	w2, [x4, #26]
  424f30:	and	w2, w2, #0xfffffff3
  424f34:	strb	w2, [x4, #26]
  424f38:	str	x5, [x1, #64]
  424f3c:	str	q0, [x1, #32]
  424f40:	mov	w0, #0xa                   	// #10
  424f44:	str	w0, [x19]
  424f48:	ldr	w0, [x28, #128]
  424f4c:	cmp	w0, #0xf
  424f50:	b.eq	425718 <_obstack_memory_used@@Base+0xca08>  // b.none
  424f54:	mov	x1, #0x8                   	// #8
  424f58:	mov	w20, #0x40                  	// #64
  424f5c:	add	w2, w0, #0x1
  424f60:	smaddl	x20, w0, w20, x1
  424f64:	ldr	x1, [x28, #112]
  424f68:	sbfiz	x0, x0, #6, #32
  424f6c:	add	x4, x1, x0
  424f70:	str	w2, [x28, #128]
  424f74:	movi	v0.4s, #0x0
  424f78:	add	x5, x0, #0x20
  424f7c:	add	x5, x1, x5
  424f80:	add	x20, x1, x20
  424f84:	str	xzr, [x4, #24]
  424f88:	mov	x6, #0xffffffffffffffff    	// #-1
  424f8c:	stur	q0, [x4, #8]
  424f90:	ldp	x2, x3, [x19]
  424f94:	stp	x2, x3, [x4, #48]
  424f98:	ldrb	w1, [x5, #26]
  424f9c:	and	w1, w1, #0xfffffff3
  424fa0:	strb	w1, [x5, #26]
  424fa4:	str	x6, [x4, #64]
  424fa8:	str	q0, [x4, #32]
  424fac:	ldr	w0, [x28, #128]
  424fb0:	mov	x24, #0x0                   	// #0
  424fb4:	cmp	w0, #0xf
  424fb8:	b.eq	4256ec <_obstack_memory_used@@Base+0xc9dc>  // b.none
  424fbc:	mov	x21, #0x8                   	// #8
  424fc0:	mov	w3, #0x40                  	// #64
  424fc4:	add	w5, w0, #0x1
  424fc8:	smaddl	x3, w0, w3, x21
  424fcc:	ldr	x21, [x28, #112]
  424fd0:	sbfiz	x0, x0, #6, #32
  424fd4:	add	x1, x21, x0
  424fd8:	add	x2, x0, #0x20
  424fdc:	add	x2, x21, x2
  424fe0:	mov	x4, #0xa                   	// #10
  424fe4:	str	w5, [x28, #128]
  424fe8:	bfxil	x24, x4, #0, #8
  424fec:	stp	xzr, x23, [x1, #8]
  424ff0:	add	x5, x21, x3
  424ff4:	mov	x4, #0xffffffffffffffff    	// #-1
  424ff8:	str	x20, [x1, #24]
  424ffc:	stp	xzr, x24, [x1, #48]
  425000:	ldrb	w3, [x2, #26]
  425004:	str	x5, [sp, #112]
  425008:	and	w3, w3, #0xfffffff3
  42500c:	strb	w3, [x2, #26]
  425010:	stp	xzr, xzr, [x1, #32]
  425014:	str	x4, [x1, #64]
  425018:	cbz	x23, 42539c <_obstack_memory_used@@Base+0xc68c>
  42501c:	str	x5, [x23]
  425020:	cbz	x20, 424c44 <_obstack_memory_used@@Base+0xbf34>
  425024:	str	x5, [x20]
  425028:	cbz	x5, 424c44 <_obstack_memory_used@@Base+0xbf34>
  42502c:	mov	x1, x26
  425030:	mov	x2, x22
  425034:	mov	x0, x19
  425038:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  42503c:	ldr	x1, [x26, #72]
  425040:	ldp	x23, x24, [sp, #48]
  425044:	add	x0, x1, w0, sxtw
  425048:	str	x0, [x26, #72]
  42504c:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  425050:	ldr	x0, [sp, #152]
  425054:	cbnz	x0, 42493c <_obstack_memory_used@@Base+0xbc2c>
  425058:	ldr	x1, [sp, #128]
  42505c:	mov	w0, #0x9                   	// #9
  425060:	str	w0, [x1]
  425064:	b	4243ac <_obstack_memory_used@@Base+0xb69c>
  425068:	ldr	x25, [sp, #184]
  42506c:	mov	x0, x25
  425070:	bl	402690 <strlen@plt>
  425074:	cmp	x0, #0x1
  425078:	b.ne	425684 <_obstack_memory_used@@Base+0xc974>  // b.any
  42507c:	ldr	x2, [sp, #128]
  425080:	ldrb	w1, [x25]
  425084:	str	wzr, [x2]
  425088:	ubfx	x2, x1, #6, #2
  42508c:	lsl	x0, x0, x1
  425090:	ldr	x1, [x20, x2, lsl #3]
  425094:	orr	x0, x1, x0
  425098:	str	x0, [x20, x2, lsl #3]
  42509c:	b	424de8 <_obstack_memory_used@@Base+0xc0d8>
  4250a0:	tbnz	w22, #17, 4241b8 <_obstack_memory_used@@Base+0xb4a8>
  4250a4:	ldr	x1, [sp, #128]
  4250a8:	mov	w0, #0x10                  	// #16
  4250ac:	str	xzr, [sp, #112]
  4250b0:	str	w0, [x1]
  4250b4:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  4250b8:	mov	x1, x20
  4250bc:	mov	x3, x22
  4250c0:	ldr	x4, [sp, #112]
  4250c4:	mov	x2, x19
  4250c8:	ldr	x20, [sp, #128]
  4250cc:	mov	x0, x26
  4250d0:	add	x4, x4, #0x1
  4250d4:	mov	x5, x20
  4250d8:	bl	426038 <_obstack_memory_used@@Base+0xd328>
  4250dc:	ldr	w1, [x20]
  4250e0:	mov	x23, x0
  4250e4:	cbnz	w1, 4243b8 <_obstack_memory_used@@Base+0xb6a8>
  4250e8:	ldrb	w0, [x19, #8]
  4250ec:	cmp	w0, #0x9
  4250f0:	b.eq	424a0c <_obstack_memory_used@@Base+0xbcfc>  // b.none
  4250f4:	cbz	x23, 425100 <_obstack_memory_used@@Base+0xc3f0>
  4250f8:	mov	x0, x23
  4250fc:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  425100:	ldr	x1, [sp, #128]
  425104:	mov	w0, #0x8                   	// #8
  425108:	str	xzr, [sp, #112]
  42510c:	ldp	x23, x24, [sp, #48]
  425110:	str	w0, [x1]
  425114:	b	4243c0 <_obstack_memory_used@@Base+0xb6b0>
  425118:	mov	w0, #0x1                   	// #1
  42511c:	ldr	x1, [x28, #168]
  425120:	lsl	w0, w0, w24
  425124:	sxtw	x0, w0
  425128:	orr	x0, x1, x0
  42512c:	str	x0, [x28, #168]
  425130:	b	424a14 <_obstack_memory_used@@Base+0xbd04>
  425134:	ldr	w0, [x28, #128]
  425138:	cmp	w0, #0xf
  42513c:	b.eq	42594c <_obstack_memory_used@@Base+0xcc3c>  // b.none
  425140:	ldr	x21, [x28, #112]
  425144:	sbfiz	x1, x0, #6, #32
  425148:	movi	v0.4s, #0x0
  42514c:	add	w3, w0, #0x1
  425150:	add	x2, x21, x1
  425154:	str	w3, [x28, #128]
  425158:	mov	w4, #0x40                  	// #64
  42515c:	add	x3, x1, #0x20
  425160:	add	x3, x21, x3
  425164:	mov	x6, #0xffffffffffffffff    	// #-1
  425168:	str	xzr, [x2, #24]
  42516c:	smaddl	x0, w0, w4, x21
  425170:	stur	q0, [x2, #8]
  425174:	adds	x0, x0, #0x8
  425178:	ldp	x4, x5, [x19]
  42517c:	stp	x4, x5, [x2, #48]
  425180:	str	x0, [sp, #112]
  425184:	ldrb	w0, [x3, #26]
  425188:	and	w0, w0, #0xfffffff3
  42518c:	strb	w0, [x3, #26]
  425190:	str	x6, [x2, #64]
  425194:	str	q0, [x2, #32]
  425198:	b.ne	42502c <_obstack_memory_used@@Base+0xc31c>  // b.any
  42519c:	ldp	x23, x24, [sp, #48]
  4251a0:	b	424228 <_obstack_memory_used@@Base+0xb518>
  4251a4:	mov	x0, #0x3c8                 	// #968
  4251a8:	bl	402800 <malloc@plt>
  4251ac:	cbz	x0, 424228 <_obstack_memory_used@@Base+0xb518>
  4251b0:	stp	x23, x24, [sp, #48]
  4251b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4251b8:	ldr	x1, [x28, #112]
  4251bc:	str	x1, [x0]
  4251c0:	mov	w1, #0x1                   	// #1
  4251c4:	str	w1, [x28, #128]
  4251c8:	str	x0, [x28, #112]
  4251cc:	add	x1, x0, #0x8
  4251d0:	ldp	x4, x5, [x19]
  4251d4:	stp	x4, x5, [x0, #48]
  4251d8:	movi	v0.4s, #0x0
  4251dc:	str	x1, [sp, #112]
  4251e0:	ldrb	w1, [x0, #58]
  4251e4:	str	xzr, [x0, #24]
  4251e8:	and	w1, w1, #0xfffffff3
  4251ec:	strb	w1, [x0, #58]
  4251f0:	stur	q0, [x0, #8]
  4251f4:	str	q0, [x0, #32]
  4251f8:	str	x2, [x0, #64]
  4251fc:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  425200:	sxtw	x20, w0
  425204:	b	424400 <_obstack_memory_used@@Base+0xb6f0>
  425208:	mov	w0, #0x1                   	// #1
  42520c:	strb	w0, [x19, #8]
  425210:	b	424d44 <_obstack_memory_used@@Base+0xc034>
  425214:	ldrb	w0, [x23, #32]
  425218:	orr	w0, w0, #0x1
  42521c:	strb	w0, [x23, #32]
  425220:	tbz	w22, #8, 425230 <_obstack_memory_used@@Base+0xc520>
  425224:	ldr	x0, [x20]
  425228:	orr	x0, x0, #0x400
  42522c:	str	x0, [x20]
  425230:	ldr	x3, [x26, #72]
  425234:	mov	x1, x26
  425238:	mov	x2, x22
  42523c:	mov	x0, x19
  425240:	add	x9, x3, w27, sxtw
  425244:	str	x9, [x26, #72]
  425248:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  42524c:	mov	w27, w0
  425250:	ldrb	w1, [x19, #8]
  425254:	cmp	w1, #0x2
  425258:	b.eq	425584 <_obstack_memory_used@@Base+0xc874>  // b.none
  42525c:	mov	w0, #0x1                   	// #1
  425260:	str	w0, [sp, #120]
  425264:	b	424d3c <_obstack_memory_used@@Base+0xc02c>
  425268:	mov	w0, #0x6                   	// #6
  42526c:	str	w0, [x5]
  425270:	str	xzr, [sp, #112]
  425274:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  425278:	lsl	x1, x2, #1
  42527c:	add	x1, x1, #0x1
  425280:	str	x1, [sp, #112]
  425284:	lsl	x1, x1, #2
  425288:	bl	402930 <realloc@plt>
  42528c:	cbz	x0, 425314 <_obstack_memory_used@@Base+0xc604>
  425290:	str	x0, [x23]
  425294:	ldr	x1, [x23, #40]
  425298:	b	424dd8 <_obstack_memory_used@@Base+0xc0c8>
  42529c:	ldrb	w1, [sp, #184]
  4252a0:	mov	x0, #0x1                   	// #1
  4252a4:	ubfx	x2, x1, #6, #2
  4252a8:	lsl	x1, x0, x1
  4252ac:	ldr	x0, [x20, x2, lsl #3]
  4252b0:	orr	x0, x0, x1
  4252b4:	str	x0, [x20, x2, lsl #3]
  4252b8:	b	424de8 <_obstack_memory_used@@Base+0xc0d8>
  4252bc:	ldr	x1, [sp, #128]
  4252c0:	mov	w0, #0x7                   	// #7
  4252c4:	str	w0, [x1]
  4252c8:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  4252cc:	mov	x2, x22
  4252d0:	mov	x1, x26
  4252d4:	mov	x0, x19
  4252d8:	str	x4, [sp, #112]
  4252dc:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  4252e0:	mov	w6, w0
  4252e4:	ldr	x7, [x26, #72]
  4252e8:	mov	x3, x22
  4252ec:	ldr	x4, [sp, #112]
  4252f0:	mov	x2, x19
  4252f4:	ldr	x5, [sp, #128]
  4252f8:	add	x6, x7, w6, sxtw
  4252fc:	str	x6, [x26, #72]
  425300:	mov	x1, x20
  425304:	mov	x0, x26
  425308:	bl	423ad8 <_obstack_memory_used@@Base+0xadc8>
  42530c:	str	x0, [sp, #112]
  425310:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  425314:	mov	w0, #0xc                   	// #12
  425318:	ldr	x1, [sp, #128]
  42531c:	str	w0, [x1]
  425320:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  425324:	mov	w0, #0x6                   	// #6
  425328:	str	w0, [x19]
  42532c:	ldr	w0, [x28, #128]
  425330:	cmp	w0, #0xf
  425334:	b.eq	4259d8 <_obstack_memory_used@@Base+0xccc8>  // b.none
  425338:	mov	x23, #0x8                   	// #8
  42533c:	mov	w2, #0x40                  	// #64
  425340:	add	w3, w0, #0x1
  425344:	smaddl	x2, w0, w2, x23
  425348:	ldr	x23, [x28, #112]
  42534c:	sbfiz	x0, x0, #6, #32
  425350:	add	x1, x23, x0
  425354:	str	w3, [x28, #128]
  425358:	movi	v0.4s, #0x0
  42535c:	add	x4, x0, #0x20
  425360:	add	x4, x23, x4
  425364:	add	x23, x23, x2
  425368:	str	xzr, [x1, #24]
  42536c:	mov	x5, #0xffffffffffffffff    	// #-1
  425370:	stur	q0, [x1, #8]
  425374:	ldp	x2, x3, [x19]
  425378:	stp	x2, x3, [x1, #48]
  42537c:	ldrb	w2, [x4, #26]
  425380:	and	w2, w2, #0xfffffff3
  425384:	strb	w2, [x4, #26]
  425388:	str	x5, [x1, #64]
  42538c:	str	q0, [x1, #32]
  425390:	mov	w0, #0x9                   	// #9
  425394:	str	w0, [x19]
  425398:	b	424f48 <_obstack_memory_used@@Base+0xc238>
  42539c:	cbz	x20, 424c44 <_obstack_memory_used@@Base+0xbf34>
  4253a0:	ldp	x23, x24, [sp, #48]
  4253a4:	str	x5, [x20]
  4253a8:	b	424228 <_obstack_memory_used@@Base+0xb518>
  4253ac:	ldr	x3, [x26, #72]
  4253b0:	mov	x1, x26
  4253b4:	mov	x2, x22
  4253b8:	add	x0, sp, #0xd0
  4253bc:	add	x3, x3, w27, sxtw
  4253c0:	str	x3, [x26, #72]
  4253c4:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  4253c8:	mov	w3, w0
  4253cc:	ldrb	w1, [sp, #216]
  4253d0:	cmp	w1, #0x2
  4253d4:	b.eq	4252bc <_obstack_memory_used@@Base+0xc5ac>  // b.none
  4253d8:	cmp	w1, #0x15
  4253dc:	b.eq	425594 <_obstack_memory_used@@Base+0xc884>  // b.none
  4253e0:	add	x6, sp, #0x100
  4253e4:	mov	x4, x22
  4253e8:	add	x2, sp, #0xd0
  4253ec:	mov	x1, x26
  4253f0:	add	x0, sp, #0xc0
  4253f4:	mov	w5, #0x1                   	// #1
  4253f8:	str	w21, [sp, #192]
  4253fc:	str	x6, [sp, #200]
  425400:	bl	41c648 <_obstack_memory_used@@Base+0x3938>
  425404:	cbnz	w0, 425318 <_obstack_memory_used@@Base+0xc608>
  425408:	mov	x2, x22
  42540c:	mov	x1, x26
  425410:	mov	x0, x19
  425414:	bl	418d38 <_obstack_memory_used@@Base+0x28>
  425418:	ldr	w1, [x28, #180]
  42541c:	mov	w27, w0
  425420:	ldr	w2, [sp, #176]
  425424:	cmp	w1, #0x2
  425428:	sub	w0, w2, #0x2
  42542c:	csel	x25, x23, xzr, ge  // ge = tcont
  425430:	tst	w0, #0xfffffffd
  425434:	b.eq	4259c8 <_obstack_memory_used@@Base+0xccb8>  // b.none
  425438:	ldr	w1, [sp, #192]
  42543c:	sub	w0, w1, #0x2
  425440:	tst	w0, #0xfffffffd
  425444:	b.eq	4259c8 <_obstack_memory_used@@Base+0xccb8>  // b.none
  425448:	cmp	w2, #0x3
  42544c:	cset	w0, eq  // eq = none
  425450:	str	w0, [sp, #136]
  425454:	b.eq	425c30 <_obstack_memory_used@@Base+0xcf20>  // b.none
  425458:	cmp	w1, #0x3
  42545c:	b.eq	425c00 <_obstack_memory_used@@Base+0xcef0>  // b.none
  425460:	cbnz	w2, 425550 <_obstack_memory_used@@Base+0xc840>
  425464:	ldrb	w3, [sp, #184]
  425468:	ldr	w0, [sp, #136]
  42546c:	cmp	w2, #0x0
  425470:	csinc	w0, w0, wzr, ne  // ne = any
  425474:	cbz	w1, 425a08 <_obstack_memory_used@@Base+0xccf8>
  425478:	cmp	w1, #0x3
  42547c:	b.ne	42555c <_obstack_memory_used@@Base+0xc84c>  // b.any
  425480:	ldr	x2, [sp, #200]
  425484:	ldrb	w4, [x2]
  425488:	cbz	w0, 4259a4 <_obstack_memory_used@@Base+0xcc94>
  42548c:	cbz	x25, 4259b0 <_obstack_memory_used@@Base+0xcca0>
  425490:	mov	w0, w3
  425494:	str	w4, [sp, #136]
  425498:	bl	4029d0 <btowc@plt>
  42549c:	mov	w3, w0
  4254a0:	ldr	w1, [sp, #192]
  4254a4:	ldr	w4, [sp, #136]
  4254a8:	cmp	w1, #0x0
  4254ac:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  4254b0:	b.ne	425564 <_obstack_memory_used@@Base+0xc854>  // b.any
  4254b4:	mov	w0, w4
  4254b8:	str	w3, [sp, #136]
  4254bc:	bl	4029d0 <btowc@plt>
  4254c0:	mov	w4, w0
  4254c4:	ldr	w3, [sp, #136]
  4254c8:	cmn	w3, #0x1
  4254cc:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  4254d0:	b.eq	425684 <_obstack_memory_used@@Base+0xc974>  // b.none
  4254d4:	tst	x22, #0x10000
  4254d8:	ccmp	w4, w3, #0x2, ne  // ne = any
  4254dc:	b.cc	4259c8 <_obstack_memory_used@@Base+0xccb8>  // b.lo, b.ul, b.last
  4254e0:	cbz	x25, 42550c <_obstack_memory_used@@Base+0xc7fc>
  4254e4:	ldr	x0, [x25, #64]
  4254e8:	ldr	x1, [sp, #96]
  4254ec:	ldr	x2, [x25, #8]
  4254f0:	cmp	x0, x1
  4254f4:	b.eq	425d9c <_obstack_memory_used@@Base+0xd08c>  // b.none
  4254f8:	ldr	x1, [x25, #16]
  4254fc:	str	w3, [x2, x0, lsl #2]
  425500:	add	x2, x0, #0x1
  425504:	str	x2, [x25, #64]
  425508:	str	w4, [x1, x0, lsl #2]
  42550c:	mov	x1, #0x0                   	// #0
  425510:	mov	x6, #0x1                   	// #1
  425514:	nop
  425518:	cmp	w1, w3
  42551c:	asr	x0, x1, #6
  425520:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
  425524:	lsl	x5, x6, x1
  425528:	add	x1, x1, #0x1
  42552c:	b.hi	42553c <_obstack_memory_used@@Base+0xc82c>  // b.pmore
  425530:	ldr	x2, [x20, x0, lsl #3]
  425534:	orr	x2, x2, x5
  425538:	str	x2, [x20, x0, lsl #3]
  42553c:	cmp	x1, #0x100
  425540:	b.ne	425518 <_obstack_memory_used@@Base+0xc808>  // b.any
  425544:	ldr	x0, [sp, #128]
  425548:	str	wzr, [x0]
  42554c:	b	424de8 <_obstack_memory_used@@Base+0xc0d8>
  425550:	ldrb	w0, [sp, #136]
  425554:	mov	w3, #0x0                   	// #0
  425558:	cbz	w1, 425a08 <_obstack_memory_used@@Base+0xccf8>
  42555c:	cbnz	w0, 425be8 <_obstack_memory_used@@Base+0xced8>
  425560:	ldr	w3, [sp, #184]
  425564:	ldr	w4, [sp, #200]
  425568:	b	4254c8 <_obstack_memory_used@@Base+0xc7b8>
  42556c:	cmp	w1, #0x2
  425570:	b.ne	4243a0 <_obstack_memory_used@@Base+0xb690>  // b.any
  425574:	b	425058 <_obstack_memory_used@@Base+0xc348>
  425578:	mov	x24, #0x0                   	// #0
  42557c:	str	xzr, [x6]
  425580:	b	423e00 <_obstack_memory_used@@Base+0xb0f0>
  425584:	ldr	x1, [sp, #128]
  425588:	mov	w0, #0x2                   	// #2
  42558c:	str	w0, [x1]
  425590:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  425594:	ldr	x3, [x26, #72]
  425598:	neg	w0, w27
  42559c:	mov	w2, #0x1                   	// #1
  4255a0:	ldr	w1, [sp, #176]
  4255a4:	add	x0, x3, w0, sxtw
  4255a8:	str	x0, [x26, #72]
  4255ac:	strb	w2, [x19, #8]
  4255b0:	b	424db4 <_obstack_memory_used@@Base+0xc0a4>
  4255b4:	mov	x0, #0x3c8                 	// #968
  4255b8:	bl	402800 <malloc@plt>
  4255bc:	mov	x1, x0
  4255c0:	cbz	x0, 424c44 <_obstack_memory_used@@Base+0xbf34>
  4255c4:	ldr	x0, [x28, #112]
  4255c8:	str	x0, [x1]
  4255cc:	mov	x21, #0x8                   	// #8
  4255d0:	mov	w5, #0x1                   	// #1
  4255d4:	mov	w0, #0x0                   	// #0
  4255d8:	str	x1, [x28, #112]
  4255dc:	b	424a38 <_obstack_memory_used@@Base+0xbd28>
  4255e0:	mov	x0, x20
  4255e4:	str	xzr, [sp, #112]
  4255e8:	bl	402ae0 <free@plt>
  4255ec:	mov	x0, x23
  4255f0:	bl	402ae0 <free@plt>
  4255f4:	ldr	x1, [sp, #128]
  4255f8:	mov	w0, #0xc                   	// #12
  4255fc:	ldp	x23, x24, [sp, #48]
  425600:	str	w0, [x1]
  425604:	b	423f24 <_obstack_memory_used@@Base+0xb214>
  425608:	mov	x0, #0x3c8                 	// #968
  42560c:	bl	402800 <malloc@plt>
  425610:	cbz	x0, 424228 <_obstack_memory_used@@Base+0xb518>
  425614:	stp	x23, x24, [sp, #48]
  425618:	ldr	x1, [x28, #112]
  42561c:	str	x1, [x0]
  425620:	mov	w1, #0x1                   	// #1
  425624:	str	w1, [x28, #128]
  425628:	str	x0, [x28, #112]
  42562c:	add	x1, x0, #0x8
  425630:	ldp	x2, x3, [x19]
  425634:	stp	x2, x3, [x0, #48]
  425638:	movi	v0.4s, #0x0
  42563c:	str	x1, [sp, #112]
  425640:	ldrb	w1, [x0, #58]
  425644:	mov	x2, #0xffffffffffffffff    	// #-1
  425648:	str	xzr, [x0, #24]
  42564c:	and	w1, w1, #0xfffffff3
  425650:	strb	w1, [x0, #58]
  425654:	stur	q0, [x0, #8]
  425658:	str	q0, [x0, #32]
  42565c:	str	x2, [x0, #64]
  425660:	b	424cb8 <_obstack_memory_used@@Base+0xbfa8>
  425664:	ldr	x0, [sp, #200]
  425668:	str	w2, [sp, #144]
  42566c:	str	w1, [sp, #152]
  425670:	bl	402690 <strlen@plt>
  425674:	cmp	x0, #0x1
  425678:	ldr	w2, [sp, #144]
  42567c:	ldr	w1, [sp, #152]
  425680:	b.ls	425c58 <_obstack_memory_used@@Base+0xcf48>  // b.plast
  425684:	ldr	x1, [sp, #128]
  425688:	mov	w0, #0x3                   	// #3
  42568c:	str	w0, [x1]
  425690:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  425694:	mov	x0, #0x3c8                 	// #968
  425698:	bl	402800 <malloc@plt>
  42569c:	cbz	x0, 424228 <_obstack_memory_used@@Base+0xb518>
  4256a0:	stp	x23, x24, [sp, #48]
  4256a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4256a8:	ldr	x1, [x28, #112]
  4256ac:	str	x1, [x0]
  4256b0:	str	w20, [x28, #128]
  4256b4:	add	x1, x0, #0x8
  4256b8:	movi	v0.4s, #0x0
  4256bc:	str	x0, [x28, #112]
  4256c0:	ldp	x4, x5, [x19]
  4256c4:	stp	x4, x5, [x0, #48]
  4256c8:	str	x1, [sp, #112]
  4256cc:	ldrb	w1, [x0, #58]
  4256d0:	stur	q0, [x0, #8]
  4256d4:	and	w1, w1, #0xfffffff3
  4256d8:	str	xzr, [x0, #24]
  4256dc:	str	q0, [x0, #32]
  4256e0:	strb	w1, [x0, #58]
  4256e4:	str	x2, [x0, #64]
  4256e8:	b	424320 <_obstack_memory_used@@Base+0xb610>
  4256ec:	mov	x0, #0x3c8                 	// #968
  4256f0:	bl	402800 <malloc@plt>
  4256f4:	mov	x21, x0
  4256f8:	cbz	x0, 424c44 <_obstack_memory_used@@Base+0xbf34>
  4256fc:	ldr	x0, [x28, #112]
  425700:	str	x0, [x21]
  425704:	mov	w5, #0x1                   	// #1
  425708:	mov	x3, #0x8                   	// #8
  42570c:	mov	w0, #0x0                   	// #0
  425710:	str	x21, [x28, #112]
  425714:	b	424fd0 <_obstack_memory_used@@Base+0xc2c0>
  425718:	mov	x0, #0x3c8                 	// #968
  42571c:	bl	402800 <malloc@plt>
  425720:	mov	x1, x0
  425724:	cbz	x0, 425dfc <_obstack_memory_used@@Base+0xd0ec>
  425728:	ldr	x0, [x28, #112]
  42572c:	str	x0, [x1]
  425730:	mov	x20, #0x8                   	// #8
  425734:	mov	w2, #0x1                   	// #1
  425738:	mov	w0, #0x0                   	// #0
  42573c:	str	x1, [x28, #112]
  425740:	b	424f68 <_obstack_memory_used@@Base+0xc258>
  425744:	mov	x0, #0x3c8                 	// #968
  425748:	bl	402800 <malloc@plt>
  42574c:	mov	x1, x0
  425750:	mov	x23, x0
  425754:	cbz	x0, 424f40 <_obstack_memory_used@@Base+0xc230>
  425758:	ldr	x0, [x28, #112]
  42575c:	str	x0, [x1]
  425760:	mov	x2, #0x8                   	// #8
  425764:	mov	w3, #0x1                   	// #1
  425768:	mov	w0, #0x0                   	// #0
  42576c:	str	x1, [x28, #112]
  425770:	b	424efc <_obstack_memory_used@@Base+0xc1ec>
  425774:	ldr	x0, [x26, #72]
  425778:	add	x9, x0, w27, sxtw
  42577c:	ldr	w0, [sp, #120]
  425780:	str	x9, [x26, #72]
  425784:	cbz	w0, 425798 <_obstack_memory_used@@Base+0xca88>
  425788:	ldp	q1, q0, [x20]
  42578c:	mvn	v1.16b, v1.16b
  425790:	mvn	v0.16b, v0.16b
  425794:	stp	q1, q0, [x20]
  425798:	ldr	w4, [x28, #180]
  42579c:	cmp	w4, #0x1
  4257a0:	b.le	4257d4 <_obstack_memory_used@@Base+0xcac4>
  4257a4:	ldr	x0, [x28, #120]
  4257a8:	add	x1, x20, #0xf
  4257ac:	sub	x1, x1, x0
  4257b0:	cmp	x1, #0x1e
  4257b4:	b.ls	425c84 <_obstack_memory_used@@Base+0xcf74>  // b.plast
  4257b8:	ldp	q1, q0, [x20]
  4257bc:	ldr	q2, [x0]
  4257c0:	and	v1.16b, v1.16b, v2.16b
  4257c4:	str	q1, [x20]
  4257c8:	ldr	q1, [x0, #16]
  4257cc:	and	v0.16b, v0.16b, v1.16b
  4257d0:	str	q0, [x20, #16]
  4257d4:	ldr	x0, [x23, #40]
  4257d8:	cbnz	x0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  4257dc:	ldr	x0, [x23, #48]
  4257e0:	cbnz	x0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  4257e4:	ldr	x0, [x23, #56]
  4257e8:	cbnz	x0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  4257ec:	ldr	x0, [x23, #64]
  4257f0:	cbnz	x0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  4257f4:	cmp	w4, #0x1
  4257f8:	b.le	42580c <_obstack_memory_used@@Base+0xcafc>
  4257fc:	ldr	x0, [x23, #72]
  425800:	cbnz	x0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  425804:	ldrb	w0, [x23, #32]
  425808:	tbnz	w0, #0, 4258a4 <_obstack_memory_used@@Base+0xcb94>
  42580c:	ldr	x0, [x23]
  425810:	bl	402ae0 <free@plt>
  425814:	ldr	x0, [x23, #8]
  425818:	bl	402ae0 <free@plt>
  42581c:	ldr	x0, [x23, #16]
  425820:	bl	402ae0 <free@plt>
  425824:	ldr	x0, [x23, #24]
  425828:	bl	402ae0 <free@plt>
  42582c:	mov	x0, x23
  425830:	bl	402ae0 <free@plt>
  425834:	ldr	w1, [x28, #128]
  425838:	cmp	w1, #0xf
  42583c:	b.eq	425cc4 <_obstack_memory_used@@Base+0xcfb4>  // b.none
  425840:	ldr	x21, [x28, #112]
  425844:	sbfiz	x0, x1, #6, #32
  425848:	movi	v0.4s, #0x0
  42584c:	add	x3, x0, #0x30
  425850:	add	x2, x21, x0
  425854:	add	w1, w1, #0x1
  425858:	str	w1, [x28, #128]
  42585c:	add	x5, x21, x3
  425860:	add	x1, x0, #0x20
  425864:	mov	w6, #0x3                   	// #3
  425868:	stur	q0, [x2, #8]
  42586c:	add	x1, x21, x1
  425870:	add	x0, x0, #0x8
  425874:	str	xzr, [x2, #24]
  425878:	add	x0, x21, x0
  42587c:	str	x20, [x21, x3]
  425880:	mov	x3, #0xffffffffffffffff    	// #-1
  425884:	strb	w6, [x5, #8]
  425888:	str	x0, [sp, #112]
  42588c:	ldrb	w0, [x1, #26]
  425890:	and	w0, w0, #0xfffffff3
  425894:	strb	w0, [x1, #26]
  425898:	str	x3, [x2, #64]
  42589c:	str	q0, [x2, #32]
  4258a0:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  4258a4:	ldrb	w0, [x28, #176]
  4258a8:	ldr	w25, [x28, #128]
  4258ac:	orr	w0, w0, #0x2
  4258b0:	strb	w0, [x28, #176]
  4258b4:	cmp	w25, #0xf
  4258b8:	b.eq	425b7c <_obstack_memory_used@@Base+0xce6c>  // b.none
  4258bc:	ldr	x27, [x28, #112]
  4258c0:	sbfiz	x0, x25, #6, #32
  4258c4:	movi	v0.4s, #0x0
  4258c8:	add	w1, w25, #0x1
  4258cc:	add	x2, x27, x0
  4258d0:	add	x3, x0, #0x30
  4258d4:	str	w1, [x28, #128]
  4258d8:	add	x6, x27, x3
  4258dc:	add	x1, x0, #0x20
  4258e0:	mov	w9, #0x6                   	// #6
  4258e4:	stur	q0, [x2, #8]
  4258e8:	add	x1, x27, x1
  4258ec:	add	x21, x0, #0x8
  4258f0:	str	xzr, [x2, #24]
  4258f4:	mov	x4, #0xffffffffffffffff    	// #-1
  4258f8:	str	x23, [x27, x3]
  4258fc:	sxtw	x25, w25
  425900:	strb	w9, [x6, #8]
  425904:	add	x21, x27, x21
  425908:	ldrb	w0, [x1, #26]
  42590c:	and	w0, w0, #0xfffffff3
  425910:	strb	w0, [x1, #26]
  425914:	str	x4, [x2, #64]
  425918:	str	q0, [x2, #32]
  42591c:	ldr	x0, [x20]
  425920:	cbnz	x0, 425a98 <_obstack_memory_used@@Base+0xcd88>
  425924:	ldr	x0, [x20, #8]
  425928:	cbnz	x0, 425a98 <_obstack_memory_used@@Base+0xcd88>
  42592c:	ldr	x0, [x20, #16]
  425930:	cbnz	x0, 425a98 <_obstack_memory_used@@Base+0xcd88>
  425934:	ldr	x0, [x20, #24]
  425938:	cbnz	x0, 425a98 <_obstack_memory_used@@Base+0xcd88>
  42593c:	mov	x0, x20
  425940:	str	x21, [sp, #112]
  425944:	bl	402ae0 <free@plt>
  425948:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  42594c:	mov	x0, #0x3c8                 	// #968
  425950:	bl	402800 <malloc@plt>
  425954:	cbz	x0, 424c44 <_obstack_memory_used@@Base+0xbf34>
  425958:	ldr	x1, [x28, #112]
  42595c:	str	x1, [x0]
  425960:	mov	w1, #0x1                   	// #1
  425964:	str	w1, [x28, #128]
  425968:	str	x0, [x28, #112]
  42596c:	add	x1, x0, #0x8
  425970:	ldp	x2, x3, [x19]
  425974:	stp	x2, x3, [x0, #48]
  425978:	movi	v0.4s, #0x0
  42597c:	str	x1, [sp, #112]
  425980:	ldrb	w1, [x0, #58]
  425984:	mov	x2, #0xffffffffffffffff    	// #-1
  425988:	str	xzr, [x0, #24]
  42598c:	and	w1, w1, #0xfffffff3
  425990:	strb	w1, [x0, #58]
  425994:	stur	q0, [x0, #8]
  425998:	str	q0, [x0, #32]
  42599c:	str	x2, [x0, #64]
  4259a0:	b	42502c <_obstack_memory_used@@Base+0xc31c>
  4259a4:	ldr	w3, [sp, #184]
  4259a8:	cbnz	x25, 4254b4 <_obstack_memory_used@@Base+0xc7a4>
  4259ac:	b	4254c8 <_obstack_memory_used@@Base+0xc7b8>
  4259b0:	cmp	w1, #0x0
  4259b4:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  4259b8:	b.ne	425564 <_obstack_memory_used@@Base+0xc854>  // b.any
  4259bc:	tst	x22, #0x10000
  4259c0:	ccmp	w3, w4, #0x0, ne  // ne = any
  4259c4:	b.ls	42550c <_obstack_memory_used@@Base+0xc7fc>  // b.plast
  4259c8:	ldr	x1, [sp, #128]
  4259cc:	mov	w0, #0xb                   	// #11
  4259d0:	str	w0, [x1]
  4259d4:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  4259d8:	mov	x0, #0x3c8                 	// #968
  4259dc:	bl	402800 <malloc@plt>
  4259e0:	mov	x1, x0
  4259e4:	mov	x23, x0
  4259e8:	cbz	x0, 425390 <_obstack_memory_used@@Base+0xc680>
  4259ec:	ldr	x0, [x28, #112]
  4259f0:	str	x0, [x1]
  4259f4:	mov	x2, #0x8                   	// #8
  4259f8:	mov	w3, #0x1                   	// #1
  4259fc:	mov	w0, #0x0                   	// #0
  425a00:	str	x1, [x28, #112]
  425a04:	b	42534c <_obstack_memory_used@@Base+0xc63c>
  425a08:	ldrb	w4, [sp, #200]
  425a0c:	b	425488 <_obstack_memory_used@@Base+0xc778>
  425a10:	mov	x24, #0x0                   	// #0
  425a14:	str	xzr, [x25]
  425a18:	b	424690 <_obstack_memory_used@@Base+0xb980>
  425a1c:	mov	w21, #0x80                  	// #128
  425a20:	mov	w20, #0x2                   	// #2
  425a24:	bl	402ab0 <__ctype_b_loc@plt>
  425a28:	ldr	x6, [x0]
  425a2c:	sxtw	x4, w20
  425a30:	add	x5, x28, #0xb8
  425a34:	mov	x9, #0x1                   	// #1
  425a38:	add	x6, x6, w21, sxtw #1
  425a3c:	mov	x0, #0x0                   	// #0
  425a40:	ldrh	w1, [x6, x0, lsl #1]
  425a44:	add	w2, w21, w0
  425a48:	cmp	w2, #0x5f
  425a4c:	lsl	x3, x9, x0
  425a50:	and	w1, w1, #0x8
  425a54:	add	x0, x0, #0x1
  425a58:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  425a5c:	b.eq	425a6c <_obstack_memory_used@@Base+0xcd5c>  // b.none
  425a60:	ldr	x1, [x5, x4, lsl #3]
  425a64:	orr	x1, x1, x3
  425a68:	str	x1, [x5, x4, lsl #3]
  425a6c:	cmp	x0, #0x40
  425a70:	b.ne	425a40 <_obstack_memory_used@@Base+0xcd30>  // b.any
  425a74:	add	x4, x4, #0x1
  425a78:	add	w21, w21, #0x40
  425a7c:	cmp	w4, #0x3
  425a80:	add	x6, x6, #0x80
  425a84:	b.le	425a3c <_obstack_memory_used@@Base+0xcd2c>
  425a88:	b	424ec0 <_obstack_memory_used@@Base+0xc1b0>
  425a8c:	mov	w21, #0x0                   	// #0
  425a90:	mov	w20, #0x0                   	// #0
  425a94:	b	425a24 <_obstack_memory_used@@Base+0xcd14>
  425a98:	ldr	w0, [x28, #128]
  425a9c:	cmp	w0, #0xf
  425aa0:	b.eq	425bc8 <_obstack_memory_used@@Base+0xceb8>  // b.none
  425aa4:	mov	x24, x27
  425aa8:	sbfiz	x1, x0, #6, #32
  425aac:	add	w2, w0, #0x1
  425ab0:	movi	v0.4s, #0x0
  425ab4:	add	x3, x24, x1
  425ab8:	add	x4, x1, #0x30
  425abc:	str	w2, [x28, #128]
  425ac0:	add	x6, x24, x4
  425ac4:	add	x2, x1, #0x20
  425ac8:	str	xzr, [x3, #24]
  425acc:	add	x2, x24, x2
  425ad0:	stur	q0, [x3, #8]
  425ad4:	mov	w10, #0x3                   	// #3
  425ad8:	mov	x5, #0xffffffffffffffff    	// #-1
  425adc:	str	x20, [x24, x4]
  425ae0:	add	x1, x1, #0x8
  425ae4:	strb	w10, [x6, #8]
  425ae8:	sxtw	x7, w0
  425aec:	add	x1, x24, x1
  425af0:	mov	x0, x24
  425af4:	ldrb	w4, [x2, #26]
  425af8:	mov	x6, #0x0                   	// #0
  425afc:	and	w4, w4, #0xfffffff3
  425b00:	strb	w4, [x2, #26]
  425b04:	str	x5, [x3, #64]
  425b08:	str	q0, [x3, #32]
  425b0c:	ldr	w2, [x28, #128]
  425b10:	cmp	w2, #0xf
  425b14:	b.eq	425b9c <_obstack_memory_used@@Base+0xce8c>  // b.none
  425b18:	sbfiz	x3, x2, #6, #32
  425b1c:	add	w4, w2, #0x1
  425b20:	add	x2, x0, x3
  425b24:	add	x5, x3, #0x20
  425b28:	add	x5, x0, x5
  425b2c:	mov	x9, #0xa                   	// #10
  425b30:	str	w4, [x28, #128]
  425b34:	bfxil	x6, x9, #0, #8
  425b38:	stp	xzr, x1, [x2, #8]
  425b3c:	add	x3, x3, #0x8
  425b40:	add	x3, x0, x3
  425b44:	str	x21, [x2, #24]
  425b48:	add	x24, x24, x7, lsl #6
  425b4c:	stp	xzr, x6, [x2, #48]
  425b50:	add	x25, x27, x25, lsl #6
  425b54:	mov	x1, #0xffffffffffffffff    	// #-1
  425b58:	ldrb	w0, [x5, #26]
  425b5c:	str	x3, [sp, #112]
  425b60:	and	w0, w0, #0xfffffff3
  425b64:	strb	w0, [x5, #26]
  425b68:	stp	xzr, xzr, [x2, #32]
  425b6c:	str	x1, [x2, #64]
  425b70:	str	x3, [x24, #8]
  425b74:	str	x3, [x25, #8]
  425b78:	b	423b70 <_obstack_memory_used@@Base+0xae60>
  425b7c:	mov	x0, #0x3c8                 	// #968
  425b80:	bl	402800 <malloc@plt>
  425b84:	cbz	x0, 425314 <_obstack_memory_used@@Base+0xc604>
  425b88:	ldr	x1, [x28, #112]
  425b8c:	str	x1, [x0]
  425b90:	mov	w25, #0x0                   	// #0
  425b94:	str	x0, [x28, #112]
  425b98:	b	4258bc <_obstack_memory_used@@Base+0xcbac>
  425b9c:	mov	x0, #0x3c8                 	// #968
  425ba0:	str	x6, [sp, #96]
  425ba4:	stp	x1, x7, [sp, #112]
  425ba8:	bl	402800 <malloc@plt>
  425bac:	cbz	x0, 425314 <_obstack_memory_used@@Base+0xc604>
  425bb0:	str	x24, [x0]
  425bb4:	mov	w2, #0x0                   	// #0
  425bb8:	str	x0, [x28, #112]
  425bbc:	ldr	x6, [sp, #96]
  425bc0:	ldp	x1, x7, [sp, #112]
  425bc4:	b	425b18 <_obstack_memory_used@@Base+0xce08>
  425bc8:	mov	x0, #0x3c8                 	// #968
  425bcc:	bl	402800 <malloc@plt>
  425bd0:	mov	x24, x0
  425bd4:	cbz	x0, 425314 <_obstack_memory_used@@Base+0xc604>
  425bd8:	str	x27, [x24]
  425bdc:	mov	w0, #0x0                   	// #0
  425be0:	str	x24, [x28, #112]
  425be4:	b	425aa8 <_obstack_memory_used@@Base+0xcd98>
  425be8:	cbz	x25, 425564 <_obstack_memory_used@@Base+0xc854>
  425bec:	mov	w4, #0x0                   	// #0
  425bf0:	b	425490 <_obstack_memory_used@@Base+0xc780>
  425bf4:	mov	x21, #0x0                   	// #0
  425bf8:	ldr	x24, [sp, #112]
  425bfc:	b	423c10 <_obstack_memory_used@@Base+0xaf00>
  425c00:	ldr	x0, [sp, #200]
  425c04:	str	w2, [sp, #144]
  425c08:	str	w1, [sp, #152]
  425c0c:	bl	402690 <strlen@plt>
  425c10:	cmp	x0, #0x1
  425c14:	b.hi	425684 <_obstack_memory_used@@Base+0xc974>  // b.pmore
  425c18:	ldr	w2, [sp, #144]
  425c1c:	ldr	w1, [sp, #152]
  425c20:	cbz	w2, 425464 <_obstack_memory_used@@Base+0xc754>
  425c24:	ldrb	w0, [sp, #136]
  425c28:	mov	w3, #0x0                   	// #0
  425c2c:	b	425480 <_obstack_memory_used@@Base+0xc770>
  425c30:	ldr	x0, [sp, #184]
  425c34:	str	w2, [sp, #144]
  425c38:	str	w1, [sp, #152]
  425c3c:	bl	402690 <strlen@plt>
  425c40:	cmp	x0, #0x1
  425c44:	ldr	w2, [sp, #144]
  425c48:	ldr	w1, [sp, #152]
  425c4c:	b.hi	425684 <_obstack_memory_used@@Base+0xc974>  // b.pmore
  425c50:	cmp	w1, #0x3
  425c54:	b.eq	425664 <_obstack_memory_used@@Base+0xc954>  // b.none
  425c58:	ldr	x0, [sp, #184]
  425c5c:	ldrb	w3, [x0]
  425c60:	b	425468 <_obstack_memory_used@@Base+0xc758>
  425c64:	ldr	x24, [sp, #112]
  425c68:	mov	x21, x24
  425c6c:	b	424790 <_obstack_memory_used@@Base+0xba80>
  425c70:	ldr	x0, [sp, #128]
  425c74:	ldr	w0, [x0]
  425c78:	cbnz	w0, 423f14 <_obstack_memory_used@@Base+0xb204>
  425c7c:	str	xzr, [sp, #112]
  425c80:	b	424138 <_obstack_memory_used@@Base+0xb428>
  425c84:	ldp	x1, x3, [x20]
  425c88:	ldr	x2, [x0]
  425c8c:	and	x1, x1, x2
  425c90:	str	x1, [x20]
  425c94:	ldr	x2, [x20, #16]
  425c98:	ldr	x5, [x0, #8]
  425c9c:	ldr	x1, [x20, #24]
  425ca0:	and	x3, x3, x5
  425ca4:	str	x3, [x20, #8]
  425ca8:	ldr	x3, [x0, #16]
  425cac:	and	x2, x2, x3
  425cb0:	str	x2, [x20, #16]
  425cb4:	ldr	x0, [x0, #24]
  425cb8:	and	x0, x1, x0
  425cbc:	str	x0, [x20, #24]
  425cc0:	b	4257d4 <_obstack_memory_used@@Base+0xcac4>
  425cc4:	mov	x0, #0x3c8                 	// #968
  425cc8:	bl	402800 <malloc@plt>
  425ccc:	cbz	x0, 425314 <_obstack_memory_used@@Base+0xc604>
  425cd0:	ldr	x1, [x28, #112]
  425cd4:	str	x1, [x0]
  425cd8:	mov	w1, #0x0                   	// #0
  425cdc:	str	x0, [x28, #112]
  425ce0:	str	wzr, [x28, #128]
  425ce4:	b	425840 <_obstack_memory_used@@Base+0xcb30>
  425ce8:	mov	x0, #0x3c8                 	// #968
  425cec:	bl	402800 <malloc@plt>
  425cf0:	movi	v0.4s, #0x0
  425cf4:	cbz	x0, 425e04 <_obstack_memory_used@@Base+0xd0f4>
  425cf8:	ldr	x1, [x28, #112]
  425cfc:	str	x1, [x0]
  425d00:	mov	w2, #0x1                   	// #1
  425d04:	mov	x23, #0x8                   	// #8
  425d08:	mov	w1, #0x0                   	// #0
  425d0c:	str	x0, [x28, #112]
  425d10:	b	424b98 <_obstack_memory_used@@Base+0xbe88>
  425d14:	mov	x0, #0x3c8                 	// #968
  425d18:	bl	402800 <malloc@plt>
  425d1c:	mov	x1, x0
  425d20:	cbz	x0, 424c44 <_obstack_memory_used@@Base+0xbf34>
  425d24:	ldr	x0, [x28, #112]
  425d28:	str	x0, [x1]
  425d2c:	movi	v0.4s, #0x0
  425d30:	mov	w6, #0x1                   	// #1
  425d34:	mov	x4, #0x8                   	// #8
  425d38:	mov	w0, #0x0                   	// #0
  425d3c:	str	x1, [x28, #112]
  425d40:	b	424bf8 <_obstack_memory_used@@Base+0xbee8>
  425d44:	mov	x0, #0x3c8                 	// #968
  425d48:	bl	402800 <malloc@plt>
  425d4c:	cbz	x0, 424c44 <_obstack_memory_used@@Base+0xbf34>
  425d50:	ldr	x1, [x28, #112]
  425d54:	str	x1, [x0]
  425d58:	mov	w1, #0x1                   	// #1
  425d5c:	str	w1, [x28, #128]
  425d60:	str	x0, [x28, #112]
  425d64:	add	x1, x0, #0x8
  425d68:	ldp	x4, x5, [x19]
  425d6c:	stp	x4, x5, [x0, #48]
  425d70:	mov	x2, #0xffffffffffffffff    	// #-1
  425d74:	movi	v0.4s, #0x0
  425d78:	str	x1, [sp, #112]
  425d7c:	ldrb	w1, [x0, #58]
  425d80:	str	xzr, [x0, #24]
  425d84:	and	w1, w1, #0xfffffff3
  425d88:	strb	w1, [x0, #58]
  425d8c:	stur	q0, [x0, #8]
  425d90:	str	q0, [x0, #32]
  425d94:	str	x2, [x0, #64]
  425d98:	b	424b0c <_obstack_memory_used@@Base+0xbdfc>
  425d9c:	lsl	x1, x1, #1
  425da0:	mov	x0, x2
  425da4:	add	x1, x1, #0x1
  425da8:	str	x1, [sp, #96]
  425dac:	str	w3, [sp, #144]
  425db0:	lsl	x1, x1, #2
  425db4:	str	x1, [sp, #136]
  425db8:	str	w4, [sp, #152]
  425dbc:	bl	402930 <realloc@plt>
  425dc0:	mov	x2, x0
  425dc4:	ldr	x0, [x25, #16]
  425dc8:	ldr	x1, [sp, #136]
  425dcc:	str	x2, [sp, #136]
  425dd0:	bl	402930 <realloc@plt>
  425dd4:	mov	x1, x0
  425dd8:	ldr	x2, [sp, #136]
  425ddc:	ldr	w3, [sp, #144]
  425de0:	cmp	x2, #0x0
  425de4:	ldr	w4, [sp, #152]
  425de8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  425dec:	b.eq	425e0c <_obstack_memory_used@@Base+0xd0fc>  // b.none
  425df0:	stp	x2, x1, [x25, #8]
  425df4:	ldr	x0, [x25, #64]
  425df8:	b	4254f8 <_obstack_memory_used@@Base+0xc7e8>
  425dfc:	mov	x20, #0x0                   	// #0
  425e00:	b	424fac <_obstack_memory_used@@Base+0xc29c>
  425e04:	mov	x23, #0x0                   	// #0
  425e08:	b	424bd4 <_obstack_memory_used@@Base+0xbec4>
  425e0c:	mov	x0, x2
  425e10:	str	x1, [sp, #112]
  425e14:	bl	402ae0 <free@plt>
  425e18:	ldr	x1, [sp, #112]
  425e1c:	mov	x0, x1
  425e20:	bl	402ae0 <free@plt>
  425e24:	ldr	x1, [sp, #128]
  425e28:	mov	w0, #0xc                   	// #12
  425e2c:	str	w0, [x1]
  425e30:	b	424e38 <_obstack_memory_used@@Base+0xc128>
  425e34:	nop
  425e38:	stp	x29, x30, [sp, #-112]!
  425e3c:	mov	x29, sp
  425e40:	stp	x27, x28, [sp, #80]
  425e44:	mov	x28, x5
  425e48:	stp	x19, x20, [sp, #16]
  425e4c:	mov	x19, x1
  425e50:	mov	x20, x4
  425e54:	stp	x21, x22, [sp, #32]
  425e58:	mov	x21, x0
  425e5c:	mov	x22, x3
  425e60:	stp	x23, x24, [sp, #48]
  425e64:	stp	x25, x26, [sp, #64]
  425e68:	mov	x25, x2
  425e6c:	ldr	x24, [x1]
  425e70:	bl	423ad8 <_obstack_memory_used@@Base+0xadc8>
  425e74:	ldr	w1, [x28]
  425e78:	cmp	w1, #0x0
  425e7c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  425e80:	b.eq	426030 <_obstack_memory_used@@Base+0xd320>  // b.none
  425e84:	mov	x27, x0
  425e88:	ldrb	w0, [x25, #8]
  425e8c:	and	w1, w0, #0xfffffff7
  425e90:	cmp	w1, #0x2
  425e94:	b.eq	425f8c <_obstack_memory_used@@Base+0xd27c>  // b.none
  425e98:	cmp	x20, #0x0
  425e9c:	mov	x26, #0x10                  	// #16
  425ea0:	cset	w23, eq  // eq = none
  425ea4:	b	425ec0 <_obstack_memory_used@@Base+0xd1b0>
  425ea8:	cmp	x27, #0x0
  425eac:	csel	x27, x27, x0, ne  // ne = any
  425eb0:	ldrb	w0, [x25, #8]
  425eb4:	and	w1, w0, #0xfffffff7
  425eb8:	cmp	w1, #0x2
  425ebc:	b.eq	425f8c <_obstack_memory_used@@Base+0xd27c>  // b.none
  425ec0:	cmp	w23, #0x0
  425ec4:	ccmp	w0, #0x9, #0x0, eq  // eq = none
  425ec8:	b.eq	425f8c <_obstack_memory_used@@Base+0xd27c>  // b.none
  425ecc:	mov	x2, x25
  425ed0:	mov	x1, x19
  425ed4:	mov	x5, x28
  425ed8:	mov	x4, x20
  425edc:	mov	x3, x22
  425ee0:	mov	x0, x21
  425ee4:	bl	423ad8 <_obstack_memory_used@@Base+0xadc8>
  425ee8:	mov	x1, x0
  425eec:	ldr	w2, [x28]
  425ef0:	cmp	w2, #0x0
  425ef4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  425ef8:	b.eq	425fe0 <_obstack_memory_used@@Base+0xd2d0>  // b.none
  425efc:	cmp	x27, #0x0
  425f00:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  425f04:	b.eq	425ea8 <_obstack_memory_used@@Base+0xd198>  // b.none
  425f08:	ldr	w3, [x24, #128]
  425f0c:	mov	x5, #0x0                   	// #0
  425f10:	cmp	w3, #0xf
  425f14:	b.eq	425fac <_obstack_memory_used@@Base+0xd29c>  // b.none
  425f18:	mov	w0, #0x40                  	// #64
  425f1c:	mov	x2, #0x8                   	// #8
  425f20:	add	w10, w3, #0x1
  425f24:	smaddl	x9, w3, w0, x2
  425f28:	ldr	x0, [x24, #112]
  425f2c:	sbfiz	x3, x3, #6, #32
  425f30:	add	x2, x0, x3
  425f34:	add	x4, x3, #0x20
  425f38:	add	x4, x0, x4
  425f3c:	str	w10, [x24, #128]
  425f40:	bfxil	x5, x26, #0, #8
  425f44:	mov	x3, #0xffffffffffffffff    	// #-1
  425f48:	stp	xzr, x27, [x2, #8]
  425f4c:	add	x0, x0, x9
  425f50:	str	x1, [x2, #24]
  425f54:	stp	xzr, x5, [x2, #48]
  425f58:	ldrb	w5, [x4, #26]
  425f5c:	and	w5, w5, #0xfffffff3
  425f60:	strb	w5, [x4, #26]
  425f64:	stp	xzr, xzr, [x2, #32]
  425f68:	str	x3, [x2, #64]
  425f6c:	str	x0, [x27]
  425f70:	str	x0, [x1]
  425f74:	cbz	x0, 425ff4 <_obstack_memory_used@@Base+0xd2e4>
  425f78:	mov	x27, x0
  425f7c:	ldrb	w0, [x25, #8]
  425f80:	and	w1, w0, #0xfffffff7
  425f84:	cmp	w1, #0x2
  425f88:	b.ne	425ec0 <_obstack_memory_used@@Base+0xd1b0>  // b.any
  425f8c:	mov	x0, x27
  425f90:	ldp	x19, x20, [sp, #16]
  425f94:	ldp	x21, x22, [sp, #32]
  425f98:	ldp	x23, x24, [sp, #48]
  425f9c:	ldp	x25, x26, [sp, #64]
  425fa0:	ldp	x27, x28, [sp, #80]
  425fa4:	ldp	x29, x30, [sp], #112
  425fa8:	ret
  425fac:	mov	x0, #0x3c8                 	// #968
  425fb0:	stp	x1, x5, [sp, #96]
  425fb4:	bl	402800 <malloc@plt>
  425fb8:	ldr	x1, [sp, #96]
  425fbc:	cbz	x0, 425ff4 <_obstack_memory_used@@Base+0xd2e4>
  425fc0:	ldr	x2, [x24, #112]
  425fc4:	str	x2, [x0]
  425fc8:	mov	w10, #0x1                   	// #1
  425fcc:	mov	w3, #0x0                   	// #0
  425fd0:	mov	x9, #0x8                   	// #8
  425fd4:	str	x0, [x24, #112]
  425fd8:	ldr	x5, [sp, #104]
  425fdc:	b	425f2c <_obstack_memory_used@@Base+0xd21c>
  425fe0:	cbz	x27, 426030 <_obstack_memory_used@@Base+0xd320>
  425fe4:	mov	x0, x27
  425fe8:	mov	x27, #0x0                   	// #0
  425fec:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  425ff0:	b	425f8c <_obstack_memory_used@@Base+0xd27c>
  425ff4:	mov	x0, x1
  425ff8:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  425ffc:	mov	x0, x27
  426000:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  426004:	mov	w0, #0xc                   	// #12
  426008:	str	w0, [x28]
  42600c:	mov	x27, #0x0                   	// #0
  426010:	mov	x0, x27
  426014:	ldp	x19, x20, [sp, #16]
  426018:	ldp	x21, x22, [sp, #32]
  42601c:	ldp	x23, x24, [sp, #48]
  426020:	ldp	x25, x26, [sp, #64]
  426024:	ldp	x27, x28, [sp, #80]
  426028:	ldp	x29, x30, [sp], #112
  42602c:	ret
  426030:	mov	x27, #0x0                   	// #0
  426034:	b	425f8c <_obstack_memory_used@@Base+0xd27c>
  426038:	stp	x29, x30, [sp, #-208]!
  42603c:	mov	x29, sp
  426040:	stp	x27, x28, [sp, #80]
  426044:	ldr	x27, [x1]
  426048:	stp	x19, x20, [sp, #16]
  42604c:	mov	x20, x5
  426050:	mov	x19, x3
  426054:	stp	x21, x22, [sp, #32]
  426058:	mov	x22, x1
  42605c:	ldr	x6, [x27, #168]
  426060:	mov	x21, x4
  426064:	stp	x25, x26, [sp, #64]
  426068:	mov	x25, x0
  42606c:	mov	x26, x2
  426070:	str	x6, [sp, #104]
  426074:	bl	425e38 <_obstack_memory_used@@Base+0xd128>
  426078:	ldr	w1, [x20]
  42607c:	cmp	w1, #0x0
  426080:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  426084:	b.eq	4268f8 <_obstack_memory_used@@Base+0xdbe8>  // b.none
  426088:	mov	x28, x0
  42608c:	mov	x0, #0x8400                	// #33792
  426090:	and	x0, x19, x0
  426094:	str	x0, [sp, #152]
  426098:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  42609c:	add	x0, x0, #0xd20
  4260a0:	str	x0, [sp, #144]
  4260a4:	and	x0, x19, #0x2000
  4260a8:	str	x0, [sp, #120]
  4260ac:	and	x0, x19, #0x8
  4260b0:	str	x0, [sp, #168]
  4260b4:	and	x0, x19, #0x800
  4260b8:	str	x0, [sp, #176]
  4260bc:	and	x0, x19, #0x80000
  4260c0:	mov	x1, #0x1200                	// #4608
  4260c4:	and	x1, x19, x1
  4260c8:	str	x0, [sp, #160]
  4260cc:	and	x0, x19, #0x4000
  4260d0:	stp	x23, x24, [sp, #48]
  4260d4:	str	x1, [sp, #136]
  4260d8:	mov	x1, #0x402                 	// #1026
  4260dc:	and	x1, x19, x1
  4260e0:	str	x1, [sp, #128]
  4260e4:	str	x0, [sp, #184]
  4260e8:	ldrb	w0, [x26, #8]
  4260ec:	cmp	w0, #0xa
  4260f0:	b.ne	426298 <_obstack_memory_used@@Base+0xd588>  // b.any
  4260f4:	nop
  4260f8:	ldr	x0, [x25, #72]
  4260fc:	ldr	x1, [x25, #104]
  426100:	cmp	x1, x0
  426104:	b.le	4263b4 <_obstack_memory_used@@Base+0xd6a4>
  426108:	ldr	x4, [x25, #8]
  42610c:	add	x24, x0, #0x1
  426110:	ldrb	w1, [x26, #10]
  426114:	ldr	w3, [x25, #144]
  426118:	ldrb	w23, [x4, x0]
  42611c:	and	w1, w1, #0xffffff9f
  426120:	strb	w23, [x26]
  426124:	cmp	w3, #0x1
  426128:	strb	w1, [x26, #10]
  42612c:	b.le	426408 <_obstack_memory_used@@Base+0xd6f8>
  426130:	ldr	x1, [x25, #48]
  426134:	cmp	x0, x1
  426138:	b.eq	42614c <_obstack_memory_used@@Base+0xd43c>  // b.none
  42613c:	ldr	x1, [x25, #16]
  426140:	ldr	w1, [x1, x0, lsl #2]
  426144:	cmn	w1, #0x1
  426148:	b.eq	42652c <_obstack_memory_used@@Base+0xd81c>  // b.none
  42614c:	cmp	w23, #0x5c
  426150:	b.eq	426468 <_obstack_memory_used@@Base+0xd758>  // b.none
  426154:	ldr	x1, [x25, #16]
  426158:	mov	w3, #0x1                   	// #1
  42615c:	strb	w3, [x26, #8]
  426160:	ldr	w1, [x1, x0, lsl #2]
  426164:	str	w1, [sp, #112]
  426168:	mov	w0, w1
  42616c:	bl	402bf0 <iswalnum@plt>
  426170:	ldr	w1, [sp, #112]
  426174:	cmp	w1, #0x5f
  426178:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42617c:	ldrb	w0, [x26, #10]
  426180:	cset	w1, ne  // ne = any
  426184:	cmp	w23, #0x2e
  426188:	bfi	w0, w1, #6, #1
  42618c:	strb	w0, [x26, #10]
  426190:	b.eq	426458 <_obstack_memory_used@@Base+0xd748>  // b.none
  426194:	b.hi	426330 <_obstack_memory_used@@Base+0xd620>  // b.pmore
  426198:	cmp	w23, #0x29
  42619c:	b.eq	426624 <_obstack_memory_used@@Base+0xd914>  // b.none
  4261a0:	b.hi	426308 <_obstack_memory_used@@Base+0xd5f8>  // b.pmore
  4261a4:	cmp	w23, #0x24
  4261a8:	b.eq	4265d8 <_obstack_memory_used@@Base+0xd8c8>  // b.none
  4261ac:	cmp	w23, #0x28
  4261b0:	b.ne	4262e8 <_obstack_memory_used@@Base+0xd5d8>  // b.any
  4261b4:	ldr	x0, [sp, #120]
  4261b8:	cbnz	x0, 426588 <_obstack_memory_used@@Base+0xd878>
  4261bc:	nop
  4261c0:	str	x24, [x25, #72]
  4261c4:	ldr	x0, [sp, #104]
  4261c8:	mov	x4, x21
  4261cc:	ldr	x23, [x27, #168]
  4261d0:	str	x0, [x27, #168]
  4261d4:	mov	x1, x22
  4261d8:	mov	x5, x20
  4261dc:	mov	x3, x19
  4261e0:	mov	x2, x26
  4261e4:	mov	x0, x25
  4261e8:	bl	425e38 <_obstack_memory_used@@Base+0xd128>
  4261ec:	ldr	w1, [x20]
  4261f0:	mov	x4, x0
  4261f4:	cmp	w1, #0x0
  4261f8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  4261fc:	b.eq	4268dc <_obstack_memory_used@@Base+0xdbcc>  // b.none
  426200:	ldr	x0, [x27, #168]
  426204:	orr	x23, x0, x23
  426208:	str	x23, [x27, #168]
  42620c:	ldr	w1, [x27, #128]
  426210:	mov	x23, #0x0                   	// #0
  426214:	cmp	w1, #0xf
  426218:	b.eq	4263d4 <_obstack_memory_used@@Base+0xd6c4>  // b.none
  42621c:	mov	w3, #0x40                  	// #64
  426220:	mov	x0, #0x8                   	// #8
  426224:	add	w11, w1, #0x1
  426228:	smaddl	x0, w1, w3, x0
  42622c:	ldr	x3, [x27, #112]
  426230:	sbfiz	x1, x1, #6, #32
  426234:	add	x2, x3, x1
  426238:	add	x5, x1, #0x20
  42623c:	add	x5, x3, x5
  426240:	mov	x10, #0xa                   	// #10
  426244:	str	w11, [x27, #128]
  426248:	bfxil	x23, x10, #0, #8
  42624c:	stp	xzr, x28, [x2, #8]
  426250:	add	x3, x3, x0
  426254:	mov	x10, #0xffffffffffffffff    	// #-1
  426258:	str	x4, [x2, #24]
  42625c:	stp	xzr, x23, [x2, #48]
  426260:	ldrb	w0, [x5, #26]
  426264:	and	w0, w0, #0xfffffff3
  426268:	strb	w0, [x5, #26]
  42626c:	stp	xzr, xzr, [x2, #32]
  426270:	str	x10, [x2, #64]
  426274:	cbz	x28, 42627c <_obstack_memory_used@@Base+0xd56c>
  426278:	str	x3, [x28]
  42627c:	cbz	x4, 4262b8 <_obstack_memory_used@@Base+0xd5a8>
  426280:	str	x3, [x4]
  426284:	cbz	x3, 4262bc <_obstack_memory_used@@Base+0xd5ac>
  426288:	ldrb	w0, [x26, #8]
  42628c:	mov	x28, x3
  426290:	cmp	w0, #0xa
  426294:	b.eq	4260f8 <_obstack_memory_used@@Base+0xd3e8>  // b.none
  426298:	mov	x0, x28
  42629c:	ldp	x19, x20, [sp, #16]
  4262a0:	ldp	x21, x22, [sp, #32]
  4262a4:	ldp	x23, x24, [sp, #48]
  4262a8:	ldp	x25, x26, [sp, #64]
  4262ac:	ldp	x27, x28, [sp, #80]
  4262b0:	ldp	x29, x30, [sp], #208
  4262b4:	ret
  4262b8:	cbnz	x3, 426288 <_obstack_memory_used@@Base+0xd578>
  4262bc:	mov	w0, #0xc                   	// #12
  4262c0:	mov	x28, #0x0                   	// #0
  4262c4:	ldp	x23, x24, [sp, #48]
  4262c8:	str	w0, [x20]
  4262cc:	mov	x0, x28
  4262d0:	ldp	x19, x20, [sp, #16]
  4262d4:	ldp	x21, x22, [sp, #32]
  4262d8:	ldp	x25, x26, [sp, #64]
  4262dc:	ldp	x27, x28, [sp, #80]
  4262e0:	ldp	x29, x30, [sp], #208
  4262e4:	ret
  4262e8:	cmp	w23, #0xa
  4262ec:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  4262f0:	ldr	x0, [sp, #176]
  4262f4:	cbz	x0, 4261c0 <_obstack_memory_used@@Base+0xd4b0>
  4262f8:	strb	w23, [x26, #8]
  4262fc:	mov	x4, #0x0                   	// #0
  426300:	str	x24, [x25, #72]
  426304:	b	42620c <_obstack_memory_used@@Base+0xd4fc>
  426308:	cmp	w23, #0x2a
  42630c:	b.eq	426598 <_obstack_memory_used@@Base+0xd888>  // b.none
  426310:	cmp	w23, #0x2b
  426314:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  426318:	ldr	x0, [sp, #128]
  42631c:	cbnz	x0, 4261c0 <_obstack_memory_used@@Base+0xd4b0>
  426320:	mov	w0, #0x12                  	// #18
  426324:	strb	w0, [x26, #8]
  426328:	str	x24, [x25, #72]
  42632c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426330:	cmp	w23, #0x7b
  426334:	b.eq	4265a8 <_obstack_memory_used@@Base+0xd898>  // b.none
  426338:	b.hi	426364 <_obstack_memory_used@@Base+0xd654>  // b.pmore
  42633c:	cmp	w23, #0x5b
  426340:	b.eq	4265c8 <_obstack_memory_used@@Base+0xd8b8>  // b.none
  426344:	cmp	w23, #0x5e
  426348:	b.ne	426394 <_obstack_memory_used@@Base+0xd684>  // b.any
  42634c:	mov	w0, #0xc                   	// #12
  426350:	strb	w0, [x26, #8]
  426354:	mov	w0, #0x10                  	// #16
  426358:	str	w0, [x26]
  42635c:	str	x24, [x25, #72]
  426360:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426364:	cmp	w23, #0x7c
  426368:	b.eq	426604 <_obstack_memory_used@@Base+0xd8f4>  // b.none
  42636c:	cmp	w23, #0x7d
  426370:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  426374:	ldr	x1, [sp, #136]
  426378:	mov	x0, #0x1200                	// #4608
  42637c:	cmp	x1, x0
  426380:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  426384:	mov	w0, #0x18                  	// #24
  426388:	strb	w0, [x26, #8]
  42638c:	str	x24, [x25, #72]
  426390:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426394:	cmp	w23, #0x3f
  426398:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  42639c:	ldr	x0, [sp, #128]
  4263a0:	cbnz	x0, 4261c0 <_obstack_memory_used@@Base+0xd4b0>
  4263a4:	mov	w0, #0x13                  	// #19
  4263a8:	strb	w0, [x26, #8]
  4263ac:	str	x24, [x25, #72]
  4263b0:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4263b4:	mov	w1, #0x2                   	// #2
  4263b8:	strb	w1, [x26, #8]
  4263bc:	str	x0, [x25, #72]
  4263c0:	mov	x4, #0x0                   	// #0
  4263c4:	ldr	w1, [x27, #128]
  4263c8:	mov	x23, #0x0                   	// #0
  4263cc:	cmp	w1, #0xf
  4263d0:	b.ne	42621c <_obstack_memory_used@@Base+0xd50c>  // b.any
  4263d4:	mov	x0, #0x3c8                 	// #968
  4263d8:	str	x4, [sp, #112]
  4263dc:	bl	402800 <malloc@plt>
  4263e0:	mov	x3, x0
  4263e4:	cbz	x0, 4262bc <_obstack_memory_used@@Base+0xd5ac>
  4263e8:	ldr	x0, [x27, #112]
  4263ec:	str	x0, [x3]
  4263f0:	mov	w11, #0x1                   	// #1
  4263f4:	mov	w1, #0x0                   	// #0
  4263f8:	mov	x0, #0x8                   	// #8
  4263fc:	str	x3, [x27, #112]
  426400:	ldr	x4, [sp, #112]
  426404:	b	426230 <_obstack_memory_used@@Base+0xd520>
  426408:	cmp	w23, #0x5c
  42640c:	b.eq	426468 <_obstack_memory_used@@Base+0xd758>  // b.none
  426410:	bl	402ab0 <__ctype_b_loc@plt>
  426414:	ldr	x0, [x0]
  426418:	ubfiz	x3, x23, #1, #8
  42641c:	cmp	w23, #0x5f
  426420:	ldr	w1, [x26, #8]
  426424:	mov	w2, #0xff00                	// #65280
  426428:	ldrh	w0, [x0, x3]
  42642c:	movk	w2, #0xffbf, lsl #16
  426430:	and	w1, w1, w2
  426434:	and	w0, w0, #0x8
  426438:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  42643c:	cset	w0, ne  // ne = any
  426440:	cmp	w23, #0x2e
  426444:	lsl	w0, w0, #22
  426448:	orr	w0, w0, #0x1
  42644c:	orr	w0, w0, w1
  426450:	str	w0, [x26, #8]
  426454:	b.ne	426194 <_obstack_memory_used@@Base+0xd484>  // b.any
  426458:	mov	w0, #0x5                   	// #5
  42645c:	strb	w0, [x26, #8]
  426460:	str	x24, [x25, #72]
  426464:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426468:	ldr	x1, [x25, #88]
  42646c:	cmp	x1, x24
  426470:	b.gt	426484 <_obstack_memory_used@@Base+0xd774>
  426474:	mov	w0, #0x24                  	// #36
  426478:	strb	w0, [x26, #8]
  42647c:	str	x24, [x25, #72]
  426480:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426484:	ldrb	w1, [x25, #139]
  426488:	add	x23, x0, #0x2
  42648c:	cbnz	w1, 426640 <_obstack_memory_used@@Base+0xd930>
  426490:	ldrb	w1, [x4, x24]
  426494:	mov	w0, #0x1                   	// #1
  426498:	strb	w1, [x26]
  42649c:	strb	w0, [x26, #8]
  4264a0:	cmp	w3, #0x1
  4264a4:	b.le	426550 <_obstack_memory_used@@Base+0xd840>
  4264a8:	ldr	x0, [x25, #16]
  4264ac:	add	x0, x0, x24, lsl #2
  4264b0:	ldr	w24, [x0]
  4264b4:	str	w1, [sp, #112]
  4264b8:	mov	w0, w24
  4264bc:	bl	402bf0 <iswalnum@plt>
  4264c0:	cmp	w24, #0x5f
  4264c4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4264c8:	ldrb	w0, [x26, #10]
  4264cc:	cset	w2, ne  // ne = any
  4264d0:	bfi	w0, w2, #6, #1
  4264d4:	strb	w0, [x26, #10]
  4264d8:	ldr	w1, [sp, #112]
  4264dc:	sub	w0, w1, #0x27
  4264e0:	cmp	w0, #0x56
  4264e4:	b.hi	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.pmore
  4264e8:	ldr	x2, [sp, #144]
  4264ec:	ldrh	w0, [x2, w0, uxtw #1]
  4264f0:	adr	x2, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4264f4:	add	x0, x2, w0, sxth #2
  4264f8:	br	x0
  4264fc:	ldrb	w0, [x26, #8]
  426500:	mov	x4, #0x0                   	// #0
  426504:	str	x23, [x25, #72]
  426508:	and	w1, w0, #0xfffffff7
  42650c:	and	w1, w1, #0xff
  426510:	cmp	w1, #0x2
  426514:	b.eq	42620c <_obstack_memory_used@@Base+0xd4fc>  // b.none
  426518:	cmp	x21, #0x0
  42651c:	mov	x4, #0x0                   	// #0
  426520:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  426524:	b.eq	42620c <_obstack_memory_used@@Base+0xd4fc>  // b.none
  426528:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  42652c:	ldr	w0, [x26, #8]
  426530:	mov	w1, #0x1                   	// #1
  426534:	movk	w1, #0x20, lsl #16
  426538:	and	w0, w0, #0xffffff00
  42653c:	and	w0, w0, #0xffdfffff
  426540:	orr	w0, w0, w1
  426544:	str	w0, [x26, #8]
  426548:	str	x24, [x25, #72]
  42654c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426550:	str	w1, [sp, #112]
  426554:	bl	402ab0 <__ctype_b_loc@plt>
  426558:	ldr	w1, [sp, #112]
  42655c:	ldr	x0, [x0]
  426560:	cmp	w1, #0x5f
  426564:	ubfiz	x2, x1, #1, #8
  426568:	ldrb	w3, [x26, #10]
  42656c:	ldrh	w0, [x0, x2]
  426570:	and	w0, w0, #0x8
  426574:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  426578:	cset	w0, ne  // ne = any
  42657c:	bfi	w3, w0, #6, #1
  426580:	strb	w3, [x26, #10]
  426584:	b	4264dc <_obstack_memory_used@@Base+0xd7cc>
  426588:	mov	w0, #0x8                   	// #8
  42658c:	strb	w0, [x26, #8]
  426590:	str	x24, [x25, #72]
  426594:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426598:	mov	w0, #0xb                   	// #11
  42659c:	strb	w0, [x26, #8]
  4265a0:	str	x24, [x25, #72]
  4265a4:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4265a8:	ldr	x1, [sp, #136]
  4265ac:	mov	x0, #0x1200                	// #4608
  4265b0:	cmp	x1, x0
  4265b4:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  4265b8:	mov	w0, #0x17                  	// #23
  4265bc:	strb	w0, [x26, #8]
  4265c0:	str	x24, [x25, #72]
  4265c4:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4265c8:	mov	w0, #0x14                  	// #20
  4265cc:	strb	w0, [x26, #8]
  4265d0:	str	x24, [x25, #72]
  4265d4:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4265d8:	ldr	x0, [sp, #168]
  4265dc:	cbnz	x0, 4265ec <_obstack_memory_used@@Base+0xd8dc>
  4265e0:	ldr	x0, [x25, #88]
  4265e4:	cmp	x0, x24
  4265e8:	b.ne	4268a0 <_obstack_memory_used@@Base+0xdb90>  // b.any
  4265ec:	mov	w0, #0xc                   	// #12
  4265f0:	strb	w0, [x26, #8]
  4265f4:	mov	w0, #0x20                  	// #32
  4265f8:	str	w0, [x26]
  4265fc:	str	x24, [x25, #72]
  426600:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426604:	ldr	x0, [sp, #152]
  426608:	cmp	x0, #0x8, lsl #12
  42660c:	b.ne	4261c0 <_obstack_memory_used@@Base+0xd4b0>  // b.any
  426610:	mov	w0, #0xa                   	// #10
  426614:	strb	w0, [x26, #8]
  426618:	mov	x4, #0x0                   	// #0
  42661c:	str	x24, [x25, #72]
  426620:	b	42620c <_obstack_memory_used@@Base+0xd4fc>
  426624:	ldr	x0, [sp, #120]
  426628:	cbz	x0, 4261c0 <_obstack_memory_used@@Base+0xd4b0>
  42662c:	mov	w0, #0x9                   	// #9
  426630:	strb	w0, [x26, #8]
  426634:	mov	w0, #0x9                   	// #9
  426638:	str	x24, [x25, #72]
  42663c:	b	426518 <_obstack_memory_used@@Base+0xd808>
  426640:	cmp	w3, #0x1
  426644:	b.le	426674 <_obstack_memory_used@@Base+0xd964>
  426648:	ldr	x0, [x25, #16]
  42664c:	ldr	w1, [x0, x24, lsl #2]
  426650:	add	x0, x0, x24, lsl #2
  426654:	cmn	w1, #0x1
  426658:	b.eq	42690c <_obstack_memory_used@@Base+0xdbfc>  // b.none
  42665c:	ldr	x1, [x25, #48]
  426660:	cmp	x1, x23
  426664:	b.eq	426674 <_obstack_memory_used@@Base+0xd964>  // b.none
  426668:	ldr	w1, [x0, #4]
  42666c:	cmn	w1, #0x1
  426670:	b.eq	42690c <_obstack_memory_used@@Base+0xdbfc>  // b.none
  426674:	ldrb	w1, [x25, #140]
  426678:	ldr	x0, [x25]
  42667c:	ldr	x5, [x25, #40]
  426680:	cbz	w1, 426900 <_obstack_memory_used@@Base+0xdbf0>
  426684:	ldr	x1, [x25, #24]
  426688:	add	x0, x0, x5
  42668c:	ldr	x1, [x1, x24, lsl #3]
  426690:	ldrb	w1, [x0, x1]
  426694:	tbz	w1, #7, 426494 <_obstack_memory_used@@Base+0xd784>
  426698:	b	426490 <_obstack_memory_used@@Base+0xd780>
  42669c:	ldr	x0, [sp, #184]
  4266a0:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4266a4:	sub	w0, w1, #0x31
  4266a8:	mov	w1, #0x4                   	// #4
  4266ac:	strb	w1, [x26, #8]
  4266b0:	sxtw	x0, w0
  4266b4:	str	x0, [x26]
  4266b8:	str	x23, [x25, #72]
  4266bc:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4266c0:	ldr	x0, [sp, #160]
  4266c4:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4266c8:	mov	w0, #0xc                   	// #12
  4266cc:	strb	w0, [x26, #8]
  4266d0:	mov	w0, #0x40                  	// #64
  4266d4:	str	w0, [x26]
  4266d8:	str	x23, [x25, #72]
  4266dc:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4266e0:	ldr	x0, [sp, #160]
  4266e4:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4266e8:	mov	w0, #0xc                   	// #12
  4266ec:	strb	w0, [x26, #8]
  4266f0:	mov	w0, #0x100                 	// #256
  4266f4:	str	w0, [x26]
  4266f8:	str	x23, [x25, #72]
  4266fc:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426700:	ldr	x0, [sp, #160]
  426704:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426708:	mov	w0, #0x22                  	// #34
  42670c:	strb	w0, [x26, #8]
  426710:	str	x23, [x25, #72]
  426714:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426718:	ldr	x0, [sp, #160]
  42671c:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426720:	mov	w0, #0x20                  	// #32
  426724:	strb	w0, [x26, #8]
  426728:	str	x23, [x25, #72]
  42672c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426730:	ldr	x0, [sp, #136]
  426734:	cmp	x0, #0x200
  426738:	b.ne	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.any
  42673c:	mov	w0, #0x17                  	// #23
  426740:	strb	w0, [x26, #8]
  426744:	str	x23, [x25, #72]
  426748:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  42674c:	ldr	x0, [sp, #152]
  426750:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426754:	mov	w0, #0xa                   	// #10
  426758:	strb	w0, [x26, #8]
  42675c:	mov	x4, #0x0                   	// #0
  426760:	str	x23, [x25, #72]
  426764:	b	42620c <_obstack_memory_used@@Base+0xd4fc>
  426768:	ldr	x0, [sp, #136]
  42676c:	cmp	x0, #0x200
  426770:	b.ne	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.any
  426774:	mov	w0, #0x18                  	// #24
  426778:	strb	w0, [x26, #8]
  42677c:	str	x23, [x25, #72]
  426780:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426784:	ldr	x0, [sp, #128]
  426788:	cmp	x0, #0x2
  42678c:	b.ne	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.any
  426790:	mov	w0, #0x13                  	// #19
  426794:	strb	w0, [x26, #8]
  426798:	str	x23, [x25, #72]
  42679c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4267a0:	ldr	x0, [sp, #160]
  4267a4:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4267a8:	mov	w0, #0xc                   	// #12
  4267ac:	strb	w0, [x26, #8]
  4267b0:	mov	w0, #0x200                 	// #512
  4267b4:	str	w0, [x26]
  4267b8:	str	x23, [x25, #72]
  4267bc:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4267c0:	ldr	x0, [sp, #160]
  4267c4:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4267c8:	mov	w0, #0x23                  	// #35
  4267cc:	strb	w0, [x26, #8]
  4267d0:	str	x23, [x25, #72]
  4267d4:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4267d8:	ldr	x0, [sp, #160]
  4267dc:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4267e0:	mov	w0, #0x21                  	// #33
  4267e4:	strb	w0, [x26, #8]
  4267e8:	str	x23, [x25, #72]
  4267ec:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  4267f0:	ldr	x0, [sp, #160]
  4267f4:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  4267f8:	mov	w0, #0xc                   	// #12
  4267fc:	strb	w0, [x26, #8]
  426800:	mov	w0, #0x6                   	// #6
  426804:	str	w0, [x26]
  426808:	str	x23, [x25, #72]
  42680c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426810:	ldr	x0, [sp, #160]
  426814:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426818:	mov	w0, #0xc                   	// #12
  42681c:	strb	w0, [x26, #8]
  426820:	mov	w0, #0x9                   	// #9
  426824:	str	w0, [x26]
  426828:	str	x23, [x25, #72]
  42682c:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426830:	ldr	x0, [sp, #128]
  426834:	cmp	x0, #0x2
  426838:	b.ne	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.any
  42683c:	mov	w0, #0x12                  	// #18
  426840:	strb	w0, [x26, #8]
  426844:	str	x23, [x25, #72]
  426848:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  42684c:	ldr	x0, [sp, #160]
  426850:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426854:	mov	w0, #0xc                   	// #12
  426858:	strb	w0, [x26, #8]
  42685c:	mov	w0, #0x80                  	// #128
  426860:	str	w0, [x26]
  426864:	str	x23, [x25, #72]
  426868:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  42686c:	ldr	x0, [sp, #120]
  426870:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  426874:	mov	w0, #0x8                   	// #8
  426878:	strb	w0, [x26, #8]
  42687c:	str	x23, [x25, #72]
  426880:	b	4261c4 <_obstack_memory_used@@Base+0xd4b4>
  426884:	ldr	x0, [sp, #120]
  426888:	cbnz	x0, 4264fc <_obstack_memory_used@@Base+0xd7ec>
  42688c:	mov	w0, #0x9                   	// #9
  426890:	strb	w0, [x26, #8]
  426894:	mov	w0, #0x9                   	// #9
  426898:	str	x23, [x25, #72]
  42689c:	b	426518 <_obstack_memory_used@@Base+0xd808>
  4268a0:	str	x24, [x25, #72]
  4268a4:	mov	x1, x25
  4268a8:	orr	x2, x19, #0x800000
  4268ac:	add	x0, sp, #0xc0
  4268b0:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  4268b4:	ldr	x23, [x25, #72]
  4268b8:	ldrb	w0, [sp, #200]
  4268bc:	sub	x1, x23, #0x1
  4268c0:	str	x1, [x25, #72]
  4268c4:	sub	w0, w0, #0x9
  4268c8:	and	w0, w0, #0xff
  4268cc:	cmp	w0, #0x1
  4268d0:	b.hi	4264fc <_obstack_memory_used@@Base+0xd7ec>  // b.pmore
  4268d4:	mov	x24, x23
  4268d8:	b	4265ec <_obstack_memory_used@@Base+0xd8dc>
  4268dc:	cbz	x28, 4268f4 <_obstack_memory_used@@Base+0xdbe4>
  4268e0:	mov	x0, x28
  4268e4:	mov	x28, #0x0                   	// #0
  4268e8:	bl	41ce78 <_obstack_memory_used@@Base+0x4168>
  4268ec:	ldp	x23, x24, [sp, #48]
  4268f0:	b	4262cc <_obstack_memory_used@@Base+0xd5bc>
  4268f4:	ldp	x23, x24, [sp, #48]
  4268f8:	mov	x28, #0x0                   	// #0
  4268fc:	b	4262cc <_obstack_memory_used@@Base+0xd5bc>
  426900:	add	x0, x0, x24
  426904:	ldrb	w1, [x0, x5]
  426908:	b	426494 <_obstack_memory_used@@Base+0xd784>
  42690c:	ldrb	w1, [x4, x24]
  426910:	mov	w2, #0x1                   	// #1
  426914:	strb	w1, [x26]
  426918:	strb	w2, [x26, #8]
  42691c:	b	4264b0 <_obstack_memory_used@@Base+0xd7a0>
  426920:	stp	x29, x30, [sp, #-288]!
  426924:	mov	x29, sp
  426928:	stp	x21, x22, [sp, #32]
  42692c:	mov	x21, x0
  426930:	mov	x22, x1
  426934:	stp	x19, x20, [sp, #16]
  426938:	mov	x20, x2
  42693c:	ldrb	w0, [x0, #56]
  426940:	ldp	x19, x1, [x21]
  426944:	stp	x23, x24, [sp, #48]
  426948:	mov	x24, x3
  42694c:	mov	w3, #0xffffff90            	// #-112
  426950:	and	w0, w0, w3
  426954:	stp	xzr, x24, [x21, #16]
  426958:	str	xzr, [x21, #48]
  42695c:	cmp	x1, #0xe7
  426960:	strb	w0, [x21, #56]
  426964:	str	wzr, [sp, #96]
  426968:	b.ls	427adc <_obstack_memory_used@@Base+0xedcc>  // b.plast
  42696c:	mov	x2, #0xe8                  	// #232
  426970:	str	x2, [x21, #16]
  426974:	mov	x0, x19
  426978:	mov	w1, #0x0                   	// #0
  42697c:	bl	4028d0 <memset@plt>
  426980:	mov	w0, #0xf                   	// #15
  426984:	str	w0, [x19, #128]
  426988:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  42698c:	movk	x0, #0x555, lsl #48
  426990:	cmp	x20, x0
  426994:	b.cs	427030 <_obstack_memory_used@@Base+0xe320>  // b.hs, b.nlast
  426998:	stp	x25, x26, [sp, #64]
  42699c:	add	x25, x20, #0x1
  4269a0:	stp	x27, x28, [sp, #80]
  4269a4:	lsl	x0, x25, #4
  4269a8:	str	x25, [x19, #8]
  4269ac:	bl	402800 <malloc@plt>
  4269b0:	str	x0, [x19]
  4269b4:	cbz	x20, 427afc <_obstack_memory_used@@Base+0xedec>
  4269b8:	mov	x1, #0x1                   	// #1
  4269bc:	nop
  4269c0:	lsl	x1, x1, #1
  4269c4:	cmp	x20, x1
  4269c8:	b.cs	4269c0 <_obstack_memory_used@@Base+0xdcb0>  // b.hs, b.nlast
  4269cc:	sub	x23, x1, #0x1
  4269d0:	mov	x0, #0x18                  	// #24
  4269d4:	bl	402910 <calloc@plt>
  4269d8:	str	x0, [x19, #64]
  4269dc:	str	x23, [x19, #136]
  4269e0:	bl	402b00 <__ctype_get_mb_cur_max@plt>
  4269e4:	str	w0, [x19, #180]
  4269e8:	mov	w0, #0xe                   	// #14
  4269ec:	bl	4027c0 <nl_langinfo@plt>
  4269f0:	ldrb	w1, [x0]
  4269f4:	and	w1, w1, #0xffffffdf
  4269f8:	and	w1, w1, #0xff
  4269fc:	cmp	w1, #0x55
  426a00:	b.ne	426a60 <_obstack_memory_used@@Base+0xdd50>  // b.any
  426a04:	ldrb	w1, [x0, #1]
  426a08:	and	w1, w1, #0xffffffdf
  426a0c:	and	w1, w1, #0xff
  426a10:	cmp	w1, #0x54
  426a14:	b.ne	426a60 <_obstack_memory_used@@Base+0xdd50>  // b.any
  426a18:	ldrb	w1, [x0, #2]
  426a1c:	and	w1, w1, #0xffffffdf
  426a20:	and	w1, w1, #0xff
  426a24:	cmp	w1, #0x46
  426a28:	b.ne	426a60 <_obstack_memory_used@@Base+0xdd50>  // b.any
  426a2c:	ldrb	w1, [x0, #3]
  426a30:	cmp	w1, #0x2d
  426a34:	cset	x1, eq  // eq = none
  426a38:	add	x1, x1, #0x3
  426a3c:	add	x2, x0, x1
  426a40:	ldrb	w0, [x0, x1]
  426a44:	cmp	w0, #0x38
  426a48:	b.ne	426a60 <_obstack_memory_used@@Base+0xdd50>  // b.any
  426a4c:	ldrb	w0, [x2, #1]
  426a50:	cbnz	w0, 426a60 <_obstack_memory_used@@Base+0xdd50>
  426a54:	ldrb	w0, [x19, #176]
  426a58:	orr	w0, w0, #0x4
  426a5c:	strb	w0, [x19, #176]
  426a60:	ldrb	w0, [x19, #176]
  426a64:	ldr	w1, [x19, #180]
  426a68:	and	w2, w0, #0xfffffff7
  426a6c:	strb	w2, [x19, #176]
  426a70:	cmp	w1, #0x1
  426a74:	b.le	426a88 <_obstack_memory_used@@Base+0xdd78>
  426a78:	tbz	w0, #2, 42705c <_obstack_memory_used@@Base+0xe34c>
  426a7c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x122f0>
  426a80:	add	x0, x0, #0xdd0
  426a84:	str	x0, [x19, #120]
  426a88:	ldr	x0, [x19]
  426a8c:	cbz	x0, 427028 <_obstack_memory_used@@Base+0xe318>
  426a90:	ldr	x0, [x19, #64]
  426a94:	cbz	x0, 427028 <_obstack_memory_used@@Base+0xe318>
  426a98:	add	x0, sp, #0x80
  426a9c:	stp	xzr, xzr, [sp, #168]
  426aa0:	ands	x23, x24, #0x400000
  426aa4:	stp	xzr, xzr, [sp, #184]
  426aa8:	dup	v0.2d, x20
  426aac:	cset	w6, ne  // ne = any
  426ab0:	stp	xzr, xzr, [sp, #200]
  426ab4:	mov	x27, #0x0                   	// #0
  426ab8:	stp	xzr, xzr, [sp, #216]
  426abc:	stp	xzr, xzr, [sp, #232]
  426ac0:	stp	xzr, xzr, [sp, #248]
  426ac4:	stp	xzr, xzr, [x0, #136]
  426ac8:	ldr	x3, [x21, #40]
  426acc:	str	wzr, [sp, #96]
  426ad0:	ldrb	w1, [x19, #176]
  426ad4:	orr	x26, x3, x23
  426ad8:	ldr	w2, [x19, #180]
  426adc:	cmp	x26, #0x0
  426ae0:	str	x22, [sp, #128]
  426ae4:	ubfx	x5, x1, #2, #1
  426ae8:	cset	w4, ne  // ne = any
  426aec:	ubfx	x1, x1, #3, #1
  426af0:	stp	xzr, xzr, [sp, #136]
  426af4:	stp	xzr, xzr, [sp, #152]
  426af8:	str	x3, [sp, #248]
  426afc:	strb	w6, [sp, #264]
  426b00:	strb	w5, [sp, #265]
  426b04:	strb	w1, [sp, #266]
  426b08:	strb	w4, [sp, #267]
  426b0c:	str	w2, [sp, #272]
  426b10:	stp	q0, q0, [sp, #208]
  426b14:	cbnz	x20, 426ffc <_obstack_memory_used@@Base+0xe2ec>
  426b18:	ldr	x0, [sp, #136]
  426b1c:	cmp	w4, #0x0
  426b20:	csel	x22, x0, x22, ne  // ne = any
  426b24:	str	x22, [sp, #136]
  426b28:	cmp	w2, #0x1
  426b2c:	cbz	x23, 426bc0 <_obstack_memory_used@@Base+0xdeb0>
  426b30:	b.le	427a44 <_obstack_memory_used@@Base+0xed34>
  426b34:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  426b38:	add	x0, sp, #0x80
  426b3c:	bl	419688 <_obstack_memory_used@@Base+0x978>
  426b40:	cbnz	w0, 426f80 <_obstack_memory_used@@Base+0xe270>
  426b44:	ldr	x0, [sp, #184]
  426b48:	cmp	x20, x0
  426b4c:	b.le	427b70 <_obstack_memory_used@@Base+0xee60>
  426b50:	ldr	x1, [sp, #176]
  426b54:	ldrsw	x0, [x19, #180]
  426b58:	ldr	x25, [sp, #192]
  426b5c:	add	x0, x0, x1
  426b60:	cmp	x25, x0
  426b64:	b.gt	427b70 <_obstack_memory_used@@Base+0xee60>
  426b68:	ldr	w0, [sp, #272]
  426b6c:	lsl	x26, x25, #1
  426b70:	cmp	w0, #0x1
  426b74:	b.le	426bb0 <_obstack_memory_used@@Base+0xdea0>
  426b78:	cmp	x26, x22
  426b7c:	b.hi	426f7c <_obstack_memory_used@@Base+0xe26c>  // b.pmore
  426b80:	ldr	x0, [sp, #144]
  426b84:	lsl	x1, x25, #3
  426b88:	bl	402930 <realloc@plt>
  426b8c:	mov	x1, x0
  426b90:	cbz	x0, 426f7c <_obstack_memory_used@@Base+0xe26c>
  426b94:	ldr	x0, [sp, #152]
  426b98:	str	x1, [sp, #144]
  426b9c:	cbz	x0, 426bb0 <_obstack_memory_used@@Base+0xdea0>
  426ba0:	lsl	x1, x25, #4
  426ba4:	bl	402930 <realloc@plt>
  426ba8:	cbz	x0, 426f7c <_obstack_memory_used@@Base+0xe26c>
  426bac:	str	x0, [sp, #152]
  426bb0:	ldrb	w0, [sp, #267]
  426bb4:	cbnz	w0, 426f60 <_obstack_memory_used@@Base+0xe250>
  426bb8:	str	x26, [sp, #192]
  426bbc:	b	426b38 <_obstack_memory_used@@Base+0xde28>
  426bc0:	b.gt	4278cc <_obstack_memory_used@@Base+0xebbc>
  426bc4:	cbz	x26, 4271a8 <_obstack_memory_used@@Base+0xe498>
  426bc8:	ldr	x2, [sp, #216]
  426bcc:	ldr	x1, [sp, #176]
  426bd0:	cmp	x2, x27
  426bd4:	csel	x2, x2, x27, le
  426bd8:	cmp	x2, x1
  426bdc:	b.le	427c60 <_obstack_memory_used@@Base+0xef50>
  426be0:	ldr	x3, [sp, #128]
  426be4:	add	x0, x1, #0x1
  426be8:	ldr	x5, [sp, #168]
  426bec:	add	x3, x3, x1
  426bf0:	ldr	x4, [sp, #248]
  426bf4:	cmp	x2, x0
  426bf8:	ldrb	w3, [x3, x5]
  426bfc:	ldrb	w3, [x4, x3]
  426c00:	strb	w3, [x22, x1]
  426c04:	b.le	426c34 <_obstack_memory_used@@Base+0xdf24>
  426c08:	ldr	x1, [sp, #128]
  426c0c:	ldr	x3, [sp, #168]
  426c10:	add	x1, x1, x0
  426c14:	ldr	x4, [sp, #248]
  426c18:	ldrb	w3, [x1, x3]
  426c1c:	ldr	x1, [sp, #136]
  426c20:	ldrb	w3, [x4, x3]
  426c24:	strb	w3, [x1, x0]
  426c28:	add	x0, x0, #0x1
  426c2c:	cmp	x2, x0
  426c30:	b.ne	426c08 <_obstack_memory_used@@Base+0xdef8>  // b.any
  426c34:	dup	v0.2d, x2
  426c38:	str	wzr, [sp, #96]
  426c3c:	str	q0, [sp, #176]
  426c40:	orr	x2, x24, #0x800000
  426c44:	ldr	x25, [x21]
  426c48:	str	xzr, [x21, #48]
  426c4c:	add	x1, sp, #0x80
  426c50:	add	x0, sp, #0x68
  426c54:	str	x24, [x25, #216]
  426c58:	bl	41bfe0 <_obstack_memory_used@@Base+0x32d0>
  426c5c:	mov	w6, w0
  426c60:	ldr	x1, [sp, #200]
  426c64:	mov	x3, x24
  426c68:	add	x0, sp, #0x80
  426c6c:	add	x2, sp, #0x68
  426c70:	add	x5, sp, #0x60
  426c74:	mov	x4, #0x0                   	// #0
  426c78:	add	x6, x1, w6, sxtw
  426c7c:	mov	x1, x21
  426c80:	str	x6, [sp, #200]
  426c84:	bl	426038 <_obstack_memory_used@@Base+0xd328>
  426c88:	mov	x24, x0
  426c8c:	ldr	w1, [sp, #96]
  426c90:	cmp	w1, #0x0
  426c94:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  426c98:	b.eq	427c68 <_obstack_memory_used@@Base+0xef58>  // b.none
  426c9c:	ldr	w1, [x25, #128]
  426ca0:	mov	x26, #0x0                   	// #0
  426ca4:	ldr	x20, [x21]
  426ca8:	cmp	w1, #0xf
  426cac:	b.eq	427b2c <_obstack_memory_used@@Base+0xee1c>  // b.none
  426cb0:	mov	w22, #0x40                  	// #64
  426cb4:	mov	x0, #0x8                   	// #8
  426cb8:	add	w5, w1, #0x1
  426cbc:	smaddl	x0, w1, w22, x0
  426cc0:	ldr	x22, [x25, #112]
  426cc4:	sbfiz	x1, x1, #6, #32
  426cc8:	add	x2, x22, x1
  426ccc:	add	x3, x1, #0x20
  426cd0:	movi	v0.4s, #0x0
  426cd4:	add	x3, x22, x3
  426cd8:	mov	x4, #0x2                   	// #2
  426cdc:	str	w5, [x25, #128]
  426ce0:	bfxil	x26, x4, #0, #8
  426ce4:	str	xzr, [x2, #24]
  426ce8:	stp	xzr, x26, [x2, #48]
  426cec:	add	x22, x22, x0
  426cf0:	mov	x5, #0xffffffffffffffff    	// #-1
  426cf4:	stur	q0, [x2, #8]
  426cf8:	mov	x4, x22
  426cfc:	ldrb	w0, [x3, #26]
  426d00:	and	w0, w0, #0xfffffff3
  426d04:	strb	w0, [x3, #26]
  426d08:	str	x5, [x2, #64]
  426d0c:	str	q0, [x2, #32]
  426d10:	cbz	x24, 426d90 <_obstack_memory_used@@Base+0xe080>
  426d14:	ldr	w1, [x25, #128]
  426d18:	mov	x26, #0x0                   	// #0
  426d1c:	cmp	w1, #0xf
  426d20:	b.eq	427c04 <_obstack_memory_used@@Base+0xeef4>  // b.none
  426d24:	mov	w0, #0x40                  	// #64
  426d28:	mov	x4, #0x8                   	// #8
  426d2c:	add	w6, w1, #0x1
  426d30:	smaddl	x4, w1, w0, x4
  426d34:	ldr	x0, [x25, #112]
  426d38:	sbfiz	x1, x1, #6, #32
  426d3c:	add	x2, x0, x1
  426d40:	add	x3, x1, #0x20
  426d44:	add	x3, x0, x3
  426d48:	mov	x5, #0x10                  	// #16
  426d4c:	str	w6, [x25, #128]
  426d50:	bfxil	x26, x5, #0, #8
  426d54:	stp	xzr, x24, [x2, #8]
  426d58:	add	x0, x0, x4
  426d5c:	mov	x5, #0xffffffffffffffff    	// #-1
  426d60:	str	x22, [x2, #24]
  426d64:	stp	xzr, x26, [x2, #48]
  426d68:	ldrb	w4, [x3, #26]
  426d6c:	and	w4, w4, #0xfffffff3
  426d70:	strb	w4, [x3, #26]
  426d74:	stp	xzr, xzr, [x2, #32]
  426d78:	str	x5, [x2, #64]
  426d7c:	str	x0, [x24]
  426d80:	cbz	x22, 426d88 <_obstack_memory_used@@Base+0xe078>
  426d84:	str	x0, [x22]
  426d88:	mov	x4, x22
  426d8c:	mov	x22, x0
  426d90:	cmp	x4, #0x0
  426d94:	cset	w0, eq  // eq = none
  426d98:	cmp	x22, #0x0
  426d9c:	csinc	w0, w0, wzr, ne  // ne = any
  426da0:	cbnz	w0, 427b58 <_obstack_memory_used@@Base+0xee48>
  426da4:	ldr	x24, [x20, #8]
  426da8:	str	x22, [x19, #104]
  426dac:	lsl	x25, x24, #3
  426db0:	add	x24, x24, x24, lsl #1
  426db4:	mov	x0, x25
  426db8:	bl	402800 <malloc@plt>
  426dbc:	mov	x22, x0
  426dc0:	str	x22, [x20, #24]
  426dc4:	mov	x0, x25
  426dc8:	lsl	x24, x24, #3
  426dcc:	bl	402800 <malloc@plt>
  426dd0:	mov	x25, x0
  426dd4:	str	x25, [x20, #32]
  426dd8:	mov	x0, x24
  426ddc:	bl	402800 <malloc@plt>
  426de0:	mov	x1, x0
  426de4:	str	x1, [x20, #40]
  426de8:	mov	x0, x24
  426dec:	mov	x24, x1
  426df0:	bl	402800 <malloc@plt>
  426df4:	str	x0, [x20, #48]
  426df8:	cbz	x22, 4278b4 <_obstack_memory_used@@Base+0xeba4>
  426dfc:	cbz	x25, 4278b4 <_obstack_memory_used@@Base+0xeba4>
  426e00:	cbz	x24, 4278b4 <_obstack_memory_used@@Base+0xeba4>
  426e04:	cbz	x0, 4278b4 <_obstack_memory_used@@Base+0xeba4>
  426e08:	ldr	x22, [x21, #48]
  426e0c:	lsl	x0, x22, #3
  426e10:	bl	402800 <malloc@plt>
  426e14:	str	x0, [x20, #224]
  426e18:	ldr	x1, [x20, #104]
  426e1c:	cbz	x0, 426ef8 <_obstack_memory_used@@Base+0xe1e8>
  426e20:	mov	x2, #0x0                   	// #0
  426e24:	cbz	x22, 426e38 <_obstack_memory_used@@Base+0xe128>
  426e28:	str	x2, [x0, x2, lsl #3]
  426e2c:	add	x2, x2, #0x1
  426e30:	cmp	x2, x22
  426e34:	b.ne	426e28 <_obstack_memory_used@@Base+0xe118>  // b.any
  426e38:	ldrb	w4, [x1, #48]
  426e3c:	mov	x7, #0x1                   	// #1
  426e40:	mov	x3, x1
  426e44:	mov	w6, w7
  426e48:	cmp	w4, #0x4
  426e4c:	ldr	x2, [x1, #8]
  426e50:	b.eq	426e7c <_obstack_memory_used@@Base+0xe16c>  // b.none
  426e54:	nop
  426e58:	cmp	w4, #0x11
  426e5c:	b.eq	427144 <_obstack_memory_used@@Base+0xe434>  // b.none
  426e60:	cbz	x2, 426ea0 <_obstack_memory_used@@Base+0xe190>
  426e64:	ldrb	w4, [x2, #48]
  426e68:	ldr	x5, [x2, #8]
  426e6c:	mov	x3, x2
  426e70:	cmp	w4, #0x4
  426e74:	mov	x2, x5
  426e78:	b.ne	426e58 <_obstack_memory_used@@Base+0xe148>  // b.any
  426e7c:	ldrsw	x4, [x3, #40]
  426e80:	ldr	x5, [x20, #160]
  426e84:	ldr	x4, [x0, x4, lsl #3]
  426e88:	str	x4, [x3, #40]
  426e8c:	lsl	w4, w6, w4
  426e90:	sxtw	x4, w4
  426e94:	orr	x4, x5, x4
  426e98:	str	x4, [x20, #160]
  426e9c:	cbnz	x2, 426e64 <_obstack_memory_used@@Base+0xe154>
  426ea0:	mov	x4, #0x0                   	// #0
  426ea4:	b	426eac <_obstack_memory_used@@Base+0xe19c>
  426ea8:	mov	x3, x2
  426eac:	ldr	x2, [x3, #16]
  426eb0:	cmp	x2, #0x0
  426eb4:	ccmp	x2, x4, #0x4, ne  // ne = any
  426eb8:	b.ne	426e64 <_obstack_memory_used@@Base+0xe154>  // b.any
  426ebc:	ldr	x2, [x3]
  426ec0:	mov	x4, x3
  426ec4:	cbnz	x2, 426ea8 <_obstack_memory_used@@Base+0xe198>
  426ec8:	cbz	x22, 426ee8 <_obstack_memory_used@@Base+0xe1d8>
  426ecc:	nop
  426ed0:	ldr	x3, [x0, x2, lsl #3]
  426ed4:	cmp	x2, x3
  426ed8:	b.ne	426ef8 <_obstack_memory_used@@Base+0xe1e8>  // b.any
  426edc:	add	x2, x2, #0x1
  426ee0:	cmp	x2, x22
  426ee4:	b.ne	426ed0 <_obstack_memory_used@@Base+0xe1c0>  // b.any
  426ee8:	bl	402ae0 <free@plt>
  426eec:	str	xzr, [x20, #224]
  426ef0:	ldr	x1, [x20, #104]
  426ef4:	nop
  426ef8:	mov	x22, x1
  426efc:	ldr	x1, [x1, #8]
  426f00:	cbnz	x1, 426ef8 <_obstack_memory_used@@Base+0xe1e8>
  426f04:	ldr	x1, [x22, #16]
  426f08:	cbnz	x1, 426ef8 <_obstack_memory_used@@Base+0xe1e8>
  426f0c:	mov	x2, #0x0                   	// #0
  426f10:	str	wzr, [sp, #104]
  426f14:	cbz	x1, 426f24 <_obstack_memory_used@@Base+0xe214>
  426f18:	ldrb	w0, [x1, #48]
  426f1c:	cmp	w0, #0x11
  426f20:	b.eq	4270f8 <_obstack_memory_used@@Base+0xe3e8>  // b.none
  426f24:	cbz	x2, 426f3c <_obstack_memory_used@@Base+0xe22c>
  426f28:	ldrb	w0, [x2, #48]
  426f2c:	cmp	w0, #0x11
  426f30:	b.eq	427128 <_obstack_memory_used@@Base+0xe418>  // b.none
  426f34:	ldr	w0, [sp, #104]
  426f38:	cbnz	w0, 426f80 <_obstack_memory_used@@Base+0xe270>
  426f3c:	ldr	x0, [x22]
  426f40:	cbz	x0, 4271b8 <_obstack_memory_used@@Base+0xe4a8>
  426f44:	ldr	x2, [x0, #16]
  426f48:	cmp	x2, #0x0
  426f4c:	ccmp	x22, x2, #0x4, ne  // ne = any
  426f50:	b.ne	427b68 <_obstack_memory_used@@Base+0xee58>  // b.any
  426f54:	mov	x22, x0
  426f58:	ldr	x1, [x0, #8]
  426f5c:	b	426f10 <_obstack_memory_used@@Base+0xe200>
  426f60:	ldr	x0, [sp, #136]
  426f64:	mov	x1, x26
  426f68:	bl	402930 <realloc@plt>
  426f6c:	cbz	x0, 426f7c <_obstack_memory_used@@Base+0xe26c>
  426f70:	str	x0, [sp, #136]
  426f74:	str	x26, [sp, #192]
  426f78:	b	426b38 <_obstack_memory_used@@Base+0xde28>
  426f7c:	mov	w0, #0xc                   	// #12
  426f80:	ldr	x20, [x21]
  426f84:	str	w0, [sp, #96]
  426f88:	ldr	x22, [x20, #112]
  426f8c:	cbz	x22, 426fa0 <_obstack_memory_used@@Base+0xe290>
  426f90:	mov	x0, x22
  426f94:	ldr	x22, [x22]
  426f98:	bl	402ae0 <free@plt>
  426f9c:	cbnz	x22, 426f90 <_obstack_memory_used@@Base+0xe280>
  426fa0:	ldr	x0, [x20, #32]
  426fa4:	mov	w1, #0xf                   	// #15
  426fa8:	stp	xzr, xzr, [x20, #104]
  426fac:	str	w1, [x20, #128]
  426fb0:	bl	402ae0 <free@plt>
  426fb4:	str	xzr, [x20, #32]
  426fb8:	ldr	x0, [sp, #144]
  426fbc:	bl	402ae0 <free@plt>
  426fc0:	ldr	x0, [sp, #152]
  426fc4:	bl	402ae0 <free@plt>
  426fc8:	ldrb	w0, [sp, #267]
  426fcc:	cbnz	w0, 427194 <_obstack_memory_used@@Base+0xe484>
  426fd0:	mov	x0, x19
  426fd4:	bl	41cfc8 <_obstack_memory_used@@Base+0x42b8>
  426fd8:	ldr	w0, [sp, #96]
  426fdc:	ldp	x25, x26, [sp, #64]
  426fe0:	ldp	x27, x28, [sp, #80]
  426fe4:	stp	xzr, xzr, [x21]
  426fe8:	ldp	x19, x20, [sp, #16]
  426fec:	ldp	x21, x22, [sp, #32]
  426ff0:	ldp	x23, x24, [sp, #48]
  426ff4:	ldp	x29, x30, [sp], #288
  426ff8:	ret
  426ffc:	cmp	w2, #0x1
  427000:	mov	x27, x25
  427004:	b.le	427018 <_obstack_memory_used@@Base+0xe308>
  427008:	lsl	x0, x25, #2
  42700c:	bl	402800 <malloc@plt>
  427010:	cbz	x0, 427b78 <_obstack_memory_used@@Base+0xee68>
  427014:	str	x0, [sp, #144]
  427018:	cbnz	x26, 427ab8 <_obstack_memory_used@@Base+0xeda8>
  42701c:	ldr	w2, [x19, #180]
  427020:	str	x25, [sp, #192]
  427024:	b	426b24 <_obstack_memory_used@@Base+0xde14>
  427028:	ldp	x25, x26, [sp, #64]
  42702c:	ldp	x27, x28, [sp, #80]
  427030:	mov	w1, #0xc                   	// #12
  427034:	mov	x0, x19
  427038:	str	w1, [sp, #96]
  42703c:	bl	41cfc8 <_obstack_memory_used@@Base+0x42b8>
  427040:	stp	xzr, xzr, [x21]
  427044:	ldr	w0, [sp, #96]
  427048:	ldp	x19, x20, [sp, #16]
  42704c:	ldp	x21, x22, [sp, #32]
  427050:	ldp	x23, x24, [sp, #48]
  427054:	ldp	x29, x30, [sp], #288
  427058:	ret
  42705c:	mov	x1, #0x1                   	// #1
  427060:	mov	x0, #0x20                  	// #32
  427064:	bl	402910 <calloc@plt>
  427068:	str	x0, [x19, #120]
  42706c:	cbz	x0, 427028 <_obstack_memory_used@@Base+0xe318>
  427070:	mov	x27, #0x0                   	// #0
  427074:	mov	x26, #0x1                   	// #1
  427078:	lsl	w23, w27, #3
  42707c:	mov	w28, #0x0                   	// #0
  427080:	b	4270a4 <_obstack_memory_used@@Base+0xe394>
  427084:	cbnz	w3, 427094 <_obstack_memory_used@@Base+0xe384>
  427088:	ldrb	w0, [x19, #176]
  42708c:	orr	w0, w0, #0x8
  427090:	strb	w0, [x19, #176]
  427094:	add	w28, w28, #0x1
  427098:	add	w23, w23, #0x1
  42709c:	cmp	w28, #0x40
  4270a0:	b.eq	4270e8 <_obstack_memory_used@@Base+0xe3d8>  // b.none
  4270a4:	mov	w0, w23
  4270a8:	bl	4029d0 <btowc@plt>
  4270ac:	and	w3, w23, #0xffffff80
  4270b0:	cmn	w0, #0x1
  4270b4:	b.eq	427084 <_obstack_memory_used@@Base+0xe374>  // b.none
  4270b8:	ldr	x4, [x19, #120]
  4270bc:	lsl	x1, x26, x28
  4270c0:	ldr	x2, [x4, x27]
  4270c4:	orr	x1, x2, x1
  4270c8:	str	x1, [x4, x27]
  4270cc:	cbnz	w3, 427094 <_obstack_memory_used@@Base+0xe384>
  4270d0:	cmp	w0, w23
  4270d4:	b.ne	427088 <_obstack_memory_used@@Base+0xe378>  // b.any
  4270d8:	add	w28, w28, #0x1
  4270dc:	add	w23, w23, #0x1
  4270e0:	cmp	w28, #0x40
  4270e4:	b.ne	4270a4 <_obstack_memory_used@@Base+0xe394>  // b.any
  4270e8:	add	x27, x27, #0x8
  4270ec:	cmp	x27, #0x20
  4270f0:	b.ne	427078 <_obstack_memory_used@@Base+0xe368>  // b.any
  4270f4:	b	426a88 <_obstack_memory_used@@Base+0xdd78>
  4270f8:	mov	x2, x1
  4270fc:	add	x0, sp, #0x68
  427100:	mov	x1, x21
  427104:	bl	4206f8 <_obstack_memory_used@@Base+0x79e8>
  427108:	str	x0, [x22, #8]
  42710c:	cbz	x0, 427114 <_obstack_memory_used@@Base+0xe404>
  427110:	str	x22, [x0]
  427114:	ldr	x2, [x22, #16]
  427118:	cbz	x2, 426f34 <_obstack_memory_used@@Base+0xe224>
  42711c:	ldrb	w0, [x2, #48]
  427120:	cmp	w0, #0x11
  427124:	b.ne	426f34 <_obstack_memory_used@@Base+0xe224>  // b.any
  427128:	mov	x1, x21
  42712c:	add	x0, sp, #0x68
  427130:	bl	4206f8 <_obstack_memory_used@@Base+0x79e8>
  427134:	str	x0, [x22, #16]
  427138:	cbz	x0, 426f34 <_obstack_memory_used@@Base+0xe224>
  42713c:	str	x22, [x0]
  427140:	b	426f34 <_obstack_memory_used@@Base+0xe224>
  427144:	cbz	x2, 426ea0 <_obstack_memory_used@@Base+0xe190>
  427148:	ldrb	w4, [x2, #48]
  42714c:	ldr	x5, [x2, #8]
  427150:	cmp	w4, #0x11
  427154:	b.ne	426e6c <_obstack_memory_used@@Base+0xe15c>  // b.any
  427158:	ldr	x4, [x2, #40]
  42715c:	str	x5, [x3, #8]
  427160:	cbz	x5, 427168 <_obstack_memory_used@@Base+0xe458>
  427164:	str	x3, [x5]
  427168:	ldr	x8, [x3, #40]
  42716c:	mov	x2, x5
  427170:	cmp	x4, #0x3f
  427174:	ldr	x5, [x0, x8, lsl #3]
  427178:	str	x5, [x0, x4, lsl #3]
  42717c:	b.gt	426e60 <_obstack_memory_used@@Base+0xe150>
  427180:	ldr	x5, [x20, #160]
  427184:	lsl	x4, x7, x4
  427188:	bic	x4, x5, x4
  42718c:	str	x4, [x20, #160]
  427190:	b	426e60 <_obstack_memory_used@@Base+0xe150>
  427194:	ldr	x0, [sp, #136]
  427198:	bl	402ae0 <free@plt>
  42719c:	b	426fd0 <_obstack_memory_used@@Base+0xe2c0>
  4271a0:	mov	x27, x20
  4271a4:	nop
  4271a8:	dup	v0.2d, x27
  4271ac:	str	wzr, [sp, #96]
  4271b0:	str	q0, [sp, #176]
  4271b4:	b	426c40 <_obstack_memory_used@@Base+0xdf30>
  4271b8:	ldr	x0, [x20, #104]
  4271bc:	nop
  4271c0:	mov	x22, x0
  4271c4:	ldr	x0, [x0, #8]
  4271c8:	cbnz	x0, 4271c0 <_obstack_memory_used@@Base+0xe4b0>
  4271cc:	ldr	x0, [x22, #16]
  4271d0:	cbnz	x0, 4271c0 <_obstack_memory_used@@Base+0xe4b0>
  4271d4:	b	427208 <_obstack_memory_used@@Base+0xe4f8>
  4271d8:	ldr	x0, [x22, #8]
  4271dc:	ldr	x1, [x0, #24]
  4271e0:	ldr	x0, [x0, #56]
  4271e4:	str	x1, [x22, #24]
  4271e8:	str	x0, [x22, #56]
  4271ec:	ldr	x1, [x22]
  4271f0:	cbz	x1, 427268 <_obstack_memory_used@@Base+0xe558>
  4271f4:	ldr	x0, [x1, #16]
  4271f8:	cmp	x0, #0x0
  4271fc:	ccmp	x22, x0, #0x4, ne  // ne = any
  427200:	b.ne	4271c0 <_obstack_memory_used@@Base+0xe4b0>  // b.any
  427204:	mov	x22, x1
  427208:	ldrb	w0, [x22, #48]
  42720c:	cmp	w0, #0x10
  427210:	b.eq	4271d8 <_obstack_memory_used@@Base+0xe4c8>  // b.none
  427214:	ldp	x2, x3, [x22, #40]
  427218:	str	x22, [x22, #24]
  42721c:	mov	x0, x20
  427220:	mov	x1, x2
  427224:	mov	x2, x3
  427228:	bl	419f98 <_obstack_memory_used@@Base+0x1288>
  42722c:	str	x0, [x22, #56]
  427230:	cmn	x0, #0x1
  427234:	b.eq	426f7c <_obstack_memory_used@@Base+0xe26c>  // b.none
  427238:	ldrb	w1, [x22, #48]
  42723c:	cmp	w1, #0xc
  427240:	b.ne	4271ec <_obstack_memory_used@@Base+0xe4dc>  // b.any
  427244:	ldr	x1, [x20]
  427248:	ldr	w2, [x22, #40]
  42724c:	add	x0, x1, x0, lsl #4
  427250:	ldr	w1, [x0, #8]
  427254:	bfi	w1, w2, #8, #10
  427258:	str	w1, [x0, #8]
  42725c:	ldr	x1, [x22]
  427260:	cbnz	x1, 4271f4 <_obstack_memory_used@@Base+0xe4e4>
  427264:	nop
  427268:	ldr	x22, [x20, #104]
  42726c:	mov	x0, x22
  427270:	ldrb	w2, [x0, #48]
  427274:	ldr	x1, [x0, #8]
  427278:	cmp	w2, #0xb
  42727c:	b.eq	4272bc <_obstack_memory_used@@Base+0xe5ac>  // b.none
  427280:	cmp	w2, #0x10
  427284:	b.eq	427460 <_obstack_memory_used@@Base+0xe750>  // b.none
  427288:	cbz	x1, 427294 <_obstack_memory_used@@Base+0xe584>
  42728c:	ldr	x2, [x0, #32]
  427290:	str	x2, [x1, #32]
  427294:	ldr	x2, [x0, #16]
  427298:	cbz	x2, 4272a4 <_obstack_memory_used@@Base+0xe594>
  42729c:	ldr	x3, [x0, #32]
  4272a0:	str	x3, [x2, #32]
  4272a4:	cbz	x1, 4272d4 <_obstack_memory_used@@Base+0xe5c4>
  4272a8:	mov	x0, x1
  4272ac:	ldrb	w2, [x0, #48]
  4272b0:	ldr	x1, [x0, #8]
  4272b4:	cmp	w2, #0xb
  4272b8:	b.ne	427280 <_obstack_memory_used@@Base+0xe570>  // b.any
  4272bc:	str	x0, [x1, #32]
  4272c0:	mov	x0, x1
  4272c4:	b	4272ac <_obstack_memory_used@@Base+0xe59c>
  4272c8:	ldr	x2, [x3, #16]
  4272cc:	mov	x1, x0
  4272d0:	mov	x0, x3
  4272d4:	cmp	x2, #0x0
  4272d8:	ccmp	x1, x2, #0x4, ne  // ne = any
  4272dc:	b.ne	427a00 <_obstack_memory_used@@Base+0xecf0>  // b.any
  4272e0:	ldr	x3, [x0]
  4272e4:	cbnz	x3, 4272c8 <_obstack_memory_used@@Base+0xe5b8>
  4272e8:	ldrb	w0, [x22, #48]
  4272ec:	mov	x24, #0x2                   	// #2
  4272f0:	ldr	x1, [x22, #56]
  4272f4:	cmp	w0, #0xb
  4272f8:	b.hi	427378 <_obstack_memory_used@@Base+0xe668>  // b.pmore
  4272fc:	nop
  427300:	cmp	w0, #0x9
  427304:	b.hi	4274e0 <_obstack_memory_used@@Base+0xe7d0>  // b.pmore
  427308:	cmp	w0, #0x4
  42730c:	b.eq	4274ac <_obstack_memory_used@@Base+0xe79c>  // b.none
  427310:	b.ls	42743c <_obstack_memory_used@@Base+0xe72c>  // b.plast
  427314:	sub	w0, w0, #0x8
  427318:	and	w0, w0, #0xff
  42731c:	cmp	w0, #0x1
  427320:	b.hi	427444 <_obstack_memory_used@@Base+0xe734>  // b.pmore
  427324:	ldr	x3, [x22, #32]
  427328:	add	x1, x1, x1, lsl #1
  42732c:	ldr	x2, [x20, #40]
  427330:	lsl	x1, x1, #3
  427334:	ldr	x26, [x3, #56]
  427338:	add	x27, x2, x1
  42733c:	mov	x0, #0x8                   	// #8
  427340:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x122f0>
  427344:	ldr	q0, [x3, #1088]
  427348:	str	q0, [x2, x1]
  42734c:	bl	402800 <malloc@plt>
  427350:	str	x0, [x27, #16]
  427354:	cbz	x0, 427bf8 <_obstack_memory_used@@Base+0xeee8>
  427358:	str	x26, [x0]
  42735c:	ldr	x27, [x22, #8]
  427360:	cbz	x27, 427394 <_obstack_memory_used@@Base+0xe684>
  427364:	mov	x22, x27
  427368:	ldrb	w0, [x22, #48]
  42736c:	ldr	x1, [x22, #56]
  427370:	cmp	w0, #0xb
  427374:	b.ls	427300 <_obstack_memory_used@@Base+0xe5f0>  // b.plast
  427378:	cmp	w0, #0xc
  42737c:	b.eq	427324 <_obstack_memory_used@@Base+0xe614>  // b.none
  427380:	cmp	w0, #0x10
  427384:	b.ne	427444 <_obstack_memory_used@@Base+0xe734>  // b.any
  427388:	ldr	x27, [x22, #8]
  42738c:	b	427360 <_obstack_memory_used@@Base+0xe650>
  427390:	mov	x22, x0
  427394:	ldr	x0, [x22, #16]
  427398:	cmp	x0, #0x0
  42739c:	cset	w26, eq  // eq = none
  4273a0:	cmp	x0, x27
  4273a4:	csinc	w26, w26, wzr, ne  // ne = any
  4273a8:	cbz	w26, 4279f4 <_obstack_memory_used@@Base+0xece4>
  4273ac:	ldr	x0, [x22]
  4273b0:	mov	x27, x22
  4273b4:	cbnz	x0, 427390 <_obstack_memory_used@@Base+0xe680>
  4273b8:	ldr	x1, [x20, #16]
  4273bc:	mov	w25, #0x0                   	// #0
  4273c0:	mov	x22, #0x0                   	// #0
  4273c4:	nop
  4273c8:	cmp	x1, x22
  4273cc:	b.eq	4273f4 <_obstack_memory_used@@Base+0xe6e4>  // b.none
  4273d0:	add	x24, x22, x22, lsl #1
  4273d4:	lsl	x24, x24, #3
  4273d8:	ldr	x0, [x20, #48]
  4273dc:	add	x0, x0, x24
  4273e0:	ldr	x0, [x0, #8]
  4273e4:	cbz	x0, 427408 <_obstack_memory_used@@Base+0xe6f8>
  4273e8:	add	x22, x22, #0x1
  4273ec:	cmp	x1, x22
  4273f0:	b.ne	4273d0 <_obstack_memory_used@@Base+0xe6c0>  // b.any
  4273f4:	cbz	w25, 427548 <_obstack_memory_used@@Base+0xe838>
  4273f8:	mov	w25, #0x0                   	// #0
  4273fc:	mov	x24, #0x0                   	// #0
  427400:	mov	x22, #0x0                   	// #0
  427404:	b	4273d8 <_obstack_memory_used@@Base+0xe6c8>
  427408:	mov	x2, x22
  42740c:	mov	x1, x20
  427410:	add	x0, sp, #0x68
  427414:	mov	w3, #0x1                   	// #1
  427418:	bl	41d610 <_obstack_memory_used@@Base+0x4900>
  42741c:	cbnz	w0, 426f80 <_obstack_memory_used@@Base+0xe270>
  427420:	ldr	x0, [x20, #48]
  427424:	add	x22, x22, #0x1
  427428:	add	x24, x0, x24
  42742c:	ldr	x0, [x24, #8]
  427430:	cbz	x0, 42747c <_obstack_memory_used@@Base+0xe76c>
  427434:	ldr	x1, [x20, #16]
  427438:	b	4273c8 <_obstack_memory_used@@Base+0xe6b8>
  42743c:	cmp	w0, #0x2
  427440:	b.eq	42735c <_obstack_memory_used@@Base+0xe64c>  // b.none
  427444:	ldr	x2, [x22, #32]
  427448:	ldr	x0, [x20, #24]
  42744c:	ldr	x27, [x22, #8]
  427450:	ldr	x2, [x2, #56]
  427454:	str	x2, [x0, x1, lsl #3]
  427458:	cbnz	x27, 427364 <_obstack_memory_used@@Base+0xe654>
  42745c:	b	427394 <_obstack_memory_used@@Base+0xe684>
  427460:	ldr	x2, [x0, #16]
  427464:	ldr	x3, [x2, #24]
  427468:	str	x3, [x1, #32]
  42746c:	ldr	x0, [x0, #32]
  427470:	str	x0, [x2, #32]
  427474:	mov	x0, x1
  427478:	b	4272ac <_obstack_memory_used@@Base+0xe59c>
  42747c:	ldr	x0, [sp, #120]
  427480:	bl	402ae0 <free@plt>
  427484:	ldr	x1, [x20, #16]
  427488:	cmp	x22, x1
  42748c:	b.eq	42789c <_obstack_memory_used@@Base+0xeb8c>  // b.none
  427490:	add	x24, x22, x22, lsl #1
  427494:	mov	w25, w26
  427498:	ldr	x0, [x20, #48]
  42749c:	lsl	x24, x24, #3
  4274a0:	add	x0, x0, x24
  4274a4:	ldr	x0, [x0, #8]
  4274a8:	b	4273e4 <_obstack_memory_used@@Base+0xe6d4>
  4274ac:	ldr	x2, [x22, #32]
  4274b0:	ldr	x0, [x20, #24]
  4274b4:	ldr	x26, [x2, #56]
  4274b8:	str	x26, [x0, x1, lsl #3]
  4274bc:	ldrb	w0, [x22, #48]
  4274c0:	cmp	w0, #0x4
  4274c4:	b.ne	42735c <_obstack_memory_used@@Base+0xe64c>  // b.any
  4274c8:	add	x1, x1, x1, lsl #1
  4274cc:	mov	x0, #0x8                   	// #8
  4274d0:	ldr	x2, [x20, #40]
  4274d4:	lsl	x1, x1, #3
  4274d8:	add	x27, x2, x1
  4274dc:	b	427340 <_obstack_memory_used@@Base+0xe630>
  4274e0:	ldrb	w0, [x20, #176]
  4274e4:	orr	w0, w0, #0x1
  4274e8:	strb	w0, [x20, #176]
  4274ec:	ldr	x27, [x22, #8]
  4274f0:	cbz	x27, 427a2c <_obstack_memory_used@@Base+0xed1c>
  4274f4:	ldr	x0, [x27, #24]
  4274f8:	ldr	x28, [x0, #56]
  4274fc:	ldr	x0, [x22, #16]
  427500:	cbz	x0, 427a20 <_obstack_memory_used@@Base+0xed10>
  427504:	ldr	x0, [x0, #24]
  427508:	ldr	x25, [x0, #56]
  42750c:	add	x1, x1, x1, lsl #1
  427510:	ldr	x2, [x20, #40]
  427514:	mov	x0, #0x10                  	// #16
  427518:	add	x26, x2, x1, lsl #3
  42751c:	str	x24, [x2, x1, lsl #3]
  427520:	bl	402800 <malloc@plt>
  427524:	str	x0, [x26, #16]
  427528:	cbz	x0, 426f7c <_obstack_memory_used@@Base+0xe26c>
  42752c:	cmp	x28, x25
  427530:	b.eq	427a0c <_obstack_memory_used@@Base+0xecfc>  // b.none
  427534:	str	x24, [x26, #8]
  427538:	b.ge	427a38 <_obstack_memory_used@@Base+0xed28>  // b.tcont
  42753c:	stp	x28, x25, [x0]
  427540:	cbnz	x27, 427364 <_obstack_memory_used@@Base+0xe654>
  427544:	b	427394 <_obstack_memory_used@@Base+0xe684>
  427548:	ldrb	w0, [x21, #56]
  42754c:	tbnz	w0, #4, 427560 <_obstack_memory_used@@Base+0xe850>
  427550:	ldr	x0, [x21, #48]
  427554:	cbz	x0, 427560 <_obstack_memory_used@@Base+0xe850>
  427558:	ldrb	w0, [x20, #176]
  42755c:	tbnz	w0, #0, 427568 <_obstack_memory_used@@Base+0xe858>
  427560:	ldr	x0, [x20, #152]
  427564:	cbz	x0, 427658 <_obstack_memory_used@@Base+0xe948>
  427568:	add	x0, x22, x22, lsl #1
  42756c:	lsl	x0, x0, #3
  427570:	bl	402800 <malloc@plt>
  427574:	str	x0, [x20, #56]
  427578:	cbz	x0, 427b78 <_obstack_memory_used@@Base+0xee68>
  42757c:	mov	x2, #0x0                   	// #0
  427580:	mov	x1, #0x0                   	// #0
  427584:	cbnz	x22, 427590 <_obstack_memory_used@@Base+0xe880>
  427588:	b	427658 <_obstack_memory_used@@Base+0xe948>
  42758c:	ldr	x0, [x20, #56]
  427590:	add	x0, x0, x2
  427594:	add	x1, x1, #0x1
  427598:	add	x2, x2, #0x18
  42759c:	stp	xzr, xzr, [x0]
  4275a0:	str	xzr, [x0, #16]
  4275a4:	ldr	x0, [x20, #16]
  4275a8:	cmp	x0, x1
  4275ac:	b.hi	42758c <_obstack_memory_used@@Base+0xe87c>  // b.pmore
  4275b0:	cbz	x0, 427658 <_obstack_memory_used@@Base+0xe948>
  4275b4:	ldr	x6, [x20, #48]
  4275b8:	mov	x26, #0x0                   	// #0
  4275bc:	add	x28, x26, x26, lsl #1
  4275c0:	lsl	x28, x28, #3
  4275c4:	add	x5, x6, x28
  4275c8:	ldp	x1, x27, [x5, #8]
  4275cc:	cmp	x1, #0x0
  4275d0:	b.le	427648 <_obstack_memory_used@@Base+0xe938>
  4275d4:	mov	x24, #0x0                   	// #0
  4275d8:	b	4275f8 <_obstack_memory_used@@Base+0xe8e8>
  4275dc:	add	x2, x1, #0x1
  4275e0:	str	x2, [x22, #8]
  4275e4:	str	x26, [x0, x1, lsl #3]
  4275e8:	add	x24, x24, #0x1
  4275ec:	ldr	x0, [x5, #8]
  4275f0:	cmp	x24, x0
  4275f4:	b.ge	427644 <_obstack_memory_used@@Base+0xe934>  // b.tcont
  4275f8:	ldr	x2, [x27, x24, lsl #3]
  4275fc:	ldr	x3, [x20, #56]
  427600:	add	x2, x2, x2, lsl #1
  427604:	add	x22, x3, x2, lsl #3
  427608:	ldr	x4, [x3, x2, lsl #3]
  42760c:	ldp	x1, x0, [x22, #8]
  427610:	cmp	x4, x1
  427614:	b.ne	4275dc <_obstack_memory_used@@Base+0xe8cc>  // b.any
  427618:	add	x1, x1, #0x1
  42761c:	lsl	x4, x1, #1
  427620:	str	x4, [x3, x2, lsl #3]
  427624:	lsl	x1, x1, #4
  427628:	bl	402930 <realloc@plt>
  42762c:	cbz	x0, 426f7c <_obstack_memory_used@@Base+0xe26c>
  427630:	ldr	x6, [x20, #48]
  427634:	str	x0, [x22, #16]
  427638:	ldr	x1, [x22, #8]
  42763c:	add	x5, x6, x28
  427640:	b	4275dc <_obstack_memory_used@@Base+0xe8cc>
  427644:	ldr	x0, [x20, #16]
  427648:	add	x26, x26, #0x1
  42764c:	cmp	x0, x26
  427650:	b.hi	4275bc <_obstack_memory_used@@Base+0xe8ac>  // b.pmore
  427654:	nop
  427658:	ldrb	w0, [x19, #176]
  42765c:	cmp	x23, #0x0
  427660:	str	wzr, [sp, #96]
  427664:	cset	w1, eq  // eq = none
  427668:	ands	w1, w1, w0, lsr #2
  42766c:	b.ne	4278dc <_obstack_memory_used@@Base+0xebcc>  // b.any
  427670:	ldr	x0, [x19, #104]
  427674:	ldr	x20, [x19, #48]
  427678:	ldr	x0, [x0, #24]
  42767c:	ldr	x0, [x0, #56]
  427680:	str	x0, [x19, #144]
  427684:	add	x0, x0, x0, lsl #1
  427688:	add	x20, x20, x0, lsl #3
  42768c:	ldr	x22, [x20, #8]
  427690:	str	x22, [sp, #112]
  427694:	cmp	x22, #0x0
  427698:	b.le	42788c <_obstack_memory_used@@Base+0xeb7c>
  42769c:	lsl	x24, x22, #3
  4276a0:	str	x22, [sp, #104]
  4276a4:	mov	x0, x24
  4276a8:	bl	402800 <malloc@plt>
  4276ac:	str	x0, [sp, #120]
  4276b0:	mov	x23, x0
  4276b4:	cbz	x0, 427c2c <_obstack_memory_used@@Base+0xef1c>
  4276b8:	ldr	x1, [x20, #16]
  4276bc:	mov	x2, x24
  4276c0:	bl	402650 <memcpy@plt>
  4276c4:	str	wzr, [sp, #100]
  4276c8:	ldr	x0, [x19, #152]
  4276cc:	mov	x2, #0x0                   	// #0
  4276d0:	cmp	x0, #0x0
  4276d4:	b.le	4277d0 <_obstack_memory_used@@Base+0xeac0>
  4276d8:	ldr	x1, [x23, x2, lsl #3]
  4276dc:	ldr	x0, [x19]
  4276e0:	add	x5, x0, x1, lsl #4
  4276e4:	ldrb	w3, [x5, #8]
  4276e8:	cmp	w3, #0x4
  4276ec:	b.eq	427718 <_obstack_memory_used@@Base+0xea08>  // b.none
  4276f0:	add	x2, x2, #0x1
  4276f4:	cmp	x2, x22
  4276f8:	b.ge	4277d0 <_obstack_memory_used@@Base+0xeac0>  // b.tcont
  4276fc:	ldr	x23, [sp, #120]
  427700:	ldr	x0, [x19]
  427704:	ldr	x1, [x23, x2, lsl #3]
  427708:	add	x5, x0, x1, lsl #4
  42770c:	ldrb	w3, [x5, #8]
  427710:	cmp	w3, #0x4
  427714:	b.ne	4276f0 <_obstack_memory_used@@Base+0xe9e0>  // b.any
  427718:	cmp	x22, #0x0
  42771c:	b.le	427a9c <_obstack_memory_used@@Base+0xed8c>
  427720:	mov	x3, #0x0                   	// #0
  427724:	b	427734 <_obstack_memory_used@@Base+0xea24>
  427728:	add	x3, x3, #0x1
  42772c:	cmp	x3, x22
  427730:	b.eq	4276f0 <_obstack_memory_used@@Base+0xe9e0>  // b.none
  427734:	ldr	x4, [x23, x3, lsl #3]
  427738:	lsl	x4, x4, #4
  42773c:	add	x6, x0, x4
  427740:	ldrb	w6, [x6, #8]
  427744:	cmp	w6, #0x9
  427748:	b.ne	427728 <_obstack_memory_used@@Base+0xea18>  // b.any
  42774c:	ldr	x6, [x0, x4]
  427750:	ldr	x4, [x5]
  427754:	cmp	x6, x4
  427758:	b.ne	427728 <_obstack_memory_used@@Base+0xea18>  // b.any
  42775c:	ldr	x3, [x19, #40]
  427760:	add	x1, x1, x1, lsl #1
  427764:	sub	x0, x22, #0x1
  427768:	mov	x5, #0x0                   	// #0
  42776c:	add	x1, x3, x1, lsl #3
  427770:	ldr	x1, [x1, #16]
  427774:	ldr	x4, [x1]
  427778:	b	427794 <_obstack_memory_used@@Base+0xea84>
  42777c:	add	x3, x0, x5
  427780:	lsr	x3, x3, #1
  427784:	ldr	x1, [x23, x3, lsl #3]
  427788:	cmp	x4, x1
  42778c:	b.gt	427884 <_obstack_memory_used@@Base+0xeb74>
  427790:	mov	x0, x3
  427794:	cmp	x0, x5
  427798:	b.hi	42777c <_obstack_memory_used@@Base+0xea6c>  // b.pmore
  42779c:	ldr	x0, [x23, x5, lsl #3]
  4277a0:	cmp	x4, x0
  4277a4:	b.eq	4276f0 <_obstack_memory_used@@Base+0xe9e0>  // b.none
  4277a8:	ldr	x1, [x19, #48]
  4277ac:	add	x4, x4, x4, lsl #1
  4277b0:	add	x0, sp, #0x68
  4277b4:	add	x1, x1, x4, lsl #3
  4277b8:	bl	41a230 <_obstack_memory_used@@Base+0x1520>
  4277bc:	cbnz	w0, 42780c <_obstack_memory_used@@Base+0xeafc>
  4277c0:	ldr	x22, [sp, #112]
  4277c4:	mov	x2, #0x1                   	// #1
  4277c8:	cmp	x2, x22
  4277cc:	b.lt	4276fc <_obstack_memory_used@@Base+0xe9ec>  // b.tstop
  4277d0:	add	x0, sp, #0x64
  4277d4:	add	x2, sp, #0x68
  4277d8:	mov	x1, x19
  4277dc:	mov	w3, #0x0                   	// #0
  4277e0:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4277e4:	str	x0, [x19, #72]
  4277e8:	cbz	x0, 4279ec <_obstack_memory_used@@Base+0xecdc>
  4277ec:	ldrsb	w1, [x0, #104]
  4277f0:	tbnz	w1, #31, 42798c <_obstack_memory_used@@Base+0xec7c>
  4277f4:	dup	v0.2d, x0
  4277f8:	str	x0, [x19, #96]
  4277fc:	str	q0, [x19, #80]
  427800:	ldr	x0, [sp, #120]
  427804:	bl	402ae0 <free@plt>
  427808:	mov	w0, #0x0                   	// #0
  42780c:	ldr	x22, [x21]
  427810:	str	w0, [sp, #96]
  427814:	ldr	x20, [x22, #112]
  427818:	cbz	x20, 427830 <_obstack_memory_used@@Base+0xeb20>
  42781c:	nop
  427820:	mov	x0, x20
  427824:	ldr	x20, [x20]
  427828:	bl	402ae0 <free@plt>
  42782c:	cbnz	x20, 427820 <_obstack_memory_used@@Base+0xeb10>
  427830:	ldr	x0, [x22, #32]
  427834:	mov	w1, #0xf                   	// #15
  427838:	stp	xzr, xzr, [x22, #104]
  42783c:	str	w1, [x22, #128]
  427840:	bl	402ae0 <free@plt>
  427844:	str	xzr, [x22, #32]
  427848:	ldr	x0, [sp, #144]
  42784c:	bl	402ae0 <free@plt>
  427850:	ldr	x0, [sp, #152]
  427854:	bl	402ae0 <free@plt>
  427858:	ldrb	w0, [sp, #267]
  42785c:	cbnz	w0, 4278c0 <_obstack_memory_used@@Base+0xebb0>
  427860:	ldr	w0, [sp, #96]
  427864:	cbnz	w0, 426fd0 <_obstack_memory_used@@Base+0xe2c0>
  427868:	ldp	x19, x20, [sp, #16]
  42786c:	ldp	x21, x22, [sp, #32]
  427870:	ldp	x23, x24, [sp, #48]
  427874:	ldp	x25, x26, [sp, #64]
  427878:	ldp	x27, x28, [sp, #80]
  42787c:	ldp	x29, x30, [sp], #288
  427880:	ret
  427884:	add	x5, x3, #0x1
  427888:	b	427794 <_obstack_memory_used@@Base+0xea84>
  42788c:	str	wzr, [sp, #100]
  427890:	stp	xzr, xzr, [sp, #104]
  427894:	str	xzr, [sp, #120]
  427898:	b	4277d0 <_obstack_memory_used@@Base+0xeac0>
  42789c:	ldr	x0, [x20, #48]
  4278a0:	mov	x22, #0x0                   	// #0
  4278a4:	mov	w25, #0x0                   	// #0
  4278a8:	mov	x24, #0x0                   	// #0
  4278ac:	ldr	x0, [x0, #8]
  4278b0:	b	4273e4 <_obstack_memory_used@@Base+0xe6d4>
  4278b4:	mov	w0, #0xc                   	// #12
  4278b8:	str	w0, [sp, #96]
  4278bc:	b	426f88 <_obstack_memory_used@@Base+0xe278>
  4278c0:	ldr	x0, [sp, #136]
  4278c4:	bl	402ae0 <free@plt>
  4278c8:	b	427860 <_obstack_memory_used@@Base+0xeb50>
  4278cc:	add	x0, sp, #0x80
  4278d0:	bl	419490 <_obstack_memory_used@@Base+0x780>
  4278d4:	str	wzr, [sp, #96]
  4278d8:	b	426c40 <_obstack_memory_used@@Base+0xdf30>
  4278dc:	ldr	x0, [x21, #40]
  4278e0:	cbnz	x0, 427670 <_obstack_memory_used@@Base+0xe960>
  4278e4:	ldr	x6, [x19, #16]
  4278e8:	cbz	x6, 427c78 <_obstack_memory_used@@Base+0xef68>
  4278ec:	ldr	x7, [x19]
  4278f0:	mov	w2, #0x10001               	// #65537
  4278f4:	mov	w8, #0x0                   	// #0
  4278f8:	mov	x5, #0x0                   	// #0
  4278fc:	mov	x4, x7
  427900:	mov	x3, #0x1                   	// #1
  427904:	movk	x2, #0x1, lsl #48
  427908:	ldrb	w0, [x4, #8]
  42790c:	cmp	w0, #0x5
  427910:	b.eq	427c4c <_obstack_memory_used@@Base+0xef3c>  // b.none
  427914:	b.hi	427ba0 <_obstack_memory_used@@Base+0xee90>  // b.pmore
  427918:	cmp	w0, #0x3
  42791c:	b.eq	427c34 <_obstack_memory_used@@Base+0xef24>  // b.none
  427920:	cmp	w0, #0x4
  427924:	b.ne	427b88 <_obstack_memory_used@@Base+0xee78>  // b.any
  427928:	add	x5, x5, #0x1
  42792c:	add	x4, x4, #0x10
  427930:	cmp	x5, x6
  427934:	b.ne	427908 <_obstack_memory_used@@Base+0xebf8>  // b.any
  427938:	orr	w8, w8, w25
  42793c:	add	x5, x7, x5, lsl #4
  427940:	tst	w8, #0xff
  427944:	mov	w1, #0x7                   	// #7
  427948:	b.ne	427968 <_obstack_memory_used@@Base+0xec58>  // b.any
  42794c:	b	427c74 <_obstack_memory_used@@Base+0xef64>
  427950:	cmp	w0, #0x5
  427954:	b.ne	42795c <_obstack_memory_used@@Base+0xec4c>  // b.any
  427958:	strb	w1, [x7, #8]
  42795c:	add	x7, x7, #0x10
  427960:	cmp	x7, x5
  427964:	b.eq	427c78 <_obstack_memory_used@@Base+0xef68>  // b.none
  427968:	ldrb	w0, [x7, #8]
  42796c:	cmp	w0, #0x1
  427970:	b.ne	427950 <_obstack_memory_used@@Base+0xec40>  // b.any
  427974:	ldrsb	w0, [x7]
  427978:	tbz	w0, #31, 42795c <_obstack_memory_used@@Base+0xec4c>
  42797c:	ldrb	w0, [x7, #10]
  427980:	and	w0, w0, #0xffffffdf
  427984:	strb	w0, [x7, #10]
  427988:	b	42795c <_obstack_memory_used@@Base+0xec4c>
  42798c:	add	x2, sp, #0x68
  427990:	mov	x1, x19
  427994:	mov	w3, #0x1                   	// #1
  427998:	add	x0, sp, #0x64
  42799c:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4279a0:	str	x0, [x19, #80]
  4279a4:	add	x2, sp, #0x68
  4279a8:	mov	x1, x19
  4279ac:	mov	w3, #0x2                   	// #2
  4279b0:	add	x0, sp, #0x64
  4279b4:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4279b8:	str	x0, [x19, #88]
  4279bc:	mov	x1, x19
  4279c0:	add	x2, sp, #0x68
  4279c4:	add	x0, sp, #0x64
  4279c8:	mov	w3, #0x6                   	// #6
  4279cc:	bl	41f078 <_obstack_memory_used@@Base+0x6368>
  4279d0:	str	x0, [x19, #96]
  4279d4:	ldr	x1, [x19, #80]
  4279d8:	cbz	x1, 4279ec <_obstack_memory_used@@Base+0xecdc>
  4279dc:	ldr	x1, [x19, #88]
  4279e0:	cmp	x1, #0x0
  4279e4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4279e8:	b.ne	427800 <_obstack_memory_used@@Base+0xeaf0>  // b.any
  4279ec:	ldr	w0, [sp, #100]
  4279f0:	b	42780c <_obstack_memory_used@@Base+0xeafc>
  4279f4:	mov	x27, x0
  4279f8:	mov	x22, x27
  4279fc:	b	427368 <_obstack_memory_used@@Base+0xe658>
  427a00:	mov	x1, x2
  427a04:	mov	x0, x1
  427a08:	b	4272ac <_obstack_memory_used@@Base+0xe59c>
  427a0c:	mov	x1, #0x1                   	// #1
  427a10:	str	x1, [x26, #8]
  427a14:	str	x28, [x0]
  427a18:	cbnz	x27, 427364 <_obstack_memory_used@@Base+0xe654>
  427a1c:	b	427394 <_obstack_memory_used@@Base+0xe684>
  427a20:	ldr	x0, [x22, #32]
  427a24:	ldr	x25, [x0, #56]
  427a28:	b	42750c <_obstack_memory_used@@Base+0xe7fc>
  427a2c:	ldr	x0, [x22, #32]
  427a30:	ldr	x28, [x0, #56]
  427a34:	b	4274fc <_obstack_memory_used@@Base+0xe7ec>
  427a38:	stp	x25, x28, [x0]
  427a3c:	cbnz	x27, 427364 <_obstack_memory_used@@Base+0xe654>
  427a40:	b	427394 <_obstack_memory_used@@Base+0xe684>
  427a44:	ldr	x2, [sp, #216]
  427a48:	ldr	x20, [sp, #176]
  427a4c:	cmp	x2, x27
  427a50:	csel	x27, x2, x27, le
  427a54:	cmp	x27, x20
  427a58:	b.le	4271a0 <_obstack_memory_used@@Base+0xe490>
  427a5c:	bl	402940 <__ctype_toupper_loc@plt>
  427a60:	ldr	x1, [sp, #128]
  427a64:	ldr	x2, [sp, #168]
  427a68:	add	x1, x1, x20
  427a6c:	ldr	x3, [sp, #248]
  427a70:	ldrb	w1, [x1, x2]
  427a74:	and	x2, x1, #0xff
  427a78:	cbnz	x3, 427b08 <_obstack_memory_used@@Base+0xedf8>
  427a7c:	ldr	x2, [x0]
  427a80:	ldr	w1, [x2, x1, lsl #2]
  427a84:	strb	w1, [x22, x20]
  427a88:	add	x20, x20, #0x1
  427a8c:	cmp	x27, x20
  427a90:	b.eq	4271a8 <_obstack_memory_used@@Base+0xe498>  // b.none
  427a94:	ldr	x22, [sp, #136]
  427a98:	b	427a60 <_obstack_memory_used@@Base+0xed50>
  427a9c:	b.eq	4276f0 <_obstack_memory_used@@Base+0xe9e0>  // b.none
  427aa0:	ldr	x0, [x19, #40]
  427aa4:	add	x1, x1, x1, lsl #1
  427aa8:	add	x1, x0, x1, lsl #3
  427aac:	ldr	x0, [x1, #16]
  427ab0:	ldr	x4, [x0]
  427ab4:	b	4277a8 <_obstack_memory_used@@Base+0xea98>
  427ab8:	ldr	x0, [sp, #136]
  427abc:	mov	x1, x25
  427ac0:	bl	402930 <realloc@plt>
  427ac4:	cbz	x0, 427b78 <_obstack_memory_used@@Base+0xee68>
  427ac8:	ldrb	w4, [sp, #267]
  427acc:	ldr	w2, [x19, #180]
  427ad0:	str	x0, [sp, #136]
  427ad4:	str	x25, [sp, #192]
  427ad8:	b	426b18 <_obstack_memory_used@@Base+0xde08>
  427adc:	mov	x0, x19
  427ae0:	mov	x1, #0xe8                  	// #232
  427ae4:	bl	402930 <realloc@plt>
  427ae8:	mov	x19, x0
  427aec:	cbz	x0, 427cb8 <_obstack_memory_used@@Base+0xefa8>
  427af0:	mov	x0, #0xe8                  	// #232
  427af4:	stp	x19, x0, [x21]
  427af8:	b	42696c <_obstack_memory_used@@Base+0xdc5c>
  427afc:	mov	x23, #0x0                   	// #0
  427b00:	mov	x1, #0x1                   	// #1
  427b04:	b	4269d0 <_obstack_memory_used@@Base+0xdcc0>
  427b08:	ldrb	w2, [x3, x2]
  427b0c:	ldr	x1, [x0]
  427b10:	ldr	w1, [x1, x2, lsl #2]
  427b14:	strb	w1, [x22, x20]
  427b18:	add	x20, x20, #0x1
  427b1c:	cmp	x27, x20
  427b20:	b.eq	4271a8 <_obstack_memory_used@@Base+0xe498>  // b.none
  427b24:	ldr	x22, [sp, #136]
  427b28:	b	427a60 <_obstack_memory_used@@Base+0xed50>
  427b2c:	mov	x0, #0x3c8                 	// #968
  427b30:	bl	402800 <malloc@plt>
  427b34:	mov	x22, x0
  427b38:	cbz	x0, 427cac <_obstack_memory_used@@Base+0xef9c>
  427b3c:	ldr	x0, [x25, #112]
  427b40:	str	x0, [x22]
  427b44:	mov	w5, #0x1                   	// #1
  427b48:	mov	w1, #0x0                   	// #0
  427b4c:	mov	x0, #0x8                   	// #8
  427b50:	str	x22, [x25, #112]
  427b54:	b	426cc4 <_obstack_memory_used@@Base+0xdfb4>
  427b58:	mov	w0, #0xc                   	// #12
  427b5c:	str	w0, [sp, #96]
  427b60:	str	xzr, [x19, #104]
  427b64:	b	426f88 <_obstack_memory_used@@Base+0xe278>
  427b68:	mov	x1, x2
  427b6c:	b	426ef8 <_obstack_memory_used@@Base+0xe1e8>
  427b70:	str	wzr, [sp, #96]
  427b74:	b	426c40 <_obstack_memory_used@@Base+0xdf30>
  427b78:	mov	w0, #0xc                   	// #12
  427b7c:	ldr	x20, [x21]
  427b80:	str	w0, [sp, #96]
  427b84:	b	426f88 <_obstack_memory_used@@Base+0xe278>
  427b88:	cmp	w0, #0x1
  427b8c:	b.ne	427bbc <_obstack_memory_used@@Base+0xeeac>  // b.any
  427b90:	ldrsb	w0, [x4]
  427b94:	cmp	w0, #0x0
  427b98:	csel	w8, w8, w1, ge  // ge = tcont
  427b9c:	b	427928 <_obstack_memory_used@@Base+0xec18>
  427ba0:	cmp	w0, #0xb
  427ba4:	b.hi	427bc8 <_obstack_memory_used@@Base+0xeeb8>  // b.pmore
  427ba8:	cmp	w0, #0x7
  427bac:	b.hi	427928 <_obstack_memory_used@@Base+0xec18>  // b.pmore
  427bb0:	cmp	w0, #0x6
  427bb4:	b.eq	427670 <_obstack_memory_used@@Base+0xe960>  // b.none
  427bb8:	bl	4029e0 <abort@plt>
  427bbc:	cmp	w0, #0x2
  427bc0:	b.eq	427928 <_obstack_memory_used@@Base+0xec18>  // b.none
  427bc4:	bl	4029e0 <abort@plt>
  427bc8:	cmp	w0, #0xc
  427bcc:	b.ne	427bb8 <_obstack_memory_used@@Base+0xeea8>  // b.any
  427bd0:	ldr	w0, [x4]
  427bd4:	cmp	w0, #0x40
  427bd8:	b.hi	427c54 <_obstack_memory_used@@Base+0xef44>  // b.pmore
  427bdc:	cmp	w0, #0xf
  427be0:	b.ls	427670 <_obstack_memory_used@@Base+0xe960>  // b.plast
  427be4:	sub	w0, w0, #0x10
  427be8:	lsl	x0, x3, x0
  427bec:	tst	x0, x2
  427bf0:	b.eq	427670 <_obstack_memory_used@@Base+0xe960>  // b.none
  427bf4:	b	427928 <_obstack_memory_used@@Base+0xec18>
  427bf8:	mov	w0, #0xc                   	// #12
  427bfc:	stp	xzr, xzr, [x27]
  427c00:	b	426f80 <_obstack_memory_used@@Base+0xe270>
  427c04:	mov	x0, #0x3c8                 	// #968
  427c08:	bl	402800 <malloc@plt>
  427c0c:	cbz	x0, 427ca4 <_obstack_memory_used@@Base+0xef94>
  427c10:	ldr	x1, [x25, #112]
  427c14:	str	x1, [x0]
  427c18:	mov	x4, #0x8                   	// #8
  427c1c:	mov	w6, #0x1                   	// #1
  427c20:	mov	w1, #0x0                   	// #0
  427c24:	str	x0, [x25, #112]
  427c28:	b	426d38 <_obstack_memory_used@@Base+0xe028>
  427c2c:	mov	w0, #0xc                   	// #12
  427c30:	b	42780c <_obstack_memory_used@@Base+0xeafc>
  427c34:	ldr	x0, [x4]
  427c38:	ldr	x9, [x0, #16]
  427c3c:	cbnz	x9, 427670 <_obstack_memory_used@@Base+0xe960>
  427c40:	ldr	x0, [x0, #24]
  427c44:	cbz	x0, 427928 <_obstack_memory_used@@Base+0xec18>
  427c48:	b	427670 <_obstack_memory_used@@Base+0xe960>
  427c4c:	mov	w25, w1
  427c50:	b	427928 <_obstack_memory_used@@Base+0xec18>
  427c54:	cmp	w0, #0x80
  427c58:	b.eq	427928 <_obstack_memory_used@@Base+0xec18>  // b.none
  427c5c:	b	427670 <_obstack_memory_used@@Base+0xe960>
  427c60:	mov	x2, x1
  427c64:	b	426c34 <_obstack_memory_used@@Base+0xdf24>
  427c68:	ldr	x20, [x21]
  427c6c:	str	xzr, [x19, #104]
  427c70:	b	426f88 <_obstack_memory_used@@Base+0xe278>
  427c74:	mov	w25, #0x0                   	// #0
  427c78:	ldr	x2, [x19, #152]
  427c7c:	mov	w1, #0x1                   	// #1
  427c80:	ldrb	w0, [x19, #176]
  427c84:	cmp	x2, #0x0
  427c88:	str	w1, [x19, #180]
  427c8c:	ccmp	w25, #0x0, #0x0, le
  427c90:	and	w1, w0, #0xfffffff9
  427c94:	cset	w0, ne  // ne = any
  427c98:	orr	w0, w1, w0, lsl #1
  427c9c:	strb	w0, [x19, #176]
  427ca0:	b	427670 <_obstack_memory_used@@Base+0xe960>
  427ca4:	mov	x0, #0x0                   	// #0
  427ca8:	b	426d88 <_obstack_memory_used@@Base+0xe078>
  427cac:	cbz	x24, 427b58 <_obstack_memory_used@@Base+0xee48>
  427cb0:	mov	x22, #0x0                   	// #0
  427cb4:	b	426d14 <_obstack_memory_used@@Base+0xe004>
  427cb8:	mov	w0, #0xc                   	// #12
  427cbc:	b	426fe8 <_obstack_memory_used@@Base+0xe2d8>
  427cc0:	stp	x29, x30, [sp, #-16]!
  427cc4:	adrp	x3, 441000 <_obstack_memory_used@@Base+0x282f0>
  427cc8:	mov	x5, x2
  427ccc:	mov	x29, sp
  427cd0:	ldr	x3, [x3, #3584]
  427cd4:	mov	w7, #0x6f                  	// #111
  427cd8:	ldrb	w6, [x2, #56]
  427cdc:	mov	x2, x1
  427ce0:	mov	x1, x0
  427ce4:	mov	x0, x5
  427ce8:	ubfx	w4, w3, #25, #1
  427cec:	and	w6, w6, w7
  427cf0:	ubfiz	w4, w4, #4, #4
  427cf4:	orr	w4, w4, #0xffffff80
  427cf8:	orr	w4, w4, w6
  427cfc:	strb	w4, [x5, #56]
  427d00:	bl	426920 <_obstack_memory_used@@Base+0xdc10>
  427d04:	cbz	w0, 427d34 <_obstack_memory_used@@Base+0xf024>
  427d08:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  427d0c:	add	x1, x1, #0xdd0
  427d10:	add	x4, x1, #0x1a0
  427d14:	mov	w3, w0
  427d18:	ldp	x29, x30, [sp], #16
  427d1c:	add	x1, x1, #0x20
  427d20:	ldr	x3, [x4, w3, sxtw #3]
  427d24:	mov	w2, #0x5                   	// #5
  427d28:	mov	x0, #0x0                   	// #0
  427d2c:	add	x1, x1, x3
  427d30:	b	402c20 <dcgettext@plt>
  427d34:	mov	x0, #0x0                   	// #0
  427d38:	ldp	x29, x30, [sp], #16
  427d3c:	ret
  427d40:	adrp	x1, 441000 <_obstack_memory_used@@Base+0x282f0>
  427d44:	mov	x2, x0
  427d48:	ldr	x0, [x1, #3584]
  427d4c:	str	x2, [x1, #3584]
  427d50:	ret
  427d54:	nop
  427d58:	stp	x29, x30, [sp, #-48]!
  427d5c:	mov	x2, #0x100                 	// #256
  427d60:	mov	w1, #0x0                   	// #0
  427d64:	mov	x29, sp
  427d68:	stp	x19, x20, [sp, #16]
  427d6c:	mov	x19, x0
  427d70:	ldr	x20, [x0]
  427d74:	str	x21, [sp, #32]
  427d78:	ldr	x21, [x0, #32]
  427d7c:	mov	x0, x21
  427d80:	bl	4028d0 <memset@plt>
  427d84:	ldr	x1, [x20, #72]
  427d88:	mov	x0, x19
  427d8c:	mov	x3, x21
  427d90:	add	x2, x1, #0x18
  427d94:	add	x1, x1, #0x10
  427d98:	bl	41bb58 <_obstack_memory_used@@Base+0x2e48>
  427d9c:	ldp	x1, x0, [x20, #72]
  427da0:	cmp	x1, x0
  427da4:	b.eq	427dc0 <_obstack_memory_used@@Base+0xf0b0>  // b.none
  427da8:	add	x2, x0, #0x18
  427dac:	add	x1, x0, #0x10
  427db0:	mov	x3, x21
  427db4:	mov	x0, x19
  427db8:	bl	41bb58 <_obstack_memory_used@@Base+0x2e48>
  427dbc:	ldr	x0, [x20, #72]
  427dc0:	ldr	x1, [x20, #88]
  427dc4:	cmp	x1, x0
  427dc8:	b.eq	427de4 <_obstack_memory_used@@Base+0xf0d4>  // b.none
  427dcc:	add	x2, x1, #0x18
  427dd0:	mov	x0, x19
  427dd4:	mov	x3, x21
  427dd8:	add	x1, x1, #0x10
  427ddc:	bl	41bb58 <_obstack_memory_used@@Base+0x2e48>
  427de0:	ldr	x0, [x20, #72]
  427de4:	ldr	x1, [x20, #96]
  427de8:	cmp	x1, x0
  427dec:	b.eq	427e04 <_obstack_memory_used@@Base+0xf0f4>  // b.none
  427df0:	add	x2, x1, #0x18
  427df4:	mov	x3, x21
  427df8:	add	x1, x1, #0x10
  427dfc:	mov	x0, x19
  427e00:	bl	41bb58 <_obstack_memory_used@@Base+0x2e48>
  427e04:	ldrb	w1, [x19, #56]
  427e08:	mov	w0, #0x0                   	// #0
  427e0c:	ldr	x21, [sp, #32]
  427e10:	orr	w1, w1, #0x8
  427e14:	strb	w1, [x19, #56]
  427e18:	ldp	x19, x20, [sp, #16]
  427e1c:	ldp	x29, x30, [sp], #48
  427e20:	ret
  427e24:	nop
  427e28:	sub	sp, sp, #0x80
  427e2c:	cmp	x3, #0x0
  427e30:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  427e34:	stp	x29, x30, [sp, #16]
  427e38:	add	x29, sp, #0x10
  427e3c:	stp	x19, x20, [sp, #32]
  427e40:	stp	x23, x24, [sp, #64]
  427e44:	add	x24, x3, x4
  427e48:	b.gt	4280f0 <_obstack_memory_used@@Base+0xf3e0>
  427e4c:	stp	x21, x22, [sp, #48]
  427e50:	mov	x19, x3
  427e54:	mov	x21, x0
  427e58:	stp	x25, x26, [sp, #80]
  427e5c:	mov	x22, x6
  427e60:	mov	x25, x2
  427e64:	stp	x27, x28, [sp, #96]
  427e68:	and	w26, w7, #0xff
  427e6c:	cmp	x24, x2
  427e70:	b.gt	4280d8 <_obstack_memory_used@@Base+0xf3c8>
  427e74:	cmp	x4, #0x0
  427e78:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  427e7c:	b.gt	4280d8 <_obstack_memory_used@@Base+0xf3c8>
  427e80:	tbnz	x24, #63, 4280e0 <_obstack_memory_used@@Base+0xf3d0>
  427e84:	cmp	x4, #0x0
  427e88:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  427e8c:	b.le	4280e0 <_obstack_memory_used@@Base+0xf3d0>
  427e90:	ldrb	w0, [x21, #56]
  427e94:	cmp	x24, x19
  427e98:	ubfx	x27, x0, #5, #2
  427e9c:	b.le	427eac <_obstack_memory_used@@Base+0xf19c>
  427ea0:	ldr	x2, [x21, #32]
  427ea4:	cbz	x2, 427eac <_obstack_memory_used@@Base+0xf19c>
  427ea8:	tbz	w0, #3, 42808c <_obstack_memory_used@@Base+0xf37c>
  427eac:	ldrb	w2, [x21, #56]
  427eb0:	cmp	x22, #0x0
  427eb4:	cset	w0, eq  // eq = none
  427eb8:	ubfx	x3, x2, #4, #1
  427ebc:	orr	w0, w0, w3
  427ec0:	tbnz	w0, #0, 428078 <_obstack_memory_used@@Base+0xf368>
  427ec4:	and	w2, w2, #0x6
  427ec8:	cmp	w2, #0x4
  427ecc:	ldr	x0, [x21, #48]
  427ed0:	b.eq	428120 <_obstack_memory_used@@Base+0xf410>  // b.none
  427ed4:	add	x28, x0, #0x1
  427ed8:	mov	x23, x28
  427edc:	lsl	x0, x28, #4
  427ee0:	stp	x1, x5, [sp, #112]
  427ee4:	bl	402800 <malloc@plt>
  427ee8:	mov	x20, x0
  427eec:	cbz	x0, 42810c <_obstack_memory_used@@Base+0xf3fc>
  427ef0:	ldp	x1, x5, [sp, #112]
  427ef4:	str	w27, [sp]
  427ef8:	mov	x7, x0
  427efc:	mov	x6, x28
  427f00:	mov	x4, x24
  427f04:	mov	x3, x19
  427f08:	mov	x2, x25
  427f0c:	mov	x0, x21
  427f10:	bl	422668 <_obstack_memory_used@@Base+0x9958>
  427f14:	cbnz	w0, 42803c <_obstack_memory_used@@Base+0xf32c>
  427f18:	cbz	x22, 428028 <_obstack_memory_used@@Base+0xf318>
  427f1c:	ldrb	w19, [x21, #56]
  427f20:	add	x25, x23, #0x1
  427f24:	ubfx	x19, x19, #1, #2
  427f28:	cbz	w19, 4280a0 <_obstack_memory_used@@Base+0xf390>
  427f2c:	cmp	w19, #0x1
  427f30:	ldr	x24, [x22]
  427f34:	b.eq	42814c <_obstack_memory_used@@Base+0xf43c>  // b.none
  427f38:	mov	w19, #0x2                   	// #2
  427f3c:	cmp	x23, #0x0
  427f40:	b.le	4281bc <_obstack_memory_used@@Base+0xf4ac>
  427f44:	ldp	x3, x4, [x22, #8]
  427f48:	lsl	x0, x23, #3
  427f4c:	add	x2, x20, x23, lsl #4
  427f50:	add	x1, x4, x0
  427f54:	add	x0, x3, x0
  427f58:	cmp	x1, x20
  427f5c:	add	x5, x3, #0xf
  427f60:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  427f64:	sub	x5, x5, x4
  427f68:	cset	w1, cs  // cs = hs, nlast
  427f6c:	cmp	x20, x0
  427f70:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
  427f74:	sub	x2, x23, #0x1
  427f78:	cset	w0, cs  // cs = hs, nlast
  427f7c:	cmp	x5, #0x1e
  427f80:	ccmp	x2, #0x5, #0x0, hi  // hi = pmore
  427f84:	and	w0, w1, w0
  427f88:	cset	w2, hi  // hi = pmore
  427f8c:	mov	x1, x23
  427f90:	tst	w2, w0
  427f94:	b.eq	42818c <_obstack_memory_used@@Base+0xf47c>  // b.none
  427f98:	lsr	x5, x23, #1
  427f9c:	mov	x2, x20
  427fa0:	mov	x0, #0x0                   	// #0
  427fa4:	lsl	x5, x5, #4
  427fa8:	ld2	{v0.2d, v1.2d}, [x2], #32
  427fac:	str	q0, [x3, x0]
  427fb0:	str	q1, [x4, x0]
  427fb4:	add	x0, x0, #0x10
  427fb8:	cmp	x5, x0
  427fbc:	b.ne	427fa8 <_obstack_memory_used@@Base+0xf298>  // b.any
  427fc0:	and	x0, x23, #0xfffffffffffffffe
  427fc4:	tbz	w23, #0, 427fe0 <_obstack_memory_used@@Base+0xf2d0>
  427fc8:	lsl	x2, x0, #4
  427fcc:	add	x5, x20, x2
  427fd0:	ldr	x2, [x20, x2]
  427fd4:	str	x2, [x3, x0, lsl #3]
  427fd8:	ldr	x2, [x5, #8]
  427fdc:	str	x2, [x4, x0, lsl #3]
  427fe0:	ldr	x24, [x22]
  427fe4:	cmp	x1, x24
  427fe8:	b.cs	428014 <_obstack_memory_used@@Base+0xf304>  // b.hs, b.nlast
  427fec:	ldp	x4, x3, [x22, #8]
  427ff0:	mov	x0, #0xffffffffffffffff    	// #-1
  427ff4:	nop
  427ff8:	str	x0, [x3, x1, lsl #3]
  427ffc:	add	x23, x23, #0x1
  428000:	str	x0, [x4, x1, lsl #3]
  428004:	mov	x1, x23
  428008:	ldr	x2, [x22]
  42800c:	cmp	x23, x2
  428010:	b.cc	427ff8 <_obstack_memory_used@@Base+0xf2e8>  // b.lo, b.ul, b.last
  428014:	ldrb	w0, [x21, #56]
  428018:	bfi	w0, w19, #1, #2
  42801c:	strb	w0, [x21, #56]
  428020:	tst	w0, #0x6
  428024:	b.eq	428048 <_obstack_memory_used@@Base+0xf338>  // b.none
  428028:	ldr	x19, [x20]
  42802c:	cbz	w26, 42804c <_obstack_memory_used@@Base+0xf33c>
  428030:	ldr	x0, [x20, #8]
  428034:	sub	x19, x0, x19
  428038:	b	42804c <_obstack_memory_used@@Base+0xf33c>
  42803c:	cmp	w0, #0x1
  428040:	mov	x19, #0xffffffffffffffff    	// #-1
  428044:	b.eq	42804c <_obstack_memory_used@@Base+0xf33c>  // b.none
  428048:	mov	x19, #0xfffffffffffffffe    	// #-2
  42804c:	mov	x0, x20
  428050:	bl	402ae0 <free@plt>
  428054:	ldp	x21, x22, [sp, #48]
  428058:	ldp	x25, x26, [sp, #80]
  42805c:	ldp	x27, x28, [sp, #96]
  428060:	mov	x0, x19
  428064:	ldp	x29, x30, [sp, #16]
  428068:	ldp	x19, x20, [sp, #32]
  42806c:	ldp	x23, x24, [sp, #64]
  428070:	add	sp, sp, #0x80
  428074:	ret
  428078:	mov	x28, #0x1                   	// #1
  42807c:	mov	x0, #0x10                  	// #16
  428080:	mov	x23, x28
  428084:	mov	x22, #0x0                   	// #0
  428088:	b	427ee0 <_obstack_memory_used@@Base+0xf1d0>
  42808c:	mov	x0, x21
  428090:	stp	x1, x5, [sp, #112]
  428094:	bl	427d58 <_obstack_memory_used@@Base+0xf048>
  428098:	ldp	x1, x5, [sp, #112]
  42809c:	b	427eac <_obstack_memory_used@@Base+0xf19c>
  4280a0:	lsl	x27, x25, #3
  4280a4:	mov	x24, x25
  4280a8:	mov	x0, x27
  4280ac:	bl	402800 <malloc@plt>
  4280b0:	str	x0, [x22, #8]
  4280b4:	mov	x19, x0
  4280b8:	cbz	x0, 4281c8 <_obstack_memory_used@@Base+0xf4b8>
  4280bc:	mov	x0, x27
  4280c0:	bl	402800 <malloc@plt>
  4280c4:	str	x0, [x22, #16]
  4280c8:	cbz	x0, 4281d0 <_obstack_memory_used@@Base+0xf4c0>
  4280cc:	mov	w19, #0x1                   	// #1
  4280d0:	str	x25, [x22]
  4280d4:	b	427f3c <_obstack_memory_used@@Base+0xf22c>
  4280d8:	mov	x24, x25
  4280dc:	b	427e90 <_obstack_memory_used@@Base+0xf180>
  4280e0:	ldrb	w27, [x21, #56]
  4280e4:	mov	x24, #0x0                   	// #0
  4280e8:	ubfx	x27, x27, #5, #2
  4280ec:	b	427eac <_obstack_memory_used@@Base+0xf19c>
  4280f0:	mov	x19, #0xffffffffffffffff    	// #-1
  4280f4:	mov	x0, x19
  4280f8:	ldp	x29, x30, [sp, #16]
  4280fc:	ldp	x19, x20, [sp, #32]
  428100:	ldp	x23, x24, [sp, #64]
  428104:	add	sp, sp, #0x80
  428108:	ret
  42810c:	mov	x19, #0xfffffffffffffffe    	// #-2
  428110:	ldp	x21, x22, [sp, #48]
  428114:	ldp	x25, x26, [sp, #80]
  428118:	ldp	x27, x28, [sp, #96]
  42811c:	b	428060 <_obstack_memory_used@@Base+0xf350>
  428120:	ldr	x28, [x22]
  428124:	cmp	x28, x0
  428128:	b.hi	427ed4 <_obstack_memory_used@@Base+0xf1c4>  // b.pmore
  42812c:	cmp	x28, #0x0
  428130:	mov	x23, x28
  428134:	b.gt	427edc <_obstack_memory_used@@Base+0xf1cc>
  428138:	mov	x28, #0x1                   	// #1
  42813c:	mov	x0, #0x10                  	// #16
  428140:	mov	x23, x28
  428144:	mov	x22, #0x0                   	// #0
  428148:	b	427ee0 <_obstack_memory_used@@Base+0xf1d0>
  42814c:	cmp	x24, x25
  428150:	b.cs	427f3c <_obstack_memory_used@@Base+0xf22c>  // b.hs, b.nlast
  428154:	ldr	x0, [x22, #8]
  428158:	lsl	x24, x25, #3
  42815c:	mov	x1, x24
  428160:	bl	402930 <realloc@plt>
  428164:	mov	x27, x0
  428168:	cbz	x0, 4281c8 <_obstack_memory_used@@Base+0xf4b8>
  42816c:	ldr	x0, [x22, #16]
  428170:	mov	x1, x24
  428174:	bl	402930 <realloc@plt>
  428178:	cbz	x0, 4281e0 <_obstack_memory_used@@Base+0xf4d0>
  42817c:	mov	x24, x25
  428180:	stp	x25, x27, [x22]
  428184:	str	x0, [x22, #16]
  428188:	b	427f3c <_obstack_memory_used@@Base+0xf22c>
  42818c:	mov	x2, x20
  428190:	mov	x0, #0x0                   	// #0
  428194:	nop
  428198:	ldr	x5, [x2]
  42819c:	str	x5, [x3, x0, lsl #3]
  4281a0:	add	x2, x2, #0x10
  4281a4:	ldur	x5, [x2, #-8]
  4281a8:	str	x5, [x4, x0, lsl #3]
  4281ac:	add	x0, x0, #0x1
  4281b0:	cmp	x23, x0
  4281b4:	b.ne	428198 <_obstack_memory_used@@Base+0xf488>  // b.any
  4281b8:	b	427fe0 <_obstack_memory_used@@Base+0xf2d0>
  4281bc:	mov	x1, #0x0                   	// #0
  4281c0:	mov	x23, #0x0                   	// #0
  4281c4:	b	427fe4 <_obstack_memory_used@@Base+0xf2d4>
  4281c8:	mov	w19, #0x0                   	// #0
  4281cc:	b	428014 <_obstack_memory_used@@Base+0xf304>
  4281d0:	mov	x0, x19
  4281d4:	mov	w19, #0x0                   	// #0
  4281d8:	bl	402ae0 <free@plt>
  4281dc:	b	428014 <_obstack_memory_used@@Base+0xf304>
  4281e0:	mov	x0, x27
  4281e4:	mov	w19, #0x0                   	// #0
  4281e8:	bl	402ae0 <free@plt>
  4281ec:	b	428014 <_obstack_memory_used@@Base+0xf304>
  4281f0:	stp	x29, x30, [sp, #-64]!
  4281f4:	mov	x29, sp
  4281f8:	stp	x19, x20, [sp, #16]
  4281fc:	mov	w19, w2
  428200:	mov	x20, x0
  428204:	tst	x19, #0x1
  428208:	stp	x21, x22, [sp, #32]
  42820c:	mov	x21, #0xb2fc                	// #45820
  428210:	str	x23, [sp, #48]
  428214:	mov	x23, #0x2c6                 	// #710
  428218:	str	xzr, [x0]
  42821c:	mov	x22, x1
  428220:	stp	xzr, xzr, [x0, #8]
  428224:	movk	x21, #0x3, lsl #16
  428228:	movk	x23, #0x101, lsl #16
  42822c:	mov	x0, #0x100                 	// #256
  428230:	csel	x23, x21, x23, ne  // ne = any
  428234:	bl	402800 <malloc@plt>
  428238:	str	x0, [x20, #32]
  42823c:	cbz	x0, 4282e8 <_obstack_memory_used@@Base+0xf5d8>
  428240:	sbfiz	x21, x19, #21, #32
  428244:	mov	w0, #0x0                   	// #0
  428248:	and	x21, x21, #0x400000
  42824c:	orr	x21, x21, x23
  428250:	tbnz	w19, #2, 4282c4 <_obstack_memory_used@@Base+0xf5b4>
  428254:	ldrb	w1, [x20, #56]
  428258:	ubfx	x19, x19, #3, #1
  42825c:	ubfiz	w0, w0, #7, #1
  428260:	mov	w2, #0x6f                  	// #111
  428264:	orr	w19, w0, w19, lsl #4
  428268:	and	w0, w1, w2
  42826c:	orr	w19, w19, w0
  428270:	str	xzr, [x20, #40]
  428274:	strb	w19, [x20, #56]
  428278:	mov	x0, x22
  42827c:	bl	402690 <strlen@plt>
  428280:	mov	x2, x0
  428284:	mov	x3, x21
  428288:	mov	x1, x22
  42828c:	mov	x0, x20
  428290:	bl	426920 <_obstack_memory_used@@Base+0xdc10>
  428294:	mov	w19, w0
  428298:	cmp	w0, #0x10
  42829c:	b.eq	4282d4 <_obstack_memory_used@@Base+0xf5c4>  // b.none
  4282a0:	cbnz	w0, 4282d8 <_obstack_memory_used@@Base+0xf5c8>
  4282a4:	mov	x0, x20
  4282a8:	bl	427d58 <_obstack_memory_used@@Base+0xf048>
  4282ac:	mov	w0, w19
  4282b0:	ldp	x19, x20, [sp, #16]
  4282b4:	ldp	x21, x22, [sp, #32]
  4282b8:	ldr	x23, [sp, #48]
  4282bc:	ldp	x29, x30, [sp], #64
  4282c0:	ret
  4282c4:	and	x21, x21, #0xffffffffffffffbf
  4282c8:	mov	w0, #0x1                   	// #1
  4282cc:	orr	x21, x21, #0x100
  4282d0:	b	428254 <_obstack_memory_used@@Base+0xf544>
  4282d4:	mov	w19, #0x8                   	// #8
  4282d8:	ldr	x0, [x20, #32]
  4282dc:	bl	402ae0 <free@plt>
  4282e0:	str	xzr, [x20, #32]
  4282e4:	b	4282ac <_obstack_memory_used@@Base+0xf59c>
  4282e8:	mov	w19, #0xc                   	// #12
  4282ec:	mov	w0, w19
  4282f0:	ldp	x19, x20, [sp, #16]
  4282f4:	ldp	x21, x22, [sp, #32]
  4282f8:	ldr	x23, [sp, #48]
  4282fc:	ldp	x29, x30, [sp], #64
  428300:	ret
  428304:	nop
  428308:	stp	x29, x30, [sp, #-48]!
  42830c:	cmp	w0, #0x10
  428310:	mov	x29, sp
  428314:	stp	x19, x20, [sp, #16]
  428318:	stp	x21, x22, [sp, #32]
  42831c:	b.hi	428398 <_obstack_memory_used@@Base+0xf688>  // b.pmore
  428320:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x122f0>
  428324:	add	x1, x1, #0xdd0
  428328:	mov	w4, w0
  42832c:	mov	x20, x3
  428330:	add	x3, x1, #0x1a0
  428334:	add	x1, x1, #0x20
  428338:	mov	x21, x2
  42833c:	mov	w2, #0x5                   	// #5
  428340:	mov	x0, #0x0                   	// #0
  428344:	ldr	x3, [x3, w4, sxtw #3]
  428348:	add	x1, x1, x3
  42834c:	bl	402c20 <dcgettext@plt>
  428350:	mov	x22, x0
  428354:	bl	402690 <strlen@plt>
  428358:	add	x19, x0, #0x1
  42835c:	cbz	x20, 428378 <_obstack_memory_used@@Base+0xf668>
  428360:	cmp	x19, x20
  428364:	mov	x2, x19
  428368:	b.hi	42838c <_obstack_memory_used@@Base+0xf67c>  // b.pmore
  42836c:	mov	x1, x22
  428370:	mov	x0, x21
  428374:	bl	402650 <memcpy@plt>
  428378:	mov	x0, x19
  42837c:	ldp	x19, x20, [sp, #16]
  428380:	ldp	x21, x22, [sp, #32]
  428384:	ldp	x29, x30, [sp], #48
  428388:	ret
  42838c:	sub	x2, x20, #0x1
  428390:	strb	wzr, [x21, x2]
  428394:	b	42836c <_obstack_memory_used@@Base+0xf65c>
  428398:	bl	4029e0 <abort@plt>
  42839c:	nop
  4283a0:	stp	x29, x30, [sp, #-32]!
  4283a4:	mov	x29, sp
  4283a8:	str	x19, [sp, #16]
  4283ac:	mov	x19, x0
  4283b0:	ldr	x0, [x0]
  4283b4:	cbz	x0, 4283bc <_obstack_memory_used@@Base+0xf6ac>
  4283b8:	bl	41cfc8 <_obstack_memory_used@@Base+0x42b8>
  4283bc:	ldr	x0, [x19, #32]
  4283c0:	stp	xzr, xzr, [x19]
  4283c4:	bl	402ae0 <free@plt>
  4283c8:	str	xzr, [x19, #32]
  4283cc:	ldr	x0, [x19, #40]
  4283d0:	bl	402ae0 <free@plt>
  4283d4:	str	xzr, [x19, #40]
  4283d8:	ldr	x19, [sp, #16]
  4283dc:	ldp	x29, x30, [sp], #32
  4283e0:	ret
  4283e4:	nop
  4283e8:	tst	w4, #0xfffffff8
  4283ec:	b.ne	4284c4 <_obstack_memory_used@@Base+0xf7b4>  // b.any
  4283f0:	sub	sp, sp, #0x50
  4283f4:	stp	x29, x30, [sp, #16]
  4283f8:	add	x29, sp, #0x10
  4283fc:	stp	x19, x20, [sp, #32]
  428400:	mov	w19, w4
  428404:	mov	x20, x0
  428408:	stp	x21, x22, [sp, #48]
  42840c:	mov	x21, x1
  428410:	mov	x22, x3
  428414:	str	x23, [sp, #64]
  428418:	mov	x23, x2
  42841c:	tbnz	w19, #2, 428478 <_obstack_memory_used@@Base+0xf768>
  428420:	mov	x0, x1
  428424:	bl	402690 <strlen@plt>
  428428:	mov	x5, x0
  42842c:	ldrb	w0, [x20, #56]
  428430:	str	w19, [sp]
  428434:	mov	x3, #0x0                   	// #0
  428438:	tbz	w0, #4, 428488 <_obstack_memory_used@@Base+0xf778>
  42843c:	mov	x1, x21
  428440:	mov	x0, x20
  428444:	mov	x4, x5
  428448:	mov	x2, x5
  42844c:	mov	x7, #0x0                   	// #0
  428450:	mov	x6, #0x0                   	// #0
  428454:	bl	422668 <_obstack_memory_used@@Base+0x9958>
  428458:	cmp	w0, #0x0
  42845c:	cset	w0, ne  // ne = any
  428460:	ldp	x29, x30, [sp, #16]
  428464:	ldp	x19, x20, [sp, #32]
  428468:	ldp	x21, x22, [sp, #48]
  42846c:	ldr	x23, [sp, #64]
  428470:	add	sp, sp, #0x50
  428474:	ret
  428478:	ldrb	w0, [x20, #56]
  42847c:	ldp	x3, x5, [x3]
  428480:	str	w19, [sp]
  428484:	tbnz	w0, #4, 42843c <_obstack_memory_used@@Base+0xf72c>
  428488:	mov	x7, x22
  42848c:	mov	x6, x23
  428490:	mov	x1, x21
  428494:	mov	x0, x20
  428498:	mov	x4, x5
  42849c:	mov	x2, x5
  4284a0:	bl	422668 <_obstack_memory_used@@Base+0x9958>
  4284a4:	cmp	w0, #0x0
  4284a8:	cset	w0, ne  // ne = any
  4284ac:	ldp	x29, x30, [sp, #16]
  4284b0:	ldp	x19, x20, [sp, #32]
  4284b4:	ldp	x21, x22, [sp, #48]
  4284b8:	ldr	x23, [sp, #64]
  4284bc:	add	sp, sp, #0x50
  4284c0:	ret
  4284c4:	mov	w0, #0x2                   	// #2
  4284c8:	ret
  4284cc:	nop
  4284d0:	sub	sp, sp, #0x70
  4284d4:	cmp	x3, #0x0
  4284d8:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  4284dc:	stp	x29, x30, [sp, #16]
  4284e0:	add	x29, sp, #0x10
  4284e4:	stp	x19, x20, [sp, #32]
  4284e8:	b.lt	428724 <_obstack_memory_used@@Base+0xfa14>  // b.tstop
  4284ec:	stp	x23, x24, [sp, #64]
  4284f0:	mov	x23, x0
  4284f4:	ldrb	w0, [x0, #56]
  4284f8:	cmp	x4, #0x0
  4284fc:	stp	x21, x22, [sp, #48]
  428500:	mov	x24, x2
  428504:	stp	x25, x26, [sp, #80]
  428508:	ubfx	x2, x0, #4, #1
  42850c:	mov	x25, x1
  428510:	str	x27, [sp, #96]
  428514:	cset	w1, eq  // eq = none
  428518:	mov	x20, x3
  42851c:	mov	x21, x4
  428520:	ubfx	x26, x0, #5, #2
  428524:	orr	w1, w1, w2
  428528:	tbnz	w1, #0, 4286d8 <_obstack_memory_used@@Base+0xf9c8>
  42852c:	and	w0, w0, #0x6
  428530:	cmp	w0, #0x4
  428534:	ldr	x0, [x23, #48]
  428538:	b.eq	428754 <_obstack_memory_used@@Base+0xfa44>  // b.none
  42853c:	add	x27, x0, #0x1
  428540:	mov	x22, x27
  428544:	lsl	x0, x27, #4
  428548:	bl	402800 <malloc@plt>
  42854c:	mov	x19, x0
  428550:	cbz	x0, 42873c <_obstack_memory_used@@Base+0xfa2c>
  428554:	str	w26, [sp]
  428558:	mov	x7, x0
  42855c:	mov	x6, x27
  428560:	mov	x1, x25
  428564:	mov	x5, x24
  428568:	mov	x2, x24
  42856c:	mov	x4, x20
  428570:	mov	x3, x20
  428574:	mov	x0, x23
  428578:	bl	422668 <_obstack_memory_used@@Base+0x9958>
  42857c:	cbnz	w0, 42869c <_obstack_memory_used@@Base+0xf98c>
  428580:	cbz	x21, 428690 <_obstack_memory_used@@Base+0xf980>
  428584:	ldrb	w24, [x23, #56]
  428588:	add	x26, x22, #0x1
  42858c:	ubfx	x24, x24, #1, #2
  428590:	cbz	w24, 4286ec <_obstack_memory_used@@Base+0xf9dc>
  428594:	cmp	w24, #0x1
  428598:	ldr	x25, [x21]
  42859c:	b.eq	428780 <_obstack_memory_used@@Base+0xfa70>  // b.none
  4285a0:	mov	w24, #0x2                   	// #2
  4285a4:	cmp	x22, #0x0
  4285a8:	b.le	4287ec <_obstack_memory_used@@Base+0xfadc>
  4285ac:	ldp	x2, x3, [x21, #8]
  4285b0:	lsl	x0, x22, #3
  4285b4:	add	x4, x19, x22, lsl #4
  4285b8:	add	x1, x3, x0
  4285bc:	add	x0, x2, x0
  4285c0:	cmp	x19, x1
  4285c4:	add	x5, x2, #0xf
  4285c8:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
  4285cc:	sub	x5, x5, x3
  4285d0:	cset	w1, cs  // cs = hs, nlast
  4285d4:	cmp	x19, x0
  4285d8:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
  4285dc:	sub	x4, x22, #0x1
  4285e0:	cset	w0, cs  // cs = hs, nlast
  4285e4:	cmp	x5, #0x1e
  4285e8:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
  4285ec:	and	w0, w1, w0
  4285f0:	cset	w4, hi  // hi = pmore
  4285f4:	mov	x1, x22
  4285f8:	tst	w4, w0
  4285fc:	b.eq	4287c0 <_obstack_memory_used@@Base+0xfab0>  // b.none
  428600:	lsr	x5, x22, #1
  428604:	mov	x4, x19
  428608:	mov	x0, #0x0                   	// #0
  42860c:	lsl	x5, x5, #4
  428610:	ld2	{v0.2d, v1.2d}, [x4], #32
  428614:	str	q0, [x2, x0]
  428618:	str	q1, [x3, x0]
  42861c:	add	x0, x0, #0x10
  428620:	cmp	x5, x0
  428624:	b.ne	428610 <_obstack_memory_used@@Base+0xf900>  // b.any
  428628:	and	x0, x22, #0xfffffffffffffffe
  42862c:	tbz	w22, #0, 428648 <_obstack_memory_used@@Base+0xf938>
  428630:	lsl	x4, x0, #4
  428634:	add	x5, x19, x4
  428638:	ldr	x4, [x19, x4]
  42863c:	str	x4, [x2, x0, lsl #3]
  428640:	ldr	x2, [x5, #8]
  428644:	str	x2, [x3, x0, lsl #3]
  428648:	ldr	x25, [x21]
  42864c:	cmp	x1, x25
  428650:	b.cs	42867c <_obstack_memory_used@@Base+0xf96c>  // b.hs, b.nlast
  428654:	ldp	x4, x3, [x21, #8]
  428658:	mov	x0, #0xffffffffffffffff    	// #-1
  42865c:	nop
  428660:	str	x0, [x3, x1, lsl #3]
  428664:	add	x22, x22, #0x1
  428668:	str	x0, [x4, x1, lsl #3]
  42866c:	mov	x1, x22
  428670:	ldr	x2, [x21]
  428674:	cmp	x22, x2
  428678:	b.cc	428660 <_obstack_memory_used@@Base+0xf950>  // b.lo, b.ul, b.last
  42867c:	ldrb	w0, [x23, #56]
  428680:	bfi	w0, w24, #1, #2
  428684:	strb	w0, [x23, #56]
  428688:	tst	w0, #0x6
  42868c:	b.eq	4286a8 <_obstack_memory_used@@Base+0xf998>  // b.none
  428690:	ldr	x3, [x19, #8]
  428694:	sub	x20, x3, x20
  428698:	b	4286ac <_obstack_memory_used@@Base+0xf99c>
  42869c:	cmp	w0, #0x1
  4286a0:	mov	x20, #0xffffffffffffffff    	// #-1
  4286a4:	b.eq	4286ac <_obstack_memory_used@@Base+0xf99c>  // b.none
  4286a8:	mov	x20, #0xfffffffffffffffe    	// #-2
  4286ac:	mov	x0, x19
  4286b0:	bl	402ae0 <free@plt>
  4286b4:	ldp	x21, x22, [sp, #48]
  4286b8:	ldp	x23, x24, [sp, #64]
  4286bc:	ldp	x25, x26, [sp, #80]
  4286c0:	ldr	x27, [sp, #96]
  4286c4:	mov	x0, x20
  4286c8:	ldp	x29, x30, [sp, #16]
  4286cc:	ldp	x19, x20, [sp, #32]
  4286d0:	add	sp, sp, #0x70
  4286d4:	ret
  4286d8:	mov	x27, #0x1                   	// #1
  4286dc:	mov	x0, #0x10                  	// #16
  4286e0:	mov	x22, x27
  4286e4:	mov	x21, #0x0                   	// #0
  4286e8:	b	428548 <_obstack_memory_used@@Base+0xf838>
  4286ec:	lsl	x27, x26, #3
  4286f0:	mov	x25, x26
  4286f4:	mov	x0, x27
  4286f8:	bl	402800 <malloc@plt>
  4286fc:	str	x0, [x21, #8]
  428700:	mov	x24, x0
  428704:	cbz	x0, 4287f8 <_obstack_memory_used@@Base+0xfae8>
  428708:	mov	x0, x27
  42870c:	bl	402800 <malloc@plt>
  428710:	str	x0, [x21, #16]
  428714:	cbz	x0, 428800 <_obstack_memory_used@@Base+0xfaf0>
  428718:	mov	w24, #0x1                   	// #1
  42871c:	str	x26, [x21]
  428720:	b	4285a4 <_obstack_memory_used@@Base+0xf894>
  428724:	mov	x20, #0xffffffffffffffff    	// #-1
  428728:	mov	x0, x20
  42872c:	ldp	x29, x30, [sp, #16]
  428730:	ldp	x19, x20, [sp, #32]
  428734:	add	sp, sp, #0x70
  428738:	ret
  42873c:	mov	x20, #0xfffffffffffffffe    	// #-2
  428740:	ldp	x21, x22, [sp, #48]
  428744:	ldp	x23, x24, [sp, #64]
  428748:	ldp	x25, x26, [sp, #80]
  42874c:	ldr	x27, [sp, #96]
  428750:	b	4286c4 <_obstack_memory_used@@Base+0xf9b4>
  428754:	ldr	x27, [x21]
  428758:	cmp	x27, x0
  42875c:	b.hi	42853c <_obstack_memory_used@@Base+0xf82c>  // b.pmore
  428760:	cmp	x27, #0x0
  428764:	mov	x22, x27
  428768:	b.gt	428544 <_obstack_memory_used@@Base+0xf834>
  42876c:	mov	x27, #0x1                   	// #1
  428770:	mov	x0, #0x10                  	// #16
  428774:	mov	x22, x27
  428778:	mov	x21, #0x0                   	// #0
  42877c:	b	428548 <_obstack_memory_used@@Base+0xf838>
  428780:	cmp	x25, x26
  428784:	b.cs	4285a4 <_obstack_memory_used@@Base+0xf894>  // b.hs, b.nlast
  428788:	ldr	x0, [x21, #8]
  42878c:	lsl	x25, x26, #3
  428790:	mov	x1, x25
  428794:	bl	402930 <realloc@plt>
  428798:	mov	x27, x0
  42879c:	cbz	x0, 4287f8 <_obstack_memory_used@@Base+0xfae8>
  4287a0:	ldr	x0, [x21, #16]
  4287a4:	mov	x1, x25
  4287a8:	bl	402930 <realloc@plt>
  4287ac:	cbz	x0, 428810 <_obstack_memory_used@@Base+0xfb00>
  4287b0:	mov	x25, x26
  4287b4:	stp	x26, x27, [x21]
  4287b8:	str	x0, [x21, #16]
  4287bc:	b	4285a4 <_obstack_memory_used@@Base+0xf894>
  4287c0:	mov	x4, x19
  4287c4:	mov	x0, #0x0                   	// #0
  4287c8:	ldr	x5, [x4]
  4287cc:	str	x5, [x2, x0, lsl #3]
  4287d0:	add	x4, x4, #0x10
  4287d4:	ldur	x5, [x4, #-8]
  4287d8:	str	x5, [x3, x0, lsl #3]
  4287dc:	add	x0, x0, #0x1
  4287e0:	cmp	x22, x0
  4287e4:	b.ne	4287c8 <_obstack_memory_used@@Base+0xfab8>  // b.any
  4287e8:	b	428648 <_obstack_memory_used@@Base+0xf938>
  4287ec:	mov	x1, #0x0                   	// #0
  4287f0:	mov	x22, #0x0                   	// #0
  4287f4:	b	42864c <_obstack_memory_used@@Base+0xf93c>
  4287f8:	mov	w24, #0x0                   	// #0
  4287fc:	b	42867c <_obstack_memory_used@@Base+0xf96c>
  428800:	mov	x0, x24
  428804:	mov	w24, #0x0                   	// #0
  428808:	bl	402ae0 <free@plt>
  42880c:	b	42867c <_obstack_memory_used@@Base+0xf96c>
  428810:	mov	x0, x27
  428814:	mov	w24, #0x0                   	// #0
  428818:	bl	402ae0 <free@plt>
  42881c:	b	42867c <_obstack_memory_used@@Base+0xf96c>
  428820:	sub	sp, sp, #0x70
  428824:	cmp	x3, #0x0
  428828:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  42882c:	stp	x29, x30, [sp, #16]
  428830:	add	x29, sp, #0x10
  428834:	stp	x19, x20, [sp, #32]
  428838:	stp	x21, x22, [sp, #48]
  42883c:	add	x22, x3, x4
  428840:	b.lt	428ad4 <_obstack_memory_used@@Base+0xfdc4>  // b.tstop
  428844:	stp	x23, x24, [sp, #64]
  428848:	mov	x19, x3
  42884c:	mov	x20, x0
  428850:	stp	x25, x26, [sp, #80]
  428854:	mov	x23, x1
  428858:	mov	x21, x5
  42885c:	stp	x27, x28, [sp, #96]
  428860:	cmp	x2, x22
  428864:	mov	x28, x2
  428868:	b.lt	428abc <_obstack_memory_used@@Base+0xfdac>  // b.tstop
  42886c:	cmp	x4, #0x0
  428870:	ccmp	x3, x22, #0x4, ge  // ge = tcont
  428874:	b.gt	428abc <_obstack_memory_used@@Base+0xfdac>
  428878:	tbnz	x22, #63, 428ac4 <_obstack_memory_used@@Base+0xfdb4>
  42887c:	cmp	x4, #0x0
  428880:	ccmp	x3, x22, #0x0, lt  // lt = tstop
  428884:	b.le	428ac4 <_obstack_memory_used@@Base+0xfdb4>
  428888:	ldrb	w0, [x20, #56]
  42888c:	cmp	x19, x22
  428890:	ubfx	x24, x0, #5, #2
  428894:	b.ge	4288a4 <_obstack_memory_used@@Base+0xfb94>  // b.tcont
  428898:	ldr	x1, [x20, #32]
  42889c:	cbz	x1, 4288a4 <_obstack_memory_used@@Base+0xfb94>
  4288a0:	tbz	w0, #3, 428a78 <_obstack_memory_used@@Base+0xfd68>
  4288a4:	ldrb	w1, [x20, #56]
  4288a8:	cmp	x21, #0x0
  4288ac:	cset	w0, eq  // eq = none
  4288b0:	ubfx	x2, x1, #4, #1
  4288b4:	orr	w0, w0, w2
  4288b8:	tbnz	w0, #0, 428a64 <_obstack_memory_used@@Base+0xfd54>
  4288bc:	and	w1, w1, #0x6
  4288c0:	cmp	w1, #0x4
  4288c4:	ldr	x0, [x20, #48]
  4288c8:	b.eq	428b04 <_obstack_memory_used@@Base+0xfdf4>  // b.none
  4288cc:	add	x25, x0, #0x1
  4288d0:	mov	x27, x25
  4288d4:	lsl	x0, x25, #4
  4288d8:	bl	402800 <malloc@plt>
  4288dc:	mov	x26, x0
  4288e0:	cbz	x0, 428af0 <_obstack_memory_used@@Base+0xfde0>
  4288e4:	str	w24, [sp]
  4288e8:	mov	x7, x0
  4288ec:	mov	x6, x25
  4288f0:	mov	x4, x22
  4288f4:	mov	x3, x19
  4288f8:	mov	x1, x23
  4288fc:	mov	x5, x28
  428900:	mov	x2, x28
  428904:	mov	x0, x20
  428908:	bl	422668 <_obstack_memory_used@@Base+0x9958>
  42890c:	cbnz	w0, 428a28 <_obstack_memory_used@@Base+0xfd18>
  428910:	cbz	x21, 428a20 <_obstack_memory_used@@Base+0xfd10>
  428914:	ldrb	w19, [x20, #56]
  428918:	add	x23, x27, #0x1
  42891c:	ubfx	x19, x19, #1, #2
  428920:	cbz	w19, 428a84 <_obstack_memory_used@@Base+0xfd74>
  428924:	cmp	w19, #0x1
  428928:	ldr	x22, [x21]
  42892c:	b.eq	428b30 <_obstack_memory_used@@Base+0xfe20>  // b.none
  428930:	mov	w19, #0x2                   	// #2
  428934:	cmp	x27, #0x0
  428938:	b.le	428b9c <_obstack_memory_used@@Base+0xfe8c>
  42893c:	ldp	x3, x4, [x21, #8]
  428940:	lsl	x0, x27, #3
  428944:	add	x2, x26, x27, lsl #4
  428948:	add	x1, x4, x0
  42894c:	add	x0, x3, x0
  428950:	cmp	x1, x26
  428954:	add	x5, x3, #0xf
  428958:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  42895c:	sub	x5, x5, x4
  428960:	cset	w1, cs  // cs = hs, nlast
  428964:	cmp	x26, x0
  428968:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
  42896c:	sub	x2, x27, #0x1
  428970:	cset	w0, cs  // cs = hs, nlast
  428974:	cmp	x5, #0x1e
  428978:	ccmp	x2, #0x5, #0x0, hi  // hi = pmore
  42897c:	and	w0, w1, w0
  428980:	cset	w1, hi  // hi = pmore
  428984:	mov	x2, x27
  428988:	tst	w1, w0
  42898c:	b.eq	428b70 <_obstack_memory_used@@Base+0xfe60>  // b.none
  428990:	lsr	x5, x27, #1
  428994:	mov	x0, x26
  428998:	mov	x1, #0x0                   	// #0
  42899c:	lsl	x5, x5, #4
  4289a0:	ld2	{v0.2d, v1.2d}, [x0], #32
  4289a4:	str	q0, [x3, x1]
  4289a8:	str	q1, [x4, x1]
  4289ac:	add	x1, x1, #0x10
  4289b0:	cmp	x5, x1
  4289b4:	b.ne	4289a0 <_obstack_memory_used@@Base+0xfc90>  // b.any
  4289b8:	and	x1, x27, #0xfffffffffffffffe
  4289bc:	tbz	w27, #0, 4289d8 <_obstack_memory_used@@Base+0xfcc8>
  4289c0:	lsl	x5, x1, #4
  4289c4:	add	x0, x26, x5
  4289c8:	ldr	x5, [x26, x5]
  4289cc:	str	x5, [x3, x1, lsl #3]
  4289d0:	ldr	x0, [x0, #8]
  4289d4:	str	x0, [x4, x1, lsl #3]
  4289d8:	ldr	x22, [x21]
  4289dc:	cmp	x22, x2
  4289e0:	b.ls	428a0c <_obstack_memory_used@@Base+0xfcfc>  // b.plast
  4289e4:	ldp	x4, x3, [x21, #8]
  4289e8:	mov	x1, #0xffffffffffffffff    	// #-1
  4289ec:	nop
  4289f0:	str	x1, [x3, x2, lsl #3]
  4289f4:	add	x27, x27, #0x1
  4289f8:	str	x1, [x4, x2, lsl #3]
  4289fc:	mov	x2, x27
  428a00:	ldr	x0, [x21]
  428a04:	cmp	x27, x0
  428a08:	b.cc	4289f0 <_obstack_memory_used@@Base+0xfce0>  // b.lo, b.ul, b.last
  428a0c:	ldrb	w0, [x20, #56]
  428a10:	bfi	w0, w19, #1, #2
  428a14:	strb	w0, [x20, #56]
  428a18:	tst	w0, #0x6
  428a1c:	b.eq	428a34 <_obstack_memory_used@@Base+0xfd24>  // b.none
  428a20:	ldr	x19, [x26]
  428a24:	b	428a38 <_obstack_memory_used@@Base+0xfd28>
  428a28:	cmp	w0, #0x1
  428a2c:	mov	x19, #0xffffffffffffffff    	// #-1
  428a30:	b.eq	428a38 <_obstack_memory_used@@Base+0xfd28>  // b.none
  428a34:	mov	x19, #0xfffffffffffffffe    	// #-2
  428a38:	mov	x0, x26
  428a3c:	bl	402ae0 <free@plt>
  428a40:	ldp	x23, x24, [sp, #64]
  428a44:	ldp	x25, x26, [sp, #80]
  428a48:	ldp	x27, x28, [sp, #96]
  428a4c:	mov	x0, x19
  428a50:	ldp	x29, x30, [sp, #16]
  428a54:	ldp	x19, x20, [sp, #32]
  428a58:	ldp	x21, x22, [sp, #48]
  428a5c:	add	sp, sp, #0x70
  428a60:	ret
  428a64:	mov	x25, #0x1                   	// #1
  428a68:	mov	x0, #0x10                  	// #16
  428a6c:	mov	x27, x25
  428a70:	mov	x21, #0x0                   	// #0
  428a74:	b	4288d8 <_obstack_memory_used@@Base+0xfbc8>
  428a78:	mov	x0, x20
  428a7c:	bl	427d58 <_obstack_memory_used@@Base+0xf048>
  428a80:	b	4288a4 <_obstack_memory_used@@Base+0xfb94>
  428a84:	lsl	x24, x23, #3
  428a88:	mov	x22, x23
  428a8c:	mov	x0, x24
  428a90:	bl	402800 <malloc@plt>
  428a94:	str	x0, [x21, #8]
  428a98:	mov	x19, x0
  428a9c:	cbz	x0, 428ba8 <_obstack_memory_used@@Base+0xfe98>
  428aa0:	mov	x0, x24
  428aa4:	bl	402800 <malloc@plt>
  428aa8:	str	x0, [x21, #16]
  428aac:	cbz	x0, 428bb0 <_obstack_memory_used@@Base+0xfea0>
  428ab0:	mov	w19, #0x1                   	// #1
  428ab4:	str	x23, [x21]
  428ab8:	b	428934 <_obstack_memory_used@@Base+0xfc24>
  428abc:	mov	x22, x28
  428ac0:	b	428888 <_obstack_memory_used@@Base+0xfb78>
  428ac4:	ldrb	w24, [x20, #56]
  428ac8:	mov	x22, #0x0                   	// #0
  428acc:	ubfx	x24, x24, #5, #2
  428ad0:	b	4288a4 <_obstack_memory_used@@Base+0xfb94>
  428ad4:	mov	x19, #0xffffffffffffffff    	// #-1
  428ad8:	mov	x0, x19
  428adc:	ldp	x29, x30, [sp, #16]
  428ae0:	ldp	x19, x20, [sp, #32]
  428ae4:	ldp	x21, x22, [sp, #48]
  428ae8:	add	sp, sp, #0x70
  428aec:	ret
  428af0:	mov	x19, #0xfffffffffffffffe    	// #-2
  428af4:	ldp	x23, x24, [sp, #64]
  428af8:	ldp	x25, x26, [sp, #80]
  428afc:	ldp	x27, x28, [sp, #96]
  428b00:	b	428a4c <_obstack_memory_used@@Base+0xfd3c>
  428b04:	ldr	x25, [x21]
  428b08:	cmp	x25, x0
  428b0c:	b.hi	4288cc <_obstack_memory_used@@Base+0xfbbc>  // b.pmore
  428b10:	cmp	x25, #0x0
  428b14:	mov	x27, x25
  428b18:	b.gt	4288d4 <_obstack_memory_used@@Base+0xfbc4>
  428b1c:	mov	x25, #0x1                   	// #1
  428b20:	mov	x0, #0x10                  	// #16
  428b24:	mov	x27, x25
  428b28:	mov	x21, #0x0                   	// #0
  428b2c:	b	4288d8 <_obstack_memory_used@@Base+0xfbc8>
  428b30:	cmp	x22, x23
  428b34:	b.cs	428934 <_obstack_memory_used@@Base+0xfc24>  // b.hs, b.nlast
  428b38:	ldr	x0, [x21, #8]
  428b3c:	lsl	x22, x23, #3
  428b40:	mov	x1, x22
  428b44:	bl	402930 <realloc@plt>
  428b48:	mov	x24, x0
  428b4c:	cbz	x0, 428ba8 <_obstack_memory_used@@Base+0xfe98>
  428b50:	ldr	x0, [x21, #16]
  428b54:	mov	x1, x22
  428b58:	bl	402930 <realloc@plt>
  428b5c:	cbz	x0, 428bc0 <_obstack_memory_used@@Base+0xfeb0>
  428b60:	mov	x22, x23
  428b64:	stp	x23, x24, [x21]
  428b68:	str	x0, [x21, #16]
  428b6c:	b	428934 <_obstack_memory_used@@Base+0xfc24>
  428b70:	mov	x1, x26
  428b74:	mov	x0, #0x0                   	// #0
  428b78:	ldr	x5, [x1]
  428b7c:	str	x5, [x3, x0, lsl #3]
  428b80:	add	x1, x1, #0x10
  428b84:	ldur	x5, [x1, #-8]
  428b88:	str	x5, [x4, x0, lsl #3]
  428b8c:	add	x0, x0, #0x1
  428b90:	cmp	x27, x0
  428b94:	b.ne	428b78 <_obstack_memory_used@@Base+0xfe68>  // b.any
  428b98:	b	4289d8 <_obstack_memory_used@@Base+0xfcc8>
  428b9c:	mov	x2, #0x0                   	// #0
  428ba0:	mov	x27, #0x0                   	// #0
  428ba4:	b	4289dc <_obstack_memory_used@@Base+0xfccc>
  428ba8:	mov	w19, #0x0                   	// #0
  428bac:	b	428a0c <_obstack_memory_used@@Base+0xfcfc>
  428bb0:	mov	x0, x19
  428bb4:	mov	w19, #0x0                   	// #0
  428bb8:	bl	402ae0 <free@plt>
  428bbc:	b	428a0c <_obstack_memory_used@@Base+0xfcfc>
  428bc0:	mov	x0, x24
  428bc4:	mov	w19, #0x0                   	// #0
  428bc8:	bl	402ae0 <free@plt>
  428bcc:	b	428a0c <_obstack_memory_used@@Base+0xfcfc>
  428bd0:	stp	x29, x30, [sp, #-96]!
  428bd4:	cmp	x4, #0x0
  428bd8:	ccmp	x7, #0x0, #0x1, ge  // ge = tcont
  428bdc:	mov	x29, sp
  428be0:	stp	x19, x20, [sp, #16]
  428be4:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  428be8:	b.lt	428cc4 <_obstack_memory_used@@Base+0xffb4>  // b.tstop
  428bec:	stp	x27, x28, [sp, #80]
  428bf0:	mov	x19, x4
  428bf4:	mov	x20, x2
  428bf8:	adds	x27, x2, x4
  428bfc:	b.vs	428cc0 <_obstack_memory_used@@Base+0xffb0>
  428c00:	stp	x21, x22, [sp, #32]
  428c04:	mov	x28, x1
  428c08:	mov	x21, x7
  428c0c:	stp	x23, x24, [sp, #48]
  428c10:	mov	x23, x0
  428c14:	mov	x24, x5
  428c18:	stp	x25, x26, [sp, #64]
  428c1c:	mov	x25, x6
  428c20:	cbz	x4, 428cd8 <_obstack_memory_used@@Base+0xffc8>
  428c24:	mov	x22, x3
  428c28:	mov	x26, #0x0                   	// #0
  428c2c:	cbnz	x2, 428c80 <_obstack_memory_used@@Base+0xff70>
  428c30:	mov	x6, x25
  428c34:	mov	x5, x21
  428c38:	mov	x3, x24
  428c3c:	mov	x2, x27
  428c40:	mov	x1, x22
  428c44:	mov	w7, #0x1                   	// #1
  428c48:	mov	x4, #0x0                   	// #0
  428c4c:	mov	x0, x23
  428c50:	bl	427e28 <_obstack_memory_used@@Base+0xf118>
  428c54:	mov	x19, x0
  428c58:	mov	x0, x26
  428c5c:	bl	402ae0 <free@plt>
  428c60:	mov	x0, x19
  428c64:	ldp	x19, x20, [sp, #16]
  428c68:	ldp	x21, x22, [sp, #32]
  428c6c:	ldp	x23, x24, [sp, #48]
  428c70:	ldp	x25, x26, [sp, #64]
  428c74:	ldp	x27, x28, [sp, #80]
  428c78:	ldp	x29, x30, [sp], #96
  428c7c:	ret
  428c80:	mov	x0, x27
  428c84:	bl	402800 <malloc@plt>
  428c88:	mov	x26, x0
  428c8c:	cbz	x0, 428cb4 <_obstack_memory_used@@Base+0xffa4>
  428c90:	mov	x1, x28
  428c94:	mov	x2, x20
  428c98:	bl	402650 <memcpy@plt>
  428c9c:	mov	x1, x22
  428ca0:	mov	x2, x19
  428ca4:	add	x0, x26, x20
  428ca8:	mov	x22, x26
  428cac:	bl	402650 <memcpy@plt>
  428cb0:	b	428c30 <_obstack_memory_used@@Base+0xff20>
  428cb4:	ldp	x21, x22, [sp, #32]
  428cb8:	ldp	x23, x24, [sp, #48]
  428cbc:	ldp	x25, x26, [sp, #64]
  428cc0:	ldp	x27, x28, [sp, #80]
  428cc4:	mov	x19, #0xfffffffffffffffe    	// #-2
  428cc8:	mov	x0, x19
  428ccc:	ldp	x19, x20, [sp, #16]
  428cd0:	ldp	x29, x30, [sp], #96
  428cd4:	ret
  428cd8:	mov	x22, x1
  428cdc:	mov	x26, #0x0                   	// #0
  428ce0:	b	428c30 <_obstack_memory_used@@Base+0xff20>
  428ce4:	nop
  428ce8:	stp	x29, x30, [sp, #-112]!
  428cec:	cmp	x4, #0x0
  428cf0:	mov	x29, sp
  428cf4:	stp	x27, x28, [sp, #80]
  428cf8:	ldr	x27, [sp, #112]
  428cfc:	stp	x19, x20, [sp, #16]
  428d00:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  428d04:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  428d08:	b.lt	428ddc <_obstack_memory_used@@Base+0x100cc>  // b.tstop
  428d0c:	mov	x19, x4
  428d10:	mov	x20, x2
  428d14:	adds	x28, x2, x4
  428d18:	b.vs	428ddc <_obstack_memory_used@@Base+0x100cc>
  428d1c:	stp	x21, x22, [sp, #32]
  428d20:	mov	x22, x0
  428d24:	stp	x23, x24, [sp, #48]
  428d28:	mov	x23, x5
  428d2c:	mov	x24, x6
  428d30:	stp	x25, x26, [sp, #64]
  428d34:	mov	x25, x7
  428d38:	cbz	x4, 428df4 <_obstack_memory_used@@Base+0x100e4>
  428d3c:	str	x1, [sp, #104]
  428d40:	mov	x21, x3
  428d44:	mov	x26, #0x0                   	// #0
  428d48:	cbnz	x2, 428d9c <_obstack_memory_used@@Base+0x1008c>
  428d4c:	mov	x6, x25
  428d50:	mov	x5, x27
  428d54:	mov	x4, x24
  428d58:	mov	x3, x23
  428d5c:	mov	x2, x28
  428d60:	mov	x1, x21
  428d64:	mov	w7, #0x0                   	// #0
  428d68:	mov	x0, x22
  428d6c:	bl	427e28 <_obstack_memory_used@@Base+0xf118>
  428d70:	mov	x19, x0
  428d74:	mov	x0, x26
  428d78:	bl	402ae0 <free@plt>
  428d7c:	mov	x0, x19
  428d80:	ldp	x19, x20, [sp, #16]
  428d84:	ldp	x21, x22, [sp, #32]
  428d88:	ldp	x23, x24, [sp, #48]
  428d8c:	ldp	x25, x26, [sp, #64]
  428d90:	ldp	x27, x28, [sp, #80]
  428d94:	ldp	x29, x30, [sp], #112
  428d98:	ret
  428d9c:	mov	x0, x28
  428da0:	bl	402800 <malloc@plt>
  428da4:	mov	x26, x0
  428da8:	cbz	x0, 428dd0 <_obstack_memory_used@@Base+0x100c0>
  428dac:	ldr	x1, [sp, #104]
  428db0:	mov	x2, x20
  428db4:	bl	402650 <memcpy@plt>
  428db8:	mov	x1, x21
  428dbc:	mov	x2, x19
  428dc0:	add	x0, x26, x20
  428dc4:	mov	x21, x26
  428dc8:	bl	402650 <memcpy@plt>
  428dcc:	b	428d4c <_obstack_memory_used@@Base+0x1003c>
  428dd0:	ldp	x21, x22, [sp, #32]
  428dd4:	ldp	x23, x24, [sp, #48]
  428dd8:	ldp	x25, x26, [sp, #64]
  428ddc:	mov	x19, #0xfffffffffffffffe    	// #-2
  428de0:	mov	x0, x19
  428de4:	ldp	x19, x20, [sp, #16]
  428de8:	ldp	x27, x28, [sp, #80]
  428dec:	ldp	x29, x30, [sp], #112
  428df0:	ret
  428df4:	mov	x21, x1
  428df8:	mov	x26, #0x0                   	// #0
  428dfc:	b	428d4c <_obstack_memory_used@@Base+0x1003c>
  428e00:	cbz	x2, 428e20 <_obstack_memory_used@@Base+0x10110>
  428e04:	ldrb	w5, [x0, #56]
  428e08:	mov	w6, #0x1                   	// #1
  428e0c:	bfi	w5, w6, #1, #2
  428e10:	strb	w5, [x0, #56]
  428e14:	stp	x2, x3, [x1]
  428e18:	str	x4, [x1, #16]
  428e1c:	ret
  428e20:	ldrb	w2, [x0, #56]
  428e24:	and	w2, w2, #0xfffffff9
  428e28:	strb	w2, [x0, #56]
  428e2c:	str	xzr, [x1]
  428e30:	stp	xzr, xzr, [x1, #8]
  428e34:	ret
  428e38:	stp	x29, x30, [sp, #-48]!
  428e3c:	mov	w1, #0x0                   	// #0
  428e40:	mov	x29, sp
  428e44:	add	x2, sp, #0x28
  428e48:	stp	x19, x20, [sp, #16]
  428e4c:	mov	x19, x0
  428e50:	bl	402b10 <acl_get_entry@plt>
  428e54:	cmp	w0, #0x0
  428e58:	b.le	428ea8 <_obstack_memory_used@@Base+0x10198>
  428e5c:	mov	w20, #0x20                  	// #32
  428e60:	b	428e84 <_obstack_memory_used@@Base+0x10174>
  428e64:	ldr	w3, [sp, #36]
  428e68:	cmp	w3, w1
  428e6c:	ccmp	w3, #0x4, #0x4, ne  // ne = any
  428e70:	ccmp	w3, w20, #0x4, ne  // ne = any
  428e74:	b.ne	428eb4 <_obstack_memory_used@@Base+0x101a4>  // b.any
  428e78:	bl	402b10 <acl_get_entry@plt>
  428e7c:	cmp	w0, #0x0
  428e80:	b.le	428ea8 <_obstack_memory_used@@Base+0x10198>
  428e84:	ldr	x0, [sp, #40]
  428e88:	add	x1, sp, #0x24
  428e8c:	bl	4028c0 <acl_get_tag_type@plt>
  428e90:	mov	w3, w0
  428e94:	add	x2, sp, #0x28
  428e98:	mov	x0, x19
  428e9c:	mov	w1, #0x1                   	// #1
  428ea0:	tbz	w3, #31, 428e64 <_obstack_memory_used@@Base+0x10154>
  428ea4:	mov	w0, #0xffffffff            	// #-1
  428ea8:	ldp	x19, x20, [sp, #16]
  428eac:	ldp	x29, x30, [sp], #48
  428eb0:	ret
  428eb4:	mov	w0, #0x1                   	// #1
  428eb8:	ldp	x19, x20, [sp, #16]
  428ebc:	ldp	x29, x30, [sp], #48
  428ec0:	ret
  428ec4:	nop
  428ec8:	stp	x29, x30, [sp, #-16]!
  428ecc:	mov	x29, sp
  428ed0:	bl	4026e0 <acl_entries@plt>
  428ed4:	cmp	w0, #0x0
  428ed8:	cset	w0, gt
  428edc:	ldp	x29, x30, [sp], #16
  428ee0:	ret
  428ee4:	nop
  428ee8:	stp	x29, x30, [sp, #-32]!
  428eec:	mov	x29, sp
  428ef0:	str	x19, [sp, #16]
  428ef4:	mov	x19, x0
  428ef8:	ldr	x0, [x0, #8]
  428efc:	cbz	x0, 428f04 <_obstack_memory_used@@Base+0x101f4>
  428f00:	bl	402d30 <acl_free@plt>
  428f04:	ldr	x0, [x19, #16]
  428f08:	cbz	x0, 428f18 <_obstack_memory_used@@Base+0x10208>
  428f0c:	ldr	x19, [sp, #16]
  428f10:	ldp	x29, x30, [sp], #32
  428f14:	b	402d30 <acl_free@plt>
  428f18:	ldr	x19, [sp, #16]
  428f1c:	ldp	x29, x30, [sp], #32
  428f20:	ret
  428f24:	nop
  428f28:	stp	x29, x30, [sp, #-48]!
  428f2c:	cmn	w1, #0x1
  428f30:	mov	x29, sp
  428f34:	stp	xzr, xzr, [x3]
  428f38:	str	w2, [x3]
  428f3c:	stp	x19, x20, [sp, #16]
  428f40:	mov	x19, x3
  428f44:	mov	w20, w2
  428f48:	stp	xzr, xzr, [x3, #16]
  428f4c:	str	x21, [sp, #32]
  428f50:	mov	x21, x0
  428f54:	b.eq	428f88 <_obstack_memory_used@@Base+0x10278>  // b.none
  428f58:	mov	w0, w1
  428f5c:	bl	402980 <acl_get_fd@plt>
  428f60:	str	x0, [x19, #8]
  428f64:	cbz	x0, 428f98 <_obstack_memory_used@@Base+0x10288>
  428f68:	and	w1, w20, #0xf000
  428f6c:	mov	w0, #0x0                   	// #0
  428f70:	cmp	w1, #0x4, lsl #12
  428f74:	b.eq	428fbc <_obstack_memory_used@@Base+0x102ac>  // b.none
  428f78:	ldp	x19, x20, [sp, #16]
  428f7c:	ldr	x21, [sp, #32]
  428f80:	ldp	x29, x30, [sp], #48
  428f84:	ret
  428f88:	mov	w1, #0x8000                	// #32768
  428f8c:	bl	402ac0 <acl_get_file@plt>
  428f90:	str	x0, [x19, #8]
  428f94:	cbnz	x0, 428f68 <_obstack_memory_used@@Base+0x10258>
  428f98:	bl	402cb0 <__errno_location@plt>
  428f9c:	ldr	w0, [x0]
  428fa0:	bl	4293d0 <_obstack_memory_used@@Base+0x106c0>
  428fa4:	and	w0, w0, #0xff
  428fa8:	neg	w0, w0
  428fac:	ldp	x19, x20, [sp, #16]
  428fb0:	ldr	x21, [sp, #32]
  428fb4:	ldp	x29, x30, [sp], #48
  428fb8:	ret
  428fbc:	mov	x0, x21
  428fc0:	bl	402ac0 <acl_get_file@plt>
  428fc4:	str	x0, [x19, #16]
  428fc8:	cmp	x0, #0x0
  428fcc:	csetm	w0, eq  // eq = none
  428fd0:	ldp	x19, x20, [sp, #16]
  428fd4:	ldr	x21, [sp, #32]
  428fd8:	ldp	x29, x30, [sp], #48
  428fdc:	ret
  428fe0:	mov	w3, w1
  428fe4:	mov	w1, w2
  428fe8:	cmn	w3, #0x1
  428fec:	b.eq	428ff8 <_obstack_memory_used@@Base+0x102e8>  // b.none
  428ff0:	mov	w0, w3
  428ff4:	b	4028f0 <fchmod@plt>
  428ff8:	b	402810 <chmod@plt>
  428ffc:	nop
  429000:	stp	x29, x30, [sp, #-64]!
  429004:	mov	x29, sp
  429008:	stp	x19, x20, [sp, #16]
  42900c:	mov	x19, x0
  429010:	stp	x21, x22, [sp, #32]
  429014:	mov	x22, x1
  429018:	ldr	w1, [x0]
  42901c:	stp	x23, x24, [sp, #48]
  429020:	mov	w21, w2
  429024:	ands	w23, w1, #0xe00
  429028:	b.ne	4290b0 <_obstack_memory_used@@Base+0x103a0>  // b.any
  42902c:	ldrb	w0, [x0, #24]
  429030:	cbnz	w0, 4291f8 <_obstack_memory_used@@Base+0x104e8>
  429034:	ldr	x1, [x19, #8]
  429038:	cbz	x1, 4290d8 <_obstack_memory_used@@Base+0x103c8>
  42903c:	cmn	w21, #0x1
  429040:	b.eq	4291a8 <_obstack_memory_used@@Base+0x10498>  // b.none
  429044:	mov	w0, w21
  429048:	bl	4026b0 <acl_set_fd@plt>
  42904c:	mov	w20, w0
  429050:	cbz	w20, 429134 <_obstack_memory_used@@Base+0x10424>
  429054:	bl	402cb0 <__errno_location@plt>
  429058:	ldr	w24, [x0]
  42905c:	mov	x20, x0
  429060:	mov	w0, w24
  429064:	bl	4293d0 <_obstack_memory_used@@Base+0x106c0>
  429068:	tst	w0, #0xff
  42906c:	b.ne	429170 <_obstack_memory_used@@Base+0x10460>  // b.any
  429070:	ldr	x0, [x19, #8]
  429074:	mov	w1, #0x1                   	// #1
  429078:	strb	w1, [x19, #24]
  42907c:	bl	428e38 <_obstack_memory_used@@Base+0x10128>
  429080:	mov	w24, w0
  429084:	cbnz	w0, 42916c <_obstack_memory_used@@Base+0x1045c>
  429088:	ldrb	w0, [x19, #24]
  42908c:	cbz	w0, 429178 <_obstack_memory_used@@Base+0x10468>
  429090:	mov	w20, #0x0                   	// #0
  429094:	cbz	w23, 42925c <_obstack_memory_used@@Base+0x1054c>
  429098:	mov	w0, w20
  42909c:	ldp	x19, x20, [sp, #16]
  4290a0:	ldp	x21, x22, [sp, #32]
  4290a4:	ldp	x23, x24, [sp, #48]
  4290a8:	ldp	x29, x30, [sp], #64
  4290ac:	ret
  4290b0:	cmn	w2, #0x1
  4290b4:	b.eq	4291c4 <_obstack_memory_used@@Base+0x104b4>  // b.none
  4290b8:	mov	w0, w2
  4290bc:	bl	4028f0 <fchmod@plt>
  4290c0:	mov	w20, w0
  4290c4:	cbnz	w20, 4291a0 <_obstack_memory_used@@Base+0x10490>
  4290c8:	ldrb	w0, [x19, #24]
  4290cc:	cbnz	w0, 429098 <_obstack_memory_used@@Base+0x10388>
  4290d0:	ldr	x1, [x19, #8]
  4290d4:	cbnz	x1, 42903c <_obstack_memory_used@@Base+0x1032c>
  4290d8:	ldr	w0, [x19]
  4290dc:	bl	402970 <acl_from_mode@plt>
  4290e0:	str	x0, [x19, #8]
  4290e4:	cbz	x0, 429198 <_obstack_memory_used@@Base+0x10488>
  4290e8:	mov	w24, #0x0                   	// #0
  4290ec:	cmn	w21, #0x1
  4290f0:	b.eq	42922c <_obstack_memory_used@@Base+0x1051c>  // b.none
  4290f4:	mov	x1, x0
  4290f8:	mov	w0, w21
  4290fc:	bl	4026b0 <acl_set_fd@plt>
  429100:	mov	w20, w0
  429104:	cbz	w20, 4291d4 <_obstack_memory_used@@Base+0x104c4>
  429108:	bl	402cb0 <__errno_location@plt>
  42910c:	ldr	w0, [x0]
  429110:	bl	4293d0 <_obstack_memory_used@@Base+0x106c0>
  429114:	tst	w0, #0xff
  429118:	b.eq	429244 <_obstack_memory_used@@Base+0x10534>  // b.none
  42911c:	cbnz	w24, 429250 <_obstack_memory_used@@Base+0x10540>
  429120:	cbnz	w23, 429098 <_obstack_memory_used@@Base+0x10388>
  429124:	bl	402cb0 <__errno_location@plt>
  429128:	ldr	w24, [x0]
  42912c:	ldr	w1, [x19]
  429130:	b	4291fc <_obstack_memory_used@@Base+0x104ec>
  429134:	ldr	w21, [x19]
  429138:	and	w21, w21, #0xf000
  42913c:	cmp	w21, #0x4, lsl #12
  429140:	b.ne	429098 <_obstack_memory_used@@Base+0x10388>  // b.any
  429144:	ldr	x0, [x19, #16]
  429148:	cbz	x0, 429154 <_obstack_memory_used@@Base+0x10444>
  42914c:	bl	428ec8 <_obstack_memory_used@@Base+0x101b8>
  429150:	cbnz	w0, 429288 <_obstack_memory_used@@Base+0x10578>
  429154:	mov	x0, x22
  429158:	ldp	x19, x20, [sp, #16]
  42915c:	ldp	x21, x22, [sp, #32]
  429160:	ldp	x23, x24, [sp, #48]
  429164:	ldp	x29, x30, [sp], #64
  429168:	b	402790 <acl_delete_def_file@plt>
  42916c:	ldr	w24, [x20]
  429170:	ldrb	w0, [x19, #24]
  429174:	cbnz	w0, 4292a8 <_obstack_memory_used@@Base+0x10598>
  429178:	ldr	x0, [x19, #8]
  42917c:	cbz	x0, 429184 <_obstack_memory_used@@Base+0x10474>
  429180:	bl	402d30 <acl_free@plt>
  429184:	ldr	w0, [x19]
  429188:	bl	402970 <acl_from_mode@plt>
  42918c:	str	x0, [x19, #8]
  429190:	cbnz	x0, 4290ec <_obstack_memory_used@@Base+0x103dc>
  429194:	cbnz	w24, 429250 <_obstack_memory_used@@Base+0x10540>
  429198:	cbz	w23, 429124 <_obstack_memory_used@@Base+0x10414>
  42919c:	nop
  4291a0:	mov	w20, #0xffffffff            	// #-1
  4291a4:	b	429098 <_obstack_memory_used@@Base+0x10388>
  4291a8:	mov	x2, x1
  4291ac:	mov	x0, x22
  4291b0:	mov	w1, #0x8000                	// #32768
  4291b4:	bl	402950 <acl_set_file@plt>
  4291b8:	mov	w20, w0
  4291bc:	cbz	w20, 429134 <_obstack_memory_used@@Base+0x10424>
  4291c0:	b	429054 <_obstack_memory_used@@Base+0x10344>
  4291c4:	mov	x0, x22
  4291c8:	bl	402810 <chmod@plt>
  4291cc:	mov	w20, w0
  4291d0:	b	4290c4 <_obstack_memory_used@@Base+0x103b4>
  4291d4:	ldr	w0, [x19]
  4291d8:	and	w0, w0, #0xf000
  4291dc:	cmp	w0, #0x4, lsl #12
  4291e0:	b.eq	429264 <_obstack_memory_used@@Base+0x10554>  // b.none
  4291e4:	cbz	w24, 429098 <_obstack_memory_used@@Base+0x10388>
  4291e8:	bl	402cb0 <__errno_location@plt>
  4291ec:	mov	w20, #0xffffffff            	// #-1
  4291f0:	str	w24, [x0]
  4291f4:	b	429098 <_obstack_memory_used@@Base+0x10388>
  4291f8:	mov	w24, #0x0                   	// #0
  4291fc:	cmn	w21, #0x1
  429200:	b.eq	429274 <_obstack_memory_used@@Base+0x10564>  // b.none
  429204:	mov	w0, w21
  429208:	bl	4028f0 <fchmod@plt>
  42920c:	mov	w20, w0
  429210:	cbnz	w24, 4291e8 <_obstack_memory_used@@Base+0x104d8>
  429214:	mov	w0, w20
  429218:	ldp	x19, x20, [sp, #16]
  42921c:	ldp	x21, x22, [sp, #32]
  429220:	ldp	x23, x24, [sp, #48]
  429224:	ldp	x29, x30, [sp], #64
  429228:	ret
  42922c:	mov	x2, x0
  429230:	mov	w1, #0x8000                	// #32768
  429234:	mov	x0, x22
  429238:	bl	402950 <acl_set_file@plt>
  42923c:	mov	w20, w0
  429240:	b	429104 <_obstack_memory_used@@Base+0x103f4>
  429244:	mov	w0, #0x1                   	// #1
  429248:	strb	w0, [x19, #24]
  42924c:	cbz	w24, 429090 <_obstack_memory_used@@Base+0x10380>
  429250:	bl	402cb0 <__errno_location@plt>
  429254:	str	w24, [x0]
  429258:	cbnz	w23, 4291a0 <_obstack_memory_used@@Base+0x10490>
  42925c:	ldr	w1, [x19]
  429260:	b	4291fc <_obstack_memory_used@@Base+0x104ec>
  429264:	mov	x0, x22
  429268:	bl	402790 <acl_delete_def_file@plt>
  42926c:	mov	w20, w0
  429270:	b	4291e4 <_obstack_memory_used@@Base+0x104d4>
  429274:	mov	x0, x22
  429278:	bl	402810 <chmod@plt>
  42927c:	mov	w20, w0
  429280:	cbz	w24, 429214 <_obstack_memory_used@@Base+0x10504>
  429284:	b	4291e8 <_obstack_memory_used@@Base+0x104d8>
  429288:	mov	w1, w21
  42928c:	mov	x0, x22
  429290:	ldr	x2, [x19, #16]
  429294:	ldp	x19, x20, [sp, #16]
  429298:	ldp	x21, x22, [sp, #32]
  42929c:	ldp	x23, x24, [sp, #48]
  4292a0:	ldp	x29, x30, [sp], #64
  4292a4:	b	402950 <acl_set_file@plt>
  4292a8:	cbnz	w24, 429250 <_obstack_memory_used@@Base+0x10540>
  4292ac:	b	429090 <_obstack_memory_used@@Base+0x10380>
  4292b0:	stp	x29, x30, [sp, #-288]!
  4292b4:	mov	x2, #0x101                 	// #257
  4292b8:	mov	x29, sp
  4292bc:	add	x1, sp, #0x18
  4292c0:	bl	429310 <_obstack_memory_used@@Base+0x10600>
  4292c4:	cbnz	w0, 429300 <_obstack_memory_used@@Base+0x105f0>
  4292c8:	ldrh	w0, [sp, #24]
  4292cc:	cmp	w0, #0x43
  4292d0:	b.eq	429300 <_obstack_memory_used@@Base+0x105f0>  // b.none
  4292d4:	ldr	w1, [sp, #24]
  4292d8:	mov	w0, #0x4f50                	// #20304
  4292dc:	movk	w0, #0x4953, lsl #16
  4292e0:	cmp	w1, w0
  4292e4:	b.eq	4292f4 <_obstack_memory_used@@Base+0x105e4>  // b.none
  4292e8:	mov	w0, #0x1                   	// #1
  4292ec:	ldp	x29, x30, [sp], #288
  4292f0:	ret
  4292f4:	ldrh	w0, [sp, #28]
  4292f8:	cmp	w0, #0x58
  4292fc:	b.ne	4292e8 <_obstack_memory_used@@Base+0x105d8>  // b.any
  429300:	mov	w0, #0x0                   	// #0
  429304:	ldp	x29, x30, [sp], #288
  429308:	ret
  42930c:	nop
  429310:	stp	x29, x30, [sp, #-48]!
  429314:	mov	x29, sp
  429318:	stp	x19, x20, [sp, #16]
  42931c:	mov	x19, x2
  429320:	stp	x21, x22, [sp, #32]
  429324:	mov	x21, x1
  429328:	mov	x1, #0x0                   	// #0
  42932c:	bl	402d20 <setlocale@plt>
  429330:	cbz	x0, 4293b4 <_obstack_memory_used@@Base+0x106a4>
  429334:	mov	x20, x0
  429338:	bl	402690 <strlen@plt>
  42933c:	cmp	x19, x0
  429340:	b.hi	429360 <_obstack_memory_used@@Base+0x10650>  // b.pmore
  429344:	mov	w22, #0x22                  	// #34
  429348:	cbnz	x19, 429388 <_obstack_memory_used@@Base+0x10678>
  42934c:	mov	w0, w22
  429350:	ldp	x19, x20, [sp, #16]
  429354:	ldp	x21, x22, [sp, #32]
  429358:	ldp	x29, x30, [sp], #48
  42935c:	ret
  429360:	add	x2, x0, #0x1
  429364:	mov	x1, x20
  429368:	mov	x0, x21
  42936c:	mov	w22, #0x0                   	// #0
  429370:	bl	402650 <memcpy@plt>
  429374:	mov	w0, w22
  429378:	ldp	x19, x20, [sp, #16]
  42937c:	ldp	x21, x22, [sp, #32]
  429380:	ldp	x29, x30, [sp], #48
  429384:	ret
  429388:	sub	x19, x19, #0x1
  42938c:	mov	x1, x20
  429390:	mov	x2, x19
  429394:	mov	x0, x21
  429398:	bl	402650 <memcpy@plt>
  42939c:	strb	wzr, [x21, x19]
  4293a0:	mov	w0, w22
  4293a4:	ldp	x19, x20, [sp, #16]
  4293a8:	ldp	x21, x22, [sp, #32]
  4293ac:	ldp	x29, x30, [sp], #48
  4293b0:	ret
  4293b4:	mov	w22, #0x16                  	// #22
  4293b8:	cbz	x19, 42934c <_obstack_memory_used@@Base+0x1063c>
  4293bc:	strb	wzr, [x21]
  4293c0:	b	42934c <_obstack_memory_used@@Base+0x1063c>
  4293c4:	nop
  4293c8:	mov	x1, #0x0                   	// #0
  4293cc:	b	402d20 <setlocale@plt>
  4293d0:	mov	w1, w0
  4293d4:	cmp	w0, #0x26
  4293d8:	b.eq	429404 <_obstack_memory_used@@Base+0x106f4>  // b.none
  4293dc:	b.gt	4293f8 <_obstack_memory_used@@Base+0x106e8>
  4293e0:	cmp	w0, #0x10
  4293e4:	mov	w0, #0x0                   	// #0
  4293e8:	b.eq	4293f4 <_obstack_memory_used@@Base+0x106e4>  // b.none
  4293ec:	cmp	w1, #0x16
  4293f0:	cset	w0, ne  // ne = any
  4293f4:	ret
  4293f8:	cmp	w0, #0x5f
  4293fc:	cset	w0, ne  // ne = any
  429400:	ret
  429404:	mov	w0, #0x0                   	// #0
  429408:	ret
  42940c:	nop
  429410:	stp	x29, x30, [sp, #-64]!
  429414:	mov	x29, sp
  429418:	stp	x19, x20, [sp, #16]
  42941c:	adrp	x20, 440000 <_obstack_memory_used@@Base+0x272f0>
  429420:	add	x20, x20, #0xde0
  429424:	stp	x21, x22, [sp, #32]
  429428:	adrp	x21, 440000 <_obstack_memory_used@@Base+0x272f0>
  42942c:	add	x21, x21, #0xdd8
  429430:	sub	x20, x20, x21
  429434:	mov	w22, w0
  429438:	stp	x23, x24, [sp, #48]
  42943c:	mov	x23, x1
  429440:	mov	x24, x2
  429444:	bl	402608 <mbrtowc@plt-0x38>
  429448:	cmp	xzr, x20, asr #3
  42944c:	b.eq	429478 <_obstack_memory_used@@Base+0x10768>  // b.none
  429450:	asr	x20, x20, #3
  429454:	mov	x19, #0x0                   	// #0
  429458:	ldr	x3, [x21, x19, lsl #3]
  42945c:	mov	x2, x24
  429460:	add	x19, x19, #0x1
  429464:	mov	x1, x23
  429468:	mov	w0, w22
  42946c:	blr	x3
  429470:	cmp	x20, x19
  429474:	b.ne	429458 <_obstack_memory_used@@Base+0x10748>  // b.any
  429478:	ldp	x19, x20, [sp, #16]
  42947c:	ldp	x21, x22, [sp, #32]
  429480:	ldp	x23, x24, [sp, #48]
  429484:	ldp	x29, x30, [sp], #64
  429488:	ret
  42948c:	nop
  429490:	ret
  429494:	nop
  429498:	adrp	x2, 441000 <_obstack_memory_used@@Base+0x282f0>
  42949c:	mov	x1, #0x0                   	// #0
  4294a0:	ldr	x2, [x2, #920]
  4294a4:	b	402720 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004294a8 <.fini>:
  4294a8:	stp	x29, x30, [sp, #-16]!
  4294ac:	mov	x29, sp
  4294b0:	ldp	x29, x30, [sp], #16
  4294b4:	ret
