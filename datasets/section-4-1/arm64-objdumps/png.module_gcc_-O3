
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//png.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_png_output_byte>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	w0, [x0, #44]
      14:	sub	w0, w0, #0x1
      18:	str	w0, [x19, #44]
      1c:	tbnz	w0, #31, 1fc <grub_png_output_byte+0x1fc>
      20:	add	x20, x19, #0x8, lsl #12
      24:	and	w1, w1, #0xff
      28:	ldr	w0, [x20, #2464]
      2c:	cbz	w0, 70 <grub_png_output_byte+0x70>
      30:	ldr	x0, [x20, #2456]
      34:	add	x2, x0, #0x1
      38:	str	x2, [x20, #2456]
      3c:	strb	w1, [x0]
      40:	ldr	w0, [x20, #2464]
      44:	add	w1, w0, #0x1
      48:	str	w1, [x20, #2464]
      4c:	ldr	w1, [x19, #60]
      50:	cmp	w1, w0
      54:	b.eq	90 <grub_png_output_byte+0x90>  // b.none
      58:	adrp	x0, 0 <grub_png_output_byte>
      5c:	ldr	x0, [x0]
      60:	ldr	w0, [x0]
      64:	ldp	x19, x20, [sp, #16]
      68:	ldp	x29, x30, [sp], #48
      6c:	ret
      70:	cmp	w1, #0x4
      74:	b.hi	214 <grub_png_output_byte+0x214>  // b.pmore
      78:	str	w1, [x20, #2468]
      7c:	add	w1, w0, #0x1
      80:	str	w1, [x20, #2464]
      84:	ldr	w1, [x19, #60]
      88:	cmp	w1, w0
      8c:	b.ne	58 <grub_png_output_byte+0x58>  // b.any
      90:	ldr	w2, [x20, #2472]
      94:	sxtw	x1, w0
      98:	str	x21, [sp, #32]
      9c:	mov	x0, #0x0                   	// #0
      a0:	ldr	x21, [x20, #2456]
      a4:	sub	x21, x21, x1
      a8:	sub	x4, x21, x1
      ac:	cbnz	w2, 1d8 <grub_png_output_byte+0x1d8>
      b0:	ldr	w1, [x20, #2468]
      b4:	cmp	w1, #0x3
      b8:	b.eq	270 <grub_png_output_byte+0x270>  // b.none
      bc:	b.gt	114 <grub_png_output_byte+0x114>
      c0:	cmp	w1, #0x1
      c4:	b.eq	22c <grub_png_output_byte+0x22c>  // b.none
      c8:	cmp	w1, #0x2
      cc:	b.ne	100 <grub_png_output_byte+0x100>  // b.any
      d0:	ldr	w2, [x19, #60]
      d4:	mov	x1, #0x0                   	// #0
      d8:	cmp	w2, #0x0
      dc:	b.le	100 <grub_png_output_byte+0x100>
      e0:	ldrb	w3, [x4, x1]
      e4:	ldrb	w2, [x21, x1]
      e8:	add	w2, w2, w3
      ec:	strb	w2, [x21, x1]
      f0:	add	x1, x1, #0x1
      f4:	ldr	w2, [x19, #60]
      f8:	cmp	w2, w1
      fc:	b.gt	e0 <grub_png_output_byte+0xe0>
     100:	bl	0 <grub_free>
     104:	ldr	x21, [sp, #32]
     108:	str	wzr, [x20, #2464]
     10c:	str	wzr, [x20, #2472]
     110:	b	58 <grub_png_output_byte+0x58>
     114:	cmp	w1, #0x4
     118:	b.ne	100 <grub_png_output_byte+0x100>  // b.any
     11c:	ldr	w1, [x19, #36]
     120:	mov	x11, x4
     124:	mov	x8, x21
     128:	mov	w9, #0x0                   	// #0
     12c:	cmp	w1, #0x0
     130:	b.le	158 <grub_png_output_byte+0x158>
     134:	nop
     138:	ldrb	w1, [x8]
     13c:	add	w9, w9, #0x1
     140:	ldrb	w2, [x11], #1
     144:	add	w1, w1, w2
     148:	strb	w1, [x8], #1
     14c:	ldr	w1, [x19, #36]
     150:	cmp	w1, w9
     154:	b.gt	138 <grub_png_output_byte+0x138>
     158:	ldr	w1, [x19, #60]
     15c:	cmp	w1, w9
     160:	b.le	100 <grub_png_output_byte+0x100>
     164:	mov	x1, #0x0                   	// #0
     168:	ldrb	w7, [x4, x1]
     16c:	ldrb	w10, [x11, x1]
     170:	ldrb	w5, [x21, x1]
     174:	subs	w6, w10, w7
     178:	sub	w13, w7, w10
     17c:	sub	w2, w5, w7
     180:	sub	w12, w7, w5
     184:	add	w3, w2, w6
     188:	csel	w6, w13, w6, mi  // mi = first
     18c:	cmp	w2, #0x0
     190:	csel	w2, w12, w2, lt  // lt = tstop
     194:	cmp	w3, #0x0
     198:	cneg	w3, w3, lt  // lt = tstop
     19c:	ldrb	w12, [x8, x1]
     1a0:	cmp	w3, w2
     1a4:	csel	w13, w3, w2, le
     1a8:	cmp	w13, w6
     1ac:	b.ge	1b8 <grub_png_output_byte+0x1b8>  // b.tcont
     1b0:	cmp	w3, w2
     1b4:	csel	w5, w7, w10, lt  // lt = tstop
     1b8:	add	w5, w5, w12
     1bc:	strb	w5, [x8, x1]
     1c0:	add	x1, x1, #0x1
     1c4:	ldr	w2, [x19, #60]
     1c8:	add	w3, w9, w1
     1cc:	cmp	w3, w2
     1d0:	b.lt	168 <grub_png_output_byte+0x168>  // b.tstop
     1d4:	b	100 <grub_png_output_byte+0x100>
     1d8:	mov	x0, x1
     1dc:	bl	0 <grub_zalloc>
     1e0:	mov	x4, x0
     1e4:	cbnz	x0, b0 <grub_png_output_byte+0xb0>
     1e8:	adrp	x0, 0 <grub_png_output_byte>
     1ec:	ldr	x21, [sp, #32]
     1f0:	ldr	x0, [x0]
     1f4:	ldr	w0, [x0]
     1f8:	b	64 <grub_png_output_byte+0x64>
     1fc:	adrp	x1, 0 <grub_png_output_byte>
     200:	mov	w0, #0x4                   	// #4
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x29, x30, [sp], #48
     20c:	ldr	x1, [x1]
     210:	b	0 <grub_error>
     214:	adrp	x1, 0 <grub_png_output_byte>
     218:	mov	w0, #0x4                   	// #4
     21c:	ldp	x19, x20, [sp, #16]
     220:	ldp	x29, x30, [sp], #48
     224:	ldr	x1, [x1]
     228:	b	0 <grub_error>
     22c:	ldr	w5, [x19, #36]
     230:	ldr	w1, [x19, #60]
     234:	add	x3, x21, w5, sxtw
     238:	cmp	w5, w1
     23c:	b.ge	100 <grub_png_output_byte+0x100>  // b.tcont
     240:	mov	x1, #0x0                   	// #0
     244:	nop
     248:	ldrb	w4, [x21, x1]
     24c:	ldrb	w2, [x3, x1]
     250:	add	w2, w2, w4
     254:	strb	w2, [x3, x1]
     258:	add	x1, x1, #0x1
     25c:	ldr	w4, [x19, #60]
     260:	add	w2, w5, w1
     264:	cmp	w4, w2
     268:	b.gt	248 <grub_png_output_byte+0x248>
     26c:	b	100 <grub_png_output_byte+0x100>
     270:	ldr	w1, [x19, #36]
     274:	mov	x3, x21
     278:	mov	w5, #0x0                   	// #0
     27c:	cmp	w1, #0x0
     280:	b.le	2a8 <grub_png_output_byte+0x2a8>
     284:	nop
     288:	ldrb	w1, [x4], #1
     28c:	add	w5, w5, #0x1
     290:	ldrb	w2, [x3]
     294:	add	w1, w2, w1, lsr #1
     298:	strb	w1, [x3], #1
     29c:	ldr	w1, [x19, #36]
     2a0:	cmp	w1, w5
     2a4:	b.gt	288 <grub_png_output_byte+0x288>
     2a8:	ldr	w1, [x19, #60]
     2ac:	cmp	w1, w5
     2b0:	b.le	100 <grub_png_output_byte+0x100>
     2b4:	mov	x1, #0x0                   	// #0
     2b8:	ldrb	w2, [x4, x1]
     2bc:	ldrb	w7, [x21, x1]
     2c0:	ldrb	w6, [x3, x1]
     2c4:	add	w2, w2, w7
     2c8:	add	w2, w6, w2, lsr #1
     2cc:	strb	w2, [x3, x1]
     2d0:	add	x1, x1, #0x1
     2d4:	ldr	w6, [x19, #60]
     2d8:	add	w2, w5, w1
     2dc:	cmp	w6, w2
     2e0:	b.gt	2b8 <grub_png_output_byte+0x2b8>
     2e4:	b	100 <grub_png_output_byte+0x100>
	...

0000000000000300 <grub_png_get_byte>:
     300:	stp	x29, x30, [sp, #-64]!
     304:	mov	x29, sp
     308:	ldr	w1, [x0, #80]
     30c:	stp	x19, x20, [sp, #16]
     310:	mov	x19, x0
     314:	stp	x21, x22, [sp, #32]
     318:	add	x21, sp, #0x3c
     31c:	ldr	x0, [x0]
     320:	cbz	w1, 3e0 <grub_png_get_byte+0xe0>
     324:	ldr	w1, [x19, #84]
     328:	add	x21, sp, #0x3c
     32c:	cbnz	w1, 3e0 <grub_png_get_byte+0xe0>
     330:	mov	w22, #0x4154                	// #16724
     334:	movk	w22, #0x4944, lsl #16
     338:	b	388 <grub_png_get_byte+0x88>
     33c:	str	wzr, [sp, #60]
     340:	bl	0 <grub_file_read>
     344:	ldr	x0, [x19]
     348:	mov	x1, x21
     34c:	ldr	w20, [sp, #60]
     350:	mov	x2, #0x4                   	// #4
     354:	str	wzr, [sp, #60]
     358:	bl	0 <grub_file_read>
     35c:	rev	w20, w20
     360:	ldr	w0, [sp, #60]
     364:	rev	w0, w0
     368:	cmp	w0, w22
     36c:	b.ne	41c <grub_png_get_byte+0x11c>  // b.any
     370:	ldr	x0, [x19]
     374:	ldr	x1, [x0, #24]
     378:	add	w1, w1, #0x4
     37c:	add	w1, w1, w20
     380:	str	w1, [x19, #24]
     384:	cbnz	w20, 3d8 <grub_png_get_byte+0xd8>
     388:	mov	x1, x21
     38c:	mov	x2, #0x4                   	// #4
     390:	str	wzr, [sp, #60]
     394:	bl	0 <grub_file_read>
     398:	ldr	x0, [x19]
     39c:	mov	x1, x21
     3a0:	ldr	w3, [x19, #24]
     3a4:	mov	x2, #0x4                   	// #4
     3a8:	ldr	x4, [x0, #24]
     3ac:	cmp	x4, x3
     3b0:	b.eq	33c <grub_png_get_byte+0x3c>  // b.none
     3b4:	adrp	x1, 0 <grub_png_output_byte>
     3b8:	mov	w0, #0x4                   	// #4
     3bc:	ldr	x1, [x1]
     3c0:	bl	0 <grub_error>
     3c4:	mov	w0, #0x0                   	// #0
     3c8:	ldp	x19, x20, [sp, #16]
     3cc:	ldp	x21, x22, [sp, #32]
     3d0:	ldp	x29, x30, [sp], #64
     3d4:	ret
     3d8:	str	w20, [x19, #84]
     3dc:	nop
     3e0:	mov	x1, x21
     3e4:	mov	x2, #0x1                   	// #1
     3e8:	strb	wzr, [sp, #60]
     3ec:	bl	0 <grub_file_read>
     3f0:	ldr	w0, [x19, #80]
     3f4:	cbnz	w0, 40c <grub_png_get_byte+0x10c>
     3f8:	ldrb	w0, [sp, #60]
     3fc:	ldp	x19, x20, [sp, #16]
     400:	ldp	x21, x22, [sp, #32]
     404:	ldp	x29, x30, [sp], #64
     408:	ret
     40c:	ldr	w0, [x19, #84]
     410:	sub	w0, w0, #0x1
     414:	str	w0, [x19, #84]
     418:	b	3f8 <grub_png_get_byte+0xf8>
     41c:	adrp	x1, 0 <grub_png_output_byte>
     420:	mov	w0, #0x4                   	// #4
     424:	ldr	x1, [x1]
     428:	bl	0 <grub_error>
     42c:	mov	w0, #0x0                   	// #0
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x21, x22, [sp, #32]
     438:	ldp	x29, x30, [sp], #64
     43c:	ret
	...

0000000000000450 <grub_png_insert_huff_item.part.0>:
     450:	ldr	w15, [x0, #28]
     454:	cmp	w15, w2
     458:	b.lt	668 <grub_png_insert_huff_item.part.0+0x218>  // b.tstop
     45c:	mov	w4, #0x0                   	// #0
     460:	ldp	x10, x11, [x0]
     464:	b.le	638 <grub_png_insert_huff_item.part.0+0x1e8>
     468:	add	x5, x11, w2, sxtw #2
     46c:	mvn	w4, w2
     470:	add	w4, w4, w15
     474:	sub	w16, w15, w2
     478:	neg	x3, x5, lsr #2
     47c:	cmp	w4, #0x9
     480:	and	w3, w3, #0x3
     484:	sxtw	x4, w2
     488:	b.ls	684 <grub_png_insert_huff_item.part.0+0x234>  // b.plast
     48c:	cbz	w3, 678 <grub_png_insert_huff_item.part.0+0x228>
     490:	ldr	w17, [x11, x4, lsl #2]
     494:	cmp	w3, #0x1
     498:	add	w14, w2, #0x1
     49c:	b.eq	4c0 <grub_png_insert_huff_item.part.0+0x70>  // b.none
     4a0:	ldr	w6, [x5, #4]
     4a4:	cmp	w3, #0x3
     4a8:	add	w14, w2, #0x2
     4ac:	add	w17, w17, w6
     4b0:	b.ne	4c0 <grub_png_insert_huff_item.part.0+0x70>  // b.any
     4b4:	ldr	w5, [x5, #8]
     4b8:	add	w14, w2, #0x3
     4bc:	add	w17, w17, w5
     4c0:	sub	w16, w16, w3
     4c4:	add	x3, x3, x4
     4c8:	mov	x8, #0x0                   	// #0
     4cc:	mov	x7, #0x0                   	// #0
     4d0:	lsr	w18, w16, #2
     4d4:	add	x3, x11, x3, lsl #2
     4d8:	add	x18, x3, w18, uxtw #4
     4dc:	nop
     4e0:	ldp	x6, x5, [x3]
     4e4:	asr	x13, x8, #32
     4e8:	asr	x12, x7, #32
     4ec:	add	x3, x3, #0x10
     4f0:	cmp	x3, x18
     4f4:	add	w9, w6, w8
     4f8:	add	w4, w5, w7
     4fc:	asr	x6, x6, #32
     500:	asr	x5, x5, #32
     504:	mov	x8, #0x0                   	// #0
     508:	mov	x7, #0x0                   	// #0
     50c:	add	w6, w6, w13
     510:	bfxil	x8, x9, #0, #32
     514:	add	w5, w5, w12
     518:	bfxil	x7, x4, #0, #32
     51c:	bfi	x8, x6, #32, #32
     520:	bfi	x7, x5, #32, #32
     524:	b.ne	4e0 <grub_png_insert_huff_item.part.0+0x90>  // b.any
     528:	add	w6, w9, w6
     52c:	and	w3, w16, #0xfffffffc
     530:	add	w4, w6, w4
     534:	add	w14, w3, w14
     538:	add	w5, w4, w5
     53c:	cmp	w16, w3
     540:	add	w4, w5, w17
     544:	b.eq	60c <grub_png_insert_huff_item.part.0+0x1bc>  // b.none
     548:	ldr	w5, [x11, w14, sxtw #2]
     54c:	add	w3, w14, #0x1
     550:	cmp	w15, w3
     554:	sbfiz	x3, x14, #2, #32
     558:	add	w4, w4, w5
     55c:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     560:	add	x3, x11, x3
     564:	add	w5, w14, #0x2
     568:	cmp	w15, w5
     56c:	ldr	w5, [x3, #4]
     570:	add	w4, w4, w5
     574:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     578:	ldr	w5, [x3, #8]
     57c:	add	w6, w14, #0x3
     580:	cmp	w15, w6
     584:	add	w4, w4, w5
     588:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     58c:	ldr	w5, [x3, #12]
     590:	add	w6, w14, #0x4
     594:	cmp	w15, w6
     598:	add	w4, w4, w5
     59c:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     5a0:	ldr	w5, [x3, #16]
     5a4:	add	w6, w14, #0x5
     5a8:	cmp	w15, w6
     5ac:	add	w4, w4, w5
     5b0:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     5b4:	ldr	w5, [x3, #20]
     5b8:	add	w6, w14, #0x6
     5bc:	cmp	w15, w6
     5c0:	add	w4, w4, w5
     5c4:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     5c8:	ldr	w5, [x3, #24]
     5cc:	add	w6, w14, #0x7
     5d0:	cmp	w15, w6
     5d4:	add	w4, w4, w5
     5d8:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     5dc:	ldr	w5, [x3, #28]
     5e0:	add	w6, w14, #0x8
     5e4:	cmp	w15, w6
     5e8:	add	w4, w4, w5
     5ec:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     5f0:	ldr	w5, [x3, #32]
     5f4:	add	w14, w14, #0x9
     5f8:	cmp	w15, w14
     5fc:	add	w4, w4, w5
     600:	b.le	60c <grub_png_insert_huff_item.part.0+0x1bc>
     604:	ldr	w3, [x3, #36]
     608:	add	w4, w4, w3
     60c:	cmp	w4, #0x0
     610:	b.le	638 <grub_png_insert_huff_item.part.0+0x1e8>
     614:	mov	w5, #0x0                   	// #0
     618:	ldr	w3, [x0, #24]
     61c:	sub	w3, w3, w5
     620:	add	w5, w5, #0x1
     624:	cmp	w5, w4
     628:	add	x6, x10, w3, sxtw #2
     62c:	ldur	w6, [x6, #-4]
     630:	str	w6, [x10, w3, sxtw #2]
     634:	b.ne	618 <grub_png_insert_huff_item.part.0+0x1c8>  // b.any
     638:	ldr	w3, [x0, #24]
     63c:	mov	x5, #0xfffffffffffffffc    	// #-4
     640:	add	x2, x5, w2, sxtw #2
     644:	sub	w4, w3, w4
     648:	str	w1, [x10, w4, sxtw #2]
     64c:	ldr	w1, [x0, #24]
     650:	add	w1, w1, #0x1
     654:	str	w1, [x0, #24]
     658:	ldr	w0, [x11, x2]
     65c:	add	w0, w0, #0x1
     660:	str	w0, [x11, x2]
     664:	ret
     668:	adrp	x1, 0 <grub_png_output_byte>
     66c:	mov	w0, #0x4                   	// #4
     670:	ldr	x1, [x1]
     674:	b	0 <grub_error>
     678:	mov	w14, w2
     67c:	mov	w17, #0x0                   	// #0
     680:	b	4c0 <grub_png_insert_huff_item.part.0+0x70>
     684:	mov	w14, w2
     688:	mov	w4, #0x0                   	// #0
     68c:	b	548 <grub_png_insert_huff_item.part.0+0xf8>
	...

0000000000000698 <grub_png_insert_huff_item.part.0.constprop.2>:
     698:	ldr	w13, [x0, #28]
     69c:	cmp	w13, #0x7
     6a0:	b.le	8a8 <grub_png_insert_huff_item.part.0.constprop.2+0x210>
     6a4:	cmp	w13, #0x8
     6a8:	mov	w3, #0x0                   	// #0
     6ac:	ldp	x9, x10, [x0]
     6b0:	b.eq	880 <grub_png_insert_huff_item.part.0.constprop.2+0x1e8>  // b.none
     6b4:	add	x2, x10, #0x20
     6b8:	sub	w3, w13, #0x9
     6bc:	cmp	w3, #0x9
     6c0:	sub	w15, w13, #0x8
     6c4:	neg	x2, x2, lsr #2
     6c8:	and	w2, w2, #0x3
     6cc:	b.ls	8c4 <grub_png_insert_huff_item.part.0.constprop.2+0x22c>  // b.plast
     6d0:	cbz	w2, 8b8 <grub_png_insert_huff_item.part.0.constprop.2+0x220>
     6d4:	ldr	w16, [x10, #32]
     6d8:	cmp	w2, #0x1
     6dc:	mov	w17, #0x9                   	// #9
     6e0:	b.eq	704 <grub_png_insert_huff_item.part.0.constprop.2+0x6c>  // b.none
     6e4:	ldr	w3, [x10, #36]
     6e8:	cmp	w2, #0x3
     6ec:	mov	w17, #0xa                   	// #10
     6f0:	add	w16, w16, w3
     6f4:	b.ne	704 <grub_png_insert_huff_item.part.0.constprop.2+0x6c>  // b.any
     6f8:	ldr	w3, [x10, #40]
     6fc:	mov	w17, #0xb                   	// #11
     700:	add	w16, w16, w3
     704:	sub	w15, w15, w2
     708:	ubfiz	x2, x2, #2, #2
     70c:	add	x2, x2, #0x20
     710:	mov	x7, #0x0                   	// #0
     714:	lsr	w14, w15, #2
     718:	add	x2, x10, x2
     71c:	mov	x6, #0x0                   	// #0
     720:	add	x14, x2, w14, uxtw #4
     724:	nop
     728:	ldp	x5, x4, [x2]
     72c:	asr	x12, x7, #32
     730:	asr	x11, x6, #32
     734:	add	x2, x2, #0x10
     738:	cmp	x2, x14
     73c:	add	w8, w5, w7
     740:	add	w3, w4, w6
     744:	asr	x5, x5, #32
     748:	asr	x4, x4, #32
     74c:	mov	x7, #0x0                   	// #0
     750:	mov	x6, #0x0                   	// #0
     754:	add	w5, w5, w12
     758:	bfxil	x7, x8, #0, #32
     75c:	add	w4, w4, w11
     760:	bfxil	x6, x3, #0, #32
     764:	bfi	x7, x5, #32, #32
     768:	bfi	x6, x4, #32, #32
     76c:	b.ne	728 <grub_png_insert_huff_item.part.0.constprop.2+0x90>  // b.any
     770:	add	w5, w8, w5
     774:	and	w6, w15, #0xfffffffc
     778:	add	w3, w5, w3
     77c:	add	w2, w6, w17
     780:	add	w4, w3, w4
     784:	cmp	w6, w15
     788:	add	w3, w4, w16
     78c:	b.eq	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>  // b.none
     790:	ldr	w5, [x10, w2, sxtw #2]
     794:	add	w4, w2, #0x1
     798:	cmp	w13, w4
     79c:	sbfiz	x4, x2, #2, #32
     7a0:	add	w3, w3, w5
     7a4:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     7a8:	add	x4, x10, x4
     7ac:	add	w5, w2, #0x2
     7b0:	cmp	w13, w5
     7b4:	ldr	w5, [x4, #4]
     7b8:	add	w3, w3, w5
     7bc:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     7c0:	ldr	w5, [x4, #8]
     7c4:	add	w6, w2, #0x3
     7c8:	cmp	w13, w6
     7cc:	add	w3, w3, w5
     7d0:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     7d4:	ldr	w5, [x4, #12]
     7d8:	add	w6, w2, #0x4
     7dc:	cmp	w13, w6
     7e0:	add	w3, w3, w5
     7e4:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     7e8:	ldr	w5, [x4, #16]
     7ec:	add	w6, w2, #0x5
     7f0:	cmp	w13, w6
     7f4:	add	w3, w3, w5
     7f8:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     7fc:	ldr	w5, [x4, #20]
     800:	add	w6, w2, #0x6
     804:	cmp	w13, w6
     808:	add	w3, w3, w5
     80c:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     810:	ldr	w5, [x4, #24]
     814:	add	w6, w2, #0x7
     818:	cmp	w13, w6
     81c:	add	w3, w3, w5
     820:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     824:	ldr	w5, [x4, #28]
     828:	add	w6, w2, #0x8
     82c:	cmp	w13, w6
     830:	add	w3, w3, w5
     834:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     838:	ldr	w5, [x4, #32]
     83c:	add	w2, w2, #0x9
     840:	cmp	w13, w2
     844:	add	w3, w3, w5
     848:	b.le	854 <grub_png_insert_huff_item.part.0.constprop.2+0x1bc>
     84c:	ldr	w2, [x4, #36]
     850:	add	w3, w3, w2
     854:	cmp	w3, #0x0
     858:	b.le	880 <grub_png_insert_huff_item.part.0.constprop.2+0x1e8>
     85c:	mov	w4, #0x0                   	// #0
     860:	ldr	w2, [x0, #24]
     864:	sub	w2, w2, w4
     868:	add	w4, w4, #0x1
     86c:	cmp	w4, w3
     870:	add	x5, x9, w2, sxtw #2
     874:	ldur	w5, [x5, #-4]
     878:	str	w5, [x9, w2, sxtw #2]
     87c:	b.ne	860 <grub_png_insert_huff_item.part.0.constprop.2+0x1c8>  // b.any
     880:	ldr	w2, [x0, #24]
     884:	sub	w3, w2, w3
     888:	str	w1, [x9, w3, sxtw #2]
     88c:	ldr	w1, [x0, #24]
     890:	add	w1, w1, #0x1
     894:	str	w1, [x0, #24]
     898:	ldr	w0, [x10, #28]
     89c:	add	w0, w0, #0x1
     8a0:	str	w0, [x10, #28]
     8a4:	ret
     8a8:	adrp	x1, 0 <grub_png_output_byte>
     8ac:	mov	w0, #0x4                   	// #4
     8b0:	ldr	x1, [x1]
     8b4:	b	0 <grub_error>
     8b8:	mov	w16, #0x0                   	// #0
     8bc:	mov	w17, #0x8                   	// #8
     8c0:	b	704 <grub_png_insert_huff_item.part.0.constprop.2+0x6c>
     8c4:	mov	w3, #0x0                   	// #0
     8c8:	mov	w2, #0x8                   	// #8
     8cc:	b	790 <grub_png_insert_huff_item.part.0.constprop.2+0xf8>
	...

00000000000008d8 <grub_png_read_dynamic_block>:
     8d8:	stp	x29, x30, [sp, #-128]!
     8dc:	adrp	x1, 0 <grub_png_output_byte>
     8e0:	mov	x29, sp
     8e4:	stp	x25, x26, [sp, #64]
     8e8:	ldr	x26, [x1]
     8ec:	stp	x19, x20, [sp, #16]
     8f0:	mov	x19, x0
     8f4:	stp	x21, x22, [sp, #32]
     8f8:	add	x21, x0, #0x950
     8fc:	ldr	w0, [x26]
     900:	cbnz	w0, a14 <grub_png_read_dynamic_block+0x13c>
     904:	mov	w20, #0x1                   	// #1
     908:	stp	x23, x24, [sp, #48]
     90c:	stp	x27, x28, [sp, #80]
     910:	ldr	w0, [x21, #28]
     914:	mov	x28, #0x0                   	// #0
     918:	mov	w25, #0x0                   	// #0
     91c:	cmp	w0, #0x0
     920:	mov	w23, #0x8                   	// #8
     924:	b.le	9cc <grub_png_read_dynamic_block+0xf4>
     928:	ldr	w2, [x19, #16]
     92c:	lsl	w25, w25, #1
     930:	cbz	w2, a28 <grub_png_read_dynamic_block+0x150>
     934:	ldr	w0, [x26]
     938:	cbnz	w0, 9a8 <grub_png_read_dynamic_block+0xd0>
     93c:	cmp	w2, #0x0
     940:	ldr	w0, [x19, #20]
     944:	csel	w1, w2, w20, le
     948:	subs	w27, w20, w1
     94c:	lsl	w24, w20, w1
     950:	sub	w24, w24, #0x1
     954:	and	w24, w24, w0
     958:	b.eq	e20 <grub_png_read_dynamic_block+0x548>  // b.none
     95c:	mov	w22, #0x0                   	// #0
     960:	b	970 <grub_png_read_dynamic_block+0x98>
     964:	lsl	w2, w2, w22
     968:	add	w24, w24, w2
     96c:	b.eq	a48 <grub_png_read_dynamic_block+0x170>  // b.none
     970:	add	w22, w22, w1
     974:	mov	x0, x19
     978:	bl	300 <grub_png_get_byte>
     97c:	and	w0, w0, #0xff
     980:	cmp	w27, #0x8
     984:	ldr	w4, [x26]
     988:	csel	w1, w27, w23, le
     98c:	stp	w23, w0, [x19, #16]
     990:	subs	w27, w27, w1
     994:	lsl	w2, w20, w1
     998:	sub	w2, w2, #0x1
     99c:	and	w2, w2, w0
     9a0:	cbz	w4, 964 <grub_png_read_dynamic_block+0x8c>
     9a4:	add	w25, w25, w24
     9a8:	ldr	x0, [x21, #8]
     9ac:	lsl	x1, x28, #2
     9b0:	ldr	w0, [x0, x28, lsl #2]
     9b4:	cmp	w0, w25
     9b8:	b.gt	a70 <grub_png_read_dynamic_block+0x198>
     9bc:	ldr	w0, [x21, #28]
     9c0:	add	x28, x28, #0x1
     9c4:	cmp	w0, w28
     9c8:	b.gt	928 <grub_png_read_dynamic_block+0x50>
     9cc:	mov	w2, #0x0                   	// #0
     9d0:	add	x23, x19, #0x8, lsl #12
     9d4:	mov	w1, w2
     9d8:	mov	x0, x19
     9dc:	ldrsw	x3, [x23, #2448]
     9e0:	add	x3, x19, x3
     9e4:	strb	w2, [x3, #2448]
     9e8:	bl	0 <grub_png_output_byte>
     9ec:	ldr	w0, [x23, #2448]
     9f0:	mov	w1, #0x7fff                	// #32767
     9f4:	add	w0, w0, #0x1
     9f8:	cmp	w0, w1
     9fc:	csel	w0, w0, wzr, le
     a00:	str	w0, [x23, #2448]
     a04:	ldr	w0, [x26]
     a08:	cbz	w0, 910 <grub_png_read_dynamic_block+0x38>
     a0c:	ldp	x23, x24, [sp, #48]
     a10:	ldp	x27, x28, [sp, #80]
     a14:	ldp	x19, x20, [sp, #16]
     a18:	ldp	x21, x22, [sp, #32]
     a1c:	ldp	x25, x26, [sp, #64]
     a20:	ldp	x29, x30, [sp], #128
     a24:	ret
     a28:	mov	x0, x19
     a2c:	bl	300 <grub_png_get_byte>
     a30:	ldr	w1, [x26]
     a34:	and	w0, w0, #0xff
     a38:	stp	w23, w0, [x19, #16]
     a3c:	cbnz	w1, 9a8 <grub_png_read_dynamic_block+0xd0>
     a40:	and	w24, w0, #0x1
     a44:	mov	w1, #0x1                   	// #1
     a48:	mov	w2, #0x8                   	// #8
     a4c:	asr	w0, w0, w1
     a50:	sub	w2, w2, w1
     a54:	stp	w2, w0, [x19, #16]
     a58:	add	w25, w25, w24
     a5c:	ldr	x0, [x21, #8]
     a60:	lsl	x1, x28, #2
     a64:	ldr	w0, [x0, x28, lsl #2]
     a68:	cmp	w0, w25
     a6c:	b.le	9bc <grub_png_read_dynamic_block+0xe4>
     a70:	ldr	x0, [x21, #16]
     a74:	ldr	x2, [x21]
     a78:	ldr	w0, [x0, x1]
     a7c:	add	w25, w25, w0
     a80:	ldr	w0, [x2, w25, sxtw #2]
     a84:	cmp	w0, #0xff
     a88:	b.le	dc0 <grub_png_read_dynamic_block+0x4e8>
     a8c:	cmp	w0, #0x100
     a90:	b.eq	e00 <grub_png_read_dynamic_block+0x528>  // b.none
     a94:	adrp	x1, 0 <grub_png_output_byte>
     a98:	sub	w0, w0, #0x101
     a9c:	ldr	x2, [x1]
     aa0:	str	x2, [sp, #120]
     aa4:	add	x1, x2, #0x80
     aa8:	ldr	w2, [x2, w0, sxtw #2]
     aac:	str	w2, [sp, #108]
     ab0:	ldrb	w24, [x1, w0, sxtw]
     ab4:	cbnz	w24, cfc <grub_png_read_dynamic_block+0x424>
     ab8:	ldr	w0, [x19, #2444]
     abc:	add	x22, x19, #0x970
     ac0:	cmp	w0, #0x0
     ac4:	b.le	b84 <grub_png_read_dynamic_block+0x2ac>
     ac8:	ldr	w2, [x19, #16]
     acc:	mov	x23, #0x0                   	// #0
     ad0:	mov	w25, #0x0                   	// #0
     ad4:	mov	w24, #0x8                   	// #8
     ad8:	lsl	w25, w25, #1
     adc:	cbz	w2, c08 <grub_png_read_dynamic_block+0x330>
     ae0:	ldr	w0, [x26]
     ae4:	cbnz	w0, b60 <grub_png_read_dynamic_block+0x288>
     ae8:	cmp	w2, #0x0
     aec:	ldr	w0, [x19, #20]
     af0:	csel	w1, w2, w20, le
     af4:	subs	w28, w20, w1
     af8:	lsl	w27, w20, w1
     afc:	sub	w27, w27, #0x1
     b00:	and	w27, w27, w0
     b04:	b.eq	e28 <grub_png_read_dynamic_block+0x550>  // b.none
     b08:	mov	w5, #0x0                   	// #0
     b0c:	b	b1c <grub_png_read_dynamic_block+0x244>
     b10:	lsl	w2, w2, w5
     b14:	add	w27, w27, w2
     b18:	b.eq	c28 <grub_png_read_dynamic_block+0x350>  // b.none
     b1c:	add	w5, w5, w1
     b20:	mov	x0, x19
     b24:	stp	w5, w5, [sp, #112]
     b28:	bl	300 <grub_png_get_byte>
     b2c:	and	w0, w0, #0xff
     b30:	cmp	w28, #0x8
     b34:	ldr	w7, [x26]
     b38:	csel	w1, w28, w24, le
     b3c:	stp	w24, w0, [x19, #16]
     b40:	ldr	w5, [sp, #112]
     b44:	subs	w28, w28, w1
     b48:	lsl	w2, w20, w1
     b4c:	sub	w2, w2, #0x1
     b50:	and	w2, w2, w0
     b54:	cbz	w7, b10 <grub_png_read_dynamic_block+0x238>
     b58:	add	w25, w25, w27
     b5c:	mov	w2, #0x8                   	// #8
     b60:	ldr	x0, [x22, #8]
     b64:	lsl	x1, x23, #2
     b68:	ldr	w0, [x0, x23, lsl #2]
     b6c:	cmp	w0, w25
     b70:	b.gt	c50 <grub_png_read_dynamic_block+0x378>
     b74:	ldr	w0, [x22, #28]
     b78:	add	x23, x23, #0x1
     b7c:	cmp	w0, w23
     b80:	b.gt	ad8 <grub_png_read_dynamic_block+0x200>
     b84:	mov	w22, #0x1                   	// #1
     b88:	add	x25, x19, #0x8, lsl #12
     b8c:	ldr	w0, [x25, #2448]
     b90:	subs	w24, w0, w22
     b94:	add	w1, w24, #0x8, lsl #12
     b98:	csel	w24, w1, w24, mi  // mi = first
     b9c:	ldr	w1, [sp, #108]
     ba0:	cmp	w1, #0x0
     ba4:	b.gt	bd0 <grub_png_read_dynamic_block+0x2f8>
     ba8:	b	a04 <grub_png_read_dynamic_block+0x12c>
     bac:	str	w0, [x25, #2448]
     bb0:	add	w24, w24, #0x1
     bb4:	mov	w1, #0x7fff                	// #32767
     bb8:	cmp	w24, w1
     bbc:	ldr	w1, [sp, #108]
     bc0:	csel	w24, w24, wzr, le
     bc4:	subs	w1, w1, #0x1
     bc8:	str	w1, [sp, #108]
     bcc:	b.eq	a04 <grub_png_read_dynamic_block+0x12c>  // b.none
     bd0:	add	x1, x19, w24, sxtw
     bd4:	add	x2, x19, w0, sxtw
     bd8:	mov	x0, x19
     bdc:	ldrb	w1, [x1, #2448]
     be0:	strb	w1, [x2, #2448]
     be4:	bl	0 <grub_png_output_byte>
     be8:	ldr	w0, [x25, #2448]
     bec:	mov	w1, #0x7fff                	// #32767
     bf0:	add	w0, w0, #0x1
     bf4:	cmp	w0, w1
     bf8:	b.le	bac <grub_png_read_dynamic_block+0x2d4>
     bfc:	mov	w0, #0x0                   	// #0
     c00:	str	wzr, [x25, #2448]
     c04:	b	bb0 <grub_png_read_dynamic_block+0x2d8>
     c08:	mov	x0, x19
     c0c:	bl	300 <grub_png_get_byte>
     c10:	ldr	w1, [x26]
     c14:	and	w0, w0, #0xff
     c18:	stp	w24, w0, [x19, #16]
     c1c:	cbnz	w1, b5c <grub_png_read_dynamic_block+0x284>
     c20:	and	w27, w0, #0x1
     c24:	mov	w1, #0x1                   	// #1
     c28:	mov	w2, #0x8                   	// #8
     c2c:	asr	w0, w0, w1
     c30:	sub	w2, w2, w1
     c34:	stp	w2, w0, [x19, #16]
     c38:	add	w25, w25, w27
     c3c:	ldr	x0, [x22, #8]
     c40:	lsl	x1, x23, #2
     c44:	ldr	w0, [x0, x23, lsl #2]
     c48:	cmp	w0, w25
     c4c:	b.le	b74 <grub_png_read_dynamic_block+0x29c>
     c50:	ldr	x5, [x22, #16]
     c54:	ldr	x3, [sp, #120]
     c58:	ldr	w1, [x5, x1]
     c5c:	ldr	x0, [x19, #2416]
     c60:	add	x4, x3, #0x118
     c64:	add	x6, x3, #0xa0
     c68:	add	w3, w25, w1
     c6c:	ldr	w0, [x0, w3, sxtw #2]
     c70:	ldrb	w27, [x4, w0, sxtw]
     c74:	ldr	w22, [x6, w0, sxtw #2]
     c78:	cbz	w27, b88 <grub_png_read_dynamic_block+0x2b0>
     c7c:	cbz	w2, dc8 <grub_png_read_dynamic_block+0x4f0>
     c80:	ldr	w0, [x26]
     c84:	cbnz	w0, b88 <grub_png_read_dynamic_block+0x2b0>
     c88:	cmp	w27, w2
     c8c:	ldr	w0, [x19, #20]
     c90:	csel	w3, w27, w2, le
     c94:	subs	w25, w27, w3
     c98:	lsl	w28, w20, w3
     c9c:	sub	w28, w28, #0x1
     ca0:	and	w28, w28, w0
     ca4:	b.eq	dac <grub_png_read_dynamic_block+0x4d4>  // b.none
     ca8:	mov	w27, #0x0                   	// #0
     cac:	mov	w24, #0x8                   	// #8
     cb0:	b	cc0 <grub_png_read_dynamic_block+0x3e8>
     cb4:	lsl	w1, w1, w27
     cb8:	add	w28, w28, w1
     cbc:	b.eq	da8 <grub_png_read_dynamic_block+0x4d0>  // b.none
     cc0:	add	w27, w27, w3
     cc4:	mov	x0, x19
     cc8:	bl	300 <grub_png_get_byte>
     ccc:	and	w0, w0, #0xff
     cd0:	cmp	w25, #0x8
     cd4:	ldr	w4, [x26]
     cd8:	csel	w3, w25, w24, le
     cdc:	stp	w24, w0, [x19, #16]
     ce0:	subs	w25, w25, w3
     ce4:	lsl	w1, w20, w3
     ce8:	sub	w1, w1, #0x1
     cec:	and	w1, w1, w0
     cf0:	cbz	w4, cb4 <grub_png_read_dynamic_block+0x3dc>
     cf4:	add	w22, w22, w28
     cf8:	b	b88 <grub_png_read_dynamic_block+0x2b0>
     cfc:	ldr	w1, [x19, #16]
     d00:	cbz	w1, de4 <grub_png_read_dynamic_block+0x50c>
     d04:	ldr	w0, [x26]
     d08:	cbnz	w0, ab8 <grub_png_read_dynamic_block+0x1e0>
     d0c:	cmp	w24, w1
     d10:	ldr	w0, [x19, #20]
     d14:	csel	w2, w24, w1, le
     d18:	subs	w24, w24, w2
     d1c:	lsl	w28, w20, w2
     d20:	sub	w28, w28, #0x1
     d24:	and	w28, w28, w0
     d28:	b.eq	d8c <grub_png_read_dynamic_block+0x4b4>  // b.none
     d2c:	mov	w27, #0x0                   	// #0
     d30:	mov	w22, #0x8                   	// #8
     d34:	b	d44 <grub_png_read_dynamic_block+0x46c>
     d38:	lsl	w1, w1, w27
     d3c:	add	w28, w28, w1
     d40:	b.eq	d88 <grub_png_read_dynamic_block+0x4b0>  // b.none
     d44:	add	w27, w27, w2
     d48:	mov	x0, x19
     d4c:	bl	300 <grub_png_get_byte>
     d50:	and	w0, w0, #0xff
     d54:	cmp	w24, #0x8
     d58:	ldr	w4, [x26]
     d5c:	csel	w2, w24, w22, le
     d60:	stp	w22, w0, [x19, #16]
     d64:	subs	w24, w24, w2
     d68:	lsl	w1, w20, w2
     d6c:	sub	w1, w1, #0x1
     d70:	and	w1, w1, w0
     d74:	cbz	w4, d38 <grub_png_read_dynamic_block+0x460>
     d78:	ldr	w0, [sp, #108]
     d7c:	add	w0, w0, w28
     d80:	str	w0, [sp, #108]
     d84:	b	ab8 <grub_png_read_dynamic_block+0x1e0>
     d88:	mov	w1, #0x8                   	// #8
     d8c:	sub	w1, w1, w2
     d90:	asr	w0, w0, w2
     d94:	ldr	w2, [sp, #108]
     d98:	stp	w1, w0, [x19, #16]
     d9c:	add	w2, w2, w28
     da0:	str	w2, [sp, #108]
     da4:	b	ab8 <grub_png_read_dynamic_block+0x1e0>
     da8:	mov	w2, #0x8                   	// #8
     dac:	sub	w2, w2, w3
     db0:	asr	w0, w0, w3
     db4:	add	w22, w22, w28
     db8:	stp	w2, w0, [x19, #16]
     dbc:	b	b88 <grub_png_read_dynamic_block+0x2b0>
     dc0:	and	w2, w0, #0xff
     dc4:	b	9d0 <grub_png_read_dynamic_block+0xf8>
     dc8:	mov	x0, x19
     dcc:	bl	300 <grub_png_get_byte>
     dd0:	mov	w1, #0x8                   	// #8
     dd4:	and	w0, w0, #0xff
     dd8:	mov	w2, w1
     ddc:	stp	w1, w0, [x19, #16]
     de0:	b	c80 <grub_png_read_dynamic_block+0x3a8>
     de4:	mov	x0, x19
     de8:	bl	300 <grub_png_get_byte>
     dec:	mov	w2, #0x8                   	// #8
     df0:	and	w0, w0, #0xff
     df4:	mov	w1, w2
     df8:	stp	w2, w0, [x19, #16]
     dfc:	b	d04 <grub_png_read_dynamic_block+0x42c>
     e00:	ldr	w0, [x26]
     e04:	ldp	x19, x20, [sp, #16]
     e08:	ldp	x21, x22, [sp, #32]
     e0c:	ldp	x23, x24, [sp, #48]
     e10:	ldp	x25, x26, [sp, #64]
     e14:	ldp	x27, x28, [sp, #80]
     e18:	ldp	x29, x30, [sp], #128
     e1c:	ret
     e20:	mov	w1, #0x1                   	// #1
     e24:	b	a4c <grub_png_read_dynamic_block+0x174>
     e28:	mov	w1, #0x1                   	// #1
     e2c:	b	c2c <grub_png_read_dynamic_block+0x354>
	...

0000000000000e40 <grub_video_reader_png>:
     e40:	stp	x29, x30, [sp, #-368]!
     e44:	mov	x2, #0x0                   	// #0
     e48:	mov	x29, sp
     e4c:	str	x0, [sp, #112]
     e50:	mov	x0, x1
     e54:	mov	w1, #0x31                  	// #49
     e58:	bl	0 <grub_buffile_open>
     e5c:	cbz	x0, efc <grub_video_reader_png+0xbc>
     e60:	stp	x19, x20, [sp, #16]
     e64:	stp	x21, x22, [sp, #32]
     e68:	mov	x21, x0
     e6c:	mov	x0, #0x89b0                	// #35248
     e70:	bl	0 <grub_zalloc>
     e74:	mov	x22, x0
     e78:	cbz	x0, ed8 <grub_video_reader_png+0x98>
     e7c:	ldr	x0, [sp, #112]
     e80:	stp	x21, x0, [x22]
     e84:	add	x1, sp, #0xa0
     e88:	mov	x0, x21
     e8c:	mov	x2, #0x8                   	// #8
     e90:	bl	0 <grub_file_read>
     e94:	cmp	x0, #0x8
     e98:	b.eq	f10 <grub_video_reader_png+0xd0>  // b.none
     e9c:	adrp	x1, 0 <grub_png_output_byte>
     ea0:	ldr	x0, [x22, #72]
     ea4:	ldr	x20, [x1]
     ea8:	bl	0 <grub_free>
     eac:	mov	x0, x22
     eb0:	bl	0 <grub_free>
     eb4:	ldr	w0, [x20]
     eb8:	cbnz	w0, ee8 <grub_video_reader_png+0xa8>
     ebc:	mov	x0, x21
     ec0:	bl	0 <grub_file_close>
     ec4:	ldr	w0, [x20]
     ec8:	ldp	x19, x20, [sp, #16]
     ecc:	ldp	x21, x22, [sp, #32]
     ed0:	ldp	x29, x30, [sp], #368
     ed4:	ret
     ed8:	adrp	x0, 0 <grub_png_output_byte>
     edc:	ldr	x20, [x0]
     ee0:	ldr	w0, [x20]
     ee4:	cbz	w0, ebc <grub_video_reader_png+0x7c>
     ee8:	ldr	x19, [sp, #112]
     eec:	ldr	x0, [x19]
     ef0:	bl	0 <grub_video_bitmap_destroy>
     ef4:	str	xzr, [x19]
     ef8:	b	ebc <grub_video_reader_png+0x7c>
     efc:	adrp	x0, 0 <grub_png_output_byte>
     f00:	ldr	x0, [x0]
     f04:	ldr	w0, [x0]
     f08:	ldp	x29, x30, [sp], #368
     f0c:	ret
     f10:	adrp	x1, 0 <grub_png_output_byte>
     f14:	mov	x2, x0
     f18:	add	x0, sp, #0xa0
     f1c:	ldr	x1, [x1]
     f20:	str	x1, [sp, #128]
     f24:	add	x1, x1, #0x138
     f28:	bl	0 <grub_memcmp>
     f2c:	cbnz	w0, 1e80 <grub_video_reader_png+0x1040>
     f30:	adrp	x1, 0 <grub_png_output_byte>
     f34:	mov	w19, #0x1                   	// #1
     f38:	ldr	x0, [x22]
     f3c:	stp	x23, x24, [sp, #48]
     f40:	ldr	x20, [x1]
     f44:	add	x1, sp, #0x120
     f48:	mov	x2, #0x4                   	// #4
     f4c:	str	wzr, [sp, #288]
     f50:	bl	0 <grub_file_read>
     f54:	ldr	w24, [sp, #288]
     f58:	ldr	x0, [x22]
     f5c:	add	x1, sp, #0x120
     f60:	mov	x2, #0x4                   	// #4
     f64:	str	wzr, [sp, #288]
     f68:	rev	w24, w24
     f6c:	bl	0 <grub_file_read>
     f70:	ldr	x0, [x22]
     f74:	mov	w2, #0x4452                	// #17490
     f78:	ldr	w1, [sp, #288]
     f7c:	movk	w2, #0x4948, lsl #16
     f80:	ldr	x3, [x0, #24]
     f84:	rev	w1, w1
     f88:	cmp	w1, w2
     f8c:	add	w2, w3, #0x4
     f90:	add	w2, w2, w24
     f94:	str	w2, [x22, #24]
     f98:	b.eq	1128 <grub_video_reader_png+0x2e8>  // b.none
     f9c:	b.hi	104c <grub_video_reader_png+0x20c>  // b.pmore
     fa0:	mov	w2, #0x4154                	// #16724
     fa4:	movk	w2, #0x4944, lsl #16
     fa8:	cmp	w1, w2
     fac:	b.eq	1194 <grub_video_reader_png+0x354>  // b.none
     fb0:	mov	w2, #0x4e44                	// #20036
     fb4:	movk	w2, #0x4945, lsl #16
     fb8:	cmp	w1, w2
     fbc:	b.ne	1184 <grub_video_reader_png+0x344>  // b.any
     fc0:	ldr	x0, [x22, #72]
     fc4:	cbz	x0, 12f0 <grub_video_reader_png+0x4b0>
     fc8:	ldr	x3, [x22, #8]
     fcc:	ldr	w2, [x22, #40]
     fd0:	ldr	w1, [x22, #64]
     fd4:	ldr	x3, [x3]
     fd8:	add	x23, x0, w2, sxtw
     fdc:	cmp	w1, #0x4
     fe0:	ldr	x24, [x3, #80]
     fe4:	b.le	2550 <grub_video_reader_png+0x1710>
     fe8:	ldr	w1, [x22, #56]
     fec:	cbnz	w1, 28d0 <grub_video_reader_png+0x1a90>
     ff0:	ldr	w1, [x22, #48]
     ff4:	ldr	w3, [x22, #36]
     ff8:	cbnz	w1, 29b4 <grub_video_reader_png+0x1b74>
     ffc:	ldp	w5, w2, [x22, #28]
    1000:	mov	x1, #0x0                   	// #0
    1004:	mul	w2, w2, w5
    1008:	mul	w2, w2, w3
    100c:	cmp	wzr, w2, lsr #1
    1010:	b.eq	12f0 <grub_video_reader_png+0x4b0>  // b.none
    1014:	nop
    1018:	lsl	x0, x1, #1
    101c:	ldrb	w0, [x23, x0]
    1020:	strb	w0, [x24, x1]
    1024:	add	x1, x1, #0x1
    1028:	ldp	w0, w3, [x22, #28]
    102c:	ldr	w2, [x22, #36]
    1030:	mul	w0, w0, w3
    1034:	mul	w0, w0, w2
    1038:	cmp	w1, w0, lsr #1
    103c:	b.cc	1018 <grub_video_reader_png+0x1d8>  // b.lo, b.ul, b.last
    1040:	ldp	x23, x24, [sp, #48]
    1044:	ldr	x0, [x22, #72]
    1048:	b	ea8 <grub_video_reader_png+0x68>
    104c:	mov	w2, #0x5445                	// #21573
    1050:	movk	w2, #0x504c, lsl #16
    1054:	cmp	w1, w2
    1058:	b.ne	1184 <grub_video_reader_png+0x344>  // b.any
    105c:	cbz	w24, 10f8 <grub_video_reader_png+0x2b8>
    1060:	add	x23, x22, #0x650
    1064:	stp	x25, x26, [sp, #64]
    1068:	mov	w26, #0x3                   	// #3
    106c:	mov	w25, #0x0                   	// #0
    1070:	stp	x27, x28, [sp, #80]
    1074:	nop
    1078:	mov	x0, x22
    107c:	bl	300 <grub_png_get_byte>
    1080:	strb	w0, [x23]
    1084:	mov	x0, x22
    1088:	add	w25, w25, #0x1
    108c:	bl	300 <grub_png_get_byte>
    1090:	strb	w0, [x23, #1]
    1094:	mov	x0, x22
    1098:	mov	w27, w26
    109c:	bl	300 <grub_png_get_byte>
    10a0:	strb	w0, [x23, #2]
    10a4:	cmp	w24, w26
    10a8:	add	x23, x23, #0x3
    10ac:	cset	w0, hi  // hi = pmore
    10b0:	cmp	w25, #0x100
    10b4:	csel	w0, w0, wzr, ne  // ne = any
    10b8:	add	w26, w26, #0x3
    10bc:	cbnz	w0, 1078 <grub_video_reader_png+0x238>
    10c0:	cmp	w24, w27
    10c4:	b.ls	10dc <grub_video_reader_png+0x29c>  // b.plast
    10c8:	add	w27, w27, #0x1
    10cc:	mov	x0, x22
    10d0:	bl	300 <grub_png_get_byte>
    10d4:	cmp	w24, w27
    10d8:	b.ne	10c8 <grub_video_reader_png+0x288>  // b.any
    10dc:	ldr	x0, [x22]
    10e0:	add	x1, sp, #0x120
    10e4:	mov	x2, #0x4                   	// #4
    10e8:	str	wzr, [sp, #288]
    10ec:	bl	0 <grub_file_read>
    10f0:	ldp	x25, x26, [sp, #64]
    10f4:	ldp	x27, x28, [sp, #80]
    10f8:	ldr	w0, [x20]
    10fc:	cbnz	w0, 1040 <grub_video_reader_png+0x200>
    1100:	ldr	x0, [x22]
    1104:	ldr	w1, [x22, #24]
    1108:	ldr	x2, [x0, #24]
    110c:	cmp	x2, x1
    1110:	b.eq	f44 <grub_video_reader_png+0x104>  // b.none
    1114:	adrp	x1, 0 <grub_png_output_byte>
    1118:	mov	w0, #0x4                   	// #4
    111c:	ldr	x1, [x1]
    1120:	bl	0 <grub_error>
    1124:	b	1040 <grub_video_reader_png+0x200>
    1128:	add	x1, sp, #0x120
    112c:	mov	x2, #0x4                   	// #4
    1130:	str	wzr, [sp, #288]
    1134:	bl	0 <grub_file_read>
    1138:	ldr	w1, [sp, #288]
    113c:	mov	x2, #0x4                   	// #4
    1140:	ldr	x0, [x22]
    1144:	rev	w1, w1
    1148:	str	w1, [x22, #28]
    114c:	add	x1, sp, #0x120
    1150:	str	wzr, [sp, #288]
    1154:	bl	0 <grub_file_read>
    1158:	ldr	w0, [sp, #288]
    115c:	rev	w0, w0
    1160:	str	w0, [x22, #32]
    1164:	cbz	w0, 1170 <grub_video_reader_png+0x330>
    1168:	ldr	w0, [x22, #28]
    116c:	cbnz	w0, 12f8 <grub_video_reader_png+0x4b8>
    1170:	adrp	x1, 0 <grub_png_output_byte>
    1174:	mov	w0, #0x4                   	// #4
    1178:	ldr	x1, [x1]
    117c:	bl	0 <grub_error>
    1180:	b	10f8 <grub_video_reader_png+0x2b8>
    1184:	add	x1, x3, #0x4
    1188:	add	x1, x1, w24, uxtw
    118c:	bl	0 <grub_file_seek>
    1190:	b	10f8 <grub_video_reader_png+0x2b8>
    1194:	str	wzr, [x22, #16]
    1198:	mov	x0, x22
    119c:	stp	w19, w24, [x22, #80]
    11a0:	bl	300 <grub_png_get_byte>
    11a4:	and	w23, w0, #0xff
    11a8:	and	w23, w23, #0xf
    11ac:	mov	x0, x22
    11b0:	bl	300 <grub_png_get_byte>
    11b4:	and	w0, w0, #0xff
    11b8:	cmp	w23, #0x8
    11bc:	b.ne	1e68 <grub_video_reader_png+0x1028>  // b.any
    11c0:	tbnz	w0, #5, 144c <grub_video_reader_png+0x60c>
    11c4:	stp	x25, x26, [sp, #64]
    11c8:	stp	x27, x28, [sp, #80]
    11cc:	ldr	w1, [x22, #16]
    11d0:	cbz	w1, 156c <grub_video_reader_png+0x72c>
    11d4:	ldr	w0, [x20]
    11d8:	cbnz	w0, 1584 <grub_video_reader_png+0x744>
    11dc:	cmp	w1, #0x0
    11e0:	ldr	w0, [x22, #20]
    11e4:	csel	w2, w1, w19, le
    11e8:	subs	w24, w19, w2
    11ec:	lsl	w23, w19, w2
    11f0:	sub	w23, w23, #0x1
    11f4:	and	w23, w23, w0
    11f8:	b.eq	2d70 <grub_video_reader_png+0x1f30>  // b.none
    11fc:	mov	w25, #0x0                   	// #0
    1200:	mov	w26, #0x8                   	// #8
    1204:	b	1214 <grub_video_reader_png+0x3d4>
    1208:	lsl	w1, w1, w25
    120c:	add	w23, w23, w1
    1210:	b.eq	1478 <grub_video_reader_png+0x638>  // b.none
    1214:	add	w25, w25, w2
    1218:	mov	x0, x22
    121c:	bl	300 <grub_png_get_byte>
    1220:	and	w0, w0, #0xff
    1224:	cmp	w24, #0x8
    1228:	ldr	w3, [x20]
    122c:	csel	w2, w24, w26, le
    1230:	stp	w26, w0, [x22, #16]
    1234:	subs	w24, w24, w2
    1238:	lsl	w1, w19, w2
    123c:	sub	w1, w1, #0x1
    1240:	and	w1, w1, w0
    1244:	cbz	w3, 1208 <grub_video_reader_png+0x3c8>
    1248:	str	wzr, [x22, #16]
    124c:	mov	x0, x22
    1250:	bl	300 <grub_png_get_byte>
    1254:	and	w25, w0, #0xff
    1258:	mov	x0, x22
    125c:	bl	300 <grub_png_get_byte>
    1260:	mov	w1, w0
    1264:	mov	x0, x22
    1268:	ubfiz	w1, w1, #8, #8
    126c:	add	w25, w25, w1
    1270:	and	w25, w25, #0xffff
    1274:	bl	300 <grub_png_get_byte>
    1278:	mov	x0, x22
    127c:	bl	300 <grub_png_get_byte>
    1280:	cbz	w25, 12ac <grub_video_reader_png+0x46c>
    1284:	mov	w24, #0x0                   	// #0
    1288:	mov	x0, x22
    128c:	bl	300 <grub_png_get_byte>
    1290:	mov	w1, w0
    1294:	mov	x0, x22
    1298:	bl	0 <grub_png_output_byte>
    129c:	add	w0, w24, #0x1
    12a0:	and	w24, w0, #0xffff
    12a4:	cmp	w25, w0, uxth
    12a8:	b.ne	1288 <grub_video_reader_png+0x448>  // b.any
    12ac:	ldr	w0, [x20]
    12b0:	orr	w23, w23, w0
    12b4:	cbz	w23, 11cc <grub_video_reader_png+0x38c>
    12b8:	ldr	x0, [x22]
    12bc:	add	x1, sp, #0x120
    12c0:	mov	x2, #0x4                   	// #4
    12c4:	str	wzr, [sp, #288]
    12c8:	bl	0 <grub_file_read>
    12cc:	ldr	x0, [x22]
    12d0:	add	x1, sp, #0x120
    12d4:	mov	x2, #0x4                   	// #4
    12d8:	str	wzr, [sp, #288]
    12dc:	bl	0 <grub_file_read>
    12e0:	ldp	x25, x26, [sp, #64]
    12e4:	ldp	x27, x28, [sp, #80]
    12e8:	str	wzr, [x22, #80]
    12ec:	b	10f8 <grub_video_reader_png+0x2b8>
    12f0:	ldp	x23, x24, [sp, #48]
    12f4:	b	ea8 <grub_video_reader_png+0x68>
    12f8:	mov	x0, x22
    12fc:	bl	300 <grub_png_get_byte>
    1300:	and	w23, w0, #0xff
    1304:	mov	x0, x22
    1308:	cmp	w23, #0x10
    130c:	cset	w1, eq  // eq = none
    1310:	str	w1, [x22, #40]
    1314:	bl	300 <grub_png_get_byte>
    1318:	and	w0, w0, #0xff
    131c:	ands	w1, w0, #0xfffffff9
    1320:	ccmp	w0, #0x3, #0x4, ne  // ne = any
    1324:	b.ne	298c <grub_video_reader_png+0x1b4c>  // b.any
    1328:	ldr	w2, [x22, #40]
    132c:	cmp	w0, #0x3
    1330:	b.eq	2934 <grub_video_reader_png+0x1af4>  // b.none
    1334:	ldr	w1, [x22, #56]
    1338:	cbz	w2, 29a0 <grub_video_reader_png+0x1b60>
    133c:	cbnz	w1, 298c <grub_video_reader_png+0x1b4c>
    1340:	ands	w5, w0, #0x4
    1344:	mov	w3, #0x4                   	// #4
    1348:	csel	w3, w3, w19, eq  // eq = none
    134c:	tbz	w0, #1, 2a60 <grub_video_reader_png+0x1c20>
    1350:	mov	w0, #0x3                   	// #3
    1354:	mov	w1, #0x0                   	// #0
    1358:	mov	w6, #0x4                   	// #4
    135c:	str	w0, [x22, #36]
    1360:	sub	w0, w23, #0x8
    1364:	mov	w2, #0xf7                  	// #247
    1368:	tst	w0, w2
    136c:	b.eq	1384 <grub_video_reader_png+0x544>  // b.none
    1370:	cmp	w23, #0x4
    1374:	b.ne	1464 <grub_video_reader_png+0x624>  // b.any
    1378:	ldr	w0, [x22, #48]
    137c:	orr	w1, w1, w0
    1380:	cbz	w1, 1464 <grub_video_reader_png+0x624>
    1384:	cbz	w5, 138c <grub_video_reader_png+0x54c>
    1388:	str	w6, [x22, #36]
    138c:	ldp	w1, w2, [x22, #28]
    1390:	ldr	x0, [x22, #8]
    1394:	bl	0 <grub_video_bitmap_create>
    1398:	cbnz	w0, 10f8 <grub_video_reader_png+0x2b8>
    139c:	ldp	w1, w2, [x22, #36]
    13a0:	ldr	w0, [x22, #28]
    13a4:	cbz	w2, 2a10 <grub_video_reader_png+0x1bd0>
    13a8:	lsl	w1, w1, #1
    13ac:	str	w1, [x22, #36]
    13b0:	str	w23, [x22, #64]
    13b4:	cmp	w23, #0x4
    13b8:	b.gt	2b94 <grub_video_reader_png+0x1d54>
    13bc:	mul	w0, w23, w0
    13c0:	add	w0, w0, #0x7
    13c4:	lsr	w0, w0, #3
    13c8:	str	w0, [x22, #60]
    13cc:	ldr	w1, [x22, #32]
    13d0:	mul	w0, w0, w1
    13d4:	bl	0 <grub_malloc>
    13d8:	str	x0, [x22, #72]
    13dc:	ldr	w1, [x20]
    13e0:	cbnz	w1, 12f0 <grub_video_reader_png+0x4b0>
    13e4:	add	x2, x22, #0x8, lsl #12
    13e8:	str	x0, [x2, #2456]
    13ec:	ldr	w1, [x22, #32]
    13f0:	mov	x0, x22
    13f4:	ldr	w3, [x22, #60]
    13f8:	madd	w1, w3, w1, w1
    13fc:	str	w1, [x22, #44]
    1400:	str	wzr, [x2, #2464]
    1404:	str	w19, [x2, #2472]
    1408:	bl	300 <grub_png_get_byte>
    140c:	tst	w0, #0xff
    1410:	b.ne	2b80 <grub_video_reader_png+0x1d40>  // b.any
    1414:	mov	x0, x22
    1418:	bl	300 <grub_png_get_byte>
    141c:	tst	w0, #0xff
    1420:	b.ne	2bc8 <grub_video_reader_png+0x1d88>  // b.any
    1424:	mov	x0, x22
    1428:	bl	300 <grub_png_get_byte>
    142c:	tst	w0, #0xff
    1430:	b.ne	2cd4 <grub_video_reader_png+0x1e94>  // b.any
    1434:	ldr	x0, [x22]
    1438:	add	x1, sp, #0x120
    143c:	mov	x2, #0x4                   	// #4
    1440:	str	wzr, [sp, #288]
    1444:	bl	0 <grub_file_read>
    1448:	b	10f8 <grub_video_reader_png+0x2b8>
    144c:	adrp	x1, 0 <grub_png_output_byte>
    1450:	mov	w0, #0x4                   	// #4
    1454:	ldr	x1, [x1]
    1458:	bl	0 <grub_error>
    145c:	str	wzr, [x22, #80]
    1460:	b	10f8 <grub_video_reader_png+0x2b8>
    1464:	adrp	x1, 0 <grub_png_output_byte>
    1468:	mov	w0, #0x4                   	// #4
    146c:	ldr	x1, [x1]
    1470:	bl	0 <grub_error>
    1474:	b	10f8 <grub_video_reader_png+0x2b8>
    1478:	mov	w1, #0x8                   	// #8
    147c:	sub	w1, w1, w2
    1480:	asr	w0, w0, w2
    1484:	stp	w1, w0, [x22, #16]
    1488:	cbnz	w1, 14f0 <grub_video_reader_png+0x6b0>
    148c:	mov	x0, x22
    1490:	bl	300 <grub_png_get_byte>
    1494:	ldr	w3, [x20]
    1498:	and	w0, w0, #0xff
    149c:	mov	w1, #0x8                   	// #8
    14a0:	stp	w1, w0, [x22, #16]
    14a4:	and	w25, w0, #0x3
    14a8:	mov	w2, #0x2                   	// #2
    14ac:	cbnz	w3, 1248 <grub_video_reader_png+0x408>
    14b0:	sub	w1, w1, w2
    14b4:	asr	w0, w0, w2
    14b8:	stp	w1, w0, [x22, #16]
    14bc:	cmp	w25, #0x1
    14c0:	b.eq	1664 <grub_video_reader_png+0x824>  // b.none
    14c4:	cmp	w25, #0x2
    14c8:	b.eq	15a4 <grub_video_reader_png+0x764>  // b.none
    14cc:	cbz	w25, 1248 <grub_video_reader_png+0x408>
    14d0:	adrp	x1, 0 <grub_png_output_byte>
    14d4:	mov	w0, #0x4                   	// #4
    14d8:	ldr	x1, [x1]
    14dc:	bl	0 <grub_error>
    14e0:	ldp	x25, x26, [sp, #64]
    14e4:	ldp	x27, x28, [sp, #80]
    14e8:	str	wzr, [x22, #80]
    14ec:	b	10f8 <grub_video_reader_png+0x2b8>
    14f0:	cmp	w1, #0x2
    14f4:	mov	w3, #0x2                   	// #2
    14f8:	csel	w2, w1, w3, le
    14fc:	subs	w24, w3, w2
    1500:	lsl	w25, w19, w2
    1504:	sub	w25, w25, #0x1
    1508:	and	w25, w25, w0
    150c:	b.eq	2d68 <grub_video_reader_png+0x1f28>  // b.none
    1510:	mov	w26, #0x0                   	// #0
    1514:	mov	w27, #0x8                   	// #8
    1518:	b	1528 <grub_video_reader_png+0x6e8>
    151c:	lsl	w1, w1, w26
    1520:	add	w25, w25, w1
    1524:	b.eq	1564 <grub_video_reader_png+0x724>  // b.none
    1528:	add	w26, w26, w2
    152c:	mov	x0, x22
    1530:	bl	300 <grub_png_get_byte>
    1534:	and	w0, w0, #0xff
    1538:	cmp	w24, #0x8
    153c:	ldr	w3, [x20]
    1540:	csel	w2, w24, w27, le
    1544:	stp	w27, w0, [x22, #16]
    1548:	subs	w24, w24, w2
    154c:	lsl	w1, w19, w2
    1550:	sub	w1, w1, #0x1
    1554:	and	w1, w1, w0
    1558:	cbz	w3, 151c <grub_video_reader_png+0x6dc>
    155c:	mov	w1, #0x8                   	// #8
    1560:	b	14bc <grub_video_reader_png+0x67c>
    1564:	mov	w1, #0x8                   	// #8
    1568:	b	14b0 <grub_video_reader_png+0x670>
    156c:	mov	x0, x22
    1570:	bl	300 <grub_png_get_byte>
    1574:	ldr	w1, [x20]
    1578:	and	w25, w0, #0xff
    157c:	str	w25, [x22, #20]
    1580:	cbz	w1, 158c <grub_video_reader_png+0x74c>
    1584:	mov	w23, #0x0                   	// #0
    1588:	b	1248 <grub_video_reader_png+0x408>
    158c:	and	w23, w25, #0x1
    1590:	asr	w0, w25, #1
    1594:	mov	w2, #0x2                   	// #2
    1598:	ubfx	x25, x25, #1, #2
    159c:	mov	w1, #0x7                   	// #7
    15a0:	b	14b0 <grub_video_reader_png+0x670>
    15a4:	cbz	w1, 2818 <grub_video_reader_png+0x19d8>
    15a8:	ldr	w0, [x20]
    15ac:	cbnz	w0, 2774 <grub_video_reader_png+0x1934>
    15b0:	cmp	w1, #0x5
    15b4:	mov	w3, #0x5                   	// #5
    15b8:	csel	w2, w1, w3, le
    15bc:	ldr	w0, [x22, #20]
    15c0:	subs	w24, w3, w2
    15c4:	lsl	w27, w19, w2
    15c8:	sub	w27, w27, #0x1
    15cc:	and	w27, w27, w0
    15d0:	b.eq	2d90 <grub_video_reader_png+0x1f50>  // b.none
    15d4:	mov	w25, #0x0                   	// #0
    15d8:	mov	w26, #0x8                   	// #8
    15dc:	b	15ec <grub_video_reader_png+0x7ac>
    15e0:	lsl	w1, w1, w25
    15e4:	add	w27, w27, w1
    15e8:	b.eq	1e94 <grub_video_reader_png+0x1054>  // b.none
    15ec:	add	w25, w25, w2
    15f0:	mov	x0, x22
    15f4:	bl	300 <grub_png_get_byte>
    15f8:	and	w0, w0, #0xff
    15fc:	cmp	w24, #0x8
    1600:	ldr	w3, [x20]
    1604:	csel	w2, w24, w26, le
    1608:	stp	w26, w0, [x22, #16]
    160c:	subs	w24, w24, w2
    1610:	lsl	w1, w19, w2
    1614:	sub	w1, w1, #0x1
    1618:	and	w1, w1, w0
    161c:	cbz	w3, 15e0 <grub_video_reader_png+0x7a0>
    1620:	add	w0, w27, #0x101
    1624:	str	w0, [sp, #144]
    1628:	cmp	w0, #0x120
    162c:	cset	w24, gt
    1630:	ldr	w0, [x20]
    1634:	cbz	w0, 2d98 <grub_video_reader_png+0x1f58>
    1638:	mov	w0, #0x1                   	// #1
    163c:	str	w0, [sp, #108]
    1640:	cbz	w24, 2ce8 <grub_video_reader_png+0x1ea8>
    1644:	nop
    1648:	adrp	x1, 0 <grub_png_output_byte>
    164c:	mov	w0, #0x4                   	// #4
    1650:	ldr	x1, [x1]
    1654:	bl	0 <grub_error>
    1658:	mov	x0, x22
    165c:	bl	8d8 <grub_png_read_dynamic_block>
    1660:	b	12ac <grub_video_reader_png+0x46c>
    1664:	add	x27, x22, #0x950
    1668:	add	x0, x22, #0x58
    166c:	str	x0, [x22, #2384]
    1670:	add	x2, x22, #0x518
    1674:	add	x0, x22, #0x4d8
    1678:	mov	x1, #0x1000000000          	// #68719476736
    167c:	stp	x0, x2, [x27, #8]
    1680:	mov	w25, #0x0                   	// #0
    1684:	mov	x2, #0x40                  	// #64
    1688:	str	x1, [x22, #2408]
    168c:	mov	w1, #0x0                   	// #0
    1690:	bl	0 <grub_memset>
    1694:	nop
    1698:	mov	w1, w25
    169c:	mov	x0, x27
    16a0:	add	w25, w25, #0x1
    16a4:	bl	698 <grub_png_insert_huff_item.part.0.constprop.2>
    16a8:	cmp	w25, #0x90
    16ac:	b.ne	1698 <grub_video_reader_png+0x858>  // b.any
    16b0:	adrp	x24, 0 <grub_png_output_byte>
    16b4:	nop
    16b8:	ldr	w7, [x27, #28]
    16bc:	cmp	w7, #0x8
    16c0:	b.le	1df0 <grub_video_reader_png+0xfb0>
    16c4:	cmp	w7, #0x9
    16c8:	mov	w0, #0x0                   	// #0
    16cc:	ldp	x10, x8, [x27]
    16d0:	b.eq	18a0 <grub_video_reader_png+0xa60>  // b.none
    16d4:	add	x1, x8, #0x24
    16d8:	sub	w0, w7, #0xa
    16dc:	cmp	w0, #0x9
    16e0:	sub	w13, w7, #0x9
    16e4:	neg	x1, x1, lsr #2
    16e8:	and	w1, w1, #0x3
    16ec:	b.ls	1e0c <grub_video_reader_png+0xfcc>  // b.plast
    16f0:	cbz	w1, 1e00 <grub_video_reader_png+0xfc0>
    16f4:	ldr	w14, [x8, #36]
    16f8:	cmp	w1, #0x1
    16fc:	mov	w6, #0xa                   	// #10
    1700:	b.eq	1724 <grub_video_reader_png+0x8e4>  // b.none
    1704:	ldr	w0, [x8, #40]
    1708:	cmp	w1, #0x3
    170c:	mov	w6, #0xb                   	// #11
    1710:	add	w14, w14, w0
    1714:	b.ne	1724 <grub_video_reader_png+0x8e4>  // b.any
    1718:	ldr	w0, [x8, #44]
    171c:	mov	w6, #0xc                   	// #12
    1720:	add	w14, w14, w0
    1724:	sub	w13, w13, w1
    1728:	ubfiz	x1, x1, #2, #2
    172c:	add	x1, x1, #0x24
    1730:	mov	x15, #0x0                   	// #0
    1734:	lsr	w17, w13, #2
    1738:	add	x1, x8, x1
    173c:	mov	x12, #0x0                   	// #0
    1740:	add	x17, x1, w17, uxtw #4
    1744:	nop
    1748:	ldp	x11, x3, [x1]
    174c:	asr	x9, x15, #32
    1750:	asr	x2, x12, #32
    1754:	add	x1, x1, #0x10
    1758:	cmp	x17, x1
    175c:	add	w16, w11, w15
    1760:	add	w0, w3, w12
    1764:	asr	x11, x11, #32
    1768:	asr	x3, x3, #32
    176c:	mov	x15, #0x0                   	// #0
    1770:	mov	x12, #0x0                   	// #0
    1774:	add	w9, w11, w9
    1778:	bfxil	x15, x16, #0, #32
    177c:	add	w2, w3, w2
    1780:	bfxil	x12, x0, #0, #32
    1784:	bfi	x15, x9, #32, #32
    1788:	bfi	x12, x2, #32, #32
    178c:	b.ne	1748 <grub_video_reader_png+0x908>  // b.any
    1790:	add	w9, w16, w9
    1794:	and	w3, w13, #0xfffffffc
    1798:	add	w0, w0, w9
    179c:	add	w1, w3, w6
    17a0:	add	w0, w2, w0
    17a4:	cmp	w3, w13
    17a8:	add	w0, w0, w14
    17ac:	b.eq	1874 <grub_video_reader_png+0xa34>  // b.none
    17b0:	ldr	w3, [x8, w1, sxtw #2]
    17b4:	add	w2, w1, #0x1
    17b8:	cmp	w7, w2
    17bc:	sbfiz	x2, x1, #2, #32
    17c0:	add	w0, w0, w3
    17c4:	b.le	1874 <grub_video_reader_png+0xa34>
    17c8:	add	x2, x8, x2
    17cc:	add	w3, w1, #0x2
    17d0:	cmp	w7, w3
    17d4:	ldr	w3, [x2, #4]
    17d8:	add	w0, w0, w3
    17dc:	b.le	1874 <grub_video_reader_png+0xa34>
    17e0:	ldr	w3, [x2, #8]
    17e4:	add	w6, w1, #0x3
    17e8:	cmp	w6, w7
    17ec:	add	w0, w0, w3
    17f0:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    17f4:	ldr	w3, [x2, #12]
    17f8:	add	w6, w1, #0x4
    17fc:	cmp	w6, w7
    1800:	add	w0, w0, w3
    1804:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    1808:	ldr	w3, [x2, #16]
    180c:	add	w6, w1, #0x5
    1810:	cmp	w6, w7
    1814:	add	w0, w0, w3
    1818:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    181c:	ldr	w3, [x2, #20]
    1820:	add	w6, w1, #0x6
    1824:	cmp	w6, w7
    1828:	add	w0, w0, w3
    182c:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    1830:	ldr	w3, [x2, #24]
    1834:	add	w6, w1, #0x7
    1838:	cmp	w6, w7
    183c:	add	w0, w0, w3
    1840:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    1844:	ldr	w3, [x2, #28]
    1848:	add	w6, w1, #0x8
    184c:	cmp	w6, w7
    1850:	add	w0, w0, w3
    1854:	b.ge	1874 <grub_video_reader_png+0xa34>  // b.tcont
    1858:	ldr	w3, [x2, #32]
    185c:	add	w1, w1, #0x9
    1860:	cmp	w7, w1
    1864:	add	w0, w0, w3
    1868:	b.le	1874 <grub_video_reader_png+0xa34>
    186c:	ldr	w1, [x2, #36]
    1870:	add	w0, w0, w1
    1874:	cmp	w0, #0x0
    1878:	b.le	18a0 <grub_video_reader_png+0xa60>
    187c:	mov	w1, #0x0                   	// #0
    1880:	ldr	w2, [x27, #24]
    1884:	sub	w2, w2, w1
    1888:	add	w1, w1, #0x1
    188c:	cmp	w1, w0
    1890:	add	x3, x10, w2, sxtw #2
    1894:	ldur	w3, [x3, #-4]
    1898:	str	w3, [x10, w2, sxtw #2]
    189c:	b.ne	1880 <grub_video_reader_png+0xa40>  // b.any
    18a0:	ldr	w1, [x27, #24]
    18a4:	sub	w0, w1, w0
    18a8:	str	w25, [x10, w0, sxtw #2]
    18ac:	ldr	w0, [x27, #24]
    18b0:	add	w0, w0, #0x1
    18b4:	str	w0, [x27, #24]
    18b8:	ldr	w0, [x8, #32]
    18bc:	add	w0, w0, #0x1
    18c0:	str	w0, [x8, #32]
    18c4:	add	w25, w25, #0x1
    18c8:	cmp	w25, #0x100
    18cc:	b.ne	16b8 <grub_video_reader_png+0x878>  // b.any
    18d0:	adrp	x24, 0 <grub_png_output_byte>
    18d4:	nop
    18d8:	ldr	w7, [x27, #28]
    18dc:	cmp	w7, #0x6
    18e0:	b.le	1e28 <grub_video_reader_png+0xfe8>
    18e4:	cmp	w7, #0x7
    18e8:	mov	w0, #0x0                   	// #0
    18ec:	ldp	x9, x8, [x27]
    18f0:	b.eq	1ac0 <grub_video_reader_png+0xc80>  // b.none
    18f4:	add	x2, x8, #0x1c
    18f8:	sub	w0, w7, #0x8
    18fc:	cmp	w0, #0x9
    1900:	sub	w11, w7, #0x7
    1904:	neg	x2, x2, lsr #2
    1908:	and	w2, w2, #0x3
    190c:	b.ls	1e5c <grub_video_reader_png+0x101c>  // b.plast
    1910:	cbz	w2, 1e44 <grub_video_reader_png+0x1004>
    1914:	ldr	w0, [x8, #28]
    1918:	cmp	w2, #0x1
    191c:	mov	w12, #0x8                   	// #8
    1920:	b.eq	1944 <grub_video_reader_png+0xb04>  // b.none
    1924:	ldr	w1, [x8, #32]
    1928:	cmp	w2, #0x3
    192c:	mov	w12, #0x9                   	// #9
    1930:	add	w0, w0, w1
    1934:	b.ne	1944 <grub_video_reader_png+0xb04>  // b.any
    1938:	ldr	w1, [x8, #36]
    193c:	mov	w12, #0xa                   	// #10
    1940:	add	w0, w0, w1
    1944:	sub	w11, w11, w2
    1948:	ubfiz	x2, x2, #2, #2
    194c:	add	x2, x2, #0x1c
    1950:	mov	x10, #0x0                   	// #0
    1954:	lsr	w15, w11, #2
    1958:	add	x2, x8, x2
    195c:	mov	x6, #0x0                   	// #0
    1960:	add	x15, x2, w15, uxtw #4
    1964:	nop
    1968:	ldp	x3, x1, [x2]
    196c:	asr	x17, x10, #32
    1970:	asr	x16, x6, #32
    1974:	add	x2, x2, #0x10
    1978:	cmp	x15, x2
    197c:	add	w14, w3, w10
    1980:	add	w13, w1, w6
    1984:	asr	x3, x3, #32
    1988:	asr	x1, x1, #32
    198c:	mov	x10, #0x0                   	// #0
    1990:	mov	x6, #0x0                   	// #0
    1994:	add	w3, w3, w17
    1998:	bfxil	x10, x14, #0, #32
    199c:	add	w1, w1, w16
    19a0:	bfxil	x6, x13, #0, #32
    19a4:	bfi	x10, x3, #32, #32
    19a8:	bfi	x6, x1, #32, #32
    19ac:	b.ne	1968 <grub_video_reader_png+0xb28>  // b.any
    19b0:	add	w3, w14, w3
    19b4:	and	w2, w11, #0xfffffffc
    19b8:	add	w13, w13, w3
    19bc:	add	w12, w2, w12
    19c0:	add	w1, w1, w13
    19c4:	cmp	w2, w11
    19c8:	add	w0, w1, w0
    19cc:	b.eq	1a94 <grub_video_reader_png+0xc54>  // b.none
    19d0:	ldr	w2, [x8, w12, sxtw #2]
    19d4:	add	w1, w12, #0x1
    19d8:	cmp	w7, w1
    19dc:	sbfiz	x1, x12, #2, #32
    19e0:	add	w0, w0, w2
    19e4:	b.le	1a94 <grub_video_reader_png+0xc54>
    19e8:	add	x1, x8, x1
    19ec:	add	w2, w12, #0x2
    19f0:	cmp	w7, w2
    19f4:	ldr	w2, [x1, #4]
    19f8:	add	w0, w0, w2
    19fc:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a00:	ldr	w2, [x1, #8]
    1a04:	add	w3, w12, #0x3
    1a08:	cmp	w7, w3
    1a0c:	add	w0, w0, w2
    1a10:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a14:	ldr	w2, [x1, #12]
    1a18:	add	w3, w12, #0x4
    1a1c:	cmp	w7, w3
    1a20:	add	w0, w0, w2
    1a24:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a28:	ldr	w2, [x1, #16]
    1a2c:	add	w3, w12, #0x5
    1a30:	cmp	w7, w3
    1a34:	add	w0, w0, w2
    1a38:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a3c:	ldr	w2, [x1, #20]
    1a40:	add	w3, w12, #0x6
    1a44:	cmp	w7, w3
    1a48:	add	w0, w0, w2
    1a4c:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a50:	ldr	w2, [x1, #24]
    1a54:	add	w3, w12, #0x7
    1a58:	cmp	w7, w3
    1a5c:	add	w0, w0, w2
    1a60:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a64:	ldr	w2, [x1, #28]
    1a68:	add	w3, w12, #0x8
    1a6c:	cmp	w7, w3
    1a70:	add	w0, w0, w2
    1a74:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a78:	ldr	w2, [x1, #32]
    1a7c:	add	w12, w12, #0x9
    1a80:	cmp	w7, w12
    1a84:	add	w0, w0, w2
    1a88:	b.le	1a94 <grub_video_reader_png+0xc54>
    1a8c:	ldr	w1, [x1, #36]
    1a90:	add	w0, w0, w1
    1a94:	cmp	w0, #0x0
    1a98:	b.le	1ac0 <grub_video_reader_png+0xc80>
    1a9c:	mov	w2, #0x0                   	// #0
    1aa0:	ldr	w1, [x27, #24]
    1aa4:	sub	w1, w1, w2
    1aa8:	add	w2, w2, #0x1
    1aac:	cmp	w2, w0
    1ab0:	add	x3, x9, w1, sxtw #2
    1ab4:	ldur	w3, [x3, #-4]
    1ab8:	str	w3, [x9, w1, sxtw #2]
    1abc:	b.ne	1aa0 <grub_video_reader_png+0xc60>  // b.any
    1ac0:	ldr	w1, [x27, #24]
    1ac4:	sub	w0, w1, w0
    1ac8:	str	w25, [x9, w0, sxtw #2]
    1acc:	ldr	w0, [x27, #24]
    1ad0:	add	w0, w0, #0x1
    1ad4:	str	w0, [x27, #24]
    1ad8:	ldr	w0, [x8, #24]
    1adc:	add	w0, w0, #0x1
    1ae0:	str	w0, [x8, #24]
    1ae4:	add	w25, w25, #0x1
    1ae8:	cmp	w25, #0x118
    1aec:	b.ne	18d8 <grub_video_reader_png+0xa98>  // b.any
    1af0:	mov	w1, w25
    1af4:	mov	x0, x27
    1af8:	add	w25, w25, #0x1
    1afc:	bl	698 <grub_png_insert_huff_item.part.0.constprop.2>
    1b00:	cmp	w25, #0x120
    1b04:	b.ne	1af0 <grub_video_reader_png+0xcb0>  // b.any
    1b08:	ldr	w0, [x27, #28]
    1b0c:	cmp	w0, #0x0
    1b10:	b.le	1b54 <grub_video_reader_png+0xd14>
    1b14:	ldp	x7, x8, [x27, #8]
    1b18:	mov	w3, #0x0                   	// #0
    1b1c:	mov	w1, #0x0                   	// #0
    1b20:	mov	x0, #0x0                   	// #0
    1b24:	nop
    1b28:	ldr	w6, [x7, x0, lsl #2]
    1b2c:	sub	w2, w3, w1
    1b30:	add	w1, w6, w1
    1b34:	str	w1, [x7, x0, lsl #2]
    1b38:	str	w2, [x8, x0, lsl #2]
    1b3c:	add	x0, x0, #0x1
    1b40:	lsl	w1, w1, #1
    1b44:	add	w3, w3, w6
    1b48:	ldr	w2, [x27, #28]
    1b4c:	cmp	w2, w0
    1b50:	b.gt	1b28 <grub_video_reader_png+0xce8>
    1b54:	add	x28, x22, #0x970
    1b58:	add	x0, x22, #0x558
    1b5c:	str	x0, [x22, #2416]
    1b60:	add	x2, x22, #0x610
    1b64:	add	x0, x22, #0x5d0
    1b68:	mov	x1, #0x1000000000          	// #68719476736
    1b6c:	stp	x0, x2, [x28, #8]
    1b70:	mov	w25, #0x0                   	// #0
    1b74:	adrp	x24, 0 <grub_png_output_byte>
    1b78:	str	x1, [x22, #2440]
    1b7c:	mov	x2, #0x40                  	// #64
    1b80:	mov	w1, #0x0                   	// #0
    1b84:	bl	0 <grub_memset>
    1b88:	ldr	w7, [x28, #28]
    1b8c:	cmp	w7, #0x4
    1b90:	b.le	1e18 <grub_video_reader_png+0xfd8>
    1b94:	cmp	w7, #0x5
    1b98:	mov	w0, #0x0                   	// #0
    1b9c:	ldp	x9, x8, [x28]
    1ba0:	b.eq	1d70 <grub_video_reader_png+0xf30>  // b.none
    1ba4:	add	x1, x8, #0x14
    1ba8:	sub	w0, w7, #0x6
    1bac:	cmp	w0, #0x9
    1bb0:	sub	w11, w7, #0x5
    1bb4:	neg	x1, x1, lsr #2
    1bb8:	and	w1, w1, #0x3
    1bbc:	b.ls	1e50 <grub_video_reader_png+0x1010>  // b.plast
    1bc0:	cbz	w1, 1e38 <grub_video_reader_png+0xff8>
    1bc4:	ldr	w0, [x8, #20]
    1bc8:	cmp	w1, #0x1
    1bcc:	mov	w12, #0x6                   	// #6
    1bd0:	b.eq	1bf4 <grub_video_reader_png+0xdb4>  // b.none
    1bd4:	ldr	w2, [x8, #24]
    1bd8:	cmp	w1, #0x3
    1bdc:	mov	w12, #0x7                   	// #7
    1be0:	add	w0, w0, w2
    1be4:	b.ne	1bf4 <grub_video_reader_png+0xdb4>  // b.any
    1be8:	ldr	w2, [x8, #28]
    1bec:	mov	w12, #0x8                   	// #8
    1bf0:	add	w0, w0, w2
    1bf4:	sub	w11, w11, w1
    1bf8:	ubfiz	x1, x1, #2, #2
    1bfc:	add	x1, x1, #0x14
    1c00:	mov	x10, #0x0                   	// #0
    1c04:	lsr	w15, w11, #2
    1c08:	add	x1, x8, x1
    1c0c:	mov	x6, #0x0                   	// #0
    1c10:	add	x15, x1, w15, uxtw #4
    1c14:	nop
    1c18:	ldp	x5, x2, [x1]
    1c1c:	asr	x17, x10, #32
    1c20:	asr	x16, x6, #32
    1c24:	add	x1, x1, #0x10
    1c28:	cmp	x15, x1
    1c2c:	add	w14, w5, w10
    1c30:	add	w13, w2, w6
    1c34:	asr	x5, x5, #32
    1c38:	asr	x2, x2, #32
    1c3c:	mov	x10, #0x0                   	// #0
    1c40:	mov	x6, #0x0                   	// #0
    1c44:	add	w5, w5, w17
    1c48:	bfxil	x10, x14, #0, #32
    1c4c:	add	w2, w2, w16
    1c50:	bfxil	x6, x13, #0, #32
    1c54:	bfi	x10, x5, #32, #32
    1c58:	bfi	x6, x2, #32, #32
    1c5c:	b.ne	1c18 <grub_video_reader_png+0xdd8>  // b.any
    1c60:	add	w5, w14, w5
    1c64:	and	w6, w11, #0xfffffffc
    1c68:	add	w13, w13, w5
    1c6c:	add	w1, w6, w12
    1c70:	add	w2, w2, w13
    1c74:	cmp	w6, w11
    1c78:	add	w0, w2, w0
    1c7c:	b.eq	1d44 <grub_video_reader_png+0xf04>  // b.none
    1c80:	ldr	w5, [x8, w1, sxtw #2]
    1c84:	add	w2, w1, #0x1
    1c88:	cmp	w7, w2
    1c8c:	sbfiz	x2, x1, #2, #32
    1c90:	add	w0, w0, w5
    1c94:	b.le	1d44 <grub_video_reader_png+0xf04>
    1c98:	add	x2, x8, x2
    1c9c:	add	w5, w1, #0x2
    1ca0:	cmp	w7, w5
    1ca4:	ldr	w5, [x2, #4]
    1ca8:	add	w0, w0, w5
    1cac:	b.le	1d44 <grub_video_reader_png+0xf04>
    1cb0:	ldr	w5, [x2, #8]
    1cb4:	add	w6, w1, #0x3
    1cb8:	cmp	w7, w6
    1cbc:	add	w0, w0, w5
    1cc0:	b.le	1d44 <grub_video_reader_png+0xf04>
    1cc4:	ldr	w5, [x2, #12]
    1cc8:	add	w6, w1, #0x4
    1ccc:	cmp	w7, w6
    1cd0:	add	w0, w0, w5
    1cd4:	b.le	1d44 <grub_video_reader_png+0xf04>
    1cd8:	ldr	w5, [x2, #16]
    1cdc:	add	w6, w1, #0x5
    1ce0:	cmp	w7, w6
    1ce4:	add	w0, w0, w5
    1ce8:	b.le	1d44 <grub_video_reader_png+0xf04>
    1cec:	ldr	w5, [x2, #20]
    1cf0:	add	w6, w1, #0x6
    1cf4:	cmp	w7, w6
    1cf8:	add	w0, w0, w5
    1cfc:	b.le	1d44 <grub_video_reader_png+0xf04>
    1d00:	ldr	w5, [x2, #24]
    1d04:	add	w6, w1, #0x7
    1d08:	cmp	w7, w6
    1d0c:	add	w0, w0, w5
    1d10:	b.le	1d44 <grub_video_reader_png+0xf04>
    1d14:	ldr	w5, [x2, #28]
    1d18:	add	w6, w1, #0x8
    1d1c:	cmp	w7, w6
    1d20:	add	w0, w0, w5
    1d24:	b.le	1d44 <grub_video_reader_png+0xf04>
    1d28:	ldr	w5, [x2, #32]
    1d2c:	add	w1, w1, #0x9
    1d30:	cmp	w7, w1
    1d34:	add	w0, w0, w5
    1d38:	b.le	1d44 <grub_video_reader_png+0xf04>
    1d3c:	ldr	w1, [x2, #36]
    1d40:	add	w0, w0, w1
    1d44:	cmp	w0, #0x0
    1d48:	b.le	1d70 <grub_video_reader_png+0xf30>
    1d4c:	mov	w2, #0x0                   	// #0
    1d50:	ldr	w1, [x28, #24]
    1d54:	sub	w1, w1, w2
    1d58:	add	w2, w2, #0x1
    1d5c:	cmp	w2, w0
    1d60:	add	x5, x9, w1, sxtw #2
    1d64:	ldur	w5, [x5, #-4]
    1d68:	str	w5, [x9, w1, sxtw #2]
    1d6c:	b.ne	1d50 <grub_video_reader_png+0xf10>  // b.any
    1d70:	ldr	w1, [x28, #24]
    1d74:	sub	w0, w1, w0
    1d78:	str	w25, [x9, w0, sxtw #2]
    1d7c:	ldr	w0, [x28, #24]
    1d80:	add	w0, w0, #0x1
    1d84:	str	w0, [x28, #24]
    1d88:	ldr	w0, [x8, #16]
    1d8c:	add	w0, w0, #0x1
    1d90:	str	w0, [x8, #16]
    1d94:	add	w25, w25, #0x1
    1d98:	cmp	w25, #0x1e
    1d9c:	b.ne	1b88 <grub_video_reader_png+0xd48>  // b.any
    1da0:	ldr	w0, [x28, #28]
    1da4:	cmp	w0, #0x0
    1da8:	b.le	1658 <grub_video_reader_png+0x818>
    1dac:	ldp	x7, x8, [x28, #8]
    1db0:	mov	w5, #0x0                   	// #0
    1db4:	mov	w1, #0x0                   	// #0
    1db8:	mov	x0, #0x0                   	// #0
    1dbc:	nop
    1dc0:	ldr	w6, [x7, x0, lsl #2]
    1dc4:	sub	w2, w5, w1
    1dc8:	add	w1, w6, w1
    1dcc:	str	w1, [x7, x0, lsl #2]
    1dd0:	str	w2, [x8, x0, lsl #2]
    1dd4:	add	x0, x0, #0x1
    1dd8:	lsl	w1, w1, #1
    1ddc:	add	w5, w5, w6
    1de0:	ldr	w2, [x28, #28]
    1de4:	cmp	w2, w0
    1de8:	b.gt	1dc0 <grub_video_reader_png+0xf80>
    1dec:	b	1658 <grub_video_reader_png+0x818>
    1df0:	ldr	x1, [x24]
    1df4:	mov	w0, #0x4                   	// #4
    1df8:	bl	0 <grub_error>
    1dfc:	b	18c4 <grub_video_reader_png+0xa84>
    1e00:	mov	w14, #0x0                   	// #0
    1e04:	mov	w6, #0x9                   	// #9
    1e08:	b	1724 <grub_video_reader_png+0x8e4>
    1e0c:	mov	w0, #0x0                   	// #0
    1e10:	mov	w1, #0x9                   	// #9
    1e14:	b	17b0 <grub_video_reader_png+0x970>
    1e18:	ldr	x1, [x24]
    1e1c:	mov	w0, #0x4                   	// #4
    1e20:	bl	0 <grub_error>
    1e24:	b	1d94 <grub_video_reader_png+0xf54>
    1e28:	ldr	x1, [x24]
    1e2c:	mov	w0, #0x4                   	// #4
    1e30:	bl	0 <grub_error>
    1e34:	b	1ae4 <grub_video_reader_png+0xca4>
    1e38:	mov	w0, #0x0                   	// #0
    1e3c:	mov	w12, #0x5                   	// #5
    1e40:	b	1bf4 <grub_video_reader_png+0xdb4>
    1e44:	mov	w0, #0x0                   	// #0
    1e48:	mov	w12, #0x7                   	// #7
    1e4c:	b	1944 <grub_video_reader_png+0xb04>
    1e50:	mov	w0, #0x0                   	// #0
    1e54:	mov	w1, #0x5                   	// #5
    1e58:	b	1c80 <grub_video_reader_png+0xe40>
    1e5c:	mov	w0, #0x0                   	// #0
    1e60:	mov	w12, #0x7                   	// #7
    1e64:	b	19d0 <grub_video_reader_png+0xb90>
    1e68:	adrp	x1, 0 <grub_png_output_byte>
    1e6c:	mov	w0, #0x4                   	// #4
    1e70:	ldr	x1, [x1]
    1e74:	bl	0 <grub_error>
    1e78:	str	wzr, [x22, #80]
    1e7c:	b	10f8 <grub_video_reader_png+0x2b8>
    1e80:	adrp	x1, 0 <grub_png_output_byte>
    1e84:	mov	w0, #0x4                   	// #4
    1e88:	ldr	x1, [x1]
    1e8c:	bl	0 <grub_error>
    1e90:	b	e9c <grub_video_reader_png+0x5c>
    1e94:	mov	w1, #0x8                   	// #8
    1e98:	add	w3, w27, #0x101
    1e9c:	sub	w1, w1, w2
    1ea0:	asr	w0, w0, w2
    1ea4:	stp	w1, w0, [x22, #16]
    1ea8:	str	w3, [sp, #144]
    1eac:	cmp	w3, #0x120
    1eb0:	cset	w24, gt
    1eb4:	cbnz	w1, 2780 <grub_video_reader_png+0x1940>
    1eb8:	mov	x0, x22
    1ebc:	bl	300 <grub_png_get_byte>
    1ec0:	ldr	w2, [x20]
    1ec4:	and	w0, w0, #0xff
    1ec8:	mov	w1, #0x8                   	// #8
    1ecc:	stp	w1, w0, [x22, #16]
    1ed0:	cbnz	w2, 1630 <grub_video_reader_png+0x7f0>
    1ed4:	and	w28, w0, #0x1f
    1ed8:	mov	w2, #0x5                   	// #5
    1edc:	nop
    1ee0:	add	w3, w28, #0x1
    1ee4:	sub	w1, w1, w2
    1ee8:	asr	w0, w0, w2
    1eec:	cmp	w3, #0x1e
    1ef0:	stp	w1, w0, [x22, #16]
    1ef4:	cset	w2, gt
    1ef8:	str	w3, [sp, #108]
    1efc:	orr	w24, w24, w2
    1f00:	cbnz	w1, 2848 <grub_video_reader_png+0x1a08>
    1f04:	mov	x0, x22
    1f08:	bl	300 <grub_png_get_byte>
    1f0c:	ldr	w2, [x20]
    1f10:	and	w0, w0, #0xff
    1f14:	mov	w1, #0x8                   	// #8
    1f18:	stp	w1, w0, [x22, #16]
    1f1c:	cbnz	w2, 1640 <grub_video_reader_png+0x800>
    1f20:	and	w25, w0, #0xf
    1f24:	mov	w2, #0x4                   	// #4
    1f28:	sub	w1, w1, w2
    1f2c:	asr	w0, w0, w2
    1f30:	stp	w1, w0, [x22, #16]
    1f34:	add	w0, w25, #0x4
    1f38:	str	w0, [sp, #104]
    1f3c:	cmp	w24, #0x0
    1f40:	ccmp	w0, #0x13, #0x0, eq  // eq = none
    1f44:	b.gt	1648 <grub_video_reader_png+0x808>
    1f48:	add	x5, sp, #0x100
    1f4c:	add	x4, sp, #0x120
    1f50:	mov	x3, #0x800000000           	// #34359738368
    1f54:	add	x0, sp, #0xe0
    1f58:	mov	x2, #0x20                  	// #32
    1f5c:	mov	w1, #0x0                   	// #0
    1f60:	str	x4, [sp, #192]
    1f64:	str	x0, [sp, #200]
    1f68:	stp	x5, x3, [sp, #208]
    1f6c:	bl	0 <grub_memset>
    1f70:	ldr	w0, [sp, #104]
    1f74:	cmp	w0, #0x0
    1f78:	b.le	2cc4 <grub_video_reader_png+0x1e84>
    1f7c:	ldr	w1, [x22, #16]
    1f80:	add	x0, sp, #0xa8
    1f84:	mov	x28, #0x0                   	// #0
    1f88:	mov	w24, #0x8                   	// #8
    1f8c:	str	x0, [sp, #96]
    1f90:	cbz	w1, 2464 <grub_video_reader_png+0x1624>
    1f94:	ldr	w0, [x20]
    1f98:	cbnz	w0, 2dcc <grub_video_reader_png+0x1f8c>
    1f9c:	cmp	w1, #0x3
    1fa0:	mov	w2, #0x3                   	// #3
    1fa4:	csel	w2, w1, w2, le
    1fa8:	ldr	w0, [x22, #20]
    1fac:	mov	w3, #0x3                   	// #3
    1fb0:	subs	w26, w3, w2
    1fb4:	lsl	w6, w19, w2
    1fb8:	sub	w6, w6, #0x1
    1fbc:	and	w27, w6, w0
    1fc0:	b.eq	2dc4 <grub_video_reader_png+0x1f84>  // b.none
    1fc4:	mov	w25, #0x0                   	// #0
    1fc8:	b	1fd8 <grub_video_reader_png+0x1198>
    1fcc:	lsl	w1, w1, w25
    1fd0:	add	w27, w27, w1
    1fd4:	b.eq	2428 <grub_video_reader_png+0x15e8>  // b.none
    1fd8:	add	w25, w25, w2
    1fdc:	mov	x0, x22
    1fe0:	bl	300 <grub_png_get_byte>
    1fe4:	and	w0, w0, #0xff
    1fe8:	cmp	w26, #0x8
    1fec:	ldr	w7, [x20]
    1ff0:	csel	w2, w26, w24, le
    1ff4:	stp	w24, w0, [x22, #16]
    1ff8:	subs	w26, w26, w2
    1ffc:	lsl	w1, w19, w2
    2000:	sub	w1, w1, #0x1
    2004:	and	w1, w1, w0
    2008:	cbz	w7, 1fcc <grub_video_reader_png+0x118c>
    200c:	and	w6, w27, #0xff
    2010:	mov	w1, #0x8                   	// #8
    2014:	ldr	x0, [sp, #128]
    2018:	ldr	w2, [sp, #104]
    201c:	add	x0, x0, #0x140
    2020:	ldrb	w0, [x28, x0]
    2024:	add	x28, x28, #0x1
    2028:	cmp	w2, w28
    202c:	ldr	x2, [sp, #96]
    2030:	strb	w6, [x2, w0, sxtw]
    2034:	b.gt	1f90 <grub_video_reader_png+0x1150>
    2038:	ldr	w0, [sp, #104]
    203c:	cmp	w0, #0x13
    2040:	b.eq	2068 <grub_video_reader_png+0x1228>  // b.none
    2044:	ldr	x0, [sp, #128]
    2048:	ldrsw	x25, [sp, #104]
    204c:	add	x1, x0, #0x140
    2050:	ldrb	w0, [x25, x1]
    2054:	add	x25, x25, #0x1
    2058:	ldr	x2, [sp, #96]
    205c:	cmp	w25, #0x12
    2060:	strb	wzr, [x2, w0, sxtw]
    2064:	b.le	2050 <grub_video_reader_png+0x1210>
    2068:	ldr	x26, [sp, #96]
    206c:	mov	w24, #0x0                   	// #0
    2070:	ldrb	w2, [x26]
    2074:	mov	w1, w24
    2078:	add	x26, x26, #0x1
    207c:	add	w24, w24, #0x1
    2080:	add	x0, sp, #0xc0
    2084:	cbz	w2, 208c <grub_video_reader_png+0x124c>
    2088:	bl	450 <grub_png_insert_huff_item.part.0>
    208c:	cmp	w24, #0x13
    2090:	b.ne	2070 <grub_video_reader_png+0x1230>  // b.any
    2094:	ldr	w0, [sp, #220]
    2098:	cmp	w0, #0x0
    209c:	b.le	20dc <grub_video_reader_png+0x129c>
    20a0:	ldp	x6, x7, [sp, #200]
    20a4:	mov	w3, #0x0                   	// #0
    20a8:	mov	w1, #0x0                   	// #0
    20ac:	mov	x0, #0x0                   	// #0
    20b0:	ldr	w5, [x6, x0, lsl #2]
    20b4:	sub	w2, w3, w1
    20b8:	add	w1, w5, w1
    20bc:	str	w1, [x6, x0, lsl #2]
    20c0:	str	w2, [x7, x0, lsl #2]
    20c4:	add	x0, x0, #0x1
    20c8:	lsl	w1, w1, #1
    20cc:	add	w3, w3, w5
    20d0:	ldr	w2, [sp, #220]
    20d4:	cmp	w2, w0
    20d8:	b.gt	20b0 <grub_video_reader_png+0x1270>
    20dc:	add	x27, x22, #0x950
    20e0:	ldr	w4, [sp, #108]
    20e4:	ldr	w3, [sp, #144]
    20e8:	add	x0, x22, #0x58
    20ec:	str	x0, [x22, #2384]
    20f0:	add	x1, x22, #0x518
    20f4:	add	x0, x22, #0x4d8
    20f8:	stp	x0, x1, [x27, #8]
    20fc:	mov	x24, #0x1000000000          	// #68719476736
    2100:	str	x24, [x22, #2408]
    2104:	add	x28, x22, #0x970
    2108:	add	w25, w3, w4
    210c:	mov	x2, #0x40                  	// #64
    2110:	mov	w1, #0x0                   	// #0
    2114:	str	w25, [sp, #156]
    2118:	bl	0 <grub_memset>
    211c:	str	wzr, [sp, #152]
    2120:	add	x0, x22, #0x558
    2124:	str	x0, [x22, #2416]
    2128:	add	x1, x22, #0x610
    212c:	add	x0, x22, #0x5d0
    2130:	stp	x0, x1, [x28, #8]
    2134:	mov	x2, #0x40                  	// #64
    2138:	mov	w1, #0x0                   	// #0
    213c:	str	x24, [x22, #2440]
    2140:	mov	w24, #0x8                   	// #8
    2144:	bl	0 <grub_memset>
    2148:	str	wzr, [sp, #124]
    214c:	cmp	w25, #0x0
    2150:	b.le	2270 <grub_video_reader_png+0x1430>
    2154:	nop
    2158:	ldr	w0, [x20]
    215c:	cbnz	w0, 1658 <grub_video_reader_png+0x818>
    2160:	ldr	w0, [sp, #124]
    2164:	ldr	w1, [sp, #144]
    2168:	cmp	w0, w1
    216c:	b.lt	240c <grub_video_reader_png+0x15cc>  // b.tstop
    2170:	sub	w0, w0, w1
    2174:	str	x28, [sp, #136]
    2178:	str	w0, [sp, #148]
    217c:	ldr	w0, [sp, #220]
    2180:	cmp	w0, #0x0
    2184:	b.le	2250 <grub_video_reader_png+0x1410>
    2188:	ldr	w10, [x22, #16]
    218c:	mov	w26, #0x0                   	// #0
    2190:	mov	x25, #0x0                   	// #0
    2194:	nop
    2198:	lsl	w26, w26, #1
    219c:	cbz	w10, 2308 <grub_video_reader_png+0x14c8>
    21a0:	ldr	w0, [x20]
    21a4:	cbnz	w0, 222c <grub_video_reader_png+0x13ec>
    21a8:	cmp	w10, #0x0
    21ac:	ldr	w0, [x22, #20]
    21b0:	csel	w1, w10, w19, le
    21b4:	subs	w7, w19, w1
    21b8:	lsl	w6, w19, w1
    21bc:	sub	w6, w6, #0x1
    21c0:	and	w6, w6, w0
    21c4:	b.eq	2d60 <grub_video_reader_png+0x1f20>  // b.none
    21c8:	mov	w10, #0x0                   	// #0
    21cc:	b	21dc <grub_video_reader_png+0x139c>
    21d0:	lsl	w2, w2, w10
    21d4:	add	w6, w6, w2
    21d8:	b.eq	2328 <grub_video_reader_png+0x14e8>  // b.none
    21dc:	add	w10, w10, w1
    21e0:	mov	x0, x22
    21e4:	str	w10, [sp, #96]
    21e8:	stp	w6, w7, [sp, #104]
    21ec:	str	w10, [sp, #120]
    21f0:	bl	300 <grub_png_get_byte>
    21f4:	ldp	w6, w7, [sp, #104]
    21f8:	and	w0, w0, #0xff
    21fc:	ldr	w11, [x20]
    2200:	cmp	w7, #0x8
    2204:	stp	w24, w0, [x22, #16]
    2208:	csel	w1, w7, w24, le
    220c:	ldr	w10, [sp, #96]
    2210:	subs	w7, w7, w1
    2214:	lsl	w2, w19, w1
    2218:	sub	w2, w2, #0x1
    221c:	and	w2, w2, w0
    2220:	cbz	w11, 21d0 <grub_video_reader_png+0x1390>
    2224:	add	w26, w26, w6
    2228:	mov	w10, #0x8                   	// #8
    222c:	ldr	x0, [sp, #200]
    2230:	lsl	x1, x25, #2
    2234:	ldr	w0, [x0, x25, lsl #2]
    2238:	cmp	w0, w26
    223c:	b.gt	2340 <grub_video_reader_png+0x1500>
    2240:	ldr	w0, [sp, #220]
    2244:	add	x25, x25, #0x1
    2248:	cmp	w0, w25
    224c:	b.gt	2198 <grub_video_reader_png+0x1358>
    2250:	ldr	w0, [sp, #124]
    2254:	str	wzr, [sp, #152]
    2258:	add	w0, w0, #0x1
    225c:	str	w0, [sp, #124]
    2260:	ldr	w1, [sp, #124]
    2264:	ldr	w0, [sp, #156]
    2268:	cmp	w0, w1
    226c:	b.gt	2158 <grub_video_reader_png+0x1318>
    2270:	ldr	w0, [x27, #28]
    2274:	cmp	w0, #0x0
    2278:	b.le	22bc <grub_video_reader_png+0x147c>
    227c:	ldp	x8, x9, [x27, #8]
    2280:	mov	w6, #0x0                   	// #0
    2284:	mov	w1, #0x0                   	// #0
    2288:	mov	x0, #0x0                   	// #0
    228c:	nop
    2290:	ldr	w7, [x8, x0, lsl #2]
    2294:	sub	w2, w6, w1
    2298:	add	w1, w7, w1
    229c:	str	w1, [x8, x0, lsl #2]
    22a0:	str	w2, [x9, x0, lsl #2]
    22a4:	add	x0, x0, #0x1
    22a8:	lsl	w1, w1, #1
    22ac:	add	w6, w6, w7
    22b0:	ldr	w2, [x27, #28]
    22b4:	cmp	w2, w0
    22b8:	b.gt	2290 <grub_video_reader_png+0x1450>
    22bc:	ldr	w0, [x28, #28]
    22c0:	cmp	w0, #0x0
    22c4:	b.le	1658 <grub_video_reader_png+0x818>
    22c8:	ldp	x7, x8, [x28, #8]
    22cc:	mov	w5, #0x0                   	// #0
    22d0:	mov	w1, #0x0                   	// #0
    22d4:	mov	x0, #0x0                   	// #0
    22d8:	ldr	w6, [x7, x0, lsl #2]
    22dc:	sub	w2, w5, w1
    22e0:	add	w1, w6, w1
    22e4:	str	w1, [x7, x0, lsl #2]
    22e8:	str	w2, [x8, x0, lsl #2]
    22ec:	add	x0, x0, #0x1
    22f0:	lsl	w1, w1, #1
    22f4:	add	w5, w5, w6
    22f8:	ldr	w2, [x28, #28]
    22fc:	cmp	w2, w0
    2300:	b.gt	22d8 <grub_video_reader_png+0x1498>
    2304:	b	1658 <grub_video_reader_png+0x818>
    2308:	mov	x0, x22
    230c:	bl	300 <grub_png_get_byte>
    2310:	ldr	w1, [x20]
    2314:	and	w0, w0, #0xff
    2318:	stp	w24, w0, [x22, #16]
    231c:	cbnz	w1, 2228 <grub_video_reader_png+0x13e8>
    2320:	and	w6, w0, #0x1
    2324:	mov	w1, #0x1                   	// #1
    2328:	mov	w10, #0x8                   	// #8
    232c:	sub	w10, w10, w1
    2330:	asr	w0, w0, w1
    2334:	add	w26, w26, w6
    2338:	stp	w10, w0, [x22, #16]
    233c:	b	222c <grub_video_reader_png+0x13ec>
    2340:	ldr	x2, [sp, #208]
    2344:	ldr	x0, [sp, #192]
    2348:	ldr	w1, [x2, x1]
    234c:	add	w8, w26, w1
    2350:	ldr	w2, [x0, w8, sxtw #2]
    2354:	cmp	w2, #0xf
    2358:	b.le	2440 <grub_video_reader_png+0x1600>
    235c:	cmp	w2, #0x10
    2360:	b.eq	2a74 <grub_video_reader_png+0x1c34>  // b.none
    2364:	cmp	w2, #0x11
    2368:	b.eq	2488 <grub_video_reader_png+0x1648>  // b.none
    236c:	cbz	w10, 2518 <grub_video_reader_png+0x16d8>
    2370:	ldr	w0, [x20]
    2374:	cbnz	w0, 28c8 <grub_video_reader_png+0x1a88>
    2378:	cmp	w10, #0x7
    237c:	mov	w1, #0x7                   	// #7
    2380:	csel	w2, w10, w1, le
    2384:	ldr	w0, [x22, #20]
    2388:	subs	w26, w1, w2
    238c:	lsl	w7, w19, w2
    2390:	sub	w7, w7, #0x1
    2394:	and	w7, w7, w0
    2398:	b.eq	2d58 <grub_video_reader_png+0x1f18>  // b.none
    239c:	mov	w6, #0x0                   	// #0
    23a0:	b	23b0 <grub_video_reader_png+0x1570>
    23a4:	lsl	w1, w1, w6
    23a8:	add	w7, w7, w1
    23ac:	b.eq	2538 <grub_video_reader_png+0x16f8>  // b.none
    23b0:	add	w6, w6, w2
    23b4:	mov	x0, x22
    23b8:	str	w6, [sp, #96]
    23bc:	stp	w7, w6, [sp, #104]
    23c0:	bl	300 <grub_png_get_byte>
    23c4:	and	w0, w0, #0xff
    23c8:	cmp	w26, #0x8
    23cc:	ldr	w8, [x20]
    23d0:	csel	w2, w26, w24, le
    23d4:	stp	w24, w0, [x22, #16]
    23d8:	ldr	w6, [sp, #96]
    23dc:	subs	w26, w26, w2
    23e0:	lsl	w1, w19, w2
    23e4:	sub	w1, w1, #0x1
    23e8:	ldr	w7, [sp, #104]
    23ec:	and	w1, w1, w0
    23f0:	cbz	w8, 23a4 <grub_video_reader_png+0x1564>
    23f4:	add	w7, w7, #0xa
    23f8:	ldr	w0, [sp, #124]
    23fc:	add	w7, w0, w7
    2400:	add	w0, w7, #0x1
    2404:	str	w0, [sp, #124]
    2408:	b	2260 <grub_video_reader_png+0x1420>
    240c:	ldr	w0, [sp, #124]
    2410:	str	x27, [sp, #136]
    2414:	str	w0, [sp, #148]
    2418:	b	217c <grub_video_reader_png+0x133c>
    241c:	and	w27, w0, #0x7
    2420:	mov	w2, #0x3                   	// #3
    2424:	nop
    2428:	mov	w1, #0x8                   	// #8
    242c:	sub	w1, w1, w2
    2430:	asr	w0, w0, w2
    2434:	and	w6, w27, #0xff
    2438:	stp	w1, w0, [x22, #16]
    243c:	b	2014 <grub_video_reader_png+0x11d4>
    2440:	ldr	w0, [sp, #124]
    2444:	add	w0, w0, #0x1
    2448:	str	w0, [sp, #124]
    244c:	cbz	w2, 2dbc <grub_video_reader_png+0x1f7c>
    2450:	ldr	w1, [sp, #148]
    2454:	ldr	x0, [sp, #136]
    2458:	str	w2, [sp, #152]
    245c:	bl	450 <grub_png_insert_huff_item.part.0>
    2460:	b	2260 <grub_video_reader_png+0x1420>
    2464:	mov	x0, x22
    2468:	bl	300 <grub_png_get_byte>
    246c:	ldr	w1, [x20]
    2470:	and	w0, w0, #0xff
    2474:	stp	w24, w0, [x22, #16]
    2478:	cbz	w1, 241c <grub_video_reader_png+0x15dc>
    247c:	mov	w6, #0x0                   	// #0
    2480:	mov	w1, #0x8                   	// #8
    2484:	b	2014 <grub_video_reader_png+0x11d4>
    2488:	cbz	w10, 2954 <grub_video_reader_png+0x1b14>
    248c:	ldr	w0, [x20]
    2490:	cbnz	w0, 2a58 <grub_video_reader_png+0x1c18>
    2494:	cmp	w10, #0x3
    2498:	mov	w1, #0x3                   	// #3
    249c:	csel	w2, w10, w1, le
    24a0:	ldr	w0, [x22, #20]
    24a4:	subs	w26, w1, w2
    24a8:	lsl	w7, w19, w2
    24ac:	sub	w7, w7, #0x1
    24b0:	and	w7, w7, w0
    24b4:	b.eq	2db4 <grub_video_reader_png+0x1f74>  // b.none
    24b8:	mov	w6, #0x0                   	// #0
    24bc:	b	24cc <grub_video_reader_png+0x168c>
    24c0:	lsl	w1, w1, w6
    24c4:	add	w7, w7, w1
    24c8:	b.eq	2974 <grub_video_reader_png+0x1b34>  // b.none
    24cc:	add	w6, w6, w2
    24d0:	mov	x0, x22
    24d4:	str	w6, [sp, #96]
    24d8:	stp	w7, w6, [sp, #104]
    24dc:	bl	300 <grub_png_get_byte>
    24e0:	and	w0, w0, #0xff
    24e4:	cmp	w26, #0x8
    24e8:	ldr	w8, [x20]
    24ec:	csel	w2, w26, w24, le
    24f0:	stp	w24, w0, [x22, #16]
    24f4:	ldr	w6, [sp, #96]
    24f8:	subs	w26, w26, w2
    24fc:	lsl	w1, w19, w2
    2500:	sub	w1, w1, #0x1
    2504:	ldr	w7, [sp, #104]
    2508:	and	w1, w1, w0
    250c:	cbz	w8, 24c0 <grub_video_reader_png+0x1680>
    2510:	add	w7, w7, #0x2
    2514:	b	23f8 <grub_video_reader_png+0x15b8>
    2518:	mov	x0, x22
    251c:	bl	300 <grub_png_get_byte>
    2520:	ldr	w1, [x20]
    2524:	and	w0, w0, #0xff
    2528:	stp	w24, w0, [x22, #16]
    252c:	cbnz	w1, 28c8 <grub_video_reader_png+0x1a88>
    2530:	and	w7, w0, #0x7f
    2534:	mov	w2, #0x7                   	// #7
    2538:	mov	w10, #0x8                   	// #8
    253c:	sub	w10, w10, w2
    2540:	asr	w0, w0, w2
    2544:	add	w7, w7, #0xa
    2548:	stp	w10, w0, [x22, #16]
    254c:	b	23f8 <grub_video_reader_png+0x15b8>
    2550:	ldr	w2, [x22, #48]
    2554:	mov	w0, #0x1                   	// #1
    2558:	lsl	w0, w0, w1
    255c:	sub	w19, w0, #0x1
    2560:	cbz	w2, 2b64 <grub_video_reader_png+0x1d24>
    2564:	adrp	x2, 0 <grub_png_output_byte>
    2568:	ldr	x2, [x2]
    256c:	ldr	w3, [x2]
    2570:	ldrb	w2, [x2, #4]
    2574:	str	w3, [sp, #256]
    2578:	strb	w2, [sp, #260]
    257c:	cbz	w0, 26c0 <grub_video_reader_png+0x1880>
    2580:	add	x0, sp, #0x100
    2584:	strh	wzr, [sp, #288]
    2588:	strb	wzr, [sp, #290]
    258c:	ldrb	w0, [x0, w1, sxtw]
    2590:	cbz	w1, 26c0 <grub_video_reader_png+0x1880>
    2594:	strb	w0, [sp, #291]
    2598:	cmp	w1, #0x1
    259c:	strb	w0, [sp, #292]
    25a0:	strb	w0, [sp, #293]
    25a4:	b.eq	26c0 <grub_video_reader_png+0x1880>  // b.none
    25a8:	ubfiz	w2, w0, #1, #7
    25ac:	strb	w2, [sp, #294]
    25b0:	add	w3, w0, w2
    25b4:	strb	w2, [sp, #295]
    25b8:	and	w5, w3, #0xff
    25bc:	strb	w2, [sp, #296]
    25c0:	strb	w5, [sp, #297]
    25c4:	cmp	w1, #0x2
    25c8:	strb	w5, [sp, #298]
    25cc:	strb	w5, [sp, #299]
    25d0:	b.eq	26c0 <grub_video_reader_png+0x1880>  // b.none
    25d4:	ubfiz	w2, w0, #2, #6
    25d8:	ubfiz	w7, w0, #3, #5
    25dc:	add	w6, w0, w2
    25e0:	sub	w5, w7, w0
    25e4:	and	w10, w6, #0xff
    25e8:	and	w8, w5, #0xff
    25ec:	ubfiz	w9, w3, #1, #7
    25f0:	strb	w2, [sp, #300]
    25f4:	strb	w2, [sp, #301]
    25f8:	cmp	w1, #0x3
    25fc:	strb	w2, [sp, #302]
    2600:	strb	w10, [sp, #303]
    2604:	strb	w10, [sp, #304]
    2608:	strb	w10, [sp, #305]
    260c:	strb	w9, [sp, #306]
    2610:	strb	w9, [sp, #307]
    2614:	strb	w9, [sp, #308]
    2618:	strb	w8, [sp, #309]
    261c:	strb	w8, [sp, #310]
    2620:	strb	w8, [sp, #311]
    2624:	b.eq	26c0 <grub_video_reader_png+0x1880>  // b.none
    2628:	mov	w2, #0xb                   	// #11
    262c:	mov	w9, #0xd                   	// #13
    2630:	ubfiz	w1, w0, #4, #4
    2634:	add	w8, w0, w7
    2638:	mul	w2, w0, w2
    263c:	sub	w1, w1, w0
    2640:	mul	w0, w0, w9
    2644:	ubfiz	w6, w6, #1, #7
    2648:	ubfiz	w3, w3, #2, #6
    264c:	ubfiz	w5, w5, #1, #7
    2650:	and	w8, w8, #0xff
    2654:	and	w2, w2, #0xff
    2658:	and	w0, w0, #0xff
    265c:	and	w1, w1, #0xff
    2660:	strb	w7, [sp, #312]
    2664:	strb	w7, [sp, #313]
    2668:	strb	w7, [sp, #314]
    266c:	strb	w8, [sp, #315]
    2670:	strb	w8, [sp, #316]
    2674:	strb	w8, [sp, #317]
    2678:	strb	w6, [sp, #318]
    267c:	strb	w6, [sp, #319]
    2680:	strb	w6, [sp, #320]
    2684:	strb	w2, [sp, #321]
    2688:	strb	w2, [sp, #322]
    268c:	strb	w2, [sp, #323]
    2690:	strb	w3, [sp, #324]
    2694:	strb	w3, [sp, #325]
    2698:	strb	w3, [sp, #326]
    269c:	strb	w0, [sp, #327]
    26a0:	strb	w0, [sp, #328]
    26a4:	strb	w0, [sp, #329]
    26a8:	strb	w5, [sp, #330]
    26ac:	strb	w5, [sp, #331]
    26b0:	strb	w5, [sp, #332]
    26b4:	strb	w1, [sp, #333]
    26b8:	strb	w1, [sp, #334]
    26bc:	strb	w1, [sp, #335]
    26c0:	ldr	w3, [x22, #32]
    26c4:	cbz	w3, 1040 <grub_video_reader_png+0x200>
    26c8:	ldr	w5, [x22, #28]
    26cc:	sxtb	w7, w19
    26d0:	ldr	w0, [x22, #64]
    26d4:	mov	w8, #0x0                   	// #0
    26d8:	mov	w9, #0x8                   	// #8
    26dc:	nop
    26e0:	sub	w2, w9, w0
    26e4:	cbz	w5, 275c <grub_video_reader_png+0x191c>
    26e8:	mov	x1, x24
    26ec:	mov	x6, x23
    26f0:	mov	w3, #0x0                   	// #0
    26f4:	nop
    26f8:	ldrb	w0, [x6]
    26fc:	add	w3, w3, #0x1
    2700:	add	x1, x1, #0x3
    2704:	asr	w0, w0, w2
    2708:	and	w0, w7, w0
    270c:	ubfiz	x5, x0, #1, #8
    2710:	add	x0, x5, w0, uxtb
    2714:	add	x0, x22, x0
    2718:	ldrb	w5, [x0, #1618]
    271c:	sturb	w5, [x1, #-1]
    2720:	ldrb	w5, [x0, #1617]
    2724:	sturb	w5, [x1, #-2]
    2728:	ldrb	w0, [x0, #1616]
    272c:	sturb	w0, [x1, #-3]
    2730:	ldr	w0, [x22, #64]
    2734:	subs	w2, w2, w0
    2738:	b.pl	2744 <grub_video_reader_png+0x1904>  // b.nfrst
    273c:	add	x6, x6, #0x1
    2740:	add	w2, w2, #0x8
    2744:	ldr	w5, [x22, #28]
    2748:	cmp	w5, w3
    274c:	b.hi	26f8 <grub_video_reader_png+0x18b8>  // b.pmore
    2750:	add	w1, w5, w5, lsl #1
    2754:	ldr	w3, [x22, #32]
    2758:	add	x24, x24, x1
    275c:	ldrsw	x1, [x22, #60]
    2760:	add	w8, w8, #0x1
    2764:	cmp	w8, w3
    2768:	add	x23, x23, x1
    276c:	b.cc	26e0 <grub_video_reader_png+0x18a0>  // b.lo, b.ul, b.last
    2770:	b	1040 <grub_video_reader_png+0x200>
    2774:	mov	w0, #0x101                 	// #257
    2778:	mov	w24, #0x0                   	// #0
    277c:	str	w0, [sp, #144]
    2780:	ldr	w0, [x20]
    2784:	cbnz	w0, 2840 <grub_video_reader_png+0x1a00>
    2788:	cmp	w1, #0x5
    278c:	mov	w3, #0x5                   	// #5
    2790:	csel	w2, w1, w3, le
    2794:	ldr	w0, [x22, #20]
    2798:	subs	w25, w3, w2
    279c:	lsl	w28, w19, w2
    27a0:	sub	w28, w28, #0x1
    27a4:	and	w28, w28, w0
    27a8:	b.eq	2d78 <grub_video_reader_png+0x1f38>  // b.none
    27ac:	mov	w26, #0x0                   	// #0
    27b0:	mov	w27, #0x8                   	// #8
    27b4:	b	27c4 <grub_video_reader_png+0x1984>
    27b8:	lsl	w1, w1, w26
    27bc:	add	w28, w28, w1
    27c0:	b.eq	2810 <grub_video_reader_png+0x19d0>  // b.none
    27c4:	add	w26, w26, w2
    27c8:	mov	x0, x22
    27cc:	bl	300 <grub_png_get_byte>
    27d0:	and	w0, w0, #0xff
    27d4:	cmp	w25, #0x8
    27d8:	ldr	w5, [x20]
    27dc:	csel	w2, w25, w27, le
    27e0:	stp	w27, w0, [x22, #16]
    27e4:	subs	w25, w25, w2
    27e8:	lsl	w1, w19, w2
    27ec:	sub	w1, w1, #0x1
    27f0:	and	w1, w1, w0
    27f4:	cbz	w5, 27b8 <grub_video_reader_png+0x1978>
    27f8:	add	w0, w28, #0x1
    27fc:	str	w0, [sp, #108]
    2800:	cmp	w0, #0x1e
    2804:	cset	w0, gt
    2808:	orr	w24, w24, w0
    280c:	b	1640 <grub_video_reader_png+0x800>
    2810:	mov	w1, #0x8                   	// #8
    2814:	b	1ee0 <grub_video_reader_png+0x10a0>
    2818:	mov	x0, x22
    281c:	bl	300 <grub_png_get_byte>
    2820:	ldr	w2, [x20]
    2824:	and	w0, w0, #0xff
    2828:	mov	w1, #0x8                   	// #8
    282c:	stp	w1, w0, [x22, #16]
    2830:	cbz	w2, 2bdc <grub_video_reader_png+0x1d9c>
    2834:	mov	w0, #0x101                 	// #257
    2838:	mov	w24, #0x0                   	// #0
    283c:	str	w0, [sp, #144]
    2840:	mov	w0, #0x1                   	// #1
    2844:	str	w0, [sp, #108]
    2848:	ldr	w0, [x20]
    284c:	cbnz	w0, 1640 <grub_video_reader_png+0x800>
    2850:	cmp	w1, #0x4
    2854:	mov	w3, #0x4                   	// #4
    2858:	csel	w2, w1, w3, le
    285c:	ldr	w0, [x22, #20]
    2860:	subs	w26, w3, w2
    2864:	lsl	w25, w19, w2
    2868:	sub	w25, w25, #0x1
    286c:	and	w25, w25, w0
    2870:	b.eq	2d80 <grub_video_reader_png+0x1f40>  // b.none
    2874:	mov	w28, #0x0                   	// #0
    2878:	mov	w27, #0x8                   	// #8
    287c:	nop
    2880:	add	w28, w28, w2
    2884:	mov	x0, x22
    2888:	bl	300 <grub_png_get_byte>
    288c:	and	w0, w0, #0xff
    2890:	cmp	w26, #0x8
    2894:	ldr	w5, [x20]
    2898:	csel	w2, w26, w27, le
    289c:	stp	w27, w0, [x22, #16]
    28a0:	subs	w26, w26, w2
    28a4:	lsl	w1, w19, w2
    28a8:	sub	w1, w1, #0x1
    28ac:	and	w1, w1, w0
    28b0:	cbnz	w5, 1f34 <grub_video_reader_png+0x10f4>
    28b4:	lsl	w1, w1, w28
    28b8:	add	w25, w25, w1
    28bc:	b.ne	2880 <grub_video_reader_png+0x1a40>  // b.any
    28c0:	mov	w1, #0x8                   	// #8
    28c4:	b	1f28 <grub_video_reader_png+0x10e8>
    28c8:	mov	w7, #0xa                   	// #10
    28cc:	b	23f8 <grub_video_reader_png+0x15b8>
    28d0:	ldp	w1, w2, [x22, #28]
    28d4:	mul	w1, w1, w2
    28d8:	cbz	w1, 12f0 <grub_video_reader_png+0x4b0>
    28dc:	mov	w1, #0x0                   	// #0
    28e0:	ldrb	w0, [x23]
    28e4:	add	w1, w1, #0x1
    28e8:	add	x0, x0, x0, lsl #1
    28ec:	add	x0, x22, x0
    28f0:	ldrb	w0, [x0, #1618]
    28f4:	strb	w0, [x24, #2]
    28f8:	ldrb	w0, [x23]
    28fc:	add	x0, x0, x0, lsl #1
    2900:	add	x0, x22, x0
    2904:	ldrb	w0, [x0, #1617]
    2908:	strb	w0, [x24, #1]
    290c:	ldrb	w0, [x23], #1
    2910:	add	x0, x0, x0, lsl #1
    2914:	add	x0, x22, x0
    2918:	ldrb	w0, [x0, #1616]
    291c:	strb	w0, [x24], #3
    2920:	ldp	w0, w2, [x22, #28]
    2924:	mul	w0, w0, w2
    2928:	cmp	w1, w0
    292c:	b.cc	28e0 <grub_video_reader_png+0x1aa0>  // b.lo, b.ul, b.last
    2930:	b	1040 <grub_video_reader_png+0x200>
    2934:	str	w19, [x22, #56]
    2938:	cbnz	w2, 298c <grub_video_reader_png+0x1b4c>
    293c:	mov	w1, #0x1                   	// #1
    2940:	mov	w5, #0x0                   	// #0
    2944:	mov	w3, #0x4                   	// #4
    2948:	mov	w6, #0x2                   	// #2
    294c:	str	w19, [x22, #36]
    2950:	b	1360 <grub_video_reader_png+0x520>
    2954:	mov	x0, x22
    2958:	bl	300 <grub_png_get_byte>
    295c:	ldr	w1, [x20]
    2960:	and	w0, w0, #0xff
    2964:	stp	w24, w0, [x22, #16]
    2968:	cbnz	w1, 2a58 <grub_video_reader_png+0x1c18>
    296c:	and	w7, w0, #0x7
    2970:	mov	w2, #0x3                   	// #3
    2974:	mov	w10, #0x8                   	// #8
    2978:	sub	w10, w10, w2
    297c:	asr	w0, w0, w2
    2980:	add	w7, w7, #0x2
    2984:	stp	w10, w0, [x22, #16]
    2988:	b	23f8 <grub_video_reader_png+0x15b8>
    298c:	adrp	x1, 0 <grub_png_output_byte>
    2990:	mov	w0, #0x4                   	// #4
    2994:	ldr	x1, [x1]
    2998:	bl	0 <grub_error>
    299c:	b	10f8 <grub_video_reader_png+0x2b8>
    29a0:	ands	w5, w0, #0x4
    29a4:	mov	w3, #0x4                   	// #4
    29a8:	csel	w3, w19, w3, ne  // ne = any
    29ac:	cbnz	w1, 2948 <grub_video_reader_png+0x1b08>
    29b0:	b	134c <grub_video_reader_png+0x50c>
    29b4:	cmp	w3, #0x2
    29b8:	b.eq	2c54 <grub_video_reader_png+0x1e14>  // b.none
    29bc:	cmp	w3, #0x4
    29c0:	b.eq	2c04 <grub_video_reader_png+0x1dc4>  // b.none
    29c4:	cmp	w3, #0x1
    29c8:	b.ne	12f0 <grub_video_reader_png+0x4b0>  // b.any
    29cc:	ldp	w2, w3, [x22, #28]
    29d0:	mov	w1, #0x0                   	// #0
    29d4:	mul	w2, w2, w3
    29d8:	cbz	w2, 12f0 <grub_video_reader_png+0x4b0>
    29dc:	nop
    29e0:	ldrb	w0, [x23]
    29e4:	add	w1, w1, #0x1
    29e8:	strb	w0, [x24, #2]
    29ec:	ldrb	w0, [x23]
    29f0:	strb	w0, [x24, #1]
    29f4:	ldrb	w0, [x23], #1
    29f8:	strb	w0, [x24], #3
    29fc:	ldp	w0, w2, [x22, #28]
    2a00:	mul	w0, w0, w2
    2a04:	cmp	w1, w0
    2a08:	b.cc	29e0 <grub_video_reader_png+0x1ba0>  // b.lo, b.ul, b.last
    2a0c:	b	1040 <grub_video_reader_png+0x200>
    2a10:	str	w23, [x22, #64]
    2a14:	cmp	w23, #0x4
    2a18:	b.gt	2ba0 <grub_video_reader_png+0x1d60>
    2a1c:	mul	w0, w23, w0
    2a20:	add	w0, w0, #0x7
    2a24:	lsr	w0, w0, #3
    2a28:	str	w0, [x22, #60]
    2a2c:	ldr	w1, [x22, #48]
    2a30:	cbnz	w1, 13cc <grub_video_reader_png+0x58c>
    2a34:	ldr	w1, [x22, #56]
    2a38:	cbnz	w1, 13cc <grub_video_reader_png+0x58c>
    2a3c:	ldr	x0, [x22, #8]
    2a40:	add	x2, x22, #0x8, lsl #12
    2a44:	ldr	x0, [x0]
    2a48:	ldr	x0, [x0, #80]
    2a4c:	str	xzr, [x22, #72]
    2a50:	str	x0, [x2, #2456]
    2a54:	b	13ec <grub_video_reader_png+0x5ac>
    2a58:	mov	w7, #0x2                   	// #2
    2a5c:	b	23f8 <grub_video_reader_png+0x15b8>
    2a60:	mov	w1, #0x0                   	// #0
    2a64:	mov	w6, #0x2                   	// #2
    2a68:	str	w19, [x22, #36]
    2a6c:	str	w19, [x22, #48]
    2a70:	b	1360 <grub_video_reader_png+0x520>
    2a74:	cbz	w10, 2ca0 <grub_video_reader_png+0x1e60>
    2a78:	ldr	w0, [x20]
    2a7c:	cbnz	w0, 2cb8 <grub_video_reader_png+0x1e78>
    2a80:	cmp	w10, #0x2
    2a84:	mov	w1, #0x2                   	// #2
    2a88:	csel	w2, w10, w1, le
    2a8c:	ldr	w0, [x22, #20]
    2a90:	subs	w6, w1, w2
    2a94:	lsl	w8, w19, w2
    2a98:	sub	w8, w8, #0x1
    2a9c:	and	w8, w8, w0
    2aa0:	b.eq	2d88 <grub_video_reader_png+0x1f48>  // b.none
    2aa4:	mov	w7, #0x0                   	// #0
    2aa8:	b	2ab8 <grub_video_reader_png+0x1c78>
    2aac:	lsl	w1, w1, w7
    2ab0:	add	w8, w8, w1
    2ab4:	b.eq	2bb4 <grub_video_reader_png+0x1d74>  // b.none
    2ab8:	add	w7, w7, w2
    2abc:	mov	x0, x22
    2ac0:	str	w7, [sp, #96]
    2ac4:	stp	w8, w6, [sp, #104]
    2ac8:	str	w7, [sp, #120]
    2acc:	bl	300 <grub_png_get_byte>
    2ad0:	ldp	w8, w6, [sp, #104]
    2ad4:	and	w0, w0, #0xff
    2ad8:	ldr	w9, [x20]
    2adc:	cmp	w6, #0x8
    2ae0:	stp	w24, w0, [x22, #16]
    2ae4:	csel	w2, w6, w24, le
    2ae8:	ldr	w7, [sp, #96]
    2aec:	subs	w6, w6, w2
    2af0:	lsl	w1, w19, w2
    2af4:	sub	w1, w1, #0x1
    2af8:	and	w1, w1, w0
    2afc:	cbz	w9, 2aac <grub_video_reader_png+0x1c6c>
    2b00:	add	w0, w8, #0x3
    2b04:	mov	w26, w0
    2b08:	cmp	w0, #0x0
    2b0c:	b.le	2260 <grub_video_reader_png+0x1420>
    2b10:	ldr	w0, [sp, #152]
    2b14:	cbz	w0, 2b54 <grub_video_reader_png+0x1d14>
    2b18:	ldr	w6, [sp, #148]
    2b1c:	add	w0, w6, w26
    2b20:	mov	w25, w0
    2b24:	nop
    2b28:	ldr	w2, [sp, #152]
    2b2c:	mov	w1, w6
    2b30:	ldr	x0, [sp, #136]
    2b34:	add	w6, w6, #0x1
    2b38:	str	w6, [sp, #96]
    2b3c:	str	w6, [sp, #104]
    2b40:	bl	450 <grub_png_insert_huff_item.part.0>
    2b44:	ldr	w6, [sp, #96]
    2b48:	sub	w0, w25, w6
    2b4c:	cmp	w0, #0x0
    2b50:	b.gt	2b28 <grub_video_reader_png+0x1ce8>
    2b54:	ldr	w0, [sp, #124]
    2b58:	add	w0, w0, w26
    2b5c:	str	w0, [sp, #124]
    2b60:	b	2260 <grub_video_reader_png+0x1420>
    2b64:	mov	w2, #0x3                   	// #3
    2b68:	add	x0, sp, #0x120
    2b6c:	lsl	w2, w2, w1
    2b70:	add	x1, x22, #0x650
    2b74:	sxtw	x2, w2
    2b78:	bl	0 <grub_memmove>
    2b7c:	b	26c0 <grub_video_reader_png+0x1880>
    2b80:	adrp	x1, 0 <grub_png_output_byte>
    2b84:	mov	w0, #0x4                   	// #4
    2b88:	ldr	x1, [x1]
    2b8c:	bl	0 <grub_error>
    2b90:	b	10f8 <grub_video_reader_png+0x2b8>
    2b94:	mul	w0, w1, w0
    2b98:	str	w0, [x22, #60]
    2b9c:	b	13cc <grub_video_reader_png+0x58c>
    2ba0:	mul	w0, w1, w0
    2ba4:	str	w0, [x22, #60]
    2ba8:	b	2a2c <grub_video_reader_png+0x1bec>
    2bac:	and	w8, w0, #0x3
    2bb0:	mov	w2, #0x2                   	// #2
    2bb4:	mov	w10, #0x8                   	// #8
    2bb8:	sub	w10, w10, w2
    2bbc:	asr	w0, w0, w2
    2bc0:	stp	w10, w0, [x22, #16]
    2bc4:	b	2b00 <grub_video_reader_png+0x1cc0>
    2bc8:	adrp	x1, 0 <grub_png_output_byte>
    2bcc:	mov	w0, #0x4                   	// #4
    2bd0:	ldr	x1, [x1]
    2bd4:	bl	0 <grub_error>
    2bd8:	b	10f8 <grub_video_reader_png+0x2b8>
    2bdc:	and	w27, w0, #0x1f
    2be0:	mov	w2, #0x3                   	// #3
    2be4:	add	w1, w27, #0x101
    2be8:	asr	w0, w0, #5
    2bec:	cmp	w1, #0x120
    2bf0:	stp	w2, w0, [x22, #16]
    2bf4:	cset	w24, gt
    2bf8:	str	w1, [sp, #144]
    2bfc:	mov	w1, w2
    2c00:	b	2780 <grub_video_reader_png+0x1940>
    2c04:	ldp	w3, w2, [x22, #28]
    2c08:	mov	w1, #0x0                   	// #0
    2c0c:	mul	w2, w2, w3
    2c10:	cbz	w2, 12f0 <grub_video_reader_png+0x4b0>
    2c14:	nop
    2c18:	ldrb	w0, [x23, #3]
    2c1c:	add	w1, w1, #0x1
    2c20:	strb	w0, [x24, #3]
    2c24:	add	x23, x23, #0x4
    2c28:	ldurb	w0, [x23, #-1]
    2c2c:	strb	w0, [x24, #2]
    2c30:	ldurb	w0, [x23, #-1]
    2c34:	strb	w0, [x24, #1]
    2c38:	ldurb	w0, [x23, #-3]
    2c3c:	strb	w0, [x24], #4
    2c40:	ldp	w0, w2, [x22, #28]
    2c44:	mul	w0, w0, w2
    2c48:	cmp	w1, w0
    2c4c:	b.cc	2c18 <grub_video_reader_png+0x1dd8>  // b.lo, b.ul, b.last
    2c50:	b	1040 <grub_video_reader_png+0x200>
    2c54:	ldp	w1, w3, [x22, #28]
    2c58:	mul	w3, w3, w1
    2c5c:	cbnz	w2, 2d1c <grub_video_reader_png+0x1edc>
    2c60:	mov	w1, #0x0                   	// #0
    2c64:	cbz	w3, 12f0 <grub_video_reader_png+0x4b0>
    2c68:	ldrb	w0, [x23, #1]
    2c6c:	add	w1, w1, #0x1
    2c70:	strb	w0, [x24, #3]
    2c74:	ldrb	w0, [x23, #1]
    2c78:	strb	w0, [x24, #2]
    2c7c:	ldrb	w0, [x23, #1]
    2c80:	strb	w0, [x24, #1]
    2c84:	ldrb	w0, [x23], #2
    2c88:	strb	w0, [x24], #4
    2c8c:	ldp	w0, w2, [x22, #28]
    2c90:	mul	w0, w0, w2
    2c94:	cmp	w1, w0
    2c98:	b.cc	2c68 <grub_video_reader_png+0x1e28>  // b.lo, b.ul, b.last
    2c9c:	b	1040 <grub_video_reader_png+0x200>
    2ca0:	mov	x0, x22
    2ca4:	bl	300 <grub_png_get_byte>
    2ca8:	ldr	w1, [x20]
    2cac:	and	w0, w0, #0xff
    2cb0:	stp	w24, w0, [x22, #16]
    2cb4:	cbz	w1, 2bac <grub_video_reader_png+0x1d6c>
    2cb8:	mov	w0, #0x3                   	// #3
    2cbc:	mov	w26, w0
    2cc0:	b	2b10 <grub_video_reader_png+0x1cd0>
    2cc4:	add	x0, sp, #0xa8
    2cc8:	str	x0, [sp, #96]
    2ccc:	str	wzr, [sp, #104]
    2cd0:	b	2044 <grub_video_reader_png+0x1204>
    2cd4:	adrp	x1, 0 <grub_png_output_byte>
    2cd8:	mov	w0, #0x4                   	// #4
    2cdc:	ldr	x1, [x1]
    2ce0:	bl	0 <grub_error>
    2ce4:	b	10f8 <grub_video_reader_png+0x2b8>
    2ce8:	mov	w4, #0x4                   	// #4
    2cec:	add	x5, sp, #0x100
    2cf0:	str	w4, [sp, #104]
    2cf4:	add	x4, sp, #0x120
    2cf8:	mov	x3, #0x800000000           	// #34359738368
    2cfc:	add	x0, sp, #0xe0
    2d00:	mov	x2, #0x20                  	// #32
    2d04:	mov	w1, #0x0                   	// #0
    2d08:	str	x4, [sp, #192]
    2d0c:	str	x0, [sp, #200]
    2d10:	stp	x5, x3, [sp, #208]
    2d14:	bl	0 <grub_memset>
    2d18:	b	1f7c <grub_video_reader_png+0x113c>
    2d1c:	cbz	w3, 12f0 <grub_video_reader_png+0x4b0>
    2d20:	mov	w1, #0x0                   	// #0
    2d24:	ldrb	w0, [x23, #1]
    2d28:	add	w1, w1, #0x1
    2d2c:	strb	w0, [x24, #2]
    2d30:	add	x23, x23, #0x2
    2d34:	ldurb	w0, [x23, #-1]
    2d38:	strb	w0, [x24, #1]
    2d3c:	ldurb	w0, [x23, #-1]
    2d40:	strb	w0, [x24], #4
    2d44:	ldp	w0, w2, [x22, #28]
    2d48:	mul	w0, w0, w2
    2d4c:	cmp	w1, w0
    2d50:	b.cc	2d24 <grub_video_reader_png+0x1ee4>  // b.lo, b.ul, b.last
    2d54:	b	1040 <grub_video_reader_png+0x200>
    2d58:	mov	w2, w1
    2d5c:	b	253c <grub_video_reader_png+0x16fc>
    2d60:	mov	w1, #0x1                   	// #1
    2d64:	b	232c <grub_video_reader_png+0x14ec>
    2d68:	mov	w2, w3
    2d6c:	b	14b0 <grub_video_reader_png+0x670>
    2d70:	mov	w2, #0x1                   	// #1
    2d74:	b	147c <grub_video_reader_png+0x63c>
    2d78:	mov	w2, w3
    2d7c:	b	1ee0 <grub_video_reader_png+0x10a0>
    2d80:	mov	w2, w3
    2d84:	b	1f28 <grub_video_reader_png+0x10e8>
    2d88:	mov	w2, w1
    2d8c:	b	2bb8 <grub_video_reader_png+0x1d78>
    2d90:	mov	w2, w3
    2d94:	b	1e98 <grub_video_reader_png+0x1058>
    2d98:	ldr	w0, [x22, #20]
    2d9c:	mov	w1, #0x1                   	// #1
    2da0:	mov	w2, #0x4                   	// #4
    2da4:	str	w1, [sp, #108]
    2da8:	and	w25, w0, #0xf
    2dac:	mov	w1, #0x8                   	// #8
    2db0:	b	1f28 <grub_video_reader_png+0x10e8>
    2db4:	mov	w2, w1
    2db8:	b	2978 <grub_video_reader_png+0x1b38>
    2dbc:	str	wzr, [sp, #152]
    2dc0:	b	2260 <grub_video_reader_png+0x1420>
    2dc4:	mov	w2, #0x3                   	// #3
    2dc8:	b	242c <grub_video_reader_png+0x15ec>
    2dcc:	mov	w6, #0x0                   	// #0
    2dd0:	b	2014 <grub_video_reader_png+0x11d4>
    2dd4:	nop
	...

0000000000002e58 <grub_mod_init>:
    2e58:	adrp	x0, 0 <grub_png_output_byte>
    2e5c:	ldr	x0, [x0]
    2e60:	b	0 <grub_video_bitmap_reader_register>
    2e64:	nop
	...

0000000000002e70 <grub_mod_fini>:
    2e70:	adrp	x0, 0 <grub_png_output_byte>
    2e74:	ldr	x0, [x0]
    2e78:	b	0 <grub_video_bitmap_reader_unregister>
    2e7c:	nop
	...
