
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004027d0 <.init>:
  4027d0:	stp	x29, x30, [sp, #-16]!
  4027d4:	mov	x29, sp
  4027d8:	bl	404f3c <ferror@plt+0x1fbc>
  4027dc:	ldp	x29, x30, [sp], #16
  4027e0:	ret

Disassembly of section .plt:

00000000004027f0 <mbrtowc@plt-0x20>:
  4027f0:	stp	x16, x30, [sp, #-16]!
  4027f4:	adrp	x16, 425000 <_obstack_memory_used@@Base+0x15920>
  4027f8:	ldr	x17, [x16, #4088]
  4027fc:	add	x16, x16, #0xff8
  402800:	br	x17
  402804:	nop
  402808:	nop
  40280c:	nop

0000000000402810 <mbrtowc@plt>:
  402810:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16]
  402818:	add	x16, x16, #0x0
  40281c:	br	x17

0000000000402820 <memcpy@plt>:
  402820:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #8]
  402828:	add	x16, x16, #0x8
  40282c:	br	x17

0000000000402830 <memmove@plt>:
  402830:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #16]
  402838:	add	x16, x16, #0x10
  40283c:	br	x17

0000000000402840 <pthread_sigmask@plt>:
  402840:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #24]
  402848:	add	x16, x16, #0x18
  40284c:	br	x17

0000000000402850 <_exit@plt>:
  402850:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #32]
  402858:	add	x16, x16, #0x20
  40285c:	br	x17

0000000000402860 <fwrite_unlocked@plt>:
  402860:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #40]
  402868:	add	x16, x16, #0x28
  40286c:	br	x17

0000000000402870 <strtoul@plt>:
  402870:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #48]
  402878:	add	x16, x16, #0x30
  40287c:	br	x17

0000000000402880 <strlen@plt>:
  402880:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #56]
  402888:	add	x16, x16, #0x38
  40288c:	br	x17

0000000000402890 <fputs@plt>:
  402890:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #64]
  402898:	add	x16, x16, #0x40
  40289c:	br	x17

00000000004028a0 <exit@plt>:
  4028a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #72]
  4028a8:	add	x16, x16, #0x48
  4028ac:	br	x17

00000000004028b0 <raise@plt>:
  4028b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #80]
  4028b8:	add	x16, x16, #0x50
  4028bc:	br	x17

00000000004028c0 <error@plt>:
  4028c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #88]
  4028c8:	add	x16, x16, #0x58
  4028cc:	br	x17

00000000004028d0 <sysinfo@plt>:
  4028d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #96]
  4028d8:	add	x16, x16, #0x60
  4028dc:	br	x17

00000000004028e0 <ferror_unlocked@plt>:
  4028e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #104]
  4028e8:	add	x16, x16, #0x68
  4028ec:	br	x17

00000000004028f0 <getuid@plt>:
  4028f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #112]
  4028f8:	add	x16, x16, #0x70
  4028fc:	br	x17

0000000000402900 <pipe@plt>:
  402900:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #120]
  402908:	add	x16, x16, #0x78
  40290c:	br	x17

0000000000402910 <__cxa_atexit@plt>:
  402910:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #128]
  402918:	add	x16, x16, #0x80
  40291c:	br	x17

0000000000402920 <iswcntrl@plt>:
  402920:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #136]
  402928:	add	x16, x16, #0x88
  40292c:	br	x17

0000000000402930 <qsort@plt>:
  402930:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #144]
  402938:	add	x16, x16, #0x90
  40293c:	br	x17

0000000000402940 <setvbuf@plt>:
  402940:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #152]
  402948:	add	x16, x16, #0x98
  40294c:	br	x17

0000000000402950 <euidaccess@plt>:
  402950:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #160]
  402958:	add	x16, x16, #0xa0
  40295c:	br	x17

0000000000402960 <fork@plt>:
  402960:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #168]
  402968:	add	x16, x16, #0xa8
  40296c:	br	x17

0000000000402970 <lseek@plt>:
  402970:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #176]
  402978:	add	x16, x16, #0xb0
  40297c:	br	x17

0000000000402980 <__fpending@plt>:
  402980:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #184]
  402988:	add	x16, x16, #0xb8
  40298c:	br	x17

0000000000402990 <localeconv@plt>:
  402990:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #192]
  402998:	add	x16, x16, #0xc0
  40299c:	br	x17

00000000004029a0 <stpcpy@plt>:
  4029a0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #200]
  4029a8:	add	x16, x16, #0xc8
  4029ac:	br	x17

00000000004029b0 <fileno@plt>:
  4029b0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #208]
  4029b8:	add	x16, x16, #0xd0
  4029bc:	br	x17

00000000004029c0 <putc_unlocked@plt>:
  4029c0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #216]
  4029c8:	add	x16, x16, #0xd8
  4029cc:	br	x17

00000000004029d0 <signal@plt>:
  4029d0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #224]
  4029d8:	add	x16, x16, #0xe0
  4029dc:	br	x17

00000000004029e0 <fclose@plt>:
  4029e0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #232]
  4029e8:	add	x16, x16, #0xe8
  4029ec:	br	x17

00000000004029f0 <getpid@plt>:
  4029f0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #240]
  4029f8:	add	x16, x16, #0xf0
  4029fc:	br	x17

0000000000402a00 <nl_langinfo@plt>:
  402a00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #248]
  402a08:	add	x16, x16, #0xf8
  402a0c:	br	x17

0000000000402a10 <fopen@plt>:
  402a10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #256]
  402a18:	add	x16, x16, #0x100
  402a1c:	br	x17

0000000000402a20 <malloc@plt>:
  402a20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #264]
  402a28:	add	x16, x16, #0x108
  402a2c:	br	x17

0000000000402a30 <toupper@plt>:
  402a30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #272]
  402a38:	add	x16, x16, #0x110
  402a3c:	br	x17

0000000000402a40 <wcwidth@plt>:
  402a40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #280]
  402a48:	add	x16, x16, #0x118
  402a4c:	br	x17

0000000000402a50 <open@plt>:
  402a50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #288]
  402a58:	add	x16, x16, #0x120
  402a5c:	br	x17

0000000000402a60 <getppid@plt>:
  402a60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #296]
  402a68:	add	x16, x16, #0x128
  402a6c:	br	x17

0000000000402a70 <sigemptyset@plt>:
  402a70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #304]
  402a78:	add	x16, x16, #0x130
  402a7c:	br	x17

0000000000402a80 <pthread_cond_signal@plt>:
  402a80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #312]
  402a88:	add	x16, x16, #0x138
  402a8c:	br	x17

0000000000402a90 <strncmp@plt>:
  402a90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #320]
  402a98:	add	x16, x16, #0x140
  402a9c:	br	x17

0000000000402aa0 <bindtextdomain@plt>:
  402aa0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #328]
  402aa8:	add	x16, x16, #0x148
  402aac:	br	x17

0000000000402ab0 <__libc_start_main@plt>:
  402ab0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #336]
  402ab8:	add	x16, x16, #0x150
  402abc:	br	x17

0000000000402ac0 <fgetc@plt>:
  402ac0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #344]
  402ac8:	add	x16, x16, #0x158
  402acc:	br	x17

0000000000402ad0 <__printf_chk@plt>:
  402ad0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #352]
  402ad8:	add	x16, x16, #0x160
  402adc:	br	x17

0000000000402ae0 <memset@plt>:
  402ae0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #360]
  402ae8:	add	x16, x16, #0x168
  402aec:	br	x17

0000000000402af0 <fdopen@plt>:
  402af0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #368]
  402af8:	add	x16, x16, #0x170
  402afc:	br	x17

0000000000402b00 <gettimeofday@plt>:
  402b00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #376]
  402b08:	add	x16, x16, #0x178
  402b0c:	br	x17

0000000000402b10 <putchar_unlocked@plt>:
  402b10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #384]
  402b18:	add	x16, x16, #0x180
  402b1c:	br	x17

0000000000402b20 <calloc@plt>:
  402b20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #392]
  402b28:	add	x16, x16, #0x188
  402b2c:	br	x17

0000000000402b30 <realloc@plt>:
  402b30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #400]
  402b38:	add	x16, x16, #0x190
  402b3c:	br	x17

0000000000402b40 <pthread_mutex_init@plt>:
  402b40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #408]
  402b48:	add	x16, x16, #0x198
  402b4c:	br	x17

0000000000402b50 <close@plt>:
  402b50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #416]
  402b58:	add	x16, x16, #0x1a0
  402b5c:	br	x17

0000000000402b60 <sigaction@plt>:
  402b60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #424]
  402b68:	add	x16, x16, #0x1a8
  402b6c:	br	x17

0000000000402b70 <strrchr@plt>:
  402b70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #432]
  402b78:	add	x16, x16, #0x1b0
  402b7c:	br	x17

0000000000402b80 <pthread_create@plt>:
  402b80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #440]
  402b88:	add	x16, x16, #0x1b8
  402b8c:	br	x17

0000000000402b90 <__gmon_start__@plt>:
  402b90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #448]
  402b98:	add	x16, x16, #0x1c0
  402b9c:	br	x17

0000000000402ba0 <write@plt>:
  402ba0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #456]
  402ba8:	add	x16, x16, #0x1c8
  402bac:	br	x17

0000000000402bb0 <strtoumax@plt>:
  402bb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #464]
  402bb8:	add	x16, x16, #0x1d0
  402bbc:	br	x17

0000000000402bc0 <pthread_join@plt>:
  402bc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #472]
  402bc8:	add	x16, x16, #0x1d8
  402bcc:	br	x17

0000000000402bd0 <abort@plt>:
  402bd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #480]
  402bd8:	add	x16, x16, #0x1e0
  402bdc:	br	x17

0000000000402be0 <mkostemp@plt>:
  402be0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #488]
  402be8:	add	x16, x16, #0x1e8
  402bec:	br	x17

0000000000402bf0 <sched_getaffinity@plt>:
  402bf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #496]
  402bf8:	add	x16, x16, #0x1f0
  402bfc:	br	x17

0000000000402c00 <posix_fadvise@plt>:
  402c00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #504]
  402c08:	add	x16, x16, #0x1f8
  402c0c:	br	x17

0000000000402c10 <mbsinit@plt>:
  402c10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #512]
  402c18:	add	x16, x16, #0x200
  402c1c:	br	x17

0000000000402c20 <pipe2@plt>:
  402c20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #520]
  402c28:	add	x16, x16, #0x208
  402c2c:	br	x17

0000000000402c30 <fread_unlocked@plt>:
  402c30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #528]
  402c38:	add	x16, x16, #0x210
  402c3c:	br	x17

0000000000402c40 <memcmp@plt>:
  402c40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #536]
  402c48:	add	x16, x16, #0x218
  402c4c:	br	x17

0000000000402c50 <textdomain@plt>:
  402c50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #544]
  402c58:	add	x16, x16, #0x220
  402c5c:	br	x17

0000000000402c60 <getopt_long@plt>:
  402c60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #552]
  402c68:	add	x16, x16, #0x228
  402c6c:	br	x17

0000000000402c70 <__fprintf_chk@plt>:
  402c70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #560]
  402c78:	add	x16, x16, #0x230
  402c7c:	br	x17

0000000000402c80 <sigismember@plt>:
  402c80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #568]
  402c88:	add	x16, x16, #0x238
  402c8c:	br	x17

0000000000402c90 <strcmp@plt>:
  402c90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #576]
  402c98:	add	x16, x16, #0x240
  402c9c:	br	x17

0000000000402ca0 <__ctype_b_loc@plt>:
  402ca0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #584]
  402ca8:	add	x16, x16, #0x248
  402cac:	br	x17

0000000000402cb0 <strtol@plt>:
  402cb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #592]
  402cb8:	add	x16, x16, #0x250
  402cbc:	br	x17

0000000000402cc0 <fseeko@plt>:
  402cc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #600]
  402cc8:	add	x16, x16, #0x258
  402ccc:	br	x17

0000000000402cd0 <strtold@plt>:
  402cd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #608]
  402cd8:	add	x16, x16, #0x260
  402cdc:	br	x17

0000000000402ce0 <free@plt>:
  402ce0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #616]
  402ce8:	add	x16, x16, #0x268
  402cec:	br	x17

0000000000402cf0 <__ctype_get_mb_cur_max@plt>:
  402cf0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #624]
  402cf8:	add	x16, x16, #0x270
  402cfc:	br	x17

0000000000402d00 <getgid@plt>:
  402d00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #632]
  402d08:	add	x16, x16, #0x278
  402d0c:	br	x17

0000000000402d10 <pthread_cond_wait@plt>:
  402d10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #640]
  402d18:	add	x16, x16, #0x280
  402d1c:	br	x17

0000000000402d20 <nanosleep@plt>:
  402d20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #648]
  402d28:	add	x16, x16, #0x288
  402d2c:	br	x17

0000000000402d30 <strchr@plt>:
  402d30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #656]
  402d38:	add	x16, x16, #0x290
  402d3c:	br	x17

0000000000402d40 <feof_unlocked@plt>:
  402d40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #664]
  402d48:	add	x16, x16, #0x298
  402d4c:	br	x17

0000000000402d50 <__read_chk@plt>:
  402d50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #672]
  402d58:	add	x16, x16, #0x2a0
  402d5c:	br	x17

0000000000402d60 <fflush_unlocked@plt>:
  402d60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #680]
  402d68:	add	x16, x16, #0x2a8
  402d6c:	br	x17

0000000000402d70 <__sched_cpucount@plt>:
  402d70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #688]
  402d78:	add	x16, x16, #0x2b0
  402d7c:	br	x17

0000000000402d80 <fcntl@plt>:
  402d80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #696]
  402d88:	add	x16, x16, #0x2b8
  402d8c:	br	x17

0000000000402d90 <strxfrm@plt>:
  402d90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #704]
  402d98:	add	x16, x16, #0x2c0
  402d9c:	br	x17

0000000000402da0 <dcngettext@plt>:
  402da0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #712]
  402da8:	add	x16, x16, #0x2c8
  402dac:	br	x17

0000000000402db0 <fflush@plt>:
  402db0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #720]
  402db8:	add	x16, x16, #0x2d0
  402dbc:	br	x17

0000000000402dc0 <strcpy@plt>:
  402dc0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #728]
  402dc8:	add	x16, x16, #0x2d8
  402dcc:	br	x17

0000000000402dd0 <pthread_cond_init@plt>:
  402dd0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #736]
  402dd8:	add	x16, x16, #0x2e0
  402ddc:	br	x17

0000000000402de0 <getrlimit@plt>:
  402de0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #744]
  402de8:	add	x16, x16, #0x2e8
  402dec:	br	x17

0000000000402df0 <clearerr_unlocked@plt>:
  402df0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #752]
  402df8:	add	x16, x16, #0x2f0
  402dfc:	br	x17

0000000000402e00 <__explicit_bzero_chk@plt>:
  402e00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #760]
  402e08:	add	x16, x16, #0x2f8
  402e0c:	br	x17

0000000000402e10 <memchr@plt>:
  402e10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #768]
  402e18:	add	x16, x16, #0x300
  402e1c:	br	x17

0000000000402e20 <mkstemp@plt>:
  402e20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #776]
  402e28:	add	x16, x16, #0x308
  402e2c:	br	x17

0000000000402e30 <sysconf@plt>:
  402e30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #784]
  402e38:	add	x16, x16, #0x310
  402e3c:	br	x17

0000000000402e40 <fputc_unlocked@plt>:
  402e40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #792]
  402e48:	add	x16, x16, #0x318
  402e4c:	br	x17

0000000000402e50 <__fxstat@plt>:
  402e50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #800]
  402e58:	add	x16, x16, #0x320
  402e5c:	br	x17

0000000000402e60 <dcgettext@plt>:
  402e60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #808]
  402e68:	add	x16, x16, #0x328
  402e6c:	br	x17

0000000000402e70 <fputs_unlocked@plt>:
  402e70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #816]
  402e78:	add	x16, x16, #0x330
  402e7c:	br	x17

0000000000402e80 <strcoll@plt>:
  402e80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #824]
  402e88:	add	x16, x16, #0x338
  402e8c:	br	x17

0000000000402e90 <__freading@plt>:
  402e90:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #832]
  402e98:	add	x16, x16, #0x340
  402e9c:	br	x17

0000000000402ea0 <ftruncate@plt>:
  402ea0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ea4:	ldr	x17, [x16, #840]
  402ea8:	add	x16, x16, #0x348
  402eac:	br	x17

0000000000402eb0 <dup2@plt>:
  402eb0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402eb4:	ldr	x17, [x16, #848]
  402eb8:	add	x16, x16, #0x350
  402ebc:	br	x17

0000000000402ec0 <sigaddset@plt>:
  402ec0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ec4:	ldr	x17, [x16, #856]
  402ec8:	add	x16, x16, #0x358
  402ecc:	br	x17

0000000000402ed0 <iswprint@plt>:
  402ed0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ed4:	ldr	x17, [x16, #864]
  402ed8:	add	x16, x16, #0x360
  402edc:	br	x17

0000000000402ee0 <__assert_fail@plt>:
  402ee0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ee4:	ldr	x17, [x16, #872]
  402ee8:	add	x16, x16, #0x368
  402eec:	br	x17

0000000000402ef0 <__errno_location@plt>:
  402ef0:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402ef4:	ldr	x17, [x16, #880]
  402ef8:	add	x16, x16, #0x370
  402efc:	br	x17

0000000000402f00 <execlp@plt>:
  402f00:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f04:	ldr	x17, [x16, #888]
  402f08:	add	x16, x16, #0x378
  402f0c:	br	x17

0000000000402f10 <getenv@plt>:
  402f10:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f14:	ldr	x17, [x16, #896]
  402f18:	add	x16, x16, #0x380
  402f1c:	br	x17

0000000000402f20 <__xstat@plt>:
  402f20:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f24:	ldr	x17, [x16, #904]
  402f28:	add	x16, x16, #0x388
  402f2c:	br	x17

0000000000402f30 <pthread_mutex_lock@plt>:
  402f30:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f34:	ldr	x17, [x16, #912]
  402f38:	add	x16, x16, #0x390
  402f3c:	br	x17

0000000000402f40 <pthread_mutex_unlock@plt>:
  402f40:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f44:	ldr	x17, [x16, #920]
  402f48:	add	x16, x16, #0x398
  402f4c:	br	x17

0000000000402f50 <waitpid@plt>:
  402f50:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f54:	ldr	x17, [x16, #928]
  402f58:	add	x16, x16, #0x3a0
  402f5c:	br	x17

0000000000402f60 <unlink@plt>:
  402f60:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f64:	ldr	x17, [x16, #936]
  402f68:	add	x16, x16, #0x3a8
  402f6c:	br	x17

0000000000402f70 <setlocale@plt>:
  402f70:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f74:	ldr	x17, [x16, #944]
  402f78:	add	x16, x16, #0x3b0
  402f7c:	br	x17

0000000000402f80 <ferror@plt>:
  402f80:	adrp	x16, 426000 <mbrtowc@GLIBC_2.17>
  402f84:	ldr	x17, [x16, #952]
  402f88:	add	x16, x16, #0x3b8
  402f8c:	br	x17

Disassembly of section .text:

0000000000402f90 <_obstack_begin@@Base-0xc570>:
  402f90:	sub	sp, sp, #0x390
  402f94:	stp	x29, x30, [sp]
  402f98:	mov	x29, sp
  402f9c:	stp	x19, x20, [sp, #16]
  402fa0:	adrp	x19, 411000 <_obstack_memory_used@@Base+0x1920>
  402fa4:	add	x19, x19, #0x403
  402fa8:	stp	x21, x22, [sp, #32]
  402fac:	mov	w21, #0x2                   	// #2
  402fb0:	stp	x23, x24, [sp, #48]
  402fb4:	stp	x25, x26, [sp, #64]
  402fb8:	stp	x27, x28, [sp, #80]
  402fbc:	str	d8, [sp, #96]
  402fc0:	str	x1, [sp, #144]
  402fc4:	str	w0, [sp, #152]
  402fc8:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  402fcc:	add	x0, x0, #0x4a6
  402fd0:	bl	402f10 <getenv@plt>
  402fd4:	cmp	x0, #0x0
  402fd8:	str	x0, [sp, #184]
  402fdc:	cset	w0, ne  // ne = any
  402fe0:	str	w0, [sp, #216]
  402fe4:	bl	40b930 <ferror@plt+0x89b0>
  402fe8:	sub	w0, w0, #0x30, lsl #12
  402fec:	sub	w0, w0, #0xdb0
  402ff0:	cmp	w0, #0x2b8
  402ff4:	cset	w0, hi  // hi = pmore
  402ff8:	str	w0, [sp, #168]
  402ffc:	ldr	x0, [sp, #144]
  403000:	ldr	x0, [x0]
  403004:	bl	40b998 <ferror@plt+0x8a18>
  403008:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40300c:	add	x0, x0, #0x701
  403010:	mov	x1, x0
  403014:	str	x0, [sp, #176]
  403018:	mov	w0, #0x6                   	// #6
  40301c:	bl	402f70 <setlocale@plt>
  403020:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403024:	add	x1, x1, #0x4b6
  403028:	str	x0, [sp, #192]
  40302c:	mov	x0, x19
  403030:	bl	402aa0 <bindtextdomain@plt>
  403034:	mov	x0, x19
  403038:	bl	402c50 <textdomain@plt>
  40303c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403040:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  403044:	add	x20, x19, #0x580
  403048:	str	w21, [x0, #1240]
  40304c:	mov	w0, #0x3                   	// #3
  403050:	bl	40a2b0 <ferror@plt+0x7330>
  403054:	strb	w0, [x20, #1339]
  403058:	mov	w0, w21
  40305c:	bl	40a2b0 <ferror@plt+0x7330>
  403060:	and	w21, w0, #0xff
  403064:	strb	w0, [x20, #1568]
  403068:	bl	402990 <localeconv@plt>
  40306c:	ldr	x1, [x0]
  403070:	str	x19, [sp, #200]
  403074:	ldrb	w2, [x1]
  403078:	str	w2, [x20, #284]
  40307c:	cbz	w2, 403088 <ferror@plt+0x108>
  403080:	ldrb	w1, [x1, #1]
  403084:	cbz	w1, 403090 <ferror@plt+0x110>
  403088:	mov	w1, #0x2e                  	// #46
  40308c:	str	w1, [x20, #284]
  403090:	ldr	x0, [x0, #8]
  403094:	ldrb	w1, [x0]
  403098:	str	w1, [x20, #280]
  40309c:	cbz	w1, 4030a8 <ferror@plt+0x128>
  4030a0:	ldrb	w0, [x0, #1]
  4030a4:	cbz	w0, 4030b0 <ferror@plt+0x130>
  4030a8:	mov	w0, #0xffffffff            	// #-1
  4030ac:	str	w0, [x20, #280]
  4030b0:	add	x24, x20, #0x18
  4030b4:	add	x25, x20, #0x320
  4030b8:	add	x23, x20, #0x220
  4030bc:	add	x22, x20, #0x120
  4030c0:	strb	wzr, [x20, #1516]
  4030c4:	bl	402ca0 <__ctype_b_loc@plt>
  4030c8:	mov	x19, x0
  4030cc:	mov	x26, #0x0                   	// #0
  4030d0:	and	w27, w26, #0xff
  4030d4:	mov	w28, w26
  4030d8:	mov	w0, w27
  4030dc:	bl	4057d0 <ferror@plt+0x2850>
  4030e0:	strb	w0, [x24, x26]
  4030e4:	ldr	x0, [x19]
  4030e8:	ldrh	w1, [x0, x26, lsl #1]
  4030ec:	eor	x0, x1, #0x4000
  4030f0:	ubfx	x0, x0, #14, #1
  4030f4:	strb	w0, [x26, x25]
  4030f8:	tbnz	w1, #3, 403314 <ferror@plt+0x394>
  4030fc:	mov	w0, w27
  403100:	bl	4057d0 <ferror@plt+0x2850>
  403104:	and	w0, w0, #0xff
  403108:	eor	w0, w0, #0x1
  40310c:	and	w0, w0, #0x1
  403110:	strb	w0, [x26, x23]
  403114:	mov	w0, w28
  403118:	bl	402a30 <toupper@plt>
  40311c:	strb	w0, [x22, x26]
  403120:	add	x26, x26, #0x1
  403124:	cmp	x26, #0x100
  403128:	b.ne	4030d0 <ferror@plt+0x150>  // b.any
  40312c:	cbz	w21, 4031b0 <ferror@plt+0x230>
  403130:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x16920>
  403134:	add	x22, x22, #0x3d0
  403138:	mov	w26, #0xd                   	// #13
  40313c:	add	x23, x22, #0x8
  403140:	add	x27, x20, #0x120
  403144:	mov	x21, #0x1                   	// #1
  403148:	movk	w26, #0x2, lsl #16
  40314c:	add	w0, w26, w21
  403150:	bl	402a00 <nl_langinfo@plt>
  403154:	mov	x25, x0
  403158:	bl	402880 <strlen@plt>
  40315c:	mov	x24, x0
  403160:	add	x0, x0, #0x1
  403164:	bl	40e344 <ferror@plt+0xb3c4>
  403168:	str	x0, [x23]
  40316c:	mov	x2, #0x0                   	// #0
  403170:	mov	x1, #0x0                   	// #0
  403174:	str	w21, [x23, #8]
  403178:	add	x3, x0, x2
  40317c:	cmp	x24, x1
  403180:	b.ne	40331c <ferror@plt+0x39c>  // b.any
  403184:	strb	wzr, [x3]
  403188:	add	x21, x21, #0x1
  40318c:	add	x23, x23, #0x10
  403190:	cmp	x21, #0xd
  403194:	b.ne	40314c <ferror@plt+0x1cc>  // b.any
  403198:	adrp	x3, 405000 <ferror@plt+0x2080>
  40319c:	add	x0, x22, #0x8
  4031a0:	add	x3, x3, #0x67c
  4031a4:	mov	x2, #0x10                  	// #16
  4031a8:	mov	x1, #0xc                   	// #12
  4031ac:	bl	402930 <qsort@plt>
  4031b0:	adrp	x21, 411000 <_obstack_memory_used@@Base+0x1920>
  4031b4:	add	x21, x21, #0xc38
  4031b8:	add	x22, x21, #0x180
  4031bc:	mov	x23, #0x0                   	// #0
  4031c0:	add	x19, x20, #0x420
  4031c4:	mov	x0, x19
  4031c8:	bl	402a70 <sigemptyset@plt>
  4031cc:	ldr	w24, [x22, x23, lsl #2]
  4031d0:	add	x2, sp, #0x270
  4031d4:	mov	x1, #0x0                   	// #0
  4031d8:	mov	w0, w24
  4031dc:	bl	402b60 <sigaction@plt>
  4031e0:	ldr	x0, [sp, #624]
  4031e4:	cmp	x0, #0x1
  4031e8:	b.eq	4031f8 <ferror@plt+0x278>  // b.none
  4031ec:	mov	w1, w24
  4031f0:	mov	x0, x19
  4031f4:	bl	402ec0 <sigaddset@plt>
  4031f8:	add	x23, x23, #0x1
  4031fc:	cmp	x23, #0xb
  403200:	b.ne	4031cc <ferror@plt+0x24c>  // b.any
  403204:	add	x19, x20, #0x420
  403208:	adrp	x0, 405000 <ferror@plt+0x2080>
  40320c:	add	x22, x21, #0x180
  403210:	add	x0, x0, #0x7a0
  403214:	mov	x1, x19
  403218:	mov	x2, #0x80                  	// #128
  40321c:	mov	x23, #0x0                   	// #0
  403220:	str	x0, [sp, #624]
  403224:	add	x0, sp, #0x278
  403228:	bl	402820 <memcpy@plt>
  40322c:	str	wzr, [sp, #760]
  403230:	ldr	w24, [x22, x23, lsl #2]
  403234:	mov	x0, x19
  403238:	mov	w1, w24
  40323c:	bl	402c80 <sigismember@plt>
  403240:	cbz	w0, 403254 <ferror@plt+0x2d4>
  403244:	add	x1, sp, #0x270
  403248:	mov	w0, w24
  40324c:	mov	x2, #0x0                   	// #0
  403250:	bl	402b60 <sigaction@plt>
  403254:	add	x23, x23, #0x1
  403258:	cmp	x23, #0xb
  40325c:	b.ne	403230 <ferror@plt+0x2b0>  // b.any
  403260:	mov	x1, #0x0                   	// #0
  403264:	mov	w0, #0x11                  	// #17
  403268:	bl	4029d0 <signal@plt>
  40326c:	mov	x25, #0x0                   	// #0
  403270:	adrp	x0, 406000 <ferror@plt+0x3080>
  403274:	add	x0, x0, #0xdcc
  403278:	bl	410110 <_obstack_memory_used@@Base+0xa30>
  40327c:	mov	x23, #0x0                   	// #0
  403280:	add	x0, sp, #0x1a8
  403284:	bl	405810 <ferror@plt+0x2890>
  403288:	mov	x0, #0xffffffffffffffff    	// #-1
  40328c:	str	x0, [sp, #424]
  403290:	ldrsw	x0, [sp, #152]
  403294:	mov	x1, #0x8                   	// #8
  403298:	mov	x28, #0x0                   	// #0
  40329c:	mov	w24, #0x0                   	// #0
  4032a0:	mov	w22, #0x0                   	// #0
  4032a4:	bl	40e374 <ferror@plt+0xb3f4>
  4032a8:	mov	x19, x0
  4032ac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4032b0:	add	x0, x0, #0x558
  4032b4:	stp	xzr, xzr, [sp, #120]
  4032b8:	str	x0, [sp, #136]
  4032bc:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  4032c0:	add	x0, x0, #0xc24
  4032c4:	str	wzr, [sp, #164]
  4032c8:	str	x0, [sp, #208]
  4032cc:	mov	w0, #0xffffffff            	// #-1
  4032d0:	str	w0, [sp, #248]
  4032d4:	cmp	w22, w0
  4032d8:	b.ne	403344 <ferror@plt+0x3c4>  // b.any
  4032dc:	mov	w22, #0xffffffff            	// #-1
  4032e0:	ldr	x0, [sp, #136]
  4032e4:	ldr	w1, [sp, #152]
  4032e8:	ldr	w0, [x0]
  4032ec:	cmp	w0, w1
  4032f0:	b.ge	403d44 <ferror@plt+0xdc4>  // b.tcont
  4032f4:	ldr	x2, [sp, #136]
  4032f8:	add	w1, w0, #0x1
  4032fc:	str	w1, [x2]
  403300:	ldr	x1, [sp, #144]
  403304:	ldr	x0, [x1, w0, sxtw #3]
  403308:	str	x0, [x19, x23, lsl #3]
  40330c:	add	x23, x23, #0x1
  403310:	b	4032cc <ferror@plt+0x34c>
  403314:	mov	w0, #0x0                   	// #0
  403318:	b	40310c <ferror@plt+0x18c>
  40331c:	ldrb	w6, [x25, x1]
  403320:	ldr	x5, [x19]
  403324:	ldrb	w4, [x25, x1]
  403328:	ldrh	w5, [x5, x6, lsl #1]
  40332c:	tbnz	w5, #0, 40333c <ferror@plt+0x3bc>
  403330:	ldrb	w4, [x27, w4, sxtw]
  403334:	add	x2, x2, #0x1
  403338:	strb	w4, [x3]
  40333c:	add	x1, x1, #0x1
  403340:	b	403178 <ferror@plt+0x1f8>
  403344:	ldr	w0, [sp, #216]
  403348:	cmp	x23, #0x0
  40334c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  403350:	b.eq	4033b8 <ferror@plt+0x438>  // b.none
  403354:	ldr	w0, [sp, #168]
  403358:	cmp	w24, #0x0
  40335c:	cset	w1, ne  // ne = any
  403360:	eor	w0, w0, #0x1
  403364:	orr	w0, w1, w0
  403368:	cbnz	w0, 4032e0 <ferror@plt+0x360>
  40336c:	ldr	x0, [sp, #136]
  403370:	ldr	w1, [sp, #152]
  403374:	ldr	w0, [x0]
  403378:	cmp	w1, w0
  40337c:	b.eq	4032e0 <ferror@plt+0x360>  // b.none
  403380:	ldr	x1, [sp, #144]
  403384:	ldr	x1, [x1, w0, sxtw #3]
  403388:	ldrb	w2, [x1]
  40338c:	cmp	w2, #0x2d
  403390:	b.ne	4032e0 <ferror@plt+0x360>  // b.any
  403394:	ldrb	w2, [x1, #1]
  403398:	cmp	w2, #0x6f
  40339c:	b.ne	4032e0 <ferror@plt+0x360>  // b.any
  4033a0:	ldrb	w1, [x1, #2]
  4033a4:	cbnz	w1, 4033b8 <ferror@plt+0x438>
  4033a8:	ldr	w1, [sp, #152]
  4033ac:	add	w0, w0, #0x1
  4033b0:	cmp	w0, w1
  4033b4:	b.eq	4032e0 <ferror@plt+0x360>  // b.none
  4033b8:	ldr	w0, [sp, #152]
  4033bc:	add	x4, sp, #0xf8
  4033c0:	ldr	x1, [sp, #144]
  4033c4:	add	x3, x21, #0x1b0
  4033c8:	add	x2, x21, #0x590
  4033cc:	bl	402c60 <getopt_long@plt>
  4033d0:	mov	w22, w0
  4033d4:	cmn	w0, #0x1
  4033d8:	b.eq	4032dc <ferror@plt+0x35c>  // b.none
  4033dc:	cmp	w0, #0x7a
  4033e0:	b.gt	403430 <ferror@plt+0x4b0>
  4033e4:	cmp	w0, #0x42
  4033e8:	b.gt	40340c <ferror@plt+0x48c>
  4033ec:	cmn	w0, #0x2
  4033f0:	b.eq	403ce0 <ferror@plt+0xd60>  // b.none
  4033f4:	cmp	w0, #0x1
  4033f8:	b.eq	403450 <ferror@plt+0x4d0>  // b.none
  4033fc:	cmn	w0, #0x3
  403400:	b.eq	403ce8 <ferror@plt+0xd68>  // b.none
  403404:	mov	w0, #0x2                   	// #2
  403408:	b	403ce4 <ferror@plt+0xd64>
  40340c:	sub	w1, w0, #0x43
  403410:	cmp	w1, #0x37
  403414:	b.hi	403404 <ferror@plt+0x484>  // b.pmore
  403418:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  40341c:	add	x0, x0, #0xbb4
  403420:	ldrh	w0, [x0, w1, uxtw #1]
  403424:	adr	x1, 403430 <ferror@plt+0x4b0>
  403428:	add	x0, x1, w0, sxth #2
  40342c:	br	x0
  403430:	sub	w0, w0, #0x100
  403434:	cmp	w0, #0x7
  403438:	b.hi	403404 <ferror@plt+0x484>  // b.pmore
  40343c:	ldr	x1, [sp, #208]
  403440:	ldrh	w0, [x1, w0, uxtw #1]
  403444:	adr	x1, 403450 <ferror@plt+0x4d0>
  403448:	add	x0, x1, w0, sxth #2
  40344c:	br	x0
  403450:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403454:	ldr	x0, [x0, #1360]
  403458:	ldrb	w0, [x0]
  40345c:	cmp	w0, #0x2b
  403460:	b.ne	4035f8 <ferror@plt+0x678>  // b.any
  403464:	ldr	x0, [sp, #136]
  403468:	ldr	w1, [sp, #152]
  40346c:	ldr	w0, [x0]
  403470:	cmp	w0, w1
  403474:	b.eq	403580 <ferror@plt+0x600>  // b.none
  403478:	ldr	x1, [sp, #144]
  40347c:	ldr	x0, [x1, w0, sxtw #3]
  403480:	ldrb	w1, [x0]
  403484:	cmp	w1, #0x2d
  403488:	b.ne	403580 <ferror@plt+0x600>  // b.any
  40348c:	ldrb	w0, [x0, #1]
  403490:	sub	w0, w0, #0x30
  403494:	cmp	w0, #0x9
  403498:	cset	w26, ls  // ls = plast
  40349c:	ldr	x0, [sp, #184]
  4034a0:	ldr	w1, [sp, #168]
  4034a4:	cmp	x0, #0x0
  4034a8:	csel	w0, w26, wzr, eq  // eq = none
  4034ac:	orr	w0, w1, w0
  4034b0:	str	w0, [sp, #168]
  4034b4:	cbz	w0, 4035f8 <ferror@plt+0x678>
  4034b8:	add	x0, sp, #0x160
  4034bc:	bl	405810 <ferror@plt+0x2890>
  4034c0:	mov	x27, x0
  4034c4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4034c8:	mov	x1, x27
  4034cc:	mov	x2, #0x0                   	// #0
  4034d0:	ldr	x0, [x0, #1360]
  4034d4:	add	x0, x0, #0x1
  4034d8:	bl	406f34 <ferror@plt+0x3fb4>
  4034dc:	cbz	x0, 4034fc <ferror@plt+0x57c>
  4034e0:	ldrb	w1, [x0]
  4034e4:	cmp	w1, #0x2e
  4034e8:	b.ne	4034fc <ferror@plt+0x57c>  // b.any
  4034ec:	add	x1, x27, #0x8
  4034f0:	add	x0, x0, #0x1
  4034f4:	mov	x2, #0x0                   	// #0
  4034f8:	bl	406f34 <ferror@plt+0x3fb4>
  4034fc:	ldr	x1, [x27]
  403500:	cbnz	x1, 403514 <ferror@plt+0x594>
  403504:	ldr	x1, [x27, #8]
  403508:	cbnz	x1, 403514 <ferror@plt+0x594>
  40350c:	mov	x1, #0xffffffffffffffff    	// #-1
  403510:	str	x1, [x27]
  403514:	cbz	x0, 4035f8 <ferror@plt+0x678>
  403518:	mov	x1, x27
  40351c:	mov	w2, #0x0                   	// #0
  403520:	bl	405590 <ferror@plt+0x2610>
  403524:	ldrb	w0, [x0]
  403528:	cbnz	w0, 4035f8 <ferror@plt+0x678>
  40352c:	cbz	w26, 4035e4 <ferror@plt+0x664>
  403530:	ldr	x0, [sp, #136]
  403534:	ldr	x2, [sp, #136]
  403538:	ldr	w0, [x0]
  40353c:	add	w1, w0, #0x1
  403540:	str	w1, [x2]
  403544:	ldr	x1, [sp, #144]
  403548:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  40354c:	add	x2, x2, #0x4c8
  403550:	ldr	x26, [x1, w0, sxtw #3]
  403554:	add	x1, x27, #0x10
  403558:	add	x0, x26, #0x1
  40355c:	bl	406f34 <ferror@plt+0x3fb4>
  403560:	cbnz	x0, 403588 <ferror@plt+0x608>
  403564:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  403568:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40356c:	add	x3, x21, #0x5af
  403570:	add	x1, x1, #0x325
  403574:	add	x0, x0, #0x2b5
  403578:	mov	w2, #0x1112                	// #4370
  40357c:	bl	402ee0 <__assert_fail@plt>
  403580:	mov	w26, #0x0                   	// #0
  403584:	b	40349c <ferror@plt+0x51c>
  403588:	ldrb	w1, [x0]
  40358c:	cmp	w1, #0x2e
  403590:	b.ne	4035a8 <ferror@plt+0x628>  // b.any
  403594:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  403598:	add	x1, x27, #0x18
  40359c:	add	x2, x2, #0x4e1
  4035a0:	add	x0, x0, #0x1
  4035a4:	bl	406f34 <ferror@plt+0x3fb4>
  4035a8:	ldr	x1, [x27, #24]
  4035ac:	cbnz	x1, 4035c0 <ferror@plt+0x640>
  4035b0:	ldr	x1, [x27, #16]
  4035b4:	cbz	x1, 4035c0 <ferror@plt+0x640>
  4035b8:	sub	x1, x1, #0x1
  4035bc:	str	x1, [x27, #16]
  4035c0:	mov	x1, x27
  4035c4:	mov	w2, #0x1                   	// #1
  4035c8:	bl	405590 <ferror@plt+0x2610>
  4035cc:	ldrb	w0, [x0]
  4035d0:	cbz	w0, 4035e4 <ferror@plt+0x664>
  4035d4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4035d8:	mov	x0, x26
  4035dc:	add	x1, x1, #0x4fa
  4035e0:	bl	4056c0 <ferror@plt+0x2740>
  4035e4:	mov	w0, #0x1                   	// #1
  4035e8:	strb	w0, [x27, #57]
  4035ec:	mov	x0, x27
  4035f0:	bl	4058f4 <ferror@plt+0x2974>
  4035f4:	b	4032cc <ferror@plt+0x34c>
  4035f8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4035fc:	ldr	x0, [x0, #1360]
  403600:	b	403308 <ferror@plt+0x388>
  403604:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403608:	add	x22, x21, #0x5b4
  40360c:	mov	x3, x22
  403610:	add	x2, x21, #0x5c0
  403614:	ldr	x5, [x0, #1232]
  403618:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40361c:	mov	x4, #0x1                   	// #1
  403620:	ldr	x1, [x0, #1360]
  403624:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  403628:	add	x0, x0, #0x518
  40362c:	bl	408f90 <ferror@plt+0x6010>
  403630:	ldrb	w22, [x22, x0]
  403634:	add	x1, sp, #0x1a8
  403638:	add	x0, sp, #0x270
  40363c:	mov	w2, #0x2                   	// #2
  403640:	strb	w22, [sp, #624]
  403644:	strb	wzr, [sp, #625]
  403648:	bl	405590 <ferror@plt+0x2610>
  40364c:	b	4032cc <ferror@plt+0x34c>
  403650:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403654:	ldr	x1, [x0, #1360]
  403658:	cbz	x1, 40369c <ferror@plt+0x71c>
  40365c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403660:	add	x22, x21, #0x5f8
  403664:	mov	x3, x22
  403668:	add	x2, x21, #0x600
  40366c:	ldr	x5, [x0, #1232]
  403670:	mov	x4, #0x1                   	// #1
  403674:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  403678:	add	x0, x0, #0x51f
  40367c:	bl	408f90 <ferror@plt+0x6010>
  403680:	ldrb	w22, [x22, x0]
  403684:	cbz	w24, 4036a4 <ferror@plt+0x724>
  403688:	cmp	w24, w22
  40368c:	b.eq	4036a4 <ferror@plt+0x724>  // b.none
  403690:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  403694:	add	x0, x0, #0x527
  403698:	bl	405688 <ferror@plt+0x2708>
  40369c:	mov	w22, #0x63                  	// #99
  4036a0:	b	403684 <ferror@plt+0x704>
  4036a4:	and	w24, w22, #0xff
  4036a8:	b	4032cc <ferror@plt+0x34c>
  4036ac:	ldr	x0, [x20, #1496]
  4036b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  4036b4:	ldr	x26, [x1, #1360]
  4036b8:	cbz	x0, 4036ec <ferror@plt+0x76c>
  4036bc:	mov	x1, x26
  4036c0:	bl	402c90 <strcmp@plt>
  4036c4:	cbz	w0, 4036ec <ferror@plt+0x76c>
  4036c8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4036cc:	add	x1, x1, #0x52a
  4036d0:	mov	w2, #0x5                   	// #5
  4036d4:	mov	x0, #0x0                   	// #0
  4036d8:	bl	402e60 <dcgettext@plt>
  4036dc:	mov	x2, x0
  4036e0:	mov	w1, #0x0                   	// #0
  4036e4:	mov	w0, #0x2                   	// #2
  4036e8:	bl	4028c0 <error@plt>
  4036ec:	str	x26, [x20, #1496]
  4036f0:	b	4032cc <ferror@plt+0x34c>
  4036f4:	mov	w0, #0x1                   	// #1
  4036f8:	strb	w0, [x20, #1336]
  4036fc:	b	4032cc <ferror@plt+0x34c>
  403700:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403704:	ldr	x25, [x0, #1360]
  403708:	b	4032cc <ferror@plt+0x34c>
  40370c:	adrp	x27, 426000 <_obstack_memory_used@@Base+0x16920>
  403710:	add	x0, sp, #0x160
  403714:	bl	405810 <ferror@plt+0x2890>
  403718:	mov	x26, x0
  40371c:	mov	x1, x0
  403720:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  403724:	ldr	x0, [x27, #1360]
  403728:	add	x2, x2, #0x54f
  40372c:	bl	406f34 <ferror@plt+0x3fb4>
  403730:	ldr	x1, [x26]
  403734:	sub	x2, x1, #0x1
  403738:	str	x2, [x26]
  40373c:	cbnz	x1, 403758 <ferror@plt+0x7d8>
  403740:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403744:	mov	x0, x27
  403748:	add	x1, x1, #0x56d
  40374c:	add	x0, x0, #0x550
  403750:	ldr	x0, [x0]
  403754:	b	4035e0 <ferror@plt+0x660>
  403758:	ldrb	w1, [x0]
  40375c:	cmp	w1, #0x2e
  403760:	b.ne	403798 <ferror@plt+0x818>  // b.any
  403764:	add	x1, x26, #0x8
  403768:	add	x0, x0, #0x1
  40376c:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  403770:	add	x2, x2, #0x4e1
  403774:	bl	406f34 <ferror@plt+0x3fb4>
  403778:	ldr	x1, [x26, #8]
  40377c:	sub	x2, x1, #0x1
  403780:	str	x2, [x26, #8]
  403784:	cbnz	x1, 403798 <ferror@plt+0x818>
  403788:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40378c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403790:	add	x1, x1, #0x582
  403794:	b	40374c <ferror@plt+0x7cc>
  403798:	ldr	x1, [x26]
  40379c:	cbnz	x1, 4037b0 <ferror@plt+0x830>
  4037a0:	ldr	x1, [x26, #8]
  4037a4:	cbnz	x1, 4037b0 <ferror@plt+0x830>
  4037a8:	mov	x1, #0xffffffffffffffff    	// #-1
  4037ac:	str	x1, [x26]
  4037b0:	mov	x1, x26
  4037b4:	mov	w2, #0x0                   	// #0
  4037b8:	bl	405590 <ferror@plt+0x2610>
  4037bc:	ldrb	w1, [x0]
  4037c0:	cmp	w1, #0x2c
  4037c4:	b.eq	4037e4 <ferror@plt+0x864>  // b.none
  4037c8:	mov	x1, #0xffffffffffffffff    	// #-1
  4037cc:	stp	x1, xzr, [x26, #16]
  4037d0:	ldrb	w0, [x0]
  4037d4:	cbz	w0, 403848 <ferror@plt+0x8c8>
  4037d8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4037dc:	add	x1, x1, #0x4fa
  4037e0:	b	403810 <ferror@plt+0x890>
  4037e4:	add	x1, x26, #0x10
  4037e8:	add	x0, x0, #0x1
  4037ec:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  4037f0:	add	x2, x2, #0x59b
  4037f4:	bl	406f34 <ferror@plt+0x3fb4>
  4037f8:	ldr	x1, [x26, #16]
  4037fc:	sub	x2, x1, #0x1
  403800:	str	x2, [x26, #16]
  403804:	cbnz	x1, 403818 <ferror@plt+0x898>
  403808:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40380c:	add	x1, x1, #0x56d
  403810:	ldr	x0, [x27, #1360]
  403814:	b	4035e0 <ferror@plt+0x660>
  403818:	ldrb	w1, [x0]
  40381c:	cmp	w1, #0x2e
  403820:	b.ne	403838 <ferror@plt+0x8b8>  // b.any
  403824:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  403828:	add	x1, x26, #0x18
  40382c:	add	x2, x2, #0x4e1
  403830:	add	x0, x0, #0x1
  403834:	bl	406f34 <ferror@plt+0x3fb4>
  403838:	mov	x1, x26
  40383c:	mov	w2, #0x1                   	// #1
  403840:	bl	405590 <ferror@plt+0x2610>
  403844:	b	4037d0 <ferror@plt+0x850>
  403848:	mov	x0, x26
  40384c:	b	4035f0 <ferror@plt+0x670>
  403850:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403854:	add	x3, sp, #0x128
  403858:	mov	x4, #0x0                   	// #0
  40385c:	mov	w2, #0xa                   	// #10
  403860:	ldr	x27, [x0, #1360]
  403864:	mov	x1, #0x0                   	// #0
  403868:	ldr	w26, [sp, #248]
  40386c:	mov	x0, x27
  403870:	bl	40ebdc <ferror@plt+0xbc5c>
  403874:	mov	w6, w0
  403878:	add	x1, sp, #0x270
  40387c:	mov	w0, #0x7                   	// #7
  403880:	str	w6, [sp, #220]
  403884:	bl	402de0 <getrlimit@plt>
  403888:	ldr	w6, [sp, #220]
  40388c:	cbnz	w0, 403938 <ferror@plt+0x9b8>
  403890:	ldr	x5, [sp, #624]
  403894:	sub	w5, w5, #0x3
  403898:	cbnz	w6, 4039c0 <ferror@plt+0xa40>
  40389c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  4038a0:	ldr	x0, [sp, #296]
  4038a4:	str	w0, [x1, #1192]
  4038a8:	tst	x0, #0xffffffff00000000
  4038ac:	b.eq	403940 <ferror@plt+0x9c0>  // b.none
  4038b0:	add	x21, x21, #0x1b0
  4038b4:	sbfiz	x26, x26, #5, #32
  4038b8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4038bc:	add	x1, x1, #0x5b4
  4038c0:	mov	w2, #0x5                   	// #5
  4038c4:	mov	x0, #0x0                   	// #0
  4038c8:	str	w5, [sp, #120]
  4038cc:	bl	402e60 <dcgettext@plt>
  4038d0:	ldr	x20, [x21, x26]
  4038d4:	mov	x19, x0
  4038d8:	mov	x0, x27
  4038dc:	bl	40cef8 <ferror@plt+0x9f78>
  4038e0:	mov	x3, x20
  4038e4:	mov	x4, x0
  4038e8:	mov	x2, x19
  4038ec:	mov	w1, #0x0                   	// #0
  4038f0:	mov	w0, #0x0                   	// #0
  4038f4:	bl	4028c0 <error@plt>
  4038f8:	mov	w2, #0x5                   	// #5
  4038fc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403900:	mov	x0, #0x0                   	// #0
  403904:	add	x1, x1, #0x5cf
  403908:	bl	402e60 <dcgettext@plt>
  40390c:	mov	x19, x0
  403910:	ldr	w5, [sp, #120]
  403914:	add	x1, sp, #0x1f0
  403918:	mov	w0, w5
  40391c:	bl	40b2b4 <ferror@plt+0x8334>
  403920:	mov	x4, x0
  403924:	mov	x3, x20
  403928:	mov	x2, x19
  40392c:	mov	w1, #0x0                   	// #0
  403930:	mov	w0, #0x2                   	// #2
  403934:	bl	4028c0 <error@plt>
  403938:	mov	w5, #0x11                  	// #17
  40393c:	b	403898 <ferror@plt+0x918>
  403940:	cmp	w0, #0x1
  403944:	b.hi	4039b4 <ferror@plt+0xa34>  // b.pmore
  403948:	add	x21, x21, #0x1b0
  40394c:	sbfiz	x26, x26, #5, #32
  403950:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403954:	add	x1, x1, #0x5ff
  403958:	mov	w2, #0x5                   	// #5
  40395c:	mov	x0, #0x0                   	// #0
  403960:	bl	402e60 <dcgettext@plt>
  403964:	mov	x19, x0
  403968:	ldr	x20, [x21, x26]
  40396c:	mov	x0, x27
  403970:	bl	40cef8 <ferror@plt+0x9f78>
  403974:	mov	x4, x0
  403978:	mov	x3, x20
  40397c:	mov	x2, x19
  403980:	mov	w1, #0x0                   	// #0
  403984:	mov	w0, #0x0                   	// #0
  403988:	bl	4028c0 <error@plt>
  40398c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403990:	add	x1, x1, #0x618
  403994:	mov	w2, #0x5                   	// #5
  403998:	mov	x0, #0x0                   	// #0
  40399c:	bl	402e60 <dcgettext@plt>
  4039a0:	mov	x19, x0
  4039a4:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  4039a8:	add	x0, x0, #0x634
  4039ac:	bl	40cef8 <ferror@plt+0x9f78>
  4039b0:	b	403920 <ferror@plt+0x9a0>
  4039b4:	cmp	w0, w5
  4039b8:	b.ls	4032cc <ferror@plt+0x34c>  // b.plast
  4039bc:	b	4038b0 <ferror@plt+0x930>
  4039c0:	cmp	w6, #0x1
  4039c4:	b.eq	4038b0 <ferror@plt+0x930>  // b.none
  4039c8:	mov	x4, x27
  4039cc:	add	x3, x21, #0x1b0
  4039d0:	mov	w1, w26
  4039d4:	mov	w0, w6
  4039d8:	mov	w2, #0x4                   	// #4
  4039dc:	bl	40eb04 <ferror@plt+0xbb84>
  4039e0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4039e4:	ldr	x26, [x0, #1360]
  4039e8:	ldr	x0, [sp, #120]
  4039ec:	cbz	x0, 403d34 <ferror@plt+0xdb4>
  4039f0:	mov	x1, x26
  4039f4:	bl	402c90 <strcmp@plt>
  4039f8:	cbz	w0, 403d34 <ferror@plt+0xdb4>
  4039fc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403a00:	mov	w2, #0x5                   	// #5
  403a04:	add	x1, x1, #0x636
  403a08:	b	4036d4 <ferror@plt+0x754>
  403a0c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403a10:	ldr	x26, [x0, #1360]
  403a14:	cbz	x28, 403d3c <ferror@plt+0xdbc>
  403a18:	mov	x1, x26
  403a1c:	mov	x0, x28
  403a20:	bl	402c90 <strcmp@plt>
  403a24:	cbz	w0, 403d3c <ferror@plt+0xdbc>
  403a28:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403a2c:	mov	w2, #0x5                   	// #5
  403a30:	add	x1, x1, #0x656
  403a34:	b	4036d4 <ferror@plt+0x754>
  403a38:	mov	w0, #0x1                   	// #1
  403a3c:	strb	w0, [x20, #1338]
  403a40:	b	4032cc <ferror@plt+0x34c>
  403a44:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403a48:	adrp	x4, 411000 <_obstack_memory_used@@Base+0x1920>
  403a4c:	ldr	w26, [sp, #248]
  403a50:	add	x4, x4, #0x678
  403a54:	ldr	x27, [x0, #1360]
  403a58:	add	x3, sp, #0x1f0
  403a5c:	add	x1, sp, #0x270
  403a60:	mov	w2, #0xa                   	// #10
  403a64:	mov	x0, x27
  403a68:	bl	40ebdc <ferror@plt+0xbc5c>
  403a6c:	cbnz	w0, 403acc <ferror@plt+0xb4c>
  403a70:	ldr	x0, [sp, #624]
  403a74:	ldurb	w0, [x0, #-1]
  403a78:	sub	w0, w0, #0x30
  403a7c:	cmp	w0, #0x9
  403a80:	b.hi	403a9c <ferror@plt+0xb1c>  // b.pmore
  403a84:	ldr	x0, [sp, #496]
  403a88:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  403a8c:	cmp	x0, x1
  403a90:	b.hi	403b50 <ferror@plt+0xbd0>  // b.pmore
  403a94:	lsl	x0, x0, #10
  403a98:	str	x0, [sp, #496]
  403a9c:	ldr	x1, [sp, #496]
  403aa0:	ldr	x0, [x20, #1560]
  403aa4:	cmp	x1, x0
  403aa8:	b.cc	4032cc <ferror@plt+0x34c>  // b.lo, b.ul, b.last
  403aac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403ab0:	mov	w2, #0x22                  	// #34
  403ab4:	ldr	w0, [x0, #1192]
  403ab8:	umull	x0, w0, w2
  403abc:	cmp	x0, x1
  403ac0:	csel	x0, x0, x1, cs  // cs = hs, nlast
  403ac4:	str	x0, [x20, #1560]
  403ac8:	b	4032cc <ferror@plt+0x34c>
  403acc:	cmp	w0, #0x2
  403ad0:	b.ne	403b04 <ferror@plt+0xb84>  // b.any
  403ad4:	ldr	x1, [sp, #624]
  403ad8:	ldurb	w2, [x1, #-1]
  403adc:	sub	w2, w2, #0x30
  403ae0:	cmp	w2, #0x9
  403ae4:	b.hi	403b04 <ferror@plt+0xb84>  // b.pmore
  403ae8:	ldrb	w2, [x1, #1]
  403aec:	cbnz	w2, 403b04 <ferror@plt+0xb84>
  403af0:	ldrb	w1, [x1]
  403af4:	cmp	w1, #0x25
  403af8:	b.eq	403b18 <ferror@plt+0xb98>  // b.none
  403afc:	cmp	w1, #0x62
  403b00:	b.eq	403a9c <ferror@plt+0xb1c>  // b.none
  403b04:	mov	x4, x27
  403b08:	add	x3, x21, #0x1b0
  403b0c:	mov	w1, w26
  403b10:	mov	w2, #0x53                  	// #83
  403b14:	b	4039dc <ferror@plt+0xa5c>
  403b18:	bl	40b6a8 <ferror@plt+0x8728>
  403b1c:	ldr	d1, [sp, #496]
  403b20:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  403b24:	ucvtf	d1, d1
  403b28:	fmul	d0, d1, d0
  403b2c:	fmov	d1, x0
  403b30:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  403b34:	fdiv	d0, d0, d1
  403b38:	fmov	d1, x0
  403b3c:	fcmpe	d0, d1
  403b40:	b.pl	403b50 <ferror@plt+0xbd0>  // b.nfrst
  403b44:	fcvtzu	d0, d0
  403b48:	str	d0, [sp, #496]
  403b4c:	b	403a9c <ferror@plt+0xb1c>
  403b50:	mov	w0, #0x1                   	// #1
  403b54:	b	403b04 <ferror@plt+0xb84>
  403b58:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403b5c:	add	x26, x0, #0x550
  403b60:	ldr	x0, [x0, #1360]
  403b64:	ldrb	w1, [x0]
  403b68:	cbnz	w1, 403b7c <ferror@plt+0xbfc>
  403b6c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403b70:	mov	w2, #0x5                   	// #5
  403b74:	add	x1, x1, #0x685
  403b78:	b	4036d4 <ferror@plt+0x754>
  403b7c:	ldrb	w2, [x0, #1]
  403b80:	cbz	w2, 403bcc <ferror@plt+0xc4c>
  403b84:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403b88:	add	x1, x1, #0x68f
  403b8c:	bl	402c90 <strcmp@plt>
  403b90:	cbz	w0, 403bc8 <ferror@plt+0xc48>
  403b94:	mov	w2, #0x5                   	// #5
  403b98:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403b9c:	mov	x0, #0x0                   	// #0
  403ba0:	add	x1, x1, #0x692
  403ba4:	bl	402e60 <dcgettext@plt>
  403ba8:	mov	x19, x0
  403bac:	ldr	x0, [x26]
  403bb0:	bl	40cef8 <ferror@plt+0x9f78>
  403bb4:	mov	x3, x0
  403bb8:	mov	x2, x19
  403bbc:	mov	w1, #0x0                   	// #0
  403bc0:	mov	w0, #0x2                   	// #2
  403bc4:	bl	4028c0 <error@plt>
  403bc8:	mov	w1, #0x0                   	// #0
  403bcc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403bd0:	ldr	w2, [x0, #976]
  403bd4:	cmp	w2, #0x100
  403bd8:	b.eq	403bf4 <ferror@plt+0xc74>  // b.none
  403bdc:	cmp	w2, w1
  403be0:	b.eq	403bf4 <ferror@plt+0xc74>  // b.none
  403be4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403be8:	mov	w2, #0x5                   	// #5
  403bec:	add	x1, x1, #0x6a9
  403bf0:	b	4036d4 <ferror@plt+0x754>
  403bf4:	str	w1, [x0, #976]
  403bf8:	b	4032cc <ferror@plt+0x34c>
  403bfc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403c00:	ldr	x0, [x0, #1360]
  403c04:	bl	40503c <ferror@plt+0x20bc>
  403c08:	b	4032cc <ferror@plt+0x34c>
  403c0c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403c10:	ldr	w27, [sp, #248]
  403c14:	ldr	x4, [sp, #176]
  403c18:	add	x3, sp, #0x270
  403c1c:	ldr	x26, [x0, #1360]
  403c20:	mov	w2, #0xa                   	// #10
  403c24:	mov	x1, #0x0                   	// #0
  403c28:	mov	x0, x26
  403c2c:	bl	40e7b8 <ferror@plt+0xb838>
  403c30:	cmp	w0, #0x1
  403c34:	b.eq	403c6c <ferror@plt+0xcec>  // b.none
  403c38:	cbz	w0, 403c50 <ferror@plt+0xcd0>
  403c3c:	mov	x4, x26
  403c40:	add	x3, x21, #0x1b0
  403c44:	mov	w1, w27
  403c48:	mov	w2, #0x7                   	// #7
  403c4c:	b	4039dc <ferror@plt+0xa5c>
  403c50:	ldr	x0, [sp, #624]
  403c54:	str	x0, [sp, #128]
  403c58:	cbnz	x0, 4032cc <ferror@plt+0x34c>
  403c5c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403c60:	mov	w2, #0x5                   	// #5
  403c64:	add	x1, x1, #0x6bb
  403c68:	b	4036d8 <ferror@plt+0x758>
  403c6c:	mov	x0, #0xffffffffffffffff    	// #-1
  403c70:	str	x0, [sp, #128]
  403c74:	b	4032cc <ferror@plt+0x34c>
  403c78:	mov	w0, #0x1                   	// #1
  403c7c:	strb	w0, [x20, #1337]
  403c80:	b	4032cc <ferror@plt+0x34c>
  403c84:	ldp	x0, x2, [sp, #136]
  403c88:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  403c8c:	ldr	x1, [x1, #1360]
  403c90:	ldr	w0, [x0]
  403c94:	add	x2, x2, w0, sxtw #3
  403c98:	ldur	x2, [x2, #-8]
  403c9c:	cmp	x2, x1
  403ca0:	b.ne	4032cc <ferror@plt+0x34c>  // b.any
  403ca4:	ldrb	w2, [x1]
  403ca8:	sub	w3, w2, #0x30
  403cac:	cmp	w3, #0x9
  403cb0:	b.ls	403ccc <ferror@plt+0xd4c>  // b.plast
  403cb4:	cmp	w2, #0x0
  403cb8:	cset	w1, ne  // ne = any
  403cbc:	sub	w0, w0, w1
  403cc0:	ldr	x1, [sp, #136]
  403cc4:	str	w0, [x1]
  403cc8:	b	4032cc <ferror@plt+0x34c>
  403ccc:	add	x1, x1, #0x1
  403cd0:	b	403ca4 <ferror@plt+0xd24>
  403cd4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403cd8:	strb	wzr, [x0, #1176]
  403cdc:	b	4032cc <ferror@plt+0x34c>
  403ce0:	mov	w0, #0x0                   	// #0
  403ce4:	bl	408908 <ferror@plt+0x5988>
  403ce8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403cec:	adrp	x5, 411000 <_obstack_memory_used@@Base+0x1920>
  403cf0:	adrp	x4, 411000 <_obstack_memory_used@@Base+0x1920>
  403cf4:	add	x5, x5, #0x6de
  403cf8:	ldr	x3, [x0, #1224]
  403cfc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403d00:	add	x4, x4, #0x6ea
  403d04:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  403d08:	ldr	x0, [x0, #1376]
  403d0c:	add	x2, x2, #0x3ff
  403d10:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403d14:	add	x1, x1, #0x51a
  403d18:	mov	x6, #0x0                   	// #0
  403d1c:	bl	40e250 <ferror@plt+0xb2d0>
  403d20:	mov	w0, #0x0                   	// #0
  403d24:	bl	4028a0 <exit@plt>
  403d28:	mov	w0, #0x1                   	// #1
  403d2c:	str	w0, [sp, #164]
  403d30:	b	4032cc <ferror@plt+0x34c>
  403d34:	str	x26, [sp, #120]
  403d38:	b	4032cc <ferror@plt+0x34c>
  403d3c:	mov	x28, x26
  403d40:	b	4032cc <ferror@plt+0x34c>
  403d44:	cbz	x25, 403ebc <ferror@plt+0xf3c>
  403d48:	cbz	x23, 403dbc <ferror@plt+0xe3c>
  403d4c:	mov	w2, #0x5                   	// #5
  403d50:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403d54:	mov	x0, #0x0                   	// #0
  403d58:	add	x1, x1, #0x6f7
  403d5c:	bl	402e60 <dcgettext@plt>
  403d60:	mov	x20, x0
  403d64:	ldr	x1, [x19]
  403d68:	mov	w0, #0x4                   	// #4
  403d6c:	bl	40cd1c <ferror@plt+0x9d9c>
  403d70:	mov	x3, x0
  403d74:	mov	x2, x20
  403d78:	mov	w1, #0x0                   	// #0
  403d7c:	mov	w0, #0x0                   	// #0
  403d80:	bl	4028c0 <error@plt>
  403d84:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403d88:	mov	w2, #0x5                   	// #5
  403d8c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403d90:	add	x1, x1, #0x708
  403d94:	ldr	x19, [x0, #1352]
  403d98:	mov	x0, #0x0                   	// #0
  403d9c:	bl	402e60 <dcgettext@plt>
  403da0:	mov	x3, x0
  403da4:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  403da8:	mov	x0, x19
  403dac:	add	x2, x2, #0x627
  403db0:	mov	w1, #0x1                   	// #1
  403db4:	bl	402c70 <__fprintf_chk@plt>
  403db8:	b	403404 <ferror@plt+0x484>
  403dbc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403dc0:	add	x1, x1, #0xa6d
  403dc4:	mov	x0, x25
  403dc8:	bl	407138 <ferror@plt+0x41b8>
  403dcc:	mov	x21, x0
  403dd0:	add	x0, sp, #0x270
  403dd4:	bl	40d828 <ferror@plt+0xa8a8>
  403dd8:	add	x1, sp, #0x270
  403ddc:	mov	x0, x21
  403de0:	bl	40d8e4 <ferror@plt+0xa964>
  403de4:	tst	w0, #0xff
  403de8:	b.ne	403e0c <ferror@plt+0xe8c>  // b.any
  403dec:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403df0:	add	x1, x1, #0x73c
  403df4:	mov	w2, #0x5                   	// #5
  403df8:	mov	x0, #0x0                   	// #0
  403dfc:	bl	402e60 <dcgettext@plt>
  403e00:	mov	x1, x25
  403e04:	mov	x19, x0
  403e08:	b	403e68 <ferror@plt+0xee8>
  403e0c:	mov	x0, x21
  403e10:	mov	x1, x25
  403e14:	bl	407174 <ferror@plt+0x41f4>
  403e18:	ldr	x21, [sp, #624]
  403e1c:	cbz	x21, 403f3c <ferror@plt+0xfbc>
  403e20:	mov	x0, x19
  403e24:	bl	402ce0 <free@plt>
  403e28:	ldr	x19, [sp, #632]
  403e2c:	adrp	x26, 411000 <_obstack_memory_used@@Base+0x1920>
  403e30:	add	x26, x26, #0x84b
  403e34:	ldr	x27, [x19, x23, lsl #3]
  403e38:	add	x22, x19, x23, lsl #3
  403e3c:	mov	x1, x26
  403e40:	mov	x0, x27
  403e44:	bl	402c90 <strcmp@plt>
  403e48:	cbnz	w0, 403e74 <ferror@plt+0xef4>
  403e4c:	mov	w2, #0x5                   	// #5
  403e50:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403e54:	mov	x0, #0x0                   	// #0
  403e58:	add	x1, x1, #0x75b
  403e5c:	bl	402e60 <dcgettext@plt>
  403e60:	mov	x19, x0
  403e64:	ldr	x1, [x22]
  403e68:	mov	w0, #0x4                   	// #4
  403e6c:	bl	40cd1c <ferror@plt+0x9d9c>
  403e70:	b	403bb4 <ferror@plt+0xc34>
  403e74:	ldrb	w0, [x27]
  403e78:	add	x23, x23, #0x1
  403e7c:	cbnz	w0, 403eb4 <ferror@plt+0xf34>
  403e80:	mov	w2, #0x5                   	// #5
  403e84:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403e88:	mov	x0, #0x0                   	// #0
  403e8c:	add	x1, x1, #0x79a
  403e90:	bl	402e60 <dcgettext@plt>
  403e94:	mov	x19, x0
  403e98:	mov	x2, x25
  403e9c:	mov	w1, #0x3                   	// #3
  403ea0:	mov	w0, #0x0                   	// #0
  403ea4:	bl	40cdc4 <ferror@plt+0x9e44>
  403ea8:	mov	x4, x23
  403eac:	mov	x3, x0
  403eb0:	b	403928 <ferror@plt+0x9a8>
  403eb4:	cmp	x21, x23
  403eb8:	b.ne	403e34 <ferror@plt+0xeb4>  // b.any
  403ebc:	ldr	x3, [x20, #1328]
  403ec0:	mov	w21, #0x0                   	// #0
  403ec4:	mov	x2, x3
  403ec8:	cbnz	x2, 403f4c <ferror@plt+0xfcc>
  403ecc:	cbnz	x3, 403fcc <ferror@plt+0x104c>
  403ed0:	add	x0, sp, #0x1a8
  403ed4:	bl	405468 <ferror@plt+0x24e8>
  403ed8:	tst	w0, #0xff
  403edc:	b.ne	403fcc <ferror@plt+0x104c>  // b.any
  403ee0:	add	x0, sp, #0x1a8
  403ee4:	bl	4058f4 <ferror@plt+0x2974>
  403ee8:	ldrb	w0, [sp, #475]
  403eec:	mov	w25, #0x1                   	// #1
  403ef0:	orr	w21, w0, w21
  403ef4:	ldr	x0, [x20, #1328]
  403ef8:	cbnz	x0, 403fd4 <ferror@plt+0x1054>
  403efc:	ldrb	w26, [x20, #1336]
  403f00:	cbz	w26, 404580 <ferror@plt+0x1600>
  403f04:	ldr	x1, [sp, #120]
  403f08:	cmp	w24, #0x0
  403f0c:	cset	w0, ne  // ne = any
  403f10:	cmp	x1, #0x0
  403f14:	csinc	w0, w0, wzr, eq  // eq = none
  403f18:	cbz	w0, 404038 <ferror@plt+0x10b8>
  403f1c:	mov	w0, #0x6f                  	// #111
  403f20:	cmp	w24, #0x0
  403f24:	csel	w24, w24, w0, ne  // ne = any
  403f28:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  403f2c:	add	x0, x0, #0x3d0
  403f30:	add	x0, x0, #0xe8
  403f34:	strb	w24, [x0]
  403f38:	b	403698 <ferror@plt+0x718>
  403f3c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  403f40:	mov	w2, #0x5                   	// #5
  403f44:	add	x1, x1, #0x7c0
  403f48:	b	403df8 <ferror@plt+0xe78>
  403f4c:	mov	x0, x2
  403f50:	bl	405468 <ferror@plt+0x24e8>
  403f54:	tst	w0, #0xff
  403f58:	b.eq	403fbc <ferror@plt+0x103c>  // b.none
  403f5c:	ldrb	w0, [x2, #55]
  403f60:	cbnz	w0, 403fbc <ferror@plt+0x103c>
  403f64:	ldr	x0, [sp, #456]
  403f68:	str	x0, [x2, #32]
  403f6c:	ldr	x0, [sp, #464]
  403f70:	str	x0, [x2, #40]
  403f74:	ldrb	w0, [sp, #472]
  403f78:	strb	w0, [x2, #48]
  403f7c:	ldrb	w0, [sp, #473]
  403f80:	strb	w0, [x2, #49]
  403f84:	ldrb	w0, [sp, #478]
  403f88:	strb	w0, [x2, #54]
  403f8c:	ldrb	w0, [sp, #474]
  403f90:	strb	w0, [x2, #50]
  403f94:	ldrb	w0, [sp, #476]
  403f98:	strb	w0, [x2, #52]
  403f9c:	ldrb	w0, [sp, #477]
  403fa0:	strb	w0, [x2, #53]
  403fa4:	ldrb	w0, [sp, #480]
  403fa8:	strb	w0, [x2, #56]
  403fac:	ldrb	w0, [sp, #475]
  403fb0:	strb	w0, [x2, #51]
  403fb4:	ldrb	w0, [sp, #479]
  403fb8:	strb	w0, [x2, #55]
  403fbc:	ldrb	w0, [x2, #51]
  403fc0:	ldr	x2, [x2, #64]
  403fc4:	orr	w21, w0, w21
  403fc8:	b	403ec8 <ferror@plt+0xf48>
  403fcc:	mov	w25, #0x0                   	// #0
  403fd0:	b	403ef4 <ferror@plt+0xf74>
  403fd4:	ldrb	w2, [x0, #52]
  403fd8:	ldrb	w1, [x0, #50]
  403fdc:	ldrb	w3, [x0, #51]
  403fe0:	add	w1, w1, w2
  403fe4:	ldrb	w2, [x0, #53]
  403fe8:	add	w1, w1, w2
  403fec:	ldrb	w2, [x0, #54]
  403ff0:	add	w1, w1, w2
  403ff4:	ldrb	w2, [x0, #56]
  403ff8:	orr	w3, w2, w3
  403ffc:	ldr	x2, [x0, #32]
  404000:	cmp	x2, #0x0
  404004:	cset	w2, ne  // ne = any
  404008:	orr	w2, w2, w3
  40400c:	add	w1, w1, w2, uxtb
  404010:	cmp	w1, #0x1
  404014:	b.le	404030 <ferror@plt+0x10b0>
  404018:	strh	wzr, [x0, #48]
  40401c:	add	x1, sp, #0x1f0
  404020:	strb	wzr, [x0, #55]
  404024:	bl	4054c0 <ferror@plt+0x2540>
  404028:	add	x0, sp, #0x1f0
  40402c:	b	403698 <ferror@plt+0x718>
  404030:	ldr	x0, [x0, #64]
  404034:	b	403ef8 <ferror@plt+0xf78>
  404038:	ldr	x0, [sp, #192]
  40403c:	cbnz	x0, 404140 <ferror@plt+0x11c0>
  404040:	mov	w2, #0x5                   	// #5
  404044:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404048:	mov	x0, #0x0                   	// #0
  40404c:	add	x1, x1, #0x7d1
  404050:	bl	402e60 <dcgettext@plt>
  404054:	mov	x3, x0
  404058:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40405c:	mov	w1, #0x0                   	// #0
  404060:	add	x2, x2, #0x2b4
  404064:	mov	w0, #0x0                   	// #0
  404068:	bl	4028c0 <error@plt>
  40406c:	ldrb	w0, [x20, #1339]
  404070:	mov	w2, #0x5                   	// #5
  404074:	cbz	w0, 404154 <ferror@plt+0x11d4>
  404078:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40407c:	mov	x0, #0x0                   	// #0
  404080:	add	x1, x1, #0x7e6
  404084:	bl	402e60 <dcgettext@plt>
  404088:	mov	x1, #0x0                   	// #0
  40408c:	mov	x22, x0
  404090:	mov	w0, #0x3                   	// #3
  404094:	bl	402f70 <setlocale@plt>
  404098:	bl	40cef8 <ferror@plt+0x9f78>
  40409c:	mov	x3, x0
  4040a0:	mov	x2, x22
  4040a4:	mov	w1, #0x0                   	// #0
  4040a8:	mov	w0, #0x0                   	// #0
  4040ac:	bl	4028c0 <error@plt>
  4040b0:	mov	x22, #0x1                   	// #1
  4040b4:	add	x1, sp, #0x1a8
  4040b8:	add	x0, sp, #0x1f0
  4040bc:	mov	x2, #0x48                  	// #72
  4040c0:	bl	402820 <memcpy@plt>
  4040c4:	add	x0, sp, #0xf8
  4040c8:	ldr	x27, [x20, #1328]
  4040cc:	add	x0, x0, x22
  4040d0:	str	x0, [sp, #136]
  4040d4:	add	x0, sp, #0x12b
  4040d8:	str	x0, [sp, #144]
  4040dc:	cbnz	x27, 404174 <ferror@plt+0x11f4>
  4040e0:	add	x0, sp, #0x1f0
  4040e4:	bl	405468 <ferror@plt+0x24e8>
  4040e8:	ldrb	w22, [sp, #551]
  4040ec:	tst	w0, #0xff
  4040f0:	b.eq	404514 <ferror@plt+0x1594>  // b.none
  4040f4:	cbz	w22, 404580 <ferror@plt+0x1600>
  4040f8:	ldrb	w0, [x20, #1338]
  4040fc:	cbnz	w0, 40450c <ferror@plt+0x158c>
  404100:	ldrb	w0, [x20, #1337]
  404104:	cbnz	w0, 40450c <ferror@plt+0x158c>
  404108:	ldrb	w0, [x20, #1337]
  40410c:	cbnz	w0, 404580 <ferror@plt+0x1600>
  404110:	ldr	x0, [x20, #1328]
  404114:	cbz	x0, 404580 <ferror@plt+0x1600>
  404118:	mov	w2, #0x5                   	// #5
  40411c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404120:	mov	x0, #0x0                   	// #0
  404124:	add	x1, x1, #0x94c
  404128:	bl	402e60 <dcgettext@plt>
  40412c:	mov	x2, x0
  404130:	mov	w1, #0x0                   	// #0
  404134:	mov	w0, #0x0                   	// #0
  404138:	bl	4028c0 <error@plt>
  40413c:	b	404580 <ferror@plt+0x1600>
  404140:	ldr	x1, [sp, #176]
  404144:	mov	w0, #0x3                   	// #3
  404148:	bl	402f70 <setlocale@plt>
  40414c:	cbnz	x0, 40406c <ferror@plt+0x10ec>
  404150:	b	404040 <ferror@plt+0x10c0>
  404154:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404158:	mov	x0, #0x0                   	// #0
  40415c:	add	x1, x1, #0x815
  404160:	bl	402e60 <dcgettext@plt>
  404164:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  404168:	mov	x3, x0
  40416c:	add	x2, x2, #0x2b4
  404170:	b	4040a4 <ferror@plt+0x1124>
  404174:	ldrb	w0, [x27, #57]
  404178:	cbz	w0, 4042d0 <ferror@plt+0x1350>
  40417c:	ldr	x3, [x27]
  404180:	cmn	x3, #0x1
  404184:	b.ne	40418c <ferror@plt+0x120c>  // b.any
  404188:	mov	x3, #0x0                   	// #0
  40418c:	ldr	x4, [x27, #16]
  404190:	mov	w0, #0x2b                  	// #43
  404194:	add	x1, sp, #0xe0
  404198:	str	x3, [sp, #168]
  40419c:	str	x4, [sp, #184]
  4041a0:	strh	w0, [sp, #248]
  4041a4:	mov	x0, x3
  4041a8:	bl	40b2e8 <ferror@plt+0x8368>
  4041ac:	mov	x1, x0
  4041b0:	ldr	x0, [sp, #136]
  4041b4:	bl	4029a0 <stpcpy@plt>
  4041b8:	mov	x2, x0
  4041bc:	ldr	x3, [sp, #168]
  4041c0:	mov	w0, #0x6b2d                	// #27437
  4041c4:	movk	w0, #0x20, lsl #16
  4041c8:	add	x1, sp, #0xe0
  4041cc:	str	x2, [sp, #152]
  4041d0:	str	w0, [sp, #296]
  4041d4:	add	x0, x3, #0x1
  4041d8:	bl	40b2e8 <ferror@plt+0x8368>
  4041dc:	mov	x1, x0
  4041e0:	ldr	x0, [sp, #144]
  4041e4:	bl	4029a0 <stpcpy@plt>
  4041e8:	mov	x3, x0
  4041ec:	ldr	x0, [x27, #16]
  4041f0:	str	x3, [sp, #176]
  4041f4:	cmn	x0, #0x1
  4041f8:	b.eq	40427c <ferror@plt+0x12fc>  // b.none
  4041fc:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  404200:	add	x0, x0, #0x84a
  404204:	ldr	x2, [sp, #152]
  404208:	ldr	x4, [sp, #184]
  40420c:	ldrh	w1, [x0]
  404210:	add	x4, x4, #0x1
  404214:	ldrb	w0, [x0, #2]
  404218:	strh	w1, [x2]
  40421c:	add	x1, sp, #0xe0
  404220:	strb	w0, [x2, #2]!
  404224:	mov	x0, x4
  404228:	str	x4, [sp, #168]
  40422c:	str	x2, [sp, #152]
  404230:	bl	40b2e8 <ferror@plt+0x8368>
  404234:	ldr	x2, [sp, #152]
  404238:	mov	x1, x0
  40423c:	mov	x0, x2
  404240:	bl	402dc0 <strcpy@plt>
  404244:	ldp	x4, x3, [sp, #168]
  404248:	mov	w0, #0x2c                  	// #44
  40424c:	add	x1, sp, #0xe0
  404250:	strh	w0, [x3], #1
  404254:	ldr	x0, [x27, #24]
  404258:	str	x3, [sp, #152]
  40425c:	str	x3, [sp, #176]
  404260:	cmn	x0, #0x1
  404264:	cinc	x0, x4, eq  // eq = none
  404268:	bl	40b2e8 <ferror@plt+0x8368>
  40426c:	mov	x1, x0
  404270:	ldr	x3, [sp, #152]
  404274:	mov	x0, x3
  404278:	bl	402dc0 <strcpy@plt>
  40427c:	mov	w2, #0x5                   	// #5
  404280:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404284:	mov	x0, #0x0                   	// #0
  404288:	add	x1, x1, #0x84d
  40428c:	bl	402e60 <dcgettext@plt>
  404290:	mov	x2, x0
  404294:	add	x1, sp, #0xf8
  404298:	mov	w0, #0x0                   	// #0
  40429c:	str	x2, [sp, #168]
  4042a0:	bl	40cef0 <ferror@plt+0x9f70>
  4042a4:	mov	x3, x0
  4042a8:	add	x1, sp, #0x128
  4042ac:	mov	w0, #0x1                   	// #1
  4042b0:	str	x3, [sp, #152]
  4042b4:	bl	40cef0 <ferror@plt+0x9f70>
  4042b8:	mov	x4, x0
  4042bc:	ldr	x3, [sp, #152]
  4042c0:	mov	w1, #0x0                   	// #0
  4042c4:	ldr	x2, [sp, #168]
  4042c8:	mov	w0, #0x0                   	// #0
  4042cc:	bl	4028c0 <error@plt>
  4042d0:	ldr	x0, [x27]
  4042d4:	cmn	x0, #0x1
  4042d8:	b.eq	404400 <ferror@plt+0x1480>  // b.none
  4042dc:	ldr	x1, [x27, #16]
  4042e0:	cmp	x0, x1
  4042e4:	b.ls	404400 <ferror@plt+0x1480>  // b.plast
  4042e8:	mov	w2, #0x5                   	// #5
  4042ec:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4042f0:	mov	x0, #0x0                   	// #0
  4042f4:	add	x1, x1, #0x87a
  4042f8:	bl	402e60 <dcgettext@plt>
  4042fc:	mov	x2, x0
  404300:	mov	w1, #0x0                   	// #0
  404304:	mov	x3, x22
  404308:	mov	w0, #0x0                   	// #0
  40430c:	bl	4028c0 <error@plt>
  404310:	mov	w1, w26
  404314:	ldr	x0, [x27, #48]
  404318:	and	x0, x0, #0xffffffff0000
  40431c:	and	x0, x0, #0xffffffff00ffffff
  404320:	cbnz	x0, 404408 <ferror@plt+0x1488>
  404324:	ldrb	w0, [x27, #54]
  404328:	ldr	x2, [x27, #16]
  40432c:	cbnz	x2, 404410 <ferror@plt+0x1490>
  404330:	ldr	x2, [x27, #24]
  404334:	cmp	x2, #0x0
  404338:	cset	w2, ne  // ne = any
  40433c:	cmp	w25, #0x0
  404340:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  404344:	b.ne	404418 <ferror@plt+0x1498>  // b.any
  404348:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40434c:	ldr	w1, [x1, #976]
  404350:	cmp	w1, #0x100
  404354:	b.ne	4043a8 <ferror@plt+0x1428>  // b.any
  404358:	cbnz	w2, 4043a8 <ferror@plt+0x1428>
  40435c:	ldrb	w1, [x27, #48]
  404360:	cbnz	w1, 404370 <ferror@plt+0x13f0>
  404364:	cbz	w0, 404380 <ferror@plt+0x1400>
  404368:	ldr	x0, [x27, #8]
  40436c:	cbnz	x0, 404380 <ferror@plt+0x1400>
  404370:	ldrb	w0, [x27, #49]
  404374:	cbnz	w0, 4043a8 <ferror@plt+0x1428>
  404378:	ldr	x0, [x27, #24]
  40437c:	cbz	x0, 4043a8 <ferror@plt+0x1428>
  404380:	mov	w2, #0x5                   	// #5
  404384:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404388:	mov	x0, #0x0                   	// #0
  40438c:	add	x1, x1, #0x8a5
  404390:	bl	402e60 <dcgettext@plt>
  404394:	mov	x2, x0
  404398:	mov	x3, x22
  40439c:	mov	w1, #0x0                   	// #0
  4043a0:	mov	w0, #0x0                   	// #0
  4043a4:	bl	4028c0 <error@plt>
  4043a8:	ldr	x0, [x27, #48]
  4043ac:	and	x0, x0, #0xffffffff0000
  4043b0:	and	x0, x0, #0xffffffff00ffffff
  4043b4:	cbz	x0, 40441c <ferror@plt+0x149c>
  4043b8:	ldr	x0, [x27]
  4043bc:	ldr	x1, [x27, #16]
  4043c0:	adds	x0, x0, #0x1
  4043c4:	csinc	x0, x0, xzr, ne  // ne = any
  4043c8:	adds	x1, x1, #0x1
  4043cc:	ccmp	x1, x0, #0x2, ne  // ne = any
  4043d0:	b.ls	40441c <ferror@plt+0x149c>  // b.plast
  4043d4:	mov	w2, #0x5                   	// #5
  4043d8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4043dc:	mov	x0, #0x0                   	// #0
  4043e0:	add	x1, x1, #0x8ed
  4043e4:	bl	402e60 <dcgettext@plt>
  4043e8:	mov	x2, x0
  4043ec:	mov	x3, x22
  4043f0:	mov	w1, #0x0                   	// #0
  4043f4:	mov	w0, #0x0                   	// #0
  4043f8:	bl	4028c0 <error@plt>
  4043fc:	b	40441c <ferror@plt+0x149c>
  404400:	mov	w1, #0x0                   	// #0
  404404:	b	404314 <ferror@plt+0x1394>
  404408:	mov	w0, #0x1                   	// #1
  40440c:	b	404328 <ferror@plt+0x13a8>
  404410:	mov	w2, #0x0                   	// #0
  404414:	b	40433c <ferror@plt+0x13bc>
  404418:	cbz	w25, 4043a8 <ferror@plt+0x1428>
  40441c:	ldr	x0, [sp, #528]
  404420:	cbz	x0, 404434 <ferror@plt+0x14b4>
  404424:	ldr	x1, [x27, #32]
  404428:	cmp	x0, x1
  40442c:	b.ne	404434 <ferror@plt+0x14b4>  // b.any
  404430:	str	xzr, [sp, #528]
  404434:	ldr	x0, [sp, #536]
  404438:	cbz	x0, 40444c <ferror@plt+0x14cc>
  40443c:	ldr	x1, [x27, #40]
  404440:	cmp	x0, x1
  404444:	b.ne	40444c <ferror@plt+0x14cc>  // b.any
  404448:	str	xzr, [sp, #536]
  40444c:	ldrb	w0, [x27, #48]
  404450:	add	x22, x22, #0x1
  404454:	ldrb	w1, [sp, #544]
  404458:	eor	w0, w0, #0x1
  40445c:	and	w0, w0, w1
  404460:	strb	w0, [sp, #544]
  404464:	ldrb	w0, [x27, #49]
  404468:	ldrb	w1, [sp, #545]
  40446c:	eor	w0, w0, #0x1
  404470:	and	w0, w0, w1
  404474:	strb	w0, [sp, #545]
  404478:	ldrb	w0, [x27, #54]
  40447c:	ldrb	w1, [sp, #550]
  404480:	eor	w0, w0, #0x1
  404484:	and	w0, w0, w1
  404488:	strb	w0, [sp, #550]
  40448c:	ldrb	w0, [x27, #50]
  404490:	ldrb	w1, [sp, #546]
  404494:	eor	w0, w0, #0x1
  404498:	and	w0, w0, w1
  40449c:	strb	w0, [sp, #546]
  4044a0:	ldrb	w0, [x27, #52]
  4044a4:	ldrb	w1, [sp, #548]
  4044a8:	eor	w0, w0, #0x1
  4044ac:	and	w0, w0, w1
  4044b0:	strb	w0, [sp, #548]
  4044b4:	ldrb	w0, [x27, #53]
  4044b8:	ldrb	w1, [sp, #549]
  4044bc:	eor	w0, w0, #0x1
  4044c0:	and	w0, w0, w1
  4044c4:	strb	w0, [sp, #549]
  4044c8:	ldrb	w0, [x27, #51]
  4044cc:	ldrb	w1, [sp, #547]
  4044d0:	eor	w0, w0, #0x1
  4044d4:	and	w0, w0, w1
  4044d8:	strb	w0, [sp, #547]
  4044dc:	ldrb	w0, [x27, #56]
  4044e0:	ldrb	w1, [sp, #552]
  4044e4:	eor	w0, w0, #0x1
  4044e8:	and	w0, w0, w1
  4044ec:	strb	w0, [sp, #552]
  4044f0:	ldrb	w0, [x27, #55]
  4044f4:	ldrb	w1, [sp, #551]
  4044f8:	eor	w0, w0, #0x1
  4044fc:	and	w0, w0, w1
  404500:	strb	w0, [sp, #551]
  404504:	ldr	x27, [x27, #64]
  404508:	b	4040dc <ferror@plt+0x115c>
  40450c:	ldr	x0, [x20, #1328]
  404510:	cbz	x0, 404578 <ferror@plt+0x15f8>
  404514:	ldrb	w0, [x20, #1338]
  404518:	cbnz	w0, 404528 <ferror@plt+0x15a8>
  40451c:	ldrb	w0, [x20, #1337]
  404520:	cbnz	w0, 404528 <ferror@plt+0x15a8>
  404524:	strb	wzr, [sp, #551]
  404528:	add	x1, sp, #0x128
  40452c:	add	x0, sp, #0x1f0
  404530:	bl	4054c0 <ferror@plt+0x2540>
  404534:	add	x0, sp, #0x128
  404538:	bl	402880 <strlen@plt>
  40453c:	mov	x3, x0
  404540:	mov	w4, #0x5                   	// #5
  404544:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  404548:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40454c:	add	x2, x2, #0x91a
  404550:	add	x1, x1, #0x934
  404554:	mov	x0, #0x0                   	// #0
  404558:	bl	402da0 <dcngettext@plt>
  40455c:	mov	x2, x0
  404560:	add	x3, sp, #0x128
  404564:	mov	w1, #0x0                   	// #0
  404568:	mov	w0, #0x0                   	// #0
  40456c:	bl	4028c0 <error@plt>
  404570:	strb	w22, [sp, #551]
  404574:	cbz	w22, 404580 <ferror@plt+0x1600>
  404578:	ldrb	w0, [x20, #1338]
  40457c:	cbz	w0, 404108 <ferror@plt+0x1188>
  404580:	ldrb	w0, [sp, #479]
  404584:	strb	w0, [x20, #1517]
  404588:	cbz	w21, 404600 <ferror@plt+0x1680>
  40458c:	mov	x0, x28
  404590:	mov	x1, #0x10                  	// #16
  404594:	bl	40cf74 <ferror@plt+0x9ff4>
  404598:	mov	x21, x0
  40459c:	cbnz	x0, 4045b8 <ferror@plt+0x1638>
  4045a0:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4045a4:	add	x1, x1, #0x359
  4045a8:	mov	w2, #0x5                   	// #5
  4045ac:	bl	402e60 <dcgettext@plt>
  4045b0:	mov	x1, x28
  4045b4:	bl	405830 <ferror@plt+0x28b0>
  4045b8:	add	x1, sp, #0x1f0
  4045bc:	mov	x2, #0x10                  	// #16
  4045c0:	bl	40d198 <ferror@plt+0xa218>
  4045c4:	mov	x0, x21
  4045c8:	bl	40d2c0 <ferror@plt+0xa340>
  4045cc:	cbz	w0, 4045e4 <ferror@plt+0x1664>
  4045d0:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4045d4:	mov	w2, #0x5                   	// #5
  4045d8:	add	x1, x1, #0x373
  4045dc:	mov	x0, #0x0                   	// #0
  4045e0:	b	4045ac <ferror@plt+0x162c>
  4045e4:	add	x21, x20, #0x53c
  4045e8:	mov	x0, x21
  4045ec:	bl	409158 <ferror@plt+0x61d8>
  4045f0:	mov	x2, x21
  4045f4:	add	x0, sp, #0x1f0
  4045f8:	mov	x1, #0x10                  	// #16
  4045fc:	bl	409ca0 <ferror@plt+0x6d20>
  404600:	ldr	x0, [sp, #200]
  404604:	ldr	x0, [x0, #1408]
  404608:	cbnz	x0, 404628 <ferror@plt+0x16a8>
  40460c:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  404610:	add	x0, x0, #0x97f
  404614:	bl	402f10 <getenv@plt>
  404618:	cbnz	x0, 404624 <ferror@plt+0x16a4>
  40461c:	adrp	x0, 410000 <_obstack_memory_used@@Base+0x920>
  404620:	add	x0, x0, #0xfd7
  404624:	bl	40503c <ferror@plt+0x20bc>
  404628:	cbnz	x23, 404650 <ferror@plt+0x16d0>
  40462c:	mov	x0, x19
  404630:	bl	402ce0 <free@plt>
  404634:	mov	x0, #0x8                   	// #8
  404638:	bl	40e344 <ferror@plt+0xb3c4>
  40463c:	mov	x19, x0
  404640:	mov	x23, #0x1                   	// #1
  404644:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  404648:	add	x0, x0, #0x84b
  40464c:	str	x0, [x19]
  404650:	ldr	x1, [x20, #1560]
  404654:	cbz	x1, 404674 <ferror@plt+0x16f4>
  404658:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40465c:	mov	w2, #0x22                  	// #34
  404660:	ldr	w0, [x0, #1192]
  404664:	umull	x0, w0, w2
  404668:	cmp	x0, x1
  40466c:	csel	x0, x0, x1, cs  // cs = hs, nlast
  404670:	str	x0, [x20, #1560]
  404674:	cbz	w24, 4048ec <ferror@plt+0x196c>
  404678:	cmp	x23, #0x1
  40467c:	b.ls	4046bc <ferror@plt+0x173c>  // b.plast
  404680:	mov	w2, #0x5                   	// #5
  404684:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404688:	mov	x0, #0x0                   	// #0
  40468c:	add	x1, x1, #0x986
  404690:	bl	402e60 <dcgettext@plt>
  404694:	mov	x20, x0
  404698:	ldr	x1, [x19, #8]
  40469c:	mov	w0, #0x4                   	// #4
  4046a0:	bl	40cd1c <ferror@plt+0x9d9c>
  4046a4:	mov	x3, x0
  4046a8:	mov	w4, w24
  4046ac:	mov	x2, x20
  4046b0:	mov	w1, #0x0                   	// #0
  4046b4:	mov	w0, #0x2                   	// #2
  4046b8:	bl	4028c0 <error@plt>
  4046bc:	ldr	x0, [sp, #120]
  4046c0:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x16920>
  4046c4:	add	x23, x23, #0x3d0
  4046c8:	cbz	x0, 4046d8 <ferror@plt+0x1758>
  4046cc:	add	x0, x23, #0xf2
  4046d0:	strb	w24, [x23, #242]
  4046d4:	b	403698 <ferror@plt+0x718>
  4046d8:	ldr	x22, [x19]
  4046dc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4046e0:	add	x1, x1, #0xa6d
  4046e4:	mov	x0, x22
  4046e8:	bl	407138 <ferror@plt+0x41b8>
  4046ec:	mov	x21, x0
  4046f0:	ldrb	w25, [x20, #1337]
  4046f4:	ldr	x0, [x23, #208]
  4046f8:	eor	w25, w25, #0x1
  4046fc:	ldr	x2, [x20, #1560]
  404700:	mov	x1, #0x20                  	// #32
  404704:	mov	x23, #0x0                   	// #0
  404708:	cmp	x2, x0
  40470c:	csel	x2, x2, x0, cs  // cs = hs, nlast
  404710:	add	x0, sp, #0x1f0
  404714:	ldr	x26, [x20, #1328]
  404718:	bl	405934 <ferror@plt+0x29b4>
  40471c:	mov	x20, #0x0                   	// #0
  404720:	str	xzr, [sp, #296]
  404724:	mov	x2, x22
  404728:	mov	x1, x21
  40472c:	add	x0, sp, #0x1f0
  404730:	bl	406768 <ferror@plt+0x37e8>
  404734:	tst	w0, #0xff
  404738:	b.ne	404784 <ferror@plt+0x1804>  // b.any
  40473c:	mov	w19, #0x1                   	// #1
  404740:	mov	x1, x22
  404744:	mov	x0, x21
  404748:	bl	407174 <ferror@plt+0x41f4>
  40474c:	ldr	x0, [sp, #496]
  404750:	bl	402ce0 <free@plt>
  404754:	ldr	x0, [sp, #296]
  404758:	bl	402ce0 <free@plt>
  40475c:	eor	w0, w19, #0x1
  404760:	ldp	x29, x30, [sp]
  404764:	ldp	x19, x20, [sp, #16]
  404768:	ldp	x21, x22, [sp, #32]
  40476c:	ldp	x23, x24, [sp, #48]
  404770:	ldp	x25, x26, [sp, #64]
  404774:	ldp	x27, x28, [sp, #80]
  404778:	ldr	d8, [sp, #96]
  40477c:	add	sp, sp, #0x390
  404780:	ret
  404784:	ldr	x19, [sp, #496]
  404788:	ldr	x27, [sp, #512]
  40478c:	ldr	x0, [sp, #520]
  404790:	add	x19, x19, x0
  404794:	sub	x27, x19, x27, lsl #5
  404798:	cbz	x20, 40485c <ferror@plt+0x18dc>
  40479c:	sub	x1, x19, #0x20
  4047a0:	add	x0, sp, #0x128
  4047a4:	bl	407204 <ferror@plt+0x4284>
  4047a8:	cmp	w25, w0
  4047ac:	b.gt	40485c <ferror@plt+0x18dc>
  4047b0:	cmp	w24, #0x63
  4047b4:	b.ne	404848 <ferror@plt+0x18c8>  // b.any
  4047b8:	ldr	x20, [sp, #496]
  4047bc:	sub	x19, x19, #0x20
  4047c0:	ldr	x0, [sp, #520]
  4047c4:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x16920>
  4047c8:	mov	w2, #0x5                   	// #5
  4047cc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  4047d0:	add	x20, x20, x0
  4047d4:	add	x1, x1, #0x9ac
  4047d8:	sub	x20, x20, x19
  4047dc:	mov	x0, #0x0                   	// #0
  4047e0:	ldr	x25, [x24, #1352]
  4047e4:	bl	402e60 <dcgettext@plt>
  4047e8:	add	x20, x23, x20, asr #5
  4047ec:	mov	x23, x0
  4047f0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4047f4:	add	x1, sp, #0xf8
  4047f8:	ldr	x26, [x0, #3008]
  4047fc:	mov	x0, x20
  404800:	bl	40b2e8 <ferror@plt+0x8368>
  404804:	mov	x5, x0
  404808:	mov	x4, x22
  40480c:	mov	x3, x26
  404810:	mov	x2, x23
  404814:	mov	w1, #0x1                   	// #1
  404818:	mov	x0, x25
  40481c:	bl	402c70 <__fprintf_chk@plt>
  404820:	ldr	x20, [x24, #1352]
  404824:	mov	w2, #0x5                   	// #5
  404828:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40482c:	mov	x0, #0x0                   	// #0
  404830:	add	x1, x1, #0x9c2
  404834:	bl	402e60 <dcgettext@plt>
  404838:	mov	x1, x20
  40483c:	mov	x2, x0
  404840:	mov	x0, x19
  404844:	bl	4059e0 <ferror@plt+0x2a60>
  404848:	mov	w19, #0x0                   	// #0
  40484c:	b	404740 <ferror@plt+0x17c0>
  404850:	sub	x1, x19, #0x20
  404854:	mov	x0, x19
  404858:	b	4047a4 <ferror@plt+0x1824>
  40485c:	sub	x19, x19, #0x20
  404860:	cmp	x27, x19
  404864:	b.cc	404850 <ferror@plt+0x18d0>  // b.lo, b.ul, b.last
  404868:	ldr	x0, [sp, #512]
  40486c:	add	x23, x23, x0
  404870:	ldr	x0, [x19, #8]
  404874:	cmp	x20, x0
  404878:	b.cs	4048a0 <ferror@plt+0x1920>  // b.hs, b.nlast
  40487c:	lsl	x20, x20, #1
  404880:	cbz	x20, 4048e4 <ferror@plt+0x1964>
  404884:	cmp	x0, x20
  404888:	b.hi	40487c <ferror@plt+0x18fc>  // b.pmore
  40488c:	ldr	x0, [sp, #296]
  404890:	bl	402ce0 <free@plt>
  404894:	mov	x0, x20
  404898:	bl	40e344 <ferror@plt+0xb3c4>
  40489c:	str	x0, [sp, #296]
  4048a0:	ldp	x1, x2, [x19]
  4048a4:	ldr	x0, [sp, #296]
  4048a8:	bl	402820 <memcpy@plt>
  4048ac:	ldr	x0, [x19, #8]
  4048b0:	str	x0, [sp, #304]
  4048b4:	cbz	x26, 404724 <ferror@plt+0x17a4>
  4048b8:	ldr	x2, [x19]
  4048bc:	ldr	x0, [x19, #16]
  4048c0:	ldr	x1, [sp, #296]
  4048c4:	sub	x0, x0, x2
  4048c8:	add	x0, x1, x0
  4048cc:	str	x0, [sp, #312]
  4048d0:	ldr	x0, [x19, #24]
  4048d4:	sub	x0, x0, x2
  4048d8:	add	x1, x1, x0
  4048dc:	str	x1, [sp, #320]
  4048e0:	b	404724 <ferror@plt+0x17a4>
  4048e4:	mov	x20, x0
  4048e8:	b	40488c <ferror@plt+0x190c>
  4048ec:	adrp	x27, 411000 <_obstack_memory_used@@Base+0x1920>
  4048f0:	mov	x20, #0x0                   	// #0
  4048f4:	add	x0, x27, #0x84b
  4048f8:	str	x0, [sp, #144]
  4048fc:	ldr	x1, [sp, #144]
  404900:	add	x22, x19, x20, lsl #3
  404904:	ldr	x21, [x19, x20, lsl #3]
  404908:	mov	x0, x21
  40490c:	bl	402c90 <strcmp@plt>
  404910:	cbz	w0, 404948 <ferror@plt+0x19c8>
  404914:	mov	x0, x21
  404918:	mov	w1, #0x4                   	// #4
  40491c:	bl	402950 <euidaccess@plt>
  404920:	cbz	w0, 404948 <ferror@plt+0x19c8>
  404924:	mov	w2, #0x5                   	// #5
  404928:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40492c:	mov	x0, #0x0                   	// #0
  404930:	add	x1, x1, #0x9d1
  404934:	bl	402e60 <dcgettext@plt>
  404938:	ldr	x1, [x22]
  40493c:	b	4045b4 <ferror@plt+0x1634>
  404940:	mov	x20, x21
  404944:	b	4048fc <ferror@plt+0x197c>
  404948:	add	x21, x20, #0x1
  40494c:	cmp	x23, x21
  404950:	b.ne	404940 <ferror@plt+0x19c0>  // b.any
  404954:	ldr	x0, [sp, #120]
  404958:	cbz	x0, 404994 <ferror@plt+0x1a14>
  40495c:	mov	w1, #0x41                  	// #65
  404960:	mov	w2, #0x1b6                 	// #438
  404964:	movk	w1, #0x8, lsl #16
  404968:	bl	402a50 <open@plt>
  40496c:	tbz	w0, #31, 40498c <ferror@plt+0x1a0c>
  404970:	mov	w2, #0x5                   	// #5
  404974:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  404978:	mov	x0, #0x0                   	// #0
  40497c:	add	x1, x1, #0x359
  404980:	bl	402e60 <dcgettext@plt>
  404984:	ldr	x1, [sp, #120]
  404988:	b	4045b4 <ferror@plt+0x1634>
  40498c:	mov	w1, #0x1                   	// #1
  404990:	bl	40753c <ferror@plt+0x45bc>
  404994:	ldr	w0, [sp, #164]
  404998:	cbz	w0, 404a10 <ferror@plt+0x1a90>
  40499c:	mov	x1, #0x10                  	// #16
  4049a0:	mov	x0, x21
  4049a4:	bl	40e4ac <ferror@plt+0xb52c>
  4049a8:	mov	x1, #0x0                   	// #0
  4049ac:	lsl	x2, x1, #4
  4049b0:	cmp	x1, x20
  4049b4:	ldr	x3, [x19, x1, lsl #3]
  4049b8:	add	x1, x1, #0x1
  4049bc:	str	x3, [x0, x2]
  4049c0:	b.ne	4049ac <ferror@plt+0x1a2c>  // b.any
  4049c4:	ldr	x3, [sp, #120]
  4049c8:	mov	x2, x21
  4049cc:	mov	x1, #0x0                   	// #0
  4049d0:	bl	408590 <ferror@plt+0x5610>
  4049d4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4049d8:	ldrb	w0, [x0, #2924]
  4049dc:	cbz	w0, 404ee4 <ferror@plt+0x1f64>
  4049e0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4049e4:	ldr	x0, [x0, #1384]
  4049e8:	bl	40ef28 <ferror@plt+0xbfa8>
  4049ec:	cmn	w0, #0x1
  4049f0:	b.ne	404ee4 <ferror@plt+0x1f64>  // b.any
  4049f4:	mov	w2, #0x5                   	// #5
  4049f8:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4049fc:	mov	x0, #0x0                   	// #0
  404a00:	add	x1, x1, #0x373
  404a04:	bl	402e60 <dcgettext@plt>
  404a08:	ldr	x1, [sp, #144]
  404a0c:	b	4045b4 <ferror@plt+0x1634>
  404a10:	ldr	x0, [sp, #128]
  404a14:	cbnz	x0, 404a30 <ferror@plt+0x1ab0>
  404a18:	mov	w0, #0x2                   	// #2
  404a1c:	bl	40b5cc <ferror@plt+0x864c>
  404a20:	cmp	x0, #0x8
  404a24:	mov	x1, #0x8                   	// #8
  404a28:	csel	x0, x0, x1, ls  // ls = plast
  404a2c:	str	x0, [sp, #128]
  404a30:	ldr	x0, [sp, #128]
  404a34:	mov	x22, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  404a38:	movk	x22, #0xf0, lsl #48
  404a3c:	mov	x25, #0x0                   	// #0
  404a40:	cmp	x0, x22
  404a44:	str	xzr, [sp, #320]
  404a48:	csel	x22, x0, x22, ls  // ls = plast
  404a4c:	lsl	x0, x22, #1
  404a50:	str	x0, [sp, #176]
  404a54:	mov	x0, #0x110                 	// #272
  404a58:	mul	x0, x22, x0
  404a5c:	str	x0, [sp, #168]
  404a60:	add	x0, sp, #0x1f8
  404a64:	str	x0, [sp, #184]
  404a68:	ldr	x28, [x19]
  404a6c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404a70:	add	x1, x1, #0xa6d
  404a74:	mov	x0, x28
  404a78:	bl	407138 <ferror@plt+0x41b8>
  404a7c:	mov	x26, x0
  404a80:	ldr	x0, [sp, #128]
  404a84:	cmp	x0, #0x1
  404a88:	b.hi	404b00 <ferror@plt+0x1b80>  // b.pmore
  404a8c:	mov	x20, #0x30                  	// #48
  404a90:	ldr	x24, [sp, #320]
  404a94:	cbnz	x24, 404c90 <ferror@plt+0x1d10>
  404a98:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x16920>
  404a9c:	add	x27, x20, #0x2
  404aa0:	add	x23, x23, #0x580
  404aa4:	add	x0, x20, #0x1
  404aa8:	str	x0, [sp, #152]
  404aac:	cbnz	x24, 404b0c <ferror@plt+0x1b8c>
  404ab0:	mov	x0, x26
  404ab4:	bl	4029b0 <fileno@plt>
  404ab8:	add	x1, sp, #0x1f0
  404abc:	bl	410130 <_obstack_memory_used@@Base+0xa50>
  404ac0:	cmp	w0, #0x0
  404ac4:	cset	w0, ne  // ne = any
  404ac8:	cbz	w0, 404b38 <ferror@plt+0x1bb8>
  404acc:	mov	w2, #0x5                   	// #5
  404ad0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  404ad4:	mov	x0, #0x0                   	// #0
  404ad8:	add	x1, x1, #0x9dd
  404adc:	bl	402e60 <dcgettext@plt>
  404ae0:	ldr	x1, [x19, x24, lsl #3]
  404ae4:	b	4045b4 <ferror@plt+0x1634>
  404ae8:	lsl	x0, x0, #1
  404aec:	add	x20, x20, #0x1
  404af0:	cmp	x22, x0
  404af4:	b.hi	404ae8 <ferror@plt+0x1b68>  // b.pmore
  404af8:	lsl	x20, x20, #5
  404afc:	b	404a90 <ferror@plt+0x1b10>
  404b00:	mov	x20, #0x1                   	// #1
  404b04:	mov	x0, x20
  404b08:	b	404af0 <ferror@plt+0x1b70>
  404b0c:	ldr	x2, [x19, x24, lsl #3]
  404b10:	str	x2, [sp, #136]
  404b14:	ldr	x1, [sp, #144]
  404b18:	mov	x0, x2
  404b1c:	bl	402c90 <strcmp@plt>
  404b20:	add	x1, sp, #0x1f0
  404b24:	ldr	x2, [sp, #136]
  404b28:	cbz	w0, 404abc <ferror@plt+0x1b3c>
  404b2c:	mov	x0, x2
  404b30:	bl	410120 <_obstack_memory_used@@Base+0xa40>
  404b34:	b	404ac0 <ferror@plt+0x1b40>
  404b38:	ldr	w0, [sp, #512]
  404b3c:	and	w0, w0, #0xf000
  404b40:	cmp	w0, #0x8, lsl #12
  404b44:	b.ne	404d00 <ferror@plt+0x1d80>  // b.any
  404b48:	ldr	x0, [sp, #544]
  404b4c:	str	x0, [sp, #136]
  404b50:	ldr	x0, [x23, #1576]
  404b54:	cbnz	x0, 404c3c <ferror@plt+0x1cbc>
  404b58:	ldr	x0, [x23, #1560]
  404b5c:	str	x0, [x23, #1576]
  404b60:	cbnz	x0, 404c3c <ferror@plt+0x1cbc>
  404b64:	add	x1, sp, #0xf8
  404b68:	mov	w0, #0x2                   	// #2
  404b6c:	bl	402de0 <getrlimit@plt>
  404b70:	cmp	w0, #0x0
  404b74:	ldr	x2, [sp, #248]
  404b78:	add	x1, sp, #0xf8
  404b7c:	mov	w0, #0x9                   	// #9
  404b80:	csinv	x2, x2, xzr, eq  // eq = none
  404b84:	str	x2, [sp, #192]
  404b88:	bl	402de0 <getrlimit@plt>
  404b8c:	ldr	x2, [sp, #192]
  404b90:	cbnz	w0, 404ba0 <ferror@plt+0x1c20>
  404b94:	ldr	x0, [sp, #248]
  404b98:	cmp	x2, x0
  404b9c:	csel	x2, x2, x0, ls  // ls = plast
  404ba0:	lsr	x2, x2, #1
  404ba4:	add	x1, sp, #0xf8
  404ba8:	mov	w0, #0x5                   	// #5
  404bac:	str	x2, [sp, #192]
  404bb0:	bl	402de0 <getrlimit@plt>
  404bb4:	ldr	x2, [sp, #192]
  404bb8:	cbnz	w0, 404bd4 <ferror@plt+0x1c54>
  404bbc:	ldr	x0, [sp, #248]
  404bc0:	mov	x1, #0xf                   	// #15
  404bc4:	lsr	x0, x0, #4
  404bc8:	mul	x0, x0, x1
  404bcc:	cmp	x2, x0
  404bd0:	csel	x2, x2, x0, ls  // ls = plast
  404bd4:	str	x2, [sp, #192]
  404bd8:	bl	40b720 <ferror@plt+0x87a0>
  404bdc:	fmov	d8, d0
  404be0:	bl	40b6a8 <ferror@plt+0x8728>
  404be4:	fmov	d1, #1.250000000000000000e-01
  404be8:	ldr	x2, [sp, #192]
  404bec:	fmul	d1, d0, d1
  404bf0:	fcmpe	d8, d1
  404bf4:	fcsel	d8, d8, d1, gt
  404bf8:	fmov	d1, #7.500000000000000000e-01
  404bfc:	fmul	d0, d0, d1
  404c00:	scvtf	d1, x2
  404c04:	fcmpe	d0, d1
  404c08:	b.pl	404c10 <ferror@plt+0x1c90>  // b.nfrst
  404c0c:	fcvtzu	x2, d0
  404c10:	ucvtf	d0, x2
  404c14:	fcmpe	d0, d8
  404c18:	b.le	404c20 <ferror@plt+0x1ca0>
  404c1c:	fcvtzu	x2, d8
  404c20:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404c24:	mov	w1, #0x22                  	// #34
  404c28:	ldr	w0, [x0, #1192]
  404c2c:	umull	x0, w0, w1
  404c30:	cmp	x0, x2
  404c34:	csel	x2, x0, x2, cs  // cs = hs, nlast
  404c38:	str	x2, [x23, #1576]
  404c3c:	ldr	x1, [sp, #136]
  404c40:	ldr	x0, [sp, #152]
  404c44:	ldr	x2, [sp, #152]
  404c48:	mul	x0, x0, x1
  404c4c:	ldr	x3, [sp, #136]
  404c50:	add	x0, x0, #0x1
  404c54:	ldr	x1, [x23, #1576]
  404c58:	udiv	x2, x0, x2
  404c5c:	cmp	x3, x2
  404c60:	b.ne	404d10 <ferror@plt+0x1d90>  // b.any
  404c64:	sub	x2, x1, x27
  404c68:	cmp	x0, x2
  404c6c:	b.cs	404d10 <ferror@plt+0x1d90>  // b.hs, b.nlast
  404c70:	add	x24, x24, #0x1
  404c74:	add	x27, x27, x0
  404c78:	cmp	x24, x21
  404c7c:	b.cc	404aac <ferror@plt+0x1b2c>  // b.lo, b.ul, b.last
  404c80:	mov	x2, x27
  404c84:	mov	x1, x20
  404c88:	add	x0, sp, #0x128
  404c8c:	bl	405934 <ferror@plt+0x29b4>
  404c90:	add	x19, x19, #0x8
  404c94:	sub	x21, x21, #0x1
  404c98:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404c9c:	add	x0, x0, #0x580
  404ca0:	str	x0, [sp, #136]
  404ca4:	strb	wzr, [sp, #344]
  404ca8:	mov	x2, x28
  404cac:	mov	x1, x26
  404cb0:	add	x0, sp, #0x128
  404cb4:	bl	406768 <ferror@plt+0x37e8>
  404cb8:	tst	w0, #0xff
  404cbc:	b.eq	404cec <ferror@plt+0x1d6c>  // b.none
  404cc0:	ldrb	w24, [sp, #344]
  404cc4:	ldr	x2, [sp, #320]
  404cc8:	cbz	w24, 404d18 <ferror@plt+0x1d98>
  404ccc:	cbz	x21, 404d18 <ferror@plt+0x1d98>
  404cd0:	ldp	x3, x0, [sp, #304]
  404cd4:	add	x1, x20, #0x1
  404cd8:	sub	x4, x2, x3
  404cdc:	msub	x0, x20, x0, x4
  404ce0:	cmp	x1, x0
  404ce4:	b.cs	404d18 <ferror@plt+0x1d98>  // b.hs, b.nlast
  404ce8:	str	x3, [sp, #328]
  404cec:	mov	x1, x28
  404cf0:	mov	x0, x26
  404cf4:	bl	407174 <ferror@plt+0x41f4>
  404cf8:	cbnz	x21, 404a68 <ferror@plt+0x1ae8>
  404cfc:	b	404e3c <ferror@plt+0x1ebc>
  404d00:	ldr	x1, [x23, #1560]
  404d04:	cbnz	x1, 404d10 <ferror@plt+0x1d90>
  404d08:	mov	x0, #0x20000               	// #131072
  404d0c:	b	404b4c <ferror@plt+0x1bcc>
  404d10:	mov	x27, x1
  404d14:	b	404c80 <ferror@plt+0x1d00>
  404d18:	ldr	x0, [sp, #136]
  404d1c:	ldr	x23, [sp, #296]
  404d20:	str	xzr, [x0, #1520]
  404d24:	add	x27, x23, x2
  404d28:	cbz	w24, 404ea0 <ferror@plt+0x1f20>
  404d2c:	ldr	x0, [sp, #328]
  404d30:	orr	x0, x21, x0
  404d34:	orr	x0, x0, x25
  404d38:	cbnz	x0, 404ea0 <ferror@plt+0x1f20>
  404d3c:	mov	x1, x28
  404d40:	mov	x0, x26
  404d44:	bl	407174 <ferror@plt+0x41f4>
  404d48:	mov	x25, #0x0                   	// #0
  404d4c:	ldr	x0, [sp, #120]
  404d50:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  404d54:	add	x1, x1, #0x3c5
  404d58:	bl	407138 <ferror@plt+0x41b8>
  404d5c:	str	x0, [sp, #248]
  404d60:	ldr	x23, [sp, #120]
  404d64:	ldr	x0, [sp, #312]
  404d68:	cmp	x0, #0x1
  404d6c:	b.ls	404ebc <ferror@plt+0x1f3c>  // b.plast
  404d70:	ldr	x1, [sp, #176]
  404d74:	adrp	x0, 406000 <ferror@plt+0x3080>
  404d78:	add	x0, x0, #0xd84
  404d7c:	bl	40b030 <ferror@plt+0x80b0>
  404d80:	str	x0, [sp, #496]
  404d84:	ldr	x0, [sp, #184]
  404d88:	mov	x1, #0x0                   	// #0
  404d8c:	bl	402b40 <pthread_mutex_init@plt>
  404d90:	mov	x1, #0x0                   	// #0
  404d94:	add	x0, sp, #0x228
  404d98:	bl	402dd0 <pthread_cond_init@plt>
  404d9c:	ldr	x0, [sp, #168]
  404da0:	ldr	x4, [sp, #312]
  404da4:	str	x4, [sp, #152]
  404da8:	bl	40e344 <ferror@plt+0xb3c4>
  404dac:	mov	x7, x0
  404db0:	ldr	x4, [sp, #152]
  404db4:	strb	wzr, [x0, #84]
  404db8:	stp	xzr, xzr, [x7]
  404dbc:	mov	x1, #0x0                   	// #0
  404dc0:	add	x0, x0, #0x58
  404dc4:	stp	xzr, xzr, [x7, #16]
  404dc8:	stp	xzr, x4, [x7, #32]
  404dcc:	stp	x4, xzr, [x7, #48]
  404dd0:	str	wzr, [x7, #80]
  404dd4:	str	x7, [sp, #152]
  404dd8:	str	x4, [sp, #192]
  404ddc:	bl	402b40 <pthread_mutex_init@plt>
  404de0:	ldr	x7, [sp, #152]
  404de4:	mov	x3, x22
  404de8:	ldr	x4, [sp, #192]
  404dec:	add	x1, x7, #0x88
  404df0:	mov	x2, x27
  404df4:	mov	w5, #0x0                   	// #0
  404df8:	mov	x0, x7
  404dfc:	str	x1, [sp, #152]
  404e00:	bl	406c44 <ferror@plt+0x3cc4>
  404e04:	ldr	x5, [sp, #248]
  404e08:	mov	x6, x23
  404e0c:	ldr	x2, [sp, #312]
  404e10:	add	x4, sp, #0x1f0
  404e14:	ldr	x1, [sp, #152]
  404e18:	mov	x0, x27
  404e1c:	mov	x3, x1
  404e20:	mov	x1, x22
  404e24:	bl	4077cc <ferror@plt+0x484c>
  404e28:	ldr	x0, [sp, #248]
  404e2c:	mov	x1, x23
  404e30:	bl	407174 <ferror@plt+0x41f4>
  404e34:	cbz	w24, 404ca8 <ferror@plt+0x1d28>
  404e38:	str	w24, [sp, #164]
  404e3c:	ldr	x0, [sp, #296]
  404e40:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x16920>
  404e44:	add	x21, x21, #0x580
  404e48:	bl	402ce0 <free@plt>
  404e4c:	ldr	w0, [sp, #164]
  404e50:	cbnz	w0, 404e88 <ferror@plt+0x1f08>
  404e54:	mov	x0, x25
  404e58:	mov	x1, #0x10                  	// #16
  404e5c:	ldr	x20, [x21, #1184]
  404e60:	bl	40e374 <ferror@plt+0xb3f4>
  404e64:	mov	x19, x0
  404e68:	cbnz	x20, 404ed0 <ferror@plt+0x1f50>
  404e6c:	ldr	x3, [sp, #120]
  404e70:	mov	x2, x25
  404e74:	mov	x1, x25
  404e78:	mov	x0, x19
  404e7c:	bl	408590 <ferror@plt+0x5610>
  404e80:	mov	x0, x19
  404e84:	bl	402ce0 <free@plt>
  404e88:	ldr	w0, [x21, #1512]
  404e8c:	cmp	w0, #0x0
  404e90:	b.le	4049d4 <ferror@plt+0x1a54>
  404e94:	mov	w0, #0xffffffff            	// #-1
  404e98:	bl	406a0c <ferror@plt+0x3a8c>
  404e9c:	b	404e88 <ferror@plt+0x1f08>
  404ea0:	add	x0, sp, #0xf8
  404ea4:	mov	w1, #0x0                   	// #0
  404ea8:	add	x25, x25, #0x1
  404eac:	bl	40756c <ferror@plt+0x45ec>
  404eb0:	mov	w24, #0x0                   	// #0
  404eb4:	add	x23, x0, #0xd
  404eb8:	b	404d64 <ferror@plt+0x1de4>
  404ebc:	ldr	x1, [sp, #248]
  404ec0:	mov	x2, x23
  404ec4:	sub	x0, x27, #0x20
  404ec8:	bl	4074bc <ferror@plt+0x453c>
  404ecc:	b	404e28 <ferror@plt+0x1ea8>
  404ed0:	add	x1, x20, #0xd
  404ed4:	stp	x1, x20, [x0]
  404ed8:	add	x0, x0, #0x10
  404edc:	ldr	x20, [x20]
  404ee0:	b	404e68 <ferror@plt+0x1ee8>
  404ee4:	mov	w0, #0x0                   	// #0
  404ee8:	b	404760 <ferror@plt+0x17e0>
  404eec:	mov	x29, #0x0                   	// #0
  404ef0:	mov	x30, #0x0                   	// #0
  404ef4:	mov	x5, x0
  404ef8:	ldr	x1, [sp]
  404efc:	add	x2, sp, #0x8
  404f00:	mov	x6, sp
  404f04:	movz	x0, #0x0, lsl #48
  404f08:	movk	x0, #0x0, lsl #32
  404f0c:	movk	x0, #0x40, lsl #16
  404f10:	movk	x0, #0x2f90
  404f14:	movz	x3, #0x0, lsl #48
  404f18:	movk	x3, #0x0, lsl #32
  404f1c:	movk	x3, #0x41, lsl #16
  404f20:	movk	x3, #0x88
  404f24:	movz	x4, #0x0, lsl #48
  404f28:	movk	x4, #0x0, lsl #32
  404f2c:	movk	x4, #0x41, lsl #16
  404f30:	movk	x4, #0x108
  404f34:	bl	402ab0 <__libc_start_main@plt>
  404f38:	bl	402bd0 <abort@plt>
  404f3c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x15920>
  404f40:	ldr	x0, [x0, #4064]
  404f44:	cbz	x0, 404f4c <ferror@plt+0x1fcc>
  404f48:	b	402b90 <__gmon_start__@plt>
  404f4c:	ret
  404f50:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404f54:	add	x1, x0, #0x540
  404f58:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404f5c:	add	x0, x0, #0x540
  404f60:	cmp	x1, x0
  404f64:	b.eq	404f90 <ferror@plt+0x2010>  // b.none
  404f68:	sub	sp, sp, #0x10
  404f6c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  404f70:	ldr	x1, [x1, #344]
  404f74:	str	x1, [sp, #8]
  404f78:	cbz	x1, 404f88 <ferror@plt+0x2008>
  404f7c:	mov	x16, x1
  404f80:	add	sp, sp, #0x10
  404f84:	br	x16
  404f88:	add	sp, sp, #0x10
  404f8c:	ret
  404f90:	ret
  404f94:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404f98:	add	x1, x0, #0x540
  404f9c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  404fa0:	add	x0, x0, #0x540
  404fa4:	sub	x1, x1, x0
  404fa8:	mov	x2, #0x2                   	// #2
  404fac:	asr	x1, x1, #3
  404fb0:	sdiv	x1, x1, x2
  404fb4:	cbz	x1, 404fe0 <ferror@plt+0x2060>
  404fb8:	sub	sp, sp, #0x10
  404fbc:	adrp	x2, 410000 <_obstack_memory_used@@Base+0x920>
  404fc0:	ldr	x2, [x2, #352]
  404fc4:	str	x2, [sp, #8]
  404fc8:	cbz	x2, 404fd8 <ferror@plt+0x2058>
  404fcc:	mov	x16, x2
  404fd0:	add	sp, sp, #0x10
  404fd4:	br	x16
  404fd8:	add	sp, sp, #0x10
  404fdc:	ret
  404fe0:	ret
  404fe4:	stp	x29, x30, [sp, #-32]!
  404fe8:	mov	x29, sp
  404fec:	str	x19, [sp, #16]
  404ff0:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  404ff4:	ldrb	w0, [x19, #1400]
  404ff8:	cbnz	w0, 405008 <ferror@plt+0x2088>
  404ffc:	bl	404f50 <ferror@plt+0x1fd0>
  405000:	mov	w0, #0x1                   	// #1
  405004:	strb	w0, [x19, #1400]
  405008:	ldr	x19, [sp, #16]
  40500c:	ldp	x29, x30, [sp], #32
  405010:	ret
  405014:	b	404f94 <ferror@plt+0x2014>
  405018:	ldrsw	x0, [x0, #8]
  40501c:	udiv	x2, x0, x1
  405020:	msub	x0, x2, x1, x0
  405024:	ret
  405028:	ldr	w2, [x0, #8]
  40502c:	ldr	w0, [x1, #8]
  405030:	cmp	w2, w0
  405034:	cset	w0, eq  // eq = none
  405038:	ret
  40503c:	stp	x29, x30, [sp, #-48]!
  405040:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  405044:	mov	x29, sp
  405048:	stp	x19, x20, [sp, #16]
  40504c:	add	x20, x1, #0x580
  405050:	mov	x19, x1
  405054:	ldr	x2, [x1, #1408]
  405058:	str	x21, [sp, #32]
  40505c:	mov	x21, x0
  405060:	ldr	x0, [x20, #8]
  405064:	cmp	x2, x0
  405068:	b.ne	405080 <ferror@plt+0x2100>  // b.any
  40506c:	ldr	x0, [x20, #16]
  405070:	mov	x2, #0x8                   	// #8
  405074:	add	x1, x20, x2
  405078:	bl	40e414 <ferror@plt+0xb494>
  40507c:	str	x0, [x20, #16]
  405080:	ldr	x0, [x19, #1408]
  405084:	ldr	x1, [x20, #16]
  405088:	add	x2, x0, #0x1
  40508c:	str	x2, [x19, #1408]
  405090:	ldp	x19, x20, [sp, #16]
  405094:	str	x21, [x1, x0, lsl #3]
  405098:	ldr	x21, [sp, #32]
  40509c:	ldp	x29, x30, [sp], #48
  4050a0:	ret
  4050a4:	ldp	x2, x0, [x0]
  4050a8:	adrp	x4, 426000 <_obstack_memory_used@@Base+0x16920>
  4050ac:	ldp	x3, x5, [x1]
  4050b0:	ldr	w4, [x4, #976]
  4050b4:	sub	x0, x0, #0x1
  4050b8:	cmp	w4, #0x100
  4050bc:	add	x0, x2, x0
  4050c0:	b.ne	40510c <ferror@plt+0x218c>  // b.any
  4050c4:	adrp	x4, 426000 <_obstack_memory_used@@Base+0x16920>
  4050c8:	add	x4, x4, #0x580
  4050cc:	add	x4, x4, #0x18
  4050d0:	mov	x6, x4
  4050d4:	cmp	x2, x0
  4050d8:	b.cs	405118 <ferror@plt+0x2198>  // b.hs, b.nlast
  4050dc:	cbnz	x3, 405164 <ferror@plt+0x21e4>
  4050e0:	b	405118 <ferror@plt+0x2198>
  4050e4:	add	x2, x2, #0x1
  4050e8:	cmp	x0, x2
  4050ec:	b.eq	405150 <ferror@plt+0x21d0>  // b.none
  4050f0:	ldrb	w6, [x2]
  4050f4:	cmp	w4, w6
  4050f8:	b.ne	4050e4 <ferror@plt+0x2164>  // b.any
  4050fc:	cmp	x0, x2
  405100:	b.ls	405108 <ferror@plt+0x2188>  // b.plast
  405104:	add	x2, x2, #0x1
  405108:	sub	x3, x3, #0x1
  40510c:	cmp	x2, x0
  405110:	b.cs	405118 <ferror@plt+0x2198>  // b.hs, b.nlast
  405114:	cbnz	x3, 4050f0 <ferror@plt+0x2170>
  405118:	ldrb	w1, [x1, #48]
  40511c:	cbz	w1, 405140 <ferror@plt+0x21c0>
  405120:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  405124:	add	x1, x1, #0x580
  405128:	add	x1, x1, #0x18
  40512c:	cmp	x2, x0
  405130:	b.cs	405140 <ferror@plt+0x21c0>  // b.hs, b.nlast
  405134:	ldrb	w3, [x2]
  405138:	ldrb	w3, [x1, x3]
  40513c:	cbnz	w3, 40519c <ferror@plt+0x221c>
  405140:	add	x2, x2, x5
  405144:	cmp	x2, x0
  405148:	csel	x0, x2, x0, ls  // ls = plast
  40514c:	ret
  405150:	mov	x2, x0
  405154:	b	405108 <ferror@plt+0x2188>
  405158:	add	x2, x2, #0x1
  40515c:	cmp	x0, x2
  405160:	b.eq	405194 <ferror@plt+0x2214>  // b.none
  405164:	ldrb	w7, [x2]
  405168:	ldrb	w7, [x4, x7]
  40516c:	cbnz	w7, 405158 <ferror@plt+0x21d8>
  405170:	cmp	x2, x0
  405174:	b.cs	405184 <ferror@plt+0x2204>  // b.hs, b.nlast
  405178:	ldrb	w7, [x2]
  40517c:	ldrb	w7, [x6, x7]
  405180:	cbz	w7, 40518c <ferror@plt+0x220c>
  405184:	sub	x3, x3, #0x1
  405188:	b	4050d4 <ferror@plt+0x2154>
  40518c:	add	x2, x2, #0x1
  405190:	b	405170 <ferror@plt+0x21f0>
  405194:	mov	x2, x0
  405198:	b	405184 <ferror@plt+0x2204>
  40519c:	add	x2, x2, #0x1
  4051a0:	b	40512c <ferror@plt+0x21ac>
  4051a4:	ldp	x0, x2, [x0]
  4051a8:	ldp	x3, x5, [x1, #16]
  4051ac:	sub	x2, x2, #0x1
  4051b0:	add	x2, x0, x2
  4051b4:	cbnz	x5, 4051bc <ferror@plt+0x223c>
  4051b8:	add	x3, x3, #0x1
  4051bc:	adrp	x4, 426000 <_obstack_memory_used@@Base+0x16920>
  4051c0:	ldr	w6, [x4, #976]
  4051c4:	cmp	w6, #0x100
  4051c8:	b.ne	40521c <ferror@plt+0x229c>  // b.any
  4051cc:	adrp	x4, 426000 <_obstack_memory_used@@Base+0x16920>
  4051d0:	add	x4, x4, #0x580
  4051d4:	add	x4, x4, #0x18
  4051d8:	mov	x6, x4
  4051dc:	cmp	x0, x2
  4051e0:	b.cs	40522c <ferror@plt+0x22ac>  // b.hs, b.nlast
  4051e4:	cbnz	x3, 405284 <ferror@plt+0x2304>
  4051e8:	b	40522c <ferror@plt+0x22ac>
  4051ec:	add	x0, x0, #0x1
  4051f0:	cmp	x2, x0
  4051f4:	b.eq	405268 <ferror@plt+0x22e8>  // b.none
  4051f8:	ldrb	w3, [x0]
  4051fc:	cmp	w6, w3
  405200:	b.ne	4051ec <ferror@plt+0x226c>  // b.any
  405204:	cmp	x2, x0
  405208:	b.ls	405218 <ferror@plt+0x2298>  // b.plast
  40520c:	orr	x3, x5, x4
  405210:	cbz	x3, 405270 <ferror@plt+0x22f0>
  405214:	add	x0, x0, #0x1
  405218:	mov	x3, x4
  40521c:	cmp	x0, x2
  405220:	b.cs	40522c <ferror@plt+0x22ac>  // b.hs, b.nlast
  405224:	sub	x4, x3, #0x1
  405228:	cbnz	x3, 4051f8 <ferror@plt+0x2278>
  40522c:	cbz	x5, 405264 <ferror@plt+0x22e4>
  405230:	ldrb	w1, [x1, #49]
  405234:	cbz	w1, 405258 <ferror@plt+0x22d8>
  405238:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40523c:	add	x1, x1, #0x580
  405240:	add	x1, x1, #0x18
  405244:	cmp	x0, x2
  405248:	b.cs	405258 <ferror@plt+0x22d8>  // b.hs, b.nlast
  40524c:	ldrb	w3, [x0]
  405250:	ldrb	w3, [x1, x3]
  405254:	cbnz	w3, 4052bc <ferror@plt+0x233c>
  405258:	add	x0, x0, x5
  40525c:	cmp	x0, x2
  405260:	csel	x0, x0, x2, ls  // ls = plast
  405264:	ret
  405268:	mov	x0, x2
  40526c:	b	405218 <ferror@plt+0x2298>
  405270:	mov	x4, #0x0                   	// #0
  405274:	b	405218 <ferror@plt+0x2298>
  405278:	add	x0, x0, #0x1
  40527c:	cmp	x2, x0
  405280:	b.eq	4052b4 <ferror@plt+0x2334>  // b.none
  405284:	ldrb	w7, [x0]
  405288:	ldrb	w7, [x4, x7]
  40528c:	cbnz	w7, 405278 <ferror@plt+0x22f8>
  405290:	cmp	x0, x2
  405294:	b.cs	4052a4 <ferror@plt+0x2324>  // b.hs, b.nlast
  405298:	ldrb	w7, [x0]
  40529c:	ldrb	w7, [x6, x7]
  4052a0:	cbz	w7, 4052ac <ferror@plt+0x232c>
  4052a4:	sub	x3, x3, #0x1
  4052a8:	b	4051dc <ferror@plt+0x225c>
  4052ac:	add	x0, x0, #0x1
  4052b0:	b	405290 <ferror@plt+0x2310>
  4052b4:	mov	x0, x2
  4052b8:	b	4052a4 <ferror@plt+0x2324>
  4052bc:	add	x0, x0, #0x1
  4052c0:	b	405244 <ferror@plt+0x22c4>
  4052c4:	mov	x3, x0
  4052c8:	adrp	x5, 426000 <_obstack_memory_used@@Base+0x16920>
  4052cc:	add	x5, x5, #0x580
  4052d0:	mov	w6, #0x0                   	// #0
  4052d4:	mov	w0, #0x0                   	// #0
  4052d8:	ldr	x2, [x3]
  4052dc:	ldr	w8, [x5, #280]
  4052e0:	mov	x1, x2
  4052e4:	ldrb	w4, [x1], #1
  4052e8:	sub	w7, w4, #0x30
  4052ec:	cmp	w7, #0x9
  4052f0:	b.ls	405304 <ferror@plt+0x2384>  // b.plast
  4052f4:	cbz	w6, 405334 <ferror@plt+0x23b4>
  4052f8:	sub	x2, x2, #0x1
  4052fc:	str	x2, [x3]
  405300:	ret
  405304:	cmp	w4, w0
  405308:	csel	w0, w4, w0, hi  // hi = pmore
  40530c:	ldrb	w4, [x2, #1]
  405310:	and	w0, w0, #0xff
  405314:	cmp	w4, w8
  405318:	b.ne	40532c <ferror@plt+0x23ac>  // b.any
  40531c:	add	x1, x2, #0x2
  405320:	mov	w6, #0x1                   	// #1
  405324:	mov	x2, x1
  405328:	b	4052e0 <ferror@plt+0x2360>
  40532c:	mov	w6, #0x0                   	// #0
  405330:	b	405324 <ferror@plt+0x23a4>
  405334:	ldr	w2, [x5, #284]
  405338:	cmp	w4, w2
  40533c:	b.ne	405350 <ferror@plt+0x23d0>  // b.any
  405340:	ldrb	w2, [x1], #1
  405344:	sub	w4, w2, #0x30
  405348:	cmp	w4, #0x9
  40534c:	b.ls	40535c <ferror@plt+0x23dc>  // b.plast
  405350:	sub	x1, x1, #0x1
  405354:	str	x1, [x3]
  405358:	b	405300 <ferror@plt+0x2380>
  40535c:	cmp	w2, w0
  405360:	csel	w0, w2, w0, hi  // hi = pmore
  405364:	and	w0, w0, #0xff
  405368:	b	405340 <ferror@plt+0x23c0>
  40536c:	stp	x29, x30, [sp, #-32]!
  405370:	mov	x29, sp
  405374:	ldrb	w9, [x0]
  405378:	cmp	w9, #0x2d
  40537c:	cinc	x0, x0, eq  // eq = none
  405380:	str	x0, [sp, #24]
  405384:	add	x0, sp, #0x18
  405388:	bl	4052c4 <ferror@plt+0x2344>
  40538c:	and	w0, w0, #0xff
  405390:	cmp	w0, #0x30
  405394:	b.ls	4053c0 <ferror@plt+0x2440>  // b.plast
  405398:	ldr	x0, [sp, #24]
  40539c:	cmp	w9, #0x2d
  4053a0:	ldrb	w1, [x0]
  4053a4:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  4053a8:	add	x0, x0, #0xc38
  4053ac:	ldrb	w0, [x0, x1]
  4053b0:	b.ne	4053b8 <ferror@plt+0x2438>  // b.any
  4053b4:	neg	w0, w0
  4053b8:	ldp	x29, x30, [sp], #32
  4053bc:	ret
  4053c0:	mov	w0, #0x0                   	// #0
  4053c4:	b	4053b8 <ferror@plt+0x2438>
  4053c8:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x16920>
  4053cc:	add	x3, x3, #0x580
  4053d0:	add	x4, x3, #0x18
  4053d4:	ldrb	w2, [x0]
  4053d8:	ldrb	w2, [x4, x2]
  4053dc:	cbnz	w2, 40542c <ferror@plt+0x24ac>
  4053e0:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x16920>
  4053e4:	add	x2, x2, #0x3d0
  4053e8:	add	x10, x2, #0x8
  4053ec:	add	x3, x3, #0x120
  4053f0:	mov	x6, #0xc                   	// #12
  4053f4:	mov	x7, #0x0                   	// #0
  4053f8:	add	x4, x7, x6
  4053fc:	mov	x5, #0x0                   	// #0
  405400:	lsr	x4, x4, #1
  405404:	lsl	x8, x4, #4
  405408:	ldr	x11, [x10, x8]
  40540c:	add	x12, x0, x5
  405410:	ldrb	w9, [x11, x5]
  405414:	cbnz	w9, 405434 <ferror@plt+0x24b4>
  405418:	cbz	x1, 405420 <ferror@plt+0x24a0>
  40541c:	str	x12, [x1]
  405420:	add	x2, x2, x8
  405424:	ldr	w0, [x2, #16]
  405428:	ret
  40542c:	add	x0, x0, #0x1
  405430:	b	4053d4 <ferror@plt+0x2454>
  405434:	ldrb	w12, [x0, x5]
  405438:	ldrb	w12, [x3, x12]
  40543c:	cmp	w9, w12
  405440:	b.hi	405460 <ferror@plt+0x24e0>  // b.pmore
  405444:	add	x5, x5, #0x1
  405448:	b.cs	40540c <ferror@plt+0x248c>  // b.hs, b.nlast
  40544c:	add	x7, x4, #0x1
  405450:	cmp	x7, x6
  405454:	b.cc	4053f8 <ferror@plt+0x2478>  // b.lo, b.ul, b.last
  405458:	mov	w0, #0x0                   	// #0
  40545c:	b	405428 <ferror@plt+0x24a8>
  405460:	mov	x6, x4
  405464:	b	405450 <ferror@plt+0x24d0>
  405468:	ldr	x1, [x0, #32]
  40546c:	cbnz	x1, 4054b8 <ferror@plt+0x2538>
  405470:	ldr	x1, [x0, #40]
  405474:	cbnz	x1, 4054b8 <ferror@plt+0x2538>
  405478:	ldrb	w1, [x0, #48]
  40547c:	cbnz	w1, 4054b8 <ferror@plt+0x2538>
  405480:	ldrb	w1, [x0, #49]
  405484:	cbnz	w1, 4054b8 <ferror@plt+0x2538>
  405488:	ldr	x1, [x0, #48]
  40548c:	and	x1, x1, #0xffffffff0000
  405490:	and	x1, x1, #0xffffffff00ffffff
  405494:	cbnz	x1, 4054b8 <ferror@plt+0x2538>
  405498:	ldrb	w1, [x0, #54]
  40549c:	cbnz	w1, 4054b8 <ferror@plt+0x2538>
  4054a0:	ldrb	w1, [x0, #56]
  4054a4:	cbnz	w1, 4054b8 <ferror@plt+0x2538>
  4054a8:	ldrb	w0, [x0, #51]
  4054ac:	eor	w0, w0, #0x1
  4054b0:	and	w0, w0, #0x1
  4054b4:	ret
  4054b8:	mov	w0, #0x0                   	// #0
  4054bc:	b	4054b0 <ferror@plt+0x2530>
  4054c0:	ldrh	w2, [x0, #48]
  4054c4:	cbz	w2, 4054d0 <ferror@plt+0x2550>
  4054c8:	mov	w2, #0x62                  	// #98
  4054cc:	strb	w2, [x1], #1
  4054d0:	ldr	x4, [x0, #32]
  4054d4:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x16920>
  4054d8:	add	x2, x2, #0x580
  4054dc:	add	x3, x2, #0x220
  4054e0:	cmp	x4, x3
  4054e4:	b.ne	4054f0 <ferror@plt+0x2570>  // b.any
  4054e8:	mov	w3, #0x64                  	// #100
  4054ec:	strb	w3, [x1], #1
  4054f0:	ldr	x3, [x0, #40]
  4054f4:	cbz	x3, 405500 <ferror@plt+0x2580>
  4054f8:	mov	w3, #0x66                  	// #102
  4054fc:	strb	w3, [x1], #1
  405500:	ldrb	w3, [x0, #52]
  405504:	cbz	w3, 405510 <ferror@plt+0x2590>
  405508:	mov	w3, #0x67                  	// #103
  40550c:	strb	w3, [x1], #1
  405510:	ldrb	w3, [x0, #53]
  405514:	cbz	w3, 405520 <ferror@plt+0x25a0>
  405518:	mov	w3, #0x68                  	// #104
  40551c:	strb	w3, [x1], #1
  405520:	ldr	x3, [x0, #32]
  405524:	add	x2, x2, #0x320
  405528:	cmp	x3, x2
  40552c:	b.ne	405538 <ferror@plt+0x25b8>  // b.any
  405530:	mov	w2, #0x69                  	// #105
  405534:	strb	w2, [x1], #1
  405538:	ldrb	w2, [x0, #54]
  40553c:	cbz	w2, 405548 <ferror@plt+0x25c8>
  405540:	mov	w2, #0x4d                  	// #77
  405544:	strb	w2, [x1], #1
  405548:	ldrb	w2, [x0, #50]
  40554c:	cbz	w2, 405558 <ferror@plt+0x25d8>
  405550:	mov	w2, #0x6e                  	// #110
  405554:	strb	w2, [x1], #1
  405558:	ldrb	w2, [x0, #51]
  40555c:	cbz	w2, 405568 <ferror@plt+0x25e8>
  405560:	mov	w2, #0x52                  	// #82
  405564:	strb	w2, [x1], #1
  405568:	ldrb	w2, [x0, #55]
  40556c:	cbz	w2, 405578 <ferror@plt+0x25f8>
  405570:	mov	w2, #0x72                  	// #114
  405574:	strb	w2, [x1], #1
  405578:	ldrb	w0, [x0, #56]
  40557c:	cbz	w0, 405588 <ferror@plt+0x2608>
  405580:	mov	w0, #0x56                  	// #86
  405584:	strb	w0, [x1], #1
  405588:	strb	wzr, [x1]
  40558c:	ret
  405590:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x16920>
  405594:	add	x3, x3, #0x580
  405598:	and	w9, w2, #0xfffffffd
  40559c:	adrp	x6, 411000 <_obstack_memory_used@@Base+0x1920>
  4055a0:	add	x7, x3, #0x320
  4055a4:	add	x6, x6, #0xb98
  4055a8:	add	x8, x3, #0x120
  4055ac:	add	x5, x3, #0x220
  4055b0:	sub	w2, w2, #0x1
  4055b4:	mov	w4, #0x1                   	// #1
  4055b8:	ldrb	w3, [x0]
  4055bc:	cbz	w3, 4055e8 <ferror@plt+0x2668>
  4055c0:	cmp	w3, #0x72
  4055c4:	b.hi	4055e8 <ferror@plt+0x2668>  // b.pmore
  4055c8:	cmp	w3, #0x61
  4055cc:	b.hi	4055ec <ferror@plt+0x266c>  // b.pmore
  4055d0:	cmp	w3, #0x52
  4055d4:	b.eq	405664 <ferror@plt+0x26e4>  // b.none
  4055d8:	cmp	w3, #0x56
  4055dc:	b.eq	405674 <ferror@plt+0x26f4>  // b.none
  4055e0:	cmp	w3, #0x4d
  4055e4:	b.eq	405654 <ferror@plt+0x26d4>  // b.none
  4055e8:	ret
  4055ec:	sub	w3, w3, #0x62
  4055f0:	cmp	w3, #0x10
  4055f4:	b.hi	4055e8 <ferror@plt+0x2668>  // b.pmore
  4055f8:	ldrb	w3, [x6, w3, uxtw]
  4055fc:	adr	x10, 405608 <ferror@plt+0x2688>
  405600:	add	x3, x10, w3, sxtb #2
  405604:	br	x3
  405608:	cbnz	w9, 405610 <ferror@plt+0x2690>
  40560c:	strb	w4, [x1, #48]
  405610:	cmp	w2, #0x1
  405614:	b.hi	40561c <ferror@plt+0x269c>  // b.pmore
  405618:	strb	w4, [x1, #49]
  40561c:	add	x0, x0, #0x1
  405620:	b	4055b8 <ferror@plt+0x2638>
  405624:	str	x5, [x1, #32]
  405628:	b	40561c <ferror@plt+0x269c>
  40562c:	str	x8, [x1, #40]
  405630:	b	40561c <ferror@plt+0x269c>
  405634:	strb	w4, [x1, #52]
  405638:	b	40561c <ferror@plt+0x269c>
  40563c:	strb	w4, [x1, #53]
  405640:	b	40561c <ferror@plt+0x269c>
  405644:	ldr	x3, [x1, #32]
  405648:	cbnz	x3, 40561c <ferror@plt+0x269c>
  40564c:	str	x7, [x1, #32]
  405650:	b	40561c <ferror@plt+0x269c>
  405654:	strb	w4, [x1, #54]
  405658:	b	40561c <ferror@plt+0x269c>
  40565c:	strb	w4, [x1, #50]
  405660:	b	40561c <ferror@plt+0x269c>
  405664:	strb	w4, [x1, #51]
  405668:	b	40561c <ferror@plt+0x269c>
  40566c:	strb	w4, [x1, #55]
  405670:	b	40561c <ferror@plt+0x269c>
  405674:	strb	w4, [x1, #56]
  405678:	b	40561c <ferror@plt+0x269c>
  40567c:	ldr	x0, [x0]
  405680:	ldr	x1, [x1]
  405684:	b	402c90 <strcmp@plt>
  405688:	stp	x29, x30, [sp, #-32]!
  40568c:	mov	w2, #0x5                   	// #5
  405690:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405694:	mov	x29, sp
  405698:	add	x1, x1, #0x1c7
  40569c:	str	x19, [sp, #16]
  4056a0:	mov	x19, x0
  4056a4:	mov	x0, #0x0                   	// #0
  4056a8:	bl	402e60 <dcgettext@plt>
  4056ac:	mov	x2, x0
  4056b0:	mov	x3, x19
  4056b4:	mov	w1, #0x0                   	// #0
  4056b8:	mov	w0, #0x2                   	// #2
  4056bc:	bl	4028c0 <error@plt>
  4056c0:	stp	x29, x30, [sp, #-48]!
  4056c4:	mov	w2, #0x5                   	// #5
  4056c8:	mov	x29, sp
  4056cc:	stp	x19, x20, [sp, #16]
  4056d0:	mov	x20, x1
  4056d4:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4056d8:	add	x1, x1, #0x1e6
  4056dc:	str	x21, [sp, #32]
  4056e0:	mov	x21, x0
  4056e4:	mov	x0, #0x0                   	// #0
  4056e8:	bl	402e60 <dcgettext@plt>
  4056ec:	mov	x19, x0
  4056f0:	mov	x1, x20
  4056f4:	mov	w2, #0x5                   	// #5
  4056f8:	mov	x0, #0x0                   	// #0
  4056fc:	bl	402e60 <dcgettext@plt>
  405700:	mov	x20, x0
  405704:	mov	x0, x21
  405708:	bl	40cef8 <ferror@plt+0x9f78>
  40570c:	mov	x4, x0
  405710:	mov	x3, x20
  405714:	mov	x2, x19
  405718:	mov	w1, #0x0                   	// #0
  40571c:	mov	w0, #0x2                   	// #2
  405720:	bl	4028c0 <error@plt>
  405724:	stp	x29, x30, [sp, #-32]!
  405728:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40572c:	add	x1, x1, #0x580
  405730:	mov	x29, sp
  405734:	str	x19, [sp, #16]
  405738:	mov	x19, x0
  40573c:	add	x2, x0, #0x8
  405740:	add	x1, x1, #0x420
  405744:	mov	w0, #0x0                   	// #0
  405748:	bl	402840 <pthread_sigmask@plt>
  40574c:	cmp	w0, #0x0
  405750:	cset	w0, eq  // eq = none
  405754:	strb	w0, [x19]
  405758:	ldr	x19, [sp, #16]
  40575c:	ldp	x29, x30, [sp], #32
  405760:	ret
  405764:	stp	x29, x30, [sp, #-32]!
  405768:	mov	x29, sp
  40576c:	stp	x19, x20, [sp, #16]
  405770:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  405774:	add	x19, x19, #0x580
  405778:	ldr	x20, [x19, #1184]
  40577c:	cbnz	x20, 405790 <ferror@plt+0x2810>
  405780:	str	xzr, [x19, #1184]
  405784:	ldp	x19, x20, [sp, #16]
  405788:	ldp	x29, x30, [sp], #32
  40578c:	ret
  405790:	add	x0, x20, #0xd
  405794:	bl	402f60 <unlink@plt>
  405798:	ldr	x20, [x20]
  40579c:	b	40577c <ferror@plt+0x27fc>
  4057a0:	stp	x29, x30, [sp, #-32]!
  4057a4:	mov	x29, sp
  4057a8:	str	x19, [sp, #16]
  4057ac:	mov	w19, w0
  4057b0:	bl	405764 <ferror@plt+0x27e4>
  4057b4:	mov	w0, w19
  4057b8:	mov	x1, #0x0                   	// #0
  4057bc:	bl	4029d0 <signal@plt>
  4057c0:	mov	w0, w19
  4057c4:	ldr	x19, [sp, #16]
  4057c8:	ldp	x29, x30, [sp], #32
  4057cc:	b	4028b0 <raise@plt>
  4057d0:	stp	x29, x30, [sp, #-32]!
  4057d4:	mov	x29, sp
  4057d8:	str	x19, [sp, #16]
  4057dc:	and	w19, w0, #0xff
  4057e0:	bl	402ca0 <__ctype_b_loc@plt>
  4057e4:	ldr	x0, [x0]
  4057e8:	ubfiz	x1, x19, #1, #8
  4057ec:	ldrh	w0, [x0, x1]
  4057f0:	tbnz	w0, #0, 405808 <ferror@plt+0x2888>
  4057f4:	cmp	w19, #0xa
  4057f8:	cset	w0, eq  // eq = none
  4057fc:	ldr	x19, [sp, #16]
  405800:	ldp	x29, x30, [sp], #32
  405804:	ret
  405808:	mov	w0, #0x1                   	// #1
  40580c:	b	4057fc <ferror@plt+0x287c>
  405810:	stp	xzr, xzr, [x0, #16]
  405814:	mov	x2, #0xffffffffffffffff    	// #-1
  405818:	stp	xzr, xzr, [x0]
  40581c:	str	x2, [x0, #16]
  405820:	stp	xzr, xzr, [x0, #32]
  405824:	stp	xzr, xzr, [x0, #48]
  405828:	str	xzr, [x0, #64]
  40582c:	ret
  405830:	stp	x29, x30, [sp, #-48]!
  405834:	mov	x29, sp
  405838:	stp	x19, x20, [sp, #16]
  40583c:	mov	x20, x0
  405840:	mov	x19, x1
  405844:	str	x21, [sp, #32]
  405848:	bl	402ef0 <__errno_location@plt>
  40584c:	ldr	w21, [x0]
  405850:	cbnz	x19, 40586c <ferror@plt+0x28ec>
  405854:	mov	w2, #0x5                   	// #5
  405858:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  40585c:	mov	x0, #0x0                   	// #0
  405860:	add	x1, x1, #0x209
  405864:	bl	402e60 <dcgettext@plt>
  405868:	mov	x19, x0
  40586c:	mov	x2, x19
  405870:	mov	w1, #0x3                   	// #3
  405874:	mov	w0, #0x0                   	// #0
  405878:	bl	40cdc4 <ferror@plt+0x9e44>
  40587c:	adrp	x2, 410000 <_obstack_memory_used@@Base+0x920>
  405880:	mov	x4, x0
  405884:	mov	x3, x20
  405888:	add	x2, x2, #0x219
  40588c:	mov	w1, w21
  405890:	mov	w0, #0x2                   	// #2
  405894:	bl	4028c0 <error@plt>
  405898:	stp	x29, x30, [sp, #-32]!
  40589c:	mov	x29, sp
  4058a0:	str	x19, [sp, #16]
  4058a4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  4058a8:	add	x19, x19, #0x580
  4058ac:	ldr	w0, [x19, #1320]
  4058b0:	cbnz	w0, 4058d0 <ferror@plt+0x2950>
  4058b4:	add	x1, x19, #0x4a8
  4058b8:	mov	w0, #0x1                   	// #1
  4058bc:	bl	410130 <_obstack_memory_used@@Base+0xa50>
  4058c0:	cbz	w0, 4058ec <ferror@plt+0x296c>
  4058c4:	bl	402ef0 <__errno_location@plt>
  4058c8:	ldr	w0, [x0]
  4058cc:	str	w0, [x19, #1320]
  4058d0:	ldr	w1, [x19, #1320]
  4058d4:	add	x0, x19, #0x4a8
  4058d8:	ldr	x19, [sp, #16]
  4058dc:	cmp	w1, #0x0
  4058e0:	csel	x0, x0, xzr, lt  // lt = tstop
  4058e4:	ldp	x29, x30, [sp], #32
  4058e8:	ret
  4058ec:	mov	w0, #0xffffffff            	// #-1
  4058f0:	b	4058cc <ferror@plt+0x294c>
  4058f4:	stp	x29, x30, [sp, #-16]!
  4058f8:	mov	x1, #0x48                  	// #72
  4058fc:	mov	x29, sp
  405900:	bl	40e4e0 <ferror@plt+0xb560>
  405904:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  405908:	add	x1, x1, #0x580
  40590c:	add	x1, x1, #0x530
  405910:	ldr	x2, [x1]
  405914:	cbnz	x2, 405928 <ferror@plt+0x29a8>
  405918:	str	x0, [x1]
  40591c:	str	xzr, [x0, #64]
  405920:	ldp	x29, x30, [sp], #16
  405924:	ret
  405928:	add	x1, x2, #0x40
  40592c:	ldr	x2, [x2, #64]
  405930:	b	405914 <ferror@plt+0x2994>
  405934:	stp	x29, x30, [sp, #-48]!
  405938:	mov	x29, sp
  40593c:	stp	x19, x20, [sp, #16]
  405940:	mov	x19, x0
  405944:	stp	x21, x22, [sp, #32]
  405948:	mov	x21, x1
  40594c:	add	x22, x1, #0x1
  405950:	and	x2, x2, #0xffffffffffffffe0
  405954:	add	x20, x2, #0x20
  405958:	mov	x0, x20
  40595c:	bl	402a20 <malloc@plt>
  405960:	str	x0, [x19]
  405964:	cbnz	x0, 405978 <ferror@plt+0x29f8>
  405968:	lsr	x2, x20, #1
  40596c:	cmp	x22, x20, lsr #1
  405970:	b.cc	405950 <ferror@plt+0x29d0>  // b.lo, b.ul, b.last
  405974:	bl	40e538 <ferror@plt+0xb5b8>
  405978:	stp	xzr, xzr, [x19, #8]
  40597c:	stp	x20, xzr, [x19, #24]
  405980:	str	x21, [x19, #40]
  405984:	strb	wzr, [x19, #48]
  405988:	ldp	x19, x20, [sp, #16]
  40598c:	ldp	x21, x22, [sp, #32]
  405990:	ldp	x29, x30, [sp], #48
  405994:	ret
  405998:	stp	x29, x30, [sp, #-32]!
  40599c:	mov	w2, #0x0                   	// #0
  4059a0:	mov	x29, sp
  4059a4:	stp	x19, x20, [sp, #16]
  4059a8:	mov	x19, x0
  4059ac:	mov	x20, x1
  4059b0:	sub	x1, x1, x0
  4059b4:	bl	40b31c <ferror@plt+0x839c>
  4059b8:	sxtw	x0, w0
  4059bc:	cmp	x19, x20
  4059c0:	b.cc	4059d0 <ferror@plt+0x2a50>  // b.lo, b.ul, b.last
  4059c4:	ldp	x19, x20, [sp, #16]
  4059c8:	ldp	x29, x30, [sp], #32
  4059cc:	ret
  4059d0:	ldrb	w1, [x19], #1
  4059d4:	cmp	w1, #0x9
  4059d8:	cinc	x0, x0, eq  // eq = none
  4059dc:	b	4059bc <ferror@plt+0x2a3c>
  4059e0:	stp	x29, x30, [sp, #-112]!
  4059e4:	mov	x29, sp
  4059e8:	stp	x19, x20, [sp, #16]
  4059ec:	stp	x23, x24, [sp, #48]
  4059f0:	ldp	x19, x24, [x0]
  4059f4:	stp	x21, x22, [sp, #32]
  4059f8:	mov	x21, x1
  4059fc:	stp	x25, x26, [sp, #64]
  405a00:	mov	x25, x2
  405a04:	str	x27, [sp, #80]
  405a08:	add	x20, x19, x24
  405a0c:	cbnz	x2, 405c98 <ferror@plt+0x2d18>
  405a10:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x16920>
  405a14:	add	x23, x23, #0x580
  405a18:	mov	x22, x0
  405a1c:	ldrb	w0, [x23, #1336]
  405a20:	cbz	w0, 405c98 <ferror@plt+0x2d18>
  405a24:	mov	w24, #0xa                   	// #10
  405a28:	cmp	x19, x20
  405a2c:	b.cc	405ae0 <ferror@plt+0x2b60>  // b.lo, b.ul, b.last
  405a30:	ldr	x19, [x23, #1328]
  405a34:	mov	x26, #0xff0000              	// #16711680
  405a38:	adrp	x25, 411000 <_obstack_memory_used@@Base+0x1920>
  405a3c:	add	x25, x25, #0xc38
  405a40:	movk	x26, #0xff00, lsl #32
  405a44:	ldp	x24, x21, [x22]
  405a48:	sub	x21, x21, #0x1
  405a4c:	add	x21, x24, x21
  405a50:	cbz	x19, 405c68 <ferror@plt+0x2ce8>
  405a54:	ldr	x8, [x19]
  405a58:	cmn	x8, #0x1
  405a5c:	b.eq	405b28 <ferror@plt+0x2ba8>  // b.none
  405a60:	mov	x1, x19
  405a64:	mov	x0, x22
  405a68:	bl	4050a4 <ferror@plt+0x2124>
  405a6c:	mov	x20, x0
  405a70:	ldr	x0, [x19, #16]
  405a74:	cmn	x0, #0x1
  405a78:	b.eq	405a8c <ferror@plt+0x2b0c>  // b.none
  405a7c:	mov	x1, x19
  405a80:	mov	x0, x22
  405a84:	bl	4051a4 <ferror@plt+0x2224>
  405a88:	mov	x21, x0
  405a8c:	ldrb	w0, [x19, #48]
  405a90:	cbz	w0, 405a9c <ferror@plt+0x2b1c>
  405a94:	cmn	x8, #0x1
  405a98:	b.eq	405ab4 <ferror@plt+0x2b34>  // b.none
  405a9c:	ldrb	w0, [x19, #54]
  405aa0:	cbnz	w0, 405ab4 <ferror@plt+0x2b34>
  405aa4:	ldr	x0, [x19, #48]
  405aa8:	and	x0, x0, #0xffffffff0000
  405aac:	and	x0, x0, #0xffffffff00ffffff
  405ab0:	cbz	x0, 405b54 <ferror@plt+0x2bd4>
  405ab4:	add	x1, x23, #0x18
  405ab8:	ldrb	w27, [x21]
  405abc:	strb	wzr, [x21]
  405ac0:	ldrb	w0, [x20]
  405ac4:	ldrb	w0, [x1, x0]
  405ac8:	cbnz	w0, 405b30 <ferror@plt+0x2bb0>
  405acc:	str	x20, [sp, #96]
  405ad0:	cmp	x21, x20
  405ad4:	b.cs	405b38 <ferror@plt+0x2bb8>  // b.hs, b.nlast
  405ad8:	str	x21, [sp, #96]
  405adc:	b	405b4c <ferror@plt+0x2bcc>
  405ae0:	ldrb	w0, [x19], #1
  405ae4:	cmp	w0, #0x9
  405ae8:	b.eq	405b20 <ferror@plt+0x2ba0>  // b.none
  405aec:	cmp	x20, x19
  405af0:	csel	w0, w0, w24, ne  // ne = any
  405af4:	mov	x1, x21
  405af8:	bl	402e40 <fputc_unlocked@plt>
  405afc:	cmn	w0, #0x1
  405b00:	b.ne	405a28 <ferror@plt+0x2aa8>  // b.any
  405b04:	mov	w2, #0x5                   	// #5
  405b08:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405b0c:	mov	x0, #0x0                   	// #0
  405b10:	add	x1, x1, #0x220
  405b14:	bl	402e60 <dcgettext@plt>
  405b18:	mov	x1, #0x0                   	// #0
  405b1c:	bl	405830 <ferror@plt+0x28b0>
  405b20:	mov	w0, #0x3e                  	// #62
  405b24:	b	405af4 <ferror@plt+0x2b74>
  405b28:	mov	x20, x24
  405b2c:	b	405a70 <ferror@plt+0x2af0>
  405b30:	add	x20, x20, #0x1
  405b34:	b	405ac0 <ferror@plt+0x2b40>
  405b38:	ldrb	w0, [x19, #54]
  405b3c:	cbz	w0, 405bdc <ferror@plt+0x2c5c>
  405b40:	add	x1, sp, #0x60
  405b44:	mov	x0, x20
  405b48:	bl	4053c8 <ferror@plt+0x2448>
  405b4c:	strb	w27, [x21]
  405b50:	ldr	x21, [sp, #96]
  405b54:	mov	x1, x20
  405b58:	mov	x0, x24
  405b5c:	bl	405998 <ferror@plt+0x2a18>
  405b60:	mov	x1, x21
  405b64:	mov	x24, x0
  405b68:	mov	x0, x20
  405b6c:	bl	405998 <ferror@plt+0x2a18>
  405b70:	mov	x20, x0
  405b74:	sub	x24, x24, #0x1
  405b78:	cmn	x24, #0x1
  405b7c:	b.ne	405c70 <ferror@plt+0x2cf0>  // b.any
  405b80:	cbnz	x20, 405c7c <ferror@plt+0x2cfc>
  405b84:	mov	w2, #0x5                   	// #5
  405b88:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405b8c:	mov	x0, #0x0                   	// #0
  405b90:	add	x1, x1, #0x22d
  405b94:	bl	402e60 <dcgettext@plt>
  405b98:	mov	x1, x0
  405b9c:	mov	w0, #0x1                   	// #1
  405ba0:	bl	402ad0 <__printf_chk@plt>
  405ba4:	cbz	x19, 405bc0 <ferror@plt+0x2c40>
  405ba8:	ldr	x19, [x19, #64]
  405bac:	cbnz	x19, 405a44 <ferror@plt+0x2ac4>
  405bb0:	ldrb	w0, [x23, #1337]
  405bb4:	cbnz	w0, 405bc0 <ferror@plt+0x2c40>
  405bb8:	ldrb	w0, [x23, #1338]
  405bbc:	cbz	w0, 405a44 <ferror@plt+0x2ac4>
  405bc0:	ldp	x19, x20, [sp, #16]
  405bc4:	ldp	x21, x22, [sp, #32]
  405bc8:	ldp	x23, x24, [sp, #48]
  405bcc:	ldp	x25, x26, [sp, #64]
  405bd0:	ldr	x27, [sp, #80]
  405bd4:	ldp	x29, x30, [sp], #112
  405bd8:	ret
  405bdc:	ldrb	w0, [x19, #52]
  405be0:	cbz	w0, 405bf4 <ferror@plt+0x2c74>
  405be4:	add	x1, sp, #0x60
  405be8:	mov	x0, x20
  405bec:	bl	402cd0 <strtold@plt>
  405bf0:	b	405b4c <ferror@plt+0x2bcc>
  405bf4:	ldr	x0, [x19, #48]
  405bf8:	tst	x0, x26
  405bfc:	b.eq	405ad8 <ferror@plt+0x2b58>  // b.none
  405c00:	cmp	x21, x20
  405c04:	b.ls	405c58 <ferror@plt+0x2cd8>  // b.plast
  405c08:	ldrb	w0, [x20]
  405c0c:	cmp	w0, #0x2d
  405c10:	cset	w0, eq  // eq = none
  405c14:	add	x0, x20, w0, sxtw
  405c18:	str	x0, [sp, #104]
  405c1c:	add	x0, sp, #0x68
  405c20:	bl	4052c4 <ferror@plt+0x2344>
  405c24:	and	w0, w0, #0xff
  405c28:	cmp	w0, #0x2f
  405c2c:	b.ls	405b4c <ferror@plt+0x2bcc>  // b.plast
  405c30:	ldrb	w0, [x19, #53]
  405c34:	ldr	x1, [sp, #104]
  405c38:	cbz	w0, 405c60 <ferror@plt+0x2ce0>
  405c3c:	ldrb	w0, [x1]
  405c40:	ldrb	w0, [x25, x0]
  405c44:	cmp	w0, #0x0
  405c48:	cset	w0, ne  // ne = any
  405c4c:	add	x0, x1, w0, sxtw
  405c50:	str	x0, [sp, #96]
  405c54:	b	405b4c <ferror@plt+0x2bcc>
  405c58:	mov	w0, #0x0                   	// #0
  405c5c:	b	405c14 <ferror@plt+0x2c94>
  405c60:	mov	w0, #0x0                   	// #0
  405c64:	b	405c4c <ferror@plt+0x2ccc>
  405c68:	mov	x20, x24
  405c6c:	b	405b54 <ferror@plt+0x2bd4>
  405c70:	mov	w0, #0x20                  	// #32
  405c74:	bl	402b10 <putchar_unlocked@plt>
  405c78:	b	405b74 <ferror@plt+0x2bf4>
  405c7c:	mov	w0, #0x5f                  	// #95
  405c80:	bl	402b10 <putchar_unlocked@plt>
  405c84:	subs	x20, x20, #0x1
  405c88:	b.ne	405c7c <ferror@plt+0x2cfc>  // b.any
  405c8c:	mov	w0, #0xa                   	// #10
  405c90:	bl	402b10 <putchar_unlocked@plt>
  405c94:	b	405ba4 <ferror@plt+0x2c24>
  405c98:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  405c9c:	mov	x3, x21
  405ca0:	mov	x2, x24
  405ca4:	mov	x1, #0x1                   	// #1
  405ca8:	ldrb	w0, [x0, #1176]
  405cac:	sturb	w0, [x20, #-1]
  405cb0:	mov	x0, x19
  405cb4:	bl	402860 <fwrite_unlocked@plt>
  405cb8:	cmp	x0, x24
  405cbc:	b.eq	405cdc <ferror@plt+0x2d5c>  // b.none
  405cc0:	mov	w2, #0x5                   	// #5
  405cc4:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405cc8:	mov	x0, #0x0                   	// #0
  405ccc:	add	x1, x1, #0x220
  405cd0:	bl	402e60 <dcgettext@plt>
  405cd4:	mov	x1, x25
  405cd8:	b	405b1c <ferror@plt+0x2b9c>
  405cdc:	sturb	wzr, [x20, #-1]
  405ce0:	b	405bc0 <ferror@plt+0x2c40>
  405ce4:	stp	x29, x30, [sp, #-48]!
  405ce8:	mov	x29, sp
  405cec:	stp	x19, x20, [sp, #16]
  405cf0:	mov	x19, x1
  405cf4:	stp	x21, x22, [sp, #32]
  405cf8:	mov	x21, x0
  405cfc:	mov	x22, x2
  405d00:	bl	402ef0 <__errno_location@plt>
  405d04:	mov	x20, x0
  405d08:	str	wzr, [x0]
  405d0c:	mov	x2, x22
  405d10:	mov	x1, x19
  405d14:	mov	x0, x21
  405d18:	bl	402d90 <strxfrm@plt>
  405d1c:	ldr	w20, [x20]
  405d20:	cbz	w20, 405da8 <ferror@plt+0x2e28>
  405d24:	mov	w2, #0x5                   	// #5
  405d28:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405d2c:	mov	x0, #0x0                   	// #0
  405d30:	add	x1, x1, #0x241
  405d34:	bl	402e60 <dcgettext@plt>
  405d38:	mov	x2, x0
  405d3c:	mov	w1, w20
  405d40:	mov	w0, #0x0                   	// #0
  405d44:	bl	4028c0 <error@plt>
  405d48:	mov	w2, #0x5                   	// #5
  405d4c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405d50:	mov	x0, #0x0                   	// #0
  405d54:	add	x1, x1, #0x25e
  405d58:	bl	402e60 <dcgettext@plt>
  405d5c:	mov	x2, x0
  405d60:	mov	w1, #0x0                   	// #0
  405d64:	mov	w0, #0x0                   	// #0
  405d68:	bl	4028c0 <error@plt>
  405d6c:	mov	w2, #0x5                   	// #5
  405d70:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  405d74:	mov	x0, #0x0                   	// #0
  405d78:	add	x1, x1, #0x288
  405d7c:	bl	402e60 <dcgettext@plt>
  405d80:	mov	x20, x0
  405d84:	mov	x2, x19
  405d88:	mov	w1, #0x8                   	// #8
  405d8c:	mov	w0, #0x0                   	// #0
  405d90:	bl	40cc90 <ferror@plt+0x9d10>
  405d94:	mov	x2, x20
  405d98:	mov	x3, x0
  405d9c:	mov	w1, #0x0                   	// #0
  405da0:	mov	w0, #0x2                   	// #2
  405da4:	bl	4028c0 <error@plt>
  405da8:	ldp	x19, x20, [sp, #16]
  405dac:	ldp	x21, x22, [sp, #32]
  405db0:	ldp	x29, x30, [sp], #48
  405db4:	ret
  405db8:	mov	x12, #0x21a0                	// #8608
  405dbc:	sub	sp, sp, x12
  405dc0:	stp	x29, x30, [sp]
  405dc4:	mov	x29, sp
  405dc8:	ldr	x9, [x1, #24]
  405dcc:	stp	x0, x1, [sp, #152]
  405dd0:	stp	x19, x20, [sp, #16]
  405dd4:	stp	x23, x24, [sp, #48]
  405dd8:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x16920>
  405ddc:	add	x24, x24, #0x580
  405de0:	ldr	x19, [x0, #16]
  405de4:	stp	x25, x26, [sp, #64]
  405de8:	ldr	x0, [sp, #152]
  405dec:	stp	x21, x22, [sp, #32]
  405df0:	ldr	x26, [x1, #16]
  405df4:	stp	x27, x28, [sp, #80]
  405df8:	ldr	x20, [x24, #1328]
  405dfc:	stp	wzr, wzr, [sp, #208]
  405e00:	ldr	x8, [x0, #24]
  405e04:	add	x0, sp, #0x1bc
  405e08:	str	x0, [sp, #200]
  405e0c:	add	x0, sp, #0x110
  405e10:	str	x0, [sp, #216]
  405e14:	ldrb	w0, [x24, #1339]
  405e18:	cmp	x19, x8
  405e1c:	csel	x2, x19, x8, cs  // cs = hs, nlast
  405e20:	cmp	x26, x9
  405e24:	csel	x4, x26, x9, cs  // cs = hs, nlast
  405e28:	sub	x23, x2, x19
  405e2c:	sub	x5, x4, x26
  405e30:	ldp	x28, x27, [x20, #32]
  405e34:	cbnz	w0, 405e4c <ferror@plt+0x2ecc>
  405e38:	ldr	x0, [x20, #48]
  405e3c:	tst	x0, #0xffffffffff0000
  405e40:	b.ne	405e4c <ferror@plt+0x2ecc>  // b.any
  405e44:	ldrb	w0, [x20, #56]
  405e48:	cbz	w0, 406534 <ferror@plt+0x35b4>
  405e4c:	orr	x0, x27, x28
  405e50:	str	x0, [sp, #224]
  405e54:	cbz	x0, 405f44 <ferror@plt+0x2fc4>
  405e58:	add	x0, x23, x5
  405e5c:	add	x0, x0, #0x2
  405e60:	cmp	x0, #0xfa0
  405e64:	b.ls	405ec8 <ferror@plt+0x2f48>  // b.plast
  405e68:	str	x5, [sp, #104]
  405e6c:	bl	40e344 <ferror@plt+0xb3c4>
  405e70:	ldr	x5, [sp, #104]
  405e74:	mov	x22, x0
  405e78:	str	x0, [sp, #184]
  405e7c:	add	x21, x23, #0x1
  405e80:	mov	x1, #0x0                   	// #0
  405e84:	add	x21, x22, x21
  405e88:	str	xzr, [sp, #144]
  405e8c:	cmp	x1, x23
  405e90:	b.ne	405ed4 <ferror@plt+0x2f54>  // b.any
  405e94:	ldr	x0, [sp, #144]
  405e98:	mov	x1, #0x0                   	// #0
  405e9c:	str	xzr, [sp, #104]
  405ea0:	strb	wzr, [x22, x0]
  405ea4:	cmp	x1, x5
  405ea8:	b.ne	405f0c <ferror@plt+0x2f8c>  // b.any
  405eac:	ldr	x0, [sp, #104]
  405eb0:	strb	wzr, [x21, x0]
  405eb4:	ldrb	w0, [x20, #50]
  405eb8:	cbz	w0, 405fac <ferror@plt+0x302c>
  405ebc:	mov	x0, x22
  405ec0:	add	x2, x24, #0x18
  405ec4:	b	405f74 <ferror@plt+0x2ff4>
  405ec8:	add	x22, sp, #0x260
  405ecc:	str	xzr, [sp, #184]
  405ed0:	b	405e7c <ferror@plt+0x2efc>
  405ed4:	ldrb	w0, [x19, x1]
  405ed8:	cbz	x28, 405ee8 <ferror@plt+0x2f68>
  405edc:	and	x2, x0, #0xff
  405ee0:	ldrb	w2, [x28, x2]
  405ee4:	cbnz	w2, 405f04 <ferror@plt+0x2f84>
  405ee8:	cbz	x27, 405ef4 <ferror@plt+0x2f74>
  405eec:	and	x0, x0, #0xff
  405ef0:	ldrb	w0, [x27, x0]
  405ef4:	ldr	x2, [sp, #144]
  405ef8:	strb	w0, [x22, x2]
  405efc:	add	x0, x2, #0x1
  405f00:	str	x0, [sp, #144]
  405f04:	add	x1, x1, #0x1
  405f08:	b	405e8c <ferror@plt+0x2f0c>
  405f0c:	ldrb	w0, [x26, x1]
  405f10:	cbz	x28, 405f20 <ferror@plt+0x2fa0>
  405f14:	and	x2, x0, #0xff
  405f18:	ldrb	w2, [x28, x2]
  405f1c:	cbnz	w2, 405f3c <ferror@plt+0x2fbc>
  405f20:	cbz	x27, 405f2c <ferror@plt+0x2fac>
  405f24:	and	x0, x0, #0xff
  405f28:	ldrb	w0, [x27, x0]
  405f2c:	ldr	x2, [sp, #104]
  405f30:	strb	w0, [x21, x2]
  405f34:	add	x0, x2, #0x1
  405f38:	str	x0, [sp, #104]
  405f3c:	add	x1, x1, #0x1
  405f40:	b	405ea4 <ferror@plt+0x2f24>
  405f44:	ldrb	w0, [x2]
  405f48:	mov	x21, x26
  405f4c:	strb	wzr, [x2]
  405f50:	mov	x22, x19
  405f54:	str	w0, [sp, #208]
  405f58:	ldrb	w0, [x4]
  405f5c:	strb	wzr, [x4]
  405f60:	str	x5, [sp, #104]
  405f64:	str	x23, [sp, #144]
  405f68:	str	w0, [sp, #212]
  405f6c:	b	405eb4 <ferror@plt+0x2f34>
  405f70:	add	x0, x0, #0x1
  405f74:	ldrb	w1, [x0]
  405f78:	ldrb	w1, [x2, x1]
  405f7c:	cbnz	w1, 405f70 <ferror@plt+0x2ff0>
  405f80:	mov	x1, x21
  405f84:	add	x3, x24, #0x18
  405f88:	ldrb	w2, [x1]
  405f8c:	ldrb	w2, [x3, x2]
  405f90:	cbnz	w2, 405fa4 <ferror@plt+0x3024>
  405f94:	ldr	w3, [x24, #280]
  405f98:	ldr	w2, [x24, #284]
  405f9c:	bl	40db48 <ferror@plt+0xabc8>
  405fa0:	b	406088 <ferror@plt+0x3108>
  405fa4:	add	x1, x1, #0x1
  405fa8:	b	405f88 <ferror@plt+0x3008>
  405fac:	ldrb	w0, [x20, #52]
  405fb0:	cbz	w0, 406114 <ferror@plt+0x3194>
  405fb4:	add	x1, sp, #0xf8
  405fb8:	mov	x0, x22
  405fbc:	bl	402cd0 <strtold@plt>
  405fc0:	str	q0, [sp, #112]
  405fc4:	mov	x0, x21
  405fc8:	add	x1, sp, #0x100
  405fcc:	bl	402cd0 <strtold@plt>
  405fd0:	mov	v1.16b, v0.16b
  405fd4:	ldr	x0, [sp, #248]
  405fd8:	cmp	x22, x0
  405fdc:	ldr	x0, [sp, #256]
  405fe0:	b.ne	405ff0 <ferror@plt+0x3070>  // b.any
  405fe4:	cmp	x0, x21
  405fe8:	csetm	w25, ne  // ne = any
  405fec:	b	406094 <ferror@plt+0x3114>
  405ff0:	cmp	x21, x0
  405ff4:	b.eq	406510 <ferror@plt+0x3590>  // b.none
  405ff8:	str	q0, [sp, #128]
  405ffc:	ldr	q0, [sp, #112]
  406000:	bl	40fed4 <_obstack_memory_used@@Base+0x7f4>
  406004:	tbnz	w0, #31, 40610c <ferror@plt+0x318c>
  406008:	ldr	q0, [sp, #112]
  40600c:	ldr	q1, [sp, #128]
  406010:	bl	40fd94 <_obstack_memory_used@@Base+0x6b4>
  406014:	cmp	w0, #0x0
  406018:	b.gt	406510 <ferror@plt+0x3590>
  40601c:	ldr	q0, [sp, #112]
  406020:	ldr	q1, [sp, #128]
  406024:	bl	40fc94 <_obstack_memory_used@@Base+0x5b4>
  406028:	cbz	w0, 406090 <ferror@plt+0x3110>
  40602c:	ldr	q1, [sp, #128]
  406030:	mov	v0.16b, v1.16b
  406034:	bl	40fc94 <_obstack_memory_used@@Base+0x5b4>
  406038:	cbz	w0, 40610c <ferror@plt+0x318c>
  40603c:	ldr	q1, [sp, #112]
  406040:	mov	v0.16b, v1.16b
  406044:	bl	40fc94 <_obstack_memory_used@@Base+0x5b4>
  406048:	cbz	w0, 406510 <ferror@plt+0x3590>
  40604c:	mov	x0, x22
  406050:	mov	x1, #0x0                   	// #0
  406054:	bl	402cd0 <strtold@plt>
  406058:	str	q0, [sp, #288]
  40605c:	mov	x0, x21
  406060:	mov	x1, #0x0                   	// #0
  406064:	bl	402cd0 <strtold@plt>
  406068:	mov	x3, #0x1290                	// #4752
  40606c:	add	x0, sp, x3
  406070:	mov	x4, #0x1200                	// #4608
  406074:	mov	x2, #0x10                  	// #16
  406078:	add	x1, sp, x4
  40607c:	stur	q0, [x0, #-144]
  406080:	add	x0, sp, #0x120
  406084:	bl	402c40 <memcmp@plt>
  406088:	mov	w25, w0
  40608c:	b	406094 <ferror@plt+0x3114>
  406090:	mov	w25, #0x0                   	// #0
  406094:	ldr	x0, [sp, #224]
  406098:	cbz	x0, 406518 <ferror@plt+0x3598>
  40609c:	ldr	x0, [sp, #184]
  4060a0:	bl	402ce0 <free@plt>
  4060a4:	cbnz	w25, 406648 <ferror@plt+0x36c8>
  4060a8:	ldr	x20, [x20, #64]
  4060ac:	cbz	x20, 406654 <ferror@plt+0x36d4>
  4060b0:	ldr	x0, [x20, #16]
  4060b4:	cmn	x0, #0x1
  4060b8:	b.eq	4066a4 <ferror@plt+0x3724>  // b.none
  4060bc:	ldr	x0, [sp, #152]
  4060c0:	mov	x1, x20
  4060c4:	bl	4051a4 <ferror@plt+0x2224>
  4060c8:	mov	x8, x0
  4060cc:	ldr	x0, [sp, #160]
  4060d0:	mov	x1, x20
  4060d4:	bl	4051a4 <ferror@plt+0x2224>
  4060d8:	mov	x9, x0
  4060dc:	ldr	x0, [x20]
  4060e0:	cmn	x0, #0x1
  4060e4:	b.eq	4066d8 <ferror@plt+0x3758>  // b.none
  4060e8:	ldr	x0, [sp, #152]
  4060ec:	mov	x1, x20
  4060f0:	bl	4050a4 <ferror@plt+0x2124>
  4060f4:	mov	x19, x0
  4060f8:	ldr	x0, [sp, #160]
  4060fc:	mov	x1, x20
  406100:	bl	4050a4 <ferror@plt+0x2124>
  406104:	mov	x26, x0
  406108:	b	405e14 <ferror@plt+0x2e94>
  40610c:	mov	w25, #0xffffffff            	// #-1
  406110:	b	406094 <ferror@plt+0x3114>
  406114:	ldrb	w0, [x20, #53]
  406118:	cbz	w0, 406184 <ferror@plt+0x3204>
  40611c:	mov	x10, x22
  406120:	add	x1, x24, #0x18
  406124:	b	40612c <ferror@plt+0x31ac>
  406128:	add	x10, x10, #0x1
  40612c:	ldrb	w0, [x10]
  406130:	ldrb	w0, [x1, x0]
  406134:	cbnz	w0, 406128 <ferror@plt+0x31a8>
  406138:	mov	x11, x21
  40613c:	add	x1, x24, #0x18
  406140:	ldrb	w0, [x11]
  406144:	ldrb	w0, [x1, x0]
  406148:	cbnz	w0, 40617c <ferror@plt+0x31fc>
  40614c:	mov	x0, x10
  406150:	bl	40536c <ferror@plt+0x23ec>
  406154:	mov	w25, w0
  406158:	mov	x0, x11
  40615c:	bl	40536c <ferror@plt+0x23ec>
  406160:	subs	w25, w25, w0
  406164:	b.ne	406094 <ferror@plt+0x3114>  // b.any
  406168:	ldr	w3, [x24, #280]
  40616c:	mov	x1, x11
  406170:	ldr	w2, [x24, #284]
  406174:	mov	x0, x10
  406178:	b	405f9c <ferror@plt+0x301c>
  40617c:	add	x11, x11, #0x1
  406180:	b	406140 <ferror@plt+0x31c0>
  406184:	ldrb	w0, [x20, #54]
  406188:	cbz	w0, 4061b0 <ferror@plt+0x3230>
  40618c:	mov	x1, #0x0                   	// #0
  406190:	mov	x0, x22
  406194:	bl	4053c8 <ferror@plt+0x2448>
  406198:	mov	w25, w0
  40619c:	mov	x1, #0x0                   	// #0
  4061a0:	mov	x0, x21
  4061a4:	bl	4053c8 <ferror@plt+0x2448>
  4061a8:	sub	w25, w25, w0
  4061ac:	b	406094 <ferror@plt+0x3114>
  4061b0:	ldrb	w0, [x20, #51]
  4061b4:	cbz	w0, 4064c0 <ferror@plt+0x3540>
  4061b8:	add	x1, x24, #0x53c
  4061bc:	mov	x2, #0x9c                  	// #156
  4061c0:	add	x0, sp, #0x1bc
  4061c4:	bl	402820 <memcpy@plt>
  4061c8:	add	x1, sp, #0x1bc
  4061cc:	add	x0, sp, #0x120
  4061d0:	mov	x2, #0x9c                  	// #156
  4061d4:	bl	402820 <memcpy@plt>
  4061d8:	ldrb	w0, [x24, #1339]
  4061dc:	cbz	w0, 40649c <ferror@plt+0x351c>
  4061e0:	ldr	x0, [sp, #144]
  4061e4:	mov	x2, #0x1200                	// #4608
  4061e8:	ldr	x1, [sp, #104]
  4061ec:	add	x0, x22, x0
  4061f0:	str	x0, [sp, #176]
  4061f4:	mov	x27, x21
  4061f8:	ldr	x0, [sp, #104]
  4061fc:	add	x28, sp, x2
  406200:	mov	x19, #0xfa0                 	// #4000
  406204:	mov	w25, #0x0                   	// #0
  406208:	add	x0, x21, x0
  40620c:	str	x0, [sp, #168]
  406210:	ldr	x0, [sp, #144]
  406214:	str	xzr, [sp, #112]
  406218:	str	x22, [sp, #128]
  40621c:	add	x0, x0, x1
  406220:	add	x0, x0, x0, lsl #1
  406224:	add	x0, x0, #0x2
  406228:	str	x0, [sp, #192]
  40622c:	ldr	x0, [sp, #192]
  406230:	cmp	x0, x19
  406234:	b.ls	40627c <ferror@plt+0x32fc>  // b.plast
  406238:	add	x19, x19, x19, lsl #1
  40623c:	lsr	x19, x19, #1
  406240:	cmp	x0, x19
  406244:	csel	x19, x0, x19, cs  // cs = hs, nlast
  406248:	ldr	x0, [sp, #112]
  40624c:	bl	402ce0 <free@plt>
  406250:	mov	x0, x19
  406254:	bl	402a20 <malloc@plt>
  406258:	str	x0, [sp, #112]
  40625c:	cmp	x0, #0x0
  406260:	mov	x0, #0xfa0                 	// #4000
  406264:	csel	x19, x19, x0, ne  // ne = any
  406268:	ldr	x0, [sp, #112]
  40626c:	mov	x1, #0x1200                	// #4608
  406270:	add	x1, sp, x1
  406274:	cmp	x0, #0x0
  406278:	csel	x28, x0, x1, ne  // ne = any
  40627c:	ldr	x1, [sp, #128]
  406280:	ldr	x0, [sp, #176]
  406284:	cmp	x0, x1
  406288:	b.ls	406744 <ferror@plt+0x37c4>  // b.plast
  40628c:	mov	x2, x19
  406290:	mov	x0, x28
  406294:	bl	405ce4 <ferror@plt+0x2d64>
  406298:	add	x26, x0, #0x1
  40629c:	ldr	x0, [sp, #168]
  4062a0:	cmp	x0, x27
  4062a4:	b.ls	406434 <ferror@plt+0x34b4>  // b.plast
  4062a8:	cmp	x19, x26
  4062ac:	b.cc	406428 <ferror@plt+0x34a8>  // b.lo, b.ul, b.last
  4062b0:	add	x0, x28, x26
  4062b4:	sub	x2, x19, x26
  4062b8:	mov	x1, x27
  4062bc:	bl	405ce4 <ferror@plt+0x2d64>
  4062c0:	add	x23, x0, #0x1
  4062c4:	cmp	x19, x26
  4062c8:	add	x0, x23, x26
  4062cc:	b.cc	4062d8 <ferror@plt+0x3358>  // b.lo, b.ul, b.last
  4062d0:	cmp	x19, x0
  4062d4:	b.cs	406340 <ferror@plt+0x33c0>  // b.hs, b.nlast
  4062d8:	mov	x19, x0
  4062dc:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  4062e0:	cmp	x19, x0
  4062e4:	b.cs	4062f0 <ferror@plt+0x3370>  // b.hs, b.nlast
  4062e8:	add	x19, x19, x19, lsl #1
  4062ec:	lsr	x19, x19, #1
  4062f0:	ldr	x0, [sp, #112]
  4062f4:	bl	402ce0 <free@plt>
  4062f8:	mov	x0, x19
  4062fc:	bl	40e344 <ferror@plt+0xb3c4>
  406300:	ldr	x2, [sp, #128]
  406304:	mov	x28, x0
  406308:	ldr	x1, [sp, #176]
  40630c:	cmp	x1, x2
  406310:	b.ls	406320 <ferror@plt+0x33a0>  // b.plast
  406314:	ldr	x1, [sp, #128]
  406318:	mov	x2, x26
  40631c:	bl	402d90 <strxfrm@plt>
  406320:	ldr	x0, [sp, #168]
  406324:	cmp	x0, x27
  406328:	b.ls	40633c <ferror@plt+0x33bc>  // b.plast
  40632c:	mov	x2, x23
  406330:	mov	x1, x27
  406334:	add	x0, x28, x26
  406338:	bl	402d90 <strxfrm@plt>
  40633c:	str	x28, [sp, #112]
  406340:	ldr	x1, [sp, #128]
  406344:	ldr	x0, [sp, #176]
  406348:	cmp	x0, x1
  40634c:	b.ls	406758 <ferror@plt+0x37d8>  // b.plast
  406350:	mov	x0, x1
  406354:	bl	402880 <strlen@plt>
  406358:	ldr	x1, [sp, #128]
  40635c:	add	x0, x0, #0x1
  406360:	add	x0, x1, x0
  406364:	str	x0, [sp, #128]
  406368:	ldr	x0, [sp, #168]
  40636c:	cmp	x0, x27
  406370:	b.ls	406384 <ferror@plt+0x3404>  // b.plast
  406374:	mov	x0, x27
  406378:	bl	402880 <strlen@plt>
  40637c:	add	x0, x0, #0x1
  406380:	add	x27, x27, x0
  406384:	ldr	x0, [sp, #128]
  406388:	add	x6, x28, x26
  40638c:	ldr	x1, [sp, #176]
  406390:	cmp	x0, x1
  406394:	ldr	x0, [sp, #168]
  406398:	ccmp	x0, x27, #0x2, cs  // cs = hs, nlast
  40639c:	b.hi	40643c <ferror@plt+0x34bc>  // b.pmore
  4063a0:	add	x19, x28, x26
  4063a4:	add	x2, sp, #0x120
  4063a8:	mov	x1, x26
  4063ac:	mov	x0, x28
  4063b0:	bl	409ca0 <ferror@plt+0x6d20>
  4063b4:	add	x1, sp, #0x100
  4063b8:	add	x0, sp, #0x120
  4063bc:	bl	409bf4 <ferror@plt+0x6c74>
  4063c0:	ldr	x2, [sp, #200]
  4063c4:	mov	x1, x23
  4063c8:	mov	x0, x19
  4063cc:	bl	409ca0 <ferror@plt+0x6d20>
  4063d0:	ldr	x0, [sp, #200]
  4063d4:	ldr	x1, [sp, #216]
  4063d8:	bl	409bf4 <ferror@plt+0x6c74>
  4063dc:	ldr	x1, [sp, #216]
  4063e0:	add	x0, sp, #0x100
  4063e4:	mov	x2, #0x10                  	// #16
  4063e8:	bl	402c40 <memcmp@plt>
  4063ec:	cbnz	w0, 4064b8 <ferror@plt+0x3538>
  4063f0:	cbnz	w25, 40641c <ferror@plt+0x349c>
  4063f4:	cmp	x26, x23
  4063f8:	mov	x1, x19
  4063fc:	csel	x2, x26, x23, ls  // ls = plast
  406400:	mov	x0, x28
  406404:	bl	402c40 <memcmp@plt>
  406408:	mov	w25, w0
  40640c:	cbnz	w0, 40641c <ferror@plt+0x349c>
  406410:	cmp	x26, x23
  406414:	cset	w0, hi  // hi = pmore
  406418:	sbc	w25, w0, wzr
  40641c:	ldr	x0, [sp, #112]
  406420:	bl	402ce0 <free@plt>
  406424:	b	406094 <ferror@plt+0x3114>
  406428:	mov	x0, #0x0                   	// #0
  40642c:	mov	x2, #0x0                   	// #0
  406430:	b	4062b8 <ferror@plt+0x3338>
  406434:	mov	x23, #0x0                   	// #0
  406438:	b	4062c4 <ferror@plt+0x3344>
  40643c:	add	x2, sp, #0x120
  406440:	mov	x1, x26
  406444:	mov	x0, x28
  406448:	str	x6, [sp, #232]
  40644c:	bl	409ca0 <ferror@plt+0x6d20>
  406450:	ldr	x2, [sp, #200]
  406454:	mov	x1, x23
  406458:	ldr	x6, [sp, #232]
  40645c:	mov	x0, x6
  406460:	bl	409ca0 <ferror@plt+0x6d20>
  406464:	cbnz	w25, 40622c <ferror@plt+0x32ac>
  406468:	ldr	x6, [sp, #232]
  40646c:	cmp	x23, x26
  406470:	csel	x2, x23, x26, ls  // ls = plast
  406474:	mov	x0, x28
  406478:	mov	x1, x6
  40647c:	bl	402c40 <memcmp@plt>
  406480:	mov	w25, w0
  406484:	cbnz	w0, 40622c <ferror@plt+0x32ac>
  406488:	cmp	x23, x26
  40648c:	cset	w3, cc  // cc = lo, ul, last
  406490:	cset	w0, hi  // hi = pmore
  406494:	sub	w25, w3, w0
  406498:	b	40622c <ferror@plt+0x32ac>
  40649c:	mov	x19, x21
  4064a0:	mov	x28, x22
  4064a4:	mov	w25, #0x0                   	// #0
  4064a8:	str	xzr, [sp, #112]
  4064ac:	ldr	x23, [sp, #104]
  4064b0:	ldr	x26, [sp, #144]
  4064b4:	b	4063a4 <ferror@plt+0x3424>
  4064b8:	mov	w25, w0
  4064bc:	b	40641c <ferror@plt+0x349c>
  4064c0:	ldrb	w0, [x20, #56]
  4064c4:	cbz	w0, 4064d8 <ferror@plt+0x3558>
  4064c8:	mov	x1, x21
  4064cc:	mov	x0, x22
  4064d0:	bl	40a078 <ferror@plt+0x70f8>
  4064d4:	b	406088 <ferror@plt+0x3108>
  4064d8:	ldr	x0, [sp, #144]
  4064dc:	cbnz	x0, 4064ec <ferror@plt+0x356c>
  4064e0:	ldr	x0, [sp, #104]
  4064e4:	cmp	x0, #0x0
  4064e8:	b	405fe8 <ferror@plt+0x3068>
  4064ec:	ldr	x0, [sp, #104]
  4064f0:	cbz	x0, 406510 <ferror@plt+0x3590>
  4064f4:	add	x3, x0, #0x1
  4064f8:	mov	x2, x21
  4064fc:	ldr	x0, [sp, #144]
  406500:	add	x1, x0, #0x1
  406504:	mov	x0, x22
  406508:	bl	40e6c4 <ferror@plt+0xb744>
  40650c:	b	406088 <ferror@plt+0x3108>
  406510:	mov	w25, #0x1                   	// #1
  406514:	b	406094 <ferror@plt+0x3114>
  406518:	ldr	x0, [sp, #144]
  40651c:	ldrb	w1, [sp, #208]
  406520:	strb	w1, [x22, x0]
  406524:	ldr	x0, [sp, #104]
  406528:	ldrb	w1, [sp, #212]
  40652c:	strb	w1, [x21, x0]
  406530:	b	4060a4 <ferror@plt+0x3124>
  406534:	cbz	x28, 4065fc <ferror@plt+0x367c>
  406538:	cbz	x27, 406598 <ferror@plt+0x3618>
  40653c:	cmp	x19, x2
  406540:	b.cs	406550 <ferror@plt+0x35d0>  // b.hs, b.nlast
  406544:	ldrb	w0, [x19]
  406548:	ldrb	w0, [x28, x0]
  40654c:	cbnz	w0, 406584 <ferror@plt+0x3604>
  406550:	cmp	x26, x4
  406554:	b.cs	4065e8 <ferror@plt+0x3668>  // b.hs, b.nlast
  406558:	ldrb	w0, [x26]
  40655c:	ldrb	w1, [x28, x0]
  406560:	cbnz	w1, 40658c <ferror@plt+0x360c>
  406564:	cmp	x19, x2
  406568:	b.cs	4065e8 <ferror@plt+0x3668>  // b.hs, b.nlast
  40656c:	ldrb	w1, [x19]
  406570:	ldrb	w0, [x27, x0]
  406574:	ldrb	w3, [x27, x1]
  406578:	subs	w25, w3, w0
  40657c:	b.ne	406648 <ferror@plt+0x36c8>  // b.any
  406580:	add	x26, x26, #0x1
  406584:	add	x19, x19, #0x1
  406588:	b	40653c <ferror@plt+0x35bc>
  40658c:	add	x26, x26, #0x1
  406590:	b	406550 <ferror@plt+0x35d0>
  406594:	add	x19, x19, #0x1
  406598:	cmp	x19, x2
  40659c:	b.cs	4065ac <ferror@plt+0x362c>  // b.hs, b.nlast
  4065a0:	ldrb	w0, [x19]
  4065a4:	ldrb	w0, [x28, x0]
  4065a8:	cbnz	w0, 406594 <ferror@plt+0x3614>
  4065ac:	cmp	x26, x4
  4065b0:	b.cs	4065e8 <ferror@plt+0x3668>  // b.hs, b.nlast
  4065b4:	ldrb	w1, [x26]
  4065b8:	ldrb	w0, [x26]
  4065bc:	ldrb	w1, [x28, x1]
  4065c0:	cbnz	w1, 4065e0 <ferror@plt+0x3660>
  4065c4:	cmp	x19, x2
  4065c8:	b.cs	4065e8 <ferror@plt+0x3668>  // b.hs, b.nlast
  4065cc:	ldrb	w3, [x19]
  4065d0:	subs	w25, w3, w0
  4065d4:	b.ne	406648 <ferror@plt+0x36c8>  // b.any
  4065d8:	add	x26, x26, #0x1
  4065dc:	b	406594 <ferror@plt+0x3614>
  4065e0:	add	x26, x26, #0x1
  4065e4:	b	4065ac <ferror@plt+0x362c>
  4065e8:	cmp	x19, x2
  4065ec:	cset	w0, cc  // cc = lo, ul, last
  4065f0:	cmp	x26, x4
  4065f4:	sbc	w25, w0, wzr
  4065f8:	b	4060a4 <ferror@plt+0x3124>
  4065fc:	cbnz	x23, 40660c <ferror@plt+0x368c>
  406600:	cmp	x5, #0x0
  406604:	csetm	w25, ne  // ne = any
  406608:	b	4060a4 <ferror@plt+0x3124>
  40660c:	cbz	x5, 406734 <ferror@plt+0x37b4>
  406610:	cbz	x27, 40667c <ferror@plt+0x36fc>
  406614:	cmp	x19, x2
  406618:	ccmp	x26, x4, #0x2, cc  // cc = lo, ul, last
  40661c:	b.cc	406630 <ferror@plt+0x36b0>  // b.lo, b.ul, b.last
  406620:	cmp	x23, x5
  406624:	b.cc	40673c <ferror@plt+0x37bc>  // b.lo, b.ul, b.last
  406628:	cset	w25, ne  // ne = any
  40662c:	b	4060a4 <ferror@plt+0x3124>
  406630:	ldrb	w0, [x19], #1
  406634:	ldrb	w3, [x27, x0]
  406638:	ldrb	w0, [x26], #1
  40663c:	ldrb	w0, [x27, x0]
  406640:	subs	w25, w3, w0
  406644:	b.eq	406614 <ferror@plt+0x3694>  // b.none
  406648:	ldrb	w0, [x20, #55]
  40664c:	cbz	w0, 406654 <ferror@plt+0x36d4>
  406650:	neg	w25, w25
  406654:	mov	w0, w25
  406658:	mov	x12, #0x21a0                	// #8608
  40665c:	ldp	x29, x30, [sp]
  406660:	ldp	x19, x20, [sp, #16]
  406664:	ldp	x21, x22, [sp, #32]
  406668:	ldp	x23, x24, [sp, #48]
  40666c:	ldp	x25, x26, [sp, #64]
  406670:	ldp	x27, x28, [sp, #80]
  406674:	add	sp, sp, x12
  406678:	ret
  40667c:	cmp	x23, x5
  406680:	mov	x1, x26
  406684:	csel	x2, x23, x5, ls  // ls = plast
  406688:	mov	x0, x19
  40668c:	str	x5, [sp, #104]
  406690:	bl	402c40 <memcmp@plt>
  406694:	mov	w25, w0
  406698:	ldr	x5, [sp, #104]
  40669c:	cbz	w0, 406620 <ferror@plt+0x36a0>
  4066a0:	b	406648 <ferror@plt+0x36c8>
  4066a4:	ldr	x0, [sp, #152]
  4066a8:	ldr	x1, [sp, #152]
  4066ac:	ldr	x8, [x0, #8]
  4066b0:	ldr	x2, [x1]
  4066b4:	sub	x0, x8, #0x1
  4066b8:	ldr	x1, [sp, #160]
  4066bc:	add	x8, x2, x0
  4066c0:	ldr	x0, [sp, #160]
  4066c4:	ldr	x4, [x1]
  4066c8:	ldr	x9, [x0, #8]
  4066cc:	sub	x0, x9, #0x1
  4066d0:	add	x9, x4, x0
  4066d4:	b	4060dc <ferror@plt+0x315c>
  4066d8:	ldr	x0, [sp, #152]
  4066dc:	ldr	x19, [x0]
  4066e0:	ldr	x0, [sp, #160]
  4066e4:	ldr	x26, [x0]
  4066e8:	ldrb	w0, [x20, #48]
  4066ec:	cbz	w0, 405e14 <ferror@plt+0x2e94>
  4066f0:	add	x1, x24, #0x18
  4066f4:	cmp	x19, x8
  4066f8:	b.cs	406708 <ferror@plt+0x3788>  // b.hs, b.nlast
  4066fc:	ldrb	w0, [x19]
  406700:	ldrb	w0, [x1, x0]
  406704:	cbnz	w0, 406710 <ferror@plt+0x3790>
  406708:	add	x1, x24, #0x18
  40670c:	b	40671c <ferror@plt+0x379c>
  406710:	add	x19, x19, #0x1
  406714:	b	4066f4 <ferror@plt+0x3774>
  406718:	add	x26, x26, #0x1
  40671c:	cmp	x26, x9
  406720:	b.cs	405e14 <ferror@plt+0x2e94>  // b.hs, b.nlast
  406724:	ldrb	w0, [x26]
  406728:	ldrb	w0, [x1, x0]
  40672c:	cbnz	w0, 406718 <ferror@plt+0x3798>
  406730:	b	405e14 <ferror@plt+0x2e94>
  406734:	mov	w25, #0x1                   	// #1
  406738:	b	406648 <ferror@plt+0x36c8>
  40673c:	mov	w25, #0xffffffff            	// #-1
  406740:	b	406648 <ferror@plt+0x36c8>
  406744:	ldr	x0, [sp, #168]
  406748:	mov	x26, #0x0                   	// #0
  40674c:	cmp	x0, x27
  406750:	b.hi	4062b0 <ferror@plt+0x3330>  // b.pmore
  406754:	mov	x23, #0x0                   	// #0
  406758:	ldr	x0, [sp, #168]
  40675c:	cmp	x0, x27
  406760:	b.hi	406374 <ferror@plt+0x33f4>  // b.pmore
  406764:	b	4063a0 <ferror@plt+0x3420>
  406768:	stp	x29, x30, [sp, #-160]!
  40676c:	mov	x29, sp
  406770:	stp	x27, x28, [sp, #80]
  406774:	mov	x27, x0
  406778:	ldrb	w0, [x0, #48]
  40677c:	stp	x19, x20, [sp, #16]
  406780:	stp	x21, x22, [sp, #32]
  406784:	stp	x23, x24, [sp, #48]
  406788:	stp	x25, x26, [sp, #64]
  40678c:	str	x2, [sp, #120]
  406790:	cbnz	w0, 406a04 <ferror@plt+0x3a84>
  406794:	adrp	x24, 426000 <_obstack_memory_used@@Base+0x16920>
  406798:	add	x0, x24, #0x3d0
  40679c:	str	x0, [sp, #104]
  4067a0:	mov	x23, x1
  4067a4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  4067a8:	add	x19, x19, #0x580
  4067ac:	ldrb	w25, [x0, #200]
  4067b0:	ldr	x0, [x27, #40]
  4067b4:	str	x0, [sp, #96]
  4067b8:	ldr	x0, [sp, #104]
  4067bc:	ldr	x1, [x27, #8]
  4067c0:	ldr	x2, [x27, #32]
  4067c4:	ldr	x21, [x0, #208]
  4067c8:	cmp	x1, x2
  4067cc:	ldr	x22, [x19, #1328]
  4067d0:	b.eq	4067ec <ferror@plt+0x386c>  // b.none
  4067d4:	ldr	x0, [x27]
  4067d8:	sub	x1, x1, x2
  4067dc:	add	x1, x0, x1
  4067e0:	bl	402830 <memmove@plt>
  4067e4:	ldr	x0, [x27, #32]
  4067e8:	stp	x0, xzr, [x27, #8]
  4067ec:	sub	x21, x21, #0x22
  4067f0:	add	x0, x19, #0x18
  4067f4:	str	x0, [sp, #128]
  4067f8:	ldp	x28, x5, [x27]
  4067fc:	ldp	x0, x19, [x27, #16]
  406800:	ldr	x1, [sp, #96]
  406804:	add	x26, x28, x5
  406808:	add	x19, x28, x19
  40680c:	sub	x24, x19, x0, lsl #5
  406810:	msub	x19, x0, x1, x19
  406814:	sub	x19, x19, x26
  406818:	cbz	x0, 406824 <ferror@plt+0x38a4>
  40681c:	ldp	x6, x0, [x24]
  406820:	add	x28, x6, x0
  406824:	ldr	x0, [sp, #96]
  406828:	add	x0, x0, #0x1
  40682c:	str	x0, [sp, #112]
  406830:	b	4068e8 <ferror@plt+0x3968>
  406834:	ldr	x0, [sp, #112]
  406838:	sub	x2, x19, #0x1
  40683c:	mov	x3, x23
  406840:	mov	x1, #0x1                   	// #1
  406844:	udiv	x2, x2, x0
  406848:	mov	x0, x26
  40684c:	str	x2, [sp, #136]
  406850:	bl	402c30 <fread_unlocked@plt>
  406854:	ldr	x2, [sp, #136]
  406858:	add	x20, x26, x0
  40685c:	sub	x19, x19, x0
  406860:	cmp	x2, x0
  406864:	b.eq	4068c8 <ferror@plt+0x3948>  // b.none
  406868:	mov	x0, x23
  40686c:	bl	4028e0 <ferror_unlocked@plt>
  406870:	cbz	w0, 406890 <ferror@plt+0x3910>
  406874:	mov	w2, #0x5                   	// #5
  406878:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  40687c:	mov	x0, #0x0                   	// #0
  406880:	add	x1, x1, #0x2a8
  406884:	bl	402e60 <dcgettext@plt>
  406888:	ldr	x1, [sp, #120]
  40688c:	bl	405830 <ferror@plt+0x28b0>
  406890:	mov	x0, x23
  406894:	bl	402d40 <feof_unlocked@plt>
  406898:	cbz	w0, 4068c8 <ferror@plt+0x3948>
  40689c:	mov	w0, #0x1                   	// #1
  4068a0:	strb	w0, [x27, #48]
  4068a4:	ldr	x0, [x27]
  4068a8:	cmp	x0, x20
  4068ac:	b.eq	406a04 <ferror@plt+0x3a84>  // b.none
  4068b0:	cmp	x28, x20
  4068b4:	b.eq	4068c8 <ferror@plt+0x3948>  // b.none
  4068b8:	ldurb	w0, [x20, #-1]
  4068bc:	cmp	w0, w25
  4068c0:	b.eq	4068c8 <ferror@plt+0x3948>  // b.none
  4068c4:	strb	w25, [x20], #1
  4068c8:	sub	x2, x20, x26
  4068cc:	mov	w1, w25
  4068d0:	mov	x0, x26
  4068d4:	bl	402e10 <memchr@plt>
  4068d8:	cbnz	x0, 40694c <ferror@plt+0x39cc>
  4068dc:	ldrb	w0, [x27, #48]
  4068e0:	mov	x26, x20
  4068e4:	cbnz	w0, 4068f4 <ferror@plt+0x3974>
  4068e8:	ldr	x0, [sp, #112]
  4068ec:	cmp	x0, x19
  4068f0:	b.cc	406834 <ferror@plt+0x38b4>  // b.lo, b.ul, b.last
  4068f4:	ldr	x0, [x27]
  4068f8:	ldr	x2, [x27, #24]
  4068fc:	sub	x1, x26, x0
  406900:	str	x1, [x27, #8]
  406904:	add	x1, x0, x2
  406908:	sub	x7, x1, x24
  40690c:	asr	x7, x7, #5
  406910:	str	x7, [x27, #16]
  406914:	cbz	x7, 4069dc <ferror@plt+0x3a5c>
  406918:	ldr	x0, [sp, #104]
  40691c:	sub	x5, x26, x28
  406920:	add	x21, x21, #0x22
  406924:	str	x5, [x27, #32]
  406928:	str	x21, [x0, #208]
  40692c:	mov	w0, #0x1                   	// #1
  406930:	ldp	x19, x20, [sp, #16]
  406934:	ldp	x21, x22, [sp, #32]
  406938:	ldp	x23, x24, [sp, #48]
  40693c:	ldp	x25, x26, [sp, #64]
  406940:	ldp	x27, x28, [sp, #80]
  406944:	ldp	x29, x30, [sp], #160
  406948:	ret
  40694c:	mov	x26, x0
  406950:	strb	wzr, [x26], #1
  406954:	str	x28, [x24, #-32]!
  406958:	sub	x1, x26, x28
  40695c:	cmp	x21, x1
  406960:	str	x1, [x24, #8]
  406964:	csel	x21, x21, x1, cs  // cs = hs, nlast
  406968:	ldr	x1, [sp, #96]
  40696c:	sub	x19, x19, x1
  406970:	cbz	x22, 4069ac <ferror@plt+0x3a2c>
  406974:	ldr	x1, [x22, #16]
  406978:	cmn	x1, #0x1
  40697c:	b.eq	40698c <ferror@plt+0x3a0c>  // b.none
  406980:	mov	x1, x22
  406984:	mov	x0, x24
  406988:	bl	4051a4 <ferror@plt+0x2224>
  40698c:	str	x0, [x24, #24]
  406990:	ldr	x0, [x22]
  406994:	cmn	x0, #0x1
  406998:	b.eq	4069b4 <ferror@plt+0x3a34>  // b.none
  40699c:	mov	x1, x22
  4069a0:	mov	x0, x24
  4069a4:	bl	4050a4 <ferror@plt+0x2124>
  4069a8:	str	x0, [x24, #16]
  4069ac:	mov	x28, x26
  4069b0:	b	4068c8 <ferror@plt+0x3948>
  4069b4:	ldrb	w0, [x22, #48]
  4069b8:	cbz	w0, 4069cc <ferror@plt+0x3a4c>
  4069bc:	ldrb	w0, [x28]
  4069c0:	ldr	x1, [sp, #128]
  4069c4:	ldrb	w0, [x1, x0]
  4069c8:	cbnz	w0, 4069d4 <ferror@plt+0x3a54>
  4069cc:	str	x28, [x24, #16]
  4069d0:	b	4069ac <ferror@plt+0x3a2c>
  4069d4:	add	x28, x28, #0x1
  4069d8:	b	4069bc <ferror@plt+0x3a3c>
  4069dc:	lsr	x2, x2, #5
  4069e0:	add	x1, sp, #0x98
  4069e4:	str	x2, [sp, #152]
  4069e8:	mov	x2, #0x20                  	// #32
  4069ec:	bl	40e414 <ferror@plt+0xb494>
  4069f0:	str	x0, [x27]
  4069f4:	ldr	x0, [sp, #152]
  4069f8:	lsl	x0, x0, #5
  4069fc:	str	x0, [x27, #24]
  406a00:	b	4067f8 <ferror@plt+0x3878>
  406a04:	mov	w0, #0x0                   	// #0
  406a08:	b	406930 <ferror@plt+0x39b0>
  406a0c:	stp	x29, x30, [sp, #-64]!
  406a10:	cmp	w0, #0x0
  406a14:	cset	w2, eq  // eq = none
  406a18:	mov	x29, sp
  406a1c:	add	x1, sp, #0x2c
  406a20:	stp	x19, x20, [sp, #16]
  406a24:	mov	w19, w0
  406a28:	csinv	w0, w0, wzr, ne  // ne = any
  406a2c:	bl	402f50 <waitpid@plt>
  406a30:	cmp	w0, #0x0
  406a34:	b.ge	406a7c <ferror@plt+0x3afc>  // b.tcont
  406a38:	bl	402ef0 <__errno_location@plt>
  406a3c:	ldr	w20, [x0]
  406a40:	mov	w2, #0x5                   	// #5
  406a44:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  406a48:	mov	x0, #0x0                   	// #0
  406a4c:	add	x1, x1, #0x2b4
  406a50:	bl	402e60 <dcgettext@plt>
  406a54:	mov	x19, x0
  406a58:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  406a5c:	ldr	x1, [x0, #2904]
  406a60:	mov	w0, #0x4                   	// #4
  406a64:	bl	40cd1c <ferror@plt+0x9d9c>
  406a68:	mov	x3, x0
  406a6c:	mov	x2, x19
  406a70:	mov	w1, w20
  406a74:	mov	w0, #0x2                   	// #2
  406a78:	bl	4028c0 <error@plt>
  406a7c:	mov	w20, w0
  406a80:	b.eq	406b04 <ferror@plt+0x3b84>  // b.none
  406a84:	cmp	w19, #0x0
  406a88:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  406a8c:	add	x19, x19, #0x580
  406a90:	b.gt	406ab0 <ferror@plt+0x3b30>
  406a94:	ldr	x0, [x19, #1504]
  406a98:	add	x1, sp, #0x30
  406a9c:	str	w20, [sp, #56]
  406aa0:	bl	40af30 <ferror@plt+0x7fb0>
  406aa4:	cbz	x0, 406b04 <ferror@plt+0x3b84>
  406aa8:	mov	w1, #0x2                   	// #2
  406aac:	strb	w1, [x0, #12]
  406ab0:	ldr	w0, [sp, #44]
  406ab4:	ubfx	x1, x0, #8, #8
  406ab8:	and	w0, w0, #0x7f
  406abc:	orr	w0, w1, w0
  406ac0:	cbz	w0, 406af8 <ferror@plt+0x3b78>
  406ac4:	mov	w2, #0x5                   	// #5
  406ac8:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  406acc:	mov	x0, #0x0                   	// #0
  406ad0:	add	x1, x1, #0x2c8
  406ad4:	bl	402e60 <dcgettext@plt>
  406ad8:	mov	x20, x0
  406adc:	ldr	x1, [x19, #1496]
  406ae0:	mov	w0, #0x4                   	// #4
  406ae4:	bl	40cd1c <ferror@plt+0x9d9c>
  406ae8:	mov	x3, x0
  406aec:	mov	x2, x20
  406af0:	mov	w1, #0x0                   	// #0
  406af4:	b	406a74 <ferror@plt+0x3af4>
  406af8:	ldr	w0, [x19, #1512]
  406afc:	sub	w0, w0, #0x1
  406b00:	str	w0, [x19, #1512]
  406b04:	mov	w0, w20
  406b08:	ldp	x19, x20, [sp, #16]
  406b0c:	ldp	x29, x30, [sp], #64
  406b10:	ret
  406b14:	stp	x29, x30, [sp, #-32]!
  406b18:	mov	x29, sp
  406b1c:	str	x19, [sp, #16]
  406b20:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  406b24:	add	x19, x19, #0x580
  406b28:	ldr	w0, [x19, #1512]
  406b2c:	cmp	w0, #0x0
  406b30:	b.le	406b40 <ferror@plt+0x3bc0>
  406b34:	mov	w0, #0x0                   	// #0
  406b38:	bl	406a0c <ferror@plt+0x3a8c>
  406b3c:	cbnz	w0, 406b28 <ferror@plt+0x3ba8>
  406b40:	ldr	x19, [sp, #16]
  406b44:	ldp	x29, x30, [sp], #32
  406b48:	ret
  406b4c:	stp	x29, x30, [sp, #-48]!
  406b50:	mov	x29, sp
  406b54:	stp	x19, x20, [sp, #16]
  406b58:	mov	w19, w0
  406b5c:	mov	x20, x1
  406b60:	mov	x0, x1
  406b64:	bl	402880 <strlen@plt>
  406b68:	mov	x1, x20
  406b6c:	mov	x2, x0
  406b70:	mov	w0, #0x2                   	// #2
  406b74:	bl	402ba0 <write@plt>
  406b78:	cbz	w19, 406bb8 <ferror@plt+0x3c38>
  406b7c:	add	x1, sp, #0x20
  406b80:	mov	w0, w19
  406b84:	bl	40b254 <ferror@plt+0x82d4>
  406b88:	mov	x19, x0
  406b8c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  406b90:	add	x1, x1, #0x2e6
  406b94:	mov	x2, #0x8                   	// #8
  406b98:	mov	w0, #0x2                   	// #2
  406b9c:	bl	402ba0 <write@plt>
  406ba0:	mov	x0, x19
  406ba4:	bl	402880 <strlen@plt>
  406ba8:	mov	x1, x19
  406bac:	mov	x2, x0
  406bb0:	mov	w0, #0x2                   	// #2
  406bb4:	bl	402ba0 <write@plt>
  406bb8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  406bbc:	add	x1, x1, #0x700
  406bc0:	mov	x2, #0x1                   	// #1
  406bc4:	mov	w0, #0x2                   	// #2
  406bc8:	bl	402ba0 <write@plt>
  406bcc:	mov	w0, #0x2                   	// #2
  406bd0:	bl	402850 <_exit@plt>
  406bd4:	stp	x29, x30, [sp, #-32]!
  406bd8:	mov	x29, sp
  406bdc:	stp	x19, x20, [sp, #16]
  406be0:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  406be4:	add	x19, x19, #0x580
  406be8:	mov	x20, x0
  406bec:	ldr	x0, [x19, #1504]
  406bf0:	cbnz	x0, 406c20 <ferror@plt+0x3ca0>
  406bf4:	mov	x4, #0x0                   	// #0
  406bf8:	adrp	x3, 405000 <ferror@plt+0x2080>
  406bfc:	adrp	x2, 405000 <ferror@plt+0x2080>
  406c00:	add	x3, x3, #0x28
  406c04:	add	x2, x2, #0x18
  406c08:	mov	x1, #0x0                   	// #0
  406c0c:	mov	x0, #0x2f                  	// #47
  406c10:	bl	40aa3c <ferror@plt+0x7abc>
  406c14:	str	x0, [x19, #1504]
  406c18:	cbnz	x0, 406c20 <ferror@plt+0x3ca0>
  406c1c:	bl	40e538 <ferror@plt+0xb5b8>
  406c20:	mov	w0, #0x1                   	// #1
  406c24:	strb	w0, [x20, #12]
  406c28:	ldr	x0, [x19, #1504]
  406c2c:	mov	x1, x20
  406c30:	bl	40aef0 <ferror@plt+0x7f70>
  406c34:	cbz	x0, 406c1c <ferror@plt+0x3c9c>
  406c38:	ldp	x19, x20, [sp, #16]
  406c3c:	ldp	x29, x30, [sp], #32
  406c40:	ret
  406c44:	stp	x29, x30, [sp, #-80]!
  406c48:	and	w5, w5, #0xff
  406c4c:	mov	x29, sp
  406c50:	stp	x19, x20, [sp, #16]
  406c54:	mov	x19, x1
  406c58:	mov	x20, x3
  406c5c:	stp	x21, x22, [sp, #32]
  406c60:	mov	x21, x2
  406c64:	stp	x23, x24, [sp, #48]
  406c68:	mov	x24, x4
  406c6c:	neg	x23, x4, lsl #5
  406c70:	str	x25, [sp, #64]
  406c74:	ldp	x2, x1, [x0, #40]
  406c78:	cmp	w5, #0x0
  406c7c:	add	x4, x0, #0x10
  406c80:	add	x22, x21, x23
  406c84:	add	x25, x19, #0x88
  406c88:	csel	x1, x1, x2, eq  // eq = none
  406c8c:	add	x2, x0, #0x18
  406c90:	csel	x2, x2, x4, eq  // eq = none
  406c94:	lsr	x3, x1, #1
  406c98:	sub	x1, x1, x1, lsr #1
  406c9c:	stp	x1, x0, [x19, #48]
  406ca0:	mov	x1, #0x0                   	// #0
  406ca4:	ldr	w0, [x0, #80]
  406ca8:	sub	x21, x22, x3, lsl #5
  406cac:	stp	x22, x21, [x19]
  406cb0:	add	w0, w0, #0x1
  406cb4:	stp	x22, x21, [x19, #16]
  406cb8:	stp	x2, x3, [x19, #32]
  406cbc:	str	w0, [x19, #80]
  406cc0:	add	x0, x19, #0x58
  406cc4:	strb	wzr, [x19, #84]
  406cc8:	bl	402b40 <pthread_mutex_init@plt>
  406ccc:	cmp	x20, #0x1
  406cd0:	b.ls	406d10 <ferror@plt+0x3d90>  // b.plast
  406cd4:	str	x25, [x19, #64]
  406cd8:	lsr	x3, x20, #1
  406cdc:	mov	x1, x25
  406ce0:	mov	x0, x19
  406ce4:	mov	w5, #0x1                   	// #1
  406ce8:	sub	x20, x20, x3
  406cec:	mov	x4, x24
  406cf0:	mov	x2, x22
  406cf4:	bl	406c44 <ferror@plt+0x3cc4>
  406cf8:	mov	x1, x0
  406cfc:	mov	w5, #0x0                   	// #0
  406d00:	mov	x0, x19
  406d04:	str	x1, [x19, #72]
  406d08:	mov	x19, x1
  406d0c:	b	406c74 <ferror@plt+0x3cf4>
  406d10:	mov	x0, x25
  406d14:	ldp	x21, x22, [sp, #32]
  406d18:	ldp	x23, x24, [sp, #48]
  406d1c:	ldr	x25, [sp, #64]
  406d20:	stp	xzr, xzr, [x19, #64]
  406d24:	ldp	x19, x20, [sp, #16]
  406d28:	ldp	x29, x30, [sp], #80
  406d2c:	ret
  406d30:	stp	x29, x30, [sp, #-48]!
  406d34:	mov	x29, sp
  406d38:	stp	x19, x20, [sp, #16]
  406d3c:	mov	x19, x0
  406d40:	mov	x20, x1
  406d44:	str	x21, [sp, #32]
  406d48:	add	x21, x0, #0x8
  406d4c:	mov	x0, x21
  406d50:	bl	402f30 <pthread_mutex_lock@plt>
  406d54:	ldr	x0, [x19], #56
  406d58:	mov	x1, x20
  406d5c:	bl	40b0c0 <ferror@plt+0x8140>
  406d60:	mov	w0, #0x1                   	// #1
  406d64:	strb	w0, [x20, #84]
  406d68:	mov	x0, x19
  406d6c:	bl	402a80 <pthread_cond_signal@plt>
  406d70:	mov	x0, x21
  406d74:	ldp	x19, x20, [sp, #16]
  406d78:	ldr	x21, [sp, #32]
  406d7c:	ldp	x29, x30, [sp], #48
  406d80:	b	402f40 <pthread_mutex_unlock@plt>
  406d84:	ldr	w3, [x0, #80]
  406d88:	ldr	w2, [x1, #80]
  406d8c:	cmp	w3, w2
  406d90:	b.ne	406da8 <ferror@plt+0x3e28>  // b.any
  406d94:	ldp	x2, x0, [x0, #40]
  406d98:	add	x2, x2, x0
  406d9c:	ldp	x0, x1, [x1, #40]
  406da0:	add	x0, x0, x1
  406da4:	cmp	x2, x0
  406da8:	cset	w0, cc  // cc = lo, ul, last
  406dac:	ret
  406db0:	ldrb	w1, [x0]
  406db4:	cbz	w1, 406dc8 <ferror@plt+0x3e48>
  406db8:	add	x1, x0, #0x8
  406dbc:	mov	x2, #0x0                   	// #0
  406dc0:	mov	w0, #0x2                   	// #2
  406dc4:	b	402840 <pthread_sigmask@plt>
  406dc8:	ret
  406dcc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  406dd0:	add	x0, x0, #0x580
  406dd4:	stp	x29, x30, [sp, #-160]!
  406dd8:	mov	x29, sp
  406ddc:	ldr	x0, [x0, #1184]
  406de0:	cbz	x0, 406df8 <ferror@plt+0x3e78>
  406de4:	add	x0, sp, #0x18
  406de8:	bl	405724 <ferror@plt+0x27a4>
  406dec:	bl	405764 <ferror@plt+0x27e4>
  406df0:	add	x0, sp, #0x18
  406df4:	bl	406db0 <ferror@plt+0x3e30>
  406df8:	bl	409088 <ferror@plt+0x6108>
  406dfc:	ldp	x29, x30, [sp], #160
  406e00:	ret
  406e04:	stp	x29, x30, [sp, #-224]!
  406e08:	mov	x29, sp
  406e0c:	stp	x19, x20, [sp, #16]
  406e10:	stp	x21, x22, [sp, #32]
  406e14:	mov	x22, x1
  406e18:	mov	w1, #0x80000               	// #524288
  406e1c:	stp	x23, x24, [sp, #48]
  406e20:	mov	x23, x0
  406e24:	str	x25, [sp, #64]
  406e28:	str	d8, [sp, #72]
  406e2c:	bl	40b7a4 <ferror@plt+0x8824>
  406e30:	tbnz	w0, #31, 406ef8 <ferror@plt+0x3f78>
  406e34:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  406e38:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  406e3c:	add	x19, x19, #0x580
  406e40:	ldr	w0, [x0, #1192]
  406e44:	ldr	w1, [x19, #1512]
  406e48:	add	w0, w0, #0x1
  406e4c:	cmp	w0, w1
  406e50:	b.cs	406e60 <ferror@plt+0x3ee0>  // b.hs, b.nlast
  406e54:	mov	w0, #0xffffffff            	// #-1
  406e58:	bl	406a0c <ferror@plt+0x3a8c>
  406e5c:	bl	406b14 <ferror@plt+0x3b94>
  406e60:	bl	402ef0 <__errno_location@plt>
  406e64:	mov	x21, x0
  406e68:	fmov	d8, #2.500000000000000000e-01
  406e6c:	sub	x22, x22, #0x1
  406e70:	cmn	x22, #0x1
  406e74:	b.ne	406e94 <ferror@plt+0x3f14>  // b.any
  406e78:	ldr	w0, [x23]
  406e7c:	ldr	w19, [x21]
  406e80:	bl	402b50 <close@plt>
  406e84:	ldr	w0, [x23, #4]
  406e88:	bl	402b50 <close@plt>
  406e8c:	str	w19, [x21]
  406e90:	b	406f14 <ferror@plt+0x3f94>
  406e94:	add	x0, sp, #0x58
  406e98:	bl	405724 <ferror@plt+0x27a4>
  406e9c:	ldr	x25, [x19, #1184]
  406ea0:	str	xzr, [x19, #1184]
  406ea4:	bl	402960 <fork@plt>
  406ea8:	ldr	w24, [x21]
  406eac:	mov	w20, w0
  406eb0:	cbz	w0, 406eb8 <ferror@plt+0x3f38>
  406eb4:	str	x25, [x19, #1184]
  406eb8:	add	x0, sp, #0x58
  406ebc:	bl	406db0 <ferror@plt+0x3e30>
  406ec0:	str	w24, [x21]
  406ec4:	cmp	w20, #0x0
  406ec8:	b.ge	406f00 <ferror@plt+0x3f80>  // b.tcont
  406ecc:	cmp	w24, #0xb
  406ed0:	b.ne	406e78 <ferror@plt+0x3ef8>  // b.any
  406ed4:	fmov	d0, d8
  406ed8:	bl	40e728 <ferror@plt+0xb7a8>
  406edc:	fadd	d8, d8, d8
  406ee0:	bl	406b14 <ferror@plt+0x3b94>
  406ee4:	b	406e6c <ferror@plt+0x3eec>
  406ee8:	ldr	w0, [x19, #1512]
  406eec:	add	w0, w0, #0x1
  406ef0:	str	w0, [x19, #1512]
  406ef4:	b	406f14 <ferror@plt+0x3f94>
  406ef8:	mov	w20, #0xffffffff            	// #-1
  406efc:	b	406f14 <ferror@plt+0x3f94>
  406f00:	b.ne	406ee8 <ferror@plt+0x3f68>  // b.any
  406f04:	mov	w0, #0x0                   	// #0
  406f08:	bl	402b50 <close@plt>
  406f0c:	mov	w0, #0x1                   	// #1
  406f10:	bl	402b50 <close@plt>
  406f14:	mov	w0, w20
  406f18:	ldr	d8, [sp, #72]
  406f1c:	ldp	x19, x20, [sp, #16]
  406f20:	ldp	x21, x22, [sp, #32]
  406f24:	ldp	x23, x24, [sp, #48]
  406f28:	ldr	x25, [sp, #64]
  406f2c:	ldp	x29, x30, [sp], #224
  406f30:	ret
  406f34:	stp	x29, x30, [sp, #-64]!
  406f38:	adrp	x4, 412000 <_obstack_memory_used@@Base+0x2920>
  406f3c:	add	x4, x4, #0x701
  406f40:	mov	x29, sp
  406f44:	add	x3, sp, #0x38
  406f48:	stp	x19, x20, [sp, #16]
  406f4c:	mov	x20, x1
  406f50:	mov	x19, x2
  406f54:	add	x1, sp, #0x30
  406f58:	mov	w2, #0xa                   	// #10
  406f5c:	str	x21, [sp, #32]
  406f60:	mov	x21, x0
  406f64:	bl	40ebdc <ferror@plt+0xbc5c>
  406f68:	cmp	w0, #0x4
  406f6c:	b.hi	406f90 <ferror@plt+0x4010>  // b.pmore
  406f70:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  406f74:	add	x1, x1, #0xbac
  406f78:	ldrb	w0, [x1, w0, uxtw]
  406f7c:	adr	x1, 406f88 <ferror@plt+0x4008>
  406f80:	add	x0, x1, w0, sxtb #2
  406f84:	br	x0
  406f88:	ldr	x0, [sp, #56]
  406f8c:	str	x0, [x20]
  406f90:	ldr	x19, [sp, #48]
  406f94:	mov	x0, x19
  406f98:	ldp	x19, x20, [sp, #16]
  406f9c:	ldr	x21, [sp, #32]
  406fa0:	ldp	x29, x30, [sp], #64
  406fa4:	ret
  406fa8:	mov	x0, #0xffffffffffffffff    	// #-1
  406fac:	b	406f8c <ferror@plt+0x400c>
  406fb0:	cbz	x19, 406f94 <ferror@plt+0x4014>
  406fb4:	mov	w2, #0x5                   	// #5
  406fb8:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  406fbc:	mov	x0, #0x0                   	// #0
  406fc0:	add	x1, x1, #0x2ef
  406fc4:	bl	402e60 <dcgettext@plt>
  406fc8:	mov	x20, x0
  406fcc:	mov	x1, x19
  406fd0:	mov	w2, #0x5                   	// #5
  406fd4:	mov	x0, #0x0                   	// #0
  406fd8:	bl	402e60 <dcgettext@plt>
  406fdc:	mov	x19, x0
  406fe0:	mov	x0, x21
  406fe4:	bl	40cef8 <ferror@plt+0x9f78>
  406fe8:	mov	x4, x0
  406fec:	mov	x3, x19
  406ff0:	mov	x2, x20
  406ff4:	mov	w1, #0x0                   	// #0
  406ff8:	mov	w0, #0x2                   	// #2
  406ffc:	bl	4028c0 <error@plt>
  407000:	stp	x29, x30, [sp, #-48]!
  407004:	mov	x29, sp
  407008:	stp	x19, x20, [sp, #16]
  40700c:	mov	x20, x1
  407010:	mov	x19, x0
  407014:	str	x21, [sp, #32]
  407018:	ldrb	w1, [x1]
  40701c:	cmp	w1, #0x72
  407020:	b.ne	407090 <ferror@plt+0x4110>  // b.any
  407024:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  407028:	add	x1, x1, #0x84b
  40702c:	bl	402c90 <strcmp@plt>
  407030:	cbnz	w0, 407068 <ferror@plt+0x40e8>
  407034:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407038:	mov	w1, #0x1                   	// #1
  40703c:	strb	w1, [x0, #2924]
  407040:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407044:	ldr	x19, [x0, #1384]
  407048:	mov	x0, x19
  40704c:	mov	w1, #0x2                   	// #2
  407050:	bl	409f64 <ferror@plt+0x6fe4>
  407054:	mov	x0, x19
  407058:	ldp	x19, x20, [sp, #16]
  40705c:	ldr	x21, [sp, #32]
  407060:	ldp	x29, x30, [sp], #48
  407064:	ret
  407068:	mov	x0, x19
  40706c:	mov	w1, #0x80000               	// #524288
  407070:	bl	402a50 <open@plt>
  407074:	tbnz	w0, #31, 407088 <ferror@plt+0x4108>
  407078:	mov	x1, x20
  40707c:	bl	402af0 <fdopen@plt>
  407080:	mov	x19, x0
  407084:	b	407048 <ferror@plt+0x40c8>
  407088:	mov	x19, #0x0                   	// #0
  40708c:	b	407048 <ferror@plt+0x40c8>
  407090:	cmp	w1, #0x77
  407094:	b.ne	407114 <ferror@plt+0x4194>  // b.any
  407098:	cbz	x0, 407108 <ferror@plt+0x4188>
  40709c:	mov	x1, #0x0                   	// #0
  4070a0:	mov	w0, #0x1                   	// #1
  4070a4:	bl	402ea0 <ftruncate@plt>
  4070a8:	cbz	w0, 407108 <ferror@plt+0x4188>
  4070ac:	bl	402ef0 <__errno_location@plt>
  4070b0:	ldr	w21, [x0]
  4070b4:	bl	405898 <ferror@plt+0x2918>
  4070b8:	cbz	x0, 4070cc <ferror@plt+0x414c>
  4070bc:	ldr	w0, [x0, #16]
  4070c0:	and	w0, w0, #0xf000
  4070c4:	cmp	w0, #0x8, lsl #12
  4070c8:	b.ne	407108 <ferror@plt+0x4188>  // b.any
  4070cc:	mov	w2, #0x5                   	// #5
  4070d0:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4070d4:	mov	x0, #0x0                   	// #0
  4070d8:	add	x1, x1, #0x310
  4070dc:	bl	402e60 <dcgettext@plt>
  4070e0:	mov	x20, x0
  4070e4:	mov	x2, x19
  4070e8:	mov	w1, #0x3                   	// #3
  4070ec:	mov	w0, #0x0                   	// #0
  4070f0:	bl	40cdc4 <ferror@plt+0x9e44>
  4070f4:	mov	x2, x20
  4070f8:	mov	x3, x0
  4070fc:	mov	w1, w21
  407100:	mov	w0, #0x2                   	// #2
  407104:	bl	4028c0 <error@plt>
  407108:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40710c:	ldr	x19, [x0, #1376]
  407110:	b	407054 <ferror@plt+0x40d4>
  407114:	adrp	x3, 411000 <_obstack_memory_used@@Base+0x1920>
  407118:	add	x3, x3, #0xc38
  40711c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407120:	adrp	x0, 410000 <_obstack_memory_used@@Base+0x920>
  407124:	add	x3, x3, #0x100
  407128:	add	x1, x1, #0x325
  40712c:	add	x0, x0, #0x330
  407130:	mov	w2, #0x3d6                 	// #982
  407134:	bl	402ee0 <__assert_fail@plt>
  407138:	stp	x29, x30, [sp, #-32]!
  40713c:	mov	x29, sp
  407140:	str	x19, [sp, #16]
  407144:	mov	x19, x0
  407148:	bl	407000 <ferror@plt+0x4080>
  40714c:	cbnz	x0, 407168 <ferror@plt+0x41e8>
  407150:	mov	w2, #0x5                   	// #5
  407154:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407158:	add	x1, x1, #0x359
  40715c:	bl	402e60 <dcgettext@plt>
  407160:	mov	x1, x19
  407164:	bl	405830 <ferror@plt+0x28b0>
  407168:	ldr	x19, [sp, #16]
  40716c:	ldp	x29, x30, [sp], #32
  407170:	ret
  407174:	stp	x29, x30, [sp, #-32]!
  407178:	mov	x29, sp
  40717c:	stp	x19, x20, [sp, #16]
  407180:	mov	x19, x0
  407184:	mov	x20, x1
  407188:	bl	4029b0 <fileno@plt>
  40718c:	cbz	w0, 4071b4 <ferror@plt+0x4234>
  407190:	cmp	w0, #0x1
  407194:	b.eq	4071d0 <ferror@plt+0x4250>  // b.none
  407198:	mov	x0, x19
  40719c:	bl	40ef28 <ferror@plt+0xbfa8>
  4071a0:	cbz	w0, 4071f8 <ferror@plt+0x4278>
  4071a4:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4071a8:	mov	w2, #0x5                   	// #5
  4071ac:	add	x1, x1, #0x373
  4071b0:	b	4071e8 <ferror@plt+0x4268>
  4071b4:	mov	x0, x19
  4071b8:	bl	402d40 <feof_unlocked@plt>
  4071bc:	cbz	w0, 4071f8 <ferror@plt+0x4278>
  4071c0:	mov	x0, x19
  4071c4:	ldp	x19, x20, [sp, #16]
  4071c8:	ldp	x29, x30, [sp], #32
  4071cc:	b	402df0 <clearerr_unlocked@plt>
  4071d0:	mov	x0, x19
  4071d4:	bl	402d60 <fflush_unlocked@plt>
  4071d8:	cbz	w0, 4071f8 <ferror@plt+0x4278>
  4071dc:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4071e0:	add	x1, x1, #0x365
  4071e4:	mov	w2, #0x5                   	// #5
  4071e8:	mov	x0, #0x0                   	// #0
  4071ec:	bl	402e60 <dcgettext@plt>
  4071f0:	mov	x1, x20
  4071f4:	bl	405830 <ferror@plt+0x28b0>
  4071f8:	ldp	x19, x20, [sp, #16]
  4071fc:	ldp	x29, x30, [sp], #32
  407200:	ret
  407204:	stp	x29, x30, [sp, #-80]!
  407208:	mov	x29, sp
  40720c:	stp	x19, x20, [sp, #16]
  407210:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  407214:	add	x19, x19, #0x580
  407218:	stp	x21, x22, [sp, #32]
  40721c:	mov	x22, x1
  407220:	ldr	x2, [x19, #1328]
  407224:	stp	x23, x24, [sp, #48]
  407228:	mov	x23, x0
  40722c:	str	x25, [sp, #64]
  407230:	cbnz	x2, 407270 <ferror@plt+0x42f0>
  407234:	ldr	x24, [x22, #8]
  407238:	ldr	x21, [x23, #8]
  40723c:	sub	x20, x24, #0x1
  407240:	subs	x25, x21, #0x1
  407244:	b.eq	4072a0 <ferror@plt+0x4320>  // b.none
  407248:	cbz	x20, 4072dc <ferror@plt+0x435c>
  40724c:	ldrb	w2, [x19, #1339]
  407250:	ldr	x1, [x22]
  407254:	ldr	x0, [x23]
  407258:	cbz	w2, 4072b8 <ferror@plt+0x4338>
  40725c:	mov	x2, x1
  407260:	mov	x3, x24
  407264:	mov	x1, x21
  407268:	bl	40e6c4 <ferror@plt+0xb744>
  40726c:	b	4072a8 <ferror@plt+0x4328>
  407270:	bl	405db8 <ferror@plt+0x2e38>
  407274:	cbnz	w0, 407288 <ferror@plt+0x4308>
  407278:	ldrb	w1, [x19, #1337]
  40727c:	cbnz	w1, 407288 <ferror@plt+0x4308>
  407280:	ldrb	w1, [x19, #1338]
  407284:	cbz	w1, 407234 <ferror@plt+0x42b4>
  407288:	ldp	x19, x20, [sp, #16]
  40728c:	ldp	x21, x22, [sp, #32]
  407290:	ldp	x23, x24, [sp, #48]
  407294:	ldr	x25, [sp, #64]
  407298:	ldp	x29, x30, [sp], #80
  40729c:	ret
  4072a0:	cmp	x20, #0x0
  4072a4:	csetm	w0, ne  // ne = any
  4072a8:	ldrb	w1, [x19, #1517]
  4072ac:	cbz	w1, 407288 <ferror@plt+0x4308>
  4072b0:	neg	w0, w0
  4072b4:	b	407288 <ferror@plt+0x4308>
  4072b8:	cmp	x25, x20
  4072bc:	csel	x2, x25, x20, ls  // ls = plast
  4072c0:	bl	402c40 <memcmp@plt>
  4072c4:	cbnz	w0, 4072a8 <ferror@plt+0x4328>
  4072c8:	cmp	x25, x20
  4072cc:	b.cc	4072e4 <ferror@plt+0x4364>  // b.lo, b.ul, b.last
  4072d0:	cmp	x21, x24
  4072d4:	cset	w0, ne  // ne = any
  4072d8:	b	4072a8 <ferror@plt+0x4328>
  4072dc:	mov	w0, #0x1                   	// #1
  4072e0:	b	4072a8 <ferror@plt+0x4328>
  4072e4:	mov	w0, #0xffffffff            	// #-1
  4072e8:	b	4072a8 <ferror@plt+0x4328>
  4072ec:	stp	x29, x30, [sp, #-80]!
  4072f0:	cmp	x1, #0x2
  4072f4:	mov	x29, sp
  4072f8:	stp	x19, x20, [sp, #16]
  4072fc:	mov	x20, x0
  407300:	mov	x19, x2
  407304:	stp	x21, x22, [sp, #32]
  407308:	stp	x23, x24, [sp, #48]
  40730c:	and	w24, w3, #0xff
  407310:	str	x25, [sp, #64]
  407314:	b.ne	4073b8 <ferror@plt+0x4438>  // b.any
  407318:	sub	x21, x0, #0x40
  40731c:	sub	x22, x0, #0x20
  407320:	mov	x1, x21
  407324:	mov	x0, x22
  407328:	bl	407204 <ferror@plt+0x4284>
  40732c:	cmp	w0, #0x0
  407330:	cbz	w24, 407388 <ferror@plt+0x4408>
  407334:	cset	w0, gt
  407338:	mvn	w1, w0
  40733c:	sub	w0, w0, #0x2
  407340:	sbfiz	x1, x1, #5, #32
  407344:	sbfiz	x0, x0, #5, #32
  407348:	add	x1, x20, x1
  40734c:	add	x20, x20, x0
  407350:	ldp	x2, x3, [x1]
  407354:	stp	x2, x3, [x19, #-32]
  407358:	ldp	x2, x3, [x1, #16]
  40735c:	stp	x2, x3, [x19, #-16]
  407360:	ldp	x0, x1, [x20]
  407364:	stp	x0, x1, [x19, #-64]
  407368:	ldp	x0, x1, [x20, #16]
  40736c:	stp	x0, x1, [x19, #-48]
  407370:	ldp	x19, x20, [sp, #16]
  407374:	ldp	x21, x22, [sp, #32]
  407378:	ldp	x23, x24, [sp, #48]
  40737c:	ldr	x25, [sp, #64]
  407380:	ldp	x29, x30, [sp], #80
  407384:	ret
  407388:	b.le	407370 <ferror@plt+0x43f0>
  40738c:	ldp	x4, x5, [x21]
  407390:	ldp	x2, x3, [x22]
  407394:	stp	x4, x5, [x22]
  407398:	ldp	x4, x5, [x21, #16]
  40739c:	stp	x2, x3, [x19, #-32]
  4073a0:	ldp	x0, x1, [x22, #16]
  4073a4:	stp	x4, x5, [x22, #16]
  4073a8:	stp	x0, x1, [x19, #-16]
  4073ac:	stp	x2, x3, [x21]
  4073b0:	stp	x0, x1, [x21, #16]
  4073b4:	b	407370 <ferror@plt+0x43f0>
  4073b8:	lsr	x21, x1, #1
  4073bc:	cmp	w24, #0x0
  4073c0:	sub	x25, x1, x1, lsr #1
  4073c4:	mov	x23, x1
  4073c8:	neg	x22, x21, lsl #5
  4073cc:	mov	w3, w24
  4073d0:	csel	x2, x22, xzr, ne  // ne = any
  4073d4:	mov	x1, x25
  4073d8:	add	x2, x19, x2
  4073dc:	sub	x0, x0, x21, lsl #5
  4073e0:	bl	4072ec <ferror@plt+0x436c>
  4073e4:	cmp	x23, #0x3
  4073e8:	b.ls	407450 <ferror@plt+0x44d0>  // b.plast
  4073ec:	eor	w3, w24, #0x1
  4073f0:	mov	x2, x19
  4073f4:	mov	x1, x21
  4073f8:	mov	x0, x20
  4073fc:	bl	4072ec <ferror@plt+0x436c>
  407400:	cbz	w24, 407410 <ferror@plt+0x4490>
  407404:	mov	x0, x20
  407408:	mov	x20, x19
  40740c:	mov	x19, x0
  407410:	add	x22, x20, x22
  407414:	sub	x23, x19, #0x20
  407418:	sub	x24, x22, #0x20
  40741c:	mov	x1, x24
  407420:	mov	x0, x23
  407424:	sub	x20, x20, #0x20
  407428:	bl	407204 <ferror@plt+0x4284>
  40742c:	cmp	w0, #0x0
  407430:	b.gt	407478 <ferror@plt+0x44f8>
  407434:	ldp	x0, x1, [x19, #-32]
  407438:	stp	x0, x1, [x20]
  40743c:	subs	x21, x21, #0x1
  407440:	ldp	x0, x1, [x19, #-16]
  407444:	stp	x0, x1, [x20, #16]
  407448:	b.ne	407470 <ferror@plt+0x44f0>  // b.any
  40744c:	b	407370 <ferror@plt+0x43f0>
  407450:	cbnz	w24, 407404 <ferror@plt+0x4484>
  407454:	ldp	x0, x1, [x20, #-32]
  407458:	stp	x0, x1, [x19, #-32]
  40745c:	ldp	x0, x1, [x20, #-16]
  407460:	stp	x0, x1, [x19, #-16]
  407464:	b	407410 <ferror@plt+0x4490>
  407468:	mov	x22, x24
  40746c:	mov	x23, x19
  407470:	mov	x19, x23
  407474:	b	407414 <ferror@plt+0x4494>
  407478:	ldp	x0, x1, [x22, #-32]
  40747c:	stp	x0, x1, [x20]
  407480:	subs	x25, x25, #0x1
  407484:	ldp	x0, x1, [x22, #-16]
  407488:	stp	x0, x1, [x20, #16]
  40748c:	b.ne	407468 <ferror@plt+0x44e8>  // b.any
  407490:	mov	x0, #0xffffffffffffffe0    	// #-32
  407494:	add	x2, x19, x0
  407498:	add	x1, x20, x0
  40749c:	subs	x21, x21, #0x1
  4074a0:	sub	x0, x0, #0x20
  4074a4:	ldp	x4, x5, [x2]
  4074a8:	stp	x4, x5, [x1]
  4074ac:	ldp	x2, x3, [x2, #16]
  4074b0:	stp	x2, x3, [x1, #16]
  4074b4:	b.ne	407494 <ferror@plt+0x4514>  // b.any
  4074b8:	b	407370 <ferror@plt+0x43f0>
  4074bc:	stp	x29, x30, [sp, #-48]!
  4074c0:	mov	x29, sp
  4074c4:	stp	x19, x20, [sp, #16]
  4074c8:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  4074cc:	add	x19, x19, #0x580
  4074d0:	stp	x21, x22, [sp, #32]
  4074d4:	mov	x21, x1
  4074d8:	mov	x20, x0
  4074dc:	ldrb	w1, [x19, #1337]
  4074e0:	mov	x22, x2
  4074e4:	cbz	w1, 407508 <ferror@plt+0x4588>
  4074e8:	ldr	x2, [x19, #1520]
  4074ec:	add	x1, x19, #0x5f0
  4074f0:	cbnz	x2, 407524 <ferror@plt+0x45a4>
  4074f4:	add	x19, x19, #0x5f0
  4074f8:	ldp	x0, x1, [x20]
  4074fc:	stp	x0, x1, [x19]
  407500:	ldp	x0, x1, [x20, #16]
  407504:	stp	x0, x1, [x19, #16]
  407508:	mov	x2, x22
  40750c:	mov	x1, x21
  407510:	mov	x0, x20
  407514:	ldp	x19, x20, [sp, #16]
  407518:	ldp	x21, x22, [sp, #32]
  40751c:	ldp	x29, x30, [sp], #48
  407520:	b	4059e0 <ferror@plt+0x2a60>
  407524:	bl	407204 <ferror@plt+0x4284>
  407528:	cbnz	w0, 4074f4 <ferror@plt+0x4574>
  40752c:	ldp	x19, x20, [sp, #16]
  407530:	ldp	x21, x22, [sp, #32]
  407534:	ldp	x29, x30, [sp], #48
  407538:	ret
  40753c:	cmp	w0, w1
  407540:	b.eq	407568 <ferror@plt+0x45e8>  // b.none
  407544:	stp	x29, x30, [sp, #-32]!
  407548:	mov	x29, sp
  40754c:	str	x19, [sp, #16]
  407550:	mov	w19, w0
  407554:	bl	402eb0 <dup2@plt>
  407558:	mov	w0, w19
  40755c:	ldr	x19, [sp, #16]
  407560:	ldp	x29, x30, [sp], #32
  407564:	b	402b50 <close@plt>
  407568:	ret
  40756c:	stp	x29, x30, [sp, #-240]!
  407570:	mov	x29, sp
  407574:	stp	x21, x22, [sp, #32]
  407578:	stp	x25, x26, [sp, #64]
  40757c:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x16920>
  407580:	add	x21, x26, #0x580
  407584:	and	w25, w1, #0xff
  407588:	stp	x23, x24, [sp, #48]
  40758c:	mov	x23, x0
  407590:	ldr	x0, [x21, #16]
  407594:	stp	x19, x20, [sp, #16]
  407598:	ldr	x1, [x21, #1552]
  40759c:	ldr	x24, [x0, x1, lsl #3]
  4075a0:	str	x27, [sp, #80]
  4075a4:	mov	x0, x24
  4075a8:	bl	402880 <strlen@plt>
  4075ac:	mov	x20, x0
  4075b0:	add	x0, x0, #0x20
  4075b4:	and	x0, x0, #0xfffffffffffffff8
  4075b8:	bl	40e344 <ferror@plt+0xb3c4>
  4075bc:	add	x22, x0, #0xd
  4075c0:	mov	x2, x20
  4075c4:	mov	x19, x0
  4075c8:	mov	x1, x24
  4075cc:	mov	x0, x22
  4075d0:	bl	402820 <memcpy@plt>
  4075d4:	adrp	x0, 410000 <_obstack_memory_used@@Base+0x920>
  4075d8:	add	x0, x0, #0x3e6
  4075dc:	add	x1, x22, x20
  4075e0:	ldr	x2, [x0]
  4075e4:	str	x2, [x22, x20]
  4075e8:	ldr	w0, [x0, #8]
  4075ec:	str	w0, [x1, #8]
  4075f0:	ldr	x1, [x21, #1552]
  4075f4:	str	xzr, [x19]
  4075f8:	ldr	x0, [x26, #1408]
  4075fc:	add	x1, x1, #0x1
  407600:	cmp	x1, x0
  407604:	add	x0, sp, #0x68
  407608:	csel	x1, x1, xzr, ne  // ne = any
  40760c:	str	x1, [x21, #1552]
  407610:	bl	405724 <ferror@plt+0x27a4>
  407614:	mov	x0, x22
  407618:	mov	w1, #0x80000               	// #524288
  40761c:	bl	40da74 <ferror@plt+0xaaf4>
  407620:	mov	w20, w0
  407624:	tbnz	w0, #31, 40763c <ferror@plt+0x46bc>
  407628:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40762c:	add	x0, x0, #0x3d0
  407630:	ldr	x1, [x0, #224]
  407634:	str	x19, [x0, #224]
  407638:	str	x19, [x1]
  40763c:	bl	402ef0 <__errno_location@plt>
  407640:	mov	x26, x0
  407644:	add	x0, sp, #0x68
  407648:	ldr	w27, [x26]
  40764c:	bl	406db0 <ferror@plt+0x3e30>
  407650:	str	w27, [x26]
  407654:	tbz	w20, #31, 4076c8 <ferror@plt+0x4748>
  407658:	cbz	w25, 407664 <ferror@plt+0x46e4>
  40765c:	cmp	w27, #0x18
  407660:	b.eq	40769c <ferror@plt+0x471c>  // b.none
  407664:	mov	w2, #0x5                   	// #5
  407668:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  40766c:	mov	x0, #0x0                   	// #0
  407670:	add	x1, x1, #0x380
  407674:	bl	402e60 <dcgettext@plt>
  407678:	mov	x19, x0
  40767c:	mov	x1, x24
  407680:	mov	w0, #0x4                   	// #4
  407684:	bl	40cd1c <ferror@plt+0x9d9c>
  407688:	mov	x3, x0
  40768c:	mov	x2, x19
  407690:	mov	w1, w27
  407694:	mov	w0, #0x2                   	// #2
  407698:	bl	4028c0 <error@plt>
  40769c:	mov	x0, x19
  4076a0:	mov	x19, #0x0                   	// #0
  4076a4:	bl	402ce0 <free@plt>
  4076a8:	mov	x0, x19
  4076ac:	ldp	x19, x20, [sp, #16]
  4076b0:	ldp	x21, x22, [sp, #32]
  4076b4:	ldp	x23, x24, [sp, #48]
  4076b8:	ldp	x25, x26, [sp, #64]
  4076bc:	ldr	x27, [sp, #80]
  4076c0:	ldp	x29, x30, [sp], #240
  4076c4:	ret
  4076c8:	ldr	x0, [x21, #1496]
  4076cc:	strb	wzr, [x19, #12]
  4076d0:	cbz	x0, 407708 <ferror@plt+0x4788>
  4076d4:	add	x0, sp, #0x68
  4076d8:	mov	x1, #0x4                   	// #4
  4076dc:	bl	406e04 <ferror@plt+0x3e84>
  4076e0:	str	w0, [x19, #8]
  4076e4:	cmp	w0, #0x0
  4076e8:	b.le	407738 <ferror@plt+0x47b8>
  4076ec:	mov	w0, w20
  4076f0:	bl	402b50 <close@plt>
  4076f4:	ldr	w0, [sp, #104]
  4076f8:	bl	402b50 <close@plt>
  4076fc:	ldr	w20, [sp, #108]
  407700:	mov	x0, x19
  407704:	bl	406bd4 <ferror@plt+0x3c54>
  407708:	mov	w0, w20
  40770c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407710:	add	x1, x1, #0x3c5
  407714:	bl	402af0 <fdopen@plt>
  407718:	str	x0, [x23]
  40771c:	cbnz	x0, 4076a8 <ferror@plt+0x4728>
  407720:	mov	w2, #0x5                   	// #5
  407724:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407728:	add	x1, x1, #0x3c7
  40772c:	bl	402e60 <dcgettext@plt>
  407730:	mov	x1, x22
  407734:	bl	405830 <ferror@plt+0x28b0>
  407738:	b.ne	407708 <ferror@plt+0x4788>  // b.any
  40773c:	ldr	w0, [sp, #108]
  407740:	bl	402b50 <close@plt>
  407744:	mov	w0, w20
  407748:	mov	w1, #0x1                   	// #1
  40774c:	bl	40753c <ferror@plt+0x45bc>
  407750:	ldr	w0, [sp, #104]
  407754:	mov	w1, #0x0                   	// #0
  407758:	bl	40753c <ferror@plt+0x45bc>
  40775c:	ldr	x1, [x21, #1496]
  407760:	mov	x2, #0x0                   	// #0
  407764:	mov	x0, x1
  407768:	bl	402f00 <execlp@plt>
  40776c:	ldr	w0, [x26]
  407770:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407774:	add	x1, x1, #0x3a3
  407778:	bl	406b4c <ferror@plt+0x3bcc>
  40777c:	ldp	x5, x3, [x1]
  407780:	ldp	x4, x2, [x1, #16]
  407784:	cmp	x5, x4
  407788:	b.eq	4077b0 <ferror@plt+0x4830>  // b.none
  40778c:	cmp	x3, x2
  407790:	b.ne	4077a4 <ferror@plt+0x4824>  // b.any
  407794:	ldr	x2, [x1, #48]
  407798:	cmp	x2, #0x0
  40779c:	cset	w2, eq  // eq = none
  4077a0:	b	4077a8 <ferror@plt+0x4828>
  4077a4:	mov	w2, #0x1                   	// #1
  4077a8:	cbz	w2, 4077c8 <ferror@plt+0x4848>
  4077ac:	b	406d30 <ferror@plt+0x3db0>
  4077b0:	cmp	x3, x2
  4077b4:	b.eq	4077c0 <ferror@plt+0x4840>  // b.none
  4077b8:	ldr	x2, [x1, #40]
  4077bc:	b	407798 <ferror@plt+0x4818>
  4077c0:	mov	w2, #0x0                   	// #0
  4077c4:	b	4077a8 <ferror@plt+0x4828>
  4077c8:	ret
  4077cc:	stp	x29, x30, [sp, #-176]!
  4077d0:	cmp	x1, #0x1
  4077d4:	mov	x29, sp
  4077d8:	stp	x23, x24, [sp, #48]
  4077dc:	mov	x23, x0
  4077e0:	mov	x24, x1
  4077e4:	stp	x25, x26, [sp, #64]
  4077e8:	lsr	x26, x1, #1
  4077ec:	mov	x25, x2
  4077f0:	ldp	x0, x1, [x3, #40]
  4077f4:	stp	x19, x20, [sp, #16]
  4077f8:	mov	x19, x3
  4077fc:	stp	x21, x22, [sp, #32]
  407800:	mov	x20, x4
  407804:	mov	x21, x5
  407808:	stp	x27, x28, [sp, #80]
  40780c:	mov	x22, x6
  407810:	add	x0, x0, x1
  407814:	ldr	x1, [x3, #64]
  407818:	stp	x23, x26, [sp, #120]
  40781c:	stp	x2, x1, [sp, #136]
  407820:	mov	x1, #0x1ffff               	// #131071
  407824:	ccmp	x0, x1, #0x0, hi  // hi = pmore
  407828:	stp	x4, x5, [sp, #152]
  40782c:	str	x6, [sp, #168]
  407830:	b.ls	40789c <ferror@plt+0x491c>  // b.plast
  407834:	adrp	x2, 407000 <ferror@plt+0x4080>
  407838:	add	x3, sp, #0x78
  40783c:	add	x2, x2, #0xc20
  407840:	add	x0, sp, #0x70
  407844:	mov	x1, #0x0                   	// #0
  407848:	bl	402b80 <pthread_create@plt>
  40784c:	cbnz	w0, 40789c <ferror@plt+0x491c>
  407850:	ldr	x0, [x19, #40]
  407854:	sub	x1, x24, x26
  407858:	ldr	x3, [x19, #72]
  40785c:	mov	x6, x22
  407860:	sub	x0, x23, x0, lsl #5
  407864:	mov	x5, x21
  407868:	mov	x4, x20
  40786c:	mov	x2, x25
  407870:	bl	4077cc <ferror@plt+0x484c>
  407874:	ldr	x0, [sp, #112]
  407878:	mov	x1, #0x0                   	// #0
  40787c:	bl	402bc0 <pthread_join@plt>
  407880:	ldp	x19, x20, [sp, #16]
  407884:	ldp	x21, x22, [sp, #32]
  407888:	ldp	x23, x24, [sp, #48]
  40788c:	ldp	x25, x26, [sp, #64]
  407890:	ldp	x27, x28, [sp, #80]
  407894:	ldp	x29, x30, [sp], #176
  407898:	ret
  40789c:	ldp	x26, x24, [x19, #40]
  4078a0:	sub	x4, x23, x25, lsl #5
  4078a4:	neg	x28, x26, lsl #5
  4078a8:	sub	x27, x23, x26, lsl #5
  4078ac:	cmp	x24, #0x1
  4078b0:	b.ls	4078d4 <ferror@plt+0x4954>  // b.plast
  4078b4:	lsr	x2, x26, #1
  4078b8:	mov	x1, x24
  4078bc:	mov	x0, x27
  4078c0:	mov	w3, #0x0                   	// #0
  4078c4:	sub	x2, x4, x2, lsl #5
  4078c8:	str	x4, [sp, #96]
  4078cc:	bl	4072ec <ferror@plt+0x436c>
  4078d0:	ldr	x4, [sp, #96]
  4078d4:	cmp	x26, #0x1
  4078d8:	b.ls	4078f0 <ferror@plt+0x4970>  // b.plast
  4078dc:	mov	x2, x4
  4078e0:	mov	x1, x26
  4078e4:	mov	x0, x23
  4078e8:	mov	w3, #0x0                   	// #0
  4078ec:	bl	4072ec <ferror@plt+0x436c>
  4078f0:	sub	x24, x28, x24, lsl #5
  4078f4:	stp	x23, x27, [x19]
  4078f8:	add	x23, x23, x24
  4078fc:	str	x27, [x19, #16]
  407900:	mov	x0, x20
  407904:	str	x23, [x19, #24]
  407908:	mov	x1, x19
  40790c:	add	x27, x20, #0x8
  407910:	bl	406d30 <ferror@plt+0x3db0>
  407914:	add	x0, x20, #0x38
  407918:	str	x0, [sp, #96]
  40791c:	mov	x0, x27
  407920:	bl	402f30 <pthread_mutex_lock@plt>
  407924:	ldr	x0, [x20]
  407928:	bl	40b17c <ferror@plt+0x81fc>
  40792c:	mov	x19, x0
  407930:	cbz	x0, 40796c <ferror@plt+0x49ec>
  407934:	mov	x0, x27
  407938:	add	x26, x19, #0x58
  40793c:	bl	402f40 <pthread_mutex_unlock@plt>
  407940:	mov	x0, x26
  407944:	bl	402f30 <pthread_mutex_lock@plt>
  407948:	ldr	w0, [x19, #80]
  40794c:	strb	wzr, [x19, #84]
  407950:	cbnz	w0, 40797c <ferror@plt+0x49fc>
  407954:	mov	x0, x26
  407958:	bl	402f40 <pthread_mutex_unlock@plt>
  40795c:	mov	x1, x19
  407960:	mov	x0, x20
  407964:	bl	406d30 <ferror@plt+0x3db0>
  407968:	b	407880 <ferror@plt+0x4900>
  40796c:	ldr	x0, [sp, #96]
  407970:	mov	x1, x27
  407974:	bl	402d10 <pthread_cond_wait@plt>
  407978:	b	407924 <ferror@plt+0x49a4>
  40797c:	add	w3, w0, #0x1
  407980:	cmp	w0, #0x1
  407984:	ldp	x24, x23, [x19]
  407988:	lsl	w3, w3, #1
  40798c:	lsr	x3, x25, x3
  407990:	add	x28, x3, #0x1
  407994:	b.ls	407b50 <ferror@plt+0x4bd0>  // b.plast
  407998:	ldr	x0, [x19, #32]
  40799c:	ldr	x2, [x0]
  4079a0:	ldp	x0, x1, [x19]
  4079a4:	ldr	x6, [x19, #16]
  4079a8:	cmp	x0, x6
  4079ac:	b.eq	4079c4 <ferror@plt+0x4a44>  // b.none
  4079b0:	ldr	x4, [x19, #24]
  4079b4:	cmp	x4, x1
  4079b8:	b.eq	4079c4 <ferror@plt+0x4a44>  // b.none
  4079bc:	cbnz	x28, 407a68 <ferror@plt+0x4ae8>
  4079c0:	mov	x28, #0xffffffffffffffff    	// #-1
  4079c4:	ldr	x4, [x19, #48]
  4079c8:	sub	x1, x23, x1
  4079cc:	cmp	x4, x1, asr #5
  4079d0:	b.ne	407adc <ferror@plt+0x4b5c>  // b.any
  4079d4:	ldr	x0, [x19]
  4079d8:	cmp	x6, x0
  4079dc:	b.eq	4079e4 <ferror@plt+0x4a64>  // b.none
  4079e0:	cbnz	x28, 407abc <ferror@plt+0x4b3c>
  4079e4:	ldr	x0, [x19, #32]
  4079e8:	str	x2, [x0]
  4079ec:	ldr	x0, [x19, #8]
  4079f0:	sub	x23, x23, x0
  4079f4:	ldr	x0, [x19]
  4079f8:	sub	x24, x24, x0
  4079fc:	ldr	x0, [x19, #40]
  407a00:	sub	x24, x0, x24, asr #5
  407a04:	ldr	x0, [x19, #48]
  407a08:	sub	x23, x0, x23, asr #5
  407a0c:	ldrb	w0, [x19, #84]
  407a10:	stp	x24, x23, [x19, #40]
  407a14:	cbnz	w0, 407a24 <ferror@plt+0x4aa4>
  407a18:	mov	x1, x19
  407a1c:	mov	x0, x20
  407a20:	bl	40777c <ferror@plt+0x47fc>
  407a24:	ldr	w0, [x19, #80]
  407a28:	cmp	w0, #0x1
  407a2c:	b.ls	407c04 <ferror@plt+0x4c84>  // b.plast
  407a30:	ldr	x0, [x19, #56]
  407a34:	add	x0, x0, #0x58
  407a38:	bl	402f30 <pthread_mutex_lock@plt>
  407a3c:	ldr	x1, [x19, #56]
  407a40:	ldrb	w0, [x1, #84]
  407a44:	cbnz	w0, 407a50 <ferror@plt+0x4ad0>
  407a48:	mov	x0, x20
  407a4c:	bl	40777c <ferror@plt+0x47fc>
  407a50:	ldr	x0, [x19, #56]
  407a54:	add	x0, x0, #0x58
  407a58:	bl	402f40 <pthread_mutex_unlock@plt>
  407a5c:	mov	x0, x26
  407a60:	bl	402f40 <pthread_mutex_unlock@plt>
  407a64:	b	40791c <ferror@plt+0x499c>
  407a68:	sub	x1, x1, #0x20
  407a6c:	sub	x0, x0, #0x20
  407a70:	str	x2, [sp, #104]
  407a74:	bl	407204 <ferror@plt+0x4284>
  407a78:	ldr	x2, [sp, #104]
  407a7c:	cmp	w0, #0x0
  407a80:	sub	x2, x2, #0x20
  407a84:	b.gt	407aac <ferror@plt+0x4b2c>
  407a88:	ldr	x0, [x19]
  407a8c:	sub	x1, x0, #0x20
  407a90:	str	x1, [x19]
  407a94:	ldp	x4, x5, [x0, #-32]
  407a98:	stp	x4, x5, [x2]
  407a9c:	sub	x28, x28, #0x1
  407aa0:	ldp	x0, x1, [x0, #-16]
  407aa4:	stp	x0, x1, [x2, #16]
  407aa8:	b	4079a0 <ferror@plt+0x4a20>
  407aac:	ldr	x0, [x19, #8]
  407ab0:	sub	x1, x0, #0x20
  407ab4:	str	x1, [x19, #8]
  407ab8:	b	407a94 <ferror@plt+0x4b14>
  407abc:	sub	x1, x0, #0x20
  407ac0:	str	x1, [x19]
  407ac4:	ldp	x4, x5, [x0, #-32]
  407ac8:	stp	x4, x5, [x2, #-32]!
  407acc:	sub	x28, x28, #0x1
  407ad0:	ldp	x0, x1, [x0, #-16]
  407ad4:	stp	x0, x1, [x2, #16]
  407ad8:	b	4079d4 <ferror@plt+0x4a54>
  407adc:	ldr	x1, [x19, #40]
  407ae0:	sub	x0, x24, x0
  407ae4:	cmp	x1, x0, asr #5
  407ae8:	b.ne	4079e4 <ferror@plt+0x4a64>  // b.any
  407aec:	ldr	x0, [x19, #8]
  407af0:	ldr	x1, [x19, #24]
  407af4:	cmp	x0, x1
  407af8:	b.eq	4079e4 <ferror@plt+0x4a64>  // b.none
  407afc:	cbz	x28, 4079e4 <ferror@plt+0x4a64>
  407b00:	sub	x1, x0, #0x20
  407b04:	str	x1, [x19, #8]
  407b08:	ldp	x4, x5, [x0, #-32]
  407b0c:	stp	x4, x5, [x2, #-32]!
  407b10:	sub	x28, x28, #0x1
  407b14:	ldp	x0, x1, [x0, #-16]
  407b18:	stp	x0, x1, [x2, #16]
  407b1c:	b	407aec <ferror@plt+0x4b6c>
  407b20:	sub	x1, x1, #0x20
  407b24:	sub	x0, x0, #0x20
  407b28:	bl	407204 <ferror@plt+0x4284>
  407b2c:	cmp	w0, #0x0
  407b30:	b.gt	407bb4 <ferror@plt+0x4c34>
  407b34:	ldr	x0, [x19]
  407b38:	sub	x0, x0, #0x20
  407b3c:	str	x0, [x19]
  407b40:	sub	x28, x28, #0x1
  407b44:	mov	x2, x22
  407b48:	mov	x1, x21
  407b4c:	bl	4074bc <ferror@plt+0x453c>
  407b50:	ldp	x0, x1, [x19]
  407b54:	ldr	x2, [x19, #16]
  407b58:	cmp	x0, x2
  407b5c:	b.eq	407b74 <ferror@plt+0x4bf4>  // b.none
  407b60:	ldr	x2, [x19, #24]
  407b64:	cmp	x2, x1
  407b68:	b.eq	407b74 <ferror@plt+0x4bf4>  // b.none
  407b6c:	cbnz	x28, 407b20 <ferror@plt+0x4ba0>
  407b70:	mov	x28, #0xffffffffffffffff    	// #-1
  407b74:	ldr	x2, [x19, #48]
  407b78:	sub	x1, x23, x1
  407b7c:	cmp	x2, x1, asr #5
  407b80:	b.ne	407bc4 <ferror@plt+0x4c44>  // b.any
  407b84:	ldr	x0, [x19]
  407b88:	ldr	x1, [x19, #16]
  407b8c:	cmp	x0, x1
  407b90:	b.eq	4079ec <ferror@plt+0x4a6c>  // b.none
  407b94:	cbz	x28, 4079ec <ferror@plt+0x4a6c>
  407b98:	sub	x0, x0, #0x20
  407b9c:	str	x0, [x19]
  407ba0:	mov	x2, x22
  407ba4:	mov	x1, x21
  407ba8:	sub	x28, x28, #0x1
  407bac:	bl	4074bc <ferror@plt+0x453c>
  407bb0:	b	407b84 <ferror@plt+0x4c04>
  407bb4:	ldr	x0, [x19, #8]
  407bb8:	sub	x0, x0, #0x20
  407bbc:	str	x0, [x19, #8]
  407bc0:	b	407b40 <ferror@plt+0x4bc0>
  407bc4:	ldr	x1, [x19, #40]
  407bc8:	sub	x0, x24, x0
  407bcc:	cmp	x1, x0, asr #5
  407bd0:	b.ne	4079ec <ferror@plt+0x4a6c>  // b.any
  407bd4:	ldr	x0, [x19, #8]
  407bd8:	ldr	x1, [x19, #24]
  407bdc:	cmp	x0, x1
  407be0:	b.eq	4079ec <ferror@plt+0x4a6c>  // b.none
  407be4:	cbz	x28, 4079ec <ferror@plt+0x4a6c>
  407be8:	sub	x0, x0, #0x20
  407bec:	str	x0, [x19, #8]
  407bf0:	mov	x2, x22
  407bf4:	mov	x1, x21
  407bf8:	sub	x28, x28, #0x1
  407bfc:	bl	4074bc <ferror@plt+0x453c>
  407c00:	b	407bd4 <ferror@plt+0x4c54>
  407c04:	ldp	x0, x1, [x19, #40]
  407c08:	cmn	x0, x1
  407c0c:	b.ne	407a5c <ferror@plt+0x4adc>  // b.any
  407c10:	ldr	x1, [x19, #56]
  407c14:	mov	x0, x20
  407c18:	bl	406d30 <ferror@plt+0x3db0>
  407c1c:	b	407a5c <ferror@plt+0x4adc>
  407c20:	stp	x29, x30, [sp, #-16]!
  407c24:	mov	x29, sp
  407c28:	ldp	x1, x2, [x0, #8]
  407c2c:	ldp	x3, x4, [x0, #24]
  407c30:	ldp	x5, x6, [x0, #40]
  407c34:	ldr	x0, [x0]
  407c38:	bl	4077cc <ferror@plt+0x484c>
  407c3c:	mov	x0, #0x0                   	// #0
  407c40:	ldp	x29, x30, [sp], #16
  407c44:	ret
  407c48:	stp	x29, x30, [sp, #-48]!
  407c4c:	mov	x29, sp
  407c50:	str	x19, [sp, #16]
  407c54:	mov	w19, w0
  407c58:	str	w0, [sp, #40]
  407c5c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407c60:	add	x1, sp, #0x20
  407c64:	ldr	x0, [x0, #2912]
  407c68:	bl	40af30 <ferror@plt+0x7fb0>
  407c6c:	cbz	x0, 407c80 <ferror@plt+0x4d00>
  407c70:	mov	w1, #0x2                   	// #2
  407c74:	strb	w1, [x0, #12]
  407c78:	mov	w0, w19
  407c7c:	bl	406a0c <ferror@plt+0x3a8c>
  407c80:	ldr	x19, [sp, #16]
  407c84:	ldp	x29, x30, [sp], #48
  407c88:	ret
  407c8c:	stp	x29, x30, [sp, #-208]!
  407c90:	mov	x29, sp
  407c94:	stp	x19, x20, [sp, #16]
  407c98:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x16920>
  407c9c:	add	x20, x20, #0x580
  407ca0:	add	x20, x20, #0x4a0
  407ca4:	stp	x21, x22, [sp, #32]
  407ca8:	mov	x21, x0
  407cac:	ldr	x19, [x20]
  407cb0:	stp	x23, x24, [sp, #48]
  407cb4:	add	x0, x19, #0xd
  407cb8:	cmp	x21, x0
  407cbc:	b.ne	407d68 <ferror@plt+0x4de8>  // b.any
  407cc0:	ldrb	w0, [x19, #12]
  407cc4:	cmp	w0, #0x1
  407cc8:	b.ne	407cd4 <ferror@plt+0x4d54>  // b.any
  407ccc:	ldr	w0, [x19, #8]
  407cd0:	bl	407c48 <ferror@plt+0x4cc8>
  407cd4:	add	x0, sp, #0x48
  407cd8:	ldr	x23, [x19]
  407cdc:	bl	405724 <ferror@plt+0x27a4>
  407ce0:	mov	x0, x21
  407ce4:	bl	402f60 <unlink@plt>
  407ce8:	mov	w22, w0
  407cec:	bl	402ef0 <__errno_location@plt>
  407cf0:	ldr	w24, [x0]
  407cf4:	add	x0, sp, #0x48
  407cf8:	str	x23, [x20]
  407cfc:	bl	406db0 <ferror@plt+0x3e30>
  407d00:	cbz	w22, 407d40 <ferror@plt+0x4dc0>
  407d04:	mov	w2, #0x5                   	// #5
  407d08:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  407d0c:	mov	x0, #0x0                   	// #0
  407d10:	add	x1, x1, #0x3f2
  407d14:	bl	402e60 <dcgettext@plt>
  407d18:	mov	x22, x0
  407d1c:	mov	x2, x21
  407d20:	mov	w1, #0x3                   	// #3
  407d24:	mov	w0, #0x0                   	// #0
  407d28:	bl	40cdc4 <ferror@plt+0x9e44>
  407d2c:	mov	x2, x22
  407d30:	mov	x3, x0
  407d34:	mov	w1, w24
  407d38:	mov	w0, #0x0                   	// #0
  407d3c:	bl	4028c0 <error@plt>
  407d40:	cbnz	x23, 407d4c <ferror@plt+0x4dcc>
  407d44:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407d48:	str	x20, [x0, #1200]
  407d4c:	mov	x0, x19
  407d50:	bl	402ce0 <free@plt>
  407d54:	ldp	x19, x20, [sp, #16]
  407d58:	ldp	x21, x22, [sp, #32]
  407d5c:	ldp	x23, x24, [sp, #48]
  407d60:	ldp	x29, x30, [sp], #208
  407d64:	ret
  407d68:	mov	x20, x19
  407d6c:	ldr	x19, [x19]
  407d70:	b	407cb4 <ferror@plt+0x4d34>
  407d74:	stp	x29, x30, [sp, #-224]!
  407d78:	mov	x29, sp
  407d7c:	stp	x19, x20, [sp, #16]
  407d80:	mov	x19, x2
  407d84:	stp	x21, x22, [sp, #32]
  407d88:	stp	x23, x24, [sp, #48]
  407d8c:	mov	x23, x5
  407d90:	mov	x24, x0
  407d94:	mov	x0, x2
  407d98:	stp	x25, x26, [sp, #64]
  407d9c:	stp	x27, x28, [sp, #80]
  407da0:	mov	x28, x4
  407da4:	mov	x27, #0x0                   	// #0
  407da8:	str	x1, [sp, #120]
  407dac:	mov	x1, #0x38                  	// #56
  407db0:	str	x3, [sp, #136]
  407db4:	bl	40e374 <ferror@plt+0xb3f4>
  407db8:	mov	x1, #0x8                   	// #8
  407dbc:	mov	x22, x0
  407dc0:	mov	x0, x19
  407dc4:	bl	40e374 <ferror@plt+0xb3f4>
  407dc8:	mov	x1, #0x8                   	// #8
  407dcc:	mov	x21, x0
  407dd0:	mov	x0, x19
  407dd4:	bl	40e374 <ferror@plt+0xb3f4>
  407dd8:	mov	x1, #0x8                   	// #8
  407ddc:	mov	x25, x0
  407de0:	mov	x0, x19
  407de4:	bl	40e374 <ferror@plt+0xb3f4>
  407de8:	mov	x20, x0
  407dec:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407df0:	add	x0, x0, #0x580
  407df4:	str	x0, [sp, #144]
  407df8:	str	xzr, [sp, #192]
  407dfc:	ldr	x0, [x0, #1328]
  407e00:	str	x0, [sp, #160]
  407e04:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  407e08:	add	x0, x0, #0x3d0
  407e0c:	str	x0, [sp, #104]
  407e10:	cmp	x19, x27
  407e14:	b.hi	407eb4 <ferror@plt+0x4f34>  // b.pmore
  407e18:	mov	x0, #0x0                   	// #0
  407e1c:	cmp	x19, x0
  407e20:	b.ne	407fbc <ferror@plt+0x503c>  // b.any
  407e24:	mov	x26, #0x1                   	// #1
  407e28:	cmp	x19, x26
  407e2c:	b.hi	407fc8 <ferror@plt+0x5048>  // b.pmore
  407e30:	mov	x26, #0x0                   	// #0
  407e34:	str	xzr, [sp, #128]
  407e38:	ldr	x0, [sp, #144]
  407e3c:	ldrb	w0, [x0, #1337]
  407e40:	cbnz	x19, 408010 <ferror@plt+0x5090>
  407e44:	cbz	w0, 407e68 <ferror@plt+0x4ee8>
  407e48:	ldr	x0, [sp, #128]
  407e4c:	cbz	x0, 407e68 <ferror@plt+0x4ee8>
  407e50:	ldr	x1, [sp, #136]
  407e54:	add	x0, sp, #0xc0
  407e58:	mov	x2, x28
  407e5c:	bl	4059e0 <ferror@plt+0x2a60>
  407e60:	ldr	x0, [sp, #192]
  407e64:	bl	402ce0 <free@plt>
  407e68:	ldr	x0, [sp, #136]
  407e6c:	mov	x1, x28
  407e70:	bl	407174 <ferror@plt+0x41f4>
  407e74:	mov	x0, x23
  407e78:	bl	402ce0 <free@plt>
  407e7c:	mov	x0, x22
  407e80:	bl	402ce0 <free@plt>
  407e84:	mov	x0, x20
  407e88:	bl	402ce0 <free@plt>
  407e8c:	mov	x0, x25
  407e90:	bl	402ce0 <free@plt>
  407e94:	mov	x0, x21
  407e98:	ldp	x19, x20, [sp, #16]
  407e9c:	ldp	x21, x22, [sp, #32]
  407ea0:	ldp	x23, x24, [sp, #48]
  407ea4:	ldp	x25, x26, [sp, #64]
  407ea8:	ldp	x27, x28, [sp, #80]
  407eac:	ldp	x29, x30, [sp], #224
  407eb0:	b	402ce0 <free@plt>
  407eb4:	mov	x0, #0x38                  	// #56
  407eb8:	ldr	x1, [sp, #104]
  407ebc:	mul	x26, x27, x0
  407ec0:	ldr	x0, [sp, #144]
  407ec4:	add	x5, x22, x26
  407ec8:	ldr	x2, [x1, #208]
  407ecc:	mov	x1, #0x20                  	// #32
  407ed0:	ldr	x0, [x0, #1560]
  407ed4:	str	x5, [sp, #112]
  407ed8:	udiv	x0, x0, x19
  407edc:	cmp	x0, x2
  407ee0:	csel	x2, x0, x2, cs  // cs = hs, nlast
  407ee4:	mov	x0, x5
  407ee8:	bl	405934 <ferror@plt+0x29b4>
  407eec:	lsl	x4, x27, #3
  407ef0:	lsl	x6, x27, #4
  407ef4:	ldr	x5, [sp, #112]
  407ef8:	str	x4, [sp, #128]
  407efc:	ldr	x2, [x24, x6]
  407f00:	mov	x0, x5
  407f04:	ldr	x1, [x23, x4]
  407f08:	str	x6, [sp, #152]
  407f0c:	bl	406768 <ferror@plt+0x37e8>
  407f10:	tst	w0, #0xff
  407f14:	ldr	x4, [sp, #128]
  407f18:	ldr	x6, [sp, #152]
  407f1c:	b.eq	407f54 <ferror@plt+0x4fd4>  // b.none
  407f20:	ldr	x5, [sp, #112]
  407f24:	add	x27, x27, #0x1
  407f28:	ldr	x0, [x22, x26]
  407f2c:	ldr	x1, [x5, #24]
  407f30:	add	x0, x0, x1
  407f34:	sub	x1, x0, #0x20
  407f38:	str	x1, [x21, x4]
  407f3c:	ldr	x1, [x5, #16]
  407f40:	sub	x0, x0, x1, lsl #5
  407f44:	str	x0, [x25, x4]
  407f48:	mov	x4, x19
  407f4c:	mov	x19, x4
  407f50:	b	407e10 <ferror@plt+0x4e90>
  407f54:	ldr	x1, [x24, x6]
  407f58:	str	x6, [sp, #112]
  407f5c:	ldr	x0, [x23, x4]
  407f60:	bl	407174 <ferror@plt+0x41f4>
  407f64:	ldp	x6, x0, [sp, #112]
  407f68:	cmp	x0, x27
  407f6c:	b.ls	407f80 <ferror@plt+0x5000>  // b.plast
  407f70:	sub	x0, x0, #0x1
  407f74:	str	x0, [sp, #120]
  407f78:	ldr	x0, [x24, x6]
  407f7c:	bl	407c8c <ferror@plt+0x4d0c>
  407f80:	ldr	x0, [x22, x26]
  407f84:	bl	402ce0 <free@plt>
  407f88:	sub	x4, x19, #0x1
  407f8c:	add	x1, x24, x27, lsl #4
  407f90:	add	x0, x23, x27, lsl #3
  407f94:	add	x19, x23, x19, lsl #3
  407f98:	add	x0, x0, #0x8
  407f9c:	add	x1, x1, #0x10
  407fa0:	cmp	x0, x19
  407fa4:	b.eq	407f4c <ferror@plt+0x4fcc>  // b.none
  407fa8:	ldp	x6, x7, [x1]
  407fac:	stp	x6, x7, [x1, #-16]
  407fb0:	ldr	x2, [x0]
  407fb4:	stur	x2, [x0, #-8]
  407fb8:	b	407f98 <ferror@plt+0x5018>
  407fbc:	str	x0, [x20, x0, lsl #3]
  407fc0:	add	x0, x0, #0x1
  407fc4:	b	407e1c <ferror@plt+0x4e9c>
  407fc8:	lsl	x27, x26, #3
  407fcc:	sub	x4, x27, #0x8
  407fd0:	str	x4, [sp, #128]
  407fd4:	ldr	x5, [x20, x27]
  407fd8:	ldr	x3, [x20, x4]
  407fdc:	stp	x3, x5, [sp, #104]
  407fe0:	ldr	x1, [x21, x5, lsl #3]
  407fe4:	ldr	x0, [x21, x3, lsl #3]
  407fe8:	bl	407204 <ferror@plt+0x4284>
  407fec:	cmp	w0, #0x0
  407ff0:	b.le	408008 <ferror@plt+0x5088>
  407ff4:	ldr	x4, [sp, #128]
  407ff8:	mov	x26, #0x0                   	// #0
  407ffc:	ldp	x3, x5, [sp, #104]
  408000:	str	x5, [x20, x4]
  408004:	str	x3, [x20, x27]
  408008:	add	x26, x26, #0x1
  40800c:	b	407e28 <ferror@plt+0x4ea8>
  408010:	ldr	x1, [x20]
  408014:	str	x1, [sp, #104]
  408018:	lsl	x1, x1, #3
  40801c:	str	x1, [sp, #112]
  408020:	ldr	x1, [sp, #104]
  408024:	add	x1, x21, x1, lsl #3
  408028:	str	x1, [sp, #152]
  40802c:	ldr	x1, [sp, #112]
  408030:	ldr	x27, [x21, x1]
  408034:	cbz	w0, 4080e0 <ferror@plt+0x5160>
  408038:	ldr	x0, [sp, #128]
  40803c:	cbz	x0, 40805c <ferror@plt+0x50dc>
  408040:	mov	x1, x27
  408044:	bl	407204 <ferror@plt+0x4284>
  408048:	cbz	w0, 4080f0 <ferror@plt+0x5170>
  40804c:	ldr	x1, [sp, #136]
  408050:	mov	x2, x28
  408054:	add	x0, sp, #0xc0
  408058:	bl	4059e0 <ferror@plt+0x2a60>
  40805c:	ldr	x0, [x27, #8]
  408060:	cmp	x0, x26
  408064:	b.ls	40808c <ferror@plt+0x510c>  // b.plast
  408068:	cbz	x26, 4080d8 <ferror@plt+0x5158>
  40806c:	lsl	x26, x26, #1
  408070:	cmp	x0, x26
  408074:	b.hi	408068 <ferror@plt+0x50e8>  // b.pmore
  408078:	ldr	x0, [sp, #192]
  40807c:	bl	402ce0 <free@plt>
  408080:	mov	x0, x26
  408084:	bl	40e344 <ferror@plt+0xb3c4>
  408088:	str	x0, [sp, #192]
  40808c:	ldp	x1, x2, [x27]
  408090:	str	x2, [sp, #200]
  408094:	ldr	x0, [sp, #192]
  408098:	bl	402820 <memcpy@plt>
  40809c:	ldr	x0, [sp, #160]
  4080a0:	cbz	x0, 4080cc <ferror@plt+0x514c>
  4080a4:	ldr	x2, [x27]
  4080a8:	ldr	x0, [x27, #16]
  4080ac:	ldr	x1, [sp, #192]
  4080b0:	sub	x0, x0, x2
  4080b4:	add	x0, x1, x0
  4080b8:	str	x0, [sp, #208]
  4080bc:	ldr	x0, [x27, #24]
  4080c0:	sub	x0, x0, x2
  4080c4:	add	x1, x1, x0
  4080c8:	str	x1, [sp, #216]
  4080cc:	add	x0, sp, #0xc0
  4080d0:	str	x0, [sp, #128]
  4080d4:	b	4080f0 <ferror@plt+0x5170>
  4080d8:	mov	x26, x0
  4080dc:	b	408078 <ferror@plt+0x50f8>
  4080e0:	ldr	x1, [sp, #136]
  4080e4:	mov	x2, x28
  4080e8:	mov	x0, x27
  4080ec:	bl	4059e0 <ferror@plt+0x2a60>
  4080f0:	ldr	x0, [sp, #112]
  4080f4:	ldr	x0, [x25, x0]
  4080f8:	cmp	x0, x27
  4080fc:	b.cs	408148 <ferror@plt+0x51c8>  // b.hs, b.nlast
  408100:	ldr	x0, [sp, #112]
  408104:	sub	x3, x27, #0x20
  408108:	str	x3, [x21, x0]
  40810c:	mov	x3, #0x1                   	// #1
  408110:	mov	x4, x19
  408114:	mov	x2, x3
  408118:	cmp	x2, x4
  40811c:	b.cc	4082b8 <ferror@plt+0x5338>  // b.lo, b.ul, b.last
  408120:	sub	x1, x2, #0x1
  408124:	mov	x0, x20
  408128:	add	x2, x20, x2, lsl #3
  40812c:	add	x0, x0, #0x8
  408130:	cmp	x2, x0
  408134:	b.ne	408310 <ferror@plt+0x5390>  // b.any
  408138:	ldr	x0, [sp, #104]
  40813c:	mov	x27, x19
  408140:	str	x0, [x20, x1, lsl #3]
  408144:	b	408250 <ferror@plt+0x52d0>
  408148:	ldr	x0, [sp, #104]
  40814c:	mov	x1, #0x38                  	// #56
  408150:	mul	x4, x0, x1
  408154:	lsl	x0, x0, #4
  408158:	add	x3, x22, x4
  40815c:	stp	x3, x4, [sp, #168]
  408160:	ldr	x2, [x24, x0]
  408164:	ldr	x0, [sp, #112]
  408168:	ldr	x1, [x23, x0]
  40816c:	mov	x0, x3
  408170:	bl	406768 <ferror@plt+0x37e8>
  408174:	tst	w0, #0xff
  408178:	b.eq	408258 <ferror@plt+0x52d8>  // b.none
  40817c:	ldp	x3, x4, [sp, #168]
  408180:	ldr	x2, [sp, #112]
  408184:	ldr	x0, [x22, x4]
  408188:	ldr	x1, [x3, #24]
  40818c:	add	x0, x0, x1
  408190:	sub	x1, x0, #0x20
  408194:	str	x1, [x21, x2]
  408198:	ldr	x1, [x3, #16]
  40819c:	sub	x0, x0, x1, lsl #5
  4081a0:	str	x0, [x25, x2]
  4081a4:	b	40810c <ferror@plt+0x518c>
  4081a8:	ldr	x1, [x20, x0, lsl #3]
  4081ac:	cmp	x1, x3
  4081b0:	b.ls	4081bc <ferror@plt+0x523c>  // b.plast
  4081b4:	sub	x1, x1, #0x1
  4081b8:	str	x1, [x20, x0, lsl #3]
  4081bc:	add	x0, x0, #0x1
  4081c0:	cmp	x19, x0
  4081c4:	ldr	x3, [x20]
  4081c8:	b.ne	4081a8 <ferror@plt+0x5228>  // b.any
  4081cc:	lsl	x2, x3, #4
  4081d0:	sub	x0, x19, #0x1
  4081d4:	mov	x27, x0
  4081d8:	add	x0, x24, x3, lsl #4
  4081dc:	stp	x0, x3, [sp, #104]
  4081e0:	ldr	x1, [x24, x2]
  4081e4:	str	x2, [sp, #152]
  4081e8:	ldr	x0, [x23, x3, lsl #3]
  4081ec:	bl	407174 <ferror@plt+0x41f4>
  4081f0:	ldp	x3, x0, [sp, #112]
  4081f4:	ldr	x2, [sp, #152]
  4081f8:	cmp	x0, x3
  4081fc:	b.ls	408214 <ferror@plt+0x5294>  // b.plast
  408200:	sub	x0, x0, #0x1
  408204:	str	x0, [sp, #120]
  408208:	ldr	x0, [x24, x2]
  40820c:	bl	407c8c <ferror@plt+0x4d0c>
  408210:	ldr	x3, [sp, #112]
  408214:	mov	x0, #0x38                  	// #56
  408218:	str	x3, [sp, #112]
  40821c:	mul	x0, x3, x0
  408220:	ldr	x0, [x22, x0]
  408224:	bl	402ce0 <free@plt>
  408228:	ldp	x4, x3, [sp, #104]
  40822c:	mov	x5, x3
  408230:	add	x4, x4, #0x10
  408234:	cmp	x3, x27
  408238:	b.cc	408260 <ferror@plt+0x52e0>  // b.lo, b.ul, b.last
  40823c:	mov	x0, x20
  408240:	add	x19, x20, x19, lsl #3
  408244:	add	x0, x0, #0x8
  408248:	cmp	x19, x0
  40824c:	b.ne	4082ac <ferror@plt+0x532c>  // b.any
  408250:	mov	x19, x27
  408254:	b	407e38 <ferror@plt+0x4eb8>
  408258:	mov	x0, #0x1                   	// #1
  40825c:	b	4081c0 <ferror@plt+0x5240>
  408260:	add	x3, x3, #0x1
  408264:	mov	x2, #0x38                  	// #56
  408268:	stp	x5, x3, [sp, #104]
  40826c:	ldr	x0, [x23, x3, lsl #3]
  408270:	str	x0, [x23, x5, lsl #3]
  408274:	ldp	x0, x1, [x4]
  408278:	stp	x0, x1, [x4, #-16]
  40827c:	madd	x1, x3, x2, x22
  408280:	madd	x0, x5, x2, x22
  408284:	str	x4, [sp, #152]
  408288:	bl	402820 <memcpy@plt>
  40828c:	ldp	x5, x3, [sp, #104]
  408290:	ldr	x4, [sp, #152]
  408294:	ldr	x0, [x21, x3, lsl #3]
  408298:	str	x0, [x21, x5, lsl #3]
  40829c:	ldr	x0, [x25, x3, lsl #3]
  4082a0:	str	x0, [x25, x5, lsl #3]
  4082a4:	add	x5, x5, #0x1
  4082a8:	b	408230 <ferror@plt+0x52b0>
  4082ac:	ldr	x1, [x0]
  4082b0:	stur	x1, [x0, #-8]
  4082b4:	b	408244 <ferror@plt+0x52c4>
  4082b8:	ldr	x5, [x20, x3, lsl #3]
  4082bc:	str	x5, [sp, #112]
  4082c0:	ldr	x0, [sp, #152]
  4082c4:	stp	x3, x2, [sp, #168]
  4082c8:	ldr	x1, [x21, x5, lsl #3]
  4082cc:	str	x4, [sp, #184]
  4082d0:	ldr	x0, [x0]
  4082d4:	bl	407204 <ferror@plt+0x4284>
  4082d8:	cmp	w0, #0x0
  4082dc:	ldp	x3, x2, [sp, #168]
  4082e0:	b.lt	408300 <ferror@plt+0x5380>  // b.tstop
  4082e4:	ldr	x4, [sp, #184]
  4082e8:	b.ne	4082f8 <ferror@plt+0x5378>  // b.any
  4082ec:	ldp	x0, x5, [sp, #104]
  4082f0:	cmp	x0, x5
  4082f4:	b.cc	408300 <ferror@plt+0x5380>  // b.lo, b.ul, b.last
  4082f8:	add	x2, x3, #0x1
  4082fc:	mov	x3, x4
  408300:	add	x0, x2, x3
  408304:	mov	x4, x3
  408308:	lsr	x3, x0, #1
  40830c:	b	408118 <ferror@plt+0x5198>
  408310:	ldr	x3, [x0]
  408314:	stur	x3, [x0, #-8]
  408318:	b	40812c <ferror@plt+0x51ac>
  40831c:	stp	x29, x30, [sp, #-96]!
  408320:	mov	x29, sp
  408324:	stp	x19, x20, [sp, #16]
  408328:	mov	x19, x2
  40832c:	mov	x20, x0
  408330:	stp	x23, x24, [sp, #48]
  408334:	mov	x23, x1
  408338:	mov	x0, x23
  40833c:	mov	x1, #0x8                   	// #8
  408340:	stp	x21, x22, [sp, #32]
  408344:	mov	x22, #0x0                   	// #0
  408348:	stp	x25, x26, [sp, #64]
  40834c:	bl	40e374 <ferror@plt+0xb3f4>
  408350:	adrp	x25, 411000 <_obstack_memory_used@@Base+0x1920>
  408354:	mov	x24, x0
  408358:	add	x25, x25, #0xa6d
  40835c:	str	x0, [x19]
  408360:	cmp	x23, x22
  408364:	b.ne	408384 <ferror@plt+0x5404>  // b.any
  408368:	mov	x0, x22
  40836c:	ldp	x19, x20, [sp, #16]
  408370:	ldp	x21, x22, [sp, #32]
  408374:	ldp	x23, x24, [sp, #48]
  408378:	ldp	x25, x26, [sp, #64]
  40837c:	ldp	x29, x30, [sp], #96
  408380:	ret
  408384:	ldr	x21, [x20, #8]
  408388:	cbz	x21, 4084e4 <ferror@plt+0x5564>
  40838c:	ldrb	w0, [x21, #12]
  408390:	cbz	w0, 4084e4 <ferror@plt+0x5564>
  408394:	cmp	w0, #0x1
  408398:	b.ne	4083a4 <ferror@plt+0x5424>  // b.any
  40839c:	ldr	w0, [x21, #8]
  4083a0:	bl	407c48 <ferror@plt+0x4cc8>
  4083a4:	add	x0, x21, #0xd
  4083a8:	mov	w1, #0x0                   	// #0
  4083ac:	bl	402a50 <open@plt>
  4083b0:	mov	w19, w0
  4083b4:	tbnz	w0, #31, 40847c <ferror@plt+0x54fc>
  4083b8:	add	x0, sp, #0x58
  4083bc:	mov	x1, #0x9                   	// #9
  4083c0:	bl	406e04 <ferror@plt+0x3e84>
  4083c4:	cmn	w0, #0x1
  4083c8:	b.eq	408420 <ferror@plt+0x54a0>  // b.none
  4083cc:	cbnz	w0, 408484 <ferror@plt+0x5504>
  4083d0:	ldr	w0, [sp, #88]
  4083d4:	bl	402b50 <close@plt>
  4083d8:	mov	w0, w19
  4083dc:	mov	w1, #0x0                   	// #0
  4083e0:	bl	40753c <ferror@plt+0x45bc>
  4083e4:	ldr	w0, [sp, #92]
  4083e8:	mov	w1, #0x1                   	// #1
  4083ec:	bl	40753c <ferror@plt+0x45bc>
  4083f0:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  4083f4:	adrp	x2, 410000 <_obstack_memory_used@@Base+0x920>
  4083f8:	add	x2, x2, #0x42c
  4083fc:	mov	x3, #0x0                   	// #0
  408400:	ldr	x1, [x0, #2904]
  408404:	mov	x0, x1
  408408:	bl	402f00 <execlp@plt>
  40840c:	bl	402ef0 <__errno_location@plt>
  408410:	ldr	w0, [x0]
  408414:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408418:	add	x1, x1, #0x42f
  40841c:	bl	406b4c <ferror@plt+0x3bcc>
  408420:	bl	402ef0 <__errno_location@plt>
  408424:	ldr	w26, [x0]
  408428:	mov	x21, x0
  40842c:	cmp	w26, #0x18
  408430:	b.eq	408470 <ferror@plt+0x54f0>  // b.none
  408434:	mov	w2, #0x5                   	// #5
  408438:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  40843c:	mov	x0, #0x0                   	// #0
  408440:	add	x1, x1, #0x40d
  408444:	bl	402e60 <dcgettext@plt>
  408448:	mov	x19, x0
  40844c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  408450:	ldr	x1, [x0, #2904]
  408454:	mov	w0, #0x4                   	// #4
  408458:	bl	40cd1c <ferror@plt+0x9d9c>
  40845c:	mov	x3, x0
  408460:	mov	x2, x19
  408464:	mov	w1, w26
  408468:	mov	w0, #0x2                   	// #2
  40846c:	bl	4028c0 <error@plt>
  408470:	mov	w0, w19
  408474:	bl	402b50 <close@plt>
  408478:	str	w26, [x21]
  40847c:	mov	x19, #0x0                   	// #0
  408480:	b	4084cc <ferror@plt+0x554c>
  408484:	str	w0, [x21, #8]
  408488:	mov	x0, x21
  40848c:	bl	406bd4 <ferror@plt+0x3c54>
  408490:	mov	w0, w19
  408494:	bl	402b50 <close@plt>
  408498:	ldr	w0, [sp, #92]
  40849c:	bl	402b50 <close@plt>
  4084a0:	ldr	w0, [sp, #88]
  4084a4:	mov	x1, x25
  4084a8:	bl	402af0 <fdopen@plt>
  4084ac:	mov	x19, x0
  4084b0:	cbnz	x0, 4084cc <ferror@plt+0x554c>
  4084b4:	bl	402ef0 <__errno_location@plt>
  4084b8:	ldr	w26, [x0]
  4084bc:	mov	x21, x0
  4084c0:	ldr	w0, [sp, #88]
  4084c4:	bl	402b50 <close@plt>
  4084c8:	str	w26, [x21]
  4084cc:	str	x19, [x24, x22, lsl #3]
  4084d0:	add	x0, x22, #0x1
  4084d4:	add	x20, x20, #0x10
  4084d8:	cbz	x19, 408368 <ferror@plt+0x53e8>
  4084dc:	mov	x22, x0
  4084e0:	b	408360 <ferror@plt+0x53e0>
  4084e4:	ldr	x0, [x20]
  4084e8:	mov	x1, x25
  4084ec:	bl	407000 <ferror@plt+0x4080>
  4084f0:	mov	x19, x0
  4084f4:	b	4084cc <ferror@plt+0x554c>
  4084f8:	stp	x29, x30, [sp, #-80]!
  4084fc:	mov	x29, sp
  408500:	stp	x21, x22, [sp, #32]
  408504:	mov	x21, x2
  408508:	mov	x22, x1
  40850c:	add	x2, sp, #0x48
  408510:	mov	x1, x21
  408514:	stp	x19, x20, [sp, #16]
  408518:	mov	x20, x0
  40851c:	stp	x23, x24, [sp, #48]
  408520:	mov	x23, x3
  408524:	mov	x24, x4
  408528:	bl	40831c <ferror@plt+0x539c>
  40852c:	cmp	x21, x0
  408530:	mov	x19, x0
  408534:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
  408538:	b.hi	40855c <ferror@plt+0x55dc>  // b.pmore
  40853c:	lsl	x19, x19, #4
  408540:	mov	w2, #0x5                   	// #5
  408544:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408548:	mov	x0, #0x0                   	// #0
  40854c:	add	x1, x1, #0x359
  408550:	bl	402e60 <dcgettext@plt>
  408554:	ldr	x1, [x20, x19]
  408558:	bl	405830 <ferror@plt+0x28b0>
  40855c:	ldr	x5, [sp, #72]
  408560:	mov	x4, x24
  408564:	mov	x3, x23
  408568:	mov	x2, x0
  40856c:	mov	x1, x22
  408570:	mov	x0, x20
  408574:	bl	407d74 <ferror@plt+0x4df4>
  408578:	mov	x0, x19
  40857c:	ldp	x19, x20, [sp, #16]
  408580:	ldp	x21, x22, [sp, #32]
  408584:	ldp	x23, x24, [sp, #48]
  408588:	ldp	x29, x30, [sp], #80
  40858c:	ret
  408590:	stp	x29, x30, [sp, #-256]!
  408594:	mov	x29, sp
  408598:	stp	x19, x20, [sp, #16]
  40859c:	mov	x19, x1
  4085a0:	stp	x21, x22, [sp, #32]
  4085a4:	mov	x21, x0
  4085a8:	mov	x22, x2
  4085ac:	stp	x25, x26, [sp, #64]
  4085b0:	adrp	x26, 426000 <_obstack_memory_used@@Base+0x16920>
  4085b4:	mov	x25, x3
  4085b8:	add	x26, x26, #0x3d0
  4085bc:	stp	x23, x24, [sp, #48]
  4085c0:	stp	x27, x28, [sp, #80]
  4085c4:	ldr	w0, [x26, #216]
  4085c8:	cmp	x0, x22
  4085cc:	b.cs	4086e0 <ferror@plt+0x5760>  // b.hs, b.nlast
  4085d0:	mov	x27, x21
  4085d4:	mov	x23, #0x0                   	// #0
  4085d8:	mov	x20, #0x0                   	// #0
  4085dc:	b	408634 <ferror@plt+0x56b4>
  4085e0:	mov	w1, #0x0                   	// #0
  4085e4:	add	x0, sp, #0x80
  4085e8:	str	x5, [sp, #96]
  4085ec:	bl	40756c <ferror@plt+0x45ec>
  4085f0:	ldr	w2, [x26, #216]
  4085f4:	add	x28, x0, #0xd
  4085f8:	ldr	x5, [sp, #96]
  4085fc:	cmp	x2, x19
  408600:	ldr	x3, [sp, #128]
  408604:	csel	x1, x2, x19, ls  // ls = plast
  408608:	mov	x24, x0
  40860c:	mov	x4, x28
  408610:	mov	x0, x5
  408614:	add	x23, x23, #0x1
  408618:	bl	4084f8 <ferror@plt+0x5578>
  40861c:	cmp	x19, x0
  408620:	csel	x1, x19, x0, ls  // ls = plast
  408624:	add	x20, x20, x0
  408628:	sub	x19, x19, x1
  40862c:	stp	x28, x24, [x27]
  408630:	add	x27, x27, #0x10
  408634:	ldr	w24, [x26, #216]
  408638:	sub	x1, x22, x20
  40863c:	add	x5, x21, x20, lsl #4
  408640:	cmp	x24, x1
  408644:	b.ls	4085e0 <ferror@plt+0x5660>  // b.plast
  408648:	udiv	x0, x23, x24
  40864c:	add	x2, x1, #0x1
  408650:	msub	x0, x0, x24, x23
  408654:	sub	x3, x24, x0
  408658:	cmp	x1, x3
  40865c:	b.ls	4086bc <ferror@plt+0x573c>  // b.plast
  408660:	sub	x0, x0, x24
  408664:	mov	w1, #0x0                   	// #0
  408668:	add	x24, x0, x2
  40866c:	add	x0, sp, #0x80
  408670:	str	x5, [sp, #104]
  408674:	bl	40756c <ferror@plt+0x45ec>
  408678:	ldr	x5, [sp, #104]
  40867c:	cmp	x19, x24
  408680:	ldr	x3, [sp, #128]
  408684:	add	x4, x0, #0xd
  408688:	csel	x1, x19, x24, ls  // ls = plast
  40868c:	mov	x28, x0
  408690:	mov	x2, x24
  408694:	mov	x0, x5
  408698:	str	x4, [sp, #96]
  40869c:	bl	4084f8 <ferror@plt+0x5578>
  4086a0:	cmp	x19, x0
  4086a4:	add	x23, x23, #0x1
  4086a8:	csel	x1, x19, x0, ls  // ls = plast
  4086ac:	add	x20, x20, x0
  4086b0:	sub	x19, x19, x1
  4086b4:	ldr	x4, [sp, #96]
  4086b8:	stp	x4, x28, [x27]
  4086bc:	sub	x2, x22, x20
  4086c0:	add	x1, x21, x20, lsl #4
  4086c4:	sub	x20, x23, x20
  4086c8:	lsl	x2, x2, #4
  4086cc:	add	x0, x21, x23, lsl #4
  4086d0:	add	x19, x19, x23
  4086d4:	add	x22, x22, x20
  4086d8:	bl	402830 <memmove@plt>
  4086dc:	b	4085c4 <ferror@plt+0x5644>
  4086e0:	adrp	x28, 411000 <_obstack_memory_used@@Base+0x1920>
  4086e4:	add	x23, x21, x19, lsl #4
  4086e8:	mov	x27, x19
  4086ec:	add	x28, x28, #0x84b
  4086f0:	mov	x20, #0x0                   	// #0
  4086f4:	cmp	x22, x27
  4086f8:	b.hi	40876c <ferror@plt+0x57ec>  // b.pmore
  4086fc:	adrp	x24, 410000 <_obstack_memory_used@@Base+0x920>
  408700:	add	x26, x21, #0x10
  408704:	add	x24, x24, #0x3c5
  408708:	add	x2, sp, #0x78
  40870c:	mov	x1, x22
  408710:	mov	x0, x21
  408714:	bl	40831c <ferror@plt+0x539c>
  408718:	mov	x20, x0
  40871c:	cmp	x22, x0
  408720:	b.ne	40885c <ferror@plt+0x58dc>  // b.any
  408724:	mov	x1, x24
  408728:	mov	x0, x25
  40872c:	bl	407000 <ferror@plt+0x4080>
  408730:	mov	x3, x0
  408734:	cbz	x0, 408828 <ferror@plt+0x58a8>
  408738:	ldr	x5, [sp, #120]
  40873c:	mov	x4, x25
  408740:	mov	x2, x22
  408744:	mov	x1, x19
  408748:	mov	x0, x21
  40874c:	bl	407d74 <ferror@plt+0x4df4>
  408750:	ldp	x19, x20, [sp, #16]
  408754:	ldp	x21, x22, [sp, #32]
  408758:	ldp	x23, x24, [sp, #48]
  40875c:	ldp	x25, x26, [sp, #64]
  408760:	ldp	x27, x28, [sp, #80]
  408764:	ldp	x29, x30, [sp], #256
  408768:	ret
  40876c:	ldr	x24, [x23]
  408770:	mov	x1, x28
  408774:	mov	x0, x24
  408778:	bl	402c90 <strcmp@plt>
  40877c:	mov	w26, w0
  408780:	cbz	x25, 4087d0 <ferror@plt+0x5850>
  408784:	mov	x1, x24
  408788:	mov	x0, x25
  40878c:	bl	402c90 <strcmp@plt>
  408790:	cbnz	w0, 4087d0 <ferror@plt+0x5850>
  408794:	cbz	w26, 4087d0 <ferror@plt+0x5850>
  408798:	cbnz	x20, 4087c4 <ferror@plt+0x5844>
  40879c:	mov	w1, #0x0                   	// #0
  4087a0:	add	x0, sp, #0x78
  4087a4:	bl	40756c <ferror@plt+0x45ec>
  4087a8:	mov	x20, x0
  4087ac:	ldr	x3, [sp, #120]
  4087b0:	add	x4, x0, #0xd
  4087b4:	mov	x2, #0x1                   	// #1
  4087b8:	mov	x0, x23
  4087bc:	mov	x1, #0x0                   	// #0
  4087c0:	bl	4084f8 <ferror@plt+0x5578>
  4087c4:	add	x0, x20, #0xd
  4087c8:	stp	x0, x20, [x23]
  4087cc:	b	408810 <ferror@plt+0x5890>
  4087d0:	bl	405898 <ferror@plt+0x2918>
  4087d4:	mov	x24, x0
  4087d8:	cbz	x0, 4086fc <ferror@plt+0x577c>
  4087dc:	add	x1, sp, #0x80
  4087e0:	cbnz	w26, 40881c <ferror@plt+0x589c>
  4087e4:	mov	w0, #0x0                   	// #0
  4087e8:	bl	410130 <_obstack_memory_used@@Base+0xa50>
  4087ec:	cbnz	w0, 408810 <ferror@plt+0x5890>
  4087f0:	ldr	x0, [x24, #8]
  4087f4:	ldr	x1, [sp, #136]
  4087f8:	cmp	x1, x0
  4087fc:	b.ne	408810 <ferror@plt+0x5890>  // b.any
  408800:	ldr	x0, [x24]
  408804:	ldr	x1, [sp, #128]
  408808:	cmp	x1, x0
  40880c:	b.eq	408798 <ferror@plt+0x5818>  // b.none
  408810:	add	x27, x27, #0x1
  408814:	add	x23, x23, #0x10
  408818:	b	4086f4 <ferror@plt+0x5774>
  40881c:	ldr	x0, [x23]
  408820:	bl	410120 <_obstack_memory_used@@Base+0xa40>
  408824:	b	4087ec <ferror@plt+0x586c>
  408828:	bl	402ef0 <__errno_location@plt>
  40882c:	ldr	w0, [x0]
  408830:	cmp	w0, #0x18
  408834:	b.ne	408840 <ferror@plt+0x58c0>  // b.any
  408838:	cmp	x22, #0x2
  40883c:	b.hi	408884 <ferror@plt+0x5904>  // b.pmore
  408840:	mov	w2, #0x5                   	// #5
  408844:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408848:	mov	x0, #0x0                   	// #0
  40884c:	add	x1, x1, #0x359
  408850:	bl	402e60 <dcgettext@plt>
  408854:	mov	x1, x25
  408858:	bl	405830 <ferror@plt+0x28b0>
  40885c:	cmp	x0, #0x2
  408860:	b.hi	408884 <ferror@plt+0x5904>  // b.pmore
  408864:	lsl	x20, x20, #4
  408868:	mov	w2, #0x5                   	// #5
  40886c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408870:	mov	x0, #0x0                   	// #0
  408874:	add	x1, x1, #0x359
  408878:	bl	402e60 <dcgettext@plt>
  40887c:	ldr	x1, [x21, x20]
  408880:	b	408858 <ferror@plt+0x58d8>
  408884:	sub	x20, x20, #0x1
  408888:	lsl	x0, x20, #4
  40888c:	add	x27, x21, x20, lsl #4
  408890:	ldr	x1, [x21, x0]
  408894:	ldr	x0, [sp, #120]
  408898:	ldr	x0, [x0, x20, lsl #3]
  40889c:	bl	407174 <ferror@plt+0x41f4>
  4088a0:	cmp	x20, #0x2
  4088a4:	add	x0, sp, #0x80
  4088a8:	cset	w1, hi  // hi = pmore
  4088ac:	bl	40756c <ferror@plt+0x45ec>
  4088b0:	mov	x23, x0
  4088b4:	cbz	x0, 408884 <ferror@plt+0x5904>
  4088b8:	ldp	x5, x3, [sp, #120]
  4088bc:	cmp	x19, x20
  4088c0:	csel	x28, x19, x20, ls  // ls = plast
  4088c4:	add	x4, x0, #0xd
  4088c8:	mov	x2, x20
  4088cc:	mov	x1, x28
  4088d0:	mov	x0, x21
  4088d4:	str	x4, [sp, #96]
  4088d8:	sub	x22, x22, x20
  4088dc:	sub	x19, x19, x28
  4088e0:	bl	407d74 <ferror@plt+0x4df4>
  4088e4:	add	x19, x19, #0x1
  4088e8:	ldr	x4, [sp, #96]
  4088ec:	stp	x4, x23, [x21]
  4088f0:	lsl	x2, x22, #4
  4088f4:	mov	x1, x27
  4088f8:	mov	x0, x26
  4088fc:	add	x22, x22, #0x1
  408900:	bl	402830 <memmove@plt>
  408904:	b	408708 <ferror@plt+0x5788>
  408908:	stp	x29, x30, [sp, #-176]!
  40890c:	mov	x29, sp
  408910:	stp	x19, x20, [sp, #16]
  408914:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  408918:	stp	x21, x22, [sp, #32]
  40891c:	mov	w22, w0
  408920:	str	x23, [sp, #48]
  408924:	cbz	w0, 408960 <ferror@plt+0x59e0>
  408928:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40892c:	mov	w2, #0x5                   	// #5
  408930:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408934:	add	x1, x1, #0x45b
  408938:	ldr	x20, [x0, #1352]
  40893c:	mov	x0, #0x0                   	// #0
  408940:	bl	402e60 <dcgettext@plt>
  408944:	mov	x2, x0
  408948:	ldr	x3, [x19, #3008]
  40894c:	mov	x0, x20
  408950:	mov	w1, #0x1                   	// #1
  408954:	bl	402c70 <__fprintf_chk@plt>
  408958:	mov	w0, w22
  40895c:	bl	4028a0 <exit@plt>
  408960:	mov	w2, #0x5                   	// #5
  408964:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408968:	mov	x0, #0x0                   	// #0
  40896c:	add	x1, x1, #0x482
  408970:	bl	402e60 <dcgettext@plt>
  408974:	mov	x1, x0
  408978:	ldr	x3, [x19, #3008]
  40897c:	mov	w0, #0x1                   	// #1
  408980:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  408984:	adrp	x21, 411000 <_obstack_memory_used@@Base+0x1920>
  408988:	mov	x2, x3
  40898c:	add	x20, sp, #0x40
  408990:	bl	402ad0 <__printf_chk@plt>
  408994:	add	x21, x21, #0x51a
  408998:	mov	w2, #0x5                   	// #5
  40899c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4089a0:	mov	x0, #0x0                   	// #0
  4089a4:	add	x1, x1, #0x4c9
  4089a8:	bl	402e60 <dcgettext@plt>
  4089ac:	ldr	x1, [x19, #1376]
  4089b0:	bl	402e70 <fputs_unlocked@plt>
  4089b4:	mov	w2, #0x5                   	// #5
  4089b8:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4089bc:	mov	x0, #0x0                   	// #0
  4089c0:	add	x1, x1, #0x508
  4089c4:	bl	402e60 <dcgettext@plt>
  4089c8:	ldr	x1, [x19, #1376]
  4089cc:	bl	402e70 <fputs_unlocked@plt>
  4089d0:	mov	w2, #0x5                   	// #5
  4089d4:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4089d8:	mov	x0, #0x0                   	// #0
  4089dc:	add	x1, x1, #0x540
  4089e0:	bl	402e60 <dcgettext@plt>
  4089e4:	ldr	x1, [x19, #1376]
  4089e8:	bl	402e70 <fputs_unlocked@plt>
  4089ec:	mov	w2, #0x5                   	// #5
  4089f0:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  4089f4:	mov	x0, #0x0                   	// #0
  4089f8:	add	x1, x1, #0x58b
  4089fc:	bl	402e60 <dcgettext@plt>
  408a00:	ldr	x1, [x19, #1376]
  408a04:	bl	402e70 <fputs_unlocked@plt>
  408a08:	mov	w2, #0x5                   	// #5
  408a0c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a10:	mov	x0, #0x0                   	// #0
  408a14:	add	x1, x1, #0x59f
  408a18:	bl	402e60 <dcgettext@plt>
  408a1c:	ldr	x1, [x19, #1376]
  408a20:	bl	402e70 <fputs_unlocked@plt>
  408a24:	mov	w2, #0x5                   	// #5
  408a28:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a2c:	mov	x0, #0x0                   	// #0
  408a30:	add	x1, x1, #0x66b
  408a34:	bl	402e60 <dcgettext@plt>
  408a38:	ldr	x1, [x19, #1376]
  408a3c:	bl	402e70 <fputs_unlocked@plt>
  408a40:	mov	w2, #0x5                   	// #5
  408a44:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a48:	mov	x0, #0x0                   	// #0
  408a4c:	add	x1, x1, #0x73e
  408a50:	bl	402e60 <dcgettext@plt>
  408a54:	ldr	x1, [x19, #1376]
  408a58:	bl	402e70 <fputs_unlocked@plt>
  408a5c:	mov	w2, #0x5                   	// #5
  408a60:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a64:	mov	x0, #0x0                   	// #0
  408a68:	add	x1, x1, #0x78a
  408a6c:	bl	402e60 <dcgettext@plt>
  408a70:	ldr	x1, [x19, #1376]
  408a74:	bl	402e70 <fputs_unlocked@plt>
  408a78:	mov	w2, #0x5                   	// #5
  408a7c:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a80:	mov	x0, #0x0                   	// #0
  408a84:	add	x1, x1, #0x89c
  408a88:	bl	402e60 <dcgettext@plt>
  408a8c:	ldr	x1, [x19, #1376]
  408a90:	bl	402e70 <fputs_unlocked@plt>
  408a94:	mov	w2, #0x5                   	// #5
  408a98:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408a9c:	mov	x0, #0x0                   	// #0
  408aa0:	add	x1, x1, #0x9b2
  408aa4:	bl	402e60 <dcgettext@plt>
  408aa8:	ldr	x1, [x19, #1376]
  408aac:	bl	402e70 <fputs_unlocked@plt>
  408ab0:	mov	w2, #0x5                   	// #5
  408ab4:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408ab8:	mov	x0, #0x0                   	// #0
  408abc:	add	x1, x1, #0x9c3
  408ac0:	bl	402e60 <dcgettext@plt>
  408ac4:	ldr	x1, [x19, #1376]
  408ac8:	bl	402e70 <fputs_unlocked@plt>
  408acc:	mov	w2, #0x5                   	// #5
  408ad0:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408ad4:	mov	x0, #0x0                   	// #0
  408ad8:	add	x1, x1, #0xa39
  408adc:	bl	402e60 <dcgettext@plt>
  408ae0:	ldr	x1, [x19, #1376]
  408ae4:	bl	402e70 <fputs_unlocked@plt>
  408ae8:	mov	w2, #0x5                   	// #5
  408aec:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408af0:	mov	x0, #0x0                   	// #0
  408af4:	add	x1, x1, #0xb4e
  408af8:	bl	402e60 <dcgettext@plt>
  408afc:	ldr	x1, [x19, #1376]
  408b00:	bl	402e70 <fputs_unlocked@plt>
  408b04:	mov	w2, #0x5                   	// #5
  408b08:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408b0c:	mov	x0, #0x0                   	// #0
  408b10:	add	x1, x1, #0xcaa
  408b14:	bl	402e60 <dcgettext@plt>
  408b18:	ldr	x1, [x19, #1376]
  408b1c:	bl	402e70 <fputs_unlocked@plt>
  408b20:	mov	w2, #0x5                   	// #5
  408b24:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408b28:	mov	x0, #0x0                   	// #0
  408b2c:	add	x1, x1, #0xd3a
  408b30:	bl	402e60 <dcgettext@plt>
  408b34:	ldr	x1, [x19, #1376]
  408b38:	bl	402e70 <fputs_unlocked@plt>
  408b3c:	mov	w2, #0x5                   	// #5
  408b40:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408b44:	mov	x0, #0x0                   	// #0
  408b48:	add	x1, x1, #0xe12
  408b4c:	bl	402e60 <dcgettext@plt>
  408b50:	mov	x1, x0
  408b54:	adrp	x2, 410000 <_obstack_memory_used@@Base+0x920>
  408b58:	mov	w0, #0x1                   	// #1
  408b5c:	add	x2, x2, #0xfd7
  408b60:	bl	402ad0 <__printf_chk@plt>
  408b64:	mov	w2, #0x5                   	// #5
  408b68:	adrp	x1, 410000 <_obstack_memory_used@@Base+0x920>
  408b6c:	mov	x0, #0x0                   	// #0
  408b70:	add	x1, x1, #0xfdc
  408b74:	bl	402e60 <dcgettext@plt>
  408b78:	ldr	x1, [x19, #1376]
  408b7c:	bl	402e70 <fputs_unlocked@plt>
  408b80:	mov	w2, #0x5                   	// #5
  408b84:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408b88:	mov	x0, #0x0                   	// #0
  408b8c:	add	x1, x1, #0x1c
  408b90:	bl	402e60 <dcgettext@plt>
  408b94:	ldr	x1, [x19, #1376]
  408b98:	bl	402e70 <fputs_unlocked@plt>
  408b9c:	mov	w2, #0x5                   	// #5
  408ba0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408ba4:	mov	x0, #0x0                   	// #0
  408ba8:	add	x1, x1, #0x49
  408bac:	bl	402e60 <dcgettext@plt>
  408bb0:	ldr	x1, [x19, #1376]
  408bb4:	bl	402e70 <fputs_unlocked@plt>
  408bb8:	mov	w2, #0x5                   	// #5
  408bbc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408bc0:	mov	x0, #0x0                   	// #0
  408bc4:	add	x1, x1, #0x7f
  408bc8:	bl	402e60 <dcgettext@plt>
  408bcc:	ldr	x1, [x19, #1376]
  408bd0:	bl	402e70 <fputs_unlocked@plt>
  408bd4:	mov	w2, #0x5                   	// #5
  408bd8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408bdc:	mov	x0, #0x0                   	// #0
  408be0:	add	x1, x1, #0x2db
  408be4:	bl	402e60 <dcgettext@plt>
  408be8:	ldr	x1, [x19, #1376]
  408bec:	bl	402e70 <fputs_unlocked@plt>
  408bf0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408bf4:	add	x1, x1, #0xc38
  408bf8:	add	x1, x1, #0x110
  408bfc:	add	x0, sp, #0x40
  408c00:	mov	x2, #0x70                  	// #112
  408c04:	bl	402820 <memcpy@plt>
  408c08:	ldr	x1, [x20]
  408c0c:	cbnz	x1, 408cc8 <ferror@plt+0x5d48>
  408c10:	ldr	x20, [x20, #8]
  408c14:	mov	w2, #0x5                   	// #5
  408c18:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408c1c:	mov	x0, #0x0                   	// #0
  408c20:	cmp	x20, #0x0
  408c24:	add	x1, x1, #0x3c0
  408c28:	csel	x20, x20, x21, ne  // ne = any
  408c2c:	adrp	x23, 411000 <_obstack_memory_used@@Base+0x1920>
  408c30:	add	x23, x23, #0x3d7
  408c34:	bl	402e60 <dcgettext@plt>
  408c38:	mov	x1, x0
  408c3c:	mov	x3, x23
  408c40:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  408c44:	add	x2, x2, #0x3ff
  408c48:	mov	w0, #0x1                   	// #1
  408c4c:	bl	402ad0 <__printf_chk@plt>
  408c50:	mov	x1, #0x0                   	// #0
  408c54:	mov	w0, #0x5                   	// #5
  408c58:	bl	402f70 <setlocale@plt>
  408c5c:	cbnz	x0, 408cdc <ferror@plt+0x5d5c>
  408c60:	mov	w2, #0x5                   	// #5
  408c64:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408c68:	mov	x0, #0x0                   	// #0
  408c6c:	add	x1, x1, #0x458
  408c70:	bl	402e60 <dcgettext@plt>
  408c74:	mov	x1, x0
  408c78:	mov	x3, x21
  408c7c:	mov	x2, x23
  408c80:	mov	w0, #0x1                   	// #1
  408c84:	bl	402ad0 <__printf_chk@plt>
  408c88:	mov	w2, #0x5                   	// #5
  408c8c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408c90:	mov	x0, #0x0                   	// #0
  408c94:	add	x1, x1, #0x473
  408c98:	bl	402e60 <dcgettext@plt>
  408c9c:	mov	x1, x0
  408ca0:	cmp	x20, x21
  408ca4:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  408ca8:	adrp	x3, 410000 <_obstack_memory_used@@Base+0x920>
  408cac:	add	x2, x2, #0x701
  408cb0:	add	x3, x3, #0x184
  408cb4:	mov	w0, #0x1                   	// #1
  408cb8:	csel	x3, x3, x2, eq  // eq = none
  408cbc:	mov	x2, x20
  408cc0:	bl	402ad0 <__printf_chk@plt>
  408cc4:	b	408958 <ferror@plt+0x59d8>
  408cc8:	mov	x0, x21
  408ccc:	bl	402c90 <strcmp@plt>
  408cd0:	cbz	w0, 408c10 <ferror@plt+0x5c90>
  408cd4:	add	x20, x20, #0x10
  408cd8:	b	408c08 <ferror@plt+0x5c88>
  408cdc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408ce0:	mov	x2, #0x3                   	// #3
  408ce4:	add	x1, x1, #0x40d
  408ce8:	bl	402a90 <strncmp@plt>
  408cec:	cbz	w0, 408c60 <ferror@plt+0x5ce0>
  408cf0:	mov	w2, #0x5                   	// #5
  408cf4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  408cf8:	mov	x0, #0x0                   	// #0
  408cfc:	add	x1, x1, #0x411
  408d00:	bl	402e60 <dcgettext@plt>
  408d04:	ldr	x1, [x19, #1376]
  408d08:	bl	402e70 <fputs_unlocked@plt>
  408d0c:	b	408c60 <ferror@plt+0x5ce0>
  408d10:	mov	w0, #0x1                   	// #1
  408d14:	b	408908 <ferror@plt+0x5988>
  408d18:	stp	x29, x30, [sp, #-112]!
  408d1c:	mov	x29, sp
  408d20:	stp	x21, x22, [sp, #32]
  408d24:	mov	x21, x2
  408d28:	mov	x22, x3
  408d2c:	stp	x19, x20, [sp, #16]
  408d30:	mov	x19, #0xffffffffffffffff    	// #-1
  408d34:	mov	x20, #0x0                   	// #0
  408d38:	stp	x23, x24, [sp, #48]
  408d3c:	mov	w23, #0x0                   	// #0
  408d40:	stp	x25, x26, [sp, #64]
  408d44:	mov	x25, x1
  408d48:	mov	x26, x21
  408d4c:	stp	x27, x28, [sp, #80]
  408d50:	mov	x27, x0
  408d54:	bl	402880 <strlen@plt>
  408d58:	mov	x24, x0
  408d5c:	mov	w28, #0x1                   	// #1
  408d60:	ldr	x3, [x25, x20, lsl #3]
  408d64:	cbnz	x3, 408d78 <ferror@plt+0x5df8>
  408d68:	cmp	w23, #0x0
  408d6c:	mov	x0, #0xfffffffffffffffe    	// #-2
  408d70:	csel	x19, x19, x0, eq  // eq = none
  408d74:	b	408da8 <ferror@plt+0x5e28>
  408d78:	mov	x2, x24
  408d7c:	mov	x1, x27
  408d80:	mov	x0, x3
  408d84:	str	x3, [sp, #104]
  408d88:	bl	402a90 <strncmp@plt>
  408d8c:	cbnz	w0, 408dd4 <ferror@plt+0x5e54>
  408d90:	ldr	x3, [sp, #104]
  408d94:	mov	x0, x3
  408d98:	bl	402880 <strlen@plt>
  408d9c:	cmp	x0, x24
  408da0:	b.ne	408dc8 <ferror@plt+0x5e48>  // b.any
  408da4:	mov	x19, x20
  408da8:	mov	x0, x19
  408dac:	ldp	x19, x20, [sp, #16]
  408db0:	ldp	x21, x22, [sp, #32]
  408db4:	ldp	x23, x24, [sp, #48]
  408db8:	ldp	x25, x26, [sp, #64]
  408dbc:	ldp	x27, x28, [sp, #80]
  408dc0:	ldp	x29, x30, [sp], #112
  408dc4:	ret
  408dc8:	cmn	x19, #0x1
  408dcc:	b.ne	408de0 <ferror@plt+0x5e60>  // b.any
  408dd0:	mov	x19, x20
  408dd4:	add	x20, x20, #0x1
  408dd8:	add	x26, x26, x22
  408ddc:	b	408d60 <ferror@plt+0x5de0>
  408de0:	cbz	x21, 408e00 <ferror@plt+0x5e80>
  408de4:	madd	x0, x19, x22, x21
  408de8:	mov	x2, x22
  408dec:	mov	x1, x26
  408df0:	bl	402c40 <memcmp@plt>
  408df4:	cmp	w0, #0x0
  408df8:	csel	w23, w23, w28, eq  // eq = none
  408dfc:	b	408dd4 <ferror@plt+0x5e54>
  408e00:	mov	w23, #0x1                   	// #1
  408e04:	b	408dd4 <ferror@plt+0x5e54>
  408e08:	stp	x29, x30, [sp, #-48]!
  408e0c:	cmn	x2, #0x1
  408e10:	mov	w2, #0x5                   	// #5
  408e14:	mov	x29, sp
  408e18:	stp	x19, x20, [sp, #16]
  408e1c:	mov	x20, x1
  408e20:	str	x21, [sp, #32]
  408e24:	mov	x21, x0
  408e28:	b.ne	408e84 <ferror@plt+0x5f04>  // b.any
  408e2c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  408e30:	add	x1, x1, #0x25d
  408e34:	mov	x0, #0x0                   	// #0
  408e38:	bl	402e60 <dcgettext@plt>
  408e3c:	mov	x2, x20
  408e40:	mov	x19, x0
  408e44:	mov	w1, #0x8                   	// #8
  408e48:	mov	w0, #0x0                   	// #0
  408e4c:	bl	40cc90 <ferror@plt+0x9d10>
  408e50:	mov	x20, x0
  408e54:	mov	x1, x21
  408e58:	mov	w0, #0x1                   	// #1
  408e5c:	bl	40cef0 <ferror@plt+0x9f70>
  408e60:	mov	x4, x0
  408e64:	mov	x3, x20
  408e68:	mov	x2, x19
  408e6c:	ldp	x19, x20, [sp, #16]
  408e70:	mov	w1, #0x0                   	// #0
  408e74:	ldr	x21, [sp, #32]
  408e78:	mov	w0, #0x0                   	// #0
  408e7c:	ldp	x29, x30, [sp], #48
  408e80:	b	4028c0 <error@plt>
  408e84:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  408e88:	add	x1, x1, #0x278
  408e8c:	b	408e34 <ferror@plt+0x5eb4>
  408e90:	stp	x29, x30, [sp, #-112]!
  408e94:	mov	x29, sp
  408e98:	stp	x19, x20, [sp, #16]
  408e9c:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x16920>
  408ea0:	mov	x19, x1
  408ea4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  408ea8:	add	x1, x1, #0x295
  408eac:	stp	x21, x22, [sp, #32]
  408eb0:	mov	x22, x2
  408eb4:	mov	w2, #0x5                   	// #5
  408eb8:	stp	x23, x24, [sp, #48]
  408ebc:	mov	x21, #0x0                   	// #0
  408ec0:	stp	x25, x26, [sp, #64]
  408ec4:	adrp	x26, 412000 <_obstack_memory_used@@Base+0x2920>
  408ec8:	mov	x25, #0x0                   	// #0
  408ecc:	stp	x27, x28, [sp, #80]
  408ed0:	add	x26, x26, #0x2aa
  408ed4:	adrp	x27, 412000 <_obstack_memory_used@@Base+0x2920>
  408ed8:	str	x0, [sp, #104]
  408edc:	mov	x0, #0x0                   	// #0
  408ee0:	bl	402e60 <dcgettext@plt>
  408ee4:	add	x27, x27, #0x2b2
  408ee8:	ldr	x1, [x20, #1352]
  408eec:	bl	402e70 <fputs_unlocked@plt>
  408ef0:	ldr	x0, [sp, #104]
  408ef4:	ldr	x23, [x20, #1352]
  408ef8:	ldr	x24, [x0, x21, lsl #3]
  408efc:	cbnz	x24, 408f24 <ferror@plt+0x5fa4>
  408f00:	mov	x1, x23
  408f04:	mov	w0, #0xa                   	// #10
  408f08:	ldp	x19, x20, [sp, #16]
  408f0c:	ldp	x21, x22, [sp, #32]
  408f10:	ldp	x23, x24, [sp, #48]
  408f14:	ldp	x25, x26, [sp, #64]
  408f18:	ldp	x27, x28, [sp, #80]
  408f1c:	ldp	x29, x30, [sp], #112
  408f20:	b	4029c0 <putc_unlocked@plt>
  408f24:	mov	x28, x19
  408f28:	cbz	x21, 408f40 <ferror@plt+0x5fc0>
  408f2c:	mov	x2, x22
  408f30:	mov	x1, x19
  408f34:	mov	x0, x25
  408f38:	bl	402c40 <memcmp@plt>
  408f3c:	cbz	w0, 408f6c <ferror@plt+0x5fec>
  408f40:	mov	x0, x24
  408f44:	bl	40cef8 <ferror@plt+0x9f78>
  408f48:	mov	x2, x26
  408f4c:	mov	x3, x0
  408f50:	mov	w1, #0x1                   	// #1
  408f54:	mov	x0, x23
  408f58:	bl	402c70 <__fprintf_chk@plt>
  408f5c:	add	x21, x21, #0x1
  408f60:	add	x19, x19, x22
  408f64:	mov	x25, x28
  408f68:	b	408ef0 <ferror@plt+0x5f70>
  408f6c:	mov	x0, x24
  408f70:	bl	40cef8 <ferror@plt+0x9f78>
  408f74:	mov	x2, x27
  408f78:	mov	x3, x0
  408f7c:	mov	w1, #0x1                   	// #1
  408f80:	mov	x0, x23
  408f84:	mov	x28, x25
  408f88:	bl	402c70 <__fprintf_chk@plt>
  408f8c:	b	408f5c <ferror@plt+0x5fdc>
  408f90:	stp	x29, x30, [sp, #-64]!
  408f94:	mov	x29, sp
  408f98:	stp	x19, x20, [sp, #16]
  408f9c:	mov	x19, x2
  408fa0:	mov	x20, x3
  408fa4:	stp	x21, x22, [sp, #32]
  408fa8:	mov	x22, x1
  408fac:	mov	x21, x4
  408fb0:	mov	x3, x4
  408fb4:	mov	x2, x20
  408fb8:	mov	x1, x19
  408fbc:	stp	x23, x24, [sp, #48]
  408fc0:	mov	x24, x0
  408fc4:	mov	x23, x5
  408fc8:	mov	x0, x22
  408fcc:	bl	408d18 <ferror@plt+0x5d98>
  408fd0:	tbz	x0, #63, 408ffc <ferror@plt+0x607c>
  408fd4:	mov	x2, x0
  408fd8:	mov	x1, x22
  408fdc:	mov	x0, x24
  408fe0:	bl	408e08 <ferror@plt+0x5e88>
  408fe4:	mov	x0, x19
  408fe8:	mov	x2, x21
  408fec:	mov	x1, x20
  408ff0:	bl	408e90 <ferror@plt+0x5f10>
  408ff4:	blr	x23
  408ff8:	mov	x0, #0xffffffffffffffff    	// #-1
  408ffc:	ldp	x19, x20, [sp, #16]
  409000:	ldp	x21, x22, [sp, #32]
  409004:	ldp	x23, x24, [sp, #48]
  409008:	ldp	x29, x30, [sp], #64
  40900c:	ret
  409010:	stp	x29, x30, [sp, #-64]!
  409014:	mov	x29, sp
  409018:	stp	x19, x20, [sp, #16]
  40901c:	mov	x19, x1
  409020:	mov	x20, x2
  409024:	stp	x21, x22, [sp, #32]
  409028:	mov	x22, x0
  40902c:	mov	x21, x3
  409030:	str	x23, [sp, #48]
  409034:	ldr	x23, [x19]
  409038:	cbz	x23, 409058 <ferror@plt+0x60d8>
  40903c:	mov	x1, x20
  409040:	mov	x2, x21
  409044:	mov	x0, x22
  409048:	add	x19, x19, #0x8
  40904c:	add	x20, x20, x21
  409050:	bl	402c40 <memcmp@plt>
  409054:	cbnz	w0, 409034 <ferror@plt+0x60b4>
  409058:	mov	x0, x23
  40905c:	ldp	x19, x20, [sp, #16]
  409060:	ldp	x21, x22, [sp, #32]
  409064:	ldr	x23, [sp, #48]
  409068:	ldp	x29, x30, [sp], #64
  40906c:	ret
  409070:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  409074:	str	x0, [x1, #2992]
  409078:	ret
  40907c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  409080:	strb	w0, [x1, #3000]
  409084:	ret
  409088:	stp	x29, x30, [sp, #-48]!
  40908c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  409090:	mov	x29, sp
  409094:	ldr	x0, [x0, #1376]
  409098:	stp	x19, x20, [sp, #16]
  40909c:	stp	x21, x22, [sp, #32]
  4090a0:	bl	40f8a8 <_obstack_memory_used@@Base+0x1c8>
  4090a4:	cbz	w0, 409138 <ferror@plt+0x61b8>
  4090a8:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x16920>
  4090ac:	add	x0, x21, #0xbb0
  4090b0:	ldrb	w22, [x0, #8]
  4090b4:	bl	402ef0 <__errno_location@plt>
  4090b8:	mov	x19, x0
  4090bc:	cbz	w22, 4090cc <ferror@plt+0x614c>
  4090c0:	ldr	w0, [x0]
  4090c4:	cmp	w0, #0x20
  4090c8:	b.eq	409138 <ferror@plt+0x61b8>  // b.none
  4090cc:	mov	w2, #0x5                   	// #5
  4090d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  4090d4:	mov	x0, #0x0                   	// #0
  4090d8:	add	x1, x1, #0x2b7
  4090dc:	bl	402e60 <dcgettext@plt>
  4090e0:	mov	x20, x0
  4090e4:	ldr	x0, [x21, #2992]
  4090e8:	cbz	x0, 40911c <ferror@plt+0x619c>
  4090ec:	ldr	w19, [x19]
  4090f0:	bl	40cdb4 <ferror@plt+0x9e34>
  4090f4:	adrp	x2, 410000 <_obstack_memory_used@@Base+0x920>
  4090f8:	mov	x3, x0
  4090fc:	mov	x4, x20
  409100:	add	x2, x2, #0x219
  409104:	mov	w1, w19
  409108:	mov	w0, #0x0                   	// #0
  40910c:	bl	4028c0 <error@plt>
  409110:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  409114:	ldr	w0, [x0, #1240]
  409118:	bl	402850 <_exit@plt>
  40911c:	ldr	w1, [x19]
  409120:	mov	x3, x20
  409124:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  409128:	mov	w0, #0x0                   	// #0
  40912c:	add	x2, x2, #0x2b4
  409130:	bl	4028c0 <error@plt>
  409134:	b	409110 <ferror@plt+0x6190>
  409138:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40913c:	ldr	x0, [x0, #1352]
  409140:	bl	40f8a8 <_obstack_memory_used@@Base+0x1c8>
  409144:	cbnz	w0, 409110 <ferror@plt+0x6190>
  409148:	ldp	x19, x20, [sp, #16]
  40914c:	ldp	x21, x22, [sp, #32]
  409150:	ldp	x29, x30, [sp], #48
  409154:	ret
  409158:	mov	x1, #0x2301                	// #8961
  40915c:	str	xzr, [x0, #16]
  409160:	movk	x1, #0x6745, lsl #16
  409164:	str	wzr, [x0, #24]
  409168:	movk	x1, #0xab89, lsl #32
  40916c:	movk	x1, #0xefcd, lsl #48
  409170:	str	x1, [x0]
  409174:	mov	x1, #0xdcfe                	// #56574
  409178:	movk	x1, #0x98ba, lsl #16
  40917c:	movk	x1, #0x5476, lsl #32
  409180:	movk	x1, #0x1032, lsl #48
  409184:	str	x1, [x0, #8]
  409188:	ret
  40918c:	mov	x2, x0
  409190:	mov	x0, x1
  409194:	ldr	w1, [x2]
  409198:	str	w1, [x0]
  40919c:	ldr	w1, [x2, #4]
  4091a0:	str	w1, [x0, #4]
  4091a4:	ldr	w1, [x2, #8]
  4091a8:	str	w1, [x0, #8]
  4091ac:	ldr	w1, [x2, #12]
  4091b0:	str	w1, [x0, #12]
  4091b4:	ret
  4091b8:	stp	x29, x30, [sp, #-112]!
  4091bc:	and	x3, x1, #0xfffffffffffffffc
  4091c0:	add	x3, x0, x3
  4091c4:	mov	x29, sp
  4091c8:	str	x3, [sp, #104]
  4091cc:	ldr	w3, [x2, #16]
  4091d0:	stp	x21, x22, [sp, #32]
  4091d4:	adds	w3, w3, w1
  4091d8:	str	w3, [x2, #16]
  4091dc:	lsr	x1, x1, #32
  4091e0:	ldr	w3, [x2, #20]
  4091e4:	stp	x23, x24, [sp, #48]
  4091e8:	adc	w1, w3, w1
  4091ec:	ldp	w23, w24, [x2, #8]
  4091f0:	stp	x25, x26, [sp, #64]
  4091f4:	ldp	w26, w22, [x2]
  4091f8:	stp	x27, x28, [sp, #80]
  4091fc:	mov	w27, #0xcde6                	// #52710
  409200:	mov	w28, #0x7d6                 	// #2006
  409204:	movk	w27, #0x21e1, lsl #16
  409208:	movk	w28, #0xc337, lsl #16
  40920c:	stp	x19, x20, [sp, #16]
  409210:	str	w1, [x2, #20]
  409214:	mov	w1, #0xa478                	// #42104
  409218:	movk	w1, #0xd76a, lsl #16
  40921c:	add	w5, w26, w1
  409220:	mov	w1, #0xb756                	// #46934
  409224:	movk	w1, #0xe8c7, lsl #16
  409228:	add	w4, w24, w1
  40922c:	mov	w1, #0x70db                	// #28891
  409230:	movk	w1, #0x2420, lsl #16
  409234:	add	w8, w23, w1
  409238:	mov	w1, #0xceee                	// #52974
  40923c:	movk	w1, #0xc1bd, lsl #16
  409240:	add	w10, w22, w1
  409244:	ldr	x1, [sp, #104]
  409248:	cmp	x0, x1
  40924c:	b.cc	409274 <ferror@plt+0x62f4>  // b.lo, b.ul, b.last
  409250:	stp	w26, w22, [x2]
  409254:	stp	w23, w24, [x2, #8]
  409258:	ldp	x19, x20, [sp, #16]
  40925c:	ldp	x21, x22, [sp, #32]
  409260:	ldp	x23, x24, [sp, #48]
  409264:	ldp	x25, x26, [sp, #64]
  409268:	ldp	x27, x28, [sp, #80]
  40926c:	ldp	x29, x30, [sp], #112
  409270:	ret
  409274:	ldp	w14, w7, [x0]
  409278:	eor	w3, w23, w24
  40927c:	and	w3, w3, w22
  409280:	mov	w6, #0xfaf                 	// #4015
  409284:	eor	w3, w3, w24
  409288:	movk	w6, #0xf57c, lsl #16
  40928c:	add	w3, w3, w14
  409290:	ldr	w11, [x0, #20]
  409294:	add	w3, w3, w5
  409298:	ldr	w20, [x0, #36]
  40929c:	ldp	w16, w9, [x0, #8]
  4092a0:	ror	w3, w3, #25
  4092a4:	add	w1, w22, w3
  4092a8:	eor	w3, w22, w23
  4092ac:	and	w3, w3, w1
  4092b0:	mov	w12, #0xffff5bb1            	// #-42063
  4092b4:	eor	w3, w3, w23
  4092b8:	mov	w17, #0xd7be                	// #55230
  4092bc:	add	w3, w3, w7
  4092c0:	movk	w17, #0x895c, lsl #16
  4092c4:	add	w3, w3, w4
  4092c8:	mov	w19, #0x7193                	// #29075
  4092cc:	movk	w19, #0xfd98, lsl #16
  4092d0:	mov	w21, #0x438e                	// #17294
  4092d4:	movk	w21, #0xa679, lsl #16
  4092d8:	ror	w3, w3, #20
  4092dc:	add	w5, w1, w3
  4092e0:	eor	w3, w22, w1
  4092e4:	and	w3, w3, w5
  4092e8:	mov	w25, #0x821                 	// #2081
  4092ec:	eor	w3, w3, w22
  4092f0:	movk	w25, #0x49b4, lsl #16
  4092f4:	add	w3, w3, w16
  4092f8:	add	x0, x0, #0x40
  4092fc:	add	w3, w3, w8
  409300:	ror	w3, w3, #15
  409304:	add	w4, w5, w3
  409308:	eor	w3, w1, w5
  40930c:	and	w3, w3, w4
  409310:	eor	w3, w3, w1
  409314:	add	w3, w3, w9
  409318:	add	w3, w3, w10
  40931c:	ror	w3, w3, #10
  409320:	add	w13, w4, w3
  409324:	eor	w3, w5, w4
  409328:	and	w3, w3, w13
  40932c:	eor	w3, w3, w5
  409330:	add	w3, w3, w1
  409334:	ldur	w1, [x0, #-48]
  409338:	add	w6, w1, w6
  40933c:	add	w3, w6, w3
  409340:	ror	w3, w3, #25
  409344:	add	w6, w13, w3
  409348:	eor	w3, w4, w13
  40934c:	and	w3, w3, w6
  409350:	eor	w3, w3, w4
  409354:	add	w3, w3, w5
  409358:	mov	w5, #0xc62a                	// #50730
  40935c:	movk	w5, #0x4787, lsl #16
  409360:	add	w18, w11, w5
  409364:	add	w3, w18, w3
  409368:	mov	w5, #0x4613                	// #17939
  40936c:	movk	w5, #0xa830, lsl #16
  409370:	ror	w3, w3, #20
  409374:	add	w18, w6, w3
  409378:	eor	w3, w13, w6
  40937c:	and	w3, w3, w18
  409380:	eor	w3, w3, w13
  409384:	add	w3, w3, w4
  409388:	ldur	w4, [x0, #-40]
  40938c:	add	w5, w4, w5
  409390:	add	w5, w5, w3
  409394:	eor	w3, w6, w18
  409398:	ror	w5, w5, #15
  40939c:	add	w8, w18, w5
  4093a0:	mov	w5, #0x9501                	// #38145
  4093a4:	and	w3, w3, w8
  4093a8:	movk	w5, #0xfd46, lsl #16
  4093ac:	eor	w3, w3, w6
  4093b0:	add	w3, w3, w13
  4093b4:	ldur	w13, [x0, #-36]
  4093b8:	add	w5, w13, w5
  4093bc:	add	w5, w5, w3
  4093c0:	eor	w3, w18, w8
  4093c4:	ror	w5, w5, #10
  4093c8:	add	w15, w8, w5
  4093cc:	mov	w5, #0x98d8                	// #39128
  4093d0:	and	w3, w3, w15
  4093d4:	movk	w5, #0x6980, lsl #16
  4093d8:	eor	w3, w3, w18
  4093dc:	add	w3, w3, w6
  4093e0:	ldur	w6, [x0, #-32]
  4093e4:	add	w10, w6, w5
  4093e8:	mov	w5, #0xf7af                	// #63407
  4093ec:	add	w10, w10, w3
  4093f0:	eor	w3, w8, w15
  4093f4:	movk	w5, #0x8b44, lsl #16
  4093f8:	ror	w10, w10, #25
  4093fc:	add	w10, w15, w10
  409400:	and	w3, w3, w10
  409404:	eor	w3, w3, w8
  409408:	add	w3, w3, w18
  40940c:	add	w18, w20, w5
  409410:	add	w3, w18, w3
  409414:	eor	w5, w15, w10
  409418:	ror	w18, w3, #20
  40941c:	add	w3, w10, w18
  409420:	and	w5, w5, w3
  409424:	eor	w5, w5, w15
  409428:	add	w5, w5, w8
  40942c:	ldur	w8, [x0, #-24]
  409430:	add	w12, w8, w12
  409434:	add	w12, w12, w5
  409438:	eor	w5, w10, w3
  40943c:	ror	w12, w12, #15
  409440:	add	w12, w3, w12
  409444:	and	w5, w5, w12
  409448:	eor	w5, w5, w10
  40944c:	add	w5, w5, w15
  409450:	ldur	w15, [x0, #-20]
  409454:	add	w18, w15, w17
  409458:	eor	w17, w3, w12
  40945c:	add	w5, w18, w5
  409460:	ror	w18, w5, #10
  409464:	add	w5, w12, w18
  409468:	mov	w18, #0x1122                	// #4386
  40946c:	and	w17, w17, w5
  409470:	movk	w18, #0x6b90, lsl #16
  409474:	eor	w17, w17, w3
  409478:	add	w17, w17, w10
  40947c:	ldur	w10, [x0, #-16]
  409480:	add	w18, w10, w18
  409484:	add	w17, w18, w17
  409488:	eor	w18, w12, w5
  40948c:	ror	w17, w17, #25
  409490:	add	w17, w5, w17
  409494:	and	w18, w18, w17
  409498:	eor	w18, w18, w12
  40949c:	add	w18, w18, w3
  4094a0:	ldur	w3, [x0, #-12]
  4094a4:	add	w19, w3, w19
  4094a8:	add	w19, w19, w18
  4094ac:	eor	w18, w5, w17
  4094b0:	ror	w19, w19, #20
  4094b4:	add	w19, w17, w19
  4094b8:	and	w18, w18, w19
  4094bc:	eor	w18, w18, w5
  4094c0:	add	w18, w18, w12
  4094c4:	ldur	w12, [x0, #-8]
  4094c8:	add	w21, w12, w21
  4094cc:	add	w21, w21, w18
  4094d0:	eor	w18, w17, w19
  4094d4:	ror	w21, w21, #15
  4094d8:	add	w21, w19, w21
  4094dc:	and	w18, w18, w21
  4094e0:	eor	w18, w18, w17
  4094e4:	add	w18, w18, w5
  4094e8:	ldur	w5, [x0, #-4]
  4094ec:	add	w25, w5, w25
  4094f0:	add	w18, w25, w18
  4094f4:	ror	w18, w18, #10
  4094f8:	add	w18, w21, w18
  4094fc:	eor	w25, w21, w18
  409500:	and	w25, w25, w19
  409504:	eor	w25, w25, w21
  409508:	add	w17, w25, w17
  40950c:	mov	w25, #0x2562                	// #9570
  409510:	movk	w25, #0xf61e, lsl #16
  409514:	add	w25, w7, w25
  409518:	add	w17, w25, w17
  40951c:	ror	w17, w17, #27
  409520:	add	w17, w18, w17
  409524:	eor	w25, w18, w17
  409528:	and	w25, w25, w21
  40952c:	eor	w25, w25, w18
  409530:	add	w19, w25, w19
  409534:	mov	w25, #0xb340                	// #45888
  409538:	movk	w25, #0xc040, lsl #16
  40953c:	add	w25, w4, w25
  409540:	add	w19, w25, w19
  409544:	ror	w19, w19, #23
  409548:	add	w19, w17, w19
  40954c:	eor	w25, w17, w19
  409550:	and	w25, w25, w18
  409554:	eor	w25, w25, w17
  409558:	add	w21, w25, w21
  40955c:	mov	w25, #0x5a51                	// #23121
  409560:	movk	w25, #0x265e, lsl #16
  409564:	add	w25, w15, w25
  409568:	add	w21, w25, w21
  40956c:	ror	w21, w21, #18
  409570:	add	w21, w19, w21
  409574:	eor	w25, w19, w21
  409578:	and	w25, w25, w17
  40957c:	eor	w25, w25, w19
  409580:	add	w18, w25, w18
  409584:	mov	w25, #0xc7aa                	// #51114
  409588:	movk	w25, #0xe9b6, lsl #16
  40958c:	add	w25, w14, w25
  409590:	add	w18, w25, w18
  409594:	ror	w18, w18, #12
  409598:	add	w18, w21, w18
  40959c:	eor	w25, w21, w18
  4095a0:	and	w25, w25, w19
  4095a4:	eor	w25, w25, w21
  4095a8:	add	w17, w25, w17
  4095ac:	mov	w25, #0x105d                	// #4189
  4095b0:	movk	w25, #0xd62f, lsl #16
  4095b4:	add	w25, w11, w25
  4095b8:	add	w17, w25, w17
  4095bc:	ror	w17, w17, #27
  4095c0:	add	w17, w18, w17
  4095c4:	eor	w25, w18, w17
  4095c8:	and	w25, w25, w21
  4095cc:	eor	w25, w25, w18
  4095d0:	add	w19, w25, w19
  4095d4:	mov	w25, #0x1453                	// #5203
  4095d8:	movk	w25, #0x244, lsl #16
  4095dc:	add	w25, w8, w25
  4095e0:	add	w19, w25, w19
  4095e4:	ror	w19, w19, #23
  4095e8:	add	w19, w17, w19
  4095ec:	eor	w25, w17, w19
  4095f0:	and	w25, w25, w18
  4095f4:	eor	w25, w25, w17
  4095f8:	add	w21, w25, w21
  4095fc:	mov	w25, #0xe681                	// #59009
  409600:	movk	w25, #0xd8a1, lsl #16
  409604:	add	w25, w5, w25
  409608:	add	w21, w25, w21
  40960c:	ror	w21, w21, #18
  409610:	add	w21, w19, w21
  409614:	eor	w25, w19, w21
  409618:	and	w25, w25, w17
  40961c:	eor	w25, w25, w19
  409620:	add	w18, w25, w18
  409624:	mov	w25, #0xfbc8                	// #64456
  409628:	movk	w25, #0xe7d3, lsl #16
  40962c:	add	w25, w1, w25
  409630:	add	w18, w25, w18
  409634:	ror	w18, w18, #12
  409638:	add	w18, w21, w18
  40963c:	eor	w25, w21, w18
  409640:	and	w25, w25, w19
  409644:	eor	w25, w25, w21
  409648:	add	w17, w25, w17
  40964c:	add	w25, w20, w27
  409650:	add	w17, w25, w17
  409654:	ror	w17, w17, #27
  409658:	add	w17, w18, w17
  40965c:	eor	w25, w18, w17
  409660:	and	w25, w25, w21
  409664:	eor	w25, w25, w18
  409668:	add	w19, w25, w19
  40966c:	add	w25, w12, w28
  409670:	add	w19, w25, w19
  409674:	ror	w19, w19, #23
  409678:	add	w19, w17, w19
  40967c:	eor	w25, w17, w19
  409680:	and	w25, w25, w18
  409684:	eor	w25, w25, w17
  409688:	add	w21, w25, w21
  40968c:	mov	w25, #0xd87                 	// #3463
  409690:	movk	w25, #0xf4d5, lsl #16
  409694:	add	w25, w9, w25
  409698:	add	w21, w25, w21
  40969c:	ror	w21, w21, #18
  4096a0:	add	w21, w19, w21
  4096a4:	eor	w25, w19, w21
  4096a8:	and	w25, w25, w17
  4096ac:	eor	w25, w25, w19
  4096b0:	add	w18, w25, w18
  4096b4:	mov	w25, #0x14ed                	// #5357
  4096b8:	movk	w25, #0x455a, lsl #16
  4096bc:	add	w25, w6, w25
  4096c0:	add	w18, w25, w18
  4096c4:	ror	w18, w18, #12
  4096c8:	add	w18, w21, w18
  4096cc:	eor	w25, w21, w18
  4096d0:	and	w25, w25, w19
  4096d4:	eor	w25, w25, w21
  4096d8:	add	w17, w25, w17
  4096dc:	mov	w25, #0xe905                	// #59653
  4096e0:	movk	w25, #0xa9e3, lsl #16
  4096e4:	add	w25, w3, w25
  4096e8:	add	w17, w25, w17
  4096ec:	ror	w17, w17, #27
  4096f0:	add	w17, w18, w17
  4096f4:	eor	w25, w18, w17
  4096f8:	and	w25, w25, w21
  4096fc:	eor	w25, w25, w18
  409700:	add	w19, w25, w19
  409704:	mov	w25, #0xa3f8                	// #41976
  409708:	movk	w25, #0xfcef, lsl #16
  40970c:	add	w25, w16, w25
  409710:	add	w19, w25, w19
  409714:	ror	w19, w19, #23
  409718:	add	w19, w17, w19
  40971c:	eor	w25, w17, w19
  409720:	and	w25, w25, w18
  409724:	eor	w25, w25, w17
  409728:	add	w21, w25, w21
  40972c:	mov	w25, #0x2d9                 	// #729
  409730:	movk	w25, #0x676f, lsl #16
  409734:	add	w25, w13, w25
  409738:	add	w21, w25, w21
  40973c:	ror	w21, w21, #18
  409740:	add	w21, w19, w21
  409744:	eor	w25, w19, w21
  409748:	and	w30, w25, w17
  40974c:	eor	w30, w30, w19
  409750:	add	w18, w30, w18
  409754:	mov	w30, #0x4c8a                	// #19594
  409758:	movk	w30, #0x8d2a, lsl #16
  40975c:	add	w30, w10, w30
  409760:	add	w18, w30, w18
  409764:	ror	w18, w18, #12
  409768:	add	w18, w21, w18
  40976c:	eor	w25, w25, w18
  409770:	add	w17, w25, w17
  409774:	sub	w25, w11, #0x5c, lsl #12
  409778:	sub	w25, w25, #0x6be
  40977c:	add	w17, w25, w17
  409780:	eor	w25, w21, w18
  409784:	ror	w17, w17, #28
  409788:	add	w17, w18, w17
  40978c:	eor	w25, w25, w17
  409790:	add	w19, w25, w19
  409794:	mov	w25, #0xf681                	// #63105
  409798:	movk	w25, #0x8771, lsl #16
  40979c:	add	w25, w6, w25
  4097a0:	add	w19, w25, w19
  4097a4:	eor	w25, w18, w17
  4097a8:	ror	w19, w19, #21
  4097ac:	add	w19, w17, w19
  4097b0:	eor	w25, w25, w19
  4097b4:	add	w21, w25, w21
  4097b8:	mov	w25, #0x6122                	// #24866
  4097bc:	movk	w25, #0x6d9d, lsl #16
  4097c0:	add	w25, w15, w25
  4097c4:	add	w21, w25, w21
  4097c8:	eor	w25, w17, w19
  4097cc:	ror	w21, w21, #16
  4097d0:	add	w21, w19, w21
  4097d4:	eor	w25, w25, w21
  4097d8:	add	w18, w25, w18
  4097dc:	mov	w25, #0x380c                	// #14348
  4097e0:	movk	w25, #0xfde5, lsl #16
  4097e4:	add	w25, w12, w25
  4097e8:	add	w25, w25, w18
  4097ec:	eor	w18, w19, w21
  4097f0:	ror	w25, w25, #9
  4097f4:	add	w25, w21, w25
  4097f8:	eor	w18, w18, w25
  4097fc:	add	w17, w18, w17
  409800:	mov	w18, #0xea44                	// #59972
  409804:	movk	w18, #0xa4be, lsl #16
  409808:	add	w18, w7, w18
  40980c:	add	w17, w18, w17
  409810:	eor	w18, w21, w25
  409814:	ror	w17, w17, #28
  409818:	add	w17, w25, w17
  40981c:	eor	w18, w18, w17
  409820:	add	w19, w18, w19
  409824:	mov	w18, #0xcfa9                	// #53161
  409828:	movk	w18, #0x4bde, lsl #16
  40982c:	add	w18, w1, w18
  409830:	add	w19, w18, w19
  409834:	eor	w18, w25, w17
  409838:	ror	w19, w19, #21
  40983c:	add	w19, w17, w19
  409840:	eor	w18, w18, w19
  409844:	add	w21, w18, w21
  409848:	mov	w18, #0x4b60                	// #19296
  40984c:	movk	w18, #0xf6bb, lsl #16
  409850:	add	w18, w13, w18
  409854:	add	w18, w18, w21
  409858:	eor	w21, w17, w19
  40985c:	ror	w18, w18, #16
  409860:	add	w18, w19, w18
  409864:	eor	w21, w21, w18
  409868:	add	w25, w21, w25
  40986c:	mov	w21, #0xbc70                	// #48240
  409870:	movk	w21, #0xbebf, lsl #16
  409874:	add	w21, w8, w21
  409878:	add	w25, w21, w25
  40987c:	eor	w21, w19, w18
  409880:	sub	w8, w8, #0x100, lsl #12
  409884:	sub	w8, w8, #0xb83
  409888:	ror	w25, w25, #9
  40988c:	add	w25, w18, w25
  409890:	eor	w21, w21, w25
  409894:	add	w17, w21, w17
  409898:	mov	w21, #0x7ec6                	// #32454
  40989c:	movk	w21, #0x289b, lsl #16
  4098a0:	add	w21, w3, w21
  4098a4:	add	w21, w21, w17
  4098a8:	eor	w17, w18, w25
  4098ac:	ror	w21, w21, #28
  4098b0:	add	w21, w25, w21
  4098b4:	eor	w17, w17, w21
  4098b8:	add	w19, w17, w19
  4098bc:	mov	w17, #0x27fa                	// #10234
  4098c0:	movk	w17, #0xeaa1, lsl #16
  4098c4:	add	w17, w14, w17
  4098c8:	add	w17, w17, w19
  4098cc:	eor	w19, w25, w21
  4098d0:	ror	w17, w17, #21
  4098d4:	add	w17, w21, w17
  4098d8:	eor	w19, w19, w17
  4098dc:	add	w18, w19, w18
  4098e0:	mov	w19, #0x3085                	// #12421
  4098e4:	movk	w19, #0xd4ef, lsl #16
  4098e8:	add	w19, w9, w19
  4098ec:	add	w19, w19, w18
  4098f0:	eor	w18, w21, w17
  4098f4:	ror	w19, w19, #16
  4098f8:	add	w19, w17, w19
  4098fc:	eor	w18, w18, w19
  409900:	add	w25, w18, w25
  409904:	mov	w18, #0x1d05                	// #7429
  409908:	movk	w18, #0x488, lsl #16
  40990c:	add	w18, w4, w18
  409910:	add	w25, w18, w25
  409914:	eor	w18, w17, w19
  409918:	ror	w25, w25, #9
  40991c:	add	w25, w19, w25
  409920:	eor	w18, w18, w25
  409924:	add	w21, w18, w21
  409928:	mov	w18, #0xd039                	// #53305
  40992c:	movk	w18, #0xd9d4, lsl #16
  409930:	add	w18, w20, w18
  409934:	add	w18, w18, w21
  409938:	eor	w21, w19, w25
  40993c:	ror	w18, w18, #28
  409940:	add	w18, w25, w18
  409944:	eor	w21, w21, w18
  409948:	add	w17, w21, w17
  40994c:	mov	w21, #0x99e5                	// #39397
  409950:	movk	w21, #0xe6db, lsl #16
  409954:	add	w21, w10, w21
  409958:	add	w21, w21, w17
  40995c:	eor	w17, w25, w18
  409960:	ror	w21, w21, #21
  409964:	add	w21, w18, w21
  409968:	eor	w17, w17, w21
  40996c:	add	w19, w17, w19
  409970:	mov	w17, #0x7cf8                	// #31992
  409974:	movk	w17, #0x1fa2, lsl #16
  409978:	add	w17, w5, w17
  40997c:	add	w19, w17, w19
  409980:	eor	w17, w18, w21
  409984:	ror	w19, w19, #16
  409988:	add	w19, w21, w19
  40998c:	eor	w17, w17, w19
  409990:	add	w25, w17, w25
  409994:	mov	w17, #0x5665                	// #22117
  409998:	movk	w17, #0xc4ac, lsl #16
  40999c:	add	w17, w16, w17
  4099a0:	add	w17, w17, w25
  4099a4:	ror	w17, w17, #9
  4099a8:	add	w17, w19, w17
  4099ac:	orn	w25, w17, w21
  4099b0:	eor	w25, w25, w19
  4099b4:	add	w18, w25, w18
  4099b8:	mov	w25, #0x2244                	// #8772
  4099bc:	movk	w25, #0xf429, lsl #16
  4099c0:	add	w14, w14, w25
  4099c4:	add	w18, w14, w18
  4099c8:	ror	w18, w18, #26
  4099cc:	add	w18, w17, w18
  4099d0:	orn	w14, w18, w19
  4099d4:	eor	w14, w14, w17
  4099d8:	add	w21, w14, w21
  4099dc:	mov	w14, #0xff97                	// #65431
  4099e0:	movk	w14, #0x432a, lsl #16
  4099e4:	add	w13, w13, w14
  4099e8:	add	w21, w13, w21
  4099ec:	ror	w21, w21, #22
  4099f0:	add	w21, w18, w21
  4099f4:	orn	w13, w21, w17
  4099f8:	eor	w13, w13, w18
  4099fc:	add	w19, w13, w19
  409a00:	mov	w13, #0x23a7                	// #9127
  409a04:	movk	w13, #0xab94, lsl #16
  409a08:	add	w12, w12, w13
  409a0c:	add	w19, w12, w19
  409a10:	ror	w19, w19, #17
  409a14:	add	w19, w21, w19
  409a18:	orn	w12, w19, w18
  409a1c:	eor	w12, w12, w21
  409a20:	add	w17, w12, w17
  409a24:	mov	w12, #0xa039                	// #41017
  409a28:	movk	w12, #0xfc93, lsl #16
  409a2c:	add	w11, w11, w12
  409a30:	add	w17, w11, w17
  409a34:	ror	w17, w17, #11
  409a38:	add	w17, w19, w17
  409a3c:	orn	w11, w17, w21
  409a40:	eor	w11, w11, w19
  409a44:	add	w18, w11, w18
  409a48:	mov	w11, #0x59c3                	// #22979
  409a4c:	movk	w11, #0x655b, lsl #16
  409a50:	add	w10, w10, w11
  409a54:	add	w18, w10, w18
  409a58:	ror	w18, w18, #26
  409a5c:	add	w18, w17, w18
  409a60:	orn	w10, w18, w19
  409a64:	eor	w10, w10, w17
  409a68:	add	w21, w10, w21
  409a6c:	mov	w10, #0xcc92                	// #52370
  409a70:	movk	w10, #0x8f0c, lsl #16
  409a74:	add	w9, w9, w10
  409a78:	add	w21, w9, w21
  409a7c:	ror	w21, w21, #22
  409a80:	add	w21, w18, w21
  409a84:	orn	w9, w21, w17
  409a88:	eor	w9, w9, w18
  409a8c:	add	w19, w9, w19
  409a90:	add	w8, w8, w19
  409a94:	ror	w8, w8, #17
  409a98:	add	w8, w21, w8
  409a9c:	orn	w9, w8, w18
  409aa0:	eor	w9, w9, w21
  409aa4:	add	w17, w9, w17
  409aa8:	mov	w9, #0x5dd1                	// #24017
  409aac:	movk	w9, #0x8584, lsl #16
  409ab0:	add	w7, w7, w9
  409ab4:	add	w17, w7, w17
  409ab8:	ror	w17, w17, #11
  409abc:	add	w17, w8, w17
  409ac0:	orn	w7, w17, w21
  409ac4:	eor	w7, w7, w8
  409ac8:	add	w18, w7, w18
  409acc:	mov	w7, #0x7e4f                	// #32335
  409ad0:	movk	w7, #0x6fa8, lsl #16
  409ad4:	add	w6, w6, w7
  409ad8:	add	w18, w6, w18
  409adc:	ror	w18, w18, #26
  409ae0:	add	w18, w17, w18
  409ae4:	orn	w6, w18, w8
  409ae8:	eor	w6, w6, w17
  409aec:	add	w21, w6, w21
  409af0:	mov	w6, #0xe6e0                	// #59104
  409af4:	movk	w6, #0xfe2c, lsl #16
  409af8:	add	w5, w5, w6
  409afc:	add	w21, w5, w21
  409b00:	ror	w21, w21, #22
  409b04:	add	w21, w18, w21
  409b08:	orn	w5, w21, w17
  409b0c:	eor	w5, w5, w18
  409b10:	add	w8, w5, w8
  409b14:	mov	w5, #0x4314                	// #17172
  409b18:	movk	w5, #0xa301, lsl #16
  409b1c:	add	w4, w4, w5
  409b20:	add	w8, w4, w8
  409b24:	ror	w8, w8, #17
  409b28:	add	w8, w21, w8
  409b2c:	orn	w4, w8, w18
  409b30:	eor	w4, w4, w21
  409b34:	add	w17, w4, w17
  409b38:	mov	w4, #0x11a1                	// #4513
  409b3c:	movk	w4, #0x4e08, lsl #16
  409b40:	add	w3, w3, w4
  409b44:	add	w17, w3, w17
  409b48:	ror	w17, w17, #11
  409b4c:	add	w17, w8, w17
  409b50:	orn	w3, w17, w21
  409b54:	eor	w3, w3, w8
  409b58:	add	w18, w3, w18
  409b5c:	mov	w3, #0x7e82                	// #32386
  409b60:	movk	w3, #0xf753, lsl #16
  409b64:	add	w1, w1, w3
  409b68:	add	w18, w1, w18
  409b6c:	ror	w18, w18, #26
  409b70:	add	w18, w17, w18
  409b74:	orn	w1, w18, w8
  409b78:	add	w26, w26, w18
  409b7c:	eor	w1, w1, w17
  409b80:	add	w21, w1, w21
  409b84:	mov	w1, #0xf235                	// #62005
  409b88:	movk	w1, #0xbd3a, lsl #16
  409b8c:	add	w15, w15, w1
  409b90:	add	w21, w15, w21
  409b94:	ror	w21, w21, #22
  409b98:	add	w21, w18, w21
  409b9c:	orn	w1, w21, w17
  409ba0:	add	w24, w24, w21
  409ba4:	eor	w1, w1, w18
  409ba8:	add	w8, w1, w8
  409bac:	mov	w1, #0xd2bb                	// #53947
  409bb0:	movk	w1, #0x2ad7, lsl #16
  409bb4:	add	w16, w16, w1
  409bb8:	add	w8, w16, w8
  409bbc:	ror	w8, w8, #17
  409bc0:	add	w8, w21, w8
  409bc4:	orn	w1, w8, w18
  409bc8:	add	w23, w23, w8
  409bcc:	eor	w1, w1, w21
  409bd0:	add	w17, w1, w17
  409bd4:	mov	w1, #0xd391                	// #54161
  409bd8:	movk	w1, #0xeb86, lsl #16
  409bdc:	add	w20, w20, w1
  409be0:	add	w17, w20, w17
  409be4:	ror	w17, w17, #11
  409be8:	add	w17, w8, w17
  409bec:	add	w22, w22, w17
  409bf0:	b	409214 <ferror@plt+0x6294>
  409bf4:	stp	x29, x30, [sp, #-48]!
  409bf8:	mov	x2, #0x10                  	// #16
  409bfc:	mov	x29, sp
  409c00:	stp	x19, x20, [sp, #16]
  409c04:	mov	x19, x0
  409c08:	ldr	w0, [x0, #24]
  409c0c:	stp	x21, x22, [sp, #32]
  409c10:	mov	x20, x1
  409c14:	ldr	w3, [x19, #16]
  409c18:	cmp	w0, #0x38
  409c1c:	mov	x1, #0x20                  	// #32
  409c20:	csel	x2, x2, x1, cc  // cc = lo, ul, last
  409c24:	adds	w3, w3, w0
  409c28:	str	w3, [x19, #16]
  409c2c:	b.cc	409c3c <ferror@plt+0x6cbc>  // b.lo, b.ul, b.last
  409c30:	ldr	w1, [x19, #20]
  409c34:	add	w1, w1, #0x1
  409c38:	str	w1, [x19, #20]
  409c3c:	add	x4, x19, x2, lsl #2
  409c40:	lsl	w1, w3, #3
  409c44:	lsl	x22, x2, #2
  409c48:	sub	x2, x2, #0x2
  409c4c:	add	x21, x19, #0x1c
  409c50:	str	w1, [x4, #20]
  409c54:	lsl	x2, x2, #2
  409c58:	sub	x2, x2, w0, uxtw
  409c5c:	add	x0, x21, w0, uxtw
  409c60:	ldr	w1, [x19, #20]
  409c64:	extr	w3, w1, w3, #29
  409c68:	str	w3, [x4, #24]
  409c6c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  409c70:	add	x1, x1, #0x2c3
  409c74:	bl	402820 <memcpy@plt>
  409c78:	mov	x2, x19
  409c7c:	mov	x1, x22
  409c80:	mov	x0, x21
  409c84:	bl	4091b8 <ferror@plt+0x6238>
  409c88:	mov	x1, x20
  409c8c:	mov	x0, x19
  409c90:	ldp	x19, x20, [sp, #16]
  409c94:	ldp	x21, x22, [sp, #32]
  409c98:	ldp	x29, x30, [sp], #48
  409c9c:	b	40918c <ferror@plt+0x620c>
  409ca0:	stp	x29, x30, [sp, #-64]!
  409ca4:	mov	x29, sp
  409ca8:	stp	x21, x22, [sp, #32]
  409cac:	mov	x21, x0
  409cb0:	ldr	w0, [x2, #24]
  409cb4:	stp	x19, x20, [sp, #16]
  409cb8:	mov	x19, x1
  409cbc:	mov	x20, x2
  409cc0:	stp	x23, x24, [sp, #48]
  409cc4:	cbz	w0, 409d40 <ferror@plt+0x6dc0>
  409cc8:	mov	x22, #0x80                  	// #128
  409ccc:	add	x24, x2, #0x1c
  409cd0:	sub	x22, x22, w0, uxtw
  409cd4:	mov	w23, w0
  409cd8:	cmp	x22, x1
  409cdc:	add	x0, x24, w0, uxtw
  409ce0:	csel	x22, x22, x1, ls  // ls = plast
  409ce4:	mov	x1, x21
  409ce8:	mov	x2, x22
  409cec:	bl	402820 <memcpy@plt>
  409cf0:	ldr	w1, [x20, #24]
  409cf4:	add	w1, w1, w22
  409cf8:	str	w1, [x20, #24]
  409cfc:	cmp	w1, #0x40
  409d00:	b.ls	409d38 <ferror@plt+0x6db8>  // b.plast
  409d04:	mov	x2, x20
  409d08:	and	x1, x1, #0xffffffc0
  409d0c:	mov	x0, x24
  409d10:	bl	4091b8 <ferror@plt+0x6238>
  409d14:	ldr	w2, [x20, #24]
  409d18:	add	x1, x23, x22
  409d1c:	and	x1, x1, #0xffffffffffffffc0
  409d20:	mov	x0, x24
  409d24:	and	w2, w2, #0x3f
  409d28:	str	w2, [x20, #24]
  409d2c:	add	x1, x24, x1
  409d30:	and	x2, x2, #0x3f
  409d34:	bl	402820 <memcpy@plt>
  409d38:	add	x21, x21, x22
  409d3c:	sub	x19, x19, x22
  409d40:	cmp	x19, #0x3f
  409d44:	b.ls	409d6c <ferror@plt+0x6dec>  // b.plast
  409d48:	tst	x21, #0x3
  409d4c:	b.ne	409e2c <ferror@plt+0x6eac>  // b.any
  409d50:	and	x22, x19, #0xffffffffffffffc0
  409d54:	mov	x0, x21
  409d58:	and	x19, x19, #0x3f
  409d5c:	add	x21, x21, x22
  409d60:	mov	x2, x20
  409d64:	mov	x1, x22
  409d68:	bl	4091b8 <ferror@plt+0x6238>
  409d6c:	cbnz	x19, 409ddc <ferror@plt+0x6e5c>
  409d70:	ldp	x19, x20, [sp, #16]
  409d74:	ldp	x21, x22, [sp, #32]
  409d78:	ldp	x23, x24, [sp, #48]
  409d7c:	ldp	x29, x30, [sp], #64
  409d80:	ret
  409d84:	ldp	x2, x3, [x0]
  409d88:	stp	x2, x3, [x22]
  409d8c:	sub	x23, x23, #0x40
  409d90:	ldp	x2, x3, [x0, #16]
  409d94:	stp	x2, x3, [x22, #16]
  409d98:	ldp	x2, x3, [x0, #32]
  409d9c:	stp	x2, x3, [x22, #32]
  409da0:	ldp	x0, x1, [x0, #48]
  409da4:	stp	x0, x1, [x22, #48]
  409da8:	mov	x2, x20
  409dac:	mov	x0, x22
  409db0:	mov	x1, #0x40                  	// #64
  409db4:	bl	4091b8 <ferror@plt+0x6238>
  409db8:	sub	x0, x24, x23
  409dbc:	cmp	x23, #0x40
  409dc0:	b.hi	409d84 <ferror@plt+0x6e04>  // b.pmore
  409dc4:	sub	x0, x19, #0x1
  409dc8:	lsr	x1, x0, #6
  409dcc:	and	x0, x0, #0xffffffffffffffc0
  409dd0:	add	x21, x21, x0
  409dd4:	mov	x0, #0xffffffffffffffc0    	// #-64
  409dd8:	madd	x19, x1, x0, x19
  409ddc:	ldr	w22, [x20, #24]
  409de0:	add	x23, x20, #0x1c
  409de4:	mov	x2, x19
  409de8:	mov	x1, x21
  409dec:	add	x0, x23, x22
  409df0:	add	x19, x22, x19
  409df4:	bl	402820 <memcpy@plt>
  409df8:	cmp	x19, #0x3f
  409dfc:	b.ls	409e24 <ferror@plt+0x6ea4>  // b.plast
  409e00:	mov	x2, x20
  409e04:	mov	x0, x23
  409e08:	mov	x1, #0x40                  	// #64
  409e0c:	sub	x19, x19, #0x40
  409e10:	bl	4091b8 <ferror@plt+0x6238>
  409e14:	mov	x2, x19
  409e18:	add	x1, x20, #0x5c
  409e1c:	mov	x0, x23
  409e20:	bl	402820 <memcpy@plt>
  409e24:	str	w19, [x20, #24]
  409e28:	b	409d70 <ferror@plt+0x6df0>
  409e2c:	mov	x23, x19
  409e30:	add	x24, x21, x19
  409e34:	add	x22, x20, #0x1c
  409e38:	b	409db8 <ferror@plt+0x6e38>
  409e3c:	stp	x29, x30, [sp, #-192]!
  409e40:	mov	x3, x0
  409e44:	mov	x4, x1
  409e48:	mov	x29, sp
  409e4c:	add	x0, sp, #0x20
  409e50:	str	x19, [sp, #16]
  409e54:	mov	x19, x2
  409e58:	bl	409158 <ferror@plt+0x61d8>
  409e5c:	add	x2, sp, #0x20
  409e60:	mov	x1, x4
  409e64:	mov	x0, x3
  409e68:	bl	409ca0 <ferror@plt+0x6d20>
  409e6c:	mov	x1, x19
  409e70:	add	x0, sp, #0x20
  409e74:	bl	409bf4 <ferror@plt+0x6c74>
  409e78:	ldr	x19, [sp, #16]
  409e7c:	ldp	x29, x30, [sp], #192
  409e80:	ret
  409e84:	stp	x29, x30, [sp, #-224]!
  409e88:	mov	x29, sp
  409e8c:	stp	x19, x20, [sp, #16]
  409e90:	stp	x21, x22, [sp, #32]
  409e94:	mov	x21, x0
  409e98:	mov	x22, x1
  409e9c:	mov	x0, #0x8048                	// #32840
  409ea0:	str	x23, [sp, #48]
  409ea4:	bl	402a20 <malloc@plt>
  409ea8:	cbz	x0, 409f04 <ferror@plt+0x6f84>
  409eac:	mov	x23, #0x8000                	// #32768
  409eb0:	mov	x19, x0
  409eb4:	add	x0, sp, #0x40
  409eb8:	bl	409158 <ferror@plt+0x61d8>
  409ebc:	mov	x20, #0x0                   	// #0
  409ec0:	mov	x0, x21
  409ec4:	bl	402d40 <feof_unlocked@plt>
  409ec8:	cbnz	w0, 409f20 <ferror@plt+0x6fa0>
  409ecc:	sub	x2, x23, x20
  409ed0:	add	x0, x19, x20
  409ed4:	mov	x3, x21
  409ed8:	mov	x1, #0x1                   	// #1
  409edc:	bl	402c30 <fread_unlocked@plt>
  409ee0:	add	x20, x20, x0
  409ee4:	cmp	x20, #0x8, lsl #12
  409ee8:	b.eq	409f0c <ferror@plt+0x6f8c>  // b.none
  409eec:	cbnz	x0, 409ec0 <ferror@plt+0x6f40>
  409ef0:	mov	x0, x21
  409ef4:	bl	4028e0 <ferror_unlocked@plt>
  409ef8:	cbz	w0, 409f20 <ferror@plt+0x6fa0>
  409efc:	mov	x0, x19
  409f00:	bl	402ce0 <free@plt>
  409f04:	mov	w0, #0x1                   	// #1
  409f08:	b	409f4c <ferror@plt+0x6fcc>
  409f0c:	add	x2, sp, #0x40
  409f10:	mov	x1, x20
  409f14:	mov	x0, x19
  409f18:	bl	4091b8 <ferror@plt+0x6238>
  409f1c:	b	409ebc <ferror@plt+0x6f3c>
  409f20:	cbz	x20, 409f34 <ferror@plt+0x6fb4>
  409f24:	add	x2, sp, #0x40
  409f28:	mov	x1, x20
  409f2c:	mov	x0, x19
  409f30:	bl	409ca0 <ferror@plt+0x6d20>
  409f34:	mov	x1, x22
  409f38:	add	x0, sp, #0x40
  409f3c:	bl	409bf4 <ferror@plt+0x6c74>
  409f40:	mov	x0, x19
  409f44:	bl	402ce0 <free@plt>
  409f48:	mov	w0, #0x0                   	// #0
  409f4c:	ldp	x19, x20, [sp, #16]
  409f50:	ldp	x21, x22, [sp, #32]
  409f54:	ldr	x23, [sp, #48]
  409f58:	ldp	x29, x30, [sp], #224
  409f5c:	ret
  409f60:	b	402c00 <posix_fadvise@plt>
  409f64:	cbz	x0, 409f94 <ferror@plt+0x7014>
  409f68:	stp	x29, x30, [sp, #-32]!
  409f6c:	mov	x29, sp
  409f70:	str	x19, [sp, #16]
  409f74:	mov	w19, w1
  409f78:	bl	4029b0 <fileno@plt>
  409f7c:	mov	w3, w19
  409f80:	mov	x2, #0x0                   	// #0
  409f84:	ldr	x19, [sp, #16]
  409f88:	mov	x1, #0x0                   	// #0
  409f8c:	ldp	x29, x30, [sp], #32
  409f90:	b	402c00 <posix_fadvise@plt>
  409f94:	ret
  409f98:	stp	x29, x30, [sp, #-48]!
  409f9c:	mov	w1, #0x0                   	// #0
  409fa0:	mov	x29, sp
  409fa4:	stp	x21, x22, [sp, #32]
  409fa8:	mov	x22, x0
  409fac:	stp	x19, x20, [sp, #16]
  409fb0:	mov	x19, #0x0                   	// #0
  409fb4:	ldr	x21, [x22]
  409fb8:	ldrb	w20, [x21]
  409fbc:	cbnz	w20, 409fd4 <ferror@plt+0x7054>
  409fc0:	mov	x0, x19
  409fc4:	ldp	x19, x20, [sp, #16]
  409fc8:	ldp	x21, x22, [sp, #32]
  409fcc:	ldp	x29, x30, [sp], #48
  409fd0:	ret
  409fd4:	cbz	w1, 409ffc <ferror@plt+0x707c>
  409fd8:	mov	w0, w20
  409fdc:	bl	40f738 <_obstack_memory_used@@Base+0x58>
  409fe0:	ands	w1, w0, #0xff
  409fe4:	b.ne	40a020 <ferror@plt+0x70a0>  // b.any
  409fe8:	cmp	w20, #0x7e
  409fec:	csel	x19, x19, xzr, eq  // eq = none
  409ff0:	add	x21, x21, #0x1
  409ff4:	str	x21, [x22]
  409ff8:	b	409fb4 <ferror@plt+0x7034>
  409ffc:	cmp	w20, #0x2e
  40a000:	b.ne	40a014 <ferror@plt+0x7094>  // b.any
  40a004:	cbnz	x19, 40a00c <ferror@plt+0x708c>
  40a008:	mov	x19, x21
  40a00c:	mov	w1, #0x1                   	// #1
  40a010:	b	409ff0 <ferror@plt+0x7070>
  40a014:	mov	w0, w20
  40a018:	bl	40f704 <_obstack_memory_used@@Base+0x24>
  40a01c:	b	409fe0 <ferror@plt+0x7060>
  40a020:	mov	w1, #0x0                   	// #0
  40a024:	b	409ff0 <ferror@plt+0x7070>
  40a028:	stp	x29, x30, [sp, #-32]!
  40a02c:	mov	x29, sp
  40a030:	str	x19, [sp, #16]
  40a034:	and	w19, w0, #0xff
  40a038:	sub	w0, w19, #0x30
  40a03c:	cmp	w0, #0x9
  40a040:	b.ls	40a070 <ferror@plt+0x70f0>  // b.plast
  40a044:	mov	w0, w19
  40a048:	bl	40f738 <_obstack_memory_used@@Base+0x58>
  40a04c:	tst	w0, #0xff
  40a050:	b.ne	40a060 <ferror@plt+0x70e0>  // b.any
  40a054:	add	w0, w19, #0x100
  40a058:	cmp	w19, #0x7e
  40a05c:	csinv	w19, w0, wzr, ne  // ne = any
  40a060:	mov	w0, w19
  40a064:	ldr	x19, [sp, #16]
  40a068:	ldp	x29, x30, [sp], #32
  40a06c:	ret
  40a070:	mov	w19, #0x0                   	// #0
  40a074:	b	40a060 <ferror@plt+0x70e0>
  40a078:	stp	x29, x30, [sp, #-96]!
  40a07c:	mov	x29, sp
  40a080:	stp	x19, x20, [sp, #16]
  40a084:	mov	x19, x0
  40a088:	mov	x20, x1
  40a08c:	stp	x21, x22, [sp, #32]
  40a090:	stp	x23, x24, [sp, #48]
  40a094:	stp	x25, x26, [sp, #64]
  40a098:	bl	402c90 <strcmp@plt>
  40a09c:	mov	w23, w0
  40a0a0:	cbz	w0, 40a0b0 <ferror@plt+0x7130>
  40a0a4:	ldrb	w24, [x19]
  40a0a8:	cbnz	w24, 40a0cc <ferror@plt+0x714c>
  40a0ac:	mov	w23, #0xffffffff            	// #-1
  40a0b0:	mov	w0, w23
  40a0b4:	ldp	x19, x20, [sp, #16]
  40a0b8:	ldp	x21, x22, [sp, #32]
  40a0bc:	ldp	x23, x24, [sp, #48]
  40a0c0:	ldp	x25, x26, [sp, #64]
  40a0c4:	ldp	x29, x30, [sp], #96
  40a0c8:	ret
  40a0cc:	ldrb	w22, [x20]
  40a0d0:	cbnz	w22, 40a0dc <ferror@plt+0x715c>
  40a0d4:	mov	w23, #0x1                   	// #1
  40a0d8:	b	40a0b0 <ferror@plt+0x7130>
  40a0dc:	adrp	x21, 412000 <_obstack_memory_used@@Base+0x2920>
  40a0e0:	add	x21, x21, #0x304
  40a0e4:	mov	x1, x19
  40a0e8:	mov	x0, x21
  40a0ec:	bl	402c90 <strcmp@plt>
  40a0f0:	cbz	w0, 40a0ac <ferror@plt+0x712c>
  40a0f4:	mov	x1, x20
  40a0f8:	mov	x0, x21
  40a0fc:	bl	402c90 <strcmp@plt>
  40a100:	cbz	w0, 40a0d4 <ferror@plt+0x7154>
  40a104:	adrp	x21, 412000 <_obstack_memory_used@@Base+0x2920>
  40a108:	add	x21, x21, #0x303
  40a10c:	mov	x1, x19
  40a110:	mov	x0, x21
  40a114:	bl	402c90 <strcmp@plt>
  40a118:	cbz	w0, 40a0ac <ferror@plt+0x712c>
  40a11c:	mov	x1, x20
  40a120:	mov	x0, x21
  40a124:	bl	402c90 <strcmp@plt>
  40a128:	cbz	w0, 40a0d4 <ferror@plt+0x7154>
  40a12c:	cmp	w24, #0x2e
  40a130:	b.ne	40a148 <ferror@plt+0x71c8>  // b.any
  40a134:	cmp	w22, #0x2e
  40a138:	b.ne	40a0ac <ferror@plt+0x712c>  // b.any
  40a13c:	add	x19, x19, #0x1
  40a140:	add	x20, x20, #0x1
  40a144:	b	40a150 <ferror@plt+0x71d0>
  40a148:	cmp	w22, #0x2e
  40a14c:	b.eq	40a0d4 <ferror@plt+0x7154>  // b.none
  40a150:	add	x0, sp, #0x50
  40a154:	stp	x19, x20, [sp, #80]
  40a158:	bl	409f98 <ferror@plt+0x7018>
  40a15c:	mov	x21, x0
  40a160:	add	x0, sp, #0x58
  40a164:	bl	409f98 <ferror@plt+0x7018>
  40a168:	ldp	x26, x22, [sp, #80]
  40a16c:	cmp	x21, #0x0
  40a170:	csel	x24, x26, x21, eq  // eq = none
  40a174:	cmp	x0, #0x0
  40a178:	csel	x25, x22, x0, eq  // eq = none
  40a17c:	sub	x24, x24, x19
  40a180:	sub	x25, x25, x20
  40a184:	orr	x21, x21, x0
  40a188:	cbz	x21, 40a1b0 <ferror@plt+0x7230>
  40a18c:	cmp	x24, x25
  40a190:	b.ne	40a1b0 <ferror@plt+0x7230>  // b.any
  40a194:	mov	x2, x24
  40a198:	mov	x1, x20
  40a19c:	mov	x0, x19
  40a1a0:	bl	402a90 <strncmp@plt>
  40a1a4:	cbnz	w0, 40a1b0 <ferror@plt+0x7230>
  40a1a8:	sub	x24, x26, x19
  40a1ac:	sub	x25, x22, x20
  40a1b0:	mov	x22, #0x0                   	// #0
  40a1b4:	mov	x21, #0x0                   	// #0
  40a1b8:	cmp	x24, x21
  40a1bc:	ccmp	x25, x22, #0x2, ls  // ls = plast
  40a1c0:	b.hi	40a1ec <ferror@plt+0x726c>  // b.pmore
  40a1c4:	b	40a0b0 <ferror@plt+0x7130>
  40a1c8:	mov	w26, #0x0                   	// #0
  40a1cc:	ldrb	w0, [x20, x22]
  40a1d0:	bl	40a028 <ferror@plt+0x70a8>
  40a1d4:	cmp	w0, w26
  40a1d8:	b.eq	40a1e4 <ferror@plt+0x7264>  // b.none
  40a1dc:	sub	w23, w26, w0
  40a1e0:	b	40a0b0 <ferror@plt+0x7130>
  40a1e4:	add	x21, x21, #0x1
  40a1e8:	add	x22, x22, #0x1
  40a1ec:	cmp	x24, x21
  40a1f0:	b.ls	40a204 <ferror@plt+0x7284>  // b.plast
  40a1f4:	ldrb	w0, [x19, x21]
  40a1f8:	sub	w0, w0, #0x30
  40a1fc:	cmp	w0, #0x9
  40a200:	b.hi	40a224 <ferror@plt+0x72a4>  // b.pmore
  40a204:	ldrb	w0, [x20, x22]
  40a208:	cmp	x25, x22
  40a20c:	b.ls	40a244 <ferror@plt+0x72c4>  // b.plast
  40a210:	sub	w0, w0, #0x30
  40a214:	cmp	w0, #0x9
  40a218:	b.ls	40a244 <ferror@plt+0x72c4>  // b.plast
  40a21c:	cmp	x24, x21
  40a220:	b.eq	40a1c8 <ferror@plt+0x7248>  // b.none
  40a224:	ldrb	w0, [x19, x21]
  40a228:	bl	40a028 <ferror@plt+0x70a8>
  40a22c:	mov	w26, w0
  40a230:	cmp	x25, x22
  40a234:	b.ne	40a1cc <ferror@plt+0x724c>  // b.any
  40a238:	mov	w0, #0x0                   	// #0
  40a23c:	b	40a1d4 <ferror@plt+0x7254>
  40a240:	add	x21, x21, #0x1
  40a244:	ldrb	w0, [x19, x21]
  40a248:	cmp	w0, #0x30
  40a24c:	b.eq	40a240 <ferror@plt+0x72c0>  // b.none
  40a250:	ldrb	w0, [x20, x22]
  40a254:	cmp	w0, #0x30
  40a258:	b.eq	40a294 <ferror@plt+0x7314>  // b.none
  40a25c:	mov	w0, #0x0                   	// #0
  40a260:	ldrb	w2, [x19, x21]
  40a264:	ldrb	w3, [x20, x22]
  40a268:	sub	w4, w2, #0x30
  40a26c:	sub	w1, w3, #0x30
  40a270:	cmp	w4, #0x9
  40a274:	b.hi	40a29c <ferror@plt+0x731c>  // b.pmore
  40a278:	cmp	w1, #0x9
  40a27c:	b.hi	40a0d4 <ferror@plt+0x7154>  // b.pmore
  40a280:	cbnz	w0, 40a288 <ferror@plt+0x7308>
  40a284:	sub	w0, w2, w3
  40a288:	add	x21, x21, #0x1
  40a28c:	add	x22, x22, #0x1
  40a290:	b	40a260 <ferror@plt+0x72e0>
  40a294:	add	x22, x22, #0x1
  40a298:	b	40a250 <ferror@plt+0x72d0>
  40a29c:	cmp	w1, #0x9
  40a2a0:	b.ls	40a0ac <ferror@plt+0x712c>  // b.plast
  40a2a4:	cbz	w0, 40a1b8 <ferror@plt+0x7238>
  40a2a8:	mov	w23, w0
  40a2ac:	b	40a0b0 <ferror@plt+0x7130>
  40a2b0:	stp	x29, x30, [sp, #-32]!
  40a2b4:	mov	x1, #0x0                   	// #0
  40a2b8:	mov	x29, sp
  40a2bc:	str	x19, [sp, #16]
  40a2c0:	bl	402f70 <setlocale@plt>
  40a2c4:	cbz	x0, 40a300 <ferror@plt+0x7380>
  40a2c8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0x1920>
  40a2cc:	mov	x19, x0
  40a2d0:	add	x1, x1, #0xb6b
  40a2d4:	bl	402c90 <strcmp@plt>
  40a2d8:	cbz	w0, 40a308 <ferror@plt+0x7388>
  40a2dc:	mov	x0, x19
  40a2e0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40a2e4:	add	x1, x1, #0x306
  40a2e8:	bl	402c90 <strcmp@plt>
  40a2ec:	cmp	w0, #0x0
  40a2f0:	cset	w0, ne  // ne = any
  40a2f4:	ldr	x19, [sp, #16]
  40a2f8:	ldp	x29, x30, [sp], #32
  40a2fc:	ret
  40a300:	mov	w0, #0x1                   	// #1
  40a304:	b	40a2f4 <ferror@plt+0x7374>
  40a308:	mov	w0, #0x0                   	// #0
  40a30c:	b	40a2f4 <ferror@plt+0x7374>
  40a310:	ror	x2, x0, #3
  40a314:	udiv	x0, x2, x1
  40a318:	msub	x0, x0, x1, x2
  40a31c:	ret
  40a320:	cmp	x1, x0
  40a324:	cset	w0, eq  // eq = none
  40a328:	ret
  40a32c:	ldrb	w2, [x1, #16]
  40a330:	cbnz	w2, 40a354 <ferror@plt+0x73d4>
  40a334:	ucvtf	s0, x0
  40a338:	ldr	s1, [x1, #8]
  40a33c:	mov	w0, #0x5f800000            	// #1602224128
  40a340:	fdiv	s0, s0, s1
  40a344:	fmov	s1, w0
  40a348:	fcmpe	s0, s1
  40a34c:	b.ge	40a36c <ferror@plt+0x73ec>  // b.tcont
  40a350:	fcvtzu	x0, s0
  40a354:	cmp	x0, #0xa
  40a358:	mov	x1, #0xa                   	// #10
  40a35c:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40a360:	orr	x0, x0, #0x1
  40a364:	cmn	x0, #0x1
  40a368:	b.ne	40a39c <ferror@plt+0x741c>  // b.any
  40a36c:	mov	x0, #0x0                   	// #0
  40a370:	b	40a3bc <ferror@plt+0x743c>
  40a374:	add	x2, x1, #0x1
  40a378:	add	x1, x1, #0x2
  40a37c:	add	x3, x3, x2, lsl #2
  40a380:	udiv	x2, x0, x1
  40a384:	cmp	x0, x3
  40a388:	msub	x2, x2, x1, x0
  40a38c:	b.ls	40a3a8 <ferror@plt+0x7428>  // b.plast
  40a390:	cbnz	x2, 40a374 <ferror@plt+0x73f4>
  40a394:	add	x0, x0, #0x2
  40a398:	b	40a364 <ferror@plt+0x73e4>
  40a39c:	mov	x3, #0x9                   	// #9
  40a3a0:	mov	x1, #0x3                   	// #3
  40a3a4:	b	40a380 <ferror@plt+0x7400>
  40a3a8:	cbz	x2, 40a394 <ferror@plt+0x7414>
  40a3ac:	cmp	xzr, x0, lsr #61
  40a3b0:	cset	x1, ne  // ne = any
  40a3b4:	tbnz	x0, #60, 40a36c <ferror@plt+0x73ec>
  40a3b8:	cbnz	x1, 40a36c <ferror@plt+0x73ec>
  40a3bc:	ret
  40a3c0:	stp	x29, x30, [sp, #-32]!
  40a3c4:	mov	x29, sp
  40a3c8:	str	x19, [sp, #16]
  40a3cc:	mov	x19, x0
  40a3d0:	mov	x0, x1
  40a3d4:	ldr	x1, [x19, #16]
  40a3d8:	ldr	x2, [x19, #48]
  40a3dc:	blr	x2
  40a3e0:	ldr	x1, [x19, #16]
  40a3e4:	cmp	x1, x0
  40a3e8:	b.hi	40a3f0 <ferror@plt+0x7470>  // b.pmore
  40a3ec:	bl	402bd0 <abort@plt>
  40a3f0:	ldr	x1, [x19]
  40a3f4:	ldr	x19, [sp, #16]
  40a3f8:	add	x0, x1, x0, lsl #4
  40a3fc:	ldp	x29, x30, [sp], #32
  40a400:	ret
  40a404:	stp	x29, x30, [sp, #-64]!
  40a408:	mov	x29, sp
  40a40c:	stp	x21, x22, [sp, #32]
  40a410:	mov	x22, x2
  40a414:	mov	x21, x1
  40a418:	stp	x19, x20, [sp, #16]
  40a41c:	mov	x20, x0
  40a420:	str	x23, [sp, #48]
  40a424:	and	w23, w3, #0xff
  40a428:	bl	40a3c0 <ferror@plt+0x7440>
  40a42c:	str	x0, [x22]
  40a430:	ldr	x1, [x0]
  40a434:	cbnz	x1, 40a450 <ferror@plt+0x74d0>
  40a438:	mov	x0, #0x0                   	// #0
  40a43c:	ldp	x19, x20, [sp, #16]
  40a440:	ldp	x21, x22, [sp, #32]
  40a444:	ldr	x23, [sp, #48]
  40a448:	ldp	x29, x30, [sp], #64
  40a44c:	ret
  40a450:	mov	x19, x0
  40a454:	cmp	x1, x21
  40a458:	b.eq	40a470 <ferror@plt+0x74f0>  // b.none
  40a45c:	ldr	x2, [x20, #56]
  40a460:	mov	x0, x21
  40a464:	blr	x2
  40a468:	tst	w0, #0xff
  40a46c:	b.eq	40a4bc <ferror@plt+0x753c>  // b.none
  40a470:	ldr	x0, [x19]
  40a474:	cbz	w23, 40a43c <ferror@plt+0x74bc>
  40a478:	ldr	x1, [x19, #8]
  40a47c:	cbz	x1, 40a49c <ferror@plt+0x751c>
  40a480:	ldp	x2, x3, [x1]
  40a484:	stp	x2, x3, [x19]
  40a488:	str	xzr, [x1]
  40a48c:	ldr	x2, [x20, #72]
  40a490:	str	x2, [x1, #8]
  40a494:	str	x1, [x20, #72]
  40a498:	b	40a43c <ferror@plt+0x74bc>
  40a49c:	str	xzr, [x19]
  40a4a0:	b	40a43c <ferror@plt+0x74bc>
  40a4a4:	ldr	x2, [x20, #56]
  40a4a8:	mov	x0, x21
  40a4ac:	blr	x2
  40a4b0:	tst	w0, #0xff
  40a4b4:	b.ne	40a4d0 <ferror@plt+0x7550>  // b.any
  40a4b8:	ldr	x19, [x19, #8]
  40a4bc:	ldr	x0, [x19, #8]
  40a4c0:	cbz	x0, 40a438 <ferror@plt+0x74b8>
  40a4c4:	ldr	x1, [x0]
  40a4c8:	cmp	x1, x21
  40a4cc:	b.ne	40a4a4 <ferror@plt+0x7524>  // b.any
  40a4d0:	ldr	x1, [x19, #8]
  40a4d4:	ldr	x0, [x1]
  40a4d8:	cbz	w23, 40a43c <ferror@plt+0x74bc>
  40a4dc:	ldr	x2, [x1, #8]
  40a4e0:	str	x2, [x19, #8]
  40a4e4:	b	40a488 <ferror@plt+0x7508>
  40a4e8:	ldr	x1, [x0]
  40a4ec:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40a4f0:	add	x2, x2, #0x37c
  40a4f4:	cmp	x1, x2
  40a4f8:	b.eq	40a578 <ferror@plt+0x75f8>  // b.none
  40a4fc:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x2920>
  40a500:	ldr	s1, [x1, #8]
  40a504:	ldr	s2, [x3, #888]
  40a508:	fcmpe	s1, s2
  40a50c:	b.le	40a56c <ferror@plt+0x75ec>
  40a510:	mov	w3, #0x6666                	// #26214
  40a514:	movk	w3, #0x3f66, lsl #16
  40a518:	fmov	s0, w3
  40a51c:	fcmpe	s1, s0
  40a520:	b.pl	40a56c <ferror@plt+0x75ec>  // b.nfrst
  40a524:	mov	w3, #0xcccd                	// #52429
  40a528:	ldr	s3, [x1, #12]
  40a52c:	movk	w3, #0x3f8c, lsl #16
  40a530:	fmov	s0, w3
  40a534:	fcmpe	s3, s0
  40a538:	b.le	40a56c <ferror@plt+0x75ec>
  40a53c:	ldr	s0, [x1]
  40a540:	fcmpe	s0, #0.0
  40a544:	b.lt	40a56c <ferror@plt+0x75ec>  // b.tstop
  40a548:	fadd	s0, s0, s2
  40a54c:	ldr	s2, [x1, #4]
  40a550:	fcmpe	s0, s2
  40a554:	b.pl	40a56c <ferror@plt+0x75ec>  // b.nfrst
  40a558:	fmov	s3, #1.000000000000000000e+00
  40a55c:	fcmpe	s2, s3
  40a560:	b.hi	40a56c <ferror@plt+0x75ec>  // b.pmore
  40a564:	fcmpe	s1, s0
  40a568:	b.gt	40a578 <ferror@plt+0x75f8>
  40a56c:	str	x2, [x0]
  40a570:	mov	w0, #0x0                   	// #0
  40a574:	ret
  40a578:	mov	w0, #0x1                   	// #1
  40a57c:	b	40a574 <ferror@plt+0x75f4>
  40a580:	stp	x29, x30, [sp, #-64]!
  40a584:	mov	x29, sp
  40a588:	stp	x21, x22, [sp, #32]
  40a58c:	mov	x22, x1
  40a590:	ldr	x21, [x1]
  40a594:	stp	x19, x20, [sp, #16]
  40a598:	mov	x19, x0
  40a59c:	stp	x23, x24, [sp, #48]
  40a5a0:	and	w23, w2, #0xff
  40a5a4:	ldr	x0, [x22, #8]
  40a5a8:	cmp	x0, x21
  40a5ac:	b.hi	40a5b8 <ferror@plt+0x7638>  // b.pmore
  40a5b0:	mov	w23, #0x1                   	// #1
  40a5b4:	b	40a680 <ferror@plt+0x7700>
  40a5b8:	ldr	x0, [x21]
  40a5bc:	cbz	x0, 40a618 <ferror@plt+0x7698>
  40a5c0:	ldr	x20, [x21, #8]
  40a5c4:	cbnz	x20, 40a620 <ferror@plt+0x76a0>
  40a5c8:	str	xzr, [x21, #8]
  40a5cc:	ldr	x24, [x21]
  40a5d0:	cbnz	w23, 40a618 <ferror@plt+0x7698>
  40a5d4:	mov	x1, x24
  40a5d8:	mov	x0, x19
  40a5dc:	bl	40a3c0 <ferror@plt+0x7440>
  40a5e0:	mov	x20, x0
  40a5e4:	ldr	x0, [x0]
  40a5e8:	cbz	x0, 40a698 <ferror@plt+0x7718>
  40a5ec:	ldr	x0, [x19, #72]
  40a5f0:	cbz	x0, 40a674 <ferror@plt+0x76f4>
  40a5f4:	ldr	x1, [x0, #8]
  40a5f8:	str	x1, [x19, #72]
  40a5fc:	ldr	x1, [x20, #8]
  40a600:	stp	x24, x1, [x0]
  40a604:	str	x0, [x20, #8]
  40a608:	ldr	x0, [x22, #24]
  40a60c:	str	xzr, [x21]
  40a610:	sub	x0, x0, #0x1
  40a614:	str	x0, [x22, #24]
  40a618:	add	x21, x21, #0x10
  40a61c:	b	40a5a4 <ferror@plt+0x7624>
  40a620:	ldr	x24, [x20]
  40a624:	mov	x0, x19
  40a628:	mov	x1, x24
  40a62c:	bl	40a3c0 <ferror@plt+0x7440>
  40a630:	ldr	x2, [x0]
  40a634:	ldr	x1, [x20, #8]
  40a638:	cbz	x2, 40a650 <ferror@plt+0x76d0>
  40a63c:	ldr	x2, [x0, #8]
  40a640:	str	x2, [x20, #8]
  40a644:	str	x20, [x0, #8]
  40a648:	mov	x20, x1
  40a64c:	b	40a5c4 <ferror@plt+0x7644>
  40a650:	str	x24, [x0]
  40a654:	ldr	x0, [x19, #24]
  40a658:	add	x0, x0, #0x1
  40a65c:	str	x0, [x19, #24]
  40a660:	str	xzr, [x20]
  40a664:	ldr	x0, [x19, #72]
  40a668:	str	x0, [x20, #8]
  40a66c:	str	x20, [x19, #72]
  40a670:	b	40a648 <ferror@plt+0x76c8>
  40a674:	mov	x0, #0x10                  	// #16
  40a678:	bl	402a20 <malloc@plt>
  40a67c:	cbnz	x0, 40a5fc <ferror@plt+0x767c>
  40a680:	mov	w0, w23
  40a684:	ldp	x19, x20, [sp, #16]
  40a688:	ldp	x21, x22, [sp, #32]
  40a68c:	ldp	x23, x24, [sp, #48]
  40a690:	ldp	x29, x30, [sp], #64
  40a694:	ret
  40a698:	ldr	x0, [x19, #24]
  40a69c:	str	x24, [x20]
  40a6a0:	add	x0, x0, #0x1
  40a6a4:	str	x0, [x19, #24]
  40a6a8:	b	40a608 <ferror@plt+0x7688>
  40a6ac:	ldr	x0, [x0, #16]
  40a6b0:	ret
  40a6b4:	ldr	x0, [x0, #24]
  40a6b8:	ret
  40a6bc:	ldr	x0, [x0, #32]
  40a6c0:	ret
  40a6c4:	ldp	x1, x4, [x0]
  40a6c8:	mov	x0, #0x0                   	// #0
  40a6cc:	cmp	x4, x1
  40a6d0:	b.hi	40a6d8 <ferror@plt+0x7758>  // b.pmore
  40a6d4:	ret
  40a6d8:	ldr	x2, [x1]
  40a6dc:	cbz	x2, 40a700 <ferror@plt+0x7780>
  40a6e0:	mov	x3, x1
  40a6e4:	mov	x2, #0x1                   	// #1
  40a6e8:	b	40a6f0 <ferror@plt+0x7770>
  40a6ec:	add	x2, x2, #0x1
  40a6f0:	ldr	x3, [x3, #8]
  40a6f4:	cbnz	x3, 40a6ec <ferror@plt+0x776c>
  40a6f8:	cmp	x0, x2
  40a6fc:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40a700:	add	x1, x1, #0x10
  40a704:	b	40a6cc <ferror@plt+0x774c>
  40a708:	ldp	x2, x5, [x0]
  40a70c:	mov	x1, #0x0                   	// #0
  40a710:	mov	x3, #0x0                   	// #0
  40a714:	cmp	x5, x2
  40a718:	b.hi	40a738 <ferror@plt+0x77b8>  // b.pmore
  40a71c:	ldr	x2, [x0, #24]
  40a720:	cmp	x2, x3
  40a724:	b.ne	40a764 <ferror@plt+0x77e4>  // b.any
  40a728:	ldr	x0, [x0, #32]
  40a72c:	cmp	x0, x1
  40a730:	cset	w0, eq  // eq = none
  40a734:	ret
  40a738:	ldr	x4, [x2]
  40a73c:	cbz	x4, 40a754 <ferror@plt+0x77d4>
  40a740:	add	x3, x3, #0x1
  40a744:	add	x1, x1, #0x1
  40a748:	mov	x4, x2
  40a74c:	ldr	x4, [x4, #8]
  40a750:	cbnz	x4, 40a75c <ferror@plt+0x77dc>
  40a754:	add	x2, x2, #0x10
  40a758:	b	40a714 <ferror@plt+0x7794>
  40a75c:	add	x1, x1, #0x1
  40a760:	b	40a74c <ferror@plt+0x77cc>
  40a764:	mov	w0, #0x0                   	// #0
  40a768:	b	40a734 <ferror@plt+0x77b4>
  40a76c:	stp	x29, x30, [sp, #-48]!
  40a770:	mov	x5, x0
  40a774:	mov	x29, sp
  40a778:	stp	x19, x20, [sp, #16]
  40a77c:	mov	x19, x1
  40a780:	stp	x21, x22, [sp, #32]
  40a784:	ldp	x20, x22, [x0, #16]
  40a788:	bl	40a6c4 <ferror@plt+0x7744>
  40a78c:	ldr	x3, [x5, #32]
  40a790:	mov	x21, x0
  40a794:	mov	w1, #0x1                   	// #1
  40a798:	mov	x0, x19
  40a79c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40a7a0:	add	x2, x2, #0x30c
  40a7a4:	bl	402c70 <__fprintf_chk@plt>
  40a7a8:	mov	x3, x20
  40a7ac:	mov	x0, x19
  40a7b0:	mov	w1, #0x1                   	// #1
  40a7b4:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40a7b8:	add	x2, x2, #0x324
  40a7bc:	bl	402c70 <__fprintf_chk@plt>
  40a7c0:	ucvtf	d1, x22
  40a7c4:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40a7c8:	fmov	d0, x0
  40a7cc:	mov	x3, x22
  40a7d0:	mov	x0, x19
  40a7d4:	mov	w1, #0x1                   	// #1
  40a7d8:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40a7dc:	add	x2, x2, #0x33c
  40a7e0:	fmul	d1, d1, d0
  40a7e4:	ucvtf	d0, x20
  40a7e8:	fdiv	d0, d1, d0
  40a7ec:	bl	402c70 <__fprintf_chk@plt>
  40a7f0:	mov	x3, x21
  40a7f4:	mov	x0, x19
  40a7f8:	ldp	x19, x20, [sp, #16]
  40a7fc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40a800:	ldp	x21, x22, [sp, #32]
  40a804:	add	x2, x2, #0x35d
  40a808:	ldp	x29, x30, [sp], #48
  40a80c:	mov	w1, #0x1                   	// #1
  40a810:	b	402c70 <__fprintf_chk@plt>
  40a814:	stp	x29, x30, [sp, #-48]!
  40a818:	mov	x29, sp
  40a81c:	stp	x19, x20, [sp, #16]
  40a820:	mov	x20, x1
  40a824:	str	x21, [sp, #32]
  40a828:	mov	x21, x0
  40a82c:	bl	40a3c0 <ferror@plt+0x7440>
  40a830:	mov	x19, x0
  40a834:	ldr	x0, [x0]
  40a838:	cbz	x0, 40a878 <ferror@plt+0x78f8>
  40a83c:	ldr	x1, [x19]
  40a840:	cmp	x1, x20
  40a844:	b.ne	40a85c <ferror@plt+0x78dc>  // b.any
  40a848:	ldr	x0, [x19]
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldr	x21, [sp, #32]
  40a854:	ldp	x29, x30, [sp], #48
  40a858:	ret
  40a85c:	ldr	x2, [x21, #56]
  40a860:	mov	x0, x20
  40a864:	blr	x2
  40a868:	tst	w0, #0xff
  40a86c:	b.ne	40a848 <ferror@plt+0x78c8>  // b.any
  40a870:	ldr	x19, [x19, #8]
  40a874:	cbnz	x19, 40a83c <ferror@plt+0x78bc>
  40a878:	mov	x0, #0x0                   	// #0
  40a87c:	b	40a84c <ferror@plt+0x78cc>
  40a880:	ldr	x1, [x0, #32]
  40a884:	cbz	x1, 40a8b0 <ferror@plt+0x7930>
  40a888:	ldp	x1, x2, [x0]
  40a88c:	cmp	x2, x1
  40a890:	b.hi	40a8a0 <ferror@plt+0x7920>  // b.pmore
  40a894:	stp	x29, x30, [sp, #-16]!
  40a898:	mov	x29, sp
  40a89c:	bl	402bd0 <abort@plt>
  40a8a0:	ldr	x0, [x1]
  40a8a4:	cbnz	x0, 40a8b4 <ferror@plt+0x7934>
  40a8a8:	add	x1, x1, #0x10
  40a8ac:	b	40a88c <ferror@plt+0x790c>
  40a8b0:	mov	x0, #0x0                   	// #0
  40a8b4:	ret
  40a8b8:	stp	x29, x30, [sp, #-32]!
  40a8bc:	mov	x29, sp
  40a8c0:	stp	x19, x20, [sp, #16]
  40a8c4:	mov	x19, x0
  40a8c8:	mov	x20, x1
  40a8cc:	bl	40a3c0 <ferror@plt+0x7440>
  40a8d0:	mov	x2, x0
  40a8d4:	mov	x3, x0
  40a8d8:	ldp	x0, x3, [x3]
  40a8dc:	cmp	x0, x20
  40a8e0:	b.ne	40a8f8 <ferror@plt+0x7978>  // b.any
  40a8e4:	cbz	x3, 40a8fc <ferror@plt+0x797c>
  40a8e8:	ldr	x0, [x3]
  40a8ec:	ldp	x19, x20, [sp, #16]
  40a8f0:	ldp	x29, x30, [sp], #32
  40a8f4:	ret
  40a8f8:	cbnz	x3, 40a8d8 <ferror@plt+0x7958>
  40a8fc:	ldr	x1, [x19, #8]
  40a900:	add	x2, x2, #0x10
  40a904:	cmp	x1, x2
  40a908:	b.hi	40a914 <ferror@plt+0x7994>  // b.pmore
  40a90c:	mov	x0, #0x0                   	// #0
  40a910:	b	40a8ec <ferror@plt+0x796c>
  40a914:	ldr	x0, [x2]
  40a918:	cbz	x0, 40a900 <ferror@plt+0x7980>
  40a91c:	b	40a8ec <ferror@plt+0x796c>
  40a920:	mov	x4, x0
  40a924:	sub	x1, x1, #0x8
  40a928:	mov	x0, #0x0                   	// #0
  40a92c:	ldr	x3, [x4]
  40a930:	ldr	x5, [x4, #8]
  40a934:	cmp	x5, x3
  40a938:	b.hi	40a940 <ferror@plt+0x79c0>  // b.pmore
  40a93c:	ret
  40a940:	ldr	x5, [x3]
  40a944:	cbz	x5, 40a968 <ferror@plt+0x79e8>
  40a948:	mov	x5, x3
  40a94c:	cmp	x2, x0
  40a950:	b.ls	40a93c <ferror@plt+0x79bc>  // b.plast
  40a954:	add	x0, x0, #0x1
  40a958:	ldr	x6, [x5]
  40a95c:	str	x6, [x1, x0, lsl #3]
  40a960:	ldr	x5, [x5, #8]
  40a964:	cbnz	x5, 40a94c <ferror@plt+0x79cc>
  40a968:	add	x3, x3, #0x10
  40a96c:	b	40a930 <ferror@plt+0x79b0>
  40a970:	stp	x29, x30, [sp, #-64]!
  40a974:	mov	x29, sp
  40a978:	stp	x19, x20, [sp, #16]
  40a97c:	mov	x20, x0
  40a980:	ldr	x19, [x0]
  40a984:	stp	x23, x24, [sp, #48]
  40a988:	mov	x23, x1
  40a98c:	mov	x24, x2
  40a990:	stp	x21, x22, [sp, #32]
  40a994:	mov	x22, #0x0                   	// #0
  40a998:	ldr	x0, [x20, #8]
  40a99c:	cmp	x0, x19
  40a9a0:	b.hi	40a9bc <ferror@plt+0x7a3c>  // b.pmore
  40a9a4:	mov	x0, x22
  40a9a8:	ldp	x19, x20, [sp, #16]
  40a9ac:	ldp	x21, x22, [sp, #32]
  40a9b0:	ldp	x23, x24, [sp, #48]
  40a9b4:	ldp	x29, x30, [sp], #64
  40a9b8:	ret
  40a9bc:	ldr	x0, [x19]
  40a9c0:	cbz	x0, 40a9e8 <ferror@plt+0x7a68>
  40a9c4:	mov	x21, x19
  40a9c8:	ldr	x0, [x21]
  40a9cc:	mov	x1, x24
  40a9d0:	blr	x23
  40a9d4:	tst	w0, #0xff
  40a9d8:	b.eq	40a9a4 <ferror@plt+0x7a24>  // b.none
  40a9dc:	ldr	x21, [x21, #8]
  40a9e0:	add	x22, x22, #0x1
  40a9e4:	cbnz	x21, 40a9c8 <ferror@plt+0x7a48>
  40a9e8:	add	x19, x19, #0x10
  40a9ec:	b	40a998 <ferror@plt+0x7a18>
  40a9f0:	mov	x3, x0
  40a9f4:	mov	x4, #0x1f                  	// #31
  40a9f8:	mov	x0, #0x0                   	// #0
  40a9fc:	ldrb	w2, [x3]
  40aa00:	cbnz	w2, 40aa08 <ferror@plt+0x7a88>
  40aa04:	ret
  40aa08:	and	x2, x2, #0xff
  40aa0c:	add	x3, x3, #0x1
  40aa10:	madd	x2, x0, x4, x2
  40aa14:	udiv	x0, x2, x1
  40aa18:	msub	x0, x0, x1, x2
  40aa1c:	b	40a9fc <ferror@plt+0x7a7c>
  40aa20:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40aa24:	add	x1, x1, #0x37c
  40aa28:	ldp	x2, x3, [x1]
  40aa2c:	stp	x2, x3, [x0]
  40aa30:	ldr	w1, [x1, #16]
  40aa34:	str	w1, [x0, #16]
  40aa38:	ret
  40aa3c:	stp	x29, x30, [sp, #-64]!
  40aa40:	mov	x29, sp
  40aa44:	stp	x19, x20, [sp, #16]
  40aa48:	mov	x20, x1
  40aa4c:	stp	x21, x22, [sp, #32]
  40aa50:	mov	x21, x3
  40aa54:	stp	x23, x24, [sp, #48]
  40aa58:	mov	x24, x0
  40aa5c:	mov	x23, x4
  40aa60:	cbnz	x2, 40aafc <ferror@plt+0x7b7c>
  40aa64:	adrp	x22, 40a000 <ferror@plt+0x7080>
  40aa68:	add	x22, x22, #0x310
  40aa6c:	cbnz	x21, 40aa78 <ferror@plt+0x7af8>
  40aa70:	adrp	x21, 40a000 <ferror@plt+0x7080>
  40aa74:	add	x21, x21, #0x320
  40aa78:	mov	x0, #0x50                  	// #80
  40aa7c:	bl	402a20 <malloc@plt>
  40aa80:	mov	x19, x0
  40aa84:	cbz	x0, 40aae4 <ferror@plt+0x7b64>
  40aa88:	cbnz	x20, 40aa94 <ferror@plt+0x7b14>
  40aa8c:	adrp	x20, 412000 <_obstack_memory_used@@Base+0x2920>
  40aa90:	add	x20, x20, #0x37c
  40aa94:	mov	x0, x19
  40aa98:	str	x20, [x0, #40]!
  40aa9c:	bl	40a4e8 <ferror@plt+0x7568>
  40aaa0:	tst	w0, #0xff
  40aaa4:	b.eq	40ab04 <ferror@plt+0x7b84>  // b.none
  40aaa8:	mov	x1, x20
  40aaac:	mov	x0, x24
  40aab0:	bl	40a32c <ferror@plt+0x73ac>
  40aab4:	str	x0, [x19, #16]
  40aab8:	mov	x20, x0
  40aabc:	cbz	x0, 40ab04 <ferror@plt+0x7b84>
  40aac0:	mov	x1, #0x10                  	// #16
  40aac4:	bl	402b20 <calloc@plt>
  40aac8:	str	x0, [x19]
  40aacc:	cbz	x0, 40ab04 <ferror@plt+0x7b84>
  40aad0:	add	x20, x0, x20, lsl #4
  40aad4:	str	x20, [x19, #8]
  40aad8:	stp	xzr, xzr, [x19, #24]
  40aadc:	stp	x22, x21, [x19, #48]
  40aae0:	stp	x23, xzr, [x19, #64]
  40aae4:	mov	x0, x19
  40aae8:	ldp	x19, x20, [sp, #16]
  40aaec:	ldp	x21, x22, [sp, #32]
  40aaf0:	ldp	x23, x24, [sp, #48]
  40aaf4:	ldp	x29, x30, [sp], #64
  40aaf8:	ret
  40aafc:	mov	x22, x2
  40ab00:	b	40aa6c <ferror@plt+0x7aec>
  40ab04:	mov	x0, x19
  40ab08:	mov	x19, #0x0                   	// #0
  40ab0c:	bl	402ce0 <free@plt>
  40ab10:	b	40aae4 <ferror@plt+0x7b64>
  40ab14:	stp	x29, x30, [sp, #-48]!
  40ab18:	mov	x29, sp
  40ab1c:	stp	x19, x20, [sp, #16]
  40ab20:	mov	x19, x0
  40ab24:	ldr	x20, [x0]
  40ab28:	str	x21, [sp, #32]
  40ab2c:	ldr	x0, [x19, #8]
  40ab30:	cmp	x0, x20
  40ab34:	b.hi	40ab4c <ferror@plt+0x7bcc>  // b.pmore
  40ab38:	ldr	x21, [sp, #32]
  40ab3c:	stp	xzr, xzr, [x19, #24]
  40ab40:	ldp	x19, x20, [sp, #16]
  40ab44:	ldp	x29, x30, [sp], #48
  40ab48:	ret
  40ab4c:	ldr	x0, [x20]
  40ab50:	cbz	x0, 40ab70 <ferror@plt+0x7bf0>
  40ab54:	ldr	x21, [x20, #8]
  40ab58:	ldr	x1, [x19, #64]
  40ab5c:	cbnz	x21, 40ab78 <ferror@plt+0x7bf8>
  40ab60:	cbz	x1, 40ab6c <ferror@plt+0x7bec>
  40ab64:	ldr	x0, [x20]
  40ab68:	blr	x1
  40ab6c:	stp	xzr, xzr, [x20]
  40ab70:	add	x20, x20, #0x10
  40ab74:	b	40ab2c <ferror@plt+0x7bac>
  40ab78:	cbz	x1, 40ab84 <ferror@plt+0x7c04>
  40ab7c:	ldr	x0, [x21]
  40ab80:	blr	x1
  40ab84:	ldr	x0, [x21, #8]
  40ab88:	ldr	x1, [x19, #72]
  40ab8c:	stp	xzr, x1, [x21]
  40ab90:	str	x21, [x19, #72]
  40ab94:	mov	x21, x0
  40ab98:	b	40ab58 <ferror@plt+0x7bd8>
  40ab9c:	stp	x29, x30, [sp, #-48]!
  40aba0:	mov	x29, sp
  40aba4:	stp	x19, x20, [sp, #16]
  40aba8:	mov	x19, x0
  40abac:	ldr	x0, [x0, #64]
  40abb0:	str	x21, [sp, #32]
  40abb4:	cbnz	x0, 40abec <ferror@plt+0x7c6c>
  40abb8:	ldr	x20, [x19]
  40abbc:	ldr	x0, [x19, #8]
  40abc0:	cmp	x0, x20
  40abc4:	b.hi	40ac30 <ferror@plt+0x7cb0>  // b.pmore
  40abc8:	ldr	x0, [x19, #72]
  40abcc:	cbnz	x0, 40ac50 <ferror@plt+0x7cd0>
  40abd0:	ldr	x0, [x19]
  40abd4:	bl	402ce0 <free@plt>
  40abd8:	mov	x0, x19
  40abdc:	ldp	x19, x20, [sp, #16]
  40abe0:	ldr	x21, [sp, #32]
  40abe4:	ldp	x29, x30, [sp], #48
  40abe8:	b	402ce0 <free@plt>
  40abec:	ldr	x0, [x19, #32]
  40abf0:	cbz	x0, 40abb8 <ferror@plt+0x7c38>
  40abf4:	ldr	x20, [x19]
  40abf8:	ldr	x0, [x19, #8]
  40abfc:	cmp	x0, x20
  40ac00:	b.ls	40abb8 <ferror@plt+0x7c38>  // b.plast
  40ac04:	ldr	x0, [x20]
  40ac08:	cbnz	x0, 40ac14 <ferror@plt+0x7c94>
  40ac0c:	add	x20, x20, #0x10
  40ac10:	b	40abf8 <ferror@plt+0x7c78>
  40ac14:	mov	x21, x20
  40ac18:	ldr	x0, [x21]
  40ac1c:	ldr	x1, [x19, #64]
  40ac20:	blr	x1
  40ac24:	ldr	x21, [x21, #8]
  40ac28:	cbnz	x21, 40ac18 <ferror@plt+0x7c98>
  40ac2c:	b	40ac0c <ferror@plt+0x7c8c>
  40ac30:	ldr	x0, [x20, #8]
  40ac34:	cbnz	x0, 40ac40 <ferror@plt+0x7cc0>
  40ac38:	add	x20, x20, #0x10
  40ac3c:	b	40abbc <ferror@plt+0x7c3c>
  40ac40:	ldr	x21, [x0, #8]
  40ac44:	bl	402ce0 <free@plt>
  40ac48:	mov	x0, x21
  40ac4c:	b	40ac34 <ferror@plt+0x7cb4>
  40ac50:	ldr	x20, [x0, #8]
  40ac54:	bl	402ce0 <free@plt>
  40ac58:	mov	x0, x20
  40ac5c:	b	40abcc <ferror@plt+0x7c4c>
  40ac60:	stp	x29, x30, [sp, #-128]!
  40ac64:	mov	x29, sp
  40ac68:	stp	x19, x20, [sp, #16]
  40ac6c:	mov	x19, x0
  40ac70:	mov	x0, x1
  40ac74:	str	x21, [sp, #32]
  40ac78:	ldr	x21, [x19, #40]
  40ac7c:	mov	x1, x21
  40ac80:	bl	40a32c <ferror@plt+0x73ac>
  40ac84:	cbnz	x0, 40aca0 <ferror@plt+0x7d20>
  40ac88:	mov	w20, #0x0                   	// #0
  40ac8c:	mov	w0, w20
  40ac90:	ldp	x19, x20, [sp, #16]
  40ac94:	ldr	x21, [sp, #32]
  40ac98:	ldp	x29, x30, [sp], #128
  40ac9c:	ret
  40aca0:	ldr	x1, [x19, #16]
  40aca4:	mov	x20, x0
  40aca8:	cmp	x1, x0
  40acac:	b.eq	40ad84 <ferror@plt+0x7e04>  // b.none
  40acb0:	mov	x1, #0x10                  	// #16
  40acb4:	bl	402b20 <calloc@plt>
  40acb8:	str	x0, [sp, #48]
  40acbc:	cbz	x0, 40ac88 <ferror@plt+0x7d08>
  40acc0:	stp	x20, xzr, [sp, #64]
  40acc4:	add	x20, x0, x20, lsl #4
  40acc8:	mov	x1, x19
  40accc:	ldr	x0, [x19, #48]
  40acd0:	str	x0, [sp, #96]
  40acd4:	ldr	x0, [x19, #56]
  40acd8:	str	x0, [sp, #104]
  40acdc:	ldr	x0, [x19, #64]
  40ace0:	str	x0, [sp, #112]
  40ace4:	ldr	x0, [x19, #72]
  40ace8:	mov	w2, #0x0                   	// #0
  40acec:	str	x20, [sp, #56]
  40acf0:	stp	xzr, x21, [sp, #80]
  40acf4:	str	x0, [sp, #120]
  40acf8:	add	x0, sp, #0x30
  40acfc:	bl	40a580 <ferror@plt+0x7600>
  40ad00:	ands	w20, w0, #0xff
  40ad04:	b.eq	40ad3c <ferror@plt+0x7dbc>  // b.none
  40ad08:	ldr	x0, [x19]
  40ad0c:	bl	402ce0 <free@plt>
  40ad10:	ldr	x0, [sp, #48]
  40ad14:	str	x0, [x19]
  40ad18:	ldr	x0, [sp, #56]
  40ad1c:	str	x0, [x19, #8]
  40ad20:	ldr	x0, [sp, #64]
  40ad24:	str	x0, [x19, #16]
  40ad28:	ldr	x0, [sp, #72]
  40ad2c:	str	x0, [x19, #24]
  40ad30:	ldr	x0, [sp, #120]
  40ad34:	str	x0, [x19, #72]
  40ad38:	b	40ac8c <ferror@plt+0x7d0c>
  40ad3c:	ldr	x0, [sp, #120]
  40ad40:	str	x0, [x19, #72]
  40ad44:	add	x1, sp, #0x30
  40ad48:	mov	x0, x19
  40ad4c:	mov	w2, #0x1                   	// #1
  40ad50:	bl	40a580 <ferror@plt+0x7600>
  40ad54:	tst	w0, #0xff
  40ad58:	b.ne	40ad60 <ferror@plt+0x7de0>  // b.any
  40ad5c:	bl	402bd0 <abort@plt>
  40ad60:	add	x1, sp, #0x30
  40ad64:	mov	x0, x19
  40ad68:	mov	w2, #0x0                   	// #0
  40ad6c:	bl	40a580 <ferror@plt+0x7600>
  40ad70:	tst	w0, #0xff
  40ad74:	b.eq	40ad5c <ferror@plt+0x7ddc>  // b.none
  40ad78:	ldr	x0, [sp, #48]
  40ad7c:	bl	402ce0 <free@plt>
  40ad80:	b	40ac8c <ferror@plt+0x7d0c>
  40ad84:	mov	w20, #0x1                   	// #1
  40ad88:	b	40ac8c <ferror@plt+0x7d0c>
  40ad8c:	stp	x29, x30, [sp, #-64]!
  40ad90:	mov	x29, sp
  40ad94:	stp	x19, x20, [sp, #16]
  40ad98:	str	x21, [sp, #32]
  40ad9c:	cbnz	x1, 40ada4 <ferror@plt+0x7e24>
  40ada0:	bl	402bd0 <abort@plt>
  40ada4:	mov	x21, x2
  40ada8:	mov	x19, x0
  40adac:	mov	x20, x1
  40adb0:	add	x2, sp, #0x38
  40adb4:	mov	w3, #0x0                   	// #0
  40adb8:	bl	40a404 <ferror@plt+0x7484>
  40adbc:	cbz	x0, 40add0 <ferror@plt+0x7e50>
  40adc0:	cbz	x21, 40adc8 <ferror@plt+0x7e48>
  40adc4:	str	x0, [x21]
  40adc8:	mov	w0, #0x0                   	// #0
  40adcc:	b	40ae48 <ferror@plt+0x7ec8>
  40add0:	ldr	x0, [x19, #24]
  40add4:	ldr	x1, [x19, #40]
  40add8:	ucvtf	s1, x0
  40addc:	ldr	x0, [x19, #16]
  40ade0:	ldr	s2, [x1, #8]
  40ade4:	ucvtf	s0, x0
  40ade8:	fmul	s0, s0, s2
  40adec:	fcmpe	s1, s0
  40adf0:	b.le	40ae84 <ferror@plt+0x7f04>
  40adf4:	add	x0, x19, #0x28
  40adf8:	bl	40a4e8 <ferror@plt+0x7568>
  40adfc:	ldr	x0, [x19, #16]
  40ae00:	ldr	x1, [x19, #40]
  40ae04:	ucvtf	s0, x0
  40ae08:	ldr	x0, [x19, #24]
  40ae0c:	ldr	s2, [x1, #8]
  40ae10:	ucvtf	s1, x0
  40ae14:	fmul	s3, s2, s0
  40ae18:	fcmpe	s1, s3
  40ae1c:	b.le	40ae84 <ferror@plt+0x7f04>
  40ae20:	ldrb	w0, [x1, #16]
  40ae24:	ldr	s1, [x1, #12]
  40ae28:	fmul	s0, s0, s1
  40ae2c:	cbnz	w0, 40ae34 <ferror@plt+0x7eb4>
  40ae30:	fmul	s0, s0, s2
  40ae34:	mov	w0, #0x5f800000            	// #1602224128
  40ae38:	fmov	s1, w0
  40ae3c:	fcmpe	s0, s1
  40ae40:	b.lt	40ae58 <ferror@plt+0x7ed8>  // b.tstop
  40ae44:	mov	w0, #0xffffffff            	// #-1
  40ae48:	ldp	x19, x20, [sp, #16]
  40ae4c:	ldr	x21, [sp, #32]
  40ae50:	ldp	x29, x30, [sp], #64
  40ae54:	ret
  40ae58:	fcvtzu	x1, s0
  40ae5c:	mov	x0, x19
  40ae60:	bl	40ac60 <ferror@plt+0x7ce0>
  40ae64:	tst	w0, #0xff
  40ae68:	b.eq	40ae44 <ferror@plt+0x7ec4>  // b.none
  40ae6c:	add	x2, sp, #0x38
  40ae70:	mov	x1, x20
  40ae74:	mov	x0, x19
  40ae78:	mov	w3, #0x0                   	// #0
  40ae7c:	bl	40a404 <ferror@plt+0x7484>
  40ae80:	cbnz	x0, 40ada0 <ferror@plt+0x7e20>
  40ae84:	ldr	x21, [sp, #56]
  40ae88:	ldr	x0, [x21]
  40ae8c:	cbz	x0, 40aed0 <ferror@plt+0x7f50>
  40ae90:	ldr	x0, [x19, #72]
  40ae94:	cbz	x0, 40aec0 <ferror@plt+0x7f40>
  40ae98:	ldr	x1, [x0, #8]
  40ae9c:	str	x1, [x19, #72]
  40aea0:	ldr	x1, [x21, #8]
  40aea4:	stp	x20, x1, [x0]
  40aea8:	str	x0, [x21, #8]
  40aeac:	ldr	x0, [x19, #32]
  40aeb0:	add	x0, x0, #0x1
  40aeb4:	str	x0, [x19, #32]
  40aeb8:	mov	w0, #0x1                   	// #1
  40aebc:	b	40ae48 <ferror@plt+0x7ec8>
  40aec0:	mov	x0, #0x10                  	// #16
  40aec4:	bl	402a20 <malloc@plt>
  40aec8:	cbz	x0, 40ae44 <ferror@plt+0x7ec4>
  40aecc:	b	40aea0 <ferror@plt+0x7f20>
  40aed0:	ldr	x0, [x19, #32]
  40aed4:	str	x20, [x21]
  40aed8:	add	x0, x0, #0x1
  40aedc:	str	x0, [x19, #32]
  40aee0:	ldr	x0, [x19, #24]
  40aee4:	add	x0, x0, #0x1
  40aee8:	str	x0, [x19, #24]
  40aeec:	b	40aeb8 <ferror@plt+0x7f38>
  40aef0:	stp	x29, x30, [sp, #-48]!
  40aef4:	mov	x29, sp
  40aef8:	add	x2, sp, #0x28
  40aefc:	str	x19, [sp, #16]
  40af00:	mov	x19, x1
  40af04:	bl	40ad8c <ferror@plt+0x7e0c>
  40af08:	cmn	w0, #0x1
  40af0c:	b.eq	40af28 <ferror@plt+0x7fa8>  // b.none
  40af10:	cbnz	w0, 40af18 <ferror@plt+0x7f98>
  40af14:	ldr	x19, [sp, #40]
  40af18:	mov	x0, x19
  40af1c:	ldr	x19, [sp, #16]
  40af20:	ldp	x29, x30, [sp], #48
  40af24:	ret
  40af28:	mov	x19, #0x0                   	// #0
  40af2c:	b	40af18 <ferror@plt+0x7f98>
  40af30:	stp	x29, x30, [sp, #-64]!
  40af34:	mov	w3, #0x1                   	// #1
  40af38:	mov	x29, sp
  40af3c:	add	x2, sp, #0x38
  40af40:	stp	x19, x20, [sp, #16]
  40af44:	mov	x19, x0
  40af48:	str	x21, [sp, #32]
  40af4c:	bl	40a404 <ferror@plt+0x7484>
  40af50:	mov	x20, x0
  40af54:	cbz	x0, 40aff8 <ferror@plt+0x8078>
  40af58:	ldr	x0, [x19, #32]
  40af5c:	sub	x0, x0, #0x1
  40af60:	str	x0, [x19, #32]
  40af64:	ldr	x0, [sp, #56]
  40af68:	ldr	x0, [x0]
  40af6c:	cbnz	x0, 40aff8 <ferror@plt+0x8078>
  40af70:	ldr	x1, [x19, #24]
  40af74:	ldr	x0, [x19, #40]
  40af78:	sub	x1, x1, #0x1
  40af7c:	ucvtf	s0, x1
  40af80:	ldr	s2, [x0]
  40af84:	str	x1, [x19, #24]
  40af88:	ldr	x1, [x19, #16]
  40af8c:	ucvtf	s1, x1
  40af90:	fmul	s1, s1, s2
  40af94:	fcmpe	s0, s1
  40af98:	b.pl	40aff8 <ferror@plt+0x8078>  // b.nfrst
  40af9c:	add	x0, x19, #0x28
  40afa0:	bl	40a4e8 <ferror@plt+0x7568>
  40afa4:	ldr	x1, [x19, #16]
  40afa8:	ldr	x0, [x19, #40]
  40afac:	ucvtf	s0, x1
  40afb0:	ldr	x1, [x19, #24]
  40afb4:	ldr	s1, [x0]
  40afb8:	ucvtf	s2, x1
  40afbc:	fmul	s1, s0, s1
  40afc0:	fcmpe	s2, s1
  40afc4:	b.pl	40aff8 <ferror@plt+0x8078>  // b.nfrst
  40afc8:	ldrb	w1, [x0, #16]
  40afcc:	ldr	s1, [x0, #4]
  40afd0:	fmul	s0, s0, s1
  40afd4:	cbz	w1, 40b00c <ferror@plt+0x808c>
  40afd8:	fcvtzu	x1, s0
  40afdc:	mov	x0, x19
  40afe0:	bl	40ac60 <ferror@plt+0x7ce0>
  40afe4:	tst	w0, #0xff
  40afe8:	b.ne	40aff8 <ferror@plt+0x8078>  // b.any
  40afec:	ldr	x0, [x19, #72]
  40aff0:	cbnz	x0, 40b018 <ferror@plt+0x8098>
  40aff4:	str	xzr, [x19, #72]
  40aff8:	mov	x0, x20
  40affc:	ldp	x19, x20, [sp, #16]
  40b000:	ldr	x21, [sp, #32]
  40b004:	ldp	x29, x30, [sp], #64
  40b008:	ret
  40b00c:	ldr	s1, [x0, #8]
  40b010:	fmul	s0, s0, s1
  40b014:	b	40afd8 <ferror@plt+0x8058>
  40b018:	ldr	x21, [x0, #8]
  40b01c:	bl	402ce0 <free@plt>
  40b020:	mov	x0, x21
  40b024:	b	40aff0 <ferror@plt+0x8070>
  40b028:	mov	w0, #0x0                   	// #0
  40b02c:	ret
  40b030:	stp	x29, x30, [sp, #-48]!
  40b034:	mov	x29, sp
  40b038:	stp	x19, x20, [sp, #16]
  40b03c:	mov	x20, x0
  40b040:	mov	x0, #0x20                  	// #32
  40b044:	str	x21, [sp, #32]
  40b048:	mov	x21, x1
  40b04c:	bl	40e344 <ferror@plt+0xb3c4>
  40b050:	mov	x19, x0
  40b054:	cmp	x21, #0x0
  40b058:	mov	x1, #0x8                   	// #8
  40b05c:	csinc	x21, x21, xzr, ne  // ne = any
  40b060:	mov	x0, x21
  40b064:	bl	40e374 <ferror@plt+0xb3f4>
  40b068:	str	xzr, [x0]
  40b06c:	stp	x0, x21, [x19]
  40b070:	str	xzr, [x19, #16]
  40b074:	cbnz	x20, 40b080 <ferror@plt+0x8100>
  40b078:	adrp	x20, 40b000 <ferror@plt+0x8080>
  40b07c:	add	x20, x20, #0x28
  40b080:	mov	x0, x19
  40b084:	str	x20, [x19, #24]
  40b088:	ldp	x19, x20, [sp, #16]
  40b08c:	ldr	x21, [sp, #32]
  40b090:	ldp	x29, x30, [sp], #48
  40b094:	ret
  40b098:	stp	x29, x30, [sp, #-32]!
  40b09c:	mov	x29, sp
  40b0a0:	str	x19, [sp, #16]
  40b0a4:	mov	x19, x0
  40b0a8:	ldr	x0, [x0]
  40b0ac:	bl	402ce0 <free@plt>
  40b0b0:	mov	x0, x19
  40b0b4:	ldr	x19, [sp, #16]
  40b0b8:	ldp	x29, x30, [sp], #32
  40b0bc:	b	402ce0 <free@plt>
  40b0c0:	stp	x29, x30, [sp, #-64]!
  40b0c4:	mov	x29, sp
  40b0c8:	stp	x19, x20, [sp, #16]
  40b0cc:	mov	x19, x0
  40b0d0:	ldr	x0, [x0, #8]
  40b0d4:	stp	x21, x22, [sp, #32]
  40b0d8:	mov	x21, x1
  40b0dc:	ldr	x1, [x19, #16]
  40b0e0:	stp	x23, x24, [sp, #48]
  40b0e4:	sub	x0, x0, #0x1
  40b0e8:	cmp	x0, x1
  40b0ec:	b.hi	40b104 <ferror@plt+0x8184>  // b.pmore
  40b0f0:	ldr	x0, [x19]
  40b0f4:	mov	x2, #0x8                   	// #8
  40b0f8:	add	x1, x19, x2
  40b0fc:	bl	40e414 <ferror@plt+0xb494>
  40b100:	str	x0, [x19]
  40b104:	ldr	x20, [x19, #16]
  40b108:	ldr	x1, [x19]
  40b10c:	add	x20, x20, #0x1
  40b110:	str	x20, [x19, #16]
  40b114:	lsl	x0, x20, #3
  40b118:	str	x21, [x1, x0]
  40b11c:	ldr	x21, [x19]
  40b120:	ldr	x24, [x19, #24]
  40b124:	ldr	x19, [x21, x0]
  40b128:	cmp	x20, #0x1
  40b12c:	b.eq	40b150 <ferror@plt+0x81d0>  // b.none
  40b130:	lsr	x23, x20, #1
  40b134:	mov	x1, x19
  40b138:	lsl	x22, x23, #3
  40b13c:	ldr	x0, [x21, x22]
  40b140:	blr	x24
  40b144:	cmp	w0, #0x0
  40b148:	lsl	x1, x20, #3
  40b14c:	b.le	40b16c <ferror@plt+0x81ec>
  40b150:	str	x19, [x21, x20, lsl #3]
  40b154:	mov	w0, #0x0                   	// #0
  40b158:	ldp	x19, x20, [sp, #16]
  40b15c:	ldp	x21, x22, [sp, #32]
  40b160:	ldp	x23, x24, [sp, #48]
  40b164:	ldp	x29, x30, [sp], #64
  40b168:	ret
  40b16c:	ldr	x0, [x21, x22]
  40b170:	mov	x20, x23
  40b174:	str	x0, [x21, x1]
  40b178:	b	40b128 <ferror@plt+0x81a8>
  40b17c:	stp	x29, x30, [sp, #-96]!
  40b180:	mov	x29, sp
  40b184:	ldr	x2, [x0, #16]
  40b188:	stp	x19, x20, [sp, #16]
  40b18c:	stp	x21, x22, [sp, #32]
  40b190:	stp	x23, x24, [sp, #48]
  40b194:	stp	x25, x26, [sp, #64]
  40b198:	str	x27, [sp, #80]
  40b19c:	cbz	x2, 40b24c <ferror@plt+0x82cc>
  40b1a0:	ldr	x1, [x0]
  40b1a4:	sub	x22, x2, #0x1
  40b1a8:	mov	x20, #0x1                   	// #1
  40b1ac:	lsr	x26, x22, #1
  40b1b0:	ldr	x2, [x1, x2, lsl #3]
  40b1b4:	ldr	x23, [x1, #8]
  40b1b8:	str	x22, [x0, #16]
  40b1bc:	str	x2, [x1, #8]
  40b1c0:	ldr	x19, [x0]
  40b1c4:	ldr	x25, [x0, #24]
  40b1c8:	ldr	x24, [x19, #8]
  40b1cc:	cmp	x20, x26
  40b1d0:	b.hi	40b218 <ferror@plt+0x8298>  // b.pmore
  40b1d4:	lsl	x21, x20, #1
  40b1d8:	cmp	x22, x20, lsl #1
  40b1dc:	b.ls	40b1fc <ferror@plt+0x827c>  // b.plast
  40b1e0:	add	x27, x21, #0x1
  40b1e4:	lsl	x0, x20, #4
  40b1e8:	ldr	x1, [x19, x27, lsl #3]
  40b1ec:	ldr	x0, [x19, x0]
  40b1f0:	blr	x25
  40b1f4:	cmp	w0, #0x0
  40b1f8:	csel	x21, x21, x27, ge  // ge = tcont
  40b1fc:	lsl	x27, x21, #3
  40b200:	mov	x1, x24
  40b204:	ldr	x0, [x19, x27]
  40b208:	blr	x25
  40b20c:	cmp	w0, #0x0
  40b210:	lsl	x1, x20, #3
  40b214:	b.gt	40b23c <ferror@plt+0x82bc>
  40b218:	str	x24, [x19, x20, lsl #3]
  40b21c:	mov	x0, x23
  40b220:	ldp	x19, x20, [sp, #16]
  40b224:	ldp	x21, x22, [sp, #32]
  40b228:	ldp	x23, x24, [sp, #48]
  40b22c:	ldp	x25, x26, [sp, #64]
  40b230:	ldr	x27, [sp, #80]
  40b234:	ldp	x29, x30, [sp], #96
  40b238:	ret
  40b23c:	ldr	x0, [x19, x27]
  40b240:	mov	x20, x21
  40b244:	str	x0, [x19, x1]
  40b248:	b	40b1cc <ferror@plt+0x824c>
  40b24c:	mov	x23, #0x0                   	// #0
  40b250:	b	40b21c <ferror@plt+0x829c>
  40b254:	strb	wzr, [x1, #11]
  40b258:	mov	w2, w0
  40b25c:	mov	w3, #0xa                   	// #10
  40b260:	add	x0, x1, #0xb
  40b264:	tbnz	w2, #31, 40b284 <ferror@plt+0x8304>
  40b268:	udiv	w1, w2, w3
  40b26c:	msub	w2, w1, w3, w2
  40b270:	add	w2, w2, #0x30
  40b274:	strb	w2, [x0, #-1]!
  40b278:	mov	w2, w1
  40b27c:	cbnz	w1, 40b268 <ferror@plt+0x82e8>
  40b280:	b	40b2b0 <ferror@plt+0x8330>
  40b284:	mov	w5, #0x30                  	// #48
  40b288:	sdiv	w1, w2, w3
  40b28c:	mov	x4, x0
  40b290:	msub	w2, w1, w3, w2
  40b294:	sub	w2, w5, w2
  40b298:	strb	w2, [x0, #-1]!
  40b29c:	mov	w2, w1
  40b2a0:	cbnz	w1, 40b288 <ferror@plt+0x8308>
  40b2a4:	mov	w1, #0x2d                  	// #45
  40b2a8:	sturb	w1, [x0, #-1]
  40b2ac:	sub	x0, x4, #0x2
  40b2b0:	ret
  40b2b4:	mov	w2, w0
  40b2b8:	add	x0, x1, #0xa
  40b2bc:	mov	w4, #0xa                   	// #10
  40b2c0:	strb	wzr, [x1, #10]
  40b2c4:	udiv	w3, w2, w4
  40b2c8:	msub	w1, w3, w4, w2
  40b2cc:	add	w1, w1, #0x30
  40b2d0:	strb	w1, [x0, #-1]!
  40b2d4:	mov	w1, w2
  40b2d8:	mov	w2, w3
  40b2dc:	cmp	w1, #0x9
  40b2e0:	b.hi	40b2c4 <ferror@plt+0x8344>  // b.pmore
  40b2e4:	ret
  40b2e8:	mov	x2, x0
  40b2ec:	add	x0, x1, #0x14
  40b2f0:	mov	x4, #0xa                   	// #10
  40b2f4:	strb	wzr, [x1, #20]
  40b2f8:	udiv	x3, x2, x4
  40b2fc:	msub	x1, x3, x4, x2
  40b300:	add	w1, w1, #0x30
  40b304:	strb	w1, [x0, #-1]!
  40b308:	mov	x1, x2
  40b30c:	mov	x2, x3
  40b310:	cmp	x1, #0x9
  40b314:	b.hi	40b2f8 <ferror@plt+0x8378>  // b.pmore
  40b318:	ret
  40b31c:	stp	x29, x30, [sp, #-96]!
  40b320:	mov	x29, sp
  40b324:	stp	x19, x20, [sp, #16]
  40b328:	mov	x20, x0
  40b32c:	mov	w19, #0x0                   	// #0
  40b330:	stp	x21, x22, [sp, #32]
  40b334:	mov	w21, w2
  40b338:	add	x22, x0, x1
  40b33c:	stp	x23, x24, [sp, #48]
  40b340:	stp	x25, x26, [sp, #64]
  40b344:	bl	402cf0 <__ctype_get_mb_cur_max@plt>
  40b348:	cmp	x0, #0x1
  40b34c:	b.hi	40b4a0 <ferror@plt+0x8520>  // b.pmore
  40b350:	and	w21, w21, #0x2
  40b354:	mov	w23, #0x7fffffff            	// #2147483647
  40b358:	cmp	x20, x22
  40b35c:	b.cs	40b484 <ferror@plt+0x8504>  // b.hs, b.nlast
  40b360:	bl	402ca0 <__ctype_b_loc@plt>
  40b364:	ldrb	w1, [x20], #1
  40b368:	ldr	x0, [x0]
  40b36c:	ldrh	w0, [x0, x1, lsl #1]
  40b370:	tbz	w0, #14, 40b4a8 <ferror@plt+0x8528>
  40b374:	cmp	w19, w23
  40b378:	b.eq	40b484 <ferror@plt+0x8504>  // b.none
  40b37c:	add	w19, w19, #0x1
  40b380:	b	40b358 <ferror@plt+0x83d8>
  40b384:	ldrb	w0, [x20]
  40b388:	cmp	w0, #0x5f
  40b38c:	b.hi	40b400 <ferror@plt+0x8480>  // b.pmore
  40b390:	cmp	w0, #0x40
  40b394:	b.hi	40b3a8 <ferror@plt+0x8428>  // b.pmore
  40b398:	cmp	w0, #0x23
  40b39c:	b.hi	40b3bc <ferror@plt+0x843c>  // b.pmore
  40b3a0:	cmp	w0, #0x1f
  40b3a4:	b.ls	40b3cc <ferror@plt+0x844c>  // b.plast
  40b3a8:	add	x20, x20, #0x1
  40b3ac:	add	w19, w19, #0x1
  40b3b0:	cmp	x20, x22
  40b3b4:	b.cc	40b384 <ferror@plt+0x8404>  // b.lo, b.ul, b.last
  40b3b8:	b	40b484 <ferror@plt+0x8504>
  40b3bc:	sub	w0, w0, #0x25
  40b3c0:	and	w0, w0, #0xff
  40b3c4:	cmp	w0, #0x1a
  40b3c8:	b.ls	40b3a8 <ferror@plt+0x8428>  // b.plast
  40b3cc:	and	w26, w21, #0x2
  40b3d0:	mov	w25, #0x7fffffff            	// #2147483647
  40b3d4:	str	xzr, [sp, #88]
  40b3d8:	add	x3, sp, #0x58
  40b3dc:	sub	x2, x22, x20
  40b3e0:	mov	x1, x20
  40b3e4:	add	x0, sp, #0x54
  40b3e8:	bl	40f2a8 <ferror@plt+0xc328>
  40b3ec:	cmn	x0, #0x1
  40b3f0:	b.ne	40b410 <ferror@plt+0x8490>  // b.any
  40b3f4:	tbz	w21, #0, 40b3a8 <ferror@plt+0x8428>
  40b3f8:	mov	w19, #0xffffffff            	// #-1
  40b3fc:	b	40b484 <ferror@plt+0x8504>
  40b400:	sub	w0, w0, #0x61
  40b404:	and	w0, w0, #0xff
  40b408:	cmp	w0, #0x1d
  40b40c:	b	40b3c8 <ferror@plt+0x8448>
  40b410:	cmn	x0, #0x2
  40b414:	b.ne	40b428 <ferror@plt+0x84a8>  // b.any
  40b418:	tbnz	w21, #0, 40b3f8 <ferror@plt+0x8478>
  40b41c:	add	w19, w19, #0x1
  40b420:	mov	x20, x22
  40b424:	b	40b3b0 <ferror@plt+0x8430>
  40b428:	cmp	x0, #0x0
  40b42c:	csel	x24, x0, x23, ne  // ne = any
  40b430:	ldr	w0, [sp, #84]
  40b434:	bl	402a40 <wcwidth@plt>
  40b438:	tbnz	w0, #31, 40b460 <ferror@plt+0x84e0>
  40b43c:	sub	w1, w25, w19
  40b440:	cmp	w1, w0
  40b444:	b.lt	40b480 <ferror@plt+0x8500>  // b.tstop
  40b448:	add	w19, w19, w0
  40b44c:	add	x20, x20, x24
  40b450:	add	x0, sp, #0x58
  40b454:	bl	402c10 <mbsinit@plt>
  40b458:	cbz	w0, 40b3d8 <ferror@plt+0x8458>
  40b45c:	b	40b3b0 <ferror@plt+0x8430>
  40b460:	cbnz	w26, 40b3f8 <ferror@plt+0x8478>
  40b464:	ldr	w0, [sp, #84]
  40b468:	bl	402920 <iswcntrl@plt>
  40b46c:	cbnz	w0, 40b44c <ferror@plt+0x84cc>
  40b470:	cmp	w19, w25
  40b474:	b.eq	40b480 <ferror@plt+0x8500>  // b.none
  40b478:	add	w19, w19, #0x1
  40b47c:	b	40b44c <ferror@plt+0x84cc>
  40b480:	mov	w19, #0x7fffffff            	// #2147483647
  40b484:	mov	w0, w19
  40b488:	ldp	x19, x20, [sp, #16]
  40b48c:	ldp	x21, x22, [sp, #32]
  40b490:	ldp	x23, x24, [sp, #48]
  40b494:	ldp	x25, x26, [sp, #64]
  40b498:	ldp	x29, x30, [sp], #96
  40b49c:	ret
  40b4a0:	mov	x23, #0x1                   	// #1
  40b4a4:	b	40b3b0 <ferror@plt+0x8430>
  40b4a8:	cbnz	w21, 40b3f8 <ferror@plt+0x8478>
  40b4ac:	tbnz	w0, #1, 40b358 <ferror@plt+0x83d8>
  40b4b0:	b	40b374 <ferror@plt+0x83f4>
  40b4b4:	stp	x29, x30, [sp, #-32]!
  40b4b8:	mov	x29, sp
  40b4bc:	stp	x19, x20, [sp, #16]
  40b4c0:	mov	w20, w1
  40b4c4:	mov	x19, x0
  40b4c8:	bl	402880 <strlen@plt>
  40b4cc:	mov	x1, x0
  40b4d0:	mov	w2, w20
  40b4d4:	mov	x0, x19
  40b4d8:	ldp	x19, x20, [sp, #16]
  40b4dc:	ldp	x29, x30, [sp], #32
  40b4e0:	b	40b31c <ferror@plt+0x839c>
  40b4e4:	stp	x29, x30, [sp, #-144]!
  40b4e8:	mov	x1, #0x80                  	// #128
  40b4ec:	mov	w0, #0x0                   	// #0
  40b4f0:	mov	x29, sp
  40b4f4:	add	x2, sp, #0x10
  40b4f8:	bl	402bf0 <sched_getaffinity@plt>
  40b4fc:	cbnz	w0, 40b518 <ferror@plt+0x8598>
  40b500:	add	x1, sp, #0x10
  40b504:	mov	x0, #0x80                  	// #128
  40b508:	bl	402d70 <__sched_cpucount@plt>
  40b50c:	mov	w1, w0
  40b510:	sxtw	x0, w0
  40b514:	cbnz	w1, 40b51c <ferror@plt+0x859c>
  40b518:	mov	x0, #0x0                   	// #0
  40b51c:	ldp	x29, x30, [sp], #144
  40b520:	ret
  40b524:	stp	x29, x30, [sp, #-64]!
  40b528:	mov	x29, sp
  40b52c:	stp	x19, x20, [sp, #16]
  40b530:	mov	x19, x0
  40b534:	str	x21, [sp, #32]
  40b538:	ldrb	w20, [x19]
  40b53c:	cbz	w20, 40b57c <ferror@plt+0x85fc>
  40b540:	mov	w0, w20
  40b544:	bl	40f820 <_obstack_memory_used@@Base+0x140>
  40b548:	tst	w0, #0xff
  40b54c:	b.ne	40b594 <ferror@plt+0x8614>  // b.any
  40b550:	sub	w20, w20, #0x30
  40b554:	cmp	w20, #0x9
  40b558:	b.hi	40b57c <ferror@plt+0x85fc>  // b.pmore
  40b55c:	mov	x0, x19
  40b560:	add	x1, sp, #0x38
  40b564:	mov	w2, #0xa                   	// #10
  40b568:	str	xzr, [sp, #56]
  40b56c:	bl	402870 <strtoul@plt>
  40b570:	mov	x19, x0
  40b574:	ldr	x0, [sp, #56]
  40b578:	cbnz	x0, 40b5a4 <ferror@plt+0x8624>
  40b57c:	mov	x19, #0x0                   	// #0
  40b580:	mov	x0, x19
  40b584:	ldp	x19, x20, [sp, #16]
  40b588:	ldr	x21, [sp, #32]
  40b58c:	ldp	x29, x30, [sp], #64
  40b590:	ret
  40b594:	add	x19, x19, #0x1
  40b598:	b	40b538 <ferror@plt+0x85b8>
  40b59c:	add	x20, x20, #0x1
  40b5a0:	str	x20, [sp, #56]
  40b5a4:	ldr	x20, [sp, #56]
  40b5a8:	ldrb	w21, [x20]
  40b5ac:	cbz	w21, 40b580 <ferror@plt+0x8600>
  40b5b0:	mov	w0, w21
  40b5b4:	bl	40f820 <_obstack_memory_used@@Base+0x140>
  40b5b8:	tst	w0, #0xff
  40b5bc:	b.ne	40b59c <ferror@plt+0x861c>  // b.any
  40b5c0:	cmp	w21, #0x2c
  40b5c4:	b.ne	40b57c <ferror@plt+0x85fc>  // b.any
  40b5c8:	b	40b580 <ferror@plt+0x8600>
  40b5cc:	stp	x29, x30, [sp, #-32]!
  40b5d0:	cmp	w0, #0x2
  40b5d4:	mov	x29, sp
  40b5d8:	stp	x19, x20, [sp, #16]
  40b5dc:	b.ne	40b638 <ferror@plt+0x86b8>  // b.any
  40b5e0:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40b5e4:	add	x0, x0, #0x390
  40b5e8:	bl	402f10 <getenv@plt>
  40b5ec:	cbz	x0, 40b630 <ferror@plt+0x86b0>
  40b5f0:	bl	40b524 <ferror@plt+0x85a4>
  40b5f4:	mov	x20, x0
  40b5f8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40b5fc:	add	x0, x0, #0x3a0
  40b600:	bl	402f10 <getenv@plt>
  40b604:	cbz	x0, 40b614 <ferror@plt+0x8694>
  40b608:	bl	40b524 <ferror@plt+0x85a4>
  40b60c:	mov	x19, x0
  40b610:	cbnz	x0, 40b618 <ferror@plt+0x8698>
  40b614:	mov	x19, #0xffffffffffffffff    	// #-1
  40b618:	cbz	x20, 40b644 <ferror@plt+0x86c4>
  40b61c:	cmp	x19, x20
  40b620:	csel	x0, x19, x20, ls  // ls = plast
  40b624:	ldp	x19, x20, [sp, #16]
  40b628:	ldp	x29, x30, [sp], #32
  40b62c:	ret
  40b630:	mov	x20, #0x0                   	// #0
  40b634:	b	40b5f8 <ferror@plt+0x8678>
  40b638:	cmp	w0, #0x1
  40b63c:	b.ne	40b668 <ferror@plt+0x86e8>  // b.any
  40b640:	mov	x19, #0xffffffffffffffff    	// #-1
  40b644:	bl	40b4e4 <ferror@plt+0x8564>
  40b648:	cbnz	x0, 40b65c <ferror@plt+0x86dc>
  40b64c:	mov	w0, #0x54                  	// #84
  40b650:	bl	402e30 <sysconf@plt>
  40b654:	cmp	x0, #0x0
  40b658:	csinc	x0, x0, xzr, gt
  40b65c:	cmp	x19, x0
  40b660:	csel	x0, x19, x0, ls  // ls = plast
  40b664:	b	40b624 <ferror@plt+0x86a4>
  40b668:	mov	w0, #0x53                  	// #83
  40b66c:	bl	402e30 <sysconf@plt>
  40b670:	mov	x19, x0
  40b674:	cmp	x0, #0x1
  40b678:	b.ne	40b688 <ferror@plt+0x8708>  // b.any
  40b67c:	bl	40b4e4 <ferror@plt+0x8564>
  40b680:	cbz	x0, 40b690 <ferror@plt+0x8710>
  40b684:	mov	x19, x0
  40b688:	cmp	x19, #0x0
  40b68c:	b.le	40b69c <ferror@plt+0x871c>
  40b690:	mov	x0, x19
  40b694:	mov	x19, #0xffffffffffffffff    	// #-1
  40b698:	b	40b65c <ferror@plt+0x86dc>
  40b69c:	mov	x19, #0xffffffffffffffff    	// #-1
  40b6a0:	mov	x0, #0x1                   	// #1
  40b6a4:	b	40b65c <ferror@plt+0x86dc>
  40b6a8:	stp	x29, x30, [sp, #-144]!
  40b6ac:	mov	w0, #0x55                  	// #85
  40b6b0:	mov	x29, sp
  40b6b4:	str	d8, [sp, #16]
  40b6b8:	bl	402e30 <sysconf@plt>
  40b6bc:	scvtf	d8, x0
  40b6c0:	mov	w0, #0x1e                  	// #30
  40b6c4:	bl	402e30 <sysconf@plt>
  40b6c8:	fcmpe	d8, #0.0
  40b6cc:	b.lt	40b6f0 <ferror@plt+0x8770>  // b.tstop
  40b6d0:	fmov	d0, x0
  40b6d4:	scvtf	d0, d0
  40b6d8:	fcmpe	d0, #0.0
  40b6dc:	b.lt	40b6f0 <ferror@plt+0x8770>  // b.tstop
  40b6e0:	fmul	d0, d8, d0
  40b6e4:	ldr	d8, [sp, #16]
  40b6e8:	ldp	x29, x30, [sp], #144
  40b6ec:	ret
  40b6f0:	add	x0, sp, #0x20
  40b6f4:	bl	4028d0 <sysinfo@plt>
  40b6f8:	cbnz	w0, 40b714 <ferror@plt+0x8794>
  40b6fc:	ldr	d0, [sp, #64]
  40b700:	ldr	w0, [sp, #136]
  40b704:	ucvtf	d0, d0
  40b708:	ucvtf	d1, w0
  40b70c:	fmul	d0, d0, d1
  40b710:	b	40b6e4 <ferror@plt+0x8764>
  40b714:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40b718:	ldr	d0, [x0, #952]
  40b71c:	b	40b6e4 <ferror@plt+0x8764>
  40b720:	stp	x29, x30, [sp, #-144]!
  40b724:	mov	w0, #0x56                  	// #86
  40b728:	mov	x29, sp
  40b72c:	str	d8, [sp, #16]
  40b730:	bl	402e30 <sysconf@plt>
  40b734:	scvtf	d8, x0
  40b738:	mov	w0, #0x1e                  	// #30
  40b73c:	bl	402e30 <sysconf@plt>
  40b740:	fcmpe	d8, #0.0
  40b744:	b.lt	40b768 <ferror@plt+0x87e8>  // b.tstop
  40b748:	fmov	d0, x0
  40b74c:	scvtf	d0, d0
  40b750:	fcmpe	d0, #0.0
  40b754:	b.lt	40b768 <ferror@plt+0x87e8>  // b.tstop
  40b758:	fmul	d0, d8, d0
  40b75c:	ldr	d8, [sp, #16]
  40b760:	ldp	x29, x30, [sp], #144
  40b764:	ret
  40b768:	add	x0, sp, #0x20
  40b76c:	bl	4028d0 <sysinfo@plt>
  40b770:	cbnz	w0, 40b798 <ferror@plt+0x8818>
  40b774:	ldr	d0, [sp, #72]
  40b778:	ldr	d1, [sp, #88]
  40b77c:	ucvtf	d0, d0
  40b780:	ldr	w0, [sp, #136]
  40b784:	ucvtf	d1, d1
  40b788:	fadd	d0, d0, d1
  40b78c:	ucvtf	d1, w0
  40b790:	fmul	d0, d0, d1
  40b794:	b	40b75c <ferror@plt+0x87dc>
  40b798:	bl	40b6a8 <ferror@plt+0x8728>
  40b79c:	fmov	d1, #2.500000000000000000e-01
  40b7a0:	b	40b790 <ferror@plt+0x8810>
  40b7a4:	stp	x29, x30, [sp, #-64]!
  40b7a8:	mov	x29, sp
  40b7ac:	stp	x23, x24, [sp, #48]
  40b7b0:	adrp	x23, 426000 <_obstack_memory_used@@Base+0x16920>
  40b7b4:	ldr	w2, [x23, #3004]
  40b7b8:	stp	x19, x20, [sp, #16]
  40b7bc:	mov	x19, x0
  40b7c0:	stp	x21, x22, [sp, #32]
  40b7c4:	mov	w21, w1
  40b7c8:	ldr	x22, [x0]
  40b7cc:	tbnz	w2, #31, 40b818 <ferror@plt+0x8898>
  40b7d0:	bl	402c20 <pipe2@plt>
  40b7d4:	mov	x24, x23
  40b7d8:	mov	w20, w0
  40b7dc:	tbz	w0, #31, 40b7f0 <ferror@plt+0x8870>
  40b7e0:	bl	402ef0 <__errno_location@plt>
  40b7e4:	ldr	w0, [x0]
  40b7e8:	cmp	w0, #0x26
  40b7ec:	b.eq	40b810 <ferror@plt+0x8890>  // b.none
  40b7f0:	mov	w0, #0x1                   	// #1
  40b7f4:	str	w0, [x24, #3004]
  40b7f8:	mov	w0, w20
  40b7fc:	ldp	x19, x20, [sp, #16]
  40b800:	ldp	x21, x22, [sp, #32]
  40b804:	ldp	x23, x24, [sp, #48]
  40b808:	ldp	x29, x30, [sp], #64
  40b80c:	ret
  40b810:	mov	w0, #0xffffffff            	// #-1
  40b814:	str	w0, [x23, #3004]
  40b818:	mov	w20, #0xf7ff                	// #63487
  40b81c:	movk	w20, #0xfff7, lsl #16
  40b820:	ands	w20, w21, w20
  40b824:	b.eq	40b83c <ferror@plt+0x88bc>  // b.none
  40b828:	bl	402ef0 <__errno_location@plt>
  40b82c:	mov	w1, #0x16                  	// #22
  40b830:	str	w1, [x0]
  40b834:	mov	w20, #0xffffffff            	// #-1
  40b838:	b	40b7f8 <ferror@plt+0x8878>
  40b83c:	mov	x0, x19
  40b840:	bl	402900 <pipe@plt>
  40b844:	tbnz	w0, #31, 40b834 <ferror@plt+0x88b4>
  40b848:	tbnz	w21, #11, 40b8ac <ferror@plt+0x892c>
  40b84c:	tbz	w21, #19, 40b7f8 <ferror@plt+0x8878>
  40b850:	ldr	w0, [x19, #4]
  40b854:	mov	w2, #0x0                   	// #0
  40b858:	mov	w1, #0x1                   	// #1
  40b85c:	bl	40efbc <ferror@plt+0xc03c>
  40b860:	tbnz	w0, #31, 40b8c0 <ferror@plt+0x8940>
  40b864:	orr	w2, w0, #0x1
  40b868:	ldr	w0, [x19, #4]
  40b86c:	mov	w1, #0x2                   	// #2
  40b870:	bl	40efbc <ferror@plt+0xc03c>
  40b874:	cmn	w0, #0x1
  40b878:	b.eq	40b8c0 <ferror@plt+0x8940>  // b.none
  40b87c:	ldr	w0, [x19]
  40b880:	mov	w2, #0x0                   	// #0
  40b884:	mov	w1, #0x1                   	// #1
  40b888:	bl	40efbc <ferror@plt+0xc03c>
  40b88c:	tbnz	w0, #31, 40b8c0 <ferror@plt+0x8940>
  40b890:	orr	w2, w0, #0x1
  40b894:	ldr	w0, [x19]
  40b898:	mov	w1, #0x2                   	// #2
  40b89c:	bl	40efbc <ferror@plt+0xc03c>
  40b8a0:	cmn	w0, #0x1
  40b8a4:	b.ne	40b7f8 <ferror@plt+0x8878>  // b.any
  40b8a8:	b	40b8c0 <ferror@plt+0x8940>
  40b8ac:	ldr	w0, [x19, #4]
  40b8b0:	mov	w2, #0x0                   	// #0
  40b8b4:	mov	w1, #0x3                   	// #3
  40b8b8:	bl	40efbc <ferror@plt+0xc03c>
  40b8bc:	tbz	w0, #31, 40b8e8 <ferror@plt+0x8968>
  40b8c0:	bl	402ef0 <__errno_location@plt>
  40b8c4:	mov	x20, x0
  40b8c8:	ldr	w0, [x19]
  40b8cc:	ldr	w21, [x20]
  40b8d0:	bl	402b50 <close@plt>
  40b8d4:	ldr	w0, [x19, #4]
  40b8d8:	bl	402b50 <close@plt>
  40b8dc:	str	x22, [x19]
  40b8e0:	str	w21, [x20]
  40b8e4:	b	40b834 <ferror@plt+0x88b4>
  40b8e8:	orr	w2, w0, #0x800
  40b8ec:	ldr	w0, [x19, #4]
  40b8f0:	mov	w1, #0x4                   	// #4
  40b8f4:	bl	40efbc <ferror@plt+0xc03c>
  40b8f8:	cmn	w0, #0x1
  40b8fc:	b.eq	40b8c0 <ferror@plt+0x8940>  // b.none
  40b900:	ldr	w0, [x19]
  40b904:	mov	w2, #0x0                   	// #0
  40b908:	mov	w1, #0x3                   	// #3
  40b90c:	bl	40efbc <ferror@plt+0xc03c>
  40b910:	tbnz	w0, #31, 40b8c0 <ferror@plt+0x8940>
  40b914:	orr	w2, w0, #0x800
  40b918:	ldr	w0, [x19]
  40b91c:	mov	w1, #0x4                   	// #4
  40b920:	bl	40efbc <ferror@plt+0xc03c>
  40b924:	cmn	w0, #0x1
  40b928:	b.ne	40b84c <ferror@plt+0x88cc>  // b.any
  40b92c:	b	40b8c0 <ferror@plt+0x8940>
  40b930:	stp	x29, x30, [sp, #-32]!
  40b934:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40b938:	add	x0, x0, #0x3c0
  40b93c:	mov	x29, sp
  40b940:	bl	402f10 <getenv@plt>
  40b944:	cbz	x0, 40b96c <ferror@plt+0x89ec>
  40b948:	ldrb	w1, [x0]
  40b94c:	cbz	w1, 40b96c <ferror@plt+0x89ec>
  40b950:	mov	w2, #0xa                   	// #10
  40b954:	add	x1, sp, #0x18
  40b958:	bl	402cb0 <strtol@plt>
  40b95c:	mov	x2, x0
  40b960:	ldr	x0, [sp, #24]
  40b964:	ldrb	w0, [x0]
  40b968:	cbz	w0, 40b984 <ferror@plt+0x8a04>
  40b96c:	mov	x2, #0x1069                	// #4201
  40b970:	movk	x2, #0x3, lsl #16
  40b974:	mov	x1, #0x7fffffff            	// #2147483647
  40b978:	cmp	x2, x1
  40b97c:	csel	x0, x2, x1, le
  40b980:	b	40b990 <ferror@plt+0x8a10>
  40b984:	mov	x0, #0xffffffff80000000    	// #-2147483648
  40b988:	cmp	x2, x0
  40b98c:	b.ge	40b974 <ferror@plt+0x89f4>  // b.tcont
  40b990:	ldp	x29, x30, [sp], #32
  40b994:	ret
  40b998:	stp	x29, x30, [sp, #-48]!
  40b99c:	mov	x29, sp
  40b9a0:	stp	x19, x20, [sp, #16]
  40b9a4:	str	x21, [sp, #32]
  40b9a8:	cbnz	x0, 40b9c4 <ferror@plt+0x8a44>
  40b9ac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40b9b0:	ldr	x1, [x0, #1352]
  40b9b4:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40b9b8:	add	x0, x0, #0x3d0
  40b9bc:	bl	402890 <fputs@plt>
  40b9c0:	bl	402bd0 <abort@plt>
  40b9c4:	mov	x19, x0
  40b9c8:	mov	w1, #0x2f                  	// #47
  40b9cc:	bl	402b70 <strrchr@plt>
  40b9d0:	mov	x20, x0
  40b9d4:	cbz	x0, 40ba24 <ferror@plt+0x8aa4>
  40b9d8:	add	x21, x0, #0x1
  40b9dc:	sub	x0, x21, x19
  40b9e0:	cmp	x0, #0x6
  40b9e4:	b.le	40ba24 <ferror@plt+0x8aa4>
  40b9e8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40b9ec:	sub	x0, x20, #0x6
  40b9f0:	add	x1, x1, #0x408
  40b9f4:	mov	x2, #0x7                   	// #7
  40b9f8:	bl	402a90 <strncmp@plt>
  40b9fc:	cbnz	w0, 40ba24 <ferror@plt+0x8aa4>
  40ba00:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40ba04:	mov	x0, x21
  40ba08:	add	x1, x1, #0x410
  40ba0c:	mov	x2, #0x3                   	// #3
  40ba10:	bl	402a90 <strncmp@plt>
  40ba14:	cbnz	w0, 40ba44 <ferror@plt+0x8ac4>
  40ba18:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40ba1c:	add	x19, x20, #0x4
  40ba20:	str	x19, [x0, #1392]
  40ba24:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40ba28:	ldr	x21, [sp, #32]
  40ba2c:	str	x19, [x0, #3008]
  40ba30:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40ba34:	str	x19, [x0, #1344]
  40ba38:	ldp	x19, x20, [sp, #16]
  40ba3c:	ldp	x29, x30, [sp], #48
  40ba40:	ret
  40ba44:	mov	x19, x21
  40ba48:	b	40ba24 <ferror@plt+0x8aa4>
  40ba4c:	stp	xzr, xzr, [x8]
  40ba50:	cmp	w0, #0xa
  40ba54:	stp	xzr, xzr, [x8, #16]
  40ba58:	stp	xzr, xzr, [x8, #32]
  40ba5c:	str	xzr, [x8, #48]
  40ba60:	b.ne	40ba70 <ferror@plt+0x8af0>  // b.any
  40ba64:	stp	x29, x30, [sp, #-16]!
  40ba68:	mov	x29, sp
  40ba6c:	bl	402bd0 <abort@plt>
  40ba70:	str	w0, [x8]
  40ba74:	ret
  40ba78:	stp	x29, x30, [sp, #-48]!
  40ba7c:	mov	w2, #0x5                   	// #5
  40ba80:	mov	x29, sp
  40ba84:	stp	x19, x20, [sp, #16]
  40ba88:	mov	x20, x0
  40ba8c:	str	x21, [sp, #32]
  40ba90:	mov	w21, w1
  40ba94:	mov	x1, x0
  40ba98:	mov	x0, #0x0                   	// #0
  40ba9c:	bl	402e60 <dcgettext@plt>
  40baa0:	mov	x19, x0
  40baa4:	cmp	x20, x0
  40baa8:	b.ne	40bb1c <ferror@plt+0x8b9c>  // b.any
  40baac:	bl	40fab8 <_obstack_memory_used@@Base+0x3d8>
  40bab0:	ldrb	w2, [x0]
  40bab4:	and	w2, w2, #0xffffffdf
  40bab8:	cmp	w2, #0x55
  40babc:	b.ne	40bb30 <ferror@plt+0x8bb0>  // b.any
  40bac0:	ldrb	w1, [x0, #1]
  40bac4:	and	w1, w1, #0xffffffdf
  40bac8:	cmp	w1, #0x54
  40bacc:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bad0:	ldrb	w1, [x0, #2]
  40bad4:	and	w1, w1, #0xffffffdf
  40bad8:	cmp	w1, #0x46
  40badc:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bae0:	ldrb	w1, [x0, #3]
  40bae4:	cmp	w1, #0x2d
  40bae8:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40baec:	ldrb	w1, [x0, #4]
  40baf0:	cmp	w1, #0x38
  40baf4:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40baf8:	ldrb	w0, [x0, #5]
  40bafc:	cbnz	w0, 40bba8 <ferror@plt+0x8c28>
  40bb00:	ldrb	w1, [x19]
  40bb04:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40bb08:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x2920>
  40bb0c:	add	x0, x0, #0x414
  40bb10:	cmp	w1, #0x60
  40bb14:	add	x19, x19, #0x41f
  40bb18:	csel	x19, x19, x0, eq  // eq = none
  40bb1c:	mov	x0, x19
  40bb20:	ldp	x19, x20, [sp, #16]
  40bb24:	ldr	x21, [sp, #32]
  40bb28:	ldp	x29, x30, [sp], #48
  40bb2c:	ret
  40bb30:	cmp	w2, #0x47
  40bb34:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb38:	ldrb	w1, [x0, #1]
  40bb3c:	and	w1, w1, #0xffffffdf
  40bb40:	cmp	w1, #0x42
  40bb44:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb48:	ldrb	w1, [x0, #2]
  40bb4c:	cmp	w1, #0x31
  40bb50:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb54:	ldrb	w1, [x0, #3]
  40bb58:	cmp	w1, #0x38
  40bb5c:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb60:	ldrb	w1, [x0, #4]
  40bb64:	cmp	w1, #0x30
  40bb68:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb6c:	ldrb	w1, [x0, #5]
  40bb70:	cmp	w1, #0x33
  40bb74:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb78:	ldrb	w1, [x0, #6]
  40bb7c:	cmp	w1, #0x30
  40bb80:	b.ne	40bba8 <ferror@plt+0x8c28>  // b.any
  40bb84:	ldrb	w0, [x0, #7]
  40bb88:	cbnz	w0, 40bba8 <ferror@plt+0x8c28>
  40bb8c:	ldrb	w1, [x19]
  40bb90:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40bb94:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x2920>
  40bb98:	add	x0, x0, #0x418
  40bb9c:	cmp	w1, #0x60
  40bba0:	add	x19, x19, #0x41b
  40bba4:	b	40bb18 <ferror@plt+0x8b98>
  40bba8:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  40bbac:	adrp	x19, 410000 <_obstack_memory_used@@Base+0x920>
  40bbb0:	cmp	w21, #0x9
  40bbb4:	add	x0, x0, #0x5b2
  40bbb8:	add	x19, x19, #0x357
  40bbbc:	b	40bb18 <ferror@plt+0x8b98>
  40bbc0:	sub	sp, sp, #0xf0
  40bbc4:	stp	x29, x30, [sp, #16]
  40bbc8:	add	x29, sp, #0x10
  40bbcc:	stp	x19, x20, [sp, #32]
  40bbd0:	stp	x21, x22, [sp, #48]
  40bbd4:	mov	x21, x2
  40bbd8:	stp	x23, x24, [sp, #64]
  40bbdc:	mov	x24, x3
  40bbe0:	stp	x25, x26, [sp, #80]
  40bbe4:	mov	w25, w4
  40bbe8:	mov	x26, x0
  40bbec:	stp	x27, x28, [sp, #96]
  40bbf0:	str	x1, [sp, #112]
  40bbf4:	str	w5, [sp, #120]
  40bbf8:	str	x7, [sp, #128]
  40bbfc:	str	x6, [sp, #152]
  40bc00:	bl	402cf0 <__ctype_get_mb_cur_max@plt>
  40bc04:	str	x0, [sp, #160]
  40bc08:	cmp	w25, #0xa
  40bc0c:	ldr	x0, [sp, #120]
  40bc10:	str	xzr, [sp, #136]
  40bc14:	ubfx	x28, x0, #1, #1
  40bc18:	mov	w0, #0x1                   	// #1
  40bc1c:	str	w0, [sp, #148]
  40bc20:	b.hi	40be1c <ferror@plt+0x8e9c>  // b.pmore
  40bc24:	mov	w20, #0x0                   	// #0
  40bc28:	mov	w23, #0x0                   	// #0
  40bc2c:	mov	w22, #0x0                   	// #0
  40bc30:	mov	x10, #0x0                   	// #0
  40bc34:	mov	x6, #0x0                   	// #0
  40bc38:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40bc3c:	add	x0, x0, #0x478
  40bc40:	ldrb	w0, [x0, w25, uxtw]
  40bc44:	adr	x1, 40bc50 <ferror@plt+0x8cd0>
  40bc48:	add	x0, x1, w0, sxtb #2
  40bc4c:	br	x0
  40bc50:	ldr	x0, [sp, #112]
  40bc54:	mov	w28, #0x0                   	// #0
  40bc58:	str	x0, [sp, #136]
  40bc5c:	b	40bc38 <ferror@plt+0x8cb8>
  40bc60:	mov	w28, #0x0                   	// #0
  40bc64:	mov	x19, #0x0                   	// #0
  40bc68:	b	40bc88 <ferror@plt+0x8d08>
  40bc6c:	mov	w28, #0x1                   	// #1
  40bc70:	adrp	x6, 410000 <_obstack_memory_used@@Base+0x920>
  40bc74:	mov	w22, w28
  40bc78:	add	x6, x6, #0x357
  40bc7c:	mov	x10, #0x1                   	// #1
  40bc80:	mov	x19, #0x0                   	// #0
  40bc84:	mov	w25, #0x5                   	// #5
  40bc88:	ldr	x0, [sp, #136]
  40bc8c:	mov	x13, #0x0                   	// #0
  40bc90:	str	w20, [sp, #144]
  40bc94:	ldr	x27, [sp, #112]
  40bc98:	str	x0, [sp, #112]
  40bc9c:	cmn	x24, #0x1
  40bca0:	b.ne	40c6bc <ferror@plt+0x973c>  // b.any
  40bca4:	ldrb	w0, [x21, x13]
  40bca8:	cmp	w0, #0x0
  40bcac:	cset	w14, ne  // ne = any
  40bcb0:	cmp	w25, #0x2
  40bcb4:	cbnz	w14, 40be40 <ferror@plt+0x8ec0>
  40bcb8:	cset	w0, eq  // eq = none
  40bcbc:	cmp	x19, #0x0
  40bcc0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40bcc4:	b.eq	40bccc <ferror@plt+0x8d4c>  // b.none
  40bcc8:	cbnz	w28, 40bf54 <ferror@plt+0x8fd4>
  40bccc:	eor	w5, w28, #0x1
  40bcd0:	ands	w0, w0, w5
  40bcd4:	b.eq	40c720 <ferror@plt+0x97a0>  // b.none
  40bcd8:	ldr	w1, [sp, #144]
  40bcdc:	cbz	w1, 40c6e4 <ferror@plt+0x9764>
  40bce0:	ldr	w0, [sp, #148]
  40bce4:	cbz	w0, 40c6c4 <ferror@plt+0x9744>
  40bce8:	ldr	w5, [sp, #120]
  40bcec:	mov	x3, x24
  40bcf0:	ldr	x1, [sp, #112]
  40bcf4:	mov	x2, x21
  40bcf8:	ldr	x7, [sp, #128]
  40bcfc:	mov	w4, #0x5                   	// #5
  40bd00:	ldr	x6, [sp, #152]
  40bd04:	ldr	x0, [sp, #240]
  40bd08:	str	x0, [sp]
  40bd0c:	mov	x0, x26
  40bd10:	bl	40bbc0 <ferror@plt+0x8c40>
  40bd14:	b	40c700 <ferror@plt+0x9780>
  40bd18:	adrp	x6, 410000 <_obstack_memory_used@@Base+0x920>
  40bd1c:	add	x6, x6, #0x357
  40bd20:	cbnz	w28, 40be34 <ferror@plt+0x8eb4>
  40bd24:	ldr	x0, [sp, #112]
  40bd28:	cbz	x0, 40bd34 <ferror@plt+0x8db4>
  40bd2c:	mov	w0, #0x22                  	// #34
  40bd30:	strb	w0, [x26]
  40bd34:	mov	x10, #0x1                   	// #1
  40bd38:	mov	w22, #0x1                   	// #1
  40bd3c:	mov	x19, x10
  40bd40:	b	40bc88 <ferror@plt+0x8d08>
  40bd44:	cmp	w25, #0xa
  40bd48:	b.eq	40bd74 <ferror@plt+0x8df4>  // b.none
  40bd4c:	mov	w1, w25
  40bd50:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40bd54:	add	x0, x0, #0x423
  40bd58:	bl	40ba78 <ferror@plt+0x8af8>
  40bd5c:	mov	w1, w25
  40bd60:	str	x0, [sp, #128]
  40bd64:	adrp	x0, 411000 <_obstack_memory_used@@Base+0x1920>
  40bd68:	add	x0, x0, #0x5b2
  40bd6c:	bl	40ba78 <ferror@plt+0x8af8>
  40bd70:	str	x0, [sp, #240]
  40bd74:	mov	x19, #0x0                   	// #0
  40bd78:	cbnz	w28, 40bd88 <ferror@plt+0x8e08>
  40bd7c:	ldr	x0, [sp, #128]
  40bd80:	ldrb	w0, [x0, x19]
  40bd84:	cbnz	w0, 40bda0 <ferror@plt+0x8e20>
  40bd88:	ldr	x0, [sp, #240]
  40bd8c:	mov	w22, #0x1                   	// #1
  40bd90:	bl	402880 <strlen@plt>
  40bd94:	mov	x10, x0
  40bd98:	ldr	x6, [sp, #240]
  40bd9c:	b	40bc88 <ferror@plt+0x8d08>
  40bda0:	ldr	x1, [sp, #112]
  40bda4:	cmp	x1, x19
  40bda8:	b.ls	40bdb0 <ferror@plt+0x8e30>  // b.plast
  40bdac:	strb	w0, [x26, x19]
  40bdb0:	add	x19, x19, #0x1
  40bdb4:	b	40bd7c <ferror@plt+0x8dfc>
  40bdb8:	cbnz	w28, 40be04 <ferror@plt+0x8e84>
  40bdbc:	mov	w22, #0x1                   	// #1
  40bdc0:	ldr	x0, [sp, #112]
  40bdc4:	adrp	x6, 411000 <_obstack_memory_used@@Base+0x1920>
  40bdc8:	add	x6, x6, #0x5b2
  40bdcc:	cbz	x0, 40bdd8 <ferror@plt+0x8e58>
  40bdd0:	mov	w0, #0x27                  	// #39
  40bdd4:	strb	w0, [x26]
  40bdd8:	mov	x10, #0x1                   	// #1
  40bddc:	mov	w28, #0x0                   	// #0
  40bde0:	mov	x19, x10
  40bde4:	b	40be14 <ferror@plt+0x8e94>
  40bde8:	cbz	w28, 40bdc0 <ferror@plt+0x8e40>
  40bdec:	adrp	x6, 411000 <_obstack_memory_used@@Base+0x1920>
  40bdf0:	mov	x10, #0x1                   	// #1
  40bdf4:	add	x6, x6, #0x5b2
  40bdf8:	b	40bc64 <ferror@plt+0x8ce4>
  40bdfc:	mov	w28, #0x1                   	// #1
  40be00:	mov	w22, w28
  40be04:	adrp	x6, 411000 <_obstack_memory_used@@Base+0x1920>
  40be08:	add	x6, x6, #0x5b2
  40be0c:	mov	x10, #0x1                   	// #1
  40be10:	mov	x19, #0x0                   	// #0
  40be14:	mov	w25, #0x2                   	// #2
  40be18:	b	40bc88 <ferror@plt+0x8d08>
  40be1c:	bl	402bd0 <abort@plt>
  40be20:	mov	w28, #0x0                   	// #0
  40be24:	mov	w22, #0x1                   	// #1
  40be28:	b	40bc64 <ferror@plt+0x8ce4>
  40be2c:	mov	w28, #0x1                   	// #1
  40be30:	b	40be04 <ferror@plt+0x8e84>
  40be34:	mov	w22, w28
  40be38:	mov	x10, #0x1                   	// #1
  40be3c:	b	40bc64 <ferror@plt+0x8ce4>
  40be40:	add	x0, x21, x13
  40be44:	str	x0, [sp, #136]
  40be48:	cset	w3, ne  // ne = any
  40be4c:	ands	w3, w22, w3
  40be50:	b.eq	40bf04 <ferror@plt+0x8f84>  // b.none
  40be54:	cbz	x10, 40bf04 <ferror@plt+0x8f84>
  40be58:	cmp	x10, #0x1
  40be5c:	add	x20, x13, x10
  40be60:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  40be64:	b.ne	40be94 <ferror@plt+0x8f14>  // b.any
  40be68:	mov	x0, x21
  40be6c:	stp	x13, x6, [sp, #168]
  40be70:	str	x10, [sp, #184]
  40be74:	str	w3, [sp, #192]
  40be78:	str	w14, [sp, #200]
  40be7c:	bl	402880 <strlen@plt>
  40be80:	ldp	x13, x6, [sp, #168]
  40be84:	mov	x24, x0
  40be88:	ldr	w3, [sp, #192]
  40be8c:	ldr	w14, [sp, #200]
  40be90:	ldr	x10, [sp, #184]
  40be94:	cmp	x20, x24
  40be98:	b.hi	40bf04 <ferror@plt+0x8f84>  // b.pmore
  40be9c:	ldr	x0, [sp, #136]
  40bea0:	mov	x2, x10
  40bea4:	mov	x1, x6
  40bea8:	stp	x6, x10, [sp, #168]
  40beac:	str	x13, [sp, #184]
  40beb0:	str	w3, [sp, #192]
  40beb4:	str	w14, [sp, #200]
  40beb8:	bl	402c40 <memcmp@plt>
  40bebc:	ldr	w3, [sp, #192]
  40bec0:	ldr	w14, [sp, #200]
  40bec4:	ldp	x6, x10, [sp, #168]
  40bec8:	ldr	x13, [sp, #184]
  40becc:	cbnz	w0, 40bf04 <ferror@plt+0x8f84>
  40bed0:	cbnz	w28, 40c74c <ferror@plt+0x97cc>
  40bed4:	mov	w18, w3
  40bed8:	ldr	x0, [sp, #136]
  40bedc:	ldrb	w7, [x0]
  40bee0:	cmp	w7, #0x3f
  40bee4:	b.ls	40bf2c <ferror@plt+0x8fac>  // b.plast
  40bee8:	cmp	w7, #0x5a
  40beec:	b.hi	40bfe0 <ferror@plt+0x9060>  // b.pmore
  40bef0:	cmp	w7, #0x40
  40bef4:	b.eq	40bff0 <ferror@plt+0x9070>  // b.none
  40bef8:	mov	w20, w14
  40befc:	mov	w3, #0x0                   	// #0
  40bf00:	b	40c244 <ferror@plt+0x92c4>
  40bf04:	mov	w18, #0x0                   	// #0
  40bf08:	b	40bed8 <ferror@plt+0x8f58>
  40bf0c:	cmp	w0, #0x23
  40bf10:	b.hi	40bff0 <ferror@plt+0x9070>  // b.pmore
  40bf14:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40bf18:	add	x1, x1, #0x484
  40bf1c:	ldrh	w0, [x1, w0, uxtw #1]
  40bf20:	adr	x1, 40bf2c <ferror@plt+0x8fac>
  40bf24:	add	x0, x1, w0, sxth #2
  40bf28:	br	x0
  40bf2c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40bf30:	add	x0, x0, #0x4cc
  40bf34:	ldrh	w0, [x0, w7, uxtw #1]
  40bf38:	adr	x1, 40bf44 <ferror@plt+0x8fc4>
  40bf3c:	add	x0, x1, w0, sxth #2
  40bf40:	br	x0
  40bf44:	mov	w0, #0x72                  	// #114
  40bf48:	cmp	w28, #0x0
  40bf4c:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40bf50:	b.ne	40bf60 <ferror@plt+0x8fe0>  // b.any
  40bf54:	mov	w25, #0x2                   	// #2
  40bf58:	b	40c19c <ferror@plt+0x921c>
  40bf5c:	mov	w0, #0x62                  	// #98
  40bf60:	cbz	w22, 40c124 <ferror@plt+0x91a4>
  40bf64:	mov	w7, w0
  40bf68:	mov	w20, #0x0                   	// #0
  40bf6c:	cmp	w25, #0x2
  40bf70:	cset	w0, eq  // eq = none
  40bf74:	cbnz	w28, 40c19c <ferror@plt+0x921c>
  40bf78:	eor	w1, w23, #0x1
  40bf7c:	ands	w0, w0, w1
  40bf80:	b.eq	40bfc4 <ferror@plt+0x9044>  // b.none
  40bf84:	cmp	x27, x19
  40bf88:	b.ls	40bf94 <ferror@plt+0x9014>  // b.plast
  40bf8c:	mov	w1, #0x27                  	// #39
  40bf90:	strb	w1, [x26, x19]
  40bf94:	add	x1, x19, #0x1
  40bf98:	cmp	x27, x1
  40bf9c:	b.ls	40bfa8 <ferror@plt+0x9028>  // b.plast
  40bfa0:	mov	w2, #0x24                  	// #36
  40bfa4:	strb	w2, [x26, x1]
  40bfa8:	add	x1, x19, #0x2
  40bfac:	cmp	x27, x1
  40bfb0:	b.ls	40bfbc <ferror@plt+0x903c>  // b.plast
  40bfb4:	mov	w2, #0x27                  	// #39
  40bfb8:	strb	w2, [x26, x1]
  40bfbc:	add	x19, x19, #0x3
  40bfc0:	mov	w23, w0
  40bfc4:	cmp	x27, x19
  40bfc8:	b.ls	40bfd4 <ferror@plt+0x9054>  // b.plast
  40bfcc:	mov	w0, #0x5c                  	// #92
  40bfd0:	strb	w0, [x26, x19]
  40bfd4:	add	x19, x19, #0x1
  40bfd8:	mov	w3, w14
  40bfdc:	b	40c280 <ferror@plt+0x9300>
  40bfe0:	sub	w0, w7, #0x5b
  40bfe4:	and	w1, w0, #0xff
  40bfe8:	cmp	w1, #0x23
  40bfec:	b.ls	40bf0c <ferror@plt+0x8f8c>  // b.plast
  40bff0:	ldr	x0, [sp, #160]
  40bff4:	cmp	x0, #0x1
  40bff8:	b.ne	40c3f0 <ferror@plt+0x9470>  // b.any
  40bffc:	str	x13, [sp, #136]
  40c000:	stp	x6, x10, [sp, #168]
  40c004:	str	w7, [sp, #184]
  40c008:	str	w18, [sp, #192]
  40c00c:	str	w14, [sp, #200]
  40c010:	bl	402ca0 <__ctype_b_loc@plt>
  40c014:	ldr	w7, [sp, #184]
  40c018:	ldr	x0, [x0]
  40c01c:	ldp	x15, x6, [sp, #160]
  40c020:	ldrh	w20, [x0, w7, uxtw #1]
  40c024:	ldr	w18, [sp, #192]
  40c028:	ldr	w14, [sp, #200]
  40c02c:	ldr	x13, [sp, #136]
  40c030:	ubfx	x20, x20, #14, #1
  40c034:	ldr	x10, [sp, #176]
  40c038:	eor	w3, w20, #0x1
  40c03c:	and	w3, w22, w3
  40c040:	ands	w3, w3, #0xff
  40c044:	b.eq	40c244 <ferror@plt+0x92c4>  // b.none
  40c048:	mov	w20, #0x0                   	// #0
  40c04c:	b	40c560 <ferror@plt+0x95e0>
  40c050:	cbz	w22, 40c11c <ferror@plt+0x919c>
  40c054:	cmp	w25, #0x2
  40c058:	cset	w0, eq  // eq = none
  40c05c:	cbnz	w28, 40c74c <ferror@plt+0x97cc>
  40c060:	eor	w1, w23, #0x1
  40c064:	ands	w1, w0, w1
  40c068:	b.eq	40c114 <ferror@plt+0x9194>  // b.none
  40c06c:	cmp	x27, x19
  40c070:	b.ls	40c07c <ferror@plt+0x90fc>  // b.plast
  40c074:	mov	w0, #0x27                  	// #39
  40c078:	strb	w0, [x26, x19]
  40c07c:	add	x0, x19, #0x1
  40c080:	cmp	x27, x0
  40c084:	b.ls	40c090 <ferror@plt+0x9110>  // b.plast
  40c088:	mov	w2, #0x24                  	// #36
  40c08c:	strb	w2, [x26, x0]
  40c090:	add	x0, x19, #0x2
  40c094:	cmp	x27, x0
  40c098:	b.ls	40c0a4 <ferror@plt+0x9124>  // b.plast
  40c09c:	mov	w2, #0x27                  	// #39
  40c0a0:	strb	w2, [x26, x0]
  40c0a4:	add	x0, x19, #0x3
  40c0a8:	mov	w23, w1
  40c0ac:	cmp	x27, x0
  40c0b0:	b.ls	40c0bc <ferror@plt+0x913c>  // b.plast
  40c0b4:	mov	w1, #0x5c                  	// #92
  40c0b8:	strb	w1, [x26, x0]
  40c0bc:	add	x19, x0, #0x1
  40c0c0:	cbz	w3, 40c690 <ferror@plt+0x9710>
  40c0c4:	add	x1, x13, #0x1
  40c0c8:	cmp	x1, x24
  40c0cc:	b.cs	40c10c <ferror@plt+0x918c>  // b.hs, b.nlast
  40c0d0:	ldrb	w1, [x21, x1]
  40c0d4:	sub	w1, w1, #0x30
  40c0d8:	and	w1, w1, #0xff
  40c0dc:	cmp	w1, #0x9
  40c0e0:	b.hi	40c10c <ferror@plt+0x918c>  // b.pmore
  40c0e4:	cmp	x27, x19
  40c0e8:	b.ls	40c0f4 <ferror@plt+0x9174>  // b.plast
  40c0ec:	mov	w1, #0x30                  	// #48
  40c0f0:	strb	w1, [x26, x19]
  40c0f4:	add	x1, x0, #0x2
  40c0f8:	cmp	x27, x1
  40c0fc:	b.ls	40c108 <ferror@plt+0x9188>  // b.plast
  40c100:	mov	w2, #0x30                  	// #48
  40c104:	strb	w2, [x26, x1]
  40c108:	add	x19, x0, #0x3
  40c10c:	mov	w20, #0x0                   	// #0
  40c110:	b	40c698 <ferror@plt+0x9718>
  40c114:	mov	x0, x19
  40c118:	b	40c0ac <ferror@plt+0x912c>
  40c11c:	ldr	x0, [sp, #120]
  40c120:	tbnz	w0, #0, 40c2d8 <ferror@plt+0x9358>
  40c124:	mov	w20, #0x0                   	// #0
  40c128:	b	40befc <ferror@plt+0x8f7c>
  40c12c:	cmp	w25, #0x2
  40c130:	b.eq	40c198 <ferror@plt+0x9218>  // b.none
  40c134:	cmp	w25, #0x5
  40c138:	b.ne	40c124 <ferror@plt+0x91a4>  // b.any
  40c13c:	ldr	x0, [sp, #120]
  40c140:	tbz	w0, #2, 40c124 <ferror@plt+0x91a4>
  40c144:	add	x1, x13, #0x2
  40c148:	cmp	x1, x24
  40c14c:	b.cs	40c124 <ferror@plt+0x91a4>  // b.hs, b.nlast
  40c150:	ldr	x0, [sp, #136]
  40c154:	ldrb	w0, [x0, #1]
  40c158:	cmp	w0, #0x3f
  40c15c:	b.ne	40c124 <ferror@plt+0x91a4>  // b.any
  40c160:	ldrb	w7, [x21, x1]
  40c164:	cmp	w7, #0x2f
  40c168:	b.hi	40c1d4 <ferror@plt+0x9254>  // b.pmore
  40c16c:	cmp	w7, #0x20
  40c170:	b.ls	40c6a8 <ferror@plt+0x9728>  // b.plast
  40c174:	sub	w2, w7, #0x21
  40c178:	cmp	w2, #0xe
  40c17c:	b.hi	40c6a0 <ferror@plt+0x9720>  // b.pmore
  40c180:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40c184:	add	x0, x0, #0x54c
  40c188:	ldrh	w0, [x0, w2, uxtw #1]
  40c18c:	adr	x2, 40c198 <ferror@plt+0x9218>
  40c190:	add	x0, x2, w0, sxth #2
  40c194:	br	x0
  40c198:	cbz	w28, 40c124 <ferror@plt+0x91a4>
  40c19c:	ldr	x0, [sp, #240]
  40c1a0:	cmp	w22, #0x0
  40c1a4:	str	x0, [sp]
  40c1a8:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40c1ac:	ldr	w0, [sp, #120]
  40c1b0:	mov	x3, x24
  40c1b4:	mov	x2, x21
  40c1b8:	mov	x1, x27
  40c1bc:	and	w5, w0, #0xfffffffd
  40c1c0:	mov	x6, #0x0                   	// #0
  40c1c4:	mov	w0, #0x4                   	// #4
  40c1c8:	csel	w4, w25, w0, ne  // ne = any
  40c1cc:	ldr	x7, [sp, #128]
  40c1d0:	b	40bd0c <ferror@plt+0x8d8c>
  40c1d4:	sub	w2, w7, #0x3c
  40c1d8:	and	w2, w2, #0xff
  40c1dc:	cmp	w2, #0x2
  40c1e0:	b.hi	40c6a8 <ferror@plt+0x9728>  // b.pmore
  40c1e4:	cbnz	w28, 40c19c <ferror@plt+0x921c>
  40c1e8:	cmp	x27, x19
  40c1ec:	b.ls	40c1f8 <ferror@plt+0x9278>  // b.plast
  40c1f0:	mov	w0, #0x3f                  	// #63
  40c1f4:	strb	w0, [x26, x19]
  40c1f8:	add	x0, x19, #0x1
  40c1fc:	cmp	x27, x0
  40c200:	b.ls	40c20c <ferror@plt+0x928c>  // b.plast
  40c204:	mov	w2, #0x22                  	// #34
  40c208:	strb	w2, [x26, x0]
  40c20c:	add	x0, x19, #0x2
  40c210:	cmp	x27, x0
  40c214:	b.ls	40c220 <ferror@plt+0x92a0>  // b.plast
  40c218:	mov	w2, #0x22                  	// #34
  40c21c:	strb	w2, [x26, x0]
  40c220:	add	x0, x19, #0x3
  40c224:	cmp	x27, x0
  40c228:	b.ls	40c234 <ferror@plt+0x92b4>  // b.plast
  40c22c:	mov	w2, #0x3f                  	// #63
  40c230:	strb	w2, [x26, x0]
  40c234:	add	x19, x19, #0x4
  40c238:	mov	x13, x1
  40c23c:	mov	w20, #0x0                   	// #0
  40c240:	mov	w3, #0x0                   	// #0
  40c244:	cmp	w25, #0x2
  40c248:	eor	w0, w22, #0x1
  40c24c:	cset	w1, eq  // eq = none
  40c250:	orr	w0, w1, w0
  40c254:	tst	w0, #0xff
  40c258:	b.eq	40c260 <ferror@plt+0x92e0>  // b.none
  40c25c:	cbz	w28, 40c27c <ferror@plt+0x92fc>
  40c260:	ldr	x0, [sp, #152]
  40c264:	cbz	x0, 40c27c <ferror@plt+0x92fc>
  40c268:	ldr	x1, [sp, #152]
  40c26c:	ubfx	x0, x7, #5, #8
  40c270:	ldr	w0, [x1, x0, lsl #2]
  40c274:	lsr	w0, w0, w7
  40c278:	tbnz	w0, #0, 40bf6c <ferror@plt+0x8fec>
  40c27c:	cbnz	w18, 40bf6c <ferror@plt+0x8fec>
  40c280:	eor	w3, w3, #0x1
  40c284:	tst	w23, w3
  40c288:	b.eq	40c2b8 <ferror@plt+0x9338>  // b.none
  40c28c:	cmp	x27, x19
  40c290:	b.ls	40c29c <ferror@plt+0x931c>  // b.plast
  40c294:	mov	w0, #0x27                  	// #39
  40c298:	strb	w0, [x26, x19]
  40c29c:	add	x0, x19, #0x1
  40c2a0:	cmp	x27, x0
  40c2a4:	b.ls	40c2b0 <ferror@plt+0x9330>  // b.plast
  40c2a8:	mov	w1, #0x27                  	// #39
  40c2ac:	strb	w1, [x26, x0]
  40c2b0:	add	x19, x19, #0x2
  40c2b4:	mov	w23, #0x0                   	// #0
  40c2b8:	cmp	x27, x19
  40c2bc:	b.ls	40c2c4 <ferror@plt+0x9344>  // b.plast
  40c2c0:	strb	w7, [x26, x19]
  40c2c4:	ldr	w0, [sp, #148]
  40c2c8:	cmp	w20, #0x0
  40c2cc:	add	x19, x19, #0x1
  40c2d0:	csel	w0, w0, wzr, ne  // ne = any
  40c2d4:	str	w0, [sp, #148]
  40c2d8:	add	x13, x13, #0x1
  40c2dc:	b	40bc9c <ferror@plt+0x8d1c>
  40c2e0:	mov	w0, #0x74                  	// #116
  40c2e4:	b	40bf48 <ferror@plt+0x8fc8>
  40c2e8:	mov	w0, #0x76                  	// #118
  40c2ec:	b	40bf60 <ferror@plt+0x8fe0>
  40c2f0:	cmp	w25, #0x2
  40c2f4:	b.ne	40c308 <ferror@plt+0x9388>  // b.any
  40c2f8:	cbnz	w28, 40c19c <ferror@plt+0x921c>
  40c2fc:	mov	w20, #0x0                   	// #0
  40c300:	mov	w3, #0x0                   	// #0
  40c304:	b	40c280 <ferror@plt+0x9300>
  40c308:	cmp	w22, #0x0
  40c30c:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40c310:	b.eq	40c318 <ferror@plt+0x9398>  // b.none
  40c314:	cbnz	x10, 40c2fc <ferror@plt+0x937c>
  40c318:	mov	w0, w7
  40c31c:	b	40bf48 <ferror@plt+0x8fc8>
  40c320:	mov	w0, #0x6e                  	// #110
  40c324:	b	40bf48 <ferror@plt+0x8fc8>
  40c328:	mov	w0, #0x61                  	// #97
  40c32c:	b	40bf60 <ferror@plt+0x8fe0>
  40c330:	mov	w0, #0x66                  	// #102
  40c334:	b	40bf60 <ferror@plt+0x8fe0>
  40c338:	cmn	x24, #0x1
  40c33c:	b.ne	40c368 <ferror@plt+0x93e8>  // b.any
  40c340:	ldrb	w0, [x21, #1]
  40c344:	cmp	w0, #0x0
  40c348:	cset	w0, ne  // ne = any
  40c34c:	cbnz	w0, 40c124 <ferror@plt+0x91a4>
  40c350:	cbnz	x13, 40c124 <ferror@plt+0x91a4>
  40c354:	mov	w20, w14
  40c358:	cmp	w25, #0x2
  40c35c:	csel	w3, w28, wzr, eq  // eq = none
  40c360:	cbz	w3, 40c244 <ferror@plt+0x92c4>
  40c364:	b	40bf54 <ferror@plt+0x8fd4>
  40c368:	cmp	x24, #0x1
  40c36c:	b	40c348 <ferror@plt+0x93c8>
  40c370:	mov	w20, #0x0                   	// #0
  40c374:	b	40c358 <ferror@plt+0x93d8>
  40c378:	cmp	w25, #0x2
  40c37c:	b.ne	40c6b0 <ferror@plt+0x9730>  // b.any
  40c380:	cbnz	w28, 40c19c <ferror@plt+0x921c>
  40c384:	ldr	x0, [sp, #112]
  40c388:	cmp	x27, #0x0
  40c38c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  40c390:	b.eq	40c3e4 <ferror@plt+0x9464>  // b.none
  40c394:	cmp	x27, x19
  40c398:	b.ls	40c3a4 <ferror@plt+0x9424>  // b.plast
  40c39c:	mov	w0, #0x27                  	// #39
  40c3a0:	strb	w0, [x26, x19]
  40c3a4:	add	x0, x19, #0x1
  40c3a8:	cmp	x0, x27
  40c3ac:	b.cs	40c3b8 <ferror@plt+0x9438>  // b.hs, b.nlast
  40c3b0:	mov	w1, #0x5c                  	// #92
  40c3b4:	strb	w1, [x26, x0]
  40c3b8:	add	x0, x19, #0x2
  40c3bc:	cmp	x0, x27
  40c3c0:	b.cs	40c3cc <ferror@plt+0x944c>  // b.hs, b.nlast
  40c3c4:	mov	w1, #0x27                  	// #39
  40c3c8:	strb	w1, [x26, x0]
  40c3cc:	add	x19, x19, #0x3
  40c3d0:	mov	w20, w14
  40c3d4:	mov	w3, #0x0                   	// #0
  40c3d8:	mov	w23, #0x0                   	// #0
  40c3dc:	str	w14, [sp, #144]
  40c3e0:	b	40c244 <ferror@plt+0x92c4>
  40c3e4:	str	x27, [sp, #112]
  40c3e8:	mov	x27, #0x0                   	// #0
  40c3ec:	b	40c3a4 <ferror@plt+0x9424>
  40c3f0:	str	xzr, [sp, #232]
  40c3f4:	cmn	x24, #0x1
  40c3f8:	b.ne	40c430 <ferror@plt+0x94b0>  // b.any
  40c3fc:	mov	x0, x21
  40c400:	stp	x13, x6, [sp, #168]
  40c404:	str	x10, [sp, #184]
  40c408:	str	w7, [sp, #192]
  40c40c:	str	w18, [sp, #200]
  40c410:	str	w14, [sp, #208]
  40c414:	bl	402880 <strlen@plt>
  40c418:	ldp	x13, x6, [sp, #168]
  40c41c:	mov	x24, x0
  40c420:	ldr	w7, [sp, #192]
  40c424:	ldr	w18, [sp, #200]
  40c428:	ldr	w14, [sp, #208]
  40c42c:	ldr	x10, [sp, #184]
  40c430:	mov	w20, w14
  40c434:	mov	x15, #0x0                   	// #0
  40c438:	add	x2, x13, x15
  40c43c:	add	x3, sp, #0xe8
  40c440:	add	x1, x21, x2
  40c444:	add	x0, sp, #0xe4
  40c448:	sub	x2, x24, x2
  40c44c:	stp	x1, x13, [sp, #168]
  40c450:	stp	x15, x6, [sp, #184]
  40c454:	str	x10, [sp, #200]
  40c458:	stp	w7, w18, [sp, #208]
  40c45c:	str	w14, [sp, #216]
  40c460:	bl	40f2a8 <ferror@plt+0xc328>
  40c464:	ldp	w7, w18, [sp, #208]
  40c468:	mov	x3, x0
  40c46c:	ldr	w14, [sp, #216]
  40c470:	ldp	x13, x15, [sp, #176]
  40c474:	ldp	x6, x10, [sp, #192]
  40c478:	cbz	x0, 40c558 <ferror@plt+0x95d8>
  40c47c:	cmn	x0, #0x1
  40c480:	b.eq	40c4a8 <ferror@plt+0x9528>  // b.none
  40c484:	cmn	x0, #0x2
  40c488:	ldr	x1, [sp, #168]
  40c48c:	b.ne	40c4b8 <ferror@plt+0x9538>  // b.any
  40c490:	add	x0, x13, x15
  40c494:	cmp	x24, x0
  40c498:	b.ls	40c4a8 <ferror@plt+0x9528>  // b.plast
  40c49c:	ldr	x0, [sp, #136]
  40c4a0:	ldrb	w0, [x0, x15]
  40c4a4:	cbnz	w0, 40c4b0 <ferror@plt+0x9530>
  40c4a8:	mov	w20, #0x0                   	// #0
  40c4ac:	b	40c558 <ferror@plt+0x95d8>
  40c4b0:	add	x15, x15, #0x1
  40c4b4:	b	40c490 <ferror@plt+0x9510>
  40c4b8:	cmp	w28, #0x0
  40c4bc:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40c4c0:	b.ne	40c504 <ferror@plt+0x9584>  // b.any
  40c4c4:	mov	x0, #0x1                   	// #1
  40c4c8:	b	40c4fc <ferror@plt+0x957c>
  40c4cc:	ldrb	w2, [x1, x0]
  40c4d0:	sub	w2, w2, #0x5b
  40c4d4:	and	w2, w2, #0xff
  40c4d8:	cmp	w2, #0x21
  40c4dc:	b.hi	40c4f8 <ferror@plt+0x9578>  // b.pmore
  40c4e0:	mov	x4, #0x1                   	// #1
  40c4e4:	lsl	x2, x4, x2
  40c4e8:	mov	x4, #0x2b                  	// #43
  40c4ec:	movk	x4, #0x2, lsl #32
  40c4f0:	tst	x2, x4
  40c4f4:	b.ne	40bf54 <ferror@plt+0x8fd4>  // b.any
  40c4f8:	add	x0, x0, #0x1
  40c4fc:	cmp	x0, x3
  40c500:	b.ne	40c4cc <ferror@plt+0x954c>  // b.any
  40c504:	ldr	w0, [sp, #228]
  40c508:	stp	x15, x13, [sp, #168]
  40c50c:	stp	x6, x10, [sp, #184]
  40c510:	str	w7, [sp, #200]
  40c514:	stp	w18, w14, [sp, #208]
  40c518:	str	x3, [sp, #216]
  40c51c:	bl	402ed0 <iswprint@plt>
  40c520:	ldr	x15, [sp, #168]
  40c524:	cmp	w0, #0x0
  40c528:	ldr	x3, [sp, #216]
  40c52c:	csel	w20, w20, wzr, ne  // ne = any
  40c530:	add	x0, sp, #0xe8
  40c534:	add	x15, x15, x3
  40c538:	str	x15, [sp, #168]
  40c53c:	str	x15, [sp, #216]
  40c540:	bl	402c10 <mbsinit@plt>
  40c544:	ldr	w7, [sp, #200]
  40c548:	ldp	w18, w14, [sp, #208]
  40c54c:	ldp	x15, x13, [sp, #168]
  40c550:	ldp	x6, x10, [sp, #184]
  40c554:	cbz	w0, 40c438 <ferror@plt+0x94b8>
  40c558:	cmp	x15, #0x1
  40c55c:	b.ls	40c038 <ferror@plt+0x90b8>  // b.plast
  40c560:	eor	w0, w20, #0x1
  40c564:	add	x15, x13, x15
  40c568:	and	w0, w22, w0
  40c56c:	mov	w3, #0x0                   	// #0
  40c570:	and	w0, w0, #0xff
  40c574:	mov	w16, #0x5c                  	// #92
  40c578:	mov	w1, #0x27                  	// #39
  40c57c:	mov	w17, #0x24                  	// #36
  40c580:	cbz	w0, 40c674 <ferror@plt+0x96f4>
  40c584:	cmp	w25, #0x2
  40c588:	cset	w3, eq  // eq = none
  40c58c:	cbnz	w28, 40c74c <ferror@plt+0x97cc>
  40c590:	eor	w2, w23, #0x1
  40c594:	ands	w2, w3, w2
  40c598:	b.eq	40c5d0 <ferror@plt+0x9650>  // b.none
  40c59c:	cmp	x27, x19
  40c5a0:	b.ls	40c5a8 <ferror@plt+0x9628>  // b.plast
  40c5a4:	strb	w1, [x26, x19]
  40c5a8:	add	x3, x19, #0x1
  40c5ac:	cmp	x27, x3
  40c5b0:	b.ls	40c5b8 <ferror@plt+0x9638>  // b.plast
  40c5b4:	strb	w17, [x26, x3]
  40c5b8:	add	x3, x19, #0x2
  40c5bc:	cmp	x27, x3
  40c5c0:	b.ls	40c5c8 <ferror@plt+0x9648>  // b.plast
  40c5c4:	strb	w1, [x26, x3]
  40c5c8:	add	x19, x19, #0x3
  40c5cc:	mov	w23, w2
  40c5d0:	cmp	x27, x19
  40c5d4:	b.ls	40c5dc <ferror@plt+0x965c>  // b.plast
  40c5d8:	strb	w16, [x26, x19]
  40c5dc:	add	x3, x19, #0x1
  40c5e0:	cmp	x27, x3
  40c5e4:	b.ls	40c5f4 <ferror@plt+0x9674>  // b.plast
  40c5e8:	lsr	w2, w7, #6
  40c5ec:	add	w2, w2, #0x30
  40c5f0:	strb	w2, [x26, x3]
  40c5f4:	add	x3, x19, #0x2
  40c5f8:	cmp	x27, x3
  40c5fc:	b.ls	40c60c <ferror@plt+0x968c>  // b.plast
  40c600:	ubfx	x2, x7, #3, #3
  40c604:	add	w2, w2, #0x30
  40c608:	strb	w2, [x26, x3]
  40c60c:	and	w7, w7, #0x7
  40c610:	add	x19, x19, #0x3
  40c614:	add	w7, w7, #0x30
  40c618:	mov	w3, w0
  40c61c:	add	x2, x13, #0x1
  40c620:	eor	w14, w3, #0x1
  40c624:	and	w14, w23, w14
  40c628:	cmp	x2, x15
  40c62c:	b.cs	40c280 <ferror@plt+0x9300>  // b.hs, b.nlast
  40c630:	cbz	w14, 40c658 <ferror@plt+0x96d8>
  40c634:	cmp	x27, x19
  40c638:	b.ls	40c640 <ferror@plt+0x96c0>  // b.plast
  40c63c:	strb	w1, [x26, x19]
  40c640:	add	x13, x19, #0x1
  40c644:	cmp	x27, x13
  40c648:	b.ls	40c650 <ferror@plt+0x96d0>  // b.plast
  40c64c:	strb	w1, [x26, x13]
  40c650:	add	x19, x19, #0x2
  40c654:	mov	w23, #0x0                   	// #0
  40c658:	cmp	x27, x19
  40c65c:	b.ls	40c664 <ferror@plt+0x96e4>  // b.plast
  40c660:	strb	w7, [x26, x19]
  40c664:	ldrb	w7, [x21, x2]
  40c668:	add	x19, x19, #0x1
  40c66c:	mov	x13, x2
  40c670:	b	40c580 <ferror@plt+0x9600>
  40c674:	cbz	w18, 40c61c <ferror@plt+0x969c>
  40c678:	cmp	x27, x19
  40c67c:	b.ls	40c684 <ferror@plt+0x9704>  // b.plast
  40c680:	strb	w16, [x26, x19]
  40c684:	add	x19, x19, #0x1
  40c688:	mov	w18, #0x0                   	// #0
  40c68c:	b	40c61c <ferror@plt+0x969c>
  40c690:	mov	w3, w22
  40c694:	mov	w20, #0x0                   	// #0
  40c698:	mov	w7, #0x30                  	// #48
  40c69c:	b	40c244 <ferror@plt+0x92c4>
  40c6a0:	mov	w7, #0x3f                  	// #63
  40c6a4:	b	40c124 <ferror@plt+0x91a4>
  40c6a8:	mov	w7, w0
  40c6ac:	b	40c124 <ferror@plt+0x91a4>
  40c6b0:	mov	w20, w14
  40c6b4:	str	w14, [sp, #144]
  40c6b8:	b	40befc <ferror@plt+0x8f7c>
  40c6bc:	cmp	x24, x13
  40c6c0:	b	40bcac <ferror@plt+0x8d2c>
  40c6c4:	ldr	x0, [sp, #112]
  40c6c8:	cmp	x27, #0x0
  40c6cc:	cset	w28, eq  // eq = none
  40c6d0:	mov	w25, #0x2                   	// #2
  40c6d4:	cmp	x0, #0x0
  40c6d8:	csel	w20, w28, wzr, ne  // ne = any
  40c6dc:	cbnz	w20, 40bc50 <ferror@plt+0x8cd0>
  40c6e0:	ldr	w0, [sp, #144]
  40c6e4:	cmp	x6, #0x0
  40c6e8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40c6ec:	mov	x0, x19
  40c6f0:	b.ne	40c744 <ferror@plt+0x97c4>  // b.any
  40c6f4:	cmp	x27, x0
  40c6f8:	b.ls	40c700 <ferror@plt+0x9780>  // b.plast
  40c6fc:	strb	wzr, [x26, x0]
  40c700:	ldp	x29, x30, [sp, #16]
  40c704:	ldp	x19, x20, [sp, #32]
  40c708:	ldp	x21, x22, [sp, #48]
  40c70c:	ldp	x23, x24, [sp, #64]
  40c710:	ldp	x25, x26, [sp, #80]
  40c714:	ldp	x27, x28, [sp, #96]
  40c718:	add	sp, sp, #0xf0
  40c71c:	ret
  40c720:	mov	w0, w5
  40c724:	b	40c6e4 <ferror@plt+0x9764>
  40c728:	cmp	x27, x0
  40c72c:	b.ls	40c734 <ferror@plt+0x97b4>  // b.plast
  40c730:	strb	w1, [x26, x0]
  40c734:	add	x0, x0, #0x1
  40c738:	ldrb	w1, [x6, x0]
  40c73c:	cbnz	w1, 40c728 <ferror@plt+0x97a8>
  40c740:	b	40c6f4 <ferror@plt+0x9774>
  40c744:	sub	x6, x6, x19
  40c748:	b	40c738 <ferror@plt+0x97b8>
  40c74c:	mov	w22, w28
  40c750:	b	40c19c <ferror@plt+0x921c>
  40c754:	sub	sp, sp, #0x80
  40c758:	stp	x29, x30, [sp, #16]
  40c75c:	add	x29, sp, #0x10
  40c760:	stp	x19, x20, [sp, #32]
  40c764:	mov	w19, w0
  40c768:	mov	x20, x3
  40c76c:	stp	x21, x22, [sp, #48]
  40c770:	stp	x23, x24, [sp, #64]
  40c774:	mov	x24, x1
  40c778:	stp	x25, x26, [sp, #80]
  40c77c:	mov	x25, x2
  40c780:	stp	x27, x28, [sp, #96]
  40c784:	bl	402ef0 <__errno_location@plt>
  40c788:	mov	x23, x0
  40c78c:	ldr	w0, [x0]
  40c790:	adrp	x27, 426000 <_obstack_memory_used@@Base+0x16920>
  40c794:	str	w0, [sp, #116]
  40c798:	ldr	x28, [x27, #1248]
  40c79c:	tbz	w19, #31, 40c7a4 <ferror@plt+0x9824>
  40c7a0:	bl	402bd0 <abort@plt>
  40c7a4:	add	x22, x27, #0x4e0
  40c7a8:	ldr	w0, [x22, #8]
  40c7ac:	cmp	w0, w19
  40c7b0:	b.gt	40c81c <ferror@plt+0x989c>
  40c7b4:	mov	w0, #0x7fffffff            	// #2147483647
  40c7b8:	cmp	w19, w0
  40c7bc:	b.ne	40c7c4 <ferror@plt+0x9844>  // b.any
  40c7c0:	bl	40e538 <ferror@plt+0xb5b8>
  40c7c4:	add	x2, x22, #0x10
  40c7c8:	add	w26, w19, #0x1
  40c7cc:	cmp	x28, x2
  40c7d0:	str	x2, [sp, #120]
  40c7d4:	csel	x0, x28, xzr, ne  // ne = any
  40c7d8:	sbfiz	x1, x26, #4, #32
  40c7dc:	bl	40e3a4 <ferror@plt+0xb424>
  40c7e0:	str	x0, [x27, #1248]
  40c7e4:	ldr	x2, [sp, #120]
  40c7e8:	mov	x21, x0
  40c7ec:	cmp	x28, x2
  40c7f0:	b.ne	40c7fc <ferror@plt+0x987c>  // b.any
  40c7f4:	ldp	x0, x1, [x22, #16]
  40c7f8:	stp	x0, x1, [x21]
  40c7fc:	ldr	w0, [x22, #8]
  40c800:	mov	x28, x21
  40c804:	mov	w1, #0x0                   	// #0
  40c808:	sub	w2, w26, w0
  40c80c:	add	x0, x21, w0, sxtw #4
  40c810:	sbfiz	x2, x2, #4, #32
  40c814:	bl	402ae0 <memset@plt>
  40c818:	str	w26, [x22, #8]
  40c81c:	sbfiz	x9, x19, #4, #32
  40c820:	add	x19, x28, w19, sxtw #4
  40c824:	ldp	x7, x0, [x20, #40]
  40c828:	add	x27, x20, #0x8
  40c82c:	ldp	w4, w26, [x20]
  40c830:	mov	x6, x27
  40c834:	ldr	x22, [x28, x9]
  40c838:	orr	w26, w26, #0x1
  40c83c:	ldr	x21, [x19, #8]
  40c840:	str	x0, [sp]
  40c844:	mov	x3, x25
  40c848:	mov	x2, x24
  40c84c:	mov	x1, x22
  40c850:	mov	w5, w26
  40c854:	mov	x0, x21
  40c858:	str	x9, [sp, #120]
  40c85c:	bl	40bbc0 <ferror@plt+0x8c40>
  40c860:	cmp	x22, x0
  40c864:	b.hi	40c8c0 <ferror@plt+0x9940>  // b.pmore
  40c868:	ldr	x9, [sp, #120]
  40c86c:	add	x22, x0, #0x1
  40c870:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40c874:	add	x0, x0, #0xbc8
  40c878:	cmp	x21, x0
  40c87c:	str	x22, [x28, x9]
  40c880:	b.eq	40c88c <ferror@plt+0x990c>  // b.none
  40c884:	mov	x0, x21
  40c888:	bl	402ce0 <free@plt>
  40c88c:	mov	x0, x22
  40c890:	bl	40e344 <ferror@plt+0xb3c4>
  40c894:	ldp	x7, x1, [x20, #40]
  40c898:	mov	x21, x0
  40c89c:	ldr	w4, [x20]
  40c8a0:	mov	x6, x27
  40c8a4:	str	x0, [x19, #8]
  40c8a8:	mov	w5, w26
  40c8ac:	str	x1, [sp]
  40c8b0:	mov	x3, x25
  40c8b4:	mov	x2, x24
  40c8b8:	mov	x1, x22
  40c8bc:	bl	40bbc0 <ferror@plt+0x8c40>
  40c8c0:	ldr	w0, [sp, #116]
  40c8c4:	ldp	x29, x30, [sp, #16]
  40c8c8:	ldp	x19, x20, [sp, #32]
  40c8cc:	ldp	x25, x26, [sp, #80]
  40c8d0:	ldp	x27, x28, [sp, #96]
  40c8d4:	str	w0, [x23]
  40c8d8:	mov	x0, x21
  40c8dc:	ldp	x21, x22, [sp, #48]
  40c8e0:	ldp	x23, x24, [sp, #64]
  40c8e4:	add	sp, sp, #0x80
  40c8e8:	ret
  40c8ec:	stp	x29, x30, [sp, #-48]!
  40c8f0:	mov	x29, sp
  40c8f4:	stp	x19, x20, [sp, #16]
  40c8f8:	mov	x19, x0
  40c8fc:	str	x21, [sp, #32]
  40c900:	bl	402ef0 <__errno_location@plt>
  40c904:	ldr	w21, [x0]
  40c908:	mov	x20, x0
  40c90c:	cbnz	x19, 40c91c <ferror@plt+0x999c>
  40c910:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  40c914:	add	x19, x19, #0xbc8
  40c918:	add	x19, x19, #0x100
  40c91c:	mov	x0, x19
  40c920:	mov	x1, #0x38                  	// #56
  40c924:	bl	40e4e0 <ferror@plt+0xb560>
  40c928:	str	w21, [x20]
  40c92c:	ldp	x19, x20, [sp, #16]
  40c930:	ldr	x21, [sp, #32]
  40c934:	ldp	x29, x30, [sp], #48
  40c938:	ret
  40c93c:	cbnz	x0, 40c94c <ferror@plt+0x99cc>
  40c940:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40c944:	add	x0, x0, #0xbc8
  40c948:	add	x0, x0, #0x100
  40c94c:	ldr	w0, [x0]
  40c950:	ret
  40c954:	cbnz	x0, 40c964 <ferror@plt+0x99e4>
  40c958:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40c95c:	add	x0, x0, #0xbc8
  40c960:	add	x0, x0, #0x100
  40c964:	str	w1, [x0]
  40c968:	ret
  40c96c:	and	w1, w1, #0xff
  40c970:	cbnz	x0, 40c980 <ferror@plt+0x9a00>
  40c974:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40c978:	add	x0, x0, #0xbc8
  40c97c:	add	x0, x0, #0x100
  40c980:	ubfx	x4, x1, #5, #3
  40c984:	add	x0, x0, #0x8
  40c988:	and	w3, w1, #0x1f
  40c98c:	lsl	x4, x4, #2
  40c990:	ldr	w6, [x0, x4]
  40c994:	lsr	w5, w6, w3
  40c998:	eor	w1, w5, w2
  40c99c:	and	w1, w1, #0x1
  40c9a0:	lsl	w1, w1, w3
  40c9a4:	eor	w1, w1, w6
  40c9a8:	str	w1, [x0, x4]
  40c9ac:	and	w0, w5, #0x1
  40c9b0:	ret
  40c9b4:	mov	x2, x0
  40c9b8:	cbnz	x0, 40c9c8 <ferror@plt+0x9a48>
  40c9bc:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x16920>
  40c9c0:	add	x2, x2, #0xbc8
  40c9c4:	add	x2, x2, #0x100
  40c9c8:	ldr	w0, [x2, #4]
  40c9cc:	str	w1, [x2, #4]
  40c9d0:	ret
  40c9d4:	cbnz	x0, 40c9e4 <ferror@plt+0x9a64>
  40c9d8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40c9dc:	add	x0, x0, #0xbc8
  40c9e0:	add	x0, x0, #0x100
  40c9e4:	mov	w3, #0xa                   	// #10
  40c9e8:	str	w3, [x0]
  40c9ec:	cmp	x1, #0x0
  40c9f0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40c9f4:	b.ne	40ca04 <ferror@plt+0x9a84>  // b.any
  40c9f8:	stp	x29, x30, [sp, #-16]!
  40c9fc:	mov	x29, sp
  40ca00:	bl	402bd0 <abort@plt>
  40ca04:	stp	x1, x2, [x0, #40]
  40ca08:	ret
  40ca0c:	sub	sp, sp, #0x60
  40ca10:	stp	x29, x30, [sp, #16]
  40ca14:	add	x29, sp, #0x10
  40ca18:	stp	x19, x20, [sp, #32]
  40ca1c:	stp	x21, x22, [sp, #48]
  40ca20:	mov	x21, x0
  40ca24:	mov	x22, x1
  40ca28:	stp	x23, x24, [sp, #64]
  40ca2c:	mov	x23, x2
  40ca30:	mov	x24, x3
  40ca34:	str	x25, [sp, #80]
  40ca38:	cbnz	x4, 40ca9c <ferror@plt+0x9b1c>
  40ca3c:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  40ca40:	add	x19, x19, #0xbc8
  40ca44:	add	x19, x19, #0x100
  40ca48:	bl	402ef0 <__errno_location@plt>
  40ca4c:	ldr	w25, [x0]
  40ca50:	mov	x20, x0
  40ca54:	add	x6, x19, #0x8
  40ca58:	ldr	x0, [x19, #48]
  40ca5c:	str	x0, [sp]
  40ca60:	mov	x3, x24
  40ca64:	mov	x2, x23
  40ca68:	ldp	w4, w5, [x19]
  40ca6c:	mov	x1, x22
  40ca70:	ldr	x7, [x19, #40]
  40ca74:	mov	x0, x21
  40ca78:	bl	40bbc0 <ferror@plt+0x8c40>
  40ca7c:	ldp	x29, x30, [sp, #16]
  40ca80:	ldp	x21, x22, [sp, #48]
  40ca84:	ldp	x23, x24, [sp, #64]
  40ca88:	str	w25, [x20]
  40ca8c:	ldp	x19, x20, [sp, #32]
  40ca90:	ldr	x25, [sp, #80]
  40ca94:	add	sp, sp, #0x60
  40ca98:	ret
  40ca9c:	mov	x19, x4
  40caa0:	b	40ca48 <ferror@plt+0x9ac8>
  40caa4:	sub	sp, sp, #0x80
  40caa8:	stp	x29, x30, [sp, #16]
  40caac:	add	x29, sp, #0x10
  40cab0:	stp	x19, x20, [sp, #32]
  40cab4:	mov	x20, x2
  40cab8:	stp	x21, x22, [sp, #48]
  40cabc:	stp	x23, x24, [sp, #64]
  40cac0:	mov	x23, x0
  40cac4:	mov	x24, x1
  40cac8:	stp	x25, x26, [sp, #80]
  40cacc:	stp	x27, x28, [sp, #96]
  40cad0:	cbnz	x3, 40cba0 <ferror@plt+0x9c20>
  40cad4:	adrp	x19, 426000 <_obstack_memory_used@@Base+0x16920>
  40cad8:	add	x19, x19, #0xbc8
  40cadc:	add	x19, x19, #0x100
  40cae0:	bl	402ef0 <__errno_location@plt>
  40cae4:	ldr	w8, [x0]
  40cae8:	mov	x22, x0
  40caec:	ldr	w5, [x19, #4]
  40caf0:	ldr	x0, [x19, #48]
  40caf4:	str	x0, [sp]
  40caf8:	cmp	x20, #0x0
  40cafc:	add	x28, x19, #0x8
  40cb00:	cset	w25, eq  // eq = none
  40cb04:	ldr	w4, [x19]
  40cb08:	ldr	x7, [x19, #40]
  40cb0c:	orr	w25, w25, w5
  40cb10:	mov	x6, x28
  40cb14:	mov	x3, x24
  40cb18:	mov	x2, x23
  40cb1c:	mov	w5, w25
  40cb20:	mov	x1, #0x0                   	// #0
  40cb24:	mov	x0, #0x0                   	// #0
  40cb28:	str	w8, [sp, #124]
  40cb2c:	bl	40bbc0 <ferror@plt+0x8c40>
  40cb30:	add	x27, x0, #0x1
  40cb34:	mov	x21, x0
  40cb38:	mov	x0, x27
  40cb3c:	bl	40e344 <ferror@plt+0xb3c4>
  40cb40:	ldr	x1, [x19, #48]
  40cb44:	str	x1, [sp]
  40cb48:	mov	x26, x0
  40cb4c:	mov	x6, x28
  40cb50:	ldr	w4, [x19]
  40cb54:	mov	w5, w25
  40cb58:	ldr	x7, [x19, #40]
  40cb5c:	mov	x3, x24
  40cb60:	mov	x2, x23
  40cb64:	mov	x1, x27
  40cb68:	bl	40bbc0 <ferror@plt+0x8c40>
  40cb6c:	ldr	w8, [sp, #124]
  40cb70:	str	w8, [x22]
  40cb74:	cbz	x20, 40cb7c <ferror@plt+0x9bfc>
  40cb78:	str	x21, [x20]
  40cb7c:	mov	x0, x26
  40cb80:	ldp	x29, x30, [sp, #16]
  40cb84:	ldp	x19, x20, [sp, #32]
  40cb88:	ldp	x21, x22, [sp, #48]
  40cb8c:	ldp	x23, x24, [sp, #64]
  40cb90:	ldp	x25, x26, [sp, #80]
  40cb94:	ldp	x27, x28, [sp, #96]
  40cb98:	add	sp, sp, #0x80
  40cb9c:	ret
  40cba0:	mov	x19, x3
  40cba4:	b	40cae0 <ferror@plt+0x9b60>
  40cba8:	mov	x3, x2
  40cbac:	mov	x2, #0x0                   	// #0
  40cbb0:	b	40caa4 <ferror@plt+0x9b24>
  40cbb4:	stp	x29, x30, [sp, #-64]!
  40cbb8:	mov	x29, sp
  40cbbc:	stp	x19, x20, [sp, #16]
  40cbc0:	adrp	x20, 426000 <_obstack_memory_used@@Base+0x16920>
  40cbc4:	add	x19, x20, #0x4e0
  40cbc8:	stp	x21, x22, [sp, #32]
  40cbcc:	mov	x22, #0x0                   	// #0
  40cbd0:	ldr	x21, [x20, #1248]
  40cbd4:	str	x23, [sp, #48]
  40cbd8:	add	x23, x21, #0x8
  40cbdc:	ldr	w0, [x19, #8]
  40cbe0:	add	x22, x22, #0x1
  40cbe4:	cmp	w0, w22
  40cbe8:	b.gt	40cc40 <ferror@plt+0x9cc0>
  40cbec:	ldr	x0, [x21, #8]
  40cbf0:	adrp	x22, 426000 <_obstack_memory_used@@Base+0x16920>
  40cbf4:	add	x22, x22, #0xbc8
  40cbf8:	cmp	x0, x22
  40cbfc:	b.eq	40cc0c <ferror@plt+0x9c8c>  // b.none
  40cc00:	bl	402ce0 <free@plt>
  40cc04:	mov	x0, #0x100                 	// #256
  40cc08:	stp	x0, x22, [x19, #16]
  40cc0c:	add	x22, x19, #0x10
  40cc10:	cmp	x21, x22
  40cc14:	b.eq	40cc24 <ferror@plt+0x9ca4>  // b.none
  40cc18:	mov	x0, x21
  40cc1c:	bl	402ce0 <free@plt>
  40cc20:	str	x22, [x20, #1248]
  40cc24:	mov	w0, #0x1                   	// #1
  40cc28:	str	w0, [x19, #8]
  40cc2c:	ldp	x19, x20, [sp, #16]
  40cc30:	ldp	x21, x22, [sp, #32]
  40cc34:	ldr	x23, [sp, #48]
  40cc38:	ldp	x29, x30, [sp], #64
  40cc3c:	ret
  40cc40:	lsl	x0, x22, #4
  40cc44:	ldr	x0, [x23, x0]
  40cc48:	bl	402ce0 <free@plt>
  40cc4c:	b	40cbdc <ferror@plt+0x9c5c>
  40cc50:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x16920>
  40cc54:	add	x3, x3, #0xbc8
  40cc58:	add	x3, x3, #0x100
  40cc5c:	mov	x2, #0xffffffffffffffff    	// #-1
  40cc60:	b	40c754 <ferror@plt+0x97d4>
  40cc64:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x16920>
  40cc68:	add	x3, x3, #0xbc8
  40cc6c:	add	x3, x3, #0x100
  40cc70:	b	40c754 <ferror@plt+0x97d4>
  40cc74:	mov	x1, x0
  40cc78:	mov	w0, #0x0                   	// #0
  40cc7c:	b	40cc50 <ferror@plt+0x9cd0>
  40cc80:	mov	x2, x1
  40cc84:	mov	x1, x0
  40cc88:	mov	w0, #0x0                   	// #0
  40cc8c:	b	40cc64 <ferror@plt+0x9ce4>
  40cc90:	stp	x29, x30, [sp, #-96]!
  40cc94:	add	x8, sp, #0x28
  40cc98:	mov	x29, sp
  40cc9c:	stp	x19, x20, [sp, #16]
  40cca0:	mov	x20, x2
  40cca4:	mov	w19, w0
  40cca8:	mov	w0, w1
  40ccac:	bl	40ba4c <ferror@plt+0x8acc>
  40ccb0:	add	x3, sp, #0x28
  40ccb4:	mov	x1, x20
  40ccb8:	mov	w0, w19
  40ccbc:	mov	x2, #0xffffffffffffffff    	// #-1
  40ccc0:	bl	40c754 <ferror@plt+0x97d4>
  40ccc4:	ldp	x19, x20, [sp, #16]
  40ccc8:	ldp	x29, x30, [sp], #96
  40cccc:	ret
  40ccd0:	stp	x29, x30, [sp, #-112]!
  40ccd4:	add	x8, sp, #0x38
  40ccd8:	mov	x29, sp
  40ccdc:	stp	x19, x20, [sp, #16]
  40cce0:	mov	x20, x2
  40cce4:	mov	w19, w0
  40cce8:	mov	w0, w1
  40ccec:	str	x21, [sp, #32]
  40ccf0:	mov	x21, x3
  40ccf4:	bl	40ba4c <ferror@plt+0x8acc>
  40ccf8:	add	x3, sp, #0x38
  40ccfc:	mov	x2, x21
  40cd00:	mov	x1, x20
  40cd04:	mov	w0, w19
  40cd08:	bl	40c754 <ferror@plt+0x97d4>
  40cd0c:	ldp	x19, x20, [sp, #16]
  40cd10:	ldr	x21, [sp, #32]
  40cd14:	ldp	x29, x30, [sp], #112
  40cd18:	ret
  40cd1c:	mov	x2, x1
  40cd20:	mov	w1, w0
  40cd24:	mov	w0, #0x0                   	// #0
  40cd28:	b	40cc90 <ferror@plt+0x9d10>
  40cd2c:	mov	x3, x2
  40cd30:	mov	x2, x1
  40cd34:	mov	w1, w0
  40cd38:	mov	w0, #0x0                   	// #0
  40cd3c:	b	40ccd0 <ferror@plt+0x9d50>
  40cd40:	stp	x29, x30, [sp, #-112]!
  40cd44:	mov	x29, sp
  40cd48:	stp	x19, x20, [sp, #16]
  40cd4c:	mov	x20, x1
  40cd50:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40cd54:	add	x1, x1, #0xbc8
  40cd58:	mov	x19, x0
  40cd5c:	add	x1, x1, #0x100
  40cd60:	str	x21, [sp, #32]
  40cd64:	and	w21, w2, #0xff
  40cd68:	mov	x2, #0x38                  	// #56
  40cd6c:	add	x0, sp, x2
  40cd70:	bl	402820 <memcpy@plt>
  40cd74:	mov	w1, w21
  40cd78:	add	x0, sp, #0x38
  40cd7c:	mov	w2, #0x1                   	// #1
  40cd80:	bl	40c96c <ferror@plt+0x99ec>
  40cd84:	add	x3, sp, #0x38
  40cd88:	mov	x2, x20
  40cd8c:	mov	x1, x19
  40cd90:	mov	w0, #0x0                   	// #0
  40cd94:	bl	40c754 <ferror@plt+0x97d4>
  40cd98:	ldp	x19, x20, [sp, #16]
  40cd9c:	ldr	x21, [sp, #32]
  40cda0:	ldp	x29, x30, [sp], #112
  40cda4:	ret
  40cda8:	mov	w2, w1
  40cdac:	mov	x1, #0xffffffffffffffff    	// #-1
  40cdb0:	b	40cd40 <ferror@plt+0x9dc0>
  40cdb4:	mov	w1, #0x3a                  	// #58
  40cdb8:	b	40cda8 <ferror@plt+0x9e28>
  40cdbc:	mov	w2, #0x3a                  	// #58
  40cdc0:	b	40cd40 <ferror@plt+0x9dc0>
  40cdc4:	stp	x29, x30, [sp, #-160]!
  40cdc8:	add	x8, sp, #0x20
  40cdcc:	mov	x29, sp
  40cdd0:	stp	x19, x20, [sp, #16]
  40cdd4:	mov	x20, x2
  40cdd8:	mov	w19, w0
  40cddc:	mov	w0, w1
  40cde0:	bl	40ba4c <ferror@plt+0x8acc>
  40cde4:	add	x1, sp, #0x20
  40cde8:	add	x0, sp, #0x68
  40cdec:	mov	x2, #0x38                  	// #56
  40cdf0:	bl	402820 <memcpy@plt>
  40cdf4:	add	x0, sp, #0x68
  40cdf8:	mov	w2, #0x1                   	// #1
  40cdfc:	mov	w1, #0x3a                  	// #58
  40ce00:	bl	40c96c <ferror@plt+0x99ec>
  40ce04:	add	x3, sp, #0x68
  40ce08:	mov	x1, x20
  40ce0c:	mov	w0, w19
  40ce10:	mov	x2, #0xffffffffffffffff    	// #-1
  40ce14:	bl	40c754 <ferror@plt+0x97d4>
  40ce18:	ldp	x19, x20, [sp, #16]
  40ce1c:	ldp	x29, x30, [sp], #160
  40ce20:	ret
  40ce24:	stp	x29, x30, [sp, #-128]!
  40ce28:	mov	x29, sp
  40ce2c:	stp	x21, x22, [sp, #32]
  40ce30:	mov	x22, x1
  40ce34:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40ce38:	add	x1, x1, #0xbc8
  40ce3c:	mov	x21, x4
  40ce40:	add	x1, x1, #0x100
  40ce44:	stp	x19, x20, [sp, #16]
  40ce48:	mov	x20, x3
  40ce4c:	mov	w19, w0
  40ce50:	add	x0, sp, #0x48
  40ce54:	str	x23, [sp, #48]
  40ce58:	mov	x23, x2
  40ce5c:	mov	x2, #0x38                  	// #56
  40ce60:	bl	402820 <memcpy@plt>
  40ce64:	mov	x2, x23
  40ce68:	mov	x1, x22
  40ce6c:	add	x0, sp, #0x48
  40ce70:	bl	40c9d4 <ferror@plt+0x9a54>
  40ce74:	add	x3, sp, #0x48
  40ce78:	mov	x2, x21
  40ce7c:	mov	x1, x20
  40ce80:	mov	w0, w19
  40ce84:	bl	40c754 <ferror@plt+0x97d4>
  40ce88:	ldp	x19, x20, [sp, #16]
  40ce8c:	ldp	x21, x22, [sp, #32]
  40ce90:	ldr	x23, [sp, #48]
  40ce94:	ldp	x29, x30, [sp], #128
  40ce98:	ret
  40ce9c:	mov	x4, #0xffffffffffffffff    	// #-1
  40cea0:	b	40ce24 <ferror@plt+0x9ea4>
  40cea4:	mov	x3, x2
  40cea8:	mov	x2, x1
  40ceac:	mov	x1, x0
  40ceb0:	mov	w0, #0x0                   	// #0
  40ceb4:	b	40ce9c <ferror@plt+0x9f1c>
  40ceb8:	mov	x4, x3
  40cebc:	mov	x3, x2
  40cec0:	mov	x2, x1
  40cec4:	mov	x1, x0
  40cec8:	mov	w0, #0x0                   	// #0
  40cecc:	b	40ce24 <ferror@plt+0x9ea4>
  40ced0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0x16920>
  40ced4:	add	x3, x3, #0x4e0
  40ced8:	add	x3, x3, #0x20
  40cedc:	b	40c754 <ferror@plt+0x97d4>
  40cee0:	mov	x2, x1
  40cee4:	mov	x1, x0
  40cee8:	mov	w0, #0x0                   	// #0
  40ceec:	b	40ced0 <ferror@plt+0x9f50>
  40cef0:	mov	x2, #0xffffffffffffffff    	// #-1
  40cef4:	b	40ced0 <ferror@plt+0x9f50>
  40cef8:	mov	x1, x0
  40cefc:	mov	w0, #0x0                   	// #0
  40cf00:	b	40cef0 <ferror@plt+0x9f70>
  40cf04:	stp	x29, x30, [sp, #-48]!
  40cf08:	mov	x29, sp
  40cf0c:	stp	x19, x20, [sp, #16]
  40cf10:	stp	x21, x22, [sp, #32]
  40cf14:	cbz	x0, 40cf64 <ferror@plt+0x9fe4>
  40cf18:	mov	x20, x0
  40cf1c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40cf20:	ldr	w22, [x0, #1240]
  40cf24:	bl	402ef0 <__errno_location@plt>
  40cf28:	ldr	w21, [x0]
  40cf2c:	mov	w2, #0x5                   	// #5
  40cf30:	cbnz	w21, 40cf68 <ferror@plt+0x9fe8>
  40cf34:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40cf38:	add	x1, x1, #0x5f0
  40cf3c:	mov	x0, #0x0                   	// #0
  40cf40:	bl	402e60 <dcgettext@plt>
  40cf44:	mov	x19, x0
  40cf48:	mov	x0, x20
  40cf4c:	bl	40cef8 <ferror@plt+0x9f78>
  40cf50:	mov	x3, x0
  40cf54:	mov	x2, x19
  40cf58:	mov	w1, w21
  40cf5c:	mov	w0, w22
  40cf60:	bl	4028c0 <error@plt>
  40cf64:	bl	402bd0 <abort@plt>
  40cf68:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40cf6c:	add	x1, x1, #0x600
  40cf70:	b	40cf3c <ferror@plt+0x9fbc>
  40cf74:	stp	x29, x30, [sp, #-80]!
  40cf78:	mov	x29, sp
  40cf7c:	stp	x19, x20, [sp, #16]
  40cf80:	stp	x21, x22, [sp, #32]
  40cf84:	stp	x23, x24, [sp, #48]
  40cf88:	cbnz	x1, 40cfc0 <ferror@plt+0xa040>
  40cf8c:	mov	x0, #0x1038                	// #4152
  40cf90:	bl	40e344 <ferror@plt+0xb3c4>
  40cf94:	mov	x19, x0
  40cf98:	adrp	x0, 40c000 <ferror@plt+0x9080>
  40cf9c:	add	x0, x0, #0xf04
  40cfa0:	stp	xzr, x0, [x19]
  40cfa4:	str	xzr, [x19, #16]
  40cfa8:	mov	x0, x19
  40cfac:	ldp	x19, x20, [sp, #16]
  40cfb0:	ldp	x21, x22, [sp, #32]
  40cfb4:	ldp	x23, x24, [sp, #48]
  40cfb8:	ldp	x29, x30, [sp], #80
  40cfbc:	ret
  40cfc0:	mov	x21, x0
  40cfc4:	mov	x22, x1
  40cfc8:	cbz	x0, 40d024 <ferror@plt+0xa0a4>
  40cfcc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40cfd0:	add	x1, x1, #0x60f
  40cfd4:	bl	40fa10 <_obstack_memory_used@@Base+0x330>
  40cfd8:	mov	x19, x0
  40cfdc:	cbz	x0, 40cfa8 <ferror@plt+0xa028>
  40cfe0:	mov	x0, #0x1038                	// #4152
  40cfe4:	bl	40e344 <ferror@plt+0xb3c4>
  40cfe8:	mov	x20, x0
  40cfec:	adrp	x0, 40c000 <ferror@plt+0x9080>
  40cff0:	add	x0, x0, #0xf04
  40cff4:	stp	x19, x0, [x20]
  40cff8:	str	x21, [x20, #16]
  40cffc:	cbz	x19, 40d02c <ferror@plt+0xa0ac>
  40d000:	cmp	x22, #0x1, lsl #12
  40d004:	mov	x3, #0x1000                	// #4096
  40d008:	add	x1, x20, #0x18
  40d00c:	csel	x3, x22, x3, ls  // ls = plast
  40d010:	mov	x0, x19
  40d014:	mov	w2, #0x0                   	// #0
  40d018:	bl	402940 <setvbuf@plt>
  40d01c:	mov	x19, x20
  40d020:	b	40cfa8 <ferror@plt+0xa028>
  40d024:	mov	x19, #0x0                   	// #0
  40d028:	b	40cfe0 <ferror@plt+0xa060>
  40d02c:	mov	w1, #0x0                   	// #0
  40d030:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40d034:	add	x21, x20, #0x20
  40d038:	add	x0, x0, #0x612
  40d03c:	str	xzr, [x20, #24]
  40d040:	bl	402a50 <open@plt>
  40d044:	mov	w23, w0
  40d048:	tbnz	w0, #31, 40d180 <ferror@plt+0xa200>
  40d04c:	cmp	x22, #0x800
  40d050:	mov	x1, x21
  40d054:	mov	x3, #0x1018                	// #4120
  40d058:	mov	x2, #0x800                 	// #2048
  40d05c:	csel	x2, x22, x2, ls  // ls = plast
  40d060:	bl	402d50 <__read_chk@plt>
  40d064:	cmp	x0, #0x0
  40d068:	csel	x19, x0, xzr, ge  // ge = tcont
  40d06c:	mov	x22, x0
  40d070:	mov	w0, w23
  40d074:	bl	402b50 <close@plt>
  40d078:	cmp	x22, #0x7ff
  40d07c:	b.gt	40d0b4 <ferror@plt+0xa134>
  40d080:	mov	x22, #0x800                 	// #2048
  40d084:	sub	x22, x22, x19
  40d088:	cmp	x22, #0x10
  40d08c:	mov	x0, #0x10                  	// #16
  40d090:	mov	x1, #0x0                   	// #0
  40d094:	csel	x22, x22, x0, ls  // ls = plast
  40d098:	add	x0, sp, #0x40
  40d09c:	bl	402b00 <gettimeofday@plt>
  40d0a0:	add	x0, x21, x19
  40d0a4:	add	x19, x22, x19
  40d0a8:	mov	x2, x22
  40d0ac:	add	x1, sp, #0x40
  40d0b0:	bl	402820 <memcpy@plt>
  40d0b4:	cmp	x19, #0x7ff
  40d0b8:	b.gt	40d174 <ferror@plt+0xa1f4>
  40d0bc:	mov	x22, #0x800                 	// #2048
  40d0c0:	sub	x23, x22, x19
  40d0c4:	mov	x24, #0x4                   	// #4
  40d0c8:	cmp	x23, x24
  40d0cc:	csel	x23, x23, x24, ls  // ls = plast
  40d0d0:	bl	4029f0 <getpid@plt>
  40d0d4:	str	w0, [sp, #64]
  40d0d8:	mov	x2, x23
  40d0dc:	add	x0, x21, x19
  40d0e0:	add	x1, sp, #0x40
  40d0e4:	add	x19, x19, x23
  40d0e8:	bl	402820 <memcpy@plt>
  40d0ec:	cmp	x19, #0x7ff
  40d0f0:	b.hi	40d174 <ferror@plt+0xa1f4>  // b.pmore
  40d0f4:	sub	x23, x22, x19
  40d0f8:	cmp	x23, x24
  40d0fc:	csel	x23, x23, x24, ls  // ls = plast
  40d100:	bl	402a60 <getppid@plt>
  40d104:	str	w0, [sp, #64]
  40d108:	mov	x2, x23
  40d10c:	add	x0, x21, x19
  40d110:	add	x1, sp, #0x40
  40d114:	add	x19, x19, x23
  40d118:	bl	402820 <memcpy@plt>
  40d11c:	cmp	x19, #0x7ff
  40d120:	b.hi	40d174 <ferror@plt+0xa1f4>  // b.pmore
  40d124:	sub	x23, x22, x19
  40d128:	cmp	x23, x24
  40d12c:	csel	x23, x23, x24, ls  // ls = plast
  40d130:	bl	4028f0 <getuid@plt>
  40d134:	str	w0, [sp, #64]
  40d138:	mov	x2, x23
  40d13c:	add	x0, x21, x19
  40d140:	add	x1, sp, #0x40
  40d144:	add	x19, x19, x23
  40d148:	bl	402820 <memcpy@plt>
  40d14c:	cmp	x19, #0x7ff
  40d150:	b.hi	40d174 <ferror@plt+0xa1f4>  // b.pmore
  40d154:	bl	402d00 <getgid@plt>
  40d158:	str	w0, [sp, #64]
  40d15c:	sub	x2, x22, x19
  40d160:	add	x1, sp, #0x40
  40d164:	cmp	x2, x24
  40d168:	add	x0, x21, x19
  40d16c:	csel	x2, x2, x24, ls  // ls = plast
  40d170:	bl	402820 <memcpy@plt>
  40d174:	mov	x0, x21
  40d178:	bl	40d52c <ferror@plt+0xa5ac>
  40d17c:	b	40d01c <ferror@plt+0xa09c>
  40d180:	mov	x19, #0x0                   	// #0
  40d184:	b	40d080 <ferror@plt+0xa100>
  40d188:	str	x1, [x0, #8]
  40d18c:	ret
  40d190:	str	x1, [x0, #16]
  40d194:	ret
  40d198:	stp	x29, x30, [sp, #-80]!
  40d19c:	mov	x29, sp
  40d1a0:	stp	x21, x22, [sp, #32]
  40d1a4:	mov	x21, x0
  40d1a8:	ldr	x0, [x0]
  40d1ac:	stp	x19, x20, [sp, #16]
  40d1b0:	mov	x20, x1
  40d1b4:	stp	x23, x24, [sp, #48]
  40d1b8:	mov	x19, x2
  40d1bc:	str	x25, [sp, #64]
  40d1c0:	cbz	x0, 40d214 <ferror@plt+0xa294>
  40d1c4:	ldr	x3, [x21]
  40d1c8:	mov	x2, x19
  40d1cc:	mov	x1, #0x1                   	// #1
  40d1d0:	mov	x0, x20
  40d1d4:	bl	402c30 <fread_unlocked@plt>
  40d1d8:	mov	x22, x0
  40d1dc:	bl	402ef0 <__errno_location@plt>
  40d1e0:	add	x20, x20, x22
  40d1e4:	ldr	w24, [x0]
  40d1e8:	mov	x23, x0
  40d1ec:	subs	x19, x19, x22
  40d1f0:	b.eq	40d24c <ferror@plt+0xa2cc>  // b.none
  40d1f4:	ldr	x0, [x21]
  40d1f8:	bl	4028e0 <ferror_unlocked@plt>
  40d1fc:	cmp	w0, #0x0
  40d200:	ldp	x1, x0, [x21, #8]
  40d204:	csel	w24, w24, wzr, ne  // ne = any
  40d208:	str	w24, [x23]
  40d20c:	blr	x1
  40d210:	b	40d1c4 <ferror@plt+0xa244>
  40d214:	mov	x23, x21
  40d218:	add	x24, x21, #0x838
  40d21c:	add	x21, x21, #0x20
  40d220:	mov	x25, #0x800                 	// #2048
  40d224:	ldr	x22, [x23, #24]!
  40d228:	sub	x1, x25, x22
  40d22c:	add	x1, x24, x1
  40d230:	cmp	x19, x22
  40d234:	b.hi	40d264 <ferror@plt+0xa2e4>  // b.pmore
  40d238:	mov	x2, x19
  40d23c:	mov	x0, x20
  40d240:	sub	x19, x22, x19
  40d244:	bl	402820 <memcpy@plt>
  40d248:	str	x19, [x23]
  40d24c:	ldp	x19, x20, [sp, #16]
  40d250:	ldp	x21, x22, [sp, #32]
  40d254:	ldp	x23, x24, [sp, #48]
  40d258:	ldr	x25, [sp, #64]
  40d25c:	ldp	x29, x30, [sp], #80
  40d260:	ret
  40d264:	mov	x0, x20
  40d268:	add	x20, x20, x22
  40d26c:	mov	x2, x22
  40d270:	bl	402820 <memcpy@plt>
  40d274:	sub	x19, x19, x22
  40d278:	tst	x20, #0x7
  40d27c:	b.eq	40d294 <ferror@plt+0xa314>  // b.none
  40d280:	mov	x1, x24
  40d284:	mov	x0, x21
  40d288:	mov	x22, #0x800                 	// #2048
  40d28c:	bl	40d30c <ferror@plt+0xa38c>
  40d290:	b	40d228 <ferror@plt+0xa2a8>
  40d294:	add	x22, x20, x19
  40d298:	sub	x20, x22, x19
  40d29c:	cmp	x19, #0x7ff
  40d2a0:	b.ls	40d280 <ferror@plt+0xa300>  // b.plast
  40d2a4:	mov	x1, x20
  40d2a8:	mov	x0, x21
  40d2ac:	bl	40d30c <ferror@plt+0xa38c>
  40d2b0:	subs	x19, x19, #0x800
  40d2b4:	b.ne	40d298 <ferror@plt+0xa318>  // b.any
  40d2b8:	str	xzr, [x23]
  40d2bc:	b	40d24c <ferror@plt+0xa2cc>
  40d2c0:	stp	x29, x30, [sp, #-32]!
  40d2c4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d2c8:	mov	x1, #0x1038                	// #4152
  40d2cc:	mov	x29, sp
  40d2d0:	stp	x19, x20, [sp, #16]
  40d2d4:	mov	x19, x0
  40d2d8:	ldr	x20, [x0]
  40d2dc:	bl	402e00 <__explicit_bzero_chk@plt>
  40d2e0:	mov	x0, x19
  40d2e4:	bl	402ce0 <free@plt>
  40d2e8:	cbz	x20, 40d2fc <ferror@plt+0xa37c>
  40d2ec:	mov	x0, x20
  40d2f0:	ldp	x19, x20, [sp, #16]
  40d2f4:	ldp	x29, x30, [sp], #32
  40d2f8:	b	40ef28 <ferror@plt+0xbfa8>
  40d2fc:	mov	w0, #0x0                   	// #0
  40d300:	ldp	x19, x20, [sp, #16]
  40d304:	ldp	x29, x30, [sp], #32
  40d308:	ret
  40d30c:	ldr	x3, [x0, #2064]
  40d310:	add	x6, x0, #0x400
  40d314:	ldr	x4, [x0, #2056]
  40d318:	add	x3, x3, #0x1
  40d31c:	ldr	x2, [x0, #2048]
  40d320:	mov	x7, x1
  40d324:	mov	x5, x0
  40d328:	add	x4, x4, x3
  40d32c:	str	x3, [x0, #2064]
  40d330:	ldr	x3, [x5, #1024]
  40d334:	eor	x2, x2, x2, lsl #21
  40d338:	add	x5, x5, #0x20
  40d33c:	add	x7, x7, #0x20
  40d340:	sub	x3, x3, #0x1
  40d344:	sub	x2, x3, x2
  40d348:	ldur	x3, [x5, #-32]
  40d34c:	and	x8, x3, #0x7f8
  40d350:	ldr	x8, [x0, x8]
  40d354:	add	x8, x2, x8
  40d358:	eor	x2, x2, x2, lsr #5
  40d35c:	add	x4, x8, x4
  40d360:	stur	x4, [x5, #-32]
  40d364:	lsr	x4, x4, #8
  40d368:	and	x4, x4, #0x7f8
  40d36c:	ldr	x8, [x0, x4]
  40d370:	add	x8, x3, x8
  40d374:	stur	x8, [x7, #-32]
  40d378:	ldur	x4, [x5, #-24]
  40d37c:	ldr	x3, [x5, #1000]
  40d380:	add	x2, x2, x3
  40d384:	and	x3, x4, #0x7f8
  40d388:	ldr	x3, [x0, x3]
  40d38c:	add	x3, x2, x3
  40d390:	eor	x2, x2, x2, lsl #12
  40d394:	add	x3, x3, x8
  40d398:	stur	x3, [x5, #-24]
  40d39c:	lsr	x3, x3, #8
  40d3a0:	and	x3, x3, #0x7f8
  40d3a4:	ldr	x8, [x0, x3]
  40d3a8:	add	x8, x4, x8
  40d3ac:	stur	x8, [x7, #-24]
  40d3b0:	ldr	x3, [x5, #1008]
  40d3b4:	add	x2, x2, x3
  40d3b8:	ldur	x3, [x5, #-16]
  40d3bc:	and	x4, x3, #0x7f8
  40d3c0:	ldr	x4, [x0, x4]
  40d3c4:	add	x4, x2, x4
  40d3c8:	eor	x2, x2, x2, lsr #33
  40d3cc:	add	x4, x4, x8
  40d3d0:	stur	x4, [x5, #-16]
  40d3d4:	lsr	x4, x4, #8
  40d3d8:	and	x4, x4, #0x7f8
  40d3dc:	ldr	x8, [x0, x4]
  40d3e0:	add	x8, x3, x8
  40d3e4:	stur	x8, [x7, #-16]
  40d3e8:	ldur	x4, [x5, #-8]
  40d3ec:	ldr	x3, [x5, #1016]
  40d3f0:	add	x2, x2, x3
  40d3f4:	and	x3, x4, #0x7f8
  40d3f8:	ldr	x3, [x0, x3]
  40d3fc:	add	x3, x2, x3
  40d400:	add	x3, x3, x8
  40d404:	stur	x3, [x5, #-8]
  40d408:	cmp	x5, x6
  40d40c:	lsr	x3, x3, #8
  40d410:	and	x3, x3, #0x7f8
  40d414:	ldr	x3, [x0, x3]
  40d418:	add	x4, x4, x3
  40d41c:	stur	x4, [x7, #-8]
  40d420:	b.ne	40d330 <ferror@plt+0xa3b0>  // b.any
  40d424:	add	x1, x1, #0x400
  40d428:	mov	x5, x0
  40d42c:	eor	x3, x2, x2, lsl #21
  40d430:	add	x5, x5, #0x20
  40d434:	ldur	x2, [x5, #-32]
  40d438:	add	x1, x1, #0x20
  40d43c:	sub	x2, x2, #0x1
  40d440:	sub	x2, x2, x3
  40d444:	ldr	x3, [x5, #992]
  40d448:	and	x7, x3, #0x7f8
  40d44c:	ldr	x7, [x0, x7]
  40d450:	add	x7, x2, x7
  40d454:	eor	x2, x2, x2, lsr #5
  40d458:	add	x4, x7, x4
  40d45c:	str	x4, [x5, #992]
  40d460:	lsr	x4, x4, #8
  40d464:	and	x4, x4, #0x7f8
  40d468:	ldr	x7, [x0, x4]
  40d46c:	add	x7, x3, x7
  40d470:	stur	x7, [x1, #-32]
  40d474:	ldur	x3, [x5, #-24]
  40d478:	ldr	x4, [x5, #1000]
  40d47c:	add	x2, x2, x3
  40d480:	and	x3, x4, #0x7f8
  40d484:	ldr	x3, [x0, x3]
  40d488:	add	x3, x2, x3
  40d48c:	eor	x2, x2, x2, lsl #12
  40d490:	add	x3, x3, x7
  40d494:	str	x3, [x5, #1000]
  40d498:	lsr	x3, x3, #8
  40d49c:	and	x3, x3, #0x7f8
  40d4a0:	ldr	x7, [x0, x3]
  40d4a4:	add	x7, x4, x7
  40d4a8:	stur	x7, [x1, #-24]
  40d4ac:	ldur	x3, [x5, #-16]
  40d4b0:	add	x2, x2, x3
  40d4b4:	ldr	x3, [x5, #1008]
  40d4b8:	and	x4, x3, #0x7f8
  40d4bc:	ldr	x4, [x0, x4]
  40d4c0:	add	x4, x2, x4
  40d4c4:	eor	x2, x2, x2, lsr #33
  40d4c8:	add	x4, x4, x7
  40d4cc:	str	x4, [x5, #1008]
  40d4d0:	lsr	x4, x4, #8
  40d4d4:	and	x4, x4, #0x7f8
  40d4d8:	ldr	x7, [x0, x4]
  40d4dc:	add	x7, x3, x7
  40d4e0:	stur	x7, [x1, #-16]
  40d4e4:	ldur	x3, [x5, #-8]
  40d4e8:	ldr	x4, [x5, #1016]
  40d4ec:	add	x2, x2, x3
  40d4f0:	and	x3, x4, #0x7f8
  40d4f4:	ldr	x3, [x0, x3]
  40d4f8:	add	x3, x2, x3
  40d4fc:	add	x3, x3, x7
  40d500:	str	x3, [x5, #1016]
  40d504:	cmp	x6, x5
  40d508:	lsr	x3, x3, #8
  40d50c:	and	x3, x3, #0x7f8
  40d510:	ldr	x3, [x0, x3]
  40d514:	add	x4, x4, x3
  40d518:	stur	x4, [x1, #-8]
  40d51c:	b.ne	40d42c <ferror@plt+0xa4ac>  // b.any
  40d520:	str	x2, [x0, #2048]
  40d524:	str	x4, [x0, #2056]
  40d528:	ret
  40d52c:	mov	x3, #0xc0ab                	// #49323
  40d530:	mov	x1, #0x89ed                	// #35309
  40d534:	mov	x4, #0x9315                	// #37653
  40d538:	mov	x2, #0xe0ce                	// #57550
  40d53c:	mov	x9, #0x5524                	// #21796
  40d540:	mov	x6, #0x12a0                	// #4768
  40d544:	mov	x7, #0xc862                	// #51298
  40d548:	mov	x10, #0x4b7c                	// #19324
  40d54c:	movk	x3, #0x6c44, lsl #16
  40d550:	movk	x1, #0xcbfc, lsl #16
  40d554:	movk	x4, #0xa5a0, lsl #16
  40d558:	movk	x2, #0x8355, lsl #16
  40d55c:	movk	x9, #0x4a59, lsl #16
  40d560:	movk	x6, #0x3d47, lsl #16
  40d564:	movk	x7, #0xc73a, lsl #16
  40d568:	movk	x10, #0xa288, lsl #16
  40d56c:	movk	x3, #0x704f, lsl #32
  40d570:	movk	x1, #0x5bf2, lsl #32
  40d574:	movk	x4, #0x4a0f, lsl #32
  40d578:	movk	x2, #0x53db, lsl #32
  40d57c:	movk	x9, #0x2e82, lsl #32
  40d580:	movk	x6, #0xa505, lsl #32
  40d584:	movk	x7, #0xb322, lsl #32
  40d588:	movk	x10, #0x4677, lsl #32
  40d58c:	mov	x5, x0
  40d590:	add	x8, x0, #0x800
  40d594:	mov	x11, x0
  40d598:	movk	x3, #0x98f5, lsl #48
  40d59c:	movk	x1, #0xae98, lsl #48
  40d5a0:	movk	x4, #0x48fe, lsl #48
  40d5a4:	movk	x2, #0x82f0, lsl #48
  40d5a8:	movk	x9, #0xb29b, lsl #48
  40d5ac:	movk	x6, #0x8c0e, lsl #48
  40d5b0:	movk	x7, #0xb9f8, lsl #48
  40d5b4:	movk	x10, #0x647c, lsl #48
  40d5b8:	ldr	x12, [x11, #32]
  40d5bc:	add	x2, x2, x12
  40d5c0:	ldr	x12, [x11, #40]
  40d5c4:	add	x4, x4, x12
  40d5c8:	ldr	x12, [x11, #48]
  40d5cc:	add	x1, x1, x12
  40d5d0:	ldr	x12, [x11, #56]
  40d5d4:	add	x3, x3, x12
  40d5d8:	ldr	x12, [x11]
  40d5dc:	eor	x4, x4, x3, lsr #9
  40d5e0:	sub	x12, x12, x2
  40d5e4:	add	x10, x12, x10
  40d5e8:	ldr	x12, [x11, #8]
  40d5ec:	eor	x1, x1, x10, lsl #9
  40d5f0:	add	x3, x3, x10
  40d5f4:	sub	x12, x12, x4
  40d5f8:	add	x7, x12, x7
  40d5fc:	ldr	x12, [x11, #16]
  40d600:	eor	x3, x3, x7, lsr #23
  40d604:	add	x10, x10, x7
  40d608:	sub	x12, x12, x1
  40d60c:	add	x6, x12, x6
  40d610:	ldr	x12, [x11, #24]
  40d614:	eor	x10, x10, x6, lsl #15
  40d618:	add	x7, x7, x6
  40d61c:	sub	x2, x2, x10
  40d620:	sub	x12, x12, x3
  40d624:	add	x9, x12, x9
  40d628:	add	x6, x6, x9
  40d62c:	eor	x7, x7, x9, lsr #14
  40d630:	eor	x6, x6, x2, lsl #20
  40d634:	sub	x4, x4, x7
  40d638:	add	x9, x9, x2
  40d63c:	sub	x1, x1, x6
  40d640:	add	x2, x2, x4
  40d644:	eor	x9, x9, x4, lsr #17
  40d648:	add	x4, x4, x1
  40d64c:	sub	x3, x3, x9
  40d650:	eor	x2, x2, x1, lsl #14
  40d654:	add	x1, x1, x3
  40d658:	stp	x10, x7, [x11]
  40d65c:	stp	x6, x9, [x11, #16]
  40d660:	stp	x2, x4, [x11, #32]
  40d664:	stp	x1, x3, [x11, #48]
  40d668:	add	x11, x11, #0x40
  40d66c:	cmp	x8, x11
  40d670:	b.ne	40d5b8 <ferror@plt+0xa638>  // b.any
  40d674:	ldr	x11, [x5, #32]
  40d678:	add	x2, x2, x11
  40d67c:	ldr	x11, [x5, #40]
  40d680:	add	x4, x4, x11
  40d684:	ldr	x11, [x5, #48]
  40d688:	add	x1, x1, x11
  40d68c:	ldr	x11, [x5, #56]
  40d690:	add	x3, x3, x11
  40d694:	ldr	x11, [x5]
  40d698:	eor	x4, x4, x3, lsr #9
  40d69c:	sub	x11, x11, x2
  40d6a0:	add	x10, x11, x10
  40d6a4:	ldr	x11, [x5, #8]
  40d6a8:	eor	x1, x1, x10, lsl #9
  40d6ac:	add	x3, x3, x10
  40d6b0:	sub	x11, x11, x4
  40d6b4:	add	x7, x11, x7
  40d6b8:	ldr	x11, [x5, #16]
  40d6bc:	eor	x3, x3, x7, lsr #23
  40d6c0:	add	x10, x10, x7
  40d6c4:	sub	x11, x11, x1
  40d6c8:	add	x6, x11, x6
  40d6cc:	ldr	x11, [x5, #24]
  40d6d0:	eor	x10, x10, x6, lsl #15
  40d6d4:	add	x7, x7, x6
  40d6d8:	sub	x2, x2, x10
  40d6dc:	sub	x11, x11, x3
  40d6e0:	add	x9, x11, x9
  40d6e4:	add	x6, x6, x9
  40d6e8:	eor	x7, x7, x9, lsr #14
  40d6ec:	eor	x6, x6, x2, lsl #20
  40d6f0:	sub	x4, x4, x7
  40d6f4:	add	x9, x9, x2
  40d6f8:	sub	x1, x1, x6
  40d6fc:	add	x2, x2, x4
  40d700:	eor	x9, x9, x4, lsr #17
  40d704:	add	x4, x4, x1
  40d708:	sub	x3, x3, x9
  40d70c:	eor	x2, x2, x1, lsl #14
  40d710:	add	x1, x1, x3
  40d714:	stp	x10, x7, [x5]
  40d718:	stp	x6, x9, [x5, #16]
  40d71c:	stp	x2, x4, [x5, #32]
  40d720:	stp	x1, x3, [x5, #48]
  40d724:	add	x5, x5, #0x40
  40d728:	cmp	x8, x5
  40d72c:	b.ne	40d674 <ferror@plt+0xa6f4>  // b.any
  40d730:	str	xzr, [x0, #2048]
  40d734:	str	xzr, [x0, #2056]
  40d738:	str	xzr, [x0, #2064]
  40d73c:	ret
  40d740:	stp	x29, x30, [sp, #-48]!
  40d744:	add	x1, x0, #0x18
  40d748:	mov	x29, sp
  40d74c:	stp	x19, x20, [sp, #16]
  40d750:	mov	x19, x0
  40d754:	stp	x21, x22, [sp, #32]
  40d758:	ldp	x22, x0, [x1, #16]
  40d75c:	sub	x21, x0, x22
  40d760:	cmp	x0, x22
  40d764:	sub	x21, x21, #0x1
  40d768:	b.ne	40d778 <ferror@plt+0xa7f8>  // b.any
  40d76c:	ldrb	w2, [x1, #80]
  40d770:	orr	w2, w2, #0x2
  40d774:	strb	w2, [x1, #80]
  40d778:	ldr	x2, [x1, #48]
  40d77c:	add	x20, x19, #0x70
  40d780:	ldr	x3, [x1, #32]
  40d784:	add	x0, x0, x2
  40d788:	bic	x2, x0, x2
  40d78c:	ldr	x0, [x1, #8]
  40d790:	sub	x4, x2, x0
  40d794:	sub	x0, x3, x0
  40d798:	cmp	x4, x0
  40d79c:	csel	x2, x2, x3, ls  // ls = plast
  40d7a0:	ldr	x0, [x20, #32]
  40d7a4:	stp	x2, x2, [x1, #16]
  40d7a8:	ldr	x1, [x20, #24]
  40d7ac:	sub	x0, x0, x1
  40d7b0:	cmp	x0, #0x7
  40d7b4:	b.hi	40d7c4 <ferror@plt+0xa844>  // b.pmore
  40d7b8:	mov	x0, x20
  40d7bc:	mov	x1, #0x8                   	// #8
  40d7c0:	bl	40f52c <_obstack_newchunk@@Base>
  40d7c4:	ldr	x0, [x20, #24]
  40d7c8:	str	x22, [x0]
  40d7cc:	ldr	x0, [x20, #24]
  40d7d0:	add	x0, x0, #0x8
  40d7d4:	str	x0, [x20, #24]
  40d7d8:	add	x20, x19, #0xc8
  40d7dc:	ldp	x1, x0, [x20, #24]
  40d7e0:	sub	x0, x0, x1
  40d7e4:	cmp	x0, #0x7
  40d7e8:	b.hi	40d7f8 <ferror@plt+0xa878>  // b.pmore
  40d7ec:	mov	x0, x20
  40d7f0:	mov	x1, #0x8                   	// #8
  40d7f4:	bl	40f52c <_obstack_newchunk@@Base>
  40d7f8:	ldr	x0, [x20, #24]
  40d7fc:	str	x21, [x0]
  40d800:	ldr	x0, [x20, #24]
  40d804:	ldp	x21, x22, [sp, #32]
  40d808:	add	x0, x0, #0x8
  40d80c:	str	x0, [x20, #24]
  40d810:	ldr	x0, [x19]
  40d814:	add	x0, x0, #0x1
  40d818:	str	x0, [x19]
  40d81c:	ldp	x19, x20, [sp, #16]
  40d820:	ldp	x29, x30, [sp], #48
  40d824:	ret
  40d828:	stp	x29, x30, [sp, #-48]!
  40d82c:	mov	x2, #0x0                   	// #0
  40d830:	mov	x1, #0x0                   	// #0
  40d834:	mov	x29, sp
  40d838:	stp	x19, x20, [sp, #16]
  40d83c:	mov	x19, x0
  40d840:	adrp	x20, 402000 <mbrtowc@plt-0x810>
  40d844:	add	x20, x20, #0xa20
  40d848:	add	x0, x0, #0x18
  40d84c:	stp	xzr, xzr, [x19]
  40d850:	mov	x3, x20
  40d854:	str	xzr, [x19, #16]
  40d858:	str	x21, [sp, #32]
  40d85c:	adrp	x21, 402000 <mbrtowc@plt-0x810>
  40d860:	add	x21, x21, #0xce0
  40d864:	mov	x4, x21
  40d868:	bl	40f500 <_obstack_begin@@Base>
  40d86c:	mov	x4, x21
  40d870:	mov	x3, x20
  40d874:	add	x0, x19, #0x70
  40d878:	mov	x2, #0x0                   	// #0
  40d87c:	mov	x1, #0x0                   	// #0
  40d880:	bl	40f500 <_obstack_begin@@Base>
  40d884:	mov	x4, x21
  40d888:	mov	x3, x20
  40d88c:	add	x0, x19, #0xc8
  40d890:	mov	x2, #0x0                   	// #0
  40d894:	ldp	x19, x20, [sp, #16]
  40d898:	mov	x1, #0x0                   	// #0
  40d89c:	ldr	x21, [sp, #32]
  40d8a0:	ldp	x29, x30, [sp], #48
  40d8a4:	b	40f500 <_obstack_begin@@Base>
  40d8a8:	stp	x29, x30, [sp, #-32]!
  40d8ac:	mov	x1, #0x0                   	// #0
  40d8b0:	mov	x29, sp
  40d8b4:	str	x19, [sp, #16]
  40d8b8:	mov	x19, x0
  40d8bc:	add	x0, x0, #0x18
  40d8c0:	bl	40f66c <_obstack_free@@Base>
  40d8c4:	add	x0, x19, #0x70
  40d8c8:	mov	x1, #0x0                   	// #0
  40d8cc:	bl	40f66c <_obstack_free@@Base>
  40d8d0:	add	x0, x19, #0xc8
  40d8d4:	mov	x1, #0x0                   	// #0
  40d8d8:	ldr	x19, [sp, #16]
  40d8dc:	ldp	x29, x30, [sp], #32
  40d8e0:	b	40f66c <_obstack_free@@Base>
  40d8e4:	stp	x29, x30, [sp, #-48]!
  40d8e8:	mov	x29, sp
  40d8ec:	stp	x19, x20, [sp, #16]
  40d8f0:	mov	x20, x1
  40d8f4:	add	x19, x1, #0x18
  40d8f8:	stp	x21, x22, [sp, #32]
  40d8fc:	mov	x21, x0
  40d900:	mov	x0, x21
  40d904:	bl	402ac0 <fgetc@plt>
  40d908:	mov	w22, w0
  40d90c:	cmn	w0, #0x1
  40d910:	b.ne	40da28 <ferror@plt+0xaaa8>  // b.any
  40d914:	ldp	x1, x0, [x19, #16]
  40d918:	cmp	x0, x1
  40d91c:	b.eq	40d950 <ferror@plt+0xa9d0>  // b.none
  40d920:	ldr	x1, [x19, #32]
  40d924:	cmp	x0, x1
  40d928:	b.ne	40d938 <ferror@plt+0xa9b8>  // b.any
  40d92c:	mov	x0, x19
  40d930:	mov	x1, #0x1                   	// #1
  40d934:	bl	40f52c <_obstack_newchunk@@Base>
  40d938:	ldr	x0, [x19, #24]
  40d93c:	add	x1, x0, #0x1
  40d940:	str	x1, [x19, #24]
  40d944:	strb	wzr, [x0]
  40d948:	mov	x0, x20
  40d94c:	bl	40d740 <ferror@plt+0xa7c0>
  40d950:	add	x19, x20, #0x70
  40d954:	ldp	x1, x0, [x19, #24]
  40d958:	sub	x0, x0, x1
  40d95c:	cmp	x0, #0x7
  40d960:	b.hi	40d970 <ferror@plt+0xa9f0>  // b.pmore
  40d964:	mov	x0, x19
  40d968:	mov	x1, #0x8                   	// #8
  40d96c:	bl	40f52c <_obstack_newchunk@@Base>
  40d970:	ldr	x0, [x19, #24]
  40d974:	str	xzr, [x0]
  40d978:	ldp	x2, x0, [x19, #16]
  40d97c:	add	x0, x0, #0x8
  40d980:	cmp	x0, x2
  40d984:	b.ne	40d994 <ferror@plt+0xaa14>  // b.any
  40d988:	ldrb	w1, [x19, #80]
  40d98c:	orr	w1, w1, #0x2
  40d990:	strb	w1, [x19, #80]
  40d994:	ldr	x1, [x19, #48]
  40d998:	ldr	x3, [x19, #32]
  40d99c:	add	x0, x0, x1
  40d9a0:	bic	x1, x0, x1
  40d9a4:	ldr	x0, [x19, #8]
  40d9a8:	sub	x4, x1, x0
  40d9ac:	sub	x0, x3, x0
  40d9b0:	cmp	x4, x0
  40d9b4:	csel	x1, x1, x3, ls  // ls = plast
  40d9b8:	stp	x1, x1, [x19, #16]
  40d9bc:	add	x1, x20, #0xc8
  40d9c0:	ldp	x3, x0, [x1, #16]
  40d9c4:	str	x2, [x20, #8]
  40d9c8:	cmp	x0, x3
  40d9cc:	b.ne	40d9dc <ferror@plt+0xaa5c>  // b.any
  40d9d0:	ldrb	w2, [x1, #80]
  40d9d4:	orr	w2, w2, #0x2
  40d9d8:	strb	w2, [x1, #80]
  40d9dc:	ldr	x2, [x1, #48]
  40d9e0:	ldr	x4, [x1, #32]
  40d9e4:	add	x0, x0, x2
  40d9e8:	bic	x2, x0, x2
  40d9ec:	ldr	x0, [x1, #8]
  40d9f0:	sub	x5, x2, x0
  40d9f4:	sub	x0, x4, x0
  40d9f8:	cmp	x5, x0
  40d9fc:	mov	x0, x21
  40da00:	csel	x2, x2, x4, ls  // ls = plast
  40da04:	stp	x2, x2, [x1, #16]
  40da08:	str	x3, [x20, #16]
  40da0c:	bl	402f80 <ferror@plt>
  40da10:	cmp	w0, #0x0
  40da14:	cset	w0, eq  // eq = none
  40da18:	ldp	x19, x20, [sp, #16]
  40da1c:	ldp	x21, x22, [sp, #32]
  40da20:	ldp	x29, x30, [sp], #48
  40da24:	ret
  40da28:	ldp	x0, x1, [x19, #24]
  40da2c:	cmp	x1, x0
  40da30:	b.ne	40da40 <ferror@plt+0xaac0>  // b.any
  40da34:	mov	x0, x19
  40da38:	mov	x1, #0x1                   	// #1
  40da3c:	bl	40f52c <_obstack_newchunk@@Base>
  40da40:	ldr	x0, [x19, #24]
  40da44:	add	x1, x0, #0x1
  40da48:	str	x1, [x19, #24]
  40da4c:	strb	w22, [x0]
  40da50:	cbnz	w22, 40d900 <ferror@plt+0xa980>
  40da54:	mov	x0, x20
  40da58:	bl	40d740 <ferror@plt+0xa7c0>
  40da5c:	b	40d900 <ferror@plt+0xa980>
  40da60:	stp	x29, x30, [sp, #-16]!
  40da64:	mov	x29, sp
  40da68:	bl	402e20 <mkstemp@plt>
  40da6c:	ldp	x29, x30, [sp], #16
  40da70:	b	40de38 <ferror@plt+0xaeb8>
  40da74:	stp	x29, x30, [sp, #-32]!
  40da78:	mov	x29, sp
  40da7c:	str	x19, [sp, #16]
  40da80:	mov	w19, w1
  40da84:	bl	402be0 <mkostemp@plt>
  40da88:	mov	w1, w19
  40da8c:	ldr	x19, [sp, #16]
  40da90:	ldp	x29, x30, [sp], #32
  40da94:	b	40f9a8 <_obstack_memory_used@@Base+0x2c8>
  40da98:	ldrb	w3, [x0]
  40da9c:	and	w4, w2, #0xff
  40daa0:	cmp	w3, w2, uxtb
  40daa4:	ldrb	w2, [x1]
  40daa8:	b.ne	40db38 <ferror@plt+0xabb8>  // b.any
  40daac:	cmp	w2, w3
  40dab0:	b.ne	40db18 <ferror@plt+0xab98>  // b.any
  40dab4:	ldrb	w2, [x0, #1]!
  40dab8:	ldrb	w3, [x1, #1]!
  40dabc:	sub	w5, w2, #0x30
  40dac0:	cmp	w2, w3
  40dac4:	b.eq	40dae4 <ferror@plt+0xab64>  // b.none
  40dac8:	sub	w4, w3, #0x30
  40dacc:	cmp	w5, #0x9
  40dad0:	b.hi	40daf4 <ferror@plt+0xab74>  // b.pmore
  40dad4:	cmp	w4, #0x9
  40dad8:	b.hi	40db1c <ferror@plt+0xab9c>  // b.pmore
  40dadc:	sub	w0, w2, w3
  40dae0:	ret
  40dae4:	cmp	w5, #0x9
  40dae8:	b.ls	40dab4 <ferror@plt+0xab34>  // b.plast
  40daec:	mov	w0, #0x0                   	// #0
  40daf0:	b	40dae0 <ferror@plt+0xab60>
  40daf4:	cmp	w4, #0x9
  40daf8:	b.hi	40daec <ferror@plt+0xab6c>  // b.pmore
  40dafc:	ldrb	w0, [x1]
  40db00:	cmp	w0, #0x30
  40db04:	b.eq	40db40 <ferror@plt+0xabc0>  // b.none
  40db08:	sub	w0, w0, #0x30
  40db0c:	cmp	w0, #0x9
  40db10:	csetm	w0, ls  // ls = plast
  40db14:	b	40dae0 <ferror@plt+0xab60>
  40db18:	add	x0, x0, #0x1
  40db1c:	ldrb	w1, [x0]
  40db20:	cmp	w1, #0x30
  40db24:	b.eq	40db18 <ferror@plt+0xab98>  // b.none
  40db28:	sub	w1, w1, #0x30
  40db2c:	cmp	w1, #0x9
  40db30:	cset	w0, ls  // ls = plast
  40db34:	b	40dae0 <ferror@plt+0xab60>
  40db38:	cmp	w2, w4
  40db3c:	b.ne	40daec <ferror@plt+0xab6c>  // b.any
  40db40:	add	x1, x1, #0x1
  40db44:	b	40dafc <ferror@plt+0xab7c>
  40db48:	mov	x5, x1
  40db4c:	ldrb	w1, [x0]
  40db50:	cmp	w1, #0x2d
  40db54:	ldrb	w4, [x5]
  40db58:	b.ne	40dcc4 <ferror@plt+0xad44>  // b.any
  40db5c:	ldrb	w6, [x0, #1]!
  40db60:	cmp	w6, #0x30
  40db64:	b.eq	40db5c <ferror@plt+0xabdc>  // b.none
  40db68:	cmp	w3, w6
  40db6c:	b.eq	40db5c <ferror@plt+0xabdc>  // b.none
  40db70:	cmp	w4, #0x2d
  40db74:	b.eq	40dbd8 <ferror@plt+0xac58>  // b.none
  40db78:	cmp	w2, w6
  40db7c:	b.ne	40db8c <ferror@plt+0xac0c>  // b.any
  40db80:	ldrb	w6, [x0, #1]!
  40db84:	cmp	w6, #0x30
  40db88:	b	40db7c <ferror@plt+0xabfc>
  40db8c:	sub	w6, w6, #0x30
  40db90:	cmp	w6, #0x9
  40db94:	b.hi	40dba4 <ferror@plt+0xac24>  // b.pmore
  40db98:	mov	w0, #0xffffffff            	// #-1
  40db9c:	b	40dbd4 <ferror@plt+0xac54>
  40dba0:	ldrb	w4, [x5, #1]!
  40dba4:	cmp	w4, #0x30
  40dba8:	b.eq	40dba0 <ferror@plt+0xac20>  // b.none
  40dbac:	cmp	w3, w4
  40dbb0:	b.eq	40dba0 <ferror@plt+0xac20>  // b.none
  40dbb4:	cmp	w2, w4
  40dbb8:	b.ne	40dbc8 <ferror@plt+0xac48>  // b.any
  40dbbc:	ldrb	w4, [x5, #1]!
  40dbc0:	cmp	w4, #0x30
  40dbc4:	b	40dbb8 <ferror@plt+0xac38>
  40dbc8:	sub	w4, w4, #0x30
  40dbcc:	cmp	w4, #0x9
  40dbd0:	csetm	w0, ls  // ls = plast
  40dbd4:	ret
  40dbd8:	ldrb	w4, [x5, #1]!
  40dbdc:	cmp	w4, #0x30
  40dbe0:	b.eq	40dbd8 <ferror@plt+0xac58>  // b.none
  40dbe4:	cmp	w3, w4
  40dbe8:	b.eq	40dbd8 <ferror@plt+0xac58>  // b.none
  40dbec:	cmp	w6, w4
  40dbf0:	b.ne	40dc00 <ferror@plt+0xac80>  // b.any
  40dbf4:	sub	w1, w6, #0x30
  40dbf8:	cmp	w1, #0x9
  40dbfc:	b.ls	40dc64 <ferror@plt+0xace4>  // b.plast
  40dc00:	mov	w7, w6
  40dc04:	cmp	w2, w6
  40dc08:	b.ne	40dc18 <ferror@plt+0xac98>  // b.any
  40dc0c:	sub	w1, w4, #0x30
  40dc10:	cmp	w1, #0x9
  40dc14:	b.hi	40dc80 <ferror@plt+0xad00>  // b.pmore
  40dc18:	mov	w1, w4
  40dc1c:	cmp	w2, w4
  40dc20:	b.ne	40dc30 <ferror@plt+0xacb0>  // b.any
  40dc24:	sub	w8, w6, #0x30
  40dc28:	cmp	w8, #0x9
  40dc2c:	b.hi	40dc80 <ferror@plt+0xad00>  // b.pmore
  40dc30:	mov	x2, #0x0                   	// #0
  40dc34:	sub	w6, w6, #0x30
  40dc38:	cmp	w6, #0x9
  40dc3c:	b.ls	40dc8c <ferror@plt+0xad0c>  // b.plast
  40dc40:	mov	x6, #0x0                   	// #0
  40dc44:	sub	w4, w4, #0x30
  40dc48:	cmp	w4, #0x9
  40dc4c:	b.ls	40dca0 <ferror@plt+0xad20>  // b.plast
  40dc50:	cmp	x2, x6
  40dc54:	b.eq	40dcb4 <ferror@plt+0xad34>  // b.none
  40dc58:	mov	w0, #0x1                   	// #1
  40dc5c:	cneg	w0, w0, cs  // cs = hs, nlast
  40dc60:	b	40dbd4 <ferror@plt+0xac54>
  40dc64:	ldrb	w6, [x0, #1]!
  40dc68:	cmp	w3, w6
  40dc6c:	b.eq	40dc64 <ferror@plt+0xace4>  // b.none
  40dc70:	ldrb	w4, [x5, #1]!
  40dc74:	cmp	w3, w4
  40dc78:	b.eq	40dc70 <ferror@plt+0xacf0>  // b.none
  40dc7c:	b	40dbec <ferror@plt+0xac6c>
  40dc80:	mov	x1, x0
  40dc84:	mov	x0, x5
  40dc88:	b	40da98 <ferror@plt+0xab18>
  40dc8c:	ldrb	w6, [x0, #1]!
  40dc90:	cmp	w3, w6
  40dc94:	b.eq	40dc8c <ferror@plt+0xad0c>  // b.none
  40dc98:	add	x2, x2, #0x1
  40dc9c:	b	40dc34 <ferror@plt+0xacb4>
  40dca0:	ldrb	w4, [x5, #1]!
  40dca4:	cmp	w3, w4
  40dca8:	b.eq	40dca0 <ferror@plt+0xad20>  // b.none
  40dcac:	add	x6, x6, #0x1
  40dcb0:	b	40dc44 <ferror@plt+0xacc4>
  40dcb4:	sub	w0, w1, w7
  40dcb8:	cmp	x2, #0x0
  40dcbc:	csel	w0, w0, wzr, ne  // ne = any
  40dcc0:	b	40dbd4 <ferror@plt+0xac54>
  40dcc4:	cmp	w4, #0x2d
  40dcc8:	b.ne	40dd40 <ferror@plt+0xadc0>  // b.any
  40dccc:	ldrb	w4, [x5, #1]!
  40dcd0:	cmp	w4, #0x30
  40dcd4:	b.eq	40dccc <ferror@plt+0xad4c>  // b.none
  40dcd8:	cmp	w3, w4
  40dcdc:	b.eq	40dccc <ferror@plt+0xad4c>  // b.none
  40dce0:	cmp	w2, w4
  40dce4:	b.ne	40dcf4 <ferror@plt+0xad74>  // b.any
  40dce8:	ldrb	w4, [x5, #1]!
  40dcec:	cmp	w4, #0x30
  40dcf0:	b	40dce4 <ferror@plt+0xad64>
  40dcf4:	sub	w4, w4, #0x30
  40dcf8:	cmp	w4, #0x9
  40dcfc:	b.ls	40de30 <ferror@plt+0xaeb0>  // b.plast
  40dd00:	cmp	w1, #0x30
  40dd04:	b.eq	40dd24 <ferror@plt+0xada4>  // b.none
  40dd08:	cmp	w3, w1
  40dd0c:	b.eq	40dd24 <ferror@plt+0xada4>  // b.none
  40dd10:	cmp	w2, w1
  40dd14:	b.ne	40dd2c <ferror@plt+0xadac>  // b.any
  40dd18:	ldrb	w1, [x0, #1]!
  40dd1c:	cmp	w1, #0x30
  40dd20:	b	40dd14 <ferror@plt+0xad94>
  40dd24:	ldrb	w1, [x0, #1]!
  40dd28:	b	40dd00 <ferror@plt+0xad80>
  40dd2c:	sub	w1, w1, #0x30
  40dd30:	cmp	w1, #0x9
  40dd34:	cset	w0, ls  // ls = plast
  40dd38:	b	40dbd4 <ferror@plt+0xac54>
  40dd3c:	ldrb	w1, [x0, #1]!
  40dd40:	cmp	w1, #0x30
  40dd44:	b.eq	40dd3c <ferror@plt+0xadbc>  // b.none
  40dd48:	cmp	w3, w1
  40dd4c:	b.eq	40dd3c <ferror@plt+0xadbc>  // b.none
  40dd50:	cmp	w4, #0x30
  40dd54:	b.eq	40ddd4 <ferror@plt+0xae54>  // b.none
  40dd58:	cmp	w3, w4
  40dd5c:	b.eq	40ddd4 <ferror@plt+0xae54>  // b.none
  40dd60:	cmp	w1, w4
  40dd64:	b.ne	40dd74 <ferror@plt+0xadf4>  // b.any
  40dd68:	sub	w6, w1, #0x30
  40dd6c:	cmp	w6, #0x9
  40dd70:	b.ls	40dddc <ferror@plt+0xae5c>  // b.plast
  40dd74:	mov	w6, w1
  40dd78:	cmp	w2, w1
  40dd7c:	b.ne	40dd8c <ferror@plt+0xae0c>  // b.any
  40dd80:	sub	w7, w4, #0x30
  40dd84:	cmp	w7, #0x9
  40dd88:	b.hi	40ddf8 <ferror@plt+0xae78>  // b.pmore
  40dd8c:	mov	w7, w4
  40dd90:	cmp	w2, w4
  40dd94:	b.ne	40dda4 <ferror@plt+0xae24>  // b.any
  40dd98:	sub	w8, w1, #0x30
  40dd9c:	cmp	w8, #0x9
  40dda0:	b.hi	40ddf8 <ferror@plt+0xae78>  // b.pmore
  40dda4:	mov	x2, #0x0                   	// #0
  40dda8:	sub	w1, w1, #0x30
  40ddac:	cmp	w1, #0x9
  40ddb0:	b.ls	40de00 <ferror@plt+0xae80>  // b.plast
  40ddb4:	mov	x1, #0x0                   	// #0
  40ddb8:	sub	w4, w4, #0x30
  40ddbc:	cmp	w4, #0x9
  40ddc0:	b.ls	40de14 <ferror@plt+0xae94>  // b.plast
  40ddc4:	cmp	x2, x1
  40ddc8:	b.eq	40de28 <ferror@plt+0xaea8>  // b.none
  40ddcc:	mov	w0, #0xffffffff            	// #-1
  40ddd0:	b	40dc5c <ferror@plt+0xacdc>
  40ddd4:	ldrb	w4, [x5, #1]!
  40ddd8:	b	40dd50 <ferror@plt+0xadd0>
  40dddc:	ldrb	w1, [x0, #1]!
  40dde0:	cmp	w3, w1
  40dde4:	b.eq	40dddc <ferror@plt+0xae5c>  // b.none
  40dde8:	ldrb	w4, [x5, #1]!
  40ddec:	cmp	w3, w4
  40ddf0:	b.eq	40dde8 <ferror@plt+0xae68>  // b.none
  40ddf4:	b	40dd60 <ferror@plt+0xade0>
  40ddf8:	mov	x1, x5
  40ddfc:	b	40dc88 <ferror@plt+0xad08>
  40de00:	ldrb	w1, [x0, #1]!
  40de04:	cmp	w3, w1
  40de08:	b.eq	40de00 <ferror@plt+0xae80>  // b.none
  40de0c:	add	x2, x2, #0x1
  40de10:	b	40dda8 <ferror@plt+0xae28>
  40de14:	ldrb	w4, [x5, #1]!
  40de18:	cmp	w3, w4
  40de1c:	b.eq	40de14 <ferror@plt+0xae94>  // b.none
  40de20:	add	x1, x1, #0x1
  40de24:	b	40ddb8 <ferror@plt+0xae38>
  40de28:	sub	w0, w6, w7
  40de2c:	b	40dcb8 <ferror@plt+0xad38>
  40de30:	mov	w0, #0x1                   	// #1
  40de34:	b	40dbd4 <ferror@plt+0xac54>
  40de38:	stp	x29, x30, [sp, #-48]!
  40de3c:	cmp	w0, #0x2
  40de40:	mov	x29, sp
  40de44:	stp	x19, x20, [sp, #16]
  40de48:	mov	w19, w0
  40de4c:	stp	x21, x22, [sp, #32]
  40de50:	b.hi	40de78 <ferror@plt+0xaef8>  // b.pmore
  40de54:	bl	40fc88 <_obstack_memory_used@@Base+0x5a8>
  40de58:	mov	w21, w0
  40de5c:	bl	402ef0 <__errno_location@plt>
  40de60:	mov	x20, x0
  40de64:	mov	w0, w19
  40de68:	mov	w19, w21
  40de6c:	ldr	w22, [x20]
  40de70:	bl	402b50 <close@plt>
  40de74:	str	w22, [x20]
  40de78:	mov	w0, w19
  40de7c:	ldp	x19, x20, [sp, #16]
  40de80:	ldp	x21, x22, [sp, #32]
  40de84:	ldp	x29, x30, [sp], #48
  40de88:	ret
  40de8c:	sub	sp, sp, #0x50
  40de90:	stp	x29, x30, [sp, #32]
  40de94:	add	x29, sp, #0x20
  40de98:	stp	x19, x20, [sp, #48]
  40de9c:	mov	x20, x0
  40dea0:	mov	x19, x4
  40dea4:	str	x21, [sp, #64]
  40dea8:	mov	x21, x5
  40deac:	cbz	x1, 40df40 <ferror@plt+0xafc0>
  40deb0:	mov	x5, x3
  40deb4:	mov	x4, x2
  40deb8:	mov	x3, x1
  40debc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40dec0:	mov	w1, #0x1                   	// #1
  40dec4:	add	x2, x2, #0x61f
  40dec8:	bl	402c70 <__fprintf_chk@plt>
  40decc:	mov	w2, #0x5                   	// #5
  40ded0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40ded4:	mov	x0, #0x0                   	// #0
  40ded8:	add	x1, x1, #0x632
  40dedc:	bl	402e60 <dcgettext@plt>
  40dee0:	mov	x3, x0
  40dee4:	mov	w4, #0x7e3                 	// #2019
  40dee8:	mov	w1, #0x1                   	// #1
  40deec:	mov	x0, x20
  40def0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40def4:	add	x2, x2, #0x914
  40def8:	bl	402c70 <__fprintf_chk@plt>
  40defc:	mov	w2, #0x5                   	// #5
  40df00:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40df04:	mov	x0, #0x0                   	// #0
  40df08:	add	x1, x1, #0x636
  40df0c:	bl	402e60 <dcgettext@plt>
  40df10:	mov	x1, x20
  40df14:	bl	402e70 <fputs_unlocked@plt>
  40df18:	cmp	x21, #0x9
  40df1c:	b.hi	40e1b0 <ferror@plt+0xb230>  // b.pmore
  40df20:	cmp	w21, #0x9
  40df24:	b.hi	40e1b0 <ferror@plt+0xb230>  // b.pmore
  40df28:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40df2c:	add	x0, x0, #0x900
  40df30:	ldrh	w0, [x0, w21, uxtw #1]
  40df34:	adr	x1, 40df40 <ferror@plt+0xafc0>
  40df38:	add	x0, x1, w0, sxth #2
  40df3c:	br	x0
  40df40:	mov	x4, x3
  40df44:	mov	w1, #0x1                   	// #1
  40df48:	mov	x3, x2
  40df4c:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40df50:	add	x2, x2, #0x62b
  40df54:	bl	402c70 <__fprintf_chk@plt>
  40df58:	b	40decc <ferror@plt+0xaf4c>
  40df5c:	mov	w2, #0x5                   	// #5
  40df60:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40df64:	mov	x0, #0x0                   	// #0
  40df68:	add	x1, x1, #0x702
  40df6c:	bl	402e60 <dcgettext@plt>
  40df70:	mov	x2, x0
  40df74:	mov	x0, x20
  40df78:	mov	w1, #0x1                   	// #1
  40df7c:	ldr	x3, [x19]
  40df80:	ldp	x29, x30, [sp, #32]
  40df84:	ldp	x19, x20, [sp, #48]
  40df88:	ldr	x21, [sp, #64]
  40df8c:	add	sp, sp, #0x50
  40df90:	b	402c70 <__fprintf_chk@plt>
  40df94:	mov	w2, #0x5                   	// #5
  40df98:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40df9c:	mov	x0, #0x0                   	// #0
  40dfa0:	add	x1, x1, #0x712
  40dfa4:	bl	402e60 <dcgettext@plt>
  40dfa8:	mov	x2, x0
  40dfac:	mov	x0, x20
  40dfb0:	mov	w1, #0x1                   	// #1
  40dfb4:	ldp	x3, x4, [x19]
  40dfb8:	ldp	x29, x30, [sp, #32]
  40dfbc:	ldp	x19, x20, [sp, #48]
  40dfc0:	ldr	x21, [sp, #64]
  40dfc4:	add	sp, sp, #0x50
  40dfc8:	b	402c70 <__fprintf_chk@plt>
  40dfcc:	mov	w2, #0x5                   	// #5
  40dfd0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40dfd4:	mov	x0, #0x0                   	// #0
  40dfd8:	add	x1, x1, #0x729
  40dfdc:	bl	402e60 <dcgettext@plt>
  40dfe0:	mov	x2, x0
  40dfe4:	mov	x0, x20
  40dfe8:	mov	w1, #0x1                   	// #1
  40dfec:	ldp	x3, x4, [x19]
  40dff0:	ldr	x5, [x19, #16]
  40dff4:	ldp	x29, x30, [sp, #32]
  40dff8:	ldp	x19, x20, [sp, #48]
  40dffc:	ldr	x21, [sp, #64]
  40e000:	add	sp, sp, #0x50
  40e004:	b	402c70 <__fprintf_chk@plt>
  40e008:	mov	w2, #0x5                   	// #5
  40e00c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e010:	mov	x0, #0x0                   	// #0
  40e014:	add	x1, x1, #0x745
  40e018:	bl	402e60 <dcgettext@plt>
  40e01c:	mov	x2, x0
  40e020:	mov	x0, x20
  40e024:	mov	w1, #0x1                   	// #1
  40e028:	ldp	x3, x4, [x19]
  40e02c:	ldp	x5, x6, [x19, #16]
  40e030:	ldp	x29, x30, [sp, #32]
  40e034:	ldp	x19, x20, [sp, #48]
  40e038:	ldr	x21, [sp, #64]
  40e03c:	add	sp, sp, #0x50
  40e040:	b	402c70 <__fprintf_chk@plt>
  40e044:	mov	w2, #0x5                   	// #5
  40e048:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e04c:	mov	x0, #0x0                   	// #0
  40e050:	add	x1, x1, #0x765
  40e054:	bl	402e60 <dcgettext@plt>
  40e058:	mov	x2, x0
  40e05c:	mov	x0, x20
  40e060:	mov	w1, #0x1                   	// #1
  40e064:	ldp	x3, x4, [x19]
  40e068:	ldp	x5, x6, [x19, #16]
  40e06c:	ldp	x29, x30, [sp, #32]
  40e070:	ldr	x7, [x19, #32]
  40e074:	ldp	x19, x20, [sp, #48]
  40e078:	ldr	x21, [sp, #64]
  40e07c:	add	sp, sp, #0x50
  40e080:	b	402c70 <__fprintf_chk@plt>
  40e084:	mov	w2, #0x5                   	// #5
  40e088:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e08c:	mov	x0, #0x0                   	// #0
  40e090:	add	x1, x1, #0x789
  40e094:	bl	402e60 <dcgettext@plt>
  40e098:	mov	x2, x0
  40e09c:	ldp	x3, x4, [x19]
  40e0a0:	mov	x0, x20
  40e0a4:	ldp	x5, x6, [x19, #16]
  40e0a8:	ldp	x7, x1, [x19, #32]
  40e0ac:	str	x1, [sp]
  40e0b0:	mov	w1, #0x1                   	// #1
  40e0b4:	bl	402c70 <__fprintf_chk@plt>
  40e0b8:	ldp	x29, x30, [sp, #32]
  40e0bc:	ldp	x19, x20, [sp, #48]
  40e0c0:	ldr	x21, [sp, #64]
  40e0c4:	add	sp, sp, #0x50
  40e0c8:	ret
  40e0cc:	mov	w2, #0x5                   	// #5
  40e0d0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e0d4:	mov	x0, #0x0                   	// #0
  40e0d8:	add	x1, x1, #0x7b1
  40e0dc:	bl	402e60 <dcgettext@plt>
  40e0e0:	mov	x2, x0
  40e0e4:	ldp	x3, x4, [x19]
  40e0e8:	mov	x0, x20
  40e0ec:	ldp	x5, x6, [x19, #16]
  40e0f0:	ldr	x1, [x19, #48]
  40e0f4:	ldr	x7, [x19, #32]
  40e0f8:	str	x1, [sp, #8]
  40e0fc:	ldr	x1, [x19, #40]
  40e100:	str	x1, [sp]
  40e104:	mov	w1, #0x1                   	// #1
  40e108:	bl	402c70 <__fprintf_chk@plt>
  40e10c:	b	40e0b8 <ferror@plt+0xb138>
  40e110:	mov	w2, #0x5                   	// #5
  40e114:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e118:	mov	x0, #0x0                   	// #0
  40e11c:	add	x1, x1, #0x7dd
  40e120:	bl	402e60 <dcgettext@plt>
  40e124:	mov	x2, x0
  40e128:	ldr	x1, [x19, #56]
  40e12c:	mov	x0, x20
  40e130:	ldp	x3, x4, [x19]
  40e134:	ldp	x5, x6, [x19, #16]
  40e138:	ldr	x7, [x19, #32]
  40e13c:	str	x1, [sp, #16]
  40e140:	ldr	x1, [x19, #48]
  40e144:	str	x1, [sp, #8]
  40e148:	ldr	x1, [x19, #40]
  40e14c:	str	x1, [sp]
  40e150:	mov	w1, #0x1                   	// #1
  40e154:	bl	402c70 <__fprintf_chk@plt>
  40e158:	b	40e0b8 <ferror@plt+0xb138>
  40e15c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e160:	add	x1, x1, #0x80d
  40e164:	mov	w2, #0x5                   	// #5
  40e168:	mov	x0, #0x0                   	// #0
  40e16c:	bl	402e60 <dcgettext@plt>
  40e170:	ldr	x1, [x19, #64]
  40e174:	mov	x2, x0
  40e178:	ldp	x3, x4, [x19]
  40e17c:	mov	x0, x20
  40e180:	ldp	x5, x6, [x19, #16]
  40e184:	ldr	x7, [x19, #32]
  40e188:	str	x1, [sp, #24]
  40e18c:	ldr	x1, [x19, #56]
  40e190:	str	x1, [sp, #16]
  40e194:	ldr	x1, [x19, #48]
  40e198:	str	x1, [sp, #8]
  40e19c:	ldr	x1, [x19, #40]
  40e1a0:	str	x1, [sp]
  40e1a4:	mov	w1, #0x1                   	// #1
  40e1a8:	bl	402c70 <__fprintf_chk@plt>
  40e1ac:	b	40e0b8 <ferror@plt+0xb138>
  40e1b0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e1b4:	mov	w2, #0x5                   	// #5
  40e1b8:	add	x1, x1, #0x841
  40e1bc:	b	40e168 <ferror@plt+0xb1e8>
  40e1c0:	mov	x5, #0x0                   	// #0
  40e1c4:	ldr	x6, [x4, x5, lsl #3]
  40e1c8:	cbnz	x6, 40e1d0 <ferror@plt+0xb250>
  40e1cc:	b	40de8c <ferror@plt+0xaf0c>
  40e1d0:	add	x5, x5, #0x1
  40e1d4:	b	40e1c4 <ferror@plt+0xb244>
  40e1d8:	stp	x29, x30, [sp, #-96]!
  40e1dc:	mov	x5, #0x0                   	// #0
  40e1e0:	mov	x29, sp
  40e1e4:	ldr	w7, [x4, #24]
  40e1e8:	ldp	x6, x10, [x4]
  40e1ec:	add	x4, sp, #0x10
  40e1f0:	tbnz	w7, #31, 40e224 <ferror@plt+0xb2a4>
  40e1f4:	add	x9, x6, #0xf
  40e1f8:	mov	x8, x6
  40e1fc:	and	x6, x9, #0xfffffffffffffff8
  40e200:	ldr	x8, [x8]
  40e204:	str	x8, [x4, x5, lsl #3]
  40e208:	cbz	x8, 40e218 <ferror@plt+0xb298>
  40e20c:	add	x5, x5, #0x1
  40e210:	cmp	x5, #0xa
  40e214:	b.ne	40e1f0 <ferror@plt+0xb270>  // b.any
  40e218:	bl	40de8c <ferror@plt+0xaf0c>
  40e21c:	ldp	x29, x30, [sp], #96
  40e220:	ret
  40e224:	add	w9, w7, #0x8
  40e228:	cmp	w9, #0x0
  40e22c:	b.le	40e244 <ferror@plt+0xb2c4>
  40e230:	add	x11, x6, #0xf
  40e234:	mov	x8, x6
  40e238:	mov	w7, w9
  40e23c:	and	x6, x11, #0xfffffffffffffff8
  40e240:	b	40e200 <ferror@plt+0xb280>
  40e244:	add	x8, x10, w7, sxtw
  40e248:	mov	w7, w9
  40e24c:	b	40e200 <ferror@plt+0xb280>
  40e250:	stp	x29, x30, [sp, #-240]!
  40e254:	mov	x29, sp
  40e258:	stp	x4, x5, [sp, #208]
  40e25c:	add	x4, sp, #0xf0
  40e260:	stp	x4, x4, [sp, #48]
  40e264:	add	x4, sp, #0xd0
  40e268:	str	x4, [sp, #64]
  40e26c:	mov	w4, #0xffffffe0            	// #-32
  40e270:	str	w4, [sp, #72]
  40e274:	mov	w4, #0xffffff80            	// #-128
  40e278:	str	w4, [sp, #76]
  40e27c:	ldp	x4, x5, [sp, #48]
  40e280:	stp	x4, x5, [sp, #16]
  40e284:	ldp	x4, x5, [sp, #64]
  40e288:	stp	x4, x5, [sp, #32]
  40e28c:	add	x4, sp, #0x10
  40e290:	str	q0, [sp, #80]
  40e294:	str	q1, [sp, #96]
  40e298:	str	q2, [sp, #112]
  40e29c:	str	q3, [sp, #128]
  40e2a0:	str	q4, [sp, #144]
  40e2a4:	str	q5, [sp, #160]
  40e2a8:	str	q6, [sp, #176]
  40e2ac:	str	q7, [sp, #192]
  40e2b0:	stp	x6, x7, [sp, #224]
  40e2b4:	bl	40e1d8 <ferror@plt+0xb258>
  40e2b8:	ldp	x29, x30, [sp], #240
  40e2bc:	ret
  40e2c0:	stp	x29, x30, [sp, #-16]!
  40e2c4:	mov	w2, #0x5                   	// #5
  40e2c8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e2cc:	mov	x29, sp
  40e2d0:	add	x1, x1, #0x87d
  40e2d4:	mov	x0, #0x0                   	// #0
  40e2d8:	bl	402e60 <dcgettext@plt>
  40e2dc:	mov	x1, x0
  40e2e0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40e2e4:	mov	w0, #0x1                   	// #1
  40e2e8:	add	x2, x2, #0x892
  40e2ec:	bl	402ad0 <__printf_chk@plt>
  40e2f0:	mov	w2, #0x5                   	// #5
  40e2f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e2f8:	mov	x0, #0x0                   	// #0
  40e2fc:	add	x1, x1, #0x8a8
  40e300:	bl	402e60 <dcgettext@plt>
  40e304:	mov	x1, x0
  40e308:	adrp	x3, 411000 <_obstack_memory_used@@Base+0x1920>
  40e30c:	add	x3, x3, #0x3d7
  40e310:	adrp	x2, 411000 <_obstack_memory_used@@Base+0x1920>
  40e314:	mov	w0, #0x1                   	// #1
  40e318:	add	x2, x2, #0x3ff
  40e31c:	bl	402ad0 <__printf_chk@plt>
  40e320:	mov	w2, #0x5                   	// #5
  40e324:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e328:	mov	x0, #0x0                   	// #0
  40e32c:	add	x1, x1, #0x8bc
  40e330:	bl	402e60 <dcgettext@plt>
  40e334:	ldp	x29, x30, [sp], #16
  40e338:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40e33c:	ldr	x1, [x1, #1376]
  40e340:	b	402e70 <fputs_unlocked@plt>
  40e344:	stp	x29, x30, [sp, #-32]!
  40e348:	mov	x29, sp
  40e34c:	str	x19, [sp, #16]
  40e350:	mov	x19, x0
  40e354:	bl	402a20 <malloc@plt>
  40e358:	cmp	x0, #0x0
  40e35c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40e360:	b.eq	40e368 <ferror@plt+0xb3e8>  // b.none
  40e364:	bl	40e538 <ferror@plt+0xb5b8>
  40e368:	ldr	x19, [sp, #16]
  40e36c:	ldp	x29, x30, [sp], #32
  40e370:	ret
  40e374:	mov	x2, x0
  40e378:	mul	x0, x0, x1
  40e37c:	umulh	x2, x2, x1
  40e380:	cmp	x2, #0x0
  40e384:	cset	x1, ne  // ne = any
  40e388:	tbnz	x0, #63, 40e390 <ferror@plt+0xb410>
  40e38c:	cbz	x1, 40e39c <ferror@plt+0xb41c>
  40e390:	stp	x29, x30, [sp, #-16]!
  40e394:	mov	x29, sp
  40e398:	bl	40e538 <ferror@plt+0xb5b8>
  40e39c:	b	40e344 <ferror@plt+0xb3c4>
  40e3a0:	b	40e344 <ferror@plt+0xb3c4>
  40e3a4:	stp	x29, x30, [sp, #-32]!
  40e3a8:	cmp	x1, #0x0
  40e3ac:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40e3b0:	mov	x29, sp
  40e3b4:	str	x19, [sp, #16]
  40e3b8:	b.eq	40e3d0 <ferror@plt+0xb450>  // b.none
  40e3bc:	bl	402ce0 <free@plt>
  40e3c0:	mov	x0, #0x0                   	// #0
  40e3c4:	ldr	x19, [sp, #16]
  40e3c8:	ldp	x29, x30, [sp], #32
  40e3cc:	ret
  40e3d0:	mov	x19, x1
  40e3d4:	bl	402b30 <realloc@plt>
  40e3d8:	cmp	x0, #0x0
  40e3dc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40e3e0:	b.eq	40e3c4 <ferror@plt+0xb444>  // b.none
  40e3e4:	bl	40e538 <ferror@plt+0xb5b8>
  40e3e8:	mov	x3, x1
  40e3ec:	mul	x1, x1, x2
  40e3f0:	umulh	x3, x3, x2
  40e3f4:	cmp	x3, #0x0
  40e3f8:	cset	x2, ne  // ne = any
  40e3fc:	tbnz	x1, #63, 40e404 <ferror@plt+0xb484>
  40e400:	cbz	x2, 40e410 <ferror@plt+0xb490>
  40e404:	stp	x29, x30, [sp, #-16]!
  40e408:	mov	x29, sp
  40e40c:	bl	40e538 <ferror@plt+0xb5b8>
  40e410:	b	40e3a4 <ferror@plt+0xb424>
  40e414:	ldr	x3, [x1]
  40e418:	cbnz	x0, 40e454 <ferror@plt+0xb4d4>
  40e41c:	cbnz	x3, 40e430 <ferror@plt+0xb4b0>
  40e420:	mov	x3, #0x80                  	// #128
  40e424:	cmp	x2, #0x80
  40e428:	udiv	x3, x3, x2
  40e42c:	cinc	x3, x3, hi  // hi = pmore
  40e430:	umulh	x5, x3, x2
  40e434:	mul	x4, x3, x2
  40e438:	cmp	x5, #0x0
  40e43c:	cset	x5, ne  // ne = any
  40e440:	tbnz	x4, #63, 40e448 <ferror@plt+0xb4c8>
  40e444:	cbz	x5, 40e470 <ferror@plt+0xb4f0>
  40e448:	stp	x29, x30, [sp, #-16]!
  40e44c:	mov	x29, sp
  40e450:	bl	40e538 <ferror@plt+0xb5b8>
  40e454:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  40e458:	movk	x4, #0x5554
  40e45c:	udiv	x4, x4, x2
  40e460:	cmp	x4, x3
  40e464:	b.ls	40e448 <ferror@plt+0xb4c8>  // b.plast
  40e468:	add	x4, x3, #0x1
  40e46c:	add	x3, x4, x3, lsr #1
  40e470:	str	x3, [x1]
  40e474:	mul	x1, x3, x2
  40e478:	b	40e3a4 <ferror@plt+0xb424>
  40e47c:	mov	x2, #0x1                   	// #1
  40e480:	b	40e414 <ferror@plt+0xb494>
  40e484:	stp	x29, x30, [sp, #-32]!
  40e488:	mov	x29, sp
  40e48c:	str	x19, [sp, #16]
  40e490:	mov	x19, x0
  40e494:	bl	40e344 <ferror@plt+0xb3c4>
  40e498:	mov	x2, x19
  40e49c:	mov	w1, #0x0                   	// #0
  40e4a0:	ldr	x19, [sp, #16]
  40e4a4:	ldp	x29, x30, [sp], #32
  40e4a8:	b	402ae0 <memset@plt>
  40e4ac:	umulh	x2, x0, x1
  40e4b0:	stp	x29, x30, [sp, #-16]!
  40e4b4:	mul	x4, x0, x1
  40e4b8:	cmp	x2, #0x0
  40e4bc:	mov	x29, sp
  40e4c0:	cset	x2, ne  // ne = any
  40e4c4:	tbnz	x4, #63, 40e4cc <ferror@plt+0xb54c>
  40e4c8:	cbz	x2, 40e4d0 <ferror@plt+0xb550>
  40e4cc:	bl	40e538 <ferror@plt+0xb5b8>
  40e4d0:	bl	402b20 <calloc@plt>
  40e4d4:	cbz	x0, 40e4cc <ferror@plt+0xb54c>
  40e4d8:	ldp	x29, x30, [sp], #16
  40e4dc:	ret
  40e4e0:	stp	x29, x30, [sp, #-32]!
  40e4e4:	mov	x29, sp
  40e4e8:	stp	x19, x20, [sp, #16]
  40e4ec:	mov	x19, x1
  40e4f0:	mov	x20, x0
  40e4f4:	mov	x0, x1
  40e4f8:	bl	40e344 <ferror@plt+0xb3c4>
  40e4fc:	mov	x2, x19
  40e500:	mov	x1, x20
  40e504:	ldp	x19, x20, [sp, #16]
  40e508:	ldp	x29, x30, [sp], #32
  40e50c:	b	402820 <memcpy@plt>
  40e510:	stp	x29, x30, [sp, #-32]!
  40e514:	mov	x29, sp
  40e518:	str	x19, [sp, #16]
  40e51c:	mov	x19, x0
  40e520:	bl	402880 <strlen@plt>
  40e524:	add	x1, x0, #0x1
  40e528:	mov	x0, x19
  40e52c:	ldr	x19, [sp, #16]
  40e530:	ldp	x29, x30, [sp], #32
  40e534:	b	40e4e0 <ferror@plt+0xb560>
  40e538:	stp	x29, x30, [sp, #-32]!
  40e53c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40e540:	mov	w2, #0x5                   	// #5
  40e544:	mov	x29, sp
  40e548:	str	x19, [sp, #16]
  40e54c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e550:	ldr	w19, [x0, #1240]
  40e554:	add	x1, x1, #0x943
  40e558:	mov	x0, #0x0                   	// #0
  40e55c:	bl	402e60 <dcgettext@plt>
  40e560:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40e564:	mov	x3, x0
  40e568:	add	x2, x2, #0x2b4
  40e56c:	mov	w0, w19
  40e570:	mov	w1, #0x0                   	// #0
  40e574:	bl	4028c0 <error@plt>
  40e578:	bl	402bd0 <abort@plt>
  40e57c:	stp	x29, x30, [sp, #-64]!
  40e580:	mov	x29, sp
  40e584:	stp	x19, x20, [sp, #16]
  40e588:	mov	w19, w0
  40e58c:	mov	x20, x1
  40e590:	mov	x0, #0x0                   	// #0
  40e594:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e598:	add	x1, x1, #0x954
  40e59c:	stp	x21, x22, [sp, #32]
  40e5a0:	mov	x22, x4
  40e5a4:	mov	x21, x3
  40e5a8:	stp	x23, x24, [sp, #48]
  40e5ac:	mov	x23, x2
  40e5b0:	mov	w2, #0x5                   	// #5
  40e5b4:	bl	402e60 <dcgettext@plt>
  40e5b8:	mov	w1, w19
  40e5bc:	mov	x2, x0
  40e5c0:	mov	w0, #0x0                   	// #0
  40e5c4:	bl	4028c0 <error@plt>
  40e5c8:	mov	w2, #0x5                   	// #5
  40e5cc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e5d0:	mov	x0, #0x0                   	// #0
  40e5d4:	add	x1, x1, #0x96d
  40e5d8:	bl	402e60 <dcgettext@plt>
  40e5dc:	mov	x2, x0
  40e5e0:	mov	w1, #0x0                   	// #0
  40e5e4:	mov	w0, #0x0                   	// #0
  40e5e8:	bl	4028c0 <error@plt>
  40e5ec:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40e5f0:	mov	w2, #0x5                   	// #5
  40e5f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e5f8:	add	x1, x1, #0x998
  40e5fc:	ldr	w24, [x0, #1240]
  40e600:	mov	x0, #0x0                   	// #0
  40e604:	bl	402e60 <dcgettext@plt>
  40e608:	mov	x19, x0
  40e60c:	mov	x3, x23
  40e610:	mov	x2, x20
  40e614:	mov	w1, #0x8                   	// #8
  40e618:	mov	w0, #0x0                   	// #0
  40e61c:	bl	40ccd0 <ferror@plt+0x9d50>
  40e620:	mov	x20, x0
  40e624:	mov	x3, x22
  40e628:	mov	x2, x21
  40e62c:	mov	w1, #0x8                   	// #8
  40e630:	mov	w0, #0x1                   	// #1
  40e634:	bl	40ccd0 <ferror@plt+0x9d50>
  40e638:	mov	x4, x0
  40e63c:	mov	x3, x20
  40e640:	mov	x2, x19
  40e644:	mov	w0, w24
  40e648:	mov	w1, #0x0                   	// #0
  40e64c:	ldp	x19, x20, [sp, #16]
  40e650:	ldp	x21, x22, [sp, #32]
  40e654:	ldp	x23, x24, [sp, #48]
  40e658:	ldp	x29, x30, [sp], #64
  40e65c:	b	4028c0 <error@plt>
  40e660:	stp	x29, x30, [sp, #-64]!
  40e664:	mov	x29, sp
  40e668:	stp	x19, x20, [sp, #16]
  40e66c:	mov	x20, x0
  40e670:	stp	x21, x22, [sp, #32]
  40e674:	mov	x21, x1
  40e678:	mov	x22, x2
  40e67c:	str	x23, [sp, #48]
  40e680:	mov	x23, x3
  40e684:	bl	40fb78 <_obstack_memory_used@@Base+0x498>
  40e688:	mov	w19, w0
  40e68c:	bl	402ef0 <__errno_location@plt>
  40e690:	ldr	w0, [x0]
  40e694:	cbz	w0, 40e6ac <ferror@plt+0xb72c>
  40e698:	mov	x4, x23
  40e69c:	mov	x3, x22
  40e6a0:	mov	x2, x21
  40e6a4:	mov	x1, x20
  40e6a8:	bl	40e57c <ferror@plt+0xb5fc>
  40e6ac:	mov	w0, w19
  40e6b0:	ldp	x19, x20, [sp, #16]
  40e6b4:	ldp	x21, x22, [sp, #32]
  40e6b8:	ldr	x23, [sp, #48]
  40e6bc:	ldp	x29, x30, [sp], #64
  40e6c0:	ret
  40e6c4:	stp	x29, x30, [sp, #-64]!
  40e6c8:	mov	x29, sp
  40e6cc:	stp	x19, x20, [sp, #16]
  40e6d0:	mov	x20, x0
  40e6d4:	stp	x21, x22, [sp, #32]
  40e6d8:	mov	x21, x1
  40e6dc:	mov	x22, x2
  40e6e0:	str	x23, [sp, #48]
  40e6e4:	mov	x23, x3
  40e6e8:	bl	40fc14 <_obstack_memory_used@@Base+0x534>
  40e6ec:	mov	w19, w0
  40e6f0:	bl	402ef0 <__errno_location@plt>
  40e6f4:	ldr	w0, [x0]
  40e6f8:	cbz	w0, 40e710 <ferror@plt+0xb790>
  40e6fc:	sub	x4, x23, #0x1
  40e700:	mov	x3, x22
  40e704:	sub	x2, x21, #0x1
  40e708:	mov	x1, x20
  40e70c:	bl	40e57c <ferror@plt+0xb5fc>
  40e710:	mov	w0, w19
  40e714:	ldp	x19, x20, [sp, #16]
  40e718:	ldp	x21, x22, [sp, #32]
  40e71c:	ldr	x23, [sp, #48]
  40e720:	ldp	x29, x30, [sp], #64
  40e724:	ret
  40e728:	stp	x29, x30, [sp, #-48]!
  40e72c:	mov	x29, sp
  40e730:	str	x19, [sp, #16]
  40e734:	bl	40f918 <_obstack_memory_used@@Base+0x238>
  40e738:	stp	x0, x1, [sp, #32]
  40e73c:	bl	402ef0 <__errno_location@plt>
  40e740:	mov	x19, x0
  40e744:	str	wzr, [x19]
  40e748:	add	x0, sp, #0x20
  40e74c:	mov	x1, #0x0                   	// #0
  40e750:	bl	40f320 <ferror@plt+0xc3a0>
  40e754:	cbz	w0, 40e768 <ferror@plt+0xb7e8>
  40e758:	ldr	w0, [x19]
  40e75c:	tst	w0, #0xfffffffb
  40e760:	b.eq	40e744 <ferror@plt+0xb7c4>  // b.none
  40e764:	mov	w0, #0xffffffff            	// #-1
  40e768:	ldr	x19, [sp, #16]
  40e76c:	ldp	x29, x30, [sp], #48
  40e770:	ret
  40e774:	sxtw	x1, w1
  40e778:	mov	x4, x0
  40e77c:	mov	w0, #0x0                   	// #0
  40e780:	sub	w2, w2, #0x1
  40e784:	cmn	w2, #0x1
  40e788:	b.ne	40e790 <ferror@plt+0xb810>  // b.any
  40e78c:	ret
  40e790:	ldr	x3, [x4]
  40e794:	umulh	x5, x3, x1
  40e798:	cbnz	x5, 40e7ac <ferror@plt+0xb82c>
  40e79c:	mul	x3, x3, x1
  40e7a0:	orr	w0, w0, w5
  40e7a4:	str	x3, [x4]
  40e7a8:	b	40e780 <ferror@plt+0xb800>
  40e7ac:	mov	x3, #0xffffffffffffffff    	// #-1
  40e7b0:	mov	w5, #0x1                   	// #1
  40e7b4:	b	40e7a0 <ferror@plt+0xb820>
  40e7b8:	stp	x29, x30, [sp, #-96]!
  40e7bc:	cmp	w2, #0x24
  40e7c0:	mov	x29, sp
  40e7c4:	stp	x19, x20, [sp, #16]
  40e7c8:	stp	x21, x22, [sp, #32]
  40e7cc:	stp	x23, x24, [sp, #48]
  40e7d0:	str	x25, [sp, #64]
  40e7d4:	b.ls	40e7f8 <ferror@plt+0xb878>  // b.plast
  40e7d8:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x2920>
  40e7dc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40e7e0:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40e7e4:	add	x3, x3, #0xa35
  40e7e8:	add	x1, x1, #0x9bd
  40e7ec:	add	x0, x0, #0x9cb
  40e7f0:	mov	w2, #0x54                  	// #84
  40e7f4:	bl	402ee0 <__assert_fail@plt>
  40e7f8:	mov	x19, x0
  40e7fc:	mov	x20, x1
  40e800:	mov	w24, w2
  40e804:	mov	x21, x3
  40e808:	mov	x23, x4
  40e80c:	cbnz	x1, 40e814 <ferror@plt+0xb894>
  40e810:	add	x20, sp, #0x50
  40e814:	bl	402ef0 <__errno_location@plt>
  40e818:	str	wzr, [x0]
  40e81c:	mov	x22, x0
  40e820:	ldrb	w25, [x19]
  40e824:	bl	402ca0 <__ctype_b_loc@plt>
  40e828:	ldr	x2, [x0]
  40e82c:	mov	x0, x19
  40e830:	ubfiz	x1, x25, #1, #8
  40e834:	ldrh	w1, [x2, x1]
  40e838:	tbnz	w1, #13, 40e864 <ferror@plt+0xb8e4>
  40e83c:	cmp	w25, #0x2d
  40e840:	b.ne	40e86c <ferror@plt+0xb8ec>  // b.any
  40e844:	mov	w19, #0x4                   	// #4
  40e848:	mov	w0, w19
  40e84c:	ldp	x19, x20, [sp, #16]
  40e850:	ldp	x21, x22, [sp, #32]
  40e854:	ldp	x23, x24, [sp, #48]
  40e858:	ldr	x25, [sp, #64]
  40e85c:	ldp	x29, x30, [sp], #96
  40e860:	ret
  40e864:	ldrb	w25, [x0, #1]!
  40e868:	b	40e830 <ferror@plt+0xb8b0>
  40e86c:	mov	w2, w24
  40e870:	mov	x1, x20
  40e874:	mov	x0, x19
  40e878:	bl	402870 <strtoul@plt>
  40e87c:	ldr	x24, [x20]
  40e880:	str	x0, [sp, #88]
  40e884:	cmp	x24, x19
  40e888:	b.ne	40e8d8 <ferror@plt+0xb958>  // b.any
  40e88c:	cbz	x23, 40e844 <ferror@plt+0xb8c4>
  40e890:	ldrb	w1, [x19]
  40e894:	cbz	w1, 40e844 <ferror@plt+0xb8c4>
  40e898:	mov	x0, x23
  40e89c:	bl	402d30 <strchr@plt>
  40e8a0:	cbz	x0, 40e844 <ferror@plt+0xb8c4>
  40e8a4:	mov	x0, #0x1                   	// #1
  40e8a8:	mov	w19, #0x0                   	// #0
  40e8ac:	str	x0, [sp, #88]
  40e8b0:	ldrb	w22, [x24]
  40e8b4:	cbz	w22, 40eaa0 <ferror@plt+0xbb20>
  40e8b8:	mov	w1, w22
  40e8bc:	mov	x0, x23
  40e8c0:	bl	402d30 <strchr@plt>
  40e8c4:	cbnz	x0, 40e900 <ferror@plt+0xb980>
  40e8c8:	ldr	x0, [sp, #88]
  40e8cc:	orr	w19, w19, #0x2
  40e8d0:	str	x0, [x21]
  40e8d4:	b	40e848 <ferror@plt+0xb8c8>
  40e8d8:	ldr	w1, [x22]
  40e8dc:	cbz	w1, 40e8f8 <ferror@plt+0xb978>
  40e8e0:	cmp	w1, #0x22
  40e8e4:	b.ne	40e844 <ferror@plt+0xb8c4>  // b.any
  40e8e8:	mov	w19, #0x1                   	// #1
  40e8ec:	cbnz	x23, 40e8b0 <ferror@plt+0xb930>
  40e8f0:	str	x0, [x21]
  40e8f4:	b	40e848 <ferror@plt+0xb8c8>
  40e8f8:	mov	w19, #0x0                   	// #0
  40e8fc:	b	40e8ec <ferror@plt+0xb96c>
  40e900:	cmp	w22, #0x5a
  40e904:	b.hi	40e9ec <ferror@plt+0xba6c>  // b.pmore
  40e908:	cmp	w22, #0x44
  40e90c:	b.hi	40e9c8 <ferror@plt+0xba48>  // b.pmore
  40e910:	mov	w6, #0x1                   	// #1
  40e914:	mov	w1, #0x400                 	// #1024
  40e918:	cmp	w22, #0x58
  40e91c:	b.hi	40ea0c <ferror@plt+0xba8c>  // b.pmore
  40e920:	sub	w22, w22, #0x42
  40e924:	and	w0, w22, #0xff
  40e928:	cmp	w0, #0x12
  40e92c:	b.hi	40e8c8 <ferror@plt+0xb948>  // b.pmore
  40e930:	cmp	w22, #0x12
  40e934:	b.hi	40e8c8 <ferror@plt+0xb948>  // b.pmore
  40e938:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40e93c:	add	x0, x0, #0x9f4
  40e940:	ldrb	w0, [x0, w22, uxtw]
  40e944:	adr	x2, 40e950 <ferror@plt+0xb9d0>
  40e948:	add	x0, x2, w0, sxtb #2
  40e94c:	br	x0
  40e950:	mov	x1, #0x1                   	// #1
  40e954:	lsl	x0, x1, x0
  40e958:	mov	x1, #0x2051                	// #8273
  40e95c:	tst	x0, x1
  40e960:	b.eq	40e9fc <ferror@plt+0xba7c>  // b.none
  40e964:	mov	x0, x23
  40e968:	mov	w1, #0x30                  	// #48
  40e96c:	bl	402d30 <strchr@plt>
  40e970:	cbz	x0, 40ea48 <ferror@plt+0xbac8>
  40e974:	ldrb	w0, [x24, #1]
  40e978:	cmp	w0, #0x44
  40e97c:	b.eq	40ea50 <ferror@plt+0xbad0>  // b.none
  40e980:	cmp	w0, #0x69
  40e984:	b.eq	40ea30 <ferror@plt+0xbab0>  // b.none
  40e988:	cmp	w0, #0x42
  40e98c:	mov	w6, #0x2                   	// #2
  40e990:	mov	w1, #0x400                 	// #1024
  40e994:	mov	w0, #0x3e8                 	// #1000
  40e998:	csinc	w6, w6, wzr, eq  // eq = none
  40e99c:	csel	w1, w1, w0, ne  // ne = any
  40e9a0:	cmp	w22, #0x6d
  40e9a4:	b.ls	40e918 <ferror@plt+0xb998>  // b.plast
  40e9a8:	cmp	w22, #0x74
  40e9ac:	b.eq	40eaec <ferror@plt+0xbb6c>  // b.none
  40e9b0:	cmp	w22, #0x77
  40e9b4:	b.ne	40e8c8 <ferror@plt+0xb948>  // b.any
  40e9b8:	ldr	x0, [sp, #88]
  40e9bc:	tbnz	x0, #63, 40ea78 <ferror@plt+0xbaf8>
  40e9c0:	lsl	x0, x0, #1
  40e9c4:	b	40ea6c <ferror@plt+0xbaec>
  40e9c8:	sub	w1, w22, #0x45
  40e9cc:	cmp	w1, #0x15
  40e9d0:	b.hi	40ea48 <ferror@plt+0xbac8>  // b.pmore
  40e9d4:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40e9d8:	add	x0, x0, #0xa08
  40e9dc:	ldrb	w0, [x0, w1, uxtw]
  40e9e0:	adr	x1, 40e9ec <ferror@plt+0xba6c>
  40e9e4:	add	x0, x1, w0, sxtb #2
  40e9e8:	br	x0
  40e9ec:	sub	w0, w22, #0x67
  40e9f0:	and	w0, w0, #0xff
  40e9f4:	cmp	w0, #0xd
  40e9f8:	b.ls	40e950 <ferror@plt+0xb9d0>  // b.plast
  40e9fc:	cmp	w22, #0x6d
  40ea00:	mov	w6, #0x1                   	// #1
  40ea04:	mov	w1, #0x400                 	// #1024
  40ea08:	b.hi	40e9a8 <ferror@plt+0xba28>  // b.pmore
  40ea0c:	sub	w22, w22, #0x59
  40ea10:	cmp	w22, #0x14
  40ea14:	b.hi	40e8c8 <ferror@plt+0xb948>  // b.pmore
  40ea18:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40ea1c:	add	x0, x0, #0xa20
  40ea20:	ldrb	w0, [x0, w22, uxtw]
  40ea24:	adr	x2, 40ea30 <ferror@plt+0xbab0>
  40ea28:	add	x0, x2, w0, sxtb #2
  40ea2c:	br	x0
  40ea30:	ldrb	w0, [x24, #2]
  40ea34:	mov	w6, #0x3                   	// #3
  40ea38:	cmp	w0, #0x42
  40ea3c:	csinc	w6, w6, wzr, eq  // eq = none
  40ea40:	mov	w1, #0x400                 	// #1024
  40ea44:	b	40e9a0 <ferror@plt+0xba20>
  40ea48:	mov	w6, #0x1                   	// #1
  40ea4c:	b	40ea40 <ferror@plt+0xbac0>
  40ea50:	mov	w6, #0x2                   	// #2
  40ea54:	mov	w1, #0x3e8                 	// #1000
  40ea58:	b	40e9a0 <ferror@plt+0xba20>
  40ea5c:	ldr	x0, [sp, #88]
  40ea60:	cmp	xzr, x0, lsr #55
  40ea64:	b.ne	40ea78 <ferror@plt+0xbaf8>  // b.any
  40ea68:	lsl	x0, x0, #9
  40ea6c:	str	x0, [sp, #88]
  40ea70:	mov	w0, #0x0                   	// #0
  40ea74:	b	40ea84 <ferror@plt+0xbb04>
  40ea78:	mov	x0, #0xffffffffffffffff    	// #-1
  40ea7c:	str	x0, [sp, #88]
  40ea80:	mov	w0, #0x1                   	// #1
  40ea84:	orr	w19, w19, w0
  40ea88:	ldr	x0, [x20]
  40ea8c:	add	x1, x0, w6, sxtw
  40ea90:	str	x1, [x20]
  40ea94:	ldrb	w0, [x0, w6, sxtw]
  40ea98:	cbz	w0, 40eaa0 <ferror@plt+0xbb20>
  40ea9c:	orr	w19, w19, #0x2
  40eaa0:	ldr	x0, [sp, #88]
  40eaa4:	b	40e8f0 <ferror@plt+0xb970>
  40eaa8:	ldr	x0, [sp, #88]
  40eaac:	cmp	xzr, x0, lsr #54
  40eab0:	b.ne	40ea78 <ferror@plt+0xbaf8>  // b.any
  40eab4:	lsl	x0, x0, #10
  40eab8:	b	40ea6c <ferror@plt+0xbaec>
  40eabc:	mov	w2, #0x6                   	// #6
  40eac0:	add	x0, sp, #0x58
  40eac4:	bl	40e774 <ferror@plt+0xb7f4>
  40eac8:	b	40ea84 <ferror@plt+0xbb04>
  40eacc:	mov	w2, #0x3                   	// #3
  40ead0:	b	40eac0 <ferror@plt+0xbb40>
  40ead4:	mov	w2, #0x1                   	// #1
  40ead8:	b	40eac0 <ferror@plt+0xbb40>
  40eadc:	mov	w2, #0x2                   	// #2
  40eae0:	b	40eac0 <ferror@plt+0xbb40>
  40eae4:	mov	w2, #0x5                   	// #5
  40eae8:	b	40eac0 <ferror@plt+0xbb40>
  40eaec:	mov	w2, #0x4                   	// #4
  40eaf0:	b	40eac0 <ferror@plt+0xbb40>
  40eaf4:	mov	w2, #0x8                   	// #8
  40eaf8:	b	40eac0 <ferror@plt+0xbb40>
  40eafc:	mov	w2, #0x7                   	// #7
  40eb00:	b	40eac0 <ferror@plt+0xbb40>
  40eb04:	stp	x29, x30, [sp, #-64]!
  40eb08:	mov	w6, w1
  40eb0c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0x16920>
  40eb10:	mov	x29, sp
  40eb14:	stp	x21, x22, [sp, #32]
  40eb18:	sub	w0, w0, #0x1
  40eb1c:	ldr	w22, [x1, #1240]
  40eb20:	stp	x19, x20, [sp, #16]
  40eb24:	cmp	w0, #0x3
  40eb28:	b.hi	40eb88 <ferror@plt+0xbc08>  // b.pmore
  40eb2c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40eb30:	add	x1, x1, #0xaa0
  40eb34:	adrp	x19, 412000 <_obstack_memory_used@@Base+0x2920>
  40eb38:	mov	x20, x4
  40eb3c:	add	x19, x19, #0xa3e
  40eb40:	ldr	x1, [x1, w0, uxtw #3]
  40eb44:	sxtw	x0, w6
  40eb48:	tbz	w6, #31, 40eb8c <ferror@plt+0xbc0c>
  40eb4c:	sub	x19, x19, x0
  40eb50:	add	x21, sp, #0x38
  40eb54:	and	w2, w2, #0xff
  40eb58:	strb	w2, [sp, #56]
  40eb5c:	strb	wzr, [sp, #57]
  40eb60:	mov	w2, #0x5                   	// #5
  40eb64:	mov	x0, #0x0                   	// #0
  40eb68:	bl	402e60 <dcgettext@plt>
  40eb6c:	mov	x2, x0
  40eb70:	mov	x5, x20
  40eb74:	mov	x4, x21
  40eb78:	mov	x3, x19
  40eb7c:	mov	w0, w22
  40eb80:	mov	w1, #0x0                   	// #0
  40eb84:	bl	4028c0 <error@plt>
  40eb88:	bl	402bd0 <abort@plt>
  40eb8c:	lsl	x0, x0, #5
  40eb90:	ldr	x21, [x3, x0]
  40eb94:	b	40eb60 <ferror@plt+0xbbe0>
  40eb98:	sxtw	x1, w1
  40eb9c:	mov	x4, x0
  40eba0:	mov	w0, #0x0                   	// #0
  40eba4:	sub	w2, w2, #0x1
  40eba8:	cmn	w2, #0x1
  40ebac:	b.ne	40ebb4 <ferror@plt+0xbc34>  // b.any
  40ebb0:	ret
  40ebb4:	ldr	x3, [x4]
  40ebb8:	umulh	x5, x3, x1
  40ebbc:	cbnz	x5, 40ebd0 <ferror@plt+0xbc50>
  40ebc0:	mul	x3, x3, x1
  40ebc4:	orr	w0, w0, w5
  40ebc8:	str	x3, [x4]
  40ebcc:	b	40eba4 <ferror@plt+0xbc24>
  40ebd0:	mov	x3, #0xffffffffffffffff    	// #-1
  40ebd4:	mov	w5, #0x1                   	// #1
  40ebd8:	b	40ebc4 <ferror@plt+0xbc44>
  40ebdc:	stp	x29, x30, [sp, #-96]!
  40ebe0:	cmp	w2, #0x24
  40ebe4:	mov	x29, sp
  40ebe8:	stp	x19, x20, [sp, #16]
  40ebec:	stp	x21, x22, [sp, #32]
  40ebf0:	stp	x23, x24, [sp, #48]
  40ebf4:	str	x25, [sp, #64]
  40ebf8:	b.ls	40ec1c <ferror@plt+0xbc9c>  // b.plast
  40ebfc:	adrp	x3, 412000 <_obstack_memory_used@@Base+0x2920>
  40ec00:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40ec04:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40ec08:	add	x3, x3, #0xb01
  40ec0c:	add	x1, x1, #0x9bd
  40ec10:	add	x0, x0, #0x9cb
  40ec14:	mov	w2, #0x54                  	// #84
  40ec18:	bl	402ee0 <__assert_fail@plt>
  40ec1c:	mov	x19, x0
  40ec20:	mov	x20, x1
  40ec24:	mov	w24, w2
  40ec28:	mov	x21, x3
  40ec2c:	mov	x23, x4
  40ec30:	cbnz	x1, 40ec38 <ferror@plt+0xbcb8>
  40ec34:	add	x20, sp, #0x50
  40ec38:	bl	402ef0 <__errno_location@plt>
  40ec3c:	str	wzr, [x0]
  40ec40:	mov	x22, x0
  40ec44:	ldrb	w25, [x19]
  40ec48:	bl	402ca0 <__ctype_b_loc@plt>
  40ec4c:	ldr	x2, [x0]
  40ec50:	mov	x0, x19
  40ec54:	ubfiz	x1, x25, #1, #8
  40ec58:	ldrh	w1, [x2, x1]
  40ec5c:	tbnz	w1, #13, 40ec88 <ferror@plt+0xbd08>
  40ec60:	cmp	w25, #0x2d
  40ec64:	b.ne	40ec90 <ferror@plt+0xbd10>  // b.any
  40ec68:	mov	w19, #0x4                   	// #4
  40ec6c:	mov	w0, w19
  40ec70:	ldp	x19, x20, [sp, #16]
  40ec74:	ldp	x21, x22, [sp, #32]
  40ec78:	ldp	x23, x24, [sp, #48]
  40ec7c:	ldr	x25, [sp, #64]
  40ec80:	ldp	x29, x30, [sp], #96
  40ec84:	ret
  40ec88:	ldrb	w25, [x0, #1]!
  40ec8c:	b	40ec54 <ferror@plt+0xbcd4>
  40ec90:	mov	w2, w24
  40ec94:	mov	x1, x20
  40ec98:	mov	x0, x19
  40ec9c:	bl	402bb0 <strtoumax@plt>
  40eca0:	ldr	x24, [x20]
  40eca4:	str	x0, [sp, #88]
  40eca8:	cmp	x24, x19
  40ecac:	b.ne	40ecfc <ferror@plt+0xbd7c>  // b.any
  40ecb0:	cbz	x23, 40ec68 <ferror@plt+0xbce8>
  40ecb4:	ldrb	w1, [x19]
  40ecb8:	cbz	w1, 40ec68 <ferror@plt+0xbce8>
  40ecbc:	mov	x0, x23
  40ecc0:	bl	402d30 <strchr@plt>
  40ecc4:	cbz	x0, 40ec68 <ferror@plt+0xbce8>
  40ecc8:	mov	x0, #0x1                   	// #1
  40eccc:	mov	w19, #0x0                   	// #0
  40ecd0:	str	x0, [sp, #88]
  40ecd4:	ldrb	w22, [x24]
  40ecd8:	cbz	w22, 40eec4 <ferror@plt+0xbf44>
  40ecdc:	mov	w1, w22
  40ece0:	mov	x0, x23
  40ece4:	bl	402d30 <strchr@plt>
  40ece8:	cbnz	x0, 40ed24 <ferror@plt+0xbda4>
  40ecec:	ldr	x0, [sp, #88]
  40ecf0:	orr	w19, w19, #0x2
  40ecf4:	str	x0, [x21]
  40ecf8:	b	40ec6c <ferror@plt+0xbcec>
  40ecfc:	ldr	w1, [x22]
  40ed00:	cbz	w1, 40ed1c <ferror@plt+0xbd9c>
  40ed04:	cmp	w1, #0x22
  40ed08:	b.ne	40ec68 <ferror@plt+0xbce8>  // b.any
  40ed0c:	mov	w19, #0x1                   	// #1
  40ed10:	cbnz	x23, 40ecd4 <ferror@plt+0xbd54>
  40ed14:	str	x0, [x21]
  40ed18:	b	40ec6c <ferror@plt+0xbcec>
  40ed1c:	mov	w19, #0x0                   	// #0
  40ed20:	b	40ed10 <ferror@plt+0xbd90>
  40ed24:	cmp	w22, #0x5a
  40ed28:	b.hi	40ee10 <ferror@plt+0xbe90>  // b.pmore
  40ed2c:	cmp	w22, #0x44
  40ed30:	b.hi	40edec <ferror@plt+0xbe6c>  // b.pmore
  40ed34:	mov	w6, #0x1                   	// #1
  40ed38:	mov	w1, #0x400                 	// #1024
  40ed3c:	cmp	w22, #0x58
  40ed40:	b.hi	40ee30 <ferror@plt+0xbeb0>  // b.pmore
  40ed44:	sub	w22, w22, #0x42
  40ed48:	and	w0, w22, #0xff
  40ed4c:	cmp	w0, #0x12
  40ed50:	b.hi	40ecec <ferror@plt+0xbd6c>  // b.pmore
  40ed54:	cmp	w22, #0x12
  40ed58:	b.hi	40ecec <ferror@plt+0xbd6c>  // b.pmore
  40ed5c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40ed60:	add	x0, x0, #0xac0
  40ed64:	ldrb	w0, [x0, w22, uxtw]
  40ed68:	adr	x2, 40ed74 <ferror@plt+0xbdf4>
  40ed6c:	add	x0, x2, w0, sxtb #2
  40ed70:	br	x0
  40ed74:	mov	x1, #0x1                   	// #1
  40ed78:	lsl	x0, x1, x0
  40ed7c:	mov	x1, #0x2051                	// #8273
  40ed80:	tst	x0, x1
  40ed84:	b.eq	40ee20 <ferror@plt+0xbea0>  // b.none
  40ed88:	mov	x0, x23
  40ed8c:	mov	w1, #0x30                  	// #48
  40ed90:	bl	402d30 <strchr@plt>
  40ed94:	cbz	x0, 40ee6c <ferror@plt+0xbeec>
  40ed98:	ldrb	w0, [x24, #1]
  40ed9c:	cmp	w0, #0x44
  40eda0:	b.eq	40ee74 <ferror@plt+0xbef4>  // b.none
  40eda4:	cmp	w0, #0x69
  40eda8:	b.eq	40ee54 <ferror@plt+0xbed4>  // b.none
  40edac:	cmp	w0, #0x42
  40edb0:	mov	w6, #0x2                   	// #2
  40edb4:	mov	w1, #0x400                 	// #1024
  40edb8:	mov	w0, #0x3e8                 	// #1000
  40edbc:	csinc	w6, w6, wzr, eq  // eq = none
  40edc0:	csel	w1, w1, w0, ne  // ne = any
  40edc4:	cmp	w22, #0x6d
  40edc8:	b.ls	40ed3c <ferror@plt+0xbdbc>  // b.plast
  40edcc:	cmp	w22, #0x74
  40edd0:	b.eq	40ef10 <ferror@plt+0xbf90>  // b.none
  40edd4:	cmp	w22, #0x77
  40edd8:	b.ne	40ecec <ferror@plt+0xbd6c>  // b.any
  40eddc:	ldr	x0, [sp, #88]
  40ede0:	tbnz	x0, #63, 40ee9c <ferror@plt+0xbf1c>
  40ede4:	lsl	x0, x0, #1
  40ede8:	b	40ee90 <ferror@plt+0xbf10>
  40edec:	sub	w1, w22, #0x45
  40edf0:	cmp	w1, #0x15
  40edf4:	b.hi	40ee6c <ferror@plt+0xbeec>  // b.pmore
  40edf8:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40edfc:	add	x0, x0, #0xad4
  40ee00:	ldrb	w0, [x0, w1, uxtw]
  40ee04:	adr	x1, 40ee10 <ferror@plt+0xbe90>
  40ee08:	add	x0, x1, w0, sxtb #2
  40ee0c:	br	x0
  40ee10:	sub	w0, w22, #0x67
  40ee14:	and	w0, w0, #0xff
  40ee18:	cmp	w0, #0xd
  40ee1c:	b.ls	40ed74 <ferror@plt+0xbdf4>  // b.plast
  40ee20:	cmp	w22, #0x6d
  40ee24:	mov	w6, #0x1                   	// #1
  40ee28:	mov	w1, #0x400                 	// #1024
  40ee2c:	b.hi	40edcc <ferror@plt+0xbe4c>  // b.pmore
  40ee30:	sub	w22, w22, #0x59
  40ee34:	cmp	w22, #0x14
  40ee38:	b.hi	40ecec <ferror@plt+0xbd6c>  // b.pmore
  40ee3c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40ee40:	add	x0, x0, #0xaec
  40ee44:	ldrb	w0, [x0, w22, uxtw]
  40ee48:	adr	x2, 40ee54 <ferror@plt+0xbed4>
  40ee4c:	add	x0, x2, w0, sxtb #2
  40ee50:	br	x0
  40ee54:	ldrb	w0, [x24, #2]
  40ee58:	mov	w6, #0x3                   	// #3
  40ee5c:	cmp	w0, #0x42
  40ee60:	csinc	w6, w6, wzr, eq  // eq = none
  40ee64:	mov	w1, #0x400                 	// #1024
  40ee68:	b	40edc4 <ferror@plt+0xbe44>
  40ee6c:	mov	w6, #0x1                   	// #1
  40ee70:	b	40ee64 <ferror@plt+0xbee4>
  40ee74:	mov	w6, #0x2                   	// #2
  40ee78:	mov	w1, #0x3e8                 	// #1000
  40ee7c:	b	40edc4 <ferror@plt+0xbe44>
  40ee80:	ldr	x0, [sp, #88]
  40ee84:	cmp	xzr, x0, lsr #55
  40ee88:	b.ne	40ee9c <ferror@plt+0xbf1c>  // b.any
  40ee8c:	lsl	x0, x0, #9
  40ee90:	str	x0, [sp, #88]
  40ee94:	mov	w0, #0x0                   	// #0
  40ee98:	b	40eea8 <ferror@plt+0xbf28>
  40ee9c:	mov	x0, #0xffffffffffffffff    	// #-1
  40eea0:	str	x0, [sp, #88]
  40eea4:	mov	w0, #0x1                   	// #1
  40eea8:	orr	w19, w19, w0
  40eeac:	ldr	x0, [x20]
  40eeb0:	add	x1, x0, w6, sxtw
  40eeb4:	str	x1, [x20]
  40eeb8:	ldrb	w0, [x0, w6, sxtw]
  40eebc:	cbz	w0, 40eec4 <ferror@plt+0xbf44>
  40eec0:	orr	w19, w19, #0x2
  40eec4:	ldr	x0, [sp, #88]
  40eec8:	b	40ed14 <ferror@plt+0xbd94>
  40eecc:	ldr	x0, [sp, #88]
  40eed0:	cmp	xzr, x0, lsr #54
  40eed4:	b.ne	40ee9c <ferror@plt+0xbf1c>  // b.any
  40eed8:	lsl	x0, x0, #10
  40eedc:	b	40ee90 <ferror@plt+0xbf10>
  40eee0:	mov	w2, #0x6                   	// #6
  40eee4:	add	x0, sp, #0x58
  40eee8:	bl	40eb98 <ferror@plt+0xbc18>
  40eeec:	b	40eea8 <ferror@plt+0xbf28>
  40eef0:	mov	w2, #0x3                   	// #3
  40eef4:	b	40eee4 <ferror@plt+0xbf64>
  40eef8:	mov	w2, #0x1                   	// #1
  40eefc:	b	40eee4 <ferror@plt+0xbf64>
  40ef00:	mov	w2, #0x2                   	// #2
  40ef04:	b	40eee4 <ferror@plt+0xbf64>
  40ef08:	mov	w2, #0x5                   	// #5
  40ef0c:	b	40eee4 <ferror@plt+0xbf64>
  40ef10:	mov	w2, #0x4                   	// #4
  40ef14:	b	40eee4 <ferror@plt+0xbf64>
  40ef18:	mov	w2, #0x8                   	// #8
  40ef1c:	b	40eee4 <ferror@plt+0xbf64>
  40ef20:	mov	w2, #0x7                   	// #7
  40ef24:	b	40eee4 <ferror@plt+0xbf64>
  40ef28:	stp	x29, x30, [sp, #-32]!
  40ef2c:	mov	x29, sp
  40ef30:	stp	x19, x20, [sp, #16]
  40ef34:	mov	x19, x0
  40ef38:	bl	4029b0 <fileno@plt>
  40ef3c:	tbz	w0, #31, 40ef50 <ferror@plt+0xbfd0>
  40ef40:	mov	x0, x19
  40ef44:	ldp	x19, x20, [sp, #16]
  40ef48:	ldp	x29, x30, [sp], #32
  40ef4c:	b	4029e0 <fclose@plt>
  40ef50:	mov	x0, x19
  40ef54:	bl	402e90 <__freading@plt>
  40ef58:	cbnz	w0, 40ef90 <ferror@plt+0xc010>
  40ef5c:	mov	x0, x19
  40ef60:	bl	40f1c8 <ferror@plt+0xc248>
  40ef64:	cbnz	w0, 40efb0 <ferror@plt+0xc030>
  40ef68:	mov	w20, #0x0                   	// #0
  40ef6c:	mov	x0, x19
  40ef70:	bl	4029e0 <fclose@plt>
  40ef74:	cbz	w20, 40ef84 <ferror@plt+0xc004>
  40ef78:	bl	402ef0 <__errno_location@plt>
  40ef7c:	str	w20, [x0]
  40ef80:	mov	w0, #0xffffffff            	// #-1
  40ef84:	ldp	x19, x20, [sp, #16]
  40ef88:	ldp	x29, x30, [sp], #32
  40ef8c:	ret
  40ef90:	mov	x0, x19
  40ef94:	bl	4029b0 <fileno@plt>
  40ef98:	mov	w2, #0x1                   	// #1
  40ef9c:	mov	x1, #0x0                   	// #0
  40efa0:	bl	402970 <lseek@plt>
  40efa4:	cmn	x0, #0x1
  40efa8:	b.ne	40ef5c <ferror@plt+0xbfdc>  // b.any
  40efac:	b	40ef68 <ferror@plt+0xbfe8>
  40efb0:	bl	402ef0 <__errno_location@plt>
  40efb4:	ldr	w20, [x0]
  40efb8:	b	40ef6c <ferror@plt+0xbfec>
  40efbc:	stp	x29, x30, [sp, #-128]!
  40efc0:	mov	x29, sp
  40efc4:	stp	x2, x3, [sp, #96]
  40efc8:	add	x2, sp, #0x80
  40efcc:	stp	x2, x2, [sp, #64]
  40efd0:	add	x2, sp, #0x60
  40efd4:	stp	x19, x20, [sp, #16]
  40efd8:	stp	x21, x22, [sp, #32]
  40efdc:	str	x23, [sp, #48]
  40efe0:	str	x2, [sp, #80]
  40efe4:	mov	w2, #0xffffffe0            	// #-32
  40efe8:	str	w2, [sp, #88]
  40efec:	str	wzr, [sp, #92]
  40eff0:	stp	x4, x5, [sp, #112]
  40eff4:	cbz	w1, 40f03c <ferror@plt+0xc0bc>
  40eff8:	mov	w20, w0
  40effc:	mov	w6, w1
  40f000:	cmp	w1, #0x406
  40f004:	b.eq	40f048 <ferror@plt+0xc0c8>  // b.none
  40f008:	cmp	w1, #0xb
  40f00c:	b.gt	40f14c <ferror@plt+0xc1cc>
  40f010:	cmp	w1, #0x0
  40f014:	b.le	40f158 <ferror@plt+0xc1d8>
  40f018:	sub	w1, w1, #0x1
  40f01c:	cmp	w1, #0xa
  40f020:	b.hi	40f158 <ferror@plt+0xc1d8>  // b.pmore
  40f024:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40f028:	add	x0, x0, #0xb0c
  40f02c:	ldrb	w0, [x0, w1, uxtw]
  40f030:	adr	x1, 40f03c <ferror@plt+0xc0bc>
  40f034:	add	x0, x1, w0, sxtb #2
  40f038:	br	x0
  40f03c:	ldr	w2, [sp, #96]
  40f040:	bl	402d80 <fcntl@plt>
  40f044:	b	40f194 <ferror@plt+0xc214>
  40f048:	adrp	x21, 426000 <_obstack_memory_used@@Base+0x16920>
  40f04c:	mov	w2, #0xffffffe8            	// #-24
  40f050:	str	w2, [sp, #88]
  40f054:	mov	x23, x21
  40f058:	ldr	w2, [x21, #3328]
  40f05c:	ldr	w22, [sp, #96]
  40f060:	tbnz	w2, #31, 40f0f4 <ferror@plt+0xc174>
  40f064:	mov	w2, w22
  40f068:	bl	402d80 <fcntl@plt>
  40f06c:	mov	w19, w0
  40f070:	tbz	w0, #31, 40f084 <ferror@plt+0xc104>
  40f074:	bl	402ef0 <__errno_location@plt>
  40f078:	ldr	w0, [x0]
  40f07c:	cmp	w0, #0x16
  40f080:	b.eq	40f0a4 <ferror@plt+0xc124>  // b.none
  40f084:	mov	w0, #0x1                   	// #1
  40f088:	str	w0, [x23, #3328]
  40f08c:	mov	w0, w19
  40f090:	ldp	x19, x20, [sp, #16]
  40f094:	ldp	x21, x22, [sp, #32]
  40f098:	ldr	x23, [sp, #48]
  40f09c:	ldp	x29, x30, [sp], #128
  40f0a0:	ret
  40f0a4:	mov	w2, w22
  40f0a8:	mov	w0, w20
  40f0ac:	mov	w1, #0x0                   	// #0
  40f0b0:	bl	402d80 <fcntl@plt>
  40f0b4:	mov	w19, w0
  40f0b8:	tbnz	w0, #31, 40f08c <ferror@plt+0xc10c>
  40f0bc:	mov	w0, #0xffffffff            	// #-1
  40f0c0:	str	w0, [x21, #3328]
  40f0c4:	mov	w0, w19
  40f0c8:	mov	w1, #0x1                   	// #1
  40f0cc:	bl	402d80 <fcntl@plt>
  40f0d0:	tbz	w0, #31, 40f118 <ferror@plt+0xc198>
  40f0d4:	bl	402ef0 <__errno_location@plt>
  40f0d8:	mov	x20, x0
  40f0dc:	mov	w0, w19
  40f0e0:	mov	w19, #0xffffffff            	// #-1
  40f0e4:	ldr	w21, [x20]
  40f0e8:	bl	402b50 <close@plt>
  40f0ec:	str	w21, [x20]
  40f0f0:	b	40f08c <ferror@plt+0xc10c>
  40f0f4:	mov	w2, w22
  40f0f8:	mov	w1, #0x0                   	// #0
  40f0fc:	bl	402d80 <fcntl@plt>
  40f100:	mov	w19, w0
  40f104:	tbnz	w0, #31, 40f08c <ferror@plt+0xc10c>
  40f108:	ldr	w0, [x21, #3328]
  40f10c:	cmn	w0, #0x1
  40f110:	b.ne	40f08c <ferror@plt+0xc10c>  // b.any
  40f114:	b	40f0c4 <ferror@plt+0xc144>
  40f118:	orr	w2, w0, #0x1
  40f11c:	mov	w1, #0x2                   	// #2
  40f120:	mov	w0, w19
  40f124:	bl	402d80 <fcntl@plt>
  40f128:	cmn	w0, #0x1
  40f12c:	b.ne	40f08c <ferror@plt+0xc10c>  // b.any
  40f130:	b	40f0d4 <ferror@plt+0xc154>
  40f134:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40f138:	add	x0, x0, #0xb18
  40f13c:	ldrb	w0, [x0, w1, uxtw]
  40f140:	adr	x1, 40f14c <ferror@plt+0xc1cc>
  40f144:	add	x0, x1, w0, sxtb #2
  40f148:	br	x0
  40f14c:	sub	w1, w1, #0x400
  40f150:	cmp	w1, #0xa
  40f154:	b.ls	40f134 <ferror@plt+0xc1b4>  // b.plast
  40f158:	ldr	w1, [sp, #88]
  40f15c:	ldr	x0, [sp, #64]
  40f160:	tbz	w1, #31, 40f174 <ferror@plt+0xc1f4>
  40f164:	cmn	w1, #0x7
  40f168:	b.ge	40f174 <ferror@plt+0xc1f4>  // b.tcont
  40f16c:	ldr	x0, [sp, #72]
  40f170:	add	x0, x0, w1, sxtw
  40f174:	ldr	x2, [x0]
  40f178:	mov	w1, w6
  40f17c:	mov	w0, w20
  40f180:	bl	402d80 <fcntl@plt>
  40f184:	b	40f194 <ferror@plt+0xc214>
  40f188:	mov	w1, w6
  40f18c:	mov	w0, w20
  40f190:	bl	402d80 <fcntl@plt>
  40f194:	mov	w19, w0
  40f198:	b	40f08c <ferror@plt+0xc10c>
  40f19c:	ldr	w1, [sp, #88]
  40f1a0:	ldr	x0, [sp, #64]
  40f1a4:	tbz	w1, #31, 40f1b8 <ferror@plt+0xc238>
  40f1a8:	cmn	w1, #0x7
  40f1ac:	b.ge	40f1b8 <ferror@plt+0xc238>  // b.tcont
  40f1b0:	ldr	x0, [sp, #72]
  40f1b4:	add	x0, x0, w1, sxtw
  40f1b8:	ldr	w2, [x0]
  40f1bc:	mov	w1, w6
  40f1c0:	mov	w0, w20
  40f1c4:	b	40f040 <ferror@plt+0xc0c0>
  40f1c8:	stp	x29, x30, [sp, #-32]!
  40f1cc:	mov	x29, sp
  40f1d0:	str	x19, [sp, #16]
  40f1d4:	mov	x19, x0
  40f1d8:	cbnz	x0, 40f1ec <ferror@plt+0xc26c>
  40f1dc:	mov	x0, x19
  40f1e0:	ldr	x19, [sp, #16]
  40f1e4:	ldp	x29, x30, [sp], #32
  40f1e8:	b	402db0 <fflush@plt>
  40f1ec:	bl	402e90 <__freading@plt>
  40f1f0:	cbz	w0, 40f1dc <ferror@plt+0xc25c>
  40f1f4:	ldr	w0, [x19]
  40f1f8:	tbz	w0, #8, 40f1dc <ferror@plt+0xc25c>
  40f1fc:	mov	x0, x19
  40f200:	mov	w2, #0x1                   	// #1
  40f204:	mov	x1, #0x0                   	// #0
  40f208:	bl	40f210 <ferror@plt+0xc290>
  40f20c:	b	40f1dc <ferror@plt+0xc25c>
  40f210:	stp	x29, x30, [sp, #-48]!
  40f214:	mov	x29, sp
  40f218:	stp	x19, x20, [sp, #16]
  40f21c:	mov	x20, x1
  40f220:	mov	x19, x0
  40f224:	ldr	x1, [x0, #8]
  40f228:	str	x21, [sp, #32]
  40f22c:	mov	w21, w2
  40f230:	ldr	x2, [x0, #16]
  40f234:	cmp	x2, x1
  40f238:	b.ne	40f28c <ferror@plt+0xc30c>  // b.any
  40f23c:	ldp	x1, x2, [x0, #32]
  40f240:	cmp	x2, x1
  40f244:	b.ne	40f28c <ferror@plt+0xc30c>  // b.any
  40f248:	ldr	x1, [x0, #72]
  40f24c:	cbnz	x1, 40f28c <ferror@plt+0xc30c>
  40f250:	bl	4029b0 <fileno@plt>
  40f254:	mov	w2, w21
  40f258:	mov	x1, x20
  40f25c:	bl	402970 <lseek@plt>
  40f260:	cmn	x0, #0x1
  40f264:	b.eq	40f27c <ferror@plt+0xc2fc>  // b.none
  40f268:	ldr	w1, [x19]
  40f26c:	str	x0, [x19, #144]
  40f270:	mov	w0, #0x0                   	// #0
  40f274:	and	w1, w1, #0xffffffef
  40f278:	str	w1, [x19]
  40f27c:	ldp	x19, x20, [sp, #16]
  40f280:	ldr	x21, [sp, #32]
  40f284:	ldp	x29, x30, [sp], #48
  40f288:	ret
  40f28c:	mov	w2, w21
  40f290:	mov	x1, x20
  40f294:	mov	x0, x19
  40f298:	ldp	x19, x20, [sp, #16]
  40f29c:	ldr	x21, [sp, #32]
  40f2a0:	ldp	x29, x30, [sp], #48
  40f2a4:	b	402cc0 <fseeko@plt>
  40f2a8:	stp	x29, x30, [sp, #-64]!
  40f2ac:	mov	x29, sp
  40f2b0:	stp	x19, x20, [sp, #16]
  40f2b4:	stp	x21, x22, [sp, #32]
  40f2b8:	mov	x21, x1
  40f2bc:	mov	x22, x2
  40f2c0:	cbnz	x0, 40f318 <ferror@plt+0xc398>
  40f2c4:	add	x19, sp, #0x3c
  40f2c8:	mov	x2, x22
  40f2cc:	mov	x1, x21
  40f2d0:	mov	x0, x19
  40f2d4:	bl	402810 <mbrtowc@plt>
  40f2d8:	cmp	x22, #0x0
  40f2dc:	mov	x20, x0
  40f2e0:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  40f2e4:	b.ls	40f304 <ferror@plt+0xc384>  // b.plast
  40f2e8:	mov	w0, #0x0                   	// #0
  40f2ec:	bl	40a2b0 <ferror@plt+0x7330>
  40f2f0:	tst	w0, #0xff
  40f2f4:	b.ne	40f304 <ferror@plt+0xc384>  // b.any
  40f2f8:	ldrb	w0, [x21]
  40f2fc:	mov	x20, #0x1                   	// #1
  40f300:	str	w0, [x19]
  40f304:	mov	x0, x20
  40f308:	ldp	x19, x20, [sp, #16]
  40f30c:	ldp	x21, x22, [sp, #32]
  40f310:	ldp	x29, x30, [sp], #64
  40f314:	ret
  40f318:	mov	x19, x0
  40f31c:	b	40f2c8 <ferror@plt+0xc348>
  40f320:	stp	x29, x30, [sp, #-64]!
  40f324:	mov	x2, #0xc9ff                	// #51711
  40f328:	movk	x2, #0x3b9a, lsl #16
  40f32c:	mov	x29, sp
  40f330:	stp	x19, x20, [sp, #16]
  40f334:	mov	x19, x1
  40f338:	ldr	x1, [x0, #8]
  40f33c:	str	x21, [sp, #32]
  40f340:	cmp	x1, x2
  40f344:	b.ls	40f368 <ferror@plt+0xc3e8>  // b.plast
  40f348:	bl	402ef0 <__errno_location@plt>
  40f34c:	mov	w1, #0x16                  	// #22
  40f350:	str	w1, [x0]
  40f354:	mov	w0, #0xffffffff            	// #-1
  40f358:	ldp	x19, x20, [sp, #16]
  40f35c:	ldr	x21, [sp, #32]
  40f360:	ldp	x29, x30, [sp], #64
  40f364:	ret
  40f368:	ldr	x20, [x0]
  40f36c:	mov	x21, #0xa400                	// #41984
  40f370:	movk	x21, #0x1f, lsl #16
  40f374:	str	x1, [sp, #56]
  40f378:	cmp	x20, x21
  40f37c:	b.gt	40f394 <ferror@plt+0xc414>
  40f380:	mov	x1, x19
  40f384:	add	x0, sp, #0x30
  40f388:	str	x20, [sp, #48]
  40f38c:	bl	402d20 <nanosleep@plt>
  40f390:	b	40f358 <ferror@plt+0xc3d8>
  40f394:	mov	x1, x19
  40f398:	add	x0, sp, #0x30
  40f39c:	sub	x20, x20, x21
  40f3a0:	str	x21, [sp, #48]
  40f3a4:	bl	402d20 <nanosleep@plt>
  40f3a8:	cbz	w0, 40f3c0 <ferror@plt+0xc440>
  40f3ac:	cbz	x19, 40f358 <ferror@plt+0xc3d8>
  40f3b0:	ldr	x1, [x19]
  40f3b4:	add	x20, x1, x20
  40f3b8:	str	x20, [x19]
  40f3bc:	b	40f358 <ferror@plt+0xc3d8>
  40f3c0:	str	xzr, [sp, #56]
  40f3c4:	b	40f378 <ferror@plt+0xc3f8>
  40f3c8:	stp	x29, x30, [sp, #-32]!
  40f3cc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40f3d0:	mov	w2, #0x5                   	// #5
  40f3d4:	mov	x29, sp
  40f3d8:	str	x19, [sp, #16]
  40f3dc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x2920>
  40f3e0:	ldr	x19, [x0, #1352]
  40f3e4:	add	x1, x1, #0x943
  40f3e8:	mov	x0, #0x0                   	// #0
  40f3ec:	bl	402e60 <dcgettext@plt>
  40f3f0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0x2920>
  40f3f4:	mov	x3, x0
  40f3f8:	add	x2, x2, #0x627
  40f3fc:	mov	x0, x19
  40f400:	mov	w1, #0x1                   	// #1
  40f404:	bl	402c70 <__fprintf_chk@plt>
  40f408:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40f40c:	ldr	w0, [x0, #1240]
  40f410:	bl	4028a0 <exit@plt>
  40f414:	mov	x2, x0
  40f418:	mov	x0, x1
  40f41c:	ldrb	w4, [x2, #80]
  40f420:	ldr	x3, [x2, #56]
  40f424:	tbz	w4, #0, 40f434 <ferror@plt+0xc4b4>
  40f428:	ldr	x0, [x2, #72]
  40f42c:	mov	x16, x3
  40f430:	br	x16
  40f434:	mov	x16, x3
  40f438:	br	x16
  40f43c:	mov	x2, x0
  40f440:	mov	x0, x1
  40f444:	ldrb	w4, [x2, #80]
  40f448:	ldr	x3, [x2, #64]
  40f44c:	tbz	w4, #0, 40f45c <ferror@plt+0xc4dc>
  40f450:	ldr	x0, [x2, #72]
  40f454:	mov	x16, x3
  40f458:	br	x16
  40f45c:	mov	x16, x3
  40f460:	br	x16
  40f464:	stp	x29, x30, [sp, #-48]!
  40f468:	cmp	x2, #0x0
  40f46c:	mov	x29, sp
  40f470:	stp	x19, x20, [sp, #16]
  40f474:	mov	x20, x2
  40f478:	mov	x19, x0
  40f47c:	mov	x2, #0x10                  	// #16
  40f480:	csel	x20, x20, x2, ne  // ne = any
  40f484:	cmp	x1, #0x0
  40f488:	str	x21, [sp, #32]
  40f48c:	mov	x2, #0xfe0                 	// #4064
  40f490:	sub	x21, x20, #0x1
  40f494:	csel	x1, x1, x2, ne  // ne = any
  40f498:	str	x1, [x0]
  40f49c:	str	x21, [x0, #48]
  40f4a0:	bl	40f414 <ferror@plt+0xc494>
  40f4a4:	str	x0, [x19, #8]
  40f4a8:	cbnz	x0, 40f4b8 <ferror@plt+0xc538>
  40f4ac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40f4b0:	ldr	x0, [x0, #1336]
  40f4b4:	blr	x0
  40f4b8:	add	x2, x0, #0x10
  40f4bc:	neg	x20, x20
  40f4c0:	ldr	x1, [x19]
  40f4c4:	add	x2, x2, x21
  40f4c8:	and	x20, x2, x20
  40f4cc:	ldr	x21, [sp, #32]
  40f4d0:	stp	x20, x20, [x19, #16]
  40f4d4:	add	x1, x0, x1
  40f4d8:	str	x1, [x0]
  40f4dc:	str	x1, [x19, #32]
  40f4e0:	str	xzr, [x0, #8]
  40f4e4:	ldrb	w0, [x19, #80]
  40f4e8:	and	w0, w0, #0xfffffff9
  40f4ec:	strb	w0, [x19, #80]
  40f4f0:	mov	w0, #0x1                   	// #1
  40f4f4:	ldp	x19, x20, [sp, #16]
  40f4f8:	ldp	x29, x30, [sp], #48
  40f4fc:	ret

000000000040f500 <_obstack_begin@@Base>:
  40f500:	stp	x3, x4, [x0, #56]
  40f504:	ldrb	w3, [x0, #80]
  40f508:	and	w3, w3, #0xfffffffe
  40f50c:	strb	w3, [x0, #80]
  40f510:	b	40f464 <ferror@plt+0xc4e4>

000000000040f514 <_obstack_begin_1@@Base>:
  40f514:	stp	x3, x4, [x0, #56]
  40f518:	ldrb	w3, [x0, #80]
  40f51c:	str	x5, [x0, #72]
  40f520:	orr	w3, w3, #0x1
  40f524:	strb	w3, [x0, #80]
  40f528:	b	40f464 <ferror@plt+0xc4e4>

000000000040f52c <_obstack_newchunk@@Base>:
  40f52c:	stp	x29, x30, [sp, #-64]!
  40f530:	mov	x29, sp
  40f534:	stp	x19, x20, [sp, #16]
  40f538:	ldp	x2, x20, [x0, #16]
  40f53c:	stp	x21, x22, [sp, #32]
  40f540:	sub	x21, x20, x2
  40f544:	ldr	x20, [x0, #48]
  40f548:	adds	x1, x21, x1
  40f54c:	cset	x4, cs  // cs = hs, nlast
  40f550:	adds	x1, x20, x1
  40f554:	lsr	x20, x21, #3
  40f558:	add	x20, x20, #0x64
  40f55c:	cset	x3, cs  // cs = hs, nlast
  40f560:	add	x2, x20, x1
  40f564:	ldr	x20, [x0]
  40f568:	str	x23, [sp, #48]
  40f56c:	ldr	x23, [x0, #8]
  40f570:	cmp	x20, x1
  40f574:	csel	x20, x20, x1, cs  // cs = hs, nlast
  40f578:	cmp	x20, x2
  40f57c:	csel	x20, x20, x2, cs  // cs = hs, nlast
  40f580:	cmp	x4, #0x0
  40f584:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  40f588:	b.eq	40f598 <_obstack_newchunk@@Base+0x6c>  // b.none
  40f58c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0x16920>
  40f590:	ldr	x0, [x0, #1336]
  40f594:	blr	x0
  40f598:	mov	x19, x0
  40f59c:	mov	x1, x20
  40f5a0:	bl	40f414 <ferror@plt+0xc494>
  40f5a4:	mov	x22, x0
  40f5a8:	cbz	x0, 40f58c <_obstack_newchunk@@Base+0x60>
  40f5ac:	mov	x2, x0
  40f5b0:	str	x0, [x19, #8]
  40f5b4:	ldr	x1, [x19, #16]
  40f5b8:	str	x23, [x0, #8]
  40f5bc:	add	x20, x0, x20
  40f5c0:	str	x20, [x19, #32]
  40f5c4:	str	x20, [x2], #16
  40f5c8:	ldr	x20, [x19, #48]
  40f5cc:	add	x2, x2, x20
  40f5d0:	bic	x20, x2, x20
  40f5d4:	mov	x2, x21
  40f5d8:	mov	x0, x20
  40f5dc:	bl	402820 <memcpy@plt>
  40f5e0:	ldrb	w0, [x19, #80]
  40f5e4:	tbnz	w0, #1, 40f618 <_obstack_newchunk@@Base+0xec>
  40f5e8:	ldr	x0, [x19, #48]
  40f5ec:	add	x1, x23, #0x10
  40f5f0:	add	x1, x1, x0
  40f5f4:	bic	x0, x1, x0
  40f5f8:	ldr	x1, [x19, #16]
  40f5fc:	cmp	x1, x0
  40f600:	b.ne	40f618 <_obstack_newchunk@@Base+0xec>  // b.any
  40f604:	ldr	x0, [x23, #8]
  40f608:	str	x0, [x22, #8]
  40f60c:	mov	x1, x23
  40f610:	mov	x0, x19
  40f614:	bl	40f43c <ferror@plt+0xc4bc>
  40f618:	ldrb	w0, [x19, #80]
  40f61c:	ldr	x23, [sp, #48]
  40f620:	and	w0, w0, #0xfffffffd
  40f624:	str	x20, [x19, #16]
  40f628:	add	x20, x20, x21
  40f62c:	strb	w0, [x19, #80]
  40f630:	ldp	x21, x22, [sp, #32]
  40f634:	str	x20, [x19, #24]
  40f638:	ldp	x19, x20, [sp, #16]
  40f63c:	ldp	x29, x30, [sp], #64
  40f640:	ret

000000000040f644 <_obstack_allocated_p@@Base>:
  40f644:	ldr	x0, [x0, #8]
  40f648:	cbz	x0, 40f660 <_obstack_allocated_p@@Base+0x1c>
  40f64c:	cmp	x0, x1
  40f650:	b.cs	40f644 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  40f654:	ldr	x2, [x0]
  40f658:	cmp	x2, x1
  40f65c:	b.cc	40f644 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  40f660:	cmp	x0, #0x0
  40f664:	cset	w0, ne  // ne = any
  40f668:	ret

000000000040f66c <_obstack_free@@Base>:
  40f66c:	stp	x29, x30, [sp, #-48]!
  40f670:	mov	x29, sp
  40f674:	stp	x19, x20, [sp, #16]
  40f678:	mov	x19, x0
  40f67c:	mov	x20, x1
  40f680:	ldr	x1, [x0, #8]
  40f684:	str	x21, [sp, #32]
  40f688:	cbz	x1, 40f6d8 <_obstack_free@@Base+0x6c>
  40f68c:	cmp	x1, x20
  40f690:	b.cs	40f6b8 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  40f694:	ldr	x0, [x1]
  40f698:	cmp	x0, x20
  40f69c:	b.cc	40f6b8 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  40f6a0:	stp	x1, x20, [x19, #8]
  40f6a4:	stp	x20, x0, [x19, #24]
  40f6a8:	ldp	x19, x20, [sp, #16]
  40f6ac:	ldr	x21, [sp, #32]
  40f6b0:	ldp	x29, x30, [sp], #48
  40f6b4:	ret
  40f6b8:	mov	x0, x19
  40f6bc:	ldr	x21, [x1, #8]
  40f6c0:	bl	40f43c <ferror@plt+0xc4bc>
  40f6c4:	ldrb	w0, [x19, #80]
  40f6c8:	mov	x1, x21
  40f6cc:	orr	w0, w0, #0x2
  40f6d0:	strb	w0, [x19, #80]
  40f6d4:	b	40f688 <_obstack_free@@Base+0x1c>
  40f6d8:	cbz	x20, 40f6a8 <_obstack_free@@Base+0x3c>
  40f6dc:	bl	402bd0 <abort@plt>

000000000040f6e0 <_obstack_memory_used@@Base>:
  40f6e0:	ldr	x1, [x0, #8]
  40f6e4:	mov	x0, #0x0                   	// #0
  40f6e8:	cbnz	x1, 40f6f0 <_obstack_memory_used@@Base+0x10>
  40f6ec:	ret
  40f6f0:	ldr	x2, [x1]
  40f6f4:	sub	x2, x2, x1
  40f6f8:	add	x0, x0, x2
  40f6fc:	ldr	x1, [x1, #8]
  40f700:	b	40f6e8 <_obstack_memory_used@@Base+0x8>
  40f704:	cmp	w0, #0x5a
  40f708:	b.gt	40f724 <_obstack_memory_used@@Base+0x44>
  40f70c:	cmp	w0, #0x40
  40f710:	b.gt	40f730 <_obstack_memory_used@@Base+0x50>
  40f714:	sub	w0, w0, #0x30
  40f718:	cmp	w0, #0x9
  40f71c:	cset	w0, ls  // ls = plast
  40f720:	ret
  40f724:	sub	w0, w0, #0x61
  40f728:	cmp	w0, #0x19
  40f72c:	b	40f71c <_obstack_memory_used@@Base+0x3c>
  40f730:	mov	w0, #0x1                   	// #1
  40f734:	b	40f720 <_obstack_memory_used@@Base+0x40>
  40f738:	cmp	w0, #0x5a
  40f73c:	b.gt	40f74c <_obstack_memory_used@@Base+0x6c>
  40f740:	cmp	w0, #0x40
  40f744:	cset	w0, gt
  40f748:	ret
  40f74c:	sub	w0, w0, #0x61
  40f750:	cmp	w0, #0x19
  40f754:	cset	w0, ls  // ls = plast
  40f758:	b	40f748 <_obstack_memory_used@@Base+0x68>
  40f75c:	cmp	w0, #0x7f
  40f760:	cset	w0, ls  // ls = plast
  40f764:	ret
  40f768:	cmp	w0, #0x20
  40f76c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40f770:	cset	w0, eq  // eq = none
  40f774:	ret
  40f778:	cmp	w0, #0x1f
  40f77c:	b.gt	40f78c <_obstack_memory_used@@Base+0xac>
  40f780:	mvn	w0, w0
  40f784:	lsr	w0, w0, #31
  40f788:	ret
  40f78c:	cmp	w0, #0x7f
  40f790:	cset	w0, eq  // eq = none
  40f794:	b	40f788 <_obstack_memory_used@@Base+0xa8>
  40f798:	sub	w0, w0, #0x30
  40f79c:	cmp	w0, #0x9
  40f7a0:	cset	w0, ls  // ls = plast
  40f7a4:	ret
  40f7a8:	sub	w0, w0, #0x21
  40f7ac:	cmp	w0, #0x5d
  40f7b0:	cset	w0, ls  // ls = plast
  40f7b4:	ret
  40f7b8:	sub	w0, w0, #0x61
  40f7bc:	cmp	w0, #0x19
  40f7c0:	cset	w0, ls  // ls = plast
  40f7c4:	ret
  40f7c8:	sub	w0, w0, #0x20
  40f7cc:	cmp	w0, #0x5e
  40f7d0:	cset	w0, ls  // ls = plast
  40f7d4:	ret
  40f7d8:	cmp	w0, #0x60
  40f7dc:	b.gt	40f80c <_obstack_memory_used@@Base+0x12c>
  40f7e0:	cmp	w0, #0x5a
  40f7e4:	b.gt	40f818 <_obstack_memory_used@@Base+0x138>
  40f7e8:	cmp	w0, #0x2f
  40f7ec:	b.gt	40f7fc <_obstack_memory_used@@Base+0x11c>
  40f7f0:	cmp	w0, #0x20
  40f7f4:	cset	w0, gt
  40f7f8:	ret
  40f7fc:	sub	w0, w0, #0x3a
  40f800:	cmp	w0, #0x6
  40f804:	cset	w0, ls  // ls = plast
  40f808:	b	40f7f8 <_obstack_memory_used@@Base+0x118>
  40f80c:	sub	w0, w0, #0x7b
  40f810:	cmp	w0, #0x3
  40f814:	b	40f804 <_obstack_memory_used@@Base+0x124>
  40f818:	mov	w0, #0x1                   	// #1
  40f81c:	b	40f7f8 <_obstack_memory_used@@Base+0x118>
  40f820:	cmp	w0, #0xd
  40f824:	b.gt	40f834 <_obstack_memory_used@@Base+0x154>
  40f828:	cmp	w0, #0x8
  40f82c:	cset	w0, gt
  40f830:	ret
  40f834:	cmp	w0, #0x20
  40f838:	cset	w0, eq  // eq = none
  40f83c:	b	40f830 <_obstack_memory_used@@Base+0x150>
  40f840:	sub	w0, w0, #0x41
  40f844:	cmp	w0, #0x19
  40f848:	cset	w0, ls  // ls = plast
  40f84c:	ret
  40f850:	sub	w0, w0, #0x30
  40f854:	cmp	w0, #0x36
  40f858:	b.hi	40f878 <_obstack_memory_used@@Base+0x198>  // b.pmore
  40f85c:	mov	x1, #0x1                   	// #1
  40f860:	lsl	x0, x1, x0
  40f864:	mov	x1, #0x7e0000007e0000      	// #35465847073800192
  40f868:	movk	x1, #0x3ff
  40f86c:	tst	x0, x1
  40f870:	cset	w0, ne  // ne = any
  40f874:	ret
  40f878:	mov	w0, #0x0                   	// #0
  40f87c:	b	40f874 <_obstack_memory_used@@Base+0x194>
  40f880:	sub	w1, w0, #0x41
  40f884:	cmp	w1, #0x19
  40f888:	b.hi	40f890 <_obstack_memory_used@@Base+0x1b0>  // b.pmore
  40f88c:	add	w0, w0, #0x20
  40f890:	ret
  40f894:	sub	w1, w0, #0x61
  40f898:	cmp	w1, #0x19
  40f89c:	b.hi	40f8a4 <_obstack_memory_used@@Base+0x1c4>  // b.pmore
  40f8a0:	sub	w0, w0, #0x20
  40f8a4:	ret
  40f8a8:	stp	x29, x30, [sp, #-48]!
  40f8ac:	mov	x29, sp
  40f8b0:	stp	x19, x20, [sp, #16]
  40f8b4:	mov	x19, x0
  40f8b8:	str	x21, [sp, #32]
  40f8bc:	bl	402980 <__fpending@plt>
  40f8c0:	mov	x20, x0
  40f8c4:	mov	x0, x19
  40f8c8:	bl	4028e0 <ferror_unlocked@plt>
  40f8cc:	mov	w21, w0
  40f8d0:	mov	x0, x19
  40f8d4:	bl	40ef28 <ferror@plt+0xbfa8>
  40f8d8:	cbnz	w21, 40f904 <_obstack_memory_used@@Base+0x224>
  40f8dc:	cbz	w0, 40f8f4 <_obstack_memory_used@@Base+0x214>
  40f8e0:	cbnz	x20, 40f910 <_obstack_memory_used@@Base+0x230>
  40f8e4:	bl	402ef0 <__errno_location@plt>
  40f8e8:	ldr	w0, [x0]
  40f8ec:	cmp	w0, #0x9
  40f8f0:	csetm	w0, ne  // ne = any
  40f8f4:	ldp	x19, x20, [sp, #16]
  40f8f8:	ldr	x21, [sp, #32]
  40f8fc:	ldp	x29, x30, [sp], #48
  40f900:	ret
  40f904:	cbnz	w0, 40f910 <_obstack_memory_used@@Base+0x230>
  40f908:	bl	402ef0 <__errno_location@plt>
  40f90c:	str	wzr, [x0]
  40f910:	mov	w0, #0xffffffff            	// #-1
  40f914:	b	40f8f4 <_obstack_memory_used@@Base+0x214>
  40f918:	mov	x0, #0xc3e0000000000000    	// #-4332462841530417152
  40f91c:	fmov	d1, x0
  40f920:	fcmpe	d0, d1
  40f924:	b.gt	40f934 <_obstack_memory_used@@Base+0x254>
  40f928:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  40f92c:	mov	x1, #0x0                   	// #0
  40f930:	ret
  40f934:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
  40f938:	fmov	d1, x0
  40f93c:	fcmpe	d0, d1
  40f940:	b.mi	40f954 <_obstack_memory_used@@Base+0x274>  // b.first
  40f944:	mov	x1, #0xc9ff                	// #51711
  40f948:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40f94c:	movk	x1, #0x3b9a, lsl #16
  40f950:	b	40f930 <_obstack_memory_used@@Base+0x250>
  40f954:	fcvtzs	d1, d0
  40f958:	mov	x0, #0xcd6500000000        	// #225833675390976
  40f95c:	movk	x0, #0x41cd, lsl #48
  40f960:	mov	x3, #0xca00                	// #51712
  40f964:	movk	x3, #0x3b9a, lsl #16
  40f968:	scvtf	d2, d1
  40f96c:	fsub	d0, d0, d2
  40f970:	fmov	d2, x0
  40f974:	fmov	x0, d1
  40f978:	fmul	d0, d0, d2
  40f97c:	fcvtzs	x1, d0
  40f980:	scvtf	d2, x1
  40f984:	fcmpe	d2, d0
  40f988:	cinc	x2, x1, mi  // mi = first
  40f98c:	sdiv	x1, x2, x3
  40f990:	add	x0, x1, x0
  40f994:	msub	x1, x1, x3, x2
  40f998:	tbz	x1, #63, 40f930 <_obstack_memory_used@@Base+0x250>
  40f99c:	sub	x0, x0, #0x1
  40f9a0:	add	x1, x1, x3
  40f9a4:	b	40f930 <_obstack_memory_used@@Base+0x250>
  40f9a8:	stp	x29, x30, [sp, #-48]!
  40f9ac:	cmp	w0, #0x2
  40f9b0:	mov	x29, sp
  40f9b4:	stp	x19, x20, [sp, #16]
  40f9b8:	mov	w19, w0
  40f9bc:	stp	x21, x22, [sp, #32]
  40f9c0:	b.hi	40f9e8 <_obstack_memory_used@@Base+0x308>  // b.pmore
  40f9c4:	bl	40f9fc <_obstack_memory_used@@Base+0x31c>
  40f9c8:	mov	w21, w0
  40f9cc:	bl	402ef0 <__errno_location@plt>
  40f9d0:	mov	x20, x0
  40f9d4:	mov	w0, w19
  40f9d8:	mov	w19, w21
  40f9dc:	ldr	w22, [x20]
  40f9e0:	bl	402b50 <close@plt>
  40f9e4:	str	w22, [x20]
  40f9e8:	mov	w0, w19
  40f9ec:	ldp	x19, x20, [sp, #16]
  40f9f0:	ldp	x21, x22, [sp, #32]
  40f9f4:	ldp	x29, x30, [sp], #48
  40f9f8:	ret
  40f9fc:	ands	w1, w1, #0x80000
  40fa00:	mov	w3, #0x406                 	// #1030
  40fa04:	mov	w2, #0x3                   	// #3
  40fa08:	csel	w1, w1, w3, eq  // eq = none
  40fa0c:	b	40efbc <ferror@plt+0xc03c>
  40fa10:	stp	x29, x30, [sp, #-48]!
  40fa14:	mov	x29, sp
  40fa18:	stp	x19, x20, [sp, #16]
  40fa1c:	str	x21, [sp, #32]
  40fa20:	mov	x21, x1
  40fa24:	bl	402a10 <fopen@plt>
  40fa28:	mov	x19, x0
  40fa2c:	cbz	x0, 40fa64 <_obstack_memory_used@@Base+0x384>
  40fa30:	bl	4029b0 <fileno@plt>
  40fa34:	cmp	w0, #0x2
  40fa38:	b.hi	40fa64 <_obstack_memory_used@@Base+0x384>  // b.pmore
  40fa3c:	bl	40fc88 <_obstack_memory_used@@Base+0x5a8>
  40fa40:	mov	w20, w0
  40fa44:	tbz	w0, #31, 40fa78 <_obstack_memory_used@@Base+0x398>
  40fa48:	bl	402ef0 <__errno_location@plt>
  40fa4c:	mov	x20, x0
  40fa50:	mov	x0, x19
  40fa54:	ldr	w21, [x20]
  40fa58:	bl	40ef28 <ferror@plt+0xbfa8>
  40fa5c:	str	w21, [x20]
  40fa60:	mov	x19, #0x0                   	// #0
  40fa64:	mov	x0, x19
  40fa68:	ldp	x19, x20, [sp, #16]
  40fa6c:	ldr	x21, [sp, #32]
  40fa70:	ldp	x29, x30, [sp], #48
  40fa74:	ret
  40fa78:	mov	x0, x19
  40fa7c:	bl	40ef28 <ferror@plt+0xbfa8>
  40fa80:	cbz	w0, 40faa0 <_obstack_memory_used@@Base+0x3c0>
  40fa84:	bl	402ef0 <__errno_location@plt>
  40fa88:	mov	x19, x0
  40fa8c:	mov	w0, w20
  40fa90:	ldr	w21, [x19]
  40fa94:	bl	402b50 <close@plt>
  40fa98:	str	w21, [x19]
  40fa9c:	b	40fa60 <_obstack_memory_used@@Base+0x380>
  40faa0:	mov	x1, x21
  40faa4:	mov	w0, w20
  40faa8:	bl	402af0 <fdopen@plt>
  40faac:	mov	x19, x0
  40fab0:	cbnz	x0, 40fa64 <_obstack_memory_used@@Base+0x384>
  40fab4:	b	40fa84 <_obstack_memory_used@@Base+0x3a4>
  40fab8:	stp	x29, x30, [sp, #-16]!
  40fabc:	mov	w0, #0xe                   	// #14
  40fac0:	mov	x29, sp
  40fac4:	bl	402a00 <nl_langinfo@plt>
  40fac8:	cbz	x0, 40fad4 <_obstack_memory_used@@Base+0x3f4>
  40facc:	ldrb	w1, [x0]
  40fad0:	cbnz	w1, 40fadc <_obstack_memory_used@@Base+0x3fc>
  40fad4:	adrp	x0, 412000 <_obstack_memory_used@@Base+0x2920>
  40fad8:	add	x0, x0, #0xb23
  40fadc:	ldp	x29, x30, [sp], #16
  40fae0:	ret
  40fae4:	stp	x29, x30, [sp, #-64]!
  40fae8:	mov	x29, sp
  40faec:	stp	x19, x20, [sp, #16]
  40faf0:	mov	x20, x2
  40faf4:	mov	x19, x3
  40faf8:	stp	x21, x22, [sp, #32]
  40fafc:	mov	x21, x0
  40fb00:	stp	x23, x24, [sp, #48]
  40fb04:	mov	x23, x1
  40fb08:	bl	402ef0 <__errno_location@plt>
  40fb0c:	mov	x24, x0
  40fb10:	str	wzr, [x24]
  40fb14:	mov	x1, x20
  40fb18:	mov	x0, x21
  40fb1c:	bl	402e80 <strcoll@plt>
  40fb20:	cbnz	w0, 40fb58 <_obstack_memory_used@@Base+0x478>
  40fb24:	mov	x0, x21
  40fb28:	bl	402880 <strlen@plt>
  40fb2c:	add	x22, x0, #0x1
  40fb30:	mov	x0, x20
  40fb34:	bl	402880 <strlen@plt>
  40fb38:	add	x1, x0, #0x1
  40fb3c:	add	x21, x21, x22
  40fb40:	add	x20, x20, x1
  40fb44:	sub	x19, x19, x1
  40fb48:	subs	x23, x23, x22
  40fb4c:	b.ne	40fb6c <_obstack_memory_used@@Base+0x48c>  // b.any
  40fb50:	cmp	x19, #0x0
  40fb54:	csetm	w0, ne  // ne = any
  40fb58:	ldp	x19, x20, [sp, #16]
  40fb5c:	ldp	x21, x22, [sp, #32]
  40fb60:	ldp	x23, x24, [sp, #48]
  40fb64:	ldp	x29, x30, [sp], #64
  40fb68:	ret
  40fb6c:	cbnz	x19, 40fb10 <_obstack_memory_used@@Base+0x430>
  40fb70:	mov	w0, #0x1                   	// #1
  40fb74:	b	40fb58 <_obstack_memory_used@@Base+0x478>
  40fb78:	stp	x29, x30, [sp, #-80]!
  40fb7c:	cmp	x1, x3
  40fb80:	mov	x29, sp
  40fb84:	stp	x19, x20, [sp, #16]
  40fb88:	mov	x19, x1
  40fb8c:	stp	x21, x22, [sp, #32]
  40fb90:	mov	x22, x2
  40fb94:	mov	x21, x3
  40fb98:	stp	x23, x24, [sp, #48]
  40fb9c:	mov	x23, x0
  40fba0:	str	x25, [sp, #64]
  40fba4:	b.ne	40fbe0 <_obstack_memory_used@@Base+0x500>  // b.any
  40fba8:	mov	x2, x1
  40fbac:	mov	x1, x22
  40fbb0:	bl	402c40 <memcmp@plt>
  40fbb4:	mov	w20, w0
  40fbb8:	cbnz	w0, 40fbe0 <_obstack_memory_used@@Base+0x500>
  40fbbc:	bl	402ef0 <__errno_location@plt>
  40fbc0:	str	wzr, [x0]
  40fbc4:	mov	w0, w20
  40fbc8:	ldp	x19, x20, [sp, #16]
  40fbcc:	ldp	x21, x22, [sp, #32]
  40fbd0:	ldp	x23, x24, [sp, #48]
  40fbd4:	ldr	x25, [sp, #64]
  40fbd8:	ldp	x29, x30, [sp], #80
  40fbdc:	ret
  40fbe0:	ldrb	w25, [x23, x19]
  40fbe4:	add	x3, x21, #0x1
  40fbe8:	ldrb	w24, [x22, x21]
  40fbec:	mov	x2, x22
  40fbf0:	strb	wzr, [x23, x19]
  40fbf4:	add	x1, x19, #0x1
  40fbf8:	strb	wzr, [x22, x21]
  40fbfc:	mov	x0, x23
  40fc00:	bl	40fae4 <_obstack_memory_used@@Base+0x404>
  40fc04:	strb	w25, [x23, x19]
  40fc08:	mov	w20, w0
  40fc0c:	strb	w24, [x22, x21]
  40fc10:	b	40fbc4 <_obstack_memory_used@@Base+0x4e4>
  40fc14:	stp	x29, x30, [sp, #-48]!
  40fc18:	cmp	x1, x3
  40fc1c:	mov	x29, sp
  40fc20:	stp	x19, x20, [sp, #16]
  40fc24:	mov	x19, x1
  40fc28:	mov	x20, x2
  40fc2c:	stp	x21, x22, [sp, #32]
  40fc30:	mov	x22, x0
  40fc34:	mov	x21, x3
  40fc38:	b.ne	40fc4c <_obstack_memory_used@@Base+0x56c>  // b.any
  40fc3c:	mov	x2, x1
  40fc40:	mov	x1, x20
  40fc44:	bl	402c40 <memcmp@plt>
  40fc48:	cbz	w0, 40fc6c <_obstack_memory_used@@Base+0x58c>
  40fc4c:	mov	x3, x21
  40fc50:	mov	x2, x20
  40fc54:	mov	x1, x19
  40fc58:	mov	x0, x22
  40fc5c:	ldp	x19, x20, [sp, #16]
  40fc60:	ldp	x21, x22, [sp, #32]
  40fc64:	ldp	x29, x30, [sp], #48
  40fc68:	b	40fae4 <_obstack_memory_used@@Base+0x404>
  40fc6c:	bl	402ef0 <__errno_location@plt>
  40fc70:	ldp	x19, x20, [sp, #16]
  40fc74:	ldp	x21, x22, [sp, #32]
  40fc78:	str	wzr, [x0]
  40fc7c:	mov	w0, #0x0                   	// #0
  40fc80:	ldp	x29, x30, [sp], #48
  40fc84:	ret
  40fc88:	mov	w2, #0x3                   	// #3
  40fc8c:	mov	w1, #0x0                   	// #0
  40fc90:	b	40efbc <ferror@plt+0xc03c>
  40fc94:	stp	x29, x30, [sp, #-32]!
  40fc98:	mov	x29, sp
  40fc9c:	str	q0, [sp, #16]
  40fca0:	ldp	x8, x0, [sp, #16]
  40fca4:	str	q1, [sp, #16]
  40fca8:	ldp	x9, x1, [sp, #16]
  40fcac:	mrs	x2, fpcr
  40fcb0:	ubfx	x3, x0, #48, #15
  40fcb4:	ubfx	x2, x0, #0, #48
  40fcb8:	ubfx	x7, x1, #0, #48
  40fcbc:	lsr	x0, x0, #63
  40fcc0:	ubfx	x5, x1, #48, #15
  40fcc4:	lsr	x1, x1, #63
  40fcc8:	mov	x10, #0x7fff                	// #32767
  40fccc:	mov	x4, x8
  40fcd0:	and	w0, w0, #0xff
  40fcd4:	mov	x6, x9
  40fcd8:	and	w1, w1, #0xff
  40fcdc:	cmp	x3, x10
  40fce0:	b.ne	40fcf8 <_obstack_memory_used@@Base+0x618>  // b.any
  40fce4:	orr	x10, x2, x8
  40fce8:	cbnz	x10, 40fd64 <_obstack_memory_used@@Base+0x684>
  40fcec:	cmp	x5, x3
  40fcf0:	b.ne	40fd8c <_obstack_memory_used@@Base+0x6ac>  // b.any
  40fcf4:	b	40fd00 <_obstack_memory_used@@Base+0x620>
  40fcf8:	cmp	x5, x10
  40fcfc:	b.ne	40fd08 <_obstack_memory_used@@Base+0x628>  // b.any
  40fd00:	orr	x10, x7, x6
  40fd04:	cbnz	x10, 40fd50 <_obstack_memory_used@@Base+0x670>
  40fd08:	cmp	x3, x5
  40fd0c:	b.ne	40fd8c <_obstack_memory_used@@Base+0x6ac>  // b.any
  40fd10:	cmp	x2, x7
  40fd14:	ccmp	x8, x9, #0x0, eq  // eq = none
  40fd18:	b.ne	40fd8c <_obstack_memory_used@@Base+0x6ac>  // b.any
  40fd1c:	cmp	w0, w1
  40fd20:	b.eq	40fd48 <_obstack_memory_used@@Base+0x668>  // b.none
  40fd24:	cbnz	x3, 40fd8c <_obstack_memory_used@@Base+0x6ac>
  40fd28:	orr	x2, x2, x4
  40fd2c:	cmp	x2, #0x0
  40fd30:	cset	w0, ne  // ne = any
  40fd34:	ldp	x29, x30, [sp], #32
  40fd38:	ret
  40fd3c:	mov	w0, #0x1                   	// #1
  40fd40:	bl	410014 <_obstack_memory_used@@Base+0x934>
  40fd44:	b	40fd8c <_obstack_memory_used@@Base+0x6ac>
  40fd48:	mov	w0, #0x0                   	// #0
  40fd4c:	b	40fd34 <_obstack_memory_used@@Base+0x654>
  40fd50:	mov	x0, #0x7fff                	// #32767
  40fd54:	cmp	x3, x0
  40fd58:	b.ne	40fd84 <_obstack_memory_used@@Base+0x6a4>  // b.any
  40fd5c:	orr	x4, x2, x4
  40fd60:	cbz	x4, 40fd84 <_obstack_memory_used@@Base+0x6a4>
  40fd64:	tst	x2, #0x800000000000
  40fd68:	b.eq	40fd3c <_obstack_memory_used@@Base+0x65c>  // b.none
  40fd6c:	mov	x1, #0x7fff                	// #32767
  40fd70:	mov	w0, #0x1                   	// #1
  40fd74:	cmp	x5, x1
  40fd78:	b.ne	40fd34 <_obstack_memory_used@@Base+0x654>  // b.any
  40fd7c:	orr	x6, x7, x6
  40fd80:	cbz	x6, 40fd34 <_obstack_memory_used@@Base+0x654>
  40fd84:	tst	x7, #0x800000000000
  40fd88:	b.eq	40fd3c <_obstack_memory_used@@Base+0x65c>  // b.none
  40fd8c:	mov	w0, #0x1                   	// #1
  40fd90:	b	40fd34 <_obstack_memory_used@@Base+0x654>
  40fd94:	stp	x29, x30, [sp, #-32]!
  40fd98:	mov	x29, sp
  40fd9c:	str	q0, [sp, #16]
  40fda0:	ldp	x8, x1, [sp, #16]
  40fda4:	str	q1, [sp, #16]
  40fda8:	ldp	x7, x0, [sp, #16]
  40fdac:	mrs	x2, fpcr
  40fdb0:	ubfx	x10, x1, #48, #15
  40fdb4:	lsr	x2, x0, #63
  40fdb8:	ubfx	x4, x1, #0, #48
  40fdbc:	lsr	x1, x1, #63
  40fdc0:	ubfx	x3, x0, #0, #48
  40fdc4:	ubfx	x9, x0, #48, #15
  40fdc8:	mov	x5, x8
  40fdcc:	mov	x0, #0x7fff                	// #32767
  40fdd0:	and	w1, w1, #0xff
  40fdd4:	mov	x6, x7
  40fdd8:	and	w2, w2, #0xff
  40fddc:	cmp	x10, x0
  40fde0:	b.ne	40fdec <_obstack_memory_used@@Base+0x70c>  // b.any
  40fde4:	orr	x11, x4, x8
  40fde8:	cbnz	x11, 40febc <_obstack_memory_used@@Base+0x7dc>
  40fdec:	cmp	x9, x0
  40fdf0:	b.ne	40fdfc <_obstack_memory_used@@Base+0x71c>  // b.any
  40fdf4:	orr	x0, x3, x6
  40fdf8:	cbnz	x0, 40febc <_obstack_memory_used@@Base+0x7dc>
  40fdfc:	cbnz	x10, 40fe3c <_obstack_memory_used@@Base+0x75c>
  40fe00:	orr	x5, x4, x5
  40fe04:	cmp	x5, #0x0
  40fe08:	cset	w5, eq  // eq = none
  40fe0c:	cbnz	x9, 40fe44 <_obstack_memory_used@@Base+0x764>
  40fe10:	orr	x6, x3, x6
  40fe14:	cmp	x6, #0x0
  40fe18:	cset	w0, eq  // eq = none
  40fe1c:	csel	w6, w5, wzr, eq  // eq = none
  40fe20:	cbnz	w6, 40fecc <_obstack_memory_used@@Base+0x7ec>
  40fe24:	and	x2, x2, #0xff
  40fe28:	cbz	w5, 40fe4c <_obstack_memory_used@@Base+0x76c>
  40fe2c:	cmp	x2, #0x0
  40fe30:	csinv	w0, w5, wzr, ne  // ne = any
  40fe34:	ldp	x29, x30, [sp], #32
  40fe38:	ret
  40fe3c:	mov	w5, #0x0                   	// #0
  40fe40:	b	40fe0c <_obstack_memory_used@@Base+0x72c>
  40fe44:	mov	w0, #0x0                   	// #0
  40fe48:	b	40fe24 <_obstack_memory_used@@Base+0x744>
  40fe4c:	and	x1, x1, #0xff
  40fe50:	cbz	w0, 40fe60 <_obstack_memory_used@@Base+0x780>
  40fe54:	cmp	x1, #0x0
  40fe58:	csinv	w0, w0, wzr, eq  // eq = none
  40fe5c:	b	40fe34 <_obstack_memory_used@@Base+0x754>
  40fe60:	cmp	x1, x2
  40fe64:	b.eq	40fe78 <_obstack_memory_used@@Base+0x798>  // b.none
  40fe68:	mov	w0, #0xffffffff            	// #-1
  40fe6c:	cmp	x1, #0x0
  40fe70:	cneg	w0, w0, eq  // eq = none
  40fe74:	b	40fe34 <_obstack_memory_used@@Base+0x754>
  40fe78:	cmp	x10, x9
  40fe7c:	b.gt	40fe68 <_obstack_memory_used@@Base+0x788>
  40fe80:	b.ge	40fe8c <_obstack_memory_used@@Base+0x7ac>  // b.tcont
  40fe84:	mov	w0, #0x1                   	// #1
  40fe88:	b	40fe6c <_obstack_memory_used@@Base+0x78c>
  40fe8c:	cmp	x4, x3
  40fe90:	b.hi	40fe68 <_obstack_memory_used@@Base+0x788>  // b.pmore
  40fe94:	cset	w2, eq  // eq = none
  40fe98:	cmp	w2, #0x0
  40fe9c:	ccmp	x8, x7, #0x0, ne  // ne = any
  40fea0:	b.hi	40fe68 <_obstack_memory_used@@Base+0x788>  // b.pmore
  40fea4:	cmp	x4, x3
  40fea8:	b.cc	40fe84 <_obstack_memory_used@@Base+0x7a4>  // b.lo, b.ul, b.last
  40feac:	cmp	w2, #0x0
  40feb0:	ccmp	x8, x7, #0x2, ne  // ne = any
  40feb4:	b.cs	40fe34 <_obstack_memory_used@@Base+0x754>  // b.hs, b.nlast
  40feb8:	b	40fe84 <_obstack_memory_used@@Base+0x7a4>
  40febc:	mov	w0, #0x1                   	// #1
  40fec0:	bl	410014 <_obstack_memory_used@@Base+0x934>
  40fec4:	mov	w0, #0xfffffffe            	// #-2
  40fec8:	b	40fe34 <_obstack_memory_used@@Base+0x754>
  40fecc:	mov	w0, #0x0                   	// #0
  40fed0:	b	40fe34 <_obstack_memory_used@@Base+0x754>
  40fed4:	stp	x29, x30, [sp, #-32]!
  40fed8:	mov	x29, sp
  40fedc:	str	q0, [sp, #16]
  40fee0:	ldp	x8, x1, [sp, #16]
  40fee4:	str	q1, [sp, #16]
  40fee8:	ldp	x7, x0, [sp, #16]
  40feec:	mrs	x2, fpcr
  40fef0:	ubfx	x10, x1, #48, #15
  40fef4:	lsr	x2, x0, #63
  40fef8:	ubfx	x4, x1, #0, #48
  40fefc:	lsr	x1, x1, #63
  40ff00:	ubfx	x3, x0, #0, #48
  40ff04:	ubfx	x9, x0, #48, #15
  40ff08:	mov	x5, x8
  40ff0c:	mov	x0, #0x7fff                	// #32767
  40ff10:	and	w1, w1, #0xff
  40ff14:	mov	x6, x7
  40ff18:	and	w2, w2, #0xff
  40ff1c:	cmp	x10, x0
  40ff20:	b.ne	40ff2c <_obstack_memory_used@@Base+0x84c>  // b.any
  40ff24:	orr	x11, x4, x8
  40ff28:	cbnz	x11, 40fffc <_obstack_memory_used@@Base+0x91c>
  40ff2c:	cmp	x9, x0
  40ff30:	b.ne	40ff3c <_obstack_memory_used@@Base+0x85c>  // b.any
  40ff34:	orr	x0, x3, x6
  40ff38:	cbnz	x0, 40fffc <_obstack_memory_used@@Base+0x91c>
  40ff3c:	cbnz	x10, 40ff7c <_obstack_memory_used@@Base+0x89c>
  40ff40:	orr	x5, x4, x5
  40ff44:	cmp	x5, #0x0
  40ff48:	cset	w5, eq  // eq = none
  40ff4c:	cbnz	x9, 40ff84 <_obstack_memory_used@@Base+0x8a4>
  40ff50:	orr	x6, x3, x6
  40ff54:	cmp	x6, #0x0
  40ff58:	cset	w0, eq  // eq = none
  40ff5c:	csel	w6, w5, wzr, eq  // eq = none
  40ff60:	cbnz	w6, 41000c <_obstack_memory_used@@Base+0x92c>
  40ff64:	and	x2, x2, #0xff
  40ff68:	cbz	w5, 40ff8c <_obstack_memory_used@@Base+0x8ac>
  40ff6c:	cmp	x2, #0x0
  40ff70:	csinv	w0, w5, wzr, ne  // ne = any
  40ff74:	ldp	x29, x30, [sp], #32
  40ff78:	ret
  40ff7c:	mov	w5, #0x0                   	// #0
  40ff80:	b	40ff4c <_obstack_memory_used@@Base+0x86c>
  40ff84:	mov	w0, #0x0                   	// #0
  40ff88:	b	40ff64 <_obstack_memory_used@@Base+0x884>
  40ff8c:	and	x1, x1, #0xff
  40ff90:	cbz	w0, 40ffa0 <_obstack_memory_used@@Base+0x8c0>
  40ff94:	cmp	x1, #0x0
  40ff98:	csinv	w0, w0, wzr, eq  // eq = none
  40ff9c:	b	40ff74 <_obstack_memory_used@@Base+0x894>
  40ffa0:	cmp	x1, x2
  40ffa4:	b.eq	40ffb8 <_obstack_memory_used@@Base+0x8d8>  // b.none
  40ffa8:	mov	w0, #0xffffffff            	// #-1
  40ffac:	cmp	x1, #0x0
  40ffb0:	cneg	w0, w0, eq  // eq = none
  40ffb4:	b	40ff74 <_obstack_memory_used@@Base+0x894>
  40ffb8:	cmp	x10, x9
  40ffbc:	b.gt	40ffa8 <_obstack_memory_used@@Base+0x8c8>
  40ffc0:	b.ge	40ffcc <_obstack_memory_used@@Base+0x8ec>  // b.tcont
  40ffc4:	mov	w0, #0x1                   	// #1
  40ffc8:	b	40ffac <_obstack_memory_used@@Base+0x8cc>
  40ffcc:	cmp	x4, x3
  40ffd0:	b.hi	40ffa8 <_obstack_memory_used@@Base+0x8c8>  // b.pmore
  40ffd4:	cset	w2, eq  // eq = none
  40ffd8:	cmp	w2, #0x0
  40ffdc:	ccmp	x8, x7, #0x0, ne  // ne = any
  40ffe0:	b.hi	40ffa8 <_obstack_memory_used@@Base+0x8c8>  // b.pmore
  40ffe4:	cmp	x4, x3
  40ffe8:	b.cc	40ffc4 <_obstack_memory_used@@Base+0x8e4>  // b.lo, b.ul, b.last
  40ffec:	cmp	w2, #0x0
  40fff0:	ccmp	x8, x7, #0x2, ne  // ne = any
  40fff4:	b.cs	40ff74 <_obstack_memory_used@@Base+0x894>  // b.hs, b.nlast
  40fff8:	b	40ffc4 <_obstack_memory_used@@Base+0x8e4>
  40fffc:	mov	w0, #0x1                   	// #1
  410000:	bl	410014 <_obstack_memory_used@@Base+0x934>
  410004:	mov	w0, #0x2                   	// #2
  410008:	b	40ff74 <_obstack_memory_used@@Base+0x894>
  41000c:	mov	w0, #0x0                   	// #0
  410010:	b	40ff74 <_obstack_memory_used@@Base+0x894>
  410014:	tbz	w0, #0, 410024 <_obstack_memory_used@@Base+0x944>
  410018:	movi	v1.2s, #0x0
  41001c:	fdiv	s0, s1, s1
  410020:	mrs	x1, fpsr
  410024:	tbz	w0, #1, 410038 <_obstack_memory_used@@Base+0x958>
  410028:	fmov	s1, #1.000000000000000000e+00
  41002c:	movi	v2.2s, #0x0
  410030:	fdiv	s0, s1, s2
  410034:	mrs	x1, fpsr
  410038:	tbz	w0, #2, 410058 <_obstack_memory_used@@Base+0x978>
  41003c:	mov	w1, #0x7f7fffff            	// #2139095039
  410040:	fmov	s1, w1
  410044:	mov	w1, #0xc5ae                	// #50606
  410048:	movk	w1, #0x749d, lsl #16
  41004c:	fmov	s2, w1
  410050:	fadd	s0, s1, s2
  410054:	mrs	x1, fpsr
  410058:	tbz	w0, #3, 410068 <_obstack_memory_used@@Base+0x988>
  41005c:	movi	v1.2s, #0x80, lsl #16
  410060:	fmul	s0, s1, s1
  410064:	mrs	x1, fpsr
  410068:	tbz	w0, #4, 410080 <_obstack_memory_used@@Base+0x9a0>
  41006c:	mov	w0, #0x7f7fffff            	// #2139095039
  410070:	fmov	s2, #1.000000000000000000e+00
  410074:	fmov	s1, w0
  410078:	fsub	s0, s1, s2
  41007c:	mrs	x0, fpsr
  410080:	ret
  410084:	nop
  410088:	stp	x29, x30, [sp, #-64]!
  41008c:	mov	x29, sp
  410090:	stp	x19, x20, [sp, #16]
  410094:	adrp	x20, 425000 <_obstack_memory_used@@Base+0x15920>
  410098:	add	x20, x20, #0xde0
  41009c:	stp	x21, x22, [sp, #32]
  4100a0:	adrp	x21, 425000 <_obstack_memory_used@@Base+0x15920>
  4100a4:	add	x21, x21, #0xdd8
  4100a8:	sub	x20, x20, x21
  4100ac:	mov	w22, w0
  4100b0:	stp	x23, x24, [sp, #48]
  4100b4:	mov	x23, x1
  4100b8:	mov	x24, x2
  4100bc:	bl	4027d0 <mbrtowc@plt-0x40>
  4100c0:	cmp	xzr, x20, asr #3
  4100c4:	b.eq	4100f0 <_obstack_memory_used@@Base+0xa10>  // b.none
  4100c8:	asr	x20, x20, #3
  4100cc:	mov	x19, #0x0                   	// #0
  4100d0:	ldr	x3, [x21, x19, lsl #3]
  4100d4:	mov	x2, x24
  4100d8:	add	x19, x19, #0x1
  4100dc:	mov	x1, x23
  4100e0:	mov	w0, w22
  4100e4:	blr	x3
  4100e8:	cmp	x20, x19
  4100ec:	b.ne	4100d0 <_obstack_memory_used@@Base+0x9f0>  // b.any
  4100f0:	ldp	x19, x20, [sp, #16]
  4100f4:	ldp	x21, x22, [sp, #32]
  4100f8:	ldp	x23, x24, [sp, #48]
  4100fc:	ldp	x29, x30, [sp], #64
  410100:	ret
  410104:	nop
  410108:	ret
  41010c:	nop
  410110:	adrp	x2, 426000 <_obstack_memory_used@@Base+0x16920>
  410114:	mov	x1, #0x0                   	// #0
  410118:	ldr	x2, [x2, #968]
  41011c:	b	402910 <__cxa_atexit@plt>
  410120:	mov	x2, x1
  410124:	mov	x1, x0
  410128:	mov	w0, #0x0                   	// #0
  41012c:	b	402f20 <__xstat@plt>
  410130:	mov	x2, x1
  410134:	mov	w1, w0
  410138:	mov	w0, #0x0                   	// #0
  41013c:	b	402e50 <__fxstat@plt>

Disassembly of section .fini:

0000000000410140 <.fini>:
  410140:	stp	x29, x30, [sp, #-16]!
  410144:	mov	x29, sp
  410148:	ldp	x29, x30, [sp], #16
  41014c:	ret
